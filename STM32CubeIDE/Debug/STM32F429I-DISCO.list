
STM32F429I-DISCO.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001ac  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0001a3f0  080001b0  080001b0  000101b0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00003578  0801a5a0  0801a5a0  0002a5a0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 FontFlashSection 0000097e  0801db18  0801db18  0002db18  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 FontSearchFlashSection 00000014  0801e498  0801e498  0002e498  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 TextFlashSection 00000090  0801e4ac  0801e4ac  0002e4ac  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  6 ExtFlashSection 00036ee0  0801e53c  0801e53c  0002e53c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .ARM.extab    00000000  0805541c  0805541c  00070170  2**0
                  CONTENTS
  8 .ARM          00000008  0805541c  0805541c  0006541c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  9 .preinit_array 00000000  08055424  08055424  00070170  2**0
                  CONTENTS, ALLOC, LOAD, DATA
 10 .init_array   00000014  08055424  08055424  00065424  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 11 .fini_array   00000008  08055438  08055438  00065438  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 12 .data         00000170  20000000  08055440  00070000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 13 .bss          000129c0  20000170  080555b0  00070170  2**2
                  ALLOC
 14 ._user_heap_stack 00001400  20012b30  080555b0  00072b30  2**0
                  ALLOC
 15 .ARM.attributes 00000030  00000000  00000000  00070170  2**0
                  CONTENTS, READONLY
 16 TouchGFX_Framebuffer 0004b000  d0000000  d0000000  00080000  2**2
                  ALLOC
 17 .debug_line   0002d8b3  00000000  00000000  000701a0  2**0
                  CONTENTS, READONLY, DEBUGGING
 18 .debug_info   0008bb85  00000000  00000000  0009da53  2**0
                  CONTENTS, READONLY, DEBUGGING
 19 .debug_abbrev 000106f2  00000000  00000000  001295d8  2**0
                  CONTENTS, READONLY, DEBUGGING
 20 .debug_aranges 000025e8  00000000  00000000  00139cd0  2**3
                  CONTENTS, READONLY, DEBUGGING
 21 .debug_str    0010556b  00000000  00000000  0013c2b8  2**0
                  CONTENTS, READONLY, DEBUGGING
 22 .debug_ranges 00003360  00000000  00000000  00241828  2**3
                  CONTENTS, READONLY, DEBUGGING
 23 .debug_loc    0001aeb1  00000000  00000000  00244b88  2**0
                  CONTENTS, READONLY, DEBUGGING
 24 .debug_macro  0002ea4a  00000000  00000000  0025fa39  2**0
                  CONTENTS, READONLY, DEBUGGING
 25 .comment      000000fa  00000000  00000000  0028e483  2**0
                  CONTENTS, READONLY
 26 .debug_frame  000072f4  00000000  00000000  0028e580  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

080001b0 <__do_global_dtors_aux>:
 80001b0:	b510      	push	{r4, lr}
 80001b2:	4c05      	ldr	r4, [pc, #20]	; (80001c8 <__do_global_dtors_aux+0x18>)
 80001b4:	7823      	ldrb	r3, [r4, #0]
 80001b6:	b933      	cbnz	r3, 80001c6 <__do_global_dtors_aux+0x16>
 80001b8:	4b04      	ldr	r3, [pc, #16]	; (80001cc <__do_global_dtors_aux+0x1c>)
 80001ba:	b113      	cbz	r3, 80001c2 <__do_global_dtors_aux+0x12>
 80001bc:	4804      	ldr	r0, [pc, #16]	; (80001d0 <__do_global_dtors_aux+0x20>)
 80001be:	f3af 8000 	nop.w
 80001c2:	2301      	movs	r3, #1
 80001c4:	7023      	strb	r3, [r4, #0]
 80001c6:	bd10      	pop	{r4, pc}
 80001c8:	20000170 	.word	0x20000170
 80001cc:	00000000 	.word	0x00000000
 80001d0:	0801a588 	.word	0x0801a588

080001d4 <frame_dummy>:
 80001d4:	b508      	push	{r3, lr}
 80001d6:	4b03      	ldr	r3, [pc, #12]	; (80001e4 <frame_dummy+0x10>)
 80001d8:	b11b      	cbz	r3, 80001e2 <frame_dummy+0xe>
 80001da:	4903      	ldr	r1, [pc, #12]	; (80001e8 <frame_dummy+0x14>)
 80001dc:	4803      	ldr	r0, [pc, #12]	; (80001ec <frame_dummy+0x18>)
 80001de:	f3af 8000 	nop.w
 80001e2:	bd08      	pop	{r3, pc}
 80001e4:	00000000 	.word	0x00000000
 80001e8:	20000174 	.word	0x20000174
 80001ec:	0801a588 	.word	0x0801a588

080001f0 <memchr>:
 80001f0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80001f4:	2a10      	cmp	r2, #16
 80001f6:	db2b      	blt.n	8000250 <memchr+0x60>
 80001f8:	f010 0f07 	tst.w	r0, #7
 80001fc:	d008      	beq.n	8000210 <memchr+0x20>
 80001fe:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000202:	3a01      	subs	r2, #1
 8000204:	428b      	cmp	r3, r1
 8000206:	d02d      	beq.n	8000264 <memchr+0x74>
 8000208:	f010 0f07 	tst.w	r0, #7
 800020c:	b342      	cbz	r2, 8000260 <memchr+0x70>
 800020e:	d1f6      	bne.n	80001fe <memchr+0xe>
 8000210:	b4f0      	push	{r4, r5, r6, r7}
 8000212:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000216:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800021a:	f022 0407 	bic.w	r4, r2, #7
 800021e:	f07f 0700 	mvns.w	r7, #0
 8000222:	2300      	movs	r3, #0
 8000224:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000228:	3c08      	subs	r4, #8
 800022a:	ea85 0501 	eor.w	r5, r5, r1
 800022e:	ea86 0601 	eor.w	r6, r6, r1
 8000232:	fa85 f547 	uadd8	r5, r5, r7
 8000236:	faa3 f587 	sel	r5, r3, r7
 800023a:	fa86 f647 	uadd8	r6, r6, r7
 800023e:	faa5 f687 	sel	r6, r5, r7
 8000242:	b98e      	cbnz	r6, 8000268 <memchr+0x78>
 8000244:	d1ee      	bne.n	8000224 <memchr+0x34>
 8000246:	bcf0      	pop	{r4, r5, r6, r7}
 8000248:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800024c:	f002 0207 	and.w	r2, r2, #7
 8000250:	b132      	cbz	r2, 8000260 <memchr+0x70>
 8000252:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000256:	3a01      	subs	r2, #1
 8000258:	ea83 0301 	eor.w	r3, r3, r1
 800025c:	b113      	cbz	r3, 8000264 <memchr+0x74>
 800025e:	d1f8      	bne.n	8000252 <memchr+0x62>
 8000260:	2000      	movs	r0, #0
 8000262:	4770      	bx	lr
 8000264:	3801      	subs	r0, #1
 8000266:	4770      	bx	lr
 8000268:	2d00      	cmp	r5, #0
 800026a:	bf06      	itte	eq
 800026c:	4635      	moveq	r5, r6
 800026e:	3803      	subeq	r0, #3
 8000270:	3807      	subne	r0, #7
 8000272:	f015 0f01 	tst.w	r5, #1
 8000276:	d107      	bne.n	8000288 <memchr+0x98>
 8000278:	3001      	adds	r0, #1
 800027a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800027e:	bf02      	ittt	eq
 8000280:	3001      	addeq	r0, #1
 8000282:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000286:	3001      	addeq	r0, #1
 8000288:	bcf0      	pop	{r4, r5, r6, r7}
 800028a:	3801      	subs	r0, #1
 800028c:	4770      	bx	lr
 800028e:	bf00      	nop

08000290 <__aeabi_drsub>:
 8000290:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
 8000294:	e002      	b.n	800029c <__adddf3>
 8000296:	bf00      	nop

08000298 <__aeabi_dsub>:
 8000298:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

0800029c <__adddf3>:
 800029c:	b530      	push	{r4, r5, lr}
 800029e:	ea4f 0441 	mov.w	r4, r1, lsl #1
 80002a2:	ea4f 0543 	mov.w	r5, r3, lsl #1
 80002a6:	ea94 0f05 	teq	r4, r5
 80002aa:	bf08      	it	eq
 80002ac:	ea90 0f02 	teqeq	r0, r2
 80002b0:	bf1f      	itttt	ne
 80002b2:	ea54 0c00 	orrsne.w	ip, r4, r0
 80002b6:	ea55 0c02 	orrsne.w	ip, r5, r2
 80002ba:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 80002be:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80002c2:	f000 80e2 	beq.w	800048a <__adddf3+0x1ee>
 80002c6:	ea4f 5454 	mov.w	r4, r4, lsr #21
 80002ca:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 80002ce:	bfb8      	it	lt
 80002d0:	426d      	neglt	r5, r5
 80002d2:	dd0c      	ble.n	80002ee <__adddf3+0x52>
 80002d4:	442c      	add	r4, r5
 80002d6:	ea80 0202 	eor.w	r2, r0, r2
 80002da:	ea81 0303 	eor.w	r3, r1, r3
 80002de:	ea82 0000 	eor.w	r0, r2, r0
 80002e2:	ea83 0101 	eor.w	r1, r3, r1
 80002e6:	ea80 0202 	eor.w	r2, r0, r2
 80002ea:	ea81 0303 	eor.w	r3, r1, r3
 80002ee:	2d36      	cmp	r5, #54	; 0x36
 80002f0:	bf88      	it	hi
 80002f2:	bd30      	pophi	{r4, r5, pc}
 80002f4:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 80002f8:	ea4f 3101 	mov.w	r1, r1, lsl #12
 80002fc:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
 8000300:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 8000304:	d002      	beq.n	800030c <__adddf3+0x70>
 8000306:	4240      	negs	r0, r0
 8000308:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 800030c:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
 8000310:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000314:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 8000318:	d002      	beq.n	8000320 <__adddf3+0x84>
 800031a:	4252      	negs	r2, r2
 800031c:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000320:	ea94 0f05 	teq	r4, r5
 8000324:	f000 80a7 	beq.w	8000476 <__adddf3+0x1da>
 8000328:	f1a4 0401 	sub.w	r4, r4, #1
 800032c:	f1d5 0e20 	rsbs	lr, r5, #32
 8000330:	db0d      	blt.n	800034e <__adddf3+0xb2>
 8000332:	fa02 fc0e 	lsl.w	ip, r2, lr
 8000336:	fa22 f205 	lsr.w	r2, r2, r5
 800033a:	1880      	adds	r0, r0, r2
 800033c:	f141 0100 	adc.w	r1, r1, #0
 8000340:	fa03 f20e 	lsl.w	r2, r3, lr
 8000344:	1880      	adds	r0, r0, r2
 8000346:	fa43 f305 	asr.w	r3, r3, r5
 800034a:	4159      	adcs	r1, r3
 800034c:	e00e      	b.n	800036c <__adddf3+0xd0>
 800034e:	f1a5 0520 	sub.w	r5, r5, #32
 8000352:	f10e 0e20 	add.w	lr, lr, #32
 8000356:	2a01      	cmp	r2, #1
 8000358:	fa03 fc0e 	lsl.w	ip, r3, lr
 800035c:	bf28      	it	cs
 800035e:	f04c 0c02 	orrcs.w	ip, ip, #2
 8000362:	fa43 f305 	asr.w	r3, r3, r5
 8000366:	18c0      	adds	r0, r0, r3
 8000368:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 800036c:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000370:	d507      	bpl.n	8000382 <__adddf3+0xe6>
 8000372:	f04f 0e00 	mov.w	lr, #0
 8000376:	f1dc 0c00 	rsbs	ip, ip, #0
 800037a:	eb7e 0000 	sbcs.w	r0, lr, r0
 800037e:	eb6e 0101 	sbc.w	r1, lr, r1
 8000382:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
 8000386:	d31b      	bcc.n	80003c0 <__adddf3+0x124>
 8000388:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
 800038c:	d30c      	bcc.n	80003a8 <__adddf3+0x10c>
 800038e:	0849      	lsrs	r1, r1, #1
 8000390:	ea5f 0030 	movs.w	r0, r0, rrx
 8000394:	ea4f 0c3c 	mov.w	ip, ip, rrx
 8000398:	f104 0401 	add.w	r4, r4, #1
 800039c:	ea4f 5244 	mov.w	r2, r4, lsl #21
 80003a0:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
 80003a4:	f080 809a 	bcs.w	80004dc <__adddf3+0x240>
 80003a8:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 80003ac:	bf08      	it	eq
 80003ae:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80003b2:	f150 0000 	adcs.w	r0, r0, #0
 80003b6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80003ba:	ea41 0105 	orr.w	r1, r1, r5
 80003be:	bd30      	pop	{r4, r5, pc}
 80003c0:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 80003c4:	4140      	adcs	r0, r0
 80003c6:	eb41 0101 	adc.w	r1, r1, r1
 80003ca:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 80003ce:	f1a4 0401 	sub.w	r4, r4, #1
 80003d2:	d1e9      	bne.n	80003a8 <__adddf3+0x10c>
 80003d4:	f091 0f00 	teq	r1, #0
 80003d8:	bf04      	itt	eq
 80003da:	4601      	moveq	r1, r0
 80003dc:	2000      	moveq	r0, #0
 80003de:	fab1 f381 	clz	r3, r1
 80003e2:	bf08      	it	eq
 80003e4:	3320      	addeq	r3, #32
 80003e6:	f1a3 030b 	sub.w	r3, r3, #11
 80003ea:	f1b3 0220 	subs.w	r2, r3, #32
 80003ee:	da0c      	bge.n	800040a <__adddf3+0x16e>
 80003f0:	320c      	adds	r2, #12
 80003f2:	dd08      	ble.n	8000406 <__adddf3+0x16a>
 80003f4:	f102 0c14 	add.w	ip, r2, #20
 80003f8:	f1c2 020c 	rsb	r2, r2, #12
 80003fc:	fa01 f00c 	lsl.w	r0, r1, ip
 8000400:	fa21 f102 	lsr.w	r1, r1, r2
 8000404:	e00c      	b.n	8000420 <__adddf3+0x184>
 8000406:	f102 0214 	add.w	r2, r2, #20
 800040a:	bfd8      	it	le
 800040c:	f1c2 0c20 	rsble	ip, r2, #32
 8000410:	fa01 f102 	lsl.w	r1, r1, r2
 8000414:	fa20 fc0c 	lsr.w	ip, r0, ip
 8000418:	bfdc      	itt	le
 800041a:	ea41 010c 	orrle.w	r1, r1, ip
 800041e:	4090      	lslle	r0, r2
 8000420:	1ae4      	subs	r4, r4, r3
 8000422:	bfa2      	ittt	ge
 8000424:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 8000428:	4329      	orrge	r1, r5
 800042a:	bd30      	popge	{r4, r5, pc}
 800042c:	ea6f 0404 	mvn.w	r4, r4
 8000430:	3c1f      	subs	r4, #31
 8000432:	da1c      	bge.n	800046e <__adddf3+0x1d2>
 8000434:	340c      	adds	r4, #12
 8000436:	dc0e      	bgt.n	8000456 <__adddf3+0x1ba>
 8000438:	f104 0414 	add.w	r4, r4, #20
 800043c:	f1c4 0220 	rsb	r2, r4, #32
 8000440:	fa20 f004 	lsr.w	r0, r0, r4
 8000444:	fa01 f302 	lsl.w	r3, r1, r2
 8000448:	ea40 0003 	orr.w	r0, r0, r3
 800044c:	fa21 f304 	lsr.w	r3, r1, r4
 8000450:	ea45 0103 	orr.w	r1, r5, r3
 8000454:	bd30      	pop	{r4, r5, pc}
 8000456:	f1c4 040c 	rsb	r4, r4, #12
 800045a:	f1c4 0220 	rsb	r2, r4, #32
 800045e:	fa20 f002 	lsr.w	r0, r0, r2
 8000462:	fa01 f304 	lsl.w	r3, r1, r4
 8000466:	ea40 0003 	orr.w	r0, r0, r3
 800046a:	4629      	mov	r1, r5
 800046c:	bd30      	pop	{r4, r5, pc}
 800046e:	fa21 f004 	lsr.w	r0, r1, r4
 8000472:	4629      	mov	r1, r5
 8000474:	bd30      	pop	{r4, r5, pc}
 8000476:	f094 0f00 	teq	r4, #0
 800047a:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
 800047e:	bf06      	itte	eq
 8000480:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
 8000484:	3401      	addeq	r4, #1
 8000486:	3d01      	subne	r5, #1
 8000488:	e74e      	b.n	8000328 <__adddf3+0x8c>
 800048a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800048e:	bf18      	it	ne
 8000490:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8000494:	d029      	beq.n	80004ea <__adddf3+0x24e>
 8000496:	ea94 0f05 	teq	r4, r5
 800049a:	bf08      	it	eq
 800049c:	ea90 0f02 	teqeq	r0, r2
 80004a0:	d005      	beq.n	80004ae <__adddf3+0x212>
 80004a2:	ea54 0c00 	orrs.w	ip, r4, r0
 80004a6:	bf04      	itt	eq
 80004a8:	4619      	moveq	r1, r3
 80004aa:	4610      	moveq	r0, r2
 80004ac:	bd30      	pop	{r4, r5, pc}
 80004ae:	ea91 0f03 	teq	r1, r3
 80004b2:	bf1e      	ittt	ne
 80004b4:	2100      	movne	r1, #0
 80004b6:	2000      	movne	r0, #0
 80004b8:	bd30      	popne	{r4, r5, pc}
 80004ba:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 80004be:	d105      	bne.n	80004cc <__adddf3+0x230>
 80004c0:	0040      	lsls	r0, r0, #1
 80004c2:	4149      	adcs	r1, r1
 80004c4:	bf28      	it	cs
 80004c6:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
 80004ca:	bd30      	pop	{r4, r5, pc}
 80004cc:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
 80004d0:	bf3c      	itt	cc
 80004d2:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
 80004d6:	bd30      	popcc	{r4, r5, pc}
 80004d8:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80004dc:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
 80004e0:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 80004e4:	f04f 0000 	mov.w	r0, #0
 80004e8:	bd30      	pop	{r4, r5, pc}
 80004ea:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80004ee:	bf1a      	itte	ne
 80004f0:	4619      	movne	r1, r3
 80004f2:	4610      	movne	r0, r2
 80004f4:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 80004f8:	bf1c      	itt	ne
 80004fa:	460b      	movne	r3, r1
 80004fc:	4602      	movne	r2, r0
 80004fe:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8000502:	bf06      	itte	eq
 8000504:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 8000508:	ea91 0f03 	teqeq	r1, r3
 800050c:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
 8000510:	bd30      	pop	{r4, r5, pc}
 8000512:	bf00      	nop

08000514 <__aeabi_ui2d>:
 8000514:	f090 0f00 	teq	r0, #0
 8000518:	bf04      	itt	eq
 800051a:	2100      	moveq	r1, #0
 800051c:	4770      	bxeq	lr
 800051e:	b530      	push	{r4, r5, lr}
 8000520:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000524:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000528:	f04f 0500 	mov.w	r5, #0
 800052c:	f04f 0100 	mov.w	r1, #0
 8000530:	e750      	b.n	80003d4 <__adddf3+0x138>
 8000532:	bf00      	nop

08000534 <__aeabi_i2d>:
 8000534:	f090 0f00 	teq	r0, #0
 8000538:	bf04      	itt	eq
 800053a:	2100      	moveq	r1, #0
 800053c:	4770      	bxeq	lr
 800053e:	b530      	push	{r4, r5, lr}
 8000540:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000544:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000548:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
 800054c:	bf48      	it	mi
 800054e:	4240      	negmi	r0, r0
 8000550:	f04f 0100 	mov.w	r1, #0
 8000554:	e73e      	b.n	80003d4 <__adddf3+0x138>
 8000556:	bf00      	nop

08000558 <__aeabi_f2d>:
 8000558:	0042      	lsls	r2, r0, #1
 800055a:	ea4f 01e2 	mov.w	r1, r2, asr #3
 800055e:	ea4f 0131 	mov.w	r1, r1, rrx
 8000562:	ea4f 7002 	mov.w	r0, r2, lsl #28
 8000566:	bf1f      	itttt	ne
 8000568:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
 800056c:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 8000570:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
 8000574:	4770      	bxne	lr
 8000576:	f032 427f 	bics.w	r2, r2, #4278190080	; 0xff000000
 800057a:	bf08      	it	eq
 800057c:	4770      	bxeq	lr
 800057e:	f093 4f7f 	teq	r3, #4278190080	; 0xff000000
 8000582:	bf04      	itt	eq
 8000584:	f441 2100 	orreq.w	r1, r1, #524288	; 0x80000
 8000588:	4770      	bxeq	lr
 800058a:	b530      	push	{r4, r5, lr}
 800058c:	f44f 7460 	mov.w	r4, #896	; 0x380
 8000590:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000594:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8000598:	e71c      	b.n	80003d4 <__adddf3+0x138>
 800059a:	bf00      	nop

0800059c <__aeabi_ul2d>:
 800059c:	ea50 0201 	orrs.w	r2, r0, r1
 80005a0:	bf08      	it	eq
 80005a2:	4770      	bxeq	lr
 80005a4:	b530      	push	{r4, r5, lr}
 80005a6:	f04f 0500 	mov.w	r5, #0
 80005aa:	e00a      	b.n	80005c2 <__aeabi_l2d+0x16>

080005ac <__aeabi_l2d>:
 80005ac:	ea50 0201 	orrs.w	r2, r0, r1
 80005b0:	bf08      	it	eq
 80005b2:	4770      	bxeq	lr
 80005b4:	b530      	push	{r4, r5, lr}
 80005b6:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
 80005ba:	d502      	bpl.n	80005c2 <__aeabi_l2d+0x16>
 80005bc:	4240      	negs	r0, r0
 80005be:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80005c2:	f44f 6480 	mov.w	r4, #1024	; 0x400
 80005c6:	f104 0432 	add.w	r4, r4, #50	; 0x32
 80005ca:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 80005ce:	f43f aed8 	beq.w	8000382 <__adddf3+0xe6>
 80005d2:	f04f 0203 	mov.w	r2, #3
 80005d6:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80005da:	bf18      	it	ne
 80005dc:	3203      	addne	r2, #3
 80005de:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80005e2:	bf18      	it	ne
 80005e4:	3203      	addne	r2, #3
 80005e6:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 80005ea:	f1c2 0320 	rsb	r3, r2, #32
 80005ee:	fa00 fc03 	lsl.w	ip, r0, r3
 80005f2:	fa20 f002 	lsr.w	r0, r0, r2
 80005f6:	fa01 fe03 	lsl.w	lr, r1, r3
 80005fa:	ea40 000e 	orr.w	r0, r0, lr
 80005fe:	fa21 f102 	lsr.w	r1, r1, r2
 8000602:	4414      	add	r4, r2
 8000604:	e6bd      	b.n	8000382 <__adddf3+0xe6>
 8000606:	bf00      	nop

08000608 <__aeabi_dmul>:
 8000608:	b570      	push	{r4, r5, r6, lr}
 800060a:	f04f 0cff 	mov.w	ip, #255	; 0xff
 800060e:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 8000612:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 8000616:	bf1d      	ittte	ne
 8000618:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 800061c:	ea94 0f0c 	teqne	r4, ip
 8000620:	ea95 0f0c 	teqne	r5, ip
 8000624:	f000 f8de 	bleq	80007e4 <__aeabi_dmul+0x1dc>
 8000628:	442c      	add	r4, r5
 800062a:	ea81 0603 	eor.w	r6, r1, r3
 800062e:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 8000632:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 8000636:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 800063a:	bf18      	it	ne
 800063c:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 8000640:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000644:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8000648:	d038      	beq.n	80006bc <__aeabi_dmul+0xb4>
 800064a:	fba0 ce02 	umull	ip, lr, r0, r2
 800064e:	f04f 0500 	mov.w	r5, #0
 8000652:	fbe1 e502 	umlal	lr, r5, r1, r2
 8000656:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
 800065a:	fbe0 e503 	umlal	lr, r5, r0, r3
 800065e:	f04f 0600 	mov.w	r6, #0
 8000662:	fbe1 5603 	umlal	r5, r6, r1, r3
 8000666:	f09c 0f00 	teq	ip, #0
 800066a:	bf18      	it	ne
 800066c:	f04e 0e01 	orrne.w	lr, lr, #1
 8000670:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
 8000674:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
 8000678:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
 800067c:	d204      	bcs.n	8000688 <__aeabi_dmul+0x80>
 800067e:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 8000682:	416d      	adcs	r5, r5
 8000684:	eb46 0606 	adc.w	r6, r6, r6
 8000688:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 800068c:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 8000690:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 8000694:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 8000698:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 800069c:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 80006a0:	bf88      	it	hi
 80006a2:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 80006a6:	d81e      	bhi.n	80006e6 <__aeabi_dmul+0xde>
 80006a8:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
 80006ac:	bf08      	it	eq
 80006ae:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 80006b2:	f150 0000 	adcs.w	r0, r0, #0
 80006b6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80006ba:	bd70      	pop	{r4, r5, r6, pc}
 80006bc:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
 80006c0:	ea46 0101 	orr.w	r1, r6, r1
 80006c4:	ea40 0002 	orr.w	r0, r0, r2
 80006c8:	ea81 0103 	eor.w	r1, r1, r3
 80006cc:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 80006d0:	bfc2      	ittt	gt
 80006d2:	ebd4 050c 	rsbsgt	r5, r4, ip
 80006d6:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80006da:	bd70      	popgt	{r4, r5, r6, pc}
 80006dc:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80006e0:	f04f 0e00 	mov.w	lr, #0
 80006e4:	3c01      	subs	r4, #1
 80006e6:	f300 80ab 	bgt.w	8000840 <__aeabi_dmul+0x238>
 80006ea:	f114 0f36 	cmn.w	r4, #54	; 0x36
 80006ee:	bfde      	ittt	le
 80006f0:	2000      	movle	r0, #0
 80006f2:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
 80006f6:	bd70      	pople	{r4, r5, r6, pc}
 80006f8:	f1c4 0400 	rsb	r4, r4, #0
 80006fc:	3c20      	subs	r4, #32
 80006fe:	da35      	bge.n	800076c <__aeabi_dmul+0x164>
 8000700:	340c      	adds	r4, #12
 8000702:	dc1b      	bgt.n	800073c <__aeabi_dmul+0x134>
 8000704:	f104 0414 	add.w	r4, r4, #20
 8000708:	f1c4 0520 	rsb	r5, r4, #32
 800070c:	fa00 f305 	lsl.w	r3, r0, r5
 8000710:	fa20 f004 	lsr.w	r0, r0, r4
 8000714:	fa01 f205 	lsl.w	r2, r1, r5
 8000718:	ea40 0002 	orr.w	r0, r0, r2
 800071c:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
 8000720:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8000724:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 8000728:	fa21 f604 	lsr.w	r6, r1, r4
 800072c:	eb42 0106 	adc.w	r1, r2, r6
 8000730:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000734:	bf08      	it	eq
 8000736:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800073a:	bd70      	pop	{r4, r5, r6, pc}
 800073c:	f1c4 040c 	rsb	r4, r4, #12
 8000740:	f1c4 0520 	rsb	r5, r4, #32
 8000744:	fa00 f304 	lsl.w	r3, r0, r4
 8000748:	fa20 f005 	lsr.w	r0, r0, r5
 800074c:	fa01 f204 	lsl.w	r2, r1, r4
 8000750:	ea40 0002 	orr.w	r0, r0, r2
 8000754:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000758:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 800075c:	f141 0100 	adc.w	r1, r1, #0
 8000760:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000764:	bf08      	it	eq
 8000766:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800076a:	bd70      	pop	{r4, r5, r6, pc}
 800076c:	f1c4 0520 	rsb	r5, r4, #32
 8000770:	fa00 f205 	lsl.w	r2, r0, r5
 8000774:	ea4e 0e02 	orr.w	lr, lr, r2
 8000778:	fa20 f304 	lsr.w	r3, r0, r4
 800077c:	fa01 f205 	lsl.w	r2, r1, r5
 8000780:	ea43 0302 	orr.w	r3, r3, r2
 8000784:	fa21 f004 	lsr.w	r0, r1, r4
 8000788:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 800078c:	fa21 f204 	lsr.w	r2, r1, r4
 8000790:	ea20 0002 	bic.w	r0, r0, r2
 8000794:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 8000798:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 800079c:	bf08      	it	eq
 800079e:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80007a2:	bd70      	pop	{r4, r5, r6, pc}
 80007a4:	f094 0f00 	teq	r4, #0
 80007a8:	d10f      	bne.n	80007ca <__aeabi_dmul+0x1c2>
 80007aa:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
 80007ae:	0040      	lsls	r0, r0, #1
 80007b0:	eb41 0101 	adc.w	r1, r1, r1
 80007b4:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 80007b8:	bf08      	it	eq
 80007ba:	3c01      	subeq	r4, #1
 80007bc:	d0f7      	beq.n	80007ae <__aeabi_dmul+0x1a6>
 80007be:	ea41 0106 	orr.w	r1, r1, r6
 80007c2:	f095 0f00 	teq	r5, #0
 80007c6:	bf18      	it	ne
 80007c8:	4770      	bxne	lr
 80007ca:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
 80007ce:	0052      	lsls	r2, r2, #1
 80007d0:	eb43 0303 	adc.w	r3, r3, r3
 80007d4:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
 80007d8:	bf08      	it	eq
 80007da:	3d01      	subeq	r5, #1
 80007dc:	d0f7      	beq.n	80007ce <__aeabi_dmul+0x1c6>
 80007de:	ea43 0306 	orr.w	r3, r3, r6
 80007e2:	4770      	bx	lr
 80007e4:	ea94 0f0c 	teq	r4, ip
 80007e8:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80007ec:	bf18      	it	ne
 80007ee:	ea95 0f0c 	teqne	r5, ip
 80007f2:	d00c      	beq.n	800080e <__aeabi_dmul+0x206>
 80007f4:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80007f8:	bf18      	it	ne
 80007fa:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80007fe:	d1d1      	bne.n	80007a4 <__aeabi_dmul+0x19c>
 8000800:	ea81 0103 	eor.w	r1, r1, r3
 8000804:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000808:	f04f 0000 	mov.w	r0, #0
 800080c:	bd70      	pop	{r4, r5, r6, pc}
 800080e:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000812:	bf06      	itte	eq
 8000814:	4610      	moveq	r0, r2
 8000816:	4619      	moveq	r1, r3
 8000818:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800081c:	d019      	beq.n	8000852 <__aeabi_dmul+0x24a>
 800081e:	ea94 0f0c 	teq	r4, ip
 8000822:	d102      	bne.n	800082a <__aeabi_dmul+0x222>
 8000824:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 8000828:	d113      	bne.n	8000852 <__aeabi_dmul+0x24a>
 800082a:	ea95 0f0c 	teq	r5, ip
 800082e:	d105      	bne.n	800083c <__aeabi_dmul+0x234>
 8000830:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 8000834:	bf1c      	itt	ne
 8000836:	4610      	movne	r0, r2
 8000838:	4619      	movne	r1, r3
 800083a:	d10a      	bne.n	8000852 <__aeabi_dmul+0x24a>
 800083c:	ea81 0103 	eor.w	r1, r1, r3
 8000840:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000844:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000848:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 800084c:	f04f 0000 	mov.w	r0, #0
 8000850:	bd70      	pop	{r4, r5, r6, pc}
 8000852:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000856:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
 800085a:	bd70      	pop	{r4, r5, r6, pc}

0800085c <__aeabi_ddiv>:
 800085c:	b570      	push	{r4, r5, r6, lr}
 800085e:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8000862:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 8000866:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800086a:	bf1d      	ittte	ne
 800086c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8000870:	ea94 0f0c 	teqne	r4, ip
 8000874:	ea95 0f0c 	teqne	r5, ip
 8000878:	f000 f8a7 	bleq	80009ca <__aeabi_ddiv+0x16e>
 800087c:	eba4 0405 	sub.w	r4, r4, r5
 8000880:	ea81 0e03 	eor.w	lr, r1, r3
 8000884:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000888:	ea4f 3101 	mov.w	r1, r1, lsl #12
 800088c:	f000 8088 	beq.w	80009a0 <__aeabi_ddiv+0x144>
 8000890:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000894:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
 8000898:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 800089c:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 80008a0:	ea4f 2202 	mov.w	r2, r2, lsl #8
 80008a4:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 80008a8:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 80008ac:	ea4f 2600 	mov.w	r6, r0, lsl #8
 80008b0:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
 80008b4:	429d      	cmp	r5, r3
 80008b6:	bf08      	it	eq
 80008b8:	4296      	cmpeq	r6, r2
 80008ba:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
 80008be:	f504 7440 	add.w	r4, r4, #768	; 0x300
 80008c2:	d202      	bcs.n	80008ca <__aeabi_ddiv+0x6e>
 80008c4:	085b      	lsrs	r3, r3, #1
 80008c6:	ea4f 0232 	mov.w	r2, r2, rrx
 80008ca:	1ab6      	subs	r6, r6, r2
 80008cc:	eb65 0503 	sbc.w	r5, r5, r3
 80008d0:	085b      	lsrs	r3, r3, #1
 80008d2:	ea4f 0232 	mov.w	r2, r2, rrx
 80008d6:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
 80008da:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
 80008de:	ebb6 0e02 	subs.w	lr, r6, r2
 80008e2:	eb75 0e03 	sbcs.w	lr, r5, r3
 80008e6:	bf22      	ittt	cs
 80008e8:	1ab6      	subcs	r6, r6, r2
 80008ea:	4675      	movcs	r5, lr
 80008ec:	ea40 000c 	orrcs.w	r0, r0, ip
 80008f0:	085b      	lsrs	r3, r3, #1
 80008f2:	ea4f 0232 	mov.w	r2, r2, rrx
 80008f6:	ebb6 0e02 	subs.w	lr, r6, r2
 80008fa:	eb75 0e03 	sbcs.w	lr, r5, r3
 80008fe:	bf22      	ittt	cs
 8000900:	1ab6      	subcs	r6, r6, r2
 8000902:	4675      	movcs	r5, lr
 8000904:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 8000908:	085b      	lsrs	r3, r3, #1
 800090a:	ea4f 0232 	mov.w	r2, r2, rrx
 800090e:	ebb6 0e02 	subs.w	lr, r6, r2
 8000912:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000916:	bf22      	ittt	cs
 8000918:	1ab6      	subcs	r6, r6, r2
 800091a:	4675      	movcs	r5, lr
 800091c:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8000920:	085b      	lsrs	r3, r3, #1
 8000922:	ea4f 0232 	mov.w	r2, r2, rrx
 8000926:	ebb6 0e02 	subs.w	lr, r6, r2
 800092a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800092e:	bf22      	ittt	cs
 8000930:	1ab6      	subcs	r6, r6, r2
 8000932:	4675      	movcs	r5, lr
 8000934:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8000938:	ea55 0e06 	orrs.w	lr, r5, r6
 800093c:	d018      	beq.n	8000970 <__aeabi_ddiv+0x114>
 800093e:	ea4f 1505 	mov.w	r5, r5, lsl #4
 8000942:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 8000946:	ea4f 1606 	mov.w	r6, r6, lsl #4
 800094a:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 800094e:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 8000952:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8000956:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 800095a:	d1c0      	bne.n	80008de <__aeabi_ddiv+0x82>
 800095c:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000960:	d10b      	bne.n	800097a <__aeabi_ddiv+0x11e>
 8000962:	ea41 0100 	orr.w	r1, r1, r0
 8000966:	f04f 0000 	mov.w	r0, #0
 800096a:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
 800096e:	e7b6      	b.n	80008de <__aeabi_ddiv+0x82>
 8000970:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000974:	bf04      	itt	eq
 8000976:	4301      	orreq	r1, r0
 8000978:	2000      	moveq	r0, #0
 800097a:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 800097e:	bf88      	it	hi
 8000980:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 8000984:	f63f aeaf 	bhi.w	80006e6 <__aeabi_dmul+0xde>
 8000988:	ebb5 0c03 	subs.w	ip, r5, r3
 800098c:	bf04      	itt	eq
 800098e:	ebb6 0c02 	subseq.w	ip, r6, r2
 8000992:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 8000996:	f150 0000 	adcs.w	r0, r0, #0
 800099a:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 800099e:	bd70      	pop	{r4, r5, r6, pc}
 80009a0:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
 80009a4:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 80009a8:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 80009ac:	bfc2      	ittt	gt
 80009ae:	ebd4 050c 	rsbsgt	r5, r4, ip
 80009b2:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80009b6:	bd70      	popgt	{r4, r5, r6, pc}
 80009b8:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80009bc:	f04f 0e00 	mov.w	lr, #0
 80009c0:	3c01      	subs	r4, #1
 80009c2:	e690      	b.n	80006e6 <__aeabi_dmul+0xde>
 80009c4:	ea45 0e06 	orr.w	lr, r5, r6
 80009c8:	e68d      	b.n	80006e6 <__aeabi_dmul+0xde>
 80009ca:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80009ce:	ea94 0f0c 	teq	r4, ip
 80009d2:	bf08      	it	eq
 80009d4:	ea95 0f0c 	teqeq	r5, ip
 80009d8:	f43f af3b 	beq.w	8000852 <__aeabi_dmul+0x24a>
 80009dc:	ea94 0f0c 	teq	r4, ip
 80009e0:	d10a      	bne.n	80009f8 <__aeabi_ddiv+0x19c>
 80009e2:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80009e6:	f47f af34 	bne.w	8000852 <__aeabi_dmul+0x24a>
 80009ea:	ea95 0f0c 	teq	r5, ip
 80009ee:	f47f af25 	bne.w	800083c <__aeabi_dmul+0x234>
 80009f2:	4610      	mov	r0, r2
 80009f4:	4619      	mov	r1, r3
 80009f6:	e72c      	b.n	8000852 <__aeabi_dmul+0x24a>
 80009f8:	ea95 0f0c 	teq	r5, ip
 80009fc:	d106      	bne.n	8000a0c <__aeabi_ddiv+0x1b0>
 80009fe:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000a02:	f43f aefd 	beq.w	8000800 <__aeabi_dmul+0x1f8>
 8000a06:	4610      	mov	r0, r2
 8000a08:	4619      	mov	r1, r3
 8000a0a:	e722      	b.n	8000852 <__aeabi_dmul+0x24a>
 8000a0c:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000a10:	bf18      	it	ne
 8000a12:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000a16:	f47f aec5 	bne.w	80007a4 <__aeabi_dmul+0x19c>
 8000a1a:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 8000a1e:	f47f af0d 	bne.w	800083c <__aeabi_dmul+0x234>
 8000a22:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 8000a26:	f47f aeeb 	bne.w	8000800 <__aeabi_dmul+0x1f8>
 8000a2a:	e712      	b.n	8000852 <__aeabi_dmul+0x24a>

08000a2c <__aeabi_d2iz>:
 8000a2c:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000a30:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
 8000a34:	d215      	bcs.n	8000a62 <__aeabi_d2iz+0x36>
 8000a36:	d511      	bpl.n	8000a5c <__aeabi_d2iz+0x30>
 8000a38:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
 8000a3c:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000a40:	d912      	bls.n	8000a68 <__aeabi_d2iz+0x3c>
 8000a42:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000a46:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8000a4a:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000a4e:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8000a52:	fa23 f002 	lsr.w	r0, r3, r2
 8000a56:	bf18      	it	ne
 8000a58:	4240      	negne	r0, r0
 8000a5a:	4770      	bx	lr
 8000a5c:	f04f 0000 	mov.w	r0, #0
 8000a60:	4770      	bx	lr
 8000a62:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000a66:	d105      	bne.n	8000a74 <__aeabi_d2iz+0x48>
 8000a68:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
 8000a6c:	bf08      	it	eq
 8000a6e:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
 8000a72:	4770      	bx	lr
 8000a74:	f04f 0000 	mov.w	r0, #0
 8000a78:	4770      	bx	lr
 8000a7a:	bf00      	nop

08000a7c <__aeabi_uldivmod>:
 8000a7c:	b953      	cbnz	r3, 8000a94 <__aeabi_uldivmod+0x18>
 8000a7e:	b94a      	cbnz	r2, 8000a94 <__aeabi_uldivmod+0x18>
 8000a80:	2900      	cmp	r1, #0
 8000a82:	bf08      	it	eq
 8000a84:	2800      	cmpeq	r0, #0
 8000a86:	bf1c      	itt	ne
 8000a88:	f04f 31ff 	movne.w	r1, #4294967295
 8000a8c:	f04f 30ff 	movne.w	r0, #4294967295
 8000a90:	f000 b972 	b.w	8000d78 <__aeabi_idiv0>
 8000a94:	f1ad 0c08 	sub.w	ip, sp, #8
 8000a98:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 8000a9c:	f000 f806 	bl	8000aac <__udivmoddi4>
 8000aa0:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000aa4:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8000aa8:	b004      	add	sp, #16
 8000aaa:	4770      	bx	lr

08000aac <__udivmoddi4>:
 8000aac:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000ab0:	9e08      	ldr	r6, [sp, #32]
 8000ab2:	4604      	mov	r4, r0
 8000ab4:	4688      	mov	r8, r1
 8000ab6:	2b00      	cmp	r3, #0
 8000ab8:	d14b      	bne.n	8000b52 <__udivmoddi4+0xa6>
 8000aba:	428a      	cmp	r2, r1
 8000abc:	4615      	mov	r5, r2
 8000abe:	d967      	bls.n	8000b90 <__udivmoddi4+0xe4>
 8000ac0:	fab2 f282 	clz	r2, r2
 8000ac4:	b14a      	cbz	r2, 8000ada <__udivmoddi4+0x2e>
 8000ac6:	f1c2 0720 	rsb	r7, r2, #32
 8000aca:	fa01 f302 	lsl.w	r3, r1, r2
 8000ace:	fa20 f707 	lsr.w	r7, r0, r7
 8000ad2:	4095      	lsls	r5, r2
 8000ad4:	ea47 0803 	orr.w	r8, r7, r3
 8000ad8:	4094      	lsls	r4, r2
 8000ada:	ea4f 4e15 	mov.w	lr, r5, lsr #16
 8000ade:	0c23      	lsrs	r3, r4, #16
 8000ae0:	fbb8 f7fe 	udiv	r7, r8, lr
 8000ae4:	fa1f fc85 	uxth.w	ip, r5
 8000ae8:	fb0e 8817 	mls	r8, lr, r7, r8
 8000aec:	ea43 4308 	orr.w	r3, r3, r8, lsl #16
 8000af0:	fb07 f10c 	mul.w	r1, r7, ip
 8000af4:	4299      	cmp	r1, r3
 8000af6:	d909      	bls.n	8000b0c <__udivmoddi4+0x60>
 8000af8:	18eb      	adds	r3, r5, r3
 8000afa:	f107 30ff 	add.w	r0, r7, #4294967295
 8000afe:	f080 811b 	bcs.w	8000d38 <__udivmoddi4+0x28c>
 8000b02:	4299      	cmp	r1, r3
 8000b04:	f240 8118 	bls.w	8000d38 <__udivmoddi4+0x28c>
 8000b08:	3f02      	subs	r7, #2
 8000b0a:	442b      	add	r3, r5
 8000b0c:	1a5b      	subs	r3, r3, r1
 8000b0e:	b2a4      	uxth	r4, r4
 8000b10:	fbb3 f0fe 	udiv	r0, r3, lr
 8000b14:	fb0e 3310 	mls	r3, lr, r0, r3
 8000b18:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
 8000b1c:	fb00 fc0c 	mul.w	ip, r0, ip
 8000b20:	45a4      	cmp	ip, r4
 8000b22:	d909      	bls.n	8000b38 <__udivmoddi4+0x8c>
 8000b24:	192c      	adds	r4, r5, r4
 8000b26:	f100 33ff 	add.w	r3, r0, #4294967295
 8000b2a:	f080 8107 	bcs.w	8000d3c <__udivmoddi4+0x290>
 8000b2e:	45a4      	cmp	ip, r4
 8000b30:	f240 8104 	bls.w	8000d3c <__udivmoddi4+0x290>
 8000b34:	3802      	subs	r0, #2
 8000b36:	442c      	add	r4, r5
 8000b38:	ea40 4007 	orr.w	r0, r0, r7, lsl #16
 8000b3c:	eba4 040c 	sub.w	r4, r4, ip
 8000b40:	2700      	movs	r7, #0
 8000b42:	b11e      	cbz	r6, 8000b4c <__udivmoddi4+0xa0>
 8000b44:	40d4      	lsrs	r4, r2
 8000b46:	2300      	movs	r3, #0
 8000b48:	e9c6 4300 	strd	r4, r3, [r6]
 8000b4c:	4639      	mov	r1, r7
 8000b4e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000b52:	428b      	cmp	r3, r1
 8000b54:	d909      	bls.n	8000b6a <__udivmoddi4+0xbe>
 8000b56:	2e00      	cmp	r6, #0
 8000b58:	f000 80eb 	beq.w	8000d32 <__udivmoddi4+0x286>
 8000b5c:	2700      	movs	r7, #0
 8000b5e:	e9c6 0100 	strd	r0, r1, [r6]
 8000b62:	4638      	mov	r0, r7
 8000b64:	4639      	mov	r1, r7
 8000b66:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000b6a:	fab3 f783 	clz	r7, r3
 8000b6e:	2f00      	cmp	r7, #0
 8000b70:	d147      	bne.n	8000c02 <__udivmoddi4+0x156>
 8000b72:	428b      	cmp	r3, r1
 8000b74:	d302      	bcc.n	8000b7c <__udivmoddi4+0xd0>
 8000b76:	4282      	cmp	r2, r0
 8000b78:	f200 80fa 	bhi.w	8000d70 <__udivmoddi4+0x2c4>
 8000b7c:	1a84      	subs	r4, r0, r2
 8000b7e:	eb61 0303 	sbc.w	r3, r1, r3
 8000b82:	2001      	movs	r0, #1
 8000b84:	4698      	mov	r8, r3
 8000b86:	2e00      	cmp	r6, #0
 8000b88:	d0e0      	beq.n	8000b4c <__udivmoddi4+0xa0>
 8000b8a:	e9c6 4800 	strd	r4, r8, [r6]
 8000b8e:	e7dd      	b.n	8000b4c <__udivmoddi4+0xa0>
 8000b90:	b902      	cbnz	r2, 8000b94 <__udivmoddi4+0xe8>
 8000b92:	deff      	udf	#255	; 0xff
 8000b94:	fab2 f282 	clz	r2, r2
 8000b98:	2a00      	cmp	r2, #0
 8000b9a:	f040 808f 	bne.w	8000cbc <__udivmoddi4+0x210>
 8000b9e:	1b49      	subs	r1, r1, r5
 8000ba0:	ea4f 4e15 	mov.w	lr, r5, lsr #16
 8000ba4:	fa1f f885 	uxth.w	r8, r5
 8000ba8:	2701      	movs	r7, #1
 8000baa:	fbb1 fcfe 	udiv	ip, r1, lr
 8000bae:	0c23      	lsrs	r3, r4, #16
 8000bb0:	fb0e 111c 	mls	r1, lr, ip, r1
 8000bb4:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8000bb8:	fb08 f10c 	mul.w	r1, r8, ip
 8000bbc:	4299      	cmp	r1, r3
 8000bbe:	d907      	bls.n	8000bd0 <__udivmoddi4+0x124>
 8000bc0:	18eb      	adds	r3, r5, r3
 8000bc2:	f10c 30ff 	add.w	r0, ip, #4294967295
 8000bc6:	d202      	bcs.n	8000bce <__udivmoddi4+0x122>
 8000bc8:	4299      	cmp	r1, r3
 8000bca:	f200 80cd 	bhi.w	8000d68 <__udivmoddi4+0x2bc>
 8000bce:	4684      	mov	ip, r0
 8000bd0:	1a59      	subs	r1, r3, r1
 8000bd2:	b2a3      	uxth	r3, r4
 8000bd4:	fbb1 f0fe 	udiv	r0, r1, lr
 8000bd8:	fb0e 1410 	mls	r4, lr, r0, r1
 8000bdc:	ea43 4404 	orr.w	r4, r3, r4, lsl #16
 8000be0:	fb08 f800 	mul.w	r8, r8, r0
 8000be4:	45a0      	cmp	r8, r4
 8000be6:	d907      	bls.n	8000bf8 <__udivmoddi4+0x14c>
 8000be8:	192c      	adds	r4, r5, r4
 8000bea:	f100 33ff 	add.w	r3, r0, #4294967295
 8000bee:	d202      	bcs.n	8000bf6 <__udivmoddi4+0x14a>
 8000bf0:	45a0      	cmp	r8, r4
 8000bf2:	f200 80b6 	bhi.w	8000d62 <__udivmoddi4+0x2b6>
 8000bf6:	4618      	mov	r0, r3
 8000bf8:	eba4 0408 	sub.w	r4, r4, r8
 8000bfc:	ea40 400c 	orr.w	r0, r0, ip, lsl #16
 8000c00:	e79f      	b.n	8000b42 <__udivmoddi4+0x96>
 8000c02:	f1c7 0c20 	rsb	ip, r7, #32
 8000c06:	40bb      	lsls	r3, r7
 8000c08:	fa22 fe0c 	lsr.w	lr, r2, ip
 8000c0c:	ea4e 0e03 	orr.w	lr, lr, r3
 8000c10:	fa01 f407 	lsl.w	r4, r1, r7
 8000c14:	fa20 f50c 	lsr.w	r5, r0, ip
 8000c18:	fa21 f30c 	lsr.w	r3, r1, ip
 8000c1c:	ea4f 481e 	mov.w	r8, lr, lsr #16
 8000c20:	4325      	orrs	r5, r4
 8000c22:	fbb3 f9f8 	udiv	r9, r3, r8
 8000c26:	0c2c      	lsrs	r4, r5, #16
 8000c28:	fb08 3319 	mls	r3, r8, r9, r3
 8000c2c:	fa1f fa8e 	uxth.w	sl, lr
 8000c30:	ea44 4303 	orr.w	r3, r4, r3, lsl #16
 8000c34:	fb09 f40a 	mul.w	r4, r9, sl
 8000c38:	429c      	cmp	r4, r3
 8000c3a:	fa02 f207 	lsl.w	r2, r2, r7
 8000c3e:	fa00 f107 	lsl.w	r1, r0, r7
 8000c42:	d90b      	bls.n	8000c5c <__udivmoddi4+0x1b0>
 8000c44:	eb1e 0303 	adds.w	r3, lr, r3
 8000c48:	f109 30ff 	add.w	r0, r9, #4294967295
 8000c4c:	f080 8087 	bcs.w	8000d5e <__udivmoddi4+0x2b2>
 8000c50:	429c      	cmp	r4, r3
 8000c52:	f240 8084 	bls.w	8000d5e <__udivmoddi4+0x2b2>
 8000c56:	f1a9 0902 	sub.w	r9, r9, #2
 8000c5a:	4473      	add	r3, lr
 8000c5c:	1b1b      	subs	r3, r3, r4
 8000c5e:	b2ad      	uxth	r5, r5
 8000c60:	fbb3 f0f8 	udiv	r0, r3, r8
 8000c64:	fb08 3310 	mls	r3, r8, r0, r3
 8000c68:	ea45 4403 	orr.w	r4, r5, r3, lsl #16
 8000c6c:	fb00 fa0a 	mul.w	sl, r0, sl
 8000c70:	45a2      	cmp	sl, r4
 8000c72:	d908      	bls.n	8000c86 <__udivmoddi4+0x1da>
 8000c74:	eb1e 0404 	adds.w	r4, lr, r4
 8000c78:	f100 33ff 	add.w	r3, r0, #4294967295
 8000c7c:	d26b      	bcs.n	8000d56 <__udivmoddi4+0x2aa>
 8000c7e:	45a2      	cmp	sl, r4
 8000c80:	d969      	bls.n	8000d56 <__udivmoddi4+0x2aa>
 8000c82:	3802      	subs	r0, #2
 8000c84:	4474      	add	r4, lr
 8000c86:	ea40 4009 	orr.w	r0, r0, r9, lsl #16
 8000c8a:	fba0 8902 	umull	r8, r9, r0, r2
 8000c8e:	eba4 040a 	sub.w	r4, r4, sl
 8000c92:	454c      	cmp	r4, r9
 8000c94:	46c2      	mov	sl, r8
 8000c96:	464b      	mov	r3, r9
 8000c98:	d354      	bcc.n	8000d44 <__udivmoddi4+0x298>
 8000c9a:	d051      	beq.n	8000d40 <__udivmoddi4+0x294>
 8000c9c:	2e00      	cmp	r6, #0
 8000c9e:	d069      	beq.n	8000d74 <__udivmoddi4+0x2c8>
 8000ca0:	ebb1 050a 	subs.w	r5, r1, sl
 8000ca4:	eb64 0403 	sbc.w	r4, r4, r3
 8000ca8:	fa04 fc0c 	lsl.w	ip, r4, ip
 8000cac:	40fd      	lsrs	r5, r7
 8000cae:	40fc      	lsrs	r4, r7
 8000cb0:	ea4c 0505 	orr.w	r5, ip, r5
 8000cb4:	e9c6 5400 	strd	r5, r4, [r6]
 8000cb8:	2700      	movs	r7, #0
 8000cba:	e747      	b.n	8000b4c <__udivmoddi4+0xa0>
 8000cbc:	f1c2 0320 	rsb	r3, r2, #32
 8000cc0:	fa20 f703 	lsr.w	r7, r0, r3
 8000cc4:	4095      	lsls	r5, r2
 8000cc6:	fa01 f002 	lsl.w	r0, r1, r2
 8000cca:	fa21 f303 	lsr.w	r3, r1, r3
 8000cce:	ea4f 4e15 	mov.w	lr, r5, lsr #16
 8000cd2:	4338      	orrs	r0, r7
 8000cd4:	0c01      	lsrs	r1, r0, #16
 8000cd6:	fbb3 f7fe 	udiv	r7, r3, lr
 8000cda:	fa1f f885 	uxth.w	r8, r5
 8000cde:	fb0e 3317 	mls	r3, lr, r7, r3
 8000ce2:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 8000ce6:	fb07 f308 	mul.w	r3, r7, r8
 8000cea:	428b      	cmp	r3, r1
 8000cec:	fa04 f402 	lsl.w	r4, r4, r2
 8000cf0:	d907      	bls.n	8000d02 <__udivmoddi4+0x256>
 8000cf2:	1869      	adds	r1, r5, r1
 8000cf4:	f107 3cff 	add.w	ip, r7, #4294967295
 8000cf8:	d22f      	bcs.n	8000d5a <__udivmoddi4+0x2ae>
 8000cfa:	428b      	cmp	r3, r1
 8000cfc:	d92d      	bls.n	8000d5a <__udivmoddi4+0x2ae>
 8000cfe:	3f02      	subs	r7, #2
 8000d00:	4429      	add	r1, r5
 8000d02:	1acb      	subs	r3, r1, r3
 8000d04:	b281      	uxth	r1, r0
 8000d06:	fbb3 f0fe 	udiv	r0, r3, lr
 8000d0a:	fb0e 3310 	mls	r3, lr, r0, r3
 8000d0e:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 8000d12:	fb00 f308 	mul.w	r3, r0, r8
 8000d16:	428b      	cmp	r3, r1
 8000d18:	d907      	bls.n	8000d2a <__udivmoddi4+0x27e>
 8000d1a:	1869      	adds	r1, r5, r1
 8000d1c:	f100 3cff 	add.w	ip, r0, #4294967295
 8000d20:	d217      	bcs.n	8000d52 <__udivmoddi4+0x2a6>
 8000d22:	428b      	cmp	r3, r1
 8000d24:	d915      	bls.n	8000d52 <__udivmoddi4+0x2a6>
 8000d26:	3802      	subs	r0, #2
 8000d28:	4429      	add	r1, r5
 8000d2a:	1ac9      	subs	r1, r1, r3
 8000d2c:	ea40 4707 	orr.w	r7, r0, r7, lsl #16
 8000d30:	e73b      	b.n	8000baa <__udivmoddi4+0xfe>
 8000d32:	4637      	mov	r7, r6
 8000d34:	4630      	mov	r0, r6
 8000d36:	e709      	b.n	8000b4c <__udivmoddi4+0xa0>
 8000d38:	4607      	mov	r7, r0
 8000d3a:	e6e7      	b.n	8000b0c <__udivmoddi4+0x60>
 8000d3c:	4618      	mov	r0, r3
 8000d3e:	e6fb      	b.n	8000b38 <__udivmoddi4+0x8c>
 8000d40:	4541      	cmp	r1, r8
 8000d42:	d2ab      	bcs.n	8000c9c <__udivmoddi4+0x1f0>
 8000d44:	ebb8 0a02 	subs.w	sl, r8, r2
 8000d48:	eb69 020e 	sbc.w	r2, r9, lr
 8000d4c:	3801      	subs	r0, #1
 8000d4e:	4613      	mov	r3, r2
 8000d50:	e7a4      	b.n	8000c9c <__udivmoddi4+0x1f0>
 8000d52:	4660      	mov	r0, ip
 8000d54:	e7e9      	b.n	8000d2a <__udivmoddi4+0x27e>
 8000d56:	4618      	mov	r0, r3
 8000d58:	e795      	b.n	8000c86 <__udivmoddi4+0x1da>
 8000d5a:	4667      	mov	r7, ip
 8000d5c:	e7d1      	b.n	8000d02 <__udivmoddi4+0x256>
 8000d5e:	4681      	mov	r9, r0
 8000d60:	e77c      	b.n	8000c5c <__udivmoddi4+0x1b0>
 8000d62:	3802      	subs	r0, #2
 8000d64:	442c      	add	r4, r5
 8000d66:	e747      	b.n	8000bf8 <__udivmoddi4+0x14c>
 8000d68:	f1ac 0c02 	sub.w	ip, ip, #2
 8000d6c:	442b      	add	r3, r5
 8000d6e:	e72f      	b.n	8000bd0 <__udivmoddi4+0x124>
 8000d70:	4638      	mov	r0, r7
 8000d72:	e708      	b.n	8000b86 <__udivmoddi4+0xda>
 8000d74:	4637      	mov	r7, r6
 8000d76:	e6e9      	b.n	8000b4c <__udivmoddi4+0xa0>

08000d78 <__aeabi_idiv0>:
 8000d78:	4770      	bx	lr
 8000d7a:	bf00      	nop

08000d7c <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler: 
  ldr   sp, =_estack       /* set stack pointer */
 8000d7c:	f8df d034 	ldr.w	sp, [pc, #52]	; 8000db4 <LoopFillZerobss+0x14>
 
/* Copy the data segment initializers from flash to SRAM */  
  movs  r1, #0
 8000d80:	2100      	movs	r1, #0
  b  LoopCopyDataInit
 8000d82:	e003      	b.n	8000d8c <LoopCopyDataInit>

08000d84 <CopyDataInit>:

CopyDataInit:
  ldr  r3, =_sidata
 8000d84:	4b0c      	ldr	r3, [pc, #48]	; (8000db8 <LoopFillZerobss+0x18>)
  ldr  r3, [r3, r1]
 8000d86:	585b      	ldr	r3, [r3, r1]
  str  r3, [r0, r1]
 8000d88:	5043      	str	r3, [r0, r1]
  adds  r1, r1, #4
 8000d8a:	3104      	adds	r1, #4

08000d8c <LoopCopyDataInit>:
    
LoopCopyDataInit:
  ldr  r0, =_sdata
 8000d8c:	480b      	ldr	r0, [pc, #44]	; (8000dbc <LoopFillZerobss+0x1c>)
  ldr  r3, =_edata
 8000d8e:	4b0c      	ldr	r3, [pc, #48]	; (8000dc0 <LoopFillZerobss+0x20>)
  adds  r2, r0, r1
 8000d90:	1842      	adds	r2, r0, r1
  cmp  r2, r3
 8000d92:	429a      	cmp	r2, r3
  bcc  CopyDataInit
 8000d94:	d3f6      	bcc.n	8000d84 <CopyDataInit>
  ldr  r2, =_sbss
 8000d96:	4a0b      	ldr	r2, [pc, #44]	; (8000dc4 <LoopFillZerobss+0x24>)
  b  LoopFillZerobss
 8000d98:	e002      	b.n	8000da0 <LoopFillZerobss>

08000d9a <FillZerobss>:
/* Zero fill the bss segment. */  
FillZerobss:
  movs  r3, #0
 8000d9a:	2300      	movs	r3, #0
  str  r3, [r2], #4
 8000d9c:	f842 3b04 	str.w	r3, [r2], #4

08000da0 <LoopFillZerobss>:
    
LoopFillZerobss:
  ldr  r3, = _ebss
 8000da0:	4b09      	ldr	r3, [pc, #36]	; (8000dc8 <LoopFillZerobss+0x28>)
  cmp  r2, r3
 8000da2:	429a      	cmp	r2, r3
  bcc  FillZerobss
 8000da4:	d3f9      	bcc.n	8000d9a <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit   
 8000da6:	f003 f823 	bl	8003df0 <SystemInit>
/* Call static constructors */
    bl __libc_init_array
 8000daa:	f018 fc31 	bl	8019610 <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 8000dae:	f000 fe95 	bl	8001adc <main>
  bx  lr    
 8000db2:	4770      	bx	lr
  ldr   sp, =_estack       /* set stack pointer */
 8000db4:	20030000 	.word	0x20030000
  ldr  r3, =_sidata
 8000db8:	08055440 	.word	0x08055440
  ldr  r0, =_sdata
 8000dbc:	20000000 	.word	0x20000000
  ldr  r3, =_edata
 8000dc0:	20000170 	.word	0x20000170
  ldr  r2, =_sbss
 8000dc4:	20000170 	.word	0x20000170
  ldr  r3, = _ebss
 8000dc8:	20012b30 	.word	0x20012b30

08000dcc <ADC_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 8000dcc:	e7fe      	b.n	8000dcc <ADC_IRQHandler>

08000dce <MX_TouchGFX_Init>:
 * Initialize TouchGFX application
 */
void MX_TouchGFX_Init(void)
{
  // Calling farward to touchgfx_init in C++ domain
  touchgfx_init();
 8000dce:	f000 bc93 	b.w	80016f8 <touchgfx_init>

08000dd2 <TouchGFX_Task>:
 * TouchGFX application thread
 */
void TouchGFX_Task(void *argument)
{
  // Calling farward to touchgfx_init in C++ domain
  touchgfx_taskEntry();
 8000dd2:	f000 bd01 	b.w	80017d8 <touchgfx_taskEntry>

08000dd6 <_ZN20STM32TouchControllerD1Ev>:
 * @brief This class specializes TouchController Interface.
 *
 * @sa touchgfx::TouchController
 */

class STM32TouchController : public touchgfx::TouchController
 8000dd6:	4770      	bx	lr

08000dd8 <_ZN20STM32TouchControllerD0Ev>:
 8000dd8:	b510      	push	{r4, lr}
 8000dda:	2104      	movs	r1, #4
 8000ddc:	4604      	mov	r4, r0
 8000dde:	f018 fba1 	bl	8019524 <_ZdlPvj>
 8000de2:	4620      	mov	r0, r4
 8000de4:	bd10      	pop	{r4, pc}
	...

08000de8 <_Z11BSP_TS_Inittt>:
  * @param  XSize: The maximum X size of the TS area on LCD
  * @param  YSize: The maximum Y size of the TS area on LCD
  * @retval TS_OK: if all initializations are OK. Other value if error.
  */
uint8_t BSP_TS_Init(uint16_t XSize, uint16_t YSize)
{
 8000de8:	b538      	push	{r3, r4, r5, lr}
    uint8_t ret = TS_ERROR;

    /* Initialize x and y positions boundaries */
    TsXBoundary = XSize;
 8000dea:	4b0c      	ldr	r3, [pc, #48]	; (8000e1c <_Z11BSP_TS_Inittt+0x34>)
    TsYBoundary = YSize;

    /* Read ID and verify if the IO expander is ready */
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 8000dec:	4c0c      	ldr	r4, [pc, #48]	; (8000e20 <_Z11BSP_TS_Inittt+0x38>)
    TsXBoundary = XSize;
 8000dee:	8018      	strh	r0, [r3, #0]
    TsYBoundary = YSize;
 8000df0:	4b0c      	ldr	r3, [pc, #48]	; (8000e24 <_Z11BSP_TS_Inittt+0x3c>)
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 8000df2:	2082      	movs	r0, #130	; 0x82
    TsYBoundary = YSize;
 8000df4:	8019      	strh	r1, [r3, #0]
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 8000df6:	6863      	ldr	r3, [r4, #4]
 8000df8:	4798      	blx	r3
 8000dfa:	f640 0311 	movw	r3, #2065	; 0x811
 8000dfe:	4298      	cmp	r0, r3
 8000e00:	d10a      	bne.n	8000e18 <_Z11BSP_TS_Inittt+0x30>
    {
        /* Initialize the TS driver structure */
        TsDrv = &stmpe811_ts_drv;
 8000e02:	4d09      	ldr	r5, [pc, #36]	; (8000e28 <_Z11BSP_TS_Inittt+0x40>)
    }

    if (ret == TS_OK)
    {
        /* Initialize the LL TS Driver */
        TsDrv->Init(TS_I2C_ADDRESS);
 8000e04:	6823      	ldr	r3, [r4, #0]
        TsDrv = &stmpe811_ts_drv;
 8000e06:	602c      	str	r4, [r5, #0]
        TsDrv->Init(TS_I2C_ADDRESS);
 8000e08:	2082      	movs	r0, #130	; 0x82
 8000e0a:	4798      	blx	r3
        TsDrv->Start(TS_I2C_ADDRESS);
 8000e0c:	682b      	ldr	r3, [r5, #0]
 8000e0e:	2082      	movs	r0, #130	; 0x82
 8000e10:	68db      	ldr	r3, [r3, #12]
 8000e12:	4798      	blx	r3
        ret = TS_OK;
 8000e14:	2000      	movs	r0, #0
    }

    return ret;
}
 8000e16:	bd38      	pop	{r3, r4, r5, pc}
    uint8_t ret = TS_ERROR;
 8000e18:	2001      	movs	r0, #1
 8000e1a:	e7fc      	b.n	8000e16 <_Z11BSP_TS_Inittt+0x2e>
 8000e1c:	2000018c 	.word	0x2000018c
 8000e20:	2000005c 	.word	0x2000005c
 8000e24:	2000018e 	.word	0x2000018e
 8000e28:	20000190 	.word	0x20000190

08000e2c <_ZN20STM32TouchController4initEv>:
    BSP_TS_Init(240, 320);
 8000e2c:	f44f 71a0 	mov.w	r1, #320	; 0x140
 8000e30:	20f0      	movs	r0, #240	; 0xf0
 8000e32:	f7ff bfd9 	b.w	8000de8 <_Z11BSP_TS_Inittt>
	...

08000e38 <_Z15BSP_TS_GetStateP15TS_StateTypeDef>:
/**
  * @brief  Returns status and positions of the touch screen.
  * @param  TsState: Pointer to touch screen current state structure
  */
void BSP_TS_GetState(TS_StateTypeDef* TsState)
{
 8000e38:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    static uint32_t _x = 0, _y = 0;
    uint16_t xDiff, yDiff, x, y, xr, yr;

    TsState->TouchDetected = TsDrv->DetectTouch(TS_I2C_ADDRESS);
 8000e3a:	4d2c      	ldr	r5, [pc, #176]	; (8000eec <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xb4>)
 8000e3c:	682b      	ldr	r3, [r5, #0]
{
 8000e3e:	4604      	mov	r4, r0
    TsState->TouchDetected = TsDrv->DetectTouch(TS_I2C_ADDRESS);
 8000e40:	691b      	ldr	r3, [r3, #16]
 8000e42:	2082      	movs	r0, #130	; 0x82
 8000e44:	4798      	blx	r3
 8000e46:	b280      	uxth	r0, r0
 8000e48:	8020      	strh	r0, [r4, #0]

    if (TsState->TouchDetected)
 8000e4a:	2800      	cmp	r0, #0
 8000e4c:	d04b      	beq.n	8000ee6 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xae>
    {
        TsDrv->GetXY(TS_I2C_ADDRESS, &x, &y);
 8000e4e:	682b      	ldr	r3, [r5, #0]
 8000e50:	f10d 0206 	add.w	r2, sp, #6
 8000e54:	695b      	ldr	r3, [r3, #20]
 8000e56:	a901      	add	r1, sp, #4
 8000e58:	2082      	movs	r0, #130	; 0x82
 8000e5a:	4798      	blx	r3

        /* Y value first correction */
        y -= 360;
 8000e5c:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 8000e60:	f5a3 73b4 	sub.w	r3, r3, #360	; 0x168

        /* Y value second correction */
        yr = y / 11;
 8000e64:	b29b      	uxth	r3, r3
 8000e66:	220b      	movs	r2, #11
 8000e68:	fbb3 f3f2 	udiv	r3, r3, r2

        /* Return y position value */
        if (yr <= 0)
 8000e6c:	b133      	cbz	r3, 8000e7c <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x44>
        {
            yr = 0;
        }
        else if (yr > TsYBoundary)
 8000e6e:	4a20      	ldr	r2, [pc, #128]	; (8000ef0 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xb8>)
 8000e70:	8812      	ldrh	r2, [r2, #0]
 8000e72:	429a      	cmp	r2, r3
        {
            yr = TsYBoundary - 1;
 8000e74:	bf3c      	itt	cc
 8000e76:	f102 33ff 	addcc.w	r3, r2, #4294967295
 8000e7a:	b29b      	uxthcc	r3, r3
        else
        {}
        y = yr;

        /* X value first correction */
        if (x <= 3000)
 8000e7c:	f8bd 2004 	ldrh.w	r2, [sp, #4]
 8000e80:	f640 31b8 	movw	r1, #3000	; 0xbb8
 8000e84:	428a      	cmp	r2, r1
        {
            x = 3870 - x;
 8000e86:	bf95      	itete	ls
 8000e88:	f5c2 6271 	rsbls	r2, r2, #3856	; 0xf10
        }
        else
        {
            x = 3800 - x;
 8000e8c:	f5c2 626d 	rsbhi	r2, r2, #3792	; 0xed0
            x = 3870 - x;
 8000e90:	320e      	addls	r2, #14
            x = 3800 - x;
 8000e92:	3208      	addhi	r2, #8
 8000e94:	f8ad 2004 	strh.w	r2, [sp, #4]
        }

        /* X value second correction */
        xr = x / 15;
 8000e98:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 8000e9c:	220f      	movs	r2, #15
 8000e9e:	fbb1 f1f2 	udiv	r1, r1, r2

        /* Return X position value */
        if (xr <= 0)
 8000ea2:	b131      	cbz	r1, 8000eb2 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x7a>
        {
            xr = 0;
        }
        else if (xr > TsXBoundary)
 8000ea4:	4a13      	ldr	r2, [pc, #76]	; (8000ef4 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xbc>)
 8000ea6:	8812      	ldrh	r2, [r2, #0]
 8000ea8:	428a      	cmp	r2, r1
        {
            xr = TsXBoundary - 1;
 8000eaa:	bf3c      	itt	cc
 8000eac:	f102 31ff 	addcc.w	r1, r2, #4294967295
 8000eb0:	b289      	uxthcc	r1, r1
        }
        else
        {}

        x = xr;
        xDiff = x > _x ? (x - _x) : (_x - x);
 8000eb2:	4e11      	ldr	r6, [pc, #68]	; (8000ef8 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xc0>)
        yDiff = y > _y ? (y - _y) : (_y - y);
 8000eb4:	4d11      	ldr	r5, [pc, #68]	; (8000efc <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xc4>)
        xDiff = x > _x ? (x - _x) : (_x - x);
 8000eb6:	6830      	ldr	r0, [r6, #0]
        yDiff = y > _y ? (y - _y) : (_y - y);
 8000eb8:	682f      	ldr	r7, [r5, #0]
 8000eba:	b282      	uxth	r2, r0
        xDiff = x > _x ? (x - _x) : (_x - x);
 8000ebc:	4281      	cmp	r1, r0
 8000ebe:	bf88      	it	hi
 8000ec0:	1a8a      	subhi	r2, r1, r2
 8000ec2:	b2b8      	uxth	r0, r7
 8000ec4:	bf98      	it	ls
 8000ec6:	1a52      	subls	r2, r2, r1
        yDiff = y > _y ? (y - _y) : (_y - y);
 8000ec8:	42bb      	cmp	r3, r7
 8000eca:	bf8c      	ite	hi
 8000ecc:	1a18      	subhi	r0, r3, r0
 8000ece:	1ac0      	subls	r0, r0, r3
        xDiff = x > _x ? (x - _x) : (_x - x);
 8000ed0:	b292      	uxth	r2, r2
        yDiff = y > _y ? (y - _y) : (_y - y);
 8000ed2:	b280      	uxth	r0, r0

        if (xDiff + yDiff > 5)
 8000ed4:	4402      	add	r2, r0
 8000ed6:	2a05      	cmp	r2, #5
        {
            _x = x;
 8000ed8:	bfc4      	itt	gt
 8000eda:	6031      	strgt	r1, [r6, #0]
            _y = y;
 8000edc:	602b      	strgt	r3, [r5, #0]
        }

        /* Update the X position */
        TsState->X = _x;
 8000ede:	6833      	ldr	r3, [r6, #0]
 8000ee0:	8063      	strh	r3, [r4, #2]

        /* Update the Y position */
        TsState->Y = _y;
 8000ee2:	682b      	ldr	r3, [r5, #0]
 8000ee4:	80a3      	strh	r3, [r4, #4]
    }
}
 8000ee6:	b003      	add	sp, #12
 8000ee8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8000eea:	bf00      	nop
 8000eec:	20000190 	.word	0x20000190
 8000ef0:	2000018e 	.word	0x2000018e
 8000ef4:	2000018c 	.word	0x2000018c
 8000ef8:	20000194 	.word	0x20000194
 8000efc:	20000198 	.word	0x20000198

08000f00 <_ZN20STM32TouchController11sampleTouchERlS0_>:
{
 8000f00:	b537      	push	{r0, r1, r2, r4, r5, lr}
    BSP_TS_GetState(&state);
 8000f02:	4668      	mov	r0, sp
{
 8000f04:	460d      	mov	r5, r1
 8000f06:	4614      	mov	r4, r2
    BSP_TS_GetState(&state);
 8000f08:	f7ff ff96 	bl	8000e38 <_Z15BSP_TS_GetStateP15TS_StateTypeDef>
    if (state.TouchDetected)
 8000f0c:	f8bd 0000 	ldrh.w	r0, [sp]
 8000f10:	b130      	cbz	r0, 8000f20 <_ZN20STM32TouchController11sampleTouchERlS0_+0x20>
        x = state.X;
 8000f12:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8000f16:	602b      	str	r3, [r5, #0]
        y = state.Y;
 8000f18:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8000f1c:	6023      	str	r3, [r4, #0]
        return true;
 8000f1e:	2001      	movs	r0, #1
}
 8000f20:	b003      	add	sp, #12
 8000f22:	bd30      	pop	{r4, r5, pc}

08000f24 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>:
 * Sets a pin high.
 */
void GPIO::set(GPIO_ID id)
{

}
 8000f24:	4770      	bx	lr

08000f26 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>:
 8000f26:	4770      	bx	lr

08000f28 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>:
 8000f28:	4770      	bx	lr

08000f2a <_ZN8touchgfx3HAL21setDisplayOrientationENS_18DisplayOrientationE>:
     * @note A screen transition must occur before this takes effect!
     */
    virtual void setDisplayOrientation(DisplayOrientation orientation)
    {
        requestedOrientation = orientation;
        displayOrientationChangeRequested = true;
 8000f2a:	2301      	movs	r3, #1
        requestedOrientation = orientation;
 8000f2c:	f880 1074 	strb.w	r1, [r0, #116]	; 0x74
        displayOrientationChangeRequested = true;
 8000f30:	f880 3075 	strb.w	r3, [r0, #117]	; 0x75
    }
 8000f34:	4770      	bx	lr

08000f36 <_ZN8touchgfx3HAL9sampleKeyERh>:
     * @return True if a keypress was detected and the "key" parameter is set to a value.
     */
    virtual bool sampleKey(uint8_t& key)
    {
        return false;
    }
 8000f36:	2000      	movs	r0, #0
 8000f38:	4770      	bx	lr

08000f3a <_ZNK8touchgfx3HAL18getFlashDataReaderEv>:
     * @return the FlashDataReader.
     */
    virtual FlashDataReader* getFlashDataReader() const
    {
        return 0;
    }
 8000f3a:	2000      	movs	r0, #0
 8000f3c:	4770      	bx	lr

08000f3e <_ZN8touchgfx3HAL9taskDelayEt>:
     *
     * @see registerTaskDelayFunction
     */
    virtual void taskDelay(uint16_t ms)
    {
        if (taskDelayFunc)
 8000f3e:	6b83      	ldr	r3, [r0, #56]	; 0x38
 8000f40:	b10b      	cbz	r3, 8000f46 <_ZN8touchgfx3HAL9taskDelayEt+0x8>
        {
            taskDelayFunc(ms);
 8000f42:	4608      	mov	r0, r1
 8000f44:	4718      	bx	r3
        }
    }
 8000f46:	4770      	bx	lr

08000f48 <_ZN8touchgfx3HAL17getTFTCurrentLineEv>:
     *         implemented".
     */
    virtual uint16_t getTFTCurrentLine()
    {
        return 0xFFFFu;
    }
 8000f48:	f64f 70ff 	movw	r0, #65535	; 0xffff
 8000f4c:	4770      	bx	lr

08000f4e <_ZN8touchgfx3HAL10getDMATypeEv>:
     *
     * @return a DMAType value of the concrete DMA implementation.
     */
    virtual DMAType getDMAType()
    {
        return dma.getDMAType();
 8000f4e:	6840      	ldr	r0, [r0, #4]
 8000f50:	6803      	ldr	r3, [r0, #0]
 8000f52:	699b      	ldr	r3, [r3, #24]
 8000f54:	4718      	bx	r3

08000f56 <_ZN11TouchGFXHALD1Ev>:
 *
 * @brief HAL implementation for TouchGFX.
 *
 * @sa HAL
 */
class TouchGFXHAL : public TouchGFXGeneratedHAL
 8000f56:	4770      	bx	lr

08000f58 <_ZN11TouchGFXHAL9taskEntryEv>:

    TouchGFXGeneratedHAL::initialize();
}

void TouchGFXHAL::taskEntry()
{
 8000f58:	b508      	push	{r3, lr}
    enableLCDControllerInterrupt();
 8000f5a:	6803      	ldr	r3, [r0, #0]
{
 8000f5c:	4604      	mov	r4, r0
    enableLCDControllerInterrupt();
 8000f5e:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 8000f60:	4798      	blx	r3
    enableInterrupts();
 8000f62:	6823      	ldr	r3, [r4, #0]
 8000f64:	4620      	mov	r0, r4
 8000f66:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8000f68:	4798      	blx	r3

    OSWrappers::waitForVSync();
 8000f6a:	f000 f957 	bl	800121c <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
    backPorchExited();
 8000f6e:	6823      	ldr	r3, [r4, #0]
 8000f70:	4620      	mov	r0, r4
 8000f72:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8000f74:	4798      	blx	r3

    LCD_IO_WriteReg(0x29);
 8000f76:	2029      	movs	r0, #41	; 0x29
 8000f78:	f001 f8b2 	bl	80020e0 <LCD_IO_WriteReg>

    for (;;)
    {
        OSWrappers::waitForVSync();
 8000f7c:	f000 f94e 	bl	800121c <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
        backPorchExited();
 8000f80:	6823      	ldr	r3, [r4, #0]
 8000f82:	4620      	mov	r0, r4
 8000f84:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8000f86:	4798      	blx	r3
 8000f88:	e7f8      	b.n	8000f7c <_ZN11TouchGFXHAL9taskEntryEv+0x24>

08000f8a <_ZN8touchgfx3HAL15backPorchExitedEv>:
    virtual void backPorchExited()
 8000f8a:	b510      	push	{r4, lr}
 8000f8c:	4604      	mov	r4, r0
        swapFrameBuffers();
 8000f8e:	f009 f9b7 	bl	800a300 <_ZN8touchgfx3HAL16swapFrameBuffersEv>
        tick();
 8000f92:	6823      	ldr	r3, [r4, #0]
 8000f94:	4620      	mov	r0, r4
 8000f96:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
    }
 8000f9a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        tick();
 8000f9e:	4718      	bx	r3

08000fa0 <_ZNK11TouchGFXHAL17getTFTFrameBufferEv>:
    // Calling parent implementation of getTFTFrameBuffer().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    return TouchGFXGeneratedHAL::getTFTFrameBuffer();
 8000fa0:	f000 bcb6 	b.w	8001910 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>

08000fa4 <_ZN11TouchGFXHAL17setTFTFrameBufferEPt>:
    // Calling parent implementation of setTFTFrameBuffer(uint16_t* address).
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::setTFTFrameBuffer(address);
 8000fa4:	f000 bcba 	b.w	800191c <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>

08000fa8 <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE>:
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::flushFrameBuffer(const touchgfx::Rect& rect) must
    // be called to notify the touchgfx framework that flush has been performed.

    TouchGFXGeneratedHAL::flushFrameBuffer(rect);
 8000fa8:	f000 bcc0 	b.w	800192c <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>

08000fac <_ZN11TouchGFXHAL19configureInterruptsEv>:
    // Calling parent implementation of configureInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::configureInterrupts();
 8000fac:	f000 bc8c 	b.w	80018c8 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>

08000fb0 <_ZN11TouchGFXHAL16enableInterruptsEv>:
    // Calling parent implementation of enableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableInterrupts();
 8000fb0:	f000 bcbe 	b.w	8001930 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>

08000fb4 <_ZN11TouchGFXHAL17disableInterruptsEv>:
    // Calling parent implementation of disableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::disableInterrupts();
 8000fb4:	f000 bcc6 	b.w	8001944 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>

08000fb8 <_ZN11TouchGFXHAL28enableLCDControllerInterruptEv>:
    // Calling parent implementation of enableLCDControllerInterrupt().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableLCDControllerInterrupt();
 8000fb8:	f000 bc90 	b.w	80018dc <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>

08000fbc <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_>:
    virtual void setFrameBufferStartAddresses(void* frameBuffer, void* doubleBuffer, void* animationStorage)
 8000fbc:	b508      	push	{r3, lr}
        assert(frameBuffer != 0 && "A framebuffer address must be set");
 8000fbe:	b931      	cbnz	r1, 8000fce <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x12>
 8000fc0:	4b0a      	ldr	r3, [pc, #40]	; (8000fec <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x30>)
 8000fc2:	4a0b      	ldr	r2, [pc, #44]	; (8000ff0 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x34>)
 8000fc4:	480b      	ldr	r0, [pc, #44]	; (8000ff4 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x38>)
 8000fc6:	f44f 7127 	mov.w	r1, #668	; 0x29c
 8000fca:	f018 fad7 	bl	801957c <__assert_func>
        frameBuffer1 = reinterpret_cast<uint16_t*>(doubleBuffer);
 8000fce:	e9c0 120f 	strd	r1, r2, [r0, #60]	; 0x3c
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
 8000fd2:	3200      	adds	r2, #0
 8000fd4:	4908      	ldr	r1, [pc, #32]	; (8000ff8 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x3c>)
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
 8000fd6:	6443      	str	r3, [r0, #68]	; 0x44
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
 8000fd8:	bf18      	it	ne
 8000fda:	2201      	movne	r2, #1
 8000fdc:	700a      	strb	r2, [r1, #0]
        USE_ANIMATION_STORAGE = animationStorage != 0;
 8000fde:	3300      	adds	r3, #0
 8000fe0:	4a06      	ldr	r2, [pc, #24]	; (8000ffc <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x40>)
 8000fe2:	bf18      	it	ne
 8000fe4:	2301      	movne	r3, #1
 8000fe6:	7013      	strb	r3, [r2, #0]
    }
 8000fe8:	bd08      	pop	{r3, pc}
 8000fea:	bf00      	nop
 8000fec:	0801a61d 	.word	0x0801a61d
 8000ff0:	0801a7a8 	.word	0x0801a7a8
 8000ff4:	0801a655 	.word	0x0801a655
 8000ff8:	20012336 	.word	0x20012336
 8000ffc:	20012337 	.word	0x20012337

08001000 <_ZN8touchgfx3HAL26setFrameBufferStartAddressEPvtbb>:
    TOUCHGFX_DEPRECATED(
 8001000:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8001004:	4699      	mov	r9, r3
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 8001006:	4b1c      	ldr	r3, [pc, #112]	; (8001078 <_ZN8touchgfx3HAL26setFrameBufferStartAddressEPvtbb+0x78>)
    TOUCHGFX_DEPRECATED(
 8001008:	f89d 5020 	ldrb.w	r5, [sp, #32]
 800100c:	4688      	mov	r8, r1
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 800100e:	6819      	ldr	r1, [r3, #0]
 8001010:	f891 3076 	ldrb.w	r3, [r1, #118]	; 0x76
    TOUCHGFX_DEPRECATED(
 8001014:	4607      	mov	r7, r0
 8001016:	4614      	mov	r4, r2
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 8001018:	b10b      	cbz	r3, 800101e <_ZN8touchgfx3HAL26setFrameBufferStartAddressEPvtbb+0x1e>
 800101a:	6cc8      	ldr	r0, [r1, #76]	; 0x4c
 800101c:	b900      	cbnz	r0, 8001020 <_ZN8touchgfx3HAL26setFrameBufferStartAddressEPvtbb+0x20>
            return instance->lcdRef;
 800101e:	6888      	ldr	r0, [r1, #8]
        uint16_t stride = lcd().framebufferStride();
 8001020:	6803      	ldr	r3, [r0, #0]
 8001022:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8001024:	4798      	blx	r3
        uint32_t bufferSizeInBytes = stride * FRAME_BUFFER_HEIGHT;
 8001026:	4b15      	ldr	r3, [pc, #84]	; (800107c <_ZN8touchgfx3HAL26setFrameBufferStartAddressEPvtbb+0x7c>)
 8001028:	881e      	ldrh	r6, [r3, #0]
 800102a:	4370      	muls	r0, r6
        if (useDoubleBuffering)
 800102c:	f1b9 0f00 	cmp.w	r9, #0
 8001030:	d016      	beq.n	8001060 <_ZN8touchgfx3HAL26setFrameBufferStartAddressEPvtbb+0x60>
            ptr += bufferSizeInBytes; // Move past used buffer (framebuffer)
 8001032:	eb08 0100 	add.w	r1, r8, r0
            double_buf = (void*)ptr;
 8001036:	460a      	mov	r2, r1
        if (useAnimationStorage)
 8001038:	b1ad      	cbz	r5, 8001066 <_ZN8touchgfx3HAL26setFrameBufferStartAddressEPvtbb+0x66>
            ptr += bufferSizeInBytes; // Move past used buffer (framebuffer and possibly double buffer)
 800103a:	180b      	adds	r3, r1, r0
 800103c:	3c01      	subs	r4, #1
 800103e:	b2a4      	uxth	r4, r4
 8001040:	2c1f      	cmp	r4, #31
 8001042:	d812      	bhi.n	800106a <_ZN8touchgfx3HAL26setFrameBufferStartAddressEPvtbb+0x6a>
 8001044:	2101      	movs	r1, #1
 8001046:	fa01 f404 	lsl.w	r4, r1, r4
 800104a:	490d      	ldr	r1, [pc, #52]	; (8001080 <_ZN8touchgfx3HAL26setFrameBufferStartAddressEPvtbb+0x80>)
 800104c:	4021      	ands	r1, r4
 800104e:	b161      	cbz	r1, 800106a <_ZN8touchgfx3HAL26setFrameBufferStartAddressEPvtbb+0x6a>
            setFrameBufferStartAddresses(adr, double_buf, anim_store);
 8001050:	6839      	ldr	r1, [r7, #0]
 8001052:	6f4c      	ldr	r4, [r1, #116]	; 0x74
 8001054:	4638      	mov	r0, r7
 8001056:	4641      	mov	r1, r8
 8001058:	46a4      	mov	ip, r4
    }
 800105a:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
            setFrameBufferStartAddresses(adr, double_buf, anim_store);
 800105e:	4760      	bx	ip
        uint8_t* ptr = (uint8_t*)adr;
 8001060:	4641      	mov	r1, r8
        void* double_buf = 0;
 8001062:	464a      	mov	r2, r9
 8001064:	e7e8      	b.n	8001038 <_ZN8touchgfx3HAL26setFrameBufferStartAddressEPvtbb+0x38>
        void* anim_store = 0;
 8001066:	462b      	mov	r3, r5
 8001068:	e7e8      	b.n	800103c <_ZN8touchgfx3HAL26setFrameBufferStartAddressEPvtbb+0x3c>
            assert(0 && "Unsupported bit depth");
 800106a:	4b06      	ldr	r3, [pc, #24]	; (8001084 <_ZN8touchgfx3HAL26setFrameBufferStartAddressEPvtbb+0x84>)
 800106c:	4a06      	ldr	r2, [pc, #24]	; (8001088 <_ZN8touchgfx3HAL26setFrameBufferStartAddressEPvtbb+0x88>)
 800106e:	4807      	ldr	r0, [pc, #28]	; (800108c <_ZN8touchgfx3HAL26setFrameBufferStartAddressEPvtbb+0x8c>)
 8001070:	f240 2189 	movw	r1, #649	; 0x289
 8001074:	f018 fa82 	bl	801957c <__assert_func>
 8001078:	20012338 	.word	0x20012338
 800107c:	20012334 	.word	0x20012334
 8001080:	8080808b 	.word	0x8080808b
 8001084:	0801a600 	.word	0x0801a600
 8001088:	0801a754 	.word	0x0801a754
 800108c:	0801a655 	.word	0x0801a655

08001090 <_ZN11TouchGFXHAL16flushFrameBufferEv>:
     * Rect version.
     * @see HAL::flushFrameBuffer
     */
    virtual void flushFrameBuffer()
    {
        HAL::flushFrameBuffer();
 8001090:	f008 bbc7 	b.w	8009822 <_ZN8touchgfx3HAL16flushFrameBufferEv>

08001094 <_ZN11TouchGFXHALD0Ev>:
 8001094:	b510      	push	{r4, lr}
 8001096:	2178      	movs	r1, #120	; 0x78
 8001098:	4604      	mov	r4, r0
 800109a:	f018 fa43 	bl	8019524 <_ZdlPvj>
 800109e:	4620      	mov	r0, r4
 80010a0:	bd10      	pop	{r4, pc}

080010a2 <_ZN8touchgfx3HAL11getBlitCapsEv>:
        if (useDMAAcceleration)
 80010a2:	f890 3077 	ldrb.w	r3, [r0, #119]	; 0x77
 80010a6:	b11b      	cbz	r3, 80010b0 <_ZN8touchgfx3HAL11getBlitCapsEv+0xe>
            return dma.getBlitCaps();
 80010a8:	6840      	ldr	r0, [r0, #4]
 80010aa:	6803      	ldr	r3, [r0, #0]
 80010ac:	681b      	ldr	r3, [r3, #0]
 80010ae:	4718      	bx	r3
    }
 80010b0:	4618      	mov	r0, r3
 80010b2:	4770      	bx	lr

080010b4 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv>:

    /** Called by the touch driver to indicate that no touch is currently detected. */
    virtual void noTouch();

    /** Perform the actual display orientation change. */
    virtual void performDisplayOrientationChange()
 80010b4:	b530      	push	{r4, r5, lr}
    {
        if (requestedOrientation != nativeDisplayOrientation)
 80010b6:	f890 1034 	ldrb.w	r1, [r0, #52]	; 0x34
 80010ba:	f890 4074 	ldrb.w	r4, [r0, #116]	; 0x74
 80010be:	4b10      	ldr	r3, [pc, #64]	; (8001100 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x4c>)
 80010c0:	428c      	cmp	r4, r1
 80010c2:	781a      	ldrb	r2, [r3, #0]
 80010c4:	d00d      	beq.n	80010e2 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x2e>
        {
            if (DISPLAY_ROTATION == rotate0)
 80010c6:	b95a      	cbnz	r2, 80010e0 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x2c>
            {
                FRAME_BUFFER_WIDTH = DISPLAY_WIDTH;
 80010c8:	4a0e      	ldr	r2, [pc, #56]	; (8001104 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x50>)
 80010ca:	490f      	ldr	r1, [pc, #60]	; (8001108 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x54>)
                FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT;
 80010cc:	480f      	ldr	r0, [pc, #60]	; (800110c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x58>)
                FRAME_BUFFER_WIDTH = DISPLAY_WIDTH;
 80010ce:	8814      	ldrh	r4, [r2, #0]
                FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT;
 80010d0:	4d0f      	ldr	r5, [pc, #60]	; (8001110 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x5c>)
                FRAME_BUFFER_WIDTH = DISPLAY_WIDTH;
 80010d2:	800c      	strh	r4, [r1, #0]
                FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT;
 80010d4:	8801      	ldrh	r1, [r0, #0]
                DISPLAY_HEIGHT = FRAME_BUFFER_WIDTH;
                DISPLAY_WIDTH = FRAME_BUFFER_HEIGHT;
 80010d6:	8011      	strh	r1, [r2, #0]
                FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT;
 80010d8:	8029      	strh	r1, [r5, #0]
                DISPLAY_HEIGHT = FRAME_BUFFER_WIDTH;
 80010da:	8004      	strh	r4, [r0, #0]
                DISPLAY_ROTATION = rotate90;
 80010dc:	2201      	movs	r2, #1
        {
            FRAME_BUFFER_WIDTH = DISPLAY_HEIGHT;
            FRAME_BUFFER_HEIGHT = DISPLAY_WIDTH;
            DISPLAY_HEIGHT = FRAME_BUFFER_HEIGHT;
            DISPLAY_WIDTH = FRAME_BUFFER_WIDTH;
            DISPLAY_ROTATION = rotate0;
 80010de:	701a      	strb	r2, [r3, #0]
        }
    }
 80010e0:	bd30      	pop	{r4, r5, pc}
        else if (DISPLAY_ROTATION != rotate0)
 80010e2:	2a00      	cmp	r2, #0
 80010e4:	d0fc      	beq.n	80010e0 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x2c>
            FRAME_BUFFER_WIDTH = DISPLAY_HEIGHT;
 80010e6:	4809      	ldr	r0, [pc, #36]	; (800110c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x58>)
 80010e8:	4a07      	ldr	r2, [pc, #28]	; (8001108 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x54>)
 80010ea:	8801      	ldrh	r1, [r0, #0]
 80010ec:	8011      	strh	r1, [r2, #0]
            FRAME_BUFFER_HEIGHT = DISPLAY_WIDTH;
 80010ee:	4a05      	ldr	r2, [pc, #20]	; (8001104 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x50>)
 80010f0:	4d07      	ldr	r5, [pc, #28]	; (8001110 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x5c>)
 80010f2:	8814      	ldrh	r4, [r2, #0]
 80010f4:	802c      	strh	r4, [r5, #0]
            DISPLAY_WIDTH = FRAME_BUFFER_WIDTH;
 80010f6:	8011      	strh	r1, [r2, #0]
            DISPLAY_HEIGHT = FRAME_BUFFER_HEIGHT;
 80010f8:	8004      	strh	r4, [r0, #0]
            DISPLAY_ROTATION = rotate0;
 80010fa:	2200      	movs	r2, #0
 80010fc:	e7ef      	b.n	80010de <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x2a>
 80010fe:	bf00      	nop
 8001100:	20012330 	.word	0x20012330
 8001104:	2001232c 	.word	0x2001232c
 8001108:	20012332 	.word	0x20012332
 800110c:	2001232e 	.word	0x2001232e
 8001110:	20012334 	.word	0x20012334

08001114 <_ZN11TouchGFXHAL10initializeEv>:
    TouchGFXGeneratedHAL::initialize();
 8001114:	f000 bc2a 	b.w	800196c <_ZN20TouchGFXGeneratedHAL10initializeEv>

08001118 <_ZN8touchgfx10OSWrappers10initializeEv>:
 * Initialize frame buffer semaphore and queue/mutex for VSYNC signal.
 */
void OSWrappers::initialize()
{
    // Create a queue of length 1
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 8001118:	2101      	movs	r1, #1
{
 800111a:	b508      	push	{r3, lr}
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 800111c:	2200      	movs	r2, #0
 800111e:	4608      	mov	r0, r1
 8001120:	f005 fd64 	bl	8006bec <osSemaphoreNew>
 8001124:	4b06      	ldr	r3, [pc, #24]	; (8001140 <_ZN8touchgfx10OSWrappers10initializeEv+0x28>)
    osSemaphoreAcquire(frame_buffer_sem, osWaitForever); // take the lock
 8001126:	f04f 31ff 	mov.w	r1, #4294967295
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 800112a:	6018      	str	r0, [r3, #0]
    osSemaphoreAcquire(frame_buffer_sem, osWaitForever); // take the lock
 800112c:	f005 fdb4 	bl	8006c98 <osSemaphoreAcquire>

    // Create a queue of length 1
    vsync_queue = osMessageQueueNew(1, 4, NULL);
 8001130:	2200      	movs	r2, #0
 8001132:	2104      	movs	r1, #4
 8001134:	2001      	movs	r0, #1
 8001136:	f005 fe23 	bl	8006d80 <osMessageQueueNew>
 800113a:	4b02      	ldr	r3, [pc, #8]	; (8001144 <_ZN8touchgfx10OSWrappers10initializeEv+0x2c>)
 800113c:	6018      	str	r0, [r3, #0]
}
 800113e:	bd08      	pop	{r3, pc}
 8001140:	200001a0 	.word	0x200001a0
 8001144:	2000019c 	.word	0x2000019c

08001148 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>:

/*
 * Take the frame buffer semaphore. Blocks until semaphore is available.
 */
void OSWrappers::takeFrameBufferSemaphore()
{
 8001148:	b508      	push	{r3, lr}
    assert(frame_buffer_sem);
 800114a:	4b07      	ldr	r3, [pc, #28]	; (8001168 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0x20>)
 800114c:	6818      	ldr	r0, [r3, #0]
 800114e:	b928      	cbnz	r0, 800115c <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0x14>
 8001150:	4b06      	ldr	r3, [pc, #24]	; (800116c <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0x24>)
 8001152:	4a07      	ldr	r2, [pc, #28]	; (8001170 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0x28>)
 8001154:	4807      	ldr	r0, [pc, #28]	; (8001174 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0x2c>)
 8001156:	2131      	movs	r1, #49	; 0x31
 8001158:	f018 fa10 	bl	801957c <__assert_func>
    osSemaphoreAcquire(frame_buffer_sem, osWaitForever);
 800115c:	f04f 31ff 	mov.w	r1, #4294967295
}
 8001160:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    osSemaphoreAcquire(frame_buffer_sem, osWaitForever);
 8001164:	f005 bd98 	b.w	8006c98 <osSemaphoreAcquire>
 8001168:	200001a0 	.word	0x200001a0
 800116c:	0801a7f6 	.word	0x0801a7f6
 8001170:	0801a892 	.word	0x0801a892
 8001174:	0801a807 	.word	0x0801a807

08001178 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>:

/*
 * Release the frame buffer semaphore.
 */
void OSWrappers::giveFrameBufferSemaphore()
{
 8001178:	b508      	push	{r3, lr}
    assert(frame_buffer_sem);
 800117a:	4b06      	ldr	r3, [pc, #24]	; (8001194 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv+0x1c>)
 800117c:	6818      	ldr	r0, [r3, #0]
 800117e:	b928      	cbnz	r0, 800118c <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv+0x14>
 8001180:	4b05      	ldr	r3, [pc, #20]	; (8001198 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv+0x20>)
 8001182:	4a06      	ldr	r2, [pc, #24]	; (800119c <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv+0x24>)
 8001184:	4806      	ldr	r0, [pc, #24]	; (80011a0 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv+0x28>)
 8001186:	213a      	movs	r1, #58	; 0x3a
 8001188:	f018 f9f8 	bl	801957c <__assert_func>
    osSemaphoreRelease(frame_buffer_sem);
}
 800118c:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    osSemaphoreRelease(frame_buffer_sem);
 8001190:	f005 bdbe 	b.w	8006d10 <osSemaphoreRelease>
 8001194:	200001a0 	.word	0x200001a0
 8001198:	0801a7f6 	.word	0x0801a7f6
 800119c:	0801a855 	.word	0x0801a855
 80011a0:	0801a807 	.word	0x0801a807

080011a4 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>:
 *
 * Note must return immediately! This function does not care who has the taken the semaphore,
 * it only serves to make sure that the semaphore is taken by someone.
 */
void OSWrappers::tryTakeFrameBufferSemaphore()
{
 80011a4:	b508      	push	{r3, lr}
    assert(frame_buffer_sem);
 80011a6:	4b07      	ldr	r3, [pc, #28]	; (80011c4 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv+0x20>)
 80011a8:	6818      	ldr	r0, [r3, #0]
 80011aa:	b928      	cbnz	r0, 80011b8 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv+0x14>
 80011ac:	4b06      	ldr	r3, [pc, #24]	; (80011c8 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv+0x24>)
 80011ae:	4a07      	ldr	r2, [pc, #28]	; (80011cc <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv+0x28>)
 80011b0:	4807      	ldr	r0, [pc, #28]	; (80011d0 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv+0x2c>)
 80011b2:	2147      	movs	r1, #71	; 0x47
 80011b4:	f018 f9e2 	bl	801957c <__assert_func>
    osSemaphoreAcquire(frame_buffer_sem, 0);
 80011b8:	2100      	movs	r1, #0
}
 80011ba:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    osSemaphoreAcquire(frame_buffer_sem, 0);
 80011be:	f005 bd6b 	b.w	8006c98 <osSemaphoreAcquire>
 80011c2:	bf00      	nop
 80011c4:	200001a0 	.word	0x200001a0
 80011c8:	0801a7f6 	.word	0x0801a7f6
 80011cc:	0801a8cf 	.word	0x0801a8cf
 80011d0:	0801a807 	.word	0x0801a807

080011d4 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>:
 *
 * Release the frame buffer semaphore in a way that is safe in interrupt context.
 * Called from ISR.
 */
void OSWrappers::giveFrameBufferSemaphoreFromISR()
{
 80011d4:	b508      	push	{r3, lr}
    assert(frame_buffer_sem);
 80011d6:	4b06      	ldr	r3, [pc, #24]	; (80011f0 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv+0x1c>)
 80011d8:	6818      	ldr	r0, [r3, #0]
 80011da:	b928      	cbnz	r0, 80011e8 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv+0x14>
 80011dc:	4b05      	ldr	r3, [pc, #20]	; (80011f4 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv+0x20>)
 80011de:	4a06      	ldr	r2, [pc, #24]	; (80011f8 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv+0x24>)
 80011e0:	4806      	ldr	r0, [pc, #24]	; (80011fc <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv+0x28>)
 80011e2:	2154      	movs	r1, #84	; 0x54
 80011e4:	f018 f9ca 	bl	801957c <__assert_func>
    osSemaphoreRelease(frame_buffer_sem);
}
 80011e8:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    osSemaphoreRelease(frame_buffer_sem);
 80011ec:	f005 bd90 	b.w	8006d10 <osSemaphoreRelease>
 80011f0:	200001a0 	.word	0x200001a0
 80011f4:	0801a7f6 	.word	0x0801a7f6
 80011f8:	0801a90f 	.word	0x0801a90f
 80011fc:	0801a807 	.word	0x0801a807

08001200 <_ZN8touchgfx10OSWrappers11signalVSyncEv>:
 * Note This function is called from an ISR, and should (depending on OS) trigger a
 * scheduling.
 */
void OSWrappers::signalVSync()
{
    if (vsync_queue)
 8001200:	4b04      	ldr	r3, [pc, #16]	; (8001214 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x14>)
 8001202:	6818      	ldr	r0, [r3, #0]
 8001204:	b120      	cbz	r0, 8001210 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x10>
    {
        osMessageQueuePut(vsync_queue, &dummy, 0, 0);
 8001206:	2300      	movs	r3, #0
 8001208:	461a      	mov	r2, r3
 800120a:	4903      	ldr	r1, [pc, #12]	; (8001218 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x18>)
 800120c:	f005 bdfe 	b.w	8006e0c <osMessageQueuePut>
    }
}
 8001210:	4770      	bx	lr
 8001212:	bf00      	nop
 8001214:	2000019c 	.word	0x2000019c
 8001218:	20000004 	.word	0x20000004

0800121c <_ZN8touchgfx10OSWrappers12waitForVSyncEv>:
 *
 * Note This function must first clear the mutex/queue and then wait for the next one to
 * occur.
 */
void OSWrappers::waitForVSync()
{
 800121c:	b513      	push	{r0, r1, r4, lr}
    if (vsync_queue)
 800121e:	4c08      	ldr	r4, [pc, #32]	; (8001240 <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x24>)
 8001220:	6820      	ldr	r0, [r4, #0]
 8001222:	b158      	cbz	r0, 800123c <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x20>
    {
        uint32_t dummyGet;
        // First make sure the queue is empty, by trying to remove an element with 0 timeout.
        osMessageQueueGet(vsync_queue, &dummyGet, 0, 0);
 8001224:	2300      	movs	r3, #0
 8001226:	461a      	mov	r2, r3
 8001228:	a901      	add	r1, sp, #4
 800122a:	f005 fe31 	bl	8006e90 <osMessageQueueGet>

        // Then, wait for next VSYNC to occur.
        osMessageQueueGet(vsync_queue, &dummyGet, 0, osWaitForever);
 800122e:	f04f 33ff 	mov.w	r3, #4294967295
 8001232:	2200      	movs	r2, #0
 8001234:	a901      	add	r1, sp, #4
 8001236:	6820      	ldr	r0, [r4, #0]
 8001238:	f005 fe2a 	bl	8006e90 <osMessageQueueGet>
    }
}
 800123c:	b002      	add	sp, #8
 800123e:	bd10      	pop	{r4, pc}
 8001240:	2000019c 	.word	0x2000019c

08001244 <_ZN8touchgfx13DMA_Interface5flushEv>:
    virtual void addToQueue(const BlitOp& op);

    /** This function blocks until all DMA transfers in the queue have been completed. */
    virtual void flush()
    {
        waitForFrameBufferSemaphore();
 8001244:	6803      	ldr	r3, [r0, #0]
 8001246:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8001248:	4718      	bx	r3

0800124a <_ZN8touchgfx13DMA_Interface10getDMATypeEv>:
     * @return a DMAType value of the concrete DMA_Interface implementation.
     */
    virtual DMAType getDMAType(void)
    {
        return DMA_TYPE_GENERIC;
    }
 800124a:	2000      	movs	r0, #0
 800124c:	4770      	bx	lr

0800124e <_ZN10STM32F4DMA18signalDMAInterruptEv>:
     *
     *        Raises a DMA interrupt signal.
     */
    virtual void signalDMAInterrupt()
    {
        executeCompleted();
 800124e:	6803      	ldr	r3, [r0, #0]
 8001250:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8001252:	4718      	bx	r3

08001254 <_ZN10STM32F4DMA11getBlitCapsEv>:
                                       | BLIT_OP_COPY_WITH_ALPHA
                                       | BLIT_OP_COPY_ARGB8888
                                       | BLIT_OP_COPY_ARGB8888_WITH_ALPHA
                                       | BLIT_OP_COPY_A4
                                       | BLIT_OP_COPY_A8);
}
 8001254:	f240 10ef 	movw	r0, #495	; 0x1ef
 8001258:	4770      	bx	lr
	...

0800125c <_ZN10STM32F4DMA10initializeEv>:
{
 800125c:	b510      	push	{r4, lr}
    hdma2d.Instance = DMA2D;
 800125e:	4c07      	ldr	r4, [pc, #28]	; (800127c <_ZN10STM32F4DMA10initializeEv+0x20>)
 8001260:	4b07      	ldr	r3, [pc, #28]	; (8001280 <_ZN10STM32F4DMA10initializeEv+0x24>)
 8001262:	6023      	str	r3, [r4, #0]
    HAL_DMA2D_Init(&hdma2d);
 8001264:	4620      	mov	r0, r4
 8001266:	f002 ff99 	bl	800419c <HAL_DMA2D_Init>
    hdma2d.XferCpltCallback = DMA2D_XferCpltCallback;
 800126a:	4b06      	ldr	r3, [pc, #24]	; (8001284 <_ZN10STM32F4DMA10initializeEv+0x28>)
 800126c:	6123      	str	r3, [r4, #16]
    hdma2d.XferErrorCallback = DMA2D_XferErrorCallback;
 800126e:	4b06      	ldr	r3, [pc, #24]	; (8001288 <_ZN10STM32F4DMA10initializeEv+0x2c>)
 8001270:	6163      	str	r3, [r4, #20]
 */
__STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8001272:	4b06      	ldr	r3, [pc, #24]	; (800128c <_ZN10STM32F4DMA10initializeEv+0x30>)
 8001274:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 8001278:	609a      	str	r2, [r3, #8]
}
 800127a:	bd10      	pop	{r4, pc}
 800127c:	20012994 	.word	0x20012994
 8001280:	4002b000 	.word	0x4002b000
 8001284:	080012ad 	.word	0x080012ad
 8001288:	08001291 	.word	0x08001291
 800128c:	e000e100 	.word	0xe000e100

08001290 <DMA2D_XferErrorCallback>:
    {
 8001290:	b508      	push	{r3, lr}
        assert(0);
 8001292:	4a03      	ldr	r2, [pc, #12]	; (80012a0 <DMA2D_XferErrorCallback+0x10>)
 8001294:	4b03      	ldr	r3, [pc, #12]	; (80012a4 <DMA2D_XferErrorCallback+0x14>)
 8001296:	4804      	ldr	r0, [pc, #16]	; (80012a8 <DMA2D_XferErrorCallback+0x18>)
 8001298:	2136      	movs	r1, #54	; 0x36
 800129a:	f018 f96f 	bl	801957c <__assert_func>
 800129e:	bf00      	nop
 80012a0:	0801a9f0 	.word	0x0801a9f0
 80012a4:	0801afc3 	.word	0x0801afc3
 80012a8:	0801a953 	.word	0x0801a953

080012ac <DMA2D_XferCpltCallback>:
        touchgfx::HAL::getInstance()->signalDMAInterrupt();
 80012ac:	4b02      	ldr	r3, [pc, #8]	; (80012b8 <DMA2D_XferCpltCallback+0xc>)
 80012ae:	681b      	ldr	r3, [r3, #0]
 80012b0:	6858      	ldr	r0, [r3, #4]
        dma.signalDMAInterrupt();
 80012b2:	6803      	ldr	r3, [r0, #0]
 80012b4:	695b      	ldr	r3, [r3, #20]
 80012b6:	4718      	bx	r3
 80012b8:	20012338 	.word	0x20012338

080012bc <_ZN10STM32F4DMAD1Ev>:
STM32F4DMA::~STM32F4DMA()
 80012bc:	4b08      	ldr	r3, [pc, #32]	; (80012e0 <_ZN10STM32F4DMAD1Ev+0x24>)
 80012be:	b510      	push	{r4, lr}
 80012c0:	6003      	str	r3, [r0, #0]
 80012c2:	4604      	mov	r4, r0
    HAL_DMA2D_DeInit(&hdma2d);
 80012c4:	4807      	ldr	r0, [pc, #28]	; (80012e4 <_ZN10STM32F4DMAD1Ev+0x28>)
 80012c6:	f003 f831 	bl	800432c <HAL_DMA2D_DeInit>
 */
__STATIC_INLINE void __NVIC_DisableIRQ(IRQn_Type IRQn)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80012ca:	4b07      	ldr	r3, [pc, #28]	; (80012e8 <_ZN10STM32F4DMAD1Ev+0x2c>)
 80012cc:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 80012d0:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  \details Acts as a special kind of Data Memory Barrier.
           It completes when all explicit memory accesses before this instruction complete.
 */
__STATIC_FORCEINLINE void __DSB(void)
{
  __ASM volatile ("dsb 0xF":::"memory");
 80012d4:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 80012d8:	f3bf 8f6f 	isb	sy
}
 80012dc:	4620      	mov	r0, r4
 80012de:	bd10      	pop	{r4, pc}
 80012e0:	0801a9a8 	.word	0x0801a9a8
 80012e4:	20012994 	.word	0x20012994
 80012e8:	e000e100 	.word	0xe000e100

080012ec <_ZN10STM32F4DMAD0Ev>:
STM32F4DMA::~STM32F4DMA()
 80012ec:	b510      	push	{r4, lr}
 80012ee:	4604      	mov	r4, r0
}
 80012f0:	f7ff ffe4 	bl	80012bc <_ZN10STM32F4DMAD1Ev>
 80012f4:	4620      	mov	r0, r4
 80012f6:	f44f 6142 	mov.w	r1, #3104	; 0xc20
 80012fa:	f018 f913 	bl	8019524 <_ZdlPvj>
 80012fe:	4620      	mov	r0, r4
 8001300:	bd10      	pop	{r4, pc}
	...

08001304 <_ZN8touchgfx3HAL3lcdEv>:
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 8001304:	4b04      	ldr	r3, [pc, #16]	; (8001318 <_ZN8touchgfx3HAL3lcdEv+0x14>)
 8001306:	681b      	ldr	r3, [r3, #0]
 8001308:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 800130c:	b10a      	cbz	r2, 8001312 <_ZN8touchgfx3HAL3lcdEv+0xe>
 800130e:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8001310:	b900      	cbnz	r0, 8001314 <_ZN8touchgfx3HAL3lcdEv+0x10>
            return instance->lcdRef;
 8001312:	6898      	ldr	r0, [r3, #8]
    }
 8001314:	4770      	bx	lr
 8001316:	bf00      	nop
 8001318:	20012338 	.word	0x20012338

0800131c <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE>:

void STM32F4DMA::setupDataCopy(const BlitOp& blitOp)
{
 800131c:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
    uint32_t dma2dTransferMode = DMA2D_M2M_BLEND;
    uint32_t dma2dColorMode = 0;

    bool blendingImage = (blitOp.operation == BLIT_OP_COPY_ARGB8888
 8001320:	680d      	ldr	r5, [r1, #0]
                          || blitOp.operation == BLIT_OP_COPY_ARGB8888_WITH_ALPHA
                          || blitOp.operation == BLIT_OP_COPY_WITH_ALPHA);
 8001322:	2d20      	cmp	r5, #32
{
 8001324:	460c      	mov	r4, r1
                          || blitOp.operation == BLIT_OP_COPY_WITH_ALPHA);
 8001326:	f000 8097 	beq.w	8001458 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x13c>
                          || blitOp.operation == BLIT_OP_COPY_ARGB8888_WITH_ALPHA
 800132a:	2d40      	cmp	r5, #64	; 0x40
 800132c:	f000 8094 	beq.w	8001458 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x13c>
                          || blitOp.operation == BLIT_OP_COPY_WITH_ALPHA);
 8001330:	1f2a      	subs	r2, r5, #4
 8001332:	4256      	negs	r6, r2
 8001334:	4156      	adcs	r6, r2

    bool blendingText = (blitOp.operation == BLIT_OP_COPY_A4
                         || blitOp.operation == BLIT_OP_COPY_A8);
 8001336:	2d80      	cmp	r5, #128	; 0x80
 8001338:	f000 8090 	beq.w	800145c <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x140>
 800133c:	f5a5 7380 	sub.w	r3, r5, #256	; 0x100
 8001340:	425d      	negs	r5, r3
 8001342:	415d      	adcs	r5, r3

    uint8_t bitDepth = HAL::lcd().bitDepth();
 8001344:	f7ff ffde 	bl	8001304 <_ZN8touchgfx3HAL3lcdEv>
 8001348:	6803      	ldr	r3, [r0, #0]
 800134a:	69db      	ldr	r3, [r3, #28]
 800134c:	4798      	blx	r3

    switch (blitOp.operation)
 800134e:	6823      	ldr	r3, [r4, #0]
 8001350:	2b40      	cmp	r3, #64	; 0x40
    uint8_t bitDepth = HAL::lcd().bitDepth();
 8001352:	4686      	mov	lr, r0
    switch (blitOp.operation)
 8001354:	f000 8099 	beq.w	800148a <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x16e>
 8001358:	f200 8082 	bhi.w	8001460 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x144>
 800135c:	2b04      	cmp	r3, #4
 800135e:	f000 808d 	beq.w	800147c <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x160>
 8001362:	2b20      	cmp	r3, #32
 8001364:	f000 8091 	beq.w	800148a <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x16e>
    case BLIT_OP_COPY_ARGB8888_WITH_ALPHA:
        dma2dColorMode = CM_ARGB8888;
        break;
    default:
        dma2dTransferMode = DMA2D_M2M;
        dma2dColorMode = (bitDepth == 16) ? CM_RGB565 : CM_RGB888;
 8001368:	f1be 0f10 	cmp.w	lr, #16
 800136c:	bf14      	ite	ne
 800136e:	f04f 0c01 	movne.w	ip, #1
 8001372:	f04f 0c02 	moveq.w	ip, #2
 8001376:	2200      	movs	r2, #0
        break;
    }

    /* HAL_DMA2D_ConfigLayer() depends on hdma2d.Init */
    hdma2d.Init.Mode = dma2dTransferMode;
 8001378:	4b4b      	ldr	r3, [pc, #300]	; (80014a8 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x18c>)
    hdma2d.Init.ColorMode = (bitDepth == 16) ? DMA2D_RGB565 : DMA2D_RGB888;
    hdma2d.Init.OutputOffset = blitOp.dstLoopStride - blitOp.nSteps;
 800137a:	f8b4 8010 	ldrh.w	r8, [r4, #16]
    MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, mode);
 800137e:	6819      	ldr	r1, [r3, #0]
    hdma2d.Init.OutputOffset = blitOp.dstLoopStride - blitOp.nSteps;
 8001380:	8ae7      	ldrh	r7, [r4, #22]
    MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, mode);
 8001382:	f8d1 9000 	ldr.w	r9, [r1]
    hdma2d.Init.Mode = dma2dTransferMode;
 8001386:	605a      	str	r2, [r3, #4]
    hdma2d.Init.ColorMode = (bitDepth == 16) ? DMA2D_RGB565 : DMA2D_RGB888;
 8001388:	f1be 0f10 	cmp.w	lr, #16
    MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, mode);
 800138c:	f429 3940 	bic.w	r9, r9, #196608	; 0x30000
    hdma2d.Init.ColorMode = (bitDepth == 16) ? DMA2D_RGB565 : DMA2D_RGB888;
 8001390:	bf14      	ite	ne
 8001392:	2001      	movne	r0, #1
 8001394:	2002      	moveq	r0, #2
    hdma2d.Init.OutputOffset = blitOp.dstLoopStride - blitOp.nSteps;
 8001396:	eba7 0708 	sub.w	r7, r7, r8
    MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, mode);
 800139a:	ea49 0202 	orr.w	r2, r9, r2
    hdma2d.Init.ColorMode = (bitDepth == 16) ? DMA2D_RGB565 : DMA2D_RGB888;
 800139e:	6098      	str	r0, [r3, #8]
    hdma2d.Init.OutputOffset = blitOp.dstLoopStride - blitOp.nSteps;
 80013a0:	60df      	str	r7, [r3, #12]
    MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, mode);
 80013a2:	600a      	str	r2, [r1, #0]
    MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM, color);
 80013a4:	6b4a      	ldr	r2, [r1, #52]	; 0x34

    HAL_DMA2D_SetMode(&hdma2d, dma2dTransferMode,
                      (bitDepth == 16) ? DMA2D_RGB565 : DMA2D_RGB888,
                      blitOp.dstLoopStride - blitOp.nSteps);

    hdma2d.LayerCfg[1].InputColorMode = dma2dColorMode;
 80013a6:	f8c3 c02c 	str.w	ip, [r3, #44]	; 0x2c
    MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM, color);
 80013aa:	f022 0207 	bic.w	r2, r2, #7
 80013ae:	4302      	orrs	r2, r0
 80013b0:	634a      	str	r2, [r1, #52]	; 0x34
    MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, offset);
 80013b2:	6c0a      	ldr	r2, [r1, #64]	; 0x40
 80013b4:	f422 527f 	bic.w	r2, r2, #16320	; 0x3fc0
 80013b8:	f022 023f 	bic.w	r2, r2, #63	; 0x3f
 80013bc:	433a      	orrs	r2, r7
 80013be:	640a      	str	r2, [r1, #64]	; 0x40
    hdma2d.LayerCfg[1].InputOffset = blitOp.srcLoopStride - blitOp.nSteps;
 80013c0:	8aa2      	ldrh	r2, [r4, #20]
 80013c2:	eba2 0208 	sub.w	r2, r2, r8
 80013c6:	629a      	str	r2, [r3, #40]	; 0x28

    if (blendingImage || blendingText)
 80013c8:	b906      	cbnz	r6, 80013cc <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xb0>
 80013ca:	b395      	cbz	r5, 8001432 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x116>
    {
        if (blitOp.alpha < 255)
 80013cc:	7f22      	ldrb	r2, [r4, #28]
 80013ce:	2aff      	cmp	r2, #255	; 0xff
        {
            hdma2d.LayerCfg[1].AlphaMode = DMA2D_COMBINE_ALPHA;
 80013d0:	bf15      	itete	ne
 80013d2:	2102      	movne	r1, #2
            hdma2d.LayerCfg[1].InputAlpha = blitOp.alpha;
        }
        else
        {
            hdma2d.LayerCfg[1].AlphaMode = DMA2D_NO_MODIF_ALPHA;
 80013d4:	2200      	moveq	r2, #0
            hdma2d.LayerCfg[1].InputAlpha = blitOp.alpha;
 80013d6:	e9c3 120c 	strdne	r1, r2, [r3, #48]	; 0x30
            hdma2d.LayerCfg[1].AlphaMode = DMA2D_NO_MODIF_ALPHA;
 80013da:	631a      	streq	r2, [r3, #48]	; 0x30
        }

        if (blendingText)
 80013dc:	b31d      	cbz	r5, 8001426 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x10a>
 80013de:	7f22      	ldrb	r2, [r4, #28]
 80013e0:	69a1      	ldr	r1, [r4, #24]
        {
            if (bitDepth == 16)
 80013e2:	f1be 0f10 	cmp.w	lr, #16
 80013e6:	ea4f 6c02 	mov.w	ip, r2, lsl #24
 80013ea:	d151      	bne.n	8001490 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x174>
            {
                uint32_t red = (((blitOp.color & 0xF800) >> 11) * 255) / 31;
 80013ec:	f04f 081f 	mov.w	r8, #31
 80013f0:	f3c1 22c4 	ubfx	r2, r1, #11, #5
 80013f4:	ebc2 2202 	rsb	r2, r2, r2, lsl #8
 80013f8:	fbb2 fef8 	udiv	lr, r2, r8
                uint32_t green = (((blitOp.color & 0x7E0) >> 5) * 255) / 63;
                uint32_t blue = (((blitOp.color & 0x1F)) * 255) / 31;
 80013fc:	ea01 0208 	and.w	r2, r1, r8
 8001400:	ebc2 2202 	rsb	r2, r2, r2, lsl #8
 8001404:	fbb2 f2f8 	udiv	r2, r2, r8
                uint32_t alpha = blitOp.alpha;
                hdma2d.LayerCfg[1].InputAlpha = (alpha << 24) | (red << 16) | (green << 8) | blue;
 8001408:	ea42 020c 	orr.w	r2, r2, ip
 800140c:	ea42 420e 	orr.w	r2, r2, lr, lsl #16
                uint32_t green = (((blitOp.color & 0x7E0) >> 5) * 255) / 63;
 8001410:	f3c1 1145 	ubfx	r1, r1, #5, #6
 8001414:	ebc1 2101 	rsb	r1, r1, r1, lsl #8
 8001418:	f04f 0c3f 	mov.w	ip, #63	; 0x3f
 800141c:	fbb1 f1fc 	udiv	r1, r1, ip
                hdma2d.LayerCfg[1].InputAlpha = (alpha << 24) | (red << 16) | (green << 8) | blue;
 8001420:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 8001424:	635a      	str	r2, [r3, #52]	; 0x34
                hdma2d.LayerCfg[1].InputAlpha = blitOp.color.getColor32() | (blitOp.alpha << 24);
            }
        }

        hdma2d.LayerCfg[0].InputOffset = blitOp.dstLoopStride - blitOp.nSteps;
        hdma2d.LayerCfg[0].InputColorMode = (bitDepth == 16) ? CM_RGB565 : CM_RGB888;
 8001426:	e9c3 7006 	strd	r7, r0, [r3, #24]

        HAL_DMA2D_ConfigLayer(&hdma2d, 0);
 800142a:	2100      	movs	r1, #0
 800142c:	481e      	ldr	r0, [pc, #120]	; (80014a8 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x18c>)
 800142e:	f003 f83d 	bl	80044ac <HAL_DMA2D_ConfigLayer>
    }

    HAL_DMA2D_ConfigLayer(&hdma2d, 1);
 8001432:	2101      	movs	r1, #1
 8001434:	481c      	ldr	r0, [pc, #112]	; (80014a8 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x18c>)
 8001436:	f003 f839 	bl	80044ac <HAL_DMA2D_ConfigLayer>
 800143a:	8a23      	ldrh	r3, [r4, #16]
 800143c:	8a62      	ldrh	r2, [r4, #18]

    if (blendingImage || blendingText)
 800143e:	b906      	cbnz	r6, 8001442 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x126>
 8001440:	b355      	cbz	r5, 8001498 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x17c>
    {
        HAL_DMA2D_BlendingStart_IT(&hdma2d,
 8001442:	e9cd 3200 	strd	r3, r2, [sp]
 8001446:	68e3      	ldr	r3, [r4, #12]
 8001448:	6861      	ldr	r1, [r4, #4]
 800144a:	4817      	ldr	r0, [pc, #92]	; (80014a8 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x18c>)
 800144c:	461a      	mov	r2, r3
 800144e:	f002 feef 	bl	8004230 <HAL_DMA2D_BlendingStart_IT>
        HAL_DMA2D_Start_IT(&hdma2d,
                           (unsigned int)blitOp.pSrc,
                           (unsigned int)blitOp.pDst,
                           blitOp.nSteps, blitOp.nLoops);
    }
}
 8001452:	b003      	add	sp, #12
 8001454:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
                          || blitOp.operation == BLIT_OP_COPY_WITH_ALPHA);
 8001458:	2601      	movs	r6, #1
 800145a:	e76f      	b.n	800133c <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x20>
                         || blitOp.operation == BLIT_OP_COPY_A8);
 800145c:	2501      	movs	r5, #1
 800145e:	e771      	b.n	8001344 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x28>
    switch (blitOp.operation)
 8001460:	2b80      	cmp	r3, #128	; 0x80
 8001462:	d006      	beq.n	8001472 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x156>
 8001464:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8001468:	f47f af7e 	bne.w	8001368 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x4c>
        dma2dColorMode = CM_A8;
 800146c:	f04f 0c09 	mov.w	ip, #9
 8001470:	e001      	b.n	8001476 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x15a>
        dma2dColorMode = CM_A4;
 8001472:	f04f 0c0a 	mov.w	ip, #10
    uint32_t dma2dTransferMode = DMA2D_M2M_BLEND;
 8001476:	f44f 3200 	mov.w	r2, #131072	; 0x20000
 800147a:	e77d      	b.n	8001378 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x5c>
        dma2dColorMode = (bitDepth == 16) ? CM_RGB565 : CM_RGB888;
 800147c:	2810      	cmp	r0, #16
 800147e:	bf14      	ite	ne
 8001480:	f04f 0c01 	movne.w	ip, #1
 8001484:	f04f 0c02 	moveq.w	ip, #2
 8001488:	e7f5      	b.n	8001476 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x15a>
        dma2dColorMode = CM_ARGB8888;
 800148a:	f04f 0c00 	mov.w	ip, #0
 800148e:	e7f2      	b.n	8001476 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x15a>
                hdma2d.LayerCfg[1].InputAlpha = blitOp.color.getColor32() | (blitOp.alpha << 24);
 8001490:	ea4c 0101 	orr.w	r1, ip, r1
 8001494:	6359      	str	r1, [r3, #52]	; 0x34
 8001496:	e7c6      	b.n	8001426 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x10a>
        HAL_DMA2D_Start_IT(&hdma2d,
 8001498:	9200      	str	r2, [sp, #0]
 800149a:	6861      	ldr	r1, [r4, #4]
 800149c:	68e2      	ldr	r2, [r4, #12]
 800149e:	4802      	ldr	r0, [pc, #8]	; (80014a8 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x18c>)
 80014a0:	f002 fea8 	bl	80041f4 <HAL_DMA2D_Start_IT>
}
 80014a4:	e7d5      	b.n	8001452 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x136>
 80014a6:	bf00      	nop
 80014a8:	20012994 	.word	0x20012994

080014ac <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE>:

void STM32F4DMA::setupDataFill(const BlitOp& blitOp)
{
 80014ac:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80014ae:	460d      	mov	r5, r1
    uint8_t bitDepth = HAL::lcd().bitDepth();
 80014b0:	f7ff ff28 	bl	8001304 <_ZN8touchgfx3HAL3lcdEv>
 80014b4:	6803      	ldr	r3, [r0, #0]
 80014b6:	69db      	ldr	r3, [r3, #28]
 80014b8:	4798      	blx	r3
    uint32_t dma2dTransferMode;
    uint32_t dma2dColorMode = (bitDepth == 16) ? CM_RGB565 : CM_RGB888;
 80014ba:	2810      	cmp	r0, #16
 80014bc:	69ab      	ldr	r3, [r5, #24]
 80014be:	7f29      	ldrb	r1, [r5, #28]
 80014c0:	d166      	bne.n	8001590 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0xe4>
    uint32_t color = 0;
    if (bitDepth == 16)
    {
        uint32_t red = (((blitOp.color & 0xF800) >> 11) * 255) / 31;
        uint32_t green = (((blitOp.color & 0x7E0) >> 5) * 255) / 63;
        uint32_t blue = (((blitOp.color & 0x1F)) * 255) / 31;
 80014c2:	f003 021f 	and.w	r2, r3, #31
 80014c6:	ebc2 2202 	rsb	r2, r2, r2, lsl #8
 80014ca:	201f      	movs	r0, #31
 80014cc:	fbb2 f4f0 	udiv	r4, r2, r0
        uint32_t red = (((blitOp.color & 0xF800) >> 11) * 255) / 31;
 80014d0:	f3c3 22c4 	ubfx	r2, r3, #11, #5
        uint32_t alpha = blitOp.alpha;
        color = (alpha << 24) | (red << 16) | (green << 8) | blue;
 80014d4:	ea44 6401 	orr.w	r4, r4, r1, lsl #24
        uint32_t red = (((blitOp.color & 0xF800) >> 11) * 255) / 31;
 80014d8:	ebc2 2202 	rsb	r2, r2, r2, lsl #8
        uint32_t green = (((blitOp.color & 0x7E0) >> 5) * 255) / 63;
 80014dc:	f3c3 1345 	ubfx	r3, r3, #5, #6
        uint32_t red = (((blitOp.color & 0xF800) >> 11) * 255) / 31;
 80014e0:	fbb2 f2f0 	udiv	r2, r2, r0
        color = (alpha << 24) | (red << 16) | (green << 8) | blue;
 80014e4:	ea44 4402 	orr.w	r4, r4, r2, lsl #16
        uint32_t green = (((blitOp.color & 0x7E0) >> 5) * 255) / 63;
 80014e8:	ebc3 2303 	rsb	r3, r3, r3, lsl #8
 80014ec:	223f      	movs	r2, #63	; 0x3f
    uint32_t dma2dColorMode = (bitDepth == 16) ? CM_RGB565 : CM_RGB888;
 80014ee:	2102      	movs	r1, #2
        uint32_t green = (((blitOp.color & 0x7E0) >> 5) * 255) / 63;
 80014f0:	fbb3 f3f2 	udiv	r3, r3, r2
        color = (alpha << 24) | (red << 16) | (green << 8) | blue;
 80014f4:	ea44 2403 	orr.w	r4, r4, r3, lsl #8
    else
    {
        color = (blitOp.alpha << 24) | blitOp.color.getColor32();
    }

    switch (blitOp.operation)
 80014f8:	682b      	ldr	r3, [r5, #0]
        dma2dTransferMode = DMA2D_R2M;
        break;
    };

    /* HAL_DMA2D_ConfigLayer() depends on hdma2d.Init */
    hdma2d.Init.Mode = dma2dTransferMode;
 80014fa:	4827      	ldr	r0, [pc, #156]	; (8001598 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0xec>)
    hdma2d.Init.ColorMode = (bitDepth == 16) ? DMA2D_RGB565 : DMA2D_RGB888;
    hdma2d.Init.OutputOffset = blitOp.dstLoopStride - blitOp.nSteps;
 80014fc:	8aee      	ldrh	r6, [r5, #22]
    MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, mode);
 80014fe:	6802      	ldr	r2, [r0, #0]
    switch (blitOp.operation)
 8001500:	2b08      	cmp	r3, #8
    hdma2d.Init.OutputOffset = blitOp.dstLoopStride - blitOp.nSteps;
 8001502:	8a2b      	ldrh	r3, [r5, #16]
 8001504:	eba6 0603 	sub.w	r6, r6, r3
    MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, mode);
 8001508:	6813      	ldr	r3, [r2, #0]
    hdma2d.Init.OutputOffset = blitOp.dstLoopStride - blitOp.nSteps;
 800150a:	60c6      	str	r6, [r0, #12]
        dma2dTransferMode = DMA2D_R2M;
 800150c:	bf0c      	ite	eq
 800150e:	f44f 3700 	moveq.w	r7, #131072	; 0x20000
 8001512:	f44f 3740 	movne.w	r7, #196608	; 0x30000
    MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, mode);
 8001516:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 800151a:	433b      	orrs	r3, r7
    hdma2d.Init.ColorMode = (bitDepth == 16) ? DMA2D_RGB565 : DMA2D_RGB888;
 800151c:	e9c0 7101 	strd	r7, r1, [r0, #4]
    MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, mode);
 8001520:	6013      	str	r3, [r2, #0]
    MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM, color);
 8001522:	6b53      	ldr	r3, [r2, #52]	; 0x34
 8001524:	f023 0307 	bic.w	r3, r3, #7
 8001528:	430b      	orrs	r3, r1
 800152a:	6353      	str	r3, [r2, #52]	; 0x34
    MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, offset);
 800152c:	6c13      	ldr	r3, [r2, #64]	; 0x40
 800152e:	f423 537f 	bic.w	r3, r3, #16320	; 0x3fc0
 8001532:	f023 033f 	bic.w	r3, r3, #63	; 0x3f
 8001536:	4333      	orrs	r3, r6

    HAL_DMA2D_SetMode(&hdma2d, dma2dTransferMode,
                      (bitDepth == 16) ? DMA2D_RGB565 : DMA2D_RGB888,
                      blitOp.dstLoopStride - blitOp.nSteps);

    if (dma2dTransferMode == DMA2D_M2M_BLEND)
 8001538:	f5b7 3f00 	cmp.w	r7, #131072	; 0x20000
    MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, offset);
 800153c:	6413      	str	r3, [r2, #64]	; 0x40
    if (dma2dTransferMode == DMA2D_M2M_BLEND)
 800153e:	d11c      	bne.n	800157a <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0xce>
    {
        hdma2d.LayerCfg[1].AlphaMode = DMA2D_REPLACE_ALPHA;
 8001540:	2301      	movs	r3, #1
        hdma2d.LayerCfg[1].InputAlpha = color;
 8001542:	e9c0 340c 	strd	r3, r4, [r0, #48]	; 0x30
        hdma2d.LayerCfg[1].InputColorMode = CM_A8;
 8001546:	2309      	movs	r3, #9
        hdma2d.LayerCfg[0].InputOffset = blitOp.dstLoopStride - blitOp.nSteps;
        hdma2d.LayerCfg[0].InputColorMode = (bitDepth == 16) ? CM_RGB565 : CM_RGB888;
 8001548:	e9c0 6106 	strd	r6, r1, [r0, #24]
        hdma2d.LayerCfg[1].InputColorMode = CM_A8;
 800154c:	62c3      	str	r3, [r0, #44]	; 0x2c
        HAL_DMA2D_ConfigLayer(&hdma2d, 0);
 800154e:	2100      	movs	r1, #0
 8001550:	f002 ffac 	bl	80044ac <HAL_DMA2D_ConfigLayer>
    {
        hdma2d.LayerCfg[1].InputColorMode = dma2dColorMode;
        hdma2d.LayerCfg[1].InputOffset = 0;
    }

    HAL_DMA2D_ConfigLayer(&hdma2d, 1);
 8001554:	2101      	movs	r1, #1
 8001556:	4810      	ldr	r0, [pc, #64]	; (8001598 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0xec>)
 8001558:	f002 ffa8 	bl	80044ac <HAL_DMA2D_ConfigLayer>

    if (dma2dTransferMode == DMA2D_M2M_BLEND)
 800155c:	f5b7 3f00 	cmp.w	r7, #131072	; 0x20000
 8001560:	8a2b      	ldrh	r3, [r5, #16]
 8001562:	8a6a      	ldrh	r2, [r5, #18]
 8001564:	d10d      	bne.n	8001582 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0xd6>
        HAL_DMA2D_BlendingStart_IT(&hdma2d,
 8001566:	68e9      	ldr	r1, [r5, #12]
 8001568:	480b      	ldr	r0, [pc, #44]	; (8001598 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0xec>)
 800156a:	e9cd 3200 	strd	r3, r2, [sp]
 800156e:	460b      	mov	r3, r1
 8001570:	460a      	mov	r2, r1
 8001572:	f002 fe5d 	bl	8004230 <HAL_DMA2D_BlendingStart_IT>
                                   (unsigned int)blitOp.pDst,
                                   blitOp.nSteps, blitOp.nLoops);
    else
        HAL_DMA2D_Start_IT(&hdma2d, color, (unsigned int)blitOp.pDst,
                           blitOp.nSteps, blitOp.nLoops);
}
 8001576:	b003      	add	sp, #12
 8001578:	bdf0      	pop	{r4, r5, r6, r7, pc}
        hdma2d.LayerCfg[1].InputOffset = 0;
 800157a:	2300      	movs	r3, #0
        hdma2d.LayerCfg[1].InputColorMode = dma2dColorMode;
 800157c:	62c1      	str	r1, [r0, #44]	; 0x2c
        hdma2d.LayerCfg[1].InputOffset = 0;
 800157e:	6283      	str	r3, [r0, #40]	; 0x28
 8001580:	e7e8      	b.n	8001554 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0xa8>
        HAL_DMA2D_Start_IT(&hdma2d, color, (unsigned int)blitOp.pDst,
 8001582:	9200      	str	r2, [sp, #0]
 8001584:	4621      	mov	r1, r4
 8001586:	68ea      	ldr	r2, [r5, #12]
 8001588:	4803      	ldr	r0, [pc, #12]	; (8001598 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0xec>)
 800158a:	f002 fe33 	bl	80041f4 <HAL_DMA2D_Start_IT>
}
 800158e:	e7f2      	b.n	8001576 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0xca>
        color = (blitOp.alpha << 24) | blitOp.color.getColor32();
 8001590:	ea43 6401 	orr.w	r4, r3, r1, lsl #24
    uint32_t dma2dColorMode = (bitDepth == 16) ? CM_RGB565 : CM_RGB888;
 8001594:	2101      	movs	r1, #1
 8001596:	e7af      	b.n	80014f8 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0x4c>
 8001598:	20012994 	.word	0x20012994

0800159c <_ZN10STM32F4DMAC1Ev>:
STM32F4DMA::STM32F4DMA()
 800159c:	b570      	push	{r4, r5, r6, lr}
 800159e:	4605      	mov	r5, r0
    : DMA_Interface(dma_queue), dma_queue(queue_storage, sizeof(queue_storage) / sizeof(queue_storage[0]))
 80015a0:	462c      	mov	r4, r5
 80015a2:	4b0a      	ldr	r3, [pc, #40]	; (80015cc <_ZN10STM32F4DMAC1Ev+0x30>)
 80015a4:	300c      	adds	r0, #12
     * Constructs a DMA Interface object.
     *
     * @param [in] dmaQueue Reference to the queue of DMA operations.
     */
    DMA_Interface(DMA_Queue& dmaQueue)
        : queue(dmaQueue), isRunning(false), isAllowed(false)
 80015a6:	2600      	movs	r6, #0
 80015a8:	6068      	str	r0, [r5, #4]
 80015aa:	722e      	strb	r6, [r5, #8]
 80015ac:	726e      	strb	r6, [r5, #9]
 80015ae:	f844 3b20 	str.w	r3, [r4], #32
 80015b2:	2260      	movs	r2, #96	; 0x60
 80015b4:	4621      	mov	r1, r4
 80015b6:	f008 ffcf 	bl	800a558 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>
 80015ba:	f505 6342 	add.w	r3, r5, #3104	; 0xc20
 */
struct colortype
{
    /** Default constructor. Creates a black (0) color. */
    colortype()
        : color(0)
 80015be:	61a6      	str	r6, [r4, #24]
 80015c0:	3420      	adds	r4, #32
 80015c2:	42a3      	cmp	r3, r4
 80015c4:	d1fb      	bne.n	80015be <_ZN10STM32F4DMAC1Ev+0x22>
{}
 80015c6:	4628      	mov	r0, r5
 80015c8:	bd70      	pop	{r4, r5, r6, pc}
 80015ca:	bf00      	nop
 80015cc:	0801a9a8 	.word	0x0801a9a8

080015d0 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
     * @see touchgfx::AbstractPartition::capacity
     */
    virtual uint16_t capacity() const
    {
        return NUMBER_OF_ELEMENTS;
    }
 80015d0:	2001      	movs	r0, #1
 80015d2:	4770      	bx	lr

080015d4 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
     * @see touchgfx::AbstractPartition::element_size
     */
    virtual uint32_t element_size()
    {
        return sizeof(stBlocks[0]);
    }
 80015d4:	200c      	movs	r0, #12
 80015d6:	4770      	bx	lr

080015d8 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE7elementEt>:
     *
     * @see touchgfx::AbstractPartition::element
     */
    virtual void* element(uint16_t index)
    {
        return &stBlocks[index];
 80015d8:	230c      	movs	r3, #12
 80015da:	fb03 0001 	mla	r0, r3, r1, r0
    }
 80015de:	3008      	adds	r0, #8
 80015e0:	4770      	bx	lr

080015e2 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE7elementEt>:
     *
     * @see touchgfx::AbstractPartition::element
     */
    virtual const void* element(uint16_t index) const
    {
        return &stBlocks[index];
 80015e2:	230c      	movs	r3, #12
 80015e4:	fb03 0001 	mla	r0, r3, r1, r0
    }
 80015e8:	3008      	adds	r0, #8
 80015ea:	4770      	bx	lr

080015ec <_ZNK8touchgfx9PartitionINS_4meta8TypeListI14mainScreenViewNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 80015ec:	2001      	movs	r0, #1
 80015ee:	4770      	bx	lr

080015f0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI14mainScreenViewNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 80015f0:	f240 5014 	movw	r0, #1300	; 0x514
 80015f4:	4770      	bx	lr

080015f6 <_ZN8touchgfx9PartitionINS_4meta8TypeListI14mainScreenViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 80015f6:	f240 5314 	movw	r3, #1300	; 0x514
 80015fa:	fb03 0001 	mla	r0, r3, r1, r0
    }
 80015fe:	3008      	adds	r0, #8
 8001600:	4770      	bx	lr

08001602 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI14mainScreenViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8001602:	f240 5314 	movw	r3, #1300	; 0x514
 8001606:	fb03 0001 	mla	r0, r3, r1, r0
    }
 800160a:	3008      	adds	r0, #8
 800160c:	4770      	bx	lr

0800160e <_ZNK8touchgfx9PartitionINS_4meta8TypeListI19mainScreenPresenterNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 800160e:	2001      	movs	r0, #1
 8001610:	4770      	bx	lr

08001612 <_ZN8touchgfx9PartitionINS_4meta8TypeListI19mainScreenPresenterNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 8001612:	2010      	movs	r0, #16
 8001614:	4770      	bx	lr

08001616 <_ZN8touchgfx9PartitionINS_4meta8TypeListI19mainScreenPresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8001616:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 800161a:	3008      	adds	r0, #8
 800161c:	4770      	bx	lr

0800161e <_ZNK8touchgfx9PartitionINS_4meta8TypeListI19mainScreenPresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 800161e:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 8001622:	3008      	adds	r0, #8
 8001624:	4770      	bx	lr

08001626 <_ZN16FrontendHeapBase15gotoStartScreenER19FrontendApplication>:
     */
    typedef touchgfx::meta::select_type_maxsize< GeneratedTransitionTypes >::type MaxGeneratedTransitionType;

    virtual void gotoStartScreen(FrontendApplication& app)
    {
        app.gotomainScreenScreenNoTransition();
 8001626:	4608      	mov	r0, r1
 8001628:	f001 bab0 	b.w	8002b8c <_ZN23FrontendApplicationBase32gotomainScreenScreenNoTransitionEv>

0800162c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>:
class Partition : public AbstractPartition
 800162c:	b510      	push	{r4, lr}
 800162e:	4b03      	ldr	r3, [pc, #12]	; (800163c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 8001630:	6003      	str	r3, [r0, #0]
 8001632:	4604      	mov	r4, r0
 8001634:	f007 fbf4 	bl	8008e20 <_ZN8touchgfx17AbstractPartitionD1Ev>
 8001638:	4620      	mov	r0, r4
 800163a:	bd10      	pop	{r4, pc}
 800163c:	0801aa94 	.word	0x0801aa94

08001640 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8001640:	b510      	push	{r4, lr}
 8001642:	4604      	mov	r4, r0
 8001644:	f7ff fff2 	bl	800162c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>
 8001648:	4620      	mov	r0, r4
 800164a:	2114      	movs	r1, #20
 800164c:	f017 ff6a 	bl	8019524 <_ZdlPvj>
 8001650:	4620      	mov	r0, r4
 8001652:	bd10      	pop	{r4, pc}

08001654 <_ZN8touchgfx9PartitionINS_4meta8TypeListI14mainScreenViewNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 8001654:	b510      	push	{r4, lr}
 8001656:	4b03      	ldr	r3, [pc, #12]	; (8001664 <_ZN8touchgfx9PartitionINS_4meta8TypeListI14mainScreenViewNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 8001658:	6003      	str	r3, [r0, #0]
 800165a:	4604      	mov	r4, r0
 800165c:	f007 fbe0 	bl	8008e20 <_ZN8touchgfx17AbstractPartitionD1Ev>
 8001660:	4620      	mov	r0, r4
 8001662:	bd10      	pop	{r4, pc}
 8001664:	0801aa60 	.word	0x0801aa60

08001668 <_ZN8touchgfx9PartitionINS_4meta8TypeListI14mainScreenViewNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8001668:	b510      	push	{r4, lr}
 800166a:	4604      	mov	r4, r0
 800166c:	f7ff fff2 	bl	8001654 <_ZN8touchgfx9PartitionINS_4meta8TypeListI14mainScreenViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8001670:	4620      	mov	r0, r4
 8001672:	f240 511c 	movw	r1, #1308	; 0x51c
 8001676:	f017 ff55 	bl	8019524 <_ZdlPvj>
 800167a:	4620      	mov	r0, r4
 800167c:	bd10      	pop	{r4, pc}
	...

08001680 <_ZN8touchgfx9PartitionINS_4meta8TypeListI19mainScreenPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 8001680:	b510      	push	{r4, lr}
 8001682:	4b03      	ldr	r3, [pc, #12]	; (8001690 <_ZN8touchgfx9PartitionINS_4meta8TypeListI19mainScreenPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 8001684:	6003      	str	r3, [r0, #0]
 8001686:	4604      	mov	r4, r0
 8001688:	f007 fbca 	bl	8008e20 <_ZN8touchgfx17AbstractPartitionD1Ev>
 800168c:	4620      	mov	r0, r4
 800168e:	bd10      	pop	{r4, pc}
 8001690:	0801aa2c 	.word	0x0801aa2c

08001694 <_ZN8touchgfx9PartitionINS_4meta8TypeListI19mainScreenPresenterNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8001694:	b510      	push	{r4, lr}
 8001696:	4604      	mov	r4, r0
 8001698:	f7ff fff2 	bl	8001680 <_ZN8touchgfx9PartitionINS_4meta8TypeListI19mainScreenPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 800169c:	4620      	mov	r0, r4
 800169e:	2118      	movs	r1, #24
 80016a0:	f017 ff40 	bl	8019524 <_ZdlPvj>
 80016a4:	4620      	mov	r0, r4
 80016a6:	bd10      	pop	{r4, pc}

080016a8 <_ZN12FrontendHeapD1Ev>:
#ifndef FRONTENDHEAP_HPP
#define FRONTENDHEAP_HPP

#include <gui_generated/common/FrontendHeapBase.hpp>

class FrontendHeap : public FrontendHeapBase
 80016a8:	b510      	push	{r4, lr}
 80016aa:	4b08      	ldr	r3, [pc, #32]	; (80016cc <_ZN12FrontendHeapD1Ev+0x24>)
 80016ac:	6003      	str	r3, [r0, #0]
 80016ae:	4604      	mov	r4, r0
 80016b0:	f500 60a9 	add.w	r0, r0, #1352	; 0x548
 80016b4:	f7ff ffba 	bl	800162c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>
 80016b8:	f104 002c 	add.w	r0, r4, #44	; 0x2c
 80016bc:	f7ff ffca 	bl	8001654 <_ZN8touchgfx9PartitionINS_4meta8TypeListI14mainScreenViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 80016c0:	f104 0014 	add.w	r0, r4, #20
 80016c4:	f7ff ffdc 	bl	8001680 <_ZN8touchgfx9PartitionINS_4meta8TypeListI19mainScreenPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 80016c8:	4620      	mov	r0, r4
 80016ca:	bd10      	pop	{r4, pc}
 80016cc:	0801aac8 	.word	0x0801aac8

080016d0 <__tcf_0>:
                            > > CombinedTransitionTypes;
    typedef touchgfx::meta::select_type_maxsize< CombinedTransitionTypes >::type MaxTransitionType;

    static FrontendHeap& getInstance()
    {
        static FrontendHeap instance;
 80016d0:	b508      	push	{r3, lr}
 80016d2:	4802      	ldr	r0, [pc, #8]	; (80016dc <__tcf_0+0xc>)
 80016d4:	f7ff ffe8 	bl	80016a8 <_ZN12FrontendHeapD1Ev>
 80016d8:	bd08      	pop	{r3, pc}
 80016da:	bf00      	nop
 80016dc:	200001a8 	.word	0x200001a8

080016e0 <_ZN12FrontendHeapD0Ev>:
class FrontendHeap : public FrontendHeapBase
 80016e0:	b510      	push	{r4, lr}
 80016e2:	4604      	mov	r4, r0
 80016e4:	f7ff ffe0 	bl	80016a8 <_ZN12FrontendHeapD1Ev>
 80016e8:	4620      	mov	r0, r4
 80016ea:	f44f 61d7 	mov.w	r1, #1720	; 0x6b8
 80016ee:	f017 ff19 	bl	8019524 <_ZdlPvj>
 80016f2:	4620      	mov	r0, r4
 80016f4:	bd10      	pop	{r4, pc}
	...

080016f8 <touchgfx_init>:
static ApplicationFontProvider fontProvider;
static Texts texts;
static TouchGFXHAL hal(dma, display, tc, 240, 320);

void touchgfx_init()
{
 80016f8:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
    Bitmap::registerBitmapDatabase(BitmapDatabase::getInstance(), BitmapDatabase::getInstanceSize());
 80016fc:	f001 f982 	bl	8002a04 <_ZN14BitmapDatabase11getInstanceEv>
 8001700:	4605      	mov	r5, r0
 8001702:	f001 f983 	bl	8002a0c <_ZN14BitmapDatabase15getInstanceSizeEv>
 8001706:	2400      	movs	r4, #0
 8001708:	4601      	mov	r1, r0
 800170a:	4623      	mov	r3, r4
 800170c:	4628      	mov	r0, r5
 800170e:	4622      	mov	r2, r4
 8001710:	9400      	str	r4, [sp, #0]
 8001712:	f00c fa51 	bl	800dbb8 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>
     *
     * @param  t The array of texts.
     */
    static void registerTexts(const Texts* t)
    {
        texts = t;
 8001716:	4b25      	ldr	r3, [pc, #148]	; (80017ac <touchgfx_init+0xb4>)
 8001718:	4a25      	ldr	r2, [pc, #148]	; (80017b0 <touchgfx_init+0xb8>)
        static FrontendHeap instance;
 800171a:	4d26      	ldr	r5, [pc, #152]	; (80017b4 <touchgfx_init+0xbc>)
 800171c:	601a      	str	r2, [r3, #0]
    TypedText::registerTexts(&texts);
    Texts::setLanguage(0);
 800171e:	4620      	mov	r0, r4
 8001720:	f001 fc6e 	bl	8003000 <_ZN8touchgfx5Texts11setLanguageEt>

    FontManager::setFontProvider(&fontProvider);
 8001724:	4824      	ldr	r0, [pc, #144]	; (80017b8 <touchgfx_init+0xc0>)
 8001726:	f00c f991 	bl	800da4c <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>
 800172a:	782b      	ldrb	r3, [r5, #0]
 800172c:	f3bf 8f5b 	dmb	ish
 8001730:	07db      	lsls	r3, r3, #31
 8001732:	d435      	bmi.n	80017a0 <touchgfx_init+0xa8>
 8001734:	4628      	mov	r0, r5
 8001736:	f017 fef7 	bl	8019528 <__cxa_guard_acquire>
 800173a:	b388      	cbz	r0, 80017a0 <touchgfx_init+0xa8>
            AbstractPartition& tra,
            MVPApplication& app)
        : presenterStorage(pres),
          screenStorage(scr),
          transitionStorage(tra),
          frontendApplication(app)
 800173c:	4c1f      	ldr	r4, [pc, #124]	; (80017bc <touchgfx_init+0xc4>)
    Model model;
    FrontendApplication app;

private:
    FrontendHeap() : FrontendHeapBase(presenters, views, transitions, app),
                     app(model, *this)
 800173e:	4b20      	ldr	r3, [pc, #128]	; (80017c0 <touchgfx_init+0xc8>)
 8001740:	6023      	str	r3, [r4, #0]
 8001742:	f504 66ac 	add.w	r6, r4, #1376	; 0x560
 8001746:	f104 0014 	add.w	r0, r4, #20
 800174a:	f104 082c 	add.w	r8, r4, #44	; 0x2c
 800174e:	f504 67a9 	add.w	r7, r4, #1352	; 0x548
 8001752:	6060      	str	r0, [r4, #4]
 8001754:	f8c4 8008 	str.w	r8, [r4, #8]
 8001758:	60e7      	str	r7, [r4, #12]
 800175a:	6126      	str	r6, [r4, #16]
 800175c:	f007 fb62 	bl	8008e24 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8001760:	4b18      	ldr	r3, [pc, #96]	; (80017c4 <touchgfx_init+0xcc>)
 8001762:	6163      	str	r3, [r4, #20]
 8001764:	4640      	mov	r0, r8
 8001766:	f007 fb5d 	bl	8008e24 <_ZN8touchgfx17AbstractPartitionC1Ev>
 800176a:	4b17      	ldr	r3, [pc, #92]	; (80017c8 <touchgfx_init+0xd0>)
 800176c:	62e3      	str	r3, [r4, #44]	; 0x2c
 800176e:	4638      	mov	r0, r7
 8001770:	f007 fb58 	bl	8008e24 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8001774:	4b15      	ldr	r3, [pc, #84]	; (80017cc <touchgfx_init+0xd4>)
 8001776:	f8c4 3548 	str.w	r3, [r4, #1352]	; 0x548
 800177a:	f204 505c 	addw	r0, r4, #1372	; 0x55c
 800177e:	f001 ffdb 	bl	8003738 <_ZN5ModelC1Ev>
 8001782:	4622      	mov	r2, r4
 8001784:	f204 515c 	addw	r1, r4, #1372	; 0x55c
 8001788:	4630      	mov	r0, r6
 800178a:	f001 ffcb 	bl	8003724 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>
 800178e:	4630      	mov	r0, r6
 8001790:	f001 f9fc 	bl	8002b8c <_ZN23FrontendApplicationBase32gotomainScreenScreenNoTransitionEv>
        static FrontendHeap instance;
 8001794:	4628      	mov	r0, r5
 8001796:	f017 fed3 	bl	8019540 <__cxa_guard_release>
 800179a:	480d      	ldr	r0, [pc, #52]	; (80017d0 <touchgfx_init+0xd8>)
 800179c:	f017 ff0c 	bl	80195b8 <atexit>

    FrontendHeap& heap = FrontendHeap::getInstance();
    (void)heap; // we need to obtain the reference above to initialize the frontend heap.

    hal.initialize();
 80017a0:	480c      	ldr	r0, [pc, #48]	; (80017d4 <touchgfx_init+0xdc>)
}
 80017a2:	b002      	add	sp, #8
 80017a4:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    hal.initialize();
 80017a8:	f7ff bcb4 	b.w	8001114 <_ZN11TouchGFXHAL10initializeEv>
 80017ac:	200123b4 	.word	0x200123b4
 80017b0:	200014fc 	.word	0x200014fc
 80017b4:	200001a4 	.word	0x200001a4
 80017b8:	20000008 	.word	0x20000008
 80017bc:	200001a8 	.word	0x200001a8
 80017c0:	0801aac8 	.word	0x0801aac8
 80017c4:	0801aa2c 	.word	0x0801aa2c
 80017c8:	0801aa60 	.word	0x0801aa60
 80017cc:	0801aa94 	.word	0x0801aa94
 80017d0:	080016d1 	.word	0x080016d1
 80017d4:	20001484 	.word	0x20001484

080017d8 <touchgfx_taskEntry>:
     * Main event loop. Will wait for VSYNC signal, and then process next frame. Call
     * this function from your GUI task.
     *
     * Note This function never returns
     */
    hal.taskEntry();
 80017d8:	4801      	ldr	r0, [pc, #4]	; (80017e0 <touchgfx_taskEntry+0x8>)
 80017da:	f7ff bbbd 	b.w	8000f58 <_ZN11TouchGFXHAL9taskEntryEv>
 80017de:	bf00      	nop
 80017e0:	20001484 	.word	0x20001484

080017e4 <_GLOBAL__sub_I_touchgfx_init>:
}
 80017e4:	b570      	push	{r4, r5, r6, lr}
static STM32F4DMA dma;
 80017e6:	4e28      	ldr	r6, [pc, #160]	; (8001888 <_GLOBAL__sub_I_touchgfx_init+0xa4>)
{
public:

    STM32TouchController() {}
 80017e8:	4c28      	ldr	r4, [pc, #160]	; (800188c <_GLOBAL__sub_I_touchgfx_init+0xa8>)
static LCD16bpp display;
 80017ea:	4d29      	ldr	r5, [pc, #164]	; (8001890 <_GLOBAL__sub_I_touchgfx_init+0xac>)
 80017ec:	4b29      	ldr	r3, [pc, #164]	; (8001894 <_GLOBAL__sub_I_touchgfx_init+0xb0>)
 80017ee:	6023      	str	r3, [r4, #0]
static STM32F4DMA dma;
 80017f0:	4630      	mov	r0, r6
 80017f2:	f7ff fed3 	bl	800159c <_ZN10STM32F4DMAC1Ev>
static LCD16bpp display;
 80017f6:	4628      	mov	r0, r5
 80017f8:	f00f f9d8 	bl	8010bac <_ZN8touchgfx8LCD16bppC1Ev>
          useDMAAcceleration(true)
 80017fc:	4b26      	ldr	r3, [pc, #152]	; (8001898 <_GLOBAL__sub_I_touchgfx_init+0xb4>)
 80017fe:	4827      	ldr	r0, [pc, #156]	; (800189c <_GLOBAL__sub_I_touchgfx_init+0xb8>)
 8001800:	6658      	str	r0, [r3, #100]	; 0x64
        instance = this;
 8001802:	4827      	ldr	r0, [pc, #156]	; (80018a0 <_GLOBAL__sub_I_touchgfx_init+0xbc>)
          useDMAAcceleration(true)
 8001804:	60dc      	str	r4, [r3, #12]
 8001806:	2200      	movs	r2, #0
 8001808:	2101      	movs	r1, #1
 800180a:	e9c3 6501 	strd	r6, r5, [r3, #4]
 800180e:	e9c3 2204 	strd	r2, r2, [r3, #16]
              downX(0),
              downY(0),
              tickCount(0),
              velocityX(0),
              velocityY(0),
              inProgress(false)
 8001812:	e9c3 2206 	strd	r2, r2, [r3, #24]
 8001816:	e9c3 2208 	strd	r2, r2, [r3, #32]
 800181a:	851a      	strh	r2, [r3, #40]	; 0x28
 800181c:	f883 202a 	strb.w	r2, [r3, #42]	; 0x2a
    };

public:
    /** Default constructor. Does nothing. */
    Gestures()
        : listener(0), dragThresholdValue(0)
 8001820:	62da      	str	r2, [r3, #44]	; 0x2c
 8001822:	861a      	strh	r2, [r3, #48]	; 0x30
 8001824:	e9c3 220e 	strd	r2, r2, [r3, #56]	; 0x38
 8001828:	e9c3 2210 	strd	r2, r2, [r3, #64]	; 0x40
 800182c:	f883 2048 	strb.w	r2, [r3, #72]	; 0x48
 8001830:	f883 204a 	strb.w	r2, [r3, #74]	; 0x4a
{
public:
    /** Default constructor. Resulting in an empty Rect with coordinates 0,0. */
    Rect()
    {
        this->x = 0;
 8001834:	e9c3 2213 	strd	r2, r2, [r3, #76]	; 0x4c
        this->y = 0;
 8001838:	655a      	str	r2, [r3, #84]	; 0x54
 800183a:	f883 2068 	strb.w	r2, [r3, #104]	; 0x68
 800183e:	f883 2069 	strb.w	r2, [r3, #105]	; 0x69
 8001842:	f883 206a 	strb.w	r2, [r3, #106]	; 0x6a
 8001846:	f883 206b 	strb.w	r2, [r3, #107]	; 0x6b
 800184a:	f883 206c 	strb.w	r2, [r3, #108]	; 0x6c
 800184e:	671a      	str	r2, [r3, #112]	; 0x70
 8001850:	f883 2075 	strb.w	r2, [r3, #117]	; 0x75
 8001854:	f883 2076 	strb.w	r2, [r3, #118]	; 0x76
 8001858:	f883 1049 	strb.w	r1, [r3, #73]	; 0x49
 800185c:	f883 1077 	strb.w	r1, [r3, #119]	; 0x77
        instance = this;
 8001860:	6003      	str	r3, [r0, #0]
        DISPLAY_WIDTH = width;
 8001862:	4810      	ldr	r0, [pc, #64]	; (80018a4 <_GLOBAL__sub_I_touchgfx_init+0xc0>)
        DISPLAY_HEIGHT = height;
 8001864:	4d10      	ldr	r5, [pc, #64]	; (80018a8 <_GLOBAL__sub_I_touchgfx_init+0xc4>)
        nativeDisplayOrientation = ((width >= height) ? ORIENTATION_LANDSCAPE : ORIENTATION_PORTRAIT);
 8001866:	f883 1034 	strb.w	r1, [r3, #52]	; 0x34
        DISPLAY_WIDTH = width;
 800186a:	24f0      	movs	r4, #240	; 0xf0
 800186c:	8004      	strh	r4, [r0, #0]
        DISPLAY_HEIGHT = height;
 800186e:	f44f 70a0 	mov.w	r0, #320	; 0x140
 8001872:	8028      	strh	r0, [r5, #0]
        DISPLAY_ROTATION = rotate0;
 8001874:	4d0d      	ldr	r5, [pc, #52]	; (80018ac <_GLOBAL__sub_I_touchgfx_init+0xc8>)
 8001876:	702a      	strb	r2, [r5, #0]
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH;
 8001878:	4a0d      	ldr	r2, [pc, #52]	; (80018b0 <_GLOBAL__sub_I_touchgfx_init+0xcc>)
 800187a:	8014      	strh	r4, [r2, #0]
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT;
 800187c:	4a0d      	ldr	r2, [pc, #52]	; (80018b4 <_GLOBAL__sub_I_touchgfx_init+0xd0>)
 800187e:	8010      	strh	r0, [r2, #0]
     * @param [in,out] display Reference to LCD interface.
     * @param [in,out] tc      Reference to Touch Controller driver.
     * @param width            Width of the display.
     * @param height           Height of the display.
     */
    TouchGFXHAL(touchgfx::DMA_Interface& dma, touchgfx::LCD& display, touchgfx::TouchController& tc, uint16_t width, uint16_t height) : TouchGFXGeneratedHAL(dma, display, tc, width, height)
 8001880:	4a0d      	ldr	r2, [pc, #52]	; (80018b8 <_GLOBAL__sub_I_touchgfx_init+0xd4>)
 8001882:	601a      	str	r2, [r3, #0]
}
 8001884:	bd70      	pop	{r4, r5, r6, pc}
 8001886:	bf00      	nop
 8001888:	20000864 	.word	0x20000864
 800188c:	20000860 	.word	0x20000860
 8001890:	20001500 	.word	0x20001500
 8001894:	0801a5f0 	.word	0x0801a5f0
 8001898:	20001484 	.word	0x20001484
 800189c:	01000001 	.word	0x01000001
 80018a0:	20012338 	.word	0x20012338
 80018a4:	2001232c 	.word	0x2001232c
 80018a8:	2001232e 	.word	0x2001232e
 80018ac:	20012330 	.word	0x20012330
 80018b0:	20012332 	.word	0x20012332
 80018b4:	20012334 	.word	0x20012334
 80018b8:	0801a6a4 	.word	0x0801a6a4

080018bc <_GLOBAL__sub_D_touchgfx_init>:
static STM32F4DMA dma;
 80018bc:	4801      	ldr	r0, [pc, #4]	; (80018c4 <_GLOBAL__sub_D_touchgfx_init+0x8>)
 80018be:	f7ff bcfd 	b.w	80012bc <_ZN10STM32F4DMAD1Ev>
 80018c2:	bf00      	nop
 80018c4:	20000864 	.word	0x20000864

080018c8 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>:
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80018c8:	4b03      	ldr	r3, [pc, #12]	; (80018d8 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv+0x10>)
 80018ca:	2290      	movs	r2, #144	; 0x90
 80018cc:	f883 235a 	strb.w	r2, [r3, #858]	; 0x35a
 80018d0:	f883 2358 	strb.w	r2, [r3, #856]	; 0x358

void TouchGFXGeneratedHAL::configureInterrupts()
{
    NVIC_SetPriority(DMA2D_IRQn, 9);
    NVIC_SetPriority(LTDC_IRQn, 9);
}
 80018d4:	4770      	bx	lr
 80018d6:	bf00      	nop
 80018d8:	e000e100 	.word	0xe000e100

080018dc <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>:
    NVIC_DisableIRQ(LTDC_IRQn);
}

void TouchGFXGeneratedHAL::enableLCDControllerInterrupt()
{
    lcd_int_active_line = (LTDC->BPCR & 0x7FF) - 1;
 80018dc:	4a09      	ldr	r2, [pc, #36]	; (8001904 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x28>)
 80018de:	490a      	ldr	r1, [pc, #40]	; (8001908 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x2c>)
 80018e0:	68d3      	ldr	r3, [r2, #12]
    lcd_int_porch_line = (LTDC->AWCR & 0x7FF) - 1;
 80018e2:	480a      	ldr	r0, [pc, #40]	; (800190c <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x30>)
    lcd_int_active_line = (LTDC->BPCR & 0x7FF) - 1;
 80018e4:	f3c3 030a 	ubfx	r3, r3, #0, #11
 80018e8:	3b01      	subs	r3, #1
 80018ea:	b29b      	uxth	r3, r3
 80018ec:	800b      	strh	r3, [r1, #0]
    lcd_int_porch_line = (LTDC->AWCR & 0x7FF) - 1;
 80018ee:	6911      	ldr	r1, [r2, #16]
 80018f0:	f3c1 010a 	ubfx	r1, r1, #0, #11
 80018f4:	3901      	subs	r1, #1
 80018f6:	8001      	strh	r1, [r0, #0]

    /* Sets the Line Interrupt position */
    LTDC->LIPCR = lcd_int_active_line;
 80018f8:	6413      	str	r3, [r2, #64]	; 0x40
    /* Line Interrupt Enable            */
    LTDC->IER |= LTDC_IER_LIE;
 80018fa:	6b53      	ldr	r3, [r2, #52]	; 0x34
 80018fc:	f043 0301 	orr.w	r3, r3, #1
 8001900:	6353      	str	r3, [r2, #52]	; 0x34
}
 8001902:	4770      	bx	lr
 8001904:	40016800 	.word	0x40016800
 8001908:	2000157a 	.word	0x2000157a
 800190c:	20001578 	.word	0x20001578

08001910 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>:

uint16_t* TouchGFXGeneratedHAL::getTFTFrameBuffer() const
{
    return (uint16_t*)LTDC_Layer1->CFBAR;
 8001910:	4b01      	ldr	r3, [pc, #4]	; (8001918 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv+0x8>)
 8001912:	6a98      	ldr	r0, [r3, #40]	; 0x28
}
 8001914:	4770      	bx	lr
 8001916:	bf00      	nop
 8001918:	40016884 	.word	0x40016884

0800191c <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>:

void TouchGFXGeneratedHAL::setTFTFrameBuffer(uint16_t* adr)
{
    LTDC_Layer1->CFBAR = (uint32_t)adr;
 800191c:	4b02      	ldr	r3, [pc, #8]	; (8001928 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt+0xc>)

    /* Reload immediate */
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 800191e:	2201      	movs	r2, #1
    LTDC_Layer1->CFBAR = (uint32_t)adr;
 8001920:	6299      	str	r1, [r3, #40]	; 0x28
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 8001922:	f843 2c60 	str.w	r2, [r3, #-96]
}
 8001926:	4770      	bx	lr
 8001928:	40016884 	.word	0x40016884

0800192c <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>:

void TouchGFXGeneratedHAL::flushFrameBuffer(const touchgfx::Rect& rect)
{
    HAL::flushFrameBuffer(rect);
 800192c:	f007 bf7f 	b.w	800982e <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>

08001930 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>:
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8001930:	4b03      	ldr	r3, [pc, #12]	; (8001940 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv+0x10>)
 8001932:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 8001936:	609a      	str	r2, [r3, #8]
 8001938:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 800193c:	609a      	str	r2, [r3, #8]
}
 800193e:	4770      	bx	lr
 8001940:	e000e100 	.word	0xe000e100

08001944 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>:
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8001944:	4b08      	ldr	r3, [pc, #32]	; (8001968 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv+0x24>)
 8001946:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 800194a:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  __ASM volatile ("dsb 0xF":::"memory");
 800194e:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 8001952:	f3bf 8f6f 	isb	sy
 8001956:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 800195a:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  __ASM volatile ("dsb 0xF":::"memory");
 800195e:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 8001962:	f3bf 8f6f 	isb	sy
}
 8001966:	4770      	bx	lr
 8001968:	e000e100 	.word	0xe000e100

0800196c <_ZN20TouchGFXGeneratedHAL10initializeEv>:
{
 800196c:	b538      	push	{r3, r4, r5, lr}
 800196e:	4604      	mov	r4, r0
    HAL::initialize();
 8001970:	f008 fa3e 	bl	8009df0 <_ZN8touchgfx3HAL10initializeEv>
    registerEventListener(*(touchgfx::Application::getInstance()));
 8001974:	6823      	ldr	r3, [r4, #0]
 8001976:	6cdd      	ldr	r5, [r3, #76]	; 0x4c
 8001978:	f00a f95c 	bl	800bc34 <_ZN8touchgfx11Application11getInstanceEv>
 800197c:	4601      	mov	r1, r0
 800197e:	4620      	mov	r0, r4
 8001980:	47a8      	blx	r5
    setFrameBufferStartAddresses((void*)frameBuf, (void*)(frameBuf + sizeof(frameBuf) / (sizeof(uint32_t) * 2)), (void*)0);
 8001982:	6823      	ldr	r3, [r4, #0]
 8001984:	4a05      	ldr	r2, [pc, #20]	; (800199c <_ZN20TouchGFXGeneratedHAL10initializeEv+0x30>)
 8001986:	6f5d      	ldr	r5, [r3, #116]	; 0x74
 8001988:	f5a2 3116 	sub.w	r1, r2, #153600	; 0x25800
 800198c:	2300      	movs	r3, #0
 800198e:	4620      	mov	r0, r4
 8001990:	47a8      	blx	r5
        lockDMAToPorch = enableLock;
 8001992:	2300      	movs	r3, #0
 8001994:	f884 304a 	strb.w	r3, [r4, #74]	; 0x4a
}
 8001998:	bd38      	pop	{r3, r4, r5, pc}
 800199a:	bf00      	nop
 800199c:	d0025800 	.word	0xd0025800

080019a0 <HAL_LTDC_LineEventCallback>:

extern "C"
{
    void HAL_LTDC_LineEventCallback(LTDC_HandleTypeDef* hltdc)
    {
        if (LTDC->LIPCR == lcd_int_active_line)
 80019a0:	4b13      	ldr	r3, [pc, #76]	; (80019f0 <HAL_LTDC_LineEventCallback+0x50>)
 80019a2:	4a14      	ldr	r2, [pc, #80]	; (80019f4 <HAL_LTDC_LineEventCallback+0x54>)
 80019a4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80019a6:	8811      	ldrh	r1, [r2, #0]
 80019a8:	428b      	cmp	r3, r1
    {
 80019aa:	b510      	push	{r4, lr}
 80019ac:	4c12      	ldr	r4, [pc, #72]	; (80019f8 <HAL_LTDC_LineEventCallback+0x58>)
        if (LTDC->LIPCR == lcd_int_active_line)
 80019ae:	d113      	bne.n	80019d8 <HAL_LTDC_LineEventCallback+0x38>
        {
            //entering active area
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_porch_line);
 80019b0:	4b12      	ldr	r3, [pc, #72]	; (80019fc <HAL_LTDC_LineEventCallback+0x5c>)
 80019b2:	8819      	ldrh	r1, [r3, #0]
 80019b4:	f003 fc8a 	bl	80052cc <HAL_LTDC_ProgramLineEvent>
        return instance;
 80019b8:	6822      	ldr	r2, [r4, #0]
        vSyncCnt++;
 80019ba:	f892 3066 	ldrb.w	r3, [r2, #102]	; 0x66
 80019be:	3301      	adds	r3, #1
 80019c0:	f882 3066 	strb.w	r3, [r2, #102]	; 0x66
            HAL::getInstance()->vSync();
            OSWrappers::signalVSync();
 80019c4:	f7ff fc1c 	bl	8001200 <_ZN8touchgfx10OSWrappers11signalVSyncEv>
            // Swap frame buffers immediately instead of waiting for the task to be scheduled in.
            // Note: task will also swap when it wakes up, but that operation is guarded and will not have
            // any effect if already swapped.
            HAL::getInstance()->swapFrameBuffers();
 80019c8:	6820      	ldr	r0, [r4, #0]
 80019ca:	f008 fc99 	bl	800a300 <_ZN8touchgfx3HAL16swapFrameBuffersEv>
            GPIO::set(GPIO::VSYNC_FREQ);
 80019ce:	2000      	movs	r0, #0
            //exiting active area
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_active_line);
            GPIO::clear(GPIO::VSYNC_FREQ);
            HAL::getInstance()->frontPorchEntered();
        }
    }
 80019d0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            GPIO::set(GPIO::VSYNC_FREQ);
 80019d4:	f7ff baa6 	b.w	8000f24 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_active_line);
 80019d8:	f003 fc78 	bl	80052cc <HAL_LTDC_ProgramLineEvent>
            GPIO::clear(GPIO::VSYNC_FREQ);
 80019dc:	2000      	movs	r0, #0
 80019de:	f7ff faa2 	bl	8000f26 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
        return instance;
 80019e2:	6820      	ldr	r0, [r4, #0]
        allowDMATransfers();
 80019e4:	6803      	ldr	r3, [r0, #0]
    }
 80019e6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80019ea:	699b      	ldr	r3, [r3, #24]
 80019ec:	4718      	bx	r3
 80019ee:	bf00      	nop
 80019f0:	40016800 	.word	0x40016800
 80019f4:	2000157a 	.word	0x2000157a
 80019f8:	20012338 	.word	0x20012338
 80019fc:	20001578 	.word	0x20001578

08001a00 <SPI5_Write>:
/**
  * @brief  Writes a byte to device.
  * @param  Value: value to be written
  */
static void SPI5_Write(uint16_t Value)
{
 8001a00:	b507      	push	{r0, r1, r2, lr}
  HAL_StatusTypeDef status = HAL_OK;
  
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 8001a02:	4b06      	ldr	r3, [pc, #24]	; (8001a1c <SPI5_Write+0x1c>)
{
 8001a04:	a902      	add	r1, sp, #8
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 8001a06:	681b      	ldr	r3, [r3, #0]
{
 8001a08:	f821 0d02 	strh.w	r0, [r1, #-2]!
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 8001a0c:	2201      	movs	r2, #1
 8001a0e:	4804      	ldr	r0, [pc, #16]	; (8001a20 <SPI5_Write+0x20>)
 8001a10:	f004 f957 	bl	8005cc2 <HAL_SPI_Transmit>
  if(status != HAL_OK)
  {
    /* Re-Initialize the BUS */
    SPI5_Error();
  }
}
 8001a14:	b003      	add	sp, #12
 8001a16:	f85d fb04 	ldr.w	pc, [sp], #4
 8001a1a:	bf00      	nop
 8001a1c:	20000010 	.word	0x20000010
 8001a20:	200126a8 	.word	0x200126a8

08001a24 <SystemClock_Config>:
{
 8001a24:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001a26:	b0a1      	sub	sp, #132	; 0x84
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8001a28:	2210      	movs	r2, #16
 8001a2a:	2100      	movs	r1, #0
 8001a2c:	a80a      	add	r0, sp, #40	; 0x28
 8001a2e:	f017 fe2e 	bl	801968e <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8001a32:	2214      	movs	r2, #20
 8001a34:	2100      	movs	r1, #0
 8001a36:	a803      	add	r0, sp, #12
 8001a38:	f017 fe29 	bl	801968e <memset>
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 8001a3c:	2100      	movs	r1, #0
 8001a3e:	2230      	movs	r2, #48	; 0x30
 8001a40:	a814      	add	r0, sp, #80	; 0x50
 8001a42:	f017 fe24 	bl	801968e <memset>
  __HAL_RCC_PWR_CLK_ENABLE();
 8001a46:	2400      	movs	r4, #0
 8001a48:	4b22      	ldr	r3, [pc, #136]	; (8001ad4 <SystemClock_Config+0xb0>)
 8001a4a:	9401      	str	r4, [sp, #4]
 8001a4c:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8001a4e:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 8001a52:	641a      	str	r2, [r3, #64]	; 0x40
 8001a54:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001a56:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8001a5a:	9301      	str	r3, [sp, #4]
 8001a5c:	9b01      	ldr	r3, [sp, #4]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8001a5e:	4b1e      	ldr	r3, [pc, #120]	; (8001ad8 <SystemClock_Config+0xb4>)
 8001a60:	9402      	str	r4, [sp, #8]
 8001a62:	681a      	ldr	r2, [r3, #0]
 8001a64:	f442 4240 	orr.w	r2, r2, #49152	; 0xc000
 8001a68:	601a      	str	r2, [r3, #0]
 8001a6a:	681b      	ldr	r3, [r3, #0]
 8001a6c:	f403 4340 	and.w	r3, r3, #49152	; 0xc000
 8001a70:	9302      	str	r3, [sp, #8]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 8001a72:	2201      	movs	r2, #1
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8001a74:	9b02      	ldr	r3, [sp, #8]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 8001a76:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 8001a7a:	e9cd 2308 	strd	r2, r3, [sp, #32]
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 8001a7e:	2502      	movs	r5, #2
 8001a80:	f44f 0380 	mov.w	r3, #4194304	; 0x400000
 8001a84:	e9cd 530e 	strd	r5, r3, [sp, #56]	; 0x38
  RCC_OscInitStruct.PLL.PLLN = 336;
 8001a88:	2708      	movs	r7, #8
 8001a8a:	f44f 73a8 	mov.w	r3, #336	; 0x150
  RCC_OscInitStruct.PLL.PLLQ = 4;
 8001a8e:	2604      	movs	r6, #4
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8001a90:	a808      	add	r0, sp, #32
  RCC_OscInitStruct.PLL.PLLN = 336;
 8001a92:	e9cd 7310 	strd	r7, r3, [sp, #64]	; 0x40
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 8001a96:	9512      	str	r5, [sp, #72]	; 0x48
  RCC_OscInitStruct.PLL.PLLQ = 4;
 8001a98:	9613      	str	r6, [sp, #76]	; 0x4c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8001a9a:	f003 fc35 	bl	8005308 <HAL_RCC_OscConfig>
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8001a9e:	230f      	movs	r3, #15
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 8001aa0:	e9cd 3503 	strd	r3, r5, [sp, #12]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 8001aa4:	f44f 51a0 	mov.w	r1, #5120	; 0x1400
 8001aa8:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8001aac:	e9cd 1306 	strd	r1, r3, [sp, #24]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 8001ab0:	a803      	add	r0, sp, #12
 8001ab2:	2105      	movs	r1, #5
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 8001ab4:	9405      	str	r4, [sp, #20]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 8001ab6:	f003 fdfb 	bl	80056b0 <HAL_RCC_ClockConfig>
  PeriphClkInitStruct.PLLSAI.PLLSAIN = 192;
 8001aba:	23c0      	movs	r3, #192	; 0xc0
 8001abc:	9318      	str	r3, [sp, #96]	; 0x60
  if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8001abe:	a814      	add	r0, sp, #80	; 0x50
  PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_8;
 8001ac0:	f44f 3300 	mov.w	r3, #131072	; 0x20000
  PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
 8001ac4:	9714      	str	r7, [sp, #80]	; 0x50
  PeriphClkInitStruct.PLLSAI.PLLSAIR = 4;
 8001ac6:	961a      	str	r6, [sp, #104]	; 0x68
  PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_8;
 8001ac8:	931d      	str	r3, [sp, #116]	; 0x74
  if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8001aca:	f003 feb9 	bl	8005840 <HAL_RCCEx_PeriphCLKConfig>
}
 8001ace:	b021      	add	sp, #132	; 0x84
 8001ad0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001ad2:	bf00      	nop
 8001ad4:	40023800 	.word	0x40023800
 8001ad8:	40007000 	.word	0x40007000

08001adc <main>:
{
 8001adc:	e92d 4880 	stmdb	sp!, {r7, fp, lr}
 8001ae0:	b09f      	sub	sp, #124	; 0x7c
  __HAL_RCC_GPIOF_CLK_ENABLE();
 8001ae2:	2400      	movs	r4, #0
 8001ae4:	4dc7      	ldr	r5, [pc, #796]	; (8001e04 <main+0x328>)
  hi2c3.Instance = I2C3;
 8001ae6:	4ec8      	ldr	r6, [pc, #800]	; (8001e08 <main+0x32c>)
  hsdram1.Instance = FMC_SDRAM_DEVICE;
 8001ae8:	f8df b360 	ldr.w	fp, [pc, #864]	; 8001e4c <main+0x370>
  HAL_Init();
 8001aec:	f002 f98e 	bl	8003e0c <HAL_Init>
  SystemClock_Config();
 8001af0:	f7ff ff98 	bl	8001a24 <SystemClock_Config>
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001af4:	2214      	movs	r2, #20
 8001af6:	2100      	movs	r1, #0
 8001af8:	a811      	add	r0, sp, #68	; 0x44
 8001afa:	f017 fdc8 	bl	801968e <memset>
  __HAL_RCC_GPIOF_CLK_ENABLE();
 8001afe:	9402      	str	r4, [sp, #8]
 8001b00:	6b2b      	ldr	r3, [r5, #48]	; 0x30
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001b02:	48c2      	ldr	r0, [pc, #776]	; (8001e0c <main+0x330>)
  __HAL_RCC_GPIOF_CLK_ENABLE();
 8001b04:	f043 0320 	orr.w	r3, r3, #32
 8001b08:	632b      	str	r3, [r5, #48]	; 0x30
 8001b0a:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 8001b0c:	f003 0320 	and.w	r3, r3, #32
 8001b10:	9302      	str	r3, [sp, #8]
 8001b12:	9b02      	ldr	r3, [sp, #8]
  __HAL_RCC_GPIOH_CLK_ENABLE();
 8001b14:	9403      	str	r4, [sp, #12]
 8001b16:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 8001b18:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8001b1c:	632b      	str	r3, [r5, #48]	; 0x30
 8001b1e:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 8001b20:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8001b24:	9303      	str	r3, [sp, #12]
 8001b26:	9b03      	ldr	r3, [sp, #12]
  __HAL_RCC_GPIOC_CLK_ENABLE();
 8001b28:	9404      	str	r4, [sp, #16]
 8001b2a:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 8001b2c:	f043 0304 	orr.w	r3, r3, #4
 8001b30:	632b      	str	r3, [r5, #48]	; 0x30
 8001b32:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 8001b34:	f003 0304 	and.w	r3, r3, #4
 8001b38:	9304      	str	r3, [sp, #16]
 8001b3a:	9b04      	ldr	r3, [sp, #16]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 8001b3c:	9405      	str	r4, [sp, #20]
 8001b3e:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 8001b40:	f043 0301 	orr.w	r3, r3, #1
 8001b44:	632b      	str	r3, [r5, #48]	; 0x30
 8001b46:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 8001b48:	f003 0301 	and.w	r3, r3, #1
 8001b4c:	9305      	str	r3, [sp, #20]
 8001b4e:	9b05      	ldr	r3, [sp, #20]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 8001b50:	9406      	str	r4, [sp, #24]
 8001b52:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 8001b54:	f043 0302 	orr.w	r3, r3, #2
 8001b58:	632b      	str	r3, [r5, #48]	; 0x30
 8001b5a:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 8001b5c:	f003 0302 	and.w	r3, r3, #2
 8001b60:	9306      	str	r3, [sp, #24]
 8001b62:	9b06      	ldr	r3, [sp, #24]
  __HAL_RCC_GPIOG_CLK_ENABLE();
 8001b64:	9407      	str	r4, [sp, #28]
 8001b66:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 8001b68:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8001b6c:	632b      	str	r3, [r5, #48]	; 0x30
 8001b6e:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 8001b70:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8001b74:	9307      	str	r3, [sp, #28]
 8001b76:	9b07      	ldr	r3, [sp, #28]
  __HAL_RCC_GPIOE_CLK_ENABLE();
 8001b78:	9408      	str	r4, [sp, #32]
 8001b7a:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 8001b7c:	f043 0310 	orr.w	r3, r3, #16
 8001b80:	632b      	str	r3, [r5, #48]	; 0x30
 8001b82:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 8001b84:	f003 0310 	and.w	r3, r3, #16
 8001b88:	9308      	str	r3, [sp, #32]
 8001b8a:	9b08      	ldr	r3, [sp, #32]
  __HAL_RCC_GPIOD_CLK_ENABLE();
 8001b8c:	9409      	str	r4, [sp, #36]	; 0x24
 8001b8e:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 8001b90:	f043 0308 	orr.w	r3, r3, #8
 8001b94:	632b      	str	r3, [r5, #48]	; 0x30
 8001b96:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 8001b98:	f003 0308 	and.w	r3, r3, #8
 8001b9c:	9309      	str	r3, [sp, #36]	; 0x24
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001b9e:	4622      	mov	r2, r4
 8001ba0:	2104      	movs	r1, #4
  __HAL_RCC_GPIOD_CLK_ENABLE();
 8001ba2:	9b09      	ldr	r3, [sp, #36]	; 0x24
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001ba4:	f002 fdb8 	bl	8004718 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_12|GPIO_PIN_13, GPIO_PIN_RESET);
 8001ba8:	4622      	mov	r2, r4
 8001baa:	f44f 5140 	mov.w	r1, #12288	; 0x3000
 8001bae:	4898      	ldr	r0, [pc, #608]	; (8001e10 <main+0x334>)
 8001bb0:	f002 fdb2 	bl	8004718 <HAL_GPIO_WritePin>
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001bb4:	2701      	movs	r7, #1
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001bb6:	f04f 0802 	mov.w	r8, #2
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001bba:	f04f 0904 	mov.w	r9, #4
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001bbe:	a911      	add	r1, sp, #68	; 0x44
 8001bc0:	4892      	ldr	r0, [pc, #584]	; (8001e0c <main+0x330>)
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001bc2:	f8cd 8050 	str.w	r8, [sp, #80]	; 0x50
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001bc6:	e9cd 9711 	strd	r9, r7, [sp, #68]	; 0x44
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001bca:	9413      	str	r4, [sp, #76]	; 0x4c
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001bcc:	f002 fcb8 	bl	8004540 <HAL_GPIO_Init>
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001bd0:	a911      	add	r1, sp, #68	; 0x44
  GPIO_InitStruct.Pin = GPIO_PIN_12|GPIO_PIN_13;
 8001bd2:	f44f 5340 	mov.w	r3, #12288	; 0x3000
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001bd6:	488e      	ldr	r0, [pc, #568]	; (8001e10 <main+0x334>)
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001bd8:	e9cd 3711 	strd	r3, r7, [sp, #68]	; 0x44
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001bdc:	e9cd 4813 	strd	r4, r8, [sp, #76]	; 0x4c
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001be0:	f002 fcae 	bl	8004540 <HAL_GPIO_Init>
  hcrc.Instance = CRC;
 8001be4:	488b      	ldr	r0, [pc, #556]	; (8001e14 <main+0x338>)
 8001be6:	4b8c      	ldr	r3, [pc, #560]	; (8001e18 <main+0x33c>)
 8001be8:	6003      	str	r3, [r0, #0]
  if (HAL_CRC_Init(&hcrc) != HAL_OK)
 8001bea:	f002 f9b7 	bl	8003f5c <HAL_CRC_Init>
  hi2c3.Init.ClockSpeed = 100000;
 8001bee:	4a8b      	ldr	r2, [pc, #556]	; (8001e1c <main+0x340>)
 8001bf0:	4b8b      	ldr	r3, [pc, #556]	; (8001e20 <main+0x344>)
  hi2c3.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 8001bf2:	6234      	str	r4, [r6, #32]
  hi2c3.Init.ClockSpeed = 100000;
 8001bf4:	e9c6 2300 	strd	r2, r3, [r6]
  if (HAL_I2C_Init(&hi2c3) != HAL_OK)
 8001bf8:	4630      	mov	r0, r6
  hi2c3.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 8001bfa:	f44f 4380 	mov.w	r3, #16384	; 0x4000
  hi2c3.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 8001bfe:	e9c6 3404 	strd	r3, r4, [r6, #16]
  hi2c3.Init.OwnAddress1 = 0;
 8001c02:	e9c6 4402 	strd	r4, r4, [r6, #8]
  hi2c3.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 8001c06:	e9c6 4406 	strd	r4, r4, [r6, #24]
  if (HAL_I2C_Init(&hi2c3) != HAL_OK)
 8001c0a:	f002 ff5f 	bl	8004acc <HAL_I2C_Init>
  if (HAL_I2CEx_ConfigAnalogFilter(&hi2c3, I2C_ANALOGFILTER_DISABLE) != HAL_OK)
 8001c0e:	2110      	movs	r1, #16
 8001c10:	4630      	mov	r0, r6
 8001c12:	f003 f9a3 	bl	8004f5c <HAL_I2CEx_ConfigAnalogFilter>
  if (HAL_I2CEx_ConfigDigitalFilter(&hi2c3, 0) != HAL_OK)
 8001c16:	4621      	mov	r1, r4
 8001c18:	4630      	mov	r0, r6
 8001c1a:	f003 f9be 	bl	8004f9a <HAL_I2CEx_ConfigDigitalFilter>
  hspi5.Instance = SPI5;
 8001c1e:	4881      	ldr	r0, [pc, #516]	; (8001e24 <main+0x348>)
  hspi5.Init.Mode = SPI_MODE_MASTER;
 8001c20:	4981      	ldr	r1, [pc, #516]	; (8001e28 <main+0x34c>)
  hspi5.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 8001c22:	6284      	str	r4, [r0, #40]	; 0x28
  hspi5.Init.Mode = SPI_MODE_MASTER;
 8001c24:	f44f 7382 	mov.w	r3, #260	; 0x104
 8001c28:	e9c0 1300 	strd	r1, r3, [r0]
  hspi5.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_16;
 8001c2c:	f44f 7600 	mov.w	r6, #512	; 0x200
 8001c30:	2318      	movs	r3, #24
 8001c32:	e9c0 6306 	strd	r6, r3, [r0, #24]
  hspi5.Init.CRCPolynomial = 10;
 8001c36:	230a      	movs	r3, #10
 8001c38:	62c3      	str	r3, [r0, #44]	; 0x2c
  hspi5.Init.DataSize = SPI_DATASIZE_8BIT;
 8001c3a:	e9c0 4402 	strd	r4, r4, [r0, #8]
  hspi5.Init.CLKPhase = SPI_PHASE_1EDGE;
 8001c3e:	e9c0 4404 	strd	r4, r4, [r0, #16]
  hspi5.Init.TIMode = SPI_TIMODE_DISABLE;
 8001c42:	e9c0 4408 	strd	r4, r4, [r0, #32]
  if (HAL_SPI_Init(&hspi5) != HAL_OK)
 8001c46:	f003 ffff 	bl	8005c48 <HAL_SPI_Init>
  hsdram1.Instance = FMC_SDRAM_DEVICE;
 8001c4a:	4a78      	ldr	r2, [pc, #480]	; (8001e2c <main+0x350>)
  SdramTiming.LoadToActiveDelay = 2;
 8001c4c:	f8cd 8044 	str.w	r8, [sp, #68]	; 0x44
  hsdram1.Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
 8001c50:	f04f 0a10 	mov.w	sl, #16
  hsdram1.Init.SDBank = FMC_SDRAM_BANK2;
 8001c54:	e9cb 2700 	strd	r2, r7, [fp]
  hsdram1.Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
 8001c58:	2240      	movs	r2, #64	; 0x40
 8001c5a:	e9cb a204 	strd	sl, r2, [fp, #16]
  hsdram1.Init.CASLatency = FMC_SDRAM_CAS_LATENCY_3;
 8001c5e:	f44f 72c0 	mov.w	r2, #384	; 0x180
  hsdram1.Init.WriteProtection = FMC_SDRAM_WRITE_PROTECTION_DISABLE;
 8001c62:	e9cb 2406 	strd	r2, r4, [fp, #24]
  hsdram1.Init.SDClockPeriod = FMC_SDRAM_CLOCK_PERIOD_2;
 8001c66:	f44f 6200 	mov.w	r2, #2048	; 0x800
  hsdram1.Init.ReadBurst = FMC_SDRAM_RBURST_DISABLE;
 8001c6a:	e9cb 2408 	strd	r2, r4, [fp, #32]
  hsdram1.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_1;
 8001c6e:	f44f 5200 	mov.w	r2, #8192	; 0x2000
  SdramTiming.WriteRecoveryTime = 3;
 8001c72:	2303      	movs	r3, #3
  hsdram1.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_1;
 8001c74:	f8cb 2028 	str.w	r2, [fp, #40]	; 0x28
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 8001c78:	a911      	add	r1, sp, #68	; 0x44
  SdramTiming.ExitSelfRefreshDelay = 7;
 8001c7a:	2207      	movs	r2, #7
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 8001c7c:	4658      	mov	r0, fp
  SdramTiming.RPDelay = 2;
 8001c7e:	e9cd 3815 	strd	r3, r8, [sp, #84]	; 0x54
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 8001c82:	2608      	movs	r6, #8
  hsdram1.Init.RowBitsNumber = FMC_SDRAM_ROW_BITS_NUM_12;
 8001c84:	e9cb 4902 	strd	r4, r9, [fp, #8]
  SdramTiming.SelfRefreshTime = 4;
 8001c88:	e9cd 2912 	strd	r2, r9, [sp, #72]	; 0x48
  SdramTiming.RowCycleDelay = 7;
 8001c8c:	9214      	str	r2, [sp, #80]	; 0x50
  SdramTiming.RCDDelay = 2;
 8001c8e:	f8cd 805c 	str.w	r8, [sp, #92]	; 0x5c
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 8001c92:	f003 feff 	bl	8005a94 <HAL_SDRAM_Init>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001c96:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8001c9a:	a90d      	add	r1, sp, #52	; 0x34
 8001c9c:	4658      	mov	r0, fp
  Command->AutoRefreshNumber       = 1;
 8001c9e:	e9cd 670e 	strd	r6, r7, [sp, #56]	; 0x38
  Command->CommandMode             = FMC_SDRAM_CMD_CLK_ENABLE;
 8001ca2:	970d      	str	r7, [sp, #52]	; 0x34
 __IO uint32_t tmpmrd =0;
 8001ca4:	940a      	str	r4, [sp, #40]	; 0x28
  Command->ModeRegisterDefinition  = 0;
 8001ca6:	9410      	str	r4, [sp, #64]	; 0x40
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001ca8:	f003 ff14 	bl	8005ad4 <HAL_SDRAM_SendCommand>
  HAL_Delay(1);
 8001cac:	4638      	mov	r0, r7
 8001cae:	f002 f8d9 	bl	8003e64 <HAL_Delay>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);  
 8001cb2:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8001cb6:	a90d      	add	r1, sp, #52	; 0x34
 8001cb8:	4658      	mov	r0, fp
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 8001cba:	e9cd 860d 	strd	r8, r6, [sp, #52]	; 0x34
  Command->ModeRegisterDefinition  = 0;
 8001cbe:	e9cd 740f 	strd	r7, r4, [sp, #60]	; 0x3c
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);  
 8001cc2:	f003 ff07 	bl	8005ad4 <HAL_SDRAM_SendCommand>
  Command->CommandMode             = FMC_SDRAM_CMD_AUTOREFRESH_MODE;
 8001cc6:	2303      	movs	r3, #3
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001cc8:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8001ccc:	a90d      	add	r1, sp, #52	; 0x34
 8001cce:	4658      	mov	r0, fp
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 8001cd0:	e9cd 360d 	strd	r3, r6, [sp, #52]	; 0x34
  Command->ModeRegisterDefinition  = 0;
 8001cd4:	e9cd 940f 	strd	r9, r4, [sp, #60]	; 0x3c
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001cd8:	f003 fefc 	bl	8005ad4 <HAL_SDRAM_SendCommand>
  tmpmrd = (uint32_t)SDRAM_MODEREG_BURST_LENGTH_1          |
 8001cdc:	f44f 720c 	mov.w	r2, #560	; 0x230
 8001ce0:	920a      	str	r2, [sp, #40]	; 0x28
  Command->ModeRegisterDefinition  = tmpmrd;
 8001ce2:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8001ce4:	9210      	str	r2, [sp, #64]	; 0x40
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001ce6:	a90d      	add	r1, sp, #52	; 0x34
 8001ce8:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8001cec:	4658      	mov	r0, fp
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 8001cee:	e9cd 960d 	strd	r9, r6, [sp, #52]	; 0x34
  Command->AutoRefreshNumber       = 1;
 8001cf2:	970f      	str	r7, [sp, #60]	; 0x3c
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001cf4:	f003 feee 	bl	8005ad4 <HAL_SDRAM_SendCommand>
  HAL_SDRAM_ProgramRefreshRate(hsdram, REFRESH_COUNT); 
 8001cf8:	f240 516a 	movw	r1, #1386	; 0x56a
 8001cfc:	4658      	mov	r0, fp
 8001cfe:	f003 ff00 	bl	8005b02 <HAL_SDRAM_ProgramRefreshRate>
  LTDC_LayerCfgTypeDef pLayerCfg = {0};
 8001d02:	2234      	movs	r2, #52	; 0x34
 8001d04:	4621      	mov	r1, r4
 8001d06:	a811      	add	r0, sp, #68	; 0x44
 8001d08:	f017 fcc1 	bl	801968e <memset>
  hltdc.Instance = LTDC;
 8001d0c:	4e48      	ldr	r6, [pc, #288]	; (8001e30 <main+0x354>)
 8001d0e:	4b49      	ldr	r3, [pc, #292]	; (8001e34 <main+0x358>)
  hltdc.Init.DEPolarity = LTDC_DEPOLARITY_AL;
 8001d10:	6134      	str	r4, [r6, #16]
  hltdc.Instance = LTDC;
 8001d12:	e9c6 3400 	strd	r3, r4, [r6]
  hltdc.Init.PCPolarity = LTDC_PCPOLARITY_IPC;
 8001d16:	2309      	movs	r3, #9
  hltdc.Init.AccumulatedHBP = 29;
 8001d18:	f04f 0c1d 	mov.w	ip, #29
  hltdc.Init.HorizontalSync = 9;
 8001d1c:	e9c6 3705 	strd	r3, r7, [r6, #20]
  hltdc.Init.AccumulatedHBP = 29;
 8001d20:	2303      	movs	r3, #3
 8001d22:	e9c6 c307 	strd	ip, r3, [r6, #28]
  hltdc.Init.AccumulatedActiveW = 269;
 8001d26:	f240 1e0d 	movw	lr, #269	; 0x10d
 8001d2a:	f240 1343 	movw	r3, #323	; 0x143
 8001d2e:	e9c6 e309 	strd	lr, r3, [r6, #36]	; 0x24
  hltdc.Init.TotalWidth = 279;
 8001d32:	f240 1b17 	movw	fp, #279	; 0x117
 8001d36:	f240 1347 	movw	r3, #327	; 0x147
 8001d3a:	e9c6 b30b 	strd	fp, r3, [r6, #44]	; 0x2c
  hltdc.Init.VSPolarity = LTDC_VSPOLARITY_AL;
 8001d3e:	e9c6 4402 	strd	r4, r4, [r6, #8]
  hltdc.Init.TotalHeigh = 327;
 8001d42:	86b4      	strh	r4, [r6, #52]	; 0x34
  hltdc.Init.Backcolor.Green = 0;
 8001d44:	f886 4036 	strb.w	r4, [r6, #54]	; 0x36
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 8001d48:	4630      	mov	r0, r6
 8001d4a:	f003 f9cb 	bl	80050e4 <HAL_LTDC_Init>
  pLayerCfg.PixelFormat = LTDC_PIXEL_FORMAT_RGB565;
 8001d4e:	21ff      	movs	r1, #255	; 0xff
  pLayerCfg.WindowX0 = 0;
 8001d50:	22f0      	movs	r2, #240	; 0xf0
  pLayerCfg.Alpha = 255;
 8001d52:	e9cd 1416 	strd	r1, r4, [sp, #88]	; 0x58
  pLayerCfg.BlendingFactor1 = LTDC_BLENDING_FACTOR1_CA;
 8001d56:	f44f 6080 	mov.w	r0, #1024	; 0x400
 8001d5a:	2105      	movs	r1, #5
  pLayerCfg.WindowY0 = 0;
 8001d5c:	f44f 73a0 	mov.w	r3, #320	; 0x140
  pLayerCfg.BlendingFactor1 = LTDC_BLENDING_FACTOR1_CA;
 8001d60:	e9cd 0118 	strd	r0, r1, [sp, #96]	; 0x60
  pLayerCfg.WindowX1 = 240;
 8001d64:	e9cd 2412 	strd	r2, r4, [sp, #72]	; 0x48
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 8001d68:	a911      	add	r1, sp, #68	; 0x44
  pLayerCfg.FBStartAdress = 0;
 8001d6a:	e9cd 421a 	strd	r4, r2, [sp, #104]	; 0x68
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 8001d6e:	4630      	mov	r0, r6
 8001d70:	4622      	mov	r2, r4
  pLayerCfg.WindowY1 = 320;
 8001d72:	e9cd 3814 	strd	r3, r8, [sp, #80]	; 0x50
  LcdDrv = &ili9341_drv;
 8001d76:	4e30      	ldr	r6, [pc, #192]	; (8001e38 <main+0x35c>)
  pLayerCfg.ImageWidth = 240;
 8001d78:	931c      	str	r3, [sp, #112]	; 0x70
  pLayerCfg.WindowX0 = 0;
 8001d7a:	9411      	str	r4, [sp, #68]	; 0x44
  pLayerCfg.ImageHeight = 320;
 8001d7c:	f8ad 4074 	strh.w	r4, [sp, #116]	; 0x74
  pLayerCfg.Backcolor.Green = 0;
 8001d80:	f88d 4076 	strb.w	r4, [sp, #118]	; 0x76
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 8001d84:	f003 fa79 	bl	800527a <HAL_LTDC_ConfigLayer>
  LcdDrv = &ili9341_drv;
 8001d88:	4b2c      	ldr	r3, [pc, #176]	; (8001e3c <main+0x360>)
 8001d8a:	6033      	str	r3, [r6, #0]
  LcdDrv->Init();
 8001d8c:	681b      	ldr	r3, [r3, #0]
 8001d8e:	4798      	blx	r3
  LcdDrv->DisplayOff();
 8001d90:	6833      	ldr	r3, [r6, #0]
  hdma2d.Instance = DMA2D;
 8001d92:	4e2b      	ldr	r6, [pc, #172]	; (8001e40 <main+0x364>)
  LcdDrv->DisplayOff();
 8001d94:	68db      	ldr	r3, [r3, #12]
 8001d96:	4798      	blx	r3
  hdma2d.Instance = DMA2D;
 8001d98:	4b2a      	ldr	r3, [pc, #168]	; (8001e44 <main+0x368>)
  hdma2d.LayerCfg[1].InputColorMode = DMA2D_INPUT_RGB565;
 8001d9a:	e9c6 480a 	strd	r4, r8, [r6, #40]	; 0x28
  hdma2d.LayerCfg[1].InputAlpha = 0;
 8001d9e:	e9c6 440c 	strd	r4, r4, [r6, #48]	; 0x30
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
 8001da2:	4630      	mov	r0, r6
  hdma2d.Init.Mode = DMA2D_M2M;
 8001da4:	e9c6 3400 	strd	r3, r4, [r6]
  hdma2d.Init.OutputOffset = 0;
 8001da8:	e9c6 8402 	strd	r8, r4, [r6, #8]
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
 8001dac:	f002 f9f6 	bl	800419c <HAL_DMA2D_Init>
  if (HAL_DMA2D_ConfigLayer(&hdma2d, 1) != HAL_OK)
 8001db0:	4639      	mov	r1, r7
 8001db2:	4630      	mov	r0, r6
 8001db4:	f002 fb7a 	bl	80044ac <HAL_DMA2D_ConfigLayer>
  MX_TouchGFX_Init();
 8001db8:	f7ff f809 	bl	8000dce <MX_TouchGFX_Init>
  */
static void MX_DMA_Init(void)
{

  /* DMA controller clock enable */
  __HAL_RCC_DMA1_CLK_ENABLE();
 8001dbc:	9401      	str	r4, [sp, #4]
 8001dbe:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 8001dc0:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 8001dc4:	632b      	str	r3, [r5, #48]	; 0x30
 8001dc6:	6b2b      	ldr	r3, [r5, #48]	; 0x30
  htim2.Instance = TIM2;
 8001dc8:	4d1f      	ldr	r5, [pc, #124]	; (8001e48 <main+0x36c>)
  __HAL_RCC_DMA1_CLK_ENABLE();
 8001dca:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 8001dce:	9301      	str	r3, [sp, #4]
  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 8001dd0:	4652      	mov	r2, sl
 8001dd2:	4621      	mov	r1, r4
 8001dd4:	a80d      	add	r0, sp, #52	; 0x34
  __HAL_RCC_DMA1_CLK_ENABLE();
 8001dd6:	9b01      	ldr	r3, [sp, #4]
  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 8001dd8:	f017 fc59 	bl	801968e <memset>
  TIM_OC_InitTypeDef sConfigOC = {0};
 8001ddc:	221c      	movs	r2, #28
 8001dde:	4621      	mov	r1, r4
 8001de0:	a811      	add	r0, sp, #68	; 0x44
  htim2.Init.Prescaler = 167;
 8001de2:	f04f 0ba7 	mov.w	fp, #167	; 0xa7
  htim2.Init.Period = 9999;
 8001de6:	f242 780f 	movw	r8, #9999	; 0x270f
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8001dea:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
  TIM_OC_InitTypeDef sConfigOC = {0};
 8001dee:	f017 fc4e 	bl	801968e <memset>
  htim2.Init.Prescaler = 167;
 8001df2:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
  if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 8001df6:	4628      	mov	r0, r5
  htim2.Init.Prescaler = 167;
 8001df8:	e9c5 3b00 	strd	r3, fp, [r5]
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8001dfc:	f44f 5780 	mov.w	r7, #4096	; 0x1000
 8001e00:	e026      	b.n	8001e50 <main+0x374>
 8001e02:	bf00      	nop
 8001e04:	40023800 	.word	0x40023800
 8001e08:	20012654 	.word	0x20012654
 8001e0c:	40020800 	.word	0x40020800
 8001e10:	40020c00 	.word	0x40020c00
 8001e14:	20012740 	.word	0x20012740
 8001e18:	40023000 	.word	0x40023000
 8001e1c:	40005c00 	.word	0x40005c00
 8001e20:	000186a0 	.word	0x000186a0
 8001e24:	200126a8 	.word	0x200126a8
 8001e28:	40015000 	.word	0x40015000
 8001e2c:	a0000140 	.word	0xa0000140
 8001e30:	20012828 	.word	0x20012828
 8001e34:	40016800 	.word	0x40016800
 8001e38:	2000157c 	.word	0x2000157c
 8001e3c:	20000024 	.word	0x20000024
 8001e40:	20012994 	.word	0x20012994
 8001e44:	4002b000 	.word	0x4002b000
 8001e48:	200129d4 	.word	0x200129d4
 8001e4c:	20012a74 	.word	0x20012a74
  htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 8001e50:	60ac      	str	r4, [r5, #8]
  htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8001e52:	e9c5 8403 	strd	r8, r4, [r5, #12]
  htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8001e56:	61ac      	str	r4, [r5, #24]
  if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 8001e58:	f004 fb54 	bl	8006504 <HAL_TIM_Base_Init>
  if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 8001e5c:	a90d      	add	r1, sp, #52	; 0x34
 8001e5e:	4628      	mov	r0, r5
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8001e60:	970d      	str	r7, [sp, #52]	; 0x34
  if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 8001e62:	f004 fc25 	bl	80066b0 <HAL_TIM_ConfigClockSource>
  if (HAL_TIM_PWM_Init(&htim2) != HAL_OK)
 8001e66:	4628      	mov	r0, r5
 8001e68:	f004 fb66 	bl	8006538 <HAL_TIM_PWM_Init>
  if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 8001e6c:	a90b      	add	r1, sp, #44	; 0x2c
 8001e6e:	4628      	mov	r0, r5
  sConfigOC.OCMode = TIM_OCMODE_PWM1;
 8001e70:	2660      	movs	r6, #96	; 0x60
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8001e72:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
  if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 8001e76:	f004 fd47 	bl	8006908 <HAL_TIMEx_MasterConfigSynchronization>
  if (HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_4) != HAL_OK)
 8001e7a:	220c      	movs	r2, #12
 8001e7c:	a911      	add	r1, sp, #68	; 0x44
 8001e7e:	4628      	mov	r0, r5
  sConfigOC.Pulse = 0;
 8001e80:	e9cd 6411 	strd	r6, r4, [sp, #68]	; 0x44
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 8001e84:	9413      	str	r4, [sp, #76]	; 0x4c
  sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 8001e86:	9415      	str	r4, [sp, #84]	; 0x54
  if (HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_4) != HAL_OK)
 8001e88:	f004 fba6 	bl	80065d8 <HAL_TIM_PWM_ConfigChannel>
  HAL_TIM_MspPostInit(&htim2);
 8001e8c:	4628      	mov	r0, r5
 8001e8e:	f000 fc87 	bl	80027a0 <HAL_TIM_MspPostInit>
  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 8001e92:	4652      	mov	r2, sl
 8001e94:	4621      	mov	r1, r4
 8001e96:	a80d      	add	r0, sp, #52	; 0x34
  htim3.Instance = TIM3;
 8001e98:	4d4d      	ldr	r5, [pc, #308]	; (8001fd0 <main+0x4f4>)
  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 8001e9a:	f017 fbf8 	bl	801968e <memset>
  TIM_OC_InitTypeDef sConfigOC = {0};
 8001e9e:	221c      	movs	r2, #28
 8001ea0:	4621      	mov	r1, r4
 8001ea2:	a811      	add	r0, sp, #68	; 0x44
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8001ea4:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
  TIM_OC_InitTypeDef sConfigOC = {0};
 8001ea8:	f017 fbf1 	bl	801968e <memset>
  htim3.Instance = TIM3;
 8001eac:	4b49      	ldr	r3, [pc, #292]	; (8001fd4 <main+0x4f8>)
  htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8001eae:	612c      	str	r4, [r5, #16]
  if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 8001eb0:	4628      	mov	r0, r5
  htim3.Init.Prescaler = 167;
 8001eb2:	e9c5 3b00 	strd	r3, fp, [r5]
  htim3.Init.Period = 9999;
 8001eb6:	e9c5 4802 	strd	r4, r8, [r5, #8]
  htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8001eba:	61ac      	str	r4, [r5, #24]
  if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 8001ebc:	f004 fb22 	bl	8006504 <HAL_TIM_Base_Init>
  if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 8001ec0:	a90d      	add	r1, sp, #52	; 0x34
 8001ec2:	4628      	mov	r0, r5
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8001ec4:	970d      	str	r7, [sp, #52]	; 0x34
  if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 8001ec6:	f004 fbf3 	bl	80066b0 <HAL_TIM_ConfigClockSource>
  if (HAL_TIM_PWM_Init(&htim3) != HAL_OK)
 8001eca:	4628      	mov	r0, r5
 8001ecc:	f004 fb34 	bl	8006538 <HAL_TIM_PWM_Init>
  if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 8001ed0:	a90b      	add	r1, sp, #44	; 0x2c
 8001ed2:	4628      	mov	r0, r5
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8001ed4:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
  if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 8001ed8:	f004 fd16 	bl	8006908 <HAL_TIMEx_MasterConfigSynchronization>
  if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_2) != HAL_OK)
 8001edc:	464a      	mov	r2, r9
 8001ede:	a911      	add	r1, sp, #68	; 0x44
 8001ee0:	4628      	mov	r0, r5
  sConfigOC.Pulse = 0;
 8001ee2:	e9cd 6411 	strd	r6, r4, [sp, #68]	; 0x44
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 8001ee6:	9413      	str	r4, [sp, #76]	; 0x4c
  sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 8001ee8:	9415      	str	r4, [sp, #84]	; 0x54
  if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_2) != HAL_OK)
 8001eea:	f004 fb75 	bl	80065d8 <HAL_TIM_PWM_ConfigChannel>
  HAL_TIM_MspPostInit(&htim3);
 8001eee:	4628      	mov	r0, r5
 8001ef0:	f000 fc56 	bl	80027a0 <HAL_TIM_MspPostInit>
  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 8001ef4:	4652      	mov	r2, sl
 8001ef6:	4621      	mov	r1, r4
 8001ef8:	a80d      	add	r0, sp, #52	; 0x34
  htim4.Instance = TIM4;
 8001efa:	4d37      	ldr	r5, [pc, #220]	; (8001fd8 <main+0x4fc>)
  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 8001efc:	f017 fbc7 	bl	801968e <memset>
  TIM_OC_InitTypeDef sConfigOC = {0};
 8001f00:	221c      	movs	r2, #28
 8001f02:	4621      	mov	r1, r4
 8001f04:	a811      	add	r0, sp, #68	; 0x44
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8001f06:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
  TIM_OC_InitTypeDef sConfigOC = {0};
 8001f0a:	f017 fbc0 	bl	801968e <memset>
  htim4.Instance = TIM4;
 8001f0e:	4b33      	ldr	r3, [pc, #204]	; (8001fdc <main+0x500>)
  htim4.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8001f10:	612c      	str	r4, [r5, #16]
  if (HAL_TIM_Base_Init(&htim4) != HAL_OK)
 8001f12:	4628      	mov	r0, r5
  htim4.Init.Prescaler = 167;
 8001f14:	e9c5 3b00 	strd	r3, fp, [r5]
  htim4.Init.Period = 9999;
 8001f18:	e9c5 4802 	strd	r4, r8, [r5, #8]
  htim4.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8001f1c:	61ac      	str	r4, [r5, #24]
  if (HAL_TIM_Base_Init(&htim4) != HAL_OK)
 8001f1e:	f004 faf1 	bl	8006504 <HAL_TIM_Base_Init>
  if (HAL_TIM_ConfigClockSource(&htim4, &sClockSourceConfig) != HAL_OK)
 8001f22:	a90d      	add	r1, sp, #52	; 0x34
 8001f24:	4628      	mov	r0, r5
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8001f26:	970d      	str	r7, [sp, #52]	; 0x34
  if (HAL_TIM_ConfigClockSource(&htim4, &sClockSourceConfig) != HAL_OK)
 8001f28:	f004 fbc2 	bl	80066b0 <HAL_TIM_ConfigClockSource>
  if (HAL_TIM_PWM_Init(&htim4) != HAL_OK)
 8001f2c:	4628      	mov	r0, r5
 8001f2e:	f004 fb03 	bl	8006538 <HAL_TIM_PWM_Init>
  if (HAL_TIMEx_MasterConfigSynchronization(&htim4, &sMasterConfig) != HAL_OK)
 8001f32:	a90b      	add	r1, sp, #44	; 0x2c
 8001f34:	4628      	mov	r0, r5
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8001f36:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
  if (HAL_TIMEx_MasterConfigSynchronization(&htim4, &sMasterConfig) != HAL_OK)
 8001f3a:	f004 fce5 	bl	8006908 <HAL_TIMEx_MasterConfigSynchronization>
  if (HAL_TIM_PWM_ConfigChannel(&htim4, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 8001f3e:	4622      	mov	r2, r4
 8001f40:	a911      	add	r1, sp, #68	; 0x44
 8001f42:	4628      	mov	r0, r5
  sConfigOC.Pulse = 0;
 8001f44:	e9cd 6411 	strd	r6, r4, [sp, #68]	; 0x44
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 8001f48:	9413      	str	r4, [sp, #76]	; 0x4c
  sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 8001f4a:	9415      	str	r4, [sp, #84]	; 0x54
  if (HAL_TIM_PWM_ConfigChannel(&htim4, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 8001f4c:	f004 fb44 	bl	80065d8 <HAL_TIM_PWM_ConfigChannel>
  HAL_TIM_MspPostInit(&htim4);
 8001f50:	4628      	mov	r0, r5
 8001f52:	f000 fc25 	bl	80027a0 <HAL_TIM_MspPostInit>
  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 8001f56:	4652      	mov	r2, sl
 8001f58:	4621      	mov	r1, r4
 8001f5a:	a80d      	add	r0, sp, #52	; 0x34
  htim5.Instance = TIM5;
 8001f5c:	4d20      	ldr	r5, [pc, #128]	; (8001fe0 <main+0x504>)
  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 8001f5e:	f017 fb96 	bl	801968e <memset>
  TIM_OC_InitTypeDef sConfigOC = {0};
 8001f62:	221c      	movs	r2, #28
 8001f64:	4621      	mov	r1, r4
 8001f66:	a811      	add	r0, sp, #68	; 0x44
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8001f68:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
  TIM_OC_InitTypeDef sConfigOC = {0};
 8001f6c:	f017 fb8f 	bl	801968e <memset>
  htim5.Instance = TIM5;
 8001f70:	4b1c      	ldr	r3, [pc, #112]	; (8001fe4 <main+0x508>)
  htim5.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8001f72:	612c      	str	r4, [r5, #16]
  if (HAL_TIM_Base_Init(&htim5) != HAL_OK)
 8001f74:	4628      	mov	r0, r5
  htim5.Init.Prescaler = 167;
 8001f76:	e9c5 3b00 	strd	r3, fp, [r5]
  htim5.Init.Period = 9999;
 8001f7a:	e9c5 4802 	strd	r4, r8, [r5, #8]
  htim5.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8001f7e:	61ac      	str	r4, [r5, #24]
  if (HAL_TIM_Base_Init(&htim5) != HAL_OK)
 8001f80:	f004 fac0 	bl	8006504 <HAL_TIM_Base_Init>
  if (HAL_TIM_ConfigClockSource(&htim5, &sClockSourceConfig) != HAL_OK)
 8001f84:	a90d      	add	r1, sp, #52	; 0x34
 8001f86:	4628      	mov	r0, r5
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8001f88:	970d      	str	r7, [sp, #52]	; 0x34
  if (HAL_TIM_ConfigClockSource(&htim5, &sClockSourceConfig) != HAL_OK)
 8001f8a:	f004 fb91 	bl	80066b0 <HAL_TIM_ConfigClockSource>
  if (HAL_TIM_PWM_Init(&htim5) != HAL_OK)
 8001f8e:	4628      	mov	r0, r5
 8001f90:	f004 fad2 	bl	8006538 <HAL_TIM_PWM_Init>
  if (HAL_TIMEx_MasterConfigSynchronization(&htim5, &sMasterConfig) != HAL_OK)
 8001f94:	a90b      	add	r1, sp, #44	; 0x2c
 8001f96:	4628      	mov	r0, r5
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8001f98:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
  if (HAL_TIMEx_MasterConfigSynchronization(&htim5, &sMasterConfig) != HAL_OK)
 8001f9c:	f004 fcb4 	bl	8006908 <HAL_TIMEx_MasterConfigSynchronization>
  if (HAL_TIM_PWM_ConfigChannel(&htim5, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 8001fa0:	4622      	mov	r2, r4
 8001fa2:	a911      	add	r1, sp, #68	; 0x44
 8001fa4:	4628      	mov	r0, r5
  sConfigOC.Pulse = 0;
 8001fa6:	e9cd 6411 	strd	r6, r4, [sp, #68]	; 0x44
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 8001faa:	9413      	str	r4, [sp, #76]	; 0x4c
  sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 8001fac:	9415      	str	r4, [sp, #84]	; 0x54
  if (HAL_TIM_PWM_ConfigChannel(&htim5, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 8001fae:	f004 fb13 	bl	80065d8 <HAL_TIM_PWM_ConfigChannel>
  HAL_TIM_MspPostInit(&htim5);
 8001fb2:	4628      	mov	r0, r5
 8001fb4:	f000 fbf4 	bl	80027a0 <HAL_TIM_MspPostInit>
  osKernelInitialize();
 8001fb8:	f004 fd88 	bl	8006acc <osKernelInitialize>
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 8001fbc:	4a0a      	ldr	r2, [pc, #40]	; (8001fe8 <main+0x50c>)
 8001fbe:	480b      	ldr	r0, [pc, #44]	; (8001fec <main+0x510>)
 8001fc0:	4621      	mov	r1, r4
 8001fc2:	f004 fdbd 	bl	8006b40 <osThreadNew>
 8001fc6:	4b0a      	ldr	r3, [pc, #40]	; (8001ff0 <main+0x514>)
 8001fc8:	6018      	str	r0, [r3, #0]
  osKernelStart();
 8001fca:	f004 fd99 	bl	8006b00 <osKernelStart>
 8001fce:	e7fe      	b.n	8001fce <main+0x4f2>
 8001fd0:	200127e8 	.word	0x200127e8
 8001fd4:	40000400 	.word	0x40000400
 8001fd8:	20012700 	.word	0x20012700
 8001fdc:	40000800 	.word	0x40000800
 8001fe0:	200127a8 	.word	0x200127a8
 8001fe4:	40000c00 	.word	0x40000c00
 8001fe8:	0801aad4 	.word	0x0801aad4
 8001fec:	08000dd3 	.word	0x08000dd3
 8001ff0:	20012990 	.word	0x20012990

08001ff4 <IOE_Init>:
 8001ff4:	4770      	bx	lr

08001ff6 <IOE_ITConfig>:
 8001ff6:	4770      	bx	lr

08001ff8 <IOE_Write>:
{
 8001ff8:	b510      	push	{r4, lr}
 8001ffa:	b086      	sub	sp, #24
 8001ffc:	ac06      	add	r4, sp, #24
  status = HAL_I2C_Mem_Write(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, &Value, 1, I2c3Timeout); 
 8001ffe:	4b07      	ldr	r3, [pc, #28]	; (800201c <IOE_Write+0x24>)
 8002000:	f804 2d01 	strb.w	r2, [r4, #-1]!
 8002004:	681b      	ldr	r3, [r3, #0]
 8002006:	9302      	str	r3, [sp, #8]
 8002008:	2301      	movs	r3, #1
 800200a:	460a      	mov	r2, r1
 800200c:	e9cd 4300 	strd	r4, r3, [sp]
 8002010:	4601      	mov	r1, r0
 8002012:	4803      	ldr	r0, [pc, #12]	; (8002020 <IOE_Write+0x28>)
 8002014:	f002 fe06 	bl	8004c24 <HAL_I2C_Mem_Write>
}
 8002018:	b006      	add	sp, #24
 800201a:	bd10      	pop	{r4, pc}
 800201c:	2000000c 	.word	0x2000000c
 8002020:	20012654 	.word	0x20012654

08002024 <IOE_Read>:
{
 8002024:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
  uint8_t value = 0;
 8002026:	aa06      	add	r2, sp, #24
 8002028:	2300      	movs	r3, #0
 800202a:	f802 3d01 	strb.w	r3, [r2, #-1]!
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 800202e:	4b08      	ldr	r3, [pc, #32]	; (8002050 <IOE_Read+0x2c>)
 8002030:	681b      	ldr	r3, [r3, #0]
 8002032:	9302      	str	r3, [sp, #8]
 8002034:	2301      	movs	r3, #1
 8002036:	e9cd 2300 	strd	r2, r3, [sp]
 800203a:	460a      	mov	r2, r1
 800203c:	4601      	mov	r1, r0
 800203e:	4805      	ldr	r0, [pc, #20]	; (8002054 <IOE_Read+0x30>)
 8002040:	f002 fe80 	bl	8004d44 <HAL_I2C_Mem_Read>
}
 8002044:	f89d 0017 	ldrb.w	r0, [sp, #23]
 8002048:	b007      	add	sp, #28
 800204a:	f85d fb04 	ldr.w	pc, [sp], #4
 800204e:	bf00      	nop
 8002050:	2000000c 	.word	0x2000000c
 8002054:	20012654 	.word	0x20012654

08002058 <IOE_ReadMultiple>:
{
 8002058:	b51f      	push	{r0, r1, r2, r3, r4, lr}
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, pBuffer, Length, I2c3Timeout);
 800205a:	4c08      	ldr	r4, [pc, #32]	; (800207c <IOE_ReadMultiple+0x24>)
 800205c:	6824      	ldr	r4, [r4, #0]
 800205e:	9200      	str	r2, [sp, #0]
 8002060:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8002064:	460a      	mov	r2, r1
 8002066:	2301      	movs	r3, #1
 8002068:	4601      	mov	r1, r0
 800206a:	4805      	ldr	r0, [pc, #20]	; (8002080 <IOE_ReadMultiple+0x28>)
 800206c:	f002 fe6a 	bl	8004d44 <HAL_I2C_Mem_Read>
}
 8002070:	3000      	adds	r0, #0
 8002072:	bf18      	it	ne
 8002074:	2001      	movne	r0, #1
 8002076:	b004      	add	sp, #16
 8002078:	bd10      	pop	{r4, pc}
 800207a:	bf00      	nop
 800207c:	2000000c 	.word	0x2000000c
 8002080:	20012654 	.word	0x20012654

08002084 <IOE_Delay>:
 8002084:	f001 beee 	b.w	8003e64 <HAL_Delay>

08002088 <LCD_IO_Init>:
{
 8002088:	b510      	push	{r4, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 800208a:	4c06      	ldr	r4, [pc, #24]	; (80020a4 <LCD_IO_Init+0x1c>)
 800208c:	2200      	movs	r2, #0
 800208e:	4620      	mov	r0, r4
 8002090:	2104      	movs	r1, #4
 8002092:	f002 fb41 	bl	8004718 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8002096:	4620      	mov	r0, r4
 8002098:	2201      	movs	r2, #1
 800209a:	2104      	movs	r1, #4
}
 800209c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 80020a0:	f002 bb3a 	b.w	8004718 <HAL_GPIO_WritePin>
 80020a4:	40020800 	.word	0x40020800

080020a8 <LCD_IO_WriteData>:
{
 80020a8:	b538      	push	{r3, r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 80020aa:	4c0b      	ldr	r4, [pc, #44]	; (80020d8 <LCD_IO_WriteData+0x30>)
{
 80020ac:	4605      	mov	r5, r0
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 80020ae:	2201      	movs	r2, #1
 80020b0:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 80020b4:	4809      	ldr	r0, [pc, #36]	; (80020dc <LCD_IO_WriteData+0x34>)
 80020b6:	f002 fb2f 	bl	8004718 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 80020ba:	2200      	movs	r2, #0
 80020bc:	2104      	movs	r1, #4
 80020be:	4620      	mov	r0, r4
 80020c0:	f002 fb2a 	bl	8004718 <HAL_GPIO_WritePin>
  SPI5_Write(RegValue);
 80020c4:	4628      	mov	r0, r5
 80020c6:	f7ff fc9b 	bl	8001a00 <SPI5_Write>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 80020ca:	4620      	mov	r0, r4
 80020cc:	2201      	movs	r2, #1
 80020ce:	2104      	movs	r1, #4
}
 80020d0:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 80020d4:	f002 bb20 	b.w	8004718 <HAL_GPIO_WritePin>
 80020d8:	40020800 	.word	0x40020800
 80020dc:	40020c00 	.word	0x40020c00

080020e0 <LCD_IO_WriteReg>:
{
 80020e0:	b538      	push	{r3, r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 80020e2:	4c0b      	ldr	r4, [pc, #44]	; (8002110 <LCD_IO_WriteReg+0x30>)
{
 80020e4:	4605      	mov	r5, r0
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 80020e6:	2200      	movs	r2, #0
 80020e8:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 80020ec:	4809      	ldr	r0, [pc, #36]	; (8002114 <LCD_IO_WriteReg+0x34>)
 80020ee:	f002 fb13 	bl	8004718 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 80020f2:	2200      	movs	r2, #0
 80020f4:	2104      	movs	r1, #4
 80020f6:	4620      	mov	r0, r4
 80020f8:	f002 fb0e 	bl	8004718 <HAL_GPIO_WritePin>
  SPI5_Write(Reg);
 80020fc:	4628      	mov	r0, r5
 80020fe:	f7ff fc7f 	bl	8001a00 <SPI5_Write>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8002102:	4620      	mov	r0, r4
 8002104:	2201      	movs	r2, #1
 8002106:	2104      	movs	r1, #4
}
 8002108:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 800210c:	f002 bb04 	b.w	8004718 <HAL_GPIO_WritePin>
 8002110:	40020800 	.word	0x40020800
 8002114:	40020c00 	.word	0x40020c00

08002118 <LCD_IO_ReadData>:
{
 8002118:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 800211a:	4c14      	ldr	r4, [pc, #80]	; (800216c <LCD_IO_ReadData+0x54>)
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 800211c:	4d14      	ldr	r5, [pc, #80]	; (8002170 <LCD_IO_ReadData+0x58>)
{
 800211e:	4607      	mov	r7, r0
 8002120:	460e      	mov	r6, r1
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8002122:	4620      	mov	r0, r4
 8002124:	2200      	movs	r2, #0
 8002126:	2104      	movs	r1, #4
 8002128:	f002 faf6 	bl	8004718 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 800212c:	2200      	movs	r2, #0
 800212e:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8002132:	4628      	mov	r0, r5
 8002134:	f002 faf0 	bl	8004718 <HAL_GPIO_WritePin>
  SPI5_Write(RegValue);
 8002138:	4638      	mov	r0, r7
 800213a:	f7ff fc61 	bl	8001a00 <SPI5_Write>
  status = HAL_SPI_Receive(&hspi5, (uint8_t*) &readvalue, ReadSize, Spi5Timeout);
 800213e:	4b0d      	ldr	r3, [pc, #52]	; (8002174 <LCD_IO_ReadData+0x5c>)
 8002140:	480d      	ldr	r0, [pc, #52]	; (8002178 <LCD_IO_ReadData+0x60>)
 8002142:	681b      	ldr	r3, [r3, #0]
 8002144:	4632      	mov	r2, r6
 8002146:	a901      	add	r1, sp, #4
 8002148:	f003 ff53 	bl	8005ff2 <HAL_SPI_Receive>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 800214c:	4628      	mov	r0, r5
 800214e:	2201      	movs	r2, #1
 8002150:	f44f 5100 	mov.w	r1, #8192	; 0x2000
  return readvalue;
 8002154:	9e01      	ldr	r6, [sp, #4]
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 8002156:	f002 fadf 	bl	8004718 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 800215a:	4620      	mov	r0, r4
 800215c:	2201      	movs	r2, #1
 800215e:	2104      	movs	r1, #4
 8002160:	f002 fada 	bl	8004718 <HAL_GPIO_WritePin>
}
 8002164:	4630      	mov	r0, r6
 8002166:	b003      	add	sp, #12
 8002168:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800216a:	bf00      	nop
 800216c:	40020800 	.word	0x40020800
 8002170:	40020c00 	.word	0x40020c00
 8002174:	20000010 	.word	0x20000010
 8002178:	200126a8 	.word	0x200126a8

0800217c <LCD_Delay>:
  HAL_Delay(Delay);
 800217c:	f001 be72 	b.w	8003e64 <HAL_Delay>

08002180 <HAL_TIM_PeriodElapsedCallback>:
  if (htim->Instance == TIM6) {
 8002180:	6802      	ldr	r2, [r0, #0]
 8002182:	4b03      	ldr	r3, [pc, #12]	; (8002190 <HAL_TIM_PeriodElapsedCallback+0x10>)
 8002184:	429a      	cmp	r2, r3
 8002186:	d101      	bne.n	800218c <HAL_TIM_PeriodElapsedCallback+0xc>
    HAL_IncTick();
 8002188:	f001 be5a 	b.w	8003e40 <HAL_IncTick>
}
 800218c:	4770      	bx	lr
 800218e:	bf00      	nop
 8002190:	40001000 	.word	0x40001000

08002194 <Error_Handler>:
}
 8002194:	4770      	bx	lr
	...

08002198 <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 8002198:	b082      	sub	sp, #8
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 800219a:	4b0e      	ldr	r3, [pc, #56]	; (80021d4 <HAL_MspInit+0x3c>)
 800219c:	2200      	movs	r2, #0
 800219e:	9200      	str	r2, [sp, #0]
 80021a0:	6c59      	ldr	r1, [r3, #68]	; 0x44
 80021a2:	f441 4180 	orr.w	r1, r1, #16384	; 0x4000
 80021a6:	6459      	str	r1, [r3, #68]	; 0x44
 80021a8:	6c59      	ldr	r1, [r3, #68]	; 0x44
 80021aa:	f401 4180 	and.w	r1, r1, #16384	; 0x4000
 80021ae:	9100      	str	r1, [sp, #0]
 80021b0:	9900      	ldr	r1, [sp, #0]
  __HAL_RCC_PWR_CLK_ENABLE();
 80021b2:	9201      	str	r2, [sp, #4]
 80021b4:	6c19      	ldr	r1, [r3, #64]	; 0x40
 80021b6:	f041 5180 	orr.w	r1, r1, #268435456	; 0x10000000
 80021ba:	6419      	str	r1, [r3, #64]	; 0x40
 80021bc:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80021be:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80021c2:	9301      	str	r3, [sp, #4]
 80021c4:	9b01      	ldr	r3, [sp, #4]

  /* System interrupt init*/
  /* PendSV_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 80021c6:	210f      	movs	r1, #15
 80021c8:	f06f 0001 	mvn.w	r0, #1

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 80021cc:	b002      	add	sp, #8
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 80021ce:	f001 be6f 	b.w	8003eb0 <HAL_NVIC_SetPriority>
 80021d2:	bf00      	nop
 80021d4:	40023800 	.word	0x40023800

080021d8 <HAL_CRC_MspInit>:
* @param hcrc: CRC handle pointer
* @retval None
*/
void HAL_CRC_MspInit(CRC_HandleTypeDef* hcrc)
{
  if(hcrc->Instance==CRC)
 80021d8:	6802      	ldr	r2, [r0, #0]
 80021da:	4b09      	ldr	r3, [pc, #36]	; (8002200 <HAL_CRC_MspInit+0x28>)
 80021dc:	429a      	cmp	r2, r3
{
 80021de:	b082      	sub	sp, #8
  if(hcrc->Instance==CRC)
 80021e0:	d10b      	bne.n	80021fa <HAL_CRC_MspInit+0x22>
  {
  /* USER CODE BEGIN CRC_MspInit 0 */

  /* USER CODE END CRC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_CRC_CLK_ENABLE();
 80021e2:	2300      	movs	r3, #0
 80021e4:	9301      	str	r3, [sp, #4]
 80021e6:	4b07      	ldr	r3, [pc, #28]	; (8002204 <HAL_CRC_MspInit+0x2c>)
 80021e8:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80021ea:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 80021ee:	631a      	str	r2, [r3, #48]	; 0x30
 80021f0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80021f2:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 80021f6:	9301      	str	r3, [sp, #4]
 80021f8:	9b01      	ldr	r3, [sp, #4]
  /* USER CODE BEGIN CRC_MspInit 1 */

  /* USER CODE END CRC_MspInit 1 */
  }

}
 80021fa:	b002      	add	sp, #8
 80021fc:	4770      	bx	lr
 80021fe:	bf00      	nop
 8002200:	40023000 	.word	0x40023000
 8002204:	40023800 	.word	0x40023800

08002208 <HAL_DMA2D_MspInit>:
* This function configures the hardware resources used in this example
* @param hdma2d: DMA2D handle pointer
* @retval None
*/
void HAL_DMA2D_MspInit(DMA2D_HandleTypeDef* hdma2d)
{
 8002208:	b507      	push	{r0, r1, r2, lr}
  if(hdma2d->Instance==DMA2D)
 800220a:	4b0f      	ldr	r3, [pc, #60]	; (8002248 <HAL_DMA2D_MspInit+0x40>)
 800220c:	6802      	ldr	r2, [r0, #0]
 800220e:	429a      	cmp	r2, r3
 8002210:	d116      	bne.n	8002240 <HAL_DMA2D_MspInit+0x38>
  {
  /* USER CODE BEGIN DMA2D_MspInit 0 */

  /* USER CODE END DMA2D_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_DMA2D_CLK_ENABLE();
 8002212:	2200      	movs	r2, #0
 8002214:	f5a3 43f0 	sub.w	r3, r3, #30720	; 0x7800
 8002218:	9201      	str	r2, [sp, #4]
 800221a:	6b19      	ldr	r1, [r3, #48]	; 0x30
 800221c:	f441 0100 	orr.w	r1, r1, #8388608	; 0x800000
 8002220:	6319      	str	r1, [r3, #48]	; 0x30
 8002222:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002224:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
 8002228:	9301      	str	r3, [sp, #4]
    /* DMA2D interrupt Init */
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
 800222a:	2105      	movs	r1, #5
 800222c:	205a      	movs	r0, #90	; 0x5a
    __HAL_RCC_DMA2D_CLK_ENABLE();
 800222e:	9b01      	ldr	r3, [sp, #4]
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
 8002230:	f001 fe3e 	bl	8003eb0 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
 8002234:	205a      	movs	r0, #90	; 0x5a
  /* USER CODE BEGIN DMA2D_MspInit 1 */

  /* USER CODE END DMA2D_MspInit 1 */
  }

}
 8002236:	b003      	add	sp, #12
 8002238:	f85d eb04 	ldr.w	lr, [sp], #4
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
 800223c:	f001 be6c 	b.w	8003f18 <HAL_NVIC_EnableIRQ>
}
 8002240:	b003      	add	sp, #12
 8002242:	f85d fb04 	ldr.w	pc, [sp], #4
 8002246:	bf00      	nop
 8002248:	4002b000 	.word	0x4002b000

0800224c <HAL_DMA2D_MspDeInit>:
* @param hdma2d: DMA2D handle pointer
* @retval None
*/
void HAL_DMA2D_MspDeInit(DMA2D_HandleTypeDef* hdma2d)
{
  if(hdma2d->Instance==DMA2D)
 800224c:	6802      	ldr	r2, [r0, #0]
 800224e:	4b06      	ldr	r3, [pc, #24]	; (8002268 <HAL_DMA2D_MspDeInit+0x1c>)
 8002250:	429a      	cmp	r2, r3
 8002252:	d107      	bne.n	8002264 <HAL_DMA2D_MspDeInit+0x18>
  {
  /* USER CODE BEGIN DMA2D_MspDeInit 0 */

  /* USER CODE END DMA2D_MspDeInit 0 */
    /* Peripheral clock disable */
    __HAL_RCC_DMA2D_CLK_DISABLE();
 8002254:	4a05      	ldr	r2, [pc, #20]	; (800226c <HAL_DMA2D_MspDeInit+0x20>)
 8002256:	6b13      	ldr	r3, [r2, #48]	; 0x30
 8002258:	f423 0300 	bic.w	r3, r3, #8388608	; 0x800000
 800225c:	6313      	str	r3, [r2, #48]	; 0x30

    /* DMA2D interrupt DeInit */
    HAL_NVIC_DisableIRQ(DMA2D_IRQn);
 800225e:	205a      	movs	r0, #90	; 0x5a
 8002260:	f001 be68 	b.w	8003f34 <HAL_NVIC_DisableIRQ>
  /* USER CODE BEGIN DMA2D_MspDeInit 1 */

  /* USER CODE END DMA2D_MspDeInit 1 */
  }

}
 8002264:	4770      	bx	lr
 8002266:	bf00      	nop
 8002268:	4002b000 	.word	0x4002b000
 800226c:	40023800 	.word	0x40023800

08002270 <HAL_I2C_MspInit>:
* This function configures the hardware resources used in this example
* @param hi2c: I2C handle pointer
* @retval None
*/
void HAL_I2C_MspInit(I2C_HandleTypeDef* hi2c)
{
 8002270:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8002274:	4604      	mov	r4, r0
 8002276:	b089      	sub	sp, #36	; 0x24
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8002278:	2214      	movs	r2, #20
 800227a:	2100      	movs	r1, #0
 800227c:	a803      	add	r0, sp, #12
 800227e:	f017 fa06 	bl	801968e <memset>
  if(hi2c->Instance==I2C3)
 8002282:	6822      	ldr	r2, [r4, #0]
 8002284:	4b24      	ldr	r3, [pc, #144]	; (8002318 <HAL_I2C_MspInit+0xa8>)
 8002286:	429a      	cmp	r2, r3
 8002288:	d143      	bne.n	8002312 <HAL_I2C_MspInit+0xa2>
  {
  /* USER CODE BEGIN I2C3_MspInit 0 */

  /* USER CODE END I2C3_MspInit 0 */
  
    __HAL_RCC_GPIOC_CLK_ENABLE();
 800228a:	4c24      	ldr	r4, [pc, #144]	; (800231c <HAL_I2C_MspInit+0xac>)
    GPIO_InitStruct.Pin = GPIO_PIN_9;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
    GPIO_InitStruct.Pull = GPIO_PULLUP;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 800228c:	4824      	ldr	r0, [pc, #144]	; (8002320 <HAL_I2C_MspInit+0xb0>)
    __HAL_RCC_GPIOC_CLK_ENABLE();
 800228e:	2500      	movs	r5, #0
 8002290:	9500      	str	r5, [sp, #0]
 8002292:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8002294:	f043 0304 	orr.w	r3, r3, #4
 8002298:	6323      	str	r3, [r4, #48]	; 0x30
 800229a:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800229c:	f003 0304 	and.w	r3, r3, #4
 80022a0:	9300      	str	r3, [sp, #0]
 80022a2:	9b00      	ldr	r3, [sp, #0]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 80022a4:	9501      	str	r5, [sp, #4]
 80022a6:	6b23      	ldr	r3, [r4, #48]	; 0x30
 80022a8:	f043 0301 	orr.w	r3, r3, #1
 80022ac:	6323      	str	r3, [r4, #48]	; 0x30
 80022ae:	6b23      	ldr	r3, [r4, #48]	; 0x30
 80022b0:	f003 0301 	and.w	r3, r3, #1
 80022b4:	9301      	str	r3, [sp, #4]
 80022b6:	9b01      	ldr	r3, [sp, #4]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 80022b8:	f04f 0912 	mov.w	r9, #18
 80022bc:	f44f 7300 	mov.w	r3, #512	; 0x200
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80022c0:	f04f 0801 	mov.w	r8, #1
 80022c4:	2703      	movs	r7, #3
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 80022c6:	2604      	movs	r6, #4
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80022c8:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 80022ca:	e9cd 3903 	strd	r3, r9, [sp, #12]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80022ce:	e9cd 8705 	strd	r8, r7, [sp, #20]
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 80022d2:	9607      	str	r6, [sp, #28]
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80022d4:	f002 f934 	bl	8004540 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_8;
 80022d8:	f44f 7380 	mov.w	r3, #256	; 0x100
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
    GPIO_InitStruct.Pull = GPIO_PULLUP;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80022dc:	a903      	add	r1, sp, #12
 80022de:	4811      	ldr	r0, [pc, #68]	; (8002324 <HAL_I2C_MspInit+0xb4>)
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 80022e0:	9607      	str	r6, [sp, #28]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 80022e2:	e9cd 3903 	strd	r3, r9, [sp, #12]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80022e6:	e9cd 8705 	strd	r8, r7, [sp, #20]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80022ea:	f002 f929 	bl	8004540 <HAL_GPIO_Init>

    /* Peripheral clock enable */
    __HAL_RCC_I2C3_CLK_ENABLE();
 80022ee:	9502      	str	r5, [sp, #8]
 80022f0:	6c23      	ldr	r3, [r4, #64]	; 0x40
 80022f2:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 80022f6:	6423      	str	r3, [r4, #64]	; 0x40
 80022f8:	6c23      	ldr	r3, [r4, #64]	; 0x40
 80022fa:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
 80022fe:	9302      	str	r3, [sp, #8]
 8002300:	9b02      	ldr	r3, [sp, #8]
  /* USER CODE BEGIN I2C3_MspInit 1 */
  /* Force the I2C Peripheral Clock Reset */  
    __HAL_RCC_I2C3_FORCE_RESET();
 8002302:	6a23      	ldr	r3, [r4, #32]
 8002304:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 8002308:	6223      	str	r3, [r4, #32]
      
    /* Release the I2C Peripheral Clock Reset */  
    __HAL_RCC_I2C3_RELEASE_RESET(); 
 800230a:	6a23      	ldr	r3, [r4, #32]
 800230c:	f423 0300 	bic.w	r3, r3, #8388608	; 0x800000
 8002310:	6223      	str	r3, [r4, #32]
  /* USER CODE END I2C3_MspInit 1 */
  }

}
 8002312:	b009      	add	sp, #36	; 0x24
 8002314:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8002318:	40005c00 	.word	0x40005c00
 800231c:	40023800 	.word	0x40023800
 8002320:	40020800 	.word	0x40020800
 8002324:	40020000 	.word	0x40020000

08002328 <HAL_LTDC_MspInit>:
* This function configures the hardware resources used in this example
* @param hltdc: LTDC handle pointer
* @retval None
*/
void HAL_LTDC_MspInit(LTDC_HandleTypeDef* hltdc)
{
 8002328:	b5f0      	push	{r4, r5, r6, r7, lr}
 800232a:	4604      	mov	r4, r0
 800232c:	b08d      	sub	sp, #52	; 0x34
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800232e:	2214      	movs	r2, #20
 8002330:	2100      	movs	r1, #0
 8002332:	a807      	add	r0, sp, #28
 8002334:	f017 f9ab 	bl	801968e <memset>
  if(hltdc->Instance==LTDC)
 8002338:	6822      	ldr	r2, [r4, #0]
 800233a:	4b57      	ldr	r3, [pc, #348]	; (8002498 <HAL_LTDC_MspInit+0x170>)
 800233c:	429a      	cmp	r2, r3
 800233e:	f040 80a8 	bne.w	8002492 <HAL_LTDC_MspInit+0x16a>
  {
  /* USER CODE BEGIN LTDC_MspInit 0 */

  /* USER CODE END LTDC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_LTDC_CLK_ENABLE();
 8002342:	f503 4350 	add.w	r3, r3, #53248	; 0xd000
 8002346:	2500      	movs	r5, #0
 8002348:	9500      	str	r5, [sp, #0]
 800234a:	6c5a      	ldr	r2, [r3, #68]	; 0x44
    GPIO_InitStruct.Pin = GPIO_PIN_10;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 800234c:	4853      	ldr	r0, [pc, #332]	; (800249c <HAL_LTDC_MspInit+0x174>)
    __HAL_RCC_LTDC_CLK_ENABLE();
 800234e:	f042 6280 	orr.w	r2, r2, #67108864	; 0x4000000
 8002352:	645a      	str	r2, [r3, #68]	; 0x44
 8002354:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8002356:	f002 6280 	and.w	r2, r2, #67108864	; 0x4000000
 800235a:	9200      	str	r2, [sp, #0]
 800235c:	9a00      	ldr	r2, [sp, #0]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 800235e:	9501      	str	r5, [sp, #4]
 8002360:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8002362:	f042 0220 	orr.w	r2, r2, #32
 8002366:	631a      	str	r2, [r3, #48]	; 0x30
 8002368:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800236a:	f002 0220 	and.w	r2, r2, #32
 800236e:	9201      	str	r2, [sp, #4]
 8002370:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8002372:	9502      	str	r5, [sp, #8]
 8002374:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8002376:	f042 0201 	orr.w	r2, r2, #1
 800237a:	631a      	str	r2, [r3, #48]	; 0x30
 800237c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800237e:	f002 0201 	and.w	r2, r2, #1
 8002382:	9202      	str	r2, [sp, #8]
 8002384:	9a02      	ldr	r2, [sp, #8]
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8002386:	9503      	str	r5, [sp, #12]
 8002388:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800238a:	f042 0202 	orr.w	r2, r2, #2
 800238e:	631a      	str	r2, [r3, #48]	; 0x30
 8002390:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8002392:	f002 0202 	and.w	r2, r2, #2
 8002396:	9203      	str	r2, [sp, #12]
 8002398:	9a03      	ldr	r2, [sp, #12]
    __HAL_RCC_GPIOG_CLK_ENABLE();
 800239a:	9504      	str	r5, [sp, #16]
 800239c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800239e:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 80023a2:	631a      	str	r2, [r3, #48]	; 0x30
 80023a4:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80023a6:	f002 0240 	and.w	r2, r2, #64	; 0x40
 80023aa:	9204      	str	r2, [sp, #16]
 80023ac:	9a04      	ldr	r2, [sp, #16]
    __HAL_RCC_GPIOC_CLK_ENABLE();
 80023ae:	9505      	str	r5, [sp, #20]
 80023b0:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80023b2:	f042 0204 	orr.w	r2, r2, #4
 80023b6:	631a      	str	r2, [r3, #48]	; 0x30
 80023b8:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80023ba:	f002 0204 	and.w	r2, r2, #4
 80023be:	9205      	str	r2, [sp, #20]
 80023c0:	9a05      	ldr	r2, [sp, #20]
    __HAL_RCC_GPIOD_CLK_ENABLE();
 80023c2:	9506      	str	r5, [sp, #24]
 80023c4:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80023c6:	f042 0208 	orr.w	r2, r2, #8
 80023ca:	631a      	str	r2, [r3, #48]	; 0x30
 80023cc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80023ce:	f003 0308 	and.w	r3, r3, #8
 80023d2:	9306      	str	r3, [sp, #24]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80023d4:	2402      	movs	r4, #2
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 80023d6:	260e      	movs	r6, #14
    __HAL_RCC_GPIOD_CLK_ENABLE();
 80023d8:	9b06      	ldr	r3, [sp, #24]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 80023da:	940a      	str	r4, [sp, #40]	; 0x28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80023dc:	f44f 6380 	mov.w	r3, #1024	; 0x400
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 80023e0:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80023e2:	e9cd 3407 	strd	r3, r4, [sp, #28]
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 80023e6:	960b      	str	r6, [sp, #44]	; 0x2c
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 80023e8:	f002 f8aa 	bl	8004540 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_3|GPIO_PIN_4|GPIO_PIN_6|GPIO_PIN_11 
 80023ec:	f641 0358 	movw	r3, #6232	; 0x1858
                          |GPIO_PIN_12;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80023f0:	a907      	add	r1, sp, #28
 80023f2:	482b      	ldr	r0, [pc, #172]	; (80024a0 <HAL_LTDC_MspInit+0x178>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 80023f4:	960b      	str	r6, [sp, #44]	; 0x2c
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80023f6:	e9cd 3407 	strd	r3, r4, [sp, #28]

    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 80023fa:	2709      	movs	r7, #9
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 80023fc:	e9cd 5409 	strd	r5, r4, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8002400:	f002 f89e 	bl	8004540 <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
 8002404:	2303      	movs	r3, #3
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002406:	a907      	add	r1, sp, #28
 8002408:	4826      	ldr	r0, [pc, #152]	; (80024a4 <HAL_LTDC_MspInit+0x17c>)
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 800240a:	970b      	str	r7, [sp, #44]	; 0x2c
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800240c:	e9cd 3407 	strd	r3, r4, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8002410:	e9cd 5409 	strd	r5, r4, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002414:	f002 f894 	bl	8004540 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_11|GPIO_PIN_8|GPIO_PIN_9;
 8002418:	f44f 6370 	mov.w	r3, #3840	; 0xf00
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800241c:	a907      	add	r1, sp, #28
 800241e:	4821      	ldr	r0, [pc, #132]	; (80024a4 <HAL_LTDC_MspInit+0x17c>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8002420:	960b      	str	r6, [sp, #44]	; 0x2c
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002422:	e9cd 3407 	strd	r3, r4, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8002426:	e9cd 5409 	strd	r5, r4, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800242a:	f002 f889 	bl	8004540 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7|GPIO_PIN_11;
 800242e:	f44f 630c 	mov.w	r3, #2240	; 0x8c0
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8002432:	a907      	add	r1, sp, #28
 8002434:	481c      	ldr	r0, [pc, #112]	; (80024a8 <HAL_LTDC_MspInit+0x180>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8002436:	960b      	str	r6, [sp, #44]	; 0x2c
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002438:	e9cd 3407 	strd	r3, r4, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 800243c:	e9cd 5409 	strd	r5, r4, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8002440:	f002 f87e 	bl	8004540 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7;
 8002444:	23c0      	movs	r3, #192	; 0xc0
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8002446:	a907      	add	r1, sp, #28
 8002448:	4818      	ldr	r0, [pc, #96]	; (80024ac <HAL_LTDC_MspInit+0x184>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 800244a:	960b      	str	r6, [sp, #44]	; 0x2c
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800244c:	e9cd 3407 	strd	r3, r4, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8002450:	e9cd 5409 	strd	r5, r4, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8002454:	f002 f874 	bl	8004540 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_3;
 8002458:	2308      	movs	r3, #8
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 800245a:	a907      	add	r1, sp, #28
 800245c:	4814      	ldr	r0, [pc, #80]	; (80024b0 <HAL_LTDC_MspInit+0x188>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 800245e:	960b      	str	r6, [sp, #44]	; 0x2c
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002460:	e9cd 3407 	strd	r3, r4, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8002464:	e9cd 5409 	strd	r5, r4, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8002468:	f002 f86a 	bl	8004540 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_12;
 800246c:	f44f 53a0 	mov.w	r3, #5120	; 0x1400
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8002470:	a907      	add	r1, sp, #28
 8002472:	480d      	ldr	r0, [pc, #52]	; (80024a8 <HAL_LTDC_MspInit+0x180>)
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 8002474:	970b      	str	r7, [sp, #44]	; 0x2c
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002476:	e9cd 3407 	strd	r3, r4, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 800247a:	e9cd 5409 	strd	r5, r4, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 800247e:	f002 f85f 	bl	8004540 <HAL_GPIO_Init>

    /* LTDC interrupt Init */
    HAL_NVIC_SetPriority(LTDC_IRQn, 5, 0);
 8002482:	2058      	movs	r0, #88	; 0x58
 8002484:	462a      	mov	r2, r5
 8002486:	2105      	movs	r1, #5
 8002488:	f001 fd12 	bl	8003eb0 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(LTDC_IRQn);
 800248c:	2058      	movs	r0, #88	; 0x58
 800248e:	f001 fd43 	bl	8003f18 <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN LTDC_MspInit 1 */

  /* USER CODE END LTDC_MspInit 1 */
  }

}
 8002492:	b00d      	add	sp, #52	; 0x34
 8002494:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8002496:	bf00      	nop
 8002498:	40016800 	.word	0x40016800
 800249c:	40021400 	.word	0x40021400
 80024a0:	40020000 	.word	0x40020000
 80024a4:	40020400 	.word	0x40020400
 80024a8:	40021800 	.word	0x40021800
 80024ac:	40020800 	.word	0x40020800
 80024b0:	40020c00 	.word	0x40020c00

080024b4 <HAL_SPI_MspInit>:
* This function configures the hardware resources used in this example
* @param hspi: SPI handle pointer
* @retval None
*/
void HAL_SPI_MspInit(SPI_HandleTypeDef* hspi)
{
 80024b4:	b510      	push	{r4, lr}
 80024b6:	4604      	mov	r4, r0
 80024b8:	b088      	sub	sp, #32
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80024ba:	2214      	movs	r2, #20
 80024bc:	2100      	movs	r1, #0
 80024be:	a803      	add	r0, sp, #12
 80024c0:	f017 f8e5 	bl	801968e <memset>
  if(hspi->Instance==SPI5)
 80024c4:	6822      	ldr	r2, [r4, #0]
 80024c6:	4b14      	ldr	r3, [pc, #80]	; (8002518 <HAL_SPI_MspInit+0x64>)
 80024c8:	429a      	cmp	r2, r3
 80024ca:	d123      	bne.n	8002514 <HAL_SPI_MspInit+0x60>
  {
  /* USER CODE BEGIN SPI5_MspInit 0 */

  /* USER CODE END SPI5_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_SPI5_CLK_ENABLE();
 80024cc:	f503 4368 	add.w	r3, r3, #59392	; 0xe800
 80024d0:	2100      	movs	r1, #0
 80024d2:	9101      	str	r1, [sp, #4]
 80024d4:	6c5a      	ldr	r2, [r3, #68]	; 0x44
    GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI5;
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 80024d6:	4811      	ldr	r0, [pc, #68]	; (800251c <HAL_SPI_MspInit+0x68>)
    __HAL_RCC_SPI5_CLK_ENABLE();
 80024d8:	f442 1280 	orr.w	r2, r2, #1048576	; 0x100000
 80024dc:	645a      	str	r2, [r3, #68]	; 0x44
 80024de:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 80024e0:	f402 1280 	and.w	r2, r2, #1048576	; 0x100000
 80024e4:	9201      	str	r2, [sp, #4]
 80024e6:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 80024e8:	9102      	str	r1, [sp, #8]
 80024ea:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80024ec:	f042 0220 	orr.w	r2, r2, #32
 80024f0:	631a      	str	r2, [r3, #48]	; 0x30
 80024f2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80024f4:	f003 0320 	and.w	r3, r3, #32
 80024f8:	9302      	str	r3, [sp, #8]
 80024fa:	9b02      	ldr	r3, [sp, #8]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80024fc:	f44f 7260 	mov.w	r2, #896	; 0x380
 8002500:	2302      	movs	r3, #2
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI5;
 8002502:	2103      	movs	r1, #3
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002504:	e9cd 2303 	strd	r2, r3, [sp, #12]
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI5;
 8002508:	2305      	movs	r3, #5
 800250a:	e9cd 1306 	strd	r1, r3, [sp, #24]
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 800250e:	a903      	add	r1, sp, #12
 8002510:	f002 f816 	bl	8004540 <HAL_GPIO_Init>
  /* USER CODE BEGIN SPI5_MspInit 1 */

  /* USER CODE END SPI5_MspInit 1 */
  }

}
 8002514:	b008      	add	sp, #32
 8002516:	bd10      	pop	{r4, pc}
 8002518:	40015000 	.word	0x40015000
 800251c:	40021400 	.word	0x40021400

08002520 <HAL_SDRAM_MspInit>:
  /* USER CODE BEGIN FMC_MspInit 1 */

  /* USER CODE END FMC_MspInit 1 */
}

void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef* hsdram){
 8002520:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8002524:	b086      	sub	sp, #24
  GPIO_InitTypeDef GPIO_InitStruct ={0};
 8002526:	2214      	movs	r2, #20
 8002528:	2100      	movs	r1, #0
 800252a:	a801      	add	r0, sp, #4
 800252c:	f017 f8af 	bl	801968e <memset>
  if (FMC_Initialized) {
 8002530:	4b2b      	ldr	r3, [pc, #172]	; (80025e0 <HAL_SDRAM_MspInit+0xc0>)
 8002532:	681c      	ldr	r4, [r3, #0]
 8002534:	2c00      	cmp	r4, #0
 8002536:	d14f      	bne.n	80025d8 <HAL_SDRAM_MspInit+0xb8>
  FMC_Initialized = 1;
 8002538:	f04f 0801 	mov.w	r8, #1
 800253c:	f8c3 8000 	str.w	r8, [r3]
  __HAL_RCC_FMC_CLK_ENABLE();
 8002540:	4b28      	ldr	r3, [pc, #160]	; (80025e4 <HAL_SDRAM_MspInit+0xc4>)
 8002542:	9400      	str	r4, [sp, #0]
 8002544:	6b9a      	ldr	r2, [r3, #56]	; 0x38
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8002546:	4828      	ldr	r0, [pc, #160]	; (80025e8 <HAL_SDRAM_MspInit+0xc8>)
  __HAL_RCC_FMC_CLK_ENABLE();
 8002548:	ea42 0208 	orr.w	r2, r2, r8
 800254c:	639a      	str	r2, [r3, #56]	; 0x38
 800254e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8002550:	ea03 0308 	and.w	r3, r3, r8
 8002554:	9300      	str	r3, [sp, #0]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002556:	2702      	movs	r7, #2
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8002558:	2603      	movs	r6, #3
 800255a:	250c      	movs	r5, #12
  __HAL_RCC_FMC_CLK_ENABLE();
 800255c:	9b00      	ldr	r3, [sp, #0]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 800255e:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002560:	f64f 033f 	movw	r3, #63551	; 0xf83f
 8002564:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8002568:	e9cd 6504 	strd	r6, r5, [sp, #16]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 800256c:	f001 ffe8 	bl	8004540 <HAL_GPIO_Init>
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8002570:	a901      	add	r1, sp, #4
 8002572:	481e      	ldr	r0, [pc, #120]	; (80025ec <HAL_SDRAM_MspInit+0xcc>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8002574:	9505      	str	r5, [sp, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002576:	e9cd 8701 	strd	r8, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800257a:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 800257e:	f001 ffdf 	bl	8004540 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_4|GPIO_PIN_5 
 8002582:	f248 1333 	movw	r3, #33075	; 0x8133
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8002586:	a901      	add	r1, sp, #4
 8002588:	4819      	ldr	r0, [pc, #100]	; (80025f0 <HAL_SDRAM_MspInit+0xd0>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 800258a:	9505      	str	r5, [sp, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800258c:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8002590:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8002594:	f001 ffd4 	bl	8004540 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10 
 8002598:	f64f 7383 	movw	r3, #65411	; 0xff83
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 800259c:	a901      	add	r1, sp, #4
 800259e:	4815      	ldr	r0, [pc, #84]	; (80025f4 <HAL_SDRAM_MspInit+0xd4>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 80025a0:	9505      	str	r5, [sp, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80025a2:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80025a6:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 80025aa:	f001 ffc9 	bl	8004540 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10|GPIO_PIN_14 
 80025ae:	f24c 7303 	movw	r3, #50947	; 0xc703
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80025b2:	a901      	add	r1, sp, #4
 80025b4:	4810      	ldr	r0, [pc, #64]	; (80025f8 <HAL_SDRAM_MspInit+0xd8>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 80025b6:	9505      	str	r5, [sp, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80025b8:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80025bc:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80025c0:	f001 ffbe 	bl	8004540 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_6;
 80025c4:	2360      	movs	r3, #96	; 0x60
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80025c6:	a901      	add	r1, sp, #4
 80025c8:	480c      	ldr	r0, [pc, #48]	; (80025fc <HAL_SDRAM_MspInit+0xdc>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 80025ca:	9505      	str	r5, [sp, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80025cc:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80025d0:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80025d4:	f001 ffb4 	bl	8004540 <HAL_GPIO_Init>
  /* USER CODE END SDRAM_MspInit 0 */
  HAL_FMC_MspInit();
  /* USER CODE BEGIN SDRAM_MspInit 1 */

  /* USER CODE END SDRAM_MspInit 1 */
}
 80025d8:	b006      	add	sp, #24
 80025da:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80025de:	bf00      	nop
 80025e0:	20001580 	.word	0x20001580
 80025e4:	40023800 	.word	0x40023800
 80025e8:	40021400 	.word	0x40021400
 80025ec:	40020800 	.word	0x40020800
 80025f0:	40021800 	.word	0x40021800
 80025f4:	40021000 	.word	0x40021000
 80025f8:	40020c00 	.word	0x40020c00
 80025fc:	40020400 	.word	0x40020400

08002600 <HAL_TIM_Base_MspInit>:
* This function configures the hardware resources used in this example
* @param htim_base: TIM_Base handle pointer
* @retval None
*/
void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* htim_base)
{
 8002600:	b530      	push	{r4, r5, lr}
  if(htim_base->Instance==TIM2)
 8002602:	6803      	ldr	r3, [r0, #0]
 8002604:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
{
 8002608:	b085      	sub	sp, #20
 800260a:	4605      	mov	r5, r0
  if(htim_base->Instance==TIM2)
 800260c:	d12e      	bne.n	800266c <HAL_TIM_Base_MspInit+0x6c>
  {
  /* USER CODE BEGIN TIM2_MspInit 0 */

  /* USER CODE END TIM2_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_TIM2_CLK_ENABLE();
 800260e:	2300      	movs	r3, #0
 8002610:	4a57      	ldr	r2, [pc, #348]	; (8002770 <HAL_TIM_Base_MspInit+0x170>)
 8002612:	9300      	str	r3, [sp, #0]
 8002614:	6c11      	ldr	r1, [r2, #64]	; 0x40

    /* TIM2 DMA Init */
    /* TIM2_UP_CH4 Init */
    hdma_tim2_up_ch4.Instance = DMA1_Stream7;
 8002616:	4c57      	ldr	r4, [pc, #348]	; (8002774 <HAL_TIM_Base_MspInit+0x174>)
    hdma_tim2_up_ch4.Init.Channel = DMA_CHANNEL_3;
 8002618:	f8df e17c 	ldr.w	lr, [pc, #380]	; 8002798 <HAL_TIM_Base_MspInit+0x198>
    __HAL_RCC_TIM2_CLK_ENABLE();
 800261c:	f041 0101 	orr.w	r1, r1, #1
 8002620:	6411      	str	r1, [r2, #64]	; 0x40
 8002622:	6c12      	ldr	r2, [r2, #64]	; 0x40
 8002624:	f002 0201 	and.w	r2, r2, #1
 8002628:	9200      	str	r2, [sp, #0]
 800262a:	9a00      	ldr	r2, [sp, #0]
    hdma_tim2_up_ch4.Init.Channel = DMA_CHANNEL_3;
 800262c:	f04f 62c0 	mov.w	r2, #100663296	; 0x6000000
 8002630:	e9c4 e200 	strd	lr, r2, [r4]
    hdma_tim2_up_ch4.Init.Direction = DMA_MEMORY_TO_PERIPH;
 8002634:	2240      	movs	r2, #64	; 0x40
    hdma_tim2_up_ch4.Init.PeriphInc = DMA_PINC_DISABLE;
 8002636:	e9c4 2302 	strd	r2, r3, [r4, #8]
    hdma_tim2_up_ch4.Init.MemInc = DMA_MINC_ENABLE;
    hdma_tim2_up_ch4.Init.PeriphDataAlignment = DMA_PDATAALIGN_WORD;
 800263a:	f44f 6180 	mov.w	r1, #1024	; 0x400
 800263e:	f44f 5280 	mov.w	r2, #4096	; 0x1000
    hdma_tim2_up_ch4.Init.MemDataAlignment = DMA_MDATAALIGN_WORD;
    hdma_tim2_up_ch4.Init.Mode = DMA_CIRCULAR;
 8002642:	f44f 4080 	mov.w	r0, #16384	; 0x4000
    hdma_tim2_up_ch4.Init.PeriphDataAlignment = DMA_PDATAALIGN_WORD;
 8002646:	e9c4 1204 	strd	r1, r2, [r4, #16]
    hdma_tim2_up_ch4.Init.Mode = DMA_CIRCULAR;
 800264a:	f44f 7280 	mov.w	r2, #256	; 0x100
 800264e:	e9c4 0206 	strd	r0, r2, [r4, #24]
    hdma_tim2_up_ch4.Init.Priority = DMA_PRIORITY_LOW;
    hdma_tim2_up_ch4.Init.FIFOMode = DMA_FIFOMODE_DISABLE;
    if (HAL_DMA_Init(&hdma_tim2_up_ch4) != HAL_OK)
 8002652:	4620      	mov	r0, r4
    hdma_tim2_up_ch4.Init.FIFOMode = DMA_FIFOMODE_DISABLE;
 8002654:	e9c4 3308 	strd	r3, r3, [r4, #32]
    if (HAL_DMA_Init(&hdma_tim2_up_ch4) != HAL_OK)
 8002658:	f001 fca6 	bl	8003fa8 <HAL_DMA_Init>
 800265c:	b108      	cbz	r0, 8002662 <HAL_TIM_Base_MspInit+0x62>
    {
      Error_Handler();
 800265e:	f7ff fd99 	bl	8002194 <Error_Handler>
    }

    /* Several peripheral DMA handle pointers point to the same DMA handle.
     Be aware that there is only one stream to perform all the requested DMAs. */
    __HAL_LINKDMA(htim_base,hdma[TIM_DMA_ID_UPDATE],hdma_tim2_up_ch4);
 8002662:	622c      	str	r4, [r5, #32]
    __HAL_LINKDMA(htim_base,hdma[TIM_DMA_ID_CC4],hdma_tim2_up_ch4);
 8002664:	632c      	str	r4, [r5, #48]	; 0x30
    if (HAL_DMA_Init(&hdma_tim5_ch1) != HAL_OK)
    {
      Error_Handler();
    }

    __HAL_LINKDMA(htim_base,hdma[TIM_DMA_ID_CC1],hdma_tim5_ch1);
 8002666:	63a5      	str	r5, [r4, #56]	; 0x38
  /* USER CODE BEGIN TIM5_MspInit 1 */

  /* USER CODE END TIM5_MspInit 1 */
  }

}
 8002668:	b005      	add	sp, #20
 800266a:	bd30      	pop	{r4, r5, pc}
  else if(htim_base->Instance==TIM3)
 800266c:	4a42      	ldr	r2, [pc, #264]	; (8002778 <HAL_TIM_Base_MspInit+0x178>)
 800266e:	4293      	cmp	r3, r2
 8002670:	d12b      	bne.n	80026ca <HAL_TIM_Base_MspInit+0xca>
    __HAL_RCC_TIM3_CLK_ENABLE();
 8002672:	2300      	movs	r3, #0
 8002674:	f502 320d 	add.w	r2, r2, #144384	; 0x23400
 8002678:	9301      	str	r3, [sp, #4]
 800267a:	6c11      	ldr	r1, [r2, #64]	; 0x40
    hdma_tim3_ch2.Instance = DMA1_Stream5;
 800267c:	4c3f      	ldr	r4, [pc, #252]	; (800277c <HAL_TIM_Base_MspInit+0x17c>)
    __HAL_RCC_TIM3_CLK_ENABLE();
 800267e:	f041 0102 	orr.w	r1, r1, #2
 8002682:	6411      	str	r1, [r2, #64]	; 0x40
 8002684:	6c12      	ldr	r2, [r2, #64]	; 0x40
    hdma_tim3_ch2.Init.Channel = DMA_CHANNEL_5;
 8002686:	493e      	ldr	r1, [pc, #248]	; (8002780 <HAL_TIM_Base_MspInit+0x180>)
    __HAL_RCC_TIM3_CLK_ENABLE();
 8002688:	f002 0202 	and.w	r2, r2, #2
 800268c:	9201      	str	r2, [sp, #4]
 800268e:	9a01      	ldr	r2, [sp, #4]
    hdma_tim3_ch2.Init.Channel = DMA_CHANNEL_5;
 8002690:	f04f 6220 	mov.w	r2, #167772160	; 0xa000000
 8002694:	e9c4 1200 	strd	r1, r2, [r4]
    hdma_tim3_ch2.Init.Direction = DMA_MEMORY_TO_PERIPH;
 8002698:	2240      	movs	r2, #64	; 0x40
    hdma_tim3_ch2.Init.PeriphDataAlignment = DMA_PDATAALIGN_HALFWORD;
 800269a:	f44f 6080 	mov.w	r0, #1024	; 0x400
    hdma_tim3_ch2.Init.PeriphInc = DMA_PINC_DISABLE;
 800269e:	e9c4 2302 	strd	r2, r3, [r4, #8]
    hdma_tim3_ch2.Init.PeriphDataAlignment = DMA_PDATAALIGN_HALFWORD;
 80026a2:	f44f 6200 	mov.w	r2, #2048	; 0x800
 80026a6:	e9c4 0204 	strd	r0, r2, [r4, #16]
    hdma_tim3_ch2.Init.Mode = DMA_CIRCULAR;
 80026aa:	f44f 5c00 	mov.w	ip, #8192	; 0x2000
 80026ae:	f44f 7280 	mov.w	r2, #256	; 0x100
    if (HAL_DMA_Init(&hdma_tim3_ch2) != HAL_OK)
 80026b2:	4620      	mov	r0, r4
    hdma_tim3_ch2.Init.Mode = DMA_CIRCULAR;
 80026b4:	e9c4 c206 	strd	ip, r2, [r4, #24]
    hdma_tim3_ch2.Init.FIFOMode = DMA_FIFOMODE_DISABLE;
 80026b8:	e9c4 3308 	strd	r3, r3, [r4, #32]
    if (HAL_DMA_Init(&hdma_tim3_ch2) != HAL_OK)
 80026bc:	f001 fc74 	bl	8003fa8 <HAL_DMA_Init>
 80026c0:	b108      	cbz	r0, 80026c6 <HAL_TIM_Base_MspInit+0xc6>
      Error_Handler();
 80026c2:	f7ff fd67 	bl	8002194 <Error_Handler>
    __HAL_LINKDMA(htim_base,hdma[TIM_DMA_ID_CC2],hdma_tim3_ch2);
 80026c6:	62ac      	str	r4, [r5, #40]	; 0x28
 80026c8:	e7cd      	b.n	8002666 <HAL_TIM_Base_MspInit+0x66>
  else if(htim_base->Instance==TIM4)
 80026ca:	4a2e      	ldr	r2, [pc, #184]	; (8002784 <HAL_TIM_Base_MspInit+0x184>)
 80026cc:	4293      	cmp	r3, r2
 80026ce:	d12c      	bne.n	800272a <HAL_TIM_Base_MspInit+0x12a>
    __HAL_RCC_TIM4_CLK_ENABLE();
 80026d0:	f502 320c 	add.w	r2, r2, #143360	; 0x23000
 80026d4:	2300      	movs	r3, #0
 80026d6:	9302      	str	r3, [sp, #8]
 80026d8:	6c11      	ldr	r1, [r2, #64]	; 0x40
    hdma_tim4_ch1.Instance = DMA1_Stream0;
 80026da:	4c2b      	ldr	r4, [pc, #172]	; (8002788 <HAL_TIM_Base_MspInit+0x188>)
    hdma_tim4_ch1.Init.Channel = DMA_CHANNEL_2;
 80026dc:	f8df c0bc 	ldr.w	ip, [pc, #188]	; 800279c <HAL_TIM_Base_MspInit+0x19c>
    __HAL_RCC_TIM4_CLK_ENABLE();
 80026e0:	f041 0104 	orr.w	r1, r1, #4
 80026e4:	6411      	str	r1, [r2, #64]	; 0x40
 80026e6:	6c12      	ldr	r2, [r2, #64]	; 0x40
 80026e8:	f002 0204 	and.w	r2, r2, #4
 80026ec:	9202      	str	r2, [sp, #8]
 80026ee:	9a02      	ldr	r2, [sp, #8]
    hdma_tim4_ch1.Init.Channel = DMA_CHANNEL_2;
 80026f0:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 80026f4:	e9c4 c200 	strd	ip, r2, [r4]
    hdma_tim4_ch1.Init.Direction = DMA_MEMORY_TO_PERIPH;
 80026f8:	2240      	movs	r2, #64	; 0x40
    hdma_tim4_ch1.Init.PeriphInc = DMA_PINC_DISABLE;
 80026fa:	e9c4 2302 	strd	r2, r3, [r4, #8]
    hdma_tim4_ch1.Init.PeriphDataAlignment = DMA_PDATAALIGN_HALFWORD;
 80026fe:	f44f 6e80 	mov.w	lr, #1024	; 0x400
 8002702:	f44f 6200 	mov.w	r2, #2048	; 0x800
 8002706:	e9c4 e204 	strd	lr, r2, [r4, #16]
    hdma_tim4_ch1.Init.MemDataAlignment = DMA_MDATAALIGN_HALFWORD;
 800270a:	f44f 5200 	mov.w	r2, #8192	; 0x2000
    hdma_tim5_ch1.Init.MemDataAlignment = DMA_MDATAALIGN_WORD;
 800270e:	61a2      	str	r2, [r4, #24]
    hdma_tim5_ch1.Init.Mode = DMA_CIRCULAR;
 8002710:	f44f 7280 	mov.w	r2, #256	; 0x100
    hdma_tim5_ch1.Init.Priority = DMA_PRIORITY_LOW;
 8002714:	e9c4 2307 	strd	r2, r3, [r4, #28]
    hdma_tim5_ch1.Init.FIFOMode = DMA_FIFOMODE_DISABLE;
 8002718:	6263      	str	r3, [r4, #36]	; 0x24
    if (HAL_DMA_Init(&hdma_tim5_ch1) != HAL_OK)
 800271a:	4620      	mov	r0, r4
 800271c:	f001 fc44 	bl	8003fa8 <HAL_DMA_Init>
 8002720:	b108      	cbz	r0, 8002726 <HAL_TIM_Base_MspInit+0x126>
      Error_Handler();
 8002722:	f7ff fd37 	bl	8002194 <Error_Handler>
    __HAL_LINKDMA(htim_base,hdma[TIM_DMA_ID_CC1],hdma_tim5_ch1);
 8002726:	626c      	str	r4, [r5, #36]	; 0x24
 8002728:	e79d      	b.n	8002666 <HAL_TIM_Base_MspInit+0x66>
  else if(htim_base->Instance==TIM5)
 800272a:	4a18      	ldr	r2, [pc, #96]	; (800278c <HAL_TIM_Base_MspInit+0x18c>)
 800272c:	4293      	cmp	r3, r2
 800272e:	d19b      	bne.n	8002668 <HAL_TIM_Base_MspInit+0x68>
    __HAL_RCC_TIM5_CLK_ENABLE();
 8002730:	f502 320b 	add.w	r2, r2, #142336	; 0x22c00
 8002734:	2300      	movs	r3, #0
 8002736:	9303      	str	r3, [sp, #12]
 8002738:	6c11      	ldr	r1, [r2, #64]	; 0x40
    hdma_tim5_ch1.Instance = DMA1_Stream2;
 800273a:	4c15      	ldr	r4, [pc, #84]	; (8002790 <HAL_TIM_Base_MspInit+0x190>)
    __HAL_RCC_TIM5_CLK_ENABLE();
 800273c:	f041 0108 	orr.w	r1, r1, #8
 8002740:	6411      	str	r1, [r2, #64]	; 0x40
 8002742:	6c12      	ldr	r2, [r2, #64]	; 0x40
    hdma_tim5_ch1.Init.Channel = DMA_CHANNEL_6;
 8002744:	4913      	ldr	r1, [pc, #76]	; (8002794 <HAL_TIM_Base_MspInit+0x194>)
    __HAL_RCC_TIM5_CLK_ENABLE();
 8002746:	f002 0208 	and.w	r2, r2, #8
 800274a:	9203      	str	r2, [sp, #12]
 800274c:	9a03      	ldr	r2, [sp, #12]
    hdma_tim5_ch1.Init.Channel = DMA_CHANNEL_6;
 800274e:	f04f 6240 	mov.w	r2, #201326592	; 0xc000000
 8002752:	e9c4 1200 	strd	r1, r2, [r4]
    hdma_tim5_ch1.Init.Direction = DMA_MEMORY_TO_PERIPH;
 8002756:	2240      	movs	r2, #64	; 0x40
    hdma_tim5_ch1.Init.PeriphInc = DMA_PINC_DISABLE;
 8002758:	e9c4 2302 	strd	r2, r3, [r4, #8]
    hdma_tim5_ch1.Init.PeriphDataAlignment = DMA_PDATAALIGN_WORD;
 800275c:	f44f 6080 	mov.w	r0, #1024	; 0x400
 8002760:	f44f 5280 	mov.w	r2, #4096	; 0x1000
 8002764:	e9c4 0204 	strd	r0, r2, [r4, #16]
    hdma_tim5_ch1.Init.MemDataAlignment = DMA_MDATAALIGN_WORD;
 8002768:	f44f 4280 	mov.w	r2, #16384	; 0x4000
 800276c:	e7cf      	b.n	800270e <HAL_TIM_Base_MspInit+0x10e>
 800276e:	bf00      	nop
 8002770:	40023800 	.word	0x40023800
 8002774:	200125f4 	.word	0x200125f4
 8002778:	40000400 	.word	0x40000400
 800277c:	20012930 	.word	0x20012930
 8002780:	40026088 	.word	0x40026088
 8002784:	40000800 	.word	0x40000800
 8002788:	20012a14 	.word	0x20012a14
 800278c:	40000c00 	.word	0x40000c00
 8002790:	200128d0 	.word	0x200128d0
 8002794:	40026040 	.word	0x40026040
 8002798:	400260b8 	.word	0x400260b8
 800279c:	40026010 	.word	0x40026010

080027a0 <HAL_TIM_MspPostInit>:

void HAL_TIM_MspPostInit(TIM_HandleTypeDef* htim)
{
 80027a0:	b510      	push	{r4, lr}
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80027a2:	2214      	movs	r2, #20
{
 80027a4:	b08a      	sub	sp, #40	; 0x28
 80027a6:	4604      	mov	r4, r0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80027a8:	2100      	movs	r1, #0
 80027aa:	eb0d 0002 	add.w	r0, sp, r2
 80027ae:	f016 ff6e 	bl	801968e <memset>
  if(htim->Instance==TIM2)
 80027b2:	6823      	ldr	r3, [r4, #0]
 80027b4:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 80027b8:	d114      	bne.n	80027e4 <HAL_TIM_MspPostInit+0x44>
  {
  /* USER CODE BEGIN TIM2_MspPostInit 0 */

  /* USER CODE END TIM2_MspPostInit 0 */
    __HAL_RCC_GPIOA_CLK_ENABLE();
 80027ba:	2300      	movs	r3, #0
 80027bc:	9301      	str	r3, [sp, #4]
 80027be:	4b29      	ldr	r3, [pc, #164]	; (8002864 <HAL_TIM_MspPostInit+0xc4>)
 80027c0:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80027c2:	f042 0201 	orr.w	r2, r2, #1
 80027c6:	631a      	str	r2, [r3, #48]	; 0x30
 80027c8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80027ca:	f003 0301 	and.w	r3, r3, #1
 80027ce:	9301      	str	r3, [sp, #4]
 80027d0:	9b01      	ldr	r3, [sp, #4]
    /**TIM2 GPIO Configuration
    PA3     ------> TIM2_CH4
    */
    GPIO_InitStruct.Pin = xAxisPWM_Pin;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80027d2:	2108      	movs	r1, #8
 80027d4:	2302      	movs	r3, #2
 80027d6:	e9cd 1305 	strd	r1, r3, [sp, #20]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
    GPIO_InitStruct.Alternate = GPIO_AF1_TIM2;
 80027da:	2301      	movs	r3, #1
    */
    GPIO_InitStruct.Pin = manipulatorPWM_Pin;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
    GPIO_InitStruct.Alternate = GPIO_AF2_TIM5;
 80027dc:	9309      	str	r3, [sp, #36]	; 0x24
    HAL_GPIO_Init(manipulatorPWM_GPIO_Port, &GPIO_InitStruct);
 80027de:	a905      	add	r1, sp, #20
 80027e0:	4821      	ldr	r0, [pc, #132]	; (8002868 <HAL_TIM_MspPostInit+0xc8>)
 80027e2:	e02a      	b.n	800283a <HAL_TIM_MspPostInit+0x9a>
  else if(htim->Instance==TIM3)
 80027e4:	4a21      	ldr	r2, [pc, #132]	; (800286c <HAL_TIM_MspPostInit+0xcc>)
 80027e6:	4293      	cmp	r3, r2
 80027e8:	d110      	bne.n	800280c <HAL_TIM_MspPostInit+0x6c>
    __HAL_RCC_GPIOA_CLK_ENABLE();
 80027ea:	2300      	movs	r3, #0
 80027ec:	9302      	str	r3, [sp, #8]
 80027ee:	4b1d      	ldr	r3, [pc, #116]	; (8002864 <HAL_TIM_MspPostInit+0xc4>)
 80027f0:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80027f2:	f042 0201 	orr.w	r2, r2, #1
 80027f6:	631a      	str	r2, [r3, #48]	; 0x30
 80027f8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80027fa:	f003 0301 	and.w	r3, r3, #1
 80027fe:	9302      	str	r3, [sp, #8]
 8002800:	9b02      	ldr	r3, [sp, #8]
    GPIO_InitStruct.Pin = yAxisPWM_L_Pin;
 8002802:	2380      	movs	r3, #128	; 0x80
    GPIO_InitStruct.Pin = manipulatorPWM_Pin;
 8002804:	9305      	str	r3, [sp, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002806:	2302      	movs	r3, #2
 8002808:	9306      	str	r3, [sp, #24]
 800280a:	e7e7      	b.n	80027dc <HAL_TIM_MspPostInit+0x3c>
  else if(htim->Instance==TIM4)
 800280c:	4a18      	ldr	r2, [pc, #96]	; (8002870 <HAL_TIM_MspPostInit+0xd0>)
 800280e:	4293      	cmp	r3, r2
 8002810:	d117      	bne.n	8002842 <HAL_TIM_MspPostInit+0xa2>
    __HAL_RCC_GPIOD_CLK_ENABLE();
 8002812:	2300      	movs	r3, #0
 8002814:	9303      	str	r3, [sp, #12]
 8002816:	4b13      	ldr	r3, [pc, #76]	; (8002864 <HAL_TIM_MspPostInit+0xc4>)
    HAL_GPIO_Init(yAxisPWM_R_GPIO_Port, &GPIO_InitStruct);
 8002818:	4816      	ldr	r0, [pc, #88]	; (8002874 <HAL_TIM_MspPostInit+0xd4>)
    __HAL_RCC_GPIOD_CLK_ENABLE();
 800281a:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800281c:	f042 0208 	orr.w	r2, r2, #8
 8002820:	631a      	str	r2, [r3, #48]	; 0x30
 8002822:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002824:	f003 0308 	and.w	r3, r3, #8
 8002828:	9303      	str	r3, [sp, #12]
 800282a:	9b03      	ldr	r3, [sp, #12]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800282c:	f44f 5280 	mov.w	r2, #4096	; 0x1000
 8002830:	2302      	movs	r3, #2
 8002832:	e9cd 2305 	strd	r2, r3, [sp, #20]
    GPIO_InitStruct.Alternate = GPIO_AF2_TIM4;
 8002836:	9309      	str	r3, [sp, #36]	; 0x24
    HAL_GPIO_Init(yAxisPWM_R_GPIO_Port, &GPIO_InitStruct);
 8002838:	a905      	add	r1, sp, #20
    HAL_GPIO_Init(manipulatorPWM_GPIO_Port, &GPIO_InitStruct);
 800283a:	f001 fe81 	bl	8004540 <HAL_GPIO_Init>
  /* USER CODE BEGIN TIM5_MspPostInit 1 */

  /* USER CODE END TIM5_MspPostInit 1 */
  }

}
 800283e:	b00a      	add	sp, #40	; 0x28
 8002840:	bd10      	pop	{r4, pc}
  else if(htim->Instance==TIM5)
 8002842:	4a0d      	ldr	r2, [pc, #52]	; (8002878 <HAL_TIM_MspPostInit+0xd8>)
 8002844:	4293      	cmp	r3, r2
 8002846:	d1fa      	bne.n	800283e <HAL_TIM_MspPostInit+0x9e>
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8002848:	2300      	movs	r3, #0
 800284a:	9304      	str	r3, [sp, #16]
 800284c:	4b05      	ldr	r3, [pc, #20]	; (8002864 <HAL_TIM_MspPostInit+0xc4>)
 800284e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8002850:	f042 0201 	orr.w	r2, r2, #1
 8002854:	631a      	str	r2, [r3, #48]	; 0x30
 8002856:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002858:	f003 0301 	and.w	r3, r3, #1
 800285c:	9304      	str	r3, [sp, #16]
 800285e:	9b04      	ldr	r3, [sp, #16]
    GPIO_InitStruct.Pin = manipulatorPWM_Pin;
 8002860:	2301      	movs	r3, #1
 8002862:	e7cf      	b.n	8002804 <HAL_TIM_MspPostInit+0x64>
 8002864:	40023800 	.word	0x40023800
 8002868:	40020000 	.word	0x40020000
 800286c:	40000400 	.word	0x40000400
 8002870:	40000800 	.word	0x40000800
 8002874:	40020c00 	.word	0x40020c00
 8002878:	40000c00 	.word	0x40000c00

0800287c <HAL_InitTick>:
  *         reset by HAL_Init() or at any time when clock is configured, by HAL_RCC_ClockConfig(). 
  * @param  TickPriority: Tick interrupt priority.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 800287c:	b530      	push	{r4, r5, lr}
  uint32_t              uwTimclock = 0;
  uint32_t              uwPrescalerValue = 0;
  uint32_t              pFLatency;
  
  /*Configure the TIM6 IRQ priority */
  HAL_NVIC_SetPriority(TIM6_DAC_IRQn, TickPriority ,0); 
 800287e:	4601      	mov	r1, r0
{
 8002880:	b089      	sub	sp, #36	; 0x24
  HAL_NVIC_SetPriority(TIM6_DAC_IRQn, TickPriority ,0); 
 8002882:	2200      	movs	r2, #0
 8002884:	2036      	movs	r0, #54	; 0x36
 8002886:	f001 fb13 	bl	8003eb0 <HAL_NVIC_SetPriority>
  
  /* Enable the TIM6 global Interrupt */
  HAL_NVIC_EnableIRQ(TIM6_DAC_IRQn); 
 800288a:	2036      	movs	r0, #54	; 0x36
 800288c:	f001 fb44 	bl	8003f18 <HAL_NVIC_EnableIRQ>
  
  /* Enable TIM6 clock */
  __HAL_RCC_TIM6_CLK_ENABLE();
 8002890:	2500      	movs	r5, #0
 8002892:	4b15      	ldr	r3, [pc, #84]	; (80028e8 <HAL_InitTick+0x6c>)
 8002894:	9502      	str	r5, [sp, #8]
 8002896:	6c1a      	ldr	r2, [r3, #64]	; 0x40
   
  /* Compute the prescaler value to have TIM6 counter clock equal to 1MHz */
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000) - 1);
  
  /* Initialize TIM6 */
  htim6.Instance = TIM6;
 8002898:	4c14      	ldr	r4, [pc, #80]	; (80028ec <HAL_InitTick+0x70>)
  __HAL_RCC_TIM6_CLK_ENABLE();
 800289a:	f042 0210 	orr.w	r2, r2, #16
 800289e:	641a      	str	r2, [r3, #64]	; 0x40
 80028a0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80028a2:	f003 0310 	and.w	r3, r3, #16
 80028a6:	9302      	str	r3, [sp, #8]
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 80028a8:	a901      	add	r1, sp, #4
 80028aa:	a803      	add	r0, sp, #12
  __HAL_RCC_TIM6_CLK_ENABLE();
 80028ac:	9b02      	ldr	r3, [sp, #8]
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 80028ae:	f002 ffa9 	bl	8005804 <HAL_RCC_GetClockConfig>
  uwTimclock = 2*HAL_RCC_GetPCLK1Freq();
 80028b2:	f002 ff97 	bl	80057e4 <HAL_RCC_GetPCLK1Freq>
  htim6.Instance = TIM6;
 80028b6:	4b0e      	ldr	r3, [pc, #56]	; (80028f0 <HAL_InitTick+0x74>)
 80028b8:	6023      	str	r3, [r4, #0]
  + Period = [(TIM6CLK/1000) - 1]. to have a (1/1000) s time base.
  + Prescaler = (uwTimclock/1000000 - 1) to have a 1MHz counter clock.
  + ClockDivision = 0
  + Counter direction = Up
  */
  htim6.Init.Period = (1000000 / 1000) - 1;
 80028ba:	f240 33e7 	movw	r3, #999	; 0x3e7
 80028be:	60e3      	str	r3, [r4, #12]
  uwTimclock = 2*HAL_RCC_GetPCLK1Freq();
 80028c0:	0040      	lsls	r0, r0, #1
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000) - 1);
 80028c2:	4b0c      	ldr	r3, [pc, #48]	; (80028f4 <HAL_InitTick+0x78>)
 80028c4:	fbb0 f0f3 	udiv	r0, r0, r3
 80028c8:	3801      	subs	r0, #1
  htim6.Init.Prescaler = uwPrescalerValue;
 80028ca:	6060      	str	r0, [r4, #4]
  htim6.Init.ClockDivision = 0;
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
  if(HAL_TIM_Base_Init(&htim6) == HAL_OK)
 80028cc:	4620      	mov	r0, r4
  htim6.Init.ClockDivision = 0;
 80028ce:	6125      	str	r5, [r4, #16]
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
 80028d0:	60a5      	str	r5, [r4, #8]
  if(HAL_TIM_Base_Init(&htim6) == HAL_OK)
 80028d2:	f003 fe17 	bl	8006504 <HAL_TIM_Base_Init>
 80028d6:	b920      	cbnz	r0, 80028e2 <HAL_InitTick+0x66>
  {
    /* Start the TIM time Base generation in interrupt mode */
    return HAL_TIM_Base_Start_IT(&htim6);
 80028d8:	4620      	mov	r0, r4
 80028da:	f003 fcaf 	bl	800623c <HAL_TIM_Base_Start_IT>
  }
  
  /* Return function status */
  return HAL_ERROR;
}
 80028de:	b009      	add	sp, #36	; 0x24
 80028e0:	bd30      	pop	{r4, r5, pc}
  return HAL_ERROR;
 80028e2:	2001      	movs	r0, #1
 80028e4:	e7fb      	b.n	80028de <HAL_InitTick+0x62>
 80028e6:	bf00      	nop
 80028e8:	40023800 	.word	0x40023800
 80028ec:	20012aa8 	.word	0x20012aa8
 80028f0:	40001000 	.word	0x40001000
 80028f4:	000f4240 	.word	0x000f4240

080028f8 <NMI_Handler>:

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */

  /* USER CODE END NonMaskableInt_IRQn 1 */
}
 80028f8:	4770      	bx	lr

080028fa <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 80028fa:	e7fe      	b.n	80028fa <HardFault_Handler>

080028fc <MemManage_Handler>:

/**
  * @brief This function handles Memory management fault.
  */
void MemManage_Handler(void)
{
 80028fc:	e7fe      	b.n	80028fc <MemManage_Handler>

080028fe <BusFault_Handler>:

/**
  * @brief This function handles Pre-fetch fault, memory access fault.
  */
void BusFault_Handler(void)
{
 80028fe:	e7fe      	b.n	80028fe <BusFault_Handler>

08002900 <UsageFault_Handler>:

/**
  * @brief This function handles Undefined instruction or illegal state.
  */
void UsageFault_Handler(void)
{
 8002900:	e7fe      	b.n	8002900 <UsageFault_Handler>

08002902 <DebugMon_Handler>:
 8002902:	4770      	bx	lr

08002904 <TIM6_DAC_IRQHandler>:
void TIM6_DAC_IRQHandler(void)
{
  /* USER CODE BEGIN TIM6_DAC_IRQn 0 */

  /* USER CODE END TIM6_DAC_IRQn 0 */
  HAL_TIM_IRQHandler(&htim6);
 8002904:	4801      	ldr	r0, [pc, #4]	; (800290c <TIM6_DAC_IRQHandler+0x8>)
 8002906:	f003 bceb 	b.w	80062e0 <HAL_TIM_IRQHandler>
 800290a:	bf00      	nop
 800290c:	20012aa8 	.word	0x20012aa8

08002910 <LTDC_IRQHandler>:
void LTDC_IRQHandler(void)
{
  /* USER CODE BEGIN LTDC_IRQn 0 */

  /* USER CODE END LTDC_IRQn 0 */
  HAL_LTDC_IRQHandler(&hltdc);
 8002910:	4801      	ldr	r0, [pc, #4]	; (8002918 <LTDC_IRQHandler+0x8>)
 8002912:	f002 bc55 	b.w	80051c0 <HAL_LTDC_IRQHandler>
 8002916:	bf00      	nop
 8002918:	20012828 	.word	0x20012828

0800291c <DMA2D_IRQHandler>:
void DMA2D_IRQHandler(void)
{
  /* USER CODE BEGIN DMA2D_IRQn 0 */

  /* USER CODE END DMA2D_IRQn 0 */
  HAL_DMA2D_IRQHandler(&hdma2d);
 800291c:	4801      	ldr	r0, [pc, #4]	; (8002924 <DMA2D_IRQHandler+0x8>)
 800291e:	f001 bd3b 	b.w	8004398 <HAL_DMA2D_IRQHandler>
 8002922:	bf00      	nop
 8002924:	20012994 	.word	0x20012994

08002928 <_getpid>:
}

int _getpid(void)
{
	return 1;
}
 8002928:	2001      	movs	r0, #1
 800292a:	4770      	bx	lr

0800292c <_kill>:

int _kill(int pid, int sig)
{
 800292c:	b508      	push	{r3, lr}
	errno = EINVAL;
 800292e:	f016 fe57 	bl	80195e0 <__errno>
 8002932:	2316      	movs	r3, #22
 8002934:	6003      	str	r3, [r0, #0]
	return -1;
}
 8002936:	f04f 30ff 	mov.w	r0, #4294967295
 800293a:	bd08      	pop	{r3, pc}

0800293c <_exit>:

void _exit (int status)
{
 800293c:	b508      	push	{r3, lr}
	errno = EINVAL;
 800293e:	f016 fe4f 	bl	80195e0 <__errno>
 8002942:	2316      	movs	r3, #22
 8002944:	6003      	str	r3, [r0, #0]
 8002946:	e7fe      	b.n	8002946 <_exit+0xa>

08002948 <_read>:
	_kill(status, -1);
	while (1) {}		/* Make sure we hang here */
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8002948:	b570      	push	{r4, r5, r6, lr}
 800294a:	460e      	mov	r6, r1
 800294c:	4615      	mov	r5, r2
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800294e:	460c      	mov	r4, r1
 8002950:	1ba3      	subs	r3, r4, r6
 8002952:	429d      	cmp	r5, r3
 8002954:	dc01      	bgt.n	800295a <_read+0x12>
	{
		*ptr++ = __io_getchar();
	}

return len;
}
 8002956:	4628      	mov	r0, r5
 8002958:	bd70      	pop	{r4, r5, r6, pc}
		*ptr++ = __io_getchar();
 800295a:	f3af 8000 	nop.w
 800295e:	f804 0b01 	strb.w	r0, [r4], #1
 8002962:	e7f5      	b.n	8002950 <_read+0x8>

08002964 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8002964:	b570      	push	{r4, r5, r6, lr}
 8002966:	460e      	mov	r6, r1
 8002968:	4615      	mov	r5, r2
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800296a:	460c      	mov	r4, r1
 800296c:	1ba3      	subs	r3, r4, r6
 800296e:	429d      	cmp	r5, r3
 8002970:	dc01      	bgt.n	8002976 <_write+0x12>
	{
		__io_putchar(*ptr++);
	}
	return len;
}
 8002972:	4628      	mov	r0, r5
 8002974:	bd70      	pop	{r4, r5, r6, pc}
		__io_putchar(*ptr++);
 8002976:	f814 0b01 	ldrb.w	r0, [r4], #1
 800297a:	f3af 8000 	nop.w
 800297e:	e7f5      	b.n	800296c <_write+0x8>

08002980 <_close>:

int _close(int file)
{
	return -1;
}
 8002980:	f04f 30ff 	mov.w	r0, #4294967295
 8002984:	4770      	bx	lr

08002986 <_fstat>:


int _fstat(int file, struct stat *st)
{
	st->st_mode = S_IFCHR;
 8002986:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 800298a:	604b      	str	r3, [r1, #4]
	return 0;
}
 800298c:	2000      	movs	r0, #0
 800298e:	4770      	bx	lr

08002990 <_isatty>:

int _isatty(int file)
{
	return 1;
}
 8002990:	2001      	movs	r0, #1
 8002992:	4770      	bx	lr

08002994 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
	return 0;
}
 8002994:	2000      	movs	r0, #0
 8002996:	4770      	bx	lr

08002998 <_sbrk>:
/**
 _sbrk
 Increase program data space. Malloc and related functions depend on this
**/
caddr_t _sbrk(int incr)
{
 8002998:	b508      	push	{r3, lr}
	extern char end asm("end");
	static char *heap_end;
	char *prev_heap_end;

	if (heap_end == 0)
 800299a:	4b0a      	ldr	r3, [pc, #40]	; (80029c4 <_sbrk+0x2c>)
 800299c:	6819      	ldr	r1, [r3, #0]
{
 800299e:	4602      	mov	r2, r0
	if (heap_end == 0)
 80029a0:	b909      	cbnz	r1, 80029a6 <_sbrk+0xe>
		heap_end = &end;
 80029a2:	4909      	ldr	r1, [pc, #36]	; (80029c8 <_sbrk+0x30>)
 80029a4:	6019      	str	r1, [r3, #0]

	prev_heap_end = heap_end;
 80029a6:	6818      	ldr	r0, [r3, #0]
	if (heap_end + incr > stack_ptr)
 80029a8:	4669      	mov	r1, sp
 80029aa:	4402      	add	r2, r0
 80029ac:	428a      	cmp	r2, r1
 80029ae:	d906      	bls.n	80029be <_sbrk+0x26>
	{
		errno = ENOMEM;
 80029b0:	f016 fe16 	bl	80195e0 <__errno>
 80029b4:	230c      	movs	r3, #12
 80029b6:	6003      	str	r3, [r0, #0]
		return (caddr_t) -1;
 80029b8:	f04f 30ff 	mov.w	r0, #4294967295
	}

	heap_end += incr;

	return (caddr_t) prev_heap_end;
}
 80029bc:	bd08      	pop	{r3, pc}
	heap_end += incr;
 80029be:	601a      	str	r2, [r3, #0]
	return (caddr_t) prev_heap_end;
 80029c0:	e7fc      	b.n	80029bc <_sbrk+0x24>
 80029c2:	bf00      	nop
 80029c4:	20001584 	.word	0x20001584
 80029c8:	20012b30 	.word	0x20012b30

080029cc <_ZN23ApplicationFontProviderD1Ev>:
    static const touchgfx::FontId LARGE = 1;   // verdana_40_4bpp
    static const touchgfx::FontId SMALL = 2;   // verdana_10_4bpp
    static const uint16_t NUMBER_OF_FONTS = 3;
};

class ApplicationFontProvider : public touchgfx::FontProvider
 80029cc:	4770      	bx	lr

080029ce <_ZN23ApplicationFontProviderD0Ev>:
 80029ce:	b510      	push	{r4, lr}
 80029d0:	2104      	movs	r1, #4
 80029d2:	4604      	mov	r4, r0
 80029d4:	f016 fda6 	bl	8019524 <_ZdlPvj>
 80029d8:	4620      	mov	r0, r4
 80029da:	bd10      	pop	{r4, pc}

080029dc <_ZN23ApplicationFontProvider7getFontEt>:
#include <fonts/GeneratedFont.hpp>
#include <texts/TypedTextDatabase.hpp>

touchgfx::Font* ApplicationFontProvider::getFont(touchgfx::FontId typography)
{
    switch (typography)
 80029dc:	2901      	cmp	r1, #1
{
 80029de:	b508      	push	{r3, lr}
    switch (typography)
 80029e0:	d008      	beq.n	80029f4 <_ZN23ApplicationFontProvider7getFontEt+0x18>
 80029e2:	d303      	bcc.n	80029ec <_ZN23ApplicationFontProvider7getFontEt+0x10>
 80029e4:	2902      	cmp	r1, #2
 80029e6:	d009      	beq.n	80029fc <_ZN23ApplicationFontProvider7getFontEt+0x20>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[1]);
    case Typography::SMALL:
        // verdana_10_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
    default:
        return 0;
 80029e8:	2000      	movs	r0, #0
 80029ea:	e002      	b.n	80029f2 <_ZN23ApplicationFontProvider7getFontEt+0x16>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[0]);
 80029ec:	f000 fb52 	bl	8003094 <_ZN17TypedTextDatabase8getFontsEv>
 80029f0:	6800      	ldr	r0, [r0, #0]
    }
}
 80029f2:	bd08      	pop	{r3, pc}
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[1]);
 80029f4:	f000 fb4e 	bl	8003094 <_ZN17TypedTextDatabase8getFontsEv>
 80029f8:	6840      	ldr	r0, [r0, #4]
 80029fa:	e7fa      	b.n	80029f2 <_ZN23ApplicationFontProvider7getFontEt+0x16>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
 80029fc:	f000 fb4a 	bl	8003094 <_ZN17TypedTextDatabase8getFontsEv>
 8002a00:	6880      	ldr	r0, [r0, #8]
 8002a02:	e7f6      	b.n	80029f2 <_ZN23ApplicationFontProvider7getFontEt+0x16>

08002a04 <_ZN14BitmapDatabase11getInstanceEv>:
namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance()
{
    return bitmap_database;
}
 8002a04:	4800      	ldr	r0, [pc, #0]	; (8002a08 <_ZN14BitmapDatabase11getInstanceEv+0x4>)
 8002a06:	4770      	bx	lr
 8002a08:	0801ab18 	.word	0x0801ab18

08002a0c <_ZN14BitmapDatabase15getInstanceSizeEv>:

uint16_t getInstanceSize()
{
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
}
 8002a0c:	2007      	movs	r0, #7
 8002a0e:	4770      	bx	lr

08002a10 <_ZNK8touchgfx4Font8getGlyphEt>:
     *
     * @return A pointer to the glyph node or null if the glyph was not found.
     *
     * @see TextProvider::getNextLigature
     */
    virtual const GlyphNode* getGlyph(Unicode::UnicodeChar unicode) const
 8002a10:	b513      	push	{r0, r1, r4, lr}
 8002a12:	2200      	movs	r2, #0
    {
        if (unicode == 0)
 8002a14:	b149      	cbz	r1, 8002a2a <_ZNK8touchgfx4Font8getGlyphEt+0x1a>
        {
            return 0;
        }
        const uint8_t* dummyPixelDataPointer = 0;
        uint8_t bitsPerPixelDummy = 0;
 8002a16:	ab02      	add	r3, sp, #8
        const uint8_t* dummyPixelDataPointer = 0;
 8002a18:	9201      	str	r2, [sp, #4]
        uint8_t bitsPerPixelDummy = 0;
 8002a1a:	f803 2d05 	strb.w	r2, [r3, #-5]!
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 8002a1e:	6802      	ldr	r2, [r0, #0]
 8002a20:	6894      	ldr	r4, [r2, #8]
 8002a22:	aa01      	add	r2, sp, #4
 8002a24:	47a0      	blx	r4
        return glyph;
    }
 8002a26:	b002      	add	sp, #8
 8002a28:	bd10      	pop	{r4, pc}
            return 0;
 8002a2a:	4608      	mov	r0, r1
 8002a2c:	e7fb      	b.n	8002a26 <_ZNK8touchgfx4Font8getGlyphEt+0x16>

08002a2e <_ZNK8touchgfx4Font15getFallbackCharEv>:
     * @return The default character for the typography in case no glyph is available.
     */
    virtual Unicode::UnicodeChar getFallbackChar() const
    {
        return fallbackCharacter;
    }
 8002a2e:	8940      	ldrh	r0, [r0, #10]
 8002a30:	4770      	bx	lr

08002a32 <_ZNK8touchgfx4Font15getEllipsisCharEv>:
     * @see TextArea::setWideTextAction
     */
    virtual Unicode::UnicodeChar getEllipsisChar() const
    {
        return ellipsisCharacter;
    }
 8002a32:	8980      	ldrh	r0, [r0, #12]
 8002a34:	4770      	bx	lr

08002a36 <_ZNK8touchgfx4Font13getFontHeightEv>:
     *       getMinimumTextHeight for this.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getFontHeight() const
    {
        return fontHeight;
    }
 8002a36:	8880      	ldrh	r0, [r0, #4]
 8002a38:	4770      	bx	lr

08002a3a <_ZNK8touchgfx4Font20getMinimumTextHeightEv>:
     *
     * @return The minimum height needed for a text field that uses this font.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getMinimumTextHeight() const
    {
        return fontHeight + pixelsBelowBaseline;
 8002a3a:	7983      	ldrb	r3, [r0, #6]
 8002a3c:	8880      	ldrh	r0, [r0, #4]
 8002a3e:	4418      	add	r0, r3
    }
 8002a40:	b280      	uxth	r0, r0
 8002a42:	4770      	bx	lr

08002a44 <_ZNK8touchgfx4Font15getBitsPerPixelEv>:
     *
     * @return The number of bits used per pixel in this font.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getBitsPerPixel() const
    {
        return bPerPixel;
 8002a44:	79c0      	ldrb	r0, [r0, #7]
    }
 8002a46:	f000 007f 	and.w	r0, r0, #127	; 0x7f
 8002a4a:	4770      	bx	lr

08002a4c <_ZNK8touchgfx4Font15getByteAlignRowEv>:
     *
     * @return True if each glyph row is stored byte aligned, false otherwise.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getByteAlignRow() const
    {
        return bAlignRow;
 8002a4c:	79c0      	ldrb	r0, [r0, #7]
    }
 8002a4e:	09c0      	lsrs	r0, r0, #7
 8002a50:	4770      	bx	lr

08002a52 <_ZN8touchgfx9TypedTextD1Ev>:
    }
 8002a52:	4770      	bx	lr

08002a54 <_ZN8touchgfx9TypedTextD0Ev>:
    virtual ~TypedText()
 8002a54:	b510      	push	{r4, lr}
    }
 8002a56:	2108      	movs	r1, #8
    virtual ~TypedText()
 8002a58:	4604      	mov	r4, r0
    }
 8002a5a:	f016 fd63 	bl	8019524 <_ZdlPvj>
 8002a5e:	4620      	mov	r0, r4
 8002a60:	bd10      	pop	{r4, pc}

08002a62 <_ZN8touchgfx11Application15appSwitchScreenEh>:
     *
     * @param screenId An id that maps to the desired screen.
     */
    virtual void appSwitchScreen(uint8_t screenId)
    {
    }
 8002a62:	4770      	bx	lr

08002a64 <_ZN8touchgfx11Application13requestRedrawERNS_4RectE>:
     *
     * @param [in,out] rect The Rect that must be redrawn.
     */
    virtual void requestRedraw(Rect& rect)
    {
        redraw = rect;
 8002a64:	f500 7396 	add.w	r3, r0, #300	; 0x12c
 8002a68:	6808      	ldr	r0, [r1, #0]
 8002a6a:	6849      	ldr	r1, [r1, #4]
 8002a6c:	c303      	stmia	r3!, {r0, r1}
    };
 8002a6e:	4770      	bx	lr

08002a70 <_ZN8touchgfx10Transition8tearDownEv>:
     * Tears down the Animation. Called before the destructor is called, when the
     * application changes the transition.
     */
    virtual void tearDown()
    {
    }
 8002a70:	4770      	bx	lr

08002a72 <_ZN8touchgfx10Transition4initEv>:
     * Initializes the transition. Called after the constructor is called, when the
     * application changes the transition.
     */
    virtual void init()
    {
    }
 8002a72:	4770      	bx	lr

08002a74 <_ZN8touchgfx10Transition18setScreenContainerERNS_9ContainerE>:
     *
     * @param [in] cont The Container the transition should have access to.
     */
    virtual void setScreenContainer(Container& cont)
    {
        screenContainer = &cont;
 8002a74:	6041      	str	r1, [r0, #4]
    }
 8002a76:	4770      	bx	lr

08002a78 <_ZN23FrontendApplicationBaseD1Ev>:

class FrontendApplicationBase : public touchgfx::MVPApplication
{
public:
    FrontendApplicationBase(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplicationBase() { }
 8002a78:	4770      	bx	lr

08002a7a <_ZN8touchgfx12NoTransition15handleTickEventEv>:
{
public:
    /** Indicates that the transition is done after the first tick. */
    virtual void handleTickEvent()
    {
        done = true;
 8002a7a:	2301      	movs	r3, #1
 8002a7c:	7203      	strb	r3, [r0, #8]
    }
 8002a7e:	4770      	bx	lr

08002a80 <_ZN8touchgfx12NoTransitionD1Ev>:
class NoTransition : public Transition
 8002a80:	4770      	bx	lr

08002a82 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>:
 *
 * @note The member function to call must return void. The function can have zero, one, two or
 *       three arguments of any type.
 */
template <class dest_type>
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8002a82:	4770      	bx	lr

08002a84 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv>:

    /**
     * Calls the member function. Do not call execute unless isValid() returns true (ie. a
     * pointer to the object and the function has been set).
     */
    virtual void execute()
 8002a84:	b410      	push	{r4}
    {
        (pobject->*pmemfun_0)();
 8002a86:	68c4      	ldr	r4, [r0, #12]
 8002a88:	6841      	ldr	r1, [r0, #4]
 8002a8a:	1062      	asrs	r2, r4, #1
    virtual void execute()
 8002a8c:	4603      	mov	r3, r0
        (pobject->*pmemfun_0)();
 8002a8e:	07e4      	lsls	r4, r4, #31
 8002a90:	eb01 0002 	add.w	r0, r1, r2
 8002a94:	689b      	ldr	r3, [r3, #8]
 8002a96:	bf48      	it	mi
 8002a98:	588a      	ldrmi	r2, [r1, r2]
    }
 8002a9a:	f85d 4b04 	ldr.w	r4, [sp], #4
        (pobject->*pmemfun_0)();
 8002a9e:	bf48      	it	mi
 8002aa0:	58d3      	ldrmi	r3, [r2, r3]
 8002aa2:	4718      	bx	r3

08002aa4 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv>:
     *
     * @return true If the callback is valid (i.e. safe to call execute).
     */
    virtual bool isValid() const
    {
        return (pobject != 0) && (pmemfun_0 != 0);
 8002aa4:	6843      	ldr	r3, [r0, #4]
 8002aa6:	b12b      	cbz	r3, 8002ab4 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x10>
 8002aa8:	6883      	ldr	r3, [r0, #8]
 8002aaa:	b92b      	cbnz	r3, 8002ab8 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x14>
 8002aac:	68c0      	ldr	r0, [r0, #12]
 8002aae:	f000 0001 	and.w	r0, r0, #1
 8002ab2:	4770      	bx	lr
 8002ab4:	4618      	mov	r0, r3
 8002ab6:	4770      	bx	lr
 8002ab8:	2001      	movs	r0, #1
    }
 8002aba:	4770      	bx	lr

08002abc <_ZN8touchgfx12NoTransitionD0Ev>:
 8002abc:	b510      	push	{r4, lr}
 8002abe:	210c      	movs	r1, #12
 8002ac0:	4604      	mov	r4, r0
 8002ac2:	f016 fd2f 	bl	8019524 <_ZdlPvj>
 8002ac6:	4620      	mov	r0, r4
 8002ac8:	bd10      	pop	{r4, pc}

08002aca <_ZN23FrontendApplicationBaseD0Ev>:
 8002aca:	b510      	push	{r4, lr}
 8002acc:	f44f 71ac 	mov.w	r1, #344	; 0x158
 8002ad0:	4604      	mov	r4, r0
 8002ad2:	f016 fd27 	bl	8019524 <_ZdlPvj>
 8002ad6:	4620      	mov	r0, r4
 8002ad8:	bd10      	pop	{r4, pc}

08002ada <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED0Ev>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8002ada:	b510      	push	{r4, lr}
 8002adc:	2110      	movs	r1, #16
 8002ade:	4604      	mov	r4, r0
 8002ae0:	f016 fd20 	bl	8019524 <_ZdlPvj>
 8002ae4:	4620      	mov	r0, r4
 8002ae6:	bd10      	pop	{r4, pc}

08002ae8 <_ZN8touchgfx10Transition10invalidateEv>:
    virtual void invalidate()
 8002ae8:	b510      	push	{r4, lr}
        Application::getInstance()->draw();
 8002aea:	f009 f8a3 	bl	800bc34 <_ZN8touchgfx11Application11getInstanceEv>
 8002aee:	6803      	ldr	r3, [r0, #0]
    }
 8002af0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        Application::getInstance()->draw();
 8002af4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002af6:	4718      	bx	r3

08002af8 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv>:
    /**
     * Handles the pending screen transition.
     *
     * Delegates the work to evaluatePendingScreenTransition()
     */
    virtual void handlePendingScreenTransition()
 8002af8:	b510      	push	{r4, lr}
 8002afa:	4604      	mov	r4, r0
     * Evaluates the pending Callback instances. If a callback is valid, it is executed and
     * a Screen transition is executed.
     */
    void evaluatePendingScreenTransition()
    {
        if (pendingScreenTransitionCallback && pendingScreenTransitionCallback->isValid())
 8002afc:	f8d0 013c 	ldr.w	r0, [r0, #316]	; 0x13c
 8002b00:	b158      	cbz	r0, 8002b1a <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
 8002b02:	6803      	ldr	r3, [r0, #0]
 8002b04:	68db      	ldr	r3, [r3, #12]
 8002b06:	4798      	blx	r3
 8002b08:	b138      	cbz	r0, 8002b1a <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
        {
            pendingScreenTransitionCallback->execute();
 8002b0a:	f8d4 013c 	ldr.w	r0, [r4, #316]	; 0x13c
 8002b0e:	6803      	ldr	r3, [r0, #0]
 8002b10:	689b      	ldr	r3, [r3, #8]
 8002b12:	4798      	blx	r3
            pendingScreenTransitionCallback = 0;
 8002b14:	2300      	movs	r3, #0
 8002b16:	f8c4 313c 	str.w	r3, [r4, #316]	; 0x13c
    }
 8002b1a:	bd10      	pop	{r4, pc}

08002b1c <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>:
#include <gui/mainscreen_screen/mainScreenView.hpp>
#include <gui/mainscreen_screen/mainScreenPresenter.hpp>

using namespace touchgfx;

FrontendApplicationBase::FrontendApplicationBase(Model& m, FrontendHeap& heap)
 8002b1c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8002b1e:	4604      	mov	r4, r0
 8002b20:	4617      	mov	r7, r2
 8002b22:	460e      	mov	r6, r1
          pendingScreenTransitionCallback(0)
 8002b24:	f009 f8a6 	bl	800bc74 <_ZN8touchgfx11ApplicationC1Ev>
        instance = this;
 8002b28:	4b14      	ldr	r3, [pc, #80]	; (8002b7c <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x60>)
    : touchgfx::MVPApplication(),
      transitionCallback(),
      frontendHeap(heap),
      model(m)
 8002b2a:	f8c4 6154 	str.w	r6, [r4, #340]	; 0x154
 8002b2e:	601c      	str	r4, [r3, #0]
        return instance;
 8002b30:	4e13      	ldr	r6, [pc, #76]	; (8002b80 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x64>)
 8002b32:	4b14      	ldr	r3, [pc, #80]	; (8002b84 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x68>)
 8002b34:	6023      	str	r3, [r4, #0]
          pendingScreenTransitionCallback(0)
 8002b36:	2500      	movs	r5, #0
 8002b38:	6830      	ldr	r0, [r6, #0]
        : pobject(0), pmemfun_0(0)
 8002b3a:	f8c4 5148 	str.w	r5, [r4, #328]	; 0x148
 8002b3e:	f8c4 514c 	str.w	r5, [r4, #332]	; 0x14c
 8002b42:	4b11      	ldr	r3, [pc, #68]	; (8002b88 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x6c>)
 8002b44:	f8c4 3140 	str.w	r3, [r4, #320]	; 0x140
{
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_PORTRAIT);
 8002b48:	6803      	ldr	r3, [r0, #0]
 8002b4a:	f8c4 5138 	str.w	r5, [r4, #312]	; 0x138
 8002b4e:	689b      	ldr	r3, [r3, #8]
 8002b50:	f8c4 513c 	str.w	r5, [r4, #316]	; 0x13c
 8002b54:	2101      	movs	r1, #1
 8002b56:	f8c4 5144 	str.w	r5, [r4, #324]	; 0x144
      model(m)
 8002b5a:	f8c4 7150 	str.w	r7, [r4, #336]	; 0x150
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_PORTRAIT);
 8002b5e:	4798      	blx	r3
    touchgfx::Texts::setLanguage(GB);
 8002b60:	4628      	mov	r0, r5
 8002b62:	f000 fa4d 	bl	8003000 <_ZN8touchgfx5Texts11setLanguageEt>
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 8002b66:	6833      	ldr	r3, [r6, #0]
 8002b68:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 8002b6c:	b10a      	cbz	r2, 8002b72 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x56>
 8002b6e:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8002b70:	b900      	cbnz	r0, 8002b74 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x58>
            return instance->lcdRef;
 8002b72:	6898      	ldr	r0, [r3, #8]
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableTextureMapperAll();
 8002b74:	f00f fc53 	bl	801241e <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>
}
 8002b78:	4620      	mov	r0, r4
 8002b7a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8002b7c:	200123a4 	.word	0x200123a4
 8002b80:	20012338 	.word	0x20012338
 8002b84:	0801abd4 	.word	0x0801abd4
 8002b88:	0801abbc 	.word	0x0801abbc

08002b8c <_ZN23FrontendApplicationBase32gotomainScreenScreenNoTransitionEv>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8002b8c:	4b06      	ldr	r3, [pc, #24]	; (8002ba8 <_ZN23FrontendApplicationBase32gotomainScreenScreenNoTransitionEv+0x1c>)
 8002b8e:	f8c0 3148 	str.w	r3, [r0, #328]	; 0x148
 8002b92:	2300      	movs	r3, #0
 8002b94:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
// mainScreen

void FrontendApplicationBase::gotomainScreenScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplication::gotomainScreenScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 8002b98:	f500 73a0 	add.w	r3, r0, #320	; 0x140
 8002b9c:	f8c0 0144 	str.w	r0, [r0, #324]	; 0x144
 8002ba0:	f8c0 313c 	str.w	r3, [r0, #316]	; 0x13c
}
 8002ba4:	4770      	bx	lr
 8002ba6:	bf00      	nop
 8002ba8:	08002ced 	.word	0x08002ced

08002bac <_ZN8touchgfx14makeTransitionI14mainScreenView19mainScreenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_>:
 *
 * @return Pointer to the new Presenter of the requested type. Incidentally it will be the same
 *         value as the old presenter due to memory reuse.
 */
template <class ScreenType, class PresenterType, class TransType, class ModelType>
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
 8002bac:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8002bb0:	4607      	mov	r7, r0
{
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8002bb2:	6890      	ldr	r0, [r2, #8]
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
 8002bb4:	f8dd a020 	ldr.w	sl, [sp, #32]
 8002bb8:	4699      	mov	r9, r3
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8002bba:	6803      	ldr	r3, [r0, #0]
 8002bbc:	6a1b      	ldr	r3, [r3, #32]
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
 8002bbe:	4688      	mov	r8, r1
 8002bc0:	4615      	mov	r5, r2
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8002bc2:	4798      	blx	r3
 8002bc4:	f240 5313 	movw	r3, #1299	; 0x513
 8002bc8:	4298      	cmp	r0, r3
 8002bca:	d805      	bhi.n	8002bd8 <_ZN8touchgfx14makeTransitionI14mainScreenView19mainScreenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x2c>
 8002bcc:	4b41      	ldr	r3, [pc, #260]	; (8002cd4 <_ZN8touchgfx14makeTransitionI14mainScreenView19mainScreenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x128>)
 8002bce:	4a42      	ldr	r2, [pc, #264]	; (8002cd8 <_ZN8touchgfx14makeTransitionI14mainScreenView19mainScreenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x12c>)
 8002bd0:	21a7      	movs	r1, #167	; 0xa7
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8002bd2:	4842      	ldr	r0, [pc, #264]	; (8002cdc <_ZN8touchgfx14makeTransitionI14mainScreenView19mainScreenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x130>)
 8002bd4:	f016 fcd2 	bl	801957c <__assert_func>
 8002bd8:	6868      	ldr	r0, [r5, #4]
 8002bda:	6803      	ldr	r3, [r0, #0]
 8002bdc:	6a1b      	ldr	r3, [r3, #32]
 8002bde:	4798      	blx	r3
 8002be0:	280f      	cmp	r0, #15
 8002be2:	d803      	bhi.n	8002bec <_ZN8touchgfx14makeTransitionI14mainScreenView19mainScreenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x40>
 8002be4:	4b3e      	ldr	r3, [pc, #248]	; (8002ce0 <_ZN8touchgfx14makeTransitionI14mainScreenView19mainScreenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x134>)
 8002be6:	4a3c      	ldr	r2, [pc, #240]	; (8002cd8 <_ZN8touchgfx14makeTransitionI14mainScreenView19mainScreenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x12c>)
 8002be8:	21a8      	movs	r1, #168	; 0xa8
 8002bea:	e7f2      	b.n	8002bd2 <_ZN8touchgfx14makeTransitionI14mainScreenView19mainScreenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x26>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8002bec:	68e8      	ldr	r0, [r5, #12]
 8002bee:	6803      	ldr	r3, [r0, #0]
 8002bf0:	6a1b      	ldr	r3, [r3, #32]
 8002bf2:	4798      	blx	r3
 8002bf4:	280b      	cmp	r0, #11
 8002bf6:	d803      	bhi.n	8002c00 <_ZN8touchgfx14makeTransitionI14mainScreenView19mainScreenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x54>
 8002bf8:	4b3a      	ldr	r3, [pc, #232]	; (8002ce4 <_ZN8touchgfx14makeTransitionI14mainScreenView19mainScreenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x138>)
 8002bfa:	4a37      	ldr	r2, [pc, #220]	; (8002cd8 <_ZN8touchgfx14makeTransitionI14mainScreenView19mainScreenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x12c>)
 8002bfc:	21a9      	movs	r1, #169	; 0xa9
 8002bfe:	e7e8      	b.n	8002bd2 <_ZN8touchgfx14makeTransitionI14mainScreenView19mainScreenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x26>
    Application::getInstance()->clearAllTimerWidgets();
 8002c00:	f009 f818 	bl	800bc34 <_ZN8touchgfx11Application11getInstanceEv>
 8002c04:	f009 f81c 	bl	800bc40 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
    if (*currentTrans)
 8002c08:	f8d9 0000 	ldr.w	r0, [r9]
 8002c0c:	b110      	cbz	r0, 8002c14 <_ZN8touchgfx14makeTransitionI14mainScreenView19mainScreenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x68>
        (*currentTrans)->tearDown();
 8002c0e:	6803      	ldr	r3, [r0, #0]
 8002c10:	68db      	ldr	r3, [r3, #12]
 8002c12:	4798      	blx	r3
    if (*currentTrans)
 8002c14:	f8d9 0000 	ldr.w	r0, [r9]
 8002c18:	b110      	cbz	r0, 8002c20 <_ZN8touchgfx14makeTransitionI14mainScreenView19mainScreenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x74>
        (*currentTrans)->~Transition();
 8002c1a:	6803      	ldr	r3, [r0, #0]
 8002c1c:	681b      	ldr	r3, [r3, #0]
 8002c1e:	4798      	blx	r3
    if (*currentScreen)
 8002c20:	6838      	ldr	r0, [r7, #0]
 8002c22:	b110      	cbz	r0, 8002c2a <_ZN8touchgfx14makeTransitionI14mainScreenView19mainScreenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x7e>
        (*currentScreen)->tearDownScreen();
 8002c24:	6803      	ldr	r3, [r0, #0]
 8002c26:	695b      	ldr	r3, [r3, #20]
 8002c28:	4798      	blx	r3
    if (*currentPresenter)
 8002c2a:	f8d8 0000 	ldr.w	r0, [r8]
 8002c2e:	b110      	cbz	r0, 8002c36 <_ZN8touchgfx14makeTransitionI14mainScreenView19mainScreenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x8a>
        (*currentPresenter)->deactivate();
 8002c30:	6803      	ldr	r3, [r0, #0]
 8002c32:	685b      	ldr	r3, [r3, #4]
 8002c34:	4798      	blx	r3
    if (*currentScreen)
 8002c36:	6838      	ldr	r0, [r7, #0]
 8002c38:	b110      	cbz	r0, 8002c40 <_ZN8touchgfx14makeTransitionI14mainScreenView19mainScreenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x94>
        (*currentScreen)->~Screen();
 8002c3a:	6803      	ldr	r3, [r0, #0]
 8002c3c:	681b      	ldr	r3, [r3, #0]
 8002c3e:	4798      	blx	r3
    if (*currentPresenter)
 8002c40:	f8d8 0000 	ldr.w	r0, [r8]
 8002c44:	b110      	cbz	r0, 8002c4c <_ZN8touchgfx14makeTransitionI14mainScreenView19mainScreenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xa0>
        (*currentPresenter)->~Presenter();
 8002c46:	6803      	ldr	r3, [r0, #0]
 8002c48:	689b      	ldr	r3, [r3, #8]
 8002c4a:	4798      	blx	r3

    prepareTransition(currentScreen, currentPresenter, currentTrans);

    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8002c4c:	68e8      	ldr	r0, [r5, #12]
     * @return A typed reference to the object at the specified index.
     */
    template <typename T>
    T& at(const uint16_t index)
    {
        return *static_cast<T*>(element(index));
 8002c4e:	6803      	ldr	r3, [r0, #0]
 8002c50:	2100      	movs	r1, #0
 8002c52:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002c54:	4798      	blx	r3
 8002c56:	4604      	mov	r4, r0
 8002c58:	b120      	cbz	r0, 8002c64 <_ZN8touchgfx14makeTransitionI14mainScreenView19mainScreenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xb8>
        : screenContainer(0), done(false)
 8002c5a:	2300      	movs	r3, #0
 8002c5c:	6043      	str	r3, [r0, #4]
 8002c5e:	7203      	strb	r3, [r0, #8]
 8002c60:	4b21      	ldr	r3, [pc, #132]	; (8002ce8 <_ZN8touchgfx14makeTransitionI14mainScreenView19mainScreenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x13c>)
 8002c62:	6003      	str	r3, [r0, #0]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8002c64:	68a8      	ldr	r0, [r5, #8]
 8002c66:	6803      	ldr	r3, [r0, #0]
 8002c68:	2100      	movs	r1, #0
 8002c6a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002c6c:	4798      	blx	r3
 8002c6e:	4606      	mov	r6, r0
 8002c70:	b108      	cbz	r0, 8002c76 <_ZN8touchgfx14makeTransitionI14mainScreenView19mainScreenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xca>
 8002c72:	f000 fdeb 	bl	800384c <_ZN14mainScreenViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8002c76:	6868      	ldr	r0, [r5, #4]
 8002c78:	6803      	ldr	r3, [r0, #0]
 8002c7a:	2100      	movs	r1, #0
 8002c7c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002c7e:	4798      	blx	r3
 8002c80:	4605      	mov	r5, r0
 8002c82:	b110      	cbz	r0, 8002c8a <_ZN8touchgfx14makeTransitionI14mainScreenView19mainScreenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xde>
 8002c84:	4631      	mov	r1, r6
 8002c86:	f000 fd69 	bl	800375c <_ZN19mainScreenPresenterC1ER14mainScreenView>
    *currentTrans = newTransition;
 8002c8a:	f8c9 4000 	str.w	r4, [r9]
    *currentPresenter = newPresenter;
 8002c8e:	f8c8 5000 	str.w	r5, [r8]
    *currentScreen = newScreen;
 8002c92:	603e      	str	r6, [r7, #0]
    model->bind(newPresenter);
 8002c94:	b1e5      	cbz	r5, 8002cd0 <_ZN8touchgfx14makeTransitionI14mainScreenView19mainScreenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x124>
 8002c96:	1d2b      	adds	r3, r5, #4
public:
    Model();

    void bind(ModelListener* listener)
    {
        modelListener = listener;
 8002c98:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8002c9c:	6833      	ldr	r3, [r6, #0]
    
    virtual ~ModelListener() {}

    void bind(Model* m)
    {
        model = m;
 8002c9e:	f8c5 a008 	str.w	sl, [r5, #8]
 8002ca2:	4630      	mov	r0, r6
     *
     * @param [in] presenter The specific Presenter to be associated with the View.
     */
    void bind(T& presenter)
    {
        this->presenter = &presenter;
 8002ca4:	63f5      	str	r5, [r6, #60]	; 0x3c
 8002ca6:	68db      	ldr	r3, [r3, #12]
 8002ca8:	4798      	blx	r3
    newPresenter->activate();
 8002caa:	682b      	ldr	r3, [r5, #0]
 8002cac:	4628      	mov	r0, r5
 8002cae:	681b      	ldr	r3, [r3, #0]
 8002cb0:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8002cb2:	4621      	mov	r1, r4
 8002cb4:	4630      	mov	r0, r6
 8002cb6:	f00a f943 	bl	800cf40 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8002cba:	6823      	ldr	r3, [r4, #0]
 8002cbc:	4620      	mov	r0, r4
 8002cbe:	691b      	ldr	r3, [r3, #16]
 8002cc0:	4798      	blx	r3
    newTransition->invalidate();
 8002cc2:	6823      	ldr	r3, [r4, #0]
 8002cc4:	4620      	mov	r0, r4
 8002cc6:	695b      	ldr	r3, [r3, #20]
 8002cc8:	4798      	blx	r3
    newScreen->bind(*newPresenter);

    finalizeTransition((Screen*)newScreen, (Presenter*)newPresenter, (Transition*)newTransition);

    return newPresenter;
}
 8002cca:	4628      	mov	r0, r5
 8002ccc:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    model->bind(newPresenter);
 8002cd0:	462b      	mov	r3, r5
 8002cd2:	e7e1      	b.n	8002c98 <_ZN8touchgfx14makeTransitionI14mainScreenView19mainScreenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xec>
 8002cd4:	0801ac34 	.word	0x0801ac34
 8002cd8:	0801ae4f 	.word	0x0801ae4f
 8002cdc:	0801acc2 	.word	0x0801acc2
 8002ce0:	0801ad09 	.word	0x0801ad09
 8002ce4:	0801adac 	.word	0x0801adac
 8002ce8:	0801ac18 	.word	0x0801ac18

08002cec <_ZN23FrontendApplicationBase36gotomainScreenScreenNoTransitionImplEv>:

void FrontendApplicationBase::gotomainScreenScreenNoTransitionImpl()
{
 8002cec:	b507      	push	{r0, r1, r2, lr}
    touchgfx::makeTransition<mainScreenView, mainScreenPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8002cee:	f8d0 3154 	ldr.w	r3, [r0, #340]	; 0x154
 8002cf2:	9300      	str	r3, [sp, #0]
 8002cf4:	f8d0 2150 	ldr.w	r2, [r0, #336]	; 0x150
 8002cf8:	4b04      	ldr	r3, [pc, #16]	; (8002d0c <_ZN23FrontendApplicationBase36gotomainScreenScreenNoTransitionImplEv+0x20>)
 8002cfa:	f500 719c 	add.w	r1, r0, #312	; 0x138
 8002cfe:	4804      	ldr	r0, [pc, #16]	; (8002d10 <_ZN23FrontendApplicationBase36gotomainScreenScreenNoTransitionImplEv+0x24>)
 8002d00:	f7ff ff54 	bl	8002bac <_ZN8touchgfx14makeTransitionI14mainScreenView19mainScreenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_>
}
 8002d04:	b003      	add	sp, #12
 8002d06:	f85d fb04 	ldr.w	pc, [sp], #4
 8002d0a:	bf00      	nop
 8002d0c:	20012398 	.word	0x20012398
 8002d10:	20012394 	.word	0x20012394

08002d14 <_ZNK8touchgfx13GeneratedFont12getGSUBTableEv>:
     * @return The GSUB table or null if font has GSUB no table
     */
    virtual const uint16_t* getGSUBTable() const
    {
        return gsubTable;
    }
 8002d14:	6a00      	ldr	r0, [r0, #32]
 8002d16:	4770      	bx	lr

08002d18 <_ZN8touchgfx13GeneratedFontD1Ev>:
class GeneratedFont : public ConstFont
 8002d18:	4770      	bx	lr

08002d1a <_ZNK8touchgfx13GeneratedFont12getPixelDataEPKNS_9GlyphNodeE>:
}

const uint8_t* GeneratedFont::getPixelData(const GlyphNode* glyph) const
{
    const uint8_t* const* table = (const uint8_t* const*)glyphData;
    return &(table[glyph->unicode / 2048][glyph->dataOffset]);
 8002d1a:	888b      	ldrh	r3, [r1, #4]
 8002d1c:	6980      	ldr	r0, [r0, #24]
 8002d1e:	680a      	ldr	r2, [r1, #0]
 8002d20:	0adb      	lsrs	r3, r3, #11
 8002d22:	f850 0023 	ldr.w	r0, [r0, r3, lsl #2]
}
 8002d26:	4410      	add	r0, r2
 8002d28:	4770      	bx	lr

08002d2a <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE>:

int8_t GeneratedFont::getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const
{
 8002d2a:	b510      	push	{r4, lr}
    if (!glyph || glyph->kerningTableSize == 0)
 8002d2c:	b1c2      	cbz	r2, 8002d60 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
 8002d2e:	7b13      	ldrb	r3, [r2, #12]
 8002d30:	b1b3      	cbz	r3, 8002d60 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
        return ((flags & GLYPH_DATA_KERNINGTABLEPOS_BIT8_10) << 8) | _kerningTablePos;
 8002d32:	7b54      	ldrb	r4, [r2, #13]
 8002d34:	7ad2      	ldrb	r2, [r2, #11]
 8002d36:	0224      	lsls	r4, r4, #8
 8002d38:	f404 64e0 	and.w	r4, r4, #1792	; 0x700
    {
        return 0;
    }

    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 8002d3c:	4314      	orrs	r4, r2
 8002d3e:	69c2      	ldr	r2, [r0, #28]
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 8002d40:	b298      	uxth	r0, r3
    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 8002d42:	eb02 0284 	add.w	r2, r2, r4, lsl #2
    {
        if (prevChar == kerndata->unicodePrevChar)
 8002d46:	8813      	ldrh	r3, [r2, #0]
 8002d48:	428b      	cmp	r3, r1
 8002d4a:	d102      	bne.n	8002d52 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x28>
        {
            return kerndata->distance;
 8002d4c:	f992 0002 	ldrsb.w	r0, [r2, #2]
        {
            break;
        }
    }
    return 0;
}
 8002d50:	bd10      	pop	{r4, pc}
        if (prevChar < kerndata->unicodePrevChar)
 8002d52:	d805      	bhi.n	8002d60 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 8002d54:	3801      	subs	r0, #1
 8002d56:	b280      	uxth	r0, r0
 8002d58:	3204      	adds	r2, #4
 8002d5a:	2800      	cmp	r0, #0
 8002d5c:	d1f3      	bne.n	8002d46 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x1c>
 8002d5e:	e7f7      	b.n	8002d50 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>
        return 0;
 8002d60:	2000      	movs	r0, #0
 8002d62:	e7f5      	b.n	8002d50 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>

08002d64 <_ZN8touchgfx13GeneratedFontD0Ev>:
 8002d64:	b510      	push	{r4, lr}
 8002d66:	2124      	movs	r1, #36	; 0x24
 8002d68:	4604      	mov	r4, r0
 8002d6a:	f016 fbdb 	bl	8019524 <_ZdlPvj>
 8002d6e:	4620      	mov	r0, r4
 8002d70:	bd10      	pop	{r4, pc}
	...

08002d74 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKt>:
GeneratedFont::GeneratedFont(const GlyphNode* list, uint16_t size, uint16_t height, uint8_t pixBelowBase, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData) :
 8002d74:	b530      	push	{r4, r5, lr}
 8002d76:	b089      	sub	sp, #36	; 0x24
 8002d78:	4604      	mov	r4, r0
    gsubTable(gsubData)
 8002d7a:	f8bd 5050 	ldrh.w	r5, [sp, #80]	; 0x50
 8002d7e:	9506      	str	r5, [sp, #24]
 8002d80:	f8bd 504c 	ldrh.w	r5, [sp, #76]	; 0x4c
 8002d84:	9505      	str	r5, [sp, #20]
 8002d86:	f89d 5040 	ldrb.w	r5, [sp, #64]	; 0x40
 8002d8a:	9504      	str	r5, [sp, #16]
 8002d8c:	f89d 503c 	ldrb.w	r5, [sp, #60]	; 0x3c
 8002d90:	9503      	str	r5, [sp, #12]
 8002d92:	f89d 5038 	ldrb.w	r5, [sp, #56]	; 0x38
 8002d96:	9502      	str	r5, [sp, #8]
 8002d98:	f89d 5034 	ldrb.w	r5, [sp, #52]	; 0x34
 8002d9c:	9501      	str	r5, [sp, #4]
 8002d9e:	f89d 5030 	ldrb.w	r5, [sp, #48]	; 0x30
 8002da2:	9500      	str	r5, [sp, #0]
 8002da4:	f009 fcd0 	bl	800c748 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEtthhhhhtt>
 8002da8:	4b05      	ldr	r3, [pc, #20]	; (8002dc0 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKt+0x4c>)
 8002daa:	6023      	str	r3, [r4, #0]
 8002dac:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8002dae:	61a3      	str	r3, [r4, #24]
 8002db0:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8002db2:	61e3      	str	r3, [r4, #28]
 8002db4:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8002db6:	6223      	str	r3, [r4, #32]
}
 8002db8:	4620      	mov	r0, r4
 8002dba:	b009      	add	sp, #36	; 0x24
 8002dbc:	bd30      	pop	{r4, r5, pc}
 8002dbe:	bf00      	nop
 8002dc0:	0801af64 	.word	0x0801af64

08002dc4 <__tcf_0>:

touchgfx::GeneratedFont& getFont_verdana_10_4bpp();

touchgfx::GeneratedFont& getFont_verdana_10_4bpp()
{
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0);
 8002dc4:	4770      	bx	lr
	...

08002dc8 <_Z23getFont_verdana_10_4bppv>:
{
 8002dc8:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0);
 8002dca:	4d14      	ldr	r5, [pc, #80]	; (8002e1c <_Z23getFont_verdana_10_4bppv+0x54>)
 8002dcc:	782c      	ldrb	r4, [r5, #0]
 8002dce:	f3bf 8f5b 	dmb	ish
 8002dd2:	f014 0401 	ands.w	r4, r4, #1
{
 8002dd6:	b08b      	sub	sp, #44	; 0x2c
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0);
 8002dd8:	d11d      	bne.n	8002e16 <_Z23getFont_verdana_10_4bppv+0x4e>
 8002dda:	4628      	mov	r0, r5
 8002ddc:	f016 fba4 	bl	8019528 <__cxa_guard_acquire>
 8002de0:	b1c8      	cbz	r0, 8002e16 <_Z23getFont_verdana_10_4bppv+0x4e>
 8002de2:	233f      	movs	r3, #63	; 0x3f
 8002de4:	9307      	str	r3, [sp, #28]
 8002de6:	4b0e      	ldr	r3, [pc, #56]	; (8002e20 <_Z23getFont_verdana_10_4bppv+0x58>)
 8002de8:	9306      	str	r3, [sp, #24]
 8002dea:	4b0e      	ldr	r3, [pc, #56]	; (8002e24 <_Z23getFont_verdana_10_4bppv+0x5c>)
 8002dec:	490e      	ldr	r1, [pc, #56]	; (8002e28 <_Z23getFont_verdana_10_4bppv+0x60>)
 8002dee:	9403      	str	r4, [sp, #12]
 8002df0:	2201      	movs	r2, #1
 8002df2:	e9cd 4304 	strd	r4, r3, [sp, #16]
 8002df6:	2304      	movs	r3, #4
 8002df8:	e9cd 3201 	strd	r3, r2, [sp, #4]
 8002dfc:	e9cd 4408 	strd	r4, r4, [sp, #32]
 8002e00:	230a      	movs	r3, #10
 8002e02:	9400      	str	r4, [sp, #0]
 8002e04:	4809      	ldr	r0, [pc, #36]	; (8002e2c <_Z23getFont_verdana_10_4bppv+0x64>)
 8002e06:	f7ff ffb5 	bl	8002d74 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKt>
 8002e0a:	4628      	mov	r0, r5
 8002e0c:	f016 fb98 	bl	8019540 <__cxa_guard_release>
 8002e10:	4807      	ldr	r0, [pc, #28]	; (8002e30 <_Z23getFont_verdana_10_4bppv+0x68>)
 8002e12:	f016 fbd1 	bl	80195b8 <atexit>
    return verdana_10_4bpp;
}
 8002e16:	4805      	ldr	r0, [pc, #20]	; (8002e2c <_Z23getFont_verdana_10_4bppv+0x64>)
 8002e18:	b00b      	add	sp, #44	; 0x2c
 8002e1a:	bd30      	pop	{r4, r5, pc}
 8002e1c:	20001588 	.word	0x20001588
 8002e20:	0801e498 	.word	0x0801e498
 8002e24:	0801afb0 	.word	0x0801afb0
 8002e28:	0801e30c 	.word	0x0801e30c
 8002e2c:	2000158c 	.word	0x2000158c
 8002e30:	08002dc5 	.word	0x08002dc5

08002e34 <__tcf_0>:

touchgfx::GeneratedFont& getFont_verdana_20_4bpp();

touchgfx::GeneratedFont& getFont_verdana_20_4bpp()
{
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 26, 20, 4, 4, 1, 0, 1, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0);
 8002e34:	4770      	bx	lr
	...

08002e38 <_Z23getFont_verdana_20_4bppv>:
{
 8002e38:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 26, 20, 4, 4, 1, 0, 1, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0);
 8002e3a:	4d15      	ldr	r5, [pc, #84]	; (8002e90 <_Z23getFont_verdana_20_4bppv+0x58>)
 8002e3c:	782c      	ldrb	r4, [r5, #0]
 8002e3e:	f3bf 8f5b 	dmb	ish
 8002e42:	f014 0401 	ands.w	r4, r4, #1
{
 8002e46:	b08b      	sub	sp, #44	; 0x2c
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 26, 20, 4, 4, 1, 0, 1, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0);
 8002e48:	d11e      	bne.n	8002e88 <_Z23getFont_verdana_20_4bppv+0x50>
 8002e4a:	4628      	mov	r0, r5
 8002e4c:	f016 fb6c 	bl	8019528 <__cxa_guard_acquire>
 8002e50:	b1d0      	cbz	r0, 8002e88 <_Z23getFont_verdana_20_4bppv+0x50>
 8002e52:	233f      	movs	r3, #63	; 0x3f
 8002e54:	9307      	str	r3, [sp, #28]
 8002e56:	4b0f      	ldr	r3, [pc, #60]	; (8002e94 <_Z23getFont_verdana_20_4bppv+0x5c>)
 8002e58:	9306      	str	r3, [sp, #24]
 8002e5a:	4b0f      	ldr	r3, [pc, #60]	; (8002e98 <_Z23getFont_verdana_20_4bppv+0x60>)
 8002e5c:	9305      	str	r3, [sp, #20]
 8002e5e:	2301      	movs	r3, #1
 8002e60:	e9cd 4303 	strd	r4, r3, [sp, #12]
 8002e64:	9302      	str	r3, [sp, #8]
 8002e66:	2304      	movs	r3, #4
 8002e68:	e9cd 3300 	strd	r3, r3, [sp]
 8002e6c:	221a      	movs	r2, #26
 8002e6e:	2314      	movs	r3, #20
 8002e70:	490a      	ldr	r1, [pc, #40]	; (8002e9c <_Z23getFont_verdana_20_4bppv+0x64>)
 8002e72:	480b      	ldr	r0, [pc, #44]	; (8002ea0 <_Z23getFont_verdana_20_4bppv+0x68>)
 8002e74:	e9cd 4408 	strd	r4, r4, [sp, #32]
 8002e78:	f7ff ff7c 	bl	8002d74 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKt>
 8002e7c:	4628      	mov	r0, r5
 8002e7e:	f016 fb5f 	bl	8019540 <__cxa_guard_release>
 8002e82:	4808      	ldr	r0, [pc, #32]	; (8002ea4 <_Z23getFont_verdana_20_4bppv+0x6c>)
 8002e84:	f016 fb98 	bl	80195b8 <atexit>
    return verdana_20_4bpp;
}
 8002e88:	4805      	ldr	r0, [pc, #20]	; (8002ea0 <_Z23getFont_verdana_20_4bppv+0x68>)
 8002e8a:	b00b      	add	sp, #44	; 0x2c
 8002e8c:	bd30      	pop	{r4, r5, pc}
 8002e8e:	bf00      	nop
 8002e90:	200015b0 	.word	0x200015b0
 8002e94:	0801e49c 	.word	0x0801e49c
 8002e98:	0801afb4 	.word	0x0801afb4
 8002e9c:	0801e31c 	.word	0x0801e31c
 8002ea0:	200015b4 	.word	0x200015b4
 8002ea4:	08002e35 	.word	0x08002e35

08002ea8 <__tcf_0>:

touchgfx::GeneratedFont& getFont_verdana_40_4bpp();

touchgfx::GeneratedFont& getFont_verdana_40_4bpp()
{
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0);
 8002ea8:	4770      	bx	lr
	...

08002eac <_Z23getFont_verdana_40_4bppv>:
{
 8002eac:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0);
 8002eae:	4d14      	ldr	r5, [pc, #80]	; (8002f00 <_Z23getFont_verdana_40_4bppv+0x54>)
 8002eb0:	782c      	ldrb	r4, [r5, #0]
 8002eb2:	f3bf 8f5b 	dmb	ish
 8002eb6:	f014 0401 	ands.w	r4, r4, #1
{
 8002eba:	b08b      	sub	sp, #44	; 0x2c
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0);
 8002ebc:	d11d      	bne.n	8002efa <_Z23getFont_verdana_40_4bppv+0x4e>
 8002ebe:	4628      	mov	r0, r5
 8002ec0:	f016 fb32 	bl	8019528 <__cxa_guard_acquire>
 8002ec4:	b1c8      	cbz	r0, 8002efa <_Z23getFont_verdana_40_4bppv+0x4e>
 8002ec6:	233f      	movs	r3, #63	; 0x3f
 8002ec8:	9307      	str	r3, [sp, #28]
 8002eca:	4b0e      	ldr	r3, [pc, #56]	; (8002f04 <_Z23getFont_verdana_40_4bppv+0x58>)
 8002ecc:	9306      	str	r3, [sp, #24]
 8002ece:	4b0e      	ldr	r3, [pc, #56]	; (8002f08 <_Z23getFont_verdana_40_4bppv+0x5c>)
 8002ed0:	490e      	ldr	r1, [pc, #56]	; (8002f0c <_Z23getFont_verdana_40_4bppv+0x60>)
 8002ed2:	9403      	str	r4, [sp, #12]
 8002ed4:	2201      	movs	r2, #1
 8002ed6:	e9cd 4304 	strd	r4, r3, [sp, #16]
 8002eda:	2304      	movs	r3, #4
 8002edc:	e9cd 3201 	strd	r3, r2, [sp, #4]
 8002ee0:	e9cd 4408 	strd	r4, r4, [sp, #32]
 8002ee4:	2328      	movs	r3, #40	; 0x28
 8002ee6:	9400      	str	r4, [sp, #0]
 8002ee8:	4809      	ldr	r0, [pc, #36]	; (8002f10 <_Z23getFont_verdana_40_4bppv+0x64>)
 8002eea:	f7ff ff43 	bl	8002d74 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKt>
 8002eee:	4628      	mov	r0, r5
 8002ef0:	f016 fb26 	bl	8019540 <__cxa_guard_release>
 8002ef4:	4807      	ldr	r0, [pc, #28]	; (8002f14 <_Z23getFont_verdana_40_4bppv+0x68>)
 8002ef6:	f016 fb5f 	bl	80195b8 <atexit>
    return verdana_40_4bpp;
}
 8002efa:	4805      	ldr	r0, [pc, #20]	; (8002f10 <_Z23getFont_verdana_40_4bppv+0x64>)
 8002efc:	b00b      	add	sp, #44	; 0x2c
 8002efe:	bd30      	pop	{r4, r5, pc}
 8002f00:	200015d8 	.word	0x200015d8
 8002f04:	0801e4a8 	.word	0x0801e4a8
 8002f08:	0801afb8 	.word	0x0801afb8
 8002f0c:	0801e488 	.word	0x0801e488
 8002f10:	200015dc 	.word	0x200015dc
 8002f14:	08002ea9 	.word	0x08002ea9

08002f18 <_ZNK8touchgfx4Font12getGSUBTableEv>:
     * @return The GSUB table or null if font has GSUB no table.
     */
    virtual const uint16_t* getGSUBTable() const
    {
        return 0;
    }
 8002f18:	2000      	movs	r0, #0
 8002f1a:	4770      	bx	lr

08002f1c <_ZNK8touchgfx4Font14getStringWidthEPKtz>:
#include <touchgfx/Unicode.hpp>
#include <touchgfx/hal/HAL.hpp>
#include <touchgfx/lcd/LCD.hpp>

uint16_t touchgfx::Font::getStringWidth(const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 8002f1c:	b40e      	push	{r1, r2, r3}
 8002f1e:	b503      	push	{r0, r1, lr}
 8002f20:	ab03      	add	r3, sp, #12
    va_list pArg;
    va_start(pArg, text);
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 8002f22:	2100      	movs	r1, #0
{
 8002f24:	f853 2b04 	ldr.w	r2, [r3], #4
    va_start(pArg, text);
 8002f28:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 8002f2a:	f009 fa49 	bl	800c3c0 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 8002f2e:	b002      	add	sp, #8
 8002f30:	f85d eb04 	ldr.w	lr, [sp], #4
 8002f34:	b003      	add	sp, #12
 8002f36:	4770      	bx	lr

08002f38 <_ZNK8touchgfx4Font14getStringWidthEhPKtz>:

uint16_t touchgfx::Font::getStringWidth(touchgfx::TextDirection textDirection, const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 8002f38:	b40c      	push	{r2, r3}
 8002f3a:	b507      	push	{r0, r1, r2, lr}
 8002f3c:	ab04      	add	r3, sp, #16
 8002f3e:	f853 2b04 	ldr.w	r2, [r3], #4
    va_list pArg;
    va_start(pArg, text);
 8002f42:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(textDirection, text, pArg);
 8002f44:	f009 fa3c 	bl	800c3c0 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 8002f48:	b003      	add	sp, #12
 8002f4a:	f85d eb04 	ldr.w	lr, [sp], #4
 8002f4e:	b002      	add	sp, #8
 8002f50:	4770      	bx	lr
	...

08002f54 <_ZN8touchgfx12TextProvider15getNextLigatureEh>:

touchgfx::Unicode::UnicodeChar touchgfx::TextProvider::getNextLigature(TextDirection direction)
{
    if (fontGsubTable && nextCharacters.peekChar())
 8002f54:	6bc3      	ldr	r3, [r0, #60]	; 0x3c
{
 8002f56:	b510      	push	{r4, lr}
 8002f58:	4604      	mov	r4, r0
    if (fontGsubTable && nextCharacters.peekChar())
 8002f5a:	b373      	cbz	r3, 8002fba <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
        {
            return used == size;
        }
        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
        {
            assert(used > 0);
 8002f5c:	8e03      	ldrh	r3, [r0, #48]	; 0x30
 8002f5e:	b92b      	cbnz	r3, 8002f6c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x18>
 8002f60:	4b18      	ldr	r3, [pc, #96]	; (8002fc4 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x70>)
 8002f62:	4a19      	ldr	r2, [pc, #100]	; (8002fc8 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x74>)
 8002f64:	21c0      	movs	r1, #192	; 0xc0
            return buffer[pos];
        }
        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar(uint16_t offset)
        {
            assert(offset < used);
 8002f66:	4819      	ldr	r0, [pc, #100]	; (8002fcc <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x78>)
 8002f68:	f016 fb08 	bl	801957c <__assert_func>
            return buffer[pos];
 8002f6c:	8dc3      	ldrh	r3, [r0, #46]	; 0x2e
 8002f6e:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8002f72:	8b5b      	ldrh	r3, [r3, #26]
 8002f74:	b30b      	cbz	r3, 8002fba <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
    {
        substituteGlyphs();
 8002f76:	f00a fd3b 	bl	800d9f0 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>
            assert(offset < used);
 8002f7a:	8e23      	ldrh	r3, [r4, #48]	; 0x30
 8002f7c:	2b01      	cmp	r3, #1
 8002f7e:	d803      	bhi.n	8002f88 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x34>
 8002f80:	4b13      	ldr	r3, [pc, #76]	; (8002fd0 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x7c>)
 8002f82:	4a14      	ldr	r2, [pc, #80]	; (8002fd4 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x80>)
 8002f84:	21c5      	movs	r1, #197	; 0xc5
 8002f86:	e7ee      	b.n	8002f66 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x12>
            const uint16_t index = pos + offset;
 8002f88:	8de2      	ldrh	r2, [r4, #46]	; 0x2e
 8002f8a:	1c53      	adds	r3, r2, #1
 8002f8c:	b29b      	uxth	r3, r3
            return buffer[index < size ? index : index - size];
 8002f8e:	2b09      	cmp	r3, #9
 8002f90:	4619      	mov	r1, r3
 8002f92:	bf88      	it	hi
 8002f94:	f1a3 010a 	subhi.w	r1, r3, #10
 8002f98:	eb04 0141 	add.w	r1, r4, r1, lsl #1
        if (nextCharacters.peekChar(1) == 0x093F) //Hindi I-matra
 8002f9c:	f640 103f 	movw	r0, #2367	; 0x93f
 8002fa0:	8b49      	ldrh	r1, [r1, #26]
 8002fa2:	4281      	cmp	r1, r0
 8002fa4:	d109      	bne.n	8002fba <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
        }
        FORCE_INLINE_FUNCTION void replaceAt1(Unicode::UnicodeChar newChar)
        {
            assert(used > 1);
            const uint16_t index = pos + 1;
            buffer[index < size ? index : 0] = newChar;
 8002fa6:	2b0a      	cmp	r3, #10
 8002fa8:	eb04 0242 	add.w	r2, r4, r2, lsl #1
 8002fac:	bf28      	it	cs
 8002fae:	2300      	movcs	r3, #0
 8002fb0:	eb04 0343 	add.w	r3, r4, r3, lsl #1
            return buffer[pos];
 8002fb4:	8b50      	ldrh	r0, [r2, #26]
            buffer[index < size ? index : 0] = newChar;
 8002fb6:	8358      	strh	r0, [r3, #26]
            buffer[pos] = newChar;
 8002fb8:	8351      	strh	r1, [r2, #26]
        {
            nextCharacters.replaceAt1(nextCharacters.peekChar());
            nextCharacters.replaceAt0(0x093F);
        }
    }
    return getNextChar();
 8002fba:	4620      	mov	r0, r4
}
 8002fbc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    return getNextChar();
 8002fc0:	f00a bbfa 	b.w	800d7b8 <_ZN8touchgfx12TextProvider11getNextCharEv>
 8002fc4:	0801afbc 	.word	0x0801afbc
 8002fc8:	0801b0ef 	.word	0x0801b0ef
 8002fcc:	0801afc5 	.word	0x0801afc5
 8002fd0:	0801b00f 	.word	0x0801b00f
 8002fd4:	0801b01d 	.word	0x0801b01d

08002fd8 <_ZN8touchgfx12TextProvider18initializeInternalEv>:

void touchgfx::TextProvider::initializeInternal()
{
    fillInputBuffer();
 8002fd8:	f00a bba8 	b.w	800d72c <_ZN8touchgfx12TextProvider15fillInputBufferEv>

08002fdc <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>:
}

void touchgfx::LCD::drawString(touchgfx::Rect widgetArea, const touchgfx::Rect& invalidatedArea, const touchgfx::LCD::StringVisuals& stringVisuals, const touchgfx::Unicode::UnicodeChar* format, ...)
{
 8002fdc:	b510      	push	{r4, lr}
 8002fde:	b086      	sub	sp, #24
 8002fe0:	ac02      	add	r4, sp, #8
 8002fe2:	e884 0006 	stmia.w	r4, {r1, r2}
 8002fe6:	461a      	mov	r2, r3
    va_list pArg;
    va_start(pArg, format);
 8002fe8:	ab0a      	add	r3, sp, #40	; 0x28
 8002fea:	9305      	str	r3, [sp, #20]
    drawStringLTR(widgetArea, invalidatedArea, stringVisuals, format, pArg);
 8002fec:	9301      	str	r3, [sp, #4]
 8002fee:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8002ff0:	9300      	str	r3, [sp, #0]
 8002ff2:	4621      	mov	r1, r4
 8002ff4:	9b08      	ldr	r3, [sp, #32]
 8002ff6:	f008 fa2c 	bl	800b452 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>
    va_end(pArg);
}
 8002ffa:	b006      	add	sp, #24
 8002ffc:	bd10      	pop	{r4, pc}
	...

08003000 <_ZN8touchgfx5Texts11setLanguageEt>:
touchgfx::LanguageId touchgfx::Texts::currentLanguage = static_cast<touchgfx::LanguageId>(0);
static const touchgfx::Unicode::UnicodeChar* currentLanguagePtr = 0;
static const uint32_t* currentLanguageIndices = 0;

void touchgfx::Texts::setLanguage(touchgfx::LanguageId id)
{
 8003000:	b538      	push	{r3, r4, r5, lr}
    const touchgfx::TypedText::TypedTextData* currentLanguageTypedText = 0;
    if (id < 1)
 8003002:	b9d8      	cbnz	r0, 800303c <_ZN8touchgfx5Texts11setLanguageEt+0x3c>
    {
        if (languagesArray[id] != 0)
 8003004:	4b11      	ldr	r3, [pc, #68]	; (800304c <_ZN8touchgfx5Texts11setLanguageEt+0x4c>)
 8003006:	4812      	ldr	r0, [pc, #72]	; (8003050 <_ZN8touchgfx5Texts11setLanguageEt+0x50>)
 8003008:	681b      	ldr	r3, [r3, #0]
 800300a:	4912      	ldr	r1, [pc, #72]	; (8003054 <_ZN8touchgfx5Texts11setLanguageEt+0x54>)
 800300c:	b1bb      	cbz	r3, 800303e <_ZN8touchgfx5Texts11setLanguageEt+0x3e>
        {
            //dynamic translation is added
            const TranslationHeader* translation = languagesArray[id];
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
 800300e:	681a      	ldr	r2, [r3, #0]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
 8003010:	689c      	ldr	r4, [r3, #8]
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
 8003012:	441a      	add	r2, r3
 8003014:	6002      	str	r2, [r0, #0]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
 8003016:	685a      	ldr	r2, [r3, #4]
 8003018:	441a      	add	r2, r3
 800301a:	600a      	str	r2, [r1, #0]
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
 800301c:	441c      	add	r4, r3
            currentLanguageIndices = staticLanguageIndices[id];
            currentLanguageTypedText = typedTextDatabaseArray[id];
        }
    }

    if (currentLanguageTypedText)
 800301e:	b16c      	cbz	r4, 800303c <_ZN8touchgfx5Texts11setLanguageEt+0x3c>
    {
        currentLanguage = id;
 8003020:	4b0d      	ldr	r3, [pc, #52]	; (8003058 <_ZN8touchgfx5Texts11setLanguageEt+0x58>)
 8003022:	2200      	movs	r2, #0
 8003024:	801a      	strh	r2, [r3, #0]
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
                                                       TypedTextDatabase::getFonts(), TypedTextDatabase::getInstanceSize());
 8003026:	f000 f835 	bl	8003094 <_ZN17TypedTextDatabase8getFontsEv>
 800302a:	4605      	mov	r5, r0
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
 800302c:	f000 f830 	bl	8003090 <_ZN17TypedTextDatabase15getInstanceSizeEv>
        typedTexts = data;
 8003030:	4b0a      	ldr	r3, [pc, #40]	; (800305c <_ZN8touchgfx5Texts11setLanguageEt+0x5c>)
 8003032:	601c      	str	r4, [r3, #0]
        fonts = f;
 8003034:	4b0a      	ldr	r3, [pc, #40]	; (8003060 <_ZN8touchgfx5Texts11setLanguageEt+0x60>)
 8003036:	601d      	str	r5, [r3, #0]
        numberOfTypedTexts = n;
 8003038:	4b0a      	ldr	r3, [pc, #40]	; (8003064 <_ZN8touchgfx5Texts11setLanguageEt+0x64>)
 800303a:	8018      	strh	r0, [r3, #0]
    }
}
 800303c:	bd38      	pop	{r3, r4, r5, pc}
            currentLanguagePtr = texts_all_languages;
 800303e:	4b0a      	ldr	r3, [pc, #40]	; (8003068 <_ZN8touchgfx5Texts11setLanguageEt+0x68>)
 8003040:	6003      	str	r3, [r0, #0]
            currentLanguageIndices = staticLanguageIndices[id];
 8003042:	4b0a      	ldr	r3, [pc, #40]	; (800306c <_ZN8touchgfx5Texts11setLanguageEt+0x6c>)
 8003044:	600b      	str	r3, [r1, #0]
            currentLanguageTypedText = typedTextDatabaseArray[id];
 8003046:	4b0a      	ldr	r3, [pc, #40]	; (8003070 <_ZN8touchgfx5Texts11setLanguageEt+0x70>)
 8003048:	681c      	ldr	r4, [r3, #0]
 800304a:	e7e8      	b.n	800301e <_ZN8touchgfx5Texts11setLanguageEt+0x1e>
 800304c:	20001600 	.word	0x20001600
 8003050:	20001604 	.word	0x20001604
 8003054:	20001608 	.word	0x20001608
 8003058:	2000160c 	.word	0x2000160c
 800305c:	200123a8 	.word	0x200123a8
 8003060:	200123b0 	.word	0x200123b0
 8003064:	200123ac 	.word	0x200123ac
 8003068:	0801e4c0 	.word	0x0801e4c0
 800306c:	0801e4ac 	.word	0x0801e4ac
 8003070:	0801e538 	.word	0x0801e538

08003074 <_ZNK8touchgfx5Texts7getTextEt>:
    languagesArray[id] = (const TranslationHeader*)translation;
}

const touchgfx::Unicode::UnicodeChar* touchgfx::Texts::getText(TypedTextId id) const
{
    return &currentLanguagePtr[currentLanguageIndices[id]];
 8003074:	4b04      	ldr	r3, [pc, #16]	; (8003088 <_ZNK8touchgfx5Texts7getTextEt+0x14>)
 8003076:	681b      	ldr	r3, [r3, #0]
 8003078:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 800307c:	4b03      	ldr	r3, [pc, #12]	; (800308c <_ZNK8touchgfx5Texts7getTextEt+0x18>)
 800307e:	681b      	ldr	r3, [r3, #0]
}
 8003080:	eb03 0040 	add.w	r0, r3, r0, lsl #1
 8003084:	4770      	bx	lr
 8003086:	bf00      	nop
 8003088:	20001608 	.word	0x20001608
 800308c:	20001604 	.word	0x20001604

08003090 <_ZN17TypedTextDatabase15getInstanceSizeEv>:
}

uint16_t getInstanceSize()
{
    return sizeof(typedText_database_DEFAULT) / sizeof(touchgfx::TypedText::TypedTextData);
}
 8003090:	2005      	movs	r0, #5
 8003092:	4770      	bx	lr

08003094 <_ZN17TypedTextDatabase8getFontsEv>:

const touchgfx::Font** getFonts()
{
    return touchgfx_fonts;
}
 8003094:	4800      	ldr	r0, [pc, #0]	; (8003098 <_ZN17TypedTextDatabase8getFontsEv+0x4>)
 8003096:	4770      	bx	lr
 8003098:	20001610 	.word	0x20001610

0800309c <_GLOBAL__sub_I_touchgfx_fonts>:
    case 2:
        touchgfx_fonts[2] = &(getFont_verdana_10_4bpp());
        break;
    }
}
}  // namespace TypedTextDatabase
 800309c:	b510      	push	{r4, lr}
    &(getFont_verdana_20_4bpp()),
 800309e:	f7ff fecb 	bl	8002e38 <_Z23getFont_verdana_20_4bppv>
};
 80030a2:	4c04      	ldr	r4, [pc, #16]	; (80030b4 <_GLOBAL__sub_I_touchgfx_fonts+0x18>)
 80030a4:	6020      	str	r0, [r4, #0]
    &(getFont_verdana_40_4bpp()),
 80030a6:	f7ff ff01 	bl	8002eac <_Z23getFont_verdana_40_4bppv>
};
 80030aa:	6060      	str	r0, [r4, #4]
    &(getFont_verdana_10_4bpp())
 80030ac:	f7ff fe8c 	bl	8002dc8 <_Z23getFont_verdana_10_4bppv>
};
 80030b0:	60a0      	str	r0, [r4, #8]
}  // namespace TypedTextDatabase
 80030b2:	bd10      	pop	{r4, pc}
 80030b4:	20001610 	.word	0x20001610

080030b8 <_ZN8touchgfx8Drawable11setPositionEssss>:
     * @param  width  The width of this Drawable.
     * @param  height The height of this Drawable.
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setPosition(int16_t x, int16_t y, int16_t width, int16_t height)
 80030b8:	b570      	push	{r4, r5, r6, lr}
 80030ba:	461e      	mov	r6, r3
    {
        setXY(x, y);
 80030bc:	6803      	ldr	r3, [r0, #0]
    virtual void setPosition(int16_t x, int16_t y, int16_t width, int16_t height)
 80030be:	f9bd 5010 	ldrsh.w	r5, [sp, #16]
        setXY(x, y);
 80030c2:	6b5b      	ldr	r3, [r3, #52]	; 0x34
    virtual void setPosition(int16_t x, int16_t y, int16_t width, int16_t height)
 80030c4:	4604      	mov	r4, r0
        setXY(x, y);
 80030c6:	4798      	blx	r3
        setWidth(width);
 80030c8:	6823      	ldr	r3, [r4, #0]
 80030ca:	4631      	mov	r1, r6
 80030cc:	4620      	mov	r0, r4
 80030ce:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 80030d0:	4790      	blx	r2
        setHeight(height);
 80030d2:	6823      	ldr	r3, [r4, #0]
 80030d4:	4629      	mov	r1, r5
 80030d6:	4620      	mov	r0, r4
 80030d8:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
    }
 80030da:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setHeight(height);
 80030de:	4718      	bx	r3

080030e0 <_ZN8touchgfx8Drawable4setXEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setX(int16_t x)
    {
        rect.x = x;
 80030e0:	8081      	strh	r1, [r0, #4]
    }
 80030e2:	4770      	bx	lr

080030e4 <_ZN8touchgfx8Drawable4setYEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setY(int16_t y)
    {
        rect.y = y;
 80030e4:	80c1      	strh	r1, [r0, #6]
    }
 80030e6:	4770      	bx	lr

080030e8 <_ZN8touchgfx8Drawable5setXYEss>:
     *
     * @see moveTo
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setXY(int16_t x, int16_t y)
 80030e8:	b570      	push	{r4, r5, r6, lr}
    {
        setX(x);
 80030ea:	6803      	ldr	r3, [r0, #0]
    virtual void setXY(int16_t x, int16_t y)
 80030ec:	4604      	mov	r4, r0
        setX(x);
 80030ee:	6adb      	ldr	r3, [r3, #44]	; 0x2c
    virtual void setXY(int16_t x, int16_t y)
 80030f0:	4615      	mov	r5, r2
        setX(x);
 80030f2:	4798      	blx	r3
        setY(y);
 80030f4:	6823      	ldr	r3, [r4, #0]
 80030f6:	4629      	mov	r1, r5
 80030f8:	4620      	mov	r0, r4
 80030fa:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    }
 80030fc:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setY(y);
 8003100:	4718      	bx	r3

08003102 <_ZN8touchgfx8Drawable8setWidthEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setWidth(int16_t width)
    {
        rect.width = width;
 8003102:	8101      	strh	r1, [r0, #8]
    }
 8003104:	4770      	bx	lr

08003106 <_ZN8touchgfx8Drawable9setHeightEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setHeight(int16_t height)
    {
        rect.height = height;
 8003106:	8141      	strh	r1, [r0, #10]
    }
 8003108:	4770      	bx	lr

0800310a <_ZN8touchgfx8Drawable20childGeometryChangedEv>:
     * one or more of its children has changed. Currently only used in ScrollableContainer
     * to redraw scrollbars when the size of the scrolling contents changes.
     */
    virtual void childGeometryChanged()
    {
    }
 800310a:	4770      	bx	lr

0800310c <_ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE>:
     *
     * @param  evt The ClickEvent received from the HAL.
     */
    virtual void handleClickEvent(const ClickEvent& evt)
    {
    }
 800310c:	4770      	bx	lr

0800310e <_ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE>:
     *
     * @param  evt The GestureEvent received from the HAL.
     */
    virtual void handleGestureEvent(const GestureEvent& evt)
    {
    }
 800310e:	4770      	bx	lr

08003110 <_ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE>:
     *
     * @param  evt The DragEvent received from the HAL.
     */
    virtual void handleDragEvent(const DragEvent& evt)
    {
    }
 8003110:	4770      	bx	lr

08003112 <_ZN8touchgfx8Drawable15handleTickEventEv>:
     *
     * @see Application::registerTimerWidget
     */
    virtual void handleTickEvent()
    {
    }
 8003112:	4770      	bx	lr

08003114 <_ZN8touchgfx8Drawable6moveToEss>:
     *
     * @note Will redraw the appropriate areas of the screen.
     */
    virtual void moveTo(int16_t x, int16_t y)
    {
        moveRelative(x - rect.x, y - rect.y);
 8003114:	88c3      	ldrh	r3, [r0, #6]
 8003116:	1ad2      	subs	r2, r2, r3
 8003118:	8883      	ldrh	r3, [r0, #4]
 800311a:	1ac9      	subs	r1, r1, r3
 800311c:	6803      	ldr	r3, [r0, #0]
    virtual void moveTo(int16_t x, int16_t y)
 800311e:	b410      	push	{r4}
        moveRelative(x - rect.x, y - rect.y);
 8003120:	6d5b      	ldr	r3, [r3, #84]	; 0x54
    }
 8003122:	f85d 4b04 	ldr.w	r4, [sp], #4
        moveRelative(x - rect.x, y - rect.y);
 8003126:	b212      	sxth	r2, r2
 8003128:	b209      	sxth	r1, r1
 800312a:	4718      	bx	r3

0800312c <_ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_>:
     * @note For TouchGFX internal use only.
     */
    void resetDrawChainCache()
    {
        // Resetting the cached indicators
        cachedVisibleRect.x = UNCACHED_INDICATOR;
 800312c:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8003130:	8183      	strh	r3, [r0, #12]
        cachedAbsX = UNCACHED_INDICATOR;
 8003132:	f04f 33ff 	mov.w	r3, #4294967295
 8003136:	6203      	str	r3, [r0, #32]
     * @note For TouchGFX internal use only.
     */
    virtual void setupDrawChain(const Rect& invalidatedArea, Drawable** nextPreviousElement)
    {
        resetDrawChainCache();
        nextDrawChainElement = *nextPreviousElement;
 8003138:	6813      	ldr	r3, [r2, #0]
 800313a:	61c3      	str	r3, [r0, #28]
        *nextPreviousElement = this;
 800313c:	6010      	str	r0, [r2, #0]
    }
 800313e:	4770      	bx	lr

08003140 <_ZN8touchgfx6Screen11setupScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void setupScreen()
    {
    }
 8003140:	4770      	bx	lr

08003142 <_ZN8touchgfx6Screen15afterTransitionEv>:
     *
     * @see Application::handleTickEvent
     */
    virtual void afterTransition()
    {
    }
 8003142:	4770      	bx	lr

08003144 <_ZN8touchgfx6Screen14tearDownScreenEv>:
     *
     * @see touchgfx::Application::switchScreen
     */
    virtual void tearDownScreen()
    {
    }
 8003144:	4770      	bx	lr

08003146 <_ZN8touchgfx6Screen15handleTickEventEv>:
     * Called by the Application on the current screen with a frequency of
     * Application::TICK_INTERVAL_MS.
     */
    virtual void handleTickEvent()
    {
    }
 8003146:	4770      	bx	lr

08003148 <_ZN8touchgfx6Screen14handleKeyEventEh>:
     *
     * @param  key The key to handle.
     */
    virtual void handleKeyEvent(uint8_t key)
    {
    }
 8003148:	4770      	bx	lr

0800314a <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE>:
     * @param       y    Not used since this Widget is the only "child".
     * @param [out] last Result, the address of the actual instance of the Widget.
     */
    virtual void getLastChild(int16_t x, int16_t y, Drawable** last)
    {
        if (isVisible() && isTouchable())
 800314a:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 800314e:	b11a      	cbz	r2, 8003158 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
 8003150:	f890 2024 	ldrb.w	r2, [r0, #36]	; 0x24
 8003154:	b102      	cbz	r2, 8003158 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
        {
            *last = this;
 8003156:	6018      	str	r0, [r3, #0]
        }
    }
 8003158:	4770      	bx	lr

0800315a <_ZN18mainScreenViewBaseD1Ev>:

class mainScreenViewBase : public touchgfx::View<mainScreenPresenter>
{
public:
    mainScreenViewBase();
    virtual ~mainScreenViewBase() {}
 800315a:	4770      	bx	lr

0800315c <_ZN18mainScreenViewBase24XAxisSliderValue_ChangedEi>:
     * Virtual Action Handlers
     */
    virtual void XAxisSliderValue_Changed(int value)
    {
        // Override and implement this function in mainScreen
    }
 800315c:	4770      	bx	lr

0800315e <_ZN18mainScreenViewBase27YAxisSlider_L_Value_ChangedEi>:

    virtual void YAxisSlider_L_Value_Changed(int value)
    {
        // Override and implement this function in mainScreen
    }
 800315e:	4770      	bx	lr

08003160 <_ZN18mainScreenViewBase38ManipulatorControlToggleButton_ClickedEv>:

    virtual void ManipulatorControlToggleButton_Clicked()
    {
        // Override and implement this function in mainScreen
    }
 8003160:	4770      	bx	lr

08003162 <_ZN18mainScreenViewBase27YAxisSlider_R_Value_ChangedEi>:

    virtual void YAxisSlider_R_Value_Changed(int value)
    {
        // Override and implement this function in mainScreen
    }
 8003162:	4770      	bx	lr

08003164 <_ZN18mainScreenViewBase11setupScreenEv>:
}

void mainScreenViewBase::setupScreen()
{

}
 8003164:	4770      	bx	lr

08003166 <_ZN8touchgfx8CallbackI18mainScreenViewBaseRKNS_6SliderEivED1Ev>:
struct Callback<dest_type, T1, T2, void> : public GenericCallback<T1, T2>
 8003166:	4770      	bx	lr

08003168 <_ZN8touchgfx8CallbackI18mainScreenViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8003168:	4770      	bx	lr

0800316a <_ZN8touchgfx8CallbackI18mainScreenViewBaseRKNS_6SliderEivE7executeES4_i>:
    virtual void execute(T1 t1, T2 t2)
 800316a:	b470      	push	{r4, r5, r6}
        (pobject->*pmemfun_2)(t1, t2);
 800316c:	68c6      	ldr	r6, [r0, #12]
 800316e:	6845      	ldr	r5, [r0, #4]
 8003170:	1074      	asrs	r4, r6, #1
    virtual void execute(T1 t1, T2 t2)
 8003172:	4603      	mov	r3, r0
        (pobject->*pmemfun_2)(t1, t2);
 8003174:	07f6      	lsls	r6, r6, #31
 8003176:	eb05 0004 	add.w	r0, r5, r4
 800317a:	689b      	ldr	r3, [r3, #8]
 800317c:	bf44      	itt	mi
 800317e:	592c      	ldrmi	r4, [r5, r4]
 8003180:	58e3      	ldrmi	r3, [r4, r3]
    }
 8003182:	bc70      	pop	{r4, r5, r6}
        (pobject->*pmemfun_2)(t1, t2);
 8003184:	4718      	bx	r3

08003186 <_ZNK8touchgfx8CallbackI18mainScreenViewBaseRKNS_6SliderEivE7isValidEv>:
        return (pobject != 0) && (pmemfun_2 != 0);
 8003186:	6843      	ldr	r3, [r0, #4]
 8003188:	b12b      	cbz	r3, 8003196 <_ZNK8touchgfx8CallbackI18mainScreenViewBaseRKNS_6SliderEivE7isValidEv+0x10>
 800318a:	6883      	ldr	r3, [r0, #8]
 800318c:	b92b      	cbnz	r3, 800319a <_ZNK8touchgfx8CallbackI18mainScreenViewBaseRKNS_6SliderEivE7isValidEv+0x14>
 800318e:	68c0      	ldr	r0, [r0, #12]
 8003190:	f000 0001 	and.w	r0, r0, #1
 8003194:	4770      	bx	lr
 8003196:	4618      	mov	r0, r3
 8003198:	4770      	bx	lr
 800319a:	2001      	movs	r0, #1
    }
 800319c:	4770      	bx	lr

0800319e <_ZN8touchgfx8CallbackI18mainScreenViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 800319e:	b430      	push	{r4, r5}
        (pobject->*pmemfun_1)(t1);
 80031a0:	68c5      	ldr	r5, [r0, #12]
 80031a2:	6844      	ldr	r4, [r0, #4]
 80031a4:	106a      	asrs	r2, r5, #1
    virtual void execute(T1 t1)
 80031a6:	4603      	mov	r3, r0
        (pobject->*pmemfun_1)(t1);
 80031a8:	07ed      	lsls	r5, r5, #31
 80031aa:	eb04 0002 	add.w	r0, r4, r2
 80031ae:	689b      	ldr	r3, [r3, #8]
 80031b0:	bf48      	it	mi
 80031b2:	58a2      	ldrmi	r2, [r4, r2]
    }
 80031b4:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun_1)(t1);
 80031b6:	bf48      	it	mi
 80031b8:	58d3      	ldrmi	r3, [r2, r3]
 80031ba:	4718      	bx	r3

080031bc <_ZNK8touchgfx8CallbackI18mainScreenViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun_1 != 0);
 80031bc:	6843      	ldr	r3, [r0, #4]
 80031be:	b12b      	cbz	r3, 80031cc <_ZNK8touchgfx8CallbackI18mainScreenViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 80031c0:	6883      	ldr	r3, [r0, #8]
 80031c2:	b92b      	cbnz	r3, 80031d0 <_ZNK8touchgfx8CallbackI18mainScreenViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 80031c4:	68c0      	ldr	r0, [r0, #12]
 80031c6:	f000 0001 	and.w	r0, r0, #1
 80031ca:	4770      	bx	lr
 80031cc:	4618      	mov	r0, r3
 80031ce:	4770      	bx	lr
 80031d0:	2001      	movs	r0, #1
    }
 80031d2:	4770      	bx	lr

080031d4 <_ZN8touchgfx8CallbackI18mainScreenViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80031d4:	b510      	push	{r4, lr}
 80031d6:	2110      	movs	r1, #16
 80031d8:	4604      	mov	r4, r0
 80031da:	f016 f9a3 	bl	8019524 <_ZdlPvj>
 80031de:	4620      	mov	r0, r4
 80031e0:	bd10      	pop	{r4, pc}

080031e2 <_ZN8touchgfx8CallbackI18mainScreenViewBaseRKNS_6SliderEivED0Ev>:
struct Callback<dest_type, T1, T2, void> : public GenericCallback<T1, T2>
 80031e2:	b510      	push	{r4, lr}
 80031e4:	2110      	movs	r1, #16
 80031e6:	4604      	mov	r4, r0
 80031e8:	f016 f99c 	bl	8019524 <_ZdlPvj>
 80031ec:	4620      	mov	r0, r4
 80031ee:	bd10      	pop	{r4, pc}

080031f0 <_ZN18mainScreenViewBaseD0Ev>:
    virtual ~mainScreenViewBase() {}
 80031f0:	b510      	push	{r4, lr}
 80031f2:	f240 5114 	movw	r1, #1300	; 0x514
 80031f6:	4604      	mov	r4, r0
 80031f8:	f016 f994 	bl	8019524 <_ZdlPvj>
 80031fc:	4620      	mov	r0, r4
 80031fe:	bd10      	pop	{r4, pc}

08003200 <_ZN18mainScreenViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void mainScreenViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &manipulatorControlToggleButton)
 8003200:	f100 029c 	add.w	r2, r0, #156	; 0x9c
 8003204:	428a      	cmp	r2, r1
 8003206:	d102      	bne.n	800320e <_ZN18mainScreenViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0xe>
    {
        //ManipulatorControlToggleButton_Clicked
        //When manipulatorControlToggleButton clicked call virtual function
        //Call ManipulatorControlToggleButton_Clicked
        ManipulatorControlToggleButton_Clicked();
 8003208:	6803      	ldr	r3, [r0, #0]
 800320a:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800320c:	4718      	bx	r3
    }
}
 800320e:	4770      	bx	lr

08003210 <_ZN18mainScreenViewBase33sliderValueChangedCallbackHandlerERKN8touchgfx6SliderEi>:

void mainScreenViewBase::sliderValueChangedCallbackHandler(const touchgfx::Slider& src, int value)
{
 8003210:	b410      	push	{r4}
 8003212:	460c      	mov	r4, r1
 8003214:	4611      	mov	r1, r2
    if (&src == &yAxisSlider_L)
 8003216:	f500 72a6 	add.w	r2, r0, #332	; 0x14c
 800321a:	4294      	cmp	r4, r2
 800321c:	d104      	bne.n	8003228 <_ZN18mainScreenViewBase33sliderValueChangedCallbackHandlerERKN8touchgfx6SliderEi+0x18>
    {
        //YAxisSlider_L_Value_Changed
        //When yAxisSlider_L value changed call virtual function
        //Call YAxisSlider_L_Value_Changed
        YAxisSlider_L_Value_Changed(value);
 800321e:	6803      	ldr	r3, [r0, #0]
 8003220:	6b1b      	ldr	r3, [r3, #48]	; 0x30
        //YAxisSlider_R_Value_Changed
        //When yAxisSlider_R value changed call virtual function
        //Call YAxisSlider_R_Value_Changed
        YAxisSlider_R_Value_Changed(value);
    }
}
 8003222:	f85d 4b04 	ldr.w	r4, [sp], #4
        YAxisSlider_R_Value_Changed(value);
 8003226:	4718      	bx	r3
    else if (&src == &xAxisSlider)
 8003228:	f500 7212 	add.w	r2, r0, #584	; 0x248
 800322c:	4294      	cmp	r4, r2
 800322e:	d102      	bne.n	8003236 <_ZN18mainScreenViewBase33sliderValueChangedCallbackHandlerERKN8touchgfx6SliderEi+0x26>
        XAxisSliderValue_Changed(value);
 8003230:	6803      	ldr	r3, [r0, #0]
 8003232:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8003234:	e7f5      	b.n	8003222 <_ZN18mainScreenViewBase33sliderValueChangedCallbackHandlerERKN8touchgfx6SliderEi+0x12>
    else if (&src == &yAxisSlider_R)
 8003236:	f500 7251 	add.w	r2, r0, #836	; 0x344
 800323a:	4294      	cmp	r4, r2
 800323c:	d102      	bne.n	8003244 <_ZN18mainScreenViewBase33sliderValueChangedCallbackHandlerERKN8touchgfx6SliderEi+0x34>
        YAxisSlider_R_Value_Changed(value);
 800323e:	6803      	ldr	r3, [r0, #0]
 8003240:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8003242:	e7ee      	b.n	8003222 <_ZN18mainScreenViewBase33sliderValueChangedCallbackHandlerERKN8touchgfx6SliderEi+0x12>
}
 8003244:	f85d 4b04 	ldr.w	r4, [sp], #4
 8003248:	4770      	bx	lr
	...

0800324c <_ZN8touchgfx8DrawableC1Ev>:
          visible(true)
 800324c:	4a09      	ldr	r2, [pc, #36]	; (8003274 <_ZN8touchgfx8DrawableC1Ev+0x28>)
 800324e:	6002      	str	r2, [r0, #0]
     * @param  width  The width.
     * @param  height The height.
     */
    Rect(int16_t x, int16_t y, int16_t width, int16_t height)
    {
        this->x = x;
 8003250:	2200      	movs	r2, #0
 8003252:	8082      	strh	r2, [r0, #4]
        this->y = y;
 8003254:	80c2      	strh	r2, [r0, #6]
        this->width = width;
 8003256:	8102      	strh	r2, [r0, #8]
        this->height = height;
 8003258:	8142      	strh	r2, [r0, #10]
        this->x = 0;
 800325a:	8182      	strh	r2, [r0, #12]
        this->y = 0;
 800325c:	81c2      	strh	r2, [r0, #14]
        this->width = 0;
 800325e:	8202      	strh	r2, [r0, #16]
        this->height = 0;
 8003260:	8242      	strh	r2, [r0, #18]
 8003262:	e9c0 2205 	strd	r2, r2, [r0, #20]
 8003266:	61c2      	str	r2, [r0, #28]
 8003268:	f880 2024 	strb.w	r2, [r0, #36]	; 0x24
 800326c:	2201      	movs	r2, #1
 800326e:	f880 2025 	strb.w	r2, [r0, #37]	; 0x25
    }
 8003272:	4770      	bx	lr
 8003274:	0801c6ec 	.word	0x0801c6ec

08003278 <_ZN8touchgfx8TextAreaC1Ev>:
 *       the pointer remains valid when drawing.
 */
class TextArea : public Widget
{
public:
    TextArea()
 8003278:	b510      	push	{r4, lr}
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE)
 800327a:	2226      	movs	r2, #38	; 0x26
    TextArea()
 800327c:	4604      	mov	r4, r0
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE)
 800327e:	2100      	movs	r1, #0
 8003280:	f016 fa05 	bl	801968e <memset>
class Widget : public Drawable
 8003284:	4620      	mov	r0, r4
 8003286:	f7ff ffe1 	bl	800324c <_ZN8touchgfx8DrawableC1Ev>
 800328a:	4b09      	ldr	r3, [pc, #36]	; (80032b0 <_ZN8touchgfx8TextAreaC1Ev+0x38>)
 800328c:	6023      	str	r3, [r4, #0]
        : typedTextId(id)
 800328e:	4b09      	ldr	r3, [pc, #36]	; (80032b4 <_ZN8touchgfx8TextAreaC1Ev+0x3c>)
 8003290:	62a3      	str	r3, [r4, #40]	; 0x28
 8003292:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8003296:	85a3      	strh	r3, [r4, #44]	; 0x2c
        color = col;
 8003298:	f44f 027f 	mov.w	r2, #16711680	; 0xff0000
 800329c:	2300      	movs	r3, #0
 800329e:	e9c4 320c 	strd	r3, r2, [r4, #48]	; 0x30
 80032a2:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38
 80032a6:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
    {
    }
 80032aa:	4620      	mov	r0, r4
 80032ac:	bd10      	pop	{r4, pc}
 80032ae:	bf00      	nop
 80032b0:	0801c358 	.word	0x0801c358
 80032b4:	0801abac 	.word	0x0801abac

080032b8 <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh>:
     *
     * @note This function is not available to call before the LCD has been setup, because the
     *       color depth is required. Consider using the function getColorFromRGB for a
     *       specific class, e.g. LCD16::getColorFromRGB().
     */
    static colortype getColorFrom24BitRGB(uint8_t red, uint8_t green, uint8_t blue)
 80032b8:	4613      	mov	r3, r2
        return instance;
 80032ba:	4a0c      	ldr	r2, [pc, #48]	; (80032ec <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh+0x34>)
 80032bc:	b570      	push	{r4, r5, r6, lr}
 80032be:	6814      	ldr	r4, [r2, #0]
 80032c0:	4605      	mov	r5, r0
    {
        assert(HAL::getInstance() && "Cannot set color before HAL is initialized");
 80032c2:	b92c      	cbnz	r4, 80032d0 <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh+0x18>
 80032c4:	4b0a      	ldr	r3, [pc, #40]	; (80032f0 <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh+0x38>)
 80032c6:	4a0b      	ldr	r2, [pc, #44]	; (80032f4 <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh+0x3c>)
 80032c8:	480b      	ldr	r0, [pc, #44]	; (80032f8 <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh+0x40>)
 80032ca:	2135      	movs	r1, #53	; 0x35
 80032cc:	f016 f956 	bl	801957c <__assert_func>
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 80032d0:	f894 2076 	ldrb.w	r2, [r4, #118]	; 0x76
 80032d4:	b10a      	cbz	r2, 80032da <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh+0x22>
 80032d6:	6ce0      	ldr	r0, [r4, #76]	; 0x4c
 80032d8:	b900      	cbnz	r0, 80032dc <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh+0x24>
            return instance->lcdRef;
 80032da:	68a0      	ldr	r0, [r4, #8]
        return HAL::lcd().getColorFrom24BitRGB(red, green, blue);
 80032dc:	6802      	ldr	r2, [r0, #0]
 80032de:	6a94      	ldr	r4, [r2, #40]	; 0x28
 80032e0:	460a      	mov	r2, r1
 80032e2:	46a4      	mov	ip, r4
 80032e4:	4629      	mov	r1, r5
    }
 80032e6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        return HAL::lcd().getColorFrom24BitRGB(red, green, blue);
 80032ea:	4760      	bx	ip
 80032ec:	20012338 	.word	0x20012338
 80032f0:	0801b1cc 	.word	0x0801b1cc
 80032f4:	0801b298 	.word	0x0801b298
 80032f8:	0801b20f 	.word	0x0801b20f

080032fc <_ZN18mainScreenViewBaseC1Ev>:
mainScreenViewBase::mainScreenViewBase() :
 80032fc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003300:	4604      	mov	r4, r0
 8003302:	b091      	sub	sp, #68	; 0x44
        : presenter(0)
 8003304:	f009 fca0 	bl	800cc48 <_ZN8touchgfx6ScreenC1Ev>
    sliderValueChangedCallback(this, &mainScreenViewBase::sliderValueChangedCallbackHandler)
 8003308:	4622      	mov	r2, r4
 800330a:	2500      	movs	r5, #0
 800330c:	4bde      	ldr	r3, [pc, #888]	; (8003688 <_ZN18mainScreenViewBaseC1Ev+0x38c>)
 800330e:	63e5      	str	r5, [r4, #60]	; 0x3c
 8003310:	f842 3b40 	str.w	r3, [r2], #64
class Box : public Widget
{
public:
    /** Construct a new Box with a default alpha value of 255 (solid) */
    Box()
        : Widget(), alpha(255), color(0), reportAsSolid(false)
 8003314:	f04f 0926 	mov.w	r9, #38	; 0x26
 8003318:	4613      	mov	r3, r2
 800331a:	4629      	mov	r1, r5
 800331c:	9205      	str	r2, [sp, #20]
 800331e:	4618      	mov	r0, r3
 8003320:	464a      	mov	r2, r9
 8003322:	f016 f9b4 	bl	801968e <memset>
 8003326:	9805      	ldr	r0, [sp, #20]
 8003328:	f7ff ff90 	bl	800324c <_ZN8touchgfx8DrawableC1Ev>
 800332c:	4bd7      	ldr	r3, [pc, #860]	; (800368c <_ZN18mainScreenViewBaseC1Ev+0x390>)
 800332e:	6423      	str	r3, [r4, #64]	; 0x40
     * array.
     *
     * @param  id (Optional) The unique bitmap identifier.
     */
    explicit Bitmap(const BitmapId id = BITMAP_INVALID)
        : bitmapId(id)
 8003330:	ae10      	add	r6, sp, #64	; 0x40
 8003332:	f104 0370 	add.w	r3, r4, #112	; 0x70
 8003336:	f04f 08ff 	mov.w	r8, #255	; 0xff
 800333a:	f64f 77ff 	movw	r7, #65535	; 0xffff
     * @param  bmp (Optional) The bitmap to display.
     *
     * @see setBitmap
     */
    Image(const Bitmap& bmp = Bitmap())
        : Widget(), alpha(255)
 800333e:	464a      	mov	r2, r9
 8003340:	4629      	mov	r1, r5
 8003342:	f884 8066 	strb.w	r8, [r4, #102]	; 0x66
 8003346:	66a5      	str	r5, [r4, #104]	; 0x68
 8003348:	f884 506c 	strb.w	r5, [r4, #108]	; 0x6c
 800334c:	4618      	mov	r0, r3
 800334e:	f826 7d08 	strh.w	r7, [r6, #-8]!
 8003352:	9303      	str	r3, [sp, #12]
 8003354:	f016 f99b 	bl	801968e <memset>
 8003358:	9803      	ldr	r0, [sp, #12]
 800335a:	f7ff ff77 	bl	800324c <_ZN8touchgfx8DrawableC1Ev>
 800335e:	4bcc      	ldr	r3, [pc, #816]	; (8003690 <_ZN18mainScreenViewBaseC1Ev+0x394>)
 8003360:	6723      	str	r3, [r4, #112]	; 0x70
 8003362:	f8a4 7096 	strh.w	r7, [r4, #150]	; 0x96
 8003366:	f884 7098 	strb.w	r7, [r4, #152]	; 0x98
    {
        setBitmap(bmp);
 800336a:	4631      	mov	r1, r6
 800336c:	9803      	ldr	r0, [sp, #12]
 800336e:	f007 fc08 	bl	800ab82 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8003372:	f104 039c 	add.w	r3, r4, #156	; 0x9c
class AbstractButton : public Widget
{
public:
    /** Sets this Widget touchable so the user can interact with buttons. */
    AbstractButton()
        : Widget(), action(), pressed(false)
 8003376:	464a      	mov	r2, r9
 8003378:	4629      	mov	r1, r5
 800337a:	4618      	mov	r0, r3
 800337c:	9304      	str	r3, [sp, #16]
 800337e:	f016 f986 	bl	801968e <memset>
 8003382:	9804      	ldr	r0, [sp, #16]
 8003384:	f7ff ff62 	bl	800324c <_ZN8touchgfx8DrawableC1Ev>
        touchable = touch;
 8003388:	f04f 0301 	mov.w	r3, #1
 800338c:	f884 30c0 	strb.w	r3, [r4, #192]	; 0xc0
 * A ToggleButton is a Button specialization that swaps the two bitmaps when clicked, such that
 * the previous "pressed" bitmap, now becomes the one displayed when button is not
 * pressed. This can by used to give the effect of a button that can be pressed in and
 * when it is subsequently pressed, it will pop back out.
 */
class ToggleButton : public Button
 8003390:	4bc0      	ldr	r3, [pc, #768]	; (8003694 <_ZN18mainScreenViewBaseC1Ev+0x398>)
 8003392:	f8c4 309c 	str.w	r3, [r4, #156]	; 0x9c
 8003396:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 800339a:	f8c4 50c4 	str.w	r5, [r4, #196]	; 0xc4
 800339e:	f884 50c8 	strb.w	r5, [r4, #200]	; 0xc8
 80033a2:	f8a4 70ca 	strh.w	r7, [r4, #202]	; 0xca
 80033a6:	f8a4 70cc 	strh.w	r7, [r4, #204]	; 0xcc
 */
class Button : public AbstractButton
{
public:
    Button()
        : AbstractButton(), up(), down(), alpha(255)
 80033aa:	f884 80ce 	strb.w	r8, [r4, #206]	; 0xce
 80033ae:	f8a4 70d0 	strh.w	r7, [r4, #208]	; 0xd0
 80033b2:	4618      	mov	r0, r3
 80033b4:	9306      	str	r3, [sp, #24]
 80033b6:	f7ff ff5f 	bl	8003278 <_ZN8touchgfx8TextAreaC1Ev>
 80033ba:	f504 7388 	add.w	r3, r4, #272	; 0x110
 80033be:	f504 7ba6 	add.w	fp, r4, #332	; 0x14c
 80033c2:	4618      	mov	r0, r3
 80033c4:	f504 7a12 	add.w	sl, r4, #584	; 0x248
 80033c8:	9307      	str	r3, [sp, #28]
 80033ca:	f7ff ff55 	bl	8003278 <_ZN8touchgfx8TextAreaC1Ev>
 80033ce:	4658      	mov	r0, fp
 80033d0:	f504 7951 	add.w	r9, r4, #836	; 0x344
 80033d4:	f006 f988 	bl	80096e8 <_ZN8touchgfx6SliderC1Ev>
 80033d8:	4650      	mov	r0, sl
 80033da:	f006 f985 	bl	80096e8 <_ZN8touchgfx6SliderC1Ev>
 80033de:	4648      	mov	r0, r9
 80033e0:	f006 f982 	bl	80096e8 <_ZN8touchgfx6SliderC1Ev>
 80033e4:	f504 6388 	add.w	r3, r4, #1088	; 0x440
 80033e8:	4618      	mov	r0, r3
 80033ea:	9308      	str	r3, [sp, #32]
 80033ec:	f7ff ff44 	bl	8003278 <_ZN8touchgfx8TextAreaC1Ev>
 80033f0:	f204 437c 	addw	r3, r4, #1148	; 0x47c
 80033f4:	4618      	mov	r0, r3
 80033f6:	9309      	str	r3, [sp, #36]	; 0x24
 80033f8:	f7ff ff3e 	bl	8003278 <_ZN8touchgfx8TextAreaC1Ev>
 80033fc:	f504 6397 	add.w	r3, r4, #1208	; 0x4b8
 8003400:	4618      	mov	r0, r3
 8003402:	930a      	str	r3, [sp, #40]	; 0x28
 8003404:	f7ff ff38 	bl	8003278 <_ZN8touchgfx8TextAreaC1Ev>
    {
 8003408:	4ba3      	ldr	r3, [pc, #652]	; (8003698 <_ZN18mainScreenViewBaseC1Ev+0x39c>)
 800340a:	f8c4 34f4 	str.w	r3, [r4, #1268]	; 0x4f4
        this->pmemfun_1 = pmemfun_1;
 800340e:	4ba3      	ldr	r3, [pc, #652]	; (800369c <_ZN18mainScreenViewBaseC1Ev+0x3a0>)
 8003410:	f8c4 34fc 	str.w	r3, [r4, #1276]	; 0x4fc
    {
 8003414:	4ba2      	ldr	r3, [pc, #648]	; (80036a0 <_ZN18mainScreenViewBaseC1Ev+0x3a4>)
 8003416:	f8c4 3504 	str.w	r3, [r4, #1284]	; 0x504
        this->pmemfun_2 = pmemfun_2;
 800341a:	4ba2      	ldr	r3, [pc, #648]	; (80036a4 <_ZN18mainScreenViewBaseC1Ev+0x3a8>)
 800341c:	f8c4 350c 	str.w	r3, [r4, #1292]	; 0x50c
    __background.setPosition(0, 0, 240, 320);
 8003420:	f44f 73a0 	mov.w	r3, #320	; 0x140
        this->pmemfun_1 = pmemfun_1;
 8003424:	f8c4 5500 	str.w	r5, [r4, #1280]	; 0x500
        this->pmemfun_2 = pmemfun_2;
 8003428:	f8c4 5510 	str.w	r5, [r4, #1296]	; 0x510
 800342c:	9300      	str	r3, [sp, #0]
 800342e:	462a      	mov	r2, r5
 8003430:	23f0      	movs	r3, #240	; 0xf0
 8003432:	4629      	mov	r1, r5
 8003434:	9805      	ldr	r0, [sp, #20]
        this->pobject = pobject;
 8003436:	f8c4 44f8 	str.w	r4, [r4, #1272]	; 0x4f8
        this->pobject = pobject;
 800343a:	f8c4 4508 	str.w	r4, [r4, #1288]	; 0x508
 800343e:	f7ff fe3b 	bl	80030b8 <_ZN8touchgfx8Drawable11setPositionEssss>
    __background.setColor(touchgfx::Color::getColorFrom24BitRGB(0, 0, 0));
 8003442:	462a      	mov	r2, r5
 8003444:	4629      	mov	r1, r5
 8003446:	4628      	mov	r0, r5
 8003448:	f7ff ff36 	bl	80032b8 <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh>
    backgroundImage.setXY(0, 0);
 800344c:	462a      	mov	r2, r5
     *
     * @see getColor, Color::getColorFrom24BitRGB
     */
    void setColor(colortype color)
    {
        this->color = color;
 800344e:	66a0      	str	r0, [r4, #104]	; 0x68
 8003450:	4629      	mov	r1, r5
 8003452:	9803      	ldr	r0, [sp, #12]
 8003454:	f7ff fe48 	bl	80030e8 <_ZN8touchgfx8Drawable5setXYEss>
    backgroundImage.setBitmap(touchgfx::Bitmap(BITMAP_BLUE_BACKGROUNDS_MAIN_BG_PORTRAIT_240X320PX_ID));
 8003458:	4631      	mov	r1, r6
 800345a:	9803      	ldr	r0, [sp, #12]
 800345c:	f8ad 5038 	strh.w	r5, [sp, #56]	; 0x38
 8003460:	f007 fb8f 	bl	800ab82 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    manipulatorControlToggleButton.setXY(72, 141);
 8003464:	9804      	ldr	r0, [sp, #16]
 8003466:	228d      	movs	r2, #141	; 0x8d
 8003468:	2148      	movs	r1, #72	; 0x48
 800346a:	f7ff fe3d 	bl	80030e8 <_ZN8touchgfx8Drawable5setXYEss>
 800346e:	2305      	movs	r3, #5
 8003470:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 8003474:	2306      	movs	r3, #6
{
public:

    virtual void setBitmaps(const Bitmap& bmpReleased, const Bitmap& bmpPressed)
    {
        originalPressed = bmpPressed;
 8003476:	f8a4 30d0 	strh.w	r3, [r4, #208]	; 0xd0
        Button::setBitmaps(bmpReleased, bmpPressed);
 800347a:	4632      	mov	r2, r6
 800347c:	a90d      	add	r1, sp, #52	; 0x34
 800347e:	9804      	ldr	r0, [sp, #16]
 8003480:	f8ad 3038 	strh.w	r3, [sp, #56]	; 0x38
 8003484:	f007 fac6 	bl	800aa14 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
    manipulatorControlToggleButton.setAction(buttonCallback);
 8003488:	f204 43f4 	addw	r3, r4, #1268	; 0x4f4
     *
     * @see GenericCallback, handleClickEvent, ClickEvent
     */
    void setAction(GenericCallback<const AbstractButton&>& callback)
    {
        action = &callback;
 800348c:	f8c4 30c4 	str.w	r3, [r4, #196]	; 0xc4
    titleText.setXY(23, 15);
 8003490:	9806      	ldr	r0, [sp, #24]
 8003492:	220f      	movs	r2, #15
 8003494:	2117      	movs	r1, #23
 8003496:	f7ff fe27 	bl	80030e8 <_ZN8touchgfx8Drawable5setXYEss>
    titleText.setColor(touchgfx::Color::getColorFrom24BitRGB(0, 0, 0));
 800349a:	462a      	mov	r2, r5
 800349c:	4629      	mov	r1, r5
 800349e:	4628      	mov	r0, r5
 80034a0:	f7ff ff0a 	bl	80032b8 <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh>
 80034a4:	4b80      	ldr	r3, [pc, #512]	; (80036a8 <_ZN18mainScreenViewBaseC1Ev+0x3ac>)
     *
     * @param  color The color to use.
     */
    FORCE_INLINE_FUNCTION void setColor(colortype color)
    {
        this->color = color;
 80034a6:	f8c4 0104 	str.w	r0, [r4, #260]	; 0x104
     *
     * @see getLinespacing
     */
    FORCE_INLINE_FUNCTION void setLinespacing(int16_t space)
    {
        linespace = space;
 80034aa:	f8a4 5108 	strh.w	r5, [r4, #264]	; 0x108
    titleText.setTypedText(touchgfx::TypedText(T_SINGLEUSEID1));
 80034ae:	4631      	mov	r1, r6
 80034b0:	9806      	ldr	r0, [sp, #24]
 80034b2:	930e      	str	r3, [sp, #56]	; 0x38
 80034b4:	461f      	mov	r7, r3
 80034b6:	f8ad 503c 	strh.w	r5, [sp, #60]	; 0x3c
 80034ba:	f007 fa69 	bl	800a990 <_ZN8touchgfx8TextArea12setTypedTextENS_9TypedTextE>
    manipulatorText.setXY(61, 76);
 80034be:	9807      	ldr	r0, [sp, #28]
 80034c0:	224c      	movs	r2, #76	; 0x4c
 80034c2:	213d      	movs	r1, #61	; 0x3d
 80034c4:	f7ff fe10 	bl	80030e8 <_ZN8touchgfx8Drawable5setXYEss>
    manipulatorText.setColor(touchgfx::Color::getColorFrom24BitRGB(0, 0, 0));
 80034c8:	462a      	mov	r2, r5
 80034ca:	4629      	mov	r1, r5
 80034cc:	4628      	mov	r0, r5
 80034ce:	f7ff fef3 	bl	80032b8 <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh>
 80034d2:	f8a4 5144 	strh.w	r5, [r4, #324]	; 0x144
        this->color = color;
 80034d6:	f8c4 0140 	str.w	r0, [r4, #320]	; 0x140
 80034da:	f04f 0201 	mov.w	r2, #1
    manipulatorText.setTypedText(touchgfx::TypedText(T_SINGLEUSEID2));
 80034de:	4631      	mov	r1, r6
 80034e0:	9807      	ldr	r0, [sp, #28]
 80034e2:	970e      	str	r7, [sp, #56]	; 0x38
 80034e4:	f8ad 203c 	strh.w	r2, [sp, #60]	; 0x3c
 80034e8:	f007 fa52 	bl	800a990 <_ZN8touchgfx8TextArea12setTypedTextENS_9TypedTextE>
    yAxisSlider_L.setXY(23, 52);
 80034ec:	4658      	mov	r0, fp
 80034ee:	2234      	movs	r2, #52	; 0x34
 80034f0:	2117      	movs	r1, #23
 80034f2:	f7ff fdf9 	bl	80030e8 <_ZN8touchgfx8Drawable5setXYEss>
 80034f6:	f04f 0804 	mov.w	r8, #4
 80034fa:	2703      	movs	r7, #3
    yAxisSlider_L.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_SLIDER_VERTICAL_SMALL_SLIDER3_VERTICAL_ROUND_BACK_ID), touchgfx::Bitmap(BITMAP_BLUE_SLIDER_VERTICAL_SMALL_SLIDER3_VERTICAL_ROUND_BACK_ID), touchgfx::Bitmap(BITMAP_BLUE_SLIDER_VERTICAL_SMALL_INDICATORS_SLIDER3_VERTICAL_ROUND_NOB_ID));
 80034fc:	4633      	mov	r3, r6
 80034fe:	aa0d      	add	r2, sp, #52	; 0x34
 8003500:	a90c      	add	r1, sp, #48	; 0x30
 8003502:	4658      	mov	r0, fp
 8003504:	f8ad 8030 	strh.w	r8, [sp, #48]	; 0x30
 8003508:	f8ad 8034 	strh.w	r8, [sp, #52]	; 0x34
 800350c:	f8ad 7038 	strh.w	r7, [sp, #56]	; 0x38
 8003510:	f006 f93e 	bl	8009790 <_ZN8touchgfx6Slider10setBitmapsERKNS_6BitmapES3_S3_>
    yAxisSlider_L.setupVerticalSlider(7, 3, 0, 0, 125);
 8003514:	227d      	movs	r2, #125	; 0x7d
 8003516:	462b      	mov	r3, r5
 8003518:	e9cd 5200 	strd	r5, r2, [sp]
 800351c:	4658      	mov	r0, fp
 800351e:	463a      	mov	r2, r7
 8003520:	2107      	movs	r1, #7
 8003522:	f005 ffdb 	bl	80094dc <_ZN8touchgfx6Slider19setupVerticalSliderEttttt>
    yAxisSlider_L.setValueRange(0, 100);
 8003526:	2264      	movs	r2, #100	; 0x64
 8003528:	4629      	mov	r1, r5
 800352a:	4658      	mov	r0, fp
 800352c:	f005 fed5 	bl	80092da <_ZN8touchgfx6Slider13setValueRangeEii>
    yAxisSlider_L.setValue(0);
 8003530:	4629      	mov	r1, r5
 8003532:	4658      	mov	r0, fp
 8003534:	f005 fe5d 	bl	80091f2 <_ZN8touchgfx6Slider8setValueEi>
    yAxisSlider_L.setNewValueCallback(sliderValueChangedCallback);
 8003538:	f204 5204 	addw	r2, r4, #1284	; 0x504
 800353c:	920b      	str	r2, [sp, #44]	; 0x2c
     *
     * @see GenericCallback
     */
    void setNewValueCallback(GenericCallback<const Slider&, int>& callback)
    {
        newValueCallback = &callback;
 800353e:	f8c4 2244 	str.w	r2, [r4, #580]	; 0x244
    xAxisSlider.setXY(31, 261);
 8003542:	4650      	mov	r0, sl
 8003544:	f240 1205 	movw	r2, #261	; 0x105
 8003548:	211f      	movs	r1, #31
 800354a:	f7ff fdcd 	bl	80030e8 <_ZN8touchgfx8Drawable5setXYEss>
 800354e:	f04f 0101 	mov.w	r1, #1
 8003552:	f04f 0202 	mov.w	r2, #2
 8003556:	f8ad 1038 	strh.w	r1, [sp, #56]	; 0x38
    xAxisSlider.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_SLIDER_HORIZONTAL_SMALL_SLIDER_HORIZONTAL_SMALL_ROUND_BACK_ID), touchgfx::Bitmap(BITMAP_BLUE_SLIDER_HORIZONTAL_SMALL_SLIDER_HORIZONTAL_SMALL_ROUND_BACK_ID), touchgfx::Bitmap(BITMAP_BLUE_SLIDER_HORIZONTAL_SMALL_INDICATORS_SLIDER_HORIZONTAL_SMALL_ROUND_KNOB_ID));
 800355a:	a90d      	add	r1, sp, #52	; 0x34
 800355c:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
 8003560:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
 8003564:	4633      	mov	r3, r6
 8003566:	460a      	mov	r2, r1
 8003568:	4650      	mov	r0, sl
 800356a:	a90c      	add	r1, sp, #48	; 0x30
 800356c:	f006 f910 	bl	8009790 <_ZN8touchgfx6Slider10setBitmapsERKNS_6BitmapES3_S3_>
    xAxisSlider.setupHorizontalSlider(3, 7, 0, 0, 125);
 8003570:	217d      	movs	r1, #125	; 0x7d
 8003572:	462b      	mov	r3, r5
 8003574:	e9cd 5100 	strd	r5, r1, [sp]
 8003578:	4650      	mov	r0, sl
 800357a:	4639      	mov	r1, r7
 800357c:	2207      	movs	r2, #7
 800357e:	f005 ff49 	bl	8009414 <_ZN8touchgfx6Slider21setupHorizontalSliderEttttt>
    xAxisSlider.setValueRange(0, 100);
 8003582:	2264      	movs	r2, #100	; 0x64
 8003584:	4629      	mov	r1, r5
 8003586:	4650      	mov	r0, sl
 8003588:	f005 fea7 	bl	80092da <_ZN8touchgfx6Slider13setValueRangeEii>
    xAxisSlider.setValue(50);
 800358c:	4650      	mov	r0, sl
 800358e:	2132      	movs	r1, #50	; 0x32
 8003590:	f005 fe2f 	bl	80091f2 <_ZN8touchgfx6Slider8setValueEi>
 8003594:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8003596:	f8c4 2340 	str.w	r2, [r4, #832]	; 0x340
    yAxisSlider_R.setXY(183, 52);
 800359a:	4648      	mov	r0, r9
 800359c:	2234      	movs	r2, #52	; 0x34
 800359e:	21b7      	movs	r1, #183	; 0xb7
 80035a0:	f7ff fda2 	bl	80030e8 <_ZN8touchgfx8Drawable5setXYEss>
    yAxisSlider_R.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_SLIDER_VERTICAL_SMALL_SLIDER3_VERTICAL_ROUND_BACK_ID), touchgfx::Bitmap(BITMAP_BLUE_SLIDER_VERTICAL_SMALL_SLIDER3_VERTICAL_ROUND_BACK_ID), touchgfx::Bitmap(BITMAP_BLUE_SLIDER_VERTICAL_SMALL_INDICATORS_SLIDER3_VERTICAL_ROUND_NOB_ID));
 80035a4:	a90d      	add	r1, sp, #52	; 0x34
 80035a6:	4633      	mov	r3, r6
 80035a8:	460a      	mov	r2, r1
 80035aa:	4648      	mov	r0, r9
 80035ac:	a90c      	add	r1, sp, #48	; 0x30
 80035ae:	f8ad 8030 	strh.w	r8, [sp, #48]	; 0x30
 80035b2:	f8ad 8034 	strh.w	r8, [sp, #52]	; 0x34
 80035b6:	f8ad 7038 	strh.w	r7, [sp, #56]	; 0x38
 80035ba:	f006 f8e9 	bl	8009790 <_ZN8touchgfx6Slider10setBitmapsERKNS_6BitmapES3_S3_>
    yAxisSlider_R.setupVerticalSlider(7, 3, 0, 0, 125);
 80035be:	217d      	movs	r1, #125	; 0x7d
 80035c0:	462b      	mov	r3, r5
 80035c2:	e9cd 5100 	strd	r5, r1, [sp]
 80035c6:	463a      	mov	r2, r7
 80035c8:	4648      	mov	r0, r9
 80035ca:	2107      	movs	r1, #7
 80035cc:	f005 ff86 	bl	80094dc <_ZN8touchgfx6Slider19setupVerticalSliderEttttt>
    yAxisSlider_R.setValueRange(0, 100);
 80035d0:	2264      	movs	r2, #100	; 0x64
 80035d2:	4629      	mov	r1, r5
 80035d4:	4648      	mov	r0, r9
 80035d6:	f005 fe80 	bl	80092da <_ZN8touchgfx6Slider13setValueRangeEii>
    yAxisSlider_R.setValue(0);
 80035da:	4629      	mov	r1, r5
 80035dc:	4648      	mov	r0, r9
 80035de:	f005 fe08 	bl	80091f2 <_ZN8touchgfx6Slider8setValueEi>
 80035e2:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80035e4:	f8c4 243c 	str.w	r2, [r4, #1084]	; 0x43c
    leftText.setXY(21, 239);
 80035e8:	9808      	ldr	r0, [sp, #32]
 80035ea:	22ef      	movs	r2, #239	; 0xef
 80035ec:	2115      	movs	r1, #21
 80035ee:	f7ff fd7b 	bl	80030e8 <_ZN8touchgfx8Drawable5setXYEss>
    leftText.setColor(touchgfx::Color::getColorFrom24BitRGB(0, 0, 0));
 80035f2:	462a      	mov	r2, r5
 80035f4:	4629      	mov	r1, r5
 80035f6:	4628      	mov	r0, r5
 80035f8:	f7ff fe5e 	bl	80032b8 <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh>
 80035fc:	4b2a      	ldr	r3, [pc, #168]	; (80036a8 <_ZN18mainScreenViewBaseC1Ev+0x3ac>)
 80035fe:	f8c4 0470 	str.w	r0, [r4, #1136]	; 0x470
        linespace = space;
 8003602:	f8a4 5474 	strh.w	r5, [r4, #1140]	; 0x474
 8003606:	f04f 0202 	mov.w	r2, #2
    leftText.setTypedText(touchgfx::TypedText(T_SINGLEUSEID3));
 800360a:	4631      	mov	r1, r6
 800360c:	9808      	ldr	r0, [sp, #32]
 800360e:	930e      	str	r3, [sp, #56]	; 0x38
 8003610:	f8ad 203c 	strh.w	r2, [sp, #60]	; 0x3c
 8003614:	f007 f9bc 	bl	800a990 <_ZN8touchgfx8TextArea12setTypedTextENS_9TypedTextE>
    rightText.setXY(174, 239);
 8003618:	9809      	ldr	r0, [sp, #36]	; 0x24
 800361a:	22ef      	movs	r2, #239	; 0xef
 800361c:	21ae      	movs	r1, #174	; 0xae
 800361e:	f7ff fd63 	bl	80030e8 <_ZN8touchgfx8Drawable5setXYEss>
    rightText.setColor(touchgfx::Color::getColorFrom24BitRGB(0, 0, 0));
 8003622:	462a      	mov	r2, r5
 8003624:	4629      	mov	r1, r5
 8003626:	4628      	mov	r0, r5
 8003628:	f7ff fe46 	bl	80032b8 <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh>
 800362c:	4b1e      	ldr	r3, [pc, #120]	; (80036a8 <_ZN18mainScreenViewBaseC1Ev+0x3ac>)
        this->color = color;
 800362e:	f8c4 04ac 	str.w	r0, [r4, #1196]	; 0x4ac
        linespace = space;
 8003632:	f8a4 54b0 	strh.w	r5, [r4, #1200]	; 0x4b0
    rightText.setTypedText(touchgfx::TypedText(T_SINGLEUSEID4));
 8003636:	4631      	mov	r1, r6
 8003638:	9809      	ldr	r0, [sp, #36]	; 0x24
 800363a:	930e      	str	r3, [sp, #56]	; 0x38
 800363c:	f8ad 703c 	strh.w	r7, [sp, #60]	; 0x3c
 8003640:	f007 f9a6 	bl	800a990 <_ZN8touchgfx8TextArea12setTypedTextENS_9TypedTextE>
    baseText.setXY(96, 295);
 8003644:	980a      	ldr	r0, [sp, #40]	; 0x28
 8003646:	f240 1227 	movw	r2, #295	; 0x127
 800364a:	2160      	movs	r1, #96	; 0x60
 800364c:	f7ff fd4c 	bl	80030e8 <_ZN8touchgfx8Drawable5setXYEss>
    baseText.setColor(touchgfx::Color::getColorFrom24BitRGB(0, 0, 0));
 8003650:	462a      	mov	r2, r5
 8003652:	4629      	mov	r1, r5
 8003654:	4628      	mov	r0, r5
 8003656:	f7ff fe2f 	bl	80032b8 <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh>
 800365a:	4b13      	ldr	r3, [pc, #76]	; (80036a8 <_ZN18mainScreenViewBaseC1Ev+0x3ac>)
        this->color = color;
 800365c:	f8c4 04e8 	str.w	r0, [r4, #1256]	; 0x4e8
        linespace = space;
 8003660:	f8a4 54ec 	strh.w	r5, [r4, #1260]	; 0x4ec
    baseText.setTypedText(touchgfx::TypedText(T_SINGLEUSEID5));
 8003664:	4631      	mov	r1, r6
     * @note Must not be called with a Drawable that was already added to the screen. If in doubt,
     *       call remove() first.
     */
    void add(Drawable& d)
    {
        container.add(d);
 8003666:	eb04 0508 	add.w	r5, r4, r8
 800366a:	980a      	ldr	r0, [sp, #40]	; 0x28
 800366c:	930e      	str	r3, [sp, #56]	; 0x38
 800366e:	f8ad 803c 	strh.w	r8, [sp, #60]	; 0x3c
 8003672:	f007 f98d 	bl	800a990 <_ZN8touchgfx8TextArea12setTypedTextENS_9TypedTextE>
 8003676:	9905      	ldr	r1, [sp, #20]
 8003678:	4628      	mov	r0, r5
 800367a:	f005 fc7b 	bl	8008f74 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800367e:	9903      	ldr	r1, [sp, #12]
 8003680:	4628      	mov	r0, r5
 8003682:	f005 fc77 	bl	8008f74 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8003686:	e011      	b.n	80036ac <_ZN18mainScreenViewBaseC1Ev+0x3b0>
 8003688:	0801b25c 	.word	0x0801b25c
 800368c:	0801c404 	.word	0x0801c404
 8003690:	0801c504 	.word	0x0801c504
 8003694:	0801c228 	.word	0x0801c228
 8003698:	0801b1a4 	.word	0x0801b1a4
 800369c:	08003201 	.word	0x08003201
 80036a0:	0801b1bc 	.word	0x0801b1bc
 80036a4:	08003211 	.word	0x08003211
 80036a8:	0801abac 	.word	0x0801abac
 80036ac:	9904      	ldr	r1, [sp, #16]
 80036ae:	4628      	mov	r0, r5
 80036b0:	f005 fc60 	bl	8008f74 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80036b4:	9906      	ldr	r1, [sp, #24]
 80036b6:	4628      	mov	r0, r5
 80036b8:	f005 fc5c 	bl	8008f74 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80036bc:	9907      	ldr	r1, [sp, #28]
 80036be:	4628      	mov	r0, r5
 80036c0:	f005 fc58 	bl	8008f74 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80036c4:	4659      	mov	r1, fp
 80036c6:	4628      	mov	r0, r5
 80036c8:	f005 fc54 	bl	8008f74 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80036cc:	4651      	mov	r1, sl
 80036ce:	4628      	mov	r0, r5
 80036d0:	f005 fc50 	bl	8008f74 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80036d4:	4649      	mov	r1, r9
 80036d6:	4628      	mov	r0, r5
 80036d8:	f005 fc4c 	bl	8008f74 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80036dc:	9908      	ldr	r1, [sp, #32]
 80036de:	4628      	mov	r0, r5
 80036e0:	f005 fc48 	bl	8008f74 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80036e4:	9909      	ldr	r1, [sp, #36]	; 0x24
 80036e6:	4628      	mov	r0, r5
 80036e8:	f005 fc44 	bl	8008f74 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80036ec:	4628      	mov	r0, r5
 80036ee:	990a      	ldr	r1, [sp, #40]	; 0x28
 80036f0:	f005 fc40 	bl	8008f74 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 80036f4:	4620      	mov	r0, r4
 80036f6:	b011      	add	sp, #68	; 0x44
 80036f8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080036fc <_ZN19FrontendApplicationD1Ev>:

class FrontendApplication : public FrontendApplicationBase
{
public:
    FrontendApplication(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplication() { }
 80036fc:	4770      	bx	lr

080036fe <_ZN19FrontendApplicationD0Ev>:
 80036fe:	b510      	push	{r4, lr}
 8003700:	f44f 71ac 	mov.w	r1, #344	; 0x158
 8003704:	4604      	mov	r4, r0
 8003706:	f015 ff0d 	bl	8019524 <_ZdlPvj>
 800370a:	4620      	mov	r0, r4
 800370c:	bd10      	pop	{r4, pc}

0800370e <_ZN19FrontendApplication15handleTickEventEv>:

    virtual void handleTickEvent()
 800370e:	b510      	push	{r4, lr}
 8003710:	4604      	mov	r4, r0
    {
        model.tick();
 8003712:	f8d0 0154 	ldr.w	r0, [r0, #340]	; 0x154
 8003716:	f000 f812 	bl	800373e <_ZN5Model4tickEv>
        FrontendApplicationBase::handleTickEvent();
 800371a:	4620      	mov	r0, r4
    }
 800371c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        FrontendApplicationBase::handleTickEvent();
 8003720:	f008 b960 	b.w	800b9e4 <_ZN8touchgfx11Application15handleTickEventEv>

08003724 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>:
#include <gui/common/FrontendApplication.hpp>

FrontendApplication::FrontendApplication(Model& m, FrontendHeap& heap)
 8003724:	b510      	push	{r4, lr}
 8003726:	4604      	mov	r4, r0
    : FrontendApplicationBase(m, heap)
 8003728:	f7ff f9f8 	bl	8002b1c <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>
 800372c:	4b01      	ldr	r3, [pc, #4]	; (8003734 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap+0x10>)
 800372e:	6023      	str	r3, [r4, #0]
{

}
 8003730:	4620      	mov	r0, r4
 8003732:	bd10      	pop	{r4, pc}
 8003734:	0801b2fc 	.word	0x0801b2fc

08003738 <_ZN5ModelC1Ev>:
#include <gui/model/Model.hpp>
#include <gui/model/ModelListener.hpp>

Model::Model() : modelListener(0)
 8003738:	2200      	movs	r2, #0
 800373a:	6002      	str	r2, [r0, #0]
{

}
 800373c:	4770      	bx	lr

0800373e <_ZN5Model4tickEv>:

void Model::tick()
{

}
 800373e:	4770      	bx	lr

08003740 <_ZN19mainScreenPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~mainScreenPresenter() {};
 8003740:	4770      	bx	lr

08003742 <_ZThn4_N19mainScreenPresenterD1Ev>:
 8003742:	3804      	subs	r0, #4
 8003744:	4770      	bx	lr

08003746 <_ZN19mainScreenPresenter10deactivateEv>:
}

void mainScreenPresenter::activate()
{

}
 8003746:	4770      	bx	lr

08003748 <_ZN19mainScreenPresenterD0Ev>:
 8003748:	b510      	push	{r4, lr}
 800374a:	2110      	movs	r1, #16
 800374c:	4604      	mov	r4, r0
 800374e:	f015 fee9 	bl	8019524 <_ZdlPvj>
 8003752:	4620      	mov	r0, r4
 8003754:	bd10      	pop	{r4, pc}

08003756 <_ZThn4_N19mainScreenPresenterD0Ev>:
 8003756:	f1a0 0004 	sub.w	r0, r0, #4
 800375a:	e7f5      	b.n	8003748 <_ZN19mainScreenPresenterD0Ev>

0800375c <_ZN19mainScreenPresenterC1ER14mainScreenView>:
mainScreenPresenter::mainScreenPresenter(mainScreenView& v)
 800375c:	b510      	push	{r4, lr}
    ModelListener() : model(0) {}
 800375e:	2200      	movs	r2, #0
 8003760:	6082      	str	r2, [r0, #8]
    : view(v)
 8003762:	4a04      	ldr	r2, [pc, #16]	; (8003774 <_ZN19mainScreenPresenterC1ER14mainScreenView+0x18>)
 8003764:	60c1      	str	r1, [r0, #12]
 8003766:	f102 0408 	add.w	r4, r2, #8
 800376a:	3220      	adds	r2, #32
 800376c:	6004      	str	r4, [r0, #0]
 800376e:	6042      	str	r2, [r0, #4]
}
 8003770:	bd10      	pop	{r4, pc}
 8003772:	bf00      	nop
 8003774:	0801b338 	.word	0x0801b338

08003778 <_ZN14mainScreenViewD1Ev>:

class mainScreenView : public mainScreenViewBase
{
public:
    mainScreenView();
    virtual ~mainScreenView() {}
 8003778:	4770      	bx	lr

0800377a <_ZN14mainScreenView14tearDownScreenEv>:
}

void mainScreenView::tearDownScreen()
{
    mainScreenViewBase::tearDownScreen();
}
 800377a:	4770      	bx	lr

0800377c <_ZN14mainScreenView24XAxisSliderValue_ChangedEi>:

void mainScreenView::XAxisSliderValue_Changed(int value)
{
	xAxisPWMDuty = 275 + 9 * value;
 800377c:	eb01 01c1 	add.w	r1, r1, r1, lsl #3
 8003780:	4b02      	ldr	r3, [pc, #8]	; (800378c <_ZN14mainScreenView24XAxisSliderValue_ChangedEi+0x10>)
 8003782:	f201 1113 	addw	r1, r1, #275	; 0x113
 8003786:	6019      	str	r1, [r3, #0]
}
 8003788:	4770      	bx	lr
 800378a:	bf00      	nop
 800378c:	20000018 	.word	0x20000018

08003790 <_ZN14mainScreenView27YAxisSlider_L_Value_ChangedEi>:

void mainScreenView::YAxisSlider_L_Value_Changed(int value)
{
	yAxisPWMDuty_L = (int) (842.0 + 5.06 * (float)value);
 8003790:	ee07 1a90 	vmov	s15, r1
 8003794:	eef8 7ae7 	vcvt.f32.s32	s15, s15
{
 8003798:	b508      	push	{r3, lr}
	yAxisPWMDuty_L = (int) (842.0 + 5.06 * (float)value);
 800379a:	ee17 0a90 	vmov	r0, s15
 800379e:	f7fc fedb 	bl	8000558 <__aeabi_f2d>
 80037a2:	a309      	add	r3, pc, #36	; (adr r3, 80037c8 <_ZN14mainScreenView27YAxisSlider_L_Value_ChangedEi+0x38>)
 80037a4:	e9d3 2300 	ldrd	r2, r3, [r3]
 80037a8:	f7fc ff2e 	bl	8000608 <__aeabi_dmul>
 80037ac:	4b04      	ldr	r3, [pc, #16]	; (80037c0 <_ZN14mainScreenView27YAxisSlider_L_Value_ChangedEi+0x30>)
 80037ae:	2200      	movs	r2, #0
 80037b0:	f7fc fd74 	bl	800029c <__adddf3>
 80037b4:	f7fd f93a 	bl	8000a2c <__aeabi_d2iz>
 80037b8:	4b02      	ldr	r3, [pc, #8]	; (80037c4 <_ZN14mainScreenView27YAxisSlider_L_Value_ChangedEi+0x34>)
 80037ba:	6018      	str	r0, [r3, #0]
}
 80037bc:	bd08      	pop	{r3, pc}
 80037be:	bf00      	nop
 80037c0:	408a5000 	.word	0x408a5000
 80037c4:	2000001c 	.word	0x2000001c
 80037c8:	a3d70a3d 	.word	0xa3d70a3d
 80037cc:	40143d70 	.word	0x40143d70

080037d0 <_ZN14mainScreenView27YAxisSlider_R_Value_ChangedEi>:

void mainScreenView::YAxisSlider_R_Value_Changed(int value)
{
	yAxisPWMDuty_R = (int) (842.0 + 3.42 * (float)value);
 80037d0:	ee07 1a90 	vmov	s15, r1
 80037d4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
{
 80037d8:	b508      	push	{r3, lr}
	yAxisPWMDuty_R = (int) (842.0 + 3.42 * (float)value);
 80037da:	ee17 0a90 	vmov	r0, s15
 80037de:	f7fc febb 	bl	8000558 <__aeabi_f2d>
 80037e2:	a309      	add	r3, pc, #36	; (adr r3, 8003808 <_ZN14mainScreenView27YAxisSlider_R_Value_ChangedEi+0x38>)
 80037e4:	e9d3 2300 	ldrd	r2, r3, [r3]
 80037e8:	f7fc ff0e 	bl	8000608 <__aeabi_dmul>
 80037ec:	4b04      	ldr	r3, [pc, #16]	; (8003800 <_ZN14mainScreenView27YAxisSlider_R_Value_ChangedEi+0x30>)
 80037ee:	2200      	movs	r2, #0
 80037f0:	f7fc fd54 	bl	800029c <__adddf3>
 80037f4:	f7fd f91a 	bl	8000a2c <__aeabi_d2iz>
 80037f8:	4b02      	ldr	r3, [pc, #8]	; (8003804 <_ZN14mainScreenView27YAxisSlider_R_Value_ChangedEi+0x34>)
 80037fa:	6018      	str	r0, [r3, #0]
}
 80037fc:	bd08      	pop	{r3, pc}
 80037fe:	bf00      	nop
 8003800:	408a5000 	.word	0x408a5000
 8003804:	20000020 	.word	0x20000020
 8003808:	f5c28f5c 	.word	0xf5c28f5c
 800380c:	400b5c28 	.word	0x400b5c28

08003810 <_ZN14mainScreenView38ManipulatorControlToggleButton_ClickedEv>:

void mainScreenView::ManipulatorControlToggleButton_Clicked()
{
	static bool state = false;

	if (state)
 8003810:	4b07      	ldr	r3, [pc, #28]	; (8003830 <_ZN14mainScreenView38ManipulatorControlToggleButton_ClickedEv+0x20>)
 8003812:	4a08      	ldr	r2, [pc, #32]	; (8003834 <_ZN14mainScreenView38ManipulatorControlToggleButton_ClickedEv+0x24>)
 8003814:	7819      	ldrb	r1, [r3, #0]
 8003816:	b129      	cbz	r1, 8003824 <_ZN14mainScreenView38ManipulatorControlToggleButton_ClickedEv+0x14>
	{
		manipulatorPWMDuty = 275;
 8003818:	f240 1113 	movw	r1, #275	; 0x113
 800381c:	6011      	str	r1, [r2, #0]
		state = false;
 800381e:	2200      	movs	r2, #0
	}
	else
	{
		manipulatorPWMDuty = 700;
		state = true;
 8003820:	701a      	strb	r2, [r3, #0]
	}
}
 8003822:	4770      	bx	lr
		manipulatorPWMDuty = 700;
 8003824:	f44f 712f 	mov.w	r1, #700	; 0x2bc
 8003828:	6011      	str	r1, [r2, #0]
		state = true;
 800382a:	2201      	movs	r2, #1
 800382c:	e7f8      	b.n	8003820 <_ZN14mainScreenView38ManipulatorControlToggleButton_ClickedEv+0x10>
 800382e:	bf00      	nop
 8003830:	2000161c 	.word	0x2000161c
 8003834:	20000014 	.word	0x20000014

08003838 <_ZN14mainScreenView11setupScreenEv>:
    mainScreenViewBase::setupScreen();
 8003838:	f7ff bc94 	b.w	8003164 <_ZN18mainScreenViewBase11setupScreenEv>

0800383c <_ZN14mainScreenViewD0Ev>:
 800383c:	b510      	push	{r4, lr}
 800383e:	f240 5114 	movw	r1, #1300	; 0x514
 8003842:	4604      	mov	r4, r0
 8003844:	f015 fe6e 	bl	8019524 <_ZdlPvj>
 8003848:	4620      	mov	r0, r4
 800384a:	bd10      	pop	{r4, pc}

0800384c <_ZN14mainScreenViewC1Ev>:
mainScreenView::mainScreenView()
 800384c:	b510      	push	{r4, lr}
 800384e:	4604      	mov	r4, r0
 8003850:	f7ff fd54 	bl	80032fc <_ZN18mainScreenViewBaseC1Ev>
 8003854:	4b0d      	ldr	r3, [pc, #52]	; (800388c <_ZN14mainScreenViewC1Ev+0x40>)
 8003856:	6023      	str	r3, [r4, #0]
	HAL_TIM_PWM_Start_DMA(&htim2, TIM_CHANNEL_4, &xAxisPWMDuty, 1);
 8003858:	4a0d      	ldr	r2, [pc, #52]	; (8003890 <_ZN14mainScreenViewC1Ev+0x44>)
 800385a:	480e      	ldr	r0, [pc, #56]	; (8003894 <_ZN14mainScreenViewC1Ev+0x48>)
 800385c:	2301      	movs	r3, #1
 800385e:	210c      	movs	r1, #12
 8003860:	f003 f850 	bl	8006904 <HAL_TIM_PWM_Start_DMA>
	HAL_TIM_PWM_Start_DMA(&htim3, TIM_CHANNEL_2, &yAxisPWMDuty_L, 1);
 8003864:	2301      	movs	r3, #1
 8003866:	4a0c      	ldr	r2, [pc, #48]	; (8003898 <_ZN14mainScreenViewC1Ev+0x4c>)
 8003868:	480c      	ldr	r0, [pc, #48]	; (800389c <_ZN14mainScreenViewC1Ev+0x50>)
 800386a:	2104      	movs	r1, #4
 800386c:	f003 f84a 	bl	8006904 <HAL_TIM_PWM_Start_DMA>
	HAL_TIM_PWM_Start_DMA(&htim4, TIM_CHANNEL_1, &yAxisPWMDuty_R, 1);
 8003870:	2301      	movs	r3, #1
 8003872:	4a0b      	ldr	r2, [pc, #44]	; (80038a0 <_ZN14mainScreenViewC1Ev+0x54>)
 8003874:	480b      	ldr	r0, [pc, #44]	; (80038a4 <_ZN14mainScreenViewC1Ev+0x58>)
 8003876:	2100      	movs	r1, #0
 8003878:	f003 f844 	bl	8006904 <HAL_TIM_PWM_Start_DMA>
	HAL_TIM_PWM_Start_DMA(&htim5, TIM_CHANNEL_1, &manipulatorPWMDuty, 1);
 800387c:	2301      	movs	r3, #1
 800387e:	4a0a      	ldr	r2, [pc, #40]	; (80038a8 <_ZN14mainScreenViewC1Ev+0x5c>)
 8003880:	480a      	ldr	r0, [pc, #40]	; (80038ac <_ZN14mainScreenViewC1Ev+0x60>)
 8003882:	2100      	movs	r1, #0
 8003884:	f003 f83e 	bl	8006904 <HAL_TIM_PWM_Start_DMA>
}
 8003888:	4620      	mov	r0, r4
 800388a:	bd10      	pop	{r4, pc}
 800388c:	0801b368 	.word	0x0801b368
 8003890:	20000018 	.word	0x20000018
 8003894:	200129d4 	.word	0x200129d4
 8003898:	2000001c 	.word	0x2000001c
 800389c:	200127e8 	.word	0x200127e8
 80038a0:	20000020 	.word	0x20000020
 80038a4:	20012700 	.word	0x20012700
 80038a8:	20000014 	.word	0x20000014
 80038ac:	200127a8 	.word	0x200127a8

080038b0 <ili9341_GetLcdPixelWidth>:
  */
uint16_t ili9341_GetLcdPixelWidth(void)
{
  /* Return LCD PIXEL WIDTH */
  return ILI9341_LCD_PIXEL_WIDTH;
}
 80038b0:	20f0      	movs	r0, #240	; 0xf0
 80038b2:	4770      	bx	lr

080038b4 <ili9341_GetLcdPixelHeight>:
  */
uint16_t ili9341_GetLcdPixelHeight(void)
{
  /* Return LCD PIXEL HEIGHT */
  return ILI9341_LCD_PIXEL_HEIGHT;
}
 80038b4:	f44f 70a0 	mov.w	r0, #320	; 0x140
 80038b8:	4770      	bx	lr

080038ba <ili9341_DisplayOn>:
  LCD_IO_WriteReg(LCD_Reg);
 80038ba:	2029      	movs	r0, #41	; 0x29
 80038bc:	f7fe bc10 	b.w	80020e0 <LCD_IO_WriteReg>

080038c0 <ili9341_DisplayOff>:
 80038c0:	2028      	movs	r0, #40	; 0x28
 80038c2:	f7fe bc0d 	b.w	80020e0 <LCD_IO_WriteReg>

080038c6 <ili9341_Init>:
{
 80038c6:	b508      	push	{r3, lr}
  LCD_IO_Init();
 80038c8:	f7fe fbde 	bl	8002088 <LCD_IO_Init>
  LCD_IO_WriteReg(LCD_Reg);
 80038cc:	20ca      	movs	r0, #202	; 0xca
 80038ce:	f7fe fc07 	bl	80020e0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80038d2:	20c3      	movs	r0, #195	; 0xc3
 80038d4:	f7fe fbe8 	bl	80020a8 <LCD_IO_WriteData>
 80038d8:	2008      	movs	r0, #8
 80038da:	f7fe fbe5 	bl	80020a8 <LCD_IO_WriteData>
 80038de:	2050      	movs	r0, #80	; 0x50
 80038e0:	f7fe fbe2 	bl	80020a8 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80038e4:	20cf      	movs	r0, #207	; 0xcf
 80038e6:	f7fe fbfb 	bl	80020e0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80038ea:	2000      	movs	r0, #0
 80038ec:	f7fe fbdc 	bl	80020a8 <LCD_IO_WriteData>
 80038f0:	20c1      	movs	r0, #193	; 0xc1
 80038f2:	f7fe fbd9 	bl	80020a8 <LCD_IO_WriteData>
 80038f6:	2030      	movs	r0, #48	; 0x30
 80038f8:	f7fe fbd6 	bl	80020a8 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80038fc:	20ed      	movs	r0, #237	; 0xed
 80038fe:	f7fe fbef 	bl	80020e0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8003902:	2064      	movs	r0, #100	; 0x64
 8003904:	f7fe fbd0 	bl	80020a8 <LCD_IO_WriteData>
 8003908:	2003      	movs	r0, #3
 800390a:	f7fe fbcd 	bl	80020a8 <LCD_IO_WriteData>
 800390e:	2012      	movs	r0, #18
 8003910:	f7fe fbca 	bl	80020a8 <LCD_IO_WriteData>
 8003914:	2081      	movs	r0, #129	; 0x81
 8003916:	f7fe fbc7 	bl	80020a8 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800391a:	20e8      	movs	r0, #232	; 0xe8
 800391c:	f7fe fbe0 	bl	80020e0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8003920:	2085      	movs	r0, #133	; 0x85
 8003922:	f7fe fbc1 	bl	80020a8 <LCD_IO_WriteData>
 8003926:	2000      	movs	r0, #0
 8003928:	f7fe fbbe 	bl	80020a8 <LCD_IO_WriteData>
 800392c:	2078      	movs	r0, #120	; 0x78
 800392e:	f7fe fbbb 	bl	80020a8 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8003932:	20cb      	movs	r0, #203	; 0xcb
 8003934:	f7fe fbd4 	bl	80020e0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8003938:	2039      	movs	r0, #57	; 0x39
 800393a:	f7fe fbb5 	bl	80020a8 <LCD_IO_WriteData>
 800393e:	202c      	movs	r0, #44	; 0x2c
 8003940:	f7fe fbb2 	bl	80020a8 <LCD_IO_WriteData>
 8003944:	2000      	movs	r0, #0
 8003946:	f7fe fbaf 	bl	80020a8 <LCD_IO_WriteData>
 800394a:	2034      	movs	r0, #52	; 0x34
 800394c:	f7fe fbac 	bl	80020a8 <LCD_IO_WriteData>
 8003950:	2002      	movs	r0, #2
 8003952:	f7fe fba9 	bl	80020a8 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8003956:	20f7      	movs	r0, #247	; 0xf7
 8003958:	f7fe fbc2 	bl	80020e0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800395c:	2020      	movs	r0, #32
 800395e:	f7fe fba3 	bl	80020a8 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8003962:	20ea      	movs	r0, #234	; 0xea
 8003964:	f7fe fbbc 	bl	80020e0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8003968:	2000      	movs	r0, #0
 800396a:	f7fe fb9d 	bl	80020a8 <LCD_IO_WriteData>
 800396e:	2000      	movs	r0, #0
 8003970:	f7fe fb9a 	bl	80020a8 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8003974:	20b1      	movs	r0, #177	; 0xb1
 8003976:	f7fe fbb3 	bl	80020e0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800397a:	2000      	movs	r0, #0
 800397c:	f7fe fb94 	bl	80020a8 <LCD_IO_WriteData>
 8003980:	201b      	movs	r0, #27
 8003982:	f7fe fb91 	bl	80020a8 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8003986:	20b6      	movs	r0, #182	; 0xb6
 8003988:	f7fe fbaa 	bl	80020e0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800398c:	200a      	movs	r0, #10
 800398e:	f7fe fb8b 	bl	80020a8 <LCD_IO_WriteData>
 8003992:	20a2      	movs	r0, #162	; 0xa2
 8003994:	f7fe fb88 	bl	80020a8 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8003998:	20c0      	movs	r0, #192	; 0xc0
 800399a:	f7fe fba1 	bl	80020e0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800399e:	2010      	movs	r0, #16
 80039a0:	f7fe fb82 	bl	80020a8 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80039a4:	20c1      	movs	r0, #193	; 0xc1
 80039a6:	f7fe fb9b 	bl	80020e0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80039aa:	2010      	movs	r0, #16
 80039ac:	f7fe fb7c 	bl	80020a8 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80039b0:	20c5      	movs	r0, #197	; 0xc5
 80039b2:	f7fe fb95 	bl	80020e0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80039b6:	2045      	movs	r0, #69	; 0x45
 80039b8:	f7fe fb76 	bl	80020a8 <LCD_IO_WriteData>
 80039bc:	2015      	movs	r0, #21
 80039be:	f7fe fb73 	bl	80020a8 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80039c2:	20c7      	movs	r0, #199	; 0xc7
 80039c4:	f7fe fb8c 	bl	80020e0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80039c8:	2090      	movs	r0, #144	; 0x90
 80039ca:	f7fe fb6d 	bl	80020a8 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80039ce:	2036      	movs	r0, #54	; 0x36
 80039d0:	f7fe fb86 	bl	80020e0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80039d4:	20c8      	movs	r0, #200	; 0xc8
 80039d6:	f7fe fb67 	bl	80020a8 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80039da:	20f2      	movs	r0, #242	; 0xf2
 80039dc:	f7fe fb80 	bl	80020e0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80039e0:	2000      	movs	r0, #0
 80039e2:	f7fe fb61 	bl	80020a8 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80039e6:	20b0      	movs	r0, #176	; 0xb0
 80039e8:	f7fe fb7a 	bl	80020e0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80039ec:	20c2      	movs	r0, #194	; 0xc2
 80039ee:	f7fe fb5b 	bl	80020a8 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80039f2:	20b6      	movs	r0, #182	; 0xb6
 80039f4:	f7fe fb74 	bl	80020e0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80039f8:	200a      	movs	r0, #10
 80039fa:	f7fe fb55 	bl	80020a8 <LCD_IO_WriteData>
 80039fe:	20a7      	movs	r0, #167	; 0xa7
 8003a00:	f7fe fb52 	bl	80020a8 <LCD_IO_WriteData>
 8003a04:	2027      	movs	r0, #39	; 0x27
 8003a06:	f7fe fb4f 	bl	80020a8 <LCD_IO_WriteData>
 8003a0a:	2004      	movs	r0, #4
 8003a0c:	f7fe fb4c 	bl	80020a8 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8003a10:	202a      	movs	r0, #42	; 0x2a
 8003a12:	f7fe fb65 	bl	80020e0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8003a16:	2000      	movs	r0, #0
 8003a18:	f7fe fb46 	bl	80020a8 <LCD_IO_WriteData>
 8003a1c:	2000      	movs	r0, #0
 8003a1e:	f7fe fb43 	bl	80020a8 <LCD_IO_WriteData>
 8003a22:	2000      	movs	r0, #0
 8003a24:	f7fe fb40 	bl	80020a8 <LCD_IO_WriteData>
 8003a28:	20ef      	movs	r0, #239	; 0xef
 8003a2a:	f7fe fb3d 	bl	80020a8 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8003a2e:	202b      	movs	r0, #43	; 0x2b
 8003a30:	f7fe fb56 	bl	80020e0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8003a34:	2000      	movs	r0, #0
 8003a36:	f7fe fb37 	bl	80020a8 <LCD_IO_WriteData>
 8003a3a:	2000      	movs	r0, #0
 8003a3c:	f7fe fb34 	bl	80020a8 <LCD_IO_WriteData>
 8003a40:	2001      	movs	r0, #1
 8003a42:	f7fe fb31 	bl	80020a8 <LCD_IO_WriteData>
 8003a46:	203f      	movs	r0, #63	; 0x3f
 8003a48:	f7fe fb2e 	bl	80020a8 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8003a4c:	20f6      	movs	r0, #246	; 0xf6
 8003a4e:	f7fe fb47 	bl	80020e0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8003a52:	2001      	movs	r0, #1
 8003a54:	f7fe fb28 	bl	80020a8 <LCD_IO_WriteData>
 8003a58:	2000      	movs	r0, #0
 8003a5a:	f7fe fb25 	bl	80020a8 <LCD_IO_WriteData>
 8003a5e:	2006      	movs	r0, #6
 8003a60:	f7fe fb22 	bl	80020a8 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8003a64:	202c      	movs	r0, #44	; 0x2c
 8003a66:	f7fe fb3b 	bl	80020e0 <LCD_IO_WriteReg>
  LCD_Delay(200);
 8003a6a:	20c8      	movs	r0, #200	; 0xc8
 8003a6c:	f7fe fb86 	bl	800217c <LCD_Delay>
  LCD_IO_WriteReg(LCD_Reg);
 8003a70:	2026      	movs	r0, #38	; 0x26
 8003a72:	f7fe fb35 	bl	80020e0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8003a76:	2001      	movs	r0, #1
 8003a78:	f7fe fb16 	bl	80020a8 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8003a7c:	20e0      	movs	r0, #224	; 0xe0
 8003a7e:	f7fe fb2f 	bl	80020e0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8003a82:	200f      	movs	r0, #15
 8003a84:	f7fe fb10 	bl	80020a8 <LCD_IO_WriteData>
 8003a88:	2029      	movs	r0, #41	; 0x29
 8003a8a:	f7fe fb0d 	bl	80020a8 <LCD_IO_WriteData>
 8003a8e:	2024      	movs	r0, #36	; 0x24
 8003a90:	f7fe fb0a 	bl	80020a8 <LCD_IO_WriteData>
 8003a94:	200c      	movs	r0, #12
 8003a96:	f7fe fb07 	bl	80020a8 <LCD_IO_WriteData>
 8003a9a:	200e      	movs	r0, #14
 8003a9c:	f7fe fb04 	bl	80020a8 <LCD_IO_WriteData>
 8003aa0:	2009      	movs	r0, #9
 8003aa2:	f7fe fb01 	bl	80020a8 <LCD_IO_WriteData>
 8003aa6:	204e      	movs	r0, #78	; 0x4e
 8003aa8:	f7fe fafe 	bl	80020a8 <LCD_IO_WriteData>
 8003aac:	2078      	movs	r0, #120	; 0x78
 8003aae:	f7fe fafb 	bl	80020a8 <LCD_IO_WriteData>
 8003ab2:	203c      	movs	r0, #60	; 0x3c
 8003ab4:	f7fe faf8 	bl	80020a8 <LCD_IO_WriteData>
 8003ab8:	2009      	movs	r0, #9
 8003aba:	f7fe faf5 	bl	80020a8 <LCD_IO_WriteData>
 8003abe:	2013      	movs	r0, #19
 8003ac0:	f7fe faf2 	bl	80020a8 <LCD_IO_WriteData>
 8003ac4:	2005      	movs	r0, #5
 8003ac6:	f7fe faef 	bl	80020a8 <LCD_IO_WriteData>
 8003aca:	2017      	movs	r0, #23
 8003acc:	f7fe faec 	bl	80020a8 <LCD_IO_WriteData>
 8003ad0:	2011      	movs	r0, #17
 8003ad2:	f7fe fae9 	bl	80020a8 <LCD_IO_WriteData>
 8003ad6:	2000      	movs	r0, #0
 8003ad8:	f7fe fae6 	bl	80020a8 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8003adc:	20e1      	movs	r0, #225	; 0xe1
 8003ade:	f7fe faff 	bl	80020e0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8003ae2:	2000      	movs	r0, #0
 8003ae4:	f7fe fae0 	bl	80020a8 <LCD_IO_WriteData>
 8003ae8:	2016      	movs	r0, #22
 8003aea:	f7fe fadd 	bl	80020a8 <LCD_IO_WriteData>
 8003aee:	201b      	movs	r0, #27
 8003af0:	f7fe fada 	bl	80020a8 <LCD_IO_WriteData>
 8003af4:	2004      	movs	r0, #4
 8003af6:	f7fe fad7 	bl	80020a8 <LCD_IO_WriteData>
 8003afa:	2011      	movs	r0, #17
 8003afc:	f7fe fad4 	bl	80020a8 <LCD_IO_WriteData>
 8003b00:	2007      	movs	r0, #7
 8003b02:	f7fe fad1 	bl	80020a8 <LCD_IO_WriteData>
 8003b06:	2031      	movs	r0, #49	; 0x31
 8003b08:	f7fe face 	bl	80020a8 <LCD_IO_WriteData>
 8003b0c:	2033      	movs	r0, #51	; 0x33
 8003b0e:	f7fe facb 	bl	80020a8 <LCD_IO_WriteData>
 8003b12:	2042      	movs	r0, #66	; 0x42
 8003b14:	f7fe fac8 	bl	80020a8 <LCD_IO_WriteData>
 8003b18:	2005      	movs	r0, #5
 8003b1a:	f7fe fac5 	bl	80020a8 <LCD_IO_WriteData>
 8003b1e:	200c      	movs	r0, #12
 8003b20:	f7fe fac2 	bl	80020a8 <LCD_IO_WriteData>
 8003b24:	200a      	movs	r0, #10
 8003b26:	f7fe fabf 	bl	80020a8 <LCD_IO_WriteData>
 8003b2a:	2028      	movs	r0, #40	; 0x28
 8003b2c:	f7fe fabc 	bl	80020a8 <LCD_IO_WriteData>
 8003b30:	202f      	movs	r0, #47	; 0x2f
 8003b32:	f7fe fab9 	bl	80020a8 <LCD_IO_WriteData>
 8003b36:	200f      	movs	r0, #15
 8003b38:	f7fe fab6 	bl	80020a8 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8003b3c:	2011      	movs	r0, #17
 8003b3e:	f7fe facf 	bl	80020e0 <LCD_IO_WriteReg>
  LCD_Delay(200);
 8003b42:	20c8      	movs	r0, #200	; 0xc8
 8003b44:	f7fe fb1a 	bl	800217c <LCD_Delay>
  LCD_IO_WriteReg(LCD_Reg);
 8003b48:	2029      	movs	r0, #41	; 0x29
 8003b4a:	f7fe fac9 	bl	80020e0 <LCD_IO_WriteReg>
 8003b4e:	202c      	movs	r0, #44	; 0x2c
}
 8003b50:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  LCD_IO_WriteReg(LCD_Reg);
 8003b54:	f7fe bac4 	b.w	80020e0 <LCD_IO_WriteReg>

08003b58 <ili9341_ReadID>:
{
 8003b58:	b508      	push	{r3, lr}
  LCD_IO_Init();
 8003b5a:	f7fe fa95 	bl	8002088 <LCD_IO_Init>
  return (LCD_IO_ReadData(RegValue, ReadSize));
 8003b5e:	2103      	movs	r1, #3
 8003b60:	20d3      	movs	r0, #211	; 0xd3
 8003b62:	f7fe fad9 	bl	8002118 <LCD_IO_ReadData>
}
 8003b66:	b280      	uxth	r0, r0
 8003b68:	bd08      	pop	{r3, pc}

08003b6a <stmpe811_Reset>:
  * @brief  Reset the stmpe811 by Software.
  * @param  DeviceAddr: Device address on communication Bus.  
  * @retval None
  */
void stmpe811_Reset(uint16_t DeviceAddr)
{
 8003b6a:	b510      	push	{r4, lr}
  /* Power Down the stmpe811 */  
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 2);
 8003b6c:	b2c4      	uxtb	r4, r0
 8003b6e:	2202      	movs	r2, #2
 8003b70:	2103      	movs	r1, #3
 8003b72:	4620      	mov	r0, r4
 8003b74:	f7fe fa40 	bl	8001ff8 <IOE_Write>

  /* Wait for a delay to ensure registers erasing */
  IOE_Delay(10); 
 8003b78:	200a      	movs	r0, #10
 8003b7a:	f7fe fa83 	bl	8002084 <IOE_Delay>
  
  /* Power On the Codec after the power off => all registers are reinitialized */
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 0);
 8003b7e:	4620      	mov	r0, r4
 8003b80:	2200      	movs	r2, #0
 8003b82:	2103      	movs	r1, #3
 8003b84:	f7fe fa38 	bl	8001ff8 <IOE_Write>
  
  /* Wait for a delay to ensure registers erasing */
  IOE_Delay(2); 
 8003b88:	2002      	movs	r0, #2
}
 8003b8a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Delay(2); 
 8003b8e:	f7fe ba79 	b.w	8002084 <IOE_Delay>

08003b92 <stmpe811_ReadID>:
  * @brief  Read the stmpe811 IO Expander device ID.
  * @param  DeviceAddr: Device address on communication Bus.  
  * @retval The Device ID (two bytes).
  */
uint16_t stmpe811_ReadID(uint16_t DeviceAddr)
{
 8003b92:	b538      	push	{r3, r4, r5, lr}
 8003b94:	4604      	mov	r4, r0
  /* Initialize IO BUS layer */
  IOE_Init(); 
  
  /* Return the device ID value */
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 8003b96:	b2e4      	uxtb	r4, r4
  IOE_Init(); 
 8003b98:	f7fe fa2c 	bl	8001ff4 <IOE_Init>
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 8003b9c:	2100      	movs	r1, #0
 8003b9e:	4620      	mov	r0, r4
 8003ba0:	f7fe fa40 	bl	8002024 <IOE_Read>
          (IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_MSB)));
 8003ba4:	2101      	movs	r1, #1
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 8003ba6:	4605      	mov	r5, r0
          (IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_MSB)));
 8003ba8:	4620      	mov	r0, r4
 8003baa:	f7fe fa3b 	bl	8002024 <IOE_Read>
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 8003bae:	ea40 2005 	orr.w	r0, r0, r5, lsl #8
}
 8003bb2:	b280      	uxth	r0, r0
 8003bb4:	bd38      	pop	{r3, r4, r5, pc}

08003bb6 <stmpe811_TS_DetectTouch>:
  * @brief  Return if there is touch detected or not.
  * @param  DeviceAddr: Device address on communication Bus.
  * @retval Touch detected state.
  */
uint8_t stmpe811_TS_DetectTouch(uint16_t DeviceAddr)
{
 8003bb6:	b510      	push	{r4, lr}
  uint8_t state;
  uint8_t ret = 0;
  
  state = ((IOE_Read(DeviceAddr, STMPE811_REG_TSC_CTRL) & (uint8_t)STMPE811_TS_CTRL_STATUS) == (uint8_t)0x80);
 8003bb8:	b2c4      	uxtb	r4, r0
 8003bba:	2140      	movs	r1, #64	; 0x40
 8003bbc:	4620      	mov	r0, r4
 8003bbe:	f7fe fa31 	bl	8002024 <IOE_Read>
  
  if(state > 0)
 8003bc2:	0603      	lsls	r3, r0, #24
 8003bc4:	d507      	bpl.n	8003bd6 <stmpe811_TS_DetectTouch+0x20>
  {
    if(IOE_Read(DeviceAddr, STMPE811_REG_FIFO_SIZE) > 0)
 8003bc6:	214c      	movs	r1, #76	; 0x4c
 8003bc8:	4620      	mov	r0, r4
 8003bca:	f7fe fa2b 	bl	8002024 <IOE_Read>
    {
      ret = 1;
 8003bce:	3000      	adds	r0, #0
 8003bd0:	bf18      	it	ne
 8003bd2:	2001      	movne	r0, #1
    /* Enable the FIFO again */
    IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
  }
  
  return ret;
}
 8003bd4:	bd10      	pop	{r4, pc}
    IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 8003bd6:	2201      	movs	r2, #1
 8003bd8:	214b      	movs	r1, #75	; 0x4b
 8003bda:	4620      	mov	r0, r4
 8003bdc:	f7fe fa0c 	bl	8001ff8 <IOE_Write>
    IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 8003be0:	4620      	mov	r0, r4
 8003be2:	2200      	movs	r2, #0
 8003be4:	214b      	movs	r1, #75	; 0x4b
 8003be6:	f7fe fa07 	bl	8001ff8 <IOE_Write>
  uint8_t ret = 0;
 8003bea:	2000      	movs	r0, #0
 8003bec:	e7f2      	b.n	8003bd4 <stmpe811_TS_DetectTouch+0x1e>

08003bee <stmpe811_TS_GetXY>:
  * @param  X: Pointer to X position value
  * @param  Y: Pointer to Y position value   
  * @retval None.
  */
void stmpe811_TS_GetXY(uint16_t DeviceAddr, uint16_t *X, uint16_t *Y)
{
 8003bee:	b573      	push	{r0, r1, r4, r5, r6, lr}
  uint8_t  dataXYZ[4];
  uint32_t uldataXYZ;
  
  IOE_ReadMultiple(DeviceAddr, STMPE811_REG_TSC_DATA_NON_INC, dataXYZ, sizeof(dataXYZ)) ;
 8003bf0:	2304      	movs	r3, #4
 8003bf2:	b2c4      	uxtb	r4, r0
{
 8003bf4:	460e      	mov	r6, r1
 8003bf6:	4615      	mov	r5, r2
  IOE_ReadMultiple(DeviceAddr, STMPE811_REG_TSC_DATA_NON_INC, dataXYZ, sizeof(dataXYZ)) ;
 8003bf8:	21d7      	movs	r1, #215	; 0xd7
 8003bfa:	eb0d 0203 	add.w	r2, sp, r3
 8003bfe:	4620      	mov	r0, r4
 8003c00:	f7fe fa2a 	bl	8002058 <IOE_ReadMultiple>
 8003c04:	9b01      	ldr	r3, [sp, #4]
 8003c06:	ba1b      	rev	r3, r3
  
  /* Calculate positions values */
  uldataXYZ = (dataXYZ[0] << 24)|(dataXYZ[1] << 16)|(dataXYZ[2] << 8)|(dataXYZ[3] << 0);     
  *X = (uldataXYZ >> 20) & 0x00000FFF;     
 8003c08:	0d1a      	lsrs	r2, r3, #20
  *Y = (uldataXYZ >>  8) & 0x00000FFF;     
 8003c0a:	f3c3 230b 	ubfx	r3, r3, #8, #12
  *X = (uldataXYZ >> 20) & 0x00000FFF;     
 8003c0e:	8032      	strh	r2, [r6, #0]
  
  /* Reset FIFO */
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 8003c10:	4620      	mov	r0, r4
  *Y = (uldataXYZ >>  8) & 0x00000FFF;     
 8003c12:	802b      	strh	r3, [r5, #0]
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 8003c14:	2201      	movs	r2, #1
 8003c16:	214b      	movs	r1, #75	; 0x4b
 8003c18:	f7fe f9ee 	bl	8001ff8 <IOE_Write>
  /* Enable the FIFO again */
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 8003c1c:	2200      	movs	r2, #0
 8003c1e:	214b      	movs	r1, #75	; 0x4b
 8003c20:	4620      	mov	r0, r4
 8003c22:	f7fe f9e9 	bl	8001ff8 <IOE_Write>
}
 8003c26:	b002      	add	sp, #8
 8003c28:	bd70      	pop	{r4, r5, r6, pc}
	...

08003c2c <stmpe811_Init>:
{
 8003c2c:	b510      	push	{r4, lr}
  uint8_t idx = 0;
  
  /* Check all the registered instances */
  for(idx = 0; idx < STMPE811_MAX_INSTANCE ; idx ++)
  {
    if(stmpe811[idx] == DeviceAddr)
 8003c2e:	4a0a      	ldr	r2, [pc, #40]	; (8003c58 <stmpe811_Init+0x2c>)
 8003c30:	7813      	ldrb	r3, [r2, #0]
 8003c32:	4298      	cmp	r0, r3
{
 8003c34:	4604      	mov	r4, r0
    if(stmpe811[idx] == DeviceAddr)
 8003c36:	d00d      	beq.n	8003c54 <stmpe811_Init+0x28>
 8003c38:	7851      	ldrb	r1, [r2, #1]
 8003c3a:	4288      	cmp	r0, r1
 8003c3c:	d00a      	beq.n	8003c54 <stmpe811_Init+0x28>
 8003c3e:	b10b      	cbz	r3, 8003c44 <stmpe811_Init+0x18>
 8003c40:	b941      	cbnz	r1, 8003c54 <stmpe811_Init+0x28>
  for(idx = 0; idx < STMPE811_MAX_INSTANCE ; idx ++)
 8003c42:	2301      	movs	r3, #1
      stmpe811[empty] = DeviceAddr;
 8003c44:	54d4      	strb	r4, [r2, r3]
      IOE_Init(); 
 8003c46:	f7fe f9d5 	bl	8001ff4 <IOE_Init>
      stmpe811_Reset(DeviceAddr);
 8003c4a:	4620      	mov	r0, r4
}
 8003c4c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
      stmpe811_Reset(DeviceAddr);
 8003c50:	f7ff bf8b 	b.w	8003b6a <stmpe811_Reset>
}
 8003c54:	bd10      	pop	{r4, pc}
 8003c56:	bf00      	nop
 8003c58:	2000161d 	.word	0x2000161d

08003c5c <stmpe811_EnableGlobalIT>:
{
 8003c5c:	b510      	push	{r4, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_CTRL);
 8003c5e:	b2c4      	uxtb	r4, r0
 8003c60:	2109      	movs	r1, #9
 8003c62:	4620      	mov	r0, r4
 8003c64:	f7fe f9de 	bl	8002024 <IOE_Read>
  tmp |= (uint8_t)STMPE811_GIT_EN;
 8003c68:	f040 0201 	orr.w	r2, r0, #1
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp); 
 8003c6c:	b2d2      	uxtb	r2, r2
 8003c6e:	4620      	mov	r0, r4
 8003c70:	2109      	movs	r1, #9
}
 8003c72:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp); 
 8003c76:	f7fe b9bf 	b.w	8001ff8 <IOE_Write>

08003c7a <stmpe811_DisableGlobalIT>:
{
 8003c7a:	b510      	push	{r4, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_CTRL);
 8003c7c:	b2c4      	uxtb	r4, r0
 8003c7e:	2109      	movs	r1, #9
 8003c80:	4620      	mov	r0, r4
 8003c82:	f7fe f9cf 	bl	8002024 <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp);
 8003c86:	2109      	movs	r1, #9
 8003c88:	f000 02fe 	and.w	r2, r0, #254	; 0xfe
 8003c8c:	4620      	mov	r0, r4
}
 8003c8e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp);
 8003c92:	f7fe b9b1 	b.w	8001ff8 <IOE_Write>

08003c96 <stmpe811_EnableITSource>:
{
 8003c96:	b538      	push	{r3, r4, r5, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 8003c98:	b2c5      	uxtb	r5, r0
{
 8003c9a:	460c      	mov	r4, r1
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 8003c9c:	4628      	mov	r0, r5
 8003c9e:	210a      	movs	r1, #10
 8003ca0:	f7fe f9c0 	bl	8002024 <IOE_Read>
  tmp |= Source; 
 8003ca4:	ea40 0204 	orr.w	r2, r0, r4
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 8003ca8:	b2d2      	uxtb	r2, r2
 8003caa:	4628      	mov	r0, r5
 8003cac:	210a      	movs	r1, #10
}
 8003cae:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 8003cb2:	f7fe b9a1 	b.w	8001ff8 <IOE_Write>

08003cb6 <stmpe811_TS_EnableIT>:
{
 8003cb6:	b510      	push	{r4, lr}
 8003cb8:	4604      	mov	r4, r0
  IOE_ITConfig();
 8003cba:	f7fe f99c 	bl	8001ff6 <IOE_ITConfig>
  stmpe811_EnableITSource(DeviceAddr, STMPE811_TS_IT); 
 8003cbe:	4620      	mov	r0, r4
 8003cc0:	211f      	movs	r1, #31
 8003cc2:	f7ff ffe8 	bl	8003c96 <stmpe811_EnableITSource>
  stmpe811_EnableGlobalIT(DeviceAddr);
 8003cc6:	4620      	mov	r0, r4
}
 8003cc8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  stmpe811_EnableGlobalIT(DeviceAddr);
 8003ccc:	f7ff bfc6 	b.w	8003c5c <stmpe811_EnableGlobalIT>

08003cd0 <stmpe811_DisableITSource>:
{
 8003cd0:	b538      	push	{r3, r4, r5, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 8003cd2:	b2c5      	uxtb	r5, r0
{
 8003cd4:	460c      	mov	r4, r1
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 8003cd6:	4628      	mov	r0, r5
 8003cd8:	210a      	movs	r1, #10
 8003cda:	f7fe f9a3 	bl	8002024 <IOE_Read>
  tmp &= ~Source; 
 8003cde:	ea20 0204 	bic.w	r2, r0, r4
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 8003ce2:	b2d2      	uxtb	r2, r2
 8003ce4:	4628      	mov	r0, r5
 8003ce6:	210a      	movs	r1, #10
}
 8003ce8:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 8003cec:	f7fe b984 	b.w	8001ff8 <IOE_Write>

08003cf0 <stmpe811_TS_DisableIT>:
{
 8003cf0:	b510      	push	{r4, lr}
 8003cf2:	4604      	mov	r4, r0
  stmpe811_DisableGlobalIT(DeviceAddr);
 8003cf4:	f7ff ffc1 	bl	8003c7a <stmpe811_DisableGlobalIT>
  stmpe811_DisableITSource(DeviceAddr, STMPE811_TS_IT); 
 8003cf8:	4620      	mov	r0, r4
 8003cfa:	211f      	movs	r1, #31
}
 8003cfc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  stmpe811_DisableITSource(DeviceAddr, STMPE811_TS_IT); 
 8003d00:	f7ff bfe6 	b.w	8003cd0 <stmpe811_DisableITSource>

08003d04 <stmpe811_ReadGITStatus>:
{
 8003d04:	b510      	push	{r4, lr}
  return((IOE_Read(DeviceAddr, STMPE811_REG_INT_STA) & Source));
 8003d06:	b2c0      	uxtb	r0, r0
{
 8003d08:	460c      	mov	r4, r1
  return((IOE_Read(DeviceAddr, STMPE811_REG_INT_STA) & Source));
 8003d0a:	210b      	movs	r1, #11
 8003d0c:	f7fe f98a 	bl	8002024 <IOE_Read>
}
 8003d10:	4020      	ands	r0, r4
 8003d12:	bd10      	pop	{r4, pc}

08003d14 <stmpe811_TS_ITStatus>:
  return(stmpe811_ReadGITStatus(DeviceAddr, STMPE811_TS_IT));
 8003d14:	211f      	movs	r1, #31
 8003d16:	f7ff bff5 	b.w	8003d04 <stmpe811_ReadGITStatus>

08003d1a <stmpe811_ClearGlobalIT>:
  IOE_Write(DeviceAddr, STMPE811_REG_INT_STA, Source);
 8003d1a:	460a      	mov	r2, r1
 8003d1c:	b2c0      	uxtb	r0, r0
 8003d1e:	210b      	movs	r1, #11
 8003d20:	f7fe b96a 	b.w	8001ff8 <IOE_Write>

08003d24 <stmpe811_TS_ClearIT>:
  stmpe811_ClearGlobalIT(DeviceAddr, STMPE811_TS_IT);
 8003d24:	211f      	movs	r1, #31
 8003d26:	f7ff bff8 	b.w	8003d1a <stmpe811_ClearGlobalIT>

08003d2a <stmpe811_IO_EnableAF>:
{
 8003d2a:	b538      	push	{r3, r4, r5, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_IO_AF);
 8003d2c:	b2c5      	uxtb	r5, r0
{
 8003d2e:	460c      	mov	r4, r1
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_IO_AF);
 8003d30:	4628      	mov	r0, r5
 8003d32:	2117      	movs	r1, #23
 8003d34:	f7fe f976 	bl	8002024 <IOE_Read>
  tmp &= ~(uint8_t)IO_Pin;   
 8003d38:	ea20 0204 	bic.w	r2, r0, r4
  IOE_Write(DeviceAddr, STMPE811_REG_IO_AF, tmp); 
 8003d3c:	b2d2      	uxtb	r2, r2
 8003d3e:	4628      	mov	r0, r5
 8003d40:	2117      	movs	r1, #23
}
 8003d42:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_IO_AF, tmp); 
 8003d46:	f7fe b957 	b.w	8001ff8 <IOE_Write>

08003d4a <stmpe811_TS_Start>:
{
 8003d4a:	b570      	push	{r4, r5, r6, lr}
  mode = IOE_Read(DeviceAddr, STMPE811_REG_SYS_CTRL2);
 8003d4c:	b2c4      	uxtb	r4, r0
{
 8003d4e:	4606      	mov	r6, r0
  mode = IOE_Read(DeviceAddr, STMPE811_REG_SYS_CTRL2);
 8003d50:	2104      	movs	r1, #4
 8003d52:	4620      	mov	r0, r4
 8003d54:	f7fe f966 	bl	8002024 <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 8003d58:	2104      	movs	r1, #4
 8003d5a:	f000 02fb 	and.w	r2, r0, #251	; 0xfb
  mode = IOE_Read(DeviceAddr, STMPE811_REG_SYS_CTRL2);
 8003d5e:	4605      	mov	r5, r0
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 8003d60:	4620      	mov	r0, r4
 8003d62:	f7fe f949 	bl	8001ff8 <IOE_Write>
  stmpe811_IO_EnableAF(DeviceAddr, STMPE811_TOUCH_IO_ALL);
 8003d66:	4630      	mov	r0, r6
 8003d68:	21f0      	movs	r1, #240	; 0xf0
 8003d6a:	f7ff ffde 	bl	8003d2a <stmpe811_IO_EnableAF>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 8003d6e:	f005 02f8 	and.w	r2, r5, #248	; 0xf8
 8003d72:	4620      	mov	r0, r4
 8003d74:	2104      	movs	r1, #4
 8003d76:	f7fe f93f 	bl	8001ff8 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_ADC_CTRL1, 0x49);
 8003d7a:	2249      	movs	r2, #73	; 0x49
 8003d7c:	2120      	movs	r1, #32
 8003d7e:	4620      	mov	r0, r4
 8003d80:	f7fe f93a 	bl	8001ff8 <IOE_Write>
  IOE_Delay(2); 
 8003d84:	2002      	movs	r0, #2
 8003d86:	f7fe f97d 	bl	8002084 <IOE_Delay>
  IOE_Write(DeviceAddr, STMPE811_REG_ADC_CTRL2, 0x01);
 8003d8a:	4620      	mov	r0, r4
 8003d8c:	2201      	movs	r2, #1
 8003d8e:	2121      	movs	r1, #33	; 0x21
 8003d90:	f7fe f932 	bl	8001ff8 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_CFG, 0x9A); 
 8003d94:	4620      	mov	r0, r4
 8003d96:	229a      	movs	r2, #154	; 0x9a
 8003d98:	2141      	movs	r1, #65	; 0x41
 8003d9a:	f7fe f92d 	bl	8001ff8 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_TH, 0x01);
 8003d9e:	4620      	mov	r0, r4
 8003da0:	2201      	movs	r2, #1
 8003da2:	214a      	movs	r1, #74	; 0x4a
 8003da4:	f7fe f928 	bl	8001ff8 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 8003da8:	4620      	mov	r0, r4
 8003daa:	2201      	movs	r2, #1
 8003dac:	214b      	movs	r1, #75	; 0x4b
 8003dae:	f7fe f923 	bl	8001ff8 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 8003db2:	4620      	mov	r0, r4
 8003db4:	2200      	movs	r2, #0
 8003db6:	214b      	movs	r1, #75	; 0x4b
 8003db8:	f7fe f91e 	bl	8001ff8 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_FRACT_XYZ, 0x01);
 8003dbc:	4620      	mov	r0, r4
 8003dbe:	2201      	movs	r2, #1
 8003dc0:	2156      	movs	r1, #86	; 0x56
 8003dc2:	f7fe f919 	bl	8001ff8 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_I_DRIVE, 0x01);
 8003dc6:	4620      	mov	r0, r4
 8003dc8:	2201      	movs	r2, #1
 8003dca:	2158      	movs	r1, #88	; 0x58
 8003dcc:	f7fe f914 	bl	8001ff8 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_CTRL, 0x01);
 8003dd0:	4620      	mov	r0, r4
 8003dd2:	2201      	movs	r2, #1
 8003dd4:	2140      	movs	r1, #64	; 0x40
 8003dd6:	f7fe f90f 	bl	8001ff8 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_INT_STA, 0xFF);
 8003dda:	4620      	mov	r0, r4
 8003ddc:	22ff      	movs	r2, #255	; 0xff
 8003dde:	210b      	movs	r1, #11
 8003de0:	f7fe f90a 	bl	8001ff8 <IOE_Write>
  IOE_Delay(2); 
 8003de4:	2002      	movs	r0, #2
}
 8003de6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
  IOE_Delay(2); 
 8003dea:	f7fe b94b 	b.w	8002084 <IOE_Delay>
	...

08003df0 <SystemInit>:
  */
void SystemInit(void)
{
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 8003df0:	4b05      	ldr	r3, [pc, #20]	; (8003e08 <SystemInit+0x18>)
 8003df2:	f8d3 2088 	ldr.w	r2, [r3, #136]	; 0x88
 8003df6:	f442 0270 	orr.w	r2, r2, #15728640	; 0xf00000
 8003dfa:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88

  /* Configure the Vector Table location add offset address ------------------*/
#ifdef VECT_TAB_SRAM
  SCB->VTOR = SRAM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#else
  SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
 8003dfe:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
 8003e02:	609a      	str	r2, [r3, #8]
#endif
}
 8003e04:	4770      	bx	lr
 8003e06:	bf00      	nop
 8003e08:	e000ed00 	.word	0xe000ed00

08003e0c <HAL_Init>:
  *         need to ensure that the SysTick time base is always set to 1 millisecond
  *         to have correct HAL operation.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_Init(void)
{
 8003e0c:	b508      	push	{r3, lr}
  /* Configure Flash prefetch, Instruction cache, Data cache */ 
#if (INSTRUCTION_CACHE_ENABLE != 0U)
  __HAL_FLASH_INSTRUCTION_CACHE_ENABLE();
 8003e0e:	4b0b      	ldr	r3, [pc, #44]	; (8003e3c <HAL_Init+0x30>)
 8003e10:	681a      	ldr	r2, [r3, #0]
 8003e12:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8003e16:	601a      	str	r2, [r3, #0]
#endif /* INSTRUCTION_CACHE_ENABLE */

#if (DATA_CACHE_ENABLE != 0U)
  __HAL_FLASH_DATA_CACHE_ENABLE();
 8003e18:	681a      	ldr	r2, [r3, #0]
 8003e1a:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8003e1e:	601a      	str	r2, [r3, #0]
#endif /* DATA_CACHE_ENABLE */

#if (PREFETCH_ENABLE != 0U)
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 8003e20:	681a      	ldr	r2, [r3, #0]
 8003e22:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8003e26:	601a      	str	r2, [r3, #0]
#endif /* PREFETCH_ENABLE */

  /* Set Interrupt Group Priority */
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 8003e28:	2003      	movs	r0, #3
 8003e2a:	f000 f82f 	bl	8003e8c <HAL_NVIC_SetPriorityGrouping>

  /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
  HAL_InitTick(TICK_INT_PRIORITY);
 8003e2e:	2000      	movs	r0, #0
 8003e30:	f7fe fd24 	bl	800287c <HAL_InitTick>

  /* Init the low level hardware */
  HAL_MspInit();
 8003e34:	f7fe f9b0 	bl	8002198 <HAL_MspInit>

  /* Return function status */
  return HAL_OK;
}
 8003e38:	2000      	movs	r0, #0
 8003e3a:	bd08      	pop	{r3, pc}
 8003e3c:	40023c00 	.word	0x40023c00

08003e40 <HAL_IncTick>:
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
  uwTick += uwTickFreq;
 8003e40:	4a03      	ldr	r2, [pc, #12]	; (8003e50 <HAL_IncTick+0x10>)
 8003e42:	4b04      	ldr	r3, [pc, #16]	; (8003e54 <HAL_IncTick+0x14>)
 8003e44:	6811      	ldr	r1, [r2, #0]
 8003e46:	781b      	ldrb	r3, [r3, #0]
 8003e48:	440b      	add	r3, r1
 8003e4a:	6013      	str	r3, [r2, #0]
}
 8003e4c:	4770      	bx	lr
 8003e4e:	bf00      	nop
 8003e50:	20012ae8 	.word	0x20012ae8
 8003e54:	20000088 	.word	0x20000088

08003e58 <HAL_GetTick>:
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
  return uwTick;
 8003e58:	4b01      	ldr	r3, [pc, #4]	; (8003e60 <HAL_GetTick+0x8>)
 8003e5a:	6818      	ldr	r0, [r3, #0]
}
 8003e5c:	4770      	bx	lr
 8003e5e:	bf00      	nop
 8003e60:	20012ae8 	.word	0x20012ae8

08003e64 <HAL_Delay>:
  *       implementations in user file.
  * @param Delay specifies the delay time length, in milliseconds.
  * @retval None
  */
__weak void HAL_Delay(uint32_t Delay)
{
 8003e64:	b538      	push	{r3, r4, r5, lr}
 8003e66:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 8003e68:	f7ff fff6 	bl	8003e58 <HAL_GetTick>
  uint32_t wait = Delay;

  /* Add a freq to guarantee minimum wait */
  if (wait < HAL_MAX_DELAY)
 8003e6c:	1c63      	adds	r3, r4, #1
  {
    wait += (uint32_t)(uwTickFreq);
 8003e6e:	bf1c      	itt	ne
 8003e70:	4b05      	ldrne	r3, [pc, #20]	; (8003e88 <HAL_Delay+0x24>)
 8003e72:	781b      	ldrbne	r3, [r3, #0]
  uint32_t tickstart = HAL_GetTick();
 8003e74:	4605      	mov	r5, r0
    wait += (uint32_t)(uwTickFreq);
 8003e76:	bf18      	it	ne
 8003e78:	18e4      	addne	r4, r4, r3
  }

  while((HAL_GetTick() - tickstart) < wait)
 8003e7a:	f7ff ffed 	bl	8003e58 <HAL_GetTick>
 8003e7e:	1b40      	subs	r0, r0, r5
 8003e80:	42a0      	cmp	r0, r4
 8003e82:	d3fa      	bcc.n	8003e7a <HAL_Delay+0x16>
  {
  }
}
 8003e84:	bd38      	pop	{r3, r4, r5, pc}
 8003e86:	bf00      	nop
 8003e88:	20000088 	.word	0x20000088

08003e8c <HAL_NVIC_SetPriorityGrouping>:
  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 8003e8c:	4a07      	ldr	r2, [pc, #28]	; (8003eac <HAL_NVIC_SetPriorityGrouping+0x20>)
 8003e8e:	68d3      	ldr	r3, [r2, #12]
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 8003e90:	f423 63e0 	bic.w	r3, r3, #1792	; 0x700
 8003e94:	041b      	lsls	r3, r3, #16
 8003e96:	0c1b      	lsrs	r3, r3, #16
 8003e98:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 8003e9c:	0200      	lsls	r0, r0, #8
 8003e9e:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8003ea2:	f400 60e0 	and.w	r0, r0, #1792	; 0x700
  reg_value  =  (reg_value                                   |
 8003ea6:	4303      	orrs	r3, r0
  SCB->AIRCR =  reg_value;
 8003ea8:	60d3      	str	r3, [r2, #12]
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));
  
  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
}
 8003eaa:	4770      	bx	lr
 8003eac:	e000ed00 	.word	0xe000ed00

08003eb0 <HAL_NVIC_SetPriority>:
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 8003eb0:	4b17      	ldr	r3, [pc, #92]	; (8003f10 <HAL_NVIC_SetPriority+0x60>)
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.          
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{ 
 8003eb2:	b570      	push	{r4, r5, r6, lr}
 8003eb4:	68dc      	ldr	r4, [r3, #12]
 8003eb6:	f3c4 2402 	ubfx	r4, r4, #8, #3
{
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used          */
  uint32_t PreemptPriorityBits;
  uint32_t SubPriorityBits;

  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 8003eba:	f1c4 0507 	rsb	r5, r4, #7
 8003ebe:	2d04      	cmp	r5, #4
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8003ec0:	f104 0304 	add.w	r3, r4, #4
  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 8003ec4:	bf28      	it	cs
 8003ec6:	2504      	movcs	r5, #4

  return (
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8003ec8:	f04f 36ff 	mov.w	r6, #4294967295
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8003ecc:	2b06      	cmp	r3, #6
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8003ece:	fa06 f305 	lsl.w	r3, r6, r5
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8003ed2:	bf8c      	ite	hi
 8003ed4:	3c03      	subhi	r4, #3
 8003ed6:	2400      	movls	r4, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8003ed8:	ea21 0303 	bic.w	r3, r1, r3
 8003edc:	40a3      	lsls	r3, r4
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 8003ede:	fa06 f404 	lsl.w	r4, r6, r4
 8003ee2:	ea22 0404 	bic.w	r4, r2, r4
  if ((int32_t)(IRQn) >= 0)
 8003ee6:	2800      	cmp	r0, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8003ee8:	ea43 0304 	orr.w	r3, r3, r4
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8003eec:	bfa8      	it	ge
 8003eee:	f100 4060 	addge.w	r0, r0, #3758096384	; 0xe0000000
 8003ef2:	ea4f 1303 	mov.w	r3, r3, lsl #4
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8003ef6:	bfbc      	itt	lt
 8003ef8:	f000 000f 	andlt.w	r0, r0, #15
 8003efc:	4a05      	ldrlt	r2, [pc, #20]	; (8003f14 <HAL_NVIC_SetPriority+0x64>)
 8003efe:	b2db      	uxtb	r3, r3
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8003f00:	bfaa      	itet	ge
 8003f02:	f500 4061 	addge.w	r0, r0, #57600	; 0xe100
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8003f06:	5413      	strblt	r3, [r2, r0]
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8003f08:	f880 3300 	strbge.w	r3, [r0, #768]	; 0x300
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
  
  prioritygroup = NVIC_GetPriorityGrouping();
  
  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
}
 8003f0c:	bd70      	pop	{r4, r5, r6, pc}
 8003f0e:	bf00      	nop
 8003f10:	e000ed00 	.word	0xe000ed00
 8003f14:	e000ed14 	.word	0xe000ed14

08003f18 <HAL_NVIC_EnableIRQ>:
  if ((int32_t)(IRQn) >= 0)
 8003f18:	2800      	cmp	r0, #0
 8003f1a:	db08      	blt.n	8003f2e <HAL_NVIC_EnableIRQ+0x16>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8003f1c:	0942      	lsrs	r2, r0, #5
 8003f1e:	2301      	movs	r3, #1
 8003f20:	f000 001f 	and.w	r0, r0, #31
 8003f24:	fa03 f000 	lsl.w	r0, r3, r0
 8003f28:	4b01      	ldr	r3, [pc, #4]	; (8003f30 <HAL_NVIC_EnableIRQ+0x18>)
 8003f2a:	f843 0022 	str.w	r0, [r3, r2, lsl #2]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
  
  /* Enable interrupt */
  NVIC_EnableIRQ(IRQn);
}
 8003f2e:	4770      	bx	lr
 8003f30:	e000e100 	.word	0xe000e100

08003f34 <HAL_NVIC_DisableIRQ>:
  if ((int32_t)(IRQn) >= 0)
 8003f34:	2800      	cmp	r0, #0
 8003f36:	db0d      	blt.n	8003f54 <HAL_NVIC_DisableIRQ+0x20>
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8003f38:	0943      	lsrs	r3, r0, #5
 8003f3a:	2201      	movs	r2, #1
 8003f3c:	f000 001f 	and.w	r0, r0, #31
 8003f40:	fa02 f000 	lsl.w	r0, r2, r0
 8003f44:	3320      	adds	r3, #32
 8003f46:	4a04      	ldr	r2, [pc, #16]	; (8003f58 <HAL_NVIC_DisableIRQ+0x24>)
 8003f48:	f842 0023 	str.w	r0, [r2, r3, lsl #2]
  __ASM volatile ("dsb 0xF":::"memory");
 8003f4c:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 8003f50:	f3bf 8f6f 	isb	sy
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
  
  /* Disable interrupt */
  NVIC_DisableIRQ(IRQn);
}
 8003f54:	4770      	bx	lr
 8003f56:	bf00      	nop
 8003f58:	e000e100 	.word	0xe000e100

08003f5c <HAL_CRC_Init>:
  *         parameters in the CRC_InitTypeDef and create the associated handle.
  * @param  hcrc CRC handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_CRC_Init(CRC_HandleTypeDef *hcrc)
{
 8003f5c:	b510      	push	{r4, lr}
  /* Check the CRC handle allocation */
  if (hcrc == NULL)
 8003f5e:	4604      	mov	r4, r0
 8003f60:	b150      	cbz	r0, 8003f78 <HAL_CRC_Init+0x1c>
  }

  /* Check the parameters */
  assert_param(IS_CRC_ALL_INSTANCE(hcrc->Instance));

  if (hcrc->State == HAL_CRC_STATE_RESET)
 8003f62:	7943      	ldrb	r3, [r0, #5]
 8003f64:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8003f68:	b913      	cbnz	r3, 8003f70 <HAL_CRC_Init+0x14>
  {
    /* Allocate lock resource and initialize it */
    hcrc->Lock = HAL_UNLOCKED;
 8003f6a:	7102      	strb	r2, [r0, #4]
    /* Init the low level hardware */
    HAL_CRC_MspInit(hcrc);
 8003f6c:	f7fe f934 	bl	80021d8 <HAL_CRC_MspInit>
  }

  /* Change CRC peripheral state */
  hcrc->State = HAL_CRC_STATE_READY;
 8003f70:	2301      	movs	r3, #1
 8003f72:	7163      	strb	r3, [r4, #5]

  /* Return function status */
  return HAL_OK;
 8003f74:	2000      	movs	r0, #0
}
 8003f76:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 8003f78:	2001      	movs	r0, #1
 8003f7a:	e7fc      	b.n	8003f76 <HAL_CRC_Init+0x1a>

08003f7c <DMA_CalcBaseAndBitshift>:
  *                     the configuration information for the specified DMA Stream. 
  * @retval Stream base address
  */
static uint32_t DMA_CalcBaseAndBitshift(DMA_HandleTypeDef *hdma)
{
  uint32_t stream_number = (((uint32_t)hdma->Instance & 0xFFU) - 16U) / 24U;
 8003f7c:	6803      	ldr	r3, [r0, #0]
 8003f7e:	b2da      	uxtb	r2, r3
 8003f80:	f423 737f 	bic.w	r3, r3, #1020	; 0x3fc
 8003f84:	f023 0303 	bic.w	r3, r3, #3
 8003f88:	2118      	movs	r1, #24
 8003f8a:	3a10      	subs	r2, #16
 8003f8c:	fbb2 f2f1 	udiv	r2, r2, r1
  
  /* lookup table for necessary bitshift of flags within status registers */
  static const uint8_t flagBitshiftOffset[8U] = {0U, 6U, 16U, 22U, 0U, 6U, 16U, 22U};
  hdma->StreamIndex = flagBitshiftOffset[stream_number];
 8003f90:	4904      	ldr	r1, [pc, #16]	; (8003fa4 <DMA_CalcBaseAndBitshift+0x28>)
  
  if (stream_number > 3U)
 8003f92:	2a03      	cmp	r2, #3
  {
    /* return pointer to HISR and HIFCR */
    hdma->StreamBaseAddress = (((uint32_t)hdma->Instance & (uint32_t)(~0x3FFU)) + 4U);
 8003f94:	bf88      	it	hi
 8003f96:	3304      	addhi	r3, #4
  hdma->StreamIndex = flagBitshiftOffset[stream_number];
 8003f98:	5c89      	ldrb	r1, [r1, r2]
  }
  else
  {
    /* return pointer to LISR and LIFCR */
    hdma->StreamBaseAddress = ((uint32_t)hdma->Instance & (uint32_t)(~0x3FFU));
 8003f9a:	6583      	str	r3, [r0, #88]	; 0x58
  hdma->StreamIndex = flagBitshiftOffset[stream_number];
 8003f9c:	65c1      	str	r1, [r0, #92]	; 0x5c
  }
  
  return hdma->StreamBaseAddress;
}
 8003f9e:	6d80      	ldr	r0, [r0, #88]	; 0x58
 8003fa0:	4770      	bx	lr
 8003fa2:	bf00      	nop
 8003fa4:	0801b3bc 	.word	0x0801b3bc

08003fa8 <HAL_DMA_Init>:
{
 8003fa8:	b570      	push	{r4, r5, r6, lr}
 8003faa:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 8003fac:	f7ff ff54 	bl	8003e58 <HAL_GetTick>
 8003fb0:	4605      	mov	r5, r0
  if(hdma == NULL)
 8003fb2:	2c00      	cmp	r4, #0
 8003fb4:	d071      	beq.n	800409a <HAL_DMA_Init+0xf2>
  __HAL_UNLOCK(hdma);
 8003fb6:	2300      	movs	r3, #0
 8003fb8:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34
  __HAL_DMA_DISABLE(hdma);
 8003fbc:	6822      	ldr	r2, [r4, #0]
  hdma->State = HAL_DMA_STATE_BUSY;
 8003fbe:	2302      	movs	r3, #2
 8003fc0:	f884 3035 	strb.w	r3, [r4, #53]	; 0x35
  __HAL_DMA_DISABLE(hdma);
 8003fc4:	6813      	ldr	r3, [r2, #0]
 8003fc6:	f023 0301 	bic.w	r3, r3, #1
 8003fca:	6013      	str	r3, [r2, #0]
  while((hdma->Instance->CR & DMA_SxCR_EN) != RESET)
 8003fcc:	6821      	ldr	r1, [r4, #0]
 8003fce:	680b      	ldr	r3, [r1, #0]
 8003fd0:	07d8      	lsls	r0, r3, #31
 8003fd2:	d43c      	bmi.n	800404e <HAL_DMA_Init+0xa6>
  tmp = hdma->Instance->CR;
 8003fd4:	680b      	ldr	r3, [r1, #0]
  tmp &= ((uint32_t)~(DMA_SxCR_CHSEL | DMA_SxCR_MBURST | DMA_SxCR_PBURST | \
 8003fd6:	4d32      	ldr	r5, [pc, #200]	; (80040a0 <HAL_DMA_Init+0xf8>)
          hdma->Init.PeriphDataAlignment | hdma->Init.MemDataAlignment |
 8003fd8:	69a0      	ldr	r0, [r4, #24]
  tmp &= ((uint32_t)~(DMA_SxCR_CHSEL | DMA_SxCR_MBURST | DMA_SxCR_PBURST | \
 8003fda:	401d      	ands	r5, r3
  tmp |=  hdma->Init.Channel             | hdma->Init.Direction        |
 8003fdc:	e9d4 2301 	ldrd	r2, r3, [r4, #4]
 8003fe0:	4313      	orrs	r3, r2
 8003fe2:	68e2      	ldr	r2, [r4, #12]
 8003fe4:	4313      	orrs	r3, r2
          hdma->Init.PeriphInc           | hdma->Init.MemInc           |
 8003fe6:	6922      	ldr	r2, [r4, #16]
 8003fe8:	4313      	orrs	r3, r2
 8003fea:	6962      	ldr	r2, [r4, #20]
 8003fec:	4313      	orrs	r3, r2
          hdma->Init.PeriphDataAlignment | hdma->Init.MemDataAlignment |
 8003fee:	69e2      	ldr	r2, [r4, #28]
 8003ff0:	4303      	orrs	r3, r0
 8003ff2:	4313      	orrs	r3, r2
          hdma->Init.Mode                | hdma->Init.Priority;
 8003ff4:	6a22      	ldr	r2, [r4, #32]
 8003ff6:	4313      	orrs	r3, r2
  if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
 8003ff8:	6a62      	ldr	r2, [r4, #36]	; 0x24
 8003ffa:	2a04      	cmp	r2, #4
  tmp |=  hdma->Init.Channel             | hdma->Init.Direction        |
 8003ffc:	ea43 0305 	orr.w	r3, r3, r5
    tmp |=  hdma->Init.MemBurst | hdma->Init.PeriphBurst;
 8004000:	bf02      	ittt	eq
 8004002:	e9d4 560b 	ldrdeq	r5, r6, [r4, #44]	; 0x2c
 8004006:	4335      	orreq	r5, r6
 8004008:	432b      	orreq	r3, r5
  hdma->Instance->CR = tmp;  
 800400a:	600b      	str	r3, [r1, #0]
  tmp = hdma->Instance->FCR;
 800400c:	694b      	ldr	r3, [r1, #20]
  if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
 800400e:	2a04      	cmp	r2, #4
  tmp &= (uint32_t)~(DMA_SxFCR_DMDIS | DMA_SxFCR_FTH);
 8004010:	f023 0307 	bic.w	r3, r3, #7
  tmp |= hdma->Init.FIFOMode;
 8004014:	ea43 0302 	orr.w	r3, r3, r2
  if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
 8004018:	d10b      	bne.n	8004032 <HAL_DMA_Init+0x8a>
    tmp |= hdma->Init.FIFOThreshold;
 800401a:	6aa2      	ldr	r2, [r4, #40]	; 0x28
    if (hdma->Init.MemBurst != DMA_MBURST_SINGLE)
 800401c:	6ae5      	ldr	r5, [r4, #44]	; 0x2c
    tmp |= hdma->Init.FIFOThreshold;
 800401e:	4313      	orrs	r3, r2
    if (hdma->Init.MemBurst != DMA_MBURST_SINGLE)
 8004020:	b13d      	cbz	r5, 8004032 <HAL_DMA_Init+0x8a>
{
  HAL_StatusTypeDef status = HAL_OK;
  uint32_t tmp = hdma->Init.FIFOThreshold;
  
  /* Memory Data size equal to Byte */
  if(hdma->Init.MemDataAlignment == DMA_MDATAALIGN_BYTE)
 8004022:	b9f8      	cbnz	r0, 8004064 <HAL_DMA_Init+0xbc>
  {
    switch (tmp)
 8004024:	2a01      	cmp	r2, #1
 8004026:	d02d      	beq.n	8004084 <HAL_DMA_Init+0xdc>
 8004028:	d301      	bcc.n	800402e <HAL_DMA_Init+0x86>
 800402a:	2a02      	cmp	r2, #2
  }
  
  /* Memory Data size equal to Word */
  else
  {
    switch (tmp)
 800402c:	d101      	bne.n	8004032 <HAL_DMA_Init+0x8a>
    case DMA_FIFO_THRESHOLD_HALFFULL:
    case DMA_FIFO_THRESHOLD_3QUARTERSFULL:
      status = HAL_ERROR;
      break;
    case DMA_FIFO_THRESHOLD_FULL:
      if ((hdma->Init.MemBurst & DMA_SxCR_MBURST_1) == DMA_SxCR_MBURST_1)
 800402e:	01ea      	lsls	r2, r5, #7
 8004030:	d42b      	bmi.n	800408a <HAL_DMA_Init+0xe2>
  hdma->Instance->FCR = tmp;
 8004032:	614b      	str	r3, [r1, #20]
  regs = (DMA_Base_Registers *)DMA_CalcBaseAndBitshift(hdma);
 8004034:	4620      	mov	r0, r4
 8004036:	f7ff ffa1 	bl	8003f7c <DMA_CalcBaseAndBitshift>
  regs->IFCR = 0x3FU << hdma->StreamIndex;
 800403a:	6de2      	ldr	r2, [r4, #92]	; 0x5c
 800403c:	233f      	movs	r3, #63	; 0x3f
 800403e:	4093      	lsls	r3, r2
 8004040:	6083      	str	r3, [r0, #8]
  hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 8004042:	2000      	movs	r0, #0
  hdma->State = HAL_DMA_STATE_READY;
 8004044:	2301      	movs	r3, #1
  hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 8004046:	6560      	str	r0, [r4, #84]	; 0x54
  hdma->State = HAL_DMA_STATE_READY;
 8004048:	f884 3035 	strb.w	r3, [r4, #53]	; 0x35
  return HAL_OK;
 800404c:	e009      	b.n	8004062 <HAL_DMA_Init+0xba>
    if((HAL_GetTick() - tickstart ) > HAL_TIMEOUT_DMA_ABORT)
 800404e:	f7ff ff03 	bl	8003e58 <HAL_GetTick>
 8004052:	1b40      	subs	r0, r0, r5
 8004054:	2805      	cmp	r0, #5
 8004056:	d9b9      	bls.n	8003fcc <HAL_DMA_Init+0x24>
      hdma->ErrorCode = HAL_DMA_ERROR_TIMEOUT;
 8004058:	2320      	movs	r3, #32
 800405a:	6563      	str	r3, [r4, #84]	; 0x54
      hdma->State = HAL_DMA_STATE_TIMEOUT;
 800405c:	2003      	movs	r0, #3
        hdma->State = HAL_DMA_STATE_READY;
 800405e:	f884 0035 	strb.w	r0, [r4, #53]	; 0x35
}
 8004062:	bd70      	pop	{r4, r5, r6, pc}
  else if (hdma->Init.MemDataAlignment == DMA_MDATAALIGN_HALFWORD)
 8004064:	f5b0 5f00 	cmp.w	r0, #8192	; 0x2000
 8004068:	d113      	bne.n	8004092 <HAL_DMA_Init+0xea>
    switch (tmp)
 800406a:	2a03      	cmp	r2, #3
 800406c:	d8e1      	bhi.n	8004032 <HAL_DMA_Init+0x8a>
 800406e:	a001      	add	r0, pc, #4	; (adr r0, 8004074 <HAL_DMA_Init+0xcc>)
 8004070:	f850 f022 	ldr.w	pc, [r0, r2, lsl #2]
 8004074:	0800408b 	.word	0x0800408b
 8004078:	0800402f 	.word	0x0800402f
 800407c:	0800408b 	.word	0x0800408b
 8004080:	08004085 	.word	0x08004085
      if (hdma->Init.MemBurst == DMA_MBURST_INC16)
 8004084:	f1b5 7fc0 	cmp.w	r5, #25165824	; 0x1800000
 8004088:	d1d3      	bne.n	8004032 <HAL_DMA_Init+0x8a>
        hdma->ErrorCode = HAL_DMA_ERROR_PARAM;
 800408a:	2340      	movs	r3, #64	; 0x40
 800408c:	6563      	str	r3, [r4, #84]	; 0x54
        hdma->State = HAL_DMA_STATE_READY;
 800408e:	2001      	movs	r0, #1
 8004090:	e7e5      	b.n	800405e <HAL_DMA_Init+0xb6>
    switch (tmp)
 8004092:	2a02      	cmp	r2, #2
 8004094:	d9f9      	bls.n	800408a <HAL_DMA_Init+0xe2>
 8004096:	2a03      	cmp	r2, #3
 8004098:	e7c8      	b.n	800402c <HAL_DMA_Init+0x84>
    return HAL_ERROR;
 800409a:	2001      	movs	r0, #1
 800409c:	e7e1      	b.n	8004062 <HAL_DMA_Init+0xba>
 800409e:	bf00      	nop
 80040a0:	f010803f 	.word	0xf010803f

080040a4 <HAL_DMA_Start_IT>:
{
 80040a4:	b570      	push	{r4, r5, r6, lr}
  __HAL_LOCK(hdma);
 80040a6:	f890 4034 	ldrb.w	r4, [r0, #52]	; 0x34
 80040aa:	2c01      	cmp	r4, #1
 80040ac:	d032      	beq.n	8004114 <HAL_DMA_Start_IT+0x70>
 80040ae:	2401      	movs	r4, #1
 80040b0:	f880 4034 	strb.w	r4, [r0, #52]	; 0x34
  if(HAL_DMA_STATE_READY == hdma->State)
 80040b4:	f890 4035 	ldrb.w	r4, [r0, #53]	; 0x35
  DMA_Base_Registers *regs = (DMA_Base_Registers *)hdma->StreamBaseAddress;
 80040b8:	6d86      	ldr	r6, [r0, #88]	; 0x58
  if(HAL_DMA_STATE_READY == hdma->State)
 80040ba:	2c01      	cmp	r4, #1
 80040bc:	f04f 0500 	mov.w	r5, #0
 80040c0:	f04f 0402 	mov.w	r4, #2
 80040c4:	d124      	bne.n	8004110 <HAL_DMA_Start_IT+0x6c>
    hdma->State = HAL_DMA_STATE_BUSY;
 80040c6:	f880 4035 	strb.w	r4, [r0, #53]	; 0x35
  hdma->Instance->CR &= (uint32_t)(~DMA_SxCR_DBM);
 80040ca:	6804      	ldr	r4, [r0, #0]
    hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 80040cc:	6545      	str	r5, [r0, #84]	; 0x54
  hdma->Instance->CR &= (uint32_t)(~DMA_SxCR_DBM);
 80040ce:	6825      	ldr	r5, [r4, #0]
 80040d0:	f425 2580 	bic.w	r5, r5, #262144	; 0x40000
 80040d4:	6025      	str	r5, [r4, #0]
  hdma->Instance->NDTR = DataLength;
 80040d6:	6063      	str	r3, [r4, #4]
  if((hdma->Init.Direction) == DMA_MEMORY_TO_PERIPH)
 80040d8:	6883      	ldr	r3, [r0, #8]
 80040da:	2b40      	cmp	r3, #64	; 0x40
    hdma->Instance->PAR = DstAddress;
 80040dc:	bf0e      	itee	eq
 80040de:	60a2      	streq	r2, [r4, #8]
    hdma->Instance->PAR = SrcAddress;
 80040e0:	60a1      	strne	r1, [r4, #8]
    hdma->Instance->M0AR = DstAddress;
 80040e2:	60e2      	strne	r2, [r4, #12]
    regs->IFCR = 0x3FU << hdma->StreamIndex;
 80040e4:	6dc2      	ldr	r2, [r0, #92]	; 0x5c
    hdma->Instance->M0AR = SrcAddress;
 80040e6:	bf08      	it	eq
 80040e8:	60e1      	streq	r1, [r4, #12]
    regs->IFCR = 0x3FU << hdma->StreamIndex;
 80040ea:	233f      	movs	r3, #63	; 0x3f
 80040ec:	4093      	lsls	r3, r2
 80040ee:	60b3      	str	r3, [r6, #8]
    hdma->Instance->CR  |= DMA_IT_TC | DMA_IT_TE | DMA_IT_DME;
 80040f0:	6823      	ldr	r3, [r4, #0]
 80040f2:	f043 0316 	orr.w	r3, r3, #22
 80040f6:	6023      	str	r3, [r4, #0]
    if(hdma->XferHalfCpltCallback != NULL)
 80040f8:	6c03      	ldr	r3, [r0, #64]	; 0x40
 80040fa:	b11b      	cbz	r3, 8004104 <HAL_DMA_Start_IT+0x60>
      hdma->Instance->CR  |= DMA_IT_HT;
 80040fc:	6823      	ldr	r3, [r4, #0]
 80040fe:	f043 0308 	orr.w	r3, r3, #8
 8004102:	6023      	str	r3, [r4, #0]
    __HAL_DMA_ENABLE(hdma);
 8004104:	6823      	ldr	r3, [r4, #0]
 8004106:	f043 0301 	orr.w	r3, r3, #1
 800410a:	6023      	str	r3, [r4, #0]
  HAL_StatusTypeDef status = HAL_OK;
 800410c:	2000      	movs	r0, #0
}
 800410e:	bd70      	pop	{r4, r5, r6, pc}
    __HAL_UNLOCK(hdma);	  
 8004110:	f880 5034 	strb.w	r5, [r0, #52]	; 0x34
  __HAL_LOCK(hdma);
 8004114:	2002      	movs	r0, #2
 8004116:	e7fa      	b.n	800410e <HAL_DMA_Start_IT+0x6a>

08004118 <DMA2D_SetConfig>:
  * @param  Width      The width of data to be transferred from source to destination.
  * @param  Height     The height of data to be transferred from source to destination.
  * @retval HAL status
  */
static void DMA2D_SetConfig(DMA2D_HandleTypeDef *hdma2d, uint32_t pdata, uint32_t DstAddress, uint32_t Width, uint32_t Height)
{
 8004118:	b570      	push	{r4, r5, r6, lr}
  uint32_t tmp2;
  uint32_t tmp3;
  uint32_t tmp4;

  /* Configure DMA2D data size */
  MODIFY_REG(hdma2d->Instance->NLR, (DMA2D_NLR_NL|DMA2D_NLR_PL), (Height| (Width << DMA2D_NLR_PL_Pos)));
 800411a:	6804      	ldr	r4, [r0, #0]
 800411c:	9d04      	ldr	r5, [sp, #16]
 800411e:	6c66      	ldr	r6, [r4, #68]	; 0x44
 8004120:	ea45 4303 	orr.w	r3, r5, r3, lsl #16
 8004124:	f006 4640 	and.w	r6, r6, #3221225472	; 0xc0000000
 8004128:	4333      	orrs	r3, r6
 800412a:	6463      	str	r3, [r4, #68]	; 0x44

  /* Configure DMA2D destination address */
  WRITE_REG(hdma2d->Instance->OMAR, DstAddress);

  /* Register to memory DMA2D mode selected */
  if (hdma2d->Init.Mode == DMA2D_R2M)
 800412c:	6843      	ldr	r3, [r0, #4]
  WRITE_REG(hdma2d->Instance->OMAR, DstAddress);
 800412e:	63e2      	str	r2, [r4, #60]	; 0x3c
  if (hdma2d->Init.Mode == DMA2D_R2M)
 8004130:	f5b3 3f40 	cmp.w	r3, #196608	; 0x30000
 8004134:	d130      	bne.n	8004198 <DMA2D_SetConfig+0x80>
    tmp2 = pdata & DMA2D_OCOLR_RED_1;
    tmp3 = pdata & DMA2D_OCOLR_GREEN_1;
    tmp4 = pdata & DMA2D_OCOLR_BLUE_1;

    /* Prepare the value to be written to the OCOLR register according to the color mode */
    if (hdma2d->Init.ColorMode == DMA2D_OUTPUT_ARGB8888)
 8004136:	6886      	ldr	r6, [r0, #8]
 8004138:	b11e      	cbz	r6, 8004142 <DMA2D_SetConfig+0x2a>
    {
      tmp = (tmp3 | tmp2 | tmp1| tmp4);
    }
    else if (hdma2d->Init.ColorMode == DMA2D_OUTPUT_RGB888)
 800413a:	2e01      	cmp	r6, #1
 800413c:	d103      	bne.n	8004146 <DMA2D_SetConfig+0x2e>
    {
      tmp = (tmp3 | tmp2 | tmp4);
 800413e:	f021 417f 	bic.w	r1, r1, #4278190080	; 0xff000000
      tmp3 = (tmp3 >> 12U);
      tmp4 = (tmp4 >> 4U );
      tmp  = ((tmp3 << 4U) | (tmp2 << 8U) | (tmp1 << 12U) | tmp4);
    }
    /* Write to DMA2D OCOLR register */
    WRITE_REG(hdma2d->Instance->OCOLR, tmp);
 8004142:	63a1      	str	r1, [r4, #56]	; 0x38
  else /* M2M, M2M_PFC or M2M_Blending DMA2D Mode */
  {
    /* Configure DMA2D source address */
    WRITE_REG(hdma2d->Instance->FGMAR, pdata);
  }
}
 8004144:	bd70      	pop	{r4, r5, r6, pc}
    else if (hdma2d->Init.ColorMode == DMA2D_OUTPUT_RGB565)
 8004146:	2e02      	cmp	r6, #2
    tmp2 = pdata & DMA2D_OCOLR_RED_1;
 8004148:	f401 037f 	and.w	r3, r1, #16711680	; 0xff0000
    tmp3 = pdata & DMA2D_OCOLR_GREEN_1;
 800414c:	f401 457f 	and.w	r5, r1, #65280	; 0xff00
    tmp4 = pdata & DMA2D_OCOLR_BLUE_1;
 8004150:	b2c8      	uxtb	r0, r1
    else if (hdma2d->Init.ColorMode == DMA2D_OUTPUT_RGB565)
 8004152:	d107      	bne.n	8004164 <DMA2D_SetConfig+0x4c>
      tmp2 = (tmp2 >> 19U);
 8004154:	0cd9      	lsrs	r1, r3, #19
      tmp3 = (tmp3 >> 10U);
 8004156:	0aad      	lsrs	r5, r5, #10
      tmp  = ((tmp3 << 5U) | (tmp2 << 11U) | tmp4);
 8004158:	02c9      	lsls	r1, r1, #11
 800415a:	ea41 1145 	orr.w	r1, r1, r5, lsl #5
 800415e:	ea41 01d0 	orr.w	r1, r1, r0, lsr #3
 8004162:	e7ee      	b.n	8004142 <DMA2D_SetConfig+0x2a>
    else if (hdma2d->Init.ColorMode == DMA2D_OUTPUT_ARGB1555)
 8004164:	2e03      	cmp	r6, #3
    tmp1 = pdata & DMA2D_OCOLR_ALPHA_1;
 8004166:	f001 427f 	and.w	r2, r1, #4278190080	; 0xff000000
    else if (hdma2d->Init.ColorMode == DMA2D_OUTPUT_ARGB1555)
 800416a:	d10a      	bne.n	8004182 <DMA2D_SetConfig+0x6a>
      tmp2 = (tmp2 >> 19U);
 800416c:	0cdb      	lsrs	r3, r3, #19
      tmp3 = (tmp3 >> 11U);
 800416e:	0aed      	lsrs	r5, r5, #11
      tmp  = ((tmp3 << 5U) | (tmp2 << 10U) | (tmp1 << 15U) | tmp4);
 8004170:	029b      	lsls	r3, r3, #10
 8004172:	ea43 1345 	orr.w	r3, r3, r5, lsl #5
 8004176:	ea43 03d0 	orr.w	r3, r3, r0, lsr #3
      tmp1 = (tmp1 >> 31U);
 800417a:	0fd1      	lsrs	r1, r2, #31
      tmp  = ((tmp3 << 5U) | (tmp2 << 10U) | (tmp1 << 15U) | tmp4);
 800417c:	ea43 31c1 	orr.w	r1, r3, r1, lsl #15
 8004180:	e7df      	b.n	8004142 <DMA2D_SetConfig+0x2a>
      tmp2 = (tmp2 >> 20U);
 8004182:	0d19      	lsrs	r1, r3, #20
      tmp3 = (tmp3 >> 12U);
 8004184:	0b2d      	lsrs	r5, r5, #12
      tmp  = ((tmp3 << 4U) | (tmp2 << 8U) | (tmp1 << 12U) | tmp4);
 8004186:	0209      	lsls	r1, r1, #8
 8004188:	ea41 1105 	orr.w	r1, r1, r5, lsl #4
 800418c:	ea41 1110 	orr.w	r1, r1, r0, lsr #4
      tmp1 = (tmp1 >> 28U);
 8004190:	0f13      	lsrs	r3, r2, #28
      tmp  = ((tmp3 << 4U) | (tmp2 << 8U) | (tmp1 << 12U) | tmp4);
 8004192:	ea41 3103 	orr.w	r1, r1, r3, lsl #12
 8004196:	e7d4      	b.n	8004142 <DMA2D_SetConfig+0x2a>
    WRITE_REG(hdma2d->Instance->FGMAR, pdata);
 8004198:	60e1      	str	r1, [r4, #12]
}
 800419a:	e7d3      	b.n	8004144 <DMA2D_SetConfig+0x2c>

0800419c <HAL_DMA2D_Init>:
{
 800419c:	b510      	push	{r4, lr}
  if(hdma2d == NULL)
 800419e:	4604      	mov	r4, r0
 80041a0:	b330      	cbz	r0, 80041f0 <HAL_DMA2D_Init+0x54>
  if(hdma2d->State == HAL_DMA2D_STATE_RESET)
 80041a2:	f890 3039 	ldrb.w	r3, [r0, #57]	; 0x39
 80041a6:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 80041aa:	b91b      	cbnz	r3, 80041b4 <HAL_DMA2D_Init+0x18>
    hdma2d->Lock = HAL_UNLOCKED;
 80041ac:	f880 2038 	strb.w	r2, [r0, #56]	; 0x38
    HAL_DMA2D_MspInit(hdma2d);
 80041b0:	f7fe f82a 	bl	8002208 <HAL_DMA2D_MspInit>
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, hdma2d->Init.Mode);
 80041b4:	6822      	ldr	r2, [r4, #0]
 80041b6:	6861      	ldr	r1, [r4, #4]
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 80041b8:	2302      	movs	r3, #2
 80041ba:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, hdma2d->Init.Mode);
 80041be:	6813      	ldr	r3, [r2, #0]
 80041c0:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 80041c4:	430b      	orrs	r3, r1
 80041c6:	6013      	str	r3, [r2, #0]
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM, hdma2d->Init.ColorMode);
 80041c8:	6b53      	ldr	r3, [r2, #52]	; 0x34
 80041ca:	68a1      	ldr	r1, [r4, #8]
 80041cc:	f023 0307 	bic.w	r3, r3, #7
 80041d0:	430b      	orrs	r3, r1
 80041d2:	6353      	str	r3, [r2, #52]	; 0x34
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
 80041d4:	6c13      	ldr	r3, [r2, #64]	; 0x40
 80041d6:	68e1      	ldr	r1, [r4, #12]
 80041d8:	f423 537f 	bic.w	r3, r3, #16320	; 0x3fc0
 80041dc:	f023 033f 	bic.w	r3, r3, #63	; 0x3f
 80041e0:	430b      	orrs	r3, r1
 80041e2:	6413      	str	r3, [r2, #64]	; 0x40
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 80041e4:	2000      	movs	r0, #0
  hdma2d->State  = HAL_DMA2D_STATE_READY;
 80041e6:	2301      	movs	r3, #1
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 80041e8:	63e0      	str	r0, [r4, #60]	; 0x3c
  hdma2d->State  = HAL_DMA2D_STATE_READY;
 80041ea:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
}
 80041ee:	bd10      	pop	{r4, pc}
     return HAL_ERROR;
 80041f0:	2001      	movs	r0, #1
 80041f2:	e7fc      	b.n	80041ee <HAL_DMA2D_Init+0x52>

080041f4 <HAL_DMA2D_Start_IT>:
{
 80041f4:	b573      	push	{r0, r1, r4, r5, r6, lr}
  __HAL_LOCK(hdma2d);
 80041f6:	f890 4038 	ldrb.w	r4, [r0, #56]	; 0x38
 80041fa:	2c01      	cmp	r4, #1
{
 80041fc:	4605      	mov	r5, r0
 80041fe:	f04f 0402 	mov.w	r4, #2
  __HAL_LOCK(hdma2d);
 8004202:	d013      	beq.n	800422c <HAL_DMA2D_Start_IT+0x38>
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 8004204:	f880 4039 	strb.w	r4, [r0, #57]	; 0x39
  __HAL_LOCK(hdma2d);
 8004208:	2601      	movs	r6, #1
  DMA2D_SetConfig(hdma2d, pdata, DstAddress, Width, Height);
 800420a:	9c06      	ldr	r4, [sp, #24]
  __HAL_LOCK(hdma2d);
 800420c:	f880 6038 	strb.w	r6, [r0, #56]	; 0x38
  DMA2D_SetConfig(hdma2d, pdata, DstAddress, Width, Height);
 8004210:	9400      	str	r4, [sp, #0]
 8004212:	f7ff ff81 	bl	8004118 <DMA2D_SetConfig>
  __HAL_DMA2D_ENABLE_IT(hdma2d, DMA2D_IT_TC|DMA2D_IT_TE|DMA2D_IT_CE);
 8004216:	682b      	ldr	r3, [r5, #0]
 8004218:	681a      	ldr	r2, [r3, #0]
 800421a:	f442 520c 	orr.w	r2, r2, #8960	; 0x2300
 800421e:	601a      	str	r2, [r3, #0]
  __HAL_DMA2D_ENABLE(hdma2d);
 8004220:	681a      	ldr	r2, [r3, #0]
 8004222:	4332      	orrs	r2, r6
 8004224:	601a      	str	r2, [r3, #0]
  return HAL_OK;
 8004226:	2000      	movs	r0, #0
}
 8004228:	b002      	add	sp, #8
 800422a:	bd70      	pop	{r4, r5, r6, pc}
  __HAL_LOCK(hdma2d);
 800422c:	4620      	mov	r0, r4
 800422e:	e7fb      	b.n	8004228 <HAL_DMA2D_Start_IT+0x34>

08004230 <HAL_DMA2D_BlendingStart_IT>:
{
 8004230:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8004232:	4615      	mov	r5, r2
 8004234:	461a      	mov	r2, r3
  __HAL_LOCK(hdma2d);
 8004236:	f890 3038 	ldrb.w	r3, [r0, #56]	; 0x38
 800423a:	2b01      	cmp	r3, #1
{
 800423c:	4604      	mov	r4, r0
 800423e:	f04f 0302 	mov.w	r3, #2
  __HAL_LOCK(hdma2d);
 8004242:	d016      	beq.n	8004272 <HAL_DMA2D_BlendingStart_IT+0x42>
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 8004244:	f880 3039 	strb.w	r3, [r0, #57]	; 0x39
  WRITE_REG(hdma2d->Instance->BGMAR, SrcAddress2);
 8004248:	6803      	ldr	r3, [r0, #0]
  __HAL_LOCK(hdma2d);
 800424a:	2601      	movs	r6, #1
 800424c:	f880 6038 	strb.w	r6, [r0, #56]	; 0x38
  WRITE_REG(hdma2d->Instance->BGMAR, SrcAddress2);
 8004250:	615d      	str	r5, [r3, #20]
  DMA2D_SetConfig(hdma2d, SrcAddress1, DstAddress, Width, Height);
 8004252:	9b07      	ldr	r3, [sp, #28]
 8004254:	9300      	str	r3, [sp, #0]
 8004256:	9b06      	ldr	r3, [sp, #24]
 8004258:	f7ff ff5e 	bl	8004118 <DMA2D_SetConfig>
  __HAL_DMA2D_ENABLE_IT(hdma2d, DMA2D_IT_TC|DMA2D_IT_TE|DMA2D_IT_CE);
 800425c:	6823      	ldr	r3, [r4, #0]
 800425e:	681a      	ldr	r2, [r3, #0]
 8004260:	f442 520c 	orr.w	r2, r2, #8960	; 0x2300
 8004264:	601a      	str	r2, [r3, #0]
  __HAL_DMA2D_ENABLE(hdma2d);
 8004266:	681a      	ldr	r2, [r3, #0]
 8004268:	4332      	orrs	r2, r6
 800426a:	601a      	str	r2, [r3, #0]
  return HAL_OK;
 800426c:	2000      	movs	r0, #0
}
 800426e:	b002      	add	sp, #8
 8004270:	bd70      	pop	{r4, r5, r6, pc}
  __HAL_LOCK(hdma2d);
 8004272:	4618      	mov	r0, r3
 8004274:	e7fb      	b.n	800426e <HAL_DMA2D_BlendingStart_IT+0x3e>

08004276 <HAL_DMA2D_Abort>:
   MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_ABORT|DMA2D_CR_START, DMA2D_CR_ABORT);
 8004276:	6802      	ldr	r2, [r0, #0]
{
 8004278:	b538      	push	{r3, r4, r5, lr}
   MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_ABORT|DMA2D_CR_START, DMA2D_CR_ABORT);
 800427a:	6813      	ldr	r3, [r2, #0]
 800427c:	f023 0305 	bic.w	r3, r3, #5
 8004280:	f043 0304 	orr.w	r3, r3, #4
 8004284:	6013      	str	r3, [r2, #0]
{
 8004286:	4604      	mov	r4, r0
  tickstart = HAL_GetTick();
 8004288:	f7ff fde6 	bl	8003e58 <HAL_GetTick>
 800428c:	4605      	mov	r5, r0
  while((hdma2d->Instance->CR & DMA2D_CR_START) != 0U)
 800428e:	6823      	ldr	r3, [r4, #0]
 8004290:	6818      	ldr	r0, [r3, #0]
 8004292:	f010 0001 	ands.w	r0, r0, #1
 8004296:	d109      	bne.n	80042ac <HAL_DMA2D_Abort+0x36>
  __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TC|DMA2D_IT_TE|DMA2D_IT_CE);
 8004298:	681a      	ldr	r2, [r3, #0]
 800429a:	f422 520c 	bic.w	r2, r2, #8960	; 0x2300
 800429e:	601a      	str	r2, [r3, #0]
  hdma2d->State = HAL_DMA2D_STATE_READY;
 80042a0:	2301      	movs	r3, #1
 80042a2:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
  __HAL_UNLOCK(hdma2d);
 80042a6:	f884 0038 	strb.w	r0, [r4, #56]	; 0x38
  return HAL_OK;
 80042aa:	e00f      	b.n	80042cc <HAL_DMA2D_Abort+0x56>
    if((HAL_GetTick() - tickstart ) > DMA2D_TIMEOUT_ABORT)
 80042ac:	f7ff fdd4 	bl	8003e58 <HAL_GetTick>
 80042b0:	1b40      	subs	r0, r0, r5
 80042b2:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
 80042b6:	d9ea      	bls.n	800428e <HAL_DMA2D_Abort+0x18>
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_TIMEOUT;
 80042b8:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 80042ba:	f043 0320 	orr.w	r3, r3, #32
 80042be:	63e3      	str	r3, [r4, #60]	; 0x3c
      hdma2d->State = HAL_DMA2D_STATE_TIMEOUT;
 80042c0:	2003      	movs	r0, #3
      __HAL_UNLOCK(hdma2d);
 80042c2:	2300      	movs	r3, #0
      hdma2d->State = HAL_DMA2D_STATE_TIMEOUT;
 80042c4:	f884 0039 	strb.w	r0, [r4, #57]	; 0x39
      __HAL_UNLOCK(hdma2d);
 80042c8:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38
}
 80042cc:	bd38      	pop	{r3, r4, r5, pc}

080042ce <HAL_DMA2D_CLUTLoading_Abort>:
{
 80042ce:	b570      	push	{r4, r5, r6, lr}
  const __IO uint32_t * reg =  &(hdma2d->Instance->BGPFCCR); /* by default, point at background register */
 80042d0:	6805      	ldr	r5, [r0, #0]
  SET_BIT(hdma2d->Instance->CR, DMA2D_CR_ABORT);
 80042d2:	682a      	ldr	r2, [r5, #0]
 80042d4:	f042 0204 	orr.w	r2, r2, #4
 80042d8:	602a      	str	r2, [r5, #0]
  if(LayerIdx == DMA2D_FOREGROUND_LAYER)
 80042da:	2901      	cmp	r1, #1
{
 80042dc:	4604      	mov	r4, r0
  const __IO uint32_t * reg =  &(hdma2d->Instance->BGPFCCR); /* by default, point at background register */
 80042de:	bf14      	ite	ne
 80042e0:	3524      	addne	r5, #36	; 0x24
    reg  = &(hdma2d->Instance->FGPFCCR);
 80042e2:	351c      	addeq	r5, #28
  tickstart = HAL_GetTick();
 80042e4:	f7ff fdb8 	bl	8003e58 <HAL_GetTick>
 80042e8:	4606      	mov	r6, r0
  while((*reg & DMA2D_BGPFCCR_START) != 0U)
 80042ea:	6828      	ldr	r0, [r5, #0]
 80042ec:	f010 0020 	ands.w	r0, r0, #32
 80042f0:	d10a      	bne.n	8004308 <HAL_DMA2D_CLUTLoading_Abort+0x3a>
  __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CTC | DMA2D_IT_TE | DMA2D_IT_CE |DMA2D_IT_CAE);
 80042f2:	6822      	ldr	r2, [r4, #0]
 80042f4:	6813      	ldr	r3, [r2, #0]
 80042f6:	f423 5364 	bic.w	r3, r3, #14592	; 0x3900
 80042fa:	6013      	str	r3, [r2, #0]
  hdma2d->State = HAL_DMA2D_STATE_READY;
 80042fc:	2301      	movs	r3, #1
 80042fe:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
  __HAL_UNLOCK(hdma2d);
 8004302:	f884 0038 	strb.w	r0, [r4, #56]	; 0x38
  return HAL_OK;
 8004306:	e00f      	b.n	8004328 <HAL_DMA2D_CLUTLoading_Abort+0x5a>
    if((HAL_GetTick() - tickstart ) > DMA2D_TIMEOUT_ABORT)
 8004308:	f7ff fda6 	bl	8003e58 <HAL_GetTick>
 800430c:	1b80      	subs	r0, r0, r6
 800430e:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
 8004312:	d9ea      	bls.n	80042ea <HAL_DMA2D_CLUTLoading_Abort+0x1c>
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_TIMEOUT;
 8004314:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8004316:	f043 0320 	orr.w	r3, r3, #32
 800431a:	63e3      	str	r3, [r4, #60]	; 0x3c
      hdma2d->State = HAL_DMA2D_STATE_TIMEOUT;
 800431c:	2003      	movs	r0, #3
      __HAL_UNLOCK(hdma2d);
 800431e:	2300      	movs	r3, #0
      hdma2d->State = HAL_DMA2D_STATE_TIMEOUT;
 8004320:	f884 0039 	strb.w	r0, [r4, #57]	; 0x39
      __HAL_UNLOCK(hdma2d);
 8004324:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38
}
 8004328:	bd70      	pop	{r4, r5, r6, pc}
	...

0800432c <HAL_DMA2D_DeInit>:
{
 800432c:	b538      	push	{r3, r4, r5, lr}
  if(hdma2d == NULL)
 800432e:	4605      	mov	r5, r0
 8004330:	b908      	cbnz	r0, 8004336 <HAL_DMA2D_DeInit+0xa>
     return HAL_ERROR;
 8004332:	2001      	movs	r0, #1
}
 8004334:	bd38      	pop	{r3, r4, r5, pc}
  if (__HAL_RCC_DMA2D_IS_CLK_ENABLED())
 8004336:	4b16      	ldr	r3, [pc, #88]	; (8004390 <HAL_DMA2D_DeInit+0x64>)
 8004338:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800433a:	0219      	lsls	r1, r3, #8
 800433c:	d413      	bmi.n	8004366 <HAL_DMA2D_DeInit+0x3a>
  hdma2d->Instance->CR       =    0U;
 800433e:	682b      	ldr	r3, [r5, #0]
 8004340:	2400      	movs	r4, #0
  hdma2d->Instance->IFCR     = 0x3FU;
 8004342:	223f      	movs	r2, #63	; 0x3f
  hdma2d->Instance->CR       =    0U;
 8004344:	601c      	str	r4, [r3, #0]
  HAL_DMA2D_MspDeInit(hdma2d);
 8004346:	4628      	mov	r0, r5
  hdma2d->Instance->IFCR     = 0x3FU;
 8004348:	609a      	str	r2, [r3, #8]
  hdma2d->Instance->FGOR     =    0U;
 800434a:	611c      	str	r4, [r3, #16]
  hdma2d->Instance->BGOR     =    0U;
 800434c:	619c      	str	r4, [r3, #24]
  hdma2d->Instance->FGPFCCR  =    0U;
 800434e:	61dc      	str	r4, [r3, #28]
  hdma2d->Instance->BGPFCCR  =    0U;
 8004350:	625c      	str	r4, [r3, #36]	; 0x24
  hdma2d->Instance->OPFCCR   =    0U;
 8004352:	635c      	str	r4, [r3, #52]	; 0x34
  HAL_DMA2D_MspDeInit(hdma2d);
 8004354:	f7fd ff7a 	bl	800224c <HAL_DMA2D_MspDeInit>
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 8004358:	63ec      	str	r4, [r5, #60]	; 0x3c
  __HAL_UNLOCK(hdma2d);
 800435a:	f885 4038 	strb.w	r4, [r5, #56]	; 0x38
  hdma2d->State  = HAL_DMA2D_STATE_RESET;
 800435e:	f885 4039 	strb.w	r4, [r5, #57]	; 0x39
  return HAL_OK;
 8004362:	4620      	mov	r0, r4
 8004364:	e7e6      	b.n	8004334 <HAL_DMA2D_DeInit+0x8>
 8004366:	6803      	ldr	r3, [r0, #0]
    if ((hdma2d->Instance->CR & DMA2D_CR_START) == DMA2D_CR_START)
 8004368:	6819      	ldr	r1, [r3, #0]
 800436a:	f011 0101 	ands.w	r1, r1, #1
 800436e:	d004      	beq.n	800437a <HAL_DMA2D_DeInit+0x4e>
      if (HAL_DMA2D_Abort(hdma2d) != HAL_OK)
 8004370:	f7ff ff81 	bl	8004276 <HAL_DMA2D_Abort>
          if (HAL_DMA2D_CLUTLoading_Abort(hdma2d, 1U) != HAL_OK)
 8004374:	2800      	cmp	r0, #0
 8004376:	d0e2      	beq.n	800433e <HAL_DMA2D_DeInit+0x12>
 8004378:	e7db      	b.n	8004332 <HAL_DMA2D_DeInit+0x6>
      if ((hdma2d->Instance->BGPFCCR & DMA2D_BGPFCCR_START) == DMA2D_BGPFCCR_START)
 800437a:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 800437c:	0692      	lsls	r2, r2, #26
 800437e:	d502      	bpl.n	8004386 <HAL_DMA2D_DeInit+0x5a>
          if (HAL_DMA2D_CLUTLoading_Abort(hdma2d, 1U) != HAL_OK)
 8004380:	f7ff ffa5 	bl	80042ce <HAL_DMA2D_CLUTLoading_Abort>
 8004384:	e7f6      	b.n	8004374 <HAL_DMA2D_DeInit+0x48>
        if ((hdma2d->Instance->FGPFCCR & DMA2D_FGPFCCR_START) == DMA2D_FGPFCCR_START)
 8004386:	69db      	ldr	r3, [r3, #28]
 8004388:	069b      	lsls	r3, r3, #26
 800438a:	d5d8      	bpl.n	800433e <HAL_DMA2D_DeInit+0x12>
          if (HAL_DMA2D_CLUTLoading_Abort(hdma2d, 1U) != HAL_OK)
 800438c:	2101      	movs	r1, #1
 800438e:	e7f7      	b.n	8004380 <HAL_DMA2D_DeInit+0x54>
 8004390:	40023800 	.word	0x40023800

08004394 <HAL_DMA2D_LineEventCallback>:
 8004394:	4770      	bx	lr

08004396 <HAL_DMA2D_CLUTLoadingCpltCallback>:
 8004396:	4770      	bx	lr

08004398 <HAL_DMA2D_IRQHandler>:
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
 8004398:	6803      	ldr	r3, [r0, #0]
{
 800439a:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
 800439c:	685e      	ldr	r6, [r3, #4]
  uint32_t crflags = READ_REG(hdma2d->Instance->CR);
 800439e:	681d      	ldr	r5, [r3, #0]
  if ((isrflags & DMA2D_FLAG_TE) != 0U)
 80043a0:	07f2      	lsls	r2, r6, #31
{
 80043a2:	4604      	mov	r4, r0
  if ((isrflags & DMA2D_FLAG_TE) != 0U)
 80043a4:	d514      	bpl.n	80043d0 <HAL_DMA2D_IRQHandler+0x38>
    if ((crflags & DMA2D_IT_TE) != 0U)
 80043a6:	05e9      	lsls	r1, r5, #23
 80043a8:	d512      	bpl.n	80043d0 <HAL_DMA2D_IRQHandler+0x38>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TE);
 80043aa:	681a      	ldr	r2, [r3, #0]
 80043ac:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 80043b0:	601a      	str	r2, [r3, #0]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_TE;
 80043b2:	6bc2      	ldr	r2, [r0, #60]	; 0x3c
 80043b4:	f042 0201 	orr.w	r2, r2, #1
 80043b8:	63c2      	str	r2, [r0, #60]	; 0x3c
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TE);
 80043ba:	2201      	movs	r2, #1
 80043bc:	609a      	str	r2, [r3, #8]
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 80043be:	2304      	movs	r3, #4
 80043c0:	f880 3039 	strb.w	r3, [r0, #57]	; 0x39
      __HAL_UNLOCK(hdma2d);
 80043c4:	2300      	movs	r3, #0
 80043c6:	f880 3038 	strb.w	r3, [r0, #56]	; 0x38
      if(hdma2d->XferErrorCallback != NULL)
 80043ca:	6943      	ldr	r3, [r0, #20]
 80043cc:	b103      	cbz	r3, 80043d0 <HAL_DMA2D_IRQHandler+0x38>
        hdma2d->XferErrorCallback(hdma2d);
 80043ce:	4798      	blx	r3
  if ((isrflags & DMA2D_FLAG_CE) != 0U)
 80043d0:	06b2      	lsls	r2, r6, #26
 80043d2:	d516      	bpl.n	8004402 <HAL_DMA2D_IRQHandler+0x6a>
    if ((crflags & DMA2D_IT_CE) != 0U)
 80043d4:	04ab      	lsls	r3, r5, #18
 80043d6:	d514      	bpl.n	8004402 <HAL_DMA2D_IRQHandler+0x6a>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CE);
 80043d8:	6823      	ldr	r3, [r4, #0]
 80043da:	681a      	ldr	r2, [r3, #0]
 80043dc:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 80043e0:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CE);
 80043e2:	2220      	movs	r2, #32
 80043e4:	609a      	str	r2, [r3, #8]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CE;
 80043e6:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 80043e8:	f043 0302 	orr.w	r3, r3, #2
 80043ec:	63e3      	str	r3, [r4, #60]	; 0x3c
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 80043ee:	2304      	movs	r3, #4
 80043f0:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
      __HAL_UNLOCK(hdma2d);
 80043f4:	2300      	movs	r3, #0
 80043f6:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38
      if(hdma2d->XferErrorCallback != NULL)
 80043fa:	6963      	ldr	r3, [r4, #20]
 80043fc:	b10b      	cbz	r3, 8004402 <HAL_DMA2D_IRQHandler+0x6a>
        hdma2d->XferErrorCallback(hdma2d);
 80043fe:	4620      	mov	r0, r4
 8004400:	4798      	blx	r3
  if ((isrflags & DMA2D_FLAG_CAE) != 0U)
 8004402:	0730      	lsls	r0, r6, #28
 8004404:	d516      	bpl.n	8004434 <HAL_DMA2D_IRQHandler+0x9c>
    if ((crflags & DMA2D_IT_CAE) != 0U)
 8004406:	0529      	lsls	r1, r5, #20
 8004408:	d514      	bpl.n	8004434 <HAL_DMA2D_IRQHandler+0x9c>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CAE);
 800440a:	6823      	ldr	r3, [r4, #0]
 800440c:	681a      	ldr	r2, [r3, #0]
 800440e:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 8004412:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CAE);
 8004414:	2208      	movs	r2, #8
 8004416:	609a      	str	r2, [r3, #8]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CAE;
 8004418:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800441a:	f043 0304 	orr.w	r3, r3, #4
 800441e:	63e3      	str	r3, [r4, #60]	; 0x3c
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 8004420:	2304      	movs	r3, #4
 8004422:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
      __HAL_UNLOCK(hdma2d);
 8004426:	2300      	movs	r3, #0
 8004428:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38
      if(hdma2d->XferErrorCallback != NULL)
 800442c:	6963      	ldr	r3, [r4, #20]
 800442e:	b10b      	cbz	r3, 8004434 <HAL_DMA2D_IRQHandler+0x9c>
        hdma2d->XferErrorCallback(hdma2d);
 8004430:	4620      	mov	r0, r4
 8004432:	4798      	blx	r3
  if ((isrflags & DMA2D_FLAG_TW) != 0U)
 8004434:	0772      	lsls	r2, r6, #29
 8004436:	d50b      	bpl.n	8004450 <HAL_DMA2D_IRQHandler+0xb8>
    if ((crflags & DMA2D_IT_TW) != 0U)
 8004438:	056b      	lsls	r3, r5, #21
 800443a:	d509      	bpl.n	8004450 <HAL_DMA2D_IRQHandler+0xb8>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TW);
 800443c:	6823      	ldr	r3, [r4, #0]
 800443e:	681a      	ldr	r2, [r3, #0]
 8004440:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8004444:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TW);
 8004446:	2204      	movs	r2, #4
 8004448:	609a      	str	r2, [r3, #8]
      HAL_DMA2D_LineEventCallback(hdma2d);
 800444a:	4620      	mov	r0, r4
 800444c:	f7ff ffa2 	bl	8004394 <HAL_DMA2D_LineEventCallback>
  if ((isrflags & DMA2D_FLAG_TC) != 0U)
 8004450:	07b0      	lsls	r0, r6, #30
 8004452:	d514      	bpl.n	800447e <HAL_DMA2D_IRQHandler+0xe6>
    if ((crflags & DMA2D_IT_TC) != 0U)
 8004454:	05a9      	lsls	r1, r5, #22
 8004456:	d512      	bpl.n	800447e <HAL_DMA2D_IRQHandler+0xe6>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TC);
 8004458:	6823      	ldr	r3, [r4, #0]
 800445a:	681a      	ldr	r2, [r3, #0]
 800445c:	f422 7200 	bic.w	r2, r2, #512	; 0x200
 8004460:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TC);
 8004462:	2202      	movs	r2, #2
 8004464:	609a      	str	r2, [r3, #8]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
 8004466:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8004468:	63e3      	str	r3, [r4, #60]	; 0x3c
      hdma2d->State = HAL_DMA2D_STATE_READY;
 800446a:	2301      	movs	r3, #1
 800446c:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
      __HAL_UNLOCK(hdma2d);
 8004470:	2300      	movs	r3, #0
 8004472:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38
      if(hdma2d->XferCpltCallback != NULL)
 8004476:	6923      	ldr	r3, [r4, #16]
 8004478:	b10b      	cbz	r3, 800447e <HAL_DMA2D_IRQHandler+0xe6>
        hdma2d->XferCpltCallback(hdma2d);
 800447a:	4620      	mov	r0, r4
 800447c:	4798      	blx	r3
  if ((isrflags & DMA2D_FLAG_CTC) != 0U)
 800447e:	06f2      	lsls	r2, r6, #27
 8004480:	d513      	bpl.n	80044aa <HAL_DMA2D_IRQHandler+0x112>
    if ((crflags & DMA2D_IT_CTC) != 0U)
 8004482:	04eb      	lsls	r3, r5, #19
 8004484:	d511      	bpl.n	80044aa <HAL_DMA2D_IRQHandler+0x112>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CTC);
 8004486:	6823      	ldr	r3, [r4, #0]
 8004488:	681a      	ldr	r2, [r3, #0]
 800448a:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
 800448e:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CTC);
 8004490:	2210      	movs	r2, #16
 8004492:	609a      	str	r2, [r3, #8]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
 8004494:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8004496:	63e3      	str	r3, [r4, #60]	; 0x3c
      hdma2d->State = HAL_DMA2D_STATE_READY;
 8004498:	2301      	movs	r3, #1
 800449a:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
      __HAL_UNLOCK(hdma2d);
 800449e:	2300      	movs	r3, #0
 80044a0:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38
      HAL_DMA2D_CLUTLoadingCpltCallback(hdma2d);
 80044a4:	4620      	mov	r0, r4
 80044a6:	f7ff ff76 	bl	8004396 <HAL_DMA2D_CLUTLoadingCpltCallback>
}
 80044aa:	bd70      	pop	{r4, r5, r6, pc}

080044ac <HAL_DMA2D_ConfigLayer>:
  __HAL_LOCK(hdma2d);
 80044ac:	f890 3038 	ldrb.w	r3, [r0, #56]	; 0x38
 80044b0:	2b01      	cmp	r3, #1
{
 80044b2:	b5f0      	push	{r4, r5, r6, r7, lr}
 80044b4:	f04f 0302 	mov.w	r3, #2
  __HAL_LOCK(hdma2d);
 80044b8:	d036      	beq.n	8004528 <HAL_DMA2D_ConfigLayer+0x7c>
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos);
 80044ba:	010e      	lsls	r6, r1, #4
  __HAL_LOCK(hdma2d);
 80044bc:	2201      	movs	r2, #1
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 80044be:	f880 3039 	strb.w	r3, [r0, #57]	; 0x39
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos);
 80044c2:	1983      	adds	r3, r0, r6
  __HAL_LOCK(hdma2d);
 80044c4:	f880 2038 	strb.w	r2, [r0, #56]	; 0x38
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos);
 80044c8:	e9d3 5207 	ldrd	r5, r2, [r3, #28]
 80044cc:	ea45 4202 	orr.w	r2, r5, r2, lsl #16
  if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 80044d0:	3d09      	subs	r5, #9
 80044d2:	2d01      	cmp	r5, #1
 80044d4:	6a5c      	ldr	r4, [r3, #36]	; 0x24
 80044d6:	4f19      	ldr	r7, [pc, #100]	; (800453c <HAL_DMA2D_ConfigLayer+0x90>)
 80044d8:	6803      	ldr	r3, [r0, #0]
 80044da:	d80f      	bhi.n	80044fc <HAL_DMA2D_ConfigLayer+0x50>
    regValue |= (pLayerCfg->InputAlpha & DMA2D_BGPFCCR_ALPHA);
 80044dc:	f004 4c7f 	and.w	ip, r4, #4278190080	; 0xff000000
 80044e0:	ea4c 0202 	orr.w	r2, ip, r2
  if(LayerIdx == DMA2D_BACKGROUND_LAYER)
 80044e4:	b969      	cbnz	r1, 8004502 <HAL_DMA2D_ConfigLayer+0x56>
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
 80044e6:	6a59      	ldr	r1, [r3, #36]	; 0x24
 80044e8:	4039      	ands	r1, r7
 80044ea:	430a      	orrs	r2, r1
 80044ec:	625a      	str	r2, [r3, #36]	; 0x24
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
 80044ee:	6982      	ldr	r2, [r0, #24]
 80044f0:	619a      	str	r2, [r3, #24]
      WRITE_REG(hdma2d->Instance->BGCOLR, pLayerCfg->InputAlpha & (DMA2D_BGCOLR_BLUE|DMA2D_BGCOLR_GREEN|DMA2D_BGCOLR_RED));
 80044f2:	6a42      	ldr	r2, [r0, #36]	; 0x24
 80044f4:	f022 427f 	bic.w	r2, r2, #4278190080	; 0xff000000
 80044f8:	629a      	str	r2, [r3, #40]	; 0x28
 80044fa:	e00f      	b.n	800451c <HAL_DMA2D_ConfigLayer+0x70>
    regValue |=  (pLayerCfg->InputAlpha << DMA2D_BGPFCCR_ALPHA_Pos);
 80044fc:	ea42 6204 	orr.w	r2, r2, r4, lsl #24
  if(LayerIdx == DMA2D_BACKGROUND_LAYER)
 8004500:	b1a1      	cbz	r1, 800452c <HAL_DMA2D_ConfigLayer+0x80>
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
 8004502:	69d9      	ldr	r1, [r3, #28]
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
 8004504:	4406      	add	r6, r0
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
 8004506:	4039      	ands	r1, r7
 8004508:	430a      	orrs	r2, r1
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 800450a:	2d01      	cmp	r5, #1
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
 800450c:	61da      	str	r2, [r3, #28]
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE|DMA2D_FGCOLR_GREEN|DMA2D_FGCOLR_RED));
 800450e:	bf98      	it	ls
 8004510:	f024 447f 	bicls.w	r4, r4, #4278190080	; 0xff000000
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
 8004514:	69b2      	ldr	r2, [r6, #24]
 8004516:	611a      	str	r2, [r3, #16]
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE|DMA2D_FGCOLR_GREEN|DMA2D_FGCOLR_RED));
 8004518:	bf98      	it	ls
 800451a:	621c      	strls	r4, [r3, #32]
  hdma2d->State = HAL_DMA2D_STATE_READY;
 800451c:	2301      	movs	r3, #1
 800451e:	f880 3039 	strb.w	r3, [r0, #57]	; 0x39
  __HAL_UNLOCK(hdma2d);
 8004522:	2300      	movs	r3, #0
 8004524:	f880 3038 	strb.w	r3, [r0, #56]	; 0x38
  __HAL_LOCK(hdma2d);
 8004528:	4618      	mov	r0, r3
}
 800452a:	bdf0      	pop	{r4, r5, r6, r7, pc}
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
 800452c:	6a59      	ldr	r1, [r3, #36]	; 0x24
 800452e:	4039      	ands	r1, r7
 8004530:	430a      	orrs	r2, r1
 8004532:	625a      	str	r2, [r3, #36]	; 0x24
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
 8004534:	6982      	ldr	r2, [r0, #24]
 8004536:	619a      	str	r2, [r3, #24]
 8004538:	e7f0      	b.n	800451c <HAL_DMA2D_ConfigLayer+0x70>
 800453a:	bf00      	nop
 800453c:	00fcfff0 	.word	0x00fcfff0

08004540 <HAL_GPIO_Init>:
  * @param  GPIO_Init pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
 8004540:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8004544:	b085      	sub	sp, #20
  for(position = 0U; position < GPIO_NUMBER; position++)
  {
    /* Get the IO position */
    ioposition = 0x01U << position;
    /* Get the current IO position */
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 8004546:	680b      	ldr	r3, [r1, #0]
      /*--------------------- EXTI Mode Configuration ------------------------*/
      /* Configure the External Interrupt or event for the current IO */
      if((GPIO_Init->Mode & EXTI_MODE) == EXTI_MODE)
      {
        /* Enable SYSCFG Clock */
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8004548:	f8df 81c4 	ldr.w	r8, [pc, #452]	; 8004710 <HAL_GPIO_Init+0x1d0>
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
        SYSCFG->EXTICR[position >> 2U] = temp;

        /* Clear EXTI line configuration */
        temp = EXTI->IMR;
 800454c:	4a6e      	ldr	r2, [pc, #440]	; (8004708 <HAL_GPIO_Init+0x1c8>)
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 800454e:	f8df 91c4 	ldr.w	r9, [pc, #452]	; 8004714 <HAL_GPIO_Init+0x1d4>
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 8004552:	9301      	str	r3, [sp, #4]
  for(position = 0U; position < GPIO_NUMBER; position++)
 8004554:	2300      	movs	r3, #0
    ioposition = 0x01U << position;
 8004556:	2401      	movs	r4, #1
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 8004558:	9d01      	ldr	r5, [sp, #4]
    ioposition = 0x01U << position;
 800455a:	409c      	lsls	r4, r3
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 800455c:	4025      	ands	r5, r4
    if(iocurrent == ioposition)
 800455e:	42ac      	cmp	r4, r5
 8004560:	f040 80b8 	bne.w	80046d4 <HAL_GPIO_Init+0x194>
      if((GPIO_Init->Mode == GPIO_MODE_OUTPUT_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_PP) ||
 8004564:	684c      	ldr	r4, [r1, #4]
 8004566:	f024 0c10 	bic.w	ip, r4, #16
 800456a:	ea4f 0e43 	mov.w	lr, r3, lsl #1
 800456e:	2603      	movs	r6, #3
 8004570:	f10c 37ff 	add.w	r7, ip, #4294967295
 8004574:	fa06 f60e 	lsl.w	r6, r6, lr
 8004578:	2f01      	cmp	r7, #1
 800457a:	ea6f 0606 	mvn.w	r6, r6
 800457e:	d811      	bhi.n	80045a4 <HAL_GPIO_Init+0x64>
        temp = GPIOx->OSPEEDR; 
 8004580:	6887      	ldr	r7, [r0, #8]
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 8004582:	ea07 0a06 	and.w	sl, r7, r6
        temp |= (GPIO_Init->Speed << (position * 2U));
 8004586:	68cf      	ldr	r7, [r1, #12]
 8004588:	fa07 f70e 	lsl.w	r7, r7, lr
 800458c:	ea47 070a 	orr.w	r7, r7, sl
        GPIOx->OSPEEDR = temp;
 8004590:	6087      	str	r7, [r0, #8]
        temp = GPIOx->OTYPER;
 8004592:	6847      	ldr	r7, [r0, #4]
        temp &= ~(GPIO_OTYPER_OT_0 << position) ;
 8004594:	ea27 0a05 	bic.w	sl, r7, r5
        temp |= (((GPIO_Init->Mode & GPIO_OUTPUT_TYPE) >> 4U) << position);
 8004598:	f3c4 1700 	ubfx	r7, r4, #4, #1
 800459c:	409f      	lsls	r7, r3
 800459e:	ea47 070a 	orr.w	r7, r7, sl
        GPIOx->OTYPER = temp;
 80045a2:	6047      	str	r7, [r0, #4]
      temp = GPIOx->PUPDR;
 80045a4:	68c7      	ldr	r7, [r0, #12]
      temp &= ~(GPIO_PUPDR_PUPDR0 << (position * 2U));
 80045a6:	ea07 0a06 	and.w	sl, r7, r6
      temp |= ((GPIO_Init->Pull) << (position * 2U));
 80045aa:	688f      	ldr	r7, [r1, #8]
 80045ac:	fa07 f70e 	lsl.w	r7, r7, lr
 80045b0:	ea47 070a 	orr.w	r7, r7, sl
      if((GPIO_Init->Mode == GPIO_MODE_AF_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_OD))
 80045b4:	f1bc 0f02 	cmp.w	ip, #2
      GPIOx->PUPDR = temp;
 80045b8:	60c7      	str	r7, [r0, #12]
      if((GPIO_Init->Mode == GPIO_MODE_AF_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_OD))
 80045ba:	d116      	bne.n	80045ea <HAL_GPIO_Init+0xaa>
        temp = GPIOx->AFR[position >> 3U];
 80045bc:	ea4f 0ad3 	mov.w	sl, r3, lsr #3
 80045c0:	eb00 0a8a 	add.w	sl, r0, sl, lsl #2
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 80045c4:	f003 0b07 	and.w	fp, r3, #7
        temp = GPIOx->AFR[position >> 3U];
 80045c8:	f8da 7020 	ldr.w	r7, [sl, #32]
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 80045cc:	ea4f 0b8b 	mov.w	fp, fp, lsl #2
 80045d0:	f04f 0c0f 	mov.w	ip, #15
 80045d4:	fa0c fc0b 	lsl.w	ip, ip, fp
 80045d8:	ea27 0c0c 	bic.w	ip, r7, ip
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 80045dc:	690f      	ldr	r7, [r1, #16]
 80045de:	fa07 f70b 	lsl.w	r7, r7, fp
 80045e2:	ea47 070c 	orr.w	r7, r7, ip
        GPIOx->AFR[position >> 3U] = temp;
 80045e6:	f8ca 7020 	str.w	r7, [sl, #32]
      temp = GPIOx->MODER;
 80045ea:	6807      	ldr	r7, [r0, #0]
      temp &= ~(GPIO_MODER_MODER0 << (position * 2U));
 80045ec:	403e      	ands	r6, r7
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 80045ee:	f004 0703 	and.w	r7, r4, #3
 80045f2:	fa07 fe0e 	lsl.w	lr, r7, lr
 80045f6:	ea4e 0606 	orr.w	r6, lr, r6
      GPIOx->MODER = temp;
 80045fa:	6006      	str	r6, [r0, #0]
      if((GPIO_Init->Mode & EXTI_MODE) == EXTI_MODE)
 80045fc:	00e6      	lsls	r6, r4, #3
 80045fe:	d569      	bpl.n	80046d4 <HAL_GPIO_Init+0x194>
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8004600:	f04f 0b00 	mov.w	fp, #0
 8004604:	f8cd b00c 	str.w	fp, [sp, #12]
 8004608:	f8d8 7044 	ldr.w	r7, [r8, #68]	; 0x44
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 800460c:	4e3f      	ldr	r6, [pc, #252]	; (800470c <HAL_GPIO_Init+0x1cc>)
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 800460e:	f447 4780 	orr.w	r7, r7, #16384	; 0x4000
 8004612:	f8c8 7044 	str.w	r7, [r8, #68]	; 0x44
 8004616:	f8d8 7044 	ldr.w	r7, [r8, #68]	; 0x44
 800461a:	f407 4780 	and.w	r7, r7, #16384	; 0x4000
 800461e:	9703      	str	r7, [sp, #12]
 8004620:	9f03      	ldr	r7, [sp, #12]
 8004622:	f023 0703 	bic.w	r7, r3, #3
 8004626:	f107 4780 	add.w	r7, r7, #1073741824	; 0x40000000
 800462a:	f507 379c 	add.w	r7, r7, #79872	; 0x13800
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 800462e:	f003 0e03 	and.w	lr, r3, #3
        temp = SYSCFG->EXTICR[position >> 2U];
 8004632:	f8d7 a008 	ldr.w	sl, [r7, #8]
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 8004636:	ea4f 0e8e 	mov.w	lr, lr, lsl #2
 800463a:	f04f 0c0f 	mov.w	ip, #15
 800463e:	fa0c fc0e 	lsl.w	ip, ip, lr
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 8004642:	42b0      	cmp	r0, r6
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 8004644:	ea2a 0c0c 	bic.w	ip, sl, ip
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 8004648:	d04b      	beq.n	80046e2 <HAL_GPIO_Init+0x1a2>
 800464a:	f506 6680 	add.w	r6, r6, #1024	; 0x400
 800464e:	42b0      	cmp	r0, r6
 8004650:	d049      	beq.n	80046e6 <HAL_GPIO_Init+0x1a6>
 8004652:	f506 6680 	add.w	r6, r6, #1024	; 0x400
 8004656:	42b0      	cmp	r0, r6
 8004658:	d047      	beq.n	80046ea <HAL_GPIO_Init+0x1aa>
 800465a:	f506 6680 	add.w	r6, r6, #1024	; 0x400
 800465e:	42b0      	cmp	r0, r6
 8004660:	d045      	beq.n	80046ee <HAL_GPIO_Init+0x1ae>
 8004662:	f506 6680 	add.w	r6, r6, #1024	; 0x400
 8004666:	42b0      	cmp	r0, r6
 8004668:	d043      	beq.n	80046f2 <HAL_GPIO_Init+0x1b2>
 800466a:	4548      	cmp	r0, r9
 800466c:	d043      	beq.n	80046f6 <HAL_GPIO_Init+0x1b6>
 800466e:	f506 6600 	add.w	r6, r6, #2048	; 0x800
 8004672:	42b0      	cmp	r0, r6
 8004674:	d041      	beq.n	80046fa <HAL_GPIO_Init+0x1ba>
 8004676:	f506 6680 	add.w	r6, r6, #1024	; 0x400
 800467a:	42b0      	cmp	r0, r6
 800467c:	d03f      	beq.n	80046fe <HAL_GPIO_Init+0x1be>
 800467e:	f506 6680 	add.w	r6, r6, #1024	; 0x400
 8004682:	42b0      	cmp	r0, r6
 8004684:	d03d      	beq.n	8004702 <HAL_GPIO_Init+0x1c2>
 8004686:	f506 6680 	add.w	r6, r6, #1024	; 0x400
 800468a:	42b0      	cmp	r0, r6
 800468c:	bf14      	ite	ne
 800468e:	260a      	movne	r6, #10
 8004690:	2609      	moveq	r6, #9
 8004692:	fa06 f60e 	lsl.w	r6, r6, lr
 8004696:	ea46 060c 	orr.w	r6, r6, ip
        SYSCFG->EXTICR[position >> 2U] = temp;
 800469a:	60be      	str	r6, [r7, #8]
        temp = EXTI->IMR;
 800469c:	6816      	ldr	r6, [r2, #0]
        temp &= ~((uint32_t)iocurrent);
 800469e:	43ef      	mvns	r7, r5
        if((GPIO_Init->Mode & GPIO_MODE_IT) == GPIO_MODE_IT)
 80046a0:	f414 3f80 	tst.w	r4, #65536	; 0x10000
        temp &= ~((uint32_t)iocurrent);
 80046a4:	bf0c      	ite	eq
 80046a6:	403e      	andeq	r6, r7
        {
          temp |= iocurrent;
 80046a8:	432e      	orrne	r6, r5
        }
        EXTI->IMR = temp;
 80046aa:	6016      	str	r6, [r2, #0]

        temp = EXTI->EMR;
 80046ac:	6856      	ldr	r6, [r2, #4]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & GPIO_MODE_EVT) == GPIO_MODE_EVT)
 80046ae:	f414 3f00 	tst.w	r4, #131072	; 0x20000
        temp &= ~((uint32_t)iocurrent);
 80046b2:	bf0c      	ite	eq
 80046b4:	403e      	andeq	r6, r7
        {
          temp |= iocurrent;
 80046b6:	432e      	orrne	r6, r5
        }
        EXTI->EMR = temp;
 80046b8:	6056      	str	r6, [r2, #4]

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR;
 80046ba:	6896      	ldr	r6, [r2, #8]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & RISING_EDGE) == RISING_EDGE)
 80046bc:	f414 1f80 	tst.w	r4, #1048576	; 0x100000
        temp &= ~((uint32_t)iocurrent);
 80046c0:	bf0c      	ite	eq
 80046c2:	403e      	andeq	r6, r7
        {
          temp |= iocurrent;
 80046c4:	432e      	orrne	r6, r5
        }
        EXTI->RTSR = temp;
 80046c6:	6096      	str	r6, [r2, #8]

        temp = EXTI->FTSR;
 80046c8:	68d6      	ldr	r6, [r2, #12]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & FALLING_EDGE) == FALLING_EDGE)
 80046ca:	02a4      	lsls	r4, r4, #10
        temp &= ~((uint32_t)iocurrent);
 80046cc:	bf54      	ite	pl
 80046ce:	403e      	andpl	r6, r7
        {
          temp |= iocurrent;
 80046d0:	432e      	orrmi	r6, r5
        }
        EXTI->FTSR = temp;
 80046d2:	60d6      	str	r6, [r2, #12]
  for(position = 0U; position < GPIO_NUMBER; position++)
 80046d4:	3301      	adds	r3, #1
 80046d6:	2b10      	cmp	r3, #16
 80046d8:	f47f af3d 	bne.w	8004556 <HAL_GPIO_Init+0x16>
      }
    }
  }
}
 80046dc:	b005      	add	sp, #20
 80046de:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 80046e2:	465e      	mov	r6, fp
 80046e4:	e7d5      	b.n	8004692 <HAL_GPIO_Init+0x152>
 80046e6:	2601      	movs	r6, #1
 80046e8:	e7d3      	b.n	8004692 <HAL_GPIO_Init+0x152>
 80046ea:	2602      	movs	r6, #2
 80046ec:	e7d1      	b.n	8004692 <HAL_GPIO_Init+0x152>
 80046ee:	2603      	movs	r6, #3
 80046f0:	e7cf      	b.n	8004692 <HAL_GPIO_Init+0x152>
 80046f2:	2604      	movs	r6, #4
 80046f4:	e7cd      	b.n	8004692 <HAL_GPIO_Init+0x152>
 80046f6:	2605      	movs	r6, #5
 80046f8:	e7cb      	b.n	8004692 <HAL_GPIO_Init+0x152>
 80046fa:	2606      	movs	r6, #6
 80046fc:	e7c9      	b.n	8004692 <HAL_GPIO_Init+0x152>
 80046fe:	2607      	movs	r6, #7
 8004700:	e7c7      	b.n	8004692 <HAL_GPIO_Init+0x152>
 8004702:	2608      	movs	r6, #8
 8004704:	e7c5      	b.n	8004692 <HAL_GPIO_Init+0x152>
 8004706:	bf00      	nop
 8004708:	40013c00 	.word	0x40013c00
 800470c:	40020000 	.word	0x40020000
 8004710:	40023800 	.word	0x40023800
 8004714:	40021400 	.word	0x40021400

08004718 <HAL_GPIO_WritePin>:
{
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if(PinState != GPIO_PIN_RESET)
 8004718:	b10a      	cbz	r2, 800471e <HAL_GPIO_WritePin+0x6>
  {
    GPIOx->BSRR = GPIO_Pin;
  }
  else
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
 800471a:	6181      	str	r1, [r0, #24]
  }
}
 800471c:	4770      	bx	lr
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
 800471e:	0409      	lsls	r1, r1, #16
 8004720:	e7fb      	b.n	800471a <HAL_GPIO_WritePin+0x2>

08004722 <I2C_IsAcknowledgeFailed>:
  *                the configuration information for the specified I2C.
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_IsAcknowledgeFailed(I2C_HandleTypeDef *hi2c)
{
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8004722:	6801      	ldr	r1, [r0, #0]
 8004724:	694b      	ldr	r3, [r1, #20]
 8004726:	f413 6380 	ands.w	r3, r3, #1024	; 0x400
 800472a:	f04f 0200 	mov.w	r2, #0
 800472e:	d010      	beq.n	8004752 <I2C_IsAcknowledgeFailed+0x30>
  {
    /* Clear NACKF Flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8004730:	f46f 6380 	mvn.w	r3, #1024	; 0x400
 8004734:	614b      	str	r3, [r1, #20]

    hi2c->PreviousState       = I2C_STATE_NONE;
    hi2c->State               = HAL_I2C_STATE_READY;
 8004736:	2320      	movs	r3, #32
    hi2c->PreviousState       = I2C_STATE_NONE;
 8004738:	6302      	str	r2, [r0, #48]	; 0x30
    hi2c->State               = HAL_I2C_STATE_READY;
 800473a:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d
    hi2c->Mode                = HAL_I2C_MODE_NONE;
 800473e:	f880 203e 	strb.w	r2, [r0, #62]	; 0x3e
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 8004742:	6c03      	ldr	r3, [r0, #64]	; 0x40

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 8004744:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 8004748:	f043 0304 	orr.w	r3, r3, #4
 800474c:	6403      	str	r3, [r0, #64]	; 0x40

    return HAL_ERROR;
 800474e:	2001      	movs	r0, #1
 8004750:	4770      	bx	lr
  }
  return HAL_OK;
 8004752:	4618      	mov	r0, r3
}
 8004754:	4770      	bx	lr

08004756 <I2C_WaitOnMasterAddressFlagUntilTimeout>:
{
 8004756:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800475a:	4604      	mov	r4, r0
 800475c:	4616      	mov	r6, r2
 800475e:	4698      	mov	r8, r3
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 8004760:	b28f      	uxth	r7, r1
 8004762:	6825      	ldr	r5, [r4, #0]
 8004764:	6968      	ldr	r0, [r5, #20]
 8004766:	ea37 0000 	bics.w	r0, r7, r0
 800476a:	d017      	beq.n	800479c <I2C_WaitOnMasterAddressFlagUntilTimeout+0x46>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800476c:	696b      	ldr	r3, [r5, #20]
 800476e:	055a      	lsls	r2, r3, #21
 8004770:	d516      	bpl.n	80047a0 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x4a>
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8004772:	682b      	ldr	r3, [r5, #0]
 8004774:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8004778:	602b      	str	r3, [r5, #0]
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800477a:	f46f 6380 	mvn.w	r3, #1024	; 0x400
 800477e:	616b      	str	r3, [r5, #20]
      hi2c->State               = HAL_I2C_STATE_READY;
 8004780:	2220      	movs	r2, #32
      hi2c->PreviousState       = I2C_STATE_NONE;
 8004782:	2300      	movs	r3, #0
 8004784:	6323      	str	r3, [r4, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 8004786:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 800478a:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800478e:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8004790:	f042 0204 	orr.w	r2, r2, #4
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8004794:	6422      	str	r2, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 8004796:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
        return HAL_ERROR;
 800479a:	2001      	movs	r0, #1
}
 800479c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    if (Timeout != HAL_MAX_DELAY)
 80047a0:	1c73      	adds	r3, r6, #1
 80047a2:	d0df      	beq.n	8004764 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xe>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 80047a4:	f7ff fb58 	bl	8003e58 <HAL_GetTick>
 80047a8:	eba0 0008 	sub.w	r0, r0, r8
 80047ac:	42b0      	cmp	r0, r6
 80047ae:	d801      	bhi.n	80047b4 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x5e>
 80047b0:	2e00      	cmp	r6, #0
 80047b2:	d1d6      	bne.n	8004762 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xc>
        hi2c->PreviousState       = I2C_STATE_NONE;
 80047b4:	2300      	movs	r3, #0
        hi2c->State               = HAL_I2C_STATE_READY;
 80047b6:	2220      	movs	r2, #32
        hi2c->PreviousState       = I2C_STATE_NONE;
 80047b8:	6323      	str	r3, [r4, #48]	; 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 80047ba:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 80047be:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 80047c2:	6c22      	ldr	r2, [r4, #64]	; 0x40
 80047c4:	f042 0220 	orr.w	r2, r2, #32
 80047c8:	e7e4      	b.n	8004794 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x3e>

080047ca <I2C_WaitOnBTFFlagUntilTimeout>:
{
 80047ca:	b570      	push	{r4, r5, r6, lr}
 80047cc:	4604      	mov	r4, r0
 80047ce:	460d      	mov	r5, r1
 80047d0:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 80047d2:	6823      	ldr	r3, [r4, #0]
 80047d4:	695b      	ldr	r3, [r3, #20]
 80047d6:	075b      	lsls	r3, r3, #29
 80047d8:	d501      	bpl.n	80047de <I2C_WaitOnBTFFlagUntilTimeout+0x14>
  return HAL_OK;
 80047da:	2000      	movs	r0, #0
}
 80047dc:	bd70      	pop	{r4, r5, r6, pc}
    if (I2C_IsAcknowledgeFailed(hi2c) != HAL_OK)
 80047de:	4620      	mov	r0, r4
 80047e0:	f7ff ff9f 	bl	8004722 <I2C_IsAcknowledgeFailed>
 80047e4:	b9a8      	cbnz	r0, 8004812 <I2C_WaitOnBTFFlagUntilTimeout+0x48>
    if (Timeout != HAL_MAX_DELAY)
 80047e6:	1c6a      	adds	r2, r5, #1
 80047e8:	d0f3      	beq.n	80047d2 <I2C_WaitOnBTFFlagUntilTimeout+0x8>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 80047ea:	f7ff fb35 	bl	8003e58 <HAL_GetTick>
 80047ee:	1b80      	subs	r0, r0, r6
 80047f0:	42a8      	cmp	r0, r5
 80047f2:	d801      	bhi.n	80047f8 <I2C_WaitOnBTFFlagUntilTimeout+0x2e>
 80047f4:	2d00      	cmp	r5, #0
 80047f6:	d1ec      	bne.n	80047d2 <I2C_WaitOnBTFFlagUntilTimeout+0x8>
        hi2c->PreviousState     = I2C_STATE_NONE;
 80047f8:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 80047fa:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 80047fc:	6323      	str	r3, [r4, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 80047fe:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 8004802:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8004806:	6c22      	ldr	r2, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 8004808:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800480c:	f042 0220 	orr.w	r2, r2, #32
 8004810:	6422      	str	r2, [r4, #64]	; 0x40
      return HAL_ERROR;
 8004812:	2001      	movs	r0, #1
 8004814:	e7e2      	b.n	80047dc <I2C_WaitOnBTFFlagUntilTimeout+0x12>

08004816 <I2C_WaitOnRXNEFlagUntilTimeout>:
{
 8004816:	b570      	push	{r4, r5, r6, lr}
 8004818:	4604      	mov	r4, r0
 800481a:	460d      	mov	r5, r1
 800481c:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 800481e:	6820      	ldr	r0, [r4, #0]
 8004820:	6943      	ldr	r3, [r0, #20]
 8004822:	f013 0340 	ands.w	r3, r3, #64	; 0x40
 8004826:	d001      	beq.n	800482c <I2C_WaitOnRXNEFlagUntilTimeout+0x16>
  return HAL_OK;
 8004828:	2000      	movs	r0, #0
 800482a:	e010      	b.n	800484e <I2C_WaitOnRXNEFlagUntilTimeout+0x38>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == SET)
 800482c:	6942      	ldr	r2, [r0, #20]
 800482e:	06d2      	lsls	r2, r2, #27
 8004830:	d50e      	bpl.n	8004850 <I2C_WaitOnRXNEFlagUntilTimeout+0x3a>
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 8004832:	f06f 0210 	mvn.w	r2, #16
 8004836:	6142      	str	r2, [r0, #20]
      hi2c->State               = HAL_I2C_STATE_READY;
 8004838:	2220      	movs	r2, #32
      hi2c->PreviousState       = I2C_STATE_NONE;
 800483a:	6323      	str	r3, [r4, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 800483c:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 8004840:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_NONE;
 8004844:	6c22      	ldr	r2, [r4, #64]	; 0x40
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8004846:	6422      	str	r2, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 8004848:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
 800484c:	2001      	movs	r0, #1
}
 800484e:	bd70      	pop	{r4, r5, r6, pc}
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8004850:	f7ff fb02 	bl	8003e58 <HAL_GetTick>
 8004854:	1b80      	subs	r0, r0, r6
 8004856:	42a8      	cmp	r0, r5
 8004858:	d801      	bhi.n	800485e <I2C_WaitOnRXNEFlagUntilTimeout+0x48>
 800485a:	2d00      	cmp	r5, #0
 800485c:	d1df      	bne.n	800481e <I2C_WaitOnRXNEFlagUntilTimeout+0x8>
        hi2c->PreviousState     = I2C_STATE_NONE;
 800485e:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 8004860:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 8004862:	6323      	str	r3, [r4, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 8004864:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 8004868:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800486c:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800486e:	f042 0220 	orr.w	r2, r2, #32
 8004872:	e7e8      	b.n	8004846 <I2C_WaitOnRXNEFlagUntilTimeout+0x30>

08004874 <I2C_WaitOnFlagUntilTimeout>:
{
 8004874:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8004878:	9e08      	ldr	r6, [sp, #32]
 800487a:	4604      	mov	r4, r0
 800487c:	4690      	mov	r8, r2
 800487e:	461f      	mov	r7, r3
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8004880:	ea4f 4911 	mov.w	r9, r1, lsr #16
 8004884:	b28d      	uxth	r5, r1
 8004886:	6821      	ldr	r1, [r4, #0]
 8004888:	f1b9 0f01 	cmp.w	r9, #1
 800488c:	bf0c      	ite	eq
 800488e:	694b      	ldreq	r3, [r1, #20]
 8004890:	698b      	ldrne	r3, [r1, #24]
 8004892:	ea35 0303 	bics.w	r3, r5, r3
 8004896:	bf0c      	ite	eq
 8004898:	2301      	moveq	r3, #1
 800489a:	2300      	movne	r3, #0
 800489c:	4598      	cmp	r8, r3
 800489e:	d001      	beq.n	80048a4 <I2C_WaitOnFlagUntilTimeout+0x30>
  return HAL_OK;
 80048a0:	2000      	movs	r0, #0
 80048a2:	e016      	b.n	80048d2 <I2C_WaitOnFlagUntilTimeout+0x5e>
    if (Timeout != HAL_MAX_DELAY)
 80048a4:	1c7b      	adds	r3, r7, #1
 80048a6:	d0ef      	beq.n	8004888 <I2C_WaitOnFlagUntilTimeout+0x14>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 80048a8:	f7ff fad6 	bl	8003e58 <HAL_GetTick>
 80048ac:	1b80      	subs	r0, r0, r6
 80048ae:	42b8      	cmp	r0, r7
 80048b0:	d801      	bhi.n	80048b6 <I2C_WaitOnFlagUntilTimeout+0x42>
 80048b2:	2f00      	cmp	r7, #0
 80048b4:	d1e7      	bne.n	8004886 <I2C_WaitOnFlagUntilTimeout+0x12>
        hi2c->PreviousState     = I2C_STATE_NONE;
 80048b6:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 80048b8:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 80048ba:	6323      	str	r3, [r4, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 80048bc:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 80048c0:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 80048c4:	6c22      	ldr	r2, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 80048c6:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 80048ca:	f042 0220 	orr.w	r2, r2, #32
 80048ce:	6422      	str	r2, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 80048d0:	2001      	movs	r0, #1
}
 80048d2:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}

080048d6 <I2C_WaitOnTXEFlagUntilTimeout>:
{
 80048d6:	b570      	push	{r4, r5, r6, lr}
 80048d8:	4604      	mov	r4, r0
 80048da:	460d      	mov	r5, r1
 80048dc:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 80048de:	6823      	ldr	r3, [r4, #0]
 80048e0:	695b      	ldr	r3, [r3, #20]
 80048e2:	061b      	lsls	r3, r3, #24
 80048e4:	d501      	bpl.n	80048ea <I2C_WaitOnTXEFlagUntilTimeout+0x14>
  return HAL_OK;
 80048e6:	2000      	movs	r0, #0
}
 80048e8:	bd70      	pop	{r4, r5, r6, pc}
    if (I2C_IsAcknowledgeFailed(hi2c) != HAL_OK)
 80048ea:	4620      	mov	r0, r4
 80048ec:	f7ff ff19 	bl	8004722 <I2C_IsAcknowledgeFailed>
 80048f0:	b9a8      	cbnz	r0, 800491e <I2C_WaitOnTXEFlagUntilTimeout+0x48>
    if (Timeout != HAL_MAX_DELAY)
 80048f2:	1c6a      	adds	r2, r5, #1
 80048f4:	d0f3      	beq.n	80048de <I2C_WaitOnTXEFlagUntilTimeout+0x8>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 80048f6:	f7ff faaf 	bl	8003e58 <HAL_GetTick>
 80048fa:	1b80      	subs	r0, r0, r6
 80048fc:	42a8      	cmp	r0, r5
 80048fe:	d801      	bhi.n	8004904 <I2C_WaitOnTXEFlagUntilTimeout+0x2e>
 8004900:	2d00      	cmp	r5, #0
 8004902:	d1ec      	bne.n	80048de <I2C_WaitOnTXEFlagUntilTimeout+0x8>
        hi2c->PreviousState     = I2C_STATE_NONE;
 8004904:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 8004906:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 8004908:	6323      	str	r3, [r4, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 800490a:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 800490e:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8004912:	6c22      	ldr	r2, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 8004914:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8004918:	f042 0220 	orr.w	r2, r2, #32
 800491c:	6422      	str	r2, [r4, #64]	; 0x40
      return HAL_ERROR;
 800491e:	2001      	movs	r0, #1
 8004920:	e7e2      	b.n	80048e8 <I2C_WaitOnTXEFlagUntilTimeout+0x12>
	...

08004924 <I2C_RequestMemoryWrite>:
{
 8004924:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8004928:	4615      	mov	r5, r2
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800492a:	6802      	ldr	r2, [r0, #0]
{
 800492c:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
 800492e:	4698      	mov	r8, r3
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8004930:	6813      	ldr	r3, [r2, #0]
 8004932:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8004936:	6013      	str	r3, [r2, #0]
{
 8004938:	460f      	mov	r7, r1
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 800493a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800493c:	9600      	str	r6, [sp, #0]
 800493e:	2200      	movs	r2, #0
 8004940:	f04f 1101 	mov.w	r1, #65537	; 0x10001
{
 8004944:	4604      	mov	r4, r0
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 8004946:	f7ff ff95 	bl	8004874 <I2C_WaitOnFlagUntilTimeout>
 800494a:	6823      	ldr	r3, [r4, #0]
 800494c:	b138      	cbz	r0, 800495e <I2C_RequestMemoryWrite+0x3a>
    if (hi2c->Instance->CR1 & I2C_CR1_START)
 800494e:	681b      	ldr	r3, [r3, #0]
 8004950:	05db      	lsls	r3, r3, #23
 8004952:	d502      	bpl.n	800495a <I2C_RequestMemoryWrite+0x36>
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 8004954:	f44f 7300 	mov.w	r3, #512	; 0x200
 8004958:	6423      	str	r3, [r4, #64]	; 0x40
    return HAL_TIMEOUT;
 800495a:	2003      	movs	r0, #3
 800495c:	e00a      	b.n	8004974 <I2C_RequestMemoryWrite+0x50>
  hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 800495e:	f007 07fe 	and.w	r7, r7, #254	; 0xfe
 8004962:	611f      	str	r7, [r3, #16]
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 8004964:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8004966:	4919      	ldr	r1, [pc, #100]	; (80049cc <I2C_RequestMemoryWrite+0xa8>)
 8004968:	4633      	mov	r3, r6
 800496a:	4620      	mov	r0, r4
 800496c:	f7ff fef3 	bl	8004756 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8004970:	b118      	cbz	r0, 800497a <I2C_RequestMemoryWrite+0x56>
      return HAL_ERROR;
 8004972:	2001      	movs	r0, #1
}
 8004974:	b004      	add	sp, #16
 8004976:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800497a:	6823      	ldr	r3, [r4, #0]
 800497c:	9003      	str	r0, [sp, #12]
 800497e:	695a      	ldr	r2, [r3, #20]
 8004980:	9203      	str	r2, [sp, #12]
 8004982:	699b      	ldr	r3, [r3, #24]
 8004984:	9303      	str	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8004986:	4632      	mov	r2, r6
 8004988:	990a      	ldr	r1, [sp, #40]	; 0x28
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800498a:	9b03      	ldr	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 800498c:	4620      	mov	r0, r4
 800498e:	f7ff ffa2 	bl	80048d6 <I2C_WaitOnTXEFlagUntilTimeout>
 8004992:	b140      	cbz	r0, 80049a6 <I2C_RequestMemoryWrite+0x82>
      if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8004994:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8004996:	2b04      	cmp	r3, #4
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8004998:	bf01      	itttt	eq
 800499a:	6822      	ldreq	r2, [r4, #0]
 800499c:	6813      	ldreq	r3, [r2, #0]
 800499e:	f443 7300 	orreq.w	r3, r3, #512	; 0x200
 80049a2:	6013      	streq	r3, [r2, #0]
 80049a4:	e7e5      	b.n	8004972 <I2C_RequestMemoryWrite+0x4e>
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 80049a6:	f1b8 0f01 	cmp.w	r8, #1
 80049aa:	6823      	ldr	r3, [r4, #0]
 80049ac:	d102      	bne.n	80049b4 <I2C_RequestMemoryWrite+0x90>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 80049ae:	b2ed      	uxtb	r5, r5
 80049b0:	611d      	str	r5, [r3, #16]
 80049b2:	e7df      	b.n	8004974 <I2C_RequestMemoryWrite+0x50>
    hi2c->Instance->DR = I2C_MEM_ADD_MSB(MemAddress);
 80049b4:	0a2a      	lsrs	r2, r5, #8
 80049b6:	611a      	str	r2, [r3, #16]
    if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 80049b8:	990a      	ldr	r1, [sp, #40]	; 0x28
 80049ba:	4632      	mov	r2, r6
 80049bc:	4620      	mov	r0, r4
 80049be:	f7ff ff8a 	bl	80048d6 <I2C_WaitOnTXEFlagUntilTimeout>
 80049c2:	2800      	cmp	r0, #0
 80049c4:	d1e6      	bne.n	8004994 <I2C_RequestMemoryWrite+0x70>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 80049c6:	6823      	ldr	r3, [r4, #0]
 80049c8:	e7f1      	b.n	80049ae <I2C_RequestMemoryWrite+0x8a>
 80049ca:	bf00      	nop
 80049cc:	00010002 	.word	0x00010002

080049d0 <I2C_RequestMemoryRead>:
{
 80049d0:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 80049d4:	4698      	mov	r8, r3
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 80049d6:	6803      	ldr	r3, [r0, #0]
{
 80049d8:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 80049da:	4616      	mov	r6, r2
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 80049dc:	681a      	ldr	r2, [r3, #0]
 80049de:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 80049e2:	601a      	str	r2, [r3, #0]
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 80049e4:	681a      	ldr	r2, [r3, #0]
 80049e6:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 80049ea:	601a      	str	r2, [r3, #0]
{
 80049ec:	460f      	mov	r7, r1
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 80049ee:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80049f0:	9500      	str	r5, [sp, #0]
 80049f2:	2200      	movs	r2, #0
 80049f4:	f04f 1101 	mov.w	r1, #65537	; 0x10001
{
 80049f8:	4604      	mov	r4, r0
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 80049fa:	f7ff ff3b 	bl	8004874 <I2C_WaitOnFlagUntilTimeout>
 80049fe:	6823      	ldr	r3, [r4, #0]
 8004a00:	b148      	cbz	r0, 8004a16 <I2C_RequestMemoryRead+0x46>
    if (hi2c->Instance->CR1 & I2C_CR1_START)
 8004a02:	681b      	ldr	r3, [r3, #0]
 8004a04:	05db      	lsls	r3, r3, #23
 8004a06:	d502      	bpl.n	8004a0e <I2C_RequestMemoryRead+0x3e>
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 8004a08:	f44f 7300 	mov.w	r3, #512	; 0x200
 8004a0c:	6423      	str	r3, [r4, #64]	; 0x40
    return HAL_TIMEOUT;
 8004a0e:	2003      	movs	r0, #3
}
 8004a10:	b004      	add	sp, #16
 8004a12:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 8004a16:	b2ff      	uxtb	r7, r7
 8004a18:	f007 02fe 	and.w	r2, r7, #254	; 0xfe
 8004a1c:	611a      	str	r2, [r3, #16]
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 8004a1e:	492a      	ldr	r1, [pc, #168]	; (8004ac8 <I2C_RequestMemoryRead+0xf8>)
 8004a20:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8004a22:	462b      	mov	r3, r5
 8004a24:	4620      	mov	r0, r4
 8004a26:	f7ff fe96 	bl	8004756 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8004a2a:	b108      	cbz	r0, 8004a30 <I2C_RequestMemoryRead+0x60>
    return HAL_ERROR;
 8004a2c:	2001      	movs	r0, #1
 8004a2e:	e7ef      	b.n	8004a10 <I2C_RequestMemoryRead+0x40>
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8004a30:	6823      	ldr	r3, [r4, #0]
 8004a32:	9003      	str	r0, [sp, #12]
 8004a34:	695a      	ldr	r2, [r3, #20]
 8004a36:	9203      	str	r2, [sp, #12]
 8004a38:	699b      	ldr	r3, [r3, #24]
 8004a3a:	9303      	str	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8004a3c:	462a      	mov	r2, r5
 8004a3e:	990a      	ldr	r1, [sp, #40]	; 0x28
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8004a40:	9b03      	ldr	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8004a42:	4620      	mov	r0, r4
 8004a44:	f7ff ff47 	bl	80048d6 <I2C_WaitOnTXEFlagUntilTimeout>
 8004a48:	b140      	cbz	r0, 8004a5c <I2C_RequestMemoryRead+0x8c>
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8004a4a:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8004a4c:	2b04      	cmp	r3, #4
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8004a4e:	bf01      	itttt	eq
 8004a50:	6822      	ldreq	r2, [r4, #0]
 8004a52:	6813      	ldreq	r3, [r2, #0]
 8004a54:	f443 7300 	orreq.w	r3, r3, #512	; 0x200
 8004a58:	6013      	streq	r3, [r2, #0]
 8004a5a:	e7e7      	b.n	8004a2c <I2C_RequestMemoryRead+0x5c>
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 8004a5c:	f1b8 0f01 	cmp.w	r8, #1
 8004a60:	6823      	ldr	r3, [r4, #0]
 8004a62:	d125      	bne.n	8004ab0 <I2C_RequestMemoryRead+0xe0>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 8004a64:	b2f6      	uxtb	r6, r6
 8004a66:	611e      	str	r6, [r3, #16]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8004a68:	462a      	mov	r2, r5
 8004a6a:	990a      	ldr	r1, [sp, #40]	; 0x28
 8004a6c:	4620      	mov	r0, r4
 8004a6e:	f7ff ff32 	bl	80048d6 <I2C_WaitOnTXEFlagUntilTimeout>
 8004a72:	4602      	mov	r2, r0
 8004a74:	2800      	cmp	r0, #0
 8004a76:	d1e8      	bne.n	8004a4a <I2C_RequestMemoryRead+0x7a>
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8004a78:	6821      	ldr	r1, [r4, #0]
 8004a7a:	680b      	ldr	r3, [r1, #0]
 8004a7c:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8004a80:	600b      	str	r3, [r1, #0]
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 8004a82:	4620      	mov	r0, r4
 8004a84:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8004a86:	9500      	str	r5, [sp, #0]
 8004a88:	f04f 1101 	mov.w	r1, #65537	; 0x10001
 8004a8c:	f7ff fef2 	bl	8004874 <I2C_WaitOnFlagUntilTimeout>
 8004a90:	6823      	ldr	r3, [r4, #0]
 8004a92:	2800      	cmp	r0, #0
 8004a94:	d1b5      	bne.n	8004a02 <I2C_RequestMemoryRead+0x32>
  hi2c->Instance->DR = I2C_7BIT_ADD_READ(DevAddress);
 8004a96:	f047 0701 	orr.w	r7, r7, #1
 8004a9a:	611f      	str	r7, [r3, #16]
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 8004a9c:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8004a9e:	490a      	ldr	r1, [pc, #40]	; (8004ac8 <I2C_RequestMemoryRead+0xf8>)
 8004aa0:	462b      	mov	r3, r5
 8004aa2:	4620      	mov	r0, r4
 8004aa4:	f7ff fe57 	bl	8004756 <I2C_WaitOnMasterAddressFlagUntilTimeout>
    return HAL_TIMEOUT;
 8004aa8:	3000      	adds	r0, #0
 8004aaa:	bf18      	it	ne
 8004aac:	2001      	movne	r0, #1
 8004aae:	e7af      	b.n	8004a10 <I2C_RequestMemoryRead+0x40>
    hi2c->Instance->DR = I2C_MEM_ADD_MSB(MemAddress);
 8004ab0:	0a32      	lsrs	r2, r6, #8
 8004ab2:	611a      	str	r2, [r3, #16]
    if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8004ab4:	990a      	ldr	r1, [sp, #40]	; 0x28
 8004ab6:	462a      	mov	r2, r5
 8004ab8:	4620      	mov	r0, r4
 8004aba:	f7ff ff0c 	bl	80048d6 <I2C_WaitOnTXEFlagUntilTimeout>
 8004abe:	2800      	cmp	r0, #0
 8004ac0:	d1c3      	bne.n	8004a4a <I2C_RequestMemoryRead+0x7a>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 8004ac2:	6823      	ldr	r3, [r4, #0]
 8004ac4:	e7ce      	b.n	8004a64 <I2C_RequestMemoryRead+0x94>
 8004ac6:	bf00      	nop
 8004ac8:	00010002 	.word	0x00010002

08004acc <HAL_I2C_Init>:
{
 8004acc:	b570      	push	{r4, r5, r6, lr}
  if (hi2c == NULL)
 8004ace:	4604      	mov	r4, r0
 8004ad0:	b908      	cbnz	r0, 8004ad6 <HAL_I2C_Init+0xa>
    return HAL_ERROR;
 8004ad2:	2001      	movs	r0, #1
}
 8004ad4:	bd70      	pop	{r4, r5, r6, pc}
  if (hi2c->State == HAL_I2C_STATE_RESET)
 8004ad6:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 8004ada:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8004ade:	b91b      	cbnz	r3, 8004ae8 <HAL_I2C_Init+0x1c>
    hi2c->Lock = HAL_UNLOCKED;
 8004ae0:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    HAL_I2C_MspInit(hi2c);
 8004ae4:	f7fd fbc4 	bl	8002270 <HAL_I2C_MspInit>
  hi2c->State = HAL_I2C_STATE_BUSY;
 8004ae8:	2324      	movs	r3, #36	; 0x24
 8004aea:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  __HAL_I2C_DISABLE(hi2c);
 8004aee:	6823      	ldr	r3, [r4, #0]
 8004af0:	681a      	ldr	r2, [r3, #0]
 8004af2:	f022 0201 	bic.w	r2, r2, #1
 8004af6:	601a      	str	r2, [r3, #0]
  hi2c->Instance->CR1 |= I2C_CR1_SWRST;
 8004af8:	681a      	ldr	r2, [r3, #0]
 8004afa:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 8004afe:	601a      	str	r2, [r3, #0]
  hi2c->Instance->CR1 &= ~I2C_CR1_SWRST;
 8004b00:	681a      	ldr	r2, [r3, #0]
 8004b02:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
 8004b06:	601a      	str	r2, [r3, #0]
  pclk1 = HAL_RCC_GetPCLK1Freq();
 8004b08:	f000 fe6c 	bl	80057e4 <HAL_RCC_GetPCLK1Freq>
  if (I2C_MIN_PCLK_FREQ(pclk1, hi2c->Init.ClockSpeed) == 1U)
 8004b0c:	6863      	ldr	r3, [r4, #4]
 8004b0e:	4a41      	ldr	r2, [pc, #260]	; (8004c14 <HAL_I2C_Init+0x148>)
 8004b10:	4293      	cmp	r3, r2
 8004b12:	d84d      	bhi.n	8004bb0 <HAL_I2C_Init+0xe4>
 8004b14:	4a40      	ldr	r2, [pc, #256]	; (8004c18 <HAL_I2C_Init+0x14c>)
 8004b16:	4290      	cmp	r0, r2
 8004b18:	d9db      	bls.n	8004ad2 <HAL_I2C_Init+0x6>
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 8004b1a:	6822      	ldr	r2, [r4, #0]
  freqrange = I2C_FREQRANGE(pclk1);
 8004b1c:	493f      	ldr	r1, [pc, #252]	; (8004c1c <HAL_I2C_Init+0x150>)
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 8004b1e:	6855      	ldr	r5, [r2, #4]
  freqrange = I2C_FREQRANGE(pclk1);
 8004b20:	fbb0 f1f1 	udiv	r1, r0, r1
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 8004b24:	f025 053f 	bic.w	r5, r5, #63	; 0x3f
 8004b28:	430d      	orrs	r5, r1
 8004b2a:	6055      	str	r5, [r2, #4]
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 8004b2c:	6a15      	ldr	r5, [r2, #32]
 8004b2e:	f025 053f 	bic.w	r5, r5, #63	; 0x3f
 8004b32:	3101      	adds	r1, #1
 8004b34:	4329      	orrs	r1, r5
 8004b36:	6211      	str	r1, [r2, #32]
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 8004b38:	69d1      	ldr	r1, [r2, #28]
 8004b3a:	4d36      	ldr	r5, [pc, #216]	; (8004c14 <HAL_I2C_Init+0x148>)
 8004b3c:	f421 414f 	bic.w	r1, r1, #52992	; 0xcf00
 8004b40:	42ab      	cmp	r3, r5
 8004b42:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 8004b46:	f100 30ff 	add.w	r0, r0, #4294967295
 8004b4a:	d848      	bhi.n	8004bde <HAL_I2C_Init+0x112>
 8004b4c:	005b      	lsls	r3, r3, #1
 8004b4e:	fbb0 f0f3 	udiv	r0, r0, r3
 8004b52:	1c43      	adds	r3, r0, #1
 8004b54:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8004b58:	2b04      	cmp	r3, #4
 8004b5a:	bf38      	it	cc
 8004b5c:	2304      	movcc	r3, #4
 8004b5e:	430b      	orrs	r3, r1
 8004b60:	61d3      	str	r3, [r2, #28]
  MODIFY_REG(hi2c->Instance->CR1, (I2C_CR1_ENGC | I2C_CR1_NOSTRETCH), (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode));
 8004b62:	e9d4 3007 	ldrd	r3, r0, [r4, #28]
 8004b66:	6811      	ldr	r1, [r2, #0]
 8004b68:	4303      	orrs	r3, r0
 8004b6a:	f021 01c0 	bic.w	r1, r1, #192	; 0xc0
 8004b6e:	430b      	orrs	r3, r1
 8004b70:	6013      	str	r3, [r2, #0]
  MODIFY_REG(hi2c->Instance->OAR1, (I2C_OAR1_ADDMODE | I2C_OAR1_ADD8_9 | I2C_OAR1_ADD1_7 | I2C_OAR1_ADD0), (hi2c->Init.AddressingMode | hi2c->Init.OwnAddress1));
 8004b72:	6891      	ldr	r1, [r2, #8]
 8004b74:	e9d4 0303 	ldrd	r0, r3, [r4, #12]
 8004b78:	f421 4103 	bic.w	r1, r1, #33536	; 0x8300
 8004b7c:	4303      	orrs	r3, r0
 8004b7e:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 8004b82:	430b      	orrs	r3, r1
 8004b84:	6093      	str	r3, [r2, #8]
  MODIFY_REG(hi2c->Instance->OAR2, (I2C_OAR2_ENDUAL | I2C_OAR2_ADD2), (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2));
 8004b86:	e9d4 3005 	ldrd	r3, r0, [r4, #20]
 8004b8a:	68d1      	ldr	r1, [r2, #12]
 8004b8c:	4303      	orrs	r3, r0
 8004b8e:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 8004b92:	430b      	orrs	r3, r1
 8004b94:	60d3      	str	r3, [r2, #12]
  __HAL_I2C_ENABLE(hi2c);
 8004b96:	6813      	ldr	r3, [r2, #0]
 8004b98:	f043 0301 	orr.w	r3, r3, #1
 8004b9c:	6013      	str	r3, [r2, #0]
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8004b9e:	2000      	movs	r0, #0
  hi2c->State = HAL_I2C_STATE_READY;
 8004ba0:	2320      	movs	r3, #32
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8004ba2:	6420      	str	r0, [r4, #64]	; 0x40
  hi2c->State = HAL_I2C_STATE_READY;
 8004ba4:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  hi2c->PreviousState = I2C_STATE_NONE;
 8004ba8:	6320      	str	r0, [r4, #48]	; 0x30
  hi2c->Mode = HAL_I2C_MODE_NONE;
 8004baa:	f884 003e 	strb.w	r0, [r4, #62]	; 0x3e
  return HAL_OK;
 8004bae:	e791      	b.n	8004ad4 <HAL_I2C_Init+0x8>
  if (I2C_MIN_PCLK_FREQ(pclk1, hi2c->Init.ClockSpeed) == 1U)
 8004bb0:	4a1b      	ldr	r2, [pc, #108]	; (8004c20 <HAL_I2C_Init+0x154>)
 8004bb2:	4290      	cmp	r0, r2
 8004bb4:	d98d      	bls.n	8004ad2 <HAL_I2C_Init+0x6>
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 8004bb6:	6822      	ldr	r2, [r4, #0]
  freqrange = I2C_FREQRANGE(pclk1);
 8004bb8:	4e18      	ldr	r6, [pc, #96]	; (8004c1c <HAL_I2C_Init+0x150>)
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 8004bba:	6855      	ldr	r5, [r2, #4]
  freqrange = I2C_FREQRANGE(pclk1);
 8004bbc:	fbb0 f6f6 	udiv	r6, r0, r6
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 8004bc0:	f025 053f 	bic.w	r5, r5, #63	; 0x3f
 8004bc4:	4335      	orrs	r5, r6
 8004bc6:	6055      	str	r5, [r2, #4]
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 8004bc8:	6a15      	ldr	r5, [r2, #32]
 8004bca:	f44f 7196 	mov.w	r1, #300	; 0x12c
 8004bce:	4371      	muls	r1, r6
 8004bd0:	f025 053f 	bic.w	r5, r5, #63	; 0x3f
 8004bd4:	f44f 767a 	mov.w	r6, #1000	; 0x3e8
 8004bd8:	fbb1 f1f6 	udiv	r1, r1, r6
 8004bdc:	e7a9      	b.n	8004b32 <HAL_I2C_Init+0x66>
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 8004bde:	68a5      	ldr	r5, [r4, #8]
 8004be0:	b955      	cbnz	r5, 8004bf8 <HAL_I2C_Init+0x12c>
 8004be2:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8004be6:	fbb0 f0f3 	udiv	r0, r0, r3
 8004bea:	1c43      	adds	r3, r0, #1
 8004bec:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8004bf0:	b16b      	cbz	r3, 8004c0e <HAL_I2C_Init+0x142>
 8004bf2:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8004bf6:	e7b2      	b.n	8004b5e <HAL_I2C_Init+0x92>
 8004bf8:	2519      	movs	r5, #25
 8004bfa:	436b      	muls	r3, r5
 8004bfc:	fbb0 f0f3 	udiv	r0, r0, r3
 8004c00:	1c43      	adds	r3, r0, #1
 8004c02:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8004c06:	b113      	cbz	r3, 8004c0e <HAL_I2C_Init+0x142>
 8004c08:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 8004c0c:	e7a7      	b.n	8004b5e <HAL_I2C_Init+0x92>
 8004c0e:	2301      	movs	r3, #1
 8004c10:	e7a5      	b.n	8004b5e <HAL_I2C_Init+0x92>
 8004c12:	bf00      	nop
 8004c14:	000186a0 	.word	0x000186a0
 8004c18:	001e847f 	.word	0x001e847f
 8004c1c:	000f4240 	.word	0x000f4240
 8004c20:	003d08ff 	.word	0x003d08ff

08004c24 <HAL_I2C_Mem_Write>:
{
 8004c24:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8004c28:	4604      	mov	r4, r0
 8004c2a:	4699      	mov	r9, r3
 8004c2c:	460f      	mov	r7, r1
 8004c2e:	4690      	mov	r8, r2
 8004c30:	9e0c      	ldr	r6, [sp, #48]	; 0x30
  uint32_t tickstart = HAL_GetTick();
 8004c32:	f7ff f911 	bl	8003e58 <HAL_GetTick>
  if (hi2c->State == HAL_I2C_STATE_READY)
 8004c36:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
 8004c3a:	2b20      	cmp	r3, #32
  uint32_t tickstart = HAL_GetTick();
 8004c3c:	4605      	mov	r5, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
 8004c3e:	d003      	beq.n	8004c48 <HAL_I2C_Mem_Write+0x24>
    return HAL_BUSY;
 8004c40:	2002      	movs	r0, #2
}
 8004c42:	b003      	add	sp, #12
 8004c44:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY_FLAG, tickstart) != HAL_OK)
 8004c48:	9000      	str	r0, [sp, #0]
 8004c4a:	2319      	movs	r3, #25
 8004c4c:	2201      	movs	r2, #1
 8004c4e:	493b      	ldr	r1, [pc, #236]	; (8004d3c <HAL_I2C_Mem_Write+0x118>)
 8004c50:	4620      	mov	r0, r4
 8004c52:	f7ff fe0f 	bl	8004874 <I2C_WaitOnFlagUntilTimeout>
 8004c56:	2800      	cmp	r0, #0
 8004c58:	d1f2      	bne.n	8004c40 <HAL_I2C_Mem_Write+0x1c>
    __HAL_LOCK(hi2c);
 8004c5a:	f894 303c 	ldrb.w	r3, [r4, #60]	; 0x3c
 8004c5e:	2b01      	cmp	r3, #1
 8004c60:	d0ee      	beq.n	8004c40 <HAL_I2C_Mem_Write+0x1c>
 8004c62:	2301      	movs	r3, #1
 8004c64:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 8004c68:	6823      	ldr	r3, [r4, #0]
 8004c6a:	681a      	ldr	r2, [r3, #0]
 8004c6c:	07d1      	lsls	r1, r2, #31
      __HAL_I2C_ENABLE(hi2c);
 8004c6e:	bf5e      	ittt	pl
 8004c70:	681a      	ldrpl	r2, [r3, #0]
 8004c72:	f042 0201 	orrpl.w	r2, r2, #1
 8004c76:	601a      	strpl	r2, [r3, #0]
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 8004c78:	681a      	ldr	r2, [r3, #0]
 8004c7a:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 8004c7e:	601a      	str	r2, [r3, #0]
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
 8004c80:	2321      	movs	r3, #33	; 0x21
 8004c82:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 8004c86:	2340      	movs	r3, #64	; 0x40
 8004c88:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8004c8c:	2300      	movs	r3, #0
 8004c8e:	6423      	str	r3, [r4, #64]	; 0x40
    hi2c->pBuffPtr    = pData;
 8004c90:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8004c92:	6263      	str	r3, [r4, #36]	; 0x24
    hi2c->XferCount   = Size;
 8004c94:	f8bd 302c 	ldrh.w	r3, [sp, #44]	; 0x2c
 8004c98:	8563      	strh	r3, [r4, #42]	; 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 8004c9a:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8004c9c:	8523      	strh	r3, [r4, #40]	; 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 8004c9e:	4b28      	ldr	r3, [pc, #160]	; (8004d40 <HAL_I2C_Mem_Write+0x11c>)
 8004ca0:	62e3      	str	r3, [r4, #44]	; 0x2c
    if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 8004ca2:	e9cd 6500 	strd	r6, r5, [sp]
 8004ca6:	464b      	mov	r3, r9
 8004ca8:	4642      	mov	r2, r8
 8004caa:	4639      	mov	r1, r7
 8004cac:	4620      	mov	r0, r4
 8004cae:	f7ff fe39 	bl	8004924 <I2C_RequestMemoryWrite>
 8004cb2:	2800      	cmp	r0, #0
 8004cb4:	d02a      	beq.n	8004d0c <HAL_I2C_Mem_Write+0xe8>
      return HAL_ERROR;
 8004cb6:	2001      	movs	r0, #1
 8004cb8:	e7c3      	b.n	8004c42 <HAL_I2C_Mem_Write+0x1e>
      if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8004cba:	f7ff fe0c 	bl	80048d6 <I2C_WaitOnTXEFlagUntilTimeout>
 8004cbe:	b140      	cbz	r0, 8004cd2 <HAL_I2C_Mem_Write+0xae>
      if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8004cc0:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8004cc2:	2b04      	cmp	r3, #4
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8004cc4:	bf01      	itttt	eq
 8004cc6:	6822      	ldreq	r2, [r4, #0]
 8004cc8:	6813      	ldreq	r3, [r2, #0]
 8004cca:	f443 7300 	orreq.w	r3, r3, #512	; 0x200
 8004cce:	6013      	streq	r3, [r2, #0]
 8004cd0:	e7f1      	b.n	8004cb6 <HAL_I2C_Mem_Write+0x92>
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 8004cd2:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8004cd4:	6827      	ldr	r7, [r4, #0]
 8004cd6:	461a      	mov	r2, r3
 8004cd8:	f812 1b01 	ldrb.w	r1, [r2], #1
 8004cdc:	6139      	str	r1, [r7, #16]
      hi2c->pBuffPtr++;
 8004cde:	6262      	str	r2, [r4, #36]	; 0x24
      hi2c->XferCount--;
 8004ce0:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
      hi2c->XferSize--;
 8004ce2:	8d21      	ldrh	r1, [r4, #40]	; 0x28
      hi2c->XferCount--;
 8004ce4:	3a01      	subs	r2, #1
 8004ce6:	b292      	uxth	r2, r2
 8004ce8:	8562      	strh	r2, [r4, #42]	; 0x2a
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 8004cea:	697a      	ldr	r2, [r7, #20]
      hi2c->XferSize--;
 8004cec:	1e48      	subs	r0, r1, #1
 8004cee:	b280      	uxth	r0, r0
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 8004cf0:	0752      	lsls	r2, r2, #29
      hi2c->XferSize--;
 8004cf2:	8520      	strh	r0, [r4, #40]	; 0x28
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 8004cf4:	d50a      	bpl.n	8004d0c <HAL_I2C_Mem_Write+0xe8>
 8004cf6:	b148      	cbz	r0, 8004d0c <HAL_I2C_Mem_Write+0xe8>
        hi2c->Instance->DR = *hi2c->pBuffPtr;
 8004cf8:	785a      	ldrb	r2, [r3, #1]
 8004cfa:	613a      	str	r2, [r7, #16]
        hi2c->pBuffPtr++;
 8004cfc:	3302      	adds	r3, #2
 8004cfe:	6263      	str	r3, [r4, #36]	; 0x24
        hi2c->XferCount--;
 8004d00:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8004d02:	3b01      	subs	r3, #1
        hi2c->XferSize--;
 8004d04:	3902      	subs	r1, #2
        hi2c->XferCount--;
 8004d06:	b29b      	uxth	r3, r3
        hi2c->XferSize--;
 8004d08:	8521      	strh	r1, [r4, #40]	; 0x28
        hi2c->XferCount--;
 8004d0a:	8563      	strh	r3, [r4, #42]	; 0x2a
    while (hi2c->XferSize > 0U)
 8004d0c:	8d23      	ldrh	r3, [r4, #40]	; 0x28
      if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8004d0e:	462a      	mov	r2, r5
 8004d10:	4631      	mov	r1, r6
 8004d12:	4620      	mov	r0, r4
    while (hi2c->XferSize > 0U)
 8004d14:	2b00      	cmp	r3, #0
 8004d16:	d1d0      	bne.n	8004cba <HAL_I2C_Mem_Write+0x96>
    if (I2C_WaitOnBTFFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8004d18:	f7ff fd57 	bl	80047ca <I2C_WaitOnBTFFlagUntilTimeout>
 8004d1c:	2800      	cmp	r0, #0
 8004d1e:	d1cf      	bne.n	8004cc0 <HAL_I2C_Mem_Write+0x9c>
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8004d20:	6822      	ldr	r2, [r4, #0]
 8004d22:	6813      	ldr	r3, [r2, #0]
 8004d24:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8004d28:	6013      	str	r3, [r2, #0]
    hi2c->State = HAL_I2C_STATE_READY;
 8004d2a:	2320      	movs	r3, #32
 8004d2c:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
    __HAL_UNLOCK(hi2c);
 8004d30:	f884 003c 	strb.w	r0, [r4, #60]	; 0x3c
    hi2c->Mode = HAL_I2C_MODE_NONE;
 8004d34:	f884 003e 	strb.w	r0, [r4, #62]	; 0x3e
    return HAL_OK;
 8004d38:	e783      	b.n	8004c42 <HAL_I2C_Mem_Write+0x1e>
 8004d3a:	bf00      	nop
 8004d3c:	00100002 	.word	0x00100002
 8004d40:	ffff0000 	.word	0xffff0000

08004d44 <HAL_I2C_Mem_Read>:
{
 8004d44:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8004d48:	4604      	mov	r4, r0
 8004d4a:	b087      	sub	sp, #28
 8004d4c:	4699      	mov	r9, r3
 8004d4e:	460d      	mov	r5, r1
 8004d50:	4690      	mov	r8, r2
 8004d52:	9f10      	ldr	r7, [sp, #64]	; 0x40
  uint32_t tickstart = HAL_GetTick();
 8004d54:	f7ff f880 	bl	8003e58 <HAL_GetTick>
  if (hi2c->State == HAL_I2C_STATE_READY)
 8004d58:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
 8004d5c:	2b20      	cmp	r3, #32
  uint32_t tickstart = HAL_GetTick();
 8004d5e:	4606      	mov	r6, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
 8004d60:	d004      	beq.n	8004d6c <HAL_I2C_Mem_Read+0x28>
    return HAL_BUSY;
 8004d62:	2502      	movs	r5, #2
}
 8004d64:	4628      	mov	r0, r5
 8004d66:	b007      	add	sp, #28
 8004d68:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY_FLAG, tickstart) != HAL_OK)
 8004d6c:	9000      	str	r0, [sp, #0]
 8004d6e:	2319      	movs	r3, #25
 8004d70:	2201      	movs	r2, #1
 8004d72:	4977      	ldr	r1, [pc, #476]	; (8004f50 <HAL_I2C_Mem_Read+0x20c>)
 8004d74:	4620      	mov	r0, r4
 8004d76:	f7ff fd7d 	bl	8004874 <I2C_WaitOnFlagUntilTimeout>
 8004d7a:	2800      	cmp	r0, #0
 8004d7c:	d1f1      	bne.n	8004d62 <HAL_I2C_Mem_Read+0x1e>
    __HAL_LOCK(hi2c);
 8004d7e:	f894 303c 	ldrb.w	r3, [r4, #60]	; 0x3c
 8004d82:	2b01      	cmp	r3, #1
 8004d84:	d0ed      	beq.n	8004d62 <HAL_I2C_Mem_Read+0x1e>
 8004d86:	2301      	movs	r3, #1
 8004d88:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 8004d8c:	6823      	ldr	r3, [r4, #0]
 8004d8e:	681a      	ldr	r2, [r3, #0]
 8004d90:	07d0      	lsls	r0, r2, #31
      __HAL_I2C_ENABLE(hi2c);
 8004d92:	bf5e      	ittt	pl
 8004d94:	681a      	ldrpl	r2, [r3, #0]
 8004d96:	f042 0201 	orrpl.w	r2, r2, #1
 8004d9a:	601a      	strpl	r2, [r3, #0]
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 8004d9c:	681a      	ldr	r2, [r3, #0]
 8004d9e:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 8004da2:	601a      	str	r2, [r3, #0]
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
 8004da4:	2322      	movs	r3, #34	; 0x22
 8004da6:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 8004daa:	2340      	movs	r3, #64	; 0x40
 8004dac:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8004db0:	2300      	movs	r3, #0
 8004db2:	6423      	str	r3, [r4, #64]	; 0x40
    hi2c->pBuffPtr    = pData;
 8004db4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8004db6:	6263      	str	r3, [r4, #36]	; 0x24
    hi2c->XferCount   = Size;
 8004db8:	f8bd 303c 	ldrh.w	r3, [sp, #60]	; 0x3c
 8004dbc:	8563      	strh	r3, [r4, #42]	; 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 8004dbe:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8004dc0:	8523      	strh	r3, [r4, #40]	; 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 8004dc2:	4b64      	ldr	r3, [pc, #400]	; (8004f54 <HAL_I2C_Mem_Read+0x210>)
 8004dc4:	62e3      	str	r3, [r4, #44]	; 0x2c
    if (I2C_RequestMemoryRead(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 8004dc6:	4629      	mov	r1, r5
 8004dc8:	e9cd 7600 	strd	r7, r6, [sp]
 8004dcc:	464b      	mov	r3, r9
 8004dce:	4642      	mov	r2, r8
 8004dd0:	4620      	mov	r0, r4
 8004dd2:	f7ff fdfd 	bl	80049d0 <I2C_RequestMemoryRead>
 8004dd6:	4605      	mov	r5, r0
 8004dd8:	b108      	cbz	r0, 8004dde <HAL_I2C_Mem_Read+0x9a>
      return HAL_ERROR;
 8004dda:	2501      	movs	r5, #1
 8004ddc:	e7c2      	b.n	8004d64 <HAL_I2C_Mem_Read+0x20>
    if (hi2c->XferSize == 0U)
 8004dde:	8d22      	ldrh	r2, [r4, #40]	; 0x28
 8004de0:	6823      	ldr	r3, [r4, #0]
 8004de2:	b992      	cbnz	r2, 8004e0a <HAL_I2C_Mem_Read+0xc6>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8004de4:	9002      	str	r0, [sp, #8]
 8004de6:	695a      	ldr	r2, [r3, #20]
 8004de8:	9202      	str	r2, [sp, #8]
 8004dea:	699a      	ldr	r2, [r3, #24]
 8004dec:	9202      	str	r2, [sp, #8]
 8004dee:	9a02      	ldr	r2, [sp, #8]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8004df0:	681a      	ldr	r2, [r3, #0]
 8004df2:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8004df6:	601a      	str	r2, [r3, #0]
    hi2c->State = HAL_I2C_STATE_READY;
 8004df8:	2320      	movs	r3, #32
 8004dfa:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
    hi2c->Mode = HAL_I2C_MODE_NONE;
 8004dfe:	2300      	movs	r3, #0
 8004e00:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
    __HAL_UNLOCK(hi2c);
 8004e04:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    return HAL_OK;
 8004e08:	e7ac      	b.n	8004d64 <HAL_I2C_Mem_Read+0x20>
    else if (hi2c->XferSize == 1U)
 8004e0a:	2a01      	cmp	r2, #1
 8004e0c:	d12c      	bne.n	8004e68 <HAL_I2C_Mem_Read+0x124>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8004e0e:	681a      	ldr	r2, [r3, #0]
 8004e10:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8004e14:	601a      	str	r2, [r3, #0]
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8004e16:	9003      	str	r0, [sp, #12]
 8004e18:	695a      	ldr	r2, [r3, #20]
 8004e1a:	9203      	str	r2, [sp, #12]
 8004e1c:	699a      	ldr	r2, [r3, #24]
 8004e1e:	9203      	str	r2, [sp, #12]
 8004e20:	9a03      	ldr	r2, [sp, #12]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8004e22:	681a      	ldr	r2, [r3, #0]
 8004e24:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8004e28:	601a      	str	r2, [r3, #0]
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8004e2a:	f8df 812c 	ldr.w	r8, [pc, #300]	; 8004f58 <HAL_I2C_Mem_Read+0x214>
    while (hi2c->XferSize > 0U)
 8004e2e:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 8004e30:	2b00      	cmp	r3, #0
 8004e32:	d0e1      	beq.n	8004df8 <HAL_I2C_Mem_Read+0xb4>
      if (hi2c->XferSize <= 3U)
 8004e34:	2b03      	cmp	r3, #3
 8004e36:	d86e      	bhi.n	8004f16 <HAL_I2C_Mem_Read+0x1d2>
        if (hi2c->XferSize == 1U)
 8004e38:	2b01      	cmp	r3, #1
 8004e3a:	d12d      	bne.n	8004e98 <HAL_I2C_Mem_Read+0x154>
          if (I2C_WaitOnRXNEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8004e3c:	4632      	mov	r2, r6
 8004e3e:	4639      	mov	r1, r7
 8004e40:	4620      	mov	r0, r4
 8004e42:	f7ff fce8 	bl	8004816 <I2C_WaitOnRXNEFlagUntilTimeout>
 8004e46:	2800      	cmp	r0, #0
 8004e48:	d1c7      	bne.n	8004dda <HAL_I2C_Mem_Read+0x96>
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8004e4a:	6823      	ldr	r3, [r4, #0]
 8004e4c:	691a      	ldr	r2, [r3, #16]
 8004e4e:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8004e50:	701a      	strb	r2, [r3, #0]
          hi2c->pBuffPtr++;
 8004e52:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8004e54:	3301      	adds	r3, #1
 8004e56:	6263      	str	r3, [r4, #36]	; 0x24
          hi2c->XferSize--;
 8004e58:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 8004e5a:	3b01      	subs	r3, #1
 8004e5c:	8523      	strh	r3, [r4, #40]	; 0x28
          hi2c->XferCount--;
 8004e5e:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8004e60:	3b01      	subs	r3, #1
 8004e62:	b29b      	uxth	r3, r3
 8004e64:	8563      	strh	r3, [r4, #42]	; 0x2a
 8004e66:	e7e2      	b.n	8004e2e <HAL_I2C_Mem_Read+0xea>
    else if (hi2c->XferSize == 2U)
 8004e68:	2a02      	cmp	r2, #2
 8004e6a:	d10e      	bne.n	8004e8a <HAL_I2C_Mem_Read+0x146>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8004e6c:	681a      	ldr	r2, [r3, #0]
 8004e6e:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8004e72:	601a      	str	r2, [r3, #0]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 8004e74:	681a      	ldr	r2, [r3, #0]
 8004e76:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 8004e7a:	601a      	str	r2, [r3, #0]
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8004e7c:	9004      	str	r0, [sp, #16]
 8004e7e:	695a      	ldr	r2, [r3, #20]
 8004e80:	9204      	str	r2, [sp, #16]
 8004e82:	699b      	ldr	r3, [r3, #24]
 8004e84:	9304      	str	r3, [sp, #16]
 8004e86:	9b04      	ldr	r3, [sp, #16]
 8004e88:	e7cf      	b.n	8004e2a <HAL_I2C_Mem_Read+0xe6>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8004e8a:	9005      	str	r0, [sp, #20]
 8004e8c:	695a      	ldr	r2, [r3, #20]
 8004e8e:	9205      	str	r2, [sp, #20]
 8004e90:	699b      	ldr	r3, [r3, #24]
 8004e92:	9305      	str	r3, [sp, #20]
 8004e94:	9b05      	ldr	r3, [sp, #20]
 8004e96:	e7c8      	b.n	8004e2a <HAL_I2C_Mem_Read+0xe6>
        else if (hi2c->XferSize == 2U)
 8004e98:	2b02      	cmp	r3, #2
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8004e9a:	9600      	str	r6, [sp, #0]
 8004e9c:	463b      	mov	r3, r7
 8004e9e:	f04f 0200 	mov.w	r2, #0
 8004ea2:	4641      	mov	r1, r8
 8004ea4:	4620      	mov	r0, r4
        else if (hi2c->XferSize == 2U)
 8004ea6:	d119      	bne.n	8004edc <HAL_I2C_Mem_Read+0x198>
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8004ea8:	f7ff fce4 	bl	8004874 <I2C_WaitOnFlagUntilTimeout>
 8004eac:	2800      	cmp	r0, #0
 8004eae:	d194      	bne.n	8004dda <HAL_I2C_Mem_Read+0x96>
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8004eb0:	6823      	ldr	r3, [r4, #0]
 8004eb2:	681a      	ldr	r2, [r3, #0]
 8004eb4:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8004eb8:	601a      	str	r2, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8004eba:	691a      	ldr	r2, [r3, #16]
 8004ebc:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8004ebe:	701a      	strb	r2, [r3, #0]
          hi2c->pBuffPtr++;
 8004ec0:	6a62      	ldr	r2, [r4, #36]	; 0x24
 8004ec2:	1c53      	adds	r3, r2, #1
 8004ec4:	6263      	str	r3, [r4, #36]	; 0x24
          hi2c->XferSize--;
 8004ec6:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 8004ec8:	3b01      	subs	r3, #1
 8004eca:	8523      	strh	r3, [r4, #40]	; 0x28
          hi2c->XferCount--;
 8004ecc:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8004ece:	3b01      	subs	r3, #1
 8004ed0:	b29b      	uxth	r3, r3
 8004ed2:	8563      	strh	r3, [r4, #42]	; 0x2a
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8004ed4:	6823      	ldr	r3, [r4, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8004ed6:	691b      	ldr	r3, [r3, #16]
 8004ed8:	7053      	strb	r3, [r2, #1]
 8004eda:	e7ba      	b.n	8004e52 <HAL_I2C_Mem_Read+0x10e>
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8004edc:	f7ff fcca 	bl	8004874 <I2C_WaitOnFlagUntilTimeout>
 8004ee0:	4602      	mov	r2, r0
 8004ee2:	2800      	cmp	r0, #0
 8004ee4:	f47f af79 	bne.w	8004dda <HAL_I2C_Mem_Read+0x96>
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8004ee8:	6823      	ldr	r3, [r4, #0]
 8004eea:	6819      	ldr	r1, [r3, #0]
 8004eec:	f421 6180 	bic.w	r1, r1, #1024	; 0x400
 8004ef0:	6019      	str	r1, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8004ef2:	6919      	ldr	r1, [r3, #16]
 8004ef4:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8004ef6:	7019      	strb	r1, [r3, #0]
          hi2c->pBuffPtr++;
 8004ef8:	6a63      	ldr	r3, [r4, #36]	; 0x24
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8004efa:	9600      	str	r6, [sp, #0]
          hi2c->pBuffPtr++;
 8004efc:	3301      	adds	r3, #1
 8004efe:	6263      	str	r3, [r4, #36]	; 0x24
          hi2c->XferSize--;
 8004f00:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 8004f02:	3b01      	subs	r3, #1
 8004f04:	8523      	strh	r3, [r4, #40]	; 0x28
          hi2c->XferCount--;
 8004f06:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8004f08:	3b01      	subs	r3, #1
 8004f0a:	b29b      	uxth	r3, r3
 8004f0c:	8563      	strh	r3, [r4, #42]	; 0x2a
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8004f0e:	4641      	mov	r1, r8
 8004f10:	463b      	mov	r3, r7
 8004f12:	4620      	mov	r0, r4
 8004f14:	e7c8      	b.n	8004ea8 <HAL_I2C_Mem_Read+0x164>
        if (I2C_WaitOnRXNEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8004f16:	4632      	mov	r2, r6
 8004f18:	4639      	mov	r1, r7
 8004f1a:	4620      	mov	r0, r4
 8004f1c:	f7ff fc7b 	bl	8004816 <I2C_WaitOnRXNEFlagUntilTimeout>
 8004f20:	2800      	cmp	r0, #0
 8004f22:	f47f af5a 	bne.w	8004dda <HAL_I2C_Mem_Read+0x96>
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8004f26:	6823      	ldr	r3, [r4, #0]
 8004f28:	691a      	ldr	r2, [r3, #16]
 8004f2a:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8004f2c:	701a      	strb	r2, [r3, #0]
        hi2c->pBuffPtr++;
 8004f2e:	6a62      	ldr	r2, [r4, #36]	; 0x24
 8004f30:	1c53      	adds	r3, r2, #1
 8004f32:	6263      	str	r3, [r4, #36]	; 0x24
        hi2c->XferSize--;
 8004f34:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 8004f36:	3b01      	subs	r3, #1
 8004f38:	8523      	strh	r3, [r4, #40]	; 0x28
        hi2c->XferCount--;
 8004f3a:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8004f3c:	3b01      	subs	r3, #1
 8004f3e:	b29b      	uxth	r3, r3
 8004f40:	8563      	strh	r3, [r4, #42]	; 0x2a
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 8004f42:	6823      	ldr	r3, [r4, #0]
 8004f44:	6959      	ldr	r1, [r3, #20]
 8004f46:	0749      	lsls	r1, r1, #29
 8004f48:	f57f af71 	bpl.w	8004e2e <HAL_I2C_Mem_Read+0xea>
 8004f4c:	e7c3      	b.n	8004ed6 <HAL_I2C_Mem_Read+0x192>
 8004f4e:	bf00      	nop
 8004f50:	00100002 	.word	0x00100002
 8004f54:	ffff0000 	.word	0xffff0000
 8004f58:	00010004 	.word	0x00010004

08004f5c <HAL_I2CEx_ConfigAnalogFilter>:
{
  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_ANALOG_FILTER(AnalogFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 8004f5c:	f890 203d 	ldrb.w	r2, [r0, #61]	; 0x3d
 8004f60:	b2d2      	uxtb	r2, r2
 8004f62:	2a20      	cmp	r2, #32
{
 8004f64:	b510      	push	{r4, lr}
  if (hi2c->State == HAL_I2C_STATE_READY)
 8004f66:	d116      	bne.n	8004f96 <HAL_I2CEx_ConfigAnalogFilter+0x3a>
  {
    hi2c->State = HAL_I2C_STATE_BUSY;
 8004f68:	2324      	movs	r3, #36	; 0x24
 8004f6a:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d

    /* Disable the selected I2C peripheral */
    __HAL_I2C_DISABLE(hi2c);
 8004f6e:	6803      	ldr	r3, [r0, #0]
 8004f70:	681c      	ldr	r4, [r3, #0]
 8004f72:	f024 0401 	bic.w	r4, r4, #1
 8004f76:	601c      	str	r4, [r3, #0]

    /* Reset I2Cx ANOFF bit */
    hi2c->Instance->FLTR &= ~(I2C_FLTR_ANOFF);
 8004f78:	6a5c      	ldr	r4, [r3, #36]	; 0x24
 8004f7a:	f024 0410 	bic.w	r4, r4, #16
 8004f7e:	625c      	str	r4, [r3, #36]	; 0x24

    /* Disable the analog filter */
    hi2c->Instance->FLTR |= AnalogFilter;
 8004f80:	6a5c      	ldr	r4, [r3, #36]	; 0x24
 8004f82:	4321      	orrs	r1, r4
 8004f84:	6259      	str	r1, [r3, #36]	; 0x24

    __HAL_I2C_ENABLE(hi2c);
 8004f86:	6819      	ldr	r1, [r3, #0]
 8004f88:	f041 0101 	orr.w	r1, r1, #1
 8004f8c:	6019      	str	r1, [r3, #0]

    hi2c->State = HAL_I2C_STATE_READY;
 8004f8e:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d

    return HAL_OK;
 8004f92:	2000      	movs	r0, #0
  }
  else
  {
    return HAL_BUSY;
  }
}
 8004f94:	bd10      	pop	{r4, pc}
    return HAL_BUSY;
 8004f96:	2002      	movs	r0, #2
 8004f98:	e7fc      	b.n	8004f94 <HAL_I2CEx_ConfigAnalogFilter+0x38>

08004f9a <HAL_I2CEx_ConfigDigitalFilter>:
  *                the configuration information for the specified I2Cx peripheral.
  * @param  DigitalFilter Coefficient of digital noise filter between 0x00 and 0x0F.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2CEx_ConfigDigitalFilter(I2C_HandleTypeDef *hi2c, uint32_t DigitalFilter)
{
 8004f9a:	b530      	push	{r4, r5, lr}

  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_DIGITAL_FILTER(DigitalFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 8004f9c:	f890 403d 	ldrb.w	r4, [r0, #61]	; 0x3d
 8004fa0:	b2e4      	uxtb	r4, r4
 8004fa2:	2c20      	cmp	r4, #32
 8004fa4:	d116      	bne.n	8004fd4 <HAL_I2CEx_ConfigDigitalFilter+0x3a>
  {
    hi2c->State = HAL_I2C_STATE_BUSY;

    /* Disable the selected I2C peripheral */
    __HAL_I2C_DISABLE(hi2c);
 8004fa6:	6802      	ldr	r2, [r0, #0]
    hi2c->State = HAL_I2C_STATE_BUSY;
 8004fa8:	2324      	movs	r3, #36	; 0x24
 8004faa:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d
    __HAL_I2C_DISABLE(hi2c);
 8004fae:	6815      	ldr	r5, [r2, #0]
 8004fb0:	f025 0501 	bic.w	r5, r5, #1
 8004fb4:	6015      	str	r5, [r2, #0]

    /* Get the old register value */
    tmpreg = hi2c->Instance->FLTR;
 8004fb6:	6a55      	ldr	r5, [r2, #36]	; 0x24

    /* Reset I2Cx DNF bit [3:0] */
    tmpreg &= ~(I2C_FLTR_DNF);
 8004fb8:	f64f 73f0 	movw	r3, #65520	; 0xfff0
 8004fbc:	402b      	ands	r3, r5

    /* Set I2Cx DNF coefficient */
    tmpreg |= DigitalFilter;
 8004fbe:	430b      	orrs	r3, r1

    /* Store the new register value */
    hi2c->Instance->FLTR = tmpreg;
 8004fc0:	b29b      	uxth	r3, r3
 8004fc2:	6253      	str	r3, [r2, #36]	; 0x24

    __HAL_I2C_ENABLE(hi2c);
 8004fc4:	6813      	ldr	r3, [r2, #0]
 8004fc6:	f043 0301 	orr.w	r3, r3, #1
 8004fca:	6013      	str	r3, [r2, #0]

    hi2c->State = HAL_I2C_STATE_READY;
 8004fcc:	f880 403d 	strb.w	r4, [r0, #61]	; 0x3d

    return HAL_OK;
 8004fd0:	2000      	movs	r0, #0
  }
  else
  {
    return HAL_BUSY;
  }
}
 8004fd2:	bd30      	pop	{r4, r5, pc}
    return HAL_BUSY;
 8004fd4:	2002      	movs	r0, #2
 8004fd6:	e7fc      	b.n	8004fd2 <HAL_I2CEx_ConfigDigitalFilter+0x38>

08004fd8 <LTDC_SetConfig>:
  * @param  LayerIdx  LTDC Layer index.
  *                   This parameter can be one of the following values: LTDC_LAYER_1 (0) or LTDC_LAYER_2 (1)
  * @retval None
  */
static void LTDC_SetConfig(LTDC_HandleTypeDef *hltdc, LTDC_LayerCfgTypeDef *pLayerCfg, uint32_t LayerIdx)
{
 8004fd8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  uint32_t tmp1;
  uint32_t tmp2;

  /* Configure the horizontal start and stop position */
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 8004fdc:	01d2      	lsls	r2, r2, #7
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8004fde:	6804      	ldr	r4, [r0, #0]
 8004fe0:	684f      	ldr	r7, [r1, #4]
 8004fe2:	68e5      	ldr	r5, [r4, #12]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 8004fe4:	f8d1 c000 	ldr.w	ip, [r1]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);

  /* Configure the default color values */
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
  tmp2 = (pLayerCfg->Alpha0 << 24U);
 8004fe8:	f8d1 9018 	ldr.w	r9, [r1, #24]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 8004fec:	3284      	adds	r2, #132	; 0x84
 8004fee:	18a3      	adds	r3, r4, r2
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 8004ff0:	f10c 0601 	add.w	r6, ip, #1
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 8004ff4:	6858      	ldr	r0, [r3, #4]
 8004ff6:	f400 4070 	and.w	r0, r0, #61440	; 0xf000
 8004ffa:	6058      	str	r0, [r3, #4]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 8004ffc:	68e0      	ldr	r0, [r4, #12]
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8004ffe:	f3c5 450b 	ubfx	r5, r5, #16, #12
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 8005002:	f3c0 400b 	ubfx	r0, r0, #16, #12
 8005006:	4430      	add	r0, r6
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8005008:	443d      	add	r5, r7
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 800500a:	ea40 4005 	orr.w	r0, r0, r5, lsl #16
 800500e:	6058      	str	r0, [r3, #4]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 8005010:	68e0      	ldr	r0, [r4, #12]
 8005012:	68cd      	ldr	r5, [r1, #12]
 8005014:	f3c0 000a 	ubfx	r0, r0, #0, #11
 8005018:	4405      	add	r5, r0
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR &= ~(LTDC_LxWVPCR_WVSTPOS | LTDC_LxWVPCR_WVSPPOS);
 800501a:	6898      	ldr	r0, [r3, #8]
 800501c:	f400 4070 	and.w	r0, r0, #61440	; 0xf000
 8005020:	6098      	str	r0, [r3, #8]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
 8005022:	68e6      	ldr	r6, [r4, #12]
 8005024:	6888      	ldr	r0, [r1, #8]
 8005026:	f3c6 060a 	ubfx	r6, r6, #0, #11
 800502a:	3001      	adds	r0, #1
 800502c:	4430      	add	r0, r6
 800502e:	ea40 4005 	orr.w	r0, r0, r5, lsl #16
 8005032:	6098      	str	r0, [r3, #8]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 8005034:	6918      	ldr	r0, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 8005036:	690e      	ldr	r6, [r1, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 8005038:	f020 0007 	bic.w	r0, r0, #7
 800503c:	6118      	str	r0, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED | LTDC_LxDCCR_DCALPHA);
 800503e:	f04f 0e00 	mov.w	lr, #0
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 8005042:	611e      	str	r6, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED | LTDC_LxDCCR_DCALPHA);
 8005044:	699d      	ldr	r5, [r3, #24]
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
 8005046:	f891 0032 	ldrb.w	r0, [r1, #50]	; 0x32
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
 800504a:	f891 8031 	ldrb.w	r8, [r1, #49]	; 0x31
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED | LTDC_LxDCCR_DCALPHA);
 800504e:	f8c3 e018 	str.w	lr, [r3, #24]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR = (pLayerCfg->Backcolor.Blue | tmp | tmp1 | tmp2);
 8005052:	f891 5030 	ldrb.w	r5, [r1, #48]	; 0x30
 8005056:	ea45 6509 	orr.w	r5, r5, r9, lsl #24
 800505a:	ea45 2508 	orr.w	r5, r5, r8, lsl #8
 800505e:	ea45 4500 	orr.w	r5, r5, r0, lsl #16
 8005062:	619d      	str	r5, [r3, #24]

  /* Specifies the constant alpha value */
  LTDC_LAYER(hltdc, LayerIdx)->CACR &= ~(LTDC_LxCACR_CONSTA);
 8005064:	6958      	ldr	r0, [r3, #20]
 8005066:	f020 00ff 	bic.w	r0, r0, #255	; 0xff
 800506a:	6158      	str	r0, [r3, #20]
  LTDC_LAYER(hltdc, LayerIdx)->CACR = (pLayerCfg->Alpha);
 800506c:	6948      	ldr	r0, [r1, #20]
 800506e:	6158      	str	r0, [r3, #20]

  /* Specifies the blending factors */
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
 8005070:	69d8      	ldr	r0, [r3, #28]
 8005072:	f420 60e0 	bic.w	r0, r0, #1792	; 0x700
 8005076:	f020 0007 	bic.w	r0, r0, #7
 800507a:	61d8      	str	r0, [r3, #28]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR = (pLayerCfg->BlendingFactor1 | pLayerCfg->BlendingFactor2);
 800507c:	e9d1 5007 	ldrd	r5, r0, [r1, #28]
 8005080:	4305      	orrs	r5, r0
 8005082:	61dd      	str	r5, [r3, #28]

  /* Configure the color frame buffer start address */
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 8005084:	6a98      	ldr	r0, [r3, #40]	; 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 8005086:	6a48      	ldr	r0, [r1, #36]	; 0x24
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 8005088:	f8c3 e028 	str.w	lr, [r3, #40]	; 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 800508c:	6298      	str	r0, [r3, #40]	; 0x28

  if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
 800508e:	b31e      	cbz	r6, 80050d8 <LTDC_SetConfig+0x100>
  {
    tmp = 4U;
  }
  else if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_RGB888)
 8005090:	2e01      	cmp	r6, #1
 8005092:	d023      	beq.n	80050dc <LTDC_SetConfig+0x104>
  {
    tmp = 3U;
  }
  else if ((pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB4444) || \
 8005094:	1eb0      	subs	r0, r6, #2
 8005096:	2802      	cmp	r0, #2
 8005098:	d922      	bls.n	80050e0 <LTDC_SetConfig+0x108>
           (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_RGB565)   || \
           (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB1555) || \
 800509a:	2e07      	cmp	r6, #7
  {
    tmp = 2U;
  }
  else
  {
    tmp = 1U;
 800509c:	bf0c      	ite	eq
 800509e:	2002      	moveq	r0, #2
 80050a0:	2001      	movne	r0, #1
  }

  /* Configure the color frame buffer pitch in byte */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
 80050a2:	6add      	ldr	r5, [r3, #44]	; 0x2c
 80050a4:	f005 25e0 	and.w	r5, r5, #3758153728	; 0xe000e000
 80050a8:	62dd      	str	r5, [r3, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 80050aa:	6a8d      	ldr	r5, [r1, #40]	; 0x28
  /* Configure the frame buffer line number */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 80050ac:	6ac9      	ldr	r1, [r1, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 80050ae:	eba7 070c 	sub.w	r7, r7, ip
 80050b2:	4345      	muls	r5, r0
 80050b4:	4378      	muls	r0, r7
 80050b6:	3003      	adds	r0, #3
 80050b8:	ea40 4005 	orr.w	r0, r0, r5, lsl #16
 80050bc:	62d8      	str	r0, [r3, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
 80050be:	6b18      	ldr	r0, [r3, #48]	; 0x30
 80050c0:	f420 60ff 	bic.w	r0, r0, #2040	; 0x7f8
 80050c4:	f020 0007 	bic.w	r0, r0, #7
 80050c8:	6318      	str	r0, [r3, #48]	; 0x30
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 80050ca:	6319      	str	r1, [r3, #48]	; 0x30

  /* Enable LTDC_Layer by setting LEN bit */
  LTDC_LAYER(hltdc, LayerIdx)->CR |= (uint32_t)LTDC_LxCR_LEN;
 80050cc:	58a3      	ldr	r3, [r4, r2]
 80050ce:	f043 0301 	orr.w	r3, r3, #1
 80050d2:	50a3      	str	r3, [r4, r2]
}
 80050d4:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    tmp = 4U;
 80050d8:	2004      	movs	r0, #4
 80050da:	e7e2      	b.n	80050a2 <LTDC_SetConfig+0xca>
    tmp = 3U;
 80050dc:	2003      	movs	r0, #3
 80050de:	e7e0      	b.n	80050a2 <LTDC_SetConfig+0xca>
    tmp = 2U;
 80050e0:	2002      	movs	r0, #2
 80050e2:	e7de      	b.n	80050a2 <LTDC_SetConfig+0xca>

080050e4 <HAL_LTDC_Init>:
{
 80050e4:	b538      	push	{r3, r4, r5, lr}
  if (hltdc == NULL)
 80050e6:	4604      	mov	r4, r0
 80050e8:	2800      	cmp	r0, #0
 80050ea:	d063      	beq.n	80051b4 <HAL_LTDC_Init+0xd0>
  if (hltdc->State == HAL_LTDC_STATE_RESET)
 80050ec:	f890 30a1 	ldrb.w	r3, [r0, #161]	; 0xa1
 80050f0:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 80050f4:	b91b      	cbnz	r3, 80050fe <HAL_LTDC_Init+0x1a>
    hltdc->Lock = HAL_UNLOCKED;
 80050f6:	f880 20a0 	strb.w	r2, [r0, #160]	; 0xa0
    HAL_LTDC_MspInit(hltdc);
 80050fa:	f7fd f915 	bl	8002328 <HAL_LTDC_MspInit>
  hltdc->State = HAL_LTDC_STATE_BUSY;
 80050fe:	2302      	movs	r3, #2
 8005100:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
 8005104:	6823      	ldr	r3, [r4, #0]
 8005106:	699a      	ldr	r2, [r3, #24]
 8005108:	f022 4270 	bic.w	r2, r2, #4026531840	; 0xf0000000
 800510c:	619a      	str	r2, [r3, #24]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 800510e:	e9d4 2001 	ldrd	r2, r0, [r4, #4]
 8005112:	4302      	orrs	r2, r0
 8005114:	68e0      	ldr	r0, [r4, #12]
 8005116:	6999      	ldr	r1, [r3, #24]
 8005118:	4302      	orrs	r2, r0
                                     hltdc->Init.DEPolarity | hltdc->Init.PCPolarity);
 800511a:	6920      	ldr	r0, [r4, #16]
 800511c:	4302      	orrs	r2, r0
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 800511e:	430a      	orrs	r2, r1
 8005120:	619a      	str	r2, [r3, #24]
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 8005122:	689a      	ldr	r2, [r3, #8]
 8005124:	4924      	ldr	r1, [pc, #144]	; (80051b8 <HAL_LTDC_Init+0xd4>)
  tmp = (hltdc->Init.HorizontalSync << 16U);
 8005126:	6960      	ldr	r0, [r4, #20]
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 8005128:	400a      	ands	r2, r1
 800512a:	609a      	str	r2, [r3, #8]
  hltdc->Instance->SSCR |= (tmp | hltdc->Init.VerticalSync);
 800512c:	689a      	ldr	r2, [r3, #8]
 800512e:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 8005132:	69a0      	ldr	r0, [r4, #24]
 8005134:	4302      	orrs	r2, r0
 8005136:	609a      	str	r2, [r3, #8]
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 8005138:	68da      	ldr	r2, [r3, #12]
  tmp = (hltdc->Init.AccumulatedHBP << 16U);
 800513a:	69e0      	ldr	r0, [r4, #28]
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 800513c:	400a      	ands	r2, r1
 800513e:	60da      	str	r2, [r3, #12]
  hltdc->Instance->BPCR |= (tmp | hltdc->Init.AccumulatedVBP);
 8005140:	68da      	ldr	r2, [r3, #12]
 8005142:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 8005146:	6a20      	ldr	r0, [r4, #32]
 8005148:	4302      	orrs	r2, r0
 800514a:	60da      	str	r2, [r3, #12]
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 800514c:	691a      	ldr	r2, [r3, #16]
  tmp = (hltdc->Init.AccumulatedActiveW << 16U);
 800514e:	6a60      	ldr	r0, [r4, #36]	; 0x24
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 8005150:	400a      	ands	r2, r1
 8005152:	611a      	str	r2, [r3, #16]
  hltdc->Instance->AWCR |= (tmp | hltdc->Init.AccumulatedActiveH);
 8005154:	691a      	ldr	r2, [r3, #16]
 8005156:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800515a:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 800515c:	4302      	orrs	r2, r0
 800515e:	611a      	str	r2, [r3, #16]
  hltdc->Instance->TWCR &= ~(LTDC_TWCR_TOTALH | LTDC_TWCR_TOTALW);
 8005160:	695a      	ldr	r2, [r3, #20]
 8005162:	4011      	ands	r1, r2
 8005164:	6159      	str	r1, [r3, #20]
  hltdc->Instance->TWCR |= (tmp | hltdc->Init.TotalHeigh);
 8005166:	695a      	ldr	r2, [r3, #20]
  tmp = (hltdc->Init.TotalWidth << 16U);
 8005168:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
  hltdc->Instance->TWCR |= (tmp | hltdc->Init.TotalHeigh);
 800516a:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 800516e:	6b21      	ldr	r1, [r4, #48]	; 0x30
 8005170:	430a      	orrs	r2, r1
 8005172:	615a      	str	r2, [r3, #20]
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 8005174:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
  tmp1 = ((uint32_t)(hltdc->Init.Backcolor.Red) << 16U);
 8005176:	f894 0036 	ldrb.w	r0, [r4, #54]	; 0x36
  tmp = ((uint32_t)(hltdc->Init.Backcolor.Green) << 8U);
 800517a:	f894 5035 	ldrb.w	r5, [r4, #53]	; 0x35
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 800517e:	f001 417f 	and.w	r1, r1, #4278190080	; 0xff000000
 8005182:	62d9      	str	r1, [r3, #44]	; 0x2c
  hltdc->Instance->BCCR |= (tmp1 | tmp | hltdc->Init.Backcolor.Blue);
 8005184:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 8005186:	f894 2034 	ldrb.w	r2, [r4, #52]	; 0x34
 800518a:	430a      	orrs	r2, r1
 800518c:	ea42 2205 	orr.w	r2, r2, r5, lsl #8
 8005190:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 8005194:	62da      	str	r2, [r3, #44]	; 0x2c
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_TE | LTDC_IT_FU);
 8005196:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8005198:	f042 0206 	orr.w	r2, r2, #6
 800519c:	635a      	str	r2, [r3, #52]	; 0x34
  __HAL_LTDC_ENABLE(hltdc);
 800519e:	699a      	ldr	r2, [r3, #24]
 80051a0:	f042 0201 	orr.w	r2, r2, #1
 80051a4:	619a      	str	r2, [r3, #24]
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 80051a6:	2000      	movs	r0, #0
  hltdc->State = HAL_LTDC_STATE_READY;
 80051a8:	2301      	movs	r3, #1
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 80051aa:	f8c4 00a4 	str.w	r0, [r4, #164]	; 0xa4
  hltdc->State = HAL_LTDC_STATE_READY;
 80051ae:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
}
 80051b2:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 80051b4:	2001      	movs	r0, #1
 80051b6:	e7fc      	b.n	80051b2 <HAL_LTDC_Init+0xce>
 80051b8:	f000f800 	.word	0xf000f800

080051bc <HAL_LTDC_ErrorCallback>:
 80051bc:	4770      	bx	lr

080051be <HAL_LTDC_ReloadEventCallback>:
 80051be:	4770      	bx	lr

080051c0 <HAL_LTDC_IRQHandler>:
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 80051c0:	6803      	ldr	r3, [r0, #0]
{
 80051c2:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 80051c4:	6b9e      	ldr	r6, [r3, #56]	; 0x38
  uint32_t itsources = READ_REG(hltdc->Instance->IER);
 80051c6:	6b5d      	ldr	r5, [r3, #52]	; 0x34
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 80051c8:	0772      	lsls	r2, r6, #29
{
 80051ca:	4604      	mov	r4, r0
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 80051cc:	d514      	bpl.n	80051f8 <HAL_LTDC_IRQHandler+0x38>
 80051ce:	0769      	lsls	r1, r5, #29
 80051d0:	d512      	bpl.n	80051f8 <HAL_LTDC_IRQHandler+0x38>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_TE);
 80051d2:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 80051d4:	f022 0204 	bic.w	r2, r2, #4
 80051d8:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_TE);
 80051da:	2204      	movs	r2, #4
 80051dc:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_TE;
 80051de:	f8d0 30a4 	ldr.w	r3, [r0, #164]	; 0xa4
 80051e2:	f043 0301 	orr.w	r3, r3, #1
 80051e6:	f8c0 30a4 	str.w	r3, [r0, #164]	; 0xa4
    __HAL_UNLOCK(hltdc);
 80051ea:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_ERROR;
 80051ec:	f880 20a1 	strb.w	r2, [r0, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 80051f0:	f880 30a0 	strb.w	r3, [r0, #160]	; 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 80051f4:	f7ff ffe2 	bl	80051bc <HAL_LTDC_ErrorCallback>
  if (((isrflags & LTDC_ISR_FUIF) != 0U) && ((itsources & LTDC_IER_FUIE) != 0U))
 80051f8:	07b2      	lsls	r2, r6, #30
 80051fa:	d516      	bpl.n	800522a <HAL_LTDC_IRQHandler+0x6a>
 80051fc:	07ab      	lsls	r3, r5, #30
 80051fe:	d514      	bpl.n	800522a <HAL_LTDC_IRQHandler+0x6a>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_FU);
 8005200:	6823      	ldr	r3, [r4, #0]
 8005202:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8005204:	f022 0202 	bic.w	r2, r2, #2
 8005208:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_FU);
 800520a:	2202      	movs	r2, #2
 800520c:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_FU;
 800520e:	f8d4 30a4 	ldr.w	r3, [r4, #164]	; 0xa4
 8005212:	4313      	orrs	r3, r2
 8005214:	f8c4 30a4 	str.w	r3, [r4, #164]	; 0xa4
    hltdc->State = HAL_LTDC_STATE_ERROR;
 8005218:	2304      	movs	r3, #4
 800521a:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 800521e:	2300      	movs	r3, #0
 8005220:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 8005224:	4620      	mov	r0, r4
 8005226:	f7ff ffc9 	bl	80051bc <HAL_LTDC_ErrorCallback>
  if (((isrflags & LTDC_ISR_LIF) != 0U) && ((itsources & LTDC_IER_LIE) != 0U))
 800522a:	07f0      	lsls	r0, r6, #31
 800522c:	d510      	bpl.n	8005250 <HAL_LTDC_IRQHandler+0x90>
 800522e:	07e9      	lsls	r1, r5, #31
 8005230:	d50e      	bpl.n	8005250 <HAL_LTDC_IRQHandler+0x90>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 8005232:	6823      	ldr	r3, [r4, #0]
 8005234:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8005236:	f022 0201 	bic.w	r2, r2, #1
 800523a:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_LI);
 800523c:	2201      	movs	r2, #1
 800523e:	63da      	str	r2, [r3, #60]	; 0x3c
    __HAL_UNLOCK(hltdc);
 8005240:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_READY;
 8005242:	f884 20a1 	strb.w	r2, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 8005246:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_LineEventCallback(hltdc);
 800524a:	4620      	mov	r0, r4
 800524c:	f7fc fba8 	bl	80019a0 <HAL_LTDC_LineEventCallback>
  if (((isrflags & LTDC_ISR_RRIF) != 0U) && ((itsources & LTDC_IER_RRIE) != 0U))
 8005250:	0732      	lsls	r2, r6, #28
 8005252:	d511      	bpl.n	8005278 <HAL_LTDC_IRQHandler+0xb8>
 8005254:	072b      	lsls	r3, r5, #28
 8005256:	d50f      	bpl.n	8005278 <HAL_LTDC_IRQHandler+0xb8>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
 8005258:	6823      	ldr	r3, [r4, #0]
 800525a:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800525c:	f022 0208 	bic.w	r2, r2, #8
 8005260:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_RR);
 8005262:	2208      	movs	r2, #8
 8005264:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->State = HAL_LTDC_STATE_READY;
 8005266:	2301      	movs	r3, #1
 8005268:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 800526c:	2300      	movs	r3, #0
 800526e:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_ReloadEventCallback(hltdc);
 8005272:	4620      	mov	r0, r4
 8005274:	f7ff ffa3 	bl	80051be <HAL_LTDC_ReloadEventCallback>
}
 8005278:	bd70      	pop	{r4, r5, r6, pc}

0800527a <HAL_LTDC_ConfigLayer>:
{
 800527a:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  __HAL_LOCK(hltdc);
 800527c:	f890 30a0 	ldrb.w	r3, [r0, #160]	; 0xa0
 8005280:	2b01      	cmp	r3, #1
{
 8005282:	4606      	mov	r6, r0
 8005284:	468c      	mov	ip, r1
 8005286:	4696      	mov	lr, r2
 8005288:	f04f 0002 	mov.w	r0, #2
  __HAL_LOCK(hltdc);
 800528c:	d01d      	beq.n	80052ca <HAL_LTDC_ConfigLayer+0x50>
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 800528e:	2434      	movs	r4, #52	; 0x34
 8005290:	460d      	mov	r5, r1
  hltdc->State = HAL_LTDC_STATE_BUSY;
 8005292:	f886 00a1 	strb.w	r0, [r6, #161]	; 0xa1
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 8005296:	fb04 6402 	mla	r4, r4, r2, r6
 800529a:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
  __HAL_LOCK(hltdc);
 800529c:	2701      	movs	r7, #1
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 800529e:	3438      	adds	r4, #56	; 0x38
  __HAL_LOCK(hltdc);
 80052a0:	f886 70a0 	strb.w	r7, [r6, #160]	; 0xa0
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 80052a4:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 80052a6:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80052a8:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 80052aa:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80052ac:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 80052ae:	682b      	ldr	r3, [r5, #0]
 80052b0:	6023      	str	r3, [r4, #0]
  LTDC_SetConfig(hltdc, pLayerCfg, LayerIdx);
 80052b2:	4630      	mov	r0, r6
 80052b4:	4672      	mov	r2, lr
 80052b6:	4661      	mov	r1, ip
 80052b8:	f7ff fe8e 	bl	8004fd8 <LTDC_SetConfig>
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 80052bc:	6833      	ldr	r3, [r6, #0]
  __HAL_UNLOCK(hltdc);
 80052be:	2000      	movs	r0, #0
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 80052c0:	625f      	str	r7, [r3, #36]	; 0x24
  hltdc->State  = HAL_LTDC_STATE_READY;
 80052c2:	f886 70a1 	strb.w	r7, [r6, #161]	; 0xa1
  __HAL_UNLOCK(hltdc);
 80052c6:	f886 00a0 	strb.w	r0, [r6, #160]	; 0xa0
}
 80052ca:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

080052cc <HAL_LTDC_ProgramLineEvent>:
  __HAL_LOCK(hltdc);
 80052cc:	f890 30a0 	ldrb.w	r3, [r0, #160]	; 0xa0
 80052d0:	2b01      	cmp	r3, #1
 80052d2:	f04f 0302 	mov.w	r3, #2
 80052d6:	d012      	beq.n	80052fe <HAL_LTDC_ProgramLineEvent+0x32>
  hltdc->State = HAL_LTDC_STATE_BUSY;
 80052d8:	f880 30a1 	strb.w	r3, [r0, #161]	; 0xa1
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 80052dc:	6803      	ldr	r3, [r0, #0]
 80052de:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 80052e0:	f022 0201 	bic.w	r2, r2, #1
 80052e4:	635a      	str	r2, [r3, #52]	; 0x34
  LTDC->LIPCR = (uint32_t)Line;
 80052e6:	4a07      	ldr	r2, [pc, #28]	; (8005304 <HAL_LTDC_ProgramLineEvent+0x38>)
 80052e8:	6411      	str	r1, [r2, #64]	; 0x40
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_LI);
 80052ea:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 80052ec:	f042 0201 	orr.w	r2, r2, #1
 80052f0:	635a      	str	r2, [r3, #52]	; 0x34
  hltdc->State = HAL_LTDC_STATE_READY;
 80052f2:	2301      	movs	r3, #1
 80052f4:	f880 30a1 	strb.w	r3, [r0, #161]	; 0xa1
  __HAL_UNLOCK(hltdc);
 80052f8:	2300      	movs	r3, #0
 80052fa:	f880 30a0 	strb.w	r3, [r0, #160]	; 0xa0
  __HAL_LOCK(hltdc);
 80052fe:	4618      	mov	r0, r3
}
 8005300:	4770      	bx	lr
 8005302:	bf00      	nop
 8005304:	40016800 	.word	0x40016800

08005308 <HAL_RCC_OscConfig>:
  *         supported by this API. User should request a transition to HSE Off
  *         first and then HSE On or HSE Bypass.
  * @retval HAL status
  */
__weak HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
{
 8005308:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
  uint32_t tickstart, pll_config;

  /* Check Null pointer */
  if(RCC_OscInitStruct == NULL)
 800530c:	4604      	mov	r4, r0
 800530e:	b908      	cbnz	r0, 8005314 <HAL_RCC_OscConfig+0xc>
    else
    {
      /* Check if there is a request to disable the PLL used as System clock source */
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
      {
        return HAL_ERROR;
 8005310:	2001      	movs	r0, #1
 8005312:	e03f      	b.n	8005394 <HAL_RCC_OscConfig+0x8c>
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 8005314:	6803      	ldr	r3, [r0, #0]
 8005316:	07dd      	lsls	r5, r3, #31
 8005318:	d410      	bmi.n	800533c <HAL_RCC_OscConfig+0x34>
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 800531a:	6823      	ldr	r3, [r4, #0]
 800531c:	0798      	lsls	r0, r3, #30
 800531e:	d45a      	bmi.n	80053d6 <HAL_RCC_OscConfig+0xce>
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 8005320:	6823      	ldr	r3, [r4, #0]
 8005322:	071a      	lsls	r2, r3, #28
 8005324:	f100 809c 	bmi.w	8005460 <HAL_RCC_OscConfig+0x158>
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 8005328:	6823      	ldr	r3, [r4, #0]
 800532a:	075b      	lsls	r3, r3, #29
 800532c:	f100 80ba 	bmi.w	80054a4 <HAL_RCC_OscConfig+0x19c>
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 8005330:	69a0      	ldr	r0, [r4, #24]
 8005332:	2800      	cmp	r0, #0
 8005334:	f040 811b 	bne.w	800556e <HAL_RCC_OscConfig+0x266>
          return HAL_ERROR;
        }
      }
    }
  }
  return HAL_OK;
 8005338:	2000      	movs	r0, #0
 800533a:	e02b      	b.n	8005394 <HAL_RCC_OscConfig+0x8c>
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) ||\
 800533c:	4ba7      	ldr	r3, [pc, #668]	; (80055dc <HAL_RCC_OscConfig+0x2d4>)
 800533e:	689a      	ldr	r2, [r3, #8]
 8005340:	f002 020c 	and.w	r2, r2, #12
 8005344:	2a04      	cmp	r2, #4
 8005346:	d007      	beq.n	8005358 <HAL_RCC_OscConfig+0x50>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 8005348:	689a      	ldr	r2, [r3, #8]
 800534a:	f002 020c 	and.w	r2, r2, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) ||\
 800534e:	2a08      	cmp	r2, #8
 8005350:	d10a      	bne.n	8005368 <HAL_RCC_OscConfig+0x60>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 8005352:	685b      	ldr	r3, [r3, #4]
 8005354:	0259      	lsls	r1, r3, #9
 8005356:	d507      	bpl.n	8005368 <HAL_RCC_OscConfig+0x60>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 8005358:	4ba0      	ldr	r3, [pc, #640]	; (80055dc <HAL_RCC_OscConfig+0x2d4>)
 800535a:	681b      	ldr	r3, [r3, #0]
 800535c:	039a      	lsls	r2, r3, #14
 800535e:	d5dc      	bpl.n	800531a <HAL_RCC_OscConfig+0x12>
 8005360:	6863      	ldr	r3, [r4, #4]
 8005362:	2b00      	cmp	r3, #0
 8005364:	d1d9      	bne.n	800531a <HAL_RCC_OscConfig+0x12>
 8005366:	e7d3      	b.n	8005310 <HAL_RCC_OscConfig+0x8>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 8005368:	6863      	ldr	r3, [r4, #4]
 800536a:	4d9c      	ldr	r5, [pc, #624]	; (80055dc <HAL_RCC_OscConfig+0x2d4>)
 800536c:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8005370:	d113      	bne.n	800539a <HAL_RCC_OscConfig+0x92>
 8005372:	682b      	ldr	r3, [r5, #0]
 8005374:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8005378:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
 800537a:	f7fe fd6d 	bl	8003e58 <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800537e:	4d97      	ldr	r5, [pc, #604]	; (80055dc <HAL_RCC_OscConfig+0x2d4>)
        tickstart = HAL_GetTick();
 8005380:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8005382:	682b      	ldr	r3, [r5, #0]
 8005384:	039b      	lsls	r3, r3, #14
 8005386:	d4c8      	bmi.n	800531a <HAL_RCC_OscConfig+0x12>
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 8005388:	f7fe fd66 	bl	8003e58 <HAL_GetTick>
 800538c:	1b80      	subs	r0, r0, r6
 800538e:	2864      	cmp	r0, #100	; 0x64
 8005390:	d9f7      	bls.n	8005382 <HAL_RCC_OscConfig+0x7a>
            return HAL_TIMEOUT;
 8005392:	2003      	movs	r0, #3
}
 8005394:	b002      	add	sp, #8
 8005396:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 800539a:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 800539e:	d104      	bne.n	80053aa <HAL_RCC_OscConfig+0xa2>
 80053a0:	682b      	ldr	r3, [r5, #0]
 80053a2:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 80053a6:	602b      	str	r3, [r5, #0]
 80053a8:	e7e3      	b.n	8005372 <HAL_RCC_OscConfig+0x6a>
 80053aa:	682a      	ldr	r2, [r5, #0]
 80053ac:	f422 3280 	bic.w	r2, r2, #65536	; 0x10000
 80053b0:	602a      	str	r2, [r5, #0]
 80053b2:	682a      	ldr	r2, [r5, #0]
 80053b4:	f422 2280 	bic.w	r2, r2, #262144	; 0x40000
 80053b8:	602a      	str	r2, [r5, #0]
      if((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 80053ba:	2b00      	cmp	r3, #0
 80053bc:	d1dd      	bne.n	800537a <HAL_RCC_OscConfig+0x72>
        tickstart = HAL_GetTick();
 80053be:	f7fe fd4b 	bl	8003e58 <HAL_GetTick>
 80053c2:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 80053c4:	682b      	ldr	r3, [r5, #0]
 80053c6:	039f      	lsls	r7, r3, #14
 80053c8:	d5a7      	bpl.n	800531a <HAL_RCC_OscConfig+0x12>
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 80053ca:	f7fe fd45 	bl	8003e58 <HAL_GetTick>
 80053ce:	1b80      	subs	r0, r0, r6
 80053d0:	2864      	cmp	r0, #100	; 0x64
 80053d2:	d9f7      	bls.n	80053c4 <HAL_RCC_OscConfig+0xbc>
 80053d4:	e7dd      	b.n	8005392 <HAL_RCC_OscConfig+0x8a>
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) ||\
 80053d6:	4b81      	ldr	r3, [pc, #516]	; (80055dc <HAL_RCC_OscConfig+0x2d4>)
 80053d8:	689a      	ldr	r2, [r3, #8]
 80053da:	f012 0f0c 	tst.w	r2, #12
 80053de:	d007      	beq.n	80053f0 <HAL_RCC_OscConfig+0xe8>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 80053e0:	689a      	ldr	r2, [r3, #8]
 80053e2:	f002 020c 	and.w	r2, r2, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) ||\
 80053e6:	2a08      	cmp	r2, #8
 80053e8:	d111      	bne.n	800540e <HAL_RCC_OscConfig+0x106>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 80053ea:	685b      	ldr	r3, [r3, #4]
 80053ec:	025e      	lsls	r6, r3, #9
 80053ee:	d40e      	bmi.n	800540e <HAL_RCC_OscConfig+0x106>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 80053f0:	4b7a      	ldr	r3, [pc, #488]	; (80055dc <HAL_RCC_OscConfig+0x2d4>)
 80053f2:	681a      	ldr	r2, [r3, #0]
 80053f4:	0795      	lsls	r5, r2, #30
 80053f6:	d502      	bpl.n	80053fe <HAL_RCC_OscConfig+0xf6>
 80053f8:	68e2      	ldr	r2, [r4, #12]
 80053fa:	2a01      	cmp	r2, #1
 80053fc:	d188      	bne.n	8005310 <HAL_RCC_OscConfig+0x8>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 80053fe:	681a      	ldr	r2, [r3, #0]
 8005400:	6921      	ldr	r1, [r4, #16]
 8005402:	f022 02f8 	bic.w	r2, r2, #248	; 0xf8
 8005406:	ea42 02c1 	orr.w	r2, r2, r1, lsl #3
 800540a:	601a      	str	r2, [r3, #0]
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 800540c:	e788      	b.n	8005320 <HAL_RCC_OscConfig+0x18>
      if((RCC_OscInitStruct->HSIState)!= RCC_HSI_OFF)
 800540e:	68e2      	ldr	r2, [r4, #12]
 8005410:	4b73      	ldr	r3, [pc, #460]	; (80055e0 <HAL_RCC_OscConfig+0x2d8>)
 8005412:	b1b2      	cbz	r2, 8005442 <HAL_RCC_OscConfig+0x13a>
        __HAL_RCC_HSI_ENABLE();
 8005414:	2201      	movs	r2, #1
 8005416:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 8005418:	f7fe fd1e 	bl	8003e58 <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800541c:	4d6f      	ldr	r5, [pc, #444]	; (80055dc <HAL_RCC_OscConfig+0x2d4>)
        tickstart = HAL_GetTick();
 800541e:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8005420:	682b      	ldr	r3, [r5, #0]
 8005422:	0798      	lsls	r0, r3, #30
 8005424:	d507      	bpl.n	8005436 <HAL_RCC_OscConfig+0x12e>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 8005426:	682b      	ldr	r3, [r5, #0]
 8005428:	6922      	ldr	r2, [r4, #16]
 800542a:	f023 03f8 	bic.w	r3, r3, #248	; 0xf8
 800542e:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 8005432:	602b      	str	r3, [r5, #0]
 8005434:	e774      	b.n	8005320 <HAL_RCC_OscConfig+0x18>
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 8005436:	f7fe fd0f 	bl	8003e58 <HAL_GetTick>
 800543a:	1b80      	subs	r0, r0, r6
 800543c:	2802      	cmp	r0, #2
 800543e:	d9ef      	bls.n	8005420 <HAL_RCC_OscConfig+0x118>
 8005440:	e7a7      	b.n	8005392 <HAL_RCC_OscConfig+0x8a>
        __HAL_RCC_HSI_DISABLE();
 8005442:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 8005444:	f7fe fd08 	bl	8003e58 <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 8005448:	4d64      	ldr	r5, [pc, #400]	; (80055dc <HAL_RCC_OscConfig+0x2d4>)
        tickstart = HAL_GetTick();
 800544a:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 800544c:	682b      	ldr	r3, [r5, #0]
 800544e:	0799      	lsls	r1, r3, #30
 8005450:	f57f af66 	bpl.w	8005320 <HAL_RCC_OscConfig+0x18>
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 8005454:	f7fe fd00 	bl	8003e58 <HAL_GetTick>
 8005458:	1b80      	subs	r0, r0, r6
 800545a:	2802      	cmp	r0, #2
 800545c:	d9f6      	bls.n	800544c <HAL_RCC_OscConfig+0x144>
 800545e:	e798      	b.n	8005392 <HAL_RCC_OscConfig+0x8a>
    if((RCC_OscInitStruct->LSIState)!= RCC_LSI_OFF)
 8005460:	6962      	ldr	r2, [r4, #20]
 8005462:	4b60      	ldr	r3, [pc, #384]	; (80055e4 <HAL_RCC_OscConfig+0x2dc>)
 8005464:	b17a      	cbz	r2, 8005486 <HAL_RCC_OscConfig+0x17e>
      __HAL_RCC_LSI_ENABLE();
 8005466:	2201      	movs	r2, #1
 8005468:	601a      	str	r2, [r3, #0]
      tickstart = HAL_GetTick();
 800546a:	f7fe fcf5 	bl	8003e58 <HAL_GetTick>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 800546e:	4d5b      	ldr	r5, [pc, #364]	; (80055dc <HAL_RCC_OscConfig+0x2d4>)
      tickstart = HAL_GetTick();
 8005470:	4606      	mov	r6, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 8005472:	6f6b      	ldr	r3, [r5, #116]	; 0x74
 8005474:	079f      	lsls	r7, r3, #30
 8005476:	f53f af57 	bmi.w	8005328 <HAL_RCC_OscConfig+0x20>
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 800547a:	f7fe fced 	bl	8003e58 <HAL_GetTick>
 800547e:	1b80      	subs	r0, r0, r6
 8005480:	2802      	cmp	r0, #2
 8005482:	d9f6      	bls.n	8005472 <HAL_RCC_OscConfig+0x16a>
 8005484:	e785      	b.n	8005392 <HAL_RCC_OscConfig+0x8a>
      __HAL_RCC_LSI_DISABLE();
 8005486:	601a      	str	r2, [r3, #0]
      tickstart = HAL_GetTick();
 8005488:	f7fe fce6 	bl	8003e58 <HAL_GetTick>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 800548c:	4d53      	ldr	r5, [pc, #332]	; (80055dc <HAL_RCC_OscConfig+0x2d4>)
      tickstart = HAL_GetTick();
 800548e:	4606      	mov	r6, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 8005490:	6f6b      	ldr	r3, [r5, #116]	; 0x74
 8005492:	0798      	lsls	r0, r3, #30
 8005494:	f57f af48 	bpl.w	8005328 <HAL_RCC_OscConfig+0x20>
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 8005498:	f7fe fcde 	bl	8003e58 <HAL_GetTick>
 800549c:	1b80      	subs	r0, r0, r6
 800549e:	2802      	cmp	r0, #2
 80054a0:	d9f6      	bls.n	8005490 <HAL_RCC_OscConfig+0x188>
 80054a2:	e776      	b.n	8005392 <HAL_RCC_OscConfig+0x8a>
    if(__HAL_RCC_PWR_IS_CLK_DISABLED())
 80054a4:	4b4d      	ldr	r3, [pc, #308]	; (80055dc <HAL_RCC_OscConfig+0x2d4>)
 80054a6:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 80054a8:	f012 5280 	ands.w	r2, r2, #268435456	; 0x10000000
 80054ac:	d128      	bne.n	8005500 <HAL_RCC_OscConfig+0x1f8>
      __HAL_RCC_PWR_CLK_ENABLE();
 80054ae:	9201      	str	r2, [sp, #4]
 80054b0:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 80054b2:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 80054b6:	641a      	str	r2, [r3, #64]	; 0x40
 80054b8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80054ba:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80054be:	9301      	str	r3, [sp, #4]
 80054c0:	9b01      	ldr	r3, [sp, #4]
      pwrclkchanged = SET;
 80054c2:	2601      	movs	r6, #1
    if(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 80054c4:	4d48      	ldr	r5, [pc, #288]	; (80055e8 <HAL_RCC_OscConfig+0x2e0>)
 80054c6:	682b      	ldr	r3, [r5, #0]
 80054c8:	05d9      	lsls	r1, r3, #23
 80054ca:	d51b      	bpl.n	8005504 <HAL_RCC_OscConfig+0x1fc>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 80054cc:	68a3      	ldr	r3, [r4, #8]
 80054ce:	4d43      	ldr	r5, [pc, #268]	; (80055dc <HAL_RCC_OscConfig+0x2d4>)
 80054d0:	2b01      	cmp	r3, #1
 80054d2:	d127      	bne.n	8005524 <HAL_RCC_OscConfig+0x21c>
 80054d4:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 80054d6:	f043 0301 	orr.w	r3, r3, #1
 80054da:	672b      	str	r3, [r5, #112]	; 0x70
      tickstart = HAL_GetTick();
 80054dc:	f7fe fcbc 	bl	8003e58 <HAL_GetTick>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 80054e0:	4d3e      	ldr	r5, [pc, #248]	; (80055dc <HAL_RCC_OscConfig+0x2d4>)
      tickstart = HAL_GetTick();
 80054e2:	4607      	mov	r7, r0
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 80054e4:	f241 3888 	movw	r8, #5000	; 0x1388
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 80054e8:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 80054ea:	079b      	lsls	r3, r3, #30
 80054ec:	d539      	bpl.n	8005562 <HAL_RCC_OscConfig+0x25a>
    if(pwrclkchanged == SET)
 80054ee:	2e00      	cmp	r6, #0
 80054f0:	f43f af1e 	beq.w	8005330 <HAL_RCC_OscConfig+0x28>
      __HAL_RCC_PWR_CLK_DISABLE();
 80054f4:	4a39      	ldr	r2, [pc, #228]	; (80055dc <HAL_RCC_OscConfig+0x2d4>)
 80054f6:	6c13      	ldr	r3, [r2, #64]	; 0x40
 80054f8:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 80054fc:	6413      	str	r3, [r2, #64]	; 0x40
 80054fe:	e717      	b.n	8005330 <HAL_RCC_OscConfig+0x28>
    FlagStatus       pwrclkchanged = RESET;
 8005500:	2600      	movs	r6, #0
 8005502:	e7df      	b.n	80054c4 <HAL_RCC_OscConfig+0x1bc>
      SET_BIT(PWR->CR, PWR_CR_DBP);
 8005504:	682b      	ldr	r3, [r5, #0]
 8005506:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800550a:	602b      	str	r3, [r5, #0]
      tickstart = HAL_GetTick();
 800550c:	f7fe fca4 	bl	8003e58 <HAL_GetTick>
 8005510:	4607      	mov	r7, r0
      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 8005512:	682b      	ldr	r3, [r5, #0]
 8005514:	05da      	lsls	r2, r3, #23
 8005516:	d4d9      	bmi.n	80054cc <HAL_RCC_OscConfig+0x1c4>
        if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 8005518:	f7fe fc9e 	bl	8003e58 <HAL_GetTick>
 800551c:	1bc0      	subs	r0, r0, r7
 800551e:	2802      	cmp	r0, #2
 8005520:	d9f7      	bls.n	8005512 <HAL_RCC_OscConfig+0x20a>
 8005522:	e736      	b.n	8005392 <HAL_RCC_OscConfig+0x8a>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 8005524:	2b05      	cmp	r3, #5
 8005526:	d104      	bne.n	8005532 <HAL_RCC_OscConfig+0x22a>
 8005528:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 800552a:	f043 0304 	orr.w	r3, r3, #4
 800552e:	672b      	str	r3, [r5, #112]	; 0x70
 8005530:	e7d0      	b.n	80054d4 <HAL_RCC_OscConfig+0x1cc>
 8005532:	6f2a      	ldr	r2, [r5, #112]	; 0x70
 8005534:	f022 0201 	bic.w	r2, r2, #1
 8005538:	672a      	str	r2, [r5, #112]	; 0x70
 800553a:	6f2a      	ldr	r2, [r5, #112]	; 0x70
 800553c:	f022 0204 	bic.w	r2, r2, #4
 8005540:	672a      	str	r2, [r5, #112]	; 0x70
    if((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
 8005542:	2b00      	cmp	r3, #0
 8005544:	d1ca      	bne.n	80054dc <HAL_RCC_OscConfig+0x1d4>
      tickstart = HAL_GetTick();
 8005546:	f7fe fc87 	bl	8003e58 <HAL_GetTick>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800554a:	f241 3888 	movw	r8, #5000	; 0x1388
      tickstart = HAL_GetTick();
 800554e:	4607      	mov	r7, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 8005550:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 8005552:	0798      	lsls	r0, r3, #30
 8005554:	d5cb      	bpl.n	80054ee <HAL_RCC_OscConfig+0x1e6>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8005556:	f7fe fc7f 	bl	8003e58 <HAL_GetTick>
 800555a:	1bc0      	subs	r0, r0, r7
 800555c:	4540      	cmp	r0, r8
 800555e:	d9f7      	bls.n	8005550 <HAL_RCC_OscConfig+0x248>
 8005560:	e717      	b.n	8005392 <HAL_RCC_OscConfig+0x8a>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8005562:	f7fe fc79 	bl	8003e58 <HAL_GetTick>
 8005566:	1bc0      	subs	r0, r0, r7
 8005568:	4540      	cmp	r0, r8
 800556a:	d9bd      	bls.n	80054e8 <HAL_RCC_OscConfig+0x1e0>
 800556c:	e711      	b.n	8005392 <HAL_RCC_OscConfig+0x8a>
    if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL)
 800556e:	4d1b      	ldr	r5, [pc, #108]	; (80055dc <HAL_RCC_OscConfig+0x2d4>)
 8005570:	68ab      	ldr	r3, [r5, #8]
 8005572:	f003 030c 	and.w	r3, r3, #12
 8005576:	2b08      	cmp	r3, #8
 8005578:	d047      	beq.n	800560a <HAL_RCC_OscConfig+0x302>
 800557a:	4e1c      	ldr	r6, [pc, #112]	; (80055ec <HAL_RCC_OscConfig+0x2e4>)
 800557c:	2300      	movs	r3, #0
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 800557e:	2802      	cmp	r0, #2
        __HAL_RCC_PLL_DISABLE();
 8005580:	6033      	str	r3, [r6, #0]
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 8005582:	d135      	bne.n	80055f0 <HAL_RCC_OscConfig+0x2e8>
        tickstart = HAL_GetTick();
 8005584:	f7fe fc68 	bl	8003e58 <HAL_GetTick>
 8005588:	4607      	mov	r7, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 800558a:	682b      	ldr	r3, [r5, #0]
 800558c:	0199      	lsls	r1, r3, #6
 800558e:	d41e      	bmi.n	80055ce <HAL_RCC_OscConfig+0x2c6>
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 8005590:	e9d4 3207 	ldrd	r3, r2, [r4, #28]
 8005594:	4313      	orrs	r3, r2
 8005596:	6a62      	ldr	r2, [r4, #36]	; 0x24
 8005598:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 800559c:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800559e:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 80055a2:	6aa2      	ldr	r2, [r4, #40]	; 0x28
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 80055a4:	4c0d      	ldr	r4, [pc, #52]	; (80055dc <HAL_RCC_OscConfig+0x2d4>)
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 80055a6:	0852      	lsrs	r2, r2, #1
 80055a8:	3a01      	subs	r2, #1
 80055aa:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 80055ae:	606b      	str	r3, [r5, #4]
        __HAL_RCC_PLL_ENABLE();
 80055b0:	2301      	movs	r3, #1
 80055b2:	6033      	str	r3, [r6, #0]
        tickstart = HAL_GetTick();
 80055b4:	f7fe fc50 	bl	8003e58 <HAL_GetTick>
 80055b8:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 80055ba:	6823      	ldr	r3, [r4, #0]
 80055bc:	019a      	lsls	r2, r3, #6
 80055be:	f53f aebb 	bmi.w	8005338 <HAL_RCC_OscConfig+0x30>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 80055c2:	f7fe fc49 	bl	8003e58 <HAL_GetTick>
 80055c6:	1b40      	subs	r0, r0, r5
 80055c8:	2802      	cmp	r0, #2
 80055ca:	d9f6      	bls.n	80055ba <HAL_RCC_OscConfig+0x2b2>
 80055cc:	e6e1      	b.n	8005392 <HAL_RCC_OscConfig+0x8a>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 80055ce:	f7fe fc43 	bl	8003e58 <HAL_GetTick>
 80055d2:	1bc0      	subs	r0, r0, r7
 80055d4:	2802      	cmp	r0, #2
 80055d6:	d9d8      	bls.n	800558a <HAL_RCC_OscConfig+0x282>
 80055d8:	e6db      	b.n	8005392 <HAL_RCC_OscConfig+0x8a>
 80055da:	bf00      	nop
 80055dc:	40023800 	.word	0x40023800
 80055e0:	42470000 	.word	0x42470000
 80055e4:	42470e80 	.word	0x42470e80
 80055e8:	40007000 	.word	0x40007000
 80055ec:	42470060 	.word	0x42470060
        tickstart = HAL_GetTick();
 80055f0:	f7fe fc32 	bl	8003e58 <HAL_GetTick>
 80055f4:	4604      	mov	r4, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 80055f6:	682b      	ldr	r3, [r5, #0]
 80055f8:	019b      	lsls	r3, r3, #6
 80055fa:	f57f ae9d 	bpl.w	8005338 <HAL_RCC_OscConfig+0x30>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 80055fe:	f7fe fc2b 	bl	8003e58 <HAL_GetTick>
 8005602:	1b00      	subs	r0, r0, r4
 8005604:	2802      	cmp	r0, #2
 8005606:	d9f6      	bls.n	80055f6 <HAL_RCC_OscConfig+0x2ee>
 8005608:	e6c3      	b.n	8005392 <HAL_RCC_OscConfig+0x8a>
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
 800560a:	2801      	cmp	r0, #1
 800560c:	f43f aec2 	beq.w	8005394 <HAL_RCC_OscConfig+0x8c>
        pll_config = RCC->PLLCFGR;
 8005610:	6868      	ldr	r0, [r5, #4]
        if((READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 8005612:	69e3      	ldr	r3, [r4, #28]
 8005614:	f400 0280 	and.w	r2, r0, #4194304	; 0x400000
 8005618:	429a      	cmp	r2, r3
 800561a:	f47f ae79 	bne.w	8005310 <HAL_RCC_OscConfig+0x8>
 800561e:	6a22      	ldr	r2, [r4, #32]
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != RCC_OscInitStruct->PLL.PLLM) ||
 8005620:	f000 033f 	and.w	r3, r0, #63	; 0x3f
        if((READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 8005624:	4293      	cmp	r3, r2
 8005626:	f47f ae73 	bne.w	8005310 <HAL_RCC_OscConfig+0x8>
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != RCC_OscInitStruct->PLL.PLLM) ||
 800562a:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800562c:	f647 73c0 	movw	r3, #32704	; 0x7fc0
 8005630:	4003      	ands	r3, r0
 8005632:	4293      	cmp	r3, r2
 8005634:	f47f ae6c 	bne.w	8005310 <HAL_RCC_OscConfig+0x8>
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != RCC_OscInitStruct->PLL.PLLN) ||
 8005638:	6aa2      	ldr	r2, [r4, #40]	; 0x28
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != RCC_OscInitStruct->PLL.PLLP) ||
 800563a:	f400 3340 	and.w	r3, r0, #196608	; 0x30000
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != RCC_OscInitStruct->PLL.PLLN) ||
 800563e:	4293      	cmp	r3, r2
 8005640:	f47f ae66 	bne.w	8005310 <HAL_RCC_OscConfig+0x8>
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != RCC_OscInitStruct->PLL.PLLP) ||
 8005644:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != RCC_OscInitStruct->PLL.PLLQ))
 8005646:	f000 6070 	and.w	r0, r0, #251658240	; 0xf000000
    return HAL_ERROR;
 800564a:	1ac0      	subs	r0, r0, r3
 800564c:	bf18      	it	ne
 800564e:	2001      	movne	r0, #1
 8005650:	e6a0      	b.n	8005394 <HAL_RCC_OscConfig+0x8c>
 8005652:	bf00      	nop

08005654 <HAL_RCC_GetSysClockFreq>:
{
  uint32_t pllm = 0U, pllvco = 0U, pllp = 0U;
  uint32_t sysclockfreq = 0U;

  /* Get SYSCLK source -------------------------------------------------------*/
  switch (RCC->CFGR & RCC_CFGR_SWS)
 8005654:	4913      	ldr	r1, [pc, #76]	; (80056a4 <HAL_RCC_GetSysClockFreq+0x50>)
{
 8005656:	b508      	push	{r3, lr}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 8005658:	688b      	ldr	r3, [r1, #8]
 800565a:	f003 030c 	and.w	r3, r3, #12
 800565e:	2b04      	cmp	r3, #4
 8005660:	d003      	beq.n	800566a <HAL_RCC_GetSysClockFreq+0x16>
 8005662:	2b08      	cmp	r3, #8
 8005664:	d003      	beq.n	800566e <HAL_RCC_GetSysClockFreq+0x1a>
  {
    case RCC_CFGR_SWS_HSI:  /* HSI used as system clock source */
    {
      sysclockfreq = HSI_VALUE;
 8005666:	4810      	ldr	r0, [pc, #64]	; (80056a8 <HAL_RCC_GetSysClockFreq+0x54>)
    {
      sysclockfreq = HSI_VALUE;
      break;
    }
  }
  return sysclockfreq;
 8005668:	e000      	b.n	800566c <HAL_RCC_GetSysClockFreq+0x18>
      sysclockfreq = HSE_VALUE;
 800566a:	4810      	ldr	r0, [pc, #64]	; (80056ac <HAL_RCC_GetSysClockFreq+0x58>)
}
 800566c:	bd08      	pop	{r3, pc}
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 800566e:	684a      	ldr	r2, [r1, #4]
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 8005670:	684b      	ldr	r3, [r1, #4]
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8005672:	6849      	ldr	r1, [r1, #4]
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 8005674:	f413 0380 	ands.w	r3, r3, #4194304	; 0x400000
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8005678:	bf14      	ite	ne
 800567a:	480c      	ldrne	r0, [pc, #48]	; (80056ac <HAL_RCC_GetSysClockFreq+0x58>)
        pllvco = (uint32_t) ((((uint64_t) HSI_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800567c:	480a      	ldreq	r0, [pc, #40]	; (80056a8 <HAL_RCC_GetSysClockFreq+0x54>)
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800567e:	f3c1 1188 	ubfx	r1, r1, #6, #9
 8005682:	bf18      	it	ne
 8005684:	2300      	movne	r3, #0
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 8005686:	f002 023f 	and.w	r2, r2, #63	; 0x3f
        pllvco = (uint32_t) ((((uint64_t) HSI_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800568a:	fba1 0100 	umull	r0, r1, r1, r0
 800568e:	f7fb f9f5 	bl	8000a7c <__aeabi_uldivmod>
      pllp = ((((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >> RCC_PLLCFGR_PLLP_Pos) + 1U) *2U);
 8005692:	4b04      	ldr	r3, [pc, #16]	; (80056a4 <HAL_RCC_GetSysClockFreq+0x50>)
 8005694:	685b      	ldr	r3, [r3, #4]
 8005696:	f3c3 4301 	ubfx	r3, r3, #16, #2
 800569a:	3301      	adds	r3, #1
 800569c:	005b      	lsls	r3, r3, #1
      sysclockfreq = pllvco/pllp;
 800569e:	fbb0 f0f3 	udiv	r0, r0, r3
 80056a2:	e7e3      	b.n	800566c <HAL_RCC_GetSysClockFreq+0x18>
 80056a4:	40023800 	.word	0x40023800
 80056a8:	00f42400 	.word	0x00f42400
 80056ac:	007a1200 	.word	0x007a1200

080056b0 <HAL_RCC_ClockConfig>:
{
 80056b0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80056b4:	460d      	mov	r5, r1
  if(RCC_ClkInitStruct == NULL)
 80056b6:	4604      	mov	r4, r0
 80056b8:	b910      	cbnz	r0, 80056c0 <HAL_RCC_ClockConfig+0x10>
    return HAL_ERROR;
 80056ba:	2001      	movs	r0, #1
}
 80056bc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if(FLatency > __HAL_FLASH_GET_LATENCY())
 80056c0:	4b43      	ldr	r3, [pc, #268]	; (80057d0 <HAL_RCC_ClockConfig+0x120>)
 80056c2:	681a      	ldr	r2, [r3, #0]
 80056c4:	f002 020f 	and.w	r2, r2, #15
 80056c8:	428a      	cmp	r2, r1
 80056ca:	d328      	bcc.n	800571e <HAL_RCC_ClockConfig+0x6e>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 80056cc:	6821      	ldr	r1, [r4, #0]
 80056ce:	078f      	lsls	r7, r1, #30
 80056d0:	d42d      	bmi.n	800572e <HAL_RCC_ClockConfig+0x7e>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 80056d2:	07c8      	lsls	r0, r1, #31
 80056d4:	d440      	bmi.n	8005758 <HAL_RCC_ClockConfig+0xa8>
  if(FLatency < __HAL_FLASH_GET_LATENCY())
 80056d6:	4b3e      	ldr	r3, [pc, #248]	; (80057d0 <HAL_RCC_ClockConfig+0x120>)
 80056d8:	681a      	ldr	r2, [r3, #0]
 80056da:	f002 020f 	and.w	r2, r2, #15
 80056de:	42aa      	cmp	r2, r5
 80056e0:	d865      	bhi.n	80057ae <HAL_RCC_ClockConfig+0xfe>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 80056e2:	6822      	ldr	r2, [r4, #0]
 80056e4:	0751      	lsls	r1, r2, #29
 80056e6:	d46b      	bmi.n	80057c0 <HAL_RCC_ClockConfig+0x110>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 80056e8:	0713      	lsls	r3, r2, #28
 80056ea:	d507      	bpl.n	80056fc <HAL_RCC_ClockConfig+0x4c>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3U));
 80056ec:	4a39      	ldr	r2, [pc, #228]	; (80057d4 <HAL_RCC_ClockConfig+0x124>)
 80056ee:	6921      	ldr	r1, [r4, #16]
 80056f0:	6893      	ldr	r3, [r2, #8]
 80056f2:	f423 4360 	bic.w	r3, r3, #57344	; 0xe000
 80056f6:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
 80056fa:	6093      	str	r3, [r2, #8]
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_Pos];
 80056fc:	f7ff ffaa 	bl	8005654 <HAL_RCC_GetSysClockFreq>
 8005700:	4b34      	ldr	r3, [pc, #208]	; (80057d4 <HAL_RCC_ClockConfig+0x124>)
 8005702:	4a35      	ldr	r2, [pc, #212]	; (80057d8 <HAL_RCC_ClockConfig+0x128>)
 8005704:	689b      	ldr	r3, [r3, #8]
 8005706:	f3c3 1303 	ubfx	r3, r3, #4, #4
 800570a:	5cd3      	ldrb	r3, [r2, r3]
 800570c:	40d8      	lsrs	r0, r3
 800570e:	4b33      	ldr	r3, [pc, #204]	; (80057dc <HAL_RCC_ClockConfig+0x12c>)
 8005710:	6018      	str	r0, [r3, #0]
  HAL_InitTick (uwTickPrio);
 8005712:	4b33      	ldr	r3, [pc, #204]	; (80057e0 <HAL_RCC_ClockConfig+0x130>)
 8005714:	6818      	ldr	r0, [r3, #0]
 8005716:	f7fd f8b1 	bl	800287c <HAL_InitTick>
  return HAL_OK;
 800571a:	2000      	movs	r0, #0
 800571c:	e7ce      	b.n	80056bc <HAL_RCC_ClockConfig+0xc>
    __HAL_FLASH_SET_LATENCY(FLatency);
 800571e:	b2ca      	uxtb	r2, r1
 8005720:	701a      	strb	r2, [r3, #0]
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 8005722:	681b      	ldr	r3, [r3, #0]
 8005724:	f003 030f 	and.w	r3, r3, #15
 8005728:	428b      	cmp	r3, r1
 800572a:	d1c6      	bne.n	80056ba <HAL_RCC_ClockConfig+0xa>
 800572c:	e7ce      	b.n	80056cc <HAL_RCC_ClockConfig+0x1c>
 800572e:	4b29      	ldr	r3, [pc, #164]	; (80057d4 <HAL_RCC_ClockConfig+0x124>)
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 8005730:	f011 0f04 	tst.w	r1, #4
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_HCLK_DIV16);
 8005734:	bf1e      	ittt	ne
 8005736:	689a      	ldrne	r2, [r3, #8]
 8005738:	f442 52e0 	orrne.w	r2, r2, #7168	; 0x1c00
 800573c:	609a      	strne	r2, [r3, #8]
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 800573e:	070e      	lsls	r6, r1, #28
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, (RCC_HCLK_DIV16 << 3));
 8005740:	bf42      	ittt	mi
 8005742:	689a      	ldrmi	r2, [r3, #8]
 8005744:	f442 4260 	orrmi.w	r2, r2, #57344	; 0xe000
 8005748:	609a      	strmi	r2, [r3, #8]
    MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 800574a:	689a      	ldr	r2, [r3, #8]
 800574c:	68a0      	ldr	r0, [r4, #8]
 800574e:	f022 02f0 	bic.w	r2, r2, #240	; 0xf0
 8005752:	4302      	orrs	r2, r0
 8005754:	609a      	str	r2, [r3, #8]
 8005756:	e7bc      	b.n	80056d2 <HAL_RCC_ClockConfig+0x22>
    if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 8005758:	6862      	ldr	r2, [r4, #4]
 800575a:	4b1e      	ldr	r3, [pc, #120]	; (80057d4 <HAL_RCC_ClockConfig+0x124>)
 800575c:	2a01      	cmp	r2, #1
 800575e:	d11c      	bne.n	800579a <HAL_RCC_ClockConfig+0xea>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8005760:	681b      	ldr	r3, [r3, #0]
 8005762:	f413 3f00 	tst.w	r3, #131072	; 0x20000
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8005766:	d0a8      	beq.n	80056ba <HAL_RCC_ClockConfig+0xa>
    __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 8005768:	4e1a      	ldr	r6, [pc, #104]	; (80057d4 <HAL_RCC_ClockConfig+0x124>)
 800576a:	68b3      	ldr	r3, [r6, #8]
 800576c:	f023 0303 	bic.w	r3, r3, #3
 8005770:	4313      	orrs	r3, r2
 8005772:	60b3      	str	r3, [r6, #8]
    tickstart = HAL_GetTick();
 8005774:	f7fe fb70 	bl	8003e58 <HAL_GetTick>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 8005778:	f241 3888 	movw	r8, #5000	; 0x1388
    tickstart = HAL_GetTick();
 800577c:	4607      	mov	r7, r0
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 800577e:	68b3      	ldr	r3, [r6, #8]
 8005780:	6862      	ldr	r2, [r4, #4]
 8005782:	f003 030c 	and.w	r3, r3, #12
 8005786:	ebb3 0f82 	cmp.w	r3, r2, lsl #2
 800578a:	d0a4      	beq.n	80056d6 <HAL_RCC_ClockConfig+0x26>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 800578c:	f7fe fb64 	bl	8003e58 <HAL_GetTick>
 8005790:	1bc0      	subs	r0, r0, r7
 8005792:	4540      	cmp	r0, r8
 8005794:	d9f3      	bls.n	800577e <HAL_RCC_ClockConfig+0xce>
        return HAL_TIMEOUT;
 8005796:	2003      	movs	r0, #3
 8005798:	e790      	b.n	80056bc <HAL_RCC_ClockConfig+0xc>
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 800579a:	1e91      	subs	r1, r2, #2
 800579c:	2901      	cmp	r1, #1
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800579e:	681b      	ldr	r3, [r3, #0]
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 80057a0:	d802      	bhi.n	80057a8 <HAL_RCC_ClockConfig+0xf8>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 80057a2:	f013 7f00 	tst.w	r3, #33554432	; 0x2000000
 80057a6:	e7de      	b.n	8005766 <HAL_RCC_ClockConfig+0xb6>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 80057a8:	f013 0f02 	tst.w	r3, #2
 80057ac:	e7db      	b.n	8005766 <HAL_RCC_ClockConfig+0xb6>
    __HAL_FLASH_SET_LATENCY(FLatency);
 80057ae:	b2ea      	uxtb	r2, r5
 80057b0:	701a      	strb	r2, [r3, #0]
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 80057b2:	681b      	ldr	r3, [r3, #0]
 80057b4:	f003 030f 	and.w	r3, r3, #15
 80057b8:	42ab      	cmp	r3, r5
 80057ba:	f47f af7e 	bne.w	80056ba <HAL_RCC_ClockConfig+0xa>
 80057be:	e790      	b.n	80056e2 <HAL_RCC_ClockConfig+0x32>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 80057c0:	4904      	ldr	r1, [pc, #16]	; (80057d4 <HAL_RCC_ClockConfig+0x124>)
 80057c2:	68e0      	ldr	r0, [r4, #12]
 80057c4:	688b      	ldr	r3, [r1, #8]
 80057c6:	f423 53e0 	bic.w	r3, r3, #7168	; 0x1c00
 80057ca:	4303      	orrs	r3, r0
 80057cc:	608b      	str	r3, [r1, #8]
 80057ce:	e78b      	b.n	80056e8 <HAL_RCC_ClockConfig+0x38>
 80057d0:	40023c00 	.word	0x40023c00
 80057d4:	40023800 	.word	0x40023800
 80057d8:	0801b3a4 	.word	0x0801b3a4
 80057dc:	20000084 	.word	0x20000084
 80057e0:	2000008c 	.word	0x2000008c

080057e4 <HAL_RCC_GetPCLK1Freq>:
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK1Freq(void)
{
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1)>> RCC_CFGR_PPRE1_Pos]);
 80057e4:	4b04      	ldr	r3, [pc, #16]	; (80057f8 <HAL_RCC_GetPCLK1Freq+0x14>)
 80057e6:	4a05      	ldr	r2, [pc, #20]	; (80057fc <HAL_RCC_GetPCLK1Freq+0x18>)
 80057e8:	689b      	ldr	r3, [r3, #8]
 80057ea:	f3c3 2382 	ubfx	r3, r3, #10, #3
 80057ee:	5cd3      	ldrb	r3, [r2, r3]
 80057f0:	4a03      	ldr	r2, [pc, #12]	; (8005800 <HAL_RCC_GetPCLK1Freq+0x1c>)
 80057f2:	6810      	ldr	r0, [r2, #0]
}
 80057f4:	40d8      	lsrs	r0, r3
 80057f6:	4770      	bx	lr
 80057f8:	40023800 	.word	0x40023800
 80057fc:	0801b3b4 	.word	0x0801b3b4
 8005800:	20000084 	.word	0x20000084

08005804 <HAL_RCC_GetClockConfig>:
  * @retval None
  */
void HAL_RCC_GetClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t *pFLatency)
{
  /* Set all possible values for the Clock type parameter --------------------*/
  RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2;
 8005804:	230f      	movs	r3, #15
 8005806:	6003      	str	r3, [r0, #0]

  /* Get the SYSCLK configuration --------------------------------------------*/
  RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
 8005808:	4b0b      	ldr	r3, [pc, #44]	; (8005838 <HAL_RCC_GetClockConfig+0x34>)
 800580a:	689a      	ldr	r2, [r3, #8]
 800580c:	f002 0203 	and.w	r2, r2, #3
 8005810:	6042      	str	r2, [r0, #4]

  /* Get the HCLK configuration ----------------------------------------------*/
  RCC_ClkInitStruct->AHBCLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_HPRE);
 8005812:	689a      	ldr	r2, [r3, #8]
 8005814:	f002 02f0 	and.w	r2, r2, #240	; 0xf0
 8005818:	6082      	str	r2, [r0, #8]

  /* Get the APB1 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB1CLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_PPRE1);
 800581a:	689a      	ldr	r2, [r3, #8]
 800581c:	f402 52e0 	and.w	r2, r2, #7168	; 0x1c00
 8005820:	60c2      	str	r2, [r0, #12]

  /* Get the APB2 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)((RCC->CFGR & RCC_CFGR_PPRE2) >> 3U);
 8005822:	689b      	ldr	r3, [r3, #8]
 8005824:	08db      	lsrs	r3, r3, #3
 8005826:	f403 53e0 	and.w	r3, r3, #7168	; 0x1c00
 800582a:	6103      	str	r3, [r0, #16]

  /* Get the Flash Wait State (Latency) configuration ------------------------*/
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
 800582c:	4b03      	ldr	r3, [pc, #12]	; (800583c <HAL_RCC_GetClockConfig+0x38>)
 800582e:	681b      	ldr	r3, [r3, #0]
 8005830:	f003 030f 	and.w	r3, r3, #15
 8005834:	600b      	str	r3, [r1, #0]
}
 8005836:	4770      	bx	lr
 8005838:	40023800 	.word	0x40023800
 800583c:	40023c00 	.word	0x40023c00

08005840 <HAL_RCCEx_PeriphCLKConfig>:
  /*----------------------- SAI/I2S Configuration (PLLI2S) -------------------*/
  /*----------------------- Common configuration SAI/I2S ---------------------*/
  /* In Case of SAI or I2S Clock Configuration through PLLI2S, PLLI2SN division
     factor is common parameters for both peripherals */
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
     (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLI2S) == RCC_PERIPHCLK_SAI_PLLI2S) ||
 8005840:	6803      	ldr	r3, [r0, #0]
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
 8005842:	f013 0f43 	tst.w	r3, #67	; 0x43
{
 8005846:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8005848:	4604      	mov	r4, r0
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
 800584a:	f040 808a 	bne.w	8005962 <HAL_RCCEx_PeriphCLKConfig+0x122>

  /*----------------------- SAI/LTDC Configuration (PLLSAI) ------------------*/
  /*----------------------- Common configuration SAI/LTDC --------------------*/
  /* In Case of SAI or LTDC Clock Configuration through PLLSAI, PLLSAIN division
     factor is common parameters for both peripherals */
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == RCC_PERIPHCLK_SAI_PLLSAI) ||
 800584e:	6823      	ldr	r3, [r4, #0]
 8005850:	f013 0f0c 	tst.w	r3, #12
 8005854:	d044      	beq.n	80058e0 <HAL_RCCEx_PeriphCLKConfig+0xa0>
  {
    /* Check the PLLSAI division factors */
    assert_param(IS_RCC_PLLSAIN_VALUE(PeriphClkInit->PLLSAI.PLLSAIN));

    /* Disable PLLSAI Clock */
    __HAL_RCC_PLLSAI_DISABLE();
 8005856:	4d89      	ldr	r5, [pc, #548]	; (8005a7c <HAL_RCCEx_PeriphCLKConfig+0x23c>)
    /* Get tick */
    tickstart = HAL_GetTick();
    /* Wait till PLLSAI is disabled */
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 8005858:	4e89      	ldr	r6, [pc, #548]	; (8005a80 <HAL_RCCEx_PeriphCLKConfig+0x240>)
    __HAL_RCC_PLLSAI_DISABLE();
 800585a:	2300      	movs	r3, #0
 800585c:	602b      	str	r3, [r5, #0]
    tickstart = HAL_GetTick();
 800585e:	f7fe fafb 	bl	8003e58 <HAL_GetTick>
 8005862:	4607      	mov	r7, r0
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 8005864:	6833      	ldr	r3, [r6, #0]
 8005866:	009b      	lsls	r3, r3, #2
 8005868:	f100 80cc 	bmi.w	8005a04 <HAL_RCCEx_PeriphCLKConfig+0x1c4>
    }

    /*---------------------------- SAI configuration -------------------------*/
    /* In Case of SAI Clock Configuration through PLLSAI, PLLSAIQ and PLLSAI_DIVQ must
       be added only for SAI configuration */
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == (RCC_PERIPHCLK_SAI_PLLSAI))
 800586c:	6821      	ldr	r1, [r4, #0]
 800586e:	074f      	lsls	r7, r1, #29
 8005870:	d515      	bpl.n	800589e <HAL_RCCEx_PeriphCLKConfig+0x5e>
      /* Read PLLSAIR value from PLLSAICFGR register (this value is not need for SAI configuration) */
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIR) >> RCC_PLLSAICFGR_PLLSAIR_Pos);
      /* PLLSAI_VCO Input  = PLL_SOURCE/PLLM */
      /* PLLSAI_VCO Output = PLLSAI_VCO Input * PLLSAIN */
      /* SAI_CLK(first level) = PLLSAI_VCO Output/PLLSAIQ */
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , PeriphClkInit->PLLSAI.PLLSAIQ, tmpreg1);
 8005872:	e9d4 0304 	ldrd	r0, r3, [r4, #16]
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIR) >> RCC_PLLSAICFGR_PLLSAIR_Pos);
 8005876:	f8d6 2088 	ldr.w	r2, [r6, #136]	; 0x88
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , PeriphClkInit->PLLSAI.PLLSAIQ, tmpreg1);
 800587a:	061b      	lsls	r3, r3, #24
 800587c:	f002 42e0 	and.w	r2, r2, #1879048192	; 0x70000000
 8005880:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 8005884:	4313      	orrs	r3, r2
 8005886:	f8c6 3088 	str.w	r3, [r6, #136]	; 0x88
      /* SAI_CLK_x = SAI_CLK(first level)/PLLSAIDIVQ */
      __HAL_RCC_PLLSAI_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLSAIDivQ);
 800588a:	f8d6 308c 	ldr.w	r3, [r6, #140]	; 0x8c
 800588e:	6a22      	ldr	r2, [r4, #32]
 8005890:	f423 53f8 	bic.w	r3, r3, #7936	; 0x1f00
 8005894:	3a01      	subs	r2, #1
 8005896:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 800589a:	f8c6 308c 	str.w	r3, [r6, #140]	; 0x8c
    }

    /*---------------------------- LTDC configuration ------------------------*/
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == (RCC_PERIPHCLK_LTDC))
 800589e:	070e      	lsls	r6, r1, #28
 80058a0:	d514      	bpl.n	80058cc <HAL_RCCEx_PeriphCLKConfig+0x8c>
    {
      assert_param(IS_RCC_PLLSAIR_VALUE(PeriphClkInit->PLLSAI.PLLSAIR));
      assert_param(IS_RCC_PLLSAI_DIVR_VALUE(PeriphClkInit->PLLSAIDivR));

      /* Read PLLSAIR value from PLLSAICFGR register (this value is not need for SAI configuration) */
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 80058a2:	4a77      	ldr	r2, [pc, #476]	; (8005a80 <HAL_RCCEx_PeriphCLKConfig+0x240>)
      /* PLLSAI_VCO Input  = PLL_SOURCE/PLLM */
      /* PLLSAI_VCO Output = PLLSAI_VCO Input * PLLSAIN */
      /* LTDC_CLK(first level) = PLLSAI_VCO Output/PLLSAIR */
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , tmpreg1, PeriphClkInit->PLLSAI.PLLSAIR);
 80058a4:	69a3      	ldr	r3, [r4, #24]
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 80058a6:	f8d2 1088 	ldr.w	r1, [r2, #136]	; 0x88
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , tmpreg1, PeriphClkInit->PLLSAI.PLLSAIR);
 80058aa:	6920      	ldr	r0, [r4, #16]
 80058ac:	071b      	lsls	r3, r3, #28
 80058ae:	f001 6170 	and.w	r1, r1, #251658240	; 0xf000000
 80058b2:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 80058b6:	430b      	orrs	r3, r1
 80058b8:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
      /* LTDC_CLK = LTDC_CLK(first level)/PLLSAIDIVR */
      __HAL_RCC_PLLSAI_PLLSAICLKDIVR_CONFIG(PeriphClkInit->PLLSAIDivR);
 80058bc:	f8d2 308c 	ldr.w	r3, [r2, #140]	; 0x8c
 80058c0:	6a61      	ldr	r1, [r4, #36]	; 0x24
 80058c2:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 80058c6:	430b      	orrs	r3, r1
 80058c8:	f8c2 308c 	str.w	r3, [r2, #140]	; 0x8c
    }
    /* Enable PLLSAI Clock */
    __HAL_RCC_PLLSAI_ENABLE();
 80058cc:	2301      	movs	r3, #1
 80058ce:	602b      	str	r3, [r5, #0]
    /* Get tick */
    tickstart = HAL_GetTick();
 80058d0:	f7fe fac2 	bl	8003e58 <HAL_GetTick>
    /* Wait till PLLSAI is ready */
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 80058d4:	4d6a      	ldr	r5, [pc, #424]	; (8005a80 <HAL_RCCEx_PeriphCLKConfig+0x240>)
    tickstart = HAL_GetTick();
 80058d6:	4606      	mov	r6, r0
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 80058d8:	682b      	ldr	r3, [r5, #0]
 80058da:	0098      	lsls	r0, r3, #2
 80058dc:	f140 8099 	bpl.w	8005a12 <HAL_RCCEx_PeriphCLKConfig+0x1d2>
    }
  }
  /*--------------------------------------------------------------------------*/

  /*---------------------------- RTC configuration ---------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == (RCC_PERIPHCLK_RTC))
 80058e0:	6823      	ldr	r3, [r4, #0]
 80058e2:	069a      	lsls	r2, r3, #26
 80058e4:	d533      	bpl.n	800594e <HAL_RCCEx_PeriphCLKConfig+0x10e>
  {
    /* Check for RTC Parameters used to output RTCCLK */
    assert_param(IS_RCC_RTCCLKSOURCE(PeriphClkInit->RTCClockSelection));

    /* Enable Power Clock*/
    __HAL_RCC_PWR_CLK_ENABLE();
 80058e6:	2300      	movs	r3, #0
 80058e8:	9301      	str	r3, [sp, #4]
 80058ea:	4b65      	ldr	r3, [pc, #404]	; (8005a80 <HAL_RCCEx_PeriphCLKConfig+0x240>)

    /* Enable write access to Backup domain */
    PWR->CR |= PWR_CR_DBP;
 80058ec:	4d65      	ldr	r5, [pc, #404]	; (8005a84 <HAL_RCCEx_PeriphCLKConfig+0x244>)
    __HAL_RCC_PWR_CLK_ENABLE();
 80058ee:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 80058f0:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 80058f4:	641a      	str	r2, [r3, #64]	; 0x40
 80058f6:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80058f8:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80058fc:	9301      	str	r3, [sp, #4]
 80058fe:	9b01      	ldr	r3, [sp, #4]
    PWR->CR |= PWR_CR_DBP;
 8005900:	682b      	ldr	r3, [r5, #0]
 8005902:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8005906:	602b      	str	r3, [r5, #0]

    /* Get tick */
    tickstart = HAL_GetTick();
 8005908:	f7fe faa6 	bl	8003e58 <HAL_GetTick>
 800590c:	4606      	mov	r6, r0

    while((PWR->CR & PWR_CR_DBP) == RESET)
 800590e:	682b      	ldr	r3, [r5, #0]
 8005910:	05d9      	lsls	r1, r3, #23
 8005912:	f140 8085 	bpl.w	8005a20 <HAL_RCCEx_PeriphCLKConfig+0x1e0>
      {
        return HAL_TIMEOUT;
      }
    }
    /* Reset the Backup domain only if the RTC Clock source selection is modified from reset value */
    tmpreg1 = (RCC->BDCR & RCC_BDCR_RTCSEL);
 8005916:	4d5a      	ldr	r5, [pc, #360]	; (8005a80 <HAL_RCCEx_PeriphCLKConfig+0x240>)
 8005918:	6f2b      	ldr	r3, [r5, #112]	; 0x70
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 800591a:	f413 7340 	ands.w	r3, r3, #768	; 0x300
 800591e:	f040 8086 	bne.w	8005a2e <HAL_RCCEx_PeriphCLKConfig+0x1ee>
            return HAL_TIMEOUT;
          }
        }
      }
    }
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 8005922:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 8005924:	f403 7240 	and.w	r2, r3, #768	; 0x300
 8005928:	f5b2 7f40 	cmp.w	r2, #768	; 0x300
 800592c:	4a54      	ldr	r2, [pc, #336]	; (8005a80 <HAL_RCCEx_PeriphCLKConfig+0x240>)
 800592e:	f040 80a0 	bne.w	8005a72 <HAL_RCCEx_PeriphCLKConfig+0x232>
 8005932:	6891      	ldr	r1, [r2, #8]
 8005934:	f023 4070 	bic.w	r0, r3, #4026531840	; 0xf0000000
 8005938:	f421 11f8 	bic.w	r1, r1, #2031616	; 0x1f0000
 800593c:	f420 7040 	bic.w	r0, r0, #768	; 0x300
 8005940:	4301      	orrs	r1, r0
 8005942:	6091      	str	r1, [r2, #8]
 8005944:	6f11      	ldr	r1, [r2, #112]	; 0x70
 8005946:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800594a:	430b      	orrs	r3, r1
 800594c:	6713      	str	r3, [r2, #112]	; 0x70
  }
  /*--------------------------------------------------------------------------*/

  /*---------------------------- TIM configuration ---------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == (RCC_PERIPHCLK_TIM))
 800594e:	6820      	ldr	r0, [r4, #0]
 8005950:	f010 0010 	ands.w	r0, r0, #16
  {
    __HAL_RCC_TIMCLKPRESCALER(PeriphClkInit->TIMPresSelection);
 8005954:	bf1f      	itttt	ne
 8005956:	4b4c      	ldrne	r3, [pc, #304]	; (8005a88 <HAL_RCCEx_PeriphCLKConfig+0x248>)
 8005958:	f894 202c 	ldrbne.w	r2, [r4, #44]	; 0x2c
 800595c:	601a      	strne	r2, [r3, #0]
  }
  return HAL_OK;
 800595e:	2000      	movne	r0, #0
 8005960:	e04e      	b.n	8005a00 <HAL_RCCEx_PeriphCLKConfig+0x1c0>
    __HAL_RCC_PLLI2S_DISABLE();
 8005962:	4d4a      	ldr	r5, [pc, #296]	; (8005a8c <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 8005964:	4e46      	ldr	r6, [pc, #280]	; (8005a80 <HAL_RCCEx_PeriphCLKConfig+0x240>)
    __HAL_RCC_PLLI2S_DISABLE();
 8005966:	2300      	movs	r3, #0
 8005968:	602b      	str	r3, [r5, #0]
    tickstart = HAL_GetTick();
 800596a:	f7fe fa75 	bl	8003e58 <HAL_GetTick>
 800596e:	4607      	mov	r7, r0
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 8005970:	6833      	ldr	r3, [r6, #0]
 8005972:	011b      	lsls	r3, r3, #4
 8005974:	d43e      	bmi.n	80059f4 <HAL_RCCEx_PeriphCLKConfig+0x1b4>
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == (RCC_PERIPHCLK_I2S))
 8005976:	6821      	ldr	r1, [r4, #0]
 8005978:	07cf      	lsls	r7, r1, #31
      __HAL_RCC_PLLI2S_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SR);
 800597a:	bf41      	itttt	mi
 800597c:	e9d4 2301 	ldrdmi	r2, r3, [r4, #4]
 8005980:	071b      	lslmi	r3, r3, #28
 8005982:	ea43 1382 	orrmi.w	r3, r3, r2, lsl #6
 8005986:	f8c6 3084 	strmi.w	r3, [r6, #132]	; 0x84
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLI2S) == (RCC_PERIPHCLK_SAI_PLLI2S))
 800598a:	078e      	lsls	r6, r1, #30
 800598c:	d515      	bpl.n	80059ba <HAL_RCCEx_PeriphCLKConfig+0x17a>
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 800598e:	4a3c      	ldr	r2, [pc, #240]	; (8005a80 <HAL_RCCEx_PeriphCLKConfig+0x240>)
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SQ , tmpreg1);
 8005990:	68e3      	ldr	r3, [r4, #12]
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 8005992:	f8d2 0084 	ldr.w	r0, [r2, #132]	; 0x84
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SQ , tmpreg1);
 8005996:	6866      	ldr	r6, [r4, #4]
 8005998:	061b      	lsls	r3, r3, #24
 800599a:	f000 40e0 	and.w	r0, r0, #1879048192	; 0x70000000
 800599e:	ea43 1386 	orr.w	r3, r3, r6, lsl #6
 80059a2:	4303      	orrs	r3, r0
 80059a4:	f8c2 3084 	str.w	r3, [r2, #132]	; 0x84
      __HAL_RCC_PLLI2S_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLI2SDivQ);
 80059a8:	f8d2 008c 	ldr.w	r0, [r2, #140]	; 0x8c
 80059ac:	69e3      	ldr	r3, [r4, #28]
 80059ae:	f020 001f 	bic.w	r0, r0, #31
 80059b2:	3b01      	subs	r3, #1
 80059b4:	4303      	orrs	r3, r0
 80059b6:	f8c2 308c 	str.w	r3, [r2, #140]	; 0x8c
    if((PeriphClkInit->PeriphClockSelection & RCC_PERIPHCLK_PLLI2S) == RCC_PERIPHCLK_PLLI2S)
 80059ba:	0648      	lsls	r0, r1, #25
 80059bc:	d50a      	bpl.n	80059d4 <HAL_RCCEx_PeriphCLKConfig+0x194>
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN, PeriphClkInit->PLLI2S.PLLI2SQ, PeriphClkInit->PLLI2S.PLLI2SR);
 80059be:	68e3      	ldr	r3, [r4, #12]
 80059c0:	6862      	ldr	r2, [r4, #4]
 80059c2:	061b      	lsls	r3, r3, #24
 80059c4:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 80059c8:	68a2      	ldr	r2, [r4, #8]
 80059ca:	ea43 7302 	orr.w	r3, r3, r2, lsl #28
 80059ce:	4a2c      	ldr	r2, [pc, #176]	; (8005a80 <HAL_RCCEx_PeriphCLKConfig+0x240>)
 80059d0:	f8c2 3084 	str.w	r3, [r2, #132]	; 0x84
    __HAL_RCC_PLLI2S_ENABLE();
 80059d4:	2301      	movs	r3, #1
 80059d6:	602b      	str	r3, [r5, #0]
    tickstart = HAL_GetTick();
 80059d8:	f7fe fa3e 	bl	8003e58 <HAL_GetTick>
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 80059dc:	4d28      	ldr	r5, [pc, #160]	; (8005a80 <HAL_RCCEx_PeriphCLKConfig+0x240>)
    tickstart = HAL_GetTick();
 80059de:	4606      	mov	r6, r0
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 80059e0:	682b      	ldr	r3, [r5, #0]
 80059e2:	0119      	lsls	r1, r3, #4
 80059e4:	f53f af33 	bmi.w	800584e <HAL_RCCEx_PeriphCLKConfig+0xe>
      if((HAL_GetTick() - tickstart ) > PLLI2S_TIMEOUT_VALUE)
 80059e8:	f7fe fa36 	bl	8003e58 <HAL_GetTick>
 80059ec:	1b80      	subs	r0, r0, r6
 80059ee:	2802      	cmp	r0, #2
 80059f0:	d9f6      	bls.n	80059e0 <HAL_RCCEx_PeriphCLKConfig+0x1a0>
 80059f2:	e004      	b.n	80059fe <HAL_RCCEx_PeriphCLKConfig+0x1be>
      if((HAL_GetTick() - tickstart ) > PLLI2S_TIMEOUT_VALUE)
 80059f4:	f7fe fa30 	bl	8003e58 <HAL_GetTick>
 80059f8:	1bc0      	subs	r0, r0, r7
 80059fa:	2802      	cmp	r0, #2
 80059fc:	d9b8      	bls.n	8005970 <HAL_RCCEx_PeriphCLKConfig+0x130>
        return HAL_TIMEOUT;
 80059fe:	2003      	movs	r0, #3
}
 8005a00:	b003      	add	sp, #12
 8005a02:	bdf0      	pop	{r4, r5, r6, r7, pc}
      if((HAL_GetTick() - tickstart ) > PLLSAI_TIMEOUT_VALUE)
 8005a04:	f7fe fa28 	bl	8003e58 <HAL_GetTick>
 8005a08:	1bc0      	subs	r0, r0, r7
 8005a0a:	2802      	cmp	r0, #2
 8005a0c:	f67f af2a 	bls.w	8005864 <HAL_RCCEx_PeriphCLKConfig+0x24>
 8005a10:	e7f5      	b.n	80059fe <HAL_RCCEx_PeriphCLKConfig+0x1be>
      if((HAL_GetTick() - tickstart ) > PLLSAI_TIMEOUT_VALUE)
 8005a12:	f7fe fa21 	bl	8003e58 <HAL_GetTick>
 8005a16:	1b80      	subs	r0, r0, r6
 8005a18:	2802      	cmp	r0, #2
 8005a1a:	f67f af5d 	bls.w	80058d8 <HAL_RCCEx_PeriphCLKConfig+0x98>
 8005a1e:	e7ee      	b.n	80059fe <HAL_RCCEx_PeriphCLKConfig+0x1be>
      if((HAL_GetTick() - tickstart ) > RCC_DBP_TIMEOUT_VALUE)
 8005a20:	f7fe fa1a 	bl	8003e58 <HAL_GetTick>
 8005a24:	1b80      	subs	r0, r0, r6
 8005a26:	2802      	cmp	r0, #2
 8005a28:	f67f af71 	bls.w	800590e <HAL_RCCEx_PeriphCLKConfig+0xce>
 8005a2c:	e7e7      	b.n	80059fe <HAL_RCCEx_PeriphCLKConfig+0x1be>
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 8005a2e:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 8005a30:	f402 7240 	and.w	r2, r2, #768	; 0x300
 8005a34:	4293      	cmp	r3, r2
 8005a36:	f43f af74 	beq.w	8005922 <HAL_RCCEx_PeriphCLKConfig+0xe2>
      tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 8005a3a:	6f2b      	ldr	r3, [r5, #112]	; 0x70
      __HAL_RCC_BACKUPRESET_FORCE();
 8005a3c:	4a14      	ldr	r2, [pc, #80]	; (8005a90 <HAL_RCCEx_PeriphCLKConfig+0x250>)
 8005a3e:	2101      	movs	r1, #1
 8005a40:	6011      	str	r1, [r2, #0]
      tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 8005a42:	f423 7340 	bic.w	r3, r3, #768	; 0x300
      __HAL_RCC_BACKUPRESET_RELEASE();
 8005a46:	2100      	movs	r1, #0
 8005a48:	6011      	str	r1, [r2, #0]
      RCC->BDCR = tmpreg1;
 8005a4a:	672b      	str	r3, [r5, #112]	; 0x70
      if(HAL_IS_BIT_SET(RCC->BDCR, RCC_BDCR_LSEON))
 8005a4c:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 8005a4e:	07da      	lsls	r2, r3, #31
 8005a50:	f57f af67 	bpl.w	8005922 <HAL_RCCEx_PeriphCLKConfig+0xe2>
        tickstart = HAL_GetTick();
 8005a54:	f7fe fa00 	bl	8003e58 <HAL_GetTick>
          if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8005a58:	f241 3788 	movw	r7, #5000	; 0x1388
        tickstart = HAL_GetTick();
 8005a5c:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8005a5e:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 8005a60:	079b      	lsls	r3, r3, #30
 8005a62:	f53f af5e 	bmi.w	8005922 <HAL_RCCEx_PeriphCLKConfig+0xe2>
          if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8005a66:	f7fe f9f7 	bl	8003e58 <HAL_GetTick>
 8005a6a:	1b80      	subs	r0, r0, r6
 8005a6c:	42b8      	cmp	r0, r7
 8005a6e:	d9f6      	bls.n	8005a5e <HAL_RCCEx_PeriphCLKConfig+0x21e>
 8005a70:	e7c5      	b.n	80059fe <HAL_RCCEx_PeriphCLKConfig+0x1be>
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 8005a72:	6891      	ldr	r1, [r2, #8]
 8005a74:	f421 11f8 	bic.w	r1, r1, #2031616	; 0x1f0000
 8005a78:	e763      	b.n	8005942 <HAL_RCCEx_PeriphCLKConfig+0x102>
 8005a7a:	bf00      	nop
 8005a7c:	42470070 	.word	0x42470070
 8005a80:	40023800 	.word	0x40023800
 8005a84:	40007000 	.word	0x40007000
 8005a88:	424711e0 	.word	0x424711e0
 8005a8c:	42470068 	.word	0x42470068
 8005a90:	42470e40 	.word	0x42470e40

08005a94 <HAL_SDRAM_Init>:
  *                the configuration information for SDRAM module.
  * @param  Timing Pointer to SDRAM control timing structure 
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_Init(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_TimingTypeDef *Timing)
{   
 8005a94:	b538      	push	{r3, r4, r5, lr}
 8005a96:	460d      	mov	r5, r1
  /* Check the SDRAM handle parameter */
  if(hsdram == NULL)
 8005a98:	4604      	mov	r4, r0
 8005a9a:	b1c8      	cbz	r0, 8005ad0 <HAL_SDRAM_Init+0x3c>
  {
    return HAL_ERROR;
  }
  
  if(hsdram->State == HAL_SDRAM_STATE_RESET)
 8005a9c:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 8005aa0:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8005aa4:	b91b      	cbnz	r3, 8005aae <HAL_SDRAM_Init+0x1a>
  {  
    /* Allocate lock resource and initialize it */
    hsdram->Lock = HAL_UNLOCKED;
 8005aa6:	f880 202d 	strb.w	r2, [r0, #45]	; 0x2d

    /* Init the low level hardware */
    hsdram->MspInitCallback(hsdram);
#else
    /* Initialize the low level hardware (MSP) */
    HAL_SDRAM_MspInit(hsdram);
 8005aaa:	f7fc fd39 	bl	8002520 <HAL_SDRAM_MspInit>
#endif
  }
  
  /* Initialize the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;
 8005aae:	2302      	movs	r3, #2
 8005ab0:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  
  /* Initialize SDRAM control Interface */
  FMC_SDRAM_Init(hsdram->Instance, &(hsdram->Init));
 8005ab4:	1d21      	adds	r1, r4, #4
 8005ab6:	6820      	ldr	r0, [r4, #0]
 8005ab8:	f000 ff6a 	bl	8006990 <FMC_SDRAM_Init>
  
  /* Initialize SDRAM timing Interface */
  FMC_SDRAM_Timing_Init(hsdram->Instance, Timing, hsdram->Init.SDBank); 
 8005abc:	6862      	ldr	r2, [r4, #4]
 8005abe:	6820      	ldr	r0, [r4, #0]
 8005ac0:	4629      	mov	r1, r5
 8005ac2:	f000 ff9b 	bl	80069fc <FMC_SDRAM_Timing_Init>
  
  /* Update the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_READY;
 8005ac6:	2301      	movs	r3, #1
 8005ac8:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  
  return HAL_OK;
 8005acc:	2000      	movs	r0, #0
}
 8005ace:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 8005ad0:	2001      	movs	r0, #1
 8005ad2:	e7fc      	b.n	8005ace <HAL_SDRAM_Init+0x3a>

08005ad4 <HAL_SDRAM_SendCommand>:
  * @param  Command SDRAM command structure
  * @param  Timeout Timeout duration
  * @retval HAL status
  */  
HAL_StatusTypeDef HAL_SDRAM_SendCommand(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_CommandTypeDef *Command, uint32_t Timeout)
{
 8005ad4:	b538      	push	{r3, r4, r5, lr}
 8005ad6:	4604      	mov	r4, r0
  /* Check the SDRAM controller state */
  if(hsdram->State == HAL_SDRAM_STATE_BUSY)
 8005ad8:	f890 002c 	ldrb.w	r0, [r0, #44]	; 0x2c
 8005adc:	b2c0      	uxtb	r0, r0
 8005ade:	2802      	cmp	r0, #2
{
 8005ae0:	460d      	mov	r5, r1
  if(hsdram->State == HAL_SDRAM_STATE_BUSY)
 8005ae2:	d00d      	beq.n	8005b00 <HAL_SDRAM_SendCommand+0x2c>
  {
    return HAL_BUSY;
  }
  
  /* Update the SDRAM state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;
 8005ae4:	2302      	movs	r3, #2
 8005ae6:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  
  /* Send SDRAM command */
  FMC_SDRAM_SendCommand(hsdram->Instance, Command, Timeout);
 8005aea:	6820      	ldr	r0, [r4, #0]
 8005aec:	f000 ffc3 	bl	8006a76 <FMC_SDRAM_SendCommand>
  
  /* Update the SDRAM controller state */
  if(Command->CommandMode == FMC_SDRAM_CMD_PALL)
 8005af0:	682b      	ldr	r3, [r5, #0]
 8005af2:	2b02      	cmp	r3, #2
  {
    hsdram->State = HAL_SDRAM_STATE_PRECHARGED;
 8005af4:	bf0c      	ite	eq
 8005af6:	2305      	moveq	r3, #5
  }
  else
  {
    hsdram->State = HAL_SDRAM_STATE_READY;
 8005af8:	2301      	movne	r3, #1
 8005afa:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  }
  
  return HAL_OK;  
 8005afe:	2000      	movs	r0, #0
}
 8005b00:	bd38      	pop	{r3, r4, r5, pc}

08005b02 <HAL_SDRAM_ProgramRefreshRate>:
  *                the configuration information for SDRAM module.  
  * @param  RefreshRate The SDRAM refresh rate value       
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_ProgramRefreshRate(SDRAM_HandleTypeDef *hsdram, uint32_t RefreshRate)
{
 8005b02:	b510      	push	{r4, lr}
 8005b04:	4604      	mov	r4, r0
  /* Check the SDRAM controller state */
  if(hsdram->State == HAL_SDRAM_STATE_BUSY)
 8005b06:	f890 002c 	ldrb.w	r0, [r0, #44]	; 0x2c
 8005b0a:	b2c0      	uxtb	r0, r0
 8005b0c:	2802      	cmp	r0, #2
 8005b0e:	d009      	beq.n	8005b24 <HAL_SDRAM_ProgramRefreshRate+0x22>
  {
    return HAL_BUSY;
  } 
  
  /* Update the SDRAM state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;
 8005b10:	2302      	movs	r3, #2
 8005b12:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  
  /* Program the refresh rate */
  FMC_SDRAM_ProgramRefreshRate(hsdram->Instance ,RefreshRate);
 8005b16:	6820      	ldr	r0, [r4, #0]
 8005b18:	f000 ffd2 	bl	8006ac0 <FMC_SDRAM_ProgramRefreshRate>
  
  /* Update the SDRAM state */
  hsdram->State = HAL_SDRAM_STATE_READY;
 8005b1c:	2301      	movs	r3, #1
 8005b1e:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  
  return HAL_OK;   
 8005b22:	2000      	movs	r0, #0
}
 8005b24:	bd10      	pop	{r4, pc}

08005b26 <SPI_WaitFlagStateUntilTimeout.constprop.7>:
  * @param  State flag state to check
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_WaitFlagStateUntilTimeout(SPI_HandleTypeDef *hspi, uint32_t Flag, FlagStatus State,
 8005b26:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8005b28:	4604      	mov	r4, r0
 8005b2a:	460e      	mov	r6, r1
 8005b2c:	4615      	mov	r5, r2
 8005b2e:	461f      	mov	r7, r3
                                                       uint32_t Timeout, uint32_t Tickstart)
{
  while ((__HAL_SPI_GET_FLAG(hspi, Flag) ? SET : RESET) != State)
 8005b30:	6821      	ldr	r1, [r4, #0]
 8005b32:	688a      	ldr	r2, [r1, #8]
 8005b34:	ea36 0302 	bics.w	r3, r6, r2
 8005b38:	d001      	beq.n	8005b3e <SPI_WaitFlagStateUntilTimeout.constprop.7+0x18>
        return HAL_TIMEOUT;
      }
    }
  }

  return HAL_OK;
 8005b3a:	2000      	movs	r0, #0
 8005b3c:	e02d      	b.n	8005b9a <SPI_WaitFlagStateUntilTimeout.constprop.7+0x74>
    if (Timeout != HAL_MAX_DELAY)
 8005b3e:	1c6b      	adds	r3, r5, #1
 8005b40:	d0f7      	beq.n	8005b32 <SPI_WaitFlagStateUntilTimeout.constprop.7+0xc>
      if (((HAL_GetTick() - Tickstart) >= Timeout) || (Timeout == 0U))
 8005b42:	f7fe f989 	bl	8003e58 <HAL_GetTick>
 8005b46:	1bc0      	subs	r0, r0, r7
 8005b48:	4285      	cmp	r5, r0
 8005b4a:	d8f1      	bhi.n	8005b30 <SPI_WaitFlagStateUntilTimeout.constprop.7+0xa>
        __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_TXE | SPI_IT_RXNE | SPI_IT_ERR));
 8005b4c:	6823      	ldr	r3, [r4, #0]
 8005b4e:	685a      	ldr	r2, [r3, #4]
 8005b50:	f022 02e0 	bic.w	r2, r2, #224	; 0xe0
 8005b54:	605a      	str	r2, [r3, #4]
        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8005b56:	6862      	ldr	r2, [r4, #4]
 8005b58:	f5b2 7f82 	cmp.w	r2, #260	; 0x104
 8005b5c:	d10a      	bne.n	8005b74 <SPI_WaitFlagStateUntilTimeout.constprop.7+0x4e>
 8005b5e:	68a2      	ldr	r2, [r4, #8]
 8005b60:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
 8005b64:	d002      	beq.n	8005b6c <SPI_WaitFlagStateUntilTimeout.constprop.7+0x46>
                                                     || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXONLY)))
 8005b66:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
 8005b6a:	d103      	bne.n	8005b74 <SPI_WaitFlagStateUntilTimeout.constprop.7+0x4e>
          __HAL_SPI_DISABLE(hspi);
 8005b6c:	681a      	ldr	r2, [r3, #0]
 8005b6e:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8005b72:	601a      	str	r2, [r3, #0]
        if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
 8005b74:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 8005b76:	f5b2 5f00 	cmp.w	r2, #8192	; 0x2000
 8005b7a:	d107      	bne.n	8005b8c <SPI_WaitFlagStateUntilTimeout.constprop.7+0x66>
          SPI_RESET_CRC(hspi);
 8005b7c:	681a      	ldr	r2, [r3, #0]
 8005b7e:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 8005b82:	601a      	str	r2, [r3, #0]
 8005b84:	681a      	ldr	r2, [r3, #0]
 8005b86:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 8005b8a:	601a      	str	r2, [r3, #0]
        hspi->State = HAL_SPI_STATE_READY;
 8005b8c:	2301      	movs	r3, #1
 8005b8e:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
        __HAL_UNLOCK(hspi);
 8005b92:	2300      	movs	r3, #0
 8005b94:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
 8005b98:	2003      	movs	r0, #3
}
 8005b9a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08005b9c <SPI_EndRxTransaction>:
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_EndRxTransaction(SPI_HandleTypeDef *hspi,  uint32_t Timeout, uint32_t Tickstart)
{
 8005b9c:	b538      	push	{r3, r4, r5, lr}
 8005b9e:	4613      	mov	r3, r2
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8005ba0:	6842      	ldr	r2, [r0, #4]
 8005ba2:	f5b2 7f82 	cmp.w	r2, #260	; 0x104
{
 8005ba6:	4604      	mov	r4, r0
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8005ba8:	d11f      	bne.n	8005bea <SPI_EndRxTransaction+0x4e>
 8005baa:	6882      	ldr	r2, [r0, #8]
 8005bac:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
 8005bb0:	d002      	beq.n	8005bb8 <SPI_EndRxTransaction+0x1c>
                                               || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXONLY)))
 8005bb2:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
 8005bb6:	d107      	bne.n	8005bc8 <SPI_EndRxTransaction+0x2c>
  {
    /* Disable SPI peripheral */
    __HAL_SPI_DISABLE(hspi);
 8005bb8:	6825      	ldr	r5, [r4, #0]
 8005bba:	6828      	ldr	r0, [r5, #0]
  }

  /* Erratasheet: BSY bit may stay high at the end of a data transfer in Slave mode */
  if (hspi->Init.Mode == SPI_MODE_MASTER)
  {
    if (hspi->Init.Direction != SPI_DIRECTION_2LINES_RXONLY)
 8005bbc:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
    __HAL_SPI_DISABLE(hspi);
 8005bc0:	f020 0040 	bic.w	r0, r0, #64	; 0x40
 8005bc4:	6028      	str	r0, [r5, #0]
    if (hspi->Init.Direction != SPI_DIRECTION_2LINES_RXONLY)
 8005bc6:	d007      	beq.n	8005bd8 <SPI_EndRxTransaction+0x3c>
    {
      /* Control the BSY flag */
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 8005bc8:	460a      	mov	r2, r1
 8005bca:	2180      	movs	r1, #128	; 0x80
 8005bcc:	4620      	mov	r0, r4
 8005bce:	f7ff ffaa 	bl	8005b26 <SPI_WaitFlagStateUntilTimeout.constprop.7>
 8005bd2:	b920      	cbnz	r0, 8005bde <SPI_EndRxTransaction+0x42>
    {
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
      return HAL_TIMEOUT;
    }
  }
  return HAL_OK;
 8005bd4:	2000      	movs	r0, #0
}
 8005bd6:	bd38      	pop	{r3, r4, r5, pc}
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 8005bd8:	460a      	mov	r2, r1
 8005bda:	2101      	movs	r1, #1
 8005bdc:	e7f6      	b.n	8005bcc <SPI_EndRxTransaction+0x30>
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 8005bde:	6d63      	ldr	r3, [r4, #84]	; 0x54
 8005be0:	f043 0320 	orr.w	r3, r3, #32
 8005be4:	6563      	str	r3, [r4, #84]	; 0x54
      return HAL_TIMEOUT;
 8005be6:	2003      	movs	r0, #3
 8005be8:	e7f5      	b.n	8005bd6 <SPI_EndRxTransaction+0x3a>
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 8005bea:	460a      	mov	r2, r1
 8005bec:	2101      	movs	r1, #1
 8005bee:	e7ee      	b.n	8005bce <SPI_EndRxTransaction+0x32>

08005bf0 <SPI_EndRxTxTransaction>:
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_EndRxTxTransaction(SPI_HandleTypeDef *hspi, uint32_t Timeout, uint32_t Tickstart)
{
 8005bf0:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8005bf2:	4613      	mov	r3, r2
  /* Timeout in µs */
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 8005bf4:	4a12      	ldr	r2, [pc, #72]	; (8005c40 <SPI_EndRxTxTransaction+0x50>)
 8005bf6:	4e13      	ldr	r6, [pc, #76]	; (8005c44 <SPI_EndRxTxTransaction+0x54>)
 8005bf8:	6815      	ldr	r5, [r2, #0]
  /* Erratasheet: BSY bit may stay high at the end of a data transfer in Slave mode */
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 8005bfa:	6842      	ldr	r2, [r0, #4]
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 8005bfc:	fbb5 f6f6 	udiv	r6, r5, r6
 8005c00:	f44f 757a 	mov.w	r5, #1000	; 0x3e8
 8005c04:	4375      	muls	r5, r6
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 8005c06:	f5b2 7f82 	cmp.w	r2, #260	; 0x104
{
 8005c0a:	4604      	mov	r4, r0
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 8005c0c:	9501      	str	r5, [sp, #4]
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 8005c0e:	d10b      	bne.n	8005c28 <SPI_EndRxTxTransaction+0x38>
  {
    /* Control the BSY flag */
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 8005c10:	460a      	mov	r2, r1
 8005c12:	2180      	movs	r1, #128	; 0x80
 8005c14:	f7ff ff87 	bl	8005b26 <SPI_WaitFlagStateUntilTimeout.constprop.7>
 8005c18:	b178      	cbz	r0, 8005c3a <SPI_EndRxTxTransaction+0x4a>
    {
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 8005c1a:	6d63      	ldr	r3, [r4, #84]	; 0x54
 8005c1c:	f043 0320 	orr.w	r3, r3, #32
 8005c20:	6563      	str	r3, [r4, #84]	; 0x54
      return HAL_TIMEOUT;
 8005c22:	2003      	movs	r0, #3
      count--;
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
  }

  return HAL_OK;
}
 8005c24:	b002      	add	sp, #8
 8005c26:	bd70      	pop	{r4, r5, r6, pc}
      if (count == 0U)
 8005c28:	9b01      	ldr	r3, [sp, #4]
 8005c2a:	b133      	cbz	r3, 8005c3a <SPI_EndRxTxTransaction+0x4a>
      count--;
 8005c2c:	9b01      	ldr	r3, [sp, #4]
 8005c2e:	3b01      	subs	r3, #1
 8005c30:	9301      	str	r3, [sp, #4]
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
 8005c32:	6823      	ldr	r3, [r4, #0]
 8005c34:	689b      	ldr	r3, [r3, #8]
 8005c36:	061b      	lsls	r3, r3, #24
 8005c38:	d4f6      	bmi.n	8005c28 <SPI_EndRxTxTransaction+0x38>
  return HAL_OK;
 8005c3a:	2000      	movs	r0, #0
 8005c3c:	e7f2      	b.n	8005c24 <SPI_EndRxTxTransaction+0x34>
 8005c3e:	bf00      	nop
 8005c40:	20000084 	.word	0x20000084
 8005c44:	016e3600 	.word	0x016e3600

08005c48 <HAL_SPI_Init>:
{
 8005c48:	b510      	push	{r4, lr}
  if (hspi == NULL)
 8005c4a:	4604      	mov	r4, r0
 8005c4c:	2800      	cmp	r0, #0
 8005c4e:	d036      	beq.n	8005cbe <HAL_SPI_Init+0x76>
  hspi->Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 8005c50:	2300      	movs	r3, #0
 8005c52:	6283      	str	r3, [r0, #40]	; 0x28
  if (hspi->State == HAL_SPI_STATE_RESET)
 8005c54:	f890 3051 	ldrb.w	r3, [r0, #81]	; 0x51
 8005c58:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8005c5c:	b91b      	cbnz	r3, 8005c66 <HAL_SPI_Init+0x1e>
    hspi->Lock = HAL_UNLOCKED;
 8005c5e:	f880 2050 	strb.w	r2, [r0, #80]	; 0x50
    HAL_SPI_MspInit(hspi);
 8005c62:	f7fc fc27 	bl	80024b4 <HAL_SPI_MspInit>
  __HAL_SPI_DISABLE(hspi);
 8005c66:	6821      	ldr	r1, [r4, #0]
  WRITE_REG(hspi->Instance->CR1, (hspi->Init.Mode | hspi->Init.Direction | hspi->Init.DataSize |
 8005c68:	69a2      	ldr	r2, [r4, #24]
  hspi->State = HAL_SPI_STATE_BUSY;
 8005c6a:	2302      	movs	r3, #2
 8005c6c:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
  __HAL_SPI_DISABLE(hspi);
 8005c70:	680b      	ldr	r3, [r1, #0]
 8005c72:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 8005c76:	600b      	str	r3, [r1, #0]
  WRITE_REG(hspi->Instance->CR1, (hspi->Init.Mode | hspi->Init.Direction | hspi->Init.DataSize |
 8005c78:	e9d4 3001 	ldrd	r3, r0, [r4, #4]
 8005c7c:	4303      	orrs	r3, r0
 8005c7e:	68e0      	ldr	r0, [r4, #12]
 8005c80:	4303      	orrs	r3, r0
 8005c82:	6920      	ldr	r0, [r4, #16]
 8005c84:	4303      	orrs	r3, r0
 8005c86:	6960      	ldr	r0, [r4, #20]
 8005c88:	4303      	orrs	r3, r0
 8005c8a:	69e0      	ldr	r0, [r4, #28]
 8005c8c:	4303      	orrs	r3, r0
 8005c8e:	6a20      	ldr	r0, [r4, #32]
 8005c90:	4303      	orrs	r3, r0
 8005c92:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 8005c94:	4303      	orrs	r3, r0
 8005c96:	f402 7000 	and.w	r0, r2, #512	; 0x200
 8005c9a:	4303      	orrs	r3, r0
 8005c9c:	600b      	str	r3, [r1, #0]
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | hspi->Init.TIMode));
 8005c9e:	0c12      	lsrs	r2, r2, #16
 8005ca0:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8005ca2:	f002 0204 	and.w	r2, r2, #4
 8005ca6:	431a      	orrs	r2, r3
 8005ca8:	604a      	str	r2, [r1, #4]
  CLEAR_BIT(hspi->Instance->I2SCFGR, SPI_I2SCFGR_I2SMOD);
 8005caa:	69cb      	ldr	r3, [r1, #28]
 8005cac:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 8005cb0:	61cb      	str	r3, [r1, #28]
  hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 8005cb2:	2000      	movs	r0, #0
  hspi->State     = HAL_SPI_STATE_READY;
 8005cb4:	2301      	movs	r3, #1
  hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 8005cb6:	6560      	str	r0, [r4, #84]	; 0x54
  hspi->State     = HAL_SPI_STATE_READY;
 8005cb8:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
}
 8005cbc:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 8005cbe:	2001      	movs	r0, #1
 8005cc0:	e7fc      	b.n	8005cbc <HAL_SPI_Init+0x74>

08005cc2 <HAL_SPI_Transmit>:
{
 8005cc2:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8005cc6:	461e      	mov	r6, r3
  __HAL_LOCK(hspi);
 8005cc8:	f890 3050 	ldrb.w	r3, [r0, #80]	; 0x50
 8005ccc:	2b01      	cmp	r3, #1
{
 8005cce:	4604      	mov	r4, r0
 8005cd0:	460d      	mov	r5, r1
 8005cd2:	4690      	mov	r8, r2
  __HAL_LOCK(hspi);
 8005cd4:	f000 809b 	beq.w	8005e0e <HAL_SPI_Transmit+0x14c>
 8005cd8:	2301      	movs	r3, #1
 8005cda:	f880 3050 	strb.w	r3, [r0, #80]	; 0x50
  tickstart = HAL_GetTick();
 8005cde:	f7fe f8bb 	bl	8003e58 <HAL_GetTick>
 8005ce2:	4607      	mov	r7, r0
  if (hspi->State != HAL_SPI_STATE_READY)
 8005ce4:	f894 0051 	ldrb.w	r0, [r4, #81]	; 0x51
 8005ce8:	b2c0      	uxtb	r0, r0
 8005cea:	2801      	cmp	r0, #1
 8005cec:	f040 808d 	bne.w	8005e0a <HAL_SPI_Transmit+0x148>
  if ((pData == NULL) || (Size == 0U))
 8005cf0:	2d00      	cmp	r5, #0
 8005cf2:	d05d      	beq.n	8005db0 <HAL_SPI_Transmit+0xee>
 8005cf4:	f1b8 0f00 	cmp.w	r8, #0
 8005cf8:	d05a      	beq.n	8005db0 <HAL_SPI_Transmit+0xee>
  hspi->State       = HAL_SPI_STATE_BUSY_TX;
 8005cfa:	2303      	movs	r3, #3
 8005cfc:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 8005d00:	2000      	movs	r0, #0
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8005d02:	68a3      	ldr	r3, [r4, #8]
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 8005d04:	6560      	str	r0, [r4, #84]	; 0x54
  hspi->pRxBuffPtr  = (uint8_t *)NULL;
 8005d06:	63a0      	str	r0, [r4, #56]	; 0x38
  hspi->TxXferCount = Size;
 8005d08:	f8a4 8036 	strh.w	r8, [r4, #54]	; 0x36
  hspi->RxXferSize  = 0U;
 8005d0c:	87a0      	strh	r0, [r4, #60]	; 0x3c
  hspi->RxXferCount = 0U;
 8005d0e:	87e0      	strh	r0, [r4, #62]	; 0x3e
  hspi->RxISR       = NULL;
 8005d10:	e9c4 0010 	strd	r0, r0, [r4, #64]	; 0x40
 8005d14:	6820      	ldr	r0, [r4, #0]
  hspi->pTxBuffPtr  = (uint8_t *)pData;
 8005d16:	6325      	str	r5, [r4, #48]	; 0x30
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8005d18:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
    SPI_1LINE_TX(hspi);
 8005d1c:	bf08      	it	eq
 8005d1e:	6803      	ldreq	r3, [r0, #0]
  hspi->TxXferSize  = Size;
 8005d20:	f8a4 8034 	strh.w	r8, [r4, #52]	; 0x34
    SPI_1LINE_TX(hspi);
 8005d24:	bf04      	itt	eq
 8005d26:	f443 4380 	orreq.w	r3, r3, #16384	; 0x4000
 8005d2a:	6003      	streq	r3, [r0, #0]
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 8005d2c:	6803      	ldr	r3, [r0, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 8005d2e:	68e2      	ldr	r2, [r4, #12]
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 8005d30:	065b      	lsls	r3, r3, #25
    __HAL_SPI_ENABLE(hspi);
 8005d32:	bf5e      	ittt	pl
 8005d34:	6803      	ldrpl	r3, [r0, #0]
 8005d36:	f043 0340 	orrpl.w	r3, r3, #64	; 0x40
 8005d3a:	6003      	strpl	r3, [r0, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 8005d3c:	f5b2 6f00 	cmp.w	r2, #2048	; 0x800
 8005d40:	6863      	ldr	r3, [r4, #4]
 8005d42:	d13e      	bne.n	8005dc2 <HAL_SPI_Transmit+0x100>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 8005d44:	b113      	cbz	r3, 8005d4c <HAL_SPI_Transmit+0x8a>
 8005d46:	f1b8 0f01 	cmp.w	r8, #1
 8005d4a:	d107      	bne.n	8005d5c <HAL_SPI_Transmit+0x9a>
      hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 8005d4c:	f835 3b02 	ldrh.w	r3, [r5], #2
 8005d50:	60c3      	str	r3, [r0, #12]
      hspi->pTxBuffPtr += sizeof(uint16_t);
 8005d52:	6325      	str	r5, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 8005d54:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8005d56:	3b01      	subs	r3, #1
 8005d58:	b29b      	uxth	r3, r3
 8005d5a:	86e3      	strh	r3, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 8005d5c:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8005d5e:	b29b      	uxth	r3, r3
 8005d60:	b9a3      	cbnz	r3, 8005d8c <HAL_SPI_Transmit+0xca>
  if (SPI_EndRxTxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 8005d62:	463a      	mov	r2, r7
 8005d64:	4631      	mov	r1, r6
 8005d66:	4620      	mov	r0, r4
 8005d68:	f7ff ff42 	bl	8005bf0 <SPI_EndRxTxTransaction>
 8005d6c:	2800      	cmp	r0, #0
 8005d6e:	d149      	bne.n	8005e04 <HAL_SPI_Transmit+0x142>
  if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 8005d70:	68a3      	ldr	r3, [r4, #8]
 8005d72:	b933      	cbnz	r3, 8005d82 <HAL_SPI_Transmit+0xc0>
    __HAL_SPI_CLEAR_OVRFLAG(hspi);
 8005d74:	9301      	str	r3, [sp, #4]
 8005d76:	6823      	ldr	r3, [r4, #0]
 8005d78:	68da      	ldr	r2, [r3, #12]
 8005d7a:	9201      	str	r2, [sp, #4]
 8005d7c:	689b      	ldr	r3, [r3, #8]
 8005d7e:	9301      	str	r3, [sp, #4]
 8005d80:	9b01      	ldr	r3, [sp, #4]
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 8005d82:	6d60      	ldr	r0, [r4, #84]	; 0x54
    errorcode = HAL_BUSY;
 8005d84:	3000      	adds	r0, #0
 8005d86:	bf18      	it	ne
 8005d88:	2001      	movne	r0, #1
error:
 8005d8a:	e011      	b.n	8005db0 <HAL_SPI_Transmit+0xee>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 8005d8c:	6822      	ldr	r2, [r4, #0]
 8005d8e:	6893      	ldr	r3, [r2, #8]
 8005d90:	0798      	lsls	r0, r3, #30
 8005d92:	d505      	bpl.n	8005da0 <HAL_SPI_Transmit+0xde>
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 8005d94:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8005d96:	f833 1b02 	ldrh.w	r1, [r3], #2
 8005d9a:	60d1      	str	r1, [r2, #12]
        hspi->pTxBuffPtr += sizeof(uint16_t);
 8005d9c:	6323      	str	r3, [r4, #48]	; 0x30
 8005d9e:	e7d9      	b.n	8005d54 <HAL_SPI_Transmit+0x92>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 8005da0:	f7fe f85a 	bl	8003e58 <HAL_GetTick>
 8005da4:	1bc0      	subs	r0, r0, r7
 8005da6:	42b0      	cmp	r0, r6
 8005da8:	d3d8      	bcc.n	8005d5c <HAL_SPI_Transmit+0x9a>
 8005daa:	1c71      	adds	r1, r6, #1
 8005dac:	d0d6      	beq.n	8005d5c <HAL_SPI_Transmit+0x9a>
          errorcode = HAL_TIMEOUT;
 8005dae:	2003      	movs	r0, #3
  hspi->State = HAL_SPI_STATE_READY;
 8005db0:	2301      	movs	r3, #1
 8005db2:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
  __HAL_UNLOCK(hspi);
 8005db6:	2300      	movs	r3, #0
 8005db8:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
}
 8005dbc:	b002      	add	sp, #8
 8005dbe:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 8005dc2:	b113      	cbz	r3, 8005dca <HAL_SPI_Transmit+0x108>
 8005dc4:	f1b8 0f01 	cmp.w	r8, #1
 8005dc8:	d108      	bne.n	8005ddc <HAL_SPI_Transmit+0x11a>
      *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 8005dca:	782b      	ldrb	r3, [r5, #0]
 8005dcc:	7303      	strb	r3, [r0, #12]
        hspi->pTxBuffPtr += sizeof(uint8_t);
 8005dce:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8005dd0:	3301      	adds	r3, #1
 8005dd2:	6323      	str	r3, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 8005dd4:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8005dd6:	3b01      	subs	r3, #1
 8005dd8:	b29b      	uxth	r3, r3
 8005dda:	86e3      	strh	r3, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 8005ddc:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8005dde:	b29b      	uxth	r3, r3
 8005de0:	2b00      	cmp	r3, #0
 8005de2:	d0be      	beq.n	8005d62 <HAL_SPI_Transmit+0xa0>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 8005de4:	6823      	ldr	r3, [r4, #0]
 8005de6:	689a      	ldr	r2, [r3, #8]
 8005de8:	0792      	lsls	r2, r2, #30
 8005dea:	d503      	bpl.n	8005df4 <HAL_SPI_Transmit+0x132>
        *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 8005dec:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8005dee:	7812      	ldrb	r2, [r2, #0]
 8005df0:	731a      	strb	r2, [r3, #12]
 8005df2:	e7ec      	b.n	8005dce <HAL_SPI_Transmit+0x10c>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 8005df4:	f7fe f830 	bl	8003e58 <HAL_GetTick>
 8005df8:	1bc0      	subs	r0, r0, r7
 8005dfa:	42b0      	cmp	r0, r6
 8005dfc:	d3ee      	bcc.n	8005ddc <HAL_SPI_Transmit+0x11a>
 8005dfe:	1c73      	adds	r3, r6, #1
 8005e00:	d0ec      	beq.n	8005ddc <HAL_SPI_Transmit+0x11a>
 8005e02:	e7d4      	b.n	8005dae <HAL_SPI_Transmit+0xec>
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 8005e04:	2320      	movs	r3, #32
 8005e06:	6563      	str	r3, [r4, #84]	; 0x54
 8005e08:	e7b2      	b.n	8005d70 <HAL_SPI_Transmit+0xae>
    errorcode = HAL_BUSY;
 8005e0a:	2002      	movs	r0, #2
 8005e0c:	e7d0      	b.n	8005db0 <HAL_SPI_Transmit+0xee>
  __HAL_LOCK(hspi);
 8005e0e:	2002      	movs	r0, #2
 8005e10:	e7d4      	b.n	8005dbc <HAL_SPI_Transmit+0xfa>

08005e12 <HAL_SPI_TransmitReceive>:
{
 8005e12:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8005e16:	461e      	mov	r6, r3
  __HAL_LOCK(hspi);
 8005e18:	f890 3050 	ldrb.w	r3, [r0, #80]	; 0x50
{
 8005e1c:	9f0a      	ldr	r7, [sp, #40]	; 0x28
  __HAL_LOCK(hspi);
 8005e1e:	2b01      	cmp	r3, #1
{
 8005e20:	4604      	mov	r4, r0
 8005e22:	460d      	mov	r5, r1
 8005e24:	4691      	mov	r9, r2
  __HAL_LOCK(hspi);
 8005e26:	f000 80e2 	beq.w	8005fee <HAL_SPI_TransmitReceive+0x1dc>
 8005e2a:	2301      	movs	r3, #1
 8005e2c:	f880 3050 	strb.w	r3, [r0, #80]	; 0x50
  tickstart = HAL_GetTick();
 8005e30:	f7fe f812 	bl	8003e58 <HAL_GetTick>
  tmp_state           = hspi->State;
 8005e34:	f894 3051 	ldrb.w	r3, [r4, #81]	; 0x51
  tmp_mode            = hspi->Init.Mode;
 8005e38:	6861      	ldr	r1, [r4, #4]
  tmp_state           = hspi->State;
 8005e3a:	b2db      	uxtb	r3, r3
  if (!((tmp_state == HAL_SPI_STATE_READY) || \
 8005e3c:	2b01      	cmp	r3, #1
  tickstart = HAL_GetTick();
 8005e3e:	4680      	mov	r8, r0
  if (!((tmp_state == HAL_SPI_STATE_READY) || \
 8005e40:	d00a      	beq.n	8005e58 <HAL_SPI_TransmitReceive+0x46>
 8005e42:	f5b1 7f82 	cmp.w	r1, #260	; 0x104
 8005e46:	f040 80d0 	bne.w	8005fea <HAL_SPI_TransmitReceive+0x1d8>
        ((tmp_mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES) && (tmp_state == HAL_SPI_STATE_BUSY_RX))))
 8005e4a:	68a0      	ldr	r0, [r4, #8]
 8005e4c:	2800      	cmp	r0, #0
 8005e4e:	f040 80cc 	bne.w	8005fea <HAL_SPI_TransmitReceive+0x1d8>
 8005e52:	2b04      	cmp	r3, #4
 8005e54:	f040 80c9 	bne.w	8005fea <HAL_SPI_TransmitReceive+0x1d8>
  if ((pTxData == NULL) || (pRxData == NULL) || (Size == 0U))
 8005e58:	2d00      	cmp	r5, #0
 8005e5a:	f000 80c4 	beq.w	8005fe6 <HAL_SPI_TransmitReceive+0x1d4>
 8005e5e:	f1b9 0f00 	cmp.w	r9, #0
 8005e62:	f000 80c0 	beq.w	8005fe6 <HAL_SPI_TransmitReceive+0x1d4>
 8005e66:	2e00      	cmp	r6, #0
 8005e68:	f000 80bd 	beq.w	8005fe6 <HAL_SPI_TransmitReceive+0x1d4>
  if (hspi->State != HAL_SPI_STATE_BUSY_RX)
 8005e6c:	f894 3051 	ldrb.w	r3, [r4, #81]	; 0x51
  hspi->pRxBuffPtr  = (uint8_t *)pRxData;
 8005e70:	f8c4 9038 	str.w	r9, [r4, #56]	; 0x38
  if (hspi->State != HAL_SPI_STATE_BUSY_RX)
 8005e74:	2b04      	cmp	r3, #4
    hspi->State = HAL_SPI_STATE_BUSY_TX_RX;
 8005e76:	bf1c      	itt	ne
 8005e78:	2305      	movne	r3, #5
 8005e7a:	f884 3051 	strbne.w	r3, [r4, #81]	; 0x51
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 8005e7e:	2300      	movs	r3, #0
 8005e80:	6563      	str	r3, [r4, #84]	; 0x54
  hspi->TxISR       = NULL;
 8005e82:	e9c4 3310 	strd	r3, r3, [r4, #64]	; 0x40
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 8005e86:	6823      	ldr	r3, [r4, #0]
  hspi->RxXferCount = Size;
 8005e88:	87e6      	strh	r6, [r4, #62]	; 0x3e
  hspi->TxXferCount = Size;
 8005e8a:	86e6      	strh	r6, [r4, #54]	; 0x36
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 8005e8c:	681a      	ldr	r2, [r3, #0]
  hspi->RxXferSize  = Size;
 8005e8e:	87a6      	strh	r6, [r4, #60]	; 0x3c
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 8005e90:	0650      	lsls	r0, r2, #25
    __HAL_SPI_ENABLE(hspi);
 8005e92:	bf58      	it	pl
 8005e94:	681a      	ldrpl	r2, [r3, #0]
  hspi->pTxBuffPtr  = (uint8_t *)pTxData;
 8005e96:	6325      	str	r5, [r4, #48]	; 0x30
    __HAL_SPI_ENABLE(hspi);
 8005e98:	bf58      	it	pl
 8005e9a:	f042 0240 	orrpl.w	r2, r2, #64	; 0x40
  hspi->TxXferSize  = Size;
 8005e9e:	86a6      	strh	r6, [r4, #52]	; 0x34
    __HAL_SPI_ENABLE(hspi);
 8005ea0:	bf58      	it	pl
 8005ea2:	601a      	strpl	r2, [r3, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 8005ea4:	68e2      	ldr	r2, [r4, #12]
 8005ea6:	f5b2 6f00 	cmp.w	r2, #2048	; 0x800
 8005eaa:	d158      	bne.n	8005f5e <HAL_SPI_TransmitReceive+0x14c>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 8005eac:	b109      	cbz	r1, 8005eb2 <HAL_SPI_TransmitReceive+0xa0>
 8005eae:	2e01      	cmp	r6, #1
 8005eb0:	d107      	bne.n	8005ec2 <HAL_SPI_TransmitReceive+0xb0>
      hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 8005eb2:	f835 2b02 	ldrh.w	r2, [r5], #2
 8005eb6:	60da      	str	r2, [r3, #12]
      hspi->TxXferCount--;
 8005eb8:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
      hspi->pTxBuffPtr += sizeof(uint16_t);
 8005eba:	6325      	str	r5, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 8005ebc:	3b01      	subs	r3, #1
 8005ebe:	b29b      	uxth	r3, r3
 8005ec0:	86e3      	strh	r3, [r4, #54]	; 0x36
        txallowed = 1U;
 8005ec2:	2501      	movs	r5, #1
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 8005ec4:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8005ec6:	b29b      	uxth	r3, r3
 8005ec8:	b9ab      	cbnz	r3, 8005ef6 <HAL_SPI_TransmitReceive+0xe4>
 8005eca:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8005ecc:	b29b      	uxth	r3, r3
 8005ece:	b993      	cbnz	r3, 8005ef6 <HAL_SPI_TransmitReceive+0xe4>
  if (SPI_EndRxTxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 8005ed0:	4642      	mov	r2, r8
 8005ed2:	4639      	mov	r1, r7
 8005ed4:	4620      	mov	r0, r4
 8005ed6:	f7ff fe8b 	bl	8005bf0 <SPI_EndRxTxTransaction>
 8005eda:	2800      	cmp	r0, #0
 8005edc:	f040 8081 	bne.w	8005fe2 <HAL_SPI_TransmitReceive+0x1d0>
  if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 8005ee0:	68a3      	ldr	r3, [r4, #8]
 8005ee2:	2b00      	cmp	r3, #0
 8005ee4:	d132      	bne.n	8005f4c <HAL_SPI_TransmitReceive+0x13a>
    __HAL_SPI_CLEAR_OVRFLAG(hspi);
 8005ee6:	6823      	ldr	r3, [r4, #0]
 8005ee8:	9001      	str	r0, [sp, #4]
 8005eea:	68da      	ldr	r2, [r3, #12]
 8005eec:	9201      	str	r2, [sp, #4]
 8005eee:	689b      	ldr	r3, [r3, #8]
 8005ef0:	9301      	str	r3, [sp, #4]
 8005ef2:	9b01      	ldr	r3, [sp, #4]
 8005ef4:	e02a      	b.n	8005f4c <HAL_SPI_TransmitReceive+0x13a>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 8005ef6:	6822      	ldr	r2, [r4, #0]
 8005ef8:	6893      	ldr	r3, [r2, #8]
 8005efa:	0799      	lsls	r1, r3, #30
 8005efc:	d50d      	bpl.n	8005f1a <HAL_SPI_TransmitReceive+0x108>
 8005efe:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8005f00:	b29b      	uxth	r3, r3
 8005f02:	b153      	cbz	r3, 8005f1a <HAL_SPI_TransmitReceive+0x108>
 8005f04:	b14d      	cbz	r5, 8005f1a <HAL_SPI_TransmitReceive+0x108>
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 8005f06:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8005f08:	f833 1b02 	ldrh.w	r1, [r3], #2
 8005f0c:	60d1      	str	r1, [r2, #12]
        hspi->pTxBuffPtr += sizeof(uint16_t);
 8005f0e:	6323      	str	r3, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 8005f10:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8005f12:	3b01      	subs	r3, #1
 8005f14:	b29b      	uxth	r3, r3
 8005f16:	86e3      	strh	r3, [r4, #54]	; 0x36
        txallowed = 0U;
 8005f18:	2500      	movs	r5, #0
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 8005f1a:	6893      	ldr	r3, [r2, #8]
 8005f1c:	07db      	lsls	r3, r3, #31
 8005f1e:	d50c      	bpl.n	8005f3a <HAL_SPI_TransmitReceive+0x128>
 8005f20:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8005f22:	b29b      	uxth	r3, r3
 8005f24:	b14b      	cbz	r3, 8005f3a <HAL_SPI_TransmitReceive+0x128>
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 8005f26:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8005f28:	68d2      	ldr	r2, [r2, #12]
 8005f2a:	f823 2b02 	strh.w	r2, [r3], #2
        hspi->pRxBuffPtr += sizeof(uint16_t);
 8005f2e:	63a3      	str	r3, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 8005f30:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8005f32:	3b01      	subs	r3, #1
 8005f34:	b29b      	uxth	r3, r3
 8005f36:	87e3      	strh	r3, [r4, #62]	; 0x3e
        txallowed = 1U;
 8005f38:	2501      	movs	r5, #1
      if (((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY))
 8005f3a:	f7fd ff8d 	bl	8003e58 <HAL_GetTick>
 8005f3e:	eba0 0008 	sub.w	r0, r0, r8
 8005f42:	4287      	cmp	r7, r0
 8005f44:	d8be      	bhi.n	8005ec4 <HAL_SPI_TransmitReceive+0xb2>
 8005f46:	1c7e      	adds	r6, r7, #1
 8005f48:	d0bc      	beq.n	8005ec4 <HAL_SPI_TransmitReceive+0xb2>
        errorcode = HAL_TIMEOUT;
 8005f4a:	2003      	movs	r0, #3
  hspi->State = HAL_SPI_STATE_READY;
 8005f4c:	2301      	movs	r3, #1
 8005f4e:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
  __HAL_UNLOCK(hspi);
 8005f52:	2300      	movs	r3, #0
 8005f54:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
}
 8005f58:	b003      	add	sp, #12
 8005f5a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 8005f5e:	b109      	cbz	r1, 8005f64 <HAL_SPI_TransmitReceive+0x152>
 8005f60:	2e01      	cmp	r6, #1
 8005f62:	d108      	bne.n	8005f76 <HAL_SPI_TransmitReceive+0x164>
      *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 8005f64:	782a      	ldrb	r2, [r5, #0]
 8005f66:	731a      	strb	r2, [r3, #12]
      hspi->pTxBuffPtr += sizeof(uint8_t);
 8005f68:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8005f6a:	3301      	adds	r3, #1
 8005f6c:	6323      	str	r3, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 8005f6e:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8005f70:	3b01      	subs	r3, #1
 8005f72:	b29b      	uxth	r3, r3
 8005f74:	86e3      	strh	r3, [r4, #54]	; 0x36
        txallowed = 1U;
 8005f76:	2501      	movs	r5, #1
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 8005f78:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8005f7a:	b29b      	uxth	r3, r3
 8005f7c:	b91b      	cbnz	r3, 8005f86 <HAL_SPI_TransmitReceive+0x174>
 8005f7e:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8005f80:	b29b      	uxth	r3, r3
 8005f82:	2b00      	cmp	r3, #0
 8005f84:	d0a4      	beq.n	8005ed0 <HAL_SPI_TransmitReceive+0xbe>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 8005f86:	6822      	ldr	r2, [r4, #0]
 8005f88:	6893      	ldr	r3, [r2, #8]
 8005f8a:	0798      	lsls	r0, r3, #30
 8005f8c:	d50e      	bpl.n	8005fac <HAL_SPI_TransmitReceive+0x19a>
 8005f8e:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8005f90:	b29b      	uxth	r3, r3
 8005f92:	b15b      	cbz	r3, 8005fac <HAL_SPI_TransmitReceive+0x19a>
 8005f94:	b155      	cbz	r5, 8005fac <HAL_SPI_TransmitReceive+0x19a>
        *(__IO uint8_t *)&hspi->Instance->DR = (*hspi->pTxBuffPtr);
 8005f96:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8005f98:	781b      	ldrb	r3, [r3, #0]
 8005f9a:	7313      	strb	r3, [r2, #12]
        hspi->pTxBuffPtr++;
 8005f9c:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8005f9e:	3301      	adds	r3, #1
 8005fa0:	6323      	str	r3, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 8005fa2:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8005fa4:	3b01      	subs	r3, #1
 8005fa6:	b29b      	uxth	r3, r3
 8005fa8:	86e3      	strh	r3, [r4, #54]	; 0x36
        txallowed = 0U;
 8005faa:	2500      	movs	r5, #0
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 8005fac:	6822      	ldr	r2, [r4, #0]
 8005fae:	6893      	ldr	r3, [r2, #8]
 8005fb0:	07d9      	lsls	r1, r3, #31
 8005fb2:	d50d      	bpl.n	8005fd0 <HAL_SPI_TransmitReceive+0x1be>
 8005fb4:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8005fb6:	b29b      	uxth	r3, r3
 8005fb8:	b153      	cbz	r3, 8005fd0 <HAL_SPI_TransmitReceive+0x1be>
        (*(uint8_t *)hspi->pRxBuffPtr) = hspi->Instance->DR;
 8005fba:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8005fbc:	68d2      	ldr	r2, [r2, #12]
 8005fbe:	701a      	strb	r2, [r3, #0]
        hspi->pRxBuffPtr++;
 8005fc0:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8005fc2:	3301      	adds	r3, #1
 8005fc4:	63a3      	str	r3, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 8005fc6:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8005fc8:	3b01      	subs	r3, #1
 8005fca:	b29b      	uxth	r3, r3
 8005fcc:	87e3      	strh	r3, [r4, #62]	; 0x3e
        txallowed = 1U;
 8005fce:	2501      	movs	r5, #1
      if ((((HAL_GetTick() - tickstart) >=  Timeout) && ((Timeout != HAL_MAX_DELAY))) || (Timeout == 0U))
 8005fd0:	f7fd ff42 	bl	8003e58 <HAL_GetTick>
 8005fd4:	eba0 0008 	sub.w	r0, r0, r8
 8005fd8:	4287      	cmp	r7, r0
 8005fda:	d8cd      	bhi.n	8005f78 <HAL_SPI_TransmitReceive+0x166>
 8005fdc:	1c7b      	adds	r3, r7, #1
 8005fde:	d0cb      	beq.n	8005f78 <HAL_SPI_TransmitReceive+0x166>
 8005fe0:	e7b3      	b.n	8005f4a <HAL_SPI_TransmitReceive+0x138>
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 8005fe2:	2320      	movs	r3, #32
 8005fe4:	6563      	str	r3, [r4, #84]	; 0x54
    errorcode = HAL_ERROR;
 8005fe6:	2001      	movs	r0, #1
 8005fe8:	e7b0      	b.n	8005f4c <HAL_SPI_TransmitReceive+0x13a>
    errorcode = HAL_BUSY;
 8005fea:	2002      	movs	r0, #2
 8005fec:	e7ae      	b.n	8005f4c <HAL_SPI_TransmitReceive+0x13a>
  __HAL_LOCK(hspi);
 8005fee:	2002      	movs	r0, #2
 8005ff0:	e7b2      	b.n	8005f58 <HAL_SPI_TransmitReceive+0x146>

08005ff2 <HAL_SPI_Receive>:
{
 8005ff2:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8005ff6:	461d      	mov	r5, r3
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES))
 8005ff8:	6843      	ldr	r3, [r0, #4]
 8005ffa:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
{
 8005ffe:	4604      	mov	r4, r0
 8006000:	4688      	mov	r8, r1
 8006002:	4617      	mov	r7, r2
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES))
 8006004:	d10c      	bne.n	8006020 <HAL_SPI_Receive+0x2e>
 8006006:	6883      	ldr	r3, [r0, #8]
 8006008:	b953      	cbnz	r3, 8006020 <HAL_SPI_Receive+0x2e>
    hspi->State = HAL_SPI_STATE_BUSY_RX;
 800600a:	2304      	movs	r3, #4
 800600c:	f880 3051 	strb.w	r3, [r0, #81]	; 0x51
    return HAL_SPI_TransmitReceive(hspi, pData, pData, Size, Timeout);
 8006010:	4613      	mov	r3, r2
 8006012:	9500      	str	r5, [sp, #0]
 8006014:	460a      	mov	r2, r1
 8006016:	f7ff fefc 	bl	8005e12 <HAL_SPI_TransmitReceive>
}
 800601a:	b002      	add	sp, #8
 800601c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  __HAL_LOCK(hspi);
 8006020:	f894 3050 	ldrb.w	r3, [r4, #80]	; 0x50
 8006024:	2b01      	cmp	r3, #1
 8006026:	d079      	beq.n	800611c <HAL_SPI_Receive+0x12a>
 8006028:	2301      	movs	r3, #1
 800602a:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
  tickstart = HAL_GetTick();
 800602e:	f7fd ff13 	bl	8003e58 <HAL_GetTick>
 8006032:	4606      	mov	r6, r0
  if (hspi->State != HAL_SPI_STATE_READY)
 8006034:	f894 0051 	ldrb.w	r0, [r4, #81]	; 0x51
 8006038:	b2c0      	uxtb	r0, r0
 800603a:	2801      	cmp	r0, #1
 800603c:	d16c      	bne.n	8006118 <HAL_SPI_Receive+0x126>
  if ((pData == NULL) || (Size == 0U))
 800603e:	f1b8 0f00 	cmp.w	r8, #0
 8006042:	d057      	beq.n	80060f4 <HAL_SPI_Receive+0x102>
 8006044:	2f00      	cmp	r7, #0
 8006046:	d055      	beq.n	80060f4 <HAL_SPI_Receive+0x102>
  hspi->State       = HAL_SPI_STATE_BUSY_RX;
 8006048:	2304      	movs	r3, #4
 800604a:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800604e:	68a2      	ldr	r2, [r4, #8]
  hspi->RxXferSize  = Size;
 8006050:	87a7      	strh	r7, [r4, #60]	; 0x3c
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 8006052:	2300      	movs	r3, #0
 8006054:	6563      	str	r3, [r4, #84]	; 0x54
  hspi->pTxBuffPtr  = (uint8_t *)NULL;
 8006056:	6323      	str	r3, [r4, #48]	; 0x30
  hspi->RxXferCount = Size;
 8006058:	87e7      	strh	r7, [r4, #62]	; 0x3e
  hspi->TxXferSize  = 0U;
 800605a:	86a3      	strh	r3, [r4, #52]	; 0x34
  hspi->TxXferCount = 0U;
 800605c:	86e3      	strh	r3, [r4, #54]	; 0x36
  hspi->TxISR       = NULL;
 800605e:	e9c4 3310 	strd	r3, r3, [r4, #64]	; 0x40
 8006062:	6823      	ldr	r3, [r4, #0]
  hspi->pRxBuffPtr  = (uint8_t *)pData;
 8006064:	f8c4 8038 	str.w	r8, [r4, #56]	; 0x38
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8006068:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
    SPI_1LINE_RX(hspi);
 800606c:	bf02      	ittt	eq
 800606e:	681a      	ldreq	r2, [r3, #0]
 8006070:	f422 4280 	biceq.w	r2, r2, #16384	; 0x4000
 8006074:	601a      	streq	r2, [r3, #0]
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 8006076:	681a      	ldr	r2, [r3, #0]
 8006078:	0657      	lsls	r7, r2, #25
    __HAL_SPI_ENABLE(hspi);
 800607a:	bf5e      	ittt	pl
 800607c:	681a      	ldrpl	r2, [r3, #0]
 800607e:	f042 0240 	orrpl.w	r2, r2, #64	; 0x40
 8006082:	601a      	strpl	r2, [r3, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_8BIT)
 8006084:	68e3      	ldr	r3, [r4, #12]
 8006086:	b1f3      	cbz	r3, 80060c6 <HAL_SPI_Receive+0xd4>
    while (hspi->RxXferCount > 0U)
 8006088:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800608a:	b29b      	uxth	r3, r3
 800608c:	b1fb      	cbz	r3, 80060ce <HAL_SPI_Receive+0xdc>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 800608e:	6823      	ldr	r3, [r4, #0]
 8006090:	689a      	ldr	r2, [r3, #8]
 8006092:	07d2      	lsls	r2, r2, #31
 8006094:	d535      	bpl.n	8006102 <HAL_SPI_Receive+0x110>
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 8006096:	68da      	ldr	r2, [r3, #12]
 8006098:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800609a:	f823 2b02 	strh.w	r2, [r3], #2
        hspi->pRxBuffPtr += sizeof(uint16_t);
 800609e:	63a3      	str	r3, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 80060a0:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 80060a2:	3b01      	subs	r3, #1
 80060a4:	b29b      	uxth	r3, r3
 80060a6:	87e3      	strh	r3, [r4, #62]	; 0x3e
 80060a8:	e7ee      	b.n	8006088 <HAL_SPI_Receive+0x96>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 80060aa:	6823      	ldr	r3, [r4, #0]
 80060ac:	689a      	ldr	r2, [r3, #8]
 80060ae:	07d0      	lsls	r0, r2, #31
 80060b0:	d518      	bpl.n	80060e4 <HAL_SPI_Receive+0xf2>
        (* (uint8_t *)hspi->pRxBuffPtr) = *(__IO uint8_t *)&hspi->Instance->DR;
 80060b2:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 80060b4:	7b1b      	ldrb	r3, [r3, #12]
 80060b6:	7013      	strb	r3, [r2, #0]
        hspi->pRxBuffPtr += sizeof(uint8_t);
 80060b8:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 80060ba:	3301      	adds	r3, #1
 80060bc:	63a3      	str	r3, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 80060be:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 80060c0:	3b01      	subs	r3, #1
 80060c2:	b29b      	uxth	r3, r3
 80060c4:	87e3      	strh	r3, [r4, #62]	; 0x3e
    while (hspi->RxXferCount > 0U)
 80060c6:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 80060c8:	b29b      	uxth	r3, r3
 80060ca:	2b00      	cmp	r3, #0
 80060cc:	d1ed      	bne.n	80060aa <HAL_SPI_Receive+0xb8>
  if (SPI_EndRxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 80060ce:	4632      	mov	r2, r6
 80060d0:	4629      	mov	r1, r5
 80060d2:	4620      	mov	r0, r4
 80060d4:	f7ff fd62 	bl	8005b9c <SPI_EndRxTransaction>
 80060d8:	b9d8      	cbnz	r0, 8006112 <HAL_SPI_Receive+0x120>
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 80060da:	6d60      	ldr	r0, [r4, #84]	; 0x54
    errorcode = HAL_BUSY;
 80060dc:	3000      	adds	r0, #0
 80060de:	bf18      	it	ne
 80060e0:	2001      	movne	r0, #1
error :
 80060e2:	e007      	b.n	80060f4 <HAL_SPI_Receive+0x102>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 80060e4:	f7fd feb8 	bl	8003e58 <HAL_GetTick>
 80060e8:	1b80      	subs	r0, r0, r6
 80060ea:	42a8      	cmp	r0, r5
 80060ec:	d3eb      	bcc.n	80060c6 <HAL_SPI_Receive+0xd4>
 80060ee:	1c69      	adds	r1, r5, #1
 80060f0:	d0e9      	beq.n	80060c6 <HAL_SPI_Receive+0xd4>
          errorcode = HAL_TIMEOUT;
 80060f2:	2003      	movs	r0, #3
  hspi->State = HAL_SPI_STATE_READY;
 80060f4:	2301      	movs	r3, #1
 80060f6:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
  __HAL_UNLOCK(hspi);
 80060fa:	2300      	movs	r3, #0
 80060fc:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
  return errorcode;
 8006100:	e78b      	b.n	800601a <HAL_SPI_Receive+0x28>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 8006102:	f7fd fea9 	bl	8003e58 <HAL_GetTick>
 8006106:	1b80      	subs	r0, r0, r6
 8006108:	42a8      	cmp	r0, r5
 800610a:	d3bd      	bcc.n	8006088 <HAL_SPI_Receive+0x96>
 800610c:	1c6b      	adds	r3, r5, #1
 800610e:	d0bb      	beq.n	8006088 <HAL_SPI_Receive+0x96>
 8006110:	e7ef      	b.n	80060f2 <HAL_SPI_Receive+0x100>
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 8006112:	2320      	movs	r3, #32
 8006114:	6563      	str	r3, [r4, #84]	; 0x54
 8006116:	e7e0      	b.n	80060da <HAL_SPI_Receive+0xe8>
    errorcode = HAL_BUSY;
 8006118:	2002      	movs	r0, #2
 800611a:	e7eb      	b.n	80060f4 <HAL_SPI_Receive+0x102>
  __HAL_LOCK(hspi);
 800611c:	2002      	movs	r0, #2
 800611e:	e77c      	b.n	800601a <HAL_SPI_Receive+0x28>

08006120 <TIM_OC1_SetConfig>:
  uint32_t tmpccmrx;
  uint32_t tmpccer;
  uint32_t tmpcr2;

  /* Disable the Channel 1: Reset the CC1E Bit */
  TIMx->CCER &= ~TIM_CCER_CC1E;
 8006120:	6a03      	ldr	r3, [r0, #32]
 8006122:	f023 0301 	bic.w	r3, r3, #1
 8006126:	6203      	str	r3, [r0, #32]

  /* Get the TIMx CCER register value */
  tmpccer = TIMx->CCER;
 8006128:	6a03      	ldr	r3, [r0, #32]
{
 800612a:	b570      	push	{r4, r5, r6, lr}
  /* Get the TIMx CR2 register value */
  tmpcr2 =  TIMx->CR2;
 800612c:	6844      	ldr	r4, [r0, #4]

  /* Get the TIMx CCMR1 register value */
  tmpccmrx = TIMx->CCMR1;
 800612e:	6982      	ldr	r2, [r0, #24]

  /* Reset the Output Compare Mode Bits */
  tmpccmrx &= ~TIM_CCMR1_OC1M;
  tmpccmrx &= ~TIM_CCMR1_CC1S;
  /* Select the Output Compare Mode */
  tmpccmrx |= OC_Config->OCMode;
 8006130:	680d      	ldr	r5, [r1, #0]
  tmpccmrx &= ~TIM_CCMR1_CC1S;
 8006132:	f022 0273 	bic.w	r2, r2, #115	; 0x73
  tmpccmrx |= OC_Config->OCMode;
 8006136:	432a      	orrs	r2, r5

  /* Reset the Output Polarity level */
  tmpccer &= ~TIM_CCER_CC1P;
  /* Set the Output Compare Polarity */
  tmpccer |= OC_Config->OCPolarity;
 8006138:	688d      	ldr	r5, [r1, #8]
  tmpccer &= ~TIM_CCER_CC1P;
 800613a:	f023 0302 	bic.w	r3, r3, #2
  tmpccer |= OC_Config->OCPolarity;
 800613e:	432b      	orrs	r3, r5

  if (IS_TIM_CCXN_INSTANCE(TIMx, TIM_CHANNEL_1))
 8006140:	4d0e      	ldr	r5, [pc, #56]	; (800617c <TIM_OC1_SetConfig+0x5c>)
 8006142:	42a8      	cmp	r0, r5
 8006144:	d002      	beq.n	800614c <TIM_OC1_SetConfig+0x2c>
 8006146:	4e0e      	ldr	r6, [pc, #56]	; (8006180 <TIM_OC1_SetConfig+0x60>)
 8006148:	42b0      	cmp	r0, r6
 800614a:	d110      	bne.n	800616e <TIM_OC1_SetConfig+0x4e>
    assert_param(IS_TIM_OCN_POLARITY(OC_Config->OCNPolarity));

    /* Reset the Output N Polarity level */
    tmpccer &= ~TIM_CCER_CC1NP;
    /* Set the Output N Polarity */
    tmpccer |= OC_Config->OCNPolarity;
 800614c:	68ce      	ldr	r6, [r1, #12]
    tmpccer &= ~TIM_CCER_CC1NP;
 800614e:	f023 0308 	bic.w	r3, r3, #8
    tmpccer |= OC_Config->OCNPolarity;
 8006152:	4333      	orrs	r3, r6
    /* Reset the Output N State */
    tmpccer &= ~TIM_CCER_CC1NE;
  }

  if (IS_TIM_BREAK_INSTANCE(TIMx))
 8006154:	42a8      	cmp	r0, r5
    tmpccer &= ~TIM_CCER_CC1NE;
 8006156:	f023 0304 	bic.w	r3, r3, #4
  if (IS_TIM_BREAK_INSTANCE(TIMx))
 800615a:	d002      	beq.n	8006162 <TIM_OC1_SetConfig+0x42>
 800615c:	4d08      	ldr	r5, [pc, #32]	; (8006180 <TIM_OC1_SetConfig+0x60>)
 800615e:	42a8      	cmp	r0, r5
 8006160:	d105      	bne.n	800616e <TIM_OC1_SetConfig+0x4e>
    tmpcr2 &= ~TIM_CR2_OIS1;
    tmpcr2 &= ~TIM_CR2_OIS1N;
    /* Set the Output Idle state */
    tmpcr2 |= OC_Config->OCIdleState;
    /* Set the Output N Idle state */
    tmpcr2 |= OC_Config->OCNIdleState;
 8006162:	e9d1 5605 	ldrd	r5, r6, [r1, #20]
    tmpcr2 &= ~TIM_CR2_OIS1N;
 8006166:	f424 7440 	bic.w	r4, r4, #768	; 0x300
    tmpcr2 |= OC_Config->OCNIdleState;
 800616a:	4335      	orrs	r5, r6
 800616c:	432c      	orrs	r4, r5
  }

  /* Write to TIMx CR2 */
  TIMx->CR2 = tmpcr2;
 800616e:	6044      	str	r4, [r0, #4]

  /* Write to TIMx CCMR1 */
  TIMx->CCMR1 = tmpccmrx;
 8006170:	6182      	str	r2, [r0, #24]

  /* Set the Capture Compare Register value */
  TIMx->CCR1 = OC_Config->Pulse;
 8006172:	684a      	ldr	r2, [r1, #4]
 8006174:	6342      	str	r2, [r0, #52]	; 0x34

  /* Write to TIMx CCER */
  TIMx->CCER = tmpccer;
 8006176:	6203      	str	r3, [r0, #32]
}
 8006178:	bd70      	pop	{r4, r5, r6, pc}
 800617a:	bf00      	nop
 800617c:	40010000 	.word	0x40010000
 8006180:	40010400 	.word	0x40010400

08006184 <TIM_OC3_SetConfig>:
  uint32_t tmpccmrx;
  uint32_t tmpccer;
  uint32_t tmpcr2;

  /* Disable the Channel 3: Reset the CC2E Bit */
  TIMx->CCER &= ~TIM_CCER_CC3E;
 8006184:	6a03      	ldr	r3, [r0, #32]
 8006186:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 800618a:	6203      	str	r3, [r0, #32]

  /* Get the TIMx CCER register value */
  tmpccer = TIMx->CCER;
 800618c:	6a03      	ldr	r3, [r0, #32]
{
 800618e:	b570      	push	{r4, r5, r6, lr}
  /* Get the TIMx CR2 register value */
  tmpcr2 =  TIMx->CR2;
 8006190:	6844      	ldr	r4, [r0, #4]

  /* Get the TIMx CCMR2 register value */
  tmpccmrx = TIMx->CCMR2;
 8006192:	69c2      	ldr	r2, [r0, #28]

  /* Reset the Output Compare mode and Capture/Compare selection Bits */
  tmpccmrx &= ~TIM_CCMR2_OC3M;
  tmpccmrx &= ~TIM_CCMR2_CC3S;
  /* Select the Output Compare Mode */
  tmpccmrx |= OC_Config->OCMode;
 8006194:	680d      	ldr	r5, [r1, #0]
  tmpccmrx &= ~TIM_CCMR2_CC3S;
 8006196:	f022 0273 	bic.w	r2, r2, #115	; 0x73
  tmpccmrx |= OC_Config->OCMode;
 800619a:	432a      	orrs	r2, r5

  /* Reset the Output Polarity level */
  tmpccer &= ~TIM_CCER_CC3P;
  /* Set the Output Compare Polarity */
  tmpccer |= (OC_Config->OCPolarity << 8U);
 800619c:	688d      	ldr	r5, [r1, #8]
  tmpccer &= ~TIM_CCER_CC3P;
 800619e:	f423 7300 	bic.w	r3, r3, #512	; 0x200
  tmpccer |= (OC_Config->OCPolarity << 8U);
 80061a2:	ea43 2305 	orr.w	r3, r3, r5, lsl #8

  if (IS_TIM_CCXN_INSTANCE(TIMx, TIM_CHANNEL_3))
 80061a6:	4d11      	ldr	r5, [pc, #68]	; (80061ec <TIM_OC3_SetConfig+0x68>)
 80061a8:	42a8      	cmp	r0, r5
 80061aa:	d003      	beq.n	80061b4 <TIM_OC3_SetConfig+0x30>
 80061ac:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 80061b0:	42a8      	cmp	r0, r5
 80061b2:	d114      	bne.n	80061de <TIM_OC3_SetConfig+0x5a>
    assert_param(IS_TIM_OCN_POLARITY(OC_Config->OCNPolarity));

    /* Reset the Output N Polarity level */
    tmpccer &= ~TIM_CCER_CC3NP;
    /* Set the Output N Polarity */
    tmpccer |= (OC_Config->OCNPolarity << 8U);
 80061b4:	68cd      	ldr	r5, [r1, #12]
    tmpccer &= ~TIM_CCER_CC3NP;
 80061b6:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
    tmpccer |= (OC_Config->OCNPolarity << 8U);
 80061ba:	ea43 2305 	orr.w	r3, r3, r5, lsl #8
    /* Reset the Output N State */
    tmpccer &= ~TIM_CCER_CC3NE;
  }

  if (IS_TIM_BREAK_INSTANCE(TIMx))
 80061be:	4d0b      	ldr	r5, [pc, #44]	; (80061ec <TIM_OC3_SetConfig+0x68>)
 80061c0:	42a8      	cmp	r0, r5
    tmpccer &= ~TIM_CCER_CC3NE;
 80061c2:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
  if (IS_TIM_BREAK_INSTANCE(TIMx))
 80061c6:	d003      	beq.n	80061d0 <TIM_OC3_SetConfig+0x4c>
 80061c8:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 80061cc:	42a8      	cmp	r0, r5
 80061ce:	d106      	bne.n	80061de <TIM_OC3_SetConfig+0x5a>
    tmpcr2 &= ~TIM_CR2_OIS3;
    tmpcr2 &= ~TIM_CR2_OIS3N;
    /* Set the Output Idle state */
    tmpcr2 |= (OC_Config->OCIdleState << 4U);
    /* Set the Output N Idle state */
    tmpcr2 |= (OC_Config->OCNIdleState << 4U);
 80061d0:	e9d1 5605 	ldrd	r5, r6, [r1, #20]
    tmpcr2 &= ~TIM_CR2_OIS3N;
 80061d4:	f424 5440 	bic.w	r4, r4, #12288	; 0x3000
    tmpcr2 |= (OC_Config->OCNIdleState << 4U);
 80061d8:	4335      	orrs	r5, r6
 80061da:	ea44 1405 	orr.w	r4, r4, r5, lsl #4
  }

  /* Write to TIMx CR2 */
  TIMx->CR2 = tmpcr2;
 80061de:	6044      	str	r4, [r0, #4]

  /* Write to TIMx CCMR2 */
  TIMx->CCMR2 = tmpccmrx;
 80061e0:	61c2      	str	r2, [r0, #28]

  /* Set the Capture Compare Register value */
  TIMx->CCR3 = OC_Config->Pulse;
 80061e2:	684a      	ldr	r2, [r1, #4]
 80061e4:	63c2      	str	r2, [r0, #60]	; 0x3c

  /* Write to TIMx CCER */
  TIMx->CCER = tmpccer;
 80061e6:	6203      	str	r3, [r0, #32]
}
 80061e8:	bd70      	pop	{r4, r5, r6, pc}
 80061ea:	bf00      	nop
 80061ec:	40010000 	.word	0x40010000

080061f0 <TIM_OC4_SetConfig>:
  uint32_t tmpccmrx;
  uint32_t tmpccer;
  uint32_t tmpcr2;

  /* Disable the Channel 4: Reset the CC4E Bit */
  TIMx->CCER &= ~TIM_CCER_CC4E;
 80061f0:	6a03      	ldr	r3, [r0, #32]
 80061f2:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 80061f6:	6203      	str	r3, [r0, #32]

  /* Get the TIMx CCER register value */
  tmpccer = TIMx->CCER;
 80061f8:	6a03      	ldr	r3, [r0, #32]
{
 80061fa:	b530      	push	{r4, r5, lr}
  /* Get the TIMx CR2 register value */
  tmpcr2 =  TIMx->CR2;
 80061fc:	6844      	ldr	r4, [r0, #4]

  /* Get the TIMx CCMR2 register value */
  tmpccmrx = TIMx->CCMR2;
 80061fe:	69c2      	ldr	r2, [r0, #28]
  /* Reset the Output Compare mode and Capture/Compare selection Bits */
  tmpccmrx &= ~TIM_CCMR2_OC4M;
  tmpccmrx &= ~TIM_CCMR2_CC4S;

  /* Select the Output Compare Mode */
  tmpccmrx |= (OC_Config->OCMode << 8U);
 8006200:	680d      	ldr	r5, [r1, #0]
  tmpccmrx &= ~TIM_CCMR2_CC4S;
 8006202:	f422 42e6 	bic.w	r2, r2, #29440	; 0x7300
  tmpccmrx |= (OC_Config->OCMode << 8U);
 8006206:	ea42 2205 	orr.w	r2, r2, r5, lsl #8

  /* Reset the Output Polarity level */
  tmpccer &= ~TIM_CCER_CC4P;
  /* Set the Output Compare Polarity */
  tmpccer |= (OC_Config->OCPolarity << 12U);
 800620a:	688d      	ldr	r5, [r1, #8]
  tmpccer &= ~TIM_CCER_CC4P;
 800620c:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
  tmpccer |= (OC_Config->OCPolarity << 12U);
 8006210:	ea43 3305 	orr.w	r3, r3, r5, lsl #12

  if (IS_TIM_BREAK_INSTANCE(TIMx))
 8006214:	4d08      	ldr	r5, [pc, #32]	; (8006238 <TIM_OC4_SetConfig+0x48>)
 8006216:	42a8      	cmp	r0, r5
 8006218:	d003      	beq.n	8006222 <TIM_OC4_SetConfig+0x32>
 800621a:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 800621e:	42a8      	cmp	r0, r5
 8006220:	d104      	bne.n	800622c <TIM_OC4_SetConfig+0x3c>

    /* Reset the Output Compare IDLE State */
    tmpcr2 &= ~TIM_CR2_OIS4;

    /* Set the Output Idle state */
    tmpcr2 |= (OC_Config->OCIdleState << 6U);
 8006222:	694d      	ldr	r5, [r1, #20]
    tmpcr2 &= ~TIM_CR2_OIS4;
 8006224:	f424 4480 	bic.w	r4, r4, #16384	; 0x4000
    tmpcr2 |= (OC_Config->OCIdleState << 6U);
 8006228:	ea44 1485 	orr.w	r4, r4, r5, lsl #6
  }

  /* Write to TIMx CR2 */
  TIMx->CR2 = tmpcr2;
 800622c:	6044      	str	r4, [r0, #4]

  /* Write to TIMx CCMR2 */
  TIMx->CCMR2 = tmpccmrx;
 800622e:	61c2      	str	r2, [r0, #28]

  /* Set the Capture Compare Register value */
  TIMx->CCR4 = OC_Config->Pulse;
 8006230:	684a      	ldr	r2, [r1, #4]
 8006232:	6402      	str	r2, [r0, #64]	; 0x40

  /* Write to TIMx CCER */
  TIMx->CCER = tmpccer;
 8006234:	6203      	str	r3, [r0, #32]
}
 8006236:	bd30      	pop	{r4, r5, pc}
 8006238:	40010000 	.word	0x40010000

0800623c <HAL_TIM_Base_Start_IT>:
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
 800623c:	6803      	ldr	r3, [r0, #0]
 800623e:	68da      	ldr	r2, [r3, #12]
 8006240:	f042 0201 	orr.w	r2, r2, #1
 8006244:	60da      	str	r2, [r3, #12]
  tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
 8006246:	689a      	ldr	r2, [r3, #8]
 8006248:	f002 0207 	and.w	r2, r2, #7
  if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 800624c:	2a06      	cmp	r2, #6
    __HAL_TIM_ENABLE(htim);
 800624e:	bf1e      	ittt	ne
 8006250:	681a      	ldrne	r2, [r3, #0]
 8006252:	f042 0201 	orrne.w	r2, r2, #1
 8006256:	601a      	strne	r2, [r3, #0]
}
 8006258:	2000      	movs	r0, #0
 800625a:	4770      	bx	lr

0800625c <HAL_TIM_PWM_MspInit>:
 800625c:	4770      	bx	lr

0800625e <HAL_TIM_OC_DelayElapsedCallback>:
 800625e:	4770      	bx	lr

08006260 <HAL_TIM_IC_CaptureCallback>:
 8006260:	4770      	bx	lr

08006262 <HAL_TIM_PWM_PulseFinishedCallback>:
 8006262:	4770      	bx	lr

08006264 <TIM_DMADelayPulseCplt>:
{
 8006264:	b510      	push	{r4, lr}
  TIM_HandleTypeDef *htim = (TIM_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 8006266:	6b84      	ldr	r4, [r0, #56]	; 0x38
  if (hdma == htim->hdma[TIM_DMA_ID_CC1])
 8006268:	6a62      	ldr	r2, [r4, #36]	; 0x24
  htim->State = HAL_TIM_STATE_READY;
 800626a:	2301      	movs	r3, #1
  if (hdma == htim->hdma[TIM_DMA_ID_CC1])
 800626c:	4282      	cmp	r2, r0
  htim->State = HAL_TIM_STATE_READY;
 800626e:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  if (hdma == htim->hdma[TIM_DMA_ID_CC1])
 8006272:	d106      	bne.n	8006282 <TIM_DMADelayPulseCplt+0x1e>
    htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
 8006274:	7723      	strb	r3, [r4, #28]
  HAL_TIM_PWM_PulseFinishedCallback(htim);
 8006276:	4620      	mov	r0, r4
 8006278:	f7ff fff3 	bl	8006262 <HAL_TIM_PWM_PulseFinishedCallback>
  htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800627c:	2300      	movs	r3, #0
 800627e:	7723      	strb	r3, [r4, #28]
}
 8006280:	bd10      	pop	{r4, pc}
  else if (hdma == htim->hdma[TIM_DMA_ID_CC2])
 8006282:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 8006284:	4283      	cmp	r3, r0
 8006286:	d101      	bne.n	800628c <TIM_DMADelayPulseCplt+0x28>
    htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
 8006288:	2302      	movs	r3, #2
 800628a:	e7f3      	b.n	8006274 <TIM_DMADelayPulseCplt+0x10>
  else if (hdma == htim->hdma[TIM_DMA_ID_CC3])
 800628c:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800628e:	4283      	cmp	r3, r0
 8006290:	d101      	bne.n	8006296 <TIM_DMADelayPulseCplt+0x32>
    htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
 8006292:	2304      	movs	r3, #4
 8006294:	e7ee      	b.n	8006274 <TIM_DMADelayPulseCplt+0x10>
  else if (hdma == htim->hdma[TIM_DMA_ID_CC4])
 8006296:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8006298:	4283      	cmp	r3, r0
 800629a:	d1ec      	bne.n	8006276 <TIM_DMADelayPulseCplt+0x12>
    htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
 800629c:	2308      	movs	r3, #8
 800629e:	e7e9      	b.n	8006274 <TIM_DMADelayPulseCplt+0x10>

080062a0 <HAL_TIM_PWM_PulseFinishedHalfCpltCallback>:
 80062a0:	4770      	bx	lr

080062a2 <TIM_DMADelayPulseHalfCplt>:
{
 80062a2:	b510      	push	{r4, lr}
  TIM_HandleTypeDef *htim = (TIM_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 80062a4:	6b84      	ldr	r4, [r0, #56]	; 0x38
  if (hdma == htim->hdma[TIM_DMA_ID_CC1])
 80062a6:	6a62      	ldr	r2, [r4, #36]	; 0x24
  htim->State = HAL_TIM_STATE_READY;
 80062a8:	2301      	movs	r3, #1
  if (hdma == htim->hdma[TIM_DMA_ID_CC1])
 80062aa:	4282      	cmp	r2, r0
  htim->State = HAL_TIM_STATE_READY;
 80062ac:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  if (hdma == htim->hdma[TIM_DMA_ID_CC1])
 80062b0:	d106      	bne.n	80062c0 <TIM_DMADelayPulseHalfCplt+0x1e>
    htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
 80062b2:	7723      	strb	r3, [r4, #28]
  HAL_TIM_PWM_PulseFinishedHalfCpltCallback(htim);
 80062b4:	4620      	mov	r0, r4
 80062b6:	f7ff fff3 	bl	80062a0 <HAL_TIM_PWM_PulseFinishedHalfCpltCallback>
  htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 80062ba:	2300      	movs	r3, #0
 80062bc:	7723      	strb	r3, [r4, #28]
}
 80062be:	bd10      	pop	{r4, pc}
  else if (hdma == htim->hdma[TIM_DMA_ID_CC2])
 80062c0:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 80062c2:	4283      	cmp	r3, r0
 80062c4:	d101      	bne.n	80062ca <TIM_DMADelayPulseHalfCplt+0x28>
    htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
 80062c6:	2302      	movs	r3, #2
 80062c8:	e7f3      	b.n	80062b2 <TIM_DMADelayPulseHalfCplt+0x10>
  else if (hdma == htim->hdma[TIM_DMA_ID_CC3])
 80062ca:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 80062cc:	4283      	cmp	r3, r0
 80062ce:	d101      	bne.n	80062d4 <TIM_DMADelayPulseHalfCplt+0x32>
    htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
 80062d0:	2304      	movs	r3, #4
 80062d2:	e7ee      	b.n	80062b2 <TIM_DMADelayPulseHalfCplt+0x10>
  else if (hdma == htim->hdma[TIM_DMA_ID_CC4])
 80062d4:	6b23      	ldr	r3, [r4, #48]	; 0x30
 80062d6:	4283      	cmp	r3, r0
 80062d8:	d1ec      	bne.n	80062b4 <TIM_DMADelayPulseHalfCplt+0x12>
    htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
 80062da:	2308      	movs	r3, #8
 80062dc:	e7e9      	b.n	80062b2 <TIM_DMADelayPulseHalfCplt+0x10>

080062de <HAL_TIM_TriggerCallback>:
 80062de:	4770      	bx	lr

080062e0 <HAL_TIM_IRQHandler>:
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
 80062e0:	6803      	ldr	r3, [r0, #0]
 80062e2:	691a      	ldr	r2, [r3, #16]
 80062e4:	0791      	lsls	r1, r2, #30
{
 80062e6:	b510      	push	{r4, lr}
 80062e8:	4604      	mov	r4, r0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
 80062ea:	d50e      	bpl.n	800630a <HAL_TIM_IRQHandler+0x2a>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC1) != RESET)
 80062ec:	68da      	ldr	r2, [r3, #12]
 80062ee:	0792      	lsls	r2, r2, #30
 80062f0:	d50b      	bpl.n	800630a <HAL_TIM_IRQHandler+0x2a>
        __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC1);
 80062f2:	f06f 0202 	mvn.w	r2, #2
 80062f6:	611a      	str	r2, [r3, #16]
        if ((htim->Instance->CCMR1 & TIM_CCMR1_CC1S) != 0x00U)
 80062f8:	699b      	ldr	r3, [r3, #24]
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
 80062fa:	2201      	movs	r2, #1
        if ((htim->Instance->CCMR1 & TIM_CCMR1_CC1S) != 0x00U)
 80062fc:	079b      	lsls	r3, r3, #30
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
 80062fe:	7702      	strb	r2, [r0, #28]
        if ((htim->Instance->CCMR1 & TIM_CCMR1_CC1S) != 0x00U)
 8006300:	d077      	beq.n	80063f2 <HAL_TIM_IRQHandler+0x112>
          HAL_TIM_IC_CaptureCallback(htim);
 8006302:	f7ff ffad 	bl	8006260 <HAL_TIM_IC_CaptureCallback>
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 8006306:	2300      	movs	r3, #0
 8006308:	7723      	strb	r3, [r4, #28]
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC2) != RESET)
 800630a:	6823      	ldr	r3, [r4, #0]
 800630c:	691a      	ldr	r2, [r3, #16]
 800630e:	0750      	lsls	r0, r2, #29
 8006310:	d510      	bpl.n	8006334 <HAL_TIM_IRQHandler+0x54>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC2) != RESET)
 8006312:	68da      	ldr	r2, [r3, #12]
 8006314:	0751      	lsls	r1, r2, #29
 8006316:	d50d      	bpl.n	8006334 <HAL_TIM_IRQHandler+0x54>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC2);
 8006318:	f06f 0204 	mvn.w	r2, #4
 800631c:	611a      	str	r2, [r3, #16]
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 800631e:	699b      	ldr	r3, [r3, #24]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
 8006320:	2202      	movs	r2, #2
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 8006322:	f413 7f40 	tst.w	r3, #768	; 0x300
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
 8006326:	7722      	strb	r2, [r4, #28]
        HAL_TIM_IC_CaptureCallback(htim);
 8006328:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 800632a:	d068      	beq.n	80063fe <HAL_TIM_IRQHandler+0x11e>
        HAL_TIM_IC_CaptureCallback(htim);
 800632c:	f7ff ff98 	bl	8006260 <HAL_TIM_IC_CaptureCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 8006330:	2300      	movs	r3, #0
 8006332:	7723      	strb	r3, [r4, #28]
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC3) != RESET)
 8006334:	6823      	ldr	r3, [r4, #0]
 8006336:	691a      	ldr	r2, [r3, #16]
 8006338:	0712      	lsls	r2, r2, #28
 800633a:	d50f      	bpl.n	800635c <HAL_TIM_IRQHandler+0x7c>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC3) != RESET)
 800633c:	68da      	ldr	r2, [r3, #12]
 800633e:	0710      	lsls	r0, r2, #28
 8006340:	d50c      	bpl.n	800635c <HAL_TIM_IRQHandler+0x7c>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC3);
 8006342:	f06f 0208 	mvn.w	r2, #8
 8006346:	611a      	str	r2, [r3, #16]
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 8006348:	69db      	ldr	r3, [r3, #28]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
 800634a:	2204      	movs	r2, #4
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 800634c:	0799      	lsls	r1, r3, #30
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
 800634e:	7722      	strb	r2, [r4, #28]
        HAL_TIM_IC_CaptureCallback(htim);
 8006350:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 8006352:	d05a      	beq.n	800640a <HAL_TIM_IRQHandler+0x12a>
        HAL_TIM_IC_CaptureCallback(htim);
 8006354:	f7ff ff84 	bl	8006260 <HAL_TIM_IC_CaptureCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 8006358:	2300      	movs	r3, #0
 800635a:	7723      	strb	r3, [r4, #28]
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC4) != RESET)
 800635c:	6823      	ldr	r3, [r4, #0]
 800635e:	691a      	ldr	r2, [r3, #16]
 8006360:	06d2      	lsls	r2, r2, #27
 8006362:	d510      	bpl.n	8006386 <HAL_TIM_IRQHandler+0xa6>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC4) != RESET)
 8006364:	68da      	ldr	r2, [r3, #12]
 8006366:	06d0      	lsls	r0, r2, #27
 8006368:	d50d      	bpl.n	8006386 <HAL_TIM_IRQHandler+0xa6>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC4);
 800636a:	f06f 0210 	mvn.w	r2, #16
 800636e:	611a      	str	r2, [r3, #16]
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 8006370:	69db      	ldr	r3, [r3, #28]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
 8006372:	2208      	movs	r2, #8
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 8006374:	f413 7f40 	tst.w	r3, #768	; 0x300
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
 8006378:	7722      	strb	r2, [r4, #28]
        HAL_TIM_IC_CaptureCallback(htim);
 800637a:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 800637c:	d04b      	beq.n	8006416 <HAL_TIM_IRQHandler+0x136>
        HAL_TIM_IC_CaptureCallback(htim);
 800637e:	f7ff ff6f 	bl	8006260 <HAL_TIM_IC_CaptureCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 8006382:	2300      	movs	r3, #0
 8006384:	7723      	strb	r3, [r4, #28]
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_UPDATE) != RESET)
 8006386:	6823      	ldr	r3, [r4, #0]
 8006388:	691a      	ldr	r2, [r3, #16]
 800638a:	07d1      	lsls	r1, r2, #31
 800638c:	d508      	bpl.n	80063a0 <HAL_TIM_IRQHandler+0xc0>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_UPDATE) != RESET)
 800638e:	68da      	ldr	r2, [r3, #12]
 8006390:	07d2      	lsls	r2, r2, #31
 8006392:	d505      	bpl.n	80063a0 <HAL_TIM_IRQHandler+0xc0>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_UPDATE);
 8006394:	f06f 0201 	mvn.w	r2, #1
 8006398:	611a      	str	r2, [r3, #16]
      HAL_TIM_PeriodElapsedCallback(htim);
 800639a:	4620      	mov	r0, r4
 800639c:	f7fb fef0 	bl	8002180 <HAL_TIM_PeriodElapsedCallback>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_BREAK) != RESET)
 80063a0:	6823      	ldr	r3, [r4, #0]
 80063a2:	691a      	ldr	r2, [r3, #16]
 80063a4:	0610      	lsls	r0, r2, #24
 80063a6:	d508      	bpl.n	80063ba <HAL_TIM_IRQHandler+0xda>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_BREAK) != RESET)
 80063a8:	68da      	ldr	r2, [r3, #12]
 80063aa:	0611      	lsls	r1, r2, #24
 80063ac:	d505      	bpl.n	80063ba <HAL_TIM_IRQHandler+0xda>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_BREAK);
 80063ae:	f06f 0280 	mvn.w	r2, #128	; 0x80
 80063b2:	611a      	str	r2, [r3, #16]
      HAL_TIMEx_BreakCallback(htim);
 80063b4:	4620      	mov	r0, r4
 80063b6:	f000 faea 	bl	800698e <HAL_TIMEx_BreakCallback>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_TRIGGER) != RESET)
 80063ba:	6823      	ldr	r3, [r4, #0]
 80063bc:	691a      	ldr	r2, [r3, #16]
 80063be:	0652      	lsls	r2, r2, #25
 80063c0:	d508      	bpl.n	80063d4 <HAL_TIM_IRQHandler+0xf4>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_TRIGGER) != RESET)
 80063c2:	68da      	ldr	r2, [r3, #12]
 80063c4:	0650      	lsls	r0, r2, #25
 80063c6:	d505      	bpl.n	80063d4 <HAL_TIM_IRQHandler+0xf4>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_TRIGGER);
 80063c8:	f06f 0240 	mvn.w	r2, #64	; 0x40
 80063cc:	611a      	str	r2, [r3, #16]
      HAL_TIM_TriggerCallback(htim);
 80063ce:	4620      	mov	r0, r4
 80063d0:	f7ff ff85 	bl	80062de <HAL_TIM_TriggerCallback>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_COM) != RESET)
 80063d4:	6823      	ldr	r3, [r4, #0]
 80063d6:	691a      	ldr	r2, [r3, #16]
 80063d8:	0691      	lsls	r1, r2, #26
 80063da:	d522      	bpl.n	8006422 <HAL_TIM_IRQHandler+0x142>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_COM) != RESET)
 80063dc:	68da      	ldr	r2, [r3, #12]
 80063de:	0692      	lsls	r2, r2, #26
 80063e0:	d51f      	bpl.n	8006422 <HAL_TIM_IRQHandler+0x142>
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
 80063e2:	f06f 0220 	mvn.w	r2, #32
      HAL_TIMEx_CommutCallback(htim);
 80063e6:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
 80063e8:	611a      	str	r2, [r3, #16]
}
 80063ea:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
      HAL_TIMEx_CommutCallback(htim);
 80063ee:	f000 bacd 	b.w	800698c <HAL_TIMEx_CommutCallback>
          HAL_TIM_OC_DelayElapsedCallback(htim);
 80063f2:	f7ff ff34 	bl	800625e <HAL_TIM_OC_DelayElapsedCallback>
          HAL_TIM_PWM_PulseFinishedCallback(htim);
 80063f6:	4620      	mov	r0, r4
 80063f8:	f7ff ff33 	bl	8006262 <HAL_TIM_PWM_PulseFinishedCallback>
 80063fc:	e783      	b.n	8006306 <HAL_TIM_IRQHandler+0x26>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 80063fe:	f7ff ff2e 	bl	800625e <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 8006402:	4620      	mov	r0, r4
 8006404:	f7ff ff2d 	bl	8006262 <HAL_TIM_PWM_PulseFinishedCallback>
 8006408:	e792      	b.n	8006330 <HAL_TIM_IRQHandler+0x50>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 800640a:	f7ff ff28 	bl	800625e <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 800640e:	4620      	mov	r0, r4
 8006410:	f7ff ff27 	bl	8006262 <HAL_TIM_PWM_PulseFinishedCallback>
 8006414:	e7a0      	b.n	8006358 <HAL_TIM_IRQHandler+0x78>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 8006416:	f7ff ff22 	bl	800625e <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 800641a:	4620      	mov	r0, r4
 800641c:	f7ff ff21 	bl	8006262 <HAL_TIM_PWM_PulseFinishedCallback>
 8006420:	e7af      	b.n	8006382 <HAL_TIM_IRQHandler+0xa2>
}
 8006422:	bd10      	pop	{r4, pc}

08006424 <HAL_TIM_ErrorCallback>:
 8006424:	4770      	bx	lr

08006426 <TIM_DMAError>:
{
 8006426:	b508      	push	{r3, lr}
  TIM_HandleTypeDef *htim = (TIM_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 8006428:	6b80      	ldr	r0, [r0, #56]	; 0x38
  htim->State = HAL_TIM_STATE_READY;
 800642a:	2301      	movs	r3, #1
 800642c:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d
  HAL_TIM_ErrorCallback(htim);
 8006430:	f7ff fff8 	bl	8006424 <HAL_TIM_ErrorCallback>
}
 8006434:	bd08      	pop	{r3, pc}
	...

08006438 <TIM_Base_SetConfig>:
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 8006438:	4a30      	ldr	r2, [pc, #192]	; (80064fc <TIM_Base_SetConfig+0xc4>)
  tmpcr1 = TIMx->CR1;
 800643a:	6803      	ldr	r3, [r0, #0]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 800643c:	4290      	cmp	r0, r2
 800643e:	d012      	beq.n	8006466 <TIM_Base_SetConfig+0x2e>
 8006440:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
 8006444:	d00f      	beq.n	8006466 <TIM_Base_SetConfig+0x2e>
 8006446:	f5a2 427c 	sub.w	r2, r2, #64512	; 0xfc00
 800644a:	4290      	cmp	r0, r2
 800644c:	d00b      	beq.n	8006466 <TIM_Base_SetConfig+0x2e>
 800644e:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8006452:	4290      	cmp	r0, r2
 8006454:	d007      	beq.n	8006466 <TIM_Base_SetConfig+0x2e>
 8006456:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800645a:	4290      	cmp	r0, r2
 800645c:	d003      	beq.n	8006466 <TIM_Base_SetConfig+0x2e>
 800645e:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
 8006462:	4290      	cmp	r0, r2
 8006464:	d119      	bne.n	800649a <TIM_Base_SetConfig+0x62>
    tmpcr1 |= Structure->CounterMode;
 8006466:	684a      	ldr	r2, [r1, #4]
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 8006468:	f023 0370 	bic.w	r3, r3, #112	; 0x70
    tmpcr1 |= Structure->CounterMode;
 800646c:	4313      	orrs	r3, r2
  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
 800646e:	4a23      	ldr	r2, [pc, #140]	; (80064fc <TIM_Base_SetConfig+0xc4>)
 8006470:	4290      	cmp	r0, r2
 8006472:	d029      	beq.n	80064c8 <TIM_Base_SetConfig+0x90>
 8006474:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
 8006478:	d026      	beq.n	80064c8 <TIM_Base_SetConfig+0x90>
 800647a:	f5a2 427c 	sub.w	r2, r2, #64512	; 0xfc00
 800647e:	4290      	cmp	r0, r2
 8006480:	d022      	beq.n	80064c8 <TIM_Base_SetConfig+0x90>
 8006482:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8006486:	4290      	cmp	r0, r2
 8006488:	d01e      	beq.n	80064c8 <TIM_Base_SetConfig+0x90>
 800648a:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800648e:	4290      	cmp	r0, r2
 8006490:	d01a      	beq.n	80064c8 <TIM_Base_SetConfig+0x90>
 8006492:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
 8006496:	4290      	cmp	r0, r2
 8006498:	d016      	beq.n	80064c8 <TIM_Base_SetConfig+0x90>
 800649a:	4a19      	ldr	r2, [pc, #100]	; (8006500 <TIM_Base_SetConfig+0xc8>)
 800649c:	4290      	cmp	r0, r2
 800649e:	d013      	beq.n	80064c8 <TIM_Base_SetConfig+0x90>
 80064a0:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 80064a4:	4290      	cmp	r0, r2
 80064a6:	d00f      	beq.n	80064c8 <TIM_Base_SetConfig+0x90>
 80064a8:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 80064ac:	4290      	cmp	r0, r2
 80064ae:	d00b      	beq.n	80064c8 <TIM_Base_SetConfig+0x90>
 80064b0:	f5a2 3298 	sub.w	r2, r2, #77824	; 0x13000
 80064b4:	4290      	cmp	r0, r2
 80064b6:	d007      	beq.n	80064c8 <TIM_Base_SetConfig+0x90>
 80064b8:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 80064bc:	4290      	cmp	r0, r2
 80064be:	d003      	beq.n	80064c8 <TIM_Base_SetConfig+0x90>
 80064c0:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 80064c4:	4290      	cmp	r0, r2
 80064c6:	d103      	bne.n	80064d0 <TIM_Base_SetConfig+0x98>
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 80064c8:	68ca      	ldr	r2, [r1, #12]
    tmpcr1 &= ~TIM_CR1_CKD;
 80064ca:	f423 7340 	bic.w	r3, r3, #768	; 0x300
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 80064ce:	4313      	orrs	r3, r2
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 80064d0:	694a      	ldr	r2, [r1, #20]
 80064d2:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 80064d6:	4313      	orrs	r3, r2
  TIMx->CR1 = tmpcr1;
 80064d8:	6003      	str	r3, [r0, #0]
  TIMx->ARR = (uint32_t)Structure->Period ;
 80064da:	688b      	ldr	r3, [r1, #8]
 80064dc:	62c3      	str	r3, [r0, #44]	; 0x2c
  TIMx->PSC = Structure->Prescaler;
 80064de:	680b      	ldr	r3, [r1, #0]
 80064e0:	6283      	str	r3, [r0, #40]	; 0x28
  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
 80064e2:	4b06      	ldr	r3, [pc, #24]	; (80064fc <TIM_Base_SetConfig+0xc4>)
 80064e4:	4298      	cmp	r0, r3
 80064e6:	d003      	beq.n	80064f0 <TIM_Base_SetConfig+0xb8>
 80064e8:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 80064ec:	4298      	cmp	r0, r3
 80064ee:	d101      	bne.n	80064f4 <TIM_Base_SetConfig+0xbc>
    TIMx->RCR = Structure->RepetitionCounter;
 80064f0:	690b      	ldr	r3, [r1, #16]
 80064f2:	6303      	str	r3, [r0, #48]	; 0x30
  TIMx->EGR = TIM_EGR_UG;
 80064f4:	2301      	movs	r3, #1
 80064f6:	6143      	str	r3, [r0, #20]
}
 80064f8:	4770      	bx	lr
 80064fa:	bf00      	nop
 80064fc:	40010000 	.word	0x40010000
 8006500:	40014000 	.word	0x40014000

08006504 <HAL_TIM_Base_Init>:
{
 8006504:	b510      	push	{r4, lr}
  if (htim == NULL)
 8006506:	4604      	mov	r4, r0
 8006508:	b1a0      	cbz	r0, 8006534 <HAL_TIM_Base_Init+0x30>
  if (htim->State == HAL_TIM_STATE_RESET)
 800650a:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 800650e:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8006512:	b91b      	cbnz	r3, 800651c <HAL_TIM_Base_Init+0x18>
    htim->Lock = HAL_UNLOCKED;
 8006514:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    HAL_TIM_Base_MspInit(htim);
 8006518:	f7fc f872 	bl	8002600 <HAL_TIM_Base_MspInit>
  htim->State = HAL_TIM_STATE_BUSY;
 800651c:	2302      	movs	r3, #2
 800651e:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 8006522:	6820      	ldr	r0, [r4, #0]
 8006524:	1d21      	adds	r1, r4, #4
 8006526:	f7ff ff87 	bl	8006438 <TIM_Base_SetConfig>
  htim->State = HAL_TIM_STATE_READY;
 800652a:	2301      	movs	r3, #1
 800652c:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  return HAL_OK;
 8006530:	2000      	movs	r0, #0
}
 8006532:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 8006534:	2001      	movs	r0, #1
 8006536:	e7fc      	b.n	8006532 <HAL_TIM_Base_Init+0x2e>

08006538 <HAL_TIM_PWM_Init>:
{
 8006538:	b510      	push	{r4, lr}
  if (htim == NULL)
 800653a:	4604      	mov	r4, r0
 800653c:	b1a0      	cbz	r0, 8006568 <HAL_TIM_PWM_Init+0x30>
  if (htim->State == HAL_TIM_STATE_RESET)
 800653e:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 8006542:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8006546:	b91b      	cbnz	r3, 8006550 <HAL_TIM_PWM_Init+0x18>
    htim->Lock = HAL_UNLOCKED;
 8006548:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    HAL_TIM_PWM_MspInit(htim);
 800654c:	f7ff fe86 	bl	800625c <HAL_TIM_PWM_MspInit>
  htim->State = HAL_TIM_STATE_BUSY;
 8006550:	2302      	movs	r3, #2
 8006552:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 8006556:	6820      	ldr	r0, [r4, #0]
 8006558:	1d21      	adds	r1, r4, #4
 800655a:	f7ff ff6d 	bl	8006438 <TIM_Base_SetConfig>
  htim->State = HAL_TIM_STATE_READY;
 800655e:	2301      	movs	r3, #1
 8006560:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  return HAL_OK;
 8006564:	2000      	movs	r0, #0
}
 8006566:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 8006568:	2001      	movs	r0, #1
 800656a:	e7fc      	b.n	8006566 <HAL_TIM_PWM_Init+0x2e>

0800656c <TIM_OC2_SetConfig>:
  TIMx->CCER &= ~TIM_CCER_CC2E;
 800656c:	6a03      	ldr	r3, [r0, #32]
 800656e:	f023 0310 	bic.w	r3, r3, #16
 8006572:	6203      	str	r3, [r0, #32]
  tmpccer = TIMx->CCER;
 8006574:	6a03      	ldr	r3, [r0, #32]
{
 8006576:	b570      	push	{r4, r5, r6, lr}
  tmpcr2 =  TIMx->CR2;
 8006578:	6844      	ldr	r4, [r0, #4]
  tmpccmrx = TIMx->CCMR1;
 800657a:	6982      	ldr	r2, [r0, #24]
  tmpccmrx |= (OC_Config->OCMode << 8U);
 800657c:	680d      	ldr	r5, [r1, #0]
  tmpccmrx &= ~TIM_CCMR1_CC2S;
 800657e:	f422 42e6 	bic.w	r2, r2, #29440	; 0x7300
  tmpccmrx |= (OC_Config->OCMode << 8U);
 8006582:	ea42 2205 	orr.w	r2, r2, r5, lsl #8
  tmpccer |= (OC_Config->OCPolarity << 4U);
 8006586:	688d      	ldr	r5, [r1, #8]
  tmpccer &= ~TIM_CCER_CC2P;
 8006588:	f023 0320 	bic.w	r3, r3, #32
  tmpccer |= (OC_Config->OCPolarity << 4U);
 800658c:	ea43 1305 	orr.w	r3, r3, r5, lsl #4
  if (IS_TIM_CCXN_INSTANCE(TIMx, TIM_CHANNEL_2))
 8006590:	4d10      	ldr	r5, [pc, #64]	; (80065d4 <TIM_OC2_SetConfig+0x68>)
 8006592:	42a8      	cmp	r0, r5
 8006594:	d003      	beq.n	800659e <TIM_OC2_SetConfig+0x32>
 8006596:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 800659a:	42a8      	cmp	r0, r5
 800659c:	d114      	bne.n	80065c8 <TIM_OC2_SetConfig+0x5c>
    tmpccer |= (OC_Config->OCNPolarity << 4U);
 800659e:	68cd      	ldr	r5, [r1, #12]
    tmpccer &= ~TIM_CCER_CC2NP;
 80065a0:	f023 0380 	bic.w	r3, r3, #128	; 0x80
    tmpccer |= (OC_Config->OCNPolarity << 4U);
 80065a4:	ea43 1305 	orr.w	r3, r3, r5, lsl #4
  if (IS_TIM_BREAK_INSTANCE(TIMx))
 80065a8:	4d0a      	ldr	r5, [pc, #40]	; (80065d4 <TIM_OC2_SetConfig+0x68>)
 80065aa:	42a8      	cmp	r0, r5
    tmpccer &= ~TIM_CCER_CC2NE;
 80065ac:	f023 0340 	bic.w	r3, r3, #64	; 0x40
  if (IS_TIM_BREAK_INSTANCE(TIMx))
 80065b0:	d003      	beq.n	80065ba <TIM_OC2_SetConfig+0x4e>
 80065b2:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 80065b6:	42a8      	cmp	r0, r5
 80065b8:	d106      	bne.n	80065c8 <TIM_OC2_SetConfig+0x5c>
    tmpcr2 |= (OC_Config->OCNIdleState << 2U);
 80065ba:	e9d1 5605 	ldrd	r5, r6, [r1, #20]
    tmpcr2 &= ~TIM_CR2_OIS2N;
 80065be:	f424 6440 	bic.w	r4, r4, #3072	; 0xc00
    tmpcr2 |= (OC_Config->OCNIdleState << 2U);
 80065c2:	4335      	orrs	r5, r6
 80065c4:	ea44 0485 	orr.w	r4, r4, r5, lsl #2
  TIMx->CR2 = tmpcr2;
 80065c8:	6044      	str	r4, [r0, #4]
  TIMx->CCMR1 = tmpccmrx;
 80065ca:	6182      	str	r2, [r0, #24]
  TIMx->CCR2 = OC_Config->Pulse;
 80065cc:	684a      	ldr	r2, [r1, #4]
 80065ce:	6382      	str	r2, [r0, #56]	; 0x38
  TIMx->CCER = tmpccer;
 80065d0:	6203      	str	r3, [r0, #32]
}
 80065d2:	bd70      	pop	{r4, r5, r6, pc}
 80065d4:	40010000 	.word	0x40010000

080065d8 <HAL_TIM_PWM_ConfigChannel>:
{
 80065d8:	b538      	push	{r3, r4, r5, lr}
  __HAL_LOCK(htim);
 80065da:	f890 303c 	ldrb.w	r3, [r0, #60]	; 0x3c
 80065de:	2b01      	cmp	r3, #1
{
 80065e0:	4604      	mov	r4, r0
 80065e2:	f04f 0002 	mov.w	r0, #2
  __HAL_LOCK(htim);
 80065e6:	d025      	beq.n	8006634 <HAL_TIM_PWM_ConfigChannel+0x5c>
 80065e8:	2301      	movs	r3, #1
 80065ea:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
  htim->State = HAL_TIM_STATE_BUSY;
 80065ee:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
  switch (Channel)
 80065f2:	2a0c      	cmp	r2, #12
 80065f4:	d818      	bhi.n	8006628 <HAL_TIM_PWM_ConfigChannel+0x50>
 80065f6:	e8df f002 	tbb	[pc, r2]
 80065fa:	1707      	.short	0x1707
 80065fc:	171e1717 	.word	0x171e1717
 8006600:	172f1717 	.word	0x172f1717
 8006604:	1717      	.short	0x1717
 8006606:	40          	.byte	0x40
 8006607:	00          	.byte	0x00
      TIM_OC1_SetConfig(htim->Instance, sConfig);
 8006608:	6820      	ldr	r0, [r4, #0]
 800660a:	f7ff fd89 	bl	8006120 <TIM_OC1_SetConfig>
      htim->Instance->CCMR1 |= TIM_CCMR1_OC1PE;
 800660e:	6823      	ldr	r3, [r4, #0]
      htim->Instance->CCMR1 |= sConfig->OCFastMode;
 8006610:	6909      	ldr	r1, [r1, #16]
      htim->Instance->CCMR1 |= TIM_CCMR1_OC1PE;
 8006612:	699a      	ldr	r2, [r3, #24]
 8006614:	f042 0208 	orr.w	r2, r2, #8
 8006618:	619a      	str	r2, [r3, #24]
      htim->Instance->CCMR1 &= ~TIM_CCMR1_OC1FE;
 800661a:	699a      	ldr	r2, [r3, #24]
 800661c:	f022 0204 	bic.w	r2, r2, #4
 8006620:	619a      	str	r2, [r3, #24]
      htim->Instance->CCMR1 |= sConfig->OCFastMode;
 8006622:	699a      	ldr	r2, [r3, #24]
 8006624:	430a      	orrs	r2, r1
      htim->Instance->CCMR1 |= sConfig->OCFastMode << 8U;
 8006626:	619a      	str	r2, [r3, #24]
  htim->State = HAL_TIM_STATE_READY;
 8006628:	2301      	movs	r3, #1
  __HAL_UNLOCK(htim);
 800662a:	2000      	movs	r0, #0
  htim->State = HAL_TIM_STATE_READY;
 800662c:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  __HAL_UNLOCK(htim);
 8006630:	f884 003c 	strb.w	r0, [r4, #60]	; 0x3c
}
 8006634:	bd38      	pop	{r3, r4, r5, pc}
      TIM_OC2_SetConfig(htim->Instance, sConfig);
 8006636:	6820      	ldr	r0, [r4, #0]
 8006638:	f7ff ff98 	bl	800656c <TIM_OC2_SetConfig>
      htim->Instance->CCMR1 |= TIM_CCMR1_OC2PE;
 800663c:	6823      	ldr	r3, [r4, #0]
      htim->Instance->CCMR1 |= sConfig->OCFastMode << 8U;
 800663e:	6909      	ldr	r1, [r1, #16]
      htim->Instance->CCMR1 |= TIM_CCMR1_OC2PE;
 8006640:	699a      	ldr	r2, [r3, #24]
 8006642:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 8006646:	619a      	str	r2, [r3, #24]
      htim->Instance->CCMR1 &= ~TIM_CCMR1_OC2FE;
 8006648:	699a      	ldr	r2, [r3, #24]
 800664a:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800664e:	619a      	str	r2, [r3, #24]
      htim->Instance->CCMR1 |= sConfig->OCFastMode << 8U;
 8006650:	699a      	ldr	r2, [r3, #24]
 8006652:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 8006656:	e7e6      	b.n	8006626 <HAL_TIM_PWM_ConfigChannel+0x4e>
      TIM_OC3_SetConfig(htim->Instance, sConfig);
 8006658:	6820      	ldr	r0, [r4, #0]
 800665a:	f7ff fd93 	bl	8006184 <TIM_OC3_SetConfig>
      htim->Instance->CCMR2 |= TIM_CCMR2_OC3PE;
 800665e:	6823      	ldr	r3, [r4, #0]
      htim->Instance->CCMR2 |= sConfig->OCFastMode;
 8006660:	6909      	ldr	r1, [r1, #16]
      htim->Instance->CCMR2 |= TIM_CCMR2_OC3PE;
 8006662:	69da      	ldr	r2, [r3, #28]
 8006664:	f042 0208 	orr.w	r2, r2, #8
 8006668:	61da      	str	r2, [r3, #28]
      htim->Instance->CCMR2 &= ~TIM_CCMR2_OC3FE;
 800666a:	69da      	ldr	r2, [r3, #28]
 800666c:	f022 0204 	bic.w	r2, r2, #4
 8006670:	61da      	str	r2, [r3, #28]
      htim->Instance->CCMR2 |= sConfig->OCFastMode;
 8006672:	69da      	ldr	r2, [r3, #28]
 8006674:	430a      	orrs	r2, r1
      htim->Instance->CCMR2 |= sConfig->OCFastMode << 8U;
 8006676:	61da      	str	r2, [r3, #28]
      break;
 8006678:	e7d6      	b.n	8006628 <HAL_TIM_PWM_ConfigChannel+0x50>
      TIM_OC4_SetConfig(htim->Instance, sConfig);
 800667a:	6820      	ldr	r0, [r4, #0]
 800667c:	f7ff fdb8 	bl	80061f0 <TIM_OC4_SetConfig>
      htim->Instance->CCMR2 |= TIM_CCMR2_OC4PE;
 8006680:	6823      	ldr	r3, [r4, #0]
      htim->Instance->CCMR2 |= sConfig->OCFastMode << 8U;
 8006682:	6909      	ldr	r1, [r1, #16]
      htim->Instance->CCMR2 |= TIM_CCMR2_OC4PE;
 8006684:	69da      	ldr	r2, [r3, #28]
 8006686:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 800668a:	61da      	str	r2, [r3, #28]
      htim->Instance->CCMR2 &= ~TIM_CCMR2_OC4FE;
 800668c:	69da      	ldr	r2, [r3, #28]
 800668e:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8006692:	61da      	str	r2, [r3, #28]
      htim->Instance->CCMR2 |= sConfig->OCFastMode << 8U;
 8006694:	69da      	ldr	r2, [r3, #28]
 8006696:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 800669a:	e7ec      	b.n	8006676 <HAL_TIM_PWM_ConfigChannel+0x9e>

0800669c <TIM_ETR_SetConfig>:
  *          This parameter must be a value between 0x00 and 0x0F
  * @retval None
  */
void TIM_ETR_SetConfig(TIM_TypeDef *TIMx, uint32_t TIM_ExtTRGPrescaler,
                       uint32_t TIM_ExtTRGPolarity, uint32_t ExtTRGFilter)
{
 800669c:	b510      	push	{r4, lr}
  uint32_t tmpsmcr;

  tmpsmcr = TIMx->SMCR;
 800669e:	6884      	ldr	r4, [r0, #8]

  /* Reset the ETR Bits */
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);

  /* Set the Prescaler, the Filter value and the Polarity */
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 80066a0:	430a      	orrs	r2, r1
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
 80066a2:	f424 447f 	bic.w	r4, r4, #65280	; 0xff00
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 80066a6:	ea42 2303 	orr.w	r3, r2, r3, lsl #8
 80066aa:	4323      	orrs	r3, r4

  /* Write to TIMx SMCR */
  TIMx->SMCR = tmpsmcr;
 80066ac:	6083      	str	r3, [r0, #8]
}
 80066ae:	bd10      	pop	{r4, pc}

080066b0 <HAL_TIM_ConfigClockSource>:
  __HAL_LOCK(htim);
 80066b0:	f890 303c 	ldrb.w	r3, [r0, #60]	; 0x3c
 80066b4:	2b01      	cmp	r3, #1
{
 80066b6:	b570      	push	{r4, r5, r6, lr}
 80066b8:	4604      	mov	r4, r0
 80066ba:	f04f 0002 	mov.w	r0, #2
  __HAL_LOCK(htim);
 80066be:	d019      	beq.n	80066f4 <HAL_TIM_ConfigClockSource+0x44>
  htim->State = HAL_TIM_STATE_BUSY;
 80066c0:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
  tmpsmcr = htim->Instance->SMCR;
 80066c4:	6820      	ldr	r0, [r4, #0]
  __HAL_LOCK(htim);
 80066c6:	2301      	movs	r3, #1
 80066c8:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
  tmpsmcr = htim->Instance->SMCR;
 80066cc:	6883      	ldr	r3, [r0, #8]
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
 80066ce:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 80066d2:	f023 0377 	bic.w	r3, r3, #119	; 0x77
  htim->Instance->SMCR = tmpsmcr;
 80066d6:	6083      	str	r3, [r0, #8]
  switch (sClockSourceConfig->ClockSource)
 80066d8:	680b      	ldr	r3, [r1, #0]
 80066da:	2b40      	cmp	r3, #64	; 0x40
 80066dc:	d065      	beq.n	80067aa <HAL_TIM_ConfigClockSource+0xfa>
 80066de:	d815      	bhi.n	800670c <HAL_TIM_ConfigClockSource+0x5c>
 80066e0:	2b10      	cmp	r3, #16
 80066e2:	d00c      	beq.n	80066fe <HAL_TIM_ConfigClockSource+0x4e>
 80066e4:	d807      	bhi.n	80066f6 <HAL_TIM_ConfigClockSource+0x46>
 80066e6:	b153      	cbz	r3, 80066fe <HAL_TIM_ConfigClockSource+0x4e>
  htim->State = HAL_TIM_STATE_READY;
 80066e8:	2301      	movs	r3, #1
  __HAL_UNLOCK(htim);
 80066ea:	2000      	movs	r0, #0
  htim->State = HAL_TIM_STATE_READY;
 80066ec:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  __HAL_UNLOCK(htim);
 80066f0:	f884 003c 	strb.w	r0, [r4, #60]	; 0x3c
}
 80066f4:	bd70      	pop	{r4, r5, r6, pc}
  switch (sClockSourceConfig->ClockSource)
 80066f6:	2b20      	cmp	r3, #32
 80066f8:	d001      	beq.n	80066fe <HAL_TIM_ConfigClockSource+0x4e>
 80066fa:	2b30      	cmp	r3, #48	; 0x30
 80066fc:	d1f4      	bne.n	80066e8 <HAL_TIM_ConfigClockSource+0x38>
  tmpsmcr = TIMx->SMCR;
 80066fe:	6882      	ldr	r2, [r0, #8]
  tmpsmcr |= (InputTriggerSource | TIM_SLAVEMODE_EXTERNAL1);
 8006700:	f043 0307 	orr.w	r3, r3, #7
  tmpsmcr &= ~TIM_SMCR_TS;
 8006704:	f022 0270 	bic.w	r2, r2, #112	; 0x70
  tmpsmcr |= (InputTriggerSource | TIM_SLAVEMODE_EXTERNAL1);
 8006708:	4313      	orrs	r3, r2
 800670a:	e01a      	b.n	8006742 <HAL_TIM_ConfigClockSource+0x92>
  switch (sClockSourceConfig->ClockSource)
 800670c:	2b60      	cmp	r3, #96	; 0x60
 800670e:	d034      	beq.n	800677a <HAL_TIM_ConfigClockSource+0xca>
 8006710:	d819      	bhi.n	8006746 <HAL_TIM_ConfigClockSource+0x96>
 8006712:	2b50      	cmp	r3, #80	; 0x50
 8006714:	d1e8      	bne.n	80066e8 <HAL_TIM_ConfigClockSource+0x38>
      TIM_TI1_ConfigInputStage(htim->Instance,
 8006716:	684a      	ldr	r2, [r1, #4]
 8006718:	68ce      	ldr	r6, [r1, #12]
  tmpccer = TIMx->CCER;
 800671a:	6a01      	ldr	r1, [r0, #32]
  TIMx->CCER &= ~TIM_CCER_CC1E;
 800671c:	6a05      	ldr	r5, [r0, #32]
 800671e:	f025 0501 	bic.w	r5, r5, #1
 8006722:	6205      	str	r5, [r0, #32]
  tmpccmr1 = TIMx->CCMR1;
 8006724:	6983      	ldr	r3, [r0, #24]
  tmpccer &= ~(TIM_CCER_CC1P | TIM_CCER_CC1NP);
 8006726:	f021 010a 	bic.w	r1, r1, #10
  tmpccmr1 &= ~TIM_CCMR1_IC1F;
 800672a:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
  tmpccmr1 |= (TIM_ICFilter << 4U);
 800672e:	ea43 1306 	orr.w	r3, r3, r6, lsl #4
  tmpccer |= TIM_ICPolarity;
 8006732:	430a      	orrs	r2, r1
  TIMx->CCMR1 = tmpccmr1;
 8006734:	6183      	str	r3, [r0, #24]
  TIMx->CCER = tmpccer;
 8006736:	6202      	str	r2, [r0, #32]
  tmpsmcr = TIMx->SMCR;
 8006738:	6883      	ldr	r3, [r0, #8]
  tmpsmcr &= ~TIM_SMCR_TS;
 800673a:	f023 0370 	bic.w	r3, r3, #112	; 0x70
  tmpsmcr |= (InputTriggerSource | TIM_SLAVEMODE_EXTERNAL1);
 800673e:	f043 0357 	orr.w	r3, r3, #87	; 0x57
  TIMx->SMCR = tmpsmcr;
 8006742:	6083      	str	r3, [r0, #8]
 8006744:	e7d0      	b.n	80066e8 <HAL_TIM_ConfigClockSource+0x38>
  switch (sClockSourceConfig->ClockSource)
 8006746:	2b70      	cmp	r3, #112	; 0x70
 8006748:	d00c      	beq.n	8006764 <HAL_TIM_ConfigClockSource+0xb4>
 800674a:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 800674e:	d1cb      	bne.n	80066e8 <HAL_TIM_ConfigClockSource+0x38>
      TIM_ETR_SetConfig(htim->Instance,
 8006750:	68cb      	ldr	r3, [r1, #12]
 8006752:	e9d1 2101 	ldrd	r2, r1, [r1, #4]
 8006756:	f7ff ffa1 	bl	800669c <TIM_ETR_SetConfig>
      htim->Instance->SMCR |= TIM_SMCR_ECE;
 800675a:	6822      	ldr	r2, [r4, #0]
 800675c:	6893      	ldr	r3, [r2, #8]
 800675e:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8006762:	e008      	b.n	8006776 <HAL_TIM_ConfigClockSource+0xc6>
      TIM_ETR_SetConfig(htim->Instance,
 8006764:	68cb      	ldr	r3, [r1, #12]
 8006766:	e9d1 2101 	ldrd	r2, r1, [r1, #4]
 800676a:	f7ff ff97 	bl	800669c <TIM_ETR_SetConfig>
      tmpsmcr = htim->Instance->SMCR;
 800676e:	6822      	ldr	r2, [r4, #0]
 8006770:	6893      	ldr	r3, [r2, #8]
      tmpsmcr |= (TIM_SLAVEMODE_EXTERNAL1 | TIM_CLOCKSOURCE_ETRMODE1);
 8006772:	f043 0377 	orr.w	r3, r3, #119	; 0x77
      htim->Instance->SMCR |= TIM_SMCR_ECE;
 8006776:	6093      	str	r3, [r2, #8]
      break;
 8006778:	e7b6      	b.n	80066e8 <HAL_TIM_ConfigClockSource+0x38>
      TIM_TI2_ConfigInputStage(htim->Instance,
 800677a:	684d      	ldr	r5, [r1, #4]
 800677c:	68ce      	ldr	r6, [r1, #12]
  TIMx->CCER &= ~TIM_CCER_CC2E;
 800677e:	6a01      	ldr	r1, [r0, #32]
 8006780:	f021 0110 	bic.w	r1, r1, #16
 8006784:	6201      	str	r1, [r0, #32]
  tmpccmr1 = TIMx->CCMR1;
 8006786:	6982      	ldr	r2, [r0, #24]
  tmpccer = TIMx->CCER;
 8006788:	6a03      	ldr	r3, [r0, #32]
  tmpccmr1 &= ~TIM_CCMR1_IC2F;
 800678a:	f422 4270 	bic.w	r2, r2, #61440	; 0xf000
  tmpccer &= ~(TIM_CCER_CC2P | TIM_CCER_CC2NP);
 800678e:	f023 03a0 	bic.w	r3, r3, #160	; 0xa0
  tmpccer |= (TIM_ICPolarity << 4U);
 8006792:	ea43 1305 	orr.w	r3, r3, r5, lsl #4
  tmpccmr1 |= (TIM_ICFilter << 12U);
 8006796:	ea42 3206 	orr.w	r2, r2, r6, lsl #12
  TIMx->CCMR1 = tmpccmr1 ;
 800679a:	6182      	str	r2, [r0, #24]
  TIMx->CCER = tmpccer;
 800679c:	6203      	str	r3, [r0, #32]
  tmpsmcr = TIMx->SMCR;
 800679e:	6883      	ldr	r3, [r0, #8]
  tmpsmcr &= ~TIM_SMCR_TS;
 80067a0:	f023 0370 	bic.w	r3, r3, #112	; 0x70
  tmpsmcr |= (InputTriggerSource | TIM_SLAVEMODE_EXTERNAL1);
 80067a4:	f043 0367 	orr.w	r3, r3, #103	; 0x67
 80067a8:	e7cb      	b.n	8006742 <HAL_TIM_ConfigClockSource+0x92>
      TIM_TI1_ConfigInputStage(htim->Instance,
 80067aa:	684a      	ldr	r2, [r1, #4]
 80067ac:	68ce      	ldr	r6, [r1, #12]
  tmpccer = TIMx->CCER;
 80067ae:	6a01      	ldr	r1, [r0, #32]
  TIMx->CCER &= ~TIM_CCER_CC1E;
 80067b0:	6a05      	ldr	r5, [r0, #32]
 80067b2:	f025 0501 	bic.w	r5, r5, #1
 80067b6:	6205      	str	r5, [r0, #32]
  tmpccmr1 = TIMx->CCMR1;
 80067b8:	6983      	ldr	r3, [r0, #24]
  tmpccer &= ~(TIM_CCER_CC1P | TIM_CCER_CC1NP);
 80067ba:	f021 010a 	bic.w	r1, r1, #10
  tmpccmr1 &= ~TIM_CCMR1_IC1F;
 80067be:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
  tmpccmr1 |= (TIM_ICFilter << 4U);
 80067c2:	ea43 1306 	orr.w	r3, r3, r6, lsl #4
  tmpccer |= TIM_ICPolarity;
 80067c6:	430a      	orrs	r2, r1
  TIMx->CCMR1 = tmpccmr1;
 80067c8:	6183      	str	r3, [r0, #24]
  TIMx->CCER = tmpccer;
 80067ca:	6202      	str	r2, [r0, #32]
  tmpsmcr = TIMx->SMCR;
 80067cc:	6883      	ldr	r3, [r0, #8]
  tmpsmcr &= ~TIM_SMCR_TS;
 80067ce:	f023 0370 	bic.w	r3, r3, #112	; 0x70
  tmpsmcr |= (InputTriggerSource | TIM_SLAVEMODE_EXTERNAL1);
 80067d2:	f043 0347 	orr.w	r3, r3, #71	; 0x47
 80067d6:	e7b4      	b.n	8006742 <HAL_TIM_ConfigClockSource+0x92>

080067d8 <TIM_CCxChannelCmd>:
  assert_param(IS_TIM_CHANNELS(Channel));

  tmp = TIM_CCER_CC1E << (Channel & 0x1FU); /* 0x1FU = 31 bits max shift */

  /* Reset the CCxE Bit */
  TIMx->CCER &= ~tmp;
 80067d8:	6a03      	ldr	r3, [r0, #32]
  tmp = TIM_CCER_CC1E << (Channel & 0x1FU); /* 0x1FU = 31 bits max shift */
 80067da:	f001 011f 	and.w	r1, r1, #31
{
 80067de:	b510      	push	{r4, lr}
  tmp = TIM_CCER_CC1E << (Channel & 0x1FU); /* 0x1FU = 31 bits max shift */
 80067e0:	2401      	movs	r4, #1
 80067e2:	408c      	lsls	r4, r1
  TIMx->CCER &= ~tmp;
 80067e4:	ea23 0304 	bic.w	r3, r3, r4
 80067e8:	6203      	str	r3, [r0, #32]

  /* Set or reset the CCxE Bit */
  TIMx->CCER |= (uint32_t)(ChannelState << (Channel & 0x1FU)); /* 0x1FU = 31 bits max shift */
 80067ea:	6a03      	ldr	r3, [r0, #32]
 80067ec:	408a      	lsls	r2, r1
 80067ee:	431a      	orrs	r2, r3
 80067f0:	6202      	str	r2, [r0, #32]
}
 80067f2:	bd10      	pop	{r4, pc}

080067f4 <HAL_TIM_OC_Start_DMA>:
{
 80067f4:	b570      	push	{r4, r5, r6, lr}
 80067f6:	4604      	mov	r4, r0
  if (htim->State == HAL_TIM_STATE_BUSY)
 80067f8:	f890 003d 	ldrb.w	r0, [r0, #61]	; 0x3d
 80067fc:	b2c0      	uxtb	r0, r0
 80067fe:	2802      	cmp	r0, #2
{
 8006800:	460d      	mov	r5, r1
 8006802:	4611      	mov	r1, r2
  if (htim->State == HAL_TIM_STATE_BUSY)
 8006804:	d006      	beq.n	8006814 <HAL_TIM_OC_Start_DMA+0x20>
  else if (htim->State == HAL_TIM_STATE_READY)
 8006806:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
 800680a:	2a01      	cmp	r2, #1
 800680c:	d106      	bne.n	800681c <HAL_TIM_OC_Start_DMA+0x28>
    if ((pData == NULL) && (Length > 0U))
 800680e:	b911      	cbnz	r1, 8006816 <HAL_TIM_OC_Start_DMA+0x22>
 8006810:	b10b      	cbz	r3, 8006816 <HAL_TIM_OC_Start_DMA+0x22>
      return HAL_ERROR;
 8006812:	2001      	movs	r0, #1
}
 8006814:	bd70      	pop	{r4, r5, r6, pc}
      htim->State = HAL_TIM_STATE_BUSY;
 8006816:	2202      	movs	r2, #2
 8006818:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
 800681c:	6822      	ldr	r2, [r4, #0]
  switch (Channel)
 800681e:	2d0c      	cmp	r5, #12
 8006820:	d819      	bhi.n	8006856 <HAL_TIM_OC_Start_DMA+0x62>
 8006822:	e8df f005 	tbb	[pc, r5]
 8006826:	1807      	.short	0x1807
 8006828:	18341818 	.word	0x18341818
 800682c:	18451818 	.word	0x18451818
 8006830:	1818      	.short	0x1818
 8006832:	56          	.byte	0x56
 8006833:	00          	.byte	0x00
      htim->hdma[TIM_DMA_ID_CC1]->XferCpltCallback = TIM_DMADelayPulseCplt;
 8006834:	6a60      	ldr	r0, [r4, #36]	; 0x24
 8006836:	4e2f      	ldr	r6, [pc, #188]	; (80068f4 <HAL_TIM_OC_Start_DMA+0x100>)
 8006838:	63c6      	str	r6, [r0, #60]	; 0x3c
      htim->hdma[TIM_DMA_ID_CC1]->XferHalfCpltCallback = TIM_DMADelayPulseHalfCplt;
 800683a:	4e2f      	ldr	r6, [pc, #188]	; (80068f8 <HAL_TIM_OC_Start_DMA+0x104>)
 800683c:	6406      	str	r6, [r0, #64]	; 0x40
      htim->hdma[TIM_DMA_ID_CC1]->XferErrorCallback = TIM_DMAError ;
 800683e:	4e2f      	ldr	r6, [pc, #188]	; (80068fc <HAL_TIM_OC_Start_DMA+0x108>)
 8006840:	64c6      	str	r6, [r0, #76]	; 0x4c
      if (HAL_DMA_Start_IT(htim->hdma[TIM_DMA_ID_CC1], (uint32_t)pData, (uint32_t)&htim->Instance->CCR1, Length) != HAL_OK)
 8006842:	3234      	adds	r2, #52	; 0x34
 8006844:	f7fd fc2e 	bl	80040a4 <HAL_DMA_Start_IT>
 8006848:	2800      	cmp	r0, #0
 800684a:	d1e2      	bne.n	8006812 <HAL_TIM_OC_Start_DMA+0x1e>
      __HAL_TIM_ENABLE_DMA(htim, TIM_DMA_CC1);
 800684c:	6822      	ldr	r2, [r4, #0]
 800684e:	68d3      	ldr	r3, [r2, #12]
 8006850:	f443 7300 	orr.w	r3, r3, #512	; 0x200
      __HAL_TIM_ENABLE_DMA(htim, TIM_DMA_CC4);
 8006854:	60d3      	str	r3, [r2, #12]
  TIM_CCxChannelCmd(htim->Instance, Channel, TIM_CCx_ENABLE);
 8006856:	2201      	movs	r2, #1
 8006858:	4629      	mov	r1, r5
 800685a:	6820      	ldr	r0, [r4, #0]
 800685c:	f7ff ffbc 	bl	80067d8 <TIM_CCxChannelCmd>
  if (IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)
 8006860:	6823      	ldr	r3, [r4, #0]
 8006862:	4a27      	ldr	r2, [pc, #156]	; (8006900 <HAL_TIM_OC_Start_DMA+0x10c>)
 8006864:	4293      	cmp	r3, r2
 8006866:	d003      	beq.n	8006870 <HAL_TIM_OC_Start_DMA+0x7c>
 8006868:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800686c:	4293      	cmp	r3, r2
 800686e:	d103      	bne.n	8006878 <HAL_TIM_OC_Start_DMA+0x84>
    __HAL_TIM_MOE_ENABLE(htim);
 8006870:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8006872:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 8006876:	645a      	str	r2, [r3, #68]	; 0x44
  tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
 8006878:	689a      	ldr	r2, [r3, #8]
 800687a:	f002 0207 	and.w	r2, r2, #7
  if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 800687e:	2a06      	cmp	r2, #6
    __HAL_TIM_ENABLE(htim);
 8006880:	bf1e      	ittt	ne
 8006882:	681a      	ldrne	r2, [r3, #0]
 8006884:	f042 0201 	orrne.w	r2, r2, #1
 8006888:	601a      	strne	r2, [r3, #0]
  return HAL_OK;
 800688a:	2000      	movs	r0, #0
 800688c:	e7c2      	b.n	8006814 <HAL_TIM_OC_Start_DMA+0x20>
      htim->hdma[TIM_DMA_ID_CC2]->XferCpltCallback = TIM_DMADelayPulseCplt;
 800688e:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 8006890:	4e18      	ldr	r6, [pc, #96]	; (80068f4 <HAL_TIM_OC_Start_DMA+0x100>)
 8006892:	63c6      	str	r6, [r0, #60]	; 0x3c
      htim->hdma[TIM_DMA_ID_CC2]->XferHalfCpltCallback = TIM_DMADelayPulseHalfCplt;
 8006894:	4e18      	ldr	r6, [pc, #96]	; (80068f8 <HAL_TIM_OC_Start_DMA+0x104>)
 8006896:	6406      	str	r6, [r0, #64]	; 0x40
      htim->hdma[TIM_DMA_ID_CC2]->XferErrorCallback = TIM_DMAError ;
 8006898:	4e18      	ldr	r6, [pc, #96]	; (80068fc <HAL_TIM_OC_Start_DMA+0x108>)
 800689a:	64c6      	str	r6, [r0, #76]	; 0x4c
      if (HAL_DMA_Start_IT(htim->hdma[TIM_DMA_ID_CC2], (uint32_t)pData, (uint32_t)&htim->Instance->CCR2, Length) != HAL_OK)
 800689c:	3238      	adds	r2, #56	; 0x38
 800689e:	f7fd fc01 	bl	80040a4 <HAL_DMA_Start_IT>
 80068a2:	2800      	cmp	r0, #0
 80068a4:	d1b5      	bne.n	8006812 <HAL_TIM_OC_Start_DMA+0x1e>
      __HAL_TIM_ENABLE_DMA(htim, TIM_DMA_CC2);
 80068a6:	6822      	ldr	r2, [r4, #0]
 80068a8:	68d3      	ldr	r3, [r2, #12]
 80068aa:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 80068ae:	e7d1      	b.n	8006854 <HAL_TIM_OC_Start_DMA+0x60>
      htim->hdma[TIM_DMA_ID_CC3]->XferCpltCallback = TIM_DMADelayPulseCplt;
 80068b0:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
 80068b2:	4e10      	ldr	r6, [pc, #64]	; (80068f4 <HAL_TIM_OC_Start_DMA+0x100>)
 80068b4:	63c6      	str	r6, [r0, #60]	; 0x3c
      htim->hdma[TIM_DMA_ID_CC3]->XferHalfCpltCallback = TIM_DMADelayPulseHalfCplt;
 80068b6:	4e10      	ldr	r6, [pc, #64]	; (80068f8 <HAL_TIM_OC_Start_DMA+0x104>)
 80068b8:	6406      	str	r6, [r0, #64]	; 0x40
      htim->hdma[TIM_DMA_ID_CC3]->XferErrorCallback = TIM_DMAError ;
 80068ba:	4e10      	ldr	r6, [pc, #64]	; (80068fc <HAL_TIM_OC_Start_DMA+0x108>)
 80068bc:	64c6      	str	r6, [r0, #76]	; 0x4c
      if (HAL_DMA_Start_IT(htim->hdma[TIM_DMA_ID_CC3], (uint32_t)pData, (uint32_t)&htim->Instance->CCR3, Length) != HAL_OK)
 80068be:	323c      	adds	r2, #60	; 0x3c
 80068c0:	f7fd fbf0 	bl	80040a4 <HAL_DMA_Start_IT>
 80068c4:	2800      	cmp	r0, #0
 80068c6:	d1a4      	bne.n	8006812 <HAL_TIM_OC_Start_DMA+0x1e>
      __HAL_TIM_ENABLE_DMA(htim, TIM_DMA_CC3);
 80068c8:	6822      	ldr	r2, [r4, #0]
 80068ca:	68d3      	ldr	r3, [r2, #12]
 80068cc:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
 80068d0:	e7c0      	b.n	8006854 <HAL_TIM_OC_Start_DMA+0x60>
      htim->hdma[TIM_DMA_ID_CC4]->XferCpltCallback = TIM_DMADelayPulseCplt;
 80068d2:	6b20      	ldr	r0, [r4, #48]	; 0x30
 80068d4:	4e07      	ldr	r6, [pc, #28]	; (80068f4 <HAL_TIM_OC_Start_DMA+0x100>)
 80068d6:	63c6      	str	r6, [r0, #60]	; 0x3c
      htim->hdma[TIM_DMA_ID_CC4]->XferHalfCpltCallback = TIM_DMADelayPulseHalfCplt;
 80068d8:	4e07      	ldr	r6, [pc, #28]	; (80068f8 <HAL_TIM_OC_Start_DMA+0x104>)
 80068da:	6406      	str	r6, [r0, #64]	; 0x40
      htim->hdma[TIM_DMA_ID_CC4]->XferErrorCallback = TIM_DMAError ;
 80068dc:	4e07      	ldr	r6, [pc, #28]	; (80068fc <HAL_TIM_OC_Start_DMA+0x108>)
 80068de:	64c6      	str	r6, [r0, #76]	; 0x4c
      if (HAL_DMA_Start_IT(htim->hdma[TIM_DMA_ID_CC4], (uint32_t)pData, (uint32_t)&htim->Instance->CCR4, Length) != HAL_OK)
 80068e0:	3240      	adds	r2, #64	; 0x40
 80068e2:	f7fd fbdf 	bl	80040a4 <HAL_DMA_Start_IT>
 80068e6:	2800      	cmp	r0, #0
 80068e8:	d193      	bne.n	8006812 <HAL_TIM_OC_Start_DMA+0x1e>
      __HAL_TIM_ENABLE_DMA(htim, TIM_DMA_CC4);
 80068ea:	6822      	ldr	r2, [r4, #0]
 80068ec:	68d3      	ldr	r3, [r2, #12]
 80068ee:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
 80068f2:	e7af      	b.n	8006854 <HAL_TIM_OC_Start_DMA+0x60>
 80068f4:	08006265 	.word	0x08006265
 80068f8:	080062a3 	.word	0x080062a3
 80068fc:	08006427 	.word	0x08006427
 8006900:	40010000 	.word	0x40010000

08006904 <HAL_TIM_PWM_Start_DMA>:
 8006904:	f7ff bf76 	b.w	80067f4 <HAL_TIM_OC_Start_DMA>

08006908 <HAL_TIMEx_MasterConfigSynchronization>:
  assert_param(IS_TIM_MASTER_INSTANCE(htim->Instance));
  assert_param(IS_TIM_TRGO_SOURCE(sMasterConfig->MasterOutputTrigger));
  assert_param(IS_TIM_MSM_STATE(sMasterConfig->MasterSlaveMode));

  /* Check input state */
  __HAL_LOCK(htim);
 8006908:	f890 303c 	ldrb.w	r3, [r0, #60]	; 0x3c
 800690c:	2b01      	cmp	r3, #1
{
 800690e:	b530      	push	{r4, r5, lr}
 8006910:	f04f 0302 	mov.w	r3, #2
  __HAL_LOCK(htim);
 8006914:	d035      	beq.n	8006982 <HAL_TIMEx_MasterConfigSynchronization+0x7a>

  /* Change the handler state */
  htim->State = HAL_TIM_STATE_BUSY;
 8006916:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d

  /* Get the TIMx CR2 register value */
  tmpcr2 = htim->Instance->CR2;
 800691a:	6803      	ldr	r3, [r0, #0]
  tmpsmcr = htim->Instance->SMCR;

  /* Reset the MMS Bits */
  tmpcr2 &= ~TIM_CR2_MMS;
  /* Select the TRGO source */
  tmpcr2 |=  sMasterConfig->MasterOutputTrigger;
 800691c:	680d      	ldr	r5, [r1, #0]
  tmpcr2 = htim->Instance->CR2;
 800691e:	685c      	ldr	r4, [r3, #4]
  tmpcr2 &= ~TIM_CR2_MMS;
 8006920:	f024 0470 	bic.w	r4, r4, #112	; 0x70
  __HAL_LOCK(htim);
 8006924:	2201      	movs	r2, #1
  tmpcr2 |=  sMasterConfig->MasterOutputTrigger;
 8006926:	432c      	orrs	r4, r5
  __HAL_LOCK(htim);
 8006928:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
  tmpsmcr = htim->Instance->SMCR;
 800692c:	689a      	ldr	r2, [r3, #8]

  /* Update TIMx CR2 */
  htim->Instance->CR2 = tmpcr2;
 800692e:	605c      	str	r4, [r3, #4]

  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 8006930:	4c15      	ldr	r4, [pc, #84]	; (8006988 <HAL_TIMEx_MasterConfigSynchronization+0x80>)
 8006932:	42a3      	cmp	r3, r4
 8006934:	d01a      	beq.n	800696c <HAL_TIMEx_MasterConfigSynchronization+0x64>
 8006936:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800693a:	d017      	beq.n	800696c <HAL_TIMEx_MasterConfigSynchronization+0x64>
 800693c:	f5a4 447c 	sub.w	r4, r4, #64512	; 0xfc00
 8006940:	42a3      	cmp	r3, r4
 8006942:	d013      	beq.n	800696c <HAL_TIMEx_MasterConfigSynchronization+0x64>
 8006944:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 8006948:	42a3      	cmp	r3, r4
 800694a:	d00f      	beq.n	800696c <HAL_TIMEx_MasterConfigSynchronization+0x64>
 800694c:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 8006950:	42a3      	cmp	r3, r4
 8006952:	d00b      	beq.n	800696c <HAL_TIMEx_MasterConfigSynchronization+0x64>
 8006954:	f504 4478 	add.w	r4, r4, #63488	; 0xf800
 8006958:	42a3      	cmp	r3, r4
 800695a:	d007      	beq.n	800696c <HAL_TIMEx_MasterConfigSynchronization+0x64>
 800695c:	f504 5470 	add.w	r4, r4, #15360	; 0x3c00
 8006960:	42a3      	cmp	r3, r4
 8006962:	d003      	beq.n	800696c <HAL_TIMEx_MasterConfigSynchronization+0x64>
 8006964:	f5a4 3494 	sub.w	r4, r4, #75776	; 0x12800
 8006968:	42a3      	cmp	r3, r4
 800696a:	d104      	bne.n	8006976 <HAL_TIMEx_MasterConfigSynchronization+0x6e>
  {
    /* Reset the MSM Bit */
    tmpsmcr &= ~TIM_SMCR_MSM;
    /* Set master mode */
    tmpsmcr |= sMasterConfig->MasterSlaveMode;
 800696c:	6849      	ldr	r1, [r1, #4]
    tmpsmcr &= ~TIM_SMCR_MSM;
 800696e:	f022 0280 	bic.w	r2, r2, #128	; 0x80
    tmpsmcr |= sMasterConfig->MasterSlaveMode;
 8006972:	430a      	orrs	r2, r1

    /* Update TIMx SMCR */
    htim->Instance->SMCR = tmpsmcr;
 8006974:	609a      	str	r2, [r3, #8]
  }

  /* Change the htim state */
  htim->State = HAL_TIM_STATE_READY;
 8006976:	2301      	movs	r3, #1
 8006978:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d

  __HAL_UNLOCK(htim);
 800697c:	2300      	movs	r3, #0
 800697e:	f880 303c 	strb.w	r3, [r0, #60]	; 0x3c
  __HAL_LOCK(htim);
 8006982:	4618      	mov	r0, r3

  return HAL_OK;
}
 8006984:	bd30      	pop	{r4, r5, pc}
 8006986:	bf00      	nop
 8006988:	40010000 	.word	0x40010000

0800698c <HAL_TIMEx_CommutCallback>:
 800698c:	4770      	bx	lr

0800698e <HAL_TIMEx_BreakCallback>:
 800698e:	4770      	bx	lr

08006990 <FMC_SDRAM_Init>:
  * @param  Device Pointer to SDRAM device instance
  * @param  Init Pointer to SDRAM Initialization structure   
  * @retval HAL status
  */
HAL_StatusTypeDef FMC_SDRAM_Init(FMC_SDRAM_TypeDef *Device, FMC_SDRAM_InitTypeDef *Init)
{
 8006990:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8006994:	6a4a      	ldr	r2, [r1, #36]	; 0x24
 8006996:	e9d1 4307 	ldrd	r4, r3, [r1, #28]
 800699a:	e9d1 5801 	ldrd	r5, r8, [r1, #4]
 800699e:	e9d1 ec03 	ldrd	lr, ip, [r1, #12]
 80069a2:	e9d1 7605 	ldrd	r7, r6, [r1, #20]
  assert_param(IS_FMC_SDCLOCK_PERIOD(Init->SDClockPeriod));
  assert_param(IS_FMC_READ_BURST(Init->ReadBurst));
  assert_param(IS_FMC_READPIPE_DELAY(Init->ReadPipeDelay));   

  /* Set SDRAM bank configuration parameters */
  if (Init->SDBank != FMC_SDRAM_BANK2) 
 80069a6:	6809      	ldr	r1, [r1, #0]
 80069a8:	2901      	cmp	r1, #1
 80069aa:	ea43 0304 	orr.w	r3, r3, r4
 80069ae:	4912      	ldr	r1, [pc, #72]	; (80069f8 <FMC_SDRAM_Init+0x68>)
  {    
    tmpr1 = Device->SDCR[FMC_SDRAM_BANK1];
 80069b0:	6804      	ldr	r4, [r0, #0]
  if (Init->SDBank != FMC_SDRAM_BANK2) 
 80069b2:	d00f      	beq.n	80069d4 <FMC_SDRAM_Init+0x44>
    tmpr1 &= ((uint32_t)~(FMC_SDCR1_NC  | FMC_SDCR1_NR | FMC_SDCR1_MWID | \
                         FMC_SDCR1_NB  | FMC_SDCR1_CAS | FMC_SDCR1_WP | \
                         FMC_SDCR1_SDCLK | FMC_SDCR1_RBURST | FMC_SDCR1_RPIPE));
  
  
    tmpr1 |= (uint32_t)(Init->ColumnBitsNumber   |\
 80069b4:	431a      	orrs	r2, r3
 80069b6:	432a      	orrs	r2, r5
 80069b8:	ea42 0308 	orr.w	r3, r2, r8
 80069bc:	ea43 030e 	orr.w	r3, r3, lr
 80069c0:	ea43 030c 	orr.w	r3, r3, ip
 80069c4:	433b      	orrs	r3, r7
    tmpr1 &= ((uint32_t)~(FMC_SDCR1_NC  | FMC_SDCR1_NR | FMC_SDCR1_MWID | \
 80069c6:	4021      	ands	r1, r4
    tmpr1 |= (uint32_t)(Init->ColumnBitsNumber   |\
 80069c8:	4333      	orrs	r3, r6
 80069ca:	430b      	orrs	r3, r1
                                               Init->WriteProtection    |\
                                               Init->SDClockPeriod      |\
                                               Init->ReadBurst          |\
                                               Init->ReadPipeDelay
                                               );
    Device->SDCR[FMC_SDRAM_BANK1] = tmpr1;
 80069cc:	6003      	str	r3, [r0, #0]
    Device->SDCR[FMC_SDRAM_BANK1] = tmpr1;
    Device->SDCR[FMC_SDRAM_BANK2] = tmpr2;
  }  
  
  return HAL_OK;
}
 80069ce:	2000      	movs	r0, #0
 80069d0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    tmpr1 |= (uint32_t)(Init->SDClockPeriod      |\
 80069d4:	4313      	orrs	r3, r2
    tmpr2 = Device->SDCR[FMC_SDRAM_BANK2];
 80069d6:	6842      	ldr	r2, [r0, #4]
    tmpr2 &= ((uint32_t)~(FMC_SDCR1_NC  | FMC_SDCR1_NR | FMC_SDCR1_MWID | \
 80069d8:	4011      	ands	r1, r2
    tmpr2 |= (uint32_t)(Init->ColumnBitsNumber   |\
 80069da:	ea45 0208 	orr.w	r2, r5, r8
 80069de:	ea42 020e 	orr.w	r2, r2, lr
 80069e2:	ea42 020c 	orr.w	r2, r2, ip
 80069e6:	433a      	orrs	r2, r7
    tmpr1 &= ((uint32_t)~(FMC_SDCR1_SDCLK | FMC_SDCR1_RBURST | FMC_SDCR1_RPIPE));
 80069e8:	f424 44f8 	bic.w	r4, r4, #31744	; 0x7c00
    tmpr2 |= (uint32_t)(Init->ColumnBitsNumber   |\
 80069ec:	4332      	orrs	r2, r6
    tmpr1 |= (uint32_t)(Init->SDClockPeriod      |\
 80069ee:	4323      	orrs	r3, r4
    tmpr2 |= (uint32_t)(Init->ColumnBitsNumber   |\
 80069f0:	430a      	orrs	r2, r1
    Device->SDCR[FMC_SDRAM_BANK1] = tmpr1;
 80069f2:	6003      	str	r3, [r0, #0]
    Device->SDCR[FMC_SDRAM_BANK2] = tmpr2;
 80069f4:	6042      	str	r2, [r0, #4]
 80069f6:	e7ea      	b.n	80069ce <FMC_SDRAM_Init+0x3e>
 80069f8:	ffff8000 	.word	0xffff8000

080069fc <FMC_SDRAM_Timing_Init>:
  * @param  Timing Pointer to SDRAM Timing structure
  * @param  Bank SDRAM bank number   
  * @retval HAL status
  */
HAL_StatusTypeDef FMC_SDRAM_Timing_Init(FMC_SDRAM_TypeDef *Device, FMC_SDRAM_TimingTypeDef *Timing, uint32_t Bank)
{
 80069fc:	68cb      	ldr	r3, [r1, #12]
 80069fe:	b5f0      	push	{r4, r5, r6, r7, lr}
 8006a00:	680c      	ldr	r4, [r1, #0]
 8006a02:	688e      	ldr	r6, [r1, #8]
 8006a04:	690d      	ldr	r5, [r1, #16]
 8006a06:	1e5f      	subs	r7, r3, #1
 8006a08:	694b      	ldr	r3, [r1, #20]
 8006a0a:	f104 3cff 	add.w	ip, r4, #4294967295
 8006a0e:	684c      	ldr	r4, [r1, #4]
 8006a10:	6989      	ldr	r1, [r1, #24]
 8006a12:	3b01      	subs	r3, #1
 8006a14:	051b      	lsls	r3, r3, #20
 8006a16:	3c01      	subs	r4, #1
 8006a18:	3e01      	subs	r6, #1
 8006a1a:	3d01      	subs	r5, #1
 8006a1c:	3901      	subs	r1, #1
  assert_param(IS_FMC_RP_DELAY(Timing->RPDelay));
  assert_param(IS_FMC_RCD_DELAY(Timing->RCDDelay));
  assert_param(IS_FMC_SDRAM_BANK(Bank));
  
  /* Set SDRAM device timing parameters */ 
  if (Bank != FMC_SDRAM_BANK2) 
 8006a1e:	2a01      	cmp	r2, #1
 8006a20:	ea4f 1404 	mov.w	r4, r4, lsl #4
 8006a24:	ea4f 2606 	mov.w	r6, r6, lsl #8
 8006a28:	ea4f 4505 	mov.w	r5, r5, lsl #16
 8006a2c:	ea4f 6101 	mov.w	r1, r1, lsl #24
 8006a30:	ea43 3307 	orr.w	r3, r3, r7, lsl #12
 8006a34:	d00c      	beq.n	8006a50 <FMC_SDRAM_Timing_Init+0x54>
    /* Clear TMRD, TXSR, TRAS, TRC, TWR, TRP and TRCD bits */
    tmpr1 &= ((uint32_t)~(FMC_SDTR1_TMRD  | FMC_SDTR1_TXSR | FMC_SDTR1_TRAS | \
                          FMC_SDTR1_TRC  | FMC_SDTR1_TWR | FMC_SDTR1_TRP | \
                          FMC_SDTR1_TRCD));
    
    tmpr1 |= (uint32_t)(((Timing->LoadToActiveDelay)-1U)           |\
 8006a36:	ea43 030c 	orr.w	r3, r3, ip
 8006a3a:	4323      	orrs	r3, r4
    tmpr1 = Device->SDTR[FMC_SDRAM_BANK1];
 8006a3c:	6882      	ldr	r2, [r0, #8]
    tmpr1 |= (uint32_t)(((Timing->LoadToActiveDelay)-1U)           |\
 8006a3e:	4333      	orrs	r3, r6
 8006a40:	432b      	orrs	r3, r5
    tmpr1 &= ((uint32_t)~(FMC_SDTR1_TMRD  | FMC_SDTR1_TXSR | FMC_SDTR1_TRAS | \
 8006a42:	f002 4270 	and.w	r2, r2, #4026531840	; 0xf0000000
    tmpr1 |= (uint32_t)(((Timing->LoadToActiveDelay)-1U)           |\
 8006a46:	430b      	orrs	r3, r1
 8006a48:	4313      	orrs	r3, r2
                       (((Timing->SelfRefreshTime)-1U) << 8U)      |\
                       (((Timing->RowCycleDelay)-1U) << 12U)       |\
                       (((Timing->WriteRecoveryTime)-1U) <<16U)    |\
                       (((Timing->RPDelay)-1U) << 20U)             |\
                       (((Timing->RCDDelay)-1U) << 24U));
    Device->SDTR[FMC_SDRAM_BANK1] = tmpr1;
 8006a4a:	6083      	str	r3, [r0, #8]

    Device->SDTR[FMC_SDRAM_BANK1] = tmpr1;
    Device->SDTR[FMC_SDRAM_BANK2] = tmpr2;
  }
  return HAL_OK;
}
 8006a4c:	2000      	movs	r0, #0
 8006a4e:	bdf0      	pop	{r4, r5, r6, r7, pc}
    tmpr1 = Device->SDTR[FMC_SDRAM_BANK1];
 8006a50:	6887      	ldr	r7, [r0, #8]
    tmpr1 &= ((uint32_t)~(FMC_SDTR1_TRC | FMC_SDTR1_TRP));
 8006a52:	f427 0770 	bic.w	r7, r7, #15728640	; 0xf00000
 8006a56:	f427 4770 	bic.w	r7, r7, #61440	; 0xf000
    tmpr2 |= (uint32_t)((((Timing->LoadToActiveDelay)-1U)           |\
 8006a5a:	ea44 0206 	orr.w	r2, r4, r6
    tmpr1 |= (uint32_t)((((Timing->RowCycleDelay)-1U) << 12U)       |\
 8006a5e:	433b      	orrs	r3, r7
    tmpr2 |= (uint32_t)((((Timing->LoadToActiveDelay)-1U)           |\
 8006a60:	ea42 020c 	orr.w	r2, r2, ip
    tmpr2 = Device->SDTR[FMC_SDRAM_BANK2];
 8006a64:	68c7      	ldr	r7, [r0, #12]
    Device->SDTR[FMC_SDRAM_BANK1] = tmpr1;
 8006a66:	6083      	str	r3, [r0, #8]
    tmpr2 |= (uint32_t)((((Timing->LoadToActiveDelay)-1U)           |\
 8006a68:	432a      	orrs	r2, r5
    tmpr2 &= ((uint32_t)~(FMC_SDTR1_TMRD  | FMC_SDTR1_TXSR | FMC_SDTR1_TRAS | \
 8006a6a:	f007 4770 	and.w	r7, r7, #4026531840	; 0xf0000000
    tmpr2 |= (uint32_t)((((Timing->LoadToActiveDelay)-1U)           |\
 8006a6e:	430a      	orrs	r2, r1
 8006a70:	433a      	orrs	r2, r7
    Device->SDTR[FMC_SDRAM_BANK2] = tmpr2;
 8006a72:	60c2      	str	r2, [r0, #12]
 8006a74:	e7ea      	b.n	8006a4c <FMC_SDRAM_Timing_Init+0x50>

08006a76 <FMC_SDRAM_SendCommand>:
  * @param  Timing Pointer to SDRAM Timing structure
  * @param  Timeout Timeout wait value
  * @retval HAL state
  */  
HAL_StatusTypeDef FMC_SDRAM_SendCommand(FMC_SDRAM_TypeDef *Device, FMC_SDRAM_CommandTypeDef *Command, uint32_t Timeout)
{
 8006a76:	b573      	push	{r0, r1, r4, r5, r6, lr}
  __IO uint32_t tmpr = 0U;
 8006a78:	2300      	movs	r3, #0
 8006a7a:	9301      	str	r3, [sp, #4]
{
 8006a7c:	4615      	mov	r5, r2
  assert_param(IS_FMC_COMMAND_TARGET(Command->CommandTarget));
  assert_param(IS_FMC_AUTOREFRESH_NUMBER(Command->AutoRefreshNumber));
  assert_param(IS_FMC_MODE_REGISTER(Command->ModeRegisterDefinition));  

  /* Set command register */
  tmpr = (uint32_t)((Command->CommandMode)                  |\
 8006a7e:	e9d1 3200 	ldrd	r3, r2, [r1]
 8006a82:	4313      	orrs	r3, r2
                    (Command->CommandTarget)                |\
                    (((Command->AutoRefreshNumber)-1U) << 5U) |\
                    ((Command->ModeRegisterDefinition) << 9U)
 8006a84:	68ca      	ldr	r2, [r1, #12]
  tmpr = (uint32_t)((Command->CommandMode)                  |\
 8006a86:	ea43 2342 	orr.w	r3, r3, r2, lsl #9
                    (((Command->AutoRefreshNumber)-1U) << 5U) |\
 8006a8a:	688a      	ldr	r2, [r1, #8]
 8006a8c:	3a01      	subs	r2, #1
  tmpr = (uint32_t)((Command->CommandMode)                  |\
 8006a8e:	ea43 1342 	orr.w	r3, r3, r2, lsl #5
 8006a92:	9301      	str	r3, [sp, #4]
                    );
    
  Device->SDCMR = tmpr;
 8006a94:	9b01      	ldr	r3, [sp, #4]
 8006a96:	6103      	str	r3, [r0, #16]
{
 8006a98:	4604      	mov	r4, r0

  /* Get tick */ 
  tickstart = HAL_GetTick();
 8006a9a:	f7fd f9dd 	bl	8003e58 <HAL_GetTick>
 8006a9e:	4606      	mov	r6, r0

  /* Wait until command is send */
  while(HAL_IS_BIT_SET(Device->SDSR, FMC_SDSR_BUSY))
 8006aa0:	69a0      	ldr	r0, [r4, #24]
 8006aa2:	f010 0020 	ands.w	r0, r0, #32
 8006aa6:	d003      	beq.n	8006ab0 <FMC_SDRAM_SendCommand+0x3a>
  {
    /* Check for the Timeout */
    if(Timeout != HAL_MAX_DELAY)
 8006aa8:	1c6b      	adds	r3, r5, #1
 8006aaa:	d0f9      	beq.n	8006aa0 <FMC_SDRAM_SendCommand+0x2a>
    {
      if((Timeout == 0U)||((HAL_GetTick() - tickstart ) > Timeout))
 8006aac:	b915      	cbnz	r5, 8006ab4 <FMC_SDRAM_SendCommand+0x3e>
      {
        return HAL_TIMEOUT;
 8006aae:	2003      	movs	r0, #3
      }
    }
  }

  return HAL_OK;
}
 8006ab0:	b002      	add	sp, #8
 8006ab2:	bd70      	pop	{r4, r5, r6, pc}
      if((Timeout == 0U)||((HAL_GetTick() - tickstart ) > Timeout))
 8006ab4:	f7fd f9d0 	bl	8003e58 <HAL_GetTick>
 8006ab8:	1b80      	subs	r0, r0, r6
 8006aba:	42a8      	cmp	r0, r5
 8006abc:	d9f0      	bls.n	8006aa0 <FMC_SDRAM_SendCommand+0x2a>
 8006abe:	e7f6      	b.n	8006aae <FMC_SDRAM_SendCommand+0x38>

08006ac0 <FMC_SDRAM_ProgramRefreshRate>:
  /* Check the parameters */
  assert_param(IS_FMC_SDRAM_DEVICE(Device));
  assert_param(IS_FMC_REFRESH_RATE(RefreshRate));
  
  /* Set the refresh rate in command register */
  Device->SDRTR |= (RefreshRate<<1U);
 8006ac0:	6943      	ldr	r3, [r0, #20]
 8006ac2:	ea43 0141 	orr.w	r1, r3, r1, lsl #1
 8006ac6:	6141      	str	r1, [r0, #20]
  
  return HAL_OK;   
}
 8006ac8:	2000      	movs	r0, #0
 8006aca:	4770      	bx	lr

08006acc <osKernelInitialize>:
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 8006acc:	f3ef 8305 	mrs	r3, IPSR
/*---------------------------------------------------------------------------*/

osStatus_t osKernelInitialize (void) {
  osStatus_t stat;

  if (IS_IRQ()) {
 8006ad0:	b113      	cbz	r3, 8006ad8 <osKernelInitialize+0xc>
    stat = osErrorISR;
 8006ad2:	f06f 0005 	mvn.w	r0, #5
 8006ad6:	4770      	bx	lr
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8006ad8:	f3ef 8210 	mrs	r2, PRIMASK
 8006adc:	4b07      	ldr	r3, [pc, #28]	; (8006afc <osKernelInitialize+0x30>)
  if (IS_IRQ()) {
 8006ade:	b912      	cbnz	r2, 8006ae6 <osKernelInitialize+0x1a>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 8006ae0:	f3ef 8211 	mrs	r2, BASEPRI
 8006ae4:	b112      	cbz	r2, 8006aec <osKernelInitialize+0x20>
 8006ae6:	681a      	ldr	r2, [r3, #0]
 8006ae8:	2a02      	cmp	r2, #2
 8006aea:	d0f2      	beq.n	8006ad2 <osKernelInitialize+0x6>
  }
  else {
    if (KernelState == osKernelInactive) {
 8006aec:	6818      	ldr	r0, [r3, #0]
 8006aee:	b910      	cbnz	r0, 8006af6 <osKernelInitialize+0x2a>
      #if defined(USE_FREERTOS_HEAP_5) && (HEAP_5_REGION_SETUP == 1)
        vPortDefineHeapRegions (configHEAP_5_REGIONS);
      #endif
      KernelState = osKernelReady;
 8006af0:	2201      	movs	r2, #1
 8006af2:	601a      	str	r2, [r3, #0]
 8006af4:	4770      	bx	lr
      stat = osOK;
    } else {
      stat = osError;
 8006af6:	f04f 30ff 	mov.w	r0, #4294967295
    }
  }

  return (stat);
}
 8006afa:	4770      	bx	lr
 8006afc:	20001880 	.word	0x20001880

08006b00 <osKernelStart>:
  }

  return (state);
}

osStatus_t osKernelStart (void) {
 8006b00:	b508      	push	{r3, lr}
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 8006b02:	f3ef 8305 	mrs	r3, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
 8006b06:	b113      	cbz	r3, 8006b0e <osKernelStart+0xe>
    stat = osErrorISR;
 8006b08:	f06f 0005 	mvn.w	r0, #5
      stat = osError;
    }
  }

  return (stat);
}
 8006b0c:	bd08      	pop	{r3, pc}
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8006b0e:	f3ef 8210 	mrs	r2, PRIMASK
 8006b12:	4b0a      	ldr	r3, [pc, #40]	; (8006b3c <osKernelStart+0x3c>)
  if (IS_IRQ()) {
 8006b14:	b912      	cbnz	r2, 8006b1c <osKernelStart+0x1c>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 8006b16:	f3ef 8211 	mrs	r2, BASEPRI
 8006b1a:	b112      	cbz	r2, 8006b22 <osKernelStart+0x22>
 8006b1c:	681a      	ldr	r2, [r3, #0]
 8006b1e:	2a02      	cmp	r2, #2
 8006b20:	d0f2      	beq.n	8006b08 <osKernelStart+0x8>
    if (KernelState == osKernelReady) {
 8006b22:	681a      	ldr	r2, [r3, #0]
 8006b24:	2a01      	cmp	r2, #1
 8006b26:	d105      	bne.n	8006b34 <osKernelStart+0x34>
      KernelState = osKernelRunning;
 8006b28:	2202      	movs	r2, #2
 8006b2a:	601a      	str	r2, [r3, #0]
      vTaskStartScheduler();
 8006b2c:	f001 fbb0 	bl	8008290 <vTaskStartScheduler>
      stat = osOK;
 8006b30:	2000      	movs	r0, #0
 8006b32:	e7eb      	b.n	8006b0c <osKernelStart+0xc>
      stat = osError;
 8006b34:	f04f 30ff 	mov.w	r0, #4294967295
  return (stat);
 8006b38:	e7e8      	b.n	8006b0c <osKernelStart+0xc>
 8006b3a:	bf00      	nop
 8006b3c:	20001880 	.word	0x20001880

08006b40 <osThreadNew>:
  return (configCPU_CLOCK_HZ);
}

/*---------------------------------------------------------------------------*/

osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 8006b40:	b5f0      	push	{r4, r5, r6, r7, lr}
 8006b42:	b087      	sub	sp, #28
 8006b44:	4614      	mov	r4, r2
  uint32_t stack;
  TaskHandle_t hTask;
  UBaseType_t prio;
  int32_t mem;

  hTask = NULL;
 8006b46:	2200      	movs	r2, #0
osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 8006b48:	460b      	mov	r3, r1
  hTask = NULL;
 8006b4a:	9205      	str	r2, [sp, #20]
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 8006b4c:	f3ef 8205 	mrs	r2, IPSR

  if (!IS_IRQ() && (func != NULL)) {
 8006b50:	bb32      	cbnz	r2, 8006ba0 <osThreadNew+0x60>
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8006b52:	f3ef 8210 	mrs	r2, PRIMASK
 8006b56:	b912      	cbnz	r2, 8006b5e <osThreadNew+0x1e>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 8006b58:	f3ef 8211 	mrs	r2, BASEPRI
 8006b5c:	b11a      	cbz	r2, 8006b66 <osThreadNew+0x26>
 8006b5e:	4a22      	ldr	r2, [pc, #136]	; (8006be8 <osThreadNew+0xa8>)
 8006b60:	6812      	ldr	r2, [r2, #0]
 8006b62:	2a02      	cmp	r2, #2
 8006b64:	d01c      	beq.n	8006ba0 <osThreadNew+0x60>
 8006b66:	b1d8      	cbz	r0, 8006ba0 <osThreadNew+0x60>
    prio  = (UBaseType_t)osPriorityNormal;

    name = NULL;
    mem  = -1;

    if (attr != NULL) {
 8006b68:	2c00      	cmp	r4, #0
 8006b6a:	d036      	beq.n	8006bda <osThreadNew+0x9a>
      if (attr->name != NULL) {
        name = attr->name;
      }
      if (attr->priority != osPriorityNone) {
 8006b6c:	69a5      	ldr	r5, [r4, #24]
      if (attr->name != NULL) {
 8006b6e:	6821      	ldr	r1, [r4, #0]
 8006b70:	2d00      	cmp	r5, #0
 8006b72:	bf08      	it	eq
 8006b74:	2518      	moveq	r5, #24
        prio = (UBaseType_t)attr->priority;
      }

      if ((prio < osPriorityIdle) || (prio > osPriorityISR) || ((attr->attr_bits & osThreadJoinable) == osThreadJoinable)) {
 8006b76:	1e6a      	subs	r2, r5, #1
 8006b78:	2a37      	cmp	r2, #55	; 0x37
 8006b7a:	462f      	mov	r7, r5
 8006b7c:	d831      	bhi.n	8006be2 <osThreadNew+0xa2>
 8006b7e:	6862      	ldr	r2, [r4, #4]
 8006b80:	07d2      	lsls	r2, r2, #31
 8006b82:	d42e      	bmi.n	8006be2 <osThreadNew+0xa2>
        return (NULL);
      }

      if (attr->stack_size > 0U) {
 8006b84:	6966      	ldr	r6, [r4, #20]
 8006b86:	b176      	cbz	r6, 8006ba6 <osThreadNew+0x66>
        /* In FreeRTOS stack is not in bytes, but in sizeof(StackType_t) which is 4 on ARM ports.       */
        /* Stack size should be therefore 4 byte aligned in order to avoid division caused side effects */
        stack = attr->stack_size / sizeof(StackType_t);
 8006b88:	08b2      	lsrs	r2, r6, #2
 8006b8a:	e9d4 ce02 	ldrd	ip, lr, [r4, #8]
      }

      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 8006b8e:	f1bc 0f00 	cmp.w	ip, #0
 8006b92:	d00a      	beq.n	8006baa <osThreadNew+0x6a>
 8006b94:	f1be 0f5f 	cmp.w	lr, #95	; 0x5f
 8006b98:	d902      	bls.n	8006ba0 <osThreadNew+0x60>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 8006b9a:	6924      	ldr	r4, [r4, #16]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 8006b9c:	b104      	cbz	r4, 8006ba0 <osThreadNew+0x60>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 8006b9e:	b9ae      	cbnz	r6, 8006bcc <osThreadNew+0x8c>
        }
      }
    }
  }

  return ((osThreadId_t)hTask);
 8006ba0:	9805      	ldr	r0, [sp, #20]
}
 8006ba2:	b007      	add	sp, #28
 8006ba4:	bdf0      	pop	{r4, r5, r6, r7, pc}
    stack = configMINIMAL_STACK_SIZE;
 8006ba6:	2280      	movs	r2, #128	; 0x80
 8006ba8:	e7ef      	b.n	8006b8a <osThreadNew+0x4a>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) && (attr->stack_mem == NULL)) {
 8006baa:	f1be 0f00 	cmp.w	lr, #0
 8006bae:	d1f7      	bne.n	8006ba0 <osThreadNew+0x60>
      if (mem == 0) {
 8006bb0:	6924      	ldr	r4, [r4, #16]
 8006bb2:	2c00      	cmp	r4, #0
 8006bb4:	d1f4      	bne.n	8006ba0 <osThreadNew+0x60>
        if (xTaskCreate ((TaskFunction_t)func, name, (uint16_t)stack, argument, prio, &hTask) != pdPASS) {
 8006bb6:	ac05      	add	r4, sp, #20
 8006bb8:	e9cd 7400 	strd	r7, r4, [sp]
 8006bbc:	b292      	uxth	r2, r2
 8006bbe:	f001 fb39 	bl	8008234 <xTaskCreate>
 8006bc2:	2801      	cmp	r0, #1
          hTask = NULL;
 8006bc4:	bf1c      	itt	ne
 8006bc6:	2300      	movne	r3, #0
 8006bc8:	9305      	strne	r3, [sp, #20]
 8006bca:	e7e9      	b.n	8006ba0 <osThreadNew+0x60>
      hTask = xTaskCreateStatic ((TaskFunction_t)func, name, stack, argument, prio, (StackType_t  *)attr->stack_mem,
 8006bcc:	e9cd 4c01 	strd	r4, ip, [sp, #4]
 8006bd0:	9500      	str	r5, [sp, #0]
 8006bd2:	f001 faf7 	bl	80081c4 <xTaskCreateStatic>
 8006bd6:	9005      	str	r0, [sp, #20]
 8006bd8:	e7e2      	b.n	8006ba0 <osThreadNew+0x60>
    prio  = (UBaseType_t)osPriorityNormal;
 8006bda:	2718      	movs	r7, #24
    stack = configMINIMAL_STACK_SIZE;
 8006bdc:	2280      	movs	r2, #128	; 0x80
    name = NULL;
 8006bde:	4621      	mov	r1, r4
 8006be0:	e7e9      	b.n	8006bb6 <osThreadNew+0x76>
        return (NULL);
 8006be2:	2000      	movs	r0, #0
 8006be4:	e7dd      	b.n	8006ba2 <osThreadNew+0x62>
 8006be6:	bf00      	nop
 8006be8:	20001880 	.word	0x20001880

08006bec <osSemaphoreNew>:
  return (stat);
}

/*---------------------------------------------------------------------------*/

osSemaphoreId_t osSemaphoreNew (uint32_t max_count, uint32_t initial_count, const osSemaphoreAttr_t *attr) {
 8006bec:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8006bee:	460e      	mov	r6, r1
 8006bf0:	4615      	mov	r5, r2
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 8006bf2:	f3ef 8305 	mrs	r3, IPSR
  const char *name;
  #endif

  hSemaphore = NULL;

  if (!IS_IRQ() && (max_count > 0U) && (initial_count <= max_count)) {
 8006bf6:	b11b      	cbz	r3, 8006c00 <osSemaphoreNew+0x14>
        }

        if ((hSemaphore != NULL) && (initial_count != 0U)) {
          if (xSemaphoreGive (hSemaphore) != pdPASS) {
            vSemaphoreDelete (hSemaphore);
            hSemaphore = NULL;
 8006bf8:	2400      	movs	r4, #0
      #endif
    }
  }

  return ((osSemaphoreId_t)hSemaphore);
}
 8006bfa:	4620      	mov	r0, r4
 8006bfc:	b002      	add	sp, #8
 8006bfe:	bd70      	pop	{r4, r5, r6, pc}
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8006c00:	f3ef 8310 	mrs	r3, PRIMASK
  if (!IS_IRQ() && (max_count > 0U) && (initial_count <= max_count)) {
 8006c04:	b913      	cbnz	r3, 8006c0c <osSemaphoreNew+0x20>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 8006c06:	f3ef 8311 	mrs	r3, BASEPRI
 8006c0a:	b11b      	cbz	r3, 8006c14 <osSemaphoreNew+0x28>
 8006c0c:	4b21      	ldr	r3, [pc, #132]	; (8006c94 <osSemaphoreNew+0xa8>)
 8006c0e:	681b      	ldr	r3, [r3, #0]
 8006c10:	2b02      	cmp	r3, #2
 8006c12:	d0f1      	beq.n	8006bf8 <osSemaphoreNew+0xc>
 8006c14:	2800      	cmp	r0, #0
 8006c16:	d0ef      	beq.n	8006bf8 <osSemaphoreNew+0xc>
 8006c18:	42b0      	cmp	r0, r6
 8006c1a:	d3ed      	bcc.n	8006bf8 <osSemaphoreNew+0xc>
    if (attr != NULL) {
 8006c1c:	b1ed      	cbz	r5, 8006c5a <osSemaphoreNew+0x6e>
 8006c1e:	e9d5 3202 	ldrd	r3, r2, [r5, #8]
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticSemaphore_t))) {
 8006c22:	b1c3      	cbz	r3, 8006c56 <osSemaphoreNew+0x6a>
 8006c24:	2a4f      	cmp	r2, #79	; 0x4f
 8006c26:	d9e7      	bls.n	8006bf8 <osSemaphoreNew+0xc>
      if (max_count == 1U) {
 8006c28:	2801      	cmp	r0, #1
 8006c2a:	d126      	bne.n	8006c7a <osSemaphoreNew+0x8e>
          hSemaphore = xSemaphoreCreateBinaryStatic ((StaticSemaphore_t *)attr->cb_mem);
 8006c2c:	2203      	movs	r2, #3
 8006c2e:	9200      	str	r2, [sp, #0]
 8006c30:	2200      	movs	r2, #0
 8006c32:	4611      	mov	r1, r2
 8006c34:	f000 fd2e 	bl	8007694 <xQueueGenericCreateStatic>
          hSemaphore = xSemaphoreCreateBinary();
 8006c38:	4604      	mov	r4, r0
        if ((hSemaphore != NULL) && (initial_count != 0U)) {
 8006c3a:	2800      	cmp	r0, #0
 8006c3c:	d0dc      	beq.n	8006bf8 <osSemaphoreNew+0xc>
 8006c3e:	b1ce      	cbz	r6, 8006c74 <osSemaphoreNew+0x88>
          if (xSemaphoreGive (hSemaphore) != pdPASS) {
 8006c40:	2300      	movs	r3, #0
 8006c42:	461a      	mov	r2, r3
 8006c44:	4619      	mov	r1, r3
 8006c46:	f000 fddb 	bl	8007800 <xQueueGenericSend>
 8006c4a:	2801      	cmp	r0, #1
 8006c4c:	d012      	beq.n	8006c74 <osSemaphoreNew+0x88>
            vSemaphoreDelete (hSemaphore);
 8006c4e:	4620      	mov	r0, r4
 8006c50:	f001 f916 	bl	8007e80 <vQueueDelete>
 8006c54:	e7d0      	b.n	8006bf8 <osSemaphoreNew+0xc>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U)) {
 8006c56:	2a00      	cmp	r2, #0
 8006c58:	d1ce      	bne.n	8006bf8 <osSemaphoreNew+0xc>
      if (max_count == 1U) {
 8006c5a:	2801      	cmp	r0, #1
 8006c5c:	d104      	bne.n	8006c68 <osSemaphoreNew+0x7c>
          hSemaphore = xSemaphoreCreateBinary();
 8006c5e:	2203      	movs	r2, #3
 8006c60:	2100      	movs	r1, #0
 8006c62:	f000 fd65 	bl	8007730 <xQueueGenericCreate>
 8006c66:	e7e7      	b.n	8006c38 <osSemaphoreNew+0x4c>
          hSemaphore = xSemaphoreCreateCounting (max_count, initial_count);
 8006c68:	4631      	mov	r1, r6
 8006c6a:	f000 fdaa 	bl	80077c2 <xQueueCreateCountingSemaphore>
      if (hSemaphore != NULL) {
 8006c6e:	4604      	mov	r4, r0
 8006c70:	2800      	cmp	r0, #0
 8006c72:	d0c1      	beq.n	8006bf8 <osSemaphoreNew+0xc>
        if (attr != NULL) {
 8006c74:	b945      	cbnz	r5, 8006c88 <osSemaphoreNew+0x9c>
          name = NULL;
 8006c76:	4629      	mov	r1, r5
 8006c78:	e007      	b.n	8006c8a <osSemaphoreNew+0x9e>
          hSemaphore = xSemaphoreCreateCountingStatic (max_count, initial_count, (StaticSemaphore_t *)attr->cb_mem);
 8006c7a:	461a      	mov	r2, r3
 8006c7c:	4631      	mov	r1, r6
 8006c7e:	f000 fd7e 	bl	800777e <xQueueCreateCountingSemaphoreStatic>
      if (hSemaphore != NULL) {
 8006c82:	4604      	mov	r4, r0
 8006c84:	2800      	cmp	r0, #0
 8006c86:	d0b7      	beq.n	8006bf8 <osSemaphoreNew+0xc>
          name = attr->name;
 8006c88:	6829      	ldr	r1, [r5, #0]
        vQueueAddToRegistry (hSemaphore, name);
 8006c8a:	4620      	mov	r0, r4
 8006c8c:	f001 f8d2 	bl	8007e34 <vQueueAddToRegistry>
  return ((osSemaphoreId_t)hSemaphore);
 8006c90:	e7b3      	b.n	8006bfa <osSemaphoreNew+0xe>
 8006c92:	bf00      	nop
 8006c94:	20001880 	.word	0x20001880

08006c98 <osSemaphoreAcquire>:

osStatus_t osSemaphoreAcquire (osSemaphoreId_t semaphore_id, uint32_t timeout) {
 8006c98:	b513      	push	{r0, r1, r4, lr}
 8006c9a:	460c      	mov	r4, r1
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 8006c9c:	b918      	cbnz	r0, 8006ca6 <osSemaphoreAcquire+0xe>
    stat = osErrorParameter;
 8006c9e:	f06f 0003 	mvn.w	r0, #3
      }
    }
  }

  return (stat);
}
 8006ca2:	b002      	add	sp, #8
 8006ca4:	bd10      	pop	{r4, pc}
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 8006ca6:	f3ef 8305 	mrs	r3, IPSR
  else if (IS_IRQ()) {
 8006caa:	b16b      	cbz	r3, 8006cc8 <osSemaphoreAcquire+0x30>
    if (timeout != 0U) {
 8006cac:	2c00      	cmp	r4, #0
 8006cae:	d1f6      	bne.n	8006c9e <osSemaphoreAcquire+0x6>
      yield = pdFALSE;
 8006cb0:	aa02      	add	r2, sp, #8
      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 8006cb2:	4621      	mov	r1, r4
      yield = pdFALSE;
 8006cb4:	f842 4d04 	str.w	r4, [r2, #-4]!
      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 8006cb8:	f001 f86c 	bl	8007d94 <xQueueReceiveFromISR>
 8006cbc:	2801      	cmp	r0, #1
 8006cbe:	d113      	bne.n	8006ce8 <osSemaphoreAcquire+0x50>
        portYIELD_FROM_ISR (yield);
 8006cc0:	9b01      	ldr	r3, [sp, #4]
 8006cc2:	b9a3      	cbnz	r3, 8006cee <osSemaphoreAcquire+0x56>
  stat = osOK;
 8006cc4:	2000      	movs	r0, #0
 8006cc6:	e7ec      	b.n	8006ca2 <osSemaphoreAcquire+0xa>
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8006cc8:	f3ef 8310 	mrs	r3, PRIMASK
  else if (IS_IRQ()) {
 8006ccc:	b913      	cbnz	r3, 8006cd4 <osSemaphoreAcquire+0x3c>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 8006cce:	f3ef 8311 	mrs	r3, BASEPRI
 8006cd2:	b11b      	cbz	r3, 8006cdc <osSemaphoreAcquire+0x44>
 8006cd4:	4b0c      	ldr	r3, [pc, #48]	; (8006d08 <osSemaphoreAcquire+0x70>)
 8006cd6:	681b      	ldr	r3, [r3, #0]
 8006cd8:	2b02      	cmp	r3, #2
 8006cda:	d0e7      	beq.n	8006cac <osSemaphoreAcquire+0x14>
    if (xSemaphoreTake (hSemaphore, (TickType_t)timeout) != pdPASS) {
 8006cdc:	4621      	mov	r1, r4
 8006cde:	f000 ff97 	bl	8007c10 <xQueueSemaphoreTake>
 8006ce2:	2801      	cmp	r0, #1
 8006ce4:	d0ee      	beq.n	8006cc4 <osSemaphoreAcquire+0x2c>
      if (timeout != 0U) {
 8006ce6:	b95c      	cbnz	r4, 8006d00 <osSemaphoreAcquire+0x68>
        stat = osErrorResource;
 8006ce8:	f06f 0002 	mvn.w	r0, #2
 8006cec:	e7d9      	b.n	8006ca2 <osSemaphoreAcquire+0xa>
        portYIELD_FROM_ISR (yield);
 8006cee:	4b07      	ldr	r3, [pc, #28]	; (8006d0c <osSemaphoreAcquire+0x74>)
 8006cf0:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8006cf4:	601a      	str	r2, [r3, #0]
 8006cf6:	f3bf 8f4f 	dsb	sy
 8006cfa:	f3bf 8f6f 	isb	sy
 8006cfe:	e7e1      	b.n	8006cc4 <osSemaphoreAcquire+0x2c>
        stat = osErrorTimeout;
 8006d00:	f06f 0001 	mvn.w	r0, #1
  return (stat);
 8006d04:	e7cd      	b.n	8006ca2 <osSemaphoreAcquire+0xa>
 8006d06:	bf00      	nop
 8006d08:	20001880 	.word	0x20001880
 8006d0c:	e000ed04 	.word	0xe000ed04

08006d10 <osSemaphoreRelease>:

osStatus_t osSemaphoreRelease (osSemaphoreId_t semaphore_id) {
 8006d10:	b513      	push	{r0, r1, r4, lr}
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 8006d12:	b368      	cbz	r0, 8006d70 <osSemaphoreRelease+0x60>
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 8006d14:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
 8006d18:	b153      	cbz	r3, 8006d30 <osSemaphoreRelease+0x20>
    yield = pdFALSE;
 8006d1a:	a902      	add	r1, sp, #8
 8006d1c:	2400      	movs	r4, #0
 8006d1e:	f841 4d04 	str.w	r4, [r1, #-4]!

    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 8006d22:	f000 fe80 	bl	8007a26 <xQueueGiveFromISR>
 8006d26:	2801      	cmp	r0, #1
 8006d28:	d014      	beq.n	8006d54 <osSemaphoreRelease+0x44>
      portYIELD_FROM_ISR (yield);
    }
  }
  else {
    if (xSemaphoreGive (hSemaphore) != pdPASS) {
      stat = osErrorResource;
 8006d2a:	f06f 0002 	mvn.w	r0, #2
 8006d2e:	e014      	b.n	8006d5a <osSemaphoreRelease+0x4a>
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8006d30:	f3ef 8310 	mrs	r3, PRIMASK
  else if (IS_IRQ()) {
 8006d34:	b913      	cbnz	r3, 8006d3c <osSemaphoreRelease+0x2c>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 8006d36:	f3ef 8311 	mrs	r3, BASEPRI
 8006d3a:	b11b      	cbz	r3, 8006d44 <osSemaphoreRelease+0x34>
 8006d3c:	4b0e      	ldr	r3, [pc, #56]	; (8006d78 <osSemaphoreRelease+0x68>)
 8006d3e:	681b      	ldr	r3, [r3, #0]
 8006d40:	2b02      	cmp	r3, #2
 8006d42:	d0ea      	beq.n	8006d1a <osSemaphoreRelease+0xa>
    if (xSemaphoreGive (hSemaphore) != pdPASS) {
 8006d44:	2300      	movs	r3, #0
 8006d46:	461a      	mov	r2, r3
 8006d48:	4619      	mov	r1, r3
 8006d4a:	f000 fd59 	bl	8007800 <xQueueGenericSend>
 8006d4e:	2801      	cmp	r0, #1
 8006d50:	d002      	beq.n	8006d58 <osSemaphoreRelease+0x48>
 8006d52:	e7ea      	b.n	8006d2a <osSemaphoreRelease+0x1a>
      portYIELD_FROM_ISR (yield);
 8006d54:	9b01      	ldr	r3, [sp, #4]
 8006d56:	b913      	cbnz	r3, 8006d5e <osSemaphoreRelease+0x4e>
  stat = osOK;
 8006d58:	2000      	movs	r0, #0
    }
  }

  return (stat);
}
 8006d5a:	b002      	add	sp, #8
 8006d5c:	bd10      	pop	{r4, pc}
      portYIELD_FROM_ISR (yield);
 8006d5e:	4b07      	ldr	r3, [pc, #28]	; (8006d7c <osSemaphoreRelease+0x6c>)
 8006d60:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8006d64:	601a      	str	r2, [r3, #0]
 8006d66:	f3bf 8f4f 	dsb	sy
 8006d6a:	f3bf 8f6f 	isb	sy
 8006d6e:	e7f3      	b.n	8006d58 <osSemaphoreRelease+0x48>
    stat = osErrorParameter;
 8006d70:	f06f 0003 	mvn.w	r0, #3
  return (stat);
 8006d74:	e7f1      	b.n	8006d5a <osSemaphoreRelease+0x4a>
 8006d76:	bf00      	nop
 8006d78:	20001880 	.word	0x20001880
 8006d7c:	e000ed04 	.word	0xe000ed04

08006d80 <osMessageQueueNew>:
  return (stat);
}

/*---------------------------------------------------------------------------*/

osMessageQueueId_t osMessageQueueNew (uint32_t msg_count, uint32_t msg_size, const osMessageQueueAttr_t *attr) {
 8006d80:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8006d82:	4614      	mov	r4, r2
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 8006d84:	f3ef 8305 	mrs	r3, IPSR
  const char *name;
  #endif

  hQueue = NULL;

  if (!IS_IRQ() && (msg_count > 0U) && (msg_size > 0U)) {
 8006d88:	b11b      	cbz	r3, 8006d92 <osMessageQueueNew+0x12>
  hQueue = NULL;
 8006d8a:	2500      	movs	r5, #0
    #endif

  }

  return ((osMessageQueueId_t)hQueue);
}
 8006d8c:	4628      	mov	r0, r5
 8006d8e:	b002      	add	sp, #8
 8006d90:	bd70      	pop	{r4, r5, r6, pc}
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8006d92:	f3ef 8310 	mrs	r3, PRIMASK
  if (!IS_IRQ() && (msg_count > 0U) && (msg_size > 0U)) {
 8006d96:	b913      	cbnz	r3, 8006d9e <osMessageQueueNew+0x1e>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 8006d98:	f3ef 8311 	mrs	r3, BASEPRI
 8006d9c:	b11b      	cbz	r3, 8006da6 <osMessageQueueNew+0x26>
 8006d9e:	4b1a      	ldr	r3, [pc, #104]	; (8006e08 <osMessageQueueNew+0x88>)
 8006da0:	681b      	ldr	r3, [r3, #0]
 8006da2:	2b02      	cmp	r3, #2
 8006da4:	d0f1      	beq.n	8006d8a <osMessageQueueNew+0xa>
 8006da6:	2800      	cmp	r0, #0
 8006da8:	d0ef      	beq.n	8006d8a <osMessageQueueNew+0xa>
 8006daa:	2900      	cmp	r1, #0
 8006dac:	d0ed      	beq.n	8006d8a <osMessageQueueNew+0xa>
    if (attr != NULL) {
 8006dae:	b304      	cbz	r4, 8006df2 <osMessageQueueNew+0x72>
 8006db0:	e9d4 3202 	ldrd	r3, r2, [r4, #8]
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 8006db4:	b1ab      	cbz	r3, 8006de2 <osMessageQueueNew+0x62>
 8006db6:	2a4f      	cmp	r2, #79	; 0x4f
 8006db8:	d9e7      	bls.n	8006d8a <osMessageQueueNew+0xa>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 8006dba:	6922      	ldr	r2, [r4, #16]
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 8006dbc:	2a00      	cmp	r2, #0
 8006dbe:	d0e4      	beq.n	8006d8a <osMessageQueueNew+0xa>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 8006dc0:	6966      	ldr	r6, [r4, #20]
 8006dc2:	fb01 f500 	mul.w	r5, r1, r0
 8006dc6:	42ae      	cmp	r6, r5
 8006dc8:	d3df      	bcc.n	8006d8a <osMessageQueueNew+0xa>
      hQueue = xQueueCreateStatic (msg_count, msg_size, attr->mq_mem, attr->cb_mem);
 8006dca:	2500      	movs	r5, #0
 8006dcc:	9500      	str	r5, [sp, #0]
 8006dce:	f000 fc61 	bl	8007694 <xQueueGenericCreateStatic>
    if (hQueue != NULL) {
 8006dd2:	4605      	mov	r5, r0
 8006dd4:	2800      	cmp	r0, #0
 8006dd6:	d0d8      	beq.n	8006d8a <osMessageQueueNew+0xa>
        name = attr->name;
 8006dd8:	6821      	ldr	r1, [r4, #0]
      vQueueAddToRegistry (hQueue, name);
 8006dda:	4628      	mov	r0, r5
 8006ddc:	f001 f82a 	bl	8007e34 <vQueueAddToRegistry>
  return ((osMessageQueueId_t)hQueue);
 8006de0:	e7d4      	b.n	8006d8c <osMessageQueueNew+0xc>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) &&
 8006de2:	2a00      	cmp	r2, #0
 8006de4:	d1d1      	bne.n	8006d8a <osMessageQueueNew+0xa>
 8006de6:	6923      	ldr	r3, [r4, #16]
 8006de8:	2b00      	cmp	r3, #0
 8006dea:	d1ce      	bne.n	8006d8a <osMessageQueueNew+0xa>
            (attr->mq_mem == NULL) && (attr->mq_size == 0U)) {
 8006dec:	6963      	ldr	r3, [r4, #20]
 8006dee:	2b00      	cmp	r3, #0
 8006df0:	d1cb      	bne.n	8006d8a <osMessageQueueNew+0xa>
        hQueue = xQueueCreate (msg_count, msg_size);
 8006df2:	2200      	movs	r2, #0
 8006df4:	f000 fc9c 	bl	8007730 <xQueueGenericCreate>
    if (hQueue != NULL) {
 8006df8:	4605      	mov	r5, r0
 8006dfa:	2800      	cmp	r0, #0
 8006dfc:	d0c5      	beq.n	8006d8a <osMessageQueueNew+0xa>
      if (attr != NULL) {
 8006dfe:	2c00      	cmp	r4, #0
 8006e00:	d1ea      	bne.n	8006dd8 <osMessageQueueNew+0x58>
        name = NULL;
 8006e02:	4621      	mov	r1, r4
 8006e04:	e7e9      	b.n	8006dda <osMessageQueueNew+0x5a>
 8006e06:	bf00      	nop
 8006e08:	20001880 	.word	0x20001880

08006e0c <osMessageQueuePut>:

osStatus_t osMessageQueuePut (osMessageQueueId_t mq_id, const void *msg_ptr, uint8_t msg_prio, uint32_t timeout) {
 8006e0c:	b513      	push	{r0, r1, r4, lr}
 8006e0e:	461c      	mov	r4, r3
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 8006e10:	f3ef 8305 	mrs	r3, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 8006e14:	b123      	cbz	r3, 8006e20 <osMessageQueuePut+0x14>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 8006e16:	b9d8      	cbnz	r0, 8006e50 <osMessageQueuePut+0x44>
      stat = osErrorParameter;
 8006e18:	f06f 0003 	mvn.w	r0, #3
      }
    }
  }

  return (stat);
}
 8006e1c:	b002      	add	sp, #8
 8006e1e:	bd10      	pop	{r4, pc}
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8006e20:	f3ef 8310 	mrs	r3, PRIMASK
  if (IS_IRQ()) {
 8006e24:	b913      	cbnz	r3, 8006e2c <osMessageQueuePut+0x20>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 8006e26:	f3ef 8311 	mrs	r3, BASEPRI
 8006e2a:	b11b      	cbz	r3, 8006e34 <osMessageQueuePut+0x28>
 8006e2c:	4b16      	ldr	r3, [pc, #88]	; (8006e88 <osMessageQueuePut+0x7c>)
 8006e2e:	681b      	ldr	r3, [r3, #0]
 8006e30:	2b02      	cmp	r3, #2
 8006e32:	d0f0      	beq.n	8006e16 <osMessageQueuePut+0xa>
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 8006e34:	2800      	cmp	r0, #0
 8006e36:	d0ef      	beq.n	8006e18 <osMessageQueuePut+0xc>
 8006e38:	2900      	cmp	r1, #0
 8006e3a:	d0ed      	beq.n	8006e18 <osMessageQueuePut+0xc>
      if (xQueueSendToBack (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 8006e3c:	2300      	movs	r3, #0
 8006e3e:	4622      	mov	r2, r4
 8006e40:	f000 fcde 	bl	8007800 <xQueueGenericSend>
 8006e44:	2801      	cmp	r0, #1
 8006e46:	d011      	beq.n	8006e6c <osMessageQueuePut+0x60>
        if (timeout != 0U) {
 8006e48:	b9dc      	cbnz	r4, 8006e82 <osMessageQueuePut+0x76>
          stat = osErrorResource;
 8006e4a:	f06f 0002 	mvn.w	r0, #2
 8006e4e:	e7e5      	b.n	8006e1c <osMessageQueuePut+0x10>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 8006e50:	2900      	cmp	r1, #0
 8006e52:	d0e1      	beq.n	8006e18 <osMessageQueuePut+0xc>
 8006e54:	2c00      	cmp	r4, #0
 8006e56:	d1df      	bne.n	8006e18 <osMessageQueuePut+0xc>
      yield = pdFALSE;
 8006e58:	aa02      	add	r2, sp, #8
      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 8006e5a:	4623      	mov	r3, r4
      yield = pdFALSE;
 8006e5c:	f842 4d04 	str.w	r4, [r2, #-4]!
      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 8006e60:	f000 fd80 	bl	8007964 <xQueueGenericSendFromISR>
 8006e64:	2801      	cmp	r0, #1
 8006e66:	d1f0      	bne.n	8006e4a <osMessageQueuePut+0x3e>
        portYIELD_FROM_ISR (yield);
 8006e68:	9b01      	ldr	r3, [sp, #4]
 8006e6a:	b90b      	cbnz	r3, 8006e70 <osMessageQueuePut+0x64>
  stat = osOK;
 8006e6c:	2000      	movs	r0, #0
 8006e6e:	e7d5      	b.n	8006e1c <osMessageQueuePut+0x10>
        portYIELD_FROM_ISR (yield);
 8006e70:	4b06      	ldr	r3, [pc, #24]	; (8006e8c <osMessageQueuePut+0x80>)
 8006e72:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8006e76:	601a      	str	r2, [r3, #0]
 8006e78:	f3bf 8f4f 	dsb	sy
 8006e7c:	f3bf 8f6f 	isb	sy
 8006e80:	e7f4      	b.n	8006e6c <osMessageQueuePut+0x60>
          stat = osErrorTimeout;
 8006e82:	f06f 0001 	mvn.w	r0, #1
  return (stat);
 8006e86:	e7c9      	b.n	8006e1c <osMessageQueuePut+0x10>
 8006e88:	20001880 	.word	0x20001880
 8006e8c:	e000ed04 	.word	0xe000ed04

08006e90 <osMessageQueueGet>:

osStatus_t osMessageQueueGet (osMessageQueueId_t mq_id, void *msg_ptr, uint8_t *msg_prio, uint32_t timeout) {
 8006e90:	b513      	push	{r0, r1, r4, lr}
 8006e92:	461c      	mov	r4, r3
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 8006e94:	f3ef 8305 	mrs	r3, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 8006e98:	b123      	cbz	r3, 8006ea4 <osMessageQueueGet+0x14>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 8006e9a:	b9d0      	cbnz	r0, 8006ed2 <osMessageQueueGet+0x42>
      stat = osErrorParameter;
 8006e9c:	f06f 0003 	mvn.w	r0, #3
      }
    }
  }

  return (stat);
}
 8006ea0:	b002      	add	sp, #8
 8006ea2:	bd10      	pop	{r4, pc}
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8006ea4:	f3ef 8310 	mrs	r3, PRIMASK
  if (IS_IRQ()) {
 8006ea8:	b913      	cbnz	r3, 8006eb0 <osMessageQueueGet+0x20>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 8006eaa:	f3ef 8311 	mrs	r3, BASEPRI
 8006eae:	b11b      	cbz	r3, 8006eb8 <osMessageQueueGet+0x28>
 8006eb0:	4b15      	ldr	r3, [pc, #84]	; (8006f08 <osMessageQueueGet+0x78>)
 8006eb2:	681b      	ldr	r3, [r3, #0]
 8006eb4:	2b02      	cmp	r3, #2
 8006eb6:	d0f0      	beq.n	8006e9a <osMessageQueueGet+0xa>
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 8006eb8:	2800      	cmp	r0, #0
 8006eba:	d0ef      	beq.n	8006e9c <osMessageQueueGet+0xc>
 8006ebc:	2900      	cmp	r1, #0
 8006ebe:	d0ed      	beq.n	8006e9c <osMessageQueueGet+0xc>
      if (xQueueReceive (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 8006ec0:	4622      	mov	r2, r4
 8006ec2:	f000 fe05 	bl	8007ad0 <xQueueReceive>
 8006ec6:	2801      	cmp	r0, #1
 8006ec8:	d010      	beq.n	8006eec <osMessageQueueGet+0x5c>
        if (timeout != 0U) {
 8006eca:	b9d4      	cbnz	r4, 8006f02 <osMessageQueueGet+0x72>
          stat = osErrorResource;
 8006ecc:	f06f 0002 	mvn.w	r0, #2
 8006ed0:	e7e6      	b.n	8006ea0 <osMessageQueueGet+0x10>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 8006ed2:	2900      	cmp	r1, #0
 8006ed4:	d0e2      	beq.n	8006e9c <osMessageQueueGet+0xc>
 8006ed6:	2c00      	cmp	r4, #0
 8006ed8:	d1e0      	bne.n	8006e9c <osMessageQueueGet+0xc>
      yield = pdFALSE;
 8006eda:	aa02      	add	r2, sp, #8
 8006edc:	f842 4d04 	str.w	r4, [r2, #-4]!
      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 8006ee0:	f000 ff58 	bl	8007d94 <xQueueReceiveFromISR>
 8006ee4:	2801      	cmp	r0, #1
 8006ee6:	d1f1      	bne.n	8006ecc <osMessageQueueGet+0x3c>
        portYIELD_FROM_ISR (yield);
 8006ee8:	9b01      	ldr	r3, [sp, #4]
 8006eea:	b90b      	cbnz	r3, 8006ef0 <osMessageQueueGet+0x60>
  stat = osOK;
 8006eec:	2000      	movs	r0, #0
 8006eee:	e7d7      	b.n	8006ea0 <osMessageQueueGet+0x10>
        portYIELD_FROM_ISR (yield);
 8006ef0:	4b06      	ldr	r3, [pc, #24]	; (8006f0c <osMessageQueueGet+0x7c>)
 8006ef2:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8006ef6:	601a      	str	r2, [r3, #0]
 8006ef8:	f3bf 8f4f 	dsb	sy
 8006efc:	f3bf 8f6f 	isb	sy
 8006f00:	e7f4      	b.n	8006eec <osMessageQueueGet+0x5c>
          stat = osErrorTimeout;
 8006f02:	f06f 0001 	mvn.w	r0, #1
  return (stat);
 8006f06:	e7cb      	b.n	8006ea0 <osMessageQueueGet+0x10>
 8006f08:	20001880 	.word	0x20001880
 8006f0c:	e000ed04 	.word	0xe000ed04

08006f10 <vApplicationGetIdleTaskMemory>:
/*
  vApplicationGetIdleTaskMemory gets called when configSUPPORT_STATIC_ALLOCATION
  equals to 1 and is required for static memory allocation support.
*/
void vApplicationGetIdleTaskMemory (StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskStackBuffer, uint32_t *pulIdleTaskStackSize) {
  *ppxIdleTaskTCBBuffer   = &Idle_TCB;
 8006f10:	4b03      	ldr	r3, [pc, #12]	; (8006f20 <vApplicationGetIdleTaskMemory+0x10>)
 8006f12:	6003      	str	r3, [r0, #0]
  *ppxIdleTaskStackBuffer = &Idle_Stack[0];
 8006f14:	4b03      	ldr	r3, [pc, #12]	; (8006f24 <vApplicationGetIdleTaskMemory+0x14>)
 8006f16:	600b      	str	r3, [r1, #0]
  *pulIdleTaskStackSize   = (uint32_t)configMINIMAL_STACK_SIZE;
 8006f18:	2380      	movs	r3, #128	; 0x80
 8006f1a:	6013      	str	r3, [r2, #0]
}
 8006f1c:	4770      	bx	lr
 8006f1e:	bf00      	nop
 8006f20:	20001820 	.word	0x20001820
 8006f24:	20001620 	.word	0x20001620

08006f28 <vApplicationGetTimerTaskMemory>:
/*
  vApplicationGetTimerTaskMemory gets called when configSUPPORT_STATIC_ALLOCATION
  equals to 1 and is required for static memory allocation support.
*/
void vApplicationGetTimerTaskMemory (StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **ppxTimerTaskStackBuffer, uint32_t *pulTimerTaskStackSize) {
  *ppxTimerTaskTCBBuffer   = &Timer_TCB;
 8006f28:	4b03      	ldr	r3, [pc, #12]	; (8006f38 <vApplicationGetTimerTaskMemory+0x10>)
 8006f2a:	6003      	str	r3, [r0, #0]
  *ppxTimerTaskStackBuffer = &Timer_Stack[0];
 8006f2c:	4b03      	ldr	r3, [pc, #12]	; (8006f3c <vApplicationGetTimerTaskMemory+0x14>)
 8006f2e:	600b      	str	r3, [r1, #0]
  *pulTimerTaskStackSize   = (uint32_t)configTIMER_TASK_STACK_DEPTH;
 8006f30:	f44f 7380 	mov.w	r3, #256	; 0x100
 8006f34:	6013      	str	r3, [r2, #0]
}
 8006f36:	4770      	bx	lr
 8006f38:	20001c84 	.word	0x20001c84
 8006f3c:	20001884 	.word	0x20001884

08006f40 <prvInsertBlockIntoFreeList>:
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
}
/*-----------------------------------------------------------*/

static void prvInsertBlockIntoFreeList( BlockLink_t *pxBlockToInsert )
{
 8006f40:	b510      	push	{r4, lr}
BlockLink_t *pxIterator;
uint8_t *puc;

	/* Iterate through the list until a block is found that has a higher address
	than the block being inserted. */
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 8006f42:	4b0f      	ldr	r3, [pc, #60]	; (8006f80 <prvInsertBlockIntoFreeList+0x40>)
 8006f44:	681a      	ldr	r2, [r3, #0]
 8006f46:	4282      	cmp	r2, r0
 8006f48:	d318      	bcc.n	8006f7c <prvInsertBlockIntoFreeList+0x3c>
	}

	/* Do the block being inserted, and the block it is being inserted after
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxIterator;
	if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
 8006f4a:	685c      	ldr	r4, [r3, #4]
 8006f4c:	1919      	adds	r1, r3, r4
 8006f4e:	4288      	cmp	r0, r1
	{
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 8006f50:	bf01      	itttt	eq
 8006f52:	6841      	ldreq	r1, [r0, #4]
 8006f54:	4618      	moveq	r0, r3
 8006f56:	1909      	addeq	r1, r1, r4
 8006f58:	6059      	streq	r1, [r3, #4]
	}

	/* Do the block being inserted, and the block it is being inserted before
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxBlockToInsert;
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 8006f5a:	6844      	ldr	r4, [r0, #4]
 8006f5c:	1901      	adds	r1, r0, r4
 8006f5e:	428a      	cmp	r2, r1
 8006f60:	d107      	bne.n	8006f72 <prvInsertBlockIntoFreeList+0x32>
	{
		if( pxIterator->pxNextFreeBlock != pxEnd )
 8006f62:	4908      	ldr	r1, [pc, #32]	; (8006f84 <prvInsertBlockIntoFreeList+0x44>)
 8006f64:	6809      	ldr	r1, [r1, #0]
 8006f66:	428a      	cmp	r2, r1
		{
			/* Form one big block from the two blocks. */
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 8006f68:	bf1f      	itttt	ne
 8006f6a:	6851      	ldrne	r1, [r2, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 8006f6c:	6812      	ldrne	r2, [r2, #0]
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 8006f6e:	1909      	addne	r1, r1, r4
 8006f70:	6041      	strne	r1, [r0, #4]

	/* If the block being inserted plugged a gab, so was merged with the block
	before and the block after, then it's pxNextFreeBlock pointer will have
	already been set, and should not be set here as that would make it point
	to itself. */
	if( pxIterator != pxBlockToInsert )
 8006f72:	4298      	cmp	r0, r3
		pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock;
 8006f74:	6002      	str	r2, [r0, #0]
	{
		pxIterator->pxNextFreeBlock = pxBlockToInsert;
 8006f76:	bf18      	it	ne
 8006f78:	6018      	strne	r0, [r3, #0]
	}
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}
}
 8006f7a:	bd10      	pop	{r4, pc}
 8006f7c:	4613      	mov	r3, r2
 8006f7e:	e7e1      	b.n	8006f44 <prvInsertBlockIntoFreeList+0x4>
 8006f80:	20011cf4 	.word	0x20011cf4
 8006f84:	20001ce4 	.word	0x20001ce4

08006f88 <pvPortMalloc>:
{
 8006f88:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8006f8c:	4604      	mov	r4, r0
	vTaskSuspendAll();
 8006f8e:	f001 f9c3 	bl	8008318 <vTaskSuspendAll>
		if( pxEnd == NULL )
 8006f92:	493d      	ldr	r1, [pc, #244]	; (8007088 <pvPortMalloc+0x100>)
 8006f94:	4d3d      	ldr	r5, [pc, #244]	; (800708c <pvPortMalloc+0x104>)
 8006f96:	680b      	ldr	r3, [r1, #0]
 8006f98:	b9fb      	cbnz	r3, 8006fda <pvPortMalloc+0x52>
	uxAddress = ( size_t ) ucHeap;
 8006f9a:	4a3d      	ldr	r2, [pc, #244]	; (8007090 <pvPortMalloc+0x108>)
	if( ( uxAddress & portBYTE_ALIGNMENT_MASK ) != 0 )
 8006f9c:	0756      	lsls	r6, r2, #29
 8006f9e:	f502 3380 	add.w	r3, r2, #65536	; 0x10000
		uxAddress += ( portBYTE_ALIGNMENT - 1 );
 8006fa2:	bf1d      	ittte	ne
 8006fa4:	3207      	addne	r2, #7
		uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 8006fa6:	f022 0207 	bicne.w	r2, r2, #7
		xTotalHeapSize -= uxAddress - ( size_t ) ucHeap;
 8006faa:	1a9b      	subne	r3, r3, r2
size_t xTotalHeapSize = configTOTAL_HEAP_SIZE;
 8006fac:	f44f 3380 	moveq.w	r3, #65536	; 0x10000
	uxAddress = ( ( size_t ) pucAlignedHeap ) + xTotalHeapSize;
 8006fb0:	4413      	add	r3, r2
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 8006fb2:	4e38      	ldr	r6, [pc, #224]	; (8007094 <pvPortMalloc+0x10c>)
	uxAddress -= xHeapStructSize;
 8006fb4:	3b08      	subs	r3, #8
	uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 8006fb6:	f023 0307 	bic.w	r3, r3, #7
	xStart.xBlockSize = ( size_t ) 0;
 8006fba:	2000      	movs	r0, #0
 8006fbc:	6070      	str	r0, [r6, #4]
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 8006fbe:	6032      	str	r2, [r6, #0]
	pxEnd->pxNextFreeBlock = NULL;
 8006fc0:	e9c3 0000 	strd	r0, r0, [r3]
	pxFirstFreeBlock->xBlockSize = uxAddress - ( size_t ) pxFirstFreeBlock;
 8006fc4:	1a98      	subs	r0, r3, r2
	pxEnd = ( void * ) uxAddress;
 8006fc6:	600b      	str	r3, [r1, #0]
	pxFirstFreeBlock->pxNextFreeBlock = pxEnd;
 8006fc8:	e9c2 3000 	strd	r3, r0, [r2]
	xMinimumEverFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 8006fcc:	4b32      	ldr	r3, [pc, #200]	; (8007098 <pvPortMalloc+0x110>)
 8006fce:	6018      	str	r0, [r3, #0]
	xFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 8006fd0:	4b32      	ldr	r3, [pc, #200]	; (800709c <pvPortMalloc+0x114>)
 8006fd2:	6018      	str	r0, [r3, #0]
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
 8006fd4:	f04f 4300 	mov.w	r3, #2147483648	; 0x80000000
 8006fd8:	602b      	str	r3, [r5, #0]
		if( ( xWantedSize & xBlockAllocatedBit ) == 0 )
 8006fda:	682f      	ldr	r7, [r5, #0]
 8006fdc:	4227      	tst	r7, r4
 8006fde:	d14e      	bne.n	800707e <pvPortMalloc+0xf6>
			if( xWantedSize > 0 )
 8006fe0:	2c00      	cmp	r4, #0
 8006fe2:	d03f      	beq.n	8007064 <pvPortMalloc+0xdc>
				xWantedSize += xHeapStructSize;
 8006fe4:	f104 0308 	add.w	r3, r4, #8
				if( ( xWantedSize & portBYTE_ALIGNMENT_MASK ) != 0x00 )
 8006fe8:	0758      	lsls	r0, r3, #29
					xWantedSize += ( portBYTE_ALIGNMENT - ( xWantedSize & portBYTE_ALIGNMENT_MASK ) );
 8006fea:	bf1c      	itt	ne
 8006fec:	f023 0307 	bicne.w	r3, r3, #7
 8006ff0:	3308      	addne	r3, #8
			if( ( xWantedSize > 0 ) && ( xWantedSize <= xFreeBytesRemaining ) )
 8006ff2:	2b00      	cmp	r3, #0
 8006ff4:	d043      	beq.n	800707e <pvPortMalloc+0xf6>
 8006ff6:	4a29      	ldr	r2, [pc, #164]	; (800709c <pvPortMalloc+0x114>)
 8006ff8:	6816      	ldr	r6, [r2, #0]
 8006ffa:	429e      	cmp	r6, r3
 8006ffc:	4690      	mov	r8, r2
 8006ffe:	d33e      	bcc.n	800707e <pvPortMalloc+0xf6>
				pxBlock = xStart.pxNextFreeBlock;
 8007000:	4a24      	ldr	r2, [pc, #144]	; (8007094 <pvPortMalloc+0x10c>)
 8007002:	6815      	ldr	r5, [r2, #0]
				while( ( pxBlock->xBlockSize < xWantedSize ) && ( pxBlock->pxNextFreeBlock != NULL ) )
 8007004:	6868      	ldr	r0, [r5, #4]
 8007006:	4298      	cmp	r0, r3
 8007008:	d201      	bcs.n	800700e <pvPortMalloc+0x86>
 800700a:	682c      	ldr	r4, [r5, #0]
 800700c:	b9a4      	cbnz	r4, 8007038 <pvPortMalloc+0xb0>
				if( pxBlock != pxEnd )
 800700e:	6809      	ldr	r1, [r1, #0]
 8007010:	42a9      	cmp	r1, r5
 8007012:	d034      	beq.n	800707e <pvPortMalloc+0xf6>
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
 8007014:	6829      	ldr	r1, [r5, #0]
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
 8007016:	6814      	ldr	r4, [r2, #0]
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
 8007018:	6011      	str	r1, [r2, #0]
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
 800701a:	1ac2      	subs	r2, r0, r3
 800701c:	2a10      	cmp	r2, #16
 800701e:	d912      	bls.n	8007046 <pvPortMalloc+0xbe>
						pxNewBlockLink = ( void * ) ( ( ( uint8_t * ) pxBlock ) + xWantedSize );
 8007020:	18e8      	adds	r0, r5, r3
						configASSERT( ( ( ( size_t ) pxNewBlockLink ) & portBYTE_ALIGNMENT_MASK ) == 0 );
 8007022:	0741      	lsls	r1, r0, #29
 8007024:	d00b      	beq.n	800703e <pvPortMalloc+0xb6>

portFORCE_INLINE static void vPortRaiseBASEPRI( void )
{
uint32_t ulNewBASEPRI;

	__asm volatile
 8007026:	f04f 0350 	mov.w	r3, #80	; 0x50
 800702a:	f383 8811 	msr	BASEPRI, r3
 800702e:	f3bf 8f6f 	isb	sy
 8007032:	f3bf 8f4f 	dsb	sy
 8007036:	e7fe      	b.n	8007036 <pvPortMalloc+0xae>
 8007038:	462a      	mov	r2, r5
 800703a:	4625      	mov	r5, r4
 800703c:	e7e2      	b.n	8007004 <pvPortMalloc+0x7c>
						pxNewBlockLink->xBlockSize = pxBlock->xBlockSize - xWantedSize;
 800703e:	6042      	str	r2, [r0, #4]
						pxBlock->xBlockSize = xWantedSize;
 8007040:	606b      	str	r3, [r5, #4]
						prvInsertBlockIntoFreeList( pxNewBlockLink );
 8007042:	f7ff ff7d 	bl	8006f40 <prvInsertBlockIntoFreeList>
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 8007046:	4914      	ldr	r1, [pc, #80]	; (8007098 <pvPortMalloc+0x110>)
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 8007048:	686b      	ldr	r3, [r5, #4]
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 800704a:	6808      	ldr	r0, [r1, #0]
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 800704c:	1af6      	subs	r6, r6, r3
					pxBlock->xBlockSize |= xBlockAllocatedBit;
 800704e:	431f      	orrs	r7, r3
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 8007050:	4286      	cmp	r6, r0
					pxBlock->pxNextFreeBlock = NULL;
 8007052:	f04f 0300 	mov.w	r3, #0
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 8007056:	f8c8 6000 	str.w	r6, [r8]
						xMinimumEverFreeBytesRemaining = xFreeBytesRemaining;
 800705a:	bf38      	it	cc
 800705c:	600e      	strcc	r6, [r1, #0]
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
 800705e:	3408      	adds	r4, #8
					pxBlock->xBlockSize |= xBlockAllocatedBit;
 8007060:	606f      	str	r7, [r5, #4]
					pxBlock->pxNextFreeBlock = NULL;
 8007062:	602b      	str	r3, [r5, #0]
	( void ) xTaskResumeAll();
 8007064:	f001 f9f6 	bl	8008454 <xTaskResumeAll>
	configASSERT( ( ( ( size_t ) pvReturn ) & ( size_t ) portBYTE_ALIGNMENT_MASK ) == 0 );
 8007068:	0763      	lsls	r3, r4, #29
 800706a:	d00a      	beq.n	8007082 <pvPortMalloc+0xfa>
 800706c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007070:	f383 8811 	msr	BASEPRI, r3
 8007074:	f3bf 8f6f 	isb	sy
 8007078:	f3bf 8f4f 	dsb	sy
 800707c:	e7fe      	b.n	800707c <pvPortMalloc+0xf4>
void *pvReturn = NULL;
 800707e:	2400      	movs	r4, #0
 8007080:	e7f0      	b.n	8007064 <pvPortMalloc+0xdc>
}
 8007082:	4620      	mov	r0, r4
 8007084:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8007088:	20001ce4 	.word	0x20001ce4
 800708c:	20011ce8 	.word	0x20011ce8
 8007090:	20001ce8 	.word	0x20001ce8
 8007094:	20011cf4 	.word	0x20011cf4
 8007098:	20011cf0 	.word	0x20011cf0
 800709c:	20011cec 	.word	0x20011cec

080070a0 <vPortFree>:
{
 80070a0:	b510      	push	{r4, lr}
	if( pv != NULL )
 80070a2:	4604      	mov	r4, r0
 80070a4:	b370      	cbz	r0, 8007104 <vPortFree+0x64>
		configASSERT( ( pxLink->xBlockSize & xBlockAllocatedBit ) != 0 );
 80070a6:	4a18      	ldr	r2, [pc, #96]	; (8007108 <vPortFree+0x68>)
 80070a8:	f850 3c04 	ldr.w	r3, [r0, #-4]
 80070ac:	6812      	ldr	r2, [r2, #0]
 80070ae:	4213      	tst	r3, r2
 80070b0:	d108      	bne.n	80070c4 <vPortFree+0x24>
 80070b2:	f04f 0350 	mov.w	r3, #80	; 0x50
 80070b6:	f383 8811 	msr	BASEPRI, r3
 80070ba:	f3bf 8f6f 	isb	sy
 80070be:	f3bf 8f4f 	dsb	sy
 80070c2:	e7fe      	b.n	80070c2 <vPortFree+0x22>
		configASSERT( pxLink->pxNextFreeBlock == NULL );
 80070c4:	f850 1c08 	ldr.w	r1, [r0, #-8]
 80070c8:	b141      	cbz	r1, 80070dc <vPortFree+0x3c>
 80070ca:	f04f 0350 	mov.w	r3, #80	; 0x50
 80070ce:	f383 8811 	msr	BASEPRI, r3
 80070d2:	f3bf 8f6f 	isb	sy
 80070d6:	f3bf 8f4f 	dsb	sy
 80070da:	e7fe      	b.n	80070da <vPortFree+0x3a>
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
 80070dc:	ea23 0302 	bic.w	r3, r3, r2
 80070e0:	f840 3c04 	str.w	r3, [r0, #-4]
				vTaskSuspendAll();
 80070e4:	f001 f918 	bl	8008318 <vTaskSuspendAll>
					xFreeBytesRemaining += pxLink->xBlockSize;
 80070e8:	4a08      	ldr	r2, [pc, #32]	; (800710c <vPortFree+0x6c>)
 80070ea:	f854 3c04 	ldr.w	r3, [r4, #-4]
 80070ee:	6811      	ldr	r1, [r2, #0]
					prvInsertBlockIntoFreeList( ( ( BlockLink_t * ) pxLink ) );
 80070f0:	f1a4 0008 	sub.w	r0, r4, #8
					xFreeBytesRemaining += pxLink->xBlockSize;
 80070f4:	440b      	add	r3, r1
 80070f6:	6013      	str	r3, [r2, #0]
					prvInsertBlockIntoFreeList( ( ( BlockLink_t * ) pxLink ) );
 80070f8:	f7ff ff22 	bl	8006f40 <prvInsertBlockIntoFreeList>
}
 80070fc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
				( void ) xTaskResumeAll();
 8007100:	f001 b9a8 	b.w	8008454 <xTaskResumeAll>
}
 8007104:	bd10      	pop	{r4, pc}
 8007106:	bf00      	nop
 8007108:	20011ce8 	.word	0x20011ce8
 800710c:	20011cec 	.word	0x20011cec

08007110 <vListInitialise>:
void vListInitialise( List_t * const pxList )
{
	/* The list structure contains a list item which is used to mark the
	end of the list.  To initialise the list the list end is inserted
	as the only list entry. */
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 8007110:	f100 0308 	add.w	r3, r0, #8

	/* The list end value is the highest possible value in the list to
	ensure it remains at the end of the list. */
	pxList->xListEnd.xItemValue = portMAX_DELAY;
 8007114:	f04f 32ff 	mov.w	r2, #4294967295
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 8007118:	6043      	str	r3, [r0, #4]

	/* The list end next and previous pointers point to itself so we know
	when the list is empty. */
	pxList->xListEnd.pxNext = ( ListItem_t * ) &( pxList->xListEnd );	/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 800711a:	e9c0 2302 	strd	r2, r3, [r0, #8]
	pxList->xListEnd.pxPrevious = ( ListItem_t * ) &( pxList->xListEnd );/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 800711e:	6103      	str	r3, [r0, #16]

	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
 8007120:	2300      	movs	r3, #0
 8007122:	6003      	str	r3, [r0, #0]

	/* Write known values into the list if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_LIST_INTEGRITY_CHECK_1_VALUE( pxList );
	listSET_LIST_INTEGRITY_CHECK_2_VALUE( pxList );
}
 8007124:	4770      	bx	lr

08007126 <vListInitialiseItem>:
/*-----------------------------------------------------------*/

void vListInitialiseItem( ListItem_t * const pxItem )
{
	/* Make sure the list item is not recorded as being on a list. */
	pxItem->pxContainer = NULL;
 8007126:	2300      	movs	r3, #0
 8007128:	6103      	str	r3, [r0, #16]

	/* Write known values into the list item if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_FIRST_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
	listSET_SECOND_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
}
 800712a:	4770      	bx	lr

0800712c <vListInsertEnd>:
/*-----------------------------------------------------------*/

void vListInsertEnd( List_t * const pxList, ListItem_t * const pxNewListItem )
{
ListItem_t * const pxIndex = pxList->pxIndex;
 800712c:	6843      	ldr	r3, [r0, #4]
	listTEST_LIST_ITEM_INTEGRITY( pxNewListItem );

	/* Insert a new list item into pxList, but rather than sort the list,
	makes the new list item the last item to be removed by a call to
	listGET_OWNER_OF_NEXT_ENTRY(). */
	pxNewListItem->pxNext = pxIndex;
 800712e:	604b      	str	r3, [r1, #4]
	pxNewListItem->pxPrevious = pxIndex->pxPrevious;
 8007130:	689a      	ldr	r2, [r3, #8]
 8007132:	608a      	str	r2, [r1, #8]

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	pxIndex->pxPrevious->pxNext = pxNewListItem;
 8007134:	689a      	ldr	r2, [r3, #8]
 8007136:	6051      	str	r1, [r2, #4]
	pxIndex->pxPrevious = pxNewListItem;
 8007138:	6099      	str	r1, [r3, #8]

	/* Remember which list the item is in. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 800713a:	6803      	ldr	r3, [r0, #0]
	pxNewListItem->pxContainer = pxList;
 800713c:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
 800713e:	3301      	adds	r3, #1
 8007140:	6003      	str	r3, [r0, #0]
}
 8007142:	4770      	bx	lr

08007144 <vListInsert>:
/*-----------------------------------------------------------*/

void vListInsert( List_t * const pxList, ListItem_t * const pxNewListItem )
{
ListItem_t *pxIterator;
const TickType_t xValueOfInsertion = pxNewListItem->xItemValue;
 8007144:	680a      	ldr	r2, [r1, #0]
	new list item should be placed after it.  This ensures that TCBs which are
	stored in ready lists (all of which have the same xItemValue value) get a
	share of the CPU.  However, if the xItemValue is the same as the back marker
	the iteration loop below will not end.  Therefore the value is checked
	first, and the algorithm slightly modified if necessary. */
	if( xValueOfInsertion == portMAX_DELAY )
 8007146:	1c53      	adds	r3, r2, #1
{
 8007148:	b530      	push	{r4, r5, lr}
	if( xValueOfInsertion == portMAX_DELAY )
 800714a:	d10a      	bne.n	8007162 <vListInsert+0x1e>
	{
		pxIterator = pxList->xListEnd.pxPrevious;
 800714c:	6903      	ldr	r3, [r0, #16]
			/* There is nothing to do here, just iterating to the wanted
			insertion position. */
		}
	}

	pxNewListItem->pxNext = pxIterator->pxNext;
 800714e:	685a      	ldr	r2, [r3, #4]
 8007150:	604a      	str	r2, [r1, #4]
	pxNewListItem->pxNext->pxPrevious = pxNewListItem;
 8007152:	6091      	str	r1, [r2, #8]
	pxNewListItem->pxPrevious = pxIterator;
 8007154:	608b      	str	r3, [r1, #8]
	pxIterator->pxNext = pxNewListItem;
 8007156:	6059      	str	r1, [r3, #4]

	/* Remember which list the item is in.  This allows fast removal of the
	item later. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 8007158:	6803      	ldr	r3, [r0, #0]
	pxNewListItem->pxContainer = pxList;
 800715a:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
 800715c:	3301      	adds	r3, #1
 800715e:	6003      	str	r3, [r0, #0]
}
 8007160:	bd30      	pop	{r4, r5, pc}
		for( pxIterator = ( ListItem_t * ) &( pxList->xListEnd ); pxIterator->pxNext->xItemValue <= xValueOfInsertion; pxIterator = pxIterator->pxNext ) /*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. *//*lint !e440 The iterator moves to a different value, not xValueOfInsertion. */
 8007162:	f100 0308 	add.w	r3, r0, #8
 8007166:	685c      	ldr	r4, [r3, #4]
 8007168:	6825      	ldr	r5, [r4, #0]
 800716a:	4295      	cmp	r5, r2
 800716c:	d8ef      	bhi.n	800714e <vListInsert+0xa>
 800716e:	4623      	mov	r3, r4
 8007170:	e7f9      	b.n	8007166 <vListInsert+0x22>

08007172 <uxListRemove>:
{
/* The list item knows which list it is in.  Obtain the list from the list
item. */
List_t * const pxList = pxItemToRemove->pxContainer;

	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 8007172:	e9d0 1201 	ldrd	r1, r2, [r0, #4]
List_t * const pxList = pxItemToRemove->pxContainer;
 8007176:	6903      	ldr	r3, [r0, #16]
	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 8007178:	608a      	str	r2, [r1, #8]
	pxItemToRemove->pxPrevious->pxNext = pxItemToRemove->pxNext;
 800717a:	6882      	ldr	r2, [r0, #8]
 800717c:	6051      	str	r1, [r2, #4]

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	/* Make sure the index is left pointing to a valid item. */
	if( pxList->pxIndex == pxItemToRemove )
 800717e:	6859      	ldr	r1, [r3, #4]
 8007180:	4281      	cmp	r1, r0
	{
		pxList->pxIndex = pxItemToRemove->pxPrevious;
 8007182:	bf08      	it	eq
 8007184:	605a      	streq	r2, [r3, #4]
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}

	pxItemToRemove->pxContainer = NULL;
 8007186:	2200      	movs	r2, #0
 8007188:	6102      	str	r2, [r0, #16]
	( pxList->uxNumberOfItems )--;
 800718a:	681a      	ldr	r2, [r3, #0]
 800718c:	3a01      	subs	r2, #1
 800718e:	601a      	str	r2, [r3, #0]

	return pxList->uxNumberOfItems;
 8007190:	6818      	ldr	r0, [r3, #0]
}
 8007192:	4770      	bx	lr

08007194 <prvTaskExitError>:
	return pxTopOfStack;
}
/*-----------------------------------------------------------*/

static void prvTaskExitError( void )
{
 8007194:	b082      	sub	sp, #8
volatile uint32_t ulDummy = 0;
 8007196:	2300      	movs	r3, #0
 8007198:	9301      	str	r3, [sp, #4]
	its caller as there is nothing to return to.  If a task wants to exit it
	should instead call vTaskDelete( NULL ).

	Artificially force an assert() to be triggered if configASSERT() is
	defined, then stop here so application writers can catch the error. */
	configASSERT( uxCriticalNesting == ~0UL );
 800719a:	4b0d      	ldr	r3, [pc, #52]	; (80071d0 <prvTaskExitError+0x3c>)
 800719c:	681b      	ldr	r3, [r3, #0]
 800719e:	3301      	adds	r3, #1
 80071a0:	d008      	beq.n	80071b4 <prvTaskExitError+0x20>
 80071a2:	f04f 0350 	mov.w	r3, #80	; 0x50
 80071a6:	f383 8811 	msr	BASEPRI, r3
 80071aa:	f3bf 8f6f 	isb	sy
 80071ae:	f3bf 8f4f 	dsb	sy
 80071b2:	e7fe      	b.n	80071b2 <prvTaskExitError+0x1e>
 80071b4:	f04f 0350 	mov.w	r3, #80	; 0x50
 80071b8:	f383 8811 	msr	BASEPRI, r3
 80071bc:	f3bf 8f6f 	isb	sy
 80071c0:	f3bf 8f4f 	dsb	sy
	portDISABLE_INTERRUPTS();
	while( ulDummy == 0 )
 80071c4:	9b01      	ldr	r3, [sp, #4]
 80071c6:	2b00      	cmp	r3, #0
 80071c8:	d0fc      	beq.n	80071c4 <prvTaskExitError+0x30>
		about code appearing after this function is called - making ulDummy
		volatile makes the compiler think the function could return and
		therefore not output an 'unreachable code' warning for code that appears
		after it. */
	}
}
 80071ca:	b002      	add	sp, #8
 80071cc:	4770      	bx	lr
 80071ce:	bf00      	nop
 80071d0:	20000090 	.word	0x20000090

080071d4 <prvPortStartFirstTask>:
{
	/* Start the first task.  This also clears the bit that indicates the FPU is
	in use in case the FPU was used before the scheduler was started - which
	would otherwise result in the unnecessary leaving of space in the SVC stack
	for lazy saving of FPU registers. */
	__asm volatile(
 80071d4:	4808      	ldr	r0, [pc, #32]	; (80071f8 <prvPortStartFirstTask+0x24>)
 80071d6:	6800      	ldr	r0, [r0, #0]
 80071d8:	6800      	ldr	r0, [r0, #0]
 80071da:	f380 8808 	msr	MSP, r0
 80071de:	f04f 0000 	mov.w	r0, #0
 80071e2:	f380 8814 	msr	CONTROL, r0
 80071e6:	b662      	cpsie	i
 80071e8:	b661      	cpsie	f
 80071ea:	f3bf 8f4f 	dsb	sy
 80071ee:	f3bf 8f6f 	isb	sy
 80071f2:	df00      	svc	0
 80071f4:	bf00      	nop
 80071f6:	0000      	.short	0x0000
 80071f8:	e000ed08 	.word	0xe000ed08

080071fc <vPortEnableVFP>:
/*-----------------------------------------------------------*/

/* This is a naked function. */
static void vPortEnableVFP( void )
{
	__asm volatile
 80071fc:	f8df 000c 	ldr.w	r0, [pc, #12]	; 800720c <vPortEnableVFP+0x10>
 8007200:	6801      	ldr	r1, [r0, #0]
 8007202:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 8007206:	6001      	str	r1, [r0, #0]
 8007208:	4770      	bx	lr
 800720a:	0000      	.short	0x0000
 800720c:	e000ed88 	.word	0xe000ed88

08007210 <pxPortInitialiseStack>:
	*pxTopOfStack = portINITIAL_XPSR;	/* xPSR */
 8007210:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
 8007214:	f840 3c04 	str.w	r3, [r0, #-4]
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
 8007218:	4b07      	ldr	r3, [pc, #28]	; (8007238 <pxPortInitialiseStack+0x28>)
 800721a:	f840 3c0c 	str.w	r3, [r0, #-12]
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
 800721e:	f021 0101 	bic.w	r1, r1, #1
	*pxTopOfStack = portINITIAL_EXC_RETURN;
 8007222:	f06f 0302 	mvn.w	r3, #2
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
 8007226:	f840 1c08 	str.w	r1, [r0, #-8]
	*pxTopOfStack = ( StackType_t ) pvParameters;	/* R0 */
 800722a:	f840 2c20 	str.w	r2, [r0, #-32]
	*pxTopOfStack = portINITIAL_EXC_RETURN;
 800722e:	f840 3c24 	str.w	r3, [r0, #-36]
}
 8007232:	3844      	subs	r0, #68	; 0x44
 8007234:	4770      	bx	lr
 8007236:	bf00      	nop
 8007238:	08007195 	.word	0x08007195
 800723c:	00000000 	.word	0x00000000

08007240 <SVC_Handler>:
	__asm volatile (
 8007240:	4b07      	ldr	r3, [pc, #28]	; (8007260 <pxCurrentTCBConst2>)
 8007242:	6819      	ldr	r1, [r3, #0]
 8007244:	6808      	ldr	r0, [r1, #0]
 8007246:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800724a:	f380 8809 	msr	PSP, r0
 800724e:	f3bf 8f6f 	isb	sy
 8007252:	f04f 0000 	mov.w	r0, #0
 8007256:	f380 8811 	msr	BASEPRI, r0
 800725a:	4770      	bx	lr
 800725c:	f3af 8000 	nop.w

08007260 <pxCurrentTCBConst2>:
 8007260:	20011d04 	.word	0x20011d04

08007264 <vPortEnterCritical>:
 8007264:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007268:	f383 8811 	msr	BASEPRI, r3
 800726c:	f3bf 8f6f 	isb	sy
 8007270:	f3bf 8f4f 	dsb	sy
	uxCriticalNesting++;
 8007274:	4a0a      	ldr	r2, [pc, #40]	; (80072a0 <vPortEnterCritical+0x3c>)
 8007276:	6813      	ldr	r3, [r2, #0]
 8007278:	3301      	adds	r3, #1
	if( uxCriticalNesting == 1 )
 800727a:	2b01      	cmp	r3, #1
	uxCriticalNesting++;
 800727c:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 1 )
 800727e:	d10d      	bne.n	800729c <vPortEnterCritical+0x38>
		configASSERT( ( portNVIC_INT_CTRL_REG & portVECTACTIVE_MASK ) == 0 );
 8007280:	4b08      	ldr	r3, [pc, #32]	; (80072a4 <vPortEnterCritical+0x40>)
 8007282:	681b      	ldr	r3, [r3, #0]
 8007284:	f013 0fff 	tst.w	r3, #255	; 0xff
 8007288:	d008      	beq.n	800729c <vPortEnterCritical+0x38>
 800728a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800728e:	f383 8811 	msr	BASEPRI, r3
 8007292:	f3bf 8f6f 	isb	sy
 8007296:	f3bf 8f4f 	dsb	sy
 800729a:	e7fe      	b.n	800729a <vPortEnterCritical+0x36>
}
 800729c:	4770      	bx	lr
 800729e:	bf00      	nop
 80072a0:	20000090 	.word	0x20000090
 80072a4:	e000ed04 	.word	0xe000ed04

080072a8 <vPortExitCritical>:
	configASSERT( uxCriticalNesting );
 80072a8:	4a08      	ldr	r2, [pc, #32]	; (80072cc <vPortExitCritical+0x24>)
 80072aa:	6813      	ldr	r3, [r2, #0]
 80072ac:	b943      	cbnz	r3, 80072c0 <vPortExitCritical+0x18>
 80072ae:	f04f 0350 	mov.w	r3, #80	; 0x50
 80072b2:	f383 8811 	msr	BASEPRI, r3
 80072b6:	f3bf 8f6f 	isb	sy
 80072ba:	f3bf 8f4f 	dsb	sy
 80072be:	e7fe      	b.n	80072be <vPortExitCritical+0x16>
	uxCriticalNesting--;
 80072c0:	3b01      	subs	r3, #1
 80072c2:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 0 )
 80072c4:	b90b      	cbnz	r3, 80072ca <vPortExitCritical+0x22>
}
/*-----------------------------------------------------------*/

portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
{
	__asm volatile
 80072c6:	f383 8811 	msr	BASEPRI, r3
}
 80072ca:	4770      	bx	lr
 80072cc:	20000090 	.word	0x20000090

080072d0 <PendSV_Handler>:
	__asm volatile
 80072d0:	f3ef 8009 	mrs	r0, PSP
 80072d4:	f3bf 8f6f 	isb	sy
 80072d8:	4b15      	ldr	r3, [pc, #84]	; (8007330 <pxCurrentTCBConst>)
 80072da:	681a      	ldr	r2, [r3, #0]
 80072dc:	f01e 0f10 	tst.w	lr, #16
 80072e0:	bf08      	it	eq
 80072e2:	ed20 8a10 	vstmdbeq	r0!, {s16-s31}
 80072e6:	e920 4ff0 	stmdb	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80072ea:	6010      	str	r0, [r2, #0]
 80072ec:	e92d 0009 	stmdb	sp!, {r0, r3}
 80072f0:	f04f 0050 	mov.w	r0, #80	; 0x50
 80072f4:	f380 8811 	msr	BASEPRI, r0
 80072f8:	f3bf 8f4f 	dsb	sy
 80072fc:	f3bf 8f6f 	isb	sy
 8007300:	f001 f91c 	bl	800853c <vTaskSwitchContext>
 8007304:	f04f 0000 	mov.w	r0, #0
 8007308:	f380 8811 	msr	BASEPRI, r0
 800730c:	bc09      	pop	{r0, r3}
 800730e:	6819      	ldr	r1, [r3, #0]
 8007310:	6808      	ldr	r0, [r1, #0]
 8007312:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8007316:	f01e 0f10 	tst.w	lr, #16
 800731a:	bf08      	it	eq
 800731c:	ecb0 8a10 	vldmiaeq	r0!, {s16-s31}
 8007320:	f380 8809 	msr	PSP, r0
 8007324:	f3bf 8f6f 	isb	sy
 8007328:	4770      	bx	lr
 800732a:	bf00      	nop
 800732c:	f3af 8000 	nop.w

08007330 <pxCurrentTCBConst>:
 8007330:	20011d04 	.word	0x20011d04

08007334 <SysTick_Handler>:
{
 8007334:	b508      	push	{r3, lr}
	__asm volatile
 8007336:	f04f 0350 	mov.w	r3, #80	; 0x50
 800733a:	f383 8811 	msr	BASEPRI, r3
 800733e:	f3bf 8f6f 	isb	sy
 8007342:	f3bf 8f4f 	dsb	sy
		if( xTaskIncrementTick() != pdFALSE )
 8007346:	f000 fff5 	bl	8008334 <xTaskIncrementTick>
 800734a:	b118      	cbz	r0, 8007354 <SysTick_Handler+0x20>
			portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;
 800734c:	4b03      	ldr	r3, [pc, #12]	; (800735c <SysTick_Handler+0x28>)
 800734e:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8007352:	601a      	str	r2, [r3, #0]
	__asm volatile
 8007354:	2300      	movs	r3, #0
 8007356:	f383 8811 	msr	BASEPRI, r3
}
 800735a:	bd08      	pop	{r3, pc}
 800735c:	e000ed04 	.word	0xe000ed04

08007360 <vPortSetupTimerInterrupt>:
	portNVIC_SYSTICK_CTRL_REG = 0UL;
 8007360:	4a08      	ldr	r2, [pc, #32]	; (8007384 <vPortSetupTimerInterrupt+0x24>)
	portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
 8007362:	4909      	ldr	r1, [pc, #36]	; (8007388 <vPortSetupTimerInterrupt+0x28>)
	portNVIC_SYSTICK_CTRL_REG = 0UL;
 8007364:	2300      	movs	r3, #0
 8007366:	6013      	str	r3, [r2, #0]
	portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
 8007368:	600b      	str	r3, [r1, #0]
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
 800736a:	4b08      	ldr	r3, [pc, #32]	; (800738c <vPortSetupTimerInterrupt+0x2c>)
 800736c:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 8007370:	681b      	ldr	r3, [r3, #0]
 8007372:	fbb3 f3f1 	udiv	r3, r3, r1
 8007376:	4906      	ldr	r1, [pc, #24]	; (8007390 <vPortSetupTimerInterrupt+0x30>)
 8007378:	3b01      	subs	r3, #1
 800737a:	600b      	str	r3, [r1, #0]
	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT );
 800737c:	2307      	movs	r3, #7
 800737e:	6013      	str	r3, [r2, #0]
}
 8007380:	4770      	bx	lr
 8007382:	bf00      	nop
 8007384:	e000e010 	.word	0xe000e010
 8007388:	e000e018 	.word	0xe000e018
 800738c:	20000084 	.word	0x20000084
 8007390:	e000e014 	.word	0xe000e014

08007394 <xPortStartScheduler>:
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
 8007394:	4b39      	ldr	r3, [pc, #228]	; (800747c <xPortStartScheduler+0xe8>)
 8007396:	4a3a      	ldr	r2, [pc, #232]	; (8007480 <xPortStartScheduler+0xec>)
{
 8007398:	b513      	push	{r0, r1, r4, lr}
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
 800739a:	6819      	ldr	r1, [r3, #0]
 800739c:	4291      	cmp	r1, r2
 800739e:	d108      	bne.n	80073b2 <xPortStartScheduler+0x1e>
	__asm volatile
 80073a0:	f04f 0350 	mov.w	r3, #80	; 0x50
 80073a4:	f383 8811 	msr	BASEPRI, r3
 80073a8:	f3bf 8f6f 	isb	sy
 80073ac:	f3bf 8f4f 	dsb	sy
 80073b0:	e7fe      	b.n	80073b0 <xPortStartScheduler+0x1c>
	configASSERT( portCPUID != portCORTEX_M7_r0p0_ID );
 80073b2:	681a      	ldr	r2, [r3, #0]
 80073b4:	4b33      	ldr	r3, [pc, #204]	; (8007484 <xPortStartScheduler+0xf0>)
 80073b6:	429a      	cmp	r2, r3
 80073b8:	d108      	bne.n	80073cc <xPortStartScheduler+0x38>
 80073ba:	f04f 0350 	mov.w	r3, #80	; 0x50
 80073be:	f383 8811 	msr	BASEPRI, r3
 80073c2:	f3bf 8f6f 	isb	sy
 80073c6:	f3bf 8f4f 	dsb	sy
 80073ca:	e7fe      	b.n	80073ca <xPortStartScheduler+0x36>
		ulOriginalPriority = *pucFirstUserPriorityRegister;
 80073cc:	4b2e      	ldr	r3, [pc, #184]	; (8007488 <xPortStartScheduler+0xf4>)
 80073ce:	781a      	ldrb	r2, [r3, #0]
 80073d0:	b2d2      	uxtb	r2, r2
 80073d2:	9201      	str	r2, [sp, #4]
		*pucFirstUserPriorityRegister = portMAX_8_BIT_VALUE;
 80073d4:	22ff      	movs	r2, #255	; 0xff
 80073d6:	701a      	strb	r2, [r3, #0]
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
 80073d8:	781b      	ldrb	r3, [r3, #0]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 80073da:	4a2c      	ldr	r2, [pc, #176]	; (800748c <xPortStartScheduler+0xf8>)
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
 80073dc:	b2db      	uxtb	r3, r3
 80073de:	f88d 3003 	strb.w	r3, [sp, #3]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 80073e2:	f89d 3003 	ldrb.w	r3, [sp, #3]
 80073e6:	f003 0350 	and.w	r3, r3, #80	; 0x50
 80073ea:	7013      	strb	r3, [r2, #0]
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
 80073ec:	4b28      	ldr	r3, [pc, #160]	; (8007490 <xPortStartScheduler+0xfc>)
 80073ee:	2207      	movs	r2, #7
 80073f0:	601a      	str	r2, [r3, #0]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 80073f2:	2100      	movs	r1, #0
 80073f4:	f89d 0003 	ldrb.w	r0, [sp, #3]
 80073f8:	0600      	lsls	r0, r0, #24
 80073fa:	f102 34ff 	add.w	r4, r2, #4294967295
 80073fe:	d40d      	bmi.n	800741c <xPortStartScheduler+0x88>
 8007400:	b101      	cbz	r1, 8007404 <xPortStartScheduler+0x70>
 8007402:	601a      	str	r2, [r3, #0]
			configASSERT( ( portMAX_PRIGROUP_BITS - ulMaxPRIGROUPValue ) == configPRIO_BITS );
 8007404:	681a      	ldr	r2, [r3, #0]
 8007406:	2a03      	cmp	r2, #3
 8007408:	d011      	beq.n	800742e <xPortStartScheduler+0x9a>
 800740a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800740e:	f383 8811 	msr	BASEPRI, r3
 8007412:	f3bf 8f6f 	isb	sy
 8007416:	f3bf 8f4f 	dsb	sy
 800741a:	e7fe      	b.n	800741a <xPortStartScheduler+0x86>
			ucMaxPriorityValue <<= ( uint8_t ) 0x01;
 800741c:	f89d 2003 	ldrb.w	r2, [sp, #3]
 8007420:	0052      	lsls	r2, r2, #1
 8007422:	b2d2      	uxtb	r2, r2
 8007424:	f88d 2003 	strb.w	r2, [sp, #3]
 8007428:	2101      	movs	r1, #1
 800742a:	4622      	mov	r2, r4
 800742c:	e7e2      	b.n	80073f4 <xPortStartScheduler+0x60>
		ulMaxPRIGROUPValue <<= portPRIGROUP_SHIFT;
 800742e:	0212      	lsls	r2, r2, #8
		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
 8007430:	f402 62e0 	and.w	r2, r2, #1792	; 0x700
 8007434:	601a      	str	r2, [r3, #0]
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 8007436:	9b01      	ldr	r3, [sp, #4]
 8007438:	4a13      	ldr	r2, [pc, #76]	; (8007488 <xPortStartScheduler+0xf4>)
 800743a:	b2db      	uxtb	r3, r3
 800743c:	7013      	strb	r3, [r2, #0]
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 800743e:	4b15      	ldr	r3, [pc, #84]	; (8007494 <xPortStartScheduler+0x100>)
 8007440:	681a      	ldr	r2, [r3, #0]
 8007442:	f442 0270 	orr.w	r2, r2, #15728640	; 0xf00000
 8007446:	601a      	str	r2, [r3, #0]
	portNVIC_SYSPRI2_REG |= portNVIC_SYSTICK_PRI;
 8007448:	681a      	ldr	r2, [r3, #0]
 800744a:	f042 4270 	orr.w	r2, r2, #4026531840	; 0xf0000000
 800744e:	601a      	str	r2, [r3, #0]
	vPortSetupTimerInterrupt();
 8007450:	f7ff ff86 	bl	8007360 <vPortSetupTimerInterrupt>
	uxCriticalNesting = 0;
 8007454:	4b10      	ldr	r3, [pc, #64]	; (8007498 <xPortStartScheduler+0x104>)
 8007456:	2400      	movs	r4, #0
 8007458:	601c      	str	r4, [r3, #0]
	vPortEnableVFP();
 800745a:	f7ff fecf 	bl	80071fc <vPortEnableVFP>
	*( portFPCCR ) |= portASPEN_AND_LSPEN_BITS;
 800745e:	4a0f      	ldr	r2, [pc, #60]	; (800749c <xPortStartScheduler+0x108>)
 8007460:	6813      	ldr	r3, [r2, #0]
 8007462:	f043 4340 	orr.w	r3, r3, #3221225472	; 0xc0000000
 8007466:	6013      	str	r3, [r2, #0]
	prvPortStartFirstTask();
 8007468:	f7ff feb4 	bl	80071d4 <prvPortStartFirstTask>
	vTaskSwitchContext();
 800746c:	f001 f866 	bl	800853c <vTaskSwitchContext>
	prvTaskExitError();
 8007470:	f7ff fe90 	bl	8007194 <prvTaskExitError>
}
 8007474:	4620      	mov	r0, r4
 8007476:	b002      	add	sp, #8
 8007478:	bd10      	pop	{r4, pc}
 800747a:	bf00      	nop
 800747c:	e000ed00 	.word	0xe000ed00
 8007480:	410fc271 	.word	0x410fc271
 8007484:	410fc270 	.word	0x410fc270
 8007488:	e000e400 	.word	0xe000e400
 800748c:	20011cfc 	.word	0x20011cfc
 8007490:	20011d00 	.word	0x20011d00
 8007494:	e000ed20 	.word	0xe000ed20
 8007498:	20000090 	.word	0x20000090
 800749c:	e000ef34 	.word	0xe000ef34

080074a0 <vPortValidateInterruptPriority>:
	{
	uint32_t ulCurrentInterrupt;
	uint8_t ucCurrentPriority;

		/* Obtain the number of the currently executing interrupt. */
		__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
 80074a0:	f3ef 8305 	mrs	r3, IPSR

		/* Is the interrupt number a user defined interrupt? */
		if( ulCurrentInterrupt >= portFIRST_USER_INTERRUPT_NUMBER )
 80074a4:	2b0f      	cmp	r3, #15
 80074a6:	d90e      	bls.n	80074c6 <vPortValidateInterruptPriority+0x26>
		{
			/* Look up the interrupt's priority. */
			ucCurrentPriority = pcInterruptPriorityRegisters[ ulCurrentInterrupt ];
 80074a8:	4a10      	ldr	r2, [pc, #64]	; (80074ec <vPortValidateInterruptPriority+0x4c>)
 80074aa:	5c9b      	ldrb	r3, [r3, r2]
			interrupt entry is as fast and simple as possible.

			The following links provide detailed information:
			http://www.freertos.org/RTOS-Cortex-M3-M4.html
			http://www.freertos.org/FAQHelp.html */
			configASSERT( ucCurrentPriority >= ucMaxSysCallPriority );
 80074ac:	4a10      	ldr	r2, [pc, #64]	; (80074f0 <vPortValidateInterruptPriority+0x50>)
 80074ae:	7812      	ldrb	r2, [r2, #0]
 80074b0:	429a      	cmp	r2, r3
 80074b2:	d908      	bls.n	80074c6 <vPortValidateInterruptPriority+0x26>
 80074b4:	f04f 0350 	mov.w	r3, #80	; 0x50
 80074b8:	f383 8811 	msr	BASEPRI, r3
 80074bc:	f3bf 8f6f 	isb	sy
 80074c0:	f3bf 8f4f 	dsb	sy
 80074c4:	e7fe      	b.n	80074c4 <vPortValidateInterruptPriority+0x24>
		configuration then the correct setting can be achieved on all Cortex-M
		devices by calling NVIC_SetPriorityGrouping( 0 ); before starting the
		scheduler.  Note however that some vendor specific peripheral libraries
		assume a non-zero priority group setting, in which cases using a value
		of zero will result in unpredictable behaviour. */
		configASSERT( ( portAIRCR_REG & portPRIORITY_GROUP_MASK ) <= ulMaxPRIGROUPValue );
 80074c6:	4b0b      	ldr	r3, [pc, #44]	; (80074f4 <vPortValidateInterruptPriority+0x54>)
 80074c8:	4a0b      	ldr	r2, [pc, #44]	; (80074f8 <vPortValidateInterruptPriority+0x58>)
 80074ca:	681b      	ldr	r3, [r3, #0]
 80074cc:	6812      	ldr	r2, [r2, #0]
 80074ce:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
 80074d2:	4293      	cmp	r3, r2
 80074d4:	d908      	bls.n	80074e8 <vPortValidateInterruptPriority+0x48>
 80074d6:	f04f 0350 	mov.w	r3, #80	; 0x50
 80074da:	f383 8811 	msr	BASEPRI, r3
 80074de:	f3bf 8f6f 	isb	sy
 80074e2:	f3bf 8f4f 	dsb	sy
 80074e6:	e7fe      	b.n	80074e6 <vPortValidateInterruptPriority+0x46>
	}
 80074e8:	4770      	bx	lr
 80074ea:	bf00      	nop
 80074ec:	e000e3f0 	.word	0xe000e3f0
 80074f0:	20011cfc 	.word	0x20011cfc
 80074f4:	e000ed0c 	.word	0xe000ed0c
 80074f8:	20011d00 	.word	0x20011d00

080074fc <prvIsQueueEmpty>:
	taskEXIT_CRITICAL();
}
/*-----------------------------------------------------------*/

static BaseType_t prvIsQueueEmpty( const Queue_t *pxQueue )
{
 80074fc:	b510      	push	{r4, lr}
 80074fe:	4604      	mov	r4, r0
BaseType_t xReturn;

	taskENTER_CRITICAL();
 8007500:	f7ff feb0 	bl	8007264 <vPortEnterCritical>
	{
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
 8007504:	6ba4      	ldr	r4, [r4, #56]	; 0x38
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
 8007506:	f7ff fecf 	bl	80072a8 <vPortExitCritical>

	return xReturn;
}
 800750a:	fab4 f084 	clz	r0, r4
 800750e:	0940      	lsrs	r0, r0, #5
 8007510:	bd10      	pop	{r4, pc}

08007512 <prvCopyDataToQueue>:
{
 8007512:	b570      	push	{r4, r5, r6, lr}
 8007514:	4615      	mov	r5, r2
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 8007516:	6c02      	ldr	r2, [r0, #64]	; 0x40
	uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 8007518:	6b86      	ldr	r6, [r0, #56]	; 0x38
{
 800751a:	4604      	mov	r4, r0
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 800751c:	b942      	cbnz	r2, 8007530 <prvCopyDataToQueue+0x1e>
			if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 800751e:	6805      	ldr	r5, [r0, #0]
 8007520:	b99d      	cbnz	r5, 800754a <prvCopyDataToQueue+0x38>
				xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
 8007522:	6880      	ldr	r0, [r0, #8]
 8007524:	f001 f95c 	bl	80087e0 <xTaskPriorityDisinherit>
				pxQueue->u.xSemaphore.xMutexHolder = NULL;
 8007528:	60a5      	str	r5, [r4, #8]
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800752a:	3601      	adds	r6, #1
 800752c:	63a6      	str	r6, [r4, #56]	; 0x38
}
 800752e:	bd70      	pop	{r4, r5, r6, pc}
	else if( xPosition == queueSEND_TO_BACK )
 8007530:	b96d      	cbnz	r5, 800754e <prvCopyDataToQueue+0x3c>
		( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports, plus previous logic ensures a null pointer can only be passed to memcpy() if the copy size is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 8007532:	6840      	ldr	r0, [r0, #4]
 8007534:	f012 f8a0 	bl	8019678 <memcpy>
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8007538:	6863      	ldr	r3, [r4, #4]
 800753a:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800753c:	4413      	add	r3, r2
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 800753e:	68a2      	ldr	r2, [r4, #8]
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8007540:	6063      	str	r3, [r4, #4]
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 8007542:	4293      	cmp	r3, r2
 8007544:	d301      	bcc.n	800754a <prvCopyDataToQueue+0x38>
			pxQueue->pcWriteTo = pxQueue->pcHead;
 8007546:	6823      	ldr	r3, [r4, #0]
 8007548:	6063      	str	r3, [r4, #4]
BaseType_t xReturn = pdFALSE;
 800754a:	2000      	movs	r0, #0
 800754c:	e7ed      	b.n	800752a <prvCopyDataToQueue+0x18>
		( void ) memcpy( ( void * ) pxQueue->u.xQueue.pcReadFrom, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e9087 !e418 MISRA exception as the casts are only redundant for some ports.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes.  Assert checks null pointer only used when length is 0. */
 800754e:	68c0      	ldr	r0, [r0, #12]
 8007550:	f012 f892 	bl	8019678 <memcpy>
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 8007554:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8007556:	68e2      	ldr	r2, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 8007558:	6821      	ldr	r1, [r4, #0]
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 800755a:	425b      	negs	r3, r3
 800755c:	441a      	add	r2, r3
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 800755e:	428a      	cmp	r2, r1
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 8007560:	60e2      	str	r2, [r4, #12]
			pxQueue->u.xQueue.pcReadFrom = ( pxQueue->u.xQueue.pcTail - pxQueue->uxItemSize );
 8007562:	bf3e      	ittt	cc
 8007564:	68a2      	ldrcc	r2, [r4, #8]
 8007566:	189b      	addcc	r3, r3, r2
 8007568:	60e3      	strcc	r3, [r4, #12]
		if( xPosition == queueOVERWRITE )
 800756a:	2d02      	cmp	r5, #2
 800756c:	d1ed      	bne.n	800754a <prvCopyDataToQueue+0x38>
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 800756e:	b10e      	cbz	r6, 8007574 <prvCopyDataToQueue+0x62>
				--uxMessagesWaiting;
 8007570:	3e01      	subs	r6, #1
 8007572:	e7ea      	b.n	800754a <prvCopyDataToQueue+0x38>
BaseType_t xReturn = pdFALSE;
 8007574:	4630      	mov	r0, r6
 8007576:	e7d8      	b.n	800752a <prvCopyDataToQueue+0x18>

08007578 <prvCopyDataFromQueue>:
{
 8007578:	4603      	mov	r3, r0
 800757a:	b410      	push	{r4}
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 800757c:	6c1a      	ldr	r2, [r3, #64]	; 0x40
{
 800757e:	4608      	mov	r0, r1
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 8007580:	b162      	cbz	r2, 800759c <prvCopyDataFromQueue+0x24>
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8007582:	68d9      	ldr	r1, [r3, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 8007584:	689c      	ldr	r4, [r3, #8]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8007586:	4411      	add	r1, r2
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 8007588:	42a1      	cmp	r1, r4
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800758a:	60d9      	str	r1, [r3, #12]
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
 800758c:	bf24      	itt	cs
 800758e:	6819      	ldrcs	r1, [r3, #0]
 8007590:	60d9      	strcs	r1, [r3, #12]
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 8007592:	68d9      	ldr	r1, [r3, #12]
}
 8007594:	f85d 4b04 	ldr.w	r4, [sp], #4
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 8007598:	f012 b86e 	b.w	8019678 <memcpy>
}
 800759c:	f85d 4b04 	ldr.w	r4, [sp], #4
 80075a0:	4770      	bx	lr

080075a2 <prvUnlockQueue>:
{
 80075a2:	b570      	push	{r4, r5, r6, lr}
 80075a4:	4604      	mov	r4, r0
	taskENTER_CRITICAL();
 80075a6:	f7ff fe5d 	bl	8007264 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 80075aa:	f894 5045 	ldrb.w	r5, [r4, #69]	; 0x45
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 80075ae:	f104 0624 	add.w	r6, r4, #36	; 0x24
		int8_t cTxLock = pxQueue->cTxLock;
 80075b2:	b26d      	sxtb	r5, r5
		while( cTxLock > queueLOCKED_UNMODIFIED )
 80075b4:	2d00      	cmp	r5, #0
 80075b6:	dc14      	bgt.n	80075e2 <prvUnlockQueue+0x40>
		pxQueue->cTxLock = queueUNLOCKED;
 80075b8:	23ff      	movs	r3, #255	; 0xff
 80075ba:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 80075be:	f7ff fe73 	bl	80072a8 <vPortExitCritical>
	taskENTER_CRITICAL();
 80075c2:	f7ff fe4f 	bl	8007264 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 80075c6:	f894 5044 	ldrb.w	r5, [r4, #68]	; 0x44
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 80075ca:	f104 0610 	add.w	r6, r4, #16
		int8_t cRxLock = pxQueue->cRxLock;
 80075ce:	b26d      	sxtb	r5, r5
		while( cRxLock > queueLOCKED_UNMODIFIED )
 80075d0:	2d00      	cmp	r5, #0
 80075d2:	dc12      	bgt.n	80075fa <prvUnlockQueue+0x58>
		pxQueue->cRxLock = queueUNLOCKED;
 80075d4:	23ff      	movs	r3, #255	; 0xff
 80075d6:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
}
 80075da:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
	taskEXIT_CRITICAL();
 80075de:	f7ff be63 	b.w	80072a8 <vPortExitCritical>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 80075e2:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80075e4:	2b00      	cmp	r3, #0
 80075e6:	d0e7      	beq.n	80075b8 <prvUnlockQueue+0x16>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 80075e8:	4630      	mov	r0, r6
 80075ea:	f001 f81b 	bl	8008624 <xTaskRemoveFromEventList>
 80075ee:	b108      	cbz	r0, 80075f4 <prvUnlockQueue+0x52>
						vTaskMissedYield();
 80075f0:	f001 f8a0 	bl	8008734 <vTaskMissedYield>
 80075f4:	3d01      	subs	r5, #1
 80075f6:	b26d      	sxtb	r5, r5
 80075f8:	e7dc      	b.n	80075b4 <prvUnlockQueue+0x12>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 80075fa:	6923      	ldr	r3, [r4, #16]
 80075fc:	2b00      	cmp	r3, #0
 80075fe:	d0e9      	beq.n	80075d4 <prvUnlockQueue+0x32>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8007600:	4630      	mov	r0, r6
 8007602:	f001 f80f 	bl	8008624 <xTaskRemoveFromEventList>
 8007606:	b108      	cbz	r0, 800760c <prvUnlockQueue+0x6a>
					vTaskMissedYield();
 8007608:	f001 f894 	bl	8008734 <vTaskMissedYield>
 800760c:	3d01      	subs	r5, #1
 800760e:	b26d      	sxtb	r5, r5
 8007610:	e7de      	b.n	80075d0 <prvUnlockQueue+0x2e>
	...

08007614 <xQueueGenericReset>:
{
 8007614:	b538      	push	{r3, r4, r5, lr}
 8007616:	460d      	mov	r5, r1
	configASSERT( pxQueue );
 8007618:	4604      	mov	r4, r0
 800761a:	b940      	cbnz	r0, 800762e <xQueueGenericReset+0x1a>
 800761c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007620:	f383 8811 	msr	BASEPRI, r3
 8007624:	f3bf 8f6f 	isb	sy
 8007628:	f3bf 8f4f 	dsb	sy
 800762c:	e7fe      	b.n	800762c <xQueueGenericReset+0x18>
	taskENTER_CRITICAL();
 800762e:	f7ff fe19 	bl	8007264 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8007632:	e9d4 300f 	ldrd	r3, r0, [r4, #60]	; 0x3c
 8007636:	6822      	ldr	r2, [r4, #0]
		pxQueue->pcWriteTo = pxQueue->pcHead;
 8007638:	6062      	str	r2, [r4, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800763a:	4343      	muls	r3, r0
 800763c:	18d1      	adds	r1, r2, r3
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800763e:	1a1b      	subs	r3, r3, r0
 8007640:	4413      	add	r3, r2
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8007642:	60a1      	str	r1, [r4, #8]
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8007644:	60e3      	str	r3, [r4, #12]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 8007646:	2100      	movs	r1, #0
		pxQueue->cRxLock = queueUNLOCKED;
 8007648:	23ff      	movs	r3, #255	; 0xff
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800764a:	63a1      	str	r1, [r4, #56]	; 0x38
		pxQueue->cRxLock = queueUNLOCKED;
 800764c:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
		pxQueue->cTxLock = queueUNLOCKED;
 8007650:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
		if( xNewQueue == pdFALSE )
 8007654:	b995      	cbnz	r5, 800767c <xQueueGenericReset+0x68>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8007656:	6923      	ldr	r3, [r4, #16]
 8007658:	b163      	cbz	r3, 8007674 <xQueueGenericReset+0x60>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800765a:	f104 0010 	add.w	r0, r4, #16
 800765e:	f000 ffe1 	bl	8008624 <xTaskRemoveFromEventList>
 8007662:	b138      	cbz	r0, 8007674 <xQueueGenericReset+0x60>
					queueYIELD_IF_USING_PREEMPTION();
 8007664:	4b0a      	ldr	r3, [pc, #40]	; (8007690 <xQueueGenericReset+0x7c>)
 8007666:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800766a:	601a      	str	r2, [r3, #0]
 800766c:	f3bf 8f4f 	dsb	sy
 8007670:	f3bf 8f6f 	isb	sy
	taskEXIT_CRITICAL();
 8007674:	f7ff fe18 	bl	80072a8 <vPortExitCritical>
}
 8007678:	2001      	movs	r0, #1
 800767a:	bd38      	pop	{r3, r4, r5, pc}
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 800767c:	f104 0010 	add.w	r0, r4, #16
 8007680:	f7ff fd46 	bl	8007110 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 8007684:	f104 0024 	add.w	r0, r4, #36	; 0x24
 8007688:	f7ff fd42 	bl	8007110 <vListInitialise>
 800768c:	e7f2      	b.n	8007674 <xQueueGenericReset+0x60>
 800768e:	bf00      	nop
 8007690:	e000ed04 	.word	0xe000ed04

08007694 <xQueueGenericCreateStatic>:
	{
 8007694:	b513      	push	{r0, r1, r4, lr}
 8007696:	461c      	mov	r4, r3
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 8007698:	b940      	cbnz	r0, 80076ac <xQueueGenericCreateStatic+0x18>
 800769a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800769e:	f383 8811 	msr	BASEPRI, r3
 80076a2:	f3bf 8f6f 	isb	sy
 80076a6:	f3bf 8f4f 	dsb	sy
 80076aa:	e7fe      	b.n	80076aa <xQueueGenericCreateStatic+0x16>
		configASSERT( pxStaticQueue != NULL );
 80076ac:	b943      	cbnz	r3, 80076c0 <xQueueGenericCreateStatic+0x2c>
 80076ae:	f04f 0350 	mov.w	r3, #80	; 0x50
 80076b2:	f383 8811 	msr	BASEPRI, r3
 80076b6:	f3bf 8f6f 	isb	sy
 80076ba:	f3bf 8f4f 	dsb	sy
 80076be:	e7fe      	b.n	80076be <xQueueGenericCreateStatic+0x2a>
		configASSERT( !( ( pucQueueStorage != NULL ) && ( uxItemSize == 0 ) ) );
 80076c0:	b14a      	cbz	r2, 80076d6 <xQueueGenericCreateStatic+0x42>
 80076c2:	b991      	cbnz	r1, 80076ea <xQueueGenericCreateStatic+0x56>
 80076c4:	f04f 0350 	mov.w	r3, #80	; 0x50
 80076c8:	f383 8811 	msr	BASEPRI, r3
 80076cc:	f3bf 8f6f 	isb	sy
 80076d0:	f3bf 8f4f 	dsb	sy
 80076d4:	e7fe      	b.n	80076d4 <xQueueGenericCreateStatic+0x40>
		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
 80076d6:	b141      	cbz	r1, 80076ea <xQueueGenericCreateStatic+0x56>
 80076d8:	f04f 0350 	mov.w	r3, #80	; 0x50
 80076dc:	f383 8811 	msr	BASEPRI, r3
 80076e0:	f3bf 8f6f 	isb	sy
 80076e4:	f3bf 8f4f 	dsb	sy
 80076e8:	e7fe      	b.n	80076e8 <xQueueGenericCreateStatic+0x54>
			volatile size_t xSize = sizeof( StaticQueue_t );
 80076ea:	2350      	movs	r3, #80	; 0x50
 80076ec:	9301      	str	r3, [sp, #4]
			configASSERT( xSize == sizeof( Queue_t ) );
 80076ee:	9b01      	ldr	r3, [sp, #4]
 80076f0:	2b50      	cmp	r3, #80	; 0x50
 80076f2:	d008      	beq.n	8007706 <xQueueGenericCreateStatic+0x72>
 80076f4:	f04f 0350 	mov.w	r3, #80	; 0x50
 80076f8:	f383 8811 	msr	BASEPRI, r3
 80076fc:	f3bf 8f6f 	isb	sy
 8007700:	f3bf 8f4f 	dsb	sy
 8007704:	e7fe      	b.n	8007704 <xQueueGenericCreateStatic+0x70>
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
 8007706:	2900      	cmp	r1, #0
 8007708:	bf08      	it	eq
 800770a:	4622      	moveq	r2, r4
			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
 800770c:	9b01      	ldr	r3, [sp, #4]
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
 800770e:	6022      	str	r2, [r4, #0]
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 8007710:	2301      	movs	r3, #1
	pxNewQueue->uxItemSize = uxItemSize;
 8007712:	e9c4 010f 	strd	r0, r1, [r4, #60]	; 0x3c
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 8007716:	f884 3046 	strb.w	r3, [r4, #70]	; 0x46
	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 800771a:	4619      	mov	r1, r3
 800771c:	4620      	mov	r0, r4
 800771e:	f7ff ff79 	bl	8007614 <xQueueGenericReset>
		pxNewQueue->ucQueueType = ucQueueType;
 8007722:	f89d 3010 	ldrb.w	r3, [sp, #16]
 8007726:	f884 304c 	strb.w	r3, [r4, #76]	; 0x4c
	}
 800772a:	4620      	mov	r0, r4
 800772c:	b002      	add	sp, #8
 800772e:	bd10      	pop	{r4, pc}

08007730 <xQueueGenericCreate>:
	{
 8007730:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8007732:	460d      	mov	r5, r1
 8007734:	4617      	mov	r7, r2
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 8007736:	4606      	mov	r6, r0
 8007738:	b940      	cbnz	r0, 800774c <xQueueGenericCreate+0x1c>
 800773a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800773e:	f383 8811 	msr	BASEPRI, r3
 8007742:	f3bf 8f6f 	isb	sy
 8007746:	f3bf 8f4f 	dsb	sy
 800774a:	e7fe      	b.n	800774a <xQueueGenericCreate+0x1a>
			xQueueSizeInBytes = ( size_t ) ( uxQueueLength * uxItemSize ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800774c:	4348      	muls	r0, r1
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !e9079 see comment above. */
 800774e:	3050      	adds	r0, #80	; 0x50
 8007750:	f7ff fc1a 	bl	8006f88 <pvPortMalloc>
		if( pxNewQueue != NULL )
 8007754:	4604      	mov	r4, r0
 8007756:	b160      	cbz	r0, 8007772 <xQueueGenericCreate+0x42>
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
 8007758:	2300      	movs	r3, #0
 800775a:	f880 3046 	strb.w	r3, [r0, #70]	; 0x46
	if( uxItemSize == ( UBaseType_t ) 0 )
 800775e:	b955      	cbnz	r5, 8007776 <xQueueGenericCreate+0x46>
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
 8007760:	6020      	str	r0, [r4, #0]
	pxNewQueue->uxItemSize = uxItemSize;
 8007762:	e9c4 650f 	strd	r6, r5, [r4, #60]	; 0x3c
	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 8007766:	2101      	movs	r1, #1
 8007768:	4620      	mov	r0, r4
 800776a:	f7ff ff53 	bl	8007614 <xQueueGenericReset>
		pxNewQueue->ucQueueType = ucQueueType;
 800776e:	f884 704c 	strb.w	r7, [r4, #76]	; 0x4c
	}
 8007772:	4620      	mov	r0, r4
 8007774:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
			pucQueueStorage += sizeof( Queue_t ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8007776:	f100 0350 	add.w	r3, r0, #80	; 0x50
		pxNewQueue->pcHead = ( int8_t * ) pucQueueStorage;
 800777a:	6003      	str	r3, [r0, #0]
 800777c:	e7f1      	b.n	8007762 <xQueueGenericCreate+0x32>

0800777e <xQueueCreateCountingSemaphoreStatic>:
	{
 800777e:	b513      	push	{r0, r1, r4, lr}
 8007780:	4613      	mov	r3, r2
 8007782:	460c      	mov	r4, r1
		configASSERT( uxMaxCount != 0 );
 8007784:	b940      	cbnz	r0, 8007798 <xQueueCreateCountingSemaphoreStatic+0x1a>
 8007786:	f04f 0350 	mov.w	r3, #80	; 0x50
 800778a:	f383 8811 	msr	BASEPRI, r3
 800778e:	f3bf 8f6f 	isb	sy
 8007792:	f3bf 8f4f 	dsb	sy
 8007796:	e7fe      	b.n	8007796 <xQueueCreateCountingSemaphoreStatic+0x18>
		configASSERT( uxInitialCount <= uxMaxCount );
 8007798:	4288      	cmp	r0, r1
 800779a:	d208      	bcs.n	80077ae <xQueueCreateCountingSemaphoreStatic+0x30>
 800779c:	f04f 0350 	mov.w	r3, #80	; 0x50
 80077a0:	f383 8811 	msr	BASEPRI, r3
 80077a4:	f3bf 8f6f 	isb	sy
 80077a8:	f3bf 8f4f 	dsb	sy
 80077ac:	e7fe      	b.n	80077ac <xQueueCreateCountingSemaphoreStatic+0x2e>
		xHandle = xQueueGenericCreateStatic( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, NULL, pxStaticQueue, queueQUEUE_TYPE_COUNTING_SEMAPHORE );
 80077ae:	2202      	movs	r2, #2
 80077b0:	9200      	str	r2, [sp, #0]
 80077b2:	2200      	movs	r2, #0
 80077b4:	4611      	mov	r1, r2
 80077b6:	f7ff ff6d 	bl	8007694 <xQueueGenericCreateStatic>
		if( xHandle != NULL )
 80077ba:	b100      	cbz	r0, 80077be <xQueueCreateCountingSemaphoreStatic+0x40>
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 80077bc:	6384      	str	r4, [r0, #56]	; 0x38
	}
 80077be:	b002      	add	sp, #8
 80077c0:	bd10      	pop	{r4, pc}

080077c2 <xQueueCreateCountingSemaphore>:
	{
 80077c2:	b510      	push	{r4, lr}
 80077c4:	460c      	mov	r4, r1
		configASSERT( uxMaxCount != 0 );
 80077c6:	b940      	cbnz	r0, 80077da <xQueueCreateCountingSemaphore+0x18>
 80077c8:	f04f 0350 	mov.w	r3, #80	; 0x50
 80077cc:	f383 8811 	msr	BASEPRI, r3
 80077d0:	f3bf 8f6f 	isb	sy
 80077d4:	f3bf 8f4f 	dsb	sy
 80077d8:	e7fe      	b.n	80077d8 <xQueueCreateCountingSemaphore+0x16>
		configASSERT( uxInitialCount <= uxMaxCount );
 80077da:	4288      	cmp	r0, r1
 80077dc:	d208      	bcs.n	80077f0 <xQueueCreateCountingSemaphore+0x2e>
 80077de:	f04f 0350 	mov.w	r3, #80	; 0x50
 80077e2:	f383 8811 	msr	BASEPRI, r3
 80077e6:	f3bf 8f6f 	isb	sy
 80077ea:	f3bf 8f4f 	dsb	sy
 80077ee:	e7fe      	b.n	80077ee <xQueueCreateCountingSemaphore+0x2c>
		xHandle = xQueueGenericCreate( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, queueQUEUE_TYPE_COUNTING_SEMAPHORE );
 80077f0:	2202      	movs	r2, #2
 80077f2:	2100      	movs	r1, #0
 80077f4:	f7ff ff9c 	bl	8007730 <xQueueGenericCreate>
		if( xHandle != NULL )
 80077f8:	b100      	cbz	r0, 80077fc <xQueueCreateCountingSemaphore+0x3a>
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 80077fa:	6384      	str	r4, [r0, #56]	; 0x38
	}
 80077fc:	bd10      	pop	{r4, pc}
	...

08007800 <xQueueGenericSend>:
{
 8007800:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8007804:	4688      	mov	r8, r1
 8007806:	9201      	str	r2, [sp, #4]
 8007808:	461f      	mov	r7, r3
	configASSERT( pxQueue );
 800780a:	4604      	mov	r4, r0
 800780c:	b940      	cbnz	r0, 8007820 <xQueueGenericSend+0x20>
 800780e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007812:	f383 8811 	msr	BASEPRI, r3
 8007816:	f3bf 8f6f 	isb	sy
 800781a:	f3bf 8f4f 	dsb	sy
 800781e:	e7fe      	b.n	800781e <xQueueGenericSend+0x1e>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 8007820:	b951      	cbnz	r1, 8007838 <xQueueGenericSend+0x38>
 8007822:	6c03      	ldr	r3, [r0, #64]	; 0x40
 8007824:	b143      	cbz	r3, 8007838 <xQueueGenericSend+0x38>
 8007826:	f04f 0350 	mov.w	r3, #80	; 0x50
 800782a:	f383 8811 	msr	BASEPRI, r3
 800782e:	f3bf 8f6f 	isb	sy
 8007832:	f3bf 8f4f 	dsb	sy
 8007836:	e7fe      	b.n	8007836 <xQueueGenericSend+0x36>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 8007838:	2f02      	cmp	r7, #2
 800783a:	d10b      	bne.n	8007854 <xQueueGenericSend+0x54>
 800783c:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800783e:	2b01      	cmp	r3, #1
 8007840:	d008      	beq.n	8007854 <xQueueGenericSend+0x54>
 8007842:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007846:	f383 8811 	msr	BASEPRI, r3
 800784a:	f3bf 8f6f 	isb	sy
 800784e:	f3bf 8f4f 	dsb	sy
 8007852:	e7fe      	b.n	8007852 <xQueueGenericSend+0x52>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 8007854:	f000 ff74 	bl	8008740 <xTaskGetSchedulerState>
 8007858:	b950      	cbnz	r0, 8007870 <xQueueGenericSend+0x70>
 800785a:	9e01      	ldr	r6, [sp, #4]
 800785c:	b14e      	cbz	r6, 8007872 <xQueueGenericSend+0x72>
 800785e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007862:	f383 8811 	msr	BASEPRI, r3
 8007866:	f3bf 8f6f 	isb	sy
 800786a:	f3bf 8f4f 	dsb	sy
 800786e:	e7fe      	b.n	800786e <xQueueGenericSend+0x6e>
 8007870:	2600      	movs	r6, #0
		prvLockQueue( pxQueue );
 8007872:	f04f 0900 	mov.w	r9, #0
					portYIELD_WITHIN_API();
 8007876:	f8df a0e8 	ldr.w	sl, [pc, #232]	; 8007960 <xQueueGenericSend+0x160>
 800787a:	e037      	b.n	80078ec <xQueueGenericSend+0xec>
				if( xTicksToWait == ( TickType_t ) 0 )
 800787c:	9d01      	ldr	r5, [sp, #4]
 800787e:	b91d      	cbnz	r5, 8007888 <xQueueGenericSend+0x88>
					taskEXIT_CRITICAL();
 8007880:	f7ff fd12 	bl	80072a8 <vPortExitCritical>
			return errQUEUE_FULL;
 8007884:	2000      	movs	r0, #0
 8007886:	e050      	b.n	800792a <xQueueGenericSend+0x12a>
				else if( xEntryTimeSet == pdFALSE )
 8007888:	b916      	cbnz	r6, 8007890 <xQueueGenericSend+0x90>
					vTaskInternalSetTimeOutState( &xTimeOut );
 800788a:	a802      	add	r0, sp, #8
 800788c:	f000 ff0a 	bl	80086a4 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 8007890:	f7ff fd0a 	bl	80072a8 <vPortExitCritical>
		vTaskSuspendAll();
 8007894:	f000 fd40 	bl	8008318 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 8007898:	f7ff fce4 	bl	8007264 <vPortEnterCritical>
 800789c:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 80078a0:	2bff      	cmp	r3, #255	; 0xff
 80078a2:	bf08      	it	eq
 80078a4:	f884 9044 	strbeq.w	r9, [r4, #68]	; 0x44
 80078a8:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 80078ac:	2bff      	cmp	r3, #255	; 0xff
 80078ae:	bf08      	it	eq
 80078b0:	f884 9045 	strbeq.w	r9, [r4, #69]	; 0x45
 80078b4:	f7ff fcf8 	bl	80072a8 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 80078b8:	a901      	add	r1, sp, #4
 80078ba:	a802      	add	r0, sp, #8
 80078bc:	f000 fefe 	bl	80086bc <xTaskCheckForTimeOut>
 80078c0:	2800      	cmp	r0, #0
 80078c2:	d146      	bne.n	8007952 <xQueueGenericSend+0x152>

static BaseType_t prvIsQueueFull( const Queue_t *pxQueue )
{
BaseType_t xReturn;

	taskENTER_CRITICAL();
 80078c4:	f7ff fcce 	bl	8007264 <vPortEnterCritical>
	{
		if( pxQueue->uxMessagesWaiting == pxQueue->uxLength )
 80078c8:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 80078ca:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 80078cc:	429a      	cmp	r2, r3
 80078ce:	d12f      	bne.n	8007930 <xQueueGenericSend+0x130>
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
 80078d0:	f7ff fcea 	bl	80072a8 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
 80078d4:	9901      	ldr	r1, [sp, #4]
 80078d6:	f104 0010 	add.w	r0, r4, #16
 80078da:	f000 fe6b 	bl	80085b4 <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 80078de:	4620      	mov	r0, r4
 80078e0:	f7ff fe5f 	bl	80075a2 <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 80078e4:	f000 fdb6 	bl	8008454 <xTaskResumeAll>
 80078e8:	b350      	cbz	r0, 8007940 <xQueueGenericSend+0x140>
 80078ea:	2601      	movs	r6, #1
		taskENTER_CRITICAL();
 80078ec:	f7ff fcba 	bl	8007264 <vPortEnterCritical>
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 80078f0:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 80078f2:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 80078f4:	429a      	cmp	r2, r3
 80078f6:	d301      	bcc.n	80078fc <xQueueGenericSend+0xfc>
 80078f8:	2f02      	cmp	r7, #2
 80078fa:	d1bf      	bne.n	800787c <xQueueGenericSend+0x7c>
					xYieldRequired = prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 80078fc:	463a      	mov	r2, r7
 80078fe:	4641      	mov	r1, r8
 8007900:	4620      	mov	r0, r4
 8007902:	f7ff fe06 	bl	8007512 <prvCopyDataToQueue>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8007906:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8007908:	b11b      	cbz	r3, 8007912 <xQueueGenericSend+0x112>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800790a:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800790e:	f000 fe89 	bl	8008624 <xTaskRemoveFromEventList>
					else if( xYieldRequired != pdFALSE )
 8007912:	b138      	cbz	r0, 8007924 <xQueueGenericSend+0x124>
						queueYIELD_IF_USING_PREEMPTION();
 8007914:	4b12      	ldr	r3, [pc, #72]	; (8007960 <xQueueGenericSend+0x160>)
 8007916:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800791a:	601a      	str	r2, [r3, #0]
 800791c:	f3bf 8f4f 	dsb	sy
 8007920:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 8007924:	f7ff fcc0 	bl	80072a8 <vPortExitCritical>
				return pdPASS;
 8007928:	2001      	movs	r0, #1
}
 800792a:	b004      	add	sp, #16
 800792c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
	taskEXIT_CRITICAL();
 8007930:	f7ff fcba 	bl	80072a8 <vPortExitCritical>
				prvUnlockQueue( pxQueue );
 8007934:	4620      	mov	r0, r4
 8007936:	f7ff fe34 	bl	80075a2 <prvUnlockQueue>
				( void ) xTaskResumeAll();
 800793a:	f000 fd8b 	bl	8008454 <xTaskResumeAll>
 800793e:	e7d4      	b.n	80078ea <xQueueGenericSend+0xea>
					portYIELD_WITHIN_API();
 8007940:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
 8007944:	f8ca 3000 	str.w	r3, [sl]
 8007948:	f3bf 8f4f 	dsb	sy
 800794c:	f3bf 8f6f 	isb	sy
 8007950:	e7cb      	b.n	80078ea <xQueueGenericSend+0xea>
			prvUnlockQueue( pxQueue );
 8007952:	4620      	mov	r0, r4
 8007954:	f7ff fe25 	bl	80075a2 <prvUnlockQueue>
			( void ) xTaskResumeAll();
 8007958:	f000 fd7c 	bl	8008454 <xTaskResumeAll>
 800795c:	e792      	b.n	8007884 <xQueueGenericSend+0x84>
 800795e:	bf00      	nop
 8007960:	e000ed04 	.word	0xe000ed04

08007964 <xQueueGenericSendFromISR>:
{
 8007964:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8007968:	4689      	mov	r9, r1
 800796a:	4690      	mov	r8, r2
 800796c:	461f      	mov	r7, r3
	configASSERT( pxQueue );
 800796e:	4604      	mov	r4, r0
 8007970:	b940      	cbnz	r0, 8007984 <xQueueGenericSendFromISR+0x20>
 8007972:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007976:	f383 8811 	msr	BASEPRI, r3
 800797a:	f3bf 8f6f 	isb	sy
 800797e:	f3bf 8f4f 	dsb	sy
 8007982:	e7fe      	b.n	8007982 <xQueueGenericSendFromISR+0x1e>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 8007984:	b951      	cbnz	r1, 800799c <xQueueGenericSendFromISR+0x38>
 8007986:	6c03      	ldr	r3, [r0, #64]	; 0x40
 8007988:	b143      	cbz	r3, 800799c <xQueueGenericSendFromISR+0x38>
 800798a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800798e:	f383 8811 	msr	BASEPRI, r3
 8007992:	f3bf 8f6f 	isb	sy
 8007996:	f3bf 8f4f 	dsb	sy
 800799a:	e7fe      	b.n	800799a <xQueueGenericSendFromISR+0x36>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 800799c:	2f02      	cmp	r7, #2
 800799e:	d10b      	bne.n	80079b8 <xQueueGenericSendFromISR+0x54>
 80079a0:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 80079a2:	2b01      	cmp	r3, #1
 80079a4:	d008      	beq.n	80079b8 <xQueueGenericSendFromISR+0x54>
 80079a6:	f04f 0350 	mov.w	r3, #80	; 0x50
 80079aa:	f383 8811 	msr	BASEPRI, r3
 80079ae:	f3bf 8f6f 	isb	sy
 80079b2:	f3bf 8f4f 	dsb	sy
 80079b6:	e7fe      	b.n	80079b6 <xQueueGenericSendFromISR+0x52>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 80079b8:	f7ff fd72 	bl	80074a0 <vPortValidateInterruptPriority>
	__asm volatile
 80079bc:	f3ef 8611 	mrs	r6, BASEPRI
 80079c0:	f04f 0350 	mov.w	r3, #80	; 0x50
 80079c4:	f383 8811 	msr	BASEPRI, r3
 80079c8:	f3bf 8f6f 	isb	sy
 80079cc:	f3bf 8f4f 	dsb	sy
		if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 80079d0:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 80079d2:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 80079d4:	429a      	cmp	r2, r3
 80079d6:	d301      	bcc.n	80079dc <xQueueGenericSendFromISR+0x78>
 80079d8:	2f02      	cmp	r7, #2
 80079da:	d122      	bne.n	8007a22 <xQueueGenericSendFromISR+0xbe>
			const int8_t cTxLock = pxQueue->cTxLock;
 80079dc:	f894 5045 	ldrb.w	r5, [r4, #69]	; 0x45
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 80079e0:	463a      	mov	r2, r7
			const int8_t cTxLock = pxQueue->cTxLock;
 80079e2:	b26d      	sxtb	r5, r5
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 80079e4:	4649      	mov	r1, r9
 80079e6:	4620      	mov	r0, r4
 80079e8:	f7ff fd93 	bl	8007512 <prvCopyDataToQueue>
			if( cTxLock == queueUNLOCKED )
 80079ec:	1c6b      	adds	r3, r5, #1
 80079ee:	d113      	bne.n	8007a18 <xQueueGenericSendFromISR+0xb4>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 80079f0:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80079f2:	b90b      	cbnz	r3, 80079f8 <xQueueGenericSendFromISR+0x94>
			xReturn = pdPASS;
 80079f4:	2001      	movs	r0, #1
 80079f6:	e00b      	b.n	8007a10 <xQueueGenericSendFromISR+0xac>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 80079f8:	f104 0024 	add.w	r0, r4, #36	; 0x24
 80079fc:	f000 fe12 	bl	8008624 <xTaskRemoveFromEventList>
 8007a00:	2800      	cmp	r0, #0
 8007a02:	d0f7      	beq.n	80079f4 <xQueueGenericSendFromISR+0x90>
							if( pxHigherPriorityTaskWoken != NULL )
 8007a04:	f1b8 0f00 	cmp.w	r8, #0
 8007a08:	d0f4      	beq.n	80079f4 <xQueueGenericSendFromISR+0x90>
								*pxHigherPriorityTaskWoken = pdTRUE;
 8007a0a:	2001      	movs	r0, #1
 8007a0c:	f8c8 0000 	str.w	r0, [r8]
	__asm volatile
 8007a10:	f386 8811 	msr	BASEPRI, r6
}
 8007a14:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 8007a18:	3501      	adds	r5, #1
 8007a1a:	b26d      	sxtb	r5, r5
 8007a1c:	f884 5045 	strb.w	r5, [r4, #69]	; 0x45
 8007a20:	e7e8      	b.n	80079f4 <xQueueGenericSendFromISR+0x90>
			xReturn = errQUEUE_FULL;
 8007a22:	2000      	movs	r0, #0
 8007a24:	e7f4      	b.n	8007a10 <xQueueGenericSendFromISR+0xac>

08007a26 <xQueueGiveFromISR>:
{
 8007a26:	b570      	push	{r4, r5, r6, lr}
 8007a28:	460d      	mov	r5, r1
	configASSERT( pxQueue );
 8007a2a:	4604      	mov	r4, r0
 8007a2c:	b940      	cbnz	r0, 8007a40 <xQueueGiveFromISR+0x1a>
	__asm volatile
 8007a2e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007a32:	f383 8811 	msr	BASEPRI, r3
 8007a36:	f3bf 8f6f 	isb	sy
 8007a3a:	f3bf 8f4f 	dsb	sy
 8007a3e:	e7fe      	b.n	8007a3e <xQueueGiveFromISR+0x18>
	configASSERT( pxQueue->uxItemSize == 0 );
 8007a40:	6c03      	ldr	r3, [r0, #64]	; 0x40
 8007a42:	b143      	cbz	r3, 8007a56 <xQueueGiveFromISR+0x30>
 8007a44:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007a48:	f383 8811 	msr	BASEPRI, r3
 8007a4c:	f3bf 8f6f 	isb	sy
 8007a50:	f3bf 8f4f 	dsb	sy
 8007a54:	e7fe      	b.n	8007a54 <xQueueGiveFromISR+0x2e>
	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->u.xSemaphore.xMutexHolder != NULL ) ) );
 8007a56:	6803      	ldr	r3, [r0, #0]
 8007a58:	b953      	cbnz	r3, 8007a70 <xQueueGiveFromISR+0x4a>
 8007a5a:	6883      	ldr	r3, [r0, #8]
 8007a5c:	b143      	cbz	r3, 8007a70 <xQueueGiveFromISR+0x4a>
 8007a5e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007a62:	f383 8811 	msr	BASEPRI, r3
 8007a66:	f3bf 8f6f 	isb	sy
 8007a6a:	f3bf 8f4f 	dsb	sy
 8007a6e:	e7fe      	b.n	8007a6e <xQueueGiveFromISR+0x48>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 8007a70:	f7ff fd16 	bl	80074a0 <vPortValidateInterruptPriority>
	__asm volatile
 8007a74:	f3ef 8611 	mrs	r6, BASEPRI
 8007a78:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007a7c:	f383 8811 	msr	BASEPRI, r3
 8007a80:	f3bf 8f6f 	isb	sy
 8007a84:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 8007a88:	6ba2      	ldr	r2, [r4, #56]	; 0x38
		if( uxMessagesWaiting < pxQueue->uxLength )
 8007a8a:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8007a8c:	4293      	cmp	r3, r2
 8007a8e:	d91c      	bls.n	8007aca <xQueueGiveFromISR+0xa4>
			const int8_t cTxLock = pxQueue->cTxLock;
 8007a90:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 8007a94:	3201      	adds	r2, #1
			const int8_t cTxLock = pxQueue->cTxLock;
 8007a96:	b25b      	sxtb	r3, r3
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 8007a98:	63a2      	str	r2, [r4, #56]	; 0x38
			if( cTxLock == queueUNLOCKED )
 8007a9a:	1c5a      	adds	r2, r3, #1
 8007a9c:	d110      	bne.n	8007ac0 <xQueueGiveFromISR+0x9a>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8007a9e:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8007aa0:	b90b      	cbnz	r3, 8007aa6 <xQueueGiveFromISR+0x80>
			xReturn = pdPASS;
 8007aa2:	2001      	movs	r0, #1
 8007aa4:	e009      	b.n	8007aba <xQueueGiveFromISR+0x94>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8007aa6:	f104 0024 	add.w	r0, r4, #36	; 0x24
 8007aaa:	f000 fdbb 	bl	8008624 <xTaskRemoveFromEventList>
 8007aae:	2800      	cmp	r0, #0
 8007ab0:	d0f7      	beq.n	8007aa2 <xQueueGiveFromISR+0x7c>
							if( pxHigherPriorityTaskWoken != NULL )
 8007ab2:	2d00      	cmp	r5, #0
 8007ab4:	d0f5      	beq.n	8007aa2 <xQueueGiveFromISR+0x7c>
								*pxHigherPriorityTaskWoken = pdTRUE;
 8007ab6:	2001      	movs	r0, #1
 8007ab8:	6028      	str	r0, [r5, #0]
	__asm volatile
 8007aba:	f386 8811 	msr	BASEPRI, r6
}
 8007abe:	bd70      	pop	{r4, r5, r6, pc}
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 8007ac0:	3301      	adds	r3, #1
 8007ac2:	b25b      	sxtb	r3, r3
 8007ac4:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 8007ac8:	e7eb      	b.n	8007aa2 <xQueueGiveFromISR+0x7c>
			xReturn = errQUEUE_FULL;
 8007aca:	2000      	movs	r0, #0
 8007acc:	e7f5      	b.n	8007aba <xQueueGiveFromISR+0x94>
	...

08007ad0 <xQueueReceive>:
{
 8007ad0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8007ad4:	b085      	sub	sp, #20
 8007ad6:	460f      	mov	r7, r1
 8007ad8:	9201      	str	r2, [sp, #4]
	configASSERT( ( pxQueue ) );
 8007ada:	4604      	mov	r4, r0
 8007adc:	b940      	cbnz	r0, 8007af0 <xQueueReceive+0x20>
	__asm volatile
 8007ade:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007ae2:	f383 8811 	msr	BASEPRI, r3
 8007ae6:	f3bf 8f6f 	isb	sy
 8007aea:	f3bf 8f4f 	dsb	sy
 8007aee:	e7fe      	b.n	8007aee <xQueueReceive+0x1e>
	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) );
 8007af0:	b951      	cbnz	r1, 8007b08 <xQueueReceive+0x38>
 8007af2:	6c03      	ldr	r3, [r0, #64]	; 0x40
 8007af4:	b143      	cbz	r3, 8007b08 <xQueueReceive+0x38>
 8007af6:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007afa:	f383 8811 	msr	BASEPRI, r3
 8007afe:	f3bf 8f6f 	isb	sy
 8007b02:	f3bf 8f4f 	dsb	sy
 8007b06:	e7fe      	b.n	8007b06 <xQueueReceive+0x36>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 8007b08:	f000 fe1a 	bl	8008740 <xTaskGetSchedulerState>
 8007b0c:	b950      	cbnz	r0, 8007b24 <xQueueReceive+0x54>
 8007b0e:	9e01      	ldr	r6, [sp, #4]
 8007b10:	b14e      	cbz	r6, 8007b26 <xQueueReceive+0x56>
 8007b12:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007b16:	f383 8811 	msr	BASEPRI, r3
 8007b1a:	f3bf 8f6f 	isb	sy
 8007b1e:	f3bf 8f4f 	dsb	sy
 8007b22:	e7fe      	b.n	8007b22 <xQueueReceive+0x52>
 8007b24:	2600      	movs	r6, #0
		prvLockQueue( pxQueue );
 8007b26:	f04f 0800 	mov.w	r8, #0
					portYIELD_WITHIN_API();
 8007b2a:	f8df 90e0 	ldr.w	r9, [pc, #224]	; 8007c0c <xQueueReceive+0x13c>
 8007b2e:	e03b      	b.n	8007ba8 <xQueueReceive+0xd8>
				if( xTicksToWait == ( TickType_t ) 0 )
 8007b30:	9d01      	ldr	r5, [sp, #4]
 8007b32:	b91d      	cbnz	r5, 8007b3c <xQueueReceive+0x6c>
					taskEXIT_CRITICAL();
 8007b34:	f7ff fbb8 	bl	80072a8 <vPortExitCritical>
				return errQUEUE_EMPTY;
 8007b38:	2000      	movs	r0, #0
 8007b3a:	e052      	b.n	8007be2 <xQueueReceive+0x112>
				else if( xEntryTimeSet == pdFALSE )
 8007b3c:	b916      	cbnz	r6, 8007b44 <xQueueReceive+0x74>
					vTaskInternalSetTimeOutState( &xTimeOut );
 8007b3e:	a802      	add	r0, sp, #8
 8007b40:	f000 fdb0 	bl	80086a4 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 8007b44:	f7ff fbb0 	bl	80072a8 <vPortExitCritical>
		vTaskSuspendAll();
 8007b48:	f000 fbe6 	bl	8008318 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 8007b4c:	f7ff fb8a 	bl	8007264 <vPortEnterCritical>
 8007b50:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 8007b54:	2bff      	cmp	r3, #255	; 0xff
 8007b56:	bf08      	it	eq
 8007b58:	f884 8044 	strbeq.w	r8, [r4, #68]	; 0x44
 8007b5c:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 8007b60:	2bff      	cmp	r3, #255	; 0xff
 8007b62:	bf08      	it	eq
 8007b64:	f884 8045 	strbeq.w	r8, [r4, #69]	; 0x45
 8007b68:	f7ff fb9e 	bl	80072a8 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 8007b6c:	a901      	add	r1, sp, #4
 8007b6e:	a802      	add	r0, sp, #8
 8007b70:	f000 fda4 	bl	80086bc <xTaskCheckForTimeOut>
 8007b74:	2800      	cmp	r0, #0
 8007b76:	d13d      	bne.n	8007bf4 <xQueueReceive+0x124>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 8007b78:	4620      	mov	r0, r4
 8007b7a:	f7ff fcbf 	bl	80074fc <prvIsQueueEmpty>
 8007b7e:	b398      	cbz	r0, 8007be8 <xQueueReceive+0x118>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 8007b80:	9901      	ldr	r1, [sp, #4]
 8007b82:	f104 0024 	add.w	r0, r4, #36	; 0x24
 8007b86:	f000 fd15 	bl	80085b4 <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 8007b8a:	4620      	mov	r0, r4
 8007b8c:	f7ff fd09 	bl	80075a2 <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 8007b90:	f000 fc60 	bl	8008454 <xTaskResumeAll>
 8007b94:	b938      	cbnz	r0, 8007ba6 <xQueueReceive+0xd6>
					portYIELD_WITHIN_API();
 8007b96:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
 8007b9a:	f8c9 3000 	str.w	r3, [r9]
 8007b9e:	f3bf 8f4f 	dsb	sy
 8007ba2:	f3bf 8f6f 	isb	sy
 8007ba6:	2601      	movs	r6, #1
		taskENTER_CRITICAL();
 8007ba8:	f7ff fb5c 	bl	8007264 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 8007bac:	6ba5      	ldr	r5, [r4, #56]	; 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 8007bae:	2d00      	cmp	r5, #0
 8007bb0:	d0be      	beq.n	8007b30 <xQueueReceive+0x60>
				prvCopyDataFromQueue( pxQueue, pvBuffer );
 8007bb2:	4639      	mov	r1, r7
 8007bb4:	4620      	mov	r0, r4
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 8007bb6:	3d01      	subs	r5, #1
				prvCopyDataFromQueue( pxQueue, pvBuffer );
 8007bb8:	f7ff fcde 	bl	8007578 <prvCopyDataFromQueue>
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 8007bbc:	63a5      	str	r5, [r4, #56]	; 0x38
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8007bbe:	6923      	ldr	r3, [r4, #16]
 8007bc0:	b163      	cbz	r3, 8007bdc <xQueueReceive+0x10c>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8007bc2:	f104 0010 	add.w	r0, r4, #16
 8007bc6:	f000 fd2d 	bl	8008624 <xTaskRemoveFromEventList>
 8007bca:	b138      	cbz	r0, 8007bdc <xQueueReceive+0x10c>
						queueYIELD_IF_USING_PREEMPTION();
 8007bcc:	4b0f      	ldr	r3, [pc, #60]	; (8007c0c <xQueueReceive+0x13c>)
 8007bce:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8007bd2:	601a      	str	r2, [r3, #0]
 8007bd4:	f3bf 8f4f 	dsb	sy
 8007bd8:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 8007bdc:	f7ff fb64 	bl	80072a8 <vPortExitCritical>
				return pdPASS;
 8007be0:	2001      	movs	r0, #1
}
 8007be2:	b005      	add	sp, #20
 8007be4:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
				prvUnlockQueue( pxQueue );
 8007be8:	4620      	mov	r0, r4
 8007bea:	f7ff fcda 	bl	80075a2 <prvUnlockQueue>
				( void ) xTaskResumeAll();
 8007bee:	f000 fc31 	bl	8008454 <xTaskResumeAll>
 8007bf2:	e7d8      	b.n	8007ba6 <xQueueReceive+0xd6>
			prvUnlockQueue( pxQueue );
 8007bf4:	4620      	mov	r0, r4
 8007bf6:	f7ff fcd4 	bl	80075a2 <prvUnlockQueue>
			( void ) xTaskResumeAll();
 8007bfa:	f000 fc2b 	bl	8008454 <xTaskResumeAll>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 8007bfe:	4620      	mov	r0, r4
 8007c00:	f7ff fc7c 	bl	80074fc <prvIsQueueEmpty>
 8007c04:	2800      	cmp	r0, #0
 8007c06:	d0ce      	beq.n	8007ba6 <xQueueReceive+0xd6>
 8007c08:	e796      	b.n	8007b38 <xQueueReceive+0x68>
 8007c0a:	bf00      	nop
 8007c0c:	e000ed04 	.word	0xe000ed04

08007c10 <xQueueSemaphoreTake>:
{
 8007c10:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
	configASSERT( ( pxQueue ) );
 8007c14:	4604      	mov	r4, r0
{
 8007c16:	9101      	str	r1, [sp, #4]
	configASSERT( ( pxQueue ) );
 8007c18:	b940      	cbnz	r0, 8007c2c <xQueueSemaphoreTake+0x1c>
 8007c1a:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007c1e:	f383 8811 	msr	BASEPRI, r3
 8007c22:	f3bf 8f6f 	isb	sy
 8007c26:	f3bf 8f4f 	dsb	sy
 8007c2a:	e7fe      	b.n	8007c2a <xQueueSemaphoreTake+0x1a>
	configASSERT( pxQueue->uxItemSize == 0 );
 8007c2c:	6c05      	ldr	r5, [r0, #64]	; 0x40
 8007c2e:	b145      	cbz	r5, 8007c42 <xQueueSemaphoreTake+0x32>
 8007c30:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007c34:	f383 8811 	msr	BASEPRI, r3
 8007c38:	f3bf 8f6f 	isb	sy
 8007c3c:	f3bf 8f4f 	dsb	sy
 8007c40:	e7fe      	b.n	8007c40 <xQueueSemaphoreTake+0x30>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 8007c42:	f000 fd7d 	bl	8008740 <xTaskGetSchedulerState>
 8007c46:	b950      	cbnz	r0, 8007c5e <xQueueSemaphoreTake+0x4e>
 8007c48:	9d01      	ldr	r5, [sp, #4]
 8007c4a:	b145      	cbz	r5, 8007c5e <xQueueSemaphoreTake+0x4e>
 8007c4c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007c50:	f383 8811 	msr	BASEPRI, r3
 8007c54:	f3bf 8f6f 	isb	sy
 8007c58:	f3bf 8f4f 	dsb	sy
 8007c5c:	e7fe      	b.n	8007c5c <xQueueSemaphoreTake+0x4c>
 8007c5e:	462e      	mov	r6, r5
		prvLockQueue( pxQueue );
 8007c60:	2700      	movs	r7, #0
					portYIELD_WITHIN_API();
 8007c62:	f8df 812c 	ldr.w	r8, [pc, #300]	; 8007d90 <xQueueSemaphoreTake+0x180>
 8007c66:	e04f      	b.n	8007d08 <xQueueSemaphoreTake+0xf8>
				if( xTicksToWait == ( TickType_t ) 0 )
 8007c68:	9b01      	ldr	r3, [sp, #4]
 8007c6a:	b963      	cbnz	r3, 8007c86 <xQueueSemaphoreTake+0x76>
						configASSERT( xInheritanceOccurred == pdFALSE );
 8007c6c:	b145      	cbz	r5, 8007c80 <xQueueSemaphoreTake+0x70>
 8007c6e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007c72:	f383 8811 	msr	BASEPRI, r3
 8007c76:	f3bf 8f6f 	isb	sy
 8007c7a:	f3bf 8f4f 	dsb	sy
 8007c7e:	e7fe      	b.n	8007c7e <xQueueSemaphoreTake+0x6e>
					taskEXIT_CRITICAL();
 8007c80:	f7ff fb12 	bl	80072a8 <vPortExitCritical>
					return errQUEUE_EMPTY;
 8007c84:	e05e      	b.n	8007d44 <xQueueSemaphoreTake+0x134>
				else if( xEntryTimeSet == pdFALSE )
 8007c86:	b916      	cbnz	r6, 8007c8e <xQueueSemaphoreTake+0x7e>
					vTaskInternalSetTimeOutState( &xTimeOut );
 8007c88:	a802      	add	r0, sp, #8
 8007c8a:	f000 fd0b 	bl	80086a4 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 8007c8e:	f7ff fb0b 	bl	80072a8 <vPortExitCritical>
		vTaskSuspendAll();
 8007c92:	f000 fb41 	bl	8008318 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 8007c96:	f7ff fae5 	bl	8007264 <vPortEnterCritical>
 8007c9a:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 8007c9e:	2bff      	cmp	r3, #255	; 0xff
 8007ca0:	bf08      	it	eq
 8007ca2:	f884 7044 	strbeq.w	r7, [r4, #68]	; 0x44
 8007ca6:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 8007caa:	2bff      	cmp	r3, #255	; 0xff
 8007cac:	bf08      	it	eq
 8007cae:	f884 7045 	strbeq.w	r7, [r4, #69]	; 0x45
 8007cb2:	f7ff faf9 	bl	80072a8 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 8007cb6:	a901      	add	r1, sp, #4
 8007cb8:	a802      	add	r0, sp, #8
 8007cba:	f000 fcff 	bl	80086bc <xTaskCheckForTimeOut>
 8007cbe:	2800      	cmp	r0, #0
 8007cc0:	d14a      	bne.n	8007d58 <xQueueSemaphoreTake+0x148>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 8007cc2:	4620      	mov	r0, r4
 8007cc4:	f7ff fc1a 	bl	80074fc <prvIsQueueEmpty>
 8007cc8:	2800      	cmp	r0, #0
 8007cca:	d03f      	beq.n	8007d4c <xQueueSemaphoreTake+0x13c>
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 8007ccc:	6823      	ldr	r3, [r4, #0]
 8007cce:	b93b      	cbnz	r3, 8007ce0 <xQueueSemaphoreTake+0xd0>
						taskENTER_CRITICAL();
 8007cd0:	f7ff fac8 	bl	8007264 <vPortEnterCritical>
							xInheritanceOccurred = xTaskPriorityInherit( pxQueue->u.xSemaphore.xMutexHolder );
 8007cd4:	68a0      	ldr	r0, [r4, #8]
 8007cd6:	f000 fd43 	bl	8008760 <xTaskPriorityInherit>
 8007cda:	4605      	mov	r5, r0
						taskEXIT_CRITICAL();
 8007cdc:	f7ff fae4 	bl	80072a8 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 8007ce0:	9901      	ldr	r1, [sp, #4]
 8007ce2:	f104 0024 	add.w	r0, r4, #36	; 0x24
 8007ce6:	f000 fc65 	bl	80085b4 <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 8007cea:	4620      	mov	r0, r4
 8007cec:	f7ff fc59 	bl	80075a2 <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 8007cf0:	f000 fbb0 	bl	8008454 <xTaskResumeAll>
 8007cf4:	b938      	cbnz	r0, 8007d06 <xQueueSemaphoreTake+0xf6>
					portYIELD_WITHIN_API();
 8007cf6:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
 8007cfa:	f8c8 3000 	str.w	r3, [r8]
 8007cfe:	f3bf 8f4f 	dsb	sy
 8007d02:	f3bf 8f6f 	isb	sy
 8007d06:	2601      	movs	r6, #1
		taskENTER_CRITICAL();
 8007d08:	f7ff faac 	bl	8007264 <vPortEnterCritical>
			const UBaseType_t uxSemaphoreCount = pxQueue->uxMessagesWaiting;
 8007d0c:	6ba3      	ldr	r3, [r4, #56]	; 0x38
			if( uxSemaphoreCount > ( UBaseType_t ) 0 )
 8007d0e:	2b00      	cmp	r3, #0
 8007d10:	d0aa      	beq.n	8007c68 <xQueueSemaphoreTake+0x58>
				pxQueue->uxMessagesWaiting = uxSemaphoreCount - ( UBaseType_t ) 1;
 8007d12:	3b01      	subs	r3, #1
 8007d14:	63a3      	str	r3, [r4, #56]	; 0x38
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 8007d16:	6823      	ldr	r3, [r4, #0]
 8007d18:	b913      	cbnz	r3, 8007d20 <xQueueSemaphoreTake+0x110>
						pxQueue->u.xSemaphore.xMutexHolder = pvTaskIncrementMutexHeldCount();
 8007d1a:	f000 fdf1 	bl	8008900 <pvTaskIncrementMutexHeldCount>
 8007d1e:	60a0      	str	r0, [r4, #8]
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8007d20:	6923      	ldr	r3, [r4, #16]
 8007d22:	b163      	cbz	r3, 8007d3e <xQueueSemaphoreTake+0x12e>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8007d24:	f104 0010 	add.w	r0, r4, #16
 8007d28:	f000 fc7c 	bl	8008624 <xTaskRemoveFromEventList>
 8007d2c:	b138      	cbz	r0, 8007d3e <xQueueSemaphoreTake+0x12e>
						queueYIELD_IF_USING_PREEMPTION();
 8007d2e:	4b18      	ldr	r3, [pc, #96]	; (8007d90 <xQueueSemaphoreTake+0x180>)
 8007d30:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8007d34:	601a      	str	r2, [r3, #0]
 8007d36:	f3bf 8f4f 	dsb	sy
 8007d3a:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 8007d3e:	f7ff fab3 	bl	80072a8 <vPortExitCritical>
				return pdPASS;
 8007d42:	2501      	movs	r5, #1
}
 8007d44:	4628      	mov	r0, r5
 8007d46:	b004      	add	sp, #16
 8007d48:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
				prvUnlockQueue( pxQueue );
 8007d4c:	4620      	mov	r0, r4
 8007d4e:	f7ff fc28 	bl	80075a2 <prvUnlockQueue>
				( void ) xTaskResumeAll();
 8007d52:	f000 fb7f 	bl	8008454 <xTaskResumeAll>
 8007d56:	e7d6      	b.n	8007d06 <xQueueSemaphoreTake+0xf6>
			prvUnlockQueue( pxQueue );
 8007d58:	4620      	mov	r0, r4
 8007d5a:	f7ff fc22 	bl	80075a2 <prvUnlockQueue>
			( void ) xTaskResumeAll();
 8007d5e:	f000 fb79 	bl	8008454 <xTaskResumeAll>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 8007d62:	4620      	mov	r0, r4
 8007d64:	f7ff fbca 	bl	80074fc <prvIsQueueEmpty>
 8007d68:	2800      	cmp	r0, #0
 8007d6a:	d0cc      	beq.n	8007d06 <xQueueSemaphoreTake+0xf6>
					if( xInheritanceOccurred != pdFALSE )
 8007d6c:	2d00      	cmp	r5, #0
 8007d6e:	d0e9      	beq.n	8007d44 <xQueueSemaphoreTake+0x134>
						taskENTER_CRITICAL();
 8007d70:	f7ff fa78 	bl	8007264 <vPortEnterCritical>
		if( listCURRENT_LIST_LENGTH( &( pxQueue->xTasksWaitingToReceive ) ) > 0U )
 8007d74:	6a61      	ldr	r1, [r4, #36]	; 0x24
 8007d76:	b119      	cbz	r1, 8007d80 <xQueueSemaphoreTake+0x170>
			uxHighestPriorityOfWaitingTasks = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) listGET_ITEM_VALUE_OF_HEAD_ENTRY( &( pxQueue->xTasksWaitingToReceive ) );
 8007d78:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8007d7a:	6819      	ldr	r1, [r3, #0]
 8007d7c:	f1c1 0138 	rsb	r1, r1, #56	; 0x38
							vTaskPriorityDisinheritAfterTimeout( pxQueue->u.xSemaphore.xMutexHolder, uxHighestWaitingPriority );
 8007d80:	68a0      	ldr	r0, [r4, #8]
 8007d82:	f000 fd6f 	bl	8008864 <vTaskPriorityDisinheritAfterTimeout>
				return errQUEUE_EMPTY;
 8007d86:	2500      	movs	r5, #0
						taskEXIT_CRITICAL();
 8007d88:	f7ff fa8e 	bl	80072a8 <vPortExitCritical>
 8007d8c:	e7da      	b.n	8007d44 <xQueueSemaphoreTake+0x134>
 8007d8e:	bf00      	nop
 8007d90:	e000ed04 	.word	0xe000ed04

08007d94 <xQueueReceiveFromISR>:
{
 8007d94:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8007d98:	4689      	mov	r9, r1
 8007d9a:	4690      	mov	r8, r2
	configASSERT( pxQueue );
 8007d9c:	4605      	mov	r5, r0
 8007d9e:	b940      	cbnz	r0, 8007db2 <xQueueReceiveFromISR+0x1e>
 8007da0:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007da4:	f383 8811 	msr	BASEPRI, r3
 8007da8:	f3bf 8f6f 	isb	sy
 8007dac:	f3bf 8f4f 	dsb	sy
 8007db0:	e7fe      	b.n	8007db0 <xQueueReceiveFromISR+0x1c>
	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 8007db2:	b951      	cbnz	r1, 8007dca <xQueueReceiveFromISR+0x36>
 8007db4:	6c03      	ldr	r3, [r0, #64]	; 0x40
 8007db6:	b143      	cbz	r3, 8007dca <xQueueReceiveFromISR+0x36>
 8007db8:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007dbc:	f383 8811 	msr	BASEPRI, r3
 8007dc0:	f3bf 8f6f 	isb	sy
 8007dc4:	f3bf 8f4f 	dsb	sy
 8007dc8:	e7fe      	b.n	8007dc8 <xQueueReceiveFromISR+0x34>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 8007dca:	f7ff fb69 	bl	80074a0 <vPortValidateInterruptPriority>
	__asm volatile
 8007dce:	f3ef 8711 	mrs	r7, BASEPRI
 8007dd2:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007dd6:	f383 8811 	msr	BASEPRI, r3
 8007dda:	f3bf 8f6f 	isb	sy
 8007dde:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 8007de2:	6bac      	ldr	r4, [r5, #56]	; 0x38
		if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 8007de4:	b31c      	cbz	r4, 8007e2e <xQueueReceiveFromISR+0x9a>
			const int8_t cRxLock = pxQueue->cRxLock;
 8007de6:	f895 6044 	ldrb.w	r6, [r5, #68]	; 0x44
			prvCopyDataFromQueue( pxQueue, pvBuffer );
 8007dea:	4649      	mov	r1, r9
			const int8_t cRxLock = pxQueue->cRxLock;
 8007dec:	b276      	sxtb	r6, r6
			prvCopyDataFromQueue( pxQueue, pvBuffer );
 8007dee:	4628      	mov	r0, r5
 8007df0:	f7ff fbc2 	bl	8007578 <prvCopyDataFromQueue>
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 8007df4:	3c01      	subs	r4, #1
			if( cRxLock == queueUNLOCKED )
 8007df6:	1c73      	adds	r3, r6, #1
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 8007df8:	63ac      	str	r4, [r5, #56]	; 0x38
			if( cRxLock == queueUNLOCKED )
 8007dfa:	d113      	bne.n	8007e24 <xQueueReceiveFromISR+0x90>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8007dfc:	692b      	ldr	r3, [r5, #16]
 8007dfe:	b90b      	cbnz	r3, 8007e04 <xQueueReceiveFromISR+0x70>
			xReturn = pdPASS;
 8007e00:	2001      	movs	r0, #1
 8007e02:	e00b      	b.n	8007e1c <xQueueReceiveFromISR+0x88>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8007e04:	f105 0010 	add.w	r0, r5, #16
 8007e08:	f000 fc0c 	bl	8008624 <xTaskRemoveFromEventList>
 8007e0c:	2800      	cmp	r0, #0
 8007e0e:	d0f7      	beq.n	8007e00 <xQueueReceiveFromISR+0x6c>
						if( pxHigherPriorityTaskWoken != NULL )
 8007e10:	f1b8 0f00 	cmp.w	r8, #0
 8007e14:	d0f4      	beq.n	8007e00 <xQueueReceiveFromISR+0x6c>
							*pxHigherPriorityTaskWoken = pdTRUE;
 8007e16:	2001      	movs	r0, #1
 8007e18:	f8c8 0000 	str.w	r0, [r8]
	__asm volatile
 8007e1c:	f387 8811 	msr	BASEPRI, r7
}
 8007e20:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				pxQueue->cRxLock = ( int8_t ) ( cRxLock + 1 );
 8007e24:	3601      	adds	r6, #1
 8007e26:	b276      	sxtb	r6, r6
 8007e28:	f885 6044 	strb.w	r6, [r5, #68]	; 0x44
 8007e2c:	e7e8      	b.n	8007e00 <xQueueReceiveFromISR+0x6c>
			xReturn = pdFAIL;
 8007e2e:	4620      	mov	r0, r4
 8007e30:	e7f4      	b.n	8007e1c <xQueueReceiveFromISR+0x88>
	...

08007e34 <vQueueAddToRegistry>:
/*-----------------------------------------------------------*/

#if ( configQUEUE_REGISTRY_SIZE > 0 )

	void vQueueAddToRegistry( QueueHandle_t xQueue, const char *pcQueueName ) /*lint !e971 Unqualified char types are allowed for strings and single characters only. */
	{
 8007e34:	b530      	push	{r4, r5, lr}

		/* See if there is an empty space in the registry.  A NULL name denotes
		a free slot. */
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
		{
			if( xQueueRegistry[ ux ].pcQueueName == NULL )
 8007e36:	4a07      	ldr	r2, [pc, #28]	; (8007e54 <vQueueAddToRegistry+0x20>)
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 8007e38:	2300      	movs	r3, #0
			if( xQueueRegistry[ ux ].pcQueueName == NULL )
 8007e3a:	f852 5033 	ldr.w	r5, [r2, r3, lsl #3]
 8007e3e:	eb02 04c3 	add.w	r4, r2, r3, lsl #3
 8007e42:	b91d      	cbnz	r5, 8007e4c <vQueueAddToRegistry+0x18>
			{
				/* Store the information on this queue. */
				xQueueRegistry[ ux ].pcQueueName = pcQueueName;
 8007e44:	f842 1033 	str.w	r1, [r2, r3, lsl #3]
				xQueueRegistry[ ux ].xHandle = xQueue;
 8007e48:	6060      	str	r0, [r4, #4]
			else
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}
	}
 8007e4a:	bd30      	pop	{r4, r5, pc}
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 8007e4c:	3301      	adds	r3, #1
 8007e4e:	2b08      	cmp	r3, #8
 8007e50:	d1f3      	bne.n	8007e3a <vQueueAddToRegistry+0x6>
 8007e52:	e7fa      	b.n	8007e4a <vQueueAddToRegistry+0x16>
 8007e54:	20012aec 	.word	0x20012aec

08007e58 <vQueueUnregisterQueue>:
/*-----------------------------------------------------------*/

#if ( configQUEUE_REGISTRY_SIZE > 0 )

	void vQueueUnregisterQueue( QueueHandle_t xQueue )
	{
 8007e58:	b510      	push	{r4, lr}

		/* See if the handle of the queue being unregistered in actually in the
		registry. */
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
		{
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 8007e5a:	4a08      	ldr	r2, [pc, #32]	; (8007e7c <vQueueUnregisterQueue+0x24>)
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 8007e5c:	2300      	movs	r3, #0
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 8007e5e:	eb02 01c3 	add.w	r1, r2, r3, lsl #3
 8007e62:	684c      	ldr	r4, [r1, #4]
 8007e64:	4284      	cmp	r4, r0
 8007e66:	d104      	bne.n	8007e72 <vQueueUnregisterQueue+0x1a>
			{
				/* Set the name to NULL to show that this slot if free again. */
				xQueueRegistry[ ux ].pcQueueName = NULL;
 8007e68:	2000      	movs	r0, #0
 8007e6a:	f842 0033 	str.w	r0, [r2, r3, lsl #3]

				/* Set the handle to NULL to ensure the same queue handle cannot
				appear in the registry twice if it is added, removed, then
				added again. */
				xQueueRegistry[ ux ].xHandle = ( QueueHandle_t ) 0;
 8007e6e:	6048      	str	r0, [r1, #4]
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}

	} /*lint !e818 xQueue could not be pointer to const because it is a typedef. */
 8007e70:	bd10      	pop	{r4, pc}
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 8007e72:	3301      	adds	r3, #1
 8007e74:	2b08      	cmp	r3, #8
 8007e76:	d1f2      	bne.n	8007e5e <vQueueUnregisterQueue+0x6>
 8007e78:	e7fa      	b.n	8007e70 <vQueueUnregisterQueue+0x18>
 8007e7a:	bf00      	nop
 8007e7c:	20012aec 	.word	0x20012aec

08007e80 <vQueueDelete>:
{
 8007e80:	b510      	push	{r4, lr}
	configASSERT( pxQueue );
 8007e82:	4604      	mov	r4, r0
 8007e84:	b940      	cbnz	r0, 8007e98 <vQueueDelete+0x18>
	__asm volatile
 8007e86:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007e8a:	f383 8811 	msr	BASEPRI, r3
 8007e8e:	f3bf 8f6f 	isb	sy
 8007e92:	f3bf 8f4f 	dsb	sy
 8007e96:	e7fe      	b.n	8007e96 <vQueueDelete+0x16>
		vQueueUnregisterQueue( pxQueue );
 8007e98:	f7ff ffde 	bl	8007e58 <vQueueUnregisterQueue>
		if( pxQueue->ucStaticallyAllocated == ( uint8_t ) pdFALSE )
 8007e9c:	f894 3046 	ldrb.w	r3, [r4, #70]	; 0x46
 8007ea0:	b923      	cbnz	r3, 8007eac <vQueueDelete+0x2c>
			vPortFree( pxQueue );
 8007ea2:	4620      	mov	r0, r4
}
 8007ea4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
			vPortFree( pxQueue );
 8007ea8:	f7ff b8fa 	b.w	80070a0 <vPortFree>
}
 8007eac:	bd10      	pop	{r4, pc}

08007eae <vQueueWaitForMessageRestricted>:
/*-----------------------------------------------------------*/

#if ( configUSE_TIMERS == 1 )

	void vQueueWaitForMessageRestricted( QueueHandle_t xQueue, TickType_t xTicksToWait, const BaseType_t xWaitIndefinitely )
	{
 8007eae:	b570      	push	{r4, r5, r6, lr}
 8007eb0:	4604      	mov	r4, r0
 8007eb2:	460d      	mov	r5, r1
 8007eb4:	4616      	mov	r6, r2
		will not actually cause the task to block, just place it on a blocked
		list.  It will not block until the scheduler is unlocked - at which
		time a yield will be performed.  If an item is added to the queue while
		the queue is locked, and the calling task blocks on the queue, then the
		calling task will be immediately unblocked when the queue is unlocked. */
		prvLockQueue( pxQueue );
 8007eb6:	f7ff f9d5 	bl	8007264 <vPortEnterCritical>
 8007eba:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 8007ebe:	2bff      	cmp	r3, #255	; 0xff
 8007ec0:	bf04      	itt	eq
 8007ec2:	2300      	moveq	r3, #0
 8007ec4:	f884 3044 	strbeq.w	r3, [r4, #68]	; 0x44
 8007ec8:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 8007ecc:	2bff      	cmp	r3, #255	; 0xff
 8007ece:	bf04      	itt	eq
 8007ed0:	2300      	moveq	r3, #0
 8007ed2:	f884 3045 	strbeq.w	r3, [r4, #69]	; 0x45
 8007ed6:	f7ff f9e7 	bl	80072a8 <vPortExitCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0U )
 8007eda:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8007edc:	b92b      	cbnz	r3, 8007eea <vQueueWaitForMessageRestricted+0x3c>
		{
			/* There is nothing in the queue, block for the specified period. */
			vTaskPlaceOnEventListRestricted( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait, xWaitIndefinitely );
 8007ede:	4632      	mov	r2, r6
 8007ee0:	4629      	mov	r1, r5
 8007ee2:	f104 0024 	add.w	r0, r4, #36	; 0x24
 8007ee6:	f000 fb7f 	bl	80085e8 <vTaskPlaceOnEventListRestricted>
		}
		else
		{
			mtCOVERAGE_TEST_MARKER();
		}
		prvUnlockQueue( pxQueue );
 8007eea:	4620      	mov	r0, r4
	}
 8007eec:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
		prvUnlockQueue( pxQueue );
 8007ef0:	f7ff bb57 	b.w	80075a2 <prvUnlockQueue>

08007ef4 <prvAddNewTaskToReadyList>:
	}
}
/*-----------------------------------------------------------*/

static void prvAddNewTaskToReadyList( TCB_t *pxNewTCB )
{
 8007ef4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8007ef8:	4604      	mov	r4, r0
	/* Ensure interrupts don't access the task lists while the lists are being
	updated. */
	taskENTER_CRITICAL();
 8007efa:	f7ff f9b3 	bl	8007264 <vPortEnterCritical>
	{
		uxCurrentNumberOfTasks++;
 8007efe:	4b2f      	ldr	r3, [pc, #188]	; (8007fbc <prvAddNewTaskToReadyList+0xc8>)
		if( pxCurrentTCB == NULL )
 8007f00:	4d2f      	ldr	r5, [pc, #188]	; (8007fc0 <prvAddNewTaskToReadyList+0xcc>)
		uxCurrentNumberOfTasks++;
 8007f02:	681a      	ldr	r2, [r3, #0]
 8007f04:	4f2f      	ldr	r7, [pc, #188]	; (8007fc4 <prvAddNewTaskToReadyList+0xd0>)
 8007f06:	3201      	adds	r2, #1
 8007f08:	601a      	str	r2, [r3, #0]
		if( pxCurrentTCB == NULL )
 8007f0a:	682e      	ldr	r6, [r5, #0]
 8007f0c:	2e00      	cmp	r6, #0
 8007f0e:	d149      	bne.n	8007fa4 <prvAddNewTaskToReadyList+0xb0>
		{
			/* There are no other tasks, or all the other tasks are in
			the suspended state - make this the current task. */
			pxCurrentTCB = pxNewTCB;
 8007f10:	602c      	str	r4, [r5, #0]

			if( uxCurrentNumberOfTasks == ( UBaseType_t ) 1 )
 8007f12:	681b      	ldr	r3, [r3, #0]
 8007f14:	2b01      	cmp	r3, #1
 8007f16:	d11f      	bne.n	8007f58 <prvAddNewTaskToReadyList+0x64>
{
UBaseType_t uxPriority;

	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
	{
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 8007f18:	f04f 0814 	mov.w	r8, #20
 8007f1c:	fb08 7006 	mla	r0, r8, r6, r7
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 8007f20:	3601      	adds	r6, #1
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 8007f22:	f7ff f8f5 	bl	8007110 <vListInitialise>
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 8007f26:	2e38      	cmp	r6, #56	; 0x38
 8007f28:	d1f8      	bne.n	8007f1c <prvAddNewTaskToReadyList+0x28>
	}

	vListInitialise( &xDelayedTaskList1 );
 8007f2a:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 8007ff0 <prvAddNewTaskToReadyList+0xfc>
	vListInitialise( &xDelayedTaskList2 );
 8007f2e:	4e26      	ldr	r6, [pc, #152]	; (8007fc8 <prvAddNewTaskToReadyList+0xd4>)
	vListInitialise( &xDelayedTaskList1 );
 8007f30:	4640      	mov	r0, r8
 8007f32:	f7ff f8ed 	bl	8007110 <vListInitialise>
	vListInitialise( &xDelayedTaskList2 );
 8007f36:	4630      	mov	r0, r6
 8007f38:	f7ff f8ea 	bl	8007110 <vListInitialise>
	vListInitialise( &xPendingReadyList );
 8007f3c:	4823      	ldr	r0, [pc, #140]	; (8007fcc <prvAddNewTaskToReadyList+0xd8>)
 8007f3e:	f7ff f8e7 	bl	8007110 <vListInitialise>

	#if ( INCLUDE_vTaskDelete == 1 )
	{
		vListInitialise( &xTasksWaitingTermination );
 8007f42:	4823      	ldr	r0, [pc, #140]	; (8007fd0 <prvAddNewTaskToReadyList+0xdc>)
 8007f44:	f7ff f8e4 	bl	8007110 <vListInitialise>
	}
	#endif /* INCLUDE_vTaskDelete */

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		vListInitialise( &xSuspendedTaskList );
 8007f48:	4822      	ldr	r0, [pc, #136]	; (8007fd4 <prvAddNewTaskToReadyList+0xe0>)
 8007f4a:	f7ff f8e1 	bl	8007110 <vListInitialise>
	}
	#endif /* INCLUDE_vTaskSuspend */

	/* Start with pxDelayedTaskList using list1 and the pxOverflowDelayedTaskList
	using list2. */
	pxDelayedTaskList = &xDelayedTaskList1;
 8007f4e:	4b22      	ldr	r3, [pc, #136]	; (8007fd8 <prvAddNewTaskToReadyList+0xe4>)
 8007f50:	f8c3 8000 	str.w	r8, [r3]
	pxOverflowDelayedTaskList = &xDelayedTaskList2;
 8007f54:	4b21      	ldr	r3, [pc, #132]	; (8007fdc <prvAddNewTaskToReadyList+0xe8>)
 8007f56:	601e      	str	r6, [r3, #0]
		uxTaskNumber++;
 8007f58:	4a21      	ldr	r2, [pc, #132]	; (8007fe0 <prvAddNewTaskToReadyList+0xec>)
 8007f5a:	6813      	ldr	r3, [r2, #0]
 8007f5c:	3301      	adds	r3, #1
 8007f5e:	6013      	str	r3, [r2, #0]
		prvAddTaskToReadyList( pxNewTCB );
 8007f60:	4a20      	ldr	r2, [pc, #128]	; (8007fe4 <prvAddNewTaskToReadyList+0xf0>)
			pxNewTCB->uxTCBNumber = uxTaskNumber;
 8007f62:	6463      	str	r3, [r4, #68]	; 0x44
		prvAddTaskToReadyList( pxNewTCB );
 8007f64:	6811      	ldr	r1, [r2, #0]
 8007f66:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8007f68:	2014      	movs	r0, #20
 8007f6a:	428b      	cmp	r3, r1
 8007f6c:	fb00 7003 	mla	r0, r0, r3, r7
 8007f70:	f104 0104 	add.w	r1, r4, #4
 8007f74:	bf88      	it	hi
 8007f76:	6013      	strhi	r3, [r2, #0]
 8007f78:	f7ff f8d8 	bl	800712c <vListInsertEnd>
	taskEXIT_CRITICAL();
 8007f7c:	f7ff f994 	bl	80072a8 <vPortExitCritical>
	if( xSchedulerRunning != pdFALSE )
 8007f80:	4b19      	ldr	r3, [pc, #100]	; (8007fe8 <prvAddNewTaskToReadyList+0xf4>)
 8007f82:	681b      	ldr	r3, [r3, #0]
 8007f84:	b163      	cbz	r3, 8007fa0 <prvAddNewTaskToReadyList+0xac>
		if( pxCurrentTCB->uxPriority < pxNewTCB->uxPriority )
 8007f86:	682b      	ldr	r3, [r5, #0]
 8007f88:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8007f8a:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8007f8c:	429a      	cmp	r2, r3
 8007f8e:	d207      	bcs.n	8007fa0 <prvAddNewTaskToReadyList+0xac>
			taskYIELD_IF_USING_PREEMPTION();
 8007f90:	4b16      	ldr	r3, [pc, #88]	; (8007fec <prvAddNewTaskToReadyList+0xf8>)
 8007f92:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8007f96:	601a      	str	r2, [r3, #0]
 8007f98:	f3bf 8f4f 	dsb	sy
 8007f9c:	f3bf 8f6f 	isb	sy
}
 8007fa0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
			if( xSchedulerRunning == pdFALSE )
 8007fa4:	4b10      	ldr	r3, [pc, #64]	; (8007fe8 <prvAddNewTaskToReadyList+0xf4>)
 8007fa6:	681b      	ldr	r3, [r3, #0]
 8007fa8:	2b00      	cmp	r3, #0
 8007faa:	d1d5      	bne.n	8007f58 <prvAddNewTaskToReadyList+0x64>
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 8007fac:	682b      	ldr	r3, [r5, #0]
 8007fae:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8007fb0:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8007fb2:	429a      	cmp	r2, r3
					pxCurrentTCB = pxNewTCB;
 8007fb4:	bf98      	it	ls
 8007fb6:	602c      	strls	r4, [r5, #0]
 8007fb8:	e7ce      	b.n	8007f58 <prvAddNewTaskToReadyList+0x64>
 8007fba:	bf00      	nop
 8007fbc:	20012170 	.word	0x20012170
 8007fc0:	20011d04 	.word	0x20011d04
 8007fc4:	20011d10 	.word	0x20011d10
 8007fc8:	2001219c 	.word	0x2001219c
 8007fcc:	200121b8 	.word	0x200121b8
 8007fd0:	200121e4 	.word	0x200121e4
 8007fd4:	200121d0 	.word	0x200121d0
 8007fd8:	20011d08 	.word	0x20011d08
 8007fdc:	20011d0c 	.word	0x20011d0c
 8007fe0:	20012180 	.word	0x20012180
 8007fe4:	20012184 	.word	0x20012184
 8007fe8:	200121cc 	.word	0x200121cc
 8007fec:	e000ed04 	.word	0xe000ed04
 8007ff0:	20012188 	.word	0x20012188

08007ff4 <prvDeleteTCB>:
/*-----------------------------------------------------------*/

#if ( INCLUDE_vTaskDelete == 1 )

	static void prvDeleteTCB( TCB_t *pxTCB )
	{
 8007ff4:	b510      	push	{r4, lr}
		#elif( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 ) /*lint !e731 !e9029 Macro has been consolidated for readability reasons. */
		{
			/* The task could have been allocated statically or dynamically, so
			check what was statically allocated before trying to free the
			memory. */
			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
 8007ff6:	f890 305d 	ldrb.w	r3, [r0, #93]	; 0x5d
	{
 8007ffa:	4604      	mov	r4, r0
			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
 8007ffc:	b93b      	cbnz	r3, 800800e <prvDeleteTCB+0x1a>
			{
				/* Both the stack and TCB were allocated dynamically, so both
				must be freed. */
				vPortFree( pxTCB->pxStack );
 8007ffe:	6b00      	ldr	r0, [r0, #48]	; 0x30
 8008000:	f7ff f84e 	bl	80070a0 <vPortFree>
				vPortFree( pxTCB );
 8008004:	4620      	mov	r0, r4
				configASSERT( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_AND_TCB	);
				mtCOVERAGE_TEST_MARKER();
			}
		}
		#endif /* configSUPPORT_DYNAMIC_ALLOCATION */
	}
 8008006:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
				vPortFree( pxTCB );
 800800a:	f7ff b849 	b.w	80070a0 <vPortFree>
			else if( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_ONLY )
 800800e:	2b01      	cmp	r3, #1
 8008010:	d0f9      	beq.n	8008006 <prvDeleteTCB+0x12>
				configASSERT( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_AND_TCB	);
 8008012:	2b02      	cmp	r3, #2
 8008014:	d008      	beq.n	8008028 <prvDeleteTCB+0x34>
 8008016:	f04f 0350 	mov.w	r3, #80	; 0x50
 800801a:	f383 8811 	msr	BASEPRI, r3
 800801e:	f3bf 8f6f 	isb	sy
 8008022:	f3bf 8f4f 	dsb	sy
 8008026:	e7fe      	b.n	8008026 <prvDeleteTCB+0x32>
	}
 8008028:	bd10      	pop	{r4, pc}
	...

0800802c <prvIdleTask>:
{
 800802c:	b580      	push	{r7, lr}
				taskYIELD();
 800802e:	f8df 805c 	ldr.w	r8, [pc, #92]	; 800808c <prvIdleTask+0x60>
				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8008032:	4f12      	ldr	r7, [pc, #72]	; (800807c <prvIdleTask+0x50>)
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 8008034:	4c12      	ldr	r4, [pc, #72]	; (8008080 <prvIdleTask+0x54>)
				--uxCurrentNumberOfTasks;
 8008036:	4d13      	ldr	r5, [pc, #76]	; (8008084 <prvIdleTask+0x58>)
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 8008038:	6823      	ldr	r3, [r4, #0]
 800803a:	b963      	cbnz	r3, 8008056 <prvIdleTask+0x2a>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > ( UBaseType_t ) 1 )
 800803c:	4b12      	ldr	r3, [pc, #72]	; (8008088 <prvIdleTask+0x5c>)
 800803e:	681b      	ldr	r3, [r3, #0]
 8008040:	2b01      	cmp	r3, #1
 8008042:	d9f8      	bls.n	8008036 <prvIdleTask+0xa>
				taskYIELD();
 8008044:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
 8008048:	f8c8 3000 	str.w	r3, [r8]
 800804c:	f3bf 8f4f 	dsb	sy
 8008050:	f3bf 8f6f 	isb	sy
 8008054:	e7ee      	b.n	8008034 <prvIdleTask+0x8>
			taskENTER_CRITICAL();
 8008056:	f7ff f905 	bl	8007264 <vPortEnterCritical>
				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800805a:	68fb      	ldr	r3, [r7, #12]
 800805c:	68de      	ldr	r6, [r3, #12]
				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800805e:	1d30      	adds	r0, r6, #4
 8008060:	f7ff f887 	bl	8007172 <uxListRemove>
				--uxCurrentNumberOfTasks;
 8008064:	682b      	ldr	r3, [r5, #0]
 8008066:	3b01      	subs	r3, #1
 8008068:	602b      	str	r3, [r5, #0]
				--uxDeletedTasksWaitingCleanUp;
 800806a:	6823      	ldr	r3, [r4, #0]
 800806c:	3b01      	subs	r3, #1
 800806e:	6023      	str	r3, [r4, #0]
			taskEXIT_CRITICAL();
 8008070:	f7ff f91a 	bl	80072a8 <vPortExitCritical>
			prvDeleteTCB( pxTCB );
 8008074:	4630      	mov	r0, r6
 8008076:	f7ff ffbd 	bl	8007ff4 <prvDeleteTCB>
 800807a:	e7dd      	b.n	8008038 <prvIdleTask+0xc>
 800807c:	200121e4 	.word	0x200121e4
 8008080:	20012174 	.word	0x20012174
 8008084:	20012170 	.word	0x20012170
 8008088:	20011d10 	.word	0x20011d10
 800808c:	e000ed04 	.word	0xe000ed04

08008090 <prvResetNextTaskUnblockTime>:

static void prvResetNextTaskUnblockTime( void )
{
TCB_t *pxTCB;

	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 8008090:	4a06      	ldr	r2, [pc, #24]	; (80080ac <prvResetNextTaskUnblockTime+0x1c>)
 8008092:	6813      	ldr	r3, [r2, #0]
 8008094:	6819      	ldr	r1, [r3, #0]
 8008096:	4b06      	ldr	r3, [pc, #24]	; (80080b0 <prvResetNextTaskUnblockTime+0x20>)
 8008098:	b919      	cbnz	r1, 80080a2 <prvResetNextTaskUnblockTime+0x12>
	{
		/* The new current delayed list is empty.  Set xNextTaskUnblockTime to
		the maximum possible value so it is	extremely unlikely that the
		if( xTickCount >= xNextTaskUnblockTime ) test will pass until
		there is an item in the delayed list. */
		xNextTaskUnblockTime = portMAX_DELAY;
 800809a:	f04f 32ff 	mov.w	r2, #4294967295
		/* The new current delayed list is not empty, get the value of
		the item at the head of the delayed list.  This is the time at
		which the task at the head of the delayed list should be removed
		from the Blocked state. */
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 800809e:	601a      	str	r2, [r3, #0]
	}
}
 80080a0:	4770      	bx	lr
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 80080a2:	6812      	ldr	r2, [r2, #0]
 80080a4:	68d2      	ldr	r2, [r2, #12]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 80080a6:	68d2      	ldr	r2, [r2, #12]
 80080a8:	6852      	ldr	r2, [r2, #4]
 80080aa:	e7f8      	b.n	800809e <prvResetNextTaskUnblockTime+0xe>
 80080ac:	20011d08 	.word	0x20011d08
 80080b0:	200121b0 	.word	0x200121b0

080080b4 <prvInitialiseNewTask.isra.2>:
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 80080b4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80080b8:	e9dd 6409 	ldrd	r6, r4, [sp, #36]	; 0x24
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 80080bc:	ea4f 0982 	mov.w	r9, r2, lsl #2
 80080c0:	464a      	mov	r2, r9
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 80080c2:	4607      	mov	r7, r0
 80080c4:	460d      	mov	r5, r1
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 80080c6:	6b20      	ldr	r0, [r4, #48]	; 0x30
 80080c8:	21a5      	movs	r1, #165	; 0xa5
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 80080ca:	4698      	mov	r8, r3
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 80080cc:	f011 fadf 	bl	801968e <memset>
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
 80080d0:	6b23      	ldr	r3, [r4, #48]	; 0x30
 80080d2:	f1a9 0904 	sub.w	r9, r9, #4
 80080d6:	4499      	add	r9, r3
		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTER_SIZE_TYPE ) portBYTE_ALIGNMENT_MASK ) ) ); /*lint !e923 !e9033 !e9078 MISRA exception.  Avoiding casts between pointers and integers is not practical.  Size differences accounted for using portPOINTER_SIZE_TYPE type.  Checked by assert(). */
 80080d8:	f029 0907 	bic.w	r9, r9, #7
	if( pcName != NULL )
 80080dc:	b3a5      	cbz	r5, 8008148 <prvInitialiseNewTask.isra.2+0x94>
 80080de:	1e6b      	subs	r3, r5, #1
 80080e0:	f104 0234 	add.w	r2, r4, #52	; 0x34
 80080e4:	350f      	adds	r5, #15
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 80080e6:	f813 1f01 	ldrb.w	r1, [r3, #1]!
 80080ea:	f802 1b01 	strb.w	r1, [r2], #1
			if( pcName[ x ] == ( char ) 0x00 )
 80080ee:	7819      	ldrb	r1, [r3, #0]
 80080f0:	b109      	cbz	r1, 80080f6 <prvInitialiseNewTask.isra.2+0x42>
		for( x = ( UBaseType_t ) 0; x < ( UBaseType_t ) configMAX_TASK_NAME_LEN; x++ )
 80080f2:	42ab      	cmp	r3, r5
 80080f4:	d1f7      	bne.n	80080e6 <prvInitialiseNewTask.isra.2+0x32>
		pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
 80080f6:	2300      	movs	r3, #0
 80080f8:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 80080fc:	9d08      	ldr	r5, [sp, #32]
 80080fe:	2d37      	cmp	r5, #55	; 0x37
 8008100:	bf28      	it	cs
 8008102:	2537      	movcs	r5, #55	; 0x37
		pxNewTCB->uxMutexesHeld = 0;
 8008104:	f04f 0a00 	mov.w	sl, #0
	pxNewTCB->uxPriority = uxPriority;
 8008108:	62e5      	str	r5, [r4, #44]	; 0x2c
		pxNewTCB->uxBasePriority = uxPriority;
 800810a:	64e5      	str	r5, [r4, #76]	; 0x4c
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 800810c:	1d20      	adds	r0, r4, #4
		pxNewTCB->uxMutexesHeld = 0;
 800810e:	f8c4 a050 	str.w	sl, [r4, #80]	; 0x50
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 8008112:	f7ff f808 	bl	8007126 <vListInitialiseItem>
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8008116:	f1c5 0538 	rsb	r5, r5, #56	; 0x38
	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
 800811a:	f104 0018 	add.w	r0, r4, #24
 800811e:	f7ff f802 	bl	8007126 <vListInitialiseItem>
		pxNewTCB->ulNotifiedValue = 0;
 8008122:	f8c4 a058 	str.w	sl, [r4, #88]	; 0x58
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
 8008126:	6124      	str	r4, [r4, #16]
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8008128:	61a5      	str	r5, [r4, #24]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
 800812a:	6264      	str	r4, [r4, #36]	; 0x24
		pxNewTCB->pxTaskTag = NULL;
 800812c:	f8c4 a054 	str.w	sl, [r4, #84]	; 0x54
		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
 8008130:	f884 a05c 	strb.w	sl, [r4, #92]	; 0x5c
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
 8008134:	4642      	mov	r2, r8
 8008136:	4639      	mov	r1, r7
 8008138:	4648      	mov	r0, r9
 800813a:	f7ff f869 	bl	8007210 <pxPortInitialiseStack>
 800813e:	6020      	str	r0, [r4, #0]
	if( pxCreatedTask != NULL )
 8008140:	b106      	cbz	r6, 8008144 <prvInitialiseNewTask.isra.2+0x90>
		*pxCreatedTask = ( TaskHandle_t ) pxNewTCB;
 8008142:	6034      	str	r4, [r6, #0]
}
 8008144:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
		pxNewTCB->pcTaskName[ 0 ] = 0x00;
 8008148:	f884 5034 	strb.w	r5, [r4, #52]	; 0x34
 800814c:	e7d6      	b.n	80080fc <prvInitialiseNewTask.isra.2+0x48>
	...

08008150 <prvAddCurrentTaskToDelayedList>:
	}
#endif
/*-----------------------------------------------------------*/

static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait, const BaseType_t xCanBlockIndefinitely )
{
 8008150:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
TickType_t xTimeToWake;
const TickType_t xConstTickCount = xTickCount;
 8008152:	4b16      	ldr	r3, [pc, #88]	; (80081ac <prvAddCurrentTaskToDelayedList+0x5c>)
	}
	#endif

	/* Remove the task from the ready list before adding it to the blocked list
	as the same list item is used for both lists. */
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8008154:	4e16      	ldr	r6, [pc, #88]	; (80081b0 <prvAddCurrentTaskToDelayedList+0x60>)
const TickType_t xConstTickCount = xTickCount;
 8008156:	681c      	ldr	r4, [r3, #0]
{
 8008158:	4605      	mov	r5, r0
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800815a:	6830      	ldr	r0, [r6, #0]
 800815c:	3004      	adds	r0, #4
{
 800815e:	460f      	mov	r7, r1
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8008160:	f7ff f807 	bl	8007172 <uxListRemove>
		mtCOVERAGE_TEST_MARKER();
	}

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		if( ( xTicksToWait == portMAX_DELAY ) && ( xCanBlockIndefinitely != pdFALSE ) )
 8008164:	1c6b      	adds	r3, r5, #1
 8008166:	4633      	mov	r3, r6
 8008168:	d107      	bne.n	800817a <prvAddCurrentTaskToDelayedList+0x2a>
 800816a:	b137      	cbz	r7, 800817a <prvAddCurrentTaskToDelayedList+0x2a>
		{
			/* Add the task to the suspended task list instead of a delayed task
			list to ensure it is not woken by a timing event.  It will block
			indefinitely. */
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800816c:	6831      	ldr	r1, [r6, #0]
 800816e:	4811      	ldr	r0, [pc, #68]	; (80081b4 <prvAddCurrentTaskToDelayedList+0x64>)
 8008170:	3104      	adds	r1, #4

		/* Avoid compiler warning when INCLUDE_vTaskSuspend is not 1. */
		( void ) xCanBlockIndefinitely;
	}
	#endif /* INCLUDE_vTaskSuspend */
}
 8008172:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8008176:	f7fe bfd9 	b.w	800712c <vListInsertEnd>
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
 800817a:	681a      	ldr	r2, [r3, #0]
 800817c:	1964      	adds	r4, r4, r5
 800817e:	6054      	str	r4, [r2, #4]
			if( xTimeToWake < xConstTickCount )
 8008180:	d307      	bcc.n	8008192 <prvAddCurrentTaskToDelayedList+0x42>
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8008182:	4a0d      	ldr	r2, [pc, #52]	; (80081b8 <prvAddCurrentTaskToDelayedList+0x68>)
 8008184:	6810      	ldr	r0, [r2, #0]
 8008186:	6819      	ldr	r1, [r3, #0]
}
 8008188:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800818c:	3104      	adds	r1, #4
 800818e:	f7fe bfd9 	b.w	8007144 <vListInsert>
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8008192:	4a0a      	ldr	r2, [pc, #40]	; (80081bc <prvAddCurrentTaskToDelayedList+0x6c>)
 8008194:	6810      	ldr	r0, [r2, #0]
 8008196:	6819      	ldr	r1, [r3, #0]
 8008198:	3104      	adds	r1, #4
 800819a:	f7fe ffd3 	bl	8007144 <vListInsert>
				if( xTimeToWake < xNextTaskUnblockTime )
 800819e:	4b08      	ldr	r3, [pc, #32]	; (80081c0 <prvAddCurrentTaskToDelayedList+0x70>)
 80081a0:	681a      	ldr	r2, [r3, #0]
 80081a2:	42a2      	cmp	r2, r4
					xNextTaskUnblockTime = xTimeToWake;
 80081a4:	bf88      	it	hi
 80081a6:	601c      	strhi	r4, [r3, #0]
}
 80081a8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80081aa:	bf00      	nop
 80081ac:	200121f8 	.word	0x200121f8
 80081b0:	20011d04 	.word	0x20011d04
 80081b4:	200121d0 	.word	0x200121d0
 80081b8:	20011d0c 	.word	0x20011d0c
 80081bc:	20011d08 	.word	0x20011d08
 80081c0:	200121b0 	.word	0x200121b0

080081c4 <xTaskCreateStatic>:
	{
 80081c4:	b570      	push	{r4, r5, r6, lr}
 80081c6:	b086      	sub	sp, #24
 80081c8:	e9dd 540b 	ldrd	r5, r4, [sp, #44]	; 0x2c
		configASSERT( puxStackBuffer != NULL );
 80081cc:	b945      	cbnz	r5, 80081e0 <xTaskCreateStatic+0x1c>
 80081ce:	f04f 0350 	mov.w	r3, #80	; 0x50
 80081d2:	f383 8811 	msr	BASEPRI, r3
 80081d6:	f3bf 8f6f 	isb	sy
 80081da:	f3bf 8f4f 	dsb	sy
 80081de:	e7fe      	b.n	80081de <xTaskCreateStatic+0x1a>
		configASSERT( pxTaskBuffer != NULL );
 80081e0:	b944      	cbnz	r4, 80081f4 <xTaskCreateStatic+0x30>
 80081e2:	f04f 0350 	mov.w	r3, #80	; 0x50
 80081e6:	f383 8811 	msr	BASEPRI, r3
 80081ea:	f3bf 8f6f 	isb	sy
 80081ee:	f3bf 8f4f 	dsb	sy
 80081f2:	e7fe      	b.n	80081f2 <xTaskCreateStatic+0x2e>
			volatile size_t xSize = sizeof( StaticTask_t );
 80081f4:	2660      	movs	r6, #96	; 0x60
 80081f6:	9605      	str	r6, [sp, #20]
			configASSERT( xSize == sizeof( TCB_t ) );
 80081f8:	9e05      	ldr	r6, [sp, #20]
 80081fa:	2e60      	cmp	r6, #96	; 0x60
 80081fc:	d008      	beq.n	8008210 <xTaskCreateStatic+0x4c>
 80081fe:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008202:	f383 8811 	msr	BASEPRI, r3
 8008206:	f3bf 8f6f 	isb	sy
 800820a:	f3bf 8f4f 	dsb	sy
 800820e:	e7fe      	b.n	800820e <xTaskCreateStatic+0x4a>
			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
 8008210:	6325      	str	r5, [r4, #48]	; 0x30
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 8008212:	2502      	movs	r5, #2
 8008214:	f884 505d 	strb.w	r5, [r4, #93]	; 0x5d
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 8008218:	ad04      	add	r5, sp, #16
 800821a:	9501      	str	r5, [sp, #4]
 800821c:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 800821e:	9402      	str	r4, [sp, #8]
 8008220:	9500      	str	r5, [sp, #0]
			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
 8008222:	9e05      	ldr	r6, [sp, #20]
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 8008224:	f7ff ff46 	bl	80080b4 <prvInitialiseNewTask.isra.2>
			prvAddNewTaskToReadyList( pxNewTCB );
 8008228:	4620      	mov	r0, r4
 800822a:	f7ff fe63 	bl	8007ef4 <prvAddNewTaskToReadyList>
	}
 800822e:	9804      	ldr	r0, [sp, #16]
 8008230:	b006      	add	sp, #24
 8008232:	bd70      	pop	{r4, r5, r6, pc}

08008234 <xTaskCreate>:
	{
 8008234:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8008238:	4607      	mov	r7, r0
 800823a:	b085      	sub	sp, #20
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 800823c:	0090      	lsls	r0, r2, #2
	{
 800823e:	4688      	mov	r8, r1
 8008240:	4616      	mov	r6, r2
 8008242:	4699      	mov	r9, r3
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 8008244:	f7fe fea0 	bl	8006f88 <pvPortMalloc>
			if( pxStack != NULL )
 8008248:	4605      	mov	r5, r0
 800824a:	b1e8      	cbz	r0, 8008288 <xTaskCreate+0x54>
				pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) ); /*lint !e9087 !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack, and the first member of TCB_t is always a pointer to the task's stack. */
 800824c:	2060      	movs	r0, #96	; 0x60
 800824e:	f7fe fe9b 	bl	8006f88 <pvPortMalloc>
				if( pxNewTCB != NULL )
 8008252:	4604      	mov	r4, r0
 8008254:	b1a8      	cbz	r0, 8008282 <xTaskCreate+0x4e>
				pxNewTCB->ucStaticallyAllocated = tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB;
 8008256:	2300      	movs	r3, #0
 8008258:	f880 305d 	strb.w	r3, [r0, #93]	; 0x5d
			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
 800825c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
					pxNewTCB->pxStack = pxStack;
 800825e:	6305      	str	r5, [r0, #48]	; 0x30
			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
 8008260:	9301      	str	r3, [sp, #4]
 8008262:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8008264:	9002      	str	r0, [sp, #8]
 8008266:	9300      	str	r3, [sp, #0]
 8008268:	4632      	mov	r2, r6
 800826a:	464b      	mov	r3, r9
 800826c:	4641      	mov	r1, r8
 800826e:	4638      	mov	r0, r7
 8008270:	f7ff ff20 	bl	80080b4 <prvInitialiseNewTask.isra.2>
			prvAddNewTaskToReadyList( pxNewTCB );
 8008274:	4620      	mov	r0, r4
 8008276:	f7ff fe3d 	bl	8007ef4 <prvAddNewTaskToReadyList>
			xReturn = pdPASS;
 800827a:	2001      	movs	r0, #1
	}
 800827c:	b005      	add	sp, #20
 800827e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
					vPortFree( pxStack );
 8008282:	4628      	mov	r0, r5
 8008284:	f7fe ff0c 	bl	80070a0 <vPortFree>
			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 8008288:	f04f 30ff 	mov.w	r0, #4294967295
		return xReturn;
 800828c:	e7f6      	b.n	800827c <xTaskCreate+0x48>
	...

08008290 <vTaskStartScheduler>:
{
 8008290:	b510      	push	{r4, lr}
 8008292:	b088      	sub	sp, #32
		StaticTask_t *pxIdleTaskTCBBuffer = NULL;
 8008294:	2400      	movs	r4, #0
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 8008296:	aa07      	add	r2, sp, #28
 8008298:	a906      	add	r1, sp, #24
 800829a:	a805      	add	r0, sp, #20
		StackType_t *pxIdleTaskStackBuffer = NULL;
 800829c:	e9cd 4405 	strd	r4, r4, [sp, #20]
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 80082a0:	f7fe fe36 	bl	8006f10 <vApplicationGetIdleTaskMemory>
		xIdleTaskHandle = xTaskCreateStatic(	prvIdleTask,
 80082a4:	9b05      	ldr	r3, [sp, #20]
 80082a6:	9302      	str	r3, [sp, #8]
 80082a8:	9b06      	ldr	r3, [sp, #24]
 80082aa:	9a07      	ldr	r2, [sp, #28]
 80082ac:	4915      	ldr	r1, [pc, #84]	; (8008304 <vTaskStartScheduler+0x74>)
 80082ae:	4816      	ldr	r0, [pc, #88]	; (8008308 <vTaskStartScheduler+0x78>)
 80082b0:	e9cd 4300 	strd	r4, r3, [sp]
 80082b4:	4623      	mov	r3, r4
 80082b6:	f7ff ff85 	bl	80081c4 <xTaskCreateStatic>
		if( xIdleTaskHandle != NULL )
 80082ba:	b1a8      	cbz	r0, 80082e8 <vTaskStartScheduler+0x58>
			xReturn = xTimerCreateTimerTask();
 80082bc:	f000 fb7e 	bl	80089bc <xTimerCreateTimerTask>
	if( xReturn == pdPASS )
 80082c0:	2801      	cmp	r0, #1
 80082c2:	d113      	bne.n	80082ec <vTaskStartScheduler+0x5c>
 80082c4:	f04f 0350 	mov.w	r3, #80	; 0x50
 80082c8:	f383 8811 	msr	BASEPRI, r3
 80082cc:	f3bf 8f6f 	isb	sy
 80082d0:	f3bf 8f4f 	dsb	sy
		xNextTaskUnblockTime = portMAX_DELAY;
 80082d4:	4b0d      	ldr	r3, [pc, #52]	; (800830c <vTaskStartScheduler+0x7c>)
 80082d6:	f04f 32ff 	mov.w	r2, #4294967295
 80082da:	601a      	str	r2, [r3, #0]
		xSchedulerRunning = pdTRUE;
 80082dc:	4b0c      	ldr	r3, [pc, #48]	; (8008310 <vTaskStartScheduler+0x80>)
 80082de:	6018      	str	r0, [r3, #0]
		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
 80082e0:	4b0c      	ldr	r3, [pc, #48]	; (8008314 <vTaskStartScheduler+0x84>)
 80082e2:	601c      	str	r4, [r3, #0]
		if( xPortStartScheduler() != pdFALSE )
 80082e4:	f7ff f856 	bl	8007394 <xPortStartScheduler>
}
 80082e8:	b008      	add	sp, #32
 80082ea:	bd10      	pop	{r4, pc}
		configASSERT( xReturn != errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY );
 80082ec:	3001      	adds	r0, #1
 80082ee:	d1fb      	bne.n	80082e8 <vTaskStartScheduler+0x58>
 80082f0:	f04f 0350 	mov.w	r3, #80	; 0x50
 80082f4:	f383 8811 	msr	BASEPRI, r3
 80082f8:	f3bf 8f6f 	isb	sy
 80082fc:	f3bf 8f4f 	dsb	sy
 8008300:	e7fe      	b.n	8008300 <vTaskStartScheduler+0x70>
 8008302:	bf00      	nop
 8008304:	0801b3c4 	.word	0x0801b3c4
 8008308:	0800802d 	.word	0x0800802d
 800830c:	200121b0 	.word	0x200121b0
 8008310:	200121cc 	.word	0x200121cc
 8008314:	200121f8 	.word	0x200121f8

08008318 <vTaskSuspendAll>:
	++uxSchedulerSuspended;
 8008318:	4a02      	ldr	r2, [pc, #8]	; (8008324 <vTaskSuspendAll+0xc>)
 800831a:	6813      	ldr	r3, [r2, #0]
 800831c:	3301      	adds	r3, #1
 800831e:	6013      	str	r3, [r2, #0]
}
 8008320:	4770      	bx	lr
 8008322:	bf00      	nop
 8008324:	2001217c 	.word	0x2001217c

08008328 <xTaskGetTickCount>:
		xTicks = xTickCount;
 8008328:	4b01      	ldr	r3, [pc, #4]	; (8008330 <xTaskGetTickCount+0x8>)
 800832a:	6818      	ldr	r0, [r3, #0]
}
 800832c:	4770      	bx	lr
 800832e:	bf00      	nop
 8008330:	200121f8 	.word	0x200121f8

08008334 <xTaskIncrementTick>:
{
 8008334:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 8008338:	4b3b      	ldr	r3, [pc, #236]	; (8008428 <xTaskIncrementTick+0xf4>)
 800833a:	681b      	ldr	r3, [r3, #0]
 800833c:	2b00      	cmp	r3, #0
 800833e:	d16c      	bne.n	800841a <xTaskIncrementTick+0xe6>
		const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
 8008340:	4b3a      	ldr	r3, [pc, #232]	; (800842c <xTaskIncrementTick+0xf8>)
 8008342:	681c      	ldr	r4, [r3, #0]
 8008344:	3401      	adds	r4, #1
		xTickCount = xConstTickCount;
 8008346:	601c      	str	r4, [r3, #0]
		if( xConstTickCount == ( TickType_t ) 0U ) /*lint !e774 'if' does not always evaluate to false as it is looking for an overflow. */
 8008348:	b9bc      	cbnz	r4, 800837a <xTaskIncrementTick+0x46>
			taskSWITCH_DELAYED_LISTS();
 800834a:	4b39      	ldr	r3, [pc, #228]	; (8008430 <xTaskIncrementTick+0xfc>)
 800834c:	681a      	ldr	r2, [r3, #0]
 800834e:	6812      	ldr	r2, [r2, #0]
 8008350:	b142      	cbz	r2, 8008364 <xTaskIncrementTick+0x30>
 8008352:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008356:	f383 8811 	msr	BASEPRI, r3
 800835a:	f3bf 8f6f 	isb	sy
 800835e:	f3bf 8f4f 	dsb	sy
 8008362:	e7fe      	b.n	8008362 <xTaskIncrementTick+0x2e>
 8008364:	4a33      	ldr	r2, [pc, #204]	; (8008434 <xTaskIncrementTick+0x100>)
 8008366:	6819      	ldr	r1, [r3, #0]
 8008368:	6810      	ldr	r0, [r2, #0]
 800836a:	6018      	str	r0, [r3, #0]
 800836c:	6011      	str	r1, [r2, #0]
 800836e:	4a32      	ldr	r2, [pc, #200]	; (8008438 <xTaskIncrementTick+0x104>)
 8008370:	6813      	ldr	r3, [r2, #0]
 8008372:	3301      	adds	r3, #1
 8008374:	6013      	str	r3, [r2, #0]
 8008376:	f7ff fe8b 	bl	8008090 <prvResetNextTaskUnblockTime>
		if( xConstTickCount >= xNextTaskUnblockTime )
 800837a:	4d30      	ldr	r5, [pc, #192]	; (800843c <xTaskIncrementTick+0x108>)
 800837c:	4f30      	ldr	r7, [pc, #192]	; (8008440 <xTaskIncrementTick+0x10c>)
 800837e:	682b      	ldr	r3, [r5, #0]
 8008380:	42a3      	cmp	r3, r4
BaseType_t xSwitchRequired = pdFALSE;
 8008382:	f04f 0b00 	mov.w	fp, #0
		if( xConstTickCount >= xNextTaskUnblockTime )
 8008386:	d911      	bls.n	80083ac <xTaskIncrementTick+0x78>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_t ) 1 )
 8008388:	683a      	ldr	r2, [r7, #0]
 800838a:	4b2e      	ldr	r3, [pc, #184]	; (8008444 <xTaskIncrementTick+0x110>)
 800838c:	6ad1      	ldr	r1, [r2, #44]	; 0x2c
 800838e:	2214      	movs	r2, #20
 8008390:	434a      	muls	r2, r1
 8008392:	589a      	ldr	r2, [r3, r2]
				xSwitchRequired = pdTRUE;
 8008394:	2a02      	cmp	r2, #2
 8008396:	bf28      	it	cs
 8008398:	f04f 0b01 	movcs.w	fp, #1
		if( xYieldPending != pdFALSE )
 800839c:	4a2a      	ldr	r2, [pc, #168]	; (8008448 <xTaskIncrementTick+0x114>)
 800839e:	6812      	ldr	r2, [r2, #0]
			xSwitchRequired = pdTRUE;
 80083a0:	2a00      	cmp	r2, #0
}
 80083a2:	bf0c      	ite	eq
 80083a4:	4658      	moveq	r0, fp
 80083a6:	2001      	movne	r0, #1
 80083a8:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 80083ac:	f8df 9080 	ldr.w	r9, [pc, #128]	; 8008430 <xTaskIncrementTick+0xfc>
					prvAddTaskToReadyList( pxTCB );
 80083b0:	f8df a09c 	ldr.w	sl, [pc, #156]	; 8008450 <xTaskIncrementTick+0x11c>
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 80083b4:	f8d9 2000 	ldr.w	r2, [r9]
 80083b8:	6812      	ldr	r2, [r2, #0]
 80083ba:	b91a      	cbnz	r2, 80083c4 <xTaskIncrementTick+0x90>
					xNextTaskUnblockTime = portMAX_DELAY; /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 80083bc:	f04f 32ff 	mov.w	r2, #4294967295
 80083c0:	602a      	str	r2, [r5, #0]
					break;
 80083c2:	e7e1      	b.n	8008388 <xTaskIncrementTick+0x54>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 80083c4:	f8d9 2000 	ldr.w	r2, [r9]
 80083c8:	68d2      	ldr	r2, [r2, #12]
 80083ca:	68d6      	ldr	r6, [r2, #12]
					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
 80083cc:	6871      	ldr	r1, [r6, #4]
					if( xConstTickCount < xItemValue )
 80083ce:	428c      	cmp	r4, r1
 80083d0:	d201      	bcs.n	80083d6 <xTaskIncrementTick+0xa2>
						xNextTaskUnblockTime = xItemValue;
 80083d2:	6029      	str	r1, [r5, #0]
						break; /*lint !e9011 Code structure here is deedmed easier to understand with multiple breaks. */
 80083d4:	e7d8      	b.n	8008388 <xTaskIncrementTick+0x54>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 80083d6:	f106 0804 	add.w	r8, r6, #4
 80083da:	4640      	mov	r0, r8
 80083dc:	f7fe fec9 	bl	8007172 <uxListRemove>
					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
 80083e0:	6ab1      	ldr	r1, [r6, #40]	; 0x28
 80083e2:	b119      	cbz	r1, 80083ec <xTaskIncrementTick+0xb8>
						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 80083e4:	f106 0018 	add.w	r0, r6, #24
 80083e8:	f7fe fec3 	bl	8007172 <uxListRemove>
					prvAddTaskToReadyList( pxTCB );
 80083ec:	6af0      	ldr	r0, [r6, #44]	; 0x2c
 80083ee:	f8da 1000 	ldr.w	r1, [sl]
 80083f2:	4b14      	ldr	r3, [pc, #80]	; (8008444 <xTaskIncrementTick+0x110>)
 80083f4:	4288      	cmp	r0, r1
 80083f6:	f04f 0214 	mov.w	r2, #20
 80083fa:	bf88      	it	hi
 80083fc:	f8ca 0000 	strhi.w	r0, [sl]
 8008400:	4641      	mov	r1, r8
 8008402:	fb02 3000 	mla	r0, r2, r0, r3
 8008406:	f7fe fe91 	bl	800712c <vListInsertEnd>
						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 800840a:	6838      	ldr	r0, [r7, #0]
 800840c:	6af1      	ldr	r1, [r6, #44]	; 0x2c
 800840e:	6ac2      	ldr	r2, [r0, #44]	; 0x2c
							xSwitchRequired = pdTRUE;
 8008410:	4291      	cmp	r1, r2
 8008412:	bf28      	it	cs
 8008414:	f04f 0b01 	movcs.w	fp, #1
 8008418:	e7cc      	b.n	80083b4 <xTaskIncrementTick+0x80>
		++uxPendedTicks;
 800841a:	4a0c      	ldr	r2, [pc, #48]	; (800844c <xTaskIncrementTick+0x118>)
 800841c:	6813      	ldr	r3, [r2, #0]
 800841e:	3301      	adds	r3, #1
 8008420:	6013      	str	r3, [r2, #0]
BaseType_t xSwitchRequired = pdFALSE;
 8008422:	f04f 0b00 	mov.w	fp, #0
 8008426:	e7b9      	b.n	800839c <xTaskIncrementTick+0x68>
 8008428:	2001217c 	.word	0x2001217c
 800842c:	200121f8 	.word	0x200121f8
 8008430:	20011d08 	.word	0x20011d08
 8008434:	20011d0c 	.word	0x20011d0c
 8008438:	200121b4 	.word	0x200121b4
 800843c:	200121b0 	.word	0x200121b0
 8008440:	20011d04 	.word	0x20011d04
 8008444:	20011d10 	.word	0x20011d10
 8008448:	200121fc 	.word	0x200121fc
 800844c:	20012178 	.word	0x20012178
 8008450:	20012184 	.word	0x20012184

08008454 <xTaskResumeAll>:
{
 8008454:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
	configASSERT( uxSchedulerSuspended );
 8008458:	4c2f      	ldr	r4, [pc, #188]	; (8008518 <xTaskResumeAll+0xc4>)
 800845a:	6823      	ldr	r3, [r4, #0]
 800845c:	b943      	cbnz	r3, 8008470 <xTaskResumeAll+0x1c>
 800845e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008462:	f383 8811 	msr	BASEPRI, r3
 8008466:	f3bf 8f6f 	isb	sy
 800846a:	f3bf 8f4f 	dsb	sy
 800846e:	e7fe      	b.n	800846e <xTaskResumeAll+0x1a>
	taskENTER_CRITICAL();
 8008470:	f7fe fef8 	bl	8007264 <vPortEnterCritical>
		--uxSchedulerSuspended;
 8008474:	6823      	ldr	r3, [r4, #0]
 8008476:	3b01      	subs	r3, #1
 8008478:	6023      	str	r3, [r4, #0]
		if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800847a:	6824      	ldr	r4, [r4, #0]
 800847c:	b12c      	cbz	r4, 800848a <xTaskResumeAll+0x36>
BaseType_t xAlreadyYielded = pdFALSE;
 800847e:	2400      	movs	r4, #0
	taskEXIT_CRITICAL();
 8008480:	f7fe ff12 	bl	80072a8 <vPortExitCritical>
}
 8008484:	4620      	mov	r0, r4
 8008486:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
			if( uxCurrentNumberOfTasks > ( UBaseType_t ) 0U )
 800848a:	4b24      	ldr	r3, [pc, #144]	; (800851c <xTaskResumeAll+0xc8>)
 800848c:	681b      	ldr	r3, [r3, #0]
 800848e:	2b00      	cmp	r3, #0
 8008490:	d0f5      	beq.n	800847e <xTaskResumeAll+0x2a>
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 8008492:	4d23      	ldr	r5, [pc, #140]	; (8008520 <xTaskResumeAll+0xcc>)
					prvAddTaskToReadyList( pxTCB );
 8008494:	4e23      	ldr	r6, [pc, #140]	; (8008524 <xTaskResumeAll+0xd0>)
 8008496:	f8df 80a0 	ldr.w	r8, [pc, #160]	; 8008538 <xTaskResumeAll+0xe4>
 800849a:	e01d      	b.n	80084d8 <xTaskResumeAll+0x84>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xPendingReadyList ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800849c:	68eb      	ldr	r3, [r5, #12]
 800849e:	68dc      	ldr	r4, [r3, #12]
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 80084a0:	1d27      	adds	r7, r4, #4
					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 80084a2:	f104 0018 	add.w	r0, r4, #24
 80084a6:	f7fe fe64 	bl	8007172 <uxListRemove>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 80084aa:	4638      	mov	r0, r7
 80084ac:	f7fe fe61 	bl	8007172 <uxListRemove>
					prvAddTaskToReadyList( pxTCB );
 80084b0:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 80084b2:	6832      	ldr	r2, [r6, #0]
 80084b4:	2014      	movs	r0, #20
 80084b6:	4293      	cmp	r3, r2
 80084b8:	fb00 8003 	mla	r0, r0, r3, r8
 80084bc:	4639      	mov	r1, r7
 80084be:	bf88      	it	hi
 80084c0:	6033      	strhi	r3, [r6, #0]
 80084c2:	f7fe fe33 	bl	800712c <vListInsertEnd>
					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 80084c6:	4b18      	ldr	r3, [pc, #96]	; (8008528 <xTaskResumeAll+0xd4>)
 80084c8:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 80084ca:	681b      	ldr	r3, [r3, #0]
 80084cc:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80084ce:	429a      	cmp	r2, r3
 80084d0:	d302      	bcc.n	80084d8 <xTaskResumeAll+0x84>
						xYieldPending = pdTRUE;
 80084d2:	4b16      	ldr	r3, [pc, #88]	; (800852c <xTaskResumeAll+0xd8>)
 80084d4:	2201      	movs	r2, #1
 80084d6:	601a      	str	r2, [r3, #0]
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 80084d8:	682b      	ldr	r3, [r5, #0]
 80084da:	2b00      	cmp	r3, #0
 80084dc:	d1de      	bne.n	800849c <xTaskResumeAll+0x48>
				if( pxTCB != NULL )
 80084de:	b10c      	cbz	r4, 80084e4 <xTaskResumeAll+0x90>
					prvResetNextTaskUnblockTime();
 80084e0:	f7ff fdd6 	bl	8008090 <prvResetNextTaskUnblockTime>
					UBaseType_t uxPendedCounts = uxPendedTicks; /* Non-volatile copy. */
 80084e4:	4d12      	ldr	r5, [pc, #72]	; (8008530 <xTaskResumeAll+0xdc>)
 80084e6:	682c      	ldr	r4, [r5, #0]
					if( uxPendedCounts > ( UBaseType_t ) 0U )
 80084e8:	b144      	cbz	r4, 80084fc <xTaskResumeAll+0xa8>
								xYieldPending = pdTRUE;
 80084ea:	4e10      	ldr	r6, [pc, #64]	; (800852c <xTaskResumeAll+0xd8>)
 80084ec:	2701      	movs	r7, #1
							if( xTaskIncrementTick() != pdFALSE )
 80084ee:	f7ff ff21 	bl	8008334 <xTaskIncrementTick>
 80084f2:	b100      	cbz	r0, 80084f6 <xTaskResumeAll+0xa2>
								xYieldPending = pdTRUE;
 80084f4:	6037      	str	r7, [r6, #0]
						} while( uxPendedCounts > ( UBaseType_t ) 0U );
 80084f6:	3c01      	subs	r4, #1
 80084f8:	d1f9      	bne.n	80084ee <xTaskResumeAll+0x9a>
						uxPendedTicks = 0;
 80084fa:	602c      	str	r4, [r5, #0]
				if( xYieldPending != pdFALSE )
 80084fc:	4b0b      	ldr	r3, [pc, #44]	; (800852c <xTaskResumeAll+0xd8>)
 80084fe:	681b      	ldr	r3, [r3, #0]
 8008500:	2b00      	cmp	r3, #0
 8008502:	d0bc      	beq.n	800847e <xTaskResumeAll+0x2a>
					taskYIELD_IF_USING_PREEMPTION();
 8008504:	4b0b      	ldr	r3, [pc, #44]	; (8008534 <xTaskResumeAll+0xe0>)
 8008506:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800850a:	601a      	str	r2, [r3, #0]
 800850c:	f3bf 8f4f 	dsb	sy
 8008510:	f3bf 8f6f 	isb	sy
						xAlreadyYielded = pdTRUE;
 8008514:	2401      	movs	r4, #1
 8008516:	e7b3      	b.n	8008480 <xTaskResumeAll+0x2c>
 8008518:	2001217c 	.word	0x2001217c
 800851c:	20012170 	.word	0x20012170
 8008520:	200121b8 	.word	0x200121b8
 8008524:	20012184 	.word	0x20012184
 8008528:	20011d04 	.word	0x20011d04
 800852c:	200121fc 	.word	0x200121fc
 8008530:	20012178 	.word	0x20012178
 8008534:	e000ed04 	.word	0xe000ed04
 8008538:	20011d10 	.word	0x20011d10

0800853c <vTaskSwitchContext>:
	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
 800853c:	4b18      	ldr	r3, [pc, #96]	; (80085a0 <vTaskSwitchContext+0x64>)
 800853e:	681a      	ldr	r2, [r3, #0]
 8008540:	4b18      	ldr	r3, [pc, #96]	; (80085a4 <vTaskSwitchContext+0x68>)
{
 8008542:	b5f0      	push	{r4, r5, r6, r7, lr}
	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
 8008544:	b112      	cbz	r2, 800854c <vTaskSwitchContext+0x10>
		xYieldPending = pdTRUE;
 8008546:	2201      	movs	r2, #1
 8008548:	601a      	str	r2, [r3, #0]
}
 800854a:	bdf0      	pop	{r4, r5, r6, r7, pc}
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800854c:	4d16      	ldr	r5, [pc, #88]	; (80085a8 <vTaskSwitchContext+0x6c>)
		xYieldPending = pdFALSE;
 800854e:	601a      	str	r2, [r3, #0]
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8008550:	4a16      	ldr	r2, [pc, #88]	; (80085ac <vTaskSwitchContext+0x70>)
 8008552:	682b      	ldr	r3, [r5, #0]
 8008554:	2714      	movs	r7, #20
 8008556:	4616      	mov	r6, r2
 8008558:	fb07 f103 	mul.w	r1, r7, r3
 800855c:	1850      	adds	r0, r2, r1
 800855e:	5854      	ldr	r4, [r2, r1]
 8008560:	b18c      	cbz	r4, 8008586 <vTaskSwitchContext+0x4a>
 8008562:	6844      	ldr	r4, [r0, #4]
 8008564:	3108      	adds	r1, #8
 8008566:	6864      	ldr	r4, [r4, #4]
 8008568:	6044      	str	r4, [r0, #4]
 800856a:	440a      	add	r2, r1
 800856c:	4294      	cmp	r4, r2
 800856e:	bf04      	itt	eq
 8008570:	6862      	ldreq	r2, [r4, #4]
 8008572:	6042      	streq	r2, [r0, #4]
 8008574:	2214      	movs	r2, #20
 8008576:	fb02 6203 	mla	r2, r2, r3, r6
 800857a:	6852      	ldr	r2, [r2, #4]
 800857c:	68d1      	ldr	r1, [r2, #12]
 800857e:	4a0c      	ldr	r2, [pc, #48]	; (80085b0 <vTaskSwitchContext+0x74>)
 8008580:	6011      	str	r1, [r2, #0]
 8008582:	602b      	str	r3, [r5, #0]
}
 8008584:	e7e1      	b.n	800854a <vTaskSwitchContext+0xe>
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8008586:	b943      	cbnz	r3, 800859a <vTaskSwitchContext+0x5e>
 8008588:	f04f 0350 	mov.w	r3, #80	; 0x50
 800858c:	f383 8811 	msr	BASEPRI, r3
 8008590:	f3bf 8f6f 	isb	sy
 8008594:	f3bf 8f4f 	dsb	sy
 8008598:	e7fe      	b.n	8008598 <vTaskSwitchContext+0x5c>
 800859a:	3b01      	subs	r3, #1
 800859c:	e7dc      	b.n	8008558 <vTaskSwitchContext+0x1c>
 800859e:	bf00      	nop
 80085a0:	2001217c 	.word	0x2001217c
 80085a4:	200121fc 	.word	0x200121fc
 80085a8:	20012184 	.word	0x20012184
 80085ac:	20011d10 	.word	0x20011d10
 80085b0:	20011d04 	.word	0x20011d04

080085b4 <vTaskPlaceOnEventList>:
{
 80085b4:	b510      	push	{r4, lr}
 80085b6:	460c      	mov	r4, r1
	configASSERT( pxEventList );
 80085b8:	b940      	cbnz	r0, 80085cc <vTaskPlaceOnEventList+0x18>
 80085ba:	f04f 0350 	mov.w	r3, #80	; 0x50
 80085be:	f383 8811 	msr	BASEPRI, r3
 80085c2:	f3bf 8f6f 	isb	sy
 80085c6:	f3bf 8f4f 	dsb	sy
 80085ca:	e7fe      	b.n	80085ca <vTaskPlaceOnEventList+0x16>
	vListInsert( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 80085cc:	4b05      	ldr	r3, [pc, #20]	; (80085e4 <vTaskPlaceOnEventList+0x30>)
 80085ce:	6819      	ldr	r1, [r3, #0]
 80085d0:	3118      	adds	r1, #24
 80085d2:	f7fe fdb7 	bl	8007144 <vListInsert>
	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
 80085d6:	4620      	mov	r0, r4
 80085d8:	2101      	movs	r1, #1
}
 80085da:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
 80085de:	f7ff bdb7 	b.w	8008150 <prvAddCurrentTaskToDelayedList>
 80085e2:	bf00      	nop
 80085e4:	20011d04 	.word	0x20011d04

080085e8 <vTaskPlaceOnEventListRestricted>:
	{
 80085e8:	b538      	push	{r3, r4, r5, lr}
 80085ea:	460d      	mov	r5, r1
 80085ec:	4614      	mov	r4, r2
		configASSERT( pxEventList );
 80085ee:	b940      	cbnz	r0, 8008602 <vTaskPlaceOnEventListRestricted+0x1a>
 80085f0:	f04f 0350 	mov.w	r3, #80	; 0x50
 80085f4:	f383 8811 	msr	BASEPRI, r3
 80085f8:	f3bf 8f6f 	isb	sy
 80085fc:	f3bf 8f4f 	dsb	sy
 8008600:	e7fe      	b.n	8008600 <vTaskPlaceOnEventListRestricted+0x18>
		vListInsertEnd( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 8008602:	4b07      	ldr	r3, [pc, #28]	; (8008620 <vTaskPlaceOnEventListRestricted+0x38>)
 8008604:	6819      	ldr	r1, [r3, #0]
 8008606:	3118      	adds	r1, #24
 8008608:	f7fe fd90 	bl	800712c <vListInsertEnd>
			xTicksToWait = portMAX_DELAY;
 800860c:	2c00      	cmp	r4, #0
		prvAddCurrentTaskToDelayedList( xTicksToWait, xWaitIndefinitely );
 800860e:	4621      	mov	r1, r4
 8008610:	bf0c      	ite	eq
 8008612:	4628      	moveq	r0, r5
 8008614:	f04f 30ff 	movne.w	r0, #4294967295
	}
 8008618:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		prvAddCurrentTaskToDelayedList( xTicksToWait, xWaitIndefinitely );
 800861c:	f7ff bd98 	b.w	8008150 <prvAddCurrentTaskToDelayedList>
 8008620:	20011d04 	.word	0x20011d04

08008624 <xTaskRemoveFromEventList>:
{
 8008624:	b538      	push	{r3, r4, r5, lr}
	pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8008626:	68c3      	ldr	r3, [r0, #12]
 8008628:	68dc      	ldr	r4, [r3, #12]
	configASSERT( pxUnblockedTCB );
 800862a:	b944      	cbnz	r4, 800863e <xTaskRemoveFromEventList+0x1a>
 800862c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008630:	f383 8811 	msr	BASEPRI, r3
 8008634:	f3bf 8f6f 	isb	sy
 8008638:	f3bf 8f4f 	dsb	sy
 800863c:	e7fe      	b.n	800863c <xTaskRemoveFromEventList+0x18>
	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
 800863e:	f104 0518 	add.w	r5, r4, #24
 8008642:	4628      	mov	r0, r5
 8008644:	f7fe fd95 	bl	8007172 <uxListRemove>
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 8008648:	4b10      	ldr	r3, [pc, #64]	; (800868c <xTaskRemoveFromEventList+0x68>)
 800864a:	681b      	ldr	r3, [r3, #0]
 800864c:	b9db      	cbnz	r3, 8008686 <xTaskRemoveFromEventList+0x62>
		( void ) uxListRemove( &( pxUnblockedTCB->xStateListItem ) );
 800864e:	1d25      	adds	r5, r4, #4
 8008650:	4628      	mov	r0, r5
 8008652:	f7fe fd8e 	bl	8007172 <uxListRemove>
		prvAddTaskToReadyList( pxUnblockedTCB );
 8008656:	4a0e      	ldr	r2, [pc, #56]	; (8008690 <xTaskRemoveFromEventList+0x6c>)
 8008658:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800865a:	6811      	ldr	r1, [r2, #0]
 800865c:	428b      	cmp	r3, r1
 800865e:	bf88      	it	hi
 8008660:	6013      	strhi	r3, [r2, #0]
 8008662:	4a0c      	ldr	r2, [pc, #48]	; (8008694 <xTaskRemoveFromEventList+0x70>)
 8008664:	2014      	movs	r0, #20
 8008666:	4629      	mov	r1, r5
 8008668:	fb00 2003 	mla	r0, r0, r3, r2
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
 800866c:	f7fe fd5e 	bl	800712c <vListInsertEnd>
	if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
 8008670:	4b09      	ldr	r3, [pc, #36]	; (8008698 <xTaskRemoveFromEventList+0x74>)
 8008672:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8008674:	681b      	ldr	r3, [r3, #0]
 8008676:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8008678:	429a      	cmp	r2, r3
		xYieldPending = pdTRUE;
 800867a:	bf83      	ittte	hi
 800867c:	4b07      	ldrhi	r3, [pc, #28]	; (800869c <xTaskRemoveFromEventList+0x78>)
 800867e:	2001      	movhi	r0, #1
 8008680:	6018      	strhi	r0, [r3, #0]
		xReturn = pdFALSE;
 8008682:	2000      	movls	r0, #0
}
 8008684:	bd38      	pop	{r3, r4, r5, pc}
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
 8008686:	4629      	mov	r1, r5
 8008688:	4805      	ldr	r0, [pc, #20]	; (80086a0 <xTaskRemoveFromEventList+0x7c>)
 800868a:	e7ef      	b.n	800866c <xTaskRemoveFromEventList+0x48>
 800868c:	2001217c 	.word	0x2001217c
 8008690:	20012184 	.word	0x20012184
 8008694:	20011d10 	.word	0x20011d10
 8008698:	20011d04 	.word	0x20011d04
 800869c:	200121fc 	.word	0x200121fc
 80086a0:	200121b8 	.word	0x200121b8

080086a4 <vTaskInternalSetTimeOutState>:
	pxTimeOut->xOverflowCount = xNumOfOverflows;
 80086a4:	4b03      	ldr	r3, [pc, #12]	; (80086b4 <vTaskInternalSetTimeOutState+0x10>)
 80086a6:	681b      	ldr	r3, [r3, #0]
 80086a8:	6003      	str	r3, [r0, #0]
	pxTimeOut->xTimeOnEntering = xTickCount;
 80086aa:	4b03      	ldr	r3, [pc, #12]	; (80086b8 <vTaskInternalSetTimeOutState+0x14>)
 80086ac:	681b      	ldr	r3, [r3, #0]
 80086ae:	6043      	str	r3, [r0, #4]
}
 80086b0:	4770      	bx	lr
 80086b2:	bf00      	nop
 80086b4:	200121b4 	.word	0x200121b4
 80086b8:	200121f8 	.word	0x200121f8

080086bc <xTaskCheckForTimeOut>:
{
 80086bc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80086be:	460c      	mov	r4, r1
	configASSERT( pxTimeOut );
 80086c0:	4605      	mov	r5, r0
 80086c2:	b940      	cbnz	r0, 80086d6 <xTaskCheckForTimeOut+0x1a>
 80086c4:	f04f 0350 	mov.w	r3, #80	; 0x50
 80086c8:	f383 8811 	msr	BASEPRI, r3
 80086cc:	f3bf 8f6f 	isb	sy
 80086d0:	f3bf 8f4f 	dsb	sy
 80086d4:	e7fe      	b.n	80086d4 <xTaskCheckForTimeOut+0x18>
	configASSERT( pxTicksToWait );
 80086d6:	b941      	cbnz	r1, 80086ea <xTaskCheckForTimeOut+0x2e>
 80086d8:	f04f 0350 	mov.w	r3, #80	; 0x50
 80086dc:	f383 8811 	msr	BASEPRI, r3
 80086e0:	f3bf 8f6f 	isb	sy
 80086e4:	f3bf 8f4f 	dsb	sy
 80086e8:	e7fe      	b.n	80086e8 <xTaskCheckForTimeOut+0x2c>
	taskENTER_CRITICAL();
 80086ea:	f7fe fdbb 	bl	8007264 <vPortEnterCritical>
		const TickType_t xConstTickCount = xTickCount;
 80086ee:	4b0f      	ldr	r3, [pc, #60]	; (800872c <xTaskCheckForTimeOut+0x70>)
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 80086f0:	6868      	ldr	r0, [r5, #4]
		const TickType_t xConstTickCount = xTickCount;
 80086f2:	6819      	ldr	r1, [r3, #0]
			if( *pxTicksToWait == portMAX_DELAY )
 80086f4:	6823      	ldr	r3, [r4, #0]
 80086f6:	1c5e      	adds	r6, r3, #1
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 80086f8:	eba1 0200 	sub.w	r2, r1, r0
			if( *pxTicksToWait == portMAX_DELAY )
 80086fc:	d00d      	beq.n	800871a <xTaskCheckForTimeOut+0x5e>
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
 80086fe:	4e0c      	ldr	r6, [pc, #48]	; (8008730 <xTaskCheckForTimeOut+0x74>)
 8008700:	682f      	ldr	r7, [r5, #0]
 8008702:	6836      	ldr	r6, [r6, #0]
 8008704:	42b7      	cmp	r7, r6
 8008706:	d001      	beq.n	800870c <xTaskCheckForTimeOut+0x50>
 8008708:	4288      	cmp	r0, r1
 800870a:	d90d      	bls.n	8008728 <xTaskCheckForTimeOut+0x6c>
		else if( xElapsedTime < *pxTicksToWait ) /*lint !e961 Explicit casting is only redundant with some compilers, whereas others require it to prevent integer conversion errors. */
 800870c:	4293      	cmp	r3, r2
 800870e:	d909      	bls.n	8008724 <xTaskCheckForTimeOut+0x68>
			*pxTicksToWait -= xElapsedTime;
 8008710:	1a9b      	subs	r3, r3, r2
 8008712:	6023      	str	r3, [r4, #0]
			vTaskInternalSetTimeOutState( pxTimeOut );
 8008714:	4628      	mov	r0, r5
 8008716:	f7ff ffc5 	bl	80086a4 <vTaskInternalSetTimeOutState>
				xReturn = pdFALSE;
 800871a:	2400      	movs	r4, #0
	taskEXIT_CRITICAL();
 800871c:	f7fe fdc4 	bl	80072a8 <vPortExitCritical>
}
 8008720:	4620      	mov	r0, r4
 8008722:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
			*pxTicksToWait = 0;
 8008724:	2300      	movs	r3, #0
 8008726:	6023      	str	r3, [r4, #0]
			xReturn = pdTRUE;
 8008728:	2401      	movs	r4, #1
 800872a:	e7f7      	b.n	800871c <xTaskCheckForTimeOut+0x60>
 800872c:	200121f8 	.word	0x200121f8
 8008730:	200121b4 	.word	0x200121b4

08008734 <vTaskMissedYield>:
	xYieldPending = pdTRUE;
 8008734:	4b01      	ldr	r3, [pc, #4]	; (800873c <vTaskMissedYield+0x8>)
 8008736:	2201      	movs	r2, #1
 8008738:	601a      	str	r2, [r3, #0]
}
 800873a:	4770      	bx	lr
 800873c:	200121fc 	.word	0x200121fc

08008740 <xTaskGetSchedulerState>:
		if( xSchedulerRunning == pdFALSE )
 8008740:	4b05      	ldr	r3, [pc, #20]	; (8008758 <xTaskGetSchedulerState+0x18>)
 8008742:	681b      	ldr	r3, [r3, #0]
 8008744:	b133      	cbz	r3, 8008754 <xTaskGetSchedulerState+0x14>
			if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 8008746:	4b05      	ldr	r3, [pc, #20]	; (800875c <xTaskGetSchedulerState+0x1c>)
 8008748:	681b      	ldr	r3, [r3, #0]
 800874a:	2b00      	cmp	r3, #0
				xReturn = taskSCHEDULER_SUSPENDED;
 800874c:	bf0c      	ite	eq
 800874e:	2002      	moveq	r0, #2
 8008750:	2000      	movne	r0, #0
 8008752:	4770      	bx	lr
			xReturn = taskSCHEDULER_NOT_STARTED;
 8008754:	2001      	movs	r0, #1
	}
 8008756:	4770      	bx	lr
 8008758:	200121cc 	.word	0x200121cc
 800875c:	2001217c 	.word	0x2001217c

08008760 <xTaskPriorityInherit>:
	{
 8008760:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
		if( pxMutexHolder != NULL )
 8008762:	4604      	mov	r4, r0
 8008764:	b340      	cbz	r0, 80087b8 <xTaskPriorityInherit+0x58>
			if( pxMutexHolderTCB->uxPriority < pxCurrentTCB->uxPriority )
 8008766:	4a1b      	ldr	r2, [pc, #108]	; (80087d4 <xTaskPriorityInherit+0x74>)
 8008768:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 800876a:	6811      	ldr	r1, [r2, #0]
 800876c:	6ac9      	ldr	r1, [r1, #44]	; 0x2c
 800876e:	428b      	cmp	r3, r1
 8008770:	4616      	mov	r6, r2
 8008772:	d226      	bcs.n	80087c2 <xTaskPriorityInherit+0x62>
				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 8008774:	6982      	ldr	r2, [r0, #24]
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
 8008776:	4d18      	ldr	r5, [pc, #96]	; (80087d8 <xTaskPriorityInherit+0x78>)
				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 8008778:	2a00      	cmp	r2, #0
					listSET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxCurrentTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800877a:	bfa1      	itttt	ge
 800877c:	6832      	ldrge	r2, [r6, #0]
 800877e:	6ad2      	ldrge	r2, [r2, #44]	; 0x2c
 8008780:	f1c2 0238 	rsbge	r2, r2, #56	; 0x38
 8008784:	6182      	strge	r2, [r0, #24]
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
 8008786:	2214      	movs	r2, #20
 8008788:	fb02 5303 	mla	r3, r2, r3, r5
 800878c:	6942      	ldr	r2, [r0, #20]
 800878e:	429a      	cmp	r2, r3
 8008790:	d113      	bne.n	80087ba <xTaskPriorityInherit+0x5a>
					if( uxListRemove( &( pxMutexHolderTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8008792:	1d07      	adds	r7, r0, #4
 8008794:	4638      	mov	r0, r7
 8008796:	f7fe fcec 	bl	8007172 <uxListRemove>
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800879a:	6833      	ldr	r3, [r6, #0]
					prvAddTaskToReadyList( pxMutexHolderTCB );
 800879c:	4a0f      	ldr	r2, [pc, #60]	; (80087dc <xTaskPriorityInherit+0x7c>)
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800879e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 80087a0:	6811      	ldr	r1, [r2, #0]
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 80087a2:	62e3      	str	r3, [r4, #44]	; 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 80087a4:	2014      	movs	r0, #20
 80087a6:	428b      	cmp	r3, r1
 80087a8:	fb00 5003 	mla	r0, r0, r3, r5
 80087ac:	4639      	mov	r1, r7
 80087ae:	bf88      	it	hi
 80087b0:	6013      	strhi	r3, [r2, #0]
 80087b2:	f7fe fcbb 	bl	800712c <vListInsertEnd>
				xReturn = pdTRUE;
 80087b6:	2001      	movs	r0, #1
	}
 80087b8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 80087ba:	6833      	ldr	r3, [r6, #0]
 80087bc:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80087be:	62c3      	str	r3, [r0, #44]	; 0x2c
 80087c0:	e7f9      	b.n	80087b6 <xTaskPriorityInherit+0x56>
				if( pxMutexHolderTCB->uxBasePriority < pxCurrentTCB->uxPriority )
 80087c2:	6813      	ldr	r3, [r2, #0]
 80087c4:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 80087c6:	6adc      	ldr	r4, [r3, #44]	; 0x2c
 80087c8:	42a0      	cmp	r0, r4
 80087ca:	bf2c      	ite	cs
 80087cc:	2000      	movcs	r0, #0
 80087ce:	2001      	movcc	r0, #1
 80087d0:	e7f2      	b.n	80087b8 <xTaskPriorityInherit+0x58>
 80087d2:	bf00      	nop
 80087d4:	20011d04 	.word	0x20011d04
 80087d8:	20011d10 	.word	0x20011d10
 80087dc:	20012184 	.word	0x20012184

080087e0 <xTaskPriorityDisinherit>:
	{
 80087e0:	b538      	push	{r3, r4, r5, lr}
		if( pxMutexHolder != NULL )
 80087e2:	b908      	cbnz	r0, 80087e8 <xTaskPriorityDisinherit+0x8>
	BaseType_t xReturn = pdFALSE;
 80087e4:	2000      	movs	r0, #0
	}
 80087e6:	bd38      	pop	{r3, r4, r5, pc}
			configASSERT( pxTCB == pxCurrentTCB );
 80087e8:	4b1b      	ldr	r3, [pc, #108]	; (8008858 <xTaskPriorityDisinherit+0x78>)
 80087ea:	681c      	ldr	r4, [r3, #0]
 80087ec:	4284      	cmp	r4, r0
 80087ee:	d008      	beq.n	8008802 <xTaskPriorityDisinherit+0x22>
 80087f0:	f04f 0350 	mov.w	r3, #80	; 0x50
 80087f4:	f383 8811 	msr	BASEPRI, r3
 80087f8:	f3bf 8f6f 	isb	sy
 80087fc:	f3bf 8f4f 	dsb	sy
 8008800:	e7fe      	b.n	8008800 <xTaskPriorityDisinherit+0x20>
			configASSERT( pxTCB->uxMutexesHeld );
 8008802:	6d23      	ldr	r3, [r4, #80]	; 0x50
 8008804:	b943      	cbnz	r3, 8008818 <xTaskPriorityDisinherit+0x38>
 8008806:	f04f 0350 	mov.w	r3, #80	; 0x50
 800880a:	f383 8811 	msr	BASEPRI, r3
 800880e:	f3bf 8f6f 	isb	sy
 8008812:	f3bf 8f4f 	dsb	sy
 8008816:	e7fe      	b.n	8008816 <xTaskPriorityDisinherit+0x36>
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 8008818:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 800881a:	6ce2      	ldr	r2, [r4, #76]	; 0x4c
			( pxTCB->uxMutexesHeld )--;
 800881c:	3b01      	subs	r3, #1
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 800881e:	4291      	cmp	r1, r2
			( pxTCB->uxMutexesHeld )--;
 8008820:	6523      	str	r3, [r4, #80]	; 0x50
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 8008822:	d0df      	beq.n	80087e4 <xTaskPriorityDisinherit+0x4>
				if( pxTCB->uxMutexesHeld == ( UBaseType_t ) 0 )
 8008824:	2b00      	cmp	r3, #0
 8008826:	d1dd      	bne.n	80087e4 <xTaskPriorityDisinherit+0x4>
					if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8008828:	1d25      	adds	r5, r4, #4
 800882a:	4628      	mov	r0, r5
 800882c:	f7fe fca1 	bl	8007172 <uxListRemove>
					pxTCB->uxPriority = pxTCB->uxBasePriority;
 8008830:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
 8008832:	62e3      	str	r3, [r4, #44]	; 0x2c
					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8008834:	f1c3 0238 	rsb	r2, r3, #56	; 0x38
 8008838:	61a2      	str	r2, [r4, #24]
					prvAddTaskToReadyList( pxTCB );
 800883a:	4a08      	ldr	r2, [pc, #32]	; (800885c <xTaskPriorityDisinherit+0x7c>)
 800883c:	6811      	ldr	r1, [r2, #0]
 800883e:	428b      	cmp	r3, r1
 8008840:	bf88      	it	hi
 8008842:	6013      	strhi	r3, [r2, #0]
 8008844:	4a06      	ldr	r2, [pc, #24]	; (8008860 <xTaskPriorityDisinherit+0x80>)
 8008846:	2014      	movs	r0, #20
 8008848:	fb00 2003 	mla	r0, r0, r3, r2
 800884c:	4629      	mov	r1, r5
 800884e:	f7fe fc6d 	bl	800712c <vListInsertEnd>
					xReturn = pdTRUE;
 8008852:	2001      	movs	r0, #1
		return xReturn;
 8008854:	e7c7      	b.n	80087e6 <xTaskPriorityDisinherit+0x6>
 8008856:	bf00      	nop
 8008858:	20011d04 	.word	0x20011d04
 800885c:	20012184 	.word	0x20012184
 8008860:	20011d10 	.word	0x20011d10

08008864 <vTaskPriorityDisinheritAfterTimeout>:
	{
 8008864:	b570      	push	{r4, r5, r6, lr}
		if( pxMutexHolder != NULL )
 8008866:	4604      	mov	r4, r0
 8008868:	2800      	cmp	r0, #0
 800886a:	d041      	beq.n	80088f0 <vTaskPriorityDisinheritAfterTimeout+0x8c>
			configASSERT( pxTCB->uxMutexesHeld );
 800886c:	6d02      	ldr	r2, [r0, #80]	; 0x50
 800886e:	b942      	cbnz	r2, 8008882 <vTaskPriorityDisinheritAfterTimeout+0x1e>
 8008870:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008874:	f383 8811 	msr	BASEPRI, r3
 8008878:	f3bf 8f6f 	isb	sy
 800887c:	f3bf 8f4f 	dsb	sy
 8008880:	e7fe      	b.n	8008880 <vTaskPriorityDisinheritAfterTimeout+0x1c>
 8008882:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
 8008884:	4299      	cmp	r1, r3
 8008886:	bf38      	it	cc
 8008888:	4619      	movcc	r1, r3
			if( pxTCB->uxPriority != uxPriorityToUse )
 800888a:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 800888c:	428b      	cmp	r3, r1
 800888e:	d02f      	beq.n	80088f0 <vTaskPriorityDisinheritAfterTimeout+0x8c>
				if( pxTCB->uxMutexesHeld == uxOnlyOneMutexHeld )
 8008890:	2a01      	cmp	r2, #1
 8008892:	d12d      	bne.n	80088f0 <vTaskPriorityDisinheritAfterTimeout+0x8c>
					configASSERT( pxTCB != pxCurrentTCB );
 8008894:	4a17      	ldr	r2, [pc, #92]	; (80088f4 <vTaskPriorityDisinheritAfterTimeout+0x90>)
 8008896:	6812      	ldr	r2, [r2, #0]
 8008898:	4282      	cmp	r2, r0
 800889a:	d108      	bne.n	80088ae <vTaskPriorityDisinheritAfterTimeout+0x4a>
 800889c:	f04f 0350 	mov.w	r3, #80	; 0x50
 80088a0:	f383 8811 	msr	BASEPRI, r3
 80088a4:	f3bf 8f6f 	isb	sy
 80088a8:	f3bf 8f4f 	dsb	sy
 80088ac:	e7fe      	b.n	80088ac <vTaskPriorityDisinheritAfterTimeout+0x48>
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 80088ae:	6982      	ldr	r2, [r0, #24]
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 80088b0:	4d11      	ldr	r5, [pc, #68]	; (80088f8 <vTaskPriorityDisinheritAfterTimeout+0x94>)
					pxTCB->uxPriority = uxPriorityToUse;
 80088b2:	62c1      	str	r1, [r0, #44]	; 0x2c
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 80088b4:	2a00      	cmp	r2, #0
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 80088b6:	f04f 0214 	mov.w	r2, #20
 80088ba:	fb02 5303 	mla	r3, r2, r3, r5
 80088be:	6942      	ldr	r2, [r0, #20]
						listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriorityToUse ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 80088c0:	bfa4      	itt	ge
 80088c2:	f1c1 0138 	rsbge	r1, r1, #56	; 0x38
 80088c6:	6181      	strge	r1, [r0, #24]
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 80088c8:	429a      	cmp	r2, r3
 80088ca:	d111      	bne.n	80088f0 <vTaskPriorityDisinheritAfterTimeout+0x8c>
						if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 80088cc:	1d06      	adds	r6, r0, #4
 80088ce:	4630      	mov	r0, r6
 80088d0:	f7fe fc4f 	bl	8007172 <uxListRemove>
						prvAddTaskToReadyList( pxTCB );
 80088d4:	4a09      	ldr	r2, [pc, #36]	; (80088fc <vTaskPriorityDisinheritAfterTimeout+0x98>)
 80088d6:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 80088d8:	6811      	ldr	r1, [r2, #0]
 80088da:	2014      	movs	r0, #20
 80088dc:	428b      	cmp	r3, r1
 80088de:	fb00 5003 	mla	r0, r0, r3, r5
 80088e2:	4631      	mov	r1, r6
	}
 80088e4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
						prvAddTaskToReadyList( pxTCB );
 80088e8:	bf88      	it	hi
 80088ea:	6013      	strhi	r3, [r2, #0]
 80088ec:	f7fe bc1e 	b.w	800712c <vListInsertEnd>
	}
 80088f0:	bd70      	pop	{r4, r5, r6, pc}
 80088f2:	bf00      	nop
 80088f4:	20011d04 	.word	0x20011d04
 80088f8:	20011d10 	.word	0x20011d10
 80088fc:	20012184 	.word	0x20012184

08008900 <pvTaskIncrementMutexHeldCount>:
		if( pxCurrentTCB != NULL )
 8008900:	4b04      	ldr	r3, [pc, #16]	; (8008914 <pvTaskIncrementMutexHeldCount+0x14>)
 8008902:	681a      	ldr	r2, [r3, #0]
 8008904:	b11a      	cbz	r2, 800890e <pvTaskIncrementMutexHeldCount+0xe>
			( pxCurrentTCB->uxMutexesHeld )++;
 8008906:	6819      	ldr	r1, [r3, #0]
 8008908:	6d0a      	ldr	r2, [r1, #80]	; 0x50
 800890a:	3201      	adds	r2, #1
 800890c:	650a      	str	r2, [r1, #80]	; 0x50
		return pxCurrentTCB;
 800890e:	6818      	ldr	r0, [r3, #0]
	}
 8008910:	4770      	bx	lr
 8008912:	bf00      	nop
 8008914:	20011d04 	.word	0x20011d04

08008918 <prvCheckForValidListAndQueue>:
	pxOverflowTimerList = pxTemp;
}
/*-----------------------------------------------------------*/

static void prvCheckForValidListAndQueue( void )
{
 8008918:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
	/* Check that the list from which active timers are referenced, and the
	queue used to communicate with the timer service, have been
	initialised. */
	taskENTER_CRITICAL();
	{
		if( xTimerQueue == NULL )
 800891a:	4c11      	ldr	r4, [pc, #68]	; (8008960 <prvCheckForValidListAndQueue+0x48>)
	taskENTER_CRITICAL();
 800891c:	f7fe fca2 	bl	8007264 <vPortEnterCritical>
		if( xTimerQueue == NULL )
 8008920:	6825      	ldr	r5, [r4, #0]
 8008922:	b9bd      	cbnz	r5, 8008954 <prvCheckForValidListAndQueue+0x3c>
		{
			vListInitialise( &xActiveTimerList1 );
 8008924:	4f0f      	ldr	r7, [pc, #60]	; (8008964 <prvCheckForValidListAndQueue+0x4c>)
			vListInitialise( &xActiveTimerList2 );
 8008926:	4e10      	ldr	r6, [pc, #64]	; (8008968 <prvCheckForValidListAndQueue+0x50>)
			vListInitialise( &xActiveTimerList1 );
 8008928:	4638      	mov	r0, r7
 800892a:	f7fe fbf1 	bl	8007110 <vListInitialise>
			vListInitialise( &xActiveTimerList2 );
 800892e:	4630      	mov	r0, r6
 8008930:	f7fe fbee 	bl	8007110 <vListInitialise>
			pxCurrentTimerList = &xActiveTimerList1;
 8008934:	4b0d      	ldr	r3, [pc, #52]	; (800896c <prvCheckForValidListAndQueue+0x54>)
				/* The timer queue is allocated statically in case
				configSUPPORT_DYNAMIC_ALLOCATION is 0. */
				static StaticQueue_t xStaticTimerQueue; /*lint !e956 Ok to declare in this manner to prevent additional conditional compilation guards in other locations. */
				static uint8_t ucStaticTimerQueueStorage[ ( size_t ) configTIMER_QUEUE_LENGTH * sizeof( DaemonTaskMessage_t ) ]; /*lint !e956 Ok to declare in this manner to prevent additional conditional compilation guards in other locations. */

				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 8008936:	4a0e      	ldr	r2, [pc, #56]	; (8008970 <prvCheckForValidListAndQueue+0x58>)
			pxCurrentTimerList = &xActiveTimerList1;
 8008938:	601f      	str	r7, [r3, #0]
			pxOverflowTimerList = &xActiveTimerList2;
 800893a:	4b0e      	ldr	r3, [pc, #56]	; (8008974 <prvCheckForValidListAndQueue+0x5c>)
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 800893c:	2110      	movs	r1, #16
			pxOverflowTimerList = &xActiveTimerList2;
 800893e:	601e      	str	r6, [r3, #0]
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 8008940:	200a      	movs	r0, #10
 8008942:	9500      	str	r5, [sp, #0]
 8008944:	4b0c      	ldr	r3, [pc, #48]	; (8008978 <prvCheckForValidListAndQueue+0x60>)
 8008946:	f7fe fea5 	bl	8007694 <xQueueGenericCreateStatic>
 800894a:	6020      	str	r0, [r4, #0]
			}
			#endif

			#if ( configQUEUE_REGISTRY_SIZE > 0 )
			{
				if( xTimerQueue != NULL )
 800894c:	b110      	cbz	r0, 8008954 <prvCheckForValidListAndQueue+0x3c>
				{
					vQueueAddToRegistry( xTimerQueue, "TmrQ" );
 800894e:	490b      	ldr	r1, [pc, #44]	; (800897c <prvCheckForValidListAndQueue+0x64>)
 8008950:	f7ff fa70 	bl	8007e34 <vQueueAddToRegistry>
		{
			mtCOVERAGE_TEST_MARKER();
		}
	}
	taskEXIT_CRITICAL();
}
 8008954:	b003      	add	sp, #12
 8008956:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
	taskEXIT_CRITICAL();
 800895a:	f7fe bca5 	b.w	80072a8 <vPortExitCritical>
 800895e:	bf00      	nop
 8008960:	20012324 	.word	0x20012324
 8008964:	200122a8 	.word	0x200122a8
 8008968:	200122bc 	.word	0x200122bc
 800896c:	20012200 	.word	0x20012200
 8008970:	20012208 	.word	0x20012208
 8008974:	20012204 	.word	0x20012204
 8008978:	200122d4 	.word	0x200122d4
 800897c:	0801b3c9 	.word	0x0801b3c9

08008980 <prvInsertTimerInActiveList>:
	if( xNextExpiryTime <= xTimeNow )
 8008980:	4291      	cmp	r1, r2
{
 8008982:	b508      	push	{r3, lr}
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
 8008984:	6041      	str	r1, [r0, #4]
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 8008986:	6100      	str	r0, [r0, #16]
	if( xNextExpiryTime <= xTimeNow )
 8008988:	d80a      	bhi.n	80089a0 <prvInsertTimerInActiveList+0x20>
		if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks ) /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800898a:	1ad2      	subs	r2, r2, r3
 800898c:	6983      	ldr	r3, [r0, #24]
 800898e:	429a      	cmp	r2, r3
 8008990:	d20d      	bcs.n	80089ae <prvInsertTimerInActiveList+0x2e>
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
 8008992:	4b08      	ldr	r3, [pc, #32]	; (80089b4 <prvInsertTimerInActiveList+0x34>)
 8008994:	1d01      	adds	r1, r0, #4
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 8008996:	6818      	ldr	r0, [r3, #0]
 8008998:	f7fe fbd4 	bl	8007144 <vListInsert>
BaseType_t xProcessTimerNow = pdFALSE;
 800899c:	2000      	movs	r0, #0
}
 800899e:	bd08      	pop	{r3, pc}
		if( ( xTimeNow < xCommandTime ) && ( xNextExpiryTime >= xCommandTime ) )
 80089a0:	429a      	cmp	r2, r3
 80089a2:	d201      	bcs.n	80089a8 <prvInsertTimerInActiveList+0x28>
 80089a4:	4299      	cmp	r1, r3
 80089a6:	d202      	bcs.n	80089ae <prvInsertTimerInActiveList+0x2e>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 80089a8:	1d01      	adds	r1, r0, #4
 80089aa:	4b03      	ldr	r3, [pc, #12]	; (80089b8 <prvInsertTimerInActiveList+0x38>)
 80089ac:	e7f3      	b.n	8008996 <prvInsertTimerInActiveList+0x16>
			xProcessTimerNow = pdTRUE;
 80089ae:	2001      	movs	r0, #1
	return xProcessTimerNow;
 80089b0:	e7f5      	b.n	800899e <prvInsertTimerInActiveList+0x1e>
 80089b2:	bf00      	nop
 80089b4:	20012204 	.word	0x20012204
 80089b8:	20012200 	.word	0x20012200

080089bc <xTimerCreateTimerTask>:
{
 80089bc:	b510      	push	{r4, lr}
 80089be:	b088      	sub	sp, #32
	prvCheckForValidListAndQueue();
 80089c0:	f7ff ffaa 	bl	8008918 <prvCheckForValidListAndQueue>
	if( xTimerQueue != NULL )
 80089c4:	4b12      	ldr	r3, [pc, #72]	; (8008a10 <xTimerCreateTimerTask+0x54>)
 80089c6:	681b      	ldr	r3, [r3, #0]
 80089c8:	b1b3      	cbz	r3, 80089f8 <xTimerCreateTimerTask+0x3c>
			StaticTask_t *pxTimerTaskTCBBuffer = NULL;
 80089ca:	2400      	movs	r4, #0
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 80089cc:	aa07      	add	r2, sp, #28
 80089ce:	a906      	add	r1, sp, #24
 80089d0:	a805      	add	r0, sp, #20
			StackType_t *pxTimerTaskStackBuffer = NULL;
 80089d2:	e9cd 4405 	strd	r4, r4, [sp, #20]
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 80089d6:	f7fe faa7 	bl	8006f28 <vApplicationGetTimerTaskMemory>
			xTimerTaskHandle = xTaskCreateStatic(	prvTimerTask,
 80089da:	9b05      	ldr	r3, [sp, #20]
 80089dc:	9302      	str	r3, [sp, #8]
 80089de:	9b06      	ldr	r3, [sp, #24]
 80089e0:	9301      	str	r3, [sp, #4]
 80089e2:	2302      	movs	r3, #2
 80089e4:	9300      	str	r3, [sp, #0]
 80089e6:	9a07      	ldr	r2, [sp, #28]
 80089e8:	490a      	ldr	r1, [pc, #40]	; (8008a14 <xTimerCreateTimerTask+0x58>)
 80089ea:	480b      	ldr	r0, [pc, #44]	; (8008a18 <xTimerCreateTimerTask+0x5c>)
 80089ec:	4623      	mov	r3, r4
 80089ee:	f7ff fbe9 	bl	80081c4 <xTaskCreateStatic>
 80089f2:	4b0a      	ldr	r3, [pc, #40]	; (8008a1c <xTimerCreateTimerTask+0x60>)
 80089f4:	6018      	str	r0, [r3, #0]
			if( xTimerTaskHandle != NULL )
 80089f6:	b940      	cbnz	r0, 8008a0a <xTimerCreateTimerTask+0x4e>
 80089f8:	f04f 0350 	mov.w	r3, #80	; 0x50
 80089fc:	f383 8811 	msr	BASEPRI, r3
 8008a00:	f3bf 8f6f 	isb	sy
 8008a04:	f3bf 8f4f 	dsb	sy
 8008a08:	e7fe      	b.n	8008a08 <xTimerCreateTimerTask+0x4c>
}
 8008a0a:	2001      	movs	r0, #1
 8008a0c:	b008      	add	sp, #32
 8008a0e:	bd10      	pop	{r4, pc}
 8008a10:	20012324 	.word	0x20012324
 8008a14:	0801b3ce 	.word	0x0801b3ce
 8008a18:	08008af9 	.word	0x08008af9
 8008a1c:	20012328 	.word	0x20012328

08008a20 <xTimerGenericCommand>:
{
 8008a20:	b530      	push	{r4, r5, lr}
 8008a22:	4615      	mov	r5, r2
 8008a24:	b085      	sub	sp, #20
 8008a26:	461a      	mov	r2, r3
	configASSERT( xTimer );
 8008a28:	4603      	mov	r3, r0
 8008a2a:	b940      	cbnz	r0, 8008a3e <xTimerGenericCommand+0x1e>
 8008a2c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008a30:	f383 8811 	msr	BASEPRI, r3
 8008a34:	f3bf 8f6f 	isb	sy
 8008a38:	f3bf 8f4f 	dsb	sy
 8008a3c:	e7fe      	b.n	8008a3c <xTimerGenericCommand+0x1c>
	if( xTimerQueue != NULL )
 8008a3e:	4c0d      	ldr	r4, [pc, #52]	; (8008a74 <xTimerGenericCommand+0x54>)
 8008a40:	6820      	ldr	r0, [r4, #0]
 8008a42:	b180      	cbz	r0, 8008a66 <xTimerGenericCommand+0x46>
		if( xCommandID < tmrFIRST_FROM_ISR_COMMAND )
 8008a44:	2905      	cmp	r1, #5
		xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
 8008a46:	e9cd 1500 	strd	r1, r5, [sp]
		xMessage.u.xTimerParameters.pxTimer = xTimer;
 8008a4a:	9302      	str	r3, [sp, #8]
		if( xCommandID < tmrFIRST_FROM_ISR_COMMAND )
 8008a4c:	dc0d      	bgt.n	8008a6a <xTimerGenericCommand+0x4a>
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 8008a4e:	f7ff fe77 	bl	8008740 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 8008a52:	2300      	movs	r3, #0
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 8008a54:	2802      	cmp	r0, #2
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 8008a56:	bf08      	it	eq
 8008a58:	9a08      	ldreq	r2, [sp, #32]
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, tmrNO_DELAY );
 8008a5a:	6820      	ldr	r0, [r4, #0]
 8008a5c:	bf18      	it	ne
 8008a5e:	461a      	movne	r2, r3
 8008a60:	4669      	mov	r1, sp
 8008a62:	f7fe fecd 	bl	8007800 <xQueueGenericSend>
}
 8008a66:	b005      	add	sp, #20
 8008a68:	bd30      	pop	{r4, r5, pc}
			xReturn = xQueueSendToBackFromISR( xTimerQueue, &xMessage, pxHigherPriorityTaskWoken );
 8008a6a:	2300      	movs	r3, #0
 8008a6c:	4669      	mov	r1, sp
 8008a6e:	f7fe ff79 	bl	8007964 <xQueueGenericSendFromISR>
 8008a72:	e7f8      	b.n	8008a66 <xTimerGenericCommand+0x46>
 8008a74:	20012324 	.word	0x20012324

08008a78 <prvSwitchTimerLists>:
{
 8008a78:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 8008a7c:	4d1c      	ldr	r5, [pc, #112]	; (8008af0 <prvSwitchTimerLists+0x78>)
				xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
 8008a7e:	f04f 0800 	mov.w	r8, #0
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 8008a82:	682b      	ldr	r3, [r5, #0]
 8008a84:	681a      	ldr	r2, [r3, #0]
 8008a86:	b932      	cbnz	r2, 8008a96 <prvSwitchTimerLists+0x1e>
	pxCurrentTimerList = pxOverflowTimerList;
 8008a88:	4a1a      	ldr	r2, [pc, #104]	; (8008af4 <prvSwitchTimerLists+0x7c>)
 8008a8a:	6811      	ldr	r1, [r2, #0]
 8008a8c:	6029      	str	r1, [r5, #0]
	pxOverflowTimerList = pxTemp;
 8008a8e:	6013      	str	r3, [r2, #0]
}
 8008a90:	b002      	add	sp, #8
 8008a92:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 8008a96:	68db      	ldr	r3, [r3, #12]
		pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8008a98:	68dc      	ldr	r4, [r3, #12]
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 8008a9a:	681e      	ldr	r6, [r3, #0]
		( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 8008a9c:	1d27      	adds	r7, r4, #4
 8008a9e:	4638      	mov	r0, r7
 8008aa0:	f7fe fb67 	bl	8007172 <uxListRemove>
		pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 8008aa4:	6a23      	ldr	r3, [r4, #32]
 8008aa6:	4620      	mov	r0, r4
 8008aa8:	4798      	blx	r3
		if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 8008aaa:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 8008aae:	075b      	lsls	r3, r3, #29
 8008ab0:	d5e7      	bpl.n	8008a82 <prvSwitchTimerLists+0xa>
			xReloadTime = ( xNextExpireTime + pxTimer->xTimerPeriodInTicks );
 8008ab2:	69a3      	ldr	r3, [r4, #24]
 8008ab4:	4433      	add	r3, r6
			if( xReloadTime > xNextExpireTime )
 8008ab6:	429e      	cmp	r6, r3
 8008ab8:	d206      	bcs.n	8008ac8 <prvSwitchTimerLists+0x50>
				listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xReloadTime );
 8008aba:	6063      	str	r3, [r4, #4]
				listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 8008abc:	6124      	str	r4, [r4, #16]
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 8008abe:	4639      	mov	r1, r7
 8008ac0:	6828      	ldr	r0, [r5, #0]
 8008ac2:	f7fe fb3f 	bl	8007144 <vListInsert>
 8008ac6:	e7dc      	b.n	8008a82 <prvSwitchTimerLists+0xa>
				xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
 8008ac8:	2300      	movs	r3, #0
 8008aca:	f8cd 8000 	str.w	r8, [sp]
 8008ace:	4632      	mov	r2, r6
 8008ad0:	4619      	mov	r1, r3
 8008ad2:	4620      	mov	r0, r4
 8008ad4:	f7ff ffa4 	bl	8008a20 <xTimerGenericCommand>
				configASSERT( xResult );
 8008ad8:	2800      	cmp	r0, #0
 8008ada:	d1d2      	bne.n	8008a82 <prvSwitchTimerLists+0xa>
 8008adc:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008ae0:	f383 8811 	msr	BASEPRI, r3
 8008ae4:	f3bf 8f6f 	isb	sy
 8008ae8:	f3bf 8f4f 	dsb	sy
 8008aec:	e7fe      	b.n	8008aec <prvSwitchTimerLists+0x74>
 8008aee:	bf00      	nop
 8008af0:	20012200 	.word	0x20012200
 8008af4:	20012204 	.word	0x20012204

08008af8 <prvTimerTask>:
{
 8008af8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 8008afc:	4d81      	ldr	r5, [pc, #516]	; (8008d04 <prvTimerTask+0x20c>)
					portYIELD_WITHIN_API();
 8008afe:	f8df 8210 	ldr.w	r8, [pc, #528]	; 8008d10 <prvTimerTask+0x218>
{
 8008b02:	b087      	sub	sp, #28
 8008b04:	462f      	mov	r7, r5
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 8008b06:	682a      	ldr	r2, [r5, #0]
 8008b08:	6813      	ldr	r3, [r2, #0]
 8008b0a:	b353      	cbz	r3, 8008b62 <prvTimerTask+0x6a>
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 8008b0c:	68d3      	ldr	r3, [r2, #12]
 8008b0e:	f8d3 9000 	ldr.w	r9, [r3]
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 8008b12:	2400      	movs	r4, #0
	if( xTimeNow < xLastTime )
 8008b14:	f8df b1fc 	ldr.w	fp, [pc, #508]	; 8008d14 <prvTimerTask+0x21c>
	vTaskSuspendAll();
 8008b18:	f7ff fbfe 	bl	8008318 <vTaskSuspendAll>
	xTimeNow = xTaskGetTickCount();
 8008b1c:	f7ff fc04 	bl	8008328 <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
 8008b20:	f8db 3000 	ldr.w	r3, [fp]
 8008b24:	4298      	cmp	r0, r3
	xTimeNow = xTaskGetTickCount();
 8008b26:	4682      	mov	sl, r0
 8008b28:	465e      	mov	r6, fp
	if( xTimeNow < xLastTime )
 8008b2a:	d31d      	bcc.n	8008b68 <prvTimerTask+0x70>
	xLastTime = xTimeNow;
 8008b2c:	f8cb 0000 	str.w	r0, [fp]
			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
 8008b30:	b32c      	cbz	r4, 8008b7e <prvTimerTask+0x86>
					xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
 8008b32:	4b75      	ldr	r3, [pc, #468]	; (8008d08 <prvTimerTask+0x210>)
 8008b34:	681b      	ldr	r3, [r3, #0]
 8008b36:	681a      	ldr	r2, [r3, #0]
 8008b38:	fab2 f282 	clz	r2, r2
 8008b3c:	0952      	lsrs	r2, r2, #5
				vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
 8008b3e:	4b73      	ldr	r3, [pc, #460]	; (8008d0c <prvTimerTask+0x214>)
 8008b40:	eba9 010a 	sub.w	r1, r9, sl
 8008b44:	6818      	ldr	r0, [r3, #0]
 8008b46:	f7ff f9b2 	bl	8007eae <vQueueWaitForMessageRestricted>
				if( xTaskResumeAll() == pdFALSE )
 8008b4a:	f7ff fc83 	bl	8008454 <xTaskResumeAll>
 8008b4e:	b988      	cbnz	r0, 8008b74 <prvTimerTask+0x7c>
					portYIELD_WITHIN_API();
 8008b50:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
 8008b54:	f8c8 3000 	str.w	r3, [r8]
 8008b58:	f3bf 8f4f 	dsb	sy
 8008b5c:	f3bf 8f6f 	isb	sy
 8008b60:	e008      	b.n	8008b74 <prvTimerTask+0x7c>
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 8008b62:	2401      	movs	r4, #1
		xNextExpireTime = ( TickType_t ) 0U;
 8008b64:	4699      	mov	r9, r3
 8008b66:	e7d5      	b.n	8008b14 <prvTimerTask+0x1c>
		prvSwitchTimerLists();
 8008b68:	f7ff ff86 	bl	8008a78 <prvSwitchTimerLists>
	xLastTime = xTimeNow;
 8008b6c:	f8cb a000 	str.w	sl, [fp]
			( void ) xTaskResumeAll();
 8008b70:	f7ff fc70 	bl	8008454 <xTaskResumeAll>
	while( xQueueReceive( xTimerQueue, &xMessage, tmrNO_DELAY ) != pdFAIL ) /*lint !e603 xMessage does not have to be initialised as it is passed out, not in, and it is not used unless xQueueReceive() returns pdTRUE. */
 8008b74:	f8df 9194 	ldr.w	r9, [pc, #404]	; 8008d0c <prvTimerTask+0x214>
 8008b78:	f04f 0a00 	mov.w	sl, #0
 8008b7c:	e07d      	b.n	8008c7a <prvTimerTask+0x182>
			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
 8008b7e:	4581      	cmp	r9, r0
 8008b80:	d830      	bhi.n	8008be4 <prvTimerTask+0xec>
				( void ) xTaskResumeAll();
 8008b82:	f7ff fc67 	bl	8008454 <xTaskResumeAll>
Timer_t * const pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8008b86:	683b      	ldr	r3, [r7, #0]
 8008b88:	68db      	ldr	r3, [r3, #12]
 8008b8a:	f8d3 b00c 	ldr.w	fp, [r3, #12]
	( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 8008b8e:	f10b 0004 	add.w	r0, fp, #4
 8008b92:	f7fe faee 	bl	8007172 <uxListRemove>
	if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 8008b96:	f89b 3028 	ldrb.w	r3, [fp, #40]	; 0x28
 8008b9a:	0758      	lsls	r0, r3, #29
 8008b9c:	d519      	bpl.n	8008bd2 <prvTimerTask+0xda>
		if( prvInsertTimerInActiveList( pxTimer, ( xNextExpireTime + pxTimer->xTimerPeriodInTicks ), xTimeNow, xNextExpireTime ) != pdFALSE )
 8008b9e:	f8db 1018 	ldr.w	r1, [fp, #24]
 8008ba2:	464b      	mov	r3, r9
 8008ba4:	4652      	mov	r2, sl
 8008ba6:	4449      	add	r1, r9
 8008ba8:	4658      	mov	r0, fp
 8008baa:	f7ff fee9 	bl	8008980 <prvInsertTimerInActiveList>
 8008bae:	b1a0      	cbz	r0, 8008bda <prvTimerTask+0xe2>
			xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
 8008bb0:	9400      	str	r4, [sp, #0]
 8008bb2:	4623      	mov	r3, r4
 8008bb4:	464a      	mov	r2, r9
 8008bb6:	4621      	mov	r1, r4
 8008bb8:	4658      	mov	r0, fp
 8008bba:	f7ff ff31 	bl	8008a20 <xTimerGenericCommand>
			configASSERT( xResult );
 8008bbe:	b960      	cbnz	r0, 8008bda <prvTimerTask+0xe2>
 8008bc0:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008bc4:	f383 8811 	msr	BASEPRI, r3
 8008bc8:	f3bf 8f6f 	isb	sy
 8008bcc:	f3bf 8f4f 	dsb	sy
 8008bd0:	e7fe      	b.n	8008bd0 <prvTimerTask+0xd8>
		pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 8008bd2:	f023 0301 	bic.w	r3, r3, #1
 8008bd6:	f88b 3028 	strb.w	r3, [fp, #40]	; 0x28
	pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 8008bda:	f8db 3020 	ldr.w	r3, [fp, #32]
 8008bde:	4658      	mov	r0, fp
 8008be0:	4798      	blx	r3
 8008be2:	e7c7      	b.n	8008b74 <prvTimerTask+0x7c>
			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
 8008be4:	4622      	mov	r2, r4
 8008be6:	e7aa      	b.n	8008b3e <prvTimerTask+0x46>
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 8008be8:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 8008bec:	69a1      	ldr	r1, [r4, #24]
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 8008bee:	f043 0301 	orr.w	r3, r3, #1
 8008bf2:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 8008bf6:	9b03      	ldr	r3, [sp, #12]
 8008bf8:	465a      	mov	r2, fp
 8008bfa:	4419      	add	r1, r3
 8008bfc:	4620      	mov	r0, r4
 8008bfe:	f7ff febf 	bl	8008980 <prvInsertTimerInActiveList>
 8008c02:	2800      	cmp	r0, #0
 8008c04:	d039      	beq.n	8008c7a <prvTimerTask+0x182>
						pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 8008c06:	6a23      	ldr	r3, [r4, #32]
 8008c08:	4620      	mov	r0, r4
 8008c0a:	4798      	blx	r3
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 8008c0c:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 8008c10:	0759      	lsls	r1, r3, #29
 8008c12:	d532      	bpl.n	8008c7a <prvTimerTask+0x182>
							xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, NULL, tmrNO_DELAY );
 8008c14:	69a2      	ldr	r2, [r4, #24]
 8008c16:	9903      	ldr	r1, [sp, #12]
 8008c18:	f8cd a000 	str.w	sl, [sp]
 8008c1c:	2300      	movs	r3, #0
 8008c1e:	440a      	add	r2, r1
 8008c20:	4620      	mov	r0, r4
 8008c22:	4619      	mov	r1, r3
 8008c24:	f7ff fefc 	bl	8008a20 <xTimerGenericCommand>
							configASSERT( xResult );
 8008c28:	bb38      	cbnz	r0, 8008c7a <prvTimerTask+0x182>
 8008c2a:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008c2e:	f383 8811 	msr	BASEPRI, r3
 8008c32:	f3bf 8f6f 	isb	sy
 8008c36:	f3bf 8f4f 	dsb	sy
 8008c3a:	e7fe      	b.n	8008c3a <prvTimerTask+0x142>
					pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 8008c3c:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
							pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 8008c40:	f023 0301 	bic.w	r3, r3, #1
 8008c44:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
 8008c48:	e017      	b.n	8008c7a <prvTimerTask+0x182>
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 8008c4a:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
					pxTimer->xTimerPeriodInTicks = xMessage.u.xTimerParameters.xMessageValue;
 8008c4e:	9903      	ldr	r1, [sp, #12]
 8008c50:	61a1      	str	r1, [r4, #24]
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 8008c52:	f043 0301 	orr.w	r3, r3, #1
 8008c56:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
 8008c5a:	b941      	cbnz	r1, 8008c6e <prvTimerTask+0x176>
 8008c5c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008c60:	f383 8811 	msr	BASEPRI, r3
 8008c64:	f3bf 8f6f 	isb	sy
 8008c68:	f3bf 8f4f 	dsb	sy
 8008c6c:	e7fe      	b.n	8008c6c <prvTimerTask+0x174>
					( void ) prvInsertTimerInActiveList( pxTimer, ( xTimeNow + pxTimer->xTimerPeriodInTicks ), xTimeNow, xTimeNow );
 8008c6e:	465b      	mov	r3, fp
 8008c70:	465a      	mov	r2, fp
 8008c72:	4459      	add	r1, fp
 8008c74:	4620      	mov	r0, r4
 8008c76:	f7ff fe83 	bl	8008980 <prvInsertTimerInActiveList>
	while( xQueueReceive( xTimerQueue, &xMessage, tmrNO_DELAY ) != pdFAIL ) /*lint !e603 xMessage does not have to be initialised as it is passed out, not in, and it is not used unless xQueueReceive() returns pdTRUE. */
 8008c7a:	2200      	movs	r2, #0
 8008c7c:	a902      	add	r1, sp, #8
 8008c7e:	f8d9 0000 	ldr.w	r0, [r9]
 8008c82:	f7fe ff25 	bl	8007ad0 <xQueueReceive>
 8008c86:	2800      	cmp	r0, #0
 8008c88:	f43f af3d 	beq.w	8008b06 <prvTimerTask+0xe>
			if( xMessage.xMessageID < ( BaseType_t ) 0 )
 8008c8c:	9b02      	ldr	r3, [sp, #8]
 8008c8e:	2b00      	cmp	r3, #0
 8008c90:	da03      	bge.n	8008c9a <prvTimerTask+0x1a2>
				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
 8008c92:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8008c96:	9b03      	ldr	r3, [sp, #12]
 8008c98:	4798      	blx	r3
		if( xMessage.xMessageID >= ( BaseType_t ) 0 )
 8008c9a:	9b02      	ldr	r3, [sp, #8]
 8008c9c:	2b00      	cmp	r3, #0
 8008c9e:	dbec      	blt.n	8008c7a <prvTimerTask+0x182>
			pxTimer = xMessage.u.xTimerParameters.pxTimer;
 8008ca0:	9c04      	ldr	r4, [sp, #16]
			if( listIS_CONTAINED_WITHIN( NULL, &( pxTimer->xTimerListItem ) ) == pdFALSE ) /*lint !e961. The cast is only redundant when NULL is passed into the macro. */
 8008ca2:	6963      	ldr	r3, [r4, #20]
 8008ca4:	b113      	cbz	r3, 8008cac <prvTimerTask+0x1b4>
				( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 8008ca6:	1d20      	adds	r0, r4, #4
 8008ca8:	f7fe fa63 	bl	8007172 <uxListRemove>
	xTimeNow = xTaskGetTickCount();
 8008cac:	f7ff fb3c 	bl	8008328 <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
 8008cb0:	6833      	ldr	r3, [r6, #0]
 8008cb2:	4298      	cmp	r0, r3
	xTimeNow = xTaskGetTickCount();
 8008cb4:	4683      	mov	fp, r0
	if( xTimeNow < xLastTime )
 8008cb6:	d201      	bcs.n	8008cbc <prvTimerTask+0x1c4>
		prvSwitchTimerLists();
 8008cb8:	f7ff fede 	bl	8008a78 <prvSwitchTimerLists>
			switch( xMessage.xMessageID )
 8008cbc:	9b02      	ldr	r3, [sp, #8]
	xLastTime = xTimeNow;
 8008cbe:	f8c6 b000 	str.w	fp, [r6]
			switch( xMessage.xMessageID )
 8008cc2:	2b09      	cmp	r3, #9
 8008cc4:	d8d9      	bhi.n	8008c7a <prvTimerTask+0x182>
 8008cc6:	a201      	add	r2, pc, #4	; (adr r2, 8008ccc <prvTimerTask+0x1d4>)
 8008cc8:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8008ccc:	08008be9 	.word	0x08008be9
 8008cd0:	08008be9 	.word	0x08008be9
 8008cd4:	08008be9 	.word	0x08008be9
 8008cd8:	08008c3d 	.word	0x08008c3d
 8008cdc:	08008c4b 	.word	0x08008c4b
 8008ce0:	08008cf5 	.word	0x08008cf5
 8008ce4:	08008be9 	.word	0x08008be9
 8008ce8:	08008be9 	.word	0x08008be9
 8008cec:	08008c3d 	.word	0x08008c3d
 8008cf0:	08008c4b 	.word	0x08008c4b
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_STATICALLY_ALLOCATED ) == ( uint8_t ) 0 )
 8008cf4:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 8008cf8:	079a      	lsls	r2, r3, #30
 8008cfa:	d4a1      	bmi.n	8008c40 <prvTimerTask+0x148>
							vPortFree( pxTimer );
 8008cfc:	4620      	mov	r0, r4
 8008cfe:	f7fe f9cf 	bl	80070a0 <vPortFree>
 8008d02:	e7ba      	b.n	8008c7a <prvTimerTask+0x182>
 8008d04:	20012200 	.word	0x20012200
 8008d08:	20012204 	.word	0x20012204
 8008d0c:	20012324 	.word	0x20012324
 8008d10:	e000ed04 	.word	0xe000ed04
 8008d14:	200122d0 	.word	0x200122d0

08008d18 <_ZNK8touchgfx17AbstractPartition18getAllocationCountEv>:
 8008d18:	8880      	ldrh	r0, [r0, #4]
 8008d1a:	4770      	bx	lr

08008d1c <_ZN8touchgfx17AbstractPartition5clearEv>:
 8008d1c:	2300      	movs	r3, #0
 8008d1e:	8083      	strh	r3, [r0, #4]
 8008d20:	4770      	bx	lr
	...

08008d24 <_ZN8touchgfx17AbstractPartition7indexOfEPKv>:
 8008d24:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8008d26:	6803      	ldr	r3, [r0, #0]
 8008d28:	4605      	mov	r5, r0
 8008d2a:	460e      	mov	r6, r1
 8008d2c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8008d2e:	2100      	movs	r1, #0
 8008d30:	4798      	blx	r3
 8008d32:	682b      	ldr	r3, [r5, #0]
 8008d34:	4604      	mov	r4, r0
 8008d36:	6a1b      	ldr	r3, [r3, #32]
 8008d38:	4628      	mov	r0, r5
 8008d3a:	4798      	blx	r3
 8008d3c:	88ab      	ldrh	r3, [r5, #4]
 8008d3e:	1b34      	subs	r4, r6, r4
 8008d40:	b2a4      	uxth	r4, r4
 8008d42:	fbb4 f4f0 	udiv	r4, r4, r0
 8008d46:	42a3      	cmp	r3, r4
 8008d48:	d805      	bhi.n	8008d56 <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x32>
 8008d4a:	4b0e      	ldr	r3, [pc, #56]	; (8008d84 <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x60>)
 8008d4c:	4a0e      	ldr	r2, [pc, #56]	; (8008d88 <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x64>)
 8008d4e:	2120      	movs	r1, #32
 8008d50:	480e      	ldr	r0, [pc, #56]	; (8008d8c <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x68>)
 8008d52:	f010 fc13 	bl	801957c <__assert_func>
 8008d56:	682b      	ldr	r3, [r5, #0]
 8008d58:	2100      	movs	r1, #0
 8008d5a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8008d5c:	4628      	mov	r0, r5
 8008d5e:	4798      	blx	r3
 8008d60:	682b      	ldr	r3, [r5, #0]
 8008d62:	4607      	mov	r7, r0
 8008d64:	6a1b      	ldr	r3, [r3, #32]
 8008d66:	4628      	mov	r0, r5
 8008d68:	4798      	blx	r3
 8008d6a:	1bf3      	subs	r3, r6, r7
 8008d6c:	b29b      	uxth	r3, r3
 8008d6e:	fbb3 f2f0 	udiv	r2, r3, r0
 8008d72:	fb02 3010 	mls	r0, r2, r0, r3
 8008d76:	b118      	cbz	r0, 8008d80 <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x5c>
 8008d78:	4b05      	ldr	r3, [pc, #20]	; (8008d90 <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x6c>)
 8008d7a:	4a03      	ldr	r2, [pc, #12]	; (8008d88 <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x64>)
 8008d7c:	2121      	movs	r1, #33	; 0x21
 8008d7e:	e7e7      	b.n	8008d50 <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x2c>
 8008d80:	4620      	mov	r0, r4
 8008d82:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8008d84:	0801b3d6 	.word	0x0801b3d6
 8008d88:	0801b542 	.word	0x0801b542
 8008d8c:	0801b3eb 	.word	0x0801b3eb
 8008d90:	0801b419 	.word	0x0801b419

08008d94 <_ZN8touchgfx17AbstractPartition8allocateEt>:
 8008d94:	b538      	push	{r3, r4, r5, lr}
 8008d96:	6803      	ldr	r3, [r0, #0]
 8008d98:	6a1b      	ldr	r3, [r3, #32]
 8008d9a:	460d      	mov	r5, r1
 8008d9c:	4604      	mov	r4, r0
 8008d9e:	4798      	blx	r3
 8008da0:	4285      	cmp	r5, r0
 8008da2:	d905      	bls.n	8008db0 <_ZN8touchgfx17AbstractPartition8allocateEt+0x1c>
 8008da4:	4b0c      	ldr	r3, [pc, #48]	; (8008dd8 <_ZN8touchgfx17AbstractPartition8allocateEt+0x44>)
 8008da6:	4a0d      	ldr	r2, [pc, #52]	; (8008ddc <_ZN8touchgfx17AbstractPartition8allocateEt+0x48>)
 8008da8:	2132      	movs	r1, #50	; 0x32
 8008daa:	480d      	ldr	r0, [pc, #52]	; (8008de0 <_ZN8touchgfx17AbstractPartition8allocateEt+0x4c>)
 8008dac:	f010 fbe6 	bl	801957c <__assert_func>
 8008db0:	6823      	ldr	r3, [r4, #0]
 8008db2:	88a5      	ldrh	r5, [r4, #4]
 8008db4:	69db      	ldr	r3, [r3, #28]
 8008db6:	4620      	mov	r0, r4
 8008db8:	4798      	blx	r3
 8008dba:	4285      	cmp	r5, r0
 8008dbc:	d303      	bcc.n	8008dc6 <_ZN8touchgfx17AbstractPartition8allocateEt+0x32>
 8008dbe:	4b09      	ldr	r3, [pc, #36]	; (8008de4 <_ZN8touchgfx17AbstractPartition8allocateEt+0x50>)
 8008dc0:	4a06      	ldr	r2, [pc, #24]	; (8008ddc <_ZN8touchgfx17AbstractPartition8allocateEt+0x48>)
 8008dc2:	2133      	movs	r1, #51	; 0x33
 8008dc4:	e7f1      	b.n	8008daa <_ZN8touchgfx17AbstractPartition8allocateEt+0x16>
 8008dc6:	6823      	ldr	r3, [r4, #0]
 8008dc8:	88a1      	ldrh	r1, [r4, #4]
 8008dca:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8008dcc:	4620      	mov	r0, r4
 8008dce:	4798      	blx	r3
 8008dd0:	88a3      	ldrh	r3, [r4, #4]
 8008dd2:	3301      	adds	r3, #1
 8008dd4:	80a3      	strh	r3, [r4, #4]
 8008dd6:	bd38      	pop	{r3, r4, r5, pc}
 8008dd8:	0801b493 	.word	0x0801b493
 8008ddc:	0801b585 	.word	0x0801b585
 8008de0:	0801b3eb 	.word	0x0801b3eb
 8008de4:	0801b4aa 	.word	0x0801b4aa

08008de8 <_ZN8touchgfx17AbstractPartition10allocateAtEtt>:
 8008de8:	b570      	push	{r4, r5, r6, lr}
 8008dea:	6803      	ldr	r3, [r0, #0]
 8008dec:	6a1b      	ldr	r3, [r3, #32]
 8008dee:	4616      	mov	r6, r2
 8008df0:	4604      	mov	r4, r0
 8008df2:	460d      	mov	r5, r1
 8008df4:	4798      	blx	r3
 8008df6:	4286      	cmp	r6, r0
 8008df8:	d905      	bls.n	8008e06 <_ZN8touchgfx17AbstractPartition10allocateAtEtt+0x1e>
 8008dfa:	4b06      	ldr	r3, [pc, #24]	; (8008e14 <_ZN8touchgfx17AbstractPartition10allocateAtEtt+0x2c>)
 8008dfc:	4a06      	ldr	r2, [pc, #24]	; (8008e18 <_ZN8touchgfx17AbstractPartition10allocateAtEtt+0x30>)
 8008dfe:	4807      	ldr	r0, [pc, #28]	; (8008e1c <_ZN8touchgfx17AbstractPartition10allocateAtEtt+0x34>)
 8008e00:	213c      	movs	r1, #60	; 0x3c
 8008e02:	f010 fbbb 	bl	801957c <__assert_func>
 8008e06:	6823      	ldr	r3, [r4, #0]
 8008e08:	4629      	mov	r1, r5
 8008e0a:	4620      	mov	r0, r4
 8008e0c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8008e0e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8008e12:	4718      	bx	r3
 8008e14:	0801b493 	.word	0x0801b493
 8008e18:	0801b4f8 	.word	0x0801b4f8
 8008e1c:	0801b3eb 	.word	0x0801b3eb

08008e20 <_ZN8touchgfx17AbstractPartitionD1Ev>:
 8008e20:	4770      	bx	lr
	...

08008e24 <_ZN8touchgfx17AbstractPartitionC1Ev>:
 8008e24:	4a02      	ldr	r2, [pc, #8]	; (8008e30 <_ZN8touchgfx17AbstractPartitionC1Ev+0xc>)
 8008e26:	6002      	str	r2, [r0, #0]
 8008e28:	2200      	movs	r2, #0
 8008e2a:	8082      	strh	r2, [r0, #4]
 8008e2c:	4770      	bx	lr
 8008e2e:	bf00      	nop
 8008e30:	0801b4cc 	.word	0x0801b4cc

08008e34 <_ZN8touchgfx9Container8containsERKNS_8DrawableE>:
 8008e34:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8008e36:	2000      	movs	r0, #0
 8008e38:	b12b      	cbz	r3, 8008e46 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 8008e3a:	b920      	cbnz	r0, 8008e46 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 8008e3c:	1a5a      	subs	r2, r3, r1
 8008e3e:	4250      	negs	r0, r2
 8008e40:	4150      	adcs	r0, r2
 8008e42:	699b      	ldr	r3, [r3, #24]
 8008e44:	e7f8      	b.n	8008e38 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x4>
 8008e46:	4770      	bx	lr

08008e48 <_ZN8touchgfx9Container9removeAllEv>:
 8008e48:	2200      	movs	r2, #0
 8008e4a:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8008e4c:	b123      	cbz	r3, 8008e58 <_ZN8touchgfx9Container9removeAllEv+0x10>
 8008e4e:	6999      	ldr	r1, [r3, #24]
 8008e50:	6281      	str	r1, [r0, #40]	; 0x28
 8008e52:	e9c3 2205 	strd	r2, r2, [r3, #20]
 8008e56:	e7f8      	b.n	8008e4a <_ZN8touchgfx9Container9removeAllEv+0x2>
 8008e58:	4770      	bx	lr

08008e5a <_ZN8touchgfx9Container6unlinkEv>:
 8008e5a:	2300      	movs	r3, #0
 8008e5c:	6283      	str	r3, [r0, #40]	; 0x28
 8008e5e:	4770      	bx	lr

08008e60 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>:
 8008e60:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8008e64:	461f      	mov	r7, r3
 8008e66:	f890 3024 	ldrb.w	r3, [r0, #36]	; 0x24
 8008e6a:	460d      	mov	r5, r1
 8008e6c:	4616      	mov	r6, r2
 8008e6e:	b103      	cbz	r3, 8008e72 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x12>
 8008e70:	6038      	str	r0, [r7, #0]
 8008e72:	6a84      	ldr	r4, [r0, #40]	; 0x28
 8008e74:	b314      	cbz	r4, 8008ebc <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x5c>
 8008e76:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 8008e7a:	b1eb      	cbz	r3, 8008eb8 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 8008e7c:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8008e80:	428d      	cmp	r5, r1
 8008e82:	db19      	blt.n	8008eb8 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 8008e84:	8923      	ldrh	r3, [r4, #8]
 8008e86:	b289      	uxth	r1, r1
 8008e88:	440b      	add	r3, r1
 8008e8a:	b21b      	sxth	r3, r3
 8008e8c:	429d      	cmp	r5, r3
 8008e8e:	da13      	bge.n	8008eb8 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 8008e90:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 8008e94:	4296      	cmp	r6, r2
 8008e96:	db0f      	blt.n	8008eb8 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 8008e98:	8963      	ldrh	r3, [r4, #10]
 8008e9a:	b292      	uxth	r2, r2
 8008e9c:	4413      	add	r3, r2
 8008e9e:	b21b      	sxth	r3, r3
 8008ea0:	429e      	cmp	r6, r3
 8008ea2:	da09      	bge.n	8008eb8 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 8008ea4:	6823      	ldr	r3, [r4, #0]
 8008ea6:	1ab2      	subs	r2, r6, r2
 8008ea8:	1a69      	subs	r1, r5, r1
 8008eaa:	f8d3 801c 	ldr.w	r8, [r3, #28]
 8008eae:	b212      	sxth	r2, r2
 8008eb0:	463b      	mov	r3, r7
 8008eb2:	b209      	sxth	r1, r1
 8008eb4:	4620      	mov	r0, r4
 8008eb6:	47c0      	blx	r8
 8008eb8:	69a4      	ldr	r4, [r4, #24]
 8008eba:	e7db      	b.n	8008e74 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x14>
 8008ebc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08008ec0 <_ZNK8touchgfx9Container12getSolidRectEv>:
 8008ec0:	2200      	movs	r2, #0
 8008ec2:	8002      	strh	r2, [r0, #0]
 8008ec4:	8042      	strh	r2, [r0, #2]
 8008ec6:	8082      	strh	r2, [r0, #4]
 8008ec8:	80c2      	strh	r2, [r0, #6]
 8008eca:	4770      	bx	lr

08008ecc <_ZN8touchgfx9Container20moveChildrenRelativeEss>:
 8008ecc:	b570      	push	{r4, r5, r6, lr}
 8008ece:	6a84      	ldr	r4, [r0, #40]	; 0x28
 8008ed0:	460d      	mov	r5, r1
 8008ed2:	4616      	mov	r6, r2
 8008ed4:	b13c      	cbz	r4, 8008ee6 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x1a>
 8008ed6:	6823      	ldr	r3, [r4, #0]
 8008ed8:	4620      	mov	r0, r4
 8008eda:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8008edc:	4632      	mov	r2, r6
 8008ede:	4629      	mov	r1, r5
 8008ee0:	4798      	blx	r3
 8008ee2:	69a4      	ldr	r4, [r4, #24]
 8008ee4:	e7f6      	b.n	8008ed4 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x8>
 8008ee6:	bd70      	pop	{r4, r5, r6, pc}

08008ee8 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE>:
 8008ee8:	b538      	push	{r3, r4, r5, lr}
 8008eea:	6a84      	ldr	r4, [r0, #40]	; 0x28
 8008eec:	460d      	mov	r5, r1
 8008eee:	b134      	cbz	r4, 8008efe <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x16>
 8008ef0:	682b      	ldr	r3, [r5, #0]
 8008ef2:	4621      	mov	r1, r4
 8008ef4:	689b      	ldr	r3, [r3, #8]
 8008ef6:	4628      	mov	r0, r5
 8008ef8:	4798      	blx	r3
 8008efa:	69a4      	ldr	r4, [r4, #24]
 8008efc:	e7f7      	b.n	8008eee <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x6>
 8008efe:	bd38      	pop	{r3, r4, r5, pc}

08008f00 <_ZN8touchgfx9ContainerD1Ev>:
 8008f00:	4770      	bx	lr

08008f02 <_ZN8touchgfx9ContainerD0Ev>:
 8008f02:	b510      	push	{r4, lr}
 8008f04:	212c      	movs	r1, #44	; 0x2c
 8008f06:	4604      	mov	r4, r0
 8008f08:	f010 fb0c 	bl	8019524 <_ZdlPvj>
 8008f0c:	4620      	mov	r0, r4
 8008f0e:	bd10      	pop	{r4, pc}

08008f10 <_ZN8touchgfx9Container6removeERNS_8DrawableE>:
 8008f10:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8008f12:	b19b      	cbz	r3, 8008f3c <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 8008f14:	428b      	cmp	r3, r1
 8008f16:	d109      	bne.n	8008f2c <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x1c>
 8008f18:	699a      	ldr	r2, [r3, #24]
 8008f1a:	2100      	movs	r1, #0
 8008f1c:	6159      	str	r1, [r3, #20]
 8008f1e:	6282      	str	r2, [r0, #40]	; 0x28
 8008f20:	b902      	cbnz	r2, 8008f24 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x14>
 8008f22:	4770      	bx	lr
 8008f24:	6199      	str	r1, [r3, #24]
 8008f26:	4770      	bx	lr
 8008f28:	4613      	mov	r3, r2
 8008f2a:	b13a      	cbz	r2, 8008f3c <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 8008f2c:	699a      	ldr	r2, [r3, #24]
 8008f2e:	428a      	cmp	r2, r1
 8008f30:	d1fa      	bne.n	8008f28 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x18>
 8008f32:	698a      	ldr	r2, [r1, #24]
 8008f34:	619a      	str	r2, [r3, #24]
 8008f36:	2300      	movs	r3, #0
 8008f38:	e9c1 3305 	strd	r3, r3, [r1, #20]
 8008f3c:	4770      	bx	lr

08008f3e <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_>:
 8008f3e:	b410      	push	{r4}
 8008f40:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8008f42:	4604      	mov	r4, r0
 8008f44:	b92b      	cbnz	r3, 8008f52 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x14>
 8008f46:	6803      	ldr	r3, [r0, #0]
 8008f48:	f85d 4b04 	ldr.w	r4, [sp], #4
 8008f4c:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8008f4e:	4611      	mov	r1, r2
 8008f50:	4718      	bx	r3
 8008f52:	b941      	cbnz	r1, 8008f66 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x28>
 8008f54:	6193      	str	r3, [r2, #24]
 8008f56:	6282      	str	r2, [r0, #40]	; 0x28
 8008f58:	6154      	str	r4, [r2, #20]
 8008f5a:	f85d 4b04 	ldr.w	r4, [sp], #4
 8008f5e:	4770      	bx	lr
 8008f60:	4603      	mov	r3, r0
 8008f62:	2800      	cmp	r0, #0
 8008f64:	d0f9      	beq.n	8008f5a <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1c>
 8008f66:	4299      	cmp	r1, r3
 8008f68:	6998      	ldr	r0, [r3, #24]
 8008f6a:	d1f9      	bne.n	8008f60 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x22>
 8008f6c:	6190      	str	r0, [r2, #24]
 8008f6e:	618a      	str	r2, [r1, #24]
 8008f70:	e7f2      	b.n	8008f58 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1a>
	...

08008f74 <_ZN8touchgfx9Container3addERNS_8DrawableE>:
 8008f74:	4288      	cmp	r0, r1
 8008f76:	b508      	push	{r3, lr}
 8008f78:	d105      	bne.n	8008f86 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x12>
 8008f7a:	4b11      	ldr	r3, [pc, #68]	; (8008fc0 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x4c>)
 8008f7c:	4a11      	ldr	r2, [pc, #68]	; (8008fc4 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x50>)
 8008f7e:	2123      	movs	r1, #35	; 0x23
 8008f80:	4811      	ldr	r0, [pc, #68]	; (8008fc8 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x54>)
 8008f82:	f010 fafb 	bl	801957c <__assert_func>
 8008f86:	694b      	ldr	r3, [r1, #20]
 8008f88:	b11b      	cbz	r3, 8008f92 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x1e>
 8008f8a:	4b10      	ldr	r3, [pc, #64]	; (8008fcc <_ZN8touchgfx9Container3addERNS_8DrawableE+0x58>)
 8008f8c:	4a0d      	ldr	r2, [pc, #52]	; (8008fc4 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x50>)
 8008f8e:	2124      	movs	r1, #36	; 0x24
 8008f90:	e7f6      	b.n	8008f80 <_ZN8touchgfx9Container3addERNS_8DrawableE+0xc>
 8008f92:	e9c1 0305 	strd	r0, r3, [r1, #20]
 8008f96:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8008f98:	b913      	cbnz	r3, 8008fa0 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x2c>
 8008f9a:	6281      	str	r1, [r0, #40]	; 0x28
 8008f9c:	bd08      	pop	{r3, pc}
 8008f9e:	4613      	mov	r3, r2
 8008fa0:	699a      	ldr	r2, [r3, #24]
 8008fa2:	b12a      	cbz	r2, 8008fb0 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x3c>
 8008fa4:	428b      	cmp	r3, r1
 8008fa6:	d1fa      	bne.n	8008f9e <_ZN8touchgfx9Container3addERNS_8DrawableE+0x2a>
 8008fa8:	4b09      	ldr	r3, [pc, #36]	; (8008fd0 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x5c>)
 8008faa:	4a06      	ldr	r2, [pc, #24]	; (8008fc4 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x50>)
 8008fac:	2135      	movs	r1, #53	; 0x35
 8008fae:	e7e7      	b.n	8008f80 <_ZN8touchgfx9Container3addERNS_8DrawableE+0xc>
 8008fb0:	428b      	cmp	r3, r1
 8008fb2:	d103      	bne.n	8008fbc <_ZN8touchgfx9Container3addERNS_8DrawableE+0x48>
 8008fb4:	4b06      	ldr	r3, [pc, #24]	; (8008fd0 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x5c>)
 8008fb6:	4a03      	ldr	r2, [pc, #12]	; (8008fc4 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x50>)
 8008fb8:	2138      	movs	r1, #56	; 0x38
 8008fba:	e7e1      	b.n	8008f80 <_ZN8touchgfx9Container3addERNS_8DrawableE+0xc>
 8008fbc:	6199      	str	r1, [r3, #24]
 8008fbe:	e7ed      	b.n	8008f9c <_ZN8touchgfx9Container3addERNS_8DrawableE+0x28>
 8008fc0:	0801b5c3 	.word	0x0801b5c3
 8008fc4:	0801b718 	.word	0x0801b718
 8008fc8:	0801b5ef 	.word	0x0801b5ef
 8008fcc:	0801b622 	.word	0x0801b622
 8008fd0:	0801b658 	.word	0x0801b658

08008fd4 <_ZN8touchgfx4RectaNERKS0_>:
 8008fd4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8008fd8:	f9b1 7000 	ldrsh.w	r7, [r1]
 8008fdc:	888c      	ldrh	r4, [r1, #4]
 8008fde:	f9b0 9000 	ldrsh.w	r9, [r0]
 8008fe2:	443c      	add	r4, r7
 8008fe4:	b2a4      	uxth	r4, r4
 8008fe6:	fa0f f884 	sxth.w	r8, r4
 8008fea:	45c1      	cmp	r9, r8
 8008fec:	da2f      	bge.n	800904e <_ZN8touchgfx4RectaNERKS0_+0x7a>
 8008fee:	8882      	ldrh	r2, [r0, #4]
 8008ff0:	444a      	add	r2, r9
 8008ff2:	b292      	uxth	r2, r2
 8008ff4:	fa0f fe82 	sxth.w	lr, r2
 8008ff8:	4577      	cmp	r7, lr
 8008ffa:	da28      	bge.n	800904e <_ZN8touchgfx4RectaNERKS0_+0x7a>
 8008ffc:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
 8009000:	88cb      	ldrh	r3, [r1, #6]
 8009002:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 8009006:	442b      	add	r3, r5
 8009008:	b21b      	sxth	r3, r3
 800900a:	429e      	cmp	r6, r3
 800900c:	da1f      	bge.n	800904e <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800900e:	88c3      	ldrh	r3, [r0, #6]
 8009010:	4433      	add	r3, r6
 8009012:	b29b      	uxth	r3, r3
 8009014:	fa0f fc83 	sxth.w	ip, r3
 8009018:	4565      	cmp	r5, ip
 800901a:	da18      	bge.n	800904e <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800901c:	454f      	cmp	r7, r9
 800901e:	bfb8      	it	lt
 8009020:	464f      	movlt	r7, r9
 8009022:	42b5      	cmp	r5, r6
 8009024:	bfb8      	it	lt
 8009026:	4635      	movlt	r5, r6
 8009028:	45f0      	cmp	r8, lr
 800902a:	bfd8      	it	le
 800902c:	4622      	movle	r2, r4
 800902e:	1bd2      	subs	r2, r2, r7
 8009030:	8082      	strh	r2, [r0, #4]
 8009032:	884a      	ldrh	r2, [r1, #2]
 8009034:	88c9      	ldrh	r1, [r1, #6]
 8009036:	8007      	strh	r7, [r0, #0]
 8009038:	440a      	add	r2, r1
 800903a:	b292      	uxth	r2, r2
 800903c:	b211      	sxth	r1, r2
 800903e:	458c      	cmp	ip, r1
 8009040:	bfa8      	it	ge
 8009042:	4613      	movge	r3, r2
 8009044:	1b5b      	subs	r3, r3, r5
 8009046:	80c3      	strh	r3, [r0, #6]
 8009048:	8045      	strh	r5, [r0, #2]
 800904a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800904e:	2300      	movs	r3, #0
 8009050:	8003      	strh	r3, [r0, #0]
 8009052:	8043      	strh	r3, [r0, #2]
 8009054:	8083      	strh	r3, [r0, #4]
 8009056:	80c3      	strh	r3, [r0, #6]
 8009058:	e7f7      	b.n	800904a <_ZN8touchgfx4RectaNERKS0_+0x76>

0800905a <_ZNK8touchgfx4Rect7isEmptyEv>:
 800905a:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800905e:	2b00      	cmp	r3, #0
 8009060:	dd06      	ble.n	8009070 <_ZNK8touchgfx4Rect7isEmptyEv+0x16>
 8009062:	f9b0 0006 	ldrsh.w	r0, [r0, #6]
 8009066:	2800      	cmp	r0, #0
 8009068:	bfcc      	ite	gt
 800906a:	2000      	movgt	r0, #0
 800906c:	2001      	movle	r0, #1
 800906e:	4770      	bx	lr
 8009070:	2001      	movs	r0, #1
 8009072:	4770      	bx	lr

08009074 <_ZNK8touchgfx9Container16getContainedAreaEv>:
 8009074:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8009078:	2300      	movs	r3, #0
 800907a:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 800907c:	8003      	strh	r3, [r0, #0]
 800907e:	4604      	mov	r4, r0
 8009080:	8043      	strh	r3, [r0, #2]
 8009082:	8083      	strh	r3, [r0, #4]
 8009084:	80c3      	strh	r3, [r0, #6]
 8009086:	2d00      	cmp	r5, #0
 8009088:	d040      	beq.n	800910c <_ZNK8touchgfx9Container16getContainedAreaEv+0x98>
 800908a:	1d28      	adds	r0, r5, #4
 800908c:	f7ff ffe5 	bl	800905a <_ZNK8touchgfx4Rect7isEmptyEv>
 8009090:	b988      	cbnz	r0, 80090b6 <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 8009092:	4620      	mov	r0, r4
 8009094:	f7ff ffe1 	bl	800905a <_ZNK8touchgfx4Rect7isEmptyEv>
 8009098:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 800909c:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 80090a0:	f9b5 e008 	ldrsh.w	lr, [r5, #8]
 80090a4:	f9b5 c00a 	ldrsh.w	ip, [r5, #10]
 80090a8:	b138      	cbz	r0, 80090ba <_ZNK8touchgfx9Container16getContainedAreaEv+0x46>
 80090aa:	8022      	strh	r2, [r4, #0]
 80090ac:	8063      	strh	r3, [r4, #2]
 80090ae:	f8a4 e004 	strh.w	lr, [r4, #4]
 80090b2:	f8a4 c006 	strh.w	ip, [r4, #6]
 80090b6:	69ad      	ldr	r5, [r5, #24]
 80090b8:	e7e5      	b.n	8009086 <_ZNK8touchgfx9Container16getContainedAreaEv+0x12>
 80090ba:	f9b4 0000 	ldrsh.w	r0, [r4]
 80090be:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 80090c2:	f8b4 8004 	ldrh.w	r8, [r4, #4]
 80090c6:	4290      	cmp	r0, r2
 80090c8:	4607      	mov	r7, r0
 80090ca:	bfa8      	it	ge
 80090cc:	4617      	movge	r7, r2
 80090ce:	4472      	add	r2, lr
 80090d0:	f8b4 e006 	ldrh.w	lr, [r4, #6]
 80090d4:	8027      	strh	r7, [r4, #0]
 80090d6:	4299      	cmp	r1, r3
 80090d8:	460e      	mov	r6, r1
 80090da:	4440      	add	r0, r8
 80090dc:	bfa8      	it	ge
 80090de:	461e      	movge	r6, r3
 80090e0:	4471      	add	r1, lr
 80090e2:	4463      	add	r3, ip
 80090e4:	b200      	sxth	r0, r0
 80090e6:	b212      	sxth	r2, r2
 80090e8:	b209      	sxth	r1, r1
 80090ea:	b21b      	sxth	r3, r3
 80090ec:	4290      	cmp	r0, r2
 80090ee:	bfac      	ite	ge
 80090f0:	ebc7 0200 	rsbge	r2, r7, r0
 80090f4:	ebc7 0202 	rsblt	r2, r7, r2
 80090f8:	4299      	cmp	r1, r3
 80090fa:	bfac      	ite	ge
 80090fc:	ebc6 0301 	rsbge	r3, r6, r1
 8009100:	ebc6 0303 	rsblt	r3, r6, r3
 8009104:	8066      	strh	r6, [r4, #2]
 8009106:	80a2      	strh	r2, [r4, #4]
 8009108:	80e3      	strh	r3, [r4, #6]
 800910a:	e7d4      	b.n	80090b6 <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 800910c:	4620      	mov	r0, r4
 800910e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08009112 <_ZNK8touchgfx9Container4drawERKNS_4RectE>:
 8009112:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8009116:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 800911a:	b383      	cbz	r3, 800917e <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 800911c:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800911e:	b374      	cbz	r4, 800917e <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 8009120:	f9b1 5000 	ldrsh.w	r5, [r1]
 8009124:	f9b1 6002 	ldrsh.w	r6, [r1, #2]
 8009128:	f9b1 7004 	ldrsh.w	r7, [r1, #4]
 800912c:	f9b1 8006 	ldrsh.w	r8, [r1, #6]
 8009130:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 8009134:	b303      	cbz	r3, 8009178 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 8009136:	4668      	mov	r0, sp
 8009138:	1d21      	adds	r1, r4, #4
 800913a:	f8ad 5000 	strh.w	r5, [sp]
 800913e:	f8ad 6002 	strh.w	r6, [sp, #2]
 8009142:	f8ad 7004 	strh.w	r7, [sp, #4]
 8009146:	f8ad 8006 	strh.w	r8, [sp, #6]
 800914a:	f7ff ff43 	bl	8008fd4 <_ZN8touchgfx4RectaNERKS0_>
 800914e:	4668      	mov	r0, sp
 8009150:	f7ff ff83 	bl	800905a <_ZNK8touchgfx4Rect7isEmptyEv>
 8009154:	b980      	cbnz	r0, 8009178 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 8009156:	f8bd 3000 	ldrh.w	r3, [sp]
 800915a:	88a2      	ldrh	r2, [r4, #4]
 800915c:	1a9b      	subs	r3, r3, r2
 800915e:	f8ad 3000 	strh.w	r3, [sp]
 8009162:	88e2      	ldrh	r2, [r4, #6]
 8009164:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8009168:	1a9b      	subs	r3, r3, r2
 800916a:	f8ad 3002 	strh.w	r3, [sp, #2]
 800916e:	6823      	ldr	r3, [r4, #0]
 8009170:	4669      	mov	r1, sp
 8009172:	689b      	ldr	r3, [r3, #8]
 8009174:	4620      	mov	r0, r4
 8009176:	4798      	blx	r3
 8009178:	69a4      	ldr	r4, [r4, #24]
 800917a:	2c00      	cmp	r4, #0
 800917c:	d1d8      	bne.n	8009130 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x1e>
 800917e:	b002      	add	sp, #8
 8009180:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08009184 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>:
 8009184:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8009186:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 800918a:	460d      	mov	r5, r1
 800918c:	4616      	mov	r6, r2
 800918e:	b323      	cbz	r3, 80091da <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 8009190:	6a84      	ldr	r4, [r0, #40]	; 0x28
 8009192:	b314      	cbz	r4, 80091da <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 8009194:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 8009198:	b1eb      	cbz	r3, 80091d6 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 800919a:	6828      	ldr	r0, [r5, #0]
 800919c:	6869      	ldr	r1, [r5, #4]
 800919e:	466b      	mov	r3, sp
 80091a0:	c303      	stmia	r3!, {r0, r1}
 80091a2:	4668      	mov	r0, sp
 80091a4:	1d21      	adds	r1, r4, #4
 80091a6:	f7ff ff15 	bl	8008fd4 <_ZN8touchgfx4RectaNERKS0_>
 80091aa:	4668      	mov	r0, sp
 80091ac:	f7ff ff55 	bl	800905a <_ZNK8touchgfx4Rect7isEmptyEv>
 80091b0:	b988      	cbnz	r0, 80091d6 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 80091b2:	f8bd 3000 	ldrh.w	r3, [sp]
 80091b6:	88a2      	ldrh	r2, [r4, #4]
 80091b8:	1a9b      	subs	r3, r3, r2
 80091ba:	f8ad 3000 	strh.w	r3, [sp]
 80091be:	88e2      	ldrh	r2, [r4, #6]
 80091c0:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 80091c4:	1a9b      	subs	r3, r3, r2
 80091c6:	f8ad 3002 	strh.w	r3, [sp, #2]
 80091ca:	6823      	ldr	r3, [r4, #0]
 80091cc:	4632      	mov	r2, r6
 80091ce:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 80091d0:	4669      	mov	r1, sp
 80091d2:	4620      	mov	r0, r4
 80091d4:	4798      	blx	r3
 80091d6:	69a4      	ldr	r4, [r4, #24]
 80091d8:	e7db      	b.n	8009192 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0xe>
 80091da:	b002      	add	sp, #8
 80091dc:	bd70      	pop	{r4, r5, r6, pc}

080091de <_ZNK8touchgfx6Slider15getIndicatorMinEv>:
 80091de:	f8b0 00ee 	ldrh.w	r0, [r0, #238]	; 0xee
 80091e2:	4770      	bx	lr

080091e4 <_ZNK8touchgfx6Slider15getIndicatorMaxEv>:
 80091e4:	f8b0 00ee 	ldrh.w	r0, [r0, #238]	; 0xee
 80091e8:	4770      	bx	lr

080091ea <_ZNK8touchgfx6Slider11getMinValueEv>:
 80091ea:	8e80      	ldrh	r0, [r0, #52]	; 0x34
 80091ec:	4770      	bx	lr

080091ee <_ZNK8touchgfx6Slider11getMaxValueEv>:
 80091ee:	8f00      	ldrh	r0, [r0, #56]	; 0x38
 80091f0:	4770      	bx	lr

080091f2 <_ZN8touchgfx6Slider8setValueEi>:
 80091f2:	b570      	push	{r4, r5, r6, lr}
 80091f4:	6803      	ldr	r3, [r0, #0]
 80091f6:	e9d3 532a 	ldrd	r5, r3, [r3, #168]	; 0xa8
 80091fa:	4604      	mov	r4, r0
 80091fc:	4798      	blx	r3
 80091fe:	462b      	mov	r3, r5
 8009200:	4601      	mov	r1, r0
 8009202:	4620      	mov	r0, r4
 8009204:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8009208:	4718      	bx	r3

0800920a <_ZNK8touchgfx6Slider15valueToPositionEi>:
 800920a:	b538      	push	{r3, r4, r5, lr}
 800920c:	e9d0 340d 	ldrd	r3, r4, [r0, #52]	; 0x34
 8009210:	428c      	cmp	r4, r1
 8009212:	bfa8      	it	ge
 8009214:	460c      	movge	r4, r1
 8009216:	429c      	cmp	r4, r3
 8009218:	bfac      	ite	ge
 800921a:	ebc3 0404 	rsbge	r4, r3, r4
 800921e:	ebc3 0403 	rsblt	r4, r3, r3
 8009222:	6803      	ldr	r3, [r0, #0]
 8009224:	4605      	mov	r5, r0
 8009226:	f8d3 30b8 	ldr.w	r3, [r3, #184]	; 0xb8
 800922a:	4798      	blx	r3
 800922c:	682b      	ldr	r3, [r5, #0]
 800922e:	fb00 4404 	mla	r4, r0, r4, r4
 8009232:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 8009236:	4628      	mov	r0, r5
 8009238:	4798      	blx	r3
 800923a:	f895 202c 	ldrb.w	r2, [r5, #44]	; 0x2c
 800923e:	f9b5 30ec 	ldrsh.w	r3, [r5, #236]	; 0xec
 8009242:	fb94 f0f0 	sdiv	r0, r4, r0
 8009246:	2a01      	cmp	r2, #1
 8009248:	bf08      	it	eq
 800924a:	f9b5 20ee 	ldrsheq.w	r2, [r5, #238]	; 0xee
 800924e:	4418      	add	r0, r3
 8009250:	bf04      	itt	eq
 8009252:	1a10      	subeq	r0, r2, r0
 8009254:	18c0      	addeq	r0, r0, r3
 8009256:	b200      	sxth	r0, r0
 8009258:	bd38      	pop	{r3, r4, r5, pc}

0800925a <_ZNK8touchgfx6Slider15positionToValueEs>:
 800925a:	b570      	push	{r4, r5, r6, lr}
 800925c:	f9b0 30ec 	ldrsh.w	r3, [r0, #236]	; 0xec
 8009260:	428b      	cmp	r3, r1
 8009262:	4605      	mov	r5, r0
 8009264:	460c      	mov	r4, r1
 8009266:	d109      	bne.n	800927c <_ZNK8touchgfx6Slider15positionToValueEs+0x22>
 8009268:	6b40      	ldr	r0, [r0, #52]	; 0x34
 800926a:	f895 302c 	ldrb.w	r3, [r5, #44]	; 0x2c
 800926e:	2b01      	cmp	r3, #1
 8009270:	bf01      	itttt	eq
 8009272:	6bab      	ldreq	r3, [r5, #56]	; 0x38
 8009274:	1a18      	subeq	r0, r3, r0
 8009276:	6b6b      	ldreq	r3, [r5, #52]	; 0x34
 8009278:	18c0      	addeq	r0, r0, r3
 800927a:	bd70      	pop	{r4, r5, r6, pc}
 800927c:	f9b0 30ee 	ldrsh.w	r3, [r0, #238]	; 0xee
 8009280:	428b      	cmp	r3, r1
 8009282:	d101      	bne.n	8009288 <_ZNK8touchgfx6Slider15positionToValueEs+0x2e>
 8009284:	6b80      	ldr	r0, [r0, #56]	; 0x38
 8009286:	e7f0      	b.n	800926a <_ZNK8touchgfx6Slider15positionToValueEs+0x10>
 8009288:	6803      	ldr	r3, [r0, #0]
 800928a:	f8d3 30b8 	ldr.w	r3, [r3, #184]	; 0xb8
 800928e:	4798      	blx	r3
 8009290:	682b      	ldr	r3, [r5, #0]
 8009292:	f9b5 10ec 	ldrsh.w	r1, [r5, #236]	; 0xec
 8009296:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 800929a:	4606      	mov	r6, r0
 800929c:	4628      	mov	r0, r5
 800929e:	1a64      	subs	r4, r4, r1
 80092a0:	4798      	blx	r3
 80092a2:	682b      	ldr	r3, [r5, #0]
 80092a4:	2102      	movs	r1, #2
 80092a6:	f8d3 30b8 	ldr.w	r3, [r3, #184]	; 0xb8
 80092aa:	fb96 f6f1 	sdiv	r6, r6, r1
 80092ae:	fb00 6404 	mla	r4, r0, r4, r6
 80092b2:	4628      	mov	r0, r5
 80092b4:	4798      	blx	r3
 80092b6:	6b6b      	ldr	r3, [r5, #52]	; 0x34
 80092b8:	fb94 f0f0 	sdiv	r0, r4, r0
 80092bc:	4418      	add	r0, r3
 80092be:	e7d4      	b.n	800926a <_ZNK8touchgfx6Slider15positionToValueEs+0x10>

080092c0 <_ZNK8touchgfx6Slider18getIndicatorRadiusEv>:
 80092c0:	f890 202c 	ldrb.w	r2, [r0, #44]	; 0x2c
 80092c4:	2302      	movs	r3, #2
 80092c6:	b92a      	cbnz	r2, 80092d4 <_ZNK8touchgfx6Slider18getIndicatorRadiusEv+0x14>
 80092c8:	f9b0 009c 	ldrsh.w	r0, [r0, #156]	; 0x9c
 80092cc:	fb90 f0f3 	sdiv	r0, r0, r3
 80092d0:	b280      	uxth	r0, r0
 80092d2:	4770      	bx	lr
 80092d4:	f9b0 009e 	ldrsh.w	r0, [r0, #158]	; 0x9e
 80092d8:	e7f8      	b.n	80092cc <_ZNK8touchgfx6Slider18getIndicatorRadiusEv+0xc>

080092da <_ZN8touchgfx6Slider13setValueRangeEii>:
 80092da:	6b03      	ldr	r3, [r0, #48]	; 0x30
 80092dc:	428b      	cmp	r3, r1
 80092de:	b410      	push	{r4}
 80092e0:	db09      	blt.n	80092f6 <_ZN8touchgfx6Slider13setValueRangeEii+0x1c>
 80092e2:	4293      	cmp	r3, r2
 80092e4:	bfa8      	it	ge
 80092e6:	4613      	movge	r3, r2
 80092e8:	6804      	ldr	r4, [r0, #0]
 80092ea:	f8d4 4094 	ldr.w	r4, [r4, #148]	; 0x94
 80092ee:	46a4      	mov	ip, r4
 80092f0:	f85d 4b04 	ldr.w	r4, [sp], #4
 80092f4:	4760      	bx	ip
 80092f6:	460b      	mov	r3, r1
 80092f8:	e7f6      	b.n	80092e8 <_ZN8touchgfx6Slider13setValueRangeEii+0xe>

080092fa <_ZNK8touchgfx6Slider29getIndicatorPositionRangeSizeEv>:
 80092fa:	f9b0 20ee 	ldrsh.w	r2, [r0, #238]	; 0xee
 80092fe:	f9b0 00ec 	ldrsh.w	r0, [r0, #236]	; 0xec
 8009302:	1a10      	subs	r0, r2, r0
 8009304:	4770      	bx	lr

08009306 <_ZNK8touchgfx6Slider17getValueRangeSizeEv>:
 8009306:	e9d0 020d 	ldrd	r0, r2, [r0, #52]	; 0x34
 800930a:	1a10      	subs	r0, r2, r0
 800930c:	4770      	bx	lr

0800930e <_ZN8touchgfx6SliderD1Ev>:
 800930e:	4770      	bx	lr

08009310 <_ZN8touchgfx6Slider23updateIndicatorPositionEs>:
 8009310:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8009314:	f9b0 60ec 	ldrsh.w	r6, [r0, #236]	; 0xec
 8009318:	428e      	cmp	r6, r1
 800931a:	4604      	mov	r4, r0
 800931c:	bfb8      	it	lt
 800931e:	460e      	movlt	r6, r1
 8009320:	f9b0 10ee 	ldrsh.w	r1, [r0, #238]	; 0xee
 8009324:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
 8009328:	428e      	cmp	r6, r1
 800932a:	bfa8      	it	ge
 800932c:	460e      	movge	r6, r1
 800932e:	3094      	adds	r0, #148	; 0x94
 8009330:	f104 07c0 	add.w	r7, r4, #192	; 0xc0
 8009334:	fa1f f886 	uxth.w	r8, r6
 8009338:	2b00      	cmp	r3, #0
 800933a:	d132      	bne.n	80093a2 <_ZN8touchgfx6Slider23updateIndicatorPositionEs+0x92>
 800933c:	f9b4 209a 	ldrsh.w	r2, [r4, #154]	; 0x9a
 8009340:	4631      	mov	r1, r6
 8009342:	f7f9 fee7 	bl	8003114 <_ZN8touchgfx8Drawable6moveToEss>
 8009346:	4638      	mov	r0, r7
 8009348:	f003 f943 	bl	800c5d2 <_ZNK8touchgfx8Drawable10invalidateEv>
 800934c:	6823      	ldr	r3, [r4, #0]
 800934e:	f8b4 20c4 	ldrh.w	r2, [r4, #196]	; 0xc4
 8009352:	f8d3 30b4 	ldr.w	r3, [r3, #180]	; 0xb4
 8009356:	4620      	mov	r0, r4
 8009358:	eba8 0802 	sub.w	r8, r8, r2
 800935c:	4798      	blx	r3
 800935e:	fa1f f888 	uxth.w	r8, r8
 8009362:	4480      	add	r8, r0
 8009364:	f8a4 80c8 	strh.w	r8, [r4, #200]	; 0xc8
 8009368:	4638      	mov	r0, r7
 800936a:	f003 f932 	bl	800c5d2 <_ZNK8touchgfx8Drawable10invalidateEv>
 800936e:	6823      	ldr	r3, [r4, #0]
 8009370:	4631      	mov	r1, r6
 8009372:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 8009376:	4620      	mov	r0, r4
 8009378:	4798      	blx	r3
 800937a:	6320      	str	r0, [r4, #48]	; 0x30
 800937c:	f8d4 00f8 	ldr.w	r0, [r4, #248]	; 0xf8
 8009380:	2800      	cmp	r0, #0
 8009382:	d03c      	beq.n	80093fe <_ZN8touchgfx6Slider23updateIndicatorPositionEs+0xee>
 8009384:	6803      	ldr	r3, [r0, #0]
 8009386:	68db      	ldr	r3, [r3, #12]
 8009388:	4798      	blx	r3
 800938a:	2800      	cmp	r0, #0
 800938c:	d037      	beq.n	80093fe <_ZN8touchgfx6Slider23updateIndicatorPositionEs+0xee>
 800938e:	f8d4 00f8 	ldr.w	r0, [r4, #248]	; 0xf8
 8009392:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8009394:	6803      	ldr	r3, [r0, #0]
 8009396:	689b      	ldr	r3, [r3, #8]
 8009398:	4621      	mov	r1, r4
 800939a:	b003      	add	sp, #12
 800939c:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80093a0:	4718      	bx	r3
 80093a2:	4632      	mov	r2, r6
 80093a4:	f9b4 1098 	ldrsh.w	r1, [r4, #152]	; 0x98
 80093a8:	f7f9 feb4 	bl	8003114 <_ZN8touchgfx8Drawable6moveToEss>
 80093ac:	4638      	mov	r0, r7
 80093ae:	f003 f910 	bl	800c5d2 <_ZNK8touchgfx8Drawable10invalidateEv>
 80093b2:	f8b4 0042 	ldrh.w	r0, [r4, #66]	; 0x42
 80093b6:	f8b4 5046 	ldrh.w	r5, [r4, #70]	; 0x46
 80093ba:	6823      	ldr	r3, [r4, #0]
 80093bc:	4405      	add	r5, r0
 80093be:	f8d3 30b4 	ldr.w	r3, [r3, #180]	; 0xb4
 80093c2:	4620      	mov	r0, r4
 80093c4:	4798      	blx	r3
 80093c6:	b2ad      	uxth	r5, r5
 80093c8:	6823      	ldr	r3, [r4, #0]
 80093ca:	f9b4 90c4 	ldrsh.w	r9, [r4, #196]	; 0xc4
 80093ce:	f8d3 30b4 	ldr.w	r3, [r3, #180]	; 0xb4
 80093d2:	eba5 0508 	sub.w	r5, r5, r8
 80093d6:	1a2d      	subs	r5, r5, r0
 80093d8:	4620      	mov	r0, r4
 80093da:	4798      	blx	r3
 80093dc:	b2ad      	uxth	r5, r5
 80093de:	b22a      	sxth	r2, r5
 80093e0:	4440      	add	r0, r8
 80093e2:	9200      	str	r2, [sp, #0]
 80093e4:	f9b4 30c8 	ldrsh.w	r3, [r4, #200]	; 0xc8
 80093e8:	b202      	sxth	r2, r0
 80093ea:	4649      	mov	r1, r9
 80093ec:	4638      	mov	r0, r7
 80093ee:	f7f9 fe63 	bl	80030b8 <_ZN8touchgfx8Drawable11setPositionEssss>
 80093f2:	f8b4 0072 	ldrh.w	r0, [r4, #114]	; 0x72
 80093f6:	1a2d      	subs	r5, r5, r0
 80093f8:	f8a4 506e 	strh.w	r5, [r4, #110]	; 0x6e
 80093fc:	e7b4      	b.n	8009368 <_ZN8touchgfx6Slider23updateIndicatorPositionEs+0x58>
 80093fe:	b003      	add	sp, #12
 8009400:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

08009404 <_ZN8touchgfx6SliderD0Ev>:
 8009404:	b510      	push	{r4, lr}
 8009406:	21fc      	movs	r1, #252	; 0xfc
 8009408:	4604      	mov	r4, r0
 800940a:	f010 f88b 	bl	8019524 <_ZdlPvj>
 800940e:	4620      	mov	r0, r4
 8009410:	bd10      	pop	{r4, pc}
	...

08009414 <_ZN8touchgfx6Slider21setupHorizontalSliderEttttt>:
 8009414:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8009418:	f8bd 8030 	ldrh.w	r8, [sp, #48]	; 0x30
 800941c:	f8bd 7034 	ldrh.w	r7, [sp, #52]	; 0x34
 8009420:	45b8      	cmp	r8, r7
 8009422:	4604      	mov	r4, r0
 8009424:	4689      	mov	r9, r1
 8009426:	4616      	mov	r6, r2
 8009428:	461d      	mov	r5, r3
 800942a:	d305      	bcc.n	8009438 <_ZN8touchgfx6Slider21setupHorizontalSliderEttttt+0x24>
 800942c:	4b28      	ldr	r3, [pc, #160]	; (80094d0 <_ZN8touchgfx6Slider21setupHorizontalSliderEttttt+0xbc>)
 800942e:	4a29      	ldr	r2, [pc, #164]	; (80094d4 <_ZN8touchgfx6Slider21setupHorizontalSliderEttttt+0xc0>)
 8009430:	4829      	ldr	r0, [pc, #164]	; (80094d8 <_ZN8touchgfx6Slider21setupHorizontalSliderEttttt+0xc4>)
 8009432:	2143      	movs	r1, #67	; 0x43
 8009434:	f010 f8a2 	bl	801957c <__assert_func>
 8009438:	f04f 0a00 	mov.w	sl, #0
 800943c:	b213      	sxth	r3, r2
 800943e:	fa0f fb81 	sxth.w	fp, r1
 8009442:	f880 a02c 	strb.w	sl, [r0, #44]	; 0x2c
 8009446:	461a      	mov	r2, r3
 8009448:	4659      	mov	r1, fp
 800944a:	303c      	adds	r0, #60	; 0x3c
 800944c:	9301      	str	r3, [sp, #4]
 800944e:	f7f9 fe4b 	bl	80030e8 <_ZN8touchgfx8Drawable5setXYEss>
 8009452:	9b01      	ldr	r3, [sp, #4]
 8009454:	4659      	mov	r1, fp
 8009456:	461a      	mov	r2, r3
 8009458:	f104 00c0 	add.w	r0, r4, #192	; 0xc0
 800945c:	f7f9 fe44 	bl	80030e8 <_ZN8touchgfx8Drawable5setXYEss>
 8009460:	4652      	mov	r2, sl
 8009462:	4651      	mov	r1, sl
 8009464:	f104 0068 	add.w	r0, r4, #104	; 0x68
 8009468:	f7f9 fe3e 	bl	80030e8 <_ZN8touchgfx8Drawable5setXYEss>
 800946c:	f8b4 1044 	ldrh.w	r1, [r4, #68]	; 0x44
 8009470:	f8a4 509a 	strh.w	r5, [r4, #154]	; 0x9a
 8009474:	4449      	add	r1, r9
 8009476:	b28b      	uxth	r3, r1
 8009478:	f8b4 109c 	ldrh.w	r1, [r4, #156]	; 0x9c
 800947c:	f8a4 80ec 	strh.w	r8, [r4, #236]	; 0xec
 8009480:	4439      	add	r1, r7
 8009482:	b289      	uxth	r1, r1
 8009484:	428b      	cmp	r3, r1
 8009486:	bf88      	it	hi
 8009488:	b219      	sxthhi	r1, r3
 800948a:	f8b4 3046 	ldrh.w	r3, [r4, #70]	; 0x46
 800948e:	f8a4 70ee 	strh.w	r7, [r4, #238]	; 0xee
 8009492:	441e      	add	r6, r3
 8009494:	f8b4 309e 	ldrh.w	r3, [r4, #158]	; 0x9e
 8009498:	441d      	add	r5, r3
 800949a:	6823      	ldr	r3, [r4, #0]
 800949c:	b2ad      	uxth	r5, r5
 800949e:	b2b6      	uxth	r6, r6
 80094a0:	bf98      	it	ls
 80094a2:	b209      	sxthls	r1, r1
 80094a4:	4620      	mov	r0, r4
 80094a6:	42ae      	cmp	r6, r5
 80094a8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80094aa:	bf8c      	ite	hi
 80094ac:	b235      	sxthhi	r5, r6
 80094ae:	b22d      	sxthls	r5, r5
 80094b0:	4798      	blx	r3
 80094b2:	6823      	ldr	r3, [r4, #0]
 80094b4:	4629      	mov	r1, r5
 80094b6:	4620      	mov	r0, r4
 80094b8:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80094ba:	4798      	blx	r3
 80094bc:	6823      	ldr	r3, [r4, #0]
 80094be:	6b21      	ldr	r1, [r4, #48]	; 0x30
 80094c0:	f8d3 30a4 	ldr.w	r3, [r3, #164]	; 0xa4
 80094c4:	4620      	mov	r0, r4
 80094c6:	b003      	add	sp, #12
 80094c8:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80094cc:	4718      	bx	r3
 80094ce:	bf00      	nop
 80094d0:	0801b8fc 	.word	0x0801b8fc
 80094d4:	0801bb76 	.word	0x0801bb76
 80094d8:	0801b970 	.word	0x0801b970

080094dc <_ZN8touchgfx6Slider19setupVerticalSliderEttttt>:
 80094dc:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80094e0:	f8bd 7028 	ldrh.w	r7, [sp, #40]	; 0x28
 80094e4:	f8bd 602c 	ldrh.w	r6, [sp, #44]	; 0x2c
 80094e8:	42b7      	cmp	r7, r6
 80094ea:	4604      	mov	r4, r0
 80094ec:	4689      	mov	r9, r1
 80094ee:	4690      	mov	r8, r2
 80094f0:	461d      	mov	r5, r3
 80094f2:	d305      	bcc.n	8009500 <_ZN8touchgfx6Slider19setupVerticalSliderEttttt+0x24>
 80094f4:	4b25      	ldr	r3, [pc, #148]	; (800958c <_ZN8touchgfx6Slider19setupVerticalSliderEttttt+0xb0>)
 80094f6:	4a26      	ldr	r2, [pc, #152]	; (8009590 <_ZN8touchgfx6Slider19setupVerticalSliderEttttt+0xb4>)
 80094f8:	4826      	ldr	r0, [pc, #152]	; (8009594 <_ZN8touchgfx6Slider19setupVerticalSliderEttttt+0xb8>)
 80094fa:	215f      	movs	r1, #95	; 0x5f
 80094fc:	f010 f83e 	bl	801957c <__assert_func>
 8009500:	2301      	movs	r3, #1
 8009502:	fa0f fa81 	sxth.w	sl, r1
 8009506:	fa0f fb82 	sxth.w	fp, r2
 800950a:	f880 302c 	strb.w	r3, [r0, #44]	; 0x2c
 800950e:	465a      	mov	r2, fp
 8009510:	4651      	mov	r1, sl
 8009512:	303c      	adds	r0, #60	; 0x3c
 8009514:	f7f9 fde8 	bl	80030e8 <_ZN8touchgfx8Drawable5setXYEss>
 8009518:	465a      	mov	r2, fp
 800951a:	4651      	mov	r1, sl
 800951c:	f104 00c0 	add.w	r0, r4, #192	; 0xc0
 8009520:	f7f9 fde2 	bl	80030e8 <_ZN8touchgfx8Drawable5setXYEss>
 8009524:	f8b4 1044 	ldrh.w	r1, [r4, #68]	; 0x44
 8009528:	f8a4 5098 	strh.w	r5, [r4, #152]	; 0x98
 800952c:	4489      	add	r9, r1
 800952e:	f8b4 109c 	ldrh.w	r1, [r4, #156]	; 0x9c
 8009532:	6823      	ldr	r3, [r4, #0]
 8009534:	f8a4 70ec 	strh.w	r7, [r4, #236]	; 0xec
 8009538:	4429      	add	r1, r5
 800953a:	f8b4 5046 	ldrh.w	r5, [r4, #70]	; 0x46
 800953e:	f8a4 60ee 	strh.w	r6, [r4, #238]	; 0xee
 8009542:	44a8      	add	r8, r5
 8009544:	f8b4 509e 	ldrh.w	r5, [r4, #158]	; 0x9e
 8009548:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800954a:	b289      	uxth	r1, r1
 800954c:	fa1f f989 	uxth.w	r9, r9
 8009550:	4435      	add	r5, r6
 8009552:	4589      	cmp	r9, r1
 8009554:	b2ad      	uxth	r5, r5
 8009556:	fa1f f888 	uxth.w	r8, r8
 800955a:	bf8c      	ite	hi
 800955c:	fa0f f189 	sxthhi.w	r1, r9
 8009560:	b209      	sxthls	r1, r1
 8009562:	4620      	mov	r0, r4
 8009564:	45a8      	cmp	r8, r5
 8009566:	bf8c      	ite	hi
 8009568:	fa0f f588 	sxthhi.w	r5, r8
 800956c:	b22d      	sxthls	r5, r5
 800956e:	4798      	blx	r3
 8009570:	6823      	ldr	r3, [r4, #0]
 8009572:	4629      	mov	r1, r5
 8009574:	4620      	mov	r0, r4
 8009576:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8009578:	4798      	blx	r3
 800957a:	6823      	ldr	r3, [r4, #0]
 800957c:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800957e:	f8d3 30a4 	ldr.w	r3, [r3, #164]	; 0xa4
 8009582:	4620      	mov	r0, r4
 8009584:	b001      	add	sp, #4
 8009586:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800958a:	4718      	bx	r3
 800958c:	0801b88a 	.word	0x0801b88a
 8009590:	0801bb11 	.word	0x0801bb11
 8009594:	0801b970 	.word	0x0801b970

08009598 <_ZN8touchgfx6Slider13setValueRangeEiii>:
 8009598:	4291      	cmp	r1, r2
 800959a:	b510      	push	{r4, lr}
 800959c:	db06      	blt.n	80095ac <_ZN8touchgfx6Slider13setValueRangeEiii+0x14>
 800959e:	4b08      	ldr	r3, [pc, #32]	; (80095c0 <_ZN8touchgfx6Slider13setValueRangeEiii+0x28>)
 80095a0:	4a08      	ldr	r2, [pc, #32]	; (80095c4 <_ZN8touchgfx6Slider13setValueRangeEiii+0x2c>)
 80095a2:	4809      	ldr	r0, [pc, #36]	; (80095c8 <_ZN8touchgfx6Slider13setValueRangeEiii+0x30>)
 80095a4:	f240 1107 	movw	r1, #263	; 0x107
 80095a8:	f00f ffe8 	bl	801957c <__assert_func>
 80095ac:	e9c0 120d 	strd	r1, r2, [r0, #52]	; 0x34
 80095b0:	6802      	ldr	r2, [r0, #0]
 80095b2:	4619      	mov	r1, r3
 80095b4:	f8d2 20a4 	ldr.w	r2, [r2, #164]	; 0xa4
 80095b8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80095bc:	4710      	bx	r2
 80095be:	bf00      	nop
 80095c0:	0801b832 	.word	0x0801b832
 80095c4:	0801bad5 	.word	0x0801bad5
 80095c8:	0801b970 	.word	0x0801b970

080095cc <_ZN8touchgfx6Slider16handleClickEventERKNS_10ClickEventE>:
 80095cc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80095d0:	790b      	ldrb	r3, [r1, #4]
 80095d2:	4604      	mov	r4, r0
 80095d4:	460d      	mov	r5, r1
 80095d6:	b323      	cbz	r3, 8009622 <_ZN8touchgfx6Slider16handleClickEventERKNS_10ClickEventE+0x56>
 80095d8:	2b01      	cmp	r3, #1
 80095da:	d135      	bne.n	8009648 <_ZN8touchgfx6Slider16handleClickEventERKNS_10ClickEventE+0x7c>
 80095dc:	6823      	ldr	r3, [r4, #0]
 80095de:	f894 202c 	ldrb.w	r2, [r4, #44]	; 0x2c
 80095e2:	f8d3 70a8 	ldr.w	r7, [r3, #168]	; 0xa8
 80095e6:	f8d3 30b4 	ldr.w	r3, [r3, #180]	; 0xb4
 80095ea:	2a00      	cmp	r2, #0
 80095ec:	d12a      	bne.n	8009644 <_ZN8touchgfx6Slider16handleClickEventERKNS_10ClickEventE+0x78>
 80095ee:	88ee      	ldrh	r6, [r5, #6]
 80095f0:	4620      	mov	r0, r4
 80095f2:	4798      	blx	r3
 80095f4:	1a31      	subs	r1, r6, r0
 80095f6:	b209      	sxth	r1, r1
 80095f8:	4620      	mov	r0, r4
 80095fa:	47b8      	blx	r7
 80095fc:	792b      	ldrb	r3, [r5, #4]
 80095fe:	2b01      	cmp	r3, #1
 8009600:	d122      	bne.n	8009648 <_ZN8touchgfx6Slider16handleClickEventERKNS_10ClickEventE+0x7c>
 8009602:	f8d4 00f4 	ldr.w	r0, [r4, #244]	; 0xf4
 8009606:	b1f8      	cbz	r0, 8009648 <_ZN8touchgfx6Slider16handleClickEventERKNS_10ClickEventE+0x7c>
 8009608:	6803      	ldr	r3, [r0, #0]
 800960a:	68db      	ldr	r3, [r3, #12]
 800960c:	4798      	blx	r3
 800960e:	b1d8      	cbz	r0, 8009648 <_ZN8touchgfx6Slider16handleClickEventERKNS_10ClickEventE+0x7c>
 8009610:	f8d4 00f4 	ldr.w	r0, [r4, #244]	; 0xf4
 8009614:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8009616:	6803      	ldr	r3, [r0, #0]
 8009618:	4621      	mov	r1, r4
 800961a:	689b      	ldr	r3, [r3, #8]
 800961c:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8009620:	4718      	bx	r3
 8009622:	f8d0 00f0 	ldr.w	r0, [r0, #240]	; 0xf0
 8009626:	2800      	cmp	r0, #0
 8009628:	d0d8      	beq.n	80095dc <_ZN8touchgfx6Slider16handleClickEventERKNS_10ClickEventE+0x10>
 800962a:	6803      	ldr	r3, [r0, #0]
 800962c:	68db      	ldr	r3, [r3, #12]
 800962e:	4798      	blx	r3
 8009630:	2800      	cmp	r0, #0
 8009632:	d0d3      	beq.n	80095dc <_ZN8touchgfx6Slider16handleClickEventERKNS_10ClickEventE+0x10>
 8009634:	f8d4 00f0 	ldr.w	r0, [r4, #240]	; 0xf0
 8009638:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800963a:	6803      	ldr	r3, [r0, #0]
 800963c:	4621      	mov	r1, r4
 800963e:	689b      	ldr	r3, [r3, #8]
 8009640:	4798      	blx	r3
 8009642:	e7cb      	b.n	80095dc <_ZN8touchgfx6Slider16handleClickEventERKNS_10ClickEventE+0x10>
 8009644:	892e      	ldrh	r6, [r5, #8]
 8009646:	e7d3      	b.n	80095f0 <_ZN8touchgfx6Slider16handleClickEventERKNS_10ClickEventE+0x24>
 8009648:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800964c <_ZN8touchgfx6Slider15handleDragEventERKNS_9DragEventE>:
 800964c:	b570      	push	{r4, r5, r6, lr}
 800964e:	6803      	ldr	r3, [r0, #0]
 8009650:	f890 202c 	ldrb.w	r2, [r0, #44]	; 0x2c
 8009654:	f8d3 60a8 	ldr.w	r6, [r3, #168]	; 0xa8
 8009658:	f8d3 30b4 	ldr.w	r3, [r3, #180]	; 0xb4
 800965c:	4604      	mov	r4, r0
 800965e:	b942      	cbnz	r2, 8009672 <_ZN8touchgfx6Slider15handleDragEventERKNS_9DragEventE+0x26>
 8009660:	894d      	ldrh	r5, [r1, #10]
 8009662:	4798      	blx	r3
 8009664:	1a29      	subs	r1, r5, r0
 8009666:	4633      	mov	r3, r6
 8009668:	4620      	mov	r0, r4
 800966a:	b209      	sxth	r1, r1
 800966c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8009670:	4718      	bx	r3
 8009672:	898d      	ldrh	r5, [r1, #12]
 8009674:	e7f5      	b.n	8009662 <_ZN8touchgfx6Slider15handleDragEventERKNS_9DragEventE+0x16>
	...

08009678 <_ZN8touchgfx9ContainerC1Ev>:
 8009678:	2101      	movs	r1, #1
 800967a:	2200      	movs	r2, #0
 800967c:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
 8009680:	4908      	ldr	r1, [pc, #32]	; (80096a4 <_ZN8touchgfx9ContainerC1Ev+0x2c>)
 8009682:	8082      	strh	r2, [r0, #4]
 8009684:	80c2      	strh	r2, [r0, #6]
 8009686:	8102      	strh	r2, [r0, #8]
 8009688:	8142      	strh	r2, [r0, #10]
 800968a:	8182      	strh	r2, [r0, #12]
 800968c:	81c2      	strh	r2, [r0, #14]
 800968e:	8202      	strh	r2, [r0, #16]
 8009690:	8242      	strh	r2, [r0, #18]
 8009692:	e9c0 2205 	strd	r2, r2, [r0, #20]
 8009696:	61c2      	str	r2, [r0, #28]
 8009698:	f880 2024 	strb.w	r2, [r0, #36]	; 0x24
 800969c:	6001      	str	r1, [r0, #0]
 800969e:	6282      	str	r2, [r0, #40]	; 0x28
 80096a0:	4770      	bx	lr
 80096a2:	bf00      	nop
 80096a4:	0801b694 	.word	0x0801b694

080096a8 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>:
 80096a8:	b510      	push	{r4, lr}
 80096aa:	2300      	movs	r3, #0
 80096ac:	8083      	strh	r3, [r0, #4]
 80096ae:	80c3      	strh	r3, [r0, #6]
 80096b0:	8103      	strh	r3, [r0, #8]
 80096b2:	8143      	strh	r3, [r0, #10]
 80096b4:	8183      	strh	r3, [r0, #12]
 80096b6:	81c3      	strh	r3, [r0, #14]
 80096b8:	8203      	strh	r3, [r0, #16]
 80096ba:	8243      	strh	r3, [r0, #18]
 80096bc:	e9c0 3305 	strd	r3, r3, [r0, #20]
 80096c0:	61c3      	str	r3, [r0, #28]
 80096c2:	f880 3024 	strb.w	r3, [r0, #36]	; 0x24
 80096c6:	2301      	movs	r3, #1
 80096c8:	f880 3025 	strb.w	r3, [r0, #37]	; 0x25
 80096cc:	4b05      	ldr	r3, [pc, #20]	; (80096e4 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE+0x3c>)
 80096ce:	6003      	str	r3, [r0, #0]
 80096d0:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80096d4:	4604      	mov	r4, r0
 80096d6:	84c3      	strh	r3, [r0, #38]	; 0x26
 80096d8:	f880 3028 	strb.w	r3, [r0, #40]	; 0x28
 80096dc:	f001 fa51 	bl	800ab82 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80096e0:	4620      	mov	r0, r4
 80096e2:	bd10      	pop	{r4, pc}
 80096e4:	0801c504 	.word	0x0801c504

080096e8 <_ZN8touchgfx6SliderC1Ev>:
 80096e8:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80096ec:	ae02      	add	r6, sp, #8
 80096ee:	f64f 77ff 	movw	r7, #65535	; 0xffff
 80096f2:	4604      	mov	r4, r0
 80096f4:	f7ff ffc0 	bl	8009678 <_ZN8touchgfx9ContainerC1Ev>
 80096f8:	f826 7d04 	strh.w	r7, [r6, #-4]!
 80096fc:	4b23      	ldr	r3, [pc, #140]	; (800978c <_ZN8touchgfx6SliderC1Ev+0xa4>)
 80096fe:	6023      	str	r3, [r4, #0]
 8009700:	2500      	movs	r5, #0
 8009702:	f04f 0b01 	mov.w	fp, #1
 8009706:	f104 093c 	add.w	r9, r4, #60	; 0x3c
 800970a:	4631      	mov	r1, r6
 800970c:	f104 0a68 	add.w	sl, r4, #104	; 0x68
 8009710:	f884 502c 	strb.w	r5, [r4, #44]	; 0x2c
 8009714:	e9c4 550c 	strd	r5, r5, [r4, #48]	; 0x30
 8009718:	f8c4 b038 	str.w	fp, [r4, #56]	; 0x38
 800971c:	4648      	mov	r0, r9
 800971e:	f7ff ffc3 	bl	80096a8 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 8009722:	f104 0894 	add.w	r8, r4, #148	; 0x94
 8009726:	4631      	mov	r1, r6
 8009728:	4650      	mov	r0, sl
 800972a:	f8ad 7004 	strh.w	r7, [sp, #4]
 800972e:	f7ff ffbb 	bl	80096a8 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 8009732:	4631      	mov	r1, r6
 8009734:	4640      	mov	r0, r8
 8009736:	f104 06c0 	add.w	r6, r4, #192	; 0xc0
 800973a:	f8ad 7004 	strh.w	r7, [sp, #4]
 800973e:	f7ff ffb3 	bl	80096a8 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 8009742:	4630      	mov	r0, r6
 8009744:	f7ff ff98 	bl	8009678 <_ZN8touchgfx9ContainerC1Ev>
 8009748:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 800974c:	e9c4 353b 	strd	r3, r5, [r4, #236]	; 0xec
 8009750:	4651      	mov	r1, sl
 8009752:	4630      	mov	r0, r6
 8009754:	e9c4 553d 	strd	r5, r5, [r4, #244]	; 0xf4
 8009758:	f884 b024 	strb.w	fp, [r4, #36]	; 0x24
 800975c:	f7ff fc0a 	bl	8008f74 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8009760:	4649      	mov	r1, r9
 8009762:	4620      	mov	r0, r4
 8009764:	f7ff fc06 	bl	8008f74 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8009768:	4631      	mov	r1, r6
 800976a:	4620      	mov	r0, r4
 800976c:	f7ff fc02 	bl	8008f74 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8009770:	4641      	mov	r1, r8
 8009772:	4620      	mov	r0, r4
 8009774:	f7ff fbfe 	bl	8008f74 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8009778:	4620      	mov	r0, r4
 800977a:	2264      	movs	r2, #100	; 0x64
 800977c:	4629      	mov	r1, r5
 800977e:	f7ff fdac 	bl	80092da <_ZN8touchgfx6Slider13setValueRangeEii>
 8009782:	4620      	mov	r0, r4
 8009784:	b003      	add	sp, #12
 8009786:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800978a:	bf00      	nop
 800978c:	0801b9a8 	.word	0x0801b9a8

08009790 <_ZN8touchgfx6Slider10setBitmapsERKNS_6BitmapES3_S3_>:
 8009790:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8009794:	4604      	mov	r4, r0
 8009796:	4608      	mov	r0, r1
 8009798:	4615      	mov	r5, r2
 800979a:	460e      	mov	r6, r1
 800979c:	461f      	mov	r7, r3
 800979e:	f004 fa1f 	bl	800dbe0 <_ZNK8touchgfx6Bitmap8getWidthEv>
 80097a2:	4680      	mov	r8, r0
 80097a4:	4628      	mov	r0, r5
 80097a6:	f004 fa1b 	bl	800dbe0 <_ZNK8touchgfx6Bitmap8getWidthEv>
 80097aa:	4580      	cmp	r8, r0
 80097ac:	d005      	beq.n	80097ba <_ZN8touchgfx6Slider10setBitmapsERKNS_6BitmapES3_S3_+0x2a>
 80097ae:	4b14      	ldr	r3, [pc, #80]	; (8009800 <_ZN8touchgfx6Slider10setBitmapsERKNS_6BitmapES3_S3_+0x70>)
 80097b0:	4a14      	ldr	r2, [pc, #80]	; (8009804 <_ZN8touchgfx6Slider10setBitmapsERKNS_6BitmapES3_S3_+0x74>)
 80097b2:	4815      	ldr	r0, [pc, #84]	; (8009808 <_ZN8touchgfx6Slider10setBitmapsERKNS_6BitmapES3_S3_+0x78>)
 80097b4:	2133      	movs	r1, #51	; 0x33
 80097b6:	f00f fee1 	bl	801957c <__assert_func>
 80097ba:	4630      	mov	r0, r6
 80097bc:	f004 fa4a 	bl	800dc54 <_ZNK8touchgfx6Bitmap9getHeightEv>
 80097c0:	4680      	mov	r8, r0
 80097c2:	4628      	mov	r0, r5
 80097c4:	f004 fa46 	bl	800dc54 <_ZNK8touchgfx6Bitmap9getHeightEv>
 80097c8:	4580      	cmp	r8, r0
 80097ca:	d1f0      	bne.n	80097ae <_ZN8touchgfx6Slider10setBitmapsERKNS_6BitmapES3_S3_+0x1e>
 80097cc:	4631      	mov	r1, r6
 80097ce:	f104 003c 	add.w	r0, r4, #60	; 0x3c
 80097d2:	f001 f9d6 	bl	800ab82 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80097d6:	4629      	mov	r1, r5
 80097d8:	f104 0068 	add.w	r0, r4, #104	; 0x68
 80097dc:	f001 f9d1 	bl	800ab82 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80097e0:	4639      	mov	r1, r7
 80097e2:	f104 0094 	add.w	r0, r4, #148	; 0x94
 80097e6:	f001 f9cc 	bl	800ab82 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80097ea:	f8b4 3070 	ldrh.w	r3, [r4, #112]	; 0x70
 80097ee:	f8a4 30c8 	strh.w	r3, [r4, #200]	; 0xc8
 80097f2:	f8b4 3072 	ldrh.w	r3, [r4, #114]	; 0x72
 80097f6:	f8a4 30ca 	strh.w	r3, [r4, #202]	; 0xca
 80097fa:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80097fe:	bf00      	nop
 8009800:	0801b753 	.word	0x0801b753
 8009804:	0801ba68 	.word	0x0801ba68
 8009808:	0801b970 	.word	0x0801b970

0800980c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEt>:
 800980c:	b513      	push	{r0, r1, r4, lr}
 800980e:	6803      	ldr	r3, [r0, #0]
 8009810:	f8d3 4090 	ldr.w	r4, [r3, #144]	; 0x90
 8009814:	2300      	movs	r3, #0
 8009816:	e9cd 3300 	strd	r3, r3, [sp]
 800981a:	466b      	mov	r3, sp
 800981c:	47a0      	blx	r4
 800981e:	b002      	add	sp, #8
 8009820:	bd10      	pop	{r4, pc}

08009822 <_ZN8touchgfx3HAL16flushFrameBufferEv>:
 8009822:	2301      	movs	r3, #1
 8009824:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
 8009828:	f880 3069 	strb.w	r3, [r0, #105]	; 0x69
 800982c:	4770      	bx	lr

0800982e <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>:
 800982e:	2301      	movs	r3, #1
 8009830:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
 8009834:	f880 3069 	strb.w	r3, [r0, #105]	; 0x69
 8009838:	4770      	bx	lr

0800983a <_ZN8touchgfx3HAL17allowDMATransfersEv>:
 800983a:	6843      	ldr	r3, [r0, #4]
 800983c:	2201      	movs	r2, #1
 800983e:	725a      	strb	r2, [r3, #9]
 8009840:	6840      	ldr	r0, [r0, #4]
 8009842:	6803      	ldr	r3, [r0, #0]
 8009844:	691b      	ldr	r3, [r3, #16]
 8009846:	4718      	bx	r3

08009848 <_ZN8touchgfx3HAL8flushDMAEv>:
 8009848:	6840      	ldr	r0, [r0, #4]
 800984a:	6803      	ldr	r3, [r0, #0]
 800984c:	689b      	ldr	r3, [r3, #8]
 800984e:	4718      	bx	r3

08009850 <_ZN8touchgfx3HAL10beginFrameEv>:
 8009850:	4b04      	ldr	r3, [pc, #16]	; (8009864 <_ZN8touchgfx3HAL10beginFrameEv+0x14>)
 8009852:	781b      	ldrb	r3, [r3, #0]
 8009854:	b123      	cbz	r3, 8009860 <_ZN8touchgfx3HAL10beginFrameEv+0x10>
 8009856:	f890 006a 	ldrb.w	r0, [r0, #106]	; 0x6a
 800985a:	f080 0001 	eor.w	r0, r0, #1
 800985e:	4770      	bx	lr
 8009860:	2001      	movs	r0, #1
 8009862:	4770      	bx	lr
 8009864:	20012336 	.word	0x20012336

08009868 <_ZN8touchgfx3HAL8endFrameEv>:
 8009868:	b510      	push	{r4, lr}
 800986a:	4604      	mov	r4, r0
 800986c:	6840      	ldr	r0, [r0, #4]
 800986e:	6803      	ldr	r3, [r0, #0]
 8009870:	689b      	ldr	r3, [r3, #8]
 8009872:	4798      	blx	r3
 8009874:	f894 3069 	ldrb.w	r3, [r4, #105]	; 0x69
 8009878:	b113      	cbz	r3, 8009880 <_ZN8touchgfx3HAL8endFrameEv+0x18>
 800987a:	2301      	movs	r3, #1
 800987c:	f884 306a 	strb.w	r3, [r4, #106]	; 0x6a
 8009880:	bd10      	pop	{r4, pc}
	...

08009884 <_ZN8touchgfx3HAL4tickEv>:
 8009884:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8009886:	6803      	ldr	r3, [r0, #0]
 8009888:	4d5c      	ldr	r5, [pc, #368]	; (80099fc <_ZN8touchgfx3HAL4tickEv+0x178>)
 800988a:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
 800988e:	4604      	mov	r4, r0
 8009890:	4798      	blx	r3
 8009892:	2800      	cmp	r0, #0
 8009894:	f000 8097 	beq.w	80099c6 <_ZN8touchgfx3HAL4tickEv+0x142>
 8009898:	2001      	movs	r0, #1
 800989a:	f7f7 fb43 	bl	8000f24 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 800989e:	f894 3066 	ldrb.w	r3, [r4, #102]	; 0x66
 80098a2:	f884 3067 	strb.w	r3, [r4, #103]	; 0x67
 80098a6:	f894 3075 	ldrb.w	r3, [r4, #117]	; 0x75
 80098aa:	2600      	movs	r6, #0
 80098ac:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 80098b0:	f884 604b 	strb.w	r6, [r4, #75]	; 0x4b
 80098b4:	b133      	cbz	r3, 80098c4 <_ZN8touchgfx3HAL4tickEv+0x40>
 80098b6:	6823      	ldr	r3, [r4, #0]
 80098b8:	4620      	mov	r0, r4
 80098ba:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
 80098be:	4798      	blx	r3
 80098c0:	f884 6075 	strb.w	r6, [r4, #117]	; 0x75
 80098c4:	f894 304a 	ldrb.w	r3, [r4, #74]	; 0x4a
 80098c8:	6862      	ldr	r2, [r4, #4]
 80098ca:	f083 0301 	eor.w	r3, r3, #1
 80098ce:	7253      	strb	r3, [r2, #9]
 80098d0:	2601      	movs	r6, #1
 80098d2:	702e      	strb	r6, [r5, #0]
 80098d4:	f002 f9ae 	bl	800bc34 <_ZN8touchgfx11Application11getInstanceEv>
 80098d8:	6803      	ldr	r3, [r0, #0]
 80098da:	4631      	mov	r1, r6
 80098dc:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80098de:	4798      	blx	r3
 80098e0:	f894 3067 	ldrb.w	r3, [r4, #103]	; 0x67
 80098e4:	b90b      	cbnz	r3, 80098ea <_ZN8touchgfx3HAL4tickEv+0x66>
 80098e6:	f884 6067 	strb.w	r6, [r4, #103]	; 0x67
 80098ea:	f002 f9a3 	bl	800bc34 <_ZN8touchgfx11Application11getInstanceEv>
 80098ee:	6803      	ldr	r3, [r0, #0]
 80098f0:	695b      	ldr	r3, [r3, #20]
 80098f2:	4798      	blx	r3
 80098f4:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80098f6:	6803      	ldr	r3, [r0, #0]
 80098f8:	691b      	ldr	r3, [r3, #16]
 80098fa:	4798      	blx	r3
 80098fc:	f894 3067 	ldrb.w	r3, [r4, #103]	; 0x67
 8009900:	f894 2068 	ldrb.w	r2, [r4, #104]	; 0x68
 8009904:	3b01      	subs	r3, #1
 8009906:	b2db      	uxtb	r3, r3
 8009908:	f884 3067 	strb.w	r3, [r4, #103]	; 0x67
 800990c:	b10a      	cbz	r2, 8009912 <_ZN8touchgfx3HAL4tickEv+0x8e>
 800990e:	2b00      	cmp	r3, #0
 8009910:	d1eb      	bne.n	80098ea <_ZN8touchgfx3HAL4tickEv+0x66>
 8009912:	4a3b      	ldr	r2, [pc, #236]	; (8009a00 <_ZN8touchgfx3HAL4tickEv+0x17c>)
 8009914:	f994 1064 	ldrsb.w	r1, [r4, #100]	; 0x64
 8009918:	7813      	ldrb	r3, [r2, #0]
 800991a:	3301      	adds	r3, #1
 800991c:	b25b      	sxtb	r3, r3
 800991e:	4299      	cmp	r1, r3
 8009920:	7013      	strb	r3, [r2, #0]
 8009922:	dc10      	bgt.n	8009946 <_ZN8touchgfx3HAL4tickEv+0xc2>
 8009924:	68e0      	ldr	r0, [r4, #12]
 8009926:	2300      	movs	r3, #0
 8009928:	7013      	strb	r3, [r2, #0]
 800992a:	6803      	ldr	r3, [r0, #0]
 800992c:	aa03      	add	r2, sp, #12
 800992e:	68db      	ldr	r3, [r3, #12]
 8009930:	a902      	add	r1, sp, #8
 8009932:	4798      	blx	r3
 8009934:	6823      	ldr	r3, [r4, #0]
 8009936:	2800      	cmp	r0, #0
 8009938:	d051      	beq.n	80099de <_ZN8touchgfx3HAL4tickEv+0x15a>
 800993a:	f8d3 30a4 	ldr.w	r3, [r3, #164]	; 0xa4
 800993e:	e9dd 1202 	ldrd	r1, r2, [sp, #8]
 8009942:	4620      	mov	r0, r4
 8009944:	4798      	blx	r3
 8009946:	6960      	ldr	r0, [r4, #20]
 8009948:	2300      	movs	r3, #0
 800994a:	f88d 3007 	strb.w	r3, [sp, #7]
 800994e:	b158      	cbz	r0, 8009968 <_ZN8touchgfx3HAL4tickEv+0xe4>
 8009950:	6803      	ldr	r3, [r0, #0]
 8009952:	f10d 0107 	add.w	r1, sp, #7
 8009956:	68db      	ldr	r3, [r3, #12]
 8009958:	4798      	blx	r3
 800995a:	b128      	cbz	r0, 8009968 <_ZN8touchgfx3HAL4tickEv+0xe4>
 800995c:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800995e:	f89d 1007 	ldrb.w	r1, [sp, #7]
 8009962:	6803      	ldr	r3, [r0, #0]
 8009964:	68db      	ldr	r3, [r3, #12]
 8009966:	4798      	blx	r3
 8009968:	f104 001c 	add.w	r0, r4, #28
 800996c:	f00f fcf8 	bl	8019360 <_ZN8touchgfx8Gestures4tickEv>
 8009970:	f894 306c 	ldrb.w	r3, [r4, #108]	; 0x6c
 8009974:	b30b      	cbz	r3, 80099ba <_ZN8touchgfx3HAL4tickEv+0x136>
 8009976:	6920      	ldr	r0, [r4, #16]
 8009978:	6803      	ldr	r3, [r0, #0]
 800997a:	691b      	ldr	r3, [r3, #16]
 800997c:	4798      	blx	r3
 800997e:	6f23      	ldr	r3, [r4, #112]	; 0x70
 8009980:	4606      	mov	r6, r0
 8009982:	b903      	cbnz	r3, 8009986 <_ZN8touchgfx3HAL4tickEv+0x102>
 8009984:	6720      	str	r0, [r4, #112]	; 0x70
 8009986:	6f23      	ldr	r3, [r4, #112]	; 0x70
 8009988:	4a1e      	ldr	r2, [pc, #120]	; (8009a04 <_ZN8touchgfx3HAL4tickEv+0x180>)
 800998a:	1af3      	subs	r3, r6, r3
 800998c:	4293      	cmp	r3, r2
 800998e:	d914      	bls.n	80099ba <_ZN8touchgfx3HAL4tickEv+0x136>
 8009990:	6920      	ldr	r0, [r4, #16]
 8009992:	6803      	ldr	r3, [r0, #0]
 8009994:	699b      	ldr	r3, [r3, #24]
 8009996:	4798      	blx	r3
 8009998:	6f23      	ldr	r3, [r4, #112]	; 0x70
 800999a:	2264      	movs	r2, #100	; 0x64
 800999c:	1af3      	subs	r3, r6, r3
 800999e:	fbb3 f3f2 	udiv	r3, r3, r2
 80099a2:	fbb0 f0f3 	udiv	r0, r0, r3
 80099a6:	2800      	cmp	r0, #0
 80099a8:	dc1e      	bgt.n	80099e8 <_ZN8touchgfx3HAL4tickEv+0x164>
 80099aa:	f884 2065 	strb.w	r2, [r4, #101]	; 0x65
 80099ae:	6920      	ldr	r0, [r4, #16]
 80099b0:	6803      	ldr	r3, [r0, #0]
 80099b2:	2100      	movs	r1, #0
 80099b4:	69db      	ldr	r3, [r3, #28]
 80099b6:	4798      	blx	r3
 80099b8:	6726      	str	r6, [r4, #112]	; 0x70
 80099ba:	f002 f93b 	bl	800bc34 <_ZN8touchgfx11Application11getInstanceEv>
 80099be:	6803      	ldr	r3, [r0, #0]
 80099c0:	2100      	movs	r1, #0
 80099c2:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80099c4:	4798      	blx	r3
 80099c6:	6823      	ldr	r3, [r4, #0]
 80099c8:	4620      	mov	r0, r4
 80099ca:	f8d3 309c 	ldr.w	r3, [r3, #156]	; 0x9c
 80099ce:	4798      	blx	r3
 80099d0:	2001      	movs	r0, #1
 80099d2:	f7f7 faa8 	bl	8000f26 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
 80099d6:	2300      	movs	r3, #0
 80099d8:	702b      	strb	r3, [r5, #0]
 80099da:	b004      	add	sp, #16
 80099dc:	bd70      	pop	{r4, r5, r6, pc}
 80099de:	f8d3 30a8 	ldr.w	r3, [r3, #168]	; 0xa8
 80099e2:	4620      	mov	r0, r4
 80099e4:	4798      	blx	r3
 80099e6:	e7ae      	b.n	8009946 <_ZN8touchgfx3HAL4tickEv+0xc2>
 80099e8:	2863      	cmp	r0, #99	; 0x63
 80099ea:	bfcb      	itete	gt
 80099ec:	2300      	movgt	r3, #0
 80099ee:	f1c0 0064 	rsble	r0, r0, #100	; 0x64
 80099f2:	f884 3065 	strbgt.w	r3, [r4, #101]	; 0x65
 80099f6:	f884 0065 	strble.w	r0, [r4, #101]	; 0x65
 80099fa:	e7d8      	b.n	80099ae <_ZN8touchgfx3HAL4tickEv+0x12a>
 80099fc:	2001233c 	.word	0x2001233c
 8009a00:	2001233d 	.word	0x2001233d
 8009a04:	05f5e100 	.word	0x05f5e100

08009a08 <_ZN8touchgfx3HAL17unlockFrameBufferEv>:
 8009a08:	f7f7 bbb6 	b.w	8001178 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

08009a0c <_ZN8touchgfx3HAL21registerEventListenerERNS_15UIEventListenerE>:
 8009a0c:	6581      	str	r1, [r0, #88]	; 0x58
 8009a0e:	301c      	adds	r0, #28
 8009a10:	f00f bca4 	b.w	801935c <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>

08009a14 <_ZN8touchgfx3HAL5touchEll>:
 8009a14:	b530      	push	{r4, r5, lr}
 8009a16:	b087      	sub	sp, #28
 8009a18:	4604      	mov	r4, r0
 8009a1a:	a804      	add	r0, sp, #16
 8009a1c:	e9cd 1204 	strd	r1, r2, [sp, #16]
 8009a20:	f001 feb8 	bl	800b794 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>
 8009a24:	9b04      	ldr	r3, [sp, #16]
 8009a26:	f8ad 300c 	strh.w	r3, [sp, #12]
 8009a2a:	a906      	add	r1, sp, #24
 8009a2c:	9b05      	ldr	r3, [sp, #20]
 8009a2e:	f821 3d0a 	strh.w	r3, [r1, #-10]!
 8009a32:	a803      	add	r0, sp, #12
 8009a34:	f001 fefc 	bl	800b830 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>
 8009a38:	f894 106b 	ldrb.w	r1, [r4, #107]	; 0x6b
 8009a3c:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 8009a40:	f8bd 300e 	ldrh.w	r3, [sp, #14]
 8009a44:	f104 001c 	add.w	r0, r4, #28
 8009a48:	b189      	cbz	r1, 8009a6e <_ZN8touchgfx3HAL5touchEll+0x5a>
 8009a4a:	f8b4 5060 	ldrh.w	r5, [r4, #96]	; 0x60
 8009a4e:	9300      	str	r3, [sp, #0]
 8009a50:	f8b4 105c 	ldrh.w	r1, [r4, #92]	; 0x5c
 8009a54:	4613      	mov	r3, r2
 8009a56:	462a      	mov	r2, r5
 8009a58:	f00f fc90 	bl	801937c <_ZN8touchgfx8Gestures17registerDragEventEtttt>
 8009a5c:	b128      	cbz	r0, 8009a6a <_ZN8touchgfx3HAL5touchEll+0x56>
 8009a5e:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 8009a62:	65e3      	str	r3, [r4, #92]	; 0x5c
 8009a64:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 8009a68:	6623      	str	r3, [r4, #96]	; 0x60
 8009a6a:	b007      	add	sp, #28
 8009a6c:	bd30      	pop	{r4, r5, pc}
 8009a6e:	f00f fcc9 	bl	8019404 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 8009a72:	2301      	movs	r3, #1
 8009a74:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
 8009a78:	e7f1      	b.n	8009a5e <_ZN8touchgfx3HAL5touchEll+0x4a>

08009a7a <_ZN8touchgfx3HAL9blockCopyEPvPKvm>:
 8009a7a:	b570      	push	{r4, r5, r6, lr}
 8009a7c:	2b00      	cmp	r3, #0
 8009a7e:	d050      	beq.n	8009b22 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0xa8>
 8009a80:	ea81 0002 	eor.w	r0, r1, r2
 8009a84:	07c6      	lsls	r6, r0, #31
 8009a86:	d508      	bpl.n	8009a9a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x20>
 8009a88:	3a01      	subs	r2, #1
 8009a8a:	18cc      	adds	r4, r1, r3
 8009a8c:	42a1      	cmp	r1, r4
 8009a8e:	d048      	beq.n	8009b22 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0xa8>
 8009a90:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 8009a94:	f801 0b01 	strb.w	r0, [r1], #1
 8009a98:	e7f8      	b.n	8009a8c <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x12>
 8009a9a:	07d5      	lsls	r5, r2, #31
 8009a9c:	bf42      	ittt	mi
 8009a9e:	f812 0b01 	ldrbmi.w	r0, [r2], #1
 8009aa2:	f801 0b01 	strbmi.w	r0, [r1], #1
 8009aa6:	f103 33ff 	addmi.w	r3, r3, #4294967295
 8009aaa:	2b01      	cmp	r3, #1
 8009aac:	d915      	bls.n	8009ada <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x60>
 8009aae:	ea82 0001 	eor.w	r0, r2, r1
 8009ab2:	0784      	lsls	r4, r0, #30
 8009ab4:	d02d      	beq.n	8009b12 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x98>
 8009ab6:	1e94      	subs	r4, r2, #2
 8009ab8:	4608      	mov	r0, r1
 8009aba:	18ce      	adds	r6, r1, r3
 8009abc:	f834 5f02 	ldrh.w	r5, [r4, #2]!
 8009ac0:	f820 5b02 	strh.w	r5, [r0], #2
 8009ac4:	1a35      	subs	r5, r6, r0
 8009ac6:	2d01      	cmp	r5, #1
 8009ac8:	d8f8      	bhi.n	8009abc <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x42>
 8009aca:	1e98      	subs	r0, r3, #2
 8009acc:	f020 0001 	bic.w	r0, r0, #1
 8009ad0:	3002      	adds	r0, #2
 8009ad2:	4401      	add	r1, r0
 8009ad4:	4402      	add	r2, r0
 8009ad6:	f003 0301 	and.w	r3, r3, #1
 8009ada:	1f14      	subs	r4, r2, #4
 8009adc:	4608      	mov	r0, r1
 8009ade:	18ce      	adds	r6, r1, r3
 8009ae0:	1a35      	subs	r5, r6, r0
 8009ae2:	2d03      	cmp	r5, #3
 8009ae4:	d810      	bhi.n	8009b08 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x8e>
 8009ae6:	089c      	lsrs	r4, r3, #2
 8009ae8:	00a0      	lsls	r0, r4, #2
 8009aea:	4401      	add	r1, r0
 8009aec:	3801      	subs	r0, #1
 8009aee:	4402      	add	r2, r0
 8009af0:	f06f 0003 	mvn.w	r0, #3
 8009af4:	fb00 3404 	mla	r4, r0, r4, r3
 8009af8:	440c      	add	r4, r1
 8009afa:	42a1      	cmp	r1, r4
 8009afc:	d011      	beq.n	8009b22 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0xa8>
 8009afe:	f812 3f01 	ldrb.w	r3, [r2, #1]!
 8009b02:	f801 3b01 	strb.w	r3, [r1], #1
 8009b06:	e7f8      	b.n	8009afa <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x80>
 8009b08:	f854 5f04 	ldr.w	r5, [r4, #4]!
 8009b0c:	f840 5b04 	str.w	r5, [r0], #4
 8009b10:	e7e6      	b.n	8009ae0 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x66>
 8009b12:	0790      	lsls	r0, r2, #30
 8009b14:	d0e1      	beq.n	8009ada <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x60>
 8009b16:	f832 0b02 	ldrh.w	r0, [r2], #2
 8009b1a:	f821 0b02 	strh.w	r0, [r1], #2
 8009b1e:	3b02      	subs	r3, #2
 8009b20:	e7db      	b.n	8009ada <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x60>
 8009b22:	2001      	movs	r0, #1
 8009b24:	bd70      	pop	{r4, r5, r6, pc}

08009b26 <_ZN8touchgfx3HAL7noTouchEv>:
 8009b26:	b510      	push	{r4, lr}
 8009b28:	f890 306b 	ldrb.w	r3, [r0, #107]	; 0x6b
 8009b2c:	4604      	mov	r4, r0
 8009b2e:	b153      	cbz	r3, 8009b46 <_ZN8touchgfx3HAL7noTouchEv+0x20>
 8009b30:	f8b0 3060 	ldrh.w	r3, [r0, #96]	; 0x60
 8009b34:	f8b0 205c 	ldrh.w	r2, [r0, #92]	; 0x5c
 8009b38:	2101      	movs	r1, #1
 8009b3a:	301c      	adds	r0, #28
 8009b3c:	f00f fc62 	bl	8019404 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 8009b40:	2300      	movs	r3, #0
 8009b42:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
 8009b46:	bd10      	pop	{r4, pc}

08009b48 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt>:
 8009b48:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8009b4c:	4605      	mov	r5, r0
 8009b4e:	6980      	ldr	r0, [r0, #24]
 8009b50:	b085      	sub	sp, #20
 8009b52:	460f      	mov	r7, r1
 8009b54:	4690      	mov	r8, r2
 8009b56:	4699      	mov	r9, r3
 8009b58:	b930      	cbnz	r0, 8009b68 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x20>
 8009b5a:	4b1f      	ldr	r3, [pc, #124]	; (8009bd8 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x90>)
 8009b5c:	4a1f      	ldr	r2, [pc, #124]	; (8009bdc <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x94>)
 8009b5e:	f240 112f 	movw	r1, #303	; 0x12f
 8009b62:	481f      	ldr	r0, [pc, #124]	; (8009be0 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x98>)
 8009b64:	f00f fd0a 	bl	801957c <__assert_func>
 8009b68:	ac04      	add	r4, sp, #16
 8009b6a:	2600      	movs	r6, #0
 8009b6c:	f844 6d04 	str.w	r6, [r4, #-4]!
 8009b70:	6806      	ldr	r6, [r0, #0]
 8009b72:	9401      	str	r4, [sp, #4]
 8009b74:	f8bd 4030 	ldrh.w	r4, [sp, #48]	; 0x30
 8009b78:	9400      	str	r4, [sp, #0]
 8009b7a:	6834      	ldr	r4, [r6, #0]
 8009b7c:	47a0      	blx	r4
 8009b7e:	4c19      	ldr	r4, [pc, #100]	; (8009be4 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x9c>)
 8009b80:	4606      	mov	r6, r0
 8009b82:	f8a4 9000 	strh.w	r9, [r4]
 8009b86:	f7f7 fbbd 	bl	8001304 <_ZN8touchgfx3HAL3lcdEv>
 8009b8a:	6803      	ldr	r3, [r0, #0]
 8009b8c:	6a1b      	ldr	r3, [r3, #32]
 8009b8e:	4798      	blx	r3
 8009b90:	280c      	cmp	r0, #12
 8009b92:	d80f      	bhi.n	8009bb4 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x6c>
 8009b94:	e8df f000 	tbb	[pc, r0]
 8009b98:	1b1b1207 	.word	0x1b1b1207
 8009b9c:	1b1b1b1b 	.word	0x1b1b1b1b
 8009ba0:	1b1b1b1b 	.word	0x1b1b1b1b
 8009ba4:	1b          	.byte	0x1b
 8009ba5:	00          	.byte	0x00
 8009ba6:	8823      	ldrh	r3, [r4, #0]
 8009ba8:	fb08 7203 	mla	r2, r8, r3, r7
 8009bac:	9b03      	ldr	r3, [sp, #12]
 8009bae:	eba3 0342 	sub.w	r3, r3, r2, lsl #1
 8009bb2:	63eb      	str	r3, [r5, #60]	; 0x3c
 8009bb4:	4630      	mov	r0, r6
 8009bb6:	b005      	add	sp, #20
 8009bb8:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8009bbc:	8822      	ldrh	r2, [r4, #0]
 8009bbe:	9b03      	ldr	r3, [sp, #12]
 8009bc0:	fb08 7202 	mla	r2, r8, r2, r7
 8009bc4:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8009bc8:	1a9a      	subs	r2, r3, r2
 8009bca:	63ea      	str	r2, [r5, #60]	; 0x3c
 8009bcc:	e7f2      	b.n	8009bb4 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x6c>
 8009bce:	4b06      	ldr	r3, [pc, #24]	; (8009be8 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0xa0>)
 8009bd0:	4a02      	ldr	r2, [pc, #8]	; (8009bdc <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x94>)
 8009bd2:	f44f 71a6 	mov.w	r1, #332	; 0x14c
 8009bd6:	e7c4      	b.n	8009b62 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x1a>
 8009bd8:	0801bc4b 	.word	0x0801bc4b
 8009bdc:	0801bea5 	.word	0x0801bea5
 8009be0:	0801bc90 	.word	0x0801bc90
 8009be4:	20012332 	.word	0x20012332
 8009be8:	0801bcb6 	.word	0x0801bcb6

08009bec <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttth>:
 8009bec:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8009bf0:	4698      	mov	r8, r3
 8009bf2:	6803      	ldr	r3, [r0, #0]
 8009bf4:	6c5d      	ldr	r5, [r3, #68]	; 0x44
 8009bf6:	4b0f      	ldr	r3, [pc, #60]	; (8009c34 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttth+0x48>)
 8009bf8:	b087      	sub	sp, #28
 8009bfa:	f8b3 9000 	ldrh.w	r9, [r3]
 8009bfe:	460e      	mov	r6, r1
 8009c00:	4617      	mov	r7, r2
 8009c02:	4604      	mov	r4, r0
 8009c04:	f7f7 fb7e 	bl	8001304 <_ZN8touchgfx3HAL3lcdEv>
 8009c08:	6803      	ldr	r3, [r0, #0]
 8009c0a:	6a1b      	ldr	r3, [r3, #32]
 8009c0c:	4798      	blx	r3
 8009c0e:	f89d 3040 	ldrb.w	r3, [sp, #64]	; 0x40
 8009c12:	9302      	str	r3, [sp, #8]
 8009c14:	f8bd 303c 	ldrh.w	r3, [sp, #60]	; 0x3c
 8009c18:	9301      	str	r3, [sp, #4]
 8009c1a:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 8009c1e:	9300      	str	r3, [sp, #0]
 8009c20:	e9cd 9003 	strd	r9, r0, [sp, #12]
 8009c24:	4643      	mov	r3, r8
 8009c26:	463a      	mov	r2, r7
 8009c28:	4631      	mov	r1, r6
 8009c2a:	4620      	mov	r0, r4
 8009c2c:	47a8      	blx	r5
 8009c2e:	b007      	add	sp, #28
 8009c30:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8009c34:	20012332 	.word	0x20012332

08009c38 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE>:
 8009c38:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8009c3c:	4606      	mov	r6, r0
 8009c3e:	b089      	sub	sp, #36	; 0x24
 8009c40:	4610      	mov	r0, r2
 8009c42:	460c      	mov	r4, r1
 8009c44:	4691      	mov	r9, r2
 8009c46:	4698      	mov	r8, r3
 8009c48:	f003 ff06 	bl	800da58 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 8009c4c:	2800      	cmp	r0, #0
 8009c4e:	f000 8093 	beq.w	8009d78 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x140>
 8009c52:	f8df a13c 	ldr.w	sl, [pc, #316]	; 8009d90 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x158>
 8009c56:	f8df b13c 	ldr.w	fp, [pc, #316]	; 8009d94 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x15c>
 8009c5a:	f8da 0000 	ldr.w	r0, [sl]
 8009c5e:	4f4b      	ldr	r7, [pc, #300]	; (8009d8c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x154>)
 8009c60:	6802      	ldr	r2, [r0, #0]
 8009c62:	6a12      	ldr	r2, [r2, #32]
 8009c64:	4790      	blx	r2
 8009c66:	f8da 0000 	ldr.w	r0, [sl]
 8009c6a:	6802      	ldr	r2, [r0, #0]
 8009c6c:	ad08      	add	r5, sp, #32
 8009c6e:	6a52      	ldr	r2, [r2, #36]	; 0x24
 8009c70:	4790      	blx	r2
 8009c72:	f825 9d0c 	strh.w	r9, [r5, #-12]!
 8009c76:	f8bb 3000 	ldrh.w	r3, [fp]
 8009c7a:	9300      	str	r3, [sp, #0]
 8009c7c:	4628      	mov	r0, r5
 8009c7e:	883b      	ldrh	r3, [r7, #0]
 8009c80:	9301      	str	r3, [sp, #4]
 8009c82:	f003 ffad 	bl	800dbe0 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8009c86:	f8ab 0000 	strh.w	r0, [fp]
 8009c8a:	4628      	mov	r0, r5
 8009c8c:	f003 ffe2 	bl	800dc54 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8009c90:	f8da b000 	ldr.w	fp, [sl]
 8009c94:	8038      	strh	r0, [r7, #0]
 8009c96:	f8db 303c 	ldr.w	r3, [fp, #60]	; 0x3c
 8009c9a:	9302      	str	r3, [sp, #8]
 8009c9c:	4648      	mov	r0, r9
 8009c9e:	f8db 7040 	ldr.w	r7, [fp, #64]	; 0x40
 8009ca2:	f003 fed9 	bl	800da58 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 8009ca6:	f8da 2000 	ldr.w	r2, [sl]
 8009caa:	f8cb 0040 	str.w	r0, [fp, #64]	; 0x40
 8009cae:	63d0      	str	r0, [r2, #60]	; 0x3c
 8009cb0:	6822      	ldr	r2, [r4, #0]
 8009cb2:	f9b4 9004 	ldrsh.w	r9, [r4, #4]
 8009cb6:	6b53      	ldr	r3, [r2, #52]	; 0x34
 8009cb8:	f9b4 a006 	ldrsh.w	sl, [r4, #6]
 8009cbc:	2200      	movs	r2, #0
 8009cbe:	4611      	mov	r1, r2
 8009cc0:	4620      	mov	r0, r4
 8009cc2:	4798      	blx	r3
 8009cc4:	2201      	movs	r2, #1
 8009cc6:	f894 b025 	ldrb.w	fp, [r4, #37]	; 0x25
 8009cca:	f884 2025 	strb.w	r2, [r4, #37]	; 0x25
 8009cce:	f9b8 2004 	ldrsh.w	r2, [r8, #4]
 8009cd2:	2a00      	cmp	r2, #0
 8009cd4:	f104 0204 	add.w	r2, r4, #4
 8009cd8:	dd51      	ble.n	8009d7e <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x146>
 8009cda:	f9b8 1006 	ldrsh.w	r1, [r8, #6]
 8009cde:	2900      	cmp	r1, #0
 8009ce0:	dd4d      	ble.n	8009d7e <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x146>
 8009ce2:	6810      	ldr	r0, [r2, #0]
 8009ce4:	6851      	ldr	r1, [r2, #4]
 8009ce6:	f10d 0c18 	add.w	ip, sp, #24
 8009cea:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 8009cee:	4641      	mov	r1, r8
 8009cf0:	a806      	add	r0, sp, #24
 8009cf2:	f7ff f96f 	bl	8008fd4 <_ZN8touchgfx4RectaNERKS0_>
 8009cf6:	4628      	mov	r0, r5
 8009cf8:	f004 f8fe 	bl	800def8 <_ZNK8touchgfx6Bitmap9getFormatEv>
 8009cfc:	4680      	mov	r8, r0
 8009cfe:	f7f7 fb01 	bl	8001304 <_ZN8touchgfx3HAL3lcdEv>
 8009d02:	6802      	ldr	r2, [r0, #0]
 8009d04:	6a12      	ldr	r2, [r2, #32]
 8009d06:	4790      	blx	r2
 8009d08:	4580      	cmp	r8, r0
 8009d0a:	d03d      	beq.n	8009d88 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x150>
 8009d0c:	6cf0      	ldr	r0, [r6, #76]	; 0x4c
 8009d0e:	b150      	cbz	r0, 8009d26 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xee>
 8009d10:	4628      	mov	r0, r5
 8009d12:	f004 f8f1 	bl	800def8 <_ZNK8touchgfx6Bitmap9getFormatEv>
 8009d16:	4605      	mov	r5, r0
 8009d18:	6cf0      	ldr	r0, [r6, #76]	; 0x4c
 8009d1a:	6803      	ldr	r3, [r0, #0]
 8009d1c:	6a1b      	ldr	r3, [r3, #32]
 8009d1e:	4798      	blx	r3
 8009d20:	1a2b      	subs	r3, r5, r0
 8009d22:	4258      	negs	r0, r3
 8009d24:	4158      	adcs	r0, r3
 8009d26:	f886 0076 	strb.w	r0, [r6, #118]	; 0x76
 8009d2a:	6822      	ldr	r2, [r4, #0]
 8009d2c:	6963      	ldr	r3, [r4, #20]
 8009d2e:	9303      	str	r3, [sp, #12]
 8009d30:	2500      	movs	r5, #0
 8009d32:	6165      	str	r5, [r4, #20]
 8009d34:	4620      	mov	r0, r4
 8009d36:	6892      	ldr	r2, [r2, #8]
 8009d38:	a906      	add	r1, sp, #24
 8009d3a:	4790      	blx	r2
 8009d3c:	9b03      	ldr	r3, [sp, #12]
 8009d3e:	6163      	str	r3, [r4, #20]
 8009d40:	f886 5076 	strb.w	r5, [r6, #118]	; 0x76
 8009d44:	6823      	ldr	r3, [r4, #0]
 8009d46:	f884 b025 	strb.w	fp, [r4, #37]	; 0x25
 8009d4a:	4620      	mov	r0, r4
 8009d4c:	4c10      	ldr	r4, [pc, #64]	; (8009d90 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x158>)
 8009d4e:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8009d50:	4652      	mov	r2, sl
 8009d52:	4649      	mov	r1, r9
 8009d54:	4798      	blx	r3
 8009d56:	6820      	ldr	r0, [r4, #0]
 8009d58:	9b02      	ldr	r3, [sp, #8]
 8009d5a:	9a00      	ldr	r2, [sp, #0]
 8009d5c:	e9c0 370f 	strd	r3, r7, [r0, #60]	; 0x3c
 8009d60:	4b0c      	ldr	r3, [pc, #48]	; (8009d94 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x15c>)
 8009d62:	801a      	strh	r2, [r3, #0]
 8009d64:	4b09      	ldr	r3, [pc, #36]	; (8009d8c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x154>)
 8009d66:	9a01      	ldr	r2, [sp, #4]
 8009d68:	801a      	strh	r2, [r3, #0]
 8009d6a:	6803      	ldr	r3, [r0, #0]
 8009d6c:	6a1b      	ldr	r3, [r3, #32]
 8009d6e:	4798      	blx	r3
 8009d70:	6820      	ldr	r0, [r4, #0]
 8009d72:	6803      	ldr	r3, [r0, #0]
 8009d74:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8009d76:	4798      	blx	r3
 8009d78:	b009      	add	sp, #36	; 0x24
 8009d7a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8009d7e:	6810      	ldr	r0, [r2, #0]
 8009d80:	6851      	ldr	r1, [r2, #4]
 8009d82:	ab06      	add	r3, sp, #24
 8009d84:	c303      	stmia	r3!, {r0, r1}
 8009d86:	e7b6      	b.n	8009cf6 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xbe>
 8009d88:	2000      	movs	r0, #0
 8009d8a:	e7cc      	b.n	8009d26 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xee>
 8009d8c:	20012334 	.word	0x20012334
 8009d90:	20012338 	.word	0x20012338
 8009d94:	20012332 	.word	0x20012332

08009d98 <_ZN8touchgfx3HAL20getClientFrameBufferEv>:
 8009d98:	b510      	push	{r4, lr}
 8009d9a:	4b07      	ldr	r3, [pc, #28]	; (8009db8 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x20>)
 8009d9c:	781b      	ldrb	r3, [r3, #0]
 8009d9e:	4604      	mov	r4, r0
 8009da0:	b13b      	cbz	r3, 8009db2 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 8009da2:	6803      	ldr	r3, [r0, #0]
 8009da4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8009da6:	4798      	blx	r3
 8009da8:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8009daa:	4283      	cmp	r3, r0
 8009dac:	d101      	bne.n	8009db2 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 8009dae:	6c20      	ldr	r0, [r4, #64]	; 0x40
 8009db0:	bd10      	pop	{r4, pc}
 8009db2:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 8009db4:	e7fc      	b.n	8009db0 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x18>
 8009db6:	bf00      	nop
 8009db8:	20012336 	.word	0x20012336

08009dbc <_ZN8touchgfx3HAL15lockFrameBufferEv>:
 8009dbc:	b510      	push	{r4, lr}
 8009dbe:	4b0b      	ldr	r3, [pc, #44]	; (8009dec <_ZN8touchgfx3HAL15lockFrameBufferEv+0x30>)
 8009dc0:	781b      	ldrb	r3, [r3, #0]
 8009dc2:	4604      	mov	r4, r0
 8009dc4:	b95b      	cbnz	r3, 8009dde <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 8009dc6:	f890 3048 	ldrb.w	r3, [r0, #72]	; 0x48
 8009dca:	2b02      	cmp	r3, #2
 8009dcc:	d007      	beq.n	8009dde <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 8009dce:	6840      	ldr	r0, [r0, #4]
 8009dd0:	f000 fbce 	bl	800a570 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>
 8009dd4:	b118      	cbz	r0, 8009dde <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 8009dd6:	6862      	ldr	r2, [r4, #4]
 8009dd8:	7a53      	ldrb	r3, [r2, #9]
 8009dda:	2b00      	cmp	r3, #0
 8009ddc:	d0fc      	beq.n	8009dd8 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x1c>
 8009dde:	f7f7 f9b3 	bl	8001148 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 8009de2:	4620      	mov	r0, r4
 8009de4:	f7ff ffd8 	bl	8009d98 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8009de8:	bd10      	pop	{r4, pc}
 8009dea:	bf00      	nop
 8009dec:	20012336 	.word	0x20012336

08009df0 <_ZN8touchgfx3HAL10initializeEv>:
 8009df0:	b510      	push	{r4, lr}
 8009df2:	4604      	mov	r4, r0
 8009df4:	f7f7 f990 	bl	8001118 <_ZN8touchgfx10OSWrappers10initializeEv>
 8009df8:	6860      	ldr	r0, [r4, #4]
 8009dfa:	6803      	ldr	r3, [r0, #0]
 8009dfc:	68db      	ldr	r3, [r3, #12]
 8009dfe:	4798      	blx	r3
 8009e00:	68e0      	ldr	r0, [r4, #12]
 8009e02:	6803      	ldr	r3, [r0, #0]
 8009e04:	689b      	ldr	r3, [r3, #8]
 8009e06:	4798      	blx	r3
 8009e08:	6823      	ldr	r3, [r4, #0]
 8009e0a:	4620      	mov	r0, r4
 8009e0c:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8009e0e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8009e12:	4718      	bx	r3

08009e14 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE>:
 8009e14:	b508      	push	{r3, lr}
 8009e16:	290c      	cmp	r1, #12
 8009e18:	d817      	bhi.n	8009e4a <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x36>
 8009e1a:	e8df f001 	tbb	[pc, r1]
 8009e1e:	090b      	.short	0x090b
 8009e20:	0d0d0d07 	.word	0x0d0d0d07
 8009e24:	1414140d 	.word	0x1414140d
 8009e28:	1414      	.short	0x1414
 8009e2a:	0d          	.byte	0x0d
 8009e2b:	00          	.byte	0x00
 8009e2c:	2020      	movs	r0, #32
 8009e2e:	bd08      	pop	{r3, pc}
 8009e30:	2018      	movs	r0, #24
 8009e32:	e7fc      	b.n	8009e2e <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x1a>
 8009e34:	2010      	movs	r0, #16
 8009e36:	e7fa      	b.n	8009e2e <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x1a>
 8009e38:	4b05      	ldr	r3, [pc, #20]	; (8009e50 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x3c>)
 8009e3a:	4a06      	ldr	r2, [pc, #24]	; (8009e54 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x40>)
 8009e3c:	4806      	ldr	r0, [pc, #24]	; (8009e58 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x44>)
 8009e3e:	f240 212f 	movw	r1, #559	; 0x22f
 8009e42:	f00f fb9b 	bl	801957c <__assert_func>
 8009e46:	2008      	movs	r0, #8
 8009e48:	e7f1      	b.n	8009e2e <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x1a>
 8009e4a:	2000      	movs	r0, #0
 8009e4c:	e7ef      	b.n	8009e2e <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x1a>
 8009e4e:	bf00      	nop
 8009e50:	0801bd89 	.word	0x0801bd89
 8009e54:	0801c067 	.word	0x0801c067
 8009e58:	0801bc90 	.word	0x0801bc90

08009e5c <_ZNK8touchgfx3HAL13getDstAddressEttPttNS_6Bitmap12BitmapFormatE>:
 8009e5c:	b570      	push	{r4, r5, r6, lr}
 8009e5e:	460d      	mov	r5, r1
 8009e60:	f89d 1014 	ldrb.w	r1, [sp, #20]
 8009e64:	4616      	mov	r6, r2
 8009e66:	461c      	mov	r4, r3
 8009e68:	f7ff ffd4 	bl	8009e14 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE>
 8009e6c:	f8bd 1010 	ldrh.w	r1, [sp, #16]
 8009e70:	10c0      	asrs	r0, r0, #3
 8009e72:	fb06 5101 	mla	r1, r6, r1, r5
 8009e76:	fb00 4001 	mla	r0, r0, r1, r4
 8009e7a:	bd70      	pop	{r4, r5, r6, pc}

08009e7c <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_>:
 8009e7c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8009e80:	b08a      	sub	sp, #40	; 0x28
 8009e82:	f04f 0c00 	mov.w	ip, #0
 8009e86:	f89d 8064 	ldrb.w	r8, [sp, #100]	; 0x64
 8009e8a:	f8bd 604c 	ldrh.w	r6, [sp, #76]	; 0x4c
 8009e8e:	f8bd 5050 	ldrh.w	r5, [sp, #80]	; 0x50
 8009e92:	f8bd 9060 	ldrh.w	r9, [sp, #96]	; 0x60
 8009e96:	f89d 7068 	ldrb.w	r7, [sp, #104]	; 0x68
 8009e9a:	f8cd c020 	str.w	ip, [sp, #32]
 8009e9e:	f1b8 0f02 	cmp.w	r8, #2
 8009ea2:	4604      	mov	r4, r0
 8009ea4:	469a      	mov	sl, r3
 8009ea6:	f89d 005c 	ldrb.w	r0, [sp, #92]	; 0x5c
 8009eaa:	f89d 3058 	ldrb.w	r3, [sp, #88]	; 0x58
 8009eae:	d030      	beq.n	8009f12 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0x96>
 8009eb0:	2bff      	cmp	r3, #255	; 0xff
 8009eb2:	d12c      	bne.n	8009f0e <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0x92>
 8009eb4:	4560      	cmp	r0, ip
 8009eb6:	bf14      	ite	ne
 8009eb8:	2004      	movne	r0, #4
 8009eba:	2001      	moveq	r0, #1
 8009ebc:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8009ec0:	9204      	str	r2, [sp, #16]
 8009ec2:	4620      	mov	r0, r4
 8009ec4:	f8bd 2054 	ldrh.w	r2, [sp, #84]	; 0x54
 8009ec8:	f8ad 201c 	strh.w	r2, [sp, #28]
 8009ecc:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 8009ed0:	f8ad 6018 	strh.w	r6, [sp, #24]
 8009ed4:	f8ad 501a 	strh.w	r5, [sp, #26]
 8009ed8:	f7ff ff5e 	bl	8009d98 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8009edc:	e9cd 9700 	strd	r9, r7, [sp]
 8009ee0:	4603      	mov	r3, r0
 8009ee2:	f8bd 2048 	ldrh.w	r2, [sp, #72]	; 0x48
 8009ee6:	4651      	mov	r1, sl
 8009ee8:	4620      	mov	r0, r4
 8009eea:	f7ff ffb7 	bl	8009e5c <_ZNK8touchgfx3HAL13getDstAddressEttPttNS_6Bitmap12BitmapFormatE>
 8009eee:	f8ad 901e 	strh.w	r9, [sp, #30]
 8009ef2:	9005      	str	r0, [sp, #20]
 8009ef4:	f88d 8025 	strb.w	r8, [sp, #37]	; 0x25
 8009ef8:	f88d 7026 	strb.w	r7, [sp, #38]	; 0x26
 8009efc:	b106      	cbz	r6, 8009f00 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0x84>
 8009efe:	b98d      	cbnz	r5, 8009f24 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0xa8>
 8009f00:	4b12      	ldr	r3, [pc, #72]	; (8009f4c <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0xd0>)
 8009f02:	4a13      	ldr	r2, [pc, #76]	; (8009f50 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0xd4>)
 8009f04:	f240 11af 	movw	r1, #431	; 0x1af
 8009f08:	4812      	ldr	r0, [pc, #72]	; (8009f54 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0xd8>)
 8009f0a:	f00f fb37 	bl	801957c <__assert_func>
 8009f0e:	2004      	movs	r0, #4
 8009f10:	e7d4      	b.n	8009ebc <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0x40>
 8009f12:	2bff      	cmp	r3, #255	; 0xff
 8009f14:	d104      	bne.n	8009f20 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0xa4>
 8009f16:	2800      	cmp	r0, #0
 8009f18:	bf14      	ite	ne
 8009f1a:	2040      	movne	r0, #64	; 0x40
 8009f1c:	2020      	moveq	r0, #32
 8009f1e:	e7cd      	b.n	8009ebc <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0x40>
 8009f20:	2040      	movs	r0, #64	; 0x40
 8009f22:	e7cb      	b.n	8009ebc <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0x40>
 8009f24:	6823      	ldr	r3, [r4, #0]
 8009f26:	9d02      	ldr	r5, [sp, #8]
 8009f28:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8009f2a:	4620      	mov	r0, r4
 8009f2c:	4798      	blx	r3
 8009f2e:	4228      	tst	r0, r5
 8009f30:	d104      	bne.n	8009f3c <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0xc0>
 8009f32:	4b09      	ldr	r3, [pc, #36]	; (8009f58 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0xdc>)
 8009f34:	4a06      	ldr	r2, [pc, #24]	; (8009f50 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0xd4>)
 8009f36:	f44f 71d8 	mov.w	r1, #432	; 0x1b0
 8009f3a:	e7e5      	b.n	8009f08 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0x8c>
 8009f3c:	6860      	ldr	r0, [r4, #4]
 8009f3e:	6803      	ldr	r3, [r0, #0]
 8009f40:	a902      	add	r1, sp, #8
 8009f42:	685b      	ldr	r3, [r3, #4]
 8009f44:	4798      	blx	r3
 8009f46:	b00a      	add	sp, #40	; 0x28
 8009f48:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8009f4c:	0801bd0c 	.word	0x0801bd0c
 8009f50:	0801bf09 	.word	0x0801bf09
 8009f54:	0801bc90 	.word	0x0801bc90
 8009f58:	0801bd44 	.word	0x0801bd44

08009f5c <_ZN8touchgfx3HAL8blitCopyEPKtttttthbtNS_6Bitmap12BitmapFormatES4_>:
 8009f5c:	b510      	push	{r4, lr}
 8009f5e:	b08a      	sub	sp, #40	; 0x28
 8009f60:	f89d 404c 	ldrb.w	r4, [sp, #76]	; 0x4c
 8009f64:	9408      	str	r4, [sp, #32]
 8009f66:	f89d 4048 	ldrb.w	r4, [sp, #72]	; 0x48
 8009f6a:	9407      	str	r4, [sp, #28]
 8009f6c:	f8bd 4044 	ldrh.w	r4, [sp, #68]	; 0x44
 8009f70:	9406      	str	r4, [sp, #24]
 8009f72:	f89d 4040 	ldrb.w	r4, [sp, #64]	; 0x40
 8009f76:	9405      	str	r4, [sp, #20]
 8009f78:	f89d 403c 	ldrb.w	r4, [sp, #60]	; 0x3c
 8009f7c:	9404      	str	r4, [sp, #16]
 8009f7e:	f8bd 4038 	ldrh.w	r4, [sp, #56]	; 0x38
 8009f82:	9403      	str	r4, [sp, #12]
 8009f84:	f8bd 4034 	ldrh.w	r4, [sp, #52]	; 0x34
 8009f88:	9402      	str	r4, [sp, #8]
 8009f8a:	f8bd 4030 	ldrh.w	r4, [sp, #48]	; 0x30
 8009f8e:	e9cd 3400 	strd	r3, r4, [sp]
 8009f92:	4613      	mov	r3, r2
 8009f94:	2200      	movs	r2, #0
 8009f96:	f7ff ff71 	bl	8009e7c <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_>
 8009f9a:	b00a      	add	sp, #40	; 0x28
 8009f9c:	bd10      	pop	{r4, pc}
	...

08009fa0 <_ZN8touchgfx3HAL8blitCopyEPKtttttthb>:
 8009fa0:	b5f0      	push	{r4, r5, r6, r7, lr}
 8009fa2:	b08b      	sub	sp, #44	; 0x2c
 8009fa4:	4616      	mov	r6, r2
 8009fa6:	460d      	mov	r5, r1
 8009fa8:	461f      	mov	r7, r3
 8009faa:	4604      	mov	r4, r0
 8009fac:	f7f7 f9aa 	bl	8001304 <_ZN8touchgfx3HAL3lcdEv>
 8009fb0:	6803      	ldr	r3, [r0, #0]
 8009fb2:	6a1b      	ldr	r3, [r3, #32]
 8009fb4:	4798      	blx	r3
 8009fb6:	e9cd 0007 	strd	r0, r0, [sp, #28]
 8009fba:	4b0d      	ldr	r3, [pc, #52]	; (8009ff0 <_ZN8touchgfx3HAL8blitCopyEPKtttttthb+0x50>)
 8009fbc:	881b      	ldrh	r3, [r3, #0]
 8009fbe:	9306      	str	r3, [sp, #24]
 8009fc0:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 8009fc4:	9305      	str	r3, [sp, #20]
 8009fc6:	f89d 304c 	ldrb.w	r3, [sp, #76]	; 0x4c
 8009fca:	9304      	str	r3, [sp, #16]
 8009fcc:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8009fd0:	9303      	str	r3, [sp, #12]
 8009fd2:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 8009fd6:	9302      	str	r3, [sp, #8]
 8009fd8:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 8009fdc:	2200      	movs	r2, #0
 8009fde:	e9cd 7300 	strd	r7, r3, [sp]
 8009fe2:	4629      	mov	r1, r5
 8009fe4:	4633      	mov	r3, r6
 8009fe6:	4620      	mov	r0, r4
 8009fe8:	f7ff ff48 	bl	8009e7c <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_>
 8009fec:	b00b      	add	sp, #44	; 0x2c
 8009fee:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8009ff0:	20012332 	.word	0x20012332

08009ff4 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttth>:
 8009ff4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8009ff8:	461f      	mov	r7, r3
 8009ffa:	4b14      	ldr	r3, [pc, #80]	; (800a04c <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttth+0x58>)
 8009ffc:	b08a      	sub	sp, #40	; 0x28
 8009ffe:	4616      	mov	r6, r2
 800a000:	f8b3 8000 	ldrh.w	r8, [r3]
 800a004:	460d      	mov	r5, r1
 800a006:	4604      	mov	r4, r0
 800a008:	f7f7 f97c 	bl	8001304 <_ZN8touchgfx3HAL3lcdEv>
 800a00c:	6803      	ldr	r3, [r0, #0]
 800a00e:	6a1b      	ldr	r3, [r3, #32]
 800a010:	4798      	blx	r3
 800a012:	2302      	movs	r3, #2
 800a014:	e9cd 8306 	strd	r8, r3, [sp, #24]
 800a018:	2301      	movs	r3, #1
 800a01a:	9305      	str	r3, [sp, #20]
 800a01c:	f89d 304c 	ldrb.w	r3, [sp, #76]	; 0x4c
 800a020:	9304      	str	r3, [sp, #16]
 800a022:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 800a026:	9303      	str	r3, [sp, #12]
 800a028:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 800a02c:	9302      	str	r3, [sp, #8]
 800a02e:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 800a032:	9008      	str	r0, [sp, #32]
 800a034:	e9cd 7300 	strd	r7, r3, [sp]
 800a038:	2200      	movs	r2, #0
 800a03a:	4633      	mov	r3, r6
 800a03c:	4629      	mov	r1, r5
 800a03e:	4620      	mov	r0, r4
 800a040:	f7ff ff1c 	bl	8009e7c <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_>
 800a044:	b00a      	add	sp, #40	; 0x28
 800a046:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800a04a:	bf00      	nop
 800a04c:	20012332 	.word	0x20012332

0800a050 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatE>:
 800a050:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800a054:	b08b      	sub	sp, #44	; 0x2c
 800a056:	469b      	mov	fp, r3
 800a058:	f89d 7058 	ldrb.w	r7, [sp, #88]	; 0x58
 800a05c:	f89d 5060 	ldrb.w	r5, [sp, #96]	; 0x60
 800a060:	f8bd 805c 	ldrh.w	r8, [sp, #92]	; 0x5c
 800a064:	2fff      	cmp	r7, #255	; 0xff
 800a066:	bf14      	ite	ne
 800a068:	2308      	movne	r3, #8
 800a06a:	2302      	moveq	r3, #2
 800a06c:	2600      	movs	r6, #0
 800a06e:	4604      	mov	r4, r0
 800a070:	4689      	mov	r9, r1
 800a072:	4692      	mov	sl, r2
 800a074:	e9cd 3602 	strd	r3, r6, [sp, #8]
 800a078:	9608      	str	r6, [sp, #32]
 800a07a:	f7ff fe8d 	bl	8009d98 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800a07e:	e9cd 8500 	strd	r8, r5, [sp]
 800a082:	4603      	mov	r3, r0
 800a084:	465a      	mov	r2, fp
 800a086:	4651      	mov	r1, sl
 800a088:	4620      	mov	r0, r4
 800a08a:	f7ff fee7 	bl	8009e5c <_ZNK8touchgfx3HAL13getDstAddressEttPttNS_6Bitmap12BitmapFormatE>
 800a08e:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 800a092:	f8ad 3018 	strh.w	r3, [sp, #24]
 800a096:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 800a09a:	f8ad 301a 	strh.w	r3, [sp, #26]
 800a09e:	6823      	ldr	r3, [r4, #0]
 800a0a0:	9005      	str	r0, [sp, #20]
 800a0a2:	f88d 5025 	strb.w	r5, [sp, #37]	; 0x25
 800a0a6:	f88d 5026 	strb.w	r5, [sp, #38]	; 0x26
 800a0aa:	f8ad 601c 	strh.w	r6, [sp, #28]
 800a0ae:	f8ad 801e 	strh.w	r8, [sp, #30]
 800a0b2:	f8cd 9020 	str.w	r9, [sp, #32]
 800a0b6:	f88d 7024 	strb.w	r7, [sp, #36]	; 0x24
 800a0ba:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800a0bc:	9d02      	ldr	r5, [sp, #8]
 800a0be:	4620      	mov	r0, r4
 800a0c0:	4798      	blx	r3
 800a0c2:	4228      	tst	r0, r5
 800a0c4:	d106      	bne.n	800a0d4 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatE+0x84>
 800a0c6:	4b07      	ldr	r3, [pc, #28]	; (800a0e4 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatE+0x94>)
 800a0c8:	4a07      	ldr	r2, [pc, #28]	; (800a0e8 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatE+0x98>)
 800a0ca:	4808      	ldr	r0, [pc, #32]	; (800a0ec <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatE+0x9c>)
 800a0cc:	f240 11e7 	movw	r1, #487	; 0x1e7
 800a0d0:	f00f fa54 	bl	801957c <__assert_func>
 800a0d4:	6860      	ldr	r0, [r4, #4]
 800a0d6:	6803      	ldr	r3, [r0, #0]
 800a0d8:	a902      	add	r1, sp, #8
 800a0da:	685b      	ldr	r3, [r3, #4]
 800a0dc:	4798      	blx	r3
 800a0de:	b00b      	add	sp, #44	; 0x2c
 800a0e0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800a0e4:	0801bd44 	.word	0x0801bd44
 800a0e8:	0801bfd2 	.word	0x0801bfd2
 800a0ec:	0801bc90 	.word	0x0801bc90

0800a0f0 <_ZNK8touchgfx3HAL13getDstAddressEttPt>:
 800a0f0:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 800a0f4:	461f      	mov	r7, r3
 800a0f6:	4b0b      	ldr	r3, [pc, #44]	; (800a124 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x34>)
 800a0f8:	460d      	mov	r5, r1
 800a0fa:	f8b3 8000 	ldrh.w	r8, [r3]
 800a0fe:	4616      	mov	r6, r2
 800a100:	4604      	mov	r4, r0
 800a102:	f7f7 f8ff 	bl	8001304 <_ZN8touchgfx3HAL3lcdEv>
 800a106:	6803      	ldr	r3, [r0, #0]
 800a108:	6a1b      	ldr	r3, [r3, #32]
 800a10a:	4798      	blx	r3
 800a10c:	463b      	mov	r3, r7
 800a10e:	e9cd 8000 	strd	r8, r0, [sp]
 800a112:	4632      	mov	r2, r6
 800a114:	4629      	mov	r1, r5
 800a116:	4620      	mov	r0, r4
 800a118:	f7ff fea0 	bl	8009e5c <_ZNK8touchgfx3HAL13getDstAddressEttPttNS_6Bitmap12BitmapFormatE>
 800a11c:	b002      	add	sp, #8
 800a11e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800a122:	bf00      	nop
 800a124:	20012332 	.word	0x20012332

0800a128 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE>:
 800a128:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800a12c:	b088      	sub	sp, #32
 800a12e:	4698      	mov	r8, r3
 800a130:	2300      	movs	r3, #0
 800a132:	9306      	str	r3, [sp, #24]
 800a134:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 800a138:	f8bd 6038 	ldrh.w	r6, [sp, #56]	; 0x38
 800a13c:	f8bd 503c 	ldrh.w	r5, [sp, #60]	; 0x3c
 800a140:	f8ad 6010 	strh.w	r6, [sp, #16]
 800a144:	e9cd 3100 	strd	r3, r1, [sp]
 800a148:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 800a14c:	f8ad 3014 	strh.w	r3, [sp, #20]
 800a150:	f89d 3048 	ldrb.w	r3, [sp, #72]	; 0x48
 800a154:	f88d 301c 	strb.w	r3, [sp, #28]
 800a158:	4617      	mov	r7, r2
 800a15a:	4604      	mov	r4, r0
 800a15c:	f8ad 5012 	strh.w	r5, [sp, #18]
 800a160:	f7ff fe1a 	bl	8009d98 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800a164:	4642      	mov	r2, r8
 800a166:	4603      	mov	r3, r0
 800a168:	4639      	mov	r1, r7
 800a16a:	4620      	mov	r0, r4
 800a16c:	f7ff ffc0 	bl	800a0f0 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800a170:	4b16      	ldr	r3, [pc, #88]	; (800a1cc <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0xa4>)
 800a172:	9003      	str	r0, [sp, #12]
 800a174:	881b      	ldrh	r3, [r3, #0]
 800a176:	f8ad 3016 	strh.w	r3, [sp, #22]
 800a17a:	f7f7 f8c3 	bl	8001304 <_ZN8touchgfx3HAL3lcdEv>
 800a17e:	6803      	ldr	r3, [r0, #0]
 800a180:	6a1b      	ldr	r3, [r3, #32]
 800a182:	4798      	blx	r3
 800a184:	f88d 001e 	strb.w	r0, [sp, #30]
 800a188:	f88d 001d 	strb.w	r0, [sp, #29]
 800a18c:	b106      	cbz	r6, 800a190 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0x68>
 800a18e:	b935      	cbnz	r5, 800a19e <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0x76>
 800a190:	4b0f      	ldr	r3, [pc, #60]	; (800a1d0 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0xa8>)
 800a192:	4a10      	ldr	r2, [pc, #64]	; (800a1d4 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0xac>)
 800a194:	f44f 71e6 	mov.w	r1, #460	; 0x1cc
 800a198:	480f      	ldr	r0, [pc, #60]	; (800a1d8 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0xb0>)
 800a19a:	f00f f9ef 	bl	801957c <__assert_func>
 800a19e:	6823      	ldr	r3, [r4, #0]
 800a1a0:	9d00      	ldr	r5, [sp, #0]
 800a1a2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800a1a4:	4620      	mov	r0, r4
 800a1a6:	4798      	blx	r3
 800a1a8:	4228      	tst	r0, r5
 800a1aa:	d104      	bne.n	800a1b6 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0x8e>
 800a1ac:	4b0b      	ldr	r3, [pc, #44]	; (800a1dc <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0xb4>)
 800a1ae:	4a09      	ldr	r2, [pc, #36]	; (800a1d4 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0xac>)
 800a1b0:	f240 11cd 	movw	r1, #461	; 0x1cd
 800a1b4:	e7f0      	b.n	800a198 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0x70>
 800a1b6:	9b11      	ldr	r3, [sp, #68]	; 0x44
 800a1b8:	6860      	ldr	r0, [r4, #4]
 800a1ba:	9306      	str	r3, [sp, #24]
 800a1bc:	6803      	ldr	r3, [r0, #0]
 800a1be:	4669      	mov	r1, sp
 800a1c0:	685b      	ldr	r3, [r3, #4]
 800a1c2:	4798      	blx	r3
 800a1c4:	b008      	add	sp, #32
 800a1c6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800a1ca:	bf00      	nop
 800a1cc:	20012332 	.word	0x20012332
 800a1d0:	0801bd0c 	.word	0x0801bd0c
 800a1d4:	0801bdbb 	.word	0x0801bdbb
 800a1d8:	0801bc90 	.word	0x0801bc90
 800a1dc:	0801bd44 	.word	0x0801bd44

0800a1e0 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE>:
 800a1e0:	b570      	push	{r4, r5, r6, lr}
 800a1e2:	b08a      	sub	sp, #40	; 0x28
 800a1e4:	466b      	mov	r3, sp
 800a1e6:	e883 0006 	stmia.w	r3, {r1, r2}
 800a1ea:	4b20      	ldr	r3, [pc, #128]	; (800a26c <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x8c>)
 800a1ec:	781b      	ldrb	r3, [r3, #0]
 800a1ee:	4604      	mov	r4, r0
 800a1f0:	b933      	cbnz	r3, 800a200 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x20>
 800a1f2:	4b1f      	ldr	r3, [pc, #124]	; (800a270 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x90>)
 800a1f4:	4a1f      	ldr	r2, [pc, #124]	; (800a274 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x94>)
 800a1f6:	4820      	ldr	r0, [pc, #128]	; (800a278 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x98>)
 800a1f8:	f44f 71fc 	mov.w	r1, #504	; 0x1f8
 800a1fc:	f00f f9be 	bl	801957c <__assert_func>
 800a200:	2300      	movs	r3, #0
 800a202:	9308      	str	r3, [sp, #32]
 800a204:	2301      	movs	r3, #1
 800a206:	9302      	str	r3, [sp, #8]
 800a208:	6803      	ldr	r3, [r0, #0]
 800a20a:	f8bd 5000 	ldrh.w	r5, [sp]
 800a20e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800a210:	f8bd 6002 	ldrh.w	r6, [sp, #2]
 800a214:	4798      	blx	r3
 800a216:	4632      	mov	r2, r6
 800a218:	4629      	mov	r1, r5
 800a21a:	4603      	mov	r3, r0
 800a21c:	4620      	mov	r0, r4
 800a21e:	f7ff ff67 	bl	800a0f0 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800a222:	6c63      	ldr	r3, [r4, #68]	; 0x44
 800a224:	9305      	str	r3, [sp, #20]
 800a226:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800a22a:	f8ad 3018 	strh.w	r3, [sp, #24]
 800a22e:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 800a232:	f8ad 301a 	strh.w	r3, [sp, #26]
 800a236:	4b11      	ldr	r3, [pc, #68]	; (800a27c <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x9c>)
 800a238:	9003      	str	r0, [sp, #12]
 800a23a:	881b      	ldrh	r3, [r3, #0]
 800a23c:	f8ad 301c 	strh.w	r3, [sp, #28]
 800a240:	f8ad 301e 	strh.w	r3, [sp, #30]
 800a244:	f7f7 f85e 	bl	8001304 <_ZN8touchgfx3HAL3lcdEv>
 800a248:	6803      	ldr	r3, [r0, #0]
 800a24a:	6a1b      	ldr	r3, [r3, #32]
 800a24c:	4798      	blx	r3
 800a24e:	23ff      	movs	r3, #255	; 0xff
 800a250:	f88d 0025 	strb.w	r0, [sp, #37]	; 0x25
 800a254:	f88d 0026 	strb.w	r0, [sp, #38]	; 0x26
 800a258:	6860      	ldr	r0, [r4, #4]
 800a25a:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 800a25e:	6803      	ldr	r3, [r0, #0]
 800a260:	a902      	add	r1, sp, #8
 800a262:	685b      	ldr	r3, [r3, #4]
 800a264:	4798      	blx	r3
 800a266:	6c60      	ldr	r0, [r4, #68]	; 0x44
 800a268:	b00a      	add	sp, #40	; 0x28
 800a26a:	bd70      	pop	{r4, r5, r6, pc}
 800a26c:	20012337 	.word	0x20012337
 800a270:	0801bbdd 	.word	0x0801bbdd
 800a274:	0801be5f 	.word	0x0801be5f
 800a278:	0801bc90 	.word	0x0801bc90
 800a27c:	20012332 	.word	0x20012332

0800a280 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm>:
 800a280:	b5f0      	push	{r4, r5, r6, r7, lr}
 800a282:	b08b      	sub	sp, #44	; 0x2c
 800a284:	466d      	mov	r5, sp
 800a286:	e885 0006 	stmia.w	r5, {r1, r2}
 800a28a:	461d      	mov	r5, r3
 800a28c:	2300      	movs	r3, #0
 800a28e:	9308      	str	r3, [sp, #32]
 800a290:	2301      	movs	r3, #1
 800a292:	9302      	str	r3, [sp, #8]
 800a294:	6803      	ldr	r3, [r0, #0]
 800a296:	f8bd 6000 	ldrh.w	r6, [sp]
 800a29a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800a29c:	f8bd 7002 	ldrh.w	r7, [sp, #2]
 800a2a0:	4604      	mov	r4, r0
 800a2a2:	4798      	blx	r3
 800a2a4:	463a      	mov	r2, r7
 800a2a6:	4631      	mov	r1, r6
 800a2a8:	4603      	mov	r3, r0
 800a2aa:	4620      	mov	r0, r4
 800a2ac:	f7ff ff20 	bl	800a0f0 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800a2b0:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800a2b4:	f8ad 3018 	strh.w	r3, [sp, #24]
 800a2b8:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 800a2bc:	f8ad 301a 	strh.w	r3, [sp, #26]
 800a2c0:	4b0e      	ldr	r3, [pc, #56]	; (800a2fc <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm+0x7c>)
 800a2c2:	9003      	str	r0, [sp, #12]
 800a2c4:	881b      	ldrh	r3, [r3, #0]
 800a2c6:	f8ad 301c 	strh.w	r3, [sp, #28]
 800a2ca:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800a2cc:	f8ad 301e 	strh.w	r3, [sp, #30]
 800a2d0:	9505      	str	r5, [sp, #20]
 800a2d2:	f7f7 f817 	bl	8001304 <_ZN8touchgfx3HAL3lcdEv>
 800a2d6:	6803      	ldr	r3, [r0, #0]
 800a2d8:	6a1b      	ldr	r3, [r3, #32]
 800a2da:	4798      	blx	r3
 800a2dc:	23ff      	movs	r3, #255	; 0xff
 800a2de:	f88d 0025 	strb.w	r0, [sp, #37]	; 0x25
 800a2e2:	f88d 0026 	strb.w	r0, [sp, #38]	; 0x26
 800a2e6:	6860      	ldr	r0, [r4, #4]
 800a2e8:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 800a2ec:	6803      	ldr	r3, [r0, #0]
 800a2ee:	a902      	add	r1, sp, #8
 800a2f0:	685b      	ldr	r3, [r3, #4]
 800a2f2:	4798      	blx	r3
 800a2f4:	4628      	mov	r0, r5
 800a2f6:	b00b      	add	sp, #44	; 0x2c
 800a2f8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800a2fa:	bf00      	nop
 800a2fc:	20012332 	.word	0x20012332

0800a300 <_ZN8touchgfx3HAL16swapFrameBuffersEv>:
 800a300:	b570      	push	{r4, r5, r6, lr}
 800a302:	f890 306a 	ldrb.w	r3, [r0, #106]	; 0x6a
 800a306:	4604      	mov	r4, r0
 800a308:	b19b      	cbz	r3, 800a332 <_ZN8touchgfx3HAL16swapFrameBuffersEv+0x32>
 800a30a:	2002      	movs	r0, #2
 800a30c:	f7f6 fe0c 	bl	8000f28 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>
 800a310:	2300      	movs	r3, #0
 800a312:	f884 306a 	strb.w	r3, [r4, #106]	; 0x6a
 800a316:	f884 3069 	strb.w	r3, [r4, #105]	; 0x69
 800a31a:	6823      	ldr	r3, [r4, #0]
 800a31c:	4620      	mov	r0, r4
 800a31e:	f8d3 50a0 	ldr.w	r5, [r3, #160]	; 0xa0
 800a322:	f7ff fd39 	bl	8009d98 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800a326:	462b      	mov	r3, r5
 800a328:	4601      	mov	r1, r0
 800a32a:	4620      	mov	r0, r4
 800a32c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800a330:	4718      	bx	r3
 800a332:	bd70      	pop	{r4, r5, r6, pc}

0800a334 <_ZN8touchgfx17LockFreeDMA_Queue7isEmptyEv>:
 800a334:	e9d0 2003 	ldrd	r2, r0, [r0, #12]
 800a338:	1a13      	subs	r3, r2, r0
 800a33a:	4258      	negs	r0, r3
 800a33c:	4158      	adcs	r0, r3
 800a33e:	4770      	bx	lr

0800a340 <_ZN8touchgfx17LockFreeDMA_Queue6isFullEv>:
 800a340:	e9d0 2303 	ldrd	r2, r3, [r0, #12]
 800a344:	1a9b      	subs	r3, r3, r2
 800a346:	2b00      	cmp	r3, #0
 800a348:	bfdc      	itt	le
 800a34a:	6882      	ldrle	r2, [r0, #8]
 800a34c:	189b      	addle	r3, r3, r2
 800a34e:	2b01      	cmp	r3, #1
 800a350:	bfcc      	ite	gt
 800a352:	2000      	movgt	r0, #0
 800a354:	2001      	movle	r0, #1
 800a356:	4770      	bx	lr

0800a358 <_ZN8touchgfx17LockFreeDMA_Queue5firstEv>:
 800a358:	6902      	ldr	r2, [r0, #16]
 800a35a:	6840      	ldr	r0, [r0, #4]
 800a35c:	eb00 1042 	add.w	r0, r0, r2, lsl #5
 800a360:	4770      	bx	lr

0800a362 <_ZN8touchgfx13DMA_Interface13seedExecutionEv>:
 800a362:	6803      	ldr	r3, [r0, #0]
 800a364:	691b      	ldr	r3, [r3, #16]
 800a366:	4718      	bx	r3

0800a368 <_ZN8touchgfx13DMA_Interface11enableAlphaEh>:
 800a368:	4770      	bx	lr

0800a36a <_ZN8touchgfx13DMA_Interface12disableAlphaEv>:
 800a36a:	4770      	bx	lr

0800a36c <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>:
 800a36c:	4770      	bx	lr
	...

0800a370 <_ZN8touchgfx13DMA_Interface7executeEv>:
 800a370:	b570      	push	{r4, r5, r6, lr}
 800a372:	2301      	movs	r3, #1
 800a374:	7203      	strb	r3, [r0, #8]
 800a376:	4604      	mov	r4, r0
 800a378:	6840      	ldr	r0, [r0, #4]
 800a37a:	6803      	ldr	r3, [r0, #0]
 800a37c:	699b      	ldr	r3, [r3, #24]
 800a37e:	4798      	blx	r3
 800a380:	6803      	ldr	r3, [r0, #0]
 800a382:	2b08      	cmp	r3, #8
 800a384:	4605      	mov	r5, r0
 800a386:	d01e      	beq.n	800a3c6 <_ZN8touchgfx13DMA_Interface7executeEv+0x56>
 800a388:	d80b      	bhi.n	800a3a2 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800a38a:	2b02      	cmp	r3, #2
 800a38c:	d027      	beq.n	800a3de <_ZN8touchgfx13DMA_Interface7executeEv+0x6e>
 800a38e:	2b04      	cmp	r3, #4
 800a390:	d011      	beq.n	800a3b6 <_ZN8touchgfx13DMA_Interface7executeEv+0x46>
 800a392:	2b01      	cmp	r3, #1
 800a394:	d028      	beq.n	800a3e8 <_ZN8touchgfx13DMA_Interface7executeEv+0x78>
 800a396:	4b17      	ldr	r3, [pc, #92]	; (800a3f4 <_ZN8touchgfx13DMA_Interface7executeEv+0x84>)
 800a398:	4a17      	ldr	r2, [pc, #92]	; (800a3f8 <_ZN8touchgfx13DMA_Interface7executeEv+0x88>)
 800a39a:	4818      	ldr	r0, [pc, #96]	; (800a3fc <_ZN8touchgfx13DMA_Interface7executeEv+0x8c>)
 800a39c:	218b      	movs	r1, #139	; 0x8b
 800a39e:	f00f f8ed 	bl	801957c <__assert_func>
 800a3a2:	2b40      	cmp	r3, #64	; 0x40
 800a3a4:	d020      	beq.n	800a3e8 <_ZN8touchgfx13DMA_Interface7executeEv+0x78>
 800a3a6:	d801      	bhi.n	800a3ac <_ZN8touchgfx13DMA_Interface7executeEv+0x3c>
 800a3a8:	2b20      	cmp	r3, #32
 800a3aa:	e7f3      	b.n	800a394 <_ZN8touchgfx13DMA_Interface7executeEv+0x24>
 800a3ac:	2b80      	cmp	r3, #128	; 0x80
 800a3ae:	d01b      	beq.n	800a3e8 <_ZN8touchgfx13DMA_Interface7executeEv+0x78>
 800a3b0:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 800a3b4:	e7ee      	b.n	800a394 <_ZN8touchgfx13DMA_Interface7executeEv+0x24>
 800a3b6:	6823      	ldr	r3, [r4, #0]
 800a3b8:	7f01      	ldrb	r1, [r0, #28]
 800a3ba:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800a3bc:	4620      	mov	r0, r4
 800a3be:	4798      	blx	r3
 800a3c0:	6823      	ldr	r3, [r4, #0]
 800a3c2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800a3c4:	e006      	b.n	800a3d4 <_ZN8touchgfx13DMA_Interface7executeEv+0x64>
 800a3c6:	6823      	ldr	r3, [r4, #0]
 800a3c8:	7f01      	ldrb	r1, [r0, #28]
 800a3ca:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800a3cc:	4620      	mov	r0, r4
 800a3ce:	4798      	blx	r3
 800a3d0:	6823      	ldr	r3, [r4, #0]
 800a3d2:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800a3d4:	4629      	mov	r1, r5
 800a3d6:	4620      	mov	r0, r4
 800a3d8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800a3dc:	4718      	bx	r3
 800a3de:	6823      	ldr	r3, [r4, #0]
 800a3e0:	4620      	mov	r0, r4
 800a3e2:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800a3e4:	4798      	blx	r3
 800a3e6:	e7f3      	b.n	800a3d0 <_ZN8touchgfx13DMA_Interface7executeEv+0x60>
 800a3e8:	6823      	ldr	r3, [r4, #0]
 800a3ea:	4620      	mov	r0, r4
 800a3ec:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800a3ee:	4798      	blx	r3
 800a3f0:	e7e6      	b.n	800a3c0 <_ZN8touchgfx13DMA_Interface7executeEv+0x50>
 800a3f2:	bf00      	nop
 800a3f4:	0801c0b0 	.word	0x0801c0b0
 800a3f8:	0801c170 	.word	0x0801c170
 800a3fc:	0801c0d5 	.word	0x0801c0d5

0800a400 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE>:
 800a400:	b570      	push	{r4, r5, r6, lr}
 800a402:	4604      	mov	r4, r0
 800a404:	460e      	mov	r6, r1
 800a406:	6860      	ldr	r0, [r4, #4]
 800a408:	6803      	ldr	r3, [r0, #0]
 800a40a:	685b      	ldr	r3, [r3, #4]
 800a40c:	4798      	blx	r3
 800a40e:	2800      	cmp	r0, #0
 800a410:	d1f9      	bne.n	800a406 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x6>
 800a412:	4d0b      	ldr	r5, [pc, #44]	; (800a440 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x40>)
 800a414:	6828      	ldr	r0, [r5, #0]
 800a416:	6803      	ldr	r3, [r0, #0]
 800a418:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 800a41a:	4798      	blx	r3
 800a41c:	f7f6 fec2 	bl	80011a4 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>
 800a420:	6860      	ldr	r0, [r4, #4]
 800a422:	6803      	ldr	r3, [r0, #0]
 800a424:	4631      	mov	r1, r6
 800a426:	689b      	ldr	r3, [r3, #8]
 800a428:	4798      	blx	r3
 800a42a:	6823      	ldr	r3, [r4, #0]
 800a42c:	4620      	mov	r0, r4
 800a42e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a430:	4798      	blx	r3
 800a432:	6828      	ldr	r0, [r5, #0]
 800a434:	6803      	ldr	r3, [r0, #0]
 800a436:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800a43a:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 800a43c:	4718      	bx	r3
 800a43e:	bf00      	nop
 800a440:	20012338 	.word	0x20012338

0800a444 <_ZN8touchgfx13DMA_Interface27waitForFrameBufferSemaphoreEv>:
 800a444:	b508      	push	{r3, lr}
 800a446:	f7f6 fe7f 	bl	8001148 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 800a44a:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800a44e:	f7f6 be93 	b.w	8001178 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

0800a452 <_ZN8touchgfx17LockFreeDMA_QueueD0Ev>:
 800a452:	b510      	push	{r4, lr}
 800a454:	2114      	movs	r1, #20
 800a456:	4604      	mov	r4, r0
 800a458:	f00f f864 	bl	8019524 <_ZdlPvj>
 800a45c:	4620      	mov	r0, r4
 800a45e:	bd10      	pop	{r4, pc}

0800a460 <_ZN8touchgfx13DMA_Interface5startEv>:
 800a460:	b510      	push	{r4, lr}
 800a462:	4604      	mov	r4, r0
 800a464:	6840      	ldr	r0, [r0, #4]
 800a466:	6803      	ldr	r3, [r0, #0]
 800a468:	681b      	ldr	r3, [r3, #0]
 800a46a:	4798      	blx	r3
 800a46c:	b948      	cbnz	r0, 800a482 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800a46e:	7a63      	ldrb	r3, [r4, #9]
 800a470:	b13b      	cbz	r3, 800a482 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800a472:	7a23      	ldrb	r3, [r4, #8]
 800a474:	b92b      	cbnz	r3, 800a482 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800a476:	6823      	ldr	r3, [r4, #0]
 800a478:	4620      	mov	r0, r4
 800a47a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800a47c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800a480:	4718      	bx	r3
 800a482:	bd10      	pop	{r4, pc}

0800a484 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE>:
 800a484:	b510      	push	{r4, lr}
 800a486:	e9d0 4203 	ldrd	r4, r2, [r0, #12]
 800a48a:	1b12      	subs	r2, r2, r4
 800a48c:	2a00      	cmp	r2, #0
 800a48e:	bfdc      	itt	le
 800a490:	6883      	ldrle	r3, [r0, #8]
 800a492:	18d2      	addle	r2, r2, r3
 800a494:	2a01      	cmp	r2, #1
 800a496:	dd18      	ble.n	800a4ca <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x46>
 800a498:	6843      	ldr	r3, [r0, #4]
 800a49a:	f101 021c 	add.w	r2, r1, #28
 800a49e:	eb03 1344 	add.w	r3, r3, r4, lsl #5
 800a4a2:	f851 4b04 	ldr.w	r4, [r1], #4
 800a4a6:	f843 4b04 	str.w	r4, [r3], #4
 800a4aa:	4291      	cmp	r1, r2
 800a4ac:	d1f9      	bne.n	800a4a2 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x1e>
 800a4ae:	880a      	ldrh	r2, [r1, #0]
 800a4b0:	801a      	strh	r2, [r3, #0]
 800a4b2:	788a      	ldrb	r2, [r1, #2]
 800a4b4:	709a      	strb	r2, [r3, #2]
 800a4b6:	68c3      	ldr	r3, [r0, #12]
 800a4b8:	6882      	ldr	r2, [r0, #8]
 800a4ba:	f3bf 8f5b 	dmb	ish
 800a4be:	3301      	adds	r3, #1
 800a4c0:	429a      	cmp	r2, r3
 800a4c2:	bfd8      	it	le
 800a4c4:	1a9b      	suble	r3, r3, r2
 800a4c6:	60c3      	str	r3, [r0, #12]
 800a4c8:	bd10      	pop	{r4, pc}
 800a4ca:	4b03      	ldr	r3, [pc, #12]	; (800a4d8 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x54>)
 800a4cc:	4a03      	ldr	r2, [pc, #12]	; (800a4dc <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x58>)
 800a4ce:	4804      	ldr	r0, [pc, #16]	; (800a4e0 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x5c>)
 800a4d0:	2139      	movs	r1, #57	; 0x39
 800a4d2:	f00f f853 	bl	801957c <__assert_func>
 800a4d6:	bf00      	nop
 800a4d8:	0801c0fb 	.word	0x0801c0fb
 800a4dc:	0801c1a0 	.word	0x0801c1a0
 800a4e0:	0801c0d5 	.word	0x0801c0d5

0800a4e4 <_ZN8touchgfx17LockFreeDMA_Queue3popEv>:
 800a4e4:	b510      	push	{r4, lr}
 800a4e6:	6803      	ldr	r3, [r0, #0]
 800a4e8:	681b      	ldr	r3, [r3, #0]
 800a4ea:	4604      	mov	r4, r0
 800a4ec:	4798      	blx	r3
 800a4ee:	b128      	cbz	r0, 800a4fc <_ZN8touchgfx17LockFreeDMA_Queue3popEv+0x18>
 800a4f0:	4b07      	ldr	r3, [pc, #28]	; (800a510 <_ZN8touchgfx17LockFreeDMA_Queue3popEv+0x2c>)
 800a4f2:	4a08      	ldr	r2, [pc, #32]	; (800a514 <_ZN8touchgfx17LockFreeDMA_Queue3popEv+0x30>)
 800a4f4:	4808      	ldr	r0, [pc, #32]	; (800a518 <_ZN8touchgfx17LockFreeDMA_Queue3popEv+0x34>)
 800a4f6:	213f      	movs	r1, #63	; 0x3f
 800a4f8:	f00f f840 	bl	801957c <__assert_func>
 800a4fc:	6923      	ldr	r3, [r4, #16]
 800a4fe:	68a2      	ldr	r2, [r4, #8]
 800a500:	f3bf 8f5b 	dmb	ish
 800a504:	3301      	adds	r3, #1
 800a506:	429a      	cmp	r2, r3
 800a508:	bfd8      	it	le
 800a50a:	1a9b      	suble	r3, r3, r2
 800a50c:	6123      	str	r3, [r4, #16]
 800a50e:	bd10      	pop	{r4, pc}
 800a510:	0801c11e 	.word	0x0801c11e
 800a514:	0801c1ee 	.word	0x0801c1ee
 800a518:	0801c0d5 	.word	0x0801c0d5

0800a51c <_ZN8touchgfx13DMA_Interface16executeCompletedEv>:
 800a51c:	b570      	push	{r4, r5, r6, lr}
 800a51e:	4604      	mov	r4, r0
 800a520:	6840      	ldr	r0, [r0, #4]
 800a522:	6803      	ldr	r3, [r0, #0]
 800a524:	681b      	ldr	r3, [r3, #0]
 800a526:	4798      	blx	r3
 800a528:	4605      	mov	r5, r0
 800a52a:	b930      	cbnz	r0, 800a53a <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 800a52c:	7a23      	ldrb	r3, [r4, #8]
 800a52e:	b123      	cbz	r3, 800a53a <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 800a530:	6860      	ldr	r0, [r4, #4]
 800a532:	6803      	ldr	r3, [r0, #0]
 800a534:	695b      	ldr	r3, [r3, #20]
 800a536:	4798      	blx	r3
 800a538:	7225      	strb	r5, [r4, #8]
 800a53a:	6860      	ldr	r0, [r4, #4]
 800a53c:	6803      	ldr	r3, [r0, #0]
 800a53e:	681b      	ldr	r3, [r3, #0]
 800a540:	4798      	blx	r3
 800a542:	b928      	cbnz	r0, 800a550 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x34>
 800a544:	6823      	ldr	r3, [r4, #0]
 800a546:	4620      	mov	r0, r4
 800a548:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800a54a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800a54e:	4718      	bx	r3
 800a550:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800a554:	f7f6 be3e 	b.w	80011d4 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>

0800a558 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>:
 800a558:	b510      	push	{r4, lr}
 800a55a:	4c04      	ldr	r4, [pc, #16]	; (800a56c <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi+0x14>)
 800a55c:	6082      	str	r2, [r0, #8]
 800a55e:	2200      	movs	r2, #0
 800a560:	e9c0 4100 	strd	r4, r1, [r0]
 800a564:	e9c0 2203 	strd	r2, r2, [r0, #12]
 800a568:	bd10      	pop	{r4, pc}
 800a56a:	bf00      	nop
 800a56c:	0801c154 	.word	0x0801c154

0800a570 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>:
 800a570:	6840      	ldr	r0, [r0, #4]
 800a572:	6803      	ldr	r3, [r0, #0]
 800a574:	681b      	ldr	r3, [r3, #0]
 800a576:	4718      	bx	r3

0800a578 <_ZNK8touchgfx14AbstractButton15getPressedStateEv>:
 800a578:	f890 002c 	ldrb.w	r0, [r0, #44]	; 0x2c
 800a57c:	4770      	bx	lr

0800a57e <_ZN8touchgfx12ToggleButtonD1Ev>:
 800a57e:	4770      	bx	lr

0800a580 <_ZN8touchgfx12ToggleButton16handleClickEventERKNS_10ClickEventE>:
 800a580:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 800a584:	b133      	cbz	r3, 800a594 <_ZN8touchgfx12ToggleButton16handleClickEventERKNS_10ClickEventE+0x14>
 800a586:	790b      	ldrb	r3, [r1, #4]
 800a588:	2b01      	cmp	r3, #1
 800a58a:	bf01      	itttt	eq
 800a58c:	8dc3      	ldrheq	r3, [r0, #46]	; 0x2e
 800a58e:	8e02      	ldrheq	r2, [r0, #48]	; 0x30
 800a590:	85c2      	strheq	r2, [r0, #46]	; 0x2e
 800a592:	8603      	strheq	r3, [r0, #48]	; 0x30
 800a594:	f00e bf98 	b.w	80194c8 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE>

0800a598 <_ZN8touchgfx12ToggleButton10setBitmapsERKNS_6BitmapES3_>:
 800a598:	8813      	ldrh	r3, [r2, #0]
 800a59a:	8683      	strh	r3, [r0, #52]	; 0x34
 800a59c:	f000 ba3a 	b.w	800aa14 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>

0800a5a0 <_ZN8touchgfx12ToggleButtonD0Ev>:
 800a5a0:	b510      	push	{r4, lr}
 800a5a2:	2138      	movs	r1, #56	; 0x38
 800a5a4:	4604      	mov	r4, r0
 800a5a6:	f00e ffbd 	bl	8019524 <_ZdlPvj>
 800a5aa:	4620      	mov	r0, r4
 800a5ac:	bd10      	pop	{r4, pc}

0800a5ae <_ZNK8touchgfx8TextArea12getSolidRectEv>:
 800a5ae:	2200      	movs	r2, #0
 800a5b0:	8002      	strh	r2, [r0, #0]
 800a5b2:	8042      	strh	r2, [r0, #2]
 800a5b4:	8082      	strh	r2, [r0, #4]
 800a5b6:	80c2      	strh	r2, [r0, #6]
 800a5b8:	4770      	bx	lr

0800a5ba <_ZN8touchgfx8TextArea13setXBaselineYEss>:
 800a5ba:	b570      	push	{r4, r5, r6, lr}
 800a5bc:	6803      	ldr	r3, [r0, #0]
 800a5be:	4604      	mov	r4, r0
 800a5c0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a5c2:	4615      	mov	r5, r2
 800a5c4:	4798      	blx	r3
 800a5c6:	6823      	ldr	r3, [r4, #0]
 800a5c8:	4629      	mov	r1, r5
 800a5ca:	4620      	mov	r0, r4
 800a5cc:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 800a5ce:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800a5d2:	4718      	bx	r3

0800a5d4 <_ZN8touchgfx8TextAreaD1Ev>:
 800a5d4:	4770      	bx	lr
	...

0800a5d8 <_ZNK8touchgfx8TextArea12getTextWidthEv>:
 800a5d8:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800a5da:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 800a5dc:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800a5e0:	4299      	cmp	r1, r3
 800a5e2:	d029      	beq.n	800a638 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x60>
 800a5e4:	4b15      	ldr	r3, [pc, #84]	; (800a63c <_ZNK8touchgfx8TextArea12getTextWidthEv+0x64>)
 800a5e6:	681b      	ldr	r3, [r3, #0]
 800a5e8:	b92b      	cbnz	r3, 800a5f6 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x1e>
 800a5ea:	4b15      	ldr	r3, [pc, #84]	; (800a640 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x68>)
 800a5ec:	4a15      	ldr	r2, [pc, #84]	; (800a644 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x6c>)
 800a5ee:	21b1      	movs	r1, #177	; 0xb1
 800a5f0:	4815      	ldr	r0, [pc, #84]	; (800a648 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x70>)
 800a5f2:	f00e ffc3 	bl	801957c <__assert_func>
 800a5f6:	4a15      	ldr	r2, [pc, #84]	; (800a64c <_ZNK8touchgfx8TextArea12getTextWidthEv+0x74>)
 800a5f8:	8812      	ldrh	r2, [r2, #0]
 800a5fa:	428a      	cmp	r2, r1
 800a5fc:	d803      	bhi.n	800a606 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x2e>
 800a5fe:	4b14      	ldr	r3, [pc, #80]	; (800a650 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x78>)
 800a600:	4a10      	ldr	r2, [pc, #64]	; (800a644 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x6c>)
 800a602:	21b2      	movs	r1, #178	; 0xb2
 800a604:	e7f4      	b.n	800a5f0 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x18>
 800a606:	eb03 0241 	add.w	r2, r3, r1, lsl #1
 800a60a:	f813 0011 	ldrb.w	r0, [r3, r1, lsl #1]
 800a60e:	4b11      	ldr	r3, [pc, #68]	; (800a654 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x7c>)
 800a610:	7854      	ldrb	r4, [r2, #1]
 800a612:	681b      	ldr	r3, [r3, #0]
 800a614:	f853 5020 	ldr.w	r5, [r3, r0, lsl #2]
 800a618:	682b      	ldr	r3, [r5, #0]
 800a61a:	69de      	ldr	r6, [r3, #28]
 800a61c:	4b0e      	ldr	r3, [pc, #56]	; (800a658 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x80>)
 800a61e:	6818      	ldr	r0, [r3, #0]
 800a620:	f7f8 fd28 	bl	8003074 <_ZNK8touchgfx5Texts7getTextEt>
 800a624:	f3c4 0481 	ubfx	r4, r4, #2, #2
 800a628:	2300      	movs	r3, #0
 800a62a:	4602      	mov	r2, r0
 800a62c:	9300      	str	r3, [sp, #0]
 800a62e:	4621      	mov	r1, r4
 800a630:	4628      	mov	r0, r5
 800a632:	47b0      	blx	r6
 800a634:	b002      	add	sp, #8
 800a636:	bd70      	pop	{r4, r5, r6, pc}
 800a638:	2000      	movs	r0, #0
 800a63a:	e7fb      	b.n	800a634 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x5c>
 800a63c:	200123a8 	.word	0x200123a8
 800a640:	0801c290 	.word	0x0801c290
 800a644:	0801c3cc 	.word	0x0801c3cc
 800a648:	0801c2d2 	.word	0x0801c2d2
 800a64c:	200123ac 	.word	0x200123ac
 800a650:	0801c2fb 	.word	0x0801c2fb
 800a654:	200123b0 	.word	0x200123b0
 800a658:	200123b4 	.word	0x200123b4

0800a65c <_ZN8touchgfx8TextArea12setBaselineYEs>:
 800a65c:	b570      	push	{r4, r5, r6, lr}
 800a65e:	6803      	ldr	r3, [r0, #0]
 800a660:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 800a662:	6b1e      	ldr	r6, [r3, #48]	; 0x30
 800a664:	4b11      	ldr	r3, [pc, #68]	; (800a6ac <_ZN8touchgfx8TextArea12setBaselineYEs+0x50>)
 800a666:	681b      	ldr	r3, [r3, #0]
 800a668:	4604      	mov	r4, r0
 800a66a:	b28d      	uxth	r5, r1
 800a66c:	b92b      	cbnz	r3, 800a67a <_ZN8touchgfx8TextArea12setBaselineYEs+0x1e>
 800a66e:	4b10      	ldr	r3, [pc, #64]	; (800a6b0 <_ZN8touchgfx8TextArea12setBaselineYEs+0x54>)
 800a670:	4a10      	ldr	r2, [pc, #64]	; (800a6b4 <_ZN8touchgfx8TextArea12setBaselineYEs+0x58>)
 800a672:	21b1      	movs	r1, #177	; 0xb1
 800a674:	4810      	ldr	r0, [pc, #64]	; (800a6b8 <_ZN8touchgfx8TextArea12setBaselineYEs+0x5c>)
 800a676:	f00e ff81 	bl	801957c <__assert_func>
 800a67a:	4910      	ldr	r1, [pc, #64]	; (800a6bc <_ZN8touchgfx8TextArea12setBaselineYEs+0x60>)
 800a67c:	8809      	ldrh	r1, [r1, #0]
 800a67e:	4291      	cmp	r1, r2
 800a680:	d803      	bhi.n	800a68a <_ZN8touchgfx8TextArea12setBaselineYEs+0x2e>
 800a682:	4b0f      	ldr	r3, [pc, #60]	; (800a6c0 <_ZN8touchgfx8TextArea12setBaselineYEs+0x64>)
 800a684:	4a0b      	ldr	r2, [pc, #44]	; (800a6b4 <_ZN8touchgfx8TextArea12setBaselineYEs+0x58>)
 800a686:	21b2      	movs	r1, #178	; 0xb2
 800a688:	e7f4      	b.n	800a674 <_ZN8touchgfx8TextArea12setBaselineYEs+0x18>
 800a68a:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
 800a68e:	4b0d      	ldr	r3, [pc, #52]	; (800a6c4 <_ZN8touchgfx8TextArea12setBaselineYEs+0x68>)
 800a690:	681b      	ldr	r3, [r3, #0]
 800a692:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 800a696:	6803      	ldr	r3, [r0, #0]
 800a698:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a69a:	4798      	blx	r3
 800a69c:	1a29      	subs	r1, r5, r0
 800a69e:	4633      	mov	r3, r6
 800a6a0:	4620      	mov	r0, r4
 800a6a2:	b209      	sxth	r1, r1
 800a6a4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800a6a8:	4718      	bx	r3
 800a6aa:	bf00      	nop
 800a6ac:	200123a8 	.word	0x200123a8
 800a6b0:	0801c290 	.word	0x0801c290
 800a6b4:	0801c3cc 	.word	0x0801c3cc
 800a6b8:	0801c2d2 	.word	0x0801c2d2
 800a6bc:	200123ac 	.word	0x200123ac
 800a6c0:	0801c2fb 	.word	0x0801c2fb
 800a6c4:	200123b0 	.word	0x200123b0

0800a6c8 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE>:
 800a6c8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800a6cc:	8d83      	ldrh	r3, [r0, #44]	; 0x2c
 800a6ce:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800a6d2:	4293      	cmp	r3, r2
 800a6d4:	b08c      	sub	sp, #48	; 0x30
 800a6d6:	4604      	mov	r4, r0
 800a6d8:	4688      	mov	r8, r1
 800a6da:	d05f      	beq.n	800a79c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd4>
 800a6dc:	4e31      	ldr	r6, [pc, #196]	; (800a7a4 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xdc>)
 800a6de:	6832      	ldr	r2, [r6, #0]
 800a6e0:	b92a      	cbnz	r2, 800a6ee <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x26>
 800a6e2:	4b31      	ldr	r3, [pc, #196]	; (800a7a8 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xe0>)
 800a6e4:	4a31      	ldr	r2, [pc, #196]	; (800a7ac <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xe4>)
 800a6e6:	21b1      	movs	r1, #177	; 0xb1
 800a6e8:	4831      	ldr	r0, [pc, #196]	; (800a7b0 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xe8>)
 800a6ea:	f00e ff47 	bl	801957c <__assert_func>
 800a6ee:	4d31      	ldr	r5, [pc, #196]	; (800a7b4 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xec>)
 800a6f0:	8829      	ldrh	r1, [r5, #0]
 800a6f2:	4299      	cmp	r1, r3
 800a6f4:	d803      	bhi.n	800a6fe <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x36>
 800a6f6:	4b30      	ldr	r3, [pc, #192]	; (800a7b8 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xf0>)
 800a6f8:	4a2c      	ldr	r2, [pc, #176]	; (800a7ac <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xe4>)
 800a6fa:	21b2      	movs	r1, #178	; 0xb2
 800a6fc:	e7f4      	b.n	800a6e8 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x20>
 800a6fe:	eb02 0143 	add.w	r1, r2, r3, lsl #1
 800a702:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 800a706:	4b2d      	ldr	r3, [pc, #180]	; (800a7bc <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xf4>)
 800a708:	681b      	ldr	r3, [r3, #0]
 800a70a:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 800a70e:	2a00      	cmp	r2, #0
 800a710:	d044      	beq.n	800a79c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd4>
 800a712:	784b      	ldrb	r3, [r1, #1]
 800a714:	9207      	str	r2, [sp, #28]
 800a716:	f3c3 0901 	ubfx	r9, r3, #0, #2
 800a71a:	f3c3 0381 	ubfx	r3, r3, #2, #2
 800a71e:	f88d 3021 	strb.w	r3, [sp, #33]	; 0x21
 800a722:	4b27      	ldr	r3, [pc, #156]	; (800a7c0 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xf8>)
 800a724:	f890 a036 	ldrb.w	sl, [r0, #54]	; 0x36
 800a728:	681b      	ldr	r3, [r3, #0]
 800a72a:	f9b0 c034 	ldrsh.w	ip, [r0, #52]	; 0x34
 800a72e:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 800a732:	f890 e038 	ldrb.w	lr, [r0, #56]	; 0x38
 800a736:	f890 7037 	ldrb.w	r7, [r0, #55]	; 0x37
 800a73a:	f890 1039 	ldrb.w	r1, [r0, #57]	; 0x39
 800a73e:	6b00      	ldr	r0, [r0, #48]	; 0x30
 800a740:	9009      	str	r0, [sp, #36]	; 0x24
 800a742:	f88d a02a 	strb.w	sl, [sp, #42]	; 0x2a
 800a746:	f88d 9020 	strb.w	r9, [sp, #32]
 800a74a:	f88d e022 	strb.w	lr, [sp, #34]	; 0x22
 800a74e:	f8ad c028 	strh.w	ip, [sp, #40]	; 0x28
 800a752:	f88d 702b 	strb.w	r7, [sp, #43]	; 0x2b
 800a756:	f88d 102c 	strb.w	r1, [sp, #44]	; 0x2c
 800a75a:	b10a      	cbz	r2, 800a760 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x98>
 800a75c:	6cdf      	ldr	r7, [r3, #76]	; 0x4c
 800a75e:	b907      	cbnz	r7, 800a762 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x9a>
 800a760:	689f      	ldr	r7, [r3, #8]
 800a762:	f10d 0914 	add.w	r9, sp, #20
 800a766:	4621      	mov	r1, r4
 800a768:	4648      	mov	r0, r9
 800a76a:	f001 ffdb 	bl	800c724 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800a76e:	6833      	ldr	r3, [r6, #0]
 800a770:	2b00      	cmp	r3, #0
 800a772:	d0b6      	beq.n	800a6e2 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x1a>
 800a774:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 800a776:	882b      	ldrh	r3, [r5, #0]
 800a778:	428b      	cmp	r3, r1
 800a77a:	d9bc      	bls.n	800a6f6 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x2e>
 800a77c:	4b11      	ldr	r3, [pc, #68]	; (800a7c4 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xfc>)
 800a77e:	6818      	ldr	r0, [r3, #0]
 800a780:	f7f8 fc78 	bl	8003074 <_ZNK8touchgfx5Texts7getTextEt>
 800a784:	2300      	movs	r3, #0
 800a786:	e9cd 3302 	strd	r3, r3, [sp, #8]
 800a78a:	ab07      	add	r3, sp, #28
 800a78c:	9001      	str	r0, [sp, #4]
 800a78e:	9300      	str	r3, [sp, #0]
 800a790:	e899 0006 	ldmia.w	r9, {r1, r2}
 800a794:	4643      	mov	r3, r8
 800a796:	4638      	mov	r0, r7
 800a798:	f7f8 fc20 	bl	8002fdc <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 800a79c:	b00c      	add	sp, #48	; 0x30
 800a79e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800a7a2:	bf00      	nop
 800a7a4:	200123a8 	.word	0x200123a8
 800a7a8:	0801c290 	.word	0x0801c290
 800a7ac:	0801c3cc 	.word	0x0801c3cc
 800a7b0:	0801c2d2 	.word	0x0801c2d2
 800a7b4:	200123ac 	.word	0x200123ac
 800a7b8:	0801c2fb 	.word	0x0801c2fb
 800a7bc:	200123b0 	.word	0x200123b0
 800a7c0:	20012338 	.word	0x20012338
 800a7c4:	200123b4 	.word	0x200123b4

0800a7c8 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz>:
 800a7c8:	b40e      	push	{r1, r2, r3}
 800a7ca:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800a7ce:	8d83      	ldrh	r3, [r0, #44]	; 0x2c
 800a7d0:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800a7d4:	4293      	cmp	r3, r2
 800a7d6:	b09b      	sub	sp, #108	; 0x6c
 800a7d8:	4604      	mov	r4, r0
 800a7da:	d061      	beq.n	800a8a0 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xd8>
 800a7dc:	f8df a0d4 	ldr.w	sl, [pc, #212]	; 800a8b4 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xec>
 800a7e0:	aa24      	add	r2, sp, #144	; 0x90
 800a7e2:	9203      	str	r2, [sp, #12]
 800a7e4:	f8da 2000 	ldr.w	r2, [sl]
 800a7e8:	b92a      	cbnz	r2, 800a7f6 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0x2e>
 800a7ea:	4b2e      	ldr	r3, [pc, #184]	; (800a8a4 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xdc>)
 800a7ec:	4a2e      	ldr	r2, [pc, #184]	; (800a8a8 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xe0>)
 800a7ee:	21b1      	movs	r1, #177	; 0xb1
 800a7f0:	482e      	ldr	r0, [pc, #184]	; (800a8ac <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xe4>)
 800a7f2:	f00e fec3 	bl	801957c <__assert_func>
 800a7f6:	f8df 80c0 	ldr.w	r8, [pc, #192]	; 800a8b8 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xf0>
 800a7fa:	f8b8 1000 	ldrh.w	r1, [r8]
 800a7fe:	4299      	cmp	r1, r3
 800a800:	d803      	bhi.n	800a80a <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0x42>
 800a802:	4b2b      	ldr	r3, [pc, #172]	; (800a8b0 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xe8>)
 800a804:	4a28      	ldr	r2, [pc, #160]	; (800a8a8 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xe0>)
 800a806:	21b2      	movs	r1, #178	; 0xb2
 800a808:	e7f2      	b.n	800a7f0 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0x28>
 800a80a:	f8df 90b0 	ldr.w	r9, [pc, #176]	; 800a8bc <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xf4>
 800a80e:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 800a812:	f8d9 3000 	ldr.w	r3, [r9]
 800a816:	f853 7022 	ldr.w	r7, [r3, r2, lsl #2]
 800a81a:	683b      	ldr	r3, [r7, #0]
 800a81c:	4638      	mov	r0, r7
 800a81e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800a820:	4798      	blx	r3
 800a822:	4606      	mov	r6, r0
 800a824:	b205      	sxth	r5, r0
 800a826:	a804      	add	r0, sp, #16
 800a828:	f002 fb90 	bl	800cf4c <_ZN8touchgfx12TextProviderC1Ev>
 800a82c:	683b      	ldr	r3, [r7, #0]
 800a82e:	4638      	mov	r0, r7
 800a830:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800a832:	4798      	blx	r3
 800a834:	9923      	ldr	r1, [sp, #140]	; 0x8c
 800a836:	9a03      	ldr	r2, [sp, #12]
 800a838:	4603      	mov	r3, r0
 800a83a:	a804      	add	r0, sp, #16
 800a83c:	f002 fbcb 	bl	800cfd6 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_>
 800a840:	f8da 3000 	ldr.w	r3, [sl]
 800a844:	f894 1039 	ldrb.w	r1, [r4, #57]	; 0x39
 800a848:	2b00      	cmp	r3, #0
 800a84a:	d0ce      	beq.n	800a7ea <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0x22>
 800a84c:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 800a84e:	f8b8 0000 	ldrh.w	r0, [r8]
 800a852:	4290      	cmp	r0, r2
 800a854:	d9d5      	bls.n	800a802 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0x3a>
 800a856:	eb03 0742 	add.w	r7, r3, r2, lsl #1
 800a85a:	f813 0012 	ldrb.w	r0, [r3, r2, lsl #1]
 800a85e:	787a      	ldrb	r2, [r7, #1]
 800a860:	f8d9 3000 	ldr.w	r3, [r9]
 800a864:	f9b4 7008 	ldrsh.w	r7, [r4, #8]
 800a868:	9700      	str	r7, [sp, #0]
 800a86a:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
 800a86e:	f3c2 0281 	ubfx	r2, r2, #2, #2
 800a872:	a804      	add	r0, sp, #16
 800a874:	f000 fdc8 	bl	800b408 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>
 800a878:	f9b4 2034 	ldrsh.w	r2, [r4, #52]	; 0x34
 800a87c:	18a9      	adds	r1, r5, r2
 800a87e:	2900      	cmp	r1, #0
 800a880:	b203      	sxth	r3, r0
 800a882:	dd0b      	ble.n	800a89c <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xd4>
 800a884:	3b01      	subs	r3, #1
 800a886:	fb13 f302 	smulbb	r3, r3, r2
 800a88a:	fb16 3300 	smlabb	r3, r6, r0, r3
 800a88e:	b21d      	sxth	r5, r3
 800a890:	4628      	mov	r0, r5
 800a892:	b01b      	add	sp, #108	; 0x6c
 800a894:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800a898:	b003      	add	sp, #12
 800a89a:	4770      	bx	lr
 800a89c:	2b00      	cmp	r3, #0
 800a89e:	dcf7      	bgt.n	800a890 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc8>
 800a8a0:	2500      	movs	r5, #0
 800a8a2:	e7f5      	b.n	800a890 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc8>
 800a8a4:	0801c290 	.word	0x0801c290
 800a8a8:	0801c3cc 	.word	0x0801c3cc
 800a8ac:	0801c2d2 	.word	0x0801c2d2
 800a8b0:	0801c2fb 	.word	0x0801c2fb
 800a8b4:	200123a8 	.word	0x200123a8
 800a8b8:	200123ac 	.word	0x200123ac
 800a8bc:	200123b0 	.word	0x200123b0

0800a8c0 <_ZN8touchgfx8TextAreaD0Ev>:
 800a8c0:	b510      	push	{r4, lr}
 800a8c2:	213c      	movs	r1, #60	; 0x3c
 800a8c4:	4604      	mov	r4, r0
 800a8c6:	f00e fe2d 	bl	8019524 <_ZdlPvj>
 800a8ca:	4620      	mov	r0, r4
 800a8cc:	bd10      	pop	{r4, pc}
	...

0800a8d0 <_ZN8touchgfx8TextArea13getTextHeightEv>:
 800a8d0:	b570      	push	{r4, r5, r6, lr}
 800a8d2:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 800a8d4:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800a8d8:	4299      	cmp	r1, r3
 800a8da:	4604      	mov	r4, r0
 800a8dc:	d01e      	beq.n	800a91c <_ZN8touchgfx8TextArea13getTextHeightEv+0x4c>
 800a8de:	6803      	ldr	r3, [r0, #0]
 800a8e0:	6f1d      	ldr	r5, [r3, #112]	; 0x70
 800a8e2:	4b0f      	ldr	r3, [pc, #60]	; (800a920 <_ZN8touchgfx8TextArea13getTextHeightEv+0x50>)
 800a8e4:	681b      	ldr	r3, [r3, #0]
 800a8e6:	b92b      	cbnz	r3, 800a8f4 <_ZN8touchgfx8TextArea13getTextHeightEv+0x24>
 800a8e8:	4b0e      	ldr	r3, [pc, #56]	; (800a924 <_ZN8touchgfx8TextArea13getTextHeightEv+0x54>)
 800a8ea:	4a0f      	ldr	r2, [pc, #60]	; (800a928 <_ZN8touchgfx8TextArea13getTextHeightEv+0x58>)
 800a8ec:	21b1      	movs	r1, #177	; 0xb1
 800a8ee:	480f      	ldr	r0, [pc, #60]	; (800a92c <_ZN8touchgfx8TextArea13getTextHeightEv+0x5c>)
 800a8f0:	f00e fe44 	bl	801957c <__assert_func>
 800a8f4:	4b0e      	ldr	r3, [pc, #56]	; (800a930 <_ZN8touchgfx8TextArea13getTextHeightEv+0x60>)
 800a8f6:	881b      	ldrh	r3, [r3, #0]
 800a8f8:	428b      	cmp	r3, r1
 800a8fa:	d803      	bhi.n	800a904 <_ZN8touchgfx8TextArea13getTextHeightEv+0x34>
 800a8fc:	4b0d      	ldr	r3, [pc, #52]	; (800a934 <_ZN8touchgfx8TextArea13getTextHeightEv+0x64>)
 800a8fe:	4a0a      	ldr	r2, [pc, #40]	; (800a928 <_ZN8touchgfx8TextArea13getTextHeightEv+0x58>)
 800a900:	21b2      	movs	r1, #178	; 0xb2
 800a902:	e7f4      	b.n	800a8ee <_ZN8touchgfx8TextArea13getTextHeightEv+0x1e>
 800a904:	4b0c      	ldr	r3, [pc, #48]	; (800a938 <_ZN8touchgfx8TextArea13getTextHeightEv+0x68>)
 800a906:	6818      	ldr	r0, [r3, #0]
 800a908:	f7f8 fbb4 	bl	8003074 <_ZNK8touchgfx5Texts7getTextEt>
 800a90c:	2300      	movs	r3, #0
 800a90e:	4601      	mov	r1, r0
 800a910:	46ac      	mov	ip, r5
 800a912:	4620      	mov	r0, r4
 800a914:	461a      	mov	r2, r3
 800a916:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800a91a:	4760      	bx	ip
 800a91c:	2000      	movs	r0, #0
 800a91e:	bd70      	pop	{r4, r5, r6, pc}
 800a920:	200123a8 	.word	0x200123a8
 800a924:	0801c290 	.word	0x0801c290
 800a928:	0801c3cc 	.word	0x0801c3cc
 800a92c:	0801c2d2 	.word	0x0801c2d2
 800a930:	200123ac 	.word	0x200123ac
 800a934:	0801c2fb 	.word	0x0801c2fb
 800a938:	200123b4 	.word	0x200123b4

0800a93c <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>:
 800a93c:	b570      	push	{r4, r5, r6, lr}
 800a93e:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 800a940:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800a944:	429a      	cmp	r2, r3
 800a946:	4604      	mov	r4, r0
 800a948:	d021      	beq.n	800a98e <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x52>
 800a94a:	6803      	ldr	r3, [r0, #0]
 800a94c:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 800a94e:	4798      	blx	r3
 800a950:	6823      	ldr	r3, [r4, #0]
 800a952:	4605      	mov	r5, r0
 800a954:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 800a956:	4620      	mov	r0, r4
 800a958:	4798      	blx	r3
 800a95a:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 800a95e:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 800a962:	6823      	ldr	r3, [r4, #0]
 800a964:	4606      	mov	r6, r0
 800a966:	b22d      	sxth	r5, r5
 800a968:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800a96a:	d109      	bne.n	800a980 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x44>
 800a96c:	4629      	mov	r1, r5
 800a96e:	4620      	mov	r0, r4
 800a970:	4798      	blx	r3
 800a972:	6823      	ldr	r3, [r4, #0]
 800a974:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800a976:	4631      	mov	r1, r6
 800a978:	4620      	mov	r0, r4
 800a97a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800a97e:	4718      	bx	r3
 800a980:	4601      	mov	r1, r0
 800a982:	4620      	mov	r0, r4
 800a984:	4798      	blx	r3
 800a986:	6823      	ldr	r3, [r4, #0]
 800a988:	4629      	mov	r1, r5
 800a98a:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800a98c:	e7f4      	b.n	800a978 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x3c>
 800a98e:	bd70      	pop	{r4, r5, r6, pc}

0800a990 <_ZN8touchgfx8TextArea12setTypedTextENS_9TypedTextE>:
 800a990:	888a      	ldrh	r2, [r1, #4]
 800a992:	8582      	strh	r2, [r0, #44]	; 0x2c
 800a994:	f9b0 2008 	ldrsh.w	r2, [r0, #8]
 800a998:	b922      	cbnz	r2, 800a9a4 <_ZN8touchgfx8TextArea12setTypedTextENS_9TypedTextE+0x14>
 800a99a:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 800a99e:	b90b      	cbnz	r3, 800a9a4 <_ZN8touchgfx8TextArea12setTypedTextENS_9TypedTextE+0x14>
 800a9a0:	f7ff bfcc 	b.w	800a93c <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
 800a9a4:	4770      	bx	lr

0800a9a6 <_ZNK8touchgfx3Box12getSolidRectEv>:
 800a9a6:	2300      	movs	r3, #0
 800a9a8:	8003      	strh	r3, [r0, #0]
 800a9aa:	8043      	strh	r3, [r0, #2]
 800a9ac:	8083      	strh	r3, [r0, #4]
 800a9ae:	80c3      	strh	r3, [r0, #6]
 800a9b0:	f891 302c 	ldrb.w	r3, [r1, #44]	; 0x2c
 800a9b4:	b91b      	cbnz	r3, 800a9be <_ZNK8touchgfx3Box12getSolidRectEv+0x18>
 800a9b6:	f891 3026 	ldrb.w	r3, [r1, #38]	; 0x26
 800a9ba:	2bff      	cmp	r3, #255	; 0xff
 800a9bc:	d103      	bne.n	800a9c6 <_ZNK8touchgfx3Box12getSolidRectEv+0x20>
 800a9be:	890b      	ldrh	r3, [r1, #8]
 800a9c0:	8083      	strh	r3, [r0, #4]
 800a9c2:	894b      	ldrh	r3, [r1, #10]
 800a9c4:	80c3      	strh	r3, [r0, #6]
 800a9c6:	4770      	bx	lr

0800a9c8 <_ZNK8touchgfx3Box4drawERKNS_4RectE>:
 800a9c8:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800a9ca:	4604      	mov	r4, r0
 800a9cc:	6808      	ldr	r0, [r1, #0]
 800a9ce:	6849      	ldr	r1, [r1, #4]
 800a9d0:	466b      	mov	r3, sp
 800a9d2:	c303      	stmia	r3!, {r0, r1}
 800a9d4:	6823      	ldr	r3, [r4, #0]
 800a9d6:	4669      	mov	r1, sp
 800a9d8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800a9da:	4620      	mov	r0, r4
 800a9dc:	4798      	blx	r3
 800a9de:	4b08      	ldr	r3, [pc, #32]	; (800aa00 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x38>)
 800a9e0:	681b      	ldr	r3, [r3, #0]
 800a9e2:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 800a9e6:	b10a      	cbz	r2, 800a9ec <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x24>
 800a9e8:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 800a9ea:	b900      	cbnz	r0, 800a9ee <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x26>
 800a9ec:	6898      	ldr	r0, [r3, #8]
 800a9ee:	6803      	ldr	r3, [r0, #0]
 800a9f0:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 800a9f2:	699d      	ldr	r5, [r3, #24]
 800a9f4:	f894 3026 	ldrb.w	r3, [r4, #38]	; 0x26
 800a9f8:	4669      	mov	r1, sp
 800a9fa:	47a8      	blx	r5
 800a9fc:	b003      	add	sp, #12
 800a9fe:	bd30      	pop	{r4, r5, pc}
 800aa00:	20012338 	.word	0x20012338

0800aa04 <_ZN8touchgfx3BoxD1Ev>:
 800aa04:	4770      	bx	lr

0800aa06 <_ZN8touchgfx3BoxD0Ev>:
 800aa06:	b510      	push	{r4, lr}
 800aa08:	2130      	movs	r1, #48	; 0x30
 800aa0a:	4604      	mov	r4, r0
 800aa0c:	f00e fd8a 	bl	8019524 <_ZdlPvj>
 800aa10:	4620      	mov	r0, r4
 800aa12:	bd10      	pop	{r4, pc}

0800aa14 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>:
 800aa14:	b538      	push	{r3, r4, r5, lr}
 800aa16:	880b      	ldrh	r3, [r1, #0]
 800aa18:	85c3      	strh	r3, [r0, #46]	; 0x2e
 800aa1a:	4605      	mov	r5, r0
 800aa1c:	8813      	ldrh	r3, [r2, #0]
 800aa1e:	f825 3f30 	strh.w	r3, [r5, #48]!
 800aa22:	4604      	mov	r4, r0
 800aa24:	4628      	mov	r0, r5
 800aa26:	f003 f8db 	bl	800dbe0 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800aa2a:	8120      	strh	r0, [r4, #8]
 800aa2c:	4628      	mov	r0, r5
 800aa2e:	f003 f911 	bl	800dc54 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800aa32:	8160      	strh	r0, [r4, #10]
 800aa34:	bd38      	pop	{r3, r4, r5, pc}

0800aa36 <_ZNK8touchgfx6Button12getSolidRectEv>:
 800aa36:	b510      	push	{r4, lr}
 800aa38:	f891 3032 	ldrb.w	r3, [r1, #50]	; 0x32
 800aa3c:	2bff      	cmp	r3, #255	; 0xff
 800aa3e:	4604      	mov	r4, r0
 800aa40:	d006      	beq.n	800aa50 <_ZNK8touchgfx6Button12getSolidRectEv+0x1a>
 800aa42:	2300      	movs	r3, #0
 800aa44:	8003      	strh	r3, [r0, #0]
 800aa46:	8043      	strh	r3, [r0, #2]
 800aa48:	8083      	strh	r3, [r0, #4]
 800aa4a:	80c3      	strh	r3, [r0, #6]
 800aa4c:	4620      	mov	r0, r4
 800aa4e:	bd10      	pop	{r4, pc}
 800aa50:	f891 302c 	ldrb.w	r3, [r1, #44]	; 0x2c
 800aa54:	b11b      	cbz	r3, 800aa5e <_ZNK8touchgfx6Button12getSolidRectEv+0x28>
 800aa56:	3130      	adds	r1, #48	; 0x30
 800aa58:	f003 f936 	bl	800dcc8 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 800aa5c:	e7f6      	b.n	800aa4c <_ZNK8touchgfx6Button12getSolidRectEv+0x16>
 800aa5e:	312e      	adds	r1, #46	; 0x2e
 800aa60:	e7fa      	b.n	800aa58 <_ZNK8touchgfx6Button12getSolidRectEv+0x22>
	...

0800aa64 <_ZNK8touchgfx6Button4drawERKNS_4RectE>:
 800aa64:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800aa68:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 800aa6c:	b08a      	sub	sp, #40	; 0x28
 800aa6e:	4604      	mov	r4, r0
 800aa70:	4688      	mov	r8, r1
 800aa72:	2b00      	cmp	r3, #0
 800aa74:	d044      	beq.n	800ab00 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x9c>
 800aa76:	8e03      	ldrh	r3, [r0, #48]	; 0x30
 800aa78:	f8ad 3014 	strh.w	r3, [sp, #20]
 800aa7c:	a805      	add	r0, sp, #20
 800aa7e:	f003 f8af 	bl	800dbe0 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800aa82:	4605      	mov	r5, r0
 800aa84:	b206      	sxth	r6, r0
 800aa86:	a805      	add	r0, sp, #20
 800aa88:	f003 f8e4 	bl	800dc54 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800aa8c:	f9b8 2000 	ldrsh.w	r2, [r8]
 800aa90:	f8b8 7004 	ldrh.w	r7, [r8, #4]
 800aa94:	4417      	add	r7, r2
 800aa96:	b2bf      	uxth	r7, r7
 800aa98:	2300      	movs	r3, #0
 800aa9a:	fa0f fe87 	sxth.w	lr, r7
 800aa9e:	459e      	cmp	lr, r3
 800aaa0:	fa0f fc80 	sxth.w	ip, r0
 800aaa4:	9306      	str	r3, [sp, #24]
 800aaa6:	dd2d      	ble.n	800ab04 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xa0>
 800aaa8:	4296      	cmp	r6, r2
 800aaaa:	dd2b      	ble.n	800ab04 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xa0>
 800aaac:	f9b8 3002 	ldrsh.w	r3, [r8, #2]
 800aab0:	f8b8 1006 	ldrh.w	r1, [r8, #6]
 800aab4:	4419      	add	r1, r3
 800aab6:	b289      	uxth	r1, r1
 800aab8:	fa0f f881 	sxth.w	r8, r1
 800aabc:	f1b8 0f00 	cmp.w	r8, #0
 800aac0:	dd20      	ble.n	800ab04 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xa0>
 800aac2:	459c      	cmp	ip, r3
 800aac4:	dd1e      	ble.n	800ab04 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xa0>
 800aac6:	ea22 72e2 	bic.w	r2, r2, r2, asr #31
 800aaca:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 800aace:	4576      	cmp	r6, lr
 800aad0:	bfa8      	it	ge
 800aad2:	463d      	movge	r5, r7
 800aad4:	45c4      	cmp	ip, r8
 800aad6:	bfa8      	it	ge
 800aad8:	4608      	movge	r0, r1
 800aada:	1aad      	subs	r5, r5, r2
 800aadc:	1ac0      	subs	r0, r0, r3
 800aade:	f8ad 501c 	strh.w	r5, [sp, #28]
 800aae2:	f8ad 001e 	strh.w	r0, [sp, #30]
 800aae6:	f8ad 2018 	strh.w	r2, [sp, #24]
 800aaea:	f8ad 301a 	strh.w	r3, [sp, #26]
 800aaee:	4b1f      	ldr	r3, [pc, #124]	; (800ab6c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x108>)
 800aaf0:	681b      	ldr	r3, [r3, #0]
 800aaf2:	b953      	cbnz	r3, 800ab0a <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xa6>
 800aaf4:	4b1e      	ldr	r3, [pc, #120]	; (800ab70 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x10c>)
 800aaf6:	4a1f      	ldr	r2, [pc, #124]	; (800ab74 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x110>)
 800aaf8:	481f      	ldr	r0, [pc, #124]	; (800ab78 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x114>)
 800aafa:	2189      	movs	r1, #137	; 0x89
 800aafc:	f00e fd3e 	bl	801957c <__assert_func>
 800ab00:	8dc3      	ldrh	r3, [r0, #46]	; 0x2e
 800ab02:	e7b9      	b.n	800aa78 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x14>
 800ab04:	2300      	movs	r3, #0
 800ab06:	9307      	str	r3, [sp, #28]
 800ab08:	e7f1      	b.n	800aaee <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x8a>
 800ab0a:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 800ab0e:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800ab12:	429a      	cmp	r2, r3
 800ab14:	d026      	beq.n	800ab64 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x100>
 800ab16:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 800ab1a:	2b00      	cmp	r3, #0
 800ab1c:	dd22      	ble.n	800ab64 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x100>
 800ab1e:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 800ab22:	2b00      	cmp	r3, #0
 800ab24:	dd1e      	ble.n	800ab64 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x100>
 800ab26:	2300      	movs	r3, #0
 800ab28:	e9cd 3308 	strd	r3, r3, [sp, #32]
 800ab2c:	6823      	ldr	r3, [r4, #0]
 800ab2e:	a908      	add	r1, sp, #32
 800ab30:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800ab32:	4620      	mov	r0, r4
 800ab34:	4798      	blx	r3
 800ab36:	4b11      	ldr	r3, [pc, #68]	; (800ab7c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x118>)
 800ab38:	681b      	ldr	r3, [r3, #0]
 800ab3a:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 800ab3e:	b10a      	cbz	r2, 800ab44 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe0>
 800ab40:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 800ab42:	b900      	cbnz	r0, 800ab46 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe2>
 800ab44:	6898      	ldr	r0, [r3, #8]
 800ab46:	6801      	ldr	r1, [r0, #0]
 800ab48:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 800ab4c:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 800ab50:	2501      	movs	r5, #1
 800ab52:	9502      	str	r5, [sp, #8]
 800ab54:	f894 4032 	ldrb.w	r4, [r4, #50]	; 0x32
 800ab58:	9401      	str	r4, [sp, #4]
 800ab5a:	ac06      	add	r4, sp, #24
 800ab5c:	9400      	str	r4, [sp, #0]
 800ab5e:	688c      	ldr	r4, [r1, #8]
 800ab60:	a905      	add	r1, sp, #20
 800ab62:	47a0      	blx	r4
 800ab64:	b00a      	add	sp, #40	; 0x28
 800ab66:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800ab6a:	bf00      	nop
 800ab6c:	200123e0 	.word	0x200123e0
 800ab70:	0801c464 	.word	0x0801c464
 800ab74:	0801c4c6 	.word	0x0801c4c6
 800ab78:	0801c4a0 	.word	0x0801c4a0
 800ab7c:	20012338 	.word	0x20012338

0800ab80 <_ZN8touchgfx5ImageD1Ev>:
 800ab80:	4770      	bx	lr

0800ab82 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>:
 800ab82:	b570      	push	{r4, r5, r6, lr}
 800ab84:	4605      	mov	r5, r0
 800ab86:	880b      	ldrh	r3, [r1, #0]
 800ab88:	84c3      	strh	r3, [r0, #38]	; 0x26
 800ab8a:	f855 3b26 	ldr.w	r3, [r5], #38
 800ab8e:	4604      	mov	r4, r0
 800ab90:	4628      	mov	r0, r5
 800ab92:	6b9e      	ldr	r6, [r3, #56]	; 0x38
 800ab94:	f003 f824 	bl	800dbe0 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800ab98:	b201      	sxth	r1, r0
 800ab9a:	4620      	mov	r0, r4
 800ab9c:	47b0      	blx	r6
 800ab9e:	6823      	ldr	r3, [r4, #0]
 800aba0:	4628      	mov	r0, r5
 800aba2:	6bde      	ldr	r6, [r3, #60]	; 0x3c
 800aba4:	f003 f856 	bl	800dc54 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800aba8:	4633      	mov	r3, r6
 800abaa:	b201      	sxth	r1, r0
 800abac:	4620      	mov	r0, r4
 800abae:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800abb2:	4718      	bx	r3

0800abb4 <_ZN8touchgfx5ImageD0Ev>:
 800abb4:	b510      	push	{r4, lr}
 800abb6:	212c      	movs	r1, #44	; 0x2c
 800abb8:	4604      	mov	r4, r0
 800abba:	f00e fcb3 	bl	8019524 <_ZdlPvj>
 800abbe:	4620      	mov	r0, r4
 800abc0:	bd10      	pop	{r4, pc}

0800abc2 <_ZNK8touchgfx5Image12getSolidRectEv>:
 800abc2:	b510      	push	{r4, lr}
 800abc4:	f891 3028 	ldrb.w	r3, [r1, #40]	; 0x28
 800abc8:	2bff      	cmp	r3, #255	; 0xff
 800abca:	4604      	mov	r4, r0
 800abcc:	d006      	beq.n	800abdc <_ZNK8touchgfx5Image12getSolidRectEv+0x1a>
 800abce:	2300      	movs	r3, #0
 800abd0:	8003      	strh	r3, [r0, #0]
 800abd2:	8043      	strh	r3, [r0, #2]
 800abd4:	8083      	strh	r3, [r0, #4]
 800abd6:	80c3      	strh	r3, [r0, #6]
 800abd8:	4620      	mov	r0, r4
 800abda:	bd10      	pop	{r4, pc}
 800abdc:	3126      	adds	r1, #38	; 0x26
 800abde:	f003 f873 	bl	800dcc8 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 800abe2:	e7f9      	b.n	800abd8 <_ZNK8touchgfx5Image12getSolidRectEv+0x16>

0800abe4 <_ZNK8touchgfx5Image4drawERKNS_4RectE>:
 800abe4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800abe8:	4604      	mov	r4, r0
 800abea:	b088      	sub	sp, #32
 800abec:	f854 3b26 	ldr.w	r3, [r4], #38
 800abf0:	2500      	movs	r5, #0
 800abf2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800abf4:	460f      	mov	r7, r1
 800abf6:	e9cd 5504 	strd	r5, r5, [sp, #16]
 800abfa:	a904      	add	r1, sp, #16
 800abfc:	4606      	mov	r6, r0
 800abfe:	4798      	blx	r3
 800ac00:	4620      	mov	r0, r4
 800ac02:	f002 ffed 	bl	800dbe0 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800ac06:	4680      	mov	r8, r0
 800ac08:	4620      	mov	r0, r4
 800ac0a:	f003 f823 	bl	800dc54 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800ac0e:	9506      	str	r5, [sp, #24]
 800ac10:	ad06      	add	r5, sp, #24
 800ac12:	f8ad 001e 	strh.w	r0, [sp, #30]
 800ac16:	4639      	mov	r1, r7
 800ac18:	4628      	mov	r0, r5
 800ac1a:	f8ad 801c 	strh.w	r8, [sp, #28]
 800ac1e:	f7fe f9d9 	bl	8008fd4 <_ZN8touchgfx4RectaNERKS0_>
 800ac22:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 800ac26:	2b00      	cmp	r3, #0
 800ac28:	dd19      	ble.n	800ac5e <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
 800ac2a:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 800ac2e:	2b00      	cmp	r3, #0
 800ac30:	dd15      	ble.n	800ac5e <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
 800ac32:	4b0c      	ldr	r3, [pc, #48]	; (800ac64 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x80>)
 800ac34:	681b      	ldr	r3, [r3, #0]
 800ac36:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 800ac3a:	b10a      	cbz	r2, 800ac40 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5c>
 800ac3c:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 800ac3e:	b900      	cbnz	r0, 800ac42 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5e>
 800ac40:	6898      	ldr	r0, [r3, #8]
 800ac42:	6801      	ldr	r1, [r0, #0]
 800ac44:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 800ac48:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 800ac4c:	2701      	movs	r7, #1
 800ac4e:	9702      	str	r7, [sp, #8]
 800ac50:	f896 6028 	ldrb.w	r6, [r6, #40]	; 0x28
 800ac54:	e9cd 5600 	strd	r5, r6, [sp]
 800ac58:	688d      	ldr	r5, [r1, #8]
 800ac5a:	4621      	mov	r1, r4
 800ac5c:	47a8      	blx	r5
 800ac5e:	b008      	add	sp, #32
 800ac60:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800ac64:	20012338 	.word	0x20012338

0800ac68 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht>:
 800ac68:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ac6c:	b091      	sub	sp, #68	; 0x44
 800ac6e:	4699      	mov	r9, r3
 800ac70:	f8dd a06c 	ldr.w	sl, [sp, #108]	; 0x6c
 800ac74:	9c1d      	ldr	r4, [sp, #116]	; 0x74
 800ac76:	f9ba 300c 	ldrsh.w	r3, [sl, #12]
 800ac7a:	f8ad 303e 	strh.w	r3, [sp, #62]	; 0x3e
 800ac7e:	4680      	mov	r8, r0
 800ac80:	4617      	mov	r7, r2
 800ac82:	a80e      	add	r0, sp, #56	; 0x38
 800ac84:	f9ba 2008 	ldrsh.w	r2, [sl, #8]
 800ac88:	f8ad 203c 	strh.w	r2, [sp, #60]	; 0x3c
 800ac8c:	2500      	movs	r5, #0
 800ac8e:	910d      	str	r1, [sp, #52]	; 0x34
 800ac90:	950e      	str	r5, [sp, #56]	; 0x38
 800ac92:	f000 fe3b 	bl	800b90c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 800ac96:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 800ac98:	f8d9 6000 	ldr.w	r6, [r9]
 800ac9c:	6818      	ldr	r0, [r3, #0]
 800ac9e:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 800aca0:	f9b4 b000 	ldrsh.w	fp, [r4]
 800aca4:	f9b3 2000 	ldrsh.w	r2, [r3]
 800aca8:	eb02 0c06 	add.w	ip, r2, r6
 800acac:	1b80      	subs	r0, r0, r6
 800acae:	ebab 0e0c 	sub.w	lr, fp, ip
 800acb2:	4570      	cmp	r0, lr
 800acb4:	f340 80bd 	ble.w	800ae32 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x1ca>
 800acb8:	88a1      	ldrh	r1, [r4, #4]
 800acba:	4459      	add	r1, fp
 800acbc:	b209      	sxth	r1, r1
 800acbe:	458c      	cmp	ip, r1
 800acc0:	f300 80b7 	bgt.w	800ae32 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x1ca>
 800acc4:	f8bd 3080 	ldrh.w	r3, [sp, #128]	; 0x80
 800acc8:	ed97 4a09 	vldr	s8, [r7, #36]	; 0x24
 800accc:	edd7 4a0b 	vldr	s9, [r7, #44]	; 0x2c
 800acd0:	edd9 6a07 	vldr	s13, [r9, #28]
 800acd4:	edd9 1a0a 	vldr	s3, [r9, #40]	; 0x28
 800acd8:	ed99 2a0d 	vldr	s4, [r9, #52]	; 0x34
 800acdc:	4283      	cmp	r3, r0
 800acde:	bfa8      	it	ge
 800ace0:	4603      	movge	r3, r0
 800ace2:	ee07 3a90 	vmov	s15, r3
 800ace6:	eeb8 5ae7 	vcvt.f32.s32	s10, s15
 800acea:	edd7 7a0d 	vldr	s15, [r7, #52]	; 0x34
 800acee:	ee25 4a04 	vmul.f32	s8, s10, s8
 800acf2:	ee65 4a24 	vmul.f32	s9, s10, s9
 800acf6:	ee25 5a27 	vmul.f32	s10, s10, s15
 800acfa:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 800acfe:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 800ad02:	45e3      	cmp	fp, ip
 800ad04:	ee71 0aa4 	vadd.f32	s1, s3, s9
 800ad08:	ee32 1a05 	vadd.f32	s2, s4, s10
 800ad0c:	ee36 0a84 	vadd.f32	s0, s13, s8
 800ad10:	ee61 1a87 	vmul.f32	s3, s3, s14
 800ad14:	ee22 2a07 	vmul.f32	s4, s4, s14
 800ad18:	f340 808e 	ble.w	800ae38 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x1d0>
 800ad1c:	fb9e f5f3 	sdiv	r5, lr, r3
 800ad20:	ee07 5a10 	vmov	s14, r5
 800ad24:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800ad28:	2d00      	cmp	r5, #0
 800ad2a:	fb03 e415 	mls	r4, r3, r5, lr
 800ad2e:	eea7 0a04 	vfma.f32	s0, s14, s8
 800ad32:	eee7 0a24 	vfma.f32	s1, s14, s9
 800ad36:	eea7 1a05 	vfma.f32	s2, s14, s10
 800ad3a:	dd13      	ble.n	800ad64 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xfc>
 800ad3c:	ee70 6a44 	vsub.f32	s13, s0, s8
 800ad40:	ee70 1ae4 	vsub.f32	s3, s1, s9
 800ad44:	eef5 6a40 	vcmp.f32	s13, #0.0
 800ad48:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800ad4c:	bf18      	it	ne
 800ad4e:	ee87 7aa6 	vdivne.f32	s14, s15, s13
 800ad52:	ee31 2a45 	vsub.f32	s4, s2, s10
 800ad56:	bf08      	it	eq
 800ad58:	eeb0 7a67 	vmoveq.f32	s14, s15
 800ad5c:	ee61 1a87 	vmul.f32	s3, s3, s14
 800ad60:	ee22 2a07 	vmul.f32	s4, s4, s14
 800ad64:	fb05 f703 	mul.w	r7, r5, r3
 800ad68:	1bc0      	subs	r0, r0, r7
 800ad6a:	443e      	add	r6, r7
 800ad6c:	1997      	adds	r7, r2, r6
 800ad6e:	4407      	add	r7, r0
 800ad70:	42b9      	cmp	r1, r7
 800ad72:	bfbc      	itt	lt
 800ad74:	1a88      	sublt	r0, r1, r2
 800ad76:	1b80      	sublt	r0, r0, r6
 800ad78:	2800      	cmp	r0, #0
 800ad7a:	dd5a      	ble.n	800ae32 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x1ca>
 800ad7c:	fb90 f1f3 	sdiv	r1, r0, r3
 800ad80:	fb03 0211 	mls	r2, r3, r1, r0
 800ad84:	b90a      	cbnz	r2, 800ad8a <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x122>
 800ad86:	3901      	subs	r1, #1
 800ad88:	461a      	mov	r2, r3
 800ad8a:	eec7 3a80 	vdiv.f32	s7, s15, s0
 800ad8e:	f89d b07c 	ldrb.w	fp, [sp, #124]	; 0x7c
 800ad92:	44a4      	add	ip, r4
 800ad94:	fb03 c505 	mla	r5, r3, r5, ip
 800ad98:	2900      	cmp	r1, #0
 800ad9a:	bfcc      	ite	gt
 800ad9c:	469e      	movgt	lr, r3
 800ad9e:	4696      	movle	lr, r2
 800ada0:	eef0 6a42 	vmov.f32	s13, s4
 800ada4:	ee60 2aa3 	vmul.f32	s5, s1, s7
 800ada8:	ee21 3a23 	vmul.f32	s6, s2, s7
 800adac:	ee72 7ae1 	vsub.f32	s15, s5, s3
 800adb0:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 800adb4:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 800adb8:	eeb0 7a61 	vmov.f32	s14, s3
 800adbc:	ee17 0a90 	vmov	r0, s15
 800adc0:	ee73 7a42 	vsub.f32	s15, s6, s4
 800adc4:	fb90 f6f3 	sdiv	r6, r0, r3
 800adc8:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 800adcc:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 800add0:	ee17 0a90 	vmov	r0, s15
 800add4:	fb90 f7f3 	sdiv	r7, r0, r3
 800add8:	f8d8 0004 	ldr.w	r0, [r8, #4]
 800addc:	900c      	str	r0, [sp, #48]	; 0x30
 800adde:	f8d0 8000 	ldr.w	r8, [r0]
 800ade2:	981c      	ldr	r0, [sp, #112]	; 0x70
 800ade4:	e9cd ab0a 	strd	sl, fp, [sp, #40]	; 0x28
 800ade8:	f9bd a03e 	ldrsh.w	sl, [sp, #62]	; 0x3e
 800adec:	f8cd a024 	str.w	sl, [sp, #36]	; 0x24
 800adf0:	f9bd a03c 	ldrsh.w	sl, [sp, #60]	; 0x3c
 800adf4:	f8cd a020 	str.w	sl, [sp, #32]
 800adf8:	f9b0 a002 	ldrsh.w	sl, [r0, #2]
 800adfc:	980d      	ldr	r0, [sp, #52]	; 0x34
 800adfe:	f8d9 9014 	ldr.w	r9, [r9, #20]
 800ae02:	9603      	str	r6, [sp, #12]
 800ae04:	e9cd 7004 	strd	r7, r0, [sp, #16]
 800ae08:	ee16 0a90 	vmov	r0, s13
 800ae0c:	fb07 0704 	mla	r7, r7, r4, r0
 800ae10:	ee17 0a10 	vmov	r0, s14
 800ae14:	fb06 0604 	mla	r6, r6, r4, r0
 800ae18:	e9cd 3600 	strd	r3, r6, [sp]
 800ae1c:	44ca      	add	sl, r9
 800ae1e:	f8cd a01c 	str.w	sl, [sp, #28]
 800ae22:	9506      	str	r5, [sp, #24]
 800ae24:	9702      	str	r7, [sp, #8]
 800ae26:	f8d8 5008 	ldr.w	r5, [r8, #8]
 800ae2a:	980c      	ldr	r0, [sp, #48]	; 0x30
 800ae2c:	ebae 0304 	sub.w	r3, lr, r4
 800ae30:	47a8      	blx	r5
 800ae32:	b011      	add	sp, #68	; 0x44
 800ae34:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800ae38:	462c      	mov	r4, r5
 800ae3a:	e797      	b.n	800ad6c <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x104>

0800ae3c <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE>:
 800ae3c:	b570      	push	{r4, r5, r6, lr}
 800ae3e:	4604      	mov	r4, r0
 800ae40:	2500      	movs	r5, #0
 800ae42:	7223      	strb	r3, [r4, #8]
 800ae44:	9804      	ldr	r0, [sp, #16]
 800ae46:	f89d 3014 	ldrb.w	r3, [sp, #20]
 800ae4a:	8025      	strh	r5, [r4, #0]
 800ae4c:	6061      	str	r1, [r4, #4]
 800ae4e:	7263      	strb	r3, [r4, #9]
 800ae50:	60e0      	str	r0, [r4, #12]
 800ae52:	8222      	strh	r2, [r4, #16]
 800ae54:	8265      	strh	r5, [r4, #18]
 800ae56:	82a5      	strh	r5, [r4, #20]
 800ae58:	82e5      	strh	r5, [r4, #22]
 800ae5a:	8325      	strh	r5, [r4, #24]
 800ae5c:	8365      	strh	r5, [r4, #26]
 800ae5e:	83a5      	strh	r5, [r4, #28]
 800ae60:	77a5      	strb	r5, [r4, #30]
 800ae62:	6803      	ldr	r3, [r0, #0]
 800ae64:	695b      	ldr	r3, [r3, #20]
 800ae66:	4798      	blx	r3
 800ae68:	4606      	mov	r6, r0
 800ae6a:	b1f8      	cbz	r0, 800aeac <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE+0x70>
 800ae6c:	68e0      	ldr	r0, [r4, #12]
 800ae6e:	6803      	ldr	r3, [r0, #0]
 800ae70:	4631      	mov	r1, r6
 800ae72:	68db      	ldr	r3, [r3, #12]
 800ae74:	4798      	blx	r3
 800ae76:	7b43      	ldrb	r3, [r0, #13]
 800ae78:	7a82      	ldrb	r2, [r0, #10]
 800ae7a:	005b      	lsls	r3, r3, #1
 800ae7c:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800ae80:	4313      	orrs	r3, r2
 800ae82:	83a3      	strh	r3, [r4, #28]
 800ae84:	7a63      	ldrb	r3, [r4, #9]
 800ae86:	2b04      	cmp	r3, #4
 800ae88:	4605      	mov	r5, r0
 800ae8a:	d10f      	bne.n	800aeac <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE+0x70>
 800ae8c:	68e0      	ldr	r0, [r4, #12]
 800ae8e:	6803      	ldr	r3, [r0, #0]
 800ae90:	462a      	mov	r2, r5
 800ae92:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800ae94:	4631      	mov	r1, r6
 800ae96:	4798      	blx	r3
 800ae98:	7b6b      	ldrb	r3, [r5, #13]
 800ae9a:	005b      	lsls	r3, r3, #1
 800ae9c:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800aea0:	7aab      	ldrb	r3, [r5, #10]
 800aea2:	4313      	orrs	r3, r2
 800aea4:	4418      	add	r0, r3
 800aea6:	8ba3      	ldrh	r3, [r4, #28]
 800aea8:	4418      	add	r0, r3
 800aeaa:	83a0      	strh	r0, [r4, #28]
 800aeac:	4620      	mov	r0, r4
 800aeae:	bd70      	pop	{r4, r5, r6, pc}

0800aeb0 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>:
 800aeb0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800aeb4:	2400      	movs	r4, #0
 800aeb6:	b085      	sub	sp, #20
 800aeb8:	4681      	mov	r9, r0
 800aeba:	4688      	mov	r8, r1
 800aebc:	4692      	mov	sl, r2
 800aebe:	469b      	mov	fp, r3
 800aec0:	4627      	mov	r7, r4
 800aec2:	4625      	mov	r5, r4
 800aec4:	4626      	mov	r6, r4
 800aec6:	4554      	cmp	r4, sl
 800aec8:	da2a      	bge.n	800af20 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 800aeca:	2300      	movs	r3, #0
 800aecc:	9303      	str	r3, [sp, #12]
 800aece:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 800aed2:	429d      	cmp	r5, r3
 800aed4:	d004      	beq.n	800aee0 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x30>
 800aed6:	f242 030b 	movw	r3, #8203	; 0x200b
 800aeda:	429d      	cmp	r5, r3
 800aedc:	bf18      	it	ne
 800aede:	462f      	movne	r7, r5
 800aee0:	ab03      	add	r3, sp, #12
 800aee2:	4642      	mov	r2, r8
 800aee4:	4659      	mov	r1, fp
 800aee6:	4648      	mov	r0, r9
 800aee8:	f002 fb6e 	bl	800d5c8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800aeec:	4605      	mov	r5, r0
 800aeee:	b1b8      	cbz	r0, 800af20 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 800aef0:	280a      	cmp	r0, #10
 800aef2:	d015      	beq.n	800af20 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 800aef4:	9a03      	ldr	r2, [sp, #12]
 800aef6:	b18a      	cbz	r2, 800af1c <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x6c>
 800aef8:	7b50      	ldrb	r0, [r2, #13]
 800aefa:	7a93      	ldrb	r3, [r2, #10]
 800aefc:	8895      	ldrh	r5, [r2, #4]
 800aefe:	0040      	lsls	r0, r0, #1
 800af00:	f400 7080 	and.w	r0, r0, #256	; 0x100
 800af04:	4303      	orrs	r3, r0
 800af06:	9301      	str	r3, [sp, #4]
 800af08:	f8d8 3000 	ldr.w	r3, [r8]
 800af0c:	4639      	mov	r1, r7
 800af0e:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800af10:	4640      	mov	r0, r8
 800af12:	4798      	blx	r3
 800af14:	9b01      	ldr	r3, [sp, #4]
 800af16:	4418      	add	r0, r3
 800af18:	4406      	add	r6, r0
 800af1a:	b2b6      	uxth	r6, r6
 800af1c:	3401      	adds	r4, #1
 800af1e:	e7d2      	b.n	800aec6 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x16>
 800af20:	4630      	mov	r0, r6
 800af22:	b005      	add	sp, #20
 800af24:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800af28 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>:
 800af28:	2a02      	cmp	r2, #2
 800af2a:	b530      	push	{r4, r5, lr}
 800af2c:	d011      	beq.n	800af52 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x2a>
 800af2e:	2a03      	cmp	r2, #3
 800af30:	d01c      	beq.n	800af6c <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x44>
 800af32:	2a01      	cmp	r2, #1
 800af34:	d10c      	bne.n	800af50 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 800af36:	888b      	ldrh	r3, [r1, #4]
 800af38:	f9b0 2004 	ldrsh.w	r2, [r0, #4]
 800af3c:	8801      	ldrh	r1, [r0, #0]
 800af3e:	8844      	ldrh	r4, [r0, #2]
 800af40:	8004      	strh	r4, [r0, #0]
 800af42:	1a9b      	subs	r3, r3, r2
 800af44:	1a5b      	subs	r3, r3, r1
 800af46:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 800af4a:	8043      	strh	r3, [r0, #2]
 800af4c:	8081      	strh	r1, [r0, #4]
 800af4e:	80c2      	strh	r2, [r0, #6]
 800af50:	bd30      	pop	{r4, r5, pc}
 800af52:	88cb      	ldrh	r3, [r1, #6]
 800af54:	88c2      	ldrh	r2, [r0, #6]
 800af56:	1a9b      	subs	r3, r3, r2
 800af58:	8842      	ldrh	r2, [r0, #2]
 800af5a:	1a9b      	subs	r3, r3, r2
 800af5c:	888a      	ldrh	r2, [r1, #4]
 800af5e:	8881      	ldrh	r1, [r0, #4]
 800af60:	8043      	strh	r3, [r0, #2]
 800af62:	1a52      	subs	r2, r2, r1
 800af64:	8801      	ldrh	r1, [r0, #0]
 800af66:	1a52      	subs	r2, r2, r1
 800af68:	8002      	strh	r2, [r0, #0]
 800af6a:	e7f1      	b.n	800af50 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 800af6c:	88cb      	ldrh	r3, [r1, #6]
 800af6e:	f9b0 2006 	ldrsh.w	r2, [r0, #6]
 800af72:	8841      	ldrh	r1, [r0, #2]
 800af74:	f9b0 5000 	ldrsh.w	r5, [r0]
 800af78:	f9b0 4004 	ldrsh.w	r4, [r0, #4]
 800af7c:	8045      	strh	r5, [r0, #2]
 800af7e:	1a9b      	subs	r3, r3, r2
 800af80:	1a5b      	subs	r3, r3, r1
 800af82:	8003      	strh	r3, [r0, #0]
 800af84:	8082      	strh	r2, [r0, #4]
 800af86:	80c4      	strh	r4, [r0, #6]
 800af88:	e7e2      	b.n	800af50 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>

0800af8a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>:
 800af8a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800af8e:	b09f      	sub	sp, #124	; 0x7c
 800af90:	9116      	str	r1, [sp, #88]	; 0x58
 800af92:	9317      	str	r3, [sp, #92]	; 0x5c
 800af94:	9929      	ldr	r1, [sp, #164]	; 0xa4
 800af96:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 800af98:	8809      	ldrh	r1, [r1, #0]
 800af9a:	889b      	ldrh	r3, [r3, #4]
 800af9c:	f8dd 80a8 	ldr.w	r8, [sp, #168]	; 0xa8
 800afa0:	9212      	str	r2, [sp, #72]	; 0x48
 800afa2:	440b      	add	r3, r1
 800afa4:	b21b      	sxth	r3, r3
 800afa6:	9310      	str	r3, [sp, #64]	; 0x40
 800afa8:	f8d8 3000 	ldr.w	r3, [r8]
 800afac:	f89d 20b8 	ldrb.w	r2, [sp, #184]	; 0xb8
 800afb0:	7a59      	ldrb	r1, [r3, #9]
 800afb2:	7a1b      	ldrb	r3, [r3, #8]
 800afb4:	9315      	str	r3, [sp, #84]	; 0x54
 800afb6:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 800afb8:	9011      	str	r0, [sp, #68]	; 0x44
 800afba:	f89d b0ac 	ldrb.w	fp, [sp, #172]	; 0xac
 800afbe:	9114      	str	r1, [sp, #80]	; 0x50
 800afc0:	f9b3 5000 	ldrsh.w	r5, [r3]
 800afc4:	2a00      	cmp	r2, #0
 800afc6:	d067      	beq.n	800b098 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x10e>
 800afc8:	f898 3010 	ldrb.w	r3, [r8, #16]
 800afcc:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 800afce:	2b04      	cmp	r3, #4
 800afd0:	bf14      	ite	ne
 800afd2:	2301      	movne	r3, #1
 800afd4:	2302      	moveq	r3, #2
 800afd6:	4413      	add	r3, r2
 800afd8:	f04f 0900 	mov.w	r9, #0
 800afdc:	930f      	str	r3, [sp, #60]	; 0x3c
 800afde:	f8cd 9038 	str.w	r9, [sp, #56]	; 0x38
 800afe2:	464c      	mov	r4, r9
 800afe4:	f8cd 9034 	str.w	r9, [sp, #52]	; 0x34
 800afe8:	e9dd 320e 	ldrd	r3, r2, [sp, #56]	; 0x38
 800afec:	4293      	cmp	r3, r2
 800afee:	f280 808c 	bge.w	800b10a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x180>
 800aff2:	2300      	movs	r3, #0
 800aff4:	931c      	str	r3, [sp, #112]	; 0x70
 800aff6:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 800affa:	429c      	cmp	r4, r3
 800affc:	d006      	beq.n	800b00c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x82>
 800affe:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800b000:	f242 020b 	movw	r2, #8203	; 0x200b
 800b004:	4294      	cmp	r4, r2
 800b006:	bf18      	it	ne
 800b008:	4623      	movne	r3, r4
 800b00a:	930d      	str	r3, [sp, #52]	; 0x34
 800b00c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800b00e:	992d      	ldr	r1, [sp, #180]	; 0xb4
 800b010:	f8d8 2000 	ldr.w	r2, [r8]
 800b014:	428b      	cmp	r3, r1
 800b016:	db41      	blt.n	800b09c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x112>
 800b018:	6813      	ldr	r3, [r2, #0]
 800b01a:	4610      	mov	r0, r2
 800b01c:	695b      	ldr	r3, [r3, #20]
 800b01e:	4798      	blx	r3
 800b020:	4604      	mov	r4, r0
 800b022:	f8d8 0000 	ldr.w	r0, [r8]
 800b026:	6803      	ldr	r3, [r0, #0]
 800b028:	aa1d      	add	r2, sp, #116	; 0x74
 800b02a:	689e      	ldr	r6, [r3, #8]
 800b02c:	4621      	mov	r1, r4
 800b02e:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
 800b032:	47b0      	blx	r6
 800b034:	901c      	str	r0, [sp, #112]	; 0x70
 800b036:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 800b03a:	429c      	cmp	r4, r3
 800b03c:	f000 80e9 	beq.w	800b212 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x288>
 800b040:	f242 030b 	movw	r3, #8203	; 0x200b
 800b044:	429c      	cmp	r4, r3
 800b046:	f000 80e4 	beq.w	800b212 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x288>
 800b04a:	2c00      	cmp	r4, #0
 800b04c:	f000 80f6 	beq.w	800b23c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2b2>
 800b050:	2c0a      	cmp	r4, #10
 800b052:	d060      	beq.n	800b116 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18c>
 800b054:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 800b056:	b36a      	cbz	r2, 800b0b4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x12a>
 800b058:	8894      	ldrh	r4, [r2, #4]
 800b05a:	f1bb 0f00 	cmp.w	fp, #0
 800b05e:	d03b      	beq.n	800b0d8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x14e>
 800b060:	f892 900d 	ldrb.w	r9, [r2, #13]
 800b064:	ea4f 0949 	mov.w	r9, r9, lsl #1
 800b068:	f409 7380 	and.w	r3, r9, #256	; 0x100
 800b06c:	f892 900a 	ldrb.w	r9, [r2, #10]
 800b070:	f1bb 0f01 	cmp.w	fp, #1
 800b074:	ea49 0903 	orr.w	r9, r9, r3
 800b078:	d134      	bne.n	800b0e4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x15a>
 800b07a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800b07c:	eba5 0509 	sub.w	r5, r5, r9
 800b080:	2b00      	cmp	r3, #0
 800b082:	d14f      	bne.n	800b124 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19a>
 800b084:	9a14      	ldr	r2, [sp, #80]	; 0x50
 800b086:	eb09 0305 	add.w	r3, r9, r5
 800b08a:	4413      	add	r3, r2
 800b08c:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 800b08e:	f9b2 2000 	ldrsh.w	r2, [r2]
 800b092:	4293      	cmp	r3, r2
 800b094:	da51      	bge.n	800b13a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b0>
 800b096:	e038      	b.n	800b10a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x180>
 800b098:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 800b09a:	e79d      	b.n	800afd8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x4e>
 800b09c:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
 800b0a0:	9301      	str	r3, [sp, #4]
 800b0a2:	ab1d      	add	r3, sp, #116	; 0x74
 800b0a4:	9300      	str	r3, [sp, #0]
 800b0a6:	4659      	mov	r1, fp
 800b0a8:	ab1c      	add	r3, sp, #112	; 0x70
 800b0aa:	982c      	ldr	r0, [sp, #176]	; 0xb0
 800b0ac:	f002 fae4 	bl	800d678 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>
 800b0b0:	4604      	mov	r4, r0
 800b0b2:	e7c0      	b.n	800b036 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xac>
 800b0b4:	f8d8 0000 	ldr.w	r0, [r8]
 800b0b8:	6803      	ldr	r3, [r0, #0]
 800b0ba:	691b      	ldr	r3, [r3, #16]
 800b0bc:	4798      	blx	r3
 800b0be:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 800b0c2:	4298      	cmp	r0, r3
 800b0c4:	f000 80a5 	beq.w	800b212 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x288>
 800b0c8:	f242 030b 	movw	r3, #8203	; 0x200b
 800b0cc:	4298      	cmp	r0, r3
 800b0ce:	f000 80a0 	beq.w	800b212 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x288>
 800b0d2:	f1bb 0f00 	cmp.w	fp, #0
 800b0d6:	d100      	bne.n	800b0da <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x150>
 800b0d8:	444d      	add	r5, r9
 800b0da:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 800b0dc:	2a00      	cmp	r2, #0
 800b0de:	d1bf      	bne.n	800b060 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xd6>
 800b0e0:	4691      	mov	r9, r2
 800b0e2:	e096      	b.n	800b212 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x288>
 800b0e4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800b0e6:	2b00      	cmp	r3, #0
 800b0e8:	f000 80aa 	beq.w	800b240 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2b6>
 800b0ec:	f1bb 0f00 	cmp.w	fp, #0
 800b0f0:	d118      	bne.n	800b124 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19a>
 800b0f2:	f8d8 0000 	ldr.w	r0, [r8]
 800b0f6:	990d      	ldr	r1, [sp, #52]	; 0x34
 800b0f8:	6803      	ldr	r3, [r0, #0]
 800b0fa:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800b0fc:	4798      	blx	r3
 800b0fe:	4405      	add	r5, r0
 800b100:	9b15      	ldr	r3, [sp, #84]	; 0x54
 800b102:	9a10      	ldr	r2, [sp, #64]	; 0x40
 800b104:	1aeb      	subs	r3, r5, r3
 800b106:	4293      	cmp	r3, r2
 800b108:	dd17      	ble.n	800b13a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b0>
 800b10a:	2c00      	cmp	r4, #0
 800b10c:	f000 8096 	beq.w	800b23c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2b2>
 800b110:	2c0a      	cmp	r4, #10
 800b112:	f040 8084 	bne.w	800b21e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x294>
 800b116:	240a      	movs	r4, #10
 800b118:	fab4 f084 	clz	r0, r4
 800b11c:	0940      	lsrs	r0, r0, #5
 800b11e:	b01f      	add	sp, #124	; 0x7c
 800b120:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800b124:	f8d8 0000 	ldr.w	r0, [r8]
 800b128:	990d      	ldr	r1, [sp, #52]	; 0x34
 800b12a:	6803      	ldr	r3, [r0, #0]
 800b12c:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800b12e:	4798      	blx	r3
 800b130:	f1bb 0f01 	cmp.w	fp, #1
 800b134:	eba5 0500 	sub.w	r5, r5, r0
 800b138:	d0a4      	beq.n	800b084 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xfa>
 800b13a:	981c      	ldr	r0, [sp, #112]	; 0x70
 800b13c:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 800b13e:	f990 1009 	ldrsb.w	r1, [r0, #9]
 800b142:	f9b3 6000 	ldrsh.w	r6, [r3]
 800b146:	7b43      	ldrb	r3, [r0, #13]
 800b148:	015b      	lsls	r3, r3, #5
 800b14a:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800b14e:	7983      	ldrb	r3, [r0, #6]
 800b150:	4429      	add	r1, r5
 800b152:	4313      	orrs	r3, r2
 800b154:	440b      	add	r3, r1
 800b156:	42b3      	cmp	r3, r6
 800b158:	db5b      	blt.n	800b212 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x288>
 800b15a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800b15c:	4299      	cmp	r1, r3
 800b15e:	da58      	bge.n	800b212 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x288>
 800b160:	f8d8 0000 	ldr.w	r0, [r8]
 800b164:	6803      	ldr	r3, [r0, #0]
 800b166:	42ae      	cmp	r6, r5
 800b168:	bfc8      	it	gt
 800b16a:	1b76      	subgt	r6, r6, r5
 800b16c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800b16e:	bfcc      	ite	gt
 800b170:	b2b6      	uxthgt	r6, r6
 800b172:	2600      	movle	r6, #0
 800b174:	4798      	blx	r3
 800b176:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 800b178:	7b5a      	ldrb	r2, [r3, #13]
 800b17a:	00d1      	lsls	r1, r2, #3
 800b17c:	f401 7780 	and.w	r7, r1, #256	; 0x100
 800b180:	7a19      	ldrb	r1, [r3, #8]
 800b182:	4339      	orrs	r1, r7
 800b184:	0657      	lsls	r7, r2, #25
 800b186:	9f17      	ldr	r7, [sp, #92]	; 0x5c
 800b188:	bf44      	itt	mi
 800b18a:	f5a1 7100 	submi.w	r1, r1, #512	; 0x200
 800b18e:	b209      	sxthmi	r1, r1
 800b190:	19c7      	adds	r7, r0, r7
 800b192:	1a7f      	subs	r7, r7, r1
 800b194:	9929      	ldr	r1, [sp, #164]	; 0xa4
 800b196:	b2bf      	uxth	r7, r7
 800b198:	f9b1 1002 	ldrsh.w	r1, [r1, #2]
 800b19c:	fa0f fa87 	sxth.w	sl, r7
 800b1a0:	4551      	cmp	r1, sl
 800b1a2:	dd3a      	ble.n	800b21a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 800b1a4:	0112      	lsls	r2, r2, #4
 800b1a6:	79d8      	ldrb	r0, [r3, #7]
 800b1a8:	f402 7280 	and.w	r2, r2, #256	; 0x100
 800b1ac:	4302      	orrs	r2, r0
 800b1ae:	4492      	add	sl, r2
 800b1b0:	4551      	cmp	r1, sl
 800b1b2:	dc2e      	bgt.n	800b212 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x288>
 800b1b4:	1bcf      	subs	r7, r1, r7
 800b1b6:	b2bf      	uxth	r7, r7
 800b1b8:	468a      	mov	sl, r1
 800b1ba:	9319      	str	r3, [sp, #100]	; 0x64
 800b1bc:	9b11      	ldr	r3, [sp, #68]	; 0x44
 800b1be:	f8d8 0000 	ldr.w	r0, [r8]
 800b1c2:	681a      	ldr	r2, [r3, #0]
 800b1c4:	6801      	ldr	r1, [r0, #0]
 800b1c6:	6c13      	ldr	r3, [r2, #64]	; 0x40
 800b1c8:	9a1d      	ldr	r2, [sp, #116]	; 0x74
 800b1ca:	9313      	str	r3, [sp, #76]	; 0x4c
 800b1cc:	9218      	str	r2, [sp, #96]	; 0x60
 800b1ce:	6b89      	ldr	r1, [r1, #56]	; 0x38
 800b1d0:	4788      	blx	r1
 800b1d2:	f898 1006 	ldrb.w	r1, [r8, #6]
 800b1d6:	910b      	str	r1, [sp, #44]	; 0x2c
 800b1d8:	f898 100e 	ldrb.w	r1, [r8, #14]
 800b1dc:	910a      	str	r1, [sp, #40]	; 0x28
 800b1de:	f89d 106f 	ldrb.w	r1, [sp, #111]	; 0x6f
 800b1e2:	9109      	str	r1, [sp, #36]	; 0x24
 800b1e4:	9b19      	ldr	r3, [sp, #100]	; 0x64
 800b1e6:	f8d8 1008 	ldr.w	r1, [r8, #8]
 800b1ea:	9305      	str	r3, [sp, #20]
 800b1ec:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 800b1ee:	9a18      	ldr	r2, [sp, #96]	; 0x60
 800b1f0:	9206      	str	r2, [sp, #24]
 800b1f2:	e9cd 0107 	strd	r0, r1, [sp, #28]
 800b1f6:	e9cd 7303 	strd	r7, r3, [sp, #12]
 800b1fa:	e9cd a601 	strd	sl, r6, [sp, #4]
 800b1fe:	442e      	add	r6, r5
 800b200:	b236      	sxth	r6, r6
 800b202:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800b204:	9600      	str	r6, [sp, #0]
 800b206:	681a      	ldr	r2, [r3, #0]
 800b208:	9916      	ldr	r1, [sp, #88]	; 0x58
 800b20a:	685b      	ldr	r3, [r3, #4]
 800b20c:	9811      	ldr	r0, [sp, #68]	; 0x44
 800b20e:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 800b210:	47b0      	blx	r6
 800b212:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800b214:	3301      	adds	r3, #1
 800b216:	930e      	str	r3, [sp, #56]	; 0x38
 800b218:	e6e6      	b.n	800afe8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x5e>
 800b21a:	2700      	movs	r7, #0
 800b21c:	e7cd      	b.n	800b1ba <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x230>
 800b21e:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 800b220:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 800b222:	3501      	adds	r5, #1
 800b224:	429d      	cmp	r5, r3
 800b226:	f6bf af77 	bge.w	800b118 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18e>
 800b22a:	4659      	mov	r1, fp
 800b22c:	982c      	ldr	r0, [sp, #176]	; 0xb0
 800b22e:	f7f7 fe91 	bl	8002f54 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 800b232:	4604      	mov	r4, r0
 800b234:	b110      	cbz	r0, 800b23c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2b2>
 800b236:	280a      	cmp	r0, #10
 800b238:	d1f2      	bne.n	800b220 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x296>
 800b23a:	e76c      	b.n	800b116 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18c>
 800b23c:	2400      	movs	r4, #0
 800b23e:	e76b      	b.n	800b118 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18e>
 800b240:	f1bb 0f00 	cmp.w	fp, #0
 800b244:	f43f af5c 	beq.w	800b100 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x176>
 800b248:	e777      	b.n	800b13a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b0>

0800b24a <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>:
 800b24a:	b530      	push	{r4, r5, lr}
 800b24c:	8a44      	ldrh	r4, [r0, #18]
 800b24e:	8ac5      	ldrh	r5, [r0, #22]
 800b250:	82c3      	strh	r3, [r0, #22]
 800b252:	442c      	add	r4, r5
 800b254:	1ae4      	subs	r4, r4, r3
 800b256:	8244      	strh	r4, [r0, #18]
 800b258:	8b03      	ldrh	r3, [r0, #24]
 800b25a:	8a84      	ldrh	r4, [r0, #20]
 800b25c:	4422      	add	r2, r4
 800b25e:	440c      	add	r4, r1
 800b260:	1a59      	subs	r1, r3, r1
 800b262:	8342      	strh	r2, [r0, #26]
 800b264:	8284      	strh	r4, [r0, #20]
 800b266:	8301      	strh	r1, [r0, #24]
 800b268:	bd30      	pop	{r4, r5, pc}

0800b26a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb>:
 800b26a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b26e:	7a43      	ldrb	r3, [r0, #9]
 800b270:	1eda      	subs	r2, r3, #3
 800b272:	b087      	sub	sp, #28
 800b274:	4604      	mov	r4, r0
 800b276:	b2d2      	uxtb	r2, r2
 800b278:	460f      	mov	r7, r1
 800b27a:	2900      	cmp	r1, #0
 800b27c:	d036      	beq.n	800b2ec <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x82>
 800b27e:	2a01      	cmp	r2, #1
 800b280:	d932      	bls.n	800b2e8 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x7e>
 800b282:	1e58      	subs	r0, r3, #1
 800b284:	f1d0 0b00 	rsbs	fp, r0, #0
 800b288:	eb4b 0b00 	adc.w	fp, fp, r0
 800b28c:	1e99      	subs	r1, r3, #2
 800b28e:	424b      	negs	r3, r1
 800b290:	414b      	adcs	r3, r1
 800b292:	9303      	str	r3, [sp, #12]
 800b294:	2300      	movs	r3, #0
 800b296:	e9cd 3301 	strd	r3, r3, [sp, #4]
 800b29a:	2500      	movs	r5, #0
 800b29c:	8265      	strh	r5, [r4, #18]
 800b29e:	82a5      	strh	r5, [r4, #20]
 800b2a0:	46a9      	mov	r9, r5
 800b2a2:	f242 0a0b 	movw	sl, #8203	; 0x200b
 800b2a6:	2300      	movs	r3, #0
 800b2a8:	9305      	str	r3, [sp, #20]
 800b2aa:	8823      	ldrh	r3, [r4, #0]
 800b2ac:	2b20      	cmp	r3, #32
 800b2ae:	d02b      	beq.n	800b308 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x9e>
 800b2b0:	eba3 020a 	sub.w	r2, r3, sl
 800b2b4:	4256      	negs	r6, r2
 800b2b6:	4156      	adcs	r6, r2
 800b2b8:	f64f 62ff 	movw	r2, #65279	; 0xfeff
 800b2bc:	4293      	cmp	r3, r2
 800b2be:	d004      	beq.n	800b2ca <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x60>
 800b2c0:	4553      	cmp	r3, sl
 800b2c2:	bf16      	itet	ne
 800b2c4:	4699      	movne	r9, r3
 800b2c6:	2601      	moveq	r6, #1
 800b2c8:	2600      	movne	r6, #0
 800b2ca:	ab05      	add	r3, sp, #20
 800b2cc:	68e2      	ldr	r2, [r4, #12]
 800b2ce:	7a21      	ldrb	r1, [r4, #8]
 800b2d0:	6860      	ldr	r0, [r4, #4]
 800b2d2:	f002 f979 	bl	800d5c8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800b2d6:	8020      	strh	r0, [r4, #0]
 800b2d8:	b9c8      	cbnz	r0, 800b30e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xa4>
 800b2da:	8b22      	ldrh	r2, [r4, #24]
 800b2dc:	2300      	movs	r3, #0
 800b2de:	4611      	mov	r1, r2
 800b2e0:	4620      	mov	r0, r4
 800b2e2:	f7ff ffb2 	bl	800b24a <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 800b2e6:	e066      	b.n	800b3b6 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x14c>
 800b2e8:	468b      	mov	fp, r1
 800b2ea:	e7cf      	b.n	800b28c <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x22>
 800b2ec:	3b01      	subs	r3, #1
 800b2ee:	2a01      	cmp	r2, #1
 800b2f0:	bf8c      	ite	hi
 800b2f2:	2200      	movhi	r2, #0
 800b2f4:	2201      	movls	r2, #1
 800b2f6:	2b01      	cmp	r3, #1
 800b2f8:	bf8c      	ite	hi
 800b2fa:	2300      	movhi	r3, #0
 800b2fc:	2301      	movls	r3, #1
 800b2fe:	9202      	str	r2, [sp, #8]
 800b300:	9301      	str	r3, [sp, #4]
 800b302:	9103      	str	r1, [sp, #12]
 800b304:	468b      	mov	fp, r1
 800b306:	e7c8      	b.n	800b29a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x30>
 800b308:	4699      	mov	r9, r3
 800b30a:	2601      	movs	r6, #1
 800b30c:	e7dd      	b.n	800b2ca <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x60>
 800b30e:	8ae3      	ldrh	r3, [r4, #22]
 800b310:	280a      	cmp	r0, #10
 800b312:	f103 0301 	add.w	r3, r3, #1
 800b316:	82e3      	strh	r3, [r4, #22]
 800b318:	d0df      	beq.n	800b2da <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x70>
 800b31a:	9a05      	ldr	r2, [sp, #20]
 800b31c:	bb42      	cbnz	r2, 800b370 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x106>
 800b31e:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 800b322:	4298      	cmp	r0, r3
 800b324:	d001      	beq.n	800b32a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xc0>
 800b326:	4550      	cmp	r0, sl
 800b328:	d1bd      	bne.n	800b2a6 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800b32a:	8823      	ldrh	r3, [r4, #0]
 800b32c:	8b21      	ldrh	r1, [r4, #24]
 800b32e:	2b20      	cmp	r3, #32
 800b330:	d001      	beq.n	800b336 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xcc>
 800b332:	4553      	cmp	r3, sl
 800b334:	d131      	bne.n	800b39a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x130>
 800b336:	2e00      	cmp	r6, #0
 800b338:	bf0a      	itet	eq
 800b33a:	460d      	moveq	r5, r1
 800b33c:	4630      	movne	r0, r6
 800b33e:	2001      	moveq	r0, #1
 800b340:	440a      	add	r2, r1
 800b342:	8aa3      	ldrh	r3, [r4, #20]
 800b344:	f8b4 c010 	ldrh.w	ip, [r4, #16]
 800b348:	b292      	uxth	r2, r2
 800b34a:	8322      	strh	r2, [r4, #24]
 800b34c:	4413      	add	r3, r2
 800b34e:	2f00      	cmp	r7, #0
 800b350:	d03a      	beq.n	800b3c8 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x15e>
 800b352:	f1bb 0f00 	cmp.w	fp, #0
 800b356:	d102      	bne.n	800b35e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xf4>
 800b358:	9903      	ldr	r1, [sp, #12]
 800b35a:	b301      	cbz	r1, 800b39e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x134>
 800b35c:	b1f8      	cbz	r0, 800b39e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x134>
 800b35e:	8ba1      	ldrh	r1, [r4, #28]
 800b360:	4419      	add	r1, r3
 800b362:	458c      	cmp	ip, r1
 800b364:	da2a      	bge.n	800b3bc <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x152>
 800b366:	8a61      	ldrh	r1, [r4, #18]
 800b368:	b341      	cbz	r1, 800b3bc <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x152>
 800b36a:	4563      	cmp	r3, ip
 800b36c:	dd9b      	ble.n	800b2a6 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800b36e:	e01c      	b.n	800b3aa <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x140>
 800b370:	8893      	ldrh	r3, [r2, #4]
 800b372:	8023      	strh	r3, [r4, #0]
 800b374:	f892 800d 	ldrb.w	r8, [r2, #13]
 800b378:	ea4f 0848 	mov.w	r8, r8, lsl #1
 800b37c:	f408 7080 	and.w	r0, r8, #256	; 0x100
 800b380:	f892 800a 	ldrb.w	r8, [r2, #10]
 800b384:	ea48 0800 	orr.w	r8, r8, r0
 800b388:	68e0      	ldr	r0, [r4, #12]
 800b38a:	6803      	ldr	r3, [r0, #0]
 800b38c:	4649      	mov	r1, r9
 800b38e:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800b390:	4798      	blx	r3
 800b392:	eb08 0200 	add.w	r2, r8, r0
 800b396:	b292      	uxth	r2, r2
 800b398:	e7c7      	b.n	800b32a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xc0>
 800b39a:	2000      	movs	r0, #0
 800b39c:	e7d0      	b.n	800b340 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xd6>
 800b39e:	4563      	cmp	r3, ip
 800b3a0:	dd81      	ble.n	800b2a6 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800b3a2:	8a63      	ldrh	r3, [r4, #18]
 800b3a4:	2b00      	cmp	r3, #0
 800b3a6:	f43f af7e 	beq.w	800b2a6 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800b3aa:	2301      	movs	r3, #1
 800b3ac:	77a3      	strb	r3, [r4, #30]
 800b3ae:	8ba2      	ldrh	r2, [r4, #28]
 800b3b0:	8b63      	ldrh	r3, [r4, #26]
 800b3b2:	4413      	add	r3, r2
 800b3b4:	8363      	strh	r3, [r4, #26]
 800b3b6:	b007      	add	sp, #28
 800b3b8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800b3bc:	2300      	movs	r3, #0
 800b3be:	4611      	mov	r1, r2
 800b3c0:	4620      	mov	r0, r4
 800b3c2:	f7ff ff42 	bl	800b24a <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 800b3c6:	e76e      	b.n	800b2a6 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800b3c8:	4563      	cmp	r3, ip
 800b3ca:	dd14      	ble.n	800b3f6 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x18c>
 800b3cc:	9b02      	ldr	r3, [sp, #8]
 800b3ce:	b113      	cbz	r3, 800b3d6 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x16c>
 800b3d0:	2301      	movs	r3, #1
 800b3d2:	460a      	mov	r2, r1
 800b3d4:	e783      	b.n	800b2de <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x74>
 800b3d6:	9b01      	ldr	r3, [sp, #4]
 800b3d8:	2b00      	cmp	r3, #0
 800b3da:	f43f af64 	beq.w	800b2a6 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800b3de:	2800      	cmp	r0, #0
 800b3e0:	f47f af61 	bne.w	800b2a6 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800b3e4:	b116      	cbz	r6, 800b3ec <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x182>
 800b3e6:	2301      	movs	r3, #1
 800b3e8:	462a      	mov	r2, r5
 800b3ea:	e779      	b.n	800b2e0 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x76>
 800b3ec:	8a63      	ldrh	r3, [r4, #18]
 800b3ee:	2b00      	cmp	r3, #0
 800b3f0:	f43f af59 	beq.w	800b2a6 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800b3f4:	e7df      	b.n	800b3b6 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x14c>
 800b3f6:	2800      	cmp	r0, #0
 800b3f8:	f47f af55 	bne.w	800b2a6 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800b3fc:	2e00      	cmp	r6, #0
 800b3fe:	f43f af52 	beq.w	800b2a6 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800b402:	2301      	movs	r3, #1
 800b404:	462a      	mov	r2, r5
 800b406:	e7db      	b.n	800b3c0 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x156>

0800b408 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>:
 800b408:	b530      	push	{r4, r5, lr}
 800b40a:	4605      	mov	r5, r0
 800b40c:	b08b      	sub	sp, #44	; 0x2c
 800b40e:	b191      	cbz	r1, 800b436 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x2e>
 800b410:	e9cd 3100 	strd	r3, r1, [sp]
 800b414:	4613      	mov	r3, r2
 800b416:	4601      	mov	r1, r0
 800b418:	f8bd 2038 	ldrh.w	r2, [sp, #56]	; 0x38
 800b41c:	a802      	add	r0, sp, #8
 800b41e:	f7ff fd0d 	bl	800ae3c <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE>
 800b422:	2401      	movs	r4, #1
 800b424:	2100      	movs	r1, #0
 800b426:	a802      	add	r0, sp, #8
 800b428:	f7ff ff1f 	bl	800b26a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb>
 800b42c:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 800b430:	b163      	cbz	r3, 800b44c <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x44>
 800b432:	3401      	adds	r4, #1
 800b434:	e7f6      	b.n	800b424 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x1c>
 800b436:	f002 f9bf 	bl	800d7b8 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800b43a:	2401      	movs	r4, #1
 800b43c:	280a      	cmp	r0, #10
 800b43e:	4628      	mov	r0, r5
 800b440:	bf08      	it	eq
 800b442:	3401      	addeq	r4, #1
 800b444:	f002 f9b8 	bl	800d7b8 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800b448:	2800      	cmp	r0, #0
 800b44a:	d1f7      	bne.n	800b43c <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x34>
 800b44c:	b2a0      	uxth	r0, r4
 800b44e:	b00b      	add	sp, #44	; 0x2c
 800b450:	bd30      	pop	{r4, r5, pc}

0800b452 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>:
 800b452:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b456:	b0db      	sub	sp, #364	; 0x16c
 800b458:	4689      	mov	r9, r1
 800b45a:	f8dd a190 	ldr.w	sl, [sp, #400]	; 0x190
 800b45e:	900a      	str	r0, [sp, #40]	; 0x28
 800b460:	461c      	mov	r4, r3
 800b462:	f1ba 0f00 	cmp.w	sl, #0
 800b466:	f000 80a5 	beq.w	800b5b4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x162>
 800b46a:	681b      	ldr	r3, [r3, #0]
 800b46c:	2b00      	cmp	r3, #0
 800b46e:	f000 80a1 	beq.w	800b5b4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x162>
 800b472:	7ba3      	ldrb	r3, [r4, #14]
 800b474:	2b00      	cmp	r3, #0
 800b476:	f000 809d 	beq.w	800b5b4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x162>
 800b47a:	6810      	ldr	r0, [r2, #0]
 800b47c:	6851      	ldr	r1, [r2, #4]
 800b47e:	f9b9 2004 	ldrsh.w	r2, [r9, #4]
 800b482:	f8ad 203c 	strh.w	r2, [sp, #60]	; 0x3c
 800b486:	f10d 0830 	add.w	r8, sp, #48	; 0x30
 800b48a:	4643      	mov	r3, r8
 800b48c:	c303      	stmia	r3!, {r0, r1}
 800b48e:	2500      	movs	r5, #0
 800b490:	f9b9 3006 	ldrsh.w	r3, [r9, #6]
 800b494:	79a2      	ldrb	r2, [r4, #6]
 800b496:	f8ad 303e 	strh.w	r3, [sp, #62]	; 0x3e
 800b49a:	a90e      	add	r1, sp, #56	; 0x38
 800b49c:	4640      	mov	r0, r8
 800b49e:	950e      	str	r5, [sp, #56]	; 0x38
 800b4a0:	f7ff fd42 	bl	800af28 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 800b4a4:	a90e      	add	r1, sp, #56	; 0x38
 800b4a6:	4608      	mov	r0, r1
 800b4a8:	79a2      	ldrb	r2, [r4, #6]
 800b4aa:	af18      	add	r7, sp, #96	; 0x60
 800b4ac:	f7ff fd3c 	bl	800af28 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 800b4b0:	4638      	mov	r0, r7
 800b4b2:	f001 fd4b 	bl	800cf4c <_ZN8touchgfx12TextProviderC1Ev>
 800b4b6:	6820      	ldr	r0, [r4, #0]
 800b4b8:	6803      	ldr	r3, [r0, #0]
 800b4ba:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800b4bc:	4798      	blx	r3
 800b4be:	9a65      	ldr	r2, [sp, #404]	; 0x194
 800b4c0:	4603      	mov	r3, r0
 800b4c2:	4651      	mov	r1, sl
 800b4c4:	4638      	mov	r0, r7
 800b4c6:	f001 fd86 	bl	800cfd6 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_>
 800b4ca:	6820      	ldr	r0, [r4, #0]
 800b4cc:	7923      	ldrb	r3, [r4, #4]
 800b4ce:	9308      	str	r3, [sp, #32]
 800b4d0:	6803      	ldr	r3, [r0, #0]
 800b4d2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800b4d4:	4798      	blx	r3
 800b4d6:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800b4da:	181e      	adds	r6, r3, r0
 800b4dc:	42ae      	cmp	r6, r5
 800b4de:	dd06      	ble.n	800b4ee <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x9c>
 800b4e0:	f9b8 2002 	ldrsh.w	r2, [r8, #2]
 800b4e4:	4282      	cmp	r2, r0
 800b4e6:	bfa4      	itt	ge
 800b4e8:	189d      	addge	r5, r3, r2
 800b4ea:	fb95 f5f6 	sdivge	r5, r5, r6
 800b4ee:	a82e      	add	r0, sp, #184	; 0xb8
 800b4f0:	f001 fd2c 	bl	800cf4c <_ZN8touchgfx12TextProviderC1Ev>
 800b4f4:	7c23      	ldrb	r3, [r4, #16]
 800b4f6:	b14b      	cbz	r3, 800b50c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xba>
 800b4f8:	6820      	ldr	r0, [r4, #0]
 800b4fa:	6803      	ldr	r3, [r0, #0]
 800b4fc:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800b4fe:	4798      	blx	r3
 800b500:	9a65      	ldr	r2, [sp, #404]	; 0x194
 800b502:	4603      	mov	r3, r0
 800b504:	4651      	mov	r1, sl
 800b506:	a82e      	add	r0, sp, #184	; 0xb8
 800b508:	f001 fd65 	bl	800cfd6 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_>
 800b50c:	7c21      	ldrb	r1, [r4, #16]
 800b50e:	9101      	str	r1, [sp, #4]
 800b510:	6821      	ldr	r1, [r4, #0]
 800b512:	7963      	ldrb	r3, [r4, #5]
 800b514:	9100      	str	r1, [sp, #0]
 800b516:	f8bd 203c 	ldrh.w	r2, [sp, #60]	; 0x3c
 800b51a:	a92e      	add	r1, sp, #184	; 0xb8
 800b51c:	a810      	add	r0, sp, #64	; 0x40
 800b51e:	f7ff fc8d 	bl	800ae3c <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE>
 800b522:	7c23      	ldrb	r3, [r4, #16]
 800b524:	b9bb      	cbnz	r3, 800b556 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x104>
 800b526:	fa1f fa86 	uxth.w	sl, r6
 800b52a:	2d00      	cmp	r5, #0
 800b52c:	dd45      	ble.n	800b5ba <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x168>
 800b52e:	4638      	mov	r0, r7
 800b530:	f002 f942 	bl	800d7b8 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800b534:	2800      	cmp	r0, #0
 800b536:	d03d      	beq.n	800b5b4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x162>
 800b538:	280a      	cmp	r0, #10
 800b53a:	d1f6      	bne.n	800b52a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xd8>
 800b53c:	f8bd 303a 	ldrh.w	r3, [sp, #58]	; 0x3a
 800b540:	4453      	add	r3, sl
 800b542:	f8ad 303a 	strh.w	r3, [sp, #58]	; 0x3a
 800b546:	f8bd 303e 	ldrh.w	r3, [sp, #62]	; 0x3e
 800b54a:	eba3 030a 	sub.w	r3, r3, sl
 800b54e:	3d01      	subs	r5, #1
 800b550:	f8ad 303e 	strh.w	r3, [sp, #62]	; 0x3e
 800b554:	e7e9      	b.n	800b52a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xd8>
 800b556:	0073      	lsls	r3, r6, #1
 800b558:	9309      	str	r3, [sp, #36]	; 0x24
 800b55a:	f64f 7bff 	movw	fp, #65535	; 0xffff
 800b55e:	fa1f fa86 	uxth.w	sl, r6
 800b562:	2d00      	cmp	r5, #0
 800b564:	dd29      	ble.n	800b5ba <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x168>
 800b566:	f9bd 103e 	ldrsh.w	r1, [sp, #62]	; 0x3e
 800b56a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800b56c:	428b      	cmp	r3, r1
 800b56e:	bfd4      	ite	le
 800b570:	2100      	movle	r1, #0
 800b572:	2101      	movgt	r1, #1
 800b574:	a810      	add	r0, sp, #64	; 0x40
 800b576:	f7ff fe78 	bl	800b26a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb>
 800b57a:	f8bd 3052 	ldrh.w	r3, [sp, #82]	; 0x52
 800b57e:	3b01      	subs	r3, #1
 800b580:	b29b      	uxth	r3, r3
 800b582:	455b      	cmp	r3, fp
 800b584:	930b      	str	r3, [sp, #44]	; 0x2c
 800b586:	d005      	beq.n	800b594 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x142>
 800b588:	7961      	ldrb	r1, [r4, #5]
 800b58a:	4638      	mov	r0, r7
 800b58c:	f7f7 fce2 	bl	8002f54 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 800b590:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800b592:	e7f4      	b.n	800b57e <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x12c>
 800b594:	f8bd 303a 	ldrh.w	r3, [sp, #58]	; 0x3a
 800b598:	4453      	add	r3, sl
 800b59a:	f8ad 303a 	strh.w	r3, [sp, #58]	; 0x3a
 800b59e:	f8bd 303e 	ldrh.w	r3, [sp, #62]	; 0x3e
 800b5a2:	eba3 030a 	sub.w	r3, r3, sl
 800b5a6:	f8ad 303e 	strh.w	r3, [sp, #62]	; 0x3e
 800b5aa:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 800b5ae:	3d01      	subs	r5, #1
 800b5b0:	2b00      	cmp	r3, #0
 800b5b2:	d1d6      	bne.n	800b562 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x110>
 800b5b4:	b05b      	add	sp, #364	; 0x16c
 800b5b6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800b5ba:	ea4f 0a46 	mov.w	sl, r6, lsl #1
 800b5be:	ad44      	add	r5, sp, #272	; 0x110
 800b5c0:	f04f 0b00 	mov.w	fp, #0
 800b5c4:	7c23      	ldrb	r3, [r4, #16]
 800b5c6:	2b00      	cmp	r3, #0
 800b5c8:	d067      	beq.n	800b69a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x248>
 800b5ca:	f9bd 103e 	ldrsh.w	r1, [sp, #62]	; 0x3e
 800b5ce:	458a      	cmp	sl, r1
 800b5d0:	bfd4      	ite	le
 800b5d2:	2100      	movle	r1, #0
 800b5d4:	2101      	movgt	r1, #1
 800b5d6:	a810      	add	r0, sp, #64	; 0x40
 800b5d8:	f7ff fe47 	bl	800b26a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb>
 800b5dc:	9b08      	ldr	r3, [sp, #32]
 800b5de:	2b00      	cmp	r3, #0
 800b5e0:	d056      	beq.n	800b690 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x23e>
 800b5e2:	7c23      	ldrb	r3, [r4, #16]
 800b5e4:	9309      	str	r3, [sp, #36]	; 0x24
 800b5e6:	2258      	movs	r2, #88	; 0x58
 800b5e8:	4639      	mov	r1, r7
 800b5ea:	4628      	mov	r0, r5
 800b5ec:	f00e f844 	bl	8019678 <memcpy>
 800b5f0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800b5f2:	2b00      	cmp	r3, #0
 800b5f4:	d059      	beq.n	800b6aa <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x258>
 800b5f6:	f9bd 305a 	ldrsh.w	r3, [sp, #90]	; 0x5a
 800b5fa:	7922      	ldrb	r2, [r4, #4]
 800b5fc:	2a01      	cmp	r2, #1
 800b5fe:	d13d      	bne.n	800b67c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x22a>
 800b600:	f9bd 003c 	ldrsh.w	r0, [sp, #60]	; 0x3c
 800b604:	1ac0      	subs	r0, r0, r3
 800b606:	2302      	movs	r3, #2
 800b608:	fb90 f0f3 	sdiv	r0, r0, r3
 800b60c:	b200      	sxth	r0, r0
 800b60e:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 800b612:	4418      	add	r0, r3
 800b614:	7c23      	ldrb	r3, [r4, #16]
 800b616:	f8ad 0110 	strh.w	r0, [sp, #272]	; 0x110
 800b61a:	2b00      	cmp	r3, #0
 800b61c:	d03a      	beq.n	800b694 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x242>
 800b61e:	f8bd 2052 	ldrh.w	r2, [sp, #82]	; 0x52
 800b622:	f89d 105e 	ldrb.w	r1, [sp, #94]	; 0x5e
 800b626:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 800b62a:	9500      	str	r5, [sp, #0]
 800b62c:	e9cd 2105 	strd	r2, r1, [sp, #20]
 800b630:	e9cd b703 	strd	fp, r7, [sp, #12]
 800b634:	e9cd 8401 	strd	r8, r4, [sp, #4]
 800b638:	464a      	mov	r2, r9
 800b63a:	2100      	movs	r1, #0
 800b63c:	980a      	ldr	r0, [sp, #40]	; 0x28
 800b63e:	f7ff fca4 	bl	800af8a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>
 800b642:	2800      	cmp	r0, #0
 800b644:	d1b6      	bne.n	800b5b4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x162>
 800b646:	f8bd 303a 	ldrh.w	r3, [sp, #58]	; 0x3a
 800b64a:	b2b2      	uxth	r2, r6
 800b64c:	4611      	mov	r1, r2
 800b64e:	4413      	add	r3, r2
 800b650:	f8bd 203e 	ldrh.w	r2, [sp, #62]	; 0x3e
 800b654:	1a52      	subs	r2, r2, r1
 800b656:	7c21      	ldrb	r1, [r4, #16]
 800b658:	b21b      	sxth	r3, r3
 800b65a:	b212      	sxth	r2, r2
 800b65c:	f8ad 303a 	strh.w	r3, [sp, #58]	; 0x3a
 800b660:	f8ad 203e 	strh.w	r2, [sp, #62]	; 0x3e
 800b664:	b109      	cbz	r1, 800b66a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x218>
 800b666:	42b2      	cmp	r2, r6
 800b668:	dba4      	blt.n	800b5b4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x162>
 800b66a:	f8b8 2006 	ldrh.w	r2, [r8, #6]
 800b66e:	f8b8 1002 	ldrh.w	r1, [r8, #2]
 800b672:	440a      	add	r2, r1
 800b674:	b212      	sxth	r2, r2
 800b676:	4293      	cmp	r3, r2
 800b678:	dda4      	ble.n	800b5c4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x172>
 800b67a:	e79b      	b.n	800b5b4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x162>
 800b67c:	2a02      	cmp	r2, #2
 800b67e:	d105      	bne.n	800b68c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x23a>
 800b680:	7be2      	ldrb	r2, [r4, #15]
 800b682:	f8bd 003c 	ldrh.w	r0, [sp, #60]	; 0x3c
 800b686:	1a80      	subs	r0, r0, r2
 800b688:	1ac0      	subs	r0, r0, r3
 800b68a:	e7bf      	b.n	800b60c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1ba>
 800b68c:	2000      	movs	r0, #0
 800b68e:	e7be      	b.n	800b60e <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1bc>
 800b690:	7be0      	ldrb	r0, [r4, #15]
 800b692:	e7bc      	b.n	800b60e <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1bc>
 800b694:	f647 72ff 	movw	r2, #32767	; 0x7fff
 800b698:	e7c3      	b.n	800b622 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1d0>
 800b69a:	9b08      	ldr	r3, [sp, #32]
 800b69c:	2b00      	cmp	r3, #0
 800b69e:	d0f7      	beq.n	800b690 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x23e>
 800b6a0:	2258      	movs	r2, #88	; 0x58
 800b6a2:	4639      	mov	r1, r7
 800b6a4:	4628      	mov	r0, r5
 800b6a6:	f00d ffe7 	bl	8019678 <memcpy>
 800b6aa:	2300      	movs	r3, #0
 800b6ac:	f647 72ff 	movw	r2, #32767	; 0x7fff
 800b6b0:	6821      	ldr	r1, [r4, #0]
 800b6b2:	4628      	mov	r0, r5
 800b6b4:	f7ff fbfc 	bl	800aeb0 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 800b6b8:	b203      	sxth	r3, r0
 800b6ba:	e79e      	b.n	800b5fa <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1a8>

0800b6bc <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>:
 800b6bc:	b510      	push	{r4, lr}
 800b6be:	2b02      	cmp	r3, #2
 800b6c0:	f9b0 4000 	ldrsh.w	r4, [r0]
 800b6c4:	d00b      	beq.n	800b6de <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x22>
 800b6c6:	2b03      	cmp	r3, #3
 800b6c8:	d00e      	beq.n	800b6e8 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x2c>
 800b6ca:	2b01      	cmp	r3, #1
 800b6cc:	d001      	beq.n	800b6d2 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x16>
 800b6ce:	1860      	adds	r0, r4, r1
 800b6d0:	bd10      	pop	{r4, pc}
 800b6d2:	8880      	ldrh	r0, [r0, #4]
 800b6d4:	4420      	add	r0, r4
 800b6d6:	b200      	sxth	r0, r0
 800b6d8:	1a80      	subs	r0, r0, r2
 800b6da:	3801      	subs	r0, #1
 800b6dc:	e7f8      	b.n	800b6d0 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x14>
 800b6de:	8880      	ldrh	r0, [r0, #4]
 800b6e0:	4420      	add	r0, r4
 800b6e2:	b200      	sxth	r0, r0
 800b6e4:	1a40      	subs	r0, r0, r1
 800b6e6:	e7f8      	b.n	800b6da <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x1e>
 800b6e8:	18a0      	adds	r0, r4, r2
 800b6ea:	e7f1      	b.n	800b6d0 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x14>

0800b6ec <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>:
 800b6ec:	b510      	push	{r4, lr}
 800b6ee:	2b02      	cmp	r3, #2
 800b6f0:	f9b0 4002 	ldrsh.w	r4, [r0, #2]
 800b6f4:	d006      	beq.n	800b704 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x18>
 800b6f6:	2b03      	cmp	r3, #3
 800b6f8:	d00a      	beq.n	800b710 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x24>
 800b6fa:	2b01      	cmp	r3, #1
 800b6fc:	bf14      	ite	ne
 800b6fe:	18a0      	addne	r0, r4, r2
 800b700:	1860      	addeq	r0, r4, r1
 800b702:	bd10      	pop	{r4, pc}
 800b704:	88c0      	ldrh	r0, [r0, #6]
 800b706:	4420      	add	r0, r4
 800b708:	b200      	sxth	r0, r0
 800b70a:	1a80      	subs	r0, r0, r2
 800b70c:	3801      	subs	r0, #1
 800b70e:	e7f8      	b.n	800b702 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x16>
 800b710:	88c0      	ldrh	r0, [r0, #6]
 800b712:	4420      	add	r0, r4
 800b714:	b200      	sxth	r0, r0
 800b716:	1a40      	subs	r0, r0, r1
 800b718:	e7f8      	b.n	800b70c <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x20>
	...

0800b71c <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE>:
 800b71c:	4b01      	ldr	r3, [pc, #4]	; (800b724 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE+0x8>)
 800b71e:	2200      	movs	r2, #0
 800b720:	601a      	str	r2, [r3, #0]
 800b722:	4770      	bx	lr
 800b724:	20012340 	.word	0x20012340

0800b728 <_ZN8touchgfx16TouchCalibration6muldivEllllllRl>:
 800b728:	b5f0      	push	{r4, r5, r6, r7, lr}
 800b72a:	e9dd e405 	ldrd	lr, r4, [sp, #20]
 800b72e:	1e05      	subs	r5, r0, #0
 800b730:	bfba      	itte	lt
 800b732:	f04f 37ff 	movlt.w	r7, #4294967295
 800b736:	426d      	neglt	r5, r5
 800b738:	2701      	movge	r7, #1
 800b73a:	f1be 0f00 	cmp.w	lr, #0
 800b73e:	bfb8      	it	lt
 800b740:	f1ce 0e00 	rsblt	lr, lr, #0
 800b744:	f04f 0601 	mov.w	r6, #1
 800b748:	fa4e f001 	asr.w	r0, lr, r1
 800b74c:	fa06 f101 	lsl.w	r1, r6, r1
 800b750:	f8dd c01c 	ldr.w	ip, [sp, #28]
 800b754:	f101 31ff 	add.w	r1, r1, #4294967295
 800b758:	ea01 010e 	and.w	r1, r1, lr
 800b75c:	bfb8      	it	lt
 800b75e:	427f      	neglt	r7, r7
 800b760:	434d      	muls	r5, r1
 800b762:	2c00      	cmp	r4, #0
 800b764:	f8dc 1000 	ldr.w	r1, [ip]
 800b768:	bfb8      	it	lt
 800b76a:	4264      	neglt	r4, r4
 800b76c:	fb03 1300 	mla	r3, r3, r0, r1
 800b770:	fb95 f1f4 	sdiv	r1, r5, r4
 800b774:	fb04 5511 	mls	r5, r4, r1, r5
 800b778:	441d      	add	r5, r3
 800b77a:	fb95 f3f4 	sdiv	r3, r5, r4
 800b77e:	fb04 5413 	mls	r4, r4, r3, r5
 800b782:	4419      	add	r1, r3
 800b784:	bfb8      	it	lt
 800b786:	427f      	neglt	r7, r7
 800b788:	fb02 1000 	mla	r0, r2, r0, r1
 800b78c:	f8cc 4000 	str.w	r4, [ip]
 800b790:	4378      	muls	r0, r7
 800b792:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800b794 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>:
 800b794:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b798:	4c24      	ldr	r4, [pc, #144]	; (800b82c <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x98>)
 800b79a:	6807      	ldr	r7, [r0, #0]
 800b79c:	69a3      	ldr	r3, [r4, #24]
 800b79e:	b086      	sub	sp, #24
 800b7a0:	4605      	mov	r5, r0
 800b7a2:	b92b      	cbnz	r3, 800b7b0 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x1c>
 800b7a4:	6840      	ldr	r0, [r0, #4]
 800b7a6:	e9c5 7000 	strd	r7, r0, [r5]
 800b7aa:	b006      	add	sp, #24
 800b7ac:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800b7b0:	68a2      	ldr	r2, [r4, #8]
 800b7b2:	6820      	ldr	r0, [r4, #0]
 800b7b4:	ae06      	add	r6, sp, #24
 800b7b6:	f04f 0802 	mov.w	r8, #2
 800b7ba:	fb93 f1f8 	sdiv	r1, r3, r8
 800b7be:	440a      	add	r2, r1
 800b7c0:	f846 2d04 	str.w	r2, [r6, #-4]!
 800b7c4:	69e1      	ldr	r1, [r4, #28]
 800b7c6:	9700      	str	r7, [sp, #0]
 800b7c8:	e9cd 3601 	strd	r3, r6, [sp, #4]
 800b7cc:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800b7ce:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800b7d0:	f7ff ffaa 	bl	800b728 <_ZN8touchgfx16TouchCalibration6muldivEllllllRl>
 800b7d4:	69a3      	ldr	r3, [r4, #24]
 800b7d6:	9301      	str	r3, [sp, #4]
 800b7d8:	686b      	ldr	r3, [r5, #4]
 800b7da:	9300      	str	r3, [sp, #0]
 800b7dc:	4607      	mov	r7, r0
 800b7de:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800b7e0:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800b7e2:	6a21      	ldr	r1, [r4, #32]
 800b7e4:	9602      	str	r6, [sp, #8]
 800b7e6:	6860      	ldr	r0, [r4, #4]
 800b7e8:	f7ff ff9e 	bl	800b728 <_ZN8touchgfx16TouchCalibration6muldivEllllllRl>
 800b7ec:	6963      	ldr	r3, [r4, #20]
 800b7ee:	69a2      	ldr	r2, [r4, #24]
 800b7f0:	fb92 f8f8 	sdiv	r8, r2, r8
 800b7f4:	4443      	add	r3, r8
 800b7f6:	9305      	str	r3, [sp, #20]
 800b7f8:	682b      	ldr	r3, [r5, #0]
 800b7fa:	9300      	str	r3, [sp, #0]
 800b7fc:	e9cd 2601 	strd	r2, r6, [sp, #4]
 800b800:	6c63      	ldr	r3, [r4, #68]	; 0x44
 800b802:	6b62      	ldr	r2, [r4, #52]	; 0x34
 800b804:	6a61      	ldr	r1, [r4, #36]	; 0x24
 800b806:	4407      	add	r7, r0
 800b808:	68e0      	ldr	r0, [r4, #12]
 800b80a:	f7ff ff8d 	bl	800b728 <_ZN8touchgfx16TouchCalibration6muldivEllllllRl>
 800b80e:	69a3      	ldr	r3, [r4, #24]
 800b810:	9301      	str	r3, [sp, #4]
 800b812:	686b      	ldr	r3, [r5, #4]
 800b814:	9300      	str	r3, [sp, #0]
 800b816:	4680      	mov	r8, r0
 800b818:	9602      	str	r6, [sp, #8]
 800b81a:	6ca3      	ldr	r3, [r4, #72]	; 0x48
 800b81c:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800b81e:	6aa1      	ldr	r1, [r4, #40]	; 0x28
 800b820:	6920      	ldr	r0, [r4, #16]
 800b822:	f7ff ff81 	bl	800b728 <_ZN8touchgfx16TouchCalibration6muldivEllllllRl>
 800b826:	4440      	add	r0, r8
 800b828:	e7bd      	b.n	800b7a6 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x12>
 800b82a:	bf00      	nop
 800b82c:	20012344 	.word	0x20012344

0800b830 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>:
 800b830:	b510      	push	{r4, lr}
 800b832:	4b07      	ldr	r3, [pc, #28]	; (800b850 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x20>)
 800b834:	781b      	ldrb	r3, [r3, #0]
 800b836:	2b01      	cmp	r3, #1
 800b838:	d108      	bne.n	800b84c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x1c>
 800b83a:	4b06      	ldr	r3, [pc, #24]	; (800b854 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x24>)
 800b83c:	880c      	ldrh	r4, [r1, #0]
 800b83e:	881b      	ldrh	r3, [r3, #0]
 800b840:	f9b0 2000 	ldrsh.w	r2, [r0]
 800b844:	3b01      	subs	r3, #1
 800b846:	1b1b      	subs	r3, r3, r4
 800b848:	8003      	strh	r3, [r0, #0]
 800b84a:	800a      	strh	r2, [r1, #0]
 800b84c:	bd10      	pop	{r4, pc}
 800b84e:	bf00      	nop
 800b850:	20012330 	.word	0x20012330
 800b854:	20012334 	.word	0x20012334

0800b858 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>:
 800b858:	b510      	push	{r4, lr}
 800b85a:	4b0a      	ldr	r3, [pc, #40]	; (800b884 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x2c>)
 800b85c:	781b      	ldrb	r3, [r3, #0]
 800b85e:	2b01      	cmp	r3, #1
 800b860:	d10e      	bne.n	800b880 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x28>
 800b862:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 800b866:	8843      	ldrh	r3, [r0, #2]
 800b868:	f9b0 4000 	ldrsh.w	r4, [r0]
 800b86c:	8044      	strh	r4, [r0, #2]
 800b86e:	18ca      	adds	r2, r1, r3
 800b870:	4b05      	ldr	r3, [pc, #20]	; (800b888 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x30>)
 800b872:	881b      	ldrh	r3, [r3, #0]
 800b874:	1a9b      	subs	r3, r3, r2
 800b876:	8003      	strh	r3, [r0, #0]
 800b878:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800b87c:	80c3      	strh	r3, [r0, #6]
 800b87e:	8081      	strh	r1, [r0, #4]
 800b880:	bd10      	pop	{r4, pc}
 800b882:	bf00      	nop
 800b884:	20012330 	.word	0x20012330
 800b888:	2001232c 	.word	0x2001232c

0800b88c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>:
 800b88c:	b510      	push	{r4, lr}
 800b88e:	4b07      	ldr	r3, [pc, #28]	; (800b8ac <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x20>)
 800b890:	781b      	ldrb	r3, [r3, #0]
 800b892:	2b01      	cmp	r3, #1
 800b894:	d108      	bne.n	800b8a8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x1c>
 800b896:	f9b1 3000 	ldrsh.w	r3, [r1]
 800b89a:	f9b0 4000 	ldrsh.w	r4, [r0]
 800b89e:	8003      	strh	r3, [r0, #0]
 800b8a0:	8893      	ldrh	r3, [r2, #4]
 800b8a2:	3b01      	subs	r3, #1
 800b8a4:	1b1b      	subs	r3, r3, r4
 800b8a6:	800b      	strh	r3, [r1, #0]
 800b8a8:	bd10      	pop	{r4, pc}
 800b8aa:	bf00      	nop
 800b8ac:	20012330 	.word	0x20012330

0800b8b0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>:
 800b8b0:	b513      	push	{r0, r1, r4, lr}
 800b8b2:	4b08      	ldr	r3, [pc, #32]	; (800b8d4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x24>)
 800b8b4:	f9b3 2000 	ldrsh.w	r2, [r3]
 800b8b8:	4b07      	ldr	r3, [pc, #28]	; (800b8d8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x28>)
 800b8ba:	f8ad 2004 	strh.w	r2, [sp, #4]
 800b8be:	f9b3 3000 	ldrsh.w	r3, [r3]
 800b8c2:	f8ad 3006 	strh.w	r3, [sp, #6]
 800b8c6:	2400      	movs	r4, #0
 800b8c8:	466a      	mov	r2, sp
 800b8ca:	9400      	str	r4, [sp, #0]
 800b8cc:	f7ff ffde 	bl	800b88c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>
 800b8d0:	b002      	add	sp, #8
 800b8d2:	bd10      	pop	{r4, pc}
 800b8d4:	2001232c 	.word	0x2001232c
 800b8d8:	2001232e 	.word	0x2001232e

0800b8dc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>:
 800b8dc:	b510      	push	{r4, lr}
 800b8de:	4b0a      	ldr	r3, [pc, #40]	; (800b908 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x2c>)
 800b8e0:	781b      	ldrb	r3, [r3, #0]
 800b8e2:	2b01      	cmp	r3, #1
 800b8e4:	460a      	mov	r2, r1
 800b8e6:	d10d      	bne.n	800b904 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x28>
 800b8e8:	8881      	ldrh	r1, [r0, #4]
 800b8ea:	8803      	ldrh	r3, [r0, #0]
 800b8ec:	440b      	add	r3, r1
 800b8ee:	4601      	mov	r1, r0
 800b8f0:	3b01      	subs	r3, #1
 800b8f2:	f821 3b02 	strh.w	r3, [r1], #2
 800b8f6:	f7ff ffc9 	bl	800b88c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>
 800b8fa:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800b8fe:	88c2      	ldrh	r2, [r0, #6]
 800b900:	8082      	strh	r2, [r0, #4]
 800b902:	80c3      	strh	r3, [r0, #6]
 800b904:	bd10      	pop	{r4, pc}
 800b906:	bf00      	nop
 800b908:	20012330 	.word	0x20012330

0800b90c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>:
 800b90c:	b507      	push	{r0, r1, r2, lr}
 800b90e:	4b09      	ldr	r3, [pc, #36]	; (800b934 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x28>)
 800b910:	f9b3 2000 	ldrsh.w	r2, [r3]
 800b914:	4b08      	ldr	r3, [pc, #32]	; (800b938 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x2c>)
 800b916:	f8ad 2004 	strh.w	r2, [sp, #4]
 800b91a:	2100      	movs	r1, #0
 800b91c:	f9b3 3000 	ldrsh.w	r3, [r3]
 800b920:	9100      	str	r1, [sp, #0]
 800b922:	4669      	mov	r1, sp
 800b924:	f8ad 3006 	strh.w	r3, [sp, #6]
 800b928:	f7ff ffd8 	bl	800b8dc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 800b92c:	b003      	add	sp, #12
 800b92e:	f85d fb04 	ldr.w	pc, [sp], #4
 800b932:	bf00      	nop
 800b934:	2001232c 	.word	0x2001232c
 800b938:	2001232e 	.word	0x2001232e

0800b93c <_ZN8touchgfx11Application13requestRedrawEv>:
 800b93c:	4b06      	ldr	r3, [pc, #24]	; (800b958 <_ZN8touchgfx11Application13requestRedrawEv+0x1c>)
 800b93e:	f9b3 2000 	ldrsh.w	r2, [r3]
 800b942:	4b06      	ldr	r3, [pc, #24]	; (800b95c <_ZN8touchgfx11Application13requestRedrawEv+0x20>)
 800b944:	f8a0 2130 	strh.w	r2, [r0, #304]	; 0x130
 800b948:	f9b3 3000 	ldrsh.w	r3, [r3]
 800b94c:	f8a0 3132 	strh.w	r3, [r0, #306]	; 0x132
 800b950:	2100      	movs	r1, #0
 800b952:	f8c0 112c 	str.w	r1, [r0, #300]	; 0x12c
 800b956:	4770      	bx	lr
 800b958:	2001232c 	.word	0x2001232c
 800b95c:	2001232e 	.word	0x2001232e

0800b960 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE>:
 800b960:	4b03      	ldr	r3, [pc, #12]	; (800b970 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0x10>)
 800b962:	6818      	ldr	r0, [r3, #0]
 800b964:	b110      	cbz	r0, 800b96c <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0xc>
 800b966:	6803      	ldr	r3, [r0, #0]
 800b968:	699b      	ldr	r3, [r3, #24]
 800b96a:	4718      	bx	r3
 800b96c:	4770      	bx	lr
 800b96e:	bf00      	nop
 800b970:	20012394 	.word	0x20012394

0800b974 <_ZN8touchgfx11Application29handlePendingScreenTransitionEv>:
 800b974:	4770      	bx	lr
	...

0800b978 <_ZN8touchgfx11Application4drawEv>:
 800b978:	b507      	push	{r0, r1, r2, lr}
 800b97a:	4b09      	ldr	r3, [pc, #36]	; (800b9a0 <_ZN8touchgfx11Application4drawEv+0x28>)
 800b97c:	f9b3 2000 	ldrsh.w	r2, [r3]
 800b980:	4b08      	ldr	r3, [pc, #32]	; (800b9a4 <_ZN8touchgfx11Application4drawEv+0x2c>)
 800b982:	f8ad 2004 	strh.w	r2, [sp, #4]
 800b986:	f9b3 3000 	ldrsh.w	r3, [r3]
 800b98a:	f8ad 3006 	strh.w	r3, [sp, #6]
 800b98e:	6803      	ldr	r3, [r0, #0]
 800b990:	2100      	movs	r1, #0
 800b992:	9100      	str	r1, [sp, #0]
 800b994:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800b996:	4669      	mov	r1, sp
 800b998:	4798      	blx	r3
 800b99a:	b003      	add	sp, #12
 800b99c:	f85d fb04 	ldr.w	pc, [sp], #4
 800b9a0:	2001232c 	.word	0x2001232c
 800b9a4:	2001232e 	.word	0x2001232e

0800b9a8 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE>:
 800b9a8:	4b03      	ldr	r3, [pc, #12]	; (800b9b8 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0x10>)
 800b9aa:	6818      	ldr	r0, [r3, #0]
 800b9ac:	b110      	cbz	r0, 800b9b4 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0xc>
 800b9ae:	6803      	ldr	r3, [r0, #0]
 800b9b0:	69db      	ldr	r3, [r3, #28]
 800b9b2:	4718      	bx	r3
 800b9b4:	4770      	bx	lr
 800b9b6:	bf00      	nop
 800b9b8:	20012394 	.word	0x20012394

0800b9bc <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE>:
 800b9bc:	4b03      	ldr	r3, [pc, #12]	; (800b9cc <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0x10>)
 800b9be:	6818      	ldr	r0, [r3, #0]
 800b9c0:	b110      	cbz	r0, 800b9c8 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0xc>
 800b9c2:	6803      	ldr	r3, [r0, #0]
 800b9c4:	6a1b      	ldr	r3, [r3, #32]
 800b9c6:	4718      	bx	r3
 800b9c8:	4770      	bx	lr
 800b9ca:	bf00      	nop
 800b9cc:	20012394 	.word	0x20012394

0800b9d0 <_ZN8touchgfx11Application14handleKeyEventEh>:
 800b9d0:	4b03      	ldr	r3, [pc, #12]	; (800b9e0 <_ZN8touchgfx11Application14handleKeyEventEh+0x10>)
 800b9d2:	6818      	ldr	r0, [r3, #0]
 800b9d4:	b110      	cbz	r0, 800b9dc <_ZN8touchgfx11Application14handleKeyEventEh+0xc>
 800b9d6:	6803      	ldr	r3, [r0, #0]
 800b9d8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800b9da:	4718      	bx	r3
 800b9dc:	4770      	bx	lr
 800b9de:	bf00      	nop
 800b9e0:	20012394 	.word	0x20012394

0800b9e4 <_ZN8touchgfx11Application15handleTickEventEv>:
 800b9e4:	b570      	push	{r4, r5, r6, lr}
 800b9e6:	4d34      	ldr	r5, [pc, #208]	; (800bab8 <_ZN8touchgfx11Application15handleTickEventEv+0xd4>)
 800b9e8:	4604      	mov	r4, r0
 800b9ea:	6828      	ldr	r0, [r5, #0]
 800b9ec:	b140      	cbz	r0, 800ba00 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 800b9ee:	7a03      	ldrb	r3, [r0, #8]
 800b9f0:	b933      	cbnz	r3, 800ba00 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 800b9f2:	f884 3135 	strb.w	r3, [r4, #309]	; 0x135
 800b9f6:	6803      	ldr	r3, [r0, #0]
 800b9f8:	689b      	ldr	r3, [r3, #8]
 800b9fa:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800b9fe:	4718      	bx	r3
 800ba00:	f894 3135 	ldrb.w	r3, [r4, #309]	; 0x135
 800ba04:	b97b      	cbnz	r3, 800ba26 <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 800ba06:	b170      	cbz	r0, 800ba26 <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 800ba08:	7a03      	ldrb	r3, [r0, #8]
 800ba0a:	b163      	cbz	r3, 800ba26 <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 800ba0c:	4b2b      	ldr	r3, [pc, #172]	; (800babc <_ZN8touchgfx11Application15handleTickEventEv+0xd8>)
 800ba0e:	6818      	ldr	r0, [r3, #0]
 800ba10:	b110      	cbz	r0, 800ba18 <_ZN8touchgfx11Application15handleTickEventEv+0x34>
 800ba12:	6803      	ldr	r3, [r0, #0]
 800ba14:	691b      	ldr	r3, [r3, #16]
 800ba16:	4798      	blx	r3
 800ba18:	6828      	ldr	r0, [r5, #0]
 800ba1a:	6803      	ldr	r3, [r0, #0]
 800ba1c:	68db      	ldr	r3, [r3, #12]
 800ba1e:	4798      	blx	r3
 800ba20:	2301      	movs	r3, #1
 800ba22:	f884 3135 	strb.w	r3, [r4, #309]	; 0x135
 800ba26:	2500      	movs	r5, #0
 800ba28:	f8b4 0084 	ldrh.w	r0, [r4, #132]	; 0x84
 800ba2c:	42a8      	cmp	r0, r5
 800ba2e:	dd0c      	ble.n	800ba4a <_ZN8touchgfx11Application15handleTickEventEv+0x66>
 800ba30:	1963      	adds	r3, r4, r5
 800ba32:	f893 2088 	ldrb.w	r2, [r3, #136]	; 0x88
 800ba36:	b132      	cbz	r2, 800ba46 <_ZN8touchgfx11Application15handleTickEventEv+0x62>
 800ba38:	eb05 0245 	add.w	r2, r5, r5, lsl #1
 800ba3c:	4413      	add	r3, r2
 800ba3e:	6858      	ldr	r0, [r3, #4]
 800ba40:	6803      	ldr	r3, [r0, #0]
 800ba42:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 800ba44:	4798      	blx	r3
 800ba46:	3501      	adds	r5, #1
 800ba48:	e7ee      	b.n	800ba28 <_ZN8touchgfx11Application15handleTickEventEv+0x44>
 800ba4a:	2300      	movs	r3, #0
 800ba4c:	461a      	mov	r2, r3
 800ba4e:	4298      	cmp	r0, r3
 800ba50:	d114      	bne.n	800ba7c <_ZN8touchgfx11Application15handleTickEventEv+0x98>
 800ba52:	1d25      	adds	r5, r4, #4
 800ba54:	f8b4 1084 	ldrh.w	r1, [r4, #132]	; 0x84
 800ba58:	1e48      	subs	r0, r1, #1
 800ba5a:	b280      	uxth	r0, r0
 800ba5c:	4291      	cmp	r1, r2
 800ba5e:	dd24      	ble.n	800baaa <_ZN8touchgfx11Application15handleTickEventEv+0xc6>
 800ba60:	4288      	cmp	r0, r1
 800ba62:	d2fb      	bcs.n	800ba5c <_ZN8touchgfx11Application15handleTickEventEv+0x78>
 800ba64:	eb04 0380 	add.w	r3, r4, r0, lsl #2
 800ba68:	3304      	adds	r3, #4
 800ba6a:	eb05 0181 	add.w	r1, r5, r1, lsl #2
 800ba6e:	428b      	cmp	r3, r1
 800ba70:	d018      	beq.n	800baa4 <_ZN8touchgfx11Application15handleTickEventEv+0xc0>
 800ba72:	f853 6f04 	ldr.w	r6, [r3, #4]!
 800ba76:	f843 6c04 	str.w	r6, [r3, #-4]
 800ba7a:	e7f8      	b.n	800ba6e <_ZN8touchgfx11Application15handleTickEventEv+0x8a>
 800ba7c:	18e1      	adds	r1, r4, r3
 800ba7e:	f891 5088 	ldrb.w	r5, [r1, #136]	; 0x88
 800ba82:	b16d      	cbz	r5, 800baa0 <_ZN8touchgfx11Application15handleTickEventEv+0xbc>
 800ba84:	429a      	cmp	r2, r3
 800ba86:	d00a      	beq.n	800ba9e <_ZN8touchgfx11Application15handleTickEventEv+0xba>
 800ba88:	eb03 0643 	add.w	r6, r3, r3, lsl #1
 800ba8c:	4431      	add	r1, r6
 800ba8e:	684e      	ldr	r6, [r1, #4]
 800ba90:	b291      	uxth	r1, r2
 800ba92:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 800ba96:	604e      	str	r6, [r1, #4]
 800ba98:	18a1      	adds	r1, r4, r2
 800ba9a:	f881 5088 	strb.w	r5, [r1, #136]	; 0x88
 800ba9e:	3201      	adds	r2, #1
 800baa0:	3301      	adds	r3, #1
 800baa2:	e7d4      	b.n	800ba4e <_ZN8touchgfx11Application15handleTickEventEv+0x6a>
 800baa4:	f8a4 0084 	strh.w	r0, [r4, #132]	; 0x84
 800baa8:	e7d4      	b.n	800ba54 <_ZN8touchgfx11Application15handleTickEventEv+0x70>
 800baaa:	4b04      	ldr	r3, [pc, #16]	; (800babc <_ZN8touchgfx11Application15handleTickEventEv+0xd8>)
 800baac:	6818      	ldr	r0, [r3, #0]
 800baae:	b110      	cbz	r0, 800bab6 <_ZN8touchgfx11Application15handleTickEventEv+0xd2>
 800bab0:	6803      	ldr	r3, [r0, #0]
 800bab2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800bab4:	e7a1      	b.n	800b9fa <_ZN8touchgfx11Application15handleTickEventEv+0x16>
 800bab6:	bd70      	pop	{r4, r5, r6, pc}
 800bab8:	20012398 	.word	0x20012398
 800babc:	20012394 	.word	0x20012394

0800bac0 <_ZN8touchgfx11ApplicationD1Ev>:
 800bac0:	4770      	bx	lr

0800bac2 <_ZN8touchgfx11ApplicationD0Ev>:
 800bac2:	b510      	push	{r4, lr}
 800bac4:	f44f 719c 	mov.w	r1, #312	; 0x138
 800bac8:	4604      	mov	r4, r0
 800baca:	f00d fd2b 	bl	8019524 <_ZdlPvj>
 800bace:	4620      	mov	r0, r4
 800bad0:	bd10      	pop	{r4, pc}
	...

0800bad4 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE>:
 800bad4:	b570      	push	{r4, r5, r6, lr}
 800bad6:	4606      	mov	r6, r0
 800bad8:	460c      	mov	r4, r1
 800bada:	b929      	cbnz	r1, 800bae8 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x14>
 800badc:	4b0c      	ldr	r3, [pc, #48]	; (800bb10 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x3c>)
 800bade:	4a0d      	ldr	r2, [pc, #52]	; (800bb14 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x40>)
 800bae0:	480d      	ldr	r0, [pc, #52]	; (800bb18 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x44>)
 800bae2:	2166      	movs	r1, #102	; 0x66
 800bae4:	f00d fd4a 	bl	801957c <__assert_func>
 800bae8:	4d0c      	ldr	r5, [pc, #48]	; (800bb1c <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x48>)
 800baea:	2300      	movs	r3, #0
 800baec:	f8a0 3084 	strh.w	r3, [r0, #132]	; 0x84
 800baf0:	6828      	ldr	r0, [r5, #0]
 800baf2:	b110      	cbz	r0, 800bafa <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x26>
 800baf4:	6803      	ldr	r3, [r0, #0]
 800baf6:	695b      	ldr	r3, [r3, #20]
 800baf8:	4798      	blx	r3
 800bafa:	602c      	str	r4, [r5, #0]
 800bafc:	6823      	ldr	r3, [r4, #0]
 800bafe:	4620      	mov	r0, r4
 800bb00:	68db      	ldr	r3, [r3, #12]
 800bb02:	4798      	blx	r3
 800bb04:	6833      	ldr	r3, [r6, #0]
 800bb06:	4630      	mov	r0, r6
 800bb08:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800bb0a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800bb0e:	4718      	bx	r3
 800bb10:	0801c568 	.word	0x0801c568
 800bb14:	0801c638 	.word	0x0801c638
 800bb18:	0801c572 	.word	0x0801c572
 800bb1c:	20012394 	.word	0x20012394

0800bb20 <_ZNK8touchgfx4Rect9intersectERKS0_>:
 800bb20:	b510      	push	{r4, lr}
 800bb22:	f9b1 4000 	ldrsh.w	r4, [r1]
 800bb26:	888a      	ldrh	r2, [r1, #4]
 800bb28:	f9b0 3000 	ldrsh.w	r3, [r0]
 800bb2c:	4422      	add	r2, r4
 800bb2e:	b212      	sxth	r2, r2
 800bb30:	4293      	cmp	r3, r2
 800bb32:	da15      	bge.n	800bb60 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 800bb34:	8882      	ldrh	r2, [r0, #4]
 800bb36:	4413      	add	r3, r2
 800bb38:	b21b      	sxth	r3, r3
 800bb3a:	429c      	cmp	r4, r3
 800bb3c:	da10      	bge.n	800bb60 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 800bb3e:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 800bb42:	88c9      	ldrh	r1, [r1, #6]
 800bb44:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 800bb48:	4419      	add	r1, r3
 800bb4a:	b209      	sxth	r1, r1
 800bb4c:	428a      	cmp	r2, r1
 800bb4e:	da07      	bge.n	800bb60 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 800bb50:	88c0      	ldrh	r0, [r0, #6]
 800bb52:	4410      	add	r0, r2
 800bb54:	b200      	sxth	r0, r0
 800bb56:	4283      	cmp	r3, r0
 800bb58:	bfac      	ite	ge
 800bb5a:	2000      	movge	r0, #0
 800bb5c:	2001      	movlt	r0, #1
 800bb5e:	bd10      	pop	{r4, pc}
 800bb60:	2000      	movs	r0, #0
 800bb62:	e7fc      	b.n	800bb5e <_ZNK8touchgfx4Rect9intersectERKS0_+0x3e>

0800bb64 <_ZNK8touchgfx4Rect8includesERKS0_>:
 800bb64:	b570      	push	{r4, r5, r6, lr}
 800bb66:	f9b1 4000 	ldrsh.w	r4, [r1]
 800bb6a:	f9b0 5000 	ldrsh.w	r5, [r0]
 800bb6e:	42ac      	cmp	r4, r5
 800bb70:	db18      	blt.n	800bba4 <_ZNK8touchgfx4Rect8includesERKS0_+0x40>
 800bb72:	f9b1 2002 	ldrsh.w	r2, [r1, #2]
 800bb76:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 800bb7a:	429a      	cmp	r2, r3
 800bb7c:	db12      	blt.n	800bba4 <_ZNK8touchgfx4Rect8includesERKS0_+0x40>
 800bb7e:	8886      	ldrh	r6, [r0, #4]
 800bb80:	4435      	add	r5, r6
 800bb82:	888e      	ldrh	r6, [r1, #4]
 800bb84:	4434      	add	r4, r6
 800bb86:	b22d      	sxth	r5, r5
 800bb88:	b224      	sxth	r4, r4
 800bb8a:	42a5      	cmp	r5, r4
 800bb8c:	db0a      	blt.n	800bba4 <_ZNK8touchgfx4Rect8includesERKS0_+0x40>
 800bb8e:	88c0      	ldrh	r0, [r0, #6]
 800bb90:	4418      	add	r0, r3
 800bb92:	88cb      	ldrh	r3, [r1, #6]
 800bb94:	441a      	add	r2, r3
 800bb96:	b200      	sxth	r0, r0
 800bb98:	b212      	sxth	r2, r2
 800bb9a:	4290      	cmp	r0, r2
 800bb9c:	bfb4      	ite	lt
 800bb9e:	2000      	movlt	r0, #0
 800bba0:	2001      	movge	r0, #1
 800bba2:	bd70      	pop	{r4, r5, r6, pc}
 800bba4:	2000      	movs	r0, #0
 800bba6:	e7fc      	b.n	800bba2 <_ZNK8touchgfx4Rect8includesERKS0_+0x3e>

0800bba8 <_ZN8touchgfx4Rect11expandToFitERKS0_>:
 800bba8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800bbaa:	4604      	mov	r4, r0
 800bbac:	4608      	mov	r0, r1
 800bbae:	460d      	mov	r5, r1
 800bbb0:	f7fd fa53 	bl	800905a <_ZNK8touchgfx4Rect7isEmptyEv>
 800bbb4:	b978      	cbnz	r0, 800bbd6 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
 800bbb6:	4620      	mov	r0, r4
 800bbb8:	f7fd fa4f 	bl	800905a <_ZNK8touchgfx4Rect7isEmptyEv>
 800bbbc:	f9b5 6000 	ldrsh.w	r6, [r5]
 800bbc0:	b150      	cbz	r0, 800bbd8 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x30>
 800bbc2:	8026      	strh	r6, [r4, #0]
 800bbc4:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 800bbc8:	8063      	strh	r3, [r4, #2]
 800bbca:	f9b5 3004 	ldrsh.w	r3, [r5, #4]
 800bbce:	80a3      	strh	r3, [r4, #4]
 800bbd0:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 800bbd4:	80e3      	strh	r3, [r4, #6]
 800bbd6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800bbd8:	f9b4 1000 	ldrsh.w	r1, [r4]
 800bbdc:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 800bbe0:	f9b4 3002 	ldrsh.w	r3, [r4, #2]
 800bbe4:	f8b5 c004 	ldrh.w	ip, [r5, #4]
 800bbe8:	88ed      	ldrh	r5, [r5, #6]
 800bbea:	42b1      	cmp	r1, r6
 800bbec:	460f      	mov	r7, r1
 800bbee:	bfa8      	it	ge
 800bbf0:	4637      	movge	r7, r6
 800bbf2:	4293      	cmp	r3, r2
 800bbf4:	4618      	mov	r0, r3
 800bbf6:	4466      	add	r6, ip
 800bbf8:	bfa8      	it	ge
 800bbfa:	4610      	movge	r0, r2
 800bbfc:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 800bc00:	8027      	strh	r7, [r4, #0]
 800bc02:	442a      	add	r2, r5
 800bc04:	88e5      	ldrh	r5, [r4, #6]
 800bc06:	8060      	strh	r0, [r4, #2]
 800bc08:	4461      	add	r1, ip
 800bc0a:	442b      	add	r3, r5
 800bc0c:	b236      	sxth	r6, r6
 800bc0e:	b209      	sxth	r1, r1
 800bc10:	b212      	sxth	r2, r2
 800bc12:	b21b      	sxth	r3, r3
 800bc14:	428e      	cmp	r6, r1
 800bc16:	bfac      	ite	ge
 800bc18:	ebc7 0106 	rsbge	r1, r7, r6
 800bc1c:	ebc7 0101 	rsblt	r1, r7, r1
 800bc20:	429a      	cmp	r2, r3
 800bc22:	bfac      	ite	ge
 800bc24:	ebc0 0202 	rsbge	r2, r0, r2
 800bc28:	ebc0 0203 	rsblt	r2, r0, r3
 800bc2c:	80a1      	strh	r1, [r4, #4]
 800bc2e:	80e2      	strh	r2, [r4, #6]
 800bc30:	e7d1      	b.n	800bbd6 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
	...

0800bc34 <_ZN8touchgfx11Application11getInstanceEv>:
 800bc34:	4b01      	ldr	r3, [pc, #4]	; (800bc3c <_ZN8touchgfx11Application11getInstanceEv+0x8>)
 800bc36:	6818      	ldr	r0, [r3, #0]
 800bc38:	4770      	bx	lr
 800bc3a:	bf00      	nop
 800bc3c:	200123a4 	.word	0x200123a4

0800bc40 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>:
 800bc40:	2300      	movs	r3, #0
 800bc42:	f8a0 3084 	strh.w	r3, [r0, #132]	; 0x84
 800bc46:	f100 0288 	add.w	r2, r0, #136	; 0x88
 800bc4a:	30a8      	adds	r0, #168	; 0xa8
 800bc4c:	f802 3b01 	strb.w	r3, [r2], #1
 800bc50:	4282      	cmp	r2, r0
 800bc52:	d1fb      	bne.n	800bc4c <_ZN8touchgfx11Application20clearAllTimerWidgetsEv+0xc>
 800bc54:	4770      	bx	lr

0800bc56 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>:
 800bc56:	4603      	mov	r3, r0
 800bc58:	f100 0140 	add.w	r1, r0, #64	; 0x40
 800bc5c:	2200      	movs	r2, #0
 800bc5e:	801a      	strh	r2, [r3, #0]
 800bc60:	805a      	strh	r2, [r3, #2]
 800bc62:	809a      	strh	r2, [r3, #4]
 800bc64:	80da      	strh	r2, [r3, #6]
 800bc66:	3308      	adds	r3, #8
 800bc68:	428b      	cmp	r3, r1
 800bc6a:	d1f8      	bne.n	800bc5e <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev+0x8>
 800bc6c:	f8a0 2040 	strh.w	r2, [r0, #64]	; 0x40
 800bc70:	4770      	bx	lr
	...

0800bc74 <_ZN8touchgfx11ApplicationC1Ev>:
 800bc74:	b570      	push	{r4, r5, r6, lr}
 800bc76:	4b1a      	ldr	r3, [pc, #104]	; (800bce0 <_ZN8touchgfx11ApplicationC1Ev+0x6c>)
 800bc78:	6003      	str	r3, [r0, #0]
 800bc7a:	2500      	movs	r5, #0
 800bc7c:	4604      	mov	r4, r0
 800bc7e:	f8a0 5084 	strh.w	r5, [r0, #132]	; 0x84
 800bc82:	30a8      	adds	r0, #168	; 0xa8
 800bc84:	f7ff ffe7 	bl	800bc56 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 800bc88:	f104 00ea 	add.w	r0, r4, #234	; 0xea
 800bc8c:	f7ff ffe3 	bl	800bc56 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 800bc90:	f8a4 512c 	strh.w	r5, [r4, #300]	; 0x12c
 800bc94:	f8a4 512e 	strh.w	r5, [r4, #302]	; 0x12e
 800bc98:	f8a4 5130 	strh.w	r5, [r4, #304]	; 0x130
 800bc9c:	f8a4 5132 	strh.w	r5, [r4, #306]	; 0x132
 800bca0:	f884 5134 	strb.w	r5, [r4, #308]	; 0x134
 800bca4:	f884 5135 	strb.w	r5, [r4, #309]	; 0x135
 800bca8:	490e      	ldr	r1, [pc, #56]	; (800bce4 <_ZN8touchgfx11ApplicationC1Ev+0x70>)
 800bcaa:	480f      	ldr	r0, [pc, #60]	; (800bce8 <_ZN8touchgfx11ApplicationC1Ev+0x74>)
 800bcac:	4e0f      	ldr	r6, [pc, #60]	; (800bcec <_ZN8touchgfx11ApplicationC1Ev+0x78>)
 800bcae:	f00d fb09 	bl	80192c4 <CRC_Lock>
 800bcb2:	4b0f      	ldr	r3, [pc, #60]	; (800bcf0 <_ZN8touchgfx11ApplicationC1Ev+0x7c>)
 800bcb4:	b158      	cbz	r0, 800bcce <_ZN8touchgfx11ApplicationC1Ev+0x5a>
 800bcb6:	801d      	strh	r5, [r3, #0]
 800bcb8:	4a0e      	ldr	r2, [pc, #56]	; (800bcf4 <_ZN8touchgfx11ApplicationC1Ev+0x80>)
 800bcba:	2300      	movs	r3, #0
 800bcbc:	6013      	str	r3, [r2, #0]
 800bcbe:	4a0e      	ldr	r2, [pc, #56]	; (800bcf8 <_ZN8touchgfx11ApplicationC1Ev+0x84>)
 800bcc0:	6033      	str	r3, [r6, #0]
 800bcc2:	4620      	mov	r0, r4
 800bcc4:	6013      	str	r3, [r2, #0]
 800bcc6:	f7ff ffbb 	bl	800bc40 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
 800bcca:	4620      	mov	r0, r4
 800bccc:	bd70      	pop	{r4, r5, r6, pc}
 800bcce:	f44f 6280 	mov.w	r2, #1024	; 0x400
 800bcd2:	2002      	movs	r0, #2
 800bcd4:	801a      	strh	r2, [r3, #0]
 800bcd6:	6030      	str	r0, [r6, #0]
 800bcd8:	f000 fff0 	bl	800ccbc <_ZN8touchgfx6Screen4drawEv>
 800bcdc:	e7ec      	b.n	800bcb8 <_ZN8touchgfx11ApplicationC1Ev+0x44>
 800bcde:	bf00      	nop
 800bce0:	0801c5fc 	.word	0x0801c5fc
 800bce4:	b5e8b5cd 	.word	0xb5e8b5cd
 800bce8:	f407a5c2 	.word	0xf407a5c2
 800bcec:	20012394 	.word	0x20012394
 800bcf0:	20000094 	.word	0x20000094
 800bcf4:	200123a4 	.word	0x200123a4
 800bcf8:	20012398 	.word	0x20012398

0800bcfc <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>:
 800bcfc:	2300      	movs	r3, #0
 800bcfe:	8003      	strh	r3, [r0, #0]
 800bd00:	8043      	strh	r3, [r0, #2]
 800bd02:	8083      	strh	r3, [r0, #4]
 800bd04:	80c3      	strh	r3, [r0, #6]
 800bd06:	f8b1 3040 	ldrh.w	r3, [r1, #64]	; 0x40
 800bd0a:	4293      	cmp	r3, r2
 800bd0c:	b530      	push	{r4, r5, lr}
 800bd0e:	d912      	bls.n	800bd36 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x3a>
 800bd10:	eb01 04c2 	add.w	r4, r1, r2, lsl #3
 800bd14:	3b01      	subs	r3, #1
 800bd16:	6825      	ldr	r5, [r4, #0]
 800bd18:	6005      	str	r5, [r0, #0]
 800bd1a:	b29b      	uxth	r3, r3
 800bd1c:	6865      	ldr	r5, [r4, #4]
 800bd1e:	6045      	str	r5, [r0, #4]
 800bd20:	4293      	cmp	r3, r2
 800bd22:	f8a1 3040 	strh.w	r3, [r1, #64]	; 0x40
 800bd26:	d906      	bls.n	800bd36 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x3a>
 800bd28:	eb01 03c3 	add.w	r3, r1, r3, lsl #3
 800bd2c:	681d      	ldr	r5, [r3, #0]
 800bd2e:	f841 5032 	str.w	r5, [r1, r2, lsl #3]
 800bd32:	685d      	ldr	r5, [r3, #4]
 800bd34:	6065      	str	r5, [r4, #4]
 800bd36:	bd30      	pop	{r4, r5, pc}

0800bd38 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_>:
 800bd38:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800bd3a:	466b      	mov	r3, sp
 800bd3c:	e883 0006 	stmia.w	r3, {r1, r2}
 800bd40:	f8b0 2040 	ldrh.w	r2, [r0, #64]	; 0x40
 800bd44:	2a07      	cmp	r2, #7
 800bd46:	4604      	mov	r4, r0
 800bd48:	d906      	bls.n	800bd58 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_+0x20>
 800bd4a:	4b09      	ldr	r3, [pc, #36]	; (800bd70 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_+0x38>)
 800bd4c:	4a09      	ldr	r2, [pc, #36]	; (800bd74 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_+0x3c>)
 800bd4e:	480a      	ldr	r0, [pc, #40]	; (800bd78 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_+0x40>)
 800bd50:	f240 118f 	movw	r1, #399	; 0x18f
 800bd54:	f00d fc12 	bl	801957c <__assert_func>
 800bd58:	1c51      	adds	r1, r2, #1
 800bd5a:	f8a0 1040 	strh.w	r1, [r0, #64]	; 0x40
 800bd5e:	eb00 05c2 	add.w	r5, r0, r2, lsl #3
 800bd62:	cb03      	ldmia	r3!, {r0, r1}
 800bd64:	f844 0032 	str.w	r0, [r4, r2, lsl #3]
 800bd68:	6069      	str	r1, [r5, #4]
 800bd6a:	b003      	add	sp, #12
 800bd6c:	bd30      	pop	{r4, r5, pc}
 800bd6e:	bf00      	nop
 800bd70:	0801c59c 	.word	0x0801c59c
 800bd74:	0801c67c 	.word	0x0801c67c
 800bd78:	0801c5cb 	.word	0x0801c5cb

0800bd7c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>:
 800bd7c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800bd80:	b089      	sub	sp, #36	; 0x24
 800bd82:	466c      	mov	r4, sp
 800bd84:	4606      	mov	r6, r0
 800bd86:	4620      	mov	r0, r4
 800bd88:	e884 0006 	stmia.w	r4, {r1, r2}
 800bd8c:	f7fd f965 	bl	800905a <_ZNK8touchgfx4Rect7isEmptyEv>
 800bd90:	bbb0      	cbnz	r0, 800be00 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x84>
 800bd92:	f8b6 50e8 	ldrh.w	r5, [r6, #232]	; 0xe8
 800bd96:	b1fd      	cbz	r5, 800bdd8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5c>
 800bd98:	3d01      	subs	r5, #1
 800bd9a:	af04      	add	r7, sp, #16
 800bd9c:	f04f 090a 	mov.w	r9, #10
 800bda0:	eb06 02c5 	add.w	r2, r6, r5, lsl #3
 800bda4:	ab02      	add	r3, sp, #8
 800bda6:	f852 0fa8 	ldr.w	r0, [r2, #168]!
 800bdaa:	6851      	ldr	r1, [r2, #4]
 800bdac:	c303      	stmia	r3!, {r0, r1}
 800bdae:	4621      	mov	r1, r4
 800bdb0:	a802      	add	r0, sp, #8
 800bdb2:	fa1f f885 	uxth.w	r8, r5
 800bdb6:	f7ff fed5 	bl	800bb64 <_ZNK8touchgfx4Rect8includesERKS0_>
 800bdba:	bb08      	cbnz	r0, 800be00 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x84>
 800bdbc:	a902      	add	r1, sp, #8
 800bdbe:	4620      	mov	r0, r4
 800bdc0:	f7ff fed0 	bl	800bb64 <_ZNK8touchgfx4Rect8includesERKS0_>
 800bdc4:	b1f8      	cbz	r0, 800be06 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x8a>
 800bdc6:	4642      	mov	r2, r8
 800bdc8:	f106 01a8 	add.w	r1, r6, #168	; 0xa8
 800bdcc:	a806      	add	r0, sp, #24
 800bdce:	f7ff ff95 	bl	800bcfc <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800bdd2:	f115 35ff 	adds.w	r5, r5, #4294967295
 800bdd6:	d2e3      	bcs.n	800bda0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x24>
 800bdd8:	f8b6 30e8 	ldrh.w	r3, [r6, #232]	; 0xe8
 800bddc:	2b08      	cmp	r3, #8
 800bdde:	f106 05a8 	add.w	r5, r6, #168	; 0xa8
 800bde2:	d108      	bne.n	800bdf6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x7a>
 800bde4:	4629      	mov	r1, r5
 800bde6:	a806      	add	r0, sp, #24
 800bde8:	2207      	movs	r2, #7
 800bdea:	f7ff ff87 	bl	800bcfc <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800bdee:	a906      	add	r1, sp, #24
 800bdf0:	4620      	mov	r0, r4
 800bdf2:	f7ff fed9 	bl	800bba8 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 800bdf6:	e894 0006 	ldmia.w	r4, {r1, r2}
 800bdfa:	4628      	mov	r0, r5
 800bdfc:	f7ff ff9c 	bl	800bd38 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_>
 800be00:	b009      	add	sp, #36	; 0x24
 800be02:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800be06:	4621      	mov	r1, r4
 800be08:	a802      	add	r0, sp, #8
 800be0a:	f7ff fe89 	bl	800bb20 <_ZNK8touchgfx4Rect9intersectERKS0_>
 800be0e:	b150      	cbz	r0, 800be26 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xaa>
 800be10:	f106 01a8 	add.w	r1, r6, #168	; 0xa8
 800be14:	a806      	add	r0, sp, #24
 800be16:	4642      	mov	r2, r8
 800be18:	f7ff ff70 	bl	800bcfc <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800be1c:	a902      	add	r1, sp, #8
 800be1e:	4620      	mov	r0, r4
 800be20:	f7ff fec2 	bl	800bba8 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 800be24:	e7d5      	b.n	800bdd2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x56>
 800be26:	e894 0003 	ldmia.w	r4, {r0, r1}
 800be2a:	e887 0003 	stmia.w	r7, {r0, r1}
 800be2e:	a902      	add	r1, sp, #8
 800be30:	4638      	mov	r0, r7
 800be32:	f7ff feb9 	bl	800bba8 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 800be36:	f8bd 2016 	ldrh.w	r2, [sp, #22]
 800be3a:	f8bd 3014 	ldrh.w	r3, [sp, #20]
 800be3e:	f8bd 100c 	ldrh.w	r1, [sp, #12]
 800be42:	f8bd 0006 	ldrh.w	r0, [sp, #6]
 800be46:	fb13 f302 	smulbb	r3, r3, r2
 800be4a:	f8bd 200e 	ldrh.w	r2, [sp, #14]
 800be4e:	fb11 f102 	smulbb	r1, r1, r2
 800be52:	f8bd 2004 	ldrh.w	r2, [sp, #4]
 800be56:	fb12 1100 	smlabb	r1, r2, r0, r1
 800be5a:	220b      	movs	r2, #11
 800be5c:	fb09 f303 	mul.w	r3, r9, r3
 800be60:	434a      	muls	r2, r1
 800be62:	4293      	cmp	r3, r2
 800be64:	dab5      	bge.n	800bdd2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x56>
 800be66:	f106 01a8 	add.w	r1, r6, #168	; 0xa8
 800be6a:	a806      	add	r0, sp, #24
 800be6c:	4642      	mov	r2, r8
 800be6e:	f7ff ff45 	bl	800bcfc <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800be72:	e897 0003 	ldmia.w	r7, {r0, r1}
 800be76:	e884 0003 	stmia.w	r4, {r0, r1}
 800be7a:	e7aa      	b.n	800bdd2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x56>

0800be7c <_ZN8touchgfx11Application4drawERNS_4RectE>:
 800be7c:	b530      	push	{r4, r5, lr}
 800be7e:	4b1d      	ldr	r3, [pc, #116]	; (800bef4 <_ZN8touchgfx11Application4drawERNS_4RectE+0x78>)
 800be80:	b085      	sub	sp, #20
 800be82:	460c      	mov	r4, r1
 800be84:	f9b3 2000 	ldrsh.w	r2, [r3]
 800be88:	4b1b      	ldr	r3, [pc, #108]	; (800bef8 <_ZN8touchgfx11Application4drawERNS_4RectE+0x7c>)
 800be8a:	f8ad 2004 	strh.w	r2, [sp, #4]
 800be8e:	2100      	movs	r1, #0
 800be90:	f9b3 3000 	ldrsh.w	r3, [r3]
 800be94:	9100      	str	r1, [sp, #0]
 800be96:	4605      	mov	r5, r0
 800be98:	6861      	ldr	r1, [r4, #4]
 800be9a:	6820      	ldr	r0, [r4, #0]
 800be9c:	f8ad 3006 	strh.w	r3, [sp, #6]
 800bea0:	ab02      	add	r3, sp, #8
 800bea2:	c303      	stmia	r3!, {r0, r1}
 800bea4:	4669      	mov	r1, sp
 800bea6:	a802      	add	r0, sp, #8
 800bea8:	f7fd f894 	bl	8008fd4 <_ZN8touchgfx4RectaNERKS0_>
 800beac:	ab02      	add	r3, sp, #8
 800beae:	cb03      	ldmia	r3!, {r0, r1}
 800beb0:	4b12      	ldr	r3, [pc, #72]	; (800befc <_ZN8touchgfx11Application4drawERNS_4RectE+0x80>)
 800beb2:	6020      	str	r0, [r4, #0]
 800beb4:	6818      	ldr	r0, [r3, #0]
 800beb6:	6061      	str	r1, [r4, #4]
 800beb8:	b138      	cbz	r0, 800beca <_ZN8touchgfx11Application4drawERNS_4RectE+0x4e>
 800beba:	f895 3134 	ldrb.w	r3, [r5, #308]	; 0x134
 800bebe:	b133      	cbz	r3, 800bece <_ZN8touchgfx11Application4drawERNS_4RectE+0x52>
 800bec0:	6821      	ldr	r1, [r4, #0]
 800bec2:	6862      	ldr	r2, [r4, #4]
 800bec4:	4628      	mov	r0, r5
 800bec6:	f7ff ff59 	bl	800bd7c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 800beca:	b005      	add	sp, #20
 800becc:	bd30      	pop	{r4, r5, pc}
 800bece:	6803      	ldr	r3, [r0, #0]
 800bed0:	4621      	mov	r1, r4
 800bed2:	689b      	ldr	r3, [r3, #8]
 800bed4:	4798      	blx	r3
 800bed6:	4b0a      	ldr	r3, [pc, #40]	; (800bf00 <_ZN8touchgfx11Application4drawERNS_4RectE+0x84>)
 800bed8:	6818      	ldr	r0, [r3, #0]
 800beda:	b118      	cbz	r0, 800bee4 <_ZN8touchgfx11Application4drawERNS_4RectE+0x68>
 800bedc:	6803      	ldr	r3, [r0, #0]
 800bede:	4621      	mov	r1, r4
 800bee0:	689b      	ldr	r3, [r3, #8]
 800bee2:	4798      	blx	r3
 800bee4:	4b07      	ldr	r3, [pc, #28]	; (800bf04 <_ZN8touchgfx11Application4drawERNS_4RectE+0x88>)
 800bee6:	6818      	ldr	r0, [r3, #0]
 800bee8:	6803      	ldr	r3, [r0, #0]
 800beea:	4621      	mov	r1, r4
 800beec:	695b      	ldr	r3, [r3, #20]
 800beee:	4798      	blx	r3
 800bef0:	e7eb      	b.n	800beca <_ZN8touchgfx11Application4drawERNS_4RectE+0x4e>
 800bef2:	bf00      	nop
 800bef4:	2001232c 	.word	0x2001232c
 800bef8:	2001232e 	.word	0x2001232e
 800befc:	20012394 	.word	0x20012394
 800bf00:	20012390 	.word	0x20012390
 800bf04:	20012338 	.word	0x20012338

0800bf08 <_ZN8touchgfx11Application19cacheDrawOperationsEb>:
 800bf08:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800bf0c:	4604      	mov	r4, r0
 800bf0e:	b09b      	sub	sp, #108	; 0x6c
 800bf10:	f880 1134 	strb.w	r1, [r0, #308]	; 0x134
 800bf14:	b129      	cbz	r1, 800bf22 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1a>
 800bf16:	2300      	movs	r3, #0
 800bf18:	f8a0 30e8 	strh.w	r3, [r0, #232]	; 0xe8
 800bf1c:	b01b      	add	sp, #108	; 0x6c
 800bf1e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800bf22:	f500 7696 	add.w	r6, r0, #300	; 0x12c
 800bf26:	4630      	mov	r0, r6
 800bf28:	f7fd f897 	bl	800905a <_ZNK8touchgfx4Rect7isEmptyEv>
 800bf2c:	4605      	mov	r5, r0
 800bf2e:	b940      	cbnz	r0, 800bf42 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x3a>
 800bf30:	e896 0006 	ldmia.w	r6, {r1, r2}
 800bf34:	4620      	mov	r0, r4
 800bf36:	f7ff ff21 	bl	800bd7c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 800bf3a:	f8c4 512c 	str.w	r5, [r4, #300]	; 0x12c
 800bf3e:	f8c4 5130 	str.w	r5, [r4, #304]	; 0x130
 800bf42:	4b92      	ldr	r3, [pc, #584]	; (800c18c <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x284>)
 800bf44:	681b      	ldr	r3, [r3, #0]
 800bf46:	b33b      	cbz	r3, 800bf98 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x90>
 800bf48:	4d91      	ldr	r5, [pc, #580]	; (800c190 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x288>)
 800bf4a:	4628      	mov	r0, r5
 800bf4c:	f7fd f885 	bl	800905a <_ZNK8touchgfx4Rect7isEmptyEv>
 800bf50:	4606      	mov	r6, r0
 800bf52:	bb08      	cbnz	r0, 800bf98 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x90>
 800bf54:	4628      	mov	r0, r5
 800bf56:	f7ff fc7f 	bl	800b858 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 800bf5a:	6829      	ldr	r1, [r5, #0]
 800bf5c:	686a      	ldr	r2, [r5, #4]
 800bf5e:	4620      	mov	r0, r4
 800bf60:	f7ff ff0c 	bl	800bd7c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 800bf64:	802e      	strh	r6, [r5, #0]
 800bf66:	806e      	strh	r6, [r5, #2]
 800bf68:	80ae      	strh	r6, [r5, #4]
 800bf6a:	80ee      	strh	r6, [r5, #6]
 800bf6c:	4f89      	ldr	r7, [pc, #548]	; (800c194 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x28c>)
 800bf6e:	a809      	add	r0, sp, #36	; 0x24
 800bf70:	f7ff fe71 	bl	800bc56 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 800bf74:	883d      	ldrh	r5, [r7, #0]
 800bf76:	462e      	mov	r6, r5
 800bf78:	f8b4 30e8 	ldrh.w	r3, [r4, #232]	; 0xe8
 800bf7c:	42b3      	cmp	r3, r6
 800bf7e:	d910      	bls.n	800bfa2 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x9a>
 800bf80:	eb04 03c6 	add.w	r3, r4, r6, lsl #3
 800bf84:	a809      	add	r0, sp, #36	; 0x24
 800bf86:	f8d3 10a8 	ldr.w	r1, [r3, #168]	; 0xa8
 800bf8a:	f8d3 20ac 	ldr.w	r2, [r3, #172]	; 0xac
 800bf8e:	3601      	adds	r6, #1
 800bf90:	f7ff fed2 	bl	800bd38 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_>
 800bf94:	b2b6      	uxth	r6, r6
 800bf96:	e7ef      	b.n	800bf78 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x70>
 800bf98:	f8b4 30e8 	ldrh.w	r3, [r4, #232]	; 0xe8
 800bf9c:	2b00      	cmp	r3, #0
 800bf9e:	d1e5      	bne.n	800bf6c <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x64>
 800bfa0:	e7bc      	b.n	800bf1c <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x14>
 800bfa2:	462e      	mov	r6, r5
 800bfa4:	f8b4 312a 	ldrh.w	r3, [r4, #298]	; 0x12a
 800bfa8:	42b3      	cmp	r3, r6
 800bfaa:	d90b      	bls.n	800bfc4 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0xbc>
 800bfac:	eb04 03c6 	add.w	r3, r4, r6, lsl #3
 800bfb0:	4620      	mov	r0, r4
 800bfb2:	f8d3 10ea 	ldr.w	r1, [r3, #234]	; 0xea
 800bfb6:	f8d3 20ee 	ldr.w	r2, [r3, #238]	; 0xee
 800bfba:	3601      	adds	r6, #1
 800bfbc:	f7ff fede 	bl	800bd7c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 800bfc0:	b2b6      	uxth	r6, r6
 800bfc2:	e7ef      	b.n	800bfa4 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x9c>
 800bfc4:	4a74      	ldr	r2, [pc, #464]	; (800c198 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x290>)
 800bfc6:	6813      	ldr	r3, [r2, #0]
 800bfc8:	f893 3048 	ldrb.w	r3, [r3, #72]	; 0x48
 800bfcc:	2b01      	cmp	r3, #1
 800bfce:	4690      	mov	r8, r2
 800bfd0:	f040 8094 	bne.w	800c0fc <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1f4>
 800bfd4:	eb04 03c5 	add.w	r3, r4, r5, lsl #3
 800bfd8:	f8b4 00e8 	ldrh.w	r0, [r4, #232]	; 0xe8
 800bfdc:	33aa      	adds	r3, #170	; 0xaa
 800bfde:	f04f 0900 	mov.w	r9, #0
 800bfe2:	42a8      	cmp	r0, r5
 800bfe4:	f103 0308 	add.w	r3, r3, #8
 800bfe8:	dd0a      	ble.n	800c000 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0xf8>
 800bfea:	f833 2c08 	ldrh.w	r2, [r3, #-8]
 800bfee:	f833 1c04 	ldrh.w	r1, [r3, #-4]
 800bff2:	440a      	add	r2, r1
 800bff4:	b212      	sxth	r2, r2
 800bff6:	4591      	cmp	r9, r2
 800bff8:	bfb8      	it	lt
 800bffa:	4691      	movlt	r9, r2
 800bffc:	3501      	adds	r5, #1
 800bffe:	e7f0      	b.n	800bfe2 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0xda>
 800c000:	4b66      	ldr	r3, [pc, #408]	; (800c19c <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x294>)
 800c002:	4e67      	ldr	r6, [pc, #412]	; (800c1a0 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x298>)
 800c004:	881d      	ldrh	r5, [r3, #0]
 800c006:	2300      	movs	r3, #0
 800c008:	e9cd 3305 	strd	r3, r3, [sp, #20]
 800c00c:	2d0f      	cmp	r5, #15
 800c00e:	bf8c      	ite	hi
 800c010:	08ed      	lsrhi	r5, r5, #3
 800c012:	2501      	movls	r5, #1
 800c014:	f8bd 3016 	ldrh.w	r3, [sp, #22]
 800c018:	f8bd 101a 	ldrh.w	r1, [sp, #26]
 800c01c:	f8d8 0000 	ldr.w	r0, [r8]
 800c020:	440b      	add	r3, r1
 800c022:	b21b      	sxth	r3, r3
 800c024:	4599      	cmp	r9, r3
 800c026:	6802      	ldr	r2, [r0, #0]
 800c028:	dd4b      	ble.n	800c0c2 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1ba>
 800c02a:	f8d2 3084 	ldr.w	r3, [r2, #132]	; 0x84
 800c02e:	4798      	blx	r3
 800c030:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 800c034:	f8bd 3016 	ldrh.w	r3, [sp, #22]
 800c038:	4413      	add	r3, r2
 800c03a:	b21b      	sxth	r3, r3
 800c03c:	195a      	adds	r2, r3, r5
 800c03e:	4290      	cmp	r0, r2
 800c040:	da07      	bge.n	800c052 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x14a>
 800c042:	4581      	cmp	r9, r0
 800c044:	dd05      	ble.n	800c052 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x14a>
 800c046:	4298      	cmp	r0, r3
 800c048:	da33      	bge.n	800c0b2 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1aa>
 800c04a:	2b00      	cmp	r3, #0
 800c04c:	dd31      	ble.n	800c0b2 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1aa>
 800c04e:	4648      	mov	r0, r9
 800c050:	e004      	b.n	800c05c <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x154>
 800c052:	4298      	cmp	r0, r3
 800c054:	dbfb      	blt.n	800c04e <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x146>
 800c056:	4548      	cmp	r0, r9
 800c058:	bfa8      	it	ge
 800c05a:	4648      	movge	r0, r9
 800c05c:	f9b6 2000 	ldrsh.w	r2, [r6]
 800c060:	f8b7 a000 	ldrh.w	sl, [r7]
 800c064:	f8ad 3016 	strh.w	r3, [sp, #22]
 800c068:	2100      	movs	r1, #0
 800c06a:	1ac0      	subs	r0, r0, r3
 800c06c:	f8ad 1014 	strh.w	r1, [sp, #20]
 800c070:	f8ad 2018 	strh.w	r2, [sp, #24]
 800c074:	f8ad 001a 	strh.w	r0, [sp, #26]
 800c078:	f8b4 30e8 	ldrh.w	r3, [r4, #232]	; 0xe8
 800c07c:	4553      	cmp	r3, sl
 800c07e:	d9c9      	bls.n	800c014 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x10c>
 800c080:	eb04 02ca 	add.w	r2, r4, sl, lsl #3
 800c084:	ab07      	add	r3, sp, #28
 800c086:	f852 0fa8 	ldr.w	r0, [r2, #168]!
 800c08a:	6851      	ldr	r1, [r2, #4]
 800c08c:	c303      	stmia	r3!, {r0, r1}
 800c08e:	a807      	add	r0, sp, #28
 800c090:	a905      	add	r1, sp, #20
 800c092:	f7fc ff9f 	bl	8008fd4 <_ZN8touchgfx4RectaNERKS0_>
 800c096:	a807      	add	r0, sp, #28
 800c098:	f7fc ffdf 	bl	800905a <_ZNK8touchgfx4Rect7isEmptyEv>
 800c09c:	b920      	cbnz	r0, 800c0a8 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1a0>
 800c09e:	6823      	ldr	r3, [r4, #0]
 800c0a0:	a907      	add	r1, sp, #28
 800c0a2:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800c0a4:	4620      	mov	r0, r4
 800c0a6:	4798      	blx	r3
 800c0a8:	f10a 0a01 	add.w	sl, sl, #1
 800c0ac:	fa1f fa8a 	uxth.w	sl, sl
 800c0b0:	e7e2      	b.n	800c078 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x170>
 800c0b2:	f8d8 0000 	ldr.w	r0, [r8]
 800c0b6:	6803      	ldr	r3, [r0, #0]
 800c0b8:	2101      	movs	r1, #1
 800c0ba:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800c0be:	4798      	blx	r3
 800c0c0:	e7a8      	b.n	800c014 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x10c>
 800c0c2:	69d3      	ldr	r3, [r2, #28]
 800c0c4:	4798      	blx	r3
 800c0c6:	4b37      	ldr	r3, [pc, #220]	; (800c1a4 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x29c>)
 800c0c8:	781b      	ldrb	r3, [r3, #0]
 800c0ca:	2b00      	cmp	r3, #0
 800c0cc:	f43f af26 	beq.w	800bf1c <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x14>
 800c0d0:	2300      	movs	r3, #0
 800c0d2:	883d      	ldrh	r5, [r7, #0]
 800c0d4:	f8a4 312a 	strh.w	r3, [r4, #298]	; 0x12a
 800c0d8:	34ea      	adds	r4, #234	; 0xea
 800c0da:	f8bd 3064 	ldrh.w	r3, [sp, #100]	; 0x64
 800c0de:	42ab      	cmp	r3, r5
 800c0e0:	f67f af1c 	bls.w	800bf1c <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x14>
 800c0e4:	ab1a      	add	r3, sp, #104	; 0x68
 800c0e6:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 800c0ea:	3b44      	subs	r3, #68	; 0x44
 800c0ec:	e893 0006 	ldmia.w	r3, {r1, r2}
 800c0f0:	4620      	mov	r0, r4
 800c0f2:	3501      	adds	r5, #1
 800c0f4:	f7ff fe20 	bl	800bd38 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_>
 800c0f8:	b2ad      	uxth	r5, r5
 800c0fa:	e7ee      	b.n	800c0da <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1d2>
 800c0fc:	2b02      	cmp	r3, #2
 800c0fe:	f040 813d 	bne.w	800c37c <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x474>
 800c102:	4b29      	ldr	r3, [pc, #164]	; (800c1a8 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2a0>)
 800c104:	781b      	ldrb	r3, [r3, #0]
 800c106:	2b01      	cmp	r3, #1
 800c108:	f000 809d 	beq.w	800c246 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x33e>
 800c10c:	f104 0ba8 	add.w	fp, r4, #168	; 0xa8
 800c110:	883a      	ldrh	r2, [r7, #0]
 800c112:	f8b4 10e8 	ldrh.w	r1, [r4, #232]	; 0xe8
 800c116:	3201      	adds	r2, #1
 800c118:	b292      	uxth	r2, r2
 800c11a:	2900      	cmp	r1, #0
 800c11c:	d0d3      	beq.n	800c0c6 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1be>
 800c11e:	f8b4 50aa 	ldrh.w	r5, [r4, #170]	; 0xaa
 800c122:	f8b4 30ae 	ldrh.w	r3, [r4, #174]	; 0xae
 800c126:	441d      	add	r5, r3
 800c128:	b22d      	sxth	r5, r5
 800c12a:	4610      	mov	r0, r2
 800c12c:	f04f 0a00 	mov.w	sl, #0
 800c130:	b283      	uxth	r3, r0
 800c132:	4299      	cmp	r1, r3
 800c134:	ea4f 06ca 	mov.w	r6, sl, lsl #3
 800c138:	f240 80c3 	bls.w	800c2c2 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x3ba>
 800c13c:	4426      	add	r6, r4
 800c13e:	eb04 09c0 	add.w	r9, r4, r0, lsl #3
 800c142:	f9b6 30aa 	ldrsh.w	r3, [r6, #170]	; 0xaa
 800c146:	f9b9 e0aa 	ldrsh.w	lr, [r9, #170]	; 0xaa
 800c14a:	4573      	cmp	r3, lr
 800c14c:	4684      	mov	ip, r0
 800c14e:	f340 80a5 	ble.w	800c29c <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x394>
 800c152:	f8b9 50ae 	ldrh.w	r5, [r9, #174]	; 0xae
 800c156:	4475      	add	r5, lr
 800c158:	b22d      	sxth	r5, r5
 800c15a:	429d      	cmp	r5, r3
 800c15c:	bfa8      	it	ge
 800c15e:	461d      	movge	r5, r3
 800c160:	3001      	adds	r0, #1
 800c162:	46e2      	mov	sl, ip
 800c164:	e7e4      	b.n	800c130 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x228>
 800c166:	d10b      	bne.n	800c180 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x278>
 800c168:	f9b5 c0ae 	ldrsh.w	ip, [r5, #174]	; 0xae
 800c16c:	f9b9 10ae 	ldrsh.w	r1, [r9, #174]	; 0xae
 800c170:	458c      	cmp	ip, r1
 800c172:	bfb4      	ite	lt
 800c174:	469c      	movlt	ip, r3
 800c176:	46b4      	movge	ip, r6
 800c178:	4572      	cmp	r2, lr
 800c17a:	bfb8      	it	lt
 800c17c:	4672      	movlt	r2, lr
 800c17e:	e08a      	b.n	800c296 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x38e>
 800c180:	428a      	cmp	r2, r1
 800c182:	bfb8      	it	lt
 800c184:	460a      	movlt	r2, r1
 800c186:	46b4      	mov	ip, r6
 800c188:	e085      	b.n	800c296 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x38e>
 800c18a:	bf00      	nop
 800c18c:	20012390 	.word	0x20012390
 800c190:	2001239c 	.word	0x2001239c
 800c194:	20000094 	.word	0x20000094
 800c198:	20012338 	.word	0x20012338
 800c19c:	2001232e 	.word	0x2001232e
 800c1a0:	2001232c 	.word	0x2001232c
 800c1a4:	20012336 	.word	0x20012336
 800c1a8:	20012330 	.word	0x20012330
 800c1ac:	1961      	adds	r1, r4, r5
 800c1ae:	ab05      	add	r3, sp, #20
 800c1b0:	f851 0fa8 	ldr.w	r0, [r1, #168]!
 800c1b4:	6849      	ldr	r1, [r1, #4]
 800c1b6:	c303      	stmia	r3!, {r0, r1}
 800c1b8:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 800c1bc:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 800c1c0:	2b13      	cmp	r3, #19
 800c1c2:	bfd8      	it	le
 800c1c4:	f9bd 2014 	ldrshle.w	r2, [sp, #20]
 800c1c8:	f8ad 2014 	strh.w	r2, [sp, #20]
 800c1cc:	440b      	add	r3, r1
 800c1ce:	1a9b      	subs	r3, r3, r2
 800c1d0:	a805      	add	r0, sp, #20
 800c1d2:	f8ad 3018 	strh.w	r3, [sp, #24]
 800c1d6:	f7ff fb99 	bl	800b90c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 800c1da:	a805      	add	r0, sp, #20
 800c1dc:	f7fc ff3d 	bl	800905a <_ZNK8touchgfx4Rect7isEmptyEv>
 800c1e0:	bb88      	cbnz	r0, 800c246 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x33e>
 800c1e2:	f9bd c01a 	ldrsh.w	ip, [sp, #26]
 800c1e6:	f8d8 0000 	ldr.w	r0, [r8]
 800c1ea:	f8bd 3018 	ldrh.w	r3, [sp, #24]
 800c1ee:	f8d0 e000 	ldr.w	lr, [r0]
 800c1f2:	f8bd 2016 	ldrh.w	r2, [sp, #22]
 800c1f6:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 800c1fa:	f1bc 0f14 	cmp.w	ip, #20
 800c1fe:	bfa8      	it	ge
 800c200:	f04f 0c14 	movge.w	ip, #20
 800c204:	fa1f fc8c 	uxth.w	ip, ip
 800c208:	f8cd c000 	str.w	ip, [sp]
 800c20c:	f8de 9078 	ldr.w	r9, [lr, #120]	; 0x78
 800c210:	47c8      	blx	r9
 800c212:	4681      	mov	r9, r0
 800c214:	f8ad 001a 	strh.w	r0, [sp, #26]
 800c218:	a805      	add	r0, sp, #20
 800c21a:	f7ff fb1d 	bl	800b858 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 800c21e:	6823      	ldr	r3, [r4, #0]
 800c220:	4425      	add	r5, r4
 800c222:	4620      	mov	r0, r4
 800c224:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800c226:	a905      	add	r1, sp, #20
 800c228:	4798      	blx	r3
 800c22a:	f8b5 00ac 	ldrh.w	r0, [r5, #172]	; 0xac
 800c22e:	eba0 0009 	sub.w	r0, r0, r9
 800c232:	b200      	sxth	r0, r0
 800c234:	f8a5 00ac 	strh.w	r0, [r5, #172]	; 0xac
 800c238:	b928      	cbnz	r0, 800c246 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x33e>
 800c23a:	b2b2      	uxth	r2, r6
 800c23c:	f104 01a8 	add.w	r1, r4, #168	; 0xa8
 800c240:	a807      	add	r0, sp, #28
 800c242:	f7ff fd5b 	bl	800bcfc <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800c246:	f8b4 a0e8 	ldrh.w	sl, [r4, #232]	; 0xe8
 800c24a:	f1ba 0f00 	cmp.w	sl, #0
 800c24e:	f43f af3a 	beq.w	800c0c6 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1be>
 800c252:	883b      	ldrh	r3, [r7, #0]
 800c254:	f9b4 20a8 	ldrsh.w	r2, [r4, #168]	; 0xa8
 800c258:	3301      	adds	r3, #1
 800c25a:	b29b      	uxth	r3, r3
 800c25c:	2600      	movs	r6, #0
 800c25e:	b299      	uxth	r1, r3
 800c260:	458a      	cmp	sl, r1
 800c262:	ea4f 05c6 	mov.w	r5, r6, lsl #3
 800c266:	d9a1      	bls.n	800c1ac <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2a4>
 800c268:	4425      	add	r5, r4
 800c26a:	eb04 09c3 	add.w	r9, r4, r3, lsl #3
 800c26e:	f8b5 10ac 	ldrh.w	r1, [r5, #172]	; 0xac
 800c272:	f8b5 00a8 	ldrh.w	r0, [r5, #168]	; 0xa8
 800c276:	f9b9 e0a8 	ldrsh.w	lr, [r9, #168]	; 0xa8
 800c27a:	4408      	add	r0, r1
 800c27c:	f8b9 10ac 	ldrh.w	r1, [r9, #172]	; 0xac
 800c280:	4471      	add	r1, lr
 800c282:	b200      	sxth	r0, r0
 800c284:	b209      	sxth	r1, r1
 800c286:	4288      	cmp	r0, r1
 800c288:	469c      	mov	ip, r3
 800c28a:	f6bf af6c 	bge.w	800c166 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x25e>
 800c28e:	4586      	cmp	lr, r0
 800c290:	4672      	mov	r2, lr
 800c292:	bfb8      	it	lt
 800c294:	4602      	movlt	r2, r0
 800c296:	3301      	adds	r3, #1
 800c298:	4666      	mov	r6, ip
 800c29a:	e7e0      	b.n	800c25e <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x356>
 800c29c:	d10c      	bne.n	800c2b8 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x3b0>
 800c29e:	f9b6 c0ac 	ldrsh.w	ip, [r6, #172]	; 0xac
 800c2a2:	f9b9 60ac 	ldrsh.w	r6, [r9, #172]	; 0xac
 800c2a6:	45b4      	cmp	ip, r6
 800c2a8:	bfb4      	ite	lt
 800c2aa:	4684      	movlt	ip, r0
 800c2ac:	46d4      	movge	ip, sl
 800c2ae:	f8b9 60ae 	ldrh.w	r6, [r9, #174]	; 0xae
 800c2b2:	4433      	add	r3, r6
 800c2b4:	b21b      	sxth	r3, r3
 800c2b6:	e750      	b.n	800c15a <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x252>
 800c2b8:	4575      	cmp	r5, lr
 800c2ba:	bfa8      	it	ge
 800c2bc:	4675      	movge	r5, lr
 800c2be:	46d4      	mov	ip, sl
 800c2c0:	e74e      	b.n	800c160 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x258>
 800c2c2:	eb0b 0006 	add.w	r0, fp, r6
 800c2c6:	4426      	add	r6, r4
 800c2c8:	e9cd 1202 	strd	r1, r2, [sp, #8]
 800c2cc:	f9b6 90ae 	ldrsh.w	r9, [r6, #174]	; 0xae
 800c2d0:	f1b9 0f13 	cmp.w	r9, #19
 800c2d4:	bfde      	ittt	le
 800c2d6:	f8b6 50aa 	ldrhle.w	r5, [r6, #170]	; 0xaa
 800c2da:	444d      	addle	r5, r9
 800c2dc:	b22d      	sxthle	r5, r5
 800c2de:	f7fc febc 	bl	800905a <_ZNK8touchgfx4Rect7isEmptyEv>
 800c2e2:	e9dd 1202 	ldrd	r1, r2, [sp, #8]
 800c2e6:	2800      	cmp	r0, #0
 800c2e8:	f47f af17 	bne.w	800c11a <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x212>
 800c2ec:	f9b6 c0aa 	ldrsh.w	ip, [r6, #170]	; 0xaa
 800c2f0:	f8ad 001a 	strh.w	r0, [sp, #26]
 800c2f4:	eba5 050c 	sub.w	r5, r5, ip
 800c2f8:	fa1f f28c 	uxth.w	r2, ip
 800c2fc:	fa1f f989 	uxth.w	r9, r9
 800c300:	eb02 0009 	add.w	r0, r2, r9
 800c304:	2d14      	cmp	r5, #20
 800c306:	bfa8      	it	ge
 800c308:	2514      	movge	r5, #20
 800c30a:	b200      	sxth	r0, r0
 800c30c:	fa1f fe85 	uxth.w	lr, r5
 800c310:	eba0 000c 	sub.w	r0, r0, ip
 800c314:	f9b6 10a8 	ldrsh.w	r1, [r6, #168]	; 0xa8
 800c318:	f9b6 30ac 	ldrsh.w	r3, [r6, #172]	; 0xac
 800c31c:	f8ad 1014 	strh.w	r1, [sp, #20]
 800c320:	4586      	cmp	lr, r0
 800c322:	f8d8 0000 	ldr.w	r0, [r8]
 800c326:	f8ad c016 	strh.w	ip, [sp, #22]
 800c32a:	f8ad 3018 	strh.w	r3, [sp, #24]
 800c32e:	bfb8      	it	lt
 800c330:	46f1      	movlt	r9, lr
 800c332:	6805      	ldr	r5, [r0, #0]
 800c334:	f8cd 9000 	str.w	r9, [sp]
 800c338:	b29b      	uxth	r3, r3
 800c33a:	b289      	uxth	r1, r1
 800c33c:	6fad      	ldr	r5, [r5, #120]	; 0x78
 800c33e:	47a8      	blx	r5
 800c340:	6823      	ldr	r3, [r4, #0]
 800c342:	f8ad 001a 	strh.w	r0, [sp, #26]
 800c346:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800c348:	a905      	add	r1, sp, #20
 800c34a:	4620      	mov	r0, r4
 800c34c:	4798      	blx	r3
 800c34e:	f8bd 101a 	ldrh.w	r1, [sp, #26]
 800c352:	f8b6 30ae 	ldrh.w	r3, [r6, #174]	; 0xae
 800c356:	f8b6 20aa 	ldrh.w	r2, [r6, #170]	; 0xaa
 800c35a:	1a5b      	subs	r3, r3, r1
 800c35c:	440a      	add	r2, r1
 800c35e:	b21b      	sxth	r3, r3
 800c360:	f8a6 20aa 	strh.w	r2, [r6, #170]	; 0xaa
 800c364:	f8a6 30ae 	strh.w	r3, [r6, #174]	; 0xae
 800c368:	2b00      	cmp	r3, #0
 800c36a:	f47f aed1 	bne.w	800c110 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x208>
 800c36e:	fa1f f28a 	uxth.w	r2, sl
 800c372:	4659      	mov	r1, fp
 800c374:	a807      	add	r0, sp, #28
 800c376:	f7ff fcc1 	bl	800bcfc <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800c37a:	e6c9      	b.n	800c110 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x208>
 800c37c:	f8b4 30e8 	ldrh.w	r3, [r4, #232]	; 0xe8
 800c380:	42ab      	cmp	r3, r5
 800c382:	f67f aea0 	bls.w	800c0c6 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1be>
 800c386:	eb04 02c5 	add.w	r2, r4, r5, lsl #3
 800c38a:	ab07      	add	r3, sp, #28
 800c38c:	f852 0fa8 	ldr.w	r0, [r2, #168]!
 800c390:	6851      	ldr	r1, [r2, #4]
 800c392:	c303      	stmia	r3!, {r0, r1}
 800c394:	a807      	add	r0, sp, #28
 800c396:	f7fc fe60 	bl	800905a <_ZNK8touchgfx4Rect7isEmptyEv>
 800c39a:	b920      	cbnz	r0, 800c3a6 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x49e>
 800c39c:	6823      	ldr	r3, [r4, #0]
 800c39e:	a907      	add	r1, sp, #28
 800c3a0:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800c3a2:	4620      	mov	r0, r4
 800c3a4:	4798      	blx	r3
 800c3a6:	3501      	adds	r5, #1
 800c3a8:	b2ad      	uxth	r5, r5
 800c3aa:	e7e7      	b.n	800c37c <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x474>

0800c3ac <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE>:
 800c3ac:	4b03      	ldr	r3, [pc, #12]	; (800c3bc <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE+0x10>)
 800c3ae:	2200      	movs	r2, #0
 800c3b0:	801a      	strh	r2, [r3, #0]
 800c3b2:	805a      	strh	r2, [r3, #2]
 800c3b4:	809a      	strh	r2, [r3, #4]
 800c3b6:	80da      	strh	r2, [r3, #6]
 800c3b8:	4770      	bx	lr
 800c3ba:	bf00      	nop
 800c3bc:	2001239c 	.word	0x2001239c

0800c3c0 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>:
 800c3c0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c3c4:	4607      	mov	r7, r0
 800c3c6:	b099      	sub	sp, #100	; 0x64
 800c3c8:	a802      	add	r0, sp, #8
 800c3ca:	4614      	mov	r4, r2
 800c3cc:	461d      	mov	r5, r3
 800c3ce:	468a      	mov	sl, r1
 800c3d0:	f000 fdbc 	bl	800cf4c <_ZN8touchgfx12TextProviderC1Ev>
 800c3d4:	683b      	ldr	r3, [r7, #0]
 800c3d6:	4638      	mov	r0, r7
 800c3d8:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800c3da:	4798      	blx	r3
 800c3dc:	462a      	mov	r2, r5
 800c3de:	4603      	mov	r3, r0
 800c3e0:	4621      	mov	r1, r4
 800c3e2:	a802      	add	r0, sp, #8
 800c3e4:	f000 fdf7 	bl	800cfd6 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_>
 800c3e8:	2500      	movs	r5, #0
 800c3ea:	462c      	mov	r4, r5
 800c3ec:	46a9      	mov	r9, r5
 800c3ee:	46a8      	mov	r8, r5
 800c3f0:	f242 0b0b 	movw	fp, #8203	; 0x200b
 800c3f4:	2300      	movs	r3, #0
 800c3f6:	9301      	str	r3, [sp, #4]
 800c3f8:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 800c3fc:	429c      	cmp	r4, r3
 800c3fe:	d002      	beq.n	800c406 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x46>
 800c400:	455c      	cmp	r4, fp
 800c402:	bf18      	it	ne
 800c404:	4625      	movne	r5, r4
 800c406:	ab01      	add	r3, sp, #4
 800c408:	463a      	mov	r2, r7
 800c40a:	4651      	mov	r1, sl
 800c40c:	a802      	add	r0, sp, #8
 800c40e:	f001 f8db 	bl	800d5c8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800c412:	4604      	mov	r4, r0
 800c414:	b108      	cbz	r0, 800c41a <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x5a>
 800c416:	280a      	cmp	r0, #10
 800c418:	d10a      	bne.n	800c430 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x70>
 800c41a:	45c1      	cmp	r9, r8
 800c41c:	bf38      	it	cc
 800c41e:	46c1      	movcc	r9, r8
 800c420:	f04f 0800 	mov.w	r8, #0
 800c424:	2c00      	cmp	r4, #0
 800c426:	d1e5      	bne.n	800c3f4 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x34>
 800c428:	4648      	mov	r0, r9
 800c42a:	b019      	add	sp, #100	; 0x64
 800c42c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c430:	9a01      	ldr	r2, [sp, #4]
 800c432:	2a00      	cmp	r2, #0
 800c434:	d0de      	beq.n	800c3f4 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x34>
 800c436:	7b56      	ldrb	r6, [r2, #13]
 800c438:	683b      	ldr	r3, [r7, #0]
 800c43a:	8894      	ldrh	r4, [r2, #4]
 800c43c:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800c43e:	0076      	lsls	r6, r6, #1
 800c440:	f406 7080 	and.w	r0, r6, #256	; 0x100
 800c444:	7a96      	ldrb	r6, [r2, #10]
 800c446:	4629      	mov	r1, r5
 800c448:	4306      	orrs	r6, r0
 800c44a:	4638      	mov	r0, r7
 800c44c:	4798      	blx	r3
 800c44e:	4430      	add	r0, r6
 800c450:	4480      	add	r8, r0
 800c452:	fa1f f888 	uxth.w	r8, r8
 800c456:	e7e5      	b.n	800c424 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x64>

0800c458 <_ZNK8touchgfx4Font12getCharWidthEt>:
 800c458:	b508      	push	{r3, lr}
 800c45a:	6803      	ldr	r3, [r0, #0]
 800c45c:	68db      	ldr	r3, [r3, #12]
 800c45e:	4798      	blx	r3
 800c460:	b128      	cbz	r0, 800c46e <_ZNK8touchgfx4Font12getCharWidthEt+0x16>
 800c462:	7b43      	ldrb	r3, [r0, #13]
 800c464:	7a80      	ldrb	r0, [r0, #10]
 800c466:	005b      	lsls	r3, r3, #1
 800c468:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800c46c:	4318      	orrs	r0, r3
 800c46e:	bd08      	pop	{r3, pc}

0800c470 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz>:
 800c470:	b40e      	push	{r1, r2, r3}
 800c472:	b5f0      	push	{r4, r5, r6, r7, lr}
 800c474:	b098      	sub	sp, #96	; 0x60
 800c476:	ab1d      	add	r3, sp, #116	; 0x74
 800c478:	4605      	mov	r5, r0
 800c47a:	f853 4b04 	ldr.w	r4, [r3], #4
 800c47e:	9300      	str	r3, [sp, #0]
 800c480:	a802      	add	r0, sp, #8
 800c482:	f000 fd63 	bl	800cf4c <_ZN8touchgfx12TextProviderC1Ev>
 800c486:	682b      	ldr	r3, [r5, #0]
 800c488:	4628      	mov	r0, r5
 800c48a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800c48c:	4798      	blx	r3
 800c48e:	ae18      	add	r6, sp, #96	; 0x60
 800c490:	4603      	mov	r3, r0
 800c492:	4621      	mov	r1, r4
 800c494:	9a00      	ldr	r2, [sp, #0]
 800c496:	2400      	movs	r4, #0
 800c498:	a802      	add	r0, sp, #8
 800c49a:	f000 fd9c 	bl	800cfd6 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_>
 800c49e:	f846 4d5c 	str.w	r4, [r6, #-92]!
 800c4a2:	462a      	mov	r2, r5
 800c4a4:	4633      	mov	r3, r6
 800c4a6:	4621      	mov	r1, r4
 800c4a8:	a802      	add	r0, sp, #8
 800c4aa:	f001 f88d 	bl	800d5c8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800c4ae:	b1f0      	cbz	r0, 800c4ee <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x7e>
 800c4b0:	280a      	cmp	r0, #10
 800c4b2:	d018      	beq.n	800c4e6 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x76>
 800c4b4:	9f01      	ldr	r7, [sp, #4]
 800c4b6:	b1b7      	cbz	r7, 800c4e6 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x76>
 800c4b8:	7b78      	ldrb	r0, [r7, #13]
 800c4ba:	7a3b      	ldrb	r3, [r7, #8]
 800c4bc:	88aa      	ldrh	r2, [r5, #4]
 800c4be:	00c1      	lsls	r1, r0, #3
 800c4c0:	f401 7180 	and.w	r1, r1, #256	; 0x100
 800c4c4:	4319      	orrs	r1, r3
 800c4c6:	0643      	lsls	r3, r0, #25
 800c4c8:	bf44      	itt	mi
 800c4ca:	f5a1 7300 	submi.w	r3, r1, #512	; 0x200
 800c4ce:	b219      	sxthmi	r1, r3
 800c4d0:	0100      	lsls	r0, r0, #4
 800c4d2:	79fb      	ldrb	r3, [r7, #7]
 800c4d4:	f400 7080 	and.w	r0, r0, #256	; 0x100
 800c4d8:	4303      	orrs	r3, r0
 800c4da:	4413      	add	r3, r2
 800c4dc:	1a5b      	subs	r3, r3, r1
 800c4de:	b29b      	uxth	r3, r3
 800c4e0:	42a3      	cmp	r3, r4
 800c4e2:	bfc8      	it	gt
 800c4e4:	b21c      	sxthgt	r4, r3
 800c4e6:	4633      	mov	r3, r6
 800c4e8:	462a      	mov	r2, r5
 800c4ea:	2100      	movs	r1, #0
 800c4ec:	e7dc      	b.n	800c4a8 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x38>
 800c4ee:	b2a0      	uxth	r0, r4
 800c4f0:	b018      	add	sp, #96	; 0x60
 800c4f2:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 800c4f6:	b003      	add	sp, #12
 800c4f8:	4770      	bx	lr

0800c4fa <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz>:
 800c4fa:	b40e      	push	{r1, r2, r3}
 800c4fc:	b530      	push	{r4, r5, lr}
 800c4fe:	b098      	sub	sp, #96	; 0x60
 800c500:	ab1b      	add	r3, sp, #108	; 0x6c
 800c502:	4604      	mov	r4, r0
 800c504:	f853 5b04 	ldr.w	r5, [r3], #4
 800c508:	9301      	str	r3, [sp, #4]
 800c50a:	a802      	add	r0, sp, #8
 800c50c:	f000 fd1e 	bl	800cf4c <_ZN8touchgfx12TextProviderC1Ev>
 800c510:	6823      	ldr	r3, [r4, #0]
 800c512:	4620      	mov	r0, r4
 800c514:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800c516:	4798      	blx	r3
 800c518:	9a01      	ldr	r2, [sp, #4]
 800c51a:	4603      	mov	r3, r0
 800c51c:	4629      	mov	r1, r5
 800c51e:	a802      	add	r0, sp, #8
 800c520:	f000 fd59 	bl	800cfd6 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_>
 800c524:	a802      	add	r0, sp, #8
 800c526:	f001 f947 	bl	800d7b8 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800c52a:	2401      	movs	r4, #1
 800c52c:	b2a3      	uxth	r3, r4
 800c52e:	b140      	cbz	r0, 800c542 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x48>
 800c530:	280a      	cmp	r0, #10
 800c532:	bf08      	it	eq
 800c534:	3301      	addeq	r3, #1
 800c536:	a802      	add	r0, sp, #8
 800c538:	bf08      	it	eq
 800c53a:	b21c      	sxtheq	r4, r3
 800c53c:	f001 f93c 	bl	800d7b8 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800c540:	e7f4      	b.n	800c52c <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x32>
 800c542:	4618      	mov	r0, r3
 800c544:	b018      	add	sp, #96	; 0x60
 800c546:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 800c54a:	b003      	add	sp, #12
 800c54c:	4770      	bx	lr

0800c54e <_ZNK8touchgfx4Font15getSpacingAboveEPKtz>:
 800c54e:	b40e      	push	{r1, r2, r3}
 800c550:	b5f0      	push	{r4, r5, r6, r7, lr}
 800c552:	b098      	sub	sp, #96	; 0x60
 800c554:	ab1d      	add	r3, sp, #116	; 0x74
 800c556:	4604      	mov	r4, r0
 800c558:	f853 5b04 	ldr.w	r5, [r3], #4
 800c55c:	9300      	str	r3, [sp, #0]
 800c55e:	a802      	add	r0, sp, #8
 800c560:	f000 fcf4 	bl	800cf4c <_ZN8touchgfx12TextProviderC1Ev>
 800c564:	6823      	ldr	r3, [r4, #0]
 800c566:	4620      	mov	r0, r4
 800c568:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800c56a:	4798      	blx	r3
 800c56c:	4629      	mov	r1, r5
 800c56e:	4603      	mov	r3, r0
 800c570:	9a00      	ldr	r2, [sp, #0]
 800c572:	a802      	add	r0, sp, #8
 800c574:	ad18      	add	r5, sp, #96	; 0x60
 800c576:	f000 fd2e 	bl	800cfd6 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_>
 800c57a:	2100      	movs	r1, #0
 800c57c:	f845 1d5c 	str.w	r1, [r5, #-92]!
 800c580:	4622      	mov	r2, r4
 800c582:	462b      	mov	r3, r5
 800c584:	a802      	add	r0, sp, #8
 800c586:	f001 f81f 	bl	800d5c8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800c58a:	26ff      	movs	r6, #255	; 0xff
 800c58c:	b1d8      	cbz	r0, 800c5c6 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
 800c58e:	280a      	cmp	r0, #10
 800c590:	d012      	beq.n	800c5b8 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x6a>
 800c592:	9801      	ldr	r0, [sp, #4]
 800c594:	b180      	cbz	r0, 800c5b8 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x6a>
 800c596:	7b47      	ldrb	r7, [r0, #13]
 800c598:	7922      	ldrb	r2, [r4, #4]
 800c59a:	00fb      	lsls	r3, r7, #3
 800c59c:	f403 7180 	and.w	r1, r3, #256	; 0x100
 800c5a0:	7a03      	ldrb	r3, [r0, #8]
 800c5a2:	430b      	orrs	r3, r1
 800c5a4:	0679      	lsls	r1, r7, #25
 800c5a6:	bf44      	itt	mi
 800c5a8:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 800c5ac:	b21b      	sxthmi	r3, r3
 800c5ae:	1ad3      	subs	r3, r2, r3
 800c5b0:	b2db      	uxtb	r3, r3
 800c5b2:	429e      	cmp	r6, r3
 800c5b4:	bf28      	it	cs
 800c5b6:	461e      	movcs	r6, r3
 800c5b8:	462b      	mov	r3, r5
 800c5ba:	4622      	mov	r2, r4
 800c5bc:	2100      	movs	r1, #0
 800c5be:	a802      	add	r0, sp, #8
 800c5c0:	f001 f802 	bl	800d5c8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800c5c4:	e7e2      	b.n	800c58c <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x3e>
 800c5c6:	4630      	mov	r0, r6
 800c5c8:	b018      	add	sp, #96	; 0x60
 800c5ca:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 800c5ce:	b003      	add	sp, #12
 800c5d0:	4770      	bx	lr

0800c5d2 <_ZNK8touchgfx8Drawable10invalidateEv>:
 800c5d2:	b513      	push	{r0, r1, r4, lr}
 800c5d4:	1d01      	adds	r1, r0, #4
 800c5d6:	4603      	mov	r3, r0
 800c5d8:	c903      	ldmia	r1, {r0, r1}
 800c5da:	466a      	mov	r2, sp
 800c5dc:	e882 0003 	stmia.w	r2, {r0, r1}
 800c5e0:	2100      	movs	r1, #0
 800c5e2:	9100      	str	r1, [sp, #0]
 800c5e4:	6819      	ldr	r1, [r3, #0]
 800c5e6:	4618      	mov	r0, r3
 800c5e8:	690c      	ldr	r4, [r1, #16]
 800c5ea:	4611      	mov	r1, r2
 800c5ec:	47a0      	blx	r4
 800c5ee:	b002      	add	sp, #8
 800c5f0:	bd10      	pop	{r4, pc}

0800c5f2 <_ZN8touchgfx8Drawable20getSolidRectAbsoluteEv>:
 800c5f2:	b538      	push	{r3, r4, r5, lr}
 800c5f4:	680b      	ldr	r3, [r1, #0]
 800c5f6:	460c      	mov	r4, r1
 800c5f8:	68db      	ldr	r3, [r3, #12]
 800c5fa:	4605      	mov	r5, r0
 800c5fc:	4798      	blx	r3
 800c5fe:	6823      	ldr	r3, [r4, #0]
 800c600:	4620      	mov	r0, r4
 800c602:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800c604:	4629      	mov	r1, r5
 800c606:	4798      	blx	r3
 800c608:	4628      	mov	r0, r5
 800c60a:	bd38      	pop	{r3, r4, r5, pc}

0800c60c <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE>:
 800c60c:	b410      	push	{r4}
 800c60e:	880a      	ldrh	r2, [r1, #0]
 800c610:	8884      	ldrh	r4, [r0, #4]
 800c612:	4422      	add	r2, r4
 800c614:	800a      	strh	r2, [r1, #0]
 800c616:	88c4      	ldrh	r4, [r0, #6]
 800c618:	884a      	ldrh	r2, [r1, #2]
 800c61a:	4422      	add	r2, r4
 800c61c:	804a      	strh	r2, [r1, #2]
 800c61e:	6940      	ldr	r0, [r0, #20]
 800c620:	b120      	cbz	r0, 800c62c <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE+0x20>
 800c622:	6803      	ldr	r3, [r0, #0]
 800c624:	f85d 4b04 	ldr.w	r4, [sp], #4
 800c628:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800c62a:	4718      	bx	r3
 800c62c:	f85d 4b04 	ldr.w	r4, [sp], #4
 800c630:	4770      	bx	lr

0800c632 <_ZN8touchgfx8Drawable12moveRelativeEss>:
 800c632:	b5f0      	push	{r4, r5, r6, r7, lr}
 800c634:	460b      	mov	r3, r1
 800c636:	b085      	sub	sp, #20
 800c638:	4604      	mov	r4, r0
 800c63a:	b901      	cbnz	r1, 800c63e <_ZN8touchgfx8Drawable12moveRelativeEss+0xc>
 800c63c:	b1fa      	cbz	r2, 800c67e <_ZN8touchgfx8Drawable12moveRelativeEss+0x4c>
 800c63e:	1d27      	adds	r7, r4, #4
 800c640:	e897 0003 	ldmia.w	r7, {r0, r1}
 800c644:	466e      	mov	r6, sp
 800c646:	e886 0003 	stmia.w	r6, {r0, r1}
 800c64a:	88e1      	ldrh	r1, [r4, #6]
 800c64c:	440a      	add	r2, r1
 800c64e:	88a1      	ldrh	r1, [r4, #4]
 800c650:	4419      	add	r1, r3
 800c652:	6823      	ldr	r3, [r4, #0]
 800c654:	b209      	sxth	r1, r1
 800c656:	4620      	mov	r0, r4
 800c658:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800c65a:	b212      	sxth	r2, r2
 800c65c:	4798      	blx	r3
 800c65e:	e897 0003 	ldmia.w	r7, {r0, r1}
 800c662:	ad02      	add	r5, sp, #8
 800c664:	e885 0003 	stmia.w	r5, {r0, r1}
 800c668:	6960      	ldr	r0, [r4, #20]
 800c66a:	b150      	cbz	r0, 800c682 <_ZN8touchgfx8Drawable12moveRelativeEss+0x50>
 800c66c:	6803      	ldr	r3, [r0, #0]
 800c66e:	4631      	mov	r1, r6
 800c670:	691b      	ldr	r3, [r3, #16]
 800c672:	4798      	blx	r3
 800c674:	6960      	ldr	r0, [r4, #20]
 800c676:	6803      	ldr	r3, [r0, #0]
 800c678:	691b      	ldr	r3, [r3, #16]
 800c67a:	4629      	mov	r1, r5
 800c67c:	4798      	blx	r3
 800c67e:	b005      	add	sp, #20
 800c680:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800c682:	f7ff fad7 	bl	800bc34 <_ZN8touchgfx11Application11getInstanceEv>
 800c686:	6803      	ldr	r3, [r0, #0]
 800c688:	4631      	mov	r1, r6
 800c68a:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800c68c:	4798      	blx	r3
 800c68e:	f7ff fad1 	bl	800bc34 <_ZN8touchgfx11Application11getInstanceEv>
 800c692:	6803      	ldr	r3, [r0, #0]
 800c694:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800c696:	e7f0      	b.n	800c67a <_ZN8touchgfx8Drawable12moveRelativeEss+0x48>

0800c698 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE>:
 800c698:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800c69a:	8882      	ldrh	r2, [r0, #4]
 800c69c:	880b      	ldrh	r3, [r1, #0]
 800c69e:	4413      	add	r3, r2
 800c6a0:	800b      	strh	r3, [r1, #0]
 800c6a2:	88c2      	ldrh	r2, [r0, #6]
 800c6a4:	884b      	ldrh	r3, [r1, #2]
 800c6a6:	4413      	add	r3, r2
 800c6a8:	4602      	mov	r2, r0
 800c6aa:	804b      	strh	r3, [r1, #2]
 800c6ac:	4605      	mov	r5, r0
 800c6ae:	f852 0f04 	ldr.w	r0, [r2, #4]!
 800c6b2:	460c      	mov	r4, r1
 800c6b4:	6851      	ldr	r1, [r2, #4]
 800c6b6:	466b      	mov	r3, sp
 800c6b8:	c303      	stmia	r3!, {r0, r1}
 800c6ba:	4621      	mov	r1, r4
 800c6bc:	4668      	mov	r0, sp
 800c6be:	f7fc fc89 	bl	8008fd4 <_ZN8touchgfx4RectaNERKS0_>
 800c6c2:	466b      	mov	r3, sp
 800c6c4:	cb03      	ldmia	r3!, {r0, r1}
 800c6c6:	6020      	str	r0, [r4, #0]
 800c6c8:	6061      	str	r1, [r4, #4]
 800c6ca:	6968      	ldr	r0, [r5, #20]
 800c6cc:	b128      	cbz	r0, 800c6da <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x42>
 800c6ce:	6803      	ldr	r3, [r0, #0]
 800c6d0:	691b      	ldr	r3, [r3, #16]
 800c6d2:	4621      	mov	r1, r4
 800c6d4:	4798      	blx	r3
 800c6d6:	b003      	add	sp, #12
 800c6d8:	bd30      	pop	{r4, r5, pc}
 800c6da:	f7ff faab 	bl	800bc34 <_ZN8touchgfx11Application11getInstanceEv>
 800c6de:	6803      	ldr	r3, [r0, #0]
 800c6e0:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800c6e2:	e7f6      	b.n	800c6d2 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x3a>

0800c6e4 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE>:
 800c6e4:	b570      	push	{r4, r5, r6, lr}
 800c6e6:	8882      	ldrh	r2, [r0, #4]
 800c6e8:	880b      	ldrh	r3, [r1, #0]
 800c6ea:	4413      	add	r3, r2
 800c6ec:	800b      	strh	r3, [r1, #0]
 800c6ee:	88c2      	ldrh	r2, [r0, #6]
 800c6f0:	884b      	ldrh	r3, [r1, #2]
 800c6f2:	460c      	mov	r4, r1
 800c6f4:	4413      	add	r3, r2
 800c6f6:	804b      	strh	r3, [r1, #2]
 800c6f8:	4605      	mov	r5, r0
 800c6fa:	1d01      	adds	r1, r0, #4
 800c6fc:	4620      	mov	r0, r4
 800c6fe:	f7fc fc69 	bl	8008fd4 <_ZN8touchgfx4RectaNERKS0_>
 800c702:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 800c706:	2b00      	cmp	r3, #0
 800c708:	dd0b      	ble.n	800c722 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 800c70a:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 800c70e:	2b00      	cmp	r3, #0
 800c710:	dd07      	ble.n	800c722 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 800c712:	6968      	ldr	r0, [r5, #20]
 800c714:	b128      	cbz	r0, 800c722 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 800c716:	6803      	ldr	r3, [r0, #0]
 800c718:	4621      	mov	r1, r4
 800c71a:	6a1b      	ldr	r3, [r3, #32]
 800c71c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800c720:	4718      	bx	r3
 800c722:	bd70      	pop	{r4, r5, r6, pc}

0800c724 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>:
 800c724:	b510      	push	{r4, lr}
 800c726:	4604      	mov	r4, r0
 800c728:	4608      	mov	r0, r1
 800c72a:	2300      	movs	r3, #0
 800c72c:	8023      	strh	r3, [r4, #0]
 800c72e:	8063      	strh	r3, [r4, #2]
 800c730:	6803      	ldr	r3, [r0, #0]
 800c732:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 800c736:	f9b1 1008 	ldrsh.w	r1, [r1, #8]
 800c73a:	80a1      	strh	r1, [r4, #4]
 800c73c:	80e2      	strh	r2, [r4, #6]
 800c73e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800c740:	4621      	mov	r1, r4
 800c742:	4798      	blx	r3
 800c744:	4620      	mov	r0, r4
 800c746:	bd10      	pop	{r4, pc}

0800c748 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEtthhhhhtt>:
 800c748:	b530      	push	{r4, r5, lr}
 800c74a:	8083      	strh	r3, [r0, #4]
 800c74c:	f89d 300c 	ldrb.w	r3, [sp, #12]
 800c750:	f89d 5010 	ldrb.w	r5, [sp, #16]
 800c754:	7183      	strb	r3, [r0, #6]
 800c756:	79c3      	ldrb	r3, [r0, #7]
 800c758:	6101      	str	r1, [r0, #16]
 800c75a:	f365 0306 	bfi	r3, r5, #0, #7
 800c75e:	f89d 5014 	ldrb.w	r5, [sp, #20]
 800c762:	8282      	strh	r2, [r0, #20]
 800c764:	f365 13c7 	bfi	r3, r5, #7, #1
 800c768:	71c3      	strb	r3, [r0, #7]
 800c76a:	f89d 3018 	ldrb.w	r3, [sp, #24]
 800c76e:	7203      	strb	r3, [r0, #8]
 800c770:	f89d 301c 	ldrb.w	r3, [sp, #28]
 800c774:	7243      	strb	r3, [r0, #9]
 800c776:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 800c77a:	8143      	strh	r3, [r0, #10]
 800c77c:	f8bd 3024 	ldrh.w	r3, [sp, #36]	; 0x24
 800c780:	8183      	strh	r3, [r0, #12]
 800c782:	4b01      	ldr	r3, [pc, #4]	; (800c788 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEtthhhhhtt+0x40>)
 800c784:	6003      	str	r3, [r0, #0]
 800c786:	bd30      	pop	{r4, r5, pc}
 800c788:	0801c754 	.word	0x0801c754

0800c78c <_ZNK8touchgfx9ConstFont4findEt>:
 800c78c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800c78e:	6904      	ldr	r4, [r0, #16]
 800c790:	8a82      	ldrh	r2, [r0, #20]
 800c792:	88a3      	ldrh	r3, [r4, #4]
 800c794:	1acb      	subs	r3, r1, r3
 800c796:	f102 32ff 	add.w	r2, r2, #4294967295
 800c79a:	d431      	bmi.n	800c800 <_ZNK8touchgfx9ConstFont4findEt+0x74>
 800c79c:	4293      	cmp	r3, r2
 800c79e:	dd0c      	ble.n	800c7ba <_ZNK8touchgfx9ConstFont4findEt+0x2e>
 800c7a0:	230e      	movs	r3, #14
 800c7a2:	fb03 4302 	mla	r3, r3, r2, r4
 800c7a6:	889b      	ldrh	r3, [r3, #4]
 800c7a8:	1a5b      	subs	r3, r3, r1
 800c7aa:	1ad3      	subs	r3, r2, r3
 800c7ac:	429a      	cmp	r2, r3
 800c7ae:	db27      	blt.n	800c800 <_ZNK8touchgfx9ConstFont4findEt+0x74>
 800c7b0:	2b00      	cmp	r3, #0
 800c7b2:	bfbc      	itt	lt
 800c7b4:	2302      	movlt	r3, #2
 800c7b6:	fb92 f3f3 	sdivlt	r3, r2, r3
 800c7ba:	2500      	movs	r5, #0
 800c7bc:	260e      	movs	r6, #14
 800c7be:	4295      	cmp	r5, r2
 800c7c0:	dc1e      	bgt.n	800c800 <_ZNK8touchgfx9ConstFont4findEt+0x74>
 800c7c2:	fb06 4003 	mla	r0, r6, r3, r4
 800c7c6:	8887      	ldrh	r7, [r0, #4]
 800c7c8:	42b9      	cmp	r1, r7
 800c7ca:	d01a      	beq.n	800c802 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800c7cc:	d20d      	bcs.n	800c7ea <_ZNK8touchgfx9ConstFont4findEt+0x5e>
 800c7ce:	1e5a      	subs	r2, r3, #1
 800c7d0:	4295      	cmp	r5, r2
 800c7d2:	dc15      	bgt.n	800c800 <_ZNK8touchgfx9ConstFont4findEt+0x74>
 800c7d4:	f830 3c0a 	ldrh.w	r3, [r0, #-10]
 800c7d8:	1a5b      	subs	r3, r3, r1
 800c7da:	1ad3      	subs	r3, r2, r3
 800c7dc:	429a      	cmp	r2, r3
 800c7de:	db0f      	blt.n	800c800 <_ZNK8touchgfx9ConstFont4findEt+0x74>
 800c7e0:	429d      	cmp	r5, r3
 800c7e2:	ddec      	ble.n	800c7be <_ZNK8touchgfx9ConstFont4findEt+0x32>
 800c7e4:	1953      	adds	r3, r2, r5
 800c7e6:	105b      	asrs	r3, r3, #1
 800c7e8:	e7e9      	b.n	800c7be <_ZNK8touchgfx9ConstFont4findEt+0x32>
 800c7ea:	1c5d      	adds	r5, r3, #1
 800c7ec:	42aa      	cmp	r2, r5
 800c7ee:	db07      	blt.n	800c800 <_ZNK8touchgfx9ConstFont4findEt+0x74>
 800c7f0:	8a43      	ldrh	r3, [r0, #18]
 800c7f2:	1acb      	subs	r3, r1, r3
 800c7f4:	442b      	add	r3, r5
 800c7f6:	429d      	cmp	r5, r3
 800c7f8:	dc02      	bgt.n	800c800 <_ZNK8touchgfx9ConstFont4findEt+0x74>
 800c7fa:	429a      	cmp	r2, r3
 800c7fc:	dadf      	bge.n	800c7be <_ZNK8touchgfx9ConstFont4findEt+0x32>
 800c7fe:	e7f1      	b.n	800c7e4 <_ZNK8touchgfx9ConstFont4findEt+0x58>
 800c800:	2000      	movs	r0, #0
 800c802:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800c804 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh>:
 800c804:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800c806:	4604      	mov	r4, r0
 800c808:	4617      	mov	r7, r2
 800c80a:	461e      	mov	r6, r3
 800c80c:	b911      	cbnz	r1, 800c814 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x10>
 800c80e:	2500      	movs	r5, #0
 800c810:	4628      	mov	r0, r5
 800c812:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800c814:	290a      	cmp	r1, #10
 800c816:	d0fa      	beq.n	800c80e <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 800c818:	f64f 62ff 	movw	r2, #65279	; 0xfeff
 800c81c:	4291      	cmp	r1, r2
 800c81e:	d0f6      	beq.n	800c80e <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 800c820:	f242 020b 	movw	r2, #8203	; 0x200b
 800c824:	4291      	cmp	r1, r2
 800c826:	d0f2      	beq.n	800c80e <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 800c828:	f7ff ffb0 	bl	800c78c <_ZNK8touchgfx9ConstFont4findEt>
 800c82c:	4605      	mov	r5, r0
 800c82e:	b950      	cbnz	r0, 800c846 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x42>
 800c830:	6823      	ldr	r3, [r4, #0]
 800c832:	4620      	mov	r0, r4
 800c834:	691b      	ldr	r3, [r3, #16]
 800c836:	4798      	blx	r3
 800c838:	4601      	mov	r1, r0
 800c83a:	4620      	mov	r0, r4
 800c83c:	f7ff ffa6 	bl	800c78c <_ZNK8touchgfx9ConstFont4findEt>
 800c840:	4605      	mov	r5, r0
 800c842:	2800      	cmp	r0, #0
 800c844:	d0e3      	beq.n	800c80e <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 800c846:	6823      	ldr	r3, [r4, #0]
 800c848:	4629      	mov	r1, r5
 800c84a:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800c84c:	4620      	mov	r0, r4
 800c84e:	4798      	blx	r3
 800c850:	6038      	str	r0, [r7, #0]
 800c852:	6823      	ldr	r3, [r4, #0]
 800c854:	4620      	mov	r0, r4
 800c856:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800c858:	4798      	blx	r3
 800c85a:	7030      	strb	r0, [r6, #0]
 800c85c:	e7d8      	b.n	800c810 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xc>

0800c85e <_ZN8touchgfx10ClickEvent12getEventTypeEv>:
 800c85e:	2000      	movs	r0, #0
 800c860:	4770      	bx	lr

0800c862 <_ZN8touchgfx9DragEvent12getEventTypeEv>:
 800c862:	2001      	movs	r0, #1
 800c864:	4770      	bx	lr

0800c866 <_ZN8touchgfx12GestureEvent12getEventTypeEv>:
 800c866:	2002      	movs	r0, #2
 800c868:	4770      	bx	lr

0800c86a <_ZN8touchgfx6ScreenD1Ev>:
 800c86a:	4770      	bx	lr

0800c86c <_ZN8touchgfx12GestureEventD1Ev>:
 800c86c:	4770      	bx	lr

0800c86e <_ZN8touchgfx9DragEventD1Ev>:
 800c86e:	4770      	bx	lr

0800c870 <_ZN8touchgfx10ClickEventD1Ev>:
 800c870:	4770      	bx	lr

0800c872 <_ZN8touchgfx10ClickEventD0Ev>:
 800c872:	b510      	push	{r4, lr}
 800c874:	210c      	movs	r1, #12
 800c876:	4604      	mov	r4, r0
 800c878:	f00c fe54 	bl	8019524 <_ZdlPvj>
 800c87c:	4620      	mov	r0, r4
 800c87e:	bd10      	pop	{r4, pc}

0800c880 <_ZN8touchgfx9DragEventD0Ev>:
 800c880:	b510      	push	{r4, lr}
 800c882:	2110      	movs	r1, #16
 800c884:	4604      	mov	r4, r0
 800c886:	f00c fe4d 	bl	8019524 <_ZdlPvj>
 800c88a:	4620      	mov	r0, r4
 800c88c:	bd10      	pop	{r4, pc}

0800c88e <_ZN8touchgfx12GestureEventD0Ev>:
 800c88e:	b510      	push	{r4, lr}
 800c890:	210c      	movs	r1, #12
 800c892:	4604      	mov	r4, r0
 800c894:	f00c fe46 	bl	8019524 <_ZdlPvj>
 800c898:	4620      	mov	r0, r4
 800c89a:	bd10      	pop	{r4, pc}

0800c89c <_ZN8touchgfx6ScreenD0Ev>:
 800c89c:	b510      	push	{r4, lr}
 800c89e:	213c      	movs	r1, #60	; 0x3c
 800c8a0:	4604      	mov	r4, r0
 800c8a2:	f00c fe3f 	bl	8019524 <_ZdlPvj>
 800c8a6:	4620      	mov	r0, r4
 800c8a8:	bd10      	pop	{r4, pc}
	...

0800c8ac <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE>:
 800c8ac:	b530      	push	{r4, r5, lr}
 800c8ae:	460d      	mov	r5, r1
 800c8b0:	6b01      	ldr	r1, [r0, #48]	; 0x30
 800c8b2:	b087      	sub	sp, #28
 800c8b4:	4604      	mov	r4, r0
 800c8b6:	b301      	cbz	r1, 800c8fa <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x4e>
 800c8b8:	a801      	add	r0, sp, #4
 800c8ba:	f7ff ff33 	bl	800c724 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800c8be:	892a      	ldrh	r2, [r5, #8]
 800c8c0:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800c8c4:	7928      	ldrb	r0, [r5, #4]
 800c8c6:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 800c8ca:	f88d 0010 	strb.w	r0, [sp, #16]
 800c8ce:	1ad2      	subs	r2, r2, r3
 800c8d0:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 800c8d2:	6b20      	ldr	r0, [r4, #48]	; 0x30
 800c8d4:	f8ad 1012 	strh.w	r1, [sp, #18]
 800c8d8:	441a      	add	r2, r3
 800c8da:	896b      	ldrh	r3, [r5, #10]
 800c8dc:	f8bd 5006 	ldrh.w	r5, [sp, #6]
 800c8e0:	f8ad 2014 	strh.w	r2, [sp, #20]
 800c8e4:	1b5b      	subs	r3, r3, r5
 800c8e6:	8ee5      	ldrh	r5, [r4, #54]	; 0x36
 800c8e8:	442b      	add	r3, r5
 800c8ea:	4d05      	ldr	r5, [pc, #20]	; (800c900 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x54>)
 800c8ec:	9503      	str	r5, [sp, #12]
 800c8ee:	f8ad 3016 	strh.w	r3, [sp, #22]
 800c8f2:	6803      	ldr	r3, [r0, #0]
 800c8f4:	a903      	add	r1, sp, #12
 800c8f6:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800c8f8:	4798      	blx	r3
 800c8fa:	b007      	add	sp, #28
 800c8fc:	bd30      	pop	{r4, r5, pc}
 800c8fe:	bf00      	nop
 800c900:	0801c7d0 	.word	0x0801c7d0

0800c904 <_ZNK8touchgfx4Rect9intersectEss>:
 800c904:	b510      	push	{r4, lr}
 800c906:	f9b0 3000 	ldrsh.w	r3, [r0]
 800c90a:	428b      	cmp	r3, r1
 800c90c:	dc10      	bgt.n	800c930 <_ZNK8touchgfx4Rect9intersectEss+0x2c>
 800c90e:	8884      	ldrh	r4, [r0, #4]
 800c910:	4423      	add	r3, r4
 800c912:	b21b      	sxth	r3, r3
 800c914:	4299      	cmp	r1, r3
 800c916:	da0b      	bge.n	800c930 <_ZNK8touchgfx4Rect9intersectEss+0x2c>
 800c918:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 800c91c:	4293      	cmp	r3, r2
 800c91e:	dc07      	bgt.n	800c930 <_ZNK8touchgfx4Rect9intersectEss+0x2c>
 800c920:	88c0      	ldrh	r0, [r0, #6]
 800c922:	4418      	add	r0, r3
 800c924:	b200      	sxth	r0, r0
 800c926:	4282      	cmp	r2, r0
 800c928:	bfac      	ite	ge
 800c92a:	2000      	movge	r0, #0
 800c92c:	2001      	movlt	r0, #1
 800c92e:	bd10      	pop	{r4, pc}
 800c930:	2000      	movs	r0, #0
 800c932:	e7fc      	b.n	800c92e <_ZNK8touchgfx4Rect9intersectEss+0x2a>

0800c934 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE>:
 800c934:	b5f0      	push	{r4, r5, r6, r7, lr}
 800c936:	460c      	mov	r4, r1
 800c938:	6b01      	ldr	r1, [r0, #48]	; 0x30
 800c93a:	b089      	sub	sp, #36	; 0x24
 800c93c:	4605      	mov	r5, r0
 800c93e:	2900      	cmp	r1, #0
 800c940:	d054      	beq.n	800c9ec <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xb8>
 800c942:	4668      	mov	r0, sp
 800c944:	f7ff feee 	bl	800c724 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800c948:	8eae      	ldrh	r6, [r5, #52]	; 0x34
 800c94a:	8eef      	ldrh	r7, [r5, #54]	; 0x36
 800c94c:	8922      	ldrh	r2, [r4, #8]
 800c94e:	88e1      	ldrh	r1, [r4, #6]
 800c950:	443a      	add	r2, r7
 800c952:	4431      	add	r1, r6
 800c954:	b212      	sxth	r2, r2
 800c956:	b209      	sxth	r1, r1
 800c958:	4668      	mov	r0, sp
 800c95a:	f7ff ffd3 	bl	800c904 <_ZNK8touchgfx4Rect9intersectEss>
 800c95e:	b1d0      	cbz	r0, 800c996 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x62>
 800c960:	89a2      	ldrh	r2, [r4, #12]
 800c962:	8961      	ldrh	r1, [r4, #10]
 800c964:	443a      	add	r2, r7
 800c966:	4431      	add	r1, r6
 800c968:	b212      	sxth	r2, r2
 800c96a:	b209      	sxth	r1, r1
 800c96c:	4668      	mov	r0, sp
 800c96e:	f7ff ffc9 	bl	800c904 <_ZNK8touchgfx4Rect9intersectEss>
 800c972:	4603      	mov	r3, r0
 800c974:	b978      	cbnz	r0, 800c996 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x62>
 800c976:	4a1e      	ldr	r2, [pc, #120]	; (800c9f0 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xbc>)
 800c978:	9204      	str	r2, [sp, #16]
 800c97a:	6b28      	ldr	r0, [r5, #48]	; 0x30
 800c97c:	f8ad 3016 	strh.w	r3, [sp, #22]
 800c980:	2202      	movs	r2, #2
 800c982:	f88d 2014 	strb.w	r2, [sp, #20]
 800c986:	f8ad 3018 	strh.w	r3, [sp, #24]
 800c98a:	f8ad 301a 	strh.w	r3, [sp, #26]
 800c98e:	6803      	ldr	r3, [r0, #0]
 800c990:	a904      	add	r1, sp, #16
 800c992:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800c994:	4798      	blx	r3
 800c996:	6b29      	ldr	r1, [r5, #48]	; 0x30
 800c998:	a802      	add	r0, sp, #8
 800c99a:	f7ff fec3 	bl	800c724 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800c99e:	f8bd 2008 	ldrh.w	r2, [sp, #8]
 800c9a2:	88e0      	ldrh	r0, [r4, #6]
 800c9a4:	8961      	ldrh	r1, [r4, #10]
 800c9a6:	f8b5 c034 	ldrh.w	ip, [r5, #52]	; 0x34
 800c9aa:	f8bd e00a 	ldrh.w	lr, [sp, #10]
 800c9ae:	8923      	ldrh	r3, [r4, #8]
 800c9b0:	8eee      	ldrh	r6, [r5, #54]	; 0x36
 800c9b2:	7927      	ldrb	r7, [r4, #4]
 800c9b4:	f88d 7014 	strb.w	r7, [sp, #20]
 800c9b8:	1a80      	subs	r0, r0, r2
 800c9ba:	1a89      	subs	r1, r1, r2
 800c9bc:	89a2      	ldrh	r2, [r4, #12]
 800c9be:	4c0d      	ldr	r4, [pc, #52]	; (800c9f4 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xc0>)
 800c9c0:	9404      	str	r4, [sp, #16]
 800c9c2:	4460      	add	r0, ip
 800c9c4:	eba3 030e 	sub.w	r3, r3, lr
 800c9c8:	eba2 020e 	sub.w	r2, r2, lr
 800c9cc:	f8ad 0016 	strh.w	r0, [sp, #22]
 800c9d0:	4433      	add	r3, r6
 800c9d2:	4461      	add	r1, ip
 800c9d4:	4432      	add	r2, r6
 800c9d6:	6b28      	ldr	r0, [r5, #48]	; 0x30
 800c9d8:	f8ad 101a 	strh.w	r1, [sp, #26]
 800c9dc:	f8ad 3018 	strh.w	r3, [sp, #24]
 800c9e0:	f8ad 201c 	strh.w	r2, [sp, #28]
 800c9e4:	6803      	ldr	r3, [r0, #0]
 800c9e6:	a904      	add	r1, sp, #16
 800c9e8:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800c9ea:	4798      	blx	r3
 800c9ec:	b009      	add	sp, #36	; 0x24
 800c9ee:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800c9f0:	0801c7a8 	.word	0x0801c7a8
 800c9f4:	0801c7bc 	.word	0x0801c7bc

0800c9f8 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE>:
 800c9f8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c9fc:	f8d0 9030 	ldr.w	r9, [r0, #48]	; 0x30
 800ca00:	790b      	ldrb	r3, [r1, #4]
 800ca02:	b0a1      	sub	sp, #132	; 0x84
 800ca04:	4604      	mov	r4, r0
 800ca06:	460d      	mov	r5, r1
 800ca08:	f1b9 0f00 	cmp.w	r9, #0
 800ca0c:	d00f      	beq.n	800ca2e <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x36>
 800ca0e:	2b00      	cmp	r3, #0
 800ca10:	f040 80a0 	bne.w	800cb54 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x15c>
 800ca14:	b021      	add	sp, #132	; 0x84
 800ca16:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800ca1a:	f104 0330 	add.w	r3, r4, #48	; 0x30
 800ca1e:	f9b5 2008 	ldrsh.w	r2, [r5, #8]
 800ca22:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 800ca26:	1d20      	adds	r0, r4, #4
 800ca28:	f7fc fa1a 	bl	8008e60 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 800ca2c:	e092      	b.n	800cb54 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x15c>
 800ca2e:	2b00      	cmp	r3, #0
 800ca30:	d1f0      	bne.n	800ca14 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x1c>
 800ca32:	4b5e      	ldr	r3, [pc, #376]	; (800cbac <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x1b4>)
 800ca34:	681b      	ldr	r3, [r3, #0]
 800ca36:	f893 a049 	ldrb.w	sl, [r3, #73]	; 0x49
 800ca3a:	f8c4 9034 	str.w	r9, [r4, #52]	; 0x34
 800ca3e:	f1ba 0f03 	cmp.w	sl, #3
 800ca42:	ddea      	ble.n	800ca1a <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x22>
 800ca44:	f1ba 0f0c 	cmp.w	sl, #12
 800ca48:	f04f 0303 	mov.w	r3, #3
 800ca4c:	bfdc      	itt	le
 800ca4e:	f10a 32ff 	addle.w	r2, sl, #4294967295
 800ca52:	fb92 f3f3 	sdivle	r3, r2, r3
 800ca56:	9301      	str	r3, [sp, #4]
 800ca58:	4b55      	ldr	r3, [pc, #340]	; (800cbb0 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x1b8>)
 800ca5a:	4956      	ldr	r1, [pc, #344]	; (800cbb4 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x1bc>)
 800ca5c:	f9b3 2000 	ldrsh.w	r2, [r3]
 800ca60:	4b55      	ldr	r3, [pc, #340]	; (800cbb8 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x1c0>)
 800ca62:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
 800ca66:	f9b3 3000 	ldrsh.w	r3, [r3]
 800ca6a:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 800ca6e:	ab0e      	add	r3, sp, #56	; 0x38
 800ca70:	2248      	movs	r2, #72	; 0x48
 800ca72:	2600      	movs	r6, #0
 800ca74:	4618      	mov	r0, r3
 800ca76:	960a      	str	r6, [sp, #40]	; 0x28
 800ca78:	f00c fdfe 	bl	8019678 <memcpy>
 800ca7c:	f04f 32ff 	mov.w	r2, #4294967295
 800ca80:	e9cd 2006 	strd	r2, r0, [sp, #24]
 800ca84:	f8cd a008 	str.w	sl, [sp, #8]
 800ca88:	e9dd 2301 	ldrd	r2, r3, [sp, #4]
 800ca8c:	fb93 f3f2 	sdiv	r3, r3, r2
 800ca90:	b29b      	uxth	r3, r3
 800ca92:	46b3      	mov	fp, r6
 800ca94:	9303      	str	r3, [sp, #12]
 800ca96:	2300      	movs	r3, #0
 800ca98:	9309      	str	r3, [sp, #36]	; 0x24
 800ca9a:	9b07      	ldr	r3, [sp, #28]
 800ca9c:	9a03      	ldr	r2, [sp, #12]
 800ca9e:	f853 303b 	ldr.w	r3, [r3, fp, lsl #3]
 800caa2:	88ef      	ldrh	r7, [r5, #6]
 800caa4:	f8b5 8008 	ldrh.w	r8, [r5, #8]
 800caa8:	fb13 f302 	smulbb	r3, r3, r2
 800caac:	b29b      	uxth	r3, r3
 800caae:	9304      	str	r3, [sp, #16]
 800cab0:	9b07      	ldr	r3, [sp, #28]
 800cab2:	eb03 03cb 	add.w	r3, r3, fp, lsl #3
 800cab6:	a80a      	add	r0, sp, #40	; 0x28
 800cab8:	685b      	ldr	r3, [r3, #4]
 800caba:	fb13 f302 	smulbb	r3, r3, r2
 800cabe:	b29b      	uxth	r3, r3
 800cac0:	9305      	str	r3, [sp, #20]
 800cac2:	9b04      	ldr	r3, [sp, #16]
 800cac4:	441f      	add	r7, r3
 800cac6:	9b05      	ldr	r3, [sp, #20]
 800cac8:	4498      	add	r8, r3
 800caca:	b23f      	sxth	r7, r7
 800cacc:	fa0f f888 	sxth.w	r8, r8
 800cad0:	4642      	mov	r2, r8
 800cad2:	4639      	mov	r1, r7
 800cad4:	f7ff ff16 	bl	800c904 <_ZNK8touchgfx4Rect9intersectEss>
 800cad8:	b380      	cbz	r0, 800cb3c <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x144>
 800cada:	4639      	mov	r1, r7
 800cadc:	ab09      	add	r3, sp, #36	; 0x24
 800cade:	4642      	mov	r2, r8
 800cae0:	1d20      	adds	r0, r4, #4
 800cae2:	f7fc f9bd 	bl	8008e60 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 800cae6:	9909      	ldr	r1, [sp, #36]	; 0x24
 800cae8:	b341      	cbz	r1, 800cb3c <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x144>
 800caea:	4549      	cmp	r1, r9
 800caec:	d026      	beq.n	800cb3c <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x144>
 800caee:	a80c      	add	r0, sp, #48	; 0x30
 800caf0:	f7ff fe18 	bl	800c724 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800caf4:	f9bd 1030 	ldrsh.w	r1, [sp, #48]	; 0x30
 800caf8:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 800cafc:	f9bd 2034 	ldrsh.w	r2, [sp, #52]	; 0x34
 800cb00:	2002      	movs	r0, #2
 800cb02:	fb92 f2f0 	sdiv	r2, r2, r0
 800cb06:	440a      	add	r2, r1
 800cb08:	1a99      	subs	r1, r3, r2
 800cb0a:	f9bd 3036 	ldrsh.w	r3, [sp, #54]	; 0x36
 800cb0e:	fb93 f3f0 	sdiv	r3, r3, r0
 800cb12:	f9bd 0032 	ldrsh.w	r0, [sp, #50]	; 0x32
 800cb16:	f9b5 2008 	ldrsh.w	r2, [r5, #8]
 800cb1a:	4403      	add	r3, r0
 800cb1c:	1ad3      	subs	r3, r2, r3
 800cb1e:	435b      	muls	r3, r3
 800cb20:	9a06      	ldr	r2, [sp, #24]
 800cb22:	fb01 3301 	mla	r3, r1, r1, r3
 800cb26:	4293      	cmp	r3, r2
 800cb28:	d208      	bcs.n	800cb3c <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x144>
 800cb2a:	9a04      	ldr	r2, [sp, #16]
 800cb2c:	f8dd 9024 	ldr.w	r9, [sp, #36]	; 0x24
 800cb30:	86a2      	strh	r2, [r4, #52]	; 0x34
 800cb32:	9a05      	ldr	r2, [sp, #20]
 800cb34:	f8c4 9030 	str.w	r9, [r4, #48]	; 0x30
 800cb38:	86e2      	strh	r2, [r4, #54]	; 0x36
 800cb3a:	9306      	str	r3, [sp, #24]
 800cb3c:	f10b 0b02 	add.w	fp, fp, #2
 800cb40:	f1bb 0f08 	cmp.w	fp, #8
 800cb44:	dda7      	ble.n	800ca96 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 800cb46:	9b02      	ldr	r3, [sp, #8]
 800cb48:	4453      	add	r3, sl
 800cb4a:	9302      	str	r3, [sp, #8]
 800cb4c:	9b01      	ldr	r3, [sp, #4]
 800cb4e:	3601      	adds	r6, #1
 800cb50:	42b3      	cmp	r3, r6
 800cb52:	d199      	bne.n	800ca88 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x90>
 800cb54:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800cb56:	2900      	cmp	r1, #0
 800cb58:	f43f af5c 	beq.w	800ca14 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x1c>
 800cb5c:	a80c      	add	r0, sp, #48	; 0x30
 800cb5e:	f7ff fde1 	bl	800c724 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800cb62:	f8bd 3030 	ldrh.w	r3, [sp, #48]	; 0x30
 800cb66:	88ea      	ldrh	r2, [r5, #6]
 800cb68:	f8bd 0032 	ldrh.w	r0, [sp, #50]	; 0x32
 800cb6c:	7929      	ldrb	r1, [r5, #4]
 800cb6e:	f88d 103c 	strb.w	r1, [sp, #60]	; 0x3c
 800cb72:	1ad2      	subs	r2, r2, r3
 800cb74:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 800cb76:	441a      	add	r2, r3
 800cb78:	892b      	ldrh	r3, [r5, #8]
 800cb7a:	f8ad 203e 	strh.w	r2, [sp, #62]	; 0x3e
 800cb7e:	1a1b      	subs	r3, r3, r0
 800cb80:	8ee0      	ldrh	r0, [r4, #54]	; 0x36
 800cb82:	4403      	add	r3, r0
 800cb84:	480d      	ldr	r0, [pc, #52]	; (800cbbc <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x1c4>)
 800cb86:	900e      	str	r0, [sp, #56]	; 0x38
 800cb88:	2600      	movs	r6, #0
 800cb8a:	6b20      	ldr	r0, [r4, #48]	; 0x30
 800cb8c:	f8ad 3040 	strh.w	r3, [sp, #64]	; 0x40
 800cb90:	f8ad 6042 	strh.w	r6, [sp, #66]	; 0x42
 800cb94:	6803      	ldr	r3, [r0, #0]
 800cb96:	a90e      	add	r1, sp, #56	; 0x38
 800cb98:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800cb9a:	4798      	blx	r3
 800cb9c:	792b      	ldrb	r3, [r5, #4]
 800cb9e:	2b00      	cmp	r3, #0
 800cba0:	f43f af38 	beq.w	800ca14 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x1c>
 800cba4:	e9c4 660c 	strd	r6, r6, [r4, #48]	; 0x30
 800cba8:	e734      	b.n	800ca14 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x1c>
 800cbaa:	bf00      	nop
 800cbac:	20012338 	.word	0x20012338
 800cbb0:	2001232c 	.word	0x2001232c
 800cbb4:	0801a5a0 	.word	0x0801a5a0
 800cbb8:	2001232e 	.word	0x2001232e
 800cbbc:	0801c7a8 	.word	0x0801c7a8

0800cbc0 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>:
 800cbc0:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800cbc2:	4604      	mov	r4, r0
 800cbc4:	f934 2f0c 	ldrsh.w	r2, [r4, #12]!
 800cbc8:	3201      	adds	r2, #1
 800cbca:	d112      	bne.n	800cbf2 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv+0x32>
 800cbcc:	6803      	ldr	r3, [r0, #0]
 800cbce:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 800cbd2:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 800cbd6:	f8ad 1004 	strh.w	r1, [sp, #4]
 800cbda:	2500      	movs	r5, #0
 800cbdc:	9500      	str	r5, [sp, #0]
 800cbde:	466d      	mov	r5, sp
 800cbe0:	4629      	mov	r1, r5
 800cbe2:	f8ad 2006 	strh.w	r2, [sp, #6]
 800cbe6:	6a1b      	ldr	r3, [r3, #32]
 800cbe8:	4798      	blx	r3
 800cbea:	e895 0003 	ldmia.w	r5, {r0, r1}
 800cbee:	e884 0003 	stmia.w	r4, {r0, r1}
 800cbf2:	4620      	mov	r0, r4
 800cbf4:	b003      	add	sp, #12
 800cbf6:	bd30      	pop	{r4, r5, pc}

0800cbf8 <_ZN8touchgfx8Drawable13getCachedAbsXEv>:
 800cbf8:	b513      	push	{r0, r1, r4, lr}
 800cbfa:	f9b0 3020 	ldrsh.w	r3, [r0, #32]
 800cbfe:	3301      	adds	r3, #1
 800cc00:	4604      	mov	r4, r0
 800cc02:	d109      	bne.n	800cc18 <_ZN8touchgfx8Drawable13getCachedAbsXEv+0x20>
 800cc04:	4601      	mov	r1, r0
 800cc06:	4668      	mov	r0, sp
 800cc08:	f7ff fd8c 	bl	800c724 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800cc0c:	f8bd 3000 	ldrh.w	r3, [sp]
 800cc10:	8423      	strh	r3, [r4, #32]
 800cc12:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800cc16:	8463      	strh	r3, [r4, #34]	; 0x22
 800cc18:	f9b4 0020 	ldrsh.w	r0, [r4, #32]
 800cc1c:	b002      	add	sp, #8
 800cc1e:	bd10      	pop	{r4, pc}

0800cc20 <_ZN8touchgfx8Drawable13getCachedAbsYEv>:
 800cc20:	b513      	push	{r0, r1, r4, lr}
 800cc22:	f9b0 3022 	ldrsh.w	r3, [r0, #34]	; 0x22
 800cc26:	3301      	adds	r3, #1
 800cc28:	4604      	mov	r4, r0
 800cc2a:	d109      	bne.n	800cc40 <_ZN8touchgfx8Drawable13getCachedAbsYEv+0x20>
 800cc2c:	4601      	mov	r1, r0
 800cc2e:	4668      	mov	r0, sp
 800cc30:	f7ff fd78 	bl	800c724 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800cc34:	f8bd 3000 	ldrh.w	r3, [sp]
 800cc38:	8423      	strh	r3, [r4, #32]
 800cc3a:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800cc3e:	8463      	strh	r3, [r4, #34]	; 0x22
 800cc40:	f9b4 0022 	ldrsh.w	r0, [r4, #34]	; 0x22
 800cc44:	b002      	add	sp, #8
 800cc46:	bd10      	pop	{r4, pc}

0800cc48 <_ZN8touchgfx6ScreenC1Ev>:
 800cc48:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800cc4a:	4605      	mov	r5, r0
 800cc4c:	4b17      	ldr	r3, [pc, #92]	; (800ccac <_ZN8touchgfx6ScreenC1Ev+0x64>)
 800cc4e:	f845 3b04 	str.w	r3, [r5], #4
 800cc52:	2301      	movs	r3, #1
 800cc54:	f880 3029 	strb.w	r3, [r0, #41]	; 0x29
 800cc58:	f880 3038 	strb.w	r3, [r0, #56]	; 0x38
 800cc5c:	4b14      	ldr	r3, [pc, #80]	; (800ccb0 <_ZN8touchgfx6ScreenC1Ev+0x68>)
 800cc5e:	4915      	ldr	r1, [pc, #84]	; (800ccb4 <_ZN8touchgfx6ScreenC1Ev+0x6c>)
 800cc60:	f9b3 7000 	ldrsh.w	r7, [r3]
 800cc64:	4b14      	ldr	r3, [pc, #80]	; (800ccb8 <_ZN8touchgfx6ScreenC1Ev+0x70>)
 800cc66:	6041      	str	r1, [r0, #4]
 800cc68:	2200      	movs	r2, #0
 800cc6a:	8102      	strh	r2, [r0, #8]
 800cc6c:	8142      	strh	r2, [r0, #10]
 800cc6e:	8182      	strh	r2, [r0, #12]
 800cc70:	81c2      	strh	r2, [r0, #14]
 800cc72:	8202      	strh	r2, [r0, #16]
 800cc74:	8242      	strh	r2, [r0, #18]
 800cc76:	8282      	strh	r2, [r0, #20]
 800cc78:	82c2      	strh	r2, [r0, #22]
 800cc7a:	e9c0 2206 	strd	r2, r2, [r0, #24]
 800cc7e:	6202      	str	r2, [r0, #32]
 800cc80:	f880 2028 	strb.w	r2, [r0, #40]	; 0x28
 800cc84:	e9c0 220b 	strd	r2, r2, [r0, #44]	; 0x2c
 800cc88:	6342      	str	r2, [r0, #52]	; 0x34
 800cc8a:	f9b3 6000 	ldrsh.w	r6, [r3]
 800cc8e:	4611      	mov	r1, r2
 800cc90:	4604      	mov	r4, r0
 800cc92:	4628      	mov	r0, r5
 800cc94:	f7f6 fa28 	bl	80030e8 <_ZN8touchgfx8Drawable5setXYEss>
 800cc98:	4639      	mov	r1, r7
 800cc9a:	4628      	mov	r0, r5
 800cc9c:	f7f6 fa31 	bl	8003102 <_ZN8touchgfx8Drawable8setWidthEs>
 800cca0:	4628      	mov	r0, r5
 800cca2:	4631      	mov	r1, r6
 800cca4:	f7f6 fa2f 	bl	8003106 <_ZN8touchgfx8Drawable9setHeightEs>
 800cca8:	4620      	mov	r0, r4
 800ccaa:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800ccac:	0801c7e4 	.word	0x0801c7e4
 800ccb0:	2001232c 	.word	0x2001232c
 800ccb4:	0801b694 	.word	0x0801b694
 800ccb8:	2001232e 	.word	0x2001232e

0800ccbc <_ZN8touchgfx6Screen4drawEv>:
 800ccbc:	b507      	push	{r0, r1, r2, lr}
 800ccbe:	4b09      	ldr	r3, [pc, #36]	; (800cce4 <_ZN8touchgfx6Screen4drawEv+0x28>)
 800ccc0:	f9b3 2000 	ldrsh.w	r2, [r3]
 800ccc4:	4b08      	ldr	r3, [pc, #32]	; (800cce8 <_ZN8touchgfx6Screen4drawEv+0x2c>)
 800ccc6:	f8ad 2004 	strh.w	r2, [sp, #4]
 800ccca:	f9b3 3000 	ldrsh.w	r3, [r3]
 800ccce:	f8ad 3006 	strh.w	r3, [sp, #6]
 800ccd2:	6803      	ldr	r3, [r0, #0]
 800ccd4:	2100      	movs	r1, #0
 800ccd6:	9100      	str	r1, [sp, #0]
 800ccd8:	689b      	ldr	r3, [r3, #8]
 800ccda:	4669      	mov	r1, sp
 800ccdc:	4798      	blx	r3
 800ccde:	b003      	add	sp, #12
 800cce0:	f85d fb04 	ldr.w	pc, [sp], #4
 800cce4:	2001232c 	.word	0x2001232c
 800cce8:	2001232e 	.word	0x2001232e

0800ccec <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>:
 800ccec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ccf0:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
 800ccf4:	2b00      	cmp	r3, #0
 800ccf6:	b089      	sub	sp, #36	; 0x24
 800ccf8:	4680      	mov	r8, r0
 800ccfa:	460c      	mov	r4, r1
 800ccfc:	4615      	mov	r5, r2
 800ccfe:	dd0e      	ble.n	800cd1e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 800cd00:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
 800cd04:	2b00      	cmp	r3, #0
 800cd06:	dd0a      	ble.n	800cd1e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 800cd08:	4628      	mov	r0, r5
 800cd0a:	f7ff ff59 	bl	800cbc0 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 800cd0e:	4621      	mov	r1, r4
 800cd10:	f7fe ff06 	bl	800bb20 <_ZNK8touchgfx4Rect9intersectERKS0_>
 800cd14:	69eb      	ldr	r3, [r5, #28]
 800cd16:	b928      	cbnz	r0, 800cd24 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x38>
 800cd18:	461d      	mov	r5, r3
 800cd1a:	2b00      	cmp	r3, #0
 800cd1c:	d1f4      	bne.n	800cd08 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1c>
 800cd1e:	b009      	add	sp, #36	; 0x24
 800cd20:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800cd24:	ae04      	add	r6, sp, #16
 800cd26:	2b00      	cmp	r3, #0
 800cd28:	d051      	beq.n	800cdce <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xe2>
 800cd2a:	682b      	ldr	r3, [r5, #0]
 800cd2c:	4629      	mov	r1, r5
 800cd2e:	68db      	ldr	r3, [r3, #12]
 800cd30:	a802      	add	r0, sp, #8
 800cd32:	4798      	blx	r3
 800cd34:	4628      	mov	r0, r5
 800cd36:	f7ff ff5f 	bl	800cbf8 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 800cd3a:	f8bd 7008 	ldrh.w	r7, [sp, #8]
 800cd3e:	4407      	add	r7, r0
 800cd40:	4628      	mov	r0, r5
 800cd42:	f7ff ff6d 	bl	800cc20 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 800cd46:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 800cd4a:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 800cd4e:	f8ad 2014 	strh.w	r2, [sp, #20]
 800cd52:	4418      	add	r0, r3
 800cd54:	4621      	mov	r1, r4
 800cd56:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 800cd5a:	f8ad 0012 	strh.w	r0, [sp, #18]
 800cd5e:	b23f      	sxth	r7, r7
 800cd60:	4630      	mov	r0, r6
 800cd62:	f8ad 3016 	strh.w	r3, [sp, #22]
 800cd66:	f8ad 7010 	strh.w	r7, [sp, #16]
 800cd6a:	f7fc f933 	bl	8008fd4 <_ZN8touchgfx4RectaNERKS0_>
 800cd6e:	4628      	mov	r0, r5
 800cd70:	f7ff ff26 	bl	800cbc0 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 800cd74:	4602      	mov	r2, r0
 800cd76:	e896 0003 	ldmia.w	r6, {r0, r1}
 800cd7a:	ab06      	add	r3, sp, #24
 800cd7c:	e883 0003 	stmia.w	r3, {r0, r1}
 800cd80:	4611      	mov	r1, r2
 800cd82:	4618      	mov	r0, r3
 800cd84:	f7fc f926 	bl	8008fd4 <_ZN8touchgfx4RectaNERKS0_>
 800cd88:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 800cd8c:	f9b4 1000 	ldrsh.w	r1, [r4]
 800cd90:	f9bd a01a 	ldrsh.w	sl, [sp, #26]
 800cd94:	f9bd b01c 	ldrsh.w	fp, [sp, #28]
 800cd98:	f9bd 901e 	ldrsh.w	r9, [sp, #30]
 800cd9c:	4299      	cmp	r1, r3
 800cd9e:	d10b      	bne.n	800cdb8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xcc>
 800cda0:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 800cda4:	4552      	cmp	r2, sl
 800cda6:	d107      	bne.n	800cdb8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xcc>
 800cda8:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 800cdac:	455a      	cmp	r2, fp
 800cdae:	d103      	bne.n	800cdb8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xcc>
 800cdb0:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 800cdb4:	454a      	cmp	r2, r9
 800cdb6:	d00a      	beq.n	800cdce <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xe2>
 800cdb8:	f1bb 0f00 	cmp.w	fp, #0
 800cdbc:	d002      	beq.n	800cdc4 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xd8>
 800cdbe:	f1b9 0f00 	cmp.w	r9, #0
 800cdc2:	d12e      	bne.n	800ce22 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x136>
 800cdc4:	69ea      	ldr	r2, [r5, #28]
 800cdc6:	4621      	mov	r1, r4
 800cdc8:	4640      	mov	r0, r8
 800cdca:	f7ff ff8f 	bl	800ccec <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 800cdce:	4628      	mov	r0, r5
 800cdd0:	f7ff fef6 	bl	800cbc0 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 800cdd4:	6861      	ldr	r1, [r4, #4]
 800cdd6:	4602      	mov	r2, r0
 800cdd8:	6820      	ldr	r0, [r4, #0]
 800cdda:	4633      	mov	r3, r6
 800cddc:	c303      	stmia	r3!, {r0, r1}
 800cdde:	4611      	mov	r1, r2
 800cde0:	4630      	mov	r0, r6
 800cde2:	f7fc f8f7 	bl	8008fd4 <_ZN8touchgfx4RectaNERKS0_>
 800cde6:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 800cdea:	2b00      	cmp	r3, #0
 800cdec:	dd97      	ble.n	800cd1e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 800cdee:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 800cdf2:	2b00      	cmp	r3, #0
 800cdf4:	dd93      	ble.n	800cd1e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 800cdf6:	4628      	mov	r0, r5
 800cdf8:	f7ff fefe 	bl	800cbf8 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 800cdfc:	f8bd 3010 	ldrh.w	r3, [sp, #16]
 800ce00:	1a18      	subs	r0, r3, r0
 800ce02:	f8ad 0010 	strh.w	r0, [sp, #16]
 800ce06:	4628      	mov	r0, r5
 800ce08:	f7ff ff0a 	bl	800cc20 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 800ce0c:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800ce10:	1a18      	subs	r0, r3, r0
 800ce12:	f8ad 0012 	strh.w	r0, [sp, #18]
 800ce16:	682b      	ldr	r3, [r5, #0]
 800ce18:	4631      	mov	r1, r6
 800ce1a:	689b      	ldr	r3, [r3, #8]
 800ce1c:	4628      	mov	r0, r5
 800ce1e:	4798      	blx	r3
 800ce20:	e77d      	b.n	800cd1e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 800ce22:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 800ce26:	fa1f f08a 	uxth.w	r0, sl
 800ce2a:	4552      	cmp	r2, sl
 800ce2c:	9000      	str	r0, [sp, #0]
 800ce2e:	da12      	bge.n	800ce56 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x16a>
 800ce30:	9301      	str	r3, [sp, #4]
 800ce32:	9b00      	ldr	r3, [sp, #0]
 800ce34:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 800ce38:	f8ad 2012 	strh.w	r2, [sp, #18]
 800ce3c:	1a9a      	subs	r2, r3, r2
 800ce3e:	f8ad 1010 	strh.w	r1, [sp, #16]
 800ce42:	f8ad 0014 	strh.w	r0, [sp, #20]
 800ce46:	f8ad 2016 	strh.w	r2, [sp, #22]
 800ce4a:	69ea      	ldr	r2, [r5, #28]
 800ce4c:	4631      	mov	r1, r6
 800ce4e:	4640      	mov	r0, r8
 800ce50:	f7ff ff4c 	bl	800ccec <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 800ce54:	9b01      	ldr	r3, [sp, #4]
 800ce56:	f9b4 2000 	ldrsh.w	r2, [r4]
 800ce5a:	429a      	cmp	r2, r3
 800ce5c:	b29f      	uxth	r7, r3
 800ce5e:	da0d      	bge.n	800ce7c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x190>
 800ce60:	f8ad 2010 	strh.w	r2, [sp, #16]
 800ce64:	1aba      	subs	r2, r7, r2
 800ce66:	f8ad a012 	strh.w	sl, [sp, #18]
 800ce6a:	f8ad 2014 	strh.w	r2, [sp, #20]
 800ce6e:	f8ad 9016 	strh.w	r9, [sp, #22]
 800ce72:	69ea      	ldr	r2, [r5, #28]
 800ce74:	4631      	mov	r1, r6
 800ce76:	4640      	mov	r0, r8
 800ce78:	f7ff ff38 	bl	800ccec <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 800ce7c:	8822      	ldrh	r2, [r4, #0]
 800ce7e:	88a3      	ldrh	r3, [r4, #4]
 800ce80:	445f      	add	r7, fp
 800ce82:	4413      	add	r3, r2
 800ce84:	b29b      	uxth	r3, r3
 800ce86:	b2bf      	uxth	r7, r7
 800ce88:	b23a      	sxth	r2, r7
 800ce8a:	b219      	sxth	r1, r3
 800ce8c:	4291      	cmp	r1, r2
 800ce8e:	dd0d      	ble.n	800ceac <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1c0>
 800ce90:	1bdb      	subs	r3, r3, r7
 800ce92:	f8ad 2010 	strh.w	r2, [sp, #16]
 800ce96:	f8ad a012 	strh.w	sl, [sp, #18]
 800ce9a:	f8ad 3014 	strh.w	r3, [sp, #20]
 800ce9e:	f8ad 9016 	strh.w	r9, [sp, #22]
 800cea2:	69ea      	ldr	r2, [r5, #28]
 800cea4:	4631      	mov	r1, r6
 800cea6:	4640      	mov	r0, r8
 800cea8:	f7ff ff20 	bl	800ccec <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 800ceac:	88e2      	ldrh	r2, [r4, #6]
 800ceae:	8863      	ldrh	r3, [r4, #2]
 800ceb0:	4413      	add	r3, r2
 800ceb2:	9a00      	ldr	r2, [sp, #0]
 800ceb4:	444a      	add	r2, r9
 800ceb6:	b29b      	uxth	r3, r3
 800ceb8:	fa1f f982 	uxth.w	r9, r2
 800cebc:	fa0f f289 	sxth.w	r2, r9
 800cec0:	b219      	sxth	r1, r3
 800cec2:	428a      	cmp	r2, r1
 800cec4:	da83      	bge.n	800cdce <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xe2>
 800cec6:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 800ceca:	f9b4 0000 	ldrsh.w	r0, [r4]
 800cece:	f8ad 1014 	strh.w	r1, [sp, #20]
 800ced2:	eba3 0309 	sub.w	r3, r3, r9
 800ced6:	f8ad 0010 	strh.w	r0, [sp, #16]
 800ceda:	f8ad 2012 	strh.w	r2, [sp, #18]
 800cede:	f8ad 3016 	strh.w	r3, [sp, #22]
 800cee2:	69ea      	ldr	r2, [r5, #28]
 800cee4:	4631      	mov	r1, r6
 800cee6:	e76f      	b.n	800cdc8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xdc>

0800cee8 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>:
 800cee8:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800ceea:	aa02      	add	r2, sp, #8
 800ceec:	2300      	movs	r3, #0
 800ceee:	f842 3d04 	str.w	r3, [r2, #-4]!
 800cef2:	4604      	mov	r4, r0
 800cef4:	3004      	adds	r0, #4
 800cef6:	460d      	mov	r5, r1
 800cef8:	f7fc f944 	bl	8009184 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>
 800cefc:	9a01      	ldr	r2, [sp, #4]
 800cefe:	b11a      	cbz	r2, 800cf08 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE+0x20>
 800cf00:	4629      	mov	r1, r5
 800cf02:	4620      	mov	r0, r4
 800cf04:	f7ff fef2 	bl	800ccec <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 800cf08:	b003      	add	sp, #12
 800cf0a:	bd30      	pop	{r4, r5, pc}

0800cf0c <_ZN8touchgfx6Screen4drawERNS_4RectE>:
 800cf0c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800cf0e:	4602      	mov	r2, r0
 800cf10:	4604      	mov	r4, r0
 800cf12:	f852 0f08 	ldr.w	r0, [r2, #8]!
 800cf16:	460d      	mov	r5, r1
 800cf18:	6851      	ldr	r1, [r2, #4]
 800cf1a:	466b      	mov	r3, sp
 800cf1c:	c303      	stmia	r3!, {r0, r1}
 800cf1e:	4629      	mov	r1, r5
 800cf20:	4668      	mov	r0, sp
 800cf22:	f7fc f857 	bl	8008fd4 <_ZN8touchgfx4RectaNERKS0_>
 800cf26:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 800cf2a:	4669      	mov	r1, sp
 800cf2c:	b123      	cbz	r3, 800cf38 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2c>
 800cf2e:	4620      	mov	r0, r4
 800cf30:	f7ff ffda 	bl	800cee8 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>
 800cf34:	b003      	add	sp, #12
 800cf36:	bd30      	pop	{r4, r5, pc}
 800cf38:	1d20      	adds	r0, r4, #4
 800cf3a:	f7fc f8ea 	bl	8009112 <_ZNK8touchgfx9Container4drawERKNS_4RectE>
 800cf3e:	e7f9      	b.n	800cf34 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x28>

0800cf40 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>:
 800cf40:	680a      	ldr	r2, [r1, #0]
 800cf42:	460b      	mov	r3, r1
 800cf44:	6992      	ldr	r2, [r2, #24]
 800cf46:	1d01      	adds	r1, r0, #4
 800cf48:	4618      	mov	r0, r3
 800cf4a:	4710      	bx	r2

0800cf4c <_ZN8touchgfx12TextProviderC1Ev>:
 800cf4c:	b510      	push	{r4, lr}
 800cf4e:	2300      	movs	r3, #0
 800cf50:	2201      	movs	r2, #1
 800cf52:	4604      	mov	r4, r0
 800cf54:	e9c0 3300 	strd	r3, r3, [r0]
 800cf58:	60c3      	str	r3, [r0, #12]
 800cf5a:	7403      	strb	r3, [r0, #16]
 800cf5c:	82c3      	strh	r3, [r0, #22]
 800cf5e:	8303      	strh	r3, [r0, #24]
 800cf60:	85c3      	strh	r3, [r0, #46]	; 0x2e
 800cf62:	8603      	strh	r3, [r0, #48]	; 0x30
 800cf64:	86c3      	strh	r3, [r0, #54]	; 0x36
 800cf66:	8703      	strh	r3, [r0, #56]	; 0x38
 800cf68:	63c3      	str	r3, [r0, #60]	; 0x3c
 800cf6a:	f8a0 304e 	strh.w	r3, [r0, #78]	; 0x4e
 800cf6e:	f8a0 3050 	strh.w	r3, [r0, #80]	; 0x50
 800cf72:	f8a0 3052 	strh.w	r3, [r0, #82]	; 0x52
 800cf76:	f880 2054 	strb.w	r2, [r0, #84]	; 0x54
 800cf7a:	f880 3055 	strb.w	r3, [r0, #85]	; 0x55
 800cf7e:	f7f6 f82b 	bl	8002fd8 <_ZN8touchgfx12TextProvider18initializeInternalEv>
 800cf82:	4620      	mov	r0, r4
 800cf84:	bd10      	pop	{r4, pc}

0800cf86 <_ZN8touchgfx12TextProvider19getNextCharInternalEv>:
 800cf86:	b530      	push	{r4, r5, lr}
 800cf88:	2500      	movs	r5, #0
 800cf8a:	2401      	movs	r4, #1
 800cf8c:	6843      	ldr	r3, [r0, #4]
 800cf8e:	b913      	cbnz	r3, 800cf96 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x10>
 800cf90:	6803      	ldr	r3, [r0, #0]
 800cf92:	b1f3      	cbz	r3, 800cfd2 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x4c>
 800cf94:	6043      	str	r3, [r0, #4]
 800cf96:	7c03      	ldrb	r3, [r0, #16]
 800cf98:	b143      	cbz	r3, 800cfac <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x26>
 800cf9a:	68c3      	ldr	r3, [r0, #12]
 800cf9c:	b12b      	cbz	r3, 800cfaa <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 800cf9e:	881a      	ldrh	r2, [r3, #0]
 800cfa0:	b11a      	cbz	r2, 800cfaa <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 800cfa2:	1c9a      	adds	r2, r3, #2
 800cfa4:	60c2      	str	r2, [r0, #12]
 800cfa6:	8818      	ldrh	r0, [r3, #0]
 800cfa8:	bd30      	pop	{r4, r5, pc}
 800cfaa:	7405      	strb	r5, [r0, #16]
 800cfac:	6843      	ldr	r3, [r0, #4]
 800cfae:	8819      	ldrh	r1, [r3, #0]
 800cfb0:	b179      	cbz	r1, 800cfd2 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x4c>
 800cfb2:	1c9a      	adds	r2, r3, #2
 800cfb4:	2902      	cmp	r1, #2
 800cfb6:	6042      	str	r2, [r0, #4]
 800cfb8:	d1f5      	bne.n	800cfa6 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x20>
 800cfba:	6883      	ldr	r3, [r0, #8]
 800cfbc:	1d1a      	adds	r2, r3, #4
 800cfbe:	6082      	str	r2, [r0, #8]
 800cfc0:	681b      	ldr	r3, [r3, #0]
 800cfc2:	60c3      	str	r3, [r0, #12]
 800cfc4:	2b00      	cmp	r3, #0
 800cfc6:	d0e1      	beq.n	800cf8c <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 800cfc8:	881b      	ldrh	r3, [r3, #0]
 800cfca:	2b00      	cmp	r3, #0
 800cfcc:	d0de      	beq.n	800cf8c <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 800cfce:	7404      	strb	r4, [r0, #16]
 800cfd0:	e7dc      	b.n	800cf8c <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 800cfd2:	2000      	movs	r0, #0
 800cfd4:	e7e8      	b.n	800cfa8 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x22>

0800cfd6 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_>:
 800cfd6:	b410      	push	{r4}
 800cfd8:	63c3      	str	r3, [r0, #60]	; 0x3c
 800cfda:	2300      	movs	r3, #0
 800cfdc:	6082      	str	r2, [r0, #8]
 800cfde:	6001      	str	r1, [r0, #0]
 800cfe0:	6043      	str	r3, [r0, #4]
 800cfe2:	60c3      	str	r3, [r0, #12]
 800cfe4:	7403      	strb	r3, [r0, #16]
 800cfe6:	8603      	strh	r3, [r0, #48]	; 0x30
 800cfe8:	8303      	strh	r3, [r0, #24]
 800cfea:	8703      	strh	r3, [r0, #56]	; 0x38
 800cfec:	f85d 4b04 	ldr.w	r4, [sp], #4
 800cff0:	f7f5 bff2 	b.w	8002fd8 <_ZN8touchgfx12TextProvider18initializeInternalEv>

0800cff4 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>:
 800cff4:	b5f0      	push	{r4, r5, r6, r7, lr}
 800cff6:	4605      	mov	r5, r0
 800cff8:	4608      	mov	r0, r1
 800cffa:	b1e9      	cbz	r1, 800d038 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x44>
 800cffc:	f105 0440 	add.w	r4, r5, #64	; 0x40
 800d000:	460b      	mov	r3, r1
 800d002:	f101 0708 	add.w	r7, r1, #8
 800d006:	4622      	mov	r2, r4
 800d008:	6818      	ldr	r0, [r3, #0]
 800d00a:	6859      	ldr	r1, [r3, #4]
 800d00c:	4626      	mov	r6, r4
 800d00e:	c603      	stmia	r6!, {r0, r1}
 800d010:	3308      	adds	r3, #8
 800d012:	42bb      	cmp	r3, r7
 800d014:	4634      	mov	r4, r6
 800d016:	d1f7      	bne.n	800d008 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x14>
 800d018:	6818      	ldr	r0, [r3, #0]
 800d01a:	6030      	str	r0, [r6, #0]
 800d01c:	889b      	ldrh	r3, [r3, #4]
 800d01e:	80b3      	strh	r3, [r6, #4]
 800d020:	f895 304d 	ldrb.w	r3, [r5, #77]	; 0x4d
 800d024:	015b      	lsls	r3, r3, #5
 800d026:	f403 7180 	and.w	r1, r3, #256	; 0x100
 800d02a:	f895 3046 	ldrb.w	r3, [r5, #70]	; 0x46
 800d02e:	430b      	orrs	r3, r1
 800d030:	425b      	negs	r3, r3
 800d032:	f885 3049 	strb.w	r3, [r5, #73]	; 0x49
 800d036:	4610      	mov	r0, r2
 800d038:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800d03a <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>:
 800d03a:	b538      	push	{r3, r4, r5, lr}
 800d03c:	460c      	mov	r4, r1
 800d03e:	6811      	ldr	r1, [r2, #0]
 800d040:	4610      	mov	r0, r2
 800d042:	68cd      	ldr	r5, [r1, #12]
 800d044:	4619      	mov	r1, r3
 800d046:	47a8      	blx	r5
 800d048:	2800      	cmp	r0, #0
 800d04a:	bf08      	it	eq
 800d04c:	4620      	moveq	r0, r4
 800d04e:	bd38      	pop	{r3, r4, r5, pc}

0800d050 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>:
 800d050:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800d052:	4604      	mov	r4, r0
 800d054:	4615      	mov	r5, r2
 800d056:	4608      	mov	r0, r1
 800d058:	b93a      	cbnz	r2, 800d06a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1a>
 800d05a:	f8a4 204e 	strh.w	r2, [r4, #78]	; 0x4e
 800d05e:	f8a4 2050 	strh.w	r2, [r4, #80]	; 0x50
 800d062:	f8a4 2052 	strh.w	r2, [r4, #82]	; 0x52
 800d066:	4628      	mov	r0, r5
 800d068:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800d06a:	f892 c00d 	ldrb.w	ip, [r2, #13]
 800d06e:	8893      	ldrh	r3, [r2, #4]
 800d070:	ea4f 160c 	mov.w	r6, ip, lsl #4
 800d074:	f406 7280 	and.w	r2, r6, #256	; 0x100
 800d078:	79ee      	ldrb	r6, [r5, #7]
 800d07a:	4316      	orrs	r6, r2
 800d07c:	f46f 6263 	mvn.w	r2, #3632	; 0xe30
 800d080:	189a      	adds	r2, r3, r2
 800d082:	b291      	uxth	r1, r2
 800d084:	291d      	cmp	r1, #29
 800d086:	b2b7      	uxth	r7, r6
 800d088:	f200 8083 	bhi.w	800d192 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x142>
 800d08c:	2201      	movs	r2, #1
 800d08e:	408a      	lsls	r2, r1
 800d090:	4978      	ldr	r1, [pc, #480]	; (800d274 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x224>)
 800d092:	420a      	tst	r2, r1
 800d094:	ea4f 06e6 	mov.w	r6, r6, asr #3
 800d098:	d12d      	bne.n	800d0f6 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xa6>
 800d09a:	f412 7f60 	tst.w	r2, #896	; 0x380
 800d09e:	d078      	beq.n	800d192 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x142>
 800d0a0:	f104 0240 	add.w	r2, r4, #64	; 0x40
 800d0a4:	462b      	mov	r3, r5
 800d0a6:	f105 0e08 	add.w	lr, r5, #8
 800d0aa:	4615      	mov	r5, r2
 800d0ac:	6818      	ldr	r0, [r3, #0]
 800d0ae:	6859      	ldr	r1, [r3, #4]
 800d0b0:	4694      	mov	ip, r2
 800d0b2:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 800d0b6:	3308      	adds	r3, #8
 800d0b8:	4573      	cmp	r3, lr
 800d0ba:	4662      	mov	r2, ip
 800d0bc:	d1f6      	bne.n	800d0ac <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x5c>
 800d0be:	6818      	ldr	r0, [r3, #0]
 800d0c0:	f8cc 0000 	str.w	r0, [ip]
 800d0c4:	889b      	ldrh	r3, [r3, #4]
 800d0c6:	f8ac 3004 	strh.w	r3, [ip, #4]
 800d0ca:	f8b4 1050 	ldrh.w	r1, [r4, #80]	; 0x50
 800d0ce:	f894 004d 	ldrb.w	r0, [r4, #77]	; 0x4d
 800d0d2:	b2b3      	uxth	r3, r6
 800d0d4:	1aca      	subs	r2, r1, r3
 800d0d6:	b292      	uxth	r2, r2
 800d0d8:	f884 2048 	strb.w	r2, [r4, #72]	; 0x48
 800d0dc:	10d2      	asrs	r2, r2, #3
 800d0de:	f020 0060 	bic.w	r0, r0, #96	; 0x60
 800d0e2:	f002 0260 	and.w	r2, r2, #96	; 0x60
 800d0e6:	4302      	orrs	r2, r0
 800d0e8:	1bcf      	subs	r7, r1, r7
 800d0ea:	f884 204d 	strb.w	r2, [r4, #77]	; 0x4d
 800d0ee:	1afb      	subs	r3, r7, r3
 800d0f0:	f8a4 3050 	strh.w	r3, [r4, #80]	; 0x50
 800d0f4:	e7b7      	b.n	800d066 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 800d0f6:	8e23      	ldrh	r3, [r4, #48]	; 0x30
 800d0f8:	b92b      	cbnz	r3, 800d106 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xb6>
 800d0fa:	4b5f      	ldr	r3, [pc, #380]	; (800d278 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x228>)
 800d0fc:	4a5f      	ldr	r2, [pc, #380]	; (800d27c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x22c>)
 800d0fe:	4860      	ldr	r0, [pc, #384]	; (800d280 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x230>)
 800d100:	21c0      	movs	r1, #192	; 0xc0
 800d102:	f00c fa3b 	bl	801957c <__assert_func>
 800d106:	8de3      	ldrh	r3, [r4, #46]	; 0x2e
 800d108:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 800d10c:	8b59      	ldrh	r1, [r3, #26]
 800d10e:	f640 6333 	movw	r3, #3635	; 0xe33
 800d112:	4299      	cmp	r1, r3
 800d114:	d110      	bne.n	800d138 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xe8>
 800d116:	6803      	ldr	r3, [r0, #0]
 800d118:	68db      	ldr	r3, [r3, #12]
 800d11a:	4798      	blx	r3
 800d11c:	7b41      	ldrb	r1, [r0, #13]
 800d11e:	00cb      	lsls	r3, r1, #3
 800d120:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800d124:	7a03      	ldrb	r3, [r0, #8]
 800d126:	0648      	lsls	r0, r1, #25
 800d128:	ea43 0302 	orr.w	r3, r3, r2
 800d12c:	bf44      	itt	mi
 800d12e:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 800d132:	b21b      	sxthmi	r3, r3
 800d134:	f8a4 304e 	strh.w	r3, [r4, #78]	; 0x4e
 800d138:	f8b4 304e 	ldrh.w	r3, [r4, #78]	; 0x4e
 800d13c:	443b      	add	r3, r7
 800d13e:	4433      	add	r3, r6
 800d140:	b29b      	uxth	r3, r3
 800d142:	f104 0640 	add.w	r6, r4, #64	; 0x40
 800d146:	462a      	mov	r2, r5
 800d148:	f105 0c08 	add.w	ip, r5, #8
 800d14c:	f8a4 304e 	strh.w	r3, [r4, #78]	; 0x4e
 800d150:	4635      	mov	r5, r6
 800d152:	6810      	ldr	r0, [r2, #0]
 800d154:	6851      	ldr	r1, [r2, #4]
 800d156:	4637      	mov	r7, r6
 800d158:	c703      	stmia	r7!, {r0, r1}
 800d15a:	3208      	adds	r2, #8
 800d15c:	4562      	cmp	r2, ip
 800d15e:	463e      	mov	r6, r7
 800d160:	d1f7      	bne.n	800d152 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x102>
 800d162:	6810      	ldr	r0, [r2, #0]
 800d164:	6038      	str	r0, [r7, #0]
 800d166:	8892      	ldrh	r2, [r2, #4]
 800d168:	80ba      	strh	r2, [r7, #4]
 800d16a:	f894 204d 	ldrb.w	r2, [r4, #77]	; 0x4d
 800d16e:	f884 3048 	strb.w	r3, [r4, #72]	; 0x48
 800d172:	10db      	asrs	r3, r3, #3
 800d174:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 800d178:	f003 0360 	and.w	r3, r3, #96	; 0x60
 800d17c:	4313      	orrs	r3, r2
 800d17e:	f884 304d 	strb.w	r3, [r4, #77]	; 0x4d
 800d182:	f894 2052 	ldrb.w	r2, [r4, #82]	; 0x52
 800d186:	f894 3049 	ldrb.w	r3, [r4, #73]	; 0x49
 800d18a:	1a9b      	subs	r3, r3, r2
 800d18c:	f884 3049 	strb.w	r3, [r4, #73]	; 0x49
 800d190:	e769      	b.n	800d066 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 800d192:	f023 0204 	bic.w	r2, r3, #4
 800d196:	f640 611b 	movw	r1, #3611	; 0xe1b
 800d19a:	428a      	cmp	r2, r1
 800d19c:	d003      	beq.n	800d1a6 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x156>
 800d19e:	f640 621d 	movw	r2, #3613	; 0xe1d
 800d1a2:	4293      	cmp	r3, r2
 800d1a4:	d120      	bne.n	800d1e8 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x198>
 800d1a6:	3b01      	subs	r3, #1
 800d1a8:	4602      	mov	r2, r0
 800d1aa:	b29b      	uxth	r3, r3
 800d1ac:	4629      	mov	r1, r5
 800d1ae:	4620      	mov	r0, r4
 800d1b0:	f7ff ff43 	bl	800d03a <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 800d1b4:	7b41      	ldrb	r1, [r0, #13]
 800d1b6:	00cb      	lsls	r3, r1, #3
 800d1b8:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800d1bc:	7a03      	ldrb	r3, [r0, #8]
 800d1be:	0649      	lsls	r1, r1, #25
 800d1c0:	ea43 0302 	orr.w	r3, r3, r2
 800d1c4:	bf44      	itt	mi
 800d1c6:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 800d1ca:	b21b      	sxthmi	r3, r3
 800d1cc:	f8a4 304e 	strh.w	r3, [r4, #78]	; 0x4e
 800d1d0:	7b6b      	ldrb	r3, [r5, #13]
 800d1d2:	7aaa      	ldrb	r2, [r5, #10]
 800d1d4:	005b      	lsls	r3, r3, #1
 800d1d6:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800d1da:	4313      	orrs	r3, r2
 800d1dc:	115a      	asrs	r2, r3, #5
 800d1de:	eb02 0393 	add.w	r3, r2, r3, lsr #2
 800d1e2:	f8a4 3052 	strh.w	r3, [r4, #82]	; 0x52
 800d1e6:	e036      	b.n	800d256 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x206>
 800d1e8:	ea4f 02cc 	mov.w	r2, ip, lsl #3
 800d1ec:	f402 7180 	and.w	r1, r2, #256	; 0x100
 800d1f0:	7a2a      	ldrb	r2, [r5, #8]
 800d1f2:	f01c 0f40 	tst.w	ip, #64	; 0x40
 800d1f6:	ea42 0201 	orr.w	r2, r2, r1
 800d1fa:	bf1c      	itt	ne
 800d1fc:	f5a2 7200 	subne.w	r2, r2, #512	; 0x200
 800d200:	b212      	sxthne	r2, r2
 800d202:	f8a4 204e 	strh.w	r2, [r4, #78]	; 0x4e
 800d206:	f640 6109 	movw	r1, #3593	; 0xe09
 800d20a:	f023 0210 	bic.w	r2, r3, #16
 800d20e:	428a      	cmp	r2, r1
 800d210:	d003      	beq.n	800d21a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1ca>
 800d212:	f640 6213 	movw	r2, #3603	; 0xe13
 800d216:	4293      	cmp	r3, r2
 800d218:	d12a      	bne.n	800d270 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x220>
 800d21a:	7b6e      	ldrb	r6, [r5, #13]
 800d21c:	0076      	lsls	r6, r6, #1
 800d21e:	f406 7280 	and.w	r2, r6, #256	; 0x100
 800d222:	7aae      	ldrb	r6, [r5, #10]
 800d224:	4316      	orrs	r6, r2
 800d226:	f640 6213 	movw	r2, #3603	; 0xe13
 800d22a:	4293      	cmp	r3, r2
 800d22c:	bf18      	it	ne
 800d22e:	f103 33ff 	addne.w	r3, r3, #4294967295
 800d232:	4602      	mov	r2, r0
 800d234:	bf14      	ite	ne
 800d236:	b29b      	uxthne	r3, r3
 800d238:	f640 630c 	movweq	r3, #3596	; 0xe0c
 800d23c:	4629      	mov	r1, r5
 800d23e:	4620      	mov	r0, r4
 800d240:	f7ff fefb 	bl	800d03a <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 800d244:	7b43      	ldrb	r3, [r0, #13]
 800d246:	7a82      	ldrb	r2, [r0, #10]
 800d248:	005b      	lsls	r3, r3, #1
 800d24a:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800d24e:	4313      	orrs	r3, r2
 800d250:	1af6      	subs	r6, r6, r3
 800d252:	f8a4 6052 	strh.w	r6, [r4, #82]	; 0x52
 800d256:	7b69      	ldrb	r1, [r5, #13]
 800d258:	00cb      	lsls	r3, r1, #3
 800d25a:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800d25e:	7a2b      	ldrb	r3, [r5, #8]
 800d260:	4313      	orrs	r3, r2
 800d262:	064a      	lsls	r2, r1, #25
 800d264:	bf44      	itt	mi
 800d266:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 800d26a:	b21b      	sxthmi	r3, r3
 800d26c:	1bdb      	subs	r3, r3, r7
 800d26e:	e73f      	b.n	800d0f0 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xa0>
 800d270:	2300      	movs	r3, #0
 800d272:	e7b6      	b.n	800d1e2 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x192>
 800d274:	3fc00079 	.word	0x3fc00079
 800d278:	0801afbc 	.word	0x0801afbc
 800d27c:	0801ca3f 	.word	0x0801ca3f
 800d280:	0801afe3 	.word	0x0801afe3

0800d284 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>:
 800d284:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800d288:	4604      	mov	r4, r0
 800d28a:	b942      	cbnz	r2, 800d29e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1a>
 800d28c:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 800d290:	f8a0 304e 	strh.w	r3, [r0, #78]	; 0x4e
 800d294:	f8a0 3050 	strh.w	r3, [r0, #80]	; 0x50
 800d298:	f8a4 3052 	strh.w	r3, [r4, #82]	; 0x52
 800d29c:	e046      	b.n	800d32c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa8>
 800d29e:	7b51      	ldrb	r1, [r2, #13]
 800d2a0:	8893      	ldrh	r3, [r2, #4]
 800d2a2:	010f      	lsls	r7, r1, #4
 800d2a4:	f407 7080 	and.w	r0, r7, #256	; 0x100
 800d2a8:	79d7      	ldrb	r7, [r2, #7]
 800d2aa:	4307      	orrs	r7, r0
 800d2ac:	2f04      	cmp	r7, #4
 800d2ae:	b2bd      	uxth	r5, r7
 800d2b0:	bfcc      	ite	gt
 800d2b2:	08bf      	lsrgt	r7, r7, #2
 800d2b4:	2701      	movle	r7, #1
 800d2b6:	f5b3 6fdd 	cmp.w	r3, #1768	; 0x6e8
 800d2ba:	f200 80ab 	bhi.w	800d414 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x190>
 800d2be:	f240 60e7 	movw	r0, #1767	; 0x6e7
 800d2c2:	4283      	cmp	r3, r0
 800d2c4:	d216      	bcs.n	800d2f4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800d2c6:	f240 605b 	movw	r0, #1627	; 0x65b
 800d2ca:	4283      	cmp	r3, r0
 800d2cc:	d859      	bhi.n	800d382 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xfe>
 800d2ce:	f240 6057 	movw	r0, #1623	; 0x657
 800d2d2:	4283      	cmp	r3, r0
 800d2d4:	d20e      	bcs.n	800d2f4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800d2d6:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
 800d2da:	d24a      	bcs.n	800d372 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xee>
 800d2dc:	f240 604e 	movw	r0, #1614	; 0x64e
 800d2e0:	4283      	cmp	r3, r0
 800d2e2:	d207      	bcs.n	800d2f4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800d2e4:	f240 601a 	movw	r0, #1562	; 0x61a
 800d2e8:	4283      	cmp	r3, r0
 800d2ea:	d02a      	beq.n	800d342 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 800d2ec:	d821      	bhi.n	800d332 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xae>
 800d2ee:	f5b3 6fc2 	cmp.w	r3, #1552	; 0x610
 800d2f2:	d35b      	bcc.n	800d3ac <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 800d2f4:	f9b4 304e 	ldrsh.w	r3, [r4, #78]	; 0x4e
 800d2f8:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 800d2fc:	f040 80d0 	bne.w	800d4a0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21c>
 800d300:	f9b4 0050 	ldrsh.w	r0, [r4, #80]	; 0x50
 800d304:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 800d308:	f040 80ca 	bne.w	800d4a0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21c>
 800d30c:	00cb      	lsls	r3, r1, #3
 800d30e:	f403 7080 	and.w	r0, r3, #256	; 0x100
 800d312:	7a13      	ldrb	r3, [r2, #8]
 800d314:	0649      	lsls	r1, r1, #25
 800d316:	ea43 0300 	orr.w	r3, r3, r0
 800d31a:	bf44      	itt	mi
 800d31c:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 800d320:	b21b      	sxthmi	r3, r3
 800d322:	f8a4 304e 	strh.w	r3, [r4, #78]	; 0x4e
 800d326:	1b5d      	subs	r5, r3, r5
 800d328:	f8a4 5050 	strh.w	r5, [r4, #80]	; 0x50
 800d32c:	4610      	mov	r0, r2
 800d32e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800d332:	f240 604b 	movw	r0, #1611	; 0x64b
 800d336:	4283      	cmp	r3, r0
 800d338:	d338      	bcc.n	800d3ac <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 800d33a:	f240 604c 	movw	r0, #1612	; 0x64c
 800d33e:	4283      	cmp	r3, r0
 800d340:	d9d8      	bls.n	800d2f4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800d342:	f9b4 004e 	ldrsh.w	r0, [r4, #78]	; 0x4e
 800d346:	f9b4 3050 	ldrsh.w	r3, [r4, #80]	; 0x50
 800d34a:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 800d34e:	f040 80f1 	bne.w	800d534 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b0>
 800d352:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 800d356:	f040 80ed 	bne.w	800d534 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b0>
 800d35a:	00cb      	lsls	r3, r1, #3
 800d35c:	f403 7080 	and.w	r0, r3, #256	; 0x100
 800d360:	7a13      	ldrb	r3, [r2, #8]
 800d362:	064e      	lsls	r6, r1, #25
 800d364:	ea43 0300 	orr.w	r3, r3, r0
 800d368:	bf44      	itt	mi
 800d36a:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 800d36e:	b21b      	sxthmi	r3, r3
 800d370:	e7d9      	b.n	800d326 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa2>
 800d372:	f240 6054 	movw	r0, #1620	; 0x654
 800d376:	4283      	cmp	r3, r0
 800d378:	d8e3      	bhi.n	800d342 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 800d37a:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
 800d37e:	d9e0      	bls.n	800d342 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 800d380:	e7b8      	b.n	800d2f4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800d382:	f240 6074 	movw	r0, #1652	; 0x674
 800d386:	4283      	cmp	r3, r0
 800d388:	d0b4      	beq.n	800d2f4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800d38a:	d82d      	bhi.n	800d3e8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x164>
 800d38c:	f240 605e 	movw	r0, #1630	; 0x65e
 800d390:	4283      	cmp	r3, r0
 800d392:	d804      	bhi.n	800d39e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x11a>
 800d394:	f240 605d 	movw	r0, #1629	; 0x65d
 800d398:	4283      	cmp	r3, r0
 800d39a:	d3d2      	bcc.n	800d342 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 800d39c:	e7aa      	b.n	800d2f4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800d39e:	f240 605f 	movw	r0, #1631	; 0x65f
 800d3a2:	4283      	cmp	r3, r0
 800d3a4:	d0cd      	beq.n	800d342 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 800d3a6:	f5b3 6fce 	cmp.w	r3, #1648	; 0x670
 800d3aa:	d0a3      	beq.n	800d2f4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800d3ac:	00cb      	lsls	r3, r1, #3
 800d3ae:	f403 7080 	and.w	r0, r3, #256	; 0x100
 800d3b2:	7a13      	ldrb	r3, [r2, #8]
 800d3b4:	0649      	lsls	r1, r1, #25
 800d3b6:	ea43 0300 	orr.w	r3, r3, r0
 800d3ba:	bf44      	itt	mi
 800d3bc:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 800d3c0:	b21b      	sxthmi	r3, r3
 800d3c2:	1b5d      	subs	r5, r3, r5
 800d3c4:	f8a4 304e 	strh.w	r3, [r4, #78]	; 0x4e
 800d3c8:	f8a4 5050 	strh.w	r5, [r4, #80]	; 0x50
 800d3cc:	7b53      	ldrb	r3, [r2, #13]
 800d3ce:	015b      	lsls	r3, r3, #5
 800d3d0:	f403 7180 	and.w	r1, r3, #256	; 0x100
 800d3d4:	7993      	ldrb	r3, [r2, #6]
 800d3d6:	430b      	orrs	r3, r1
 800d3d8:	005b      	lsls	r3, r3, #1
 800d3da:	2105      	movs	r1, #5
 800d3dc:	fb93 f3f1 	sdiv	r3, r3, r1
 800d3e0:	f992 1009 	ldrsb.w	r1, [r2, #9]
 800d3e4:	440b      	add	r3, r1
 800d3e6:	e757      	b.n	800d298 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x14>
 800d3e8:	f240 60e2 	movw	r0, #1762	; 0x6e2
 800d3ec:	4283      	cmp	r3, r0
 800d3ee:	d809      	bhi.n	800d404 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x180>
 800d3f0:	f240 60df 	movw	r0, #1759	; 0x6df
 800d3f4:	4283      	cmp	r3, r0
 800d3f6:	f4bf af7d 	bcs.w	800d2f4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800d3fa:	f2a3 63d6 	subw	r3, r3, #1750	; 0x6d6
 800d3fe:	2b05      	cmp	r3, #5
 800d400:	d8d4      	bhi.n	800d3ac <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 800d402:	e777      	b.n	800d2f4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800d404:	f240 60e3 	movw	r0, #1763	; 0x6e3
 800d408:	4283      	cmp	r3, r0
 800d40a:	d09a      	beq.n	800d342 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 800d40c:	f240 60e4 	movw	r0, #1764	; 0x6e4
 800d410:	4283      	cmp	r3, r0
 800d412:	e7ca      	b.n	800d3aa <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x126>
 800d414:	f5b3 6f0f 	cmp.w	r3, #2288	; 0x8f0
 800d418:	d22b      	bcs.n	800d472 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1ee>
 800d41a:	f640 00ed 	movw	r0, #2285	; 0x8ed
 800d41e:	4283      	cmp	r3, r0
 800d420:	d28f      	bcs.n	800d342 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 800d422:	f640 00e5 	movw	r0, #2277	; 0x8e5
 800d426:	4283      	cmp	r3, r0
 800d428:	d816      	bhi.n	800d458 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d4>
 800d42a:	f640 00e4 	movw	r0, #2276	; 0x8e4
 800d42e:	4283      	cmp	r3, r0
 800d430:	f4bf af60 	bcs.w	800d2f4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800d434:	f240 60ec 	movw	r0, #1772	; 0x6ec
 800d438:	4283      	cmp	r3, r0
 800d43a:	d80a      	bhi.n	800d452 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1ce>
 800d43c:	f240 60eb 	movw	r0, #1771	; 0x6eb
 800d440:	4283      	cmp	r3, r0
 800d442:	f4bf af57 	bcs.w	800d2f4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800d446:	f240 60ea 	movw	r0, #1770	; 0x6ea
 800d44a:	4283      	cmp	r3, r0
 800d44c:	f43f af79 	beq.w	800d342 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 800d450:	e7ac      	b.n	800d3ac <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 800d452:	f240 60ed 	movw	r0, #1773	; 0x6ed
 800d456:	e7f8      	b.n	800d44a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1c6>
 800d458:	f640 00e8 	movw	r0, #2280	; 0x8e8
 800d45c:	4283      	cmp	r3, r0
 800d45e:	d802      	bhi.n	800d466 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e2>
 800d460:	f640 00e7 	movw	r0, #2279	; 0x8e7
 800d464:	e798      	b.n	800d398 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x114>
 800d466:	f640 00e9 	movw	r0, #2281	; 0x8e9
 800d46a:	4283      	cmp	r3, r0
 800d46c:	f47f af42 	bne.w	800d2f4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800d470:	e767      	b.n	800d342 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 800d472:	f640 00f6 	movw	r0, #2294	; 0x8f6
 800d476:	4283      	cmp	r3, r0
 800d478:	f43f af63 	beq.w	800d342 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 800d47c:	d802      	bhi.n	800d484 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x200>
 800d47e:	f640 00f2 	movw	r0, #2290	; 0x8f2
 800d482:	e7f2      	b.n	800d46a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e6>
 800d484:	f640 00fa 	movw	r0, #2298	; 0x8fa
 800d488:	4283      	cmp	r3, r0
 800d48a:	d805      	bhi.n	800d498 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x214>
 800d48c:	f640 00f9 	movw	r0, #2297	; 0x8f9
 800d490:	4283      	cmp	r3, r0
 800d492:	f4ff af2f 	bcc.w	800d2f4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800d496:	e754      	b.n	800d342 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 800d498:	f640 00fe 	movw	r0, #2302	; 0x8fe
 800d49c:	4283      	cmp	r3, r0
 800d49e:	e7af      	b.n	800d400 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x17c>
 800d4a0:	f104 0c40 	add.w	ip, r4, #64	; 0x40
 800d4a4:	4617      	mov	r7, r2
 800d4a6:	f102 0808 	add.w	r8, r2, #8
 800d4aa:	4666      	mov	r6, ip
 800d4ac:	6838      	ldr	r0, [r7, #0]
 800d4ae:	6879      	ldr	r1, [r7, #4]
 800d4b0:	46e6      	mov	lr, ip
 800d4b2:	e8ae 0003 	stmia.w	lr!, {r0, r1}
 800d4b6:	3708      	adds	r7, #8
 800d4b8:	4547      	cmp	r7, r8
 800d4ba:	46f4      	mov	ip, lr
 800d4bc:	d1f6      	bne.n	800d4ac <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x228>
 800d4be:	6838      	ldr	r0, [r7, #0]
 800d4c0:	f8ce 0000 	str.w	r0, [lr]
 800d4c4:	88b9      	ldrh	r1, [r7, #4]
 800d4c6:	f8ae 1004 	strh.w	r1, [lr, #4]
 800d4ca:	f9b4 0052 	ldrsh.w	r0, [r4, #82]	; 0x52
 800d4ce:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 800d4d2:	d009      	beq.n	800d4e8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x264>
 800d4d4:	7b51      	ldrb	r1, [r2, #13]
 800d4d6:	7992      	ldrb	r2, [r2, #6]
 800d4d8:	0149      	lsls	r1, r1, #5
 800d4da:	f401 7180 	and.w	r1, r1, #256	; 0x100
 800d4de:	4311      	orrs	r1, r2
 800d4e0:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 800d4e4:	f884 0049 	strb.w	r0, [r4, #73]	; 0x49
 800d4e8:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 800d4ec:	d00d      	beq.n	800d50a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x286>
 800d4ee:	442b      	add	r3, r5
 800d4f0:	b29b      	uxth	r3, r3
 800d4f2:	f894 204d 	ldrb.w	r2, [r4, #77]	; 0x4d
 800d4f6:	f884 3048 	strb.w	r3, [r4, #72]	; 0x48
 800d4fa:	10db      	asrs	r3, r3, #3
 800d4fc:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 800d500:	f003 0360 	and.w	r3, r3, #96	; 0x60
 800d504:	4313      	orrs	r3, r2
 800d506:	f884 304d 	strb.w	r3, [r4, #77]	; 0x4d
 800d50a:	f894 104d 	ldrb.w	r1, [r4, #77]	; 0x4d
 800d50e:	00cb      	lsls	r3, r1, #3
 800d510:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800d514:	f894 3048 	ldrb.w	r3, [r4, #72]	; 0x48
 800d518:	064f      	lsls	r7, r1, #25
 800d51a:	ea43 0302 	orr.w	r3, r3, r2
 800d51e:	bf44      	itt	mi
 800d520:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 800d524:	b21b      	sxthmi	r3, r3
 800d526:	f8a4 304e 	strh.w	r3, [r4, #78]	; 0x4e
 800d52a:	1b5d      	subs	r5, r3, r5
 800d52c:	f8a4 5050 	strh.w	r5, [r4, #80]	; 0x50
 800d530:	4632      	mov	r2, r6
 800d532:	e6fb      	b.n	800d32c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa8>
 800d534:	f104 0e40 	add.w	lr, r4, #64	; 0x40
 800d538:	4694      	mov	ip, r2
 800d53a:	f102 0908 	add.w	r9, r2, #8
 800d53e:	4676      	mov	r6, lr
 800d540:	f8dc 0000 	ldr.w	r0, [ip]
 800d544:	f8dc 1004 	ldr.w	r1, [ip, #4]
 800d548:	46f0      	mov	r8, lr
 800d54a:	e8a8 0003 	stmia.w	r8!, {r0, r1}
 800d54e:	f10c 0c08 	add.w	ip, ip, #8
 800d552:	45cc      	cmp	ip, r9
 800d554:	46c6      	mov	lr, r8
 800d556:	d1f3      	bne.n	800d540 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2bc>
 800d558:	f8dc 0000 	ldr.w	r0, [ip]
 800d55c:	f8c8 0000 	str.w	r0, [r8]
 800d560:	f8bc 1004 	ldrh.w	r1, [ip, #4]
 800d564:	f8a8 1004 	strh.w	r1, [r8, #4]
 800d568:	f9b4 0052 	ldrsh.w	r0, [r4, #82]	; 0x52
 800d56c:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 800d570:	d009      	beq.n	800d586 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x302>
 800d572:	7b51      	ldrb	r1, [r2, #13]
 800d574:	7992      	ldrb	r2, [r2, #6]
 800d576:	0149      	lsls	r1, r1, #5
 800d578:	f401 7180 	and.w	r1, r1, #256	; 0x100
 800d57c:	4311      	orrs	r1, r2
 800d57e:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 800d582:	f884 0049 	strb.w	r0, [r4, #73]	; 0x49
 800d586:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 800d58a:	d00d      	beq.n	800d5a8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x324>
 800d58c:	1bdb      	subs	r3, r3, r7
 800d58e:	f894 204d 	ldrb.w	r2, [r4, #77]	; 0x4d
 800d592:	b29b      	uxth	r3, r3
 800d594:	f884 3048 	strb.w	r3, [r4, #72]	; 0x48
 800d598:	10db      	asrs	r3, r3, #3
 800d59a:	f003 0360 	and.w	r3, r3, #96	; 0x60
 800d59e:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 800d5a2:	4313      	orrs	r3, r2
 800d5a4:	f884 304d 	strb.w	r3, [r4, #77]	; 0x4d
 800d5a8:	f894 104d 	ldrb.w	r1, [r4, #77]	; 0x4d
 800d5ac:	00cb      	lsls	r3, r1, #3
 800d5ae:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800d5b2:	f894 3048 	ldrb.w	r3, [r4, #72]	; 0x48
 800d5b6:	0648      	lsls	r0, r1, #25
 800d5b8:	ea43 0302 	orr.w	r3, r3, r2
 800d5bc:	bf44      	itt	mi
 800d5be:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 800d5c2:	b21b      	sxthmi	r3, r3
 800d5c4:	e7b1      	b.n	800d52a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2a6>
	...

0800d5c8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>:
 800d5c8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800d5cc:	461e      	mov	r6, r3
 800d5ce:	8e03      	ldrh	r3, [r0, #48]	; 0x30
 800d5d0:	4604      	mov	r4, r0
 800d5d2:	4617      	mov	r7, r2
 800d5d4:	b92b      	cbnz	r3, 800d5e2 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x1a>
 800d5d6:	4b25      	ldr	r3, [pc, #148]	; (800d66c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0xa4>)
 800d5d8:	4a25      	ldr	r2, [pc, #148]	; (800d670 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0xa8>)
 800d5da:	4826      	ldr	r0, [pc, #152]	; (800d674 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0xac>)
 800d5dc:	21c0      	movs	r1, #192	; 0xc0
 800d5de:	f00b ffcd 	bl	801957c <__assert_func>
 800d5e2:	8dc3      	ldrh	r3, [r0, #46]	; 0x2e
 800d5e4:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 800d5e8:	f8b3 801a 	ldrh.w	r8, [r3, #26]
 800d5ec:	f7f5 fcb2 	bl	8002f54 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 800d5f0:	4605      	mov	r5, r0
 800d5f2:	b918      	cbnz	r0, 800d5fc <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x34>
 800d5f4:	6030      	str	r0, [r6, #0]
 800d5f6:	4628      	mov	r0, r5
 800d5f8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800d5fc:	683b      	ldr	r3, [r7, #0]
 800d5fe:	4601      	mov	r1, r0
 800d600:	68db      	ldr	r3, [r3, #12]
 800d602:	4638      	mov	r0, r7
 800d604:	4798      	blx	r3
 800d606:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
 800d60a:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 800d60e:	4602      	mov	r2, r0
 800d610:	6030      	str	r0, [r6, #0]
 800d612:	d213      	bcs.n	800d63c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x74>
 800d614:	4643      	mov	r3, r8
 800d616:	4639      	mov	r1, r7
 800d618:	4620      	mov	r0, r4
 800d61a:	f7ff fe33 	bl	800d284 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 800d61e:	6030      	str	r0, [r6, #0]
 800d620:	6833      	ldr	r3, [r6, #0]
 800d622:	b143      	cbz	r3, 800d636 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x6e>
 800d624:	7b5a      	ldrb	r2, [r3, #13]
 800d626:	7a9b      	ldrb	r3, [r3, #10]
 800d628:	0052      	lsls	r2, r2, #1
 800d62a:	f402 7280 	and.w	r2, r2, #256	; 0x100
 800d62e:	4313      	orrs	r3, r2
 800d630:	bf0c      	ite	eq
 800d632:	2301      	moveq	r3, #1
 800d634:	2300      	movne	r3, #0
 800d636:	f884 3055 	strb.w	r3, [r4, #85]	; 0x55
 800d63a:	e7dc      	b.n	800d5f6 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x2e>
 800d63c:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
 800d640:	b29b      	uxth	r3, r3
 800d642:	2b7f      	cmp	r3, #127	; 0x7f
 800d644:	d804      	bhi.n	800d650 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x88>
 800d646:	4639      	mov	r1, r7
 800d648:	4620      	mov	r0, r4
 800d64a:	f7ff fd01 	bl	800d050 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 800d64e:	e7e6      	b.n	800d61e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x56>
 800d650:	f894 3055 	ldrb.w	r3, [r4, #85]	; 0x55
 800d654:	2b00      	cmp	r3, #0
 800d656:	d0e3      	beq.n	800d620 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x58>
 800d658:	f640 1302 	movw	r3, #2306	; 0x902
 800d65c:	429d      	cmp	r5, r3
 800d65e:	d1df      	bne.n	800d620 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x58>
 800d660:	4601      	mov	r1, r0
 800d662:	4620      	mov	r0, r4
 800d664:	f7ff fcc6 	bl	800cff4 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 800d668:	e7d9      	b.n	800d61e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x56>
 800d66a:	bf00      	nop
 800d66c:	0801afbc 	.word	0x0801afbc
 800d670:	0801ca3f 	.word	0x0801ca3f
 800d674:	0801afe3 	.word	0x0801afe3

0800d678 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>:
 800d678:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800d67c:	461e      	mov	r6, r3
 800d67e:	8e03      	ldrh	r3, [r0, #48]	; 0x30
 800d680:	4604      	mov	r4, r0
 800d682:	4617      	mov	r7, r2
 800d684:	b92b      	cbnz	r3, 800d692 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x1a>
 800d686:	4b26      	ldr	r3, [pc, #152]	; (800d720 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0xa8>)
 800d688:	4a26      	ldr	r2, [pc, #152]	; (800d724 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0xac>)
 800d68a:	4827      	ldr	r0, [pc, #156]	; (800d728 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0xb0>)
 800d68c:	21c0      	movs	r1, #192	; 0xc0
 800d68e:	f00b ff75 	bl	801957c <__assert_func>
 800d692:	8dc3      	ldrh	r3, [r0, #46]	; 0x2e
 800d694:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 800d698:	f8b3 801a 	ldrh.w	r8, [r3, #26]
 800d69c:	f7f5 fc5a 	bl	8002f54 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 800d6a0:	4605      	mov	r5, r0
 800d6a2:	b918      	cbnz	r0, 800d6ac <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x34>
 800d6a4:	6030      	str	r0, [r6, #0]
 800d6a6:	4628      	mov	r0, r5
 800d6a8:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800d6ac:	683b      	ldr	r3, [r7, #0]
 800d6ae:	4601      	mov	r1, r0
 800d6b0:	f8d3 9008 	ldr.w	r9, [r3, #8]
 800d6b4:	4638      	mov	r0, r7
 800d6b6:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 800d6ba:	47c8      	blx	r9
 800d6bc:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
 800d6c0:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 800d6c4:	4602      	mov	r2, r0
 800d6c6:	6030      	str	r0, [r6, #0]
 800d6c8:	d213      	bcs.n	800d6f2 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x7a>
 800d6ca:	4643      	mov	r3, r8
 800d6cc:	4639      	mov	r1, r7
 800d6ce:	4620      	mov	r0, r4
 800d6d0:	f7ff fdd8 	bl	800d284 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 800d6d4:	6030      	str	r0, [r6, #0]
 800d6d6:	6833      	ldr	r3, [r6, #0]
 800d6d8:	b143      	cbz	r3, 800d6ec <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x74>
 800d6da:	7b5a      	ldrb	r2, [r3, #13]
 800d6dc:	7a9b      	ldrb	r3, [r3, #10]
 800d6de:	0052      	lsls	r2, r2, #1
 800d6e0:	f402 7280 	and.w	r2, r2, #256	; 0x100
 800d6e4:	4313      	orrs	r3, r2
 800d6e6:	bf0c      	ite	eq
 800d6e8:	2301      	moveq	r3, #1
 800d6ea:	2300      	movne	r3, #0
 800d6ec:	f884 3055 	strb.w	r3, [r4, #85]	; 0x55
 800d6f0:	e7d9      	b.n	800d6a6 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x2e>
 800d6f2:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
 800d6f6:	b29b      	uxth	r3, r3
 800d6f8:	2b7f      	cmp	r3, #127	; 0x7f
 800d6fa:	d804      	bhi.n	800d706 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x8e>
 800d6fc:	4639      	mov	r1, r7
 800d6fe:	4620      	mov	r0, r4
 800d700:	f7ff fca6 	bl	800d050 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 800d704:	e7e6      	b.n	800d6d4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x5c>
 800d706:	f894 3055 	ldrb.w	r3, [r4, #85]	; 0x55
 800d70a:	2b00      	cmp	r3, #0
 800d70c:	d0e3      	beq.n	800d6d6 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x5e>
 800d70e:	f640 1302 	movw	r3, #2306	; 0x902
 800d712:	429d      	cmp	r5, r3
 800d714:	d1df      	bne.n	800d6d6 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x5e>
 800d716:	4601      	mov	r1, r0
 800d718:	4620      	mov	r0, r4
 800d71a:	f7ff fc6b 	bl	800cff4 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 800d71e:	e7d9      	b.n	800d6d4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x5c>
 800d720:	0801afbc 	.word	0x0801afbc
 800d724:	0801ca3f 	.word	0x0801ca3f
 800d728:	0801afe3 	.word	0x0801afe3

0800d72c <_ZN8touchgfx12TextProvider15fillInputBufferEv>:
 800d72c:	b510      	push	{r4, lr}
 800d72e:	4604      	mov	r4, r0
 800d730:	8f21      	ldrh	r1, [r4, #56]	; 0x38
 800d732:	8e23      	ldrh	r3, [r4, #48]	; 0x30
 800d734:	b9d9      	cbnz	r1, 800d76e <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x42>
 800d736:	8e23      	ldrh	r3, [r4, #48]	; 0x30
 800d738:	2b0a      	cmp	r3, #10
 800d73a:	d036      	beq.n	800d7aa <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x7e>
 800d73c:	4620      	mov	r0, r4
 800d73e:	f7ff fc22 	bl	800cf86 <_ZN8touchgfx12TextProvider19getNextCharInternalEv>
 800d742:	8e23      	ldrh	r3, [r4, #48]	; 0x30
 800d744:	2b09      	cmp	r3, #9
 800d746:	d906      	bls.n	800d756 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x2a>
 800d748:	4b18      	ldr	r3, [pc, #96]	; (800d7ac <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x80>)
 800d74a:	4a19      	ldr	r2, [pc, #100]	; (800d7b0 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x84>)
 800d74c:	4819      	ldr	r0, [pc, #100]	; (800d7b4 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x88>)
 800d74e:	f44f 7182 	mov.w	r1, #260	; 0x104
 800d752:	f00b ff13 	bl	801957c <__assert_func>
 800d756:	1c5a      	adds	r2, r3, #1
 800d758:	8622      	strh	r2, [r4, #48]	; 0x30
 800d75a:	8de2      	ldrh	r2, [r4, #46]	; 0x2e
 800d75c:	4413      	add	r3, r2
 800d75e:	b29b      	uxth	r3, r3
 800d760:	2b09      	cmp	r3, #9
 800d762:	bf88      	it	hi
 800d764:	3b0a      	subhi	r3, #10
 800d766:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 800d76a:	8358      	strh	r0, [r3, #26]
 800d76c:	e7e3      	b.n	800d736 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0xa>
 800d76e:	2b0a      	cmp	r3, #10
 800d770:	d01b      	beq.n	800d7aa <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x7e>
 800d772:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 800d774:	eb04 0042 	add.w	r0, r4, r2, lsl #1
 800d778:	3901      	subs	r1, #1
 800d77a:	8e40      	ldrh	r0, [r0, #50]	; 0x32
 800d77c:	8721      	strh	r1, [r4, #56]	; 0x38
 800d77e:	1c51      	adds	r1, r2, #1
 800d780:	b289      	uxth	r1, r1
 800d782:	2901      	cmp	r1, #1
 800d784:	bf8a      	itet	hi
 800d786:	f102 32ff 	addhi.w	r2, r2, #4294967295
 800d78a:	86e1      	strhls	r1, [r4, #54]	; 0x36
 800d78c:	86e2      	strhhi	r2, [r4, #54]	; 0x36
 800d78e:	2b09      	cmp	r3, #9
 800d790:	d8da      	bhi.n	800d748 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x1c>
 800d792:	1c5a      	adds	r2, r3, #1
 800d794:	8622      	strh	r2, [r4, #48]	; 0x30
 800d796:	8de2      	ldrh	r2, [r4, #46]	; 0x2e
 800d798:	4413      	add	r3, r2
 800d79a:	b29b      	uxth	r3, r3
 800d79c:	2b09      	cmp	r3, #9
 800d79e:	bf88      	it	hi
 800d7a0:	3b0a      	subhi	r3, #10
 800d7a2:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 800d7a6:	8358      	strh	r0, [r3, #26]
 800d7a8:	e7c2      	b.n	800d730 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4>
 800d7aa:	bd10      	pop	{r4, pc}
 800d7ac:	0801c810 	.word	0x0801c810
 800d7b0:	0801cb95 	.word	0x0801cb95
 800d7b4:	0801afe3 	.word	0x0801afe3

0800d7b8 <_ZN8touchgfx12TextProvider11getNextCharEv>:
 800d7b8:	b538      	push	{r3, r4, r5, lr}
 800d7ba:	8e02      	ldrh	r2, [r0, #48]	; 0x30
 800d7bc:	4604      	mov	r4, r0
 800d7be:	b92a      	cbnz	r2, 800d7cc <_ZN8touchgfx12TextProvider11getNextCharEv+0x14>
 800d7c0:	4b13      	ldr	r3, [pc, #76]	; (800d810 <_ZN8touchgfx12TextProvider11getNextCharEv+0x58>)
 800d7c2:	4a14      	ldr	r2, [pc, #80]	; (800d814 <_ZN8touchgfx12TextProvider11getNextCharEv+0x5c>)
 800d7c4:	4814      	ldr	r0, [pc, #80]	; (800d818 <_ZN8touchgfx12TextProvider11getNextCharEv+0x60>)
 800d7c6:	21d5      	movs	r1, #213	; 0xd5
 800d7c8:	f00b fed8 	bl	801957c <__assert_func>
 800d7cc:	8dc3      	ldrh	r3, [r0, #46]	; 0x2e
 800d7ce:	eb00 0143 	add.w	r1, r0, r3, lsl #1
 800d7d2:	3a01      	subs	r2, #1
 800d7d4:	8b4d      	ldrh	r5, [r1, #26]
 800d7d6:	8602      	strh	r2, [r0, #48]	; 0x30
 800d7d8:	1c5a      	adds	r2, r3, #1
 800d7da:	b292      	uxth	r2, r2
 800d7dc:	2a09      	cmp	r2, #9
 800d7de:	bf86      	itte	hi
 800d7e0:	3b09      	subhi	r3, #9
 800d7e2:	85c3      	strhhi	r3, [r0, #46]	; 0x2e
 800d7e4:	85c2      	strhls	r2, [r0, #46]	; 0x2e
 800d7e6:	f7ff ffa1 	bl	800d72c <_ZN8touchgfx12TextProvider15fillInputBufferEv>
 800d7ea:	8b23      	ldrh	r3, [r4, #24]
 800d7ec:	2b01      	cmp	r3, #1
 800d7ee:	bf9c      	itt	ls
 800d7f0:	3301      	addls	r3, #1
 800d7f2:	8323      	strhls	r3, [r4, #24]
 800d7f4:	8ae3      	ldrh	r3, [r4, #22]
 800d7f6:	b90b      	cbnz	r3, 800d7fc <_ZN8touchgfx12TextProvider11getNextCharEv+0x44>
 800d7f8:	2302      	movs	r3, #2
 800d7fa:	82e3      	strh	r3, [r4, #22]
 800d7fc:	8ae3      	ldrh	r3, [r4, #22]
 800d7fe:	3b01      	subs	r3, #1
 800d800:	b29b      	uxth	r3, r3
 800d802:	82e3      	strh	r3, [r4, #22]
 800d804:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 800d808:	4628      	mov	r0, r5
 800d80a:	8265      	strh	r5, [r4, #18]
 800d80c:	bd38      	pop	{r3, r4, r5, pc}
 800d80e:	bf00      	nop
 800d810:	0801afbc 	.word	0x0801afbc
 800d814:	0801caea 	.word	0x0801caea
 800d818:	0801afe3 	.word	0x0801afe3

0800d81c <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>:
 800d81c:	b538      	push	{r3, r4, r5, lr}
 800d81e:	428a      	cmp	r2, r1
 800d820:	8e04      	ldrh	r4, [r0, #48]	; 0x30
 800d822:	d90c      	bls.n	800d83e <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x22>
 800d824:	b92c      	cbnz	r4, 800d832 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x16>
 800d826:	4b1c      	ldr	r3, [pc, #112]	; (800d898 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x7c>)
 800d828:	4a1c      	ldr	r2, [pc, #112]	; (800d89c <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x80>)
 800d82a:	21e1      	movs	r1, #225	; 0xe1
 800d82c:	481c      	ldr	r0, [pc, #112]	; (800d8a0 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x84>)
 800d82e:	f00b fea5 	bl	801957c <__assert_func>
 800d832:	3c01      	subs	r4, #1
 800d834:	8604      	strh	r4, [r0, #48]	; 0x30
 800d836:	4b1b      	ldr	r3, [pc, #108]	; (800d8a4 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x88>)
 800d838:	4a1b      	ldr	r2, [pc, #108]	; (800d8a8 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x8c>)
 800d83a:	21c5      	movs	r1, #197	; 0xc5
 800d83c:	e7f6      	b.n	800d82c <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x10>
 800d83e:	428c      	cmp	r4, r1
 800d840:	d203      	bcs.n	800d84a <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x2e>
 800d842:	4b1a      	ldr	r3, [pc, #104]	; (800d8ac <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x90>)
 800d844:	4a1a      	ldr	r2, [pc, #104]	; (800d8b0 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x94>)
 800d846:	21cb      	movs	r1, #203	; 0xcb
 800d848:	e7f0      	b.n	800d82c <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x10>
 800d84a:	1a64      	subs	r4, r4, r1
 800d84c:	8604      	strh	r4, [r0, #48]	; 0x30
 800d84e:	8dc4      	ldrh	r4, [r0, #46]	; 0x2e
 800d850:	4421      	add	r1, r4
 800d852:	b289      	uxth	r1, r1
 800d854:	2909      	cmp	r1, #9
 800d856:	bf88      	it	hi
 800d858:	390a      	subhi	r1, #10
 800d85a:	85c1      	strh	r1, [r0, #46]	; 0x2e
 800d85c:	250a      	movs	r5, #10
 800d85e:	b1ba      	cbz	r2, 800d890 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x74>
 800d860:	3a01      	subs	r2, #1
 800d862:	8e01      	ldrh	r1, [r0, #48]	; 0x30
 800d864:	b292      	uxth	r2, r2
 800d866:	2909      	cmp	r1, #9
 800d868:	f833 4012 	ldrh.w	r4, [r3, r2, lsl #1]
 800d86c:	d903      	bls.n	800d876 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x5a>
 800d86e:	4b11      	ldr	r3, [pc, #68]	; (800d8b4 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x98>)
 800d870:	4a11      	ldr	r2, [pc, #68]	; (800d8b8 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x9c>)
 800d872:	21e6      	movs	r1, #230	; 0xe6
 800d874:	e7da      	b.n	800d82c <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x10>
 800d876:	3101      	adds	r1, #1
 800d878:	8601      	strh	r1, [r0, #48]	; 0x30
 800d87a:	8dc1      	ldrh	r1, [r0, #46]	; 0x2e
 800d87c:	b901      	cbnz	r1, 800d880 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x64>
 800d87e:	85c5      	strh	r5, [r0, #46]	; 0x2e
 800d880:	8dc1      	ldrh	r1, [r0, #46]	; 0x2e
 800d882:	3901      	subs	r1, #1
 800d884:	b289      	uxth	r1, r1
 800d886:	85c1      	strh	r1, [r0, #46]	; 0x2e
 800d888:	eb00 0141 	add.w	r1, r0, r1, lsl #1
 800d88c:	834c      	strh	r4, [r1, #26]
 800d88e:	e7e6      	b.n	800d85e <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x42>
 800d890:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800d894:	f7ff bf4a 	b.w	800d72c <_ZN8touchgfx12TextProvider15fillInputBufferEv>
 800d898:	0801afbc 	.word	0x0801afbc
 800d89c:	0801c8c3 	.word	0x0801c8c3
 800d8a0:	0801afe3 	.word	0x0801afe3
 800d8a4:	0801b00f 	.word	0x0801b00f
 800d8a8:	0801c96d 	.word	0x0801c96d
 800d8ac:	0801c81c 	.word	0x0801c81c
 800d8b0:	0801cc44 	.word	0x0801cc44
 800d8b4:	0801c828 	.word	0x0801c828
 800d8b8:	0801c83b 	.word	0x0801c83b

0800d8bc <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>:
 800d8bc:	3a01      	subs	r2, #1
 800d8be:	b570      	push	{r4, r5, r6, lr}
 800d8c0:	b292      	uxth	r2, r2
 800d8c2:	f64f 76ff 	movw	r6, #65535	; 0xffff
 800d8c6:	42b2      	cmp	r2, r6
 800d8c8:	d019      	beq.n	800d8fe <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x42>
 800d8ca:	8b04      	ldrh	r4, [r0, #24]
 800d8cc:	f831 5b02 	ldrh.w	r5, [r1], #2
 800d8d0:	4294      	cmp	r4, r2
 800d8d2:	d805      	bhi.n	800d8e0 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x24>
 800d8d4:	4b19      	ldr	r3, [pc, #100]	; (800d93c <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x80>)
 800d8d6:	4a1a      	ldr	r2, [pc, #104]	; (800d940 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x84>)
 800d8d8:	481a      	ldr	r0, [pc, #104]	; (800d944 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x88>)
 800d8da:	21c5      	movs	r1, #197	; 0xc5
 800d8dc:	f00b fe4e 	bl	801957c <__assert_func>
 800d8e0:	8ac4      	ldrh	r4, [r0, #22]
 800d8e2:	4414      	add	r4, r2
 800d8e4:	b2a4      	uxth	r4, r4
 800d8e6:	2c01      	cmp	r4, #1
 800d8e8:	bf88      	it	hi
 800d8ea:	3c02      	subhi	r4, #2
 800d8ec:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 800d8f0:	3a01      	subs	r2, #1
 800d8f2:	8a64      	ldrh	r4, [r4, #18]
 800d8f4:	42ac      	cmp	r4, r5
 800d8f6:	b292      	uxth	r2, r2
 800d8f8:	d0e5      	beq.n	800d8c6 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0xa>
 800d8fa:	2000      	movs	r0, #0
 800d8fc:	bd70      	pop	{r4, r5, r6, pc}
 800d8fe:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 800d902:	2400      	movs	r4, #0
 800d904:	4413      	add	r3, r2
 800d906:	b2a2      	uxth	r2, r4
 800d908:	429a      	cmp	r2, r3
 800d90a:	da14      	bge.n	800d936 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x7a>
 800d90c:	8e06      	ldrh	r6, [r0, #48]	; 0x30
 800d90e:	f831 5014 	ldrh.w	r5, [r1, r4, lsl #1]
 800d912:	4296      	cmp	r6, r2
 800d914:	d802      	bhi.n	800d91c <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x60>
 800d916:	4b09      	ldr	r3, [pc, #36]	; (800d93c <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x80>)
 800d918:	4a0b      	ldr	r2, [pc, #44]	; (800d948 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x8c>)
 800d91a:	e7dd      	b.n	800d8d8 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x1c>
 800d91c:	8dc6      	ldrh	r6, [r0, #46]	; 0x2e
 800d91e:	4432      	add	r2, r6
 800d920:	b292      	uxth	r2, r2
 800d922:	2a09      	cmp	r2, #9
 800d924:	bf88      	it	hi
 800d926:	3a0a      	subhi	r2, #10
 800d928:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 800d92c:	3401      	adds	r4, #1
 800d92e:	8b52      	ldrh	r2, [r2, #26]
 800d930:	42aa      	cmp	r2, r5
 800d932:	d0e8      	beq.n	800d906 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x4a>
 800d934:	e7e1      	b.n	800d8fa <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x3e>
 800d936:	2001      	movs	r0, #1
 800d938:	e7e0      	b.n	800d8fc <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x40>
 800d93a:	bf00      	nop
 800d93c:	0801b00f 	.word	0x0801b00f
 800d940:	0801ccc8 	.word	0x0801ccc8
 800d944:	0801afe3 	.word	0x0801afe3
 800d948:	0801c96d 	.word	0x0801c96d

0800d94c <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>:
 800d94c:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d950:	4605      	mov	r5, r0
 800d952:	4616      	mov	r6, r2
 800d954:	1c8c      	adds	r4, r1, #2
 800d956:	8809      	ldrh	r1, [r1, #0]
 800d958:	ea4f 3a11 	mov.w	sl, r1, lsr #12
 800d95c:	f834 301a 	ldrh.w	r3, [r4, sl, lsl #1]
 800d960:	42b3      	cmp	r3, r6
 800d962:	d124      	bne.n	800d9ae <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x62>
 800d964:	f3c1 2903 	ubfx	r9, r1, #8, #4
 800d968:	f3c1 1803 	ubfx	r8, r1, #4, #4
 800d96c:	f001 070f 	and.w	r7, r1, #15
 800d970:	f8cd 8000 	str.w	r8, [sp]
 800d974:	464b      	mov	r3, r9
 800d976:	4652      	mov	r2, sl
 800d978:	4621      	mov	r1, r4
 800d97a:	4628      	mov	r0, r5
 800d97c:	f7ff ff9e 	bl	800d8bc <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>
 800d980:	4683      	mov	fp, r0
 800d982:	b168      	cbz	r0, 800d9a0 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x54>
 800d984:	eb0a 0109 	add.w	r1, sl, r9
 800d988:	4441      	add	r1, r8
 800d98a:	eb04 0341 	add.w	r3, r4, r1, lsl #1
 800d98e:	463a      	mov	r2, r7
 800d990:	4649      	mov	r1, r9
 800d992:	4628      	mov	r0, r5
 800d994:	f7ff ff42 	bl	800d81c <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>
 800d998:	4658      	mov	r0, fp
 800d99a:	b003      	add	sp, #12
 800d99c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d9a0:	eb07 010a 	add.w	r1, r7, sl
 800d9a4:	4449      	add	r1, r9
 800d9a6:	4441      	add	r1, r8
 800d9a8:	eb04 0141 	add.w	r1, r4, r1, lsl #1
 800d9ac:	e7d2      	b.n	800d954 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x8>
 800d9ae:	f04f 0b00 	mov.w	fp, #0
 800d9b2:	e7f1      	b.n	800d998 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x4c>

0800d9b4 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>:
 800d9b4:	b570      	push	{r4, r5, r6, lr}
 800d9b6:	8810      	ldrh	r0, [r2, #0]
 800d9b8:	4298      	cmp	r0, r3
 800d9ba:	d817      	bhi.n	800d9ec <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 800d9bc:	1e48      	subs	r0, r1, #1
 800d9be:	f832 0020 	ldrh.w	r0, [r2, r0, lsl #2]
 800d9c2:	4298      	cmp	r0, r3
 800d9c4:	d312      	bcc.n	800d9ec <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 800d9c6:	2400      	movs	r4, #0
 800d9c8:	428c      	cmp	r4, r1
 800d9ca:	d20f      	bcs.n	800d9ec <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 800d9cc:	1860      	adds	r0, r4, r1
 800d9ce:	1040      	asrs	r0, r0, #1
 800d9d0:	0085      	lsls	r5, r0, #2
 800d9d2:	f832 6020 	ldrh.w	r6, [r2, r0, lsl #2]
 800d9d6:	42b3      	cmp	r3, r6
 800d9d8:	d902      	bls.n	800d9e0 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x2c>
 800d9da:	3001      	adds	r0, #1
 800d9dc:	b284      	uxth	r4, r0
 800d9de:	e7f3      	b.n	800d9c8 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 800d9e0:	d201      	bcs.n	800d9e6 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x32>
 800d9e2:	b281      	uxth	r1, r0
 800d9e4:	e7f0      	b.n	800d9c8 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 800d9e6:	442a      	add	r2, r5
 800d9e8:	8850      	ldrh	r0, [r2, #2]
 800d9ea:	bd70      	pop	{r4, r5, r6, pc}
 800d9ec:	2000      	movs	r0, #0
 800d9ee:	e7fc      	b.n	800d9ea <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x36>

0800d9f0 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>:
 800d9f0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800d9f4:	6bc5      	ldr	r5, [r0, #60]	; 0x3c
 800d9f6:	886f      	ldrh	r7, [r5, #2]
 800d9f8:	4604      	mov	r4, r0
 800d9fa:	087f      	lsrs	r7, r7, #1
 800d9fc:	260b      	movs	r6, #11
 800d9fe:	3e01      	subs	r6, #1
 800da00:	d01b      	beq.n	800da3a <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x4a>
 800da02:	8e23      	ldrh	r3, [r4, #48]	; 0x30
 800da04:	b92b      	cbnz	r3, 800da12 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x22>
 800da06:	4b0e      	ldr	r3, [pc, #56]	; (800da40 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x50>)
 800da08:	4a0e      	ldr	r2, [pc, #56]	; (800da44 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x54>)
 800da0a:	480f      	ldr	r0, [pc, #60]	; (800da48 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x58>)
 800da0c:	21c0      	movs	r1, #192	; 0xc0
 800da0e:	f00b fdb5 	bl	801957c <__assert_func>
 800da12:	8de3      	ldrh	r3, [r4, #46]	; 0x2e
 800da14:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 800da18:	462a      	mov	r2, r5
 800da1a:	f8b3 801a 	ldrh.w	r8, [r3, #26]
 800da1e:	4639      	mov	r1, r7
 800da20:	4643      	mov	r3, r8
 800da22:	4620      	mov	r0, r4
 800da24:	f7ff ffc6 	bl	800d9b4 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>
 800da28:	b138      	cbz	r0, 800da3a <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x4a>
 800da2a:	eb05 0140 	add.w	r1, r5, r0, lsl #1
 800da2e:	4642      	mov	r2, r8
 800da30:	4620      	mov	r0, r4
 800da32:	f7ff ff8b 	bl	800d94c <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>
 800da36:	2800      	cmp	r0, #0
 800da38:	d1e1      	bne.n	800d9fe <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0xe>
 800da3a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800da3e:	bf00      	nop
 800da40:	0801afbc 	.word	0x0801afbc
 800da44:	0801ca3f 	.word	0x0801ca3f
 800da48:	0801afe3 	.word	0x0801afe3

0800da4c <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>:
 800da4c:	4b01      	ldr	r3, [pc, #4]	; (800da54 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE+0x8>)
 800da4e:	6018      	str	r0, [r3, #0]
 800da50:	4770      	bx	lr
 800da52:	bf00      	nop
 800da54:	200123b8 	.word	0x200123b8

0800da58 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>:
 800da58:	4b07      	ldr	r3, [pc, #28]	; (800da78 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x20>)
 800da5a:	881a      	ldrh	r2, [r3, #0]
 800da5c:	4282      	cmp	r2, r0
 800da5e:	d809      	bhi.n	800da74 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x1c>
 800da60:	4b06      	ldr	r3, [pc, #24]	; (800da7c <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x24>)
 800da62:	881b      	ldrh	r3, [r3, #0]
 800da64:	4413      	add	r3, r2
 800da66:	4298      	cmp	r0, r3
 800da68:	da04      	bge.n	800da74 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x1c>
 800da6a:	4b05      	ldr	r3, [pc, #20]	; (800da80 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x28>)
 800da6c:	681b      	ldr	r3, [r3, #0]
 800da6e:	f853 0020 	ldr.w	r0, [r3, r0, lsl #2]
 800da72:	4770      	bx	lr
 800da74:	2000      	movs	r0, #0
 800da76:	4770      	bx	lr
 800da78:	200123d8 	.word	0x200123d8
 800da7c:	200123dc 	.word	0x200123dc
 800da80:	200123bc 	.word	0x200123bc

0800da84 <_ZN8touchgfx6Bitmap10clearCacheEv>:
 800da84:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800da88:	4d28      	ldr	r5, [pc, #160]	; (800db2c <_ZN8touchgfx6Bitmap10clearCacheEv+0xa8>)
 800da8a:	682b      	ldr	r3, [r5, #0]
 800da8c:	2b00      	cmp	r3, #0
 800da8e:	d04a      	beq.n	800db26 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa2>
 800da90:	4a27      	ldr	r2, [pc, #156]	; (800db30 <_ZN8touchgfx6Bitmap10clearCacheEv+0xac>)
 800da92:	4e28      	ldr	r6, [pc, #160]	; (800db34 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb0>)
 800da94:	8810      	ldrh	r0, [r2, #0]
 800da96:	f8b6 8000 	ldrh.w	r8, [r6]
 800da9a:	4c27      	ldr	r4, [pc, #156]	; (800db38 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb4>)
 800da9c:	4f27      	ldr	r7, [pc, #156]	; (800db3c <_ZN8touchgfx6Bitmap10clearCacheEv+0xb8>)
 800da9e:	4440      	add	r0, r8
 800daa0:	1c41      	adds	r1, r0, #1
 800daa2:	f021 0101 	bic.w	r1, r1, #1
 800daa6:	0409      	lsls	r1, r1, #16
 800daa8:	0c09      	lsrs	r1, r1, #16
 800daaa:	ea4f 0e80 	mov.w	lr, r0, lsl #2
 800daae:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 800dab2:	eb03 020e 	add.w	r2, r3, lr
 800dab6:	eb0e 010c 	add.w	r1, lr, ip
 800daba:	6022      	str	r2, [r4, #0]
 800dabc:	185a      	adds	r2, r3, r1
 800dabe:	603a      	str	r2, [r7, #0]
 800dac0:	220e      	movs	r2, #14
 800dac2:	fb02 f208 	mul.w	r2, r2, r8
 800dac6:	3203      	adds	r2, #3
 800dac8:	f022 0203 	bic.w	r2, r2, #3
 800dacc:	4411      	add	r1, r2
 800dace:	440b      	add	r3, r1
 800dad0:	491b      	ldr	r1, [pc, #108]	; (800db40 <_ZN8touchgfx6Bitmap10clearCacheEv+0xbc>)
 800dad2:	600b      	str	r3, [r1, #0]
 800dad4:	491b      	ldr	r1, [pc, #108]	; (800db44 <_ZN8touchgfx6Bitmap10clearCacheEv+0xc0>)
 800dad6:	2300      	movs	r3, #0
 800dad8:	800b      	strh	r3, [r1, #0]
 800dada:	491b      	ldr	r1, [pc, #108]	; (800db48 <_ZN8touchgfx6Bitmap10clearCacheEv+0xc4>)
 800dadc:	6809      	ldr	r1, [r1, #0]
 800dade:	eba1 010e 	sub.w	r1, r1, lr
 800dae2:	eba1 010c 	sub.w	r1, r1, ip
 800dae6:	1a8a      	subs	r2, r1, r2
 800dae8:	4918      	ldr	r1, [pc, #96]	; (800db4c <_ZN8touchgfx6Bitmap10clearCacheEv+0xc8>)
 800daea:	600a      	str	r2, [r1, #0]
 800daec:	4a18      	ldr	r2, [pc, #96]	; (800db50 <_ZN8touchgfx6Bitmap10clearCacheEv+0xcc>)
 800daee:	469c      	mov	ip, r3
 800daf0:	8013      	strh	r3, [r2, #0]
 800daf2:	f64f 71ff 	movw	r1, #65535	; 0xffff
 800daf6:	4283      	cmp	r3, r0
 800daf8:	d10d      	bne.n	800db16 <_ZN8touchgfx6Bitmap10clearCacheEv+0x92>
 800dafa:	8835      	ldrh	r5, [r6, #0]
 800dafc:	6838      	ldr	r0, [r7, #0]
 800dafe:	2300      	movs	r3, #0
 800db00:	240e      	movs	r4, #14
 800db02:	429d      	cmp	r5, r3
 800db04:	d90f      	bls.n	800db26 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa2>
 800db06:	fb04 0203 	mla	r2, r4, r3, r0
 800db0a:	3301      	adds	r3, #1
 800db0c:	7b11      	ldrb	r1, [r2, #12]
 800db0e:	f36f 1145 	bfc	r1, #5, #1
 800db12:	7311      	strb	r1, [r2, #12]
 800db14:	e7f5      	b.n	800db02 <_ZN8touchgfx6Bitmap10clearCacheEv+0x7e>
 800db16:	682a      	ldr	r2, [r5, #0]
 800db18:	f842 c023 	str.w	ip, [r2, r3, lsl #2]
 800db1c:	6822      	ldr	r2, [r4, #0]
 800db1e:	f822 1013 	strh.w	r1, [r2, r3, lsl #1]
 800db22:	3301      	adds	r3, #1
 800db24:	e7e7      	b.n	800daf6 <_ZN8touchgfx6Bitmap10clearCacheEv+0x72>
 800db26:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800db2a:	bf00      	nop
 800db2c:	200123bc 	.word	0x200123bc
 800db30:	200123d8 	.word	0x200123d8
 800db34:	200123dc 	.word	0x200123dc
 800db38:	200123d0 	.word	0x200123d0
 800db3c:	200123c0 	.word	0x200123c0
 800db40:	200123c8 	.word	0x200123c8
 800db44:	200123da 	.word	0x200123da
 800db48:	200123c4 	.word	0x200123c4
 800db4c:	200123d4 	.word	0x200123d4
 800db50:	200123cc 	.word	0x200123cc

0800db54 <_ZN8touchgfx6Bitmap8setCacheEPtmm>:
 800db54:	b510      	push	{r4, lr}
 800db56:	4b10      	ldr	r3, [pc, #64]	; (800db98 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x44>)
 800db58:	681b      	ldr	r3, [r3, #0]
 800db5a:	b9db      	cbnz	r3, 800db94 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x40>
 800db5c:	b1d1      	cbz	r1, 800db94 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x40>
 800db5e:	4b0f      	ldr	r3, [pc, #60]	; (800db9c <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x48>)
 800db60:	801a      	strh	r2, [r3, #0]
 800db62:	4b0f      	ldr	r3, [pc, #60]	; (800dba0 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x4c>)
 800db64:	881b      	ldrh	r3, [r3, #0]
 800db66:	b292      	uxth	r2, r2
 800db68:	240e      	movs	r4, #14
 800db6a:	4413      	add	r3, r2
 800db6c:	4362      	muls	r2, r4
 800db6e:	2406      	movs	r4, #6
 800db70:	fb04 2203 	mla	r2, r4, r3, r2
 800db74:	428a      	cmp	r2, r1
 800db76:	d305      	bcc.n	800db84 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x30>
 800db78:	4b0a      	ldr	r3, [pc, #40]	; (800dba4 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x50>)
 800db7a:	4a0b      	ldr	r2, [pc, #44]	; (800dba8 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x54>)
 800db7c:	480b      	ldr	r0, [pc, #44]	; (800dbac <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x58>)
 800db7e:	2137      	movs	r1, #55	; 0x37
 800db80:	f00b fcfc 	bl	801957c <__assert_func>
 800db84:	4b0a      	ldr	r3, [pc, #40]	; (800dbb0 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x5c>)
 800db86:	6019      	str	r1, [r3, #0]
 800db88:	4b0a      	ldr	r3, [pc, #40]	; (800dbb4 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x60>)
 800db8a:	6018      	str	r0, [r3, #0]
 800db8c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800db90:	f7ff bf78 	b.w	800da84 <_ZN8touchgfx6Bitmap10clearCacheEv>
 800db94:	bd10      	pop	{r4, pc}
 800db96:	bf00      	nop
 800db98:	200123c8 	.word	0x200123c8
 800db9c:	200123dc 	.word	0x200123dc
 800dba0:	200123d8 	.word	0x200123d8
 800dba4:	0801cdf6 	.word	0x0801cdf6
 800dba8:	0801ce4f 	.word	0x0801ce4f
 800dbac:	0801cdd1 	.word	0x0801cdd1
 800dbb0:	200123c4 	.word	0x200123c4
 800dbb4:	200123bc 	.word	0x200123bc

0800dbb8 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>:
 800dbb8:	b470      	push	{r4, r5, r6}
 800dbba:	4c07      	ldr	r4, [pc, #28]	; (800dbd8 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x20>)
 800dbbc:	6826      	ldr	r6, [r4, #0]
 800dbbe:	4605      	mov	r5, r0
 800dbc0:	4610      	mov	r0, r2
 800dbc2:	9a03      	ldr	r2, [sp, #12]
 800dbc4:	b936      	cbnz	r6, 800dbd4 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x1c>
 800dbc6:	6025      	str	r5, [r4, #0]
 800dbc8:	4c04      	ldr	r4, [pc, #16]	; (800dbdc <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x24>)
 800dbca:	8021      	strh	r1, [r4, #0]
 800dbcc:	bc70      	pop	{r4, r5, r6}
 800dbce:	4619      	mov	r1, r3
 800dbd0:	f7ff bfc0 	b.w	800db54 <_ZN8touchgfx6Bitmap8setCacheEPtmm>
 800dbd4:	bc70      	pop	{r4, r5, r6}
 800dbd6:	4770      	bx	lr
 800dbd8:	200123e0 	.word	0x200123e0
 800dbdc:	200123d8 	.word	0x200123d8

0800dbe0 <_ZNK8touchgfx6Bitmap8getWidthEv>:
 800dbe0:	b508      	push	{r3, lr}
 800dbe2:	4b14      	ldr	r3, [pc, #80]	; (800dc34 <_ZNK8touchgfx6Bitmap8getWidthEv+0x54>)
 800dbe4:	6819      	ldr	r1, [r3, #0]
 800dbe6:	b931      	cbnz	r1, 800dbf6 <_ZNK8touchgfx6Bitmap8getWidthEv+0x16>
 800dbe8:	4b13      	ldr	r3, [pc, #76]	; (800dc38 <_ZNK8touchgfx6Bitmap8getWidthEv+0x58>)
 800dbea:	4a14      	ldr	r2, [pc, #80]	; (800dc3c <_ZNK8touchgfx6Bitmap8getWidthEv+0x5c>)
 800dbec:	4814      	ldr	r0, [pc, #80]	; (800dc40 <_ZNK8touchgfx6Bitmap8getWidthEv+0x60>)
 800dbee:	f44f 713e 	mov.w	r1, #760	; 0x2f8
 800dbf2:	f00b fcc3 	bl	801957c <__assert_func>
 800dbf6:	4a13      	ldr	r2, [pc, #76]	; (800dc44 <_ZNK8touchgfx6Bitmap8getWidthEv+0x64>)
 800dbf8:	8803      	ldrh	r3, [r0, #0]
 800dbfa:	8812      	ldrh	r2, [r2, #0]
 800dbfc:	4293      	cmp	r3, r2
 800dbfe:	d204      	bcs.n	800dc0a <_ZNK8touchgfx6Bitmap8getWidthEv+0x2a>
 800dc00:	2214      	movs	r2, #20
 800dc02:	fb02 1303 	mla	r3, r2, r3, r1
 800dc06:	8918      	ldrh	r0, [r3, #8]
 800dc08:	bd08      	pop	{r3, pc}
 800dc0a:	490f      	ldr	r1, [pc, #60]	; (800dc48 <_ZNK8touchgfx6Bitmap8getWidthEv+0x68>)
 800dc0c:	8809      	ldrh	r1, [r1, #0]
 800dc0e:	4411      	add	r1, r2
 800dc10:	428b      	cmp	r3, r1
 800dc12:	da06      	bge.n	800dc22 <_ZNK8touchgfx6Bitmap8getWidthEv+0x42>
 800dc14:	1a9b      	subs	r3, r3, r2
 800dc16:	4a0d      	ldr	r2, [pc, #52]	; (800dc4c <_ZNK8touchgfx6Bitmap8getWidthEv+0x6c>)
 800dc18:	6812      	ldr	r2, [r2, #0]
 800dc1a:	210e      	movs	r1, #14
 800dc1c:	fb01 2303 	mla	r3, r1, r3, r2
 800dc20:	e7f1      	b.n	800dc06 <_ZNK8touchgfx6Bitmap8getWidthEv+0x26>
 800dc22:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 800dc26:	4293      	cmp	r3, r2
 800dc28:	bf0a      	itet	eq
 800dc2a:	4b09      	ldreq	r3, [pc, #36]	; (800dc50 <_ZNK8touchgfx6Bitmap8getWidthEv+0x70>)
 800dc2c:	2000      	movne	r0, #0
 800dc2e:	8818      	ldrheq	r0, [r3, #0]
 800dc30:	e7ea      	b.n	800dc08 <_ZNK8touchgfx6Bitmap8getWidthEv+0x28>
 800dc32:	bf00      	nop
 800dc34:	200123e0 	.word	0x200123e0
 800dc38:	0801c464 	.word	0x0801c464
 800dc3c:	0801cefc 	.word	0x0801cefc
 800dc40:	0801cdd1 	.word	0x0801cdd1
 800dc44:	200123d8 	.word	0x200123d8
 800dc48:	200123dc 	.word	0x200123dc
 800dc4c:	200123c0 	.word	0x200123c0
 800dc50:	2001232c 	.word	0x2001232c

0800dc54 <_ZNK8touchgfx6Bitmap9getHeightEv>:
 800dc54:	b508      	push	{r3, lr}
 800dc56:	4b14      	ldr	r3, [pc, #80]	; (800dca8 <_ZNK8touchgfx6Bitmap9getHeightEv+0x54>)
 800dc58:	6819      	ldr	r1, [r3, #0]
 800dc5a:	b931      	cbnz	r1, 800dc6a <_ZNK8touchgfx6Bitmap9getHeightEv+0x16>
 800dc5c:	4b13      	ldr	r3, [pc, #76]	; (800dcac <_ZNK8touchgfx6Bitmap9getHeightEv+0x58>)
 800dc5e:	4a14      	ldr	r2, [pc, #80]	; (800dcb0 <_ZNK8touchgfx6Bitmap9getHeightEv+0x5c>)
 800dc60:	4814      	ldr	r0, [pc, #80]	; (800dcb4 <_ZNK8touchgfx6Bitmap9getHeightEv+0x60>)
 800dc62:	f44f 7143 	mov.w	r1, #780	; 0x30c
 800dc66:	f00b fc89 	bl	801957c <__assert_func>
 800dc6a:	4a13      	ldr	r2, [pc, #76]	; (800dcb8 <_ZNK8touchgfx6Bitmap9getHeightEv+0x64>)
 800dc6c:	8803      	ldrh	r3, [r0, #0]
 800dc6e:	8812      	ldrh	r2, [r2, #0]
 800dc70:	4293      	cmp	r3, r2
 800dc72:	d204      	bcs.n	800dc7e <_ZNK8touchgfx6Bitmap9getHeightEv+0x2a>
 800dc74:	2214      	movs	r2, #20
 800dc76:	fb02 1303 	mla	r3, r2, r3, r1
 800dc7a:	8958      	ldrh	r0, [r3, #10]
 800dc7c:	bd08      	pop	{r3, pc}
 800dc7e:	490f      	ldr	r1, [pc, #60]	; (800dcbc <_ZNK8touchgfx6Bitmap9getHeightEv+0x68>)
 800dc80:	8809      	ldrh	r1, [r1, #0]
 800dc82:	4411      	add	r1, r2
 800dc84:	428b      	cmp	r3, r1
 800dc86:	da06      	bge.n	800dc96 <_ZNK8touchgfx6Bitmap9getHeightEv+0x42>
 800dc88:	1a9b      	subs	r3, r3, r2
 800dc8a:	4a0d      	ldr	r2, [pc, #52]	; (800dcc0 <_ZNK8touchgfx6Bitmap9getHeightEv+0x6c>)
 800dc8c:	6812      	ldr	r2, [r2, #0]
 800dc8e:	210e      	movs	r1, #14
 800dc90:	fb01 2303 	mla	r3, r1, r3, r2
 800dc94:	e7f1      	b.n	800dc7a <_ZNK8touchgfx6Bitmap9getHeightEv+0x26>
 800dc96:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 800dc9a:	4293      	cmp	r3, r2
 800dc9c:	bf0a      	itet	eq
 800dc9e:	4b09      	ldreq	r3, [pc, #36]	; (800dcc4 <_ZNK8touchgfx6Bitmap9getHeightEv+0x70>)
 800dca0:	2000      	movne	r0, #0
 800dca2:	8818      	ldrheq	r0, [r3, #0]
 800dca4:	e7ea      	b.n	800dc7c <_ZNK8touchgfx6Bitmap9getHeightEv+0x28>
 800dca6:	bf00      	nop
 800dca8:	200123e0 	.word	0x200123e0
 800dcac:	0801c464 	.word	0x0801c464
 800dcb0:	0801cf28 	.word	0x0801cf28
 800dcb4:	0801cdd1 	.word	0x0801cdd1
 800dcb8:	200123d8 	.word	0x200123d8
 800dcbc:	200123dc 	.word	0x200123dc
 800dcc0:	200123c0 	.word	0x200123c0
 800dcc4:	2001232e 	.word	0x2001232e

0800dcc8 <_ZNK8touchgfx6Bitmap12getSolidRectEv>:
 800dcc8:	b510      	push	{r4, lr}
 800dcca:	4b23      	ldr	r3, [pc, #140]	; (800dd58 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x90>)
 800dccc:	681c      	ldr	r4, [r3, #0]
 800dcce:	b934      	cbnz	r4, 800dcde <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x16>
 800dcd0:	4b22      	ldr	r3, [pc, #136]	; (800dd5c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x94>)
 800dcd2:	4a23      	ldr	r2, [pc, #140]	; (800dd60 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x98>)
 800dcd4:	4823      	ldr	r0, [pc, #140]	; (800dd64 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x9c>)
 800dcd6:	f44f 7148 	mov.w	r1, #800	; 0x320
 800dcda:	f00b fc4f 	bl	801957c <__assert_func>
 800dcde:	4a22      	ldr	r2, [pc, #136]	; (800dd68 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xa0>)
 800dce0:	880b      	ldrh	r3, [r1, #0]
 800dce2:	8812      	ldrh	r2, [r2, #0]
 800dce4:	4293      	cmp	r3, r2
 800dce6:	d211      	bcs.n	800dd0c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x44>
 800dce8:	2214      	movs	r2, #20
 800dcea:	fb02 4303 	mla	r3, r2, r3, r4
 800dcee:	8a1a      	ldrh	r2, [r3, #16]
 800dcf0:	f9b3 400c 	ldrsh.w	r4, [r3, #12]
 800dcf4:	f9b3 100e 	ldrsh.w	r1, [r3, #14]
 800dcf8:	8a5b      	ldrh	r3, [r3, #18]
 800dcfa:	8004      	strh	r4, [r0, #0]
 800dcfc:	f3c2 020c 	ubfx	r2, r2, #0, #13
 800dd00:	f3c3 030c 	ubfx	r3, r3, #0, #13
 800dd04:	8041      	strh	r1, [r0, #2]
 800dd06:	8082      	strh	r2, [r0, #4]
 800dd08:	80c3      	strh	r3, [r0, #6]
 800dd0a:	e00e      	b.n	800dd2a <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x62>
 800dd0c:	4917      	ldr	r1, [pc, #92]	; (800dd6c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xa4>)
 800dd0e:	8809      	ldrh	r1, [r1, #0]
 800dd10:	4411      	add	r1, r2
 800dd12:	428b      	cmp	r3, r1
 800dd14:	da0a      	bge.n	800dd2c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x64>
 800dd16:	1a9b      	subs	r3, r3, r2
 800dd18:	4a15      	ldr	r2, [pc, #84]	; (800dd70 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xa8>)
 800dd1a:	6812      	ldr	r2, [r2, #0]
 800dd1c:	210e      	movs	r1, #14
 800dd1e:	fb01 2303 	mla	r3, r1, r3, r2
 800dd22:	681a      	ldr	r2, [r3, #0]
 800dd24:	6002      	str	r2, [r0, #0]
 800dd26:	685a      	ldr	r2, [r3, #4]
 800dd28:	6042      	str	r2, [r0, #4]
 800dd2a:	bd10      	pop	{r4, pc}
 800dd2c:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 800dd30:	4293      	cmp	r3, r2
 800dd32:	d10b      	bne.n	800dd4c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x84>
 800dd34:	4b0f      	ldr	r3, [pc, #60]	; (800dd74 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xac>)
 800dd36:	f9b3 1000 	ldrsh.w	r1, [r3]
 800dd3a:	4b0f      	ldr	r3, [pc, #60]	; (800dd78 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xb0>)
 800dd3c:	8081      	strh	r1, [r0, #4]
 800dd3e:	f9b3 2000 	ldrsh.w	r2, [r3]
 800dd42:	80c2      	strh	r2, [r0, #6]
 800dd44:	2300      	movs	r3, #0
 800dd46:	8003      	strh	r3, [r0, #0]
 800dd48:	8043      	strh	r3, [r0, #2]
 800dd4a:	e7ee      	b.n	800dd2a <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x62>
 800dd4c:	2300      	movs	r3, #0
 800dd4e:	8003      	strh	r3, [r0, #0]
 800dd50:	8043      	strh	r3, [r0, #2]
 800dd52:	8083      	strh	r3, [r0, #4]
 800dd54:	e7d8      	b.n	800dd08 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x40>
 800dd56:	bf00      	nop
 800dd58:	200123e0 	.word	0x200123e0
 800dd5c:	0801c464 	.word	0x0801c464
 800dd60:	0801ce95 	.word	0x0801ce95
 800dd64:	0801cdd1 	.word	0x0801cdd1
 800dd68:	200123d8 	.word	0x200123d8
 800dd6c:	200123dc 	.word	0x200123dc
 800dd70:	200123c0 	.word	0x200123c0
 800dd74:	2001232c 	.word	0x2001232c
 800dd78:	2001232e 	.word	0x2001232e

0800dd7c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>:
 800dd7c:	4b18      	ldr	r3, [pc, #96]	; (800dde0 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x64>)
 800dd7e:	681b      	ldr	r3, [r3, #0]
 800dd80:	b34b      	cbz	r3, 800ddd6 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5a>
 800dd82:	4a18      	ldr	r2, [pc, #96]	; (800dde4 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x68>)
 800dd84:	8800      	ldrh	r0, [r0, #0]
 800dd86:	8812      	ldrh	r2, [r2, #0]
 800dd88:	4290      	cmp	r0, r2
 800dd8a:	d211      	bcs.n	800ddb0 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x34>
 800dd8c:	2214      	movs	r2, #20
 800dd8e:	fb02 3300 	mla	r3, r2, r0, r3
 800dd92:	8a1a      	ldrh	r2, [r3, #16]
 800dd94:	8919      	ldrh	r1, [r3, #8]
 800dd96:	f3c2 020c 	ubfx	r2, r2, #0, #13
 800dd9a:	428a      	cmp	r2, r1
 800dd9c:	db1d      	blt.n	800ddda <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5e>
 800dd9e:	8a58      	ldrh	r0, [r3, #18]
 800dda0:	f3c0 000c 	ubfx	r0, r0, #0, #13
 800dda4:	895b      	ldrh	r3, [r3, #10]
 800dda6:	4298      	cmp	r0, r3
 800dda8:	bfac      	ite	ge
 800ddaa:	2000      	movge	r0, #0
 800ddac:	2001      	movlt	r0, #1
 800ddae:	4770      	bx	lr
 800ddb0:	4b0d      	ldr	r3, [pc, #52]	; (800dde8 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x6c>)
 800ddb2:	881b      	ldrh	r3, [r3, #0]
 800ddb4:	4413      	add	r3, r2
 800ddb6:	4298      	cmp	r0, r3
 800ddb8:	da0d      	bge.n	800ddd6 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5a>
 800ddba:	4b0c      	ldr	r3, [pc, #48]	; (800ddec <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x70>)
 800ddbc:	681b      	ldr	r3, [r3, #0]
 800ddbe:	1a80      	subs	r0, r0, r2
 800ddc0:	220e      	movs	r2, #14
 800ddc2:	fb02 3300 	mla	r3, r2, r0, r3
 800ddc6:	f9b3 1004 	ldrsh.w	r1, [r3, #4]
 800ddca:	891a      	ldrh	r2, [r3, #8]
 800ddcc:	4291      	cmp	r1, r2
 800ddce:	db04      	blt.n	800ddda <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5e>
 800ddd0:	f9b3 0006 	ldrsh.w	r0, [r3, #6]
 800ddd4:	e7e6      	b.n	800dda4 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x28>
 800ddd6:	2000      	movs	r0, #0
 800ddd8:	4770      	bx	lr
 800ddda:	2001      	movs	r0, #1
 800dddc:	4770      	bx	lr
 800ddde:	bf00      	nop
 800dde0:	200123e0 	.word	0x200123e0
 800dde4:	200123d8 	.word	0x200123d8
 800dde8:	200123dc 	.word	0x200123dc
 800ddec:	200123c0 	.word	0x200123c0

0800ddf0 <_ZNK8touchgfx6Bitmap7getDataEv>:
 800ddf0:	b508      	push	{r3, lr}
 800ddf2:	4b12      	ldr	r3, [pc, #72]	; (800de3c <_ZNK8touchgfx6Bitmap7getDataEv+0x4c>)
 800ddf4:	6819      	ldr	r1, [r3, #0]
 800ddf6:	b931      	cbnz	r1, 800de06 <_ZNK8touchgfx6Bitmap7getDataEv+0x16>
 800ddf8:	4b11      	ldr	r3, [pc, #68]	; (800de40 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 800ddfa:	4a12      	ldr	r2, [pc, #72]	; (800de44 <_ZNK8touchgfx6Bitmap7getDataEv+0x54>)
 800ddfc:	4812      	ldr	r0, [pc, #72]	; (800de48 <_ZNK8touchgfx6Bitmap7getDataEv+0x58>)
 800ddfe:	f44f 7151 	mov.w	r1, #836	; 0x344
 800de02:	f00b fbbb 	bl	801957c <__assert_func>
 800de06:	8803      	ldrh	r3, [r0, #0]
 800de08:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800de0c:	4293      	cmp	r3, r2
 800de0e:	d012      	beq.n	800de36 <_ZNK8touchgfx6Bitmap7getDataEv+0x46>
 800de10:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 800de14:	4293      	cmp	r3, r2
 800de16:	d103      	bne.n	800de20 <_ZNK8touchgfx6Bitmap7getDataEv+0x30>
 800de18:	4b0c      	ldr	r3, [pc, #48]	; (800de4c <_ZNK8touchgfx6Bitmap7getDataEv+0x5c>)
 800de1a:	681b      	ldr	r3, [r3, #0]
 800de1c:	6c58      	ldr	r0, [r3, #68]	; 0x44
 800de1e:	bd08      	pop	{r3, pc}
 800de20:	4a0b      	ldr	r2, [pc, #44]	; (800de50 <_ZNK8touchgfx6Bitmap7getDataEv+0x60>)
 800de22:	6812      	ldr	r2, [r2, #0]
 800de24:	b11a      	cbz	r2, 800de2e <_ZNK8touchgfx6Bitmap7getDataEv+0x3e>
 800de26:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 800de2a:	2800      	cmp	r0, #0
 800de2c:	d1f7      	bne.n	800de1e <_ZNK8touchgfx6Bitmap7getDataEv+0x2e>
 800de2e:	2214      	movs	r2, #20
 800de30:	4353      	muls	r3, r2
 800de32:	58c8      	ldr	r0, [r1, r3]
 800de34:	e7f3      	b.n	800de1e <_ZNK8touchgfx6Bitmap7getDataEv+0x2e>
 800de36:	2000      	movs	r0, #0
 800de38:	e7f1      	b.n	800de1e <_ZNK8touchgfx6Bitmap7getDataEv+0x2e>
 800de3a:	bf00      	nop
 800de3c:	200123e0 	.word	0x200123e0
 800de40:	0801c464 	.word	0x0801c464
 800de44:	0801cecb 	.word	0x0801cecb
 800de48:	0801cdd1 	.word	0x0801cdd1
 800de4c:	20012338 	.word	0x20012338
 800de50:	200123bc 	.word	0x200123bc

0800de54 <_ZNK8touchgfx6Bitmap12getExtraDataEv>:
 800de54:	8802      	ldrh	r2, [r0, #0]
 800de56:	f64f 73fd 	movw	r3, #65533	; 0xfffd
 800de5a:	429a      	cmp	r2, r3
 800de5c:	d840      	bhi.n	800dee0 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8c>
 800de5e:	4b21      	ldr	r3, [pc, #132]	; (800dee4 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>)
 800de60:	881b      	ldrh	r3, [r3, #0]
 800de62:	429a      	cmp	r2, r3
 800de64:	d220      	bcs.n	800dea8 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x54>
 800de66:	4b20      	ldr	r3, [pc, #128]	; (800dee8 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x94>)
 800de68:	6819      	ldr	r1, [r3, #0]
 800de6a:	2314      	movs	r3, #20
 800de6c:	fb03 1302 	mla	r3, r3, r2, r1
 800de70:	6858      	ldr	r0, [r3, #4]
 800de72:	2800      	cmp	r0, #0
 800de74:	d035      	beq.n	800dee2 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 800de76:	491d      	ldr	r1, [pc, #116]	; (800deec <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>)
 800de78:	6809      	ldr	r1, [r1, #0]
 800de7a:	2900      	cmp	r1, #0
 800de7c:	d031      	beq.n	800dee2 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 800de7e:	f851 1022 	ldr.w	r1, [r1, r2, lsl #2]
 800de82:	b371      	cbz	r1, 800dee2 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 800de84:	895a      	ldrh	r2, [r3, #10]
 800de86:	8918      	ldrh	r0, [r3, #8]
 800de88:	4350      	muls	r0, r2
 800de8a:	7c5a      	ldrb	r2, [r3, #17]
 800de8c:	7cdb      	ldrb	r3, [r3, #19]
 800de8e:	0952      	lsrs	r2, r2, #5
 800de90:	f3c3 1342 	ubfx	r3, r3, #5, #3
 800de94:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 800de98:	2b0b      	cmp	r3, #11
 800de9a:	bf18      	it	ne
 800de9c:	0040      	lslne	r0, r0, #1
 800de9e:	3003      	adds	r0, #3
 800dea0:	f020 0003 	bic.w	r0, r0, #3
 800dea4:	4408      	add	r0, r1
 800dea6:	4770      	bx	lr
 800dea8:	4911      	ldr	r1, [pc, #68]	; (800def0 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 800deaa:	8809      	ldrh	r1, [r1, #0]
 800deac:	4419      	add	r1, r3
 800deae:	428a      	cmp	r2, r1
 800deb0:	da16      	bge.n	800dee0 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8c>
 800deb2:	4910      	ldr	r1, [pc, #64]	; (800def4 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa0>)
 800deb4:	6809      	ldr	r1, [r1, #0]
 800deb6:	1ad3      	subs	r3, r2, r3
 800deb8:	200e      	movs	r0, #14
 800deba:	fb00 1303 	mla	r3, r0, r3, r1
 800debe:	7b19      	ldrb	r1, [r3, #12]
 800dec0:	f001 011f 	and.w	r1, r1, #31
 800dec4:	290b      	cmp	r1, #11
 800dec6:	d10b      	bne.n	800dee0 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8c>
 800dec8:	8919      	ldrh	r1, [r3, #8]
 800deca:	8958      	ldrh	r0, [r3, #10]
 800decc:	4b07      	ldr	r3, [pc, #28]	; (800deec <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>)
 800dece:	4348      	muls	r0, r1
 800ded0:	6819      	ldr	r1, [r3, #0]
 800ded2:	3003      	adds	r0, #3
 800ded4:	f020 0303 	bic.w	r3, r0, #3
 800ded8:	f851 0022 	ldr.w	r0, [r1, r2, lsl #2]
 800dedc:	4418      	add	r0, r3
 800dede:	4770      	bx	lr
 800dee0:	2000      	movs	r0, #0
 800dee2:	4770      	bx	lr
 800dee4:	200123d8 	.word	0x200123d8
 800dee8:	200123e0 	.word	0x200123e0
 800deec:	200123bc 	.word	0x200123bc
 800def0:	200123dc 	.word	0x200123dc
 800def4:	200123c0 	.word	0x200123c0

0800def8 <_ZNK8touchgfx6Bitmap9getFormatEv>:
 800def8:	4b19      	ldr	r3, [pc, #100]	; (800df60 <_ZNK8touchgfx6Bitmap9getFormatEv+0x68>)
 800defa:	6819      	ldr	r1, [r3, #0]
 800defc:	8803      	ldrh	r3, [r0, #0]
 800defe:	b1e9      	cbz	r1, 800df3c <_ZNK8touchgfx6Bitmap9getFormatEv+0x44>
 800df00:	4a18      	ldr	r2, [pc, #96]	; (800df64 <_ZNK8touchgfx6Bitmap9getFormatEv+0x6c>)
 800df02:	8812      	ldrh	r2, [r2, #0]
 800df04:	429a      	cmp	r2, r3
 800df06:	d90a      	bls.n	800df1e <_ZNK8touchgfx6Bitmap9getFormatEv+0x26>
 800df08:	2214      	movs	r2, #20
 800df0a:	fb02 1303 	mla	r3, r2, r3, r1
 800df0e:	7c58      	ldrb	r0, [r3, #17]
 800df10:	0942      	lsrs	r2, r0, #5
 800df12:	7cd8      	ldrb	r0, [r3, #19]
 800df14:	f3c0 1042 	ubfx	r0, r0, #5, #3
 800df18:	ea40 00c2 	orr.w	r0, r0, r2, lsl #3
 800df1c:	4770      	bx	lr
 800df1e:	4912      	ldr	r1, [pc, #72]	; (800df68 <_ZNK8touchgfx6Bitmap9getFormatEv+0x70>)
 800df20:	8809      	ldrh	r1, [r1, #0]
 800df22:	4411      	add	r1, r2
 800df24:	428b      	cmp	r3, r1
 800df26:	da09      	bge.n	800df3c <_ZNK8touchgfx6Bitmap9getFormatEv+0x44>
 800df28:	1a9b      	subs	r3, r3, r2
 800df2a:	4a10      	ldr	r2, [pc, #64]	; (800df6c <_ZNK8touchgfx6Bitmap9getFormatEv+0x74>)
 800df2c:	6812      	ldr	r2, [r2, #0]
 800df2e:	210e      	movs	r1, #14
 800df30:	fb01 2303 	mla	r3, r1, r3, r2
 800df34:	7b18      	ldrb	r0, [r3, #12]
 800df36:	f000 001f 	and.w	r0, r0, #31
 800df3a:	4770      	bx	lr
 800df3c:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 800df40:	4293      	cmp	r3, r2
 800df42:	d10a      	bne.n	800df5a <_ZNK8touchgfx6Bitmap9getFormatEv+0x62>
 800df44:	4b0a      	ldr	r3, [pc, #40]	; (800df70 <_ZNK8touchgfx6Bitmap9getFormatEv+0x78>)
 800df46:	681b      	ldr	r3, [r3, #0]
 800df48:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 800df4c:	b10a      	cbz	r2, 800df52 <_ZNK8touchgfx6Bitmap9getFormatEv+0x5a>
 800df4e:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 800df50:	b900      	cbnz	r0, 800df54 <_ZNK8touchgfx6Bitmap9getFormatEv+0x5c>
 800df52:	6898      	ldr	r0, [r3, #8]
 800df54:	6803      	ldr	r3, [r0, #0]
 800df56:	6a1b      	ldr	r3, [r3, #32]
 800df58:	4718      	bx	r3
 800df5a:	2000      	movs	r0, #0
 800df5c:	4770      	bx	lr
 800df5e:	bf00      	nop
 800df60:	200123e0 	.word	0x200123e0
 800df64:	200123d8 	.word	0x200123d8
 800df68:	200123dc 	.word	0x200123dc
 800df6c:	200123c0 	.word	0x200123c0
 800df70:	20012338 	.word	0x20012338

0800df74 <_ZNK8touchgfx8LCD16bpp8bitDepthEv>:
 800df74:	2010      	movs	r0, #16
 800df76:	4770      	bx	lr

0800df78 <_ZNK8touchgfx8LCD16bpp17framebufferFormatEv>:
 800df78:	2000      	movs	r0, #0
 800df7a:	4770      	bx	lr

0800df7c <_ZNK8touchgfx8LCD16bpp20getColorFrom24BitRGBEhhh>:
 800df7c:	00d2      	lsls	r2, r2, #3
 800df7e:	0209      	lsls	r1, r1, #8
 800df80:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 800df84:	ea42 02d3 	orr.w	r2, r2, r3, lsr #3
 800df88:	f401 4078 	and.w	r0, r1, #63488	; 0xf800
 800df8c:	4310      	orrs	r0, r2
 800df8e:	4770      	bx	lr

0800df90 <_ZNK8touchgfx8LCD16bpp11getRedColorENS_9colortypeE>:
 800df90:	0a09      	lsrs	r1, r1, #8
 800df92:	f001 00f8 	and.w	r0, r1, #248	; 0xf8
 800df96:	4770      	bx	lr

0800df98 <_ZNK8touchgfx8LCD16bpp13getGreenColorENS_9colortypeE>:
 800df98:	08c9      	lsrs	r1, r1, #3
 800df9a:	f001 00fc 	and.w	r0, r1, #252	; 0xfc
 800df9e:	4770      	bx	lr

0800dfa0 <_ZNK8touchgfx8LCD16bpp12getBlueColorENS_9colortypeE>:
 800dfa0:	00c9      	lsls	r1, r1, #3
 800dfa2:	f001 00f8 	and.w	r0, r1, #248	; 0xf8
 800dfa6:	4770      	bx	lr

0800dfa8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth>:
 800dfa8:	2bff      	cmp	r3, #255	; 0xff
 800dfaa:	d050      	beq.n	800e04e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa6>
 800dfac:	2a0b      	cmp	r2, #11
 800dfae:	d04a      	beq.n	800e046 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 800dfb0:	d80e      	bhi.n	800dfd0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x28>
 800dfb2:	2a03      	cmp	r2, #3
 800dfb4:	d03f      	beq.n	800e036 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8e>
 800dfb6:	d804      	bhi.n	800dfc2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x1a>
 800dfb8:	2a01      	cmp	r2, #1
 800dfba:	d03e      	beq.n	800e03a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x92>
 800dfbc:	d93f      	bls.n	800e03e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x96>
 800dfbe:	6b80      	ldr	r0, [r0, #56]	; 0x38
 800dfc0:	4770      	bx	lr
 800dfc2:	2a09      	cmp	r2, #9
 800dfc4:	d03f      	beq.n	800e046 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 800dfc6:	d83c      	bhi.n	800e042 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 800dfc8:	2a08      	cmp	r2, #8
 800dfca:	d03a      	beq.n	800e042 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 800dfcc:	2000      	movs	r0, #0
 800dfce:	4770      	bx	lr
 800dfd0:	2a2f      	cmp	r2, #47	; 0x2f
 800dfd2:	d024      	beq.n	800e01e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x76>
 800dfd4:	d80d      	bhi.n	800dff2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x4a>
 800dfd6:	2a2d      	cmp	r2, #45	; 0x2d
 800dfd8:	d014      	beq.n	800e004 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x5c>
 800dfda:	d826      	bhi.n	800e02a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x82>
 800dfdc:	2a2c      	cmp	r2, #44	; 0x2c
 800dfde:	d1f5      	bne.n	800dfcc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800dfe0:	684b      	ldr	r3, [r1, #4]
 800dfe2:	781b      	ldrb	r3, [r3, #0]
 800dfe4:	2b01      	cmp	r3, #1
 800dfe6:	d018      	beq.n	800e01a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x72>
 800dfe8:	d323      	bcc.n	800e032 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8a>
 800dfea:	2b02      	cmp	r3, #2
 800dfec:	d1ee      	bne.n	800dfcc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800dfee:	6880      	ldr	r0, [r0, #8]
 800dff0:	4770      	bx	lr
 800dff2:	2a31      	cmp	r2, #49	; 0x31
 800dff4:	d004      	beq.n	800e000 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x58>
 800dff6:	d328      	bcc.n	800e04a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 800dff8:	2a32      	cmp	r2, #50	; 0x32
 800dffa:	d026      	beq.n	800e04a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 800dffc:	2a33      	cmp	r2, #51	; 0x33
 800dffe:	d1e5      	bne.n	800dfcc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800e000:	6f00      	ldr	r0, [r0, #112]	; 0x70
 800e002:	4770      	bx	lr
 800e004:	684b      	ldr	r3, [r1, #4]
 800e006:	781b      	ldrb	r3, [r3, #0]
 800e008:	2b01      	cmp	r3, #1
 800e00a:	d004      	beq.n	800e016 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6e>
 800e00c:	d30b      	bcc.n	800e026 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 800e00e:	2b02      	cmp	r3, #2
 800e010:	d1dc      	bne.n	800dfcc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800e012:	6900      	ldr	r0, [r0, #16]
 800e014:	4770      	bx	lr
 800e016:	6a00      	ldr	r0, [r0, #32]
 800e018:	4770      	bx	lr
 800e01a:	6980      	ldr	r0, [r0, #24]
 800e01c:	4770      	bx	lr
 800e01e:	684b      	ldr	r3, [r1, #4]
 800e020:	781b      	ldrb	r3, [r3, #0]
 800e022:	2b00      	cmp	r3, #0
 800e024:	d1d2      	bne.n	800dfcc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800e026:	6b00      	ldr	r0, [r0, #48]	; 0x30
 800e028:	4770      	bx	lr
 800e02a:	684b      	ldr	r3, [r1, #4]
 800e02c:	781b      	ldrb	r3, [r3, #0]
 800e02e:	2b00      	cmp	r3, #0
 800e030:	d1cc      	bne.n	800dfcc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800e032:	6a80      	ldr	r0, [r0, #40]	; 0x28
 800e034:	4770      	bx	lr
 800e036:	6c80      	ldr	r0, [r0, #72]	; 0x48
 800e038:	4770      	bx	lr
 800e03a:	6d00      	ldr	r0, [r0, #80]	; 0x50
 800e03c:	4770      	bx	lr
 800e03e:	6c00      	ldr	r0, [r0, #64]	; 0x40
 800e040:	4770      	bx	lr
 800e042:	6d80      	ldr	r0, [r0, #88]	; 0x58
 800e044:	4770      	bx	lr
 800e046:	6e00      	ldr	r0, [r0, #96]	; 0x60
 800e048:	4770      	bx	lr
 800e04a:	6e80      	ldr	r0, [r0, #104]	; 0x68
 800e04c:	4770      	bx	lr
 800e04e:	2a0b      	cmp	r2, #11
 800e050:	d049      	beq.n	800e0e6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 800e052:	d80e      	bhi.n	800e072 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xca>
 800e054:	2a03      	cmp	r2, #3
 800e056:	d040      	beq.n	800e0da <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x132>
 800e058:	d804      	bhi.n	800e064 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xbc>
 800e05a:	2a01      	cmp	r2, #1
 800e05c:	d03f      	beq.n	800e0de <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x136>
 800e05e:	d940      	bls.n	800e0e2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13a>
 800e060:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
 800e062:	4770      	bx	lr
 800e064:	2a09      	cmp	r2, #9
 800e066:	d03e      	beq.n	800e0e6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 800e068:	d801      	bhi.n	800e06e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xc6>
 800e06a:	2a08      	cmp	r2, #8
 800e06c:	d1ae      	bne.n	800dfcc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800e06e:	6dc0      	ldr	r0, [r0, #92]	; 0x5c
 800e070:	4770      	bx	lr
 800e072:	2a2f      	cmp	r2, #47	; 0x2f
 800e074:	d024      	beq.n	800e0c0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x118>
 800e076:	d80d      	bhi.n	800e094 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xec>
 800e078:	2a2d      	cmp	r2, #45	; 0x2d
 800e07a:	d014      	beq.n	800e0a6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfe>
 800e07c:	d826      	bhi.n	800e0cc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x124>
 800e07e:	2a2c      	cmp	r2, #44	; 0x2c
 800e080:	d1a4      	bne.n	800dfcc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800e082:	684b      	ldr	r3, [r1, #4]
 800e084:	781b      	ldrb	r3, [r3, #0]
 800e086:	2b01      	cmp	r3, #1
 800e088:	d018      	beq.n	800e0bc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x114>
 800e08a:	d324      	bcc.n	800e0d6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x12e>
 800e08c:	2b02      	cmp	r3, #2
 800e08e:	d19d      	bne.n	800dfcc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800e090:	68c0      	ldr	r0, [r0, #12]
 800e092:	4770      	bx	lr
 800e094:	2a31      	cmp	r2, #49	; 0x31
 800e096:	d004      	beq.n	800e0a2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfa>
 800e098:	d327      	bcc.n	800e0ea <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 800e09a:	2a32      	cmp	r2, #50	; 0x32
 800e09c:	d025      	beq.n	800e0ea <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 800e09e:	2a33      	cmp	r2, #51	; 0x33
 800e0a0:	d194      	bne.n	800dfcc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800e0a2:	6f40      	ldr	r0, [r0, #116]	; 0x74
 800e0a4:	4770      	bx	lr
 800e0a6:	684b      	ldr	r3, [r1, #4]
 800e0a8:	781b      	ldrb	r3, [r3, #0]
 800e0aa:	2b01      	cmp	r3, #1
 800e0ac:	d004      	beq.n	800e0b8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x110>
 800e0ae:	d30b      	bcc.n	800e0c8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x120>
 800e0b0:	2b02      	cmp	r3, #2
 800e0b2:	d18b      	bne.n	800dfcc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800e0b4:	6940      	ldr	r0, [r0, #20]
 800e0b6:	4770      	bx	lr
 800e0b8:	6a40      	ldr	r0, [r0, #36]	; 0x24
 800e0ba:	4770      	bx	lr
 800e0bc:	69c0      	ldr	r0, [r0, #28]
 800e0be:	4770      	bx	lr
 800e0c0:	684b      	ldr	r3, [r1, #4]
 800e0c2:	781b      	ldrb	r3, [r3, #0]
 800e0c4:	2b00      	cmp	r3, #0
 800e0c6:	d181      	bne.n	800dfcc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800e0c8:	6b40      	ldr	r0, [r0, #52]	; 0x34
 800e0ca:	4770      	bx	lr
 800e0cc:	684b      	ldr	r3, [r1, #4]
 800e0ce:	781b      	ldrb	r3, [r3, #0]
 800e0d0:	2b00      	cmp	r3, #0
 800e0d2:	f47f af7b 	bne.w	800dfcc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800e0d6:	6ac0      	ldr	r0, [r0, #44]	; 0x2c
 800e0d8:	4770      	bx	lr
 800e0da:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 800e0dc:	4770      	bx	lr
 800e0de:	6d40      	ldr	r0, [r0, #84]	; 0x54
 800e0e0:	4770      	bx	lr
 800e0e2:	6c40      	ldr	r0, [r0, #68]	; 0x44
 800e0e4:	4770      	bx	lr
 800e0e6:	6e40      	ldr	r0, [r0, #100]	; 0x64
 800e0e8:	4770      	bx	lr
 800e0ea:	6ec0      	ldr	r0, [r0, #108]	; 0x6c
 800e0ec:	4770      	bx	lr

0800e0ee <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 800e0ee:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e0f2:	b087      	sub	sp, #28
 800e0f4:	9e15      	ldr	r6, [sp, #84]	; 0x54
 800e0f6:	9205      	str	r2, [sp, #20]
 800e0f8:	f9bd 2064 	ldrsh.w	r2, [sp, #100]	; 0x64
 800e0fc:	9202      	str	r2, [sp, #8]
 800e0fe:	e9dd 2516 	ldrd	r2, r5, [sp, #88]	; 0x58
 800e102:	9101      	str	r1, [sp, #4]
 800e104:	6871      	ldr	r1, [r6, #4]
 800e106:	981a      	ldr	r0, [sp, #104]	; 0x68
 800e108:	f89d 406c 	ldrb.w	r4, [sp, #108]	; 0x6c
 800e10c:	f9bd 8060 	ldrsh.w	r8, [sp, #96]	; 0x60
 800e110:	fb01 2505 	mla	r5, r1, r5, r2
 800e114:	6832      	ldr	r2, [r6, #0]
 800e116:	eb02 0545 	add.w	r5, r2, r5, lsl #1
 800e11a:	6802      	ldr	r2, [r0, #0]
 800e11c:	9203      	str	r2, [sp, #12]
 800e11e:	6842      	ldr	r2, [r0, #4]
 800e120:	fa1f fe84 	uxth.w	lr, r4
 800e124:	3204      	adds	r2, #4
 800e126:	43e4      	mvns	r4, r4
 800e128:	9204      	str	r2, [sp, #16]
 800e12a:	b2e4      	uxtb	r4, r4
 800e12c:	9a01      	ldr	r2, [sp, #4]
 800e12e:	2a00      	cmp	r2, #0
 800e130:	dc03      	bgt.n	800e13a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4c>
 800e132:	9a05      	ldr	r2, [sp, #20]
 800e134:	2a00      	cmp	r2, #0
 800e136:	f340 8119 	ble.w	800e36c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x27e>
 800e13a:	9a11      	ldr	r2, [sp, #68]	; 0x44
 800e13c:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 800e140:	9a12      	ldr	r2, [sp, #72]	; 0x48
 800e142:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 800e146:	2b00      	cmp	r3, #0
 800e148:	dd0f      	ble.n	800e16a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7c>
 800e14a:	1408      	asrs	r0, r1, #16
 800e14c:	d406      	bmi.n	800e15c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6e>
 800e14e:	4540      	cmp	r0, r8
 800e150:	da04      	bge.n	800e15c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6e>
 800e152:	1410      	asrs	r0, r2, #16
 800e154:	d402      	bmi.n	800e15c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6e>
 800e156:	9e02      	ldr	r6, [sp, #8]
 800e158:	42b0      	cmp	r0, r6
 800e15a:	db07      	blt.n	800e16c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7e>
 800e15c:	9813      	ldr	r0, [sp, #76]	; 0x4c
 800e15e:	4401      	add	r1, r0
 800e160:	9814      	ldr	r0, [sp, #80]	; 0x50
 800e162:	3b01      	subs	r3, #1
 800e164:	4402      	add	r2, r0
 800e166:	3502      	adds	r5, #2
 800e168:	e7ed      	b.n	800e146 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x58>
 800e16a:	d00f      	beq.n	800e18c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9e>
 800e16c:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 800e16e:	1e58      	subs	r0, r3, #1
 800e170:	fb06 1600 	mla	r6, r6, r0, r1
 800e174:	1436      	asrs	r6, r6, #16
 800e176:	d547      	bpl.n	800e208 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x11a>
 800e178:	469b      	mov	fp, r3
 800e17a:	46aa      	mov	sl, r5
 800e17c:	f1bb 0f00 	cmp.w	fp, #0
 800e180:	f300 809e 	bgt.w	800e2c0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d2>
 800e184:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 800e188:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 800e18c:	9b01      	ldr	r3, [sp, #4]
 800e18e:	2b00      	cmp	r3, #0
 800e190:	f340 80ec 	ble.w	800e36c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x27e>
 800e194:	ee30 0a04 	vadd.f32	s0, s0, s8
 800e198:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 800e19c:	eec7 7a00 	vdiv.f32	s15, s14, s0
 800e1a0:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800e1a2:	ee70 0aa4 	vadd.f32	s1, s1, s9
 800e1a6:	ee31 1a05 	vadd.f32	s2, s2, s10
 800e1aa:	ee20 7aa7 	vmul.f32	s14, s1, s15
 800e1ae:	eef0 6a62 	vmov.f32	s13, s5
 800e1b2:	ee61 7a27 	vmul.f32	s15, s2, s15
 800e1b6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 800e1ba:	ee77 2a62 	vsub.f32	s5, s14, s5
 800e1be:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
 800e1c2:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 800e1c6:	eef0 6a43 	vmov.f32	s13, s6
 800e1ca:	ee37 3ac3 	vsub.f32	s6, s15, s6
 800e1ce:	ee12 2a90 	vmov	r2, s5
 800e1d2:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 800e1d6:	fb92 f3f3 	sdiv	r3, r2, r3
 800e1da:	ee13 2a10 	vmov	r2, s6
 800e1de:	9313      	str	r3, [sp, #76]	; 0x4c
 800e1e0:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800e1e2:	fb92 f3f3 	sdiv	r3, r2, r3
 800e1e6:	9314      	str	r3, [sp, #80]	; 0x50
 800e1e8:	9b01      	ldr	r3, [sp, #4]
 800e1ea:	9a05      	ldr	r2, [sp, #20]
 800e1ec:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 800e1f0:	3b01      	subs	r3, #1
 800e1f2:	9301      	str	r3, [sp, #4]
 800e1f4:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
 800e1f8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800e1fa:	eeb0 3a67 	vmov.f32	s6, s15
 800e1fe:	bf08      	it	eq
 800e200:	4613      	moveq	r3, r2
 800e202:	eef0 2a47 	vmov.f32	s5, s14
 800e206:	e791      	b.n	800e12c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3e>
 800e208:	4546      	cmp	r6, r8
 800e20a:	dab5      	bge.n	800e178 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x8a>
 800e20c:	9e14      	ldr	r6, [sp, #80]	; 0x50
 800e20e:	fb06 2000 	mla	r0, r6, r0, r2
 800e212:	1400      	asrs	r0, r0, #16
 800e214:	d4b0      	bmi.n	800e178 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x8a>
 800e216:	9e02      	ldr	r6, [sp, #8]
 800e218:	42b0      	cmp	r0, r6
 800e21a:	daad      	bge.n	800e178 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x8a>
 800e21c:	469a      	mov	sl, r3
 800e21e:	46ab      	mov	fp, r5
 800e220:	f1ba 0f00 	cmp.w	sl, #0
 800e224:	ddae      	ble.n	800e184 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x96>
 800e226:	9f03      	ldr	r7, [sp, #12]
 800e228:	1410      	asrs	r0, r2, #16
 800e22a:	140e      	asrs	r6, r1, #16
 800e22c:	fb08 7000 	mla	r0, r8, r0, r7
 800e230:	f10a 3aff 	add.w	sl, sl, #4294967295
 800e234:	5d80      	ldrb	r0, [r0, r6]
 800e236:	9e04      	ldr	r6, [sp, #16]
 800e238:	f836 0010 	ldrh.w	r0, [r6, r0, lsl #1]
 800e23c:	f8bb 6000 	ldrh.w	r6, [fp]
 800e240:	1237      	asrs	r7, r6, #8
 800e242:	ea4f 2c20 	mov.w	ip, r0, asr #8
 800e246:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 800e24a:	fb17 f704 	smulbb	r7, r7, r4
 800e24e:	ea4f 09e6 	mov.w	r9, r6, asr #3
 800e252:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 800e256:	00f6      	lsls	r6, r6, #3
 800e258:	fb0c 7c0e 	mla	ip, ip, lr, r7
 800e25c:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 800e260:	10c7      	asrs	r7, r0, #3
 800e262:	b2f6      	uxtb	r6, r6
 800e264:	00c0      	lsls	r0, r0, #3
 800e266:	fb19 f904 	smulbb	r9, r9, r4
 800e26a:	fb16 f604 	smulbb	r6, r6, r4
 800e26e:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 800e272:	b2c0      	uxtb	r0, r0
 800e274:	fa1f fc8c 	uxth.w	ip, ip
 800e278:	fb07 970e 	mla	r7, r7, lr, r9
 800e27c:	fb00 600e 	mla	r0, r0, lr, r6
 800e280:	b280      	uxth	r0, r0
 800e282:	b2bf      	uxth	r7, r7
 800e284:	f10c 0601 	add.w	r6, ip, #1
 800e288:	eb06 2c1c 	add.w	ip, r6, ip, lsr #8
 800e28c:	f107 0901 	add.w	r9, r7, #1
 800e290:	1c46      	adds	r6, r0, #1
 800e292:	eb06 2610 	add.w	r6, r6, r0, lsr #8
 800e296:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 800e29a:	9813      	ldr	r0, [sp, #76]	; 0x4c
 800e29c:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 800e2a0:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 800e2a4:	ea4f 1959 	mov.w	r9, r9, lsr #5
 800e2a8:	ea4c 0c06 	orr.w	ip, ip, r6
 800e2ac:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 800e2b0:	4401      	add	r1, r0
 800e2b2:	9814      	ldr	r0, [sp, #80]	; 0x50
 800e2b4:	ea4c 0c09 	orr.w	ip, ip, r9
 800e2b8:	f82b cb02 	strh.w	ip, [fp], #2
 800e2bc:	4402      	add	r2, r0
 800e2be:	e7af      	b.n	800e220 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x132>
 800e2c0:	140e      	asrs	r6, r1, #16
 800e2c2:	d44a      	bmi.n	800e35a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x26c>
 800e2c4:	4546      	cmp	r6, r8
 800e2c6:	da48      	bge.n	800e35a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x26c>
 800e2c8:	1410      	asrs	r0, r2, #16
 800e2ca:	d446      	bmi.n	800e35a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x26c>
 800e2cc:	9f02      	ldr	r7, [sp, #8]
 800e2ce:	42b8      	cmp	r0, r7
 800e2d0:	da43      	bge.n	800e35a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x26c>
 800e2d2:	9f03      	ldr	r7, [sp, #12]
 800e2d4:	fb08 7000 	mla	r0, r8, r0, r7
 800e2d8:	5d80      	ldrb	r0, [r0, r6]
 800e2da:	9e04      	ldr	r6, [sp, #16]
 800e2dc:	f836 0010 	ldrh.w	r0, [r6, r0, lsl #1]
 800e2e0:	f8ba 6000 	ldrh.w	r6, [sl]
 800e2e4:	1237      	asrs	r7, r6, #8
 800e2e6:	ea4f 2c20 	mov.w	ip, r0, asr #8
 800e2ea:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 800e2ee:	fb17 f704 	smulbb	r7, r7, r4
 800e2f2:	ea4f 09e6 	mov.w	r9, r6, asr #3
 800e2f6:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 800e2fa:	00f6      	lsls	r6, r6, #3
 800e2fc:	fb0c 7c0e 	mla	ip, ip, lr, r7
 800e300:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 800e304:	10c7      	asrs	r7, r0, #3
 800e306:	b2f6      	uxtb	r6, r6
 800e308:	00c0      	lsls	r0, r0, #3
 800e30a:	fb19 f904 	smulbb	r9, r9, r4
 800e30e:	fb16 f604 	smulbb	r6, r6, r4
 800e312:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 800e316:	b2c0      	uxtb	r0, r0
 800e318:	fa1f fc8c 	uxth.w	ip, ip
 800e31c:	fb07 970e 	mla	r7, r7, lr, r9
 800e320:	fb00 600e 	mla	r0, r0, lr, r6
 800e324:	b2bf      	uxth	r7, r7
 800e326:	b280      	uxth	r0, r0
 800e328:	f10c 0601 	add.w	r6, ip, #1
 800e32c:	eb06 2c1c 	add.w	ip, r6, ip, lsr #8
 800e330:	f107 0901 	add.w	r9, r7, #1
 800e334:	1c46      	adds	r6, r0, #1
 800e336:	eb06 2610 	add.w	r6, r6, r0, lsr #8
 800e33a:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 800e33e:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 800e342:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 800e346:	ea4f 1959 	mov.w	r9, r9, lsr #5
 800e34a:	ea4c 0c06 	orr.w	ip, ip, r6
 800e34e:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 800e352:	ea4c 0c09 	orr.w	ip, ip, r9
 800e356:	f8aa c000 	strh.w	ip, [sl]
 800e35a:	9813      	ldr	r0, [sp, #76]	; 0x4c
 800e35c:	4401      	add	r1, r0
 800e35e:	9814      	ldr	r0, [sp, #80]	; 0x50
 800e360:	f10a 0a02 	add.w	sl, sl, #2
 800e364:	4402      	add	r2, r0
 800e366:	f10b 3bff 	add.w	fp, fp, #4294967295
 800e36a:	e707      	b.n	800e17c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x8e>
 800e36c:	b007      	add	sp, #28
 800e36e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800e372 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 800e372:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e376:	b085      	sub	sp, #20
 800e378:	e9dd 7611 	ldrd	r7, r6, [sp, #68]	; 0x44
 800e37c:	9813      	ldr	r0, [sp, #76]	; 0x4c
 800e37e:	9203      	str	r2, [sp, #12]
 800e380:	6842      	ldr	r2, [r0, #4]
 800e382:	9d15      	ldr	r5, [sp, #84]	; 0x54
 800e384:	9c18      	ldr	r4, [sp, #96]	; 0x60
 800e386:	6800      	ldr	r0, [r0, #0]
 800e388:	f9bd c058 	ldrsh.w	ip, [sp, #88]	; 0x58
 800e38c:	f9bd 805c 	ldrsh.w	r8, [sp, #92]	; 0x5c
 800e390:	4696      	mov	lr, r2
 800e392:	9a14      	ldr	r2, [sp, #80]	; 0x50
 800e394:	fb0e 2505 	mla	r5, lr, r5, r2
 800e398:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 800e39c:	6860      	ldr	r0, [r4, #4]
 800e39e:	6822      	ldr	r2, [r4, #0]
 800e3a0:	9201      	str	r2, [sp, #4]
 800e3a2:	1d02      	adds	r2, r0, #4
 800e3a4:	9202      	str	r2, [sp, #8]
 800e3a6:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 800e3aa:	2900      	cmp	r1, #0
 800e3ac:	dc03      	bgt.n	800e3b6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x44>
 800e3ae:	9a03      	ldr	r2, [sp, #12]
 800e3b0:	2a00      	cmp	r2, #0
 800e3b2:	f340 809b 	ble.w	800e4ec <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x17a>
 800e3b6:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 800e3b8:	f502 4400 	add.w	r4, r2, #32768	; 0x8000
 800e3bc:	9a10      	ldr	r2, [sp, #64]	; 0x40
 800e3be:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 800e3c2:	2b00      	cmp	r3, #0
 800e3c4:	dd0e      	ble.n	800e3e4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x72>
 800e3c6:	ea5f 4e24 	movs.w	lr, r4, asr #16
 800e3ca:	d406      	bmi.n	800e3da <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x68>
 800e3cc:	45e6      	cmp	lr, ip
 800e3ce:	da04      	bge.n	800e3da <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x68>
 800e3d0:	ea5f 4e20 	movs.w	lr, r0, asr #16
 800e3d4:	d401      	bmi.n	800e3da <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x68>
 800e3d6:	45c6      	cmp	lr, r8
 800e3d8:	db05      	blt.n	800e3e6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x74>
 800e3da:	443c      	add	r4, r7
 800e3dc:	4430      	add	r0, r6
 800e3de:	3b01      	subs	r3, #1
 800e3e0:	3502      	adds	r5, #2
 800e3e2:	e7ee      	b.n	800e3c2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x50>
 800e3e4:	d010      	beq.n	800e408 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x96>
 800e3e6:	f103 3eff 	add.w	lr, r3, #4294967295
 800e3ea:	fb07 490e 	mla	r9, r7, lr, r4
 800e3ee:	ea5f 4929 	movs.w	r9, r9, asr #16
 800e3f2:	d53d      	bpl.n	800e470 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfe>
 800e3f4:	469e      	mov	lr, r3
 800e3f6:	eb05 0b43 	add.w	fp, r5, r3, lsl #1
 800e3fa:	f1be 0f00 	cmp.w	lr, #0
 800e3fe:	dc58      	bgt.n	800e4b2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x140>
 800e400:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 800e404:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 800e408:	2900      	cmp	r1, #0
 800e40a:	dd6f      	ble.n	800e4ec <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x17a>
 800e40c:	ee30 0a04 	vadd.f32	s0, s0, s8
 800e410:	ee70 0aa4 	vadd.f32	s1, s1, s9
 800e414:	eec6 7a80 	vdiv.f32	s15, s13, s0
 800e418:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800e41a:	3901      	subs	r1, #1
 800e41c:	ee31 1a05 	vadd.f32	s2, s2, s10
 800e420:	ee20 7aa7 	vmul.f32	s14, s1, s15
 800e424:	eeb0 6a62 	vmov.f32	s12, s5
 800e428:	ee61 7a27 	vmul.f32	s15, s2, s15
 800e42c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 800e430:	ee77 2a62 	vsub.f32	s5, s14, s5
 800e434:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 800e438:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 800e43c:	eeb0 6a43 	vmov.f32	s12, s6
 800e440:	ee37 3ac3 	vsub.f32	s6, s15, s6
 800e444:	ee12 2a90 	vmov	r2, s5
 800e448:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 800e44c:	fb92 f7f3 	sdiv	r7, r2, r3
 800e450:	ee13 2a10 	vmov	r2, s6
 800e454:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 800e458:	fb92 f6f3 	sdiv	r6, r2, r3
 800e45c:	9a03      	ldr	r2, [sp, #12]
 800e45e:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 800e462:	bf08      	it	eq
 800e464:	4613      	moveq	r3, r2
 800e466:	eeb0 3a67 	vmov.f32	s6, s15
 800e46a:	eef0 2a47 	vmov.f32	s5, s14
 800e46e:	e79c      	b.n	800e3aa <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x38>
 800e470:	45e1      	cmp	r9, ip
 800e472:	dabf      	bge.n	800e3f4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x82>
 800e474:	fb06 0e0e 	mla	lr, r6, lr, r0
 800e478:	ea5f 4e2e 	movs.w	lr, lr, asr #16
 800e47c:	d4ba      	bmi.n	800e3f4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x82>
 800e47e:	45c6      	cmp	lr, r8
 800e480:	dab8      	bge.n	800e3f4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x82>
 800e482:	469e      	mov	lr, r3
 800e484:	46aa      	mov	sl, r5
 800e486:	f1be 0f00 	cmp.w	lr, #0
 800e48a:	ddb9      	ble.n	800e400 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x8e>
 800e48c:	9a01      	ldr	r2, [sp, #4]
 800e48e:	ea4f 4920 	mov.w	r9, r0, asr #16
 800e492:	ea4f 4b24 	mov.w	fp, r4, asr #16
 800e496:	fb0c 2909 	mla	r9, ip, r9, r2
 800e49a:	9a02      	ldr	r2, [sp, #8]
 800e49c:	f819 900b 	ldrb.w	r9, [r9, fp]
 800e4a0:	f832 9019 	ldrh.w	r9, [r2, r9, lsl #1]
 800e4a4:	f82a 9b02 	strh.w	r9, [sl], #2
 800e4a8:	443c      	add	r4, r7
 800e4aa:	4430      	add	r0, r6
 800e4ac:	f10e 3eff 	add.w	lr, lr, #4294967295
 800e4b0:	e7e9      	b.n	800e486 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x114>
 800e4b2:	ea5f 4a24 	movs.w	sl, r4, asr #16
 800e4b6:	d414      	bmi.n	800e4e2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x170>
 800e4b8:	45e2      	cmp	sl, ip
 800e4ba:	da12      	bge.n	800e4e2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x170>
 800e4bc:	ea5f 4920 	movs.w	r9, r0, asr #16
 800e4c0:	d40f      	bmi.n	800e4e2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x170>
 800e4c2:	45c1      	cmp	r9, r8
 800e4c4:	da0d      	bge.n	800e4e2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x170>
 800e4c6:	9a01      	ldr	r2, [sp, #4]
 800e4c8:	fb0c 2909 	mla	r9, ip, r9, r2
 800e4cc:	9a02      	ldr	r2, [sp, #8]
 800e4ce:	f819 900a 	ldrb.w	r9, [r9, sl]
 800e4d2:	f832 a019 	ldrh.w	sl, [r2, r9, lsl #1]
 800e4d6:	f06f 0201 	mvn.w	r2, #1
 800e4da:	fb02 f90e 	mul.w	r9, r2, lr
 800e4de:	f82b a009 	strh.w	sl, [fp, r9]
 800e4e2:	443c      	add	r4, r7
 800e4e4:	4430      	add	r0, r6
 800e4e6:	f10e 3eff 	add.w	lr, lr, #4294967295
 800e4ea:	e786      	b.n	800e3fa <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x88>
 800e4ec:	b005      	add	sp, #20
 800e4ee:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800e4f2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 800e4f2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e4f6:	b087      	sub	sp, #28
 800e4f8:	9e15      	ldr	r6, [sp, #84]	; 0x54
 800e4fa:	9205      	str	r2, [sp, #20]
 800e4fc:	f9bd 2064 	ldrsh.w	r2, [sp, #100]	; 0x64
 800e500:	9202      	str	r2, [sp, #8]
 800e502:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 800e506:	9101      	str	r1, [sp, #4]
 800e508:	6871      	ldr	r1, [r6, #4]
 800e50a:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 800e50c:	f89d 006c 	ldrb.w	r0, [sp, #108]	; 0x6c
 800e510:	f9bd e060 	ldrsh.w	lr, [sp, #96]	; 0x60
 800e514:	fb01 2404 	mla	r4, r1, r4, r2
 800e518:	6832      	ldr	r2, [r6, #0]
 800e51a:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 800e51e:	682a      	ldr	r2, [r5, #0]
 800e520:	9203      	str	r2, [sp, #12]
 800e522:	686a      	ldr	r2, [r5, #4]
 800e524:	fa1f fc80 	uxth.w	ip, r0
 800e528:	3204      	adds	r2, #4
 800e52a:	43c0      	mvns	r0, r0
 800e52c:	9200      	str	r2, [sp, #0]
 800e52e:	b2c0      	uxtb	r0, r0
 800e530:	9a01      	ldr	r2, [sp, #4]
 800e532:	2a00      	cmp	r2, #0
 800e534:	dc03      	bgt.n	800e53e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4c>
 800e536:	9a05      	ldr	r2, [sp, #20]
 800e538:	2a00      	cmp	r2, #0
 800e53a:	f340 811b 	ble.w	800e774 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x282>
 800e53e:	9a11      	ldr	r2, [sp, #68]	; 0x44
 800e540:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 800e544:	9a12      	ldr	r2, [sp, #72]	; 0x48
 800e546:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 800e54a:	2b00      	cmp	r3, #0
 800e54c:	dd0f      	ble.n	800e56e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7c>
 800e54e:	140d      	asrs	r5, r1, #16
 800e550:	d406      	bmi.n	800e560 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6e>
 800e552:	4575      	cmp	r5, lr
 800e554:	da04      	bge.n	800e560 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6e>
 800e556:	1415      	asrs	r5, r2, #16
 800e558:	d402      	bmi.n	800e560 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6e>
 800e55a:	9e02      	ldr	r6, [sp, #8]
 800e55c:	42b5      	cmp	r5, r6
 800e55e:	db07      	blt.n	800e570 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7e>
 800e560:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 800e562:	4429      	add	r1, r5
 800e564:	9d14      	ldr	r5, [sp, #80]	; 0x50
 800e566:	3b01      	subs	r3, #1
 800e568:	442a      	add	r2, r5
 800e56a:	3402      	adds	r4, #2
 800e56c:	e7ed      	b.n	800e54a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x58>
 800e56e:	d00f      	beq.n	800e590 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9e>
 800e570:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 800e572:	1e5d      	subs	r5, r3, #1
 800e574:	fb06 1605 	mla	r6, r6, r5, r1
 800e578:	1436      	asrs	r6, r6, #16
 800e57a:	d547      	bpl.n	800e60c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x11a>
 800e57c:	469a      	mov	sl, r3
 800e57e:	46a1      	mov	r9, r4
 800e580:	f1ba 0f00 	cmp.w	sl, #0
 800e584:	f300 809f 	bgt.w	800e6c6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d4>
 800e588:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 800e58c:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 800e590:	9b01      	ldr	r3, [sp, #4]
 800e592:	2b00      	cmp	r3, #0
 800e594:	f340 80ee 	ble.w	800e774 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x282>
 800e598:	ee30 0a04 	vadd.f32	s0, s0, s8
 800e59c:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 800e5a0:	eec7 7a00 	vdiv.f32	s15, s14, s0
 800e5a4:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800e5a6:	ee70 0aa4 	vadd.f32	s1, s1, s9
 800e5aa:	ee31 1a05 	vadd.f32	s2, s2, s10
 800e5ae:	ee20 7aa7 	vmul.f32	s14, s1, s15
 800e5b2:	eef0 6a62 	vmov.f32	s13, s5
 800e5b6:	ee61 7a27 	vmul.f32	s15, s2, s15
 800e5ba:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 800e5be:	ee77 2a62 	vsub.f32	s5, s14, s5
 800e5c2:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
 800e5c6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 800e5ca:	eef0 6a43 	vmov.f32	s13, s6
 800e5ce:	ee37 3ac3 	vsub.f32	s6, s15, s6
 800e5d2:	ee12 2a90 	vmov	r2, s5
 800e5d6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 800e5da:	fb92 f3f3 	sdiv	r3, r2, r3
 800e5de:	ee13 2a10 	vmov	r2, s6
 800e5e2:	9313      	str	r3, [sp, #76]	; 0x4c
 800e5e4:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800e5e6:	fb92 f3f3 	sdiv	r3, r2, r3
 800e5ea:	9314      	str	r3, [sp, #80]	; 0x50
 800e5ec:	9b01      	ldr	r3, [sp, #4]
 800e5ee:	9a05      	ldr	r2, [sp, #20]
 800e5f0:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 800e5f4:	3b01      	subs	r3, #1
 800e5f6:	9301      	str	r3, [sp, #4]
 800e5f8:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
 800e5fc:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800e5fe:	eeb0 3a67 	vmov.f32	s6, s15
 800e602:	bf08      	it	eq
 800e604:	4613      	moveq	r3, r2
 800e606:	eef0 2a47 	vmov.f32	s5, s14
 800e60a:	e791      	b.n	800e530 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3e>
 800e60c:	4576      	cmp	r6, lr
 800e60e:	dab5      	bge.n	800e57c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x8a>
 800e610:	9e14      	ldr	r6, [sp, #80]	; 0x50
 800e612:	fb06 2505 	mla	r5, r6, r5, r2
 800e616:	142d      	asrs	r5, r5, #16
 800e618:	d4b0      	bmi.n	800e57c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x8a>
 800e61a:	9e02      	ldr	r6, [sp, #8]
 800e61c:	42b5      	cmp	r5, r6
 800e61e:	daad      	bge.n	800e57c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x8a>
 800e620:	4699      	mov	r9, r3
 800e622:	46a2      	mov	sl, r4
 800e624:	f1b9 0f00 	cmp.w	r9, #0
 800e628:	ddae      	ble.n	800e588 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x96>
 800e62a:	9f03      	ldr	r7, [sp, #12]
 800e62c:	1415      	asrs	r5, r2, #16
 800e62e:	140e      	asrs	r6, r1, #16
 800e630:	fb0e 7505 	mla	r5, lr, r5, r7
 800e634:	f109 39ff 	add.w	r9, r9, #4294967295
 800e638:	f815 8006 	ldrb.w	r8, [r5, r6]
 800e63c:	9d00      	ldr	r5, [sp, #0]
 800e63e:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 800e642:	eb05 0b08 	add.w	fp, r5, r8
 800e646:	f8ba 5000 	ldrh.w	r5, [sl]
 800e64a:	f89b 6002 	ldrb.w	r6, [fp, #2]
 800e64e:	f89b b001 	ldrb.w	fp, [fp, #1]
 800e652:	122f      	asrs	r7, r5, #8
 800e654:	fb16 f60c 	smulbb	r6, r6, ip
 800e658:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 800e65c:	fb07 6700 	mla	r7, r7, r0, r6
 800e660:	10ee      	asrs	r6, r5, #3
 800e662:	fb1b fb0c 	smulbb	fp, fp, ip
 800e666:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 800e66a:	fb06 b600 	mla	r6, r6, r0, fp
 800e66e:	b2b6      	uxth	r6, r6
 800e670:	9604      	str	r6, [sp, #16]
 800e672:	9e00      	ldr	r6, [sp, #0]
 800e674:	00ed      	lsls	r5, r5, #3
 800e676:	f816 8008 	ldrb.w	r8, [r6, r8]
 800e67a:	b2ed      	uxtb	r5, r5
 800e67c:	fb15 f500 	smulbb	r5, r5, r0
 800e680:	b2bf      	uxth	r7, r7
 800e682:	fb08 580c 	mla	r8, r8, ip, r5
 800e686:	fa1f f888 	uxth.w	r8, r8
 800e68a:	1c7d      	adds	r5, r7, #1
 800e68c:	eb05 2717 	add.w	r7, r5, r7, lsr #8
 800e690:	f108 0501 	add.w	r5, r8, #1
 800e694:	eb05 2518 	add.w	r5, r5, r8, lsr #8
 800e698:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 800e69c:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 800e6a0:	432f      	orrs	r7, r5
 800e6a2:	9d04      	ldr	r5, [sp, #16]
 800e6a4:	f105 0b01 	add.w	fp, r5, #1
 800e6a8:	eb0b 2b15 	add.w	fp, fp, r5, lsr #8
 800e6ac:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 800e6ae:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 800e6b2:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 800e6b6:	4429      	add	r1, r5
 800e6b8:	9d14      	ldr	r5, [sp, #80]	; 0x50
 800e6ba:	ea47 070b 	orr.w	r7, r7, fp
 800e6be:	f82a 7b02 	strh.w	r7, [sl], #2
 800e6c2:	442a      	add	r2, r5
 800e6c4:	e7ae      	b.n	800e624 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x132>
 800e6c6:	140e      	asrs	r6, r1, #16
 800e6c8:	d44b      	bmi.n	800e762 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x270>
 800e6ca:	4576      	cmp	r6, lr
 800e6cc:	da49      	bge.n	800e762 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x270>
 800e6ce:	1415      	asrs	r5, r2, #16
 800e6d0:	d447      	bmi.n	800e762 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x270>
 800e6d2:	9f02      	ldr	r7, [sp, #8]
 800e6d4:	42bd      	cmp	r5, r7
 800e6d6:	da44      	bge.n	800e762 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x270>
 800e6d8:	9f03      	ldr	r7, [sp, #12]
 800e6da:	fb0e 7505 	mla	r5, lr, r5, r7
 800e6de:	f815 8006 	ldrb.w	r8, [r5, r6]
 800e6e2:	9d00      	ldr	r5, [sp, #0]
 800e6e4:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 800e6e8:	eb05 0b08 	add.w	fp, r5, r8
 800e6ec:	f8b9 5000 	ldrh.w	r5, [r9]
 800e6f0:	f89b 6002 	ldrb.w	r6, [fp, #2]
 800e6f4:	f89b b001 	ldrb.w	fp, [fp, #1]
 800e6f8:	122f      	asrs	r7, r5, #8
 800e6fa:	fb16 f60c 	smulbb	r6, r6, ip
 800e6fe:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 800e702:	fb07 6700 	mla	r7, r7, r0, r6
 800e706:	10ee      	asrs	r6, r5, #3
 800e708:	fb1b fb0c 	smulbb	fp, fp, ip
 800e70c:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 800e710:	fb06 b600 	mla	r6, r6, r0, fp
 800e714:	b2b6      	uxth	r6, r6
 800e716:	9604      	str	r6, [sp, #16]
 800e718:	9e00      	ldr	r6, [sp, #0]
 800e71a:	00ed      	lsls	r5, r5, #3
 800e71c:	f816 8008 	ldrb.w	r8, [r6, r8]
 800e720:	b2ed      	uxtb	r5, r5
 800e722:	fb15 f500 	smulbb	r5, r5, r0
 800e726:	b2bf      	uxth	r7, r7
 800e728:	fb08 580c 	mla	r8, r8, ip, r5
 800e72c:	fa1f f888 	uxth.w	r8, r8
 800e730:	1c7d      	adds	r5, r7, #1
 800e732:	eb05 2717 	add.w	r7, r5, r7, lsr #8
 800e736:	f108 0501 	add.w	r5, r8, #1
 800e73a:	eb05 2518 	add.w	r5, r5, r8, lsr #8
 800e73e:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 800e742:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 800e746:	432f      	orrs	r7, r5
 800e748:	9d04      	ldr	r5, [sp, #16]
 800e74a:	f105 0b01 	add.w	fp, r5, #1
 800e74e:	eb0b 2b15 	add.w	fp, fp, r5, lsr #8
 800e752:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 800e756:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 800e75a:	ea47 070b 	orr.w	r7, r7, fp
 800e75e:	f8a9 7000 	strh.w	r7, [r9]
 800e762:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 800e764:	4429      	add	r1, r5
 800e766:	9d14      	ldr	r5, [sp, #80]	; 0x50
 800e768:	f109 0902 	add.w	r9, r9, #2
 800e76c:	442a      	add	r2, r5
 800e76e:	f10a 3aff 	add.w	sl, sl, #4294967295
 800e772:	e705      	b.n	800e580 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x8e>
 800e774:	b007      	add	sp, #28
 800e776:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

0800e77c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 800e77c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e780:	b085      	sub	sp, #20
 800e782:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 800e786:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 800e788:	9203      	str	r2, [sp, #12]
 800e78a:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 800e78e:	6870      	ldr	r0, [r6, #4]
 800e790:	9d18      	ldr	r5, [sp, #96]	; 0x60
 800e792:	f9bd 7058 	ldrsh.w	r7, [sp, #88]	; 0x58
 800e796:	f9bd 805c 	ldrsh.w	r8, [sp, #92]	; 0x5c
 800e79a:	9101      	str	r1, [sp, #4]
 800e79c:	fb00 2404 	mla	r4, r0, r4, r2
 800e7a0:	6832      	ldr	r2, [r6, #0]
 800e7a2:	686e      	ldr	r6, [r5, #4]
 800e7a4:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 800e7a8:	682a      	ldr	r2, [r5, #0]
 800e7aa:	9202      	str	r2, [sp, #8]
 800e7ac:	3604      	adds	r6, #4
 800e7ae:	9a01      	ldr	r2, [sp, #4]
 800e7b0:	2a00      	cmp	r2, #0
 800e7b2:	dc03      	bgt.n	800e7bc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x40>
 800e7b4:	9a03      	ldr	r2, [sp, #12]
 800e7b6:	2a00      	cmp	r2, #0
 800e7b8:	f340 80c7 	ble.w	800e94a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1ce>
 800e7bc:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 800e7be:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 800e7c2:	9a10      	ldr	r2, [sp, #64]	; 0x40
 800e7c4:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 800e7c8:	2b00      	cmp	r3, #0
 800e7ca:	dd0e      	ble.n	800e7ea <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6e>
 800e7cc:	1405      	asrs	r5, r0, #16
 800e7ce:	d405      	bmi.n	800e7dc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x60>
 800e7d0:	42bd      	cmp	r5, r7
 800e7d2:	da03      	bge.n	800e7dc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x60>
 800e7d4:	1415      	asrs	r5, r2, #16
 800e7d6:	d401      	bmi.n	800e7dc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x60>
 800e7d8:	4545      	cmp	r5, r8
 800e7da:	db07      	blt.n	800e7ec <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x70>
 800e7dc:	9d11      	ldr	r5, [sp, #68]	; 0x44
 800e7de:	4428      	add	r0, r5
 800e7e0:	9d12      	ldr	r5, [sp, #72]	; 0x48
 800e7e2:	3b01      	subs	r3, #1
 800e7e4:	442a      	add	r2, r5
 800e7e6:	3402      	adds	r4, #2
 800e7e8:	e7ee      	b.n	800e7c8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4c>
 800e7ea:	d010      	beq.n	800e80e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x92>
 800e7ec:	9911      	ldr	r1, [sp, #68]	; 0x44
 800e7ee:	1e5d      	subs	r5, r3, #1
 800e7f0:	fb01 0c05 	mla	ip, r1, r5, r0
 800e7f4:	ea5f 4c2c 	movs.w	ip, ip, asr #16
 800e7f8:	d545      	bpl.n	800e886 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x10a>
 800e7fa:	469e      	mov	lr, r3
 800e7fc:	eb04 0b43 	add.w	fp, r4, r3, lsl #1
 800e800:	f1be 0f00 	cmp.w	lr, #0
 800e804:	dc72      	bgt.n	800e8ec <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x170>
 800e806:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 800e80a:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 800e80e:	9b01      	ldr	r3, [sp, #4]
 800e810:	2b00      	cmp	r3, #0
 800e812:	f340 809a 	ble.w	800e94a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1ce>
 800e816:	ee30 0a04 	vadd.f32	s0, s0, s8
 800e81a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 800e81e:	eec6 7a80 	vdiv.f32	s15, s13, s0
 800e822:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800e824:	ee31 1a05 	vadd.f32	s2, s2, s10
 800e828:	ee20 7aa7 	vmul.f32	s14, s1, s15
 800e82c:	eeb0 6a62 	vmov.f32	s12, s5
 800e830:	ee61 7a27 	vmul.f32	s15, s2, s15
 800e834:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 800e838:	ee77 2a62 	vsub.f32	s5, s14, s5
 800e83c:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 800e840:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 800e844:	eeb0 6a43 	vmov.f32	s12, s6
 800e848:	ee37 3ac3 	vsub.f32	s6, s15, s6
 800e84c:	ee12 2a90 	vmov	r2, s5
 800e850:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 800e854:	fb92 f3f3 	sdiv	r3, r2, r3
 800e858:	ee13 2a10 	vmov	r2, s6
 800e85c:	9311      	str	r3, [sp, #68]	; 0x44
 800e85e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800e860:	fb92 f3f3 	sdiv	r3, r2, r3
 800e864:	9312      	str	r3, [sp, #72]	; 0x48
 800e866:	9b01      	ldr	r3, [sp, #4]
 800e868:	9a03      	ldr	r2, [sp, #12]
 800e86a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 800e86e:	3b01      	subs	r3, #1
 800e870:	9301      	str	r3, [sp, #4]
 800e872:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 800e876:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800e878:	eeb0 3a67 	vmov.f32	s6, s15
 800e87c:	bf08      	it	eq
 800e87e:	4613      	moveq	r3, r2
 800e880:	eef0 2a47 	vmov.f32	s5, s14
 800e884:	e793      	b.n	800e7ae <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x32>
 800e886:	45bc      	cmp	ip, r7
 800e888:	dab7      	bge.n	800e7fa <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7e>
 800e88a:	9912      	ldr	r1, [sp, #72]	; 0x48
 800e88c:	fb01 2505 	mla	r5, r1, r5, r2
 800e890:	142d      	asrs	r5, r5, #16
 800e892:	d4b2      	bmi.n	800e7fa <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7e>
 800e894:	4545      	cmp	r5, r8
 800e896:	dab0      	bge.n	800e7fa <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7e>
 800e898:	469e      	mov	lr, r3
 800e89a:	46a2      	mov	sl, r4
 800e89c:	f1be 0f00 	cmp.w	lr, #0
 800e8a0:	ddb1      	ble.n	800e806 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x8a>
 800e8a2:	9902      	ldr	r1, [sp, #8]
 800e8a4:	1415      	asrs	r5, r2, #16
 800e8a6:	fb07 1505 	mla	r5, r7, r5, r1
 800e8aa:	ea4f 4c20 	mov.w	ip, r0, asr #16
 800e8ae:	4928      	ldr	r1, [pc, #160]	; (800e950 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d4>)
 800e8b0:	f815 c00c 	ldrb.w	ip, [r5, ip]
 800e8b4:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 800e8b8:	eb06 0b0c 	add.w	fp, r6, ip
 800e8bc:	f10e 3eff 	add.w	lr, lr, #4294967295
 800e8c0:	f89b 5001 	ldrb.w	r5, [fp, #1]
 800e8c4:	f89b 9002 	ldrb.w	r9, [fp, #2]
 800e8c8:	00ed      	lsls	r5, r5, #3
 800e8ca:	ea01 2909 	and.w	r9, r1, r9, lsl #8
 800e8ce:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 800e8d2:	9911      	ldr	r1, [sp, #68]	; 0x44
 800e8d4:	ea49 0505 	orr.w	r5, r9, r5
 800e8d8:	f816 900c 	ldrb.w	r9, [r6, ip]
 800e8dc:	4408      	add	r0, r1
 800e8de:	9912      	ldr	r1, [sp, #72]	; 0x48
 800e8e0:	ea45 05d9 	orr.w	r5, r5, r9, lsr #3
 800e8e4:	f82a 5b02 	strh.w	r5, [sl], #2
 800e8e8:	440a      	add	r2, r1
 800e8ea:	e7d7      	b.n	800e89c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x120>
 800e8ec:	ea5f 4c20 	movs.w	ip, r0, asr #16
 800e8f0:	d424      	bmi.n	800e93c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1c0>
 800e8f2:	45bc      	cmp	ip, r7
 800e8f4:	da22      	bge.n	800e93c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1c0>
 800e8f6:	1415      	asrs	r5, r2, #16
 800e8f8:	d420      	bmi.n	800e93c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1c0>
 800e8fa:	4545      	cmp	r5, r8
 800e8fc:	da1e      	bge.n	800e93c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1c0>
 800e8fe:	9902      	ldr	r1, [sp, #8]
 800e900:	fb07 1505 	mla	r5, r7, r5, r1
 800e904:	f06f 0101 	mvn.w	r1, #1
 800e908:	f815 c00c 	ldrb.w	ip, [r5, ip]
 800e90c:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 800e910:	eb06 050c 	add.w	r5, r6, ip
 800e914:	fb01 f90e 	mul.w	r9, r1, lr
 800e918:	f895 a002 	ldrb.w	sl, [r5, #2]
 800e91c:	786d      	ldrb	r5, [r5, #1]
 800e91e:	f2a1 71fe 	subw	r1, r1, #2046	; 0x7fe
 800e922:	00ed      	lsls	r5, r5, #3
 800e924:	ea01 2a0a 	and.w	sl, r1, sl, lsl #8
 800e928:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 800e92c:	ea4a 0505 	orr.w	r5, sl, r5
 800e930:	f816 a00c 	ldrb.w	sl, [r6, ip]
 800e934:	ea45 05da 	orr.w	r5, r5, sl, lsr #3
 800e938:	f82b 5009 	strh.w	r5, [fp, r9]
 800e93c:	9911      	ldr	r1, [sp, #68]	; 0x44
 800e93e:	4408      	add	r0, r1
 800e940:	9912      	ldr	r1, [sp, #72]	; 0x48
 800e942:	f10e 3eff 	add.w	lr, lr, #4294967295
 800e946:	440a      	add	r2, r1
 800e948:	e75a      	b.n	800e800 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x84>
 800e94a:	b005      	add	sp, #20
 800e94c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800e950:	fffff800 	.word	0xfffff800

0800e954 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 800e954:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e958:	b087      	sub	sp, #28
 800e95a:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 800e95e:	9204      	str	r2, [sp, #16]
 800e960:	f9bd 2064 	ldrsh.w	r2, [sp, #100]	; 0x64
 800e964:	9d15      	ldr	r5, [sp, #84]	; 0x54
 800e966:	9201      	str	r2, [sp, #4]
 800e968:	f89d 206c 	ldrb.w	r2, [sp, #108]	; 0x6c
 800e96c:	9205      	str	r2, [sp, #20]
 800e96e:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 800e972:	9100      	str	r1, [sp, #0]
 800e974:	6869      	ldr	r1, [r5, #4]
 800e976:	981a      	ldr	r0, [sp, #104]	; 0x68
 800e978:	f9bd e060 	ldrsh.w	lr, [sp, #96]	; 0x60
 800e97c:	fb01 2404 	mla	r4, r1, r4, r2
 800e980:	682a      	ldr	r2, [r5, #0]
 800e982:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 800e986:	6802      	ldr	r2, [r0, #0]
 800e988:	9202      	str	r2, [sp, #8]
 800e98a:	6842      	ldr	r2, [r0, #4]
 800e98c:	3204      	adds	r2, #4
 800e98e:	9203      	str	r2, [sp, #12]
 800e990:	9a00      	ldr	r2, [sp, #0]
 800e992:	2a00      	cmp	r2, #0
 800e994:	dc03      	bgt.n	800e99e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4a>
 800e996:	9a04      	ldr	r2, [sp, #16]
 800e998:	2a00      	cmp	r2, #0
 800e99a:	f340 812c 	ble.w	800ebf6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2a2>
 800e99e:	9a11      	ldr	r2, [sp, #68]	; 0x44
 800e9a0:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 800e9a4:	9a12      	ldr	r2, [sp, #72]	; 0x48
 800e9a6:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 800e9aa:	2b00      	cmp	r3, #0
 800e9ac:	dd0f      	ble.n	800e9ce <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7a>
 800e9ae:	1402      	asrs	r2, r0, #16
 800e9b0:	d406      	bmi.n	800e9c0 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6c>
 800e9b2:	4572      	cmp	r2, lr
 800e9b4:	da04      	bge.n	800e9c0 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6c>
 800e9b6:	140a      	asrs	r2, r1, #16
 800e9b8:	d402      	bmi.n	800e9c0 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6c>
 800e9ba:	9d01      	ldr	r5, [sp, #4]
 800e9bc:	42aa      	cmp	r2, r5
 800e9be:	db07      	blt.n	800e9d0 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7c>
 800e9c0:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 800e9c2:	4410      	add	r0, r2
 800e9c4:	9a14      	ldr	r2, [sp, #80]	; 0x50
 800e9c6:	3b01      	subs	r3, #1
 800e9c8:	4411      	add	r1, r2
 800e9ca:	3402      	adds	r4, #2
 800e9cc:	e7ed      	b.n	800e9aa <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x56>
 800e9ce:	d00f      	beq.n	800e9f0 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9c>
 800e9d0:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 800e9d2:	1e5a      	subs	r2, r3, #1
 800e9d4:	fb05 0502 	mla	r5, r5, r2, r0
 800e9d8:	142d      	asrs	r5, r5, #16
 800e9da:	d545      	bpl.n	800ea68 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x114>
 800e9dc:	4699      	mov	r9, r3
 800e9de:	46a0      	mov	r8, r4
 800e9e0:	f1b9 0f00 	cmp.w	r9, #0
 800e9e4:	f300 80a7 	bgt.w	800eb36 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1e2>
 800e9e8:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 800e9ec:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 800e9f0:	9b00      	ldr	r3, [sp, #0]
 800e9f2:	2b00      	cmp	r3, #0
 800e9f4:	f340 80ff 	ble.w	800ebf6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2a2>
 800e9f8:	ee30 0a04 	vadd.f32	s0, s0, s8
 800e9fc:	ee70 0aa4 	vadd.f32	s1, s1, s9
 800ea00:	eec6 7a80 	vdiv.f32	s15, s13, s0
 800ea04:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800ea06:	ee31 1a05 	vadd.f32	s2, s2, s10
 800ea0a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 800ea0e:	eeb0 6a62 	vmov.f32	s12, s5
 800ea12:	ee61 7a27 	vmul.f32	s15, s2, s15
 800ea16:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 800ea1a:	ee77 2a62 	vsub.f32	s5, s14, s5
 800ea1e:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 800ea22:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 800ea26:	eeb0 6a43 	vmov.f32	s12, s6
 800ea2a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 800ea2e:	ee12 2a90 	vmov	r2, s5
 800ea32:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 800ea36:	fb92 f3f3 	sdiv	r3, r2, r3
 800ea3a:	ee13 2a10 	vmov	r2, s6
 800ea3e:	9313      	str	r3, [sp, #76]	; 0x4c
 800ea40:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800ea42:	fb92 f3f3 	sdiv	r3, r2, r3
 800ea46:	9314      	str	r3, [sp, #80]	; 0x50
 800ea48:	9b00      	ldr	r3, [sp, #0]
 800ea4a:	9a04      	ldr	r2, [sp, #16]
 800ea4c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 800ea50:	3b01      	subs	r3, #1
 800ea52:	9300      	str	r3, [sp, #0]
 800ea54:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 800ea58:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800ea5a:	eeb0 3a67 	vmov.f32	s6, s15
 800ea5e:	bf08      	it	eq
 800ea60:	4613      	moveq	r3, r2
 800ea62:	eef0 2a47 	vmov.f32	s5, s14
 800ea66:	e793      	b.n	800e990 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3c>
 800ea68:	4575      	cmp	r5, lr
 800ea6a:	dab7      	bge.n	800e9dc <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x88>
 800ea6c:	9d14      	ldr	r5, [sp, #80]	; 0x50
 800ea6e:	fb05 1202 	mla	r2, r5, r2, r1
 800ea72:	1412      	asrs	r2, r2, #16
 800ea74:	d4b2      	bmi.n	800e9dc <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x88>
 800ea76:	9d01      	ldr	r5, [sp, #4]
 800ea78:	42aa      	cmp	r2, r5
 800ea7a:	daaf      	bge.n	800e9dc <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x88>
 800ea7c:	f04f 0800 	mov.w	r8, #0
 800ea80:	eba3 0208 	sub.w	r2, r3, r8
 800ea84:	2a00      	cmp	r2, #0
 800ea86:	ddaf      	ble.n	800e9e8 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x94>
 800ea88:	9e02      	ldr	r6, [sp, #8]
 800ea8a:	140a      	asrs	r2, r1, #16
 800ea8c:	1405      	asrs	r5, r0, #16
 800ea8e:	fb0e 6202 	mla	r2, lr, r2, r6
 800ea92:	5d52      	ldrb	r2, [r2, r5]
 800ea94:	9d03      	ldr	r5, [sp, #12]
 800ea96:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 800ea9a:	0e2e      	lsrs	r6, r5, #24
 800ea9c:	d044      	beq.n	800eb28 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d4>
 800ea9e:	9a05      	ldr	r2, [sp, #20]
 800eaa0:	f834 c018 	ldrh.w	ip, [r4, r8, lsl #1]
 800eaa4:	4356      	muls	r6, r2
 800eaa6:	1c72      	adds	r2, r6, #1
 800eaa8:	eb02 2226 	add.w	r2, r2, r6, asr #8
 800eaac:	1212      	asrs	r2, r2, #8
 800eaae:	fa1f f982 	uxth.w	r9, r2
 800eab2:	ea4f 272c 	mov.w	r7, ip, asr #8
 800eab6:	f3c5 4607 	ubfx	r6, r5, #16, #8
 800eaba:	43d2      	mvns	r2, r2
 800eabc:	b2d2      	uxtb	r2, r2
 800eabe:	fb16 f609 	smulbb	r6, r6, r9
 800eac2:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 800eac6:	fb07 6702 	mla	r7, r7, r2, r6
 800eaca:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 800eace:	ea4f 06ec 	mov.w	r6, ip, asr #3
 800ead2:	b2ed      	uxtb	r5, r5
 800ead4:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 800ead8:	fa5f fc8c 	uxtb.w	ip, ip
 800eadc:	fb15 f509 	smulbb	r5, r5, r9
 800eae0:	fb0c 5502 	mla	r5, ip, r2, r5
 800eae4:	b2bf      	uxth	r7, r7
 800eae6:	fb1a fa09 	smulbb	sl, sl, r9
 800eaea:	b2ad      	uxth	r5, r5
 800eaec:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 800eaf0:	fb06 a602 	mla	r6, r6, r2, sl
 800eaf4:	1c7a      	adds	r2, r7, #1
 800eaf6:	f105 0a01 	add.w	sl, r5, #1
 800eafa:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 800eafe:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 800eb02:	b2b6      	uxth	r6, r6
 800eb04:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 800eb08:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 800eb0c:	ea47 070a 	orr.w	r7, r7, sl
 800eb10:	f106 0a01 	add.w	sl, r6, #1
 800eb14:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 800eb18:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 800eb1c:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 800eb20:	ea47 070a 	orr.w	r7, r7, sl
 800eb24:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 800eb28:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 800eb2a:	4410      	add	r0, r2
 800eb2c:	9a14      	ldr	r2, [sp, #80]	; 0x50
 800eb2e:	f108 0801 	add.w	r8, r8, #1
 800eb32:	4411      	add	r1, r2
 800eb34:	e7a4      	b.n	800ea80 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x12c>
 800eb36:	1405      	asrs	r5, r0, #16
 800eb38:	d454      	bmi.n	800ebe4 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x290>
 800eb3a:	4575      	cmp	r5, lr
 800eb3c:	da52      	bge.n	800ebe4 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x290>
 800eb3e:	140a      	asrs	r2, r1, #16
 800eb40:	d450      	bmi.n	800ebe4 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x290>
 800eb42:	9e01      	ldr	r6, [sp, #4]
 800eb44:	42b2      	cmp	r2, r6
 800eb46:	da4d      	bge.n	800ebe4 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x290>
 800eb48:	9e02      	ldr	r6, [sp, #8]
 800eb4a:	fb0e 6202 	mla	r2, lr, r2, r6
 800eb4e:	5d52      	ldrb	r2, [r2, r5]
 800eb50:	9d03      	ldr	r5, [sp, #12]
 800eb52:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 800eb56:	0e2e      	lsrs	r6, r5, #24
 800eb58:	d044      	beq.n	800ebe4 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x290>
 800eb5a:	9a05      	ldr	r2, [sp, #20]
 800eb5c:	f8b8 c000 	ldrh.w	ip, [r8]
 800eb60:	4356      	muls	r6, r2
 800eb62:	1c72      	adds	r2, r6, #1
 800eb64:	eb02 2226 	add.w	r2, r2, r6, asr #8
 800eb68:	1212      	asrs	r2, r2, #8
 800eb6a:	fa1f fa82 	uxth.w	sl, r2
 800eb6e:	ea4f 272c 	mov.w	r7, ip, asr #8
 800eb72:	f3c5 4607 	ubfx	r6, r5, #16, #8
 800eb76:	43d2      	mvns	r2, r2
 800eb78:	b2d2      	uxtb	r2, r2
 800eb7a:	fb16 f60a 	smulbb	r6, r6, sl
 800eb7e:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 800eb82:	fb07 6702 	mla	r7, r7, r2, r6
 800eb86:	f3c5 2b07 	ubfx	fp, r5, #8, #8
 800eb8a:	ea4f 06ec 	mov.w	r6, ip, asr #3
 800eb8e:	b2ed      	uxtb	r5, r5
 800eb90:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 800eb94:	fa5f fc8c 	uxtb.w	ip, ip
 800eb98:	fb15 f50a 	smulbb	r5, r5, sl
 800eb9c:	fb0c 5502 	mla	r5, ip, r2, r5
 800eba0:	b2bf      	uxth	r7, r7
 800eba2:	fb1b fb0a 	smulbb	fp, fp, sl
 800eba6:	b2ad      	uxth	r5, r5
 800eba8:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 800ebac:	fb06 b602 	mla	r6, r6, r2, fp
 800ebb0:	1c7a      	adds	r2, r7, #1
 800ebb2:	f105 0b01 	add.w	fp, r5, #1
 800ebb6:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 800ebba:	eb0b 2b15 	add.w	fp, fp, r5, lsr #8
 800ebbe:	b2b6      	uxth	r6, r6
 800ebc0:	f3cb 2bc4 	ubfx	fp, fp, #11, #5
 800ebc4:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 800ebc8:	ea47 070b 	orr.w	r7, r7, fp
 800ebcc:	f106 0b01 	add.w	fp, r6, #1
 800ebd0:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 800ebd4:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 800ebd8:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 800ebdc:	ea47 070b 	orr.w	r7, r7, fp
 800ebe0:	f8a8 7000 	strh.w	r7, [r8]
 800ebe4:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 800ebe6:	4410      	add	r0, r2
 800ebe8:	9a14      	ldr	r2, [sp, #80]	; 0x50
 800ebea:	f108 0802 	add.w	r8, r8, #2
 800ebee:	4411      	add	r1, r2
 800ebf0:	f109 39ff 	add.w	r9, r9, #4294967295
 800ebf4:	e6f4      	b.n	800e9e0 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x8c>
 800ebf6:	b007      	add	sp, #28
 800ebf8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800ebfc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 800ebfc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ec00:	b087      	sub	sp, #28
 800ec02:	468b      	mov	fp, r1
 800ec04:	9d15      	ldr	r5, [sp, #84]	; 0x54
 800ec06:	9205      	str	r2, [sp, #20]
 800ec08:	f9bd 2064 	ldrsh.w	r2, [sp, #100]	; 0x64
 800ec0c:	9201      	str	r2, [sp, #4]
 800ec0e:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 800ec12:	6869      	ldr	r1, [r5, #4]
 800ec14:	981a      	ldr	r0, [sp, #104]	; 0x68
 800ec16:	f9bd 8060 	ldrsh.w	r8, [sp, #96]	; 0x60
 800ec1a:	fb01 2404 	mla	r4, r1, r4, r2
 800ec1e:	682a      	ldr	r2, [r5, #0]
 800ec20:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 800ec24:	6802      	ldr	r2, [r0, #0]
 800ec26:	9203      	str	r2, [sp, #12]
 800ec28:	6842      	ldr	r2, [r0, #4]
 800ec2a:	3204      	adds	r2, #4
 800ec2c:	9204      	str	r2, [sp, #16]
 800ec2e:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 800ec32:	f1bb 0f00 	cmp.w	fp, #0
 800ec36:	dc03      	bgt.n	800ec40 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x44>
 800ec38:	9a05      	ldr	r2, [sp, #20]
 800ec3a:	2a00      	cmp	r2, #0
 800ec3c:	f340 814a 	ble.w	800eed4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2d8>
 800ec40:	9a11      	ldr	r2, [sp, #68]	; 0x44
 800ec42:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 800ec46:	9a12      	ldr	r2, [sp, #72]	; 0x48
 800ec48:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 800ec4c:	2b00      	cmp	r3, #0
 800ec4e:	dd0f      	ble.n	800ec70 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x74>
 800ec50:	1408      	asrs	r0, r1, #16
 800ec52:	d406      	bmi.n	800ec62 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x66>
 800ec54:	4540      	cmp	r0, r8
 800ec56:	da04      	bge.n	800ec62 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x66>
 800ec58:	1410      	asrs	r0, r2, #16
 800ec5a:	d402      	bmi.n	800ec62 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x66>
 800ec5c:	9d01      	ldr	r5, [sp, #4]
 800ec5e:	42a8      	cmp	r0, r5
 800ec60:	db07      	blt.n	800ec72 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x76>
 800ec62:	9813      	ldr	r0, [sp, #76]	; 0x4c
 800ec64:	4401      	add	r1, r0
 800ec66:	9814      	ldr	r0, [sp, #80]	; 0x50
 800ec68:	3b01      	subs	r3, #1
 800ec6a:	4402      	add	r2, r0
 800ec6c:	3402      	adds	r4, #2
 800ec6e:	e7ed      	b.n	800ec4c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x50>
 800ec70:	d018      	beq.n	800eca4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xa8>
 800ec72:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 800ec74:	1e58      	subs	r0, r3, #1
 800ec76:	fb05 1500 	mla	r5, r5, r0, r1
 800ec7a:	142d      	asrs	r5, r5, #16
 800ec7c:	d40a      	bmi.n	800ec94 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x98>
 800ec7e:	4545      	cmp	r5, r8
 800ec80:	da08      	bge.n	800ec94 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x98>
 800ec82:	9d14      	ldr	r5, [sp, #80]	; 0x50
 800ec84:	fb05 2000 	mla	r0, r5, r0, r2
 800ec88:	1400      	asrs	r0, r0, #16
 800ec8a:	d403      	bmi.n	800ec94 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x98>
 800ec8c:	9d01      	ldr	r5, [sp, #4]
 800ec8e:	42a8      	cmp	r0, r5
 800ec90:	f2c0 80b7 	blt.w	800ee02 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x206>
 800ec94:	2600      	movs	r6, #0
 800ec96:	1998      	adds	r0, r3, r6
 800ec98:	2800      	cmp	r0, #0
 800ec9a:	dc3e      	bgt.n	800ed1a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x11e>
 800ec9c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 800eca0:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 800eca4:	f1bb 0f00 	cmp.w	fp, #0
 800eca8:	f340 8114 	ble.w	800eed4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2d8>
 800ecac:	ee30 0a04 	vadd.f32	s0, s0, s8
 800ecb0:	ee70 0aa4 	vadd.f32	s1, s1, s9
 800ecb4:	eec6 7a80 	vdiv.f32	s15, s13, s0
 800ecb8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800ecba:	f1bb 0b01 	subs.w	fp, fp, #1
 800ecbe:	ee31 1a05 	vadd.f32	s2, s2, s10
 800ecc2:	ee20 7aa7 	vmul.f32	s14, s1, s15
 800ecc6:	eeb0 6a62 	vmov.f32	s12, s5
 800ecca:	ee61 7a27 	vmul.f32	s15, s2, s15
 800ecce:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 800ecd2:	ee77 2a62 	vsub.f32	s5, s14, s5
 800ecd6:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 800ecda:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 800ecde:	eeb0 6a43 	vmov.f32	s12, s6
 800ece2:	ee37 3ac3 	vsub.f32	s6, s15, s6
 800ece6:	ee12 2a90 	vmov	r2, s5
 800ecea:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 800ecee:	fb92 f3f3 	sdiv	r3, r2, r3
 800ecf2:	ee13 2a10 	vmov	r2, s6
 800ecf6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 800ecfa:	9313      	str	r3, [sp, #76]	; 0x4c
 800ecfc:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800ecfe:	fb92 f3f3 	sdiv	r3, r2, r3
 800ed02:	9a05      	ldr	r2, [sp, #20]
 800ed04:	9314      	str	r3, [sp, #80]	; 0x50
 800ed06:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 800ed0a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800ed0c:	eeb0 3a67 	vmov.f32	s6, s15
 800ed10:	bf08      	it	eq
 800ed12:	4613      	moveq	r3, r2
 800ed14:	eef0 2a47 	vmov.f32	s5, s14
 800ed18:	e78b      	b.n	800ec32 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x36>
 800ed1a:	140d      	asrs	r5, r1, #16
 800ed1c:	d459      	bmi.n	800edd2 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 800ed1e:	4545      	cmp	r5, r8
 800ed20:	da57      	bge.n	800edd2 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 800ed22:	1410      	asrs	r0, r2, #16
 800ed24:	d455      	bmi.n	800edd2 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 800ed26:	9f01      	ldr	r7, [sp, #4]
 800ed28:	42b8      	cmp	r0, r7
 800ed2a:	da52      	bge.n	800edd2 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 800ed2c:	9f03      	ldr	r7, [sp, #12]
 800ed2e:	fb08 7000 	mla	r0, r8, r0, r7
 800ed32:	5d40      	ldrb	r0, [r0, r5]
 800ed34:	9d04      	ldr	r5, [sp, #16]
 800ed36:	f855 0020 	ldr.w	r0, [r5, r0, lsl #2]
 800ed3a:	0e07      	lsrs	r7, r0, #24
 800ed3c:	2fff      	cmp	r7, #255	; 0xff
 800ed3e:	d04e      	beq.n	800edde <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1e2>
 800ed40:	b2fd      	uxtb	r5, r7
 800ed42:	2f00      	cmp	r7, #0
 800ed44:	d045      	beq.n	800edd2 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 800ed46:	f06f 0701 	mvn.w	r7, #1
 800ed4a:	4377      	muls	r7, r6
 800ed4c:	fa1f f985 	uxth.w	r9, r5
 800ed50:	f834 e007 	ldrh.w	lr, [r4, r7]
 800ed54:	9702      	str	r7, [sp, #8]
 800ed56:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 800ed5a:	f3c0 4707 	ubfx	r7, r0, #16, #8
 800ed5e:	43ed      	mvns	r5, r5
 800ed60:	b2ed      	uxtb	r5, r5
 800ed62:	fb17 f709 	smulbb	r7, r7, r9
 800ed66:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 800ed6a:	fb0c 7c05 	mla	ip, ip, r5, r7
 800ed6e:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 800ed72:	ea4f 07ee 	mov.w	r7, lr, asr #3
 800ed76:	b2c0      	uxtb	r0, r0
 800ed78:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 800ed7c:	fa5f fe8e 	uxtb.w	lr, lr
 800ed80:	fb10 f009 	smulbb	r0, r0, r9
 800ed84:	fb0e 0005 	mla	r0, lr, r5, r0
 800ed88:	b280      	uxth	r0, r0
 800ed8a:	fa1f fc8c 	uxth.w	ip, ip
 800ed8e:	fb1a fa09 	smulbb	sl, sl, r9
 800ed92:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 800ed96:	fb07 a705 	mla	r7, r7, r5, sl
 800ed9a:	f100 0a01 	add.w	sl, r0, #1
 800ed9e:	f10c 0501 	add.w	r5, ip, #1
 800eda2:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 800eda6:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 800edaa:	b2bf      	uxth	r7, r7
 800edac:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 800edb0:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 800edb4:	ea4c 0c0a 	orr.w	ip, ip, sl
 800edb8:	f107 0a01 	add.w	sl, r7, #1
 800edbc:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 800edc0:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 800edc4:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 800edc8:	9802      	ldr	r0, [sp, #8]
 800edca:	ea4c 0c0a 	orr.w	ip, ip, sl
 800edce:	f824 c000 	strh.w	ip, [r4, r0]
 800edd2:	9813      	ldr	r0, [sp, #76]	; 0x4c
 800edd4:	4401      	add	r1, r0
 800edd6:	9814      	ldr	r0, [sp, #80]	; 0x50
 800edd8:	3e01      	subs	r6, #1
 800edda:	4402      	add	r2, r0
 800eddc:	e75b      	b.n	800ec96 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9a>
 800edde:	f06f 0501 	mvn.w	r5, #1
 800ede2:	fb05 f706 	mul.w	r7, r5, r6
 800ede6:	f2a5 75fe 	subw	r5, r5, #2046	; 0x7fe
 800edea:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 800edee:	0945      	lsrs	r5, r0, #5
 800edf0:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 800edf4:	ea4c 0505 	orr.w	r5, ip, r5
 800edf8:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 800edfc:	4305      	orrs	r5, r0
 800edfe:	53e5      	strh	r5, [r4, r7]
 800ee00:	e7e7      	b.n	800edd2 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 800ee02:	f04f 0e00 	mov.w	lr, #0
 800ee06:	eba3 000e 	sub.w	r0, r3, lr
 800ee0a:	2800      	cmp	r0, #0
 800ee0c:	f77f af46 	ble.w	800ec9c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xa0>
 800ee10:	9e03      	ldr	r6, [sp, #12]
 800ee12:	1410      	asrs	r0, r2, #16
 800ee14:	140d      	asrs	r5, r1, #16
 800ee16:	fb08 6000 	mla	r0, r8, r0, r6
 800ee1a:	5d40      	ldrb	r0, [r0, r5]
 800ee1c:	9d04      	ldr	r5, [sp, #16]
 800ee1e:	f855 0020 	ldr.w	r0, [r5, r0, lsl #2]
 800ee22:	0e06      	lsrs	r6, r0, #24
 800ee24:	2eff      	cmp	r6, #255	; 0xff
 800ee26:	d048      	beq.n	800eeba <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2be>
 800ee28:	b2f5      	uxtb	r5, r6
 800ee2a:	2e00      	cmp	r6, #0
 800ee2c:	d03e      	beq.n	800eeac <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2b0>
 800ee2e:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 800ee32:	fa1f f985 	uxth.w	r9, r5
 800ee36:	ea4f 272c 	mov.w	r7, ip, asr #8
 800ee3a:	f3c0 4607 	ubfx	r6, r0, #16, #8
 800ee3e:	43ed      	mvns	r5, r5
 800ee40:	b2ed      	uxtb	r5, r5
 800ee42:	fb16 f609 	smulbb	r6, r6, r9
 800ee46:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 800ee4a:	fb07 6705 	mla	r7, r7, r5, r6
 800ee4e:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 800ee52:	ea4f 06ec 	mov.w	r6, ip, asr #3
 800ee56:	b2c0      	uxtb	r0, r0
 800ee58:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 800ee5c:	fa5f fc8c 	uxtb.w	ip, ip
 800ee60:	fb10 f009 	smulbb	r0, r0, r9
 800ee64:	fb0c 0005 	mla	r0, ip, r5, r0
 800ee68:	b2bf      	uxth	r7, r7
 800ee6a:	fb1a fa09 	smulbb	sl, sl, r9
 800ee6e:	b280      	uxth	r0, r0
 800ee70:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 800ee74:	fb06 a605 	mla	r6, r6, r5, sl
 800ee78:	1c7d      	adds	r5, r7, #1
 800ee7a:	f100 0a01 	add.w	sl, r0, #1
 800ee7e:	eb05 2717 	add.w	r7, r5, r7, lsr #8
 800ee82:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 800ee86:	b2b6      	uxth	r6, r6
 800ee88:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 800ee8c:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 800ee90:	ea47 070a 	orr.w	r7, r7, sl
 800ee94:	f106 0a01 	add.w	sl, r6, #1
 800ee98:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 800ee9c:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 800eea0:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 800eea4:	ea47 070a 	orr.w	r7, r7, sl
 800eea8:	f824 701e 	strh.w	r7, [r4, lr, lsl #1]
 800eeac:	9813      	ldr	r0, [sp, #76]	; 0x4c
 800eeae:	4401      	add	r1, r0
 800eeb0:	9814      	ldr	r0, [sp, #80]	; 0x50
 800eeb2:	f10e 0e01 	add.w	lr, lr, #1
 800eeb6:	4402      	add	r2, r0
 800eeb8:	e7a5      	b.n	800ee06 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x20a>
 800eeba:	4d08      	ldr	r5, [pc, #32]	; (800eedc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2e0>)
 800eebc:	ea05 2610 	and.w	r6, r5, r0, lsr #8
 800eec0:	0945      	lsrs	r5, r0, #5
 800eec2:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 800eec6:	4335      	orrs	r5, r6
 800eec8:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 800eecc:	4305      	orrs	r5, r0
 800eece:	f824 501e 	strh.w	r5, [r4, lr, lsl #1]
 800eed2:	e7eb      	b.n	800eeac <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2b0>
 800eed4:	b007      	add	sp, #28
 800eed6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800eeda:	bf00      	nop
 800eedc:	fffff800 	.word	0xfffff800

0800eee0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 800eee0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800eee4:	b087      	sub	sp, #28
 800eee6:	468b      	mov	fp, r1
 800eee8:	9204      	str	r2, [sp, #16]
 800eeea:	f9bd 2064 	ldrsh.w	r2, [sp, #100]	; 0x64
 800eeee:	9d15      	ldr	r5, [sp, #84]	; 0x54
 800eef0:	9201      	str	r2, [sp, #4]
 800eef2:	f89d 206c 	ldrb.w	r2, [sp, #108]	; 0x6c
 800eef6:	9205      	str	r2, [sp, #20]
 800eef8:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 800eefc:	6869      	ldr	r1, [r5, #4]
 800eefe:	981a      	ldr	r0, [sp, #104]	; 0x68
 800ef00:	f9bd 8060 	ldrsh.w	r8, [sp, #96]	; 0x60
 800ef04:	fb01 2404 	mla	r4, r1, r4, r2
 800ef08:	682a      	ldr	r2, [r5, #0]
 800ef0a:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 800ef0e:	6802      	ldr	r2, [r0, #0]
 800ef10:	9202      	str	r2, [sp, #8]
 800ef12:	6842      	ldr	r2, [r0, #4]
 800ef14:	9203      	str	r2, [sp, #12]
 800ef16:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 800ef1a:	f1bb 0f00 	cmp.w	fp, #0
 800ef1e:	dc03      	bgt.n	800ef28 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x48>
 800ef20:	9a04      	ldr	r2, [sp, #16]
 800ef22:	2a00      	cmp	r2, #0
 800ef24:	f340 8136 	ble.w	800f194 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2b4>
 800ef28:	9a11      	ldr	r2, [sp, #68]	; 0x44
 800ef2a:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 800ef2e:	9a12      	ldr	r2, [sp, #72]	; 0x48
 800ef30:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 800ef34:	2b00      	cmp	r3, #0
 800ef36:	dd0f      	ble.n	800ef58 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x78>
 800ef38:	1408      	asrs	r0, r1, #16
 800ef3a:	d406      	bmi.n	800ef4a <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6a>
 800ef3c:	4540      	cmp	r0, r8
 800ef3e:	da04      	bge.n	800ef4a <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6a>
 800ef40:	1410      	asrs	r0, r2, #16
 800ef42:	d402      	bmi.n	800ef4a <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6a>
 800ef44:	9d01      	ldr	r5, [sp, #4]
 800ef46:	42a8      	cmp	r0, r5
 800ef48:	db07      	blt.n	800ef5a <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7a>
 800ef4a:	9813      	ldr	r0, [sp, #76]	; 0x4c
 800ef4c:	4401      	add	r1, r0
 800ef4e:	9814      	ldr	r0, [sp, #80]	; 0x50
 800ef50:	3b01      	subs	r3, #1
 800ef52:	4402      	add	r2, r0
 800ef54:	3402      	adds	r4, #2
 800ef56:	e7ed      	b.n	800ef34 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x54>
 800ef58:	d00f      	beq.n	800ef7a <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9a>
 800ef5a:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 800ef5c:	1e58      	subs	r0, r3, #1
 800ef5e:	fb05 1500 	mla	r5, r5, r0, r1
 800ef62:	142d      	asrs	r5, r5, #16
 800ef64:	d544      	bpl.n	800eff0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x110>
 800ef66:	9300      	str	r3, [sp, #0]
 800ef68:	46a2      	mov	sl, r4
 800ef6a:	9800      	ldr	r0, [sp, #0]
 800ef6c:	2800      	cmp	r0, #0
 800ef6e:	f300 80ab 	bgt.w	800f0c8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1e8>
 800ef72:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 800ef76:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 800ef7a:	f1bb 0f00 	cmp.w	fp, #0
 800ef7e:	f340 8109 	ble.w	800f194 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2b4>
 800ef82:	ee30 0a04 	vadd.f32	s0, s0, s8
 800ef86:	ee70 0aa4 	vadd.f32	s1, s1, s9
 800ef8a:	eec6 7a80 	vdiv.f32	s15, s13, s0
 800ef8e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800ef90:	f1bb 0b01 	subs.w	fp, fp, #1
 800ef94:	ee31 1a05 	vadd.f32	s2, s2, s10
 800ef98:	ee20 7aa7 	vmul.f32	s14, s1, s15
 800ef9c:	eeb0 6a62 	vmov.f32	s12, s5
 800efa0:	ee61 7a27 	vmul.f32	s15, s2, s15
 800efa4:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 800efa8:	ee77 2a62 	vsub.f32	s5, s14, s5
 800efac:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 800efb0:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 800efb4:	eeb0 6a43 	vmov.f32	s12, s6
 800efb8:	ee37 3ac3 	vsub.f32	s6, s15, s6
 800efbc:	ee12 2a90 	vmov	r2, s5
 800efc0:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 800efc4:	fb92 f3f3 	sdiv	r3, r2, r3
 800efc8:	ee13 2a10 	vmov	r2, s6
 800efcc:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 800efd0:	9313      	str	r3, [sp, #76]	; 0x4c
 800efd2:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800efd4:	fb92 f3f3 	sdiv	r3, r2, r3
 800efd8:	9a04      	ldr	r2, [sp, #16]
 800efda:	9314      	str	r3, [sp, #80]	; 0x50
 800efdc:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 800efe0:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800efe2:	eeb0 3a67 	vmov.f32	s6, s15
 800efe6:	bf08      	it	eq
 800efe8:	4613      	moveq	r3, r2
 800efea:	eef0 2a47 	vmov.f32	s5, s14
 800efee:	e794      	b.n	800ef1a <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3a>
 800eff0:	4545      	cmp	r5, r8
 800eff2:	dab8      	bge.n	800ef66 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x86>
 800eff4:	9d14      	ldr	r5, [sp, #80]	; 0x50
 800eff6:	fb05 2000 	mla	r0, r5, r0, r2
 800effa:	1400      	asrs	r0, r0, #16
 800effc:	d4b3      	bmi.n	800ef66 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x86>
 800effe:	9d01      	ldr	r5, [sp, #4]
 800f000:	42a8      	cmp	r0, r5
 800f002:	dab0      	bge.n	800ef66 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x86>
 800f004:	f04f 0900 	mov.w	r9, #0
 800f008:	eba3 0009 	sub.w	r0, r3, r9
 800f00c:	2800      	cmp	r0, #0
 800f00e:	ddb0      	ble.n	800ef72 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x92>
 800f010:	140d      	asrs	r5, r1, #16
 800f012:	1410      	asrs	r0, r2, #16
 800f014:	fb08 5000 	mla	r0, r8, r0, r5
 800f018:	9d03      	ldr	r5, [sp, #12]
 800f01a:	5c2e      	ldrb	r6, [r5, r0]
 800f01c:	2e00      	cmp	r6, #0
 800f01e:	d04c      	beq.n	800f0ba <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1da>
 800f020:	9d02      	ldr	r5, [sp, #8]
 800f022:	f835 e010 	ldrh.w	lr, [r5, r0, lsl #1]
 800f026:	9805      	ldr	r0, [sp, #20]
 800f028:	f834 5019 	ldrh.w	r5, [r4, r9, lsl #1]
 800f02c:	4346      	muls	r6, r0
 800f02e:	1c70      	adds	r0, r6, #1
 800f030:	eb00 2016 	add.w	r0, r0, r6, lsr #8
 800f034:	1200      	asrs	r0, r0, #8
 800f036:	b287      	uxth	r7, r0
 800f038:	122e      	asrs	r6, r5, #8
 800f03a:	43c0      	mvns	r0, r0
 800f03c:	b2c0      	uxtb	r0, r0
 800f03e:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 800f042:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 800f046:	fb16 f600 	smulbb	r6, r6, r0
 800f04a:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 800f04e:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 800f052:	00ed      	lsls	r5, r5, #3
 800f054:	fb0c 6c07 	mla	ip, ip, r7, r6
 800f058:	b2ed      	uxtb	r5, r5
 800f05a:	ea4f 06ee 	mov.w	r6, lr, asr #3
 800f05e:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 800f062:	fb15 f500 	smulbb	r5, r5, r0
 800f066:	fa5f fe8e 	uxtb.w	lr, lr
 800f06a:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 800f06e:	fb0e 5507 	mla	r5, lr, r7, r5
 800f072:	fb1a fa00 	smulbb	sl, sl, r0
 800f076:	fa1f fc8c 	uxth.w	ip, ip
 800f07a:	b2ad      	uxth	r5, r5
 800f07c:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 800f080:	fb06 a607 	mla	r6, r6, r7, sl
 800f084:	f10c 0001 	add.w	r0, ip, #1
 800f088:	f105 0a01 	add.w	sl, r5, #1
 800f08c:	eb00 2c1c 	add.w	ip, r0, ip, lsr #8
 800f090:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 800f094:	b2b6      	uxth	r6, r6
 800f096:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 800f09a:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 800f09e:	ea4c 0c0a 	orr.w	ip, ip, sl
 800f0a2:	f106 0a01 	add.w	sl, r6, #1
 800f0a6:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 800f0aa:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 800f0ae:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 800f0b2:	ea4c 0c0a 	orr.w	ip, ip, sl
 800f0b6:	f824 c019 	strh.w	ip, [r4, r9, lsl #1]
 800f0ba:	9813      	ldr	r0, [sp, #76]	; 0x4c
 800f0bc:	4401      	add	r1, r0
 800f0be:	9814      	ldr	r0, [sp, #80]	; 0x50
 800f0c0:	f109 0901 	add.w	r9, r9, #1
 800f0c4:	4402      	add	r2, r0
 800f0c6:	e79f      	b.n	800f008 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x128>
 800f0c8:	1408      	asrs	r0, r1, #16
 800f0ca:	d459      	bmi.n	800f180 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2a0>
 800f0cc:	4540      	cmp	r0, r8
 800f0ce:	da57      	bge.n	800f180 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2a0>
 800f0d0:	1415      	asrs	r5, r2, #16
 800f0d2:	d455      	bmi.n	800f180 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2a0>
 800f0d4:	9e01      	ldr	r6, [sp, #4]
 800f0d6:	42b5      	cmp	r5, r6
 800f0d8:	da52      	bge.n	800f180 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2a0>
 800f0da:	fb08 0005 	mla	r0, r8, r5, r0
 800f0de:	9d03      	ldr	r5, [sp, #12]
 800f0e0:	5c2e      	ldrb	r6, [r5, r0]
 800f0e2:	2e00      	cmp	r6, #0
 800f0e4:	d04c      	beq.n	800f180 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2a0>
 800f0e6:	9d02      	ldr	r5, [sp, #8]
 800f0e8:	f835 e010 	ldrh.w	lr, [r5, r0, lsl #1]
 800f0ec:	9805      	ldr	r0, [sp, #20]
 800f0ee:	f8ba 5000 	ldrh.w	r5, [sl]
 800f0f2:	4346      	muls	r6, r0
 800f0f4:	1c70      	adds	r0, r6, #1
 800f0f6:	eb00 2016 	add.w	r0, r0, r6, lsr #8
 800f0fa:	1200      	asrs	r0, r0, #8
 800f0fc:	b287      	uxth	r7, r0
 800f0fe:	122e      	asrs	r6, r5, #8
 800f100:	43c0      	mvns	r0, r0
 800f102:	b2c0      	uxtb	r0, r0
 800f104:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 800f108:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 800f10c:	fb16 f600 	smulbb	r6, r6, r0
 800f110:	ea4f 09e5 	mov.w	r9, r5, asr #3
 800f114:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 800f118:	00ed      	lsls	r5, r5, #3
 800f11a:	fb0c 6c07 	mla	ip, ip, r7, r6
 800f11e:	b2ed      	uxtb	r5, r5
 800f120:	ea4f 06ee 	mov.w	r6, lr, asr #3
 800f124:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 800f128:	fb15 f500 	smulbb	r5, r5, r0
 800f12c:	fa5f fe8e 	uxtb.w	lr, lr
 800f130:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 800f134:	fb0e 5507 	mla	r5, lr, r7, r5
 800f138:	fb19 f900 	smulbb	r9, r9, r0
 800f13c:	fa1f fc8c 	uxth.w	ip, ip
 800f140:	b2ad      	uxth	r5, r5
 800f142:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 800f146:	fb06 9607 	mla	r6, r6, r7, r9
 800f14a:	f10c 0001 	add.w	r0, ip, #1
 800f14e:	f105 0901 	add.w	r9, r5, #1
 800f152:	eb00 2c1c 	add.w	ip, r0, ip, lsr #8
 800f156:	eb09 2915 	add.w	r9, r9, r5, lsr #8
 800f15a:	b2b6      	uxth	r6, r6
 800f15c:	f3c9 29c4 	ubfx	r9, r9, #11, #5
 800f160:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 800f164:	ea4c 0c09 	orr.w	ip, ip, r9
 800f168:	f106 0901 	add.w	r9, r6, #1
 800f16c:	eb09 2916 	add.w	r9, r9, r6, lsr #8
 800f170:	ea4f 1959 	mov.w	r9, r9, lsr #5
 800f174:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 800f178:	ea4c 0c09 	orr.w	ip, ip, r9
 800f17c:	f8aa c000 	strh.w	ip, [sl]
 800f180:	9813      	ldr	r0, [sp, #76]	; 0x4c
 800f182:	4401      	add	r1, r0
 800f184:	9814      	ldr	r0, [sp, #80]	; 0x50
 800f186:	4402      	add	r2, r0
 800f188:	9800      	ldr	r0, [sp, #0]
 800f18a:	3801      	subs	r0, #1
 800f18c:	f10a 0a02 	add.w	sl, sl, #2
 800f190:	9000      	str	r0, [sp, #0]
 800f192:	e6ea      	b.n	800ef6a <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x8a>
 800f194:	b007      	add	sp, #28
 800f196:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800f19a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 800f19a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f19e:	b087      	sub	sp, #28
 800f1a0:	468b      	mov	fp, r1
 800f1a2:	9d15      	ldr	r5, [sp, #84]	; 0x54
 800f1a4:	9205      	str	r2, [sp, #20]
 800f1a6:	f9bd 2064 	ldrsh.w	r2, [sp, #100]	; 0x64
 800f1aa:	9202      	str	r2, [sp, #8]
 800f1ac:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
 800f1b0:	6869      	ldr	r1, [r5, #4]
 800f1b2:	9c1a      	ldr	r4, [sp, #104]	; 0x68
 800f1b4:	f9bd 9060 	ldrsh.w	r9, [sp, #96]	; 0x60
 800f1b8:	fb01 2000 	mla	r0, r1, r0, r2
 800f1bc:	682a      	ldr	r2, [r5, #0]
 800f1be:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 800f1c2:	6822      	ldr	r2, [r4, #0]
 800f1c4:	9201      	str	r2, [sp, #4]
 800f1c6:	6862      	ldr	r2, [r4, #4]
 800f1c8:	9204      	str	r2, [sp, #16]
 800f1ca:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 800f1ce:	f1bb 0f00 	cmp.w	fp, #0
 800f1d2:	dc03      	bgt.n	800f1dc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x42>
 800f1d4:	9a05      	ldr	r2, [sp, #20]
 800f1d6:	2a00      	cmp	r2, #0
 800f1d8:	f340 813d 	ble.w	800f456 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2bc>
 800f1dc:	9a11      	ldr	r2, [sp, #68]	; 0x44
 800f1de:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 800f1e2:	9a12      	ldr	r2, [sp, #72]	; 0x48
 800f1e4:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 800f1e8:	2b00      	cmp	r3, #0
 800f1ea:	dd0f      	ble.n	800f20c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x72>
 800f1ec:	140c      	asrs	r4, r1, #16
 800f1ee:	d406      	bmi.n	800f1fe <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x64>
 800f1f0:	454c      	cmp	r4, r9
 800f1f2:	da04      	bge.n	800f1fe <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x64>
 800f1f4:	1414      	asrs	r4, r2, #16
 800f1f6:	d402      	bmi.n	800f1fe <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x64>
 800f1f8:	9d02      	ldr	r5, [sp, #8]
 800f1fa:	42ac      	cmp	r4, r5
 800f1fc:	db07      	blt.n	800f20e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x74>
 800f1fe:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 800f200:	4421      	add	r1, r4
 800f202:	9c14      	ldr	r4, [sp, #80]	; 0x50
 800f204:	3b01      	subs	r3, #1
 800f206:	4422      	add	r2, r4
 800f208:	3002      	adds	r0, #2
 800f20a:	e7ed      	b.n	800f1e8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4e>
 800f20c:	d018      	beq.n	800f240 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xa6>
 800f20e:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 800f210:	1e5c      	subs	r4, r3, #1
 800f212:	fb05 1504 	mla	r5, r5, r4, r1
 800f216:	142d      	asrs	r5, r5, #16
 800f218:	d40a      	bmi.n	800f230 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x96>
 800f21a:	454d      	cmp	r5, r9
 800f21c:	da08      	bge.n	800f230 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x96>
 800f21e:	9d14      	ldr	r5, [sp, #80]	; 0x50
 800f220:	fb05 2404 	mla	r4, r5, r4, r2
 800f224:	1424      	asrs	r4, r4, #16
 800f226:	d403      	bmi.n	800f230 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x96>
 800f228:	9d02      	ldr	r5, [sp, #8]
 800f22a:	42ac      	cmp	r4, r5
 800f22c:	f2c0 80ae 	blt.w	800f38c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1f2>
 800f230:	2600      	movs	r6, #0
 800f232:	199c      	adds	r4, r3, r6
 800f234:	2c00      	cmp	r4, #0
 800f236:	dc3e      	bgt.n	800f2b6 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x11c>
 800f238:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 800f23c:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 800f240:	f1bb 0f00 	cmp.w	fp, #0
 800f244:	f340 8107 	ble.w	800f456 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2bc>
 800f248:	ee30 0a04 	vadd.f32	s0, s0, s8
 800f24c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 800f250:	eec6 7a80 	vdiv.f32	s15, s13, s0
 800f254:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800f256:	f1bb 0b01 	subs.w	fp, fp, #1
 800f25a:	ee31 1a05 	vadd.f32	s2, s2, s10
 800f25e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 800f262:	eeb0 6a62 	vmov.f32	s12, s5
 800f266:	ee61 7a27 	vmul.f32	s15, s2, s15
 800f26a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 800f26e:	ee77 2a62 	vsub.f32	s5, s14, s5
 800f272:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 800f276:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 800f27a:	eeb0 6a43 	vmov.f32	s12, s6
 800f27e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 800f282:	ee12 2a90 	vmov	r2, s5
 800f286:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 800f28a:	fb92 f3f3 	sdiv	r3, r2, r3
 800f28e:	ee13 2a10 	vmov	r2, s6
 800f292:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 800f296:	9313      	str	r3, [sp, #76]	; 0x4c
 800f298:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800f29a:	fb92 f3f3 	sdiv	r3, r2, r3
 800f29e:	9a05      	ldr	r2, [sp, #20]
 800f2a0:	9314      	str	r3, [sp, #80]	; 0x50
 800f2a2:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 800f2a6:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800f2a8:	eeb0 3a67 	vmov.f32	s6, s15
 800f2ac:	bf08      	it	eq
 800f2ae:	4613      	moveq	r3, r2
 800f2b0:	eef0 2a47 	vmov.f32	s5, s14
 800f2b4:	e78b      	b.n	800f1ce <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x34>
 800f2b6:	140c      	asrs	r4, r1, #16
 800f2b8:	d45a      	bmi.n	800f370 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 800f2ba:	454c      	cmp	r4, r9
 800f2bc:	da58      	bge.n	800f370 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 800f2be:	1415      	asrs	r5, r2, #16
 800f2c0:	d456      	bmi.n	800f370 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 800f2c2:	9f02      	ldr	r7, [sp, #8]
 800f2c4:	42bd      	cmp	r5, r7
 800f2c6:	da53      	bge.n	800f370 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 800f2c8:	fb09 4505 	mla	r5, r9, r5, r4
 800f2cc:	9c04      	ldr	r4, [sp, #16]
 800f2ce:	5d64      	ldrb	r4, [r4, r5]
 800f2d0:	2cff      	cmp	r4, #255	; 0xff
 800f2d2:	d053      	beq.n	800f37c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1e2>
 800f2d4:	2c00      	cmp	r4, #0
 800f2d6:	d04b      	beq.n	800f370 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 800f2d8:	9f01      	ldr	r7, [sp, #4]
 800f2da:	f837 8015 	ldrh.w	r8, [r7, r5, lsl #1]
 800f2de:	f06f 0501 	mvn.w	r5, #1
 800f2e2:	4375      	muls	r5, r6
 800f2e4:	9503      	str	r5, [sp, #12]
 800f2e6:	5b45      	ldrh	r5, [r0, r5]
 800f2e8:	fa1f fc84 	uxth.w	ip, r4
 800f2ec:	122f      	asrs	r7, r5, #8
 800f2ee:	43e4      	mvns	r4, r4
 800f2f0:	b2e4      	uxtb	r4, r4
 800f2f2:	ea4f 2e28 	mov.w	lr, r8, asr #8
 800f2f6:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 800f2fa:	fb17 f704 	smulbb	r7, r7, r4
 800f2fe:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 800f302:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 800f306:	00ed      	lsls	r5, r5, #3
 800f308:	fb0e 7e0c 	mla	lr, lr, ip, r7
 800f30c:	b2ed      	uxtb	r5, r5
 800f30e:	ea4f 07e8 	mov.w	r7, r8, asr #3
 800f312:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 800f316:	fb15 f504 	smulbb	r5, r5, r4
 800f31a:	fa5f f888 	uxtb.w	r8, r8
 800f31e:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 800f322:	fb08 550c 	mla	r5, r8, ip, r5
 800f326:	fb1a fa04 	smulbb	sl, sl, r4
 800f32a:	fa1f fe8e 	uxth.w	lr, lr
 800f32e:	b2ad      	uxth	r5, r5
 800f330:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 800f334:	fb07 a70c 	mla	r7, r7, ip, sl
 800f338:	f10e 0401 	add.w	r4, lr, #1
 800f33c:	f105 0a01 	add.w	sl, r5, #1
 800f340:	eb04 2e1e 	add.w	lr, r4, lr, lsr #8
 800f344:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 800f348:	b2bf      	uxth	r7, r7
 800f34a:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 800f34e:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 800f352:	ea4e 0e0a 	orr.w	lr, lr, sl
 800f356:	f107 0a01 	add.w	sl, r7, #1
 800f35a:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 800f35e:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 800f362:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 800f366:	9c03      	ldr	r4, [sp, #12]
 800f368:	ea4e 0e0a 	orr.w	lr, lr, sl
 800f36c:	f820 e004 	strh.w	lr, [r0, r4]
 800f370:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 800f372:	4421      	add	r1, r4
 800f374:	9c14      	ldr	r4, [sp, #80]	; 0x50
 800f376:	3e01      	subs	r6, #1
 800f378:	4422      	add	r2, r4
 800f37a:	e75a      	b.n	800f232 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x98>
 800f37c:	9c01      	ldr	r4, [sp, #4]
 800f37e:	f834 5015 	ldrh.w	r5, [r4, r5, lsl #1]
 800f382:	f06f 0401 	mvn.w	r4, #1
 800f386:	4374      	muls	r4, r6
 800f388:	5305      	strh	r5, [r0, r4]
 800f38a:	e7f1      	b.n	800f370 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 800f38c:	f04f 0800 	mov.w	r8, #0
 800f390:	eba3 0408 	sub.w	r4, r3, r8
 800f394:	2c00      	cmp	r4, #0
 800f396:	f77f af4f 	ble.w	800f238 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9e>
 800f39a:	140c      	asrs	r4, r1, #16
 800f39c:	1415      	asrs	r5, r2, #16
 800f39e:	fb09 4505 	mla	r5, r9, r5, r4
 800f3a2:	9c04      	ldr	r4, [sp, #16]
 800f3a4:	5d64      	ldrb	r4, [r4, r5]
 800f3a6:	2cff      	cmp	r4, #255	; 0xff
 800f3a8:	d04f      	beq.n	800f44a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2b0>
 800f3aa:	2c00      	cmp	r4, #0
 800f3ac:	d046      	beq.n	800f43c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2a2>
 800f3ae:	9e01      	ldr	r6, [sp, #4]
 800f3b0:	f836 e015 	ldrh.w	lr, [r6, r5, lsl #1]
 800f3b4:	f830 5018 	ldrh.w	r5, [r0, r8, lsl #1]
 800f3b8:	b2a7      	uxth	r7, r4
 800f3ba:	122e      	asrs	r6, r5, #8
 800f3bc:	43e4      	mvns	r4, r4
 800f3be:	b2e4      	uxtb	r4, r4
 800f3c0:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 800f3c4:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 800f3c8:	fb16 f604 	smulbb	r6, r6, r4
 800f3cc:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 800f3d0:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 800f3d4:	00ed      	lsls	r5, r5, #3
 800f3d6:	fb0c 6c07 	mla	ip, ip, r7, r6
 800f3da:	b2ed      	uxtb	r5, r5
 800f3dc:	ea4f 06ee 	mov.w	r6, lr, asr #3
 800f3e0:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 800f3e4:	fb15 f504 	smulbb	r5, r5, r4
 800f3e8:	fa5f fe8e 	uxtb.w	lr, lr
 800f3ec:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 800f3f0:	fb0e 5507 	mla	r5, lr, r7, r5
 800f3f4:	fb1a fa04 	smulbb	sl, sl, r4
 800f3f8:	fa1f fc8c 	uxth.w	ip, ip
 800f3fc:	b2ad      	uxth	r5, r5
 800f3fe:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 800f402:	fb06 a607 	mla	r6, r6, r7, sl
 800f406:	f10c 0401 	add.w	r4, ip, #1
 800f40a:	f105 0a01 	add.w	sl, r5, #1
 800f40e:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 800f412:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 800f416:	b2b6      	uxth	r6, r6
 800f418:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 800f41c:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 800f420:	ea4c 0c0a 	orr.w	ip, ip, sl
 800f424:	f106 0a01 	add.w	sl, r6, #1
 800f428:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 800f42c:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 800f430:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 800f434:	ea4c 0c0a 	orr.w	ip, ip, sl
 800f438:	f820 c018 	strh.w	ip, [r0, r8, lsl #1]
 800f43c:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 800f43e:	4421      	add	r1, r4
 800f440:	9c14      	ldr	r4, [sp, #80]	; 0x50
 800f442:	f108 0801 	add.w	r8, r8, #1
 800f446:	4422      	add	r2, r4
 800f448:	e7a2      	b.n	800f390 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1f6>
 800f44a:	9c01      	ldr	r4, [sp, #4]
 800f44c:	f834 4015 	ldrh.w	r4, [r4, r5, lsl #1]
 800f450:	f820 4018 	strh.w	r4, [r0, r8, lsl #1]
 800f454:	e7f2      	b.n	800f43c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2a2>
 800f456:	b007      	add	sp, #28
 800f458:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800f45c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 800f45c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f460:	b085      	sub	sp, #20
 800f462:	9813      	ldr	r0, [sp, #76]	; 0x4c
 800f464:	9203      	str	r2, [sp, #12]
 800f466:	f9bd 205c 	ldrsh.w	r2, [sp, #92]	; 0x5c
 800f46a:	9201      	str	r2, [sp, #4]
 800f46c:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 800f470:	9100      	str	r1, [sp, #0]
 800f472:	6841      	ldr	r1, [r0, #4]
 800f474:	f89d 5064 	ldrb.w	r5, [sp, #100]	; 0x64
 800f478:	f9bd 8058 	ldrsh.w	r8, [sp, #88]	; 0x58
 800f47c:	fb01 2404 	mla	r4, r1, r4, r2
 800f480:	6802      	ldr	r2, [r0, #0]
 800f482:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 800f486:	9a18      	ldr	r2, [sp, #96]	; 0x60
 800f488:	fa1f fe85 	uxth.w	lr, r5
 800f48c:	6812      	ldr	r2, [r2, #0]
 800f48e:	9202      	str	r2, [sp, #8]
 800f490:	43ed      	mvns	r5, r5
 800f492:	b2ed      	uxtb	r5, r5
 800f494:	9a00      	ldr	r2, [sp, #0]
 800f496:	2a00      	cmp	r2, #0
 800f498:	dc03      	bgt.n	800f4a2 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x46>
 800f49a:	9a03      	ldr	r2, [sp, #12]
 800f49c:	2a00      	cmp	r2, #0
 800f49e:	f340 8117 	ble.w	800f6d0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x274>
 800f4a2:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 800f4a4:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 800f4a8:	9a10      	ldr	r2, [sp, #64]	; 0x40
 800f4aa:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 800f4ae:	2b00      	cmp	r3, #0
 800f4b0:	dd0f      	ble.n	800f4d2 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x76>
 800f4b2:	1408      	asrs	r0, r1, #16
 800f4b4:	d406      	bmi.n	800f4c4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x68>
 800f4b6:	4540      	cmp	r0, r8
 800f4b8:	da04      	bge.n	800f4c4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x68>
 800f4ba:	1410      	asrs	r0, r2, #16
 800f4bc:	d402      	bmi.n	800f4c4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x68>
 800f4be:	9e01      	ldr	r6, [sp, #4]
 800f4c0:	42b0      	cmp	r0, r6
 800f4c2:	db07      	blt.n	800f4d4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x78>
 800f4c4:	9811      	ldr	r0, [sp, #68]	; 0x44
 800f4c6:	4401      	add	r1, r0
 800f4c8:	9812      	ldr	r0, [sp, #72]	; 0x48
 800f4ca:	3b01      	subs	r3, #1
 800f4cc:	4402      	add	r2, r0
 800f4ce:	3402      	adds	r4, #2
 800f4d0:	e7ed      	b.n	800f4ae <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x52>
 800f4d2:	d069      	beq.n	800f5a8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x14c>
 800f4d4:	9e11      	ldr	r6, [sp, #68]	; 0x44
 800f4d6:	1e58      	subs	r0, r3, #1
 800f4d8:	fb06 1600 	mla	r6, r6, r0, r1
 800f4dc:	1436      	asrs	r6, r6, #16
 800f4de:	d459      	bmi.n	800f594 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x138>
 800f4e0:	4546      	cmp	r6, r8
 800f4e2:	da57      	bge.n	800f594 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x138>
 800f4e4:	9e12      	ldr	r6, [sp, #72]	; 0x48
 800f4e6:	fb06 2000 	mla	r0, r6, r0, r2
 800f4ea:	1400      	asrs	r0, r0, #16
 800f4ec:	d452      	bmi.n	800f594 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x138>
 800f4ee:	9e01      	ldr	r6, [sp, #4]
 800f4f0:	42b0      	cmp	r0, r6
 800f4f2:	da4f      	bge.n	800f594 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x138>
 800f4f4:	469a      	mov	sl, r3
 800f4f6:	46a3      	mov	fp, r4
 800f4f8:	f1ba 0f00 	cmp.w	sl, #0
 800f4fc:	dd50      	ble.n	800f5a0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x144>
 800f4fe:	140e      	asrs	r6, r1, #16
 800f500:	1410      	asrs	r0, r2, #16
 800f502:	fb08 6000 	mla	r0, r8, r0, r6
 800f506:	9e02      	ldr	r6, [sp, #8]
 800f508:	f836 0010 	ldrh.w	r0, [r6, r0, lsl #1]
 800f50c:	f8bb 6000 	ldrh.w	r6, [fp]
 800f510:	1237      	asrs	r7, r6, #8
 800f512:	ea4f 2c20 	mov.w	ip, r0, asr #8
 800f516:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 800f51a:	fb17 f705 	smulbb	r7, r7, r5
 800f51e:	ea4f 09e6 	mov.w	r9, r6, asr #3
 800f522:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 800f526:	00f6      	lsls	r6, r6, #3
 800f528:	fb0c 7c0e 	mla	ip, ip, lr, r7
 800f52c:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 800f530:	10c7      	asrs	r7, r0, #3
 800f532:	b2f6      	uxtb	r6, r6
 800f534:	00c0      	lsls	r0, r0, #3
 800f536:	fb19 f905 	smulbb	r9, r9, r5
 800f53a:	fb16 f605 	smulbb	r6, r6, r5
 800f53e:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 800f542:	b2c0      	uxtb	r0, r0
 800f544:	fa1f fc8c 	uxth.w	ip, ip
 800f548:	fb07 970e 	mla	r7, r7, lr, r9
 800f54c:	fb00 600e 	mla	r0, r0, lr, r6
 800f550:	b280      	uxth	r0, r0
 800f552:	b2bf      	uxth	r7, r7
 800f554:	f10c 0601 	add.w	r6, ip, #1
 800f558:	eb06 2c1c 	add.w	ip, r6, ip, lsr #8
 800f55c:	f107 0901 	add.w	r9, r7, #1
 800f560:	1c46      	adds	r6, r0, #1
 800f562:	eb06 2610 	add.w	r6, r6, r0, lsr #8
 800f566:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 800f56a:	9811      	ldr	r0, [sp, #68]	; 0x44
 800f56c:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 800f570:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 800f574:	ea4f 1959 	mov.w	r9, r9, lsr #5
 800f578:	ea4c 0c06 	orr.w	ip, ip, r6
 800f57c:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 800f580:	4401      	add	r1, r0
 800f582:	9812      	ldr	r0, [sp, #72]	; 0x48
 800f584:	ea4c 0c09 	orr.w	ip, ip, r9
 800f588:	f82b cb02 	strh.w	ip, [fp], #2
 800f58c:	4402      	add	r2, r0
 800f58e:	f10a 3aff 	add.w	sl, sl, #4294967295
 800f592:	e7b1      	b.n	800f4f8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9c>
 800f594:	f04f 0900 	mov.w	r9, #0
 800f598:	eb03 0009 	add.w	r0, r3, r9
 800f59c:	2800      	cmp	r0, #0
 800f59e:	dc41      	bgt.n	800f624 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1c8>
 800f5a0:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 800f5a4:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 800f5a8:	9b00      	ldr	r3, [sp, #0]
 800f5aa:	2b00      	cmp	r3, #0
 800f5ac:	f340 8090 	ble.w	800f6d0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x274>
 800f5b0:	ee30 0a04 	vadd.f32	s0, s0, s8
 800f5b4:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 800f5b8:	eec7 7a00 	vdiv.f32	s15, s14, s0
 800f5bc:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800f5be:	ee70 0aa4 	vadd.f32	s1, s1, s9
 800f5c2:	ee31 1a05 	vadd.f32	s2, s2, s10
 800f5c6:	ee20 7aa7 	vmul.f32	s14, s1, s15
 800f5ca:	eef0 6a62 	vmov.f32	s13, s5
 800f5ce:	ee61 7a27 	vmul.f32	s15, s2, s15
 800f5d2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 800f5d6:	ee77 2a62 	vsub.f32	s5, s14, s5
 800f5da:	edcd 6a0f 	vstr	s13, [sp, #60]	; 0x3c
 800f5de:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 800f5e2:	eef0 6a43 	vmov.f32	s13, s6
 800f5e6:	ee37 3ac3 	vsub.f32	s6, s15, s6
 800f5ea:	ee12 2a90 	vmov	r2, s5
 800f5ee:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 800f5f2:	fb92 f3f3 	sdiv	r3, r2, r3
 800f5f6:	ee13 2a10 	vmov	r2, s6
 800f5fa:	9311      	str	r3, [sp, #68]	; 0x44
 800f5fc:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800f5fe:	fb92 f3f3 	sdiv	r3, r2, r3
 800f602:	9312      	str	r3, [sp, #72]	; 0x48
 800f604:	9b00      	ldr	r3, [sp, #0]
 800f606:	9a03      	ldr	r2, [sp, #12]
 800f608:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 800f60c:	3b01      	subs	r3, #1
 800f60e:	9300      	str	r3, [sp, #0]
 800f610:	edcd 6a10 	vstr	s13, [sp, #64]	; 0x40
 800f614:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800f616:	eeb0 3a67 	vmov.f32	s6, s15
 800f61a:	bf08      	it	eq
 800f61c:	4613      	moveq	r3, r2
 800f61e:	eef0 2a47 	vmov.f32	s5, s14
 800f622:	e737      	b.n	800f494 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x38>
 800f624:	140e      	asrs	r6, r1, #16
 800f626:	d44c      	bmi.n	800f6c2 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x266>
 800f628:	4546      	cmp	r6, r8
 800f62a:	da4a      	bge.n	800f6c2 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x266>
 800f62c:	1410      	asrs	r0, r2, #16
 800f62e:	d448      	bmi.n	800f6c2 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x266>
 800f630:	9f01      	ldr	r7, [sp, #4]
 800f632:	42b8      	cmp	r0, r7
 800f634:	da45      	bge.n	800f6c2 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x266>
 800f636:	fb08 6000 	mla	r0, r8, r0, r6
 800f63a:	9e02      	ldr	r6, [sp, #8]
 800f63c:	f836 0010 	ldrh.w	r0, [r6, r0, lsl #1]
 800f640:	f06f 0601 	mvn.w	r6, #1
 800f644:	fb06 fb09 	mul.w	fp, r6, r9
 800f648:	ea4f 2c20 	mov.w	ip, r0, asr #8
 800f64c:	f834 600b 	ldrh.w	r6, [r4, fp]
 800f650:	1237      	asrs	r7, r6, #8
 800f652:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 800f656:	fb17 f705 	smulbb	r7, r7, r5
 800f65a:	ea4f 0ae6 	mov.w	sl, r6, asr #3
 800f65e:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 800f662:	00f6      	lsls	r6, r6, #3
 800f664:	fb0c 7c0e 	mla	ip, ip, lr, r7
 800f668:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 800f66c:	10c7      	asrs	r7, r0, #3
 800f66e:	b2f6      	uxtb	r6, r6
 800f670:	00c0      	lsls	r0, r0, #3
 800f672:	fb1a fa05 	smulbb	sl, sl, r5
 800f676:	fb16 f605 	smulbb	r6, r6, r5
 800f67a:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 800f67e:	b2c0      	uxtb	r0, r0
 800f680:	fa1f fc8c 	uxth.w	ip, ip
 800f684:	fb07 a70e 	mla	r7, r7, lr, sl
 800f688:	fb00 600e 	mla	r0, r0, lr, r6
 800f68c:	b2bf      	uxth	r7, r7
 800f68e:	b280      	uxth	r0, r0
 800f690:	f10c 0601 	add.w	r6, ip, #1
 800f694:	eb06 2c1c 	add.w	ip, r6, ip, lsr #8
 800f698:	f107 0a01 	add.w	sl, r7, #1
 800f69c:	1c46      	adds	r6, r0, #1
 800f69e:	eb06 2610 	add.w	r6, r6, r0, lsr #8
 800f6a2:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 800f6a6:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 800f6aa:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 800f6ae:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 800f6b2:	ea4c 0c06 	orr.w	ip, ip, r6
 800f6b6:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 800f6ba:	ea4c 0c0a 	orr.w	ip, ip, sl
 800f6be:	f824 c00b 	strh.w	ip, [r4, fp]
 800f6c2:	9811      	ldr	r0, [sp, #68]	; 0x44
 800f6c4:	4401      	add	r1, r0
 800f6c6:	9812      	ldr	r0, [sp, #72]	; 0x48
 800f6c8:	f109 39ff 	add.w	r9, r9, #4294967295
 800f6cc:	4402      	add	r2, r0
 800f6ce:	e763      	b.n	800f598 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x13c>
 800f6d0:	b005      	add	sp, #20
 800f6d2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800f6d6 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 800f6d6:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f6da:	9811      	ldr	r0, [sp, #68]	; 0x44
 800f6dc:	9201      	str	r2, [sp, #4]
 800f6de:	e9dd 2512 	ldrd	r2, r5, [sp, #72]	; 0x48
 800f6e2:	6844      	ldr	r4, [r0, #4]
 800f6e4:	6800      	ldr	r0, [r0, #0]
 800f6e6:	f9bd c050 	ldrsh.w	ip, [sp, #80]	; 0x50
 800f6ea:	f9bd e054 	ldrsh.w	lr, [sp, #84]	; 0x54
 800f6ee:	fb04 2505 	mla	r5, r4, r5, r2
 800f6f2:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 800f6f6:	9816      	ldr	r0, [sp, #88]	; 0x58
 800f6f8:	e9dd 760f 	ldrd	r7, r6, [sp, #60]	; 0x3c
 800f6fc:	6802      	ldr	r2, [r0, #0]
 800f6fe:	9200      	str	r2, [sp, #0]
 800f700:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 800f704:	2900      	cmp	r1, #0
 800f706:	dc03      	bgt.n	800f710 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3a>
 800f708:	9a01      	ldr	r2, [sp, #4]
 800f70a:	2a00      	cmp	r2, #0
 800f70c:	f340 8095 	ble.w	800f83a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x164>
 800f710:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 800f712:	f502 4400 	add.w	r4, r2, #32768	; 0x8000
 800f716:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 800f718:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 800f71c:	2b00      	cmp	r3, #0
 800f71e:	dd0e      	ble.n	800f73e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x68>
 800f720:	ea5f 4824 	movs.w	r8, r4, asr #16
 800f724:	d406      	bmi.n	800f734 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x5e>
 800f726:	45e0      	cmp	r8, ip
 800f728:	da04      	bge.n	800f734 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x5e>
 800f72a:	ea5f 4820 	movs.w	r8, r0, asr #16
 800f72e:	d401      	bmi.n	800f734 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x5e>
 800f730:	45f0      	cmp	r8, lr
 800f732:	db05      	blt.n	800f740 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6a>
 800f734:	443c      	add	r4, r7
 800f736:	4430      	add	r0, r6
 800f738:	3b01      	subs	r3, #1
 800f73a:	3502      	adds	r5, #2
 800f73c:	e7ee      	b.n	800f71c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x46>
 800f73e:	d010      	beq.n	800f762 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x8c>
 800f740:	f103 38ff 	add.w	r8, r3, #4294967295
 800f744:	fb07 4908 	mla	r9, r7, r8, r4
 800f748:	ea5f 4929 	movs.w	r9, r9, asr #16
 800f74c:	d53d      	bpl.n	800f7ca <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf4>
 800f74e:	4698      	mov	r8, r3
 800f750:	eb05 0b43 	add.w	fp, r5, r3, lsl #1
 800f754:	f1b8 0f00 	cmp.w	r8, #0
 800f758:	dc55      	bgt.n	800f806 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x130>
 800f75a:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 800f75e:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 800f762:	2900      	cmp	r1, #0
 800f764:	dd69      	ble.n	800f83a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x164>
 800f766:	ee30 0a04 	vadd.f32	s0, s0, s8
 800f76a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 800f76e:	eec6 7a80 	vdiv.f32	s15, s13, s0
 800f772:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800f774:	3901      	subs	r1, #1
 800f776:	ee31 1a05 	vadd.f32	s2, s2, s10
 800f77a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 800f77e:	eeb0 6a62 	vmov.f32	s12, s5
 800f782:	ee61 7a27 	vmul.f32	s15, s2, s15
 800f786:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 800f78a:	ee77 2a62 	vsub.f32	s5, s14, s5
 800f78e:	ed8d 6a0d 	vstr	s12, [sp, #52]	; 0x34
 800f792:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 800f796:	eeb0 6a43 	vmov.f32	s12, s6
 800f79a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 800f79e:	ee12 2a90 	vmov	r2, s5
 800f7a2:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 800f7a6:	fb92 f7f3 	sdiv	r7, r2, r3
 800f7aa:	ee13 2a10 	vmov	r2, s6
 800f7ae:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 800f7b2:	fb92 f6f3 	sdiv	r6, r2, r3
 800f7b6:	9a01      	ldr	r2, [sp, #4]
 800f7b8:	ed8d 6a0e 	vstr	s12, [sp, #56]	; 0x38
 800f7bc:	bf08      	it	eq
 800f7be:	4613      	moveq	r3, r2
 800f7c0:	eeb0 3a67 	vmov.f32	s6, s15
 800f7c4:	eef0 2a47 	vmov.f32	s5, s14
 800f7c8:	e79c      	b.n	800f704 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2e>
 800f7ca:	45e1      	cmp	r9, ip
 800f7cc:	dabf      	bge.n	800f74e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x78>
 800f7ce:	fb06 0808 	mla	r8, r6, r8, r0
 800f7d2:	ea5f 4828 	movs.w	r8, r8, asr #16
 800f7d6:	d4ba      	bmi.n	800f74e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x78>
 800f7d8:	45f0      	cmp	r8, lr
 800f7da:	dab8      	bge.n	800f74e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x78>
 800f7dc:	4698      	mov	r8, r3
 800f7de:	46aa      	mov	sl, r5
 800f7e0:	f1b8 0f00 	cmp.w	r8, #0
 800f7e4:	ddb9      	ble.n	800f75a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x84>
 800f7e6:	ea4f 4920 	mov.w	r9, r0, asr #16
 800f7ea:	ea4f 4b24 	mov.w	fp, r4, asr #16
 800f7ee:	fb0c b909 	mla	r9, ip, r9, fp
 800f7f2:	9a00      	ldr	r2, [sp, #0]
 800f7f4:	f832 9019 	ldrh.w	r9, [r2, r9, lsl #1]
 800f7f8:	f82a 9b02 	strh.w	r9, [sl], #2
 800f7fc:	443c      	add	r4, r7
 800f7fe:	4430      	add	r0, r6
 800f800:	f108 38ff 	add.w	r8, r8, #4294967295
 800f804:	e7ec      	b.n	800f7e0 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x10a>
 800f806:	ea5f 4a24 	movs.w	sl, r4, asr #16
 800f80a:	d411      	bmi.n	800f830 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x15a>
 800f80c:	45e2      	cmp	sl, ip
 800f80e:	da0f      	bge.n	800f830 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x15a>
 800f810:	ea5f 4920 	movs.w	r9, r0, asr #16
 800f814:	d40c      	bmi.n	800f830 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x15a>
 800f816:	45f1      	cmp	r9, lr
 800f818:	da0a      	bge.n	800f830 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x15a>
 800f81a:	fb0c a909 	mla	r9, ip, r9, sl
 800f81e:	9a00      	ldr	r2, [sp, #0]
 800f820:	f832 a019 	ldrh.w	sl, [r2, r9, lsl #1]
 800f824:	f06f 0201 	mvn.w	r2, #1
 800f828:	fb02 f908 	mul.w	r9, r2, r8
 800f82c:	f82b a009 	strh.w	sl, [fp, r9]
 800f830:	443c      	add	r4, r7
 800f832:	4430      	add	r0, r6
 800f834:	f108 38ff 	add.w	r8, r8, #4294967295
 800f838:	e78c      	b.n	800f754 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7e>
 800f83a:	b003      	add	sp, #12
 800f83c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800f840 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 800f840:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f844:	b087      	sub	sp, #28
 800f846:	468b      	mov	fp, r1
 800f848:	9204      	str	r2, [sp, #16]
 800f84a:	f9bd 2064 	ldrsh.w	r2, [sp, #100]	; 0x64
 800f84e:	9815      	ldr	r0, [sp, #84]	; 0x54
 800f850:	9201      	str	r2, [sp, #4]
 800f852:	f89d 206c 	ldrb.w	r2, [sp, #108]	; 0x6c
 800f856:	9205      	str	r2, [sp, #20]
 800f858:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 800f85c:	6841      	ldr	r1, [r0, #4]
 800f85e:	f9bd 8060 	ldrsh.w	r8, [sp, #96]	; 0x60
 800f862:	fb01 2404 	mla	r4, r1, r4, r2
 800f866:	6802      	ldr	r2, [r0, #0]
 800f868:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 800f86c:	9a1a      	ldr	r2, [sp, #104]	; 0x68
 800f86e:	6812      	ldr	r2, [r2, #0]
 800f870:	9203      	str	r2, [sp, #12]
 800f872:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 800f876:	f1bb 0f00 	cmp.w	fp, #0
 800f87a:	dc03      	bgt.n	800f884 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x44>
 800f87c:	9a04      	ldr	r2, [sp, #16]
 800f87e:	2a00      	cmp	r2, #0
 800f880:	f340 812c 	ble.w	800fadc <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x29c>
 800f884:	9a11      	ldr	r2, [sp, #68]	; 0x44
 800f886:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 800f88a:	9a12      	ldr	r2, [sp, #72]	; 0x48
 800f88c:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 800f890:	2b00      	cmp	r3, #0
 800f892:	dd0f      	ble.n	800f8b4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x74>
 800f894:	1402      	asrs	r2, r0, #16
 800f896:	d406      	bmi.n	800f8a6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x66>
 800f898:	4542      	cmp	r2, r8
 800f89a:	da04      	bge.n	800f8a6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x66>
 800f89c:	140a      	asrs	r2, r1, #16
 800f89e:	d402      	bmi.n	800f8a6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x66>
 800f8a0:	9d01      	ldr	r5, [sp, #4]
 800f8a2:	42aa      	cmp	r2, r5
 800f8a4:	db07      	blt.n	800f8b6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x76>
 800f8a6:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 800f8a8:	4410      	add	r0, r2
 800f8aa:	9a14      	ldr	r2, [sp, #80]	; 0x50
 800f8ac:	3b01      	subs	r3, #1
 800f8ae:	4411      	add	r1, r2
 800f8b0:	3402      	adds	r4, #2
 800f8b2:	e7ed      	b.n	800f890 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x50>
 800f8b4:	d01a      	beq.n	800f8ec <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xac>
 800f8b6:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 800f8b8:	1e5a      	subs	r2, r3, #1
 800f8ba:	fb05 0502 	mla	r5, r5, r2, r0
 800f8be:	142d      	asrs	r5, r5, #16
 800f8c0:	d40a      	bmi.n	800f8d8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x98>
 800f8c2:	4545      	cmp	r5, r8
 800f8c4:	da08      	bge.n	800f8d8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x98>
 800f8c6:	9d14      	ldr	r5, [sp, #80]	; 0x50
 800f8c8:	fb05 1202 	mla	r2, r5, r2, r1
 800f8cc:	1412      	asrs	r2, r2, #16
 800f8ce:	d403      	bmi.n	800f8d8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x98>
 800f8d0:	9d01      	ldr	r5, [sp, #4]
 800f8d2:	42aa      	cmp	r2, r5
 800f8d4:	f2c0 80a6 	blt.w	800fa24 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1e4>
 800f8d8:	f04f 0c00 	mov.w	ip, #0
 800f8dc:	eb03 020c 	add.w	r2, r3, ip
 800f8e0:	2a00      	cmp	r2, #0
 800f8e2:	dc3e      	bgt.n	800f962 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x122>
 800f8e4:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 800f8e8:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 800f8ec:	f1bb 0f00 	cmp.w	fp, #0
 800f8f0:	f340 80f4 	ble.w	800fadc <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x29c>
 800f8f4:	ee30 0a04 	vadd.f32	s0, s0, s8
 800f8f8:	ee70 0aa4 	vadd.f32	s1, s1, s9
 800f8fc:	eec6 7a80 	vdiv.f32	s15, s13, s0
 800f900:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800f902:	f1bb 0b01 	subs.w	fp, fp, #1
 800f906:	ee31 1a05 	vadd.f32	s2, s2, s10
 800f90a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 800f90e:	eeb0 6a62 	vmov.f32	s12, s5
 800f912:	ee61 7a27 	vmul.f32	s15, s2, s15
 800f916:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 800f91a:	ee77 2a62 	vsub.f32	s5, s14, s5
 800f91e:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 800f922:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 800f926:	eeb0 6a43 	vmov.f32	s12, s6
 800f92a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 800f92e:	ee12 2a90 	vmov	r2, s5
 800f932:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 800f936:	fb92 f3f3 	sdiv	r3, r2, r3
 800f93a:	ee13 2a10 	vmov	r2, s6
 800f93e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 800f942:	9313      	str	r3, [sp, #76]	; 0x4c
 800f944:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800f946:	fb92 f3f3 	sdiv	r3, r2, r3
 800f94a:	9a04      	ldr	r2, [sp, #16]
 800f94c:	9314      	str	r3, [sp, #80]	; 0x50
 800f94e:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 800f952:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800f954:	eeb0 3a67 	vmov.f32	s6, s15
 800f958:	bf08      	it	eq
 800f95a:	4613      	moveq	r3, r2
 800f95c:	eef0 2a47 	vmov.f32	s5, s14
 800f960:	e789      	b.n	800f876 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x36>
 800f962:	1405      	asrs	r5, r0, #16
 800f964:	d457      	bmi.n	800fa16 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 800f966:	4545      	cmp	r5, r8
 800f968:	da55      	bge.n	800fa16 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 800f96a:	140a      	asrs	r2, r1, #16
 800f96c:	d453      	bmi.n	800fa16 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 800f96e:	9e01      	ldr	r6, [sp, #4]
 800f970:	42b2      	cmp	r2, r6
 800f972:	da50      	bge.n	800fa16 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 800f974:	fb08 5202 	mla	r2, r8, r2, r5
 800f978:	9d03      	ldr	r5, [sp, #12]
 800f97a:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 800f97e:	0e2e      	lsrs	r6, r5, #24
 800f980:	d049      	beq.n	800fa16 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 800f982:	f06f 0201 	mvn.w	r2, #1
 800f986:	fb02 f20c 	mul.w	r2, r2, ip
 800f98a:	9202      	str	r2, [sp, #8]
 800f98c:	f834 e002 	ldrh.w	lr, [r4, r2]
 800f990:	9a05      	ldr	r2, [sp, #20]
 800f992:	4356      	muls	r6, r2
 800f994:	1c72      	adds	r2, r6, #1
 800f996:	eb02 2226 	add.w	r2, r2, r6, asr #8
 800f99a:	1212      	asrs	r2, r2, #8
 800f99c:	fa1f f982 	uxth.w	r9, r2
 800f9a0:	ea4f 272e 	mov.w	r7, lr, asr #8
 800f9a4:	f3c5 4607 	ubfx	r6, r5, #16, #8
 800f9a8:	43d2      	mvns	r2, r2
 800f9aa:	b2d2      	uxtb	r2, r2
 800f9ac:	fb16 f609 	smulbb	r6, r6, r9
 800f9b0:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 800f9b4:	fb07 6702 	mla	r7, r7, r2, r6
 800f9b8:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 800f9bc:	ea4f 06ee 	mov.w	r6, lr, asr #3
 800f9c0:	b2ed      	uxtb	r5, r5
 800f9c2:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 800f9c6:	fa5f fe8e 	uxtb.w	lr, lr
 800f9ca:	fb15 f509 	smulbb	r5, r5, r9
 800f9ce:	fb0e 5502 	mla	r5, lr, r2, r5
 800f9d2:	b2bf      	uxth	r7, r7
 800f9d4:	fb1a fa09 	smulbb	sl, sl, r9
 800f9d8:	b2ad      	uxth	r5, r5
 800f9da:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 800f9de:	fb06 a602 	mla	r6, r6, r2, sl
 800f9e2:	1c7a      	adds	r2, r7, #1
 800f9e4:	f105 0a01 	add.w	sl, r5, #1
 800f9e8:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 800f9ec:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 800f9f0:	b2b6      	uxth	r6, r6
 800f9f2:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 800f9f6:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 800f9fa:	ea47 070a 	orr.w	r7, r7, sl
 800f9fe:	f106 0a01 	add.w	sl, r6, #1
 800fa02:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 800fa06:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 800fa0a:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 800fa0e:	9a02      	ldr	r2, [sp, #8]
 800fa10:	ea47 070a 	orr.w	r7, r7, sl
 800fa14:	52a7      	strh	r7, [r4, r2]
 800fa16:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 800fa18:	4410      	add	r0, r2
 800fa1a:	9a14      	ldr	r2, [sp, #80]	; 0x50
 800fa1c:	f10c 3cff 	add.w	ip, ip, #4294967295
 800fa20:	4411      	add	r1, r2
 800fa22:	e75b      	b.n	800f8dc <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9c>
 800fa24:	f04f 0e00 	mov.w	lr, #0
 800fa28:	eba3 020e 	sub.w	r2, r3, lr
 800fa2c:	2a00      	cmp	r2, #0
 800fa2e:	f77f af59 	ble.w	800f8e4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xa4>
 800fa32:	1405      	asrs	r5, r0, #16
 800fa34:	140a      	asrs	r2, r1, #16
 800fa36:	fb08 5202 	mla	r2, r8, r2, r5
 800fa3a:	9d03      	ldr	r5, [sp, #12]
 800fa3c:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 800fa40:	0e2e      	lsrs	r6, r5, #24
 800fa42:	d044      	beq.n	800face <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x28e>
 800fa44:	9a05      	ldr	r2, [sp, #20]
 800fa46:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 800fa4a:	4356      	muls	r6, r2
 800fa4c:	1c72      	adds	r2, r6, #1
 800fa4e:	eb02 2226 	add.w	r2, r2, r6, asr #8
 800fa52:	1212      	asrs	r2, r2, #8
 800fa54:	fa1f f982 	uxth.w	r9, r2
 800fa58:	ea4f 272c 	mov.w	r7, ip, asr #8
 800fa5c:	f3c5 4607 	ubfx	r6, r5, #16, #8
 800fa60:	43d2      	mvns	r2, r2
 800fa62:	b2d2      	uxtb	r2, r2
 800fa64:	fb16 f609 	smulbb	r6, r6, r9
 800fa68:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 800fa6c:	fb07 6702 	mla	r7, r7, r2, r6
 800fa70:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 800fa74:	ea4f 06ec 	mov.w	r6, ip, asr #3
 800fa78:	b2ed      	uxtb	r5, r5
 800fa7a:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 800fa7e:	fa5f fc8c 	uxtb.w	ip, ip
 800fa82:	fb15 f509 	smulbb	r5, r5, r9
 800fa86:	fb0c 5502 	mla	r5, ip, r2, r5
 800fa8a:	b2bf      	uxth	r7, r7
 800fa8c:	fb1a fa09 	smulbb	sl, sl, r9
 800fa90:	b2ad      	uxth	r5, r5
 800fa92:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 800fa96:	fb06 a602 	mla	r6, r6, r2, sl
 800fa9a:	1c7a      	adds	r2, r7, #1
 800fa9c:	f105 0a01 	add.w	sl, r5, #1
 800faa0:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 800faa4:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 800faa8:	b2b6      	uxth	r6, r6
 800faaa:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 800faae:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 800fab2:	ea47 070a 	orr.w	r7, r7, sl
 800fab6:	f106 0a01 	add.w	sl, r6, #1
 800faba:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 800fabe:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 800fac2:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 800fac6:	ea47 070a 	orr.w	r7, r7, sl
 800faca:	f824 701e 	strh.w	r7, [r4, lr, lsl #1]
 800face:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 800fad0:	4410      	add	r0, r2
 800fad2:	9a14      	ldr	r2, [sp, #80]	; 0x50
 800fad4:	f10e 0e01 	add.w	lr, lr, #1
 800fad8:	4411      	add	r1, r2
 800fada:	e7a5      	b.n	800fa28 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1e8>
 800fadc:	b007      	add	sp, #28
 800fade:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

0800fae4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 800fae4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800fae8:	b087      	sub	sp, #28
 800faea:	468b      	mov	fp, r1
 800faec:	9c15      	ldr	r4, [sp, #84]	; 0x54
 800faee:	9205      	str	r2, [sp, #20]
 800faf0:	f9bd 2064 	ldrsh.w	r2, [sp, #100]	; 0x64
 800faf4:	9201      	str	r2, [sp, #4]
 800faf6:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
 800fafa:	6861      	ldr	r1, [r4, #4]
 800fafc:	f9bd 9060 	ldrsh.w	r9, [sp, #96]	; 0x60
 800fb00:	fb01 2000 	mla	r0, r1, r0, r2
 800fb04:	6822      	ldr	r2, [r4, #0]
 800fb06:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 800fb0a:	9a1a      	ldr	r2, [sp, #104]	; 0x68
 800fb0c:	6812      	ldr	r2, [r2, #0]
 800fb0e:	9203      	str	r2, [sp, #12]
 800fb10:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 800fb14:	f1bb 0f00 	cmp.w	fp, #0
 800fb18:	dc03      	bgt.n	800fb22 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3e>
 800fb1a:	9a05      	ldr	r2, [sp, #20]
 800fb1c:	2a00      	cmp	r2, #0
 800fb1e:	f340 814b 	ble.w	800fdb8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2d4>
 800fb22:	9a11      	ldr	r2, [sp, #68]	; 0x44
 800fb24:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 800fb28:	9a12      	ldr	r2, [sp, #72]	; 0x48
 800fb2a:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 800fb2e:	2b00      	cmp	r3, #0
 800fb30:	dd0f      	ble.n	800fb52 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6e>
 800fb32:	140c      	asrs	r4, r1, #16
 800fb34:	d406      	bmi.n	800fb44 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x60>
 800fb36:	454c      	cmp	r4, r9
 800fb38:	da04      	bge.n	800fb44 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x60>
 800fb3a:	1414      	asrs	r4, r2, #16
 800fb3c:	d402      	bmi.n	800fb44 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x60>
 800fb3e:	9d01      	ldr	r5, [sp, #4]
 800fb40:	42ac      	cmp	r4, r5
 800fb42:	db07      	blt.n	800fb54 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x70>
 800fb44:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 800fb46:	4421      	add	r1, r4
 800fb48:	9c14      	ldr	r4, [sp, #80]	; 0x50
 800fb4a:	3b01      	subs	r3, #1
 800fb4c:	4422      	add	r2, r4
 800fb4e:	3002      	adds	r0, #2
 800fb50:	e7ed      	b.n	800fb2e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4a>
 800fb52:	d018      	beq.n	800fb86 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xa2>
 800fb54:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 800fb56:	1e5c      	subs	r4, r3, #1
 800fb58:	fb05 1504 	mla	r5, r5, r4, r1
 800fb5c:	142d      	asrs	r5, r5, #16
 800fb5e:	d40a      	bmi.n	800fb76 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x92>
 800fb60:	454d      	cmp	r5, r9
 800fb62:	da08      	bge.n	800fb76 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x92>
 800fb64:	9d14      	ldr	r5, [sp, #80]	; 0x50
 800fb66:	fb05 2404 	mla	r4, r5, r4, r2
 800fb6a:	1424      	asrs	r4, r4, #16
 800fb6c:	d403      	bmi.n	800fb76 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x92>
 800fb6e:	9d01      	ldr	r5, [sp, #4]
 800fb70:	42ac      	cmp	r4, r5
 800fb72:	f2c0 80bb 	blt.w	800fcec <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x208>
 800fb76:	2700      	movs	r7, #0
 800fb78:	19dc      	adds	r4, r3, r7
 800fb7a:	2c00      	cmp	r4, #0
 800fb7c:	dc3e      	bgt.n	800fbfc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x118>
 800fb7e:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 800fb82:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 800fb86:	f1bb 0f00 	cmp.w	fp, #0
 800fb8a:	f340 8115 	ble.w	800fdb8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2d4>
 800fb8e:	ee30 0a04 	vadd.f32	s0, s0, s8
 800fb92:	ee70 0aa4 	vadd.f32	s1, s1, s9
 800fb96:	eec6 7a80 	vdiv.f32	s15, s13, s0
 800fb9a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800fb9c:	f1bb 0b01 	subs.w	fp, fp, #1
 800fba0:	ee31 1a05 	vadd.f32	s2, s2, s10
 800fba4:	ee20 7aa7 	vmul.f32	s14, s1, s15
 800fba8:	eeb0 6a62 	vmov.f32	s12, s5
 800fbac:	ee61 7a27 	vmul.f32	s15, s2, s15
 800fbb0:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 800fbb4:	ee77 2a62 	vsub.f32	s5, s14, s5
 800fbb8:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 800fbbc:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 800fbc0:	eeb0 6a43 	vmov.f32	s12, s6
 800fbc4:	ee37 3ac3 	vsub.f32	s6, s15, s6
 800fbc8:	ee12 2a90 	vmov	r2, s5
 800fbcc:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 800fbd0:	fb92 f3f3 	sdiv	r3, r2, r3
 800fbd4:	ee13 2a10 	vmov	r2, s6
 800fbd8:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 800fbdc:	9313      	str	r3, [sp, #76]	; 0x4c
 800fbde:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800fbe0:	fb92 f3f3 	sdiv	r3, r2, r3
 800fbe4:	9a05      	ldr	r2, [sp, #20]
 800fbe6:	9314      	str	r3, [sp, #80]	; 0x50
 800fbe8:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 800fbec:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800fbee:	eeb0 3a67 	vmov.f32	s6, s15
 800fbf2:	bf08      	it	eq
 800fbf4:	4613      	moveq	r3, r2
 800fbf6:	eef0 2a47 	vmov.f32	s5, s14
 800fbfa:	e78b      	b.n	800fb14 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x30>
 800fbfc:	140d      	asrs	r5, r1, #16
 800fbfe:	d45c      	bmi.n	800fcba <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 800fc00:	454d      	cmp	r5, r9
 800fc02:	da5a      	bge.n	800fcba <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 800fc04:	1414      	asrs	r4, r2, #16
 800fc06:	d458      	bmi.n	800fcba <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 800fc08:	9e01      	ldr	r6, [sp, #4]
 800fc0a:	42b4      	cmp	r4, r6
 800fc0c:	da55      	bge.n	800fcba <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 800fc0e:	fb09 5404 	mla	r4, r9, r4, r5
 800fc12:	9d03      	ldr	r5, [sp, #12]
 800fc14:	f855 4024 	ldr.w	r4, [r5, r4, lsl #2]
 800fc18:	ea5f 6e14 	movs.w	lr, r4, lsr #24
 800fc1c:	d04d      	beq.n	800fcba <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 800fc1e:	0a26      	lsrs	r6, r4, #8
 800fc20:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 800fc24:	fa5f f58e 	uxtb.w	r5, lr
 800fc28:	ea4f 4c14 	mov.w	ip, r4, lsr #16
 800fc2c:	9604      	str	r6, [sp, #16]
 800fc2e:	d04a      	beq.n	800fcc6 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1e2>
 800fc30:	f06f 0601 	mvn.w	r6, #1
 800fc34:	437e      	muls	r6, r7
 800fc36:	fa1f fa85 	uxth.w	sl, r5
 800fc3a:	f830 8006 	ldrh.w	r8, [r0, r6]
 800fc3e:	9602      	str	r6, [sp, #8]
 800fc40:	ea4f 2e28 	mov.w	lr, r8, asr #8
 800fc44:	43ed      	mvns	r5, r5
 800fc46:	fa5f fc8c 	uxtb.w	ip, ip
 800fc4a:	b2ed      	uxtb	r5, r5
 800fc4c:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 800fc50:	fb1c fc0a 	smulbb	ip, ip, sl
 800fc54:	fb0e cc05 	mla	ip, lr, r5, ip
 800fc58:	b2e4      	uxtb	r4, r4
 800fc5a:	ea4f 0ee8 	mov.w	lr, r8, asr #3
 800fc5e:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 800fc62:	f89d 6010 	ldrb.w	r6, [sp, #16]
 800fc66:	fa5f f888 	uxtb.w	r8, r8
 800fc6a:	fb14 f40a 	smulbb	r4, r4, sl
 800fc6e:	fb08 4405 	mla	r4, r8, r5, r4
 800fc72:	b2a4      	uxth	r4, r4
 800fc74:	fa1f fc8c 	uxth.w	ip, ip
 800fc78:	fb16 f60a 	smulbb	r6, r6, sl
 800fc7c:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 800fc80:	fb0e 6e05 	mla	lr, lr, r5, r6
 800fc84:	1c66      	adds	r6, r4, #1
 800fc86:	f10c 0501 	add.w	r5, ip, #1
 800fc8a:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 800fc8e:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 800fc92:	fa1f fe8e 	uxth.w	lr, lr
 800fc96:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 800fc9a:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 800fc9e:	ea4c 0c06 	orr.w	ip, ip, r6
 800fca2:	f10e 0601 	add.w	r6, lr, #1
 800fca6:	eb06 261e 	add.w	r6, r6, lr, lsr #8
 800fcaa:	0976      	lsrs	r6, r6, #5
 800fcac:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 800fcb0:	9c02      	ldr	r4, [sp, #8]
 800fcb2:	ea4c 0c06 	orr.w	ip, ip, r6
 800fcb6:	f820 c004 	strh.w	ip, [r0, r4]
 800fcba:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 800fcbc:	4421      	add	r1, r4
 800fcbe:	9c14      	ldr	r4, [sp, #80]	; 0x50
 800fcc0:	3f01      	subs	r7, #1
 800fcc2:	4422      	add	r2, r4
 800fcc4:	e758      	b.n	800fb78 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x94>
 800fcc6:	4e3e      	ldr	r6, [pc, #248]	; (800fdc0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2dc>)
 800fcc8:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 800fccc:	ea06 2c0c 	and.w	ip, r6, ip, lsl #8
 800fcd0:	ea4c 0c04 	orr.w	ip, ip, r4
 800fcd4:	9c04      	ldr	r4, [sp, #16]
 800fcd6:	f06f 0501 	mvn.w	r5, #1
 800fcda:	00e6      	lsls	r6, r4, #3
 800fcdc:	437d      	muls	r5, r7
 800fcde:	f406 64fc 	and.w	r4, r6, #2016	; 0x7e0
 800fce2:	ea4c 0c04 	orr.w	ip, ip, r4
 800fce6:	f820 c005 	strh.w	ip, [r0, r5]
 800fcea:	e7e6      	b.n	800fcba <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 800fcec:	f04f 0800 	mov.w	r8, #0
 800fcf0:	eba3 0408 	sub.w	r4, r3, r8
 800fcf4:	2c00      	cmp	r4, #0
 800fcf6:	f77f af42 	ble.w	800fb7e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9a>
 800fcfa:	140d      	asrs	r5, r1, #16
 800fcfc:	1414      	asrs	r4, r2, #16
 800fcfe:	fb09 5404 	mla	r4, r9, r4, r5
 800fd02:	9d03      	ldr	r5, [sp, #12]
 800fd04:	f855 4024 	ldr.w	r4, [r5, r4, lsl #2]
 800fd08:	ea5f 6c14 	movs.w	ip, r4, lsr #24
 800fd0c:	d042      	beq.n	800fd94 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2b0>
 800fd0e:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 800fd12:	fa5f f58c 	uxtb.w	r5, ip
 800fd16:	ea4f 4714 	mov.w	r7, r4, lsr #16
 800fd1a:	ea4f 2614 	mov.w	r6, r4, lsr #8
 800fd1e:	d040      	beq.n	800fda2 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2be>
 800fd20:	f830 e018 	ldrh.w	lr, [r0, r8, lsl #1]
 800fd24:	fa1f fa85 	uxth.w	sl, r5
 800fd28:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 800fd2c:	43ed      	mvns	r5, r5
 800fd2e:	b2ff      	uxtb	r7, r7
 800fd30:	b2ed      	uxtb	r5, r5
 800fd32:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 800fd36:	fb17 f70a 	smulbb	r7, r7, sl
 800fd3a:	fb0c 7705 	mla	r7, ip, r5, r7
 800fd3e:	b2e4      	uxtb	r4, r4
 800fd40:	ea4f 0cee 	mov.w	ip, lr, asr #3
 800fd44:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 800fd48:	fa5f fe8e 	uxtb.w	lr, lr
 800fd4c:	fb14 f40a 	smulbb	r4, r4, sl
 800fd50:	fb0e 4405 	mla	r4, lr, r5, r4
 800fd54:	b2f6      	uxtb	r6, r6
 800fd56:	b2bf      	uxth	r7, r7
 800fd58:	fb16 f60a 	smulbb	r6, r6, sl
 800fd5c:	b2a4      	uxth	r4, r4
 800fd5e:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 800fd62:	fb0c 6c05 	mla	ip, ip, r5, r6
 800fd66:	1c7d      	adds	r5, r7, #1
 800fd68:	1c66      	adds	r6, r4, #1
 800fd6a:	eb05 2717 	add.w	r7, r5, r7, lsr #8
 800fd6e:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 800fd72:	fa1f fc8c 	uxth.w	ip, ip
 800fd76:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 800fd7a:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 800fd7e:	4337      	orrs	r7, r6
 800fd80:	f10c 0601 	add.w	r6, ip, #1
 800fd84:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 800fd88:	0976      	lsrs	r6, r6, #5
 800fd8a:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 800fd8e:	4337      	orrs	r7, r6
 800fd90:	f820 7018 	strh.w	r7, [r0, r8, lsl #1]
 800fd94:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 800fd96:	4421      	add	r1, r4
 800fd98:	9c14      	ldr	r4, [sp, #80]	; 0x50
 800fd9a:	f108 0801 	add.w	r8, r8, #1
 800fd9e:	4422      	add	r2, r4
 800fda0:	e7a6      	b.n	800fcf0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x20c>
 800fda2:	4d07      	ldr	r5, [pc, #28]	; (800fdc0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2dc>)
 800fda4:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 800fda8:	ea05 2707 	and.w	r7, r5, r7, lsl #8
 800fdac:	00f6      	lsls	r6, r6, #3
 800fdae:	4327      	orrs	r7, r4
 800fdb0:	f406 64fc 	and.w	r4, r6, #2016	; 0x7e0
 800fdb4:	4327      	orrs	r7, r4
 800fdb6:	e7eb      	b.n	800fd90 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2ac>
 800fdb8:	b007      	add	sp, #28
 800fdba:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800fdbe:	bf00      	nop
 800fdc0:	fffff800 	.word	0xfffff800

0800fdc4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 800fdc4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800fdc8:	b087      	sub	sp, #28
 800fdca:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 800fdce:	9204      	str	r2, [sp, #16]
 800fdd0:	f9bd 2060 	ldrsh.w	r2, [sp, #96]	; 0x60
 800fdd4:	9200      	str	r2, [sp, #0]
 800fdd6:	f9bd 2064 	ldrsh.w	r2, [sp, #100]	; 0x64
 800fdda:	9c15      	ldr	r4, [sp, #84]	; 0x54
 800fddc:	9201      	str	r2, [sp, #4]
 800fdde:	f89d 206c 	ldrb.w	r2, [sp, #108]	; 0x6c
 800fde2:	9205      	str	r2, [sp, #20]
 800fde4:	e9dd 2516 	ldrd	r2, r5, [sp, #88]	; 0x58
 800fde8:	6860      	ldr	r0, [r4, #4]
 800fdea:	fb00 2505 	mla	r5, r0, r5, r2
 800fdee:	6822      	ldr	r2, [r4, #0]
 800fdf0:	eb02 0545 	add.w	r5, r2, r5, lsl #1
 800fdf4:	9a00      	ldr	r2, [sp, #0]
 800fdf6:	3201      	adds	r2, #1
 800fdf8:	f022 0201 	bic.w	r2, r2, #1
 800fdfc:	9202      	str	r2, [sp, #8]
 800fdfe:	9a1a      	ldr	r2, [sp, #104]	; 0x68
 800fe00:	6812      	ldr	r2, [r2, #0]
 800fe02:	9203      	str	r2, [sp, #12]
 800fe04:	2900      	cmp	r1, #0
 800fe06:	dc03      	bgt.n	800fe10 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4c>
 800fe08:	9a04      	ldr	r2, [sp, #16]
 800fe0a:	2a00      	cmp	r2, #0
 800fe0c:	f340 814c 	ble.w	80100a8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2e4>
 800fe10:	9a11      	ldr	r2, [sp, #68]	; 0x44
 800fe12:	f502 4400 	add.w	r4, r2, #32768	; 0x8000
 800fe16:	9a12      	ldr	r2, [sp, #72]	; 0x48
 800fe18:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 800fe1c:	2b00      	cmp	r3, #0
 800fe1e:	dd10      	ble.n	800fe42 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7e>
 800fe20:	1422      	asrs	r2, r4, #16
 800fe22:	d407      	bmi.n	800fe34 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x70>
 800fe24:	9e00      	ldr	r6, [sp, #0]
 800fe26:	4296      	cmp	r6, r2
 800fe28:	dd04      	ble.n	800fe34 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x70>
 800fe2a:	1402      	asrs	r2, r0, #16
 800fe2c:	d402      	bmi.n	800fe34 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x70>
 800fe2e:	9e01      	ldr	r6, [sp, #4]
 800fe30:	42b2      	cmp	r2, r6
 800fe32:	db07      	blt.n	800fe44 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x80>
 800fe34:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 800fe36:	4414      	add	r4, r2
 800fe38:	9a14      	ldr	r2, [sp, #80]	; 0x50
 800fe3a:	3b01      	subs	r3, #1
 800fe3c:	4410      	add	r0, r2
 800fe3e:	3502      	adds	r5, #2
 800fe40:	e7ec      	b.n	800fe1c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x58>
 800fe42:	d00f      	beq.n	800fe64 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xa0>
 800fe44:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 800fe46:	1e5a      	subs	r2, r3, #1
 800fe48:	fb06 4602 	mla	r6, r6, r2, r4
 800fe4c:	1436      	asrs	r6, r6, #16
 800fe4e:	d542      	bpl.n	800fed6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x112>
 800fe50:	469a      	mov	sl, r3
 800fe52:	46a9      	mov	r9, r5
 800fe54:	f1ba 0f00 	cmp.w	sl, #0
 800fe58:	f300 80b5 	bgt.w	800ffc6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x202>
 800fe5c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 800fe60:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 800fe64:	2900      	cmp	r1, #0
 800fe66:	f340 811f 	ble.w	80100a8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2e4>
 800fe6a:	ee30 0a04 	vadd.f32	s0, s0, s8
 800fe6e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 800fe72:	eec6 7a80 	vdiv.f32	s15, s13, s0
 800fe76:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800fe78:	3901      	subs	r1, #1
 800fe7a:	ee31 1a05 	vadd.f32	s2, s2, s10
 800fe7e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 800fe82:	eeb0 6a62 	vmov.f32	s12, s5
 800fe86:	ee61 7a27 	vmul.f32	s15, s2, s15
 800fe8a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 800fe8e:	ee77 2a62 	vsub.f32	s5, s14, s5
 800fe92:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 800fe96:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 800fe9a:	eeb0 6a43 	vmov.f32	s12, s6
 800fe9e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 800fea2:	ee12 2a90 	vmov	r2, s5
 800fea6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 800feaa:	fb92 f3f3 	sdiv	r3, r2, r3
 800feae:	ee13 2a10 	vmov	r2, s6
 800feb2:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 800feb6:	9313      	str	r3, [sp, #76]	; 0x4c
 800feb8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800feba:	fb92 f3f3 	sdiv	r3, r2, r3
 800febe:	9a04      	ldr	r2, [sp, #16]
 800fec0:	9314      	str	r3, [sp, #80]	; 0x50
 800fec2:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 800fec6:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800fec8:	eeb0 3a67 	vmov.f32	s6, s15
 800fecc:	bf08      	it	eq
 800fece:	4613      	moveq	r3, r2
 800fed0:	eef0 2a47 	vmov.f32	s5, s14
 800fed4:	e796      	b.n	800fe04 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x40>
 800fed6:	9f00      	ldr	r7, [sp, #0]
 800fed8:	42b7      	cmp	r7, r6
 800feda:	ddb9      	ble.n	800fe50 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x8c>
 800fedc:	9e14      	ldr	r6, [sp, #80]	; 0x50
 800fede:	fb06 0202 	mla	r2, r6, r2, r0
 800fee2:	1412      	asrs	r2, r2, #16
 800fee4:	d4b4      	bmi.n	800fe50 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x8c>
 800fee6:	9e01      	ldr	r6, [sp, #4]
 800fee8:	42b2      	cmp	r2, r6
 800feea:	dab1      	bge.n	800fe50 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x8c>
 800feec:	f04f 0800 	mov.w	r8, #0
 800fef0:	eba3 0208 	sub.w	r2, r3, r8
 800fef4:	2a00      	cmp	r2, #0
 800fef6:	ddb1      	ble.n	800fe5c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x98>
 800fef8:	9f02      	ldr	r7, [sp, #8]
 800fefa:	1422      	asrs	r2, r4, #16
 800fefc:	1406      	asrs	r6, r0, #16
 800fefe:	fb07 2606 	mla	r6, r7, r6, r2
 800ff02:	0872      	lsrs	r2, r6, #1
 800ff04:	9f03      	ldr	r7, [sp, #12]
 800ff06:	5cba      	ldrb	r2, [r7, r2]
 800ff08:	07f6      	lsls	r6, r6, #31
 800ff0a:	bf54      	ite	pl
 800ff0c:	f002 020f 	andpl.w	r2, r2, #15
 800ff10:	1112      	asrmi	r2, r2, #4
 800ff12:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 800ff16:	b2d2      	uxtb	r2, r2
 800ff18:	2a00      	cmp	r2, #0
 800ff1a:	d04d      	beq.n	800ffb8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1f4>
 800ff1c:	9f05      	ldr	r7, [sp, #20]
 800ff1e:	4e64      	ldr	r6, [pc, #400]	; (80100b0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2ec>)
 800ff20:	f835 e018 	ldrh.w	lr, [r5, r8, lsl #1]
 800ff24:	6836      	ldr	r6, [r6, #0]
 800ff26:	437a      	muls	r2, r7
 800ff28:	1c57      	adds	r7, r2, #1
 800ff2a:	eb07 2222 	add.w	r2, r7, r2, asr #8
 800ff2e:	1212      	asrs	r2, r2, #8
 800ff30:	ea4f 2c16 	mov.w	ip, r6, lsr #8
 800ff34:	fa1f fa82 	uxth.w	sl, r2
 800ff38:	ea4f 272e 	mov.w	r7, lr, asr #8
 800ff3c:	43d2      	mvns	r2, r2
 800ff3e:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 800ff42:	b2d2      	uxtb	r2, r2
 800ff44:	fb1c fc0a 	smulbb	ip, ip, sl
 800ff48:	ea4f 09d6 	mov.w	r9, r6, lsr #3
 800ff4c:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 800ff50:	fb07 c702 	mla	r7, r7, r2, ip
 800ff54:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 800ff58:	ea4f 0cee 	mov.w	ip, lr, asr #3
 800ff5c:	fb19 f90a 	smulbb	r9, r9, sl
 800ff60:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 800ff64:	00f6      	lsls	r6, r6, #3
 800ff66:	fb0c 9c02 	mla	ip, ip, r2, r9
 800ff6a:	b2f6      	uxtb	r6, r6
 800ff6c:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 800ff70:	fa1f fc8c 	uxth.w	ip, ip
 800ff74:	fa5f fe8e 	uxtb.w	lr, lr
 800ff78:	fb16 f60a 	smulbb	r6, r6, sl
 800ff7c:	b2bf      	uxth	r7, r7
 800ff7e:	fb0e 6602 	mla	r6, lr, r2, r6
 800ff82:	f10c 0901 	add.w	r9, ip, #1
 800ff86:	b2b6      	uxth	r6, r6
 800ff88:	eb09 2c1c 	add.w	ip, r9, ip, lsr #8
 800ff8c:	f107 0b01 	add.w	fp, r7, #1
 800ff90:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 800ff94:	eb0b 2717 	add.w	r7, fp, r7, lsr #8
 800ff98:	f106 0e01 	add.w	lr, r6, #1
 800ff9c:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 800ffa0:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 800ffa4:	eb0e 2e16 	add.w	lr, lr, r6, lsr #8
 800ffa8:	ea4c 0c07 	orr.w	ip, ip, r7
 800ffac:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 800ffb0:	ea4c 0c0e 	orr.w	ip, ip, lr
 800ffb4:	f825 c018 	strh.w	ip, [r5, r8, lsl #1]
 800ffb8:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 800ffba:	4414      	add	r4, r2
 800ffbc:	9a14      	ldr	r2, [sp, #80]	; 0x50
 800ffbe:	f108 0801 	add.w	r8, r8, #1
 800ffc2:	4410      	add	r0, r2
 800ffc4:	e794      	b.n	800fef0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x12c>
 800ffc6:	1422      	asrs	r2, r4, #16
 800ffc8:	d465      	bmi.n	8010096 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2d2>
 800ffca:	9e00      	ldr	r6, [sp, #0]
 800ffcc:	4296      	cmp	r6, r2
 800ffce:	dd62      	ble.n	8010096 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2d2>
 800ffd0:	1406      	asrs	r6, r0, #16
 800ffd2:	d460      	bmi.n	8010096 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2d2>
 800ffd4:	9f01      	ldr	r7, [sp, #4]
 800ffd6:	42be      	cmp	r6, r7
 800ffd8:	da5d      	bge.n	8010096 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2d2>
 800ffda:	9f02      	ldr	r7, [sp, #8]
 800ffdc:	fb06 2607 	mla	r6, r6, r7, r2
 800ffe0:	0872      	lsrs	r2, r6, #1
 800ffe2:	9f03      	ldr	r7, [sp, #12]
 800ffe4:	5cba      	ldrb	r2, [r7, r2]
 800ffe6:	07f7      	lsls	r7, r6, #31
 800ffe8:	bf54      	ite	pl
 800ffea:	f002 020f 	andpl.w	r2, r2, #15
 800ffee:	1112      	asrmi	r2, r2, #4
 800fff0:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 800fff4:	b2d2      	uxtb	r2, r2
 800fff6:	2a00      	cmp	r2, #0
 800fff8:	d04d      	beq.n	8010096 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2d2>
 800fffa:	9f05      	ldr	r7, [sp, #20]
 800fffc:	4e2c      	ldr	r6, [pc, #176]	; (80100b0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2ec>)
 800fffe:	f8b9 e000 	ldrh.w	lr, [r9]
 8010002:	6836      	ldr	r6, [r6, #0]
 8010004:	437a      	muls	r2, r7
 8010006:	1c57      	adds	r7, r2, #1
 8010008:	eb07 2222 	add.w	r2, r7, r2, asr #8
 801000c:	1212      	asrs	r2, r2, #8
 801000e:	ea4f 2c16 	mov.w	ip, r6, lsr #8
 8010012:	fa1f fb82 	uxth.w	fp, r2
 8010016:	ea4f 272e 	mov.w	r7, lr, asr #8
 801001a:	43d2      	mvns	r2, r2
 801001c:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8010020:	b2d2      	uxtb	r2, r2
 8010022:	fb1c fc0b 	smulbb	ip, ip, fp
 8010026:	ea4f 08d6 	mov.w	r8, r6, lsr #3
 801002a:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801002e:	fb07 c702 	mla	r7, r7, r2, ip
 8010032:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 8010036:	ea4f 0cee 	mov.w	ip, lr, asr #3
 801003a:	fb18 f80b 	smulbb	r8, r8, fp
 801003e:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 8010042:	00f6      	lsls	r6, r6, #3
 8010044:	fb0c 8c02 	mla	ip, ip, r2, r8
 8010048:	b2f6      	uxtb	r6, r6
 801004a:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801004e:	fa1f fc8c 	uxth.w	ip, ip
 8010052:	fa5f fe8e 	uxtb.w	lr, lr
 8010056:	fb16 f60b 	smulbb	r6, r6, fp
 801005a:	b2bf      	uxth	r7, r7
 801005c:	fb0e 6602 	mla	r6, lr, r2, r6
 8010060:	f10c 0801 	add.w	r8, ip, #1
 8010064:	b2b6      	uxth	r6, r6
 8010066:	eb08 2c1c 	add.w	ip, r8, ip, lsr #8
 801006a:	f107 0801 	add.w	r8, r7, #1
 801006e:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8010072:	eb08 2717 	add.w	r7, r8, r7, lsr #8
 8010076:	f106 0e01 	add.w	lr, r6, #1
 801007a:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 801007e:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8010082:	eb0e 2e16 	add.w	lr, lr, r6, lsr #8
 8010086:	ea4c 0c07 	orr.w	ip, ip, r7
 801008a:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 801008e:	ea4c 0c0e 	orr.w	ip, ip, lr
 8010092:	f8a9 c000 	strh.w	ip, [r9]
 8010096:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8010098:	4414      	add	r4, r2
 801009a:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801009c:	f109 0902 	add.w	r9, r9, #2
 80100a0:	4410      	add	r0, r2
 80100a2:	f10a 3aff 	add.w	sl, sl, #4294967295
 80100a6:	e6d5      	b.n	800fe54 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x90>
 80100a8:	b007      	add	sp, #28
 80100aa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80100ae:	bf00      	nop
 80100b0:	20012340 	.word	0x20012340

080100b4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 80100b4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80100b8:	b087      	sub	sp, #28
 80100ba:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 80100be:	9c15      	ldr	r4, [sp, #84]	; 0x54
 80100c0:	9205      	str	r2, [sp, #20]
 80100c2:	f9bd 2064 	ldrsh.w	r2, [sp, #100]	; 0x64
 80100c6:	9201      	str	r2, [sp, #4]
 80100c8:	e9dd 2516 	ldrd	r2, r5, [sp, #88]	; 0x58
 80100cc:	6860      	ldr	r0, [r4, #4]
 80100ce:	f9bd b060 	ldrsh.w	fp, [sp, #96]	; 0x60
 80100d2:	9100      	str	r1, [sp, #0]
 80100d4:	fb00 2505 	mla	r5, r0, r5, r2
 80100d8:	6822      	ldr	r2, [r4, #0]
 80100da:	eb02 0545 	add.w	r5, r2, r5, lsl #1
 80100de:	f10b 0201 	add.w	r2, fp, #1
 80100e2:	f022 0201 	bic.w	r2, r2, #1
 80100e6:	9203      	str	r2, [sp, #12]
 80100e8:	9a1a      	ldr	r2, [sp, #104]	; 0x68
 80100ea:	6812      	ldr	r2, [r2, #0]
 80100ec:	9204      	str	r2, [sp, #16]
 80100ee:	9a00      	ldr	r2, [sp, #0]
 80100f0:	2a00      	cmp	r2, #0
 80100f2:	dc03      	bgt.n	80100fc <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x48>
 80100f4:	9a05      	ldr	r2, [sp, #20]
 80100f6:	2a00      	cmp	r2, #0
 80100f8:	f340 8157 	ble.w	80103aa <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2f6>
 80100fc:	9a11      	ldr	r2, [sp, #68]	; 0x44
 80100fe:	f502 4400 	add.w	r4, r2, #32768	; 0x8000
 8010102:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8010104:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8010108:	2b00      	cmp	r3, #0
 801010a:	dd0f      	ble.n	801012c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x78>
 801010c:	1422      	asrs	r2, r4, #16
 801010e:	d406      	bmi.n	801011e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6a>
 8010110:	4593      	cmp	fp, r2
 8010112:	dd04      	ble.n	801011e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6a>
 8010114:	1402      	asrs	r2, r0, #16
 8010116:	d402      	bmi.n	801011e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6a>
 8010118:	9e01      	ldr	r6, [sp, #4]
 801011a:	42b2      	cmp	r2, r6
 801011c:	db07      	blt.n	801012e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7a>
 801011e:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8010120:	4414      	add	r4, r2
 8010122:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8010124:	3b01      	subs	r3, #1
 8010126:	4410      	add	r0, r2
 8010128:	3502      	adds	r5, #2
 801012a:	e7ed      	b.n	8010108 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x54>
 801012c:	d018      	beq.n	8010160 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xac>
 801012e:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 8010130:	1e5a      	subs	r2, r3, #1
 8010132:	fb06 4602 	mla	r6, r6, r2, r4
 8010136:	1436      	asrs	r6, r6, #16
 8010138:	d40a      	bmi.n	8010150 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9c>
 801013a:	45b3      	cmp	fp, r6
 801013c:	dd08      	ble.n	8010150 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9c>
 801013e:	9e14      	ldr	r6, [sp, #80]	; 0x50
 8010140:	fb06 0202 	mla	r2, r6, r2, r0
 8010144:	1412      	asrs	r2, r2, #16
 8010146:	d403      	bmi.n	8010150 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9c>
 8010148:	9e01      	ldr	r6, [sp, #4]
 801014a:	42b2      	cmp	r2, r6
 801014c:	f2c0 80bf 	blt.w	80102ce <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x21a>
 8010150:	2700      	movs	r7, #0
 8010152:	19da      	adds	r2, r3, r7
 8010154:	2a00      	cmp	r2, #0
 8010156:	dc3f      	bgt.n	80101d8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x124>
 8010158:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801015c:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 8010160:	9b00      	ldr	r3, [sp, #0]
 8010162:	2b00      	cmp	r3, #0
 8010164:	f340 8121 	ble.w	80103aa <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2f6>
 8010168:	ee30 0a04 	vadd.f32	s0, s0, s8
 801016c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8010170:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8010174:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8010176:	ee31 1a05 	vadd.f32	s2, s2, s10
 801017a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801017e:	eeb0 6a62 	vmov.f32	s12, s5
 8010182:	ee61 7a27 	vmul.f32	s15, s2, s15
 8010186:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801018a:	ee77 2a62 	vsub.f32	s5, s14, s5
 801018e:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 8010192:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8010196:	eeb0 6a43 	vmov.f32	s12, s6
 801019a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801019e:	ee12 2a90 	vmov	r2, s5
 80101a2:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80101a6:	fb92 f3f3 	sdiv	r3, r2, r3
 80101aa:	ee13 2a10 	vmov	r2, s6
 80101ae:	9313      	str	r3, [sp, #76]	; 0x4c
 80101b0:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80101b2:	fb92 f3f3 	sdiv	r3, r2, r3
 80101b6:	9314      	str	r3, [sp, #80]	; 0x50
 80101b8:	9b00      	ldr	r3, [sp, #0]
 80101ba:	9a05      	ldr	r2, [sp, #20]
 80101bc:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80101c0:	3b01      	subs	r3, #1
 80101c2:	9300      	str	r3, [sp, #0]
 80101c4:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 80101c8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80101ca:	eeb0 3a67 	vmov.f32	s6, s15
 80101ce:	bf08      	it	eq
 80101d0:	4613      	moveq	r3, r2
 80101d2:	eef0 2a47 	vmov.f32	s5, s14
 80101d6:	e78a      	b.n	80100ee <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3a>
 80101d8:	1422      	asrs	r2, r4, #16
 80101da:	d466      	bmi.n	80102aa <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1f6>
 80101dc:	4593      	cmp	fp, r2
 80101de:	dd64      	ble.n	80102aa <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1f6>
 80101e0:	1406      	asrs	r6, r0, #16
 80101e2:	d462      	bmi.n	80102aa <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1f6>
 80101e4:	9901      	ldr	r1, [sp, #4]
 80101e6:	428e      	cmp	r6, r1
 80101e8:	da5f      	bge.n	80102aa <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1f6>
 80101ea:	9903      	ldr	r1, [sp, #12]
 80101ec:	fb06 2601 	mla	r6, r6, r1, r2
 80101f0:	0872      	lsrs	r2, r6, #1
 80101f2:	9904      	ldr	r1, [sp, #16]
 80101f4:	5c8a      	ldrb	r2, [r1, r2]
 80101f6:	07f6      	lsls	r6, r6, #31
 80101f8:	bf54      	ite	pl
 80101fa:	f002 020f 	andpl.w	r2, r2, #15
 80101fe:	1112      	asrmi	r2, r2, #4
 8010200:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8010204:	b2d2      	uxtb	r2, r2
 8010206:	2a00      	cmp	r2, #0
 8010208:	d04f      	beq.n	80102aa <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1f6>
 801020a:	4969      	ldr	r1, [pc, #420]	; (80103b0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2fc>)
 801020c:	f8d1 c000 	ldr.w	ip, [r1]
 8010210:	2aff      	cmp	r2, #255	; 0xff
 8010212:	ea4f 291c 	mov.w	r9, ip, lsr #8
 8010216:	ea4f 06dc 	mov.w	r6, ip, lsr #3
 801021a:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801021e:	f009 09f8 	and.w	r9, r9, #248	; 0xf8
 8010222:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8010226:	fa5f fc8c 	uxtb.w	ip, ip
 801022a:	d044      	beq.n	80102b6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x202>
 801022c:	f06f 0101 	mvn.w	r1, #1
 8010230:	4379      	muls	r1, r7
 8010232:	fa1f fa82 	uxth.w	sl, r2
 8010236:	f835 8001 	ldrh.w	r8, [r5, r1]
 801023a:	9102      	str	r1, [sp, #8]
 801023c:	ea4f 2e28 	mov.w	lr, r8, asr #8
 8010240:	43d2      	mvns	r2, r2
 8010242:	b2d2      	uxtb	r2, r2
 8010244:	fb19 f90a 	smulbb	r9, r9, sl
 8010248:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801024c:	fb0e 9e02 	mla	lr, lr, r2, r9
 8010250:	ea4f 09e8 	mov.w	r9, r8, asr #3
 8010254:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 8010258:	fb16 f60a 	smulbb	r6, r6, sl
 801025c:	fb09 6602 	mla	r6, r9, r2, r6
 8010260:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8010264:	b2b6      	uxth	r6, r6
 8010266:	fa5f f888 	uxtb.w	r8, r8
 801026a:	fb1c fc0a 	smulbb	ip, ip, sl
 801026e:	fa1f fe8e 	uxth.w	lr, lr
 8010272:	fb08 cc02 	mla	ip, r8, r2, ip
 8010276:	f106 0901 	add.w	r9, r6, #1
 801027a:	fa1f fc8c 	uxth.w	ip, ip
 801027e:	eb09 2616 	add.w	r6, r9, r6, lsr #8
 8010282:	f10e 0901 	add.w	r9, lr, #1
 8010286:	0976      	lsrs	r6, r6, #5
 8010288:	eb09 2e1e 	add.w	lr, r9, lr, lsr #8
 801028c:	f10c 0201 	add.w	r2, ip, #1
 8010290:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8010294:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 8010298:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 801029c:	ea46 060e 	orr.w	r6, r6, lr
 80102a0:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 80102a4:	ea46 060c 	orr.w	r6, r6, ip
 80102a8:	526e      	strh	r6, [r5, r1]
 80102aa:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80102ac:	4414      	add	r4, r2
 80102ae:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80102b0:	3f01      	subs	r7, #1
 80102b2:	4410      	add	r0, r2
 80102b4:	e74d      	b.n	8010152 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9e>
 80102b6:	f06f 0201 	mvn.w	r2, #1
 80102ba:	00f6      	lsls	r6, r6, #3
 80102bc:	fb02 f807 	mul.w	r8, r2, r7
 80102c0:	ea46 2609 	orr.w	r6, r6, r9, lsl #8
 80102c4:	ea46 06dc 	orr.w	r6, r6, ip, lsr #3
 80102c8:	f825 6008 	strh.w	r6, [r5, r8]
 80102cc:	e7ed      	b.n	80102aa <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1f6>
 80102ce:	f04f 0800 	mov.w	r8, #0
 80102d2:	eba3 0208 	sub.w	r2, r3, r8
 80102d6:	2a00      	cmp	r2, #0
 80102d8:	f77f af3e 	ble.w	8010158 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xa4>
 80102dc:	9903      	ldr	r1, [sp, #12]
 80102de:	1422      	asrs	r2, r4, #16
 80102e0:	1406      	asrs	r6, r0, #16
 80102e2:	fb01 2606 	mla	r6, r1, r6, r2
 80102e6:	0872      	lsrs	r2, r6, #1
 80102e8:	9904      	ldr	r1, [sp, #16]
 80102ea:	5c8a      	ldrb	r2, [r1, r2]
 80102ec:	07f1      	lsls	r1, r6, #31
 80102ee:	bf54      	ite	pl
 80102f0:	f002 020f 	andpl.w	r2, r2, #15
 80102f4:	1112      	asrmi	r2, r2, #4
 80102f6:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 80102fa:	b2d2      	uxtb	r2, r2
 80102fc:	2a00      	cmp	r2, #0
 80102fe:	d047      	beq.n	8010390 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2dc>
 8010300:	492b      	ldr	r1, [pc, #172]	; (80103b0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2fc>)
 8010302:	680f      	ldr	r7, [r1, #0]
 8010304:	2aff      	cmp	r2, #255	; 0xff
 8010306:	ea4f 2917 	mov.w	r9, r7, lsr #8
 801030a:	ea4f 06d7 	mov.w	r6, r7, lsr #3
 801030e:	ea4f 07c7 	mov.w	r7, r7, lsl #3
 8010312:	f009 09f8 	and.w	r9, r9, #248	; 0xf8
 8010316:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801031a:	b2ff      	uxtb	r7, r7
 801031c:	d03f      	beq.n	801039e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2ea>
 801031e:	f835 e018 	ldrh.w	lr, [r5, r8, lsl #1]
 8010322:	fa1f fa82 	uxth.w	sl, r2
 8010326:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801032a:	43d2      	mvns	r2, r2
 801032c:	b2d2      	uxtb	r2, r2
 801032e:	fb19 f90a 	smulbb	r9, r9, sl
 8010332:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8010336:	fb0c 9c02 	mla	ip, ip, r2, r9
 801033a:	ea4f 09ee 	mov.w	r9, lr, asr #3
 801033e:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 8010342:	fb16 f60a 	smulbb	r6, r6, sl
 8010346:	fb09 6602 	mla	r6, r9, r2, r6
 801034a:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801034e:	b2b6      	uxth	r6, r6
 8010350:	fa5f fe8e 	uxtb.w	lr, lr
 8010354:	fb17 f70a 	smulbb	r7, r7, sl
 8010358:	fa1f fc8c 	uxth.w	ip, ip
 801035c:	fb0e 7702 	mla	r7, lr, r2, r7
 8010360:	f106 0901 	add.w	r9, r6, #1
 8010364:	b2bf      	uxth	r7, r7
 8010366:	eb09 2616 	add.w	r6, r9, r6, lsr #8
 801036a:	f10c 0901 	add.w	r9, ip, #1
 801036e:	0976      	lsrs	r6, r6, #5
 8010370:	eb09 2c1c 	add.w	ip, r9, ip, lsr #8
 8010374:	1c7a      	adds	r2, r7, #1
 8010376:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801037a:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801037e:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 8010382:	ea46 060c 	orr.w	r6, r6, ip
 8010386:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801038a:	433e      	orrs	r6, r7
 801038c:	f825 6018 	strh.w	r6, [r5, r8, lsl #1]
 8010390:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8010392:	4414      	add	r4, r2
 8010394:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8010396:	f108 0801 	add.w	r8, r8, #1
 801039a:	4410      	add	r0, r2
 801039c:	e799      	b.n	80102d2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x21e>
 801039e:	00f6      	lsls	r6, r6, #3
 80103a0:	ea46 2609 	orr.w	r6, r6, r9, lsl #8
 80103a4:	ea46 06d7 	orr.w	r6, r6, r7, lsr #3
 80103a8:	e7f0      	b.n	801038c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2d8>
 80103aa:	b007      	add	sp, #28
 80103ac:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80103b0:	20012340 	.word	0x20012340

080103b4 <_ZN8touchgfx8LCD16bppD1Ev>:
 80103b4:	4770      	bx	lr

080103b6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD1Ev>:
 80103b6:	4770      	bx	lr

080103b8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD1Ev>:
 80103b8:	4770      	bx	lr

080103ba <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD1Ev>:
 80103ba:	4770      	bx	lr

080103bc <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD1Ev>:
 80103bc:	4770      	bx	lr

080103be <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 80103be:	4770      	bx	lr

080103c0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 80103c0:	4770      	bx	lr

080103c2 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 80103c2:	4770      	bx	lr

080103c4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 80103c4:	4770      	bx	lr

080103c6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 80103c6:	4770      	bx	lr

080103c8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 80103c8:	4770      	bx	lr

080103ca <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 80103ca:	4770      	bx	lr

080103cc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD1Ev>:
 80103cc:	4770      	bx	lr

080103ce <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 80103ce:	4770      	bx	lr

080103d0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 80103d0:	4770      	bx	lr

080103d2 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 80103d2:	4770      	bx	lr

080103d4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD1Ev>:
 80103d4:	4770      	bx	lr

080103d6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 80103d6:	4770      	bx	lr

080103d8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 80103d8:	4770      	bx	lr

080103da <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 80103da:	4770      	bx	lr

080103dc <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 80103dc:	4770      	bx	lr

080103de <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD1Ev>:
 80103de:	4770      	bx	lr

080103e0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD1Ev>:
 80103e0:	4770      	bx	lr

080103e2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD1Ev>:
 80103e2:	4770      	bx	lr

080103e4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD1Ev>:
 80103e4:	4770      	bx	lr

080103e6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 80103e6:	4770      	bx	lr

080103e8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 80103e8:	4770      	bx	lr

080103ea <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 80103ea:	4770      	bx	lr

080103ec <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 80103ec:	4770      	bx	lr
	...

080103f0 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv>:
 80103f0:	b508      	push	{r3, lr}
 80103f2:	4b06      	ldr	r3, [pc, #24]	; (801040c <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0x1c>)
 80103f4:	8818      	ldrh	r0, [r3, #0]
 80103f6:	b928      	cbnz	r0, 8010404 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0x14>
 80103f8:	4b05      	ldr	r3, [pc, #20]	; (8010410 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0x20>)
 80103fa:	4a06      	ldr	r2, [pc, #24]	; (8010414 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0x24>)
 80103fc:	4806      	ldr	r0, [pc, #24]	; (8010418 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0x28>)
 80103fe:	2154      	movs	r1, #84	; 0x54
 8010400:	f009 f8bc 	bl	801957c <__assert_func>
 8010404:	0040      	lsls	r0, r0, #1
 8010406:	b280      	uxth	r0, r0
 8010408:	bd08      	pop	{r3, pc}
 801040a:	bf00      	nop
 801040c:	20012332 	.word	0x20012332
 8010410:	0801d2f3 	.word	0x0801d2f3
 8010414:	0801d873 	.word	0x0801d873
 8010418:	0801d335 	.word	0x0801d335

0801041c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb>:
 801041c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010420:	b08d      	sub	sp, #52	; 0x34
 8010422:	460f      	mov	r7, r1
 8010424:	f89d 9058 	ldrb.w	r9, [sp, #88]	; 0x58
 8010428:	f89d 405c 	ldrb.w	r4, [sp, #92]	; 0x5c
 801042c:	4616      	mov	r6, r2
 801042e:	f1b9 0f00 	cmp.w	r9, #0
 8010432:	d046      	beq.n	80104c2 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xa6>
 8010434:	6810      	ldr	r0, [r2, #0]
 8010436:	6851      	ldr	r1, [r2, #4]
 8010438:	f8df 81c4 	ldr.w	r8, [pc, #452]	; 8010600 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1e4>
 801043c:	ad08      	add	r5, sp, #32
 801043e:	c503      	stmia	r5!, {r0, r1}
 8010440:	6818      	ldr	r0, [r3, #0]
 8010442:	6859      	ldr	r1, [r3, #4]
 8010444:	ad0a      	add	r5, sp, #40	; 0x28
 8010446:	c503      	stmia	r5!, {r0, r1}
 8010448:	a808      	add	r0, sp, #32
 801044a:	f7fb fa5f 	bl	800b90c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801044e:	4631      	mov	r1, r6
 8010450:	a80a      	add	r0, sp, #40	; 0x28
 8010452:	f7fb fa43 	bl	800b8dc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8010456:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	; 0x28
 801045a:	f9bd 302a 	ldrsh.w	r3, [sp, #42]	; 0x2a
 801045e:	f8bd 6024 	ldrh.w	r6, [sp, #36]	; 0x24
 8010462:	f8d8 0000 	ldr.w	r0, [r8]
 8010466:	f9bd 502c 	ldrsh.w	r5, [sp, #44]	; 0x2c
 801046a:	fb16 2103 	smlabb	r1, r6, r3, r2
 801046e:	eb07 0641 	add.w	r6, r7, r1, lsl #1
 8010472:	f8bd 1020 	ldrh.w	r1, [sp, #32]
 8010476:	f9bd 702e 	ldrsh.w	r7, [sp, #46]	; 0x2e
 801047a:	440a      	add	r2, r1
 801047c:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 8010480:	f8bd 2022 	ldrh.w	r2, [sp, #34]	; 0x22
 8010484:	4413      	add	r3, r2
 8010486:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 801048a:	6803      	ldr	r3, [r0, #0]
 801048c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801048e:	4798      	blx	r3
 8010490:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8010494:	d018      	beq.n	80104c8 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xac>
 8010496:	f010 0f04 	tst.w	r0, #4
 801049a:	d019      	beq.n	80104d0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xb4>
 801049c:	f8d8 0000 	ldr.w	r0, [r8]
 80104a0:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 80104a4:	6801      	ldr	r1, [r0, #0]
 80104a6:	f8bd 2028 	ldrh.w	r2, [sp, #40]	; 0x28
 80104aa:	e9cd 9403 	strd	r9, r4, [sp, #12]
 80104ae:	b2bf      	uxth	r7, r7
 80104b0:	f8bd 4024 	ldrh.w	r4, [sp, #36]	; 0x24
 80104b4:	9402      	str	r4, [sp, #8]
 80104b6:	b2ad      	uxth	r5, r5
 80104b8:	9701      	str	r7, [sp, #4]
 80104ba:	9500      	str	r5, [sp, #0]
 80104bc:	6b8c      	ldr	r4, [r1, #56]	; 0x38
 80104be:	4631      	mov	r1, r6
 80104c0:	47a0      	blx	r4
 80104c2:	b00d      	add	sp, #52	; 0x34
 80104c4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80104c8:	b914      	cbnz	r4, 80104d0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xb4>
 80104ca:	f010 0f01 	tst.w	r0, #1
 80104ce:	e7e4      	b.n	801049a <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x7e>
 80104d0:	f8d8 0000 	ldr.w	r0, [r8]
 80104d4:	6803      	ldr	r3, [r0, #0]
 80104d6:	6a1b      	ldr	r3, [r3, #32]
 80104d8:	4798      	blx	r3
 80104da:	4a48      	ldr	r2, [pc, #288]	; (80105fc <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1e0>)
 80104dc:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	; 0x2a
 80104e0:	8814      	ldrh	r4, [r2, #0]
 80104e2:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 80104e6:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 80104ea:	fb01 3404 	mla	r4, r1, r4, r3
 80104ee:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 80104f2:	4692      	mov	sl, r2
 80104f4:	d118      	bne.n	8010528 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x10c>
 80104f6:	ea4f 0b45 	mov.w	fp, r5, lsl #1
 80104fa:	f04f 0900 	mov.w	r9, #0
 80104fe:	f8d8 0000 	ldr.w	r0, [r8]
 8010502:	45b9      	cmp	r9, r7
 8010504:	6803      	ldr	r3, [r0, #0]
 8010506:	da73      	bge.n	80105f0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>
 8010508:	6add      	ldr	r5, [r3, #44]	; 0x2c
 801050a:	4632      	mov	r2, r6
 801050c:	465b      	mov	r3, fp
 801050e:	4621      	mov	r1, r4
 8010510:	47a8      	blx	r5
 8010512:	f8ba 3000 	ldrh.w	r3, [sl]
 8010516:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801051a:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	; 0x24
 801051e:	f109 0901 	add.w	r9, r9, #1
 8010522:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 8010526:	e7ea      	b.n	80104fe <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xe2>
 8010528:	f1c9 08ff 	rsb	r8, r9, #255	; 0xff
 801052c:	ea25 7ae5 	bic.w	sl, r5, r5, asr #31
 8010530:	ea4f 0a4a 	mov.w	sl, sl, lsl #1
 8010534:	f04f 0b00 	mov.w	fp, #0
 8010538:	fa1f f389 	uxth.w	r3, r9
 801053c:	fa1f f888 	uxth.w	r8, r8
 8010540:	9207      	str	r2, [sp, #28]
 8010542:	45bb      	cmp	fp, r7
 8010544:	da54      	bge.n	80105f0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>
 8010546:	f04f 0e00 	mov.w	lr, #0
 801054a:	45ae      	cmp	lr, r5
 801054c:	da41      	bge.n	80105d2 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1b6>
 801054e:	f834 101e 	ldrh.w	r1, [r4, lr, lsl #1]
 8010552:	f836 201e 	ldrh.w	r2, [r6, lr, lsl #1]
 8010556:	1208      	asrs	r0, r1, #8
 8010558:	ea4f 2c22 	mov.w	ip, r2, asr #8
 801055c:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8010560:	fb10 f008 	smulbb	r0, r0, r8
 8010564:	ea4f 09e1 	mov.w	r9, r1, asr #3
 8010568:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801056c:	00c9      	lsls	r1, r1, #3
 801056e:	fb0c 0c03 	mla	ip, ip, r3, r0
 8010572:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 8010576:	10d0      	asrs	r0, r2, #3
 8010578:	b2c9      	uxtb	r1, r1
 801057a:	00d2      	lsls	r2, r2, #3
 801057c:	fa1f fc8c 	uxth.w	ip, ip
 8010580:	fb19 f908 	smulbb	r9, r9, r8
 8010584:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8010588:	b2d2      	uxtb	r2, r2
 801058a:	fb11 f108 	smulbb	r1, r1, r8
 801058e:	fb00 9003 	mla	r0, r0, r3, r9
 8010592:	fb02 1203 	mla	r2, r2, r3, r1
 8010596:	f10c 0901 	add.w	r9, ip, #1
 801059a:	b292      	uxth	r2, r2
 801059c:	eb09 2c1c 	add.w	ip, r9, ip, lsr #8
 80105a0:	f40c 4978 	and.w	r9, ip, #63488	; 0xf800
 80105a4:	f102 0c01 	add.w	ip, r2, #1
 80105a8:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 80105ac:	b280      	uxth	r0, r0
 80105ae:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 80105b2:	ea49 0c02 	orr.w	ip, r9, r2
 80105b6:	f100 0901 	add.w	r9, r0, #1
 80105ba:	eb09 2010 	add.w	r0, r9, r0, lsr #8
 80105be:	0940      	lsrs	r0, r0, #5
 80105c0:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80105c4:	ea4c 0c00 	orr.w	ip, ip, r0
 80105c8:	f824 c01e 	strh.w	ip, [r4, lr, lsl #1]
 80105cc:	f10e 0e01 	add.w	lr, lr, #1
 80105d0:	e7bb      	b.n	801054a <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x12e>
 80105d2:	9a07      	ldr	r2, [sp, #28]
 80105d4:	8812      	ldrh	r2, [r2, #0]
 80105d6:	1b52      	subs	r2, r2, r5
 80105d8:	eb0a 0242 	add.w	r2, sl, r2, lsl #1
 80105dc:	4414      	add	r4, r2
 80105de:	f9bd 2024 	ldrsh.w	r2, [sp, #36]	; 0x24
 80105e2:	1b52      	subs	r2, r2, r5
 80105e4:	eb0a 0242 	add.w	r2, sl, r2, lsl #1
 80105e8:	4416      	add	r6, r2
 80105ea:	f10b 0b01 	add.w	fp, fp, #1
 80105ee:	e7a8      	b.n	8010542 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x126>
 80105f0:	4b03      	ldr	r3, [pc, #12]	; (8010600 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1e4>)
 80105f2:	6818      	ldr	r0, [r3, #0]
 80105f4:	6803      	ldr	r3, [r0, #0]
 80105f6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80105f8:	4798      	blx	r3
 80105fa:	e762      	b.n	80104c2 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xa6>
 80105fc:	20012332 	.word	0x20012332
 8010600:	20012338 	.word	0x20012338

08010604 <_ZN8touchgfx8LCD16bppD0Ev>:
 8010604:	b510      	push	{r4, lr}
 8010606:	2178      	movs	r1, #120	; 0x78
 8010608:	4604      	mov	r4, r0
 801060a:	f008 ff8b 	bl	8019524 <_ZdlPvj>
 801060e:	4620      	mov	r0, r4
 8010610:	bd10      	pop	{r4, pc}

08010612 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 8010612:	b510      	push	{r4, lr}
 8010614:	2104      	movs	r1, #4
 8010616:	4604      	mov	r4, r0
 8010618:	f008 ff84 	bl	8019524 <_ZdlPvj>
 801061c:	4620      	mov	r0, r4
 801061e:	bd10      	pop	{r4, pc}

08010620 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 8010620:	b510      	push	{r4, lr}
 8010622:	2104      	movs	r1, #4
 8010624:	4604      	mov	r4, r0
 8010626:	f008 ff7d 	bl	8019524 <_ZdlPvj>
 801062a:	4620      	mov	r0, r4
 801062c:	bd10      	pop	{r4, pc}

0801062e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 801062e:	b510      	push	{r4, lr}
 8010630:	2104      	movs	r1, #4
 8010632:	4604      	mov	r4, r0
 8010634:	f008 ff76 	bl	8019524 <_ZdlPvj>
 8010638:	4620      	mov	r0, r4
 801063a:	bd10      	pop	{r4, pc}

0801063c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 801063c:	b510      	push	{r4, lr}
 801063e:	2104      	movs	r1, #4
 8010640:	4604      	mov	r4, r0
 8010642:	f008 ff6f 	bl	8019524 <_ZdlPvj>
 8010646:	4620      	mov	r0, r4
 8010648:	bd10      	pop	{r4, pc}

0801064a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD0Ev>:
 801064a:	b510      	push	{r4, lr}
 801064c:	2104      	movs	r1, #4
 801064e:	4604      	mov	r4, r0
 8010650:	f008 ff68 	bl	8019524 <_ZdlPvj>
 8010654:	4620      	mov	r0, r4
 8010656:	bd10      	pop	{r4, pc}

08010658 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD0Ev>:
 8010658:	b510      	push	{r4, lr}
 801065a:	2104      	movs	r1, #4
 801065c:	4604      	mov	r4, r0
 801065e:	f008 ff61 	bl	8019524 <_ZdlPvj>
 8010662:	4620      	mov	r0, r4
 8010664:	bd10      	pop	{r4, pc}

08010666 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD0Ev>:
 8010666:	b510      	push	{r4, lr}
 8010668:	2104      	movs	r1, #4
 801066a:	4604      	mov	r4, r0
 801066c:	f008 ff5a 	bl	8019524 <_ZdlPvj>
 8010670:	4620      	mov	r0, r4
 8010672:	bd10      	pop	{r4, pc}

08010674 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD0Ev>:
 8010674:	b510      	push	{r4, lr}
 8010676:	2104      	movs	r1, #4
 8010678:	4604      	mov	r4, r0
 801067a:	f008 ff53 	bl	8019524 <_ZdlPvj>
 801067e:	4620      	mov	r0, r4
 8010680:	bd10      	pop	{r4, pc}

08010682 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 8010682:	b510      	push	{r4, lr}
 8010684:	2104      	movs	r1, #4
 8010686:	4604      	mov	r4, r0
 8010688:	f008 ff4c 	bl	8019524 <_ZdlPvj>
 801068c:	4620      	mov	r0, r4
 801068e:	bd10      	pop	{r4, pc}

08010690 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 8010690:	b510      	push	{r4, lr}
 8010692:	2104      	movs	r1, #4
 8010694:	4604      	mov	r4, r0
 8010696:	f008 ff45 	bl	8019524 <_ZdlPvj>
 801069a:	4620      	mov	r0, r4
 801069c:	bd10      	pop	{r4, pc}

0801069e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 801069e:	b510      	push	{r4, lr}
 80106a0:	2104      	movs	r1, #4
 80106a2:	4604      	mov	r4, r0
 80106a4:	f008 ff3e 	bl	8019524 <_ZdlPvj>
 80106a8:	4620      	mov	r0, r4
 80106aa:	bd10      	pop	{r4, pc}

080106ac <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 80106ac:	b510      	push	{r4, lr}
 80106ae:	2104      	movs	r1, #4
 80106b0:	4604      	mov	r4, r0
 80106b2:	f008 ff37 	bl	8019524 <_ZdlPvj>
 80106b6:	4620      	mov	r0, r4
 80106b8:	bd10      	pop	{r4, pc}

080106ba <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 80106ba:	b510      	push	{r4, lr}
 80106bc:	2104      	movs	r1, #4
 80106be:	4604      	mov	r4, r0
 80106c0:	f008 ff30 	bl	8019524 <_ZdlPvj>
 80106c4:	4620      	mov	r0, r4
 80106c6:	bd10      	pop	{r4, pc}

080106c8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 80106c8:	b510      	push	{r4, lr}
 80106ca:	2104      	movs	r1, #4
 80106cc:	4604      	mov	r4, r0
 80106ce:	f008 ff29 	bl	8019524 <_ZdlPvj>
 80106d2:	4620      	mov	r0, r4
 80106d4:	bd10      	pop	{r4, pc}

080106d6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 80106d6:	b510      	push	{r4, lr}
 80106d8:	2104      	movs	r1, #4
 80106da:	4604      	mov	r4, r0
 80106dc:	f008 ff22 	bl	8019524 <_ZdlPvj>
 80106e0:	4620      	mov	r0, r4
 80106e2:	bd10      	pop	{r4, pc}

080106e4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD0Ev>:
 80106e4:	b510      	push	{r4, lr}
 80106e6:	2104      	movs	r1, #4
 80106e8:	4604      	mov	r4, r0
 80106ea:	f008 ff1b 	bl	8019524 <_ZdlPvj>
 80106ee:	4620      	mov	r0, r4
 80106f0:	bd10      	pop	{r4, pc}

080106f2 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 80106f2:	b510      	push	{r4, lr}
 80106f4:	2104      	movs	r1, #4
 80106f6:	4604      	mov	r4, r0
 80106f8:	f008 ff14 	bl	8019524 <_ZdlPvj>
 80106fc:	4620      	mov	r0, r4
 80106fe:	bd10      	pop	{r4, pc}

08010700 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 8010700:	b510      	push	{r4, lr}
 8010702:	2104      	movs	r1, #4
 8010704:	4604      	mov	r4, r0
 8010706:	f008 ff0d 	bl	8019524 <_ZdlPvj>
 801070a:	4620      	mov	r0, r4
 801070c:	bd10      	pop	{r4, pc}

0801070e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 801070e:	b510      	push	{r4, lr}
 8010710:	2104      	movs	r1, #4
 8010712:	4604      	mov	r4, r0
 8010714:	f008 ff06 	bl	8019524 <_ZdlPvj>
 8010718:	4620      	mov	r0, r4
 801071a:	bd10      	pop	{r4, pc}

0801071c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD0Ev>:
 801071c:	b510      	push	{r4, lr}
 801071e:	2104      	movs	r1, #4
 8010720:	4604      	mov	r4, r0
 8010722:	f008 feff 	bl	8019524 <_ZdlPvj>
 8010726:	4620      	mov	r0, r4
 8010728:	bd10      	pop	{r4, pc}

0801072a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 801072a:	b510      	push	{r4, lr}
 801072c:	2104      	movs	r1, #4
 801072e:	4604      	mov	r4, r0
 8010730:	f008 fef8 	bl	8019524 <_ZdlPvj>
 8010734:	4620      	mov	r0, r4
 8010736:	bd10      	pop	{r4, pc}

08010738 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 8010738:	b510      	push	{r4, lr}
 801073a:	2104      	movs	r1, #4
 801073c:	4604      	mov	r4, r0
 801073e:	f008 fef1 	bl	8019524 <_ZdlPvj>
 8010742:	4620      	mov	r0, r4
 8010744:	bd10      	pop	{r4, pc}

08010746 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 8010746:	b510      	push	{r4, lr}
 8010748:	2104      	movs	r1, #4
 801074a:	4604      	mov	r4, r0
 801074c:	f008 feea 	bl	8019524 <_ZdlPvj>
 8010750:	4620      	mov	r0, r4
 8010752:	bd10      	pop	{r4, pc}

08010754 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 8010754:	b510      	push	{r4, lr}
 8010756:	2104      	movs	r1, #4
 8010758:	4604      	mov	r4, r0
 801075a:	f008 fee3 	bl	8019524 <_ZdlPvj>
 801075e:	4620      	mov	r0, r4
 8010760:	bd10      	pop	{r4, pc}

08010762 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD0Ev>:
 8010762:	b510      	push	{r4, lr}
 8010764:	2104      	movs	r1, #4
 8010766:	4604      	mov	r4, r0
 8010768:	f008 fedc 	bl	8019524 <_ZdlPvj>
 801076c:	4620      	mov	r0, r4
 801076e:	bd10      	pop	{r4, pc}

08010770 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD0Ev>:
 8010770:	b510      	push	{r4, lr}
 8010772:	2104      	movs	r1, #4
 8010774:	4604      	mov	r4, r0
 8010776:	f008 fed5 	bl	8019524 <_ZdlPvj>
 801077a:	4620      	mov	r0, r4
 801077c:	bd10      	pop	{r4, pc}

0801077e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD0Ev>:
 801077e:	b510      	push	{r4, lr}
 8010780:	2104      	movs	r1, #4
 8010782:	4604      	mov	r4, r0
 8010784:	f008 fece 	bl	8019524 <_ZdlPvj>
 8010788:	4620      	mov	r0, r4
 801078a:	bd10      	pop	{r4, pc}

0801078c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD0Ev>:
 801078c:	b510      	push	{r4, lr}
 801078e:	2104      	movs	r1, #4
 8010790:	4604      	mov	r4, r0
 8010792:	f008 fec7 	bl	8019524 <_ZdlPvj>
 8010796:	4620      	mov	r0, r4
 8010798:	bd10      	pop	{r4, pc}
	...

0801079c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh>:
 801079c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80107a0:	460e      	mov	r6, r1
 80107a2:	b08b      	sub	sp, #44	; 0x2c
 80107a4:	4615      	mov	r5, r2
 80107a6:	461c      	mov	r4, r3
 80107a8:	b323      	cbz	r3, 80107f4 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x58>
 80107aa:	4608      	mov	r0, r1
 80107ac:	f7f8 fc55 	bl	800905a <_ZNK8touchgfx4Rect7isEmptyEv>
 80107b0:	bb00      	cbnz	r0, 80107f4 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x58>
 80107b2:	6830      	ldr	r0, [r6, #0]
 80107b4:	6871      	ldr	r1, [r6, #4]
 80107b6:	4e55      	ldr	r6, [pc, #340]	; (801090c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x170>)
 80107b8:	ab08      	add	r3, sp, #32
 80107ba:	c303      	stmia	r3!, {r0, r1}
 80107bc:	a808      	add	r0, sp, #32
 80107be:	f7fb f8a5 	bl	800b90c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80107c2:	6830      	ldr	r0, [r6, #0]
 80107c4:	6803      	ldr	r3, [r0, #0]
 80107c6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80107c8:	4798      	blx	r3
 80107ca:	2cff      	cmp	r4, #255	; 0xff
 80107cc:	d015      	beq.n	80107fa <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5e>
 80107ce:	f010 0f08 	tst.w	r0, #8
 80107d2:	d015      	beq.n	8010800 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x64>
 80107d4:	6830      	ldr	r0, [r6, #0]
 80107d6:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
 80107da:	6801      	ldr	r1, [r0, #0]
 80107dc:	9402      	str	r4, [sp, #8]
 80107de:	f8bd 4026 	ldrh.w	r4, [sp, #38]	; 0x26
 80107e2:	9401      	str	r4, [sp, #4]
 80107e4:	f8bd 4024 	ldrh.w	r4, [sp, #36]	; 0x24
 80107e8:	9400      	str	r4, [sp, #0]
 80107ea:	6c8c      	ldr	r4, [r1, #72]	; 0x48
 80107ec:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 80107f0:	4629      	mov	r1, r5
 80107f2:	47a0      	blx	r4
 80107f4:	b00b      	add	sp, #44	; 0x2c
 80107f6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80107fa:	f010 0f02 	tst.w	r0, #2
 80107fe:	e7e8      	b.n	80107d2 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x36>
 8010800:	6830      	ldr	r0, [r6, #0]
 8010802:	f9bd 8024 	ldrsh.w	r8, [sp, #36]	; 0x24
 8010806:	6803      	ldr	r3, [r0, #0]
 8010808:	f9bd 9026 	ldrsh.w	r9, [sp, #38]	; 0x26
 801080c:	6a1b      	ldr	r3, [r3, #32]
 801080e:	4798      	blx	r3
 8010810:	4a3f      	ldr	r2, [pc, #252]	; (8010910 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x174>)
 8010812:	f9bd 1020 	ldrsh.w	r1, [sp, #32]
 8010816:	8816      	ldrh	r6, [r2, #0]
 8010818:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 801081c:	2cff      	cmp	r4, #255	; 0xff
 801081e:	fb06 1303 	mla	r3, r6, r3, r1
 8010822:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8010826:	ea4f 0b48 	mov.w	fp, r8, lsl #1
 801082a:	4616      	mov	r6, r2
 801082c:	ea28 71e8 	bic.w	r1, r8, r8, asr #31
 8010830:	d10a      	bne.n	8010848 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0xac>
 8010832:	0049      	lsls	r1, r1, #1
 8010834:	2200      	movs	r2, #0
 8010836:	454a      	cmp	r2, r9
 8010838:	da61      	bge.n	80108fe <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x162>
 801083a:	2300      	movs	r3, #0
 801083c:	4543      	cmp	r3, r8
 801083e:	da57      	bge.n	80108f0 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x154>
 8010840:	f820 5013 	strh.w	r5, [r0, r3, lsl #1]
 8010844:	3301      	adds	r3, #1
 8010846:	e7f9      	b.n	801083c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0xa0>
 8010848:	0a2b      	lsrs	r3, r5, #8
 801084a:	f1c4 07ff 	rsb	r7, r4, #255	; 0xff
 801084e:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8010852:	b2a4      	uxth	r4, r4
 8010854:	4363      	muls	r3, r4
 8010856:	9305      	str	r3, [sp, #20]
 8010858:	08ee      	lsrs	r6, r5, #3
 801085a:	00eb      	lsls	r3, r5, #3
 801085c:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8010860:	b2db      	uxtb	r3, r3
 8010862:	0049      	lsls	r1, r1, #1
 8010864:	4366      	muls	r6, r4
 8010866:	4363      	muls	r3, r4
 8010868:	9106      	str	r1, [sp, #24]
 801086a:	f04f 0c00 	mov.w	ip, #0
 801086e:	b2bf      	uxth	r7, r7
 8010870:	9207      	str	r2, [sp, #28]
 8010872:	45cc      	cmp	ip, r9
 8010874:	da43      	bge.n	80108fe <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x162>
 8010876:	4682      	mov	sl, r0
 8010878:	f04f 0e00 	mov.w	lr, #0
 801087c:	45c6      	cmp	lr, r8
 801087e:	da2d      	bge.n	80108dc <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x140>
 8010880:	f8ba 2000 	ldrh.w	r2, [sl]
 8010884:	9905      	ldr	r1, [sp, #20]
 8010886:	1214      	asrs	r4, r2, #8
 8010888:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 801088c:	fb14 f407 	smulbb	r4, r4, r7
 8010890:	440c      	add	r4, r1
 8010892:	10d1      	asrs	r1, r2, #3
 8010894:	00d2      	lsls	r2, r2, #3
 8010896:	b2d2      	uxtb	r2, r2
 8010898:	fb12 f207 	smulbb	r2, r2, r7
 801089c:	b2a4      	uxth	r4, r4
 801089e:	441a      	add	r2, r3
 80108a0:	b292      	uxth	r2, r2
 80108a2:	1c65      	adds	r5, r4, #1
 80108a4:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 80108a8:	eb05 2414 	add.w	r4, r5, r4, lsr #8
 80108ac:	fb11 f107 	smulbb	r1, r1, r7
 80108b0:	1c55      	adds	r5, r2, #1
 80108b2:	4431      	add	r1, r6
 80108b4:	eb05 2212 	add.w	r2, r5, r2, lsr #8
 80108b8:	b289      	uxth	r1, r1
 80108ba:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 80108be:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 80108c2:	4314      	orrs	r4, r2
 80108c4:	1c4a      	adds	r2, r1, #1
 80108c6:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 80108ca:	0949      	lsrs	r1, r1, #5
 80108cc:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80108d0:	430c      	orrs	r4, r1
 80108d2:	f82a 4b02 	strh.w	r4, [sl], #2
 80108d6:	f10e 0e01 	add.w	lr, lr, #1
 80108da:	e7cf      	b.n	801087c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0xe0>
 80108dc:	9a07      	ldr	r2, [sp, #28]
 80108de:	9906      	ldr	r1, [sp, #24]
 80108e0:	8812      	ldrh	r2, [r2, #0]
 80108e2:	ebcb 0242 	rsb	r2, fp, r2, lsl #1
 80108e6:	440a      	add	r2, r1
 80108e8:	4410      	add	r0, r2
 80108ea:	f10c 0c01 	add.w	ip, ip, #1
 80108ee:	e7c0      	b.n	8010872 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0xd6>
 80108f0:	8833      	ldrh	r3, [r6, #0]
 80108f2:	ebcb 0343 	rsb	r3, fp, r3, lsl #1
 80108f6:	440b      	add	r3, r1
 80108f8:	4418      	add	r0, r3
 80108fa:	3201      	adds	r2, #1
 80108fc:	e79b      	b.n	8010836 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x9a>
 80108fe:	4b03      	ldr	r3, [pc, #12]	; (801090c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x170>)
 8010900:	6818      	ldr	r0, [r3, #0]
 8010902:	6803      	ldr	r3, [r0, #0]
 8010904:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8010906:	4798      	blx	r3
 8010908:	e774      	b.n	80107f4 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x58>
 801090a:	bf00      	nop
 801090c:	20012338 	.word	0x20012338
 8010910:	20012332 	.word	0x20012332

08010914 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t>:
 8010914:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010918:	4d9b      	ldr	r5, [pc, #620]	; (8010b88 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x274>)
 801091a:	4690      	mov	r8, r2
 801091c:	682a      	ldr	r2, [r5, #0]
 801091e:	f892 2048 	ldrb.w	r2, [r2, #72]	; 0x48
 8010922:	2a02      	cmp	r2, #2
 8010924:	b08f      	sub	sp, #60	; 0x3c
 8010926:	4604      	mov	r4, r0
 8010928:	4689      	mov	r9, r1
 801092a:	d106      	bne.n	801093a <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x26>
 801092c:	4b97      	ldr	r3, [pc, #604]	; (8010b8c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x278>)
 801092e:	4a98      	ldr	r2, [pc, #608]	; (8010b90 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x27c>)
 8010930:	f240 21be 	movw	r1, #702	; 0x2be
 8010934:	4897      	ldr	r0, [pc, #604]	; (8010b94 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x280>)
 8010936:	f008 fe21 	bl	801957c <__assert_func>
 801093a:	ae0e      	add	r6, sp, #56	; 0x38
 801093c:	f826 3d24 	strh.w	r3, [r6, #-36]!
 8010940:	4630      	mov	r0, r6
 8010942:	f7fd fad9 	bl	800def8 <_ZNK8touchgfx6Bitmap9getFormatEv>
 8010946:	6823      	ldr	r3, [r4, #0]
 8010948:	4607      	mov	r7, r0
 801094a:	6a1b      	ldr	r3, [r3, #32]
 801094c:	4620      	mov	r0, r4
 801094e:	4798      	blx	r3
 8010950:	4287      	cmp	r7, r0
 8010952:	d004      	beq.n	801095e <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x4a>
 8010954:	4b90      	ldr	r3, [pc, #576]	; (8010b98 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x284>)
 8010956:	4a8e      	ldr	r2, [pc, #568]	; (8010b90 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x27c>)
 8010958:	f44f 7130 	mov.w	r1, #704	; 0x2c0
 801095c:	e7ea      	b.n	8010934 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x20>
 801095e:	4630      	mov	r0, r6
 8010960:	f7fd fa46 	bl	800ddf0 <_ZNK8touchgfx6Bitmap7getDataEv>
 8010964:	4607      	mov	r7, r0
 8010966:	b920      	cbnz	r0, 8010972 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x5e>
 8010968:	4b8c      	ldr	r3, [pc, #560]	; (8010b9c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x288>)
 801096a:	4a89      	ldr	r2, [pc, #548]	; (8010b90 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x27c>)
 801096c:	f240 21c2 	movw	r1, #706	; 0x2c2
 8010970:	e7e0      	b.n	8010934 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x20>
 8010972:	f8d8 0000 	ldr.w	r0, [r8]
 8010976:	f8d8 1004 	ldr.w	r1, [r8, #4]
 801097a:	f9b8 a000 	ldrsh.w	sl, [r8]
 801097e:	ab06      	add	r3, sp, #24
 8010980:	c303      	stmia	r3!, {r0, r1}
 8010982:	f8d9 1004 	ldr.w	r1, [r9, #4]
 8010986:	f8d9 0000 	ldr.w	r0, [r9]
 801098a:	f9b8 9002 	ldrsh.w	r9, [r8, #2]
 801098e:	ab08      	add	r3, sp, #32
 8010990:	c303      	stmia	r3!, {r0, r1}
 8010992:	4630      	mov	r0, r6
 8010994:	f7fd f924 	bl	800dbe0 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8010998:	4680      	mov	r8, r0
 801099a:	4630      	mov	r0, r6
 801099c:	f7fd f95a 	bl	800dc54 <_ZNK8touchgfx6Bitmap9getHeightEv>
 80109a0:	f8ad 902a 	strh.w	r9, [sp, #42]	; 0x2a
 80109a4:	f8ad 002e 	strh.w	r0, [sp, #46]	; 0x2e
 80109a8:	f10d 0920 	add.w	r9, sp, #32
 80109ac:	a806      	add	r0, sp, #24
 80109ae:	f8ad a028 	strh.w	sl, [sp, #40]	; 0x28
 80109b2:	f8ad 802c 	strh.w	r8, [sp, #44]	; 0x2c
 80109b6:	f7fa ffa9 	bl	800b90c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80109ba:	4648      	mov	r0, r9
 80109bc:	f7fa ffa6 	bl	800b90c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80109c0:	a80a      	add	r0, sp, #40	; 0x28
 80109c2:	f7fa ffa3 	bl	800b90c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80109c6:	4e76      	ldr	r6, [pc, #472]	; (8010ba0 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x28c>)
 80109c8:	4b76      	ldr	r3, [pc, #472]	; (8010ba4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x290>)
 80109ca:	f9b6 2000 	ldrsh.w	r2, [r6]
 80109ce:	f9b3 3000 	ldrsh.w	r3, [r3]
 80109d2:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
 80109d6:	2100      	movs	r1, #0
 80109d8:	910c      	str	r1, [sp, #48]	; 0x30
 80109da:	4648      	mov	r0, r9
 80109dc:	a90c      	add	r1, sp, #48	; 0x30
 80109de:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 80109e2:	f7f8 faf7 	bl	8008fd4 <_ZN8touchgfx4RectaNERKS0_>
 80109e6:	4648      	mov	r0, r9
 80109e8:	f7f8 fb37 	bl	800905a <_ZNK8touchgfx4Rect7isEmptyEv>
 80109ec:	2800      	cmp	r0, #0
 80109ee:	f040 80bd 	bne.w	8010b6c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x258>
 80109f2:	f9bd 0020 	ldrsh.w	r0, [sp, #32]
 80109f6:	f9bd 1018 	ldrsh.w	r1, [sp, #24]
 80109fa:	4288      	cmp	r0, r1
 80109fc:	db37      	blt.n	8010a6e <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x15a>
 80109fe:	f9bd 2022 	ldrsh.w	r2, [sp, #34]	; 0x22
 8010a02:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 8010a06:	429a      	cmp	r2, r3
 8010a08:	db31      	blt.n	8010a6e <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x15a>
 8010a0a:	f8bd c024 	ldrh.w	ip, [sp, #36]	; 0x24
 8010a0e:	4460      	add	r0, ip
 8010a10:	f8bd c01c 	ldrh.w	ip, [sp, #28]
 8010a14:	4461      	add	r1, ip
 8010a16:	b200      	sxth	r0, r0
 8010a18:	b209      	sxth	r1, r1
 8010a1a:	4288      	cmp	r0, r1
 8010a1c:	dc27      	bgt.n	8010a6e <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x15a>
 8010a1e:	f8bd 1026 	ldrh.w	r1, [sp, #38]	; 0x26
 8010a22:	440a      	add	r2, r1
 8010a24:	f8bd 101e 	ldrh.w	r1, [sp, #30]
 8010a28:	440b      	add	r3, r1
 8010a2a:	b212      	sxth	r2, r2
 8010a2c:	b21b      	sxth	r3, r3
 8010a2e:	429a      	cmp	r2, r3
 8010a30:	dc1d      	bgt.n	8010a6e <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x15a>
 8010a32:	6823      	ldr	r3, [r4, #0]
 8010a34:	4620      	mov	r0, r4
 8010a36:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8010a38:	4798      	blx	r3
 8010a3a:	4682      	mov	sl, r0
 8010a3c:	6828      	ldr	r0, [r5, #0]
 8010a3e:	6803      	ldr	r3, [r0, #0]
 8010a40:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8010a42:	4798      	blx	r3
 8010a44:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	; 0x28
 8010a48:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 8010a4c:	f9bd b02c 	ldrsh.w	fp, [sp, #44]	; 0x2c
 8010a50:	1a9b      	subs	r3, r3, r2
 8010a52:	b29b      	uxth	r3, r3
 8010a54:	b21c      	sxth	r4, r3
 8010a56:	2c00      	cmp	r4, #0
 8010a58:	dc0e      	bgt.n	8010a78 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x164>
 8010a5a:	bf1f      	itttt	ne
 8010a5c:	f8ad 2020 	strhne.w	r2, [sp, #32]
 8010a60:	f8bd 2024 	ldrhne.w	r2, [sp, #36]	; 0x24
 8010a64:	189b      	addne	r3, r3, r2
 8010a66:	f8ad 3024 	strhne.w	r3, [sp, #36]	; 0x24
 8010a6a:	463c      	mov	r4, r7
 8010a6c:	e00a      	b.n	8010a84 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x170>
 8010a6e:	4b4e      	ldr	r3, [pc, #312]	; (8010ba8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x294>)
 8010a70:	4a47      	ldr	r2, [pc, #284]	; (8010b90 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x27c>)
 8010a72:	f44f 7134 	mov.w	r1, #720	; 0x2d0
 8010a76:	e75d      	b.n	8010934 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x20>
 8010a78:	ebab 0303 	sub.w	r3, fp, r3
 8010a7c:	eb07 0444 	add.w	r4, r7, r4, lsl #1
 8010a80:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8010a84:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	; 0x2a
 8010a88:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
 8010a8c:	1a5b      	subs	r3, r3, r1
 8010a8e:	b29b      	uxth	r3, r3
 8010a90:	b21a      	sxth	r2, r3
 8010a92:	2a00      	cmp	r2, #0
 8010a94:	dd4a      	ble.n	8010b2c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x218>
 8010a96:	fb02 f20b 	mul.w	r2, r2, fp
 8010a9a:	eb04 0442 	add.w	r4, r4, r2, lsl #1
 8010a9e:	f8bd 202e 	ldrh.w	r2, [sp, #46]	; 0x2e
 8010aa2:	1ad3      	subs	r3, r2, r3
 8010aa4:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 8010aa8:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 8010aac:	2b00      	cmp	r3, #0
 8010aae:	dd5d      	ble.n	8010b6c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x258>
 8010ab0:	f9bd c02e 	ldrsh.w	ip, [sp, #46]	; 0x2e
 8010ab4:	f1bc 0f00 	cmp.w	ip, #0
 8010ab8:	dd58      	ble.n	8010b6c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x258>
 8010aba:	f9bd 1022 	ldrsh.w	r1, [sp, #34]	; 0x22
 8010abe:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 8010ac2:	fb0a f801 	mul.w	r8, sl, r1
 8010ac6:	eb08 0842 	add.w	r8, r8, r2, lsl #1
 8010aca:	4480      	add	r8, r0
 8010acc:	8830      	ldrh	r0, [r6, #0]
 8010ace:	f9bd 6024 	ldrsh.w	r6, [sp, #36]	; 0x24
 8010ad2:	42b3      	cmp	r3, r6
 8010ad4:	bfa8      	it	ge
 8010ad6:	4633      	movge	r3, r6
 8010ad8:	1a82      	subs	r2, r0, r2
 8010ada:	4293      	cmp	r3, r2
 8010adc:	bfa8      	it	ge
 8010ade:	4613      	movge	r3, r2
 8010ae0:	4a30      	ldr	r2, [pc, #192]	; (8010ba4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x290>)
 8010ae2:	f9bd 6026 	ldrsh.w	r6, [sp, #38]	; 0x26
 8010ae6:	8812      	ldrh	r2, [r2, #0]
 8010ae8:	4566      	cmp	r6, ip
 8010aea:	eba2 0101 	sub.w	r1, r2, r1
 8010aee:	bfa8      	it	ge
 8010af0:	4666      	movge	r6, ip
 8010af2:	428e      	cmp	r6, r1
 8010af4:	4632      	mov	r2, r6
 8010af6:	bfa8      	it	ge
 8010af8:	460a      	movge	r2, r1
 8010afa:	4298      	cmp	r0, r3
 8010afc:	9202      	str	r2, [sp, #8]
 8010afe:	d01e      	beq.n	8010b3e <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x22a>
 8010b00:	005b      	lsls	r3, r3, #1
 8010b02:	9303      	str	r3, [sp, #12]
 8010b04:	ea4f 0b4b 	mov.w	fp, fp, lsl #1
 8010b08:	f04f 0900 	mov.w	r9, #0
 8010b0c:	9b02      	ldr	r3, [sp, #8]
 8010b0e:	454b      	cmp	r3, r9
 8010b10:	dd2c      	ble.n	8010b6c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x258>
 8010b12:	6828      	ldr	r0, [r5, #0]
 8010b14:	6803      	ldr	r3, [r0, #0]
 8010b16:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8010b18:	4642      	mov	r2, r8
 8010b1a:	461e      	mov	r6, r3
 8010b1c:	4621      	mov	r1, r4
 8010b1e:	9b03      	ldr	r3, [sp, #12]
 8010b20:	47b0      	blx	r6
 8010b22:	44d0      	add	r8, sl
 8010b24:	445c      	add	r4, fp
 8010b26:	f109 0901 	add.w	r9, r9, #1
 8010b2a:	e7ef      	b.n	8010b0c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x1f8>
 8010b2c:	bf1f      	itttt	ne
 8010b2e:	f8bd 2026 	ldrhne.w	r2, [sp, #38]	; 0x26
 8010b32:	f8ad 1022 	strhne.w	r1, [sp, #34]	; 0x22
 8010b36:	189b      	addne	r3, r3, r2
 8010b38:	f8ad 3026 	strhne.w	r3, [sp, #38]	; 0x26
 8010b3c:	e7b4      	b.n	8010aa8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x194>
 8010b3e:	4558      	cmp	r0, fp
 8010b40:	d1de      	bne.n	8010b00 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x1ec>
 8010b42:	6828      	ldr	r0, [r5, #0]
 8010b44:	6803      	ldr	r3, [r0, #0]
 8010b46:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8010b48:	4798      	blx	r3
 8010b4a:	07c3      	lsls	r3, r0, #31
 8010b4c:	d512      	bpl.n	8010b74 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x260>
 8010b4e:	6828      	ldr	r0, [r5, #0]
 8010b50:	9b02      	ldr	r3, [sp, #8]
 8010b52:	f8ad b024 	strh.w	fp, [sp, #36]	; 0x24
 8010b56:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 8010b5a:	6803      	ldr	r3, [r0, #0]
 8010b5c:	f8cd b000 	str.w	fp, [sp]
 8010b60:	6d5d      	ldr	r5, [r3, #84]	; 0x54
 8010b62:	e899 0006 	ldmia.w	r9, {r1, r2}
 8010b66:	4623      	mov	r3, r4
 8010b68:	47a8      	blx	r5
 8010b6a:	4607      	mov	r7, r0
 8010b6c:	4638      	mov	r0, r7
 8010b6e:	b00f      	add	sp, #60	; 0x3c
 8010b70:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010b74:	6828      	ldr	r0, [r5, #0]
 8010b76:	6803      	ldr	r3, [r0, #0]
 8010b78:	6add      	ldr	r5, [r3, #44]	; 0x2c
 8010b7a:	9b02      	ldr	r3, [sp, #8]
 8010b7c:	4642      	mov	r2, r8
 8010b7e:	fb03 f30a 	mul.w	r3, r3, sl
 8010b82:	4621      	mov	r1, r4
 8010b84:	47a8      	blx	r5
 8010b86:	e7f1      	b.n	8010b6c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x258>
 8010b88:	20012338 	.word	0x20012338
 8010b8c:	0801d0e7 	.word	0x0801d0e7
 8010b90:	0801d923 	.word	0x0801d923
 8010b94:	0801d199 	.word	0x0801d199
 8010b98:	0801d1cb 	.word	0x0801d1cb
 8010b9c:	0801d220 	.word	0x0801d220
 8010ba0:	20012332 	.word	0x20012332
 8010ba4:	20012334 	.word	0x20012334
 8010ba8:	0801d25e 	.word	0x0801d25e

08010bac <_ZN8touchgfx8LCD16bppC1Ev>:
 8010bac:	2200      	movs	r2, #0
 8010bae:	4910      	ldr	r1, [pc, #64]	; (8010bf0 <_ZN8touchgfx8LCD16bppC1Ev+0x44>)
 8010bb0:	6042      	str	r2, [r0, #4]
 8010bb2:	6001      	str	r1, [r0, #0]
 8010bb4:	e9c0 2202 	strd	r2, r2, [r0, #8]
 8010bb8:	e9c0 2204 	strd	r2, r2, [r0, #16]
 8010bbc:	e9c0 2206 	strd	r2, r2, [r0, #24]
 8010bc0:	e9c0 2208 	strd	r2, r2, [r0, #32]
 8010bc4:	e9c0 220a 	strd	r2, r2, [r0, #40]	; 0x28
 8010bc8:	e9c0 220c 	strd	r2, r2, [r0, #48]	; 0x30
 8010bcc:	e9c0 220e 	strd	r2, r2, [r0, #56]	; 0x38
 8010bd0:	e9c0 2210 	strd	r2, r2, [r0, #64]	; 0x40
 8010bd4:	e9c0 2212 	strd	r2, r2, [r0, #72]	; 0x48
 8010bd8:	e9c0 2214 	strd	r2, r2, [r0, #80]	; 0x50
 8010bdc:	e9c0 2216 	strd	r2, r2, [r0, #88]	; 0x58
 8010be0:	e9c0 2218 	strd	r2, r2, [r0, #96]	; 0x60
 8010be4:	e9c0 221a 	strd	r2, r2, [r0, #104]	; 0x68
 8010be8:	e9c0 221c 	strd	r2, r2, [r0, #112]	; 0x70
 8010bec:	4770      	bx	lr
 8010bee:	bf00      	nop
 8010bf0:	0801d5a0 	.word	0x0801d5a0

08010bf4 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>:
 8010bf4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010bf8:	460c      	mov	r4, r1
 8010bfa:	b08d      	sub	sp, #52	; 0x34
 8010bfc:	4682      	mov	sl, r0
 8010bfe:	6808      	ldr	r0, [r1, #0]
 8010c00:	6849      	ldr	r1, [r1, #4]
 8010c02:	469b      	mov	fp, r3
 8010c04:	ab08      	add	r3, sp, #32
 8010c06:	c303      	stmia	r3!, {r0, r1}
 8010c08:	6810      	ldr	r0, [r2, #0]
 8010c0a:	6851      	ldr	r1, [r2, #4]
 8010c0c:	ab0a      	add	r3, sp, #40	; 0x28
 8010c0e:	c303      	stmia	r3!, {r0, r1}
 8010c10:	a808      	add	r0, sp, #32
 8010c12:	f7fa fe7b 	bl	800b90c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8010c16:	4621      	mov	r1, r4
 8010c18:	a80a      	add	r0, sp, #40	; 0x28
 8010c1a:	f7fa fe5f 	bl	800b8dc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8010c1e:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	; 0x28
 8010c22:	f9bd 302a 	ldrsh.w	r3, [sp, #42]	; 0x2a
 8010c26:	f8bd 1024 	ldrh.w	r1, [sp, #36]	; 0x24
 8010c2a:	4c60      	ldr	r4, [pc, #384]	; (8010dac <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1b8>)
 8010c2c:	f9bd 802c 	ldrsh.w	r8, [sp, #44]	; 0x2c
 8010c30:	6820      	ldr	r0, [r4, #0]
 8010c32:	f9bd 902e 	ldrsh.w	r9, [sp, #46]	; 0x2e
 8010c36:	fb11 2103 	smlabb	r1, r1, r3, r2
 8010c3a:	eb0a 0a81 	add.w	sl, sl, r1, lsl #2
 8010c3e:	f8bd 1020 	ldrh.w	r1, [sp, #32]
 8010c42:	440a      	add	r2, r1
 8010c44:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 8010c48:	f8bd 2022 	ldrh.w	r2, [sp, #34]	; 0x22
 8010c4c:	4413      	add	r3, r2
 8010c4e:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 8010c52:	6803      	ldr	r3, [r0, #0]
 8010c54:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8010c56:	4798      	blx	r3
 8010c58:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 8010c5c:	d119      	bne.n	8010c92 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x9e>
 8010c5e:	f010 0f20 	tst.w	r0, #32
 8010c62:	6820      	ldr	r0, [r4, #0]
 8010c64:	d018      	beq.n	8010c98 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xa4>
 8010c66:	f8bd 4024 	ldrh.w	r4, [sp, #36]	; 0x24
 8010c6a:	6801      	ldr	r1, [r0, #0]
 8010c6c:	9402      	str	r4, [sp, #8]
 8010c6e:	fa1f f489 	uxth.w	r4, r9
 8010c72:	9401      	str	r4, [sp, #4]
 8010c74:	fa1f f488 	uxth.w	r4, r8
 8010c78:	f8cd b00c 	str.w	fp, [sp, #12]
 8010c7c:	9400      	str	r4, [sp, #0]
 8010c7e:	6bcc      	ldr	r4, [r1, #60]	; 0x3c
 8010c80:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 8010c84:	f8bd 2028 	ldrh.w	r2, [sp, #40]	; 0x28
 8010c88:	4651      	mov	r1, sl
 8010c8a:	47a0      	blx	r4
 8010c8c:	b00d      	add	sp, #52	; 0x34
 8010c8e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010c92:	f010 0f40 	tst.w	r0, #64	; 0x40
 8010c96:	e7e4      	b.n	8010c62 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x6e>
 8010c98:	6803      	ldr	r3, [r0, #0]
 8010c9a:	6a1b      	ldr	r3, [r3, #32]
 8010c9c:	4798      	blx	r3
 8010c9e:	4a44      	ldr	r2, [pc, #272]	; (8010db0 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1bc>)
 8010ca0:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	; 0x28
 8010ca4:	8813      	ldrh	r3, [r2, #0]
 8010ca6:	f9bd 402a 	ldrsh.w	r4, [sp, #42]	; 0x2a
 8010caa:	9207      	str	r2, [sp, #28]
 8010cac:	fb04 1303 	mla	r3, r4, r3, r1
 8010cb0:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8010cb4:	ea28 73e8 	bic.w	r3, r8, r8, asr #31
 8010cb8:	0099      	lsls	r1, r3, #2
 8010cba:	005b      	lsls	r3, r3, #1
 8010cbc:	9106      	str	r1, [sp, #24]
 8010cbe:	9305      	str	r3, [sp, #20]
 8010cc0:	f04f 0c00 	mov.w	ip, #0
 8010cc4:	45cc      	cmp	ip, r9
 8010cc6:	da6b      	bge.n	8010da0 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1ac>
 8010cc8:	2300      	movs	r3, #0
 8010cca:	4543      	cmp	r3, r8
 8010ccc:	da55      	bge.n	8010d7a <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x186>
 8010cce:	f85a 4023 	ldr.w	r4, [sl, r3, lsl #2]
 8010cd2:	0e25      	lsrs	r5, r4, #24
 8010cd4:	d013      	beq.n	8010cfe <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x10a>
 8010cd6:	2dff      	cmp	r5, #255	; 0xff
 8010cd8:	ea4f 2714 	mov.w	r7, r4, lsr #8
 8010cdc:	d111      	bne.n	8010d02 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x10e>
 8010cde:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 8010ce2:	d10e      	bne.n	8010d02 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x10e>
 8010ce4:	0962      	lsrs	r2, r4, #5
 8010ce6:	f427 67ff 	bic.w	r7, r7, #2040	; 0x7f8
 8010cea:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8010cee:	f027 0707 	bic.w	r7, r7, #7
 8010cf2:	4317      	orrs	r7, r2
 8010cf4:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 8010cf8:	433c      	orrs	r4, r7
 8010cfa:	f820 4013 	strh.w	r4, [r0, r3, lsl #1]
 8010cfe:	3301      	adds	r3, #1
 8010d00:	e7e3      	b.n	8010cca <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xd6>
 8010d02:	fb0b f505 	mul.w	r5, fp, r5
 8010d06:	1c6a      	adds	r2, r5, #1
 8010d08:	f830 1013 	ldrh.w	r1, [r0, r3, lsl #1]
 8010d0c:	eb02 2225 	add.w	r2, r2, r5, asr #8
 8010d10:	1212      	asrs	r2, r2, #8
 8010d12:	fa1f fe82 	uxth.w	lr, r2
 8010d16:	120e      	asrs	r6, r1, #8
 8010d18:	f3c4 4507 	ubfx	r5, r4, #16, #8
 8010d1c:	43d2      	mvns	r2, r2
 8010d1e:	b2d2      	uxtb	r2, r2
 8010d20:	fb15 f50e 	smulbb	r5, r5, lr
 8010d24:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8010d28:	fb06 5602 	mla	r6, r6, r2, r5
 8010d2c:	b2e4      	uxtb	r4, r4
 8010d2e:	10cd      	asrs	r5, r1, #3
 8010d30:	00c9      	lsls	r1, r1, #3
 8010d32:	b2c9      	uxtb	r1, r1
 8010d34:	fb14 f40e 	smulbb	r4, r4, lr
 8010d38:	fb01 4402 	mla	r4, r1, r2, r4
 8010d3c:	b2ff      	uxtb	r7, r7
 8010d3e:	b2b6      	uxth	r6, r6
 8010d40:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8010d44:	b2a4      	uxth	r4, r4
 8010d46:	fb17 f70e 	smulbb	r7, r7, lr
 8010d4a:	fb05 7702 	mla	r7, r5, r2, r7
 8010d4e:	1c72      	adds	r2, r6, #1
 8010d50:	1c65      	adds	r5, r4, #1
 8010d52:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 8010d56:	eb05 2514 	add.w	r5, r5, r4, lsr #8
 8010d5a:	b2bf      	uxth	r7, r7
 8010d5c:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8010d60:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 8010d64:	432e      	orrs	r6, r5
 8010d66:	1c7d      	adds	r5, r7, #1
 8010d68:	eb05 2717 	add.w	r7, r5, r7, lsr #8
 8010d6c:	097f      	lsrs	r7, r7, #5
 8010d6e:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8010d72:	433e      	orrs	r6, r7
 8010d74:	f820 6013 	strh.w	r6, [r0, r3, lsl #1]
 8010d78:	e7c1      	b.n	8010cfe <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x10a>
 8010d7a:	9b07      	ldr	r3, [sp, #28]
 8010d7c:	9a05      	ldr	r2, [sp, #20]
 8010d7e:	881b      	ldrh	r3, [r3, #0]
 8010d80:	eba3 0308 	sub.w	r3, r3, r8
 8010d84:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8010d88:	4418      	add	r0, r3
 8010d8a:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	; 0x24
 8010d8e:	9a06      	ldr	r2, [sp, #24]
 8010d90:	eba3 0308 	sub.w	r3, r3, r8
 8010d94:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 8010d98:	449a      	add	sl, r3
 8010d9a:	f10c 0c01 	add.w	ip, ip, #1
 8010d9e:	e791      	b.n	8010cc4 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xd0>
 8010da0:	4b02      	ldr	r3, [pc, #8]	; (8010dac <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1b8>)
 8010da2:	6818      	ldr	r0, [r3, #0]
 8010da4:	6803      	ldr	r3, [r0, #0]
 8010da6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8010da8:	4798      	blx	r3
 8010daa:	e76f      	b.n	8010c8c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x98>
 8010dac:	20012338 	.word	0x20012338
 8010db0:	20012332 	.word	0x20012332

08010db4 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb>:
 8010db4:	b570      	push	{r4, r5, r6, lr}
 8010db6:	9d04      	ldr	r5, [sp, #16]
 8010db8:	f89d 6018 	ldrb.w	r6, [sp, #24]
 8010dbc:	460c      	mov	r4, r1
 8010dbe:	4619      	mov	r1, r3
 8010dc0:	f89d 3014 	ldrb.w	r3, [sp, #20]
 8010dc4:	2a0c      	cmp	r2, #12
 8010dc6:	d820      	bhi.n	8010e0a <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x56>
 8010dc8:	e8df f002 	tbb	[pc, r2]
 8010dcc:	18121807 	.word	0x18121807
 8010dd0:	18181818 	.word	0x18181818
 8010dd4:	18181818 	.word	0x18181818
 8010dd8:	18          	.byte	0x18
 8010dd9:	00          	.byte	0x00
 8010dda:	6802      	ldr	r2, [r0, #0]
 8010ddc:	e9cd 3604 	strd	r3, r6, [sp, #16]
 8010de0:	68d6      	ldr	r6, [r2, #12]
 8010de2:	462b      	mov	r3, r5
 8010de4:	460a      	mov	r2, r1
 8010de6:	46b4      	mov	ip, r6
 8010de8:	4621      	mov	r1, r4
 8010dea:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8010dee:	4760      	bx	ip
 8010df0:	462a      	mov	r2, r5
 8010df2:	4620      	mov	r0, r4
 8010df4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8010df8:	f7ff befc 	b.w	8010bf4 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 8010dfc:	4b03      	ldr	r3, [pc, #12]	; (8010e0c <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x58>)
 8010dfe:	4a04      	ldr	r2, [pc, #16]	; (8010e10 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x5c>)
 8010e00:	4804      	ldr	r0, [pc, #16]	; (8010e14 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x60>)
 8010e02:	f240 21b7 	movw	r1, #695	; 0x2b7
 8010e06:	f008 fbb9 	bl	801957c <__assert_func>
 8010e0a:	bd70      	pop	{r4, r5, r6, pc}
 8010e0c:	0801d2be 	.word	0x0801d2be
 8010e10:	0801d9a9 	.word	0x0801d9a9
 8010e14:	0801d199 	.word	0x0801d199

08010e18 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>:
 8010e18:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010e1c:	b093      	sub	sp, #76	; 0x4c
 8010e1e:	880f      	ldrh	r7, [r1, #0]
 8010e20:	f89d a070 	ldrb.w	sl, [sp, #112]	; 0x70
 8010e24:	4681      	mov	r9, r0
 8010e26:	4688      	mov	r8, r1
 8010e28:	4615      	mov	r5, r2
 8010e2a:	b12f      	cbz	r7, 8010e38 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x20>
 8010e2c:	4b71      	ldr	r3, [pc, #452]	; (8010ff4 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1dc>)
 8010e2e:	4a72      	ldr	r2, [pc, #456]	; (8010ff8 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1e0>)
 8010e30:	4872      	ldr	r0, [pc, #456]	; (8010ffc <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1e4>)
 8010e32:	21e8      	movs	r1, #232	; 0xe8
 8010e34:	f008 fba2 	bl	801957c <__assert_func>
 8010e38:	6810      	ldr	r0, [r2, #0]
 8010e3a:	6851      	ldr	r1, [r2, #4]
 8010e3c:	ac0e      	add	r4, sp, #56	; 0x38
 8010e3e:	c403      	stmia	r4!, {r0, r1}
 8010e40:	6818      	ldr	r0, [r3, #0]
 8010e42:	6859      	ldr	r1, [r3, #4]
 8010e44:	ac10      	add	r4, sp, #64	; 0x40
 8010e46:	c403      	stmia	r4!, {r0, r1}
 8010e48:	a80e      	add	r0, sp, #56	; 0x38
 8010e4a:	f7fa fd5f 	bl	800b90c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8010e4e:	4629      	mov	r1, r5
 8010e50:	a810      	add	r0, sp, #64	; 0x40
 8010e52:	f7fa fd43 	bl	800b8dc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8010e56:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	; 0x40
 8010e5a:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	; 0x42
 8010e5e:	f8bd 103c 	ldrh.w	r1, [sp, #60]	; 0x3c
 8010e62:	4d67      	ldr	r5, [pc, #412]	; (8011000 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1e8>)
 8010e64:	f9bd b044 	ldrsh.w	fp, [sp, #68]	; 0x44
 8010e68:	6828      	ldr	r0, [r5, #0]
 8010e6a:	4c66      	ldr	r4, [pc, #408]	; (8011004 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1ec>)
 8010e6c:	fb11 2103 	smlabb	r1, r1, r3, r2
 8010e70:	4489      	add	r9, r1
 8010e72:	f8bd 1038 	ldrh.w	r1, [sp, #56]	; 0x38
 8010e76:	440a      	add	r2, r1
 8010e78:	f8ad 2040 	strh.w	r2, [sp, #64]	; 0x40
 8010e7c:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 8010e80:	4413      	add	r3, r2
 8010e82:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 8010e86:	f9bd 3046 	ldrsh.w	r3, [sp, #70]	; 0x46
 8010e8a:	930a      	str	r3, [sp, #40]	; 0x28
 8010e8c:	6803      	ldr	r3, [r0, #0]
 8010e8e:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8010e92:	4798      	blx	r3
 8010e94:	2801      	cmp	r0, #1
 8010e96:	d11d      	bne.n	8010ed4 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xbc>
 8010e98:	220b      	movs	r2, #11
 8010e9a:	9708      	str	r7, [sp, #32]
 8010e9c:	9207      	str	r2, [sp, #28]
 8010e9e:	8822      	ldrh	r2, [r4, #0]
 8010ea0:	f8cd a010 	str.w	sl, [sp, #16]
 8010ea4:	e9cd 0205 	strd	r0, r2, [sp, #20]
 8010ea8:	f8bd 203c 	ldrh.w	r2, [sp, #60]	; 0x3c
 8010eac:	9203      	str	r2, [sp, #12]
 8010eae:	f8bd 2028 	ldrh.w	r2, [sp, #40]	; 0x28
 8010eb2:	9202      	str	r2, [sp, #8]
 8010eb4:	fa1f f28b 	uxth.w	r2, fp
 8010eb8:	9201      	str	r2, [sp, #4]
 8010eba:	f8bd 2042 	ldrh.w	r2, [sp, #66]	; 0x42
 8010ebe:	9200      	str	r2, [sp, #0]
 8010ec0:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 8010ec4:	6828      	ldr	r0, [r5, #0]
 8010ec6:	4642      	mov	r2, r8
 8010ec8:	4649      	mov	r1, r9
 8010eca:	f7f8 ffd7 	bl	8009e7c <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_>
 8010ece:	b013      	add	sp, #76	; 0x4c
 8010ed0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010ed4:	6828      	ldr	r0, [r5, #0]
 8010ed6:	6803      	ldr	r3, [r0, #0]
 8010ed8:	6a1b      	ldr	r3, [r3, #32]
 8010eda:	4798      	blx	r3
 8010edc:	8823      	ldrh	r3, [r4, #0]
 8010ede:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	; 0x42
 8010ee2:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	; 0x40
 8010ee6:	fb01 2303 	mla	r3, r1, r3, r2
 8010eea:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8010eee:	ea2b 73eb 	bic.w	r3, fp, fp, asr #31
 8010ef2:	930b      	str	r3, [sp, #44]	; 0x2c
 8010ef4:	005b      	lsls	r3, r3, #1
 8010ef6:	e9cd 340c 	strd	r3, r4, [sp, #48]	; 0x30
 8010efa:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8010efc:	429f      	cmp	r7, r3
 8010efe:	da72      	bge.n	8010fe6 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1ce>
 8010f00:	2100      	movs	r1, #0
 8010f02:	4559      	cmp	r1, fp
 8010f04:	da5e      	bge.n	8010fc4 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1ac>
 8010f06:	f819 3001 	ldrb.w	r3, [r9, r1]
 8010f0a:	2204      	movs	r2, #4
 8010f0c:	fb12 2303 	smlabb	r3, r2, r3, r2
 8010f10:	f858 2003 	ldr.w	r2, [r8, r3]
 8010f14:	0e15      	lsrs	r5, r2, #24
 8010f16:	d013      	beq.n	8010f40 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 8010f18:	2dff      	cmp	r5, #255	; 0xff
 8010f1a:	ea4f 2412 	mov.w	r4, r2, lsr #8
 8010f1e:	d111      	bne.n	8010f44 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 8010f20:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 8010f24:	d10e      	bne.n	8010f44 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 8010f26:	0953      	lsrs	r3, r2, #5
 8010f28:	f424 64ff 	bic.w	r4, r4, #2040	; 0x7f8
 8010f2c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8010f30:	f024 0407 	bic.w	r4, r4, #7
 8010f34:	431c      	orrs	r4, r3
 8010f36:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8010f3a:	4314      	orrs	r4, r2
 8010f3c:	f820 4011 	strh.w	r4, [r0, r1, lsl #1]
 8010f40:	3101      	adds	r1, #1
 8010f42:	e7de      	b.n	8010f02 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xea>
 8010f44:	fb0a f505 	mul.w	r5, sl, r5
 8010f48:	1c6b      	adds	r3, r5, #1
 8010f4a:	f830 c011 	ldrh.w	ip, [r0, r1, lsl #1]
 8010f4e:	eb03 2325 	add.w	r3, r3, r5, asr #8
 8010f52:	121b      	asrs	r3, r3, #8
 8010f54:	fa1f fe83 	uxth.w	lr, r3
 8010f58:	ea4f 262c 	mov.w	r6, ip, asr #8
 8010f5c:	f3c2 4507 	ubfx	r5, r2, #16, #8
 8010f60:	43db      	mvns	r3, r3
 8010f62:	b2db      	uxtb	r3, r3
 8010f64:	fb15 f50e 	smulbb	r5, r5, lr
 8010f68:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8010f6c:	fb06 5603 	mla	r6, r6, r3, r5
 8010f70:	b2d2      	uxtb	r2, r2
 8010f72:	ea4f 05ec 	mov.w	r5, ip, asr #3
 8010f76:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8010f7a:	fa5f fc8c 	uxtb.w	ip, ip
 8010f7e:	fb12 f20e 	smulbb	r2, r2, lr
 8010f82:	fb0c 2203 	mla	r2, ip, r3, r2
 8010f86:	b2e4      	uxtb	r4, r4
 8010f88:	b2b6      	uxth	r6, r6
 8010f8a:	fb14 f40e 	smulbb	r4, r4, lr
 8010f8e:	b292      	uxth	r2, r2
 8010f90:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8010f94:	fb05 4503 	mla	r5, r5, r3, r4
 8010f98:	1c73      	adds	r3, r6, #1
 8010f9a:	1c54      	adds	r4, r2, #1
 8010f9c:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 8010fa0:	eb04 2412 	add.w	r4, r4, r2, lsr #8
 8010fa4:	b2ad      	uxth	r5, r5
 8010fa6:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 8010faa:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 8010fae:	4326      	orrs	r6, r4
 8010fb0:	1c6c      	adds	r4, r5, #1
 8010fb2:	eb04 2415 	add.w	r4, r4, r5, lsr #8
 8010fb6:	0964      	lsrs	r4, r4, #5
 8010fb8:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 8010fbc:	4326      	orrs	r6, r4
 8010fbe:	f820 6011 	strh.w	r6, [r0, r1, lsl #1]
 8010fc2:	e7bd      	b.n	8010f40 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 8010fc4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8010fc6:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8010fc8:	881b      	ldrh	r3, [r3, #0]
 8010fca:	eba3 030b 	sub.w	r3, r3, fp
 8010fce:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8010fd2:	4418      	add	r0, r3
 8010fd4:	f9bd 303c 	ldrsh.w	r3, [sp, #60]	; 0x3c
 8010fd8:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8010fda:	eba3 030b 	sub.w	r3, r3, fp
 8010fde:	4413      	add	r3, r2
 8010fe0:	4499      	add	r9, r3
 8010fe2:	3701      	adds	r7, #1
 8010fe4:	e789      	b.n	8010efa <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xe2>
 8010fe6:	4b06      	ldr	r3, [pc, #24]	; (8011000 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1e8>)
 8010fe8:	6818      	ldr	r0, [r3, #0]
 8010fea:	6803      	ldr	r3, [r0, #0]
 8010fec:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8010fee:	4798      	blx	r3
 8010ff0:	e76d      	b.n	8010ece <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xb6>
 8010ff2:	bf00      	nop
 8010ff4:	0801d097 	.word	0x0801d097
 8010ff8:	0801d77a 	.word	0x0801d77a
 8010ffc:	0801d199 	.word	0x0801d199
 8011000:	20012338 	.word	0x20012338
 8011004:	20012332 	.word	0x20012332

08011008 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>:
 8011008:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801100c:	4614      	mov	r4, r2
 801100e:	880a      	ldrh	r2, [r1, #0]
 8011010:	b093      	sub	sp, #76	; 0x4c
 8011012:	2a02      	cmp	r2, #2
 8011014:	4606      	mov	r6, r0
 8011016:	4689      	mov	r9, r1
 8011018:	f89d 7070 	ldrb.w	r7, [sp, #112]	; 0x70
 801101c:	d006      	beq.n	801102c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x24>
 801101e:	4b7a      	ldr	r3, [pc, #488]	; (8011208 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x200>)
 8011020:	4a7a      	ldr	r2, [pc, #488]	; (801120c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x204>)
 8011022:	487b      	ldr	r0, [pc, #492]	; (8011210 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x208>)
 8011024:	f44f 71a1 	mov.w	r1, #322	; 0x142
 8011028:	f008 faa8 	bl	801957c <__assert_func>
 801102c:	2f00      	cmp	r7, #0
 801102e:	d04b      	beq.n	80110c8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xc0>
 8011030:	6820      	ldr	r0, [r4, #0]
 8011032:	6861      	ldr	r1, [r4, #4]
 8011034:	f8df a1e0 	ldr.w	sl, [pc, #480]	; 8011218 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x210>
 8011038:	ad0e      	add	r5, sp, #56	; 0x38
 801103a:	c503      	stmia	r5!, {r0, r1}
 801103c:	6818      	ldr	r0, [r3, #0]
 801103e:	6859      	ldr	r1, [r3, #4]
 8011040:	ad10      	add	r5, sp, #64	; 0x40
 8011042:	c503      	stmia	r5!, {r0, r1}
 8011044:	a80e      	add	r0, sp, #56	; 0x38
 8011046:	f7fa fc61 	bl	800b90c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801104a:	4621      	mov	r1, r4
 801104c:	a810      	add	r0, sp, #64	; 0x40
 801104e:	f7fa fc45 	bl	800b8dc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8011052:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	; 0x40
 8011056:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	; 0x42
 801105a:	f8bd 103c 	ldrh.w	r1, [sp, #60]	; 0x3c
 801105e:	f8da 0000 	ldr.w	r0, [sl]
 8011062:	f9bd 5044 	ldrsh.w	r5, [sp, #68]	; 0x44
 8011066:	f9bd 8046 	ldrsh.w	r8, [sp, #70]	; 0x46
 801106a:	fb11 2103 	smlabb	r1, r1, r3, r2
 801106e:	1874      	adds	r4, r6, r1
 8011070:	f8bd 1038 	ldrh.w	r1, [sp, #56]	; 0x38
 8011074:	4e67      	ldr	r6, [pc, #412]	; (8011214 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x20c>)
 8011076:	440a      	add	r2, r1
 8011078:	f8ad 2040 	strh.w	r2, [sp, #64]	; 0x40
 801107c:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 8011080:	4413      	add	r3, r2
 8011082:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 8011086:	6803      	ldr	r3, [r0, #0]
 8011088:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 801108c:	4798      	blx	r3
 801108e:	2801      	cmp	r0, #1
 8011090:	d11d      	bne.n	80110ce <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xc6>
 8011092:	2200      	movs	r2, #0
 8011094:	210b      	movs	r1, #11
 8011096:	e9cd 1207 	strd	r1, r2, [sp, #28]
 801109a:	8831      	ldrh	r1, [r6, #0]
 801109c:	9704      	str	r7, [sp, #16]
 801109e:	e9cd 2105 	strd	r2, r1, [sp, #20]
 80110a2:	f8bd 203c 	ldrh.w	r2, [sp, #60]	; 0x3c
 80110a6:	9203      	str	r2, [sp, #12]
 80110a8:	fa1f f288 	uxth.w	r2, r8
 80110ac:	9202      	str	r2, [sp, #8]
 80110ae:	b2ad      	uxth	r5, r5
 80110b0:	f8bd 2042 	ldrh.w	r2, [sp, #66]	; 0x42
 80110b4:	9200      	str	r2, [sp, #0]
 80110b6:	9501      	str	r5, [sp, #4]
 80110b8:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 80110bc:	f8da 0000 	ldr.w	r0, [sl]
 80110c0:	464a      	mov	r2, r9
 80110c2:	4621      	mov	r1, r4
 80110c4:	f7f8 feda 	bl	8009e7c <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_>
 80110c8:	b013      	add	sp, #76	; 0x4c
 80110ca:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80110ce:	f8da 0000 	ldr.w	r0, [sl]
 80110d2:	6803      	ldr	r3, [r0, #0]
 80110d4:	6a1b      	ldr	r3, [r3, #32]
 80110d6:	4798      	blx	r3
 80110d8:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	; 0x40
 80110dc:	8833      	ldrh	r3, [r6, #0]
 80110de:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	; 0x42
 80110e2:	fb01 2303 	mla	r3, r1, r3, r2
 80110e6:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80110ea:	2fff      	cmp	r7, #255	; 0xff
 80110ec:	f109 0304 	add.w	r3, r9, #4
 80110f0:	930a      	str	r3, [sp, #40]	; 0x28
 80110f2:	ea25 72e5 	bic.w	r2, r5, r5, asr #31
 80110f6:	d111      	bne.n	801111c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x114>
 80110f8:	b212      	sxth	r2, r2
 80110fa:	ea4f 0e42 	mov.w	lr, r2, lsl #1
 80110fe:	2100      	movs	r1, #0
 8011100:	4541      	cmp	r1, r8
 8011102:	da7a      	bge.n	80111fa <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x1f2>
 8011104:	2300      	movs	r3, #0
 8011106:	42ab      	cmp	r3, r5
 8011108:	da6b      	bge.n	80111e2 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x1da>
 801110a:	f814 c003 	ldrb.w	ip, [r4, r3]
 801110e:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8011110:	f837 c01c 	ldrh.w	ip, [r7, ip, lsl #1]
 8011114:	f820 c013 	strh.w	ip, [r0, r3, lsl #1]
 8011118:	3301      	adds	r3, #1
 801111a:	e7f4      	b.n	8011106 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xfe>
 801111c:	b213      	sxth	r3, r2
 801111e:	f1c7 0cff 	rsb	ip, r7, #255	; 0xff
 8011122:	930b      	str	r3, [sp, #44]	; 0x2c
 8011124:	005b      	lsls	r3, r3, #1
 8011126:	930c      	str	r3, [sp, #48]	; 0x30
 8011128:	f04f 0900 	mov.w	r9, #0
 801112c:	b2ba      	uxth	r2, r7
 801112e:	fa1f fc8c 	uxth.w	ip, ip
 8011132:	960d      	str	r6, [sp, #52]	; 0x34
 8011134:	45c1      	cmp	r9, r8
 8011136:	da60      	bge.n	80111fa <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x1f2>
 8011138:	46a3      	mov	fp, r4
 801113a:	4682      	mov	sl, r0
 801113c:	ebab 0304 	sub.w	r3, fp, r4
 8011140:	429d      	cmp	r5, r3
 8011142:	dd3e      	ble.n	80111c2 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x1ba>
 8011144:	f81b 3b01 	ldrb.w	r3, [fp], #1
 8011148:	9e0a      	ldr	r6, [sp, #40]	; 0x28
 801114a:	f8ba 1000 	ldrh.w	r1, [sl]
 801114e:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8011152:	120e      	asrs	r6, r1, #8
 8011154:	121f      	asrs	r7, r3, #8
 8011156:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801115a:	fb16 f60c 	smulbb	r6, r6, ip
 801115e:	ea4f 0ee1 	mov.w	lr, r1, asr #3
 8011162:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8011166:	00c9      	lsls	r1, r1, #3
 8011168:	fb07 6702 	mla	r7, r7, r2, r6
 801116c:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 8011170:	10de      	asrs	r6, r3, #3
 8011172:	b2c9      	uxtb	r1, r1
 8011174:	00db      	lsls	r3, r3, #3
 8011176:	fb1e fe0c 	smulbb	lr, lr, ip
 801117a:	fb11 f10c 	smulbb	r1, r1, ip
 801117e:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8011182:	b2db      	uxtb	r3, r3
 8011184:	b2bf      	uxth	r7, r7
 8011186:	fb06 e602 	mla	r6, r6, r2, lr
 801118a:	fb03 1302 	mla	r3, r3, r2, r1
 801118e:	b2b6      	uxth	r6, r6
 8011190:	b29b      	uxth	r3, r3
 8011192:	1c79      	adds	r1, r7, #1
 8011194:	eb01 2717 	add.w	r7, r1, r7, lsr #8
 8011198:	f106 0e01 	add.w	lr, r6, #1
 801119c:	1c59      	adds	r1, r3, #1
 801119e:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 80111a2:	eb0e 2e16 	add.w	lr, lr, r6, lsr #8
 80111a6:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 80111aa:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 80111ae:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 80111b2:	430f      	orrs	r7, r1
 80111b4:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 80111b8:	ea47 070e 	orr.w	r7, r7, lr
 80111bc:	f82a 7b02 	strh.w	r7, [sl], #2
 80111c0:	e7bc      	b.n	801113c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x134>
 80111c2:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80111c4:	990c      	ldr	r1, [sp, #48]	; 0x30
 80111c6:	881b      	ldrh	r3, [r3, #0]
 80111c8:	1b5b      	subs	r3, r3, r5
 80111ca:	eb01 0343 	add.w	r3, r1, r3, lsl #1
 80111ce:	4418      	add	r0, r3
 80111d0:	f9bd 303c 	ldrsh.w	r3, [sp, #60]	; 0x3c
 80111d4:	990b      	ldr	r1, [sp, #44]	; 0x2c
 80111d6:	1b5b      	subs	r3, r3, r5
 80111d8:	440b      	add	r3, r1
 80111da:	441c      	add	r4, r3
 80111dc:	f109 0901 	add.w	r9, r9, #1
 80111e0:	e7a8      	b.n	8011134 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x12c>
 80111e2:	8833      	ldrh	r3, [r6, #0]
 80111e4:	1b5b      	subs	r3, r3, r5
 80111e6:	eb0e 0343 	add.w	r3, lr, r3, lsl #1
 80111ea:	4418      	add	r0, r3
 80111ec:	f9bd 303c 	ldrsh.w	r3, [sp, #60]	; 0x3c
 80111f0:	1b5b      	subs	r3, r3, r5
 80111f2:	4413      	add	r3, r2
 80111f4:	441c      	add	r4, r3
 80111f6:	3101      	adds	r1, #1
 80111f8:	e782      	b.n	8011100 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xf8>
 80111fa:	4b07      	ldr	r3, [pc, #28]	; (8011218 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x210>)
 80111fc:	6818      	ldr	r0, [r3, #0]
 80111fe:	6803      	ldr	r3, [r0, #0]
 8011200:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8011202:	4798      	blx	r3
 8011204:	e760      	b.n	80110c8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xc0>
 8011206:	bf00      	nop
 8011208:	0801cf55 	.word	0x0801cf55
 801120c:	0801d5e4 	.word	0x0801d5e4
 8011210:	0801d199 	.word	0x0801d199
 8011214:	20012332 	.word	0x20012332
 8011218:	20012338 	.word	0x20012338

0801121c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>:
 801121c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011220:	4616      	mov	r6, r2
 8011222:	880a      	ldrh	r2, [r1, #0]
 8011224:	b093      	sub	sp, #76	; 0x4c
 8011226:	2a01      	cmp	r2, #1
 8011228:	4681      	mov	r9, r0
 801122a:	4688      	mov	r8, r1
 801122c:	f89d a070 	ldrb.w	sl, [sp, #112]	; 0x70
 8011230:	d006      	beq.n	8011240 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x24>
 8011232:	4b6c      	ldr	r3, [pc, #432]	; (80113e4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1c8>)
 8011234:	4a6c      	ldr	r2, [pc, #432]	; (80113e8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1cc>)
 8011236:	486d      	ldr	r0, [pc, #436]	; (80113ec <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1d0>)
 8011238:	f240 119d 	movw	r1, #413	; 0x19d
 801123c:	f008 f99e 	bl	801957c <__assert_func>
 8011240:	f1ba 0f00 	cmp.w	sl, #0
 8011244:	d04a      	beq.n	80112dc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xc0>
 8011246:	6830      	ldr	r0, [r6, #0]
 8011248:	6871      	ldr	r1, [r6, #4]
 801124a:	4d69      	ldr	r5, [pc, #420]	; (80113f0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1d4>)
 801124c:	ac0e      	add	r4, sp, #56	; 0x38
 801124e:	c403      	stmia	r4!, {r0, r1}
 8011250:	6818      	ldr	r0, [r3, #0]
 8011252:	6859      	ldr	r1, [r3, #4]
 8011254:	ac10      	add	r4, sp, #64	; 0x40
 8011256:	c403      	stmia	r4!, {r0, r1}
 8011258:	a80e      	add	r0, sp, #56	; 0x38
 801125a:	f7fa fb57 	bl	800b90c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801125e:	4631      	mov	r1, r6
 8011260:	a810      	add	r0, sp, #64	; 0x40
 8011262:	f7fa fb3b 	bl	800b8dc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8011266:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	; 0x40
 801126a:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	; 0x42
 801126e:	f8bd 103c 	ldrh.w	r1, [sp, #60]	; 0x3c
 8011272:	6828      	ldr	r0, [r5, #0]
 8011274:	f9bd 6044 	ldrsh.w	r6, [sp, #68]	; 0x44
 8011278:	4c5e      	ldr	r4, [pc, #376]	; (80113f4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1d8>)
 801127a:	fb11 2103 	smlabb	r1, r1, r3, r2
 801127e:	4489      	add	r9, r1
 8011280:	f8bd 1038 	ldrh.w	r1, [sp, #56]	; 0x38
 8011284:	440a      	add	r2, r1
 8011286:	f8ad 2040 	strh.w	r2, [sp, #64]	; 0x40
 801128a:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 801128e:	4413      	add	r3, r2
 8011290:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 8011294:	f9bd 3046 	ldrsh.w	r3, [sp, #70]	; 0x46
 8011298:	930a      	str	r3, [sp, #40]	; 0x28
 801129a:	6803      	ldr	r3, [r0, #0]
 801129c:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 80112a0:	4798      	blx	r3
 80112a2:	2801      	cmp	r0, #1
 80112a4:	d11d      	bne.n	80112e2 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xc6>
 80112a6:	220b      	movs	r2, #11
 80112a8:	2100      	movs	r1, #0
 80112aa:	e9cd 2107 	strd	r2, r1, [sp, #28]
 80112ae:	8822      	ldrh	r2, [r4, #0]
 80112b0:	f8cd a010 	str.w	sl, [sp, #16]
 80112b4:	e9cd 0205 	strd	r0, r2, [sp, #20]
 80112b8:	f8bd 203c 	ldrh.w	r2, [sp, #60]	; 0x3c
 80112bc:	9203      	str	r2, [sp, #12]
 80112be:	f8bd 2028 	ldrh.w	r2, [sp, #40]	; 0x28
 80112c2:	9202      	str	r2, [sp, #8]
 80112c4:	b2b6      	uxth	r6, r6
 80112c6:	f8bd 2042 	ldrh.w	r2, [sp, #66]	; 0x42
 80112ca:	9200      	str	r2, [sp, #0]
 80112cc:	9601      	str	r6, [sp, #4]
 80112ce:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 80112d2:	6828      	ldr	r0, [r5, #0]
 80112d4:	4642      	mov	r2, r8
 80112d6:	4649      	mov	r1, r9
 80112d8:	f7f8 fdd0 	bl	8009e7c <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_>
 80112dc:	b013      	add	sp, #76	; 0x4c
 80112de:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80112e2:	6828      	ldr	r0, [r5, #0]
 80112e4:	6803      	ldr	r3, [r0, #0]
 80112e6:	6a1b      	ldr	r3, [r3, #32]
 80112e8:	4798      	blx	r3
 80112ea:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	; 0x42
 80112ee:	8823      	ldrh	r3, [r4, #0]
 80112f0:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	; 0x40
 80112f4:	940d      	str	r4, [sp, #52]	; 0x34
 80112f6:	fb01 2303 	mla	r3, r1, r3, r2
 80112fa:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80112fe:	ea26 73e6 	bic.w	r3, r6, r6, asr #31
 8011302:	930b      	str	r3, [sp, #44]	; 0x2c
 8011304:	ea6f 010a 	mvn.w	r1, sl
 8011308:	005b      	lsls	r3, r3, #1
 801130a:	930c      	str	r3, [sp, #48]	; 0x30
 801130c:	f04f 0e00 	mov.w	lr, #0
 8011310:	b2c9      	uxtb	r1, r1
 8011312:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8011314:	459e      	cmp	lr, r3
 8011316:	da5f      	bge.n	80113d8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1bc>
 8011318:	2700      	movs	r7, #0
 801131a:	fa1f fb8a 	uxth.w	fp, sl
 801131e:	42b7      	cmp	r7, r6
 8011320:	da4a      	bge.n	80113b8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x19c>
 8011322:	f819 3007 	ldrb.w	r3, [r9, r7]
 8011326:	2203      	movs	r2, #3
 8011328:	2404      	movs	r4, #4
 801132a:	fb12 4303 	smlabb	r3, r2, r3, r4
 801132e:	eb08 0403 	add.w	r4, r8, r3
 8011332:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 8011336:	78a2      	ldrb	r2, [r4, #2]
 8011338:	7865      	ldrb	r5, [r4, #1]
 801133a:	f818 c003 	ldrb.w	ip, [r8, r3]
 801133e:	d10c      	bne.n	801135a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x13e>
 8011340:	4b2d      	ldr	r3, [pc, #180]	; (80113f8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1dc>)
 8011342:	00ed      	lsls	r5, r5, #3
 8011344:	ea03 2202 	and.w	r2, r3, r2, lsl #8
 8011348:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801134c:	432a      	orrs	r2, r5
 801134e:	ea42 02dc 	orr.w	r2, r2, ip, lsr #3
 8011352:	f820 2017 	strh.w	r2, [r0, r7, lsl #1]
 8011356:	3701      	adds	r7, #1
 8011358:	e7e1      	b.n	801131e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x102>
 801135a:	f830 3017 	ldrh.w	r3, [r0, r7, lsl #1]
 801135e:	121c      	asrs	r4, r3, #8
 8011360:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 8011364:	fb12 f20b 	smulbb	r2, r2, fp
 8011368:	fb04 2201 	mla	r2, r4, r1, r2
 801136c:	10dc      	asrs	r4, r3, #3
 801136e:	00db      	lsls	r3, r3, #3
 8011370:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 8011374:	b2db      	uxtb	r3, r3
 8011376:	fb15 f50b 	smulbb	r5, r5, fp
 801137a:	fb1c fc0b 	smulbb	ip, ip, fp
 801137e:	b292      	uxth	r2, r2
 8011380:	fb04 5501 	mla	r5, r4, r1, r5
 8011384:	fb03 cc01 	mla	ip, r3, r1, ip
 8011388:	b2ad      	uxth	r5, r5
 801138a:	fa1f fc8c 	uxth.w	ip, ip
 801138e:	1c53      	adds	r3, r2, #1
 8011390:	eb03 2212 	add.w	r2, r3, r2, lsr #8
 8011394:	1c6c      	adds	r4, r5, #1
 8011396:	f10c 0301 	add.w	r3, ip, #1
 801139a:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 801139e:	eb04 2515 	add.w	r5, r4, r5, lsr #8
 80113a2:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 80113a6:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 80113aa:	096d      	lsrs	r5, r5, #5
 80113ac:	ea42 020c 	orr.w	r2, r2, ip
 80113b0:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80113b4:	432a      	orrs	r2, r5
 80113b6:	e7cc      	b.n	8011352 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x136>
 80113b8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80113ba:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 80113bc:	881b      	ldrh	r3, [r3, #0]
 80113be:	1b9b      	subs	r3, r3, r6
 80113c0:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80113c4:	4418      	add	r0, r3
 80113c6:	f9bd 303c 	ldrsh.w	r3, [sp, #60]	; 0x3c
 80113ca:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80113cc:	1b9b      	subs	r3, r3, r6
 80113ce:	4413      	add	r3, r2
 80113d0:	4499      	add	r9, r3
 80113d2:	f10e 0e01 	add.w	lr, lr, #1
 80113d6:	e79c      	b.n	8011312 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xf6>
 80113d8:	4b05      	ldr	r3, [pc, #20]	; (80113f0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1d4>)
 80113da:	6818      	ldr	r0, [r3, #0]
 80113dc:	6803      	ldr	r3, [r0, #0]
 80113de:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80113e0:	4798      	blx	r3
 80113e2:	e77b      	b.n	80112dc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xc0>
 80113e4:	0801cfa3 	.word	0x0801cfa3
 80113e8:	0801d66d 	.word	0x0801d66d
 80113ec:	0801d199 	.word	0x0801d199
 80113f0:	20012338 	.word	0x20012338
 80113f4:	20012332 	.word	0x20012332
 80113f8:	fffff800 	.word	0xfffff800

080113fc <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>:
 80113fc:	b430      	push	{r4, r5}
 80113fe:	780d      	ldrb	r5, [r1, #0]
 8011400:	f89d 4008 	ldrb.w	r4, [sp, #8]
 8011404:	2d01      	cmp	r5, #1
 8011406:	d00a      	beq.n	801141e <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x22>
 8011408:	d305      	bcc.n	8011416 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x1a>
 801140a:	2d02      	cmp	r5, #2
 801140c:	d10b      	bne.n	8011426 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x2a>
 801140e:	9402      	str	r4, [sp, #8]
 8011410:	bc30      	pop	{r4, r5}
 8011412:	f7ff bdf9 	b.w	8011008 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>
 8011416:	9402      	str	r4, [sp, #8]
 8011418:	bc30      	pop	{r4, r5}
 801141a:	f7ff bcfd 	b.w	8010e18 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>
 801141e:	9402      	str	r4, [sp, #8]
 8011420:	bc30      	pop	{r4, r5}
 8011422:	f7ff befb 	b.w	801121c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>
 8011426:	bc30      	pop	{r4, r5}
 8011428:	4770      	bx	lr
	...

0801142c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>:
 801142c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011430:	4605      	mov	r5, r0
 8011432:	b089      	sub	sp, #36	; 0x24
 8011434:	6810      	ldr	r0, [r2, #0]
 8011436:	f89d 9048 	ldrb.w	r9, [sp, #72]	; 0x48
 801143a:	460c      	mov	r4, r1
 801143c:	6851      	ldr	r1, [r2, #4]
 801143e:	ae04      	add	r6, sp, #16
 8011440:	c603      	stmia	r6!, {r0, r1}
 8011442:	6818      	ldr	r0, [r3, #0]
 8011444:	6859      	ldr	r1, [r3, #4]
 8011446:	ae06      	add	r6, sp, #24
 8011448:	4617      	mov	r7, r2
 801144a:	c603      	stmia	r6!, {r0, r1}
 801144c:	a804      	add	r0, sp, #16
 801144e:	f7fa fa5d 	bl	800b90c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8011452:	4639      	mov	r1, r7
 8011454:	a806      	add	r0, sp, #24
 8011456:	f7fa fa41 	bl	800b8dc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801145a:	f9bd 2018 	ldrsh.w	r2, [sp, #24]
 801145e:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 8011462:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 8011466:	f9bd 801c 	ldrsh.w	r8, [sp, #28]
 801146a:	fb11 2103 	smlabb	r1, r1, r3, r2
 801146e:	eb05 0541 	add.w	r5, r5, r1, lsl #1
 8011472:	440c      	add	r4, r1
 8011474:	f8bd 1010 	ldrh.w	r1, [sp, #16]
 8011478:	440a      	add	r2, r1
 801147a:	f8ad 2018 	strh.w	r2, [sp, #24]
 801147e:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 8011482:	4413      	add	r3, r2
 8011484:	f8ad 301a 	strh.w	r3, [sp, #26]
 8011488:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 801148c:	9300      	str	r3, [sp, #0]
 801148e:	4b80      	ldr	r3, [pc, #512]	; (8011690 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x264>)
 8011490:	6818      	ldr	r0, [r3, #0]
 8011492:	6803      	ldr	r3, [r0, #0]
 8011494:	6a1b      	ldr	r3, [r3, #32]
 8011496:	4798      	blx	r3
 8011498:	4b7e      	ldr	r3, [pc, #504]	; (8011694 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x268>)
 801149a:	f9bd 601a 	ldrsh.w	r6, [sp, #26]
 801149e:	881a      	ldrh	r2, [r3, #0]
 80114a0:	f9bd 1018 	ldrsh.w	r1, [sp, #24]
 80114a4:	fb06 1202 	mla	r2, r6, r2, r1
 80114a8:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 80114ac:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 80114b0:	ea28 72e8 	bic.w	r2, r8, r8, asr #31
 80114b4:	b212      	sxth	r2, r2
 80114b6:	d117      	bne.n	80114e8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0xbc>
 80114b8:	9201      	str	r2, [sp, #4]
 80114ba:	ea4f 0b42 	mov.w	fp, r2, lsl #1
 80114be:	f04f 0a00 	mov.w	sl, #0
 80114c2:	9302      	str	r3, [sp, #8]
 80114c4:	9b00      	ldr	r3, [sp, #0]
 80114c6:	459a      	cmp	sl, r3
 80114c8:	f280 80d9 	bge.w	801167e <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x252>
 80114cc:	2100      	movs	r1, #0
 80114ce:	4541      	cmp	r1, r8
 80114d0:	f280 80c1 	bge.w	8011656 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x22a>
 80114d4:	5c63      	ldrb	r3, [r4, r1]
 80114d6:	b12b      	cbz	r3, 80114e4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0xb8>
 80114d8:	2bff      	cmp	r3, #255	; 0xff
 80114da:	f835 e011 	ldrh.w	lr, [r5, r1, lsl #1]
 80114de:	d176      	bne.n	80115ce <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x1a2>
 80114e0:	f820 e011 	strh.w	lr, [r0, r1, lsl #1]
 80114e4:	3101      	adds	r1, #1
 80114e6:	e7f2      	b.n	80114ce <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0xa2>
 80114e8:	9202      	str	r2, [sp, #8]
 80114ea:	0052      	lsls	r2, r2, #1
 80114ec:	9201      	str	r2, [sp, #4]
 80114ee:	f04f 0b00 	mov.w	fp, #0
 80114f2:	9303      	str	r3, [sp, #12]
 80114f4:	9b00      	ldr	r3, [sp, #0]
 80114f6:	459b      	cmp	fp, r3
 80114f8:	f280 80c1 	bge.w	801167e <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x252>
 80114fc:	f04f 0c00 	mov.w	ip, #0
 8011500:	45c4      	cmp	ip, r8
 8011502:	da4f      	bge.n	80115a4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x178>
 8011504:	f814 300c 	ldrb.w	r3, [r4, ip]
 8011508:	2b00      	cmp	r3, #0
 801150a:	d048      	beq.n	801159e <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x172>
 801150c:	fb09 f303 	mul.w	r3, r9, r3
 8011510:	1c5a      	adds	r2, r3, #1
 8011512:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 8011516:	121b      	asrs	r3, r3, #8
 8011518:	d041      	beq.n	801159e <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x172>
 801151a:	f830 201c 	ldrh.w	r2, [r0, ip, lsl #1]
 801151e:	f835 e01c 	ldrh.w	lr, [r5, ip, lsl #1]
 8011522:	b29e      	uxth	r6, r3
 8011524:	1211      	asrs	r1, r2, #8
 8011526:	43db      	mvns	r3, r3
 8011528:	b2db      	uxtb	r3, r3
 801152a:	ea4f 272e 	mov.w	r7, lr, asr #8
 801152e:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8011532:	fb11 f103 	smulbb	r1, r1, r3
 8011536:	ea4f 0ae2 	mov.w	sl, r2, asr #3
 801153a:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801153e:	00d2      	lsls	r2, r2, #3
 8011540:	fb07 1706 	mla	r7, r7, r6, r1
 8011544:	b2d2      	uxtb	r2, r2
 8011546:	ea4f 01ee 	mov.w	r1, lr, asr #3
 801154a:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801154e:	fb12 f203 	smulbb	r2, r2, r3
 8011552:	fa5f fe8e 	uxtb.w	lr, lr
 8011556:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801155a:	fb0e 2206 	mla	r2, lr, r6, r2
 801155e:	fb1a fa03 	smulbb	sl, sl, r3
 8011562:	b2bf      	uxth	r7, r7
 8011564:	b292      	uxth	r2, r2
 8011566:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801156a:	fb01 a106 	mla	r1, r1, r6, sl
 801156e:	1c7b      	adds	r3, r7, #1
 8011570:	f102 0a01 	add.w	sl, r2, #1
 8011574:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 8011578:	eb0a 2a12 	add.w	sl, sl, r2, lsr #8
 801157c:	b289      	uxth	r1, r1
 801157e:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8011582:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8011586:	ea47 070a 	orr.w	r7, r7, sl
 801158a:	f101 0a01 	add.w	sl, r1, #1
 801158e:	eb0a 2111 	add.w	r1, sl, r1, lsr #8
 8011592:	0949      	lsrs	r1, r1, #5
 8011594:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8011598:	430f      	orrs	r7, r1
 801159a:	f820 701c 	strh.w	r7, [r0, ip, lsl #1]
 801159e:	f10c 0c01 	add.w	ip, ip, #1
 80115a2:	e7ad      	b.n	8011500 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0xd4>
 80115a4:	9b03      	ldr	r3, [sp, #12]
 80115a6:	9a01      	ldr	r2, [sp, #4]
 80115a8:	881b      	ldrh	r3, [r3, #0]
 80115aa:	eba3 0308 	sub.w	r3, r3, r8
 80115ae:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80115b2:	4418      	add	r0, r3
 80115b4:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 80115b8:	eba3 0308 	sub.w	r3, r3, r8
 80115bc:	eb02 0243 	add.w	r2, r2, r3, lsl #1
 80115c0:	4415      	add	r5, r2
 80115c2:	9a02      	ldr	r2, [sp, #8]
 80115c4:	4413      	add	r3, r2
 80115c6:	441c      	add	r4, r3
 80115c8:	f10b 0b01 	add.w	fp, fp, #1
 80115cc:	e792      	b.n	80114f4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0xc8>
 80115ce:	f830 2011 	ldrh.w	r2, [r0, r1, lsl #1]
 80115d2:	b29f      	uxth	r7, r3
 80115d4:	1216      	asrs	r6, r2, #8
 80115d6:	43db      	mvns	r3, r3
 80115d8:	b2db      	uxtb	r3, r3
 80115da:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 80115de:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 80115e2:	fb16 f603 	smulbb	r6, r6, r3
 80115e6:	ea4f 09e2 	mov.w	r9, r2, asr #3
 80115ea:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80115ee:	00d2      	lsls	r2, r2, #3
 80115f0:	fb0c 6c07 	mla	ip, ip, r7, r6
 80115f4:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 80115f8:	ea4f 06ee 	mov.w	r6, lr, asr #3
 80115fc:	b2d2      	uxtb	r2, r2
 80115fe:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8011602:	fa1f fc8c 	uxth.w	ip, ip
 8011606:	fb19 f903 	smulbb	r9, r9, r3
 801160a:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801160e:	fa5f fe8e 	uxtb.w	lr, lr
 8011612:	fb12 f203 	smulbb	r2, r2, r3
 8011616:	fb06 9607 	mla	r6, r6, r7, r9
 801161a:	fb0e 2207 	mla	r2, lr, r7, r2
 801161e:	f10c 0901 	add.w	r9, ip, #1
 8011622:	b292      	uxth	r2, r2
 8011624:	eb09 2c1c 	add.w	ip, r9, ip, lsr #8
 8011628:	f40c 4978 	and.w	r9, ip, #63488	; 0xf800
 801162c:	f102 0c01 	add.w	ip, r2, #1
 8011630:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 8011634:	b2b6      	uxth	r6, r6
 8011636:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801163a:	ea49 0c02 	orr.w	ip, r9, r2
 801163e:	f106 0901 	add.w	r9, r6, #1
 8011642:	eb09 2616 	add.w	r6, r9, r6, lsr #8
 8011646:	0976      	lsrs	r6, r6, #5
 8011648:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801164c:	ea4c 0c06 	orr.w	ip, ip, r6
 8011650:	f820 c011 	strh.w	ip, [r0, r1, lsl #1]
 8011654:	e746      	b.n	80114e4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0xb8>
 8011656:	9b02      	ldr	r3, [sp, #8]
 8011658:	881b      	ldrh	r3, [r3, #0]
 801165a:	eba3 0308 	sub.w	r3, r3, r8
 801165e:	eb0b 0343 	add.w	r3, fp, r3, lsl #1
 8011662:	4418      	add	r0, r3
 8011664:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 8011668:	eba3 0308 	sub.w	r3, r3, r8
 801166c:	eb0b 0243 	add.w	r2, fp, r3, lsl #1
 8011670:	4415      	add	r5, r2
 8011672:	9a01      	ldr	r2, [sp, #4]
 8011674:	4413      	add	r3, r2
 8011676:	441c      	add	r4, r3
 8011678:	f10a 0a01 	add.w	sl, sl, #1
 801167c:	e722      	b.n	80114c4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x98>
 801167e:	4b04      	ldr	r3, [pc, #16]	; (8011690 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x264>)
 8011680:	6818      	ldr	r0, [r3, #0]
 8011682:	6803      	ldr	r3, [r0, #0]
 8011684:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8011686:	4798      	blx	r3
 8011688:	b009      	add	sp, #36	; 0x24
 801168a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801168e:	bf00      	nop
 8011690:	20012338 	.word	0x20012338
 8011694:	20012332 	.word	0x20012332

08011698 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb>:
 8011698:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801169c:	b089      	sub	sp, #36	; 0x24
 801169e:	4682      	mov	sl, r0
 80116a0:	f89d 604c 	ldrb.w	r6, [sp, #76]	; 0x4c
 80116a4:	9c12      	ldr	r4, [sp, #72]	; 0x48
 80116a6:	460d      	mov	r5, r1
 80116a8:	4691      	mov	r9, r2
 80116aa:	4698      	mov	r8, r3
 80116ac:	b3ae      	cbz	r6, 801171a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x82>
 80116ae:	4608      	mov	r0, r1
 80116b0:	f7fc fa96 	bl	800dbe0 <_ZNK8touchgfx6Bitmap8getWidthEv>
 80116b4:	4607      	mov	r7, r0
 80116b6:	4628      	mov	r0, r5
 80116b8:	f7fc facc 	bl	800dc54 <_ZNK8touchgfx6Bitmap9getHeightEv>
 80116bc:	f8ad 000e 	strh.w	r0, [sp, #14]
 80116c0:	4628      	mov	r0, r5
 80116c2:	f8ad 9008 	strh.w	r9, [sp, #8]
 80116c6:	f8ad 800a 	strh.w	r8, [sp, #10]
 80116ca:	f8ad 700c 	strh.w	r7, [sp, #12]
 80116ce:	f7fc fc13 	bl	800def8 <_ZNK8touchgfx6Bitmap9getFormatEv>
 80116d2:	b178      	cbz	r0, 80116f4 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x5c>
 80116d4:	4628      	mov	r0, r5
 80116d6:	f7fc fc0f 	bl	800def8 <_ZNK8touchgfx6Bitmap9getFormatEv>
 80116da:	2802      	cmp	r0, #2
 80116dc:	d00a      	beq.n	80116f4 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x5c>
 80116de:	4628      	mov	r0, r5
 80116e0:	f7fc fc0a 	bl	800def8 <_ZNK8touchgfx6Bitmap9getFormatEv>
 80116e4:	280b      	cmp	r0, #11
 80116e6:	d005      	beq.n	80116f4 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x5c>
 80116e8:	4b69      	ldr	r3, [pc, #420]	; (8011890 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1f8>)
 80116ea:	4a6a      	ldr	r2, [pc, #424]	; (8011894 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1fc>)
 80116ec:	486a      	ldr	r0, [pc, #424]	; (8011898 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x200>)
 80116ee:	214b      	movs	r1, #75	; 0x4b
 80116f0:	f007 ff44 	bl	801957c <__assert_func>
 80116f4:	4628      	mov	r0, r5
 80116f6:	f7fc fb7b 	bl	800ddf0 <_ZNK8touchgfx6Bitmap7getDataEv>
 80116fa:	4607      	mov	r7, r0
 80116fc:	4628      	mov	r0, r5
 80116fe:	f7fc fba9 	bl	800de54 <_ZNK8touchgfx6Bitmap12getExtraDataEv>
 8011702:	4681      	mov	r9, r0
 8011704:	4628      	mov	r0, r5
 8011706:	f7fc fbf7 	bl	800def8 <_ZNK8touchgfx6Bitmap9getFormatEv>
 801170a:	2802      	cmp	r0, #2
 801170c:	d108      	bne.n	8011720 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x88>
 801170e:	4633      	mov	r3, r6
 8011710:	4622      	mov	r2, r4
 8011712:	a902      	add	r1, sp, #8
 8011714:	4638      	mov	r0, r7
 8011716:	f7ff fa6d 	bl	8010bf4 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801171a:	b009      	add	sp, #36	; 0x24
 801171c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011720:	4628      	mov	r0, r5
 8011722:	f7fc fbe9 	bl	800def8 <_ZNK8touchgfx6Bitmap9getFormatEv>
 8011726:	280b      	cmp	r0, #11
 8011728:	d107      	bne.n	801173a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xa2>
 801172a:	9600      	str	r6, [sp, #0]
 801172c:	4623      	mov	r3, r4
 801172e:	aa02      	add	r2, sp, #8
 8011730:	4649      	mov	r1, r9
 8011732:	4638      	mov	r0, r7
 8011734:	f7ff fe62 	bl	80113fc <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>
 8011738:	e7ef      	b.n	801171a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x82>
 801173a:	4628      	mov	r0, r5
 801173c:	f7fc fb1e 	bl	800dd7c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 8011740:	b950      	cbnz	r0, 8011758 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xc0>
 8011742:	e9cd 6000 	strd	r6, r0, [sp]
 8011746:	f8da 3000 	ldr.w	r3, [sl]
 801174a:	aa02      	add	r2, sp, #8
 801174c:	68dd      	ldr	r5, [r3, #12]
 801174e:	4639      	mov	r1, r7
 8011750:	4623      	mov	r3, r4
 8011752:	4650      	mov	r0, sl
 8011754:	47a8      	blx	r5
 8011756:	e7e0      	b.n	801171a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x82>
 8011758:	f10d 0818 	add.w	r8, sp, #24
 801175c:	4629      	mov	r1, r5
 801175e:	4640      	mov	r0, r8
 8011760:	f7fc fab2 	bl	800dcc8 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 8011764:	e898 0003 	ldmia.w	r8, {r0, r1}
 8011768:	ad04      	add	r5, sp, #16
 801176a:	e885 0003 	stmia.w	r5, {r0, r1}
 801176e:	4628      	mov	r0, r5
 8011770:	4621      	mov	r1, r4
 8011772:	f7f7 fc2f 	bl	8008fd4 <_ZN8touchgfx4RectaNERKS0_>
 8011776:	4628      	mov	r0, r5
 8011778:	f7f7 fc6f 	bl	800905a <_ZNK8touchgfx4Rect7isEmptyEv>
 801177c:	b138      	cbz	r0, 801178e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xf6>
 801177e:	9600      	str	r6, [sp, #0]
 8011780:	4623      	mov	r3, r4
 8011782:	aa02      	add	r2, sp, #8
 8011784:	4649      	mov	r1, r9
 8011786:	4638      	mov	r0, r7
 8011788:	f7ff fe50 	bl	801142c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801178c:	e7c5      	b.n	801171a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x82>
 801178e:	e9cd 6000 	strd	r6, r0, [sp]
 8011792:	f8da 3000 	ldr.w	r3, [sl]
 8011796:	aa02      	add	r2, sp, #8
 8011798:	f8d3 b00c 	ldr.w	fp, [r3, #12]
 801179c:	4639      	mov	r1, r7
 801179e:	462b      	mov	r3, r5
 80117a0:	4650      	mov	r0, sl
 80117a2:	47d8      	blx	fp
 80117a4:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 80117a8:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 80117ac:	4293      	cmp	r3, r2
 80117ae:	dd13      	ble.n	80117d8 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x140>
 80117b0:	f9b4 0000 	ldrsh.w	r0, [r4]
 80117b4:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 80117b8:	f8ad 0018 	strh.w	r0, [sp, #24]
 80117bc:	1a9b      	subs	r3, r3, r2
 80117be:	f8ad 201a 	strh.w	r2, [sp, #26]
 80117c2:	f8ad 101c 	strh.w	r1, [sp, #28]
 80117c6:	f8ad 301e 	strh.w	r3, [sp, #30]
 80117ca:	9600      	str	r6, [sp, #0]
 80117cc:	4643      	mov	r3, r8
 80117ce:	aa02      	add	r2, sp, #8
 80117d0:	4649      	mov	r1, r9
 80117d2:	4638      	mov	r0, r7
 80117d4:	f7ff fe2a 	bl	801142c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 80117d8:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 80117dc:	f9b4 2000 	ldrsh.w	r2, [r4]
 80117e0:	4293      	cmp	r3, r2
 80117e2:	dd13      	ble.n	801180c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x174>
 80117e4:	1a9b      	subs	r3, r3, r2
 80117e6:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 80117ea:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 80117ee:	f8ad 2018 	strh.w	r2, [sp, #24]
 80117f2:	f8ad 001a 	strh.w	r0, [sp, #26]
 80117f6:	f8ad 301c 	strh.w	r3, [sp, #28]
 80117fa:	f8ad 101e 	strh.w	r1, [sp, #30]
 80117fe:	9600      	str	r6, [sp, #0]
 8011800:	4643      	mov	r3, r8
 8011802:	aa02      	add	r2, sp, #8
 8011804:	4649      	mov	r1, r9
 8011806:	4638      	mov	r0, r7
 8011808:	f7ff fe10 	bl	801142c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801180c:	88a2      	ldrh	r2, [r4, #4]
 801180e:	8823      	ldrh	r3, [r4, #0]
 8011810:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 8011814:	4413      	add	r3, r2
 8011816:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801181a:	440a      	add	r2, r1
 801181c:	b29b      	uxth	r3, r3
 801181e:	b292      	uxth	r2, r2
 8011820:	b211      	sxth	r1, r2
 8011822:	b218      	sxth	r0, r3
 8011824:	4288      	cmp	r0, r1
 8011826:	dd13      	ble.n	8011850 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1b8>
 8011828:	1a9b      	subs	r3, r3, r2
 801182a:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 801182e:	f9bd 5012 	ldrsh.w	r5, [sp, #18]
 8011832:	f8ad 1018 	strh.w	r1, [sp, #24]
 8011836:	f8ad 301c 	strh.w	r3, [sp, #28]
 801183a:	f8ad 001e 	strh.w	r0, [sp, #30]
 801183e:	9600      	str	r6, [sp, #0]
 8011840:	4643      	mov	r3, r8
 8011842:	aa02      	add	r2, sp, #8
 8011844:	4649      	mov	r1, r9
 8011846:	4638      	mov	r0, r7
 8011848:	f8ad 501a 	strh.w	r5, [sp, #26]
 801184c:	f7ff fdee 	bl	801142c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 8011850:	88e2      	ldrh	r2, [r4, #6]
 8011852:	8863      	ldrh	r3, [r4, #2]
 8011854:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 8011858:	4413      	add	r3, r2
 801185a:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 801185e:	440a      	add	r2, r1
 8011860:	b29b      	uxth	r3, r3
 8011862:	b292      	uxth	r2, r2
 8011864:	b211      	sxth	r1, r2
 8011866:	b218      	sxth	r0, r3
 8011868:	4288      	cmp	r0, r1
 801186a:	f77f af56 	ble.w	801171a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x82>
 801186e:	f9b4 5000 	ldrsh.w	r5, [r4]
 8011872:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8011876:	f8ad 5018 	strh.w	r5, [sp, #24]
 801187a:	1a9b      	subs	r3, r3, r2
 801187c:	f8ad 301e 	strh.w	r3, [sp, #30]
 8011880:	f8ad 101a 	strh.w	r1, [sp, #26]
 8011884:	f8ad 001c 	strh.w	r0, [sp, #28]
 8011888:	9600      	str	r6, [sp, #0]
 801188a:	4643      	mov	r3, r8
 801188c:	e779      	b.n	8011782 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xea>
 801188e:	bf00      	nop
 8011890:	0801cff1 	.word	0x0801cff1
 8011894:	0801d6f6 	.word	0x0801d6f6
 8011898:	0801d199 	.word	0x0801d199

0801189c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>:
 801189c:	b508      	push	{r3, lr}
 801189e:	b180      	cbz	r0, 80118c2 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x26>
 80118a0:	2902      	cmp	r1, #2
 80118a2:	d014      	beq.n	80118ce <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x32>
 80118a4:	2903      	cmp	r1, #3
 80118a6:	d01d      	beq.n	80118e4 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x48>
 80118a8:	2901      	cmp	r1, #1
 80118aa:	d101      	bne.n	80118b0 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x14>
 80118ac:	2001      	movs	r0, #1
 80118ae:	bd08      	pop	{r3, pc}
 80118b0:	4b0e      	ldr	r3, [pc, #56]	; (80118ec <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 80118b2:	8818      	ldrh	r0, [r3, #0]
 80118b4:	b990      	cbnz	r0, 80118dc <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 80118b6:	4b0e      	ldr	r3, [pc, #56]	; (80118f0 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x54>)
 80118b8:	4a0e      	ldr	r2, [pc, #56]	; (80118f4 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x58>)
 80118ba:	480f      	ldr	r0, [pc, #60]	; (80118f8 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x5c>)
 80118bc:	2154      	movs	r1, #84	; 0x54
 80118be:	f007 fe5d 	bl	801957c <__assert_func>
 80118c2:	2902      	cmp	r1, #2
 80118c4:	d00e      	beq.n	80118e4 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x48>
 80118c6:	2903      	cmp	r1, #3
 80118c8:	d0f2      	beq.n	80118b0 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x14>
 80118ca:	2901      	cmp	r1, #1
 80118cc:	d1ee      	bne.n	80118ac <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x10>
 80118ce:	4b07      	ldr	r3, [pc, #28]	; (80118ec <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 80118d0:	8818      	ldrh	r0, [r3, #0]
 80118d2:	2800      	cmp	r0, #0
 80118d4:	d0ef      	beq.n	80118b6 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x1a>
 80118d6:	f3c0 000e 	ubfx	r0, r0, #0, #15
 80118da:	e7e8      	b.n	80118ae <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x12>
 80118dc:	f3c0 000e 	ubfx	r0, r0, #0, #15
 80118e0:	4240      	negs	r0, r0
 80118e2:	e7e4      	b.n	80118ae <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x12>
 80118e4:	f04f 30ff 	mov.w	r0, #4294967295
 80118e8:	e7e1      	b.n	80118ae <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x12>
 80118ea:	bf00      	nop
 80118ec:	20012332 	.word	0x20012332
 80118f0:	0801d2f3 	.word	0x0801d2f3
 80118f4:	0801d873 	.word	0x0801d873
 80118f8:	0801d335 	.word	0x0801d335

080118fc <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>:
 80118fc:	b508      	push	{r3, lr}
 80118fe:	b180      	cbz	r0, 8011922 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x26>
 8011900:	2902      	cmp	r1, #2
 8011902:	d014      	beq.n	801192e <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x32>
 8011904:	2903      	cmp	r1, #3
 8011906:	d018      	beq.n	801193a <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x3e>
 8011908:	2901      	cmp	r1, #1
 801190a:	d001      	beq.n	8011910 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x14>
 801190c:	2001      	movs	r0, #1
 801190e:	e013      	b.n	8011938 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x3c>
 8011910:	4b0e      	ldr	r3, [pc, #56]	; (801194c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 8011912:	8818      	ldrh	r0, [r3, #0]
 8011914:	b970      	cbnz	r0, 8011934 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x38>
 8011916:	4b0e      	ldr	r3, [pc, #56]	; (8011950 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x54>)
 8011918:	4a0e      	ldr	r2, [pc, #56]	; (8011954 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x58>)
 801191a:	480f      	ldr	r0, [pc, #60]	; (8011958 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x5c>)
 801191c:	2154      	movs	r1, #84	; 0x54
 801191e:	f007 fe2d 	bl	801957c <__assert_func>
 8011922:	2902      	cmp	r1, #2
 8011924:	d009      	beq.n	801193a <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x3e>
 8011926:	2903      	cmp	r1, #3
 8011928:	d0f0      	beq.n	801190c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x10>
 801192a:	2901      	cmp	r1, #1
 801192c:	d1f0      	bne.n	8011910 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x14>
 801192e:	f04f 30ff 	mov.w	r0, #4294967295
 8011932:	e001      	b.n	8011938 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x3c>
 8011934:	f3c0 000e 	ubfx	r0, r0, #0, #15
 8011938:	bd08      	pop	{r3, pc}
 801193a:	4b04      	ldr	r3, [pc, #16]	; (801194c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 801193c:	8818      	ldrh	r0, [r3, #0]
 801193e:	2800      	cmp	r0, #0
 8011940:	d0e9      	beq.n	8011916 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x1a>
 8011942:	f3c0 000e 	ubfx	r0, r0, #0, #15
 8011946:	4240      	negs	r0, r0
 8011948:	e7f6      	b.n	8011938 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x3c>
 801194a:	bf00      	nop
 801194c:	20012332 	.word	0x20012332
 8011950:	0801d2f3 	.word	0x0801d2f3
 8011954:	0801d873 	.word	0x0801d873
 8011958:	0801d335 	.word	0x0801d335

0801195c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE>:
 801195c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011960:	b097      	sub	sp, #92	; 0x5c
 8011962:	910a      	str	r1, [sp, #40]	; 0x28
 8011964:	a912      	add	r1, sp, #72	; 0x48
 8011966:	e881 000c 	stmia.w	r1, {r2, r3}
 801196a:	f9bd 3084 	ldrsh.w	r3, [sp, #132]	; 0x84
 801196e:	9307      	str	r3, [sp, #28]
 8011970:	e9dd 2124 	ldrd	r2, r1, [sp, #144]	; 0x90
 8011974:	f89d 309c 	ldrb.w	r3, [sp, #156]	; 0x9c
 8011978:	930f      	str	r3, [sp, #60]	; 0x3c
 801197a:	f89d 30a8 	ldrb.w	r3, [sp, #168]	; 0xa8
 801197e:	930b      	str	r3, [sp, #44]	; 0x2c
 8011980:	7b4b      	ldrb	r3, [r1, #13]
 8011982:	798d      	ldrb	r5, [r1, #6]
 8011984:	f9bd 6080 	ldrsh.w	r6, [sp, #128]	; 0x80
 8011988:	f8bd 7088 	ldrh.w	r7, [sp, #136]	; 0x88
 801198c:	f8bd 408c 	ldrh.w	r4, [sp, #140]	; 0x8c
 8011990:	f89d 80a4 	ldrb.w	r8, [sp, #164]	; 0xa4
 8011994:	f89d 90ac 	ldrb.w	r9, [sp, #172]	; 0xac
 8011998:	0158      	lsls	r0, r3, #5
 801199a:	f400 7080 	and.w	r0, r0, #256	; 0x100
 801199e:	4328      	orrs	r0, r5
 80119a0:	9006      	str	r0, [sp, #24]
 80119a2:	f000 8156 	beq.w	8011c52 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2f6>
 80119a6:	011b      	lsls	r3, r3, #4
 80119a8:	79c8      	ldrb	r0, [r1, #7]
 80119aa:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80119ae:	4303      	orrs	r3, r0
 80119b0:	9308      	str	r3, [sp, #32]
 80119b2:	f000 814e 	beq.w	8011c52 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2f6>
 80119b6:	f991 3009 	ldrsb.w	r3, [r1, #9]
 80119ba:	b29b      	uxth	r3, r3
 80119bc:	2f00      	cmp	r7, #0
 80119be:	f000 80f2 	beq.w	8011ba6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x24a>
 80119c2:	1aff      	subs	r7, r7, r3
 80119c4:	b2bf      	uxth	r7, r7
 80119c6:	043b      	lsls	r3, r7, #16
 80119c8:	d502      	bpl.n	80119d0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x74>
 80119ca:	1bf6      	subs	r6, r6, r7
 80119cc:	b236      	sxth	r6, r6
 80119ce:	2700      	movs	r7, #0
 80119d0:	f9b2 1000 	ldrsh.w	r1, [r2]
 80119d4:	f8b2 a002 	ldrh.w	sl, [r2, #2]
 80119d8:	f8bd 5018 	ldrh.w	r5, [sp, #24]
 80119dc:	428e      	cmp	r6, r1
 80119de:	b28b      	uxth	r3, r1
 80119e0:	bfbf      	itttt	lt
 80119e2:	18ff      	addlt	r7, r7, r3
 80119e4:	1bbe      	sublt	r6, r7, r6
 80119e6:	b2b7      	uxthlt	r7, r6
 80119e8:	460e      	movlt	r6, r1
 80119ea:	8891      	ldrh	r1, [r2, #4]
 80119ec:	440b      	add	r3, r1
 80119ee:	b21b      	sxth	r3, r3
 80119f0:	930e      	str	r3, [sp, #56]	; 0x38
 80119f2:	88d3      	ldrh	r3, [r2, #6]
 80119f4:	9a07      	ldr	r2, [sp, #28]
 80119f6:	449a      	add	sl, r3
 80119f8:	fa0f f38a 	sxth.w	r3, sl
 80119fc:	930d      	str	r3, [sp, #52]	; 0x34
 80119fe:	4bbc      	ldr	r3, [pc, #752]	; (8011cf0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x394>)
 8011a00:	f8bd a020 	ldrh.w	sl, [sp, #32]
 8011a04:	f893 b000 	ldrb.w	fp, [r3]
 8011a08:	f10b 3cff 	add.w	ip, fp, #4294967295
 8011a0c:	f1dc 0300 	rsbs	r3, ip, #0
 8011a10:	eb43 030c 	adc.w	r3, r3, ip
 8011a14:	930c      	str	r3, [sp, #48]	; 0x30
 8011a16:	4631      	mov	r1, r6
 8011a18:	464b      	mov	r3, r9
 8011a1a:	a812      	add	r0, sp, #72	; 0x48
 8011a1c:	f7f9 fe4e 	bl	800b6bc <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>
 8011a20:	4631      	mov	r1, r6
 8011a22:	f8ad 0054 	strh.w	r0, [sp, #84]	; 0x54
 8011a26:	464b      	mov	r3, r9
 8011a28:	9a07      	ldr	r2, [sp, #28]
 8011a2a:	a812      	add	r0, sp, #72	; 0x48
 8011a2c:	f7f9 fe5e 	bl	800b6ec <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>
 8011a30:	a916      	add	r1, sp, #88	; 0x58
 8011a32:	f821 0d02 	strh.w	r0, [r1, #-2]!
 8011a36:	a815      	add	r0, sp, #84	; 0x54
 8011a38:	f7f9 ff3a 	bl	800b8b0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>
 8011a3c:	f1b9 0f00 	cmp.w	r9, #0
 8011a40:	f040 80b4 	bne.w	8011bac <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x250>
 8011a44:	f1bb 0f01 	cmp.w	fp, #1
 8011a48:	f040 80b8 	bne.w	8011bbc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x260>
 8011a4c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8011a4e:	2b00      	cmp	r3, #0
 8011a50:	f040 8104 	bne.w	8011c5c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x300>
 8011a54:	4ba7      	ldr	r3, [pc, #668]	; (8011cf4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x398>)
 8011a56:	6818      	ldr	r0, [r3, #0]
 8011a58:	6803      	ldr	r3, [r0, #0]
 8011a5a:	6a1b      	ldr	r3, [r3, #32]
 8011a5c:	4798      	blx	r3
 8011a5e:	4aa6      	ldr	r2, [pc, #664]	; (8011cf8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x39c>)
 8011a60:	f9bd 3056 	ldrsh.w	r3, [sp, #86]	; 0x56
 8011a64:	8811      	ldrh	r1, [r2, #0]
 8011a66:	f9bd 2054 	ldrsh.w	r2, [sp, #84]	; 0x54
 8011a6a:	fb01 2303 	mla	r3, r1, r3, r2
 8011a6e:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8011a72:	9308      	str	r3, [sp, #32]
 8011a74:	2301      	movs	r3, #1
 8011a76:	fa03 f308 	lsl.w	r3, r3, r8
 8011a7a:	3b01      	subs	r3, #1
 8011a7c:	b2db      	uxtb	r3, r3
 8011a7e:	f1b8 0f01 	cmp.w	r8, #1
 8011a82:	9310      	str	r3, [sp, #64]	; 0x40
 8011a84:	f000 80ec 	beq.w	8011c60 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x304>
 8011a88:	f1b8 0f02 	cmp.w	r8, #2
 8011a8c:	f000 80ea 	beq.w	8011c64 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x308>
 8011a90:	f1b8 0f04 	cmp.w	r8, #4
 8011a94:	bf14      	ite	ne
 8011a96:	2301      	movne	r3, #1
 8011a98:	2311      	moveq	r3, #17
 8011a9a:	9309      	str	r3, [sp, #36]	; 0x24
 8011a9c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8011a9e:	b153      	cbz	r3, 8011ab6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x15a>
 8011aa0:	9a06      	ldr	r2, [sp, #24]
 8011aa2:	2508      	movs	r5, #8
 8011aa4:	fb95 f3f8 	sdiv	r3, r5, r8
 8011aa8:	1e5d      	subs	r5, r3, #1
 8011aaa:	4415      	add	r5, r2
 8011aac:	fb95 f5f3 	sdiv	r5, r5, r3
 8011ab0:	fb15 f503 	smulbb	r5, r5, r3
 8011ab4:	b2ad      	uxth	r5, r5
 8011ab6:	b907      	cbnz	r7, 8011aba <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x15e>
 8011ab8:	b16c      	cbz	r4, 8011ad6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x17a>
 8011aba:	fb04 7305 	mla	r3, r4, r5, r7
 8011abe:	9a26      	ldr	r2, [sp, #152]	; 0x98
 8011ac0:	fb08 f303 	mul.w	r3, r8, r3
 8011ac4:	ebaa 0a04 	sub.w	sl, sl, r4
 8011ac8:	eb02 02d3 	add.w	r2, r2, r3, lsr #3
 8011acc:	9226      	str	r2, [sp, #152]	; 0x98
 8011ace:	fa1f fa8a 	uxth.w	sl, sl
 8011ad2:	f003 0407 	and.w	r4, r3, #7
 8011ad6:	4649      	mov	r1, r9
 8011ad8:	980c      	ldr	r0, [sp, #48]	; 0x30
 8011ada:	f7ff fedf 	bl	801189c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>
 8011ade:	4649      	mov	r1, r9
 8011ae0:	4683      	mov	fp, r0
 8011ae2:	980c      	ldr	r0, [sp, #48]	; 0x30
 8011ae4:	f7ff ff0a 	bl	80118fc <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>
 8011ae8:	9a07      	ldr	r2, [sp, #28]
 8011aea:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8011aec:	1a9b      	subs	r3, r3, r2
 8011aee:	459a      	cmp	sl, r3
 8011af0:	bfa8      	it	ge
 8011af2:	469a      	movge	sl, r3
 8011af4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8011af6:	1bf6      	subs	r6, r6, r7
 8011af8:	1b9e      	subs	r6, r3, r6
 8011afa:	9b06      	ldr	r3, [sp, #24]
 8011afc:	429e      	cmp	r6, r3
 8011afe:	bfd4      	ite	le
 8011b00:	ebc7 0706 	rsble	r7, r7, r6
 8011b04:	ebc7 0703 	rsbgt	r7, r7, r3
 8011b08:	1bed      	subs	r5, r5, r7
 8011b0a:	fb08 f305 	mul.w	r3, r8, r5
 8011b0e:	9307      	str	r3, [sp, #28]
 8011b10:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8011b12:	781a      	ldrb	r2, [r3, #0]
 8011b14:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8011b16:	0a1b      	lsrs	r3, r3, #8
 8011b18:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8011b1c:	930d      	str	r3, [sp, #52]	; 0x34
 8011b1e:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8011b20:	08db      	lsrs	r3, r3, #3
 8011b22:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 8011b26:	930e      	str	r3, [sp, #56]	; 0x38
 8011b28:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8011b2a:	00db      	lsls	r3, r3, #3
 8011b2c:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8011b30:	930f      	str	r3, [sp, #60]	; 0x3c
 8011b32:	ea4f 034b 	mov.w	r3, fp, lsl #1
 8011b36:	fb0b 0b17 	mls	fp, fp, r7, r0
 8011b3a:	ea27 70e7 	bic.w	r0, r7, r7, asr #31
 8011b3e:	4358      	muls	r0, r3
 8011b40:	9306      	str	r3, [sp, #24]
 8011b42:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8011b44:	4122      	asrs	r2, r4
 8011b46:	b29b      	uxth	r3, r3
 8011b48:	b2d2      	uxtb	r2, r2
 8011b4a:	9311      	str	r3, [sp, #68]	; 0x44
 8011b4c:	eb00 0b4b 	add.w	fp, r0, fp, lsl #1
 8011b50:	f1ba 0f00 	cmp.w	sl, #0
 8011b54:	f340 80e5 	ble.w	8011d22 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3c6>
 8011b58:	f8dd c020 	ldr.w	ip, [sp, #32]
 8011b5c:	46be      	mov	lr, r7
 8011b5e:	f1be 0f00 	cmp.w	lr, #0
 8011b62:	f340 80cb 	ble.w	8011cfc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a0>
 8011b66:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8011b68:	4013      	ands	r3, r2
 8011b6a:	d00a      	beq.n	8011b82 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x226>
 8011b6c:	9909      	ldr	r1, [sp, #36]	; 0x24
 8011b6e:	fb13 f301 	smulbb	r3, r3, r1
 8011b72:	2bfe      	cmp	r3, #254	; 0xfe
 8011b74:	dd78      	ble.n	8011c68 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x30c>
 8011b76:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8011b78:	29ff      	cmp	r1, #255	; 0xff
 8011b7a:	d175      	bne.n	8011c68 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x30c>
 8011b7c:	9811      	ldr	r0, [sp, #68]	; 0x44
 8011b7e:	f8ac 0000 	strh.w	r0, [ip]
 8011b82:	4444      	add	r4, r8
 8011b84:	b2a4      	uxth	r4, r4
 8011b86:	2c07      	cmp	r4, #7
 8011b88:	bf81      	itttt	hi
 8011b8a:	9b26      	ldrhi	r3, [sp, #152]	; 0x98
 8011b8c:	785a      	ldrbhi	r2, [r3, #1]
 8011b8e:	3301      	addhi	r3, #1
 8011b90:	9326      	strhi	r3, [sp, #152]	; 0x98
 8011b92:	9b06      	ldr	r3, [sp, #24]
 8011b94:	bf9a      	itte	ls
 8011b96:	fa42 f208 	asrls.w	r2, r2, r8
 8011b9a:	b2d2      	uxtbls	r2, r2
 8011b9c:	2400      	movhi	r4, #0
 8011b9e:	449c      	add	ip, r3
 8011ba0:	f10e 3eff 	add.w	lr, lr, #4294967295
 8011ba4:	e7db      	b.n	8011b5e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x202>
 8011ba6:	441e      	add	r6, r3
 8011ba8:	b236      	sxth	r6, r6
 8011baa:	e711      	b.n	80119d0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x74>
 8011bac:	f1b9 0f01 	cmp.w	r9, #1
 8011bb0:	f47f af4c 	bne.w	8011a4c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf0>
 8011bb4:	f1bb 0f01 	cmp.w	fp, #1
 8011bb8:	f47f af48 	bne.w	8011a4c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf0>
 8011bbc:	f8df b134 	ldr.w	fp, [pc, #308]	; 8011cf4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x398>
 8011bc0:	f8db 0000 	ldr.w	r0, [fp]
 8011bc4:	6803      	ldr	r3, [r0, #0]
 8011bc6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8011bc8:	4798      	blx	r3
 8011bca:	f010 0380 	ands.w	r3, r0, #128	; 0x80
 8011bce:	465a      	mov	r2, fp
 8011bd0:	d006      	beq.n	8011be0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x284>
 8011bd2:	f1b8 0f04 	cmp.w	r8, #4
 8011bd6:	d13f      	bne.n	8011c58 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2fc>
 8011bd8:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8011bda:	3300      	adds	r3, #0
 8011bdc:	bf18      	it	ne
 8011bde:	2301      	movne	r3, #1
 8011be0:	05c0      	lsls	r0, r0, #23
 8011be2:	f140 80a7 	bpl.w	8011d34 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3d8>
 8011be6:	f1b8 0f08 	cmp.w	r8, #8
 8011bea:	f040 80a3 	bne.w	8011d34 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3d8>
 8011bee:	2b00      	cmp	r3, #0
 8011bf0:	bf0c      	ite	eq
 8011bf2:	f44f 7180 	moveq.w	r1, #256	; 0x100
 8011bf6:	2180      	movne	r1, #128	; 0x80
 8011bf8:	2f00      	cmp	r7, #0
 8011bfa:	f47f af27 	bne.w	8011a4c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf0>
 8011bfe:	2c00      	cmp	r4, #0
 8011c00:	f47f af24 	bne.w	8011a4c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf0>
 8011c04:	9b06      	ldr	r3, [sp, #24]
 8011c06:	980e      	ldr	r0, [sp, #56]	; 0x38
 8011c08:	18f3      	adds	r3, r6, r3
 8011c0a:	4283      	cmp	r3, r0
 8011c0c:	f73f af1e 	bgt.w	8011a4c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf0>
 8011c10:	e9dd 0307 	ldrd	r0, r3, [sp, #28]
 8011c14:	4403      	add	r3, r0
 8011c16:	980d      	ldr	r0, [sp, #52]	; 0x34
 8011c18:	4283      	cmp	r3, r0
 8011c1a:	f73f af17 	bgt.w	8011a4c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf0>
 8011c1e:	6810      	ldr	r0, [r2, #0]
 8011c20:	f8bd 3056 	ldrh.w	r3, [sp, #86]	; 0x56
 8011c24:	6804      	ldr	r4, [r0, #0]
 8011c26:	9105      	str	r1, [sp, #20]
 8011c28:	f1b8 0f08 	cmp.w	r8, #8
 8011c2c:	bf18      	it	ne
 8011c2e:	3501      	addne	r5, #1
 8011c30:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8011c32:	9104      	str	r1, [sp, #16]
 8011c34:	bf18      	it	ne
 8011c36:	f025 0501 	bicne.w	r5, r5, #1
 8011c3a:	9928      	ldr	r1, [sp, #160]	; 0xa0
 8011c3c:	f8bd 2054 	ldrh.w	r2, [sp, #84]	; 0x54
 8011c40:	bf18      	it	ne
 8011c42:	b2ad      	uxthne	r5, r5
 8011c44:	e9cd 5102 	strd	r5, r1, [sp, #8]
 8011c48:	e9cd 5a00 	strd	r5, sl, [sp]
 8011c4c:	9926      	ldr	r1, [sp, #152]	; 0x98
 8011c4e:	6c24      	ldr	r4, [r4, #64]	; 0x40
 8011c50:	47a0      	blx	r4
 8011c52:	b017      	add	sp, #92	; 0x5c
 8011c54:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011c58:	2300      	movs	r3, #0
 8011c5a:	e7c1      	b.n	8011be0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x284>
 8011c5c:	980a      	ldr	r0, [sp, #40]	; 0x28
 8011c5e:	e6fe      	b.n	8011a5e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x102>
 8011c60:	23ff      	movs	r3, #255	; 0xff
 8011c62:	e71a      	b.n	8011a9a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x13e>
 8011c64:	2355      	movs	r3, #85	; 0x55
 8011c66:	e718      	b.n	8011a9a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x13e>
 8011c68:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8011c6a:	f8bc 5000 	ldrh.w	r5, [ip]
 8011c6e:	fb11 f303 	smulbb	r3, r1, r3
 8011c72:	b29b      	uxth	r3, r3
 8011c74:	1c59      	adds	r1, r3, #1
 8011c76:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 8011c7a:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8011c7e:	990d      	ldr	r1, [sp, #52]	; 0x34
 8011c80:	b29e      	uxth	r6, r3
 8011c82:	1228      	asrs	r0, r5, #8
 8011c84:	43db      	mvns	r3, r3
 8011c86:	b2db      	uxtb	r3, r3
 8011c88:	fb11 f106 	smulbb	r1, r1, r6
 8011c8c:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8011c90:	fb00 1003 	mla	r0, r0, r3, r1
 8011c94:	b281      	uxth	r1, r0
 8011c96:	980e      	ldr	r0, [sp, #56]	; 0x38
 8011c98:	910c      	str	r1, [sp, #48]	; 0x30
 8011c9a:	fb16 f900 	smulbb	r9, r6, r0
 8011c9e:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8011ca0:	10e9      	asrs	r1, r5, #3
 8011ca2:	00ed      	lsls	r5, r5, #3
 8011ca4:	fb16 f600 	smulbb	r6, r6, r0
 8011ca8:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8011cac:	b2ed      	uxtb	r5, r5
 8011cae:	fb01 9103 	mla	r1, r1, r3, r9
 8011cb2:	fb05 6603 	mla	r6, r5, r3, r6
 8011cb6:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8011cb8:	980c      	ldr	r0, [sp, #48]	; 0x30
 8011cba:	b2b6      	uxth	r6, r6
 8011cbc:	3301      	adds	r3, #1
 8011cbe:	f106 0901 	add.w	r9, r6, #1
 8011cc2:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8011cc6:	eb09 2916 	add.w	r9, r9, r6, lsr #8
 8011cca:	b289      	uxth	r1, r1
 8011ccc:	f3c9 29c4 	ubfx	r9, r9, #11, #5
 8011cd0:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 8011cd4:	ea40 0009 	orr.w	r0, r0, r9
 8011cd8:	f101 0901 	add.w	r9, r1, #1
 8011cdc:	eb09 2911 	add.w	r9, r9, r1, lsr #8
 8011ce0:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8011ce4:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8011ce8:	ea40 0009 	orr.w	r0, r0, r9
 8011cec:	e747      	b.n	8011b7e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x222>
 8011cee:	bf00      	nop
 8011cf0:	20012330 	.word	0x20012330
 8011cf4:	20012338 	.word	0x20012338
 8011cf8:	20012332 	.word	0x20012332
 8011cfc:	9b07      	ldr	r3, [sp, #28]
 8011cfe:	b153      	cbz	r3, 8011d16 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ba>
 8011d00:	441c      	add	r4, r3
 8011d02:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8011d04:	b2a4      	uxth	r4, r4
 8011d06:	eb03 03d4 	add.w	r3, r3, r4, lsr #3
 8011d0a:	f004 0407 	and.w	r4, r4, #7
 8011d0e:	781a      	ldrb	r2, [r3, #0]
 8011d10:	9326      	str	r3, [sp, #152]	; 0x98
 8011d12:	4122      	asrs	r2, r4
 8011d14:	b2d2      	uxtb	r2, r2
 8011d16:	9b08      	ldr	r3, [sp, #32]
 8011d18:	445b      	add	r3, fp
 8011d1a:	9308      	str	r3, [sp, #32]
 8011d1c:	f10a 3aff 	add.w	sl, sl, #4294967295
 8011d20:	e716      	b.n	8011b50 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1f4>
 8011d22:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8011d24:	2b00      	cmp	r3, #0
 8011d26:	d194      	bne.n	8011c52 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2f6>
 8011d28:	4b05      	ldr	r3, [pc, #20]	; (8011d40 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e4>)
 8011d2a:	6818      	ldr	r0, [r3, #0]
 8011d2c:	6803      	ldr	r3, [r0, #0]
 8011d2e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8011d30:	4798      	blx	r3
 8011d32:	e78e      	b.n	8011c52 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2f6>
 8011d34:	2b00      	cmp	r3, #0
 8011d36:	f43f ae89 	beq.w	8011a4c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf0>
 8011d3a:	2180      	movs	r1, #128	; 0x80
 8011d3c:	e75c      	b.n	8011bf8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x29c>
 8011d3e:	bf00      	nop
 8011d40:	20012338 	.word	0x20012338

08011d44 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>:
 8011d44:	b538      	push	{r3, r4, r5, lr}
 8011d46:	4c15      	ldr	r4, [pc, #84]	; (8011d9c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x58>)
 8011d48:	7823      	ldrb	r3, [r4, #0]
 8011d4a:	f3bf 8f5b 	dmb	ish
 8011d4e:	07da      	lsls	r2, r3, #31
 8011d50:	4605      	mov	r5, r0
 8011d52:	d40b      	bmi.n	8011d6c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 8011d54:	4620      	mov	r0, r4
 8011d56:	f007 fbe7 	bl	8019528 <__cxa_guard_acquire>
 8011d5a:	b138      	cbz	r0, 8011d6c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 8011d5c:	4620      	mov	r0, r4
 8011d5e:	f007 fbef 	bl	8019540 <__cxa_guard_release>
 8011d62:	4a0f      	ldr	r2, [pc, #60]	; (8011da0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 8011d64:	490f      	ldr	r1, [pc, #60]	; (8011da4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x60>)
 8011d66:	4810      	ldr	r0, [pc, #64]	; (8011da8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 8011d68:	f007 fbd4 	bl	8019514 <__aeabi_atexit>
 8011d6c:	4c0f      	ldr	r4, [pc, #60]	; (8011dac <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x68>)
 8011d6e:	7823      	ldrb	r3, [r4, #0]
 8011d70:	f3bf 8f5b 	dmb	ish
 8011d74:	07db      	lsls	r3, r3, #31
 8011d76:	d40b      	bmi.n	8011d90 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 8011d78:	4620      	mov	r0, r4
 8011d7a:	f007 fbd5 	bl	8019528 <__cxa_guard_acquire>
 8011d7e:	b138      	cbz	r0, 8011d90 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 8011d80:	4620      	mov	r0, r4
 8011d82:	f007 fbdd 	bl	8019540 <__cxa_guard_release>
 8011d86:	4a06      	ldr	r2, [pc, #24]	; (8011da0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 8011d88:	4909      	ldr	r1, [pc, #36]	; (8011db0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x6c>)
 8011d8a:	480a      	ldr	r0, [pc, #40]	; (8011db4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 8011d8c:	f007 fbc2 	bl	8019514 <__aeabi_atexit>
 8011d90:	4b05      	ldr	r3, [pc, #20]	; (8011da8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 8011d92:	612b      	str	r3, [r5, #16]
 8011d94:	4b07      	ldr	r3, [pc, #28]	; (8011db4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 8011d96:	616b      	str	r3, [r5, #20]
 8011d98:	bd38      	pop	{r3, r4, r5, pc}
 8011d9a:	bf00      	nop
 8011d9c:	20012424 	.word	0x20012424
 8011da0:	20000000 	.word	0x20000000
 8011da4:	080103e9 	.word	0x080103e9
 8011da8:	200000d8 	.word	0x200000d8
 8011dac:	20012428 	.word	0x20012428
 8011db0:	080103e7 	.word	0x080103e7
 8011db4:	200000dc 	.word	0x200000dc

08011db8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>:
 8011db8:	b538      	push	{r3, r4, r5, lr}
 8011dba:	4c15      	ldr	r4, [pc, #84]	; (8011e10 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x58>)
 8011dbc:	7823      	ldrb	r3, [r4, #0]
 8011dbe:	f3bf 8f5b 	dmb	ish
 8011dc2:	07da      	lsls	r2, r3, #31
 8011dc4:	4605      	mov	r5, r0
 8011dc6:	d40b      	bmi.n	8011de0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 8011dc8:	4620      	mov	r0, r4
 8011dca:	f007 fbad 	bl	8019528 <__cxa_guard_acquire>
 8011dce:	b138      	cbz	r0, 8011de0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 8011dd0:	4620      	mov	r0, r4
 8011dd2:	f007 fbb5 	bl	8019540 <__cxa_guard_release>
 8011dd6:	4a0f      	ldr	r2, [pc, #60]	; (8011e14 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 8011dd8:	490f      	ldr	r1, [pc, #60]	; (8011e18 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x60>)
 8011dda:	4810      	ldr	r0, [pc, #64]	; (8011e1c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 8011ddc:	f007 fb9a 	bl	8019514 <__aeabi_atexit>
 8011de0:	4c0f      	ldr	r4, [pc, #60]	; (8011e20 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x68>)
 8011de2:	7823      	ldrb	r3, [r4, #0]
 8011de4:	f3bf 8f5b 	dmb	ish
 8011de8:	07db      	lsls	r3, r3, #31
 8011dea:	d40b      	bmi.n	8011e04 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 8011dec:	4620      	mov	r0, r4
 8011dee:	f007 fb9b 	bl	8019528 <__cxa_guard_acquire>
 8011df2:	b138      	cbz	r0, 8011e04 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 8011df4:	4620      	mov	r0, r4
 8011df6:	f007 fba3 	bl	8019540 <__cxa_guard_release>
 8011dfa:	4a06      	ldr	r2, [pc, #24]	; (8011e14 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 8011dfc:	4909      	ldr	r1, [pc, #36]	; (8011e24 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x6c>)
 8011dfe:	480a      	ldr	r0, [pc, #40]	; (8011e28 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 8011e00:	f007 fb88 	bl	8019514 <__aeabi_atexit>
 8011e04:	4b05      	ldr	r3, [pc, #20]	; (8011e1c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 8011e06:	60ab      	str	r3, [r5, #8]
 8011e08:	4b07      	ldr	r3, [pc, #28]	; (8011e28 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 8011e0a:	60eb      	str	r3, [r5, #12]
 8011e0c:	bd38      	pop	{r3, r4, r5, pc}
 8011e0e:	bf00      	nop
 8011e10:	200123fc 	.word	0x200123fc
 8011e14:	20000000 	.word	0x20000000
 8011e18:	080103ed 	.word	0x080103ed
 8011e1c:	200000b0 	.word	0x200000b0
 8011e20:	20012400 	.word	0x20012400
 8011e24:	080103eb 	.word	0x080103eb
 8011e28:	200000b4 	.word	0x200000b4

08011e2c <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>:
 8011e2c:	b510      	push	{r4, lr}
 8011e2e:	4604      	mov	r4, r0
 8011e30:	f7ff ff88 	bl	8011d44 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>
 8011e34:	4620      	mov	r0, r4
 8011e36:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8011e3a:	f7ff bfbd 	b.w	8011db8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>
	...

08011e40 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>:
 8011e40:	b538      	push	{r3, r4, r5, lr}
 8011e42:	4c15      	ldr	r4, [pc, #84]	; (8011e98 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x58>)
 8011e44:	7823      	ldrb	r3, [r4, #0]
 8011e46:	f3bf 8f5b 	dmb	ish
 8011e4a:	07da      	lsls	r2, r3, #31
 8011e4c:	4605      	mov	r5, r0
 8011e4e:	d40b      	bmi.n	8011e68 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 8011e50:	4620      	mov	r0, r4
 8011e52:	f007 fb69 	bl	8019528 <__cxa_guard_acquire>
 8011e56:	b138      	cbz	r0, 8011e68 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 8011e58:	4620      	mov	r0, r4
 8011e5a:	f007 fb71 	bl	8019540 <__cxa_guard_release>
 8011e5e:	4a0f      	ldr	r2, [pc, #60]	; (8011e9c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 8011e60:	490f      	ldr	r1, [pc, #60]	; (8011ea0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x60>)
 8011e62:	4810      	ldr	r0, [pc, #64]	; (8011ea4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 8011e64:	f007 fb56 	bl	8019514 <__aeabi_atexit>
 8011e68:	4c0f      	ldr	r4, [pc, #60]	; (8011ea8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x68>)
 8011e6a:	7823      	ldrb	r3, [r4, #0]
 8011e6c:	f3bf 8f5b 	dmb	ish
 8011e70:	07db      	lsls	r3, r3, #31
 8011e72:	d40b      	bmi.n	8011e8c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 8011e74:	4620      	mov	r0, r4
 8011e76:	f007 fb57 	bl	8019528 <__cxa_guard_acquire>
 8011e7a:	b138      	cbz	r0, 8011e8c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 8011e7c:	4620      	mov	r0, r4
 8011e7e:	f007 fb5f 	bl	8019540 <__cxa_guard_release>
 8011e82:	4a06      	ldr	r2, [pc, #24]	; (8011e9c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 8011e84:	4909      	ldr	r1, [pc, #36]	; (8011eac <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x6c>)
 8011e86:	480a      	ldr	r0, [pc, #40]	; (8011eb0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 8011e88:	f007 fb44 	bl	8019514 <__aeabi_atexit>
 8011e8c:	4b05      	ldr	r3, [pc, #20]	; (8011ea4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 8011e8e:	622b      	str	r3, [r5, #32]
 8011e90:	4b07      	ldr	r3, [pc, #28]	; (8011eb0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 8011e92:	626b      	str	r3, [r5, #36]	; 0x24
 8011e94:	bd38      	pop	{r3, r4, r5, pc}
 8011e96:	bf00      	nop
 8011e98:	2001242c 	.word	0x2001242c
 8011e9c:	20000000 	.word	0x20000000
 8011ea0:	080103e1 	.word	0x080103e1
 8011ea4:	200000e0 	.word	0x200000e0
 8011ea8:	20012430 	.word	0x20012430
 8011eac:	080103df 	.word	0x080103df
 8011eb0:	200000e4 	.word	0x200000e4

08011eb4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>:
 8011eb4:	b538      	push	{r3, r4, r5, lr}
 8011eb6:	4c15      	ldr	r4, [pc, #84]	; (8011f0c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x58>)
 8011eb8:	7823      	ldrb	r3, [r4, #0]
 8011eba:	f3bf 8f5b 	dmb	ish
 8011ebe:	07da      	lsls	r2, r3, #31
 8011ec0:	4605      	mov	r5, r0
 8011ec2:	d40b      	bmi.n	8011edc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 8011ec4:	4620      	mov	r0, r4
 8011ec6:	f007 fb2f 	bl	8019528 <__cxa_guard_acquire>
 8011eca:	b138      	cbz	r0, 8011edc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 8011ecc:	4620      	mov	r0, r4
 8011ece:	f007 fb37 	bl	8019540 <__cxa_guard_release>
 8011ed2:	4a0f      	ldr	r2, [pc, #60]	; (8011f10 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 8011ed4:	490f      	ldr	r1, [pc, #60]	; (8011f14 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x60>)
 8011ed6:	4810      	ldr	r0, [pc, #64]	; (8011f18 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 8011ed8:	f007 fb1c 	bl	8019514 <__aeabi_atexit>
 8011edc:	4c0f      	ldr	r4, [pc, #60]	; (8011f1c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x68>)
 8011ede:	7823      	ldrb	r3, [r4, #0]
 8011ee0:	f3bf 8f5b 	dmb	ish
 8011ee4:	07db      	lsls	r3, r3, #31
 8011ee6:	d40b      	bmi.n	8011f00 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 8011ee8:	4620      	mov	r0, r4
 8011eea:	f007 fb1d 	bl	8019528 <__cxa_guard_acquire>
 8011eee:	b138      	cbz	r0, 8011f00 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 8011ef0:	4620      	mov	r0, r4
 8011ef2:	f007 fb25 	bl	8019540 <__cxa_guard_release>
 8011ef6:	4a06      	ldr	r2, [pc, #24]	; (8011f10 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 8011ef8:	4909      	ldr	r1, [pc, #36]	; (8011f20 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x6c>)
 8011efa:	480a      	ldr	r0, [pc, #40]	; (8011f24 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 8011efc:	f007 fb0a 	bl	8019514 <__aeabi_atexit>
 8011f00:	4b05      	ldr	r3, [pc, #20]	; (8011f18 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 8011f02:	61ab      	str	r3, [r5, #24]
 8011f04:	4b07      	ldr	r3, [pc, #28]	; (8011f24 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 8011f06:	61eb      	str	r3, [r5, #28]
 8011f08:	bd38      	pop	{r3, r4, r5, pc}
 8011f0a:	bf00      	nop
 8011f0c:	20012404 	.word	0x20012404
 8011f10:	20000000 	.word	0x20000000
 8011f14:	080103e5 	.word	0x080103e5
 8011f18:	200000b8 	.word	0x200000b8
 8011f1c:	20012408 	.word	0x20012408
 8011f20:	080103e3 	.word	0x080103e3
 8011f24:	200000bc 	.word	0x200000bc

08011f28 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>:
 8011f28:	b510      	push	{r4, lr}
 8011f2a:	4604      	mov	r4, r0
 8011f2c:	f7ff ff88 	bl	8011e40 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>
 8011f30:	4620      	mov	r0, r4
 8011f32:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8011f36:	f7ff bfbd 	b.w	8011eb4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>
	...

08011f3c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>:
 8011f3c:	b538      	push	{r3, r4, r5, lr}
 8011f3e:	4c15      	ldr	r4, [pc, #84]	; (8011f94 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x58>)
 8011f40:	7823      	ldrb	r3, [r4, #0]
 8011f42:	f3bf 8f5b 	dmb	ish
 8011f46:	07da      	lsls	r2, r3, #31
 8011f48:	4605      	mov	r5, r0
 8011f4a:	d40b      	bmi.n	8011f64 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 8011f4c:	4620      	mov	r0, r4
 8011f4e:	f007 faeb 	bl	8019528 <__cxa_guard_acquire>
 8011f52:	b138      	cbz	r0, 8011f64 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 8011f54:	4620      	mov	r0, r4
 8011f56:	f007 faf3 	bl	8019540 <__cxa_guard_release>
 8011f5a:	4a0f      	ldr	r2, [pc, #60]	; (8011f98 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 8011f5c:	490f      	ldr	r1, [pc, #60]	; (8011f9c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x60>)
 8011f5e:	4810      	ldr	r0, [pc, #64]	; (8011fa0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 8011f60:	f007 fad8 	bl	8019514 <__aeabi_atexit>
 8011f64:	4c0f      	ldr	r4, [pc, #60]	; (8011fa4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x68>)
 8011f66:	7823      	ldrb	r3, [r4, #0]
 8011f68:	f3bf 8f5b 	dmb	ish
 8011f6c:	07db      	lsls	r3, r3, #31
 8011f6e:	d40b      	bmi.n	8011f88 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 8011f70:	4620      	mov	r0, r4
 8011f72:	f007 fad9 	bl	8019528 <__cxa_guard_acquire>
 8011f76:	b138      	cbz	r0, 8011f88 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 8011f78:	4620      	mov	r0, r4
 8011f7a:	f007 fae1 	bl	8019540 <__cxa_guard_release>
 8011f7e:	4a06      	ldr	r2, [pc, #24]	; (8011f98 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 8011f80:	4909      	ldr	r1, [pc, #36]	; (8011fa8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x6c>)
 8011f82:	480a      	ldr	r0, [pc, #40]	; (8011fac <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 8011f84:	f007 fac6 	bl	8019514 <__aeabi_atexit>
 8011f88:	4b05      	ldr	r3, [pc, #20]	; (8011fa0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 8011f8a:	632b      	str	r3, [r5, #48]	; 0x30
 8011f8c:	4b07      	ldr	r3, [pc, #28]	; (8011fac <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 8011f8e:	636b      	str	r3, [r5, #52]	; 0x34
 8011f90:	bd38      	pop	{r3, r4, r5, pc}
 8011f92:	bf00      	nop
 8011f94:	2001243c 	.word	0x2001243c
 8011f98:	20000000 	.word	0x20000000
 8011f9c:	080103d9 	.word	0x080103d9
 8011fa0:	200000f0 	.word	0x200000f0
 8011fa4:	20012440 	.word	0x20012440
 8011fa8:	080103d7 	.word	0x080103d7
 8011fac:	200000f4 	.word	0x200000f4

08011fb0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>:
 8011fb0:	b538      	push	{r3, r4, r5, lr}
 8011fb2:	4c15      	ldr	r4, [pc, #84]	; (8012008 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x58>)
 8011fb4:	7823      	ldrb	r3, [r4, #0]
 8011fb6:	f3bf 8f5b 	dmb	ish
 8011fba:	07da      	lsls	r2, r3, #31
 8011fbc:	4605      	mov	r5, r0
 8011fbe:	d40b      	bmi.n	8011fd8 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 8011fc0:	4620      	mov	r0, r4
 8011fc2:	f007 fab1 	bl	8019528 <__cxa_guard_acquire>
 8011fc6:	b138      	cbz	r0, 8011fd8 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 8011fc8:	4620      	mov	r0, r4
 8011fca:	f007 fab9 	bl	8019540 <__cxa_guard_release>
 8011fce:	4a0f      	ldr	r2, [pc, #60]	; (801200c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 8011fd0:	490f      	ldr	r1, [pc, #60]	; (8012010 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x60>)
 8011fd2:	4810      	ldr	r0, [pc, #64]	; (8012014 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 8011fd4:	f007 fa9e 	bl	8019514 <__aeabi_atexit>
 8011fd8:	4c0f      	ldr	r4, [pc, #60]	; (8012018 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x68>)
 8011fda:	7823      	ldrb	r3, [r4, #0]
 8011fdc:	f3bf 8f5b 	dmb	ish
 8011fe0:	07db      	lsls	r3, r3, #31
 8011fe2:	d40b      	bmi.n	8011ffc <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 8011fe4:	4620      	mov	r0, r4
 8011fe6:	f007 fa9f 	bl	8019528 <__cxa_guard_acquire>
 8011fea:	b138      	cbz	r0, 8011ffc <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 8011fec:	4620      	mov	r0, r4
 8011fee:	f007 faa7 	bl	8019540 <__cxa_guard_release>
 8011ff2:	4a06      	ldr	r2, [pc, #24]	; (801200c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 8011ff4:	4909      	ldr	r1, [pc, #36]	; (801201c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x6c>)
 8011ff6:	480a      	ldr	r0, [pc, #40]	; (8012020 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 8011ff8:	f007 fa8c 	bl	8019514 <__aeabi_atexit>
 8011ffc:	4b05      	ldr	r3, [pc, #20]	; (8012014 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 8011ffe:	62ab      	str	r3, [r5, #40]	; 0x28
 8012000:	4b07      	ldr	r3, [pc, #28]	; (8012020 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 8012002:	62eb      	str	r3, [r5, #44]	; 0x2c
 8012004:	bd38      	pop	{r3, r4, r5, pc}
 8012006:	bf00      	nop
 8012008:	2001240c 	.word	0x2001240c
 801200c:	20000000 	.word	0x20000000
 8012010:	080103dd 	.word	0x080103dd
 8012014:	200000c0 	.word	0x200000c0
 8012018:	20012410 	.word	0x20012410
 801201c:	080103db 	.word	0x080103db
 8012020:	200000c4 	.word	0x200000c4

08012024 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>:
 8012024:	b510      	push	{r4, lr}
 8012026:	4604      	mov	r4, r0
 8012028:	f7ff ff88 	bl	8011f3c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>
 801202c:	4620      	mov	r0, r4
 801202e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8012032:	f7ff bfbd 	b.w	8011fb0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>
	...

08012038 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>:
 8012038:	b538      	push	{r3, r4, r5, lr}
 801203a:	4c15      	ldr	r4, [pc, #84]	; (8012090 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x58>)
 801203c:	7823      	ldrb	r3, [r4, #0]
 801203e:	f3bf 8f5b 	dmb	ish
 8012042:	07da      	lsls	r2, r3, #31
 8012044:	4605      	mov	r5, r0
 8012046:	d40b      	bmi.n	8012060 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 8012048:	4620      	mov	r0, r4
 801204a:	f007 fa6d 	bl	8019528 <__cxa_guard_acquire>
 801204e:	b138      	cbz	r0, 8012060 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 8012050:	4620      	mov	r0, r4
 8012052:	f007 fa75 	bl	8019540 <__cxa_guard_release>
 8012056:	4a0f      	ldr	r2, [pc, #60]	; (8012094 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 8012058:	490f      	ldr	r1, [pc, #60]	; (8012098 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x60>)
 801205a:	4810      	ldr	r0, [pc, #64]	; (801209c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 801205c:	f007 fa5a 	bl	8019514 <__aeabi_atexit>
 8012060:	4c0f      	ldr	r4, [pc, #60]	; (80120a0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x68>)
 8012062:	7823      	ldrb	r3, [r4, #0]
 8012064:	f3bf 8f5b 	dmb	ish
 8012068:	07db      	lsls	r3, r3, #31
 801206a:	d40b      	bmi.n	8012084 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 801206c:	4620      	mov	r0, r4
 801206e:	f007 fa5b 	bl	8019528 <__cxa_guard_acquire>
 8012072:	b138      	cbz	r0, 8012084 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 8012074:	4620      	mov	r0, r4
 8012076:	f007 fa63 	bl	8019540 <__cxa_guard_release>
 801207a:	4a06      	ldr	r2, [pc, #24]	; (8012094 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 801207c:	4909      	ldr	r1, [pc, #36]	; (80120a4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x6c>)
 801207e:	480a      	ldr	r0, [pc, #40]	; (80120a8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 8012080:	f007 fa48 	bl	8019514 <__aeabi_atexit>
 8012084:	4b05      	ldr	r3, [pc, #20]	; (801209c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 8012086:	652b      	str	r3, [r5, #80]	; 0x50
 8012088:	4b07      	ldr	r3, [pc, #28]	; (80120a8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 801208a:	656b      	str	r3, [r5, #84]	; 0x54
 801208c:	bd38      	pop	{r3, r4, r5, pc}
 801208e:	bf00      	nop
 8012090:	20012444 	.word	0x20012444
 8012094:	20000000 	.word	0x20000000
 8012098:	080103c9 	.word	0x080103c9
 801209c:	200000f8 	.word	0x200000f8
 80120a0:	20012448 	.word	0x20012448
 80120a4:	080103c7 	.word	0x080103c7
 80120a8:	200000fc 	.word	0x200000fc

080120ac <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>:
 80120ac:	b538      	push	{r3, r4, r5, lr}
 80120ae:	4c15      	ldr	r4, [pc, #84]	; (8012104 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x58>)
 80120b0:	7823      	ldrb	r3, [r4, #0]
 80120b2:	f3bf 8f5b 	dmb	ish
 80120b6:	07da      	lsls	r2, r3, #31
 80120b8:	4605      	mov	r5, r0
 80120ba:	d40b      	bmi.n	80120d4 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 80120bc:	4620      	mov	r0, r4
 80120be:	f007 fa33 	bl	8019528 <__cxa_guard_acquire>
 80120c2:	b138      	cbz	r0, 80120d4 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 80120c4:	4620      	mov	r0, r4
 80120c6:	f007 fa3b 	bl	8019540 <__cxa_guard_release>
 80120ca:	4a0f      	ldr	r2, [pc, #60]	; (8012108 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 80120cc:	490f      	ldr	r1, [pc, #60]	; (801210c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x60>)
 80120ce:	4810      	ldr	r0, [pc, #64]	; (8012110 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 80120d0:	f007 fa20 	bl	8019514 <__aeabi_atexit>
 80120d4:	4c0f      	ldr	r4, [pc, #60]	; (8012114 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x68>)
 80120d6:	7823      	ldrb	r3, [r4, #0]
 80120d8:	f3bf 8f5b 	dmb	ish
 80120dc:	07db      	lsls	r3, r3, #31
 80120de:	d40b      	bmi.n	80120f8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 80120e0:	4620      	mov	r0, r4
 80120e2:	f007 fa21 	bl	8019528 <__cxa_guard_acquire>
 80120e6:	b138      	cbz	r0, 80120f8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 80120e8:	4620      	mov	r0, r4
 80120ea:	f007 fa29 	bl	8019540 <__cxa_guard_release>
 80120ee:	4a06      	ldr	r2, [pc, #24]	; (8012108 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 80120f0:	4909      	ldr	r1, [pc, #36]	; (8012118 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x6c>)
 80120f2:	480a      	ldr	r0, [pc, #40]	; (801211c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 80120f4:	f007 fa0e 	bl	8019514 <__aeabi_atexit>
 80120f8:	4b05      	ldr	r3, [pc, #20]	; (8012110 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 80120fa:	64ab      	str	r3, [r5, #72]	; 0x48
 80120fc:	4b07      	ldr	r3, [pc, #28]	; (801211c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 80120fe:	64eb      	str	r3, [r5, #76]	; 0x4c
 8012100:	bd38      	pop	{r3, r4, r5, pc}
 8012102:	bf00      	nop
 8012104:	2001244c 	.word	0x2001244c
 8012108:	20000000 	.word	0x20000000
 801210c:	080103cd 	.word	0x080103cd
 8012110:	20000100 	.word	0x20000100
 8012114:	20012450 	.word	0x20012450
 8012118:	080103cb 	.word	0x080103cb
 801211c:	20000104 	.word	0x20000104

08012120 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>:
 8012120:	b538      	push	{r3, r4, r5, lr}
 8012122:	4c15      	ldr	r4, [pc, #84]	; (8012178 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x58>)
 8012124:	7823      	ldrb	r3, [r4, #0]
 8012126:	f3bf 8f5b 	dmb	ish
 801212a:	07da      	lsls	r2, r3, #31
 801212c:	4605      	mov	r5, r0
 801212e:	d40b      	bmi.n	8012148 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 8012130:	4620      	mov	r0, r4
 8012132:	f007 f9f9 	bl	8019528 <__cxa_guard_acquire>
 8012136:	b138      	cbz	r0, 8012148 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 8012138:	4620      	mov	r0, r4
 801213a:	f007 fa01 	bl	8019540 <__cxa_guard_release>
 801213e:	4a0f      	ldr	r2, [pc, #60]	; (801217c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 8012140:	490f      	ldr	r1, [pc, #60]	; (8012180 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x60>)
 8012142:	4810      	ldr	r0, [pc, #64]	; (8012184 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 8012144:	f007 f9e6 	bl	8019514 <__aeabi_atexit>
 8012148:	4c0f      	ldr	r4, [pc, #60]	; (8012188 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x68>)
 801214a:	7823      	ldrb	r3, [r4, #0]
 801214c:	f3bf 8f5b 	dmb	ish
 8012150:	07db      	lsls	r3, r3, #31
 8012152:	d40b      	bmi.n	801216c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 8012154:	4620      	mov	r0, r4
 8012156:	f007 f9e7 	bl	8019528 <__cxa_guard_acquire>
 801215a:	b138      	cbz	r0, 801216c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 801215c:	4620      	mov	r0, r4
 801215e:	f007 f9ef 	bl	8019540 <__cxa_guard_release>
 8012162:	4a06      	ldr	r2, [pc, #24]	; (801217c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 8012164:	4909      	ldr	r1, [pc, #36]	; (801218c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x6c>)
 8012166:	480a      	ldr	r0, [pc, #40]	; (8012190 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 8012168:	f007 f9d4 	bl	8019514 <__aeabi_atexit>
 801216c:	4b05      	ldr	r3, [pc, #20]	; (8012184 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 801216e:	642b      	str	r3, [r5, #64]	; 0x40
 8012170:	4b07      	ldr	r3, [pc, #28]	; (8012190 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 8012172:	646b      	str	r3, [r5, #68]	; 0x44
 8012174:	bd38      	pop	{r3, r4, r5, pc}
 8012176:	bf00      	nop
 8012178:	20012414 	.word	0x20012414
 801217c:	20000000 	.word	0x20000000
 8012180:	080103d1 	.word	0x080103d1
 8012184:	200000c8 	.word	0x200000c8
 8012188:	20012418 	.word	0x20012418
 801218c:	080103cf 	.word	0x080103cf
 8012190:	200000cc 	.word	0x200000cc

08012194 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>:
 8012194:	b538      	push	{r3, r4, r5, lr}
 8012196:	4c15      	ldr	r4, [pc, #84]	; (80121ec <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x58>)
 8012198:	7823      	ldrb	r3, [r4, #0]
 801219a:	f3bf 8f5b 	dmb	ish
 801219e:	07da      	lsls	r2, r3, #31
 80121a0:	4605      	mov	r5, r0
 80121a2:	d40b      	bmi.n	80121bc <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 80121a4:	4620      	mov	r0, r4
 80121a6:	f007 f9bf 	bl	8019528 <__cxa_guard_acquire>
 80121aa:	b138      	cbz	r0, 80121bc <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 80121ac:	4620      	mov	r0, r4
 80121ae:	f007 f9c7 	bl	8019540 <__cxa_guard_release>
 80121b2:	4a0f      	ldr	r2, [pc, #60]	; (80121f0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 80121b4:	490f      	ldr	r1, [pc, #60]	; (80121f4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x60>)
 80121b6:	4810      	ldr	r0, [pc, #64]	; (80121f8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 80121b8:	f007 f9ac 	bl	8019514 <__aeabi_atexit>
 80121bc:	4c0f      	ldr	r4, [pc, #60]	; (80121fc <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x68>)
 80121be:	7823      	ldrb	r3, [r4, #0]
 80121c0:	f3bf 8f5b 	dmb	ish
 80121c4:	07db      	lsls	r3, r3, #31
 80121c6:	d40b      	bmi.n	80121e0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 80121c8:	4620      	mov	r0, r4
 80121ca:	f007 f9ad 	bl	8019528 <__cxa_guard_acquire>
 80121ce:	b138      	cbz	r0, 80121e0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 80121d0:	4620      	mov	r0, r4
 80121d2:	f007 f9b5 	bl	8019540 <__cxa_guard_release>
 80121d6:	4a06      	ldr	r2, [pc, #24]	; (80121f0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 80121d8:	4909      	ldr	r1, [pc, #36]	; (8012200 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x6c>)
 80121da:	480a      	ldr	r0, [pc, #40]	; (8012204 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 80121dc:	f007 f99a 	bl	8019514 <__aeabi_atexit>
 80121e0:	4b05      	ldr	r3, [pc, #20]	; (80121f8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 80121e2:	63ab      	str	r3, [r5, #56]	; 0x38
 80121e4:	4b07      	ldr	r3, [pc, #28]	; (8012204 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 80121e6:	63eb      	str	r3, [r5, #60]	; 0x3c
 80121e8:	bd38      	pop	{r3, r4, r5, pc}
 80121ea:	bf00      	nop
 80121ec:	20012434 	.word	0x20012434
 80121f0:	20000000 	.word	0x20000000
 80121f4:	080103d5 	.word	0x080103d5
 80121f8:	200000e8 	.word	0x200000e8
 80121fc:	20012438 	.word	0x20012438
 8012200:	080103d3 	.word	0x080103d3
 8012204:	200000ec 	.word	0x200000ec

08012208 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>:
 8012208:	b510      	push	{r4, lr}
 801220a:	4604      	mov	r4, r0
 801220c:	f7ff ff14 	bl	8012038 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>
 8012210:	4620      	mov	r0, r4
 8012212:	f7ff ff85 	bl	8012120 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>
 8012216:	4620      	mov	r0, r4
 8012218:	f7ff ff48 	bl	80120ac <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>
 801221c:	4620      	mov	r0, r4
 801221e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8012222:	f7ff bfb7 	b.w	8012194 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>
	...

08012228 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>:
 8012228:	b538      	push	{r3, r4, r5, lr}
 801222a:	4c15      	ldr	r4, [pc, #84]	; (8012280 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x58>)
 801222c:	7823      	ldrb	r3, [r4, #0]
 801222e:	f3bf 8f5b 	dmb	ish
 8012232:	07da      	lsls	r2, r3, #31
 8012234:	4605      	mov	r5, r0
 8012236:	d40b      	bmi.n	8012250 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 8012238:	4620      	mov	r0, r4
 801223a:	f007 f975 	bl	8019528 <__cxa_guard_acquire>
 801223e:	b138      	cbz	r0, 8012250 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 8012240:	4620      	mov	r0, r4
 8012242:	f007 f97d 	bl	8019540 <__cxa_guard_release>
 8012246:	4a0f      	ldr	r2, [pc, #60]	; (8012284 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 8012248:	490f      	ldr	r1, [pc, #60]	; (8012288 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x60>)
 801224a:	4810      	ldr	r0, [pc, #64]	; (801228c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 801224c:	f007 f962 	bl	8019514 <__aeabi_atexit>
 8012250:	4c0f      	ldr	r4, [pc, #60]	; (8012290 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x68>)
 8012252:	7823      	ldrb	r3, [r4, #0]
 8012254:	f3bf 8f5b 	dmb	ish
 8012258:	07db      	lsls	r3, r3, #31
 801225a:	d40b      	bmi.n	8012274 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 801225c:	4620      	mov	r0, r4
 801225e:	f007 f963 	bl	8019528 <__cxa_guard_acquire>
 8012262:	b138      	cbz	r0, 8012274 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 8012264:	4620      	mov	r0, r4
 8012266:	f007 f96b 	bl	8019540 <__cxa_guard_release>
 801226a:	4a06      	ldr	r2, [pc, #24]	; (8012284 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 801226c:	4909      	ldr	r1, [pc, #36]	; (8012294 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x6c>)
 801226e:	480a      	ldr	r0, [pc, #40]	; (8012298 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 8012270:	f007 f950 	bl	8019514 <__aeabi_atexit>
 8012274:	4b05      	ldr	r3, [pc, #20]	; (801228c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 8012276:	662b      	str	r3, [r5, #96]	; 0x60
 8012278:	4b07      	ldr	r3, [pc, #28]	; (8012298 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 801227a:	666b      	str	r3, [r5, #100]	; 0x64
 801227c:	bd38      	pop	{r3, r4, r5, pc}
 801227e:	bf00      	nop
 8012280:	2001241c 	.word	0x2001241c
 8012284:	20000000 	.word	0x20000000
 8012288:	080103c1 	.word	0x080103c1
 801228c:	200000d0 	.word	0x200000d0
 8012290:	20012420 	.word	0x20012420
 8012294:	080103bf 	.word	0x080103bf
 8012298:	200000d4 	.word	0x200000d4

0801229c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>:
 801229c:	b538      	push	{r3, r4, r5, lr}
 801229e:	4c15      	ldr	r4, [pc, #84]	; (80122f4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x58>)
 80122a0:	7823      	ldrb	r3, [r4, #0]
 80122a2:	f3bf 8f5b 	dmb	ish
 80122a6:	07da      	lsls	r2, r3, #31
 80122a8:	4605      	mov	r5, r0
 80122aa:	d40b      	bmi.n	80122c4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 80122ac:	4620      	mov	r0, r4
 80122ae:	f007 f93b 	bl	8019528 <__cxa_guard_acquire>
 80122b2:	b138      	cbz	r0, 80122c4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 80122b4:	4620      	mov	r0, r4
 80122b6:	f007 f943 	bl	8019540 <__cxa_guard_release>
 80122ba:	4a0f      	ldr	r2, [pc, #60]	; (80122f8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 80122bc:	490f      	ldr	r1, [pc, #60]	; (80122fc <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x60>)
 80122be:	4810      	ldr	r0, [pc, #64]	; (8012300 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 80122c0:	f007 f928 	bl	8019514 <__aeabi_atexit>
 80122c4:	4c0f      	ldr	r4, [pc, #60]	; (8012304 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x68>)
 80122c6:	7823      	ldrb	r3, [r4, #0]
 80122c8:	f3bf 8f5b 	dmb	ish
 80122cc:	07db      	lsls	r3, r3, #31
 80122ce:	d40b      	bmi.n	80122e8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 80122d0:	4620      	mov	r0, r4
 80122d2:	f007 f929 	bl	8019528 <__cxa_guard_acquire>
 80122d6:	b138      	cbz	r0, 80122e8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 80122d8:	4620      	mov	r0, r4
 80122da:	f007 f931 	bl	8019540 <__cxa_guard_release>
 80122de:	4a06      	ldr	r2, [pc, #24]	; (80122f8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 80122e0:	4909      	ldr	r1, [pc, #36]	; (8012308 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x6c>)
 80122e2:	480a      	ldr	r0, [pc, #40]	; (801230c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 80122e4:	f007 f916 	bl	8019514 <__aeabi_atexit>
 80122e8:	4b05      	ldr	r3, [pc, #20]	; (8012300 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 80122ea:	65ab      	str	r3, [r5, #88]	; 0x58
 80122ec:	4b07      	ldr	r3, [pc, #28]	; (801230c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 80122ee:	65eb      	str	r3, [r5, #92]	; 0x5c
 80122f0:	bd38      	pop	{r3, r4, r5, pc}
 80122f2:	bf00      	nop
 80122f4:	200123f4 	.word	0x200123f4
 80122f8:	20000000 	.word	0x20000000
 80122fc:	080103c5 	.word	0x080103c5
 8012300:	200000a8 	.word	0x200000a8
 8012304:	200123f8 	.word	0x200123f8
 8012308:	080103c3 	.word	0x080103c3
 801230c:	200000ac 	.word	0x200000ac

08012310 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>:
 8012310:	b510      	push	{r4, lr}
 8012312:	4604      	mov	r4, r0
 8012314:	f7ff ff88 	bl	8012228 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>
 8012318:	4620      	mov	r0, r4
 801231a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801231e:	f7ff bfbd 	b.w	801229c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>
	...

08012324 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>:
 8012324:	b538      	push	{r3, r4, r5, lr}
 8012326:	4c15      	ldr	r4, [pc, #84]	; (801237c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x58>)
 8012328:	7823      	ldrb	r3, [r4, #0]
 801232a:	f3bf 8f5b 	dmb	ish
 801232e:	07da      	lsls	r2, r3, #31
 8012330:	4605      	mov	r5, r0
 8012332:	d40b      	bmi.n	801234c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 8012334:	4620      	mov	r0, r4
 8012336:	f007 f8f7 	bl	8019528 <__cxa_guard_acquire>
 801233a:	b138      	cbz	r0, 801234c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 801233c:	4620      	mov	r0, r4
 801233e:	f007 f8ff 	bl	8019540 <__cxa_guard_release>
 8012342:	4a0f      	ldr	r2, [pc, #60]	; (8012380 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 8012344:	490f      	ldr	r1, [pc, #60]	; (8012384 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x60>)
 8012346:	4810      	ldr	r0, [pc, #64]	; (8012388 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 8012348:	f007 f8e4 	bl	8019514 <__aeabi_atexit>
 801234c:	4c0f      	ldr	r4, [pc, #60]	; (801238c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x68>)
 801234e:	7823      	ldrb	r3, [r4, #0]
 8012350:	f3bf 8f5b 	dmb	ish
 8012354:	07db      	lsls	r3, r3, #31
 8012356:	d40b      	bmi.n	8012370 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 8012358:	4620      	mov	r0, r4
 801235a:	f007 f8e5 	bl	8019528 <__cxa_guard_acquire>
 801235e:	b138      	cbz	r0, 8012370 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 8012360:	4620      	mov	r0, r4
 8012362:	f007 f8ed 	bl	8019540 <__cxa_guard_release>
 8012366:	4a06      	ldr	r2, [pc, #24]	; (8012380 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 8012368:	4909      	ldr	r1, [pc, #36]	; (8012390 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x6c>)
 801236a:	480a      	ldr	r0, [pc, #40]	; (8012394 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 801236c:	f007 f8d2 	bl	8019514 <__aeabi_atexit>
 8012370:	4b05      	ldr	r3, [pc, #20]	; (8012388 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 8012372:	672b      	str	r3, [r5, #112]	; 0x70
 8012374:	4b07      	ldr	r3, [pc, #28]	; (8012394 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 8012376:	676b      	str	r3, [r5, #116]	; 0x74
 8012378:	bd38      	pop	{r3, r4, r5, pc}
 801237a:	bf00      	nop
 801237c:	200123ec 	.word	0x200123ec
 8012380:	20000000 	.word	0x20000000
 8012384:	080103b9 	.word	0x080103b9
 8012388:	200000a0 	.word	0x200000a0
 801238c:	200123f0 	.word	0x200123f0
 8012390:	080103b7 	.word	0x080103b7
 8012394:	200000a4 	.word	0x200000a4

08012398 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>:
 8012398:	b538      	push	{r3, r4, r5, lr}
 801239a:	4c15      	ldr	r4, [pc, #84]	; (80123f0 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x58>)
 801239c:	7823      	ldrb	r3, [r4, #0]
 801239e:	f3bf 8f5b 	dmb	ish
 80123a2:	07da      	lsls	r2, r3, #31
 80123a4:	4605      	mov	r5, r0
 80123a6:	d40b      	bmi.n	80123c0 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 80123a8:	4620      	mov	r0, r4
 80123aa:	f007 f8bd 	bl	8019528 <__cxa_guard_acquire>
 80123ae:	b138      	cbz	r0, 80123c0 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 80123b0:	4620      	mov	r0, r4
 80123b2:	f007 f8c5 	bl	8019540 <__cxa_guard_release>
 80123b6:	4a0f      	ldr	r2, [pc, #60]	; (80123f4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 80123b8:	490f      	ldr	r1, [pc, #60]	; (80123f8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x60>)
 80123ba:	4810      	ldr	r0, [pc, #64]	; (80123fc <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 80123bc:	f007 f8aa 	bl	8019514 <__aeabi_atexit>
 80123c0:	4c0f      	ldr	r4, [pc, #60]	; (8012400 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x68>)
 80123c2:	7823      	ldrb	r3, [r4, #0]
 80123c4:	f3bf 8f5b 	dmb	ish
 80123c8:	07db      	lsls	r3, r3, #31
 80123ca:	d40b      	bmi.n	80123e4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 80123cc:	4620      	mov	r0, r4
 80123ce:	f007 f8ab 	bl	8019528 <__cxa_guard_acquire>
 80123d2:	b138      	cbz	r0, 80123e4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 80123d4:	4620      	mov	r0, r4
 80123d6:	f007 f8b3 	bl	8019540 <__cxa_guard_release>
 80123da:	4a06      	ldr	r2, [pc, #24]	; (80123f4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 80123dc:	4909      	ldr	r1, [pc, #36]	; (8012404 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x6c>)
 80123de:	480a      	ldr	r0, [pc, #40]	; (8012408 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 80123e0:	f007 f898 	bl	8019514 <__aeabi_atexit>
 80123e4:	4b05      	ldr	r3, [pc, #20]	; (80123fc <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 80123e6:	66ab      	str	r3, [r5, #104]	; 0x68
 80123e8:	4b07      	ldr	r3, [pc, #28]	; (8012408 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 80123ea:	66eb      	str	r3, [r5, #108]	; 0x6c
 80123ec:	bd38      	pop	{r3, r4, r5, pc}
 80123ee:	bf00      	nop
 80123f0:	200123e4 	.word	0x200123e4
 80123f4:	20000000 	.word	0x20000000
 80123f8:	080103bd 	.word	0x080103bd
 80123fc:	20000098 	.word	0x20000098
 8012400:	200123e8 	.word	0x200123e8
 8012404:	080103bb 	.word	0x080103bb
 8012408:	2000009c 	.word	0x2000009c

0801240c <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>:
 801240c:	b510      	push	{r4, lr}
 801240e:	4604      	mov	r4, r0
 8012410:	f7ff ff88 	bl	8012324 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>
 8012414:	4620      	mov	r0, r4
 8012416:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801241a:	f7ff bfbd 	b.w	8012398 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>

0801241e <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>:
 801241e:	b510      	push	{r4, lr}
 8012420:	4604      	mov	r4, r0
 8012422:	f7ff fff3 	bl	801240c <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>
 8012426:	4620      	mov	r0, r4
 8012428:	f7ff ff72 	bl	8012310 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>
 801242c:	4620      	mov	r0, r4
 801242e:	f7ff fdf9 	bl	8012024 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>
 8012432:	4620      	mov	r0, r4
 8012434:	f7ff fcfa 	bl	8011e2c <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>
 8012438:	4620      	mov	r0, r4
 801243a:	f7ff fd75 	bl	8011f28 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>
 801243e:	4620      	mov	r0, r4
 8012440:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8012444:	f7ff bee0 	b.w	8012208 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>

08012448 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>:
 8012448:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801244c:	e9dd 4e0c 	ldrd	r4, lr, [sp, #48]	; 0x30
 8012450:	f9bd 8028 	ldrsh.w	r8, [sp, #40]	; 0x28
 8012454:	f9bd b02c 	ldrsh.w	fp, [sp, #44]	; 0x2c
 8012458:	f89d 6038 	ldrb.w	r6, [sp, #56]	; 0x38
 801245c:	f89d c03c 	ldrb.w	ip, [sp, #60]	; 0x3c
 8012460:	f89d 5040 	ldrb.w	r5, [sp, #64]	; 0x40
 8012464:	8808      	ldrh	r0, [r1, #0]
 8012466:	fb0e 4708 	mla	r7, lr, r8, r4
 801246a:	f1be 0f00 	cmp.w	lr, #0
 801246e:	eb02 0a07 	add.w	sl, r2, r7
 8012472:	db37      	blt.n	80124e4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x9c>
 8012474:	45f3      	cmp	fp, lr
 8012476:	dd35      	ble.n	80124e4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x9c>
 8012478:	2c00      	cmp	r4, #0
 801247a:	db31      	blt.n	80124e0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x98>
 801247c:	45a0      	cmp	r8, r4
 801247e:	dd2f      	ble.n	80124e0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x98>
 8012480:	5dd2      	ldrb	r2, [r2, r7]
 8012482:	f833 9012 	ldrh.w	r9, [r3, r2, lsl #1]
 8012486:	1c62      	adds	r2, r4, #1
 8012488:	d42f      	bmi.n	80124ea <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa2>
 801248a:	4590      	cmp	r8, r2
 801248c:	dd2d      	ble.n	80124ea <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa2>
 801248e:	b366      	cbz	r6, 80124ea <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa2>
 8012490:	f89a 2001 	ldrb.w	r2, [sl, #1]
 8012494:	f833 7012 	ldrh.w	r7, [r3, r2, lsl #1]
 8012498:	f11e 0e01 	adds.w	lr, lr, #1
 801249c:	d429      	bmi.n	80124f2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xaa>
 801249e:	45f3      	cmp	fp, lr
 80124a0:	dd27      	ble.n	80124f2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xaa>
 80124a2:	f1bc 0f00 	cmp.w	ip, #0
 80124a6:	f000 80a0 	beq.w	80125ea <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a2>
 80124aa:	2c00      	cmp	r4, #0
 80124ac:	db1f      	blt.n	80124ee <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>
 80124ae:	45a0      	cmp	r8, r4
 80124b0:	dd1d      	ble.n	80124ee <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>
 80124b2:	f81a 2008 	ldrb.w	r2, [sl, r8]
 80124b6:	f833 e012 	ldrh.w	lr, [r3, r2, lsl #1]
 80124ba:	3401      	adds	r4, #1
 80124bc:	d41c      	bmi.n	80124f8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xb0>
 80124be:	45a0      	cmp	r8, r4
 80124c0:	dd1a      	ble.n	80124f8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xb0>
 80124c2:	b1de      	cbz	r6, 80124fc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xb4>
 80124c4:	44d0      	add	r8, sl
 80124c6:	f898 2001 	ldrb.w	r2, [r8, #1]
 80124ca:	f833 3012 	ldrh.w	r3, [r3, r2, lsl #1]
 80124ce:	2e0f      	cmp	r6, #15
 80124d0:	d915      	bls.n	80124fe <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xb6>
 80124d2:	4b49      	ldr	r3, [pc, #292]	; (80125f8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1b0>)
 80124d4:	4a49      	ldr	r2, [pc, #292]	; (80125fc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1b4>)
 80124d6:	484a      	ldr	r0, [pc, #296]	; (8012600 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1b8>)
 80124d8:	f240 11ef 	movw	r1, #495	; 0x1ef
 80124dc:	f007 f84e 	bl	801957c <__assert_func>
 80124e0:	4681      	mov	r9, r0
 80124e2:	e7d0      	b.n	8012486 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x3e>
 80124e4:	4607      	mov	r7, r0
 80124e6:	4681      	mov	r9, r0
 80124e8:	e7d6      	b.n	8012498 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x50>
 80124ea:	4607      	mov	r7, r0
 80124ec:	e7d4      	b.n	8012498 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x50>
 80124ee:	4686      	mov	lr, r0
 80124f0:	e7e3      	b.n	80124ba <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x72>
 80124f2:	4603      	mov	r3, r0
 80124f4:	4686      	mov	lr, r0
 80124f6:	e7ea      	b.n	80124ce <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x86>
 80124f8:	4603      	mov	r3, r0
 80124fa:	e7e8      	b.n	80124ce <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x86>
 80124fc:	4603      	mov	r3, r0
 80124fe:	f1bc 0f0f 	cmp.w	ip, #15
 8012502:	d8e6      	bhi.n	80124d2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x8a>
 8012504:	ea4f 4409 	mov.w	r4, r9, lsl #16
 8012508:	fb16 f80c 	smulbb	r8, r6, ip
 801250c:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8012510:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 8012514:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8012518:	ea4f 08e8 	mov.w	r8, r8, asr #3
 801251c:	ea44 0909 	orr.w	r9, r4, r9
 8012520:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8012524:	f1cc 0410 	rsb	r4, ip, #16
 8012528:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 801252c:	1ba4      	subs	r4, r4, r6
 801252e:	041a      	lsls	r2, r3, #16
 8012530:	ebc8 0646 	rsb	r6, r8, r6, lsl #1
 8012534:	ea4a 0707 	orr.w	r7, sl, r7
 8012538:	4377      	muls	r7, r6
 801253a:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801253e:	eb08 0444 	add.w	r4, r8, r4, lsl #1
 8012542:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8012546:	fb04 7409 	mla	r4, r4, r9, r7
 801254a:	4313      	orrs	r3, r2
 801254c:	ea4f 420e 	mov.w	r2, lr, lsl #16
 8012550:	fb08 4303 	mla	r3, r8, r3, r4
 8012554:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8012558:	f42e 64fc 	bic.w	r4, lr, #2016	; 0x7e0
 801255c:	4322      	orrs	r2, r4
 801255e:	ebc8 0c4c 	rsb	ip, r8, ip, lsl #1
 8012562:	fb0c 3202 	mla	r2, ip, r2, r3
 8012566:	0d53      	lsrs	r3, r2, #21
 8012568:	0952      	lsrs	r2, r2, #5
 801256a:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801256e:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8012572:	431a      	orrs	r2, r3
 8012574:	b293      	uxth	r3, r2
 8012576:	b2af      	uxth	r7, r5
 8012578:	1202      	asrs	r2, r0, #8
 801257a:	43ed      	mvns	r5, r5
 801257c:	b2ed      	uxtb	r5, r5
 801257e:	ea4f 2c23 	mov.w	ip, r3, asr #8
 8012582:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8012586:	fb12 f205 	smulbb	r2, r2, r5
 801258a:	10c6      	asrs	r6, r0, #3
 801258c:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8012590:	fb0c 2c07 	mla	ip, ip, r7, r2
 8012594:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8012598:	10da      	asrs	r2, r3, #3
 801259a:	fb16 f605 	smulbb	r6, r6, r5
 801259e:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 80125a2:	fb02 6207 	mla	r2, r2, r7, r6
 80125a6:	b296      	uxth	r6, r2
 80125a8:	00c2      	lsls	r2, r0, #3
 80125aa:	00dc      	lsls	r4, r3, #3
 80125ac:	b2d2      	uxtb	r2, r2
 80125ae:	b2e4      	uxtb	r4, r4
 80125b0:	fb12 f205 	smulbb	r2, r2, r5
 80125b4:	fb04 2207 	mla	r2, r4, r7, r2
 80125b8:	fa1f fc8c 	uxth.w	ip, ip
 80125bc:	b292      	uxth	r2, r2
 80125be:	f10c 0301 	add.w	r3, ip, #1
 80125c2:	1c50      	adds	r0, r2, #1
 80125c4:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 80125c8:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 80125cc:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 80125d0:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 80125d4:	4313      	orrs	r3, r2
 80125d6:	1c72      	adds	r2, r6, #1
 80125d8:	eb02 2216 	add.w	r2, r2, r6, lsr #8
 80125dc:	0952      	lsrs	r2, r2, #5
 80125de:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80125e2:	4313      	orrs	r3, r2
 80125e4:	800b      	strh	r3, [r1, #0]
 80125e6:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80125ea:	2e0f      	cmp	r6, #15
 80125ec:	f63f af71 	bhi.w	80124d2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x8a>
 80125f0:	4603      	mov	r3, r0
 80125f2:	4686      	mov	lr, r0
 80125f4:	e786      	b.n	8012504 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xbc>
 80125f6:	bf00      	nop
 80125f8:	0801d2ad 	.word	0x0801d2ad
 80125fc:	0801d8ae 	.word	0x0801d8ae
 8012600:	0801d335 	.word	0x0801d335

08012604 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 8012604:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012608:	ed2d 8b08 	vpush	{d8-d11}
 801260c:	b09b      	sub	sp, #108	; 0x6c
 801260e:	e9dd 982d 	ldrd	r9, r8, [sp, #180]	; 0xb4
 8012612:	9309      	str	r3, [sp, #36]	; 0x24
 8012614:	f9bd 30d4 	ldrsh.w	r3, [sp, #212]	; 0xd4
 8012618:	9e31      	ldr	r6, [sp, #196]	; 0xc4
 801261a:	930a      	str	r3, [sp, #40]	; 0x28
 801261c:	f89d 30dc 	ldrb.w	r3, [sp, #220]	; 0xdc
 8012620:	930e      	str	r3, [sp, #56]	; 0x38
 8012622:	910d      	str	r1, [sp, #52]	; 0x34
 8012624:	e9dd 1332 	ldrd	r1, r3, [sp, #200]	; 0xc8
 8012628:	9018      	str	r0, [sp, #96]	; 0x60
 801262a:	6870      	ldr	r0, [r6, #4]
 801262c:	9217      	str	r2, [sp, #92]	; 0x5c
 801262e:	fb00 1303 	mla	r3, r0, r3, r1
 8012632:	9a36      	ldr	r2, [sp, #216]	; 0xd8
 8012634:	6831      	ldr	r1, [r6, #0]
 8012636:	6856      	ldr	r6, [r2, #4]
 8012638:	f9bd 40d0 	ldrsh.w	r4, [sp, #208]	; 0xd0
 801263c:	eb01 0a43 	add.w	sl, r1, r3, lsl #1
 8012640:	6813      	ldr	r3, [r2, #0]
 8012642:	930c      	str	r3, [sp, #48]	; 0x30
 8012644:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8012646:	43db      	mvns	r3, r3
 8012648:	b2db      	uxtb	r3, r3
 801264a:	eeb0 aa40 	vmov.f32	s20, s0
 801264e:	eef0 9a60 	vmov.f32	s19, s1
 8012652:	eeb0 9a41 	vmov.f32	s18, s2
 8012656:	eeb0 8a62 	vmov.f32	s16, s5
 801265a:	eef0 8a43 	vmov.f32	s17, s6
 801265e:	eef0 ba44 	vmov.f32	s23, s8
 8012662:	eeb0 ba64 	vmov.f32	s22, s9
 8012666:	eef0 aa45 	vmov.f32	s21, s10
 801266a:	3604      	adds	r6, #4
 801266c:	930b      	str	r3, [sp, #44]	; 0x2c
 801266e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8012670:	2b00      	cmp	r3, #0
 8012672:	dc03      	bgt.n	801267c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x78>
 8012674:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8012676:	2b00      	cmp	r3, #0
 8012678:	f340 8215 	ble.w	8012aa6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4a2>
 801267c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801267e:	2b00      	cmp	r3, #0
 8012680:	f340 8102 	ble.w	8012888 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x284>
 8012684:	ea5f 4229 	movs.w	r2, r9, asr #16
 8012688:	ea4f 4328 	mov.w	r3, r8, asr #16
 801268c:	d42c      	bmi.n	80126e8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe4>
 801268e:	1c51      	adds	r1, r2, #1
 8012690:	428c      	cmp	r4, r1
 8012692:	dd2c      	ble.n	80126ee <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xea>
 8012694:	2b00      	cmp	r3, #0
 8012696:	db2a      	blt.n	80126ee <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xea>
 8012698:	980a      	ldr	r0, [sp, #40]	; 0x28
 801269a:	1c59      	adds	r1, r3, #1
 801269c:	4288      	cmp	r0, r1
 801269e:	dd26      	ble.n	80126ee <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xea>
 80126a0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80126a2:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 80126a4:	3b01      	subs	r3, #1
 80126a6:	fb02 9203 	mla	r2, r2, r3, r9
 80126aa:	1412      	asrs	r2, r2, #16
 80126ac:	d429      	bmi.n	8012702 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfe>
 80126ae:	3201      	adds	r2, #1
 80126b0:	4294      	cmp	r4, r2
 80126b2:	dd26      	ble.n	8012702 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfe>
 80126b4:	9a30      	ldr	r2, [sp, #192]	; 0xc0
 80126b6:	fb02 8303 	mla	r3, r2, r3, r8
 80126ba:	141b      	asrs	r3, r3, #16
 80126bc:	d421      	bmi.n	8012702 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfe>
 80126be:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80126c0:	3301      	adds	r3, #1
 80126c2:	429a      	cmp	r2, r3
 80126c4:	dd1d      	ble.n	8012702 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfe>
 80126c6:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 80126ca:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
 80126ce:	f8cd a03c 	str.w	sl, [sp, #60]	; 0x3c
 80126d2:	9312      	str	r3, [sp, #72]	; 0x48
 80126d4:	f1be 0f00 	cmp.w	lr, #0
 80126d8:	f300 8138 	bgt.w	801294c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x348>
 80126dc:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80126de:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 80126e2:	eb0a 0a45 	add.w	sl, sl, r5, lsl #1
 80126e6:	e0d1      	b.n	801288c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x288>
 80126e8:	1c51      	adds	r1, r2, #1
 80126ea:	f040 80c3 	bne.w	8012874 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x270>
 80126ee:	42a2      	cmp	r2, r4
 80126f0:	f280 80c0 	bge.w	8012874 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x270>
 80126f4:	1c5f      	adds	r7, r3, #1
 80126f6:	f2c0 80bd 	blt.w	8012874 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x270>
 80126fa:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80126fc:	4293      	cmp	r3, r2
 80126fe:	f280 80b9 	bge.w	8012874 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x270>
 8012702:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 8012706:	4657      	mov	r7, sl
 8012708:	f1bb 0f00 	cmp.w	fp, #0
 801270c:	dde6      	ble.n	80126dc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xd8>
 801270e:	ea5f 4229 	movs.w	r2, r9, asr #16
 8012712:	ea4f 4328 	mov.w	r3, r8, asr #16
 8012716:	f3c9 3003 	ubfx	r0, r9, #12, #4
 801271a:	f3c8 3103 	ubfx	r1, r8, #12, #4
 801271e:	f100 80fc 	bmi.w	801291a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x316>
 8012722:	f102 0c01 	add.w	ip, r2, #1
 8012726:	4564      	cmp	r4, ip
 8012728:	f340 80f9 	ble.w	801291e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x31a>
 801272c:	2b00      	cmp	r3, #0
 801272e:	f2c0 80f6 	blt.w	801291e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x31a>
 8012732:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 8012734:	f103 0c01 	add.w	ip, r3, #1
 8012738:	4565      	cmp	r5, ip
 801273a:	f340 80f0 	ble.w	801291e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x31a>
 801273e:	fb03 2304 	mla	r3, r3, r4, r2
 8012742:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8012744:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8012746:	441a      	add	r2, r3
 8012748:	5ceb      	ldrb	r3, [r5, r3]
 801274a:	f836 e013 	ldrh.w	lr, [r6, r3, lsl #1]
 801274e:	2800      	cmp	r0, #0
 8012750:	f000 80db 	beq.w	801290a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x306>
 8012754:	7853      	ldrb	r3, [r2, #1]
 8012756:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801275a:	9313      	str	r3, [sp, #76]	; 0x4c
 801275c:	b141      	cbz	r1, 8012770 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x16c>
 801275e:	1913      	adds	r3, r2, r4
 8012760:	5d12      	ldrb	r2, [r2, r4]
 8012762:	785b      	ldrb	r3, [r3, #1]
 8012764:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 8012768:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801276c:	9210      	str	r2, [sp, #64]	; 0x40
 801276e:	9314      	str	r3, [sp, #80]	; 0x50
 8012770:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8012772:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8012774:	fb10 f201 	smulbb	r2, r0, r1
 8012778:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801277c:	10d2      	asrs	r2, r2, #3
 801277e:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8012782:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8012786:	ea4c 0c03 	orr.w	ip, ip, r3
 801278a:	ebc2 0340 	rsb	r3, r2, r0, lsl #1
 801278e:	930f      	str	r3, [sp, #60]	; 0x3c
 8012790:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8012792:	041b      	lsls	r3, r3, #16
 8012794:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 8012798:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801279c:	432b      	orrs	r3, r5
 801279e:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 80127a0:	4353      	muls	r3, r2
 80127a2:	fb05 330c 	mla	r3, r5, ip, r3
 80127a6:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 80127aa:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 80127ae:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 80127b2:	ea4c 0e0e 	orr.w	lr, ip, lr
 80127b6:	f1c1 0c10 	rsb	ip, r1, #16
 80127ba:	ebac 0c00 	sub.w	ip, ip, r0
 80127be:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 80127c2:	fb0c 3c0e 	mla	ip, ip, lr, r3
 80127c6:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80127c8:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 80127ca:	0418      	lsls	r0, r3, #16
 80127cc:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 80127d0:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 80127d4:	4318      	orrs	r0, r3
 80127d6:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 80127da:	fb02 c200 	mla	r2, r2, r0, ip
 80127de:	0d53      	lsrs	r3, r2, #21
 80127e0:	0952      	lsrs	r2, r2, #5
 80127e2:	f8b7 c000 	ldrh.w	ip, [r7]
 80127e6:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80127ea:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80127ee:	431a      	orrs	r2, r3
 80127f0:	b292      	uxth	r2, r2
 80127f2:	ea4f 212c 	mov.w	r1, ip, asr #8
 80127f6:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 80127fa:	1210      	asrs	r0, r2, #8
 80127fc:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8012800:	fb11 f105 	smulbb	r1, r1, r5
 8012804:	ea4f 0eec 	mov.w	lr, ip, asr #3
 8012808:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801280c:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8012810:	fb00 1003 	mla	r0, r0, r3, r1
 8012814:	fa5f fc8c 	uxtb.w	ip, ip
 8012818:	10d1      	asrs	r1, r2, #3
 801281a:	00d2      	lsls	r2, r2, #3
 801281c:	fb1c fc05 	smulbb	ip, ip, r5
 8012820:	b2d2      	uxtb	r2, r2
 8012822:	fb02 c203 	mla	r2, r2, r3, ip
 8012826:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 801282a:	b280      	uxth	r0, r0
 801282c:	b292      	uxth	r2, r2
 801282e:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8012832:	fb1e fe05 	smulbb	lr, lr, r5
 8012836:	fb01 e103 	mla	r1, r1, r3, lr
 801283a:	f102 0c01 	add.w	ip, r2, #1
 801283e:	1c43      	adds	r3, r0, #1
 8012840:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8012844:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 8012848:	b289      	uxth	r1, r1
 801284a:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801284e:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 8012852:	4313      	orrs	r3, r2
 8012854:	1c4a      	adds	r2, r1, #1
 8012856:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801285a:	0949      	lsrs	r1, r1, #5
 801285c:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8012860:	430b      	orrs	r3, r1
 8012862:	803b      	strh	r3, [r7, #0]
 8012864:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
 8012866:	4499      	add	r9, r3
 8012868:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801286a:	3702      	adds	r7, #2
 801286c:	4498      	add	r8, r3
 801286e:	f10b 3bff 	add.w	fp, fp, #4294967295
 8012872:	e749      	b.n	8012708 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x104>
 8012874:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
 8012876:	4499      	add	r9, r3
 8012878:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801287a:	4498      	add	r8, r3
 801287c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801287e:	3b01      	subs	r3, #1
 8012880:	9309      	str	r3, [sp, #36]	; 0x24
 8012882:	f10a 0a02 	add.w	sl, sl, #2
 8012886:	e6f9      	b.n	801267c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x78>
 8012888:	f47f af0a 	bne.w	80126a0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9c>
 801288c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801288e:	2b00      	cmp	r3, #0
 8012890:	f340 8109 	ble.w	8012aa6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4a2>
 8012894:	ee3a aa2b 	vadd.f32	s20, s20, s23
 8012898:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801289c:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 80128a0:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80128a2:	ee79 9a8b 	vadd.f32	s19, s19, s22
 80128a6:	ee39 9a2a 	vadd.f32	s18, s18, s21
 80128aa:	ee29 7aa7 	vmul.f32	s14, s19, s15
 80128ae:	eef0 6a48 	vmov.f32	s13, s16
 80128b2:	ee69 7a27 	vmul.f32	s15, s18, s15
 80128b6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80128ba:	ee37 8a48 	vsub.f32	s16, s14, s16
 80128be:	ee16 9a90 	vmov	r9, s13
 80128c2:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 80128c6:	eef0 6a68 	vmov.f32	s13, s17
 80128ca:	ee77 8ae8 	vsub.f32	s17, s15, s17
 80128ce:	ee18 2a10 	vmov	r2, s16
 80128d2:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 80128d6:	fb92 f3f3 	sdiv	r3, r2, r3
 80128da:	ee18 2a90 	vmov	r2, s17
 80128de:	932f      	str	r3, [sp, #188]	; 0xbc
 80128e0:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80128e2:	fb92 f3f3 	sdiv	r3, r2, r3
 80128e6:	9330      	str	r3, [sp, #192]	; 0xc0
 80128e8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80128ea:	9a17      	ldr	r2, [sp, #92]	; 0x5c
 80128ec:	3b01      	subs	r3, #1
 80128ee:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80128f2:	930d      	str	r3, [sp, #52]	; 0x34
 80128f4:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80128f6:	bf08      	it	eq
 80128f8:	4613      	moveq	r3, r2
 80128fa:	ee16 8a90 	vmov	r8, s13
 80128fe:	9309      	str	r3, [sp, #36]	; 0x24
 8012900:	eef0 8a67 	vmov.f32	s17, s15
 8012904:	eeb0 8a47 	vmov.f32	s16, s14
 8012908:	e6b1      	b.n	801266e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6a>
 801290a:	2900      	cmp	r1, #0
 801290c:	f43f af30 	beq.w	8012770 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x16c>
 8012910:	5d13      	ldrb	r3, [r2, r4]
 8012912:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8012916:	9310      	str	r3, [sp, #64]	; 0x40
 8012918:	e72a      	b.n	8012770 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x16c>
 801291a:	1c55      	adds	r5, r2, #1
 801291c:	d1a2      	bne.n	8012864 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x260>
 801291e:	4294      	cmp	r4, r2
 8012920:	dda0      	ble.n	8012864 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x260>
 8012922:	1c5d      	adds	r5, r3, #1
 8012924:	db9e      	blt.n	8012864 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x260>
 8012926:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 8012928:	429d      	cmp	r5, r3
 801292a:	dd9b      	ble.n	8012864 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x260>
 801292c:	e9cd 3003 	strd	r3, r0, [sp, #12]
 8012930:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8012932:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8012934:	9202      	str	r2, [sp, #8]
 8012936:	e9cd 1505 	strd	r1, r5, [sp, #20]
 801293a:	e9cd 4300 	strd	r4, r3, [sp]
 801293e:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8012940:	9818      	ldr	r0, [sp, #96]	; 0x60
 8012942:	4633      	mov	r3, r6
 8012944:	4639      	mov	r1, r7
 8012946:	f7ff fd7f 	bl	8012448 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>
 801294a:	e78b      	b.n	8012864 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x260>
 801294c:	ea4f 4329 	mov.w	r3, r9, asr #16
 8012950:	ea4f 4228 	mov.w	r2, r8, asr #16
 8012954:	fb04 3202 	mla	r2, r4, r2, r3
 8012958:	990c      	ldr	r1, [sp, #48]	; 0x30
 801295a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801295c:	4413      	add	r3, r2
 801295e:	5c8a      	ldrb	r2, [r1, r2]
 8012960:	f3c9 3c03 	ubfx	ip, r9, #12, #4
 8012964:	f3c8 3003 	ubfx	r0, r8, #12, #4
 8012968:	f836 1012 	ldrh.w	r1, [r6, r2, lsl #1]
 801296c:	f1bc 0f00 	cmp.w	ip, #0
 8012970:	f000 8091 	beq.w	8012a96 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x492>
 8012974:	785a      	ldrb	r2, [r3, #1]
 8012976:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 801297a:	9215      	str	r2, [sp, #84]	; 0x54
 801297c:	b140      	cbz	r0, 8012990 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x38c>
 801297e:	191a      	adds	r2, r3, r4
 8012980:	5d1b      	ldrb	r3, [r3, r4]
 8012982:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8012986:	9311      	str	r3, [sp, #68]	; 0x44
 8012988:	7853      	ldrb	r3, [r2, #1]
 801298a:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801298e:	9316      	str	r3, [sp, #88]	; 0x58
 8012990:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8012992:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8012994:	fb1c f200 	smulbb	r2, ip, r0
 8012998:	041f      	lsls	r7, r3, #16
 801299a:	10d2      	asrs	r2, r2, #3
 801299c:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 80129a0:	f007 67fc 	and.w	r7, r7, #132120576	; 0x7e00000
 80129a4:	431f      	orrs	r7, r3
 80129a6:	ebc2 034c 	rsb	r3, r2, ip, lsl #1
 80129aa:	9319      	str	r3, [sp, #100]	; 0x64
 80129ac:	9b16      	ldr	r3, [sp, #88]	; 0x58
 80129ae:	041b      	lsls	r3, r3, #16
 80129b0:	f425 6bfc 	bic.w	fp, r5, #2016	; 0x7e0
 80129b4:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 80129b8:	ea43 030b 	orr.w	r3, r3, fp
 80129bc:	9d19      	ldr	r5, [sp, #100]	; 0x64
 80129be:	4353      	muls	r3, r2
 80129c0:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 80129c4:	fb05 3707 	mla	r7, r5, r7, r3
 80129c8:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 80129cc:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
 80129d0:	ea43 0b01 	orr.w	fp, r3, r1
 80129d4:	f1c0 0110 	rsb	r1, r0, #16
 80129d8:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80129da:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 80129dc:	eba1 0c0c 	sub.w	ip, r1, ip
 80129e0:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 80129e4:	fb0c 770b 	mla	r7, ip, fp, r7
 80129e8:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 80129ec:	f423 6bfc 	bic.w	fp, r3, #2016	; 0x7e0
 80129f0:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 80129f4:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 80129f8:	ea4c 0c0b 	orr.w	ip, ip, fp
 80129fc:	fb02 770c 	mla	r7, r2, ip, r7
 8012a00:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8012a02:	0d79      	lsrs	r1, r7, #21
 8012a04:	8812      	ldrh	r2, [r2, #0]
 8012a06:	097f      	lsrs	r7, r7, #5
 8012a08:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8012a0c:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8012a10:	430f      	orrs	r7, r1
 8012a12:	1211      	asrs	r1, r2, #8
 8012a14:	b2bb      	uxth	r3, r7
 8012a16:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8012a1a:	fb11 f105 	smulbb	r1, r1, r5
 8012a1e:	1218      	asrs	r0, r3, #8
 8012a20:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8012a22:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8012a26:	fb00 1005 	mla	r0, r0, r5, r1
 8012a2a:	10d7      	asrs	r7, r2, #3
 8012a2c:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8012a2e:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8012a32:	fb17 f705 	smulbb	r7, r7, r5
 8012a36:	10d9      	asrs	r1, r3, #3
 8012a38:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8012a3a:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8012a3e:	fb01 7105 	mla	r1, r1, r5, r7
 8012a42:	00d2      	lsls	r2, r2, #3
 8012a44:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8012a46:	b2d2      	uxtb	r2, r2
 8012a48:	fb12 f205 	smulbb	r2, r2, r5
 8012a4c:	00db      	lsls	r3, r3, #3
 8012a4e:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8012a50:	b2db      	uxtb	r3, r3
 8012a52:	b280      	uxth	r0, r0
 8012a54:	fb03 2305 	mla	r3, r3, r5, r2
 8012a58:	b29b      	uxth	r3, r3
 8012a5a:	b289      	uxth	r1, r1
 8012a5c:	1c42      	adds	r2, r0, #1
 8012a5e:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8012a62:	1c4f      	adds	r7, r1, #1
 8012a64:	1c5a      	adds	r2, r3, #1
 8012a66:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8012a6a:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 8012a6e:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 8012a72:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8012a76:	0949      	lsrs	r1, r1, #5
 8012a78:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8012a7a:	4310      	orrs	r0, r2
 8012a7c:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8012a80:	4308      	orrs	r0, r1
 8012a82:	f823 0b02 	strh.w	r0, [r3], #2
 8012a86:	930f      	str	r3, [sp, #60]	; 0x3c
 8012a88:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
 8012a8a:	4499      	add	r9, r3
 8012a8c:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8012a8e:	f10e 3eff 	add.w	lr, lr, #4294967295
 8012a92:	4498      	add	r8, r3
 8012a94:	e61e      	b.n	80126d4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xd0>
 8012a96:	2800      	cmp	r0, #0
 8012a98:	f43f af7a 	beq.w	8012990 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x38c>
 8012a9c:	5d1b      	ldrb	r3, [r3, r4]
 8012a9e:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8012aa2:	9311      	str	r3, [sp, #68]	; 0x44
 8012aa4:	e774      	b.n	8012990 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x38c>
 8012aa6:	b01b      	add	sp, #108	; 0x6c
 8012aa8:	ecbd 8b08 	vpop	{d8-d11}
 8012aac:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08012ab0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 8012ab0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8012ab4:	e9dd 560a 	ldrd	r5, r6, [sp, #40]	; 0x28
 8012ab8:	f9bd e020 	ldrsh.w	lr, [sp, #32]
 8012abc:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 8012ac0:	f89d 4030 	ldrb.w	r4, [sp, #48]	; 0x30
 8012ac4:	f89d c034 	ldrb.w	ip, [sp, #52]	; 0x34
 8012ac8:	8808      	ldrh	r0, [r1, #0]
 8012aca:	fb06 570e 	mla	r7, r6, lr, r5
 8012ace:	2e00      	cmp	r6, #0
 8012ad0:	eb02 0807 	add.w	r8, r2, r7
 8012ad4:	db38      	blt.n	8012b48 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x98>
 8012ad6:	45b1      	cmp	r9, r6
 8012ad8:	dd36      	ble.n	8012b48 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x98>
 8012ada:	2d00      	cmp	r5, #0
 8012adc:	db32      	blt.n	8012b44 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x94>
 8012ade:	45ae      	cmp	lr, r5
 8012ae0:	dd30      	ble.n	8012b44 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x94>
 8012ae2:	5dd2      	ldrb	r2, [r2, r7]
 8012ae4:	f833 7012 	ldrh.w	r7, [r3, r2, lsl #1]
 8012ae8:	1c6a      	adds	r2, r5, #1
 8012aea:	d430      	bmi.n	8012b4e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x9e>
 8012aec:	4596      	cmp	lr, r2
 8012aee:	dd2e      	ble.n	8012b4e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x9e>
 8012af0:	b36c      	cbz	r4, 8012b4e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x9e>
 8012af2:	f898 2001 	ldrb.w	r2, [r8, #1]
 8012af6:	f833 2012 	ldrh.w	r2, [r3, r2, lsl #1]
 8012afa:	3601      	adds	r6, #1
 8012afc:	d42b      	bmi.n	8012b56 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xa6>
 8012afe:	45b1      	cmp	r9, r6
 8012b00:	dd29      	ble.n	8012b56 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xa6>
 8012b02:	f1bc 0f00 	cmp.w	ip, #0
 8012b06:	d028      	beq.n	8012b5a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xaa>
 8012b08:	2d00      	cmp	r5, #0
 8012b0a:	db22      	blt.n	8012b52 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xa2>
 8012b0c:	45ae      	cmp	lr, r5
 8012b0e:	dd20      	ble.n	8012b52 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xa2>
 8012b10:	f818 600e 	ldrb.w	r6, [r8, lr]
 8012b14:	f833 6016 	ldrh.w	r6, [r3, r6, lsl #1]
 8012b18:	3501      	adds	r5, #1
 8012b1a:	d407      	bmi.n	8012b2c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7c>
 8012b1c:	45ae      	cmp	lr, r5
 8012b1e:	dd05      	ble.n	8012b2c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7c>
 8012b20:	b134      	cbz	r4, 8012b30 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 8012b22:	44c6      	add	lr, r8
 8012b24:	f89e 0001 	ldrb.w	r0, [lr, #1]
 8012b28:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 8012b2c:	2c0f      	cmp	r4, #15
 8012b2e:	d802      	bhi.n	8012b36 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x86>
 8012b30:	f1bc 0f0f 	cmp.w	ip, #15
 8012b34:	d914      	bls.n	8012b60 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xb0>
 8012b36:	4b26      	ldr	r3, [pc, #152]	; (8012bd0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x120>)
 8012b38:	4a26      	ldr	r2, [pc, #152]	; (8012bd4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x124>)
 8012b3a:	4827      	ldr	r0, [pc, #156]	; (8012bd8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x128>)
 8012b3c:	f240 11ef 	movw	r1, #495	; 0x1ef
 8012b40:	f006 fd1c 	bl	801957c <__assert_func>
 8012b44:	4607      	mov	r7, r0
 8012b46:	e7cf      	b.n	8012ae8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x38>
 8012b48:	4602      	mov	r2, r0
 8012b4a:	4607      	mov	r7, r0
 8012b4c:	e7d5      	b.n	8012afa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4a>
 8012b4e:	4602      	mov	r2, r0
 8012b50:	e7d3      	b.n	8012afa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4a>
 8012b52:	4606      	mov	r6, r0
 8012b54:	e7e0      	b.n	8012b18 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x68>
 8012b56:	4606      	mov	r6, r0
 8012b58:	e7e8      	b.n	8012b2c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7c>
 8012b5a:	2c0f      	cmp	r4, #15
 8012b5c:	d8eb      	bhi.n	8012b36 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x86>
 8012b5e:	4606      	mov	r6, r0
 8012b60:	043d      	lsls	r5, r7, #16
 8012b62:	fb14 f30c 	smulbb	r3, r4, ip
 8012b66:	f005 65fc 	and.w	r5, r5, #132120576	; 0x7e00000
 8012b6a:	ea4f 4e02 	mov.w	lr, r2, lsl #16
 8012b6e:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8012b72:	10db      	asrs	r3, r3, #3
 8012b74:	432f      	orrs	r7, r5
 8012b76:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8012b7a:	f1cc 0510 	rsb	r5, ip, #16
 8012b7e:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8012b82:	1b2d      	subs	r5, r5, r4
 8012b84:	ea4e 0202 	orr.w	r2, lr, r2
 8012b88:	ebc3 0444 	rsb	r4, r3, r4, lsl #1
 8012b8c:	eb03 0545 	add.w	r5, r3, r5, lsl #1
 8012b90:	4354      	muls	r4, r2
 8012b92:	fb05 4507 	mla	r5, r5, r7, r4
 8012b96:	0404      	lsls	r4, r0, #16
 8012b98:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8012b9c:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8012ba0:	4320      	orrs	r0, r4
 8012ba2:	fb03 5400 	mla	r4, r3, r0, r5
 8012ba6:	0430      	lsls	r0, r6, #16
 8012ba8:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8012bac:	f426 66fc 	bic.w	r6, r6, #2016	; 0x7e0
 8012bb0:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 8012bb4:	4330      	orrs	r0, r6
 8012bb6:	fb03 4000 	mla	r0, r3, r0, r4
 8012bba:	0d43      	lsrs	r3, r0, #21
 8012bbc:	0940      	lsrs	r0, r0, #5
 8012bbe:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8012bc2:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8012bc6:	4318      	orrs	r0, r3
 8012bc8:	8008      	strh	r0, [r1, #0]
 8012bca:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8012bce:	bf00      	nop
 8012bd0:	0801d2ad 	.word	0x0801d2ad
 8012bd4:	0801d8ae 	.word	0x0801d8ae
 8012bd8:	0801d335 	.word	0x0801d335

08012bdc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 8012bdc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012be0:	ed2d 8b0a 	vpush	{d8-d12}
 8012be4:	b095      	sub	sp, #84	; 0x54
 8012be6:	e9dd 9629 	ldrd	r9, r6, [sp, #164]	; 0xa4
 8012bea:	9f2d      	ldr	r7, [sp, #180]	; 0xb4
 8012bec:	9306      	str	r3, [sp, #24]
 8012bee:	f9bd 30c4 	ldrsh.w	r3, [sp, #196]	; 0xc4
 8012bf2:	9109      	str	r1, [sp, #36]	; 0x24
 8012bf4:	9307      	str	r3, [sp, #28]
 8012bf6:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	; 0xb8
 8012bfa:	9012      	str	r0, [sp, #72]	; 0x48
 8012bfc:	6878      	ldr	r0, [r7, #4]
 8012bfe:	9211      	str	r2, [sp, #68]	; 0x44
 8012c00:	9a32      	ldr	r2, [sp, #200]	; 0xc8
 8012c02:	f9bd 40c0 	ldrsh.w	r4, [sp, #192]	; 0xc0
 8012c06:	fb00 1303 	mla	r3, r0, r3, r1
 8012c0a:	6839      	ldr	r1, [r7, #0]
 8012c0c:	6857      	ldr	r7, [r2, #4]
 8012c0e:	eb01 0a43 	add.w	sl, r1, r3, lsl #1
 8012c12:	6813      	ldr	r3, [r2, #0]
 8012c14:	9308      	str	r3, [sp, #32]
 8012c16:	eeb0 aa40 	vmov.f32	s20, s0
 8012c1a:	eef0 9a60 	vmov.f32	s19, s1
 8012c1e:	eeb0 9a41 	vmov.f32	s18, s2
 8012c22:	eeb0 8a62 	vmov.f32	s16, s5
 8012c26:	eef0 8a43 	vmov.f32	s17, s6
 8012c2a:	eeb0 ca44 	vmov.f32	s24, s8
 8012c2e:	eef0 ba64 	vmov.f32	s23, s9
 8012c32:	eeb0 ba45 	vmov.f32	s22, s10
 8012c36:	3704      	adds	r7, #4
 8012c38:	eef7 aa00 	vmov.f32	s21, #112	; 0x3f800000  1.0
 8012c3c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8012c3e:	2b00      	cmp	r3, #0
 8012c40:	dc03      	bgt.n	8012c4a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6e>
 8012c42:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8012c44:	2b00      	cmp	r3, #0
 8012c46:	f340 819a 	ble.w	8012f7e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3a2>
 8012c4a:	9b06      	ldr	r3, [sp, #24]
 8012c4c:	2b00      	cmp	r3, #0
 8012c4e:	f340 80c4 	ble.w	8012dda <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1fe>
 8012c52:	ea5f 4229 	movs.w	r2, r9, asr #16
 8012c56:	ea4f 4326 	mov.w	r3, r6, asr #16
 8012c5a:	d429      	bmi.n	8012cb0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xd4>
 8012c5c:	1c51      	adds	r1, r2, #1
 8012c5e:	428c      	cmp	r4, r1
 8012c60:	dd29      	ble.n	8012cb6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xda>
 8012c62:	2b00      	cmp	r3, #0
 8012c64:	db27      	blt.n	8012cb6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xda>
 8012c66:	9807      	ldr	r0, [sp, #28]
 8012c68:	1c59      	adds	r1, r3, #1
 8012c6a:	4288      	cmp	r0, r1
 8012c6c:	dd23      	ble.n	8012cb6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xda>
 8012c6e:	9b06      	ldr	r3, [sp, #24]
 8012c70:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 8012c72:	3b01      	subs	r3, #1
 8012c74:	fb02 9203 	mla	r2, r2, r3, r9
 8012c78:	1412      	asrs	r2, r2, #16
 8012c7a:	d425      	bmi.n	8012cc8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xec>
 8012c7c:	3201      	adds	r2, #1
 8012c7e:	4294      	cmp	r4, r2
 8012c80:	dd22      	ble.n	8012cc8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xec>
 8012c82:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 8012c84:	fb02 6303 	mla	r3, r2, r3, r6
 8012c88:	141b      	asrs	r3, r3, #16
 8012c8a:	d41d      	bmi.n	8012cc8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xec>
 8012c8c:	9a07      	ldr	r2, [sp, #28]
 8012c8e:	3301      	adds	r3, #1
 8012c90:	429a      	cmp	r2, r3
 8012c92:	dd19      	ble.n	8012cc8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xec>
 8012c94:	f8dd 8018 	ldr.w	r8, [sp, #24]
 8012c98:	f8cd a030 	str.w	sl, [sp, #48]	; 0x30
 8012c9c:	f1b8 0f00 	cmp.w	r8, #0
 8012ca0:	f300 80f8 	bgt.w	8012e94 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2b8>
 8012ca4:	9b06      	ldr	r3, [sp, #24]
 8012ca6:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8012caa:	eb0a 0a45 	add.w	sl, sl, r5, lsl #1
 8012cae:	e096      	b.n	8012dde <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x202>
 8012cb0:	1c51      	adds	r1, r2, #1
 8012cb2:	f040 8088 	bne.w	8012dc6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1ea>
 8012cb6:	42a2      	cmp	r2, r4
 8012cb8:	f280 8085 	bge.w	8012dc6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1ea>
 8012cbc:	1c5a      	adds	r2, r3, #1
 8012cbe:	f2c0 8082 	blt.w	8012dc6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1ea>
 8012cc2:	9a07      	ldr	r2, [sp, #28]
 8012cc4:	4293      	cmp	r3, r2
 8012cc6:	da7e      	bge.n	8012dc6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1ea>
 8012cc8:	f8dd b018 	ldr.w	fp, [sp, #24]
 8012ccc:	46d0      	mov	r8, sl
 8012cce:	f1bb 0f00 	cmp.w	fp, #0
 8012cd2:	dde7      	ble.n	8012ca4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xc8>
 8012cd4:	ea5f 4229 	movs.w	r2, r9, asr #16
 8012cd8:	ea4f 4326 	mov.w	r3, r6, asr #16
 8012cdc:	f3c9 3003 	ubfx	r0, r9, #12, #4
 8012ce0:	f3c6 3103 	ubfx	r1, r6, #12, #4
 8012ce4:	f100 80c0 	bmi.w	8012e68 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x28c>
 8012ce8:	f102 0c01 	add.w	ip, r2, #1
 8012cec:	4564      	cmp	r4, ip
 8012cee:	f340 80bd 	ble.w	8012e6c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x290>
 8012cf2:	2b00      	cmp	r3, #0
 8012cf4:	f2c0 80ba 	blt.w	8012e6c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x290>
 8012cf8:	9d07      	ldr	r5, [sp, #28]
 8012cfa:	f103 0c01 	add.w	ip, r3, #1
 8012cfe:	4565      	cmp	r5, ip
 8012d00:	f340 80b4 	ble.w	8012e6c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x290>
 8012d04:	fb03 2304 	mla	r3, r3, r4, r2
 8012d08:	9d08      	ldr	r5, [sp, #32]
 8012d0a:	9a08      	ldr	r2, [sp, #32]
 8012d0c:	441a      	add	r2, r3
 8012d0e:	5ceb      	ldrb	r3, [r5, r3]
 8012d10:	f837 e013 	ldrh.w	lr, [r7, r3, lsl #1]
 8012d14:	2800      	cmp	r0, #0
 8012d16:	f000 809f 	beq.w	8012e58 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x27c>
 8012d1a:	7853      	ldrb	r3, [r2, #1]
 8012d1c:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8012d20:	930d      	str	r3, [sp, #52]	; 0x34
 8012d22:	b141      	cbz	r1, 8012d36 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x15a>
 8012d24:	1913      	adds	r3, r2, r4
 8012d26:	5d12      	ldrb	r2, [r2, r4]
 8012d28:	785b      	ldrb	r3, [r3, #1]
 8012d2a:	f837 2012 	ldrh.w	r2, [r7, r2, lsl #1]
 8012d2e:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8012d32:	920a      	str	r2, [sp, #40]	; 0x28
 8012d34:	930e      	str	r3, [sp, #56]	; 0x38
 8012d36:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8012d38:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8012d3a:	fb10 f201 	smulbb	r2, r0, r1
 8012d3e:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8012d42:	10d2      	asrs	r2, r2, #3
 8012d44:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8012d48:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8012d4c:	ea4c 0c03 	orr.w	ip, ip, r3
 8012d50:	ebc2 0340 	rsb	r3, r2, r0, lsl #1
 8012d54:	930c      	str	r3, [sp, #48]	; 0x30
 8012d56:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8012d58:	041b      	lsls	r3, r3, #16
 8012d5a:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 8012d5e:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8012d62:	432b      	orrs	r3, r5
 8012d64:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8012d66:	4353      	muls	r3, r2
 8012d68:	fb05 330c 	mla	r3, r5, ip, r3
 8012d6c:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 8012d70:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8012d74:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8012d78:	ea4c 0e0e 	orr.w	lr, ip, lr
 8012d7c:	f1c1 0c10 	rsb	ip, r1, #16
 8012d80:	ebac 0c00 	sub.w	ip, ip, r0
 8012d84:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 8012d88:	fb0c 3c0e 	mla	ip, ip, lr, r3
 8012d8c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8012d8e:	0418      	lsls	r0, r3, #16
 8012d90:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8012d94:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8012d98:	4318      	orrs	r0, r3
 8012d9a:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 8012d9e:	fb02 c200 	mla	r2, r2, r0, ip
 8012da2:	0d53      	lsrs	r3, r2, #21
 8012da4:	0952      	lsrs	r2, r2, #5
 8012da6:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8012daa:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8012dae:	431a      	orrs	r2, r3
 8012db0:	f8a8 2000 	strh.w	r2, [r8]
 8012db4:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8012db6:	4499      	add	r9, r3
 8012db8:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8012dba:	f108 0802 	add.w	r8, r8, #2
 8012dbe:	441e      	add	r6, r3
 8012dc0:	f10b 3bff 	add.w	fp, fp, #4294967295
 8012dc4:	e783      	b.n	8012cce <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf2>
 8012dc6:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8012dc8:	4499      	add	r9, r3
 8012dca:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8012dcc:	441e      	add	r6, r3
 8012dce:	9b06      	ldr	r3, [sp, #24]
 8012dd0:	3b01      	subs	r3, #1
 8012dd2:	9306      	str	r3, [sp, #24]
 8012dd4:	f10a 0a02 	add.w	sl, sl, #2
 8012dd8:	e737      	b.n	8012c4a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6e>
 8012dda:	f47f af48 	bne.w	8012c6e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x92>
 8012dde:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8012de0:	2b00      	cmp	r3, #0
 8012de2:	f340 80cc 	ble.w	8012f7e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3a2>
 8012de6:	ee3a aa0c 	vadd.f32	s20, s20, s24
 8012dea:	ee79 9aab 	vadd.f32	s19, s19, s23
 8012dee:	eeca 7a8a 	vdiv.f32	s15, s21, s20
 8012df2:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8012df4:	ee39 9a0b 	vadd.f32	s18, s18, s22
 8012df8:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8012dfc:	eef0 6a48 	vmov.f32	s13, s16
 8012e00:	ee69 7a27 	vmul.f32	s15, s18, s15
 8012e04:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8012e08:	ee37 8a48 	vsub.f32	s16, s14, s16
 8012e0c:	ee16 9a90 	vmov	r9, s13
 8012e10:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8012e14:	eef0 6a68 	vmov.f32	s13, s17
 8012e18:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8012e1c:	ee18 2a10 	vmov	r2, s16
 8012e20:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8012e24:	fb92 f3f3 	sdiv	r3, r2, r3
 8012e28:	ee18 2a90 	vmov	r2, s17
 8012e2c:	932b      	str	r3, [sp, #172]	; 0xac
 8012e2e:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8012e30:	fb92 f3f3 	sdiv	r3, r2, r3
 8012e34:	932c      	str	r3, [sp, #176]	; 0xb0
 8012e36:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8012e38:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8012e3a:	3b01      	subs	r3, #1
 8012e3c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8012e40:	9309      	str	r3, [sp, #36]	; 0x24
 8012e42:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8012e44:	bf08      	it	eq
 8012e46:	4613      	moveq	r3, r2
 8012e48:	ee16 6a90 	vmov	r6, s13
 8012e4c:	9306      	str	r3, [sp, #24]
 8012e4e:	eef0 8a67 	vmov.f32	s17, s15
 8012e52:	eeb0 8a47 	vmov.f32	s16, s14
 8012e56:	e6f1      	b.n	8012c3c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x60>
 8012e58:	2900      	cmp	r1, #0
 8012e5a:	f43f af6c 	beq.w	8012d36 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x15a>
 8012e5e:	5d13      	ldrb	r3, [r2, r4]
 8012e60:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8012e64:	930a      	str	r3, [sp, #40]	; 0x28
 8012e66:	e766      	b.n	8012d36 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x15a>
 8012e68:	1c55      	adds	r5, r2, #1
 8012e6a:	d1a3      	bne.n	8012db4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d8>
 8012e6c:	4294      	cmp	r4, r2
 8012e6e:	dda1      	ble.n	8012db4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d8>
 8012e70:	1c5d      	adds	r5, r3, #1
 8012e72:	db9f      	blt.n	8012db4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d8>
 8012e74:	9d07      	ldr	r5, [sp, #28]
 8012e76:	429d      	cmp	r5, r3
 8012e78:	dd9c      	ble.n	8012db4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d8>
 8012e7a:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8012e7e:	e9cd 2302 	strd	r2, r3, [sp, #8]
 8012e82:	e9cd 4500 	strd	r4, r5, [sp]
 8012e86:	463b      	mov	r3, r7
 8012e88:	9a08      	ldr	r2, [sp, #32]
 8012e8a:	9812      	ldr	r0, [sp, #72]	; 0x48
 8012e8c:	4641      	mov	r1, r8
 8012e8e:	f7ff fe0f 	bl	8012ab0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 8012e92:	e78f      	b.n	8012db4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d8>
 8012e94:	ea4f 4329 	mov.w	r3, r9, asr #16
 8012e98:	1432      	asrs	r2, r6, #16
 8012e9a:	fb04 3202 	mla	r2, r4, r2, r3
 8012e9e:	9908      	ldr	r1, [sp, #32]
 8012ea0:	9b08      	ldr	r3, [sp, #32]
 8012ea2:	4413      	add	r3, r2
 8012ea4:	5c8a      	ldrb	r2, [r1, r2]
 8012ea6:	f3c9 3e03 	ubfx	lr, r9, #12, #4
 8012eaa:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8012eae:	f837 1012 	ldrh.w	r1, [r7, r2, lsl #1]
 8012eb2:	f1be 0f00 	cmp.w	lr, #0
 8012eb6:	d05b      	beq.n	8012f70 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x394>
 8012eb8:	785a      	ldrb	r2, [r3, #1]
 8012eba:	f837 2012 	ldrh.w	r2, [r7, r2, lsl #1]
 8012ebe:	920f      	str	r2, [sp, #60]	; 0x3c
 8012ec0:	b140      	cbz	r0, 8012ed4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2f8>
 8012ec2:	191a      	adds	r2, r3, r4
 8012ec4:	5d1b      	ldrb	r3, [r3, r4]
 8012ec6:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8012eca:	930b      	str	r3, [sp, #44]	; 0x2c
 8012ecc:	7853      	ldrb	r3, [r2, #1]
 8012ece:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8012ed2:	9310      	str	r3, [sp, #64]	; 0x40
 8012ed4:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8012ed6:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8012ed8:	fb1e f200 	smulbb	r2, lr, r0
 8012edc:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8012ee0:	10d2      	asrs	r2, r2, #3
 8012ee2:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8012ee6:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8012eea:	ea4c 0c03 	orr.w	ip, ip, r3
 8012eee:	ebc2 034e 	rsb	r3, r2, lr, lsl #1
 8012ef2:	9313      	str	r3, [sp, #76]	; 0x4c
 8012ef4:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8012ef6:	041b      	lsls	r3, r3, #16
 8012ef8:	f425 6bfc 	bic.w	fp, r5, #2016	; 0x7e0
 8012efc:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8012f00:	ea43 030b 	orr.w	r3, r3, fp
 8012f04:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8012f06:	4353      	muls	r3, r2
 8012f08:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8012f0c:	fb05 3c0c 	mla	ip, r5, ip, r3
 8012f10:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8012f14:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
 8012f18:	ea43 0b01 	orr.w	fp, r3, r1
 8012f1c:	f1c0 0110 	rsb	r1, r0, #16
 8012f20:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8012f22:	eba1 0e0e 	sub.w	lr, r1, lr
 8012f26:	eb02 0e4e 	add.w	lr, r2, lr, lsl #1
 8012f2a:	fb0e cc0b 	mla	ip, lr, fp, ip
 8012f2e:	ea4f 4b03 	mov.w	fp, r3, lsl #16
 8012f32:	f423 6efc 	bic.w	lr, r3, #2016	; 0x7e0
 8012f36:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8012f3a:	ea4b 0e0e 	orr.w	lr, fp, lr
 8012f3e:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 8012f42:	fb02 cc0e 	mla	ip, r2, lr, ip
 8012f46:	ea4f 535c 	mov.w	r3, ip, lsr #21
 8012f4a:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8012f4e:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8012f52:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8012f56:	ea43 0c0c 	orr.w	ip, r3, ip
 8012f5a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8012f5c:	f823 cb02 	strh.w	ip, [r3], #2
 8012f60:	930c      	str	r3, [sp, #48]	; 0x30
 8012f62:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8012f64:	4499      	add	r9, r3
 8012f66:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8012f68:	f108 38ff 	add.w	r8, r8, #4294967295
 8012f6c:	441e      	add	r6, r3
 8012f6e:	e695      	b.n	8012c9c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xc0>
 8012f70:	2800      	cmp	r0, #0
 8012f72:	d0af      	beq.n	8012ed4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2f8>
 8012f74:	5d1b      	ldrb	r3, [r3, r4]
 8012f76:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8012f7a:	930b      	str	r3, [sp, #44]	; 0x2c
 8012f7c:	e7aa      	b.n	8012ed4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2f8>
 8012f7e:	b015      	add	sp, #84	; 0x54
 8012f80:	ecbd 8b0a 	vpop	{d8-d12}
 8012f84:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08012f88 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>:
 8012f88:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012f8c:	468b      	mov	fp, r1
 8012f8e:	8809      	ldrh	r1, [r1, #0]
 8012f90:	b089      	sub	sp, #36	; 0x24
 8012f92:	10cd      	asrs	r5, r1, #3
 8012f94:	e9dd 6414 	ldrd	r6, r4, [sp, #80]	; 0x50
 8012f98:	ea4f 2921 	mov.w	r9, r1, asr #8
 8012f9c:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8012fa0:	00c9      	lsls	r1, r1, #3
 8012fa2:	9500      	str	r5, [sp, #0]
 8012fa4:	b2c9      	uxtb	r1, r1
 8012fa6:	f9bd e048 	ldrsh.w	lr, [sp, #72]	; 0x48
 8012faa:	9101      	str	r1, [sp, #4]
 8012fac:	9900      	ldr	r1, [sp, #0]
 8012fae:	9202      	str	r2, [sp, #8]
 8012fb0:	fb04 650e 	mla	r5, r4, lr, r6
 8012fb4:	f009 09f8 	and.w	r9, r9, #248	; 0xf8
 8012fb8:	eb02 0805 	add.w	r8, r2, r5
 8012fbc:	0209      	lsls	r1, r1, #8
 8012fbe:	9a01      	ldr	r2, [sp, #4]
 8012fc0:	f9bd a04c 	ldrsh.w	sl, [sp, #76]	; 0x4c
 8012fc4:	f89d 7058 	ldrb.w	r7, [sp, #88]	; 0x58
 8012fc8:	f89d 005c 	ldrb.w	r0, [sp, #92]	; 0x5c
 8012fcc:	f89d c060 	ldrb.w	ip, [sp, #96]	; 0x60
 8012fd0:	ea41 4109 	orr.w	r1, r1, r9, lsl #16
 8012fd4:	4311      	orrs	r1, r2
 8012fd6:	2c00      	cmp	r4, #0
 8012fd8:	9107      	str	r1, [sp, #28]
 8012fda:	db43      	blt.n	8013064 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xdc>
 8012fdc:	45a2      	cmp	sl, r4
 8012fde:	dd41      	ble.n	8013064 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xdc>
 8012fe0:	2e00      	cmp	r6, #0
 8012fe2:	db3d      	blt.n	8013060 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd8>
 8012fe4:	45b6      	cmp	lr, r6
 8012fe6:	dd3b      	ble.n	8013060 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd8>
 8012fe8:	9a02      	ldr	r2, [sp, #8]
 8012fea:	5d55      	ldrb	r5, [r2, r5]
 8012fec:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8012ff0:	441d      	add	r5, r3
 8012ff2:	1c72      	adds	r2, r6, #1
 8012ff4:	d439      	bmi.n	801306a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xe2>
 8012ff6:	4596      	cmp	lr, r2
 8012ff8:	dd37      	ble.n	801306a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xe2>
 8012ffa:	2f00      	cmp	r7, #0
 8012ffc:	d035      	beq.n	801306a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xe2>
 8012ffe:	f898 1001 	ldrb.w	r1, [r8, #1]
 8013002:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8013006:	4419      	add	r1, r3
 8013008:	3401      	adds	r4, #1
 801300a:	d432      	bmi.n	8013072 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xea>
 801300c:	45a2      	cmp	sl, r4
 801300e:	dd30      	ble.n	8013072 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xea>
 8013010:	b378      	cbz	r0, 8013072 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xea>
 8013012:	2e00      	cmp	r6, #0
 8013014:	db2b      	blt.n	801306e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xe6>
 8013016:	45b6      	cmp	lr, r6
 8013018:	dd29      	ble.n	801306e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xe6>
 801301a:	f818 400e 	ldrb.w	r4, [r8, lr]
 801301e:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 8013022:	441c      	add	r4, r3
 8013024:	3601      	adds	r6, #1
 8013026:	d427      	bmi.n	8013078 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xf0>
 8013028:	45b6      	cmp	lr, r6
 801302a:	dd25      	ble.n	8013078 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xf0>
 801302c:	b327      	cbz	r7, 8013078 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xf0>
 801302e:	44c6      	add	lr, r8
 8013030:	f89e 2001 	ldrb.w	r2, [lr, #1]
 8013034:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8013038:	4413      	add	r3, r2
 801303a:	782a      	ldrb	r2, [r5, #0]
 801303c:	9202      	str	r2, [sp, #8]
 801303e:	780a      	ldrb	r2, [r1, #0]
 8013040:	9203      	str	r2, [sp, #12]
 8013042:	7822      	ldrb	r2, [r4, #0]
 8013044:	9204      	str	r2, [sp, #16]
 8013046:	2f0f      	cmp	r7, #15
 8013048:	781a      	ldrb	r2, [r3, #0]
 801304a:	9205      	str	r2, [sp, #20]
 801304c:	d801      	bhi.n	8013052 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xca>
 801304e:	280f      	cmp	r0, #15
 8013050:	d914      	bls.n	801307c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xf4>
 8013052:	4b3f      	ldr	r3, [pc, #252]	; (8013150 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c8>)
 8013054:	4a3f      	ldr	r2, [pc, #252]	; (8013154 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1cc>)
 8013056:	4840      	ldr	r0, [pc, #256]	; (8013158 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d0>)
 8013058:	f240 210d 	movw	r1, #525	; 0x20d
 801305c:	f006 fa8e 	bl	801957c <__assert_func>
 8013060:	ad07      	add	r5, sp, #28
 8013062:	e7c6      	b.n	8012ff2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x6a>
 8013064:	a907      	add	r1, sp, #28
 8013066:	460d      	mov	r5, r1
 8013068:	e7ce      	b.n	8013008 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x80>
 801306a:	a907      	add	r1, sp, #28
 801306c:	e7cc      	b.n	8013008 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x80>
 801306e:	ac07      	add	r4, sp, #28
 8013070:	e7d8      	b.n	8013024 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x9c>
 8013072:	ab07      	add	r3, sp, #28
 8013074:	461c      	mov	r4, r3
 8013076:	e7e0      	b.n	801303a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xb2>
 8013078:	ab07      	add	r3, sp, #28
 801307a:	e7de      	b.n	801303a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xb2>
 801307c:	b2ba      	uxth	r2, r7
 801307e:	b280      	uxth	r0, r0
 8013080:	fb02 fa00 	mul.w	sl, r2, r0
 8013084:	ebca 1000 	rsb	r0, sl, r0, lsl #4
 8013088:	0112      	lsls	r2, r2, #4
 801308a:	b280      	uxth	r0, r0
 801308c:	f891 8002 	ldrb.w	r8, [r1, #2]
 8013090:	7849      	ldrb	r1, [r1, #1]
 8013092:	78ae      	ldrb	r6, [r5, #2]
 8013094:	786d      	ldrb	r5, [r5, #1]
 8013096:	f5c2 7e80 	rsb	lr, r2, #256	; 0x100
 801309a:	eba2 020a 	sub.w	r2, r2, sl
 801309e:	b292      	uxth	r2, r2
 80130a0:	ebae 0e00 	sub.w	lr, lr, r0
 80130a4:	fa1f fe8e 	uxth.w	lr, lr
 80130a8:	4351      	muls	r1, r2
 80130aa:	fb02 f808 	mul.w	r8, r2, r8
 80130ae:	fb0e 8806 	mla	r8, lr, r6, r8
 80130b2:	fb0e 1505 	mla	r5, lr, r5, r1
 80130b6:	78a6      	ldrb	r6, [r4, #2]
 80130b8:	7861      	ldrb	r1, [r4, #1]
 80130ba:	fa1f f78c 	uxth.w	r7, ip
 80130be:	fb00 8806 	mla	r8, r0, r6, r8
 80130c2:	fb00 5501 	mla	r5, r0, r1, r5
 80130c6:	789e      	ldrb	r6, [r3, #2]
 80130c8:	7859      	ldrb	r1, [r3, #1]
 80130ca:	9b00      	ldr	r3, [sp, #0]
 80130cc:	ea6f 0c0c 	mvn.w	ip, ip
 80130d0:	fa5f fc8c 	uxtb.w	ip, ip
 80130d4:	fb0a 5101 	mla	r1, sl, r1, r5
 80130d8:	fb13 f50c 	smulbb	r5, r3, ip
 80130dc:	9b03      	ldr	r3, [sp, #12]
 80130de:	435a      	muls	r2, r3
 80130e0:	9b02      	ldr	r3, [sp, #8]
 80130e2:	fb0e 2203 	mla	r2, lr, r3, r2
 80130e6:	9b04      	ldr	r3, [sp, #16]
 80130e8:	fb00 2003 	mla	r0, r0, r3, r2
 80130ec:	9b05      	ldr	r3, [sp, #20]
 80130ee:	fb0a 8606 	mla	r6, sl, r6, r8
 80130f2:	fb0a 0a03 	mla	sl, sl, r3, r0
 80130f6:	9b01      	ldr	r3, [sp, #4]
 80130f8:	fb19 f90c 	smulbb	r9, r9, ip
 80130fc:	f3ca 2a07 	ubfx	sl, sl, #8, #8
 8013100:	fb13 fc0c 	smulbb	ip, r3, ip
 8013104:	f3c6 2607 	ubfx	r6, r6, #8, #8
 8013108:	f3c1 2107 	ubfx	r1, r1, #8, #8
 801310c:	fb06 9607 	mla	r6, r6, r7, r9
 8013110:	fb01 5107 	mla	r1, r1, r7, r5
 8013114:	fb0a c707 	mla	r7, sl, r7, ip
 8013118:	b2b6      	uxth	r6, r6
 801311a:	b289      	uxth	r1, r1
 801311c:	b2bf      	uxth	r7, r7
 801311e:	f106 0901 	add.w	r9, r6, #1
 8013122:	f107 0c01 	add.w	ip, r7, #1
 8013126:	1c4d      	adds	r5, r1, #1
 8013128:	eb09 2616 	add.w	r6, r9, r6, lsr #8
 801312c:	eb0c 2717 	add.w	r7, ip, r7, lsr #8
 8013130:	eb05 2111 	add.w	r1, r5, r1, lsr #8
 8013134:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8013138:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801313c:	0949      	lsrs	r1, r1, #5
 801313e:	433e      	orrs	r6, r7
 8013140:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8013144:	430e      	orrs	r6, r1
 8013146:	f8ab 6000 	strh.w	r6, [fp]
 801314a:	b009      	add	sp, #36	; 0x24
 801314c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013150:	0801d2ad 	.word	0x0801d2ad
 8013154:	0801d805 	.word	0x0801d805
 8013158:	0801d335 	.word	0x0801d335

0801315c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 801315c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013160:	ed2d 8b08 	vpush	{d8-d11}
 8013164:	b097      	sub	sp, #92	; 0x5c
 8013166:	eeb0 aa40 	vmov.f32	s20, s0
 801316a:	9309      	str	r3, [sp, #36]	; 0x24
 801316c:	f9bd 30c4 	ldrsh.w	r3, [sp, #196]	; 0xc4
 8013170:	9c2d      	ldr	r4, [sp, #180]	; 0xb4
 8013172:	930b      	str	r3, [sp, #44]	; 0x2c
 8013174:	f89d 30cc 	ldrb.w	r3, [sp, #204]	; 0xcc
 8013178:	9310      	str	r3, [sp, #64]	; 0x40
 801317a:	910f      	str	r1, [sp, #60]	; 0x3c
 801317c:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	; 0xb8
 8013180:	9015      	str	r0, [sp, #84]	; 0x54
 8013182:	6860      	ldr	r0, [r4, #4]
 8013184:	9213      	str	r2, [sp, #76]	; 0x4c
 8013186:	fb00 1303 	mla	r3, r0, r3, r1
 801318a:	9a32      	ldr	r2, [sp, #200]	; 0xc8
 801318c:	6821      	ldr	r1, [r4, #0]
 801318e:	6854      	ldr	r4, [r2, #4]
 8013190:	f9bd 50c0 	ldrsh.w	r5, [sp, #192]	; 0xc0
 8013194:	eb01 0343 	add.w	r3, r1, r3, lsl #1
 8013198:	930a      	str	r3, [sp, #40]	; 0x28
 801319a:	6813      	ldr	r3, [r2, #0]
 801319c:	930e      	str	r3, [sp, #56]	; 0x38
 801319e:	1d23      	adds	r3, r4, #4
 80131a0:	9308      	str	r3, [sp, #32]
 80131a2:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80131a4:	43db      	mvns	r3, r3
 80131a6:	b2db      	uxtb	r3, r3
 80131a8:	eef0 9a60 	vmov.f32	s19, s1
 80131ac:	eeb0 9a41 	vmov.f32	s18, s2
 80131b0:	eeb0 8a62 	vmov.f32	s16, s5
 80131b4:	eef0 8a43 	vmov.f32	s17, s6
 80131b8:	eef0 ba44 	vmov.f32	s23, s8
 80131bc:	eeb0 ba64 	vmov.f32	s22, s9
 80131c0:	eef0 aa45 	vmov.f32	s21, s10
 80131c4:	930c      	str	r3, [sp, #48]	; 0x30
 80131c6:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80131c8:	2b00      	cmp	r3, #0
 80131ca:	dc03      	bgt.n	80131d4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x78>
 80131cc:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 80131ce:	2b00      	cmp	r3, #0
 80131d0:	f340 825c 	ble.w	801368c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x530>
 80131d4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80131d6:	2b00      	cmp	r3, #0
 80131d8:	f340 8127 	ble.w	801342a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2ce>
 80131dc:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 80131de:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80131e0:	1412      	asrs	r2, r2, #16
 80131e2:	ea4f 4323 	mov.w	r3, r3, asr #16
 80131e6:	d430      	bmi.n	801324a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xee>
 80131e8:	1c51      	adds	r1, r2, #1
 80131ea:	428d      	cmp	r5, r1
 80131ec:	dd30      	ble.n	8013250 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf4>
 80131ee:	2b00      	cmp	r3, #0
 80131f0:	db2e      	blt.n	8013250 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf4>
 80131f2:	980b      	ldr	r0, [sp, #44]	; 0x2c
 80131f4:	1c59      	adds	r1, r3, #1
 80131f6:	4288      	cmp	r0, r1
 80131f8:	dd2a      	ble.n	8013250 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf4>
 80131fa:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80131fc:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 80131fe:	9929      	ldr	r1, [sp, #164]	; 0xa4
 8013200:	3b01      	subs	r3, #1
 8013202:	fb02 1203 	mla	r2, r2, r3, r1
 8013206:	1412      	asrs	r2, r2, #16
 8013208:	d42c      	bmi.n	8013264 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x108>
 801320a:	3201      	adds	r2, #1
 801320c:	4295      	cmp	r5, r2
 801320e:	dd29      	ble.n	8013264 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x108>
 8013210:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 8013212:	992a      	ldr	r1, [sp, #168]	; 0xa8
 8013214:	fb02 1303 	mla	r3, r2, r3, r1
 8013218:	141b      	asrs	r3, r3, #16
 801321a:	d423      	bmi.n	8013264 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x108>
 801321c:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801321e:	3301      	adds	r3, #1
 8013220:	429a      	cmp	r2, r3
 8013222:	dd1f      	ble.n	8013264 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x108>
 8013224:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8013226:	9311      	str	r3, [sp, #68]	; 0x44
 8013228:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801322a:	930d      	str	r3, [sp, #52]	; 0x34
 801322c:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 8013230:	9312      	str	r3, [sp, #72]	; 0x48
 8013232:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8013234:	2b00      	cmp	r3, #0
 8013236:	f300 8161 	bgt.w	80134fc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3a0>
 801323a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801323c:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801323e:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8013242:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8013246:	930a      	str	r3, [sp, #40]	; 0x28
 8013248:	e0f1      	b.n	801342e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2d2>
 801324a:	1c51      	adds	r1, r2, #1
 801324c:	f040 80de 	bne.w	801340c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2b0>
 8013250:	42aa      	cmp	r2, r5
 8013252:	f280 80db 	bge.w	801340c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2b0>
 8013256:	1c5f      	adds	r7, r3, #1
 8013258:	f2c0 80d8 	blt.w	801340c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2b0>
 801325c:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801325e:	4293      	cmp	r3, r2
 8013260:	f280 80d4 	bge.w	801340c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2b0>
 8013264:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8013266:	9311      	str	r3, [sp, #68]	; 0x44
 8013268:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801326a:	930d      	str	r3, [sp, #52]	; 0x34
 801326c:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801326e:	2b00      	cmp	r3, #0
 8013270:	dde3      	ble.n	801323a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xde>
 8013272:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8013274:	9829      	ldr	r0, [sp, #164]	; 0xa4
 8013276:	992a      	ldr	r1, [sp, #168]	; 0xa8
 8013278:	141a      	asrs	r2, r3, #16
 801327a:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801327c:	1400      	asrs	r0, r0, #16
 801327e:	f3c3 3303 	ubfx	r3, r3, #12, #4
 8013282:	f3c1 3103 	ubfx	r1, r1, #12, #4
 8013286:	f100 8120 	bmi.w	80134ca <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x36e>
 801328a:	1c46      	adds	r6, r0, #1
 801328c:	42b5      	cmp	r5, r6
 801328e:	f340 811e 	ble.w	80134ce <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x372>
 8013292:	2a00      	cmp	r2, #0
 8013294:	f2c0 811b 	blt.w	80134ce <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x372>
 8013298:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 801329a:	1c56      	adds	r6, r2, #1
 801329c:	42b7      	cmp	r7, r6
 801329e:	f340 8116 	ble.w	80134ce <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x372>
 80132a2:	fb02 0005 	mla	r0, r2, r5, r0
 80132a6:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 80132a8:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 80132aa:	9c08      	ldr	r4, [sp, #32]
 80132ac:	4402      	add	r2, r0
 80132ae:	5c30      	ldrb	r0, [r6, r0]
 80132b0:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 80132b4:	9014      	str	r0, [sp, #80]	; 0x50
 80132b6:	1826      	adds	r6, r4, r0
 80132b8:	2b00      	cmp	r3, #0
 80132ba:	f000 80f7 	beq.w	80134ac <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x350>
 80132be:	f892 e001 	ldrb.w	lr, [r2, #1]
 80132c2:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 80132c6:	44a6      	add	lr, r4
 80132c8:	2900      	cmp	r1, #0
 80132ca:	f000 80f8 	beq.w	80134be <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x362>
 80132ce:	1950      	adds	r0, r2, r5
 80132d0:	5d52      	ldrb	r2, [r2, r5]
 80132d2:	7840      	ldrb	r0, [r0, #1]
 80132d4:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80132d8:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 80132dc:	4422      	add	r2, r4
 80132de:	4420      	add	r0, r4
 80132e0:	b29b      	uxth	r3, r3
 80132e2:	b289      	uxth	r1, r1
 80132e4:	fb03 fa01 	mul.w	sl, r3, r1
 80132e8:	ebca 1101 	rsb	r1, sl, r1, lsl #4
 80132ec:	011b      	lsls	r3, r3, #4
 80132ee:	b289      	uxth	r1, r1
 80132f0:	f89e c002 	ldrb.w	ip, [lr, #2]
 80132f4:	f896 b002 	ldrb.w	fp, [r6, #2]
 80132f8:	9f0d      	ldr	r7, [sp, #52]	; 0x34
 80132fa:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 80132fc:	f8b7 8000 	ldrh.w	r8, [r7]
 8013300:	f8bd 7040 	ldrh.w	r7, [sp, #64]	; 0x40
 8013304:	f5c3 7980 	rsb	r9, r3, #256	; 0x100
 8013308:	eba3 030a 	sub.w	r3, r3, sl
 801330c:	b29b      	uxth	r3, r3
 801330e:	eba9 0901 	sub.w	r9, r9, r1
 8013312:	fa1f f989 	uxth.w	r9, r9
 8013316:	fb03 fc0c 	mul.w	ip, r3, ip
 801331a:	fb09 cc0b 	mla	ip, r9, fp, ip
 801331e:	f892 b002 	ldrb.w	fp, [r2, #2]
 8013322:	fb01 cc0b 	mla	ip, r1, fp, ip
 8013326:	f890 b002 	ldrb.w	fp, [r0, #2]
 801332a:	fb0a cc0b 	mla	ip, sl, fp, ip
 801332e:	ea4f 2b28 	mov.w	fp, r8, asr #8
 8013332:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
 8013336:	fb1b fb04 	smulbb	fp, fp, r4
 801333a:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 801333e:	fb0c bc07 	mla	ip, ip, r7, fp
 8013342:	f896 b001 	ldrb.w	fp, [r6, #1]
 8013346:	f89e 6001 	ldrb.w	r6, [lr, #1]
 801334a:	f89e e000 	ldrb.w	lr, [lr]
 801334e:	435e      	muls	r6, r3
 8013350:	fb09 660b 	mla	r6, r9, fp, r6
 8013354:	f892 b001 	ldrb.w	fp, [r2, #1]
 8013358:	fb01 660b 	mla	r6, r1, fp, r6
 801335c:	f890 b001 	ldrb.w	fp, [r0, #1]
 8013360:	fb0a 660b 	mla	r6, sl, fp, r6
 8013364:	ea4f 0be8 	mov.w	fp, r8, asr #3
 8013368:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 801336c:	fb1b fb04 	smulbb	fp, fp, r4
 8013370:	f3c6 2607 	ubfx	r6, r6, #8, #8
 8013374:	fb06 b607 	mla	r6, r6, r7, fp
 8013378:	b2b4      	uxth	r4, r6
 801337a:	9412      	str	r4, [sp, #72]	; 0x48
 801337c:	9e08      	ldr	r6, [sp, #32]
 801337e:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8013380:	f816 b004 	ldrb.w	fp, [r6, r4]
 8013384:	fb03 f30e 	mul.w	r3, r3, lr
 8013388:	f892 e000 	ldrb.w	lr, [r2]
 801338c:	fb09 330b 	mla	r3, r9, fp, r3
 8013390:	fb01 330e 	mla	r3, r1, lr, r3
 8013394:	f890 e000 	ldrb.w	lr, [r0]
 8013398:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801339c:	fb0a 3e0e 	mla	lr, sl, lr, r3
 80133a0:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80133a2:	fa5f f888 	uxtb.w	r8, r8
 80133a6:	f3ce 2e07 	ubfx	lr, lr, #8, #8
 80133aa:	fb18 f803 	smulbb	r8, r8, r3
 80133ae:	fb0e 8807 	mla	r8, lr, r7, r8
 80133b2:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80133b4:	fa1f fc8c 	uxth.w	ip, ip
 80133b8:	fa1f f888 	uxth.w	r8, r8
 80133bc:	f103 0b01 	add.w	fp, r3, #1
 80133c0:	f10c 0201 	add.w	r2, ip, #1
 80133c4:	f108 0e01 	add.w	lr, r8, #1
 80133c8:	eb0b 2613 	add.w	r6, fp, r3, lsr #8
 80133cc:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 80133d0:	eb0e 2818 	add.w	r8, lr, r8, lsr #8
 80133d4:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 80133d8:	f3c8 28c4 	ubfx	r8, r8, #11, #5
 80133dc:	0976      	lsrs	r6, r6, #5
 80133de:	ea4c 0c08 	orr.w	ip, ip, r8
 80133e2:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 80133e6:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80133e8:	ea4c 0606 	orr.w	r6, ip, r6
 80133ec:	801e      	strh	r6, [r3, #0]
 80133ee:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80133f0:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 80133f2:	3302      	adds	r3, #2
 80133f4:	930d      	str	r3, [sp, #52]	; 0x34
 80133f6:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80133f8:	4413      	add	r3, r2
 80133fa:	9329      	str	r3, [sp, #164]	; 0xa4
 80133fc:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 80133fe:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8013400:	4413      	add	r3, r2
 8013402:	932a      	str	r3, [sp, #168]	; 0xa8
 8013404:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8013406:	3b01      	subs	r3, #1
 8013408:	9311      	str	r3, [sp, #68]	; 0x44
 801340a:	e72f      	b.n	801326c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x110>
 801340c:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801340e:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 8013410:	4413      	add	r3, r2
 8013412:	9329      	str	r3, [sp, #164]	; 0xa4
 8013414:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 8013416:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8013418:	4413      	add	r3, r2
 801341a:	932a      	str	r3, [sp, #168]	; 0xa8
 801341c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801341e:	3b01      	subs	r3, #1
 8013420:	9309      	str	r3, [sp, #36]	; 0x24
 8013422:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8013424:	3302      	adds	r3, #2
 8013426:	930a      	str	r3, [sp, #40]	; 0x28
 8013428:	e6d4      	b.n	80131d4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x78>
 801342a:	f47f aee6 	bne.w	80131fa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9e>
 801342e:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8013430:	2b00      	cmp	r3, #0
 8013432:	f340 812b 	ble.w	801368c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x530>
 8013436:	ee3a aa2b 	vadd.f32	s20, s20, s23
 801343a:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801343e:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 8013442:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8013444:	ee79 9a8b 	vadd.f32	s19, s19, s22
 8013448:	ee39 9a2a 	vadd.f32	s18, s18, s21
 801344c:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8013450:	eef0 6a48 	vmov.f32	s13, s16
 8013454:	ee69 7a27 	vmul.f32	s15, s18, s15
 8013458:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801345c:	ee37 8a48 	vsub.f32	s16, s14, s16
 8013460:	edcd 6a29 	vstr	s13, [sp, #164]	; 0xa4
 8013464:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8013468:	eef0 6a68 	vmov.f32	s13, s17
 801346c:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8013470:	ee18 2a10 	vmov	r2, s16
 8013474:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8013478:	fb92 f3f3 	sdiv	r3, r2, r3
 801347c:	ee18 2a90 	vmov	r2, s17
 8013480:	932b      	str	r3, [sp, #172]	; 0xac
 8013482:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8013484:	fb92 f3f3 	sdiv	r3, r2, r3
 8013488:	932c      	str	r3, [sp, #176]	; 0xb0
 801348a:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801348c:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801348e:	3b01      	subs	r3, #1
 8013490:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8013494:	930f      	str	r3, [sp, #60]	; 0x3c
 8013496:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8013498:	edcd 6a2a 	vstr	s13, [sp, #168]	; 0xa8
 801349c:	bf08      	it	eq
 801349e:	4613      	moveq	r3, r2
 80134a0:	9309      	str	r3, [sp, #36]	; 0x24
 80134a2:	eef0 8a67 	vmov.f32	s17, s15
 80134a6:	eeb0 8a47 	vmov.f32	s16, s14
 80134aa:	e68c      	b.n	80131c6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6a>
 80134ac:	b151      	cbz	r1, 80134c4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x368>
 80134ae:	5d52      	ldrb	r2, [r2, r5]
 80134b0:	9808      	ldr	r0, [sp, #32]
 80134b2:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80134b6:	4402      	add	r2, r0
 80134b8:	4630      	mov	r0, r6
 80134ba:	46b6      	mov	lr, r6
 80134bc:	e710      	b.n	80132e0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x184>
 80134be:	4630      	mov	r0, r6
 80134c0:	4632      	mov	r2, r6
 80134c2:	e70d      	b.n	80132e0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x184>
 80134c4:	4630      	mov	r0, r6
 80134c6:	4632      	mov	r2, r6
 80134c8:	e7f7      	b.n	80134ba <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x35e>
 80134ca:	1c46      	adds	r6, r0, #1
 80134cc:	d18f      	bne.n	80133ee <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x292>
 80134ce:	4285      	cmp	r5, r0
 80134d0:	dd8d      	ble.n	80133ee <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x292>
 80134d2:	1c54      	adds	r4, r2, #1
 80134d4:	db8b      	blt.n	80133ee <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x292>
 80134d6:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 80134d8:	4294      	cmp	r4, r2
 80134da:	dd88      	ble.n	80133ee <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x292>
 80134dc:	e9cd 2303 	strd	r2, r3, [sp, #12]
 80134e0:	9c10      	ldr	r4, [sp, #64]	; 0x40
 80134e2:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80134e4:	9002      	str	r0, [sp, #8]
 80134e6:	e9cd 1405 	strd	r1, r4, [sp, #20]
 80134ea:	e9cd 5300 	strd	r5, r3, [sp]
 80134ee:	e9dd 120d 	ldrd	r1, r2, [sp, #52]	; 0x34
 80134f2:	9b08      	ldr	r3, [sp, #32]
 80134f4:	9815      	ldr	r0, [sp, #84]	; 0x54
 80134f6:	f7ff fd47 	bl	8012f88 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>
 80134fa:	e778      	b.n	80133ee <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x292>
 80134fc:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 80134fe:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8013500:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8013502:	1410      	asrs	r0, r2, #16
 8013504:	f3c2 3103 	ubfx	r1, r2, #12, #4
 8013508:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 801350a:	1412      	asrs	r2, r2, #16
 801350c:	fb05 2000 	mla	r0, r5, r0, r2
 8013510:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8013512:	f814 a000 	ldrb.w	sl, [r4, r0]
 8013516:	4402      	add	r2, r0
 8013518:	9808      	ldr	r0, [sp, #32]
 801351a:	eb0a 0a4a 	add.w	sl, sl, sl, lsl #1
 801351e:	f3c3 3303 	ubfx	r3, r3, #12, #4
 8013522:	eb00 060a 	add.w	r6, r0, sl
 8013526:	2b00      	cmp	r3, #0
 8013528:	f000 80a1 	beq.w	801366e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x512>
 801352c:	f892 c001 	ldrb.w	ip, [r2, #1]
 8013530:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 8013534:	4484      	add	ip, r0
 8013536:	2900      	cmp	r1, #0
 8013538:	f000 80a2 	beq.w	8013680 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x524>
 801353c:	1950      	adds	r0, r2, r5
 801353e:	5d52      	ldrb	r2, [r2, r5]
 8013540:	7840      	ldrb	r0, [r0, #1]
 8013542:	9c08      	ldr	r4, [sp, #32]
 8013544:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8013548:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801354c:	4422      	add	r2, r4
 801354e:	4420      	add	r0, r4
 8013550:	b29b      	uxth	r3, r3
 8013552:	b289      	uxth	r1, r1
 8013554:	fb03 f901 	mul.w	r9, r3, r1
 8013558:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801355c:	011b      	lsls	r3, r3, #4
 801355e:	b289      	uxth	r1, r1
 8013560:	f89c 7002 	ldrb.w	r7, [ip, #2]
 8013564:	f896 b002 	ldrb.w	fp, [r6, #2]
 8013568:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801356a:	f5c3 7880 	rsb	r8, r3, #256	; 0x100
 801356e:	eba3 0309 	sub.w	r3, r3, r9
 8013572:	b29b      	uxth	r3, r3
 8013574:	eba8 0801 	sub.w	r8, r8, r1
 8013578:	fa1f f888 	uxth.w	r8, r8
 801357c:	435f      	muls	r7, r3
 801357e:	fb08 770b 	mla	r7, r8, fp, r7
 8013582:	f892 b002 	ldrb.w	fp, [r2, #2]
 8013586:	f8b4 e000 	ldrh.w	lr, [r4]
 801358a:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 801358c:	fb01 770b 	mla	r7, r1, fp, r7
 8013590:	f890 b002 	ldrb.w	fp, [r0, #2]
 8013594:	fb09 770b 	mla	r7, r9, fp, r7
 8013598:	ea4f 2b2e 	mov.w	fp, lr, asr #8
 801359c:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
 80135a0:	fb1b fb04 	smulbb	fp, fp, r4
 80135a4:	9c12      	ldr	r4, [sp, #72]	; 0x48
 80135a6:	f3c7 2707 	ubfx	r7, r7, #8, #8
 80135aa:	fb07 b704 	mla	r7, r7, r4, fp
 80135ae:	f896 b001 	ldrb.w	fp, [r6, #1]
 80135b2:	f89c 6001 	ldrb.w	r6, [ip, #1]
 80135b6:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 80135b8:	f89c c000 	ldrb.w	ip, [ip]
 80135bc:	435e      	muls	r6, r3
 80135be:	fb08 660b 	mla	r6, r8, fp, r6
 80135c2:	f892 b001 	ldrb.w	fp, [r2, #1]
 80135c6:	fb01 660b 	mla	r6, r1, fp, r6
 80135ca:	f890 b001 	ldrb.w	fp, [r0, #1]
 80135ce:	fb09 660b 	mla	r6, r9, fp, r6
 80135d2:	ea4f 0bee 	mov.w	fp, lr, asr #3
 80135d6:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 80135da:	fb1b fb04 	smulbb	fp, fp, r4
 80135de:	9c12      	ldr	r4, [sp, #72]	; 0x48
 80135e0:	f3c6 2607 	ubfx	r6, r6, #8, #8
 80135e4:	fb06 b604 	mla	r6, r6, r4, fp
 80135e8:	9c08      	ldr	r4, [sp, #32]
 80135ea:	f814 a00a 	ldrb.w	sl, [r4, sl]
 80135ee:	fb03 f30c 	mul.w	r3, r3, ip
 80135f2:	f892 c000 	ldrb.w	ip, [r2]
 80135f6:	fb08 330a 	mla	r3, r8, sl, r3
 80135fa:	fb01 330c 	mla	r3, r1, ip, r3
 80135fe:	f890 c000 	ldrb.w	ip, [r0]
 8013602:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8013606:	fb09 3c0c 	mla	ip, r9, ip, r3
 801360a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801360c:	fa5f fe8e 	uxtb.w	lr, lr
 8013610:	fb1e fe03 	smulbb	lr, lr, r3
 8013614:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8013616:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 801361a:	fb0c ec03 	mla	ip, ip, r3, lr
 801361e:	b2bf      	uxth	r7, r7
 8013620:	b2b6      	uxth	r6, r6
 8013622:	fa1f fc8c 	uxth.w	ip, ip
 8013626:	1c7b      	adds	r3, r7, #1
 8013628:	f10c 0201 	add.w	r2, ip, #1
 801362c:	f106 0b01 	add.w	fp, r6, #1
 8013630:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 8013634:	eb02 221c 	add.w	r2, r2, ip, lsr #8
 8013638:	eb0b 2616 	add.w	r6, fp, r6, lsr #8
 801363c:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8013640:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8013644:	0976      	lsrs	r6, r6, #5
 8013646:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8013648:	4317      	orrs	r7, r2
 801364a:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801364e:	4337      	orrs	r7, r6
 8013650:	f823 7b02 	strh.w	r7, [r3], #2
 8013654:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 8013656:	930d      	str	r3, [sp, #52]	; 0x34
 8013658:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801365a:	4413      	add	r3, r2
 801365c:	9329      	str	r3, [sp, #164]	; 0xa4
 801365e:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 8013660:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8013662:	4413      	add	r3, r2
 8013664:	932a      	str	r3, [sp, #168]	; 0xa8
 8013666:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8013668:	3b01      	subs	r3, #1
 801366a:	9311      	str	r3, [sp, #68]	; 0x44
 801366c:	e5e1      	b.n	8013232 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xd6>
 801366e:	b151      	cbz	r1, 8013686 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x52a>
 8013670:	5d52      	ldrb	r2, [r2, r5]
 8013672:	9808      	ldr	r0, [sp, #32]
 8013674:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8013678:	4402      	add	r2, r0
 801367a:	4630      	mov	r0, r6
 801367c:	46b4      	mov	ip, r6
 801367e:	e767      	b.n	8013550 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3f4>
 8013680:	4630      	mov	r0, r6
 8013682:	4632      	mov	r2, r6
 8013684:	e764      	b.n	8013550 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3f4>
 8013686:	4630      	mov	r0, r6
 8013688:	4632      	mov	r2, r6
 801368a:	e7f7      	b.n	801367c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x520>
 801368c:	b017      	add	sp, #92	; 0x5c
 801368e:	ecbd 8b08 	vpop	{d8-d11}
 8013692:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

08013698 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>:
 8013698:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801369c:	880e      	ldrh	r6, [r1, #0]
 801369e:	b085      	sub	sp, #20
 80136a0:	0230      	lsls	r0, r6, #8
 80136a2:	e9dd 7510 	ldrd	r7, r5, [sp, #64]	; 0x40
 80136a6:	f400 0b78 	and.w	fp, r0, #16252928	; 0xf80000
 80136aa:	0170      	lsls	r0, r6, #5
 80136ac:	f9bd c038 	ldrsh.w	ip, [sp, #56]	; 0x38
 80136b0:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	; 0x3c
 80136b4:	f89d 404c 	ldrb.w	r4, [sp, #76]	; 0x4c
 80136b8:	f400 407c 	and.w	r0, r0, #64512	; 0xfc00
 80136bc:	00f6      	lsls	r6, r6, #3
 80136be:	ea4b 0000 	orr.w	r0, fp, r0
 80136c2:	b2f6      	uxtb	r6, r6
 80136c4:	4691      	mov	r9, r2
 80136c6:	fb05 7a0c 	mla	sl, r5, ip, r7
 80136ca:	4306      	orrs	r6, r0
 80136cc:	2d00      	cmp	r5, #0
 80136ce:	f89d 2048 	ldrb.w	r2, [sp, #72]	; 0x48
 80136d2:	9603      	str	r6, [sp, #12]
 80136d4:	eb09 0e0a 	add.w	lr, r9, sl
 80136d8:	db42      	blt.n	8013760 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xc8>
 80136da:	45a8      	cmp	r8, r5
 80136dc:	dd40      	ble.n	8013760 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xc8>
 80136de:	2f00      	cmp	r7, #0
 80136e0:	db3c      	blt.n	801375c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xc4>
 80136e2:	45bc      	cmp	ip, r7
 80136e4:	dd3a      	ble.n	801375c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xc4>
 80136e6:	f819 600a 	ldrb.w	r6, [r9, sl]
 80136ea:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 80136ee:	441e      	add	r6, r3
 80136f0:	1c78      	adds	r0, r7, #1
 80136f2:	d438      	bmi.n	8013766 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xce>
 80136f4:	4584      	cmp	ip, r0
 80136f6:	dd36      	ble.n	8013766 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xce>
 80136f8:	b3aa      	cbz	r2, 8013766 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xce>
 80136fa:	f89e 0001 	ldrb.w	r0, [lr, #1]
 80136fe:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8013702:	4418      	add	r0, r3
 8013704:	3501      	adds	r5, #1
 8013706:	d432      	bmi.n	801376e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd6>
 8013708:	45a8      	cmp	r8, r5
 801370a:	dd30      	ble.n	801376e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd6>
 801370c:	b37c      	cbz	r4, 801376e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd6>
 801370e:	2f00      	cmp	r7, #0
 8013710:	db2b      	blt.n	801376a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd2>
 8013712:	45bc      	cmp	ip, r7
 8013714:	dd29      	ble.n	801376a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd2>
 8013716:	f81e 500c 	ldrb.w	r5, [lr, ip]
 801371a:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 801371e:	441d      	add	r5, r3
 8013720:	3701      	adds	r7, #1
 8013722:	d427      	bmi.n	8013774 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xdc>
 8013724:	45bc      	cmp	ip, r7
 8013726:	dd25      	ble.n	8013774 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xdc>
 8013728:	b322      	cbz	r2, 8013774 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xdc>
 801372a:	44f4      	add	ip, lr
 801372c:	f89c 7001 	ldrb.w	r7, [ip, #1]
 8013730:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 8013734:	443b      	add	r3, r7
 8013736:	781f      	ldrb	r7, [r3, #0]
 8013738:	f896 a000 	ldrb.w	sl, [r6]
 801373c:	f890 b000 	ldrb.w	fp, [r0]
 8013740:	f895 9000 	ldrb.w	r9, [r5]
 8013744:	9700      	str	r7, [sp, #0]
 8013746:	2a0f      	cmp	r2, #15
 8013748:	d801      	bhi.n	801374e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xb6>
 801374a:	2c0f      	cmp	r4, #15
 801374c:	d914      	bls.n	8013778 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xe0>
 801374e:	4b2c      	ldr	r3, [pc, #176]	; (8013800 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x168>)
 8013750:	4a2c      	ldr	r2, [pc, #176]	; (8013804 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x16c>)
 8013752:	482d      	ldr	r0, [pc, #180]	; (8013808 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x170>)
 8013754:	f240 210d 	movw	r1, #525	; 0x20d
 8013758:	f005 ff10 	bl	801957c <__assert_func>
 801375c:	ae03      	add	r6, sp, #12
 801375e:	e7c7      	b.n	80136f0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x58>
 8013760:	a803      	add	r0, sp, #12
 8013762:	4606      	mov	r6, r0
 8013764:	e7ce      	b.n	8013704 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6c>
 8013766:	a803      	add	r0, sp, #12
 8013768:	e7cc      	b.n	8013704 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6c>
 801376a:	ad03      	add	r5, sp, #12
 801376c:	e7d8      	b.n	8013720 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x88>
 801376e:	ab03      	add	r3, sp, #12
 8013770:	461d      	mov	r5, r3
 8013772:	e7e0      	b.n	8013736 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x9e>
 8013774:	ab03      	add	r3, sp, #12
 8013776:	e7de      	b.n	8013736 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x9e>
 8013778:	b292      	uxth	r2, r2
 801377a:	b2a4      	uxth	r4, r4
 801377c:	fb02 f804 	mul.w	r8, r2, r4
 8013780:	ebc8 1404 	rsb	r4, r8, r4, lsl #4
 8013784:	0112      	lsls	r2, r2, #4
 8013786:	b2a4      	uxth	r4, r4
 8013788:	f890 e002 	ldrb.w	lr, [r0, #2]
 801378c:	78b7      	ldrb	r7, [r6, #2]
 801378e:	7840      	ldrb	r0, [r0, #1]
 8013790:	7876      	ldrb	r6, [r6, #1]
 8013792:	f5c2 7c80 	rsb	ip, r2, #256	; 0x100
 8013796:	eba2 0208 	sub.w	r2, r2, r8
 801379a:	b292      	uxth	r2, r2
 801379c:	ebac 0c04 	sub.w	ip, ip, r4
 80137a0:	fa1f fc8c 	uxth.w	ip, ip
 80137a4:	fb02 fe0e 	mul.w	lr, r2, lr
 80137a8:	fb0c ee07 	mla	lr, ip, r7, lr
 80137ac:	78af      	ldrb	r7, [r5, #2]
 80137ae:	fb04 ee07 	mla	lr, r4, r7, lr
 80137b2:	789f      	ldrb	r7, [r3, #2]
 80137b4:	785b      	ldrb	r3, [r3, #1]
 80137b6:	fb08 e707 	mla	r7, r8, r7, lr
 80137ba:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 80137be:	fb02 fe0b 	mul.w	lr, r2, fp
 80137c2:	4342      	muls	r2, r0
 80137c4:	7868      	ldrb	r0, [r5, #1]
 80137c6:	9701      	str	r7, [sp, #4]
 80137c8:	fb0c ee0a 	mla	lr, ip, sl, lr
 80137cc:	9f00      	ldr	r7, [sp, #0]
 80137ce:	fb0c 2206 	mla	r2, ip, r6, r2
 80137d2:	fb04 ee09 	mla	lr, r4, r9, lr
 80137d6:	fb04 2400 	mla	r4, r4, r0, r2
 80137da:	fb08 ee07 	mla	lr, r8, r7, lr
 80137de:	9f01      	ldr	r7, [sp, #4]
 80137e0:	fb08 4803 	mla	r8, r8, r3, r4
 80137e4:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 80137e8:	ea4f 1858 	mov.w	r8, r8, lsr #5
 80137ec:	ea47 070e 	orr.w	r7, r7, lr
 80137f0:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 80137f4:	ea47 0708 	orr.w	r7, r7, r8
 80137f8:	800f      	strh	r7, [r1, #0]
 80137fa:	b005      	add	sp, #20
 80137fc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013800:	0801d2ad 	.word	0x0801d2ad
 8013804:	0801d805 	.word	0x0801d805
 8013808:	0801d335 	.word	0x0801d335

0801380c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 801380c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013810:	ed2d 8b0a 	vpush	{d8-d12}
 8013814:	b091      	sub	sp, #68	; 0x44
 8013816:	eeb0 aa40 	vmov.f32	s20, s0
 801381a:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 801381c:	9307      	str	r3, [sp, #28]
 801381e:	f9bd 30b4 	ldrsh.w	r3, [sp, #180]	; 0xb4
 8013822:	910c      	str	r1, [sp, #48]	; 0x30
 8013824:	9309      	str	r3, [sp, #36]	; 0x24
 8013826:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
 801382a:	900f      	str	r0, [sp, #60]	; 0x3c
 801382c:	6860      	ldr	r0, [r4, #4]
 801382e:	920e      	str	r2, [sp, #56]	; 0x38
 8013830:	fb00 1303 	mla	r3, r0, r3, r1
 8013834:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
 8013836:	6821      	ldr	r1, [r4, #0]
 8013838:	6854      	ldr	r4, [r2, #4]
 801383a:	f8dd b098 	ldr.w	fp, [sp, #152]	; 0x98
 801383e:	f9bd 50b0 	ldrsh.w	r5, [sp, #176]	; 0xb0
 8013842:	eb01 0343 	add.w	r3, r1, r3, lsl #1
 8013846:	9308      	str	r3, [sp, #32]
 8013848:	6813      	ldr	r3, [r2, #0]
 801384a:	930a      	str	r3, [sp, #40]	; 0x28
 801384c:	eef0 9a60 	vmov.f32	s19, s1
 8013850:	eeb0 9a41 	vmov.f32	s18, s2
 8013854:	eeb0 8a62 	vmov.f32	s16, s5
 8013858:	eef0 8a43 	vmov.f32	s17, s6
 801385c:	eeb0 ca44 	vmov.f32	s24, s8
 8013860:	eef0 ba64 	vmov.f32	s23, s9
 8013864:	eeb0 ba45 	vmov.f32	s22, s10
 8013868:	3404      	adds	r4, #4
 801386a:	eef7 aa00 	vmov.f32	s21, #112	; 0x3f800000  1.0
 801386e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8013870:	2b00      	cmp	r3, #0
 8013872:	dc03      	bgt.n	801387c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x70>
 8013874:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8013876:	2b00      	cmp	r3, #0
 8013878:	f340 81cb 	ble.w	8013c12 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x406>
 801387c:	9b07      	ldr	r3, [sp, #28]
 801387e:	2b00      	cmp	r3, #0
 8013880:	f340 80dd 	ble.w	8013a3e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x232>
 8013884:	9a25      	ldr	r2, [sp, #148]	; 0x94
 8013886:	1412      	asrs	r2, r2, #16
 8013888:	ea4f 432b 	mov.w	r3, fp, asr #16
 801388c:	d42c      	bmi.n	80138e8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xdc>
 801388e:	1c51      	adds	r1, r2, #1
 8013890:	428d      	cmp	r5, r1
 8013892:	dd2c      	ble.n	80138ee <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe2>
 8013894:	2b00      	cmp	r3, #0
 8013896:	db2a      	blt.n	80138ee <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe2>
 8013898:	9809      	ldr	r0, [sp, #36]	; 0x24
 801389a:	1c59      	adds	r1, r3, #1
 801389c:	4288      	cmp	r0, r1
 801389e:	dd26      	ble.n	80138ee <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe2>
 80138a0:	9b07      	ldr	r3, [sp, #28]
 80138a2:	9a27      	ldr	r2, [sp, #156]	; 0x9c
 80138a4:	9925      	ldr	r1, [sp, #148]	; 0x94
 80138a6:	3b01      	subs	r3, #1
 80138a8:	fb02 1203 	mla	r2, r2, r3, r1
 80138ac:	1412      	asrs	r2, r2, #16
 80138ae:	d428      	bmi.n	8013902 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf6>
 80138b0:	3201      	adds	r2, #1
 80138b2:	4295      	cmp	r5, r2
 80138b4:	dd25      	ble.n	8013902 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf6>
 80138b6:	9a28      	ldr	r2, [sp, #160]	; 0xa0
 80138b8:	fb02 b303 	mla	r3, r2, r3, fp
 80138bc:	141b      	asrs	r3, r3, #16
 80138be:	d420      	bmi.n	8013902 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf6>
 80138c0:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80138c2:	3301      	adds	r3, #1
 80138c4:	429a      	cmp	r2, r3
 80138c6:	dd1c      	ble.n	8013902 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf6>
 80138c8:	9b07      	ldr	r3, [sp, #28]
 80138ca:	930b      	str	r3, [sp, #44]	; 0x2c
 80138cc:	9b08      	ldr	r3, [sp, #32]
 80138ce:	930d      	str	r3, [sp, #52]	; 0x34
 80138d0:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80138d2:	2b00      	cmp	r3, #0
 80138d4:	f300 8116 	bgt.w	8013b04 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2f8>
 80138d8:	9b07      	ldr	r3, [sp, #28]
 80138da:	9a08      	ldr	r2, [sp, #32]
 80138dc:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80138e0:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80138e4:	9308      	str	r3, [sp, #32]
 80138e6:	e0ac      	b.n	8013a42 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x236>
 80138e8:	1c51      	adds	r1, r2, #1
 80138ea:	f040 809b 	bne.w	8013a24 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x218>
 80138ee:	42aa      	cmp	r2, r5
 80138f0:	f280 8098 	bge.w	8013a24 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x218>
 80138f4:	1c5a      	adds	r2, r3, #1
 80138f6:	f2c0 8095 	blt.w	8013a24 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x218>
 80138fa:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80138fc:	4293      	cmp	r3, r2
 80138fe:	f280 8091 	bge.w	8013a24 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x218>
 8013902:	9b07      	ldr	r3, [sp, #28]
 8013904:	930d      	str	r3, [sp, #52]	; 0x34
 8013906:	9b08      	ldr	r3, [sp, #32]
 8013908:	930b      	str	r3, [sp, #44]	; 0x2c
 801390a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801390c:	2b00      	cmp	r3, #0
 801390e:	dde3      	ble.n	80138d8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xcc>
 8013910:	9825      	ldr	r0, [sp, #148]	; 0x94
 8013912:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8013914:	1400      	asrs	r0, r0, #16
 8013916:	ea4f 422b 	mov.w	r2, fp, asr #16
 801391a:	f3c3 3303 	ubfx	r3, r3, #12, #4
 801391e:	f3cb 3103 	ubfx	r1, fp, #12, #4
 8013922:	f100 80d9 	bmi.w	8013ad8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2cc>
 8013926:	1c46      	adds	r6, r0, #1
 8013928:	42b5      	cmp	r5, r6
 801392a:	f340 80d7 	ble.w	8013adc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2d0>
 801392e:	2a00      	cmp	r2, #0
 8013930:	f2c0 80d4 	blt.w	8013adc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2d0>
 8013934:	9f09      	ldr	r7, [sp, #36]	; 0x24
 8013936:	1c56      	adds	r6, r2, #1
 8013938:	42b7      	cmp	r7, r6
 801393a:	f340 80cf 	ble.w	8013adc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2d0>
 801393e:	fb02 0005 	mla	r0, r2, r5, r0
 8013942:	9e0a      	ldr	r6, [sp, #40]	; 0x28
 8013944:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8013946:	4402      	add	r2, r0
 8013948:	5c30      	ldrb	r0, [r6, r0]
 801394a:	eb00 0840 	add.w	r8, r0, r0, lsl #1
 801394e:	eb04 0c08 	add.w	ip, r4, r8
 8013952:	2b00      	cmp	r3, #0
 8013954:	f000 80b2 	beq.w	8013abc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2b0>
 8013958:	7856      	ldrb	r6, [r2, #1]
 801395a:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 801395e:	4426      	add	r6, r4
 8013960:	2900      	cmp	r1, #0
 8013962:	f000 80b3 	beq.w	8013acc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2c0>
 8013966:	1950      	adds	r0, r2, r5
 8013968:	5d52      	ldrb	r2, [r2, r5]
 801396a:	7840      	ldrb	r0, [r0, #1]
 801396c:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8013970:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8013974:	4422      	add	r2, r4
 8013976:	4420      	add	r0, r4
 8013978:	b29b      	uxth	r3, r3
 801397a:	b289      	uxth	r1, r1
 801397c:	fb03 f901 	mul.w	r9, r3, r1
 8013980:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8013984:	011b      	lsls	r3, r3, #4
 8013986:	b289      	uxth	r1, r1
 8013988:	78b7      	ldrb	r7, [r6, #2]
 801398a:	f89c a002 	ldrb.w	sl, [ip, #2]
 801398e:	f89c c001 	ldrb.w	ip, [ip, #1]
 8013992:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 8013996:	eba3 0309 	sub.w	r3, r3, r9
 801399a:	b29b      	uxth	r3, r3
 801399c:	ebae 0e01 	sub.w	lr, lr, r1
 80139a0:	fa1f fe8e 	uxth.w	lr, lr
 80139a4:	435f      	muls	r7, r3
 80139a6:	fb0e 770a 	mla	r7, lr, sl, r7
 80139aa:	f892 a002 	ldrb.w	sl, [r2, #2]
 80139ae:	fb01 770a 	mla	r7, r1, sl, r7
 80139b2:	f890 a002 	ldrb.w	sl, [r0, #2]
 80139b6:	fb09 7a0a 	mla	sl, r9, sl, r7
 80139ba:	f814 7008 	ldrb.w	r7, [r4, r8]
 80139be:	f896 8000 	ldrb.w	r8, [r6]
 80139c2:	7876      	ldrb	r6, [r6, #1]
 80139c4:	fb03 f808 	mul.w	r8, r3, r8
 80139c8:	fb0e 8807 	mla	r8, lr, r7, r8
 80139cc:	7817      	ldrb	r7, [r2, #0]
 80139ce:	fb01 8807 	mla	r8, r1, r7, r8
 80139d2:	7807      	ldrb	r7, [r0, #0]
 80139d4:	fb09 8707 	mla	r7, r9, r7, r8
 80139d8:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
 80139dc:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 80139e0:	ea4a 0707 	orr.w	r7, sl, r7
 80139e4:	4373      	muls	r3, r6
 80139e6:	f892 a001 	ldrb.w	sl, [r2, #1]
 80139ea:	fb0e 330c 	mla	r3, lr, ip, r3
 80139ee:	fb01 310a 	mla	r1, r1, sl, r3
 80139f2:	f890 a001 	ldrb.w	sl, [r0, #1]
 80139f6:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80139f8:	fb09 1a0a 	mla	sl, r9, sl, r1
 80139fc:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8013a00:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8013a04:	ea47 070a 	orr.w	r7, r7, sl
 8013a08:	801f      	strh	r7, [r3, #0]
 8013a0a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8013a0c:	9a27      	ldr	r2, [sp, #156]	; 0x9c
 8013a0e:	3302      	adds	r3, #2
 8013a10:	930b      	str	r3, [sp, #44]	; 0x2c
 8013a12:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8013a14:	4413      	add	r3, r2
 8013a16:	9325      	str	r3, [sp, #148]	; 0x94
 8013a18:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8013a1a:	449b      	add	fp, r3
 8013a1c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8013a1e:	3b01      	subs	r3, #1
 8013a20:	930d      	str	r3, [sp, #52]	; 0x34
 8013a22:	e772      	b.n	801390a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfe>
 8013a24:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8013a26:	9a27      	ldr	r2, [sp, #156]	; 0x9c
 8013a28:	4413      	add	r3, r2
 8013a2a:	9325      	str	r3, [sp, #148]	; 0x94
 8013a2c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8013a2e:	449b      	add	fp, r3
 8013a30:	9b07      	ldr	r3, [sp, #28]
 8013a32:	3b01      	subs	r3, #1
 8013a34:	9307      	str	r3, [sp, #28]
 8013a36:	9b08      	ldr	r3, [sp, #32]
 8013a38:	3302      	adds	r3, #2
 8013a3a:	9308      	str	r3, [sp, #32]
 8013a3c:	e71e      	b.n	801387c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x70>
 8013a3e:	f47f af2f 	bne.w	80138a0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x94>
 8013a42:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8013a44:	2b00      	cmp	r3, #0
 8013a46:	f340 80e4 	ble.w	8013c12 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x406>
 8013a4a:	ee3a aa0c 	vadd.f32	s20, s20, s24
 8013a4e:	ee79 9aab 	vadd.f32	s19, s19, s23
 8013a52:	eeca 7a8a 	vdiv.f32	s15, s21, s20
 8013a56:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8013a58:	ee39 9a0b 	vadd.f32	s18, s18, s22
 8013a5c:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8013a60:	eef0 6a48 	vmov.f32	s13, s16
 8013a64:	ee69 7a27 	vmul.f32	s15, s18, s15
 8013a68:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8013a6c:	ee37 8a48 	vsub.f32	s16, s14, s16
 8013a70:	edcd 6a25 	vstr	s13, [sp, #148]	; 0x94
 8013a74:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8013a78:	eef0 6a68 	vmov.f32	s13, s17
 8013a7c:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8013a80:	ee18 2a10 	vmov	r2, s16
 8013a84:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8013a88:	fb92 f3f3 	sdiv	r3, r2, r3
 8013a8c:	ee18 2a90 	vmov	r2, s17
 8013a90:	9327      	str	r3, [sp, #156]	; 0x9c
 8013a92:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8013a94:	fb92 f3f3 	sdiv	r3, r2, r3
 8013a98:	9328      	str	r3, [sp, #160]	; 0xa0
 8013a9a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8013a9c:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8013a9e:	3b01      	subs	r3, #1
 8013aa0:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8013aa4:	930c      	str	r3, [sp, #48]	; 0x30
 8013aa6:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8013aa8:	bf08      	it	eq
 8013aaa:	4613      	moveq	r3, r2
 8013aac:	ee16 ba90 	vmov	fp, s13
 8013ab0:	9307      	str	r3, [sp, #28]
 8013ab2:	eef0 8a67 	vmov.f32	s17, s15
 8013ab6:	eeb0 8a47 	vmov.f32	s16, s14
 8013aba:	e6d8      	b.n	801386e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x62>
 8013abc:	b149      	cbz	r1, 8013ad2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2c6>
 8013abe:	5d52      	ldrb	r2, [r2, r5]
 8013ac0:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8013ac4:	4422      	add	r2, r4
 8013ac6:	4660      	mov	r0, ip
 8013ac8:	4666      	mov	r6, ip
 8013aca:	e755      	b.n	8013978 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x16c>
 8013acc:	4660      	mov	r0, ip
 8013ace:	4662      	mov	r2, ip
 8013ad0:	e752      	b.n	8013978 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x16c>
 8013ad2:	4660      	mov	r0, ip
 8013ad4:	4662      	mov	r2, ip
 8013ad6:	e7f7      	b.n	8013ac8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2bc>
 8013ad8:	1c47      	adds	r7, r0, #1
 8013ada:	d196      	bne.n	8013a0a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1fe>
 8013adc:	4285      	cmp	r5, r0
 8013ade:	dd94      	ble.n	8013a0a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1fe>
 8013ae0:	1c56      	adds	r6, r2, #1
 8013ae2:	db92      	blt.n	8013a0a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1fe>
 8013ae4:	9e09      	ldr	r6, [sp, #36]	; 0x24
 8013ae6:	4296      	cmp	r6, r2
 8013ae8:	dd8f      	ble.n	8013a0a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1fe>
 8013aea:	e9cd 3104 	strd	r3, r1, [sp, #16]
 8013aee:	e9cd 0202 	strd	r0, r2, [sp, #8]
 8013af2:	e9cd 5600 	strd	r5, r6, [sp]
 8013af6:	4623      	mov	r3, r4
 8013af8:	e9dd 210a 	ldrd	r2, r1, [sp, #40]	; 0x28
 8013afc:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8013afe:	f7ff fdcb 	bl	8013698 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>
 8013b02:	e782      	b.n	8013a0a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1fe>
 8013b04:	9a25      	ldr	r2, [sp, #148]	; 0x94
 8013b06:	9e0a      	ldr	r6, [sp, #40]	; 0x28
 8013b08:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8013b0a:	1412      	asrs	r2, r2, #16
 8013b0c:	ea4f 402b 	mov.w	r0, fp, asr #16
 8013b10:	fb05 2000 	mla	r0, r5, r0, r2
 8013b14:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8013b16:	f816 8000 	ldrb.w	r8, [r6, r0]
 8013b1a:	f3c3 3303 	ubfx	r3, r3, #12, #4
 8013b1e:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 8013b22:	f3cb 3103 	ubfx	r1, fp, #12, #4
 8013b26:	4402      	add	r2, r0
 8013b28:	eb04 0c08 	add.w	ip, r4, r8
 8013b2c:	2b00      	cmp	r3, #0
 8013b2e:	d062      	beq.n	8013bf6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3ea>
 8013b30:	7856      	ldrb	r6, [r2, #1]
 8013b32:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 8013b36:	4426      	add	r6, r4
 8013b38:	2900      	cmp	r1, #0
 8013b3a:	d064      	beq.n	8013c06 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3fa>
 8013b3c:	1950      	adds	r0, r2, r5
 8013b3e:	5d52      	ldrb	r2, [r2, r5]
 8013b40:	7840      	ldrb	r0, [r0, #1]
 8013b42:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8013b46:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8013b4a:	4422      	add	r2, r4
 8013b4c:	4420      	add	r0, r4
 8013b4e:	b29b      	uxth	r3, r3
 8013b50:	b289      	uxth	r1, r1
 8013b52:	fb03 f901 	mul.w	r9, r3, r1
 8013b56:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8013b5a:	011b      	lsls	r3, r3, #4
 8013b5c:	b289      	uxth	r1, r1
 8013b5e:	78b7      	ldrb	r7, [r6, #2]
 8013b60:	f89c a002 	ldrb.w	sl, [ip, #2]
 8013b64:	f89c c001 	ldrb.w	ip, [ip, #1]
 8013b68:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 8013b6c:	eba3 0309 	sub.w	r3, r3, r9
 8013b70:	b29b      	uxth	r3, r3
 8013b72:	ebae 0e01 	sub.w	lr, lr, r1
 8013b76:	fa1f fe8e 	uxth.w	lr, lr
 8013b7a:	435f      	muls	r7, r3
 8013b7c:	fb0e 770a 	mla	r7, lr, sl, r7
 8013b80:	f892 a002 	ldrb.w	sl, [r2, #2]
 8013b84:	fb01 770a 	mla	r7, r1, sl, r7
 8013b88:	f890 a002 	ldrb.w	sl, [r0, #2]
 8013b8c:	fb09 7a0a 	mla	sl, r9, sl, r7
 8013b90:	f814 7008 	ldrb.w	r7, [r4, r8]
 8013b94:	f896 8000 	ldrb.w	r8, [r6]
 8013b98:	7876      	ldrb	r6, [r6, #1]
 8013b9a:	fb03 f808 	mul.w	r8, r3, r8
 8013b9e:	fb0e 8807 	mla	r8, lr, r7, r8
 8013ba2:	7817      	ldrb	r7, [r2, #0]
 8013ba4:	fb01 8807 	mla	r8, r1, r7, r8
 8013ba8:	7807      	ldrb	r7, [r0, #0]
 8013baa:	fb09 8707 	mla	r7, r9, r7, r8
 8013bae:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
 8013bb2:	4373      	muls	r3, r6
 8013bb4:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8013bb8:	7856      	ldrb	r6, [r2, #1]
 8013bba:	9a27      	ldr	r2, [sp, #156]	; 0x9c
 8013bbc:	ea4a 0707 	orr.w	r7, sl, r7
 8013bc0:	fb0e 330c 	mla	r3, lr, ip, r3
 8013bc4:	f890 a001 	ldrb.w	sl, [r0, #1]
 8013bc8:	fb01 3306 	mla	r3, r1, r6, r3
 8013bcc:	fb09 3a0a 	mla	sl, r9, sl, r3
 8013bd0:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8013bd4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8013bd6:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8013bda:	ea47 070a 	orr.w	r7, r7, sl
 8013bde:	f823 7b02 	strh.w	r7, [r3], #2
 8013be2:	930d      	str	r3, [sp, #52]	; 0x34
 8013be4:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8013be6:	4413      	add	r3, r2
 8013be8:	9325      	str	r3, [sp, #148]	; 0x94
 8013bea:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8013bec:	449b      	add	fp, r3
 8013bee:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8013bf0:	3b01      	subs	r3, #1
 8013bf2:	930b      	str	r3, [sp, #44]	; 0x2c
 8013bf4:	e66c      	b.n	80138d0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xc4>
 8013bf6:	b149      	cbz	r1, 8013c0c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x400>
 8013bf8:	5d52      	ldrb	r2, [r2, r5]
 8013bfa:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8013bfe:	4422      	add	r2, r4
 8013c00:	4660      	mov	r0, ip
 8013c02:	4666      	mov	r6, ip
 8013c04:	e7a3      	b.n	8013b4e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x342>
 8013c06:	4660      	mov	r0, ip
 8013c08:	4662      	mov	r2, ip
 8013c0a:	e7a0      	b.n	8013b4e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x342>
 8013c0c:	4660      	mov	r0, ip
 8013c0e:	4662      	mov	r2, ip
 8013c10:	e7f7      	b.n	8013c02 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3f6>
 8013c12:	b011      	add	sp, #68	; 0x44
 8013c14:	ecbd 8b0a 	vpop	{d8-d12}
 8013c18:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08013c1c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>:
 8013c1c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013c20:	8808      	ldrh	r0, [r1, #0]
 8013c22:	b085      	sub	sp, #20
 8013c24:	1206      	asrs	r6, r0, #8
 8013c26:	e9dd 5410 	ldrd	r5, r4, [sp, #64]	; 0x40
 8013c2a:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8013c2e:	9600      	str	r6, [sp, #0]
 8013c30:	f9bd c038 	ldrsh.w	ip, [sp, #56]	; 0x38
 8013c34:	f9bd 903c 	ldrsh.w	r9, [sp, #60]	; 0x3c
 8013c38:	f89d 704c 	ldrb.w	r7, [sp, #76]	; 0x4c
 8013c3c:	10c6      	asrs	r6, r0, #3
 8013c3e:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8013c42:	9601      	str	r6, [sp, #4]
 8013c44:	00c0      	lsls	r0, r0, #3
 8013c46:	fb04 560c 	mla	r6, r4, ip, r5
 8013c4a:	b2c0      	uxtb	r0, r0
 8013c4c:	4692      	mov	sl, r2
 8013c4e:	eb02 0e06 	add.w	lr, r2, r6
 8013c52:	9a00      	ldr	r2, [sp, #0]
 8013c54:	9002      	str	r0, [sp, #8]
 8013c56:	f040 407f 	orr.w	r0, r0, #4278190080	; 0xff000000
 8013c5a:	ea40 4002 	orr.w	r0, r0, r2, lsl #16
 8013c5e:	9a01      	ldr	r2, [sp, #4]
 8013c60:	2c00      	cmp	r4, #0
 8013c62:	4698      	mov	r8, r3
 8013c64:	ea40 2002 	orr.w	r0, r0, r2, lsl #8
 8013c68:	f89d 3048 	ldrb.w	r3, [sp, #72]	; 0x48
 8013c6c:	db3e      	blt.n	8013cec <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xd0>
 8013c6e:	45a1      	cmp	r9, r4
 8013c70:	dd3c      	ble.n	8013cec <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xd0>
 8013c72:	2d00      	cmp	r5, #0
 8013c74:	db38      	blt.n	8013ce8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xcc>
 8013c76:	45ac      	cmp	ip, r5
 8013c78:	dd36      	ble.n	8013ce8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xcc>
 8013c7a:	f81a 2006 	ldrb.w	r2, [sl, r6]
 8013c7e:	f858 2022 	ldr.w	r2, [r8, r2, lsl #2]
 8013c82:	1c6e      	adds	r6, r5, #1
 8013c84:	d435      	bmi.n	8013cf2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xd6>
 8013c86:	45b4      	cmp	ip, r6
 8013c88:	dd33      	ble.n	8013cf2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xd6>
 8013c8a:	b393      	cbz	r3, 8013cf2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xd6>
 8013c8c:	f89e 6001 	ldrb.w	r6, [lr, #1]
 8013c90:	f858 6026 	ldr.w	r6, [r8, r6, lsl #2]
 8013c94:	3401      	adds	r4, #1
 8013c96:	d430      	bmi.n	8013cfa <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xde>
 8013c98:	45a1      	cmp	r9, r4
 8013c9a:	dd2e      	ble.n	8013cfa <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xde>
 8013c9c:	b36f      	cbz	r7, 8013cfa <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xde>
 8013c9e:	2d00      	cmp	r5, #0
 8013ca0:	db29      	blt.n	8013cf6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xda>
 8013ca2:	45ac      	cmp	ip, r5
 8013ca4:	dd27      	ble.n	8013cf6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xda>
 8013ca6:	f81e 400c 	ldrb.w	r4, [lr, ip]
 8013caa:	f858 4024 	ldr.w	r4, [r8, r4, lsl #2]
 8013cae:	3501      	adds	r5, #1
 8013cb0:	d407      	bmi.n	8013cc2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xa6>
 8013cb2:	45ac      	cmp	ip, r5
 8013cb4:	dd05      	ble.n	8013cc2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xa6>
 8013cb6:	b123      	cbz	r3, 8013cc2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xa6>
 8013cb8:	44f4      	add	ip, lr
 8013cba:	f89c 0001 	ldrb.w	r0, [ip, #1]
 8013cbe:	f858 0020 	ldr.w	r0, [r8, r0, lsl #2]
 8013cc2:	2b0f      	cmp	r3, #15
 8013cc4:	ea4f 6b12 	mov.w	fp, r2, lsr #24
 8013cc8:	ea4f 6a16 	mov.w	sl, r6, lsr #24
 8013ccc:	ea4f 6914 	mov.w	r9, r4, lsr #24
 8013cd0:	ea4f 6810 	mov.w	r8, r0, lsr #24
 8013cd4:	d801      	bhi.n	8013cda <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xbe>
 8013cd6:	2f0f      	cmp	r7, #15
 8013cd8:	d911      	bls.n	8013cfe <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xe2>
 8013cda:	4b7f      	ldr	r3, [pc, #508]	; (8013ed8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x2bc>)
 8013cdc:	4a7f      	ldr	r2, [pc, #508]	; (8013edc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x2c0>)
 8013cde:	4880      	ldr	r0, [pc, #512]	; (8013ee0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x2c4>)
 8013ce0:	f240 210d 	movw	r1, #525	; 0x20d
 8013ce4:	f005 fc4a 	bl	801957c <__assert_func>
 8013ce8:	4602      	mov	r2, r0
 8013cea:	e7ca      	b.n	8013c82 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x66>
 8013cec:	4606      	mov	r6, r0
 8013cee:	4602      	mov	r2, r0
 8013cf0:	e7d0      	b.n	8013c94 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x78>
 8013cf2:	4606      	mov	r6, r0
 8013cf4:	e7ce      	b.n	8013c94 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x78>
 8013cf6:	4604      	mov	r4, r0
 8013cf8:	e7d9      	b.n	8013cae <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x92>
 8013cfa:	4604      	mov	r4, r0
 8013cfc:	e7e1      	b.n	8013cc2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xa6>
 8013cfe:	b29b      	uxth	r3, r3
 8013d00:	b2bf      	uxth	r7, r7
 8013d02:	fb03 fe07 	mul.w	lr, r3, r7
 8013d06:	ebce 1707 	rsb	r7, lr, r7, lsl #4
 8013d0a:	011b      	lsls	r3, r3, #4
 8013d0c:	eba3 0c0e 	sub.w	ip, r3, lr
 8013d10:	b2bf      	uxth	r7, r7
 8013d12:	f5c3 7580 	rsb	r5, r3, #256	; 0x100
 8013d16:	fa1f fc8c 	uxth.w	ip, ip
 8013d1a:	1bed      	subs	r5, r5, r7
 8013d1c:	b2ad      	uxth	r5, r5
 8013d1e:	fb0c f30a 	mul.w	r3, ip, sl
 8013d22:	fb05 330b 	mla	r3, r5, fp, r3
 8013d26:	fb07 3309 	mla	r3, r7, r9, r3
 8013d2a:	fb0e 3308 	mla	r3, lr, r8, r3
 8013d2e:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8013d32:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 8013d36:	9303      	str	r3, [sp, #12]
 8013d38:	d018      	beq.n	8013d6c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x150>
 8013d3a:	f002 13ff 	and.w	r3, r2, #16711935	; 0xff00ff
 8013d3e:	fb0b f303 	mul.w	r3, fp, r3
 8013d42:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8013d46:	fb0b fb02 	mul.w	fp, fp, r2
 8013d4a:	0a1a      	lsrs	r2, r3, #8
 8013d4c:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8013d50:	f103 1301 	add.w	r3, r3, #65537	; 0x10001
 8013d54:	441a      	add	r2, r3
 8013d56:	f50b 7380 	add.w	r3, fp, #256	; 0x100
 8013d5a:	eb03 231b 	add.w	r3, r3, fp, lsr #8
 8013d5e:	0a12      	lsrs	r2, r2, #8
 8013d60:	0a1b      	lsrs	r3, r3, #8
 8013d62:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8013d66:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8013d6a:	431a      	orrs	r2, r3
 8013d6c:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 8013d70:	d019      	beq.n	8013da6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x18a>
 8013d72:	f006 1bff 	and.w	fp, r6, #16711935	; 0xff00ff
 8013d76:	fb0a fb0b 	mul.w	fp, sl, fp
 8013d7a:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8013d7e:	fb0a fa06 	mul.w	sl, sl, r6
 8013d82:	ea4f 261b 	mov.w	r6, fp, lsr #8
 8013d86:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8013d8a:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8013d8e:	f50a 7380 	add.w	r3, sl, #256	; 0x100
 8013d92:	445e      	add	r6, fp
 8013d94:	eb03 231a 	add.w	r3, r3, sl, lsr #8
 8013d98:	0a36      	lsrs	r6, r6, #8
 8013d9a:	0a1b      	lsrs	r3, r3, #8
 8013d9c:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8013da0:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8013da4:	431e      	orrs	r6, r3
 8013da6:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8013daa:	d019      	beq.n	8013de0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x1c4>
 8013dac:	f004 1aff 	and.w	sl, r4, #16711935	; 0xff00ff
 8013db0:	fb09 fa0a 	mul.w	sl, r9, sl
 8013db4:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 8013db8:	fb09 f904 	mul.w	r9, r9, r4
 8013dbc:	ea4f 241a 	mov.w	r4, sl, lsr #8
 8013dc0:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8013dc4:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8013dc8:	f509 7380 	add.w	r3, r9, #256	; 0x100
 8013dcc:	4454      	add	r4, sl
 8013dce:	eb03 2319 	add.w	r3, r3, r9, lsr #8
 8013dd2:	0a24      	lsrs	r4, r4, #8
 8013dd4:	0a1b      	lsrs	r3, r3, #8
 8013dd6:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8013dda:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8013dde:	431c      	orrs	r4, r3
 8013de0:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8013de4:	d019      	beq.n	8013e1a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x1fe>
 8013de6:	f000 19ff 	and.w	r9, r0, #16711935	; 0xff00ff
 8013dea:	fb08 f909 	mul.w	r9, r8, r9
 8013dee:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8013df2:	fb08 f800 	mul.w	r8, r8, r0
 8013df6:	ea4f 2019 	mov.w	r0, r9, lsr #8
 8013dfa:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 8013dfe:	f109 1901 	add.w	r9, r9, #65537	; 0x10001
 8013e02:	f508 7380 	add.w	r3, r8, #256	; 0x100
 8013e06:	4448      	add	r0, r9
 8013e08:	eb03 2318 	add.w	r3, r3, r8, lsr #8
 8013e0c:	0a00      	lsrs	r0, r0, #8
 8013e0e:	0a1b      	lsrs	r3, r3, #8
 8013e10:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 8013e14:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8013e18:	4318      	orrs	r0, r3
 8013e1a:	f006 18ff 	and.w	r8, r6, #16711935	; 0xff00ff
 8013e1e:	f002 13ff 	and.w	r3, r2, #16711935	; 0xff00ff
 8013e22:	fb0c f808 	mul.w	r8, ip, r8
 8013e26:	fb05 8803 	mla	r8, r5, r3, r8
 8013e2a:	f004 13ff 	and.w	r3, r4, #16711935	; 0xff00ff
 8013e2e:	fb07 8803 	mla	r8, r7, r3, r8
 8013e32:	f000 13ff 	and.w	r3, r0, #16711935	; 0xff00ff
 8013e36:	fb0e 8303 	mla	r3, lr, r3, r8
 8013e3a:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8013e3e:	fb0c f606 	mul.w	r6, ip, r6
 8013e42:	0a1b      	lsrs	r3, r3, #8
 8013e44:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8013e48:	fb05 6202 	mla	r2, r5, r2, r6
 8013e4c:	f003 18ff 	and.w	r8, r3, #16711935	; 0xff00ff
 8013e50:	f404 437f 	and.w	r3, r4, #65280	; 0xff00
 8013e54:	fb07 2703 	mla	r7, r7, r3, r2
 8013e58:	f89d 2050 	ldrb.w	r2, [sp, #80]	; 0x50
 8013e5c:	b295      	uxth	r5, r2
 8013e5e:	9a03      	ldr	r2, [sp, #12]
 8013e60:	f400 437f 	and.w	r3, r0, #65280	; 0xff00
 8013e64:	436a      	muls	r2, r5
 8013e66:	fb0e 7303 	mla	r3, lr, r3, r7
 8013e6a:	1c50      	adds	r0, r2, #1
 8013e6c:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 8013e70:	0a1b      	lsrs	r3, r3, #8
 8013e72:	9a00      	ldr	r2, [sp, #0]
 8013e74:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8013e78:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 8013e7c:	ea48 0303 	orr.w	r3, r8, r3
 8013e80:	b2c0      	uxtb	r0, r0
 8013e82:	fb12 f200 	smulbb	r2, r2, r0
 8013e86:	0c1e      	lsrs	r6, r3, #16
 8013e88:	fb06 2605 	mla	r6, r6, r5, r2
 8013e8c:	9a01      	ldr	r2, [sp, #4]
 8013e8e:	f3c3 2407 	ubfx	r4, r3, #8, #8
 8013e92:	fb12 f200 	smulbb	r2, r2, r0
 8013e96:	fb04 2205 	mla	r2, r4, r5, r2
 8013e9a:	b294      	uxth	r4, r2
 8013e9c:	9a02      	ldr	r2, [sp, #8]
 8013e9e:	b2db      	uxtb	r3, r3
 8013ea0:	fb12 f200 	smulbb	r2, r2, r0
 8013ea4:	fb03 2205 	mla	r2, r3, r5, r2
 8013ea8:	b2b6      	uxth	r6, r6
 8013eaa:	b292      	uxth	r2, r2
 8013eac:	1c73      	adds	r3, r6, #1
 8013eae:	1c50      	adds	r0, r2, #1
 8013eb0:	eb03 2316 	add.w	r3, r3, r6, lsr #8
 8013eb4:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 8013eb8:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8013ebc:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 8013ec0:	4313      	orrs	r3, r2
 8013ec2:	1c62      	adds	r2, r4, #1
 8013ec4:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 8013ec8:	0952      	lsrs	r2, r2, #5
 8013eca:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8013ece:	4313      	orrs	r3, r2
 8013ed0:	800b      	strh	r3, [r1, #0]
 8013ed2:	b005      	add	sp, #20
 8013ed4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013ed8:	0801d2ad 	.word	0x0801d2ad
 8013edc:	0801d805 	.word	0x0801d805
 8013ee0:	0801d335 	.word	0x0801d335

08013ee4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 8013ee4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013ee8:	ed2d 8b08 	vpush	{d8-d11}
 8013eec:	b09b      	sub	sp, #108	; 0x6c
 8013eee:	eeb0 aa40 	vmov.f32	s20, s0
 8013ef2:	9309      	str	r3, [sp, #36]	; 0x24
 8013ef4:	f9bd 30d4 	ldrsh.w	r3, [sp, #212]	; 0xd4
 8013ef8:	9d31      	ldr	r5, [sp, #196]	; 0xc4
 8013efa:	9311      	str	r3, [sp, #68]	; 0x44
 8013efc:	f89d 30dc 	ldrb.w	r3, [sp, #220]	; 0xdc
 8013f00:	9114      	str	r1, [sp, #80]	; 0x50
 8013f02:	9317      	str	r3, [sp, #92]	; 0x5c
 8013f04:	e9dd 1332 	ldrd	r1, r3, [sp, #200]	; 0xc8
 8013f08:	9019      	str	r0, [sp, #100]	; 0x64
 8013f0a:	6868      	ldr	r0, [r5, #4]
 8013f0c:	9218      	str	r2, [sp, #96]	; 0x60
 8013f0e:	fb00 1303 	mla	r3, r0, r3, r1
 8013f12:	6829      	ldr	r1, [r5, #0]
 8013f14:	9a36      	ldr	r2, [sp, #216]	; 0xd8
 8013f16:	f9bd 40d0 	ldrsh.w	r4, [sp, #208]	; 0xd0
 8013f1a:	eb01 0343 	add.w	r3, r1, r3, lsl #1
 8013f1e:	930c      	str	r3, [sp, #48]	; 0x30
 8013f20:	6813      	ldr	r3, [r2, #0]
 8013f22:	9313      	str	r3, [sp, #76]	; 0x4c
 8013f24:	6853      	ldr	r3, [r2, #4]
 8013f26:	3304      	adds	r3, #4
 8013f28:	eef0 9a60 	vmov.f32	s19, s1
 8013f2c:	eeb0 9a41 	vmov.f32	s18, s2
 8013f30:	eeb0 8a62 	vmov.f32	s16, s5
 8013f34:	eef0 8a43 	vmov.f32	s17, s6
 8013f38:	eef0 ba44 	vmov.f32	s23, s8
 8013f3c:	eeb0 ba64 	vmov.f32	s22, s9
 8013f40:	eef0 aa45 	vmov.f32	s21, s10
 8013f44:	9308      	str	r3, [sp, #32]
 8013f46:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8013f48:	2b00      	cmp	r3, #0
 8013f4a:	dc03      	bgt.n	8013f54 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x70>
 8013f4c:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8013f4e:	2b00      	cmp	r3, #0
 8013f50:	f340 8363 	ble.w	801461a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x736>
 8013f54:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8013f56:	2b00      	cmp	r3, #0
 8013f58:	f340 81ad 	ble.w	80142b6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3d2>
 8013f5c:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 8013f5e:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8013f60:	1412      	asrs	r2, r2, #16
 8013f62:	ea4f 4323 	mov.w	r3, r3, asr #16
 8013f66:	d42f      	bmi.n	8013fc8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe4>
 8013f68:	1c51      	adds	r1, r2, #1
 8013f6a:	428c      	cmp	r4, r1
 8013f6c:	dd2f      	ble.n	8013fce <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xea>
 8013f6e:	2b00      	cmp	r3, #0
 8013f70:	db2d      	blt.n	8013fce <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xea>
 8013f72:	9811      	ldr	r0, [sp, #68]	; 0x44
 8013f74:	1c59      	adds	r1, r3, #1
 8013f76:	4288      	cmp	r0, r1
 8013f78:	dd29      	ble.n	8013fce <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xea>
 8013f7a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8013f7c:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 8013f7e:	992d      	ldr	r1, [sp, #180]	; 0xb4
 8013f80:	3b01      	subs	r3, #1
 8013f82:	fb02 1203 	mla	r2, r2, r3, r1
 8013f86:	1412      	asrs	r2, r2, #16
 8013f88:	d42b      	bmi.n	8013fe2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfe>
 8013f8a:	3201      	adds	r2, #1
 8013f8c:	4294      	cmp	r4, r2
 8013f8e:	dd28      	ble.n	8013fe2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfe>
 8013f90:	9a30      	ldr	r2, [sp, #192]	; 0xc0
 8013f92:	992e      	ldr	r1, [sp, #184]	; 0xb8
 8013f94:	fb02 1303 	mla	r3, r2, r3, r1
 8013f98:	141b      	asrs	r3, r3, #16
 8013f9a:	d422      	bmi.n	8013fe2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfe>
 8013f9c:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8013f9e:	3301      	adds	r3, #1
 8013fa0:	429a      	cmp	r2, r3
 8013fa2:	dd1e      	ble.n	8013fe2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfe>
 8013fa4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8013fa6:	f8dd a030 	ldr.w	sl, [sp, #48]	; 0x30
 8013faa:	f8bd b05c 	ldrh.w	fp, [sp, #92]	; 0x5c
 8013fae:	9312      	str	r3, [sp, #72]	; 0x48
 8013fb0:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8013fb2:	2b00      	cmp	r3, #0
 8013fb4:	f300 81ea 	bgt.w	801438c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4a8>
 8013fb8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8013fba:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8013fbc:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8013fc0:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8013fc4:	930c      	str	r3, [sp, #48]	; 0x30
 8013fc6:	e178      	b.n	80142ba <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3d6>
 8013fc8:	1c51      	adds	r1, r2, #1
 8013fca:	f040 8165 	bne.w	8014298 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3b4>
 8013fce:	42a2      	cmp	r2, r4
 8013fd0:	f280 8162 	bge.w	8014298 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3b4>
 8013fd4:	1c5f      	adds	r7, r3, #1
 8013fd6:	f2c0 815f 	blt.w	8014298 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3b4>
 8013fda:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8013fdc:	4293      	cmp	r3, r2
 8013fde:	f280 815b 	bge.w	8014298 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3b4>
 8013fe2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8013fe4:	9316      	str	r3, [sp, #88]	; 0x58
 8013fe6:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8013fe8:	9312      	str	r3, [sp, #72]	; 0x48
 8013fea:	f8bd 305c 	ldrh.w	r3, [sp, #92]	; 0x5c
 8013fee:	9315      	str	r3, [sp, #84]	; 0x54
 8013ff0:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8013ff2:	2b00      	cmp	r3, #0
 8013ff4:	dde0      	ble.n	8013fb8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xd4>
 8013ff6:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 8013ff8:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8013ffa:	f3c2 3003 	ubfx	r0, r2, #12, #4
 8013ffe:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
 8014000:	f3c2 3103 	ubfx	r1, r2, #12, #4
 8014004:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 8014006:	1412      	asrs	r2, r2, #16
 8014008:	ea4f 4323 	mov.w	r3, r3, asr #16
 801400c:	f100 81a5 	bmi.w	801435a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x476>
 8014010:	1c55      	adds	r5, r2, #1
 8014012:	42ac      	cmp	r4, r5
 8014014:	f340 81a3 	ble.w	801435e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x47a>
 8014018:	2b00      	cmp	r3, #0
 801401a:	f2c0 81a0 	blt.w	801435e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x47a>
 801401e:	9f11      	ldr	r7, [sp, #68]	; 0x44
 8014020:	1c5d      	adds	r5, r3, #1
 8014022:	42af      	cmp	r7, r5
 8014024:	f340 819b 	ble.w	801435e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x47a>
 8014028:	fb03 2304 	mla	r3, r3, r4, r2
 801402c:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801402e:	18d5      	adds	r5, r2, r3
 8014030:	5cd3      	ldrb	r3, [r2, r3]
 8014032:	9a08      	ldr	r2, [sp, #32]
 8014034:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8014038:	0e1f      	lsrs	r7, r3, #24
 801403a:	2800      	cmp	r0, #0
 801403c:	f000 817c 	beq.w	8014338 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x454>
 8014040:	786a      	ldrb	r2, [r5, #1]
 8014042:	9e08      	ldr	r6, [sp, #32]
 8014044:	f856 2022 	ldr.w	r2, [r6, r2, lsl #2]
 8014048:	920d      	str	r2, [sp, #52]	; 0x34
 801404a:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 801404e:	2900      	cmp	r1, #0
 8014050:	f000 817d 	beq.w	801434e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x46a>
 8014054:	192a      	adds	r2, r5, r4
 8014056:	5d2d      	ldrb	r5, [r5, r4]
 8014058:	7852      	ldrb	r2, [r2, #1]
 801405a:	f856 5025 	ldr.w	r5, [r6, r5, lsl #2]
 801405e:	f856 2022 	ldr.w	r2, [r6, r2, lsl #2]
 8014062:	950a      	str	r5, [sp, #40]	; 0x28
 8014064:	ea4f 6915 	mov.w	r9, r5, lsr #24
 8014068:	920e      	str	r2, [sp, #56]	; 0x38
 801406a:	0e15      	lsrs	r5, r2, #24
 801406c:	b280      	uxth	r0, r0
 801406e:	b289      	uxth	r1, r1
 8014070:	fb00 fa01 	mul.w	sl, r0, r1
 8014074:	ebca 1101 	rsb	r1, sl, r1, lsl #4
 8014078:	0100      	lsls	r0, r0, #4
 801407a:	eba0 080a 	sub.w	r8, r0, sl
 801407e:	b289      	uxth	r1, r1
 8014080:	f5c0 7280 	rsb	r2, r0, #256	; 0x100
 8014084:	fa1f f888 	uxth.w	r8, r8
 8014088:	1a52      	subs	r2, r2, r1
 801408a:	b292      	uxth	r2, r2
 801408c:	fb08 f00e 	mul.w	r0, r8, lr
 8014090:	fb02 0007 	mla	r0, r2, r7, r0
 8014094:	fb01 0009 	mla	r0, r1, r9, r0
 8014098:	fb0a 0005 	mla	r0, sl, r5, r0
 801409c:	f3c0 2007 	ubfx	r0, r0, #8, #8
 80140a0:	2800      	cmp	r0, #0
 80140a2:	f000 80ea 	beq.w	801427a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x396>
 80140a6:	2fff      	cmp	r7, #255	; 0xff
 80140a8:	d01a      	beq.n	80140e0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1fc>
 80140aa:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 80140ae:	fb07 fc0c 	mul.w	ip, r7, ip
 80140b2:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80140b6:	435f      	muls	r7, r3
 80140b8:	ea4f 231c 	mov.w	r3, ip, lsr #8
 80140bc:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80140c0:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 80140c4:	f507 7b80 	add.w	fp, r7, #256	; 0x100
 80140c8:	4463      	add	r3, ip
 80140ca:	eb0b 2b17 	add.w	fp, fp, r7, lsr #8
 80140ce:	0a1b      	lsrs	r3, r3, #8
 80140d0:	ea4f 2b1b 	mov.w	fp, fp, lsr #8
 80140d4:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80140d8:	f40b 4b7f 	and.w	fp, fp, #65280	; 0xff00
 80140dc:	ea43 030b 	orr.w	r3, r3, fp
 80140e0:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 80140e4:	d01e      	beq.n	8014124 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x240>
 80140e6:	9e0d      	ldr	r6, [sp, #52]	; 0x34
 80140e8:	f006 1bff 	and.w	fp, r6, #16711935	; 0xff00ff
 80140ec:	fb0e fb0b 	mul.w	fp, lr, fp
 80140f0:	f406 477f 	and.w	r7, r6, #65280	; 0xff00
 80140f4:	fb0e fe07 	mul.w	lr, lr, r7
 80140f8:	ea4f 2c1b 	mov.w	ip, fp, lsr #8
 80140fc:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8014100:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8014104:	f50e 7780 	add.w	r7, lr, #256	; 0x100
 8014108:	44dc      	add	ip, fp
 801410a:	eb07 2e1e 	add.w	lr, r7, lr, lsr #8
 801410e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8014112:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8014116:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801411a:	f40e 4e7f 	and.w	lr, lr, #65280	; 0xff00
 801411e:	ea4c 060e 	orr.w	r6, ip, lr
 8014122:	960d      	str	r6, [sp, #52]	; 0x34
 8014124:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8014128:	d01e      	beq.n	8014168 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x284>
 801412a:	9e0a      	ldr	r6, [sp, #40]	; 0x28
 801412c:	f006 1eff 	and.w	lr, r6, #16711935	; 0xff00ff
 8014130:	fb09 fe0e 	mul.w	lr, r9, lr
 8014134:	f406 477f 	and.w	r7, r6, #65280	; 0xff00
 8014138:	fb09 f907 	mul.w	r9, r9, r7
 801413c:	ea4f 2c1e 	mov.w	ip, lr, lsr #8
 8014140:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8014144:	f10e 1e01 	add.w	lr, lr, #65537	; 0x10001
 8014148:	f509 7780 	add.w	r7, r9, #256	; 0x100
 801414c:	44f4      	add	ip, lr
 801414e:	eb07 2919 	add.w	r9, r7, r9, lsr #8
 8014152:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8014156:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801415a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801415e:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 8014162:	ea4c 0609 	orr.w	r6, ip, r9
 8014166:	960a      	str	r6, [sp, #40]	; 0x28
 8014168:	2dff      	cmp	r5, #255	; 0xff
 801416a:	d01c      	beq.n	80141a6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2c2>
 801416c:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 801416e:	f006 1eff 	and.w	lr, r6, #16711935	; 0xff00ff
 8014172:	fb05 fe0e 	mul.w	lr, r5, lr
 8014176:	f406 477f 	and.w	r7, r6, #65280	; 0xff00
 801417a:	437d      	muls	r5, r7
 801417c:	ea4f 2c1e 	mov.w	ip, lr, lsr #8
 8014180:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8014184:	f10e 1e01 	add.w	lr, lr, #65537	; 0x10001
 8014188:	f505 7780 	add.w	r7, r5, #256	; 0x100
 801418c:	44f4      	add	ip, lr
 801418e:	eb07 2515 	add.w	r5, r7, r5, lsr #8
 8014192:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8014196:	0a2d      	lsrs	r5, r5, #8
 8014198:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801419c:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 80141a0:	ea4c 0505 	orr.w	r5, ip, r5
 80141a4:	950e      	str	r5, [sp, #56]	; 0x38
 80141a6:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 80141a8:	9e0a      	ldr	r6, [sp, #40]	; 0x28
 80141aa:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 80141ae:	f003 17ff 	and.w	r7, r3, #16711935	; 0xff00ff
 80141b2:	fb08 f505 	mul.w	r5, r8, r5
 80141b6:	fb02 5507 	mla	r5, r2, r7, r5
 80141ba:	f006 17ff 	and.w	r7, r6, #16711935	; 0xff00ff
 80141be:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 80141c0:	fb01 5507 	mla	r5, r1, r7, r5
 80141c4:	f006 17ff 	and.w	r7, r6, #16711935	; 0xff00ff
 80141c8:	9e0d      	ldr	r6, [sp, #52]	; 0x34
 80141ca:	fb0a 5507 	mla	r5, sl, r7, r5
 80141ce:	f406 477f 	and.w	r7, r6, #65280	; 0xff00
 80141d2:	fb08 f807 	mul.w	r8, r8, r7
 80141d6:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80141da:	fb02 8303 	mla	r3, r2, r3, r8
 80141de:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80141e0:	9e15      	ldr	r6, [sp, #84]	; 0x54
 80141e2:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 80141e6:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 80141e8:	fb01 330c 	mla	r3, r1, ip, r3
 80141ec:	f402 417f 	and.w	r1, r2, #65280	; 0xff00
 80141f0:	fb0a 3a01 	mla	sl, sl, r1, r3
 80141f4:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80141f6:	9a15      	ldr	r2, [sp, #84]	; 0x54
 80141f8:	881f      	ldrh	r7, [r3, #0]
 80141fa:	9b15      	ldr	r3, [sp, #84]	; 0x54
 80141fc:	0a2d      	lsrs	r5, r5, #8
 80141fe:	4343      	muls	r3, r0
 8014200:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8014204:	1c58      	adds	r0, r3, #1
 8014206:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801420a:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801420e:	ea45 050a 	orr.w	r5, r5, sl
 8014212:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8014216:	0c29      	lsrs	r1, r5, #16
 8014218:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 801421c:	123b      	asrs	r3, r7, #8
 801421e:	b2c0      	uxtb	r0, r0
 8014220:	fb11 f102 	smulbb	r1, r1, r2
 8014224:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8014228:	fb03 1300 	mla	r3, r3, r0, r1
 801422c:	b299      	uxth	r1, r3
 801422e:	10fa      	asrs	r2, r7, #3
 8014230:	f3c5 2307 	ubfx	r3, r5, #8, #8
 8014234:	fb13 f306 	smulbb	r3, r3, r6
 8014238:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801423c:	fb02 3200 	mla	r2, r2, r0, r3
 8014240:	b2ed      	uxtb	r5, r5
 8014242:	00fb      	lsls	r3, r7, #3
 8014244:	b2db      	uxtb	r3, r3
 8014246:	fb15 f506 	smulbb	r5, r5, r6
 801424a:	fb03 5500 	mla	r5, r3, r0, r5
 801424e:	b292      	uxth	r2, r2
 8014250:	b2ad      	uxth	r5, r5
 8014252:	1c4b      	adds	r3, r1, #1
 8014254:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 8014258:	1c68      	adds	r0, r5, #1
 801425a:	1c51      	adds	r1, r2, #1
 801425c:	eb00 2515 	add.w	r5, r0, r5, lsr #8
 8014260:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8014264:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 8014268:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801426c:	0952      	lsrs	r2, r2, #5
 801426e:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8014272:	432b      	orrs	r3, r5
 8014274:	4313      	orrs	r3, r2
 8014276:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8014278:	8013      	strh	r3, [r2, #0]
 801427a:	9b12      	ldr	r3, [sp, #72]	; 0x48
 801427c:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 801427e:	3302      	adds	r3, #2
 8014280:	9312      	str	r3, [sp, #72]	; 0x48
 8014282:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8014284:	4413      	add	r3, r2
 8014286:	932d      	str	r3, [sp, #180]	; 0xb4
 8014288:	9a30      	ldr	r2, [sp, #192]	; 0xc0
 801428a:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 801428c:	4413      	add	r3, r2
 801428e:	932e      	str	r3, [sp, #184]	; 0xb8
 8014290:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8014292:	3b01      	subs	r3, #1
 8014294:	9316      	str	r3, [sp, #88]	; 0x58
 8014296:	e6ab      	b.n	8013ff0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x10c>
 8014298:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 801429a:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 801429c:	4413      	add	r3, r2
 801429e:	932d      	str	r3, [sp, #180]	; 0xb4
 80142a0:	9a30      	ldr	r2, [sp, #192]	; 0xc0
 80142a2:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 80142a4:	4413      	add	r3, r2
 80142a6:	932e      	str	r3, [sp, #184]	; 0xb8
 80142a8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80142aa:	3b01      	subs	r3, #1
 80142ac:	9309      	str	r3, [sp, #36]	; 0x24
 80142ae:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80142b0:	3302      	adds	r3, #2
 80142b2:	930c      	str	r3, [sp, #48]	; 0x30
 80142b4:	e64e      	b.n	8013f54 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x70>
 80142b6:	f47f ae60 	bne.w	8013f7a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x96>
 80142ba:	9b14      	ldr	r3, [sp, #80]	; 0x50
 80142bc:	2b00      	cmp	r3, #0
 80142be:	f340 81ac 	ble.w	801461a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x736>
 80142c2:	ee3a aa2b 	vadd.f32	s20, s20, s23
 80142c6:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80142ca:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 80142ce:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80142d0:	ee79 9a8b 	vadd.f32	s19, s19, s22
 80142d4:	ee39 9a2a 	vadd.f32	s18, s18, s21
 80142d8:	ee29 7aa7 	vmul.f32	s14, s19, s15
 80142dc:	eef0 6a48 	vmov.f32	s13, s16
 80142e0:	ee69 7a27 	vmul.f32	s15, s18, s15
 80142e4:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80142e8:	ee37 8a48 	vsub.f32	s16, s14, s16
 80142ec:	edcd 6a2d 	vstr	s13, [sp, #180]	; 0xb4
 80142f0:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 80142f4:	eef0 6a68 	vmov.f32	s13, s17
 80142f8:	ee77 8ae8 	vsub.f32	s17, s15, s17
 80142fc:	ee18 2a10 	vmov	r2, s16
 8014300:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8014304:	fb92 f3f3 	sdiv	r3, r2, r3
 8014308:	ee18 2a90 	vmov	r2, s17
 801430c:	932f      	str	r3, [sp, #188]	; 0xbc
 801430e:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8014310:	fb92 f3f3 	sdiv	r3, r2, r3
 8014314:	9330      	str	r3, [sp, #192]	; 0xc0
 8014316:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8014318:	9a18      	ldr	r2, [sp, #96]	; 0x60
 801431a:	3b01      	subs	r3, #1
 801431c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8014320:	9314      	str	r3, [sp, #80]	; 0x50
 8014322:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8014324:	edcd 6a2e 	vstr	s13, [sp, #184]	; 0xb8
 8014328:	bf08      	it	eq
 801432a:	4613      	moveq	r3, r2
 801432c:	9309      	str	r3, [sp, #36]	; 0x24
 801432e:	eef0 8a67 	vmov.f32	s17, s15
 8014332:	eeb0 8a47 	vmov.f32	s16, s14
 8014336:	e606      	b.n	8013f46 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x62>
 8014338:	b161      	cbz	r1, 8014354 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x470>
 801433a:	5d2a      	ldrb	r2, [r5, r4]
 801433c:	9d08      	ldr	r5, [sp, #32]
 801433e:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 8014342:	920a      	str	r2, [sp, #40]	; 0x28
 8014344:	ea4f 6912 	mov.w	r9, r2, lsr #24
 8014348:	25ff      	movs	r5, #255	; 0xff
 801434a:	46ae      	mov	lr, r5
 801434c:	e68e      	b.n	801406c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x188>
 801434e:	25ff      	movs	r5, #255	; 0xff
 8014350:	46a9      	mov	r9, r5
 8014352:	e68b      	b.n	801406c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x188>
 8014354:	25ff      	movs	r5, #255	; 0xff
 8014356:	46a9      	mov	r9, r5
 8014358:	e7f7      	b.n	801434a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x466>
 801435a:	1c56      	adds	r6, r2, #1
 801435c:	d18d      	bne.n	801427a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x396>
 801435e:	4294      	cmp	r4, r2
 8014360:	dd8b      	ble.n	801427a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x396>
 8014362:	1c5d      	adds	r5, r3, #1
 8014364:	db89      	blt.n	801427a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x396>
 8014366:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8014368:	429d      	cmp	r5, r3
 801436a:	dd86      	ble.n	801427a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x396>
 801436c:	e9cd 3003 	strd	r3, r0, [sp, #12]
 8014370:	9d17      	ldr	r5, [sp, #92]	; 0x5c
 8014372:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8014374:	9202      	str	r2, [sp, #8]
 8014376:	e9cd 1505 	strd	r1, r5, [sp, #20]
 801437a:	e9cd 4300 	strd	r4, r3, [sp]
 801437e:	e9dd 1212 	ldrd	r1, r2, [sp, #72]	; 0x48
 8014382:	9b08      	ldr	r3, [sp, #32]
 8014384:	9819      	ldr	r0, [sp, #100]	; 0x64
 8014386:	f7ff fc49 	bl	8013c1c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>
 801438a:	e776      	b.n	801427a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x396>
 801438c:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 801438e:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 8014390:	f3c3 3103 	ubfx	r1, r3, #12, #4
 8014394:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8014396:	1412      	asrs	r2, r2, #16
 8014398:	f3c3 3003 	ubfx	r0, r3, #12, #4
 801439c:	141b      	asrs	r3, r3, #16
 801439e:	fb04 2303 	mla	r3, r4, r3, r2
 80143a2:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80143a4:	18d5      	adds	r5, r2, r3
 80143a6:	5cd3      	ldrb	r3, [r2, r3]
 80143a8:	9a08      	ldr	r2, [sp, #32]
 80143aa:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 80143ae:	0e1e      	lsrs	r6, r3, #24
 80143b0:	2900      	cmp	r1, #0
 80143b2:	f000 8121 	beq.w	80145f8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x714>
 80143b6:	786a      	ldrb	r2, [r5, #1]
 80143b8:	9f08      	ldr	r7, [sp, #32]
 80143ba:	f857 2022 	ldr.w	r2, [r7, r2, lsl #2]
 80143be:	920f      	str	r2, [sp, #60]	; 0x3c
 80143c0:	ea4f 6c12 	mov.w	ip, r2, lsr #24
 80143c4:	2800      	cmp	r0, #0
 80143c6:	f000 8122 	beq.w	801460e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x72a>
 80143ca:	192a      	adds	r2, r5, r4
 80143cc:	5d2d      	ldrb	r5, [r5, r4]
 80143ce:	7852      	ldrb	r2, [r2, #1]
 80143d0:	f857 5025 	ldr.w	r5, [r7, r5, lsl #2]
 80143d4:	f857 2022 	ldr.w	r2, [r7, r2, lsl #2]
 80143d8:	950b      	str	r5, [sp, #44]	; 0x2c
 80143da:	ea4f 6815 	mov.w	r8, r5, lsr #24
 80143de:	9210      	str	r2, [sp, #64]	; 0x40
 80143e0:	0e15      	lsrs	r5, r2, #24
 80143e2:	b289      	uxth	r1, r1
 80143e4:	b280      	uxth	r0, r0
 80143e6:	fb01 f900 	mul.w	r9, r1, r0
 80143ea:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 80143ee:	0109      	lsls	r1, r1, #4
 80143f0:	eba1 0e09 	sub.w	lr, r1, r9
 80143f4:	b280      	uxth	r0, r0
 80143f6:	f5c1 7280 	rsb	r2, r1, #256	; 0x100
 80143fa:	fa1f fe8e 	uxth.w	lr, lr
 80143fe:	1a12      	subs	r2, r2, r0
 8014400:	b292      	uxth	r2, r2
 8014402:	fb0e f10c 	mul.w	r1, lr, ip
 8014406:	fb02 1106 	mla	r1, r2, r6, r1
 801440a:	fb00 1108 	mla	r1, r0, r8, r1
 801440e:	fb09 1105 	mla	r1, r9, r5, r1
 8014412:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8014416:	2900      	cmp	r1, #0
 8014418:	f000 80e0 	beq.w	80145dc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6f8>
 801441c:	2eff      	cmp	r6, #255	; 0xff
 801441e:	d016      	beq.n	801444e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x56a>
 8014420:	f003 17ff 	and.w	r7, r3, #16711935	; 0xff00ff
 8014424:	4377      	muls	r7, r6
 8014426:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801442a:	435e      	muls	r6, r3
 801442c:	0a3b      	lsrs	r3, r7, #8
 801442e:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8014432:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8014436:	443b      	add	r3, r7
 8014438:	f506 7780 	add.w	r7, r6, #256	; 0x100
 801443c:	eb07 2716 	add.w	r7, r7, r6, lsr #8
 8014440:	0a1b      	lsrs	r3, r3, #8
 8014442:	0a3f      	lsrs	r7, r7, #8
 8014444:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8014448:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 801444c:	433b      	orrs	r3, r7
 801444e:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8014452:	d01d      	beq.n	8014490 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x5ac>
 8014454:	9e0f      	ldr	r6, [sp, #60]	; 0x3c
 8014456:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 8014458:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 801445c:	fb0c f606 	mul.w	r6, ip, r6
 8014460:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 8014464:	fb0c fc07 	mul.w	ip, ip, r7
 8014468:	0a37      	lsrs	r7, r6, #8
 801446a:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 801446e:	f106 1601 	add.w	r6, r6, #65537	; 0x10001
 8014472:	4437      	add	r7, r6
 8014474:	f50c 7680 	add.w	r6, ip, #256	; 0x100
 8014478:	eb06 2c1c 	add.w	ip, r6, ip, lsr #8
 801447c:	0a3f      	lsrs	r7, r7, #8
 801447e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8014482:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8014486:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801448a:	ea47 060c 	orr.w	r6, r7, ip
 801448e:	960f      	str	r6, [sp, #60]	; 0x3c
 8014490:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8014494:	d01d      	beq.n	80144d2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x5ee>
 8014496:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
 8014498:	f006 1cff 	and.w	ip, r6, #16711935	; 0xff00ff
 801449c:	fb08 fc0c 	mul.w	ip, r8, ip
 80144a0:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 80144a4:	fb08 f806 	mul.w	r8, r8, r6
 80144a8:	ea4f 271c 	mov.w	r7, ip, lsr #8
 80144ac:	f508 7680 	add.w	r6, r8, #256	; 0x100
 80144b0:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 80144b4:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 80144b8:	eb06 2818 	add.w	r8, r6, r8, lsr #8
 80144bc:	4467      	add	r7, ip
 80144be:	0a3f      	lsrs	r7, r7, #8
 80144c0:	ea4f 2818 	mov.w	r8, r8, lsr #8
 80144c4:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 80144c8:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 80144cc:	ea47 0608 	orr.w	r6, r7, r8
 80144d0:	960b      	str	r6, [sp, #44]	; 0x2c
 80144d2:	2dff      	cmp	r5, #255	; 0xff
 80144d4:	d01a      	beq.n	801450c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x628>
 80144d6:	9e10      	ldr	r6, [sp, #64]	; 0x40
 80144d8:	f006 1cff 	and.w	ip, r6, #16711935	; 0xff00ff
 80144dc:	fb05 fc0c 	mul.w	ip, r5, ip
 80144e0:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 80144e4:	4375      	muls	r5, r6
 80144e6:	ea4f 271c 	mov.w	r7, ip, lsr #8
 80144ea:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 80144ee:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 80144f2:	f505 7680 	add.w	r6, r5, #256	; 0x100
 80144f6:	4467      	add	r7, ip
 80144f8:	eb06 2515 	add.w	r5, r6, r5, lsr #8
 80144fc:	0a3f      	lsrs	r7, r7, #8
 80144fe:	0a2d      	lsrs	r5, r5, #8
 8014500:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8014504:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 8014508:	433d      	orrs	r5, r7
 801450a:	9510      	str	r5, [sp, #64]	; 0x40
 801450c:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801450e:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8014512:	f003 16ff 	and.w	r6, r3, #16711935	; 0xff00ff
 8014516:	fb0e f505 	mul.w	r5, lr, r5
 801451a:	fb02 5506 	mla	r5, r2, r6, r5
 801451e:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
 8014520:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8014524:	fb00 5506 	mla	r5, r0, r6, r5
 8014528:	9e10      	ldr	r6, [sp, #64]	; 0x40
 801452a:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 801452e:	fb09 5506 	mla	r5, r9, r6, r5
 8014532:	9e0f      	ldr	r6, [sp, #60]	; 0x3c
 8014534:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8014538:	fb0e fe06 	mul.w	lr, lr, r6
 801453c:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8014540:	fb02 e303 	mla	r3, r2, r3, lr
 8014544:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8014546:	f402 477f 	and.w	r7, r2, #65280	; 0xff00
 801454a:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801454c:	fb00 3307 	mla	r3, r0, r7, r3
 8014550:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 8014554:	fb09 3c0c 	mla	ip, r9, ip, r3
 8014558:	fb01 f10b 	mul.w	r1, r1, fp
 801455c:	0a2d      	lsrs	r5, r5, #8
 801455e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8014562:	f8ba 0000 	ldrh.w	r0, [sl]
 8014566:	1c4b      	adds	r3, r1, #1
 8014568:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801456c:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8014570:	ea45 050c 	orr.w	r5, r5, ip
 8014574:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8014578:	1202      	asrs	r2, r0, #8
 801457a:	0c2b      	lsrs	r3, r5, #16
 801457c:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 8014580:	b2c9      	uxtb	r1, r1
 8014582:	fb13 f30b 	smulbb	r3, r3, fp
 8014586:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 801458a:	fb02 3201 	mla	r2, r2, r1, r3
 801458e:	f3c5 2607 	ubfx	r6, r5, #8, #8
 8014592:	10c3      	asrs	r3, r0, #3
 8014594:	b2ed      	uxtb	r5, r5
 8014596:	00c0      	lsls	r0, r0, #3
 8014598:	b2c0      	uxtb	r0, r0
 801459a:	fb15 f50b 	smulbb	r5, r5, fp
 801459e:	fb00 5001 	mla	r0, r0, r1, r5
 80145a2:	b292      	uxth	r2, r2
 80145a4:	fb16 f60b 	smulbb	r6, r6, fp
 80145a8:	b280      	uxth	r0, r0
 80145aa:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 80145ae:	fb03 6301 	mla	r3, r3, r1, r6
 80145b2:	1c51      	adds	r1, r2, #1
 80145b4:	1c46      	adds	r6, r0, #1
 80145b6:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 80145ba:	eb06 2610 	add.w	r6, r6, r0, lsr #8
 80145be:	b29b      	uxth	r3, r3
 80145c0:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 80145c4:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 80145c8:	4332      	orrs	r2, r6
 80145ca:	1c5e      	adds	r6, r3, #1
 80145cc:	eb06 2313 	add.w	r3, r6, r3, lsr #8
 80145d0:	095b      	lsrs	r3, r3, #5
 80145d2:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80145d6:	431a      	orrs	r2, r3
 80145d8:	f8aa 2000 	strh.w	r2, [sl]
 80145dc:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 80145de:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 80145e0:	4413      	add	r3, r2
 80145e2:	932d      	str	r3, [sp, #180]	; 0xb4
 80145e4:	9a30      	ldr	r2, [sp, #192]	; 0xc0
 80145e6:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 80145e8:	4413      	add	r3, r2
 80145ea:	932e      	str	r3, [sp, #184]	; 0xb8
 80145ec:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80145ee:	3b01      	subs	r3, #1
 80145f0:	f10a 0a02 	add.w	sl, sl, #2
 80145f4:	9312      	str	r3, [sp, #72]	; 0x48
 80145f6:	e4db      	b.n	8013fb0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xcc>
 80145f8:	b160      	cbz	r0, 8014614 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x730>
 80145fa:	5d2a      	ldrb	r2, [r5, r4]
 80145fc:	9d08      	ldr	r5, [sp, #32]
 80145fe:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 8014602:	920b      	str	r2, [sp, #44]	; 0x2c
 8014604:	ea4f 6812 	mov.w	r8, r2, lsr #24
 8014608:	25ff      	movs	r5, #255	; 0xff
 801460a:	46ac      	mov	ip, r5
 801460c:	e6e9      	b.n	80143e2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4fe>
 801460e:	25ff      	movs	r5, #255	; 0xff
 8014610:	46a8      	mov	r8, r5
 8014612:	e6e6      	b.n	80143e2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4fe>
 8014614:	25ff      	movs	r5, #255	; 0xff
 8014616:	46a8      	mov	r8, r5
 8014618:	e7f7      	b.n	801460a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x726>
 801461a:	b01b      	add	sp, #108	; 0x6c
 801461c:	ecbd 8b08 	vpop	{d8-d11}
 8014620:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08014624 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>:
 8014624:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014628:	8808      	ldrh	r0, [r1, #0]
 801462a:	b085      	sub	sp, #20
 801462c:	1206      	asrs	r6, r0, #8
 801462e:	e9dd 5410 	ldrd	r5, r4, [sp, #64]	; 0x40
 8014632:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8014636:	9600      	str	r6, [sp, #0]
 8014638:	f9bd c038 	ldrsh.w	ip, [sp, #56]	; 0x38
 801463c:	f9bd 903c 	ldrsh.w	r9, [sp, #60]	; 0x3c
 8014640:	f89d 704c 	ldrb.w	r7, [sp, #76]	; 0x4c
 8014644:	10c6      	asrs	r6, r0, #3
 8014646:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801464a:	9601      	str	r6, [sp, #4]
 801464c:	00c0      	lsls	r0, r0, #3
 801464e:	fb04 560c 	mla	r6, r4, ip, r5
 8014652:	b2c0      	uxtb	r0, r0
 8014654:	4692      	mov	sl, r2
 8014656:	eb02 0e06 	add.w	lr, r2, r6
 801465a:	9a00      	ldr	r2, [sp, #0]
 801465c:	9002      	str	r0, [sp, #8]
 801465e:	f040 407f 	orr.w	r0, r0, #4278190080	; 0xff000000
 8014662:	ea40 4002 	orr.w	r0, r0, r2, lsl #16
 8014666:	9a01      	ldr	r2, [sp, #4]
 8014668:	2c00      	cmp	r4, #0
 801466a:	4698      	mov	r8, r3
 801466c:	ea40 2002 	orr.w	r0, r0, r2, lsl #8
 8014670:	f89d 3048 	ldrb.w	r3, [sp, #72]	; 0x48
 8014674:	db3e      	blt.n	80146f4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xd0>
 8014676:	45a1      	cmp	r9, r4
 8014678:	dd3c      	ble.n	80146f4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xd0>
 801467a:	2d00      	cmp	r5, #0
 801467c:	db38      	blt.n	80146f0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xcc>
 801467e:	45ac      	cmp	ip, r5
 8014680:	dd36      	ble.n	80146f0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xcc>
 8014682:	f81a 2006 	ldrb.w	r2, [sl, r6]
 8014686:	f858 2022 	ldr.w	r2, [r8, r2, lsl #2]
 801468a:	1c6e      	adds	r6, r5, #1
 801468c:	d435      	bmi.n	80146fa <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xd6>
 801468e:	45b4      	cmp	ip, r6
 8014690:	dd33      	ble.n	80146fa <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xd6>
 8014692:	b393      	cbz	r3, 80146fa <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xd6>
 8014694:	f89e 6001 	ldrb.w	r6, [lr, #1]
 8014698:	f858 6026 	ldr.w	r6, [r8, r6, lsl #2]
 801469c:	3401      	adds	r4, #1
 801469e:	d430      	bmi.n	8014702 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xde>
 80146a0:	45a1      	cmp	r9, r4
 80146a2:	dd2e      	ble.n	8014702 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xde>
 80146a4:	b36f      	cbz	r7, 8014702 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xde>
 80146a6:	2d00      	cmp	r5, #0
 80146a8:	db29      	blt.n	80146fe <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xda>
 80146aa:	45ac      	cmp	ip, r5
 80146ac:	dd27      	ble.n	80146fe <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xda>
 80146ae:	f81e 400c 	ldrb.w	r4, [lr, ip]
 80146b2:	f858 4024 	ldr.w	r4, [r8, r4, lsl #2]
 80146b6:	3501      	adds	r5, #1
 80146b8:	d407      	bmi.n	80146ca <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xa6>
 80146ba:	45ac      	cmp	ip, r5
 80146bc:	dd05      	ble.n	80146ca <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xa6>
 80146be:	b123      	cbz	r3, 80146ca <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xa6>
 80146c0:	44f4      	add	ip, lr
 80146c2:	f89c 0001 	ldrb.w	r0, [ip, #1]
 80146c6:	f858 0020 	ldr.w	r0, [r8, r0, lsl #2]
 80146ca:	2b0f      	cmp	r3, #15
 80146cc:	ea4f 6b12 	mov.w	fp, r2, lsr #24
 80146d0:	ea4f 6a16 	mov.w	sl, r6, lsr #24
 80146d4:	ea4f 6914 	mov.w	r9, r4, lsr #24
 80146d8:	ea4f 6810 	mov.w	r8, r0, lsr #24
 80146dc:	d801      	bhi.n	80146e2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xbe>
 80146de:	2f0f      	cmp	r7, #15
 80146e0:	d911      	bls.n	8014706 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xe2>
 80146e2:	4b79      	ldr	r3, [pc, #484]	; (80148c8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x2a4>)
 80146e4:	4a79      	ldr	r2, [pc, #484]	; (80148cc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x2a8>)
 80146e6:	487a      	ldr	r0, [pc, #488]	; (80148d0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x2ac>)
 80146e8:	f240 210d 	movw	r1, #525	; 0x20d
 80146ec:	f004 ff46 	bl	801957c <__assert_func>
 80146f0:	4602      	mov	r2, r0
 80146f2:	e7ca      	b.n	801468a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x66>
 80146f4:	4606      	mov	r6, r0
 80146f6:	4602      	mov	r2, r0
 80146f8:	e7d0      	b.n	801469c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x78>
 80146fa:	4606      	mov	r6, r0
 80146fc:	e7ce      	b.n	801469c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x78>
 80146fe:	4604      	mov	r4, r0
 8014700:	e7d9      	b.n	80146b6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x92>
 8014702:	4604      	mov	r4, r0
 8014704:	e7e1      	b.n	80146ca <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xa6>
 8014706:	b29b      	uxth	r3, r3
 8014708:	b2bf      	uxth	r7, r7
 801470a:	fb03 fe07 	mul.w	lr, r3, r7
 801470e:	ebce 1707 	rsb	r7, lr, r7, lsl #4
 8014712:	011b      	lsls	r3, r3, #4
 8014714:	eba3 0c0e 	sub.w	ip, r3, lr
 8014718:	b2bf      	uxth	r7, r7
 801471a:	f5c3 7580 	rsb	r5, r3, #256	; 0x100
 801471e:	fa1f fc8c 	uxth.w	ip, ip
 8014722:	1bed      	subs	r5, r5, r7
 8014724:	b2ad      	uxth	r5, r5
 8014726:	fb0c f30a 	mul.w	r3, ip, sl
 801472a:	fb05 330b 	mla	r3, r5, fp, r3
 801472e:	fb07 3309 	mla	r3, r7, r9, r3
 8014732:	fb0e 3308 	mla	r3, lr, r8, r3
 8014736:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801473a:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 801473e:	9303      	str	r3, [sp, #12]
 8014740:	d018      	beq.n	8014774 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x150>
 8014742:	f002 13ff 	and.w	r3, r2, #16711935	; 0xff00ff
 8014746:	fb0b f303 	mul.w	r3, fp, r3
 801474a:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801474e:	fb0b fb02 	mul.w	fp, fp, r2
 8014752:	0a1a      	lsrs	r2, r3, #8
 8014754:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8014758:	f103 1301 	add.w	r3, r3, #65537	; 0x10001
 801475c:	441a      	add	r2, r3
 801475e:	f50b 7380 	add.w	r3, fp, #256	; 0x100
 8014762:	eb03 231b 	add.w	r3, r3, fp, lsr #8
 8014766:	0a12      	lsrs	r2, r2, #8
 8014768:	0a1b      	lsrs	r3, r3, #8
 801476a:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801476e:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8014772:	431a      	orrs	r2, r3
 8014774:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 8014778:	d019      	beq.n	80147ae <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x18a>
 801477a:	f006 1bff 	and.w	fp, r6, #16711935	; 0xff00ff
 801477e:	fb0a fb0b 	mul.w	fp, sl, fp
 8014782:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8014786:	fb0a fa06 	mul.w	sl, sl, r6
 801478a:	ea4f 261b 	mov.w	r6, fp, lsr #8
 801478e:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8014792:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8014796:	f50a 7380 	add.w	r3, sl, #256	; 0x100
 801479a:	445e      	add	r6, fp
 801479c:	eb03 231a 	add.w	r3, r3, sl, lsr #8
 80147a0:	0a36      	lsrs	r6, r6, #8
 80147a2:	0a1b      	lsrs	r3, r3, #8
 80147a4:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 80147a8:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80147ac:	431e      	orrs	r6, r3
 80147ae:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 80147b2:	d019      	beq.n	80147e8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x1c4>
 80147b4:	f004 1aff 	and.w	sl, r4, #16711935	; 0xff00ff
 80147b8:	fb09 fa0a 	mul.w	sl, r9, sl
 80147bc:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 80147c0:	fb09 f904 	mul.w	r9, r9, r4
 80147c4:	ea4f 241a 	mov.w	r4, sl, lsr #8
 80147c8:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 80147cc:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 80147d0:	f509 7380 	add.w	r3, r9, #256	; 0x100
 80147d4:	4454      	add	r4, sl
 80147d6:	eb03 2319 	add.w	r3, r3, r9, lsr #8
 80147da:	0a24      	lsrs	r4, r4, #8
 80147dc:	0a1b      	lsrs	r3, r3, #8
 80147de:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 80147e2:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80147e6:	431c      	orrs	r4, r3
 80147e8:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 80147ec:	d019      	beq.n	8014822 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x1fe>
 80147ee:	f000 19ff 	and.w	r9, r0, #16711935	; 0xff00ff
 80147f2:	fb08 f909 	mul.w	r9, r8, r9
 80147f6:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 80147fa:	fb08 f800 	mul.w	r8, r8, r0
 80147fe:	ea4f 2019 	mov.w	r0, r9, lsr #8
 8014802:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 8014806:	f109 1901 	add.w	r9, r9, #65537	; 0x10001
 801480a:	f508 7380 	add.w	r3, r8, #256	; 0x100
 801480e:	4448      	add	r0, r9
 8014810:	eb03 2318 	add.w	r3, r3, r8, lsr #8
 8014814:	0a00      	lsrs	r0, r0, #8
 8014816:	0a1b      	lsrs	r3, r3, #8
 8014818:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 801481c:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8014820:	4318      	orrs	r0, r3
 8014822:	f006 18ff 	and.w	r8, r6, #16711935	; 0xff00ff
 8014826:	f002 13ff 	and.w	r3, r2, #16711935	; 0xff00ff
 801482a:	fb0c f808 	mul.w	r8, ip, r8
 801482e:	fb05 8803 	mla	r8, r5, r3, r8
 8014832:	f004 13ff 	and.w	r3, r4, #16711935	; 0xff00ff
 8014836:	fb07 8803 	mla	r8, r7, r3, r8
 801483a:	f000 13ff 	and.w	r3, r0, #16711935	; 0xff00ff
 801483e:	fb0e 8303 	mla	r3, lr, r3, r8
 8014842:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8014846:	0a1b      	lsrs	r3, r3, #8
 8014848:	fb0c f606 	mul.w	r6, ip, r6
 801484c:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8014850:	fb05 6202 	mla	r2, r5, r2, r6
 8014854:	f003 18ff 	and.w	r8, r3, #16711935	; 0xff00ff
 8014858:	f404 437f 	and.w	r3, r4, #65280	; 0xff00
 801485c:	fb07 2703 	mla	r7, r7, r3, r2
 8014860:	9a03      	ldr	r2, [sp, #12]
 8014862:	9c02      	ldr	r4, [sp, #8]
 8014864:	9d01      	ldr	r5, [sp, #4]
 8014866:	f400 437f 	and.w	r3, r0, #65280	; 0xff00
 801486a:	fb0e 7303 	mla	r3, lr, r3, r7
 801486e:	43d0      	mvns	r0, r2
 8014870:	9a00      	ldr	r2, [sp, #0]
 8014872:	b2c0      	uxtb	r0, r0
 8014874:	0a1b      	lsrs	r3, r3, #8
 8014876:	4342      	muls	r2, r0
 8014878:	4344      	muls	r4, r0
 801487a:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801487e:	ea48 0303 	orr.w	r3, r8, r3
 8014882:	4345      	muls	r5, r0
 8014884:	4620      	mov	r0, r4
 8014886:	1c54      	adds	r4, r2, #1
 8014888:	eb04 2412 	add.w	r4, r4, r2, lsr #8
 801488c:	0c1a      	lsrs	r2, r3, #16
 801488e:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 8014892:	4a10      	ldr	r2, [pc, #64]	; (80148d4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x2b0>)
 8014894:	ea02 2204 	and.w	r2, r2, r4, lsl #8
 8014898:	1c44      	adds	r4, r0, #1
 801489a:	eb04 2410 	add.w	r4, r4, r0, lsr #8
 801489e:	b2d8      	uxtb	r0, r3
 80148a0:	eb00 2014 	add.w	r0, r0, r4, lsr #8
 80148a4:	ea42 02d0 	orr.w	r2, r2, r0, lsr #3
 80148a8:	1c68      	adds	r0, r5, #1
 80148aa:	eb00 2015 	add.w	r0, r0, r5, lsr #8
 80148ae:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80148b2:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 80148b6:	00db      	lsls	r3, r3, #3
 80148b8:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80148bc:	4313      	orrs	r3, r2
 80148be:	800b      	strh	r3, [r1, #0]
 80148c0:	b005      	add	sp, #20
 80148c2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80148c6:	bf00      	nop
 80148c8:	0801d2ad 	.word	0x0801d2ad
 80148cc:	0801d805 	.word	0x0801d805
 80148d0:	0801d335 	.word	0x0801d335
 80148d4:	fffff800 	.word	0xfffff800

080148d8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 80148d8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80148dc:	ed2d 8b08 	vpush	{d8-d11}
 80148e0:	b097      	sub	sp, #92	; 0x5c
 80148e2:	eeb0 aa40 	vmov.f32	s20, s0
 80148e6:	9d2d      	ldr	r5, [sp, #180]	; 0xb4
 80148e8:	9307      	str	r3, [sp, #28]
 80148ea:	f9bd 30c4 	ldrsh.w	r3, [sp, #196]	; 0xc4
 80148ee:	9112      	str	r1, [sp, #72]	; 0x48
 80148f0:	930f      	str	r3, [sp, #60]	; 0x3c
 80148f2:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	; 0xb8
 80148f6:	9015      	str	r0, [sp, #84]	; 0x54
 80148f8:	6868      	ldr	r0, [r5, #4]
 80148fa:	9214      	str	r2, [sp, #80]	; 0x50
 80148fc:	fb00 1303 	mla	r3, r0, r3, r1
 8014900:	9a32      	ldr	r2, [sp, #200]	; 0xc8
 8014902:	6829      	ldr	r1, [r5, #0]
 8014904:	6855      	ldr	r5, [r2, #4]
 8014906:	f9bd 40c0 	ldrsh.w	r4, [sp, #192]	; 0xc0
 801490a:	eb01 0343 	add.w	r3, r1, r3, lsl #1
 801490e:	930a      	str	r3, [sp, #40]	; 0x28
 8014910:	6813      	ldr	r3, [r2, #0]
 8014912:	9311      	str	r3, [sp, #68]	; 0x44
 8014914:	eef0 9a60 	vmov.f32	s19, s1
 8014918:	eeb0 9a41 	vmov.f32	s18, s2
 801491c:	eeb0 8a62 	vmov.f32	s16, s5
 8014920:	eef0 8a43 	vmov.f32	s17, s6
 8014924:	eef0 ba44 	vmov.f32	s23, s8
 8014928:	eeb0 ba64 	vmov.f32	s22, s9
 801492c:	eef0 aa45 	vmov.f32	s21, s10
 8014930:	3504      	adds	r5, #4
 8014932:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8014934:	2b00      	cmp	r3, #0
 8014936:	dc03      	bgt.n	8014940 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x68>
 8014938:	9b14      	ldr	r3, [sp, #80]	; 0x50
 801493a:	2b00      	cmp	r3, #0
 801493c:	f340 834d 	ble.w	8014fda <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x702>
 8014940:	9b07      	ldr	r3, [sp, #28]
 8014942:	2b00      	cmp	r3, #0
 8014944:	f340 819c 	ble.w	8014c80 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3a8>
 8014948:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 801494a:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801494c:	1412      	asrs	r2, r2, #16
 801494e:	ea4f 4323 	mov.w	r3, r3, asr #16
 8014952:	d42d      	bmi.n	80149b0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xd8>
 8014954:	1c51      	adds	r1, r2, #1
 8014956:	428c      	cmp	r4, r1
 8014958:	dd2d      	ble.n	80149b6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xde>
 801495a:	2b00      	cmp	r3, #0
 801495c:	db2b      	blt.n	80149b6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xde>
 801495e:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8014960:	1c59      	adds	r1, r3, #1
 8014962:	4288      	cmp	r0, r1
 8014964:	dd27      	ble.n	80149b6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xde>
 8014966:	9b07      	ldr	r3, [sp, #28]
 8014968:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 801496a:	9929      	ldr	r1, [sp, #164]	; 0xa4
 801496c:	3b01      	subs	r3, #1
 801496e:	fb02 1203 	mla	r2, r2, r3, r1
 8014972:	1412      	asrs	r2, r2, #16
 8014974:	d429      	bmi.n	80149ca <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf2>
 8014976:	3201      	adds	r2, #1
 8014978:	4294      	cmp	r4, r2
 801497a:	dd26      	ble.n	80149ca <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf2>
 801497c:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 801497e:	992a      	ldr	r1, [sp, #168]	; 0xa8
 8014980:	fb02 1303 	mla	r3, r2, r3, r1
 8014984:	141b      	asrs	r3, r3, #16
 8014986:	d420      	bmi.n	80149ca <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf2>
 8014988:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801498a:	3301      	adds	r3, #1
 801498c:	429a      	cmp	r2, r3
 801498e:	dd1c      	ble.n	80149ca <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf2>
 8014990:	9b07      	ldr	r3, [sp, #28]
 8014992:	f8dd b028 	ldr.w	fp, [sp, #40]	; 0x28
 8014996:	9310      	str	r3, [sp, #64]	; 0x40
 8014998:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801499a:	2b00      	cmp	r3, #0
 801499c:	f300 81da 	bgt.w	8014d54 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x47c>
 80149a0:	9b07      	ldr	r3, [sp, #28]
 80149a2:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80149a4:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80149a8:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80149ac:	930a      	str	r3, [sp, #40]	; 0x28
 80149ae:	e169      	b.n	8014c84 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3ac>
 80149b0:	1c51      	adds	r1, r2, #1
 80149b2:	f040 8156 	bne.w	8014c62 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x38a>
 80149b6:	42a2      	cmp	r2, r4
 80149b8:	f280 8153 	bge.w	8014c62 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x38a>
 80149bc:	1c5a      	adds	r2, r3, #1
 80149be:	f2c0 8150 	blt.w	8014c62 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x38a>
 80149c2:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80149c4:	4293      	cmp	r3, r2
 80149c6:	f280 814c 	bge.w	8014c62 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x38a>
 80149ca:	9b07      	ldr	r3, [sp, #28]
 80149cc:	9313      	str	r3, [sp, #76]	; 0x4c
 80149ce:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80149d0:	9310      	str	r3, [sp, #64]	; 0x40
 80149d2:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 80149d4:	2b00      	cmp	r3, #0
 80149d6:	dde3      	ble.n	80149a0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xc8>
 80149d8:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 80149da:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80149dc:	f3c2 3103 	ubfx	r1, r2, #12, #4
 80149e0:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 80149e2:	f3c2 3003 	ubfx	r0, r2, #12, #4
 80149e6:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 80149e8:	1412      	asrs	r2, r2, #16
 80149ea:	ea4f 4323 	mov.w	r3, r3, asr #16
 80149ee:	f100 8198 	bmi.w	8014d22 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x44a>
 80149f2:	1c56      	adds	r6, r2, #1
 80149f4:	42b4      	cmp	r4, r6
 80149f6:	f340 8196 	ble.w	8014d26 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x44e>
 80149fa:	2b00      	cmp	r3, #0
 80149fc:	f2c0 8193 	blt.w	8014d26 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x44e>
 8014a00:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 8014a02:	1c5e      	adds	r6, r3, #1
 8014a04:	42b7      	cmp	r7, r6
 8014a06:	f340 818e 	ble.w	8014d26 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x44e>
 8014a0a:	fb03 2304 	mla	r3, r3, r4, r2
 8014a0e:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8014a10:	18d6      	adds	r6, r2, r3
 8014a12:	5cd3      	ldrb	r3, [r2, r3]
 8014a14:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 8014a18:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 8014a1c:	2900      	cmp	r1, #0
 8014a1e:	f000 8170 	beq.w	8014d02 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x42a>
 8014a22:	7872      	ldrb	r2, [r6, #1]
 8014a24:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 8014a28:	920b      	str	r2, [sp, #44]	; 0x2c
 8014a2a:	ea4f 6812 	mov.w	r8, r2, lsr #24
 8014a2e:	2800      	cmp	r0, #0
 8014a30:	f000 8171 	beq.w	8014d16 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x43e>
 8014a34:	1932      	adds	r2, r6, r4
 8014a36:	5d36      	ldrb	r6, [r6, r4]
 8014a38:	7852      	ldrb	r2, [r2, #1]
 8014a3a:	f855 6026 	ldr.w	r6, [r5, r6, lsl #2]
 8014a3e:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 8014a42:	9608      	str	r6, [sp, #32]
 8014a44:	ea4f 6a16 	mov.w	sl, r6, lsr #24
 8014a48:	920c      	str	r2, [sp, #48]	; 0x30
 8014a4a:	0e16      	lsrs	r6, r2, #24
 8014a4c:	b289      	uxth	r1, r1
 8014a4e:	b280      	uxth	r0, r0
 8014a50:	fb01 fb00 	mul.w	fp, r1, r0
 8014a54:	ebcb 1000 	rsb	r0, fp, r0, lsl #4
 8014a58:	0109      	lsls	r1, r1, #4
 8014a5a:	eba1 090b 	sub.w	r9, r1, fp
 8014a5e:	b280      	uxth	r0, r0
 8014a60:	f5c1 7280 	rsb	r2, r1, #256	; 0x100
 8014a64:	fa1f f989 	uxth.w	r9, r9
 8014a68:	1a12      	subs	r2, r2, r0
 8014a6a:	b292      	uxth	r2, r2
 8014a6c:	fb09 f108 	mul.w	r1, r9, r8
 8014a70:	fb02 110c 	mla	r1, r2, ip, r1
 8014a74:	fb00 110a 	mla	r1, r0, sl, r1
 8014a78:	fb0b 1106 	mla	r1, fp, r6, r1
 8014a7c:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8014a80:	2900      	cmp	r1, #0
 8014a82:	f000 80df 	beq.w	8014c44 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x36c>
 8014a86:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8014a8a:	d01b      	beq.n	8014ac4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1ec>
 8014a8c:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 8014a90:	fb0c fe0e 	mul.w	lr, ip, lr
 8014a94:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8014a98:	fb0c fc03 	mul.w	ip, ip, r3
 8014a9c:	ea4f 231e 	mov.w	r3, lr, lsr #8
 8014aa0:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8014aa4:	f10e 1e01 	add.w	lr, lr, #65537	; 0x10001
 8014aa8:	4473      	add	r3, lr
 8014aaa:	f50c 7e80 	add.w	lr, ip, #256	; 0x100
 8014aae:	eb0e 2e1c 	add.w	lr, lr, ip, lsr #8
 8014ab2:	0a1b      	lsrs	r3, r3, #8
 8014ab4:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8014ab8:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8014abc:	f40e 4e7f 	and.w	lr, lr, #65280	; 0xff00
 8014ac0:	ea43 030e 	orr.w	r3, r3, lr
 8014ac4:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8014ac8:	d01e      	beq.n	8014b08 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x230>
 8014aca:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 8014acc:	f007 1cff 	and.w	ip, r7, #16711935	; 0xff00ff
 8014ad0:	fb08 fc0c 	mul.w	ip, r8, ip
 8014ad4:	f407 4e7f 	and.w	lr, r7, #65280	; 0xff00
 8014ad8:	fb08 f80e 	mul.w	r8, r8, lr
 8014adc:	ea4f 2e1c 	mov.w	lr, ip, lsr #8
 8014ae0:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8014ae4:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8014ae8:	44e6      	add	lr, ip
 8014aea:	f508 7c80 	add.w	ip, r8, #256	; 0x100
 8014aee:	eb0c 2818 	add.w	r8, ip, r8, lsr #8
 8014af2:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8014af6:	ea4f 2818 	mov.w	r8, r8, lsr #8
 8014afa:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8014afe:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 8014b02:	ea4e 0708 	orr.w	r7, lr, r8
 8014b06:	970b      	str	r7, [sp, #44]	; 0x2c
 8014b08:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 8014b0c:	d01e      	beq.n	8014b4c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x274>
 8014b0e:	9f08      	ldr	r7, [sp, #32]
 8014b10:	f007 18ff 	and.w	r8, r7, #16711935	; 0xff00ff
 8014b14:	fb0a f808 	mul.w	r8, sl, r8
 8014b18:	f407 4c7f 	and.w	ip, r7, #65280	; 0xff00
 8014b1c:	fb0a fa0c 	mul.w	sl, sl, ip
 8014b20:	ea4f 2e18 	mov.w	lr, r8, lsr #8
 8014b24:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8014b28:	f108 1801 	add.w	r8, r8, #65537	; 0x10001
 8014b2c:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8014b30:	44c6      	add	lr, r8
 8014b32:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8014b36:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8014b3a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8014b3e:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8014b42:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8014b46:	ea4e 070a 	orr.w	r7, lr, sl
 8014b4a:	9708      	str	r7, [sp, #32]
 8014b4c:	2eff      	cmp	r6, #255	; 0xff
 8014b4e:	d01d      	beq.n	8014b8c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2b4>
 8014b50:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 8014b52:	f007 18ff 	and.w	r8, r7, #16711935	; 0xff00ff
 8014b56:	fb06 f808 	mul.w	r8, r6, r8
 8014b5a:	f407 4c7f 	and.w	ip, r7, #65280	; 0xff00
 8014b5e:	fb06 f60c 	mul.w	r6, r6, ip
 8014b62:	ea4f 2e18 	mov.w	lr, r8, lsr #8
 8014b66:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8014b6a:	f108 1801 	add.w	r8, r8, #65537	; 0x10001
 8014b6e:	f506 7c80 	add.w	ip, r6, #256	; 0x100
 8014b72:	44c6      	add	lr, r8
 8014b74:	eb0c 2616 	add.w	r6, ip, r6, lsr #8
 8014b78:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8014b7c:	0a36      	lsrs	r6, r6, #8
 8014b7e:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8014b82:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8014b86:	ea4e 0606 	orr.w	r6, lr, r6
 8014b8a:	960c      	str	r6, [sp, #48]	; 0x30
 8014b8c:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
 8014b8e:	9f08      	ldr	r7, [sp, #32]
 8014b90:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8014b94:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 8014b98:	fb09 f606 	mul.w	r6, r9, r6
 8014b9c:	fb02 660c 	mla	r6, r2, ip, r6
 8014ba0:	f007 1cff 	and.w	ip, r7, #16711935	; 0xff00ff
 8014ba4:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 8014ba6:	fb00 660c 	mla	r6, r0, ip, r6
 8014baa:	f007 1cff 	and.w	ip, r7, #16711935	; 0xff00ff
 8014bae:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 8014bb0:	fb0b 660c 	mla	r6, fp, ip, r6
 8014bb4:	f407 4c7f 	and.w	ip, r7, #65280	; 0xff00
 8014bb8:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8014bbc:	fb09 f90c 	mul.w	r9, r9, ip
 8014bc0:	fb02 9303 	mla	r3, r2, r3, r9
 8014bc4:	9a08      	ldr	r2, [sp, #32]
 8014bc6:	f402 4e7f 	and.w	lr, r2, #65280	; 0xff00
 8014bca:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8014bcc:	fb00 330e 	mla	r3, r0, lr, r3
 8014bd0:	f402 407f 	and.w	r0, r2, #65280	; 0xff00
 8014bd4:	fb0b 3b00 	mla	fp, fp, r0, r3
 8014bd8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8014bda:	881b      	ldrh	r3, [r3, #0]
 8014bdc:	43c9      	mvns	r1, r1
 8014bde:	1218      	asrs	r0, r3, #8
 8014be0:	b2c9      	uxtb	r1, r1
 8014be2:	10da      	asrs	r2, r3, #3
 8014be4:	0a36      	lsrs	r6, r6, #8
 8014be6:	ea4f 2b1b 	mov.w	fp, fp, lsr #8
 8014bea:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8014bee:	00db      	lsls	r3, r3, #3
 8014bf0:	4348      	muls	r0, r1
 8014bf2:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8014bf6:	f40b 4b7f 	and.w	fp, fp, #65280	; 0xff00
 8014bfa:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8014bfe:	b2db      	uxtb	r3, r3
 8014c00:	434b      	muls	r3, r1
 8014c02:	ea46 060b 	orr.w	r6, r6, fp
 8014c06:	434a      	muls	r2, r1
 8014c08:	1c41      	adds	r1, r0, #1
 8014c0a:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 8014c0e:	0c30      	lsrs	r0, r6, #16
 8014c10:	eb00 2011 	add.w	r0, r0, r1, lsr #8
 8014c14:	494e      	ldr	r1, [pc, #312]	; (8014d50 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x478>)
 8014c16:	ea01 2000 	and.w	r0, r1, r0, lsl #8
 8014c1a:	1c59      	adds	r1, r3, #1
 8014c1c:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 8014c20:	b2f3      	uxtb	r3, r6
 8014c22:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 8014c26:	1c51      	adds	r1, r2, #1
 8014c28:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8014c2c:	f3c6 2607 	ubfx	r6, r6, #8, #8
 8014c30:	eb06 2612 	add.w	r6, r6, r2, lsr #8
 8014c34:	00f6      	lsls	r6, r6, #3
 8014c36:	ea40 03d3 	orr.w	r3, r0, r3, lsr #3
 8014c3a:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8014c3e:	431e      	orrs	r6, r3
 8014c40:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8014c42:	801e      	strh	r6, [r3, #0]
 8014c44:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8014c46:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 8014c48:	3302      	adds	r3, #2
 8014c4a:	9310      	str	r3, [sp, #64]	; 0x40
 8014c4c:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8014c4e:	4413      	add	r3, r2
 8014c50:	9329      	str	r3, [sp, #164]	; 0xa4
 8014c52:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 8014c54:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8014c56:	4413      	add	r3, r2
 8014c58:	932a      	str	r3, [sp, #168]	; 0xa8
 8014c5a:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8014c5c:	3b01      	subs	r3, #1
 8014c5e:	9313      	str	r3, [sp, #76]	; 0x4c
 8014c60:	e6b7      	b.n	80149d2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfa>
 8014c62:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8014c64:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 8014c66:	4413      	add	r3, r2
 8014c68:	9329      	str	r3, [sp, #164]	; 0xa4
 8014c6a:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 8014c6c:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8014c6e:	4413      	add	r3, r2
 8014c70:	932a      	str	r3, [sp, #168]	; 0xa8
 8014c72:	9b07      	ldr	r3, [sp, #28]
 8014c74:	3b01      	subs	r3, #1
 8014c76:	9307      	str	r3, [sp, #28]
 8014c78:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8014c7a:	3302      	adds	r3, #2
 8014c7c:	930a      	str	r3, [sp, #40]	; 0x28
 8014c7e:	e65f      	b.n	8014940 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x68>
 8014c80:	f47f ae71 	bne.w	8014966 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x8e>
 8014c84:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8014c86:	2b00      	cmp	r3, #0
 8014c88:	f340 81a7 	ble.w	8014fda <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x702>
 8014c8c:	ee3a aa2b 	vadd.f32	s20, s20, s23
 8014c90:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8014c94:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 8014c98:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8014c9a:	ee79 9a8b 	vadd.f32	s19, s19, s22
 8014c9e:	ee39 9a2a 	vadd.f32	s18, s18, s21
 8014ca2:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8014ca6:	eef0 6a48 	vmov.f32	s13, s16
 8014caa:	ee69 7a27 	vmul.f32	s15, s18, s15
 8014cae:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8014cb2:	ee37 8a48 	vsub.f32	s16, s14, s16
 8014cb6:	edcd 6a29 	vstr	s13, [sp, #164]	; 0xa4
 8014cba:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8014cbe:	eef0 6a68 	vmov.f32	s13, s17
 8014cc2:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8014cc6:	ee18 2a10 	vmov	r2, s16
 8014cca:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8014cce:	fb92 f3f3 	sdiv	r3, r2, r3
 8014cd2:	ee18 2a90 	vmov	r2, s17
 8014cd6:	932b      	str	r3, [sp, #172]	; 0xac
 8014cd8:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8014cda:	fb92 f3f3 	sdiv	r3, r2, r3
 8014cde:	932c      	str	r3, [sp, #176]	; 0xb0
 8014ce0:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8014ce2:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8014ce4:	3b01      	subs	r3, #1
 8014ce6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8014cea:	9312      	str	r3, [sp, #72]	; 0x48
 8014cec:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8014cee:	edcd 6a2a 	vstr	s13, [sp, #168]	; 0xa8
 8014cf2:	bf08      	it	eq
 8014cf4:	4613      	moveq	r3, r2
 8014cf6:	9307      	str	r3, [sp, #28]
 8014cf8:	eef0 8a67 	vmov.f32	s17, s15
 8014cfc:	eeb0 8a47 	vmov.f32	s16, s14
 8014d00:	e617      	b.n	8014932 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x5a>
 8014d02:	b158      	cbz	r0, 8014d1c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x444>
 8014d04:	5d32      	ldrb	r2, [r6, r4]
 8014d06:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 8014d0a:	9208      	str	r2, [sp, #32]
 8014d0c:	ea4f 6a12 	mov.w	sl, r2, lsr #24
 8014d10:	26ff      	movs	r6, #255	; 0xff
 8014d12:	46b0      	mov	r8, r6
 8014d14:	e69a      	b.n	8014a4c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x174>
 8014d16:	26ff      	movs	r6, #255	; 0xff
 8014d18:	46b2      	mov	sl, r6
 8014d1a:	e697      	b.n	8014a4c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x174>
 8014d1c:	26ff      	movs	r6, #255	; 0xff
 8014d1e:	46b2      	mov	sl, r6
 8014d20:	e7f7      	b.n	8014d12 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x43a>
 8014d22:	1c57      	adds	r7, r2, #1
 8014d24:	d18e      	bne.n	8014c44 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x36c>
 8014d26:	4294      	cmp	r4, r2
 8014d28:	dd8c      	ble.n	8014c44 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x36c>
 8014d2a:	1c5e      	adds	r6, r3, #1
 8014d2c:	db8a      	blt.n	8014c44 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x36c>
 8014d2e:	9e0f      	ldr	r6, [sp, #60]	; 0x3c
 8014d30:	429e      	cmp	r6, r3
 8014d32:	dd87      	ble.n	8014c44 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x36c>
 8014d34:	e9cd 1004 	strd	r1, r0, [sp, #16]
 8014d38:	e9cd 2302 	strd	r2, r3, [sp, #8]
 8014d3c:	e9cd 4600 	strd	r4, r6, [sp]
 8014d40:	462b      	mov	r3, r5
 8014d42:	e9dd 1210 	ldrd	r1, r2, [sp, #64]	; 0x40
 8014d46:	9815      	ldr	r0, [sp, #84]	; 0x54
 8014d48:	f7ff fc6c 	bl	8014624 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>
 8014d4c:	e77a      	b.n	8014c44 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x36c>
 8014d4e:	bf00      	nop
 8014d50:	fffff800 	.word	0xfffff800
 8014d54:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8014d56:	9929      	ldr	r1, [sp, #164]	; 0xa4
 8014d58:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8014d5c:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8014d5e:	1409      	asrs	r1, r1, #16
 8014d60:	f3c3 3003 	ubfx	r0, r3, #12, #4
 8014d64:	141b      	asrs	r3, r3, #16
 8014d66:	fb04 1303 	mla	r3, r4, r3, r1
 8014d6a:	9911      	ldr	r1, [sp, #68]	; 0x44
 8014d6c:	18ce      	adds	r6, r1, r3
 8014d6e:	5ccb      	ldrb	r3, [r1, r3]
 8014d70:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 8014d74:	0e1f      	lsrs	r7, r3, #24
 8014d76:	2a00      	cmp	r2, #0
 8014d78:	f000 811f 	beq.w	8014fba <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6e2>
 8014d7c:	7871      	ldrb	r1, [r6, #1]
 8014d7e:	f855 1021 	ldr.w	r1, [r5, r1, lsl #2]
 8014d82:	910d      	str	r1, [sp, #52]	; 0x34
 8014d84:	ea4f 6e11 	mov.w	lr, r1, lsr #24
 8014d88:	2800      	cmp	r0, #0
 8014d8a:	f000 8120 	beq.w	8014fce <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6f6>
 8014d8e:	1931      	adds	r1, r6, r4
 8014d90:	5d36      	ldrb	r6, [r6, r4]
 8014d92:	7849      	ldrb	r1, [r1, #1]
 8014d94:	f855 6026 	ldr.w	r6, [r5, r6, lsl #2]
 8014d98:	f855 1021 	ldr.w	r1, [r5, r1, lsl #2]
 8014d9c:	9609      	str	r6, [sp, #36]	; 0x24
 8014d9e:	ea4f 6916 	mov.w	r9, r6, lsr #24
 8014da2:	910e      	str	r1, [sp, #56]	; 0x38
 8014da4:	0e0e      	lsrs	r6, r1, #24
 8014da6:	b292      	uxth	r2, r2
 8014da8:	b280      	uxth	r0, r0
 8014daa:	fb02 fa00 	mul.w	sl, r2, r0
 8014dae:	ebca 1000 	rsb	r0, sl, r0, lsl #4
 8014db2:	0112      	lsls	r2, r2, #4
 8014db4:	eba2 080a 	sub.w	r8, r2, sl
 8014db8:	b280      	uxth	r0, r0
 8014dba:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 8014dbe:	fa1f f888 	uxth.w	r8, r8
 8014dc2:	1a09      	subs	r1, r1, r0
 8014dc4:	b289      	uxth	r1, r1
 8014dc6:	fb08 f20e 	mul.w	r2, r8, lr
 8014dca:	fb01 2207 	mla	r2, r1, r7, r2
 8014dce:	fb00 2209 	mla	r2, r0, r9, r2
 8014dd2:	fb0a 2206 	mla	r2, sl, r6, r2
 8014dd6:	f3c2 2207 	ubfx	r2, r2, #8, #8
 8014dda:	9213      	str	r2, [sp, #76]	; 0x4c
 8014ddc:	2a00      	cmp	r2, #0
 8014dde:	f000 80de 	beq.w	8014f9e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6c6>
 8014de2:	2fff      	cmp	r7, #255	; 0xff
 8014de4:	d01a      	beq.n	8014e1c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x544>
 8014de6:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 8014dea:	fb07 fc0c 	mul.w	ip, r7, ip
 8014dee:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8014df2:	435f      	muls	r7, r3
 8014df4:	ea4f 231c 	mov.w	r3, ip, lsr #8
 8014df8:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8014dfc:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8014e00:	4463      	add	r3, ip
 8014e02:	f507 7c80 	add.w	ip, r7, #256	; 0x100
 8014e06:	eb0c 2c17 	add.w	ip, ip, r7, lsr #8
 8014e0a:	0a1b      	lsrs	r3, r3, #8
 8014e0c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8014e10:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8014e14:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8014e18:	ea43 030c 	orr.w	r3, r3, ip
 8014e1c:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 8014e20:	d01f      	beq.n	8014e62 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x58a>
 8014e22:	9f0d      	ldr	r7, [sp, #52]	; 0x34
 8014e24:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8014e26:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8014e2a:	fb0e f707 	mul.w	r7, lr, r7
 8014e2e:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 8014e32:	fb0e fe0c 	mul.w	lr, lr, ip
 8014e36:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8014e3a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8014e3e:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8014e42:	44bc      	add	ip, r7
 8014e44:	f50e 7780 	add.w	r7, lr, #256	; 0x100
 8014e48:	eb07 2e1e 	add.w	lr, r7, lr, lsr #8
 8014e4c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8014e50:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8014e54:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8014e58:	f40e 4e7f 	and.w	lr, lr, #65280	; 0xff00
 8014e5c:	ea4c 020e 	orr.w	r2, ip, lr
 8014e60:	920d      	str	r2, [sp, #52]	; 0x34
 8014e62:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8014e66:	d01e      	beq.n	8014ea6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x5ce>
 8014e68:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8014e6a:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
 8014e6e:	fb09 fe0e 	mul.w	lr, r9, lr
 8014e72:	f402 477f 	and.w	r7, r2, #65280	; 0xff00
 8014e76:	fb09 f907 	mul.w	r9, r9, r7
 8014e7a:	ea4f 2c1e 	mov.w	ip, lr, lsr #8
 8014e7e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8014e82:	f10e 1e01 	add.w	lr, lr, #65537	; 0x10001
 8014e86:	f509 7780 	add.w	r7, r9, #256	; 0x100
 8014e8a:	44f4      	add	ip, lr
 8014e8c:	eb07 2919 	add.w	r9, r7, r9, lsr #8
 8014e90:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8014e94:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8014e98:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8014e9c:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 8014ea0:	ea4c 0209 	orr.w	r2, ip, r9
 8014ea4:	9209      	str	r2, [sp, #36]	; 0x24
 8014ea6:	2eff      	cmp	r6, #255	; 0xff
 8014ea8:	d01c      	beq.n	8014ee4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x60c>
 8014eaa:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8014eac:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
 8014eb0:	fb06 fe0e 	mul.w	lr, r6, lr
 8014eb4:	f402 477f 	and.w	r7, r2, #65280	; 0xff00
 8014eb8:	437e      	muls	r6, r7
 8014eba:	ea4f 2c1e 	mov.w	ip, lr, lsr #8
 8014ebe:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8014ec2:	f10e 1e01 	add.w	lr, lr, #65537	; 0x10001
 8014ec6:	f506 7780 	add.w	r7, r6, #256	; 0x100
 8014eca:	44f4      	add	ip, lr
 8014ecc:	eb07 2616 	add.w	r6, r7, r6, lsr #8
 8014ed0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8014ed4:	0a36      	lsrs	r6, r6, #8
 8014ed6:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8014eda:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8014ede:	ea4c 0206 	orr.w	r2, ip, r6
 8014ee2:	920e      	str	r2, [sp, #56]	; 0x38
 8014ee4:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8014ee6:	f002 16ff 	and.w	r6, r2, #16711935	; 0xff00ff
 8014eea:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8014eec:	f003 17ff 	and.w	r7, r3, #16711935	; 0xff00ff
 8014ef0:	fb08 f606 	mul.w	r6, r8, r6
 8014ef4:	fb01 6607 	mla	r6, r1, r7, r6
 8014ef8:	f002 17ff 	and.w	r7, r2, #16711935	; 0xff00ff
 8014efc:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8014efe:	fb00 6607 	mla	r6, r0, r7, r6
 8014f02:	f002 17ff 	and.w	r7, r2, #16711935	; 0xff00ff
 8014f06:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8014f08:	fb0a 6607 	mla	r6, sl, r7, r6
 8014f0c:	f402 477f 	and.w	r7, r2, #65280	; 0xff00
 8014f10:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8014f12:	fb08 f807 	mul.w	r8, r8, r7
 8014f16:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 8014f1a:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8014f1e:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8014f20:	fb01 8303 	mla	r3, r1, r3, r8
 8014f24:	fb00 330c 	mla	r3, r0, ip, r3
 8014f28:	f402 4e7f 	and.w	lr, r2, #65280	; 0xff00
 8014f2c:	fb0a 3e0e 	mla	lr, sl, lr, r3
 8014f30:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8014f32:	f8bb 3000 	ldrh.w	r3, [fp]
 8014f36:	43d2      	mvns	r2, r2
 8014f38:	1218      	asrs	r0, r3, #8
 8014f3a:	b2d2      	uxtb	r2, r2
 8014f3c:	0a36      	lsrs	r6, r6, #8
 8014f3e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8014f42:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8014f46:	4350      	muls	r0, r2
 8014f48:	10d9      	asrs	r1, r3, #3
 8014f4a:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8014f4e:	f40e 4e7f 	and.w	lr, lr, #65280	; 0xff00
 8014f52:	00db      	lsls	r3, r3, #3
 8014f54:	ea46 060e 	orr.w	r6, r6, lr
 8014f58:	1c47      	adds	r7, r0, #1
 8014f5a:	b2db      	uxtb	r3, r3
 8014f5c:	4353      	muls	r3, r2
 8014f5e:	eb07 2010 	add.w	r0, r7, r0, lsr #8
 8014f62:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8014f66:	0c37      	lsrs	r7, r6, #16
 8014f68:	4351      	muls	r1, r2
 8014f6a:	eb07 2010 	add.w	r0, r7, r0, lsr #8
 8014f6e:	4a1d      	ldr	r2, [pc, #116]	; (8014fe4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x70c>)
 8014f70:	1c5f      	adds	r7, r3, #1
 8014f72:	eb07 2313 	add.w	r3, r7, r3, lsr #8
 8014f76:	b2f7      	uxtb	r7, r6
 8014f78:	eb07 2313 	add.w	r3, r7, r3, lsr #8
 8014f7c:	ea02 2000 	and.w	r0, r2, r0, lsl #8
 8014f80:	ea40 00d3 	orr.w	r0, r0, r3, lsr #3
 8014f84:	1c4b      	adds	r3, r1, #1
 8014f86:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8014f8a:	f3c6 2607 	ubfx	r6, r6, #8, #8
 8014f8e:	eb06 2611 	add.w	r6, r6, r1, lsr #8
 8014f92:	00f6      	lsls	r6, r6, #3
 8014f94:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8014f98:	4330      	orrs	r0, r6
 8014f9a:	f8ab 0000 	strh.w	r0, [fp]
 8014f9e:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8014fa0:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 8014fa2:	4413      	add	r3, r2
 8014fa4:	9329      	str	r3, [sp, #164]	; 0xa4
 8014fa6:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 8014fa8:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8014faa:	4413      	add	r3, r2
 8014fac:	932a      	str	r3, [sp, #168]	; 0xa8
 8014fae:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8014fb0:	3b01      	subs	r3, #1
 8014fb2:	f10b 0b02 	add.w	fp, fp, #2
 8014fb6:	9310      	str	r3, [sp, #64]	; 0x40
 8014fb8:	e4ee      	b.n	8014998 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xc0>
 8014fba:	b158      	cbz	r0, 8014fd4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6fc>
 8014fbc:	5d31      	ldrb	r1, [r6, r4]
 8014fbe:	f855 1021 	ldr.w	r1, [r5, r1, lsl #2]
 8014fc2:	9109      	str	r1, [sp, #36]	; 0x24
 8014fc4:	ea4f 6911 	mov.w	r9, r1, lsr #24
 8014fc8:	26ff      	movs	r6, #255	; 0xff
 8014fca:	46b6      	mov	lr, r6
 8014fcc:	e6eb      	b.n	8014da6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4ce>
 8014fce:	26ff      	movs	r6, #255	; 0xff
 8014fd0:	46b1      	mov	r9, r6
 8014fd2:	e6e8      	b.n	8014da6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4ce>
 8014fd4:	26ff      	movs	r6, #255	; 0xff
 8014fd6:	46b1      	mov	r9, r6
 8014fd8:	e7f7      	b.n	8014fca <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6f2>
 8014fda:	b017      	add	sp, #92	; 0x5c
 8014fdc:	ecbd 8b08 	vpop	{d8-d11}
 8014fe0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8014fe4:	fffff800 	.word	0xfffff800

08014fe8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>:
 8014fe8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014fec:	b087      	sub	sp, #28
 8014fee:	e9dd e012 	ldrd	lr, r0, [sp, #72]	; 0x48
 8014ff2:	f9bd 4040 	ldrsh.w	r4, [sp, #64]	; 0x40
 8014ff6:	9105      	str	r1, [sp, #20]
 8014ff8:	fb00 e604 	mla	r6, r0, r4, lr
 8014ffc:	f89d 1054 	ldrb.w	r1, [sp, #84]	; 0x54
 8015000:	9102      	str	r1, [sp, #8]
 8015002:	eb02 0146 	add.w	r1, r2, r6, lsl #1
 8015006:	9103      	str	r1, [sp, #12]
 8015008:	9905      	ldr	r1, [sp, #20]
 801500a:	f9bd 7044 	ldrsh.w	r7, [sp, #68]	; 0x44
 801500e:	f89d 5050 	ldrb.w	r5, [sp, #80]	; 0x50
 8015012:	8809      	ldrh	r1, [r1, #0]
 8015014:	2800      	cmp	r0, #0
 8015016:	eb03 0a06 	add.w	sl, r3, r6
 801501a:	f2c0 80ca 	blt.w	80151b2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1ca>
 801501e:	4287      	cmp	r7, r0
 8015020:	f340 80c7 	ble.w	80151b2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1ca>
 8015024:	f1be 0f00 	cmp.w	lr, #0
 8015028:	f2c0 80bf 	blt.w	80151aa <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1c2>
 801502c:	4574      	cmp	r4, lr
 801502e:	f340 80bc 	ble.w	80151aa <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1c2>
 8015032:	f813 c006 	ldrb.w	ip, [r3, r6]
 8015036:	f832 9016 	ldrh.w	r9, [r2, r6, lsl #1]
 801503a:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 801503e:	d01c      	beq.n	801507a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x92>
 8015040:	f429 66fc 	bic.w	r6, r9, #2016	; 0x7e0
 8015044:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8015048:	4372      	muls	r2, r6
 801504a:	f64f 081f 	movw	r8, #63519	; 0xf81f
 801504e:	ea08 1352 	and.w	r3, r8, r2, lsr #5
 8015052:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8015056:	f602 0201 	addw	r2, r2, #2049	; 0x801
 801505a:	fb0c f609 	mul.w	r6, ip, r9
 801505e:	eb03 0902 	add.w	r9, r3, r2
 8015062:	ea08 1959 	and.w	r9, r8, r9, lsr #5
 8015066:	f106 0820 	add.w	r8, r6, #32
 801506a:	eb08 2816 	add.w	r8, r8, r6, lsr #8
 801506e:	ea4f 2818 	mov.w	r8, r8, lsr #8
 8015072:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 8015076:	ea49 0908 	orr.w	r9, r9, r8
 801507a:	fa1f f989 	uxth.w	r9, r9
 801507e:	f11e 0301 	adds.w	r3, lr, #1
 8015082:	f100 809b 	bmi.w	80151bc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1d4>
 8015086:	429c      	cmp	r4, r3
 8015088:	f340 8098 	ble.w	80151bc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1d4>
 801508c:	2d00      	cmp	r5, #0
 801508e:	f000 8095 	beq.w	80151bc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1d4>
 8015092:	f89a 6001 	ldrb.w	r6, [sl, #1]
 8015096:	9b03      	ldr	r3, [sp, #12]
 8015098:	2eff      	cmp	r6, #255	; 0xff
 801509a:	885b      	ldrh	r3, [r3, #2]
 801509c:	d01b      	beq.n	80150d6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xee>
 801509e:	f423 62fc 	bic.w	r2, r3, #2016	; 0x7e0
 80150a2:	ea4f 08e6 	mov.w	r8, r6, asr #3
 80150a6:	fb08 f202 	mul.w	r2, r8, r2
 80150aa:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80150ae:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 80150b2:	fb06 f803 	mul.w	r8, r6, r3
 80150b6:	ea0b 1352 	and.w	r3, fp, r2, lsr #5
 80150ba:	f602 0201 	addw	r2, r2, #2049	; 0x801
 80150be:	441a      	add	r2, r3
 80150c0:	f108 0320 	add.w	r3, r8, #32
 80150c4:	eb03 2318 	add.w	r3, r3, r8, lsr #8
 80150c8:	0a1b      	lsrs	r3, r3, #8
 80150ca:	ea0b 1b52 	and.w	fp, fp, r2, lsr #5
 80150ce:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80150d2:	ea4b 0303 	orr.w	r3, fp, r3
 80150d6:	b29b      	uxth	r3, r3
 80150d8:	9301      	str	r3, [sp, #4]
 80150da:	3001      	adds	r0, #1
 80150dc:	d474      	bmi.n	80151c8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1e0>
 80150de:	4287      	cmp	r7, r0
 80150e0:	dd72      	ble.n	80151c8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1e0>
 80150e2:	9a02      	ldr	r2, [sp, #8]
 80150e4:	2a00      	cmp	r2, #0
 80150e6:	f000 8121 	beq.w	801532c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x344>
 80150ea:	f1be 0f00 	cmp.w	lr, #0
 80150ee:	db68      	blt.n	80151c2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1da>
 80150f0:	4574      	cmp	r4, lr
 80150f2:	dd66      	ble.n	80151c2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1da>
 80150f4:	f81a 7004 	ldrb.w	r7, [sl, r4]
 80150f8:	9a03      	ldr	r2, [sp, #12]
 80150fa:	2fff      	cmp	r7, #255	; 0xff
 80150fc:	f832 0014 	ldrh.w	r0, [r2, r4, lsl #1]
 8015100:	d01c      	beq.n	801513c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x154>
 8015102:	f420 62fc 	bic.w	r2, r0, #2016	; 0x7e0
 8015106:	ea4f 08e7 	mov.w	r8, r7, asr #3
 801510a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801510e:	fb07 fb00 	mul.w	fp, r7, r0
 8015112:	fb08 f802 	mul.w	r8, r8, r2
 8015116:	f64f 001f 	movw	r0, #63519	; 0xf81f
 801511a:	ea00 1258 	and.w	r2, r0, r8, lsr #5
 801511e:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8015122:	4490      	add	r8, r2
 8015124:	f10b 0220 	add.w	r2, fp, #32
 8015128:	eb02 2b1b 	add.w	fp, r2, fp, lsr #8
 801512c:	ea4f 2b1b 	mov.w	fp, fp, lsr #8
 8015130:	ea00 1058 	and.w	r0, r0, r8, lsr #5
 8015134:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 8015138:	ea40 000b 	orr.w	r0, r0, fp
 801513c:	b280      	uxth	r0, r0
 801513e:	f11e 0e01 	adds.w	lr, lr, #1
 8015142:	d446      	bmi.n	80151d2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1ea>
 8015144:	4574      	cmp	r4, lr
 8015146:	dd44      	ble.n	80151d2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1ea>
 8015148:	2d00      	cmp	r5, #0
 801514a:	d045      	beq.n	80151d8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1f0>
 801514c:	1c62      	adds	r2, r4, #1
 801514e:	9b03      	ldr	r3, [sp, #12]
 8015150:	f81a 4002 	ldrb.w	r4, [sl, r2]
 8015154:	f833 2012 	ldrh.w	r2, [r3, r2, lsl #1]
 8015158:	2cff      	cmp	r4, #255	; 0xff
 801515a:	d01c      	beq.n	8015196 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1ae>
 801515c:	f422 6efc 	bic.w	lr, r2, #2016	; 0x7e0
 8015160:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8015164:	fb08 fe0e 	mul.w	lr, r8, lr
 8015168:	f64f 0a1f 	movw	sl, #63519	; 0xf81f
 801516c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8015170:	fb04 f802 	mul.w	r8, r4, r2
 8015174:	ea0a 125e 	and.w	r2, sl, lr, lsr #5
 8015178:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 801517c:	4472      	add	r2, lr
 801517e:	ea0a 1252 	and.w	r2, sl, r2, lsr #5
 8015182:	f108 0a20 	add.w	sl, r8, #32
 8015186:	eb0a 2a18 	add.w	sl, sl, r8, lsr #8
 801518a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801518e:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8015192:	ea42 020a 	orr.w	r2, r2, sl
 8015196:	b292      	uxth	r2, r2
 8015198:	2d0f      	cmp	r5, #15
 801519a:	d91f      	bls.n	80151dc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1f4>
 801519c:	4b67      	ldr	r3, [pc, #412]	; (801533c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x354>)
 801519e:	4a68      	ldr	r2, [pc, #416]	; (8015340 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x358>)
 80151a0:	4868      	ldr	r0, [pc, #416]	; (8015344 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x35c>)
 80151a2:	f240 210d 	movw	r1, #525	; 0x20d
 80151a6:	f004 f9e9 	bl	801957c <__assert_func>
 80151aa:	4689      	mov	r9, r1
 80151ac:	f04f 0cff 	mov.w	ip, #255	; 0xff
 80151b0:	e765      	b.n	801507e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x96>
 80151b2:	26ff      	movs	r6, #255	; 0xff
 80151b4:	9101      	str	r1, [sp, #4]
 80151b6:	4689      	mov	r9, r1
 80151b8:	46b4      	mov	ip, r6
 80151ba:	e78e      	b.n	80150da <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xf2>
 80151bc:	9101      	str	r1, [sp, #4]
 80151be:	26ff      	movs	r6, #255	; 0xff
 80151c0:	e78b      	b.n	80150da <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xf2>
 80151c2:	4608      	mov	r0, r1
 80151c4:	27ff      	movs	r7, #255	; 0xff
 80151c6:	e7ba      	b.n	801513e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x156>
 80151c8:	24ff      	movs	r4, #255	; 0xff
 80151ca:	460a      	mov	r2, r1
 80151cc:	4608      	mov	r0, r1
 80151ce:	4627      	mov	r7, r4
 80151d0:	e7e2      	b.n	8015198 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1b0>
 80151d2:	460a      	mov	r2, r1
 80151d4:	24ff      	movs	r4, #255	; 0xff
 80151d6:	e7df      	b.n	8015198 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1b0>
 80151d8:	460a      	mov	r2, r1
 80151da:	24ff      	movs	r4, #255	; 0xff
 80151dc:	9b02      	ldr	r3, [sp, #8]
 80151de:	2b0f      	cmp	r3, #15
 80151e0:	d8dc      	bhi.n	801519c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1b4>
 80151e2:	f8bd e008 	ldrh.w	lr, [sp, #8]
 80151e6:	fa1f f885 	uxth.w	r8, r5
 80151ea:	fb08 fa0e 	mul.w	sl, r8, lr
 80151ee:	ea4f 1308 	mov.w	r3, r8, lsl #4
 80151f2:	ebca 1e0e 	rsb	lr, sl, lr, lsl #4
 80151f6:	9303      	str	r3, [sp, #12]
 80151f8:	fa1f f38e 	uxth.w	r3, lr
 80151fc:	9304      	str	r3, [sp, #16]
 80151fe:	ea4f 4809 	mov.w	r8, r9, lsl #16
 8015202:	9b02      	ldr	r3, [sp, #8]
 8015204:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8015208:	f008 68fc 	and.w	r8, r8, #132120576	; 0x7e00000
 801520c:	fb15 fe03 	smulbb	lr, r5, r3
 8015210:	ea48 0809 	orr.w	r8, r8, r9
 8015214:	f1c3 0910 	rsb	r9, r3, #16
 8015218:	9b01      	ldr	r3, [sp, #4]
 801521a:	ea4f 4b03 	mov.w	fp, r3, lsl #16
 801521e:	ea4f 0eee 	mov.w	lr, lr, asr #3
 8015222:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8015226:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801522a:	eba9 0905 	sub.w	r9, r9, r5
 801522e:	ea4b 0303 	orr.w	r3, fp, r3
 8015232:	ebce 0545 	rsb	r5, lr, r5, lsl #1
 8015236:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 801523a:	eb0e 0949 	add.w	r9, lr, r9, lsl #1
 801523e:	436b      	muls	r3, r5
 8015240:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8015244:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8015248:	ea4b 0202 	orr.w	r2, fp, r2
 801524c:	fb09 3308 	mla	r3, r9, r8, r3
 8015250:	fb0e 3302 	mla	r3, lr, r2, r3
 8015254:	0402      	lsls	r2, r0, #16
 8015256:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801525a:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801525e:	4310      	orrs	r0, r2
 8015260:	9a02      	ldr	r2, [sp, #8]
 8015262:	ebce 0e42 	rsb	lr, lr, r2, lsl #1
 8015266:	fb0e 3e00 	mla	lr, lr, r0, r3
 801526a:	9803      	ldr	r0, [sp, #12]
 801526c:	f89d 2058 	ldrb.w	r2, [sp, #88]	; 0x58
 8015270:	f5c0 7580 	rsb	r5, r0, #256	; 0x100
 8015274:	9804      	ldr	r0, [sp, #16]
 8015276:	1a2d      	subs	r5, r5, r0
 8015278:	9803      	ldr	r0, [sp, #12]
 801527a:	eba0 000a 	sub.w	r0, r0, sl
 801527e:	b280      	uxth	r0, r0
 8015280:	b2ad      	uxth	r5, r5
 8015282:	4346      	muls	r6, r0
 8015284:	9804      	ldr	r0, [sp, #16]
 8015286:	fb0c 6605 	mla	r6, ip, r5, r6
 801528a:	fb00 6707 	mla	r7, r0, r7, r6
 801528e:	fb0a 7404 	mla	r4, sl, r4, r7
 8015292:	b292      	uxth	r2, r2
 8015294:	f3c4 2407 	ubfx	r4, r4, #8, #8
 8015298:	4354      	muls	r4, r2
 801529a:	ea4f 535e 	mov.w	r3, lr, lsr #21
 801529e:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 80152a2:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80152a6:	f104 0a01 	add.w	sl, r4, #1
 80152aa:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 80152ae:	ea43 0e0e 	orr.w	lr, r3, lr
 80152b2:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 80152b6:	fa1f f38e 	uxth.w	r3, lr
 80152ba:	1208      	asrs	r0, r1, #8
 80152bc:	ea6f 2414 	mvn.w	r4, r4, lsr #8
 80152c0:	b2e4      	uxtb	r4, r4
 80152c2:	121d      	asrs	r5, r3, #8
 80152c4:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 80152c8:	fb10 f004 	smulbb	r0, r0, r4
 80152cc:	10ce      	asrs	r6, r1, #3
 80152ce:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 80152d2:	00c9      	lsls	r1, r1, #3
 80152d4:	fb05 0502 	mla	r5, r5, r2, r0
 80152d8:	b2c9      	uxtb	r1, r1
 80152da:	10d8      	asrs	r0, r3, #3
 80152dc:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80152e0:	00db      	lsls	r3, r3, #3
 80152e2:	fb16 f604 	smulbb	r6, r6, r4
 80152e6:	b2db      	uxtb	r3, r3
 80152e8:	fb11 f404 	smulbb	r4, r1, r4
 80152ec:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 80152f0:	fb00 6002 	mla	r0, r0, r2, r6
 80152f4:	fb03 4202 	mla	r2, r3, r2, r4
 80152f8:	b2ad      	uxth	r5, r5
 80152fa:	b292      	uxth	r2, r2
 80152fc:	1c6b      	adds	r3, r5, #1
 80152fe:	1c51      	adds	r1, r2, #1
 8015300:	eb03 2315 	add.w	r3, r3, r5, lsr #8
 8015304:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8015308:	b280      	uxth	r0, r0
 801530a:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801530e:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 8015312:	4313      	orrs	r3, r2
 8015314:	1c42      	adds	r2, r0, #1
 8015316:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801531a:	0940      	lsrs	r0, r0, #5
 801531c:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8015320:	9a05      	ldr	r2, [sp, #20]
 8015322:	4303      	orrs	r3, r0
 8015324:	8013      	strh	r3, [r2, #0]
 8015326:	b007      	add	sp, #28
 8015328:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801532c:	2d0f      	cmp	r5, #15
 801532e:	f63f af35 	bhi.w	801519c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1b4>
 8015332:	24ff      	movs	r4, #255	; 0xff
 8015334:	460a      	mov	r2, r1
 8015336:	4608      	mov	r0, r1
 8015338:	4627      	mov	r7, r4
 801533a:	e752      	b.n	80151e2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1fa>
 801533c:	0801d2ad 	.word	0x0801d2ad
 8015340:	0801d805 	.word	0x0801d805
 8015344:	0801d335 	.word	0x0801d335

08015348 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 8015348:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801534c:	ed2d 8b08 	vpush	{d8-d11}
 8015350:	b099      	sub	sp, #100	; 0x64
 8015352:	eeb0 aa40 	vmov.f32	s20, s0
 8015356:	9308      	str	r3, [sp, #32]
 8015358:	f9bd 30cc 	ldrsh.w	r3, [sp, #204]	; 0xcc
 801535c:	9e2f      	ldr	r6, [sp, #188]	; 0xbc
 801535e:	930b      	str	r3, [sp, #44]	; 0x2c
 8015360:	f89d 30d4 	ldrb.w	r3, [sp, #212]	; 0xd4
 8015364:	9314      	str	r3, [sp, #80]	; 0x50
 8015366:	9113      	str	r1, [sp, #76]	; 0x4c
 8015368:	e9dd 1330 	ldrd	r1, r3, [sp, #192]	; 0xc0
 801536c:	9017      	str	r0, [sp, #92]	; 0x5c
 801536e:	6870      	ldr	r0, [r6, #4]
 8015370:	9216      	str	r2, [sp, #88]	; 0x58
 8015372:	fb00 1303 	mla	r3, r0, r3, r1
 8015376:	6831      	ldr	r1, [r6, #0]
 8015378:	9a34      	ldr	r2, [sp, #208]	; 0xd0
 801537a:	f9bd 50c8 	ldrsh.w	r5, [sp, #200]	; 0xc8
 801537e:	eb01 0343 	add.w	r3, r1, r3, lsl #1
 8015382:	9309      	str	r3, [sp, #36]	; 0x24
 8015384:	6813      	ldr	r3, [r2, #0]
 8015386:	930c      	str	r3, [sp, #48]	; 0x30
 8015388:	6853      	ldr	r3, [r2, #4]
 801538a:	930d      	str	r3, [sp, #52]	; 0x34
 801538c:	006b      	lsls	r3, r5, #1
 801538e:	9312      	str	r3, [sp, #72]	; 0x48
 8015390:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 8015394:	930a      	str	r3, [sp, #40]	; 0x28
 8015396:	eef0 9a60 	vmov.f32	s19, s1
 801539a:	eeb0 9a41 	vmov.f32	s18, s2
 801539e:	eeb0 8a62 	vmov.f32	s16, s5
 80153a2:	eef0 8a43 	vmov.f32	s17, s6
 80153a6:	eef0 ba44 	vmov.f32	s23, s8
 80153aa:	eeb0 ba64 	vmov.f32	s22, s9
 80153ae:	eef0 aa45 	vmov.f32	s21, s10
 80153b2:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 80153b4:	2b00      	cmp	r3, #0
 80153b6:	dc03      	bgt.n	80153c0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x78>
 80153b8:	9b16      	ldr	r3, [sp, #88]	; 0x58
 80153ba:	2b00      	cmp	r3, #0
 80153bc:	f340 83bf 	ble.w	8015b3e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7f6>
 80153c0:	9b08      	ldr	r3, [sp, #32]
 80153c2:	2b00      	cmp	r3, #0
 80153c4:	f340 81cb 	ble.w	801575e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x416>
 80153c8:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 80153ca:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80153cc:	1412      	asrs	r2, r2, #16
 80153ce:	ea4f 4323 	mov.w	r3, r3, asr #16
 80153d2:	d42f      	bmi.n	8015434 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xec>
 80153d4:	1c51      	adds	r1, r2, #1
 80153d6:	428d      	cmp	r5, r1
 80153d8:	dd2f      	ble.n	801543a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf2>
 80153da:	2b00      	cmp	r3, #0
 80153dc:	db2d      	blt.n	801543a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf2>
 80153de:	980b      	ldr	r0, [sp, #44]	; 0x2c
 80153e0:	1c59      	adds	r1, r3, #1
 80153e2:	4288      	cmp	r0, r1
 80153e4:	dd29      	ble.n	801543a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf2>
 80153e6:	9b08      	ldr	r3, [sp, #32]
 80153e8:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 80153ea:	992b      	ldr	r1, [sp, #172]	; 0xac
 80153ec:	3b01      	subs	r3, #1
 80153ee:	fb02 1203 	mla	r2, r2, r3, r1
 80153f2:	1412      	asrs	r2, r2, #16
 80153f4:	d42b      	bmi.n	801544e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x106>
 80153f6:	3201      	adds	r2, #1
 80153f8:	4295      	cmp	r5, r2
 80153fa:	dd28      	ble.n	801544e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x106>
 80153fc:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
 80153fe:	992c      	ldr	r1, [sp, #176]	; 0xb0
 8015400:	fb02 1303 	mla	r3, r2, r3, r1
 8015404:	141b      	asrs	r3, r3, #16
 8015406:	d422      	bmi.n	801544e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x106>
 8015408:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801540a:	3301      	adds	r3, #1
 801540c:	429a      	cmp	r2, r3
 801540e:	dd1e      	ble.n	801544e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x106>
 8015410:	9b08      	ldr	r3, [sp, #32]
 8015412:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
 8015416:	9315      	str	r3, [sp, #84]	; 0x54
 8015418:	f64f 061f 	movw	r6, #63519	; 0xf81f
 801541c:	9b15      	ldr	r3, [sp, #84]	; 0x54
 801541e:	2b00      	cmp	r3, #0
 8015420:	f300 8217 	bgt.w	8015852 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x50a>
 8015424:	9b08      	ldr	r3, [sp, #32]
 8015426:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801542a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801542c:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 8015430:	9309      	str	r3, [sp, #36]	; 0x24
 8015432:	e196      	b.n	8015762 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x41a>
 8015434:	1c57      	adds	r7, r2, #1
 8015436:	f040 8183 	bne.w	8015740 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3f8>
 801543a:	42aa      	cmp	r2, r5
 801543c:	f280 8180 	bge.w	8015740 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3f8>
 8015440:	1c5e      	adds	r6, r3, #1
 8015442:	f2c0 817d 	blt.w	8015740 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3f8>
 8015446:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8015448:	4293      	cmp	r3, r2
 801544a:	f280 8179 	bge.w	8015740 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3f8>
 801544e:	9b08      	ldr	r3, [sp, #32]
 8015450:	9f09      	ldr	r7, [sp, #36]	; 0x24
 8015452:	9315      	str	r3, [sp, #84]	; 0x54
 8015454:	f64f 061f 	movw	r6, #63519	; 0xf81f
 8015458:	9b15      	ldr	r3, [sp, #84]	; 0x54
 801545a:	2b00      	cmp	r3, #0
 801545c:	dde2      	ble.n	8015424 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xdc>
 801545e:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8015460:	1419      	asrs	r1, r3, #16
 8015462:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8015464:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8015468:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801546a:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 801546e:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8015470:	141b      	asrs	r3, r3, #16
 8015472:	f100 81d3 	bmi.w	801581c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4d4>
 8015476:	1c58      	adds	r0, r3, #1
 8015478:	4285      	cmp	r5, r0
 801547a:	f340 81d1 	ble.w	8015820 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4d8>
 801547e:	2900      	cmp	r1, #0
 8015480:	f2c0 81ce 	blt.w	8015820 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4d8>
 8015484:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8015486:	1c48      	adds	r0, r1, #1
 8015488:	4284      	cmp	r4, r0
 801548a:	f340 81c9 	ble.w	8015820 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4d8>
 801548e:	fb01 3105 	mla	r1, r1, r5, r3
 8015492:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8015494:	fa1f fe82 	uxth.w	lr, r2
 8015498:	eb03 0a01 	add.w	sl, r3, r1
 801549c:	ea4f 100e 	mov.w	r0, lr, lsl #4
 80154a0:	f813 9001 	ldrb.w	r9, [r3, r1]
 80154a4:	f89a 8001 	ldrb.w	r8, [sl, #1]
 80154a8:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 80154ac:	b29b      	uxth	r3, r3
 80154ae:	f1bc 0f00 	cmp.w	ip, #0
 80154b2:	f000 8195 	beq.w	80157e0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x498>
 80154b6:	f81a 4005 	ldrb.w	r4, [sl, r5]
 80154ba:	940e      	str	r4, [sp, #56]	; 0x38
 80154bc:	eb0a 0b05 	add.w	fp, sl, r5
 80154c0:	fa1f fa8c 	uxth.w	sl, ip
 80154c4:	fb0a fe0e 	mul.w	lr, sl, lr
 80154c8:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 80154cc:	fa1f fa8a 	uxth.w	sl, sl
 80154d0:	eba0 000e 	sub.w	r0, r0, lr
 80154d4:	eba3 030a 	sub.w	r3, r3, sl
 80154d8:	b280      	uxth	r0, r0
 80154da:	fb08 f000 	mul.w	r0, r8, r0
 80154de:	b29b      	uxth	r3, r3
 80154e0:	fb09 0303 	mla	r3, r9, r3, r0
 80154e4:	980e      	ldr	r0, [sp, #56]	; 0x38
 80154e6:	f89b 4001 	ldrb.w	r4, [fp, #1]
 80154ea:	940f      	str	r4, [sp, #60]	; 0x3c
 80154ec:	fb0a 3300 	mla	r3, sl, r0, r3
 80154f0:	fb0e 3304 	mla	r3, lr, r4, r3
 80154f4:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80154f8:	2b00      	cmp	r3, #0
 80154fa:	f000 8114 	beq.w	8015726 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3de>
 80154fe:	980c      	ldr	r0, [sp, #48]	; 0x30
 8015500:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8015502:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8015506:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 801550a:	f834 1011 	ldrh.w	r1, [r4, r1, lsl #1]
 801550e:	f000 816c 	beq.w	80157ea <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4a2>
 8015512:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 8015516:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 801551a:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801551e:	fb09 f101 	mul.w	r1, r9, r1
 8015522:	fb0a fe0e 	mul.w	lr, sl, lr
 8015526:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 801552a:	f101 0b20 	add.w	fp, r1, #32
 801552e:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 8015532:	44ce      	add	lr, r9
 8015534:	eb0b 2911 	add.w	r9, fp, r1, lsr #8
 8015538:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801553c:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 8015540:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8015544:	ea4e 0909 	orr.w	r9, lr, r9
 8015548:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 801554c:	8841      	ldrh	r1, [r0, #2]
 801554e:	d019      	beq.n	8015584 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x23c>
 8015550:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 8015554:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 8015558:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801555c:	fb0a fe0e 	mul.w	lr, sl, lr
 8015560:	fb08 f801 	mul.w	r8, r8, r1
 8015564:	f108 0b20 	add.w	fp, r8, #32
 8015568:	ea06 115e 	and.w	r1, r6, lr, lsr #5
 801556c:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 8015570:	448e      	add	lr, r1
 8015572:	eb0b 2118 	add.w	r1, fp, r8, lsr #8
 8015576:	0a09      	lsrs	r1, r1, #8
 8015578:	ea06 1a5e 	and.w	sl, r6, lr, lsr #5
 801557c:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8015580:	ea4a 0101 	orr.w	r1, sl, r1
 8015584:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 8015588:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 801558c:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8015590:	ea4e 0909 	orr.w	r9, lr, r9
 8015594:	ea4f 4e01 	mov.w	lr, r1, lsl #16
 8015598:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 801559c:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 80155a0:	ea4e 0e01 	orr.w	lr, lr, r1
 80155a4:	f1bc 0f00 	cmp.w	ip, #0
 80155a8:	f000 8121 	beq.w	80157ee <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4a6>
 80155ac:	9912      	ldr	r1, [sp, #72]	; 0x48
 80155ae:	eb00 0801 	add.w	r8, r0, r1
 80155b2:	5a41      	ldrh	r1, [r0, r1]
 80155b4:	980e      	ldr	r0, [sp, #56]	; 0x38
 80155b6:	28ff      	cmp	r0, #255	; 0xff
 80155b8:	d019      	beq.n	80155ee <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2a6>
 80155ba:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 80155bc:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
 80155c0:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80155c4:	fb04 fb01 	mul.w	fp, r4, r1
 80155c8:	ea4f 0ae4 	mov.w	sl, r4, asr #3
 80155cc:	fb0a fa00 	mul.w	sl, sl, r0
 80155d0:	f10b 0020 	add.w	r0, fp, #32
 80155d4:	ea06 115a 	and.w	r1, r6, sl, lsr #5
 80155d8:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 80155dc:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 80155e0:	4451      	add	r1, sl
 80155e2:	0a00      	lsrs	r0, r0, #8
 80155e4:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 80155e8:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80155ec:	4301      	orrs	r1, r0
 80155ee:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 80155f0:	f8b8 0002 	ldrh.w	r0, [r8, #2]
 80155f4:	2cff      	cmp	r4, #255	; 0xff
 80155f6:	d01a      	beq.n	801562e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2e6>
 80155f8:	f420 68fc 	bic.w	r8, r0, #2016	; 0x7e0
 80155fc:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8015600:	fb04 fb00 	mul.w	fp, r4, r0
 8015604:	ea4f 0ae4 	mov.w	sl, r4, asr #3
 8015608:	fb0a fa08 	mul.w	sl, sl, r8
 801560c:	f10b 0820 	add.w	r8, fp, #32
 8015610:	ea06 105a 	and.w	r0, r6, sl, lsr #5
 8015614:	eb08 281b 	add.w	r8, r8, fp, lsr #8
 8015618:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 801561c:	4450      	add	r0, sl
 801561e:	ea4f 2818 	mov.w	r8, r8, lsr #8
 8015622:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 8015626:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 801562a:	ea40 0008 	orr.w	r0, r0, r8
 801562e:	fb1c f802 	smulbb	r8, ip, r2
 8015632:	ea4f 08e8 	mov.w	r8, r8, asr #3
 8015636:	f1cc 0a10 	rsb	sl, ip, #16
 801563a:	ebaa 0a02 	sub.w	sl, sl, r2
 801563e:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8015642:	ebc8 0242 	rsb	r2, r8, r2, lsl #1
 8015646:	eb08 0a4a 	add.w	sl, r8, sl, lsl #1
 801564a:	fb0e f202 	mul.w	r2, lr, r2
 801564e:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8015652:	ea4f 4e00 	mov.w	lr, r0, lsl #16
 8015656:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801565a:	ebc8 0c4c 	rsb	ip, r8, ip, lsl #1
 801565e:	fb09 220a 	mla	r2, r9, sl, r2
 8015662:	ea4b 0101 	orr.w	r1, fp, r1
 8015666:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 801566a:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801566e:	fb0c 2201 	mla	r2, ip, r1, r2
 8015672:	ea4e 0000 	orr.w	r0, lr, r0
 8015676:	fb08 2800 	mla	r8, r8, r0, r2
 801567a:	ea4f 5258 	mov.w	r2, r8, lsr #21
 801567e:	ea4f 1858 	mov.w	r8, r8, lsr #5
 8015682:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8015686:	f428 68fc 	bic.w	r8, r8, #2016	; 0x7e0
 801568a:	ea42 0808 	orr.w	r8, r2, r8
 801568e:	fa1f f288 	uxth.w	r2, r8
 8015692:	2bff      	cmp	r3, #255	; 0xff
 8015694:	d103      	bne.n	801569e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x356>
 8015696:	9914      	ldr	r1, [sp, #80]	; 0x50
 8015698:	29ff      	cmp	r1, #255	; 0xff
 801569a:	f000 80bd 	beq.w	8015818 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4d0>
 801569e:	990a      	ldr	r1, [sp, #40]	; 0x28
 80156a0:	f8b7 c000 	ldrh.w	ip, [r7]
 80156a4:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 80156a6:	434b      	muls	r3, r1
 80156a8:	f103 0e01 	add.w	lr, r3, #1
 80156ac:	eb0e 2323 	add.w	r3, lr, r3, asr #8
 80156b0:	ea6f 2e23 	mvn.w	lr, r3, asr #8
 80156b4:	ea4f 202c 	mov.w	r0, ip, asr #8
 80156b8:	fa5f fe8e 	uxtb.w	lr, lr
 80156bc:	1213      	asrs	r3, r2, #8
 80156be:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 80156c2:	fb10 f00e 	smulbb	r0, r0, lr
 80156c6:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 80156ca:	fb03 0301 	mla	r3, r3, r1, r0
 80156ce:	b298      	uxth	r0, r3
 80156d0:	ea4f 03ec 	mov.w	r3, ip, asr #3
 80156d4:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 80156d8:	10d1      	asrs	r1, r2, #3
 80156da:	fa5f fc8c 	uxtb.w	ip, ip
 80156de:	00d2      	lsls	r2, r2, #3
 80156e0:	fb1c fc0e 	smulbb	ip, ip, lr
 80156e4:	b2d2      	uxtb	r2, r2
 80156e6:	fb02 c204 	mla	r2, r2, r4, ip
 80156ea:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 80156ee:	fb13 f30e 	smulbb	r3, r3, lr
 80156f2:	b292      	uxth	r2, r2
 80156f4:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 80156f8:	fb01 3104 	mla	r1, r1, r4, r3
 80156fc:	f102 0c01 	add.w	ip, r2, #1
 8015700:	1c43      	adds	r3, r0, #1
 8015702:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8015706:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 801570a:	b289      	uxth	r1, r1
 801570c:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8015710:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 8015714:	4313      	orrs	r3, r2
 8015716:	1c4a      	adds	r2, r1, #1
 8015718:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801571c:	0949      	lsrs	r1, r1, #5
 801571e:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8015722:	430b      	orrs	r3, r1
 8015724:	803b      	strh	r3, [r7, #0]
 8015726:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8015728:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 801572a:	4413      	add	r3, r2
 801572c:	932b      	str	r3, [sp, #172]	; 0xac
 801572e:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 8015730:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8015732:	441a      	add	r2, r3
 8015734:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8015736:	922c      	str	r2, [sp, #176]	; 0xb0
 8015738:	3b01      	subs	r3, #1
 801573a:	3702      	adds	r7, #2
 801573c:	9315      	str	r3, [sp, #84]	; 0x54
 801573e:	e68b      	b.n	8015458 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x110>
 8015740:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8015742:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 8015744:	4413      	add	r3, r2
 8015746:	932b      	str	r3, [sp, #172]	; 0xac
 8015748:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 801574a:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 801574c:	441a      	add	r2, r3
 801574e:	9b08      	ldr	r3, [sp, #32]
 8015750:	922c      	str	r2, [sp, #176]	; 0xb0
 8015752:	3b01      	subs	r3, #1
 8015754:	9308      	str	r3, [sp, #32]
 8015756:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8015758:	3302      	adds	r3, #2
 801575a:	9309      	str	r3, [sp, #36]	; 0x24
 801575c:	e630      	b.n	80153c0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x78>
 801575e:	f47f ae42 	bne.w	80153e6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9e>
 8015762:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8015764:	2b00      	cmp	r3, #0
 8015766:	f340 81ea 	ble.w	8015b3e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7f6>
 801576a:	ee3a aa2b 	vadd.f32	s20, s20, s23
 801576e:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8015772:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 8015776:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8015778:	ee79 9a8b 	vadd.f32	s19, s19, s22
 801577c:	ee39 9a2a 	vadd.f32	s18, s18, s21
 8015780:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8015784:	eef0 6a48 	vmov.f32	s13, s16
 8015788:	ee69 7a27 	vmul.f32	s15, s18, s15
 801578c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8015790:	ee37 8a48 	vsub.f32	s16, s14, s16
 8015794:	edcd 6a2b 	vstr	s13, [sp, #172]	; 0xac
 8015798:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 801579c:	eef0 6a68 	vmov.f32	s13, s17
 80157a0:	ee77 8ae8 	vsub.f32	s17, s15, s17
 80157a4:	ee18 2a10 	vmov	r2, s16
 80157a8:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 80157ac:	fb92 f3f3 	sdiv	r3, r2, r3
 80157b0:	ee18 2a90 	vmov	r2, s17
 80157b4:	932d      	str	r3, [sp, #180]	; 0xb4
 80157b6:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80157b8:	fb92 f3f3 	sdiv	r3, r2, r3
 80157bc:	932e      	str	r3, [sp, #184]	; 0xb8
 80157be:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 80157c0:	9a16      	ldr	r2, [sp, #88]	; 0x58
 80157c2:	3b01      	subs	r3, #1
 80157c4:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80157c8:	9313      	str	r3, [sp, #76]	; 0x4c
 80157ca:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80157cc:	edcd 6a2c 	vstr	s13, [sp, #176]	; 0xb0
 80157d0:	bf08      	it	eq
 80157d2:	4613      	moveq	r3, r2
 80157d4:	9308      	str	r3, [sp, #32]
 80157d6:	eef0 8a67 	vmov.f32	s17, s15
 80157da:	eeb0 8a47 	vmov.f32	s16, s14
 80157de:	e5e8      	b.n	80153b2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6a>
 80157e0:	fb08 f000 	mul.w	r0, r8, r0
 80157e4:	fb09 0303 	mla	r3, r9, r3, r0
 80157e8:	e684      	b.n	80154f4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1ac>
 80157ea:	4689      	mov	r9, r1
 80157ec:	e6ac      	b.n	8015548 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x200>
 80157ee:	f1c2 0010 	rsb	r0, r2, #16
 80157f2:	fb0e f202 	mul.w	r2, lr, r2
 80157f6:	fb09 2900 	mla	r9, r9, r0, r2
 80157fa:	ea4f 0949 	mov.w	r9, r9, lsl #1
 80157fe:	ea4f 5259 	mov.w	r2, r9, lsr #21
 8015802:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8015806:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801580a:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 801580e:	ea42 0909 	orr.w	r9, r2, r9
 8015812:	fa1f f289 	uxth.w	r2, r9
 8015816:	e73c      	b.n	8015692 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x34a>
 8015818:	803a      	strh	r2, [r7, #0]
 801581a:	e784      	b.n	8015726 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3de>
 801581c:	1c5c      	adds	r4, r3, #1
 801581e:	d182      	bne.n	8015726 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3de>
 8015820:	429d      	cmp	r5, r3
 8015822:	dd80      	ble.n	8015726 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3de>
 8015824:	1c48      	adds	r0, r1, #1
 8015826:	f6ff af7e 	blt.w	8015726 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3de>
 801582a:	980b      	ldr	r0, [sp, #44]	; 0x2c
 801582c:	4288      	cmp	r0, r1
 801582e:	f77f af7a 	ble.w	8015726 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3de>
 8015832:	9814      	ldr	r0, [sp, #80]	; 0x50
 8015834:	9302      	str	r3, [sp, #8]
 8015836:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8015838:	e9cd 1203 	strd	r1, r2, [sp, #12]
 801583c:	e9cd c005 	strd	ip, r0, [sp, #20]
 8015840:	e9cd 5300 	strd	r5, r3, [sp]
 8015844:	4639      	mov	r1, r7
 8015846:	e9dd 230c 	ldrd	r2, r3, [sp, #48]	; 0x30
 801584a:	9817      	ldr	r0, [sp, #92]	; 0x5c
 801584c:	f7ff fbcc 	bl	8014fe8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>
 8015850:	e769      	b.n	8015726 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3de>
 8015852:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8015854:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8015858:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801585a:	141f      	asrs	r7, r3, #16
 801585c:	f3c3 3003 	ubfx	r0, r3, #12, #4
 8015860:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8015862:	141b      	asrs	r3, r3, #16
 8015864:	fb05 3707 	mla	r7, r5, r7, r3
 8015868:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801586a:	fa1f fc82 	uxth.w	ip, r2
 801586e:	eb03 0a07 	add.w	sl, r3, r7
 8015872:	ea4f 110c 	mov.w	r1, ip, lsl #4
 8015876:	f813 9007 	ldrb.w	r9, [r3, r7]
 801587a:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801587e:	f5c1 7380 	rsb	r3, r1, #256	; 0x100
 8015882:	b29b      	uxth	r3, r3
 8015884:	2800      	cmp	r0, #0
 8015886:	f000 813f 	beq.w	8015b08 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7c0>
 801588a:	f81a 4005 	ldrb.w	r4, [sl, r5]
 801588e:	9410      	str	r4, [sp, #64]	; 0x40
 8015890:	eb0a 0b05 	add.w	fp, sl, r5
 8015894:	fa1f fa80 	uxth.w	sl, r0
 8015898:	fb0a fc0c 	mul.w	ip, sl, ip
 801589c:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 80158a0:	fa1f fa8a 	uxth.w	sl, sl
 80158a4:	eba1 010c 	sub.w	r1, r1, ip
 80158a8:	eba3 030a 	sub.w	r3, r3, sl
 80158ac:	b289      	uxth	r1, r1
 80158ae:	fb08 f101 	mul.w	r1, r8, r1
 80158b2:	b29b      	uxth	r3, r3
 80158b4:	fb09 1303 	mla	r3, r9, r3, r1
 80158b8:	9910      	ldr	r1, [sp, #64]	; 0x40
 80158ba:	f89b 4001 	ldrb.w	r4, [fp, #1]
 80158be:	9411      	str	r4, [sp, #68]	; 0x44
 80158c0:	fb0a 3301 	mla	r3, sl, r1, r3
 80158c4:	fb0c 3304 	mla	r3, ip, r4, r3
 80158c8:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80158cc:	2b00      	cmp	r3, #0
 80158ce:	f000 810d 	beq.w	8015aec <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7a4>
 80158d2:	990c      	ldr	r1, [sp, #48]	; 0x30
 80158d4:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 80158d6:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 80158da:	eb01 0147 	add.w	r1, r1, r7, lsl #1
 80158de:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 80158e2:	f000 8116 	beq.w	8015b12 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7ca>
 80158e6:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 80158ea:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 80158ee:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 80158f2:	fb09 f707 	mul.w	r7, r9, r7
 80158f6:	fb0a fc0c 	mul.w	ip, sl, ip
 80158fa:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 80158fe:	f107 0b20 	add.w	fp, r7, #32
 8015902:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 8015906:	44cc      	add	ip, r9
 8015908:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 801590c:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8015910:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8015914:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8015918:	ea4c 0909 	orr.w	r9, ip, r9
 801591c:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8015920:	884f      	ldrh	r7, [r1, #2]
 8015922:	d019      	beq.n	8015958 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x610>
 8015924:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 8015928:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 801592c:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8015930:	fb08 f807 	mul.w	r8, r8, r7
 8015934:	fb0a fc0c 	mul.w	ip, sl, ip
 8015938:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 801593c:	f108 0b20 	add.w	fp, r8, #32
 8015940:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 8015944:	44bc      	add	ip, r7
 8015946:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 801594a:	0a3f      	lsrs	r7, r7, #8
 801594c:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8015950:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8015954:	ea4c 0707 	orr.w	r7, ip, r7
 8015958:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 801595c:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 8015960:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8015964:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8015968:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801596c:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8015970:	ea4c 0909 	orr.w	r9, ip, r9
 8015974:	ea4a 0707 	orr.w	r7, sl, r7
 8015978:	2800      	cmp	r0, #0
 801597a:	f000 80cc 	beq.w	8015b16 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7ce>
 801597e:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8015980:	eb01 0c04 	add.w	ip, r1, r4
 8015984:	f831 8004 	ldrh.w	r8, [r1, r4]
 8015988:	9910      	ldr	r1, [sp, #64]	; 0x40
 801598a:	29ff      	cmp	r1, #255	; 0xff
 801598c:	d01a      	beq.n	80159c4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x67c>
 801598e:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8015990:	f428 61fc 	bic.w	r1, r8, #2016	; 0x7e0
 8015994:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 8015998:	fb04 fb08 	mul.w	fp, r4, r8
 801599c:	ea4f 0ae4 	mov.w	sl, r4, asr #3
 80159a0:	fb0a fa01 	mul.w	sl, sl, r1
 80159a4:	f10b 0120 	add.w	r1, fp, #32
 80159a8:	ea06 185a 	and.w	r8, r6, sl, lsr #5
 80159ac:	eb01 211b 	add.w	r1, r1, fp, lsr #8
 80159b0:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 80159b4:	44d0      	add	r8, sl
 80159b6:	0a09      	lsrs	r1, r1, #8
 80159b8:	ea06 1858 	and.w	r8, r6, r8, lsr #5
 80159bc:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80159c0:	ea48 0801 	orr.w	r8, r8, r1
 80159c4:	9c11      	ldr	r4, [sp, #68]	; 0x44
 80159c6:	f8bc 1002 	ldrh.w	r1, [ip, #2]
 80159ca:	2cff      	cmp	r4, #255	; 0xff
 80159cc:	d01a      	beq.n	8015a04 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6bc>
 80159ce:	f421 6cfc 	bic.w	ip, r1, #2016	; 0x7e0
 80159d2:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80159d6:	fb04 fb01 	mul.w	fp, r4, r1
 80159da:	ea4f 0ae4 	mov.w	sl, r4, asr #3
 80159de:	fb0a fa0c 	mul.w	sl, sl, ip
 80159e2:	f10b 0c20 	add.w	ip, fp, #32
 80159e6:	ea06 115a 	and.w	r1, r6, sl, lsr #5
 80159ea:	eb0c 2c1b 	add.w	ip, ip, fp, lsr #8
 80159ee:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 80159f2:	4451      	add	r1, sl
 80159f4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80159f8:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 80159fc:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8015a00:	ea41 010c 	orr.w	r1, r1, ip
 8015a04:	fb10 fc02 	smulbb	ip, r0, r2
 8015a08:	ea4f 0cec 	mov.w	ip, ip, asr #3
 8015a0c:	f1c0 0a10 	rsb	sl, r0, #16
 8015a10:	ebaa 0a02 	sub.w	sl, sl, r2
 8015a14:	ea4f 4b08 	mov.w	fp, r8, lsl #16
 8015a18:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 8015a1c:	437a      	muls	r2, r7
 8015a1e:	eb0c 0a4a 	add.w	sl, ip, sl, lsl #1
 8015a22:	040f      	lsls	r7, r1, #16
 8015a24:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8015a28:	f428 68fc 	bic.w	r8, r8, #2016	; 0x7e0
 8015a2c:	fb09 220a 	mla	r2, r9, sl, r2
 8015a30:	ea4b 0808 	orr.w	r8, fp, r8
 8015a34:	ebcc 0040 	rsb	r0, ip, r0, lsl #1
 8015a38:	f007 67fc 	and.w	r7, r7, #132120576	; 0x7e00000
 8015a3c:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8015a40:	fb00 2208 	mla	r2, r0, r8, r2
 8015a44:	4339      	orrs	r1, r7
 8015a46:	fb0c 2201 	mla	r2, ip, r1, r2
 8015a4a:	ea4f 5952 	mov.w	r9, r2, lsr #21
 8015a4e:	0952      	lsrs	r2, r2, #5
 8015a50:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8015a54:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8015a58:	ea49 0202 	orr.w	r2, r9, r2
 8015a5c:	2bff      	cmp	r3, #255	; 0xff
 8015a5e:	b292      	uxth	r2, r2
 8015a60:	d102      	bne.n	8015a68 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x720>
 8015a62:	9914      	ldr	r1, [sp, #80]	; 0x50
 8015a64:	29ff      	cmp	r1, #255	; 0xff
 8015a66:	d067      	beq.n	8015b38 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7f0>
 8015a68:	990a      	ldr	r1, [sp, #40]	; 0x28
 8015a6a:	f8be 0000 	ldrh.w	r0, [lr]
 8015a6e:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8015a70:	434b      	muls	r3, r1
 8015a72:	1c59      	adds	r1, r3, #1
 8015a74:	eb01 2323 	add.w	r3, r1, r3, asr #8
 8015a78:	ea6f 2323 	mvn.w	r3, r3, asr #8
 8015a7c:	1201      	asrs	r1, r0, #8
 8015a7e:	b2db      	uxtb	r3, r3
 8015a80:	1217      	asrs	r7, r2, #8
 8015a82:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8015a86:	fb11 f103 	smulbb	r1, r1, r3
 8015a8a:	ea4f 0ce0 	mov.w	ip, r0, asr #3
 8015a8e:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8015a92:	00c0      	lsls	r0, r0, #3
 8015a94:	fb07 1704 	mla	r7, r7, r4, r1
 8015a98:	b2c0      	uxtb	r0, r0
 8015a9a:	10d1      	asrs	r1, r2, #3
 8015a9c:	00d2      	lsls	r2, r2, #3
 8015a9e:	fb10 f003 	smulbb	r0, r0, r3
 8015aa2:	b2d2      	uxtb	r2, r2
 8015aa4:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 8015aa8:	fb02 0204 	mla	r2, r2, r4, r0
 8015aac:	fb1c fc03 	smulbb	ip, ip, r3
 8015ab0:	b2bf      	uxth	r7, r7
 8015ab2:	b292      	uxth	r2, r2
 8015ab4:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8015ab8:	fb01 c104 	mla	r1, r1, r4, ip
 8015abc:	1c7b      	adds	r3, r7, #1
 8015abe:	f102 0c01 	add.w	ip, r2, #1
 8015ac2:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 8015ac6:	eb0c 2c12 	add.w	ip, ip, r2, lsr #8
 8015aca:	b289      	uxth	r1, r1
 8015acc:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8015ad0:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8015ad4:	ea47 070c 	orr.w	r7, r7, ip
 8015ad8:	f101 0c01 	add.w	ip, r1, #1
 8015adc:	eb0c 2111 	add.w	r1, ip, r1, lsr #8
 8015ae0:	0949      	lsrs	r1, r1, #5
 8015ae2:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8015ae6:	430f      	orrs	r7, r1
 8015ae8:	f8ae 7000 	strh.w	r7, [lr]
 8015aec:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8015aee:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 8015af0:	4413      	add	r3, r2
 8015af2:	932b      	str	r3, [sp, #172]	; 0xac
 8015af4:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 8015af6:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8015af8:	441a      	add	r2, r3
 8015afa:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8015afc:	922c      	str	r2, [sp, #176]	; 0xb0
 8015afe:	3b01      	subs	r3, #1
 8015b00:	f10e 0e02 	add.w	lr, lr, #2
 8015b04:	9315      	str	r3, [sp, #84]	; 0x54
 8015b06:	e489      	b.n	801541c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xd4>
 8015b08:	fb08 f101 	mul.w	r1, r8, r1
 8015b0c:	fb09 1303 	mla	r3, r9, r3, r1
 8015b10:	e6da      	b.n	80158c8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x580>
 8015b12:	46b9      	mov	r9, r7
 8015b14:	e702      	b.n	801591c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x5d4>
 8015b16:	f1c2 0110 	rsb	r1, r2, #16
 8015b1a:	437a      	muls	r2, r7
 8015b1c:	fb09 2901 	mla	r9, r9, r1, r2
 8015b20:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8015b24:	ea4f 5059 	mov.w	r0, r9, lsr #21
 8015b28:	ea4f 1259 	mov.w	r2, r9, lsr #5
 8015b2c:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8015b30:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8015b34:	4302      	orrs	r2, r0
 8015b36:	e791      	b.n	8015a5c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x714>
 8015b38:	f8ae 2000 	strh.w	r2, [lr]
 8015b3c:	e7d6      	b.n	8015aec <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7a4>
 8015b3e:	b019      	add	sp, #100	; 0x64
 8015b40:	ecbd 8b08 	vpop	{d8-d11}
 8015b44:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08015b48 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 8015b48:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015b4c:	b087      	sub	sp, #28
 8015b4e:	e9dd e012 	ldrd	lr, r0, [sp, #72]	; 0x48
 8015b52:	f9bd 4040 	ldrsh.w	r4, [sp, #64]	; 0x40
 8015b56:	9105      	str	r1, [sp, #20]
 8015b58:	fb00 e604 	mla	r6, r0, r4, lr
 8015b5c:	f89d 1054 	ldrb.w	r1, [sp, #84]	; 0x54
 8015b60:	9102      	str	r1, [sp, #8]
 8015b62:	eb03 0146 	add.w	r1, r3, r6, lsl #1
 8015b66:	9103      	str	r1, [sp, #12]
 8015b68:	9905      	ldr	r1, [sp, #20]
 8015b6a:	f9bd 7044 	ldrsh.w	r7, [sp, #68]	; 0x44
 8015b6e:	f89d 5050 	ldrb.w	r5, [sp, #80]	; 0x50
 8015b72:	8809      	ldrh	r1, [r1, #0]
 8015b74:	2800      	cmp	r0, #0
 8015b76:	eb02 0a06 	add.w	sl, r2, r6
 8015b7a:	f2c0 80ca 	blt.w	8015d12 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1ca>
 8015b7e:	4287      	cmp	r7, r0
 8015b80:	f340 80c7 	ble.w	8015d12 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1ca>
 8015b84:	f1be 0f00 	cmp.w	lr, #0
 8015b88:	f2c0 80bf 	blt.w	8015d0a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1c2>
 8015b8c:	4574      	cmp	r4, lr
 8015b8e:	f340 80bc 	ble.w	8015d0a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1c2>
 8015b92:	f812 c006 	ldrb.w	ip, [r2, r6]
 8015b96:	f833 9016 	ldrh.w	r9, [r3, r6, lsl #1]
 8015b9a:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8015b9e:	d01c      	beq.n	8015bda <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x92>
 8015ba0:	f429 66fc 	bic.w	r6, r9, #2016	; 0x7e0
 8015ba4:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8015ba8:	4372      	muls	r2, r6
 8015baa:	f64f 081f 	movw	r8, #63519	; 0xf81f
 8015bae:	ea08 1352 	and.w	r3, r8, r2, lsr #5
 8015bb2:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8015bb6:	f602 0201 	addw	r2, r2, #2049	; 0x801
 8015bba:	fb0c f609 	mul.w	r6, ip, r9
 8015bbe:	eb03 0902 	add.w	r9, r3, r2
 8015bc2:	ea08 1959 	and.w	r9, r8, r9, lsr #5
 8015bc6:	f106 0820 	add.w	r8, r6, #32
 8015bca:	eb08 2816 	add.w	r8, r8, r6, lsr #8
 8015bce:	ea4f 2818 	mov.w	r8, r8, lsr #8
 8015bd2:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 8015bd6:	ea49 0908 	orr.w	r9, r9, r8
 8015bda:	fa1f f989 	uxth.w	r9, r9
 8015bde:	f11e 0301 	adds.w	r3, lr, #1
 8015be2:	f100 809b 	bmi.w	8015d1c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1d4>
 8015be6:	429c      	cmp	r4, r3
 8015be8:	f340 8098 	ble.w	8015d1c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1d4>
 8015bec:	2d00      	cmp	r5, #0
 8015bee:	f000 8095 	beq.w	8015d1c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1d4>
 8015bf2:	f89a 6001 	ldrb.w	r6, [sl, #1]
 8015bf6:	9b03      	ldr	r3, [sp, #12]
 8015bf8:	2eff      	cmp	r6, #255	; 0xff
 8015bfa:	885b      	ldrh	r3, [r3, #2]
 8015bfc:	d01b      	beq.n	8015c36 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xee>
 8015bfe:	f423 62fc 	bic.w	r2, r3, #2016	; 0x7e0
 8015c02:	ea4f 08e6 	mov.w	r8, r6, asr #3
 8015c06:	fb08 f202 	mul.w	r2, r8, r2
 8015c0a:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8015c0e:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 8015c12:	fb06 f803 	mul.w	r8, r6, r3
 8015c16:	ea0b 1352 	and.w	r3, fp, r2, lsr #5
 8015c1a:	f602 0201 	addw	r2, r2, #2049	; 0x801
 8015c1e:	441a      	add	r2, r3
 8015c20:	f108 0320 	add.w	r3, r8, #32
 8015c24:	eb03 2318 	add.w	r3, r3, r8, lsr #8
 8015c28:	0a1b      	lsrs	r3, r3, #8
 8015c2a:	ea0b 1b52 	and.w	fp, fp, r2, lsr #5
 8015c2e:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8015c32:	ea4b 0303 	orr.w	r3, fp, r3
 8015c36:	b29b      	uxth	r3, r3
 8015c38:	9301      	str	r3, [sp, #4]
 8015c3a:	3001      	adds	r0, #1
 8015c3c:	d474      	bmi.n	8015d28 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1e0>
 8015c3e:	4287      	cmp	r7, r0
 8015c40:	dd72      	ble.n	8015d28 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1e0>
 8015c42:	9a02      	ldr	r2, [sp, #8]
 8015c44:	2a00      	cmp	r2, #0
 8015c46:	f000 8111 	beq.w	8015e6c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x324>
 8015c4a:	f1be 0f00 	cmp.w	lr, #0
 8015c4e:	db68      	blt.n	8015d22 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1da>
 8015c50:	4574      	cmp	r4, lr
 8015c52:	dd66      	ble.n	8015d22 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1da>
 8015c54:	f81a 7004 	ldrb.w	r7, [sl, r4]
 8015c58:	9a03      	ldr	r2, [sp, #12]
 8015c5a:	2fff      	cmp	r7, #255	; 0xff
 8015c5c:	f832 0014 	ldrh.w	r0, [r2, r4, lsl #1]
 8015c60:	d01c      	beq.n	8015c9c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x154>
 8015c62:	f420 62fc 	bic.w	r2, r0, #2016	; 0x7e0
 8015c66:	ea4f 08e7 	mov.w	r8, r7, asr #3
 8015c6a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8015c6e:	fb07 fb00 	mul.w	fp, r7, r0
 8015c72:	fb08 f802 	mul.w	r8, r8, r2
 8015c76:	f64f 001f 	movw	r0, #63519	; 0xf81f
 8015c7a:	ea00 1258 	and.w	r2, r0, r8, lsr #5
 8015c7e:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8015c82:	4490      	add	r8, r2
 8015c84:	f10b 0220 	add.w	r2, fp, #32
 8015c88:	eb02 2b1b 	add.w	fp, r2, fp, lsr #8
 8015c8c:	ea4f 2b1b 	mov.w	fp, fp, lsr #8
 8015c90:	ea00 1058 	and.w	r0, r0, r8, lsr #5
 8015c94:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 8015c98:	ea40 000b 	orr.w	r0, r0, fp
 8015c9c:	b280      	uxth	r0, r0
 8015c9e:	f11e 0e01 	adds.w	lr, lr, #1
 8015ca2:	d446      	bmi.n	8015d32 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1ea>
 8015ca4:	4574      	cmp	r4, lr
 8015ca6:	dd44      	ble.n	8015d32 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1ea>
 8015ca8:	2d00      	cmp	r5, #0
 8015caa:	d045      	beq.n	8015d38 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1f0>
 8015cac:	1c62      	adds	r2, r4, #1
 8015cae:	9b03      	ldr	r3, [sp, #12]
 8015cb0:	f81a 4002 	ldrb.w	r4, [sl, r2]
 8015cb4:	f833 2012 	ldrh.w	r2, [r3, r2, lsl #1]
 8015cb8:	2cff      	cmp	r4, #255	; 0xff
 8015cba:	d01c      	beq.n	8015cf6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1ae>
 8015cbc:	f422 6efc 	bic.w	lr, r2, #2016	; 0x7e0
 8015cc0:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8015cc4:	fb08 fe0e 	mul.w	lr, r8, lr
 8015cc8:	f64f 0a1f 	movw	sl, #63519	; 0xf81f
 8015ccc:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8015cd0:	fb04 f802 	mul.w	r8, r4, r2
 8015cd4:	ea0a 125e 	and.w	r2, sl, lr, lsr #5
 8015cd8:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 8015cdc:	4472      	add	r2, lr
 8015cde:	ea0a 1252 	and.w	r2, sl, r2, lsr #5
 8015ce2:	f108 0a20 	add.w	sl, r8, #32
 8015ce6:	eb0a 2a18 	add.w	sl, sl, r8, lsr #8
 8015cea:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8015cee:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8015cf2:	ea42 020a 	orr.w	r2, r2, sl
 8015cf6:	b292      	uxth	r2, r2
 8015cf8:	2d0f      	cmp	r5, #15
 8015cfa:	d91f      	bls.n	8015d3c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1f4>
 8015cfc:	4b5f      	ldr	r3, [pc, #380]	; (8015e7c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x334>)
 8015cfe:	4a60      	ldr	r2, [pc, #384]	; (8015e80 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x338>)
 8015d00:	4860      	ldr	r0, [pc, #384]	; (8015e84 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x33c>)
 8015d02:	f240 210d 	movw	r1, #525	; 0x20d
 8015d06:	f003 fc39 	bl	801957c <__assert_func>
 8015d0a:	4689      	mov	r9, r1
 8015d0c:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8015d10:	e765      	b.n	8015bde <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x96>
 8015d12:	26ff      	movs	r6, #255	; 0xff
 8015d14:	9101      	str	r1, [sp, #4]
 8015d16:	4689      	mov	r9, r1
 8015d18:	46b4      	mov	ip, r6
 8015d1a:	e78e      	b.n	8015c3a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf2>
 8015d1c:	9101      	str	r1, [sp, #4]
 8015d1e:	26ff      	movs	r6, #255	; 0xff
 8015d20:	e78b      	b.n	8015c3a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf2>
 8015d22:	4608      	mov	r0, r1
 8015d24:	27ff      	movs	r7, #255	; 0xff
 8015d26:	e7ba      	b.n	8015c9e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x156>
 8015d28:	24ff      	movs	r4, #255	; 0xff
 8015d2a:	460a      	mov	r2, r1
 8015d2c:	4608      	mov	r0, r1
 8015d2e:	4627      	mov	r7, r4
 8015d30:	e7e2      	b.n	8015cf8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1b0>
 8015d32:	460a      	mov	r2, r1
 8015d34:	24ff      	movs	r4, #255	; 0xff
 8015d36:	e7df      	b.n	8015cf8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1b0>
 8015d38:	460a      	mov	r2, r1
 8015d3a:	24ff      	movs	r4, #255	; 0xff
 8015d3c:	9b02      	ldr	r3, [sp, #8]
 8015d3e:	2b0f      	cmp	r3, #15
 8015d40:	d8dc      	bhi.n	8015cfc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1b4>
 8015d42:	f8bd e008 	ldrh.w	lr, [sp, #8]
 8015d46:	fa1f f885 	uxth.w	r8, r5
 8015d4a:	fb08 fa0e 	mul.w	sl, r8, lr
 8015d4e:	ea4f 1308 	mov.w	r3, r8, lsl #4
 8015d52:	ebca 1e0e 	rsb	lr, sl, lr, lsl #4
 8015d56:	9303      	str	r3, [sp, #12]
 8015d58:	fa1f f38e 	uxth.w	r3, lr
 8015d5c:	9304      	str	r3, [sp, #16]
 8015d5e:	ea4f 4809 	mov.w	r8, r9, lsl #16
 8015d62:	9b02      	ldr	r3, [sp, #8]
 8015d64:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8015d68:	f008 68fc 	and.w	r8, r8, #132120576	; 0x7e00000
 8015d6c:	fb15 fe03 	smulbb	lr, r5, r3
 8015d70:	ea48 0809 	orr.w	r8, r8, r9
 8015d74:	f1c3 0910 	rsb	r9, r3, #16
 8015d78:	9b01      	ldr	r3, [sp, #4]
 8015d7a:	ea4f 4b03 	mov.w	fp, r3, lsl #16
 8015d7e:	ea4f 0eee 	mov.w	lr, lr, asr #3
 8015d82:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8015d86:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8015d8a:	eba9 0905 	sub.w	r9, r9, r5
 8015d8e:	ea4b 0303 	orr.w	r3, fp, r3
 8015d92:	ebce 0545 	rsb	r5, lr, r5, lsl #1
 8015d96:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 8015d9a:	eb0e 0949 	add.w	r9, lr, r9, lsl #1
 8015d9e:	436b      	muls	r3, r5
 8015da0:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8015da4:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8015da8:	ea4b 0202 	orr.w	r2, fp, r2
 8015dac:	fb09 3308 	mla	r3, r9, r8, r3
 8015db0:	fb0e 3302 	mla	r3, lr, r2, r3
 8015db4:	0402      	lsls	r2, r0, #16
 8015db6:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8015dba:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8015dbe:	4310      	orrs	r0, r2
 8015dc0:	9a02      	ldr	r2, [sp, #8]
 8015dc2:	ebce 0e42 	rsb	lr, lr, r2, lsl #1
 8015dc6:	9a03      	ldr	r2, [sp, #12]
 8015dc8:	fb0e 3e00 	mla	lr, lr, r0, r3
 8015dcc:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
 8015dd0:	9a04      	ldr	r2, [sp, #16]
 8015dd2:	1a80      	subs	r0, r0, r2
 8015dd4:	9a03      	ldr	r2, [sp, #12]
 8015dd6:	eba2 020a 	sub.w	r2, r2, sl
 8015dda:	b292      	uxth	r2, r2
 8015ddc:	b280      	uxth	r0, r0
 8015dde:	4356      	muls	r6, r2
 8015de0:	9a04      	ldr	r2, [sp, #16]
 8015de2:	fb0c 6600 	mla	r6, ip, r0, r6
 8015de6:	fb02 6707 	mla	r7, r2, r7, r6
 8015dea:	fb0a 7404 	mla	r4, sl, r4, r7
 8015dee:	ea4f 535e 	mov.w	r3, lr, lsr #21
 8015df2:	1208      	asrs	r0, r1, #8
 8015df4:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8015df8:	ea6f 2424 	mvn.w	r4, r4, asr #8
 8015dfc:	b2e4      	uxtb	r4, r4
 8015dfe:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8015e02:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8015e06:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8015e0a:	4360      	muls	r0, r4
 8015e0c:	ea43 0e0e 	orr.w	lr, r3, lr
 8015e10:	fa1f f38e 	uxth.w	r3, lr
 8015e14:	1c42      	adds	r2, r0, #1
 8015e16:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 8015e1a:	1218      	asrs	r0, r3, #8
 8015e1c:	10cd      	asrs	r5, r1, #3
 8015e1e:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8015e22:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 8015e26:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8015e2a:	4a17      	ldr	r2, [pc, #92]	; (8015e88 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x340>)
 8015e2c:	4365      	muls	r5, r4
 8015e2e:	ea02 2000 	and.w	r0, r2, r0, lsl #8
 8015e32:	1c6a      	adds	r2, r5, #1
 8015e34:	eb02 2515 	add.w	r5, r2, r5, lsr #8
 8015e38:	00c9      	lsls	r1, r1, #3
 8015e3a:	10da      	asrs	r2, r3, #3
 8015e3c:	b2c9      	uxtb	r1, r1
 8015e3e:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8015e42:	434c      	muls	r4, r1
 8015e44:	eb02 2215 	add.w	r2, r2, r5, lsr #8
 8015e48:	1c61      	adds	r1, r4, #1
 8015e4a:	00d2      	lsls	r2, r2, #3
 8015e4c:	00db      	lsls	r3, r3, #3
 8015e4e:	eb01 2414 	add.w	r4, r1, r4, lsr #8
 8015e52:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8015e56:	b2db      	uxtb	r3, r3
 8015e58:	4302      	orrs	r2, r0
 8015e5a:	eb03 2314 	add.w	r3, r3, r4, lsr #8
 8015e5e:	ea42 03d3 	orr.w	r3, r2, r3, lsr #3
 8015e62:	9a05      	ldr	r2, [sp, #20]
 8015e64:	8013      	strh	r3, [r2, #0]
 8015e66:	b007      	add	sp, #28
 8015e68:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015e6c:	2d0f      	cmp	r5, #15
 8015e6e:	f63f af45 	bhi.w	8015cfc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1b4>
 8015e72:	24ff      	movs	r4, #255	; 0xff
 8015e74:	460a      	mov	r2, r1
 8015e76:	4608      	mov	r0, r1
 8015e78:	4627      	mov	r7, r4
 8015e7a:	e762      	b.n	8015d42 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1fa>
 8015e7c:	0801d2ad 	.word	0x0801d2ad
 8015e80:	0801d805 	.word	0x0801d805
 8015e84:	0801d335 	.word	0x0801d335
 8015e88:	fffff800 	.word	0xfffff800

08015e8c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 8015e8c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015e90:	ed2d 8b08 	vpush	{d8-d11}
 8015e94:	b095      	sub	sp, #84	; 0x54
 8015e96:	eeb0 aa40 	vmov.f32	s20, s0
 8015e9a:	9e2b      	ldr	r6, [sp, #172]	; 0xac
 8015e9c:	9306      	str	r3, [sp, #24]
 8015e9e:	f9bd 30bc 	ldrsh.w	r3, [sp, #188]	; 0xbc
 8015ea2:	9110      	str	r1, [sp, #64]	; 0x40
 8015ea4:	9308      	str	r3, [sp, #32]
 8015ea6:	e9dd 132c 	ldrd	r1, r3, [sp, #176]	; 0xb0
 8015eaa:	9013      	str	r0, [sp, #76]	; 0x4c
 8015eac:	6870      	ldr	r0, [r6, #4]
 8015eae:	9212      	str	r2, [sp, #72]	; 0x48
 8015eb0:	fb00 1303 	mla	r3, r0, r3, r1
 8015eb4:	6831      	ldr	r1, [r6, #0]
 8015eb6:	9a30      	ldr	r2, [sp, #192]	; 0xc0
 8015eb8:	f9bd 50b8 	ldrsh.w	r5, [sp, #184]	; 0xb8
 8015ebc:	eb01 0343 	add.w	r3, r1, r3, lsl #1
 8015ec0:	9307      	str	r3, [sp, #28]
 8015ec2:	6813      	ldr	r3, [r2, #0]
 8015ec4:	9309      	str	r3, [sp, #36]	; 0x24
 8015ec6:	6853      	ldr	r3, [r2, #4]
 8015ec8:	930a      	str	r3, [sp, #40]	; 0x28
 8015eca:	006b      	lsls	r3, r5, #1
 8015ecc:	eef0 9a60 	vmov.f32	s19, s1
 8015ed0:	eeb0 9a41 	vmov.f32	s18, s2
 8015ed4:	eeb0 8a62 	vmov.f32	s16, s5
 8015ed8:	eef0 8a43 	vmov.f32	s17, s6
 8015edc:	eef0 ba44 	vmov.f32	s23, s8
 8015ee0:	eeb0 ba64 	vmov.f32	s22, s9
 8015ee4:	eef0 aa45 	vmov.f32	s21, s10
 8015ee8:	930f      	str	r3, [sp, #60]	; 0x3c
 8015eea:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8015eec:	2b00      	cmp	r3, #0
 8015eee:	dc03      	bgt.n	8015ef8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6c>
 8015ef0:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8015ef2:	2b00      	cmp	r3, #0
 8015ef4:	f340 83a3 	ble.w	801663e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7b2>
 8015ef8:	9b06      	ldr	r3, [sp, #24]
 8015efa:	2b00      	cmp	r3, #0
 8015efc:	f340 81bc 	ble.w	8016278 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3ec>
 8015f00:	9a27      	ldr	r2, [sp, #156]	; 0x9c
 8015f02:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8015f04:	1412      	asrs	r2, r2, #16
 8015f06:	ea4f 4323 	mov.w	r3, r3, asr #16
 8015f0a:	d42f      	bmi.n	8015f6c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe0>
 8015f0c:	1c51      	adds	r1, r2, #1
 8015f0e:	428d      	cmp	r5, r1
 8015f10:	dd2f      	ble.n	8015f72 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe6>
 8015f12:	2b00      	cmp	r3, #0
 8015f14:	db2d      	blt.n	8015f72 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe6>
 8015f16:	9808      	ldr	r0, [sp, #32]
 8015f18:	1c59      	adds	r1, r3, #1
 8015f1a:	4288      	cmp	r0, r1
 8015f1c:	dd29      	ble.n	8015f72 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe6>
 8015f1e:	9b06      	ldr	r3, [sp, #24]
 8015f20:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8015f22:	9927      	ldr	r1, [sp, #156]	; 0x9c
 8015f24:	3b01      	subs	r3, #1
 8015f26:	fb02 1203 	mla	r2, r2, r3, r1
 8015f2a:	1412      	asrs	r2, r2, #16
 8015f2c:	d42b      	bmi.n	8015f86 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfa>
 8015f2e:	3201      	adds	r2, #1
 8015f30:	4295      	cmp	r5, r2
 8015f32:	dd28      	ble.n	8015f86 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfa>
 8015f34:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 8015f36:	9928      	ldr	r1, [sp, #160]	; 0xa0
 8015f38:	fb02 1303 	mla	r3, r2, r3, r1
 8015f3c:	141b      	asrs	r3, r3, #16
 8015f3e:	d422      	bmi.n	8015f86 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfa>
 8015f40:	9a08      	ldr	r2, [sp, #32]
 8015f42:	3301      	adds	r3, #1
 8015f44:	429a      	cmp	r2, r3
 8015f46:	dd1e      	ble.n	8015f86 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfa>
 8015f48:	9b06      	ldr	r3, [sp, #24]
 8015f4a:	f8dd e01c 	ldr.w	lr, [sp, #28]
 8015f4e:	9311      	str	r3, [sp, #68]	; 0x44
 8015f50:	f64f 061f 	movw	r6, #63519	; 0xf81f
 8015f54:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8015f56:	2b00      	cmp	r3, #0
 8015f58:	f300 8208 	bgt.w	801636c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4e0>
 8015f5c:	9b06      	ldr	r3, [sp, #24]
 8015f5e:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8015f62:	9b07      	ldr	r3, [sp, #28]
 8015f64:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 8015f68:	9307      	str	r3, [sp, #28]
 8015f6a:	e187      	b.n	801627c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3f0>
 8015f6c:	1c57      	adds	r7, r2, #1
 8015f6e:	f040 8174 	bne.w	801625a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3ce>
 8015f72:	42aa      	cmp	r2, r5
 8015f74:	f280 8171 	bge.w	801625a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3ce>
 8015f78:	1c5e      	adds	r6, r3, #1
 8015f7a:	f2c0 816e 	blt.w	801625a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3ce>
 8015f7e:	9a08      	ldr	r2, [sp, #32]
 8015f80:	4293      	cmp	r3, r2
 8015f82:	f280 816a 	bge.w	801625a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3ce>
 8015f86:	9b06      	ldr	r3, [sp, #24]
 8015f88:	9f07      	ldr	r7, [sp, #28]
 8015f8a:	9311      	str	r3, [sp, #68]	; 0x44
 8015f8c:	f64f 061f 	movw	r6, #63519	; 0xf81f
 8015f90:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8015f92:	2b00      	cmp	r3, #0
 8015f94:	dde2      	ble.n	8015f5c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xd0>
 8015f96:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8015f98:	1419      	asrs	r1, r3, #16
 8015f9a:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8015f9c:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8015fa0:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8015fa2:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 8015fa6:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8015fa8:	141b      	asrs	r3, r3, #16
 8015faa:	f100 81c4 	bmi.w	8016336 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4aa>
 8015fae:	1c58      	adds	r0, r3, #1
 8015fb0:	4285      	cmp	r5, r0
 8015fb2:	f340 81c2 	ble.w	801633a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4ae>
 8015fb6:	2900      	cmp	r1, #0
 8015fb8:	f2c0 81bf 	blt.w	801633a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4ae>
 8015fbc:	9c08      	ldr	r4, [sp, #32]
 8015fbe:	1c48      	adds	r0, r1, #1
 8015fc0:	4284      	cmp	r4, r0
 8015fc2:	f340 81ba 	ble.w	801633a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4ae>
 8015fc6:	fb01 3105 	mla	r1, r1, r5, r3
 8015fca:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8015fcc:	fa1f fe82 	uxth.w	lr, r2
 8015fd0:	eb03 0a01 	add.w	sl, r3, r1
 8015fd4:	ea4f 100e 	mov.w	r0, lr, lsl #4
 8015fd8:	f813 9001 	ldrb.w	r9, [r3, r1]
 8015fdc:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8015fe0:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 8015fe4:	b29b      	uxth	r3, r3
 8015fe6:	f1bc 0f00 	cmp.w	ip, #0
 8015fea:	f000 8186 	beq.w	80162fa <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x46e>
 8015fee:	f81a 4005 	ldrb.w	r4, [sl, r5]
 8015ff2:	940b      	str	r4, [sp, #44]	; 0x2c
 8015ff4:	eb0a 0b05 	add.w	fp, sl, r5
 8015ff8:	fa1f fa8c 	uxth.w	sl, ip
 8015ffc:	fb0a fe0e 	mul.w	lr, sl, lr
 8016000:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 8016004:	fa1f fa8a 	uxth.w	sl, sl
 8016008:	eba0 000e 	sub.w	r0, r0, lr
 801600c:	eba3 030a 	sub.w	r3, r3, sl
 8016010:	b280      	uxth	r0, r0
 8016012:	fb08 f000 	mul.w	r0, r8, r0
 8016016:	b29b      	uxth	r3, r3
 8016018:	fb09 0303 	mla	r3, r9, r3, r0
 801601c:	980b      	ldr	r0, [sp, #44]	; 0x2c
 801601e:	f89b 4001 	ldrb.w	r4, [fp, #1]
 8016022:	940c      	str	r4, [sp, #48]	; 0x30
 8016024:	fb0a 3300 	mla	r3, sl, r0, r3
 8016028:	fb0e 3304 	mla	r3, lr, r4, r3
 801602c:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8016030:	2b00      	cmp	r3, #0
 8016032:	f000 8105 	beq.w	8016240 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3b4>
 8016036:	9809      	ldr	r0, [sp, #36]	; 0x24
 8016038:	9c09      	ldr	r4, [sp, #36]	; 0x24
 801603a:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801603e:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 8016042:	f834 1011 	ldrh.w	r1, [r4, r1, lsl #1]
 8016046:	f000 815d 	beq.w	8016304 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x478>
 801604a:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 801604e:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 8016052:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8016056:	fb09 f101 	mul.w	r1, r9, r1
 801605a:	fb0a fe0e 	mul.w	lr, sl, lr
 801605e:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 8016062:	f101 0b20 	add.w	fp, r1, #32
 8016066:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 801606a:	44ce      	add	lr, r9
 801606c:	eb0b 2911 	add.w	r9, fp, r1, lsr #8
 8016070:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8016074:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 8016078:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801607c:	ea4e 0909 	orr.w	r9, lr, r9
 8016080:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8016084:	8841      	ldrh	r1, [r0, #2]
 8016086:	d019      	beq.n	80160bc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x230>
 8016088:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 801608c:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 8016090:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8016094:	fb0a fe0e 	mul.w	lr, sl, lr
 8016098:	fb08 f801 	mul.w	r8, r8, r1
 801609c:	f108 0b20 	add.w	fp, r8, #32
 80160a0:	ea06 115e 	and.w	r1, r6, lr, lsr #5
 80160a4:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 80160a8:	448e      	add	lr, r1
 80160aa:	eb0b 2118 	add.w	r1, fp, r8, lsr #8
 80160ae:	0a09      	lsrs	r1, r1, #8
 80160b0:	ea06 1a5e 	and.w	sl, r6, lr, lsr #5
 80160b4:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80160b8:	ea4a 0101 	orr.w	r1, sl, r1
 80160bc:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 80160c0:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 80160c4:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 80160c8:	ea4e 0909 	orr.w	r9, lr, r9
 80160cc:	ea4f 4e01 	mov.w	lr, r1, lsl #16
 80160d0:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 80160d4:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 80160d8:	ea4e 0e01 	orr.w	lr, lr, r1
 80160dc:	f1bc 0f00 	cmp.w	ip, #0
 80160e0:	f000 8112 	beq.w	8016308 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x47c>
 80160e4:	990f      	ldr	r1, [sp, #60]	; 0x3c
 80160e6:	eb00 0801 	add.w	r8, r0, r1
 80160ea:	5a41      	ldrh	r1, [r0, r1]
 80160ec:	980b      	ldr	r0, [sp, #44]	; 0x2c
 80160ee:	28ff      	cmp	r0, #255	; 0xff
 80160f0:	d019      	beq.n	8016126 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x29a>
 80160f2:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 80160f4:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
 80160f8:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80160fc:	fb04 fb01 	mul.w	fp, r4, r1
 8016100:	ea4f 0ae4 	mov.w	sl, r4, asr #3
 8016104:	fb0a fa00 	mul.w	sl, sl, r0
 8016108:	f10b 0020 	add.w	r0, fp, #32
 801610c:	ea06 115a 	and.w	r1, r6, sl, lsr #5
 8016110:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 8016114:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 8016118:	4451      	add	r1, sl
 801611a:	0a00      	lsrs	r0, r0, #8
 801611c:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 8016120:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8016124:	4301      	orrs	r1, r0
 8016126:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8016128:	f8b8 0002 	ldrh.w	r0, [r8, #2]
 801612c:	2cff      	cmp	r4, #255	; 0xff
 801612e:	d01a      	beq.n	8016166 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2da>
 8016130:	f420 68fc 	bic.w	r8, r0, #2016	; 0x7e0
 8016134:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8016138:	fb04 fb00 	mul.w	fp, r4, r0
 801613c:	ea4f 0ae4 	mov.w	sl, r4, asr #3
 8016140:	fb0a fa08 	mul.w	sl, sl, r8
 8016144:	f10b 0820 	add.w	r8, fp, #32
 8016148:	ea06 105a 	and.w	r0, r6, sl, lsr #5
 801614c:	eb08 281b 	add.w	r8, r8, fp, lsr #8
 8016150:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 8016154:	4450      	add	r0, sl
 8016156:	ea4f 2818 	mov.w	r8, r8, lsr #8
 801615a:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 801615e:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 8016162:	ea40 0008 	orr.w	r0, r0, r8
 8016166:	fb1c f802 	smulbb	r8, ip, r2
 801616a:	ea4f 08e8 	mov.w	r8, r8, asr #3
 801616e:	f1cc 0a10 	rsb	sl, ip, #16
 8016172:	ebaa 0a02 	sub.w	sl, sl, r2
 8016176:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 801617a:	ebc8 0242 	rsb	r2, r8, r2, lsl #1
 801617e:	eb08 0a4a 	add.w	sl, r8, sl, lsl #1
 8016182:	fb0e f202 	mul.w	r2, lr, r2
 8016186:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801618a:	ea4f 4e00 	mov.w	lr, r0, lsl #16
 801618e:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8016192:	ebc8 0c4c 	rsb	ip, r8, ip, lsl #1
 8016196:	fb09 220a 	mla	r2, r9, sl, r2
 801619a:	ea4b 0101 	orr.w	r1, fp, r1
 801619e:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 80161a2:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 80161a6:	fb0c 2201 	mla	r2, ip, r1, r2
 80161aa:	ea4e 0000 	orr.w	r0, lr, r0
 80161ae:	fb08 2800 	mla	r8, r8, r0, r2
 80161b2:	ea4f 5258 	mov.w	r2, r8, lsr #21
 80161b6:	ea4f 1858 	mov.w	r8, r8, lsr #5
 80161ba:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80161be:	f428 68fc 	bic.w	r8, r8, #2016	; 0x7e0
 80161c2:	ea42 0808 	orr.w	r8, r2, r8
 80161c6:	fa1f f288 	uxth.w	r2, r8
 80161ca:	2bff      	cmp	r3, #255	; 0xff
 80161cc:	f000 80b1 	beq.w	8016332 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4a6>
 80161d0:	f8b7 8000 	ldrh.w	r8, [r7]
 80161d4:	43db      	mvns	r3, r3
 80161d6:	ea4f 2028 	mov.w	r0, r8, asr #8
 80161da:	fa5f fe83 	uxtb.w	lr, r3
 80161de:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 80161e2:	fb00 f00e 	mul.w	r0, r0, lr
 80161e6:	1c41      	adds	r1, r0, #1
 80161e8:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 80161ec:	1210      	asrs	r0, r2, #8
 80161ee:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 80161f2:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 80161f6:	eb00 2011 	add.w	r0, r0, r1, lsr #8
 80161fa:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 80161fe:	495a      	ldr	r1, [pc, #360]	; (8016368 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4dc>)
 8016200:	fb0c fc0e 	mul.w	ip, ip, lr
 8016204:	ea01 2000 	and.w	r0, r1, r0, lsl #8
 8016208:	f10c 0101 	add.w	r1, ip, #1
 801620c:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 8016210:	10d1      	asrs	r1, r2, #3
 8016212:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8016216:	ea4f 03c8 	mov.w	r3, r8, lsl #3
 801621a:	eb01 211c 	add.w	r1, r1, ip, lsr #8
 801621e:	b2db      	uxtb	r3, r3
 8016220:	00c9      	lsls	r1, r1, #3
 8016222:	fb03 f30e 	mul.w	r3, r3, lr
 8016226:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801622a:	4301      	orrs	r1, r0
 801622c:	1c58      	adds	r0, r3, #1
 801622e:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8016232:	00d3      	lsls	r3, r2, #3
 8016234:	b2db      	uxtb	r3, r3
 8016236:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 801623a:	ea41 03d3 	orr.w	r3, r1, r3, lsr #3
 801623e:	803b      	strh	r3, [r7, #0]
 8016240:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8016242:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8016244:	4413      	add	r3, r2
 8016246:	9327      	str	r3, [sp, #156]	; 0x9c
 8016248:	9a28      	ldr	r2, [sp, #160]	; 0xa0
 801624a:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801624c:	441a      	add	r2, r3
 801624e:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8016250:	9228      	str	r2, [sp, #160]	; 0xa0
 8016252:	3b01      	subs	r3, #1
 8016254:	3702      	adds	r7, #2
 8016256:	9311      	str	r3, [sp, #68]	; 0x44
 8016258:	e69a      	b.n	8015f90 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x104>
 801625a:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801625c:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 801625e:	4413      	add	r3, r2
 8016260:	9327      	str	r3, [sp, #156]	; 0x9c
 8016262:	9a28      	ldr	r2, [sp, #160]	; 0xa0
 8016264:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8016266:	441a      	add	r2, r3
 8016268:	9b06      	ldr	r3, [sp, #24]
 801626a:	9228      	str	r2, [sp, #160]	; 0xa0
 801626c:	3b01      	subs	r3, #1
 801626e:	9306      	str	r3, [sp, #24]
 8016270:	9b07      	ldr	r3, [sp, #28]
 8016272:	3302      	adds	r3, #2
 8016274:	9307      	str	r3, [sp, #28]
 8016276:	e63f      	b.n	8015ef8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6c>
 8016278:	f47f ae51 	bne.w	8015f1e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x92>
 801627c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801627e:	2b00      	cmp	r3, #0
 8016280:	f340 81dd 	ble.w	801663e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7b2>
 8016284:	ee3a aa2b 	vadd.f32	s20, s20, s23
 8016288:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801628c:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 8016290:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8016292:	ee79 9a8b 	vadd.f32	s19, s19, s22
 8016296:	ee39 9a2a 	vadd.f32	s18, s18, s21
 801629a:	ee29 7aa7 	vmul.f32	s14, s19, s15
 801629e:	eef0 6a48 	vmov.f32	s13, s16
 80162a2:	ee69 7a27 	vmul.f32	s15, s18, s15
 80162a6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80162aa:	ee37 8a48 	vsub.f32	s16, s14, s16
 80162ae:	edcd 6a27 	vstr	s13, [sp, #156]	; 0x9c
 80162b2:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 80162b6:	eef0 6a68 	vmov.f32	s13, s17
 80162ba:	ee77 8ae8 	vsub.f32	s17, s15, s17
 80162be:	ee18 2a10 	vmov	r2, s16
 80162c2:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 80162c6:	fb92 f3f3 	sdiv	r3, r2, r3
 80162ca:	ee18 2a90 	vmov	r2, s17
 80162ce:	9329      	str	r3, [sp, #164]	; 0xa4
 80162d0:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80162d2:	fb92 f3f3 	sdiv	r3, r2, r3
 80162d6:	932a      	str	r3, [sp, #168]	; 0xa8
 80162d8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80162da:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80162dc:	3b01      	subs	r3, #1
 80162de:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80162e2:	9310      	str	r3, [sp, #64]	; 0x40
 80162e4:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80162e6:	edcd 6a28 	vstr	s13, [sp, #160]	; 0xa0
 80162ea:	bf08      	it	eq
 80162ec:	4613      	moveq	r3, r2
 80162ee:	9306      	str	r3, [sp, #24]
 80162f0:	eef0 8a67 	vmov.f32	s17, s15
 80162f4:	eeb0 8a47 	vmov.f32	s16, s14
 80162f8:	e5f7      	b.n	8015eea <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x5e>
 80162fa:	fb08 f000 	mul.w	r0, r8, r0
 80162fe:	fb09 0303 	mla	r3, r9, r3, r0
 8016302:	e693      	b.n	801602c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1a0>
 8016304:	4689      	mov	r9, r1
 8016306:	e6bb      	b.n	8016080 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1f4>
 8016308:	f1c2 0010 	rsb	r0, r2, #16
 801630c:	fb0e f202 	mul.w	r2, lr, r2
 8016310:	fb09 2900 	mla	r9, r9, r0, r2
 8016314:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8016318:	ea4f 5259 	mov.w	r2, r9, lsr #21
 801631c:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8016320:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8016324:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8016328:	ea42 0909 	orr.w	r9, r2, r9
 801632c:	fa1f f289 	uxth.w	r2, r9
 8016330:	e74b      	b.n	80161ca <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x33e>
 8016332:	803a      	strh	r2, [r7, #0]
 8016334:	e784      	b.n	8016240 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3b4>
 8016336:	1c5c      	adds	r4, r3, #1
 8016338:	d182      	bne.n	8016240 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3b4>
 801633a:	429d      	cmp	r5, r3
 801633c:	dd80      	ble.n	8016240 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3b4>
 801633e:	1c48      	adds	r0, r1, #1
 8016340:	f6ff af7e 	blt.w	8016240 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3b4>
 8016344:	9808      	ldr	r0, [sp, #32]
 8016346:	4288      	cmp	r0, r1
 8016348:	f77f af7a 	ble.w	8016240 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3b4>
 801634c:	e9cd 3102 	strd	r3, r1, [sp, #8]
 8016350:	e9cd 2c04 	strd	r2, ip, [sp, #16]
 8016354:	e9cd 5000 	strd	r5, r0, [sp]
 8016358:	e9dd 3209 	ldrd	r3, r2, [sp, #36]	; 0x24
 801635c:	4639      	mov	r1, r7
 801635e:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8016360:	f7ff fbf2 	bl	8015b48 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 8016364:	e76c      	b.n	8016240 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3b4>
 8016366:	bf00      	nop
 8016368:	fffff800 	.word	0xfffff800
 801636c:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801636e:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8016372:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8016374:	141f      	asrs	r7, r3, #16
 8016376:	f3c3 3003 	ubfx	r0, r3, #12, #4
 801637a:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801637c:	141b      	asrs	r3, r3, #16
 801637e:	fb05 3707 	mla	r7, r5, r7, r3
 8016382:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8016384:	fa1f fc82 	uxth.w	ip, r2
 8016388:	eb03 0a07 	add.w	sl, r3, r7
 801638c:	ea4f 110c 	mov.w	r1, ip, lsl #4
 8016390:	f813 9007 	ldrb.w	r9, [r3, r7]
 8016394:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8016398:	f5c1 7380 	rsb	r3, r1, #256	; 0x100
 801639c:	b29b      	uxth	r3, r3
 801639e:	2800      	cmp	r0, #0
 80163a0:	f000 8132 	beq.w	8016608 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x77c>
 80163a4:	f81a 4005 	ldrb.w	r4, [sl, r5]
 80163a8:	940d      	str	r4, [sp, #52]	; 0x34
 80163aa:	eb0a 0b05 	add.w	fp, sl, r5
 80163ae:	fa1f fa80 	uxth.w	sl, r0
 80163b2:	fb0a fc0c 	mul.w	ip, sl, ip
 80163b6:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 80163ba:	fa1f fa8a 	uxth.w	sl, sl
 80163be:	eba1 010c 	sub.w	r1, r1, ip
 80163c2:	eba3 030a 	sub.w	r3, r3, sl
 80163c6:	b289      	uxth	r1, r1
 80163c8:	fb08 f101 	mul.w	r1, r8, r1
 80163cc:	b29b      	uxth	r3, r3
 80163ce:	fb09 1303 	mla	r3, r9, r3, r1
 80163d2:	990d      	ldr	r1, [sp, #52]	; 0x34
 80163d4:	f89b 4001 	ldrb.w	r4, [fp, #1]
 80163d8:	940e      	str	r4, [sp, #56]	; 0x38
 80163da:	fb0a 3301 	mla	r3, sl, r1, r3
 80163de:	fb0c 3304 	mla	r3, ip, r4, r3
 80163e2:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80163e6:	2b00      	cmp	r3, #0
 80163e8:	f000 8100 	beq.w	80165ec <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x760>
 80163ec:	9909      	ldr	r1, [sp, #36]	; 0x24
 80163ee:	9c09      	ldr	r4, [sp, #36]	; 0x24
 80163f0:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 80163f4:	eb01 0147 	add.w	r1, r1, r7, lsl #1
 80163f8:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 80163fc:	f000 8109 	beq.w	8016612 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x786>
 8016400:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 8016404:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 8016408:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801640c:	fb09 f707 	mul.w	r7, r9, r7
 8016410:	fb0a fc0c 	mul.w	ip, sl, ip
 8016414:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 8016418:	f107 0b20 	add.w	fp, r7, #32
 801641c:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 8016420:	44cc      	add	ip, r9
 8016422:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 8016426:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801642a:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 801642e:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8016432:	ea4c 0909 	orr.w	r9, ip, r9
 8016436:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 801643a:	884f      	ldrh	r7, [r1, #2]
 801643c:	d019      	beq.n	8016472 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x5e6>
 801643e:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 8016442:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 8016446:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801644a:	fb08 f807 	mul.w	r8, r8, r7
 801644e:	fb0a fc0c 	mul.w	ip, sl, ip
 8016452:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 8016456:	f108 0b20 	add.w	fp, r8, #32
 801645a:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 801645e:	44bc      	add	ip, r7
 8016460:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 8016464:	0a3f      	lsrs	r7, r7, #8
 8016466:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 801646a:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801646e:	ea4c 0707 	orr.w	r7, ip, r7
 8016472:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 8016476:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 801647a:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801647e:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8016482:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8016486:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 801648a:	ea4c 0909 	orr.w	r9, ip, r9
 801648e:	ea4a 0707 	orr.w	r7, sl, r7
 8016492:	2800      	cmp	r0, #0
 8016494:	f000 80bf 	beq.w	8016616 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x78a>
 8016498:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 801649a:	eb01 0c04 	add.w	ip, r1, r4
 801649e:	f831 8004 	ldrh.w	r8, [r1, r4]
 80164a2:	990d      	ldr	r1, [sp, #52]	; 0x34
 80164a4:	29ff      	cmp	r1, #255	; 0xff
 80164a6:	d01a      	beq.n	80164de <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x652>
 80164a8:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 80164aa:	f428 61fc 	bic.w	r1, r8, #2016	; 0x7e0
 80164ae:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 80164b2:	fb04 fb08 	mul.w	fp, r4, r8
 80164b6:	ea4f 0ae4 	mov.w	sl, r4, asr #3
 80164ba:	fb0a fa01 	mul.w	sl, sl, r1
 80164be:	f10b 0120 	add.w	r1, fp, #32
 80164c2:	ea06 185a 	and.w	r8, r6, sl, lsr #5
 80164c6:	eb01 211b 	add.w	r1, r1, fp, lsr #8
 80164ca:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 80164ce:	44d0      	add	r8, sl
 80164d0:	0a09      	lsrs	r1, r1, #8
 80164d2:	ea06 1858 	and.w	r8, r6, r8, lsr #5
 80164d6:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80164da:	ea48 0801 	orr.w	r8, r8, r1
 80164de:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 80164e0:	f8bc 1002 	ldrh.w	r1, [ip, #2]
 80164e4:	2cff      	cmp	r4, #255	; 0xff
 80164e6:	d01a      	beq.n	801651e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x692>
 80164e8:	f421 6cfc 	bic.w	ip, r1, #2016	; 0x7e0
 80164ec:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80164f0:	fb04 fb01 	mul.w	fp, r4, r1
 80164f4:	ea4f 0ae4 	mov.w	sl, r4, asr #3
 80164f8:	fb0a fa0c 	mul.w	sl, sl, ip
 80164fc:	f10b 0c20 	add.w	ip, fp, #32
 8016500:	ea06 115a 	and.w	r1, r6, sl, lsr #5
 8016504:	eb0c 2c1b 	add.w	ip, ip, fp, lsr #8
 8016508:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 801650c:	4451      	add	r1, sl
 801650e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8016512:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 8016516:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 801651a:	ea41 010c 	orr.w	r1, r1, ip
 801651e:	fb10 fc02 	smulbb	ip, r0, r2
 8016522:	ea4f 0cec 	mov.w	ip, ip, asr #3
 8016526:	f1c0 0a10 	rsb	sl, r0, #16
 801652a:	ebaa 0a02 	sub.w	sl, sl, r2
 801652e:	ea4f 4b08 	mov.w	fp, r8, lsl #16
 8016532:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 8016536:	437a      	muls	r2, r7
 8016538:	eb0c 0a4a 	add.w	sl, ip, sl, lsl #1
 801653c:	040f      	lsls	r7, r1, #16
 801653e:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8016542:	f428 68fc 	bic.w	r8, r8, #2016	; 0x7e0
 8016546:	fb09 220a 	mla	r2, r9, sl, r2
 801654a:	ea4b 0808 	orr.w	r8, fp, r8
 801654e:	ebcc 0040 	rsb	r0, ip, r0, lsl #1
 8016552:	f007 67fc 	and.w	r7, r7, #132120576	; 0x7e00000
 8016556:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801655a:	fb00 2208 	mla	r2, r0, r8, r2
 801655e:	4339      	orrs	r1, r7
 8016560:	fb0c 2201 	mla	r2, ip, r1, r2
 8016564:	ea4f 5952 	mov.w	r9, r2, lsr #21
 8016568:	0952      	lsrs	r2, r2, #5
 801656a:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801656e:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8016572:	ea49 0202 	orr.w	r2, r9, r2
 8016576:	2bff      	cmp	r3, #255	; 0xff
 8016578:	b292      	uxth	r2, r2
 801657a:	d05d      	beq.n	8016638 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7ac>
 801657c:	f8be 8000 	ldrh.w	r8, [lr]
 8016580:	4c31      	ldr	r4, [pc, #196]	; (8016648 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7bc>)
 8016582:	43db      	mvns	r3, r3
 8016584:	ea4f 2028 	mov.w	r0, r8, asr #8
 8016588:	fa5f fc83 	uxtb.w	ip, r3
 801658c:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8016590:	ea4f 07e8 	mov.w	r7, r8, asr #3
 8016594:	fb00 f00c 	mul.w	r0, r0, ip
 8016598:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801659c:	fb07 f10c 	mul.w	r1, r7, ip
 80165a0:	1c47      	adds	r7, r0, #1
 80165a2:	eb07 2010 	add.w	r0, r7, r0, lsr #8
 80165a6:	1217      	asrs	r7, r2, #8
 80165a8:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 80165ac:	eb07 2010 	add.w	r0, r7, r0, lsr #8
 80165b0:	1c4f      	adds	r7, r1, #1
 80165b2:	eb07 2711 	add.w	r7, r7, r1, lsr #8
 80165b6:	10d1      	asrs	r1, r2, #3
 80165b8:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 80165bc:	ea4f 03c8 	mov.w	r3, r8, lsl #3
 80165c0:	eb01 2117 	add.w	r1, r1, r7, lsr #8
 80165c4:	b2db      	uxtb	r3, r3
 80165c6:	00c9      	lsls	r1, r1, #3
 80165c8:	fb03 f30c 	mul.w	r3, r3, ip
 80165cc:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80165d0:	ea04 2000 	and.w	r0, r4, r0, lsl #8
 80165d4:	4308      	orrs	r0, r1
 80165d6:	00d2      	lsls	r2, r2, #3
 80165d8:	1c59      	adds	r1, r3, #1
 80165da:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 80165de:	b2d2      	uxtb	r2, r2
 80165e0:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 80165e4:	ea40 00d3 	orr.w	r0, r0, r3, lsr #3
 80165e8:	f8ae 0000 	strh.w	r0, [lr]
 80165ec:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 80165ee:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 80165f0:	4413      	add	r3, r2
 80165f2:	9327      	str	r3, [sp, #156]	; 0x9c
 80165f4:	9a28      	ldr	r2, [sp, #160]	; 0xa0
 80165f6:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80165f8:	441a      	add	r2, r3
 80165fa:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80165fc:	9228      	str	r2, [sp, #160]	; 0xa0
 80165fe:	3b01      	subs	r3, #1
 8016600:	f10e 0e02 	add.w	lr, lr, #2
 8016604:	9311      	str	r3, [sp, #68]	; 0x44
 8016606:	e4a5      	b.n	8015f54 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xc8>
 8016608:	fb08 f101 	mul.w	r1, r8, r1
 801660c:	fb09 1303 	mla	r3, r9, r3, r1
 8016610:	e6e7      	b.n	80163e2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x556>
 8016612:	46b9      	mov	r9, r7
 8016614:	e70f      	b.n	8016436 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x5aa>
 8016616:	f1c2 0110 	rsb	r1, r2, #16
 801661a:	437a      	muls	r2, r7
 801661c:	fb09 2901 	mla	r9, r9, r1, r2
 8016620:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8016624:	ea4f 5059 	mov.w	r0, r9, lsr #21
 8016628:	ea4f 1259 	mov.w	r2, r9, lsr #5
 801662c:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8016630:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8016634:	4302      	orrs	r2, r0
 8016636:	e79e      	b.n	8016576 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6ea>
 8016638:	f8ae 2000 	strh.w	r2, [lr]
 801663c:	e7d6      	b.n	80165ec <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x760>
 801663e:	b015      	add	sp, #84	; 0x54
 8016640:	ecbd 8b08 	vpop	{d8-d11}
 8016644:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016648:	fffff800 	.word	0xfffff800

0801664c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>:
 801664c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8016650:	e9dd 4c09 	ldrd	r4, ip, [sp, #36]	; 0x24
 8016654:	fb0c 4e03 	mla	lr, ip, r3, r4
 8016658:	f1bc 0f00 	cmp.w	ip, #0
 801665c:	f9bd a020 	ldrsh.w	sl, [sp, #32]
 8016660:	f89d 702c 	ldrb.w	r7, [sp, #44]	; 0x2c
 8016664:	f89d 6030 	ldrb.w	r6, [sp, #48]	; 0x30
 8016668:	f89d 5034 	ldrb.w	r5, [sp, #52]	; 0x34
 801666c:	8808      	ldrh	r0, [r1, #0]
 801666e:	eb02 084e 	add.w	r8, r2, lr, lsl #1
 8016672:	db2f      	blt.n	80166d4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x88>
 8016674:	45e2      	cmp	sl, ip
 8016676:	dd2d      	ble.n	80166d4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x88>
 8016678:	2c00      	cmp	r4, #0
 801667a:	db29      	blt.n	80166d0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x84>
 801667c:	42a3      	cmp	r3, r4
 801667e:	dd27      	ble.n	80166d0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x84>
 8016680:	f832 901e 	ldrh.w	r9, [r2, lr, lsl #1]
 8016684:	1c62      	adds	r2, r4, #1
 8016686:	d428      	bmi.n	80166da <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x8e>
 8016688:	4293      	cmp	r3, r2
 801668a:	dd26      	ble.n	80166da <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x8e>
 801668c:	b32f      	cbz	r7, 80166da <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x8e>
 801668e:	f8b8 e002 	ldrh.w	lr, [r8, #2]
 8016692:	f11c 0c01 	adds.w	ip, ip, #1
 8016696:	d424      	bmi.n	80166e2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x96>
 8016698:	45e2      	cmp	sl, ip
 801669a:	dd22      	ble.n	80166e2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x96>
 801669c:	2e00      	cmp	r6, #0
 801669e:	f000 809c 	beq.w	80167da <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18e>
 80166a2:	2c00      	cmp	r4, #0
 80166a4:	db1b      	blt.n	80166de <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x92>
 80166a6:	42a3      	cmp	r3, r4
 80166a8:	dd19      	ble.n	80166de <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x92>
 80166aa:	f838 c013 	ldrh.w	ip, [r8, r3, lsl #1]
 80166ae:	3401      	adds	r4, #1
 80166b0:	d41a      	bmi.n	80166e8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x9c>
 80166b2:	42a3      	cmp	r3, r4
 80166b4:	dd18      	ble.n	80166e8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x9c>
 80166b6:	b1cf      	cbz	r7, 80166ec <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0xa0>
 80166b8:	3301      	adds	r3, #1
 80166ba:	f838 3013 	ldrh.w	r3, [r8, r3, lsl #1]
 80166be:	2f0f      	cmp	r7, #15
 80166c0:	d915      	bls.n	80166ee <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0xa2>
 80166c2:	4b49      	ldr	r3, [pc, #292]	; (80167e8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x19c>)
 80166c4:	4a49      	ldr	r2, [pc, #292]	; (80167ec <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x1a0>)
 80166c6:	484a      	ldr	r0, [pc, #296]	; (80167f0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x1a4>)
 80166c8:	f240 11ef 	movw	r1, #495	; 0x1ef
 80166cc:	f002 ff56 	bl	801957c <__assert_func>
 80166d0:	4681      	mov	r9, r0
 80166d2:	e7d7      	b.n	8016684 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x38>
 80166d4:	4686      	mov	lr, r0
 80166d6:	4681      	mov	r9, r0
 80166d8:	e7db      	b.n	8016692 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x46>
 80166da:	4686      	mov	lr, r0
 80166dc:	e7d9      	b.n	8016692 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x46>
 80166de:	4684      	mov	ip, r0
 80166e0:	e7e5      	b.n	80166ae <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x62>
 80166e2:	4603      	mov	r3, r0
 80166e4:	4684      	mov	ip, r0
 80166e6:	e7ea      	b.n	80166be <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x72>
 80166e8:	4603      	mov	r3, r0
 80166ea:	e7e8      	b.n	80166be <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x72>
 80166ec:	4603      	mov	r3, r0
 80166ee:	2e0f      	cmp	r6, #15
 80166f0:	d8e7      	bhi.n	80166c2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x76>
 80166f2:	ea4f 4409 	mov.w	r4, r9, lsl #16
 80166f6:	fb17 f806 	smulbb	r8, r7, r6
 80166fa:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 80166fe:	ea4f 4a0e 	mov.w	sl, lr, lsl #16
 8016702:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8016706:	ea4f 08e8 	mov.w	r8, r8, asr #3
 801670a:	ea44 0909 	orr.w	r9, r4, r9
 801670e:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8016712:	f1c6 0410 	rsb	r4, r6, #16
 8016716:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801671a:	1be4      	subs	r4, r4, r7
 801671c:	041a      	lsls	r2, r3, #16
 801671e:	ebc8 0747 	rsb	r7, r8, r7, lsl #1
 8016722:	ea4a 0e0e 	orr.w	lr, sl, lr
 8016726:	fb07 fe0e 	mul.w	lr, r7, lr
 801672a:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801672e:	eb08 0444 	add.w	r4, r8, r4, lsl #1
 8016732:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8016736:	fb04 e409 	mla	r4, r4, r9, lr
 801673a:	4313      	orrs	r3, r2
 801673c:	ea4f 420c 	mov.w	r2, ip, lsl #16
 8016740:	fb08 4303 	mla	r3, r8, r3, r4
 8016744:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8016748:	f42c 64fc 	bic.w	r4, ip, #2016	; 0x7e0
 801674c:	4322      	orrs	r2, r4
 801674e:	ebc8 0646 	rsb	r6, r8, r6, lsl #1
 8016752:	fb06 3202 	mla	r2, r6, r2, r3
 8016756:	0d53      	lsrs	r3, r2, #21
 8016758:	0952      	lsrs	r2, r2, #5
 801675a:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801675e:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8016762:	431a      	orrs	r2, r3
 8016764:	b293      	uxth	r3, r2
 8016766:	b2af      	uxth	r7, r5
 8016768:	1202      	asrs	r2, r0, #8
 801676a:	43ed      	mvns	r5, r5
 801676c:	b2ed      	uxtb	r5, r5
 801676e:	ea4f 2c23 	mov.w	ip, r3, asr #8
 8016772:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8016776:	fb12 f205 	smulbb	r2, r2, r5
 801677a:	10c6      	asrs	r6, r0, #3
 801677c:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8016780:	fb0c 2c07 	mla	ip, ip, r7, r2
 8016784:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8016788:	10da      	asrs	r2, r3, #3
 801678a:	fb16 f605 	smulbb	r6, r6, r5
 801678e:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8016792:	fb02 6207 	mla	r2, r2, r7, r6
 8016796:	b296      	uxth	r6, r2
 8016798:	00c2      	lsls	r2, r0, #3
 801679a:	00dc      	lsls	r4, r3, #3
 801679c:	b2d2      	uxtb	r2, r2
 801679e:	b2e4      	uxtb	r4, r4
 80167a0:	fb12 f205 	smulbb	r2, r2, r5
 80167a4:	fb04 2207 	mla	r2, r4, r7, r2
 80167a8:	fa1f fc8c 	uxth.w	ip, ip
 80167ac:	b292      	uxth	r2, r2
 80167ae:	f10c 0301 	add.w	r3, ip, #1
 80167b2:	1c50      	adds	r0, r2, #1
 80167b4:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 80167b8:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 80167bc:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 80167c0:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 80167c4:	4313      	orrs	r3, r2
 80167c6:	1c72      	adds	r2, r6, #1
 80167c8:	eb02 2216 	add.w	r2, r2, r6, lsr #8
 80167cc:	0952      	lsrs	r2, r2, #5
 80167ce:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80167d2:	4313      	orrs	r3, r2
 80167d4:	800b      	strh	r3, [r1, #0]
 80167d6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80167da:	2f0f      	cmp	r7, #15
 80167dc:	f63f af71 	bhi.w	80166c2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x76>
 80167e0:	4603      	mov	r3, r0
 80167e2:	4684      	mov	ip, r0
 80167e4:	e785      	b.n	80166f2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0xa6>
 80167e6:	bf00      	nop
 80167e8:	0801d2ad 	.word	0x0801d2ad
 80167ec:	0801d8ae 	.word	0x0801d8ae
 80167f0:	0801d335 	.word	0x0801d335

080167f4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 80167f4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80167f8:	ed2d 8b08 	vpush	{d8-d11}
 80167fc:	b095      	sub	sp, #84	; 0x54
 80167fe:	e9dd 4627 	ldrd	r4, r6, [sp, #156]	; 0x9c
 8016802:	9306      	str	r3, [sp, #24]
 8016804:	f9bd 30bc 	ldrsh.w	r3, [sp, #188]	; 0xbc
 8016808:	9212      	str	r2, [sp, #72]	; 0x48
 801680a:	9307      	str	r3, [sp, #28]
 801680c:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 801680e:	f89d 30c4 	ldrb.w	r3, [sp, #196]	; 0xc4
 8016812:	930c      	str	r3, [sp, #48]	; 0x30
 8016814:	910b      	str	r1, [sp, #44]	; 0x2c
 8016816:	e9dd 132c 	ldrd	r1, r3, [sp, #176]	; 0xb0
 801681a:	9013      	str	r0, [sp, #76]	; 0x4c
 801681c:	6850      	ldr	r0, [r2, #4]
 801681e:	6812      	ldr	r2, [r2, #0]
 8016820:	f9bd 70b8 	ldrsh.w	r7, [sp, #184]	; 0xb8
 8016824:	fb00 1303 	mla	r3, r0, r3, r1
 8016828:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 801682c:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801682e:	681b      	ldr	r3, [r3, #0]
 8016830:	9309      	str	r3, [sp, #36]	; 0x24
 8016832:	007b      	lsls	r3, r7, #1
 8016834:	930a      	str	r3, [sp, #40]	; 0x28
 8016836:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8016838:	43db      	mvns	r3, r3
 801683a:	b2db      	uxtb	r3, r3
 801683c:	eeb0 aa40 	vmov.f32	s20, s0
 8016840:	eef0 9a60 	vmov.f32	s19, s1
 8016844:	eeb0 9a41 	vmov.f32	s18, s2
 8016848:	eeb0 8a62 	vmov.f32	s16, s5
 801684c:	eef0 8a43 	vmov.f32	s17, s6
 8016850:	eef0 ba44 	vmov.f32	s23, s8
 8016854:	eeb0 ba64 	vmov.f32	s22, s9
 8016858:	eef0 aa45 	vmov.f32	s21, s10
 801685c:	9308      	str	r3, [sp, #32]
 801685e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8016860:	2b00      	cmp	r3, #0
 8016862:	dc03      	bgt.n	801686c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x78>
 8016864:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8016866:	2b00      	cmp	r3, #0
 8016868:	f340 81f3 	ble.w	8016c52 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x45e>
 801686c:	9b06      	ldr	r3, [sp, #24]
 801686e:	2b00      	cmp	r3, #0
 8016870:	f340 80fa 	ble.w	8016a68 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x274>
 8016874:	1422      	asrs	r2, r4, #16
 8016876:	ea4f 4326 	mov.w	r3, r6, asr #16
 801687a:	d42b      	bmi.n	80168d4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe0>
 801687c:	1c51      	adds	r1, r2, #1
 801687e:	428f      	cmp	r7, r1
 8016880:	dd2b      	ble.n	80168da <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe6>
 8016882:	2b00      	cmp	r3, #0
 8016884:	db29      	blt.n	80168da <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe6>
 8016886:	9807      	ldr	r0, [sp, #28]
 8016888:	1c59      	adds	r1, r3, #1
 801688a:	4288      	cmp	r0, r1
 801688c:	dd25      	ble.n	80168da <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe6>
 801688e:	9b06      	ldr	r3, [sp, #24]
 8016890:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8016892:	3b01      	subs	r3, #1
 8016894:	fb02 4203 	mla	r2, r2, r3, r4
 8016898:	1412      	asrs	r2, r2, #16
 801689a:	d428      	bmi.n	80168ee <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfa>
 801689c:	3201      	adds	r2, #1
 801689e:	4297      	cmp	r7, r2
 80168a0:	dd25      	ble.n	80168ee <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfa>
 80168a2:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 80168a4:	fb02 6303 	mla	r3, r2, r3, r6
 80168a8:	141b      	asrs	r3, r3, #16
 80168aa:	d420      	bmi.n	80168ee <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfa>
 80168ac:	9a07      	ldr	r2, [sp, #28]
 80168ae:	3301      	adds	r3, #1
 80168b0:	429a      	cmp	r2, r3
 80168b2:	dd1c      	ble.n	80168ee <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfa>
 80168b4:	f8dd 8018 	ldr.w	r8, [sp, #24]
 80168b8:	f8bd a030 	ldrh.w	sl, [sp, #48]	; 0x30
 80168bc:	f8cd 9034 	str.w	r9, [sp, #52]	; 0x34
 80168c0:	f1b8 0f00 	cmp.w	r8, #0
 80168c4:	f300 8129 	bgt.w	8016b1a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x326>
 80168c8:	9b06      	ldr	r3, [sp, #24]
 80168ca:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 80168ce:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 80168d2:	e0cb      	b.n	8016a6c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x278>
 80168d4:	1c51      	adds	r1, r2, #1
 80168d6:	f040 80bd 	bne.w	8016a54 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x260>
 80168da:	42ba      	cmp	r2, r7
 80168dc:	f280 80ba 	bge.w	8016a54 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x260>
 80168e0:	1c5a      	adds	r2, r3, #1
 80168e2:	f2c0 80b7 	blt.w	8016a54 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x260>
 80168e6:	9a07      	ldr	r2, [sp, #28]
 80168e8:	4293      	cmp	r3, r2
 80168ea:	f280 80b3 	bge.w	8016a54 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x260>
 80168ee:	f8dd b018 	ldr.w	fp, [sp, #24]
 80168f2:	46c8      	mov	r8, r9
 80168f4:	f1bb 0f00 	cmp.w	fp, #0
 80168f8:	dde6      	ble.n	80168c8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xd4>
 80168fa:	1421      	asrs	r1, r4, #16
 80168fc:	ea4f 4226 	mov.w	r2, r6, asr #16
 8016900:	f3c4 3303 	ubfx	r3, r4, #12, #4
 8016904:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8016908:	f100 80ef 	bmi.w	8016aea <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2f6>
 801690c:	f101 0c01 	add.w	ip, r1, #1
 8016910:	4567      	cmp	r7, ip
 8016912:	f340 80ec 	ble.w	8016aee <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2fa>
 8016916:	2a00      	cmp	r2, #0
 8016918:	f2c0 80e9 	blt.w	8016aee <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2fa>
 801691c:	9d07      	ldr	r5, [sp, #28]
 801691e:	f102 0c01 	add.w	ip, r2, #1
 8016922:	4565      	cmp	r5, ip
 8016924:	f340 80e3 	ble.w	8016aee <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2fa>
 8016928:	fb02 1207 	mla	r2, r2, r7, r1
 801692c:	9909      	ldr	r1, [sp, #36]	; 0x24
 801692e:	eb01 0e42 	add.w	lr, r1, r2, lsl #1
 8016932:	f831 c012 	ldrh.w	ip, [r1, r2, lsl #1]
 8016936:	f8be 1002 	ldrh.w	r1, [lr, #2]
 801693a:	b138      	cbz	r0, 801694c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x158>
 801693c:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801693e:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 8016940:	4472      	add	r2, lr
 8016942:	f83e 5005 	ldrh.w	r5, [lr, r5]
 8016946:	8852      	ldrh	r2, [r2, #2]
 8016948:	950e      	str	r5, [sp, #56]	; 0x38
 801694a:	920f      	str	r2, [sp, #60]	; 0x3c
 801694c:	ea4f 4e0c 	mov.w	lr, ip, lsl #16
 8016950:	fb13 f200 	smulbb	r2, r3, r0
 8016954:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8016958:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 801695c:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8016960:	10d2      	asrs	r2, r2, #3
 8016962:	ea4e 0c0c 	orr.w	ip, lr, ip
 8016966:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801696a:	f1c0 0e10 	rsb	lr, r0, #16
 801696e:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8016972:	ebae 0e03 	sub.w	lr, lr, r3
 8016976:	ea4a 0101 	orr.w	r1, sl, r1
 801697a:	ebc2 0343 	rsb	r3, r2, r3, lsl #1
 801697e:	4359      	muls	r1, r3
 8016980:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8016982:	9d08      	ldr	r5, [sp, #32]
 8016984:	eb02 0e4e 	add.w	lr, r2, lr, lsl #1
 8016988:	fb0e 1e0c 	mla	lr, lr, ip, r1
 801698c:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8016990:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8016994:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8016998:	ea4c 0c03 	orr.w	ip, ip, r3
 801699c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801699e:	990e      	ldr	r1, [sp, #56]	; 0x38
 80169a0:	041b      	lsls	r3, r3, #16
 80169a2:	fb02 ec0c 	mla	ip, r2, ip, lr
 80169a6:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 80169aa:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 80169ae:	ea43 030e 	orr.w	r3, r3, lr
 80169b2:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 80169b6:	fb02 c203 	mla	r2, r2, r3, ip
 80169ba:	0d53      	lsrs	r3, r2, #21
 80169bc:	0952      	lsrs	r2, r2, #5
 80169be:	f8b8 c000 	ldrh.w	ip, [r8]
 80169c2:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80169c6:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80169ca:	431a      	orrs	r2, r3
 80169cc:	b292      	uxth	r2, r2
 80169ce:	ea4f 212c 	mov.w	r1, ip, asr #8
 80169d2:	f8bd 3030 	ldrh.w	r3, [sp, #48]	; 0x30
 80169d6:	1210      	asrs	r0, r2, #8
 80169d8:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 80169dc:	fb11 f105 	smulbb	r1, r1, r5
 80169e0:	ea4f 0eec 	mov.w	lr, ip, asr #3
 80169e4:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 80169e8:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 80169ec:	fb00 1003 	mla	r0, r0, r3, r1
 80169f0:	fa5f fc8c 	uxtb.w	ip, ip
 80169f4:	10d1      	asrs	r1, r2, #3
 80169f6:	00d2      	lsls	r2, r2, #3
 80169f8:	fb1c fc05 	smulbb	ip, ip, r5
 80169fc:	b2d2      	uxtb	r2, r2
 80169fe:	fb02 c203 	mla	r2, r2, r3, ip
 8016a02:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 8016a06:	b280      	uxth	r0, r0
 8016a08:	b292      	uxth	r2, r2
 8016a0a:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8016a0e:	fb1e fe05 	smulbb	lr, lr, r5
 8016a12:	fb01 e103 	mla	r1, r1, r3, lr
 8016a16:	f102 0c01 	add.w	ip, r2, #1
 8016a1a:	1c43      	adds	r3, r0, #1
 8016a1c:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8016a20:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 8016a24:	b289      	uxth	r1, r1
 8016a26:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8016a2a:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 8016a2e:	4313      	orrs	r3, r2
 8016a30:	1c4a      	adds	r2, r1, #1
 8016a32:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8016a36:	0949      	lsrs	r1, r1, #5
 8016a38:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8016a3c:	430b      	orrs	r3, r1
 8016a3e:	f8a8 3000 	strh.w	r3, [r8]
 8016a42:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8016a44:	441c      	add	r4, r3
 8016a46:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8016a48:	f108 0802 	add.w	r8, r8, #2
 8016a4c:	441e      	add	r6, r3
 8016a4e:	f10b 3bff 	add.w	fp, fp, #4294967295
 8016a52:	e74f      	b.n	80168f4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x100>
 8016a54:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8016a56:	441c      	add	r4, r3
 8016a58:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8016a5a:	441e      	add	r6, r3
 8016a5c:	9b06      	ldr	r3, [sp, #24]
 8016a5e:	3b01      	subs	r3, #1
 8016a60:	9306      	str	r3, [sp, #24]
 8016a62:	f109 0902 	add.w	r9, r9, #2
 8016a66:	e701      	b.n	801686c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x78>
 8016a68:	f47f af11 	bne.w	801688e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9a>
 8016a6c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8016a6e:	2b00      	cmp	r3, #0
 8016a70:	f340 80ef 	ble.w	8016c52 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x45e>
 8016a74:	ee3a aa2b 	vadd.f32	s20, s20, s23
 8016a78:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8016a7c:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 8016a80:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8016a82:	ee79 9a8b 	vadd.f32	s19, s19, s22
 8016a86:	ee39 9a2a 	vadd.f32	s18, s18, s21
 8016a8a:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8016a8e:	eef0 6a48 	vmov.f32	s13, s16
 8016a92:	ee69 7a27 	vmul.f32	s15, s18, s15
 8016a96:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8016a9a:	ee37 8a48 	vsub.f32	s16, s14, s16
 8016a9e:	ee16 4a90 	vmov	r4, s13
 8016aa2:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8016aa6:	eef0 6a68 	vmov.f32	s13, s17
 8016aaa:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8016aae:	ee18 2a10 	vmov	r2, s16
 8016ab2:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8016ab6:	fb92 f3f3 	sdiv	r3, r2, r3
 8016aba:	ee18 2a90 	vmov	r2, s17
 8016abe:	9329      	str	r3, [sp, #164]	; 0xa4
 8016ac0:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8016ac2:	fb92 f3f3 	sdiv	r3, r2, r3
 8016ac6:	932a      	str	r3, [sp, #168]	; 0xa8
 8016ac8:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8016aca:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8016acc:	3b01      	subs	r3, #1
 8016ace:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8016ad2:	930b      	str	r3, [sp, #44]	; 0x2c
 8016ad4:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8016ad6:	bf08      	it	eq
 8016ad8:	4613      	moveq	r3, r2
 8016ada:	ee16 6a90 	vmov	r6, s13
 8016ade:	9306      	str	r3, [sp, #24]
 8016ae0:	eef0 8a67 	vmov.f32	s17, s15
 8016ae4:	eeb0 8a47 	vmov.f32	s16, s14
 8016ae8:	e6b9      	b.n	801685e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6a>
 8016aea:	1c4d      	adds	r5, r1, #1
 8016aec:	d1a9      	bne.n	8016a42 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x24e>
 8016aee:	428f      	cmp	r7, r1
 8016af0:	dda7      	ble.n	8016a42 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x24e>
 8016af2:	1c55      	adds	r5, r2, #1
 8016af4:	dba5      	blt.n	8016a42 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x24e>
 8016af6:	9d07      	ldr	r5, [sp, #28]
 8016af8:	4295      	cmp	r5, r2
 8016afa:	dda2      	ble.n	8016a42 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x24e>
 8016afc:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8016afe:	9101      	str	r1, [sp, #4]
 8016b00:	e9cd 2302 	strd	r2, r3, [sp, #8]
 8016b04:	9b07      	ldr	r3, [sp, #28]
 8016b06:	9300      	str	r3, [sp, #0]
 8016b08:	e9cd 0504 	strd	r0, r5, [sp, #16]
 8016b0c:	463b      	mov	r3, r7
 8016b0e:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8016b10:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8016b12:	4641      	mov	r1, r8
 8016b14:	f7ff fd9a 	bl	801664c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>
 8016b18:	e793      	b.n	8016a42 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x24e>
 8016b1a:	1422      	asrs	r2, r4, #16
 8016b1c:	1431      	asrs	r1, r6, #16
 8016b1e:	fb07 2101 	mla	r1, r7, r1, r2
 8016b22:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8016b24:	9809      	ldr	r0, [sp, #36]	; 0x24
 8016b26:	eb02 0241 	add.w	r2, r2, r1, lsl #1
 8016b2a:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 8016b2e:	f830 c011 	ldrh.w	ip, [r0, r1, lsl #1]
 8016b32:	8851      	ldrh	r1, [r2, #2]
 8016b34:	f3c4 3303 	ubfx	r3, r4, #12, #4
 8016b38:	f1be 0f00 	cmp.w	lr, #0
 8016b3c:	d006      	beq.n	8016b4c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x358>
 8016b3e:	980a      	ldr	r0, [sp, #40]	; 0x28
 8016b40:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 8016b42:	1810      	adds	r0, r2, r0
 8016b44:	5b52      	ldrh	r2, [r2, r5]
 8016b46:	9210      	str	r2, [sp, #64]	; 0x40
 8016b48:	8842      	ldrh	r2, [r0, #2]
 8016b4a:	9211      	str	r2, [sp, #68]	; 0x44
 8016b4c:	ea4f 400c 	mov.w	r0, ip, lsl #16
 8016b50:	fb13 f20e 	smulbb	r2, r3, lr
 8016b54:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8016b58:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8016b5c:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8016b60:	10d2      	asrs	r2, r2, #3
 8016b62:	ea40 000c 	orr.w	r0, r0, ip
 8016b66:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8016b6a:	f1ce 0c10 	rsb	ip, lr, #16
 8016b6e:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8016b72:	ebac 0c03 	sub.w	ip, ip, r3
 8016b76:	ea4b 0101 	orr.w	r1, fp, r1
 8016b7a:	ebc2 0343 	rsb	r3, r2, r3, lsl #1
 8016b7e:	4359      	muls	r1, r3
 8016b80:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8016b82:	9d08      	ldr	r5, [sp, #32]
 8016b84:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 8016b88:	fb0c 1c00 	mla	ip, ip, r0, r1
 8016b8c:	ea4f 4b03 	mov.w	fp, r3, lsl #16
 8016b90:	f423 60fc 	bic.w	r0, r3, #2016	; 0x7e0
 8016b94:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8016b96:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8016b9a:	ea4b 0000 	orr.w	r0, fp, r0
 8016b9e:	ea4f 4b03 	mov.w	fp, r3, lsl #16
 8016ba2:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8016ba6:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8016baa:	fb02 c000 	mla	r0, r2, r0, ip
 8016bae:	ea4b 0b03 	orr.w	fp, fp, r3
 8016bb2:	ebc2 024e 	rsb	r2, r2, lr, lsl #1
 8016bb6:	fb02 0b0b 	mla	fp, r2, fp, r0
 8016bba:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8016bbc:	ea4f 515b 	mov.w	r1, fp, lsr #21
 8016bc0:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 8016bc4:	8812      	ldrh	r2, [r2, #0]
 8016bc6:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8016bca:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 8016bce:	ea41 0b0b 	orr.w	fp, r1, fp
 8016bd2:	fa1f f38b 	uxth.w	r3, fp
 8016bd6:	1211      	asrs	r1, r2, #8
 8016bd8:	1218      	asrs	r0, r3, #8
 8016bda:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8016bde:	fb11 f105 	smulbb	r1, r1, r5
 8016be2:	ea4f 0ce2 	mov.w	ip, r2, asr #3
 8016be6:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8016bea:	00d2      	lsls	r2, r2, #3
 8016bec:	fb00 100a 	mla	r0, r0, sl, r1
 8016bf0:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 8016bf4:	10d9      	asrs	r1, r3, #3
 8016bf6:	b2d2      	uxtb	r2, r2
 8016bf8:	00db      	lsls	r3, r3, #3
 8016bfa:	fb1c fc05 	smulbb	ip, ip, r5
 8016bfe:	fb12 f205 	smulbb	r2, r2, r5
 8016c02:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8016c06:	b2db      	uxtb	r3, r3
 8016c08:	b280      	uxth	r0, r0
 8016c0a:	fb01 c10a 	mla	r1, r1, sl, ip
 8016c0e:	fb03 230a 	mla	r3, r3, sl, r2
 8016c12:	b29b      	uxth	r3, r3
 8016c14:	b289      	uxth	r1, r1
 8016c16:	1c42      	adds	r2, r0, #1
 8016c18:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8016c1c:	f101 0c01 	add.w	ip, r1, #1
 8016c20:	1c5a      	adds	r2, r3, #1
 8016c22:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8016c26:	eb0c 2111 	add.w	r1, ip, r1, lsr #8
 8016c2a:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 8016c2e:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8016c32:	0949      	lsrs	r1, r1, #5
 8016c34:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8016c36:	4310      	orrs	r0, r2
 8016c38:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8016c3c:	4308      	orrs	r0, r1
 8016c3e:	f823 0b02 	strh.w	r0, [r3], #2
 8016c42:	930d      	str	r3, [sp, #52]	; 0x34
 8016c44:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8016c46:	441c      	add	r4, r3
 8016c48:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8016c4a:	f108 38ff 	add.w	r8, r8, #4294967295
 8016c4e:	441e      	add	r6, r3
 8016c50:	e636      	b.n	80168c0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xcc>
 8016c52:	b015      	add	sp, #84	; 0x54
 8016c54:	ecbd 8b08 	vpop	{d8-d11}
 8016c58:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08016c5c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>:
 8016c5c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8016c60:	e9dd 5607 	ldrd	r5, r6, [sp, #28]
 8016c64:	fb06 5c03 	mla	ip, r6, r3, r5
 8016c68:	2e00      	cmp	r6, #0
 8016c6a:	f9bd 8018 	ldrsh.w	r8, [sp, #24]
 8016c6e:	f89d 4024 	ldrb.w	r4, [sp, #36]	; 0x24
 8016c72:	f89d 7028 	ldrb.w	r7, [sp, #40]	; 0x28
 8016c76:	8808      	ldrh	r0, [r1, #0]
 8016c78:	eb02 0e4c 	add.w	lr, r2, ip, lsl #1
 8016c7c:	db2e      	blt.n	8016cdc <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x80>
 8016c7e:	45b0      	cmp	r8, r6
 8016c80:	dd2c      	ble.n	8016cdc <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x80>
 8016c82:	2d00      	cmp	r5, #0
 8016c84:	db28      	blt.n	8016cd8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x7c>
 8016c86:	42ab      	cmp	r3, r5
 8016c88:	dd26      	ble.n	8016cd8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x7c>
 8016c8a:	f832 c01c 	ldrh.w	ip, [r2, ip, lsl #1]
 8016c8e:	1c6a      	adds	r2, r5, #1
 8016c90:	d427      	bmi.n	8016ce2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x86>
 8016c92:	4293      	cmp	r3, r2
 8016c94:	dd25      	ble.n	8016ce2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x86>
 8016c96:	b324      	cbz	r4, 8016ce2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x86>
 8016c98:	f8be 2002 	ldrh.w	r2, [lr, #2]
 8016c9c:	3601      	adds	r6, #1
 8016c9e:	d424      	bmi.n	8016cea <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x8e>
 8016ca0:	45b0      	cmp	r8, r6
 8016ca2:	dd22      	ble.n	8016cea <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x8e>
 8016ca4:	b31f      	cbz	r7, 8016cee <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x92>
 8016ca6:	2d00      	cmp	r5, #0
 8016ca8:	db1d      	blt.n	8016ce6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x8a>
 8016caa:	42ab      	cmp	r3, r5
 8016cac:	dd1b      	ble.n	8016ce6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x8a>
 8016cae:	f83e 6013 	ldrh.w	r6, [lr, r3, lsl #1]
 8016cb2:	3501      	adds	r5, #1
 8016cb4:	d405      	bmi.n	8016cc2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x66>
 8016cb6:	42ab      	cmp	r3, r5
 8016cb8:	dd03      	ble.n	8016cc2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x66>
 8016cba:	b124      	cbz	r4, 8016cc6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6a>
 8016cbc:	3301      	adds	r3, #1
 8016cbe:	f83e 0013 	ldrh.w	r0, [lr, r3, lsl #1]
 8016cc2:	2c0f      	cmp	r4, #15
 8016cc4:	d801      	bhi.n	8016cca <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 8016cc6:	2f0f      	cmp	r7, #15
 8016cc8:	d914      	bls.n	8016cf4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x98>
 8016cca:	4b27      	ldr	r3, [pc, #156]	; (8016d68 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x10c>)
 8016ccc:	4a27      	ldr	r2, [pc, #156]	; (8016d6c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x110>)
 8016cce:	4828      	ldr	r0, [pc, #160]	; (8016d70 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x114>)
 8016cd0:	f240 11ef 	movw	r1, #495	; 0x1ef
 8016cd4:	f002 fc52 	bl	801957c <__assert_func>
 8016cd8:	4684      	mov	ip, r0
 8016cda:	e7d8      	b.n	8016c8e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x32>
 8016cdc:	4602      	mov	r2, r0
 8016cde:	4684      	mov	ip, r0
 8016ce0:	e7dc      	b.n	8016c9c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x40>
 8016ce2:	4602      	mov	r2, r0
 8016ce4:	e7da      	b.n	8016c9c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x40>
 8016ce6:	4606      	mov	r6, r0
 8016ce8:	e7e3      	b.n	8016cb2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x56>
 8016cea:	4606      	mov	r6, r0
 8016cec:	e7e9      	b.n	8016cc2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x66>
 8016cee:	2c0f      	cmp	r4, #15
 8016cf0:	d8eb      	bhi.n	8016cca <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 8016cf2:	4606      	mov	r6, r0
 8016cf4:	ea4f 450c 	mov.w	r5, ip, lsl #16
 8016cf8:	fb14 f307 	smulbb	r3, r4, r7
 8016cfc:	f005 65fc 	and.w	r5, r5, #132120576	; 0x7e00000
 8016d00:	ea4f 4e02 	mov.w	lr, r2, lsl #16
 8016d04:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8016d08:	10db      	asrs	r3, r3, #3
 8016d0a:	ea45 0c0c 	orr.w	ip, r5, ip
 8016d0e:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8016d12:	f1c7 0510 	rsb	r5, r7, #16
 8016d16:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8016d1a:	1b2d      	subs	r5, r5, r4
 8016d1c:	ea4e 0202 	orr.w	r2, lr, r2
 8016d20:	ebc3 0444 	rsb	r4, r3, r4, lsl #1
 8016d24:	eb03 0545 	add.w	r5, r3, r5, lsl #1
 8016d28:	4354      	muls	r4, r2
 8016d2a:	fb05 450c 	mla	r5, r5, ip, r4
 8016d2e:	0404      	lsls	r4, r0, #16
 8016d30:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8016d34:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8016d38:	4320      	orrs	r0, r4
 8016d3a:	fb03 5400 	mla	r4, r3, r0, r5
 8016d3e:	0430      	lsls	r0, r6, #16
 8016d40:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8016d44:	f426 66fc 	bic.w	r6, r6, #2016	; 0x7e0
 8016d48:	ebc3 0747 	rsb	r7, r3, r7, lsl #1
 8016d4c:	4330      	orrs	r0, r6
 8016d4e:	fb07 4000 	mla	r0, r7, r0, r4
 8016d52:	0d43      	lsrs	r3, r0, #21
 8016d54:	0940      	lsrs	r0, r0, #5
 8016d56:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8016d5a:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8016d5e:	4318      	orrs	r0, r3
 8016d60:	8008      	strh	r0, [r1, #0]
 8016d62:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8016d66:	bf00      	nop
 8016d68:	0801d2ad 	.word	0x0801d2ad
 8016d6c:	0801d8ae 	.word	0x0801d8ae
 8016d70:	0801d335 	.word	0x0801d335

08016d74 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 8016d74:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016d78:	ed2d 8b0a 	vpush	{d8-d12}
 8016d7c:	b093      	sub	sp, #76	; 0x4c
 8016d7e:	461d      	mov	r5, r3
 8016d80:	9210      	str	r2, [sp, #64]	; 0x40
 8016d82:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8016d84:	f9bd 20bc 	ldrsh.w	r2, [sp, #188]	; 0xbc
 8016d88:	9208      	str	r2, [sp, #32]
 8016d8a:	e9dd 272c 	ldrd	r2, r7, [sp, #176]	; 0xb0
 8016d8e:	910b      	str	r1, [sp, #44]	; 0x2c
 8016d90:	6859      	ldr	r1, [r3, #4]
 8016d92:	681b      	ldr	r3, [r3, #0]
 8016d94:	f9bd 80b8 	ldrsh.w	r8, [sp, #184]	; 0xb8
 8016d98:	9011      	str	r0, [sp, #68]	; 0x44
 8016d9a:	fb01 2707 	mla	r7, r1, r7, r2
 8016d9e:	eb03 0347 	add.w	r3, r3, r7, lsl #1
 8016da2:	9307      	str	r3, [sp, #28]
 8016da4:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8016da6:	e9dd 4627 	ldrd	r4, r6, [sp, #156]	; 0x9c
 8016daa:	681b      	ldr	r3, [r3, #0]
 8016dac:	9309      	str	r3, [sp, #36]	; 0x24
 8016dae:	ea4f 0348 	mov.w	r3, r8, lsl #1
 8016db2:	eeb0 aa40 	vmov.f32	s20, s0
 8016db6:	eef0 9a60 	vmov.f32	s19, s1
 8016dba:	eeb0 9a41 	vmov.f32	s18, s2
 8016dbe:	eeb0 8a62 	vmov.f32	s16, s5
 8016dc2:	eef0 8a43 	vmov.f32	s17, s6
 8016dc6:	eeb0 ca44 	vmov.f32	s24, s8
 8016dca:	eef0 ba64 	vmov.f32	s23, s9
 8016dce:	eeb0 ba45 	vmov.f32	s22, s10
 8016dd2:	930a      	str	r3, [sp, #40]	; 0x28
 8016dd4:	eef7 aa00 	vmov.f32	s21, #112	; 0x3f800000  1.0
 8016dd8:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8016dda:	2b00      	cmp	r3, #0
 8016ddc:	dc03      	bgt.n	8016de6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x72>
 8016dde:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8016de0:	2b00      	cmp	r3, #0
 8016de2:	f340 816c 	ble.w	80170be <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x34a>
 8016de6:	2d00      	cmp	r5, #0
 8016de8:	f340 80b6 	ble.w	8016f58 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1e4>
 8016dec:	1422      	asrs	r2, r4, #16
 8016dee:	ea4f 4326 	mov.w	r3, r6, asr #16
 8016df2:	d428      	bmi.n	8016e46 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xd2>
 8016df4:	1c51      	adds	r1, r2, #1
 8016df6:	4588      	cmp	r8, r1
 8016df8:	dd27      	ble.n	8016e4a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xd6>
 8016dfa:	2b00      	cmp	r3, #0
 8016dfc:	db25      	blt.n	8016e4a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xd6>
 8016dfe:	9808      	ldr	r0, [sp, #32]
 8016e00:	1c59      	adds	r1, r3, #1
 8016e02:	4288      	cmp	r0, r1
 8016e04:	dd21      	ble.n	8016e4a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xd6>
 8016e06:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8016e08:	1e6b      	subs	r3, r5, #1
 8016e0a:	fb02 4203 	mla	r2, r2, r3, r4
 8016e0e:	1412      	asrs	r2, r2, #16
 8016e10:	d422      	bmi.n	8016e58 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe4>
 8016e12:	3201      	adds	r2, #1
 8016e14:	4590      	cmp	r8, r2
 8016e16:	dd1f      	ble.n	8016e58 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe4>
 8016e18:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 8016e1a:	fb02 6303 	mla	r3, r2, r3, r6
 8016e1e:	141b      	asrs	r3, r3, #16
 8016e20:	d41a      	bmi.n	8016e58 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe4>
 8016e22:	9a08      	ldr	r2, [sp, #32]
 8016e24:	3301      	adds	r3, #1
 8016e26:	429a      	cmp	r2, r3
 8016e28:	dd16      	ble.n	8016e58 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe4>
 8016e2a:	f8dd b01c 	ldr.w	fp, [sp, #28]
 8016e2e:	46a9      	mov	r9, r5
 8016e30:	f1b9 0f00 	cmp.w	r9, #0
 8016e34:	f300 80e4 	bgt.w	8017000 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x28c>
 8016e38:	9b07      	ldr	r3, [sp, #28]
 8016e3a:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8016e3e:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 8016e42:	9307      	str	r3, [sp, #28]
 8016e44:	e08a      	b.n	8016f5c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1e8>
 8016e46:	1c51      	adds	r1, r2, #1
 8016e48:	d17d      	bne.n	8016f46 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d2>
 8016e4a:	4542      	cmp	r2, r8
 8016e4c:	da7b      	bge.n	8016f46 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d2>
 8016e4e:	1c5a      	adds	r2, r3, #1
 8016e50:	db79      	blt.n	8016f46 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d2>
 8016e52:	9a08      	ldr	r2, [sp, #32]
 8016e54:	4293      	cmp	r3, r2
 8016e56:	da76      	bge.n	8016f46 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d2>
 8016e58:	f8dd 901c 	ldr.w	r9, [sp, #28]
 8016e5c:	46aa      	mov	sl, r5
 8016e5e:	f1ba 0f00 	cmp.w	sl, #0
 8016e62:	dde9      	ble.n	8016e38 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xc4>
 8016e64:	1421      	asrs	r1, r4, #16
 8016e66:	ea4f 4226 	mov.w	r2, r6, asr #16
 8016e6a:	f3c4 3303 	ubfx	r3, r4, #12, #4
 8016e6e:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8016e72:	f100 80b0 	bmi.w	8016fd6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x262>
 8016e76:	f101 0c01 	add.w	ip, r1, #1
 8016e7a:	45e0      	cmp	r8, ip
 8016e7c:	f340 80ad 	ble.w	8016fda <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x266>
 8016e80:	2a00      	cmp	r2, #0
 8016e82:	f2c0 80aa 	blt.w	8016fda <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x266>
 8016e86:	9f08      	ldr	r7, [sp, #32]
 8016e88:	f102 0c01 	add.w	ip, r2, #1
 8016e8c:	4567      	cmp	r7, ip
 8016e8e:	f340 80a4 	ble.w	8016fda <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x266>
 8016e92:	fb02 1208 	mla	r2, r2, r8, r1
 8016e96:	9909      	ldr	r1, [sp, #36]	; 0x24
 8016e98:	eb01 0e42 	add.w	lr, r1, r2, lsl #1
 8016e9c:	f831 c012 	ldrh.w	ip, [r1, r2, lsl #1]
 8016ea0:	f8be 1002 	ldrh.w	r1, [lr, #2]
 8016ea4:	b138      	cbz	r0, 8016eb6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x142>
 8016ea6:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8016ea8:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8016eaa:	4472      	add	r2, lr
 8016eac:	f83e 7007 	ldrh.w	r7, [lr, r7]
 8016eb0:	8852      	ldrh	r2, [r2, #2]
 8016eb2:	970c      	str	r7, [sp, #48]	; 0x30
 8016eb4:	920d      	str	r2, [sp, #52]	; 0x34
 8016eb6:	ea4f 4e0c 	mov.w	lr, ip, lsl #16
 8016eba:	fb13 f200 	smulbb	r2, r3, r0
 8016ebe:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8016ec2:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8016ec6:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8016eca:	10d2      	asrs	r2, r2, #3
 8016ecc:	ea4e 0c0c 	orr.w	ip, lr, ip
 8016ed0:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8016ed4:	f1c0 0e10 	rsb	lr, r0, #16
 8016ed8:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8016edc:	ebae 0e03 	sub.w	lr, lr, r3
 8016ee0:	ea4b 0101 	orr.w	r1, fp, r1
 8016ee4:	ebc2 0343 	rsb	r3, r2, r3, lsl #1
 8016ee8:	4359      	muls	r1, r3
 8016eea:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8016eec:	eb02 0e4e 	add.w	lr, r2, lr, lsl #1
 8016ef0:	fb0e 1e0c 	mla	lr, lr, ip, r1
 8016ef4:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8016ef8:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8016efc:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8016f00:	ea4c 0c03 	orr.w	ip, ip, r3
 8016f04:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8016f06:	990c      	ldr	r1, [sp, #48]	; 0x30
 8016f08:	041b      	lsls	r3, r3, #16
 8016f0a:	fb02 ec0c 	mla	ip, r2, ip, lr
 8016f0e:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8016f12:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 8016f16:	ea43 030e 	orr.w	r3, r3, lr
 8016f1a:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 8016f1e:	fb02 c203 	mla	r2, r2, r3, ip
 8016f22:	0d53      	lsrs	r3, r2, #21
 8016f24:	0952      	lsrs	r2, r2, #5
 8016f26:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8016f2a:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8016f2e:	431a      	orrs	r2, r3
 8016f30:	f8a9 2000 	strh.w	r2, [r9]
 8016f34:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8016f36:	441c      	add	r4, r3
 8016f38:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8016f3a:	f109 0902 	add.w	r9, r9, #2
 8016f3e:	441e      	add	r6, r3
 8016f40:	f10a 3aff 	add.w	sl, sl, #4294967295
 8016f44:	e78b      	b.n	8016e5e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xea>
 8016f46:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8016f48:	441c      	add	r4, r3
 8016f4a:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8016f4c:	441e      	add	r6, r3
 8016f4e:	9b07      	ldr	r3, [sp, #28]
 8016f50:	3302      	adds	r3, #2
 8016f52:	3d01      	subs	r5, #1
 8016f54:	9307      	str	r3, [sp, #28]
 8016f56:	e746      	b.n	8016de6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x72>
 8016f58:	f47f af55 	bne.w	8016e06 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x92>
 8016f5c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8016f5e:	2b00      	cmp	r3, #0
 8016f60:	f340 80ad 	ble.w	80170be <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x34a>
 8016f64:	ee3a aa0c 	vadd.f32	s20, s20, s24
 8016f68:	ee79 9aab 	vadd.f32	s19, s19, s23
 8016f6c:	eeca 7a8a 	vdiv.f32	s15, s21, s20
 8016f70:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8016f72:	ee39 9a0b 	vadd.f32	s18, s18, s22
 8016f76:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8016f7a:	eef0 6a48 	vmov.f32	s13, s16
 8016f7e:	ee69 7a27 	vmul.f32	s15, s18, s15
 8016f82:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8016f86:	ee37 8a48 	vsub.f32	s16, s14, s16
 8016f8a:	ee16 4a90 	vmov	r4, s13
 8016f8e:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8016f92:	eef0 6a68 	vmov.f32	s13, s17
 8016f96:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8016f9a:	ee18 2a10 	vmov	r2, s16
 8016f9e:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8016fa2:	fb92 f3f3 	sdiv	r3, r2, r3
 8016fa6:	ee18 2a90 	vmov	r2, s17
 8016faa:	9329      	str	r3, [sp, #164]	; 0xa4
 8016fac:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8016fae:	fb92 f3f3 	sdiv	r3, r2, r3
 8016fb2:	932a      	str	r3, [sp, #168]	; 0xa8
 8016fb4:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8016fb6:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8016fb8:	3b01      	subs	r3, #1
 8016fba:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8016fbe:	930b      	str	r3, [sp, #44]	; 0x2c
 8016fc0:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8016fc2:	ee16 6a90 	vmov	r6, s13
 8016fc6:	bf14      	ite	ne
 8016fc8:	461d      	movne	r5, r3
 8016fca:	4615      	moveq	r5, r2
 8016fcc:	eef0 8a67 	vmov.f32	s17, s15
 8016fd0:	eeb0 8a47 	vmov.f32	s16, s14
 8016fd4:	e700      	b.n	8016dd8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x64>
 8016fd6:	1c4f      	adds	r7, r1, #1
 8016fd8:	d1ac      	bne.n	8016f34 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1c0>
 8016fda:	4588      	cmp	r8, r1
 8016fdc:	ddaa      	ble.n	8016f34 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1c0>
 8016fde:	1c57      	adds	r7, r2, #1
 8016fe0:	dba8      	blt.n	8016f34 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1c0>
 8016fe2:	9f08      	ldr	r7, [sp, #32]
 8016fe4:	4297      	cmp	r7, r2
 8016fe6:	dda5      	ble.n	8016f34 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1c0>
 8016fe8:	e9cd 3003 	strd	r3, r0, [sp, #12]
 8016fec:	e9cd 1201 	strd	r1, r2, [sp, #4]
 8016ff0:	9700      	str	r7, [sp, #0]
 8016ff2:	4643      	mov	r3, r8
 8016ff4:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8016ff6:	9811      	ldr	r0, [sp, #68]	; 0x44
 8016ff8:	4649      	mov	r1, r9
 8016ffa:	f7ff fe2f 	bl	8016c5c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>
 8016ffe:	e799      	b.n	8016f34 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1c0>
 8017000:	1422      	asrs	r2, r4, #16
 8017002:	1431      	asrs	r1, r6, #16
 8017004:	fb08 2101 	mla	r1, r8, r1, r2
 8017008:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801700a:	9809      	ldr	r0, [sp, #36]	; 0x24
 801700c:	eb02 0241 	add.w	r2, r2, r1, lsl #1
 8017010:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 8017014:	f830 c011 	ldrh.w	ip, [r0, r1, lsl #1]
 8017018:	8851      	ldrh	r1, [r2, #2]
 801701a:	f3c4 3303 	ubfx	r3, r4, #12, #4
 801701e:	f1be 0f00 	cmp.w	lr, #0
 8017022:	d006      	beq.n	8017032 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2be>
 8017024:	980a      	ldr	r0, [sp, #40]	; 0x28
 8017026:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8017028:	1810      	adds	r0, r2, r0
 801702a:	5bd2      	ldrh	r2, [r2, r7]
 801702c:	920e      	str	r2, [sp, #56]	; 0x38
 801702e:	8842      	ldrh	r2, [r0, #2]
 8017030:	920f      	str	r2, [sp, #60]	; 0x3c
 8017032:	ea4f 400c 	mov.w	r0, ip, lsl #16
 8017036:	fb13 f20e 	smulbb	r2, r3, lr
 801703a:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 801703e:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 8017042:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8017046:	10d2      	asrs	r2, r2, #3
 8017048:	ea40 000c 	orr.w	r0, r0, ip
 801704c:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8017050:	f1ce 0c10 	rsb	ip, lr, #16
 8017054:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8017058:	ebac 0c03 	sub.w	ip, ip, r3
 801705c:	ea4a 0101 	orr.w	r1, sl, r1
 8017060:	ebc2 0343 	rsb	r3, r2, r3, lsl #1
 8017064:	4359      	muls	r1, r3
 8017066:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8017068:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 801706c:	fb0c 1c00 	mla	ip, ip, r0, r1
 8017070:	ea4f 4a03 	mov.w	sl, r3, lsl #16
 8017074:	f423 60fc 	bic.w	r0, r3, #2016	; 0x7e0
 8017078:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801707a:	990e      	ldr	r1, [sp, #56]	; 0x38
 801707c:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8017080:	041b      	lsls	r3, r3, #16
 8017082:	ea4a 0000 	orr.w	r0, sl, r0
 8017086:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801708a:	f421 6afc 	bic.w	sl, r1, #2016	; 0x7e0
 801708e:	fb02 c000 	mla	r0, r2, r0, ip
 8017092:	ea43 0a0a 	orr.w	sl, r3, sl
 8017096:	ebc2 024e 	rsb	r2, r2, lr, lsl #1
 801709a:	fb02 000a 	mla	r0, r2, sl, r0
 801709e:	0d43      	lsrs	r3, r0, #21
 80170a0:	0940      	lsrs	r0, r0, #5
 80170a2:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80170a6:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 80170aa:	4318      	orrs	r0, r3
 80170ac:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80170ae:	f82b 0b02 	strh.w	r0, [fp], #2
 80170b2:	441c      	add	r4, r3
 80170b4:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80170b6:	f109 39ff 	add.w	r9, r9, #4294967295
 80170ba:	441e      	add	r6, r3
 80170bc:	e6b8      	b.n	8016e30 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xbc>
 80170be:	b013      	add	sp, #76	; 0x4c
 80170c0:	ecbd 8b0a 	vpop	{d8-d12}
 80170c4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080170c8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>:
 80170c8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80170cc:	8808      	ldrh	r0, [r1, #0]
 80170ce:	b085      	sub	sp, #20
 80170d0:	1206      	asrs	r6, r0, #8
 80170d2:	e9dd c40f 	ldrd	ip, r4, [sp, #60]	; 0x3c
 80170d6:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 80170da:	9600      	str	r6, [sp, #0]
 80170dc:	10c6      	asrs	r6, r0, #3
 80170de:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80170e2:	9601      	str	r6, [sp, #4]
 80170e4:	00c0      	lsls	r0, r0, #3
 80170e6:	fb04 c603 	mla	r6, r4, r3, ip
 80170ea:	b2c0      	uxtb	r0, r0
 80170ec:	4691      	mov	r9, r2
 80170ee:	eb02 0e86 	add.w	lr, r2, r6, lsl #2
 80170f2:	9a00      	ldr	r2, [sp, #0]
 80170f4:	9002      	str	r0, [sp, #8]
 80170f6:	f040 407f 	orr.w	r0, r0, #4278190080	; 0xff000000
 80170fa:	ea40 4002 	orr.w	r0, r0, r2, lsl #16
 80170fe:	9a01      	ldr	r2, [sp, #4]
 8017100:	f9bd 8038 	ldrsh.w	r8, [sp, #56]	; 0x38
 8017104:	f89d 5044 	ldrb.w	r5, [sp, #68]	; 0x44
 8017108:	f89d 7048 	ldrb.w	r7, [sp, #72]	; 0x48
 801710c:	2c00      	cmp	r4, #0
 801710e:	ea40 2002 	orr.w	r0, r0, r2, lsl #8
 8017112:	db3a      	blt.n	801718a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xc2>
 8017114:	45a0      	cmp	r8, r4
 8017116:	dd38      	ble.n	801718a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xc2>
 8017118:	f1bc 0f00 	cmp.w	ip, #0
 801711c:	db33      	blt.n	8017186 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xbe>
 801711e:	4563      	cmp	r3, ip
 8017120:	dd31      	ble.n	8017186 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xbe>
 8017122:	f859 2026 	ldr.w	r2, [r9, r6, lsl #2]
 8017126:	f11c 0601 	adds.w	r6, ip, #1
 801712a:	d431      	bmi.n	8017190 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xc8>
 801712c:	42b3      	cmp	r3, r6
 801712e:	dd2f      	ble.n	8017190 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xc8>
 8017130:	b375      	cbz	r5, 8017190 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xc8>
 8017132:	f8de 6004 	ldr.w	r6, [lr, #4]
 8017136:	3401      	adds	r4, #1
 8017138:	d42e      	bmi.n	8017198 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xd0>
 801713a:	45a0      	cmp	r8, r4
 801713c:	dd2c      	ble.n	8017198 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xd0>
 801713e:	b35f      	cbz	r7, 8017198 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xd0>
 8017140:	f1bc 0f00 	cmp.w	ip, #0
 8017144:	db26      	blt.n	8017194 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xcc>
 8017146:	4563      	cmp	r3, ip
 8017148:	dd24      	ble.n	8017194 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xcc>
 801714a:	f85e 4023 	ldr.w	r4, [lr, r3, lsl #2]
 801714e:	f11c 0c01 	adds.w	ip, ip, #1
 8017152:	d405      	bmi.n	8017160 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x98>
 8017154:	4563      	cmp	r3, ip
 8017156:	dd03      	ble.n	8017160 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x98>
 8017158:	b115      	cbz	r5, 8017160 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x98>
 801715a:	3301      	adds	r3, #1
 801715c:	f85e 0023 	ldr.w	r0, [lr, r3, lsl #2]
 8017160:	2d0f      	cmp	r5, #15
 8017162:	ea4f 6b12 	mov.w	fp, r2, lsr #24
 8017166:	ea4f 6a16 	mov.w	sl, r6, lsr #24
 801716a:	ea4f 6914 	mov.w	r9, r4, lsr #24
 801716e:	ea4f 6810 	mov.w	r8, r0, lsr #24
 8017172:	d801      	bhi.n	8017178 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xb0>
 8017174:	2f0f      	cmp	r7, #15
 8017176:	d911      	bls.n	801719c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xd4>
 8017178:	4b82      	ldr	r3, [pc, #520]	; (8017384 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x2bc>)
 801717a:	4a83      	ldr	r2, [pc, #524]	; (8017388 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x2c0>)
 801717c:	4883      	ldr	r0, [pc, #524]	; (801738c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x2c4>)
 801717e:	f240 210d 	movw	r1, #525	; 0x20d
 8017182:	f002 f9fb 	bl	801957c <__assert_func>
 8017186:	4602      	mov	r2, r0
 8017188:	e7cd      	b.n	8017126 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x5e>
 801718a:	4606      	mov	r6, r0
 801718c:	4602      	mov	r2, r0
 801718e:	e7d2      	b.n	8017136 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x6e>
 8017190:	4606      	mov	r6, r0
 8017192:	e7d0      	b.n	8017136 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x6e>
 8017194:	4604      	mov	r4, r0
 8017196:	e7da      	b.n	801714e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x86>
 8017198:	4604      	mov	r4, r0
 801719a:	e7e1      	b.n	8017160 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x98>
 801719c:	b2ab      	uxth	r3, r5
 801719e:	b2bf      	uxth	r7, r7
 80171a0:	fb03 fe07 	mul.w	lr, r3, r7
 80171a4:	ebce 1707 	rsb	r7, lr, r7, lsl #4
 80171a8:	011b      	lsls	r3, r3, #4
 80171aa:	eba3 0c0e 	sub.w	ip, r3, lr
 80171ae:	b2bf      	uxth	r7, r7
 80171b0:	f5c3 7580 	rsb	r5, r3, #256	; 0x100
 80171b4:	fa1f fc8c 	uxth.w	ip, ip
 80171b8:	1bed      	subs	r5, r5, r7
 80171ba:	b2ad      	uxth	r5, r5
 80171bc:	fb0c f30a 	mul.w	r3, ip, sl
 80171c0:	fb05 330b 	mla	r3, r5, fp, r3
 80171c4:	fb07 3309 	mla	r3, r7, r9, r3
 80171c8:	fb0e 3308 	mla	r3, lr, r8, r3
 80171cc:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80171d0:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 80171d4:	9303      	str	r3, [sp, #12]
 80171d6:	d018      	beq.n	801720a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x142>
 80171d8:	f002 13ff 	and.w	r3, r2, #16711935	; 0xff00ff
 80171dc:	fb0b f303 	mul.w	r3, fp, r3
 80171e0:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 80171e4:	fb0b fb02 	mul.w	fp, fp, r2
 80171e8:	0a1a      	lsrs	r2, r3, #8
 80171ea:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 80171ee:	f103 1301 	add.w	r3, r3, #65537	; 0x10001
 80171f2:	441a      	add	r2, r3
 80171f4:	f50b 7380 	add.w	r3, fp, #256	; 0x100
 80171f8:	eb03 231b 	add.w	r3, r3, fp, lsr #8
 80171fc:	0a12      	lsrs	r2, r2, #8
 80171fe:	0a1b      	lsrs	r3, r3, #8
 8017200:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8017204:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8017208:	431a      	orrs	r2, r3
 801720a:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 801720e:	d019      	beq.n	8017244 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x17c>
 8017210:	f006 1bff 	and.w	fp, r6, #16711935	; 0xff00ff
 8017214:	fb0a fb0b 	mul.w	fp, sl, fp
 8017218:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 801721c:	fb0a fa06 	mul.w	sl, sl, r6
 8017220:	ea4f 261b 	mov.w	r6, fp, lsr #8
 8017224:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8017228:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801722c:	f50a 7380 	add.w	r3, sl, #256	; 0x100
 8017230:	445e      	add	r6, fp
 8017232:	eb03 231a 	add.w	r3, r3, sl, lsr #8
 8017236:	0a36      	lsrs	r6, r6, #8
 8017238:	0a1b      	lsrs	r3, r3, #8
 801723a:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 801723e:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8017242:	431e      	orrs	r6, r3
 8017244:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8017248:	d019      	beq.n	801727e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x1b6>
 801724a:	f004 1aff 	and.w	sl, r4, #16711935	; 0xff00ff
 801724e:	fb09 fa0a 	mul.w	sl, r9, sl
 8017252:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 8017256:	fb09 f904 	mul.w	r9, r9, r4
 801725a:	ea4f 241a 	mov.w	r4, sl, lsr #8
 801725e:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8017262:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8017266:	f509 7380 	add.w	r3, r9, #256	; 0x100
 801726a:	4454      	add	r4, sl
 801726c:	eb03 2319 	add.w	r3, r3, r9, lsr #8
 8017270:	0a24      	lsrs	r4, r4, #8
 8017272:	0a1b      	lsrs	r3, r3, #8
 8017274:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8017278:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801727c:	431c      	orrs	r4, r3
 801727e:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8017282:	d019      	beq.n	80172b8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x1f0>
 8017284:	f000 19ff 	and.w	r9, r0, #16711935	; 0xff00ff
 8017288:	fb08 f909 	mul.w	r9, r8, r9
 801728c:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8017290:	fb08 f800 	mul.w	r8, r8, r0
 8017294:	ea4f 2019 	mov.w	r0, r9, lsr #8
 8017298:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 801729c:	f109 1901 	add.w	r9, r9, #65537	; 0x10001
 80172a0:	f508 7380 	add.w	r3, r8, #256	; 0x100
 80172a4:	4448      	add	r0, r9
 80172a6:	eb03 2318 	add.w	r3, r3, r8, lsr #8
 80172aa:	0a00      	lsrs	r0, r0, #8
 80172ac:	0a1b      	lsrs	r3, r3, #8
 80172ae:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 80172b2:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80172b6:	4318      	orrs	r0, r3
 80172b8:	f006 18ff 	and.w	r8, r6, #16711935	; 0xff00ff
 80172bc:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 80172c0:	f002 13ff 	and.w	r3, r2, #16711935	; 0xff00ff
 80172c4:	fb0c f808 	mul.w	r8, ip, r8
 80172c8:	fb0c f606 	mul.w	r6, ip, r6
 80172cc:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 80172d0:	fb05 6202 	mla	r2, r5, r2, r6
 80172d4:	fb05 8803 	mla	r8, r5, r3, r8
 80172d8:	f004 13ff 	and.w	r3, r4, #16711935	; 0xff00ff
 80172dc:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 80172e0:	fb07 8803 	mla	r8, r7, r3, r8
 80172e4:	fb07 2704 	mla	r7, r7, r4, r2
 80172e8:	f000 13ff 	and.w	r3, r0, #16711935	; 0xff00ff
 80172ec:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 80172f0:	fb0e 8303 	mla	r3, lr, r3, r8
 80172f4:	fb0e 7e00 	mla	lr, lr, r0, r7
 80172f8:	0a1b      	lsrs	r3, r3, #8
 80172fa:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80172fe:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8017302:	f89d 404c 	ldrb.w	r4, [sp, #76]	; 0x4c
 8017306:	f40e 4e7f 	and.w	lr, lr, #65280	; 0xff00
 801730a:	ea43 0e0e 	orr.w	lr, r3, lr
 801730e:	9b03      	ldr	r3, [sp, #12]
 8017310:	b2a4      	uxth	r4, r4
 8017312:	4363      	muls	r3, r4
 8017314:	1c5a      	adds	r2, r3, #1
 8017316:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 801731a:	ea6f 2212 	mvn.w	r2, r2, lsr #8
 801731e:	9b00      	ldr	r3, [sp, #0]
 8017320:	b2d2      	uxtb	r2, r2
 8017322:	ea4f 451e 	mov.w	r5, lr, lsr #16
 8017326:	fb13 f302 	smulbb	r3, r3, r2
 801732a:	fb05 3304 	mla	r3, r5, r4, r3
 801732e:	b29d      	uxth	r5, r3
 8017330:	9b01      	ldr	r3, [sp, #4]
 8017332:	f3ce 2007 	ubfx	r0, lr, #8, #8
 8017336:	fb13 f302 	smulbb	r3, r3, r2
 801733a:	fb00 3004 	mla	r0, r0, r4, r3
 801733e:	9b02      	ldr	r3, [sp, #8]
 8017340:	fa5f fe8e 	uxtb.w	lr, lr
 8017344:	fb13 f202 	smulbb	r2, r3, r2
 8017348:	fb0e 2e04 	mla	lr, lr, r4, r2
 801734c:	fa1f fe8e 	uxth.w	lr, lr
 8017350:	b280      	uxth	r0, r0
 8017352:	f10e 0201 	add.w	r2, lr, #1
 8017356:	1c6b      	adds	r3, r5, #1
 8017358:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 801735c:	1c42      	adds	r2, r0, #1
 801735e:	eb03 2315 	add.w	r3, r3, r5, lsr #8
 8017362:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 8017366:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 801736a:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 801736e:	0952      	lsrs	r2, r2, #5
 8017370:	ea43 030e 	orr.w	r3, r3, lr
 8017374:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8017378:	4313      	orrs	r3, r2
 801737a:	800b      	strh	r3, [r1, #0]
 801737c:	b005      	add	sp, #20
 801737e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017382:	bf00      	nop
 8017384:	0801d2ad 	.word	0x0801d2ad
 8017388:	0801d805 	.word	0x0801d805
 801738c:	0801d335 	.word	0x0801d335

08017390 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 8017390:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017394:	ed2d 8b08 	vpush	{d8-d11}
 8017398:	b099      	sub	sp, #100	; 0x64
 801739a:	eeb0 aa40 	vmov.f32	s20, s0
 801739e:	9306      	str	r3, [sp, #24]
 80173a0:	f9bd 30c8 	ldrsh.w	r3, [sp, #200]	; 0xc8
 80173a4:	9307      	str	r3, [sp, #28]
 80173a6:	f9bd 30cc 	ldrsh.w	r3, [sp, #204]	; 0xcc
 80173aa:	9216      	str	r2, [sp, #88]	; 0x58
 80173ac:	9310      	str	r3, [sp, #64]	; 0x40
 80173ae:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 80173b0:	f89d 30d4 	ldrb.w	r3, [sp, #212]	; 0xd4
 80173b4:	9113      	str	r1, [sp, #76]	; 0x4c
 80173b6:	9315      	str	r3, [sp, #84]	; 0x54
 80173b8:	e9dd 1330 	ldrd	r1, r3, [sp, #192]	; 0xc0
 80173bc:	9017      	str	r0, [sp, #92]	; 0x5c
 80173be:	6850      	ldr	r0, [r2, #4]
 80173c0:	6812      	ldr	r2, [r2, #0]
 80173c2:	9c2c      	ldr	r4, [sp, #176]	; 0xb0
 80173c4:	fb00 1303 	mla	r3, r0, r3, r1
 80173c8:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80173cc:	930a      	str	r3, [sp, #40]	; 0x28
 80173ce:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 80173d0:	681b      	ldr	r3, [r3, #0]
 80173d2:	9312      	str	r3, [sp, #72]	; 0x48
 80173d4:	9b07      	ldr	r3, [sp, #28]
 80173d6:	009b      	lsls	r3, r3, #2
 80173d8:	eef0 9a60 	vmov.f32	s19, s1
 80173dc:	eeb0 9a41 	vmov.f32	s18, s2
 80173e0:	eeb0 8a62 	vmov.f32	s16, s5
 80173e4:	eef0 8a43 	vmov.f32	s17, s6
 80173e8:	eef0 ba44 	vmov.f32	s23, s8
 80173ec:	eeb0 ba64 	vmov.f32	s22, s9
 80173f0:	eef0 aa45 	vmov.f32	s21, s10
 80173f4:	930e      	str	r3, [sp, #56]	; 0x38
 80173f6:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 80173f8:	2b00      	cmp	r3, #0
 80173fa:	dc03      	bgt.n	8017404 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x74>
 80173fc:	9b16      	ldr	r3, [sp, #88]	; 0x58
 80173fe:	2b00      	cmp	r3, #0
 8017400:	f340 8352 	ble.w	8017aa8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x718>
 8017404:	9b06      	ldr	r3, [sp, #24]
 8017406:	2b00      	cmp	r3, #0
 8017408:	f340 81a8 	ble.w	801775c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3cc>
 801740c:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 801740e:	1412      	asrs	r2, r2, #16
 8017410:	ea4f 4324 	mov.w	r3, r4, asr #16
 8017414:	d430      	bmi.n	8017478 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe8>
 8017416:	9807      	ldr	r0, [sp, #28]
 8017418:	1c51      	adds	r1, r2, #1
 801741a:	4288      	cmp	r0, r1
 801741c:	dd2f      	ble.n	801747e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xee>
 801741e:	2b00      	cmp	r3, #0
 8017420:	db2d      	blt.n	801747e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xee>
 8017422:	9810      	ldr	r0, [sp, #64]	; 0x40
 8017424:	1c59      	adds	r1, r3, #1
 8017426:	4288      	cmp	r0, r1
 8017428:	dd29      	ble.n	801747e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xee>
 801742a:	9b06      	ldr	r3, [sp, #24]
 801742c:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 801742e:	992b      	ldr	r1, [sp, #172]	; 0xac
 8017430:	3b01      	subs	r3, #1
 8017432:	fb02 1203 	mla	r2, r2, r3, r1
 8017436:	1412      	asrs	r2, r2, #16
 8017438:	d42c      	bmi.n	8017494 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x104>
 801743a:	9907      	ldr	r1, [sp, #28]
 801743c:	3201      	adds	r2, #1
 801743e:	4291      	cmp	r1, r2
 8017440:	dd28      	ble.n	8017494 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x104>
 8017442:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
 8017444:	fb02 4303 	mla	r3, r2, r3, r4
 8017448:	141b      	asrs	r3, r3, #16
 801744a:	d423      	bmi.n	8017494 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x104>
 801744c:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801744e:	3301      	adds	r3, #1
 8017450:	429a      	cmp	r2, r3
 8017452:	dd1f      	ble.n	8017494 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x104>
 8017454:	9b06      	ldr	r3, [sp, #24]
 8017456:	f8dd a028 	ldr.w	sl, [sp, #40]	; 0x28
 801745a:	f8bd b054 	ldrh.w	fp, [sp, #84]	; 0x54
 801745e:	9311      	str	r3, [sp, #68]	; 0x44
 8017460:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8017462:	2b00      	cmp	r3, #0
 8017464:	f300 81e3 	bgt.w	801782e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x49e>
 8017468:	9b06      	ldr	r3, [sp, #24]
 801746a:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801746e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8017470:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 8017474:	930a      	str	r3, [sp, #40]	; 0x28
 8017476:	e173      	b.n	8017760 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3d0>
 8017478:	1c51      	adds	r1, r2, #1
 801747a:	f040 8162 	bne.w	8017742 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3b2>
 801747e:	9907      	ldr	r1, [sp, #28]
 8017480:	428a      	cmp	r2, r1
 8017482:	f280 815e 	bge.w	8017742 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3b2>
 8017486:	1c5f      	adds	r7, r3, #1
 8017488:	f2c0 815b 	blt.w	8017742 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3b2>
 801748c:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801748e:	4293      	cmp	r3, r2
 8017490:	f280 8157 	bge.w	8017742 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3b2>
 8017494:	9b06      	ldr	r3, [sp, #24]
 8017496:	9314      	str	r3, [sp, #80]	; 0x50
 8017498:	f8bd 7054 	ldrh.w	r7, [sp, #84]	; 0x54
 801749c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801749e:	9311      	str	r3, [sp, #68]	; 0x44
 80174a0:	9b14      	ldr	r3, [sp, #80]	; 0x50
 80174a2:	2b00      	cmp	r3, #0
 80174a4:	dde0      	ble.n	8017468 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xd8>
 80174a6:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 80174a8:	f3c2 3003 	ubfx	r0, r2, #12, #4
 80174ac:	1412      	asrs	r2, r2, #16
 80174ae:	ea4f 4324 	mov.w	r3, r4, asr #16
 80174b2:	f3c4 3103 	ubfx	r1, r4, #12, #4
 80174b6:	f100 81a1 	bmi.w	80177fc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x46c>
 80174ba:	9e07      	ldr	r6, [sp, #28]
 80174bc:	1c55      	adds	r5, r2, #1
 80174be:	42ae      	cmp	r6, r5
 80174c0:	f340 819e 	ble.w	8017800 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x470>
 80174c4:	2b00      	cmp	r3, #0
 80174c6:	f2c0 819b 	blt.w	8017800 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x470>
 80174ca:	9e10      	ldr	r6, [sp, #64]	; 0x40
 80174cc:	1c5d      	adds	r5, r3, #1
 80174ce:	42ae      	cmp	r6, r5
 80174d0:	f340 8196 	ble.w	8017800 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x470>
 80174d4:	9d07      	ldr	r5, [sp, #28]
 80174d6:	fb03 2305 	mla	r3, r3, r5, r2
 80174da:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80174dc:	eb02 0583 	add.w	r5, r2, r3, lsl #2
 80174e0:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 80174e4:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 80174e8:	2800      	cmp	r0, #0
 80174ea:	f000 8178 	beq.w	80177de <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x44e>
 80174ee:	686a      	ldr	r2, [r5, #4]
 80174f0:	920b      	str	r2, [sp, #44]	; 0x2c
 80174f2:	ea4f 6812 	mov.w	r8, r2, lsr #24
 80174f6:	2900      	cmp	r1, #0
 80174f8:	f000 817a 	beq.w	80177f0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x460>
 80174fc:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 80174fe:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 8017500:	18aa      	adds	r2, r5, r2
 8017502:	59ad      	ldr	r5, [r5, r6]
 8017504:	6852      	ldr	r2, [r2, #4]
 8017506:	9508      	str	r5, [sp, #32]
 8017508:	ea4f 6a15 	mov.w	sl, r5, lsr #24
 801750c:	920c      	str	r2, [sp, #48]	; 0x30
 801750e:	0e15      	lsrs	r5, r2, #24
 8017510:	b280      	uxth	r0, r0
 8017512:	b289      	uxth	r1, r1
 8017514:	fb00 fb01 	mul.w	fp, r0, r1
 8017518:	ebcb 1101 	rsb	r1, fp, r1, lsl #4
 801751c:	0100      	lsls	r0, r0, #4
 801751e:	eba0 090b 	sub.w	r9, r0, fp
 8017522:	b289      	uxth	r1, r1
 8017524:	f5c0 7280 	rsb	r2, r0, #256	; 0x100
 8017528:	fa1f f989 	uxth.w	r9, r9
 801752c:	1a52      	subs	r2, r2, r1
 801752e:	b292      	uxth	r2, r2
 8017530:	fb09 f008 	mul.w	r0, r9, r8
 8017534:	fb02 000c 	mla	r0, r2, ip, r0
 8017538:	fb01 000a 	mla	r0, r1, sl, r0
 801753c:	fb0b 0005 	mla	r0, fp, r5, r0
 8017540:	f3c0 2007 	ubfx	r0, r0, #8, #8
 8017544:	2800      	cmp	r0, #0
 8017546:	f000 80ef 	beq.w	8017728 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x398>
 801754a:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 801754e:	d01b      	beq.n	8017588 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1f8>
 8017550:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 8017554:	fb0c fe0e 	mul.w	lr, ip, lr
 8017558:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801755c:	fb0c fc03 	mul.w	ip, ip, r3
 8017560:	ea4f 231e 	mov.w	r3, lr, lsr #8
 8017564:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8017568:	f10e 1e01 	add.w	lr, lr, #65537	; 0x10001
 801756c:	4473      	add	r3, lr
 801756e:	f50c 7e80 	add.w	lr, ip, #256	; 0x100
 8017572:	eb0e 2e1c 	add.w	lr, lr, ip, lsr #8
 8017576:	0a1b      	lsrs	r3, r3, #8
 8017578:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801757c:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8017580:	f40e 4e7f 	and.w	lr, lr, #65280	; 0xff00
 8017584:	ea43 030e 	orr.w	r3, r3, lr
 8017588:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 801758c:	d01e      	beq.n	80175cc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x23c>
 801758e:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
 8017590:	f006 1cff 	and.w	ip, r6, #16711935	; 0xff00ff
 8017594:	fb08 fc0c 	mul.w	ip, r8, ip
 8017598:	f406 4e7f 	and.w	lr, r6, #65280	; 0xff00
 801759c:	fb08 f80e 	mul.w	r8, r8, lr
 80175a0:	ea4f 2e1c 	mov.w	lr, ip, lsr #8
 80175a4:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80175a8:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 80175ac:	44e6      	add	lr, ip
 80175ae:	f508 7c80 	add.w	ip, r8, #256	; 0x100
 80175b2:	eb0c 2818 	add.w	r8, ip, r8, lsr #8
 80175b6:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80175ba:	ea4f 2818 	mov.w	r8, r8, lsr #8
 80175be:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80175c2:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 80175c6:	ea4e 0608 	orr.w	r6, lr, r8
 80175ca:	960b      	str	r6, [sp, #44]	; 0x2c
 80175cc:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 80175d0:	d01e      	beq.n	8017610 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x280>
 80175d2:	9e08      	ldr	r6, [sp, #32]
 80175d4:	f006 18ff 	and.w	r8, r6, #16711935	; 0xff00ff
 80175d8:	fb0a f808 	mul.w	r8, sl, r8
 80175dc:	f406 4c7f 	and.w	ip, r6, #65280	; 0xff00
 80175e0:	fb0a fa0c 	mul.w	sl, sl, ip
 80175e4:	ea4f 2e18 	mov.w	lr, r8, lsr #8
 80175e8:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80175ec:	f108 1801 	add.w	r8, r8, #65537	; 0x10001
 80175f0:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 80175f4:	44c6      	add	lr, r8
 80175f6:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80175fa:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80175fe:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8017602:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8017606:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801760a:	ea4e 060a 	orr.w	r6, lr, sl
 801760e:	9608      	str	r6, [sp, #32]
 8017610:	2dff      	cmp	r5, #255	; 0xff
 8017612:	d01d      	beq.n	8017650 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2c0>
 8017614:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 8017616:	f006 18ff 	and.w	r8, r6, #16711935	; 0xff00ff
 801761a:	fb05 f808 	mul.w	r8, r5, r8
 801761e:	f406 4c7f 	and.w	ip, r6, #65280	; 0xff00
 8017622:	fb05 f50c 	mul.w	r5, r5, ip
 8017626:	ea4f 2e18 	mov.w	lr, r8, lsr #8
 801762a:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801762e:	f108 1801 	add.w	r8, r8, #65537	; 0x10001
 8017632:	f505 7c80 	add.w	ip, r5, #256	; 0x100
 8017636:	44c6      	add	lr, r8
 8017638:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801763c:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8017640:	0a2d      	lsrs	r5, r5, #8
 8017642:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8017646:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 801764a:	ea4e 0505 	orr.w	r5, lr, r5
 801764e:	950c      	str	r5, [sp, #48]	; 0x30
 8017650:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8017652:	9e08      	ldr	r6, [sp, #32]
 8017654:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8017658:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 801765c:	fb09 f505 	mul.w	r5, r9, r5
 8017660:	fb02 550c 	mla	r5, r2, ip, r5
 8017664:	f006 1cff 	and.w	ip, r6, #16711935	; 0xff00ff
 8017668:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 801766a:	fb01 550c 	mla	r5, r1, ip, r5
 801766e:	f006 1cff 	and.w	ip, r6, #16711935	; 0xff00ff
 8017672:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
 8017674:	fb0b 550c 	mla	r5, fp, ip, r5
 8017678:	f406 4c7f 	and.w	ip, r6, #65280	; 0xff00
 801767c:	fb09 f90c 	mul.w	r9, r9, ip
 8017680:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8017684:	fb02 9303 	mla	r3, r2, r3, r9
 8017688:	9a08      	ldr	r2, [sp, #32]
 801768a:	f402 4e7f 	and.w	lr, r2, #65280	; 0xff00
 801768e:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8017690:	fb01 330e 	mla	r3, r1, lr, r3
 8017694:	f402 417f 	and.w	r1, r2, #65280	; 0xff00
 8017698:	fb0b 3b01 	mla	fp, fp, r1, r3
 801769c:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801769e:	0a2d      	lsrs	r5, r5, #8
 80176a0:	f8b3 c000 	ldrh.w	ip, [r3]
 80176a4:	ea4f 2b1b 	mov.w	fp, fp, lsr #8
 80176a8:	fb00 f307 	mul.w	r3, r0, r7
 80176ac:	1c58      	adds	r0, r3, #1
 80176ae:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 80176b2:	f40b 4b7f 	and.w	fp, fp, #65280	; 0xff00
 80176b6:	ea45 050b 	orr.w	r5, r5, fp
 80176ba:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 80176be:	0c29      	lsrs	r1, r5, #16
 80176c0:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 80176c4:	ea4f 232c 	mov.w	r3, ip, asr #8
 80176c8:	b2c0      	uxtb	r0, r0
 80176ca:	fb11 f107 	smulbb	r1, r1, r7
 80176ce:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 80176d2:	fb03 1300 	mla	r3, r3, r0, r1
 80176d6:	b299      	uxth	r1, r3
 80176d8:	ea4f 02ec 	mov.w	r2, ip, asr #3
 80176dc:	f3c5 2307 	ubfx	r3, r5, #8, #8
 80176e0:	fb13 f307 	smulbb	r3, r3, r7
 80176e4:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 80176e8:	fb02 3200 	mla	r2, r2, r0, r3
 80176ec:	b2ed      	uxtb	r5, r5
 80176ee:	ea4f 03cc 	mov.w	r3, ip, lsl #3
 80176f2:	b2db      	uxtb	r3, r3
 80176f4:	fb15 f507 	smulbb	r5, r5, r7
 80176f8:	fb03 5500 	mla	r5, r3, r0, r5
 80176fc:	b292      	uxth	r2, r2
 80176fe:	b2ad      	uxth	r5, r5
 8017700:	1c4b      	adds	r3, r1, #1
 8017702:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 8017706:	1c68      	adds	r0, r5, #1
 8017708:	1c51      	adds	r1, r2, #1
 801770a:	eb00 2515 	add.w	r5, r0, r5, lsr #8
 801770e:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8017712:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 8017716:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801771a:	0952      	lsrs	r2, r2, #5
 801771c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8017720:	432b      	orrs	r3, r5
 8017722:	4313      	orrs	r3, r2
 8017724:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8017726:	8013      	strh	r3, [r2, #0]
 8017728:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801772a:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 801772c:	3302      	adds	r3, #2
 801772e:	9311      	str	r3, [sp, #68]	; 0x44
 8017730:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8017732:	4413      	add	r3, r2
 8017734:	932b      	str	r3, [sp, #172]	; 0xac
 8017736:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8017738:	441c      	add	r4, r3
 801773a:	9b14      	ldr	r3, [sp, #80]	; 0x50
 801773c:	3b01      	subs	r3, #1
 801773e:	9314      	str	r3, [sp, #80]	; 0x50
 8017740:	e6ae      	b.n	80174a0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x110>
 8017742:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8017744:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 8017746:	4413      	add	r3, r2
 8017748:	932b      	str	r3, [sp, #172]	; 0xac
 801774a:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 801774c:	441c      	add	r4, r3
 801774e:	9b06      	ldr	r3, [sp, #24]
 8017750:	3b01      	subs	r3, #1
 8017752:	9306      	str	r3, [sp, #24]
 8017754:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8017756:	3302      	adds	r3, #2
 8017758:	930a      	str	r3, [sp, #40]	; 0x28
 801775a:	e653      	b.n	8017404 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x74>
 801775c:	f47f ae65 	bne.w	801742a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9a>
 8017760:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8017762:	2b00      	cmp	r3, #0
 8017764:	f340 81a0 	ble.w	8017aa8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x718>
 8017768:	ee3a aa2b 	vadd.f32	s20, s20, s23
 801776c:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8017770:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 8017774:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8017776:	ee79 9a8b 	vadd.f32	s19, s19, s22
 801777a:	ee39 9a2a 	vadd.f32	s18, s18, s21
 801777e:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8017782:	eef0 6a48 	vmov.f32	s13, s16
 8017786:	ee69 7a27 	vmul.f32	s15, s18, s15
 801778a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801778e:	ee37 8a48 	vsub.f32	s16, s14, s16
 8017792:	edcd 6a2b 	vstr	s13, [sp, #172]	; 0xac
 8017796:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 801779a:	eef0 6a68 	vmov.f32	s13, s17
 801779e:	ee77 8ae8 	vsub.f32	s17, s15, s17
 80177a2:	ee18 2a10 	vmov	r2, s16
 80177a6:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 80177aa:	fb92 f3f3 	sdiv	r3, r2, r3
 80177ae:	ee18 2a90 	vmov	r2, s17
 80177b2:	932d      	str	r3, [sp, #180]	; 0xb4
 80177b4:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80177b6:	fb92 f3f3 	sdiv	r3, r2, r3
 80177ba:	932e      	str	r3, [sp, #184]	; 0xb8
 80177bc:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 80177be:	9a16      	ldr	r2, [sp, #88]	; 0x58
 80177c0:	3b01      	subs	r3, #1
 80177c2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80177c6:	9313      	str	r3, [sp, #76]	; 0x4c
 80177c8:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80177ca:	bf08      	it	eq
 80177cc:	4613      	moveq	r3, r2
 80177ce:	ee16 4a90 	vmov	r4, s13
 80177d2:	9306      	str	r3, [sp, #24]
 80177d4:	eef0 8a67 	vmov.f32	s17, s15
 80177d8:	eeb0 8a47 	vmov.f32	s16, s14
 80177dc:	e60b      	b.n	80173f6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x66>
 80177de:	b151      	cbz	r1, 80177f6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x466>
 80177e0:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 80177e2:	58aa      	ldr	r2, [r5, r2]
 80177e4:	9208      	str	r2, [sp, #32]
 80177e6:	ea4f 6a12 	mov.w	sl, r2, lsr #24
 80177ea:	25ff      	movs	r5, #255	; 0xff
 80177ec:	46a8      	mov	r8, r5
 80177ee:	e68f      	b.n	8017510 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x180>
 80177f0:	25ff      	movs	r5, #255	; 0xff
 80177f2:	46aa      	mov	sl, r5
 80177f4:	e68c      	b.n	8017510 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x180>
 80177f6:	25ff      	movs	r5, #255	; 0xff
 80177f8:	46aa      	mov	sl, r5
 80177fa:	e7f7      	b.n	80177ec <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x45c>
 80177fc:	1c56      	adds	r6, r2, #1
 80177fe:	d193      	bne.n	8017728 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x398>
 8017800:	9d07      	ldr	r5, [sp, #28]
 8017802:	4295      	cmp	r5, r2
 8017804:	dd90      	ble.n	8017728 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x398>
 8017806:	1c5d      	adds	r5, r3, #1
 8017808:	db8e      	blt.n	8017728 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x398>
 801780a:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801780c:	429d      	cmp	r5, r3
 801780e:	dd8b      	ble.n	8017728 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x398>
 8017810:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8017812:	9201      	str	r2, [sp, #4]
 8017814:	e9cd 3002 	strd	r3, r0, [sp, #8]
 8017818:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801781a:	9300      	str	r3, [sp, #0]
 801781c:	e9cd 1504 	strd	r1, r5, [sp, #16]
 8017820:	9b07      	ldr	r3, [sp, #28]
 8017822:	9817      	ldr	r0, [sp, #92]	; 0x5c
 8017824:	e9dd 1211 	ldrd	r1, r2, [sp, #68]	; 0x44
 8017828:	f7ff fc4e 	bl	80170c8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>
 801782c:	e77c      	b.n	8017728 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x398>
 801782e:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8017830:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 8017832:	9d07      	ldr	r5, [sp, #28]
 8017834:	1412      	asrs	r2, r2, #16
 8017836:	f3c3 3103 	ubfx	r1, r3, #12, #4
 801783a:	1423      	asrs	r3, r4, #16
 801783c:	fb05 2303 	mla	r3, r5, r3, r2
 8017840:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8017842:	eb02 0583 	add.w	r5, r2, r3, lsl #2
 8017846:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 801784a:	f3c4 3003 	ubfx	r0, r4, #12, #4
 801784e:	0e1e      	lsrs	r6, r3, #24
 8017850:	2900      	cmp	r1, #0
 8017852:	f000 811a 	beq.w	8017a8a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6fa>
 8017856:	686a      	ldr	r2, [r5, #4]
 8017858:	920d      	str	r2, [sp, #52]	; 0x34
 801785a:	ea4f 6c12 	mov.w	ip, r2, lsr #24
 801785e:	2800      	cmp	r0, #0
 8017860:	f000 811c 	beq.w	8017a9c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x70c>
 8017864:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8017866:	9f0e      	ldr	r7, [sp, #56]	; 0x38
 8017868:	18aa      	adds	r2, r5, r2
 801786a:	59ed      	ldr	r5, [r5, r7]
 801786c:	6852      	ldr	r2, [r2, #4]
 801786e:	9509      	str	r5, [sp, #36]	; 0x24
 8017870:	ea4f 6815 	mov.w	r8, r5, lsr #24
 8017874:	920f      	str	r2, [sp, #60]	; 0x3c
 8017876:	0e15      	lsrs	r5, r2, #24
 8017878:	b289      	uxth	r1, r1
 801787a:	b280      	uxth	r0, r0
 801787c:	fb01 f900 	mul.w	r9, r1, r0
 8017880:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 8017884:	0109      	lsls	r1, r1, #4
 8017886:	eba1 0e09 	sub.w	lr, r1, r9
 801788a:	b280      	uxth	r0, r0
 801788c:	f5c1 7280 	rsb	r2, r1, #256	; 0x100
 8017890:	fa1f fe8e 	uxth.w	lr, lr
 8017894:	1a12      	subs	r2, r2, r0
 8017896:	b292      	uxth	r2, r2
 8017898:	fb0e f10c 	mul.w	r1, lr, ip
 801789c:	fb02 1106 	mla	r1, r2, r6, r1
 80178a0:	fb00 1108 	mla	r1, r0, r8, r1
 80178a4:	fb09 1105 	mla	r1, r9, r5, r1
 80178a8:	f3c1 2107 	ubfx	r1, r1, #8, #8
 80178ac:	2900      	cmp	r1, #0
 80178ae:	f000 80e0 	beq.w	8017a72 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6e2>
 80178b2:	2eff      	cmp	r6, #255	; 0xff
 80178b4:	d016      	beq.n	80178e4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x554>
 80178b6:	f003 17ff 	and.w	r7, r3, #16711935	; 0xff00ff
 80178ba:	4377      	muls	r7, r6
 80178bc:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80178c0:	435e      	muls	r6, r3
 80178c2:	0a3b      	lsrs	r3, r7, #8
 80178c4:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80178c8:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 80178cc:	443b      	add	r3, r7
 80178ce:	f506 7780 	add.w	r7, r6, #256	; 0x100
 80178d2:	eb07 2716 	add.w	r7, r7, r6, lsr #8
 80178d6:	0a1b      	lsrs	r3, r3, #8
 80178d8:	0a3f      	lsrs	r7, r7, #8
 80178da:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80178de:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 80178e2:	433b      	orrs	r3, r7
 80178e4:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 80178e8:	d01d      	beq.n	8017926 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x596>
 80178ea:	9e0d      	ldr	r6, [sp, #52]	; 0x34
 80178ec:	9f0d      	ldr	r7, [sp, #52]	; 0x34
 80178ee:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 80178f2:	fb0c f606 	mul.w	r6, ip, r6
 80178f6:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 80178fa:	fb0c fc07 	mul.w	ip, ip, r7
 80178fe:	0a37      	lsrs	r7, r6, #8
 8017900:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8017904:	f106 1601 	add.w	r6, r6, #65537	; 0x10001
 8017908:	4437      	add	r7, r6
 801790a:	f50c 7680 	add.w	r6, ip, #256	; 0x100
 801790e:	eb06 2c1c 	add.w	ip, r6, ip, lsr #8
 8017912:	0a3f      	lsrs	r7, r7, #8
 8017914:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8017918:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 801791c:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8017920:	ea47 060c 	orr.w	r6, r7, ip
 8017924:	960d      	str	r6, [sp, #52]	; 0x34
 8017926:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 801792a:	d01d      	beq.n	8017968 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x5d8>
 801792c:	9e09      	ldr	r6, [sp, #36]	; 0x24
 801792e:	f006 1cff 	and.w	ip, r6, #16711935	; 0xff00ff
 8017932:	fb08 fc0c 	mul.w	ip, r8, ip
 8017936:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 801793a:	fb08 f806 	mul.w	r8, r8, r6
 801793e:	ea4f 271c 	mov.w	r7, ip, lsr #8
 8017942:	f508 7680 	add.w	r6, r8, #256	; 0x100
 8017946:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 801794a:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801794e:	eb06 2818 	add.w	r8, r6, r8, lsr #8
 8017952:	4467      	add	r7, ip
 8017954:	0a3f      	lsrs	r7, r7, #8
 8017956:	ea4f 2818 	mov.w	r8, r8, lsr #8
 801795a:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 801795e:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 8017962:	ea47 0608 	orr.w	r6, r7, r8
 8017966:	9609      	str	r6, [sp, #36]	; 0x24
 8017968:	2dff      	cmp	r5, #255	; 0xff
 801796a:	d01a      	beq.n	80179a2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x612>
 801796c:	9e0f      	ldr	r6, [sp, #60]	; 0x3c
 801796e:	f006 1cff 	and.w	ip, r6, #16711935	; 0xff00ff
 8017972:	fb05 fc0c 	mul.w	ip, r5, ip
 8017976:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 801797a:	4375      	muls	r5, r6
 801797c:	ea4f 271c 	mov.w	r7, ip, lsr #8
 8017980:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8017984:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8017988:	f505 7680 	add.w	r6, r5, #256	; 0x100
 801798c:	4467      	add	r7, ip
 801798e:	eb06 2515 	add.w	r5, r6, r5, lsr #8
 8017992:	0a3f      	lsrs	r7, r7, #8
 8017994:	0a2d      	lsrs	r5, r5, #8
 8017996:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 801799a:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 801799e:	433d      	orrs	r5, r7
 80179a0:	950f      	str	r5, [sp, #60]	; 0x3c
 80179a2:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 80179a4:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 80179a8:	f003 16ff 	and.w	r6, r3, #16711935	; 0xff00ff
 80179ac:	fb0e f505 	mul.w	r5, lr, r5
 80179b0:	fb02 5506 	mla	r5, r2, r6, r5
 80179b4:	9e09      	ldr	r6, [sp, #36]	; 0x24
 80179b6:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 80179ba:	fb00 5506 	mla	r5, r0, r6, r5
 80179be:	9e0f      	ldr	r6, [sp, #60]	; 0x3c
 80179c0:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 80179c4:	fb09 5506 	mla	r5, r9, r6, r5
 80179c8:	9e0d      	ldr	r6, [sp, #52]	; 0x34
 80179ca:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 80179ce:	fb0e fe06 	mul.w	lr, lr, r6
 80179d2:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80179d6:	fb02 e303 	mla	r3, r2, r3, lr
 80179da:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80179dc:	f402 477f 	and.w	r7, r2, #65280	; 0xff00
 80179e0:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80179e2:	fb00 3307 	mla	r3, r0, r7, r3
 80179e6:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 80179ea:	fb09 3c0c 	mla	ip, r9, ip, r3
 80179ee:	fb01 f10b 	mul.w	r1, r1, fp
 80179f2:	0a2d      	lsrs	r5, r5, #8
 80179f4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80179f8:	f8ba 0000 	ldrh.w	r0, [sl]
 80179fc:	1c4b      	adds	r3, r1, #1
 80179fe:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8017a02:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8017a06:	ea45 050c 	orr.w	r5, r5, ip
 8017a0a:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8017a0e:	1202      	asrs	r2, r0, #8
 8017a10:	0c2b      	lsrs	r3, r5, #16
 8017a12:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 8017a16:	b2c9      	uxtb	r1, r1
 8017a18:	fb13 f30b 	smulbb	r3, r3, fp
 8017a1c:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8017a20:	fb02 3201 	mla	r2, r2, r1, r3
 8017a24:	f3c5 2607 	ubfx	r6, r5, #8, #8
 8017a28:	10c3      	asrs	r3, r0, #3
 8017a2a:	b2ed      	uxtb	r5, r5
 8017a2c:	00c0      	lsls	r0, r0, #3
 8017a2e:	b2c0      	uxtb	r0, r0
 8017a30:	fb15 f50b 	smulbb	r5, r5, fp
 8017a34:	fb00 5001 	mla	r0, r0, r1, r5
 8017a38:	b292      	uxth	r2, r2
 8017a3a:	fb16 f60b 	smulbb	r6, r6, fp
 8017a3e:	b280      	uxth	r0, r0
 8017a40:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 8017a44:	fb03 6301 	mla	r3, r3, r1, r6
 8017a48:	1c51      	adds	r1, r2, #1
 8017a4a:	1c46      	adds	r6, r0, #1
 8017a4c:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8017a50:	eb06 2610 	add.w	r6, r6, r0, lsr #8
 8017a54:	b29b      	uxth	r3, r3
 8017a56:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8017a5a:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 8017a5e:	4332      	orrs	r2, r6
 8017a60:	1c5e      	adds	r6, r3, #1
 8017a62:	eb06 2313 	add.w	r3, r6, r3, lsr #8
 8017a66:	095b      	lsrs	r3, r3, #5
 8017a68:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8017a6c:	431a      	orrs	r2, r3
 8017a6e:	f8aa 2000 	strh.w	r2, [sl]
 8017a72:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8017a74:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 8017a76:	4413      	add	r3, r2
 8017a78:	932b      	str	r3, [sp, #172]	; 0xac
 8017a7a:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8017a7c:	441c      	add	r4, r3
 8017a7e:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8017a80:	3b01      	subs	r3, #1
 8017a82:	f10a 0a02 	add.w	sl, sl, #2
 8017a86:	9311      	str	r3, [sp, #68]	; 0x44
 8017a88:	e4ea      	b.n	8017460 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xd0>
 8017a8a:	b150      	cbz	r0, 8017aa2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x712>
 8017a8c:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8017a8e:	58aa      	ldr	r2, [r5, r2]
 8017a90:	9209      	str	r2, [sp, #36]	; 0x24
 8017a92:	ea4f 6812 	mov.w	r8, r2, lsr #24
 8017a96:	25ff      	movs	r5, #255	; 0xff
 8017a98:	46ac      	mov	ip, r5
 8017a9a:	e6ed      	b.n	8017878 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4e8>
 8017a9c:	25ff      	movs	r5, #255	; 0xff
 8017a9e:	46a8      	mov	r8, r5
 8017aa0:	e6ea      	b.n	8017878 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4e8>
 8017aa2:	25ff      	movs	r5, #255	; 0xff
 8017aa4:	46a8      	mov	r8, r5
 8017aa6:	e7f7      	b.n	8017a98 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x708>
 8017aa8:	b019      	add	sp, #100	; 0x64
 8017aaa:	ecbd 8b08 	vpop	{d8-d11}
 8017aae:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

08017ab4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>:
 8017ab4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017ab8:	8808      	ldrh	r0, [r1, #0]
 8017aba:	b085      	sub	sp, #20
 8017abc:	1206      	asrs	r6, r0, #8
 8017abe:	e9dd c40f 	ldrd	ip, r4, [sp, #60]	; 0x3c
 8017ac2:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8017ac6:	9600      	str	r6, [sp, #0]
 8017ac8:	10c6      	asrs	r6, r0, #3
 8017aca:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8017ace:	9601      	str	r6, [sp, #4]
 8017ad0:	00c0      	lsls	r0, r0, #3
 8017ad2:	fb04 c603 	mla	r6, r4, r3, ip
 8017ad6:	b2c0      	uxtb	r0, r0
 8017ad8:	4691      	mov	r9, r2
 8017ada:	eb02 0e86 	add.w	lr, r2, r6, lsl #2
 8017ade:	9a00      	ldr	r2, [sp, #0]
 8017ae0:	9002      	str	r0, [sp, #8]
 8017ae2:	f040 407f 	orr.w	r0, r0, #4278190080	; 0xff000000
 8017ae6:	ea40 4002 	orr.w	r0, r0, r2, lsl #16
 8017aea:	9a01      	ldr	r2, [sp, #4]
 8017aec:	f9bd 8038 	ldrsh.w	r8, [sp, #56]	; 0x38
 8017af0:	f89d 5044 	ldrb.w	r5, [sp, #68]	; 0x44
 8017af4:	f89d 7048 	ldrb.w	r7, [sp, #72]	; 0x48
 8017af8:	2c00      	cmp	r4, #0
 8017afa:	ea40 2002 	orr.w	r0, r0, r2, lsl #8
 8017afe:	db3a      	blt.n	8017b76 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xc2>
 8017b00:	45a0      	cmp	r8, r4
 8017b02:	dd38      	ble.n	8017b76 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xc2>
 8017b04:	f1bc 0f00 	cmp.w	ip, #0
 8017b08:	db33      	blt.n	8017b72 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xbe>
 8017b0a:	4563      	cmp	r3, ip
 8017b0c:	dd31      	ble.n	8017b72 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xbe>
 8017b0e:	f859 2026 	ldr.w	r2, [r9, r6, lsl #2]
 8017b12:	f11c 0601 	adds.w	r6, ip, #1
 8017b16:	d431      	bmi.n	8017b7c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xc8>
 8017b18:	42b3      	cmp	r3, r6
 8017b1a:	dd2f      	ble.n	8017b7c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xc8>
 8017b1c:	b375      	cbz	r5, 8017b7c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xc8>
 8017b1e:	f8de 6004 	ldr.w	r6, [lr, #4]
 8017b22:	3401      	adds	r4, #1
 8017b24:	d42e      	bmi.n	8017b84 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xd0>
 8017b26:	45a0      	cmp	r8, r4
 8017b28:	dd2c      	ble.n	8017b84 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xd0>
 8017b2a:	b35f      	cbz	r7, 8017b84 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xd0>
 8017b2c:	f1bc 0f00 	cmp.w	ip, #0
 8017b30:	db26      	blt.n	8017b80 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xcc>
 8017b32:	4563      	cmp	r3, ip
 8017b34:	dd24      	ble.n	8017b80 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xcc>
 8017b36:	f85e 4023 	ldr.w	r4, [lr, r3, lsl #2]
 8017b3a:	f11c 0c01 	adds.w	ip, ip, #1
 8017b3e:	d405      	bmi.n	8017b4c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x98>
 8017b40:	4563      	cmp	r3, ip
 8017b42:	dd03      	ble.n	8017b4c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x98>
 8017b44:	b115      	cbz	r5, 8017b4c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x98>
 8017b46:	3301      	adds	r3, #1
 8017b48:	f85e 0023 	ldr.w	r0, [lr, r3, lsl #2]
 8017b4c:	2d0f      	cmp	r5, #15
 8017b4e:	ea4f 6b12 	mov.w	fp, r2, lsr #24
 8017b52:	ea4f 6a16 	mov.w	sl, r6, lsr #24
 8017b56:	ea4f 6914 	mov.w	r9, r4, lsr #24
 8017b5a:	ea4f 6810 	mov.w	r8, r0, lsr #24
 8017b5e:	d801      	bhi.n	8017b64 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xb0>
 8017b60:	2f0f      	cmp	r7, #15
 8017b62:	d911      	bls.n	8017b88 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xd4>
 8017b64:	4b7b      	ldr	r3, [pc, #492]	; (8017d54 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x2a0>)
 8017b66:	4a7c      	ldr	r2, [pc, #496]	; (8017d58 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x2a4>)
 8017b68:	487c      	ldr	r0, [pc, #496]	; (8017d5c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x2a8>)
 8017b6a:	f240 210d 	movw	r1, #525	; 0x20d
 8017b6e:	f001 fd05 	bl	801957c <__assert_func>
 8017b72:	4602      	mov	r2, r0
 8017b74:	e7cd      	b.n	8017b12 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x5e>
 8017b76:	4606      	mov	r6, r0
 8017b78:	4602      	mov	r2, r0
 8017b7a:	e7d2      	b.n	8017b22 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x6e>
 8017b7c:	4606      	mov	r6, r0
 8017b7e:	e7d0      	b.n	8017b22 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x6e>
 8017b80:	4604      	mov	r4, r0
 8017b82:	e7da      	b.n	8017b3a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x86>
 8017b84:	4604      	mov	r4, r0
 8017b86:	e7e1      	b.n	8017b4c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x98>
 8017b88:	b2ab      	uxth	r3, r5
 8017b8a:	b2bf      	uxth	r7, r7
 8017b8c:	fb03 fe07 	mul.w	lr, r3, r7
 8017b90:	ebce 1707 	rsb	r7, lr, r7, lsl #4
 8017b94:	011b      	lsls	r3, r3, #4
 8017b96:	eba3 0c0e 	sub.w	ip, r3, lr
 8017b9a:	b2bf      	uxth	r7, r7
 8017b9c:	f5c3 7580 	rsb	r5, r3, #256	; 0x100
 8017ba0:	fa1f fc8c 	uxth.w	ip, ip
 8017ba4:	1bed      	subs	r5, r5, r7
 8017ba6:	b2ad      	uxth	r5, r5
 8017ba8:	fb0c f30a 	mul.w	r3, ip, sl
 8017bac:	fb05 330b 	mla	r3, r5, fp, r3
 8017bb0:	fb07 3309 	mla	r3, r7, r9, r3
 8017bb4:	fb0e 3308 	mla	r3, lr, r8, r3
 8017bb8:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8017bbc:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 8017bc0:	9303      	str	r3, [sp, #12]
 8017bc2:	d018      	beq.n	8017bf6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x142>
 8017bc4:	f002 13ff 	and.w	r3, r2, #16711935	; 0xff00ff
 8017bc8:	fb0b f303 	mul.w	r3, fp, r3
 8017bcc:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8017bd0:	fb0b fb02 	mul.w	fp, fp, r2
 8017bd4:	0a1a      	lsrs	r2, r3, #8
 8017bd6:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8017bda:	f103 1301 	add.w	r3, r3, #65537	; 0x10001
 8017bde:	441a      	add	r2, r3
 8017be0:	f50b 7380 	add.w	r3, fp, #256	; 0x100
 8017be4:	eb03 231b 	add.w	r3, r3, fp, lsr #8
 8017be8:	0a12      	lsrs	r2, r2, #8
 8017bea:	0a1b      	lsrs	r3, r3, #8
 8017bec:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8017bf0:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8017bf4:	431a      	orrs	r2, r3
 8017bf6:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 8017bfa:	d019      	beq.n	8017c30 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x17c>
 8017bfc:	f006 1bff 	and.w	fp, r6, #16711935	; 0xff00ff
 8017c00:	fb0a fb0b 	mul.w	fp, sl, fp
 8017c04:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8017c08:	fb0a fa06 	mul.w	sl, sl, r6
 8017c0c:	ea4f 261b 	mov.w	r6, fp, lsr #8
 8017c10:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8017c14:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8017c18:	f50a 7380 	add.w	r3, sl, #256	; 0x100
 8017c1c:	445e      	add	r6, fp
 8017c1e:	eb03 231a 	add.w	r3, r3, sl, lsr #8
 8017c22:	0a36      	lsrs	r6, r6, #8
 8017c24:	0a1b      	lsrs	r3, r3, #8
 8017c26:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8017c2a:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8017c2e:	431e      	orrs	r6, r3
 8017c30:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8017c34:	d019      	beq.n	8017c6a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x1b6>
 8017c36:	f004 1aff 	and.w	sl, r4, #16711935	; 0xff00ff
 8017c3a:	fb09 fa0a 	mul.w	sl, r9, sl
 8017c3e:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 8017c42:	fb09 f904 	mul.w	r9, r9, r4
 8017c46:	ea4f 241a 	mov.w	r4, sl, lsr #8
 8017c4a:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8017c4e:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8017c52:	f509 7380 	add.w	r3, r9, #256	; 0x100
 8017c56:	4454      	add	r4, sl
 8017c58:	eb03 2319 	add.w	r3, r3, r9, lsr #8
 8017c5c:	0a24      	lsrs	r4, r4, #8
 8017c5e:	0a1b      	lsrs	r3, r3, #8
 8017c60:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8017c64:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8017c68:	431c      	orrs	r4, r3
 8017c6a:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8017c6e:	d019      	beq.n	8017ca4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x1f0>
 8017c70:	f000 19ff 	and.w	r9, r0, #16711935	; 0xff00ff
 8017c74:	fb08 f909 	mul.w	r9, r8, r9
 8017c78:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8017c7c:	fb08 f800 	mul.w	r8, r8, r0
 8017c80:	ea4f 2019 	mov.w	r0, r9, lsr #8
 8017c84:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 8017c88:	f109 1901 	add.w	r9, r9, #65537	; 0x10001
 8017c8c:	f508 7380 	add.w	r3, r8, #256	; 0x100
 8017c90:	4448      	add	r0, r9
 8017c92:	eb03 2318 	add.w	r3, r3, r8, lsr #8
 8017c96:	0a00      	lsrs	r0, r0, #8
 8017c98:	0a1b      	lsrs	r3, r3, #8
 8017c9a:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 8017c9e:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8017ca2:	4318      	orrs	r0, r3
 8017ca4:	f006 18ff 	and.w	r8, r6, #16711935	; 0xff00ff
 8017ca8:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8017cac:	f002 13ff 	and.w	r3, r2, #16711935	; 0xff00ff
 8017cb0:	fb0c f808 	mul.w	r8, ip, r8
 8017cb4:	fb0c f606 	mul.w	r6, ip, r6
 8017cb8:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8017cbc:	fb05 8803 	mla	r8, r5, r3, r8
 8017cc0:	fb05 6202 	mla	r2, r5, r2, r6
 8017cc4:	f004 13ff 	and.w	r3, r4, #16711935	; 0xff00ff
 8017cc8:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 8017ccc:	fb07 8803 	mla	r8, r7, r3, r8
 8017cd0:	fb07 2704 	mla	r7, r7, r4, r2
 8017cd4:	f000 13ff 	and.w	r3, r0, #16711935	; 0xff00ff
 8017cd8:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8017cdc:	fb0e 8303 	mla	r3, lr, r3, r8
 8017ce0:	fb0e 7e00 	mla	lr, lr, r0, r7
 8017ce4:	0a1b      	lsrs	r3, r3, #8
 8017ce6:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8017cea:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8017cee:	f40e 4e7f 	and.w	lr, lr, #65280	; 0xff00
 8017cf2:	ea43 0e0e 	orr.w	lr, r3, lr
 8017cf6:	9b03      	ldr	r3, [sp, #12]
 8017cf8:	9800      	ldr	r0, [sp, #0]
 8017cfa:	9c01      	ldr	r4, [sp, #4]
 8017cfc:	9a02      	ldr	r2, [sp, #8]
 8017cfe:	43db      	mvns	r3, r3
 8017d00:	b2db      	uxtb	r3, r3
 8017d02:	4358      	muls	r0, r3
 8017d04:	435c      	muls	r4, r3
 8017d06:	435a      	muls	r2, r3
 8017d08:	1c43      	adds	r3, r0, #1
 8017d0a:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8017d0e:	ea4f 431e 	mov.w	r3, lr, lsr #16
 8017d12:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8017d16:	4b12      	ldr	r3, [pc, #72]	; (8017d60 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x2ac>)
 8017d18:	ea03 2300 	and.w	r3, r3, r0, lsl #8
 8017d1c:	1c50      	adds	r0, r2, #1
 8017d1e:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 8017d22:	fa5f f28e 	uxtb.w	r2, lr
 8017d26:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 8017d2a:	ea43 03d2 	orr.w	r3, r3, r2, lsr #3
 8017d2e:	1c62      	adds	r2, r4, #1
 8017d30:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 8017d34:	f3ce 2e07 	ubfx	lr, lr, #8, #8
 8017d38:	eb0e 2e12 	add.w	lr, lr, r2, lsr #8
 8017d3c:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8017d40:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 8017d44:	ea43 0e0e 	orr.w	lr, r3, lr
 8017d48:	f8a1 e000 	strh.w	lr, [r1]
 8017d4c:	b005      	add	sp, #20
 8017d4e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017d52:	bf00      	nop
 8017d54:	0801d2ad 	.word	0x0801d2ad
 8017d58:	0801d805 	.word	0x0801d805
 8017d5c:	0801d335 	.word	0x0801d335
 8017d60:	fffff800 	.word	0xfffff800

08017d64 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 8017d64:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017d68:	ed2d 8b08 	vpush	{d8-d11}
 8017d6c:	b097      	sub	sp, #92	; 0x5c
 8017d6e:	eeb0 aa40 	vmov.f32	s20, s0
 8017d72:	9306      	str	r3, [sp, #24]
 8017d74:	f9bd 30c0 	ldrsh.w	r3, [sp, #192]	; 0xc0
 8017d78:	9307      	str	r3, [sp, #28]
 8017d7a:	9214      	str	r2, [sp, #80]	; 0x50
 8017d7c:	f9bd 30c4 	ldrsh.w	r3, [sp, #196]	; 0xc4
 8017d80:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 8017d82:	9112      	str	r1, [sp, #72]	; 0x48
 8017d84:	9310      	str	r3, [sp, #64]	; 0x40
 8017d86:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	; 0xb8
 8017d8a:	9015      	str	r0, [sp, #84]	; 0x54
 8017d8c:	6850      	ldr	r0, [r2, #4]
 8017d8e:	6812      	ldr	r2, [r2, #0]
 8017d90:	9d2a      	ldr	r5, [sp, #168]	; 0xa8
 8017d92:	fb00 1303 	mla	r3, r0, r3, r1
 8017d96:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8017d9a:	930a      	str	r3, [sp, #40]	; 0x28
 8017d9c:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 8017d9e:	681b      	ldr	r3, [r3, #0]
 8017da0:	9311      	str	r3, [sp, #68]	; 0x44
 8017da2:	9b07      	ldr	r3, [sp, #28]
 8017da4:	009b      	lsls	r3, r3, #2
 8017da6:	eef0 9a60 	vmov.f32	s19, s1
 8017daa:	eeb0 9a41 	vmov.f32	s18, s2
 8017dae:	eeb0 8a62 	vmov.f32	s16, s5
 8017db2:	eef0 8a43 	vmov.f32	s17, s6
 8017db6:	eef0 ba44 	vmov.f32	s23, s8
 8017dba:	eeb0 ba64 	vmov.f32	s22, s9
 8017dbe:	eef0 aa45 	vmov.f32	s21, s10
 8017dc2:	930e      	str	r3, [sp, #56]	; 0x38
 8017dc4:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8017dc6:	2b00      	cmp	r3, #0
 8017dc8:	dc03      	bgt.n	8017dd2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6e>
 8017dca:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8017dcc:	2b00      	cmp	r3, #0
 8017dce:	f340 8361 	ble.w	8018494 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x730>
 8017dd2:	9b06      	ldr	r3, [sp, #24]
 8017dd4:	2b00      	cmp	r3, #0
 8017dd6:	f340 819b 	ble.w	8018110 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3ac>
 8017dda:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8017ddc:	1412      	asrs	r2, r2, #16
 8017dde:	ea4f 4325 	mov.w	r3, r5, asr #16
 8017de2:	d42e      	bmi.n	8017e42 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xde>
 8017de4:	9807      	ldr	r0, [sp, #28]
 8017de6:	1c51      	adds	r1, r2, #1
 8017de8:	4288      	cmp	r0, r1
 8017dea:	dd2d      	ble.n	8017e48 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe4>
 8017dec:	2b00      	cmp	r3, #0
 8017dee:	db2b      	blt.n	8017e48 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe4>
 8017df0:	9810      	ldr	r0, [sp, #64]	; 0x40
 8017df2:	1c59      	adds	r1, r3, #1
 8017df4:	4288      	cmp	r0, r1
 8017df6:	dd27      	ble.n	8017e48 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe4>
 8017df8:	9b06      	ldr	r3, [sp, #24]
 8017dfa:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 8017dfc:	9929      	ldr	r1, [sp, #164]	; 0xa4
 8017dfe:	3b01      	subs	r3, #1
 8017e00:	fb02 1203 	mla	r2, r2, r3, r1
 8017e04:	1412      	asrs	r2, r2, #16
 8017e06:	d42a      	bmi.n	8017e5e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfa>
 8017e08:	9907      	ldr	r1, [sp, #28]
 8017e0a:	3201      	adds	r2, #1
 8017e0c:	4291      	cmp	r1, r2
 8017e0e:	dd26      	ble.n	8017e5e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfa>
 8017e10:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 8017e12:	fb02 5303 	mla	r3, r2, r3, r5
 8017e16:	141b      	asrs	r3, r3, #16
 8017e18:	d421      	bmi.n	8017e5e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfa>
 8017e1a:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8017e1c:	3301      	adds	r3, #1
 8017e1e:	429a      	cmp	r2, r3
 8017e20:	dd1d      	ble.n	8017e5e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfa>
 8017e22:	9b06      	ldr	r3, [sp, #24]
 8017e24:	f8dd a028 	ldr.w	sl, [sp, #40]	; 0x28
 8017e28:	9313      	str	r3, [sp, #76]	; 0x4c
 8017e2a:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8017e2c:	2b00      	cmp	r3, #0
 8017e2e:	f300 81e3 	bgt.w	80181f8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x494>
 8017e32:	9b06      	ldr	r3, [sp, #24]
 8017e34:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8017e38:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8017e3a:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 8017e3e:	930a      	str	r3, [sp, #40]	; 0x28
 8017e40:	e168      	b.n	8018114 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3b0>
 8017e42:	1c51      	adds	r1, r2, #1
 8017e44:	f040 8157 	bne.w	80180f6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x392>
 8017e48:	9907      	ldr	r1, [sp, #28]
 8017e4a:	428a      	cmp	r2, r1
 8017e4c:	f280 8153 	bge.w	80180f6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x392>
 8017e50:	1c5f      	adds	r7, r3, #1
 8017e52:	f2c0 8150 	blt.w	80180f6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x392>
 8017e56:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8017e58:	4293      	cmp	r3, r2
 8017e5a:	f280 814c 	bge.w	80180f6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x392>
 8017e5e:	9b06      	ldr	r3, [sp, #24]
 8017e60:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8017e62:	9313      	str	r3, [sp, #76]	; 0x4c
 8017e64:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8017e66:	2b00      	cmp	r3, #0
 8017e68:	dde3      	ble.n	8017e32 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xce>
 8017e6a:	9929      	ldr	r1, [sp, #164]	; 0xa4
 8017e6c:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8017e6e:	1409      	asrs	r1, r1, #16
 8017e70:	ea4f 4325 	mov.w	r3, r5, asr #16
 8017e74:	f3c2 3203 	ubfx	r2, r2, #12, #4
 8017e78:	f3c5 3003 	ubfx	r0, r5, #12, #4
 8017e7c:	f100 81a3 	bmi.w	80181c6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x462>
 8017e80:	9c07      	ldr	r4, [sp, #28]
 8017e82:	1c4e      	adds	r6, r1, #1
 8017e84:	42b4      	cmp	r4, r6
 8017e86:	f340 81a0 	ble.w	80181ca <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x466>
 8017e8a:	2b00      	cmp	r3, #0
 8017e8c:	f2c0 819d 	blt.w	80181ca <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x466>
 8017e90:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8017e92:	1c5e      	adds	r6, r3, #1
 8017e94:	42b4      	cmp	r4, r6
 8017e96:	f340 8198 	ble.w	80181ca <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x466>
 8017e9a:	9c07      	ldr	r4, [sp, #28]
 8017e9c:	fb03 1304 	mla	r3, r3, r4, r1
 8017ea0:	9911      	ldr	r1, [sp, #68]	; 0x44
 8017ea2:	eb01 0683 	add.w	r6, r1, r3, lsl #2
 8017ea6:	f851 3023 	ldr.w	r3, [r1, r3, lsl #2]
 8017eaa:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 8017eae:	2a00      	cmp	r2, #0
 8017eb0:	f000 816f 	beq.w	8018192 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x42e>
 8017eb4:	6871      	ldr	r1, [r6, #4]
 8017eb6:	910b      	str	r1, [sp, #44]	; 0x2c
 8017eb8:	ea4f 6811 	mov.w	r8, r1, lsr #24
 8017ebc:	2800      	cmp	r0, #0
 8017ebe:	f000 8171 	beq.w	80181a4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x440>
 8017ec2:	990e      	ldr	r1, [sp, #56]	; 0x38
 8017ec4:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8017ec6:	1871      	adds	r1, r6, r1
 8017ec8:	5934      	ldr	r4, [r6, r4]
 8017eca:	6849      	ldr	r1, [r1, #4]
 8017ecc:	9408      	str	r4, [sp, #32]
 8017ece:	ea4f 6a14 	mov.w	sl, r4, lsr #24
 8017ed2:	910c      	str	r1, [sp, #48]	; 0x30
 8017ed4:	0e0e      	lsrs	r6, r1, #24
 8017ed6:	b292      	uxth	r2, r2
 8017ed8:	b280      	uxth	r0, r0
 8017eda:	fb02 fb00 	mul.w	fp, r2, r0
 8017ede:	ebcb 1000 	rsb	r0, fp, r0, lsl #4
 8017ee2:	0112      	lsls	r2, r2, #4
 8017ee4:	eba2 090b 	sub.w	r9, r2, fp
 8017ee8:	b280      	uxth	r0, r0
 8017eea:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 8017eee:	fa1f f989 	uxth.w	r9, r9
 8017ef2:	1a09      	subs	r1, r1, r0
 8017ef4:	b289      	uxth	r1, r1
 8017ef6:	fb09 f208 	mul.w	r2, r9, r8
 8017efa:	fb01 220c 	mla	r2, r1, ip, r2
 8017efe:	fb00 220a 	mla	r2, r0, sl, r2
 8017f02:	fb0b 2206 	mla	r2, fp, r6, r2
 8017f06:	f3c2 2207 	ubfx	r2, r2, #8, #8
 8017f0a:	2a00      	cmp	r2, #0
 8017f0c:	f000 80e8 	beq.w	80180e0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x37c>
 8017f10:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8017f14:	d01b      	beq.n	8017f4e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1ea>
 8017f16:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 8017f1a:	fb0c fe0e 	mul.w	lr, ip, lr
 8017f1e:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8017f22:	fb0c fc03 	mul.w	ip, ip, r3
 8017f26:	ea4f 231e 	mov.w	r3, lr, lsr #8
 8017f2a:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8017f2e:	f10e 1e01 	add.w	lr, lr, #65537	; 0x10001
 8017f32:	4473      	add	r3, lr
 8017f34:	f50c 7e80 	add.w	lr, ip, #256	; 0x100
 8017f38:	eb0e 2e1c 	add.w	lr, lr, ip, lsr #8
 8017f3c:	0a1b      	lsrs	r3, r3, #8
 8017f3e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8017f42:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8017f46:	f40e 4e7f 	and.w	lr, lr, #65280	; 0xff00
 8017f4a:	ea43 030e 	orr.w	r3, r3, lr
 8017f4e:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8017f52:	d01e      	beq.n	8017f92 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x22e>
 8017f54:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8017f56:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8017f5a:	fb08 fc0c 	mul.w	ip, r8, ip
 8017f5e:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
 8017f62:	fb08 f80e 	mul.w	r8, r8, lr
 8017f66:	ea4f 2e1c 	mov.w	lr, ip, lsr #8
 8017f6a:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8017f6e:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8017f72:	44e6      	add	lr, ip
 8017f74:	f508 7c80 	add.w	ip, r8, #256	; 0x100
 8017f78:	eb0c 2818 	add.w	r8, ip, r8, lsr #8
 8017f7c:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8017f80:	ea4f 2818 	mov.w	r8, r8, lsr #8
 8017f84:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8017f88:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 8017f8c:	ea4e 0408 	orr.w	r4, lr, r8
 8017f90:	940b      	str	r4, [sp, #44]	; 0x2c
 8017f92:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 8017f96:	d01e      	beq.n	8017fd6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x272>
 8017f98:	9c08      	ldr	r4, [sp, #32]
 8017f9a:	f004 18ff 	and.w	r8, r4, #16711935	; 0xff00ff
 8017f9e:	fb0a f808 	mul.w	r8, sl, r8
 8017fa2:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 8017fa6:	fb0a fa0c 	mul.w	sl, sl, ip
 8017faa:	ea4f 2e18 	mov.w	lr, r8, lsr #8
 8017fae:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8017fb2:	f108 1801 	add.w	r8, r8, #65537	; 0x10001
 8017fb6:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8017fba:	44c6      	add	lr, r8
 8017fbc:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8017fc0:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8017fc4:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8017fc8:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8017fcc:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8017fd0:	ea4e 040a 	orr.w	r4, lr, sl
 8017fd4:	9408      	str	r4, [sp, #32]
 8017fd6:	2eff      	cmp	r6, #255	; 0xff
 8017fd8:	d01d      	beq.n	8018016 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2b2>
 8017fda:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8017fdc:	f004 18ff 	and.w	r8, r4, #16711935	; 0xff00ff
 8017fe0:	fb06 f808 	mul.w	r8, r6, r8
 8017fe4:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 8017fe8:	fb06 f60c 	mul.w	r6, r6, ip
 8017fec:	ea4f 2e18 	mov.w	lr, r8, lsr #8
 8017ff0:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8017ff4:	f108 1801 	add.w	r8, r8, #65537	; 0x10001
 8017ff8:	f506 7c80 	add.w	ip, r6, #256	; 0x100
 8017ffc:	44c6      	add	lr, r8
 8017ffe:	eb0c 2616 	add.w	r6, ip, r6, lsr #8
 8018002:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8018006:	0a36      	lsrs	r6, r6, #8
 8018008:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801800c:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8018010:	ea4e 0406 	orr.w	r4, lr, r6
 8018014:	940c      	str	r4, [sp, #48]	; 0x30
 8018016:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8018018:	f004 16ff 	and.w	r6, r4, #16711935	; 0xff00ff
 801801c:	9c08      	ldr	r4, [sp, #32]
 801801e:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 8018022:	fb09 f606 	mul.w	r6, r9, r6
 8018026:	fb01 660c 	mla	r6, r1, ip, r6
 801802a:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801802e:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8018030:	fb00 660c 	mla	r6, r0, ip, r6
 8018034:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8018038:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801803a:	fb0b 660c 	mla	r6, fp, ip, r6
 801803e:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 8018042:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8018046:	fb09 f90c 	mul.w	r9, r9, ip
 801804a:	fb01 9303 	mla	r3, r1, r3, r9
 801804e:	9908      	ldr	r1, [sp, #32]
 8018050:	f401 4e7f 	and.w	lr, r1, #65280	; 0xff00
 8018054:	990c      	ldr	r1, [sp, #48]	; 0x30
 8018056:	fb00 330e 	mla	r3, r0, lr, r3
 801805a:	f401 407f 	and.w	r0, r1, #65280	; 0xff00
 801805e:	fb0b 3b00 	mla	fp, fp, r0, r3
 8018062:	0a36      	lsrs	r6, r6, #8
 8018064:	ea4f 2b1b 	mov.w	fp, fp, lsr #8
 8018068:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 801806c:	f40b 4b7f 	and.w	fp, fp, #65280	; 0xff00
 8018070:	ea46 060b 	orr.w	r6, r6, fp
 8018074:	2aff      	cmp	r2, #255	; 0xff
 8018076:	ea4f 2316 	mov.w	r3, r6, lsr #8
 801807a:	f000 8099 	beq.w	80181b0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x44c>
 801807e:	8839      	ldrh	r1, [r7, #0]
 8018080:	43d2      	mvns	r2, r2
 8018082:	ea4f 2c21 	mov.w	ip, r1, asr #8
 8018086:	fa5f fe82 	uxtb.w	lr, r2
 801808a:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801808e:	fb0c fc0e 	mul.w	ip, ip, lr
 8018092:	10c8      	asrs	r0, r1, #3
 8018094:	00ca      	lsls	r2, r1, #3
 8018096:	f10c 0101 	add.w	r1, ip, #1
 801809a:	eb01 211c 	add.w	r1, r1, ip, lsr #8
 801809e:	ea4f 4c16 	mov.w	ip, r6, lsr #16
 80180a2:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 80180a6:	b2d2      	uxtb	r2, r2
 80180a8:	4952      	ldr	r1, [pc, #328]	; (80181f4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x490>)
 80180aa:	fb02 f20e 	mul.w	r2, r2, lr
 80180ae:	ea01 2c0c 	and.w	ip, r1, ip, lsl #8
 80180b2:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 80180b6:	1c51      	adds	r1, r2, #1
 80180b8:	fb00 f00e 	mul.w	r0, r0, lr
 80180bc:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 80180c0:	b2f6      	uxtb	r6, r6
 80180c2:	eb06 2612 	add.w	r6, r6, r2, lsr #8
 80180c6:	1c42      	adds	r2, r0, #1
 80180c8:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 80180cc:	b2db      	uxtb	r3, r3
 80180ce:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 80180d2:	00db      	lsls	r3, r3, #3
 80180d4:	ea4c 06d6 	orr.w	r6, ip, r6, lsr #3
 80180d8:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80180dc:	431e      	orrs	r6, r3
 80180de:	803e      	strh	r6, [r7, #0]
 80180e0:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 80180e2:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 80180e4:	441a      	add	r2, r3
 80180e6:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80180e8:	9229      	str	r2, [sp, #164]	; 0xa4
 80180ea:	441d      	add	r5, r3
 80180ec:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 80180ee:	3b01      	subs	r3, #1
 80180f0:	3702      	adds	r7, #2
 80180f2:	9313      	str	r3, [sp, #76]	; 0x4c
 80180f4:	e6b6      	b.n	8017e64 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x100>
 80180f6:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 80180f8:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 80180fa:	441a      	add	r2, r3
 80180fc:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80180fe:	9229      	str	r2, [sp, #164]	; 0xa4
 8018100:	441d      	add	r5, r3
 8018102:	9b06      	ldr	r3, [sp, #24]
 8018104:	3b01      	subs	r3, #1
 8018106:	9306      	str	r3, [sp, #24]
 8018108:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801810a:	3302      	adds	r3, #2
 801810c:	930a      	str	r3, [sp, #40]	; 0x28
 801810e:	e660      	b.n	8017dd2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6e>
 8018110:	f47f ae72 	bne.w	8017df8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x94>
 8018114:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8018116:	2b00      	cmp	r3, #0
 8018118:	f340 81bc 	ble.w	8018494 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x730>
 801811c:	ee3a aa2b 	vadd.f32	s20, s20, s23
 8018120:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8018124:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 8018128:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801812a:	ee79 9a8b 	vadd.f32	s19, s19, s22
 801812e:	ee39 9a2a 	vadd.f32	s18, s18, s21
 8018132:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8018136:	eef0 6a48 	vmov.f32	s13, s16
 801813a:	ee69 7a27 	vmul.f32	s15, s18, s15
 801813e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8018142:	ee37 8a48 	vsub.f32	s16, s14, s16
 8018146:	edcd 6a29 	vstr	s13, [sp, #164]	; 0xa4
 801814a:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 801814e:	eef0 6a68 	vmov.f32	s13, s17
 8018152:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8018156:	ee18 2a10 	vmov	r2, s16
 801815a:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 801815e:	fb92 f3f3 	sdiv	r3, r2, r3
 8018162:	ee18 2a90 	vmov	r2, s17
 8018166:	932b      	str	r3, [sp, #172]	; 0xac
 8018168:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801816a:	fb92 f3f3 	sdiv	r3, r2, r3
 801816e:	932c      	str	r3, [sp, #176]	; 0xb0
 8018170:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8018172:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8018174:	3b01      	subs	r3, #1
 8018176:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801817a:	9312      	str	r3, [sp, #72]	; 0x48
 801817c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801817e:	bf08      	it	eq
 8018180:	4613      	moveq	r3, r2
 8018182:	ee16 5a90 	vmov	r5, s13
 8018186:	9306      	str	r3, [sp, #24]
 8018188:	eef0 8a67 	vmov.f32	s17, s15
 801818c:	eeb0 8a47 	vmov.f32	s16, s14
 8018190:	e618      	b.n	8017dc4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x60>
 8018192:	b150      	cbz	r0, 80181aa <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x446>
 8018194:	990e      	ldr	r1, [sp, #56]	; 0x38
 8018196:	5871      	ldr	r1, [r6, r1]
 8018198:	9108      	str	r1, [sp, #32]
 801819a:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 801819e:	26ff      	movs	r6, #255	; 0xff
 80181a0:	46b0      	mov	r8, r6
 80181a2:	e698      	b.n	8017ed6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x172>
 80181a4:	26ff      	movs	r6, #255	; 0xff
 80181a6:	46b2      	mov	sl, r6
 80181a8:	e695      	b.n	8017ed6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x172>
 80181aa:	26ff      	movs	r6, #255	; 0xff
 80181ac:	46b2      	mov	sl, r6
 80181ae:	e7f7      	b.n	80181a0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x43c>
 80181b0:	0972      	lsrs	r2, r6, #5
 80181b2:	f423 63ff 	bic.w	r3, r3, #2040	; 0x7f8
 80181b6:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80181ba:	f023 0307 	bic.w	r3, r3, #7
 80181be:	4313      	orrs	r3, r2
 80181c0:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 80181c4:	e78a      	b.n	80180dc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x378>
 80181c6:	1c4e      	adds	r6, r1, #1
 80181c8:	d18a      	bne.n	80180e0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x37c>
 80181ca:	9c07      	ldr	r4, [sp, #28]
 80181cc:	428c      	cmp	r4, r1
 80181ce:	dd87      	ble.n	80180e0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x37c>
 80181d0:	1c5c      	adds	r4, r3, #1
 80181d2:	db85      	blt.n	80180e0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x37c>
 80181d4:	9c10      	ldr	r4, [sp, #64]	; 0x40
 80181d6:	429c      	cmp	r4, r3
 80181d8:	dd82      	ble.n	80180e0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x37c>
 80181da:	e9cd 2003 	strd	r2, r0, [sp, #12]
 80181de:	e9cd 1301 	strd	r1, r3, [sp, #4]
 80181e2:	9400      	str	r4, [sp, #0]
 80181e4:	9b07      	ldr	r3, [sp, #28]
 80181e6:	9a11      	ldr	r2, [sp, #68]	; 0x44
 80181e8:	9815      	ldr	r0, [sp, #84]	; 0x54
 80181ea:	4639      	mov	r1, r7
 80181ec:	f7ff fc62 	bl	8017ab4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>
 80181f0:	e776      	b.n	80180e0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x37c>
 80181f2:	bf00      	nop
 80181f4:	fffff800 	.word	0xfffff800
 80181f8:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80181fa:	9929      	ldr	r1, [sp, #164]	; 0xa4
 80181fc:	9c07      	ldr	r4, [sp, #28]
 80181fe:	1409      	asrs	r1, r1, #16
 8018200:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8018204:	142b      	asrs	r3, r5, #16
 8018206:	fb04 1303 	mla	r3, r4, r3, r1
 801820a:	9911      	ldr	r1, [sp, #68]	; 0x44
 801820c:	eb01 0683 	add.w	r6, r1, r3, lsl #2
 8018210:	f851 3023 	ldr.w	r3, [r1, r3, lsl #2]
 8018214:	f3c5 3003 	ubfx	r0, r5, #12, #4
 8018218:	0e1f      	lsrs	r7, r3, #24
 801821a:	2a00      	cmp	r2, #0
 801821c:	f000 811d 	beq.w	801845a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6f6>
 8018220:	6871      	ldr	r1, [r6, #4]
 8018222:	910d      	str	r1, [sp, #52]	; 0x34
 8018224:	ea4f 6e11 	mov.w	lr, r1, lsr #24
 8018228:	2800      	cmp	r0, #0
 801822a:	f000 811f 	beq.w	801846c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x708>
 801822e:	990e      	ldr	r1, [sp, #56]	; 0x38
 8018230:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8018232:	1871      	adds	r1, r6, r1
 8018234:	5934      	ldr	r4, [r6, r4]
 8018236:	6849      	ldr	r1, [r1, #4]
 8018238:	9409      	str	r4, [sp, #36]	; 0x24
 801823a:	ea4f 6914 	mov.w	r9, r4, lsr #24
 801823e:	910f      	str	r1, [sp, #60]	; 0x3c
 8018240:	0e0e      	lsrs	r6, r1, #24
 8018242:	b292      	uxth	r2, r2
 8018244:	b280      	uxth	r0, r0
 8018246:	fb02 fb00 	mul.w	fp, r2, r0
 801824a:	ebcb 1000 	rsb	r0, fp, r0, lsl #4
 801824e:	0112      	lsls	r2, r2, #4
 8018250:	eba2 080b 	sub.w	r8, r2, fp
 8018254:	b280      	uxth	r0, r0
 8018256:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 801825a:	fa1f f888 	uxth.w	r8, r8
 801825e:	1a09      	subs	r1, r1, r0
 8018260:	b289      	uxth	r1, r1
 8018262:	fb08 f20e 	mul.w	r2, r8, lr
 8018266:	fb01 2207 	mla	r2, r1, r7, r2
 801826a:	fb00 2209 	mla	r2, r0, r9, r2
 801826e:	fb0b 2206 	mla	r2, fp, r6, r2
 8018272:	f3c2 2207 	ubfx	r2, r2, #8, #8
 8018276:	2a00      	cmp	r2, #0
 8018278:	f000 80e3 	beq.w	8018442 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6de>
 801827c:	2fff      	cmp	r7, #255	; 0xff
 801827e:	d01a      	beq.n	80182b6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x552>
 8018280:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 8018284:	fb07 fc0c 	mul.w	ip, r7, ip
 8018288:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801828c:	435f      	muls	r7, r3
 801828e:	ea4f 231c 	mov.w	r3, ip, lsr #8
 8018292:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8018296:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801829a:	4463      	add	r3, ip
 801829c:	f507 7c80 	add.w	ip, r7, #256	; 0x100
 80182a0:	eb0c 2c17 	add.w	ip, ip, r7, lsr #8
 80182a4:	0a1b      	lsrs	r3, r3, #8
 80182a6:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80182aa:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80182ae:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 80182b2:	ea43 030c 	orr.w	r3, r3, ip
 80182b6:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 80182ba:	d01e      	beq.n	80182fa <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x596>
 80182bc:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 80182be:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 80182c2:	fb0e f707 	mul.w	r7, lr, r7
 80182c6:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 80182ca:	fb0e fe0c 	mul.w	lr, lr, ip
 80182ce:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80182d2:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80182d6:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 80182da:	44bc      	add	ip, r7
 80182dc:	f50e 7780 	add.w	r7, lr, #256	; 0x100
 80182e0:	eb07 2e1e 	add.w	lr, r7, lr, lsr #8
 80182e4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80182e8:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80182ec:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80182f0:	f40e 4e7f 	and.w	lr, lr, #65280	; 0xff00
 80182f4:	ea4c 040e 	orr.w	r4, ip, lr
 80182f8:	940d      	str	r4, [sp, #52]	; 0x34
 80182fa:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 80182fe:	d01e      	beq.n	801833e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x5da>
 8018300:	9c09      	ldr	r4, [sp, #36]	; 0x24
 8018302:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 8018306:	fb09 fe0e 	mul.w	lr, r9, lr
 801830a:	f404 477f 	and.w	r7, r4, #65280	; 0xff00
 801830e:	fb09 f907 	mul.w	r9, r9, r7
 8018312:	ea4f 2c1e 	mov.w	ip, lr, lsr #8
 8018316:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801831a:	f10e 1e01 	add.w	lr, lr, #65537	; 0x10001
 801831e:	f509 7780 	add.w	r7, r9, #256	; 0x100
 8018322:	44f4      	add	ip, lr
 8018324:	eb07 2919 	add.w	r9, r7, r9, lsr #8
 8018328:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801832c:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8018330:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8018334:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 8018338:	ea4c 0409 	orr.w	r4, ip, r9
 801833c:	9409      	str	r4, [sp, #36]	; 0x24
 801833e:	2eff      	cmp	r6, #255	; 0xff
 8018340:	d01c      	beq.n	801837c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x618>
 8018342:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8018344:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 8018348:	fb06 fe0e 	mul.w	lr, r6, lr
 801834c:	f404 477f 	and.w	r7, r4, #65280	; 0xff00
 8018350:	437e      	muls	r6, r7
 8018352:	ea4f 2c1e 	mov.w	ip, lr, lsr #8
 8018356:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801835a:	f10e 1e01 	add.w	lr, lr, #65537	; 0x10001
 801835e:	f506 7780 	add.w	r7, r6, #256	; 0x100
 8018362:	44f4      	add	ip, lr
 8018364:	eb07 2616 	add.w	r6, r7, r6, lsr #8
 8018368:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801836c:	0a36      	lsrs	r6, r6, #8
 801836e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8018372:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8018376:	ea4c 0406 	orr.w	r4, ip, r6
 801837a:	940f      	str	r4, [sp, #60]	; 0x3c
 801837c:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801837e:	f004 16ff 	and.w	r6, r4, #16711935	; 0xff00ff
 8018382:	9c09      	ldr	r4, [sp, #36]	; 0x24
 8018384:	f003 17ff 	and.w	r7, r3, #16711935	; 0xff00ff
 8018388:	fb08 f606 	mul.w	r6, r8, r6
 801838c:	fb01 6607 	mla	r6, r1, r7, r6
 8018390:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8018394:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8018396:	fb00 6607 	mla	r6, r0, r7, r6
 801839a:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801839e:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 80183a0:	fb0b 6607 	mla	r6, fp, r7, r6
 80183a4:	f404 477f 	and.w	r7, r4, #65280	; 0xff00
 80183a8:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80183ac:	fb08 f807 	mul.w	r8, r8, r7
 80183b0:	fb01 8303 	mla	r3, r1, r3, r8
 80183b4:	9909      	ldr	r1, [sp, #36]	; 0x24
 80183b6:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
 80183ba:	990f      	ldr	r1, [sp, #60]	; 0x3c
 80183bc:	fb00 330c 	mla	r3, r0, ip, r3
 80183c0:	f401 4e7f 	and.w	lr, r1, #65280	; 0xff00
 80183c4:	fb0b 3e0e 	mla	lr, fp, lr, r3
 80183c8:	0a36      	lsrs	r6, r6, #8
 80183ca:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80183ce:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 80183d2:	f40e 4e7f 	and.w	lr, lr, #65280	; 0xff00
 80183d6:	ea46 060e 	orr.w	r6, r6, lr
 80183da:	2aff      	cmp	r2, #255	; 0xff
 80183dc:	ea4f 2316 	mov.w	r3, r6, lsr #8
 80183e0:	d04a      	beq.n	8018478 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x714>
 80183e2:	f8ba 1000 	ldrh.w	r1, [sl]
 80183e6:	43d2      	mvns	r2, r2
 80183e8:	120f      	asrs	r7, r1, #8
 80183ea:	fa5f fc82 	uxtb.w	ip, r2
 80183ee:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 80183f2:	fb07 f70c 	mul.w	r7, r7, ip
 80183f6:	10c8      	asrs	r0, r1, #3
 80183f8:	00ca      	lsls	r2, r1, #3
 80183fa:	1c79      	adds	r1, r7, #1
 80183fc:	eb01 2117 	add.w	r1, r1, r7, lsr #8
 8018400:	0c37      	lsrs	r7, r6, #16
 8018402:	eb07 2711 	add.w	r7, r7, r1, lsr #8
 8018406:	b2d2      	uxtb	r2, r2
 8018408:	4925      	ldr	r1, [pc, #148]	; (80184a0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x73c>)
 801840a:	fb02 f20c 	mul.w	r2, r2, ip
 801840e:	ea01 2707 	and.w	r7, r1, r7, lsl #8
 8018412:	1c51      	adds	r1, r2, #1
 8018414:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8018418:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801841c:	b2f6      	uxtb	r6, r6
 801841e:	fb00 f00c 	mul.w	r0, r0, ip
 8018422:	eb06 2612 	add.w	r6, r6, r2, lsr #8
 8018426:	ea47 07d6 	orr.w	r7, r7, r6, lsr #3
 801842a:	1c46      	adds	r6, r0, #1
 801842c:	eb06 2010 	add.w	r0, r6, r0, lsr #8
 8018430:	b2de      	uxtb	r6, r3
 8018432:	eb06 2610 	add.w	r6, r6, r0, lsr #8
 8018436:	00f6      	lsls	r6, r6, #3
 8018438:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801843c:	4337      	orrs	r7, r6
 801843e:	f8aa 7000 	strh.w	r7, [sl]
 8018442:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8018444:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8018446:	441a      	add	r2, r3
 8018448:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801844a:	9229      	str	r2, [sp, #164]	; 0xa4
 801844c:	441d      	add	r5, r3
 801844e:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8018450:	3b01      	subs	r3, #1
 8018452:	f10a 0a02 	add.w	sl, sl, #2
 8018456:	9313      	str	r3, [sp, #76]	; 0x4c
 8018458:	e4e7      	b.n	8017e2a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xc6>
 801845a:	b150      	cbz	r0, 8018472 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x70e>
 801845c:	990e      	ldr	r1, [sp, #56]	; 0x38
 801845e:	5871      	ldr	r1, [r6, r1]
 8018460:	9109      	str	r1, [sp, #36]	; 0x24
 8018462:	ea4f 6911 	mov.w	r9, r1, lsr #24
 8018466:	26ff      	movs	r6, #255	; 0xff
 8018468:	46b6      	mov	lr, r6
 801846a:	e6ea      	b.n	8018242 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4de>
 801846c:	26ff      	movs	r6, #255	; 0xff
 801846e:	46b1      	mov	r9, r6
 8018470:	e6e7      	b.n	8018242 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4de>
 8018472:	26ff      	movs	r6, #255	; 0xff
 8018474:	46b1      	mov	r9, r6
 8018476:	e7f7      	b.n	8018468 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x704>
 8018478:	0972      	lsrs	r2, r6, #5
 801847a:	f423 63ff 	bic.w	r3, r3, #2040	; 0x7f8
 801847e:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8018482:	f023 0307 	bic.w	r3, r3, #7
 8018486:	4313      	orrs	r3, r2
 8018488:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 801848c:	431e      	orrs	r6, r3
 801848e:	f8aa 6000 	strh.w	r6, [sl]
 8018492:	e7d6      	b.n	8018442 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6de>
 8018494:	b017      	add	sp, #92	; 0x5c
 8018496:	ecbd 8b08 	vpop	{d8-d11}
 801849a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801849e:	bf00      	nop
 80184a0:	fffff800 	.word	0xfffff800

080184a4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>:
 80184a4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80184a8:	e9dd c40a 	ldrd	ip, r4, [sp, #40]	; 0x28
 80184ac:	2c00      	cmp	r4, #0
 80184ae:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 80184b2:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 80184b6:	f89d 5030 	ldrb.w	r5, [sp, #48]	; 0x30
 80184ba:	f89d 7034 	ldrb.w	r7, [sp, #52]	; 0x34
 80184be:	fb04 ce03 	mla	lr, r4, r3, ip
 80184c2:	db60      	blt.n	8018586 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xe2>
 80184c4:	45a1      	cmp	r9, r4
 80184c6:	dd5e      	ble.n	8018586 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xe2>
 80184c8:	f1bc 0f00 	cmp.w	ip, #0
 80184cc:	db59      	blt.n	8018582 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xde>
 80184ce:	45e0      	cmp	r8, ip
 80184d0:	dd57      	ble.n	8018582 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xde>
 80184d2:	ea4f 005e 	mov.w	r0, lr, lsr #1
 80184d6:	f01e 0f01 	tst.w	lr, #1
 80184da:	5c16      	ldrb	r6, [r2, r0]
 80184dc:	bf0c      	ite	eq
 80184de:	f006 060f 	andeq.w	r6, r6, #15
 80184e2:	1136      	asrne	r6, r6, #4
 80184e4:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 80184e8:	b2f6      	uxtb	r6, r6
 80184ea:	f11c 0001 	adds.w	r0, ip, #1
 80184ee:	d44d      	bmi.n	801858c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xe8>
 80184f0:	4580      	cmp	r8, r0
 80184f2:	dd4b      	ble.n	801858c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xe8>
 80184f4:	2d00      	cmp	r5, #0
 80184f6:	d04b      	beq.n	8018590 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xec>
 80184f8:	f10e 0a01 	add.w	sl, lr, #1
 80184fc:	ea4f 005a 	mov.w	r0, sl, lsr #1
 8018500:	f01a 0f01 	tst.w	sl, #1
 8018504:	5c10      	ldrb	r0, [r2, r0]
 8018506:	bf0c      	ite	eq
 8018508:	f000 000f 	andeq.w	r0, r0, #15
 801850c:	1100      	asrne	r0, r0, #4
 801850e:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 8018512:	b2c0      	uxtb	r0, r0
 8018514:	3401      	adds	r4, #1
 8018516:	d43f      	bmi.n	8018598 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xf4>
 8018518:	45a1      	cmp	r9, r4
 801851a:	dd3d      	ble.n	8018598 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xf4>
 801851c:	2f00      	cmp	r7, #0
 801851e:	f000 809e 	beq.w	801865e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1ba>
 8018522:	f1bc 0f00 	cmp.w	ip, #0
 8018526:	db35      	blt.n	8018594 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xf0>
 8018528:	45e0      	cmp	r8, ip
 801852a:	dd33      	ble.n	8018594 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xf0>
 801852c:	eb03 090e 	add.w	r9, r3, lr
 8018530:	ea4f 0459 	mov.w	r4, r9, lsr #1
 8018534:	f019 0f01 	tst.w	r9, #1
 8018538:	5d14      	ldrb	r4, [r2, r4]
 801853a:	bf0c      	ite	eq
 801853c:	f004 040f 	andeq.w	r4, r4, #15
 8018540:	1124      	asrne	r4, r4, #4
 8018542:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 8018546:	b2e4      	uxtb	r4, r4
 8018548:	f11c 0c01 	adds.w	ip, ip, #1
 801854c:	d427      	bmi.n	801859e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xfa>
 801854e:	45e0      	cmp	r8, ip
 8018550:	dd25      	ble.n	801859e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xfa>
 8018552:	b335      	cbz	r5, 80185a2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xfe>
 8018554:	3301      	adds	r3, #1
 8018556:	449e      	add	lr, r3
 8018558:	ea4f 035e 	mov.w	r3, lr, lsr #1
 801855c:	f01e 0f01 	tst.w	lr, #1
 8018560:	5cd2      	ldrb	r2, [r2, r3]
 8018562:	bf0c      	ite	eq
 8018564:	f002 020f 	andeq.w	r2, r2, #15
 8018568:	1112      	asrne	r2, r2, #4
 801856a:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801856e:	b2d3      	uxtb	r3, r2
 8018570:	2d0f      	cmp	r5, #15
 8018572:	d917      	bls.n	80185a4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x100>
 8018574:	4b3c      	ldr	r3, [pc, #240]	; (8018668 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1c4>)
 8018576:	4a3d      	ldr	r2, [pc, #244]	; (801866c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1c8>)
 8018578:	483d      	ldr	r0, [pc, #244]	; (8018670 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1cc>)
 801857a:	f240 210d 	movw	r1, #525	; 0x20d
 801857e:	f000 fffd 	bl	801957c <__assert_func>
 8018582:	2600      	movs	r6, #0
 8018584:	e7b1      	b.n	80184ea <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x46>
 8018586:	2000      	movs	r0, #0
 8018588:	4606      	mov	r6, r0
 801858a:	e7c3      	b.n	8018514 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x70>
 801858c:	2000      	movs	r0, #0
 801858e:	e7c1      	b.n	8018514 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x70>
 8018590:	4628      	mov	r0, r5
 8018592:	e7bf      	b.n	8018514 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x70>
 8018594:	2400      	movs	r4, #0
 8018596:	e7d7      	b.n	8018548 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xa4>
 8018598:	2300      	movs	r3, #0
 801859a:	461c      	mov	r4, r3
 801859c:	e7e8      	b.n	8018570 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xcc>
 801859e:	2300      	movs	r3, #0
 80185a0:	e7e6      	b.n	8018570 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xcc>
 80185a2:	462b      	mov	r3, r5
 80185a4:	2f0f      	cmp	r7, #15
 80185a6:	d8e5      	bhi.n	8018574 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xd0>
 80185a8:	b2ad      	uxth	r5, r5
 80185aa:	b2bf      	uxth	r7, r7
 80185ac:	fb05 fc07 	mul.w	ip, r5, r7
 80185b0:	ebcc 1707 	rsb	r7, ip, r7, lsl #4
 80185b4:	012d      	lsls	r5, r5, #4
 80185b6:	b2bf      	uxth	r7, r7
 80185b8:	f5c5 7280 	rsb	r2, r5, #256	; 0x100
 80185bc:	eba5 050c 	sub.w	r5, r5, ip
 80185c0:	1bd2      	subs	r2, r2, r7
 80185c2:	b2ad      	uxth	r5, r5
 80185c4:	b292      	uxth	r2, r2
 80185c6:	4368      	muls	r0, r5
 80185c8:	fb06 0002 	mla	r0, r6, r2, r0
 80185cc:	fb07 0404 	mla	r4, r7, r4, r0
 80185d0:	fb0c 4303 	mla	r3, ip, r3, r4
 80185d4:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80185d8:	2b00      	cmp	r3, #0
 80185da:	d03e      	beq.n	801865a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1b6>
 80185dc:	f89d 0038 	ldrb.w	r0, [sp, #56]	; 0x38
 80185e0:	4a24      	ldr	r2, [pc, #144]	; (8018674 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1d0>)
 80185e2:	4343      	muls	r3, r0
 80185e4:	1c58      	adds	r0, r3, #1
 80185e6:	6816      	ldr	r6, [r2, #0]
 80185e8:	880a      	ldrh	r2, [r1, #0]
 80185ea:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 80185ee:	1200      	asrs	r0, r0, #8
 80185f0:	b284      	uxth	r4, r0
 80185f2:	1215      	asrs	r5, r2, #8
 80185f4:	43c0      	mvns	r0, r0
 80185f6:	b2c3      	uxtb	r3, r0
 80185f8:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 80185fc:	0a30      	lsrs	r0, r6, #8
 80185fe:	fb15 f503 	smulbb	r5, r5, r3
 8018602:	10d7      	asrs	r7, r2, #3
 8018604:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8018608:	fb00 5004 	mla	r0, r0, r4, r5
 801860c:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8018610:	08f5      	lsrs	r5, r6, #3
 8018612:	00d2      	lsls	r2, r2, #3
 8018614:	fb17 f703 	smulbb	r7, r7, r3
 8018618:	b2d2      	uxtb	r2, r2
 801861a:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801861e:	00f6      	lsls	r6, r6, #3
 8018620:	fb05 7504 	mla	r5, r5, r4, r7
 8018624:	fb12 f303 	smulbb	r3, r2, r3
 8018628:	b2f6      	uxtb	r6, r6
 801862a:	fb06 3304 	mla	r3, r6, r4, r3
 801862e:	b2ad      	uxth	r5, r5
 8018630:	b29a      	uxth	r2, r3
 8018632:	b280      	uxth	r0, r0
 8018634:	1c6b      	adds	r3, r5, #1
 8018636:	eb03 2315 	add.w	r3, r3, r5, lsr #8
 801863a:	1c44      	adds	r4, r0, #1
 801863c:	095b      	lsrs	r3, r3, #5
 801863e:	eb04 2010 	add.w	r0, r4, r0, lsr #8
 8018642:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 8018646:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801864a:	4303      	orrs	r3, r0
 801864c:	1c50      	adds	r0, r2, #1
 801864e:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 8018652:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8018656:	4313      	orrs	r3, r2
 8018658:	800b      	strh	r3, [r1, #0]
 801865a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801865e:	2d0f      	cmp	r5, #15
 8018660:	d888      	bhi.n	8018574 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xd0>
 8018662:	463b      	mov	r3, r7
 8018664:	463c      	mov	r4, r7
 8018666:	e79f      	b.n	80185a8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x104>
 8018668:	0801d2ad 	.word	0x0801d2ad
 801866c:	0801d805 	.word	0x0801d805
 8018670:	0801d335 	.word	0x0801d335
 8018674:	20012340 	.word	0x20012340

08018678 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 8018678:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801867c:	ed2d 8b08 	vpush	{d8-d11}
 8018680:	b099      	sub	sp, #100	; 0x64
 8018682:	e9dd 462b 	ldrd	r4, r6, [sp, #172]	; 0xac
 8018686:	9309      	str	r3, [sp, #36]	; 0x24
 8018688:	f9bd 30c8 	ldrsh.w	r3, [sp, #200]	; 0xc8
 801868c:	930a      	str	r3, [sp, #40]	; 0x28
 801868e:	f9bd 30cc 	ldrsh.w	r3, [sp, #204]	; 0xcc
 8018692:	9216      	str	r2, [sp, #88]	; 0x58
 8018694:	930b      	str	r3, [sp, #44]	; 0x2c
 8018696:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 8018698:	f89d 30d4 	ldrb.w	r3, [sp, #212]	; 0xd4
 801869c:	910f      	str	r1, [sp, #60]	; 0x3c
 801869e:	9310      	str	r3, [sp, #64]	; 0x40
 80186a0:	e9dd 1330 	ldrd	r1, r3, [sp, #192]	; 0xc0
 80186a4:	9017      	str	r0, [sp, #92]	; 0x5c
 80186a6:	6850      	ldr	r0, [r2, #4]
 80186a8:	6812      	ldr	r2, [r2, #0]
 80186aa:	fb00 1303 	mla	r3, r0, r3, r1
 80186ae:	eb02 0a43 	add.w	sl, r2, r3, lsl #1
 80186b2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80186b4:	3301      	adds	r3, #1
 80186b6:	f023 0301 	bic.w	r3, r3, #1
 80186ba:	930c      	str	r3, [sp, #48]	; 0x30
 80186bc:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 80186be:	681f      	ldr	r7, [r3, #0]
 80186c0:	eeb0 aa40 	vmov.f32	s20, s0
 80186c4:	eef0 9a60 	vmov.f32	s19, s1
 80186c8:	eeb0 9a41 	vmov.f32	s18, s2
 80186cc:	eeb0 8a62 	vmov.f32	s16, s5
 80186d0:	eef0 8a43 	vmov.f32	s17, s6
 80186d4:	eef0 ba44 	vmov.f32	s23, s8
 80186d8:	eeb0 ba64 	vmov.f32	s22, s9
 80186dc:	eef0 aa45 	vmov.f32	s21, s10
 80186e0:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80186e2:	2b00      	cmp	r3, #0
 80186e4:	dc03      	bgt.n	80186ee <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x76>
 80186e6:	9b16      	ldr	r3, [sp, #88]	; 0x58
 80186e8:	2b00      	cmp	r3, #0
 80186ea:	f340 8267 	ble.w	8018bbc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x544>
 80186ee:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80186f0:	2b00      	cmp	r3, #0
 80186f2:	f340 811e 	ble.w	8018932 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2ba>
 80186f6:	1422      	asrs	r2, r4, #16
 80186f8:	ea4f 4326 	mov.w	r3, r6, asr #16
 80186fc:	d42d      	bmi.n	801875a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe2>
 80186fe:	980a      	ldr	r0, [sp, #40]	; 0x28
 8018700:	1c51      	adds	r1, r2, #1
 8018702:	4288      	cmp	r0, r1
 8018704:	dd2c      	ble.n	8018760 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe8>
 8018706:	2b00      	cmp	r3, #0
 8018708:	db2a      	blt.n	8018760 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe8>
 801870a:	980b      	ldr	r0, [sp, #44]	; 0x2c
 801870c:	1c59      	adds	r1, r3, #1
 801870e:	4288      	cmp	r0, r1
 8018710:	dd26      	ble.n	8018760 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe8>
 8018712:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8018714:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 8018716:	3b01      	subs	r3, #1
 8018718:	fb02 4203 	mla	r2, r2, r3, r4
 801871c:	1412      	asrs	r2, r2, #16
 801871e:	d42a      	bmi.n	8018776 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfe>
 8018720:	990a      	ldr	r1, [sp, #40]	; 0x28
 8018722:	3201      	adds	r2, #1
 8018724:	4291      	cmp	r1, r2
 8018726:	dd26      	ble.n	8018776 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfe>
 8018728:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
 801872a:	fb02 6303 	mla	r3, r2, r3, r6
 801872e:	141b      	asrs	r3, r3, #16
 8018730:	d421      	bmi.n	8018776 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfe>
 8018732:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8018734:	3301      	adds	r3, #1
 8018736:	429a      	cmp	r2, r3
 8018738:	dd1d      	ble.n	8018776 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfe>
 801873a:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	; 0x30
 801873e:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 8018742:	9311      	str	r3, [sp, #68]	; 0x44
 8018744:	46d1      	mov	r9, sl
 8018746:	f1bb 0f00 	cmp.w	fp, #0
 801874a:	f300 8162 	bgt.w	8018a12 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x39a>
 801874e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8018750:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8018754:	eb0a 0a45 	add.w	sl, sl, r5, lsl #1
 8018758:	e0ed      	b.n	8018936 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2be>
 801875a:	1c51      	adds	r1, r2, #1
 801875c:	f040 80df 	bne.w	801891e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2a6>
 8018760:	990a      	ldr	r1, [sp, #40]	; 0x28
 8018762:	4291      	cmp	r1, r2
 8018764:	f340 80db 	ble.w	801891e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2a6>
 8018768:	1c5a      	adds	r2, r3, #1
 801876a:	f2c0 80d8 	blt.w	801891e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2a6>
 801876e:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8018770:	4293      	cmp	r3, r2
 8018772:	f280 80d4 	bge.w	801891e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2a6>
 8018776:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	; 0x30
 801877a:	f8dd 9024 	ldr.w	r9, [sp, #36]	; 0x24
 801877e:	9311      	str	r3, [sp, #68]	; 0x44
 8018780:	46d0      	mov	r8, sl
 8018782:	f1b9 0f00 	cmp.w	r9, #0
 8018786:	dde2      	ble.n	801874e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xd6>
 8018788:	1420      	asrs	r0, r4, #16
 801878a:	ea4f 4326 	mov.w	r3, r6, asr #16
 801878e:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8018792:	f3c6 3103 	ubfx	r1, r6, #12, #4
 8018796:	f100 8121 	bmi.w	80189dc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x364>
 801879a:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 801879c:	f100 0c01 	add.w	ip, r0, #1
 80187a0:	4565      	cmp	r5, ip
 80187a2:	f340 811d 	ble.w	80189e0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x368>
 80187a6:	2b00      	cmp	r3, #0
 80187a8:	f2c0 811a 	blt.w	80189e0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x368>
 80187ac:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 80187ae:	f103 0c01 	add.w	ip, r3, #1
 80187b2:	4565      	cmp	r5, ip
 80187b4:	f340 8114 	ble.w	80189e0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x368>
 80187b8:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 80187ba:	fb03 0305 	mla	r3, r3, r5, r0
 80187be:	0858      	lsrs	r0, r3, #1
 80187c0:	07dd      	lsls	r5, r3, #31
 80187c2:	5c38      	ldrb	r0, [r7, r0]
 80187c4:	bf54      	ite	pl
 80187c6:	f000 000f 	andpl.w	r0, r0, #15
 80187ca:	1100      	asrmi	r0, r0, #4
 80187cc:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 80187d0:	b2c0      	uxtb	r0, r0
 80187d2:	2a00      	cmp	r2, #0
 80187d4:	f000 80ee 	beq.w	80189b4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x33c>
 80187d8:	f103 0e01 	add.w	lr, r3, #1
 80187dc:	ea4f 0c5e 	mov.w	ip, lr, lsr #1
 80187e0:	f01e 0f01 	tst.w	lr, #1
 80187e4:	f817 c00c 	ldrb.w	ip, [r7, ip]
 80187e8:	bf0c      	ite	eq
 80187ea:	f00c 0c0f 	andeq.w	ip, ip, #15
 80187ee:	ea4f 1c2c 	movne.w	ip, ip, asr #4
 80187f2:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 80187f6:	fa5f f58c 	uxtb.w	r5, ip
 80187fa:	9512      	str	r5, [sp, #72]	; 0x48
 80187fc:	b1f9      	cbz	r1, 801883e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1c6>
 80187fe:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8018800:	442b      	add	r3, r5
 8018802:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 8018806:	07dd      	lsls	r5, r3, #31
 8018808:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801880c:	bf54      	ite	pl
 801880e:	f00c 0c0f 	andpl.w	ip, ip, #15
 8018812:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8018816:	3301      	adds	r3, #1
 8018818:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801881c:	fa5f f58c 	uxtb.w	r5, ip
 8018820:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 8018824:	950d      	str	r5, [sp, #52]	; 0x34
 8018826:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801882a:	07dd      	lsls	r5, r3, #31
 801882c:	bf54      	ite	pl
 801882e:	f00c 030f 	andpl.w	r3, ip, #15
 8018832:	ea4f 132c 	movmi.w	r3, ip, asr #4
 8018836:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 801883a:	b2db      	uxtb	r3, r3
 801883c:	9313      	str	r3, [sp, #76]	; 0x4c
 801883e:	b292      	uxth	r2, r2
 8018840:	b289      	uxth	r1, r1
 8018842:	fb02 f301 	mul.w	r3, r2, r1
 8018846:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 801884a:	0112      	lsls	r2, r2, #4
 801884c:	b289      	uxth	r1, r1
 801884e:	f5c2 7c80 	rsb	ip, r2, #256	; 0x100
 8018852:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8018854:	1ad2      	subs	r2, r2, r3
 8018856:	ebac 0c01 	sub.w	ip, ip, r1
 801885a:	b292      	uxth	r2, r2
 801885c:	436a      	muls	r2, r5
 801885e:	fa1f fc8c 	uxth.w	ip, ip
 8018862:	fb00 200c 	mla	r0, r0, ip, r2
 8018866:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8018868:	fb01 0102 	mla	r1, r1, r2, r0
 801886c:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801886e:	fb03 1302 	mla	r3, r3, r2, r1
 8018872:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8018876:	2b00      	cmp	r3, #0
 8018878:	d048      	beq.n	801890c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x294>
 801887a:	9910      	ldr	r1, [sp, #64]	; 0x40
 801887c:	4ace      	ldr	r2, [pc, #824]	; (8018bb8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x540>)
 801887e:	434b      	muls	r3, r1
 8018880:	1c59      	adds	r1, r3, #1
 8018882:	f8d2 e000 	ldr.w	lr, [r2]
 8018886:	f8b8 2000 	ldrh.w	r2, [r8]
 801888a:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 801888e:	121b      	asrs	r3, r3, #8
 8018890:	b299      	uxth	r1, r3
 8018892:	ea4f 2c22 	mov.w	ip, r2, asr #8
 8018896:	43db      	mvns	r3, r3
 8018898:	b2db      	uxtb	r3, r3
 801889a:	ea4f 201e 	mov.w	r0, lr, lsr #8
 801889e:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80188a2:	fb1c fc03 	smulbb	ip, ip, r3
 80188a6:	ea4f 0be2 	mov.w	fp, r2, asr #3
 80188aa:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 80188ae:	fb00 c001 	mla	r0, r0, r1, ip
 80188b2:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 80188b6:	ea4f 0cde 	mov.w	ip, lr, lsr #3
 80188ba:	fb1b fb03 	smulbb	fp, fp, r3
 80188be:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 80188c2:	00d2      	lsls	r2, r2, #3
 80188c4:	fb0c bc01 	mla	ip, ip, r1, fp
 80188c8:	b2d2      	uxtb	r2, r2
 80188ca:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80188ce:	fb12 f303 	smulbb	r3, r2, r3
 80188d2:	fa1f fc8c 	uxth.w	ip, ip
 80188d6:	fa5f fe8e 	uxtb.w	lr, lr
 80188da:	b280      	uxth	r0, r0
 80188dc:	fb0e 3101 	mla	r1, lr, r1, r3
 80188e0:	f10c 0201 	add.w	r2, ip, #1
 80188e4:	b289      	uxth	r1, r1
 80188e6:	1c43      	adds	r3, r0, #1
 80188e8:	eb02 221c 	add.w	r2, r2, ip, lsr #8
 80188ec:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 80188f0:	0952      	lsrs	r2, r2, #5
 80188f2:	1c4b      	adds	r3, r1, #1
 80188f4:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80188f8:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 80188fc:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8018900:	4310      	orrs	r0, r2
 8018902:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 8018906:	4308      	orrs	r0, r1
 8018908:	f8a8 0000 	strh.w	r0, [r8]
 801890c:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 801890e:	441c      	add	r4, r3
 8018910:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8018912:	f108 0802 	add.w	r8, r8, #2
 8018916:	441e      	add	r6, r3
 8018918:	f109 39ff 	add.w	r9, r9, #4294967295
 801891c:	e731      	b.n	8018782 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x10a>
 801891e:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8018920:	441c      	add	r4, r3
 8018922:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8018924:	441e      	add	r6, r3
 8018926:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8018928:	3b01      	subs	r3, #1
 801892a:	9309      	str	r3, [sp, #36]	; 0x24
 801892c:	f10a 0a02 	add.w	sl, sl, #2
 8018930:	e6dd      	b.n	80186ee <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x76>
 8018932:	f47f aeee 	bne.w	8018712 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9a>
 8018936:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8018938:	2b00      	cmp	r3, #0
 801893a:	f340 813f 	ble.w	8018bbc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x544>
 801893e:	ee3a aa2b 	vadd.f32	s20, s20, s23
 8018942:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8018946:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 801894a:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801894c:	ee79 9a8b 	vadd.f32	s19, s19, s22
 8018950:	ee39 9a2a 	vadd.f32	s18, s18, s21
 8018954:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8018958:	eef0 6a48 	vmov.f32	s13, s16
 801895c:	ee69 7a27 	vmul.f32	s15, s18, s15
 8018960:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8018964:	ee37 8a48 	vsub.f32	s16, s14, s16
 8018968:	ee16 4a90 	vmov	r4, s13
 801896c:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8018970:	eef0 6a68 	vmov.f32	s13, s17
 8018974:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8018978:	ee18 2a10 	vmov	r2, s16
 801897c:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8018980:	fb92 f3f3 	sdiv	r3, r2, r3
 8018984:	ee18 2a90 	vmov	r2, s17
 8018988:	932d      	str	r3, [sp, #180]	; 0xb4
 801898a:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801898c:	fb92 f3f3 	sdiv	r3, r2, r3
 8018990:	932e      	str	r3, [sp, #184]	; 0xb8
 8018992:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8018994:	9a16      	ldr	r2, [sp, #88]	; 0x58
 8018996:	3b01      	subs	r3, #1
 8018998:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801899c:	930f      	str	r3, [sp, #60]	; 0x3c
 801899e:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80189a0:	bf08      	it	eq
 80189a2:	4613      	moveq	r3, r2
 80189a4:	ee16 6a90 	vmov	r6, s13
 80189a8:	9309      	str	r3, [sp, #36]	; 0x24
 80189aa:	eef0 8a67 	vmov.f32	s17, s15
 80189ae:	eeb0 8a47 	vmov.f32	s16, s14
 80189b2:	e695      	b.n	80186e0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x68>
 80189b4:	2900      	cmp	r1, #0
 80189b6:	f43f af42 	beq.w	801883e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1c6>
 80189ba:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80189bc:	442b      	add	r3, r5
 80189be:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 80189c2:	07db      	lsls	r3, r3, #31
 80189c4:	f817 c00c 	ldrb.w	ip, [r7, ip]
 80189c8:	bf54      	ite	pl
 80189ca:	f00c 030f 	andpl.w	r3, ip, #15
 80189ce:	ea4f 132c 	movmi.w	r3, ip, asr #4
 80189d2:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 80189d6:	b2db      	uxtb	r3, r3
 80189d8:	930d      	str	r3, [sp, #52]	; 0x34
 80189da:	e730      	b.n	801883e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1c6>
 80189dc:	1c45      	adds	r5, r0, #1
 80189de:	d195      	bne.n	801890c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x294>
 80189e0:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 80189e2:	4285      	cmp	r5, r0
 80189e4:	dd92      	ble.n	801890c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x294>
 80189e6:	1c5d      	adds	r5, r3, #1
 80189e8:	db90      	blt.n	801890c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x294>
 80189ea:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 80189ec:	429d      	cmp	r5, r3
 80189ee:	dd8d      	ble.n	801890c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x294>
 80189f0:	e9cd 3203 	strd	r3, r2, [sp, #12]
 80189f4:	9d10      	ldr	r5, [sp, #64]	; 0x40
 80189f6:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80189f8:	9301      	str	r3, [sp, #4]
 80189fa:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80189fc:	9002      	str	r0, [sp, #8]
 80189fe:	e9cd 1505 	strd	r1, r5, [sp, #20]
 8018a02:	9300      	str	r3, [sp, #0]
 8018a04:	463a      	mov	r2, r7
 8018a06:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8018a08:	9817      	ldr	r0, [sp, #92]	; 0x5c
 8018a0a:	4641      	mov	r1, r8
 8018a0c:	f7ff fd4a 	bl	80184a4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>
 8018a10:	e77c      	b.n	801890c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x294>
 8018a12:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8018a14:	1422      	asrs	r2, r4, #16
 8018a16:	1433      	asrs	r3, r6, #16
 8018a18:	fb05 2303 	mla	r3, r5, r3, r2
 8018a1c:	085a      	lsrs	r2, r3, #1
 8018a1e:	07dd      	lsls	r5, r3, #31
 8018a20:	5cba      	ldrb	r2, [r7, r2]
 8018a22:	bf54      	ite	pl
 8018a24:	f002 020f 	andpl.w	r2, r2, #15
 8018a28:	1112      	asrmi	r2, r2, #4
 8018a2a:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8018a2e:	f3c4 3103 	ubfx	r1, r4, #12, #4
 8018a32:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8018a36:	b2d2      	uxtb	r2, r2
 8018a38:	2900      	cmp	r1, #0
 8018a3a:	f000 80a8 	beq.w	8018b8e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x516>
 8018a3e:	f103 0e01 	add.w	lr, r3, #1
 8018a42:	ea4f 0c5e 	mov.w	ip, lr, lsr #1
 8018a46:	f01e 0f01 	tst.w	lr, #1
 8018a4a:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8018a4e:	bf0c      	ite	eq
 8018a50:	f00c 0c0f 	andeq.w	ip, ip, #15
 8018a54:	ea4f 1c2c 	movne.w	ip, ip, asr #4
 8018a58:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8018a5c:	fa5f f58c 	uxtb.w	r5, ip
 8018a60:	9514      	str	r5, [sp, #80]	; 0x50
 8018a62:	b300      	cbz	r0, 8018aa6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x42e>
 8018a64:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8018a66:	442b      	add	r3, r5
 8018a68:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 8018a6c:	07dd      	lsls	r5, r3, #31
 8018a6e:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8018a72:	bf54      	ite	pl
 8018a74:	f00c 0c0f 	andpl.w	ip, ip, #15
 8018a78:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8018a7c:	3301      	adds	r3, #1
 8018a7e:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8018a82:	fa5f f58c 	uxtb.w	r5, ip
 8018a86:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 8018a8a:	950e      	str	r5, [sp, #56]	; 0x38
 8018a8c:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8018a90:	07dd      	lsls	r5, r3, #31
 8018a92:	bf54      	ite	pl
 8018a94:	f00c 0c0f 	andpl.w	ip, ip, #15
 8018a98:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8018a9c:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8018aa0:	fa5f f38c 	uxtb.w	r3, ip
 8018aa4:	9315      	str	r3, [sp, #84]	; 0x54
 8018aa6:	b289      	uxth	r1, r1
 8018aa8:	b280      	uxth	r0, r0
 8018aaa:	fb01 f300 	mul.w	r3, r1, r0
 8018aae:	ebc3 1000 	rsb	r0, r3, r0, lsl #4
 8018ab2:	0109      	lsls	r1, r1, #4
 8018ab4:	b280      	uxth	r0, r0
 8018ab6:	f5c1 7c80 	rsb	ip, r1, #256	; 0x100
 8018aba:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8018abc:	1ac9      	subs	r1, r1, r3
 8018abe:	ebac 0c00 	sub.w	ip, ip, r0
 8018ac2:	b289      	uxth	r1, r1
 8018ac4:	4369      	muls	r1, r5
 8018ac6:	fa1f fc8c 	uxth.w	ip, ip
 8018aca:	fb02 120c 	mla	r2, r2, ip, r1
 8018ace:	990e      	ldr	r1, [sp, #56]	; 0x38
 8018ad0:	fb00 2001 	mla	r0, r0, r1, r2
 8018ad4:	9a15      	ldr	r2, [sp, #84]	; 0x54
 8018ad6:	fb03 0302 	mla	r3, r3, r2, r0
 8018ada:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8018ade:	2b00      	cmp	r3, #0
 8018ae0:	d04c      	beq.n	8018b7c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x504>
 8018ae2:	9910      	ldr	r1, [sp, #64]	; 0x40
 8018ae4:	4a34      	ldr	r2, [pc, #208]	; (8018bb8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x540>)
 8018ae6:	434b      	muls	r3, r1
 8018ae8:	1c59      	adds	r1, r3, #1
 8018aea:	f8d2 e000 	ldr.w	lr, [r2]
 8018aee:	f8b9 2000 	ldrh.w	r2, [r9]
 8018af2:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 8018af6:	121b      	asrs	r3, r3, #8
 8018af8:	b299      	uxth	r1, r3
 8018afa:	ea4f 2c22 	mov.w	ip, r2, asr #8
 8018afe:	43db      	mvns	r3, r3
 8018b00:	b2db      	uxtb	r3, r3
 8018b02:	ea4f 201e 	mov.w	r0, lr, lsr #8
 8018b06:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8018b0a:	fb1c fc03 	smulbb	ip, ip, r3
 8018b0e:	ea4f 08e2 	mov.w	r8, r2, asr #3
 8018b12:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8018b16:	fb00 c001 	mla	r0, r0, r1, ip
 8018b1a:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 8018b1e:	ea4f 0cde 	mov.w	ip, lr, lsr #3
 8018b22:	fb18 f803 	smulbb	r8, r8, r3
 8018b26:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 8018b2a:	00d2      	lsls	r2, r2, #3
 8018b2c:	fb0c 8c01 	mla	ip, ip, r1, r8
 8018b30:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8018b34:	b2d2      	uxtb	r2, r2
 8018b36:	fa1f fc8c 	uxth.w	ip, ip
 8018b3a:	fa5f fe8e 	uxtb.w	lr, lr
 8018b3e:	fb12 f203 	smulbb	r2, r2, r3
 8018b42:	b280      	uxth	r0, r0
 8018b44:	fb0e 2201 	mla	r2, lr, r1, r2
 8018b48:	f10c 0801 	add.w	r8, ip, #1
 8018b4c:	b292      	uxth	r2, r2
 8018b4e:	eb08 2c1c 	add.w	ip, r8, ip, lsr #8
 8018b52:	f100 0801 	add.w	r8, r0, #1
 8018b56:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8018b5a:	eb08 2010 	add.w	r0, r8, r0, lsr #8
 8018b5e:	1c51      	adds	r1, r2, #1
 8018b60:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8018b64:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 8018b68:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8018b6c:	ea4c 0c00 	orr.w	ip, ip, r0
 8018b70:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8018b74:	ea4c 0c02 	orr.w	ip, ip, r2
 8018b78:	f8a9 c000 	strh.w	ip, [r9]
 8018b7c:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8018b7e:	441c      	add	r4, r3
 8018b80:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8018b82:	f109 0902 	add.w	r9, r9, #2
 8018b86:	441e      	add	r6, r3
 8018b88:	f10b 3bff 	add.w	fp, fp, #4294967295
 8018b8c:	e5db      	b.n	8018746 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xce>
 8018b8e:	2800      	cmp	r0, #0
 8018b90:	d089      	beq.n	8018aa6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x42e>
 8018b92:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8018b94:	442b      	add	r3, r5
 8018b96:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 8018b9a:	07db      	lsls	r3, r3, #31
 8018b9c:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8018ba0:	bf54      	ite	pl
 8018ba2:	f00c 0c0f 	andpl.w	ip, ip, #15
 8018ba6:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8018baa:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8018bae:	fa5f f38c 	uxtb.w	r3, ip
 8018bb2:	930e      	str	r3, [sp, #56]	; 0x38
 8018bb4:	e777      	b.n	8018aa6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x42e>
 8018bb6:	bf00      	nop
 8018bb8:	20012340 	.word	0x20012340
 8018bbc:	b019      	add	sp, #100	; 0x64
 8018bbe:	ecbd 8b08 	vpop	{d8-d11}
 8018bc2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018bc6:	bf00      	nop

08018bc8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>:
 8018bc8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8018bcc:	e9dd c40a 	ldrd	ip, r4, [sp, #40]	; 0x28
 8018bd0:	2c00      	cmp	r4, #0
 8018bd2:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 8018bd6:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 8018bda:	f89d 5030 	ldrb.w	r5, [sp, #48]	; 0x30
 8018bde:	f89d 7034 	ldrb.w	r7, [sp, #52]	; 0x34
 8018be2:	fb04 ce03 	mla	lr, r4, r3, ip
 8018be6:	db60      	blt.n	8018caa <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xe2>
 8018be8:	45a1      	cmp	r9, r4
 8018bea:	dd5e      	ble.n	8018caa <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xe2>
 8018bec:	f1bc 0f00 	cmp.w	ip, #0
 8018bf0:	db59      	blt.n	8018ca6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xde>
 8018bf2:	45e0      	cmp	r8, ip
 8018bf4:	dd57      	ble.n	8018ca6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xde>
 8018bf6:	ea4f 005e 	mov.w	r0, lr, lsr #1
 8018bfa:	f01e 0f01 	tst.w	lr, #1
 8018bfe:	5c16      	ldrb	r6, [r2, r0]
 8018c00:	bf0c      	ite	eq
 8018c02:	f006 060f 	andeq.w	r6, r6, #15
 8018c06:	1136      	asrne	r6, r6, #4
 8018c08:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 8018c0c:	b2f6      	uxtb	r6, r6
 8018c0e:	f11c 0001 	adds.w	r0, ip, #1
 8018c12:	d44d      	bmi.n	8018cb0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xe8>
 8018c14:	4580      	cmp	r8, r0
 8018c16:	dd4b      	ble.n	8018cb0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xe8>
 8018c18:	2d00      	cmp	r5, #0
 8018c1a:	d04b      	beq.n	8018cb4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xec>
 8018c1c:	f10e 0a01 	add.w	sl, lr, #1
 8018c20:	ea4f 005a 	mov.w	r0, sl, lsr #1
 8018c24:	f01a 0f01 	tst.w	sl, #1
 8018c28:	5c10      	ldrb	r0, [r2, r0]
 8018c2a:	bf0c      	ite	eq
 8018c2c:	f000 000f 	andeq.w	r0, r0, #15
 8018c30:	1100      	asrne	r0, r0, #4
 8018c32:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 8018c36:	b2c0      	uxtb	r0, r0
 8018c38:	3401      	adds	r4, #1
 8018c3a:	d43f      	bmi.n	8018cbc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xf4>
 8018c3c:	45a1      	cmp	r9, r4
 8018c3e:	dd3d      	ble.n	8018cbc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xf4>
 8018c40:	2f00      	cmp	r7, #0
 8018c42:	f000 8097 	beq.w	8018d74 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1ac>
 8018c46:	f1bc 0f00 	cmp.w	ip, #0
 8018c4a:	db35      	blt.n	8018cb8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xf0>
 8018c4c:	45e0      	cmp	r8, ip
 8018c4e:	dd33      	ble.n	8018cb8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xf0>
 8018c50:	eb03 090e 	add.w	r9, r3, lr
 8018c54:	ea4f 0459 	mov.w	r4, r9, lsr #1
 8018c58:	f019 0f01 	tst.w	r9, #1
 8018c5c:	5d14      	ldrb	r4, [r2, r4]
 8018c5e:	bf0c      	ite	eq
 8018c60:	f004 040f 	andeq.w	r4, r4, #15
 8018c64:	1124      	asrne	r4, r4, #4
 8018c66:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 8018c6a:	b2e4      	uxtb	r4, r4
 8018c6c:	f11c 0c01 	adds.w	ip, ip, #1
 8018c70:	d427      	bmi.n	8018cc2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xfa>
 8018c72:	45e0      	cmp	r8, ip
 8018c74:	dd25      	ble.n	8018cc2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xfa>
 8018c76:	b335      	cbz	r5, 8018cc6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xfe>
 8018c78:	3301      	adds	r3, #1
 8018c7a:	449e      	add	lr, r3
 8018c7c:	ea4f 035e 	mov.w	r3, lr, lsr #1
 8018c80:	f01e 0f01 	tst.w	lr, #1
 8018c84:	5cd2      	ldrb	r2, [r2, r3]
 8018c86:	bf0c      	ite	eq
 8018c88:	f002 020f 	andeq.w	r2, r2, #15
 8018c8c:	1112      	asrne	r2, r2, #4
 8018c8e:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8018c92:	b2d3      	uxtb	r3, r2
 8018c94:	2d0f      	cmp	r5, #15
 8018c96:	d917      	bls.n	8018cc8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x100>
 8018c98:	4b39      	ldr	r3, [pc, #228]	; (8018d80 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1b8>)
 8018c9a:	4a3a      	ldr	r2, [pc, #232]	; (8018d84 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1bc>)
 8018c9c:	483a      	ldr	r0, [pc, #232]	; (8018d88 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1c0>)
 8018c9e:	f240 210d 	movw	r1, #525	; 0x20d
 8018ca2:	f000 fc6b 	bl	801957c <__assert_func>
 8018ca6:	2600      	movs	r6, #0
 8018ca8:	e7b1      	b.n	8018c0e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x46>
 8018caa:	2000      	movs	r0, #0
 8018cac:	4606      	mov	r6, r0
 8018cae:	e7c3      	b.n	8018c38 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x70>
 8018cb0:	2000      	movs	r0, #0
 8018cb2:	e7c1      	b.n	8018c38 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x70>
 8018cb4:	4628      	mov	r0, r5
 8018cb6:	e7bf      	b.n	8018c38 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x70>
 8018cb8:	2400      	movs	r4, #0
 8018cba:	e7d7      	b.n	8018c6c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xa4>
 8018cbc:	2300      	movs	r3, #0
 8018cbe:	461c      	mov	r4, r3
 8018cc0:	e7e8      	b.n	8018c94 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xcc>
 8018cc2:	2300      	movs	r3, #0
 8018cc4:	e7e6      	b.n	8018c94 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xcc>
 8018cc6:	462b      	mov	r3, r5
 8018cc8:	2f0f      	cmp	r7, #15
 8018cca:	d8e5      	bhi.n	8018c98 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xd0>
 8018ccc:	b2ad      	uxth	r5, r5
 8018cce:	b2bf      	uxth	r7, r7
 8018cd0:	fb05 fc07 	mul.w	ip, r5, r7
 8018cd4:	ebcc 1707 	rsb	r7, ip, r7, lsl #4
 8018cd8:	012d      	lsls	r5, r5, #4
 8018cda:	b2bf      	uxth	r7, r7
 8018cdc:	f5c5 7280 	rsb	r2, r5, #256	; 0x100
 8018ce0:	eba5 050c 	sub.w	r5, r5, ip
 8018ce4:	1bd2      	subs	r2, r2, r7
 8018ce6:	b2ad      	uxth	r5, r5
 8018ce8:	b292      	uxth	r2, r2
 8018cea:	4368      	muls	r0, r5
 8018cec:	fb06 0002 	mla	r0, r6, r2, r0
 8018cf0:	fb07 0404 	mla	r4, r7, r4, r0
 8018cf4:	fb0c 4303 	mla	r3, ip, r3, r4
 8018cf8:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8018cfc:	2b00      	cmp	r3, #0
 8018cfe:	d037      	beq.n	8018d70 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a8>
 8018d00:	4a22      	ldr	r2, [pc, #136]	; (8018d8c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1c4>)
 8018d02:	6816      	ldr	r6, [r2, #0]
 8018d04:	880a      	ldrh	r2, [r1, #0]
 8018d06:	b298      	uxth	r0, r3
 8018d08:	1215      	asrs	r5, r2, #8
 8018d0a:	43db      	mvns	r3, r3
 8018d0c:	b2db      	uxtb	r3, r3
 8018d0e:	0a34      	lsrs	r4, r6, #8
 8018d10:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8018d14:	fb15 f503 	smulbb	r5, r5, r3
 8018d18:	10d7      	asrs	r7, r2, #3
 8018d1a:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 8018d1e:	fb04 5400 	mla	r4, r4, r0, r5
 8018d22:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8018d26:	08f5      	lsrs	r5, r6, #3
 8018d28:	fb17 f703 	smulbb	r7, r7, r3
 8018d2c:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8018d30:	00d2      	lsls	r2, r2, #3
 8018d32:	fb05 7500 	mla	r5, r5, r0, r7
 8018d36:	b2d2      	uxtb	r2, r2
 8018d38:	00f6      	lsls	r6, r6, #3
 8018d3a:	fb12 f303 	smulbb	r3, r2, r3
 8018d3e:	b2ad      	uxth	r5, r5
 8018d40:	b2f6      	uxtb	r6, r6
 8018d42:	b2a4      	uxth	r4, r4
 8018d44:	fb06 3000 	mla	r0, r6, r0, r3
 8018d48:	1c6b      	adds	r3, r5, #1
 8018d4a:	b280      	uxth	r0, r0
 8018d4c:	1c62      	adds	r2, r4, #1
 8018d4e:	eb03 2315 	add.w	r3, r3, r5, lsr #8
 8018d52:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 8018d56:	095b      	lsrs	r3, r3, #5
 8018d58:	1c42      	adds	r2, r0, #1
 8018d5a:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8018d5e:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 8018d62:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8018d66:	4323      	orrs	r3, r4
 8018d68:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 8018d6c:	4303      	orrs	r3, r0
 8018d6e:	800b      	strh	r3, [r1, #0]
 8018d70:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8018d74:	2d0f      	cmp	r5, #15
 8018d76:	d88f      	bhi.n	8018c98 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xd0>
 8018d78:	463b      	mov	r3, r7
 8018d7a:	463c      	mov	r4, r7
 8018d7c:	e7a6      	b.n	8018ccc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x104>
 8018d7e:	bf00      	nop
 8018d80:	0801d2ad 	.word	0x0801d2ad
 8018d84:	0801d805 	.word	0x0801d805
 8018d88:	0801d335 	.word	0x0801d335
 8018d8c:	20012340 	.word	0x20012340

08018d90 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 8018d90:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018d94:	ed2d 8b08 	vpush	{d8-d11}
 8018d98:	b095      	sub	sp, #84	; 0x54
 8018d9a:	e9dd 4627 	ldrd	r4, r6, [sp, #156]	; 0x9c
 8018d9e:	9306      	str	r3, [sp, #24]
 8018da0:	f9bd 30b8 	ldrsh.w	r3, [sp, #184]	; 0xb8
 8018da4:	9307      	str	r3, [sp, #28]
 8018da6:	920d      	str	r2, [sp, #52]	; 0x34
 8018da8:	f9bd 30bc 	ldrsh.w	r3, [sp, #188]	; 0xbc
 8018dac:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 8018dae:	910a      	str	r1, [sp, #40]	; 0x28
 8018db0:	9308      	str	r3, [sp, #32]
 8018db2:	e9dd 132c 	ldrd	r1, r3, [sp, #176]	; 0xb0
 8018db6:	9013      	str	r0, [sp, #76]	; 0x4c
 8018db8:	6850      	ldr	r0, [r2, #4]
 8018dba:	6812      	ldr	r2, [r2, #0]
 8018dbc:	fb00 1303 	mla	r3, r0, r3, r1
 8018dc0:	eb02 0b43 	add.w	fp, r2, r3, lsl #1
 8018dc4:	9b07      	ldr	r3, [sp, #28]
 8018dc6:	3301      	adds	r3, #1
 8018dc8:	f023 0301 	bic.w	r3, r3, #1
 8018dcc:	9309      	str	r3, [sp, #36]	; 0x24
 8018dce:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8018dd0:	681f      	ldr	r7, [r3, #0]
 8018dd2:	eeb0 aa40 	vmov.f32	s20, s0
 8018dd6:	eef0 9a60 	vmov.f32	s19, s1
 8018dda:	eeb0 9a41 	vmov.f32	s18, s2
 8018dde:	eeb0 8a62 	vmov.f32	s16, s5
 8018de2:	eef0 8a43 	vmov.f32	s17, s6
 8018de6:	eef0 ba44 	vmov.f32	s23, s8
 8018dea:	eeb0 ba64 	vmov.f32	s22, s9
 8018dee:	eef0 aa45 	vmov.f32	s21, s10
 8018df2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8018df4:	2b00      	cmp	r3, #0
 8018df6:	dc03      	bgt.n	8018e00 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x70>
 8018df8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8018dfa:	2b00      	cmp	r3, #0
 8018dfc:	f340 825c 	ble.w	80192b8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x528>
 8018e00:	9b06      	ldr	r3, [sp, #24]
 8018e02:	2b00      	cmp	r3, #0
 8018e04:	f340 8119 	ble.w	801903a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2aa>
 8018e08:	1422      	asrs	r2, r4, #16
 8018e0a:	ea4f 4326 	mov.w	r3, r6, asr #16
 8018e0e:	d42d      	bmi.n	8018e6c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xdc>
 8018e10:	9807      	ldr	r0, [sp, #28]
 8018e12:	1c51      	adds	r1, r2, #1
 8018e14:	4288      	cmp	r0, r1
 8018e16:	dd2c      	ble.n	8018e72 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe2>
 8018e18:	2b00      	cmp	r3, #0
 8018e1a:	db2a      	blt.n	8018e72 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe2>
 8018e1c:	9808      	ldr	r0, [sp, #32]
 8018e1e:	1c59      	adds	r1, r3, #1
 8018e20:	4288      	cmp	r0, r1
 8018e22:	dd26      	ble.n	8018e72 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe2>
 8018e24:	9b06      	ldr	r3, [sp, #24]
 8018e26:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8018e28:	3b01      	subs	r3, #1
 8018e2a:	fb02 4203 	mla	r2, r2, r3, r4
 8018e2e:	1412      	asrs	r2, r2, #16
 8018e30:	d42a      	bmi.n	8018e88 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf8>
 8018e32:	9907      	ldr	r1, [sp, #28]
 8018e34:	3201      	adds	r2, #1
 8018e36:	4291      	cmp	r1, r2
 8018e38:	dd26      	ble.n	8018e88 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf8>
 8018e3a:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 8018e3c:	fb02 6303 	mla	r3, r2, r3, r6
 8018e40:	141b      	asrs	r3, r3, #16
 8018e42:	d421      	bmi.n	8018e88 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf8>
 8018e44:	9a08      	ldr	r2, [sp, #32]
 8018e46:	3301      	adds	r3, #1
 8018e48:	429a      	cmp	r2, r3
 8018e4a:	dd1d      	ble.n	8018e88 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf8>
 8018e4c:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	; 0x24
 8018e50:	f8dd a018 	ldr.w	sl, [sp, #24]
 8018e54:	930e      	str	r3, [sp, #56]	; 0x38
 8018e56:	46d8      	mov	r8, fp
 8018e58:	f1ba 0f00 	cmp.w	sl, #0
 8018e5c:	f300 8161 	bgt.w	8019122 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x392>
 8018e60:	9b06      	ldr	r3, [sp, #24]
 8018e62:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8018e66:	eb0b 0b45 	add.w	fp, fp, r5, lsl #1
 8018e6a:	e0e8      	b.n	801903e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2ae>
 8018e6c:	1c51      	adds	r1, r2, #1
 8018e6e:	f040 80da 	bne.w	8019026 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x296>
 8018e72:	9907      	ldr	r1, [sp, #28]
 8018e74:	4291      	cmp	r1, r2
 8018e76:	f340 80d6 	ble.w	8019026 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x296>
 8018e7a:	1c5a      	adds	r2, r3, #1
 8018e7c:	f2c0 80d3 	blt.w	8019026 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x296>
 8018e80:	9a08      	ldr	r2, [sp, #32]
 8018e82:	4293      	cmp	r3, r2
 8018e84:	f280 80cf 	bge.w	8019026 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x296>
 8018e88:	f8dd 9018 	ldr.w	r9, [sp, #24]
 8018e8c:	f9bd a024 	ldrsh.w	sl, [sp, #36]	; 0x24
 8018e90:	46d8      	mov	r8, fp
 8018e92:	f1b9 0f00 	cmp.w	r9, #0
 8018e96:	dde3      	ble.n	8018e60 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xd0>
 8018e98:	1420      	asrs	r0, r4, #16
 8018e9a:	ea4f 4326 	mov.w	r3, r6, asr #16
 8018e9e:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8018ea2:	f3c6 3103 	ubfx	r1, r6, #12, #4
 8018ea6:	f100 8124 	bmi.w	80190f2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x362>
 8018eaa:	9d07      	ldr	r5, [sp, #28]
 8018eac:	f100 0c01 	add.w	ip, r0, #1
 8018eb0:	4565      	cmp	r5, ip
 8018eb2:	f340 8120 	ble.w	80190f6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x366>
 8018eb6:	2b00      	cmp	r3, #0
 8018eb8:	f2c0 811d 	blt.w	80190f6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x366>
 8018ebc:	9d08      	ldr	r5, [sp, #32]
 8018ebe:	f103 0c01 	add.w	ip, r3, #1
 8018ec2:	4565      	cmp	r5, ip
 8018ec4:	f340 8117 	ble.w	80190f6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x366>
 8018ec8:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8018eca:	fb03 0305 	mla	r3, r3, r5, r0
 8018ece:	0858      	lsrs	r0, r3, #1
 8018ed0:	07dd      	lsls	r5, r3, #31
 8018ed2:	5c38      	ldrb	r0, [r7, r0]
 8018ed4:	bf54      	ite	pl
 8018ed6:	f000 000f 	andpl.w	r0, r0, #15
 8018eda:	1100      	asrmi	r0, r0, #4
 8018edc:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 8018ee0:	b2c0      	uxtb	r0, r0
 8018ee2:	2a00      	cmp	r2, #0
 8018ee4:	f000 80ea 	beq.w	80190bc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x32c>
 8018ee8:	f103 0e01 	add.w	lr, r3, #1
 8018eec:	ea4f 0c5e 	mov.w	ip, lr, lsr #1
 8018ef0:	f01e 0f01 	tst.w	lr, #1
 8018ef4:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8018ef8:	bf0c      	ite	eq
 8018efa:	f00c 0c0f 	andeq.w	ip, ip, #15
 8018efe:	ea4f 1c2c 	movne.w	ip, ip, asr #4
 8018f02:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8018f06:	fa5f fc8c 	uxtb.w	ip, ip
 8018f0a:	f8cd c03c 	str.w	ip, [sp, #60]	; 0x3c
 8018f0e:	b1f9      	cbz	r1, 8018f50 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1c0>
 8018f10:	4453      	add	r3, sl
 8018f12:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 8018f16:	07dd      	lsls	r5, r3, #31
 8018f18:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8018f1c:	bf54      	ite	pl
 8018f1e:	f00c 0c0f 	andpl.w	ip, ip, #15
 8018f22:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8018f26:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8018f2a:	3301      	adds	r3, #1
 8018f2c:	fa5f fc8c 	uxtb.w	ip, ip
 8018f30:	f8cd c02c 	str.w	ip, [sp, #44]	; 0x2c
 8018f34:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 8018f38:	07dd      	lsls	r5, r3, #31
 8018f3a:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8018f3e:	bf54      	ite	pl
 8018f40:	f00c 030f 	andpl.w	r3, ip, #15
 8018f44:	ea4f 132c 	movmi.w	r3, ip, asr #4
 8018f48:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8018f4c:	b2db      	uxtb	r3, r3
 8018f4e:	9310      	str	r3, [sp, #64]	; 0x40
 8018f50:	b292      	uxth	r2, r2
 8018f52:	b289      	uxth	r1, r1
 8018f54:	fb02 f301 	mul.w	r3, r2, r1
 8018f58:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 8018f5c:	0112      	lsls	r2, r2, #4
 8018f5e:	b289      	uxth	r1, r1
 8018f60:	f5c2 7c80 	rsb	ip, r2, #256	; 0x100
 8018f64:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8018f66:	1ad2      	subs	r2, r2, r3
 8018f68:	ebac 0c01 	sub.w	ip, ip, r1
 8018f6c:	b292      	uxth	r2, r2
 8018f6e:	436a      	muls	r2, r5
 8018f70:	fa1f fc8c 	uxth.w	ip, ip
 8018f74:	fb00 200c 	mla	r0, r0, ip, r2
 8018f78:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8018f7a:	fb01 0102 	mla	r1, r1, r2, r0
 8018f7e:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8018f80:	fb03 1302 	mla	r3, r3, r2, r1
 8018f84:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8018f88:	2b00      	cmp	r3, #0
 8018f8a:	d043      	beq.n	8019014 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x284>
 8018f8c:	4ac9      	ldr	r2, [pc, #804]	; (80192b4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x524>)
 8018f8e:	6811      	ldr	r1, [r2, #0]
 8018f90:	ea4f 2e11 	mov.w	lr, r1, lsr #8
 8018f94:	08ca      	lsrs	r2, r1, #3
 8018f96:	00c9      	lsls	r1, r1, #3
 8018f98:	b2c9      	uxtb	r1, r1
 8018f9a:	2bff      	cmp	r3, #255	; 0xff
 8018f9c:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 8018fa0:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8018fa4:	460d      	mov	r5, r1
 8018fa6:	f000 809c 	beq.w	80190e2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x352>
 8018faa:	f8b8 c000 	ldrh.w	ip, [r8]
 8018fae:	b299      	uxth	r1, r3
 8018fb0:	ea4f 202c 	mov.w	r0, ip, asr #8
 8018fb4:	43db      	mvns	r3, r3
 8018fb6:	b2db      	uxtb	r3, r3
 8018fb8:	fb1e fe01 	smulbb	lr, lr, r1
 8018fbc:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8018fc0:	fb00 e003 	mla	r0, r0, r3, lr
 8018fc4:	ea4f 0eec 	mov.w	lr, ip, asr #3
 8018fc8:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 8018fcc:	fb12 f201 	smulbb	r2, r2, r1
 8018fd0:	fb0e 2203 	mla	r2, lr, r3, r2
 8018fd4:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8018fd8:	b292      	uxth	r2, r2
 8018fda:	fb15 f101 	smulbb	r1, r5, r1
 8018fde:	fa5f fc8c 	uxtb.w	ip, ip
 8018fe2:	b280      	uxth	r0, r0
 8018fe4:	fb0c 1303 	mla	r3, ip, r3, r1
 8018fe8:	f102 0e01 	add.w	lr, r2, #1
 8018fec:	b29b      	uxth	r3, r3
 8018fee:	1c41      	adds	r1, r0, #1
 8018ff0:	eb0e 2212 	add.w	r2, lr, r2, lsr #8
 8018ff4:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 8018ff8:	0952      	lsrs	r2, r2, #5
 8018ffa:	1c59      	adds	r1, r3, #1
 8018ffc:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8019000:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 8019004:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 8019008:	4310      	orrs	r0, r2
 801900a:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801900e:	4318      	orrs	r0, r3
 8019010:	f8a8 0000 	strh.w	r0, [r8]
 8019014:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8019016:	441c      	add	r4, r3
 8019018:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801901a:	f108 0802 	add.w	r8, r8, #2
 801901e:	441e      	add	r6, r3
 8019020:	f109 39ff 	add.w	r9, r9, #4294967295
 8019024:	e735      	b.n	8018e92 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x102>
 8019026:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8019028:	441c      	add	r4, r3
 801902a:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801902c:	441e      	add	r6, r3
 801902e:	9b06      	ldr	r3, [sp, #24]
 8019030:	3b01      	subs	r3, #1
 8019032:	9306      	str	r3, [sp, #24]
 8019034:	f10b 0b02 	add.w	fp, fp, #2
 8019038:	e6e2      	b.n	8018e00 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x70>
 801903a:	f47f aef3 	bne.w	8018e24 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x94>
 801903e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8019040:	2b00      	cmp	r3, #0
 8019042:	f340 8139 	ble.w	80192b8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x528>
 8019046:	ee3a aa2b 	vadd.f32	s20, s20, s23
 801904a:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801904e:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 8019052:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8019054:	ee79 9a8b 	vadd.f32	s19, s19, s22
 8019058:	ee39 9a2a 	vadd.f32	s18, s18, s21
 801905c:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8019060:	eef0 6a48 	vmov.f32	s13, s16
 8019064:	ee69 7a27 	vmul.f32	s15, s18, s15
 8019068:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801906c:	ee37 8a48 	vsub.f32	s16, s14, s16
 8019070:	ee16 4a90 	vmov	r4, s13
 8019074:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8019078:	eef0 6a68 	vmov.f32	s13, s17
 801907c:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8019080:	ee18 2a10 	vmov	r2, s16
 8019084:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8019088:	fb92 f3f3 	sdiv	r3, r2, r3
 801908c:	ee18 2a90 	vmov	r2, s17
 8019090:	9329      	str	r3, [sp, #164]	; 0xa4
 8019092:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8019094:	fb92 f3f3 	sdiv	r3, r2, r3
 8019098:	932a      	str	r3, [sp, #168]	; 0xa8
 801909a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801909c:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801909e:	3b01      	subs	r3, #1
 80190a0:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80190a4:	930a      	str	r3, [sp, #40]	; 0x28
 80190a6:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80190a8:	bf08      	it	eq
 80190aa:	4613      	moveq	r3, r2
 80190ac:	ee16 6a90 	vmov	r6, s13
 80190b0:	9306      	str	r3, [sp, #24]
 80190b2:	eef0 8a67 	vmov.f32	s17, s15
 80190b6:	eeb0 8a47 	vmov.f32	s16, s14
 80190ba:	e69a      	b.n	8018df2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x62>
 80190bc:	2900      	cmp	r1, #0
 80190be:	f43f af47 	beq.w	8018f50 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1c0>
 80190c2:	4453      	add	r3, sl
 80190c4:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 80190c8:	07db      	lsls	r3, r3, #31
 80190ca:	f817 c00c 	ldrb.w	ip, [r7, ip]
 80190ce:	bf54      	ite	pl
 80190d0:	f00c 030f 	andpl.w	r3, ip, #15
 80190d4:	ea4f 132c 	movmi.w	r3, ip, asr #4
 80190d8:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 80190dc:	b2db      	uxtb	r3, r3
 80190de:	930b      	str	r3, [sp, #44]	; 0x2c
 80190e0:	e736      	b.n	8018f50 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1c0>
 80190e2:	00d2      	lsls	r2, r2, #3
 80190e4:	ea42 2e0e 	orr.w	lr, r2, lr, lsl #8
 80190e8:	ea4e 01d1 	orr.w	r1, lr, r1, lsr #3
 80190ec:	f8a8 1000 	strh.w	r1, [r8]
 80190f0:	e790      	b.n	8019014 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x284>
 80190f2:	1c45      	adds	r5, r0, #1
 80190f4:	d18e      	bne.n	8019014 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x284>
 80190f6:	9d07      	ldr	r5, [sp, #28]
 80190f8:	4285      	cmp	r5, r0
 80190fa:	dd8b      	ble.n	8019014 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x284>
 80190fc:	1c5d      	adds	r5, r3, #1
 80190fe:	db89      	blt.n	8019014 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x284>
 8019100:	9d08      	ldr	r5, [sp, #32]
 8019102:	429d      	cmp	r5, r3
 8019104:	dd86      	ble.n	8019014 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x284>
 8019106:	e9cd 0302 	strd	r0, r3, [sp, #8]
 801910a:	9b07      	ldr	r3, [sp, #28]
 801910c:	9300      	str	r3, [sp, #0]
 801910e:	e9cd 2104 	strd	r2, r1, [sp, #16]
 8019112:	9501      	str	r5, [sp, #4]
 8019114:	4653      	mov	r3, sl
 8019116:	463a      	mov	r2, r7
 8019118:	4641      	mov	r1, r8
 801911a:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801911c:	f7ff fd54 	bl	8018bc8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>
 8019120:	e778      	b.n	8019014 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x284>
 8019122:	9909      	ldr	r1, [sp, #36]	; 0x24
 8019124:	1422      	asrs	r2, r4, #16
 8019126:	1433      	asrs	r3, r6, #16
 8019128:	fb01 2303 	mla	r3, r1, r3, r2
 801912c:	085a      	lsrs	r2, r3, #1
 801912e:	07d9      	lsls	r1, r3, #31
 8019130:	5cba      	ldrb	r2, [r7, r2]
 8019132:	bf54      	ite	pl
 8019134:	f002 020f 	andpl.w	r2, r2, #15
 8019138:	1112      	asrmi	r2, r2, #4
 801913a:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801913e:	f3c4 3003 	ubfx	r0, r4, #12, #4
 8019142:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 8019146:	b2d2      	uxtb	r2, r2
 8019148:	2800      	cmp	r0, #0
 801914a:	f000 8099 	beq.w	8019280 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4f0>
 801914e:	f103 0e01 	add.w	lr, r3, #1
 8019152:	ea4f 015e 	mov.w	r1, lr, lsr #1
 8019156:	f01e 0f01 	tst.w	lr, #1
 801915a:	5c79      	ldrb	r1, [r7, r1]
 801915c:	bf0c      	ite	eq
 801915e:	f001 010f 	andeq.w	r1, r1, #15
 8019162:	1109      	asrne	r1, r1, #4
 8019164:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 8019168:	b2c9      	uxtb	r1, r1
 801916a:	9111      	str	r1, [sp, #68]	; 0x44
 801916c:	f1bc 0f00 	cmp.w	ip, #0
 8019170:	d018      	beq.n	80191a4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x414>
 8019172:	990e      	ldr	r1, [sp, #56]	; 0x38
 8019174:	440b      	add	r3, r1
 8019176:	0859      	lsrs	r1, r3, #1
 8019178:	07dd      	lsls	r5, r3, #31
 801917a:	5c79      	ldrb	r1, [r7, r1]
 801917c:	bf54      	ite	pl
 801917e:	f001 010f 	andpl.w	r1, r1, #15
 8019182:	1109      	asrmi	r1, r1, #4
 8019184:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 8019188:	b2c9      	uxtb	r1, r1
 801918a:	3301      	adds	r3, #1
 801918c:	910c      	str	r1, [sp, #48]	; 0x30
 801918e:	0859      	lsrs	r1, r3, #1
 8019190:	07dd      	lsls	r5, r3, #31
 8019192:	5c79      	ldrb	r1, [r7, r1]
 8019194:	bf54      	ite	pl
 8019196:	f001 010f 	andpl.w	r1, r1, #15
 801919a:	1109      	asrmi	r1, r1, #4
 801919c:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 80191a0:	b2c9      	uxtb	r1, r1
 80191a2:	9112      	str	r1, [sp, #72]	; 0x48
 80191a4:	b280      	uxth	r0, r0
 80191a6:	fa1f fc8c 	uxth.w	ip, ip
 80191aa:	fb00 f30c 	mul.w	r3, r0, ip
 80191ae:	ebc3 1c0c 	rsb	ip, r3, ip, lsl #4
 80191b2:	0100      	lsls	r0, r0, #4
 80191b4:	fa1f fc8c 	uxth.w	ip, ip
 80191b8:	f5c0 7180 	rsb	r1, r0, #256	; 0x100
 80191bc:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80191be:	1ac0      	subs	r0, r0, r3
 80191c0:	eba1 010c 	sub.w	r1, r1, ip
 80191c4:	b280      	uxth	r0, r0
 80191c6:	b289      	uxth	r1, r1
 80191c8:	4368      	muls	r0, r5
 80191ca:	fb02 0201 	mla	r2, r2, r1, r0
 80191ce:	990c      	ldr	r1, [sp, #48]	; 0x30
 80191d0:	fb0c 2c01 	mla	ip, ip, r1, r2
 80191d4:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80191d6:	fb03 c302 	mla	r3, r3, r2, ip
 80191da:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80191de:	2b00      	cmp	r3, #0
 80191e0:	d045      	beq.n	801926e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4de>
 80191e2:	4a34      	ldr	r2, [pc, #208]	; (80192b4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x524>)
 80191e4:	6811      	ldr	r1, [r2, #0]
 80191e6:	2bff      	cmp	r3, #255	; 0xff
 80191e8:	ea4f 2e11 	mov.w	lr, r1, lsr #8
 80191ec:	ea4f 02d1 	mov.w	r2, r1, lsr #3
 80191f0:	ea4f 01c1 	mov.w	r1, r1, lsl #3
 80191f4:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 80191f8:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 80191fc:	b2c9      	uxtb	r1, r1
 80191fe:	d050      	beq.n	80192a2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x512>
 8019200:	f8b8 c000 	ldrh.w	ip, [r8]
 8019204:	fa1f f983 	uxth.w	r9, r3
 8019208:	ea4f 202c 	mov.w	r0, ip, asr #8
 801920c:	43db      	mvns	r3, r3
 801920e:	b2db      	uxtb	r3, r3
 8019210:	fb1e fe09 	smulbb	lr, lr, r9
 8019214:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8019218:	fb00 e003 	mla	r0, r0, r3, lr
 801921c:	ea4f 0eec 	mov.w	lr, ip, asr #3
 8019220:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 8019224:	fb12 f209 	smulbb	r2, r2, r9
 8019228:	fb0e 2203 	mla	r2, lr, r3, r2
 801922c:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8019230:	b292      	uxth	r2, r2
 8019232:	fa5f fc8c 	uxtb.w	ip, ip
 8019236:	fb11 f109 	smulbb	r1, r1, r9
 801923a:	b280      	uxth	r0, r0
 801923c:	fb0c 1103 	mla	r1, ip, r3, r1
 8019240:	f102 0e01 	add.w	lr, r2, #1
 8019244:	b289      	uxth	r1, r1
 8019246:	eb0e 2212 	add.w	r2, lr, r2, lsr #8
 801924a:	f100 0e01 	add.w	lr, r0, #1
 801924e:	0952      	lsrs	r2, r2, #5
 8019250:	eb0e 2010 	add.w	r0, lr, r0, lsr #8
 8019254:	1c4b      	adds	r3, r1, #1
 8019256:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801925a:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 801925e:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8019262:	4302      	orrs	r2, r0
 8019264:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 8019268:	430a      	orrs	r2, r1
 801926a:	f8a8 2000 	strh.w	r2, [r8]
 801926e:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8019270:	441c      	add	r4, r3
 8019272:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8019274:	f108 0802 	add.w	r8, r8, #2
 8019278:	441e      	add	r6, r3
 801927a:	f10a 3aff 	add.w	sl, sl, #4294967295
 801927e:	e5eb      	b.n	8018e58 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xc8>
 8019280:	f1bc 0f00 	cmp.w	ip, #0
 8019284:	d08e      	beq.n	80191a4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x414>
 8019286:	990e      	ldr	r1, [sp, #56]	; 0x38
 8019288:	440b      	add	r3, r1
 801928a:	0859      	lsrs	r1, r3, #1
 801928c:	07db      	lsls	r3, r3, #31
 801928e:	5c79      	ldrb	r1, [r7, r1]
 8019290:	bf54      	ite	pl
 8019292:	f001 010f 	andpl.w	r1, r1, #15
 8019296:	1109      	asrmi	r1, r1, #4
 8019298:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 801929c:	b2c9      	uxtb	r1, r1
 801929e:	910c      	str	r1, [sp, #48]	; 0x30
 80192a0:	e780      	b.n	80191a4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x414>
 80192a2:	00d2      	lsls	r2, r2, #3
 80192a4:	ea42 2e0e 	orr.w	lr, r2, lr, lsl #8
 80192a8:	ea4e 01d1 	orr.w	r1, lr, r1, lsr #3
 80192ac:	f8a8 1000 	strh.w	r1, [r8]
 80192b0:	e7dd      	b.n	801926e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4de>
 80192b2:	bf00      	nop
 80192b4:	20012340 	.word	0x20012340
 80192b8:	b015      	add	sp, #84	; 0x54
 80192ba:	ecbd 8b08 	vpop	{d8-d11}
 80192be:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80192c2:	bf00      	nop

080192c4 <CRC_Lock>:
 80192c4:	b530      	push	{r4, r5, lr}
 80192c6:	4a1d      	ldr	r2, [pc, #116]	; (801933c <CRC_Lock+0x78>)
 80192c8:	6813      	ldr	r3, [r2, #0]
 80192ca:	f023 0301 	bic.w	r3, r3, #1
 80192ce:	6013      	str	r3, [r2, #0]
 80192d0:	4b1b      	ldr	r3, [pc, #108]	; (8019340 <CRC_Lock+0x7c>)
 80192d2:	681a      	ldr	r2, [r3, #0]
 80192d4:	f64f 74f0 	movw	r4, #65520	; 0xfff0
 80192d8:	4022      	ands	r2, r4
 80192da:	f24c 2540 	movw	r5, #49728	; 0xc240
 80192de:	42aa      	cmp	r2, r5
 80192e0:	d005      	beq.n	80192ee <CRC_Lock+0x2a>
 80192e2:	681b      	ldr	r3, [r3, #0]
 80192e4:	f24c 2270 	movw	r2, #49776	; 0xc270
 80192e8:	4023      	ands	r3, r4
 80192ea:	4293      	cmp	r3, r2
 80192ec:	d11d      	bne.n	801932a <CRC_Lock+0x66>
 80192ee:	4b15      	ldr	r3, [pc, #84]	; (8019344 <CRC_Lock+0x80>)
 80192f0:	681b      	ldr	r3, [r3, #0]
 80192f2:	b9d3      	cbnz	r3, 801932a <CRC_Lock+0x66>
 80192f4:	4a14      	ldr	r2, [pc, #80]	; (8019348 <CRC_Lock+0x84>)
 80192f6:	6813      	ldr	r3, [r2, #0]
 80192f8:	f3c3 030b 	ubfx	r3, r3, #0, #12
 80192fc:	f5b3 6f8a 	cmp.w	r3, #1104	; 0x450
 8019300:	d006      	beq.n	8019310 <CRC_Lock+0x4c>
 8019302:	6813      	ldr	r3, [r2, #0]
 8019304:	f240 4283 	movw	r2, #1155	; 0x483
 8019308:	f3c3 030b 	ubfx	r3, r3, #0, #12
 801930c:	4293      	cmp	r3, r2
 801930e:	d10c      	bne.n	801932a <CRC_Lock+0x66>
 8019310:	4b0e      	ldr	r3, [pc, #56]	; (801934c <CRC_Lock+0x88>)
 8019312:	2201      	movs	r2, #1
 8019314:	601a      	str	r2, [r3, #0]
 8019316:	681a      	ldr	r2, [r3, #0]
 8019318:	2a00      	cmp	r2, #0
 801931a:	d1fc      	bne.n	8019316 <CRC_Lock+0x52>
 801931c:	4b0c      	ldr	r3, [pc, #48]	; (8019350 <CRC_Lock+0x8c>)
 801931e:	6018      	str	r0, [r3, #0]
 8019320:	6818      	ldr	r0, [r3, #0]
 8019322:	1a43      	subs	r3, r0, r1
 8019324:	4258      	negs	r0, r3
 8019326:	4158      	adcs	r0, r3
 8019328:	bd30      	pop	{r4, r5, pc}
 801932a:	4b0a      	ldr	r3, [pc, #40]	; (8019354 <CRC_Lock+0x90>)
 801932c:	2201      	movs	r2, #1
 801932e:	601a      	str	r2, [r3, #0]
 8019330:	681a      	ldr	r2, [r3, #0]
 8019332:	2a00      	cmp	r2, #0
 8019334:	d1fc      	bne.n	8019330 <CRC_Lock+0x6c>
 8019336:	4b08      	ldr	r3, [pc, #32]	; (8019358 <CRC_Lock+0x94>)
 8019338:	e7f1      	b.n	801931e <CRC_Lock+0x5a>
 801933a:	bf00      	nop
 801933c:	e0002000 	.word	0xe0002000
 8019340:	e000ed00 	.word	0xe000ed00
 8019344:	e0042000 	.word	0xe0042000
 8019348:	5c001000 	.word	0x5c001000
 801934c:	58024c08 	.word	0x58024c08
 8019350:	58024c00 	.word	0x58024c00
 8019354:	40023008 	.word	0x40023008
 8019358:	40023000 	.word	0x40023000

0801935c <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>:
 801935c:	6101      	str	r1, [r0, #16]
 801935e:	4770      	bx	lr

08019360 <_ZN8touchgfx8Gestures4tickEv>:
 8019360:	7b83      	ldrb	r3, [r0, #14]
 8019362:	b14b      	cbz	r3, 8019378 <_ZN8touchgfx8Gestures4tickEv+0x18>
 8019364:	8903      	ldrh	r3, [r0, #8]
 8019366:	3301      	adds	r3, #1
 8019368:	b29b      	uxth	r3, r3
 801936a:	2b07      	cmp	r3, #7
 801936c:	8103      	strh	r3, [r0, #8]
 801936e:	bf81      	itttt	hi
 8019370:	2300      	movhi	r3, #0
 8019372:	8143      	strhhi	r3, [r0, #10]
 8019374:	8183      	strhhi	r3, [r0, #12]
 8019376:	7383      	strbhi	r3, [r0, #14]
 8019378:	4770      	bx	lr
	...

0801937c <_ZN8touchgfx8Gestures17registerDragEventEtttt>:
 801937c:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8019380:	4604      	mov	r4, r0
 8019382:	8880      	ldrh	r0, [r0, #4]
 8019384:	f8ad 0006 	strh.w	r0, [sp, #6]
 8019388:	4698      	mov	r8, r3
 801938a:	eba8 0000 	sub.w	r0, r8, r0
 801938e:	4b1c      	ldr	r3, [pc, #112]	; (8019400 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x84>)
 8019390:	9300      	str	r3, [sp, #0]
 8019392:	b280      	uxth	r0, r0
 8019394:	2300      	movs	r3, #0
 8019396:	f88d 3004 	strb.w	r3, [sp, #4]
 801939a:	b203      	sxth	r3, r0
 801939c:	2b00      	cmp	r3, #0
 801939e:	bfb8      	it	lt
 80193a0:	4240      	neglt	r0, r0
 80193a2:	4617      	mov	r7, r2
 80193a4:	8aa2      	ldrh	r2, [r4, #20]
 80193a6:	f8bd 5028 	ldrh.w	r5, [sp, #40]	; 0x28
 80193aa:	f8ad 800a 	strh.w	r8, [sp, #10]
 80193ae:	bfb8      	it	lt
 80193b0:	b203      	sxthlt	r3, r0
 80193b2:	460e      	mov	r6, r1
 80193b4:	4293      	cmp	r3, r2
 80193b6:	88e1      	ldrh	r1, [r4, #6]
 80193b8:	f8ad 1008 	strh.w	r1, [sp, #8]
 80193bc:	f8ad 500c 	strh.w	r5, [sp, #12]
 80193c0:	dc08      	bgt.n	80193d4 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x58>
 80193c2:	1a69      	subs	r1, r5, r1
 80193c4:	b289      	uxth	r1, r1
 80193c6:	b20b      	sxth	r3, r1
 80193c8:	2b00      	cmp	r3, #0
 80193ca:	bfbc      	itt	lt
 80193cc:	4249      	neglt	r1, r1
 80193ce:	b20b      	sxthlt	r3, r1
 80193d0:	429a      	cmp	r2, r3
 80193d2:	da13      	bge.n	80193fc <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x80>
 80193d4:	6920      	ldr	r0, [r4, #16]
 80193d6:	6803      	ldr	r3, [r0, #0]
 80193d8:	4669      	mov	r1, sp
 80193da:	685b      	ldr	r3, [r3, #4]
 80193dc:	4798      	blx	r3
 80193de:	eba8 0606 	sub.w	r6, r8, r6
 80193e2:	2300      	movs	r3, #0
 80193e4:	1bef      	subs	r7, r5, r7
 80193e6:	2001      	movs	r0, #1
 80193e8:	8123      	strh	r3, [r4, #8]
 80193ea:	8166      	strh	r6, [r4, #10]
 80193ec:	81a7      	strh	r7, [r4, #12]
 80193ee:	f8a4 8004 	strh.w	r8, [r4, #4]
 80193f2:	80e5      	strh	r5, [r4, #6]
 80193f4:	73a0      	strb	r0, [r4, #14]
 80193f6:	b004      	add	sp, #16
 80193f8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80193fc:	2000      	movs	r0, #0
 80193fe:	e7fa      	b.n	80193f6 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x7a>
 8019400:	0801c7bc 	.word	0x0801c7bc

08019404 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>:
 8019404:	b5f0      	push	{r4, r5, r6, r7, lr}
 8019406:	461e      	mov	r6, r3
 8019408:	1e4b      	subs	r3, r1, #1
 801940a:	2b01      	cmp	r3, #1
 801940c:	b085      	sub	sp, #20
 801940e:	4604      	mov	r4, r0
 8019410:	460d      	mov	r5, r1
 8019412:	4617      	mov	r7, r2
 8019414:	d84b      	bhi.n	80194ae <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xaa>
 8019416:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 801941a:	1cd3      	adds	r3, r2, #3
 801941c:	b29b      	uxth	r3, r3
 801941e:	2b06      	cmp	r3, #6
 8019420:	d916      	bls.n	8019450 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x4c>
 8019422:	f8df c0a0 	ldr.w	ip, [pc, #160]	; 80194c4 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 8019426:	f8cd c004 	str.w	ip, [sp, #4]
 801942a:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801942e:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8019432:	6900      	ldr	r0, [r0, #16]
 8019434:	f8ad 100c 	strh.w	r1, [sp, #12]
 8019438:	f04f 0c00 	mov.w	ip, #0
 801943c:	f88d c008 	strb.w	ip, [sp, #8]
 8019440:	f8ad 200a 	strh.w	r2, [sp, #10]
 8019444:	f8ad 300e 	strh.w	r3, [sp, #14]
 8019448:	6803      	ldr	r3, [r0, #0]
 801944a:	a901      	add	r1, sp, #4
 801944c:	689b      	ldr	r3, [r3, #8]
 801944e:	4798      	blx	r3
 8019450:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8019454:	1cd3      	adds	r3, r2, #3
 8019456:	b29b      	uxth	r3, r3
 8019458:	2b06      	cmp	r3, #6
 801945a:	d916      	bls.n	801948a <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 801945c:	f8df c064 	ldr.w	ip, [pc, #100]	; 80194c4 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 8019460:	f8cd c004 	str.w	ip, [sp, #4]
 8019464:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8019468:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 801946c:	6920      	ldr	r0, [r4, #16]
 801946e:	f8ad 100c 	strh.w	r1, [sp, #12]
 8019472:	f04f 0c01 	mov.w	ip, #1
 8019476:	f88d c008 	strb.w	ip, [sp, #8]
 801947a:	f8ad 200a 	strh.w	r2, [sp, #10]
 801947e:	f8ad 300e 	strh.w	r3, [sp, #14]
 8019482:	6803      	ldr	r3, [r0, #0]
 8019484:	a901      	add	r1, sp, #4
 8019486:	689b      	ldr	r3, [r3, #8]
 8019488:	4798      	blx	r3
 801948a:	4b0d      	ldr	r3, [pc, #52]	; (80194c0 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xbc>)
 801948c:	9301      	str	r3, [sp, #4]
 801948e:	6920      	ldr	r0, [r4, #16]
 8019490:	f88d 5008 	strb.w	r5, [sp, #8]
 8019494:	2300      	movs	r3, #0
 8019496:	f8ad 700a 	strh.w	r7, [sp, #10]
 801949a:	f8ad 600c 	strh.w	r6, [sp, #12]
 801949e:	f8ad 300e 	strh.w	r3, [sp, #14]
 80194a2:	6803      	ldr	r3, [r0, #0]
 80194a4:	a901      	add	r1, sp, #4
 80194a6:	681b      	ldr	r3, [r3, #0]
 80194a8:	4798      	blx	r3
 80194aa:	b005      	add	sp, #20
 80194ac:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80194ae:	2900      	cmp	r1, #0
 80194b0:	d1eb      	bne.n	801948a <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 80194b2:	80a2      	strh	r2, [r4, #4]
 80194b4:	80c6      	strh	r6, [r0, #6]
 80194b6:	60a1      	str	r1, [r4, #8]
 80194b8:	81a1      	strh	r1, [r4, #12]
 80194ba:	73a1      	strb	r1, [r4, #14]
 80194bc:	e7e5      	b.n	801948a <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 80194be:	bf00      	nop
 80194c0:	0801c7a8 	.word	0x0801c7a8
 80194c4:	0801c7d0 	.word	0x0801c7d0

080194c8 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE>:
 80194c8:	b570      	push	{r4, r5, r6, lr}
 80194ca:	790b      	ldrb	r3, [r1, #4]
 80194cc:	f890 502c 	ldrb.w	r5, [r0, #44]	; 0x2c
 80194d0:	2b00      	cmp	r3, #0
 80194d2:	bf0c      	ite	eq
 80194d4:	2301      	moveq	r3, #1
 80194d6:	2300      	movne	r3, #0
 80194d8:	4604      	mov	r4, r0
 80194da:	460e      	mov	r6, r1
 80194dc:	f880 302c 	strb.w	r3, [r0, #44]	; 0x2c
 80194e0:	d110      	bne.n	8019504 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
 80194e2:	b185      	cbz	r5, 8019506 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3e>
 80194e4:	7933      	ldrb	r3, [r6, #4]
 80194e6:	2b01      	cmp	r3, #1
 80194e8:	d113      	bne.n	8019512 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x4a>
 80194ea:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 80194ec:	b188      	cbz	r0, 8019512 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x4a>
 80194ee:	6803      	ldr	r3, [r0, #0]
 80194f0:	68db      	ldr	r3, [r3, #12]
 80194f2:	4798      	blx	r3
 80194f4:	b168      	cbz	r0, 8019512 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x4a>
 80194f6:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 80194f8:	6803      	ldr	r3, [r0, #0]
 80194fa:	4621      	mov	r1, r4
 80194fc:	689b      	ldr	r3, [r3, #8]
 80194fe:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8019502:	4718      	bx	r3
 8019504:	b12d      	cbz	r5, 8019512 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x4a>
 8019506:	6823      	ldr	r3, [r4, #0]
 8019508:	4620      	mov	r0, r4
 801950a:	695b      	ldr	r3, [r3, #20]
 801950c:	4798      	blx	r3
 801950e:	2d00      	cmp	r5, #0
 8019510:	d1e8      	bne.n	80194e4 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x1c>
 8019512:	bd70      	pop	{r4, r5, r6, pc}

08019514 <__aeabi_atexit>:
 8019514:	460b      	mov	r3, r1
 8019516:	4601      	mov	r1, r0
 8019518:	4618      	mov	r0, r3
 801951a:	f000 b853 	b.w	80195c4 <__cxa_atexit>

0801951e <__cxa_pure_virtual>:
 801951e:	b508      	push	{r3, lr}
 8019520:	f000 f820 	bl	8019564 <_ZSt9terminatev>

08019524 <_ZdlPvj>:
 8019524:	f000 b80f 	b.w	8019546 <_ZdlPv>

08019528 <__cxa_guard_acquire>:
 8019528:	6803      	ldr	r3, [r0, #0]
 801952a:	07db      	lsls	r3, r3, #31
 801952c:	d406      	bmi.n	801953c <__cxa_guard_acquire+0x14>
 801952e:	7843      	ldrb	r3, [r0, #1]
 8019530:	b103      	cbz	r3, 8019534 <__cxa_guard_acquire+0xc>
 8019532:	deff      	udf	#255	; 0xff
 8019534:	2301      	movs	r3, #1
 8019536:	7043      	strb	r3, [r0, #1]
 8019538:	4618      	mov	r0, r3
 801953a:	4770      	bx	lr
 801953c:	2000      	movs	r0, #0
 801953e:	4770      	bx	lr

08019540 <__cxa_guard_release>:
 8019540:	2301      	movs	r3, #1
 8019542:	6003      	str	r3, [r0, #0]
 8019544:	4770      	bx	lr

08019546 <_ZdlPv>:
 8019546:	f000 b88f 	b.w	8019668 <free>

0801954a <_ZN10__cxxabiv111__terminateEPFvvE>:
 801954a:	b508      	push	{r3, lr}
 801954c:	4780      	blx	r0
 801954e:	f000 f80e 	bl	801956e <abort>
	...

08019554 <_ZSt13get_terminatev>:
 8019554:	4b02      	ldr	r3, [pc, #8]	; (8019560 <_ZSt13get_terminatev+0xc>)
 8019556:	6818      	ldr	r0, [r3, #0]
 8019558:	f3bf 8f5b 	dmb	ish
 801955c:	4770      	bx	lr
 801955e:	bf00      	nop
 8019560:	20000108 	.word	0x20000108

08019564 <_ZSt9terminatev>:
 8019564:	b508      	push	{r3, lr}
 8019566:	f7ff fff5 	bl	8019554 <_ZSt13get_terminatev>
 801956a:	f7ff ffee 	bl	801954a <_ZN10__cxxabiv111__terminateEPFvvE>

0801956e <abort>:
 801956e:	b508      	push	{r3, lr}
 8019570:	2006      	movs	r0, #6
 8019572:	f000 fc3d 	bl	8019df0 <raise>
 8019576:	2001      	movs	r0, #1
 8019578:	f7e9 f9e0 	bl	800293c <_exit>

0801957c <__assert_func>:
 801957c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 801957e:	461c      	mov	r4, r3
 8019580:	4b09      	ldr	r3, [pc, #36]	; (80195a8 <__assert_func+0x2c>)
 8019582:	681b      	ldr	r3, [r3, #0]
 8019584:	4605      	mov	r5, r0
 8019586:	68d8      	ldr	r0, [r3, #12]
 8019588:	b152      	cbz	r2, 80195a0 <__assert_func+0x24>
 801958a:	4b08      	ldr	r3, [pc, #32]	; (80195ac <__assert_func+0x30>)
 801958c:	9100      	str	r1, [sp, #0]
 801958e:	e9cd 3201 	strd	r3, r2, [sp, #4]
 8019592:	4907      	ldr	r1, [pc, #28]	; (80195b0 <__assert_func+0x34>)
 8019594:	462b      	mov	r3, r5
 8019596:	4622      	mov	r2, r4
 8019598:	f000 f828 	bl	80195ec <fiprintf>
 801959c:	f7ff ffe7 	bl	801956e <abort>
 80195a0:	4b04      	ldr	r3, [pc, #16]	; (80195b4 <__assert_func+0x38>)
 80195a2:	461a      	mov	r2, r3
 80195a4:	e7f2      	b.n	801958c <__assert_func+0x10>
 80195a6:	bf00      	nop
 80195a8:	2000010c 	.word	0x2000010c
 80195ac:	0801da40 	.word	0x0801da40
 80195b0:	0801da4d 	.word	0x0801da4d
 80195b4:	0801da7b 	.word	0x0801da7b

080195b8 <atexit>:
 80195b8:	2300      	movs	r3, #0
 80195ba:	4601      	mov	r1, r0
 80195bc:	461a      	mov	r2, r3
 80195be:	4618      	mov	r0, r3
 80195c0:	f000 bcf2 	b.w	8019fa8 <__register_exitproc>

080195c4 <__cxa_atexit>:
 80195c4:	b510      	push	{r4, lr}
 80195c6:	4c05      	ldr	r4, [pc, #20]	; (80195dc <__cxa_atexit+0x18>)
 80195c8:	4613      	mov	r3, r2
 80195ca:	b12c      	cbz	r4, 80195d8 <__cxa_atexit+0x14>
 80195cc:	460a      	mov	r2, r1
 80195ce:	4601      	mov	r1, r0
 80195d0:	2002      	movs	r0, #2
 80195d2:	f000 fce9 	bl	8019fa8 <__register_exitproc>
 80195d6:	bd10      	pop	{r4, pc}
 80195d8:	4620      	mov	r0, r4
 80195da:	e7fc      	b.n	80195d6 <__cxa_atexit+0x12>
 80195dc:	08019fa9 	.word	0x08019fa9

080195e0 <__errno>:
 80195e0:	4b01      	ldr	r3, [pc, #4]	; (80195e8 <__errno+0x8>)
 80195e2:	6818      	ldr	r0, [r3, #0]
 80195e4:	4770      	bx	lr
 80195e6:	bf00      	nop
 80195e8:	2000010c 	.word	0x2000010c

080195ec <fiprintf>:
 80195ec:	b40e      	push	{r1, r2, r3}
 80195ee:	b503      	push	{r0, r1, lr}
 80195f0:	4601      	mov	r1, r0
 80195f2:	ab03      	add	r3, sp, #12
 80195f4:	4805      	ldr	r0, [pc, #20]	; (801960c <fiprintf+0x20>)
 80195f6:	f853 2b04 	ldr.w	r2, [r3], #4
 80195fa:	6800      	ldr	r0, [r0, #0]
 80195fc:	9301      	str	r3, [sp, #4]
 80195fe:	f000 f921 	bl	8019844 <_vfiprintf_r>
 8019602:	b002      	add	sp, #8
 8019604:	f85d eb04 	ldr.w	lr, [sp], #4
 8019608:	b003      	add	sp, #12
 801960a:	4770      	bx	lr
 801960c:	2000010c 	.word	0x2000010c

08019610 <__libc_init_array>:
 8019610:	b570      	push	{r4, r5, r6, lr}
 8019612:	4e0d      	ldr	r6, [pc, #52]	; (8019648 <__libc_init_array+0x38>)
 8019614:	4c0d      	ldr	r4, [pc, #52]	; (801964c <__libc_init_array+0x3c>)
 8019616:	1ba4      	subs	r4, r4, r6
 8019618:	10a4      	asrs	r4, r4, #2
 801961a:	2500      	movs	r5, #0
 801961c:	42a5      	cmp	r5, r4
 801961e:	d109      	bne.n	8019634 <__libc_init_array+0x24>
 8019620:	4e0b      	ldr	r6, [pc, #44]	; (8019650 <__libc_init_array+0x40>)
 8019622:	4c0c      	ldr	r4, [pc, #48]	; (8019654 <__libc_init_array+0x44>)
 8019624:	f000 ffb0 	bl	801a588 <_init>
 8019628:	1ba4      	subs	r4, r4, r6
 801962a:	10a4      	asrs	r4, r4, #2
 801962c:	2500      	movs	r5, #0
 801962e:	42a5      	cmp	r5, r4
 8019630:	d105      	bne.n	801963e <__libc_init_array+0x2e>
 8019632:	bd70      	pop	{r4, r5, r6, pc}
 8019634:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 8019638:	4798      	blx	r3
 801963a:	3501      	adds	r5, #1
 801963c:	e7ee      	b.n	801961c <__libc_init_array+0xc>
 801963e:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 8019642:	4798      	blx	r3
 8019644:	3501      	adds	r5, #1
 8019646:	e7f2      	b.n	801962e <__libc_init_array+0x1e>
 8019648:	08055424 	.word	0x08055424
 801964c:	08055424 	.word	0x08055424
 8019650:	08055424 	.word	0x08055424
 8019654:	08055438 	.word	0x08055438

08019658 <malloc>:
 8019658:	4b02      	ldr	r3, [pc, #8]	; (8019664 <malloc+0xc>)
 801965a:	4601      	mov	r1, r0
 801965c:	6818      	ldr	r0, [r3, #0]
 801965e:	f000 b86d 	b.w	801973c <_malloc_r>
 8019662:	bf00      	nop
 8019664:	2000010c 	.word	0x2000010c

08019668 <free>:
 8019668:	4b02      	ldr	r3, [pc, #8]	; (8019674 <free+0xc>)
 801966a:	4601      	mov	r1, r0
 801966c:	6818      	ldr	r0, [r3, #0]
 801966e:	f000 b817 	b.w	80196a0 <_free_r>
 8019672:	bf00      	nop
 8019674:	2000010c 	.word	0x2000010c

08019678 <memcpy>:
 8019678:	b510      	push	{r4, lr}
 801967a:	1e43      	subs	r3, r0, #1
 801967c:	440a      	add	r2, r1
 801967e:	4291      	cmp	r1, r2
 8019680:	d100      	bne.n	8019684 <memcpy+0xc>
 8019682:	bd10      	pop	{r4, pc}
 8019684:	f811 4b01 	ldrb.w	r4, [r1], #1
 8019688:	f803 4f01 	strb.w	r4, [r3, #1]!
 801968c:	e7f7      	b.n	801967e <memcpy+0x6>

0801968e <memset>:
 801968e:	4402      	add	r2, r0
 8019690:	4603      	mov	r3, r0
 8019692:	4293      	cmp	r3, r2
 8019694:	d100      	bne.n	8019698 <memset+0xa>
 8019696:	4770      	bx	lr
 8019698:	f803 1b01 	strb.w	r1, [r3], #1
 801969c:	e7f9      	b.n	8019692 <memset+0x4>
	...

080196a0 <_free_r>:
 80196a0:	b538      	push	{r3, r4, r5, lr}
 80196a2:	4605      	mov	r5, r0
 80196a4:	2900      	cmp	r1, #0
 80196a6:	d045      	beq.n	8019734 <_free_r+0x94>
 80196a8:	f851 3c04 	ldr.w	r3, [r1, #-4]
 80196ac:	1f0c      	subs	r4, r1, #4
 80196ae:	2b00      	cmp	r3, #0
 80196b0:	bfb8      	it	lt
 80196b2:	18e4      	addlt	r4, r4, r3
 80196b4:	f000 feba 	bl	801a42c <__malloc_lock>
 80196b8:	4a1f      	ldr	r2, [pc, #124]	; (8019738 <_free_r+0x98>)
 80196ba:	6813      	ldr	r3, [r2, #0]
 80196bc:	4610      	mov	r0, r2
 80196be:	b933      	cbnz	r3, 80196ce <_free_r+0x2e>
 80196c0:	6063      	str	r3, [r4, #4]
 80196c2:	6014      	str	r4, [r2, #0]
 80196c4:	4628      	mov	r0, r5
 80196c6:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80196ca:	f000 beb0 	b.w	801a42e <__malloc_unlock>
 80196ce:	42a3      	cmp	r3, r4
 80196d0:	d90c      	bls.n	80196ec <_free_r+0x4c>
 80196d2:	6821      	ldr	r1, [r4, #0]
 80196d4:	1862      	adds	r2, r4, r1
 80196d6:	4293      	cmp	r3, r2
 80196d8:	bf04      	itt	eq
 80196da:	681a      	ldreq	r2, [r3, #0]
 80196dc:	685b      	ldreq	r3, [r3, #4]
 80196de:	6063      	str	r3, [r4, #4]
 80196e0:	bf04      	itt	eq
 80196e2:	1852      	addeq	r2, r2, r1
 80196e4:	6022      	streq	r2, [r4, #0]
 80196e6:	6004      	str	r4, [r0, #0]
 80196e8:	e7ec      	b.n	80196c4 <_free_r+0x24>
 80196ea:	4613      	mov	r3, r2
 80196ec:	685a      	ldr	r2, [r3, #4]
 80196ee:	b10a      	cbz	r2, 80196f4 <_free_r+0x54>
 80196f0:	42a2      	cmp	r2, r4
 80196f2:	d9fa      	bls.n	80196ea <_free_r+0x4a>
 80196f4:	6819      	ldr	r1, [r3, #0]
 80196f6:	1858      	adds	r0, r3, r1
 80196f8:	42a0      	cmp	r0, r4
 80196fa:	d10b      	bne.n	8019714 <_free_r+0x74>
 80196fc:	6820      	ldr	r0, [r4, #0]
 80196fe:	4401      	add	r1, r0
 8019700:	1858      	adds	r0, r3, r1
 8019702:	4282      	cmp	r2, r0
 8019704:	6019      	str	r1, [r3, #0]
 8019706:	d1dd      	bne.n	80196c4 <_free_r+0x24>
 8019708:	6810      	ldr	r0, [r2, #0]
 801970a:	6852      	ldr	r2, [r2, #4]
 801970c:	605a      	str	r2, [r3, #4]
 801970e:	4401      	add	r1, r0
 8019710:	6019      	str	r1, [r3, #0]
 8019712:	e7d7      	b.n	80196c4 <_free_r+0x24>
 8019714:	d902      	bls.n	801971c <_free_r+0x7c>
 8019716:	230c      	movs	r3, #12
 8019718:	602b      	str	r3, [r5, #0]
 801971a:	e7d3      	b.n	80196c4 <_free_r+0x24>
 801971c:	6820      	ldr	r0, [r4, #0]
 801971e:	1821      	adds	r1, r4, r0
 8019720:	428a      	cmp	r2, r1
 8019722:	bf04      	itt	eq
 8019724:	6811      	ldreq	r1, [r2, #0]
 8019726:	6852      	ldreq	r2, [r2, #4]
 8019728:	6062      	str	r2, [r4, #4]
 801972a:	bf04      	itt	eq
 801972c:	1809      	addeq	r1, r1, r0
 801972e:	6021      	streq	r1, [r4, #0]
 8019730:	605c      	str	r4, [r3, #4]
 8019732:	e7c7      	b.n	80196c4 <_free_r+0x24>
 8019734:	bd38      	pop	{r3, r4, r5, pc}
 8019736:	bf00      	nop
 8019738:	20012454 	.word	0x20012454

0801973c <_malloc_r>:
 801973c:	b570      	push	{r4, r5, r6, lr}
 801973e:	1ccd      	adds	r5, r1, #3
 8019740:	f025 0503 	bic.w	r5, r5, #3
 8019744:	3508      	adds	r5, #8
 8019746:	2d0c      	cmp	r5, #12
 8019748:	bf38      	it	cc
 801974a:	250c      	movcc	r5, #12
 801974c:	2d00      	cmp	r5, #0
 801974e:	4606      	mov	r6, r0
 8019750:	db01      	blt.n	8019756 <_malloc_r+0x1a>
 8019752:	42a9      	cmp	r1, r5
 8019754:	d903      	bls.n	801975e <_malloc_r+0x22>
 8019756:	230c      	movs	r3, #12
 8019758:	6033      	str	r3, [r6, #0]
 801975a:	2000      	movs	r0, #0
 801975c:	bd70      	pop	{r4, r5, r6, pc}
 801975e:	f000 fe65 	bl	801a42c <__malloc_lock>
 8019762:	4a21      	ldr	r2, [pc, #132]	; (80197e8 <_malloc_r+0xac>)
 8019764:	6814      	ldr	r4, [r2, #0]
 8019766:	4621      	mov	r1, r4
 8019768:	b991      	cbnz	r1, 8019790 <_malloc_r+0x54>
 801976a:	4c20      	ldr	r4, [pc, #128]	; (80197ec <_malloc_r+0xb0>)
 801976c:	6823      	ldr	r3, [r4, #0]
 801976e:	b91b      	cbnz	r3, 8019778 <_malloc_r+0x3c>
 8019770:	4630      	mov	r0, r6
 8019772:	f000 fb05 	bl	8019d80 <_sbrk_r>
 8019776:	6020      	str	r0, [r4, #0]
 8019778:	4629      	mov	r1, r5
 801977a:	4630      	mov	r0, r6
 801977c:	f000 fb00 	bl	8019d80 <_sbrk_r>
 8019780:	1c43      	adds	r3, r0, #1
 8019782:	d124      	bne.n	80197ce <_malloc_r+0x92>
 8019784:	230c      	movs	r3, #12
 8019786:	6033      	str	r3, [r6, #0]
 8019788:	4630      	mov	r0, r6
 801978a:	f000 fe50 	bl	801a42e <__malloc_unlock>
 801978e:	e7e4      	b.n	801975a <_malloc_r+0x1e>
 8019790:	680b      	ldr	r3, [r1, #0]
 8019792:	1b5b      	subs	r3, r3, r5
 8019794:	d418      	bmi.n	80197c8 <_malloc_r+0x8c>
 8019796:	2b0b      	cmp	r3, #11
 8019798:	d90f      	bls.n	80197ba <_malloc_r+0x7e>
 801979a:	600b      	str	r3, [r1, #0]
 801979c:	50cd      	str	r5, [r1, r3]
 801979e:	18cc      	adds	r4, r1, r3
 80197a0:	4630      	mov	r0, r6
 80197a2:	f000 fe44 	bl	801a42e <__malloc_unlock>
 80197a6:	f104 000b 	add.w	r0, r4, #11
 80197aa:	1d23      	adds	r3, r4, #4
 80197ac:	f020 0007 	bic.w	r0, r0, #7
 80197b0:	1ac3      	subs	r3, r0, r3
 80197b2:	d0d3      	beq.n	801975c <_malloc_r+0x20>
 80197b4:	425a      	negs	r2, r3
 80197b6:	50e2      	str	r2, [r4, r3]
 80197b8:	e7d0      	b.n	801975c <_malloc_r+0x20>
 80197ba:	428c      	cmp	r4, r1
 80197bc:	684b      	ldr	r3, [r1, #4]
 80197be:	bf16      	itet	ne
 80197c0:	6063      	strne	r3, [r4, #4]
 80197c2:	6013      	streq	r3, [r2, #0]
 80197c4:	460c      	movne	r4, r1
 80197c6:	e7eb      	b.n	80197a0 <_malloc_r+0x64>
 80197c8:	460c      	mov	r4, r1
 80197ca:	6849      	ldr	r1, [r1, #4]
 80197cc:	e7cc      	b.n	8019768 <_malloc_r+0x2c>
 80197ce:	1cc4      	adds	r4, r0, #3
 80197d0:	f024 0403 	bic.w	r4, r4, #3
 80197d4:	42a0      	cmp	r0, r4
 80197d6:	d005      	beq.n	80197e4 <_malloc_r+0xa8>
 80197d8:	1a21      	subs	r1, r4, r0
 80197da:	4630      	mov	r0, r6
 80197dc:	f000 fad0 	bl	8019d80 <_sbrk_r>
 80197e0:	3001      	adds	r0, #1
 80197e2:	d0cf      	beq.n	8019784 <_malloc_r+0x48>
 80197e4:	6025      	str	r5, [r4, #0]
 80197e6:	e7db      	b.n	80197a0 <_malloc_r+0x64>
 80197e8:	20012454 	.word	0x20012454
 80197ec:	20012458 	.word	0x20012458

080197f0 <__sfputc_r>:
 80197f0:	6893      	ldr	r3, [r2, #8]
 80197f2:	3b01      	subs	r3, #1
 80197f4:	2b00      	cmp	r3, #0
 80197f6:	b410      	push	{r4}
 80197f8:	6093      	str	r3, [r2, #8]
 80197fa:	da08      	bge.n	801980e <__sfputc_r+0x1e>
 80197fc:	6994      	ldr	r4, [r2, #24]
 80197fe:	42a3      	cmp	r3, r4
 8019800:	db01      	blt.n	8019806 <__sfputc_r+0x16>
 8019802:	290a      	cmp	r1, #10
 8019804:	d103      	bne.n	801980e <__sfputc_r+0x1e>
 8019806:	f85d 4b04 	ldr.w	r4, [sp], #4
 801980a:	f000 bb0d 	b.w	8019e28 <__swbuf_r>
 801980e:	6813      	ldr	r3, [r2, #0]
 8019810:	1c58      	adds	r0, r3, #1
 8019812:	6010      	str	r0, [r2, #0]
 8019814:	7019      	strb	r1, [r3, #0]
 8019816:	4608      	mov	r0, r1
 8019818:	f85d 4b04 	ldr.w	r4, [sp], #4
 801981c:	4770      	bx	lr

0801981e <__sfputs_r>:
 801981e:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8019820:	4606      	mov	r6, r0
 8019822:	460f      	mov	r7, r1
 8019824:	4614      	mov	r4, r2
 8019826:	18d5      	adds	r5, r2, r3
 8019828:	42ac      	cmp	r4, r5
 801982a:	d101      	bne.n	8019830 <__sfputs_r+0x12>
 801982c:	2000      	movs	r0, #0
 801982e:	e007      	b.n	8019840 <__sfputs_r+0x22>
 8019830:	463a      	mov	r2, r7
 8019832:	f814 1b01 	ldrb.w	r1, [r4], #1
 8019836:	4630      	mov	r0, r6
 8019838:	f7ff ffda 	bl	80197f0 <__sfputc_r>
 801983c:	1c43      	adds	r3, r0, #1
 801983e:	d1f3      	bne.n	8019828 <__sfputs_r+0xa>
 8019840:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08019844 <_vfiprintf_r>:
 8019844:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019848:	460c      	mov	r4, r1
 801984a:	b09d      	sub	sp, #116	; 0x74
 801984c:	4617      	mov	r7, r2
 801984e:	461d      	mov	r5, r3
 8019850:	4606      	mov	r6, r0
 8019852:	b118      	cbz	r0, 801985c <_vfiprintf_r+0x18>
 8019854:	6983      	ldr	r3, [r0, #24]
 8019856:	b90b      	cbnz	r3, 801985c <_vfiprintf_r+0x18>
 8019858:	f000 fcfa 	bl	801a250 <__sinit>
 801985c:	4b7c      	ldr	r3, [pc, #496]	; (8019a50 <_vfiprintf_r+0x20c>)
 801985e:	429c      	cmp	r4, r3
 8019860:	d158      	bne.n	8019914 <_vfiprintf_r+0xd0>
 8019862:	6874      	ldr	r4, [r6, #4]
 8019864:	89a3      	ldrh	r3, [r4, #12]
 8019866:	0718      	lsls	r0, r3, #28
 8019868:	d55e      	bpl.n	8019928 <_vfiprintf_r+0xe4>
 801986a:	6923      	ldr	r3, [r4, #16]
 801986c:	2b00      	cmp	r3, #0
 801986e:	d05b      	beq.n	8019928 <_vfiprintf_r+0xe4>
 8019870:	2300      	movs	r3, #0
 8019872:	9309      	str	r3, [sp, #36]	; 0x24
 8019874:	2320      	movs	r3, #32
 8019876:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 801987a:	2330      	movs	r3, #48	; 0x30
 801987c:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8019880:	9503      	str	r5, [sp, #12]
 8019882:	f04f 0b01 	mov.w	fp, #1
 8019886:	46b8      	mov	r8, r7
 8019888:	4645      	mov	r5, r8
 801988a:	f815 3b01 	ldrb.w	r3, [r5], #1
 801988e:	b10b      	cbz	r3, 8019894 <_vfiprintf_r+0x50>
 8019890:	2b25      	cmp	r3, #37	; 0x25
 8019892:	d154      	bne.n	801993e <_vfiprintf_r+0xfa>
 8019894:	ebb8 0a07 	subs.w	sl, r8, r7
 8019898:	d00b      	beq.n	80198b2 <_vfiprintf_r+0x6e>
 801989a:	4653      	mov	r3, sl
 801989c:	463a      	mov	r2, r7
 801989e:	4621      	mov	r1, r4
 80198a0:	4630      	mov	r0, r6
 80198a2:	f7ff ffbc 	bl	801981e <__sfputs_r>
 80198a6:	3001      	adds	r0, #1
 80198a8:	f000 80c2 	beq.w	8019a30 <_vfiprintf_r+0x1ec>
 80198ac:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80198ae:	4453      	add	r3, sl
 80198b0:	9309      	str	r3, [sp, #36]	; 0x24
 80198b2:	f898 3000 	ldrb.w	r3, [r8]
 80198b6:	2b00      	cmp	r3, #0
 80198b8:	f000 80ba 	beq.w	8019a30 <_vfiprintf_r+0x1ec>
 80198bc:	2300      	movs	r3, #0
 80198be:	f04f 32ff 	mov.w	r2, #4294967295
 80198c2:	e9cd 2305 	strd	r2, r3, [sp, #20]
 80198c6:	9304      	str	r3, [sp, #16]
 80198c8:	9307      	str	r3, [sp, #28]
 80198ca:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 80198ce:	931a      	str	r3, [sp, #104]	; 0x68
 80198d0:	46a8      	mov	r8, r5
 80198d2:	2205      	movs	r2, #5
 80198d4:	f818 1b01 	ldrb.w	r1, [r8], #1
 80198d8:	485e      	ldr	r0, [pc, #376]	; (8019a54 <_vfiprintf_r+0x210>)
 80198da:	f7e6 fc89 	bl	80001f0 <memchr>
 80198de:	9b04      	ldr	r3, [sp, #16]
 80198e0:	bb78      	cbnz	r0, 8019942 <_vfiprintf_r+0xfe>
 80198e2:	06d9      	lsls	r1, r3, #27
 80198e4:	bf44      	itt	mi
 80198e6:	2220      	movmi	r2, #32
 80198e8:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
 80198ec:	071a      	lsls	r2, r3, #28
 80198ee:	bf44      	itt	mi
 80198f0:	222b      	movmi	r2, #43	; 0x2b
 80198f2:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
 80198f6:	782a      	ldrb	r2, [r5, #0]
 80198f8:	2a2a      	cmp	r2, #42	; 0x2a
 80198fa:	d02a      	beq.n	8019952 <_vfiprintf_r+0x10e>
 80198fc:	9a07      	ldr	r2, [sp, #28]
 80198fe:	46a8      	mov	r8, r5
 8019900:	2000      	movs	r0, #0
 8019902:	250a      	movs	r5, #10
 8019904:	4641      	mov	r1, r8
 8019906:	f811 3b01 	ldrb.w	r3, [r1], #1
 801990a:	3b30      	subs	r3, #48	; 0x30
 801990c:	2b09      	cmp	r3, #9
 801990e:	d969      	bls.n	80199e4 <_vfiprintf_r+0x1a0>
 8019910:	b360      	cbz	r0, 801996c <_vfiprintf_r+0x128>
 8019912:	e024      	b.n	801995e <_vfiprintf_r+0x11a>
 8019914:	4b50      	ldr	r3, [pc, #320]	; (8019a58 <_vfiprintf_r+0x214>)
 8019916:	429c      	cmp	r4, r3
 8019918:	d101      	bne.n	801991e <_vfiprintf_r+0xda>
 801991a:	68b4      	ldr	r4, [r6, #8]
 801991c:	e7a2      	b.n	8019864 <_vfiprintf_r+0x20>
 801991e:	4b4f      	ldr	r3, [pc, #316]	; (8019a5c <_vfiprintf_r+0x218>)
 8019920:	429c      	cmp	r4, r3
 8019922:	bf08      	it	eq
 8019924:	68f4      	ldreq	r4, [r6, #12]
 8019926:	e79d      	b.n	8019864 <_vfiprintf_r+0x20>
 8019928:	4621      	mov	r1, r4
 801992a:	4630      	mov	r0, r6
 801992c:	f000 face 	bl	8019ecc <__swsetup_r>
 8019930:	2800      	cmp	r0, #0
 8019932:	d09d      	beq.n	8019870 <_vfiprintf_r+0x2c>
 8019934:	f04f 30ff 	mov.w	r0, #4294967295
 8019938:	b01d      	add	sp, #116	; 0x74
 801993a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801993e:	46a8      	mov	r8, r5
 8019940:	e7a2      	b.n	8019888 <_vfiprintf_r+0x44>
 8019942:	4a44      	ldr	r2, [pc, #272]	; (8019a54 <_vfiprintf_r+0x210>)
 8019944:	1a80      	subs	r0, r0, r2
 8019946:	fa0b f000 	lsl.w	r0, fp, r0
 801994a:	4318      	orrs	r0, r3
 801994c:	9004      	str	r0, [sp, #16]
 801994e:	4645      	mov	r5, r8
 8019950:	e7be      	b.n	80198d0 <_vfiprintf_r+0x8c>
 8019952:	9a03      	ldr	r2, [sp, #12]
 8019954:	1d11      	adds	r1, r2, #4
 8019956:	6812      	ldr	r2, [r2, #0]
 8019958:	9103      	str	r1, [sp, #12]
 801995a:	2a00      	cmp	r2, #0
 801995c:	db01      	blt.n	8019962 <_vfiprintf_r+0x11e>
 801995e:	9207      	str	r2, [sp, #28]
 8019960:	e004      	b.n	801996c <_vfiprintf_r+0x128>
 8019962:	4252      	negs	r2, r2
 8019964:	f043 0302 	orr.w	r3, r3, #2
 8019968:	9207      	str	r2, [sp, #28]
 801996a:	9304      	str	r3, [sp, #16]
 801996c:	f898 3000 	ldrb.w	r3, [r8]
 8019970:	2b2e      	cmp	r3, #46	; 0x2e
 8019972:	d10e      	bne.n	8019992 <_vfiprintf_r+0x14e>
 8019974:	f898 3001 	ldrb.w	r3, [r8, #1]
 8019978:	2b2a      	cmp	r3, #42	; 0x2a
 801997a:	d138      	bne.n	80199ee <_vfiprintf_r+0x1aa>
 801997c:	9b03      	ldr	r3, [sp, #12]
 801997e:	1d1a      	adds	r2, r3, #4
 8019980:	681b      	ldr	r3, [r3, #0]
 8019982:	9203      	str	r2, [sp, #12]
 8019984:	2b00      	cmp	r3, #0
 8019986:	bfb8      	it	lt
 8019988:	f04f 33ff 	movlt.w	r3, #4294967295
 801998c:	f108 0802 	add.w	r8, r8, #2
 8019990:	9305      	str	r3, [sp, #20]
 8019992:	4d33      	ldr	r5, [pc, #204]	; (8019a60 <_vfiprintf_r+0x21c>)
 8019994:	f898 1000 	ldrb.w	r1, [r8]
 8019998:	2203      	movs	r2, #3
 801999a:	4628      	mov	r0, r5
 801999c:	f7e6 fc28 	bl	80001f0 <memchr>
 80199a0:	b140      	cbz	r0, 80199b4 <_vfiprintf_r+0x170>
 80199a2:	2340      	movs	r3, #64	; 0x40
 80199a4:	1b40      	subs	r0, r0, r5
 80199a6:	fa03 f000 	lsl.w	r0, r3, r0
 80199aa:	9b04      	ldr	r3, [sp, #16]
 80199ac:	4303      	orrs	r3, r0
 80199ae:	f108 0801 	add.w	r8, r8, #1
 80199b2:	9304      	str	r3, [sp, #16]
 80199b4:	f898 1000 	ldrb.w	r1, [r8]
 80199b8:	482a      	ldr	r0, [pc, #168]	; (8019a64 <_vfiprintf_r+0x220>)
 80199ba:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 80199be:	2206      	movs	r2, #6
 80199c0:	f108 0701 	add.w	r7, r8, #1
 80199c4:	f7e6 fc14 	bl	80001f0 <memchr>
 80199c8:	2800      	cmp	r0, #0
 80199ca:	d037      	beq.n	8019a3c <_vfiprintf_r+0x1f8>
 80199cc:	4b26      	ldr	r3, [pc, #152]	; (8019a68 <_vfiprintf_r+0x224>)
 80199ce:	bb1b      	cbnz	r3, 8019a18 <_vfiprintf_r+0x1d4>
 80199d0:	9b03      	ldr	r3, [sp, #12]
 80199d2:	3307      	adds	r3, #7
 80199d4:	f023 0307 	bic.w	r3, r3, #7
 80199d8:	3308      	adds	r3, #8
 80199da:	9303      	str	r3, [sp, #12]
 80199dc:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80199de:	444b      	add	r3, r9
 80199e0:	9309      	str	r3, [sp, #36]	; 0x24
 80199e2:	e750      	b.n	8019886 <_vfiprintf_r+0x42>
 80199e4:	fb05 3202 	mla	r2, r5, r2, r3
 80199e8:	2001      	movs	r0, #1
 80199ea:	4688      	mov	r8, r1
 80199ec:	e78a      	b.n	8019904 <_vfiprintf_r+0xc0>
 80199ee:	2300      	movs	r3, #0
 80199f0:	f108 0801 	add.w	r8, r8, #1
 80199f4:	9305      	str	r3, [sp, #20]
 80199f6:	4619      	mov	r1, r3
 80199f8:	250a      	movs	r5, #10
 80199fa:	4640      	mov	r0, r8
 80199fc:	f810 2b01 	ldrb.w	r2, [r0], #1
 8019a00:	3a30      	subs	r2, #48	; 0x30
 8019a02:	2a09      	cmp	r2, #9
 8019a04:	d903      	bls.n	8019a0e <_vfiprintf_r+0x1ca>
 8019a06:	2b00      	cmp	r3, #0
 8019a08:	d0c3      	beq.n	8019992 <_vfiprintf_r+0x14e>
 8019a0a:	9105      	str	r1, [sp, #20]
 8019a0c:	e7c1      	b.n	8019992 <_vfiprintf_r+0x14e>
 8019a0e:	fb05 2101 	mla	r1, r5, r1, r2
 8019a12:	2301      	movs	r3, #1
 8019a14:	4680      	mov	r8, r0
 8019a16:	e7f0      	b.n	80199fa <_vfiprintf_r+0x1b6>
 8019a18:	ab03      	add	r3, sp, #12
 8019a1a:	9300      	str	r3, [sp, #0]
 8019a1c:	4622      	mov	r2, r4
 8019a1e:	4b13      	ldr	r3, [pc, #76]	; (8019a6c <_vfiprintf_r+0x228>)
 8019a20:	a904      	add	r1, sp, #16
 8019a22:	4630      	mov	r0, r6
 8019a24:	f3af 8000 	nop.w
 8019a28:	f1b0 3fff 	cmp.w	r0, #4294967295
 8019a2c:	4681      	mov	r9, r0
 8019a2e:	d1d5      	bne.n	80199dc <_vfiprintf_r+0x198>
 8019a30:	89a3      	ldrh	r3, [r4, #12]
 8019a32:	065b      	lsls	r3, r3, #25
 8019a34:	f53f af7e 	bmi.w	8019934 <_vfiprintf_r+0xf0>
 8019a38:	9809      	ldr	r0, [sp, #36]	; 0x24
 8019a3a:	e77d      	b.n	8019938 <_vfiprintf_r+0xf4>
 8019a3c:	ab03      	add	r3, sp, #12
 8019a3e:	9300      	str	r3, [sp, #0]
 8019a40:	4622      	mov	r2, r4
 8019a42:	4b0a      	ldr	r3, [pc, #40]	; (8019a6c <_vfiprintf_r+0x228>)
 8019a44:	a904      	add	r1, sp, #16
 8019a46:	4630      	mov	r0, r6
 8019a48:	f000 f888 	bl	8019b5c <_printf_i>
 8019a4c:	e7ec      	b.n	8019a28 <_vfiprintf_r+0x1e4>
 8019a4e:	bf00      	nop
 8019a50:	0801dad8 	.word	0x0801dad8
 8019a54:	0801da80 	.word	0x0801da80
 8019a58:	0801daf8 	.word	0x0801daf8
 8019a5c:	0801dab8 	.word	0x0801dab8
 8019a60:	0801da86 	.word	0x0801da86
 8019a64:	0801da8a 	.word	0x0801da8a
 8019a68:	00000000 	.word	0x00000000
 8019a6c:	0801981f 	.word	0x0801981f

08019a70 <_printf_common>:
 8019a70:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8019a74:	4691      	mov	r9, r2
 8019a76:	461f      	mov	r7, r3
 8019a78:	688a      	ldr	r2, [r1, #8]
 8019a7a:	690b      	ldr	r3, [r1, #16]
 8019a7c:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8019a80:	4293      	cmp	r3, r2
 8019a82:	bfb8      	it	lt
 8019a84:	4613      	movlt	r3, r2
 8019a86:	f8c9 3000 	str.w	r3, [r9]
 8019a8a:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 8019a8e:	4606      	mov	r6, r0
 8019a90:	460c      	mov	r4, r1
 8019a92:	b112      	cbz	r2, 8019a9a <_printf_common+0x2a>
 8019a94:	3301      	adds	r3, #1
 8019a96:	f8c9 3000 	str.w	r3, [r9]
 8019a9a:	6823      	ldr	r3, [r4, #0]
 8019a9c:	0699      	lsls	r1, r3, #26
 8019a9e:	bf42      	ittt	mi
 8019aa0:	f8d9 3000 	ldrmi.w	r3, [r9]
 8019aa4:	3302      	addmi	r3, #2
 8019aa6:	f8c9 3000 	strmi.w	r3, [r9]
 8019aaa:	6825      	ldr	r5, [r4, #0]
 8019aac:	f015 0506 	ands.w	r5, r5, #6
 8019ab0:	d107      	bne.n	8019ac2 <_printf_common+0x52>
 8019ab2:	f104 0a19 	add.w	sl, r4, #25
 8019ab6:	68e3      	ldr	r3, [r4, #12]
 8019ab8:	f8d9 2000 	ldr.w	r2, [r9]
 8019abc:	1a9b      	subs	r3, r3, r2
 8019abe:	42ab      	cmp	r3, r5
 8019ac0:	dc28      	bgt.n	8019b14 <_printf_common+0xa4>
 8019ac2:	f894 3043 	ldrb.w	r3, [r4, #67]	; 0x43
 8019ac6:	6822      	ldr	r2, [r4, #0]
 8019ac8:	3300      	adds	r3, #0
 8019aca:	bf18      	it	ne
 8019acc:	2301      	movne	r3, #1
 8019ace:	0692      	lsls	r2, r2, #26
 8019ad0:	d42d      	bmi.n	8019b2e <_printf_common+0xbe>
 8019ad2:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8019ad6:	4639      	mov	r1, r7
 8019ad8:	4630      	mov	r0, r6
 8019ada:	47c0      	blx	r8
 8019adc:	3001      	adds	r0, #1
 8019ade:	d020      	beq.n	8019b22 <_printf_common+0xb2>
 8019ae0:	6823      	ldr	r3, [r4, #0]
 8019ae2:	68e5      	ldr	r5, [r4, #12]
 8019ae4:	f8d9 2000 	ldr.w	r2, [r9]
 8019ae8:	f003 0306 	and.w	r3, r3, #6
 8019aec:	2b04      	cmp	r3, #4
 8019aee:	bf08      	it	eq
 8019af0:	1aad      	subeq	r5, r5, r2
 8019af2:	68a3      	ldr	r3, [r4, #8]
 8019af4:	6922      	ldr	r2, [r4, #16]
 8019af6:	bf0c      	ite	eq
 8019af8:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8019afc:	2500      	movne	r5, #0
 8019afe:	4293      	cmp	r3, r2
 8019b00:	bfc4      	itt	gt
 8019b02:	1a9b      	subgt	r3, r3, r2
 8019b04:	18ed      	addgt	r5, r5, r3
 8019b06:	f04f 0900 	mov.w	r9, #0
 8019b0a:	341a      	adds	r4, #26
 8019b0c:	454d      	cmp	r5, r9
 8019b0e:	d11a      	bne.n	8019b46 <_printf_common+0xd6>
 8019b10:	2000      	movs	r0, #0
 8019b12:	e008      	b.n	8019b26 <_printf_common+0xb6>
 8019b14:	2301      	movs	r3, #1
 8019b16:	4652      	mov	r2, sl
 8019b18:	4639      	mov	r1, r7
 8019b1a:	4630      	mov	r0, r6
 8019b1c:	47c0      	blx	r8
 8019b1e:	3001      	adds	r0, #1
 8019b20:	d103      	bne.n	8019b2a <_printf_common+0xba>
 8019b22:	f04f 30ff 	mov.w	r0, #4294967295
 8019b26:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8019b2a:	3501      	adds	r5, #1
 8019b2c:	e7c3      	b.n	8019ab6 <_printf_common+0x46>
 8019b2e:	18e1      	adds	r1, r4, r3
 8019b30:	1c5a      	adds	r2, r3, #1
 8019b32:	2030      	movs	r0, #48	; 0x30
 8019b34:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 8019b38:	4422      	add	r2, r4
 8019b3a:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 8019b3e:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 8019b42:	3302      	adds	r3, #2
 8019b44:	e7c5      	b.n	8019ad2 <_printf_common+0x62>
 8019b46:	2301      	movs	r3, #1
 8019b48:	4622      	mov	r2, r4
 8019b4a:	4639      	mov	r1, r7
 8019b4c:	4630      	mov	r0, r6
 8019b4e:	47c0      	blx	r8
 8019b50:	3001      	adds	r0, #1
 8019b52:	d0e6      	beq.n	8019b22 <_printf_common+0xb2>
 8019b54:	f109 0901 	add.w	r9, r9, #1
 8019b58:	e7d8      	b.n	8019b0c <_printf_common+0x9c>
	...

08019b5c <_printf_i>:
 8019b5c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8019b60:	f101 0c43 	add.w	ip, r1, #67	; 0x43
 8019b64:	460c      	mov	r4, r1
 8019b66:	7e09      	ldrb	r1, [r1, #24]
 8019b68:	b085      	sub	sp, #20
 8019b6a:	296e      	cmp	r1, #110	; 0x6e
 8019b6c:	4617      	mov	r7, r2
 8019b6e:	4606      	mov	r6, r0
 8019b70:	4698      	mov	r8, r3
 8019b72:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8019b74:	f000 80b3 	beq.w	8019cde <_printf_i+0x182>
 8019b78:	d822      	bhi.n	8019bc0 <_printf_i+0x64>
 8019b7a:	2963      	cmp	r1, #99	; 0x63
 8019b7c:	d036      	beq.n	8019bec <_printf_i+0x90>
 8019b7e:	d80a      	bhi.n	8019b96 <_printf_i+0x3a>
 8019b80:	2900      	cmp	r1, #0
 8019b82:	f000 80b9 	beq.w	8019cf8 <_printf_i+0x19c>
 8019b86:	2958      	cmp	r1, #88	; 0x58
 8019b88:	f000 8083 	beq.w	8019c92 <_printf_i+0x136>
 8019b8c:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8019b90:	f884 1042 	strb.w	r1, [r4, #66]	; 0x42
 8019b94:	e032      	b.n	8019bfc <_printf_i+0xa0>
 8019b96:	2964      	cmp	r1, #100	; 0x64
 8019b98:	d001      	beq.n	8019b9e <_printf_i+0x42>
 8019b9a:	2969      	cmp	r1, #105	; 0x69
 8019b9c:	d1f6      	bne.n	8019b8c <_printf_i+0x30>
 8019b9e:	6820      	ldr	r0, [r4, #0]
 8019ba0:	6813      	ldr	r3, [r2, #0]
 8019ba2:	0605      	lsls	r5, r0, #24
 8019ba4:	f103 0104 	add.w	r1, r3, #4
 8019ba8:	d52a      	bpl.n	8019c00 <_printf_i+0xa4>
 8019baa:	681b      	ldr	r3, [r3, #0]
 8019bac:	6011      	str	r1, [r2, #0]
 8019bae:	2b00      	cmp	r3, #0
 8019bb0:	da03      	bge.n	8019bba <_printf_i+0x5e>
 8019bb2:	222d      	movs	r2, #45	; 0x2d
 8019bb4:	425b      	negs	r3, r3
 8019bb6:	f884 2043 	strb.w	r2, [r4, #67]	; 0x43
 8019bba:	486f      	ldr	r0, [pc, #444]	; (8019d78 <_printf_i+0x21c>)
 8019bbc:	220a      	movs	r2, #10
 8019bbe:	e039      	b.n	8019c34 <_printf_i+0xd8>
 8019bc0:	2973      	cmp	r1, #115	; 0x73
 8019bc2:	f000 809d 	beq.w	8019d00 <_printf_i+0x1a4>
 8019bc6:	d808      	bhi.n	8019bda <_printf_i+0x7e>
 8019bc8:	296f      	cmp	r1, #111	; 0x6f
 8019bca:	d020      	beq.n	8019c0e <_printf_i+0xb2>
 8019bcc:	2970      	cmp	r1, #112	; 0x70
 8019bce:	d1dd      	bne.n	8019b8c <_printf_i+0x30>
 8019bd0:	6823      	ldr	r3, [r4, #0]
 8019bd2:	f043 0320 	orr.w	r3, r3, #32
 8019bd6:	6023      	str	r3, [r4, #0]
 8019bd8:	e003      	b.n	8019be2 <_printf_i+0x86>
 8019bda:	2975      	cmp	r1, #117	; 0x75
 8019bdc:	d017      	beq.n	8019c0e <_printf_i+0xb2>
 8019bde:	2978      	cmp	r1, #120	; 0x78
 8019be0:	d1d4      	bne.n	8019b8c <_printf_i+0x30>
 8019be2:	2378      	movs	r3, #120	; 0x78
 8019be4:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 8019be8:	4864      	ldr	r0, [pc, #400]	; (8019d7c <_printf_i+0x220>)
 8019bea:	e055      	b.n	8019c98 <_printf_i+0x13c>
 8019bec:	6813      	ldr	r3, [r2, #0]
 8019bee:	1d19      	adds	r1, r3, #4
 8019bf0:	681b      	ldr	r3, [r3, #0]
 8019bf2:	6011      	str	r1, [r2, #0]
 8019bf4:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8019bf8:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8019bfc:	2301      	movs	r3, #1
 8019bfe:	e08c      	b.n	8019d1a <_printf_i+0x1be>
 8019c00:	681b      	ldr	r3, [r3, #0]
 8019c02:	6011      	str	r1, [r2, #0]
 8019c04:	f010 0f40 	tst.w	r0, #64	; 0x40
 8019c08:	bf18      	it	ne
 8019c0a:	b21b      	sxthne	r3, r3
 8019c0c:	e7cf      	b.n	8019bae <_printf_i+0x52>
 8019c0e:	6813      	ldr	r3, [r2, #0]
 8019c10:	6825      	ldr	r5, [r4, #0]
 8019c12:	1d18      	adds	r0, r3, #4
 8019c14:	6010      	str	r0, [r2, #0]
 8019c16:	0628      	lsls	r0, r5, #24
 8019c18:	d501      	bpl.n	8019c1e <_printf_i+0xc2>
 8019c1a:	681b      	ldr	r3, [r3, #0]
 8019c1c:	e002      	b.n	8019c24 <_printf_i+0xc8>
 8019c1e:	0668      	lsls	r0, r5, #25
 8019c20:	d5fb      	bpl.n	8019c1a <_printf_i+0xbe>
 8019c22:	881b      	ldrh	r3, [r3, #0]
 8019c24:	4854      	ldr	r0, [pc, #336]	; (8019d78 <_printf_i+0x21c>)
 8019c26:	296f      	cmp	r1, #111	; 0x6f
 8019c28:	bf14      	ite	ne
 8019c2a:	220a      	movne	r2, #10
 8019c2c:	2208      	moveq	r2, #8
 8019c2e:	2100      	movs	r1, #0
 8019c30:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 8019c34:	6865      	ldr	r5, [r4, #4]
 8019c36:	60a5      	str	r5, [r4, #8]
 8019c38:	2d00      	cmp	r5, #0
 8019c3a:	f2c0 8095 	blt.w	8019d68 <_printf_i+0x20c>
 8019c3e:	6821      	ldr	r1, [r4, #0]
 8019c40:	f021 0104 	bic.w	r1, r1, #4
 8019c44:	6021      	str	r1, [r4, #0]
 8019c46:	2b00      	cmp	r3, #0
 8019c48:	d13d      	bne.n	8019cc6 <_printf_i+0x16a>
 8019c4a:	2d00      	cmp	r5, #0
 8019c4c:	f040 808e 	bne.w	8019d6c <_printf_i+0x210>
 8019c50:	4665      	mov	r5, ip
 8019c52:	2a08      	cmp	r2, #8
 8019c54:	d10b      	bne.n	8019c6e <_printf_i+0x112>
 8019c56:	6823      	ldr	r3, [r4, #0]
 8019c58:	07db      	lsls	r3, r3, #31
 8019c5a:	d508      	bpl.n	8019c6e <_printf_i+0x112>
 8019c5c:	6923      	ldr	r3, [r4, #16]
 8019c5e:	6862      	ldr	r2, [r4, #4]
 8019c60:	429a      	cmp	r2, r3
 8019c62:	bfde      	ittt	le
 8019c64:	2330      	movle	r3, #48	; 0x30
 8019c66:	f805 3c01 	strble.w	r3, [r5, #-1]
 8019c6a:	f105 35ff 	addle.w	r5, r5, #4294967295
 8019c6e:	ebac 0305 	sub.w	r3, ip, r5
 8019c72:	6123      	str	r3, [r4, #16]
 8019c74:	f8cd 8000 	str.w	r8, [sp]
 8019c78:	463b      	mov	r3, r7
 8019c7a:	aa03      	add	r2, sp, #12
 8019c7c:	4621      	mov	r1, r4
 8019c7e:	4630      	mov	r0, r6
 8019c80:	f7ff fef6 	bl	8019a70 <_printf_common>
 8019c84:	3001      	adds	r0, #1
 8019c86:	d14d      	bne.n	8019d24 <_printf_i+0x1c8>
 8019c88:	f04f 30ff 	mov.w	r0, #4294967295
 8019c8c:	b005      	add	sp, #20
 8019c8e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8019c92:	4839      	ldr	r0, [pc, #228]	; (8019d78 <_printf_i+0x21c>)
 8019c94:	f884 1045 	strb.w	r1, [r4, #69]	; 0x45
 8019c98:	6813      	ldr	r3, [r2, #0]
 8019c9a:	6821      	ldr	r1, [r4, #0]
 8019c9c:	1d1d      	adds	r5, r3, #4
 8019c9e:	681b      	ldr	r3, [r3, #0]
 8019ca0:	6015      	str	r5, [r2, #0]
 8019ca2:	060a      	lsls	r2, r1, #24
 8019ca4:	d50b      	bpl.n	8019cbe <_printf_i+0x162>
 8019ca6:	07ca      	lsls	r2, r1, #31
 8019ca8:	bf44      	itt	mi
 8019caa:	f041 0120 	orrmi.w	r1, r1, #32
 8019cae:	6021      	strmi	r1, [r4, #0]
 8019cb0:	b91b      	cbnz	r3, 8019cba <_printf_i+0x15e>
 8019cb2:	6822      	ldr	r2, [r4, #0]
 8019cb4:	f022 0220 	bic.w	r2, r2, #32
 8019cb8:	6022      	str	r2, [r4, #0]
 8019cba:	2210      	movs	r2, #16
 8019cbc:	e7b7      	b.n	8019c2e <_printf_i+0xd2>
 8019cbe:	064d      	lsls	r5, r1, #25
 8019cc0:	bf48      	it	mi
 8019cc2:	b29b      	uxthmi	r3, r3
 8019cc4:	e7ef      	b.n	8019ca6 <_printf_i+0x14a>
 8019cc6:	4665      	mov	r5, ip
 8019cc8:	fbb3 f1f2 	udiv	r1, r3, r2
 8019ccc:	fb02 3311 	mls	r3, r2, r1, r3
 8019cd0:	5cc3      	ldrb	r3, [r0, r3]
 8019cd2:	f805 3d01 	strb.w	r3, [r5, #-1]!
 8019cd6:	460b      	mov	r3, r1
 8019cd8:	2900      	cmp	r1, #0
 8019cda:	d1f5      	bne.n	8019cc8 <_printf_i+0x16c>
 8019cdc:	e7b9      	b.n	8019c52 <_printf_i+0xf6>
 8019cde:	6813      	ldr	r3, [r2, #0]
 8019ce0:	6825      	ldr	r5, [r4, #0]
 8019ce2:	6961      	ldr	r1, [r4, #20]
 8019ce4:	1d18      	adds	r0, r3, #4
 8019ce6:	6010      	str	r0, [r2, #0]
 8019ce8:	0628      	lsls	r0, r5, #24
 8019cea:	681b      	ldr	r3, [r3, #0]
 8019cec:	d501      	bpl.n	8019cf2 <_printf_i+0x196>
 8019cee:	6019      	str	r1, [r3, #0]
 8019cf0:	e002      	b.n	8019cf8 <_printf_i+0x19c>
 8019cf2:	066a      	lsls	r2, r5, #25
 8019cf4:	d5fb      	bpl.n	8019cee <_printf_i+0x192>
 8019cf6:	8019      	strh	r1, [r3, #0]
 8019cf8:	2300      	movs	r3, #0
 8019cfa:	6123      	str	r3, [r4, #16]
 8019cfc:	4665      	mov	r5, ip
 8019cfe:	e7b9      	b.n	8019c74 <_printf_i+0x118>
 8019d00:	6813      	ldr	r3, [r2, #0]
 8019d02:	1d19      	adds	r1, r3, #4
 8019d04:	6011      	str	r1, [r2, #0]
 8019d06:	681d      	ldr	r5, [r3, #0]
 8019d08:	6862      	ldr	r2, [r4, #4]
 8019d0a:	2100      	movs	r1, #0
 8019d0c:	4628      	mov	r0, r5
 8019d0e:	f7e6 fa6f 	bl	80001f0 <memchr>
 8019d12:	b108      	cbz	r0, 8019d18 <_printf_i+0x1bc>
 8019d14:	1b40      	subs	r0, r0, r5
 8019d16:	6060      	str	r0, [r4, #4]
 8019d18:	6863      	ldr	r3, [r4, #4]
 8019d1a:	6123      	str	r3, [r4, #16]
 8019d1c:	2300      	movs	r3, #0
 8019d1e:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8019d22:	e7a7      	b.n	8019c74 <_printf_i+0x118>
 8019d24:	6923      	ldr	r3, [r4, #16]
 8019d26:	462a      	mov	r2, r5
 8019d28:	4639      	mov	r1, r7
 8019d2a:	4630      	mov	r0, r6
 8019d2c:	47c0      	blx	r8
 8019d2e:	3001      	adds	r0, #1
 8019d30:	d0aa      	beq.n	8019c88 <_printf_i+0x12c>
 8019d32:	6823      	ldr	r3, [r4, #0]
 8019d34:	079b      	lsls	r3, r3, #30
 8019d36:	d413      	bmi.n	8019d60 <_printf_i+0x204>
 8019d38:	68e0      	ldr	r0, [r4, #12]
 8019d3a:	9b03      	ldr	r3, [sp, #12]
 8019d3c:	4298      	cmp	r0, r3
 8019d3e:	bfb8      	it	lt
 8019d40:	4618      	movlt	r0, r3
 8019d42:	e7a3      	b.n	8019c8c <_printf_i+0x130>
 8019d44:	2301      	movs	r3, #1
 8019d46:	464a      	mov	r2, r9
 8019d48:	4639      	mov	r1, r7
 8019d4a:	4630      	mov	r0, r6
 8019d4c:	47c0      	blx	r8
 8019d4e:	3001      	adds	r0, #1
 8019d50:	d09a      	beq.n	8019c88 <_printf_i+0x12c>
 8019d52:	3501      	adds	r5, #1
 8019d54:	68e3      	ldr	r3, [r4, #12]
 8019d56:	9a03      	ldr	r2, [sp, #12]
 8019d58:	1a9b      	subs	r3, r3, r2
 8019d5a:	42ab      	cmp	r3, r5
 8019d5c:	dcf2      	bgt.n	8019d44 <_printf_i+0x1e8>
 8019d5e:	e7eb      	b.n	8019d38 <_printf_i+0x1dc>
 8019d60:	2500      	movs	r5, #0
 8019d62:	f104 0919 	add.w	r9, r4, #25
 8019d66:	e7f5      	b.n	8019d54 <_printf_i+0x1f8>
 8019d68:	2b00      	cmp	r3, #0
 8019d6a:	d1ac      	bne.n	8019cc6 <_printf_i+0x16a>
 8019d6c:	7803      	ldrb	r3, [r0, #0]
 8019d6e:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8019d72:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8019d76:	e76c      	b.n	8019c52 <_printf_i+0xf6>
 8019d78:	0801da91 	.word	0x0801da91
 8019d7c:	0801daa2 	.word	0x0801daa2

08019d80 <_sbrk_r>:
 8019d80:	b538      	push	{r3, r4, r5, lr}
 8019d82:	4c06      	ldr	r4, [pc, #24]	; (8019d9c <_sbrk_r+0x1c>)
 8019d84:	2300      	movs	r3, #0
 8019d86:	4605      	mov	r5, r0
 8019d88:	4608      	mov	r0, r1
 8019d8a:	6023      	str	r3, [r4, #0]
 8019d8c:	f7e8 fe04 	bl	8002998 <_sbrk>
 8019d90:	1c43      	adds	r3, r0, #1
 8019d92:	d102      	bne.n	8019d9a <_sbrk_r+0x1a>
 8019d94:	6823      	ldr	r3, [r4, #0]
 8019d96:	b103      	cbz	r3, 8019d9a <_sbrk_r+0x1a>
 8019d98:	602b      	str	r3, [r5, #0]
 8019d9a:	bd38      	pop	{r3, r4, r5, pc}
 8019d9c:	20012b2c 	.word	0x20012b2c

08019da0 <_raise_r>:
 8019da0:	291f      	cmp	r1, #31
 8019da2:	b538      	push	{r3, r4, r5, lr}
 8019da4:	4604      	mov	r4, r0
 8019da6:	460d      	mov	r5, r1
 8019da8:	d904      	bls.n	8019db4 <_raise_r+0x14>
 8019daa:	2316      	movs	r3, #22
 8019dac:	6003      	str	r3, [r0, #0]
 8019dae:	f04f 30ff 	mov.w	r0, #4294967295
 8019db2:	bd38      	pop	{r3, r4, r5, pc}
 8019db4:	6c42      	ldr	r2, [r0, #68]	; 0x44
 8019db6:	b112      	cbz	r2, 8019dbe <_raise_r+0x1e>
 8019db8:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 8019dbc:	b94b      	cbnz	r3, 8019dd2 <_raise_r+0x32>
 8019dbe:	4620      	mov	r0, r4
 8019dc0:	f000 f830 	bl	8019e24 <_getpid_r>
 8019dc4:	462a      	mov	r2, r5
 8019dc6:	4601      	mov	r1, r0
 8019dc8:	4620      	mov	r0, r4
 8019dca:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8019dce:	f000 b817 	b.w	8019e00 <_kill_r>
 8019dd2:	2b01      	cmp	r3, #1
 8019dd4:	d00a      	beq.n	8019dec <_raise_r+0x4c>
 8019dd6:	1c59      	adds	r1, r3, #1
 8019dd8:	d103      	bne.n	8019de2 <_raise_r+0x42>
 8019dda:	2316      	movs	r3, #22
 8019ddc:	6003      	str	r3, [r0, #0]
 8019dde:	2001      	movs	r0, #1
 8019de0:	e7e7      	b.n	8019db2 <_raise_r+0x12>
 8019de2:	2400      	movs	r4, #0
 8019de4:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
 8019de8:	4628      	mov	r0, r5
 8019dea:	4798      	blx	r3
 8019dec:	2000      	movs	r0, #0
 8019dee:	e7e0      	b.n	8019db2 <_raise_r+0x12>

08019df0 <raise>:
 8019df0:	4b02      	ldr	r3, [pc, #8]	; (8019dfc <raise+0xc>)
 8019df2:	4601      	mov	r1, r0
 8019df4:	6818      	ldr	r0, [r3, #0]
 8019df6:	f7ff bfd3 	b.w	8019da0 <_raise_r>
 8019dfa:	bf00      	nop
 8019dfc:	2000010c 	.word	0x2000010c

08019e00 <_kill_r>:
 8019e00:	b538      	push	{r3, r4, r5, lr}
 8019e02:	4c07      	ldr	r4, [pc, #28]	; (8019e20 <_kill_r+0x20>)
 8019e04:	2300      	movs	r3, #0
 8019e06:	4605      	mov	r5, r0
 8019e08:	4608      	mov	r0, r1
 8019e0a:	4611      	mov	r1, r2
 8019e0c:	6023      	str	r3, [r4, #0]
 8019e0e:	f7e8 fd8d 	bl	800292c <_kill>
 8019e12:	1c43      	adds	r3, r0, #1
 8019e14:	d102      	bne.n	8019e1c <_kill_r+0x1c>
 8019e16:	6823      	ldr	r3, [r4, #0]
 8019e18:	b103      	cbz	r3, 8019e1c <_kill_r+0x1c>
 8019e1a:	602b      	str	r3, [r5, #0]
 8019e1c:	bd38      	pop	{r3, r4, r5, pc}
 8019e1e:	bf00      	nop
 8019e20:	20012b2c 	.word	0x20012b2c

08019e24 <_getpid_r>:
 8019e24:	f7e8 bd80 	b.w	8002928 <_getpid>

08019e28 <__swbuf_r>:
 8019e28:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8019e2a:	460e      	mov	r6, r1
 8019e2c:	4614      	mov	r4, r2
 8019e2e:	4605      	mov	r5, r0
 8019e30:	b118      	cbz	r0, 8019e3a <__swbuf_r+0x12>
 8019e32:	6983      	ldr	r3, [r0, #24]
 8019e34:	b90b      	cbnz	r3, 8019e3a <__swbuf_r+0x12>
 8019e36:	f000 fa0b 	bl	801a250 <__sinit>
 8019e3a:	4b21      	ldr	r3, [pc, #132]	; (8019ec0 <__swbuf_r+0x98>)
 8019e3c:	429c      	cmp	r4, r3
 8019e3e:	d12a      	bne.n	8019e96 <__swbuf_r+0x6e>
 8019e40:	686c      	ldr	r4, [r5, #4]
 8019e42:	69a3      	ldr	r3, [r4, #24]
 8019e44:	60a3      	str	r3, [r4, #8]
 8019e46:	89a3      	ldrh	r3, [r4, #12]
 8019e48:	071a      	lsls	r2, r3, #28
 8019e4a:	d52e      	bpl.n	8019eaa <__swbuf_r+0x82>
 8019e4c:	6923      	ldr	r3, [r4, #16]
 8019e4e:	b363      	cbz	r3, 8019eaa <__swbuf_r+0x82>
 8019e50:	6923      	ldr	r3, [r4, #16]
 8019e52:	6820      	ldr	r0, [r4, #0]
 8019e54:	1ac0      	subs	r0, r0, r3
 8019e56:	6963      	ldr	r3, [r4, #20]
 8019e58:	b2f6      	uxtb	r6, r6
 8019e5a:	4283      	cmp	r3, r0
 8019e5c:	4637      	mov	r7, r6
 8019e5e:	dc04      	bgt.n	8019e6a <__swbuf_r+0x42>
 8019e60:	4621      	mov	r1, r4
 8019e62:	4628      	mov	r0, r5
 8019e64:	f000 f98a 	bl	801a17c <_fflush_r>
 8019e68:	bb28      	cbnz	r0, 8019eb6 <__swbuf_r+0x8e>
 8019e6a:	68a3      	ldr	r3, [r4, #8]
 8019e6c:	3b01      	subs	r3, #1
 8019e6e:	60a3      	str	r3, [r4, #8]
 8019e70:	6823      	ldr	r3, [r4, #0]
 8019e72:	1c5a      	adds	r2, r3, #1
 8019e74:	6022      	str	r2, [r4, #0]
 8019e76:	701e      	strb	r6, [r3, #0]
 8019e78:	6963      	ldr	r3, [r4, #20]
 8019e7a:	3001      	adds	r0, #1
 8019e7c:	4283      	cmp	r3, r0
 8019e7e:	d004      	beq.n	8019e8a <__swbuf_r+0x62>
 8019e80:	89a3      	ldrh	r3, [r4, #12]
 8019e82:	07db      	lsls	r3, r3, #31
 8019e84:	d519      	bpl.n	8019eba <__swbuf_r+0x92>
 8019e86:	2e0a      	cmp	r6, #10
 8019e88:	d117      	bne.n	8019eba <__swbuf_r+0x92>
 8019e8a:	4621      	mov	r1, r4
 8019e8c:	4628      	mov	r0, r5
 8019e8e:	f000 f975 	bl	801a17c <_fflush_r>
 8019e92:	b190      	cbz	r0, 8019eba <__swbuf_r+0x92>
 8019e94:	e00f      	b.n	8019eb6 <__swbuf_r+0x8e>
 8019e96:	4b0b      	ldr	r3, [pc, #44]	; (8019ec4 <__swbuf_r+0x9c>)
 8019e98:	429c      	cmp	r4, r3
 8019e9a:	d101      	bne.n	8019ea0 <__swbuf_r+0x78>
 8019e9c:	68ac      	ldr	r4, [r5, #8]
 8019e9e:	e7d0      	b.n	8019e42 <__swbuf_r+0x1a>
 8019ea0:	4b09      	ldr	r3, [pc, #36]	; (8019ec8 <__swbuf_r+0xa0>)
 8019ea2:	429c      	cmp	r4, r3
 8019ea4:	bf08      	it	eq
 8019ea6:	68ec      	ldreq	r4, [r5, #12]
 8019ea8:	e7cb      	b.n	8019e42 <__swbuf_r+0x1a>
 8019eaa:	4621      	mov	r1, r4
 8019eac:	4628      	mov	r0, r5
 8019eae:	f000 f80d 	bl	8019ecc <__swsetup_r>
 8019eb2:	2800      	cmp	r0, #0
 8019eb4:	d0cc      	beq.n	8019e50 <__swbuf_r+0x28>
 8019eb6:	f04f 37ff 	mov.w	r7, #4294967295
 8019eba:	4638      	mov	r0, r7
 8019ebc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8019ebe:	bf00      	nop
 8019ec0:	0801dad8 	.word	0x0801dad8
 8019ec4:	0801daf8 	.word	0x0801daf8
 8019ec8:	0801dab8 	.word	0x0801dab8

08019ecc <__swsetup_r>:
 8019ecc:	4b32      	ldr	r3, [pc, #200]	; (8019f98 <__swsetup_r+0xcc>)
 8019ece:	b570      	push	{r4, r5, r6, lr}
 8019ed0:	681d      	ldr	r5, [r3, #0]
 8019ed2:	4606      	mov	r6, r0
 8019ed4:	460c      	mov	r4, r1
 8019ed6:	b125      	cbz	r5, 8019ee2 <__swsetup_r+0x16>
 8019ed8:	69ab      	ldr	r3, [r5, #24]
 8019eda:	b913      	cbnz	r3, 8019ee2 <__swsetup_r+0x16>
 8019edc:	4628      	mov	r0, r5
 8019ede:	f000 f9b7 	bl	801a250 <__sinit>
 8019ee2:	4b2e      	ldr	r3, [pc, #184]	; (8019f9c <__swsetup_r+0xd0>)
 8019ee4:	429c      	cmp	r4, r3
 8019ee6:	d10f      	bne.n	8019f08 <__swsetup_r+0x3c>
 8019ee8:	686c      	ldr	r4, [r5, #4]
 8019eea:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8019eee:	b29a      	uxth	r2, r3
 8019ef0:	0715      	lsls	r5, r2, #28
 8019ef2:	d42c      	bmi.n	8019f4e <__swsetup_r+0x82>
 8019ef4:	06d0      	lsls	r0, r2, #27
 8019ef6:	d411      	bmi.n	8019f1c <__swsetup_r+0x50>
 8019ef8:	2209      	movs	r2, #9
 8019efa:	6032      	str	r2, [r6, #0]
 8019efc:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8019f00:	81a3      	strh	r3, [r4, #12]
 8019f02:	f04f 30ff 	mov.w	r0, #4294967295
 8019f06:	e03e      	b.n	8019f86 <__swsetup_r+0xba>
 8019f08:	4b25      	ldr	r3, [pc, #148]	; (8019fa0 <__swsetup_r+0xd4>)
 8019f0a:	429c      	cmp	r4, r3
 8019f0c:	d101      	bne.n	8019f12 <__swsetup_r+0x46>
 8019f0e:	68ac      	ldr	r4, [r5, #8]
 8019f10:	e7eb      	b.n	8019eea <__swsetup_r+0x1e>
 8019f12:	4b24      	ldr	r3, [pc, #144]	; (8019fa4 <__swsetup_r+0xd8>)
 8019f14:	429c      	cmp	r4, r3
 8019f16:	bf08      	it	eq
 8019f18:	68ec      	ldreq	r4, [r5, #12]
 8019f1a:	e7e6      	b.n	8019eea <__swsetup_r+0x1e>
 8019f1c:	0751      	lsls	r1, r2, #29
 8019f1e:	d512      	bpl.n	8019f46 <__swsetup_r+0x7a>
 8019f20:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8019f22:	b141      	cbz	r1, 8019f36 <__swsetup_r+0x6a>
 8019f24:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8019f28:	4299      	cmp	r1, r3
 8019f2a:	d002      	beq.n	8019f32 <__swsetup_r+0x66>
 8019f2c:	4630      	mov	r0, r6
 8019f2e:	f7ff fbb7 	bl	80196a0 <_free_r>
 8019f32:	2300      	movs	r3, #0
 8019f34:	6363      	str	r3, [r4, #52]	; 0x34
 8019f36:	89a3      	ldrh	r3, [r4, #12]
 8019f38:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 8019f3c:	81a3      	strh	r3, [r4, #12]
 8019f3e:	2300      	movs	r3, #0
 8019f40:	6063      	str	r3, [r4, #4]
 8019f42:	6923      	ldr	r3, [r4, #16]
 8019f44:	6023      	str	r3, [r4, #0]
 8019f46:	89a3      	ldrh	r3, [r4, #12]
 8019f48:	f043 0308 	orr.w	r3, r3, #8
 8019f4c:	81a3      	strh	r3, [r4, #12]
 8019f4e:	6923      	ldr	r3, [r4, #16]
 8019f50:	b94b      	cbnz	r3, 8019f66 <__swsetup_r+0x9a>
 8019f52:	89a3      	ldrh	r3, [r4, #12]
 8019f54:	f403 7320 	and.w	r3, r3, #640	; 0x280
 8019f58:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8019f5c:	d003      	beq.n	8019f66 <__swsetup_r+0x9a>
 8019f5e:	4621      	mov	r1, r4
 8019f60:	4630      	mov	r0, r6
 8019f62:	f000 fa23 	bl	801a3ac <__smakebuf_r>
 8019f66:	89a2      	ldrh	r2, [r4, #12]
 8019f68:	f012 0301 	ands.w	r3, r2, #1
 8019f6c:	d00c      	beq.n	8019f88 <__swsetup_r+0xbc>
 8019f6e:	2300      	movs	r3, #0
 8019f70:	60a3      	str	r3, [r4, #8]
 8019f72:	6963      	ldr	r3, [r4, #20]
 8019f74:	425b      	negs	r3, r3
 8019f76:	61a3      	str	r3, [r4, #24]
 8019f78:	6923      	ldr	r3, [r4, #16]
 8019f7a:	b953      	cbnz	r3, 8019f92 <__swsetup_r+0xc6>
 8019f7c:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8019f80:	f013 0080 	ands.w	r0, r3, #128	; 0x80
 8019f84:	d1ba      	bne.n	8019efc <__swsetup_r+0x30>
 8019f86:	bd70      	pop	{r4, r5, r6, pc}
 8019f88:	0792      	lsls	r2, r2, #30
 8019f8a:	bf58      	it	pl
 8019f8c:	6963      	ldrpl	r3, [r4, #20]
 8019f8e:	60a3      	str	r3, [r4, #8]
 8019f90:	e7f2      	b.n	8019f78 <__swsetup_r+0xac>
 8019f92:	2000      	movs	r0, #0
 8019f94:	e7f7      	b.n	8019f86 <__swsetup_r+0xba>
 8019f96:	bf00      	nop
 8019f98:	2000010c 	.word	0x2000010c
 8019f9c:	0801dad8 	.word	0x0801dad8
 8019fa0:	0801daf8 	.word	0x0801daf8
 8019fa4:	0801dab8 	.word	0x0801dab8

08019fa8 <__register_exitproc>:
 8019fa8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8019fac:	4d2c      	ldr	r5, [pc, #176]	; (801a060 <__register_exitproc+0xb8>)
 8019fae:	682c      	ldr	r4, [r5, #0]
 8019fb0:	4607      	mov	r7, r0
 8019fb2:	460e      	mov	r6, r1
 8019fb4:	4691      	mov	r9, r2
 8019fb6:	4698      	mov	r8, r3
 8019fb8:	b934      	cbnz	r4, 8019fc8 <__register_exitproc+0x20>
 8019fba:	4b2a      	ldr	r3, [pc, #168]	; (801a064 <__register_exitproc+0xbc>)
 8019fbc:	4c2a      	ldr	r4, [pc, #168]	; (801a068 <__register_exitproc+0xc0>)
 8019fbe:	602c      	str	r4, [r5, #0]
 8019fc0:	b113      	cbz	r3, 8019fc8 <__register_exitproc+0x20>
 8019fc2:	681b      	ldr	r3, [r3, #0]
 8019fc4:	f8c4 3088 	str.w	r3, [r4, #136]	; 0x88
 8019fc8:	6863      	ldr	r3, [r4, #4]
 8019fca:	2b1f      	cmp	r3, #31
 8019fcc:	dd3d      	ble.n	801a04a <__register_exitproc+0xa2>
 8019fce:	4b27      	ldr	r3, [pc, #156]	; (801a06c <__register_exitproc+0xc4>)
 8019fd0:	b91b      	cbnz	r3, 8019fda <__register_exitproc+0x32>
 8019fd2:	f04f 30ff 	mov.w	r0, #4294967295
 8019fd6:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8019fda:	208c      	movs	r0, #140	; 0x8c
 8019fdc:	f7ff fb3c 	bl	8019658 <malloc>
 8019fe0:	4604      	mov	r4, r0
 8019fe2:	2800      	cmp	r0, #0
 8019fe4:	d0f5      	beq.n	8019fd2 <__register_exitproc+0x2a>
 8019fe6:	2300      	movs	r3, #0
 8019fe8:	682a      	ldr	r2, [r5, #0]
 8019fea:	6002      	str	r2, [r0, #0]
 8019fec:	6043      	str	r3, [r0, #4]
 8019fee:	6028      	str	r0, [r5, #0]
 8019ff0:	f8c0 3088 	str.w	r3, [r0, #136]	; 0x88
 8019ff4:	b30f      	cbz	r7, 801a03a <__register_exitproc+0x92>
 8019ff6:	f44f 7084 	mov.w	r0, #264	; 0x108
 8019ffa:	f7ff fb2d 	bl	8019658 <malloc>
 8019ffe:	2800      	cmp	r0, #0
 801a000:	d0e7      	beq.n	8019fd2 <__register_exitproc+0x2a>
 801a002:	2300      	movs	r3, #0
 801a004:	f8c0 3100 	str.w	r3, [r0, #256]	; 0x100
 801a008:	f8c0 3104 	str.w	r3, [r0, #260]	; 0x104
 801a00c:	f8c4 0088 	str.w	r0, [r4, #136]	; 0x88
 801a010:	6862      	ldr	r2, [r4, #4]
 801a012:	f840 9022 	str.w	r9, [r0, r2, lsl #2]
 801a016:	2301      	movs	r3, #1
 801a018:	4093      	lsls	r3, r2
 801a01a:	eb00 0182 	add.w	r1, r0, r2, lsl #2
 801a01e:	f8d0 2100 	ldr.w	r2, [r0, #256]	; 0x100
 801a022:	431a      	orrs	r2, r3
 801a024:	2f02      	cmp	r7, #2
 801a026:	f8c0 2100 	str.w	r2, [r0, #256]	; 0x100
 801a02a:	f8c1 8080 	str.w	r8, [r1, #128]	; 0x80
 801a02e:	bf02      	ittt	eq
 801a030:	f8d0 2104 	ldreq.w	r2, [r0, #260]	; 0x104
 801a034:	4313      	orreq	r3, r2
 801a036:	f8c0 3104 	streq.w	r3, [r0, #260]	; 0x104
 801a03a:	6863      	ldr	r3, [r4, #4]
 801a03c:	1c5a      	adds	r2, r3, #1
 801a03e:	3302      	adds	r3, #2
 801a040:	6062      	str	r2, [r4, #4]
 801a042:	2000      	movs	r0, #0
 801a044:	f844 6023 	str.w	r6, [r4, r3, lsl #2]
 801a048:	e7c5      	b.n	8019fd6 <__register_exitproc+0x2e>
 801a04a:	2f00      	cmp	r7, #0
 801a04c:	d0f5      	beq.n	801a03a <__register_exitproc+0x92>
 801a04e:	f8d4 0088 	ldr.w	r0, [r4, #136]	; 0x88
 801a052:	2800      	cmp	r0, #0
 801a054:	d1dc      	bne.n	801a010 <__register_exitproc+0x68>
 801a056:	4b05      	ldr	r3, [pc, #20]	; (801a06c <__register_exitproc+0xc4>)
 801a058:	2b00      	cmp	r3, #0
 801a05a:	d0ba      	beq.n	8019fd2 <__register_exitproc+0x2a>
 801a05c:	e7cb      	b.n	8019ff6 <__register_exitproc+0x4e>
 801a05e:	bf00      	nop
 801a060:	200125f0 	.word	0x200125f0
 801a064:	0801dab4 	.word	0x0801dab4
 801a068:	20012564 	.word	0x20012564
 801a06c:	08019659 	.word	0x08019659

0801a070 <__sflush_r>:
 801a070:	898a      	ldrh	r2, [r1, #12]
 801a072:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801a076:	4605      	mov	r5, r0
 801a078:	0710      	lsls	r0, r2, #28
 801a07a:	460c      	mov	r4, r1
 801a07c:	d458      	bmi.n	801a130 <__sflush_r+0xc0>
 801a07e:	684b      	ldr	r3, [r1, #4]
 801a080:	2b00      	cmp	r3, #0
 801a082:	dc05      	bgt.n	801a090 <__sflush_r+0x20>
 801a084:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 801a086:	2b00      	cmp	r3, #0
 801a088:	dc02      	bgt.n	801a090 <__sflush_r+0x20>
 801a08a:	2000      	movs	r0, #0
 801a08c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801a090:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 801a092:	2e00      	cmp	r6, #0
 801a094:	d0f9      	beq.n	801a08a <__sflush_r+0x1a>
 801a096:	2300      	movs	r3, #0
 801a098:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 801a09c:	682f      	ldr	r7, [r5, #0]
 801a09e:	6a21      	ldr	r1, [r4, #32]
 801a0a0:	602b      	str	r3, [r5, #0]
 801a0a2:	d032      	beq.n	801a10a <__sflush_r+0x9a>
 801a0a4:	6d60      	ldr	r0, [r4, #84]	; 0x54
 801a0a6:	89a3      	ldrh	r3, [r4, #12]
 801a0a8:	075a      	lsls	r2, r3, #29
 801a0aa:	d505      	bpl.n	801a0b8 <__sflush_r+0x48>
 801a0ac:	6863      	ldr	r3, [r4, #4]
 801a0ae:	1ac0      	subs	r0, r0, r3
 801a0b0:	6b63      	ldr	r3, [r4, #52]	; 0x34
 801a0b2:	b10b      	cbz	r3, 801a0b8 <__sflush_r+0x48>
 801a0b4:	6c23      	ldr	r3, [r4, #64]	; 0x40
 801a0b6:	1ac0      	subs	r0, r0, r3
 801a0b8:	2300      	movs	r3, #0
 801a0ba:	4602      	mov	r2, r0
 801a0bc:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 801a0be:	6a21      	ldr	r1, [r4, #32]
 801a0c0:	4628      	mov	r0, r5
 801a0c2:	47b0      	blx	r6
 801a0c4:	1c43      	adds	r3, r0, #1
 801a0c6:	89a3      	ldrh	r3, [r4, #12]
 801a0c8:	d106      	bne.n	801a0d8 <__sflush_r+0x68>
 801a0ca:	6829      	ldr	r1, [r5, #0]
 801a0cc:	291d      	cmp	r1, #29
 801a0ce:	d848      	bhi.n	801a162 <__sflush_r+0xf2>
 801a0d0:	4a29      	ldr	r2, [pc, #164]	; (801a178 <__sflush_r+0x108>)
 801a0d2:	40ca      	lsrs	r2, r1
 801a0d4:	07d6      	lsls	r6, r2, #31
 801a0d6:	d544      	bpl.n	801a162 <__sflush_r+0xf2>
 801a0d8:	2200      	movs	r2, #0
 801a0da:	6062      	str	r2, [r4, #4]
 801a0dc:	04d9      	lsls	r1, r3, #19
 801a0de:	6922      	ldr	r2, [r4, #16]
 801a0e0:	6022      	str	r2, [r4, #0]
 801a0e2:	d504      	bpl.n	801a0ee <__sflush_r+0x7e>
 801a0e4:	1c42      	adds	r2, r0, #1
 801a0e6:	d101      	bne.n	801a0ec <__sflush_r+0x7c>
 801a0e8:	682b      	ldr	r3, [r5, #0]
 801a0ea:	b903      	cbnz	r3, 801a0ee <__sflush_r+0x7e>
 801a0ec:	6560      	str	r0, [r4, #84]	; 0x54
 801a0ee:	6b61      	ldr	r1, [r4, #52]	; 0x34
 801a0f0:	602f      	str	r7, [r5, #0]
 801a0f2:	2900      	cmp	r1, #0
 801a0f4:	d0c9      	beq.n	801a08a <__sflush_r+0x1a>
 801a0f6:	f104 0344 	add.w	r3, r4, #68	; 0x44
 801a0fa:	4299      	cmp	r1, r3
 801a0fc:	d002      	beq.n	801a104 <__sflush_r+0x94>
 801a0fe:	4628      	mov	r0, r5
 801a100:	f7ff face 	bl	80196a0 <_free_r>
 801a104:	2000      	movs	r0, #0
 801a106:	6360      	str	r0, [r4, #52]	; 0x34
 801a108:	e7c0      	b.n	801a08c <__sflush_r+0x1c>
 801a10a:	2301      	movs	r3, #1
 801a10c:	4628      	mov	r0, r5
 801a10e:	47b0      	blx	r6
 801a110:	1c41      	adds	r1, r0, #1
 801a112:	d1c8      	bne.n	801a0a6 <__sflush_r+0x36>
 801a114:	682b      	ldr	r3, [r5, #0]
 801a116:	2b00      	cmp	r3, #0
 801a118:	d0c5      	beq.n	801a0a6 <__sflush_r+0x36>
 801a11a:	2b1d      	cmp	r3, #29
 801a11c:	d001      	beq.n	801a122 <__sflush_r+0xb2>
 801a11e:	2b16      	cmp	r3, #22
 801a120:	d101      	bne.n	801a126 <__sflush_r+0xb6>
 801a122:	602f      	str	r7, [r5, #0]
 801a124:	e7b1      	b.n	801a08a <__sflush_r+0x1a>
 801a126:	89a3      	ldrh	r3, [r4, #12]
 801a128:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 801a12c:	81a3      	strh	r3, [r4, #12]
 801a12e:	e7ad      	b.n	801a08c <__sflush_r+0x1c>
 801a130:	690f      	ldr	r7, [r1, #16]
 801a132:	2f00      	cmp	r7, #0
 801a134:	d0a9      	beq.n	801a08a <__sflush_r+0x1a>
 801a136:	0793      	lsls	r3, r2, #30
 801a138:	680e      	ldr	r6, [r1, #0]
 801a13a:	bf08      	it	eq
 801a13c:	694b      	ldreq	r3, [r1, #20]
 801a13e:	600f      	str	r7, [r1, #0]
 801a140:	bf18      	it	ne
 801a142:	2300      	movne	r3, #0
 801a144:	eba6 0807 	sub.w	r8, r6, r7
 801a148:	608b      	str	r3, [r1, #8]
 801a14a:	f1b8 0f00 	cmp.w	r8, #0
 801a14e:	dd9c      	ble.n	801a08a <__sflush_r+0x1a>
 801a150:	4643      	mov	r3, r8
 801a152:	463a      	mov	r2, r7
 801a154:	6a21      	ldr	r1, [r4, #32]
 801a156:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 801a158:	4628      	mov	r0, r5
 801a15a:	47b0      	blx	r6
 801a15c:	2800      	cmp	r0, #0
 801a15e:	dc06      	bgt.n	801a16e <__sflush_r+0xfe>
 801a160:	89a3      	ldrh	r3, [r4, #12]
 801a162:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 801a166:	81a3      	strh	r3, [r4, #12]
 801a168:	f04f 30ff 	mov.w	r0, #4294967295
 801a16c:	e78e      	b.n	801a08c <__sflush_r+0x1c>
 801a16e:	4407      	add	r7, r0
 801a170:	eba8 0800 	sub.w	r8, r8, r0
 801a174:	e7e9      	b.n	801a14a <__sflush_r+0xda>
 801a176:	bf00      	nop
 801a178:	20400001 	.word	0x20400001

0801a17c <_fflush_r>:
 801a17c:	b538      	push	{r3, r4, r5, lr}
 801a17e:	690b      	ldr	r3, [r1, #16]
 801a180:	4605      	mov	r5, r0
 801a182:	460c      	mov	r4, r1
 801a184:	b1db      	cbz	r3, 801a1be <_fflush_r+0x42>
 801a186:	b118      	cbz	r0, 801a190 <_fflush_r+0x14>
 801a188:	6983      	ldr	r3, [r0, #24]
 801a18a:	b90b      	cbnz	r3, 801a190 <_fflush_r+0x14>
 801a18c:	f000 f860 	bl	801a250 <__sinit>
 801a190:	4b0c      	ldr	r3, [pc, #48]	; (801a1c4 <_fflush_r+0x48>)
 801a192:	429c      	cmp	r4, r3
 801a194:	d109      	bne.n	801a1aa <_fflush_r+0x2e>
 801a196:	686c      	ldr	r4, [r5, #4]
 801a198:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 801a19c:	b17b      	cbz	r3, 801a1be <_fflush_r+0x42>
 801a19e:	4621      	mov	r1, r4
 801a1a0:	4628      	mov	r0, r5
 801a1a2:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 801a1a6:	f7ff bf63 	b.w	801a070 <__sflush_r>
 801a1aa:	4b07      	ldr	r3, [pc, #28]	; (801a1c8 <_fflush_r+0x4c>)
 801a1ac:	429c      	cmp	r4, r3
 801a1ae:	d101      	bne.n	801a1b4 <_fflush_r+0x38>
 801a1b0:	68ac      	ldr	r4, [r5, #8]
 801a1b2:	e7f1      	b.n	801a198 <_fflush_r+0x1c>
 801a1b4:	4b05      	ldr	r3, [pc, #20]	; (801a1cc <_fflush_r+0x50>)
 801a1b6:	429c      	cmp	r4, r3
 801a1b8:	bf08      	it	eq
 801a1ba:	68ec      	ldreq	r4, [r5, #12]
 801a1bc:	e7ec      	b.n	801a198 <_fflush_r+0x1c>
 801a1be:	2000      	movs	r0, #0
 801a1c0:	bd38      	pop	{r3, r4, r5, pc}
 801a1c2:	bf00      	nop
 801a1c4:	0801dad8 	.word	0x0801dad8
 801a1c8:	0801daf8 	.word	0x0801daf8
 801a1cc:	0801dab8 	.word	0x0801dab8

0801a1d0 <std>:
 801a1d0:	2300      	movs	r3, #0
 801a1d2:	b510      	push	{r4, lr}
 801a1d4:	4604      	mov	r4, r0
 801a1d6:	e9c0 3300 	strd	r3, r3, [r0]
 801a1da:	6083      	str	r3, [r0, #8]
 801a1dc:	8181      	strh	r1, [r0, #12]
 801a1de:	6643      	str	r3, [r0, #100]	; 0x64
 801a1e0:	81c2      	strh	r2, [r0, #14]
 801a1e2:	e9c0 3304 	strd	r3, r3, [r0, #16]
 801a1e6:	6183      	str	r3, [r0, #24]
 801a1e8:	4619      	mov	r1, r3
 801a1ea:	2208      	movs	r2, #8
 801a1ec:	305c      	adds	r0, #92	; 0x5c
 801a1ee:	f7ff fa4e 	bl	801968e <memset>
 801a1f2:	4b05      	ldr	r3, [pc, #20]	; (801a208 <std+0x38>)
 801a1f4:	6263      	str	r3, [r4, #36]	; 0x24
 801a1f6:	4b05      	ldr	r3, [pc, #20]	; (801a20c <std+0x3c>)
 801a1f8:	62a3      	str	r3, [r4, #40]	; 0x28
 801a1fa:	4b05      	ldr	r3, [pc, #20]	; (801a210 <std+0x40>)
 801a1fc:	62e3      	str	r3, [r4, #44]	; 0x2c
 801a1fe:	4b05      	ldr	r3, [pc, #20]	; (801a214 <std+0x44>)
 801a200:	6224      	str	r4, [r4, #32]
 801a202:	6323      	str	r3, [r4, #48]	; 0x30
 801a204:	bd10      	pop	{r4, pc}
 801a206:	bf00      	nop
 801a208:	0801a431 	.word	0x0801a431
 801a20c:	0801a453 	.word	0x0801a453
 801a210:	0801a48b 	.word	0x0801a48b
 801a214:	0801a4af 	.word	0x0801a4af

0801a218 <_cleanup_r>:
 801a218:	4901      	ldr	r1, [pc, #4]	; (801a220 <_cleanup_r+0x8>)
 801a21a:	f000 b885 	b.w	801a328 <_fwalk_reent>
 801a21e:	bf00      	nop
 801a220:	0801a17d 	.word	0x0801a17d

0801a224 <__sfmoreglue>:
 801a224:	b570      	push	{r4, r5, r6, lr}
 801a226:	1e4a      	subs	r2, r1, #1
 801a228:	2568      	movs	r5, #104	; 0x68
 801a22a:	4355      	muls	r5, r2
 801a22c:	460e      	mov	r6, r1
 801a22e:	f105 0174 	add.w	r1, r5, #116	; 0x74
 801a232:	f7ff fa83 	bl	801973c <_malloc_r>
 801a236:	4604      	mov	r4, r0
 801a238:	b140      	cbz	r0, 801a24c <__sfmoreglue+0x28>
 801a23a:	2100      	movs	r1, #0
 801a23c:	e9c0 1600 	strd	r1, r6, [r0]
 801a240:	300c      	adds	r0, #12
 801a242:	60a0      	str	r0, [r4, #8]
 801a244:	f105 0268 	add.w	r2, r5, #104	; 0x68
 801a248:	f7ff fa21 	bl	801968e <memset>
 801a24c:	4620      	mov	r0, r4
 801a24e:	bd70      	pop	{r4, r5, r6, pc}

0801a250 <__sinit>:
 801a250:	6983      	ldr	r3, [r0, #24]
 801a252:	b510      	push	{r4, lr}
 801a254:	4604      	mov	r4, r0
 801a256:	bb33      	cbnz	r3, 801a2a6 <__sinit+0x56>
 801a258:	e9c0 3312 	strd	r3, r3, [r0, #72]	; 0x48
 801a25c:	6503      	str	r3, [r0, #80]	; 0x50
 801a25e:	4b12      	ldr	r3, [pc, #72]	; (801a2a8 <__sinit+0x58>)
 801a260:	4a12      	ldr	r2, [pc, #72]	; (801a2ac <__sinit+0x5c>)
 801a262:	681b      	ldr	r3, [r3, #0]
 801a264:	6282      	str	r2, [r0, #40]	; 0x28
 801a266:	4298      	cmp	r0, r3
 801a268:	bf04      	itt	eq
 801a26a:	2301      	moveq	r3, #1
 801a26c:	6183      	streq	r3, [r0, #24]
 801a26e:	f000 f81f 	bl	801a2b0 <__sfp>
 801a272:	6060      	str	r0, [r4, #4]
 801a274:	4620      	mov	r0, r4
 801a276:	f000 f81b 	bl	801a2b0 <__sfp>
 801a27a:	60a0      	str	r0, [r4, #8]
 801a27c:	4620      	mov	r0, r4
 801a27e:	f000 f817 	bl	801a2b0 <__sfp>
 801a282:	2200      	movs	r2, #0
 801a284:	60e0      	str	r0, [r4, #12]
 801a286:	2104      	movs	r1, #4
 801a288:	6860      	ldr	r0, [r4, #4]
 801a28a:	f7ff ffa1 	bl	801a1d0 <std>
 801a28e:	2201      	movs	r2, #1
 801a290:	2109      	movs	r1, #9
 801a292:	68a0      	ldr	r0, [r4, #8]
 801a294:	f7ff ff9c 	bl	801a1d0 <std>
 801a298:	2202      	movs	r2, #2
 801a29a:	2112      	movs	r1, #18
 801a29c:	68e0      	ldr	r0, [r4, #12]
 801a29e:	f7ff ff97 	bl	801a1d0 <std>
 801a2a2:	2301      	movs	r3, #1
 801a2a4:	61a3      	str	r3, [r4, #24]
 801a2a6:	bd10      	pop	{r4, pc}
 801a2a8:	0801da7c 	.word	0x0801da7c
 801a2ac:	0801a219 	.word	0x0801a219

0801a2b0 <__sfp>:
 801a2b0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801a2b2:	4b1b      	ldr	r3, [pc, #108]	; (801a320 <__sfp+0x70>)
 801a2b4:	681e      	ldr	r6, [r3, #0]
 801a2b6:	69b3      	ldr	r3, [r6, #24]
 801a2b8:	4607      	mov	r7, r0
 801a2ba:	b913      	cbnz	r3, 801a2c2 <__sfp+0x12>
 801a2bc:	4630      	mov	r0, r6
 801a2be:	f7ff ffc7 	bl	801a250 <__sinit>
 801a2c2:	3648      	adds	r6, #72	; 0x48
 801a2c4:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 801a2c8:	3b01      	subs	r3, #1
 801a2ca:	d503      	bpl.n	801a2d4 <__sfp+0x24>
 801a2cc:	6833      	ldr	r3, [r6, #0]
 801a2ce:	b133      	cbz	r3, 801a2de <__sfp+0x2e>
 801a2d0:	6836      	ldr	r6, [r6, #0]
 801a2d2:	e7f7      	b.n	801a2c4 <__sfp+0x14>
 801a2d4:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 801a2d8:	b16d      	cbz	r5, 801a2f6 <__sfp+0x46>
 801a2da:	3468      	adds	r4, #104	; 0x68
 801a2dc:	e7f4      	b.n	801a2c8 <__sfp+0x18>
 801a2de:	2104      	movs	r1, #4
 801a2e0:	4638      	mov	r0, r7
 801a2e2:	f7ff ff9f 	bl	801a224 <__sfmoreglue>
 801a2e6:	6030      	str	r0, [r6, #0]
 801a2e8:	2800      	cmp	r0, #0
 801a2ea:	d1f1      	bne.n	801a2d0 <__sfp+0x20>
 801a2ec:	230c      	movs	r3, #12
 801a2ee:	603b      	str	r3, [r7, #0]
 801a2f0:	4604      	mov	r4, r0
 801a2f2:	4620      	mov	r0, r4
 801a2f4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801a2f6:	4b0b      	ldr	r3, [pc, #44]	; (801a324 <__sfp+0x74>)
 801a2f8:	6665      	str	r5, [r4, #100]	; 0x64
 801a2fa:	e9c4 5500 	strd	r5, r5, [r4]
 801a2fe:	60a5      	str	r5, [r4, #8]
 801a300:	e9c4 3503 	strd	r3, r5, [r4, #12]
 801a304:	e9c4 5505 	strd	r5, r5, [r4, #20]
 801a308:	2208      	movs	r2, #8
 801a30a:	4629      	mov	r1, r5
 801a30c:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 801a310:	f7ff f9bd 	bl	801968e <memset>
 801a314:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 801a318:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 801a31c:	e7e9      	b.n	801a2f2 <__sfp+0x42>
 801a31e:	bf00      	nop
 801a320:	0801da7c 	.word	0x0801da7c
 801a324:	ffff0001 	.word	0xffff0001

0801a328 <_fwalk_reent>:
 801a328:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 801a32c:	4680      	mov	r8, r0
 801a32e:	4689      	mov	r9, r1
 801a330:	f100 0448 	add.w	r4, r0, #72	; 0x48
 801a334:	2600      	movs	r6, #0
 801a336:	b914      	cbnz	r4, 801a33e <_fwalk_reent+0x16>
 801a338:	4630      	mov	r0, r6
 801a33a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 801a33e:	e9d4 7501 	ldrd	r7, r5, [r4, #4]
 801a342:	3f01      	subs	r7, #1
 801a344:	d501      	bpl.n	801a34a <_fwalk_reent+0x22>
 801a346:	6824      	ldr	r4, [r4, #0]
 801a348:	e7f5      	b.n	801a336 <_fwalk_reent+0xe>
 801a34a:	89ab      	ldrh	r3, [r5, #12]
 801a34c:	2b01      	cmp	r3, #1
 801a34e:	d907      	bls.n	801a360 <_fwalk_reent+0x38>
 801a350:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 801a354:	3301      	adds	r3, #1
 801a356:	d003      	beq.n	801a360 <_fwalk_reent+0x38>
 801a358:	4629      	mov	r1, r5
 801a35a:	4640      	mov	r0, r8
 801a35c:	47c8      	blx	r9
 801a35e:	4306      	orrs	r6, r0
 801a360:	3568      	adds	r5, #104	; 0x68
 801a362:	e7ee      	b.n	801a342 <_fwalk_reent+0x1a>

0801a364 <__swhatbuf_r>:
 801a364:	b570      	push	{r4, r5, r6, lr}
 801a366:	460e      	mov	r6, r1
 801a368:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 801a36c:	2900      	cmp	r1, #0
 801a36e:	b096      	sub	sp, #88	; 0x58
 801a370:	4614      	mov	r4, r2
 801a372:	461d      	mov	r5, r3
 801a374:	da07      	bge.n	801a386 <__swhatbuf_r+0x22>
 801a376:	2300      	movs	r3, #0
 801a378:	602b      	str	r3, [r5, #0]
 801a37a:	89b3      	ldrh	r3, [r6, #12]
 801a37c:	061a      	lsls	r2, r3, #24
 801a37e:	d410      	bmi.n	801a3a2 <__swhatbuf_r+0x3e>
 801a380:	f44f 6380 	mov.w	r3, #1024	; 0x400
 801a384:	e00e      	b.n	801a3a4 <__swhatbuf_r+0x40>
 801a386:	466a      	mov	r2, sp
 801a388:	f000 f8b8 	bl	801a4fc <_fstat_r>
 801a38c:	2800      	cmp	r0, #0
 801a38e:	dbf2      	blt.n	801a376 <__swhatbuf_r+0x12>
 801a390:	9a01      	ldr	r2, [sp, #4]
 801a392:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 801a396:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 801a39a:	425a      	negs	r2, r3
 801a39c:	415a      	adcs	r2, r3
 801a39e:	602a      	str	r2, [r5, #0]
 801a3a0:	e7ee      	b.n	801a380 <__swhatbuf_r+0x1c>
 801a3a2:	2340      	movs	r3, #64	; 0x40
 801a3a4:	2000      	movs	r0, #0
 801a3a6:	6023      	str	r3, [r4, #0]
 801a3a8:	b016      	add	sp, #88	; 0x58
 801a3aa:	bd70      	pop	{r4, r5, r6, pc}

0801a3ac <__smakebuf_r>:
 801a3ac:	898b      	ldrh	r3, [r1, #12]
 801a3ae:	b573      	push	{r0, r1, r4, r5, r6, lr}
 801a3b0:	079d      	lsls	r5, r3, #30
 801a3b2:	4606      	mov	r6, r0
 801a3b4:	460c      	mov	r4, r1
 801a3b6:	d507      	bpl.n	801a3c8 <__smakebuf_r+0x1c>
 801a3b8:	f104 0347 	add.w	r3, r4, #71	; 0x47
 801a3bc:	6023      	str	r3, [r4, #0]
 801a3be:	6123      	str	r3, [r4, #16]
 801a3c0:	2301      	movs	r3, #1
 801a3c2:	6163      	str	r3, [r4, #20]
 801a3c4:	b002      	add	sp, #8
 801a3c6:	bd70      	pop	{r4, r5, r6, pc}
 801a3c8:	ab01      	add	r3, sp, #4
 801a3ca:	466a      	mov	r2, sp
 801a3cc:	f7ff ffca 	bl	801a364 <__swhatbuf_r>
 801a3d0:	9900      	ldr	r1, [sp, #0]
 801a3d2:	4605      	mov	r5, r0
 801a3d4:	4630      	mov	r0, r6
 801a3d6:	f7ff f9b1 	bl	801973c <_malloc_r>
 801a3da:	b948      	cbnz	r0, 801a3f0 <__smakebuf_r+0x44>
 801a3dc:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 801a3e0:	059a      	lsls	r2, r3, #22
 801a3e2:	d4ef      	bmi.n	801a3c4 <__smakebuf_r+0x18>
 801a3e4:	f023 0303 	bic.w	r3, r3, #3
 801a3e8:	f043 0302 	orr.w	r3, r3, #2
 801a3ec:	81a3      	strh	r3, [r4, #12]
 801a3ee:	e7e3      	b.n	801a3b8 <__smakebuf_r+0xc>
 801a3f0:	4b0d      	ldr	r3, [pc, #52]	; (801a428 <__smakebuf_r+0x7c>)
 801a3f2:	62b3      	str	r3, [r6, #40]	; 0x28
 801a3f4:	89a3      	ldrh	r3, [r4, #12]
 801a3f6:	6020      	str	r0, [r4, #0]
 801a3f8:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 801a3fc:	81a3      	strh	r3, [r4, #12]
 801a3fe:	9b00      	ldr	r3, [sp, #0]
 801a400:	6163      	str	r3, [r4, #20]
 801a402:	9b01      	ldr	r3, [sp, #4]
 801a404:	6120      	str	r0, [r4, #16]
 801a406:	b15b      	cbz	r3, 801a420 <__smakebuf_r+0x74>
 801a408:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 801a40c:	4630      	mov	r0, r6
 801a40e:	f000 f887 	bl	801a520 <_isatty_r>
 801a412:	b128      	cbz	r0, 801a420 <__smakebuf_r+0x74>
 801a414:	89a3      	ldrh	r3, [r4, #12]
 801a416:	f023 0303 	bic.w	r3, r3, #3
 801a41a:	f043 0301 	orr.w	r3, r3, #1
 801a41e:	81a3      	strh	r3, [r4, #12]
 801a420:	89a3      	ldrh	r3, [r4, #12]
 801a422:	431d      	orrs	r5, r3
 801a424:	81a5      	strh	r5, [r4, #12]
 801a426:	e7cd      	b.n	801a3c4 <__smakebuf_r+0x18>
 801a428:	0801a219 	.word	0x0801a219

0801a42c <__malloc_lock>:
 801a42c:	4770      	bx	lr

0801a42e <__malloc_unlock>:
 801a42e:	4770      	bx	lr

0801a430 <__sread>:
 801a430:	b510      	push	{r4, lr}
 801a432:	460c      	mov	r4, r1
 801a434:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 801a438:	f000 f894 	bl	801a564 <_read_r>
 801a43c:	2800      	cmp	r0, #0
 801a43e:	bfab      	itete	ge
 801a440:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 801a442:	89a3      	ldrhlt	r3, [r4, #12]
 801a444:	181b      	addge	r3, r3, r0
 801a446:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 801a44a:	bfac      	ite	ge
 801a44c:	6563      	strge	r3, [r4, #84]	; 0x54
 801a44e:	81a3      	strhlt	r3, [r4, #12]
 801a450:	bd10      	pop	{r4, pc}

0801a452 <__swrite>:
 801a452:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801a456:	461f      	mov	r7, r3
 801a458:	898b      	ldrh	r3, [r1, #12]
 801a45a:	05db      	lsls	r3, r3, #23
 801a45c:	4605      	mov	r5, r0
 801a45e:	460c      	mov	r4, r1
 801a460:	4616      	mov	r6, r2
 801a462:	d505      	bpl.n	801a470 <__swrite+0x1e>
 801a464:	2302      	movs	r3, #2
 801a466:	2200      	movs	r2, #0
 801a468:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 801a46c:	f000 f868 	bl	801a540 <_lseek_r>
 801a470:	89a3      	ldrh	r3, [r4, #12]
 801a472:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 801a476:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 801a47a:	81a3      	strh	r3, [r4, #12]
 801a47c:	4632      	mov	r2, r6
 801a47e:	463b      	mov	r3, r7
 801a480:	4628      	mov	r0, r5
 801a482:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 801a486:	f000 b817 	b.w	801a4b8 <_write_r>

0801a48a <__sseek>:
 801a48a:	b510      	push	{r4, lr}
 801a48c:	460c      	mov	r4, r1
 801a48e:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 801a492:	f000 f855 	bl	801a540 <_lseek_r>
 801a496:	1c43      	adds	r3, r0, #1
 801a498:	89a3      	ldrh	r3, [r4, #12]
 801a49a:	bf15      	itete	ne
 801a49c:	6560      	strne	r0, [r4, #84]	; 0x54
 801a49e:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 801a4a2:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 801a4a6:	81a3      	strheq	r3, [r4, #12]
 801a4a8:	bf18      	it	ne
 801a4aa:	81a3      	strhne	r3, [r4, #12]
 801a4ac:	bd10      	pop	{r4, pc}

0801a4ae <__sclose>:
 801a4ae:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 801a4b2:	f000 b813 	b.w	801a4dc <_close_r>
	...

0801a4b8 <_write_r>:
 801a4b8:	b538      	push	{r3, r4, r5, lr}
 801a4ba:	4c07      	ldr	r4, [pc, #28]	; (801a4d8 <_write_r+0x20>)
 801a4bc:	4605      	mov	r5, r0
 801a4be:	4608      	mov	r0, r1
 801a4c0:	4611      	mov	r1, r2
 801a4c2:	2200      	movs	r2, #0
 801a4c4:	6022      	str	r2, [r4, #0]
 801a4c6:	461a      	mov	r2, r3
 801a4c8:	f7e8 fa4c 	bl	8002964 <_write>
 801a4cc:	1c43      	adds	r3, r0, #1
 801a4ce:	d102      	bne.n	801a4d6 <_write_r+0x1e>
 801a4d0:	6823      	ldr	r3, [r4, #0]
 801a4d2:	b103      	cbz	r3, 801a4d6 <_write_r+0x1e>
 801a4d4:	602b      	str	r3, [r5, #0]
 801a4d6:	bd38      	pop	{r3, r4, r5, pc}
 801a4d8:	20012b2c 	.word	0x20012b2c

0801a4dc <_close_r>:
 801a4dc:	b538      	push	{r3, r4, r5, lr}
 801a4de:	4c06      	ldr	r4, [pc, #24]	; (801a4f8 <_close_r+0x1c>)
 801a4e0:	2300      	movs	r3, #0
 801a4e2:	4605      	mov	r5, r0
 801a4e4:	4608      	mov	r0, r1
 801a4e6:	6023      	str	r3, [r4, #0]
 801a4e8:	f7e8 fa4a 	bl	8002980 <_close>
 801a4ec:	1c43      	adds	r3, r0, #1
 801a4ee:	d102      	bne.n	801a4f6 <_close_r+0x1a>
 801a4f0:	6823      	ldr	r3, [r4, #0]
 801a4f2:	b103      	cbz	r3, 801a4f6 <_close_r+0x1a>
 801a4f4:	602b      	str	r3, [r5, #0]
 801a4f6:	bd38      	pop	{r3, r4, r5, pc}
 801a4f8:	20012b2c 	.word	0x20012b2c

0801a4fc <_fstat_r>:
 801a4fc:	b538      	push	{r3, r4, r5, lr}
 801a4fe:	4c07      	ldr	r4, [pc, #28]	; (801a51c <_fstat_r+0x20>)
 801a500:	2300      	movs	r3, #0
 801a502:	4605      	mov	r5, r0
 801a504:	4608      	mov	r0, r1
 801a506:	4611      	mov	r1, r2
 801a508:	6023      	str	r3, [r4, #0]
 801a50a:	f7e8 fa3c 	bl	8002986 <_fstat>
 801a50e:	1c43      	adds	r3, r0, #1
 801a510:	d102      	bne.n	801a518 <_fstat_r+0x1c>
 801a512:	6823      	ldr	r3, [r4, #0]
 801a514:	b103      	cbz	r3, 801a518 <_fstat_r+0x1c>
 801a516:	602b      	str	r3, [r5, #0]
 801a518:	bd38      	pop	{r3, r4, r5, pc}
 801a51a:	bf00      	nop
 801a51c:	20012b2c 	.word	0x20012b2c

0801a520 <_isatty_r>:
 801a520:	b538      	push	{r3, r4, r5, lr}
 801a522:	4c06      	ldr	r4, [pc, #24]	; (801a53c <_isatty_r+0x1c>)
 801a524:	2300      	movs	r3, #0
 801a526:	4605      	mov	r5, r0
 801a528:	4608      	mov	r0, r1
 801a52a:	6023      	str	r3, [r4, #0]
 801a52c:	f7e8 fa30 	bl	8002990 <_isatty>
 801a530:	1c43      	adds	r3, r0, #1
 801a532:	d102      	bne.n	801a53a <_isatty_r+0x1a>
 801a534:	6823      	ldr	r3, [r4, #0]
 801a536:	b103      	cbz	r3, 801a53a <_isatty_r+0x1a>
 801a538:	602b      	str	r3, [r5, #0]
 801a53a:	bd38      	pop	{r3, r4, r5, pc}
 801a53c:	20012b2c 	.word	0x20012b2c

0801a540 <_lseek_r>:
 801a540:	b538      	push	{r3, r4, r5, lr}
 801a542:	4c07      	ldr	r4, [pc, #28]	; (801a560 <_lseek_r+0x20>)
 801a544:	4605      	mov	r5, r0
 801a546:	4608      	mov	r0, r1
 801a548:	4611      	mov	r1, r2
 801a54a:	2200      	movs	r2, #0
 801a54c:	6022      	str	r2, [r4, #0]
 801a54e:	461a      	mov	r2, r3
 801a550:	f7e8 fa20 	bl	8002994 <_lseek>
 801a554:	1c43      	adds	r3, r0, #1
 801a556:	d102      	bne.n	801a55e <_lseek_r+0x1e>
 801a558:	6823      	ldr	r3, [r4, #0]
 801a55a:	b103      	cbz	r3, 801a55e <_lseek_r+0x1e>
 801a55c:	602b      	str	r3, [r5, #0]
 801a55e:	bd38      	pop	{r3, r4, r5, pc}
 801a560:	20012b2c 	.word	0x20012b2c

0801a564 <_read_r>:
 801a564:	b538      	push	{r3, r4, r5, lr}
 801a566:	4c07      	ldr	r4, [pc, #28]	; (801a584 <_read_r+0x20>)
 801a568:	4605      	mov	r5, r0
 801a56a:	4608      	mov	r0, r1
 801a56c:	4611      	mov	r1, r2
 801a56e:	2200      	movs	r2, #0
 801a570:	6022      	str	r2, [r4, #0]
 801a572:	461a      	mov	r2, r3
 801a574:	f7e8 f9e8 	bl	8002948 <_read>
 801a578:	1c43      	adds	r3, r0, #1
 801a57a:	d102      	bne.n	801a582 <_read_r+0x1e>
 801a57c:	6823      	ldr	r3, [r4, #0]
 801a57e:	b103      	cbz	r3, 801a582 <_read_r+0x1e>
 801a580:	602b      	str	r3, [r5, #0]
 801a582:	bd38      	pop	{r3, r4, r5, pc}
 801a584:	20012b2c 	.word	0x20012b2c

0801a588 <_init>:
 801a588:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801a58a:	bf00      	nop
 801a58c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 801a58e:	bc08      	pop	{r3}
 801a590:	469e      	mov	lr, r3
 801a592:	4770      	bx	lr

0801a594 <_fini>:
 801a594:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801a596:	bf00      	nop
 801a598:	bcf8      	pop	{r3, r4, r5, r6, r7}
 801a59a:	bc08      	pop	{r3}
 801a59c:	469e      	mov	lr, r3
 801a59e:	4770      	bx	lr
