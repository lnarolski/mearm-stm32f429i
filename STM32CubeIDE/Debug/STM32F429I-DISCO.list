
STM32F429I-DISCO.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001ac  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00019a60  080001b0  080001b0  000101b0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00003570  08019c10  08019c10  00029c10  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 FontFlashSection 0000079a  0801d180  0801d180  0002d180  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 FontSearchFlashSection 0000000c  0801d91c  0801d91c  0002d91c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 TextFlashSection 0000005c  0801d928  0801d928  0002d928  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  6 ExtFlashSection 000394e0  0801d984  0801d984  0002d984  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .ARM.extab    00000000  08056e64  08056e64  00070160  2**0
                  CONTENTS
  8 .ARM          00000008  08056e64  08056e64  00066e64  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  9 .preinit_array 00000000  08056e6c  08056e6c  00070160  2**0
                  CONTENTS, ALLOC, LOAD, DATA
 10 .init_array   00000014  08056e6c  08056e6c  00066e6c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 11 .fini_array   00000008  08056e80  08056e80  00066e80  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 12 .data         00000160  20000000  08056e88  00070000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 13 .bss          00012824  20000160  08056fe8  00070160  2**2
                  ALLOC
 14 ._user_heap_stack 00001404  20012984  08056fe8  00072984  2**0
                  ALLOC
 15 .ARM.attributes 00000030  00000000  00000000  00070160  2**0
                  CONTENTS, READONLY
 16 TouchGFX_Framebuffer 0004b000  d0000000  d0000000  00080000  2**2
                  ALLOC
 17 .debug_line   0002d7ed  00000000  00000000  00070190  2**0
                  CONTENTS, READONLY, DEBUGGING
 18 .debug_info   0008b3f5  00000000  00000000  0009d97d  2**0
                  CONTENTS, READONLY, DEBUGGING
 19 .debug_abbrev 000106c7  00000000  00000000  00128d72  2**0
                  CONTENTS, READONLY, DEBUGGING
 20 .debug_aranges 000025d8  00000000  00000000  00139440  2**3
                  CONTENTS, READONLY, DEBUGGING
 21 .debug_str    001054b0  00000000  00000000  0013ba18  2**0
                  CONTENTS, READONLY, DEBUGGING
 22 .debug_ranges 000032e8  00000000  00000000  00240ec8  2**3
                  CONTENTS, READONLY, DEBUGGING
 23 .debug_loc    0001abeb  00000000  00000000  002441b0  2**0
                  CONTENTS, READONLY, DEBUGGING
 24 .debug_macro  0002ea4a  00000000  00000000  0025ed9b  2**0
                  CONTENTS, READONLY, DEBUGGING
 25 .comment      000000fa  00000000  00000000  0028d7e5  2**0
                  CONTENTS, READONLY
 26 .debug_frame  000071a4  00000000  00000000  0028d8e0  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

080001b0 <__do_global_dtors_aux>:
 80001b0:	b510      	push	{r4, lr}
 80001b2:	4c05      	ldr	r4, [pc, #20]	; (80001c8 <__do_global_dtors_aux+0x18>)
 80001b4:	7823      	ldrb	r3, [r4, #0]
 80001b6:	b933      	cbnz	r3, 80001c6 <__do_global_dtors_aux+0x16>
 80001b8:	4b04      	ldr	r3, [pc, #16]	; (80001cc <__do_global_dtors_aux+0x1c>)
 80001ba:	b113      	cbz	r3, 80001c2 <__do_global_dtors_aux+0x12>
 80001bc:	4804      	ldr	r0, [pc, #16]	; (80001d0 <__do_global_dtors_aux+0x20>)
 80001be:	f3af 8000 	nop.w
 80001c2:	2301      	movs	r3, #1
 80001c4:	7023      	strb	r3, [r4, #0]
 80001c6:	bd10      	pop	{r4, pc}
 80001c8:	20000160 	.word	0x20000160
 80001cc:	00000000 	.word	0x00000000
 80001d0:	08019bf8 	.word	0x08019bf8

080001d4 <frame_dummy>:
 80001d4:	b508      	push	{r3, lr}
 80001d6:	4b03      	ldr	r3, [pc, #12]	; (80001e4 <frame_dummy+0x10>)
 80001d8:	b11b      	cbz	r3, 80001e2 <frame_dummy+0xe>
 80001da:	4903      	ldr	r1, [pc, #12]	; (80001e8 <frame_dummy+0x14>)
 80001dc:	4803      	ldr	r0, [pc, #12]	; (80001ec <frame_dummy+0x18>)
 80001de:	f3af 8000 	nop.w
 80001e2:	bd08      	pop	{r3, pc}
 80001e4:	00000000 	.word	0x00000000
 80001e8:	20000164 	.word	0x20000164
 80001ec:	08019bf8 	.word	0x08019bf8

080001f0 <memchr>:
 80001f0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80001f4:	2a10      	cmp	r2, #16
 80001f6:	db2b      	blt.n	8000250 <memchr+0x60>
 80001f8:	f010 0f07 	tst.w	r0, #7
 80001fc:	d008      	beq.n	8000210 <memchr+0x20>
 80001fe:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000202:	3a01      	subs	r2, #1
 8000204:	428b      	cmp	r3, r1
 8000206:	d02d      	beq.n	8000264 <memchr+0x74>
 8000208:	f010 0f07 	tst.w	r0, #7
 800020c:	b342      	cbz	r2, 8000260 <memchr+0x70>
 800020e:	d1f6      	bne.n	80001fe <memchr+0xe>
 8000210:	b4f0      	push	{r4, r5, r6, r7}
 8000212:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000216:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800021a:	f022 0407 	bic.w	r4, r2, #7
 800021e:	f07f 0700 	mvns.w	r7, #0
 8000222:	2300      	movs	r3, #0
 8000224:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000228:	3c08      	subs	r4, #8
 800022a:	ea85 0501 	eor.w	r5, r5, r1
 800022e:	ea86 0601 	eor.w	r6, r6, r1
 8000232:	fa85 f547 	uadd8	r5, r5, r7
 8000236:	faa3 f587 	sel	r5, r3, r7
 800023a:	fa86 f647 	uadd8	r6, r6, r7
 800023e:	faa5 f687 	sel	r6, r5, r7
 8000242:	b98e      	cbnz	r6, 8000268 <memchr+0x78>
 8000244:	d1ee      	bne.n	8000224 <memchr+0x34>
 8000246:	bcf0      	pop	{r4, r5, r6, r7}
 8000248:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800024c:	f002 0207 	and.w	r2, r2, #7
 8000250:	b132      	cbz	r2, 8000260 <memchr+0x70>
 8000252:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000256:	3a01      	subs	r2, #1
 8000258:	ea83 0301 	eor.w	r3, r3, r1
 800025c:	b113      	cbz	r3, 8000264 <memchr+0x74>
 800025e:	d1f8      	bne.n	8000252 <memchr+0x62>
 8000260:	2000      	movs	r0, #0
 8000262:	4770      	bx	lr
 8000264:	3801      	subs	r0, #1
 8000266:	4770      	bx	lr
 8000268:	2d00      	cmp	r5, #0
 800026a:	bf06      	itte	eq
 800026c:	4635      	moveq	r5, r6
 800026e:	3803      	subeq	r0, #3
 8000270:	3807      	subne	r0, #7
 8000272:	f015 0f01 	tst.w	r5, #1
 8000276:	d107      	bne.n	8000288 <memchr+0x98>
 8000278:	3001      	adds	r0, #1
 800027a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800027e:	bf02      	ittt	eq
 8000280:	3001      	addeq	r0, #1
 8000282:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000286:	3001      	addeq	r0, #1
 8000288:	bcf0      	pop	{r4, r5, r6, r7}
 800028a:	3801      	subs	r0, #1
 800028c:	4770      	bx	lr
 800028e:	bf00      	nop

08000290 <__aeabi_uldivmod>:
 8000290:	b953      	cbnz	r3, 80002a8 <__aeabi_uldivmod+0x18>
 8000292:	b94a      	cbnz	r2, 80002a8 <__aeabi_uldivmod+0x18>
 8000294:	2900      	cmp	r1, #0
 8000296:	bf08      	it	eq
 8000298:	2800      	cmpeq	r0, #0
 800029a:	bf1c      	itt	ne
 800029c:	f04f 31ff 	movne.w	r1, #4294967295
 80002a0:	f04f 30ff 	movne.w	r0, #4294967295
 80002a4:	f000 b972 	b.w	800058c <__aeabi_idiv0>
 80002a8:	f1ad 0c08 	sub.w	ip, sp, #8
 80002ac:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 80002b0:	f000 f806 	bl	80002c0 <__udivmoddi4>
 80002b4:	f8dd e004 	ldr.w	lr, [sp, #4]
 80002b8:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80002bc:	b004      	add	sp, #16
 80002be:	4770      	bx	lr

080002c0 <__udivmoddi4>:
 80002c0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80002c4:	9e08      	ldr	r6, [sp, #32]
 80002c6:	4604      	mov	r4, r0
 80002c8:	4688      	mov	r8, r1
 80002ca:	2b00      	cmp	r3, #0
 80002cc:	d14b      	bne.n	8000366 <__udivmoddi4+0xa6>
 80002ce:	428a      	cmp	r2, r1
 80002d0:	4615      	mov	r5, r2
 80002d2:	d967      	bls.n	80003a4 <__udivmoddi4+0xe4>
 80002d4:	fab2 f282 	clz	r2, r2
 80002d8:	b14a      	cbz	r2, 80002ee <__udivmoddi4+0x2e>
 80002da:	f1c2 0720 	rsb	r7, r2, #32
 80002de:	fa01 f302 	lsl.w	r3, r1, r2
 80002e2:	fa20 f707 	lsr.w	r7, r0, r7
 80002e6:	4095      	lsls	r5, r2
 80002e8:	ea47 0803 	orr.w	r8, r7, r3
 80002ec:	4094      	lsls	r4, r2
 80002ee:	ea4f 4e15 	mov.w	lr, r5, lsr #16
 80002f2:	0c23      	lsrs	r3, r4, #16
 80002f4:	fbb8 f7fe 	udiv	r7, r8, lr
 80002f8:	fa1f fc85 	uxth.w	ip, r5
 80002fc:	fb0e 8817 	mls	r8, lr, r7, r8
 8000300:	ea43 4308 	orr.w	r3, r3, r8, lsl #16
 8000304:	fb07 f10c 	mul.w	r1, r7, ip
 8000308:	4299      	cmp	r1, r3
 800030a:	d909      	bls.n	8000320 <__udivmoddi4+0x60>
 800030c:	18eb      	adds	r3, r5, r3
 800030e:	f107 30ff 	add.w	r0, r7, #4294967295
 8000312:	f080 811b 	bcs.w	800054c <__udivmoddi4+0x28c>
 8000316:	4299      	cmp	r1, r3
 8000318:	f240 8118 	bls.w	800054c <__udivmoddi4+0x28c>
 800031c:	3f02      	subs	r7, #2
 800031e:	442b      	add	r3, r5
 8000320:	1a5b      	subs	r3, r3, r1
 8000322:	b2a4      	uxth	r4, r4
 8000324:	fbb3 f0fe 	udiv	r0, r3, lr
 8000328:	fb0e 3310 	mls	r3, lr, r0, r3
 800032c:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
 8000330:	fb00 fc0c 	mul.w	ip, r0, ip
 8000334:	45a4      	cmp	ip, r4
 8000336:	d909      	bls.n	800034c <__udivmoddi4+0x8c>
 8000338:	192c      	adds	r4, r5, r4
 800033a:	f100 33ff 	add.w	r3, r0, #4294967295
 800033e:	f080 8107 	bcs.w	8000550 <__udivmoddi4+0x290>
 8000342:	45a4      	cmp	ip, r4
 8000344:	f240 8104 	bls.w	8000550 <__udivmoddi4+0x290>
 8000348:	3802      	subs	r0, #2
 800034a:	442c      	add	r4, r5
 800034c:	ea40 4007 	orr.w	r0, r0, r7, lsl #16
 8000350:	eba4 040c 	sub.w	r4, r4, ip
 8000354:	2700      	movs	r7, #0
 8000356:	b11e      	cbz	r6, 8000360 <__udivmoddi4+0xa0>
 8000358:	40d4      	lsrs	r4, r2
 800035a:	2300      	movs	r3, #0
 800035c:	e9c6 4300 	strd	r4, r3, [r6]
 8000360:	4639      	mov	r1, r7
 8000362:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000366:	428b      	cmp	r3, r1
 8000368:	d909      	bls.n	800037e <__udivmoddi4+0xbe>
 800036a:	2e00      	cmp	r6, #0
 800036c:	f000 80eb 	beq.w	8000546 <__udivmoddi4+0x286>
 8000370:	2700      	movs	r7, #0
 8000372:	e9c6 0100 	strd	r0, r1, [r6]
 8000376:	4638      	mov	r0, r7
 8000378:	4639      	mov	r1, r7
 800037a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800037e:	fab3 f783 	clz	r7, r3
 8000382:	2f00      	cmp	r7, #0
 8000384:	d147      	bne.n	8000416 <__udivmoddi4+0x156>
 8000386:	428b      	cmp	r3, r1
 8000388:	d302      	bcc.n	8000390 <__udivmoddi4+0xd0>
 800038a:	4282      	cmp	r2, r0
 800038c:	f200 80fa 	bhi.w	8000584 <__udivmoddi4+0x2c4>
 8000390:	1a84      	subs	r4, r0, r2
 8000392:	eb61 0303 	sbc.w	r3, r1, r3
 8000396:	2001      	movs	r0, #1
 8000398:	4698      	mov	r8, r3
 800039a:	2e00      	cmp	r6, #0
 800039c:	d0e0      	beq.n	8000360 <__udivmoddi4+0xa0>
 800039e:	e9c6 4800 	strd	r4, r8, [r6]
 80003a2:	e7dd      	b.n	8000360 <__udivmoddi4+0xa0>
 80003a4:	b902      	cbnz	r2, 80003a8 <__udivmoddi4+0xe8>
 80003a6:	deff      	udf	#255	; 0xff
 80003a8:	fab2 f282 	clz	r2, r2
 80003ac:	2a00      	cmp	r2, #0
 80003ae:	f040 808f 	bne.w	80004d0 <__udivmoddi4+0x210>
 80003b2:	1b49      	subs	r1, r1, r5
 80003b4:	ea4f 4e15 	mov.w	lr, r5, lsr #16
 80003b8:	fa1f f885 	uxth.w	r8, r5
 80003bc:	2701      	movs	r7, #1
 80003be:	fbb1 fcfe 	udiv	ip, r1, lr
 80003c2:	0c23      	lsrs	r3, r4, #16
 80003c4:	fb0e 111c 	mls	r1, lr, ip, r1
 80003c8:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 80003cc:	fb08 f10c 	mul.w	r1, r8, ip
 80003d0:	4299      	cmp	r1, r3
 80003d2:	d907      	bls.n	80003e4 <__udivmoddi4+0x124>
 80003d4:	18eb      	adds	r3, r5, r3
 80003d6:	f10c 30ff 	add.w	r0, ip, #4294967295
 80003da:	d202      	bcs.n	80003e2 <__udivmoddi4+0x122>
 80003dc:	4299      	cmp	r1, r3
 80003de:	f200 80cd 	bhi.w	800057c <__udivmoddi4+0x2bc>
 80003e2:	4684      	mov	ip, r0
 80003e4:	1a59      	subs	r1, r3, r1
 80003e6:	b2a3      	uxth	r3, r4
 80003e8:	fbb1 f0fe 	udiv	r0, r1, lr
 80003ec:	fb0e 1410 	mls	r4, lr, r0, r1
 80003f0:	ea43 4404 	orr.w	r4, r3, r4, lsl #16
 80003f4:	fb08 f800 	mul.w	r8, r8, r0
 80003f8:	45a0      	cmp	r8, r4
 80003fa:	d907      	bls.n	800040c <__udivmoddi4+0x14c>
 80003fc:	192c      	adds	r4, r5, r4
 80003fe:	f100 33ff 	add.w	r3, r0, #4294967295
 8000402:	d202      	bcs.n	800040a <__udivmoddi4+0x14a>
 8000404:	45a0      	cmp	r8, r4
 8000406:	f200 80b6 	bhi.w	8000576 <__udivmoddi4+0x2b6>
 800040a:	4618      	mov	r0, r3
 800040c:	eba4 0408 	sub.w	r4, r4, r8
 8000410:	ea40 400c 	orr.w	r0, r0, ip, lsl #16
 8000414:	e79f      	b.n	8000356 <__udivmoddi4+0x96>
 8000416:	f1c7 0c20 	rsb	ip, r7, #32
 800041a:	40bb      	lsls	r3, r7
 800041c:	fa22 fe0c 	lsr.w	lr, r2, ip
 8000420:	ea4e 0e03 	orr.w	lr, lr, r3
 8000424:	fa01 f407 	lsl.w	r4, r1, r7
 8000428:	fa20 f50c 	lsr.w	r5, r0, ip
 800042c:	fa21 f30c 	lsr.w	r3, r1, ip
 8000430:	ea4f 481e 	mov.w	r8, lr, lsr #16
 8000434:	4325      	orrs	r5, r4
 8000436:	fbb3 f9f8 	udiv	r9, r3, r8
 800043a:	0c2c      	lsrs	r4, r5, #16
 800043c:	fb08 3319 	mls	r3, r8, r9, r3
 8000440:	fa1f fa8e 	uxth.w	sl, lr
 8000444:	ea44 4303 	orr.w	r3, r4, r3, lsl #16
 8000448:	fb09 f40a 	mul.w	r4, r9, sl
 800044c:	429c      	cmp	r4, r3
 800044e:	fa02 f207 	lsl.w	r2, r2, r7
 8000452:	fa00 f107 	lsl.w	r1, r0, r7
 8000456:	d90b      	bls.n	8000470 <__udivmoddi4+0x1b0>
 8000458:	eb1e 0303 	adds.w	r3, lr, r3
 800045c:	f109 30ff 	add.w	r0, r9, #4294967295
 8000460:	f080 8087 	bcs.w	8000572 <__udivmoddi4+0x2b2>
 8000464:	429c      	cmp	r4, r3
 8000466:	f240 8084 	bls.w	8000572 <__udivmoddi4+0x2b2>
 800046a:	f1a9 0902 	sub.w	r9, r9, #2
 800046e:	4473      	add	r3, lr
 8000470:	1b1b      	subs	r3, r3, r4
 8000472:	b2ad      	uxth	r5, r5
 8000474:	fbb3 f0f8 	udiv	r0, r3, r8
 8000478:	fb08 3310 	mls	r3, r8, r0, r3
 800047c:	ea45 4403 	orr.w	r4, r5, r3, lsl #16
 8000480:	fb00 fa0a 	mul.w	sl, r0, sl
 8000484:	45a2      	cmp	sl, r4
 8000486:	d908      	bls.n	800049a <__udivmoddi4+0x1da>
 8000488:	eb1e 0404 	adds.w	r4, lr, r4
 800048c:	f100 33ff 	add.w	r3, r0, #4294967295
 8000490:	d26b      	bcs.n	800056a <__udivmoddi4+0x2aa>
 8000492:	45a2      	cmp	sl, r4
 8000494:	d969      	bls.n	800056a <__udivmoddi4+0x2aa>
 8000496:	3802      	subs	r0, #2
 8000498:	4474      	add	r4, lr
 800049a:	ea40 4009 	orr.w	r0, r0, r9, lsl #16
 800049e:	fba0 8902 	umull	r8, r9, r0, r2
 80004a2:	eba4 040a 	sub.w	r4, r4, sl
 80004a6:	454c      	cmp	r4, r9
 80004a8:	46c2      	mov	sl, r8
 80004aa:	464b      	mov	r3, r9
 80004ac:	d354      	bcc.n	8000558 <__udivmoddi4+0x298>
 80004ae:	d051      	beq.n	8000554 <__udivmoddi4+0x294>
 80004b0:	2e00      	cmp	r6, #0
 80004b2:	d069      	beq.n	8000588 <__udivmoddi4+0x2c8>
 80004b4:	ebb1 050a 	subs.w	r5, r1, sl
 80004b8:	eb64 0403 	sbc.w	r4, r4, r3
 80004bc:	fa04 fc0c 	lsl.w	ip, r4, ip
 80004c0:	40fd      	lsrs	r5, r7
 80004c2:	40fc      	lsrs	r4, r7
 80004c4:	ea4c 0505 	orr.w	r5, ip, r5
 80004c8:	e9c6 5400 	strd	r5, r4, [r6]
 80004cc:	2700      	movs	r7, #0
 80004ce:	e747      	b.n	8000360 <__udivmoddi4+0xa0>
 80004d0:	f1c2 0320 	rsb	r3, r2, #32
 80004d4:	fa20 f703 	lsr.w	r7, r0, r3
 80004d8:	4095      	lsls	r5, r2
 80004da:	fa01 f002 	lsl.w	r0, r1, r2
 80004de:	fa21 f303 	lsr.w	r3, r1, r3
 80004e2:	ea4f 4e15 	mov.w	lr, r5, lsr #16
 80004e6:	4338      	orrs	r0, r7
 80004e8:	0c01      	lsrs	r1, r0, #16
 80004ea:	fbb3 f7fe 	udiv	r7, r3, lr
 80004ee:	fa1f f885 	uxth.w	r8, r5
 80004f2:	fb0e 3317 	mls	r3, lr, r7, r3
 80004f6:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 80004fa:	fb07 f308 	mul.w	r3, r7, r8
 80004fe:	428b      	cmp	r3, r1
 8000500:	fa04 f402 	lsl.w	r4, r4, r2
 8000504:	d907      	bls.n	8000516 <__udivmoddi4+0x256>
 8000506:	1869      	adds	r1, r5, r1
 8000508:	f107 3cff 	add.w	ip, r7, #4294967295
 800050c:	d22f      	bcs.n	800056e <__udivmoddi4+0x2ae>
 800050e:	428b      	cmp	r3, r1
 8000510:	d92d      	bls.n	800056e <__udivmoddi4+0x2ae>
 8000512:	3f02      	subs	r7, #2
 8000514:	4429      	add	r1, r5
 8000516:	1acb      	subs	r3, r1, r3
 8000518:	b281      	uxth	r1, r0
 800051a:	fbb3 f0fe 	udiv	r0, r3, lr
 800051e:	fb0e 3310 	mls	r3, lr, r0, r3
 8000522:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 8000526:	fb00 f308 	mul.w	r3, r0, r8
 800052a:	428b      	cmp	r3, r1
 800052c:	d907      	bls.n	800053e <__udivmoddi4+0x27e>
 800052e:	1869      	adds	r1, r5, r1
 8000530:	f100 3cff 	add.w	ip, r0, #4294967295
 8000534:	d217      	bcs.n	8000566 <__udivmoddi4+0x2a6>
 8000536:	428b      	cmp	r3, r1
 8000538:	d915      	bls.n	8000566 <__udivmoddi4+0x2a6>
 800053a:	3802      	subs	r0, #2
 800053c:	4429      	add	r1, r5
 800053e:	1ac9      	subs	r1, r1, r3
 8000540:	ea40 4707 	orr.w	r7, r0, r7, lsl #16
 8000544:	e73b      	b.n	80003be <__udivmoddi4+0xfe>
 8000546:	4637      	mov	r7, r6
 8000548:	4630      	mov	r0, r6
 800054a:	e709      	b.n	8000360 <__udivmoddi4+0xa0>
 800054c:	4607      	mov	r7, r0
 800054e:	e6e7      	b.n	8000320 <__udivmoddi4+0x60>
 8000550:	4618      	mov	r0, r3
 8000552:	e6fb      	b.n	800034c <__udivmoddi4+0x8c>
 8000554:	4541      	cmp	r1, r8
 8000556:	d2ab      	bcs.n	80004b0 <__udivmoddi4+0x1f0>
 8000558:	ebb8 0a02 	subs.w	sl, r8, r2
 800055c:	eb69 020e 	sbc.w	r2, r9, lr
 8000560:	3801      	subs	r0, #1
 8000562:	4613      	mov	r3, r2
 8000564:	e7a4      	b.n	80004b0 <__udivmoddi4+0x1f0>
 8000566:	4660      	mov	r0, ip
 8000568:	e7e9      	b.n	800053e <__udivmoddi4+0x27e>
 800056a:	4618      	mov	r0, r3
 800056c:	e795      	b.n	800049a <__udivmoddi4+0x1da>
 800056e:	4667      	mov	r7, ip
 8000570:	e7d1      	b.n	8000516 <__udivmoddi4+0x256>
 8000572:	4681      	mov	r9, r0
 8000574:	e77c      	b.n	8000470 <__udivmoddi4+0x1b0>
 8000576:	3802      	subs	r0, #2
 8000578:	442c      	add	r4, r5
 800057a:	e747      	b.n	800040c <__udivmoddi4+0x14c>
 800057c:	f1ac 0c02 	sub.w	ip, ip, #2
 8000580:	442b      	add	r3, r5
 8000582:	e72f      	b.n	80003e4 <__udivmoddi4+0x124>
 8000584:	4638      	mov	r0, r7
 8000586:	e708      	b.n	800039a <__udivmoddi4+0xda>
 8000588:	4637      	mov	r7, r6
 800058a:	e6e9      	b.n	8000360 <__udivmoddi4+0xa0>

0800058c <__aeabi_idiv0>:
 800058c:	4770      	bx	lr
 800058e:	bf00      	nop

08000590 <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler: 
  ldr   sp, =_estack       /* set stack pointer */
 8000590:	f8df d034 	ldr.w	sp, [pc, #52]	; 80005c8 <LoopFillZerobss+0x14>
 
/* Copy the data segment initializers from flash to SRAM */  
  movs  r1, #0
 8000594:	2100      	movs	r1, #0
  b  LoopCopyDataInit
 8000596:	e003      	b.n	80005a0 <LoopCopyDataInit>

08000598 <CopyDataInit>:

CopyDataInit:
  ldr  r3, =_sidata
 8000598:	4b0c      	ldr	r3, [pc, #48]	; (80005cc <LoopFillZerobss+0x18>)
  ldr  r3, [r3, r1]
 800059a:	585b      	ldr	r3, [r3, r1]
  str  r3, [r0, r1]
 800059c:	5043      	str	r3, [r0, r1]
  adds  r1, r1, #4
 800059e:	3104      	adds	r1, #4

080005a0 <LoopCopyDataInit>:
    
LoopCopyDataInit:
  ldr  r0, =_sdata
 80005a0:	480b      	ldr	r0, [pc, #44]	; (80005d0 <LoopFillZerobss+0x1c>)
  ldr  r3, =_edata
 80005a2:	4b0c      	ldr	r3, [pc, #48]	; (80005d4 <LoopFillZerobss+0x20>)
  adds  r2, r0, r1
 80005a4:	1842      	adds	r2, r0, r1
  cmp  r2, r3
 80005a6:	429a      	cmp	r2, r3
  bcc  CopyDataInit
 80005a8:	d3f6      	bcc.n	8000598 <CopyDataInit>
  ldr  r2, =_sbss
 80005aa:	4a0b      	ldr	r2, [pc, #44]	; (80005d8 <LoopFillZerobss+0x24>)
  b  LoopFillZerobss
 80005ac:	e002      	b.n	80005b4 <LoopFillZerobss>

080005ae <FillZerobss>:
/* Zero fill the bss segment. */  
FillZerobss:
  movs  r3, #0
 80005ae:	2300      	movs	r3, #0
  str  r3, [r2], #4
 80005b0:	f842 3b04 	str.w	r3, [r2], #4

080005b4 <LoopFillZerobss>:
    
LoopFillZerobss:
  ldr  r3, = _ebss
 80005b4:	4b09      	ldr	r3, [pc, #36]	; (80005dc <LoopFillZerobss+0x28>)
  cmp  r2, r3
 80005b6:	429a      	cmp	r2, r3
  bcc  FillZerobss
 80005b8:	d3f9      	bcc.n	80005ae <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit   
 80005ba:	f002 ff4f 	bl	800345c <SystemInit>
/* Call static constructors */
    bl __libc_init_array
 80005be:	f018 fb5f 	bl	8018c80 <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 80005c2:	f000 fe95 	bl	80012f0 <main>
  bx  lr    
 80005c6:	4770      	bx	lr
  ldr   sp, =_estack       /* set stack pointer */
 80005c8:	20030000 	.word	0x20030000
  ldr  r3, =_sidata
 80005cc:	08056e88 	.word	0x08056e88
  ldr  r0, =_sdata
 80005d0:	20000000 	.word	0x20000000
  ldr  r3, =_edata
 80005d4:	20000160 	.word	0x20000160
  ldr  r2, =_sbss
 80005d8:	20000160 	.word	0x20000160
  ldr  r3, = _ebss
 80005dc:	20012984 	.word	0x20012984

080005e0 <ADC_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 80005e0:	e7fe      	b.n	80005e0 <ADC_IRQHandler>

080005e2 <MX_TouchGFX_Init>:
 * Initialize TouchGFX application
 */
void MX_TouchGFX_Init(void)
{
  // Calling farward to touchgfx_init in C++ domain
  touchgfx_init();
 80005e2:	f000 bc93 	b.w	8000f0c <touchgfx_init>

080005e6 <TouchGFX_Task>:
 * TouchGFX application thread
 */
void TouchGFX_Task(void *argument)
{
  // Calling farward to touchgfx_init in C++ domain
  touchgfx_taskEntry();
 80005e6:	f000 bd01 	b.w	8000fec <touchgfx_taskEntry>

080005ea <_ZN20STM32TouchControllerD1Ev>:
 * @brief This class specializes TouchController Interface.
 *
 * @sa touchgfx::TouchController
 */

class STM32TouchController : public touchgfx::TouchController
 80005ea:	4770      	bx	lr

080005ec <_ZN20STM32TouchControllerD0Ev>:
 80005ec:	b510      	push	{r4, lr}
 80005ee:	2104      	movs	r1, #4
 80005f0:	4604      	mov	r4, r0
 80005f2:	f018 facf 	bl	8018b94 <_ZdlPvj>
 80005f6:	4620      	mov	r0, r4
 80005f8:	bd10      	pop	{r4, pc}
	...

080005fc <_Z11BSP_TS_Inittt>:
  * @param  XSize: The maximum X size of the TS area on LCD
  * @param  YSize: The maximum Y size of the TS area on LCD
  * @retval TS_OK: if all initializations are OK. Other value if error.
  */
uint8_t BSP_TS_Init(uint16_t XSize, uint16_t YSize)
{
 80005fc:	b538      	push	{r3, r4, r5, lr}
    uint8_t ret = TS_ERROR;

    /* Initialize x and y positions boundaries */
    TsXBoundary = XSize;
 80005fe:	4b0c      	ldr	r3, [pc, #48]	; (8000630 <_Z11BSP_TS_Inittt+0x34>)
    TsYBoundary = YSize;

    /* Read ID and verify if the IO expander is ready */
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 8000600:	4c0c      	ldr	r4, [pc, #48]	; (8000634 <_Z11BSP_TS_Inittt+0x38>)
    TsXBoundary = XSize;
 8000602:	8018      	strh	r0, [r3, #0]
    TsYBoundary = YSize;
 8000604:	4b0c      	ldr	r3, [pc, #48]	; (8000638 <_Z11BSP_TS_Inittt+0x3c>)
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 8000606:	2082      	movs	r0, #130	; 0x82
    TsYBoundary = YSize;
 8000608:	8019      	strh	r1, [r3, #0]
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 800060a:	6863      	ldr	r3, [r4, #4]
 800060c:	4798      	blx	r3
 800060e:	f640 0311 	movw	r3, #2065	; 0x811
 8000612:	4298      	cmp	r0, r3
 8000614:	d10a      	bne.n	800062c <_Z11BSP_TS_Inittt+0x30>
    {
        /* Initialize the TS driver structure */
        TsDrv = &stmpe811_ts_drv;
 8000616:	4d09      	ldr	r5, [pc, #36]	; (800063c <_Z11BSP_TS_Inittt+0x40>)
    }

    if (ret == TS_OK)
    {
        /* Initialize the LL TS Driver */
        TsDrv->Init(TS_I2C_ADDRESS);
 8000618:	6823      	ldr	r3, [r4, #0]
        TsDrv = &stmpe811_ts_drv;
 800061a:	602c      	str	r4, [r5, #0]
        TsDrv->Init(TS_I2C_ADDRESS);
 800061c:	2082      	movs	r0, #130	; 0x82
 800061e:	4798      	blx	r3
        TsDrv->Start(TS_I2C_ADDRESS);
 8000620:	682b      	ldr	r3, [r5, #0]
 8000622:	2082      	movs	r0, #130	; 0x82
 8000624:	68db      	ldr	r3, [r3, #12]
 8000626:	4798      	blx	r3
        ret = TS_OK;
 8000628:	2000      	movs	r0, #0
    }

    return ret;
}
 800062a:	bd38      	pop	{r3, r4, r5, pc}
    uint8_t ret = TS_ERROR;
 800062c:	2001      	movs	r0, #1
 800062e:	e7fc      	b.n	800062a <_Z11BSP_TS_Inittt+0x2e>
 8000630:	2000017c 	.word	0x2000017c
 8000634:	2000004c 	.word	0x2000004c
 8000638:	2000017e 	.word	0x2000017e
 800063c:	20000180 	.word	0x20000180

08000640 <_ZN20STM32TouchController4initEv>:
    BSP_TS_Init(240, 320);
 8000640:	f44f 71a0 	mov.w	r1, #320	; 0x140
 8000644:	20f0      	movs	r0, #240	; 0xf0
 8000646:	f7ff bfd9 	b.w	80005fc <_Z11BSP_TS_Inittt>
	...

0800064c <_Z15BSP_TS_GetStateP15TS_StateTypeDef>:
/**
  * @brief  Returns status and positions of the touch screen.
  * @param  TsState: Pointer to touch screen current state structure
  */
void BSP_TS_GetState(TS_StateTypeDef* TsState)
{
 800064c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    static uint32_t _x = 0, _y = 0;
    uint16_t xDiff, yDiff, x, y, xr, yr;

    TsState->TouchDetected = TsDrv->DetectTouch(TS_I2C_ADDRESS);
 800064e:	4d2c      	ldr	r5, [pc, #176]	; (8000700 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xb4>)
 8000650:	682b      	ldr	r3, [r5, #0]
{
 8000652:	4604      	mov	r4, r0
    TsState->TouchDetected = TsDrv->DetectTouch(TS_I2C_ADDRESS);
 8000654:	691b      	ldr	r3, [r3, #16]
 8000656:	2082      	movs	r0, #130	; 0x82
 8000658:	4798      	blx	r3
 800065a:	b280      	uxth	r0, r0
 800065c:	8020      	strh	r0, [r4, #0]

    if (TsState->TouchDetected)
 800065e:	2800      	cmp	r0, #0
 8000660:	d04b      	beq.n	80006fa <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xae>
    {
        TsDrv->GetXY(TS_I2C_ADDRESS, &x, &y);
 8000662:	682b      	ldr	r3, [r5, #0]
 8000664:	f10d 0206 	add.w	r2, sp, #6
 8000668:	695b      	ldr	r3, [r3, #20]
 800066a:	a901      	add	r1, sp, #4
 800066c:	2082      	movs	r0, #130	; 0x82
 800066e:	4798      	blx	r3

        /* Y value first correction */
        y -= 360;
 8000670:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 8000674:	f5a3 73b4 	sub.w	r3, r3, #360	; 0x168

        /* Y value second correction */
        yr = y / 11;
 8000678:	b29b      	uxth	r3, r3
 800067a:	220b      	movs	r2, #11
 800067c:	fbb3 f3f2 	udiv	r3, r3, r2

        /* Return y position value */
        if (yr <= 0)
 8000680:	b133      	cbz	r3, 8000690 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x44>
        {
            yr = 0;
        }
        else if (yr > TsYBoundary)
 8000682:	4a20      	ldr	r2, [pc, #128]	; (8000704 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xb8>)
 8000684:	8812      	ldrh	r2, [r2, #0]
 8000686:	429a      	cmp	r2, r3
        {
            yr = TsYBoundary - 1;
 8000688:	bf3c      	itt	cc
 800068a:	f102 33ff 	addcc.w	r3, r2, #4294967295
 800068e:	b29b      	uxthcc	r3, r3
        else
        {}
        y = yr;

        /* X value first correction */
        if (x <= 3000)
 8000690:	f8bd 2004 	ldrh.w	r2, [sp, #4]
 8000694:	f640 31b8 	movw	r1, #3000	; 0xbb8
 8000698:	428a      	cmp	r2, r1
        {
            x = 3870 - x;
 800069a:	bf95      	itete	ls
 800069c:	f5c2 6271 	rsbls	r2, r2, #3856	; 0xf10
        }
        else
        {
            x = 3800 - x;
 80006a0:	f5c2 626d 	rsbhi	r2, r2, #3792	; 0xed0
            x = 3870 - x;
 80006a4:	320e      	addls	r2, #14
            x = 3800 - x;
 80006a6:	3208      	addhi	r2, #8
 80006a8:	f8ad 2004 	strh.w	r2, [sp, #4]
        }

        /* X value second correction */
        xr = x / 15;
 80006ac:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 80006b0:	220f      	movs	r2, #15
 80006b2:	fbb1 f1f2 	udiv	r1, r1, r2

        /* Return X position value */
        if (xr <= 0)
 80006b6:	b131      	cbz	r1, 80006c6 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x7a>
        {
            xr = 0;
        }
        else if (xr > TsXBoundary)
 80006b8:	4a13      	ldr	r2, [pc, #76]	; (8000708 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xbc>)
 80006ba:	8812      	ldrh	r2, [r2, #0]
 80006bc:	428a      	cmp	r2, r1
        {
            xr = TsXBoundary - 1;
 80006be:	bf3c      	itt	cc
 80006c0:	f102 31ff 	addcc.w	r1, r2, #4294967295
 80006c4:	b289      	uxthcc	r1, r1
        }
        else
        {}

        x = xr;
        xDiff = x > _x ? (x - _x) : (_x - x);
 80006c6:	4e11      	ldr	r6, [pc, #68]	; (800070c <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xc0>)
        yDiff = y > _y ? (y - _y) : (_y - y);
 80006c8:	4d11      	ldr	r5, [pc, #68]	; (8000710 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xc4>)
        xDiff = x > _x ? (x - _x) : (_x - x);
 80006ca:	6830      	ldr	r0, [r6, #0]
        yDiff = y > _y ? (y - _y) : (_y - y);
 80006cc:	682f      	ldr	r7, [r5, #0]
 80006ce:	b282      	uxth	r2, r0
        xDiff = x > _x ? (x - _x) : (_x - x);
 80006d0:	4281      	cmp	r1, r0
 80006d2:	bf88      	it	hi
 80006d4:	1a8a      	subhi	r2, r1, r2
 80006d6:	b2b8      	uxth	r0, r7
 80006d8:	bf98      	it	ls
 80006da:	1a52      	subls	r2, r2, r1
        yDiff = y > _y ? (y - _y) : (_y - y);
 80006dc:	42bb      	cmp	r3, r7
 80006de:	bf8c      	ite	hi
 80006e0:	1a18      	subhi	r0, r3, r0
 80006e2:	1ac0      	subls	r0, r0, r3
        xDiff = x > _x ? (x - _x) : (_x - x);
 80006e4:	b292      	uxth	r2, r2
        yDiff = y > _y ? (y - _y) : (_y - y);
 80006e6:	b280      	uxth	r0, r0

        if (xDiff + yDiff > 5)
 80006e8:	4402      	add	r2, r0
 80006ea:	2a05      	cmp	r2, #5
        {
            _x = x;
 80006ec:	bfc4      	itt	gt
 80006ee:	6031      	strgt	r1, [r6, #0]
            _y = y;
 80006f0:	602b      	strgt	r3, [r5, #0]
        }

        /* Update the X position */
        TsState->X = _x;
 80006f2:	6833      	ldr	r3, [r6, #0]
 80006f4:	8063      	strh	r3, [r4, #2]

        /* Update the Y position */
        TsState->Y = _y;
 80006f6:	682b      	ldr	r3, [r5, #0]
 80006f8:	80a3      	strh	r3, [r4, #4]
    }
}
 80006fa:	b003      	add	sp, #12
 80006fc:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80006fe:	bf00      	nop
 8000700:	20000180 	.word	0x20000180
 8000704:	2000017e 	.word	0x2000017e
 8000708:	2000017c 	.word	0x2000017c
 800070c:	20000184 	.word	0x20000184
 8000710:	20000188 	.word	0x20000188

08000714 <_ZN20STM32TouchController11sampleTouchERlS0_>:
{
 8000714:	b537      	push	{r0, r1, r2, r4, r5, lr}
    BSP_TS_GetState(&state);
 8000716:	4668      	mov	r0, sp
{
 8000718:	460d      	mov	r5, r1
 800071a:	4614      	mov	r4, r2
    BSP_TS_GetState(&state);
 800071c:	f7ff ff96 	bl	800064c <_Z15BSP_TS_GetStateP15TS_StateTypeDef>
    if (state.TouchDetected)
 8000720:	f8bd 0000 	ldrh.w	r0, [sp]
 8000724:	b130      	cbz	r0, 8000734 <_ZN20STM32TouchController11sampleTouchERlS0_+0x20>
        x = state.X;
 8000726:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800072a:	602b      	str	r3, [r5, #0]
        y = state.Y;
 800072c:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8000730:	6023      	str	r3, [r4, #0]
        return true;
 8000732:	2001      	movs	r0, #1
}
 8000734:	b003      	add	sp, #12
 8000736:	bd30      	pop	{r4, r5, pc}

08000738 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>:
 * Sets a pin high.
 */
void GPIO::set(GPIO_ID id)
{

}
 8000738:	4770      	bx	lr

0800073a <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>:
 800073a:	4770      	bx	lr

0800073c <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>:
 800073c:	4770      	bx	lr

0800073e <_ZN8touchgfx3HAL21setDisplayOrientationENS_18DisplayOrientationE>:
     * @note A screen transition must occur before this takes effect!
     */
    virtual void setDisplayOrientation(DisplayOrientation orientation)
    {
        requestedOrientation = orientation;
        displayOrientationChangeRequested = true;
 800073e:	2301      	movs	r3, #1
        requestedOrientation = orientation;
 8000740:	f880 1074 	strb.w	r1, [r0, #116]	; 0x74
        displayOrientationChangeRequested = true;
 8000744:	f880 3075 	strb.w	r3, [r0, #117]	; 0x75
    }
 8000748:	4770      	bx	lr

0800074a <_ZN8touchgfx3HAL9sampleKeyERh>:
     * @return True if a keypress was detected and the "key" parameter is set to a value.
     */
    virtual bool sampleKey(uint8_t& key)
    {
        return false;
    }
 800074a:	2000      	movs	r0, #0
 800074c:	4770      	bx	lr

0800074e <_ZNK8touchgfx3HAL18getFlashDataReaderEv>:
     * @return the FlashDataReader.
     */
    virtual FlashDataReader* getFlashDataReader() const
    {
        return 0;
    }
 800074e:	2000      	movs	r0, #0
 8000750:	4770      	bx	lr

08000752 <_ZN8touchgfx3HAL9taskDelayEt>:
     *
     * @see registerTaskDelayFunction
     */
    virtual void taskDelay(uint16_t ms)
    {
        if (taskDelayFunc)
 8000752:	6b83      	ldr	r3, [r0, #56]	; 0x38
 8000754:	b10b      	cbz	r3, 800075a <_ZN8touchgfx3HAL9taskDelayEt+0x8>
        {
            taskDelayFunc(ms);
 8000756:	4608      	mov	r0, r1
 8000758:	4718      	bx	r3
        }
    }
 800075a:	4770      	bx	lr

0800075c <_ZN8touchgfx3HAL17getTFTCurrentLineEv>:
     *         implemented".
     */
    virtual uint16_t getTFTCurrentLine()
    {
        return 0xFFFFu;
    }
 800075c:	f64f 70ff 	movw	r0, #65535	; 0xffff
 8000760:	4770      	bx	lr

08000762 <_ZN8touchgfx3HAL10getDMATypeEv>:
     *
     * @return a DMAType value of the concrete DMA implementation.
     */
    virtual DMAType getDMAType()
    {
        return dma.getDMAType();
 8000762:	6840      	ldr	r0, [r0, #4]
 8000764:	6803      	ldr	r3, [r0, #0]
 8000766:	699b      	ldr	r3, [r3, #24]
 8000768:	4718      	bx	r3

0800076a <_ZN11TouchGFXHALD1Ev>:
 *
 * @brief HAL implementation for TouchGFX.
 *
 * @sa HAL
 */
class TouchGFXHAL : public TouchGFXGeneratedHAL
 800076a:	4770      	bx	lr

0800076c <_ZN11TouchGFXHAL9taskEntryEv>:

    TouchGFXGeneratedHAL::initialize();
}

void TouchGFXHAL::taskEntry()
{
 800076c:	b508      	push	{r3, lr}
    enableLCDControllerInterrupt();
 800076e:	6803      	ldr	r3, [r0, #0]
{
 8000770:	4604      	mov	r4, r0
    enableLCDControllerInterrupt();
 8000772:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 8000774:	4798      	blx	r3
    enableInterrupts();
 8000776:	6823      	ldr	r3, [r4, #0]
 8000778:	4620      	mov	r0, r4
 800077a:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 800077c:	4798      	blx	r3

    OSWrappers::waitForVSync();
 800077e:	f000 f957 	bl	8000a30 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
    backPorchExited();
 8000782:	6823      	ldr	r3, [r4, #0]
 8000784:	4620      	mov	r0, r4
 8000786:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8000788:	4798      	blx	r3

    LCD_IO_WriteReg(0x29);
 800078a:	2029      	movs	r0, #41	; 0x29
 800078c:	f001 f8b2 	bl	80018f4 <LCD_IO_WriteReg>

    for (;;)
    {
        OSWrappers::waitForVSync();
 8000790:	f000 f94e 	bl	8000a30 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
        backPorchExited();
 8000794:	6823      	ldr	r3, [r4, #0]
 8000796:	4620      	mov	r0, r4
 8000798:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 800079a:	4798      	blx	r3
 800079c:	e7f8      	b.n	8000790 <_ZN11TouchGFXHAL9taskEntryEv+0x24>

0800079e <_ZN8touchgfx3HAL15backPorchExitedEv>:
    virtual void backPorchExited()
 800079e:	b510      	push	{r4, lr}
 80007a0:	4604      	mov	r4, r0
        swapFrameBuffers();
 80007a2:	f009 f8e5 	bl	8009970 <_ZN8touchgfx3HAL16swapFrameBuffersEv>
        tick();
 80007a6:	6823      	ldr	r3, [r4, #0]
 80007a8:	4620      	mov	r0, r4
 80007aa:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
    }
 80007ae:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        tick();
 80007b2:	4718      	bx	r3

080007b4 <_ZNK11TouchGFXHAL17getTFTFrameBufferEv>:
    // Calling parent implementation of getTFTFrameBuffer().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    return TouchGFXGeneratedHAL::getTFTFrameBuffer();
 80007b4:	f000 bcb6 	b.w	8001124 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>

080007b8 <_ZN11TouchGFXHAL17setTFTFrameBufferEPt>:
    // Calling parent implementation of setTFTFrameBuffer(uint16_t* address).
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::setTFTFrameBuffer(address);
 80007b8:	f000 bcba 	b.w	8001130 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>

080007bc <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE>:
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::flushFrameBuffer(const touchgfx::Rect& rect) must
    // be called to notify the touchgfx framework that flush has been performed.

    TouchGFXGeneratedHAL::flushFrameBuffer(rect);
 80007bc:	f000 bcc0 	b.w	8001140 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>

080007c0 <_ZN11TouchGFXHAL19configureInterruptsEv>:
    // Calling parent implementation of configureInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::configureInterrupts();
 80007c0:	f000 bc8c 	b.w	80010dc <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>

080007c4 <_ZN11TouchGFXHAL16enableInterruptsEv>:
    // Calling parent implementation of enableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableInterrupts();
 80007c4:	f000 bcbe 	b.w	8001144 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>

080007c8 <_ZN11TouchGFXHAL17disableInterruptsEv>:
    // Calling parent implementation of disableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::disableInterrupts();
 80007c8:	f000 bcc6 	b.w	8001158 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>

080007cc <_ZN11TouchGFXHAL28enableLCDControllerInterruptEv>:
    // Calling parent implementation of enableLCDControllerInterrupt().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableLCDControllerInterrupt();
 80007cc:	f000 bc90 	b.w	80010f0 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>

080007d0 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_>:
    virtual void setFrameBufferStartAddresses(void* frameBuffer, void* doubleBuffer, void* animationStorage)
 80007d0:	b508      	push	{r3, lr}
        assert(frameBuffer != 0 && "A framebuffer address must be set");
 80007d2:	b931      	cbnz	r1, 80007e2 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x12>
 80007d4:	4b0a      	ldr	r3, [pc, #40]	; (8000800 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x30>)
 80007d6:	4a0b      	ldr	r2, [pc, #44]	; (8000804 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x34>)
 80007d8:	480b      	ldr	r0, [pc, #44]	; (8000808 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x38>)
 80007da:	f44f 7127 	mov.w	r1, #668	; 0x29c
 80007de:	f018 fa05 	bl	8018bec <__assert_func>
        frameBuffer1 = reinterpret_cast<uint16_t*>(doubleBuffer);
 80007e2:	e9c0 120f 	strd	r1, r2, [r0, #60]	; 0x3c
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
 80007e6:	3200      	adds	r2, #0
 80007e8:	4908      	ldr	r1, [pc, #32]	; (800080c <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x3c>)
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
 80007ea:	6443      	str	r3, [r0, #68]	; 0x44
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
 80007ec:	bf18      	it	ne
 80007ee:	2201      	movne	r2, #1
 80007f0:	700a      	strb	r2, [r1, #0]
        USE_ANIMATION_STORAGE = animationStorage != 0;
 80007f2:	3300      	adds	r3, #0
 80007f4:	4a06      	ldr	r2, [pc, #24]	; (8000810 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x40>)
 80007f6:	bf18      	it	ne
 80007f8:	2301      	movne	r3, #1
 80007fa:	7013      	strb	r3, [r2, #0]
    }
 80007fc:	bd08      	pop	{r3, pc}
 80007fe:	bf00      	nop
 8000800:	08019c8d 	.word	0x08019c8d
 8000804:	08019e18 	.word	0x08019e18
 8000808:	08019cc5 	.word	0x08019cc5
 800080c:	2001218a 	.word	0x2001218a
 8000810:	2001218b 	.word	0x2001218b

08000814 <_ZN8touchgfx3HAL26setFrameBufferStartAddressEPvtbb>:
    TOUCHGFX_DEPRECATED(
 8000814:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000818:	4699      	mov	r9, r3
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 800081a:	4b1c      	ldr	r3, [pc, #112]	; (800088c <_ZN8touchgfx3HAL26setFrameBufferStartAddressEPvtbb+0x78>)
    TOUCHGFX_DEPRECATED(
 800081c:	f89d 5020 	ldrb.w	r5, [sp, #32]
 8000820:	4688      	mov	r8, r1
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 8000822:	6819      	ldr	r1, [r3, #0]
 8000824:	f891 3076 	ldrb.w	r3, [r1, #118]	; 0x76
    TOUCHGFX_DEPRECATED(
 8000828:	4607      	mov	r7, r0
 800082a:	4614      	mov	r4, r2
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 800082c:	b10b      	cbz	r3, 8000832 <_ZN8touchgfx3HAL26setFrameBufferStartAddressEPvtbb+0x1e>
 800082e:	6cc8      	ldr	r0, [r1, #76]	; 0x4c
 8000830:	b900      	cbnz	r0, 8000834 <_ZN8touchgfx3HAL26setFrameBufferStartAddressEPvtbb+0x20>
            return instance->lcdRef;
 8000832:	6888      	ldr	r0, [r1, #8]
        uint16_t stride = lcd().framebufferStride();
 8000834:	6803      	ldr	r3, [r0, #0]
 8000836:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8000838:	4798      	blx	r3
        uint32_t bufferSizeInBytes = stride * FRAME_BUFFER_HEIGHT;
 800083a:	4b15      	ldr	r3, [pc, #84]	; (8000890 <_ZN8touchgfx3HAL26setFrameBufferStartAddressEPvtbb+0x7c>)
 800083c:	881e      	ldrh	r6, [r3, #0]
 800083e:	4370      	muls	r0, r6
        if (useDoubleBuffering)
 8000840:	f1b9 0f00 	cmp.w	r9, #0
 8000844:	d016      	beq.n	8000874 <_ZN8touchgfx3HAL26setFrameBufferStartAddressEPvtbb+0x60>
            ptr += bufferSizeInBytes; // Move past used buffer (framebuffer)
 8000846:	eb08 0100 	add.w	r1, r8, r0
            double_buf = (void*)ptr;
 800084a:	460a      	mov	r2, r1
        if (useAnimationStorage)
 800084c:	b1ad      	cbz	r5, 800087a <_ZN8touchgfx3HAL26setFrameBufferStartAddressEPvtbb+0x66>
            ptr += bufferSizeInBytes; // Move past used buffer (framebuffer and possibly double buffer)
 800084e:	180b      	adds	r3, r1, r0
 8000850:	3c01      	subs	r4, #1
 8000852:	b2a4      	uxth	r4, r4
 8000854:	2c1f      	cmp	r4, #31
 8000856:	d812      	bhi.n	800087e <_ZN8touchgfx3HAL26setFrameBufferStartAddressEPvtbb+0x6a>
 8000858:	2101      	movs	r1, #1
 800085a:	fa01 f404 	lsl.w	r4, r1, r4
 800085e:	490d      	ldr	r1, [pc, #52]	; (8000894 <_ZN8touchgfx3HAL26setFrameBufferStartAddressEPvtbb+0x80>)
 8000860:	4021      	ands	r1, r4
 8000862:	b161      	cbz	r1, 800087e <_ZN8touchgfx3HAL26setFrameBufferStartAddressEPvtbb+0x6a>
            setFrameBufferStartAddresses(adr, double_buf, anim_store);
 8000864:	6839      	ldr	r1, [r7, #0]
 8000866:	6f4c      	ldr	r4, [r1, #116]	; 0x74
 8000868:	4638      	mov	r0, r7
 800086a:	4641      	mov	r1, r8
 800086c:	46a4      	mov	ip, r4
    }
 800086e:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
            setFrameBufferStartAddresses(adr, double_buf, anim_store);
 8000872:	4760      	bx	ip
        uint8_t* ptr = (uint8_t*)adr;
 8000874:	4641      	mov	r1, r8
        void* double_buf = 0;
 8000876:	464a      	mov	r2, r9
 8000878:	e7e8      	b.n	800084c <_ZN8touchgfx3HAL26setFrameBufferStartAddressEPvtbb+0x38>
        void* anim_store = 0;
 800087a:	462b      	mov	r3, r5
 800087c:	e7e8      	b.n	8000850 <_ZN8touchgfx3HAL26setFrameBufferStartAddressEPvtbb+0x3c>
            assert(0 && "Unsupported bit depth");
 800087e:	4b06      	ldr	r3, [pc, #24]	; (8000898 <_ZN8touchgfx3HAL26setFrameBufferStartAddressEPvtbb+0x84>)
 8000880:	4a06      	ldr	r2, [pc, #24]	; (800089c <_ZN8touchgfx3HAL26setFrameBufferStartAddressEPvtbb+0x88>)
 8000882:	4807      	ldr	r0, [pc, #28]	; (80008a0 <_ZN8touchgfx3HAL26setFrameBufferStartAddressEPvtbb+0x8c>)
 8000884:	f240 2189 	movw	r1, #649	; 0x289
 8000888:	f018 f9b0 	bl	8018bec <__assert_func>
 800088c:	2001218c 	.word	0x2001218c
 8000890:	20012188 	.word	0x20012188
 8000894:	8080808b 	.word	0x8080808b
 8000898:	08019c70 	.word	0x08019c70
 800089c:	08019dc4 	.word	0x08019dc4
 80008a0:	08019cc5 	.word	0x08019cc5

080008a4 <_ZN11TouchGFXHAL16flushFrameBufferEv>:
     * Rect version.
     * @see HAL::flushFrameBuffer
     */
    virtual void flushFrameBuffer()
    {
        HAL::flushFrameBuffer();
 80008a4:	f008 baf5 	b.w	8008e92 <_ZN8touchgfx3HAL16flushFrameBufferEv>

080008a8 <_ZN11TouchGFXHALD0Ev>:
 80008a8:	b510      	push	{r4, lr}
 80008aa:	2178      	movs	r1, #120	; 0x78
 80008ac:	4604      	mov	r4, r0
 80008ae:	f018 f971 	bl	8018b94 <_ZdlPvj>
 80008b2:	4620      	mov	r0, r4
 80008b4:	bd10      	pop	{r4, pc}

080008b6 <_ZN8touchgfx3HAL11getBlitCapsEv>:
        if (useDMAAcceleration)
 80008b6:	f890 3077 	ldrb.w	r3, [r0, #119]	; 0x77
 80008ba:	b11b      	cbz	r3, 80008c4 <_ZN8touchgfx3HAL11getBlitCapsEv+0xe>
            return dma.getBlitCaps();
 80008bc:	6840      	ldr	r0, [r0, #4]
 80008be:	6803      	ldr	r3, [r0, #0]
 80008c0:	681b      	ldr	r3, [r3, #0]
 80008c2:	4718      	bx	r3
    }
 80008c4:	4618      	mov	r0, r3
 80008c6:	4770      	bx	lr

080008c8 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv>:

    /** Called by the touch driver to indicate that no touch is currently detected. */
    virtual void noTouch();

    /** Perform the actual display orientation change. */
    virtual void performDisplayOrientationChange()
 80008c8:	b530      	push	{r4, r5, lr}
    {
        if (requestedOrientation != nativeDisplayOrientation)
 80008ca:	f890 1034 	ldrb.w	r1, [r0, #52]	; 0x34
 80008ce:	f890 4074 	ldrb.w	r4, [r0, #116]	; 0x74
 80008d2:	4b10      	ldr	r3, [pc, #64]	; (8000914 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x4c>)
 80008d4:	428c      	cmp	r4, r1
 80008d6:	781a      	ldrb	r2, [r3, #0]
 80008d8:	d00d      	beq.n	80008f6 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x2e>
        {
            if (DISPLAY_ROTATION == rotate0)
 80008da:	b95a      	cbnz	r2, 80008f4 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x2c>
            {
                FRAME_BUFFER_WIDTH = DISPLAY_WIDTH;
 80008dc:	4a0e      	ldr	r2, [pc, #56]	; (8000918 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x50>)
 80008de:	490f      	ldr	r1, [pc, #60]	; (800091c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x54>)
                FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT;
 80008e0:	480f      	ldr	r0, [pc, #60]	; (8000920 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x58>)
                FRAME_BUFFER_WIDTH = DISPLAY_WIDTH;
 80008e2:	8814      	ldrh	r4, [r2, #0]
                FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT;
 80008e4:	4d0f      	ldr	r5, [pc, #60]	; (8000924 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x5c>)
                FRAME_BUFFER_WIDTH = DISPLAY_WIDTH;
 80008e6:	800c      	strh	r4, [r1, #0]
                FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT;
 80008e8:	8801      	ldrh	r1, [r0, #0]
                DISPLAY_HEIGHT = FRAME_BUFFER_WIDTH;
                DISPLAY_WIDTH = FRAME_BUFFER_HEIGHT;
 80008ea:	8011      	strh	r1, [r2, #0]
                FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT;
 80008ec:	8029      	strh	r1, [r5, #0]
                DISPLAY_HEIGHT = FRAME_BUFFER_WIDTH;
 80008ee:	8004      	strh	r4, [r0, #0]
                DISPLAY_ROTATION = rotate90;
 80008f0:	2201      	movs	r2, #1
        {
            FRAME_BUFFER_WIDTH = DISPLAY_HEIGHT;
            FRAME_BUFFER_HEIGHT = DISPLAY_WIDTH;
            DISPLAY_HEIGHT = FRAME_BUFFER_HEIGHT;
            DISPLAY_WIDTH = FRAME_BUFFER_WIDTH;
            DISPLAY_ROTATION = rotate0;
 80008f2:	701a      	strb	r2, [r3, #0]
        }
    }
 80008f4:	bd30      	pop	{r4, r5, pc}
        else if (DISPLAY_ROTATION != rotate0)
 80008f6:	2a00      	cmp	r2, #0
 80008f8:	d0fc      	beq.n	80008f4 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x2c>
            FRAME_BUFFER_WIDTH = DISPLAY_HEIGHT;
 80008fa:	4809      	ldr	r0, [pc, #36]	; (8000920 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x58>)
 80008fc:	4a07      	ldr	r2, [pc, #28]	; (800091c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x54>)
 80008fe:	8801      	ldrh	r1, [r0, #0]
 8000900:	8011      	strh	r1, [r2, #0]
            FRAME_BUFFER_HEIGHT = DISPLAY_WIDTH;
 8000902:	4a05      	ldr	r2, [pc, #20]	; (8000918 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x50>)
 8000904:	4d07      	ldr	r5, [pc, #28]	; (8000924 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x5c>)
 8000906:	8814      	ldrh	r4, [r2, #0]
 8000908:	802c      	strh	r4, [r5, #0]
            DISPLAY_WIDTH = FRAME_BUFFER_WIDTH;
 800090a:	8011      	strh	r1, [r2, #0]
            DISPLAY_HEIGHT = FRAME_BUFFER_HEIGHT;
 800090c:	8004      	strh	r4, [r0, #0]
            DISPLAY_ROTATION = rotate0;
 800090e:	2200      	movs	r2, #0
 8000910:	e7ef      	b.n	80008f2 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x2a>
 8000912:	bf00      	nop
 8000914:	20012184 	.word	0x20012184
 8000918:	20012180 	.word	0x20012180
 800091c:	20012186 	.word	0x20012186
 8000920:	20012182 	.word	0x20012182
 8000924:	20012188 	.word	0x20012188

08000928 <_ZN11TouchGFXHAL10initializeEv>:
    TouchGFXGeneratedHAL::initialize();
 8000928:	f000 bc2a 	b.w	8001180 <_ZN20TouchGFXGeneratedHAL10initializeEv>

0800092c <_ZN8touchgfx10OSWrappers10initializeEv>:
 * Initialize frame buffer semaphore and queue/mutex for VSYNC signal.
 */
void OSWrappers::initialize()
{
    // Create a queue of length 1
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 800092c:	2101      	movs	r1, #1
{
 800092e:	b508      	push	{r3, lr}
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 8000930:	2200      	movs	r2, #0
 8000932:	4608      	mov	r0, r1
 8000934:	f005 fc90 	bl	8006258 <osSemaphoreNew>
 8000938:	4b06      	ldr	r3, [pc, #24]	; (8000954 <_ZN8touchgfx10OSWrappers10initializeEv+0x28>)
    osSemaphoreAcquire(frame_buffer_sem, osWaitForever); // take the lock
 800093a:	f04f 31ff 	mov.w	r1, #4294967295
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 800093e:	6018      	str	r0, [r3, #0]
    osSemaphoreAcquire(frame_buffer_sem, osWaitForever); // take the lock
 8000940:	f005 fce0 	bl	8006304 <osSemaphoreAcquire>

    // Create a queue of length 1
    vsync_queue = osMessageQueueNew(1, 4, NULL);
 8000944:	2200      	movs	r2, #0
 8000946:	2104      	movs	r1, #4
 8000948:	2001      	movs	r0, #1
 800094a:	f005 fd4f 	bl	80063ec <osMessageQueueNew>
 800094e:	4b02      	ldr	r3, [pc, #8]	; (8000958 <_ZN8touchgfx10OSWrappers10initializeEv+0x2c>)
 8000950:	6018      	str	r0, [r3, #0]
}
 8000952:	bd08      	pop	{r3, pc}
 8000954:	20000190 	.word	0x20000190
 8000958:	2000018c 	.word	0x2000018c

0800095c <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>:

/*
 * Take the frame buffer semaphore. Blocks until semaphore is available.
 */
void OSWrappers::takeFrameBufferSemaphore()
{
 800095c:	b508      	push	{r3, lr}
    assert(frame_buffer_sem);
 800095e:	4b07      	ldr	r3, [pc, #28]	; (800097c <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0x20>)
 8000960:	6818      	ldr	r0, [r3, #0]
 8000962:	b928      	cbnz	r0, 8000970 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0x14>
 8000964:	4b06      	ldr	r3, [pc, #24]	; (8000980 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0x24>)
 8000966:	4a07      	ldr	r2, [pc, #28]	; (8000984 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0x28>)
 8000968:	4807      	ldr	r0, [pc, #28]	; (8000988 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0x2c>)
 800096a:	2131      	movs	r1, #49	; 0x31
 800096c:	f018 f93e 	bl	8018bec <__assert_func>
    osSemaphoreAcquire(frame_buffer_sem, osWaitForever);
 8000970:	f04f 31ff 	mov.w	r1, #4294967295
}
 8000974:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    osSemaphoreAcquire(frame_buffer_sem, osWaitForever);
 8000978:	f005 bcc4 	b.w	8006304 <osSemaphoreAcquire>
 800097c:	20000190 	.word	0x20000190
 8000980:	08019e66 	.word	0x08019e66
 8000984:	08019f02 	.word	0x08019f02
 8000988:	08019e77 	.word	0x08019e77

0800098c <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>:

/*
 * Release the frame buffer semaphore.
 */
void OSWrappers::giveFrameBufferSemaphore()
{
 800098c:	b508      	push	{r3, lr}
    assert(frame_buffer_sem);
 800098e:	4b06      	ldr	r3, [pc, #24]	; (80009a8 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv+0x1c>)
 8000990:	6818      	ldr	r0, [r3, #0]
 8000992:	b928      	cbnz	r0, 80009a0 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv+0x14>
 8000994:	4b05      	ldr	r3, [pc, #20]	; (80009ac <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv+0x20>)
 8000996:	4a06      	ldr	r2, [pc, #24]	; (80009b0 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv+0x24>)
 8000998:	4806      	ldr	r0, [pc, #24]	; (80009b4 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv+0x28>)
 800099a:	213a      	movs	r1, #58	; 0x3a
 800099c:	f018 f926 	bl	8018bec <__assert_func>
    osSemaphoreRelease(frame_buffer_sem);
}
 80009a0:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    osSemaphoreRelease(frame_buffer_sem);
 80009a4:	f005 bcea 	b.w	800637c <osSemaphoreRelease>
 80009a8:	20000190 	.word	0x20000190
 80009ac:	08019e66 	.word	0x08019e66
 80009b0:	08019ec5 	.word	0x08019ec5
 80009b4:	08019e77 	.word	0x08019e77

080009b8 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>:
 *
 * Note must return immediately! This function does not care who has the taken the semaphore,
 * it only serves to make sure that the semaphore is taken by someone.
 */
void OSWrappers::tryTakeFrameBufferSemaphore()
{
 80009b8:	b508      	push	{r3, lr}
    assert(frame_buffer_sem);
 80009ba:	4b07      	ldr	r3, [pc, #28]	; (80009d8 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv+0x20>)
 80009bc:	6818      	ldr	r0, [r3, #0]
 80009be:	b928      	cbnz	r0, 80009cc <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv+0x14>
 80009c0:	4b06      	ldr	r3, [pc, #24]	; (80009dc <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv+0x24>)
 80009c2:	4a07      	ldr	r2, [pc, #28]	; (80009e0 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv+0x28>)
 80009c4:	4807      	ldr	r0, [pc, #28]	; (80009e4 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv+0x2c>)
 80009c6:	2147      	movs	r1, #71	; 0x47
 80009c8:	f018 f910 	bl	8018bec <__assert_func>
    osSemaphoreAcquire(frame_buffer_sem, 0);
 80009cc:	2100      	movs	r1, #0
}
 80009ce:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    osSemaphoreAcquire(frame_buffer_sem, 0);
 80009d2:	f005 bc97 	b.w	8006304 <osSemaphoreAcquire>
 80009d6:	bf00      	nop
 80009d8:	20000190 	.word	0x20000190
 80009dc:	08019e66 	.word	0x08019e66
 80009e0:	08019f3f 	.word	0x08019f3f
 80009e4:	08019e77 	.word	0x08019e77

080009e8 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>:
 *
 * Release the frame buffer semaphore in a way that is safe in interrupt context.
 * Called from ISR.
 */
void OSWrappers::giveFrameBufferSemaphoreFromISR()
{
 80009e8:	b508      	push	{r3, lr}
    assert(frame_buffer_sem);
 80009ea:	4b06      	ldr	r3, [pc, #24]	; (8000a04 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv+0x1c>)
 80009ec:	6818      	ldr	r0, [r3, #0]
 80009ee:	b928      	cbnz	r0, 80009fc <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv+0x14>
 80009f0:	4b05      	ldr	r3, [pc, #20]	; (8000a08 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv+0x20>)
 80009f2:	4a06      	ldr	r2, [pc, #24]	; (8000a0c <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv+0x24>)
 80009f4:	4806      	ldr	r0, [pc, #24]	; (8000a10 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv+0x28>)
 80009f6:	2154      	movs	r1, #84	; 0x54
 80009f8:	f018 f8f8 	bl	8018bec <__assert_func>
    osSemaphoreRelease(frame_buffer_sem);
}
 80009fc:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    osSemaphoreRelease(frame_buffer_sem);
 8000a00:	f005 bcbc 	b.w	800637c <osSemaphoreRelease>
 8000a04:	20000190 	.word	0x20000190
 8000a08:	08019e66 	.word	0x08019e66
 8000a0c:	08019f7f 	.word	0x08019f7f
 8000a10:	08019e77 	.word	0x08019e77

08000a14 <_ZN8touchgfx10OSWrappers11signalVSyncEv>:
 * Note This function is called from an ISR, and should (depending on OS) trigger a
 * scheduling.
 */
void OSWrappers::signalVSync()
{
    if (vsync_queue)
 8000a14:	4b04      	ldr	r3, [pc, #16]	; (8000a28 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x14>)
 8000a16:	6818      	ldr	r0, [r3, #0]
 8000a18:	b120      	cbz	r0, 8000a24 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x10>
    {
        osMessageQueuePut(vsync_queue, &dummy, 0, 0);
 8000a1a:	2300      	movs	r3, #0
 8000a1c:	461a      	mov	r2, r3
 8000a1e:	4903      	ldr	r1, [pc, #12]	; (8000a2c <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x18>)
 8000a20:	f005 bd2a 	b.w	8006478 <osMessageQueuePut>
    }
}
 8000a24:	4770      	bx	lr
 8000a26:	bf00      	nop
 8000a28:	2000018c 	.word	0x2000018c
 8000a2c:	20000004 	.word	0x20000004

08000a30 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>:
 *
 * Note This function must first clear the mutex/queue and then wait for the next one to
 * occur.
 */
void OSWrappers::waitForVSync()
{
 8000a30:	b513      	push	{r0, r1, r4, lr}
    if (vsync_queue)
 8000a32:	4c08      	ldr	r4, [pc, #32]	; (8000a54 <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x24>)
 8000a34:	6820      	ldr	r0, [r4, #0]
 8000a36:	b158      	cbz	r0, 8000a50 <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x20>
    {
        uint32_t dummyGet;
        // First make sure the queue is empty, by trying to remove an element with 0 timeout.
        osMessageQueueGet(vsync_queue, &dummyGet, 0, 0);
 8000a38:	2300      	movs	r3, #0
 8000a3a:	461a      	mov	r2, r3
 8000a3c:	a901      	add	r1, sp, #4
 8000a3e:	f005 fd5d 	bl	80064fc <osMessageQueueGet>

        // Then, wait for next VSYNC to occur.
        osMessageQueueGet(vsync_queue, &dummyGet, 0, osWaitForever);
 8000a42:	f04f 33ff 	mov.w	r3, #4294967295
 8000a46:	2200      	movs	r2, #0
 8000a48:	a901      	add	r1, sp, #4
 8000a4a:	6820      	ldr	r0, [r4, #0]
 8000a4c:	f005 fd56 	bl	80064fc <osMessageQueueGet>
    }
}
 8000a50:	b002      	add	sp, #8
 8000a52:	bd10      	pop	{r4, pc}
 8000a54:	2000018c 	.word	0x2000018c

08000a58 <_ZN8touchgfx13DMA_Interface5flushEv>:
    virtual void addToQueue(const BlitOp& op);

    /** This function blocks until all DMA transfers in the queue have been completed. */
    virtual void flush()
    {
        waitForFrameBufferSemaphore();
 8000a58:	6803      	ldr	r3, [r0, #0]
 8000a5a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8000a5c:	4718      	bx	r3

08000a5e <_ZN8touchgfx13DMA_Interface10getDMATypeEv>:
     * @return a DMAType value of the concrete DMA_Interface implementation.
     */
    virtual DMAType getDMAType(void)
    {
        return DMA_TYPE_GENERIC;
    }
 8000a5e:	2000      	movs	r0, #0
 8000a60:	4770      	bx	lr

08000a62 <_ZN10STM32F4DMA18signalDMAInterruptEv>:
     *
     *        Raises a DMA interrupt signal.
     */
    virtual void signalDMAInterrupt()
    {
        executeCompleted();
 8000a62:	6803      	ldr	r3, [r0, #0]
 8000a64:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8000a66:	4718      	bx	r3

08000a68 <_ZN10STM32F4DMA11getBlitCapsEv>:
                                       | BLIT_OP_COPY_WITH_ALPHA
                                       | BLIT_OP_COPY_ARGB8888
                                       | BLIT_OP_COPY_ARGB8888_WITH_ALPHA
                                       | BLIT_OP_COPY_A4
                                       | BLIT_OP_COPY_A8);
}
 8000a68:	f240 10ef 	movw	r0, #495	; 0x1ef
 8000a6c:	4770      	bx	lr
	...

08000a70 <_ZN10STM32F4DMA10initializeEv>:
{
 8000a70:	b510      	push	{r4, lr}
    hdma2d.Instance = DMA2D;
 8000a72:	4c07      	ldr	r4, [pc, #28]	; (8000a90 <_ZN10STM32F4DMA10initializeEv+0x20>)
 8000a74:	4b07      	ldr	r3, [pc, #28]	; (8000a94 <_ZN10STM32F4DMA10initializeEv+0x24>)
 8000a76:	6023      	str	r3, [r4, #0]
    HAL_DMA2D_Init(&hdma2d);
 8000a78:	4620      	mov	r0, r4
 8000a7a:	f002 fec5 	bl	8003808 <HAL_DMA2D_Init>
    hdma2d.XferCpltCallback = DMA2D_XferCpltCallback;
 8000a7e:	4b06      	ldr	r3, [pc, #24]	; (8000a98 <_ZN10STM32F4DMA10initializeEv+0x28>)
 8000a80:	6123      	str	r3, [r4, #16]
    hdma2d.XferErrorCallback = DMA2D_XferErrorCallback;
 8000a82:	4b06      	ldr	r3, [pc, #24]	; (8000a9c <_ZN10STM32F4DMA10initializeEv+0x2c>)
 8000a84:	6163      	str	r3, [r4, #20]
 */
__STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8000a86:	4b06      	ldr	r3, [pc, #24]	; (8000aa0 <_ZN10STM32F4DMA10initializeEv+0x30>)
 8000a88:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 8000a8c:	609a      	str	r2, [r3, #8]
}
 8000a8e:	bd10      	pop	{r4, pc}
 8000a90:	200127e8 	.word	0x200127e8
 8000a94:	4002b000 	.word	0x4002b000
 8000a98:	08000ac1 	.word	0x08000ac1
 8000a9c:	08000aa5 	.word	0x08000aa5
 8000aa0:	e000e100 	.word	0xe000e100

08000aa4 <DMA2D_XferErrorCallback>:
    {
 8000aa4:	b508      	push	{r3, lr}
        assert(0);
 8000aa6:	4a03      	ldr	r2, [pc, #12]	; (8000ab4 <DMA2D_XferErrorCallback+0x10>)
 8000aa8:	4b03      	ldr	r3, [pc, #12]	; (8000ab8 <DMA2D_XferErrorCallback+0x14>)
 8000aaa:	4804      	ldr	r0, [pc, #16]	; (8000abc <DMA2D_XferErrorCallback+0x18>)
 8000aac:	2136      	movs	r1, #54	; 0x36
 8000aae:	f018 f89d 	bl	8018bec <__assert_func>
 8000ab2:	bf00      	nop
 8000ab4:	0801a060 	.word	0x0801a060
 8000ab8:	0801a633 	.word	0x0801a633
 8000abc:	08019fc3 	.word	0x08019fc3

08000ac0 <DMA2D_XferCpltCallback>:
        touchgfx::HAL::getInstance()->signalDMAInterrupt();
 8000ac0:	4b02      	ldr	r3, [pc, #8]	; (8000acc <DMA2D_XferCpltCallback+0xc>)
 8000ac2:	681b      	ldr	r3, [r3, #0]
 8000ac4:	6858      	ldr	r0, [r3, #4]
        dma.signalDMAInterrupt();
 8000ac6:	6803      	ldr	r3, [r0, #0]
 8000ac8:	695b      	ldr	r3, [r3, #20]
 8000aca:	4718      	bx	r3
 8000acc:	2001218c 	.word	0x2001218c

08000ad0 <_ZN10STM32F4DMAD1Ev>:
STM32F4DMA::~STM32F4DMA()
 8000ad0:	4b08      	ldr	r3, [pc, #32]	; (8000af4 <_ZN10STM32F4DMAD1Ev+0x24>)
 8000ad2:	b510      	push	{r4, lr}
 8000ad4:	6003      	str	r3, [r0, #0]
 8000ad6:	4604      	mov	r4, r0
    HAL_DMA2D_DeInit(&hdma2d);
 8000ad8:	4807      	ldr	r0, [pc, #28]	; (8000af8 <_ZN10STM32F4DMAD1Ev+0x28>)
 8000ada:	f002 ff5d 	bl	8003998 <HAL_DMA2D_DeInit>
 */
__STATIC_INLINE void __NVIC_DisableIRQ(IRQn_Type IRQn)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8000ade:	4b07      	ldr	r3, [pc, #28]	; (8000afc <_ZN10STM32F4DMAD1Ev+0x2c>)
 8000ae0:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 8000ae4:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  \details Acts as a special kind of Data Memory Barrier.
           It completes when all explicit memory accesses before this instruction complete.
 */
__STATIC_FORCEINLINE void __DSB(void)
{
  __ASM volatile ("dsb 0xF":::"memory");
 8000ae8:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 8000aec:	f3bf 8f6f 	isb	sy
}
 8000af0:	4620      	mov	r0, r4
 8000af2:	bd10      	pop	{r4, pc}
 8000af4:	0801a018 	.word	0x0801a018
 8000af8:	200127e8 	.word	0x200127e8
 8000afc:	e000e100 	.word	0xe000e100

08000b00 <_ZN10STM32F4DMAD0Ev>:
STM32F4DMA::~STM32F4DMA()
 8000b00:	b510      	push	{r4, lr}
 8000b02:	4604      	mov	r4, r0
}
 8000b04:	f7ff ffe4 	bl	8000ad0 <_ZN10STM32F4DMAD1Ev>
 8000b08:	4620      	mov	r0, r4
 8000b0a:	f44f 6142 	mov.w	r1, #3104	; 0xc20
 8000b0e:	f018 f841 	bl	8018b94 <_ZdlPvj>
 8000b12:	4620      	mov	r0, r4
 8000b14:	bd10      	pop	{r4, pc}
	...

08000b18 <_ZN8touchgfx3HAL3lcdEv>:
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 8000b18:	4b04      	ldr	r3, [pc, #16]	; (8000b2c <_ZN8touchgfx3HAL3lcdEv+0x14>)
 8000b1a:	681b      	ldr	r3, [r3, #0]
 8000b1c:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 8000b20:	b10a      	cbz	r2, 8000b26 <_ZN8touchgfx3HAL3lcdEv+0xe>
 8000b22:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8000b24:	b900      	cbnz	r0, 8000b28 <_ZN8touchgfx3HAL3lcdEv+0x10>
            return instance->lcdRef;
 8000b26:	6898      	ldr	r0, [r3, #8]
    }
 8000b28:	4770      	bx	lr
 8000b2a:	bf00      	nop
 8000b2c:	2001218c 	.word	0x2001218c

08000b30 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE>:

void STM32F4DMA::setupDataCopy(const BlitOp& blitOp)
{
 8000b30:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
    uint32_t dma2dTransferMode = DMA2D_M2M_BLEND;
    uint32_t dma2dColorMode = 0;

    bool blendingImage = (blitOp.operation == BLIT_OP_COPY_ARGB8888
 8000b34:	680d      	ldr	r5, [r1, #0]
                          || blitOp.operation == BLIT_OP_COPY_ARGB8888_WITH_ALPHA
                          || blitOp.operation == BLIT_OP_COPY_WITH_ALPHA);
 8000b36:	2d20      	cmp	r5, #32
{
 8000b38:	460c      	mov	r4, r1
                          || blitOp.operation == BLIT_OP_COPY_WITH_ALPHA);
 8000b3a:	f000 8097 	beq.w	8000c6c <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x13c>
                          || blitOp.operation == BLIT_OP_COPY_ARGB8888_WITH_ALPHA
 8000b3e:	2d40      	cmp	r5, #64	; 0x40
 8000b40:	f000 8094 	beq.w	8000c6c <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x13c>
                          || blitOp.operation == BLIT_OP_COPY_WITH_ALPHA);
 8000b44:	1f2a      	subs	r2, r5, #4
 8000b46:	4256      	negs	r6, r2
 8000b48:	4156      	adcs	r6, r2

    bool blendingText = (blitOp.operation == BLIT_OP_COPY_A4
                         || blitOp.operation == BLIT_OP_COPY_A8);
 8000b4a:	2d80      	cmp	r5, #128	; 0x80
 8000b4c:	f000 8090 	beq.w	8000c70 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x140>
 8000b50:	f5a5 7380 	sub.w	r3, r5, #256	; 0x100
 8000b54:	425d      	negs	r5, r3
 8000b56:	415d      	adcs	r5, r3

    uint8_t bitDepth = HAL::lcd().bitDepth();
 8000b58:	f7ff ffde 	bl	8000b18 <_ZN8touchgfx3HAL3lcdEv>
 8000b5c:	6803      	ldr	r3, [r0, #0]
 8000b5e:	69db      	ldr	r3, [r3, #28]
 8000b60:	4798      	blx	r3

    switch (blitOp.operation)
 8000b62:	6823      	ldr	r3, [r4, #0]
 8000b64:	2b40      	cmp	r3, #64	; 0x40
    uint8_t bitDepth = HAL::lcd().bitDepth();
 8000b66:	4686      	mov	lr, r0
    switch (blitOp.operation)
 8000b68:	f000 8099 	beq.w	8000c9e <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x16e>
 8000b6c:	f200 8082 	bhi.w	8000c74 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x144>
 8000b70:	2b04      	cmp	r3, #4
 8000b72:	f000 808d 	beq.w	8000c90 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x160>
 8000b76:	2b20      	cmp	r3, #32
 8000b78:	f000 8091 	beq.w	8000c9e <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x16e>
    case BLIT_OP_COPY_ARGB8888_WITH_ALPHA:
        dma2dColorMode = CM_ARGB8888;
        break;
    default:
        dma2dTransferMode = DMA2D_M2M;
        dma2dColorMode = (bitDepth == 16) ? CM_RGB565 : CM_RGB888;
 8000b7c:	f1be 0f10 	cmp.w	lr, #16
 8000b80:	bf14      	ite	ne
 8000b82:	f04f 0c01 	movne.w	ip, #1
 8000b86:	f04f 0c02 	moveq.w	ip, #2
 8000b8a:	2200      	movs	r2, #0
        break;
    }

    /* HAL_DMA2D_ConfigLayer() depends on hdma2d.Init */
    hdma2d.Init.Mode = dma2dTransferMode;
 8000b8c:	4b4b      	ldr	r3, [pc, #300]	; (8000cbc <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x18c>)
    hdma2d.Init.ColorMode = (bitDepth == 16) ? DMA2D_RGB565 : DMA2D_RGB888;
    hdma2d.Init.OutputOffset = blitOp.dstLoopStride - blitOp.nSteps;
 8000b8e:	f8b4 8010 	ldrh.w	r8, [r4, #16]
    MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, mode);
 8000b92:	6819      	ldr	r1, [r3, #0]
    hdma2d.Init.OutputOffset = blitOp.dstLoopStride - blitOp.nSteps;
 8000b94:	8ae7      	ldrh	r7, [r4, #22]
    MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, mode);
 8000b96:	f8d1 9000 	ldr.w	r9, [r1]
    hdma2d.Init.Mode = dma2dTransferMode;
 8000b9a:	605a      	str	r2, [r3, #4]
    hdma2d.Init.ColorMode = (bitDepth == 16) ? DMA2D_RGB565 : DMA2D_RGB888;
 8000b9c:	f1be 0f10 	cmp.w	lr, #16
    MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, mode);
 8000ba0:	f429 3940 	bic.w	r9, r9, #196608	; 0x30000
    hdma2d.Init.ColorMode = (bitDepth == 16) ? DMA2D_RGB565 : DMA2D_RGB888;
 8000ba4:	bf14      	ite	ne
 8000ba6:	2001      	movne	r0, #1
 8000ba8:	2002      	moveq	r0, #2
    hdma2d.Init.OutputOffset = blitOp.dstLoopStride - blitOp.nSteps;
 8000baa:	eba7 0708 	sub.w	r7, r7, r8
    MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, mode);
 8000bae:	ea49 0202 	orr.w	r2, r9, r2
    hdma2d.Init.ColorMode = (bitDepth == 16) ? DMA2D_RGB565 : DMA2D_RGB888;
 8000bb2:	6098      	str	r0, [r3, #8]
    hdma2d.Init.OutputOffset = blitOp.dstLoopStride - blitOp.nSteps;
 8000bb4:	60df      	str	r7, [r3, #12]
    MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, mode);
 8000bb6:	600a      	str	r2, [r1, #0]
    MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM, color);
 8000bb8:	6b4a      	ldr	r2, [r1, #52]	; 0x34

    HAL_DMA2D_SetMode(&hdma2d, dma2dTransferMode,
                      (bitDepth == 16) ? DMA2D_RGB565 : DMA2D_RGB888,
                      blitOp.dstLoopStride - blitOp.nSteps);

    hdma2d.LayerCfg[1].InputColorMode = dma2dColorMode;
 8000bba:	f8c3 c02c 	str.w	ip, [r3, #44]	; 0x2c
    MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM, color);
 8000bbe:	f022 0207 	bic.w	r2, r2, #7
 8000bc2:	4302      	orrs	r2, r0
 8000bc4:	634a      	str	r2, [r1, #52]	; 0x34
    MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, offset);
 8000bc6:	6c0a      	ldr	r2, [r1, #64]	; 0x40
 8000bc8:	f422 527f 	bic.w	r2, r2, #16320	; 0x3fc0
 8000bcc:	f022 023f 	bic.w	r2, r2, #63	; 0x3f
 8000bd0:	433a      	orrs	r2, r7
 8000bd2:	640a      	str	r2, [r1, #64]	; 0x40
    hdma2d.LayerCfg[1].InputOffset = blitOp.srcLoopStride - blitOp.nSteps;
 8000bd4:	8aa2      	ldrh	r2, [r4, #20]
 8000bd6:	eba2 0208 	sub.w	r2, r2, r8
 8000bda:	629a      	str	r2, [r3, #40]	; 0x28

    if (blendingImage || blendingText)
 8000bdc:	b906      	cbnz	r6, 8000be0 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xb0>
 8000bde:	b395      	cbz	r5, 8000c46 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x116>
    {
        if (blitOp.alpha < 255)
 8000be0:	7f22      	ldrb	r2, [r4, #28]
 8000be2:	2aff      	cmp	r2, #255	; 0xff
        {
            hdma2d.LayerCfg[1].AlphaMode = DMA2D_COMBINE_ALPHA;
 8000be4:	bf15      	itete	ne
 8000be6:	2102      	movne	r1, #2
            hdma2d.LayerCfg[1].InputAlpha = blitOp.alpha;
        }
        else
        {
            hdma2d.LayerCfg[1].AlphaMode = DMA2D_NO_MODIF_ALPHA;
 8000be8:	2200      	moveq	r2, #0
            hdma2d.LayerCfg[1].InputAlpha = blitOp.alpha;
 8000bea:	e9c3 120c 	strdne	r1, r2, [r3, #48]	; 0x30
            hdma2d.LayerCfg[1].AlphaMode = DMA2D_NO_MODIF_ALPHA;
 8000bee:	631a      	streq	r2, [r3, #48]	; 0x30
        }

        if (blendingText)
 8000bf0:	b31d      	cbz	r5, 8000c3a <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x10a>
 8000bf2:	7f22      	ldrb	r2, [r4, #28]
 8000bf4:	69a1      	ldr	r1, [r4, #24]
        {
            if (bitDepth == 16)
 8000bf6:	f1be 0f10 	cmp.w	lr, #16
 8000bfa:	ea4f 6c02 	mov.w	ip, r2, lsl #24
 8000bfe:	d151      	bne.n	8000ca4 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x174>
            {
                uint32_t red = (((blitOp.color & 0xF800) >> 11) * 255) / 31;
 8000c00:	f04f 081f 	mov.w	r8, #31
 8000c04:	f3c1 22c4 	ubfx	r2, r1, #11, #5
 8000c08:	ebc2 2202 	rsb	r2, r2, r2, lsl #8
 8000c0c:	fbb2 fef8 	udiv	lr, r2, r8
                uint32_t green = (((blitOp.color & 0x7E0) >> 5) * 255) / 63;
                uint32_t blue = (((blitOp.color & 0x1F)) * 255) / 31;
 8000c10:	ea01 0208 	and.w	r2, r1, r8
 8000c14:	ebc2 2202 	rsb	r2, r2, r2, lsl #8
 8000c18:	fbb2 f2f8 	udiv	r2, r2, r8
                uint32_t alpha = blitOp.alpha;
                hdma2d.LayerCfg[1].InputAlpha = (alpha << 24) | (red << 16) | (green << 8) | blue;
 8000c1c:	ea42 020c 	orr.w	r2, r2, ip
 8000c20:	ea42 420e 	orr.w	r2, r2, lr, lsl #16
                uint32_t green = (((blitOp.color & 0x7E0) >> 5) * 255) / 63;
 8000c24:	f3c1 1145 	ubfx	r1, r1, #5, #6
 8000c28:	ebc1 2101 	rsb	r1, r1, r1, lsl #8
 8000c2c:	f04f 0c3f 	mov.w	ip, #63	; 0x3f
 8000c30:	fbb1 f1fc 	udiv	r1, r1, ip
                hdma2d.LayerCfg[1].InputAlpha = (alpha << 24) | (red << 16) | (green << 8) | blue;
 8000c34:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 8000c38:	635a      	str	r2, [r3, #52]	; 0x34
                hdma2d.LayerCfg[1].InputAlpha = blitOp.color.getColor32() | (blitOp.alpha << 24);
            }
        }

        hdma2d.LayerCfg[0].InputOffset = blitOp.dstLoopStride - blitOp.nSteps;
        hdma2d.LayerCfg[0].InputColorMode = (bitDepth == 16) ? CM_RGB565 : CM_RGB888;
 8000c3a:	e9c3 7006 	strd	r7, r0, [r3, #24]

        HAL_DMA2D_ConfigLayer(&hdma2d, 0);
 8000c3e:	2100      	movs	r1, #0
 8000c40:	481e      	ldr	r0, [pc, #120]	; (8000cbc <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x18c>)
 8000c42:	f002 ff69 	bl	8003b18 <HAL_DMA2D_ConfigLayer>
    }

    HAL_DMA2D_ConfigLayer(&hdma2d, 1);
 8000c46:	2101      	movs	r1, #1
 8000c48:	481c      	ldr	r0, [pc, #112]	; (8000cbc <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x18c>)
 8000c4a:	f002 ff65 	bl	8003b18 <HAL_DMA2D_ConfigLayer>
 8000c4e:	8a23      	ldrh	r3, [r4, #16]
 8000c50:	8a62      	ldrh	r2, [r4, #18]

    if (blendingImage || blendingText)
 8000c52:	b906      	cbnz	r6, 8000c56 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x126>
 8000c54:	b355      	cbz	r5, 8000cac <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x17c>
    {
        HAL_DMA2D_BlendingStart_IT(&hdma2d,
 8000c56:	e9cd 3200 	strd	r3, r2, [sp]
 8000c5a:	68e3      	ldr	r3, [r4, #12]
 8000c5c:	6861      	ldr	r1, [r4, #4]
 8000c5e:	4817      	ldr	r0, [pc, #92]	; (8000cbc <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x18c>)
 8000c60:	461a      	mov	r2, r3
 8000c62:	f002 fe1b 	bl	800389c <HAL_DMA2D_BlendingStart_IT>
        HAL_DMA2D_Start_IT(&hdma2d,
                           (unsigned int)blitOp.pSrc,
                           (unsigned int)blitOp.pDst,
                           blitOp.nSteps, blitOp.nLoops);
    }
}
 8000c66:	b003      	add	sp, #12
 8000c68:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
                          || blitOp.operation == BLIT_OP_COPY_WITH_ALPHA);
 8000c6c:	2601      	movs	r6, #1
 8000c6e:	e76f      	b.n	8000b50 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x20>
                         || blitOp.operation == BLIT_OP_COPY_A8);
 8000c70:	2501      	movs	r5, #1
 8000c72:	e771      	b.n	8000b58 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x28>
    switch (blitOp.operation)
 8000c74:	2b80      	cmp	r3, #128	; 0x80
 8000c76:	d006      	beq.n	8000c86 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x156>
 8000c78:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8000c7c:	f47f af7e 	bne.w	8000b7c <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x4c>
        dma2dColorMode = CM_A8;
 8000c80:	f04f 0c09 	mov.w	ip, #9
 8000c84:	e001      	b.n	8000c8a <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x15a>
        dma2dColorMode = CM_A4;
 8000c86:	f04f 0c0a 	mov.w	ip, #10
    uint32_t dma2dTransferMode = DMA2D_M2M_BLEND;
 8000c8a:	f44f 3200 	mov.w	r2, #131072	; 0x20000
 8000c8e:	e77d      	b.n	8000b8c <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x5c>
        dma2dColorMode = (bitDepth == 16) ? CM_RGB565 : CM_RGB888;
 8000c90:	2810      	cmp	r0, #16
 8000c92:	bf14      	ite	ne
 8000c94:	f04f 0c01 	movne.w	ip, #1
 8000c98:	f04f 0c02 	moveq.w	ip, #2
 8000c9c:	e7f5      	b.n	8000c8a <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x15a>
        dma2dColorMode = CM_ARGB8888;
 8000c9e:	f04f 0c00 	mov.w	ip, #0
 8000ca2:	e7f2      	b.n	8000c8a <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x15a>
                hdma2d.LayerCfg[1].InputAlpha = blitOp.color.getColor32() | (blitOp.alpha << 24);
 8000ca4:	ea4c 0101 	orr.w	r1, ip, r1
 8000ca8:	6359      	str	r1, [r3, #52]	; 0x34
 8000caa:	e7c6      	b.n	8000c3a <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x10a>
        HAL_DMA2D_Start_IT(&hdma2d,
 8000cac:	9200      	str	r2, [sp, #0]
 8000cae:	6861      	ldr	r1, [r4, #4]
 8000cb0:	68e2      	ldr	r2, [r4, #12]
 8000cb2:	4802      	ldr	r0, [pc, #8]	; (8000cbc <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x18c>)
 8000cb4:	f002 fdd4 	bl	8003860 <HAL_DMA2D_Start_IT>
}
 8000cb8:	e7d5      	b.n	8000c66 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x136>
 8000cba:	bf00      	nop
 8000cbc:	200127e8 	.word	0x200127e8

08000cc0 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE>:

void STM32F4DMA::setupDataFill(const BlitOp& blitOp)
{
 8000cc0:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8000cc2:	460d      	mov	r5, r1
    uint8_t bitDepth = HAL::lcd().bitDepth();
 8000cc4:	f7ff ff28 	bl	8000b18 <_ZN8touchgfx3HAL3lcdEv>
 8000cc8:	6803      	ldr	r3, [r0, #0]
 8000cca:	69db      	ldr	r3, [r3, #28]
 8000ccc:	4798      	blx	r3
    uint32_t dma2dTransferMode;
    uint32_t dma2dColorMode = (bitDepth == 16) ? CM_RGB565 : CM_RGB888;
 8000cce:	2810      	cmp	r0, #16
 8000cd0:	69ab      	ldr	r3, [r5, #24]
 8000cd2:	7f29      	ldrb	r1, [r5, #28]
 8000cd4:	d166      	bne.n	8000da4 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0xe4>
    uint32_t color = 0;
    if (bitDepth == 16)
    {
        uint32_t red = (((blitOp.color & 0xF800) >> 11) * 255) / 31;
        uint32_t green = (((blitOp.color & 0x7E0) >> 5) * 255) / 63;
        uint32_t blue = (((blitOp.color & 0x1F)) * 255) / 31;
 8000cd6:	f003 021f 	and.w	r2, r3, #31
 8000cda:	ebc2 2202 	rsb	r2, r2, r2, lsl #8
 8000cde:	201f      	movs	r0, #31
 8000ce0:	fbb2 f4f0 	udiv	r4, r2, r0
        uint32_t red = (((blitOp.color & 0xF800) >> 11) * 255) / 31;
 8000ce4:	f3c3 22c4 	ubfx	r2, r3, #11, #5
        uint32_t alpha = blitOp.alpha;
        color = (alpha << 24) | (red << 16) | (green << 8) | blue;
 8000ce8:	ea44 6401 	orr.w	r4, r4, r1, lsl #24
        uint32_t red = (((blitOp.color & 0xF800) >> 11) * 255) / 31;
 8000cec:	ebc2 2202 	rsb	r2, r2, r2, lsl #8
        uint32_t green = (((blitOp.color & 0x7E0) >> 5) * 255) / 63;
 8000cf0:	f3c3 1345 	ubfx	r3, r3, #5, #6
        uint32_t red = (((blitOp.color & 0xF800) >> 11) * 255) / 31;
 8000cf4:	fbb2 f2f0 	udiv	r2, r2, r0
        color = (alpha << 24) | (red << 16) | (green << 8) | blue;
 8000cf8:	ea44 4402 	orr.w	r4, r4, r2, lsl #16
        uint32_t green = (((blitOp.color & 0x7E0) >> 5) * 255) / 63;
 8000cfc:	ebc3 2303 	rsb	r3, r3, r3, lsl #8
 8000d00:	223f      	movs	r2, #63	; 0x3f
    uint32_t dma2dColorMode = (bitDepth == 16) ? CM_RGB565 : CM_RGB888;
 8000d02:	2102      	movs	r1, #2
        uint32_t green = (((blitOp.color & 0x7E0) >> 5) * 255) / 63;
 8000d04:	fbb3 f3f2 	udiv	r3, r3, r2
        color = (alpha << 24) | (red << 16) | (green << 8) | blue;
 8000d08:	ea44 2403 	orr.w	r4, r4, r3, lsl #8
    else
    {
        color = (blitOp.alpha << 24) | blitOp.color.getColor32();
    }

    switch (blitOp.operation)
 8000d0c:	682b      	ldr	r3, [r5, #0]
        dma2dTransferMode = DMA2D_R2M;
        break;
    };

    /* HAL_DMA2D_ConfigLayer() depends on hdma2d.Init */
    hdma2d.Init.Mode = dma2dTransferMode;
 8000d0e:	4827      	ldr	r0, [pc, #156]	; (8000dac <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0xec>)
    hdma2d.Init.ColorMode = (bitDepth == 16) ? DMA2D_RGB565 : DMA2D_RGB888;
    hdma2d.Init.OutputOffset = blitOp.dstLoopStride - blitOp.nSteps;
 8000d10:	8aee      	ldrh	r6, [r5, #22]
    MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, mode);
 8000d12:	6802      	ldr	r2, [r0, #0]
    switch (blitOp.operation)
 8000d14:	2b08      	cmp	r3, #8
    hdma2d.Init.OutputOffset = blitOp.dstLoopStride - blitOp.nSteps;
 8000d16:	8a2b      	ldrh	r3, [r5, #16]
 8000d18:	eba6 0603 	sub.w	r6, r6, r3
    MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, mode);
 8000d1c:	6813      	ldr	r3, [r2, #0]
    hdma2d.Init.OutputOffset = blitOp.dstLoopStride - blitOp.nSteps;
 8000d1e:	60c6      	str	r6, [r0, #12]
        dma2dTransferMode = DMA2D_R2M;
 8000d20:	bf0c      	ite	eq
 8000d22:	f44f 3700 	moveq.w	r7, #131072	; 0x20000
 8000d26:	f44f 3740 	movne.w	r7, #196608	; 0x30000
    MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, mode);
 8000d2a:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 8000d2e:	433b      	orrs	r3, r7
    hdma2d.Init.ColorMode = (bitDepth == 16) ? DMA2D_RGB565 : DMA2D_RGB888;
 8000d30:	e9c0 7101 	strd	r7, r1, [r0, #4]
    MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, mode);
 8000d34:	6013      	str	r3, [r2, #0]
    MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM, color);
 8000d36:	6b53      	ldr	r3, [r2, #52]	; 0x34
 8000d38:	f023 0307 	bic.w	r3, r3, #7
 8000d3c:	430b      	orrs	r3, r1
 8000d3e:	6353      	str	r3, [r2, #52]	; 0x34
    MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, offset);
 8000d40:	6c13      	ldr	r3, [r2, #64]	; 0x40
 8000d42:	f423 537f 	bic.w	r3, r3, #16320	; 0x3fc0
 8000d46:	f023 033f 	bic.w	r3, r3, #63	; 0x3f
 8000d4a:	4333      	orrs	r3, r6

    HAL_DMA2D_SetMode(&hdma2d, dma2dTransferMode,
                      (bitDepth == 16) ? DMA2D_RGB565 : DMA2D_RGB888,
                      blitOp.dstLoopStride - blitOp.nSteps);

    if (dma2dTransferMode == DMA2D_M2M_BLEND)
 8000d4c:	f5b7 3f00 	cmp.w	r7, #131072	; 0x20000
    MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, offset);
 8000d50:	6413      	str	r3, [r2, #64]	; 0x40
    if (dma2dTransferMode == DMA2D_M2M_BLEND)
 8000d52:	d11c      	bne.n	8000d8e <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0xce>
    {
        hdma2d.LayerCfg[1].AlphaMode = DMA2D_REPLACE_ALPHA;
 8000d54:	2301      	movs	r3, #1
        hdma2d.LayerCfg[1].InputAlpha = color;
 8000d56:	e9c0 340c 	strd	r3, r4, [r0, #48]	; 0x30
        hdma2d.LayerCfg[1].InputColorMode = CM_A8;
 8000d5a:	2309      	movs	r3, #9
        hdma2d.LayerCfg[0].InputOffset = blitOp.dstLoopStride - blitOp.nSteps;
        hdma2d.LayerCfg[0].InputColorMode = (bitDepth == 16) ? CM_RGB565 : CM_RGB888;
 8000d5c:	e9c0 6106 	strd	r6, r1, [r0, #24]
        hdma2d.LayerCfg[1].InputColorMode = CM_A8;
 8000d60:	62c3      	str	r3, [r0, #44]	; 0x2c
        HAL_DMA2D_ConfigLayer(&hdma2d, 0);
 8000d62:	2100      	movs	r1, #0
 8000d64:	f002 fed8 	bl	8003b18 <HAL_DMA2D_ConfigLayer>
    {
        hdma2d.LayerCfg[1].InputColorMode = dma2dColorMode;
        hdma2d.LayerCfg[1].InputOffset = 0;
    }

    HAL_DMA2D_ConfigLayer(&hdma2d, 1);
 8000d68:	2101      	movs	r1, #1
 8000d6a:	4810      	ldr	r0, [pc, #64]	; (8000dac <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0xec>)
 8000d6c:	f002 fed4 	bl	8003b18 <HAL_DMA2D_ConfigLayer>

    if (dma2dTransferMode == DMA2D_M2M_BLEND)
 8000d70:	f5b7 3f00 	cmp.w	r7, #131072	; 0x20000
 8000d74:	8a2b      	ldrh	r3, [r5, #16]
 8000d76:	8a6a      	ldrh	r2, [r5, #18]
 8000d78:	d10d      	bne.n	8000d96 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0xd6>
        HAL_DMA2D_BlendingStart_IT(&hdma2d,
 8000d7a:	68e9      	ldr	r1, [r5, #12]
 8000d7c:	480b      	ldr	r0, [pc, #44]	; (8000dac <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0xec>)
 8000d7e:	e9cd 3200 	strd	r3, r2, [sp]
 8000d82:	460b      	mov	r3, r1
 8000d84:	460a      	mov	r2, r1
 8000d86:	f002 fd89 	bl	800389c <HAL_DMA2D_BlendingStart_IT>
                                   (unsigned int)blitOp.pDst,
                                   blitOp.nSteps, blitOp.nLoops);
    else
        HAL_DMA2D_Start_IT(&hdma2d, color, (unsigned int)blitOp.pDst,
                           blitOp.nSteps, blitOp.nLoops);
}
 8000d8a:	b003      	add	sp, #12
 8000d8c:	bdf0      	pop	{r4, r5, r6, r7, pc}
        hdma2d.LayerCfg[1].InputOffset = 0;
 8000d8e:	2300      	movs	r3, #0
        hdma2d.LayerCfg[1].InputColorMode = dma2dColorMode;
 8000d90:	62c1      	str	r1, [r0, #44]	; 0x2c
        hdma2d.LayerCfg[1].InputOffset = 0;
 8000d92:	6283      	str	r3, [r0, #40]	; 0x28
 8000d94:	e7e8      	b.n	8000d68 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0xa8>
        HAL_DMA2D_Start_IT(&hdma2d, color, (unsigned int)blitOp.pDst,
 8000d96:	9200      	str	r2, [sp, #0]
 8000d98:	4621      	mov	r1, r4
 8000d9a:	68ea      	ldr	r2, [r5, #12]
 8000d9c:	4803      	ldr	r0, [pc, #12]	; (8000dac <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0xec>)
 8000d9e:	f002 fd5f 	bl	8003860 <HAL_DMA2D_Start_IT>
}
 8000da2:	e7f2      	b.n	8000d8a <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0xca>
        color = (blitOp.alpha << 24) | blitOp.color.getColor32();
 8000da4:	ea43 6401 	orr.w	r4, r3, r1, lsl #24
    uint32_t dma2dColorMode = (bitDepth == 16) ? CM_RGB565 : CM_RGB888;
 8000da8:	2101      	movs	r1, #1
 8000daa:	e7af      	b.n	8000d0c <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0x4c>
 8000dac:	200127e8 	.word	0x200127e8

08000db0 <_ZN10STM32F4DMAC1Ev>:
STM32F4DMA::STM32F4DMA()
 8000db0:	b570      	push	{r4, r5, r6, lr}
 8000db2:	4605      	mov	r5, r0
    : DMA_Interface(dma_queue), dma_queue(queue_storage, sizeof(queue_storage) / sizeof(queue_storage[0]))
 8000db4:	462c      	mov	r4, r5
 8000db6:	4b0a      	ldr	r3, [pc, #40]	; (8000de0 <_ZN10STM32F4DMAC1Ev+0x30>)
 8000db8:	300c      	adds	r0, #12
     * Constructs a DMA Interface object.
     *
     * @param [in] dmaQueue Reference to the queue of DMA operations.
     */
    DMA_Interface(DMA_Queue& dmaQueue)
        : queue(dmaQueue), isRunning(false), isAllowed(false)
 8000dba:	2600      	movs	r6, #0
 8000dbc:	6068      	str	r0, [r5, #4]
 8000dbe:	722e      	strb	r6, [r5, #8]
 8000dc0:	726e      	strb	r6, [r5, #9]
 8000dc2:	f844 3b20 	str.w	r3, [r4], #32
 8000dc6:	2260      	movs	r2, #96	; 0x60
 8000dc8:	4621      	mov	r1, r4
 8000dca:	f008 fefd 	bl	8009bc8 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>
 8000dce:	f505 6342 	add.w	r3, r5, #3104	; 0xc20
 */
struct colortype
{
    /** Default constructor. Creates a black (0) color. */
    colortype()
        : color(0)
 8000dd2:	61a6      	str	r6, [r4, #24]
 8000dd4:	3420      	adds	r4, #32
 8000dd6:	42a3      	cmp	r3, r4
 8000dd8:	d1fb      	bne.n	8000dd2 <_ZN10STM32F4DMAC1Ev+0x22>
{}
 8000dda:	4628      	mov	r0, r5
 8000ddc:	bd70      	pop	{r4, r5, r6, pc}
 8000dde:	bf00      	nop
 8000de0:	0801a018 	.word	0x0801a018

08000de4 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
     * @see touchgfx::AbstractPartition::capacity
     */
    virtual uint16_t capacity() const
    {
        return NUMBER_OF_ELEMENTS;
    }
 8000de4:	2001      	movs	r0, #1
 8000de6:	4770      	bx	lr

08000de8 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
     * @see touchgfx::AbstractPartition::element_size
     */
    virtual uint32_t element_size()
    {
        return sizeof(stBlocks[0]);
    }
 8000de8:	200c      	movs	r0, #12
 8000dea:	4770      	bx	lr

08000dec <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE7elementEt>:
     *
     * @see touchgfx::AbstractPartition::element
     */
    virtual void* element(uint16_t index)
    {
        return &stBlocks[index];
 8000dec:	230c      	movs	r3, #12
 8000dee:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8000df2:	3008      	adds	r0, #8
 8000df4:	4770      	bx	lr

08000df6 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE7elementEt>:
     *
     * @see touchgfx::AbstractPartition::element
     */
    virtual const void* element(uint16_t index) const
    {
        return &stBlocks[index];
 8000df6:	230c      	movs	r3, #12
 8000df8:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8000dfc:	3008      	adds	r0, #8
 8000dfe:	4770      	bx	lr

08000e00 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI14mainScreenViewNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 8000e00:	2001      	movs	r0, #1
 8000e02:	4770      	bx	lr

08000e04 <_ZN8touchgfx9PartitionINS_4meta8TypeListI14mainScreenViewNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 8000e04:	f44f 7059 	mov.w	r0, #868	; 0x364
 8000e08:	4770      	bx	lr

08000e0a <_ZN8touchgfx9PartitionINS_4meta8TypeListI14mainScreenViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8000e0a:	f44f 7359 	mov.w	r3, #868	; 0x364
 8000e0e:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8000e12:	3008      	adds	r0, #8
 8000e14:	4770      	bx	lr

08000e16 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI14mainScreenViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8000e16:	f44f 7359 	mov.w	r3, #868	; 0x364
 8000e1a:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8000e1e:	3008      	adds	r0, #8
 8000e20:	4770      	bx	lr

08000e22 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI19mainScreenPresenterNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 8000e22:	2001      	movs	r0, #1
 8000e24:	4770      	bx	lr

08000e26 <_ZN8touchgfx9PartitionINS_4meta8TypeListI19mainScreenPresenterNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 8000e26:	2010      	movs	r0, #16
 8000e28:	4770      	bx	lr

08000e2a <_ZN8touchgfx9PartitionINS_4meta8TypeListI19mainScreenPresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8000e2a:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 8000e2e:	3008      	adds	r0, #8
 8000e30:	4770      	bx	lr

08000e32 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI19mainScreenPresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8000e32:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 8000e36:	3008      	adds	r0, #8
 8000e38:	4770      	bx	lr

08000e3a <_ZN16FrontendHeapBase15gotoStartScreenER19FrontendApplication>:
     */
    typedef touchgfx::meta::select_type_maxsize< GeneratedTransitionTypes >::type MaxGeneratedTransitionType;

    virtual void gotoStartScreen(FrontendApplication& app)
    {
        app.gotomainScreenScreenNoTransition();
 8000e3a:	4608      	mov	r0, r1
 8000e3c:	f001 bab0 	b.w	80023a0 <_ZN23FrontendApplicationBase32gotomainScreenScreenNoTransitionEv>

08000e40 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>:
class Partition : public AbstractPartition
 8000e40:	b510      	push	{r4, lr}
 8000e42:	4b03      	ldr	r3, [pc, #12]	; (8000e50 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 8000e44:	6003      	str	r3, [r0, #0]
 8000e46:	4604      	mov	r4, r0
 8000e48:	f007 fb22 	bl	8008490 <_ZN8touchgfx17AbstractPartitionD1Ev>
 8000e4c:	4620      	mov	r0, r4
 8000e4e:	bd10      	pop	{r4, pc}
 8000e50:	0801a104 	.word	0x0801a104

08000e54 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8000e54:	b510      	push	{r4, lr}
 8000e56:	4604      	mov	r4, r0
 8000e58:	f7ff fff2 	bl	8000e40 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>
 8000e5c:	4620      	mov	r0, r4
 8000e5e:	2114      	movs	r1, #20
 8000e60:	f017 fe98 	bl	8018b94 <_ZdlPvj>
 8000e64:	4620      	mov	r0, r4
 8000e66:	bd10      	pop	{r4, pc}

08000e68 <_ZN8touchgfx9PartitionINS_4meta8TypeListI14mainScreenViewNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 8000e68:	b510      	push	{r4, lr}
 8000e6a:	4b03      	ldr	r3, [pc, #12]	; (8000e78 <_ZN8touchgfx9PartitionINS_4meta8TypeListI14mainScreenViewNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 8000e6c:	6003      	str	r3, [r0, #0]
 8000e6e:	4604      	mov	r4, r0
 8000e70:	f007 fb0e 	bl	8008490 <_ZN8touchgfx17AbstractPartitionD1Ev>
 8000e74:	4620      	mov	r0, r4
 8000e76:	bd10      	pop	{r4, pc}
 8000e78:	0801a0d0 	.word	0x0801a0d0

08000e7c <_ZN8touchgfx9PartitionINS_4meta8TypeListI14mainScreenViewNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8000e7c:	b510      	push	{r4, lr}
 8000e7e:	4604      	mov	r4, r0
 8000e80:	f7ff fff2 	bl	8000e68 <_ZN8touchgfx9PartitionINS_4meta8TypeListI14mainScreenViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8000e84:	4620      	mov	r0, r4
 8000e86:	f44f 715b 	mov.w	r1, #876	; 0x36c
 8000e8a:	f017 fe83 	bl	8018b94 <_ZdlPvj>
 8000e8e:	4620      	mov	r0, r4
 8000e90:	bd10      	pop	{r4, pc}
	...

08000e94 <_ZN8touchgfx9PartitionINS_4meta8TypeListI19mainScreenPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 8000e94:	b510      	push	{r4, lr}
 8000e96:	4b03      	ldr	r3, [pc, #12]	; (8000ea4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI19mainScreenPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 8000e98:	6003      	str	r3, [r0, #0]
 8000e9a:	4604      	mov	r4, r0
 8000e9c:	f007 faf8 	bl	8008490 <_ZN8touchgfx17AbstractPartitionD1Ev>
 8000ea0:	4620      	mov	r0, r4
 8000ea2:	bd10      	pop	{r4, pc}
 8000ea4:	0801a09c 	.word	0x0801a09c

08000ea8 <_ZN8touchgfx9PartitionINS_4meta8TypeListI19mainScreenPresenterNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8000ea8:	b510      	push	{r4, lr}
 8000eaa:	4604      	mov	r4, r0
 8000eac:	f7ff fff2 	bl	8000e94 <_ZN8touchgfx9PartitionINS_4meta8TypeListI19mainScreenPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8000eb0:	4620      	mov	r0, r4
 8000eb2:	2118      	movs	r1, #24
 8000eb4:	f017 fe6e 	bl	8018b94 <_ZdlPvj>
 8000eb8:	4620      	mov	r0, r4
 8000eba:	bd10      	pop	{r4, pc}

08000ebc <_ZN12FrontendHeapD1Ev>:
#ifndef FRONTENDHEAP_HPP
#define FRONTENDHEAP_HPP

#include <gui_generated/common/FrontendHeapBase.hpp>

class FrontendHeap : public FrontendHeapBase
 8000ebc:	b510      	push	{r4, lr}
 8000ebe:	4b08      	ldr	r3, [pc, #32]	; (8000ee0 <_ZN12FrontendHeapD1Ev+0x24>)
 8000ec0:	6003      	str	r3, [r0, #0]
 8000ec2:	4604      	mov	r4, r0
 8000ec4:	f500 7066 	add.w	r0, r0, #920	; 0x398
 8000ec8:	f7ff ffba 	bl	8000e40 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>
 8000ecc:	f104 002c 	add.w	r0, r4, #44	; 0x2c
 8000ed0:	f7ff ffca 	bl	8000e68 <_ZN8touchgfx9PartitionINS_4meta8TypeListI14mainScreenViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8000ed4:	f104 0014 	add.w	r0, r4, #20
 8000ed8:	f7ff ffdc 	bl	8000e94 <_ZN8touchgfx9PartitionINS_4meta8TypeListI19mainScreenPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8000edc:	4620      	mov	r0, r4
 8000ede:	bd10      	pop	{r4, pc}
 8000ee0:	0801a138 	.word	0x0801a138

08000ee4 <__tcf_0>:
                            > > CombinedTransitionTypes;
    typedef touchgfx::meta::select_type_maxsize< CombinedTransitionTypes >::type MaxTransitionType;

    static FrontendHeap& getInstance()
    {
        static FrontendHeap instance;
 8000ee4:	b508      	push	{r3, lr}
 8000ee6:	4802      	ldr	r0, [pc, #8]	; (8000ef0 <__tcf_0+0xc>)
 8000ee8:	f7ff ffe8 	bl	8000ebc <_ZN12FrontendHeapD1Ev>
 8000eec:	bd08      	pop	{r3, pc}
 8000eee:	bf00      	nop
 8000ef0:	20000198 	.word	0x20000198

08000ef4 <_ZN12FrontendHeapD0Ev>:
class FrontendHeap : public FrontendHeapBase
 8000ef4:	b510      	push	{r4, lr}
 8000ef6:	4604      	mov	r4, r0
 8000ef8:	f7ff ffe0 	bl	8000ebc <_ZN12FrontendHeapD1Ev>
 8000efc:	4620      	mov	r0, r4
 8000efe:	f44f 61a1 	mov.w	r1, #1288	; 0x508
 8000f02:	f017 fe47 	bl	8018b94 <_ZdlPvj>
 8000f06:	4620      	mov	r0, r4
 8000f08:	bd10      	pop	{r4, pc}
	...

08000f0c <touchgfx_init>:
static ApplicationFontProvider fontProvider;
static Texts texts;
static TouchGFXHAL hal(dma, display, tc, 240, 320);

void touchgfx_init()
{
 8000f0c:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
    Bitmap::registerBitmapDatabase(BitmapDatabase::getInstance(), BitmapDatabase::getInstanceSize());
 8000f10:	f001 f982 	bl	8002218 <_ZN14BitmapDatabase11getInstanceEv>
 8000f14:	4605      	mov	r5, r0
 8000f16:	f001 f983 	bl	8002220 <_ZN14BitmapDatabase15getInstanceSizeEv>
 8000f1a:	2400      	movs	r4, #0
 8000f1c:	4601      	mov	r1, r0
 8000f1e:	4623      	mov	r3, r4
 8000f20:	4628      	mov	r0, r5
 8000f22:	4622      	mov	r2, r4
 8000f24:	9400      	str	r4, [sp, #0]
 8000f26:	f00c f97f 	bl	800d228 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>
     *
     * @param  t The array of texts.
     */
    static void registerTexts(const Texts* t)
    {
        texts = t;
 8000f2a:	4b25      	ldr	r3, [pc, #148]	; (8000fc0 <touchgfx_init+0xb4>)
 8000f2c:	4a25      	ldr	r2, [pc, #148]	; (8000fc4 <touchgfx_init+0xb8>)
        static FrontendHeap instance;
 8000f2e:	4d26      	ldr	r5, [pc, #152]	; (8000fc8 <touchgfx_init+0xbc>)
 8000f30:	601a      	str	r2, [r3, #0]
    TypedText::registerTexts(&texts);
    Texts::setLanguage(0);
 8000f32:	4620      	mov	r0, r4
 8000f34:	f001 fc6e 	bl	8002814 <_ZN8touchgfx5Texts11setLanguageEt>

    FontManager::setFontProvider(&fontProvider);
 8000f38:	4824      	ldr	r0, [pc, #144]	; (8000fcc <touchgfx_init+0xc0>)
 8000f3a:	f00c f8bf 	bl	800d0bc <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>
 8000f3e:	782b      	ldrb	r3, [r5, #0]
 8000f40:	f3bf 8f5b 	dmb	ish
 8000f44:	07db      	lsls	r3, r3, #31
 8000f46:	d435      	bmi.n	8000fb4 <touchgfx_init+0xa8>
 8000f48:	4628      	mov	r0, r5
 8000f4a:	f017 fe25 	bl	8018b98 <__cxa_guard_acquire>
 8000f4e:	b388      	cbz	r0, 8000fb4 <touchgfx_init+0xa8>
            AbstractPartition& tra,
            MVPApplication& app)
        : presenterStorage(pres),
          screenStorage(scr),
          transitionStorage(tra),
          frontendApplication(app)
 8000f50:	4c1f      	ldr	r4, [pc, #124]	; (8000fd0 <touchgfx_init+0xc4>)
    Model model;
    FrontendApplication app;

private:
    FrontendHeap() : FrontendHeapBase(presenters, views, transitions, app),
                     app(model, *this)
 8000f52:	4b20      	ldr	r3, [pc, #128]	; (8000fd4 <touchgfx_init+0xc8>)
 8000f54:	6023      	str	r3, [r4, #0]
 8000f56:	f504 766c 	add.w	r6, r4, #944	; 0x3b0
 8000f5a:	f104 0014 	add.w	r0, r4, #20
 8000f5e:	f104 082c 	add.w	r8, r4, #44	; 0x2c
 8000f62:	f504 7766 	add.w	r7, r4, #920	; 0x398
 8000f66:	6060      	str	r0, [r4, #4]
 8000f68:	f8c4 8008 	str.w	r8, [r4, #8]
 8000f6c:	60e7      	str	r7, [r4, #12]
 8000f6e:	6126      	str	r6, [r4, #16]
 8000f70:	f007 fa90 	bl	8008494 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8000f74:	4b18      	ldr	r3, [pc, #96]	; (8000fd8 <touchgfx_init+0xcc>)
 8000f76:	6163      	str	r3, [r4, #20]
 8000f78:	4640      	mov	r0, r8
 8000f7a:	f007 fa8b 	bl	8008494 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8000f7e:	4b17      	ldr	r3, [pc, #92]	; (8000fdc <touchgfx_init+0xd0>)
 8000f80:	62e3      	str	r3, [r4, #44]	; 0x2c
 8000f82:	4638      	mov	r0, r7
 8000f84:	f007 fa86 	bl	8008494 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8000f88:	4b15      	ldr	r3, [pc, #84]	; (8000fe0 <touchgfx_init+0xd4>)
 8000f8a:	f8c4 3398 	str.w	r3, [r4, #920]	; 0x398
 8000f8e:	f504 706b 	add.w	r0, r4, #940	; 0x3ac
 8000f92:	f001 ff39 	bl	8002e08 <_ZN5ModelC1Ev>
 8000f96:	4622      	mov	r2, r4
 8000f98:	f504 716b 	add.w	r1, r4, #940	; 0x3ac
 8000f9c:	4630      	mov	r0, r6
 8000f9e:	f001 ff29 	bl	8002df4 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>
 8000fa2:	4630      	mov	r0, r6
 8000fa4:	f001 f9fc 	bl	80023a0 <_ZN23FrontendApplicationBase32gotomainScreenScreenNoTransitionEv>
        static FrontendHeap instance;
 8000fa8:	4628      	mov	r0, r5
 8000faa:	f017 fe01 	bl	8018bb0 <__cxa_guard_release>
 8000fae:	480d      	ldr	r0, [pc, #52]	; (8000fe4 <touchgfx_init+0xd8>)
 8000fb0:	f017 fe3a 	bl	8018c28 <atexit>

    FrontendHeap& heap = FrontendHeap::getInstance();
    (void)heap; // we need to obtain the reference above to initialize the frontend heap.

    hal.initialize();
 8000fb4:	480c      	ldr	r0, [pc, #48]	; (8000fe8 <touchgfx_init+0xdc>)
}
 8000fb6:	b002      	add	sp, #8
 8000fb8:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    hal.initialize();
 8000fbc:	f7ff bcb4 	b.w	8000928 <_ZN11TouchGFXHAL10initializeEv>
 8000fc0:	20012208 	.word	0x20012208
 8000fc4:	2000133c 	.word	0x2000133c
 8000fc8:	20000194 	.word	0x20000194
 8000fcc:	20000008 	.word	0x20000008
 8000fd0:	20000198 	.word	0x20000198
 8000fd4:	0801a138 	.word	0x0801a138
 8000fd8:	0801a09c 	.word	0x0801a09c
 8000fdc:	0801a0d0 	.word	0x0801a0d0
 8000fe0:	0801a104 	.word	0x0801a104
 8000fe4:	08000ee5 	.word	0x08000ee5
 8000fe8:	200012c4 	.word	0x200012c4

08000fec <touchgfx_taskEntry>:
     * Main event loop. Will wait for VSYNC signal, and then process next frame. Call
     * this function from your GUI task.
     *
     * Note This function never returns
     */
    hal.taskEntry();
 8000fec:	4801      	ldr	r0, [pc, #4]	; (8000ff4 <touchgfx_taskEntry+0x8>)
 8000fee:	f7ff bbbd 	b.w	800076c <_ZN11TouchGFXHAL9taskEntryEv>
 8000ff2:	bf00      	nop
 8000ff4:	200012c4 	.word	0x200012c4

08000ff8 <_GLOBAL__sub_I_touchgfx_init>:
}
 8000ff8:	b570      	push	{r4, r5, r6, lr}
static STM32F4DMA dma;
 8000ffa:	4e28      	ldr	r6, [pc, #160]	; (800109c <_GLOBAL__sub_I_touchgfx_init+0xa4>)
{
public:

    STM32TouchController() {}
 8000ffc:	4c28      	ldr	r4, [pc, #160]	; (80010a0 <_GLOBAL__sub_I_touchgfx_init+0xa8>)
static LCD16bpp display;
 8000ffe:	4d29      	ldr	r5, [pc, #164]	; (80010a4 <_GLOBAL__sub_I_touchgfx_init+0xac>)
 8001000:	4b29      	ldr	r3, [pc, #164]	; (80010a8 <_GLOBAL__sub_I_touchgfx_init+0xb0>)
 8001002:	6023      	str	r3, [r4, #0]
static STM32F4DMA dma;
 8001004:	4630      	mov	r0, r6
 8001006:	f7ff fed3 	bl	8000db0 <_ZN10STM32F4DMAC1Ev>
static LCD16bpp display;
 800100a:	4628      	mov	r0, r5
 800100c:	f00f f906 	bl	801021c <_ZN8touchgfx8LCD16bppC1Ev>
          useDMAAcceleration(true)
 8001010:	4b26      	ldr	r3, [pc, #152]	; (80010ac <_GLOBAL__sub_I_touchgfx_init+0xb4>)
 8001012:	4827      	ldr	r0, [pc, #156]	; (80010b0 <_GLOBAL__sub_I_touchgfx_init+0xb8>)
 8001014:	6658      	str	r0, [r3, #100]	; 0x64
        instance = this;
 8001016:	4827      	ldr	r0, [pc, #156]	; (80010b4 <_GLOBAL__sub_I_touchgfx_init+0xbc>)
          useDMAAcceleration(true)
 8001018:	60dc      	str	r4, [r3, #12]
 800101a:	2200      	movs	r2, #0
 800101c:	2101      	movs	r1, #1
 800101e:	e9c3 6501 	strd	r6, r5, [r3, #4]
 8001022:	e9c3 2204 	strd	r2, r2, [r3, #16]
              downX(0),
              downY(0),
              tickCount(0),
              velocityX(0),
              velocityY(0),
              inProgress(false)
 8001026:	e9c3 2206 	strd	r2, r2, [r3, #24]
 800102a:	e9c3 2208 	strd	r2, r2, [r3, #32]
 800102e:	851a      	strh	r2, [r3, #40]	; 0x28
 8001030:	f883 202a 	strb.w	r2, [r3, #42]	; 0x2a
    };

public:
    /** Default constructor. Does nothing. */
    Gestures()
        : listener(0), dragThresholdValue(0)
 8001034:	62da      	str	r2, [r3, #44]	; 0x2c
 8001036:	861a      	strh	r2, [r3, #48]	; 0x30
 8001038:	e9c3 220e 	strd	r2, r2, [r3, #56]	; 0x38
 800103c:	e9c3 2210 	strd	r2, r2, [r3, #64]	; 0x40
 8001040:	f883 2048 	strb.w	r2, [r3, #72]	; 0x48
 8001044:	f883 204a 	strb.w	r2, [r3, #74]	; 0x4a
{
public:
    /** Default constructor. Resulting in an empty Rect with coordinates 0,0. */
    Rect()
    {
        this->x = 0;
 8001048:	e9c3 2213 	strd	r2, r2, [r3, #76]	; 0x4c
        this->y = 0;
 800104c:	655a      	str	r2, [r3, #84]	; 0x54
 800104e:	f883 2068 	strb.w	r2, [r3, #104]	; 0x68
 8001052:	f883 2069 	strb.w	r2, [r3, #105]	; 0x69
 8001056:	f883 206a 	strb.w	r2, [r3, #106]	; 0x6a
 800105a:	f883 206b 	strb.w	r2, [r3, #107]	; 0x6b
 800105e:	f883 206c 	strb.w	r2, [r3, #108]	; 0x6c
 8001062:	671a      	str	r2, [r3, #112]	; 0x70
 8001064:	f883 2075 	strb.w	r2, [r3, #117]	; 0x75
 8001068:	f883 2076 	strb.w	r2, [r3, #118]	; 0x76
 800106c:	f883 1049 	strb.w	r1, [r3, #73]	; 0x49
 8001070:	f883 1077 	strb.w	r1, [r3, #119]	; 0x77
        instance = this;
 8001074:	6003      	str	r3, [r0, #0]
        DISPLAY_WIDTH = width;
 8001076:	4810      	ldr	r0, [pc, #64]	; (80010b8 <_GLOBAL__sub_I_touchgfx_init+0xc0>)
        DISPLAY_HEIGHT = height;
 8001078:	4d10      	ldr	r5, [pc, #64]	; (80010bc <_GLOBAL__sub_I_touchgfx_init+0xc4>)
        nativeDisplayOrientation = ((width >= height) ? ORIENTATION_LANDSCAPE : ORIENTATION_PORTRAIT);
 800107a:	f883 1034 	strb.w	r1, [r3, #52]	; 0x34
        DISPLAY_WIDTH = width;
 800107e:	24f0      	movs	r4, #240	; 0xf0
 8001080:	8004      	strh	r4, [r0, #0]
        DISPLAY_HEIGHT = height;
 8001082:	f44f 70a0 	mov.w	r0, #320	; 0x140
 8001086:	8028      	strh	r0, [r5, #0]
        DISPLAY_ROTATION = rotate0;
 8001088:	4d0d      	ldr	r5, [pc, #52]	; (80010c0 <_GLOBAL__sub_I_touchgfx_init+0xc8>)
 800108a:	702a      	strb	r2, [r5, #0]
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH;
 800108c:	4a0d      	ldr	r2, [pc, #52]	; (80010c4 <_GLOBAL__sub_I_touchgfx_init+0xcc>)
 800108e:	8014      	strh	r4, [r2, #0]
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT;
 8001090:	4a0d      	ldr	r2, [pc, #52]	; (80010c8 <_GLOBAL__sub_I_touchgfx_init+0xd0>)
 8001092:	8010      	strh	r0, [r2, #0]
     * @param [in,out] display Reference to LCD interface.
     * @param [in,out] tc      Reference to Touch Controller driver.
     * @param width            Width of the display.
     * @param height           Height of the display.
     */
    TouchGFXHAL(touchgfx::DMA_Interface& dma, touchgfx::LCD& display, touchgfx::TouchController& tc, uint16_t width, uint16_t height) : TouchGFXGeneratedHAL(dma, display, tc, width, height)
 8001094:	4a0d      	ldr	r2, [pc, #52]	; (80010cc <_GLOBAL__sub_I_touchgfx_init+0xd4>)
 8001096:	601a      	str	r2, [r3, #0]
}
 8001098:	bd70      	pop	{r4, r5, r6, pc}
 800109a:	bf00      	nop
 800109c:	200006a4 	.word	0x200006a4
 80010a0:	200006a0 	.word	0x200006a0
 80010a4:	20001340 	.word	0x20001340
 80010a8:	08019c60 	.word	0x08019c60
 80010ac:	200012c4 	.word	0x200012c4
 80010b0:	01000001 	.word	0x01000001
 80010b4:	2001218c 	.word	0x2001218c
 80010b8:	20012180 	.word	0x20012180
 80010bc:	20012182 	.word	0x20012182
 80010c0:	20012184 	.word	0x20012184
 80010c4:	20012186 	.word	0x20012186
 80010c8:	20012188 	.word	0x20012188
 80010cc:	08019d14 	.word	0x08019d14

080010d0 <_GLOBAL__sub_D_touchgfx_init>:
static STM32F4DMA dma;
 80010d0:	4801      	ldr	r0, [pc, #4]	; (80010d8 <_GLOBAL__sub_D_touchgfx_init+0x8>)
 80010d2:	f7ff bcfd 	b.w	8000ad0 <_ZN10STM32F4DMAD1Ev>
 80010d6:	bf00      	nop
 80010d8:	200006a4 	.word	0x200006a4

080010dc <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>:
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80010dc:	4b03      	ldr	r3, [pc, #12]	; (80010ec <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv+0x10>)
 80010de:	2290      	movs	r2, #144	; 0x90
 80010e0:	f883 235a 	strb.w	r2, [r3, #858]	; 0x35a
 80010e4:	f883 2358 	strb.w	r2, [r3, #856]	; 0x358

void TouchGFXGeneratedHAL::configureInterrupts()
{
    NVIC_SetPriority(DMA2D_IRQn, 9);
    NVIC_SetPriority(LTDC_IRQn, 9);
}
 80010e8:	4770      	bx	lr
 80010ea:	bf00      	nop
 80010ec:	e000e100 	.word	0xe000e100

080010f0 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>:
    NVIC_DisableIRQ(LTDC_IRQn);
}

void TouchGFXGeneratedHAL::enableLCDControllerInterrupt()
{
    lcd_int_active_line = (LTDC->BPCR & 0x7FF) - 1;
 80010f0:	4a09      	ldr	r2, [pc, #36]	; (8001118 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x28>)
 80010f2:	490a      	ldr	r1, [pc, #40]	; (800111c <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x2c>)
 80010f4:	68d3      	ldr	r3, [r2, #12]
    lcd_int_porch_line = (LTDC->AWCR & 0x7FF) - 1;
 80010f6:	480a      	ldr	r0, [pc, #40]	; (8001120 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x30>)
    lcd_int_active_line = (LTDC->BPCR & 0x7FF) - 1;
 80010f8:	f3c3 030a 	ubfx	r3, r3, #0, #11
 80010fc:	3b01      	subs	r3, #1
 80010fe:	b29b      	uxth	r3, r3
 8001100:	800b      	strh	r3, [r1, #0]
    lcd_int_porch_line = (LTDC->AWCR & 0x7FF) - 1;
 8001102:	6911      	ldr	r1, [r2, #16]
 8001104:	f3c1 010a 	ubfx	r1, r1, #0, #11
 8001108:	3901      	subs	r1, #1
 800110a:	8001      	strh	r1, [r0, #0]

    /* Sets the Line Interrupt position */
    LTDC->LIPCR = lcd_int_active_line;
 800110c:	6413      	str	r3, [r2, #64]	; 0x40
    /* Line Interrupt Enable            */
    LTDC->IER |= LTDC_IER_LIE;
 800110e:	6b53      	ldr	r3, [r2, #52]	; 0x34
 8001110:	f043 0301 	orr.w	r3, r3, #1
 8001114:	6353      	str	r3, [r2, #52]	; 0x34
}
 8001116:	4770      	bx	lr
 8001118:	40016800 	.word	0x40016800
 800111c:	200013ba 	.word	0x200013ba
 8001120:	200013b8 	.word	0x200013b8

08001124 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>:

uint16_t* TouchGFXGeneratedHAL::getTFTFrameBuffer() const
{
    return (uint16_t*)LTDC_Layer1->CFBAR;
 8001124:	4b01      	ldr	r3, [pc, #4]	; (800112c <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv+0x8>)
 8001126:	6a98      	ldr	r0, [r3, #40]	; 0x28
}
 8001128:	4770      	bx	lr
 800112a:	bf00      	nop
 800112c:	40016884 	.word	0x40016884

08001130 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>:

void TouchGFXGeneratedHAL::setTFTFrameBuffer(uint16_t* adr)
{
    LTDC_Layer1->CFBAR = (uint32_t)adr;
 8001130:	4b02      	ldr	r3, [pc, #8]	; (800113c <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt+0xc>)

    /* Reload immediate */
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 8001132:	2201      	movs	r2, #1
    LTDC_Layer1->CFBAR = (uint32_t)adr;
 8001134:	6299      	str	r1, [r3, #40]	; 0x28
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 8001136:	f843 2c60 	str.w	r2, [r3, #-96]
}
 800113a:	4770      	bx	lr
 800113c:	40016884 	.word	0x40016884

08001140 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>:

void TouchGFXGeneratedHAL::flushFrameBuffer(const touchgfx::Rect& rect)
{
    HAL::flushFrameBuffer(rect);
 8001140:	f007 bead 	b.w	8008e9e <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>

08001144 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>:
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8001144:	4b03      	ldr	r3, [pc, #12]	; (8001154 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv+0x10>)
 8001146:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 800114a:	609a      	str	r2, [r3, #8]
 800114c:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 8001150:	609a      	str	r2, [r3, #8]
}
 8001152:	4770      	bx	lr
 8001154:	e000e100 	.word	0xe000e100

08001158 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>:
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8001158:	4b08      	ldr	r3, [pc, #32]	; (800117c <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv+0x24>)
 800115a:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 800115e:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  __ASM volatile ("dsb 0xF":::"memory");
 8001162:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 8001166:	f3bf 8f6f 	isb	sy
 800116a:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 800116e:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  __ASM volatile ("dsb 0xF":::"memory");
 8001172:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 8001176:	f3bf 8f6f 	isb	sy
}
 800117a:	4770      	bx	lr
 800117c:	e000e100 	.word	0xe000e100

08001180 <_ZN20TouchGFXGeneratedHAL10initializeEv>:
{
 8001180:	b538      	push	{r3, r4, r5, lr}
 8001182:	4604      	mov	r4, r0
    HAL::initialize();
 8001184:	f008 f96c 	bl	8009460 <_ZN8touchgfx3HAL10initializeEv>
    registerEventListener(*(touchgfx::Application::getInstance()));
 8001188:	6823      	ldr	r3, [r4, #0]
 800118a:	6cdd      	ldr	r5, [r3, #76]	; 0x4c
 800118c:	f00a f88a 	bl	800b2a4 <_ZN8touchgfx11Application11getInstanceEv>
 8001190:	4601      	mov	r1, r0
 8001192:	4620      	mov	r0, r4
 8001194:	47a8      	blx	r5
    setFrameBufferStartAddresses((void*)frameBuf, (void*)(frameBuf + sizeof(frameBuf) / (sizeof(uint32_t) * 2)), (void*)0);
 8001196:	6823      	ldr	r3, [r4, #0]
 8001198:	4a05      	ldr	r2, [pc, #20]	; (80011b0 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x30>)
 800119a:	6f5d      	ldr	r5, [r3, #116]	; 0x74
 800119c:	f5a2 3116 	sub.w	r1, r2, #153600	; 0x25800
 80011a0:	2300      	movs	r3, #0
 80011a2:	4620      	mov	r0, r4
 80011a4:	47a8      	blx	r5
        lockDMAToPorch = enableLock;
 80011a6:	2300      	movs	r3, #0
 80011a8:	f884 304a 	strb.w	r3, [r4, #74]	; 0x4a
}
 80011ac:	bd38      	pop	{r3, r4, r5, pc}
 80011ae:	bf00      	nop
 80011b0:	d0025800 	.word	0xd0025800

080011b4 <HAL_LTDC_LineEventCallback>:

extern "C"
{
    void HAL_LTDC_LineEventCallback(LTDC_HandleTypeDef* hltdc)
    {
        if (LTDC->LIPCR == lcd_int_active_line)
 80011b4:	4b13      	ldr	r3, [pc, #76]	; (8001204 <HAL_LTDC_LineEventCallback+0x50>)
 80011b6:	4a14      	ldr	r2, [pc, #80]	; (8001208 <HAL_LTDC_LineEventCallback+0x54>)
 80011b8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80011ba:	8811      	ldrh	r1, [r2, #0]
 80011bc:	428b      	cmp	r3, r1
    {
 80011be:	b510      	push	{r4, lr}
 80011c0:	4c12      	ldr	r4, [pc, #72]	; (800120c <HAL_LTDC_LineEventCallback+0x58>)
        if (LTDC->LIPCR == lcd_int_active_line)
 80011c2:	d113      	bne.n	80011ec <HAL_LTDC_LineEventCallback+0x38>
        {
            //entering active area
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_porch_line);
 80011c4:	4b12      	ldr	r3, [pc, #72]	; (8001210 <HAL_LTDC_LineEventCallback+0x5c>)
 80011c6:	8819      	ldrh	r1, [r3, #0]
 80011c8:	f003 fbb6 	bl	8004938 <HAL_LTDC_ProgramLineEvent>
        return instance;
 80011cc:	6822      	ldr	r2, [r4, #0]
        vSyncCnt++;
 80011ce:	f892 3066 	ldrb.w	r3, [r2, #102]	; 0x66
 80011d2:	3301      	adds	r3, #1
 80011d4:	f882 3066 	strb.w	r3, [r2, #102]	; 0x66
            HAL::getInstance()->vSync();
            OSWrappers::signalVSync();
 80011d8:	f7ff fc1c 	bl	8000a14 <_ZN8touchgfx10OSWrappers11signalVSyncEv>
            // Swap frame buffers immediately instead of waiting for the task to be scheduled in.
            // Note: task will also swap when it wakes up, but that operation is guarded and will not have
            // any effect if already swapped.
            HAL::getInstance()->swapFrameBuffers();
 80011dc:	6820      	ldr	r0, [r4, #0]
 80011de:	f008 fbc7 	bl	8009970 <_ZN8touchgfx3HAL16swapFrameBuffersEv>
            GPIO::set(GPIO::VSYNC_FREQ);
 80011e2:	2000      	movs	r0, #0
            //exiting active area
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_active_line);
            GPIO::clear(GPIO::VSYNC_FREQ);
            HAL::getInstance()->frontPorchEntered();
        }
    }
 80011e4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            GPIO::set(GPIO::VSYNC_FREQ);
 80011e8:	f7ff baa6 	b.w	8000738 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_active_line);
 80011ec:	f003 fba4 	bl	8004938 <HAL_LTDC_ProgramLineEvent>
            GPIO::clear(GPIO::VSYNC_FREQ);
 80011f0:	2000      	movs	r0, #0
 80011f2:	f7ff faa2 	bl	800073a <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
        return instance;
 80011f6:	6820      	ldr	r0, [r4, #0]
        allowDMATransfers();
 80011f8:	6803      	ldr	r3, [r0, #0]
    }
 80011fa:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80011fe:	699b      	ldr	r3, [r3, #24]
 8001200:	4718      	bx	r3
 8001202:	bf00      	nop
 8001204:	40016800 	.word	0x40016800
 8001208:	200013ba 	.word	0x200013ba
 800120c:	2001218c 	.word	0x2001218c
 8001210:	200013b8 	.word	0x200013b8

08001214 <SPI5_Write>:
/**
  * @brief  Writes a byte to device.
  * @param  Value: value to be written
  */
static void SPI5_Write(uint16_t Value)
{
 8001214:	b507      	push	{r0, r1, r2, lr}
  HAL_StatusTypeDef status = HAL_OK;
  
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 8001216:	4b06      	ldr	r3, [pc, #24]	; (8001230 <SPI5_Write+0x1c>)
{
 8001218:	a902      	add	r1, sp, #8
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 800121a:	681b      	ldr	r3, [r3, #0]
{
 800121c:	f821 0d02 	strh.w	r0, [r1, #-2]!
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 8001220:	2201      	movs	r2, #1
 8001222:	4804      	ldr	r0, [pc, #16]	; (8001234 <SPI5_Write+0x20>)
 8001224:	f004 f883 	bl	800532e <HAL_SPI_Transmit>
  if(status != HAL_OK)
  {
    /* Re-Initialize the BUS */
    SPI5_Error();
  }
}
 8001228:	b003      	add	sp, #12
 800122a:	f85d fb04 	ldr.w	pc, [sp], #4
 800122e:	bf00      	nop
 8001230:	20000010 	.word	0x20000010
 8001234:	200124fc 	.word	0x200124fc

08001238 <SystemClock_Config>:
{
 8001238:	b5f0      	push	{r4, r5, r6, r7, lr}
 800123a:	b0a1      	sub	sp, #132	; 0x84
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 800123c:	2210      	movs	r2, #16
 800123e:	2100      	movs	r1, #0
 8001240:	a80a      	add	r0, sp, #40	; 0x28
 8001242:	f017 fd5c 	bl	8018cfe <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8001246:	2214      	movs	r2, #20
 8001248:	2100      	movs	r1, #0
 800124a:	a803      	add	r0, sp, #12
 800124c:	f017 fd57 	bl	8018cfe <memset>
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 8001250:	2100      	movs	r1, #0
 8001252:	2230      	movs	r2, #48	; 0x30
 8001254:	a814      	add	r0, sp, #80	; 0x50
 8001256:	f017 fd52 	bl	8018cfe <memset>
  __HAL_RCC_PWR_CLK_ENABLE();
 800125a:	2400      	movs	r4, #0
 800125c:	4b22      	ldr	r3, [pc, #136]	; (80012e8 <SystemClock_Config+0xb0>)
 800125e:	9401      	str	r4, [sp, #4]
 8001260:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8001262:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 8001266:	641a      	str	r2, [r3, #64]	; 0x40
 8001268:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800126a:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800126e:	9301      	str	r3, [sp, #4]
 8001270:	9b01      	ldr	r3, [sp, #4]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8001272:	4b1e      	ldr	r3, [pc, #120]	; (80012ec <SystemClock_Config+0xb4>)
 8001274:	9402      	str	r4, [sp, #8]
 8001276:	681a      	ldr	r2, [r3, #0]
 8001278:	f442 4240 	orr.w	r2, r2, #49152	; 0xc000
 800127c:	601a      	str	r2, [r3, #0]
 800127e:	681b      	ldr	r3, [r3, #0]
 8001280:	f403 4340 	and.w	r3, r3, #49152	; 0xc000
 8001284:	9302      	str	r3, [sp, #8]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 8001286:	2201      	movs	r2, #1
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8001288:	9b02      	ldr	r3, [sp, #8]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 800128a:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 800128e:	e9cd 2308 	strd	r2, r3, [sp, #32]
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 8001292:	2502      	movs	r5, #2
 8001294:	f44f 0380 	mov.w	r3, #4194304	; 0x400000
 8001298:	e9cd 530e 	strd	r5, r3, [sp, #56]	; 0x38
  RCC_OscInitStruct.PLL.PLLN = 336;
 800129c:	2708      	movs	r7, #8
 800129e:	f44f 73a8 	mov.w	r3, #336	; 0x150
  RCC_OscInitStruct.PLL.PLLQ = 4;
 80012a2:	2604      	movs	r6, #4
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 80012a4:	a808      	add	r0, sp, #32
  RCC_OscInitStruct.PLL.PLLN = 336;
 80012a6:	e9cd 7310 	strd	r7, r3, [sp, #64]	; 0x40
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 80012aa:	9512      	str	r5, [sp, #72]	; 0x48
  RCC_OscInitStruct.PLL.PLLQ = 4;
 80012ac:	9613      	str	r6, [sp, #76]	; 0x4c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 80012ae:	f003 fb61 	bl	8004974 <HAL_RCC_OscConfig>
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 80012b2:	230f      	movs	r3, #15
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 80012b4:	e9cd 3503 	strd	r3, r5, [sp, #12]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 80012b8:	f44f 51a0 	mov.w	r1, #5120	; 0x1400
 80012bc:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 80012c0:	e9cd 1306 	strd	r1, r3, [sp, #24]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 80012c4:	a803      	add	r0, sp, #12
 80012c6:	2105      	movs	r1, #5
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 80012c8:	9405      	str	r4, [sp, #20]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 80012ca:	f003 fd27 	bl	8004d1c <HAL_RCC_ClockConfig>
  PeriphClkInitStruct.PLLSAI.PLLSAIN = 192;
 80012ce:	23c0      	movs	r3, #192	; 0xc0
 80012d0:	9318      	str	r3, [sp, #96]	; 0x60
  if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 80012d2:	a814      	add	r0, sp, #80	; 0x50
  PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_8;
 80012d4:	f44f 3300 	mov.w	r3, #131072	; 0x20000
  PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
 80012d8:	9714      	str	r7, [sp, #80]	; 0x50
  PeriphClkInitStruct.PLLSAI.PLLSAIR = 4;
 80012da:	961a      	str	r6, [sp, #104]	; 0x68
  PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_8;
 80012dc:	931d      	str	r3, [sp, #116]	; 0x74
  if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 80012de:	f003 fde5 	bl	8004eac <HAL_RCCEx_PeriphCLKConfig>
}
 80012e2:	b021      	add	sp, #132	; 0x84
 80012e4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80012e6:	bf00      	nop
 80012e8:	40023800 	.word	0x40023800
 80012ec:	40007000 	.word	0x40007000

080012f0 <main>:
{
 80012f0:	e92d 4880 	stmdb	sp!, {r7, fp, lr}
 80012f4:	b09f      	sub	sp, #124	; 0x7c
  __HAL_RCC_GPIOF_CLK_ENABLE();
 80012f6:	2400      	movs	r4, #0
 80012f8:	4dc7      	ldr	r5, [pc, #796]	; (8001618 <main+0x328>)
  hi2c3.Instance = I2C3;
 80012fa:	4ec8      	ldr	r6, [pc, #800]	; (800161c <main+0x32c>)
  hsdram1.Instance = FMC_SDRAM_DEVICE;
 80012fc:	f8df b360 	ldr.w	fp, [pc, #864]	; 8001660 <main+0x370>
  HAL_Init();
 8001300:	f002 f8ba 	bl	8003478 <HAL_Init>
  SystemClock_Config();
 8001304:	f7ff ff98 	bl	8001238 <SystemClock_Config>
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001308:	2214      	movs	r2, #20
 800130a:	2100      	movs	r1, #0
 800130c:	a811      	add	r0, sp, #68	; 0x44
 800130e:	f017 fcf6 	bl	8018cfe <memset>
  __HAL_RCC_GPIOF_CLK_ENABLE();
 8001312:	9402      	str	r4, [sp, #8]
 8001314:	6b2b      	ldr	r3, [r5, #48]	; 0x30
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001316:	48c2      	ldr	r0, [pc, #776]	; (8001620 <main+0x330>)
  __HAL_RCC_GPIOF_CLK_ENABLE();
 8001318:	f043 0320 	orr.w	r3, r3, #32
 800131c:	632b      	str	r3, [r5, #48]	; 0x30
 800131e:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 8001320:	f003 0320 	and.w	r3, r3, #32
 8001324:	9302      	str	r3, [sp, #8]
 8001326:	9b02      	ldr	r3, [sp, #8]
  __HAL_RCC_GPIOH_CLK_ENABLE();
 8001328:	9403      	str	r4, [sp, #12]
 800132a:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 800132c:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8001330:	632b      	str	r3, [r5, #48]	; 0x30
 8001332:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 8001334:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8001338:	9303      	str	r3, [sp, #12]
 800133a:	9b03      	ldr	r3, [sp, #12]
  __HAL_RCC_GPIOC_CLK_ENABLE();
 800133c:	9404      	str	r4, [sp, #16]
 800133e:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 8001340:	f043 0304 	orr.w	r3, r3, #4
 8001344:	632b      	str	r3, [r5, #48]	; 0x30
 8001346:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 8001348:	f003 0304 	and.w	r3, r3, #4
 800134c:	9304      	str	r3, [sp, #16]
 800134e:	9b04      	ldr	r3, [sp, #16]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 8001350:	9405      	str	r4, [sp, #20]
 8001352:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 8001354:	f043 0301 	orr.w	r3, r3, #1
 8001358:	632b      	str	r3, [r5, #48]	; 0x30
 800135a:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 800135c:	f003 0301 	and.w	r3, r3, #1
 8001360:	9305      	str	r3, [sp, #20]
 8001362:	9b05      	ldr	r3, [sp, #20]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 8001364:	9406      	str	r4, [sp, #24]
 8001366:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 8001368:	f043 0302 	orr.w	r3, r3, #2
 800136c:	632b      	str	r3, [r5, #48]	; 0x30
 800136e:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 8001370:	f003 0302 	and.w	r3, r3, #2
 8001374:	9306      	str	r3, [sp, #24]
 8001376:	9b06      	ldr	r3, [sp, #24]
  __HAL_RCC_GPIOG_CLK_ENABLE();
 8001378:	9407      	str	r4, [sp, #28]
 800137a:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 800137c:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8001380:	632b      	str	r3, [r5, #48]	; 0x30
 8001382:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 8001384:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8001388:	9307      	str	r3, [sp, #28]
 800138a:	9b07      	ldr	r3, [sp, #28]
  __HAL_RCC_GPIOE_CLK_ENABLE();
 800138c:	9408      	str	r4, [sp, #32]
 800138e:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 8001390:	f043 0310 	orr.w	r3, r3, #16
 8001394:	632b      	str	r3, [r5, #48]	; 0x30
 8001396:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 8001398:	f003 0310 	and.w	r3, r3, #16
 800139c:	9308      	str	r3, [sp, #32]
 800139e:	9b08      	ldr	r3, [sp, #32]
  __HAL_RCC_GPIOD_CLK_ENABLE();
 80013a0:	9409      	str	r4, [sp, #36]	; 0x24
 80013a2:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 80013a4:	f043 0308 	orr.w	r3, r3, #8
 80013a8:	632b      	str	r3, [r5, #48]	; 0x30
 80013aa:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 80013ac:	f003 0308 	and.w	r3, r3, #8
 80013b0:	9309      	str	r3, [sp, #36]	; 0x24
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 80013b2:	4622      	mov	r2, r4
 80013b4:	2104      	movs	r1, #4
  __HAL_RCC_GPIOD_CLK_ENABLE();
 80013b6:	9b09      	ldr	r3, [sp, #36]	; 0x24
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 80013b8:	f002 fce4 	bl	8003d84 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_12|GPIO_PIN_13, GPIO_PIN_RESET);
 80013bc:	4622      	mov	r2, r4
 80013be:	f44f 5140 	mov.w	r1, #12288	; 0x3000
 80013c2:	4898      	ldr	r0, [pc, #608]	; (8001624 <main+0x334>)
 80013c4:	f002 fcde 	bl	8003d84 <HAL_GPIO_WritePin>
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80013c8:	2701      	movs	r7, #1
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 80013ca:	f04f 0802 	mov.w	r8, #2
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80013ce:	f04f 0904 	mov.w	r9, #4
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80013d2:	a911      	add	r1, sp, #68	; 0x44
 80013d4:	4892      	ldr	r0, [pc, #584]	; (8001620 <main+0x330>)
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 80013d6:	f8cd 8050 	str.w	r8, [sp, #80]	; 0x50
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80013da:	e9cd 9711 	strd	r9, r7, [sp, #68]	; 0x44
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80013de:	9413      	str	r4, [sp, #76]	; 0x4c
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80013e0:	f002 fbe4 	bl	8003bac <HAL_GPIO_Init>
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80013e4:	a911      	add	r1, sp, #68	; 0x44
  GPIO_InitStruct.Pin = GPIO_PIN_12|GPIO_PIN_13;
 80013e6:	f44f 5340 	mov.w	r3, #12288	; 0x3000
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80013ea:	488e      	ldr	r0, [pc, #568]	; (8001624 <main+0x334>)
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80013ec:	e9cd 3711 	strd	r3, r7, [sp, #68]	; 0x44
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 80013f0:	e9cd 4813 	strd	r4, r8, [sp, #76]	; 0x4c
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80013f4:	f002 fbda 	bl	8003bac <HAL_GPIO_Init>
  hcrc.Instance = CRC;
 80013f8:	488b      	ldr	r0, [pc, #556]	; (8001628 <main+0x338>)
 80013fa:	4b8c      	ldr	r3, [pc, #560]	; (800162c <main+0x33c>)
 80013fc:	6003      	str	r3, [r0, #0]
  if (HAL_CRC_Init(&hcrc) != HAL_OK)
 80013fe:	f002 f8e3 	bl	80035c8 <HAL_CRC_Init>
  hi2c3.Init.ClockSpeed = 100000;
 8001402:	4a8b      	ldr	r2, [pc, #556]	; (8001630 <main+0x340>)
 8001404:	4b8b      	ldr	r3, [pc, #556]	; (8001634 <main+0x344>)
  hi2c3.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 8001406:	6234      	str	r4, [r6, #32]
  hi2c3.Init.ClockSpeed = 100000;
 8001408:	e9c6 2300 	strd	r2, r3, [r6]
  if (HAL_I2C_Init(&hi2c3) != HAL_OK)
 800140c:	4630      	mov	r0, r6
  hi2c3.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 800140e:	f44f 4380 	mov.w	r3, #16384	; 0x4000
  hi2c3.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 8001412:	e9c6 3404 	strd	r3, r4, [r6, #16]
  hi2c3.Init.OwnAddress1 = 0;
 8001416:	e9c6 4402 	strd	r4, r4, [r6, #8]
  hi2c3.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 800141a:	e9c6 4406 	strd	r4, r4, [r6, #24]
  if (HAL_I2C_Init(&hi2c3) != HAL_OK)
 800141e:	f002 fe8b 	bl	8004138 <HAL_I2C_Init>
  if (HAL_I2CEx_ConfigAnalogFilter(&hi2c3, I2C_ANALOGFILTER_DISABLE) != HAL_OK)
 8001422:	2110      	movs	r1, #16
 8001424:	4630      	mov	r0, r6
 8001426:	f003 f8cf 	bl	80045c8 <HAL_I2CEx_ConfigAnalogFilter>
  if (HAL_I2CEx_ConfigDigitalFilter(&hi2c3, 0) != HAL_OK)
 800142a:	4621      	mov	r1, r4
 800142c:	4630      	mov	r0, r6
 800142e:	f003 f8ea 	bl	8004606 <HAL_I2CEx_ConfigDigitalFilter>
  hspi5.Instance = SPI5;
 8001432:	4881      	ldr	r0, [pc, #516]	; (8001638 <main+0x348>)
  hspi5.Init.Mode = SPI_MODE_MASTER;
 8001434:	4981      	ldr	r1, [pc, #516]	; (800163c <main+0x34c>)
  hspi5.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 8001436:	6284      	str	r4, [r0, #40]	; 0x28
  hspi5.Init.Mode = SPI_MODE_MASTER;
 8001438:	f44f 7382 	mov.w	r3, #260	; 0x104
 800143c:	e9c0 1300 	strd	r1, r3, [r0]
  hspi5.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_16;
 8001440:	f44f 7600 	mov.w	r6, #512	; 0x200
 8001444:	2318      	movs	r3, #24
 8001446:	e9c0 6306 	strd	r6, r3, [r0, #24]
  hspi5.Init.CRCPolynomial = 10;
 800144a:	230a      	movs	r3, #10
 800144c:	62c3      	str	r3, [r0, #44]	; 0x2c
  hspi5.Init.DataSize = SPI_DATASIZE_8BIT;
 800144e:	e9c0 4402 	strd	r4, r4, [r0, #8]
  hspi5.Init.CLKPhase = SPI_PHASE_1EDGE;
 8001452:	e9c0 4404 	strd	r4, r4, [r0, #16]
  hspi5.Init.TIMode = SPI_TIMODE_DISABLE;
 8001456:	e9c0 4408 	strd	r4, r4, [r0, #32]
  if (HAL_SPI_Init(&hspi5) != HAL_OK)
 800145a:	f003 ff2b 	bl	80052b4 <HAL_SPI_Init>
  hsdram1.Instance = FMC_SDRAM_DEVICE;
 800145e:	4a78      	ldr	r2, [pc, #480]	; (8001640 <main+0x350>)
  SdramTiming.LoadToActiveDelay = 2;
 8001460:	f8cd 8044 	str.w	r8, [sp, #68]	; 0x44
  hsdram1.Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
 8001464:	f04f 0a10 	mov.w	sl, #16
  hsdram1.Init.SDBank = FMC_SDRAM_BANK2;
 8001468:	e9cb 2700 	strd	r2, r7, [fp]
  hsdram1.Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
 800146c:	2240      	movs	r2, #64	; 0x40
 800146e:	e9cb a204 	strd	sl, r2, [fp, #16]
  hsdram1.Init.CASLatency = FMC_SDRAM_CAS_LATENCY_3;
 8001472:	f44f 72c0 	mov.w	r2, #384	; 0x180
  hsdram1.Init.WriteProtection = FMC_SDRAM_WRITE_PROTECTION_DISABLE;
 8001476:	e9cb 2406 	strd	r2, r4, [fp, #24]
  hsdram1.Init.SDClockPeriod = FMC_SDRAM_CLOCK_PERIOD_2;
 800147a:	f44f 6200 	mov.w	r2, #2048	; 0x800
  hsdram1.Init.ReadBurst = FMC_SDRAM_RBURST_DISABLE;
 800147e:	e9cb 2408 	strd	r2, r4, [fp, #32]
  hsdram1.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_1;
 8001482:	f44f 5200 	mov.w	r2, #8192	; 0x2000
  SdramTiming.WriteRecoveryTime = 3;
 8001486:	2303      	movs	r3, #3
  hsdram1.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_1;
 8001488:	f8cb 2028 	str.w	r2, [fp, #40]	; 0x28
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 800148c:	a911      	add	r1, sp, #68	; 0x44
  SdramTiming.ExitSelfRefreshDelay = 7;
 800148e:	2207      	movs	r2, #7
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 8001490:	4658      	mov	r0, fp
  SdramTiming.RPDelay = 2;
 8001492:	e9cd 3815 	strd	r3, r8, [sp, #84]	; 0x54
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 8001496:	2608      	movs	r6, #8
  hsdram1.Init.RowBitsNumber = FMC_SDRAM_ROW_BITS_NUM_12;
 8001498:	e9cb 4902 	strd	r4, r9, [fp, #8]
  SdramTiming.SelfRefreshTime = 4;
 800149c:	e9cd 2912 	strd	r2, r9, [sp, #72]	; 0x48
  SdramTiming.RowCycleDelay = 7;
 80014a0:	9214      	str	r2, [sp, #80]	; 0x50
  SdramTiming.RCDDelay = 2;
 80014a2:	f8cd 805c 	str.w	r8, [sp, #92]	; 0x5c
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 80014a6:	f003 fe2b 	bl	8005100 <HAL_SDRAM_Init>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 80014aa:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80014ae:	a90d      	add	r1, sp, #52	; 0x34
 80014b0:	4658      	mov	r0, fp
  Command->AutoRefreshNumber       = 1;
 80014b2:	e9cd 670e 	strd	r6, r7, [sp, #56]	; 0x38
  Command->CommandMode             = FMC_SDRAM_CMD_CLK_ENABLE;
 80014b6:	970d      	str	r7, [sp, #52]	; 0x34
 __IO uint32_t tmpmrd =0;
 80014b8:	940a      	str	r4, [sp, #40]	; 0x28
  Command->ModeRegisterDefinition  = 0;
 80014ba:	9410      	str	r4, [sp, #64]	; 0x40
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 80014bc:	f003 fe40 	bl	8005140 <HAL_SDRAM_SendCommand>
  HAL_Delay(1);
 80014c0:	4638      	mov	r0, r7
 80014c2:	f002 f805 	bl	80034d0 <HAL_Delay>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);  
 80014c6:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80014ca:	a90d      	add	r1, sp, #52	; 0x34
 80014cc:	4658      	mov	r0, fp
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 80014ce:	e9cd 860d 	strd	r8, r6, [sp, #52]	; 0x34
  Command->ModeRegisterDefinition  = 0;
 80014d2:	e9cd 740f 	strd	r7, r4, [sp, #60]	; 0x3c
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);  
 80014d6:	f003 fe33 	bl	8005140 <HAL_SDRAM_SendCommand>
  Command->CommandMode             = FMC_SDRAM_CMD_AUTOREFRESH_MODE;
 80014da:	2303      	movs	r3, #3
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 80014dc:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80014e0:	a90d      	add	r1, sp, #52	; 0x34
 80014e2:	4658      	mov	r0, fp
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 80014e4:	e9cd 360d 	strd	r3, r6, [sp, #52]	; 0x34
  Command->ModeRegisterDefinition  = 0;
 80014e8:	e9cd 940f 	strd	r9, r4, [sp, #60]	; 0x3c
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 80014ec:	f003 fe28 	bl	8005140 <HAL_SDRAM_SendCommand>
  tmpmrd = (uint32_t)SDRAM_MODEREG_BURST_LENGTH_1          |
 80014f0:	f44f 720c 	mov.w	r2, #560	; 0x230
 80014f4:	920a      	str	r2, [sp, #40]	; 0x28
  Command->ModeRegisterDefinition  = tmpmrd;
 80014f6:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80014f8:	9210      	str	r2, [sp, #64]	; 0x40
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 80014fa:	a90d      	add	r1, sp, #52	; 0x34
 80014fc:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8001500:	4658      	mov	r0, fp
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 8001502:	e9cd 960d 	strd	r9, r6, [sp, #52]	; 0x34
  Command->AutoRefreshNumber       = 1;
 8001506:	970f      	str	r7, [sp, #60]	; 0x3c
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001508:	f003 fe1a 	bl	8005140 <HAL_SDRAM_SendCommand>
  HAL_SDRAM_ProgramRefreshRate(hsdram, REFRESH_COUNT); 
 800150c:	f240 516a 	movw	r1, #1386	; 0x56a
 8001510:	4658      	mov	r0, fp
 8001512:	f003 fe2c 	bl	800516e <HAL_SDRAM_ProgramRefreshRate>
  LTDC_LayerCfgTypeDef pLayerCfg = {0};
 8001516:	2234      	movs	r2, #52	; 0x34
 8001518:	4621      	mov	r1, r4
 800151a:	a811      	add	r0, sp, #68	; 0x44
 800151c:	f017 fbef 	bl	8018cfe <memset>
  hltdc.Instance = LTDC;
 8001520:	4e48      	ldr	r6, [pc, #288]	; (8001644 <main+0x354>)
 8001522:	4b49      	ldr	r3, [pc, #292]	; (8001648 <main+0x358>)
  hltdc.Init.DEPolarity = LTDC_DEPOLARITY_AL;
 8001524:	6134      	str	r4, [r6, #16]
  hltdc.Instance = LTDC;
 8001526:	e9c6 3400 	strd	r3, r4, [r6]
  hltdc.Init.PCPolarity = LTDC_PCPOLARITY_IPC;
 800152a:	2309      	movs	r3, #9
  hltdc.Init.AccumulatedHBP = 29;
 800152c:	f04f 0c1d 	mov.w	ip, #29
  hltdc.Init.HorizontalSync = 9;
 8001530:	e9c6 3705 	strd	r3, r7, [r6, #20]
  hltdc.Init.AccumulatedHBP = 29;
 8001534:	2303      	movs	r3, #3
 8001536:	e9c6 c307 	strd	ip, r3, [r6, #28]
  hltdc.Init.AccumulatedActiveW = 269;
 800153a:	f240 1e0d 	movw	lr, #269	; 0x10d
 800153e:	f240 1343 	movw	r3, #323	; 0x143
 8001542:	e9c6 e309 	strd	lr, r3, [r6, #36]	; 0x24
  hltdc.Init.TotalWidth = 279;
 8001546:	f240 1b17 	movw	fp, #279	; 0x117
 800154a:	f240 1347 	movw	r3, #327	; 0x147
 800154e:	e9c6 b30b 	strd	fp, r3, [r6, #44]	; 0x2c
  hltdc.Init.VSPolarity = LTDC_VSPOLARITY_AL;
 8001552:	e9c6 4402 	strd	r4, r4, [r6, #8]
  hltdc.Init.TotalHeigh = 327;
 8001556:	86b4      	strh	r4, [r6, #52]	; 0x34
  hltdc.Init.Backcolor.Green = 0;
 8001558:	f886 4036 	strb.w	r4, [r6, #54]	; 0x36
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 800155c:	4630      	mov	r0, r6
 800155e:	f003 f8f7 	bl	8004750 <HAL_LTDC_Init>
  pLayerCfg.PixelFormat = LTDC_PIXEL_FORMAT_RGB565;
 8001562:	21ff      	movs	r1, #255	; 0xff
  pLayerCfg.WindowX0 = 0;
 8001564:	22f0      	movs	r2, #240	; 0xf0
  pLayerCfg.Alpha = 255;
 8001566:	e9cd 1416 	strd	r1, r4, [sp, #88]	; 0x58
  pLayerCfg.BlendingFactor1 = LTDC_BLENDING_FACTOR1_CA;
 800156a:	f44f 6080 	mov.w	r0, #1024	; 0x400
 800156e:	2105      	movs	r1, #5
  pLayerCfg.WindowY0 = 0;
 8001570:	f44f 73a0 	mov.w	r3, #320	; 0x140
  pLayerCfg.BlendingFactor1 = LTDC_BLENDING_FACTOR1_CA;
 8001574:	e9cd 0118 	strd	r0, r1, [sp, #96]	; 0x60
  pLayerCfg.WindowX1 = 240;
 8001578:	e9cd 2412 	strd	r2, r4, [sp, #72]	; 0x48
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 800157c:	a911      	add	r1, sp, #68	; 0x44
  pLayerCfg.FBStartAdress = 0;
 800157e:	e9cd 421a 	strd	r4, r2, [sp, #104]	; 0x68
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 8001582:	4630      	mov	r0, r6
 8001584:	4622      	mov	r2, r4
  pLayerCfg.WindowY1 = 320;
 8001586:	e9cd 3814 	strd	r3, r8, [sp, #80]	; 0x50
  LcdDrv = &ili9341_drv;
 800158a:	4e30      	ldr	r6, [pc, #192]	; (800164c <main+0x35c>)
  pLayerCfg.ImageWidth = 240;
 800158c:	931c      	str	r3, [sp, #112]	; 0x70
  pLayerCfg.WindowX0 = 0;
 800158e:	9411      	str	r4, [sp, #68]	; 0x44
  pLayerCfg.ImageHeight = 320;
 8001590:	f8ad 4074 	strh.w	r4, [sp, #116]	; 0x74
  pLayerCfg.Backcolor.Green = 0;
 8001594:	f88d 4076 	strb.w	r4, [sp, #118]	; 0x76
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 8001598:	f003 f9a5 	bl	80048e6 <HAL_LTDC_ConfigLayer>
  LcdDrv = &ili9341_drv;
 800159c:	4b2c      	ldr	r3, [pc, #176]	; (8001650 <main+0x360>)
 800159e:	6033      	str	r3, [r6, #0]
  LcdDrv->Init();
 80015a0:	681b      	ldr	r3, [r3, #0]
 80015a2:	4798      	blx	r3
  LcdDrv->DisplayOff();
 80015a4:	6833      	ldr	r3, [r6, #0]
  hdma2d.Instance = DMA2D;
 80015a6:	4e2b      	ldr	r6, [pc, #172]	; (8001654 <main+0x364>)
  LcdDrv->DisplayOff();
 80015a8:	68db      	ldr	r3, [r3, #12]
 80015aa:	4798      	blx	r3
  hdma2d.Instance = DMA2D;
 80015ac:	4b2a      	ldr	r3, [pc, #168]	; (8001658 <main+0x368>)
  hdma2d.LayerCfg[1].InputColorMode = DMA2D_INPUT_RGB565;
 80015ae:	e9c6 480a 	strd	r4, r8, [r6, #40]	; 0x28
  hdma2d.LayerCfg[1].InputAlpha = 0;
 80015b2:	e9c6 440c 	strd	r4, r4, [r6, #48]	; 0x30
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
 80015b6:	4630      	mov	r0, r6
  hdma2d.Init.Mode = DMA2D_M2M;
 80015b8:	e9c6 3400 	strd	r3, r4, [r6]
  hdma2d.Init.OutputOffset = 0;
 80015bc:	e9c6 8402 	strd	r8, r4, [r6, #8]
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
 80015c0:	f002 f922 	bl	8003808 <HAL_DMA2D_Init>
  if (HAL_DMA2D_ConfigLayer(&hdma2d, 1) != HAL_OK)
 80015c4:	4639      	mov	r1, r7
 80015c6:	4630      	mov	r0, r6
 80015c8:	f002 faa6 	bl	8003b18 <HAL_DMA2D_ConfigLayer>
  MX_TouchGFX_Init();
 80015cc:	f7ff f809 	bl	80005e2 <MX_TouchGFX_Init>
  */
static void MX_DMA_Init(void)
{

  /* DMA controller clock enable */
  __HAL_RCC_DMA1_CLK_ENABLE();
 80015d0:	9401      	str	r4, [sp, #4]
 80015d2:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 80015d4:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 80015d8:	632b      	str	r3, [r5, #48]	; 0x30
 80015da:	6b2b      	ldr	r3, [r5, #48]	; 0x30
  htim2.Instance = TIM2;
 80015dc:	4d1f      	ldr	r5, [pc, #124]	; (800165c <main+0x36c>)
  __HAL_RCC_DMA1_CLK_ENABLE();
 80015de:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 80015e2:	9301      	str	r3, [sp, #4]
  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 80015e4:	4652      	mov	r2, sl
 80015e6:	4621      	mov	r1, r4
 80015e8:	a80d      	add	r0, sp, #52	; 0x34
  __HAL_RCC_DMA1_CLK_ENABLE();
 80015ea:	9b01      	ldr	r3, [sp, #4]
  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 80015ec:	f017 fb87 	bl	8018cfe <memset>
  TIM_OC_InitTypeDef sConfigOC = {0};
 80015f0:	221c      	movs	r2, #28
 80015f2:	4621      	mov	r1, r4
 80015f4:	a811      	add	r0, sp, #68	; 0x44
  htim2.Init.Prescaler = 167;
 80015f6:	f04f 0ba7 	mov.w	fp, #167	; 0xa7
  htim2.Init.Period = 9999;
 80015fa:	f242 780f 	movw	r8, #9999	; 0x270f
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 80015fe:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
  TIM_OC_InitTypeDef sConfigOC = {0};
 8001602:	f017 fb7c 	bl	8018cfe <memset>
  htim2.Init.Prescaler = 167;
 8001606:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
  if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 800160a:	4628      	mov	r0, r5
  htim2.Init.Prescaler = 167;
 800160c:	e9c5 3b00 	strd	r3, fp, [r5]
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8001610:	f44f 5780 	mov.w	r7, #4096	; 0x1000
 8001614:	e026      	b.n	8001664 <main+0x374>
 8001616:	bf00      	nop
 8001618:	40023800 	.word	0x40023800
 800161c:	200124a8 	.word	0x200124a8
 8001620:	40020800 	.word	0x40020800
 8001624:	40020c00 	.word	0x40020c00
 8001628:	20012594 	.word	0x20012594
 800162c:	40023000 	.word	0x40023000
 8001630:	40005c00 	.word	0x40005c00
 8001634:	000186a0 	.word	0x000186a0
 8001638:	200124fc 	.word	0x200124fc
 800163c:	40015000 	.word	0x40015000
 8001640:	a0000140 	.word	0xa0000140
 8001644:	2001267c 	.word	0x2001267c
 8001648:	40016800 	.word	0x40016800
 800164c:	200013bc 	.word	0x200013bc
 8001650:	20000014 	.word	0x20000014
 8001654:	200127e8 	.word	0x200127e8
 8001658:	4002b000 	.word	0x4002b000
 800165c:	20012828 	.word	0x20012828
 8001660:	200128c8 	.word	0x200128c8
  htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 8001664:	60ac      	str	r4, [r5, #8]
  htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8001666:	e9c5 8403 	strd	r8, r4, [r5, #12]
  htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 800166a:	61ac      	str	r4, [r5, #24]
  if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 800166c:	f004 fa80 	bl	8005b70 <HAL_TIM_Base_Init>
  if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 8001670:	a90d      	add	r1, sp, #52	; 0x34
 8001672:	4628      	mov	r0, r5
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8001674:	970d      	str	r7, [sp, #52]	; 0x34
  if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 8001676:	f004 fb51 	bl	8005d1c <HAL_TIM_ConfigClockSource>
  if (HAL_TIM_PWM_Init(&htim2) != HAL_OK)
 800167a:	4628      	mov	r0, r5
 800167c:	f004 fa92 	bl	8005ba4 <HAL_TIM_PWM_Init>
  if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 8001680:	a90b      	add	r1, sp, #44	; 0x2c
 8001682:	4628      	mov	r0, r5
  sConfigOC.OCMode = TIM_OCMODE_PWM1;
 8001684:	2660      	movs	r6, #96	; 0x60
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8001686:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
  if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 800168a:	f004 fc73 	bl	8005f74 <HAL_TIMEx_MasterConfigSynchronization>
  if (HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_4) != HAL_OK)
 800168e:	220c      	movs	r2, #12
 8001690:	a911      	add	r1, sp, #68	; 0x44
 8001692:	4628      	mov	r0, r5
  sConfigOC.Pulse = 0;
 8001694:	e9cd 6411 	strd	r6, r4, [sp, #68]	; 0x44
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 8001698:	9413      	str	r4, [sp, #76]	; 0x4c
  sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 800169a:	9415      	str	r4, [sp, #84]	; 0x54
  if (HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_4) != HAL_OK)
 800169c:	f004 fad2 	bl	8005c44 <HAL_TIM_PWM_ConfigChannel>
  HAL_TIM_MspPostInit(&htim2);
 80016a0:	4628      	mov	r0, r5
 80016a2:	f000 fc87 	bl	8001fb4 <HAL_TIM_MspPostInit>
  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 80016a6:	4652      	mov	r2, sl
 80016a8:	4621      	mov	r1, r4
 80016aa:	a80d      	add	r0, sp, #52	; 0x34
  htim3.Instance = TIM3;
 80016ac:	4d4d      	ldr	r5, [pc, #308]	; (80017e4 <main+0x4f4>)
  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 80016ae:	f017 fb26 	bl	8018cfe <memset>
  TIM_OC_InitTypeDef sConfigOC = {0};
 80016b2:	221c      	movs	r2, #28
 80016b4:	4621      	mov	r1, r4
 80016b6:	a811      	add	r0, sp, #68	; 0x44
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 80016b8:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
  TIM_OC_InitTypeDef sConfigOC = {0};
 80016bc:	f017 fb1f 	bl	8018cfe <memset>
  htim3.Instance = TIM3;
 80016c0:	4b49      	ldr	r3, [pc, #292]	; (80017e8 <main+0x4f8>)
  htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 80016c2:	612c      	str	r4, [r5, #16]
  if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 80016c4:	4628      	mov	r0, r5
  htim3.Init.Prescaler = 167;
 80016c6:	e9c5 3b00 	strd	r3, fp, [r5]
  htim3.Init.Period = 9999;
 80016ca:	e9c5 4802 	strd	r4, r8, [r5, #8]
  htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 80016ce:	61ac      	str	r4, [r5, #24]
  if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 80016d0:	f004 fa4e 	bl	8005b70 <HAL_TIM_Base_Init>
  if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 80016d4:	a90d      	add	r1, sp, #52	; 0x34
 80016d6:	4628      	mov	r0, r5
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 80016d8:	970d      	str	r7, [sp, #52]	; 0x34
  if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 80016da:	f004 fb1f 	bl	8005d1c <HAL_TIM_ConfigClockSource>
  if (HAL_TIM_PWM_Init(&htim3) != HAL_OK)
 80016de:	4628      	mov	r0, r5
 80016e0:	f004 fa60 	bl	8005ba4 <HAL_TIM_PWM_Init>
  if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 80016e4:	a90b      	add	r1, sp, #44	; 0x2c
 80016e6:	4628      	mov	r0, r5
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 80016e8:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
  if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 80016ec:	f004 fc42 	bl	8005f74 <HAL_TIMEx_MasterConfigSynchronization>
  if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_2) != HAL_OK)
 80016f0:	464a      	mov	r2, r9
 80016f2:	a911      	add	r1, sp, #68	; 0x44
 80016f4:	4628      	mov	r0, r5
  sConfigOC.Pulse = 0;
 80016f6:	e9cd 6411 	strd	r6, r4, [sp, #68]	; 0x44
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 80016fa:	9413      	str	r4, [sp, #76]	; 0x4c
  sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 80016fc:	9415      	str	r4, [sp, #84]	; 0x54
  if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_2) != HAL_OK)
 80016fe:	f004 faa1 	bl	8005c44 <HAL_TIM_PWM_ConfigChannel>
  HAL_TIM_MspPostInit(&htim3);
 8001702:	4628      	mov	r0, r5
 8001704:	f000 fc56 	bl	8001fb4 <HAL_TIM_MspPostInit>
  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 8001708:	4652      	mov	r2, sl
 800170a:	4621      	mov	r1, r4
 800170c:	a80d      	add	r0, sp, #52	; 0x34
  htim4.Instance = TIM4;
 800170e:	4d37      	ldr	r5, [pc, #220]	; (80017ec <main+0x4fc>)
  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 8001710:	f017 faf5 	bl	8018cfe <memset>
  TIM_OC_InitTypeDef sConfigOC = {0};
 8001714:	221c      	movs	r2, #28
 8001716:	4621      	mov	r1, r4
 8001718:	a811      	add	r0, sp, #68	; 0x44
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 800171a:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
  TIM_OC_InitTypeDef sConfigOC = {0};
 800171e:	f017 faee 	bl	8018cfe <memset>
  htim4.Instance = TIM4;
 8001722:	4b33      	ldr	r3, [pc, #204]	; (80017f0 <main+0x500>)
  htim4.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8001724:	612c      	str	r4, [r5, #16]
  if (HAL_TIM_Base_Init(&htim4) != HAL_OK)
 8001726:	4628      	mov	r0, r5
  htim4.Init.Prescaler = 167;
 8001728:	e9c5 3b00 	strd	r3, fp, [r5]
  htim4.Init.Period = 9999;
 800172c:	e9c5 4802 	strd	r4, r8, [r5, #8]
  htim4.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8001730:	61ac      	str	r4, [r5, #24]
  if (HAL_TIM_Base_Init(&htim4) != HAL_OK)
 8001732:	f004 fa1d 	bl	8005b70 <HAL_TIM_Base_Init>
  if (HAL_TIM_ConfigClockSource(&htim4, &sClockSourceConfig) != HAL_OK)
 8001736:	a90d      	add	r1, sp, #52	; 0x34
 8001738:	4628      	mov	r0, r5
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 800173a:	970d      	str	r7, [sp, #52]	; 0x34
  if (HAL_TIM_ConfigClockSource(&htim4, &sClockSourceConfig) != HAL_OK)
 800173c:	f004 faee 	bl	8005d1c <HAL_TIM_ConfigClockSource>
  if (HAL_TIM_PWM_Init(&htim4) != HAL_OK)
 8001740:	4628      	mov	r0, r5
 8001742:	f004 fa2f 	bl	8005ba4 <HAL_TIM_PWM_Init>
  if (HAL_TIMEx_MasterConfigSynchronization(&htim4, &sMasterConfig) != HAL_OK)
 8001746:	a90b      	add	r1, sp, #44	; 0x2c
 8001748:	4628      	mov	r0, r5
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 800174a:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
  if (HAL_TIMEx_MasterConfigSynchronization(&htim4, &sMasterConfig) != HAL_OK)
 800174e:	f004 fc11 	bl	8005f74 <HAL_TIMEx_MasterConfigSynchronization>
  if (HAL_TIM_PWM_ConfigChannel(&htim4, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 8001752:	4622      	mov	r2, r4
 8001754:	a911      	add	r1, sp, #68	; 0x44
 8001756:	4628      	mov	r0, r5
  sConfigOC.Pulse = 0;
 8001758:	e9cd 6411 	strd	r6, r4, [sp, #68]	; 0x44
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 800175c:	9413      	str	r4, [sp, #76]	; 0x4c
  sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 800175e:	9415      	str	r4, [sp, #84]	; 0x54
  if (HAL_TIM_PWM_ConfigChannel(&htim4, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 8001760:	f004 fa70 	bl	8005c44 <HAL_TIM_PWM_ConfigChannel>
  HAL_TIM_MspPostInit(&htim4);
 8001764:	4628      	mov	r0, r5
 8001766:	f000 fc25 	bl	8001fb4 <HAL_TIM_MspPostInit>
  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 800176a:	4652      	mov	r2, sl
 800176c:	4621      	mov	r1, r4
 800176e:	a80d      	add	r0, sp, #52	; 0x34
  htim5.Instance = TIM5;
 8001770:	4d20      	ldr	r5, [pc, #128]	; (80017f4 <main+0x504>)
  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 8001772:	f017 fac4 	bl	8018cfe <memset>
  TIM_OC_InitTypeDef sConfigOC = {0};
 8001776:	221c      	movs	r2, #28
 8001778:	4621      	mov	r1, r4
 800177a:	a811      	add	r0, sp, #68	; 0x44
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 800177c:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
  TIM_OC_InitTypeDef sConfigOC = {0};
 8001780:	f017 fabd 	bl	8018cfe <memset>
  htim5.Instance = TIM5;
 8001784:	4b1c      	ldr	r3, [pc, #112]	; (80017f8 <main+0x508>)
  htim5.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8001786:	612c      	str	r4, [r5, #16]
  if (HAL_TIM_Base_Init(&htim5) != HAL_OK)
 8001788:	4628      	mov	r0, r5
  htim5.Init.Prescaler = 167;
 800178a:	e9c5 3b00 	strd	r3, fp, [r5]
  htim5.Init.Period = 9999;
 800178e:	e9c5 4802 	strd	r4, r8, [r5, #8]
  htim5.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8001792:	61ac      	str	r4, [r5, #24]
  if (HAL_TIM_Base_Init(&htim5) != HAL_OK)
 8001794:	f004 f9ec 	bl	8005b70 <HAL_TIM_Base_Init>
  if (HAL_TIM_ConfigClockSource(&htim5, &sClockSourceConfig) != HAL_OK)
 8001798:	a90d      	add	r1, sp, #52	; 0x34
 800179a:	4628      	mov	r0, r5
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 800179c:	970d      	str	r7, [sp, #52]	; 0x34
  if (HAL_TIM_ConfigClockSource(&htim5, &sClockSourceConfig) != HAL_OK)
 800179e:	f004 fabd 	bl	8005d1c <HAL_TIM_ConfigClockSource>
  if (HAL_TIM_PWM_Init(&htim5) != HAL_OK)
 80017a2:	4628      	mov	r0, r5
 80017a4:	f004 f9fe 	bl	8005ba4 <HAL_TIM_PWM_Init>
  if (HAL_TIMEx_MasterConfigSynchronization(&htim5, &sMasterConfig) != HAL_OK)
 80017a8:	a90b      	add	r1, sp, #44	; 0x2c
 80017aa:	4628      	mov	r0, r5
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 80017ac:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
  if (HAL_TIMEx_MasterConfigSynchronization(&htim5, &sMasterConfig) != HAL_OK)
 80017b0:	f004 fbe0 	bl	8005f74 <HAL_TIMEx_MasterConfigSynchronization>
  if (HAL_TIM_PWM_ConfigChannel(&htim5, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 80017b4:	4622      	mov	r2, r4
 80017b6:	a911      	add	r1, sp, #68	; 0x44
 80017b8:	4628      	mov	r0, r5
  sConfigOC.Pulse = 0;
 80017ba:	e9cd 6411 	strd	r6, r4, [sp, #68]	; 0x44
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 80017be:	9413      	str	r4, [sp, #76]	; 0x4c
  sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 80017c0:	9415      	str	r4, [sp, #84]	; 0x54
  if (HAL_TIM_PWM_ConfigChannel(&htim5, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 80017c2:	f004 fa3f 	bl	8005c44 <HAL_TIM_PWM_ConfigChannel>
  HAL_TIM_MspPostInit(&htim5);
 80017c6:	4628      	mov	r0, r5
 80017c8:	f000 fbf4 	bl	8001fb4 <HAL_TIM_MspPostInit>
  osKernelInitialize();
 80017cc:	f004 fcb4 	bl	8006138 <osKernelInitialize>
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 80017d0:	4a0a      	ldr	r2, [pc, #40]	; (80017fc <main+0x50c>)
 80017d2:	480b      	ldr	r0, [pc, #44]	; (8001800 <main+0x510>)
 80017d4:	4621      	mov	r1, r4
 80017d6:	f004 fce9 	bl	80061ac <osThreadNew>
 80017da:	4b0a      	ldr	r3, [pc, #40]	; (8001804 <main+0x514>)
 80017dc:	6018      	str	r0, [r3, #0]
  osKernelStart();
 80017de:	f004 fcc5 	bl	800616c <osKernelStart>
 80017e2:	e7fe      	b.n	80017e2 <main+0x4f2>
 80017e4:	2001263c 	.word	0x2001263c
 80017e8:	40000400 	.word	0x40000400
 80017ec:	20012554 	.word	0x20012554
 80017f0:	40000800 	.word	0x40000800
 80017f4:	200125fc 	.word	0x200125fc
 80017f8:	40000c00 	.word	0x40000c00
 80017fc:	0801a144 	.word	0x0801a144
 8001800:	080005e7 	.word	0x080005e7
 8001804:	200127e4 	.word	0x200127e4

08001808 <IOE_Init>:
 8001808:	4770      	bx	lr

0800180a <IOE_ITConfig>:
 800180a:	4770      	bx	lr

0800180c <IOE_Write>:
{
 800180c:	b510      	push	{r4, lr}
 800180e:	b086      	sub	sp, #24
 8001810:	ac06      	add	r4, sp, #24
  status = HAL_I2C_Mem_Write(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, &Value, 1, I2c3Timeout); 
 8001812:	4b07      	ldr	r3, [pc, #28]	; (8001830 <IOE_Write+0x24>)
 8001814:	f804 2d01 	strb.w	r2, [r4, #-1]!
 8001818:	681b      	ldr	r3, [r3, #0]
 800181a:	9302      	str	r3, [sp, #8]
 800181c:	2301      	movs	r3, #1
 800181e:	460a      	mov	r2, r1
 8001820:	e9cd 4300 	strd	r4, r3, [sp]
 8001824:	4601      	mov	r1, r0
 8001826:	4803      	ldr	r0, [pc, #12]	; (8001834 <IOE_Write+0x28>)
 8001828:	f002 fd32 	bl	8004290 <HAL_I2C_Mem_Write>
}
 800182c:	b006      	add	sp, #24
 800182e:	bd10      	pop	{r4, pc}
 8001830:	2000000c 	.word	0x2000000c
 8001834:	200124a8 	.word	0x200124a8

08001838 <IOE_Read>:
{
 8001838:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
  uint8_t value = 0;
 800183a:	aa06      	add	r2, sp, #24
 800183c:	2300      	movs	r3, #0
 800183e:	f802 3d01 	strb.w	r3, [r2, #-1]!
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 8001842:	4b08      	ldr	r3, [pc, #32]	; (8001864 <IOE_Read+0x2c>)
 8001844:	681b      	ldr	r3, [r3, #0]
 8001846:	9302      	str	r3, [sp, #8]
 8001848:	2301      	movs	r3, #1
 800184a:	e9cd 2300 	strd	r2, r3, [sp]
 800184e:	460a      	mov	r2, r1
 8001850:	4601      	mov	r1, r0
 8001852:	4805      	ldr	r0, [pc, #20]	; (8001868 <IOE_Read+0x30>)
 8001854:	f002 fdac 	bl	80043b0 <HAL_I2C_Mem_Read>
}
 8001858:	f89d 0017 	ldrb.w	r0, [sp, #23]
 800185c:	b007      	add	sp, #28
 800185e:	f85d fb04 	ldr.w	pc, [sp], #4
 8001862:	bf00      	nop
 8001864:	2000000c 	.word	0x2000000c
 8001868:	200124a8 	.word	0x200124a8

0800186c <IOE_ReadMultiple>:
{
 800186c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, pBuffer, Length, I2c3Timeout);
 800186e:	4c08      	ldr	r4, [pc, #32]	; (8001890 <IOE_ReadMultiple+0x24>)
 8001870:	6824      	ldr	r4, [r4, #0]
 8001872:	9200      	str	r2, [sp, #0]
 8001874:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8001878:	460a      	mov	r2, r1
 800187a:	2301      	movs	r3, #1
 800187c:	4601      	mov	r1, r0
 800187e:	4805      	ldr	r0, [pc, #20]	; (8001894 <IOE_ReadMultiple+0x28>)
 8001880:	f002 fd96 	bl	80043b0 <HAL_I2C_Mem_Read>
}
 8001884:	3000      	adds	r0, #0
 8001886:	bf18      	it	ne
 8001888:	2001      	movne	r0, #1
 800188a:	b004      	add	sp, #16
 800188c:	bd10      	pop	{r4, pc}
 800188e:	bf00      	nop
 8001890:	2000000c 	.word	0x2000000c
 8001894:	200124a8 	.word	0x200124a8

08001898 <IOE_Delay>:
 8001898:	f001 be1a 	b.w	80034d0 <HAL_Delay>

0800189c <LCD_IO_Init>:
{
 800189c:	b510      	push	{r4, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 800189e:	4c06      	ldr	r4, [pc, #24]	; (80018b8 <LCD_IO_Init+0x1c>)
 80018a0:	2200      	movs	r2, #0
 80018a2:	4620      	mov	r0, r4
 80018a4:	2104      	movs	r1, #4
 80018a6:	f002 fa6d 	bl	8003d84 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 80018aa:	4620      	mov	r0, r4
 80018ac:	2201      	movs	r2, #1
 80018ae:	2104      	movs	r1, #4
}
 80018b0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 80018b4:	f002 ba66 	b.w	8003d84 <HAL_GPIO_WritePin>
 80018b8:	40020800 	.word	0x40020800

080018bc <LCD_IO_WriteData>:
{
 80018bc:	b538      	push	{r3, r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 80018be:	4c0b      	ldr	r4, [pc, #44]	; (80018ec <LCD_IO_WriteData+0x30>)
{
 80018c0:	4605      	mov	r5, r0
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 80018c2:	2201      	movs	r2, #1
 80018c4:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 80018c8:	4809      	ldr	r0, [pc, #36]	; (80018f0 <LCD_IO_WriteData+0x34>)
 80018ca:	f002 fa5b 	bl	8003d84 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 80018ce:	2200      	movs	r2, #0
 80018d0:	2104      	movs	r1, #4
 80018d2:	4620      	mov	r0, r4
 80018d4:	f002 fa56 	bl	8003d84 <HAL_GPIO_WritePin>
  SPI5_Write(RegValue);
 80018d8:	4628      	mov	r0, r5
 80018da:	f7ff fc9b 	bl	8001214 <SPI5_Write>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 80018de:	4620      	mov	r0, r4
 80018e0:	2201      	movs	r2, #1
 80018e2:	2104      	movs	r1, #4
}
 80018e4:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 80018e8:	f002 ba4c 	b.w	8003d84 <HAL_GPIO_WritePin>
 80018ec:	40020800 	.word	0x40020800
 80018f0:	40020c00 	.word	0x40020c00

080018f4 <LCD_IO_WriteReg>:
{
 80018f4:	b538      	push	{r3, r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 80018f6:	4c0b      	ldr	r4, [pc, #44]	; (8001924 <LCD_IO_WriteReg+0x30>)
{
 80018f8:	4605      	mov	r5, r0
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 80018fa:	2200      	movs	r2, #0
 80018fc:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8001900:	4809      	ldr	r0, [pc, #36]	; (8001928 <LCD_IO_WriteReg+0x34>)
 8001902:	f002 fa3f 	bl	8003d84 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001906:	2200      	movs	r2, #0
 8001908:	2104      	movs	r1, #4
 800190a:	4620      	mov	r0, r4
 800190c:	f002 fa3a 	bl	8003d84 <HAL_GPIO_WritePin>
  SPI5_Write(Reg);
 8001910:	4628      	mov	r0, r5
 8001912:	f7ff fc7f 	bl	8001214 <SPI5_Write>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001916:	4620      	mov	r0, r4
 8001918:	2201      	movs	r2, #1
 800191a:	2104      	movs	r1, #4
}
 800191c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001920:	f002 ba30 	b.w	8003d84 <HAL_GPIO_WritePin>
 8001924:	40020800 	.word	0x40020800
 8001928:	40020c00 	.word	0x40020c00

0800192c <LCD_IO_ReadData>:
{
 800192c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 800192e:	4c14      	ldr	r4, [pc, #80]	; (8001980 <LCD_IO_ReadData+0x54>)
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 8001930:	4d14      	ldr	r5, [pc, #80]	; (8001984 <LCD_IO_ReadData+0x58>)
{
 8001932:	4607      	mov	r7, r0
 8001934:	460e      	mov	r6, r1
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001936:	4620      	mov	r0, r4
 8001938:	2200      	movs	r2, #0
 800193a:	2104      	movs	r1, #4
 800193c:	f002 fa22 	bl	8003d84 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 8001940:	2200      	movs	r2, #0
 8001942:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8001946:	4628      	mov	r0, r5
 8001948:	f002 fa1c 	bl	8003d84 <HAL_GPIO_WritePin>
  SPI5_Write(RegValue);
 800194c:	4638      	mov	r0, r7
 800194e:	f7ff fc61 	bl	8001214 <SPI5_Write>
  status = HAL_SPI_Receive(&hspi5, (uint8_t*) &readvalue, ReadSize, Spi5Timeout);
 8001952:	4b0d      	ldr	r3, [pc, #52]	; (8001988 <LCD_IO_ReadData+0x5c>)
 8001954:	480d      	ldr	r0, [pc, #52]	; (800198c <LCD_IO_ReadData+0x60>)
 8001956:	681b      	ldr	r3, [r3, #0]
 8001958:	4632      	mov	r2, r6
 800195a:	a901      	add	r1, sp, #4
 800195c:	f003 fe7f 	bl	800565e <HAL_SPI_Receive>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 8001960:	4628      	mov	r0, r5
 8001962:	2201      	movs	r2, #1
 8001964:	f44f 5100 	mov.w	r1, #8192	; 0x2000
  return readvalue;
 8001968:	9e01      	ldr	r6, [sp, #4]
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 800196a:	f002 fa0b 	bl	8003d84 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 800196e:	4620      	mov	r0, r4
 8001970:	2201      	movs	r2, #1
 8001972:	2104      	movs	r1, #4
 8001974:	f002 fa06 	bl	8003d84 <HAL_GPIO_WritePin>
}
 8001978:	4630      	mov	r0, r6
 800197a:	b003      	add	sp, #12
 800197c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800197e:	bf00      	nop
 8001980:	40020800 	.word	0x40020800
 8001984:	40020c00 	.word	0x40020c00
 8001988:	20000010 	.word	0x20000010
 800198c:	200124fc 	.word	0x200124fc

08001990 <LCD_Delay>:
  HAL_Delay(Delay);
 8001990:	f001 bd9e 	b.w	80034d0 <HAL_Delay>

08001994 <HAL_TIM_PeriodElapsedCallback>:
  if (htim->Instance == TIM6) {
 8001994:	6802      	ldr	r2, [r0, #0]
 8001996:	4b03      	ldr	r3, [pc, #12]	; (80019a4 <HAL_TIM_PeriodElapsedCallback+0x10>)
 8001998:	429a      	cmp	r2, r3
 800199a:	d101      	bne.n	80019a0 <HAL_TIM_PeriodElapsedCallback+0xc>
    HAL_IncTick();
 800199c:	f001 bd86 	b.w	80034ac <HAL_IncTick>
}
 80019a0:	4770      	bx	lr
 80019a2:	bf00      	nop
 80019a4:	40001000 	.word	0x40001000

080019a8 <Error_Handler>:
}
 80019a8:	4770      	bx	lr
	...

080019ac <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 80019ac:	b082      	sub	sp, #8
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 80019ae:	4b0e      	ldr	r3, [pc, #56]	; (80019e8 <HAL_MspInit+0x3c>)
 80019b0:	2200      	movs	r2, #0
 80019b2:	9200      	str	r2, [sp, #0]
 80019b4:	6c59      	ldr	r1, [r3, #68]	; 0x44
 80019b6:	f441 4180 	orr.w	r1, r1, #16384	; 0x4000
 80019ba:	6459      	str	r1, [r3, #68]	; 0x44
 80019bc:	6c59      	ldr	r1, [r3, #68]	; 0x44
 80019be:	f401 4180 	and.w	r1, r1, #16384	; 0x4000
 80019c2:	9100      	str	r1, [sp, #0]
 80019c4:	9900      	ldr	r1, [sp, #0]
  __HAL_RCC_PWR_CLK_ENABLE();
 80019c6:	9201      	str	r2, [sp, #4]
 80019c8:	6c19      	ldr	r1, [r3, #64]	; 0x40
 80019ca:	f041 5180 	orr.w	r1, r1, #268435456	; 0x10000000
 80019ce:	6419      	str	r1, [r3, #64]	; 0x40
 80019d0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80019d2:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80019d6:	9301      	str	r3, [sp, #4]
 80019d8:	9b01      	ldr	r3, [sp, #4]

  /* System interrupt init*/
  /* PendSV_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 80019da:	210f      	movs	r1, #15
 80019dc:	f06f 0001 	mvn.w	r0, #1

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 80019e0:	b002      	add	sp, #8
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 80019e2:	f001 bd9b 	b.w	800351c <HAL_NVIC_SetPriority>
 80019e6:	bf00      	nop
 80019e8:	40023800 	.word	0x40023800

080019ec <HAL_CRC_MspInit>:
* @param hcrc: CRC handle pointer
* @retval None
*/
void HAL_CRC_MspInit(CRC_HandleTypeDef* hcrc)
{
  if(hcrc->Instance==CRC)
 80019ec:	6802      	ldr	r2, [r0, #0]
 80019ee:	4b09      	ldr	r3, [pc, #36]	; (8001a14 <HAL_CRC_MspInit+0x28>)
 80019f0:	429a      	cmp	r2, r3
{
 80019f2:	b082      	sub	sp, #8
  if(hcrc->Instance==CRC)
 80019f4:	d10b      	bne.n	8001a0e <HAL_CRC_MspInit+0x22>
  {
  /* USER CODE BEGIN CRC_MspInit 0 */

  /* USER CODE END CRC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_CRC_CLK_ENABLE();
 80019f6:	2300      	movs	r3, #0
 80019f8:	9301      	str	r3, [sp, #4]
 80019fa:	4b07      	ldr	r3, [pc, #28]	; (8001a18 <HAL_CRC_MspInit+0x2c>)
 80019fc:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80019fe:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 8001a02:	631a      	str	r2, [r3, #48]	; 0x30
 8001a04:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001a06:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 8001a0a:	9301      	str	r3, [sp, #4]
 8001a0c:	9b01      	ldr	r3, [sp, #4]
  /* USER CODE BEGIN CRC_MspInit 1 */

  /* USER CODE END CRC_MspInit 1 */
  }

}
 8001a0e:	b002      	add	sp, #8
 8001a10:	4770      	bx	lr
 8001a12:	bf00      	nop
 8001a14:	40023000 	.word	0x40023000
 8001a18:	40023800 	.word	0x40023800

08001a1c <HAL_DMA2D_MspInit>:
* This function configures the hardware resources used in this example
* @param hdma2d: DMA2D handle pointer
* @retval None
*/
void HAL_DMA2D_MspInit(DMA2D_HandleTypeDef* hdma2d)
{
 8001a1c:	b507      	push	{r0, r1, r2, lr}
  if(hdma2d->Instance==DMA2D)
 8001a1e:	4b0f      	ldr	r3, [pc, #60]	; (8001a5c <HAL_DMA2D_MspInit+0x40>)
 8001a20:	6802      	ldr	r2, [r0, #0]
 8001a22:	429a      	cmp	r2, r3
 8001a24:	d116      	bne.n	8001a54 <HAL_DMA2D_MspInit+0x38>
  {
  /* USER CODE BEGIN DMA2D_MspInit 0 */

  /* USER CODE END DMA2D_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_DMA2D_CLK_ENABLE();
 8001a26:	2200      	movs	r2, #0
 8001a28:	f5a3 43f0 	sub.w	r3, r3, #30720	; 0x7800
 8001a2c:	9201      	str	r2, [sp, #4]
 8001a2e:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8001a30:	f441 0100 	orr.w	r1, r1, #8388608	; 0x800000
 8001a34:	6319      	str	r1, [r3, #48]	; 0x30
 8001a36:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001a38:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
 8001a3c:	9301      	str	r3, [sp, #4]
    /* DMA2D interrupt Init */
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
 8001a3e:	2105      	movs	r1, #5
 8001a40:	205a      	movs	r0, #90	; 0x5a
    __HAL_RCC_DMA2D_CLK_ENABLE();
 8001a42:	9b01      	ldr	r3, [sp, #4]
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
 8001a44:	f001 fd6a 	bl	800351c <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
 8001a48:	205a      	movs	r0, #90	; 0x5a
  /* USER CODE BEGIN DMA2D_MspInit 1 */

  /* USER CODE END DMA2D_MspInit 1 */
  }

}
 8001a4a:	b003      	add	sp, #12
 8001a4c:	f85d eb04 	ldr.w	lr, [sp], #4
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
 8001a50:	f001 bd98 	b.w	8003584 <HAL_NVIC_EnableIRQ>
}
 8001a54:	b003      	add	sp, #12
 8001a56:	f85d fb04 	ldr.w	pc, [sp], #4
 8001a5a:	bf00      	nop
 8001a5c:	4002b000 	.word	0x4002b000

08001a60 <HAL_DMA2D_MspDeInit>:
* @param hdma2d: DMA2D handle pointer
* @retval None
*/
void HAL_DMA2D_MspDeInit(DMA2D_HandleTypeDef* hdma2d)
{
  if(hdma2d->Instance==DMA2D)
 8001a60:	6802      	ldr	r2, [r0, #0]
 8001a62:	4b06      	ldr	r3, [pc, #24]	; (8001a7c <HAL_DMA2D_MspDeInit+0x1c>)
 8001a64:	429a      	cmp	r2, r3
 8001a66:	d107      	bne.n	8001a78 <HAL_DMA2D_MspDeInit+0x18>
  {
  /* USER CODE BEGIN DMA2D_MspDeInit 0 */

  /* USER CODE END DMA2D_MspDeInit 0 */
    /* Peripheral clock disable */
    __HAL_RCC_DMA2D_CLK_DISABLE();
 8001a68:	4a05      	ldr	r2, [pc, #20]	; (8001a80 <HAL_DMA2D_MspDeInit+0x20>)
 8001a6a:	6b13      	ldr	r3, [r2, #48]	; 0x30
 8001a6c:	f423 0300 	bic.w	r3, r3, #8388608	; 0x800000
 8001a70:	6313      	str	r3, [r2, #48]	; 0x30

    /* DMA2D interrupt DeInit */
    HAL_NVIC_DisableIRQ(DMA2D_IRQn);
 8001a72:	205a      	movs	r0, #90	; 0x5a
 8001a74:	f001 bd94 	b.w	80035a0 <HAL_NVIC_DisableIRQ>
  /* USER CODE BEGIN DMA2D_MspDeInit 1 */

  /* USER CODE END DMA2D_MspDeInit 1 */
  }

}
 8001a78:	4770      	bx	lr
 8001a7a:	bf00      	nop
 8001a7c:	4002b000 	.word	0x4002b000
 8001a80:	40023800 	.word	0x40023800

08001a84 <HAL_I2C_MspInit>:
* This function configures the hardware resources used in this example
* @param hi2c: I2C handle pointer
* @retval None
*/
void HAL_I2C_MspInit(I2C_HandleTypeDef* hi2c)
{
 8001a84:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8001a88:	4604      	mov	r4, r0
 8001a8a:	b089      	sub	sp, #36	; 0x24
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001a8c:	2214      	movs	r2, #20
 8001a8e:	2100      	movs	r1, #0
 8001a90:	a803      	add	r0, sp, #12
 8001a92:	f017 f934 	bl	8018cfe <memset>
  if(hi2c->Instance==I2C3)
 8001a96:	6822      	ldr	r2, [r4, #0]
 8001a98:	4b24      	ldr	r3, [pc, #144]	; (8001b2c <HAL_I2C_MspInit+0xa8>)
 8001a9a:	429a      	cmp	r2, r3
 8001a9c:	d143      	bne.n	8001b26 <HAL_I2C_MspInit+0xa2>
  {
  /* USER CODE BEGIN I2C3_MspInit 0 */

  /* USER CODE END I2C3_MspInit 0 */
  
    __HAL_RCC_GPIOC_CLK_ENABLE();
 8001a9e:	4c24      	ldr	r4, [pc, #144]	; (8001b30 <HAL_I2C_MspInit+0xac>)
    GPIO_InitStruct.Pin = GPIO_PIN_9;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
    GPIO_InitStruct.Pull = GPIO_PULLUP;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001aa0:	4824      	ldr	r0, [pc, #144]	; (8001b34 <HAL_I2C_MspInit+0xb0>)
    __HAL_RCC_GPIOC_CLK_ENABLE();
 8001aa2:	2500      	movs	r5, #0
 8001aa4:	9500      	str	r5, [sp, #0]
 8001aa6:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8001aa8:	f043 0304 	orr.w	r3, r3, #4
 8001aac:	6323      	str	r3, [r4, #48]	; 0x30
 8001aae:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8001ab0:	f003 0304 	and.w	r3, r3, #4
 8001ab4:	9300      	str	r3, [sp, #0]
 8001ab6:	9b00      	ldr	r3, [sp, #0]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001ab8:	9501      	str	r5, [sp, #4]
 8001aba:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8001abc:	f043 0301 	orr.w	r3, r3, #1
 8001ac0:	6323      	str	r3, [r4, #48]	; 0x30
 8001ac2:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8001ac4:	f003 0301 	and.w	r3, r3, #1
 8001ac8:	9301      	str	r3, [sp, #4]
 8001aca:	9b01      	ldr	r3, [sp, #4]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8001acc:	f04f 0912 	mov.w	r9, #18
 8001ad0:	f44f 7300 	mov.w	r3, #512	; 0x200
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001ad4:	f04f 0801 	mov.w	r8, #1
 8001ad8:	2703      	movs	r7, #3
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 8001ada:	2604      	movs	r6, #4
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001adc:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8001ade:	e9cd 3903 	strd	r3, r9, [sp, #12]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001ae2:	e9cd 8705 	strd	r8, r7, [sp, #20]
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 8001ae6:	9607      	str	r6, [sp, #28]
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001ae8:	f002 f860 	bl	8003bac <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_8;
 8001aec:	f44f 7380 	mov.w	r3, #256	; 0x100
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
    GPIO_InitStruct.Pull = GPIO_PULLUP;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001af0:	a903      	add	r1, sp, #12
 8001af2:	4811      	ldr	r0, [pc, #68]	; (8001b38 <HAL_I2C_MspInit+0xb4>)
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 8001af4:	9607      	str	r6, [sp, #28]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8001af6:	e9cd 3903 	strd	r3, r9, [sp, #12]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001afa:	e9cd 8705 	strd	r8, r7, [sp, #20]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001afe:	f002 f855 	bl	8003bac <HAL_GPIO_Init>

    /* Peripheral clock enable */
    __HAL_RCC_I2C3_CLK_ENABLE();
 8001b02:	9502      	str	r5, [sp, #8]
 8001b04:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8001b06:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 8001b0a:	6423      	str	r3, [r4, #64]	; 0x40
 8001b0c:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8001b0e:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
 8001b12:	9302      	str	r3, [sp, #8]
 8001b14:	9b02      	ldr	r3, [sp, #8]
  /* USER CODE BEGIN I2C3_MspInit 1 */
  /* Force the I2C Peripheral Clock Reset */  
    __HAL_RCC_I2C3_FORCE_RESET();
 8001b16:	6a23      	ldr	r3, [r4, #32]
 8001b18:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 8001b1c:	6223      	str	r3, [r4, #32]
      
    /* Release the I2C Peripheral Clock Reset */  
    __HAL_RCC_I2C3_RELEASE_RESET(); 
 8001b1e:	6a23      	ldr	r3, [r4, #32]
 8001b20:	f423 0300 	bic.w	r3, r3, #8388608	; 0x800000
 8001b24:	6223      	str	r3, [r4, #32]
  /* USER CODE END I2C3_MspInit 1 */
  }

}
 8001b26:	b009      	add	sp, #36	; 0x24
 8001b28:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8001b2c:	40005c00 	.word	0x40005c00
 8001b30:	40023800 	.word	0x40023800
 8001b34:	40020800 	.word	0x40020800
 8001b38:	40020000 	.word	0x40020000

08001b3c <HAL_LTDC_MspInit>:
* This function configures the hardware resources used in this example
* @param hltdc: LTDC handle pointer
* @retval None
*/
void HAL_LTDC_MspInit(LTDC_HandleTypeDef* hltdc)
{
 8001b3c:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001b3e:	4604      	mov	r4, r0
 8001b40:	b08d      	sub	sp, #52	; 0x34
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001b42:	2214      	movs	r2, #20
 8001b44:	2100      	movs	r1, #0
 8001b46:	a807      	add	r0, sp, #28
 8001b48:	f017 f8d9 	bl	8018cfe <memset>
  if(hltdc->Instance==LTDC)
 8001b4c:	6822      	ldr	r2, [r4, #0]
 8001b4e:	4b57      	ldr	r3, [pc, #348]	; (8001cac <HAL_LTDC_MspInit+0x170>)
 8001b50:	429a      	cmp	r2, r3
 8001b52:	f040 80a8 	bne.w	8001ca6 <HAL_LTDC_MspInit+0x16a>
  {
  /* USER CODE BEGIN LTDC_MspInit 0 */

  /* USER CODE END LTDC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_LTDC_CLK_ENABLE();
 8001b56:	f503 4350 	add.w	r3, r3, #53248	; 0xd000
 8001b5a:	2500      	movs	r5, #0
 8001b5c:	9500      	str	r5, [sp, #0]
 8001b5e:	6c5a      	ldr	r2, [r3, #68]	; 0x44
    GPIO_InitStruct.Pin = GPIO_PIN_10;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001b60:	4853      	ldr	r0, [pc, #332]	; (8001cb0 <HAL_LTDC_MspInit+0x174>)
    __HAL_RCC_LTDC_CLK_ENABLE();
 8001b62:	f042 6280 	orr.w	r2, r2, #67108864	; 0x4000000
 8001b66:	645a      	str	r2, [r3, #68]	; 0x44
 8001b68:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8001b6a:	f002 6280 	and.w	r2, r2, #67108864	; 0x4000000
 8001b6e:	9200      	str	r2, [sp, #0]
 8001b70:	9a00      	ldr	r2, [sp, #0]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8001b72:	9501      	str	r5, [sp, #4]
 8001b74:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001b76:	f042 0220 	orr.w	r2, r2, #32
 8001b7a:	631a      	str	r2, [r3, #48]	; 0x30
 8001b7c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001b7e:	f002 0220 	and.w	r2, r2, #32
 8001b82:	9201      	str	r2, [sp, #4]
 8001b84:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001b86:	9502      	str	r5, [sp, #8]
 8001b88:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001b8a:	f042 0201 	orr.w	r2, r2, #1
 8001b8e:	631a      	str	r2, [r3, #48]	; 0x30
 8001b90:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001b92:	f002 0201 	and.w	r2, r2, #1
 8001b96:	9202      	str	r2, [sp, #8]
 8001b98:	9a02      	ldr	r2, [sp, #8]
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8001b9a:	9503      	str	r5, [sp, #12]
 8001b9c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001b9e:	f042 0202 	orr.w	r2, r2, #2
 8001ba2:	631a      	str	r2, [r3, #48]	; 0x30
 8001ba4:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001ba6:	f002 0202 	and.w	r2, r2, #2
 8001baa:	9203      	str	r2, [sp, #12]
 8001bac:	9a03      	ldr	r2, [sp, #12]
    __HAL_RCC_GPIOG_CLK_ENABLE();
 8001bae:	9504      	str	r5, [sp, #16]
 8001bb0:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001bb2:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8001bb6:	631a      	str	r2, [r3, #48]	; 0x30
 8001bb8:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001bba:	f002 0240 	and.w	r2, r2, #64	; 0x40
 8001bbe:	9204      	str	r2, [sp, #16]
 8001bc0:	9a04      	ldr	r2, [sp, #16]
    __HAL_RCC_GPIOC_CLK_ENABLE();
 8001bc2:	9505      	str	r5, [sp, #20]
 8001bc4:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001bc6:	f042 0204 	orr.w	r2, r2, #4
 8001bca:	631a      	str	r2, [r3, #48]	; 0x30
 8001bcc:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001bce:	f002 0204 	and.w	r2, r2, #4
 8001bd2:	9205      	str	r2, [sp, #20]
 8001bd4:	9a05      	ldr	r2, [sp, #20]
    __HAL_RCC_GPIOD_CLK_ENABLE();
 8001bd6:	9506      	str	r5, [sp, #24]
 8001bd8:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001bda:	f042 0208 	orr.w	r2, r2, #8
 8001bde:	631a      	str	r2, [r3, #48]	; 0x30
 8001be0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001be2:	f003 0308 	and.w	r3, r3, #8
 8001be6:	9306      	str	r3, [sp, #24]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001be8:	2402      	movs	r4, #2
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001bea:	260e      	movs	r6, #14
    __HAL_RCC_GPIOD_CLK_ENABLE();
 8001bec:	9b06      	ldr	r3, [sp, #24]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001bee:	940a      	str	r4, [sp, #40]	; 0x28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001bf0:	f44f 6380 	mov.w	r3, #1024	; 0x400
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001bf4:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001bf6:	e9cd 3407 	strd	r3, r4, [sp, #28]
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001bfa:	960b      	str	r6, [sp, #44]	; 0x2c
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001bfc:	f001 ffd6 	bl	8003bac <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_3|GPIO_PIN_4|GPIO_PIN_6|GPIO_PIN_11 
 8001c00:	f641 0358 	movw	r3, #6232	; 0x1858
                          |GPIO_PIN_12;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001c04:	a907      	add	r1, sp, #28
 8001c06:	482b      	ldr	r0, [pc, #172]	; (8001cb4 <HAL_LTDC_MspInit+0x178>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001c08:	960b      	str	r6, [sp, #44]	; 0x2c
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001c0a:	e9cd 3407 	strd	r3, r4, [sp, #28]

    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 8001c0e:	2709      	movs	r7, #9
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001c10:	e9cd 5409 	strd	r5, r4, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001c14:	f001 ffca 	bl	8003bac <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
 8001c18:	2303      	movs	r3, #3
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001c1a:	a907      	add	r1, sp, #28
 8001c1c:	4826      	ldr	r0, [pc, #152]	; (8001cb8 <HAL_LTDC_MspInit+0x17c>)
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 8001c1e:	970b      	str	r7, [sp, #44]	; 0x2c
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001c20:	e9cd 3407 	strd	r3, r4, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001c24:	e9cd 5409 	strd	r5, r4, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001c28:	f001 ffc0 	bl	8003bac <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_11|GPIO_PIN_8|GPIO_PIN_9;
 8001c2c:	f44f 6370 	mov.w	r3, #3840	; 0xf00
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001c30:	a907      	add	r1, sp, #28
 8001c32:	4821      	ldr	r0, [pc, #132]	; (8001cb8 <HAL_LTDC_MspInit+0x17c>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001c34:	960b      	str	r6, [sp, #44]	; 0x2c
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001c36:	e9cd 3407 	strd	r3, r4, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001c3a:	e9cd 5409 	strd	r5, r4, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001c3e:	f001 ffb5 	bl	8003bac <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7|GPIO_PIN_11;
 8001c42:	f44f 630c 	mov.w	r3, #2240	; 0x8c0
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001c46:	a907      	add	r1, sp, #28
 8001c48:	481c      	ldr	r0, [pc, #112]	; (8001cbc <HAL_LTDC_MspInit+0x180>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001c4a:	960b      	str	r6, [sp, #44]	; 0x2c
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001c4c:	e9cd 3407 	strd	r3, r4, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001c50:	e9cd 5409 	strd	r5, r4, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001c54:	f001 ffaa 	bl	8003bac <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7;
 8001c58:	23c0      	movs	r3, #192	; 0xc0
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001c5a:	a907      	add	r1, sp, #28
 8001c5c:	4818      	ldr	r0, [pc, #96]	; (8001cc0 <HAL_LTDC_MspInit+0x184>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001c5e:	960b      	str	r6, [sp, #44]	; 0x2c
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001c60:	e9cd 3407 	strd	r3, r4, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001c64:	e9cd 5409 	strd	r5, r4, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001c68:	f001 ffa0 	bl	8003bac <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_3;
 8001c6c:	2308      	movs	r3, #8
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001c6e:	a907      	add	r1, sp, #28
 8001c70:	4814      	ldr	r0, [pc, #80]	; (8001cc4 <HAL_LTDC_MspInit+0x188>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001c72:	960b      	str	r6, [sp, #44]	; 0x2c
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001c74:	e9cd 3407 	strd	r3, r4, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001c78:	e9cd 5409 	strd	r5, r4, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001c7c:	f001 ff96 	bl	8003bac <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_12;
 8001c80:	f44f 53a0 	mov.w	r3, #5120	; 0x1400
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001c84:	a907      	add	r1, sp, #28
 8001c86:	480d      	ldr	r0, [pc, #52]	; (8001cbc <HAL_LTDC_MspInit+0x180>)
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 8001c88:	970b      	str	r7, [sp, #44]	; 0x2c
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001c8a:	e9cd 3407 	strd	r3, r4, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001c8e:	e9cd 5409 	strd	r5, r4, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001c92:	f001 ff8b 	bl	8003bac <HAL_GPIO_Init>

    /* LTDC interrupt Init */
    HAL_NVIC_SetPriority(LTDC_IRQn, 5, 0);
 8001c96:	2058      	movs	r0, #88	; 0x58
 8001c98:	462a      	mov	r2, r5
 8001c9a:	2105      	movs	r1, #5
 8001c9c:	f001 fc3e 	bl	800351c <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(LTDC_IRQn);
 8001ca0:	2058      	movs	r0, #88	; 0x58
 8001ca2:	f001 fc6f 	bl	8003584 <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN LTDC_MspInit 1 */

  /* USER CODE END LTDC_MspInit 1 */
  }

}
 8001ca6:	b00d      	add	sp, #52	; 0x34
 8001ca8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001caa:	bf00      	nop
 8001cac:	40016800 	.word	0x40016800
 8001cb0:	40021400 	.word	0x40021400
 8001cb4:	40020000 	.word	0x40020000
 8001cb8:	40020400 	.word	0x40020400
 8001cbc:	40021800 	.word	0x40021800
 8001cc0:	40020800 	.word	0x40020800
 8001cc4:	40020c00 	.word	0x40020c00

08001cc8 <HAL_SPI_MspInit>:
* This function configures the hardware resources used in this example
* @param hspi: SPI handle pointer
* @retval None
*/
void HAL_SPI_MspInit(SPI_HandleTypeDef* hspi)
{
 8001cc8:	b510      	push	{r4, lr}
 8001cca:	4604      	mov	r4, r0
 8001ccc:	b088      	sub	sp, #32
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001cce:	2214      	movs	r2, #20
 8001cd0:	2100      	movs	r1, #0
 8001cd2:	a803      	add	r0, sp, #12
 8001cd4:	f017 f813 	bl	8018cfe <memset>
  if(hspi->Instance==SPI5)
 8001cd8:	6822      	ldr	r2, [r4, #0]
 8001cda:	4b14      	ldr	r3, [pc, #80]	; (8001d2c <HAL_SPI_MspInit+0x64>)
 8001cdc:	429a      	cmp	r2, r3
 8001cde:	d123      	bne.n	8001d28 <HAL_SPI_MspInit+0x60>
  {
  /* USER CODE BEGIN SPI5_MspInit 0 */

  /* USER CODE END SPI5_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_SPI5_CLK_ENABLE();
 8001ce0:	f503 4368 	add.w	r3, r3, #59392	; 0xe800
 8001ce4:	2100      	movs	r1, #0
 8001ce6:	9101      	str	r1, [sp, #4]
 8001ce8:	6c5a      	ldr	r2, [r3, #68]	; 0x44
    GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI5;
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001cea:	4811      	ldr	r0, [pc, #68]	; (8001d30 <HAL_SPI_MspInit+0x68>)
    __HAL_RCC_SPI5_CLK_ENABLE();
 8001cec:	f442 1280 	orr.w	r2, r2, #1048576	; 0x100000
 8001cf0:	645a      	str	r2, [r3, #68]	; 0x44
 8001cf2:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8001cf4:	f402 1280 	and.w	r2, r2, #1048576	; 0x100000
 8001cf8:	9201      	str	r2, [sp, #4]
 8001cfa:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8001cfc:	9102      	str	r1, [sp, #8]
 8001cfe:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001d00:	f042 0220 	orr.w	r2, r2, #32
 8001d04:	631a      	str	r2, [r3, #48]	; 0x30
 8001d06:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001d08:	f003 0320 	and.w	r3, r3, #32
 8001d0c:	9302      	str	r3, [sp, #8]
 8001d0e:	9b02      	ldr	r3, [sp, #8]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001d10:	f44f 7260 	mov.w	r2, #896	; 0x380
 8001d14:	2302      	movs	r3, #2
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI5;
 8001d16:	2103      	movs	r1, #3
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001d18:	e9cd 2303 	strd	r2, r3, [sp, #12]
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI5;
 8001d1c:	2305      	movs	r3, #5
 8001d1e:	e9cd 1306 	strd	r1, r3, [sp, #24]
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001d22:	a903      	add	r1, sp, #12
 8001d24:	f001 ff42 	bl	8003bac <HAL_GPIO_Init>
  /* USER CODE BEGIN SPI5_MspInit 1 */

  /* USER CODE END SPI5_MspInit 1 */
  }

}
 8001d28:	b008      	add	sp, #32
 8001d2a:	bd10      	pop	{r4, pc}
 8001d2c:	40015000 	.word	0x40015000
 8001d30:	40021400 	.word	0x40021400

08001d34 <HAL_SDRAM_MspInit>:
  /* USER CODE BEGIN FMC_MspInit 1 */

  /* USER CODE END FMC_MspInit 1 */
}

void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef* hsdram){
 8001d34:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8001d38:	b086      	sub	sp, #24
  GPIO_InitTypeDef GPIO_InitStruct ={0};
 8001d3a:	2214      	movs	r2, #20
 8001d3c:	2100      	movs	r1, #0
 8001d3e:	a801      	add	r0, sp, #4
 8001d40:	f016 ffdd 	bl	8018cfe <memset>
  if (FMC_Initialized) {
 8001d44:	4b2b      	ldr	r3, [pc, #172]	; (8001df4 <HAL_SDRAM_MspInit+0xc0>)
 8001d46:	681c      	ldr	r4, [r3, #0]
 8001d48:	2c00      	cmp	r4, #0
 8001d4a:	d14f      	bne.n	8001dec <HAL_SDRAM_MspInit+0xb8>
  FMC_Initialized = 1;
 8001d4c:	f04f 0801 	mov.w	r8, #1
 8001d50:	f8c3 8000 	str.w	r8, [r3]
  __HAL_RCC_FMC_CLK_ENABLE();
 8001d54:	4b28      	ldr	r3, [pc, #160]	; (8001df8 <HAL_SDRAM_MspInit+0xc4>)
 8001d56:	9400      	str	r4, [sp, #0]
 8001d58:	6b9a      	ldr	r2, [r3, #56]	; 0x38
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001d5a:	4828      	ldr	r0, [pc, #160]	; (8001dfc <HAL_SDRAM_MspInit+0xc8>)
  __HAL_RCC_FMC_CLK_ENABLE();
 8001d5c:	ea42 0208 	orr.w	r2, r2, r8
 8001d60:	639a      	str	r2, [r3, #56]	; 0x38
 8001d62:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8001d64:	ea03 0308 	and.w	r3, r3, r8
 8001d68:	9300      	str	r3, [sp, #0]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001d6a:	2702      	movs	r7, #2
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001d6c:	2603      	movs	r6, #3
 8001d6e:	250c      	movs	r5, #12
  __HAL_RCC_FMC_CLK_ENABLE();
 8001d70:	9b00      	ldr	r3, [sp, #0]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001d72:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001d74:	f64f 033f 	movw	r3, #63551	; 0xf83f
 8001d78:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001d7c:	e9cd 6504 	strd	r6, r5, [sp, #16]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001d80:	f001 ff14 	bl	8003bac <HAL_GPIO_Init>
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001d84:	a901      	add	r1, sp, #4
 8001d86:	481e      	ldr	r0, [pc, #120]	; (8001e00 <HAL_SDRAM_MspInit+0xcc>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001d88:	9505      	str	r5, [sp, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001d8a:	e9cd 8701 	strd	r8, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001d8e:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001d92:	f001 ff0b 	bl	8003bac <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_4|GPIO_PIN_5 
 8001d96:	f248 1333 	movw	r3, #33075	; 0x8133
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001d9a:	a901      	add	r1, sp, #4
 8001d9c:	4819      	ldr	r0, [pc, #100]	; (8001e04 <HAL_SDRAM_MspInit+0xd0>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001d9e:	9505      	str	r5, [sp, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001da0:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001da4:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001da8:	f001 ff00 	bl	8003bac <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10 
 8001dac:	f64f 7383 	movw	r3, #65411	; 0xff83
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8001db0:	a901      	add	r1, sp, #4
 8001db2:	4815      	ldr	r0, [pc, #84]	; (8001e08 <HAL_SDRAM_MspInit+0xd4>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001db4:	9505      	str	r5, [sp, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001db6:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001dba:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8001dbe:	f001 fef5 	bl	8003bac <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10|GPIO_PIN_14 
 8001dc2:	f24c 7303 	movw	r3, #50947	; 0xc703
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001dc6:	a901      	add	r1, sp, #4
 8001dc8:	4810      	ldr	r0, [pc, #64]	; (8001e0c <HAL_SDRAM_MspInit+0xd8>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001dca:	9505      	str	r5, [sp, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001dcc:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001dd0:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001dd4:	f001 feea 	bl	8003bac <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_6;
 8001dd8:	2360      	movs	r3, #96	; 0x60
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001dda:	a901      	add	r1, sp, #4
 8001ddc:	480c      	ldr	r0, [pc, #48]	; (8001e10 <HAL_SDRAM_MspInit+0xdc>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001dde:	9505      	str	r5, [sp, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001de0:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001de4:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001de8:	f001 fee0 	bl	8003bac <HAL_GPIO_Init>
  /* USER CODE END SDRAM_MspInit 0 */
  HAL_FMC_MspInit();
  /* USER CODE BEGIN SDRAM_MspInit 1 */

  /* USER CODE END SDRAM_MspInit 1 */
}
 8001dec:	b006      	add	sp, #24
 8001dee:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8001df2:	bf00      	nop
 8001df4:	200013c0 	.word	0x200013c0
 8001df8:	40023800 	.word	0x40023800
 8001dfc:	40021400 	.word	0x40021400
 8001e00:	40020800 	.word	0x40020800
 8001e04:	40021800 	.word	0x40021800
 8001e08:	40021000 	.word	0x40021000
 8001e0c:	40020c00 	.word	0x40020c00
 8001e10:	40020400 	.word	0x40020400

08001e14 <HAL_TIM_Base_MspInit>:
* This function configures the hardware resources used in this example
* @param htim_base: TIM_Base handle pointer
* @retval None
*/
void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* htim_base)
{
 8001e14:	b530      	push	{r4, r5, lr}
  if(htim_base->Instance==TIM2)
 8001e16:	6803      	ldr	r3, [r0, #0]
 8001e18:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
{
 8001e1c:	b085      	sub	sp, #20
 8001e1e:	4605      	mov	r5, r0
  if(htim_base->Instance==TIM2)
 8001e20:	d12e      	bne.n	8001e80 <HAL_TIM_Base_MspInit+0x6c>
  {
  /* USER CODE BEGIN TIM2_MspInit 0 */

  /* USER CODE END TIM2_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_TIM2_CLK_ENABLE();
 8001e22:	2300      	movs	r3, #0
 8001e24:	4a57      	ldr	r2, [pc, #348]	; (8001f84 <HAL_TIM_Base_MspInit+0x170>)
 8001e26:	9300      	str	r3, [sp, #0]
 8001e28:	6c11      	ldr	r1, [r2, #64]	; 0x40

    /* TIM2 DMA Init */
    /* TIM2_UP_CH4 Init */
    hdma_tim2_up_ch4.Instance = DMA1_Stream7;
 8001e2a:	4c57      	ldr	r4, [pc, #348]	; (8001f88 <HAL_TIM_Base_MspInit+0x174>)
    hdma_tim2_up_ch4.Init.Channel = DMA_CHANNEL_3;
 8001e2c:	f8df e17c 	ldr.w	lr, [pc, #380]	; 8001fac <HAL_TIM_Base_MspInit+0x198>
    __HAL_RCC_TIM2_CLK_ENABLE();
 8001e30:	f041 0101 	orr.w	r1, r1, #1
 8001e34:	6411      	str	r1, [r2, #64]	; 0x40
 8001e36:	6c12      	ldr	r2, [r2, #64]	; 0x40
 8001e38:	f002 0201 	and.w	r2, r2, #1
 8001e3c:	9200      	str	r2, [sp, #0]
 8001e3e:	9a00      	ldr	r2, [sp, #0]
    hdma_tim2_up_ch4.Init.Channel = DMA_CHANNEL_3;
 8001e40:	f04f 62c0 	mov.w	r2, #100663296	; 0x6000000
 8001e44:	e9c4 e200 	strd	lr, r2, [r4]
    hdma_tim2_up_ch4.Init.Direction = DMA_MEMORY_TO_PERIPH;
 8001e48:	2240      	movs	r2, #64	; 0x40
    hdma_tim2_up_ch4.Init.PeriphInc = DMA_PINC_DISABLE;
 8001e4a:	e9c4 2302 	strd	r2, r3, [r4, #8]
    hdma_tim2_up_ch4.Init.MemInc = DMA_MINC_ENABLE;
    hdma_tim2_up_ch4.Init.PeriphDataAlignment = DMA_PDATAALIGN_WORD;
 8001e4e:	f44f 6180 	mov.w	r1, #1024	; 0x400
 8001e52:	f44f 5280 	mov.w	r2, #4096	; 0x1000
    hdma_tim2_up_ch4.Init.MemDataAlignment = DMA_MDATAALIGN_WORD;
    hdma_tim2_up_ch4.Init.Mode = DMA_CIRCULAR;
 8001e56:	f44f 4080 	mov.w	r0, #16384	; 0x4000
    hdma_tim2_up_ch4.Init.PeriphDataAlignment = DMA_PDATAALIGN_WORD;
 8001e5a:	e9c4 1204 	strd	r1, r2, [r4, #16]
    hdma_tim2_up_ch4.Init.Mode = DMA_CIRCULAR;
 8001e5e:	f44f 7280 	mov.w	r2, #256	; 0x100
 8001e62:	e9c4 0206 	strd	r0, r2, [r4, #24]
    hdma_tim2_up_ch4.Init.Priority = DMA_PRIORITY_LOW;
    hdma_tim2_up_ch4.Init.FIFOMode = DMA_FIFOMODE_DISABLE;
    if (HAL_DMA_Init(&hdma_tim2_up_ch4) != HAL_OK)
 8001e66:	4620      	mov	r0, r4
    hdma_tim2_up_ch4.Init.FIFOMode = DMA_FIFOMODE_DISABLE;
 8001e68:	e9c4 3308 	strd	r3, r3, [r4, #32]
    if (HAL_DMA_Init(&hdma_tim2_up_ch4) != HAL_OK)
 8001e6c:	f001 fbd2 	bl	8003614 <HAL_DMA_Init>
 8001e70:	b108      	cbz	r0, 8001e76 <HAL_TIM_Base_MspInit+0x62>
    {
      Error_Handler();
 8001e72:	f7ff fd99 	bl	80019a8 <Error_Handler>
    }

    /* Several peripheral DMA handle pointers point to the same DMA handle.
     Be aware that there is only one stream to perform all the requested DMAs. */
    __HAL_LINKDMA(htim_base,hdma[TIM_DMA_ID_UPDATE],hdma_tim2_up_ch4);
 8001e76:	622c      	str	r4, [r5, #32]
    __HAL_LINKDMA(htim_base,hdma[TIM_DMA_ID_CC4],hdma_tim2_up_ch4);
 8001e78:	632c      	str	r4, [r5, #48]	; 0x30
    if (HAL_DMA_Init(&hdma_tim5_ch1) != HAL_OK)
    {
      Error_Handler();
    }

    __HAL_LINKDMA(htim_base,hdma[TIM_DMA_ID_CC1],hdma_tim5_ch1);
 8001e7a:	63a5      	str	r5, [r4, #56]	; 0x38
  /* USER CODE BEGIN TIM5_MspInit 1 */

  /* USER CODE END TIM5_MspInit 1 */
  }

}
 8001e7c:	b005      	add	sp, #20
 8001e7e:	bd30      	pop	{r4, r5, pc}
  else if(htim_base->Instance==TIM3)
 8001e80:	4a42      	ldr	r2, [pc, #264]	; (8001f8c <HAL_TIM_Base_MspInit+0x178>)
 8001e82:	4293      	cmp	r3, r2
 8001e84:	d12b      	bne.n	8001ede <HAL_TIM_Base_MspInit+0xca>
    __HAL_RCC_TIM3_CLK_ENABLE();
 8001e86:	2300      	movs	r3, #0
 8001e88:	f502 320d 	add.w	r2, r2, #144384	; 0x23400
 8001e8c:	9301      	str	r3, [sp, #4]
 8001e8e:	6c11      	ldr	r1, [r2, #64]	; 0x40
    hdma_tim3_ch2.Instance = DMA1_Stream5;
 8001e90:	4c3f      	ldr	r4, [pc, #252]	; (8001f90 <HAL_TIM_Base_MspInit+0x17c>)
    __HAL_RCC_TIM3_CLK_ENABLE();
 8001e92:	f041 0102 	orr.w	r1, r1, #2
 8001e96:	6411      	str	r1, [r2, #64]	; 0x40
 8001e98:	6c12      	ldr	r2, [r2, #64]	; 0x40
    hdma_tim3_ch2.Init.Channel = DMA_CHANNEL_5;
 8001e9a:	493e      	ldr	r1, [pc, #248]	; (8001f94 <HAL_TIM_Base_MspInit+0x180>)
    __HAL_RCC_TIM3_CLK_ENABLE();
 8001e9c:	f002 0202 	and.w	r2, r2, #2
 8001ea0:	9201      	str	r2, [sp, #4]
 8001ea2:	9a01      	ldr	r2, [sp, #4]
    hdma_tim3_ch2.Init.Channel = DMA_CHANNEL_5;
 8001ea4:	f04f 6220 	mov.w	r2, #167772160	; 0xa000000
 8001ea8:	e9c4 1200 	strd	r1, r2, [r4]
    hdma_tim3_ch2.Init.Direction = DMA_MEMORY_TO_PERIPH;
 8001eac:	2240      	movs	r2, #64	; 0x40
    hdma_tim3_ch2.Init.PeriphDataAlignment = DMA_PDATAALIGN_HALFWORD;
 8001eae:	f44f 6080 	mov.w	r0, #1024	; 0x400
    hdma_tim3_ch2.Init.PeriphInc = DMA_PINC_DISABLE;
 8001eb2:	e9c4 2302 	strd	r2, r3, [r4, #8]
    hdma_tim3_ch2.Init.PeriphDataAlignment = DMA_PDATAALIGN_HALFWORD;
 8001eb6:	f44f 6200 	mov.w	r2, #2048	; 0x800
 8001eba:	e9c4 0204 	strd	r0, r2, [r4, #16]
    hdma_tim3_ch2.Init.Mode = DMA_CIRCULAR;
 8001ebe:	f44f 5c00 	mov.w	ip, #8192	; 0x2000
 8001ec2:	f44f 7280 	mov.w	r2, #256	; 0x100
    if (HAL_DMA_Init(&hdma_tim3_ch2) != HAL_OK)
 8001ec6:	4620      	mov	r0, r4
    hdma_tim3_ch2.Init.Mode = DMA_CIRCULAR;
 8001ec8:	e9c4 c206 	strd	ip, r2, [r4, #24]
    hdma_tim3_ch2.Init.FIFOMode = DMA_FIFOMODE_DISABLE;
 8001ecc:	e9c4 3308 	strd	r3, r3, [r4, #32]
    if (HAL_DMA_Init(&hdma_tim3_ch2) != HAL_OK)
 8001ed0:	f001 fba0 	bl	8003614 <HAL_DMA_Init>
 8001ed4:	b108      	cbz	r0, 8001eda <HAL_TIM_Base_MspInit+0xc6>
      Error_Handler();
 8001ed6:	f7ff fd67 	bl	80019a8 <Error_Handler>
    __HAL_LINKDMA(htim_base,hdma[TIM_DMA_ID_CC2],hdma_tim3_ch2);
 8001eda:	62ac      	str	r4, [r5, #40]	; 0x28
 8001edc:	e7cd      	b.n	8001e7a <HAL_TIM_Base_MspInit+0x66>
  else if(htim_base->Instance==TIM4)
 8001ede:	4a2e      	ldr	r2, [pc, #184]	; (8001f98 <HAL_TIM_Base_MspInit+0x184>)
 8001ee0:	4293      	cmp	r3, r2
 8001ee2:	d12c      	bne.n	8001f3e <HAL_TIM_Base_MspInit+0x12a>
    __HAL_RCC_TIM4_CLK_ENABLE();
 8001ee4:	f502 320c 	add.w	r2, r2, #143360	; 0x23000
 8001ee8:	2300      	movs	r3, #0
 8001eea:	9302      	str	r3, [sp, #8]
 8001eec:	6c11      	ldr	r1, [r2, #64]	; 0x40
    hdma_tim4_ch1.Instance = DMA1_Stream0;
 8001eee:	4c2b      	ldr	r4, [pc, #172]	; (8001f9c <HAL_TIM_Base_MspInit+0x188>)
    hdma_tim4_ch1.Init.Channel = DMA_CHANNEL_2;
 8001ef0:	f8df c0bc 	ldr.w	ip, [pc, #188]	; 8001fb0 <HAL_TIM_Base_MspInit+0x19c>
    __HAL_RCC_TIM4_CLK_ENABLE();
 8001ef4:	f041 0104 	orr.w	r1, r1, #4
 8001ef8:	6411      	str	r1, [r2, #64]	; 0x40
 8001efa:	6c12      	ldr	r2, [r2, #64]	; 0x40
 8001efc:	f002 0204 	and.w	r2, r2, #4
 8001f00:	9202      	str	r2, [sp, #8]
 8001f02:	9a02      	ldr	r2, [sp, #8]
    hdma_tim4_ch1.Init.Channel = DMA_CHANNEL_2;
 8001f04:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 8001f08:	e9c4 c200 	strd	ip, r2, [r4]
    hdma_tim4_ch1.Init.Direction = DMA_MEMORY_TO_PERIPH;
 8001f0c:	2240      	movs	r2, #64	; 0x40
    hdma_tim4_ch1.Init.PeriphInc = DMA_PINC_DISABLE;
 8001f0e:	e9c4 2302 	strd	r2, r3, [r4, #8]
    hdma_tim4_ch1.Init.PeriphDataAlignment = DMA_PDATAALIGN_HALFWORD;
 8001f12:	f44f 6e80 	mov.w	lr, #1024	; 0x400
 8001f16:	f44f 6200 	mov.w	r2, #2048	; 0x800
 8001f1a:	e9c4 e204 	strd	lr, r2, [r4, #16]
    hdma_tim4_ch1.Init.MemDataAlignment = DMA_MDATAALIGN_HALFWORD;
 8001f1e:	f44f 5200 	mov.w	r2, #8192	; 0x2000
    hdma_tim5_ch1.Init.MemDataAlignment = DMA_MDATAALIGN_WORD;
 8001f22:	61a2      	str	r2, [r4, #24]
    hdma_tim5_ch1.Init.Mode = DMA_CIRCULAR;
 8001f24:	f44f 7280 	mov.w	r2, #256	; 0x100
    hdma_tim5_ch1.Init.Priority = DMA_PRIORITY_LOW;
 8001f28:	e9c4 2307 	strd	r2, r3, [r4, #28]
    hdma_tim5_ch1.Init.FIFOMode = DMA_FIFOMODE_DISABLE;
 8001f2c:	6263      	str	r3, [r4, #36]	; 0x24
    if (HAL_DMA_Init(&hdma_tim5_ch1) != HAL_OK)
 8001f2e:	4620      	mov	r0, r4
 8001f30:	f001 fb70 	bl	8003614 <HAL_DMA_Init>
 8001f34:	b108      	cbz	r0, 8001f3a <HAL_TIM_Base_MspInit+0x126>
      Error_Handler();
 8001f36:	f7ff fd37 	bl	80019a8 <Error_Handler>
    __HAL_LINKDMA(htim_base,hdma[TIM_DMA_ID_CC1],hdma_tim5_ch1);
 8001f3a:	626c      	str	r4, [r5, #36]	; 0x24
 8001f3c:	e79d      	b.n	8001e7a <HAL_TIM_Base_MspInit+0x66>
  else if(htim_base->Instance==TIM5)
 8001f3e:	4a18      	ldr	r2, [pc, #96]	; (8001fa0 <HAL_TIM_Base_MspInit+0x18c>)
 8001f40:	4293      	cmp	r3, r2
 8001f42:	d19b      	bne.n	8001e7c <HAL_TIM_Base_MspInit+0x68>
    __HAL_RCC_TIM5_CLK_ENABLE();
 8001f44:	f502 320b 	add.w	r2, r2, #142336	; 0x22c00
 8001f48:	2300      	movs	r3, #0
 8001f4a:	9303      	str	r3, [sp, #12]
 8001f4c:	6c11      	ldr	r1, [r2, #64]	; 0x40
    hdma_tim5_ch1.Instance = DMA1_Stream2;
 8001f4e:	4c15      	ldr	r4, [pc, #84]	; (8001fa4 <HAL_TIM_Base_MspInit+0x190>)
    __HAL_RCC_TIM5_CLK_ENABLE();
 8001f50:	f041 0108 	orr.w	r1, r1, #8
 8001f54:	6411      	str	r1, [r2, #64]	; 0x40
 8001f56:	6c12      	ldr	r2, [r2, #64]	; 0x40
    hdma_tim5_ch1.Init.Channel = DMA_CHANNEL_6;
 8001f58:	4913      	ldr	r1, [pc, #76]	; (8001fa8 <HAL_TIM_Base_MspInit+0x194>)
    __HAL_RCC_TIM5_CLK_ENABLE();
 8001f5a:	f002 0208 	and.w	r2, r2, #8
 8001f5e:	9203      	str	r2, [sp, #12]
 8001f60:	9a03      	ldr	r2, [sp, #12]
    hdma_tim5_ch1.Init.Channel = DMA_CHANNEL_6;
 8001f62:	f04f 6240 	mov.w	r2, #201326592	; 0xc000000
 8001f66:	e9c4 1200 	strd	r1, r2, [r4]
    hdma_tim5_ch1.Init.Direction = DMA_MEMORY_TO_PERIPH;
 8001f6a:	2240      	movs	r2, #64	; 0x40
    hdma_tim5_ch1.Init.PeriphInc = DMA_PINC_DISABLE;
 8001f6c:	e9c4 2302 	strd	r2, r3, [r4, #8]
    hdma_tim5_ch1.Init.PeriphDataAlignment = DMA_PDATAALIGN_WORD;
 8001f70:	f44f 6080 	mov.w	r0, #1024	; 0x400
 8001f74:	f44f 5280 	mov.w	r2, #4096	; 0x1000
 8001f78:	e9c4 0204 	strd	r0, r2, [r4, #16]
    hdma_tim5_ch1.Init.MemDataAlignment = DMA_MDATAALIGN_WORD;
 8001f7c:	f44f 4280 	mov.w	r2, #16384	; 0x4000
 8001f80:	e7cf      	b.n	8001f22 <HAL_TIM_Base_MspInit+0x10e>
 8001f82:	bf00      	nop
 8001f84:	40023800 	.word	0x40023800
 8001f88:	20012448 	.word	0x20012448
 8001f8c:	40000400 	.word	0x40000400
 8001f90:	20012784 	.word	0x20012784
 8001f94:	40026088 	.word	0x40026088
 8001f98:	40000800 	.word	0x40000800
 8001f9c:	20012868 	.word	0x20012868
 8001fa0:	40000c00 	.word	0x40000c00
 8001fa4:	20012724 	.word	0x20012724
 8001fa8:	40026040 	.word	0x40026040
 8001fac:	400260b8 	.word	0x400260b8
 8001fb0:	40026010 	.word	0x40026010

08001fb4 <HAL_TIM_MspPostInit>:

void HAL_TIM_MspPostInit(TIM_HandleTypeDef* htim)
{
 8001fb4:	b510      	push	{r4, lr}
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001fb6:	2214      	movs	r2, #20
{
 8001fb8:	b08a      	sub	sp, #40	; 0x28
 8001fba:	4604      	mov	r4, r0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001fbc:	2100      	movs	r1, #0
 8001fbe:	eb0d 0002 	add.w	r0, sp, r2
 8001fc2:	f016 fe9c 	bl	8018cfe <memset>
  if(htim->Instance==TIM2)
 8001fc6:	6823      	ldr	r3, [r4, #0]
 8001fc8:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8001fcc:	d114      	bne.n	8001ff8 <HAL_TIM_MspPostInit+0x44>
  {
  /* USER CODE BEGIN TIM2_MspPostInit 0 */

  /* USER CODE END TIM2_MspPostInit 0 */
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001fce:	2300      	movs	r3, #0
 8001fd0:	9301      	str	r3, [sp, #4]
 8001fd2:	4b29      	ldr	r3, [pc, #164]	; (8002078 <HAL_TIM_MspPostInit+0xc4>)
 8001fd4:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001fd6:	f042 0201 	orr.w	r2, r2, #1
 8001fda:	631a      	str	r2, [r3, #48]	; 0x30
 8001fdc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001fde:	f003 0301 	and.w	r3, r3, #1
 8001fe2:	9301      	str	r3, [sp, #4]
 8001fe4:	9b01      	ldr	r3, [sp, #4]
    /**TIM2 GPIO Configuration
    PA3     ------> TIM2_CH4
    */
    GPIO_InitStruct.Pin = xAxisPWM_Pin;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001fe6:	2108      	movs	r1, #8
 8001fe8:	2302      	movs	r3, #2
 8001fea:	e9cd 1305 	strd	r1, r3, [sp, #20]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
    GPIO_InitStruct.Alternate = GPIO_AF1_TIM2;
 8001fee:	2301      	movs	r3, #1
    */
    GPIO_InitStruct.Pin = manipulatorPWM_Pin;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
    GPIO_InitStruct.Alternate = GPIO_AF2_TIM5;
 8001ff0:	9309      	str	r3, [sp, #36]	; 0x24
    HAL_GPIO_Init(manipulatorPWM_GPIO_Port, &GPIO_InitStruct);
 8001ff2:	a905      	add	r1, sp, #20
 8001ff4:	4821      	ldr	r0, [pc, #132]	; (800207c <HAL_TIM_MspPostInit+0xc8>)
 8001ff6:	e02a      	b.n	800204e <HAL_TIM_MspPostInit+0x9a>
  else if(htim->Instance==TIM3)
 8001ff8:	4a21      	ldr	r2, [pc, #132]	; (8002080 <HAL_TIM_MspPostInit+0xcc>)
 8001ffa:	4293      	cmp	r3, r2
 8001ffc:	d110      	bne.n	8002020 <HAL_TIM_MspPostInit+0x6c>
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001ffe:	2300      	movs	r3, #0
 8002000:	9302      	str	r3, [sp, #8]
 8002002:	4b1d      	ldr	r3, [pc, #116]	; (8002078 <HAL_TIM_MspPostInit+0xc4>)
 8002004:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8002006:	f042 0201 	orr.w	r2, r2, #1
 800200a:	631a      	str	r2, [r3, #48]	; 0x30
 800200c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800200e:	f003 0301 	and.w	r3, r3, #1
 8002012:	9302      	str	r3, [sp, #8]
 8002014:	9b02      	ldr	r3, [sp, #8]
    GPIO_InitStruct.Pin = yAxisPWM_L_Pin;
 8002016:	2380      	movs	r3, #128	; 0x80
    GPIO_InitStruct.Pin = manipulatorPWM_Pin;
 8002018:	9305      	str	r3, [sp, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800201a:	2302      	movs	r3, #2
 800201c:	9306      	str	r3, [sp, #24]
 800201e:	e7e7      	b.n	8001ff0 <HAL_TIM_MspPostInit+0x3c>
  else if(htim->Instance==TIM4)
 8002020:	4a18      	ldr	r2, [pc, #96]	; (8002084 <HAL_TIM_MspPostInit+0xd0>)
 8002022:	4293      	cmp	r3, r2
 8002024:	d117      	bne.n	8002056 <HAL_TIM_MspPostInit+0xa2>
    __HAL_RCC_GPIOD_CLK_ENABLE();
 8002026:	2300      	movs	r3, #0
 8002028:	9303      	str	r3, [sp, #12]
 800202a:	4b13      	ldr	r3, [pc, #76]	; (8002078 <HAL_TIM_MspPostInit+0xc4>)
    HAL_GPIO_Init(yAxisPWM_R_GPIO_Port, &GPIO_InitStruct);
 800202c:	4816      	ldr	r0, [pc, #88]	; (8002088 <HAL_TIM_MspPostInit+0xd4>)
    __HAL_RCC_GPIOD_CLK_ENABLE();
 800202e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8002030:	f042 0208 	orr.w	r2, r2, #8
 8002034:	631a      	str	r2, [r3, #48]	; 0x30
 8002036:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002038:	f003 0308 	and.w	r3, r3, #8
 800203c:	9303      	str	r3, [sp, #12]
 800203e:	9b03      	ldr	r3, [sp, #12]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002040:	f44f 5280 	mov.w	r2, #4096	; 0x1000
 8002044:	2302      	movs	r3, #2
 8002046:	e9cd 2305 	strd	r2, r3, [sp, #20]
    GPIO_InitStruct.Alternate = GPIO_AF2_TIM4;
 800204a:	9309      	str	r3, [sp, #36]	; 0x24
    HAL_GPIO_Init(yAxisPWM_R_GPIO_Port, &GPIO_InitStruct);
 800204c:	a905      	add	r1, sp, #20
    HAL_GPIO_Init(manipulatorPWM_GPIO_Port, &GPIO_InitStruct);
 800204e:	f001 fdad 	bl	8003bac <HAL_GPIO_Init>
  /* USER CODE BEGIN TIM5_MspPostInit 1 */

  /* USER CODE END TIM5_MspPostInit 1 */
  }

}
 8002052:	b00a      	add	sp, #40	; 0x28
 8002054:	bd10      	pop	{r4, pc}
  else if(htim->Instance==TIM5)
 8002056:	4a0d      	ldr	r2, [pc, #52]	; (800208c <HAL_TIM_MspPostInit+0xd8>)
 8002058:	4293      	cmp	r3, r2
 800205a:	d1fa      	bne.n	8002052 <HAL_TIM_MspPostInit+0x9e>
    __HAL_RCC_GPIOA_CLK_ENABLE();
 800205c:	2300      	movs	r3, #0
 800205e:	9304      	str	r3, [sp, #16]
 8002060:	4b05      	ldr	r3, [pc, #20]	; (8002078 <HAL_TIM_MspPostInit+0xc4>)
 8002062:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8002064:	f042 0201 	orr.w	r2, r2, #1
 8002068:	631a      	str	r2, [r3, #48]	; 0x30
 800206a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800206c:	f003 0301 	and.w	r3, r3, #1
 8002070:	9304      	str	r3, [sp, #16]
 8002072:	9b04      	ldr	r3, [sp, #16]
    GPIO_InitStruct.Pin = manipulatorPWM_Pin;
 8002074:	2301      	movs	r3, #1
 8002076:	e7cf      	b.n	8002018 <HAL_TIM_MspPostInit+0x64>
 8002078:	40023800 	.word	0x40023800
 800207c:	40020000 	.word	0x40020000
 8002080:	40000400 	.word	0x40000400
 8002084:	40000800 	.word	0x40000800
 8002088:	40020c00 	.word	0x40020c00
 800208c:	40000c00 	.word	0x40000c00

08002090 <HAL_InitTick>:
  *         reset by HAL_Init() or at any time when clock is configured, by HAL_RCC_ClockConfig(). 
  * @param  TickPriority: Tick interrupt priority.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 8002090:	b530      	push	{r4, r5, lr}
  uint32_t              uwTimclock = 0;
  uint32_t              uwPrescalerValue = 0;
  uint32_t              pFLatency;
  
  /*Configure the TIM6 IRQ priority */
  HAL_NVIC_SetPriority(TIM6_DAC_IRQn, TickPriority ,0); 
 8002092:	4601      	mov	r1, r0
{
 8002094:	b089      	sub	sp, #36	; 0x24
  HAL_NVIC_SetPriority(TIM6_DAC_IRQn, TickPriority ,0); 
 8002096:	2200      	movs	r2, #0
 8002098:	2036      	movs	r0, #54	; 0x36
 800209a:	f001 fa3f 	bl	800351c <HAL_NVIC_SetPriority>
  
  /* Enable the TIM6 global Interrupt */
  HAL_NVIC_EnableIRQ(TIM6_DAC_IRQn); 
 800209e:	2036      	movs	r0, #54	; 0x36
 80020a0:	f001 fa70 	bl	8003584 <HAL_NVIC_EnableIRQ>
  
  /* Enable TIM6 clock */
  __HAL_RCC_TIM6_CLK_ENABLE();
 80020a4:	2500      	movs	r5, #0
 80020a6:	4b15      	ldr	r3, [pc, #84]	; (80020fc <HAL_InitTick+0x6c>)
 80020a8:	9502      	str	r5, [sp, #8]
 80020aa:	6c1a      	ldr	r2, [r3, #64]	; 0x40
   
  /* Compute the prescaler value to have TIM6 counter clock equal to 1MHz */
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000) - 1);
  
  /* Initialize TIM6 */
  htim6.Instance = TIM6;
 80020ac:	4c14      	ldr	r4, [pc, #80]	; (8002100 <HAL_InitTick+0x70>)
  __HAL_RCC_TIM6_CLK_ENABLE();
 80020ae:	f042 0210 	orr.w	r2, r2, #16
 80020b2:	641a      	str	r2, [r3, #64]	; 0x40
 80020b4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80020b6:	f003 0310 	and.w	r3, r3, #16
 80020ba:	9302      	str	r3, [sp, #8]
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 80020bc:	a901      	add	r1, sp, #4
 80020be:	a803      	add	r0, sp, #12
  __HAL_RCC_TIM6_CLK_ENABLE();
 80020c0:	9b02      	ldr	r3, [sp, #8]
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 80020c2:	f002 fed5 	bl	8004e70 <HAL_RCC_GetClockConfig>
  uwTimclock = 2*HAL_RCC_GetPCLK1Freq();
 80020c6:	f002 fec3 	bl	8004e50 <HAL_RCC_GetPCLK1Freq>
  htim6.Instance = TIM6;
 80020ca:	4b0e      	ldr	r3, [pc, #56]	; (8002104 <HAL_InitTick+0x74>)
 80020cc:	6023      	str	r3, [r4, #0]
  + Period = [(TIM6CLK/1000) - 1]. to have a (1/1000) s time base.
  + Prescaler = (uwTimclock/1000000 - 1) to have a 1MHz counter clock.
  + ClockDivision = 0
  + Counter direction = Up
  */
  htim6.Init.Period = (1000000 / 1000) - 1;
 80020ce:	f240 33e7 	movw	r3, #999	; 0x3e7
 80020d2:	60e3      	str	r3, [r4, #12]
  uwTimclock = 2*HAL_RCC_GetPCLK1Freq();
 80020d4:	0040      	lsls	r0, r0, #1
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000) - 1);
 80020d6:	4b0c      	ldr	r3, [pc, #48]	; (8002108 <HAL_InitTick+0x78>)
 80020d8:	fbb0 f0f3 	udiv	r0, r0, r3
 80020dc:	3801      	subs	r0, #1
  htim6.Init.Prescaler = uwPrescalerValue;
 80020de:	6060      	str	r0, [r4, #4]
  htim6.Init.ClockDivision = 0;
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
  if(HAL_TIM_Base_Init(&htim6) == HAL_OK)
 80020e0:	4620      	mov	r0, r4
  htim6.Init.ClockDivision = 0;
 80020e2:	6125      	str	r5, [r4, #16]
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
 80020e4:	60a5      	str	r5, [r4, #8]
  if(HAL_TIM_Base_Init(&htim6) == HAL_OK)
 80020e6:	f003 fd43 	bl	8005b70 <HAL_TIM_Base_Init>
 80020ea:	b920      	cbnz	r0, 80020f6 <HAL_InitTick+0x66>
  {
    /* Start the TIM time Base generation in interrupt mode */
    return HAL_TIM_Base_Start_IT(&htim6);
 80020ec:	4620      	mov	r0, r4
 80020ee:	f003 fbdb 	bl	80058a8 <HAL_TIM_Base_Start_IT>
  }
  
  /* Return function status */
  return HAL_ERROR;
}
 80020f2:	b009      	add	sp, #36	; 0x24
 80020f4:	bd30      	pop	{r4, r5, pc}
  return HAL_ERROR;
 80020f6:	2001      	movs	r0, #1
 80020f8:	e7fb      	b.n	80020f2 <HAL_InitTick+0x62>
 80020fa:	bf00      	nop
 80020fc:	40023800 	.word	0x40023800
 8002100:	200128fc 	.word	0x200128fc
 8002104:	40001000 	.word	0x40001000
 8002108:	000f4240 	.word	0x000f4240

0800210c <NMI_Handler>:

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */

  /* USER CODE END NonMaskableInt_IRQn 1 */
}
 800210c:	4770      	bx	lr

0800210e <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 800210e:	e7fe      	b.n	800210e <HardFault_Handler>

08002110 <MemManage_Handler>:

/**
  * @brief This function handles Memory management fault.
  */
void MemManage_Handler(void)
{
 8002110:	e7fe      	b.n	8002110 <MemManage_Handler>

08002112 <BusFault_Handler>:

/**
  * @brief This function handles Pre-fetch fault, memory access fault.
  */
void BusFault_Handler(void)
{
 8002112:	e7fe      	b.n	8002112 <BusFault_Handler>

08002114 <UsageFault_Handler>:

/**
  * @brief This function handles Undefined instruction or illegal state.
  */
void UsageFault_Handler(void)
{
 8002114:	e7fe      	b.n	8002114 <UsageFault_Handler>

08002116 <DebugMon_Handler>:
 8002116:	4770      	bx	lr

08002118 <TIM6_DAC_IRQHandler>:
void TIM6_DAC_IRQHandler(void)
{
  /* USER CODE BEGIN TIM6_DAC_IRQn 0 */

  /* USER CODE END TIM6_DAC_IRQn 0 */
  HAL_TIM_IRQHandler(&htim6);
 8002118:	4801      	ldr	r0, [pc, #4]	; (8002120 <TIM6_DAC_IRQHandler+0x8>)
 800211a:	f003 bc17 	b.w	800594c <HAL_TIM_IRQHandler>
 800211e:	bf00      	nop
 8002120:	200128fc 	.word	0x200128fc

08002124 <LTDC_IRQHandler>:
void LTDC_IRQHandler(void)
{
  /* USER CODE BEGIN LTDC_IRQn 0 */

  /* USER CODE END LTDC_IRQn 0 */
  HAL_LTDC_IRQHandler(&hltdc);
 8002124:	4801      	ldr	r0, [pc, #4]	; (800212c <LTDC_IRQHandler+0x8>)
 8002126:	f002 bb81 	b.w	800482c <HAL_LTDC_IRQHandler>
 800212a:	bf00      	nop
 800212c:	2001267c 	.word	0x2001267c

08002130 <DMA2D_IRQHandler>:
void DMA2D_IRQHandler(void)
{
  /* USER CODE BEGIN DMA2D_IRQn 0 */

  /* USER CODE END DMA2D_IRQn 0 */
  HAL_DMA2D_IRQHandler(&hdma2d);
 8002130:	4801      	ldr	r0, [pc, #4]	; (8002138 <DMA2D_IRQHandler+0x8>)
 8002132:	f001 bc67 	b.w	8003a04 <HAL_DMA2D_IRQHandler>
 8002136:	bf00      	nop
 8002138:	200127e8 	.word	0x200127e8

0800213c <_getpid>:
}

int _getpid(void)
{
	return 1;
}
 800213c:	2001      	movs	r0, #1
 800213e:	4770      	bx	lr

08002140 <_kill>:

int _kill(int pid, int sig)
{
 8002140:	b508      	push	{r3, lr}
	errno = EINVAL;
 8002142:	f016 fd85 	bl	8018c50 <__errno>
 8002146:	2316      	movs	r3, #22
 8002148:	6003      	str	r3, [r0, #0]
	return -1;
}
 800214a:	f04f 30ff 	mov.w	r0, #4294967295
 800214e:	bd08      	pop	{r3, pc}

08002150 <_exit>:

void _exit (int status)
{
 8002150:	b508      	push	{r3, lr}
	errno = EINVAL;
 8002152:	f016 fd7d 	bl	8018c50 <__errno>
 8002156:	2316      	movs	r3, #22
 8002158:	6003      	str	r3, [r0, #0]
 800215a:	e7fe      	b.n	800215a <_exit+0xa>

0800215c <_read>:
	_kill(status, -1);
	while (1) {}		/* Make sure we hang here */
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 800215c:	b570      	push	{r4, r5, r6, lr}
 800215e:	460e      	mov	r6, r1
 8002160:	4615      	mov	r5, r2
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8002162:	460c      	mov	r4, r1
 8002164:	1ba3      	subs	r3, r4, r6
 8002166:	429d      	cmp	r5, r3
 8002168:	dc01      	bgt.n	800216e <_read+0x12>
	{
		*ptr++ = __io_getchar();
	}

return len;
}
 800216a:	4628      	mov	r0, r5
 800216c:	bd70      	pop	{r4, r5, r6, pc}
		*ptr++ = __io_getchar();
 800216e:	f3af 8000 	nop.w
 8002172:	f804 0b01 	strb.w	r0, [r4], #1
 8002176:	e7f5      	b.n	8002164 <_read+0x8>

08002178 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8002178:	b570      	push	{r4, r5, r6, lr}
 800217a:	460e      	mov	r6, r1
 800217c:	4615      	mov	r5, r2
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800217e:	460c      	mov	r4, r1
 8002180:	1ba3      	subs	r3, r4, r6
 8002182:	429d      	cmp	r5, r3
 8002184:	dc01      	bgt.n	800218a <_write+0x12>
	{
		__io_putchar(*ptr++);
	}
	return len;
}
 8002186:	4628      	mov	r0, r5
 8002188:	bd70      	pop	{r4, r5, r6, pc}
		__io_putchar(*ptr++);
 800218a:	f814 0b01 	ldrb.w	r0, [r4], #1
 800218e:	f3af 8000 	nop.w
 8002192:	e7f5      	b.n	8002180 <_write+0x8>

08002194 <_close>:

int _close(int file)
{
	return -1;
}
 8002194:	f04f 30ff 	mov.w	r0, #4294967295
 8002198:	4770      	bx	lr

0800219a <_fstat>:


int _fstat(int file, struct stat *st)
{
	st->st_mode = S_IFCHR;
 800219a:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 800219e:	604b      	str	r3, [r1, #4]
	return 0;
}
 80021a0:	2000      	movs	r0, #0
 80021a2:	4770      	bx	lr

080021a4 <_isatty>:

int _isatty(int file)
{
	return 1;
}
 80021a4:	2001      	movs	r0, #1
 80021a6:	4770      	bx	lr

080021a8 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
	return 0;
}
 80021a8:	2000      	movs	r0, #0
 80021aa:	4770      	bx	lr

080021ac <_sbrk>:
/**
 _sbrk
 Increase program data space. Malloc and related functions depend on this
**/
caddr_t _sbrk(int incr)
{
 80021ac:	b508      	push	{r3, lr}
	extern char end asm("end");
	static char *heap_end;
	char *prev_heap_end;

	if (heap_end == 0)
 80021ae:	4b0a      	ldr	r3, [pc, #40]	; (80021d8 <_sbrk+0x2c>)
 80021b0:	6819      	ldr	r1, [r3, #0]
{
 80021b2:	4602      	mov	r2, r0
	if (heap_end == 0)
 80021b4:	b909      	cbnz	r1, 80021ba <_sbrk+0xe>
		heap_end = &end;
 80021b6:	4909      	ldr	r1, [pc, #36]	; (80021dc <_sbrk+0x30>)
 80021b8:	6019      	str	r1, [r3, #0]

	prev_heap_end = heap_end;
 80021ba:	6818      	ldr	r0, [r3, #0]
	if (heap_end + incr > stack_ptr)
 80021bc:	4669      	mov	r1, sp
 80021be:	4402      	add	r2, r0
 80021c0:	428a      	cmp	r2, r1
 80021c2:	d906      	bls.n	80021d2 <_sbrk+0x26>
	{
		errno = ENOMEM;
 80021c4:	f016 fd44 	bl	8018c50 <__errno>
 80021c8:	230c      	movs	r3, #12
 80021ca:	6003      	str	r3, [r0, #0]
		return (caddr_t) -1;
 80021cc:	f04f 30ff 	mov.w	r0, #4294967295
	}

	heap_end += incr;

	return (caddr_t) prev_heap_end;
}
 80021d0:	bd08      	pop	{r3, pc}
	heap_end += incr;
 80021d2:	601a      	str	r2, [r3, #0]
	return (caddr_t) prev_heap_end;
 80021d4:	e7fc      	b.n	80021d0 <_sbrk+0x24>
 80021d6:	bf00      	nop
 80021d8:	200013c4 	.word	0x200013c4
 80021dc:	20012988 	.word	0x20012988

080021e0 <_ZN23ApplicationFontProviderD1Ev>:
    static const touchgfx::FontId LARGE = 1;   // verdana_40_4bpp
    static const touchgfx::FontId SMALL = 2;   // verdana_10_4bpp
    static const uint16_t NUMBER_OF_FONTS = 3;
};

class ApplicationFontProvider : public touchgfx::FontProvider
 80021e0:	4770      	bx	lr

080021e2 <_ZN23ApplicationFontProviderD0Ev>:
 80021e2:	b510      	push	{r4, lr}
 80021e4:	2104      	movs	r1, #4
 80021e6:	4604      	mov	r4, r0
 80021e8:	f016 fcd4 	bl	8018b94 <_ZdlPvj>
 80021ec:	4620      	mov	r0, r4
 80021ee:	bd10      	pop	{r4, pc}

080021f0 <_ZN23ApplicationFontProvider7getFontEt>:
#include <fonts/GeneratedFont.hpp>
#include <texts/TypedTextDatabase.hpp>

touchgfx::Font* ApplicationFontProvider::getFont(touchgfx::FontId typography)
{
    switch (typography)
 80021f0:	2901      	cmp	r1, #1
{
 80021f2:	b508      	push	{r3, lr}
    switch (typography)
 80021f4:	d008      	beq.n	8002208 <_ZN23ApplicationFontProvider7getFontEt+0x18>
 80021f6:	d303      	bcc.n	8002200 <_ZN23ApplicationFontProvider7getFontEt+0x10>
 80021f8:	2902      	cmp	r1, #2
 80021fa:	d009      	beq.n	8002210 <_ZN23ApplicationFontProvider7getFontEt+0x20>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[1]);
    case Typography::SMALL:
        // verdana_10_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
    default:
        return 0;
 80021fc:	2000      	movs	r0, #0
 80021fe:	e002      	b.n	8002206 <_ZN23ApplicationFontProvider7getFontEt+0x16>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[0]);
 8002200:	f000 fb52 	bl	80028a8 <_ZN17TypedTextDatabase8getFontsEv>
 8002204:	6800      	ldr	r0, [r0, #0]
    }
}
 8002206:	bd08      	pop	{r3, pc}
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[1]);
 8002208:	f000 fb4e 	bl	80028a8 <_ZN17TypedTextDatabase8getFontsEv>
 800220c:	6840      	ldr	r0, [r0, #4]
 800220e:	e7fa      	b.n	8002206 <_ZN23ApplicationFontProvider7getFontEt+0x16>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
 8002210:	f000 fb4a 	bl	80028a8 <_ZN17TypedTextDatabase8getFontsEv>
 8002214:	6880      	ldr	r0, [r0, #8]
 8002216:	e7f6      	b.n	8002206 <_ZN23ApplicationFontProvider7getFontEt+0x16>

08002218 <_ZN14BitmapDatabase11getInstanceEv>:
namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance()
{
    return bitmap_database;
}
 8002218:	4800      	ldr	r0, [pc, #0]	; (800221c <_ZN14BitmapDatabase11getInstanceEv+0x4>)
 800221a:	4770      	bx	lr
 800221c:	0801a188 	.word	0x0801a188

08002220 <_ZN14BitmapDatabase15getInstanceSizeEv>:

uint16_t getInstanceSize()
{
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
}
 8002220:	2007      	movs	r0, #7
 8002222:	4770      	bx	lr

08002224 <_ZNK8touchgfx4Font8getGlyphEt>:
     *
     * @return A pointer to the glyph node or null if the glyph was not found.
     *
     * @see TextProvider::getNextLigature
     */
    virtual const GlyphNode* getGlyph(Unicode::UnicodeChar unicode) const
 8002224:	b513      	push	{r0, r1, r4, lr}
 8002226:	2200      	movs	r2, #0
    {
        if (unicode == 0)
 8002228:	b149      	cbz	r1, 800223e <_ZNK8touchgfx4Font8getGlyphEt+0x1a>
        {
            return 0;
        }
        const uint8_t* dummyPixelDataPointer = 0;
        uint8_t bitsPerPixelDummy = 0;
 800222a:	ab02      	add	r3, sp, #8
        const uint8_t* dummyPixelDataPointer = 0;
 800222c:	9201      	str	r2, [sp, #4]
        uint8_t bitsPerPixelDummy = 0;
 800222e:	f803 2d05 	strb.w	r2, [r3, #-5]!
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 8002232:	6802      	ldr	r2, [r0, #0]
 8002234:	6894      	ldr	r4, [r2, #8]
 8002236:	aa01      	add	r2, sp, #4
 8002238:	47a0      	blx	r4
        return glyph;
    }
 800223a:	b002      	add	sp, #8
 800223c:	bd10      	pop	{r4, pc}
            return 0;
 800223e:	4608      	mov	r0, r1
 8002240:	e7fb      	b.n	800223a <_ZNK8touchgfx4Font8getGlyphEt+0x16>

08002242 <_ZNK8touchgfx4Font15getFallbackCharEv>:
     * @return The default character for the typography in case no glyph is available.
     */
    virtual Unicode::UnicodeChar getFallbackChar() const
    {
        return fallbackCharacter;
    }
 8002242:	8940      	ldrh	r0, [r0, #10]
 8002244:	4770      	bx	lr

08002246 <_ZNK8touchgfx4Font15getEllipsisCharEv>:
     * @see TextArea::setWideTextAction
     */
    virtual Unicode::UnicodeChar getEllipsisChar() const
    {
        return ellipsisCharacter;
    }
 8002246:	8980      	ldrh	r0, [r0, #12]
 8002248:	4770      	bx	lr

0800224a <_ZNK8touchgfx4Font13getFontHeightEv>:
     *       getMinimumTextHeight for this.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getFontHeight() const
    {
        return fontHeight;
    }
 800224a:	8880      	ldrh	r0, [r0, #4]
 800224c:	4770      	bx	lr

0800224e <_ZNK8touchgfx4Font20getMinimumTextHeightEv>:
     *
     * @return The minimum height needed for a text field that uses this font.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getMinimumTextHeight() const
    {
        return fontHeight + pixelsBelowBaseline;
 800224e:	7983      	ldrb	r3, [r0, #6]
 8002250:	8880      	ldrh	r0, [r0, #4]
 8002252:	4418      	add	r0, r3
    }
 8002254:	b280      	uxth	r0, r0
 8002256:	4770      	bx	lr

08002258 <_ZNK8touchgfx4Font15getBitsPerPixelEv>:
     *
     * @return The number of bits used per pixel in this font.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getBitsPerPixel() const
    {
        return bPerPixel;
 8002258:	79c0      	ldrb	r0, [r0, #7]
    }
 800225a:	f000 007f 	and.w	r0, r0, #127	; 0x7f
 800225e:	4770      	bx	lr

08002260 <_ZNK8touchgfx4Font15getByteAlignRowEv>:
     *
     * @return True if each glyph row is stored byte aligned, false otherwise.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getByteAlignRow() const
    {
        return bAlignRow;
 8002260:	79c0      	ldrb	r0, [r0, #7]
    }
 8002262:	09c0      	lsrs	r0, r0, #7
 8002264:	4770      	bx	lr

08002266 <_ZN8touchgfx9TypedTextD1Ev>:
    }
 8002266:	4770      	bx	lr

08002268 <_ZN8touchgfx9TypedTextD0Ev>:
    virtual ~TypedText()
 8002268:	b510      	push	{r4, lr}
    }
 800226a:	2108      	movs	r1, #8
    virtual ~TypedText()
 800226c:	4604      	mov	r4, r0
    }
 800226e:	f016 fc91 	bl	8018b94 <_ZdlPvj>
 8002272:	4620      	mov	r0, r4
 8002274:	bd10      	pop	{r4, pc}

08002276 <_ZN8touchgfx11Application15appSwitchScreenEh>:
     *
     * @param screenId An id that maps to the desired screen.
     */
    virtual void appSwitchScreen(uint8_t screenId)
    {
    }
 8002276:	4770      	bx	lr

08002278 <_ZN8touchgfx11Application13requestRedrawERNS_4RectE>:
     *
     * @param [in,out] rect The Rect that must be redrawn.
     */
    virtual void requestRedraw(Rect& rect)
    {
        redraw = rect;
 8002278:	f500 7396 	add.w	r3, r0, #300	; 0x12c
 800227c:	6808      	ldr	r0, [r1, #0]
 800227e:	6849      	ldr	r1, [r1, #4]
 8002280:	c303      	stmia	r3!, {r0, r1}
    };
 8002282:	4770      	bx	lr

08002284 <_ZN8touchgfx10Transition8tearDownEv>:
     * Tears down the Animation. Called before the destructor is called, when the
     * application changes the transition.
     */
    virtual void tearDown()
    {
    }
 8002284:	4770      	bx	lr

08002286 <_ZN8touchgfx10Transition4initEv>:
     * Initializes the transition. Called after the constructor is called, when the
     * application changes the transition.
     */
    virtual void init()
    {
    }
 8002286:	4770      	bx	lr

08002288 <_ZN8touchgfx10Transition18setScreenContainerERNS_9ContainerE>:
     *
     * @param [in] cont The Container the transition should have access to.
     */
    virtual void setScreenContainer(Container& cont)
    {
        screenContainer = &cont;
 8002288:	6041      	str	r1, [r0, #4]
    }
 800228a:	4770      	bx	lr

0800228c <_ZN23FrontendApplicationBaseD1Ev>:

class FrontendApplicationBase : public touchgfx::MVPApplication
{
public:
    FrontendApplicationBase(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplicationBase() { }
 800228c:	4770      	bx	lr

0800228e <_ZN8touchgfx12NoTransition15handleTickEventEv>:
{
public:
    /** Indicates that the transition is done after the first tick. */
    virtual void handleTickEvent()
    {
        done = true;
 800228e:	2301      	movs	r3, #1
 8002290:	7203      	strb	r3, [r0, #8]
    }
 8002292:	4770      	bx	lr

08002294 <_ZN8touchgfx12NoTransitionD1Ev>:
class NoTransition : public Transition
 8002294:	4770      	bx	lr

08002296 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>:
 *
 * @note The member function to call must return void. The function can have zero, one, two or
 *       three arguments of any type.
 */
template <class dest_type>
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8002296:	4770      	bx	lr

08002298 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv>:

    /**
     * Calls the member function. Do not call execute unless isValid() returns true (ie. a
     * pointer to the object and the function has been set).
     */
    virtual void execute()
 8002298:	b410      	push	{r4}
    {
        (pobject->*pmemfun_0)();
 800229a:	68c4      	ldr	r4, [r0, #12]
 800229c:	6841      	ldr	r1, [r0, #4]
 800229e:	1062      	asrs	r2, r4, #1
    virtual void execute()
 80022a0:	4603      	mov	r3, r0
        (pobject->*pmemfun_0)();
 80022a2:	07e4      	lsls	r4, r4, #31
 80022a4:	eb01 0002 	add.w	r0, r1, r2
 80022a8:	689b      	ldr	r3, [r3, #8]
 80022aa:	bf48      	it	mi
 80022ac:	588a      	ldrmi	r2, [r1, r2]
    }
 80022ae:	f85d 4b04 	ldr.w	r4, [sp], #4
        (pobject->*pmemfun_0)();
 80022b2:	bf48      	it	mi
 80022b4:	58d3      	ldrmi	r3, [r2, r3]
 80022b6:	4718      	bx	r3

080022b8 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv>:
     *
     * @return true If the callback is valid (i.e. safe to call execute).
     */
    virtual bool isValid() const
    {
        return (pobject != 0) && (pmemfun_0 != 0);
 80022b8:	6843      	ldr	r3, [r0, #4]
 80022ba:	b12b      	cbz	r3, 80022c8 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x10>
 80022bc:	6883      	ldr	r3, [r0, #8]
 80022be:	b92b      	cbnz	r3, 80022cc <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x14>
 80022c0:	68c0      	ldr	r0, [r0, #12]
 80022c2:	f000 0001 	and.w	r0, r0, #1
 80022c6:	4770      	bx	lr
 80022c8:	4618      	mov	r0, r3
 80022ca:	4770      	bx	lr
 80022cc:	2001      	movs	r0, #1
    }
 80022ce:	4770      	bx	lr

080022d0 <_ZN8touchgfx12NoTransitionD0Ev>:
 80022d0:	b510      	push	{r4, lr}
 80022d2:	210c      	movs	r1, #12
 80022d4:	4604      	mov	r4, r0
 80022d6:	f016 fc5d 	bl	8018b94 <_ZdlPvj>
 80022da:	4620      	mov	r0, r4
 80022dc:	bd10      	pop	{r4, pc}

080022de <_ZN23FrontendApplicationBaseD0Ev>:
 80022de:	b510      	push	{r4, lr}
 80022e0:	f44f 71ac 	mov.w	r1, #344	; 0x158
 80022e4:	4604      	mov	r4, r0
 80022e6:	f016 fc55 	bl	8018b94 <_ZdlPvj>
 80022ea:	4620      	mov	r0, r4
 80022ec:	bd10      	pop	{r4, pc}

080022ee <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED0Ev>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 80022ee:	b510      	push	{r4, lr}
 80022f0:	2110      	movs	r1, #16
 80022f2:	4604      	mov	r4, r0
 80022f4:	f016 fc4e 	bl	8018b94 <_ZdlPvj>
 80022f8:	4620      	mov	r0, r4
 80022fa:	bd10      	pop	{r4, pc}

080022fc <_ZN8touchgfx10Transition10invalidateEv>:
    virtual void invalidate()
 80022fc:	b510      	push	{r4, lr}
        Application::getInstance()->draw();
 80022fe:	f008 ffd1 	bl	800b2a4 <_ZN8touchgfx11Application11getInstanceEv>
 8002302:	6803      	ldr	r3, [r0, #0]
    }
 8002304:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        Application::getInstance()->draw();
 8002308:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800230a:	4718      	bx	r3

0800230c <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv>:
    /**
     * Handles the pending screen transition.
     *
     * Delegates the work to evaluatePendingScreenTransition()
     */
    virtual void handlePendingScreenTransition()
 800230c:	b510      	push	{r4, lr}
 800230e:	4604      	mov	r4, r0
     * Evaluates the pending Callback instances. If a callback is valid, it is executed and
     * a Screen transition is executed.
     */
    void evaluatePendingScreenTransition()
    {
        if (pendingScreenTransitionCallback && pendingScreenTransitionCallback->isValid())
 8002310:	f8d0 013c 	ldr.w	r0, [r0, #316]	; 0x13c
 8002314:	b158      	cbz	r0, 800232e <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
 8002316:	6803      	ldr	r3, [r0, #0]
 8002318:	68db      	ldr	r3, [r3, #12]
 800231a:	4798      	blx	r3
 800231c:	b138      	cbz	r0, 800232e <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
        {
            pendingScreenTransitionCallback->execute();
 800231e:	f8d4 013c 	ldr.w	r0, [r4, #316]	; 0x13c
 8002322:	6803      	ldr	r3, [r0, #0]
 8002324:	689b      	ldr	r3, [r3, #8]
 8002326:	4798      	blx	r3
            pendingScreenTransitionCallback = 0;
 8002328:	2300      	movs	r3, #0
 800232a:	f8c4 313c 	str.w	r3, [r4, #316]	; 0x13c
    }
 800232e:	bd10      	pop	{r4, pc}

08002330 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>:
#include <gui/mainscreen_screen/mainScreenView.hpp>
#include <gui/mainscreen_screen/mainScreenPresenter.hpp>

using namespace touchgfx;

FrontendApplicationBase::FrontendApplicationBase(Model& m, FrontendHeap& heap)
 8002330:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8002332:	4604      	mov	r4, r0
 8002334:	4617      	mov	r7, r2
 8002336:	460e      	mov	r6, r1
          pendingScreenTransitionCallback(0)
 8002338:	f008 ffd4 	bl	800b2e4 <_ZN8touchgfx11ApplicationC1Ev>
        instance = this;
 800233c:	4b14      	ldr	r3, [pc, #80]	; (8002390 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x60>)
    : touchgfx::MVPApplication(),
      transitionCallback(),
      frontendHeap(heap),
      model(m)
 800233e:	f8c4 6154 	str.w	r6, [r4, #340]	; 0x154
 8002342:	601c      	str	r4, [r3, #0]
        return instance;
 8002344:	4e13      	ldr	r6, [pc, #76]	; (8002394 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x64>)
 8002346:	4b14      	ldr	r3, [pc, #80]	; (8002398 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x68>)
 8002348:	6023      	str	r3, [r4, #0]
          pendingScreenTransitionCallback(0)
 800234a:	2500      	movs	r5, #0
 800234c:	6830      	ldr	r0, [r6, #0]
        : pobject(0), pmemfun_0(0)
 800234e:	f8c4 5148 	str.w	r5, [r4, #328]	; 0x148
 8002352:	f8c4 514c 	str.w	r5, [r4, #332]	; 0x14c
 8002356:	4b11      	ldr	r3, [pc, #68]	; (800239c <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x6c>)
 8002358:	f8c4 3140 	str.w	r3, [r4, #320]	; 0x140
{
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_PORTRAIT);
 800235c:	6803      	ldr	r3, [r0, #0]
 800235e:	f8c4 5138 	str.w	r5, [r4, #312]	; 0x138
 8002362:	689b      	ldr	r3, [r3, #8]
 8002364:	f8c4 513c 	str.w	r5, [r4, #316]	; 0x13c
 8002368:	2101      	movs	r1, #1
 800236a:	f8c4 5144 	str.w	r5, [r4, #324]	; 0x144
      model(m)
 800236e:	f8c4 7150 	str.w	r7, [r4, #336]	; 0x150
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_PORTRAIT);
 8002372:	4798      	blx	r3
    touchgfx::Texts::setLanguage(GB);
 8002374:	4628      	mov	r0, r5
 8002376:	f000 fa4d 	bl	8002814 <_ZN8touchgfx5Texts11setLanguageEt>
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 800237a:	6833      	ldr	r3, [r6, #0]
 800237c:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 8002380:	b10a      	cbz	r2, 8002386 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x56>
 8002382:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8002384:	b900      	cbnz	r0, 8002388 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x58>
            return instance->lcdRef;
 8002386:	6898      	ldr	r0, [r3, #8]
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableTextureMapperAll();
 8002388:	f00f fb81 	bl	8011a8e <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>
}
 800238c:	4620      	mov	r0, r4
 800238e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8002390:	200121f8 	.word	0x200121f8
 8002394:	2001218c 	.word	0x2001218c
 8002398:	0801a244 	.word	0x0801a244
 800239c:	0801a22c 	.word	0x0801a22c

080023a0 <_ZN23FrontendApplicationBase32gotomainScreenScreenNoTransitionEv>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 80023a0:	4b06      	ldr	r3, [pc, #24]	; (80023bc <_ZN23FrontendApplicationBase32gotomainScreenScreenNoTransitionEv+0x1c>)
 80023a2:	f8c0 3148 	str.w	r3, [r0, #328]	; 0x148
 80023a6:	2300      	movs	r3, #0
 80023a8:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
// mainScreen

void FrontendApplicationBase::gotomainScreenScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplication::gotomainScreenScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 80023ac:	f500 73a0 	add.w	r3, r0, #320	; 0x140
 80023b0:	f8c0 0144 	str.w	r0, [r0, #324]	; 0x144
 80023b4:	f8c0 313c 	str.w	r3, [r0, #316]	; 0x13c
}
 80023b8:	4770      	bx	lr
 80023ba:	bf00      	nop
 80023bc:	08002501 	.word	0x08002501

080023c0 <_ZN8touchgfx14makeTransitionI14mainScreenView19mainScreenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_>:
 *
 * @return Pointer to the new Presenter of the requested type. Incidentally it will be the same
 *         value as the old presenter due to memory reuse.
 */
template <class ScreenType, class PresenterType, class TransType, class ModelType>
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
 80023c0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80023c4:	4607      	mov	r7, r0
{
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 80023c6:	6890      	ldr	r0, [r2, #8]
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
 80023c8:	f8dd a020 	ldr.w	sl, [sp, #32]
 80023cc:	4699      	mov	r9, r3
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 80023ce:	6803      	ldr	r3, [r0, #0]
 80023d0:	6a1b      	ldr	r3, [r3, #32]
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
 80023d2:	4688      	mov	r8, r1
 80023d4:	4615      	mov	r5, r2
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 80023d6:	4798      	blx	r3
 80023d8:	f5b0 7f59 	cmp.w	r0, #868	; 0x364
 80023dc:	d205      	bcs.n	80023ea <_ZN8touchgfx14makeTransitionI14mainScreenView19mainScreenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x2a>
 80023de:	4b42      	ldr	r3, [pc, #264]	; (80024e8 <_ZN8touchgfx14makeTransitionI14mainScreenView19mainScreenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x128>)
 80023e0:	4a42      	ldr	r2, [pc, #264]	; (80024ec <_ZN8touchgfx14makeTransitionI14mainScreenView19mainScreenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x12c>)
 80023e2:	21a7      	movs	r1, #167	; 0xa7
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 80023e4:	4842      	ldr	r0, [pc, #264]	; (80024f0 <_ZN8touchgfx14makeTransitionI14mainScreenView19mainScreenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x130>)
 80023e6:	f016 fc01 	bl	8018bec <__assert_func>
 80023ea:	6868      	ldr	r0, [r5, #4]
 80023ec:	6803      	ldr	r3, [r0, #0]
 80023ee:	6a1b      	ldr	r3, [r3, #32]
 80023f0:	4798      	blx	r3
 80023f2:	280f      	cmp	r0, #15
 80023f4:	d803      	bhi.n	80023fe <_ZN8touchgfx14makeTransitionI14mainScreenView19mainScreenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x3e>
 80023f6:	4b3f      	ldr	r3, [pc, #252]	; (80024f4 <_ZN8touchgfx14makeTransitionI14mainScreenView19mainScreenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x134>)
 80023f8:	4a3c      	ldr	r2, [pc, #240]	; (80024ec <_ZN8touchgfx14makeTransitionI14mainScreenView19mainScreenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x12c>)
 80023fa:	21a8      	movs	r1, #168	; 0xa8
 80023fc:	e7f2      	b.n	80023e4 <_ZN8touchgfx14makeTransitionI14mainScreenView19mainScreenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x24>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 80023fe:	68e8      	ldr	r0, [r5, #12]
 8002400:	6803      	ldr	r3, [r0, #0]
 8002402:	6a1b      	ldr	r3, [r3, #32]
 8002404:	4798      	blx	r3
 8002406:	280b      	cmp	r0, #11
 8002408:	d803      	bhi.n	8002412 <_ZN8touchgfx14makeTransitionI14mainScreenView19mainScreenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x52>
 800240a:	4b3b      	ldr	r3, [pc, #236]	; (80024f8 <_ZN8touchgfx14makeTransitionI14mainScreenView19mainScreenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x138>)
 800240c:	4a37      	ldr	r2, [pc, #220]	; (80024ec <_ZN8touchgfx14makeTransitionI14mainScreenView19mainScreenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x12c>)
 800240e:	21a9      	movs	r1, #169	; 0xa9
 8002410:	e7e8      	b.n	80023e4 <_ZN8touchgfx14makeTransitionI14mainScreenView19mainScreenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x24>
    Application::getInstance()->clearAllTimerWidgets();
 8002412:	f008 ff47 	bl	800b2a4 <_ZN8touchgfx11Application11getInstanceEv>
 8002416:	f008 ff4b 	bl	800b2b0 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
    if (*currentTrans)
 800241a:	f8d9 0000 	ldr.w	r0, [r9]
 800241e:	b110      	cbz	r0, 8002426 <_ZN8touchgfx14makeTransitionI14mainScreenView19mainScreenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x66>
        (*currentTrans)->tearDown();
 8002420:	6803      	ldr	r3, [r0, #0]
 8002422:	68db      	ldr	r3, [r3, #12]
 8002424:	4798      	blx	r3
    if (*currentTrans)
 8002426:	f8d9 0000 	ldr.w	r0, [r9]
 800242a:	b110      	cbz	r0, 8002432 <_ZN8touchgfx14makeTransitionI14mainScreenView19mainScreenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x72>
        (*currentTrans)->~Transition();
 800242c:	6803      	ldr	r3, [r0, #0]
 800242e:	681b      	ldr	r3, [r3, #0]
 8002430:	4798      	blx	r3
    if (*currentScreen)
 8002432:	6838      	ldr	r0, [r7, #0]
 8002434:	b110      	cbz	r0, 800243c <_ZN8touchgfx14makeTransitionI14mainScreenView19mainScreenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x7c>
        (*currentScreen)->tearDownScreen();
 8002436:	6803      	ldr	r3, [r0, #0]
 8002438:	695b      	ldr	r3, [r3, #20]
 800243a:	4798      	blx	r3
    if (*currentPresenter)
 800243c:	f8d8 0000 	ldr.w	r0, [r8]
 8002440:	b110      	cbz	r0, 8002448 <_ZN8touchgfx14makeTransitionI14mainScreenView19mainScreenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x88>
        (*currentPresenter)->deactivate();
 8002442:	6803      	ldr	r3, [r0, #0]
 8002444:	685b      	ldr	r3, [r3, #4]
 8002446:	4798      	blx	r3
    if (*currentScreen)
 8002448:	6838      	ldr	r0, [r7, #0]
 800244a:	b110      	cbz	r0, 8002452 <_ZN8touchgfx14makeTransitionI14mainScreenView19mainScreenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x92>
        (*currentScreen)->~Screen();
 800244c:	6803      	ldr	r3, [r0, #0]
 800244e:	681b      	ldr	r3, [r3, #0]
 8002450:	4798      	blx	r3
    if (*currentPresenter)
 8002452:	f8d8 0000 	ldr.w	r0, [r8]
 8002456:	b110      	cbz	r0, 800245e <_ZN8touchgfx14makeTransitionI14mainScreenView19mainScreenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x9e>
        (*currentPresenter)->~Presenter();
 8002458:	6803      	ldr	r3, [r0, #0]
 800245a:	689b      	ldr	r3, [r3, #8]
 800245c:	4798      	blx	r3

    prepareTransition(currentScreen, currentPresenter, currentTrans);

    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 800245e:	68e8      	ldr	r0, [r5, #12]
     * @return A typed reference to the object at the specified index.
     */
    template <typename T>
    T& at(const uint16_t index)
    {
        return *static_cast<T*>(element(index));
 8002460:	6803      	ldr	r3, [r0, #0]
 8002462:	2100      	movs	r1, #0
 8002464:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002466:	4798      	blx	r3
 8002468:	4604      	mov	r4, r0
 800246a:	b120      	cbz	r0, 8002476 <_ZN8touchgfx14makeTransitionI14mainScreenView19mainScreenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xb6>
        : screenContainer(0), done(false)
 800246c:	2300      	movs	r3, #0
 800246e:	6043      	str	r3, [r0, #4]
 8002470:	7203      	strb	r3, [r0, #8]
 8002472:	4b22      	ldr	r3, [pc, #136]	; (80024fc <_ZN8touchgfx14makeTransitionI14mainScreenView19mainScreenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x13c>)
 8002474:	6003      	str	r3, [r0, #0]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8002476:	68a8      	ldr	r0, [r5, #8]
 8002478:	6803      	ldr	r3, [r0, #0]
 800247a:	2100      	movs	r1, #0
 800247c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800247e:	4798      	blx	r3
 8002480:	4606      	mov	r6, r0
 8002482:	b108      	cbz	r0, 8002488 <_ZN8touchgfx14makeTransitionI14mainScreenView19mainScreenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xc8>
 8002484:	f000 fd18 	bl	8002eb8 <_ZN14mainScreenViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8002488:	6868      	ldr	r0, [r5, #4]
 800248a:	6803      	ldr	r3, [r0, #0]
 800248c:	2100      	movs	r1, #0
 800248e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002490:	4798      	blx	r3
 8002492:	4605      	mov	r5, r0
 8002494:	b110      	cbz	r0, 800249c <_ZN8touchgfx14makeTransitionI14mainScreenView19mainScreenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xdc>
 8002496:	4631      	mov	r1, r6
 8002498:	f000 fcc8 	bl	8002e2c <_ZN19mainScreenPresenterC1ER14mainScreenView>
    *currentTrans = newTransition;
 800249c:	f8c9 4000 	str.w	r4, [r9]
    *currentPresenter = newPresenter;
 80024a0:	f8c8 5000 	str.w	r5, [r8]
    *currentScreen = newScreen;
 80024a4:	603e      	str	r6, [r7, #0]
    model->bind(newPresenter);
 80024a6:	b1e5      	cbz	r5, 80024e2 <_ZN8touchgfx14makeTransitionI14mainScreenView19mainScreenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x122>
 80024a8:	1d2b      	adds	r3, r5, #4
public:
    Model();

    void bind(ModelListener* listener)
    {
        modelListener = listener;
 80024aa:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 80024ae:	6833      	ldr	r3, [r6, #0]
    
    virtual ~ModelListener() {}

    void bind(Model* m)
    {
        model = m;
 80024b0:	f8c5 a008 	str.w	sl, [r5, #8]
 80024b4:	4630      	mov	r0, r6
     *
     * @param [in] presenter The specific Presenter to be associated with the View.
     */
    void bind(T& presenter)
    {
        this->presenter = &presenter;
 80024b6:	63f5      	str	r5, [r6, #60]	; 0x3c
 80024b8:	68db      	ldr	r3, [r3, #12]
 80024ba:	4798      	blx	r3
    newPresenter->activate();
 80024bc:	682b      	ldr	r3, [r5, #0]
 80024be:	4628      	mov	r0, r5
 80024c0:	681b      	ldr	r3, [r3, #0]
 80024c2:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 80024c4:	4621      	mov	r1, r4
 80024c6:	4630      	mov	r0, r6
 80024c8:	f00a f872 	bl	800c5b0 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 80024cc:	6823      	ldr	r3, [r4, #0]
 80024ce:	4620      	mov	r0, r4
 80024d0:	691b      	ldr	r3, [r3, #16]
 80024d2:	4798      	blx	r3
    newTransition->invalidate();
 80024d4:	6823      	ldr	r3, [r4, #0]
 80024d6:	4620      	mov	r0, r4
 80024d8:	695b      	ldr	r3, [r3, #20]
 80024da:	4798      	blx	r3
    newScreen->bind(*newPresenter);

    finalizeTransition((Screen*)newScreen, (Presenter*)newPresenter, (Transition*)newTransition);

    return newPresenter;
}
 80024dc:	4628      	mov	r0, r5
 80024de:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    model->bind(newPresenter);
 80024e2:	462b      	mov	r3, r5
 80024e4:	e7e1      	b.n	80024aa <_ZN8touchgfx14makeTransitionI14mainScreenView19mainScreenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xea>
 80024e6:	bf00      	nop
 80024e8:	0801a2a4 	.word	0x0801a2a4
 80024ec:	0801a4bf 	.word	0x0801a4bf
 80024f0:	0801a332 	.word	0x0801a332
 80024f4:	0801a379 	.word	0x0801a379
 80024f8:	0801a41c 	.word	0x0801a41c
 80024fc:	0801a288 	.word	0x0801a288

08002500 <_ZN23FrontendApplicationBase36gotomainScreenScreenNoTransitionImplEv>:

void FrontendApplicationBase::gotomainScreenScreenNoTransitionImpl()
{
 8002500:	b507      	push	{r0, r1, r2, lr}
    touchgfx::makeTransition<mainScreenView, mainScreenPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8002502:	f8d0 3154 	ldr.w	r3, [r0, #340]	; 0x154
 8002506:	9300      	str	r3, [sp, #0]
 8002508:	f8d0 2150 	ldr.w	r2, [r0, #336]	; 0x150
 800250c:	4b04      	ldr	r3, [pc, #16]	; (8002520 <_ZN23FrontendApplicationBase36gotomainScreenScreenNoTransitionImplEv+0x20>)
 800250e:	f500 719c 	add.w	r1, r0, #312	; 0x138
 8002512:	4804      	ldr	r0, [pc, #16]	; (8002524 <_ZN23FrontendApplicationBase36gotomainScreenScreenNoTransitionImplEv+0x24>)
 8002514:	f7ff ff54 	bl	80023c0 <_ZN8touchgfx14makeTransitionI14mainScreenView19mainScreenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_>
}
 8002518:	b003      	add	sp, #12
 800251a:	f85d fb04 	ldr.w	pc, [sp], #4
 800251e:	bf00      	nop
 8002520:	200121ec 	.word	0x200121ec
 8002524:	200121e8 	.word	0x200121e8

08002528 <_ZNK8touchgfx13GeneratedFont12getGSUBTableEv>:
     * @return The GSUB table or null if font has GSUB no table
     */
    virtual const uint16_t* getGSUBTable() const
    {
        return gsubTable;
    }
 8002528:	6a00      	ldr	r0, [r0, #32]
 800252a:	4770      	bx	lr

0800252c <_ZN8touchgfx13GeneratedFontD1Ev>:
class GeneratedFont : public ConstFont
 800252c:	4770      	bx	lr

0800252e <_ZNK8touchgfx13GeneratedFont12getPixelDataEPKNS_9GlyphNodeE>:
}

const uint8_t* GeneratedFont::getPixelData(const GlyphNode* glyph) const
{
    const uint8_t* const* table = (const uint8_t* const*)glyphData;
    return &(table[glyph->unicode / 2048][glyph->dataOffset]);
 800252e:	888b      	ldrh	r3, [r1, #4]
 8002530:	6980      	ldr	r0, [r0, #24]
 8002532:	680a      	ldr	r2, [r1, #0]
 8002534:	0adb      	lsrs	r3, r3, #11
 8002536:	f850 0023 	ldr.w	r0, [r0, r3, lsl #2]
}
 800253a:	4410      	add	r0, r2
 800253c:	4770      	bx	lr

0800253e <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE>:

int8_t GeneratedFont::getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const
{
 800253e:	b510      	push	{r4, lr}
    if (!glyph || glyph->kerningTableSize == 0)
 8002540:	b1c2      	cbz	r2, 8002574 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
 8002542:	7b13      	ldrb	r3, [r2, #12]
 8002544:	b1b3      	cbz	r3, 8002574 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
        return ((flags & GLYPH_DATA_KERNINGTABLEPOS_BIT8_10) << 8) | _kerningTablePos;
 8002546:	7b54      	ldrb	r4, [r2, #13]
 8002548:	7ad2      	ldrb	r2, [r2, #11]
 800254a:	0224      	lsls	r4, r4, #8
 800254c:	f404 64e0 	and.w	r4, r4, #1792	; 0x700
    {
        return 0;
    }

    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 8002550:	4314      	orrs	r4, r2
 8002552:	69c2      	ldr	r2, [r0, #28]
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 8002554:	b298      	uxth	r0, r3
    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 8002556:	eb02 0284 	add.w	r2, r2, r4, lsl #2
    {
        if (prevChar == kerndata->unicodePrevChar)
 800255a:	8813      	ldrh	r3, [r2, #0]
 800255c:	428b      	cmp	r3, r1
 800255e:	d102      	bne.n	8002566 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x28>
        {
            return kerndata->distance;
 8002560:	f992 0002 	ldrsb.w	r0, [r2, #2]
        {
            break;
        }
    }
    return 0;
}
 8002564:	bd10      	pop	{r4, pc}
        if (prevChar < kerndata->unicodePrevChar)
 8002566:	d805      	bhi.n	8002574 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 8002568:	3801      	subs	r0, #1
 800256a:	b280      	uxth	r0, r0
 800256c:	3204      	adds	r2, #4
 800256e:	2800      	cmp	r0, #0
 8002570:	d1f3      	bne.n	800255a <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x1c>
 8002572:	e7f7      	b.n	8002564 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>
        return 0;
 8002574:	2000      	movs	r0, #0
 8002576:	e7f5      	b.n	8002564 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>

08002578 <_ZN8touchgfx13GeneratedFontD0Ev>:
 8002578:	b510      	push	{r4, lr}
 800257a:	2124      	movs	r1, #36	; 0x24
 800257c:	4604      	mov	r4, r0
 800257e:	f016 fb09 	bl	8018b94 <_ZdlPvj>
 8002582:	4620      	mov	r0, r4
 8002584:	bd10      	pop	{r4, pc}
	...

08002588 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKt>:
GeneratedFont::GeneratedFont(const GlyphNode* list, uint16_t size, uint16_t height, uint8_t pixBelowBase, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData) :
 8002588:	b530      	push	{r4, r5, lr}
 800258a:	b089      	sub	sp, #36	; 0x24
 800258c:	4604      	mov	r4, r0
    gsubTable(gsubData)
 800258e:	f8bd 5050 	ldrh.w	r5, [sp, #80]	; 0x50
 8002592:	9506      	str	r5, [sp, #24]
 8002594:	f8bd 504c 	ldrh.w	r5, [sp, #76]	; 0x4c
 8002598:	9505      	str	r5, [sp, #20]
 800259a:	f89d 5040 	ldrb.w	r5, [sp, #64]	; 0x40
 800259e:	9504      	str	r5, [sp, #16]
 80025a0:	f89d 503c 	ldrb.w	r5, [sp, #60]	; 0x3c
 80025a4:	9503      	str	r5, [sp, #12]
 80025a6:	f89d 5038 	ldrb.w	r5, [sp, #56]	; 0x38
 80025aa:	9502      	str	r5, [sp, #8]
 80025ac:	f89d 5034 	ldrb.w	r5, [sp, #52]	; 0x34
 80025b0:	9501      	str	r5, [sp, #4]
 80025b2:	f89d 5030 	ldrb.w	r5, [sp, #48]	; 0x30
 80025b6:	9500      	str	r5, [sp, #0]
 80025b8:	f009 fbfe 	bl	800bdb8 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEtthhhhhtt>
 80025bc:	4b05      	ldr	r3, [pc, #20]	; (80025d4 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKt+0x4c>)
 80025be:	6023      	str	r3, [r4, #0]
 80025c0:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80025c2:	61a3      	str	r3, [r4, #24]
 80025c4:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80025c6:	61e3      	str	r3, [r4, #28]
 80025c8:	9b15      	ldr	r3, [sp, #84]	; 0x54
 80025ca:	6223      	str	r3, [r4, #32]
}
 80025cc:	4620      	mov	r0, r4
 80025ce:	b009      	add	sp, #36	; 0x24
 80025d0:	bd30      	pop	{r4, r5, pc}
 80025d2:	bf00      	nop
 80025d4:	0801a5d4 	.word	0x0801a5d4

080025d8 <__tcf_0>:

touchgfx::GeneratedFont& getFont_verdana_10_4bpp();

touchgfx::GeneratedFont& getFont_verdana_10_4bpp()
{
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0);
 80025d8:	4770      	bx	lr
	...

080025dc <_Z23getFont_verdana_10_4bppv>:
{
 80025dc:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0);
 80025de:	4d14      	ldr	r5, [pc, #80]	; (8002630 <_Z23getFont_verdana_10_4bppv+0x54>)
 80025e0:	782c      	ldrb	r4, [r5, #0]
 80025e2:	f3bf 8f5b 	dmb	ish
 80025e6:	f014 0401 	ands.w	r4, r4, #1
{
 80025ea:	b08b      	sub	sp, #44	; 0x2c
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0);
 80025ec:	d11d      	bne.n	800262a <_Z23getFont_verdana_10_4bppv+0x4e>
 80025ee:	4628      	mov	r0, r5
 80025f0:	f016 fad2 	bl	8018b98 <__cxa_guard_acquire>
 80025f4:	b1c8      	cbz	r0, 800262a <_Z23getFont_verdana_10_4bppv+0x4e>
 80025f6:	233f      	movs	r3, #63	; 0x3f
 80025f8:	9307      	str	r3, [sp, #28]
 80025fa:	4b0e      	ldr	r3, [pc, #56]	; (8002634 <_Z23getFont_verdana_10_4bppv+0x58>)
 80025fc:	9306      	str	r3, [sp, #24]
 80025fe:	4b0e      	ldr	r3, [pc, #56]	; (8002638 <_Z23getFont_verdana_10_4bppv+0x5c>)
 8002600:	490e      	ldr	r1, [pc, #56]	; (800263c <_Z23getFont_verdana_10_4bppv+0x60>)
 8002602:	9403      	str	r4, [sp, #12]
 8002604:	2201      	movs	r2, #1
 8002606:	e9cd 4304 	strd	r4, r3, [sp, #16]
 800260a:	2304      	movs	r3, #4
 800260c:	e9cd 3201 	strd	r3, r2, [sp, #4]
 8002610:	e9cd 4408 	strd	r4, r4, [sp, #32]
 8002614:	230a      	movs	r3, #10
 8002616:	9400      	str	r4, [sp, #0]
 8002618:	4809      	ldr	r0, [pc, #36]	; (8002640 <_Z23getFont_verdana_10_4bppv+0x64>)
 800261a:	f7ff ffb5 	bl	8002588 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKt>
 800261e:	4628      	mov	r0, r5
 8002620:	f016 fac6 	bl	8018bb0 <__cxa_guard_release>
 8002624:	4807      	ldr	r0, [pc, #28]	; (8002644 <_Z23getFont_verdana_10_4bppv+0x68>)
 8002626:	f016 faff 	bl	8018c28 <atexit>
    return verdana_10_4bpp;
}
 800262a:	4805      	ldr	r0, [pc, #20]	; (8002640 <_Z23getFont_verdana_10_4bppv+0x64>)
 800262c:	b00b      	add	sp, #44	; 0x2c
 800262e:	bd30      	pop	{r4, r5, pc}
 8002630:	200013c8 	.word	0x200013c8
 8002634:	0801d91c 	.word	0x0801d91c
 8002638:	0801a620 	.word	0x0801a620
 800263c:	0801d7d4 	.word	0x0801d7d4
 8002640:	200013cc 	.word	0x200013cc
 8002644:	080025d9 	.word	0x080025d9

08002648 <__tcf_0>:

touchgfx::GeneratedFont& getFont_verdana_20_4bpp();

touchgfx::GeneratedFont& getFont_verdana_20_4bpp()
{
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 21, 20, 4, 4, 1, 0, 1, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0);
 8002648:	4770      	bx	lr
	...

0800264c <_Z23getFont_verdana_20_4bppv>:
{
 800264c:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 21, 20, 4, 4, 1, 0, 1, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0);
 800264e:	4d15      	ldr	r5, [pc, #84]	; (80026a4 <_Z23getFont_verdana_20_4bppv+0x58>)
 8002650:	782c      	ldrb	r4, [r5, #0]
 8002652:	f3bf 8f5b 	dmb	ish
 8002656:	f014 0401 	ands.w	r4, r4, #1
{
 800265a:	b08b      	sub	sp, #44	; 0x2c
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 21, 20, 4, 4, 1, 0, 1, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0);
 800265c:	d11e      	bne.n	800269c <_Z23getFont_verdana_20_4bppv+0x50>
 800265e:	4628      	mov	r0, r5
 8002660:	f016 fa9a 	bl	8018b98 <__cxa_guard_acquire>
 8002664:	b1d0      	cbz	r0, 800269c <_Z23getFont_verdana_20_4bppv+0x50>
 8002666:	233f      	movs	r3, #63	; 0x3f
 8002668:	9307      	str	r3, [sp, #28]
 800266a:	4b0f      	ldr	r3, [pc, #60]	; (80026a8 <_Z23getFont_verdana_20_4bppv+0x5c>)
 800266c:	9306      	str	r3, [sp, #24]
 800266e:	4b0f      	ldr	r3, [pc, #60]	; (80026ac <_Z23getFont_verdana_20_4bppv+0x60>)
 8002670:	9305      	str	r3, [sp, #20]
 8002672:	2301      	movs	r3, #1
 8002674:	e9cd 4303 	strd	r4, r3, [sp, #12]
 8002678:	9302      	str	r3, [sp, #8]
 800267a:	2304      	movs	r3, #4
 800267c:	e9cd 3300 	strd	r3, r3, [sp]
 8002680:	2215      	movs	r2, #21
 8002682:	2314      	movs	r3, #20
 8002684:	490a      	ldr	r1, [pc, #40]	; (80026b0 <_Z23getFont_verdana_20_4bppv+0x64>)
 8002686:	480b      	ldr	r0, [pc, #44]	; (80026b4 <_Z23getFont_verdana_20_4bppv+0x68>)
 8002688:	e9cd 4408 	strd	r4, r4, [sp, #32]
 800268c:	f7ff ff7c 	bl	8002588 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKt>
 8002690:	4628      	mov	r0, r5
 8002692:	f016 fa8d 	bl	8018bb0 <__cxa_guard_release>
 8002696:	4808      	ldr	r0, [pc, #32]	; (80026b8 <_Z23getFont_verdana_20_4bppv+0x6c>)
 8002698:	f016 fac6 	bl	8018c28 <atexit>
    return verdana_20_4bpp;
}
 800269c:	4805      	ldr	r0, [pc, #20]	; (80026b4 <_Z23getFont_verdana_20_4bppv+0x68>)
 800269e:	b00b      	add	sp, #44	; 0x2c
 80026a0:	bd30      	pop	{r4, r5, pc}
 80026a2:	bf00      	nop
 80026a4:	200013f0 	.word	0x200013f0
 80026a8:	0801d920 	.word	0x0801d920
 80026ac:	0801a624 	.word	0x0801a624
 80026b0:	0801d7e4 	.word	0x0801d7e4
 80026b4:	200013f4 	.word	0x200013f4
 80026b8:	08002649 	.word	0x08002649

080026bc <__tcf_0>:

touchgfx::GeneratedFont& getFont_verdana_40_4bpp();

touchgfx::GeneratedFont& getFont_verdana_40_4bpp()
{
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0);
 80026bc:	4770      	bx	lr
	...

080026c0 <_Z23getFont_verdana_40_4bppv>:
{
 80026c0:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0);
 80026c2:	4d14      	ldr	r5, [pc, #80]	; (8002714 <_Z23getFont_verdana_40_4bppv+0x54>)
 80026c4:	782c      	ldrb	r4, [r5, #0]
 80026c6:	f3bf 8f5b 	dmb	ish
 80026ca:	f014 0401 	ands.w	r4, r4, #1
{
 80026ce:	b08b      	sub	sp, #44	; 0x2c
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0);
 80026d0:	d11d      	bne.n	800270e <_Z23getFont_verdana_40_4bppv+0x4e>
 80026d2:	4628      	mov	r0, r5
 80026d4:	f016 fa60 	bl	8018b98 <__cxa_guard_acquire>
 80026d8:	b1c8      	cbz	r0, 800270e <_Z23getFont_verdana_40_4bppv+0x4e>
 80026da:	233f      	movs	r3, #63	; 0x3f
 80026dc:	9307      	str	r3, [sp, #28]
 80026de:	4b0e      	ldr	r3, [pc, #56]	; (8002718 <_Z23getFont_verdana_40_4bppv+0x58>)
 80026e0:	9306      	str	r3, [sp, #24]
 80026e2:	4b0e      	ldr	r3, [pc, #56]	; (800271c <_Z23getFont_verdana_40_4bppv+0x5c>)
 80026e4:	490e      	ldr	r1, [pc, #56]	; (8002720 <_Z23getFont_verdana_40_4bppv+0x60>)
 80026e6:	9403      	str	r4, [sp, #12]
 80026e8:	2201      	movs	r2, #1
 80026ea:	e9cd 4304 	strd	r4, r3, [sp, #16]
 80026ee:	2304      	movs	r3, #4
 80026f0:	e9cd 3201 	strd	r3, r2, [sp, #4]
 80026f4:	e9cd 4408 	strd	r4, r4, [sp, #32]
 80026f8:	2328      	movs	r3, #40	; 0x28
 80026fa:	9400      	str	r4, [sp, #0]
 80026fc:	4809      	ldr	r0, [pc, #36]	; (8002724 <_Z23getFont_verdana_40_4bppv+0x64>)
 80026fe:	f7ff ff43 	bl	8002588 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKt>
 8002702:	4628      	mov	r0, r5
 8002704:	f016 fa54 	bl	8018bb0 <__cxa_guard_release>
 8002708:	4807      	ldr	r0, [pc, #28]	; (8002728 <_Z23getFont_verdana_40_4bppv+0x68>)
 800270a:	f016 fa8d 	bl	8018c28 <atexit>
    return verdana_40_4bpp;
}
 800270e:	4805      	ldr	r0, [pc, #20]	; (8002724 <_Z23getFont_verdana_40_4bppv+0x64>)
 8002710:	b00b      	add	sp, #44	; 0x2c
 8002712:	bd30      	pop	{r4, r5, pc}
 8002714:	20001418 	.word	0x20001418
 8002718:	0801d924 	.word	0x0801d924
 800271c:	0801a628 	.word	0x0801a628
 8002720:	0801d90c 	.word	0x0801d90c
 8002724:	2000141c 	.word	0x2000141c
 8002728:	080026bd 	.word	0x080026bd

0800272c <_ZNK8touchgfx4Font12getGSUBTableEv>:
     * @return The GSUB table or null if font has GSUB no table.
     */
    virtual const uint16_t* getGSUBTable() const
    {
        return 0;
    }
 800272c:	2000      	movs	r0, #0
 800272e:	4770      	bx	lr

08002730 <_ZNK8touchgfx4Font14getStringWidthEPKtz>:
#include <touchgfx/Unicode.hpp>
#include <touchgfx/hal/HAL.hpp>
#include <touchgfx/lcd/LCD.hpp>

uint16_t touchgfx::Font::getStringWidth(const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 8002730:	b40e      	push	{r1, r2, r3}
 8002732:	b503      	push	{r0, r1, lr}
 8002734:	ab03      	add	r3, sp, #12
    va_list pArg;
    va_start(pArg, text);
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 8002736:	2100      	movs	r1, #0
{
 8002738:	f853 2b04 	ldr.w	r2, [r3], #4
    va_start(pArg, text);
 800273c:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 800273e:	f009 f977 	bl	800ba30 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 8002742:	b002      	add	sp, #8
 8002744:	f85d eb04 	ldr.w	lr, [sp], #4
 8002748:	b003      	add	sp, #12
 800274a:	4770      	bx	lr

0800274c <_ZNK8touchgfx4Font14getStringWidthEhPKtz>:

uint16_t touchgfx::Font::getStringWidth(touchgfx::TextDirection textDirection, const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 800274c:	b40c      	push	{r2, r3}
 800274e:	b507      	push	{r0, r1, r2, lr}
 8002750:	ab04      	add	r3, sp, #16
 8002752:	f853 2b04 	ldr.w	r2, [r3], #4
    va_list pArg;
    va_start(pArg, text);
 8002756:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(textDirection, text, pArg);
 8002758:	f009 f96a 	bl	800ba30 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 800275c:	b003      	add	sp, #12
 800275e:	f85d eb04 	ldr.w	lr, [sp], #4
 8002762:	b002      	add	sp, #8
 8002764:	4770      	bx	lr
	...

08002768 <_ZN8touchgfx12TextProvider15getNextLigatureEh>:

touchgfx::Unicode::UnicodeChar touchgfx::TextProvider::getNextLigature(TextDirection direction)
{
    if (fontGsubTable && nextCharacters.peekChar())
 8002768:	6bc3      	ldr	r3, [r0, #60]	; 0x3c
{
 800276a:	b510      	push	{r4, lr}
 800276c:	4604      	mov	r4, r0
    if (fontGsubTable && nextCharacters.peekChar())
 800276e:	b373      	cbz	r3, 80027ce <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
        {
            return used == size;
        }
        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
        {
            assert(used > 0);
 8002770:	8e03      	ldrh	r3, [r0, #48]	; 0x30
 8002772:	b92b      	cbnz	r3, 8002780 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x18>
 8002774:	4b18      	ldr	r3, [pc, #96]	; (80027d8 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x70>)
 8002776:	4a19      	ldr	r2, [pc, #100]	; (80027dc <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x74>)
 8002778:	21c0      	movs	r1, #192	; 0xc0
            return buffer[pos];
        }
        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar(uint16_t offset)
        {
            assert(offset < used);
 800277a:	4819      	ldr	r0, [pc, #100]	; (80027e0 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x78>)
 800277c:	f016 fa36 	bl	8018bec <__assert_func>
            return buffer[pos];
 8002780:	8dc3      	ldrh	r3, [r0, #46]	; 0x2e
 8002782:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8002786:	8b5b      	ldrh	r3, [r3, #26]
 8002788:	b30b      	cbz	r3, 80027ce <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
    {
        substituteGlyphs();
 800278a:	f00a fc69 	bl	800d060 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>
            assert(offset < used);
 800278e:	8e23      	ldrh	r3, [r4, #48]	; 0x30
 8002790:	2b01      	cmp	r3, #1
 8002792:	d803      	bhi.n	800279c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x34>
 8002794:	4b13      	ldr	r3, [pc, #76]	; (80027e4 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x7c>)
 8002796:	4a14      	ldr	r2, [pc, #80]	; (80027e8 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x80>)
 8002798:	21c5      	movs	r1, #197	; 0xc5
 800279a:	e7ee      	b.n	800277a <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x12>
            const uint16_t index = pos + offset;
 800279c:	8de2      	ldrh	r2, [r4, #46]	; 0x2e
 800279e:	1c53      	adds	r3, r2, #1
 80027a0:	b29b      	uxth	r3, r3
            return buffer[index < size ? index : index - size];
 80027a2:	2b09      	cmp	r3, #9
 80027a4:	4619      	mov	r1, r3
 80027a6:	bf88      	it	hi
 80027a8:	f1a3 010a 	subhi.w	r1, r3, #10
 80027ac:	eb04 0141 	add.w	r1, r4, r1, lsl #1
        if (nextCharacters.peekChar(1) == 0x093F) //Hindi I-matra
 80027b0:	f640 103f 	movw	r0, #2367	; 0x93f
 80027b4:	8b49      	ldrh	r1, [r1, #26]
 80027b6:	4281      	cmp	r1, r0
 80027b8:	d109      	bne.n	80027ce <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
        }
        FORCE_INLINE_FUNCTION void replaceAt1(Unicode::UnicodeChar newChar)
        {
            assert(used > 1);
            const uint16_t index = pos + 1;
            buffer[index < size ? index : 0] = newChar;
 80027ba:	2b0a      	cmp	r3, #10
 80027bc:	eb04 0242 	add.w	r2, r4, r2, lsl #1
 80027c0:	bf28      	it	cs
 80027c2:	2300      	movcs	r3, #0
 80027c4:	eb04 0343 	add.w	r3, r4, r3, lsl #1
            return buffer[pos];
 80027c8:	8b50      	ldrh	r0, [r2, #26]
            buffer[index < size ? index : 0] = newChar;
 80027ca:	8358      	strh	r0, [r3, #26]
            buffer[pos] = newChar;
 80027cc:	8351      	strh	r1, [r2, #26]
        {
            nextCharacters.replaceAt1(nextCharacters.peekChar());
            nextCharacters.replaceAt0(0x093F);
        }
    }
    return getNextChar();
 80027ce:	4620      	mov	r0, r4
}
 80027d0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    return getNextChar();
 80027d4:	f00a bb28 	b.w	800ce28 <_ZN8touchgfx12TextProvider11getNextCharEv>
 80027d8:	0801a62c 	.word	0x0801a62c
 80027dc:	0801a75f 	.word	0x0801a75f
 80027e0:	0801a635 	.word	0x0801a635
 80027e4:	0801a67f 	.word	0x0801a67f
 80027e8:	0801a68d 	.word	0x0801a68d

080027ec <_ZN8touchgfx12TextProvider18initializeInternalEv>:

void touchgfx::TextProvider::initializeInternal()
{
    fillInputBuffer();
 80027ec:	f00a bad6 	b.w	800cd9c <_ZN8touchgfx12TextProvider15fillInputBufferEv>

080027f0 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>:
}

void touchgfx::LCD::drawString(touchgfx::Rect widgetArea, const touchgfx::Rect& invalidatedArea, const touchgfx::LCD::StringVisuals& stringVisuals, const touchgfx::Unicode::UnicodeChar* format, ...)
{
 80027f0:	b510      	push	{r4, lr}
 80027f2:	b086      	sub	sp, #24
 80027f4:	ac02      	add	r4, sp, #8
 80027f6:	e884 0006 	stmia.w	r4, {r1, r2}
 80027fa:	461a      	mov	r2, r3
    va_list pArg;
    va_start(pArg, format);
 80027fc:	ab0a      	add	r3, sp, #40	; 0x28
 80027fe:	9305      	str	r3, [sp, #20]
    drawStringLTR(widgetArea, invalidatedArea, stringVisuals, format, pArg);
 8002800:	9301      	str	r3, [sp, #4]
 8002802:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8002804:	9300      	str	r3, [sp, #0]
 8002806:	4621      	mov	r1, r4
 8002808:	9b08      	ldr	r3, [sp, #32]
 800280a:	f008 f95a 	bl	800aac2 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>
    va_end(pArg);
}
 800280e:	b006      	add	sp, #24
 8002810:	bd10      	pop	{r4, pc}
	...

08002814 <_ZN8touchgfx5Texts11setLanguageEt>:
touchgfx::LanguageId touchgfx::Texts::currentLanguage = static_cast<touchgfx::LanguageId>(0);
static const touchgfx::Unicode::UnicodeChar* currentLanguagePtr = 0;
static const uint32_t* currentLanguageIndices = 0;

void touchgfx::Texts::setLanguage(touchgfx::LanguageId id)
{
 8002814:	b538      	push	{r3, r4, r5, lr}
    const touchgfx::TypedText::TypedTextData* currentLanguageTypedText = 0;
    if (id < 1)
 8002816:	b9d8      	cbnz	r0, 8002850 <_ZN8touchgfx5Texts11setLanguageEt+0x3c>
    {
        if (languagesArray[id] != 0)
 8002818:	4b11      	ldr	r3, [pc, #68]	; (8002860 <_ZN8touchgfx5Texts11setLanguageEt+0x4c>)
 800281a:	4812      	ldr	r0, [pc, #72]	; (8002864 <_ZN8touchgfx5Texts11setLanguageEt+0x50>)
 800281c:	681b      	ldr	r3, [r3, #0]
 800281e:	4912      	ldr	r1, [pc, #72]	; (8002868 <_ZN8touchgfx5Texts11setLanguageEt+0x54>)
 8002820:	b1bb      	cbz	r3, 8002852 <_ZN8touchgfx5Texts11setLanguageEt+0x3e>
        {
            //dynamic translation is added
            const TranslationHeader* translation = languagesArray[id];
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
 8002822:	681a      	ldr	r2, [r3, #0]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
 8002824:	689c      	ldr	r4, [r3, #8]
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
 8002826:	441a      	add	r2, r3
 8002828:	6002      	str	r2, [r0, #0]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
 800282a:	685a      	ldr	r2, [r3, #4]
 800282c:	441a      	add	r2, r3
 800282e:	600a      	str	r2, [r1, #0]
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
 8002830:	441c      	add	r4, r3
            currentLanguageIndices = staticLanguageIndices[id];
            currentLanguageTypedText = typedTextDatabaseArray[id];
        }
    }

    if (currentLanguageTypedText)
 8002832:	b16c      	cbz	r4, 8002850 <_ZN8touchgfx5Texts11setLanguageEt+0x3c>
    {
        currentLanguage = id;
 8002834:	4b0d      	ldr	r3, [pc, #52]	; (800286c <_ZN8touchgfx5Texts11setLanguageEt+0x58>)
 8002836:	2200      	movs	r2, #0
 8002838:	801a      	strh	r2, [r3, #0]
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
                                                       TypedTextDatabase::getFonts(), TypedTextDatabase::getInstanceSize());
 800283a:	f000 f835 	bl	80028a8 <_ZN17TypedTextDatabase8getFontsEv>
 800283e:	4605      	mov	r5, r0
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
 8002840:	f000 f830 	bl	80028a4 <_ZN17TypedTextDatabase15getInstanceSizeEv>
        typedTexts = data;
 8002844:	4b0a      	ldr	r3, [pc, #40]	; (8002870 <_ZN8touchgfx5Texts11setLanguageEt+0x5c>)
 8002846:	601c      	str	r4, [r3, #0]
        fonts = f;
 8002848:	4b0a      	ldr	r3, [pc, #40]	; (8002874 <_ZN8touchgfx5Texts11setLanguageEt+0x60>)
 800284a:	601d      	str	r5, [r3, #0]
        numberOfTypedTexts = n;
 800284c:	4b0a      	ldr	r3, [pc, #40]	; (8002878 <_ZN8touchgfx5Texts11setLanguageEt+0x64>)
 800284e:	8018      	strh	r0, [r3, #0]
    }
}
 8002850:	bd38      	pop	{r3, r4, r5, pc}
            currentLanguagePtr = texts_all_languages;
 8002852:	4b0a      	ldr	r3, [pc, #40]	; (800287c <_ZN8touchgfx5Texts11setLanguageEt+0x68>)
 8002854:	6003      	str	r3, [r0, #0]
            currentLanguageIndices = staticLanguageIndices[id];
 8002856:	4b0a      	ldr	r3, [pc, #40]	; (8002880 <_ZN8touchgfx5Texts11setLanguageEt+0x6c>)
 8002858:	600b      	str	r3, [r1, #0]
            currentLanguageTypedText = typedTextDatabaseArray[id];
 800285a:	4b0a      	ldr	r3, [pc, #40]	; (8002884 <_ZN8touchgfx5Texts11setLanguageEt+0x70>)
 800285c:	681c      	ldr	r4, [r3, #0]
 800285e:	e7e8      	b.n	8002832 <_ZN8touchgfx5Texts11setLanguageEt+0x1e>
 8002860:	20001440 	.word	0x20001440
 8002864:	20001444 	.word	0x20001444
 8002868:	20001448 	.word	0x20001448
 800286c:	2000144c 	.word	0x2000144c
 8002870:	200121fc 	.word	0x200121fc
 8002874:	20012204 	.word	0x20012204
 8002878:	20012200 	.word	0x20012200
 800287c:	0801d930 	.word	0x0801d930
 8002880:	0801d928 	.word	0x0801d928
 8002884:	0801d980 	.word	0x0801d980

08002888 <_ZNK8touchgfx5Texts7getTextEt>:
    languagesArray[id] = (const TranslationHeader*)translation;
}

const touchgfx::Unicode::UnicodeChar* touchgfx::Texts::getText(TypedTextId id) const
{
    return &currentLanguagePtr[currentLanguageIndices[id]];
 8002888:	4b04      	ldr	r3, [pc, #16]	; (800289c <_ZNK8touchgfx5Texts7getTextEt+0x14>)
 800288a:	681b      	ldr	r3, [r3, #0]
 800288c:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 8002890:	4b03      	ldr	r3, [pc, #12]	; (80028a0 <_ZNK8touchgfx5Texts7getTextEt+0x18>)
 8002892:	681b      	ldr	r3, [r3, #0]
}
 8002894:	eb03 0040 	add.w	r0, r3, r0, lsl #1
 8002898:	4770      	bx	lr
 800289a:	bf00      	nop
 800289c:	20001448 	.word	0x20001448
 80028a0:	20001444 	.word	0x20001444

080028a4 <_ZN17TypedTextDatabase15getInstanceSizeEv>:
}

uint16_t getInstanceSize()
{
    return sizeof(typedText_database_DEFAULT) / sizeof(touchgfx::TypedText::TypedTextData);
}
 80028a4:	2002      	movs	r0, #2
 80028a6:	4770      	bx	lr

080028a8 <_ZN17TypedTextDatabase8getFontsEv>:

const touchgfx::Font** getFonts()
{
    return touchgfx_fonts;
}
 80028a8:	4800      	ldr	r0, [pc, #0]	; (80028ac <_ZN17TypedTextDatabase8getFontsEv+0x4>)
 80028aa:	4770      	bx	lr
 80028ac:	20001450 	.word	0x20001450

080028b0 <_GLOBAL__sub_I_touchgfx_fonts>:
    case 2:
        touchgfx_fonts[2] = &(getFont_verdana_10_4bpp());
        break;
    }
}
}  // namespace TypedTextDatabase
 80028b0:	b510      	push	{r4, lr}
    &(getFont_verdana_20_4bpp()),
 80028b2:	f7ff fecb 	bl	800264c <_Z23getFont_verdana_20_4bppv>
};
 80028b6:	4c04      	ldr	r4, [pc, #16]	; (80028c8 <_GLOBAL__sub_I_touchgfx_fonts+0x18>)
 80028b8:	6020      	str	r0, [r4, #0]
    &(getFont_verdana_40_4bpp()),
 80028ba:	f7ff ff01 	bl	80026c0 <_Z23getFont_verdana_40_4bppv>
};
 80028be:	6060      	str	r0, [r4, #4]
    &(getFont_verdana_10_4bpp())
 80028c0:	f7ff fe8c 	bl	80025dc <_Z23getFont_verdana_10_4bppv>
};
 80028c4:	60a0      	str	r0, [r4, #8]
}  // namespace TypedTextDatabase
 80028c6:	bd10      	pop	{r4, pc}
 80028c8:	20001450 	.word	0x20001450

080028cc <_ZN8touchgfx8Drawable11setPositionEssss>:
     * @param  width  The width of this Drawable.
     * @param  height The height of this Drawable.
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setPosition(int16_t x, int16_t y, int16_t width, int16_t height)
 80028cc:	b570      	push	{r4, r5, r6, lr}
 80028ce:	461e      	mov	r6, r3
    {
        setXY(x, y);
 80028d0:	6803      	ldr	r3, [r0, #0]
    virtual void setPosition(int16_t x, int16_t y, int16_t width, int16_t height)
 80028d2:	f9bd 5010 	ldrsh.w	r5, [sp, #16]
        setXY(x, y);
 80028d6:	6b5b      	ldr	r3, [r3, #52]	; 0x34
    virtual void setPosition(int16_t x, int16_t y, int16_t width, int16_t height)
 80028d8:	4604      	mov	r4, r0
        setXY(x, y);
 80028da:	4798      	blx	r3
        setWidth(width);
 80028dc:	6823      	ldr	r3, [r4, #0]
 80028de:	4631      	mov	r1, r6
 80028e0:	4620      	mov	r0, r4
 80028e2:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 80028e4:	4790      	blx	r2
        setHeight(height);
 80028e6:	6823      	ldr	r3, [r4, #0]
 80028e8:	4629      	mov	r1, r5
 80028ea:	4620      	mov	r0, r4
 80028ec:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
    }
 80028ee:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setHeight(height);
 80028f2:	4718      	bx	r3

080028f4 <_ZN8touchgfx8Drawable4setXEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setX(int16_t x)
    {
        rect.x = x;
 80028f4:	8081      	strh	r1, [r0, #4]
    }
 80028f6:	4770      	bx	lr

080028f8 <_ZN8touchgfx8Drawable4setYEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setY(int16_t y)
    {
        rect.y = y;
 80028f8:	80c1      	strh	r1, [r0, #6]
    }
 80028fa:	4770      	bx	lr

080028fc <_ZN8touchgfx8Drawable5setXYEss>:
     *
     * @see moveTo
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setXY(int16_t x, int16_t y)
 80028fc:	b570      	push	{r4, r5, r6, lr}
    {
        setX(x);
 80028fe:	6803      	ldr	r3, [r0, #0]
    virtual void setXY(int16_t x, int16_t y)
 8002900:	4604      	mov	r4, r0
        setX(x);
 8002902:	6adb      	ldr	r3, [r3, #44]	; 0x2c
    virtual void setXY(int16_t x, int16_t y)
 8002904:	4615      	mov	r5, r2
        setX(x);
 8002906:	4798      	blx	r3
        setY(y);
 8002908:	6823      	ldr	r3, [r4, #0]
 800290a:	4629      	mov	r1, r5
 800290c:	4620      	mov	r0, r4
 800290e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    }
 8002910:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setY(y);
 8002914:	4718      	bx	r3

08002916 <_ZN8touchgfx8Drawable8setWidthEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setWidth(int16_t width)
    {
        rect.width = width;
 8002916:	8101      	strh	r1, [r0, #8]
    }
 8002918:	4770      	bx	lr

0800291a <_ZN8touchgfx8Drawable9setHeightEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setHeight(int16_t height)
    {
        rect.height = height;
 800291a:	8141      	strh	r1, [r0, #10]
    }
 800291c:	4770      	bx	lr

0800291e <_ZN8touchgfx8Drawable20childGeometryChangedEv>:
     * one or more of its children has changed. Currently only used in ScrollableContainer
     * to redraw scrollbars when the size of the scrolling contents changes.
     */
    virtual void childGeometryChanged()
    {
    }
 800291e:	4770      	bx	lr

08002920 <_ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE>:
     *
     * @param  evt The ClickEvent received from the HAL.
     */
    virtual void handleClickEvent(const ClickEvent& evt)
    {
    }
 8002920:	4770      	bx	lr

08002922 <_ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE>:
     *
     * @param  evt The GestureEvent received from the HAL.
     */
    virtual void handleGestureEvent(const GestureEvent& evt)
    {
    }
 8002922:	4770      	bx	lr

08002924 <_ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE>:
     *
     * @param  evt The DragEvent received from the HAL.
     */
    virtual void handleDragEvent(const DragEvent& evt)
    {
    }
 8002924:	4770      	bx	lr

08002926 <_ZN8touchgfx8Drawable15handleTickEventEv>:
     *
     * @see Application::registerTimerWidget
     */
    virtual void handleTickEvent()
    {
    }
 8002926:	4770      	bx	lr

08002928 <_ZN8touchgfx8Drawable6moveToEss>:
     *
     * @note Will redraw the appropriate areas of the screen.
     */
    virtual void moveTo(int16_t x, int16_t y)
    {
        moveRelative(x - rect.x, y - rect.y);
 8002928:	88c3      	ldrh	r3, [r0, #6]
 800292a:	1ad2      	subs	r2, r2, r3
 800292c:	8883      	ldrh	r3, [r0, #4]
 800292e:	1ac9      	subs	r1, r1, r3
 8002930:	6803      	ldr	r3, [r0, #0]
    virtual void moveTo(int16_t x, int16_t y)
 8002932:	b410      	push	{r4}
        moveRelative(x - rect.x, y - rect.y);
 8002934:	6d5b      	ldr	r3, [r3, #84]	; 0x54
    }
 8002936:	f85d 4b04 	ldr.w	r4, [sp], #4
        moveRelative(x - rect.x, y - rect.y);
 800293a:	b212      	sxth	r2, r2
 800293c:	b209      	sxth	r1, r1
 800293e:	4718      	bx	r3

08002940 <_ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_>:
     * @note For TouchGFX internal use only.
     */
    void resetDrawChainCache()
    {
        // Resetting the cached indicators
        cachedVisibleRect.x = UNCACHED_INDICATOR;
 8002940:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8002944:	8183      	strh	r3, [r0, #12]
        cachedAbsX = UNCACHED_INDICATOR;
 8002946:	f04f 33ff 	mov.w	r3, #4294967295
 800294a:	6203      	str	r3, [r0, #32]
     * @note For TouchGFX internal use only.
     */
    virtual void setupDrawChain(const Rect& invalidatedArea, Drawable** nextPreviousElement)
    {
        resetDrawChainCache();
        nextDrawChainElement = *nextPreviousElement;
 800294c:	6813      	ldr	r3, [r2, #0]
 800294e:	61c3      	str	r3, [r0, #28]
        *nextPreviousElement = this;
 8002950:	6010      	str	r0, [r2, #0]
    }
 8002952:	4770      	bx	lr

08002954 <_ZN8touchgfx6Screen11setupScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void setupScreen()
    {
    }
 8002954:	4770      	bx	lr

08002956 <_ZN8touchgfx6Screen15afterTransitionEv>:
     *
     * @see Application::handleTickEvent
     */
    virtual void afterTransition()
    {
    }
 8002956:	4770      	bx	lr

08002958 <_ZN8touchgfx6Screen14tearDownScreenEv>:
     *
     * @see touchgfx::Application::switchScreen
     */
    virtual void tearDownScreen()
    {
    }
 8002958:	4770      	bx	lr

0800295a <_ZN8touchgfx6Screen15handleTickEventEv>:
     * Called by the Application on the current screen with a frequency of
     * Application::TICK_INTERVAL_MS.
     */
    virtual void handleTickEvent()
    {
    }
 800295a:	4770      	bx	lr

0800295c <_ZN8touchgfx6Screen14handleKeyEventEh>:
     *
     * @param  key The key to handle.
     */
    virtual void handleKeyEvent(uint8_t key)
    {
    }
 800295c:	4770      	bx	lr

0800295e <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE>:
     * @param       y    Not used since this Widget is the only "child".
     * @param [out] last Result, the address of the actual instance of the Widget.
     */
    virtual void getLastChild(int16_t x, int16_t y, Drawable** last)
    {
        if (isVisible() && isTouchable())
 800295e:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 8002962:	b11a      	cbz	r2, 800296c <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
 8002964:	f890 2024 	ldrb.w	r2, [r0, #36]	; 0x24
 8002968:	b102      	cbz	r2, 800296c <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
        {
            *last = this;
 800296a:	6018      	str	r0, [r3, #0]
        }
    }
 800296c:	4770      	bx	lr

0800296e <_ZN18mainScreenViewBaseD1Ev>:

class mainScreenViewBase : public touchgfx::View<mainScreenPresenter>
{
public:
    mainScreenViewBase();
    virtual ~mainScreenViewBase() {}
 800296e:	4770      	bx	lr

08002970 <_ZN18mainScreenViewBase24XAxisSliderValue_ChangedEi>:
     * Virtual Action Handlers
     */
    virtual void XAxisSliderValue_Changed(int value)
    {
        // Override and implement this function in mainScreen
    }
 8002970:	4770      	bx	lr

08002972 <_ZN18mainScreenViewBase24YAxisSliderValue_ChangedEi>:

    virtual void YAxisSliderValue_Changed(int value)
    {
        // Override and implement this function in mainScreen
    }
 8002972:	4770      	bx	lr

08002974 <_ZN18mainScreenViewBase38ManipulatorControlToggleButton_ClickedEv>:

    virtual void ManipulatorControlToggleButton_Clicked()
    {
        // Override and implement this function in mainScreen
    }
 8002974:	4770      	bx	lr

08002976 <_ZN18mainScreenViewBase11setupScreenEv>:
}

void mainScreenViewBase::setupScreen()
{

}
 8002976:	4770      	bx	lr

08002978 <_ZN8touchgfx8CallbackI18mainScreenViewBaseRKNS_6SliderEivED1Ev>:
struct Callback<dest_type, T1, T2, void> : public GenericCallback<T1, T2>
 8002978:	4770      	bx	lr

0800297a <_ZN8touchgfx8CallbackI18mainScreenViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 800297a:	4770      	bx	lr

0800297c <_ZN8touchgfx8CallbackI18mainScreenViewBaseRKNS_6SliderEivE7executeES4_i>:
    virtual void execute(T1 t1, T2 t2)
 800297c:	b470      	push	{r4, r5, r6}
        (pobject->*pmemfun_2)(t1, t2);
 800297e:	68c6      	ldr	r6, [r0, #12]
 8002980:	6845      	ldr	r5, [r0, #4]
 8002982:	1074      	asrs	r4, r6, #1
    virtual void execute(T1 t1, T2 t2)
 8002984:	4603      	mov	r3, r0
        (pobject->*pmemfun_2)(t1, t2);
 8002986:	07f6      	lsls	r6, r6, #31
 8002988:	eb05 0004 	add.w	r0, r5, r4
 800298c:	689b      	ldr	r3, [r3, #8]
 800298e:	bf44      	itt	mi
 8002990:	592c      	ldrmi	r4, [r5, r4]
 8002992:	58e3      	ldrmi	r3, [r4, r3]
    }
 8002994:	bc70      	pop	{r4, r5, r6}
        (pobject->*pmemfun_2)(t1, t2);
 8002996:	4718      	bx	r3

08002998 <_ZNK8touchgfx8CallbackI18mainScreenViewBaseRKNS_6SliderEivE7isValidEv>:
        return (pobject != 0) && (pmemfun_2 != 0);
 8002998:	6843      	ldr	r3, [r0, #4]
 800299a:	b12b      	cbz	r3, 80029a8 <_ZNK8touchgfx8CallbackI18mainScreenViewBaseRKNS_6SliderEivE7isValidEv+0x10>
 800299c:	6883      	ldr	r3, [r0, #8]
 800299e:	b92b      	cbnz	r3, 80029ac <_ZNK8touchgfx8CallbackI18mainScreenViewBaseRKNS_6SliderEivE7isValidEv+0x14>
 80029a0:	68c0      	ldr	r0, [r0, #12]
 80029a2:	f000 0001 	and.w	r0, r0, #1
 80029a6:	4770      	bx	lr
 80029a8:	4618      	mov	r0, r3
 80029aa:	4770      	bx	lr
 80029ac:	2001      	movs	r0, #1
    }
 80029ae:	4770      	bx	lr

080029b0 <_ZN8touchgfx8CallbackI18mainScreenViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 80029b0:	b430      	push	{r4, r5}
        (pobject->*pmemfun_1)(t1);
 80029b2:	68c5      	ldr	r5, [r0, #12]
 80029b4:	6844      	ldr	r4, [r0, #4]
 80029b6:	106a      	asrs	r2, r5, #1
    virtual void execute(T1 t1)
 80029b8:	4603      	mov	r3, r0
        (pobject->*pmemfun_1)(t1);
 80029ba:	07ed      	lsls	r5, r5, #31
 80029bc:	eb04 0002 	add.w	r0, r4, r2
 80029c0:	689b      	ldr	r3, [r3, #8]
 80029c2:	bf48      	it	mi
 80029c4:	58a2      	ldrmi	r2, [r4, r2]
    }
 80029c6:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun_1)(t1);
 80029c8:	bf48      	it	mi
 80029ca:	58d3      	ldrmi	r3, [r2, r3]
 80029cc:	4718      	bx	r3

080029ce <_ZNK8touchgfx8CallbackI18mainScreenViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun_1 != 0);
 80029ce:	6843      	ldr	r3, [r0, #4]
 80029d0:	b12b      	cbz	r3, 80029de <_ZNK8touchgfx8CallbackI18mainScreenViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 80029d2:	6883      	ldr	r3, [r0, #8]
 80029d4:	b92b      	cbnz	r3, 80029e2 <_ZNK8touchgfx8CallbackI18mainScreenViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 80029d6:	68c0      	ldr	r0, [r0, #12]
 80029d8:	f000 0001 	and.w	r0, r0, #1
 80029dc:	4770      	bx	lr
 80029de:	4618      	mov	r0, r3
 80029e0:	4770      	bx	lr
 80029e2:	2001      	movs	r0, #1
    }
 80029e4:	4770      	bx	lr

080029e6 <_ZN8touchgfx8CallbackI18mainScreenViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80029e6:	b510      	push	{r4, lr}
 80029e8:	2110      	movs	r1, #16
 80029ea:	4604      	mov	r4, r0
 80029ec:	f016 f8d2 	bl	8018b94 <_ZdlPvj>
 80029f0:	4620      	mov	r0, r4
 80029f2:	bd10      	pop	{r4, pc}

080029f4 <_ZN8touchgfx8CallbackI18mainScreenViewBaseRKNS_6SliderEivED0Ev>:
struct Callback<dest_type, T1, T2, void> : public GenericCallback<T1, T2>
 80029f4:	b510      	push	{r4, lr}
 80029f6:	2110      	movs	r1, #16
 80029f8:	4604      	mov	r4, r0
 80029fa:	f016 f8cb 	bl	8018b94 <_ZdlPvj>
 80029fe:	4620      	mov	r0, r4
 8002a00:	bd10      	pop	{r4, pc}

08002a02 <_ZN18mainScreenViewBaseD0Ev>:
    virtual ~mainScreenViewBase() {}
 8002a02:	b510      	push	{r4, lr}
 8002a04:	f44f 7159 	mov.w	r1, #868	; 0x364
 8002a08:	4604      	mov	r4, r0
 8002a0a:	f016 f8c3 	bl	8018b94 <_ZdlPvj>
 8002a0e:	4620      	mov	r0, r4
 8002a10:	bd10      	pop	{r4, pc}

08002a12 <_ZN18mainScreenViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void mainScreenViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &manipulatorControlToggleButton)
 8002a12:	f100 029c 	add.w	r2, r0, #156	; 0x9c
 8002a16:	428a      	cmp	r2, r1
 8002a18:	d102      	bne.n	8002a20 <_ZN18mainScreenViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0xe>
    {
        //ManipulatorControlToggleButton_Clicked
        //When manipulatorControlToggleButton clicked call virtual function
        //Call ManipulatorControlToggleButton_Clicked
        ManipulatorControlToggleButton_Clicked();
 8002a1a:	6803      	ldr	r3, [r0, #0]
 8002a1c:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8002a1e:	4718      	bx	r3
    }
}
 8002a20:	4770      	bx	lr

08002a22 <_ZN18mainScreenViewBase33sliderValueChangedCallbackHandlerERKN8touchgfx6SliderEi>:

void mainScreenViewBase::sliderValueChangedCallbackHandler(const touchgfx::Slider& src, int value)
{
 8002a22:	b410      	push	{r4}
    if (&src == &yAxisSlider)
 8002a24:	f500 74a6 	add.w	r4, r0, #332	; 0x14c
 8002a28:	42a1      	cmp	r1, r4
 8002a2a:	d105      	bne.n	8002a38 <_ZN18mainScreenViewBase33sliderValueChangedCallbackHandlerERKN8touchgfx6SliderEi+0x16>
    {
        //YAxisSliderValue_Changed
        //When yAxisSlider value changed call virtual function
        //Call YAxisSliderValue_Changed
        YAxisSliderValue_Changed(value);
 8002a2c:	6803      	ldr	r3, [r0, #0]
 8002a2e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
        //XAxisSliderValue_Changed
        //When xAxisSlider value changed call virtual function
        //Call XAxisSliderValue_Changed
        XAxisSliderValue_Changed(value);
    }
}
 8002a30:	f85d 4b04 	ldr.w	r4, [sp], #4
        XAxisSliderValue_Changed(value);
 8002a34:	4611      	mov	r1, r2
 8002a36:	4718      	bx	r3
    else if (&src == &xAxisSlider)
 8002a38:	f500 7412 	add.w	r4, r0, #584	; 0x248
 8002a3c:	42a1      	cmp	r1, r4
 8002a3e:	d102      	bne.n	8002a46 <_ZN18mainScreenViewBase33sliderValueChangedCallbackHandlerERKN8touchgfx6SliderEi+0x24>
        XAxisSliderValue_Changed(value);
 8002a40:	6803      	ldr	r3, [r0, #0]
 8002a42:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8002a44:	e7f4      	b.n	8002a30 <_ZN18mainScreenViewBase33sliderValueChangedCallbackHandlerERKN8touchgfx6SliderEi+0xe>
}
 8002a46:	f85d 4b04 	ldr.w	r4, [sp], #4
 8002a4a:	4770      	bx	lr

08002a4c <_ZN8touchgfx8DrawableC1Ev>:
          visible(true)
 8002a4c:	4a09      	ldr	r2, [pc, #36]	; (8002a74 <_ZN8touchgfx8DrawableC1Ev+0x28>)
 8002a4e:	6002      	str	r2, [r0, #0]
     * @param  width  The width.
     * @param  height The height.
     */
    Rect(int16_t x, int16_t y, int16_t width, int16_t height)
    {
        this->x = x;
 8002a50:	2200      	movs	r2, #0
 8002a52:	8082      	strh	r2, [r0, #4]
        this->y = y;
 8002a54:	80c2      	strh	r2, [r0, #6]
        this->width = width;
 8002a56:	8102      	strh	r2, [r0, #8]
        this->height = height;
 8002a58:	8142      	strh	r2, [r0, #10]
        this->x = 0;
 8002a5a:	8182      	strh	r2, [r0, #12]
        this->y = 0;
 8002a5c:	81c2      	strh	r2, [r0, #14]
        this->width = 0;
 8002a5e:	8202      	strh	r2, [r0, #16]
        this->height = 0;
 8002a60:	8242      	strh	r2, [r0, #18]
 8002a62:	e9c0 2205 	strd	r2, r2, [r0, #20]
 8002a66:	61c2      	str	r2, [r0, #28]
 8002a68:	f880 2024 	strb.w	r2, [r0, #36]	; 0x24
 8002a6c:	2201      	movs	r2, #1
 8002a6e:	f880 2025 	strb.w	r2, [r0, #37]	; 0x25
    }
 8002a72:	4770      	bx	lr
 8002a74:	0801bd54 	.word	0x0801bd54

08002a78 <_ZN8touchgfx8TextAreaC1Ev>:
 *       the pointer remains valid when drawing.
 */
class TextArea : public Widget
{
public:
    TextArea()
 8002a78:	b510      	push	{r4, lr}
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE)
 8002a7a:	2226      	movs	r2, #38	; 0x26
    TextArea()
 8002a7c:	4604      	mov	r4, r0
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE)
 8002a7e:	2100      	movs	r1, #0
 8002a80:	f016 f93d 	bl	8018cfe <memset>
class Widget : public Drawable
 8002a84:	4620      	mov	r0, r4
 8002a86:	f7ff ffe1 	bl	8002a4c <_ZN8touchgfx8DrawableC1Ev>
 8002a8a:	4b09      	ldr	r3, [pc, #36]	; (8002ab0 <_ZN8touchgfx8TextAreaC1Ev+0x38>)
 8002a8c:	6023      	str	r3, [r4, #0]
        : typedTextId(id)
 8002a8e:	4b09      	ldr	r3, [pc, #36]	; (8002ab4 <_ZN8touchgfx8TextAreaC1Ev+0x3c>)
 8002a90:	62a3      	str	r3, [r4, #40]	; 0x28
 8002a92:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8002a96:	85a3      	strh	r3, [r4, #44]	; 0x2c
        color = col;
 8002a98:	f44f 027f 	mov.w	r2, #16711680	; 0xff0000
 8002a9c:	2300      	movs	r3, #0
 8002a9e:	e9c4 320c 	strd	r3, r2, [r4, #48]	; 0x30
 8002aa2:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38
 8002aa6:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
    {
    }
 8002aaa:	4620      	mov	r0, r4
 8002aac:	bd10      	pop	{r4, pc}
 8002aae:	bf00      	nop
 8002ab0:	0801b9c0 	.word	0x0801b9c0
 8002ab4:	0801a21c 	.word	0x0801a21c

08002ab8 <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh>:
     *
     * @note This function is not available to call before the LCD has been setup, because the
     *       color depth is required. Consider using the function getColorFromRGB for a
     *       specific class, e.g. LCD16::getColorFromRGB().
     */
    static colortype getColorFrom24BitRGB(uint8_t red, uint8_t green, uint8_t blue)
 8002ab8:	4613      	mov	r3, r2
        return instance;
 8002aba:	4a0c      	ldr	r2, [pc, #48]	; (8002aec <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh+0x34>)
 8002abc:	b570      	push	{r4, r5, r6, lr}
 8002abe:	6814      	ldr	r4, [r2, #0]
 8002ac0:	4605      	mov	r5, r0
    {
        assert(HAL::getInstance() && "Cannot set color before HAL is initialized");
 8002ac2:	b92c      	cbnz	r4, 8002ad0 <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh+0x18>
 8002ac4:	4b0a      	ldr	r3, [pc, #40]	; (8002af0 <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh+0x38>)
 8002ac6:	4a0b      	ldr	r2, [pc, #44]	; (8002af4 <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh+0x3c>)
 8002ac8:	480b      	ldr	r0, [pc, #44]	; (8002af8 <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh+0x40>)
 8002aca:	2135      	movs	r1, #53	; 0x35
 8002acc:	f016 f88e 	bl	8018bec <__assert_func>
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 8002ad0:	f894 2076 	ldrb.w	r2, [r4, #118]	; 0x76
 8002ad4:	b10a      	cbz	r2, 8002ada <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh+0x22>
 8002ad6:	6ce0      	ldr	r0, [r4, #76]	; 0x4c
 8002ad8:	b900      	cbnz	r0, 8002adc <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh+0x24>
            return instance->lcdRef;
 8002ada:	68a0      	ldr	r0, [r4, #8]
        return HAL::lcd().getColorFrom24BitRGB(red, green, blue);
 8002adc:	6802      	ldr	r2, [r0, #0]
 8002ade:	6a94      	ldr	r4, [r2, #40]	; 0x28
 8002ae0:	460a      	mov	r2, r1
 8002ae2:	46a4      	mov	ip, r4
 8002ae4:	4629      	mov	r1, r5
    }
 8002ae6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        return HAL::lcd().getColorFrom24BitRGB(red, green, blue);
 8002aea:	4760      	bx	ip
 8002aec:	2001218c 	.word	0x2001218c
 8002af0:	0801a83c 	.word	0x0801a83c
 8002af4:	0801a904 	.word	0x0801a904
 8002af8:	0801a87f 	.word	0x0801a87f

08002afc <_ZN18mainScreenViewBaseC1Ev>:
mainScreenViewBase::mainScreenViewBase() :
 8002afc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002b00:	4604      	mov	r4, r0
 8002b02:	b08b      	sub	sp, #44	; 0x2c
    sliderValueChangedCallback(this, &mainScreenViewBase::sliderValueChangedCallbackHandler)
 8002b04:	46a2      	mov	sl, r4
        : presenter(0)
 8002b06:	2500      	movs	r5, #0
 8002b08:	f009 fbd6 	bl	800c2b8 <_ZN8touchgfx6ScreenC1Ev>
 8002b0c:	4ba6      	ldr	r3, [pc, #664]	; (8002da8 <_ZN18mainScreenViewBaseC1Ev+0x2ac>)
 8002b0e:	63e5      	str	r5, [r4, #60]	; 0x3c
 8002b10:	f84a 3b40 	str.w	r3, [sl], #64
class Box : public Widget
{
public:
    /** Construct a new Box with a default alpha value of 255 (solid) */
    Box()
        : Widget(), alpha(255), color(0), reportAsSolid(false)
 8002b14:	f04f 0b26 	mov.w	fp, #38	; 0x26
 8002b18:	465a      	mov	r2, fp
 8002b1a:	4629      	mov	r1, r5
 8002b1c:	4650      	mov	r0, sl
 8002b1e:	f016 f8ee 	bl	8018cfe <memset>
 8002b22:	4650      	mov	r0, sl
 8002b24:	f7ff ff92 	bl	8002a4c <_ZN8touchgfx8DrawableC1Ev>
     * array.
     *
     * @param  id (Optional) The unique bitmap identifier.
     */
    explicit Bitmap(const BitmapId id = BITMAP_INVALID)
        : bitmapId(id)
 8002b28:	ae0a      	add	r6, sp, #40	; 0x28
 8002b2a:	f104 0970 	add.w	r9, r4, #112	; 0x70
 8002b2e:	4b9f      	ldr	r3, [pc, #636]	; (8002dac <_ZN18mainScreenViewBaseC1Ev+0x2b0>)
 8002b30:	6423      	str	r3, [r4, #64]	; 0x40
 8002b32:	f04f 08ff 	mov.w	r8, #255	; 0xff
 8002b36:	f64f 77ff 	movw	r7, #65535	; 0xffff
     * @param  bmp (Optional) The bitmap to display.
     *
     * @see setBitmap
     */
    Image(const Bitmap& bmp = Bitmap())
        : Widget(), alpha(255)
 8002b3a:	465a      	mov	r2, fp
 8002b3c:	4629      	mov	r1, r5
 8002b3e:	f884 8066 	strb.w	r8, [r4, #102]	; 0x66
 8002b42:	66a5      	str	r5, [r4, #104]	; 0x68
 8002b44:	f884 506c 	strb.w	r5, [r4, #108]	; 0x6c
 8002b48:	4648      	mov	r0, r9
 8002b4a:	f826 7d08 	strh.w	r7, [r6, #-8]!
 8002b4e:	f016 f8d6 	bl	8018cfe <memset>
 8002b52:	4648      	mov	r0, r9
 8002b54:	f7ff ff7a 	bl	8002a4c <_ZN8touchgfx8DrawableC1Ev>
 8002b58:	4b95      	ldr	r3, [pc, #596]	; (8002db0 <_ZN18mainScreenViewBaseC1Ev+0x2b4>)
 8002b5a:	6723      	str	r3, [r4, #112]	; 0x70
 8002b5c:	f8a4 7096 	strh.w	r7, [r4, #150]	; 0x96
 8002b60:	f884 7098 	strb.w	r7, [r4, #152]	; 0x98
    {
        setBitmap(bmp);
 8002b64:	4631      	mov	r1, r6
 8002b66:	4648      	mov	r0, r9
 8002b68:	f007 fb43 	bl	800a1f2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8002b6c:	f104 039c 	add.w	r3, r4, #156	; 0x9c
class AbstractButton : public Widget
{
public:
    /** Sets this Widget touchable so the user can interact with buttons. */
    AbstractButton()
        : Widget(), action(), pressed(false)
 8002b70:	465a      	mov	r2, fp
 8002b72:	4629      	mov	r1, r5
 8002b74:	4618      	mov	r0, r3
 8002b76:	9302      	str	r3, [sp, #8]
 8002b78:	f016 f8c1 	bl	8018cfe <memset>
 8002b7c:	9802      	ldr	r0, [sp, #8]
 8002b7e:	f8df b248 	ldr.w	fp, [pc, #584]	; 8002dc8 <_ZN18mainScreenViewBaseC1Ev+0x2cc>
 8002b82:	f7ff ff63 	bl	8002a4c <_ZN8touchgfx8DrawableC1Ev>
        touchable = touch;
 8002b86:	f04f 0301 	mov.w	r3, #1
 8002b8a:	f884 30c0 	strb.w	r3, [r4, #192]	; 0xc0
 * A ToggleButton is a Button specialization that swaps the two bitmaps when clicked, such that
 * the previous "pressed" bitmap, now becomes the one displayed when button is not
 * pressed. This can by used to give the effect of a button that can be pressed in and
 * when it is subsequently pressed, it will pop back out.
 */
class ToggleButton : public Button
 8002b8e:	4b89      	ldr	r3, [pc, #548]	; (8002db4 <_ZN18mainScreenViewBaseC1Ev+0x2b8>)
 8002b90:	f8c4 309c 	str.w	r3, [r4, #156]	; 0x9c
 8002b94:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 8002b98:	f8c4 50c4 	str.w	r5, [r4, #196]	; 0xc4
 8002b9c:	f884 50c8 	strb.w	r5, [r4, #200]	; 0xc8
 8002ba0:	f8a4 70ca 	strh.w	r7, [r4, #202]	; 0xca
 8002ba4:	f8a4 70cc 	strh.w	r7, [r4, #204]	; 0xcc
 */
class Button : public AbstractButton
{
public:
    Button()
        : AbstractButton(), up(), down(), alpha(255)
 8002ba8:	f884 80ce 	strb.w	r8, [r4, #206]	; 0xce
 8002bac:	f8a4 70d0 	strh.w	r7, [r4, #208]	; 0xd0
 8002bb0:	4618      	mov	r0, r3
 8002bb2:	9303      	str	r3, [sp, #12]
 8002bb4:	f7ff ff60 	bl	8002a78 <_ZN8touchgfx8TextAreaC1Ev>
 8002bb8:	f504 7388 	add.w	r3, r4, #272	; 0x110
 8002bbc:	f504 78a6 	add.w	r8, r4, #332	; 0x14c
 8002bc0:	4618      	mov	r0, r3
 8002bc2:	f504 7712 	add.w	r7, r4, #584	; 0x248
 8002bc6:	9304      	str	r3, [sp, #16]
 8002bc8:	f7ff ff56 	bl	8002a78 <_ZN8touchgfx8TextAreaC1Ev>
 8002bcc:	4640      	mov	r0, r8
 8002bce:	f006 f8c3 	bl	8008d58 <_ZN8touchgfx6SliderC1Ev>
 8002bd2:	4638      	mov	r0, r7
 8002bd4:	f006 f8c0 	bl	8008d58 <_ZN8touchgfx6SliderC1Ev>
    {
 8002bd8:	4b77      	ldr	r3, [pc, #476]	; (8002db8 <_ZN18mainScreenViewBaseC1Ev+0x2bc>)
 8002bda:	f8c4 3344 	str.w	r3, [r4, #836]	; 0x344
        this->pmemfun_1 = pmemfun_1;
 8002bde:	4b77      	ldr	r3, [pc, #476]	; (8002dbc <_ZN18mainScreenViewBaseC1Ev+0x2c0>)
 8002be0:	f8c4 334c 	str.w	r3, [r4, #844]	; 0x34c
    {
 8002be4:	4b76      	ldr	r3, [pc, #472]	; (8002dc0 <_ZN18mainScreenViewBaseC1Ev+0x2c4>)
 8002be6:	f8c4 3354 	str.w	r3, [r4, #852]	; 0x354
        this->pmemfun_2 = pmemfun_2;
 8002bea:	4b76      	ldr	r3, [pc, #472]	; (8002dc4 <_ZN18mainScreenViewBaseC1Ev+0x2c8>)
 8002bec:	f8c4 335c 	str.w	r3, [r4, #860]	; 0x35c
    __background.setPosition(0, 0, 240, 320);
 8002bf0:	f44f 73a0 	mov.w	r3, #320	; 0x140
        this->pmemfun_1 = pmemfun_1;
 8002bf4:	f8c4 5350 	str.w	r5, [r4, #848]	; 0x350
        this->pmemfun_2 = pmemfun_2;
 8002bf8:	f8c4 5360 	str.w	r5, [r4, #864]	; 0x360
 8002bfc:	9300      	str	r3, [sp, #0]
 8002bfe:	462a      	mov	r2, r5
 8002c00:	23f0      	movs	r3, #240	; 0xf0
 8002c02:	4629      	mov	r1, r5
 8002c04:	4650      	mov	r0, sl
        this->pobject = pobject;
 8002c06:	f8c4 4348 	str.w	r4, [r4, #840]	; 0x348
        this->pobject = pobject;
 8002c0a:	f8c4 4358 	str.w	r4, [r4, #856]	; 0x358
 8002c0e:	f7ff fe5d 	bl	80028cc <_ZN8touchgfx8Drawable11setPositionEssss>
    __background.setColor(touchgfx::Color::getColorFrom24BitRGB(0, 0, 0));
 8002c12:	462a      	mov	r2, r5
 8002c14:	4629      	mov	r1, r5
 8002c16:	4628      	mov	r0, r5
 8002c18:	f7ff ff4e 	bl	8002ab8 <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh>
    backgroundImage.setXY(0, 0);
 8002c1c:	462a      	mov	r2, r5
     *
     * @see getColor, Color::getColorFrom24BitRGB
     */
    void setColor(colortype color)
    {
        this->color = color;
 8002c1e:	66a0      	str	r0, [r4, #104]	; 0x68
 8002c20:	4629      	mov	r1, r5
 8002c22:	4648      	mov	r0, r9
 8002c24:	f7ff fe6a 	bl	80028fc <_ZN8touchgfx8Drawable5setXYEss>
    backgroundImage.setBitmap(touchgfx::Bitmap(BITMAP_BLUE_BACKGROUNDS_MAIN_BG_PORTRAIT_240X320PX_ID));
 8002c28:	4631      	mov	r1, r6
 8002c2a:	4648      	mov	r0, r9
 8002c2c:	f8ad 5020 	strh.w	r5, [sp, #32]
 8002c30:	f007 fadf 	bl	800a1f2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    manipulatorControlToggleButton.setXY(95, 157);
 8002c34:	9802      	ldr	r0, [sp, #8]
 8002c36:	229d      	movs	r2, #157	; 0x9d
 8002c38:	215f      	movs	r1, #95	; 0x5f
 8002c3a:	f7ff fe5f 	bl	80028fc <_ZN8touchgfx8Drawable5setXYEss>
 8002c3e:	2305      	movs	r3, #5
 8002c40:	f8ad 301c 	strh.w	r3, [sp, #28]
 8002c44:	2306      	movs	r3, #6
{
public:

    virtual void setBitmaps(const Bitmap& bmpReleased, const Bitmap& bmpPressed)
    {
        originalPressed = bmpPressed;
 8002c46:	f8a4 30d0 	strh.w	r3, [r4, #208]	; 0xd0
        Button::setBitmaps(bmpReleased, bmpPressed);
 8002c4a:	4632      	mov	r2, r6
 8002c4c:	a907      	add	r1, sp, #28
 8002c4e:	9802      	ldr	r0, [sp, #8]
 8002c50:	f8ad 3020 	strh.w	r3, [sp, #32]
 8002c54:	f007 fa16 	bl	800a084 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
    manipulatorControlToggleButton.setAction(buttonCallback);
 8002c58:	f504 7351 	add.w	r3, r4, #836	; 0x344
     *
     * @see GenericCallback, handleClickEvent, ClickEvent
     */
    void setAction(GenericCallback<const AbstractButton&>& callback)
    {
        action = &callback;
 8002c5c:	f8c4 30c4 	str.w	r3, [r4, #196]	; 0xc4
    titleText.setXY(23, 15);
 8002c60:	9803      	ldr	r0, [sp, #12]
 8002c62:	220f      	movs	r2, #15
 8002c64:	2117      	movs	r1, #23
 8002c66:	f7ff fe49 	bl	80028fc <_ZN8touchgfx8Drawable5setXYEss>
    titleText.setColor(touchgfx::Color::getColorFrom24BitRGB(0, 0, 0));
 8002c6a:	462a      	mov	r2, r5
 8002c6c:	4629      	mov	r1, r5
 8002c6e:	4628      	mov	r0, r5
 8002c70:	f7ff ff22 	bl	8002ab8 <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh>
     *
     * @see getLinespacing
     */
    FORCE_INLINE_FUNCTION void setLinespacing(int16_t space)
    {
        linespace = space;
 8002c74:	f8a4 5108 	strh.w	r5, [r4, #264]	; 0x108
        this->color = color;
 8002c78:	f8c4 0104 	str.w	r0, [r4, #260]	; 0x104
    titleText.setTypedText(touchgfx::TypedText(T_SINGLEUSEID1));
 8002c7c:	4631      	mov	r1, r6
 8002c7e:	9803      	ldr	r0, [sp, #12]
 8002c80:	f8cd b020 	str.w	fp, [sp, #32]
 8002c84:	f8ad 5024 	strh.w	r5, [sp, #36]	; 0x24
 8002c88:	f007 f9ba 	bl	800a000 <_ZN8touchgfx8TextArea12setTypedTextENS_9TypedTextE>
    manipulatorText.setXY(100, 101);
 8002c8c:	9804      	ldr	r0, [sp, #16]
 8002c8e:	2265      	movs	r2, #101	; 0x65
 8002c90:	2164      	movs	r1, #100	; 0x64
 8002c92:	f7ff fe33 	bl	80028fc <_ZN8touchgfx8Drawable5setXYEss>
    manipulatorText.setColor(touchgfx::Color::getColorFrom24BitRGB(0, 0, 0));
 8002c96:	462a      	mov	r2, r5
 8002c98:	4629      	mov	r1, r5
 8002c9a:	4628      	mov	r0, r5
 8002c9c:	f7ff ff0c 	bl	8002ab8 <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh>
 8002ca0:	f04f 0301 	mov.w	r3, #1
 8002ca4:	f8c4 0140 	str.w	r0, [r4, #320]	; 0x140
        linespace = space;
 8002ca8:	f8a4 5144 	strh.w	r5, [r4, #324]	; 0x144
    manipulatorText.setTypedText(touchgfx::TypedText(T_SINGLEUSEID2));
 8002cac:	4631      	mov	r1, r6
 8002cae:	9804      	ldr	r0, [sp, #16]
 8002cb0:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8002cb4:	f8cd b020 	str.w	fp, [sp, #32]
 8002cb8:	f007 f9a2 	bl	800a000 <_ZN8touchgfx8TextArea12setTypedTextENS_9TypedTextE>
    yAxisSlider.setXY(23, 71);
 8002cbc:	4640      	mov	r0, r8
 8002cbe:	2247      	movs	r2, #71	; 0x47
 8002cc0:	2117      	movs	r1, #23
 8002cc2:	f7ff fe1b 	bl	80028fc <_ZN8touchgfx8Drawable5setXYEss>
 8002cc6:	2304      	movs	r3, #4
 8002cc8:	f04f 0b03 	mov.w	fp, #3
 8002ccc:	f8ad 3018 	strh.w	r3, [sp, #24]
 8002cd0:	f8ad 301c 	strh.w	r3, [sp, #28]
    yAxisSlider.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_SLIDER_VERTICAL_SMALL_SLIDER3_VERTICAL_ROUND_BACK_ID), touchgfx::Bitmap(BITMAP_BLUE_SLIDER_VERTICAL_SMALL_SLIDER3_VERTICAL_ROUND_BACK_ID), touchgfx::Bitmap(BITMAP_BLUE_SLIDER_VERTICAL_SMALL_INDICATORS_SLIDER3_VERTICAL_ROUND_NOB_ID));
 8002cd4:	aa07      	add	r2, sp, #28
 8002cd6:	4633      	mov	r3, r6
 8002cd8:	a906      	add	r1, sp, #24
 8002cda:	4640      	mov	r0, r8
 8002cdc:	f8ad b020 	strh.w	fp, [sp, #32]
 8002ce0:	f006 f88e 	bl	8008e00 <_ZN8touchgfx6Slider10setBitmapsERKNS_6BitmapES3_S3_>
    yAxisSlider.setupVerticalSlider(7, 3, 0, 0, 125);
 8002ce4:	227d      	movs	r2, #125	; 0x7d
 8002ce6:	462b      	mov	r3, r5
 8002ce8:	e9cd 5200 	strd	r5, r2, [sp]
 8002cec:	4640      	mov	r0, r8
 8002cee:	465a      	mov	r2, fp
 8002cf0:	2107      	movs	r1, #7
 8002cf2:	f005 ff2b 	bl	8008b4c <_ZN8touchgfx6Slider19setupVerticalSliderEttttt>
    yAxisSlider.setValueRange(0, 100);
 8002cf6:	2264      	movs	r2, #100	; 0x64
 8002cf8:	4629      	mov	r1, r5
 8002cfa:	4640      	mov	r0, r8
 8002cfc:	f005 fe25 	bl	800894a <_ZN8touchgfx6Slider13setValueRangeEii>
    yAxisSlider.setValue(50);
 8002d00:	4640      	mov	r0, r8
 8002d02:	2132      	movs	r1, #50	; 0x32
 8002d04:	f005 fdad 	bl	8008862 <_ZN8touchgfx6Slider8setValueEi>
    yAxisSlider.setNewValueCallback(sliderValueChangedCallback);
 8002d08:	f504 7255 	add.w	r2, r4, #852	; 0x354
 8002d0c:	9205      	str	r2, [sp, #20]
     *
     * @see GenericCallback
     */
    void setNewValueCallback(GenericCallback<const Slider&, int>& callback)
    {
        newValueCallback = &callback;
 8002d0e:	f8c4 2244 	str.w	r2, [r4, #580]	; 0x244
    xAxisSlider.setXY(31, 266);
 8002d12:	4638      	mov	r0, r7
 8002d14:	f44f 7285 	mov.w	r2, #266	; 0x10a
 8002d18:	211f      	movs	r1, #31
 8002d1a:	f7ff fdef 	bl	80028fc <_ZN8touchgfx8Drawable5setXYEss>
 8002d1e:	2302      	movs	r3, #2
 8002d20:	f8ad 3018 	strh.w	r3, [sp, #24]
 8002d24:	f8ad 301c 	strh.w	r3, [sp, #28]
 8002d28:	f04f 0301 	mov.w	r3, #1
 8002d2c:	f8ad 3020 	strh.w	r3, [sp, #32]
    xAxisSlider.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_SLIDER_HORIZONTAL_SMALL_SLIDER_HORIZONTAL_SMALL_ROUND_BACK_ID), touchgfx::Bitmap(BITMAP_BLUE_SLIDER_HORIZONTAL_SMALL_SLIDER_HORIZONTAL_SMALL_ROUND_BACK_ID), touchgfx::Bitmap(BITMAP_BLUE_SLIDER_HORIZONTAL_SMALL_INDICATORS_SLIDER_HORIZONTAL_SMALL_ROUND_KNOB_ID));
 8002d30:	aa07      	add	r2, sp, #28
 8002d32:	4633      	mov	r3, r6
 8002d34:	a906      	add	r1, sp, #24
 8002d36:	4638      	mov	r0, r7
 8002d38:	f006 f862 	bl	8008e00 <_ZN8touchgfx6Slider10setBitmapsERKNS_6BitmapES3_S3_>
    xAxisSlider.setupHorizontalSlider(3, 7, 0, 0, 125);
 8002d3c:	237d      	movs	r3, #125	; 0x7d
 8002d3e:	e9cd 5300 	strd	r5, r3, [sp]
 8002d42:	4659      	mov	r1, fp
 8002d44:	462b      	mov	r3, r5
 8002d46:	4638      	mov	r0, r7
 8002d48:	2207      	movs	r2, #7
 8002d4a:	f005 fe9b 	bl	8008a84 <_ZN8touchgfx6Slider21setupHorizontalSliderEttttt>
    xAxisSlider.setValueRange(0, 100);
 8002d4e:	2264      	movs	r2, #100	; 0x64
 8002d50:	4629      	mov	r1, r5
 8002d52:	4638      	mov	r0, r7
 8002d54:	f005 fdf9 	bl	800894a <_ZN8touchgfx6Slider13setValueRangeEii>
    xAxisSlider.setValue(50);
 8002d58:	4638      	mov	r0, r7
 8002d5a:	2132      	movs	r1, #50	; 0x32
     * @note Must not be called with a Drawable that was already added to the screen. If in doubt,
     *       call remove() first.
     */
    void add(Drawable& d)
    {
        container.add(d);
 8002d5c:	1d25      	adds	r5, r4, #4
 8002d5e:	f005 fd80 	bl	8008862 <_ZN8touchgfx6Slider8setValueEi>
 8002d62:	9b05      	ldr	r3, [sp, #20]
 8002d64:	f8c4 3340 	str.w	r3, [r4, #832]	; 0x340
 8002d68:	4651      	mov	r1, sl
 8002d6a:	4628      	mov	r0, r5
 8002d6c:	f005 fc3a 	bl	80085e4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8002d70:	4649      	mov	r1, r9
 8002d72:	4628      	mov	r0, r5
 8002d74:	f005 fc36 	bl	80085e4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8002d78:	9902      	ldr	r1, [sp, #8]
 8002d7a:	4628      	mov	r0, r5
 8002d7c:	f005 fc32 	bl	80085e4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8002d80:	9903      	ldr	r1, [sp, #12]
 8002d82:	4628      	mov	r0, r5
 8002d84:	f005 fc2e 	bl	80085e4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8002d88:	9904      	ldr	r1, [sp, #16]
 8002d8a:	4628      	mov	r0, r5
 8002d8c:	f005 fc2a 	bl	80085e4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8002d90:	4641      	mov	r1, r8
 8002d92:	4628      	mov	r0, r5
 8002d94:	f005 fc26 	bl	80085e4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8002d98:	4628      	mov	r0, r5
 8002d9a:	4639      	mov	r1, r7
 8002d9c:	f005 fc22 	bl	80085e4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8002da0:	4620      	mov	r0, r4
 8002da2:	b00b      	add	sp, #44	; 0x2c
 8002da4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8002da8:	0801a8cc 	.word	0x0801a8cc
 8002dac:	0801ba6c 	.word	0x0801ba6c
 8002db0:	0801bb6c 	.word	0x0801bb6c
 8002db4:	0801b890 	.word	0x0801b890
 8002db8:	0801a814 	.word	0x0801a814
 8002dbc:	08002a13 	.word	0x08002a13
 8002dc0:	0801a82c 	.word	0x0801a82c
 8002dc4:	08002a23 	.word	0x08002a23
 8002dc8:	0801a21c 	.word	0x0801a21c

08002dcc <_ZN19FrontendApplicationD1Ev>:

class FrontendApplication : public FrontendApplicationBase
{
public:
    FrontendApplication(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplication() { }
 8002dcc:	4770      	bx	lr

08002dce <_ZN19FrontendApplicationD0Ev>:
 8002dce:	b510      	push	{r4, lr}
 8002dd0:	f44f 71ac 	mov.w	r1, #344	; 0x158
 8002dd4:	4604      	mov	r4, r0
 8002dd6:	f015 fedd 	bl	8018b94 <_ZdlPvj>
 8002dda:	4620      	mov	r0, r4
 8002ddc:	bd10      	pop	{r4, pc}

08002dde <_ZN19FrontendApplication15handleTickEventEv>:

    virtual void handleTickEvent()
 8002dde:	b510      	push	{r4, lr}
 8002de0:	4604      	mov	r4, r0
    {
        model.tick();
 8002de2:	f8d0 0154 	ldr.w	r0, [r0, #340]	; 0x154
 8002de6:	f000 f812 	bl	8002e0e <_ZN5Model4tickEv>
        FrontendApplicationBase::handleTickEvent();
 8002dea:	4620      	mov	r0, r4
    }
 8002dec:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        FrontendApplicationBase::handleTickEvent();
 8002df0:	f008 b930 	b.w	800b054 <_ZN8touchgfx11Application15handleTickEventEv>

08002df4 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>:
#include <gui/common/FrontendApplication.hpp>

FrontendApplication::FrontendApplication(Model& m, FrontendHeap& heap)
 8002df4:	b510      	push	{r4, lr}
 8002df6:	4604      	mov	r4, r0
    : FrontendApplicationBase(m, heap)
 8002df8:	f7ff fa9a 	bl	8002330 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>
 8002dfc:	4b01      	ldr	r3, [pc, #4]	; (8002e04 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap+0x10>)
 8002dfe:	6023      	str	r3, [r4, #0]
{

}
 8002e00:	4620      	mov	r0, r4
 8002e02:	bd10      	pop	{r4, pc}
 8002e04:	0801a968 	.word	0x0801a968

08002e08 <_ZN5ModelC1Ev>:
#include <gui/model/Model.hpp>
#include <gui/model/ModelListener.hpp>

Model::Model() : modelListener(0)
 8002e08:	2200      	movs	r2, #0
 8002e0a:	6002      	str	r2, [r0, #0]
{

}
 8002e0c:	4770      	bx	lr

08002e0e <_ZN5Model4tickEv>:

void Model::tick()
{

}
 8002e0e:	4770      	bx	lr

08002e10 <_ZN19mainScreenPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~mainScreenPresenter() {};
 8002e10:	4770      	bx	lr

08002e12 <_ZThn4_N19mainScreenPresenterD1Ev>:
 8002e12:	3804      	subs	r0, #4
 8002e14:	4770      	bx	lr

08002e16 <_ZN19mainScreenPresenter10deactivateEv>:
}

void mainScreenPresenter::activate()
{

}
 8002e16:	4770      	bx	lr

08002e18 <_ZN19mainScreenPresenterD0Ev>:
 8002e18:	b510      	push	{r4, lr}
 8002e1a:	2110      	movs	r1, #16
 8002e1c:	4604      	mov	r4, r0
 8002e1e:	f015 feb9 	bl	8018b94 <_ZdlPvj>
 8002e22:	4620      	mov	r0, r4
 8002e24:	bd10      	pop	{r4, pc}

08002e26 <_ZThn4_N19mainScreenPresenterD0Ev>:
 8002e26:	f1a0 0004 	sub.w	r0, r0, #4
 8002e2a:	e7f5      	b.n	8002e18 <_ZN19mainScreenPresenterD0Ev>

08002e2c <_ZN19mainScreenPresenterC1ER14mainScreenView>:
mainScreenPresenter::mainScreenPresenter(mainScreenView& v)
 8002e2c:	b510      	push	{r4, lr}
    ModelListener() : model(0) {}
 8002e2e:	2200      	movs	r2, #0
 8002e30:	6082      	str	r2, [r0, #8]
    : view(v)
 8002e32:	4a04      	ldr	r2, [pc, #16]	; (8002e44 <_ZN19mainScreenPresenterC1ER14mainScreenView+0x18>)
 8002e34:	60c1      	str	r1, [r0, #12]
 8002e36:	f102 0408 	add.w	r4, r2, #8
 8002e3a:	3220      	adds	r2, #32
 8002e3c:	6004      	str	r4, [r0, #0]
 8002e3e:	6042      	str	r2, [r0, #4]
}
 8002e40:	bd10      	pop	{r4, pc}
 8002e42:	bf00      	nop
 8002e44:	0801a9a4 	.word	0x0801a9a4

08002e48 <_ZN14mainScreenViewD1Ev>:

class mainScreenView : public mainScreenViewBase
{
public:
    mainScreenView();
    virtual ~mainScreenView() {}
 8002e48:	4770      	bx	lr

08002e4a <_ZN14mainScreenView14tearDownScreenEv>:
}

void mainScreenView::tearDownScreen()
{
    mainScreenViewBase::tearDownScreen();
}
 8002e4a:	4770      	bx	lr

08002e4c <_ZN14mainScreenView24XAxisSliderValue_ChangedEi>:

void mainScreenView::XAxisSliderValue_Changed(int value)
{
	xAxisPWMDuty = 275 + 9 * value;
 8002e4c:	eb01 01c1 	add.w	r1, r1, r1, lsl #3
 8002e50:	4b02      	ldr	r3, [pc, #8]	; (8002e5c <_ZN14mainScreenView24XAxisSliderValue_ChangedEi+0x10>)
 8002e52:	f201 1113 	addw	r1, r1, #275	; 0x113
 8002e56:	6019      	str	r1, [r3, #0]
}
 8002e58:	4770      	bx	lr
 8002e5a:	bf00      	nop
 8002e5c:	20001464 	.word	0x20001464

08002e60 <_ZN14mainScreenView24YAxisSliderValue_ChangedEi>:

void mainScreenView::YAxisSliderValue_Changed(int value)
{
	yAxisPWMDuty_L = 275 + 9 * value;
 8002e60:	4b04      	ldr	r3, [pc, #16]	; (8002e74 <_ZN14mainScreenView24YAxisSliderValue_ChangedEi+0x14>)
 8002e62:	eb01 01c1 	add.w	r1, r1, r1, lsl #3
 8002e66:	f201 1113 	addw	r1, r1, #275	; 0x113
 8002e6a:	6019      	str	r1, [r3, #0]
	yAxisPWMDuty_R = 275 + 9 * value;
 8002e6c:	4b02      	ldr	r3, [pc, #8]	; (8002e78 <_ZN14mainScreenView24YAxisSliderValue_ChangedEi+0x18>)
 8002e6e:	6019      	str	r1, [r3, #0]
}
 8002e70:	4770      	bx	lr
 8002e72:	bf00      	nop
 8002e74:	20001468 	.word	0x20001468
 8002e78:	2000146c 	.word	0x2000146c

08002e7c <_ZN14mainScreenView38ManipulatorControlToggleButton_ClickedEv>:

void mainScreenView::ManipulatorControlToggleButton_Clicked()
{
	static bool state = false;

	if (state)
 8002e7c:	4b07      	ldr	r3, [pc, #28]	; (8002e9c <_ZN14mainScreenView38ManipulatorControlToggleButton_ClickedEv+0x20>)
 8002e7e:	4a08      	ldr	r2, [pc, #32]	; (8002ea0 <_ZN14mainScreenView38ManipulatorControlToggleButton_ClickedEv+0x24>)
 8002e80:	7819      	ldrb	r1, [r3, #0]
 8002e82:	b129      	cbz	r1, 8002e90 <_ZN14mainScreenView38ManipulatorControlToggleButton_ClickedEv+0x14>
	{
		manipulatorPWMDuty = 275;
 8002e84:	f240 1113 	movw	r1, #275	; 0x113
 8002e88:	6011      	str	r1, [r2, #0]
		state = false;
 8002e8a:	2200      	movs	r2, #0
	}
	else
	{
		manipulatorPWMDuty = 700;
		state = true;
 8002e8c:	701a      	strb	r2, [r3, #0]
	}
}
 8002e8e:	4770      	bx	lr
		manipulatorPWMDuty = 700;
 8002e90:	f44f 712f 	mov.w	r1, #700	; 0x2bc
 8002e94:	6011      	str	r1, [r2, #0]
		state = true;
 8002e96:	2201      	movs	r2, #1
 8002e98:	e7f8      	b.n	8002e8c <_ZN14mainScreenView38ManipulatorControlToggleButton_ClickedEv+0x10>
 8002e9a:	bf00      	nop
 8002e9c:	2000145c 	.word	0x2000145c
 8002ea0:	20001460 	.word	0x20001460

08002ea4 <_ZN14mainScreenView11setupScreenEv>:
    mainScreenViewBase::setupScreen();
 8002ea4:	f7ff bd67 	b.w	8002976 <_ZN18mainScreenViewBase11setupScreenEv>

08002ea8 <_ZN14mainScreenViewD0Ev>:
 8002ea8:	b510      	push	{r4, lr}
 8002eaa:	f44f 7159 	mov.w	r1, #868	; 0x364
 8002eae:	4604      	mov	r4, r0
 8002eb0:	f015 fe70 	bl	8018b94 <_ZdlPvj>
 8002eb4:	4620      	mov	r0, r4
 8002eb6:	bd10      	pop	{r4, pc}

08002eb8 <_ZN14mainScreenViewC1Ev>:
mainScreenView::mainScreenView()
 8002eb8:	b510      	push	{r4, lr}
 8002eba:	4604      	mov	r4, r0
 8002ebc:	f7ff fe1e 	bl	8002afc <_ZN18mainScreenViewBaseC1Ev>
 8002ec0:	4b0d      	ldr	r3, [pc, #52]	; (8002ef8 <_ZN14mainScreenViewC1Ev+0x40>)
 8002ec2:	6023      	str	r3, [r4, #0]
	HAL_TIM_PWM_Start_DMA(&htim2, TIM_CHANNEL_4, &xAxisPWMDuty, 1);
 8002ec4:	4a0d      	ldr	r2, [pc, #52]	; (8002efc <_ZN14mainScreenViewC1Ev+0x44>)
 8002ec6:	480e      	ldr	r0, [pc, #56]	; (8002f00 <_ZN14mainScreenViewC1Ev+0x48>)
 8002ec8:	2301      	movs	r3, #1
 8002eca:	210c      	movs	r1, #12
 8002ecc:	f003 f850 	bl	8005f70 <HAL_TIM_PWM_Start_DMA>
	HAL_TIM_PWM_Start_DMA(&htim3, TIM_CHANNEL_2, &yAxisPWMDuty_L, 1);
 8002ed0:	2301      	movs	r3, #1
 8002ed2:	4a0c      	ldr	r2, [pc, #48]	; (8002f04 <_ZN14mainScreenViewC1Ev+0x4c>)
 8002ed4:	480c      	ldr	r0, [pc, #48]	; (8002f08 <_ZN14mainScreenViewC1Ev+0x50>)
 8002ed6:	2104      	movs	r1, #4
 8002ed8:	f003 f84a 	bl	8005f70 <HAL_TIM_PWM_Start_DMA>
	HAL_TIM_PWM_Start_DMA(&htim4, TIM_CHANNEL_1, &yAxisPWMDuty_R, 1);
 8002edc:	2301      	movs	r3, #1
 8002ede:	4a0b      	ldr	r2, [pc, #44]	; (8002f0c <_ZN14mainScreenViewC1Ev+0x54>)
 8002ee0:	480b      	ldr	r0, [pc, #44]	; (8002f10 <_ZN14mainScreenViewC1Ev+0x58>)
 8002ee2:	2100      	movs	r1, #0
 8002ee4:	f003 f844 	bl	8005f70 <HAL_TIM_PWM_Start_DMA>
	HAL_TIM_PWM_Start_DMA(&htim5, TIM_CHANNEL_1, &manipulatorPWMDuty, 1);
 8002ee8:	2301      	movs	r3, #1
 8002eea:	4a0a      	ldr	r2, [pc, #40]	; (8002f14 <_ZN14mainScreenViewC1Ev+0x5c>)
 8002eec:	480a      	ldr	r0, [pc, #40]	; (8002f18 <_ZN14mainScreenViewC1Ev+0x60>)
 8002eee:	2100      	movs	r1, #0
 8002ef0:	f003 f83e 	bl	8005f70 <HAL_TIM_PWM_Start_DMA>
}
 8002ef4:	4620      	mov	r0, r4
 8002ef6:	bd10      	pop	{r4, pc}
 8002ef8:	0801a9d4 	.word	0x0801a9d4
 8002efc:	20001464 	.word	0x20001464
 8002f00:	20012828 	.word	0x20012828
 8002f04:	20001468 	.word	0x20001468
 8002f08:	2001263c 	.word	0x2001263c
 8002f0c:	2000146c 	.word	0x2000146c
 8002f10:	20012554 	.word	0x20012554
 8002f14:	20001460 	.word	0x20001460
 8002f18:	200125fc 	.word	0x200125fc

08002f1c <ili9341_GetLcdPixelWidth>:
  */
uint16_t ili9341_GetLcdPixelWidth(void)
{
  /* Return LCD PIXEL WIDTH */
  return ILI9341_LCD_PIXEL_WIDTH;
}
 8002f1c:	20f0      	movs	r0, #240	; 0xf0
 8002f1e:	4770      	bx	lr

08002f20 <ili9341_GetLcdPixelHeight>:
  */
uint16_t ili9341_GetLcdPixelHeight(void)
{
  /* Return LCD PIXEL HEIGHT */
  return ILI9341_LCD_PIXEL_HEIGHT;
}
 8002f20:	f44f 70a0 	mov.w	r0, #320	; 0x140
 8002f24:	4770      	bx	lr

08002f26 <ili9341_DisplayOn>:
  LCD_IO_WriteReg(LCD_Reg);
 8002f26:	2029      	movs	r0, #41	; 0x29
 8002f28:	f7fe bce4 	b.w	80018f4 <LCD_IO_WriteReg>

08002f2c <ili9341_DisplayOff>:
 8002f2c:	2028      	movs	r0, #40	; 0x28
 8002f2e:	f7fe bce1 	b.w	80018f4 <LCD_IO_WriteReg>

08002f32 <ili9341_Init>:
{
 8002f32:	b508      	push	{r3, lr}
  LCD_IO_Init();
 8002f34:	f7fe fcb2 	bl	800189c <LCD_IO_Init>
  LCD_IO_WriteReg(LCD_Reg);
 8002f38:	20ca      	movs	r0, #202	; 0xca
 8002f3a:	f7fe fcdb 	bl	80018f4 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8002f3e:	20c3      	movs	r0, #195	; 0xc3
 8002f40:	f7fe fcbc 	bl	80018bc <LCD_IO_WriteData>
 8002f44:	2008      	movs	r0, #8
 8002f46:	f7fe fcb9 	bl	80018bc <LCD_IO_WriteData>
 8002f4a:	2050      	movs	r0, #80	; 0x50
 8002f4c:	f7fe fcb6 	bl	80018bc <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8002f50:	20cf      	movs	r0, #207	; 0xcf
 8002f52:	f7fe fccf 	bl	80018f4 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8002f56:	2000      	movs	r0, #0
 8002f58:	f7fe fcb0 	bl	80018bc <LCD_IO_WriteData>
 8002f5c:	20c1      	movs	r0, #193	; 0xc1
 8002f5e:	f7fe fcad 	bl	80018bc <LCD_IO_WriteData>
 8002f62:	2030      	movs	r0, #48	; 0x30
 8002f64:	f7fe fcaa 	bl	80018bc <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8002f68:	20ed      	movs	r0, #237	; 0xed
 8002f6a:	f7fe fcc3 	bl	80018f4 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8002f6e:	2064      	movs	r0, #100	; 0x64
 8002f70:	f7fe fca4 	bl	80018bc <LCD_IO_WriteData>
 8002f74:	2003      	movs	r0, #3
 8002f76:	f7fe fca1 	bl	80018bc <LCD_IO_WriteData>
 8002f7a:	2012      	movs	r0, #18
 8002f7c:	f7fe fc9e 	bl	80018bc <LCD_IO_WriteData>
 8002f80:	2081      	movs	r0, #129	; 0x81
 8002f82:	f7fe fc9b 	bl	80018bc <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8002f86:	20e8      	movs	r0, #232	; 0xe8
 8002f88:	f7fe fcb4 	bl	80018f4 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8002f8c:	2085      	movs	r0, #133	; 0x85
 8002f8e:	f7fe fc95 	bl	80018bc <LCD_IO_WriteData>
 8002f92:	2000      	movs	r0, #0
 8002f94:	f7fe fc92 	bl	80018bc <LCD_IO_WriteData>
 8002f98:	2078      	movs	r0, #120	; 0x78
 8002f9a:	f7fe fc8f 	bl	80018bc <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8002f9e:	20cb      	movs	r0, #203	; 0xcb
 8002fa0:	f7fe fca8 	bl	80018f4 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8002fa4:	2039      	movs	r0, #57	; 0x39
 8002fa6:	f7fe fc89 	bl	80018bc <LCD_IO_WriteData>
 8002faa:	202c      	movs	r0, #44	; 0x2c
 8002fac:	f7fe fc86 	bl	80018bc <LCD_IO_WriteData>
 8002fb0:	2000      	movs	r0, #0
 8002fb2:	f7fe fc83 	bl	80018bc <LCD_IO_WriteData>
 8002fb6:	2034      	movs	r0, #52	; 0x34
 8002fb8:	f7fe fc80 	bl	80018bc <LCD_IO_WriteData>
 8002fbc:	2002      	movs	r0, #2
 8002fbe:	f7fe fc7d 	bl	80018bc <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8002fc2:	20f7      	movs	r0, #247	; 0xf7
 8002fc4:	f7fe fc96 	bl	80018f4 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8002fc8:	2020      	movs	r0, #32
 8002fca:	f7fe fc77 	bl	80018bc <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8002fce:	20ea      	movs	r0, #234	; 0xea
 8002fd0:	f7fe fc90 	bl	80018f4 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8002fd4:	2000      	movs	r0, #0
 8002fd6:	f7fe fc71 	bl	80018bc <LCD_IO_WriteData>
 8002fda:	2000      	movs	r0, #0
 8002fdc:	f7fe fc6e 	bl	80018bc <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8002fe0:	20b1      	movs	r0, #177	; 0xb1
 8002fe2:	f7fe fc87 	bl	80018f4 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8002fe6:	2000      	movs	r0, #0
 8002fe8:	f7fe fc68 	bl	80018bc <LCD_IO_WriteData>
 8002fec:	201b      	movs	r0, #27
 8002fee:	f7fe fc65 	bl	80018bc <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8002ff2:	20b6      	movs	r0, #182	; 0xb6
 8002ff4:	f7fe fc7e 	bl	80018f4 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8002ff8:	200a      	movs	r0, #10
 8002ffa:	f7fe fc5f 	bl	80018bc <LCD_IO_WriteData>
 8002ffe:	20a2      	movs	r0, #162	; 0xa2
 8003000:	f7fe fc5c 	bl	80018bc <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8003004:	20c0      	movs	r0, #192	; 0xc0
 8003006:	f7fe fc75 	bl	80018f4 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800300a:	2010      	movs	r0, #16
 800300c:	f7fe fc56 	bl	80018bc <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8003010:	20c1      	movs	r0, #193	; 0xc1
 8003012:	f7fe fc6f 	bl	80018f4 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8003016:	2010      	movs	r0, #16
 8003018:	f7fe fc50 	bl	80018bc <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800301c:	20c5      	movs	r0, #197	; 0xc5
 800301e:	f7fe fc69 	bl	80018f4 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8003022:	2045      	movs	r0, #69	; 0x45
 8003024:	f7fe fc4a 	bl	80018bc <LCD_IO_WriteData>
 8003028:	2015      	movs	r0, #21
 800302a:	f7fe fc47 	bl	80018bc <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800302e:	20c7      	movs	r0, #199	; 0xc7
 8003030:	f7fe fc60 	bl	80018f4 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8003034:	2090      	movs	r0, #144	; 0x90
 8003036:	f7fe fc41 	bl	80018bc <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800303a:	2036      	movs	r0, #54	; 0x36
 800303c:	f7fe fc5a 	bl	80018f4 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8003040:	20c8      	movs	r0, #200	; 0xc8
 8003042:	f7fe fc3b 	bl	80018bc <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8003046:	20f2      	movs	r0, #242	; 0xf2
 8003048:	f7fe fc54 	bl	80018f4 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800304c:	2000      	movs	r0, #0
 800304e:	f7fe fc35 	bl	80018bc <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8003052:	20b0      	movs	r0, #176	; 0xb0
 8003054:	f7fe fc4e 	bl	80018f4 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8003058:	20c2      	movs	r0, #194	; 0xc2
 800305a:	f7fe fc2f 	bl	80018bc <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800305e:	20b6      	movs	r0, #182	; 0xb6
 8003060:	f7fe fc48 	bl	80018f4 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8003064:	200a      	movs	r0, #10
 8003066:	f7fe fc29 	bl	80018bc <LCD_IO_WriteData>
 800306a:	20a7      	movs	r0, #167	; 0xa7
 800306c:	f7fe fc26 	bl	80018bc <LCD_IO_WriteData>
 8003070:	2027      	movs	r0, #39	; 0x27
 8003072:	f7fe fc23 	bl	80018bc <LCD_IO_WriteData>
 8003076:	2004      	movs	r0, #4
 8003078:	f7fe fc20 	bl	80018bc <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800307c:	202a      	movs	r0, #42	; 0x2a
 800307e:	f7fe fc39 	bl	80018f4 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8003082:	2000      	movs	r0, #0
 8003084:	f7fe fc1a 	bl	80018bc <LCD_IO_WriteData>
 8003088:	2000      	movs	r0, #0
 800308a:	f7fe fc17 	bl	80018bc <LCD_IO_WriteData>
 800308e:	2000      	movs	r0, #0
 8003090:	f7fe fc14 	bl	80018bc <LCD_IO_WriteData>
 8003094:	20ef      	movs	r0, #239	; 0xef
 8003096:	f7fe fc11 	bl	80018bc <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800309a:	202b      	movs	r0, #43	; 0x2b
 800309c:	f7fe fc2a 	bl	80018f4 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80030a0:	2000      	movs	r0, #0
 80030a2:	f7fe fc0b 	bl	80018bc <LCD_IO_WriteData>
 80030a6:	2000      	movs	r0, #0
 80030a8:	f7fe fc08 	bl	80018bc <LCD_IO_WriteData>
 80030ac:	2001      	movs	r0, #1
 80030ae:	f7fe fc05 	bl	80018bc <LCD_IO_WriteData>
 80030b2:	203f      	movs	r0, #63	; 0x3f
 80030b4:	f7fe fc02 	bl	80018bc <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80030b8:	20f6      	movs	r0, #246	; 0xf6
 80030ba:	f7fe fc1b 	bl	80018f4 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80030be:	2001      	movs	r0, #1
 80030c0:	f7fe fbfc 	bl	80018bc <LCD_IO_WriteData>
 80030c4:	2000      	movs	r0, #0
 80030c6:	f7fe fbf9 	bl	80018bc <LCD_IO_WriteData>
 80030ca:	2006      	movs	r0, #6
 80030cc:	f7fe fbf6 	bl	80018bc <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80030d0:	202c      	movs	r0, #44	; 0x2c
 80030d2:	f7fe fc0f 	bl	80018f4 <LCD_IO_WriteReg>
  LCD_Delay(200);
 80030d6:	20c8      	movs	r0, #200	; 0xc8
 80030d8:	f7fe fc5a 	bl	8001990 <LCD_Delay>
  LCD_IO_WriteReg(LCD_Reg);
 80030dc:	2026      	movs	r0, #38	; 0x26
 80030de:	f7fe fc09 	bl	80018f4 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80030e2:	2001      	movs	r0, #1
 80030e4:	f7fe fbea 	bl	80018bc <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80030e8:	20e0      	movs	r0, #224	; 0xe0
 80030ea:	f7fe fc03 	bl	80018f4 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80030ee:	200f      	movs	r0, #15
 80030f0:	f7fe fbe4 	bl	80018bc <LCD_IO_WriteData>
 80030f4:	2029      	movs	r0, #41	; 0x29
 80030f6:	f7fe fbe1 	bl	80018bc <LCD_IO_WriteData>
 80030fa:	2024      	movs	r0, #36	; 0x24
 80030fc:	f7fe fbde 	bl	80018bc <LCD_IO_WriteData>
 8003100:	200c      	movs	r0, #12
 8003102:	f7fe fbdb 	bl	80018bc <LCD_IO_WriteData>
 8003106:	200e      	movs	r0, #14
 8003108:	f7fe fbd8 	bl	80018bc <LCD_IO_WriteData>
 800310c:	2009      	movs	r0, #9
 800310e:	f7fe fbd5 	bl	80018bc <LCD_IO_WriteData>
 8003112:	204e      	movs	r0, #78	; 0x4e
 8003114:	f7fe fbd2 	bl	80018bc <LCD_IO_WriteData>
 8003118:	2078      	movs	r0, #120	; 0x78
 800311a:	f7fe fbcf 	bl	80018bc <LCD_IO_WriteData>
 800311e:	203c      	movs	r0, #60	; 0x3c
 8003120:	f7fe fbcc 	bl	80018bc <LCD_IO_WriteData>
 8003124:	2009      	movs	r0, #9
 8003126:	f7fe fbc9 	bl	80018bc <LCD_IO_WriteData>
 800312a:	2013      	movs	r0, #19
 800312c:	f7fe fbc6 	bl	80018bc <LCD_IO_WriteData>
 8003130:	2005      	movs	r0, #5
 8003132:	f7fe fbc3 	bl	80018bc <LCD_IO_WriteData>
 8003136:	2017      	movs	r0, #23
 8003138:	f7fe fbc0 	bl	80018bc <LCD_IO_WriteData>
 800313c:	2011      	movs	r0, #17
 800313e:	f7fe fbbd 	bl	80018bc <LCD_IO_WriteData>
 8003142:	2000      	movs	r0, #0
 8003144:	f7fe fbba 	bl	80018bc <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8003148:	20e1      	movs	r0, #225	; 0xe1
 800314a:	f7fe fbd3 	bl	80018f4 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800314e:	2000      	movs	r0, #0
 8003150:	f7fe fbb4 	bl	80018bc <LCD_IO_WriteData>
 8003154:	2016      	movs	r0, #22
 8003156:	f7fe fbb1 	bl	80018bc <LCD_IO_WriteData>
 800315a:	201b      	movs	r0, #27
 800315c:	f7fe fbae 	bl	80018bc <LCD_IO_WriteData>
 8003160:	2004      	movs	r0, #4
 8003162:	f7fe fbab 	bl	80018bc <LCD_IO_WriteData>
 8003166:	2011      	movs	r0, #17
 8003168:	f7fe fba8 	bl	80018bc <LCD_IO_WriteData>
 800316c:	2007      	movs	r0, #7
 800316e:	f7fe fba5 	bl	80018bc <LCD_IO_WriteData>
 8003172:	2031      	movs	r0, #49	; 0x31
 8003174:	f7fe fba2 	bl	80018bc <LCD_IO_WriteData>
 8003178:	2033      	movs	r0, #51	; 0x33
 800317a:	f7fe fb9f 	bl	80018bc <LCD_IO_WriteData>
 800317e:	2042      	movs	r0, #66	; 0x42
 8003180:	f7fe fb9c 	bl	80018bc <LCD_IO_WriteData>
 8003184:	2005      	movs	r0, #5
 8003186:	f7fe fb99 	bl	80018bc <LCD_IO_WriteData>
 800318a:	200c      	movs	r0, #12
 800318c:	f7fe fb96 	bl	80018bc <LCD_IO_WriteData>
 8003190:	200a      	movs	r0, #10
 8003192:	f7fe fb93 	bl	80018bc <LCD_IO_WriteData>
 8003196:	2028      	movs	r0, #40	; 0x28
 8003198:	f7fe fb90 	bl	80018bc <LCD_IO_WriteData>
 800319c:	202f      	movs	r0, #47	; 0x2f
 800319e:	f7fe fb8d 	bl	80018bc <LCD_IO_WriteData>
 80031a2:	200f      	movs	r0, #15
 80031a4:	f7fe fb8a 	bl	80018bc <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80031a8:	2011      	movs	r0, #17
 80031aa:	f7fe fba3 	bl	80018f4 <LCD_IO_WriteReg>
  LCD_Delay(200);
 80031ae:	20c8      	movs	r0, #200	; 0xc8
 80031b0:	f7fe fbee 	bl	8001990 <LCD_Delay>
  LCD_IO_WriteReg(LCD_Reg);
 80031b4:	2029      	movs	r0, #41	; 0x29
 80031b6:	f7fe fb9d 	bl	80018f4 <LCD_IO_WriteReg>
 80031ba:	202c      	movs	r0, #44	; 0x2c
}
 80031bc:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  LCD_IO_WriteReg(LCD_Reg);
 80031c0:	f7fe bb98 	b.w	80018f4 <LCD_IO_WriteReg>

080031c4 <ili9341_ReadID>:
{
 80031c4:	b508      	push	{r3, lr}
  LCD_IO_Init();
 80031c6:	f7fe fb69 	bl	800189c <LCD_IO_Init>
  return (LCD_IO_ReadData(RegValue, ReadSize));
 80031ca:	2103      	movs	r1, #3
 80031cc:	20d3      	movs	r0, #211	; 0xd3
 80031ce:	f7fe fbad 	bl	800192c <LCD_IO_ReadData>
}
 80031d2:	b280      	uxth	r0, r0
 80031d4:	bd08      	pop	{r3, pc}

080031d6 <stmpe811_Reset>:
  * @brief  Reset the stmpe811 by Software.
  * @param  DeviceAddr: Device address on communication Bus.  
  * @retval None
  */
void stmpe811_Reset(uint16_t DeviceAddr)
{
 80031d6:	b510      	push	{r4, lr}
  /* Power Down the stmpe811 */  
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 2);
 80031d8:	b2c4      	uxtb	r4, r0
 80031da:	2202      	movs	r2, #2
 80031dc:	2103      	movs	r1, #3
 80031de:	4620      	mov	r0, r4
 80031e0:	f7fe fb14 	bl	800180c <IOE_Write>

  /* Wait for a delay to ensure registers erasing */
  IOE_Delay(10); 
 80031e4:	200a      	movs	r0, #10
 80031e6:	f7fe fb57 	bl	8001898 <IOE_Delay>
  
  /* Power On the Codec after the power off => all registers are reinitialized */
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 0);
 80031ea:	4620      	mov	r0, r4
 80031ec:	2200      	movs	r2, #0
 80031ee:	2103      	movs	r1, #3
 80031f0:	f7fe fb0c 	bl	800180c <IOE_Write>
  
  /* Wait for a delay to ensure registers erasing */
  IOE_Delay(2); 
 80031f4:	2002      	movs	r0, #2
}
 80031f6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Delay(2); 
 80031fa:	f7fe bb4d 	b.w	8001898 <IOE_Delay>

080031fe <stmpe811_ReadID>:
  * @brief  Read the stmpe811 IO Expander device ID.
  * @param  DeviceAddr: Device address on communication Bus.  
  * @retval The Device ID (two bytes).
  */
uint16_t stmpe811_ReadID(uint16_t DeviceAddr)
{
 80031fe:	b538      	push	{r3, r4, r5, lr}
 8003200:	4604      	mov	r4, r0
  /* Initialize IO BUS layer */
  IOE_Init(); 
  
  /* Return the device ID value */
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 8003202:	b2e4      	uxtb	r4, r4
  IOE_Init(); 
 8003204:	f7fe fb00 	bl	8001808 <IOE_Init>
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 8003208:	2100      	movs	r1, #0
 800320a:	4620      	mov	r0, r4
 800320c:	f7fe fb14 	bl	8001838 <IOE_Read>
          (IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_MSB)));
 8003210:	2101      	movs	r1, #1
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 8003212:	4605      	mov	r5, r0
          (IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_MSB)));
 8003214:	4620      	mov	r0, r4
 8003216:	f7fe fb0f 	bl	8001838 <IOE_Read>
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 800321a:	ea40 2005 	orr.w	r0, r0, r5, lsl #8
}
 800321e:	b280      	uxth	r0, r0
 8003220:	bd38      	pop	{r3, r4, r5, pc}

08003222 <stmpe811_TS_DetectTouch>:
  * @brief  Return if there is touch detected or not.
  * @param  DeviceAddr: Device address on communication Bus.
  * @retval Touch detected state.
  */
uint8_t stmpe811_TS_DetectTouch(uint16_t DeviceAddr)
{
 8003222:	b510      	push	{r4, lr}
  uint8_t state;
  uint8_t ret = 0;
  
  state = ((IOE_Read(DeviceAddr, STMPE811_REG_TSC_CTRL) & (uint8_t)STMPE811_TS_CTRL_STATUS) == (uint8_t)0x80);
 8003224:	b2c4      	uxtb	r4, r0
 8003226:	2140      	movs	r1, #64	; 0x40
 8003228:	4620      	mov	r0, r4
 800322a:	f7fe fb05 	bl	8001838 <IOE_Read>
  
  if(state > 0)
 800322e:	0603      	lsls	r3, r0, #24
 8003230:	d507      	bpl.n	8003242 <stmpe811_TS_DetectTouch+0x20>
  {
    if(IOE_Read(DeviceAddr, STMPE811_REG_FIFO_SIZE) > 0)
 8003232:	214c      	movs	r1, #76	; 0x4c
 8003234:	4620      	mov	r0, r4
 8003236:	f7fe faff 	bl	8001838 <IOE_Read>
    {
      ret = 1;
 800323a:	3000      	adds	r0, #0
 800323c:	bf18      	it	ne
 800323e:	2001      	movne	r0, #1
    /* Enable the FIFO again */
    IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
  }
  
  return ret;
}
 8003240:	bd10      	pop	{r4, pc}
    IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 8003242:	2201      	movs	r2, #1
 8003244:	214b      	movs	r1, #75	; 0x4b
 8003246:	4620      	mov	r0, r4
 8003248:	f7fe fae0 	bl	800180c <IOE_Write>
    IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 800324c:	4620      	mov	r0, r4
 800324e:	2200      	movs	r2, #0
 8003250:	214b      	movs	r1, #75	; 0x4b
 8003252:	f7fe fadb 	bl	800180c <IOE_Write>
  uint8_t ret = 0;
 8003256:	2000      	movs	r0, #0
 8003258:	e7f2      	b.n	8003240 <stmpe811_TS_DetectTouch+0x1e>

0800325a <stmpe811_TS_GetXY>:
  * @param  X: Pointer to X position value
  * @param  Y: Pointer to Y position value   
  * @retval None.
  */
void stmpe811_TS_GetXY(uint16_t DeviceAddr, uint16_t *X, uint16_t *Y)
{
 800325a:	b573      	push	{r0, r1, r4, r5, r6, lr}
  uint8_t  dataXYZ[4];
  uint32_t uldataXYZ;
  
  IOE_ReadMultiple(DeviceAddr, STMPE811_REG_TSC_DATA_NON_INC, dataXYZ, sizeof(dataXYZ)) ;
 800325c:	2304      	movs	r3, #4
 800325e:	b2c4      	uxtb	r4, r0
{
 8003260:	460e      	mov	r6, r1
 8003262:	4615      	mov	r5, r2
  IOE_ReadMultiple(DeviceAddr, STMPE811_REG_TSC_DATA_NON_INC, dataXYZ, sizeof(dataXYZ)) ;
 8003264:	21d7      	movs	r1, #215	; 0xd7
 8003266:	eb0d 0203 	add.w	r2, sp, r3
 800326a:	4620      	mov	r0, r4
 800326c:	f7fe fafe 	bl	800186c <IOE_ReadMultiple>
 8003270:	9b01      	ldr	r3, [sp, #4]
 8003272:	ba1b      	rev	r3, r3
  
  /* Calculate positions values */
  uldataXYZ = (dataXYZ[0] << 24)|(dataXYZ[1] << 16)|(dataXYZ[2] << 8)|(dataXYZ[3] << 0);     
  *X = (uldataXYZ >> 20) & 0x00000FFF;     
 8003274:	0d1a      	lsrs	r2, r3, #20
  *Y = (uldataXYZ >>  8) & 0x00000FFF;     
 8003276:	f3c3 230b 	ubfx	r3, r3, #8, #12
  *X = (uldataXYZ >> 20) & 0x00000FFF;     
 800327a:	8032      	strh	r2, [r6, #0]
  
  /* Reset FIFO */
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 800327c:	4620      	mov	r0, r4
  *Y = (uldataXYZ >>  8) & 0x00000FFF;     
 800327e:	802b      	strh	r3, [r5, #0]
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 8003280:	2201      	movs	r2, #1
 8003282:	214b      	movs	r1, #75	; 0x4b
 8003284:	f7fe fac2 	bl	800180c <IOE_Write>
  /* Enable the FIFO again */
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 8003288:	2200      	movs	r2, #0
 800328a:	214b      	movs	r1, #75	; 0x4b
 800328c:	4620      	mov	r0, r4
 800328e:	f7fe fabd 	bl	800180c <IOE_Write>
}
 8003292:	b002      	add	sp, #8
 8003294:	bd70      	pop	{r4, r5, r6, pc}
	...

08003298 <stmpe811_Init>:
{
 8003298:	b510      	push	{r4, lr}
  uint8_t idx = 0;
  
  /* Check all the registered instances */
  for(idx = 0; idx < STMPE811_MAX_INSTANCE ; idx ++)
  {
    if(stmpe811[idx] == DeviceAddr)
 800329a:	4a0a      	ldr	r2, [pc, #40]	; (80032c4 <stmpe811_Init+0x2c>)
 800329c:	7813      	ldrb	r3, [r2, #0]
 800329e:	4298      	cmp	r0, r3
{
 80032a0:	4604      	mov	r4, r0
    if(stmpe811[idx] == DeviceAddr)
 80032a2:	d00d      	beq.n	80032c0 <stmpe811_Init+0x28>
 80032a4:	7851      	ldrb	r1, [r2, #1]
 80032a6:	4288      	cmp	r0, r1
 80032a8:	d00a      	beq.n	80032c0 <stmpe811_Init+0x28>
 80032aa:	b10b      	cbz	r3, 80032b0 <stmpe811_Init+0x18>
 80032ac:	b941      	cbnz	r1, 80032c0 <stmpe811_Init+0x28>
  for(idx = 0; idx < STMPE811_MAX_INSTANCE ; idx ++)
 80032ae:	2301      	movs	r3, #1
      stmpe811[empty] = DeviceAddr;
 80032b0:	54d4      	strb	r4, [r2, r3]
      IOE_Init(); 
 80032b2:	f7fe faa9 	bl	8001808 <IOE_Init>
      stmpe811_Reset(DeviceAddr);
 80032b6:	4620      	mov	r0, r4
}
 80032b8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
      stmpe811_Reset(DeviceAddr);
 80032bc:	f7ff bf8b 	b.w	80031d6 <stmpe811_Reset>
}
 80032c0:	bd10      	pop	{r4, pc}
 80032c2:	bf00      	nop
 80032c4:	20001470 	.word	0x20001470

080032c8 <stmpe811_EnableGlobalIT>:
{
 80032c8:	b510      	push	{r4, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_CTRL);
 80032ca:	b2c4      	uxtb	r4, r0
 80032cc:	2109      	movs	r1, #9
 80032ce:	4620      	mov	r0, r4
 80032d0:	f7fe fab2 	bl	8001838 <IOE_Read>
  tmp |= (uint8_t)STMPE811_GIT_EN;
 80032d4:	f040 0201 	orr.w	r2, r0, #1
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp); 
 80032d8:	b2d2      	uxtb	r2, r2
 80032da:	4620      	mov	r0, r4
 80032dc:	2109      	movs	r1, #9
}
 80032de:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp); 
 80032e2:	f7fe ba93 	b.w	800180c <IOE_Write>

080032e6 <stmpe811_DisableGlobalIT>:
{
 80032e6:	b510      	push	{r4, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_CTRL);
 80032e8:	b2c4      	uxtb	r4, r0
 80032ea:	2109      	movs	r1, #9
 80032ec:	4620      	mov	r0, r4
 80032ee:	f7fe faa3 	bl	8001838 <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp);
 80032f2:	2109      	movs	r1, #9
 80032f4:	f000 02fe 	and.w	r2, r0, #254	; 0xfe
 80032f8:	4620      	mov	r0, r4
}
 80032fa:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp);
 80032fe:	f7fe ba85 	b.w	800180c <IOE_Write>

08003302 <stmpe811_EnableITSource>:
{
 8003302:	b538      	push	{r3, r4, r5, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 8003304:	b2c5      	uxtb	r5, r0
{
 8003306:	460c      	mov	r4, r1
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 8003308:	4628      	mov	r0, r5
 800330a:	210a      	movs	r1, #10
 800330c:	f7fe fa94 	bl	8001838 <IOE_Read>
  tmp |= Source; 
 8003310:	ea40 0204 	orr.w	r2, r0, r4
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 8003314:	b2d2      	uxtb	r2, r2
 8003316:	4628      	mov	r0, r5
 8003318:	210a      	movs	r1, #10
}
 800331a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 800331e:	f7fe ba75 	b.w	800180c <IOE_Write>

08003322 <stmpe811_TS_EnableIT>:
{
 8003322:	b510      	push	{r4, lr}
 8003324:	4604      	mov	r4, r0
  IOE_ITConfig();
 8003326:	f7fe fa70 	bl	800180a <IOE_ITConfig>
  stmpe811_EnableITSource(DeviceAddr, STMPE811_TS_IT); 
 800332a:	4620      	mov	r0, r4
 800332c:	211f      	movs	r1, #31
 800332e:	f7ff ffe8 	bl	8003302 <stmpe811_EnableITSource>
  stmpe811_EnableGlobalIT(DeviceAddr);
 8003332:	4620      	mov	r0, r4
}
 8003334:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  stmpe811_EnableGlobalIT(DeviceAddr);
 8003338:	f7ff bfc6 	b.w	80032c8 <stmpe811_EnableGlobalIT>

0800333c <stmpe811_DisableITSource>:
{
 800333c:	b538      	push	{r3, r4, r5, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 800333e:	b2c5      	uxtb	r5, r0
{
 8003340:	460c      	mov	r4, r1
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 8003342:	4628      	mov	r0, r5
 8003344:	210a      	movs	r1, #10
 8003346:	f7fe fa77 	bl	8001838 <IOE_Read>
  tmp &= ~Source; 
 800334a:	ea20 0204 	bic.w	r2, r0, r4
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 800334e:	b2d2      	uxtb	r2, r2
 8003350:	4628      	mov	r0, r5
 8003352:	210a      	movs	r1, #10
}
 8003354:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 8003358:	f7fe ba58 	b.w	800180c <IOE_Write>

0800335c <stmpe811_TS_DisableIT>:
{
 800335c:	b510      	push	{r4, lr}
 800335e:	4604      	mov	r4, r0
  stmpe811_DisableGlobalIT(DeviceAddr);
 8003360:	f7ff ffc1 	bl	80032e6 <stmpe811_DisableGlobalIT>
  stmpe811_DisableITSource(DeviceAddr, STMPE811_TS_IT); 
 8003364:	4620      	mov	r0, r4
 8003366:	211f      	movs	r1, #31
}
 8003368:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  stmpe811_DisableITSource(DeviceAddr, STMPE811_TS_IT); 
 800336c:	f7ff bfe6 	b.w	800333c <stmpe811_DisableITSource>

08003370 <stmpe811_ReadGITStatus>:
{
 8003370:	b510      	push	{r4, lr}
  return((IOE_Read(DeviceAddr, STMPE811_REG_INT_STA) & Source));
 8003372:	b2c0      	uxtb	r0, r0
{
 8003374:	460c      	mov	r4, r1
  return((IOE_Read(DeviceAddr, STMPE811_REG_INT_STA) & Source));
 8003376:	210b      	movs	r1, #11
 8003378:	f7fe fa5e 	bl	8001838 <IOE_Read>
}
 800337c:	4020      	ands	r0, r4
 800337e:	bd10      	pop	{r4, pc}

08003380 <stmpe811_TS_ITStatus>:
  return(stmpe811_ReadGITStatus(DeviceAddr, STMPE811_TS_IT));
 8003380:	211f      	movs	r1, #31
 8003382:	f7ff bff5 	b.w	8003370 <stmpe811_ReadGITStatus>

08003386 <stmpe811_ClearGlobalIT>:
  IOE_Write(DeviceAddr, STMPE811_REG_INT_STA, Source);
 8003386:	460a      	mov	r2, r1
 8003388:	b2c0      	uxtb	r0, r0
 800338a:	210b      	movs	r1, #11
 800338c:	f7fe ba3e 	b.w	800180c <IOE_Write>

08003390 <stmpe811_TS_ClearIT>:
  stmpe811_ClearGlobalIT(DeviceAddr, STMPE811_TS_IT);
 8003390:	211f      	movs	r1, #31
 8003392:	f7ff bff8 	b.w	8003386 <stmpe811_ClearGlobalIT>

08003396 <stmpe811_IO_EnableAF>:
{
 8003396:	b538      	push	{r3, r4, r5, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_IO_AF);
 8003398:	b2c5      	uxtb	r5, r0
{
 800339a:	460c      	mov	r4, r1
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_IO_AF);
 800339c:	4628      	mov	r0, r5
 800339e:	2117      	movs	r1, #23
 80033a0:	f7fe fa4a 	bl	8001838 <IOE_Read>
  tmp &= ~(uint8_t)IO_Pin;   
 80033a4:	ea20 0204 	bic.w	r2, r0, r4
  IOE_Write(DeviceAddr, STMPE811_REG_IO_AF, tmp); 
 80033a8:	b2d2      	uxtb	r2, r2
 80033aa:	4628      	mov	r0, r5
 80033ac:	2117      	movs	r1, #23
}
 80033ae:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_IO_AF, tmp); 
 80033b2:	f7fe ba2b 	b.w	800180c <IOE_Write>

080033b6 <stmpe811_TS_Start>:
{
 80033b6:	b570      	push	{r4, r5, r6, lr}
  mode = IOE_Read(DeviceAddr, STMPE811_REG_SYS_CTRL2);
 80033b8:	b2c4      	uxtb	r4, r0
{
 80033ba:	4606      	mov	r6, r0
  mode = IOE_Read(DeviceAddr, STMPE811_REG_SYS_CTRL2);
 80033bc:	2104      	movs	r1, #4
 80033be:	4620      	mov	r0, r4
 80033c0:	f7fe fa3a 	bl	8001838 <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 80033c4:	2104      	movs	r1, #4
 80033c6:	f000 02fb 	and.w	r2, r0, #251	; 0xfb
  mode = IOE_Read(DeviceAddr, STMPE811_REG_SYS_CTRL2);
 80033ca:	4605      	mov	r5, r0
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 80033cc:	4620      	mov	r0, r4
 80033ce:	f7fe fa1d 	bl	800180c <IOE_Write>
  stmpe811_IO_EnableAF(DeviceAddr, STMPE811_TOUCH_IO_ALL);
 80033d2:	4630      	mov	r0, r6
 80033d4:	21f0      	movs	r1, #240	; 0xf0
 80033d6:	f7ff ffde 	bl	8003396 <stmpe811_IO_EnableAF>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 80033da:	f005 02f8 	and.w	r2, r5, #248	; 0xf8
 80033de:	4620      	mov	r0, r4
 80033e0:	2104      	movs	r1, #4
 80033e2:	f7fe fa13 	bl	800180c <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_ADC_CTRL1, 0x49);
 80033e6:	2249      	movs	r2, #73	; 0x49
 80033e8:	2120      	movs	r1, #32
 80033ea:	4620      	mov	r0, r4
 80033ec:	f7fe fa0e 	bl	800180c <IOE_Write>
  IOE_Delay(2); 
 80033f0:	2002      	movs	r0, #2
 80033f2:	f7fe fa51 	bl	8001898 <IOE_Delay>
  IOE_Write(DeviceAddr, STMPE811_REG_ADC_CTRL2, 0x01);
 80033f6:	4620      	mov	r0, r4
 80033f8:	2201      	movs	r2, #1
 80033fa:	2121      	movs	r1, #33	; 0x21
 80033fc:	f7fe fa06 	bl	800180c <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_CFG, 0x9A); 
 8003400:	4620      	mov	r0, r4
 8003402:	229a      	movs	r2, #154	; 0x9a
 8003404:	2141      	movs	r1, #65	; 0x41
 8003406:	f7fe fa01 	bl	800180c <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_TH, 0x01);
 800340a:	4620      	mov	r0, r4
 800340c:	2201      	movs	r2, #1
 800340e:	214a      	movs	r1, #74	; 0x4a
 8003410:	f7fe f9fc 	bl	800180c <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 8003414:	4620      	mov	r0, r4
 8003416:	2201      	movs	r2, #1
 8003418:	214b      	movs	r1, #75	; 0x4b
 800341a:	f7fe f9f7 	bl	800180c <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 800341e:	4620      	mov	r0, r4
 8003420:	2200      	movs	r2, #0
 8003422:	214b      	movs	r1, #75	; 0x4b
 8003424:	f7fe f9f2 	bl	800180c <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_FRACT_XYZ, 0x01);
 8003428:	4620      	mov	r0, r4
 800342a:	2201      	movs	r2, #1
 800342c:	2156      	movs	r1, #86	; 0x56
 800342e:	f7fe f9ed 	bl	800180c <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_I_DRIVE, 0x01);
 8003432:	4620      	mov	r0, r4
 8003434:	2201      	movs	r2, #1
 8003436:	2158      	movs	r1, #88	; 0x58
 8003438:	f7fe f9e8 	bl	800180c <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_CTRL, 0x01);
 800343c:	4620      	mov	r0, r4
 800343e:	2201      	movs	r2, #1
 8003440:	2140      	movs	r1, #64	; 0x40
 8003442:	f7fe f9e3 	bl	800180c <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_INT_STA, 0xFF);
 8003446:	4620      	mov	r0, r4
 8003448:	22ff      	movs	r2, #255	; 0xff
 800344a:	210b      	movs	r1, #11
 800344c:	f7fe f9de 	bl	800180c <IOE_Write>
  IOE_Delay(2); 
 8003450:	2002      	movs	r0, #2
}
 8003452:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
  IOE_Delay(2); 
 8003456:	f7fe ba1f 	b.w	8001898 <IOE_Delay>
	...

0800345c <SystemInit>:
  */
void SystemInit(void)
{
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 800345c:	4b05      	ldr	r3, [pc, #20]	; (8003474 <SystemInit+0x18>)
 800345e:	f8d3 2088 	ldr.w	r2, [r3, #136]	; 0x88
 8003462:	f442 0270 	orr.w	r2, r2, #15728640	; 0xf00000
 8003466:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88

  /* Configure the Vector Table location add offset address ------------------*/
#ifdef VECT_TAB_SRAM
  SCB->VTOR = SRAM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#else
  SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
 800346a:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
 800346e:	609a      	str	r2, [r3, #8]
#endif
}
 8003470:	4770      	bx	lr
 8003472:	bf00      	nop
 8003474:	e000ed00 	.word	0xe000ed00

08003478 <HAL_Init>:
  *         need to ensure that the SysTick time base is always set to 1 millisecond
  *         to have correct HAL operation.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_Init(void)
{
 8003478:	b508      	push	{r3, lr}
  /* Configure Flash prefetch, Instruction cache, Data cache */ 
#if (INSTRUCTION_CACHE_ENABLE != 0U)
  __HAL_FLASH_INSTRUCTION_CACHE_ENABLE();
 800347a:	4b0b      	ldr	r3, [pc, #44]	; (80034a8 <HAL_Init+0x30>)
 800347c:	681a      	ldr	r2, [r3, #0]
 800347e:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8003482:	601a      	str	r2, [r3, #0]
#endif /* INSTRUCTION_CACHE_ENABLE */

#if (DATA_CACHE_ENABLE != 0U)
  __HAL_FLASH_DATA_CACHE_ENABLE();
 8003484:	681a      	ldr	r2, [r3, #0]
 8003486:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800348a:	601a      	str	r2, [r3, #0]
#endif /* DATA_CACHE_ENABLE */

#if (PREFETCH_ENABLE != 0U)
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 800348c:	681a      	ldr	r2, [r3, #0]
 800348e:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8003492:	601a      	str	r2, [r3, #0]
#endif /* PREFETCH_ENABLE */

  /* Set Interrupt Group Priority */
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 8003494:	2003      	movs	r0, #3
 8003496:	f000 f82f 	bl	80034f8 <HAL_NVIC_SetPriorityGrouping>

  /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
  HAL_InitTick(TICK_INT_PRIORITY);
 800349a:	2000      	movs	r0, #0
 800349c:	f7fe fdf8 	bl	8002090 <HAL_InitTick>

  /* Init the low level hardware */
  HAL_MspInit();
 80034a0:	f7fe fa84 	bl	80019ac <HAL_MspInit>

  /* Return function status */
  return HAL_OK;
}
 80034a4:	2000      	movs	r0, #0
 80034a6:	bd08      	pop	{r3, pc}
 80034a8:	40023c00 	.word	0x40023c00

080034ac <HAL_IncTick>:
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
  uwTick += uwTickFreq;
 80034ac:	4a03      	ldr	r2, [pc, #12]	; (80034bc <HAL_IncTick+0x10>)
 80034ae:	4b04      	ldr	r3, [pc, #16]	; (80034c0 <HAL_IncTick+0x14>)
 80034b0:	6811      	ldr	r1, [r2, #0]
 80034b2:	781b      	ldrb	r3, [r3, #0]
 80034b4:	440b      	add	r3, r1
 80034b6:	6013      	str	r3, [r2, #0]
}
 80034b8:	4770      	bx	lr
 80034ba:	bf00      	nop
 80034bc:	2001293c 	.word	0x2001293c
 80034c0:	20000078 	.word	0x20000078

080034c4 <HAL_GetTick>:
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
  return uwTick;
 80034c4:	4b01      	ldr	r3, [pc, #4]	; (80034cc <HAL_GetTick+0x8>)
 80034c6:	6818      	ldr	r0, [r3, #0]
}
 80034c8:	4770      	bx	lr
 80034ca:	bf00      	nop
 80034cc:	2001293c 	.word	0x2001293c

080034d0 <HAL_Delay>:
  *       implementations in user file.
  * @param Delay specifies the delay time length, in milliseconds.
  * @retval None
  */
__weak void HAL_Delay(uint32_t Delay)
{
 80034d0:	b538      	push	{r3, r4, r5, lr}
 80034d2:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 80034d4:	f7ff fff6 	bl	80034c4 <HAL_GetTick>
  uint32_t wait = Delay;

  /* Add a freq to guarantee minimum wait */
  if (wait < HAL_MAX_DELAY)
 80034d8:	1c63      	adds	r3, r4, #1
  {
    wait += (uint32_t)(uwTickFreq);
 80034da:	bf1c      	itt	ne
 80034dc:	4b05      	ldrne	r3, [pc, #20]	; (80034f4 <HAL_Delay+0x24>)
 80034de:	781b      	ldrbne	r3, [r3, #0]
  uint32_t tickstart = HAL_GetTick();
 80034e0:	4605      	mov	r5, r0
    wait += (uint32_t)(uwTickFreq);
 80034e2:	bf18      	it	ne
 80034e4:	18e4      	addne	r4, r4, r3
  }

  while((HAL_GetTick() - tickstart) < wait)
 80034e6:	f7ff ffed 	bl	80034c4 <HAL_GetTick>
 80034ea:	1b40      	subs	r0, r0, r5
 80034ec:	42a0      	cmp	r0, r4
 80034ee:	d3fa      	bcc.n	80034e6 <HAL_Delay+0x16>
  {
  }
}
 80034f0:	bd38      	pop	{r3, r4, r5, pc}
 80034f2:	bf00      	nop
 80034f4:	20000078 	.word	0x20000078

080034f8 <HAL_NVIC_SetPriorityGrouping>:
  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 80034f8:	4a07      	ldr	r2, [pc, #28]	; (8003518 <HAL_NVIC_SetPriorityGrouping+0x20>)
 80034fa:	68d3      	ldr	r3, [r2, #12]
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 80034fc:	f423 63e0 	bic.w	r3, r3, #1792	; 0x700
 8003500:	041b      	lsls	r3, r3, #16
 8003502:	0c1b      	lsrs	r3, r3, #16
 8003504:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 8003508:	0200      	lsls	r0, r0, #8
 800350a:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 800350e:	f400 60e0 	and.w	r0, r0, #1792	; 0x700
  reg_value  =  (reg_value                                   |
 8003512:	4303      	orrs	r3, r0
  SCB->AIRCR =  reg_value;
 8003514:	60d3      	str	r3, [r2, #12]
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));
  
  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
}
 8003516:	4770      	bx	lr
 8003518:	e000ed00 	.word	0xe000ed00

0800351c <HAL_NVIC_SetPriority>:
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 800351c:	4b17      	ldr	r3, [pc, #92]	; (800357c <HAL_NVIC_SetPriority+0x60>)
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.          
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{ 
 800351e:	b570      	push	{r4, r5, r6, lr}
 8003520:	68dc      	ldr	r4, [r3, #12]
 8003522:	f3c4 2402 	ubfx	r4, r4, #8, #3
{
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used          */
  uint32_t PreemptPriorityBits;
  uint32_t SubPriorityBits;

  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 8003526:	f1c4 0507 	rsb	r5, r4, #7
 800352a:	2d04      	cmp	r5, #4
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 800352c:	f104 0304 	add.w	r3, r4, #4
  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 8003530:	bf28      	it	cs
 8003532:	2504      	movcs	r5, #4

  return (
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8003534:	f04f 36ff 	mov.w	r6, #4294967295
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8003538:	2b06      	cmp	r3, #6
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 800353a:	fa06 f305 	lsl.w	r3, r6, r5
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 800353e:	bf8c      	ite	hi
 8003540:	3c03      	subhi	r4, #3
 8003542:	2400      	movls	r4, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8003544:	ea21 0303 	bic.w	r3, r1, r3
 8003548:	40a3      	lsls	r3, r4
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 800354a:	fa06 f404 	lsl.w	r4, r6, r4
 800354e:	ea22 0404 	bic.w	r4, r2, r4
  if ((int32_t)(IRQn) >= 0)
 8003552:	2800      	cmp	r0, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8003554:	ea43 0304 	orr.w	r3, r3, r4
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8003558:	bfa8      	it	ge
 800355a:	f100 4060 	addge.w	r0, r0, #3758096384	; 0xe0000000
 800355e:	ea4f 1303 	mov.w	r3, r3, lsl #4
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8003562:	bfbc      	itt	lt
 8003564:	f000 000f 	andlt.w	r0, r0, #15
 8003568:	4a05      	ldrlt	r2, [pc, #20]	; (8003580 <HAL_NVIC_SetPriority+0x64>)
 800356a:	b2db      	uxtb	r3, r3
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800356c:	bfaa      	itet	ge
 800356e:	f500 4061 	addge.w	r0, r0, #57600	; 0xe100
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8003572:	5413      	strblt	r3, [r2, r0]
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8003574:	f880 3300 	strbge.w	r3, [r0, #768]	; 0x300
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
  
  prioritygroup = NVIC_GetPriorityGrouping();
  
  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
}
 8003578:	bd70      	pop	{r4, r5, r6, pc}
 800357a:	bf00      	nop
 800357c:	e000ed00 	.word	0xe000ed00
 8003580:	e000ed14 	.word	0xe000ed14

08003584 <HAL_NVIC_EnableIRQ>:
  if ((int32_t)(IRQn) >= 0)
 8003584:	2800      	cmp	r0, #0
 8003586:	db08      	blt.n	800359a <HAL_NVIC_EnableIRQ+0x16>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8003588:	0942      	lsrs	r2, r0, #5
 800358a:	2301      	movs	r3, #1
 800358c:	f000 001f 	and.w	r0, r0, #31
 8003590:	fa03 f000 	lsl.w	r0, r3, r0
 8003594:	4b01      	ldr	r3, [pc, #4]	; (800359c <HAL_NVIC_EnableIRQ+0x18>)
 8003596:	f843 0022 	str.w	r0, [r3, r2, lsl #2]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
  
  /* Enable interrupt */
  NVIC_EnableIRQ(IRQn);
}
 800359a:	4770      	bx	lr
 800359c:	e000e100 	.word	0xe000e100

080035a0 <HAL_NVIC_DisableIRQ>:
  if ((int32_t)(IRQn) >= 0)
 80035a0:	2800      	cmp	r0, #0
 80035a2:	db0d      	blt.n	80035c0 <HAL_NVIC_DisableIRQ+0x20>
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80035a4:	0943      	lsrs	r3, r0, #5
 80035a6:	2201      	movs	r2, #1
 80035a8:	f000 001f 	and.w	r0, r0, #31
 80035ac:	fa02 f000 	lsl.w	r0, r2, r0
 80035b0:	3320      	adds	r3, #32
 80035b2:	4a04      	ldr	r2, [pc, #16]	; (80035c4 <HAL_NVIC_DisableIRQ+0x24>)
 80035b4:	f842 0023 	str.w	r0, [r2, r3, lsl #2]
  __ASM volatile ("dsb 0xF":::"memory");
 80035b8:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 80035bc:	f3bf 8f6f 	isb	sy
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
  
  /* Disable interrupt */
  NVIC_DisableIRQ(IRQn);
}
 80035c0:	4770      	bx	lr
 80035c2:	bf00      	nop
 80035c4:	e000e100 	.word	0xe000e100

080035c8 <HAL_CRC_Init>:
  *         parameters in the CRC_InitTypeDef and create the associated handle.
  * @param  hcrc CRC handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_CRC_Init(CRC_HandleTypeDef *hcrc)
{
 80035c8:	b510      	push	{r4, lr}
  /* Check the CRC handle allocation */
  if (hcrc == NULL)
 80035ca:	4604      	mov	r4, r0
 80035cc:	b150      	cbz	r0, 80035e4 <HAL_CRC_Init+0x1c>
  }

  /* Check the parameters */
  assert_param(IS_CRC_ALL_INSTANCE(hcrc->Instance));

  if (hcrc->State == HAL_CRC_STATE_RESET)
 80035ce:	7943      	ldrb	r3, [r0, #5]
 80035d0:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 80035d4:	b913      	cbnz	r3, 80035dc <HAL_CRC_Init+0x14>
  {
    /* Allocate lock resource and initialize it */
    hcrc->Lock = HAL_UNLOCKED;
 80035d6:	7102      	strb	r2, [r0, #4]
    /* Init the low level hardware */
    HAL_CRC_MspInit(hcrc);
 80035d8:	f7fe fa08 	bl	80019ec <HAL_CRC_MspInit>
  }

  /* Change CRC peripheral state */
  hcrc->State = HAL_CRC_STATE_READY;
 80035dc:	2301      	movs	r3, #1
 80035de:	7163      	strb	r3, [r4, #5]

  /* Return function status */
  return HAL_OK;
 80035e0:	2000      	movs	r0, #0
}
 80035e2:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 80035e4:	2001      	movs	r0, #1
 80035e6:	e7fc      	b.n	80035e2 <HAL_CRC_Init+0x1a>

080035e8 <DMA_CalcBaseAndBitshift>:
  *                     the configuration information for the specified DMA Stream. 
  * @retval Stream base address
  */
static uint32_t DMA_CalcBaseAndBitshift(DMA_HandleTypeDef *hdma)
{
  uint32_t stream_number = (((uint32_t)hdma->Instance & 0xFFU) - 16U) / 24U;
 80035e8:	6803      	ldr	r3, [r0, #0]
 80035ea:	b2da      	uxtb	r2, r3
 80035ec:	f423 737f 	bic.w	r3, r3, #1020	; 0x3fc
 80035f0:	f023 0303 	bic.w	r3, r3, #3
 80035f4:	2118      	movs	r1, #24
 80035f6:	3a10      	subs	r2, #16
 80035f8:	fbb2 f2f1 	udiv	r2, r2, r1
  
  /* lookup table for necessary bitshift of flags within status registers */
  static const uint8_t flagBitshiftOffset[8U] = {0U, 6U, 16U, 22U, 0U, 6U, 16U, 22U};
  hdma->StreamIndex = flagBitshiftOffset[stream_number];
 80035fc:	4904      	ldr	r1, [pc, #16]	; (8003610 <DMA_CalcBaseAndBitshift+0x28>)
  
  if (stream_number > 3U)
 80035fe:	2a03      	cmp	r2, #3
  {
    /* return pointer to HISR and HIFCR */
    hdma->StreamBaseAddress = (((uint32_t)hdma->Instance & (uint32_t)(~0x3FFU)) + 4U);
 8003600:	bf88      	it	hi
 8003602:	3304      	addhi	r3, #4
  hdma->StreamIndex = flagBitshiftOffset[stream_number];
 8003604:	5c89      	ldrb	r1, [r1, r2]
  }
  else
  {
    /* return pointer to LISR and LIFCR */
    hdma->StreamBaseAddress = ((uint32_t)hdma->Instance & (uint32_t)(~0x3FFU));
 8003606:	6583      	str	r3, [r0, #88]	; 0x58
  hdma->StreamIndex = flagBitshiftOffset[stream_number];
 8003608:	65c1      	str	r1, [r0, #92]	; 0x5c
  }
  
  return hdma->StreamBaseAddress;
}
 800360a:	6d80      	ldr	r0, [r0, #88]	; 0x58
 800360c:	4770      	bx	lr
 800360e:	bf00      	nop
 8003610:	0801aa24 	.word	0x0801aa24

08003614 <HAL_DMA_Init>:
{
 8003614:	b570      	push	{r4, r5, r6, lr}
 8003616:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 8003618:	f7ff ff54 	bl	80034c4 <HAL_GetTick>
 800361c:	4605      	mov	r5, r0
  if(hdma == NULL)
 800361e:	2c00      	cmp	r4, #0
 8003620:	d071      	beq.n	8003706 <HAL_DMA_Init+0xf2>
  __HAL_UNLOCK(hdma);
 8003622:	2300      	movs	r3, #0
 8003624:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34
  __HAL_DMA_DISABLE(hdma);
 8003628:	6822      	ldr	r2, [r4, #0]
  hdma->State = HAL_DMA_STATE_BUSY;
 800362a:	2302      	movs	r3, #2
 800362c:	f884 3035 	strb.w	r3, [r4, #53]	; 0x35
  __HAL_DMA_DISABLE(hdma);
 8003630:	6813      	ldr	r3, [r2, #0]
 8003632:	f023 0301 	bic.w	r3, r3, #1
 8003636:	6013      	str	r3, [r2, #0]
  while((hdma->Instance->CR & DMA_SxCR_EN) != RESET)
 8003638:	6821      	ldr	r1, [r4, #0]
 800363a:	680b      	ldr	r3, [r1, #0]
 800363c:	07d8      	lsls	r0, r3, #31
 800363e:	d43c      	bmi.n	80036ba <HAL_DMA_Init+0xa6>
  tmp = hdma->Instance->CR;
 8003640:	680b      	ldr	r3, [r1, #0]
  tmp &= ((uint32_t)~(DMA_SxCR_CHSEL | DMA_SxCR_MBURST | DMA_SxCR_PBURST | \
 8003642:	4d32      	ldr	r5, [pc, #200]	; (800370c <HAL_DMA_Init+0xf8>)
          hdma->Init.PeriphDataAlignment | hdma->Init.MemDataAlignment |
 8003644:	69a0      	ldr	r0, [r4, #24]
  tmp &= ((uint32_t)~(DMA_SxCR_CHSEL | DMA_SxCR_MBURST | DMA_SxCR_PBURST | \
 8003646:	401d      	ands	r5, r3
  tmp |=  hdma->Init.Channel             | hdma->Init.Direction        |
 8003648:	e9d4 2301 	ldrd	r2, r3, [r4, #4]
 800364c:	4313      	orrs	r3, r2
 800364e:	68e2      	ldr	r2, [r4, #12]
 8003650:	4313      	orrs	r3, r2
          hdma->Init.PeriphInc           | hdma->Init.MemInc           |
 8003652:	6922      	ldr	r2, [r4, #16]
 8003654:	4313      	orrs	r3, r2
 8003656:	6962      	ldr	r2, [r4, #20]
 8003658:	4313      	orrs	r3, r2
          hdma->Init.PeriphDataAlignment | hdma->Init.MemDataAlignment |
 800365a:	69e2      	ldr	r2, [r4, #28]
 800365c:	4303      	orrs	r3, r0
 800365e:	4313      	orrs	r3, r2
          hdma->Init.Mode                | hdma->Init.Priority;
 8003660:	6a22      	ldr	r2, [r4, #32]
 8003662:	4313      	orrs	r3, r2
  if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
 8003664:	6a62      	ldr	r2, [r4, #36]	; 0x24
 8003666:	2a04      	cmp	r2, #4
  tmp |=  hdma->Init.Channel             | hdma->Init.Direction        |
 8003668:	ea43 0305 	orr.w	r3, r3, r5
    tmp |=  hdma->Init.MemBurst | hdma->Init.PeriphBurst;
 800366c:	bf02      	ittt	eq
 800366e:	e9d4 560b 	ldrdeq	r5, r6, [r4, #44]	; 0x2c
 8003672:	4335      	orreq	r5, r6
 8003674:	432b      	orreq	r3, r5
  hdma->Instance->CR = tmp;  
 8003676:	600b      	str	r3, [r1, #0]
  tmp = hdma->Instance->FCR;
 8003678:	694b      	ldr	r3, [r1, #20]
  if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
 800367a:	2a04      	cmp	r2, #4
  tmp &= (uint32_t)~(DMA_SxFCR_DMDIS | DMA_SxFCR_FTH);
 800367c:	f023 0307 	bic.w	r3, r3, #7
  tmp |= hdma->Init.FIFOMode;
 8003680:	ea43 0302 	orr.w	r3, r3, r2
  if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
 8003684:	d10b      	bne.n	800369e <HAL_DMA_Init+0x8a>
    tmp |= hdma->Init.FIFOThreshold;
 8003686:	6aa2      	ldr	r2, [r4, #40]	; 0x28
    if (hdma->Init.MemBurst != DMA_MBURST_SINGLE)
 8003688:	6ae5      	ldr	r5, [r4, #44]	; 0x2c
    tmp |= hdma->Init.FIFOThreshold;
 800368a:	4313      	orrs	r3, r2
    if (hdma->Init.MemBurst != DMA_MBURST_SINGLE)
 800368c:	b13d      	cbz	r5, 800369e <HAL_DMA_Init+0x8a>
{
  HAL_StatusTypeDef status = HAL_OK;
  uint32_t tmp = hdma->Init.FIFOThreshold;
  
  /* Memory Data size equal to Byte */
  if(hdma->Init.MemDataAlignment == DMA_MDATAALIGN_BYTE)
 800368e:	b9f8      	cbnz	r0, 80036d0 <HAL_DMA_Init+0xbc>
  {
    switch (tmp)
 8003690:	2a01      	cmp	r2, #1
 8003692:	d02d      	beq.n	80036f0 <HAL_DMA_Init+0xdc>
 8003694:	d301      	bcc.n	800369a <HAL_DMA_Init+0x86>
 8003696:	2a02      	cmp	r2, #2
  }
  
  /* Memory Data size equal to Word */
  else
  {
    switch (tmp)
 8003698:	d101      	bne.n	800369e <HAL_DMA_Init+0x8a>
    case DMA_FIFO_THRESHOLD_HALFFULL:
    case DMA_FIFO_THRESHOLD_3QUARTERSFULL:
      status = HAL_ERROR;
      break;
    case DMA_FIFO_THRESHOLD_FULL:
      if ((hdma->Init.MemBurst & DMA_SxCR_MBURST_1) == DMA_SxCR_MBURST_1)
 800369a:	01ea      	lsls	r2, r5, #7
 800369c:	d42b      	bmi.n	80036f6 <HAL_DMA_Init+0xe2>
  hdma->Instance->FCR = tmp;
 800369e:	614b      	str	r3, [r1, #20]
  regs = (DMA_Base_Registers *)DMA_CalcBaseAndBitshift(hdma);
 80036a0:	4620      	mov	r0, r4
 80036a2:	f7ff ffa1 	bl	80035e8 <DMA_CalcBaseAndBitshift>
  regs->IFCR = 0x3FU << hdma->StreamIndex;
 80036a6:	6de2      	ldr	r2, [r4, #92]	; 0x5c
 80036a8:	233f      	movs	r3, #63	; 0x3f
 80036aa:	4093      	lsls	r3, r2
 80036ac:	6083      	str	r3, [r0, #8]
  hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 80036ae:	2000      	movs	r0, #0
  hdma->State = HAL_DMA_STATE_READY;
 80036b0:	2301      	movs	r3, #1
  hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 80036b2:	6560      	str	r0, [r4, #84]	; 0x54
  hdma->State = HAL_DMA_STATE_READY;
 80036b4:	f884 3035 	strb.w	r3, [r4, #53]	; 0x35
  return HAL_OK;
 80036b8:	e009      	b.n	80036ce <HAL_DMA_Init+0xba>
    if((HAL_GetTick() - tickstart ) > HAL_TIMEOUT_DMA_ABORT)
 80036ba:	f7ff ff03 	bl	80034c4 <HAL_GetTick>
 80036be:	1b40      	subs	r0, r0, r5
 80036c0:	2805      	cmp	r0, #5
 80036c2:	d9b9      	bls.n	8003638 <HAL_DMA_Init+0x24>
      hdma->ErrorCode = HAL_DMA_ERROR_TIMEOUT;
 80036c4:	2320      	movs	r3, #32
 80036c6:	6563      	str	r3, [r4, #84]	; 0x54
      hdma->State = HAL_DMA_STATE_TIMEOUT;
 80036c8:	2003      	movs	r0, #3
        hdma->State = HAL_DMA_STATE_READY;
 80036ca:	f884 0035 	strb.w	r0, [r4, #53]	; 0x35
}
 80036ce:	bd70      	pop	{r4, r5, r6, pc}
  else if (hdma->Init.MemDataAlignment == DMA_MDATAALIGN_HALFWORD)
 80036d0:	f5b0 5f00 	cmp.w	r0, #8192	; 0x2000
 80036d4:	d113      	bne.n	80036fe <HAL_DMA_Init+0xea>
    switch (tmp)
 80036d6:	2a03      	cmp	r2, #3
 80036d8:	d8e1      	bhi.n	800369e <HAL_DMA_Init+0x8a>
 80036da:	a001      	add	r0, pc, #4	; (adr r0, 80036e0 <HAL_DMA_Init+0xcc>)
 80036dc:	f850 f022 	ldr.w	pc, [r0, r2, lsl #2]
 80036e0:	080036f7 	.word	0x080036f7
 80036e4:	0800369b 	.word	0x0800369b
 80036e8:	080036f7 	.word	0x080036f7
 80036ec:	080036f1 	.word	0x080036f1
      if (hdma->Init.MemBurst == DMA_MBURST_INC16)
 80036f0:	f1b5 7fc0 	cmp.w	r5, #25165824	; 0x1800000
 80036f4:	d1d3      	bne.n	800369e <HAL_DMA_Init+0x8a>
        hdma->ErrorCode = HAL_DMA_ERROR_PARAM;
 80036f6:	2340      	movs	r3, #64	; 0x40
 80036f8:	6563      	str	r3, [r4, #84]	; 0x54
        hdma->State = HAL_DMA_STATE_READY;
 80036fa:	2001      	movs	r0, #1
 80036fc:	e7e5      	b.n	80036ca <HAL_DMA_Init+0xb6>
    switch (tmp)
 80036fe:	2a02      	cmp	r2, #2
 8003700:	d9f9      	bls.n	80036f6 <HAL_DMA_Init+0xe2>
 8003702:	2a03      	cmp	r2, #3
 8003704:	e7c8      	b.n	8003698 <HAL_DMA_Init+0x84>
    return HAL_ERROR;
 8003706:	2001      	movs	r0, #1
 8003708:	e7e1      	b.n	80036ce <HAL_DMA_Init+0xba>
 800370a:	bf00      	nop
 800370c:	f010803f 	.word	0xf010803f

08003710 <HAL_DMA_Start_IT>:
{
 8003710:	b570      	push	{r4, r5, r6, lr}
  __HAL_LOCK(hdma);
 8003712:	f890 4034 	ldrb.w	r4, [r0, #52]	; 0x34
 8003716:	2c01      	cmp	r4, #1
 8003718:	d032      	beq.n	8003780 <HAL_DMA_Start_IT+0x70>
 800371a:	2401      	movs	r4, #1
 800371c:	f880 4034 	strb.w	r4, [r0, #52]	; 0x34
  if(HAL_DMA_STATE_READY == hdma->State)
 8003720:	f890 4035 	ldrb.w	r4, [r0, #53]	; 0x35
  DMA_Base_Registers *regs = (DMA_Base_Registers *)hdma->StreamBaseAddress;
 8003724:	6d86      	ldr	r6, [r0, #88]	; 0x58
  if(HAL_DMA_STATE_READY == hdma->State)
 8003726:	2c01      	cmp	r4, #1
 8003728:	f04f 0500 	mov.w	r5, #0
 800372c:	f04f 0402 	mov.w	r4, #2
 8003730:	d124      	bne.n	800377c <HAL_DMA_Start_IT+0x6c>
    hdma->State = HAL_DMA_STATE_BUSY;
 8003732:	f880 4035 	strb.w	r4, [r0, #53]	; 0x35
  hdma->Instance->CR &= (uint32_t)(~DMA_SxCR_DBM);
 8003736:	6804      	ldr	r4, [r0, #0]
    hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 8003738:	6545      	str	r5, [r0, #84]	; 0x54
  hdma->Instance->CR &= (uint32_t)(~DMA_SxCR_DBM);
 800373a:	6825      	ldr	r5, [r4, #0]
 800373c:	f425 2580 	bic.w	r5, r5, #262144	; 0x40000
 8003740:	6025      	str	r5, [r4, #0]
  hdma->Instance->NDTR = DataLength;
 8003742:	6063      	str	r3, [r4, #4]
  if((hdma->Init.Direction) == DMA_MEMORY_TO_PERIPH)
 8003744:	6883      	ldr	r3, [r0, #8]
 8003746:	2b40      	cmp	r3, #64	; 0x40
    hdma->Instance->PAR = DstAddress;
 8003748:	bf0e      	itee	eq
 800374a:	60a2      	streq	r2, [r4, #8]
    hdma->Instance->PAR = SrcAddress;
 800374c:	60a1      	strne	r1, [r4, #8]
    hdma->Instance->M0AR = DstAddress;
 800374e:	60e2      	strne	r2, [r4, #12]
    regs->IFCR = 0x3FU << hdma->StreamIndex;
 8003750:	6dc2      	ldr	r2, [r0, #92]	; 0x5c
    hdma->Instance->M0AR = SrcAddress;
 8003752:	bf08      	it	eq
 8003754:	60e1      	streq	r1, [r4, #12]
    regs->IFCR = 0x3FU << hdma->StreamIndex;
 8003756:	233f      	movs	r3, #63	; 0x3f
 8003758:	4093      	lsls	r3, r2
 800375a:	60b3      	str	r3, [r6, #8]
    hdma->Instance->CR  |= DMA_IT_TC | DMA_IT_TE | DMA_IT_DME;
 800375c:	6823      	ldr	r3, [r4, #0]
 800375e:	f043 0316 	orr.w	r3, r3, #22
 8003762:	6023      	str	r3, [r4, #0]
    if(hdma->XferHalfCpltCallback != NULL)
 8003764:	6c03      	ldr	r3, [r0, #64]	; 0x40
 8003766:	b11b      	cbz	r3, 8003770 <HAL_DMA_Start_IT+0x60>
      hdma->Instance->CR  |= DMA_IT_HT;
 8003768:	6823      	ldr	r3, [r4, #0]
 800376a:	f043 0308 	orr.w	r3, r3, #8
 800376e:	6023      	str	r3, [r4, #0]
    __HAL_DMA_ENABLE(hdma);
 8003770:	6823      	ldr	r3, [r4, #0]
 8003772:	f043 0301 	orr.w	r3, r3, #1
 8003776:	6023      	str	r3, [r4, #0]
  HAL_StatusTypeDef status = HAL_OK;
 8003778:	2000      	movs	r0, #0
}
 800377a:	bd70      	pop	{r4, r5, r6, pc}
    __HAL_UNLOCK(hdma);	  
 800377c:	f880 5034 	strb.w	r5, [r0, #52]	; 0x34
  __HAL_LOCK(hdma);
 8003780:	2002      	movs	r0, #2
 8003782:	e7fa      	b.n	800377a <HAL_DMA_Start_IT+0x6a>

08003784 <DMA2D_SetConfig>:
  * @param  Width      The width of data to be transferred from source to destination.
  * @param  Height     The height of data to be transferred from source to destination.
  * @retval HAL status
  */
static void DMA2D_SetConfig(DMA2D_HandleTypeDef *hdma2d, uint32_t pdata, uint32_t DstAddress, uint32_t Width, uint32_t Height)
{
 8003784:	b570      	push	{r4, r5, r6, lr}
  uint32_t tmp2;
  uint32_t tmp3;
  uint32_t tmp4;

  /* Configure DMA2D data size */
  MODIFY_REG(hdma2d->Instance->NLR, (DMA2D_NLR_NL|DMA2D_NLR_PL), (Height| (Width << DMA2D_NLR_PL_Pos)));
 8003786:	6804      	ldr	r4, [r0, #0]
 8003788:	9d04      	ldr	r5, [sp, #16]
 800378a:	6c66      	ldr	r6, [r4, #68]	; 0x44
 800378c:	ea45 4303 	orr.w	r3, r5, r3, lsl #16
 8003790:	f006 4640 	and.w	r6, r6, #3221225472	; 0xc0000000
 8003794:	4333      	orrs	r3, r6
 8003796:	6463      	str	r3, [r4, #68]	; 0x44

  /* Configure DMA2D destination address */
  WRITE_REG(hdma2d->Instance->OMAR, DstAddress);

  /* Register to memory DMA2D mode selected */
  if (hdma2d->Init.Mode == DMA2D_R2M)
 8003798:	6843      	ldr	r3, [r0, #4]
  WRITE_REG(hdma2d->Instance->OMAR, DstAddress);
 800379a:	63e2      	str	r2, [r4, #60]	; 0x3c
  if (hdma2d->Init.Mode == DMA2D_R2M)
 800379c:	f5b3 3f40 	cmp.w	r3, #196608	; 0x30000
 80037a0:	d130      	bne.n	8003804 <DMA2D_SetConfig+0x80>
    tmp2 = pdata & DMA2D_OCOLR_RED_1;
    tmp3 = pdata & DMA2D_OCOLR_GREEN_1;
    tmp4 = pdata & DMA2D_OCOLR_BLUE_1;

    /* Prepare the value to be written to the OCOLR register according to the color mode */
    if (hdma2d->Init.ColorMode == DMA2D_OUTPUT_ARGB8888)
 80037a2:	6886      	ldr	r6, [r0, #8]
 80037a4:	b11e      	cbz	r6, 80037ae <DMA2D_SetConfig+0x2a>
    {
      tmp = (tmp3 | tmp2 | tmp1| tmp4);
    }
    else if (hdma2d->Init.ColorMode == DMA2D_OUTPUT_RGB888)
 80037a6:	2e01      	cmp	r6, #1
 80037a8:	d103      	bne.n	80037b2 <DMA2D_SetConfig+0x2e>
    {
      tmp = (tmp3 | tmp2 | tmp4);
 80037aa:	f021 417f 	bic.w	r1, r1, #4278190080	; 0xff000000
      tmp3 = (tmp3 >> 12U);
      tmp4 = (tmp4 >> 4U );
      tmp  = ((tmp3 << 4U) | (tmp2 << 8U) | (tmp1 << 12U) | tmp4);
    }
    /* Write to DMA2D OCOLR register */
    WRITE_REG(hdma2d->Instance->OCOLR, tmp);
 80037ae:	63a1      	str	r1, [r4, #56]	; 0x38
  else /* M2M, M2M_PFC or M2M_Blending DMA2D Mode */
  {
    /* Configure DMA2D source address */
    WRITE_REG(hdma2d->Instance->FGMAR, pdata);
  }
}
 80037b0:	bd70      	pop	{r4, r5, r6, pc}
    else if (hdma2d->Init.ColorMode == DMA2D_OUTPUT_RGB565)
 80037b2:	2e02      	cmp	r6, #2
    tmp2 = pdata & DMA2D_OCOLR_RED_1;
 80037b4:	f401 037f 	and.w	r3, r1, #16711680	; 0xff0000
    tmp3 = pdata & DMA2D_OCOLR_GREEN_1;
 80037b8:	f401 457f 	and.w	r5, r1, #65280	; 0xff00
    tmp4 = pdata & DMA2D_OCOLR_BLUE_1;
 80037bc:	b2c8      	uxtb	r0, r1
    else if (hdma2d->Init.ColorMode == DMA2D_OUTPUT_RGB565)
 80037be:	d107      	bne.n	80037d0 <DMA2D_SetConfig+0x4c>
      tmp2 = (tmp2 >> 19U);
 80037c0:	0cd9      	lsrs	r1, r3, #19
      tmp3 = (tmp3 >> 10U);
 80037c2:	0aad      	lsrs	r5, r5, #10
      tmp  = ((tmp3 << 5U) | (tmp2 << 11U) | tmp4);
 80037c4:	02c9      	lsls	r1, r1, #11
 80037c6:	ea41 1145 	orr.w	r1, r1, r5, lsl #5
 80037ca:	ea41 01d0 	orr.w	r1, r1, r0, lsr #3
 80037ce:	e7ee      	b.n	80037ae <DMA2D_SetConfig+0x2a>
    else if (hdma2d->Init.ColorMode == DMA2D_OUTPUT_ARGB1555)
 80037d0:	2e03      	cmp	r6, #3
    tmp1 = pdata & DMA2D_OCOLR_ALPHA_1;
 80037d2:	f001 427f 	and.w	r2, r1, #4278190080	; 0xff000000
    else if (hdma2d->Init.ColorMode == DMA2D_OUTPUT_ARGB1555)
 80037d6:	d10a      	bne.n	80037ee <DMA2D_SetConfig+0x6a>
      tmp2 = (tmp2 >> 19U);
 80037d8:	0cdb      	lsrs	r3, r3, #19
      tmp3 = (tmp3 >> 11U);
 80037da:	0aed      	lsrs	r5, r5, #11
      tmp  = ((tmp3 << 5U) | (tmp2 << 10U) | (tmp1 << 15U) | tmp4);
 80037dc:	029b      	lsls	r3, r3, #10
 80037de:	ea43 1345 	orr.w	r3, r3, r5, lsl #5
 80037e2:	ea43 03d0 	orr.w	r3, r3, r0, lsr #3
      tmp1 = (tmp1 >> 31U);
 80037e6:	0fd1      	lsrs	r1, r2, #31
      tmp  = ((tmp3 << 5U) | (tmp2 << 10U) | (tmp1 << 15U) | tmp4);
 80037e8:	ea43 31c1 	orr.w	r1, r3, r1, lsl #15
 80037ec:	e7df      	b.n	80037ae <DMA2D_SetConfig+0x2a>
      tmp2 = (tmp2 >> 20U);
 80037ee:	0d19      	lsrs	r1, r3, #20
      tmp3 = (tmp3 >> 12U);
 80037f0:	0b2d      	lsrs	r5, r5, #12
      tmp  = ((tmp3 << 4U) | (tmp2 << 8U) | (tmp1 << 12U) | tmp4);
 80037f2:	0209      	lsls	r1, r1, #8
 80037f4:	ea41 1105 	orr.w	r1, r1, r5, lsl #4
 80037f8:	ea41 1110 	orr.w	r1, r1, r0, lsr #4
      tmp1 = (tmp1 >> 28U);
 80037fc:	0f13      	lsrs	r3, r2, #28
      tmp  = ((tmp3 << 4U) | (tmp2 << 8U) | (tmp1 << 12U) | tmp4);
 80037fe:	ea41 3103 	orr.w	r1, r1, r3, lsl #12
 8003802:	e7d4      	b.n	80037ae <DMA2D_SetConfig+0x2a>
    WRITE_REG(hdma2d->Instance->FGMAR, pdata);
 8003804:	60e1      	str	r1, [r4, #12]
}
 8003806:	e7d3      	b.n	80037b0 <DMA2D_SetConfig+0x2c>

08003808 <HAL_DMA2D_Init>:
{
 8003808:	b510      	push	{r4, lr}
  if(hdma2d == NULL)
 800380a:	4604      	mov	r4, r0
 800380c:	b330      	cbz	r0, 800385c <HAL_DMA2D_Init+0x54>
  if(hdma2d->State == HAL_DMA2D_STATE_RESET)
 800380e:	f890 3039 	ldrb.w	r3, [r0, #57]	; 0x39
 8003812:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8003816:	b91b      	cbnz	r3, 8003820 <HAL_DMA2D_Init+0x18>
    hdma2d->Lock = HAL_UNLOCKED;
 8003818:	f880 2038 	strb.w	r2, [r0, #56]	; 0x38
    HAL_DMA2D_MspInit(hdma2d);
 800381c:	f7fe f8fe 	bl	8001a1c <HAL_DMA2D_MspInit>
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, hdma2d->Init.Mode);
 8003820:	6822      	ldr	r2, [r4, #0]
 8003822:	6861      	ldr	r1, [r4, #4]
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 8003824:	2302      	movs	r3, #2
 8003826:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, hdma2d->Init.Mode);
 800382a:	6813      	ldr	r3, [r2, #0]
 800382c:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 8003830:	430b      	orrs	r3, r1
 8003832:	6013      	str	r3, [r2, #0]
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM, hdma2d->Init.ColorMode);
 8003834:	6b53      	ldr	r3, [r2, #52]	; 0x34
 8003836:	68a1      	ldr	r1, [r4, #8]
 8003838:	f023 0307 	bic.w	r3, r3, #7
 800383c:	430b      	orrs	r3, r1
 800383e:	6353      	str	r3, [r2, #52]	; 0x34
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
 8003840:	6c13      	ldr	r3, [r2, #64]	; 0x40
 8003842:	68e1      	ldr	r1, [r4, #12]
 8003844:	f423 537f 	bic.w	r3, r3, #16320	; 0x3fc0
 8003848:	f023 033f 	bic.w	r3, r3, #63	; 0x3f
 800384c:	430b      	orrs	r3, r1
 800384e:	6413      	str	r3, [r2, #64]	; 0x40
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 8003850:	2000      	movs	r0, #0
  hdma2d->State  = HAL_DMA2D_STATE_READY;
 8003852:	2301      	movs	r3, #1
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 8003854:	63e0      	str	r0, [r4, #60]	; 0x3c
  hdma2d->State  = HAL_DMA2D_STATE_READY;
 8003856:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
}
 800385a:	bd10      	pop	{r4, pc}
     return HAL_ERROR;
 800385c:	2001      	movs	r0, #1
 800385e:	e7fc      	b.n	800385a <HAL_DMA2D_Init+0x52>

08003860 <HAL_DMA2D_Start_IT>:
{
 8003860:	b573      	push	{r0, r1, r4, r5, r6, lr}
  __HAL_LOCK(hdma2d);
 8003862:	f890 4038 	ldrb.w	r4, [r0, #56]	; 0x38
 8003866:	2c01      	cmp	r4, #1
{
 8003868:	4605      	mov	r5, r0
 800386a:	f04f 0402 	mov.w	r4, #2
  __HAL_LOCK(hdma2d);
 800386e:	d013      	beq.n	8003898 <HAL_DMA2D_Start_IT+0x38>
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 8003870:	f880 4039 	strb.w	r4, [r0, #57]	; 0x39
  __HAL_LOCK(hdma2d);
 8003874:	2601      	movs	r6, #1
  DMA2D_SetConfig(hdma2d, pdata, DstAddress, Width, Height);
 8003876:	9c06      	ldr	r4, [sp, #24]
  __HAL_LOCK(hdma2d);
 8003878:	f880 6038 	strb.w	r6, [r0, #56]	; 0x38
  DMA2D_SetConfig(hdma2d, pdata, DstAddress, Width, Height);
 800387c:	9400      	str	r4, [sp, #0]
 800387e:	f7ff ff81 	bl	8003784 <DMA2D_SetConfig>
  __HAL_DMA2D_ENABLE_IT(hdma2d, DMA2D_IT_TC|DMA2D_IT_TE|DMA2D_IT_CE);
 8003882:	682b      	ldr	r3, [r5, #0]
 8003884:	681a      	ldr	r2, [r3, #0]
 8003886:	f442 520c 	orr.w	r2, r2, #8960	; 0x2300
 800388a:	601a      	str	r2, [r3, #0]
  __HAL_DMA2D_ENABLE(hdma2d);
 800388c:	681a      	ldr	r2, [r3, #0]
 800388e:	4332      	orrs	r2, r6
 8003890:	601a      	str	r2, [r3, #0]
  return HAL_OK;
 8003892:	2000      	movs	r0, #0
}
 8003894:	b002      	add	sp, #8
 8003896:	bd70      	pop	{r4, r5, r6, pc}
  __HAL_LOCK(hdma2d);
 8003898:	4620      	mov	r0, r4
 800389a:	e7fb      	b.n	8003894 <HAL_DMA2D_Start_IT+0x34>

0800389c <HAL_DMA2D_BlendingStart_IT>:
{
 800389c:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800389e:	4615      	mov	r5, r2
 80038a0:	461a      	mov	r2, r3
  __HAL_LOCK(hdma2d);
 80038a2:	f890 3038 	ldrb.w	r3, [r0, #56]	; 0x38
 80038a6:	2b01      	cmp	r3, #1
{
 80038a8:	4604      	mov	r4, r0
 80038aa:	f04f 0302 	mov.w	r3, #2
  __HAL_LOCK(hdma2d);
 80038ae:	d016      	beq.n	80038de <HAL_DMA2D_BlendingStart_IT+0x42>
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 80038b0:	f880 3039 	strb.w	r3, [r0, #57]	; 0x39
  WRITE_REG(hdma2d->Instance->BGMAR, SrcAddress2);
 80038b4:	6803      	ldr	r3, [r0, #0]
  __HAL_LOCK(hdma2d);
 80038b6:	2601      	movs	r6, #1
 80038b8:	f880 6038 	strb.w	r6, [r0, #56]	; 0x38
  WRITE_REG(hdma2d->Instance->BGMAR, SrcAddress2);
 80038bc:	615d      	str	r5, [r3, #20]
  DMA2D_SetConfig(hdma2d, SrcAddress1, DstAddress, Width, Height);
 80038be:	9b07      	ldr	r3, [sp, #28]
 80038c0:	9300      	str	r3, [sp, #0]
 80038c2:	9b06      	ldr	r3, [sp, #24]
 80038c4:	f7ff ff5e 	bl	8003784 <DMA2D_SetConfig>
  __HAL_DMA2D_ENABLE_IT(hdma2d, DMA2D_IT_TC|DMA2D_IT_TE|DMA2D_IT_CE);
 80038c8:	6823      	ldr	r3, [r4, #0]
 80038ca:	681a      	ldr	r2, [r3, #0]
 80038cc:	f442 520c 	orr.w	r2, r2, #8960	; 0x2300
 80038d0:	601a      	str	r2, [r3, #0]
  __HAL_DMA2D_ENABLE(hdma2d);
 80038d2:	681a      	ldr	r2, [r3, #0]
 80038d4:	4332      	orrs	r2, r6
 80038d6:	601a      	str	r2, [r3, #0]
  return HAL_OK;
 80038d8:	2000      	movs	r0, #0
}
 80038da:	b002      	add	sp, #8
 80038dc:	bd70      	pop	{r4, r5, r6, pc}
  __HAL_LOCK(hdma2d);
 80038de:	4618      	mov	r0, r3
 80038e0:	e7fb      	b.n	80038da <HAL_DMA2D_BlendingStart_IT+0x3e>

080038e2 <HAL_DMA2D_Abort>:
   MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_ABORT|DMA2D_CR_START, DMA2D_CR_ABORT);
 80038e2:	6802      	ldr	r2, [r0, #0]
{
 80038e4:	b538      	push	{r3, r4, r5, lr}
   MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_ABORT|DMA2D_CR_START, DMA2D_CR_ABORT);
 80038e6:	6813      	ldr	r3, [r2, #0]
 80038e8:	f023 0305 	bic.w	r3, r3, #5
 80038ec:	f043 0304 	orr.w	r3, r3, #4
 80038f0:	6013      	str	r3, [r2, #0]
{
 80038f2:	4604      	mov	r4, r0
  tickstart = HAL_GetTick();
 80038f4:	f7ff fde6 	bl	80034c4 <HAL_GetTick>
 80038f8:	4605      	mov	r5, r0
  while((hdma2d->Instance->CR & DMA2D_CR_START) != 0U)
 80038fa:	6823      	ldr	r3, [r4, #0]
 80038fc:	6818      	ldr	r0, [r3, #0]
 80038fe:	f010 0001 	ands.w	r0, r0, #1
 8003902:	d109      	bne.n	8003918 <HAL_DMA2D_Abort+0x36>
  __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TC|DMA2D_IT_TE|DMA2D_IT_CE);
 8003904:	681a      	ldr	r2, [r3, #0]
 8003906:	f422 520c 	bic.w	r2, r2, #8960	; 0x2300
 800390a:	601a      	str	r2, [r3, #0]
  hdma2d->State = HAL_DMA2D_STATE_READY;
 800390c:	2301      	movs	r3, #1
 800390e:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
  __HAL_UNLOCK(hdma2d);
 8003912:	f884 0038 	strb.w	r0, [r4, #56]	; 0x38
  return HAL_OK;
 8003916:	e00f      	b.n	8003938 <HAL_DMA2D_Abort+0x56>
    if((HAL_GetTick() - tickstart ) > DMA2D_TIMEOUT_ABORT)
 8003918:	f7ff fdd4 	bl	80034c4 <HAL_GetTick>
 800391c:	1b40      	subs	r0, r0, r5
 800391e:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
 8003922:	d9ea      	bls.n	80038fa <HAL_DMA2D_Abort+0x18>
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_TIMEOUT;
 8003924:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8003926:	f043 0320 	orr.w	r3, r3, #32
 800392a:	63e3      	str	r3, [r4, #60]	; 0x3c
      hdma2d->State = HAL_DMA2D_STATE_TIMEOUT;
 800392c:	2003      	movs	r0, #3
      __HAL_UNLOCK(hdma2d);
 800392e:	2300      	movs	r3, #0
      hdma2d->State = HAL_DMA2D_STATE_TIMEOUT;
 8003930:	f884 0039 	strb.w	r0, [r4, #57]	; 0x39
      __HAL_UNLOCK(hdma2d);
 8003934:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38
}
 8003938:	bd38      	pop	{r3, r4, r5, pc}

0800393a <HAL_DMA2D_CLUTLoading_Abort>:
{
 800393a:	b570      	push	{r4, r5, r6, lr}
  const __IO uint32_t * reg =  &(hdma2d->Instance->BGPFCCR); /* by default, point at background register */
 800393c:	6805      	ldr	r5, [r0, #0]
  SET_BIT(hdma2d->Instance->CR, DMA2D_CR_ABORT);
 800393e:	682a      	ldr	r2, [r5, #0]
 8003940:	f042 0204 	orr.w	r2, r2, #4
 8003944:	602a      	str	r2, [r5, #0]
  if(LayerIdx == DMA2D_FOREGROUND_LAYER)
 8003946:	2901      	cmp	r1, #1
{
 8003948:	4604      	mov	r4, r0
  const __IO uint32_t * reg =  &(hdma2d->Instance->BGPFCCR); /* by default, point at background register */
 800394a:	bf14      	ite	ne
 800394c:	3524      	addne	r5, #36	; 0x24
    reg  = &(hdma2d->Instance->FGPFCCR);
 800394e:	351c      	addeq	r5, #28
  tickstart = HAL_GetTick();
 8003950:	f7ff fdb8 	bl	80034c4 <HAL_GetTick>
 8003954:	4606      	mov	r6, r0
  while((*reg & DMA2D_BGPFCCR_START) != 0U)
 8003956:	6828      	ldr	r0, [r5, #0]
 8003958:	f010 0020 	ands.w	r0, r0, #32
 800395c:	d10a      	bne.n	8003974 <HAL_DMA2D_CLUTLoading_Abort+0x3a>
  __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CTC | DMA2D_IT_TE | DMA2D_IT_CE |DMA2D_IT_CAE);
 800395e:	6822      	ldr	r2, [r4, #0]
 8003960:	6813      	ldr	r3, [r2, #0]
 8003962:	f423 5364 	bic.w	r3, r3, #14592	; 0x3900
 8003966:	6013      	str	r3, [r2, #0]
  hdma2d->State = HAL_DMA2D_STATE_READY;
 8003968:	2301      	movs	r3, #1
 800396a:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
  __HAL_UNLOCK(hdma2d);
 800396e:	f884 0038 	strb.w	r0, [r4, #56]	; 0x38
  return HAL_OK;
 8003972:	e00f      	b.n	8003994 <HAL_DMA2D_CLUTLoading_Abort+0x5a>
    if((HAL_GetTick() - tickstart ) > DMA2D_TIMEOUT_ABORT)
 8003974:	f7ff fda6 	bl	80034c4 <HAL_GetTick>
 8003978:	1b80      	subs	r0, r0, r6
 800397a:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
 800397e:	d9ea      	bls.n	8003956 <HAL_DMA2D_CLUTLoading_Abort+0x1c>
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_TIMEOUT;
 8003980:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8003982:	f043 0320 	orr.w	r3, r3, #32
 8003986:	63e3      	str	r3, [r4, #60]	; 0x3c
      hdma2d->State = HAL_DMA2D_STATE_TIMEOUT;
 8003988:	2003      	movs	r0, #3
      __HAL_UNLOCK(hdma2d);
 800398a:	2300      	movs	r3, #0
      hdma2d->State = HAL_DMA2D_STATE_TIMEOUT;
 800398c:	f884 0039 	strb.w	r0, [r4, #57]	; 0x39
      __HAL_UNLOCK(hdma2d);
 8003990:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38
}
 8003994:	bd70      	pop	{r4, r5, r6, pc}
	...

08003998 <HAL_DMA2D_DeInit>:
{
 8003998:	b538      	push	{r3, r4, r5, lr}
  if(hdma2d == NULL)
 800399a:	4605      	mov	r5, r0
 800399c:	b908      	cbnz	r0, 80039a2 <HAL_DMA2D_DeInit+0xa>
     return HAL_ERROR;
 800399e:	2001      	movs	r0, #1
}
 80039a0:	bd38      	pop	{r3, r4, r5, pc}
  if (__HAL_RCC_DMA2D_IS_CLK_ENABLED())
 80039a2:	4b16      	ldr	r3, [pc, #88]	; (80039fc <HAL_DMA2D_DeInit+0x64>)
 80039a4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80039a6:	0219      	lsls	r1, r3, #8
 80039a8:	d413      	bmi.n	80039d2 <HAL_DMA2D_DeInit+0x3a>
  hdma2d->Instance->CR       =    0U;
 80039aa:	682b      	ldr	r3, [r5, #0]
 80039ac:	2400      	movs	r4, #0
  hdma2d->Instance->IFCR     = 0x3FU;
 80039ae:	223f      	movs	r2, #63	; 0x3f
  hdma2d->Instance->CR       =    0U;
 80039b0:	601c      	str	r4, [r3, #0]
  HAL_DMA2D_MspDeInit(hdma2d);
 80039b2:	4628      	mov	r0, r5
  hdma2d->Instance->IFCR     = 0x3FU;
 80039b4:	609a      	str	r2, [r3, #8]
  hdma2d->Instance->FGOR     =    0U;
 80039b6:	611c      	str	r4, [r3, #16]
  hdma2d->Instance->BGOR     =    0U;
 80039b8:	619c      	str	r4, [r3, #24]
  hdma2d->Instance->FGPFCCR  =    0U;
 80039ba:	61dc      	str	r4, [r3, #28]
  hdma2d->Instance->BGPFCCR  =    0U;
 80039bc:	625c      	str	r4, [r3, #36]	; 0x24
  hdma2d->Instance->OPFCCR   =    0U;
 80039be:	635c      	str	r4, [r3, #52]	; 0x34
  HAL_DMA2D_MspDeInit(hdma2d);
 80039c0:	f7fe f84e 	bl	8001a60 <HAL_DMA2D_MspDeInit>
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 80039c4:	63ec      	str	r4, [r5, #60]	; 0x3c
  __HAL_UNLOCK(hdma2d);
 80039c6:	f885 4038 	strb.w	r4, [r5, #56]	; 0x38
  hdma2d->State  = HAL_DMA2D_STATE_RESET;
 80039ca:	f885 4039 	strb.w	r4, [r5, #57]	; 0x39
  return HAL_OK;
 80039ce:	4620      	mov	r0, r4
 80039d0:	e7e6      	b.n	80039a0 <HAL_DMA2D_DeInit+0x8>
 80039d2:	6803      	ldr	r3, [r0, #0]
    if ((hdma2d->Instance->CR & DMA2D_CR_START) == DMA2D_CR_START)
 80039d4:	6819      	ldr	r1, [r3, #0]
 80039d6:	f011 0101 	ands.w	r1, r1, #1
 80039da:	d004      	beq.n	80039e6 <HAL_DMA2D_DeInit+0x4e>
      if (HAL_DMA2D_Abort(hdma2d) != HAL_OK)
 80039dc:	f7ff ff81 	bl	80038e2 <HAL_DMA2D_Abort>
          if (HAL_DMA2D_CLUTLoading_Abort(hdma2d, 1U) != HAL_OK)
 80039e0:	2800      	cmp	r0, #0
 80039e2:	d0e2      	beq.n	80039aa <HAL_DMA2D_DeInit+0x12>
 80039e4:	e7db      	b.n	800399e <HAL_DMA2D_DeInit+0x6>
      if ((hdma2d->Instance->BGPFCCR & DMA2D_BGPFCCR_START) == DMA2D_BGPFCCR_START)
 80039e6:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 80039e8:	0692      	lsls	r2, r2, #26
 80039ea:	d502      	bpl.n	80039f2 <HAL_DMA2D_DeInit+0x5a>
          if (HAL_DMA2D_CLUTLoading_Abort(hdma2d, 1U) != HAL_OK)
 80039ec:	f7ff ffa5 	bl	800393a <HAL_DMA2D_CLUTLoading_Abort>
 80039f0:	e7f6      	b.n	80039e0 <HAL_DMA2D_DeInit+0x48>
        if ((hdma2d->Instance->FGPFCCR & DMA2D_FGPFCCR_START) == DMA2D_FGPFCCR_START)
 80039f2:	69db      	ldr	r3, [r3, #28]
 80039f4:	069b      	lsls	r3, r3, #26
 80039f6:	d5d8      	bpl.n	80039aa <HAL_DMA2D_DeInit+0x12>
          if (HAL_DMA2D_CLUTLoading_Abort(hdma2d, 1U) != HAL_OK)
 80039f8:	2101      	movs	r1, #1
 80039fa:	e7f7      	b.n	80039ec <HAL_DMA2D_DeInit+0x54>
 80039fc:	40023800 	.word	0x40023800

08003a00 <HAL_DMA2D_LineEventCallback>:
 8003a00:	4770      	bx	lr

08003a02 <HAL_DMA2D_CLUTLoadingCpltCallback>:
 8003a02:	4770      	bx	lr

08003a04 <HAL_DMA2D_IRQHandler>:
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
 8003a04:	6803      	ldr	r3, [r0, #0]
{
 8003a06:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
 8003a08:	685e      	ldr	r6, [r3, #4]
  uint32_t crflags = READ_REG(hdma2d->Instance->CR);
 8003a0a:	681d      	ldr	r5, [r3, #0]
  if ((isrflags & DMA2D_FLAG_TE) != 0U)
 8003a0c:	07f2      	lsls	r2, r6, #31
{
 8003a0e:	4604      	mov	r4, r0
  if ((isrflags & DMA2D_FLAG_TE) != 0U)
 8003a10:	d514      	bpl.n	8003a3c <HAL_DMA2D_IRQHandler+0x38>
    if ((crflags & DMA2D_IT_TE) != 0U)
 8003a12:	05e9      	lsls	r1, r5, #23
 8003a14:	d512      	bpl.n	8003a3c <HAL_DMA2D_IRQHandler+0x38>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TE);
 8003a16:	681a      	ldr	r2, [r3, #0]
 8003a18:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 8003a1c:	601a      	str	r2, [r3, #0]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_TE;
 8003a1e:	6bc2      	ldr	r2, [r0, #60]	; 0x3c
 8003a20:	f042 0201 	orr.w	r2, r2, #1
 8003a24:	63c2      	str	r2, [r0, #60]	; 0x3c
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TE);
 8003a26:	2201      	movs	r2, #1
 8003a28:	609a      	str	r2, [r3, #8]
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 8003a2a:	2304      	movs	r3, #4
 8003a2c:	f880 3039 	strb.w	r3, [r0, #57]	; 0x39
      __HAL_UNLOCK(hdma2d);
 8003a30:	2300      	movs	r3, #0
 8003a32:	f880 3038 	strb.w	r3, [r0, #56]	; 0x38
      if(hdma2d->XferErrorCallback != NULL)
 8003a36:	6943      	ldr	r3, [r0, #20]
 8003a38:	b103      	cbz	r3, 8003a3c <HAL_DMA2D_IRQHandler+0x38>
        hdma2d->XferErrorCallback(hdma2d);
 8003a3a:	4798      	blx	r3
  if ((isrflags & DMA2D_FLAG_CE) != 0U)
 8003a3c:	06b2      	lsls	r2, r6, #26
 8003a3e:	d516      	bpl.n	8003a6e <HAL_DMA2D_IRQHandler+0x6a>
    if ((crflags & DMA2D_IT_CE) != 0U)
 8003a40:	04ab      	lsls	r3, r5, #18
 8003a42:	d514      	bpl.n	8003a6e <HAL_DMA2D_IRQHandler+0x6a>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CE);
 8003a44:	6823      	ldr	r3, [r4, #0]
 8003a46:	681a      	ldr	r2, [r3, #0]
 8003a48:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 8003a4c:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CE);
 8003a4e:	2220      	movs	r2, #32
 8003a50:	609a      	str	r2, [r3, #8]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CE;
 8003a52:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8003a54:	f043 0302 	orr.w	r3, r3, #2
 8003a58:	63e3      	str	r3, [r4, #60]	; 0x3c
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 8003a5a:	2304      	movs	r3, #4
 8003a5c:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
      __HAL_UNLOCK(hdma2d);
 8003a60:	2300      	movs	r3, #0
 8003a62:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38
      if(hdma2d->XferErrorCallback != NULL)
 8003a66:	6963      	ldr	r3, [r4, #20]
 8003a68:	b10b      	cbz	r3, 8003a6e <HAL_DMA2D_IRQHandler+0x6a>
        hdma2d->XferErrorCallback(hdma2d);
 8003a6a:	4620      	mov	r0, r4
 8003a6c:	4798      	blx	r3
  if ((isrflags & DMA2D_FLAG_CAE) != 0U)
 8003a6e:	0730      	lsls	r0, r6, #28
 8003a70:	d516      	bpl.n	8003aa0 <HAL_DMA2D_IRQHandler+0x9c>
    if ((crflags & DMA2D_IT_CAE) != 0U)
 8003a72:	0529      	lsls	r1, r5, #20
 8003a74:	d514      	bpl.n	8003aa0 <HAL_DMA2D_IRQHandler+0x9c>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CAE);
 8003a76:	6823      	ldr	r3, [r4, #0]
 8003a78:	681a      	ldr	r2, [r3, #0]
 8003a7a:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 8003a7e:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CAE);
 8003a80:	2208      	movs	r2, #8
 8003a82:	609a      	str	r2, [r3, #8]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CAE;
 8003a84:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8003a86:	f043 0304 	orr.w	r3, r3, #4
 8003a8a:	63e3      	str	r3, [r4, #60]	; 0x3c
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 8003a8c:	2304      	movs	r3, #4
 8003a8e:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
      __HAL_UNLOCK(hdma2d);
 8003a92:	2300      	movs	r3, #0
 8003a94:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38
      if(hdma2d->XferErrorCallback != NULL)
 8003a98:	6963      	ldr	r3, [r4, #20]
 8003a9a:	b10b      	cbz	r3, 8003aa0 <HAL_DMA2D_IRQHandler+0x9c>
        hdma2d->XferErrorCallback(hdma2d);
 8003a9c:	4620      	mov	r0, r4
 8003a9e:	4798      	blx	r3
  if ((isrflags & DMA2D_FLAG_TW) != 0U)
 8003aa0:	0772      	lsls	r2, r6, #29
 8003aa2:	d50b      	bpl.n	8003abc <HAL_DMA2D_IRQHandler+0xb8>
    if ((crflags & DMA2D_IT_TW) != 0U)
 8003aa4:	056b      	lsls	r3, r5, #21
 8003aa6:	d509      	bpl.n	8003abc <HAL_DMA2D_IRQHandler+0xb8>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TW);
 8003aa8:	6823      	ldr	r3, [r4, #0]
 8003aaa:	681a      	ldr	r2, [r3, #0]
 8003aac:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8003ab0:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TW);
 8003ab2:	2204      	movs	r2, #4
 8003ab4:	609a      	str	r2, [r3, #8]
      HAL_DMA2D_LineEventCallback(hdma2d);
 8003ab6:	4620      	mov	r0, r4
 8003ab8:	f7ff ffa2 	bl	8003a00 <HAL_DMA2D_LineEventCallback>
  if ((isrflags & DMA2D_FLAG_TC) != 0U)
 8003abc:	07b0      	lsls	r0, r6, #30
 8003abe:	d514      	bpl.n	8003aea <HAL_DMA2D_IRQHandler+0xe6>
    if ((crflags & DMA2D_IT_TC) != 0U)
 8003ac0:	05a9      	lsls	r1, r5, #22
 8003ac2:	d512      	bpl.n	8003aea <HAL_DMA2D_IRQHandler+0xe6>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TC);
 8003ac4:	6823      	ldr	r3, [r4, #0]
 8003ac6:	681a      	ldr	r2, [r3, #0]
 8003ac8:	f422 7200 	bic.w	r2, r2, #512	; 0x200
 8003acc:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TC);
 8003ace:	2202      	movs	r2, #2
 8003ad0:	609a      	str	r2, [r3, #8]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
 8003ad2:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8003ad4:	63e3      	str	r3, [r4, #60]	; 0x3c
      hdma2d->State = HAL_DMA2D_STATE_READY;
 8003ad6:	2301      	movs	r3, #1
 8003ad8:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
      __HAL_UNLOCK(hdma2d);
 8003adc:	2300      	movs	r3, #0
 8003ade:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38
      if(hdma2d->XferCpltCallback != NULL)
 8003ae2:	6923      	ldr	r3, [r4, #16]
 8003ae4:	b10b      	cbz	r3, 8003aea <HAL_DMA2D_IRQHandler+0xe6>
        hdma2d->XferCpltCallback(hdma2d);
 8003ae6:	4620      	mov	r0, r4
 8003ae8:	4798      	blx	r3
  if ((isrflags & DMA2D_FLAG_CTC) != 0U)
 8003aea:	06f2      	lsls	r2, r6, #27
 8003aec:	d513      	bpl.n	8003b16 <HAL_DMA2D_IRQHandler+0x112>
    if ((crflags & DMA2D_IT_CTC) != 0U)
 8003aee:	04eb      	lsls	r3, r5, #19
 8003af0:	d511      	bpl.n	8003b16 <HAL_DMA2D_IRQHandler+0x112>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CTC);
 8003af2:	6823      	ldr	r3, [r4, #0]
 8003af4:	681a      	ldr	r2, [r3, #0]
 8003af6:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
 8003afa:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CTC);
 8003afc:	2210      	movs	r2, #16
 8003afe:	609a      	str	r2, [r3, #8]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
 8003b00:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8003b02:	63e3      	str	r3, [r4, #60]	; 0x3c
      hdma2d->State = HAL_DMA2D_STATE_READY;
 8003b04:	2301      	movs	r3, #1
 8003b06:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
      __HAL_UNLOCK(hdma2d);
 8003b0a:	2300      	movs	r3, #0
 8003b0c:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38
      HAL_DMA2D_CLUTLoadingCpltCallback(hdma2d);
 8003b10:	4620      	mov	r0, r4
 8003b12:	f7ff ff76 	bl	8003a02 <HAL_DMA2D_CLUTLoadingCpltCallback>
}
 8003b16:	bd70      	pop	{r4, r5, r6, pc}

08003b18 <HAL_DMA2D_ConfigLayer>:
  __HAL_LOCK(hdma2d);
 8003b18:	f890 3038 	ldrb.w	r3, [r0, #56]	; 0x38
 8003b1c:	2b01      	cmp	r3, #1
{
 8003b1e:	b5f0      	push	{r4, r5, r6, r7, lr}
 8003b20:	f04f 0302 	mov.w	r3, #2
  __HAL_LOCK(hdma2d);
 8003b24:	d036      	beq.n	8003b94 <HAL_DMA2D_ConfigLayer+0x7c>
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos);
 8003b26:	010e      	lsls	r6, r1, #4
  __HAL_LOCK(hdma2d);
 8003b28:	2201      	movs	r2, #1
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 8003b2a:	f880 3039 	strb.w	r3, [r0, #57]	; 0x39
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos);
 8003b2e:	1983      	adds	r3, r0, r6
  __HAL_LOCK(hdma2d);
 8003b30:	f880 2038 	strb.w	r2, [r0, #56]	; 0x38
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos);
 8003b34:	e9d3 5207 	ldrd	r5, r2, [r3, #28]
 8003b38:	ea45 4202 	orr.w	r2, r5, r2, lsl #16
  if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 8003b3c:	3d09      	subs	r5, #9
 8003b3e:	2d01      	cmp	r5, #1
 8003b40:	6a5c      	ldr	r4, [r3, #36]	; 0x24
 8003b42:	4f19      	ldr	r7, [pc, #100]	; (8003ba8 <HAL_DMA2D_ConfigLayer+0x90>)
 8003b44:	6803      	ldr	r3, [r0, #0]
 8003b46:	d80f      	bhi.n	8003b68 <HAL_DMA2D_ConfigLayer+0x50>
    regValue |= (pLayerCfg->InputAlpha & DMA2D_BGPFCCR_ALPHA);
 8003b48:	f004 4c7f 	and.w	ip, r4, #4278190080	; 0xff000000
 8003b4c:	ea4c 0202 	orr.w	r2, ip, r2
  if(LayerIdx == DMA2D_BACKGROUND_LAYER)
 8003b50:	b969      	cbnz	r1, 8003b6e <HAL_DMA2D_ConfigLayer+0x56>
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
 8003b52:	6a59      	ldr	r1, [r3, #36]	; 0x24
 8003b54:	4039      	ands	r1, r7
 8003b56:	430a      	orrs	r2, r1
 8003b58:	625a      	str	r2, [r3, #36]	; 0x24
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
 8003b5a:	6982      	ldr	r2, [r0, #24]
 8003b5c:	619a      	str	r2, [r3, #24]
      WRITE_REG(hdma2d->Instance->BGCOLR, pLayerCfg->InputAlpha & (DMA2D_BGCOLR_BLUE|DMA2D_BGCOLR_GREEN|DMA2D_BGCOLR_RED));
 8003b5e:	6a42      	ldr	r2, [r0, #36]	; 0x24
 8003b60:	f022 427f 	bic.w	r2, r2, #4278190080	; 0xff000000
 8003b64:	629a      	str	r2, [r3, #40]	; 0x28
 8003b66:	e00f      	b.n	8003b88 <HAL_DMA2D_ConfigLayer+0x70>
    regValue |=  (pLayerCfg->InputAlpha << DMA2D_BGPFCCR_ALPHA_Pos);
 8003b68:	ea42 6204 	orr.w	r2, r2, r4, lsl #24
  if(LayerIdx == DMA2D_BACKGROUND_LAYER)
 8003b6c:	b1a1      	cbz	r1, 8003b98 <HAL_DMA2D_ConfigLayer+0x80>
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
 8003b6e:	69d9      	ldr	r1, [r3, #28]
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
 8003b70:	4406      	add	r6, r0
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
 8003b72:	4039      	ands	r1, r7
 8003b74:	430a      	orrs	r2, r1
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 8003b76:	2d01      	cmp	r5, #1
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
 8003b78:	61da      	str	r2, [r3, #28]
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE|DMA2D_FGCOLR_GREEN|DMA2D_FGCOLR_RED));
 8003b7a:	bf98      	it	ls
 8003b7c:	f024 447f 	bicls.w	r4, r4, #4278190080	; 0xff000000
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
 8003b80:	69b2      	ldr	r2, [r6, #24]
 8003b82:	611a      	str	r2, [r3, #16]
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE|DMA2D_FGCOLR_GREEN|DMA2D_FGCOLR_RED));
 8003b84:	bf98      	it	ls
 8003b86:	621c      	strls	r4, [r3, #32]
  hdma2d->State = HAL_DMA2D_STATE_READY;
 8003b88:	2301      	movs	r3, #1
 8003b8a:	f880 3039 	strb.w	r3, [r0, #57]	; 0x39
  __HAL_UNLOCK(hdma2d);
 8003b8e:	2300      	movs	r3, #0
 8003b90:	f880 3038 	strb.w	r3, [r0, #56]	; 0x38
  __HAL_LOCK(hdma2d);
 8003b94:	4618      	mov	r0, r3
}
 8003b96:	bdf0      	pop	{r4, r5, r6, r7, pc}
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
 8003b98:	6a59      	ldr	r1, [r3, #36]	; 0x24
 8003b9a:	4039      	ands	r1, r7
 8003b9c:	430a      	orrs	r2, r1
 8003b9e:	625a      	str	r2, [r3, #36]	; 0x24
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
 8003ba0:	6982      	ldr	r2, [r0, #24]
 8003ba2:	619a      	str	r2, [r3, #24]
 8003ba4:	e7f0      	b.n	8003b88 <HAL_DMA2D_ConfigLayer+0x70>
 8003ba6:	bf00      	nop
 8003ba8:	00fcfff0 	.word	0x00fcfff0

08003bac <HAL_GPIO_Init>:
  * @param  GPIO_Init pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
 8003bac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003bb0:	b085      	sub	sp, #20
  for(position = 0U; position < GPIO_NUMBER; position++)
  {
    /* Get the IO position */
    ioposition = 0x01U << position;
    /* Get the current IO position */
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 8003bb2:	680b      	ldr	r3, [r1, #0]
      /*--------------------- EXTI Mode Configuration ------------------------*/
      /* Configure the External Interrupt or event for the current IO */
      if((GPIO_Init->Mode & EXTI_MODE) == EXTI_MODE)
      {
        /* Enable SYSCFG Clock */
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8003bb4:	f8df 81c4 	ldr.w	r8, [pc, #452]	; 8003d7c <HAL_GPIO_Init+0x1d0>
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
        SYSCFG->EXTICR[position >> 2U] = temp;

        /* Clear EXTI line configuration */
        temp = EXTI->IMR;
 8003bb8:	4a6e      	ldr	r2, [pc, #440]	; (8003d74 <HAL_GPIO_Init+0x1c8>)
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 8003bba:	f8df 91c4 	ldr.w	r9, [pc, #452]	; 8003d80 <HAL_GPIO_Init+0x1d4>
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 8003bbe:	9301      	str	r3, [sp, #4]
  for(position = 0U; position < GPIO_NUMBER; position++)
 8003bc0:	2300      	movs	r3, #0
    ioposition = 0x01U << position;
 8003bc2:	2401      	movs	r4, #1
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 8003bc4:	9d01      	ldr	r5, [sp, #4]
    ioposition = 0x01U << position;
 8003bc6:	409c      	lsls	r4, r3
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 8003bc8:	4025      	ands	r5, r4
    if(iocurrent == ioposition)
 8003bca:	42ac      	cmp	r4, r5
 8003bcc:	f040 80b8 	bne.w	8003d40 <HAL_GPIO_Init+0x194>
      if((GPIO_Init->Mode == GPIO_MODE_OUTPUT_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_PP) ||
 8003bd0:	684c      	ldr	r4, [r1, #4]
 8003bd2:	f024 0c10 	bic.w	ip, r4, #16
 8003bd6:	ea4f 0e43 	mov.w	lr, r3, lsl #1
 8003bda:	2603      	movs	r6, #3
 8003bdc:	f10c 37ff 	add.w	r7, ip, #4294967295
 8003be0:	fa06 f60e 	lsl.w	r6, r6, lr
 8003be4:	2f01      	cmp	r7, #1
 8003be6:	ea6f 0606 	mvn.w	r6, r6
 8003bea:	d811      	bhi.n	8003c10 <HAL_GPIO_Init+0x64>
        temp = GPIOx->OSPEEDR; 
 8003bec:	6887      	ldr	r7, [r0, #8]
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 8003bee:	ea07 0a06 	and.w	sl, r7, r6
        temp |= (GPIO_Init->Speed << (position * 2U));
 8003bf2:	68cf      	ldr	r7, [r1, #12]
 8003bf4:	fa07 f70e 	lsl.w	r7, r7, lr
 8003bf8:	ea47 070a 	orr.w	r7, r7, sl
        GPIOx->OSPEEDR = temp;
 8003bfc:	6087      	str	r7, [r0, #8]
        temp = GPIOx->OTYPER;
 8003bfe:	6847      	ldr	r7, [r0, #4]
        temp &= ~(GPIO_OTYPER_OT_0 << position) ;
 8003c00:	ea27 0a05 	bic.w	sl, r7, r5
        temp |= (((GPIO_Init->Mode & GPIO_OUTPUT_TYPE) >> 4U) << position);
 8003c04:	f3c4 1700 	ubfx	r7, r4, #4, #1
 8003c08:	409f      	lsls	r7, r3
 8003c0a:	ea47 070a 	orr.w	r7, r7, sl
        GPIOx->OTYPER = temp;
 8003c0e:	6047      	str	r7, [r0, #4]
      temp = GPIOx->PUPDR;
 8003c10:	68c7      	ldr	r7, [r0, #12]
      temp &= ~(GPIO_PUPDR_PUPDR0 << (position * 2U));
 8003c12:	ea07 0a06 	and.w	sl, r7, r6
      temp |= ((GPIO_Init->Pull) << (position * 2U));
 8003c16:	688f      	ldr	r7, [r1, #8]
 8003c18:	fa07 f70e 	lsl.w	r7, r7, lr
 8003c1c:	ea47 070a 	orr.w	r7, r7, sl
      if((GPIO_Init->Mode == GPIO_MODE_AF_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_OD))
 8003c20:	f1bc 0f02 	cmp.w	ip, #2
      GPIOx->PUPDR = temp;
 8003c24:	60c7      	str	r7, [r0, #12]
      if((GPIO_Init->Mode == GPIO_MODE_AF_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_OD))
 8003c26:	d116      	bne.n	8003c56 <HAL_GPIO_Init+0xaa>
        temp = GPIOx->AFR[position >> 3U];
 8003c28:	ea4f 0ad3 	mov.w	sl, r3, lsr #3
 8003c2c:	eb00 0a8a 	add.w	sl, r0, sl, lsl #2
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 8003c30:	f003 0b07 	and.w	fp, r3, #7
        temp = GPIOx->AFR[position >> 3U];
 8003c34:	f8da 7020 	ldr.w	r7, [sl, #32]
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 8003c38:	ea4f 0b8b 	mov.w	fp, fp, lsl #2
 8003c3c:	f04f 0c0f 	mov.w	ip, #15
 8003c40:	fa0c fc0b 	lsl.w	ip, ip, fp
 8003c44:	ea27 0c0c 	bic.w	ip, r7, ip
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 8003c48:	690f      	ldr	r7, [r1, #16]
 8003c4a:	fa07 f70b 	lsl.w	r7, r7, fp
 8003c4e:	ea47 070c 	orr.w	r7, r7, ip
        GPIOx->AFR[position >> 3U] = temp;
 8003c52:	f8ca 7020 	str.w	r7, [sl, #32]
      temp = GPIOx->MODER;
 8003c56:	6807      	ldr	r7, [r0, #0]
      temp &= ~(GPIO_MODER_MODER0 << (position * 2U));
 8003c58:	403e      	ands	r6, r7
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 8003c5a:	f004 0703 	and.w	r7, r4, #3
 8003c5e:	fa07 fe0e 	lsl.w	lr, r7, lr
 8003c62:	ea4e 0606 	orr.w	r6, lr, r6
      GPIOx->MODER = temp;
 8003c66:	6006      	str	r6, [r0, #0]
      if((GPIO_Init->Mode & EXTI_MODE) == EXTI_MODE)
 8003c68:	00e6      	lsls	r6, r4, #3
 8003c6a:	d569      	bpl.n	8003d40 <HAL_GPIO_Init+0x194>
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8003c6c:	f04f 0b00 	mov.w	fp, #0
 8003c70:	f8cd b00c 	str.w	fp, [sp, #12]
 8003c74:	f8d8 7044 	ldr.w	r7, [r8, #68]	; 0x44
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 8003c78:	4e3f      	ldr	r6, [pc, #252]	; (8003d78 <HAL_GPIO_Init+0x1cc>)
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8003c7a:	f447 4780 	orr.w	r7, r7, #16384	; 0x4000
 8003c7e:	f8c8 7044 	str.w	r7, [r8, #68]	; 0x44
 8003c82:	f8d8 7044 	ldr.w	r7, [r8, #68]	; 0x44
 8003c86:	f407 4780 	and.w	r7, r7, #16384	; 0x4000
 8003c8a:	9703      	str	r7, [sp, #12]
 8003c8c:	9f03      	ldr	r7, [sp, #12]
 8003c8e:	f023 0703 	bic.w	r7, r3, #3
 8003c92:	f107 4780 	add.w	r7, r7, #1073741824	; 0x40000000
 8003c96:	f507 379c 	add.w	r7, r7, #79872	; 0x13800
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 8003c9a:	f003 0e03 	and.w	lr, r3, #3
        temp = SYSCFG->EXTICR[position >> 2U];
 8003c9e:	f8d7 a008 	ldr.w	sl, [r7, #8]
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 8003ca2:	ea4f 0e8e 	mov.w	lr, lr, lsl #2
 8003ca6:	f04f 0c0f 	mov.w	ip, #15
 8003caa:	fa0c fc0e 	lsl.w	ip, ip, lr
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 8003cae:	42b0      	cmp	r0, r6
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 8003cb0:	ea2a 0c0c 	bic.w	ip, sl, ip
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 8003cb4:	d04b      	beq.n	8003d4e <HAL_GPIO_Init+0x1a2>
 8003cb6:	f506 6680 	add.w	r6, r6, #1024	; 0x400
 8003cba:	42b0      	cmp	r0, r6
 8003cbc:	d049      	beq.n	8003d52 <HAL_GPIO_Init+0x1a6>
 8003cbe:	f506 6680 	add.w	r6, r6, #1024	; 0x400
 8003cc2:	42b0      	cmp	r0, r6
 8003cc4:	d047      	beq.n	8003d56 <HAL_GPIO_Init+0x1aa>
 8003cc6:	f506 6680 	add.w	r6, r6, #1024	; 0x400
 8003cca:	42b0      	cmp	r0, r6
 8003ccc:	d045      	beq.n	8003d5a <HAL_GPIO_Init+0x1ae>
 8003cce:	f506 6680 	add.w	r6, r6, #1024	; 0x400
 8003cd2:	42b0      	cmp	r0, r6
 8003cd4:	d043      	beq.n	8003d5e <HAL_GPIO_Init+0x1b2>
 8003cd6:	4548      	cmp	r0, r9
 8003cd8:	d043      	beq.n	8003d62 <HAL_GPIO_Init+0x1b6>
 8003cda:	f506 6600 	add.w	r6, r6, #2048	; 0x800
 8003cde:	42b0      	cmp	r0, r6
 8003ce0:	d041      	beq.n	8003d66 <HAL_GPIO_Init+0x1ba>
 8003ce2:	f506 6680 	add.w	r6, r6, #1024	; 0x400
 8003ce6:	42b0      	cmp	r0, r6
 8003ce8:	d03f      	beq.n	8003d6a <HAL_GPIO_Init+0x1be>
 8003cea:	f506 6680 	add.w	r6, r6, #1024	; 0x400
 8003cee:	42b0      	cmp	r0, r6
 8003cf0:	d03d      	beq.n	8003d6e <HAL_GPIO_Init+0x1c2>
 8003cf2:	f506 6680 	add.w	r6, r6, #1024	; 0x400
 8003cf6:	42b0      	cmp	r0, r6
 8003cf8:	bf14      	ite	ne
 8003cfa:	260a      	movne	r6, #10
 8003cfc:	2609      	moveq	r6, #9
 8003cfe:	fa06 f60e 	lsl.w	r6, r6, lr
 8003d02:	ea46 060c 	orr.w	r6, r6, ip
        SYSCFG->EXTICR[position >> 2U] = temp;
 8003d06:	60be      	str	r6, [r7, #8]
        temp = EXTI->IMR;
 8003d08:	6816      	ldr	r6, [r2, #0]
        temp &= ~((uint32_t)iocurrent);
 8003d0a:	43ef      	mvns	r7, r5
        if((GPIO_Init->Mode & GPIO_MODE_IT) == GPIO_MODE_IT)
 8003d0c:	f414 3f80 	tst.w	r4, #65536	; 0x10000
        temp &= ~((uint32_t)iocurrent);
 8003d10:	bf0c      	ite	eq
 8003d12:	403e      	andeq	r6, r7
        {
          temp |= iocurrent;
 8003d14:	432e      	orrne	r6, r5
        }
        EXTI->IMR = temp;
 8003d16:	6016      	str	r6, [r2, #0]

        temp = EXTI->EMR;
 8003d18:	6856      	ldr	r6, [r2, #4]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & GPIO_MODE_EVT) == GPIO_MODE_EVT)
 8003d1a:	f414 3f00 	tst.w	r4, #131072	; 0x20000
        temp &= ~((uint32_t)iocurrent);
 8003d1e:	bf0c      	ite	eq
 8003d20:	403e      	andeq	r6, r7
        {
          temp |= iocurrent;
 8003d22:	432e      	orrne	r6, r5
        }
        EXTI->EMR = temp;
 8003d24:	6056      	str	r6, [r2, #4]

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR;
 8003d26:	6896      	ldr	r6, [r2, #8]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & RISING_EDGE) == RISING_EDGE)
 8003d28:	f414 1f80 	tst.w	r4, #1048576	; 0x100000
        temp &= ~((uint32_t)iocurrent);
 8003d2c:	bf0c      	ite	eq
 8003d2e:	403e      	andeq	r6, r7
        {
          temp |= iocurrent;
 8003d30:	432e      	orrne	r6, r5
        }
        EXTI->RTSR = temp;
 8003d32:	6096      	str	r6, [r2, #8]

        temp = EXTI->FTSR;
 8003d34:	68d6      	ldr	r6, [r2, #12]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & FALLING_EDGE) == FALLING_EDGE)
 8003d36:	02a4      	lsls	r4, r4, #10
        temp &= ~((uint32_t)iocurrent);
 8003d38:	bf54      	ite	pl
 8003d3a:	403e      	andpl	r6, r7
        {
          temp |= iocurrent;
 8003d3c:	432e      	orrmi	r6, r5
        }
        EXTI->FTSR = temp;
 8003d3e:	60d6      	str	r6, [r2, #12]
  for(position = 0U; position < GPIO_NUMBER; position++)
 8003d40:	3301      	adds	r3, #1
 8003d42:	2b10      	cmp	r3, #16
 8003d44:	f47f af3d 	bne.w	8003bc2 <HAL_GPIO_Init+0x16>
      }
    }
  }
}
 8003d48:	b005      	add	sp, #20
 8003d4a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 8003d4e:	465e      	mov	r6, fp
 8003d50:	e7d5      	b.n	8003cfe <HAL_GPIO_Init+0x152>
 8003d52:	2601      	movs	r6, #1
 8003d54:	e7d3      	b.n	8003cfe <HAL_GPIO_Init+0x152>
 8003d56:	2602      	movs	r6, #2
 8003d58:	e7d1      	b.n	8003cfe <HAL_GPIO_Init+0x152>
 8003d5a:	2603      	movs	r6, #3
 8003d5c:	e7cf      	b.n	8003cfe <HAL_GPIO_Init+0x152>
 8003d5e:	2604      	movs	r6, #4
 8003d60:	e7cd      	b.n	8003cfe <HAL_GPIO_Init+0x152>
 8003d62:	2605      	movs	r6, #5
 8003d64:	e7cb      	b.n	8003cfe <HAL_GPIO_Init+0x152>
 8003d66:	2606      	movs	r6, #6
 8003d68:	e7c9      	b.n	8003cfe <HAL_GPIO_Init+0x152>
 8003d6a:	2607      	movs	r6, #7
 8003d6c:	e7c7      	b.n	8003cfe <HAL_GPIO_Init+0x152>
 8003d6e:	2608      	movs	r6, #8
 8003d70:	e7c5      	b.n	8003cfe <HAL_GPIO_Init+0x152>
 8003d72:	bf00      	nop
 8003d74:	40013c00 	.word	0x40013c00
 8003d78:	40020000 	.word	0x40020000
 8003d7c:	40023800 	.word	0x40023800
 8003d80:	40021400 	.word	0x40021400

08003d84 <HAL_GPIO_WritePin>:
{
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if(PinState != GPIO_PIN_RESET)
 8003d84:	b10a      	cbz	r2, 8003d8a <HAL_GPIO_WritePin+0x6>
  {
    GPIOx->BSRR = GPIO_Pin;
  }
  else
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
 8003d86:	6181      	str	r1, [r0, #24]
  }
}
 8003d88:	4770      	bx	lr
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
 8003d8a:	0409      	lsls	r1, r1, #16
 8003d8c:	e7fb      	b.n	8003d86 <HAL_GPIO_WritePin+0x2>

08003d8e <I2C_IsAcknowledgeFailed>:
  *                the configuration information for the specified I2C.
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_IsAcknowledgeFailed(I2C_HandleTypeDef *hi2c)
{
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8003d8e:	6801      	ldr	r1, [r0, #0]
 8003d90:	694b      	ldr	r3, [r1, #20]
 8003d92:	f413 6380 	ands.w	r3, r3, #1024	; 0x400
 8003d96:	f04f 0200 	mov.w	r2, #0
 8003d9a:	d010      	beq.n	8003dbe <I2C_IsAcknowledgeFailed+0x30>
  {
    /* Clear NACKF Flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8003d9c:	f46f 6380 	mvn.w	r3, #1024	; 0x400
 8003da0:	614b      	str	r3, [r1, #20]

    hi2c->PreviousState       = I2C_STATE_NONE;
    hi2c->State               = HAL_I2C_STATE_READY;
 8003da2:	2320      	movs	r3, #32
    hi2c->PreviousState       = I2C_STATE_NONE;
 8003da4:	6302      	str	r2, [r0, #48]	; 0x30
    hi2c->State               = HAL_I2C_STATE_READY;
 8003da6:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d
    hi2c->Mode                = HAL_I2C_MODE_NONE;
 8003daa:	f880 203e 	strb.w	r2, [r0, #62]	; 0x3e
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 8003dae:	6c03      	ldr	r3, [r0, #64]	; 0x40

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 8003db0:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 8003db4:	f043 0304 	orr.w	r3, r3, #4
 8003db8:	6403      	str	r3, [r0, #64]	; 0x40

    return HAL_ERROR;
 8003dba:	2001      	movs	r0, #1
 8003dbc:	4770      	bx	lr
  }
  return HAL_OK;
 8003dbe:	4618      	mov	r0, r3
}
 8003dc0:	4770      	bx	lr

08003dc2 <I2C_WaitOnMasterAddressFlagUntilTimeout>:
{
 8003dc2:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8003dc6:	4604      	mov	r4, r0
 8003dc8:	4616      	mov	r6, r2
 8003dca:	4698      	mov	r8, r3
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 8003dcc:	b28f      	uxth	r7, r1
 8003dce:	6825      	ldr	r5, [r4, #0]
 8003dd0:	6968      	ldr	r0, [r5, #20]
 8003dd2:	ea37 0000 	bics.w	r0, r7, r0
 8003dd6:	d017      	beq.n	8003e08 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x46>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8003dd8:	696b      	ldr	r3, [r5, #20]
 8003dda:	055a      	lsls	r2, r3, #21
 8003ddc:	d516      	bpl.n	8003e0c <I2C_WaitOnMasterAddressFlagUntilTimeout+0x4a>
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8003dde:	682b      	ldr	r3, [r5, #0]
 8003de0:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8003de4:	602b      	str	r3, [r5, #0]
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8003de6:	f46f 6380 	mvn.w	r3, #1024	; 0x400
 8003dea:	616b      	str	r3, [r5, #20]
      hi2c->State               = HAL_I2C_STATE_READY;
 8003dec:	2220      	movs	r2, #32
      hi2c->PreviousState       = I2C_STATE_NONE;
 8003dee:	2300      	movs	r3, #0
 8003df0:	6323      	str	r3, [r4, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 8003df2:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 8003df6:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 8003dfa:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8003dfc:	f042 0204 	orr.w	r2, r2, #4
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8003e00:	6422      	str	r2, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 8003e02:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
        return HAL_ERROR;
 8003e06:	2001      	movs	r0, #1
}
 8003e08:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    if (Timeout != HAL_MAX_DELAY)
 8003e0c:	1c73      	adds	r3, r6, #1
 8003e0e:	d0df      	beq.n	8003dd0 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xe>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8003e10:	f7ff fb58 	bl	80034c4 <HAL_GetTick>
 8003e14:	eba0 0008 	sub.w	r0, r0, r8
 8003e18:	42b0      	cmp	r0, r6
 8003e1a:	d801      	bhi.n	8003e20 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x5e>
 8003e1c:	2e00      	cmp	r6, #0
 8003e1e:	d1d6      	bne.n	8003dce <I2C_WaitOnMasterAddressFlagUntilTimeout+0xc>
        hi2c->PreviousState       = I2C_STATE_NONE;
 8003e20:	2300      	movs	r3, #0
        hi2c->State               = HAL_I2C_STATE_READY;
 8003e22:	2220      	movs	r2, #32
        hi2c->PreviousState       = I2C_STATE_NONE;
 8003e24:	6323      	str	r3, [r4, #48]	; 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 8003e26:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 8003e2a:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8003e2e:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8003e30:	f042 0220 	orr.w	r2, r2, #32
 8003e34:	e7e4      	b.n	8003e00 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x3e>

08003e36 <I2C_WaitOnBTFFlagUntilTimeout>:
{
 8003e36:	b570      	push	{r4, r5, r6, lr}
 8003e38:	4604      	mov	r4, r0
 8003e3a:	460d      	mov	r5, r1
 8003e3c:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 8003e3e:	6823      	ldr	r3, [r4, #0]
 8003e40:	695b      	ldr	r3, [r3, #20]
 8003e42:	075b      	lsls	r3, r3, #29
 8003e44:	d501      	bpl.n	8003e4a <I2C_WaitOnBTFFlagUntilTimeout+0x14>
  return HAL_OK;
 8003e46:	2000      	movs	r0, #0
}
 8003e48:	bd70      	pop	{r4, r5, r6, pc}
    if (I2C_IsAcknowledgeFailed(hi2c) != HAL_OK)
 8003e4a:	4620      	mov	r0, r4
 8003e4c:	f7ff ff9f 	bl	8003d8e <I2C_IsAcknowledgeFailed>
 8003e50:	b9a8      	cbnz	r0, 8003e7e <I2C_WaitOnBTFFlagUntilTimeout+0x48>
    if (Timeout != HAL_MAX_DELAY)
 8003e52:	1c6a      	adds	r2, r5, #1
 8003e54:	d0f3      	beq.n	8003e3e <I2C_WaitOnBTFFlagUntilTimeout+0x8>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8003e56:	f7ff fb35 	bl	80034c4 <HAL_GetTick>
 8003e5a:	1b80      	subs	r0, r0, r6
 8003e5c:	42a8      	cmp	r0, r5
 8003e5e:	d801      	bhi.n	8003e64 <I2C_WaitOnBTFFlagUntilTimeout+0x2e>
 8003e60:	2d00      	cmp	r5, #0
 8003e62:	d1ec      	bne.n	8003e3e <I2C_WaitOnBTFFlagUntilTimeout+0x8>
        hi2c->PreviousState     = I2C_STATE_NONE;
 8003e64:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 8003e66:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 8003e68:	6323      	str	r3, [r4, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 8003e6a:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 8003e6e:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8003e72:	6c22      	ldr	r2, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 8003e74:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8003e78:	f042 0220 	orr.w	r2, r2, #32
 8003e7c:	6422      	str	r2, [r4, #64]	; 0x40
      return HAL_ERROR;
 8003e7e:	2001      	movs	r0, #1
 8003e80:	e7e2      	b.n	8003e48 <I2C_WaitOnBTFFlagUntilTimeout+0x12>

08003e82 <I2C_WaitOnRXNEFlagUntilTimeout>:
{
 8003e82:	b570      	push	{r4, r5, r6, lr}
 8003e84:	4604      	mov	r4, r0
 8003e86:	460d      	mov	r5, r1
 8003e88:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 8003e8a:	6820      	ldr	r0, [r4, #0]
 8003e8c:	6943      	ldr	r3, [r0, #20]
 8003e8e:	f013 0340 	ands.w	r3, r3, #64	; 0x40
 8003e92:	d001      	beq.n	8003e98 <I2C_WaitOnRXNEFlagUntilTimeout+0x16>
  return HAL_OK;
 8003e94:	2000      	movs	r0, #0
 8003e96:	e010      	b.n	8003eba <I2C_WaitOnRXNEFlagUntilTimeout+0x38>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == SET)
 8003e98:	6942      	ldr	r2, [r0, #20]
 8003e9a:	06d2      	lsls	r2, r2, #27
 8003e9c:	d50e      	bpl.n	8003ebc <I2C_WaitOnRXNEFlagUntilTimeout+0x3a>
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 8003e9e:	f06f 0210 	mvn.w	r2, #16
 8003ea2:	6142      	str	r2, [r0, #20]
      hi2c->State               = HAL_I2C_STATE_READY;
 8003ea4:	2220      	movs	r2, #32
      hi2c->PreviousState       = I2C_STATE_NONE;
 8003ea6:	6323      	str	r3, [r4, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 8003ea8:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 8003eac:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_NONE;
 8003eb0:	6c22      	ldr	r2, [r4, #64]	; 0x40
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8003eb2:	6422      	str	r2, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 8003eb4:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
 8003eb8:	2001      	movs	r0, #1
}
 8003eba:	bd70      	pop	{r4, r5, r6, pc}
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8003ebc:	f7ff fb02 	bl	80034c4 <HAL_GetTick>
 8003ec0:	1b80      	subs	r0, r0, r6
 8003ec2:	42a8      	cmp	r0, r5
 8003ec4:	d801      	bhi.n	8003eca <I2C_WaitOnRXNEFlagUntilTimeout+0x48>
 8003ec6:	2d00      	cmp	r5, #0
 8003ec8:	d1df      	bne.n	8003e8a <I2C_WaitOnRXNEFlagUntilTimeout+0x8>
        hi2c->PreviousState     = I2C_STATE_NONE;
 8003eca:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 8003ecc:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 8003ece:	6323      	str	r3, [r4, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 8003ed0:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 8003ed4:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8003ed8:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8003eda:	f042 0220 	orr.w	r2, r2, #32
 8003ede:	e7e8      	b.n	8003eb2 <I2C_WaitOnRXNEFlagUntilTimeout+0x30>

08003ee0 <I2C_WaitOnFlagUntilTimeout>:
{
 8003ee0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8003ee4:	9e08      	ldr	r6, [sp, #32]
 8003ee6:	4604      	mov	r4, r0
 8003ee8:	4690      	mov	r8, r2
 8003eea:	461f      	mov	r7, r3
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8003eec:	ea4f 4911 	mov.w	r9, r1, lsr #16
 8003ef0:	b28d      	uxth	r5, r1
 8003ef2:	6821      	ldr	r1, [r4, #0]
 8003ef4:	f1b9 0f01 	cmp.w	r9, #1
 8003ef8:	bf0c      	ite	eq
 8003efa:	694b      	ldreq	r3, [r1, #20]
 8003efc:	698b      	ldrne	r3, [r1, #24]
 8003efe:	ea35 0303 	bics.w	r3, r5, r3
 8003f02:	bf0c      	ite	eq
 8003f04:	2301      	moveq	r3, #1
 8003f06:	2300      	movne	r3, #0
 8003f08:	4598      	cmp	r8, r3
 8003f0a:	d001      	beq.n	8003f10 <I2C_WaitOnFlagUntilTimeout+0x30>
  return HAL_OK;
 8003f0c:	2000      	movs	r0, #0
 8003f0e:	e016      	b.n	8003f3e <I2C_WaitOnFlagUntilTimeout+0x5e>
    if (Timeout != HAL_MAX_DELAY)
 8003f10:	1c7b      	adds	r3, r7, #1
 8003f12:	d0ef      	beq.n	8003ef4 <I2C_WaitOnFlagUntilTimeout+0x14>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8003f14:	f7ff fad6 	bl	80034c4 <HAL_GetTick>
 8003f18:	1b80      	subs	r0, r0, r6
 8003f1a:	42b8      	cmp	r0, r7
 8003f1c:	d801      	bhi.n	8003f22 <I2C_WaitOnFlagUntilTimeout+0x42>
 8003f1e:	2f00      	cmp	r7, #0
 8003f20:	d1e7      	bne.n	8003ef2 <I2C_WaitOnFlagUntilTimeout+0x12>
        hi2c->PreviousState     = I2C_STATE_NONE;
 8003f22:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 8003f24:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 8003f26:	6323      	str	r3, [r4, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 8003f28:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 8003f2c:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8003f30:	6c22      	ldr	r2, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 8003f32:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8003f36:	f042 0220 	orr.w	r2, r2, #32
 8003f3a:	6422      	str	r2, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 8003f3c:	2001      	movs	r0, #1
}
 8003f3e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}

08003f42 <I2C_WaitOnTXEFlagUntilTimeout>:
{
 8003f42:	b570      	push	{r4, r5, r6, lr}
 8003f44:	4604      	mov	r4, r0
 8003f46:	460d      	mov	r5, r1
 8003f48:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8003f4a:	6823      	ldr	r3, [r4, #0]
 8003f4c:	695b      	ldr	r3, [r3, #20]
 8003f4e:	061b      	lsls	r3, r3, #24
 8003f50:	d501      	bpl.n	8003f56 <I2C_WaitOnTXEFlagUntilTimeout+0x14>
  return HAL_OK;
 8003f52:	2000      	movs	r0, #0
}
 8003f54:	bd70      	pop	{r4, r5, r6, pc}
    if (I2C_IsAcknowledgeFailed(hi2c) != HAL_OK)
 8003f56:	4620      	mov	r0, r4
 8003f58:	f7ff ff19 	bl	8003d8e <I2C_IsAcknowledgeFailed>
 8003f5c:	b9a8      	cbnz	r0, 8003f8a <I2C_WaitOnTXEFlagUntilTimeout+0x48>
    if (Timeout != HAL_MAX_DELAY)
 8003f5e:	1c6a      	adds	r2, r5, #1
 8003f60:	d0f3      	beq.n	8003f4a <I2C_WaitOnTXEFlagUntilTimeout+0x8>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8003f62:	f7ff faaf 	bl	80034c4 <HAL_GetTick>
 8003f66:	1b80      	subs	r0, r0, r6
 8003f68:	42a8      	cmp	r0, r5
 8003f6a:	d801      	bhi.n	8003f70 <I2C_WaitOnTXEFlagUntilTimeout+0x2e>
 8003f6c:	2d00      	cmp	r5, #0
 8003f6e:	d1ec      	bne.n	8003f4a <I2C_WaitOnTXEFlagUntilTimeout+0x8>
        hi2c->PreviousState     = I2C_STATE_NONE;
 8003f70:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 8003f72:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 8003f74:	6323      	str	r3, [r4, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 8003f76:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 8003f7a:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8003f7e:	6c22      	ldr	r2, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 8003f80:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8003f84:	f042 0220 	orr.w	r2, r2, #32
 8003f88:	6422      	str	r2, [r4, #64]	; 0x40
      return HAL_ERROR;
 8003f8a:	2001      	movs	r0, #1
 8003f8c:	e7e2      	b.n	8003f54 <I2C_WaitOnTXEFlagUntilTimeout+0x12>
	...

08003f90 <I2C_RequestMemoryWrite>:
{
 8003f90:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8003f94:	4615      	mov	r5, r2
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8003f96:	6802      	ldr	r2, [r0, #0]
{
 8003f98:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
 8003f9a:	4698      	mov	r8, r3
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8003f9c:	6813      	ldr	r3, [r2, #0]
 8003f9e:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8003fa2:	6013      	str	r3, [r2, #0]
{
 8003fa4:	460f      	mov	r7, r1
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 8003fa6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8003fa8:	9600      	str	r6, [sp, #0]
 8003faa:	2200      	movs	r2, #0
 8003fac:	f04f 1101 	mov.w	r1, #65537	; 0x10001
{
 8003fb0:	4604      	mov	r4, r0
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 8003fb2:	f7ff ff95 	bl	8003ee0 <I2C_WaitOnFlagUntilTimeout>
 8003fb6:	6823      	ldr	r3, [r4, #0]
 8003fb8:	b138      	cbz	r0, 8003fca <I2C_RequestMemoryWrite+0x3a>
    if (hi2c->Instance->CR1 & I2C_CR1_START)
 8003fba:	681b      	ldr	r3, [r3, #0]
 8003fbc:	05db      	lsls	r3, r3, #23
 8003fbe:	d502      	bpl.n	8003fc6 <I2C_RequestMemoryWrite+0x36>
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 8003fc0:	f44f 7300 	mov.w	r3, #512	; 0x200
 8003fc4:	6423      	str	r3, [r4, #64]	; 0x40
    return HAL_TIMEOUT;
 8003fc6:	2003      	movs	r0, #3
 8003fc8:	e00a      	b.n	8003fe0 <I2C_RequestMemoryWrite+0x50>
  hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 8003fca:	f007 07fe 	and.w	r7, r7, #254	; 0xfe
 8003fce:	611f      	str	r7, [r3, #16]
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 8003fd0:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8003fd2:	4919      	ldr	r1, [pc, #100]	; (8004038 <I2C_RequestMemoryWrite+0xa8>)
 8003fd4:	4633      	mov	r3, r6
 8003fd6:	4620      	mov	r0, r4
 8003fd8:	f7ff fef3 	bl	8003dc2 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8003fdc:	b118      	cbz	r0, 8003fe6 <I2C_RequestMemoryWrite+0x56>
      return HAL_ERROR;
 8003fde:	2001      	movs	r0, #1
}
 8003fe0:	b004      	add	sp, #16
 8003fe2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8003fe6:	6823      	ldr	r3, [r4, #0]
 8003fe8:	9003      	str	r0, [sp, #12]
 8003fea:	695a      	ldr	r2, [r3, #20]
 8003fec:	9203      	str	r2, [sp, #12]
 8003fee:	699b      	ldr	r3, [r3, #24]
 8003ff0:	9303      	str	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8003ff2:	4632      	mov	r2, r6
 8003ff4:	990a      	ldr	r1, [sp, #40]	; 0x28
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8003ff6:	9b03      	ldr	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8003ff8:	4620      	mov	r0, r4
 8003ffa:	f7ff ffa2 	bl	8003f42 <I2C_WaitOnTXEFlagUntilTimeout>
 8003ffe:	b140      	cbz	r0, 8004012 <I2C_RequestMemoryWrite+0x82>
      if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8004000:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8004002:	2b04      	cmp	r3, #4
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8004004:	bf01      	itttt	eq
 8004006:	6822      	ldreq	r2, [r4, #0]
 8004008:	6813      	ldreq	r3, [r2, #0]
 800400a:	f443 7300 	orreq.w	r3, r3, #512	; 0x200
 800400e:	6013      	streq	r3, [r2, #0]
 8004010:	e7e5      	b.n	8003fde <I2C_RequestMemoryWrite+0x4e>
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 8004012:	f1b8 0f01 	cmp.w	r8, #1
 8004016:	6823      	ldr	r3, [r4, #0]
 8004018:	d102      	bne.n	8004020 <I2C_RequestMemoryWrite+0x90>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 800401a:	b2ed      	uxtb	r5, r5
 800401c:	611d      	str	r5, [r3, #16]
 800401e:	e7df      	b.n	8003fe0 <I2C_RequestMemoryWrite+0x50>
    hi2c->Instance->DR = I2C_MEM_ADD_MSB(MemAddress);
 8004020:	0a2a      	lsrs	r2, r5, #8
 8004022:	611a      	str	r2, [r3, #16]
    if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8004024:	990a      	ldr	r1, [sp, #40]	; 0x28
 8004026:	4632      	mov	r2, r6
 8004028:	4620      	mov	r0, r4
 800402a:	f7ff ff8a 	bl	8003f42 <I2C_WaitOnTXEFlagUntilTimeout>
 800402e:	2800      	cmp	r0, #0
 8004030:	d1e6      	bne.n	8004000 <I2C_RequestMemoryWrite+0x70>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 8004032:	6823      	ldr	r3, [r4, #0]
 8004034:	e7f1      	b.n	800401a <I2C_RequestMemoryWrite+0x8a>
 8004036:	bf00      	nop
 8004038:	00010002 	.word	0x00010002

0800403c <I2C_RequestMemoryRead>:
{
 800403c:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8004040:	4698      	mov	r8, r3
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8004042:	6803      	ldr	r3, [r0, #0]
{
 8004044:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8004046:	4616      	mov	r6, r2
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8004048:	681a      	ldr	r2, [r3, #0]
 800404a:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800404e:	601a      	str	r2, [r3, #0]
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8004050:	681a      	ldr	r2, [r3, #0]
 8004052:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8004056:	601a      	str	r2, [r3, #0]
{
 8004058:	460f      	mov	r7, r1
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 800405a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800405c:	9500      	str	r5, [sp, #0]
 800405e:	2200      	movs	r2, #0
 8004060:	f04f 1101 	mov.w	r1, #65537	; 0x10001
{
 8004064:	4604      	mov	r4, r0
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 8004066:	f7ff ff3b 	bl	8003ee0 <I2C_WaitOnFlagUntilTimeout>
 800406a:	6823      	ldr	r3, [r4, #0]
 800406c:	b148      	cbz	r0, 8004082 <I2C_RequestMemoryRead+0x46>
    if (hi2c->Instance->CR1 & I2C_CR1_START)
 800406e:	681b      	ldr	r3, [r3, #0]
 8004070:	05db      	lsls	r3, r3, #23
 8004072:	d502      	bpl.n	800407a <I2C_RequestMemoryRead+0x3e>
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 8004074:	f44f 7300 	mov.w	r3, #512	; 0x200
 8004078:	6423      	str	r3, [r4, #64]	; 0x40
    return HAL_TIMEOUT;
 800407a:	2003      	movs	r0, #3
}
 800407c:	b004      	add	sp, #16
 800407e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 8004082:	b2ff      	uxtb	r7, r7
 8004084:	f007 02fe 	and.w	r2, r7, #254	; 0xfe
 8004088:	611a      	str	r2, [r3, #16]
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 800408a:	492a      	ldr	r1, [pc, #168]	; (8004134 <I2C_RequestMemoryRead+0xf8>)
 800408c:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800408e:	462b      	mov	r3, r5
 8004090:	4620      	mov	r0, r4
 8004092:	f7ff fe96 	bl	8003dc2 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8004096:	b108      	cbz	r0, 800409c <I2C_RequestMemoryRead+0x60>
    return HAL_ERROR;
 8004098:	2001      	movs	r0, #1
 800409a:	e7ef      	b.n	800407c <I2C_RequestMemoryRead+0x40>
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800409c:	6823      	ldr	r3, [r4, #0]
 800409e:	9003      	str	r0, [sp, #12]
 80040a0:	695a      	ldr	r2, [r3, #20]
 80040a2:	9203      	str	r2, [sp, #12]
 80040a4:	699b      	ldr	r3, [r3, #24]
 80040a6:	9303      	str	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 80040a8:	462a      	mov	r2, r5
 80040aa:	990a      	ldr	r1, [sp, #40]	; 0x28
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 80040ac:	9b03      	ldr	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 80040ae:	4620      	mov	r0, r4
 80040b0:	f7ff ff47 	bl	8003f42 <I2C_WaitOnTXEFlagUntilTimeout>
 80040b4:	b140      	cbz	r0, 80040c8 <I2C_RequestMemoryRead+0x8c>
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 80040b6:	6c23      	ldr	r3, [r4, #64]	; 0x40
 80040b8:	2b04      	cmp	r3, #4
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 80040ba:	bf01      	itttt	eq
 80040bc:	6822      	ldreq	r2, [r4, #0]
 80040be:	6813      	ldreq	r3, [r2, #0]
 80040c0:	f443 7300 	orreq.w	r3, r3, #512	; 0x200
 80040c4:	6013      	streq	r3, [r2, #0]
 80040c6:	e7e7      	b.n	8004098 <I2C_RequestMemoryRead+0x5c>
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 80040c8:	f1b8 0f01 	cmp.w	r8, #1
 80040cc:	6823      	ldr	r3, [r4, #0]
 80040ce:	d125      	bne.n	800411c <I2C_RequestMemoryRead+0xe0>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 80040d0:	b2f6      	uxtb	r6, r6
 80040d2:	611e      	str	r6, [r3, #16]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 80040d4:	462a      	mov	r2, r5
 80040d6:	990a      	ldr	r1, [sp, #40]	; 0x28
 80040d8:	4620      	mov	r0, r4
 80040da:	f7ff ff32 	bl	8003f42 <I2C_WaitOnTXEFlagUntilTimeout>
 80040de:	4602      	mov	r2, r0
 80040e0:	2800      	cmp	r0, #0
 80040e2:	d1e8      	bne.n	80040b6 <I2C_RequestMemoryRead+0x7a>
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 80040e4:	6821      	ldr	r1, [r4, #0]
 80040e6:	680b      	ldr	r3, [r1, #0]
 80040e8:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80040ec:	600b      	str	r3, [r1, #0]
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 80040ee:	4620      	mov	r0, r4
 80040f0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80040f2:	9500      	str	r5, [sp, #0]
 80040f4:	f04f 1101 	mov.w	r1, #65537	; 0x10001
 80040f8:	f7ff fef2 	bl	8003ee0 <I2C_WaitOnFlagUntilTimeout>
 80040fc:	6823      	ldr	r3, [r4, #0]
 80040fe:	2800      	cmp	r0, #0
 8004100:	d1b5      	bne.n	800406e <I2C_RequestMemoryRead+0x32>
  hi2c->Instance->DR = I2C_7BIT_ADD_READ(DevAddress);
 8004102:	f047 0701 	orr.w	r7, r7, #1
 8004106:	611f      	str	r7, [r3, #16]
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 8004108:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800410a:	490a      	ldr	r1, [pc, #40]	; (8004134 <I2C_RequestMemoryRead+0xf8>)
 800410c:	462b      	mov	r3, r5
 800410e:	4620      	mov	r0, r4
 8004110:	f7ff fe57 	bl	8003dc2 <I2C_WaitOnMasterAddressFlagUntilTimeout>
    return HAL_TIMEOUT;
 8004114:	3000      	adds	r0, #0
 8004116:	bf18      	it	ne
 8004118:	2001      	movne	r0, #1
 800411a:	e7af      	b.n	800407c <I2C_RequestMemoryRead+0x40>
    hi2c->Instance->DR = I2C_MEM_ADD_MSB(MemAddress);
 800411c:	0a32      	lsrs	r2, r6, #8
 800411e:	611a      	str	r2, [r3, #16]
    if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8004120:	990a      	ldr	r1, [sp, #40]	; 0x28
 8004122:	462a      	mov	r2, r5
 8004124:	4620      	mov	r0, r4
 8004126:	f7ff ff0c 	bl	8003f42 <I2C_WaitOnTXEFlagUntilTimeout>
 800412a:	2800      	cmp	r0, #0
 800412c:	d1c3      	bne.n	80040b6 <I2C_RequestMemoryRead+0x7a>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 800412e:	6823      	ldr	r3, [r4, #0]
 8004130:	e7ce      	b.n	80040d0 <I2C_RequestMemoryRead+0x94>
 8004132:	bf00      	nop
 8004134:	00010002 	.word	0x00010002

08004138 <HAL_I2C_Init>:
{
 8004138:	b570      	push	{r4, r5, r6, lr}
  if (hi2c == NULL)
 800413a:	4604      	mov	r4, r0
 800413c:	b908      	cbnz	r0, 8004142 <HAL_I2C_Init+0xa>
    return HAL_ERROR;
 800413e:	2001      	movs	r0, #1
}
 8004140:	bd70      	pop	{r4, r5, r6, pc}
  if (hi2c->State == HAL_I2C_STATE_RESET)
 8004142:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 8004146:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800414a:	b91b      	cbnz	r3, 8004154 <HAL_I2C_Init+0x1c>
    hi2c->Lock = HAL_UNLOCKED;
 800414c:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    HAL_I2C_MspInit(hi2c);
 8004150:	f7fd fc98 	bl	8001a84 <HAL_I2C_MspInit>
  hi2c->State = HAL_I2C_STATE_BUSY;
 8004154:	2324      	movs	r3, #36	; 0x24
 8004156:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  __HAL_I2C_DISABLE(hi2c);
 800415a:	6823      	ldr	r3, [r4, #0]
 800415c:	681a      	ldr	r2, [r3, #0]
 800415e:	f022 0201 	bic.w	r2, r2, #1
 8004162:	601a      	str	r2, [r3, #0]
  hi2c->Instance->CR1 |= I2C_CR1_SWRST;
 8004164:	681a      	ldr	r2, [r3, #0]
 8004166:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 800416a:	601a      	str	r2, [r3, #0]
  hi2c->Instance->CR1 &= ~I2C_CR1_SWRST;
 800416c:	681a      	ldr	r2, [r3, #0]
 800416e:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
 8004172:	601a      	str	r2, [r3, #0]
  pclk1 = HAL_RCC_GetPCLK1Freq();
 8004174:	f000 fe6c 	bl	8004e50 <HAL_RCC_GetPCLK1Freq>
  if (I2C_MIN_PCLK_FREQ(pclk1, hi2c->Init.ClockSpeed) == 1U)
 8004178:	6863      	ldr	r3, [r4, #4]
 800417a:	4a41      	ldr	r2, [pc, #260]	; (8004280 <HAL_I2C_Init+0x148>)
 800417c:	4293      	cmp	r3, r2
 800417e:	d84d      	bhi.n	800421c <HAL_I2C_Init+0xe4>
 8004180:	4a40      	ldr	r2, [pc, #256]	; (8004284 <HAL_I2C_Init+0x14c>)
 8004182:	4290      	cmp	r0, r2
 8004184:	d9db      	bls.n	800413e <HAL_I2C_Init+0x6>
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 8004186:	6822      	ldr	r2, [r4, #0]
  freqrange = I2C_FREQRANGE(pclk1);
 8004188:	493f      	ldr	r1, [pc, #252]	; (8004288 <HAL_I2C_Init+0x150>)
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 800418a:	6855      	ldr	r5, [r2, #4]
  freqrange = I2C_FREQRANGE(pclk1);
 800418c:	fbb0 f1f1 	udiv	r1, r0, r1
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 8004190:	f025 053f 	bic.w	r5, r5, #63	; 0x3f
 8004194:	430d      	orrs	r5, r1
 8004196:	6055      	str	r5, [r2, #4]
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 8004198:	6a15      	ldr	r5, [r2, #32]
 800419a:	f025 053f 	bic.w	r5, r5, #63	; 0x3f
 800419e:	3101      	adds	r1, #1
 80041a0:	4329      	orrs	r1, r5
 80041a2:	6211      	str	r1, [r2, #32]
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 80041a4:	69d1      	ldr	r1, [r2, #28]
 80041a6:	4d36      	ldr	r5, [pc, #216]	; (8004280 <HAL_I2C_Init+0x148>)
 80041a8:	f421 414f 	bic.w	r1, r1, #52992	; 0xcf00
 80041ac:	42ab      	cmp	r3, r5
 80041ae:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 80041b2:	f100 30ff 	add.w	r0, r0, #4294967295
 80041b6:	d848      	bhi.n	800424a <HAL_I2C_Init+0x112>
 80041b8:	005b      	lsls	r3, r3, #1
 80041ba:	fbb0 f0f3 	udiv	r0, r0, r3
 80041be:	1c43      	adds	r3, r0, #1
 80041c0:	f3c3 030b 	ubfx	r3, r3, #0, #12
 80041c4:	2b04      	cmp	r3, #4
 80041c6:	bf38      	it	cc
 80041c8:	2304      	movcc	r3, #4
 80041ca:	430b      	orrs	r3, r1
 80041cc:	61d3      	str	r3, [r2, #28]
  MODIFY_REG(hi2c->Instance->CR1, (I2C_CR1_ENGC | I2C_CR1_NOSTRETCH), (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode));
 80041ce:	e9d4 3007 	ldrd	r3, r0, [r4, #28]
 80041d2:	6811      	ldr	r1, [r2, #0]
 80041d4:	4303      	orrs	r3, r0
 80041d6:	f021 01c0 	bic.w	r1, r1, #192	; 0xc0
 80041da:	430b      	orrs	r3, r1
 80041dc:	6013      	str	r3, [r2, #0]
  MODIFY_REG(hi2c->Instance->OAR1, (I2C_OAR1_ADDMODE | I2C_OAR1_ADD8_9 | I2C_OAR1_ADD1_7 | I2C_OAR1_ADD0), (hi2c->Init.AddressingMode | hi2c->Init.OwnAddress1));
 80041de:	6891      	ldr	r1, [r2, #8]
 80041e0:	e9d4 0303 	ldrd	r0, r3, [r4, #12]
 80041e4:	f421 4103 	bic.w	r1, r1, #33536	; 0x8300
 80041e8:	4303      	orrs	r3, r0
 80041ea:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 80041ee:	430b      	orrs	r3, r1
 80041f0:	6093      	str	r3, [r2, #8]
  MODIFY_REG(hi2c->Instance->OAR2, (I2C_OAR2_ENDUAL | I2C_OAR2_ADD2), (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2));
 80041f2:	e9d4 3005 	ldrd	r3, r0, [r4, #20]
 80041f6:	68d1      	ldr	r1, [r2, #12]
 80041f8:	4303      	orrs	r3, r0
 80041fa:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 80041fe:	430b      	orrs	r3, r1
 8004200:	60d3      	str	r3, [r2, #12]
  __HAL_I2C_ENABLE(hi2c);
 8004202:	6813      	ldr	r3, [r2, #0]
 8004204:	f043 0301 	orr.w	r3, r3, #1
 8004208:	6013      	str	r3, [r2, #0]
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 800420a:	2000      	movs	r0, #0
  hi2c->State = HAL_I2C_STATE_READY;
 800420c:	2320      	movs	r3, #32
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 800420e:	6420      	str	r0, [r4, #64]	; 0x40
  hi2c->State = HAL_I2C_STATE_READY;
 8004210:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  hi2c->PreviousState = I2C_STATE_NONE;
 8004214:	6320      	str	r0, [r4, #48]	; 0x30
  hi2c->Mode = HAL_I2C_MODE_NONE;
 8004216:	f884 003e 	strb.w	r0, [r4, #62]	; 0x3e
  return HAL_OK;
 800421a:	e791      	b.n	8004140 <HAL_I2C_Init+0x8>
  if (I2C_MIN_PCLK_FREQ(pclk1, hi2c->Init.ClockSpeed) == 1U)
 800421c:	4a1b      	ldr	r2, [pc, #108]	; (800428c <HAL_I2C_Init+0x154>)
 800421e:	4290      	cmp	r0, r2
 8004220:	d98d      	bls.n	800413e <HAL_I2C_Init+0x6>
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 8004222:	6822      	ldr	r2, [r4, #0]
  freqrange = I2C_FREQRANGE(pclk1);
 8004224:	4e18      	ldr	r6, [pc, #96]	; (8004288 <HAL_I2C_Init+0x150>)
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 8004226:	6855      	ldr	r5, [r2, #4]
  freqrange = I2C_FREQRANGE(pclk1);
 8004228:	fbb0 f6f6 	udiv	r6, r0, r6
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 800422c:	f025 053f 	bic.w	r5, r5, #63	; 0x3f
 8004230:	4335      	orrs	r5, r6
 8004232:	6055      	str	r5, [r2, #4]
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 8004234:	6a15      	ldr	r5, [r2, #32]
 8004236:	f44f 7196 	mov.w	r1, #300	; 0x12c
 800423a:	4371      	muls	r1, r6
 800423c:	f025 053f 	bic.w	r5, r5, #63	; 0x3f
 8004240:	f44f 767a 	mov.w	r6, #1000	; 0x3e8
 8004244:	fbb1 f1f6 	udiv	r1, r1, r6
 8004248:	e7a9      	b.n	800419e <HAL_I2C_Init+0x66>
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 800424a:	68a5      	ldr	r5, [r4, #8]
 800424c:	b955      	cbnz	r5, 8004264 <HAL_I2C_Init+0x12c>
 800424e:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8004252:	fbb0 f0f3 	udiv	r0, r0, r3
 8004256:	1c43      	adds	r3, r0, #1
 8004258:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800425c:	b16b      	cbz	r3, 800427a <HAL_I2C_Init+0x142>
 800425e:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8004262:	e7b2      	b.n	80041ca <HAL_I2C_Init+0x92>
 8004264:	2519      	movs	r5, #25
 8004266:	436b      	muls	r3, r5
 8004268:	fbb0 f0f3 	udiv	r0, r0, r3
 800426c:	1c43      	adds	r3, r0, #1
 800426e:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8004272:	b113      	cbz	r3, 800427a <HAL_I2C_Init+0x142>
 8004274:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 8004278:	e7a7      	b.n	80041ca <HAL_I2C_Init+0x92>
 800427a:	2301      	movs	r3, #1
 800427c:	e7a5      	b.n	80041ca <HAL_I2C_Init+0x92>
 800427e:	bf00      	nop
 8004280:	000186a0 	.word	0x000186a0
 8004284:	001e847f 	.word	0x001e847f
 8004288:	000f4240 	.word	0x000f4240
 800428c:	003d08ff 	.word	0x003d08ff

08004290 <HAL_I2C_Mem_Write>:
{
 8004290:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8004294:	4604      	mov	r4, r0
 8004296:	4699      	mov	r9, r3
 8004298:	460f      	mov	r7, r1
 800429a:	4690      	mov	r8, r2
 800429c:	9e0c      	ldr	r6, [sp, #48]	; 0x30
  uint32_t tickstart = HAL_GetTick();
 800429e:	f7ff f911 	bl	80034c4 <HAL_GetTick>
  if (hi2c->State == HAL_I2C_STATE_READY)
 80042a2:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
 80042a6:	2b20      	cmp	r3, #32
  uint32_t tickstart = HAL_GetTick();
 80042a8:	4605      	mov	r5, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
 80042aa:	d003      	beq.n	80042b4 <HAL_I2C_Mem_Write+0x24>
    return HAL_BUSY;
 80042ac:	2002      	movs	r0, #2
}
 80042ae:	b003      	add	sp, #12
 80042b0:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY_FLAG, tickstart) != HAL_OK)
 80042b4:	9000      	str	r0, [sp, #0]
 80042b6:	2319      	movs	r3, #25
 80042b8:	2201      	movs	r2, #1
 80042ba:	493b      	ldr	r1, [pc, #236]	; (80043a8 <HAL_I2C_Mem_Write+0x118>)
 80042bc:	4620      	mov	r0, r4
 80042be:	f7ff fe0f 	bl	8003ee0 <I2C_WaitOnFlagUntilTimeout>
 80042c2:	2800      	cmp	r0, #0
 80042c4:	d1f2      	bne.n	80042ac <HAL_I2C_Mem_Write+0x1c>
    __HAL_LOCK(hi2c);
 80042c6:	f894 303c 	ldrb.w	r3, [r4, #60]	; 0x3c
 80042ca:	2b01      	cmp	r3, #1
 80042cc:	d0ee      	beq.n	80042ac <HAL_I2C_Mem_Write+0x1c>
 80042ce:	2301      	movs	r3, #1
 80042d0:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 80042d4:	6823      	ldr	r3, [r4, #0]
 80042d6:	681a      	ldr	r2, [r3, #0]
 80042d8:	07d1      	lsls	r1, r2, #31
      __HAL_I2C_ENABLE(hi2c);
 80042da:	bf5e      	ittt	pl
 80042dc:	681a      	ldrpl	r2, [r3, #0]
 80042de:	f042 0201 	orrpl.w	r2, r2, #1
 80042e2:	601a      	strpl	r2, [r3, #0]
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 80042e4:	681a      	ldr	r2, [r3, #0]
 80042e6:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 80042ea:	601a      	str	r2, [r3, #0]
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
 80042ec:	2321      	movs	r3, #33	; 0x21
 80042ee:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 80042f2:	2340      	movs	r3, #64	; 0x40
 80042f4:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 80042f8:	2300      	movs	r3, #0
 80042fa:	6423      	str	r3, [r4, #64]	; 0x40
    hi2c->pBuffPtr    = pData;
 80042fc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80042fe:	6263      	str	r3, [r4, #36]	; 0x24
    hi2c->XferCount   = Size;
 8004300:	f8bd 302c 	ldrh.w	r3, [sp, #44]	; 0x2c
 8004304:	8563      	strh	r3, [r4, #42]	; 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 8004306:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8004308:	8523      	strh	r3, [r4, #40]	; 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 800430a:	4b28      	ldr	r3, [pc, #160]	; (80043ac <HAL_I2C_Mem_Write+0x11c>)
 800430c:	62e3      	str	r3, [r4, #44]	; 0x2c
    if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 800430e:	e9cd 6500 	strd	r6, r5, [sp]
 8004312:	464b      	mov	r3, r9
 8004314:	4642      	mov	r2, r8
 8004316:	4639      	mov	r1, r7
 8004318:	4620      	mov	r0, r4
 800431a:	f7ff fe39 	bl	8003f90 <I2C_RequestMemoryWrite>
 800431e:	2800      	cmp	r0, #0
 8004320:	d02a      	beq.n	8004378 <HAL_I2C_Mem_Write+0xe8>
      return HAL_ERROR;
 8004322:	2001      	movs	r0, #1
 8004324:	e7c3      	b.n	80042ae <HAL_I2C_Mem_Write+0x1e>
      if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8004326:	f7ff fe0c 	bl	8003f42 <I2C_WaitOnTXEFlagUntilTimeout>
 800432a:	b140      	cbz	r0, 800433e <HAL_I2C_Mem_Write+0xae>
      if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800432c:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800432e:	2b04      	cmp	r3, #4
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8004330:	bf01      	itttt	eq
 8004332:	6822      	ldreq	r2, [r4, #0]
 8004334:	6813      	ldreq	r3, [r2, #0]
 8004336:	f443 7300 	orreq.w	r3, r3, #512	; 0x200
 800433a:	6013      	streq	r3, [r2, #0]
 800433c:	e7f1      	b.n	8004322 <HAL_I2C_Mem_Write+0x92>
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 800433e:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8004340:	6827      	ldr	r7, [r4, #0]
 8004342:	461a      	mov	r2, r3
 8004344:	f812 1b01 	ldrb.w	r1, [r2], #1
 8004348:	6139      	str	r1, [r7, #16]
      hi2c->pBuffPtr++;
 800434a:	6262      	str	r2, [r4, #36]	; 0x24
      hi2c->XferCount--;
 800434c:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
      hi2c->XferSize--;
 800434e:	8d21      	ldrh	r1, [r4, #40]	; 0x28
      hi2c->XferCount--;
 8004350:	3a01      	subs	r2, #1
 8004352:	b292      	uxth	r2, r2
 8004354:	8562      	strh	r2, [r4, #42]	; 0x2a
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 8004356:	697a      	ldr	r2, [r7, #20]
      hi2c->XferSize--;
 8004358:	1e48      	subs	r0, r1, #1
 800435a:	b280      	uxth	r0, r0
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 800435c:	0752      	lsls	r2, r2, #29
      hi2c->XferSize--;
 800435e:	8520      	strh	r0, [r4, #40]	; 0x28
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 8004360:	d50a      	bpl.n	8004378 <HAL_I2C_Mem_Write+0xe8>
 8004362:	b148      	cbz	r0, 8004378 <HAL_I2C_Mem_Write+0xe8>
        hi2c->Instance->DR = *hi2c->pBuffPtr;
 8004364:	785a      	ldrb	r2, [r3, #1]
 8004366:	613a      	str	r2, [r7, #16]
        hi2c->pBuffPtr++;
 8004368:	3302      	adds	r3, #2
 800436a:	6263      	str	r3, [r4, #36]	; 0x24
        hi2c->XferCount--;
 800436c:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800436e:	3b01      	subs	r3, #1
        hi2c->XferSize--;
 8004370:	3902      	subs	r1, #2
        hi2c->XferCount--;
 8004372:	b29b      	uxth	r3, r3
        hi2c->XferSize--;
 8004374:	8521      	strh	r1, [r4, #40]	; 0x28
        hi2c->XferCount--;
 8004376:	8563      	strh	r3, [r4, #42]	; 0x2a
    while (hi2c->XferSize > 0U)
 8004378:	8d23      	ldrh	r3, [r4, #40]	; 0x28
      if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 800437a:	462a      	mov	r2, r5
 800437c:	4631      	mov	r1, r6
 800437e:	4620      	mov	r0, r4
    while (hi2c->XferSize > 0U)
 8004380:	2b00      	cmp	r3, #0
 8004382:	d1d0      	bne.n	8004326 <HAL_I2C_Mem_Write+0x96>
    if (I2C_WaitOnBTFFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8004384:	f7ff fd57 	bl	8003e36 <I2C_WaitOnBTFFlagUntilTimeout>
 8004388:	2800      	cmp	r0, #0
 800438a:	d1cf      	bne.n	800432c <HAL_I2C_Mem_Write+0x9c>
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800438c:	6822      	ldr	r2, [r4, #0]
 800438e:	6813      	ldr	r3, [r2, #0]
 8004390:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8004394:	6013      	str	r3, [r2, #0]
    hi2c->State = HAL_I2C_STATE_READY;
 8004396:	2320      	movs	r3, #32
 8004398:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
    __HAL_UNLOCK(hi2c);
 800439c:	f884 003c 	strb.w	r0, [r4, #60]	; 0x3c
    hi2c->Mode = HAL_I2C_MODE_NONE;
 80043a0:	f884 003e 	strb.w	r0, [r4, #62]	; 0x3e
    return HAL_OK;
 80043a4:	e783      	b.n	80042ae <HAL_I2C_Mem_Write+0x1e>
 80043a6:	bf00      	nop
 80043a8:	00100002 	.word	0x00100002
 80043ac:	ffff0000 	.word	0xffff0000

080043b0 <HAL_I2C_Mem_Read>:
{
 80043b0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80043b4:	4604      	mov	r4, r0
 80043b6:	b087      	sub	sp, #28
 80043b8:	4699      	mov	r9, r3
 80043ba:	460d      	mov	r5, r1
 80043bc:	4690      	mov	r8, r2
 80043be:	9f10      	ldr	r7, [sp, #64]	; 0x40
  uint32_t tickstart = HAL_GetTick();
 80043c0:	f7ff f880 	bl	80034c4 <HAL_GetTick>
  if (hi2c->State == HAL_I2C_STATE_READY)
 80043c4:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
 80043c8:	2b20      	cmp	r3, #32
  uint32_t tickstart = HAL_GetTick();
 80043ca:	4606      	mov	r6, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
 80043cc:	d004      	beq.n	80043d8 <HAL_I2C_Mem_Read+0x28>
    return HAL_BUSY;
 80043ce:	2502      	movs	r5, #2
}
 80043d0:	4628      	mov	r0, r5
 80043d2:	b007      	add	sp, #28
 80043d4:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY_FLAG, tickstart) != HAL_OK)
 80043d8:	9000      	str	r0, [sp, #0]
 80043da:	2319      	movs	r3, #25
 80043dc:	2201      	movs	r2, #1
 80043de:	4977      	ldr	r1, [pc, #476]	; (80045bc <HAL_I2C_Mem_Read+0x20c>)
 80043e0:	4620      	mov	r0, r4
 80043e2:	f7ff fd7d 	bl	8003ee0 <I2C_WaitOnFlagUntilTimeout>
 80043e6:	2800      	cmp	r0, #0
 80043e8:	d1f1      	bne.n	80043ce <HAL_I2C_Mem_Read+0x1e>
    __HAL_LOCK(hi2c);
 80043ea:	f894 303c 	ldrb.w	r3, [r4, #60]	; 0x3c
 80043ee:	2b01      	cmp	r3, #1
 80043f0:	d0ed      	beq.n	80043ce <HAL_I2C_Mem_Read+0x1e>
 80043f2:	2301      	movs	r3, #1
 80043f4:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 80043f8:	6823      	ldr	r3, [r4, #0]
 80043fa:	681a      	ldr	r2, [r3, #0]
 80043fc:	07d0      	lsls	r0, r2, #31
      __HAL_I2C_ENABLE(hi2c);
 80043fe:	bf5e      	ittt	pl
 8004400:	681a      	ldrpl	r2, [r3, #0]
 8004402:	f042 0201 	orrpl.w	r2, r2, #1
 8004406:	601a      	strpl	r2, [r3, #0]
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 8004408:	681a      	ldr	r2, [r3, #0]
 800440a:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 800440e:	601a      	str	r2, [r3, #0]
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
 8004410:	2322      	movs	r3, #34	; 0x22
 8004412:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 8004416:	2340      	movs	r3, #64	; 0x40
 8004418:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 800441c:	2300      	movs	r3, #0
 800441e:	6423      	str	r3, [r4, #64]	; 0x40
    hi2c->pBuffPtr    = pData;
 8004420:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8004422:	6263      	str	r3, [r4, #36]	; 0x24
    hi2c->XferCount   = Size;
 8004424:	f8bd 303c 	ldrh.w	r3, [sp, #60]	; 0x3c
 8004428:	8563      	strh	r3, [r4, #42]	; 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 800442a:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800442c:	8523      	strh	r3, [r4, #40]	; 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 800442e:	4b64      	ldr	r3, [pc, #400]	; (80045c0 <HAL_I2C_Mem_Read+0x210>)
 8004430:	62e3      	str	r3, [r4, #44]	; 0x2c
    if (I2C_RequestMemoryRead(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 8004432:	4629      	mov	r1, r5
 8004434:	e9cd 7600 	strd	r7, r6, [sp]
 8004438:	464b      	mov	r3, r9
 800443a:	4642      	mov	r2, r8
 800443c:	4620      	mov	r0, r4
 800443e:	f7ff fdfd 	bl	800403c <I2C_RequestMemoryRead>
 8004442:	4605      	mov	r5, r0
 8004444:	b108      	cbz	r0, 800444a <HAL_I2C_Mem_Read+0x9a>
      return HAL_ERROR;
 8004446:	2501      	movs	r5, #1
 8004448:	e7c2      	b.n	80043d0 <HAL_I2C_Mem_Read+0x20>
    if (hi2c->XferSize == 0U)
 800444a:	8d22      	ldrh	r2, [r4, #40]	; 0x28
 800444c:	6823      	ldr	r3, [r4, #0]
 800444e:	b992      	cbnz	r2, 8004476 <HAL_I2C_Mem_Read+0xc6>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8004450:	9002      	str	r0, [sp, #8]
 8004452:	695a      	ldr	r2, [r3, #20]
 8004454:	9202      	str	r2, [sp, #8]
 8004456:	699a      	ldr	r2, [r3, #24]
 8004458:	9202      	str	r2, [sp, #8]
 800445a:	9a02      	ldr	r2, [sp, #8]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800445c:	681a      	ldr	r2, [r3, #0]
 800445e:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8004462:	601a      	str	r2, [r3, #0]
    hi2c->State = HAL_I2C_STATE_READY;
 8004464:	2320      	movs	r3, #32
 8004466:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
    hi2c->Mode = HAL_I2C_MODE_NONE;
 800446a:	2300      	movs	r3, #0
 800446c:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
    __HAL_UNLOCK(hi2c);
 8004470:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    return HAL_OK;
 8004474:	e7ac      	b.n	80043d0 <HAL_I2C_Mem_Read+0x20>
    else if (hi2c->XferSize == 1U)
 8004476:	2a01      	cmp	r2, #1
 8004478:	d12c      	bne.n	80044d4 <HAL_I2C_Mem_Read+0x124>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800447a:	681a      	ldr	r2, [r3, #0]
 800447c:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8004480:	601a      	str	r2, [r3, #0]
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8004482:	9003      	str	r0, [sp, #12]
 8004484:	695a      	ldr	r2, [r3, #20]
 8004486:	9203      	str	r2, [sp, #12]
 8004488:	699a      	ldr	r2, [r3, #24]
 800448a:	9203      	str	r2, [sp, #12]
 800448c:	9a03      	ldr	r2, [sp, #12]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800448e:	681a      	ldr	r2, [r3, #0]
 8004490:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8004494:	601a      	str	r2, [r3, #0]
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8004496:	f8df 812c 	ldr.w	r8, [pc, #300]	; 80045c4 <HAL_I2C_Mem_Read+0x214>
    while (hi2c->XferSize > 0U)
 800449a:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 800449c:	2b00      	cmp	r3, #0
 800449e:	d0e1      	beq.n	8004464 <HAL_I2C_Mem_Read+0xb4>
      if (hi2c->XferSize <= 3U)
 80044a0:	2b03      	cmp	r3, #3
 80044a2:	d86e      	bhi.n	8004582 <HAL_I2C_Mem_Read+0x1d2>
        if (hi2c->XferSize == 1U)
 80044a4:	2b01      	cmp	r3, #1
 80044a6:	d12d      	bne.n	8004504 <HAL_I2C_Mem_Read+0x154>
          if (I2C_WaitOnRXNEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 80044a8:	4632      	mov	r2, r6
 80044aa:	4639      	mov	r1, r7
 80044ac:	4620      	mov	r0, r4
 80044ae:	f7ff fce8 	bl	8003e82 <I2C_WaitOnRXNEFlagUntilTimeout>
 80044b2:	2800      	cmp	r0, #0
 80044b4:	d1c7      	bne.n	8004446 <HAL_I2C_Mem_Read+0x96>
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 80044b6:	6823      	ldr	r3, [r4, #0]
 80044b8:	691a      	ldr	r2, [r3, #16]
 80044ba:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80044bc:	701a      	strb	r2, [r3, #0]
          hi2c->pBuffPtr++;
 80044be:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80044c0:	3301      	adds	r3, #1
 80044c2:	6263      	str	r3, [r4, #36]	; 0x24
          hi2c->XferSize--;
 80044c4:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 80044c6:	3b01      	subs	r3, #1
 80044c8:	8523      	strh	r3, [r4, #40]	; 0x28
          hi2c->XferCount--;
 80044ca:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 80044cc:	3b01      	subs	r3, #1
 80044ce:	b29b      	uxth	r3, r3
 80044d0:	8563      	strh	r3, [r4, #42]	; 0x2a
 80044d2:	e7e2      	b.n	800449a <HAL_I2C_Mem_Read+0xea>
    else if (hi2c->XferSize == 2U)
 80044d4:	2a02      	cmp	r2, #2
 80044d6:	d10e      	bne.n	80044f6 <HAL_I2C_Mem_Read+0x146>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 80044d8:	681a      	ldr	r2, [r3, #0]
 80044da:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 80044de:	601a      	str	r2, [r3, #0]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 80044e0:	681a      	ldr	r2, [r3, #0]
 80044e2:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 80044e6:	601a      	str	r2, [r3, #0]
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 80044e8:	9004      	str	r0, [sp, #16]
 80044ea:	695a      	ldr	r2, [r3, #20]
 80044ec:	9204      	str	r2, [sp, #16]
 80044ee:	699b      	ldr	r3, [r3, #24]
 80044f0:	9304      	str	r3, [sp, #16]
 80044f2:	9b04      	ldr	r3, [sp, #16]
 80044f4:	e7cf      	b.n	8004496 <HAL_I2C_Mem_Read+0xe6>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 80044f6:	9005      	str	r0, [sp, #20]
 80044f8:	695a      	ldr	r2, [r3, #20]
 80044fa:	9205      	str	r2, [sp, #20]
 80044fc:	699b      	ldr	r3, [r3, #24]
 80044fe:	9305      	str	r3, [sp, #20]
 8004500:	9b05      	ldr	r3, [sp, #20]
 8004502:	e7c8      	b.n	8004496 <HAL_I2C_Mem_Read+0xe6>
        else if (hi2c->XferSize == 2U)
 8004504:	2b02      	cmp	r3, #2
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8004506:	9600      	str	r6, [sp, #0]
 8004508:	463b      	mov	r3, r7
 800450a:	f04f 0200 	mov.w	r2, #0
 800450e:	4641      	mov	r1, r8
 8004510:	4620      	mov	r0, r4
        else if (hi2c->XferSize == 2U)
 8004512:	d119      	bne.n	8004548 <HAL_I2C_Mem_Read+0x198>
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8004514:	f7ff fce4 	bl	8003ee0 <I2C_WaitOnFlagUntilTimeout>
 8004518:	2800      	cmp	r0, #0
 800451a:	d194      	bne.n	8004446 <HAL_I2C_Mem_Read+0x96>
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800451c:	6823      	ldr	r3, [r4, #0]
 800451e:	681a      	ldr	r2, [r3, #0]
 8004520:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8004524:	601a      	str	r2, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8004526:	691a      	ldr	r2, [r3, #16]
 8004528:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800452a:	701a      	strb	r2, [r3, #0]
          hi2c->pBuffPtr++;
 800452c:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800452e:	1c53      	adds	r3, r2, #1
 8004530:	6263      	str	r3, [r4, #36]	; 0x24
          hi2c->XferSize--;
 8004532:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 8004534:	3b01      	subs	r3, #1
 8004536:	8523      	strh	r3, [r4, #40]	; 0x28
          hi2c->XferCount--;
 8004538:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800453a:	3b01      	subs	r3, #1
 800453c:	b29b      	uxth	r3, r3
 800453e:	8563      	strh	r3, [r4, #42]	; 0x2a
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8004540:	6823      	ldr	r3, [r4, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8004542:	691b      	ldr	r3, [r3, #16]
 8004544:	7053      	strb	r3, [r2, #1]
 8004546:	e7ba      	b.n	80044be <HAL_I2C_Mem_Read+0x10e>
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8004548:	f7ff fcca 	bl	8003ee0 <I2C_WaitOnFlagUntilTimeout>
 800454c:	4602      	mov	r2, r0
 800454e:	2800      	cmp	r0, #0
 8004550:	f47f af79 	bne.w	8004446 <HAL_I2C_Mem_Read+0x96>
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8004554:	6823      	ldr	r3, [r4, #0]
 8004556:	6819      	ldr	r1, [r3, #0]
 8004558:	f421 6180 	bic.w	r1, r1, #1024	; 0x400
 800455c:	6019      	str	r1, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800455e:	6919      	ldr	r1, [r3, #16]
 8004560:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8004562:	7019      	strb	r1, [r3, #0]
          hi2c->pBuffPtr++;
 8004564:	6a63      	ldr	r3, [r4, #36]	; 0x24
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8004566:	9600      	str	r6, [sp, #0]
          hi2c->pBuffPtr++;
 8004568:	3301      	adds	r3, #1
 800456a:	6263      	str	r3, [r4, #36]	; 0x24
          hi2c->XferSize--;
 800456c:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 800456e:	3b01      	subs	r3, #1
 8004570:	8523      	strh	r3, [r4, #40]	; 0x28
          hi2c->XferCount--;
 8004572:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8004574:	3b01      	subs	r3, #1
 8004576:	b29b      	uxth	r3, r3
 8004578:	8563      	strh	r3, [r4, #42]	; 0x2a
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 800457a:	4641      	mov	r1, r8
 800457c:	463b      	mov	r3, r7
 800457e:	4620      	mov	r0, r4
 8004580:	e7c8      	b.n	8004514 <HAL_I2C_Mem_Read+0x164>
        if (I2C_WaitOnRXNEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8004582:	4632      	mov	r2, r6
 8004584:	4639      	mov	r1, r7
 8004586:	4620      	mov	r0, r4
 8004588:	f7ff fc7b 	bl	8003e82 <I2C_WaitOnRXNEFlagUntilTimeout>
 800458c:	2800      	cmp	r0, #0
 800458e:	f47f af5a 	bne.w	8004446 <HAL_I2C_Mem_Read+0x96>
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8004592:	6823      	ldr	r3, [r4, #0]
 8004594:	691a      	ldr	r2, [r3, #16]
 8004596:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8004598:	701a      	strb	r2, [r3, #0]
        hi2c->pBuffPtr++;
 800459a:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800459c:	1c53      	adds	r3, r2, #1
 800459e:	6263      	str	r3, [r4, #36]	; 0x24
        hi2c->XferSize--;
 80045a0:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 80045a2:	3b01      	subs	r3, #1
 80045a4:	8523      	strh	r3, [r4, #40]	; 0x28
        hi2c->XferCount--;
 80045a6:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 80045a8:	3b01      	subs	r3, #1
 80045aa:	b29b      	uxth	r3, r3
 80045ac:	8563      	strh	r3, [r4, #42]	; 0x2a
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 80045ae:	6823      	ldr	r3, [r4, #0]
 80045b0:	6959      	ldr	r1, [r3, #20]
 80045b2:	0749      	lsls	r1, r1, #29
 80045b4:	f57f af71 	bpl.w	800449a <HAL_I2C_Mem_Read+0xea>
 80045b8:	e7c3      	b.n	8004542 <HAL_I2C_Mem_Read+0x192>
 80045ba:	bf00      	nop
 80045bc:	00100002 	.word	0x00100002
 80045c0:	ffff0000 	.word	0xffff0000
 80045c4:	00010004 	.word	0x00010004

080045c8 <HAL_I2CEx_ConfigAnalogFilter>:
{
  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_ANALOG_FILTER(AnalogFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 80045c8:	f890 203d 	ldrb.w	r2, [r0, #61]	; 0x3d
 80045cc:	b2d2      	uxtb	r2, r2
 80045ce:	2a20      	cmp	r2, #32
{
 80045d0:	b510      	push	{r4, lr}
  if (hi2c->State == HAL_I2C_STATE_READY)
 80045d2:	d116      	bne.n	8004602 <HAL_I2CEx_ConfigAnalogFilter+0x3a>
  {
    hi2c->State = HAL_I2C_STATE_BUSY;
 80045d4:	2324      	movs	r3, #36	; 0x24
 80045d6:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d

    /* Disable the selected I2C peripheral */
    __HAL_I2C_DISABLE(hi2c);
 80045da:	6803      	ldr	r3, [r0, #0]
 80045dc:	681c      	ldr	r4, [r3, #0]
 80045de:	f024 0401 	bic.w	r4, r4, #1
 80045e2:	601c      	str	r4, [r3, #0]

    /* Reset I2Cx ANOFF bit */
    hi2c->Instance->FLTR &= ~(I2C_FLTR_ANOFF);
 80045e4:	6a5c      	ldr	r4, [r3, #36]	; 0x24
 80045e6:	f024 0410 	bic.w	r4, r4, #16
 80045ea:	625c      	str	r4, [r3, #36]	; 0x24

    /* Disable the analog filter */
    hi2c->Instance->FLTR |= AnalogFilter;
 80045ec:	6a5c      	ldr	r4, [r3, #36]	; 0x24
 80045ee:	4321      	orrs	r1, r4
 80045f0:	6259      	str	r1, [r3, #36]	; 0x24

    __HAL_I2C_ENABLE(hi2c);
 80045f2:	6819      	ldr	r1, [r3, #0]
 80045f4:	f041 0101 	orr.w	r1, r1, #1
 80045f8:	6019      	str	r1, [r3, #0]

    hi2c->State = HAL_I2C_STATE_READY;
 80045fa:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d

    return HAL_OK;
 80045fe:	2000      	movs	r0, #0
  }
  else
  {
    return HAL_BUSY;
  }
}
 8004600:	bd10      	pop	{r4, pc}
    return HAL_BUSY;
 8004602:	2002      	movs	r0, #2
 8004604:	e7fc      	b.n	8004600 <HAL_I2CEx_ConfigAnalogFilter+0x38>

08004606 <HAL_I2CEx_ConfigDigitalFilter>:
  *                the configuration information for the specified I2Cx peripheral.
  * @param  DigitalFilter Coefficient of digital noise filter between 0x00 and 0x0F.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2CEx_ConfigDigitalFilter(I2C_HandleTypeDef *hi2c, uint32_t DigitalFilter)
{
 8004606:	b530      	push	{r4, r5, lr}

  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_DIGITAL_FILTER(DigitalFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 8004608:	f890 403d 	ldrb.w	r4, [r0, #61]	; 0x3d
 800460c:	b2e4      	uxtb	r4, r4
 800460e:	2c20      	cmp	r4, #32
 8004610:	d116      	bne.n	8004640 <HAL_I2CEx_ConfigDigitalFilter+0x3a>
  {
    hi2c->State = HAL_I2C_STATE_BUSY;

    /* Disable the selected I2C peripheral */
    __HAL_I2C_DISABLE(hi2c);
 8004612:	6802      	ldr	r2, [r0, #0]
    hi2c->State = HAL_I2C_STATE_BUSY;
 8004614:	2324      	movs	r3, #36	; 0x24
 8004616:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d
    __HAL_I2C_DISABLE(hi2c);
 800461a:	6815      	ldr	r5, [r2, #0]
 800461c:	f025 0501 	bic.w	r5, r5, #1
 8004620:	6015      	str	r5, [r2, #0]

    /* Get the old register value */
    tmpreg = hi2c->Instance->FLTR;
 8004622:	6a55      	ldr	r5, [r2, #36]	; 0x24

    /* Reset I2Cx DNF bit [3:0] */
    tmpreg &= ~(I2C_FLTR_DNF);
 8004624:	f64f 73f0 	movw	r3, #65520	; 0xfff0
 8004628:	402b      	ands	r3, r5

    /* Set I2Cx DNF coefficient */
    tmpreg |= DigitalFilter;
 800462a:	430b      	orrs	r3, r1

    /* Store the new register value */
    hi2c->Instance->FLTR = tmpreg;
 800462c:	b29b      	uxth	r3, r3
 800462e:	6253      	str	r3, [r2, #36]	; 0x24

    __HAL_I2C_ENABLE(hi2c);
 8004630:	6813      	ldr	r3, [r2, #0]
 8004632:	f043 0301 	orr.w	r3, r3, #1
 8004636:	6013      	str	r3, [r2, #0]

    hi2c->State = HAL_I2C_STATE_READY;
 8004638:	f880 403d 	strb.w	r4, [r0, #61]	; 0x3d

    return HAL_OK;
 800463c:	2000      	movs	r0, #0
  }
  else
  {
    return HAL_BUSY;
  }
}
 800463e:	bd30      	pop	{r4, r5, pc}
    return HAL_BUSY;
 8004640:	2002      	movs	r0, #2
 8004642:	e7fc      	b.n	800463e <HAL_I2CEx_ConfigDigitalFilter+0x38>

08004644 <LTDC_SetConfig>:
  * @param  LayerIdx  LTDC Layer index.
  *                   This parameter can be one of the following values: LTDC_LAYER_1 (0) or LTDC_LAYER_2 (1)
  * @retval None
  */
static void LTDC_SetConfig(LTDC_HandleTypeDef *hltdc, LTDC_LayerCfgTypeDef *pLayerCfg, uint32_t LayerIdx)
{
 8004644:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  uint32_t tmp1;
  uint32_t tmp2;

  /* Configure the horizontal start and stop position */
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 8004648:	01d2      	lsls	r2, r2, #7
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 800464a:	6804      	ldr	r4, [r0, #0]
 800464c:	684f      	ldr	r7, [r1, #4]
 800464e:	68e5      	ldr	r5, [r4, #12]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 8004650:	f8d1 c000 	ldr.w	ip, [r1]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);

  /* Configure the default color values */
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
  tmp2 = (pLayerCfg->Alpha0 << 24U);
 8004654:	f8d1 9018 	ldr.w	r9, [r1, #24]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 8004658:	3284      	adds	r2, #132	; 0x84
 800465a:	18a3      	adds	r3, r4, r2
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 800465c:	f10c 0601 	add.w	r6, ip, #1
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 8004660:	6858      	ldr	r0, [r3, #4]
 8004662:	f400 4070 	and.w	r0, r0, #61440	; 0xf000
 8004666:	6058      	str	r0, [r3, #4]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 8004668:	68e0      	ldr	r0, [r4, #12]
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 800466a:	f3c5 450b 	ubfx	r5, r5, #16, #12
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 800466e:	f3c0 400b 	ubfx	r0, r0, #16, #12
 8004672:	4430      	add	r0, r6
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8004674:	443d      	add	r5, r7
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 8004676:	ea40 4005 	orr.w	r0, r0, r5, lsl #16
 800467a:	6058      	str	r0, [r3, #4]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 800467c:	68e0      	ldr	r0, [r4, #12]
 800467e:	68cd      	ldr	r5, [r1, #12]
 8004680:	f3c0 000a 	ubfx	r0, r0, #0, #11
 8004684:	4405      	add	r5, r0
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR &= ~(LTDC_LxWVPCR_WVSTPOS | LTDC_LxWVPCR_WVSPPOS);
 8004686:	6898      	ldr	r0, [r3, #8]
 8004688:	f400 4070 	and.w	r0, r0, #61440	; 0xf000
 800468c:	6098      	str	r0, [r3, #8]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
 800468e:	68e6      	ldr	r6, [r4, #12]
 8004690:	6888      	ldr	r0, [r1, #8]
 8004692:	f3c6 060a 	ubfx	r6, r6, #0, #11
 8004696:	3001      	adds	r0, #1
 8004698:	4430      	add	r0, r6
 800469a:	ea40 4005 	orr.w	r0, r0, r5, lsl #16
 800469e:	6098      	str	r0, [r3, #8]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 80046a0:	6918      	ldr	r0, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 80046a2:	690e      	ldr	r6, [r1, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 80046a4:	f020 0007 	bic.w	r0, r0, #7
 80046a8:	6118      	str	r0, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED | LTDC_LxDCCR_DCALPHA);
 80046aa:	f04f 0e00 	mov.w	lr, #0
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 80046ae:	611e      	str	r6, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED | LTDC_LxDCCR_DCALPHA);
 80046b0:	699d      	ldr	r5, [r3, #24]
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
 80046b2:	f891 0032 	ldrb.w	r0, [r1, #50]	; 0x32
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
 80046b6:	f891 8031 	ldrb.w	r8, [r1, #49]	; 0x31
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED | LTDC_LxDCCR_DCALPHA);
 80046ba:	f8c3 e018 	str.w	lr, [r3, #24]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR = (pLayerCfg->Backcolor.Blue | tmp | tmp1 | tmp2);
 80046be:	f891 5030 	ldrb.w	r5, [r1, #48]	; 0x30
 80046c2:	ea45 6509 	orr.w	r5, r5, r9, lsl #24
 80046c6:	ea45 2508 	orr.w	r5, r5, r8, lsl #8
 80046ca:	ea45 4500 	orr.w	r5, r5, r0, lsl #16
 80046ce:	619d      	str	r5, [r3, #24]

  /* Specifies the constant alpha value */
  LTDC_LAYER(hltdc, LayerIdx)->CACR &= ~(LTDC_LxCACR_CONSTA);
 80046d0:	6958      	ldr	r0, [r3, #20]
 80046d2:	f020 00ff 	bic.w	r0, r0, #255	; 0xff
 80046d6:	6158      	str	r0, [r3, #20]
  LTDC_LAYER(hltdc, LayerIdx)->CACR = (pLayerCfg->Alpha);
 80046d8:	6948      	ldr	r0, [r1, #20]
 80046da:	6158      	str	r0, [r3, #20]

  /* Specifies the blending factors */
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
 80046dc:	69d8      	ldr	r0, [r3, #28]
 80046de:	f420 60e0 	bic.w	r0, r0, #1792	; 0x700
 80046e2:	f020 0007 	bic.w	r0, r0, #7
 80046e6:	61d8      	str	r0, [r3, #28]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR = (pLayerCfg->BlendingFactor1 | pLayerCfg->BlendingFactor2);
 80046e8:	e9d1 5007 	ldrd	r5, r0, [r1, #28]
 80046ec:	4305      	orrs	r5, r0
 80046ee:	61dd      	str	r5, [r3, #28]

  /* Configure the color frame buffer start address */
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 80046f0:	6a98      	ldr	r0, [r3, #40]	; 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 80046f2:	6a48      	ldr	r0, [r1, #36]	; 0x24
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 80046f4:	f8c3 e028 	str.w	lr, [r3, #40]	; 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 80046f8:	6298      	str	r0, [r3, #40]	; 0x28

  if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
 80046fa:	b31e      	cbz	r6, 8004744 <LTDC_SetConfig+0x100>
  {
    tmp = 4U;
  }
  else if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_RGB888)
 80046fc:	2e01      	cmp	r6, #1
 80046fe:	d023      	beq.n	8004748 <LTDC_SetConfig+0x104>
  {
    tmp = 3U;
  }
  else if ((pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB4444) || \
 8004700:	1eb0      	subs	r0, r6, #2
 8004702:	2802      	cmp	r0, #2
 8004704:	d922      	bls.n	800474c <LTDC_SetConfig+0x108>
           (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_RGB565)   || \
           (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB1555) || \
 8004706:	2e07      	cmp	r6, #7
  {
    tmp = 2U;
  }
  else
  {
    tmp = 1U;
 8004708:	bf0c      	ite	eq
 800470a:	2002      	moveq	r0, #2
 800470c:	2001      	movne	r0, #1
  }

  /* Configure the color frame buffer pitch in byte */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
 800470e:	6add      	ldr	r5, [r3, #44]	; 0x2c
 8004710:	f005 25e0 	and.w	r5, r5, #3758153728	; 0xe000e000
 8004714:	62dd      	str	r5, [r3, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 8004716:	6a8d      	ldr	r5, [r1, #40]	; 0x28
  /* Configure the frame buffer line number */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 8004718:	6ac9      	ldr	r1, [r1, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 800471a:	eba7 070c 	sub.w	r7, r7, ip
 800471e:	4345      	muls	r5, r0
 8004720:	4378      	muls	r0, r7
 8004722:	3003      	adds	r0, #3
 8004724:	ea40 4005 	orr.w	r0, r0, r5, lsl #16
 8004728:	62d8      	str	r0, [r3, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
 800472a:	6b18      	ldr	r0, [r3, #48]	; 0x30
 800472c:	f420 60ff 	bic.w	r0, r0, #2040	; 0x7f8
 8004730:	f020 0007 	bic.w	r0, r0, #7
 8004734:	6318      	str	r0, [r3, #48]	; 0x30
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 8004736:	6319      	str	r1, [r3, #48]	; 0x30

  /* Enable LTDC_Layer by setting LEN bit */
  LTDC_LAYER(hltdc, LayerIdx)->CR |= (uint32_t)LTDC_LxCR_LEN;
 8004738:	58a3      	ldr	r3, [r4, r2]
 800473a:	f043 0301 	orr.w	r3, r3, #1
 800473e:	50a3      	str	r3, [r4, r2]
}
 8004740:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    tmp = 4U;
 8004744:	2004      	movs	r0, #4
 8004746:	e7e2      	b.n	800470e <LTDC_SetConfig+0xca>
    tmp = 3U;
 8004748:	2003      	movs	r0, #3
 800474a:	e7e0      	b.n	800470e <LTDC_SetConfig+0xca>
    tmp = 2U;
 800474c:	2002      	movs	r0, #2
 800474e:	e7de      	b.n	800470e <LTDC_SetConfig+0xca>

08004750 <HAL_LTDC_Init>:
{
 8004750:	b538      	push	{r3, r4, r5, lr}
  if (hltdc == NULL)
 8004752:	4604      	mov	r4, r0
 8004754:	2800      	cmp	r0, #0
 8004756:	d063      	beq.n	8004820 <HAL_LTDC_Init+0xd0>
  if (hltdc->State == HAL_LTDC_STATE_RESET)
 8004758:	f890 30a1 	ldrb.w	r3, [r0, #161]	; 0xa1
 800475c:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8004760:	b91b      	cbnz	r3, 800476a <HAL_LTDC_Init+0x1a>
    hltdc->Lock = HAL_UNLOCKED;
 8004762:	f880 20a0 	strb.w	r2, [r0, #160]	; 0xa0
    HAL_LTDC_MspInit(hltdc);
 8004766:	f7fd f9e9 	bl	8001b3c <HAL_LTDC_MspInit>
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800476a:	2302      	movs	r3, #2
 800476c:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
 8004770:	6823      	ldr	r3, [r4, #0]
 8004772:	699a      	ldr	r2, [r3, #24]
 8004774:	f022 4270 	bic.w	r2, r2, #4026531840	; 0xf0000000
 8004778:	619a      	str	r2, [r3, #24]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 800477a:	e9d4 2001 	ldrd	r2, r0, [r4, #4]
 800477e:	4302      	orrs	r2, r0
 8004780:	68e0      	ldr	r0, [r4, #12]
 8004782:	6999      	ldr	r1, [r3, #24]
 8004784:	4302      	orrs	r2, r0
                                     hltdc->Init.DEPolarity | hltdc->Init.PCPolarity);
 8004786:	6920      	ldr	r0, [r4, #16]
 8004788:	4302      	orrs	r2, r0
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 800478a:	430a      	orrs	r2, r1
 800478c:	619a      	str	r2, [r3, #24]
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 800478e:	689a      	ldr	r2, [r3, #8]
 8004790:	4924      	ldr	r1, [pc, #144]	; (8004824 <HAL_LTDC_Init+0xd4>)
  tmp = (hltdc->Init.HorizontalSync << 16U);
 8004792:	6960      	ldr	r0, [r4, #20]
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 8004794:	400a      	ands	r2, r1
 8004796:	609a      	str	r2, [r3, #8]
  hltdc->Instance->SSCR |= (tmp | hltdc->Init.VerticalSync);
 8004798:	689a      	ldr	r2, [r3, #8]
 800479a:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800479e:	69a0      	ldr	r0, [r4, #24]
 80047a0:	4302      	orrs	r2, r0
 80047a2:	609a      	str	r2, [r3, #8]
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 80047a4:	68da      	ldr	r2, [r3, #12]
  tmp = (hltdc->Init.AccumulatedHBP << 16U);
 80047a6:	69e0      	ldr	r0, [r4, #28]
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 80047a8:	400a      	ands	r2, r1
 80047aa:	60da      	str	r2, [r3, #12]
  hltdc->Instance->BPCR |= (tmp | hltdc->Init.AccumulatedVBP);
 80047ac:	68da      	ldr	r2, [r3, #12]
 80047ae:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 80047b2:	6a20      	ldr	r0, [r4, #32]
 80047b4:	4302      	orrs	r2, r0
 80047b6:	60da      	str	r2, [r3, #12]
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 80047b8:	691a      	ldr	r2, [r3, #16]
  tmp = (hltdc->Init.AccumulatedActiveW << 16U);
 80047ba:	6a60      	ldr	r0, [r4, #36]	; 0x24
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 80047bc:	400a      	ands	r2, r1
 80047be:	611a      	str	r2, [r3, #16]
  hltdc->Instance->AWCR |= (tmp | hltdc->Init.AccumulatedActiveH);
 80047c0:	691a      	ldr	r2, [r3, #16]
 80047c2:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 80047c6:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 80047c8:	4302      	orrs	r2, r0
 80047ca:	611a      	str	r2, [r3, #16]
  hltdc->Instance->TWCR &= ~(LTDC_TWCR_TOTALH | LTDC_TWCR_TOTALW);
 80047cc:	695a      	ldr	r2, [r3, #20]
 80047ce:	4011      	ands	r1, r2
 80047d0:	6159      	str	r1, [r3, #20]
  hltdc->Instance->TWCR |= (tmp | hltdc->Init.TotalHeigh);
 80047d2:	695a      	ldr	r2, [r3, #20]
  tmp = (hltdc->Init.TotalWidth << 16U);
 80047d4:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
  hltdc->Instance->TWCR |= (tmp | hltdc->Init.TotalHeigh);
 80047d6:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 80047da:	6b21      	ldr	r1, [r4, #48]	; 0x30
 80047dc:	430a      	orrs	r2, r1
 80047de:	615a      	str	r2, [r3, #20]
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 80047e0:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
  tmp1 = ((uint32_t)(hltdc->Init.Backcolor.Red) << 16U);
 80047e2:	f894 0036 	ldrb.w	r0, [r4, #54]	; 0x36
  tmp = ((uint32_t)(hltdc->Init.Backcolor.Green) << 8U);
 80047e6:	f894 5035 	ldrb.w	r5, [r4, #53]	; 0x35
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 80047ea:	f001 417f 	and.w	r1, r1, #4278190080	; 0xff000000
 80047ee:	62d9      	str	r1, [r3, #44]	; 0x2c
  hltdc->Instance->BCCR |= (tmp1 | tmp | hltdc->Init.Backcolor.Blue);
 80047f0:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 80047f2:	f894 2034 	ldrb.w	r2, [r4, #52]	; 0x34
 80047f6:	430a      	orrs	r2, r1
 80047f8:	ea42 2205 	orr.w	r2, r2, r5, lsl #8
 80047fc:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 8004800:	62da      	str	r2, [r3, #44]	; 0x2c
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_TE | LTDC_IT_FU);
 8004802:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8004804:	f042 0206 	orr.w	r2, r2, #6
 8004808:	635a      	str	r2, [r3, #52]	; 0x34
  __HAL_LTDC_ENABLE(hltdc);
 800480a:	699a      	ldr	r2, [r3, #24]
 800480c:	f042 0201 	orr.w	r2, r2, #1
 8004810:	619a      	str	r2, [r3, #24]
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 8004812:	2000      	movs	r0, #0
  hltdc->State = HAL_LTDC_STATE_READY;
 8004814:	2301      	movs	r3, #1
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 8004816:	f8c4 00a4 	str.w	r0, [r4, #164]	; 0xa4
  hltdc->State = HAL_LTDC_STATE_READY;
 800481a:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
}
 800481e:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 8004820:	2001      	movs	r0, #1
 8004822:	e7fc      	b.n	800481e <HAL_LTDC_Init+0xce>
 8004824:	f000f800 	.word	0xf000f800

08004828 <HAL_LTDC_ErrorCallback>:
 8004828:	4770      	bx	lr

0800482a <HAL_LTDC_ReloadEventCallback>:
 800482a:	4770      	bx	lr

0800482c <HAL_LTDC_IRQHandler>:
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 800482c:	6803      	ldr	r3, [r0, #0]
{
 800482e:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 8004830:	6b9e      	ldr	r6, [r3, #56]	; 0x38
  uint32_t itsources = READ_REG(hltdc->Instance->IER);
 8004832:	6b5d      	ldr	r5, [r3, #52]	; 0x34
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 8004834:	0772      	lsls	r2, r6, #29
{
 8004836:	4604      	mov	r4, r0
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 8004838:	d514      	bpl.n	8004864 <HAL_LTDC_IRQHandler+0x38>
 800483a:	0769      	lsls	r1, r5, #29
 800483c:	d512      	bpl.n	8004864 <HAL_LTDC_IRQHandler+0x38>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_TE);
 800483e:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8004840:	f022 0204 	bic.w	r2, r2, #4
 8004844:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_TE);
 8004846:	2204      	movs	r2, #4
 8004848:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_TE;
 800484a:	f8d0 30a4 	ldr.w	r3, [r0, #164]	; 0xa4
 800484e:	f043 0301 	orr.w	r3, r3, #1
 8004852:	f8c0 30a4 	str.w	r3, [r0, #164]	; 0xa4
    __HAL_UNLOCK(hltdc);
 8004856:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_ERROR;
 8004858:	f880 20a1 	strb.w	r2, [r0, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 800485c:	f880 30a0 	strb.w	r3, [r0, #160]	; 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 8004860:	f7ff ffe2 	bl	8004828 <HAL_LTDC_ErrorCallback>
  if (((isrflags & LTDC_ISR_FUIF) != 0U) && ((itsources & LTDC_IER_FUIE) != 0U))
 8004864:	07b2      	lsls	r2, r6, #30
 8004866:	d516      	bpl.n	8004896 <HAL_LTDC_IRQHandler+0x6a>
 8004868:	07ab      	lsls	r3, r5, #30
 800486a:	d514      	bpl.n	8004896 <HAL_LTDC_IRQHandler+0x6a>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_FU);
 800486c:	6823      	ldr	r3, [r4, #0]
 800486e:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8004870:	f022 0202 	bic.w	r2, r2, #2
 8004874:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_FU);
 8004876:	2202      	movs	r2, #2
 8004878:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_FU;
 800487a:	f8d4 30a4 	ldr.w	r3, [r4, #164]	; 0xa4
 800487e:	4313      	orrs	r3, r2
 8004880:	f8c4 30a4 	str.w	r3, [r4, #164]	; 0xa4
    hltdc->State = HAL_LTDC_STATE_ERROR;
 8004884:	2304      	movs	r3, #4
 8004886:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 800488a:	2300      	movs	r3, #0
 800488c:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 8004890:	4620      	mov	r0, r4
 8004892:	f7ff ffc9 	bl	8004828 <HAL_LTDC_ErrorCallback>
  if (((isrflags & LTDC_ISR_LIF) != 0U) && ((itsources & LTDC_IER_LIE) != 0U))
 8004896:	07f0      	lsls	r0, r6, #31
 8004898:	d510      	bpl.n	80048bc <HAL_LTDC_IRQHandler+0x90>
 800489a:	07e9      	lsls	r1, r5, #31
 800489c:	d50e      	bpl.n	80048bc <HAL_LTDC_IRQHandler+0x90>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 800489e:	6823      	ldr	r3, [r4, #0]
 80048a0:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 80048a2:	f022 0201 	bic.w	r2, r2, #1
 80048a6:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_LI);
 80048a8:	2201      	movs	r2, #1
 80048aa:	63da      	str	r2, [r3, #60]	; 0x3c
    __HAL_UNLOCK(hltdc);
 80048ac:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_READY;
 80048ae:	f884 20a1 	strb.w	r2, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 80048b2:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_LineEventCallback(hltdc);
 80048b6:	4620      	mov	r0, r4
 80048b8:	f7fc fc7c 	bl	80011b4 <HAL_LTDC_LineEventCallback>
  if (((isrflags & LTDC_ISR_RRIF) != 0U) && ((itsources & LTDC_IER_RRIE) != 0U))
 80048bc:	0732      	lsls	r2, r6, #28
 80048be:	d511      	bpl.n	80048e4 <HAL_LTDC_IRQHandler+0xb8>
 80048c0:	072b      	lsls	r3, r5, #28
 80048c2:	d50f      	bpl.n	80048e4 <HAL_LTDC_IRQHandler+0xb8>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
 80048c4:	6823      	ldr	r3, [r4, #0]
 80048c6:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 80048c8:	f022 0208 	bic.w	r2, r2, #8
 80048cc:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_RR);
 80048ce:	2208      	movs	r2, #8
 80048d0:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->State = HAL_LTDC_STATE_READY;
 80048d2:	2301      	movs	r3, #1
 80048d4:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 80048d8:	2300      	movs	r3, #0
 80048da:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_ReloadEventCallback(hltdc);
 80048de:	4620      	mov	r0, r4
 80048e0:	f7ff ffa3 	bl	800482a <HAL_LTDC_ReloadEventCallback>
}
 80048e4:	bd70      	pop	{r4, r5, r6, pc}

080048e6 <HAL_LTDC_ConfigLayer>:
{
 80048e6:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  __HAL_LOCK(hltdc);
 80048e8:	f890 30a0 	ldrb.w	r3, [r0, #160]	; 0xa0
 80048ec:	2b01      	cmp	r3, #1
{
 80048ee:	4606      	mov	r6, r0
 80048f0:	468c      	mov	ip, r1
 80048f2:	4696      	mov	lr, r2
 80048f4:	f04f 0002 	mov.w	r0, #2
  __HAL_LOCK(hltdc);
 80048f8:	d01d      	beq.n	8004936 <HAL_LTDC_ConfigLayer+0x50>
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 80048fa:	2434      	movs	r4, #52	; 0x34
 80048fc:	460d      	mov	r5, r1
  hltdc->State = HAL_LTDC_STATE_BUSY;
 80048fe:	f886 00a1 	strb.w	r0, [r6, #161]	; 0xa1
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 8004902:	fb04 6402 	mla	r4, r4, r2, r6
 8004906:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
  __HAL_LOCK(hltdc);
 8004908:	2701      	movs	r7, #1
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 800490a:	3438      	adds	r4, #56	; 0x38
  __HAL_LOCK(hltdc);
 800490c:	f886 70a0 	strb.w	r7, [r6, #160]	; 0xa0
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 8004910:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8004912:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8004914:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8004916:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8004918:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800491a:	682b      	ldr	r3, [r5, #0]
 800491c:	6023      	str	r3, [r4, #0]
  LTDC_SetConfig(hltdc, pLayerCfg, LayerIdx);
 800491e:	4630      	mov	r0, r6
 8004920:	4672      	mov	r2, lr
 8004922:	4661      	mov	r1, ip
 8004924:	f7ff fe8e 	bl	8004644 <LTDC_SetConfig>
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 8004928:	6833      	ldr	r3, [r6, #0]
  __HAL_UNLOCK(hltdc);
 800492a:	2000      	movs	r0, #0
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 800492c:	625f      	str	r7, [r3, #36]	; 0x24
  hltdc->State  = HAL_LTDC_STATE_READY;
 800492e:	f886 70a1 	strb.w	r7, [r6, #161]	; 0xa1
  __HAL_UNLOCK(hltdc);
 8004932:	f886 00a0 	strb.w	r0, [r6, #160]	; 0xa0
}
 8004936:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08004938 <HAL_LTDC_ProgramLineEvent>:
  __HAL_LOCK(hltdc);
 8004938:	f890 30a0 	ldrb.w	r3, [r0, #160]	; 0xa0
 800493c:	2b01      	cmp	r3, #1
 800493e:	f04f 0302 	mov.w	r3, #2
 8004942:	d012      	beq.n	800496a <HAL_LTDC_ProgramLineEvent+0x32>
  hltdc->State = HAL_LTDC_STATE_BUSY;
 8004944:	f880 30a1 	strb.w	r3, [r0, #161]	; 0xa1
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 8004948:	6803      	ldr	r3, [r0, #0]
 800494a:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800494c:	f022 0201 	bic.w	r2, r2, #1
 8004950:	635a      	str	r2, [r3, #52]	; 0x34
  LTDC->LIPCR = (uint32_t)Line;
 8004952:	4a07      	ldr	r2, [pc, #28]	; (8004970 <HAL_LTDC_ProgramLineEvent+0x38>)
 8004954:	6411      	str	r1, [r2, #64]	; 0x40
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_LI);
 8004956:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8004958:	f042 0201 	orr.w	r2, r2, #1
 800495c:	635a      	str	r2, [r3, #52]	; 0x34
  hltdc->State = HAL_LTDC_STATE_READY;
 800495e:	2301      	movs	r3, #1
 8004960:	f880 30a1 	strb.w	r3, [r0, #161]	; 0xa1
  __HAL_UNLOCK(hltdc);
 8004964:	2300      	movs	r3, #0
 8004966:	f880 30a0 	strb.w	r3, [r0, #160]	; 0xa0
  __HAL_LOCK(hltdc);
 800496a:	4618      	mov	r0, r3
}
 800496c:	4770      	bx	lr
 800496e:	bf00      	nop
 8004970:	40016800 	.word	0x40016800

08004974 <HAL_RCC_OscConfig>:
  *         supported by this API. User should request a transition to HSE Off
  *         first and then HSE On or HSE Bypass.
  * @retval HAL status
  */
__weak HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
{
 8004974:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
  uint32_t tickstart, pll_config;

  /* Check Null pointer */
  if(RCC_OscInitStruct == NULL)
 8004978:	4604      	mov	r4, r0
 800497a:	b908      	cbnz	r0, 8004980 <HAL_RCC_OscConfig+0xc>
    else
    {
      /* Check if there is a request to disable the PLL used as System clock source */
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
      {
        return HAL_ERROR;
 800497c:	2001      	movs	r0, #1
 800497e:	e03f      	b.n	8004a00 <HAL_RCC_OscConfig+0x8c>
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 8004980:	6803      	ldr	r3, [r0, #0]
 8004982:	07dd      	lsls	r5, r3, #31
 8004984:	d410      	bmi.n	80049a8 <HAL_RCC_OscConfig+0x34>
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 8004986:	6823      	ldr	r3, [r4, #0]
 8004988:	0798      	lsls	r0, r3, #30
 800498a:	d45a      	bmi.n	8004a42 <HAL_RCC_OscConfig+0xce>
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 800498c:	6823      	ldr	r3, [r4, #0]
 800498e:	071a      	lsls	r2, r3, #28
 8004990:	f100 809c 	bmi.w	8004acc <HAL_RCC_OscConfig+0x158>
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 8004994:	6823      	ldr	r3, [r4, #0]
 8004996:	075b      	lsls	r3, r3, #29
 8004998:	f100 80ba 	bmi.w	8004b10 <HAL_RCC_OscConfig+0x19c>
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 800499c:	69a0      	ldr	r0, [r4, #24]
 800499e:	2800      	cmp	r0, #0
 80049a0:	f040 811b 	bne.w	8004bda <HAL_RCC_OscConfig+0x266>
          return HAL_ERROR;
        }
      }
    }
  }
  return HAL_OK;
 80049a4:	2000      	movs	r0, #0
 80049a6:	e02b      	b.n	8004a00 <HAL_RCC_OscConfig+0x8c>
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) ||\
 80049a8:	4ba7      	ldr	r3, [pc, #668]	; (8004c48 <HAL_RCC_OscConfig+0x2d4>)
 80049aa:	689a      	ldr	r2, [r3, #8]
 80049ac:	f002 020c 	and.w	r2, r2, #12
 80049b0:	2a04      	cmp	r2, #4
 80049b2:	d007      	beq.n	80049c4 <HAL_RCC_OscConfig+0x50>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 80049b4:	689a      	ldr	r2, [r3, #8]
 80049b6:	f002 020c 	and.w	r2, r2, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) ||\
 80049ba:	2a08      	cmp	r2, #8
 80049bc:	d10a      	bne.n	80049d4 <HAL_RCC_OscConfig+0x60>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 80049be:	685b      	ldr	r3, [r3, #4]
 80049c0:	0259      	lsls	r1, r3, #9
 80049c2:	d507      	bpl.n	80049d4 <HAL_RCC_OscConfig+0x60>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 80049c4:	4ba0      	ldr	r3, [pc, #640]	; (8004c48 <HAL_RCC_OscConfig+0x2d4>)
 80049c6:	681b      	ldr	r3, [r3, #0]
 80049c8:	039a      	lsls	r2, r3, #14
 80049ca:	d5dc      	bpl.n	8004986 <HAL_RCC_OscConfig+0x12>
 80049cc:	6863      	ldr	r3, [r4, #4]
 80049ce:	2b00      	cmp	r3, #0
 80049d0:	d1d9      	bne.n	8004986 <HAL_RCC_OscConfig+0x12>
 80049d2:	e7d3      	b.n	800497c <HAL_RCC_OscConfig+0x8>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 80049d4:	6863      	ldr	r3, [r4, #4]
 80049d6:	4d9c      	ldr	r5, [pc, #624]	; (8004c48 <HAL_RCC_OscConfig+0x2d4>)
 80049d8:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 80049dc:	d113      	bne.n	8004a06 <HAL_RCC_OscConfig+0x92>
 80049de:	682b      	ldr	r3, [r5, #0]
 80049e0:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 80049e4:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
 80049e6:	f7fe fd6d 	bl	80034c4 <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 80049ea:	4d97      	ldr	r5, [pc, #604]	; (8004c48 <HAL_RCC_OscConfig+0x2d4>)
        tickstart = HAL_GetTick();
 80049ec:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 80049ee:	682b      	ldr	r3, [r5, #0]
 80049f0:	039b      	lsls	r3, r3, #14
 80049f2:	d4c8      	bmi.n	8004986 <HAL_RCC_OscConfig+0x12>
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 80049f4:	f7fe fd66 	bl	80034c4 <HAL_GetTick>
 80049f8:	1b80      	subs	r0, r0, r6
 80049fa:	2864      	cmp	r0, #100	; 0x64
 80049fc:	d9f7      	bls.n	80049ee <HAL_RCC_OscConfig+0x7a>
            return HAL_TIMEOUT;
 80049fe:	2003      	movs	r0, #3
}
 8004a00:	b002      	add	sp, #8
 8004a02:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 8004a06:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 8004a0a:	d104      	bne.n	8004a16 <HAL_RCC_OscConfig+0xa2>
 8004a0c:	682b      	ldr	r3, [r5, #0]
 8004a0e:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 8004a12:	602b      	str	r3, [r5, #0]
 8004a14:	e7e3      	b.n	80049de <HAL_RCC_OscConfig+0x6a>
 8004a16:	682a      	ldr	r2, [r5, #0]
 8004a18:	f422 3280 	bic.w	r2, r2, #65536	; 0x10000
 8004a1c:	602a      	str	r2, [r5, #0]
 8004a1e:	682a      	ldr	r2, [r5, #0]
 8004a20:	f422 2280 	bic.w	r2, r2, #262144	; 0x40000
 8004a24:	602a      	str	r2, [r5, #0]
      if((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 8004a26:	2b00      	cmp	r3, #0
 8004a28:	d1dd      	bne.n	80049e6 <HAL_RCC_OscConfig+0x72>
        tickstart = HAL_GetTick();
 8004a2a:	f7fe fd4b 	bl	80034c4 <HAL_GetTick>
 8004a2e:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 8004a30:	682b      	ldr	r3, [r5, #0]
 8004a32:	039f      	lsls	r7, r3, #14
 8004a34:	d5a7      	bpl.n	8004986 <HAL_RCC_OscConfig+0x12>
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 8004a36:	f7fe fd45 	bl	80034c4 <HAL_GetTick>
 8004a3a:	1b80      	subs	r0, r0, r6
 8004a3c:	2864      	cmp	r0, #100	; 0x64
 8004a3e:	d9f7      	bls.n	8004a30 <HAL_RCC_OscConfig+0xbc>
 8004a40:	e7dd      	b.n	80049fe <HAL_RCC_OscConfig+0x8a>
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) ||\
 8004a42:	4b81      	ldr	r3, [pc, #516]	; (8004c48 <HAL_RCC_OscConfig+0x2d4>)
 8004a44:	689a      	ldr	r2, [r3, #8]
 8004a46:	f012 0f0c 	tst.w	r2, #12
 8004a4a:	d007      	beq.n	8004a5c <HAL_RCC_OscConfig+0xe8>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 8004a4c:	689a      	ldr	r2, [r3, #8]
 8004a4e:	f002 020c 	and.w	r2, r2, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) ||\
 8004a52:	2a08      	cmp	r2, #8
 8004a54:	d111      	bne.n	8004a7a <HAL_RCC_OscConfig+0x106>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 8004a56:	685b      	ldr	r3, [r3, #4]
 8004a58:	025e      	lsls	r6, r3, #9
 8004a5a:	d40e      	bmi.n	8004a7a <HAL_RCC_OscConfig+0x106>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 8004a5c:	4b7a      	ldr	r3, [pc, #488]	; (8004c48 <HAL_RCC_OscConfig+0x2d4>)
 8004a5e:	681a      	ldr	r2, [r3, #0]
 8004a60:	0795      	lsls	r5, r2, #30
 8004a62:	d502      	bpl.n	8004a6a <HAL_RCC_OscConfig+0xf6>
 8004a64:	68e2      	ldr	r2, [r4, #12]
 8004a66:	2a01      	cmp	r2, #1
 8004a68:	d188      	bne.n	800497c <HAL_RCC_OscConfig+0x8>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 8004a6a:	681a      	ldr	r2, [r3, #0]
 8004a6c:	6921      	ldr	r1, [r4, #16]
 8004a6e:	f022 02f8 	bic.w	r2, r2, #248	; 0xf8
 8004a72:	ea42 02c1 	orr.w	r2, r2, r1, lsl #3
 8004a76:	601a      	str	r2, [r3, #0]
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 8004a78:	e788      	b.n	800498c <HAL_RCC_OscConfig+0x18>
      if((RCC_OscInitStruct->HSIState)!= RCC_HSI_OFF)
 8004a7a:	68e2      	ldr	r2, [r4, #12]
 8004a7c:	4b73      	ldr	r3, [pc, #460]	; (8004c4c <HAL_RCC_OscConfig+0x2d8>)
 8004a7e:	b1b2      	cbz	r2, 8004aae <HAL_RCC_OscConfig+0x13a>
        __HAL_RCC_HSI_ENABLE();
 8004a80:	2201      	movs	r2, #1
 8004a82:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 8004a84:	f7fe fd1e 	bl	80034c4 <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8004a88:	4d6f      	ldr	r5, [pc, #444]	; (8004c48 <HAL_RCC_OscConfig+0x2d4>)
        tickstart = HAL_GetTick();
 8004a8a:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8004a8c:	682b      	ldr	r3, [r5, #0]
 8004a8e:	0798      	lsls	r0, r3, #30
 8004a90:	d507      	bpl.n	8004aa2 <HAL_RCC_OscConfig+0x12e>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 8004a92:	682b      	ldr	r3, [r5, #0]
 8004a94:	6922      	ldr	r2, [r4, #16]
 8004a96:	f023 03f8 	bic.w	r3, r3, #248	; 0xf8
 8004a9a:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 8004a9e:	602b      	str	r3, [r5, #0]
 8004aa0:	e774      	b.n	800498c <HAL_RCC_OscConfig+0x18>
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 8004aa2:	f7fe fd0f 	bl	80034c4 <HAL_GetTick>
 8004aa6:	1b80      	subs	r0, r0, r6
 8004aa8:	2802      	cmp	r0, #2
 8004aaa:	d9ef      	bls.n	8004a8c <HAL_RCC_OscConfig+0x118>
 8004aac:	e7a7      	b.n	80049fe <HAL_RCC_OscConfig+0x8a>
        __HAL_RCC_HSI_DISABLE();
 8004aae:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 8004ab0:	f7fe fd08 	bl	80034c4 <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 8004ab4:	4d64      	ldr	r5, [pc, #400]	; (8004c48 <HAL_RCC_OscConfig+0x2d4>)
        tickstart = HAL_GetTick();
 8004ab6:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 8004ab8:	682b      	ldr	r3, [r5, #0]
 8004aba:	0799      	lsls	r1, r3, #30
 8004abc:	f57f af66 	bpl.w	800498c <HAL_RCC_OscConfig+0x18>
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 8004ac0:	f7fe fd00 	bl	80034c4 <HAL_GetTick>
 8004ac4:	1b80      	subs	r0, r0, r6
 8004ac6:	2802      	cmp	r0, #2
 8004ac8:	d9f6      	bls.n	8004ab8 <HAL_RCC_OscConfig+0x144>
 8004aca:	e798      	b.n	80049fe <HAL_RCC_OscConfig+0x8a>
    if((RCC_OscInitStruct->LSIState)!= RCC_LSI_OFF)
 8004acc:	6962      	ldr	r2, [r4, #20]
 8004ace:	4b60      	ldr	r3, [pc, #384]	; (8004c50 <HAL_RCC_OscConfig+0x2dc>)
 8004ad0:	b17a      	cbz	r2, 8004af2 <HAL_RCC_OscConfig+0x17e>
      __HAL_RCC_LSI_ENABLE();
 8004ad2:	2201      	movs	r2, #1
 8004ad4:	601a      	str	r2, [r3, #0]
      tickstart = HAL_GetTick();
 8004ad6:	f7fe fcf5 	bl	80034c4 <HAL_GetTick>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 8004ada:	4d5b      	ldr	r5, [pc, #364]	; (8004c48 <HAL_RCC_OscConfig+0x2d4>)
      tickstart = HAL_GetTick();
 8004adc:	4606      	mov	r6, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 8004ade:	6f6b      	ldr	r3, [r5, #116]	; 0x74
 8004ae0:	079f      	lsls	r7, r3, #30
 8004ae2:	f53f af57 	bmi.w	8004994 <HAL_RCC_OscConfig+0x20>
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 8004ae6:	f7fe fced 	bl	80034c4 <HAL_GetTick>
 8004aea:	1b80      	subs	r0, r0, r6
 8004aec:	2802      	cmp	r0, #2
 8004aee:	d9f6      	bls.n	8004ade <HAL_RCC_OscConfig+0x16a>
 8004af0:	e785      	b.n	80049fe <HAL_RCC_OscConfig+0x8a>
      __HAL_RCC_LSI_DISABLE();
 8004af2:	601a      	str	r2, [r3, #0]
      tickstart = HAL_GetTick();
 8004af4:	f7fe fce6 	bl	80034c4 <HAL_GetTick>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 8004af8:	4d53      	ldr	r5, [pc, #332]	; (8004c48 <HAL_RCC_OscConfig+0x2d4>)
      tickstart = HAL_GetTick();
 8004afa:	4606      	mov	r6, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 8004afc:	6f6b      	ldr	r3, [r5, #116]	; 0x74
 8004afe:	0798      	lsls	r0, r3, #30
 8004b00:	f57f af48 	bpl.w	8004994 <HAL_RCC_OscConfig+0x20>
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 8004b04:	f7fe fcde 	bl	80034c4 <HAL_GetTick>
 8004b08:	1b80      	subs	r0, r0, r6
 8004b0a:	2802      	cmp	r0, #2
 8004b0c:	d9f6      	bls.n	8004afc <HAL_RCC_OscConfig+0x188>
 8004b0e:	e776      	b.n	80049fe <HAL_RCC_OscConfig+0x8a>
    if(__HAL_RCC_PWR_IS_CLK_DISABLED())
 8004b10:	4b4d      	ldr	r3, [pc, #308]	; (8004c48 <HAL_RCC_OscConfig+0x2d4>)
 8004b12:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8004b14:	f012 5280 	ands.w	r2, r2, #268435456	; 0x10000000
 8004b18:	d128      	bne.n	8004b6c <HAL_RCC_OscConfig+0x1f8>
      __HAL_RCC_PWR_CLK_ENABLE();
 8004b1a:	9201      	str	r2, [sp, #4]
 8004b1c:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8004b1e:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 8004b22:	641a      	str	r2, [r3, #64]	; 0x40
 8004b24:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004b26:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8004b2a:	9301      	str	r3, [sp, #4]
 8004b2c:	9b01      	ldr	r3, [sp, #4]
      pwrclkchanged = SET;
 8004b2e:	2601      	movs	r6, #1
    if(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 8004b30:	4d48      	ldr	r5, [pc, #288]	; (8004c54 <HAL_RCC_OscConfig+0x2e0>)
 8004b32:	682b      	ldr	r3, [r5, #0]
 8004b34:	05d9      	lsls	r1, r3, #23
 8004b36:	d51b      	bpl.n	8004b70 <HAL_RCC_OscConfig+0x1fc>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 8004b38:	68a3      	ldr	r3, [r4, #8]
 8004b3a:	4d43      	ldr	r5, [pc, #268]	; (8004c48 <HAL_RCC_OscConfig+0x2d4>)
 8004b3c:	2b01      	cmp	r3, #1
 8004b3e:	d127      	bne.n	8004b90 <HAL_RCC_OscConfig+0x21c>
 8004b40:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 8004b42:	f043 0301 	orr.w	r3, r3, #1
 8004b46:	672b      	str	r3, [r5, #112]	; 0x70
      tickstart = HAL_GetTick();
 8004b48:	f7fe fcbc 	bl	80034c4 <HAL_GetTick>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8004b4c:	4d3e      	ldr	r5, [pc, #248]	; (8004c48 <HAL_RCC_OscConfig+0x2d4>)
      tickstart = HAL_GetTick();
 8004b4e:	4607      	mov	r7, r0
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8004b50:	f241 3888 	movw	r8, #5000	; 0x1388
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8004b54:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 8004b56:	079b      	lsls	r3, r3, #30
 8004b58:	d539      	bpl.n	8004bce <HAL_RCC_OscConfig+0x25a>
    if(pwrclkchanged == SET)
 8004b5a:	2e00      	cmp	r6, #0
 8004b5c:	f43f af1e 	beq.w	800499c <HAL_RCC_OscConfig+0x28>
      __HAL_RCC_PWR_CLK_DISABLE();
 8004b60:	4a39      	ldr	r2, [pc, #228]	; (8004c48 <HAL_RCC_OscConfig+0x2d4>)
 8004b62:	6c13      	ldr	r3, [r2, #64]	; 0x40
 8004b64:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 8004b68:	6413      	str	r3, [r2, #64]	; 0x40
 8004b6a:	e717      	b.n	800499c <HAL_RCC_OscConfig+0x28>
    FlagStatus       pwrclkchanged = RESET;
 8004b6c:	2600      	movs	r6, #0
 8004b6e:	e7df      	b.n	8004b30 <HAL_RCC_OscConfig+0x1bc>
      SET_BIT(PWR->CR, PWR_CR_DBP);
 8004b70:	682b      	ldr	r3, [r5, #0]
 8004b72:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8004b76:	602b      	str	r3, [r5, #0]
      tickstart = HAL_GetTick();
 8004b78:	f7fe fca4 	bl	80034c4 <HAL_GetTick>
 8004b7c:	4607      	mov	r7, r0
      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 8004b7e:	682b      	ldr	r3, [r5, #0]
 8004b80:	05da      	lsls	r2, r3, #23
 8004b82:	d4d9      	bmi.n	8004b38 <HAL_RCC_OscConfig+0x1c4>
        if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 8004b84:	f7fe fc9e 	bl	80034c4 <HAL_GetTick>
 8004b88:	1bc0      	subs	r0, r0, r7
 8004b8a:	2802      	cmp	r0, #2
 8004b8c:	d9f7      	bls.n	8004b7e <HAL_RCC_OscConfig+0x20a>
 8004b8e:	e736      	b.n	80049fe <HAL_RCC_OscConfig+0x8a>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 8004b90:	2b05      	cmp	r3, #5
 8004b92:	d104      	bne.n	8004b9e <HAL_RCC_OscConfig+0x22a>
 8004b94:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 8004b96:	f043 0304 	orr.w	r3, r3, #4
 8004b9a:	672b      	str	r3, [r5, #112]	; 0x70
 8004b9c:	e7d0      	b.n	8004b40 <HAL_RCC_OscConfig+0x1cc>
 8004b9e:	6f2a      	ldr	r2, [r5, #112]	; 0x70
 8004ba0:	f022 0201 	bic.w	r2, r2, #1
 8004ba4:	672a      	str	r2, [r5, #112]	; 0x70
 8004ba6:	6f2a      	ldr	r2, [r5, #112]	; 0x70
 8004ba8:	f022 0204 	bic.w	r2, r2, #4
 8004bac:	672a      	str	r2, [r5, #112]	; 0x70
    if((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
 8004bae:	2b00      	cmp	r3, #0
 8004bb0:	d1ca      	bne.n	8004b48 <HAL_RCC_OscConfig+0x1d4>
      tickstart = HAL_GetTick();
 8004bb2:	f7fe fc87 	bl	80034c4 <HAL_GetTick>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8004bb6:	f241 3888 	movw	r8, #5000	; 0x1388
      tickstart = HAL_GetTick();
 8004bba:	4607      	mov	r7, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 8004bbc:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 8004bbe:	0798      	lsls	r0, r3, #30
 8004bc0:	d5cb      	bpl.n	8004b5a <HAL_RCC_OscConfig+0x1e6>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8004bc2:	f7fe fc7f 	bl	80034c4 <HAL_GetTick>
 8004bc6:	1bc0      	subs	r0, r0, r7
 8004bc8:	4540      	cmp	r0, r8
 8004bca:	d9f7      	bls.n	8004bbc <HAL_RCC_OscConfig+0x248>
 8004bcc:	e717      	b.n	80049fe <HAL_RCC_OscConfig+0x8a>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8004bce:	f7fe fc79 	bl	80034c4 <HAL_GetTick>
 8004bd2:	1bc0      	subs	r0, r0, r7
 8004bd4:	4540      	cmp	r0, r8
 8004bd6:	d9bd      	bls.n	8004b54 <HAL_RCC_OscConfig+0x1e0>
 8004bd8:	e711      	b.n	80049fe <HAL_RCC_OscConfig+0x8a>
    if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL)
 8004bda:	4d1b      	ldr	r5, [pc, #108]	; (8004c48 <HAL_RCC_OscConfig+0x2d4>)
 8004bdc:	68ab      	ldr	r3, [r5, #8]
 8004bde:	f003 030c 	and.w	r3, r3, #12
 8004be2:	2b08      	cmp	r3, #8
 8004be4:	d047      	beq.n	8004c76 <HAL_RCC_OscConfig+0x302>
 8004be6:	4e1c      	ldr	r6, [pc, #112]	; (8004c58 <HAL_RCC_OscConfig+0x2e4>)
 8004be8:	2300      	movs	r3, #0
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 8004bea:	2802      	cmp	r0, #2
        __HAL_RCC_PLL_DISABLE();
 8004bec:	6033      	str	r3, [r6, #0]
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 8004bee:	d135      	bne.n	8004c5c <HAL_RCC_OscConfig+0x2e8>
        tickstart = HAL_GetTick();
 8004bf0:	f7fe fc68 	bl	80034c4 <HAL_GetTick>
 8004bf4:	4607      	mov	r7, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 8004bf6:	682b      	ldr	r3, [r5, #0]
 8004bf8:	0199      	lsls	r1, r3, #6
 8004bfa:	d41e      	bmi.n	8004c3a <HAL_RCC_OscConfig+0x2c6>
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 8004bfc:	e9d4 3207 	ldrd	r3, r2, [r4, #28]
 8004c00:	4313      	orrs	r3, r2
 8004c02:	6a62      	ldr	r2, [r4, #36]	; 0x24
 8004c04:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 8004c08:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8004c0a:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 8004c0e:	6aa2      	ldr	r2, [r4, #40]	; 0x28
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8004c10:	4c0d      	ldr	r4, [pc, #52]	; (8004c48 <HAL_RCC_OscConfig+0x2d4>)
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 8004c12:	0852      	lsrs	r2, r2, #1
 8004c14:	3a01      	subs	r2, #1
 8004c16:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8004c1a:	606b      	str	r3, [r5, #4]
        __HAL_RCC_PLL_ENABLE();
 8004c1c:	2301      	movs	r3, #1
 8004c1e:	6033      	str	r3, [r6, #0]
        tickstart = HAL_GetTick();
 8004c20:	f7fe fc50 	bl	80034c4 <HAL_GetTick>
 8004c24:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8004c26:	6823      	ldr	r3, [r4, #0]
 8004c28:	019a      	lsls	r2, r3, #6
 8004c2a:	f53f aebb 	bmi.w	80049a4 <HAL_RCC_OscConfig+0x30>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 8004c2e:	f7fe fc49 	bl	80034c4 <HAL_GetTick>
 8004c32:	1b40      	subs	r0, r0, r5
 8004c34:	2802      	cmp	r0, #2
 8004c36:	d9f6      	bls.n	8004c26 <HAL_RCC_OscConfig+0x2b2>
 8004c38:	e6e1      	b.n	80049fe <HAL_RCC_OscConfig+0x8a>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 8004c3a:	f7fe fc43 	bl	80034c4 <HAL_GetTick>
 8004c3e:	1bc0      	subs	r0, r0, r7
 8004c40:	2802      	cmp	r0, #2
 8004c42:	d9d8      	bls.n	8004bf6 <HAL_RCC_OscConfig+0x282>
 8004c44:	e6db      	b.n	80049fe <HAL_RCC_OscConfig+0x8a>
 8004c46:	bf00      	nop
 8004c48:	40023800 	.word	0x40023800
 8004c4c:	42470000 	.word	0x42470000
 8004c50:	42470e80 	.word	0x42470e80
 8004c54:	40007000 	.word	0x40007000
 8004c58:	42470060 	.word	0x42470060
        tickstart = HAL_GetTick();
 8004c5c:	f7fe fc32 	bl	80034c4 <HAL_GetTick>
 8004c60:	4604      	mov	r4, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 8004c62:	682b      	ldr	r3, [r5, #0]
 8004c64:	019b      	lsls	r3, r3, #6
 8004c66:	f57f ae9d 	bpl.w	80049a4 <HAL_RCC_OscConfig+0x30>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 8004c6a:	f7fe fc2b 	bl	80034c4 <HAL_GetTick>
 8004c6e:	1b00      	subs	r0, r0, r4
 8004c70:	2802      	cmp	r0, #2
 8004c72:	d9f6      	bls.n	8004c62 <HAL_RCC_OscConfig+0x2ee>
 8004c74:	e6c3      	b.n	80049fe <HAL_RCC_OscConfig+0x8a>
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
 8004c76:	2801      	cmp	r0, #1
 8004c78:	f43f aec2 	beq.w	8004a00 <HAL_RCC_OscConfig+0x8c>
        pll_config = RCC->PLLCFGR;
 8004c7c:	6868      	ldr	r0, [r5, #4]
        if((READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 8004c7e:	69e3      	ldr	r3, [r4, #28]
 8004c80:	f400 0280 	and.w	r2, r0, #4194304	; 0x400000
 8004c84:	429a      	cmp	r2, r3
 8004c86:	f47f ae79 	bne.w	800497c <HAL_RCC_OscConfig+0x8>
 8004c8a:	6a22      	ldr	r2, [r4, #32]
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != RCC_OscInitStruct->PLL.PLLM) ||
 8004c8c:	f000 033f 	and.w	r3, r0, #63	; 0x3f
        if((READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 8004c90:	4293      	cmp	r3, r2
 8004c92:	f47f ae73 	bne.w	800497c <HAL_RCC_OscConfig+0x8>
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != RCC_OscInitStruct->PLL.PLLM) ||
 8004c96:	6a62      	ldr	r2, [r4, #36]	; 0x24
 8004c98:	f647 73c0 	movw	r3, #32704	; 0x7fc0
 8004c9c:	4003      	ands	r3, r0
 8004c9e:	4293      	cmp	r3, r2
 8004ca0:	f47f ae6c 	bne.w	800497c <HAL_RCC_OscConfig+0x8>
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != RCC_OscInitStruct->PLL.PLLN) ||
 8004ca4:	6aa2      	ldr	r2, [r4, #40]	; 0x28
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != RCC_OscInitStruct->PLL.PLLP) ||
 8004ca6:	f400 3340 	and.w	r3, r0, #196608	; 0x30000
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != RCC_OscInitStruct->PLL.PLLN) ||
 8004caa:	4293      	cmp	r3, r2
 8004cac:	f47f ae66 	bne.w	800497c <HAL_RCC_OscConfig+0x8>
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != RCC_OscInitStruct->PLL.PLLP) ||
 8004cb0:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != RCC_OscInitStruct->PLL.PLLQ))
 8004cb2:	f000 6070 	and.w	r0, r0, #251658240	; 0xf000000
    return HAL_ERROR;
 8004cb6:	1ac0      	subs	r0, r0, r3
 8004cb8:	bf18      	it	ne
 8004cba:	2001      	movne	r0, #1
 8004cbc:	e6a0      	b.n	8004a00 <HAL_RCC_OscConfig+0x8c>
 8004cbe:	bf00      	nop

08004cc0 <HAL_RCC_GetSysClockFreq>:
{
  uint32_t pllm = 0U, pllvco = 0U, pllp = 0U;
  uint32_t sysclockfreq = 0U;

  /* Get SYSCLK source -------------------------------------------------------*/
  switch (RCC->CFGR & RCC_CFGR_SWS)
 8004cc0:	4913      	ldr	r1, [pc, #76]	; (8004d10 <HAL_RCC_GetSysClockFreq+0x50>)
{
 8004cc2:	b508      	push	{r3, lr}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 8004cc4:	688b      	ldr	r3, [r1, #8]
 8004cc6:	f003 030c 	and.w	r3, r3, #12
 8004cca:	2b04      	cmp	r3, #4
 8004ccc:	d003      	beq.n	8004cd6 <HAL_RCC_GetSysClockFreq+0x16>
 8004cce:	2b08      	cmp	r3, #8
 8004cd0:	d003      	beq.n	8004cda <HAL_RCC_GetSysClockFreq+0x1a>
  {
    case RCC_CFGR_SWS_HSI:  /* HSI used as system clock source */
    {
      sysclockfreq = HSI_VALUE;
 8004cd2:	4810      	ldr	r0, [pc, #64]	; (8004d14 <HAL_RCC_GetSysClockFreq+0x54>)
    {
      sysclockfreq = HSI_VALUE;
      break;
    }
  }
  return sysclockfreq;
 8004cd4:	e000      	b.n	8004cd8 <HAL_RCC_GetSysClockFreq+0x18>
      sysclockfreq = HSE_VALUE;
 8004cd6:	4810      	ldr	r0, [pc, #64]	; (8004d18 <HAL_RCC_GetSysClockFreq+0x58>)
}
 8004cd8:	bd08      	pop	{r3, pc}
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 8004cda:	684a      	ldr	r2, [r1, #4]
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 8004cdc:	684b      	ldr	r3, [r1, #4]
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8004cde:	6849      	ldr	r1, [r1, #4]
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 8004ce0:	f413 0380 	ands.w	r3, r3, #4194304	; 0x400000
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8004ce4:	bf14      	ite	ne
 8004ce6:	480c      	ldrne	r0, [pc, #48]	; (8004d18 <HAL_RCC_GetSysClockFreq+0x58>)
        pllvco = (uint32_t) ((((uint64_t) HSI_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8004ce8:	480a      	ldreq	r0, [pc, #40]	; (8004d14 <HAL_RCC_GetSysClockFreq+0x54>)
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8004cea:	f3c1 1188 	ubfx	r1, r1, #6, #9
 8004cee:	bf18      	it	ne
 8004cf0:	2300      	movne	r3, #0
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 8004cf2:	f002 023f 	and.w	r2, r2, #63	; 0x3f
        pllvco = (uint32_t) ((((uint64_t) HSI_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8004cf6:	fba1 0100 	umull	r0, r1, r1, r0
 8004cfa:	f7fb fac9 	bl	8000290 <__aeabi_uldivmod>
      pllp = ((((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >> RCC_PLLCFGR_PLLP_Pos) + 1U) *2U);
 8004cfe:	4b04      	ldr	r3, [pc, #16]	; (8004d10 <HAL_RCC_GetSysClockFreq+0x50>)
 8004d00:	685b      	ldr	r3, [r3, #4]
 8004d02:	f3c3 4301 	ubfx	r3, r3, #16, #2
 8004d06:	3301      	adds	r3, #1
 8004d08:	005b      	lsls	r3, r3, #1
      sysclockfreq = pllvco/pllp;
 8004d0a:	fbb0 f0f3 	udiv	r0, r0, r3
 8004d0e:	e7e3      	b.n	8004cd8 <HAL_RCC_GetSysClockFreq+0x18>
 8004d10:	40023800 	.word	0x40023800
 8004d14:	00f42400 	.word	0x00f42400
 8004d18:	007a1200 	.word	0x007a1200

08004d1c <HAL_RCC_ClockConfig>:
{
 8004d1c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8004d20:	460d      	mov	r5, r1
  if(RCC_ClkInitStruct == NULL)
 8004d22:	4604      	mov	r4, r0
 8004d24:	b910      	cbnz	r0, 8004d2c <HAL_RCC_ClockConfig+0x10>
    return HAL_ERROR;
 8004d26:	2001      	movs	r0, #1
}
 8004d28:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if(FLatency > __HAL_FLASH_GET_LATENCY())
 8004d2c:	4b43      	ldr	r3, [pc, #268]	; (8004e3c <HAL_RCC_ClockConfig+0x120>)
 8004d2e:	681a      	ldr	r2, [r3, #0]
 8004d30:	f002 020f 	and.w	r2, r2, #15
 8004d34:	428a      	cmp	r2, r1
 8004d36:	d328      	bcc.n	8004d8a <HAL_RCC_ClockConfig+0x6e>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 8004d38:	6821      	ldr	r1, [r4, #0]
 8004d3a:	078f      	lsls	r7, r1, #30
 8004d3c:	d42d      	bmi.n	8004d9a <HAL_RCC_ClockConfig+0x7e>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 8004d3e:	07c8      	lsls	r0, r1, #31
 8004d40:	d440      	bmi.n	8004dc4 <HAL_RCC_ClockConfig+0xa8>
  if(FLatency < __HAL_FLASH_GET_LATENCY())
 8004d42:	4b3e      	ldr	r3, [pc, #248]	; (8004e3c <HAL_RCC_ClockConfig+0x120>)
 8004d44:	681a      	ldr	r2, [r3, #0]
 8004d46:	f002 020f 	and.w	r2, r2, #15
 8004d4a:	42aa      	cmp	r2, r5
 8004d4c:	d865      	bhi.n	8004e1a <HAL_RCC_ClockConfig+0xfe>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 8004d4e:	6822      	ldr	r2, [r4, #0]
 8004d50:	0751      	lsls	r1, r2, #29
 8004d52:	d46b      	bmi.n	8004e2c <HAL_RCC_ClockConfig+0x110>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 8004d54:	0713      	lsls	r3, r2, #28
 8004d56:	d507      	bpl.n	8004d68 <HAL_RCC_ClockConfig+0x4c>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3U));
 8004d58:	4a39      	ldr	r2, [pc, #228]	; (8004e40 <HAL_RCC_ClockConfig+0x124>)
 8004d5a:	6921      	ldr	r1, [r4, #16]
 8004d5c:	6893      	ldr	r3, [r2, #8]
 8004d5e:	f423 4360 	bic.w	r3, r3, #57344	; 0xe000
 8004d62:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
 8004d66:	6093      	str	r3, [r2, #8]
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_Pos];
 8004d68:	f7ff ffaa 	bl	8004cc0 <HAL_RCC_GetSysClockFreq>
 8004d6c:	4b34      	ldr	r3, [pc, #208]	; (8004e40 <HAL_RCC_ClockConfig+0x124>)
 8004d6e:	4a35      	ldr	r2, [pc, #212]	; (8004e44 <HAL_RCC_ClockConfig+0x128>)
 8004d70:	689b      	ldr	r3, [r3, #8]
 8004d72:	f3c3 1303 	ubfx	r3, r3, #4, #4
 8004d76:	5cd3      	ldrb	r3, [r2, r3]
 8004d78:	40d8      	lsrs	r0, r3
 8004d7a:	4b33      	ldr	r3, [pc, #204]	; (8004e48 <HAL_RCC_ClockConfig+0x12c>)
 8004d7c:	6018      	str	r0, [r3, #0]
  HAL_InitTick (uwTickPrio);
 8004d7e:	4b33      	ldr	r3, [pc, #204]	; (8004e4c <HAL_RCC_ClockConfig+0x130>)
 8004d80:	6818      	ldr	r0, [r3, #0]
 8004d82:	f7fd f985 	bl	8002090 <HAL_InitTick>
  return HAL_OK;
 8004d86:	2000      	movs	r0, #0
 8004d88:	e7ce      	b.n	8004d28 <HAL_RCC_ClockConfig+0xc>
    __HAL_FLASH_SET_LATENCY(FLatency);
 8004d8a:	b2ca      	uxtb	r2, r1
 8004d8c:	701a      	strb	r2, [r3, #0]
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 8004d8e:	681b      	ldr	r3, [r3, #0]
 8004d90:	f003 030f 	and.w	r3, r3, #15
 8004d94:	428b      	cmp	r3, r1
 8004d96:	d1c6      	bne.n	8004d26 <HAL_RCC_ClockConfig+0xa>
 8004d98:	e7ce      	b.n	8004d38 <HAL_RCC_ClockConfig+0x1c>
 8004d9a:	4b29      	ldr	r3, [pc, #164]	; (8004e40 <HAL_RCC_ClockConfig+0x124>)
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 8004d9c:	f011 0f04 	tst.w	r1, #4
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_HCLK_DIV16);
 8004da0:	bf1e      	ittt	ne
 8004da2:	689a      	ldrne	r2, [r3, #8]
 8004da4:	f442 52e0 	orrne.w	r2, r2, #7168	; 0x1c00
 8004da8:	609a      	strne	r2, [r3, #8]
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 8004daa:	070e      	lsls	r6, r1, #28
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, (RCC_HCLK_DIV16 << 3));
 8004dac:	bf42      	ittt	mi
 8004dae:	689a      	ldrmi	r2, [r3, #8]
 8004db0:	f442 4260 	orrmi.w	r2, r2, #57344	; 0xe000
 8004db4:	609a      	strmi	r2, [r3, #8]
    MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 8004db6:	689a      	ldr	r2, [r3, #8]
 8004db8:	68a0      	ldr	r0, [r4, #8]
 8004dba:	f022 02f0 	bic.w	r2, r2, #240	; 0xf0
 8004dbe:	4302      	orrs	r2, r0
 8004dc0:	609a      	str	r2, [r3, #8]
 8004dc2:	e7bc      	b.n	8004d3e <HAL_RCC_ClockConfig+0x22>
    if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 8004dc4:	6862      	ldr	r2, [r4, #4]
 8004dc6:	4b1e      	ldr	r3, [pc, #120]	; (8004e40 <HAL_RCC_ClockConfig+0x124>)
 8004dc8:	2a01      	cmp	r2, #1
 8004dca:	d11c      	bne.n	8004e06 <HAL_RCC_ClockConfig+0xea>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8004dcc:	681b      	ldr	r3, [r3, #0]
 8004dce:	f413 3f00 	tst.w	r3, #131072	; 0x20000
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8004dd2:	d0a8      	beq.n	8004d26 <HAL_RCC_ClockConfig+0xa>
    __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 8004dd4:	4e1a      	ldr	r6, [pc, #104]	; (8004e40 <HAL_RCC_ClockConfig+0x124>)
 8004dd6:	68b3      	ldr	r3, [r6, #8]
 8004dd8:	f023 0303 	bic.w	r3, r3, #3
 8004ddc:	4313      	orrs	r3, r2
 8004dde:	60b3      	str	r3, [r6, #8]
    tickstart = HAL_GetTick();
 8004de0:	f7fe fb70 	bl	80034c4 <HAL_GetTick>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 8004de4:	f241 3888 	movw	r8, #5000	; 0x1388
    tickstart = HAL_GetTick();
 8004de8:	4607      	mov	r7, r0
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 8004dea:	68b3      	ldr	r3, [r6, #8]
 8004dec:	6862      	ldr	r2, [r4, #4]
 8004dee:	f003 030c 	and.w	r3, r3, #12
 8004df2:	ebb3 0f82 	cmp.w	r3, r2, lsl #2
 8004df6:	d0a4      	beq.n	8004d42 <HAL_RCC_ClockConfig+0x26>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 8004df8:	f7fe fb64 	bl	80034c4 <HAL_GetTick>
 8004dfc:	1bc0      	subs	r0, r0, r7
 8004dfe:	4540      	cmp	r0, r8
 8004e00:	d9f3      	bls.n	8004dea <HAL_RCC_ClockConfig+0xce>
        return HAL_TIMEOUT;
 8004e02:	2003      	movs	r0, #3
 8004e04:	e790      	b.n	8004d28 <HAL_RCC_ClockConfig+0xc>
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 8004e06:	1e91      	subs	r1, r2, #2
 8004e08:	2901      	cmp	r1, #1
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8004e0a:	681b      	ldr	r3, [r3, #0]
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 8004e0c:	d802      	bhi.n	8004e14 <HAL_RCC_ClockConfig+0xf8>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8004e0e:	f013 7f00 	tst.w	r3, #33554432	; 0x2000000
 8004e12:	e7de      	b.n	8004dd2 <HAL_RCC_ClockConfig+0xb6>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8004e14:	f013 0f02 	tst.w	r3, #2
 8004e18:	e7db      	b.n	8004dd2 <HAL_RCC_ClockConfig+0xb6>
    __HAL_FLASH_SET_LATENCY(FLatency);
 8004e1a:	b2ea      	uxtb	r2, r5
 8004e1c:	701a      	strb	r2, [r3, #0]
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 8004e1e:	681b      	ldr	r3, [r3, #0]
 8004e20:	f003 030f 	and.w	r3, r3, #15
 8004e24:	42ab      	cmp	r3, r5
 8004e26:	f47f af7e 	bne.w	8004d26 <HAL_RCC_ClockConfig+0xa>
 8004e2a:	e790      	b.n	8004d4e <HAL_RCC_ClockConfig+0x32>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 8004e2c:	4904      	ldr	r1, [pc, #16]	; (8004e40 <HAL_RCC_ClockConfig+0x124>)
 8004e2e:	68e0      	ldr	r0, [r4, #12]
 8004e30:	688b      	ldr	r3, [r1, #8]
 8004e32:	f423 53e0 	bic.w	r3, r3, #7168	; 0x1c00
 8004e36:	4303      	orrs	r3, r0
 8004e38:	608b      	str	r3, [r1, #8]
 8004e3a:	e78b      	b.n	8004d54 <HAL_RCC_ClockConfig+0x38>
 8004e3c:	40023c00 	.word	0x40023c00
 8004e40:	40023800 	.word	0x40023800
 8004e44:	0801aa0c 	.word	0x0801aa0c
 8004e48:	20000074 	.word	0x20000074
 8004e4c:	2000007c 	.word	0x2000007c

08004e50 <HAL_RCC_GetPCLK1Freq>:
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK1Freq(void)
{
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1)>> RCC_CFGR_PPRE1_Pos]);
 8004e50:	4b04      	ldr	r3, [pc, #16]	; (8004e64 <HAL_RCC_GetPCLK1Freq+0x14>)
 8004e52:	4a05      	ldr	r2, [pc, #20]	; (8004e68 <HAL_RCC_GetPCLK1Freq+0x18>)
 8004e54:	689b      	ldr	r3, [r3, #8]
 8004e56:	f3c3 2382 	ubfx	r3, r3, #10, #3
 8004e5a:	5cd3      	ldrb	r3, [r2, r3]
 8004e5c:	4a03      	ldr	r2, [pc, #12]	; (8004e6c <HAL_RCC_GetPCLK1Freq+0x1c>)
 8004e5e:	6810      	ldr	r0, [r2, #0]
}
 8004e60:	40d8      	lsrs	r0, r3
 8004e62:	4770      	bx	lr
 8004e64:	40023800 	.word	0x40023800
 8004e68:	0801aa1c 	.word	0x0801aa1c
 8004e6c:	20000074 	.word	0x20000074

08004e70 <HAL_RCC_GetClockConfig>:
  * @retval None
  */
void HAL_RCC_GetClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t *pFLatency)
{
  /* Set all possible values for the Clock type parameter --------------------*/
  RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2;
 8004e70:	230f      	movs	r3, #15
 8004e72:	6003      	str	r3, [r0, #0]

  /* Get the SYSCLK configuration --------------------------------------------*/
  RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
 8004e74:	4b0b      	ldr	r3, [pc, #44]	; (8004ea4 <HAL_RCC_GetClockConfig+0x34>)
 8004e76:	689a      	ldr	r2, [r3, #8]
 8004e78:	f002 0203 	and.w	r2, r2, #3
 8004e7c:	6042      	str	r2, [r0, #4]

  /* Get the HCLK configuration ----------------------------------------------*/
  RCC_ClkInitStruct->AHBCLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_HPRE);
 8004e7e:	689a      	ldr	r2, [r3, #8]
 8004e80:	f002 02f0 	and.w	r2, r2, #240	; 0xf0
 8004e84:	6082      	str	r2, [r0, #8]

  /* Get the APB1 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB1CLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_PPRE1);
 8004e86:	689a      	ldr	r2, [r3, #8]
 8004e88:	f402 52e0 	and.w	r2, r2, #7168	; 0x1c00
 8004e8c:	60c2      	str	r2, [r0, #12]

  /* Get the APB2 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)((RCC->CFGR & RCC_CFGR_PPRE2) >> 3U);
 8004e8e:	689b      	ldr	r3, [r3, #8]
 8004e90:	08db      	lsrs	r3, r3, #3
 8004e92:	f403 53e0 	and.w	r3, r3, #7168	; 0x1c00
 8004e96:	6103      	str	r3, [r0, #16]

  /* Get the Flash Wait State (Latency) configuration ------------------------*/
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
 8004e98:	4b03      	ldr	r3, [pc, #12]	; (8004ea8 <HAL_RCC_GetClockConfig+0x38>)
 8004e9a:	681b      	ldr	r3, [r3, #0]
 8004e9c:	f003 030f 	and.w	r3, r3, #15
 8004ea0:	600b      	str	r3, [r1, #0]
}
 8004ea2:	4770      	bx	lr
 8004ea4:	40023800 	.word	0x40023800
 8004ea8:	40023c00 	.word	0x40023c00

08004eac <HAL_RCCEx_PeriphCLKConfig>:
  /*----------------------- SAI/I2S Configuration (PLLI2S) -------------------*/
  /*----------------------- Common configuration SAI/I2S ---------------------*/
  /* In Case of SAI or I2S Clock Configuration through PLLI2S, PLLI2SN division
     factor is common parameters for both peripherals */
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
     (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLI2S) == RCC_PERIPHCLK_SAI_PLLI2S) ||
 8004eac:	6803      	ldr	r3, [r0, #0]
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
 8004eae:	f013 0f43 	tst.w	r3, #67	; 0x43
{
 8004eb2:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8004eb4:	4604      	mov	r4, r0
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
 8004eb6:	f040 808a 	bne.w	8004fce <HAL_RCCEx_PeriphCLKConfig+0x122>

  /*----------------------- SAI/LTDC Configuration (PLLSAI) ------------------*/
  /*----------------------- Common configuration SAI/LTDC --------------------*/
  /* In Case of SAI or LTDC Clock Configuration through PLLSAI, PLLSAIN division
     factor is common parameters for both peripherals */
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == RCC_PERIPHCLK_SAI_PLLSAI) ||
 8004eba:	6823      	ldr	r3, [r4, #0]
 8004ebc:	f013 0f0c 	tst.w	r3, #12
 8004ec0:	d044      	beq.n	8004f4c <HAL_RCCEx_PeriphCLKConfig+0xa0>
  {
    /* Check the PLLSAI division factors */
    assert_param(IS_RCC_PLLSAIN_VALUE(PeriphClkInit->PLLSAI.PLLSAIN));

    /* Disable PLLSAI Clock */
    __HAL_RCC_PLLSAI_DISABLE();
 8004ec2:	4d89      	ldr	r5, [pc, #548]	; (80050e8 <HAL_RCCEx_PeriphCLKConfig+0x23c>)
    /* Get tick */
    tickstart = HAL_GetTick();
    /* Wait till PLLSAI is disabled */
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 8004ec4:	4e89      	ldr	r6, [pc, #548]	; (80050ec <HAL_RCCEx_PeriphCLKConfig+0x240>)
    __HAL_RCC_PLLSAI_DISABLE();
 8004ec6:	2300      	movs	r3, #0
 8004ec8:	602b      	str	r3, [r5, #0]
    tickstart = HAL_GetTick();
 8004eca:	f7fe fafb 	bl	80034c4 <HAL_GetTick>
 8004ece:	4607      	mov	r7, r0
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 8004ed0:	6833      	ldr	r3, [r6, #0]
 8004ed2:	009b      	lsls	r3, r3, #2
 8004ed4:	f100 80cc 	bmi.w	8005070 <HAL_RCCEx_PeriphCLKConfig+0x1c4>
    }

    /*---------------------------- SAI configuration -------------------------*/
    /* In Case of SAI Clock Configuration through PLLSAI, PLLSAIQ and PLLSAI_DIVQ must
       be added only for SAI configuration */
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == (RCC_PERIPHCLK_SAI_PLLSAI))
 8004ed8:	6821      	ldr	r1, [r4, #0]
 8004eda:	074f      	lsls	r7, r1, #29
 8004edc:	d515      	bpl.n	8004f0a <HAL_RCCEx_PeriphCLKConfig+0x5e>
      /* Read PLLSAIR value from PLLSAICFGR register (this value is not need for SAI configuration) */
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIR) >> RCC_PLLSAICFGR_PLLSAIR_Pos);
      /* PLLSAI_VCO Input  = PLL_SOURCE/PLLM */
      /* PLLSAI_VCO Output = PLLSAI_VCO Input * PLLSAIN */
      /* SAI_CLK(first level) = PLLSAI_VCO Output/PLLSAIQ */
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , PeriphClkInit->PLLSAI.PLLSAIQ, tmpreg1);
 8004ede:	e9d4 0304 	ldrd	r0, r3, [r4, #16]
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIR) >> RCC_PLLSAICFGR_PLLSAIR_Pos);
 8004ee2:	f8d6 2088 	ldr.w	r2, [r6, #136]	; 0x88
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , PeriphClkInit->PLLSAI.PLLSAIQ, tmpreg1);
 8004ee6:	061b      	lsls	r3, r3, #24
 8004ee8:	f002 42e0 	and.w	r2, r2, #1879048192	; 0x70000000
 8004eec:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 8004ef0:	4313      	orrs	r3, r2
 8004ef2:	f8c6 3088 	str.w	r3, [r6, #136]	; 0x88
      /* SAI_CLK_x = SAI_CLK(first level)/PLLSAIDIVQ */
      __HAL_RCC_PLLSAI_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLSAIDivQ);
 8004ef6:	f8d6 308c 	ldr.w	r3, [r6, #140]	; 0x8c
 8004efa:	6a22      	ldr	r2, [r4, #32]
 8004efc:	f423 53f8 	bic.w	r3, r3, #7936	; 0x1f00
 8004f00:	3a01      	subs	r2, #1
 8004f02:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8004f06:	f8c6 308c 	str.w	r3, [r6, #140]	; 0x8c
    }

    /*---------------------------- LTDC configuration ------------------------*/
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == (RCC_PERIPHCLK_LTDC))
 8004f0a:	070e      	lsls	r6, r1, #28
 8004f0c:	d514      	bpl.n	8004f38 <HAL_RCCEx_PeriphCLKConfig+0x8c>
    {
      assert_param(IS_RCC_PLLSAIR_VALUE(PeriphClkInit->PLLSAI.PLLSAIR));
      assert_param(IS_RCC_PLLSAI_DIVR_VALUE(PeriphClkInit->PLLSAIDivR));

      /* Read PLLSAIR value from PLLSAICFGR register (this value is not need for SAI configuration) */
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 8004f0e:	4a77      	ldr	r2, [pc, #476]	; (80050ec <HAL_RCCEx_PeriphCLKConfig+0x240>)
      /* PLLSAI_VCO Input  = PLL_SOURCE/PLLM */
      /* PLLSAI_VCO Output = PLLSAI_VCO Input * PLLSAIN */
      /* LTDC_CLK(first level) = PLLSAI_VCO Output/PLLSAIR */
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , tmpreg1, PeriphClkInit->PLLSAI.PLLSAIR);
 8004f10:	69a3      	ldr	r3, [r4, #24]
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 8004f12:	f8d2 1088 	ldr.w	r1, [r2, #136]	; 0x88
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , tmpreg1, PeriphClkInit->PLLSAI.PLLSAIR);
 8004f16:	6920      	ldr	r0, [r4, #16]
 8004f18:	071b      	lsls	r3, r3, #28
 8004f1a:	f001 6170 	and.w	r1, r1, #251658240	; 0xf000000
 8004f1e:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 8004f22:	430b      	orrs	r3, r1
 8004f24:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
      /* LTDC_CLK = LTDC_CLK(first level)/PLLSAIDIVR */
      __HAL_RCC_PLLSAI_PLLSAICLKDIVR_CONFIG(PeriphClkInit->PLLSAIDivR);
 8004f28:	f8d2 308c 	ldr.w	r3, [r2, #140]	; 0x8c
 8004f2c:	6a61      	ldr	r1, [r4, #36]	; 0x24
 8004f2e:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 8004f32:	430b      	orrs	r3, r1
 8004f34:	f8c2 308c 	str.w	r3, [r2, #140]	; 0x8c
    }
    /* Enable PLLSAI Clock */
    __HAL_RCC_PLLSAI_ENABLE();
 8004f38:	2301      	movs	r3, #1
 8004f3a:	602b      	str	r3, [r5, #0]
    /* Get tick */
    tickstart = HAL_GetTick();
 8004f3c:	f7fe fac2 	bl	80034c4 <HAL_GetTick>
    /* Wait till PLLSAI is ready */
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 8004f40:	4d6a      	ldr	r5, [pc, #424]	; (80050ec <HAL_RCCEx_PeriphCLKConfig+0x240>)
    tickstart = HAL_GetTick();
 8004f42:	4606      	mov	r6, r0
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 8004f44:	682b      	ldr	r3, [r5, #0]
 8004f46:	0098      	lsls	r0, r3, #2
 8004f48:	f140 8099 	bpl.w	800507e <HAL_RCCEx_PeriphCLKConfig+0x1d2>
    }
  }
  /*--------------------------------------------------------------------------*/

  /*---------------------------- RTC configuration ---------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == (RCC_PERIPHCLK_RTC))
 8004f4c:	6823      	ldr	r3, [r4, #0]
 8004f4e:	069a      	lsls	r2, r3, #26
 8004f50:	d533      	bpl.n	8004fba <HAL_RCCEx_PeriphCLKConfig+0x10e>
  {
    /* Check for RTC Parameters used to output RTCCLK */
    assert_param(IS_RCC_RTCCLKSOURCE(PeriphClkInit->RTCClockSelection));

    /* Enable Power Clock*/
    __HAL_RCC_PWR_CLK_ENABLE();
 8004f52:	2300      	movs	r3, #0
 8004f54:	9301      	str	r3, [sp, #4]
 8004f56:	4b65      	ldr	r3, [pc, #404]	; (80050ec <HAL_RCCEx_PeriphCLKConfig+0x240>)

    /* Enable write access to Backup domain */
    PWR->CR |= PWR_CR_DBP;
 8004f58:	4d65      	ldr	r5, [pc, #404]	; (80050f0 <HAL_RCCEx_PeriphCLKConfig+0x244>)
    __HAL_RCC_PWR_CLK_ENABLE();
 8004f5a:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8004f5c:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 8004f60:	641a      	str	r2, [r3, #64]	; 0x40
 8004f62:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004f64:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8004f68:	9301      	str	r3, [sp, #4]
 8004f6a:	9b01      	ldr	r3, [sp, #4]
    PWR->CR |= PWR_CR_DBP;
 8004f6c:	682b      	ldr	r3, [r5, #0]
 8004f6e:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8004f72:	602b      	str	r3, [r5, #0]

    /* Get tick */
    tickstart = HAL_GetTick();
 8004f74:	f7fe faa6 	bl	80034c4 <HAL_GetTick>
 8004f78:	4606      	mov	r6, r0

    while((PWR->CR & PWR_CR_DBP) == RESET)
 8004f7a:	682b      	ldr	r3, [r5, #0]
 8004f7c:	05d9      	lsls	r1, r3, #23
 8004f7e:	f140 8085 	bpl.w	800508c <HAL_RCCEx_PeriphCLKConfig+0x1e0>
      {
        return HAL_TIMEOUT;
      }
    }
    /* Reset the Backup domain only if the RTC Clock source selection is modified from reset value */
    tmpreg1 = (RCC->BDCR & RCC_BDCR_RTCSEL);
 8004f82:	4d5a      	ldr	r5, [pc, #360]	; (80050ec <HAL_RCCEx_PeriphCLKConfig+0x240>)
 8004f84:	6f2b      	ldr	r3, [r5, #112]	; 0x70
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 8004f86:	f413 7340 	ands.w	r3, r3, #768	; 0x300
 8004f8a:	f040 8086 	bne.w	800509a <HAL_RCCEx_PeriphCLKConfig+0x1ee>
            return HAL_TIMEOUT;
          }
        }
      }
    }
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 8004f8e:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 8004f90:	f403 7240 	and.w	r2, r3, #768	; 0x300
 8004f94:	f5b2 7f40 	cmp.w	r2, #768	; 0x300
 8004f98:	4a54      	ldr	r2, [pc, #336]	; (80050ec <HAL_RCCEx_PeriphCLKConfig+0x240>)
 8004f9a:	f040 80a0 	bne.w	80050de <HAL_RCCEx_PeriphCLKConfig+0x232>
 8004f9e:	6891      	ldr	r1, [r2, #8]
 8004fa0:	f023 4070 	bic.w	r0, r3, #4026531840	; 0xf0000000
 8004fa4:	f421 11f8 	bic.w	r1, r1, #2031616	; 0x1f0000
 8004fa8:	f420 7040 	bic.w	r0, r0, #768	; 0x300
 8004fac:	4301      	orrs	r1, r0
 8004fae:	6091      	str	r1, [r2, #8]
 8004fb0:	6f11      	ldr	r1, [r2, #112]	; 0x70
 8004fb2:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8004fb6:	430b      	orrs	r3, r1
 8004fb8:	6713      	str	r3, [r2, #112]	; 0x70
  }
  /*--------------------------------------------------------------------------*/

  /*---------------------------- TIM configuration ---------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == (RCC_PERIPHCLK_TIM))
 8004fba:	6820      	ldr	r0, [r4, #0]
 8004fbc:	f010 0010 	ands.w	r0, r0, #16
  {
    __HAL_RCC_TIMCLKPRESCALER(PeriphClkInit->TIMPresSelection);
 8004fc0:	bf1f      	itttt	ne
 8004fc2:	4b4c      	ldrne	r3, [pc, #304]	; (80050f4 <HAL_RCCEx_PeriphCLKConfig+0x248>)
 8004fc4:	f894 202c 	ldrbne.w	r2, [r4, #44]	; 0x2c
 8004fc8:	601a      	strne	r2, [r3, #0]
  }
  return HAL_OK;
 8004fca:	2000      	movne	r0, #0
 8004fcc:	e04e      	b.n	800506c <HAL_RCCEx_PeriphCLKConfig+0x1c0>
    __HAL_RCC_PLLI2S_DISABLE();
 8004fce:	4d4a      	ldr	r5, [pc, #296]	; (80050f8 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 8004fd0:	4e46      	ldr	r6, [pc, #280]	; (80050ec <HAL_RCCEx_PeriphCLKConfig+0x240>)
    __HAL_RCC_PLLI2S_DISABLE();
 8004fd2:	2300      	movs	r3, #0
 8004fd4:	602b      	str	r3, [r5, #0]
    tickstart = HAL_GetTick();
 8004fd6:	f7fe fa75 	bl	80034c4 <HAL_GetTick>
 8004fda:	4607      	mov	r7, r0
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 8004fdc:	6833      	ldr	r3, [r6, #0]
 8004fde:	011b      	lsls	r3, r3, #4
 8004fe0:	d43e      	bmi.n	8005060 <HAL_RCCEx_PeriphCLKConfig+0x1b4>
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == (RCC_PERIPHCLK_I2S))
 8004fe2:	6821      	ldr	r1, [r4, #0]
 8004fe4:	07cf      	lsls	r7, r1, #31
      __HAL_RCC_PLLI2S_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SR);
 8004fe6:	bf41      	itttt	mi
 8004fe8:	e9d4 2301 	ldrdmi	r2, r3, [r4, #4]
 8004fec:	071b      	lslmi	r3, r3, #28
 8004fee:	ea43 1382 	orrmi.w	r3, r3, r2, lsl #6
 8004ff2:	f8c6 3084 	strmi.w	r3, [r6, #132]	; 0x84
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLI2S) == (RCC_PERIPHCLK_SAI_PLLI2S))
 8004ff6:	078e      	lsls	r6, r1, #30
 8004ff8:	d515      	bpl.n	8005026 <HAL_RCCEx_PeriphCLKConfig+0x17a>
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 8004ffa:	4a3c      	ldr	r2, [pc, #240]	; (80050ec <HAL_RCCEx_PeriphCLKConfig+0x240>)
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SQ , tmpreg1);
 8004ffc:	68e3      	ldr	r3, [r4, #12]
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 8004ffe:	f8d2 0084 	ldr.w	r0, [r2, #132]	; 0x84
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SQ , tmpreg1);
 8005002:	6866      	ldr	r6, [r4, #4]
 8005004:	061b      	lsls	r3, r3, #24
 8005006:	f000 40e0 	and.w	r0, r0, #1879048192	; 0x70000000
 800500a:	ea43 1386 	orr.w	r3, r3, r6, lsl #6
 800500e:	4303      	orrs	r3, r0
 8005010:	f8c2 3084 	str.w	r3, [r2, #132]	; 0x84
      __HAL_RCC_PLLI2S_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLI2SDivQ);
 8005014:	f8d2 008c 	ldr.w	r0, [r2, #140]	; 0x8c
 8005018:	69e3      	ldr	r3, [r4, #28]
 800501a:	f020 001f 	bic.w	r0, r0, #31
 800501e:	3b01      	subs	r3, #1
 8005020:	4303      	orrs	r3, r0
 8005022:	f8c2 308c 	str.w	r3, [r2, #140]	; 0x8c
    if((PeriphClkInit->PeriphClockSelection & RCC_PERIPHCLK_PLLI2S) == RCC_PERIPHCLK_PLLI2S)
 8005026:	0648      	lsls	r0, r1, #25
 8005028:	d50a      	bpl.n	8005040 <HAL_RCCEx_PeriphCLKConfig+0x194>
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN, PeriphClkInit->PLLI2S.PLLI2SQ, PeriphClkInit->PLLI2S.PLLI2SR);
 800502a:	68e3      	ldr	r3, [r4, #12]
 800502c:	6862      	ldr	r2, [r4, #4]
 800502e:	061b      	lsls	r3, r3, #24
 8005030:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 8005034:	68a2      	ldr	r2, [r4, #8]
 8005036:	ea43 7302 	orr.w	r3, r3, r2, lsl #28
 800503a:	4a2c      	ldr	r2, [pc, #176]	; (80050ec <HAL_RCCEx_PeriphCLKConfig+0x240>)
 800503c:	f8c2 3084 	str.w	r3, [r2, #132]	; 0x84
    __HAL_RCC_PLLI2S_ENABLE();
 8005040:	2301      	movs	r3, #1
 8005042:	602b      	str	r3, [r5, #0]
    tickstart = HAL_GetTick();
 8005044:	f7fe fa3e 	bl	80034c4 <HAL_GetTick>
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 8005048:	4d28      	ldr	r5, [pc, #160]	; (80050ec <HAL_RCCEx_PeriphCLKConfig+0x240>)
    tickstart = HAL_GetTick();
 800504a:	4606      	mov	r6, r0
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 800504c:	682b      	ldr	r3, [r5, #0]
 800504e:	0119      	lsls	r1, r3, #4
 8005050:	f53f af33 	bmi.w	8004eba <HAL_RCCEx_PeriphCLKConfig+0xe>
      if((HAL_GetTick() - tickstart ) > PLLI2S_TIMEOUT_VALUE)
 8005054:	f7fe fa36 	bl	80034c4 <HAL_GetTick>
 8005058:	1b80      	subs	r0, r0, r6
 800505a:	2802      	cmp	r0, #2
 800505c:	d9f6      	bls.n	800504c <HAL_RCCEx_PeriphCLKConfig+0x1a0>
 800505e:	e004      	b.n	800506a <HAL_RCCEx_PeriphCLKConfig+0x1be>
      if((HAL_GetTick() - tickstart ) > PLLI2S_TIMEOUT_VALUE)
 8005060:	f7fe fa30 	bl	80034c4 <HAL_GetTick>
 8005064:	1bc0      	subs	r0, r0, r7
 8005066:	2802      	cmp	r0, #2
 8005068:	d9b8      	bls.n	8004fdc <HAL_RCCEx_PeriphCLKConfig+0x130>
        return HAL_TIMEOUT;
 800506a:	2003      	movs	r0, #3
}
 800506c:	b003      	add	sp, #12
 800506e:	bdf0      	pop	{r4, r5, r6, r7, pc}
      if((HAL_GetTick() - tickstart ) > PLLSAI_TIMEOUT_VALUE)
 8005070:	f7fe fa28 	bl	80034c4 <HAL_GetTick>
 8005074:	1bc0      	subs	r0, r0, r7
 8005076:	2802      	cmp	r0, #2
 8005078:	f67f af2a 	bls.w	8004ed0 <HAL_RCCEx_PeriphCLKConfig+0x24>
 800507c:	e7f5      	b.n	800506a <HAL_RCCEx_PeriphCLKConfig+0x1be>
      if((HAL_GetTick() - tickstart ) > PLLSAI_TIMEOUT_VALUE)
 800507e:	f7fe fa21 	bl	80034c4 <HAL_GetTick>
 8005082:	1b80      	subs	r0, r0, r6
 8005084:	2802      	cmp	r0, #2
 8005086:	f67f af5d 	bls.w	8004f44 <HAL_RCCEx_PeriphCLKConfig+0x98>
 800508a:	e7ee      	b.n	800506a <HAL_RCCEx_PeriphCLKConfig+0x1be>
      if((HAL_GetTick() - tickstart ) > RCC_DBP_TIMEOUT_VALUE)
 800508c:	f7fe fa1a 	bl	80034c4 <HAL_GetTick>
 8005090:	1b80      	subs	r0, r0, r6
 8005092:	2802      	cmp	r0, #2
 8005094:	f67f af71 	bls.w	8004f7a <HAL_RCCEx_PeriphCLKConfig+0xce>
 8005098:	e7e7      	b.n	800506a <HAL_RCCEx_PeriphCLKConfig+0x1be>
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 800509a:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 800509c:	f402 7240 	and.w	r2, r2, #768	; 0x300
 80050a0:	4293      	cmp	r3, r2
 80050a2:	f43f af74 	beq.w	8004f8e <HAL_RCCEx_PeriphCLKConfig+0xe2>
      tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 80050a6:	6f2b      	ldr	r3, [r5, #112]	; 0x70
      __HAL_RCC_BACKUPRESET_FORCE();
 80050a8:	4a14      	ldr	r2, [pc, #80]	; (80050fc <HAL_RCCEx_PeriphCLKConfig+0x250>)
 80050aa:	2101      	movs	r1, #1
 80050ac:	6011      	str	r1, [r2, #0]
      tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 80050ae:	f423 7340 	bic.w	r3, r3, #768	; 0x300
      __HAL_RCC_BACKUPRESET_RELEASE();
 80050b2:	2100      	movs	r1, #0
 80050b4:	6011      	str	r1, [r2, #0]
      RCC->BDCR = tmpreg1;
 80050b6:	672b      	str	r3, [r5, #112]	; 0x70
      if(HAL_IS_BIT_SET(RCC->BDCR, RCC_BDCR_LSEON))
 80050b8:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 80050ba:	07da      	lsls	r2, r3, #31
 80050bc:	f57f af67 	bpl.w	8004f8e <HAL_RCCEx_PeriphCLKConfig+0xe2>
        tickstart = HAL_GetTick();
 80050c0:	f7fe fa00 	bl	80034c4 <HAL_GetTick>
          if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 80050c4:	f241 3788 	movw	r7, #5000	; 0x1388
        tickstart = HAL_GetTick();
 80050c8:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 80050ca:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 80050cc:	079b      	lsls	r3, r3, #30
 80050ce:	f53f af5e 	bmi.w	8004f8e <HAL_RCCEx_PeriphCLKConfig+0xe2>
          if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 80050d2:	f7fe f9f7 	bl	80034c4 <HAL_GetTick>
 80050d6:	1b80      	subs	r0, r0, r6
 80050d8:	42b8      	cmp	r0, r7
 80050da:	d9f6      	bls.n	80050ca <HAL_RCCEx_PeriphCLKConfig+0x21e>
 80050dc:	e7c5      	b.n	800506a <HAL_RCCEx_PeriphCLKConfig+0x1be>
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 80050de:	6891      	ldr	r1, [r2, #8]
 80050e0:	f421 11f8 	bic.w	r1, r1, #2031616	; 0x1f0000
 80050e4:	e763      	b.n	8004fae <HAL_RCCEx_PeriphCLKConfig+0x102>
 80050e6:	bf00      	nop
 80050e8:	42470070 	.word	0x42470070
 80050ec:	40023800 	.word	0x40023800
 80050f0:	40007000 	.word	0x40007000
 80050f4:	424711e0 	.word	0x424711e0
 80050f8:	42470068 	.word	0x42470068
 80050fc:	42470e40 	.word	0x42470e40

08005100 <HAL_SDRAM_Init>:
  *                the configuration information for SDRAM module.
  * @param  Timing Pointer to SDRAM control timing structure 
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_Init(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_TimingTypeDef *Timing)
{   
 8005100:	b538      	push	{r3, r4, r5, lr}
 8005102:	460d      	mov	r5, r1
  /* Check the SDRAM handle parameter */
  if(hsdram == NULL)
 8005104:	4604      	mov	r4, r0
 8005106:	b1c8      	cbz	r0, 800513c <HAL_SDRAM_Init+0x3c>
  {
    return HAL_ERROR;
  }
  
  if(hsdram->State == HAL_SDRAM_STATE_RESET)
 8005108:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 800510c:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8005110:	b91b      	cbnz	r3, 800511a <HAL_SDRAM_Init+0x1a>
  {  
    /* Allocate lock resource and initialize it */
    hsdram->Lock = HAL_UNLOCKED;
 8005112:	f880 202d 	strb.w	r2, [r0, #45]	; 0x2d

    /* Init the low level hardware */
    hsdram->MspInitCallback(hsdram);
#else
    /* Initialize the low level hardware (MSP) */
    HAL_SDRAM_MspInit(hsdram);
 8005116:	f7fc fe0d 	bl	8001d34 <HAL_SDRAM_MspInit>
#endif
  }
  
  /* Initialize the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;
 800511a:	2302      	movs	r3, #2
 800511c:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  
  /* Initialize SDRAM control Interface */
  FMC_SDRAM_Init(hsdram->Instance, &(hsdram->Init));
 8005120:	1d21      	adds	r1, r4, #4
 8005122:	6820      	ldr	r0, [r4, #0]
 8005124:	f000 ff6a 	bl	8005ffc <FMC_SDRAM_Init>
  
  /* Initialize SDRAM timing Interface */
  FMC_SDRAM_Timing_Init(hsdram->Instance, Timing, hsdram->Init.SDBank); 
 8005128:	6862      	ldr	r2, [r4, #4]
 800512a:	6820      	ldr	r0, [r4, #0]
 800512c:	4629      	mov	r1, r5
 800512e:	f000 ff9b 	bl	8006068 <FMC_SDRAM_Timing_Init>
  
  /* Update the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_READY;
 8005132:	2301      	movs	r3, #1
 8005134:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  
  return HAL_OK;
 8005138:	2000      	movs	r0, #0
}
 800513a:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 800513c:	2001      	movs	r0, #1
 800513e:	e7fc      	b.n	800513a <HAL_SDRAM_Init+0x3a>

08005140 <HAL_SDRAM_SendCommand>:
  * @param  Command SDRAM command structure
  * @param  Timeout Timeout duration
  * @retval HAL status
  */  
HAL_StatusTypeDef HAL_SDRAM_SendCommand(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_CommandTypeDef *Command, uint32_t Timeout)
{
 8005140:	b538      	push	{r3, r4, r5, lr}
 8005142:	4604      	mov	r4, r0
  /* Check the SDRAM controller state */
  if(hsdram->State == HAL_SDRAM_STATE_BUSY)
 8005144:	f890 002c 	ldrb.w	r0, [r0, #44]	; 0x2c
 8005148:	b2c0      	uxtb	r0, r0
 800514a:	2802      	cmp	r0, #2
{
 800514c:	460d      	mov	r5, r1
  if(hsdram->State == HAL_SDRAM_STATE_BUSY)
 800514e:	d00d      	beq.n	800516c <HAL_SDRAM_SendCommand+0x2c>
  {
    return HAL_BUSY;
  }
  
  /* Update the SDRAM state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;
 8005150:	2302      	movs	r3, #2
 8005152:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  
  /* Send SDRAM command */
  FMC_SDRAM_SendCommand(hsdram->Instance, Command, Timeout);
 8005156:	6820      	ldr	r0, [r4, #0]
 8005158:	f000 ffc3 	bl	80060e2 <FMC_SDRAM_SendCommand>
  
  /* Update the SDRAM controller state */
  if(Command->CommandMode == FMC_SDRAM_CMD_PALL)
 800515c:	682b      	ldr	r3, [r5, #0]
 800515e:	2b02      	cmp	r3, #2
  {
    hsdram->State = HAL_SDRAM_STATE_PRECHARGED;
 8005160:	bf0c      	ite	eq
 8005162:	2305      	moveq	r3, #5
  }
  else
  {
    hsdram->State = HAL_SDRAM_STATE_READY;
 8005164:	2301      	movne	r3, #1
 8005166:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  }
  
  return HAL_OK;  
 800516a:	2000      	movs	r0, #0
}
 800516c:	bd38      	pop	{r3, r4, r5, pc}

0800516e <HAL_SDRAM_ProgramRefreshRate>:
  *                the configuration information for SDRAM module.  
  * @param  RefreshRate The SDRAM refresh rate value       
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_ProgramRefreshRate(SDRAM_HandleTypeDef *hsdram, uint32_t RefreshRate)
{
 800516e:	b510      	push	{r4, lr}
 8005170:	4604      	mov	r4, r0
  /* Check the SDRAM controller state */
  if(hsdram->State == HAL_SDRAM_STATE_BUSY)
 8005172:	f890 002c 	ldrb.w	r0, [r0, #44]	; 0x2c
 8005176:	b2c0      	uxtb	r0, r0
 8005178:	2802      	cmp	r0, #2
 800517a:	d009      	beq.n	8005190 <HAL_SDRAM_ProgramRefreshRate+0x22>
  {
    return HAL_BUSY;
  } 
  
  /* Update the SDRAM state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;
 800517c:	2302      	movs	r3, #2
 800517e:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  
  /* Program the refresh rate */
  FMC_SDRAM_ProgramRefreshRate(hsdram->Instance ,RefreshRate);
 8005182:	6820      	ldr	r0, [r4, #0]
 8005184:	f000 ffd2 	bl	800612c <FMC_SDRAM_ProgramRefreshRate>
  
  /* Update the SDRAM state */
  hsdram->State = HAL_SDRAM_STATE_READY;
 8005188:	2301      	movs	r3, #1
 800518a:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  
  return HAL_OK;   
 800518e:	2000      	movs	r0, #0
}
 8005190:	bd10      	pop	{r4, pc}

08005192 <SPI_WaitFlagStateUntilTimeout.constprop.7>:
  * @param  State flag state to check
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_WaitFlagStateUntilTimeout(SPI_HandleTypeDef *hspi, uint32_t Flag, FlagStatus State,
 8005192:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8005194:	4604      	mov	r4, r0
 8005196:	460e      	mov	r6, r1
 8005198:	4615      	mov	r5, r2
 800519a:	461f      	mov	r7, r3
                                                       uint32_t Timeout, uint32_t Tickstart)
{
  while ((__HAL_SPI_GET_FLAG(hspi, Flag) ? SET : RESET) != State)
 800519c:	6821      	ldr	r1, [r4, #0]
 800519e:	688a      	ldr	r2, [r1, #8]
 80051a0:	ea36 0302 	bics.w	r3, r6, r2
 80051a4:	d001      	beq.n	80051aa <SPI_WaitFlagStateUntilTimeout.constprop.7+0x18>
        return HAL_TIMEOUT;
      }
    }
  }

  return HAL_OK;
 80051a6:	2000      	movs	r0, #0
 80051a8:	e02d      	b.n	8005206 <SPI_WaitFlagStateUntilTimeout.constprop.7+0x74>
    if (Timeout != HAL_MAX_DELAY)
 80051aa:	1c6b      	adds	r3, r5, #1
 80051ac:	d0f7      	beq.n	800519e <SPI_WaitFlagStateUntilTimeout.constprop.7+0xc>
      if (((HAL_GetTick() - Tickstart) >= Timeout) || (Timeout == 0U))
 80051ae:	f7fe f989 	bl	80034c4 <HAL_GetTick>
 80051b2:	1bc0      	subs	r0, r0, r7
 80051b4:	4285      	cmp	r5, r0
 80051b6:	d8f1      	bhi.n	800519c <SPI_WaitFlagStateUntilTimeout.constprop.7+0xa>
        __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_TXE | SPI_IT_RXNE | SPI_IT_ERR));
 80051b8:	6823      	ldr	r3, [r4, #0]
 80051ba:	685a      	ldr	r2, [r3, #4]
 80051bc:	f022 02e0 	bic.w	r2, r2, #224	; 0xe0
 80051c0:	605a      	str	r2, [r3, #4]
        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 80051c2:	6862      	ldr	r2, [r4, #4]
 80051c4:	f5b2 7f82 	cmp.w	r2, #260	; 0x104
 80051c8:	d10a      	bne.n	80051e0 <SPI_WaitFlagStateUntilTimeout.constprop.7+0x4e>
 80051ca:	68a2      	ldr	r2, [r4, #8]
 80051cc:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
 80051d0:	d002      	beq.n	80051d8 <SPI_WaitFlagStateUntilTimeout.constprop.7+0x46>
                                                     || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXONLY)))
 80051d2:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
 80051d6:	d103      	bne.n	80051e0 <SPI_WaitFlagStateUntilTimeout.constprop.7+0x4e>
          __HAL_SPI_DISABLE(hspi);
 80051d8:	681a      	ldr	r2, [r3, #0]
 80051da:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 80051de:	601a      	str	r2, [r3, #0]
        if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
 80051e0:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 80051e2:	f5b2 5f00 	cmp.w	r2, #8192	; 0x2000
 80051e6:	d107      	bne.n	80051f8 <SPI_WaitFlagStateUntilTimeout.constprop.7+0x66>
          SPI_RESET_CRC(hspi);
 80051e8:	681a      	ldr	r2, [r3, #0]
 80051ea:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 80051ee:	601a      	str	r2, [r3, #0]
 80051f0:	681a      	ldr	r2, [r3, #0]
 80051f2:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 80051f6:	601a      	str	r2, [r3, #0]
        hspi->State = HAL_SPI_STATE_READY;
 80051f8:	2301      	movs	r3, #1
 80051fa:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
        __HAL_UNLOCK(hspi);
 80051fe:	2300      	movs	r3, #0
 8005200:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
 8005204:	2003      	movs	r0, #3
}
 8005206:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08005208 <SPI_EndRxTransaction>:
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_EndRxTransaction(SPI_HandleTypeDef *hspi,  uint32_t Timeout, uint32_t Tickstart)
{
 8005208:	b538      	push	{r3, r4, r5, lr}
 800520a:	4613      	mov	r3, r2
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800520c:	6842      	ldr	r2, [r0, #4]
 800520e:	f5b2 7f82 	cmp.w	r2, #260	; 0x104
{
 8005212:	4604      	mov	r4, r0
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8005214:	d11f      	bne.n	8005256 <SPI_EndRxTransaction+0x4e>
 8005216:	6882      	ldr	r2, [r0, #8]
 8005218:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
 800521c:	d002      	beq.n	8005224 <SPI_EndRxTransaction+0x1c>
                                               || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXONLY)))
 800521e:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
 8005222:	d107      	bne.n	8005234 <SPI_EndRxTransaction+0x2c>
  {
    /* Disable SPI peripheral */
    __HAL_SPI_DISABLE(hspi);
 8005224:	6825      	ldr	r5, [r4, #0]
 8005226:	6828      	ldr	r0, [r5, #0]
  }

  /* Erratasheet: BSY bit may stay high at the end of a data transfer in Slave mode */
  if (hspi->Init.Mode == SPI_MODE_MASTER)
  {
    if (hspi->Init.Direction != SPI_DIRECTION_2LINES_RXONLY)
 8005228:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
    __HAL_SPI_DISABLE(hspi);
 800522c:	f020 0040 	bic.w	r0, r0, #64	; 0x40
 8005230:	6028      	str	r0, [r5, #0]
    if (hspi->Init.Direction != SPI_DIRECTION_2LINES_RXONLY)
 8005232:	d007      	beq.n	8005244 <SPI_EndRxTransaction+0x3c>
    {
      /* Control the BSY flag */
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 8005234:	460a      	mov	r2, r1
 8005236:	2180      	movs	r1, #128	; 0x80
 8005238:	4620      	mov	r0, r4
 800523a:	f7ff ffaa 	bl	8005192 <SPI_WaitFlagStateUntilTimeout.constprop.7>
 800523e:	b920      	cbnz	r0, 800524a <SPI_EndRxTransaction+0x42>
    {
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
      return HAL_TIMEOUT;
    }
  }
  return HAL_OK;
 8005240:	2000      	movs	r0, #0
}
 8005242:	bd38      	pop	{r3, r4, r5, pc}
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 8005244:	460a      	mov	r2, r1
 8005246:	2101      	movs	r1, #1
 8005248:	e7f6      	b.n	8005238 <SPI_EndRxTransaction+0x30>
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800524a:	6d63      	ldr	r3, [r4, #84]	; 0x54
 800524c:	f043 0320 	orr.w	r3, r3, #32
 8005250:	6563      	str	r3, [r4, #84]	; 0x54
      return HAL_TIMEOUT;
 8005252:	2003      	movs	r0, #3
 8005254:	e7f5      	b.n	8005242 <SPI_EndRxTransaction+0x3a>
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 8005256:	460a      	mov	r2, r1
 8005258:	2101      	movs	r1, #1
 800525a:	e7ee      	b.n	800523a <SPI_EndRxTransaction+0x32>

0800525c <SPI_EndRxTxTransaction>:
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_EndRxTxTransaction(SPI_HandleTypeDef *hspi, uint32_t Timeout, uint32_t Tickstart)
{
 800525c:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800525e:	4613      	mov	r3, r2
  /* Timeout in µs */
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 8005260:	4a12      	ldr	r2, [pc, #72]	; (80052ac <SPI_EndRxTxTransaction+0x50>)
 8005262:	4e13      	ldr	r6, [pc, #76]	; (80052b0 <SPI_EndRxTxTransaction+0x54>)
 8005264:	6815      	ldr	r5, [r2, #0]
  /* Erratasheet: BSY bit may stay high at the end of a data transfer in Slave mode */
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 8005266:	6842      	ldr	r2, [r0, #4]
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 8005268:	fbb5 f6f6 	udiv	r6, r5, r6
 800526c:	f44f 757a 	mov.w	r5, #1000	; 0x3e8
 8005270:	4375      	muls	r5, r6
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 8005272:	f5b2 7f82 	cmp.w	r2, #260	; 0x104
{
 8005276:	4604      	mov	r4, r0
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 8005278:	9501      	str	r5, [sp, #4]
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800527a:	d10b      	bne.n	8005294 <SPI_EndRxTxTransaction+0x38>
  {
    /* Control the BSY flag */
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 800527c:	460a      	mov	r2, r1
 800527e:	2180      	movs	r1, #128	; 0x80
 8005280:	f7ff ff87 	bl	8005192 <SPI_WaitFlagStateUntilTimeout.constprop.7>
 8005284:	b178      	cbz	r0, 80052a6 <SPI_EndRxTxTransaction+0x4a>
    {
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 8005286:	6d63      	ldr	r3, [r4, #84]	; 0x54
 8005288:	f043 0320 	orr.w	r3, r3, #32
 800528c:	6563      	str	r3, [r4, #84]	; 0x54
      return HAL_TIMEOUT;
 800528e:	2003      	movs	r0, #3
      count--;
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
  }

  return HAL_OK;
}
 8005290:	b002      	add	sp, #8
 8005292:	bd70      	pop	{r4, r5, r6, pc}
      if (count == 0U)
 8005294:	9b01      	ldr	r3, [sp, #4]
 8005296:	b133      	cbz	r3, 80052a6 <SPI_EndRxTxTransaction+0x4a>
      count--;
 8005298:	9b01      	ldr	r3, [sp, #4]
 800529a:	3b01      	subs	r3, #1
 800529c:	9301      	str	r3, [sp, #4]
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
 800529e:	6823      	ldr	r3, [r4, #0]
 80052a0:	689b      	ldr	r3, [r3, #8]
 80052a2:	061b      	lsls	r3, r3, #24
 80052a4:	d4f6      	bmi.n	8005294 <SPI_EndRxTxTransaction+0x38>
  return HAL_OK;
 80052a6:	2000      	movs	r0, #0
 80052a8:	e7f2      	b.n	8005290 <SPI_EndRxTxTransaction+0x34>
 80052aa:	bf00      	nop
 80052ac:	20000074 	.word	0x20000074
 80052b0:	016e3600 	.word	0x016e3600

080052b4 <HAL_SPI_Init>:
{
 80052b4:	b510      	push	{r4, lr}
  if (hspi == NULL)
 80052b6:	4604      	mov	r4, r0
 80052b8:	2800      	cmp	r0, #0
 80052ba:	d036      	beq.n	800532a <HAL_SPI_Init+0x76>
  hspi->Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 80052bc:	2300      	movs	r3, #0
 80052be:	6283      	str	r3, [r0, #40]	; 0x28
  if (hspi->State == HAL_SPI_STATE_RESET)
 80052c0:	f890 3051 	ldrb.w	r3, [r0, #81]	; 0x51
 80052c4:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 80052c8:	b91b      	cbnz	r3, 80052d2 <HAL_SPI_Init+0x1e>
    hspi->Lock = HAL_UNLOCKED;
 80052ca:	f880 2050 	strb.w	r2, [r0, #80]	; 0x50
    HAL_SPI_MspInit(hspi);
 80052ce:	f7fc fcfb 	bl	8001cc8 <HAL_SPI_MspInit>
  __HAL_SPI_DISABLE(hspi);
 80052d2:	6821      	ldr	r1, [r4, #0]
  WRITE_REG(hspi->Instance->CR1, (hspi->Init.Mode | hspi->Init.Direction | hspi->Init.DataSize |
 80052d4:	69a2      	ldr	r2, [r4, #24]
  hspi->State = HAL_SPI_STATE_BUSY;
 80052d6:	2302      	movs	r3, #2
 80052d8:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
  __HAL_SPI_DISABLE(hspi);
 80052dc:	680b      	ldr	r3, [r1, #0]
 80052de:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 80052e2:	600b      	str	r3, [r1, #0]
  WRITE_REG(hspi->Instance->CR1, (hspi->Init.Mode | hspi->Init.Direction | hspi->Init.DataSize |
 80052e4:	e9d4 3001 	ldrd	r3, r0, [r4, #4]
 80052e8:	4303      	orrs	r3, r0
 80052ea:	68e0      	ldr	r0, [r4, #12]
 80052ec:	4303      	orrs	r3, r0
 80052ee:	6920      	ldr	r0, [r4, #16]
 80052f0:	4303      	orrs	r3, r0
 80052f2:	6960      	ldr	r0, [r4, #20]
 80052f4:	4303      	orrs	r3, r0
 80052f6:	69e0      	ldr	r0, [r4, #28]
 80052f8:	4303      	orrs	r3, r0
 80052fa:	6a20      	ldr	r0, [r4, #32]
 80052fc:	4303      	orrs	r3, r0
 80052fe:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 8005300:	4303      	orrs	r3, r0
 8005302:	f402 7000 	and.w	r0, r2, #512	; 0x200
 8005306:	4303      	orrs	r3, r0
 8005308:	600b      	str	r3, [r1, #0]
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | hspi->Init.TIMode));
 800530a:	0c12      	lsrs	r2, r2, #16
 800530c:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800530e:	f002 0204 	and.w	r2, r2, #4
 8005312:	431a      	orrs	r2, r3
 8005314:	604a      	str	r2, [r1, #4]
  CLEAR_BIT(hspi->Instance->I2SCFGR, SPI_I2SCFGR_I2SMOD);
 8005316:	69cb      	ldr	r3, [r1, #28]
 8005318:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 800531c:	61cb      	str	r3, [r1, #28]
  hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 800531e:	2000      	movs	r0, #0
  hspi->State     = HAL_SPI_STATE_READY;
 8005320:	2301      	movs	r3, #1
  hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 8005322:	6560      	str	r0, [r4, #84]	; 0x54
  hspi->State     = HAL_SPI_STATE_READY;
 8005324:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
}
 8005328:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 800532a:	2001      	movs	r0, #1
 800532c:	e7fc      	b.n	8005328 <HAL_SPI_Init+0x74>

0800532e <HAL_SPI_Transmit>:
{
 800532e:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8005332:	461e      	mov	r6, r3
  __HAL_LOCK(hspi);
 8005334:	f890 3050 	ldrb.w	r3, [r0, #80]	; 0x50
 8005338:	2b01      	cmp	r3, #1
{
 800533a:	4604      	mov	r4, r0
 800533c:	460d      	mov	r5, r1
 800533e:	4690      	mov	r8, r2
  __HAL_LOCK(hspi);
 8005340:	f000 809b 	beq.w	800547a <HAL_SPI_Transmit+0x14c>
 8005344:	2301      	movs	r3, #1
 8005346:	f880 3050 	strb.w	r3, [r0, #80]	; 0x50
  tickstart = HAL_GetTick();
 800534a:	f7fe f8bb 	bl	80034c4 <HAL_GetTick>
 800534e:	4607      	mov	r7, r0
  if (hspi->State != HAL_SPI_STATE_READY)
 8005350:	f894 0051 	ldrb.w	r0, [r4, #81]	; 0x51
 8005354:	b2c0      	uxtb	r0, r0
 8005356:	2801      	cmp	r0, #1
 8005358:	f040 808d 	bne.w	8005476 <HAL_SPI_Transmit+0x148>
  if ((pData == NULL) || (Size == 0U))
 800535c:	2d00      	cmp	r5, #0
 800535e:	d05d      	beq.n	800541c <HAL_SPI_Transmit+0xee>
 8005360:	f1b8 0f00 	cmp.w	r8, #0
 8005364:	d05a      	beq.n	800541c <HAL_SPI_Transmit+0xee>
  hspi->State       = HAL_SPI_STATE_BUSY_TX;
 8005366:	2303      	movs	r3, #3
 8005368:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800536c:	2000      	movs	r0, #0
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800536e:	68a3      	ldr	r3, [r4, #8]
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 8005370:	6560      	str	r0, [r4, #84]	; 0x54
  hspi->pRxBuffPtr  = (uint8_t *)NULL;
 8005372:	63a0      	str	r0, [r4, #56]	; 0x38
  hspi->TxXferCount = Size;
 8005374:	f8a4 8036 	strh.w	r8, [r4, #54]	; 0x36
  hspi->RxXferSize  = 0U;
 8005378:	87a0      	strh	r0, [r4, #60]	; 0x3c
  hspi->RxXferCount = 0U;
 800537a:	87e0      	strh	r0, [r4, #62]	; 0x3e
  hspi->RxISR       = NULL;
 800537c:	e9c4 0010 	strd	r0, r0, [r4, #64]	; 0x40
 8005380:	6820      	ldr	r0, [r4, #0]
  hspi->pTxBuffPtr  = (uint8_t *)pData;
 8005382:	6325      	str	r5, [r4, #48]	; 0x30
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8005384:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
    SPI_1LINE_TX(hspi);
 8005388:	bf08      	it	eq
 800538a:	6803      	ldreq	r3, [r0, #0]
  hspi->TxXferSize  = Size;
 800538c:	f8a4 8034 	strh.w	r8, [r4, #52]	; 0x34
    SPI_1LINE_TX(hspi);
 8005390:	bf04      	itt	eq
 8005392:	f443 4380 	orreq.w	r3, r3, #16384	; 0x4000
 8005396:	6003      	streq	r3, [r0, #0]
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 8005398:	6803      	ldr	r3, [r0, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 800539a:	68e2      	ldr	r2, [r4, #12]
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800539c:	065b      	lsls	r3, r3, #25
    __HAL_SPI_ENABLE(hspi);
 800539e:	bf5e      	ittt	pl
 80053a0:	6803      	ldrpl	r3, [r0, #0]
 80053a2:	f043 0340 	orrpl.w	r3, r3, #64	; 0x40
 80053a6:	6003      	strpl	r3, [r0, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 80053a8:	f5b2 6f00 	cmp.w	r2, #2048	; 0x800
 80053ac:	6863      	ldr	r3, [r4, #4]
 80053ae:	d13e      	bne.n	800542e <HAL_SPI_Transmit+0x100>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 80053b0:	b113      	cbz	r3, 80053b8 <HAL_SPI_Transmit+0x8a>
 80053b2:	f1b8 0f01 	cmp.w	r8, #1
 80053b6:	d107      	bne.n	80053c8 <HAL_SPI_Transmit+0x9a>
      hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 80053b8:	f835 3b02 	ldrh.w	r3, [r5], #2
 80053bc:	60c3      	str	r3, [r0, #12]
      hspi->pTxBuffPtr += sizeof(uint16_t);
 80053be:	6325      	str	r5, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 80053c0:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 80053c2:	3b01      	subs	r3, #1
 80053c4:	b29b      	uxth	r3, r3
 80053c6:	86e3      	strh	r3, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 80053c8:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 80053ca:	b29b      	uxth	r3, r3
 80053cc:	b9a3      	cbnz	r3, 80053f8 <HAL_SPI_Transmit+0xca>
  if (SPI_EndRxTxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 80053ce:	463a      	mov	r2, r7
 80053d0:	4631      	mov	r1, r6
 80053d2:	4620      	mov	r0, r4
 80053d4:	f7ff ff42 	bl	800525c <SPI_EndRxTxTransaction>
 80053d8:	2800      	cmp	r0, #0
 80053da:	d149      	bne.n	8005470 <HAL_SPI_Transmit+0x142>
  if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 80053dc:	68a3      	ldr	r3, [r4, #8]
 80053de:	b933      	cbnz	r3, 80053ee <HAL_SPI_Transmit+0xc0>
    __HAL_SPI_CLEAR_OVRFLAG(hspi);
 80053e0:	9301      	str	r3, [sp, #4]
 80053e2:	6823      	ldr	r3, [r4, #0]
 80053e4:	68da      	ldr	r2, [r3, #12]
 80053e6:	9201      	str	r2, [sp, #4]
 80053e8:	689b      	ldr	r3, [r3, #8]
 80053ea:	9301      	str	r3, [sp, #4]
 80053ec:	9b01      	ldr	r3, [sp, #4]
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 80053ee:	6d60      	ldr	r0, [r4, #84]	; 0x54
    errorcode = HAL_BUSY;
 80053f0:	3000      	adds	r0, #0
 80053f2:	bf18      	it	ne
 80053f4:	2001      	movne	r0, #1
error:
 80053f6:	e011      	b.n	800541c <HAL_SPI_Transmit+0xee>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 80053f8:	6822      	ldr	r2, [r4, #0]
 80053fa:	6893      	ldr	r3, [r2, #8]
 80053fc:	0798      	lsls	r0, r3, #30
 80053fe:	d505      	bpl.n	800540c <HAL_SPI_Transmit+0xde>
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 8005400:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8005402:	f833 1b02 	ldrh.w	r1, [r3], #2
 8005406:	60d1      	str	r1, [r2, #12]
        hspi->pTxBuffPtr += sizeof(uint16_t);
 8005408:	6323      	str	r3, [r4, #48]	; 0x30
 800540a:	e7d9      	b.n	80053c0 <HAL_SPI_Transmit+0x92>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800540c:	f7fe f85a 	bl	80034c4 <HAL_GetTick>
 8005410:	1bc0      	subs	r0, r0, r7
 8005412:	42b0      	cmp	r0, r6
 8005414:	d3d8      	bcc.n	80053c8 <HAL_SPI_Transmit+0x9a>
 8005416:	1c71      	adds	r1, r6, #1
 8005418:	d0d6      	beq.n	80053c8 <HAL_SPI_Transmit+0x9a>
          errorcode = HAL_TIMEOUT;
 800541a:	2003      	movs	r0, #3
  hspi->State = HAL_SPI_STATE_READY;
 800541c:	2301      	movs	r3, #1
 800541e:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
  __HAL_UNLOCK(hspi);
 8005422:	2300      	movs	r3, #0
 8005424:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
}
 8005428:	b002      	add	sp, #8
 800542a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800542e:	b113      	cbz	r3, 8005436 <HAL_SPI_Transmit+0x108>
 8005430:	f1b8 0f01 	cmp.w	r8, #1
 8005434:	d108      	bne.n	8005448 <HAL_SPI_Transmit+0x11a>
      *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 8005436:	782b      	ldrb	r3, [r5, #0]
 8005438:	7303      	strb	r3, [r0, #12]
        hspi->pTxBuffPtr += sizeof(uint8_t);
 800543a:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800543c:	3301      	adds	r3, #1
 800543e:	6323      	str	r3, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 8005440:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8005442:	3b01      	subs	r3, #1
 8005444:	b29b      	uxth	r3, r3
 8005446:	86e3      	strh	r3, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 8005448:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800544a:	b29b      	uxth	r3, r3
 800544c:	2b00      	cmp	r3, #0
 800544e:	d0be      	beq.n	80053ce <HAL_SPI_Transmit+0xa0>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 8005450:	6823      	ldr	r3, [r4, #0]
 8005452:	689a      	ldr	r2, [r3, #8]
 8005454:	0792      	lsls	r2, r2, #30
 8005456:	d503      	bpl.n	8005460 <HAL_SPI_Transmit+0x132>
        *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 8005458:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800545a:	7812      	ldrb	r2, [r2, #0]
 800545c:	731a      	strb	r2, [r3, #12]
 800545e:	e7ec      	b.n	800543a <HAL_SPI_Transmit+0x10c>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 8005460:	f7fe f830 	bl	80034c4 <HAL_GetTick>
 8005464:	1bc0      	subs	r0, r0, r7
 8005466:	42b0      	cmp	r0, r6
 8005468:	d3ee      	bcc.n	8005448 <HAL_SPI_Transmit+0x11a>
 800546a:	1c73      	adds	r3, r6, #1
 800546c:	d0ec      	beq.n	8005448 <HAL_SPI_Transmit+0x11a>
 800546e:	e7d4      	b.n	800541a <HAL_SPI_Transmit+0xec>
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 8005470:	2320      	movs	r3, #32
 8005472:	6563      	str	r3, [r4, #84]	; 0x54
 8005474:	e7b2      	b.n	80053dc <HAL_SPI_Transmit+0xae>
    errorcode = HAL_BUSY;
 8005476:	2002      	movs	r0, #2
 8005478:	e7d0      	b.n	800541c <HAL_SPI_Transmit+0xee>
  __HAL_LOCK(hspi);
 800547a:	2002      	movs	r0, #2
 800547c:	e7d4      	b.n	8005428 <HAL_SPI_Transmit+0xfa>

0800547e <HAL_SPI_TransmitReceive>:
{
 800547e:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8005482:	461e      	mov	r6, r3
  __HAL_LOCK(hspi);
 8005484:	f890 3050 	ldrb.w	r3, [r0, #80]	; 0x50
{
 8005488:	9f0a      	ldr	r7, [sp, #40]	; 0x28
  __HAL_LOCK(hspi);
 800548a:	2b01      	cmp	r3, #1
{
 800548c:	4604      	mov	r4, r0
 800548e:	460d      	mov	r5, r1
 8005490:	4691      	mov	r9, r2
  __HAL_LOCK(hspi);
 8005492:	f000 80e2 	beq.w	800565a <HAL_SPI_TransmitReceive+0x1dc>
 8005496:	2301      	movs	r3, #1
 8005498:	f880 3050 	strb.w	r3, [r0, #80]	; 0x50
  tickstart = HAL_GetTick();
 800549c:	f7fe f812 	bl	80034c4 <HAL_GetTick>
  tmp_state           = hspi->State;
 80054a0:	f894 3051 	ldrb.w	r3, [r4, #81]	; 0x51
  tmp_mode            = hspi->Init.Mode;
 80054a4:	6861      	ldr	r1, [r4, #4]
  tmp_state           = hspi->State;
 80054a6:	b2db      	uxtb	r3, r3
  if (!((tmp_state == HAL_SPI_STATE_READY) || \
 80054a8:	2b01      	cmp	r3, #1
  tickstart = HAL_GetTick();
 80054aa:	4680      	mov	r8, r0
  if (!((tmp_state == HAL_SPI_STATE_READY) || \
 80054ac:	d00a      	beq.n	80054c4 <HAL_SPI_TransmitReceive+0x46>
 80054ae:	f5b1 7f82 	cmp.w	r1, #260	; 0x104
 80054b2:	f040 80d0 	bne.w	8005656 <HAL_SPI_TransmitReceive+0x1d8>
        ((tmp_mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES) && (tmp_state == HAL_SPI_STATE_BUSY_RX))))
 80054b6:	68a0      	ldr	r0, [r4, #8]
 80054b8:	2800      	cmp	r0, #0
 80054ba:	f040 80cc 	bne.w	8005656 <HAL_SPI_TransmitReceive+0x1d8>
 80054be:	2b04      	cmp	r3, #4
 80054c0:	f040 80c9 	bne.w	8005656 <HAL_SPI_TransmitReceive+0x1d8>
  if ((pTxData == NULL) || (pRxData == NULL) || (Size == 0U))
 80054c4:	2d00      	cmp	r5, #0
 80054c6:	f000 80c4 	beq.w	8005652 <HAL_SPI_TransmitReceive+0x1d4>
 80054ca:	f1b9 0f00 	cmp.w	r9, #0
 80054ce:	f000 80c0 	beq.w	8005652 <HAL_SPI_TransmitReceive+0x1d4>
 80054d2:	2e00      	cmp	r6, #0
 80054d4:	f000 80bd 	beq.w	8005652 <HAL_SPI_TransmitReceive+0x1d4>
  if (hspi->State != HAL_SPI_STATE_BUSY_RX)
 80054d8:	f894 3051 	ldrb.w	r3, [r4, #81]	; 0x51
  hspi->pRxBuffPtr  = (uint8_t *)pRxData;
 80054dc:	f8c4 9038 	str.w	r9, [r4, #56]	; 0x38
  if (hspi->State != HAL_SPI_STATE_BUSY_RX)
 80054e0:	2b04      	cmp	r3, #4
    hspi->State = HAL_SPI_STATE_BUSY_TX_RX;
 80054e2:	bf1c      	itt	ne
 80054e4:	2305      	movne	r3, #5
 80054e6:	f884 3051 	strbne.w	r3, [r4, #81]	; 0x51
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 80054ea:	2300      	movs	r3, #0
 80054ec:	6563      	str	r3, [r4, #84]	; 0x54
  hspi->TxISR       = NULL;
 80054ee:	e9c4 3310 	strd	r3, r3, [r4, #64]	; 0x40
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 80054f2:	6823      	ldr	r3, [r4, #0]
  hspi->RxXferCount = Size;
 80054f4:	87e6      	strh	r6, [r4, #62]	; 0x3e
  hspi->TxXferCount = Size;
 80054f6:	86e6      	strh	r6, [r4, #54]	; 0x36
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 80054f8:	681a      	ldr	r2, [r3, #0]
  hspi->RxXferSize  = Size;
 80054fa:	87a6      	strh	r6, [r4, #60]	; 0x3c
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 80054fc:	0650      	lsls	r0, r2, #25
    __HAL_SPI_ENABLE(hspi);
 80054fe:	bf58      	it	pl
 8005500:	681a      	ldrpl	r2, [r3, #0]
  hspi->pTxBuffPtr  = (uint8_t *)pTxData;
 8005502:	6325      	str	r5, [r4, #48]	; 0x30
    __HAL_SPI_ENABLE(hspi);
 8005504:	bf58      	it	pl
 8005506:	f042 0240 	orrpl.w	r2, r2, #64	; 0x40
  hspi->TxXferSize  = Size;
 800550a:	86a6      	strh	r6, [r4, #52]	; 0x34
    __HAL_SPI_ENABLE(hspi);
 800550c:	bf58      	it	pl
 800550e:	601a      	strpl	r2, [r3, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 8005510:	68e2      	ldr	r2, [r4, #12]
 8005512:	f5b2 6f00 	cmp.w	r2, #2048	; 0x800
 8005516:	d158      	bne.n	80055ca <HAL_SPI_TransmitReceive+0x14c>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 8005518:	b109      	cbz	r1, 800551e <HAL_SPI_TransmitReceive+0xa0>
 800551a:	2e01      	cmp	r6, #1
 800551c:	d107      	bne.n	800552e <HAL_SPI_TransmitReceive+0xb0>
      hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800551e:	f835 2b02 	ldrh.w	r2, [r5], #2
 8005522:	60da      	str	r2, [r3, #12]
      hspi->TxXferCount--;
 8005524:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
      hspi->pTxBuffPtr += sizeof(uint16_t);
 8005526:	6325      	str	r5, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 8005528:	3b01      	subs	r3, #1
 800552a:	b29b      	uxth	r3, r3
 800552c:	86e3      	strh	r3, [r4, #54]	; 0x36
        txallowed = 1U;
 800552e:	2501      	movs	r5, #1
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 8005530:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8005532:	b29b      	uxth	r3, r3
 8005534:	b9ab      	cbnz	r3, 8005562 <HAL_SPI_TransmitReceive+0xe4>
 8005536:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8005538:	b29b      	uxth	r3, r3
 800553a:	b993      	cbnz	r3, 8005562 <HAL_SPI_TransmitReceive+0xe4>
  if (SPI_EndRxTxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 800553c:	4642      	mov	r2, r8
 800553e:	4639      	mov	r1, r7
 8005540:	4620      	mov	r0, r4
 8005542:	f7ff fe8b 	bl	800525c <SPI_EndRxTxTransaction>
 8005546:	2800      	cmp	r0, #0
 8005548:	f040 8081 	bne.w	800564e <HAL_SPI_TransmitReceive+0x1d0>
  if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 800554c:	68a3      	ldr	r3, [r4, #8]
 800554e:	2b00      	cmp	r3, #0
 8005550:	d132      	bne.n	80055b8 <HAL_SPI_TransmitReceive+0x13a>
    __HAL_SPI_CLEAR_OVRFLAG(hspi);
 8005552:	6823      	ldr	r3, [r4, #0]
 8005554:	9001      	str	r0, [sp, #4]
 8005556:	68da      	ldr	r2, [r3, #12]
 8005558:	9201      	str	r2, [sp, #4]
 800555a:	689b      	ldr	r3, [r3, #8]
 800555c:	9301      	str	r3, [sp, #4]
 800555e:	9b01      	ldr	r3, [sp, #4]
 8005560:	e02a      	b.n	80055b8 <HAL_SPI_TransmitReceive+0x13a>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 8005562:	6822      	ldr	r2, [r4, #0]
 8005564:	6893      	ldr	r3, [r2, #8]
 8005566:	0799      	lsls	r1, r3, #30
 8005568:	d50d      	bpl.n	8005586 <HAL_SPI_TransmitReceive+0x108>
 800556a:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800556c:	b29b      	uxth	r3, r3
 800556e:	b153      	cbz	r3, 8005586 <HAL_SPI_TransmitReceive+0x108>
 8005570:	b14d      	cbz	r5, 8005586 <HAL_SPI_TransmitReceive+0x108>
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 8005572:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8005574:	f833 1b02 	ldrh.w	r1, [r3], #2
 8005578:	60d1      	str	r1, [r2, #12]
        hspi->pTxBuffPtr += sizeof(uint16_t);
 800557a:	6323      	str	r3, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800557c:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800557e:	3b01      	subs	r3, #1
 8005580:	b29b      	uxth	r3, r3
 8005582:	86e3      	strh	r3, [r4, #54]	; 0x36
        txallowed = 0U;
 8005584:	2500      	movs	r5, #0
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 8005586:	6893      	ldr	r3, [r2, #8]
 8005588:	07db      	lsls	r3, r3, #31
 800558a:	d50c      	bpl.n	80055a6 <HAL_SPI_TransmitReceive+0x128>
 800558c:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800558e:	b29b      	uxth	r3, r3
 8005590:	b14b      	cbz	r3, 80055a6 <HAL_SPI_TransmitReceive+0x128>
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 8005592:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8005594:	68d2      	ldr	r2, [r2, #12]
 8005596:	f823 2b02 	strh.w	r2, [r3], #2
        hspi->pRxBuffPtr += sizeof(uint16_t);
 800559a:	63a3      	str	r3, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800559c:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800559e:	3b01      	subs	r3, #1
 80055a0:	b29b      	uxth	r3, r3
 80055a2:	87e3      	strh	r3, [r4, #62]	; 0x3e
        txallowed = 1U;
 80055a4:	2501      	movs	r5, #1
      if (((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY))
 80055a6:	f7fd ff8d 	bl	80034c4 <HAL_GetTick>
 80055aa:	eba0 0008 	sub.w	r0, r0, r8
 80055ae:	4287      	cmp	r7, r0
 80055b0:	d8be      	bhi.n	8005530 <HAL_SPI_TransmitReceive+0xb2>
 80055b2:	1c7e      	adds	r6, r7, #1
 80055b4:	d0bc      	beq.n	8005530 <HAL_SPI_TransmitReceive+0xb2>
        errorcode = HAL_TIMEOUT;
 80055b6:	2003      	movs	r0, #3
  hspi->State = HAL_SPI_STATE_READY;
 80055b8:	2301      	movs	r3, #1
 80055ba:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
  __HAL_UNLOCK(hspi);
 80055be:	2300      	movs	r3, #0
 80055c0:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
}
 80055c4:	b003      	add	sp, #12
 80055c6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 80055ca:	b109      	cbz	r1, 80055d0 <HAL_SPI_TransmitReceive+0x152>
 80055cc:	2e01      	cmp	r6, #1
 80055ce:	d108      	bne.n	80055e2 <HAL_SPI_TransmitReceive+0x164>
      *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 80055d0:	782a      	ldrb	r2, [r5, #0]
 80055d2:	731a      	strb	r2, [r3, #12]
      hspi->pTxBuffPtr += sizeof(uint8_t);
 80055d4:	6b23      	ldr	r3, [r4, #48]	; 0x30
 80055d6:	3301      	adds	r3, #1
 80055d8:	6323      	str	r3, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 80055da:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 80055dc:	3b01      	subs	r3, #1
 80055de:	b29b      	uxth	r3, r3
 80055e0:	86e3      	strh	r3, [r4, #54]	; 0x36
        txallowed = 1U;
 80055e2:	2501      	movs	r5, #1
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 80055e4:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 80055e6:	b29b      	uxth	r3, r3
 80055e8:	b91b      	cbnz	r3, 80055f2 <HAL_SPI_TransmitReceive+0x174>
 80055ea:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 80055ec:	b29b      	uxth	r3, r3
 80055ee:	2b00      	cmp	r3, #0
 80055f0:	d0a4      	beq.n	800553c <HAL_SPI_TransmitReceive+0xbe>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 80055f2:	6822      	ldr	r2, [r4, #0]
 80055f4:	6893      	ldr	r3, [r2, #8]
 80055f6:	0798      	lsls	r0, r3, #30
 80055f8:	d50e      	bpl.n	8005618 <HAL_SPI_TransmitReceive+0x19a>
 80055fa:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 80055fc:	b29b      	uxth	r3, r3
 80055fe:	b15b      	cbz	r3, 8005618 <HAL_SPI_TransmitReceive+0x19a>
 8005600:	b155      	cbz	r5, 8005618 <HAL_SPI_TransmitReceive+0x19a>
        *(__IO uint8_t *)&hspi->Instance->DR = (*hspi->pTxBuffPtr);
 8005602:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8005604:	781b      	ldrb	r3, [r3, #0]
 8005606:	7313      	strb	r3, [r2, #12]
        hspi->pTxBuffPtr++;
 8005608:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800560a:	3301      	adds	r3, #1
 800560c:	6323      	str	r3, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800560e:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8005610:	3b01      	subs	r3, #1
 8005612:	b29b      	uxth	r3, r3
 8005614:	86e3      	strh	r3, [r4, #54]	; 0x36
        txallowed = 0U;
 8005616:	2500      	movs	r5, #0
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 8005618:	6822      	ldr	r2, [r4, #0]
 800561a:	6893      	ldr	r3, [r2, #8]
 800561c:	07d9      	lsls	r1, r3, #31
 800561e:	d50d      	bpl.n	800563c <HAL_SPI_TransmitReceive+0x1be>
 8005620:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8005622:	b29b      	uxth	r3, r3
 8005624:	b153      	cbz	r3, 800563c <HAL_SPI_TransmitReceive+0x1be>
        (*(uint8_t *)hspi->pRxBuffPtr) = hspi->Instance->DR;
 8005626:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8005628:	68d2      	ldr	r2, [r2, #12]
 800562a:	701a      	strb	r2, [r3, #0]
        hspi->pRxBuffPtr++;
 800562c:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800562e:	3301      	adds	r3, #1
 8005630:	63a3      	str	r3, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 8005632:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8005634:	3b01      	subs	r3, #1
 8005636:	b29b      	uxth	r3, r3
 8005638:	87e3      	strh	r3, [r4, #62]	; 0x3e
        txallowed = 1U;
 800563a:	2501      	movs	r5, #1
      if ((((HAL_GetTick() - tickstart) >=  Timeout) && ((Timeout != HAL_MAX_DELAY))) || (Timeout == 0U))
 800563c:	f7fd ff42 	bl	80034c4 <HAL_GetTick>
 8005640:	eba0 0008 	sub.w	r0, r0, r8
 8005644:	4287      	cmp	r7, r0
 8005646:	d8cd      	bhi.n	80055e4 <HAL_SPI_TransmitReceive+0x166>
 8005648:	1c7b      	adds	r3, r7, #1
 800564a:	d0cb      	beq.n	80055e4 <HAL_SPI_TransmitReceive+0x166>
 800564c:	e7b3      	b.n	80055b6 <HAL_SPI_TransmitReceive+0x138>
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 800564e:	2320      	movs	r3, #32
 8005650:	6563      	str	r3, [r4, #84]	; 0x54
    errorcode = HAL_ERROR;
 8005652:	2001      	movs	r0, #1
 8005654:	e7b0      	b.n	80055b8 <HAL_SPI_TransmitReceive+0x13a>
    errorcode = HAL_BUSY;
 8005656:	2002      	movs	r0, #2
 8005658:	e7ae      	b.n	80055b8 <HAL_SPI_TransmitReceive+0x13a>
  __HAL_LOCK(hspi);
 800565a:	2002      	movs	r0, #2
 800565c:	e7b2      	b.n	80055c4 <HAL_SPI_TransmitReceive+0x146>

0800565e <HAL_SPI_Receive>:
{
 800565e:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8005662:	461d      	mov	r5, r3
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES))
 8005664:	6843      	ldr	r3, [r0, #4]
 8005666:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
{
 800566a:	4604      	mov	r4, r0
 800566c:	4688      	mov	r8, r1
 800566e:	4617      	mov	r7, r2
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES))
 8005670:	d10c      	bne.n	800568c <HAL_SPI_Receive+0x2e>
 8005672:	6883      	ldr	r3, [r0, #8]
 8005674:	b953      	cbnz	r3, 800568c <HAL_SPI_Receive+0x2e>
    hspi->State = HAL_SPI_STATE_BUSY_RX;
 8005676:	2304      	movs	r3, #4
 8005678:	f880 3051 	strb.w	r3, [r0, #81]	; 0x51
    return HAL_SPI_TransmitReceive(hspi, pData, pData, Size, Timeout);
 800567c:	4613      	mov	r3, r2
 800567e:	9500      	str	r5, [sp, #0]
 8005680:	460a      	mov	r2, r1
 8005682:	f7ff fefc 	bl	800547e <HAL_SPI_TransmitReceive>
}
 8005686:	b002      	add	sp, #8
 8005688:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  __HAL_LOCK(hspi);
 800568c:	f894 3050 	ldrb.w	r3, [r4, #80]	; 0x50
 8005690:	2b01      	cmp	r3, #1
 8005692:	d079      	beq.n	8005788 <HAL_SPI_Receive+0x12a>
 8005694:	2301      	movs	r3, #1
 8005696:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
  tickstart = HAL_GetTick();
 800569a:	f7fd ff13 	bl	80034c4 <HAL_GetTick>
 800569e:	4606      	mov	r6, r0
  if (hspi->State != HAL_SPI_STATE_READY)
 80056a0:	f894 0051 	ldrb.w	r0, [r4, #81]	; 0x51
 80056a4:	b2c0      	uxtb	r0, r0
 80056a6:	2801      	cmp	r0, #1
 80056a8:	d16c      	bne.n	8005784 <HAL_SPI_Receive+0x126>
  if ((pData == NULL) || (Size == 0U))
 80056aa:	f1b8 0f00 	cmp.w	r8, #0
 80056ae:	d057      	beq.n	8005760 <HAL_SPI_Receive+0x102>
 80056b0:	2f00      	cmp	r7, #0
 80056b2:	d055      	beq.n	8005760 <HAL_SPI_Receive+0x102>
  hspi->State       = HAL_SPI_STATE_BUSY_RX;
 80056b4:	2304      	movs	r3, #4
 80056b6:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 80056ba:	68a2      	ldr	r2, [r4, #8]
  hspi->RxXferSize  = Size;
 80056bc:	87a7      	strh	r7, [r4, #60]	; 0x3c
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 80056be:	2300      	movs	r3, #0
 80056c0:	6563      	str	r3, [r4, #84]	; 0x54
  hspi->pTxBuffPtr  = (uint8_t *)NULL;
 80056c2:	6323      	str	r3, [r4, #48]	; 0x30
  hspi->RxXferCount = Size;
 80056c4:	87e7      	strh	r7, [r4, #62]	; 0x3e
  hspi->TxXferSize  = 0U;
 80056c6:	86a3      	strh	r3, [r4, #52]	; 0x34
  hspi->TxXferCount = 0U;
 80056c8:	86e3      	strh	r3, [r4, #54]	; 0x36
  hspi->TxISR       = NULL;
 80056ca:	e9c4 3310 	strd	r3, r3, [r4, #64]	; 0x40
 80056ce:	6823      	ldr	r3, [r4, #0]
  hspi->pRxBuffPtr  = (uint8_t *)pData;
 80056d0:	f8c4 8038 	str.w	r8, [r4, #56]	; 0x38
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 80056d4:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
    SPI_1LINE_RX(hspi);
 80056d8:	bf02      	ittt	eq
 80056da:	681a      	ldreq	r2, [r3, #0]
 80056dc:	f422 4280 	biceq.w	r2, r2, #16384	; 0x4000
 80056e0:	601a      	streq	r2, [r3, #0]
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 80056e2:	681a      	ldr	r2, [r3, #0]
 80056e4:	0657      	lsls	r7, r2, #25
    __HAL_SPI_ENABLE(hspi);
 80056e6:	bf5e      	ittt	pl
 80056e8:	681a      	ldrpl	r2, [r3, #0]
 80056ea:	f042 0240 	orrpl.w	r2, r2, #64	; 0x40
 80056ee:	601a      	strpl	r2, [r3, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_8BIT)
 80056f0:	68e3      	ldr	r3, [r4, #12]
 80056f2:	b1f3      	cbz	r3, 8005732 <HAL_SPI_Receive+0xd4>
    while (hspi->RxXferCount > 0U)
 80056f4:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 80056f6:	b29b      	uxth	r3, r3
 80056f8:	b1fb      	cbz	r3, 800573a <HAL_SPI_Receive+0xdc>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 80056fa:	6823      	ldr	r3, [r4, #0]
 80056fc:	689a      	ldr	r2, [r3, #8]
 80056fe:	07d2      	lsls	r2, r2, #31
 8005700:	d535      	bpl.n	800576e <HAL_SPI_Receive+0x110>
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 8005702:	68da      	ldr	r2, [r3, #12]
 8005704:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8005706:	f823 2b02 	strh.w	r2, [r3], #2
        hspi->pRxBuffPtr += sizeof(uint16_t);
 800570a:	63a3      	str	r3, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800570c:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800570e:	3b01      	subs	r3, #1
 8005710:	b29b      	uxth	r3, r3
 8005712:	87e3      	strh	r3, [r4, #62]	; 0x3e
 8005714:	e7ee      	b.n	80056f4 <HAL_SPI_Receive+0x96>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 8005716:	6823      	ldr	r3, [r4, #0]
 8005718:	689a      	ldr	r2, [r3, #8]
 800571a:	07d0      	lsls	r0, r2, #31
 800571c:	d518      	bpl.n	8005750 <HAL_SPI_Receive+0xf2>
        (* (uint8_t *)hspi->pRxBuffPtr) = *(__IO uint8_t *)&hspi->Instance->DR;
 800571e:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8005720:	7b1b      	ldrb	r3, [r3, #12]
 8005722:	7013      	strb	r3, [r2, #0]
        hspi->pRxBuffPtr += sizeof(uint8_t);
 8005724:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8005726:	3301      	adds	r3, #1
 8005728:	63a3      	str	r3, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800572a:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800572c:	3b01      	subs	r3, #1
 800572e:	b29b      	uxth	r3, r3
 8005730:	87e3      	strh	r3, [r4, #62]	; 0x3e
    while (hspi->RxXferCount > 0U)
 8005732:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8005734:	b29b      	uxth	r3, r3
 8005736:	2b00      	cmp	r3, #0
 8005738:	d1ed      	bne.n	8005716 <HAL_SPI_Receive+0xb8>
  if (SPI_EndRxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 800573a:	4632      	mov	r2, r6
 800573c:	4629      	mov	r1, r5
 800573e:	4620      	mov	r0, r4
 8005740:	f7ff fd62 	bl	8005208 <SPI_EndRxTransaction>
 8005744:	b9d8      	cbnz	r0, 800577e <HAL_SPI_Receive+0x120>
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 8005746:	6d60      	ldr	r0, [r4, #84]	; 0x54
    errorcode = HAL_BUSY;
 8005748:	3000      	adds	r0, #0
 800574a:	bf18      	it	ne
 800574c:	2001      	movne	r0, #1
error :
 800574e:	e007      	b.n	8005760 <HAL_SPI_Receive+0x102>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 8005750:	f7fd feb8 	bl	80034c4 <HAL_GetTick>
 8005754:	1b80      	subs	r0, r0, r6
 8005756:	42a8      	cmp	r0, r5
 8005758:	d3eb      	bcc.n	8005732 <HAL_SPI_Receive+0xd4>
 800575a:	1c69      	adds	r1, r5, #1
 800575c:	d0e9      	beq.n	8005732 <HAL_SPI_Receive+0xd4>
          errorcode = HAL_TIMEOUT;
 800575e:	2003      	movs	r0, #3
  hspi->State = HAL_SPI_STATE_READY;
 8005760:	2301      	movs	r3, #1
 8005762:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
  __HAL_UNLOCK(hspi);
 8005766:	2300      	movs	r3, #0
 8005768:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
  return errorcode;
 800576c:	e78b      	b.n	8005686 <HAL_SPI_Receive+0x28>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800576e:	f7fd fea9 	bl	80034c4 <HAL_GetTick>
 8005772:	1b80      	subs	r0, r0, r6
 8005774:	42a8      	cmp	r0, r5
 8005776:	d3bd      	bcc.n	80056f4 <HAL_SPI_Receive+0x96>
 8005778:	1c6b      	adds	r3, r5, #1
 800577a:	d0bb      	beq.n	80056f4 <HAL_SPI_Receive+0x96>
 800577c:	e7ef      	b.n	800575e <HAL_SPI_Receive+0x100>
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 800577e:	2320      	movs	r3, #32
 8005780:	6563      	str	r3, [r4, #84]	; 0x54
 8005782:	e7e0      	b.n	8005746 <HAL_SPI_Receive+0xe8>
    errorcode = HAL_BUSY;
 8005784:	2002      	movs	r0, #2
 8005786:	e7eb      	b.n	8005760 <HAL_SPI_Receive+0x102>
  __HAL_LOCK(hspi);
 8005788:	2002      	movs	r0, #2
 800578a:	e77c      	b.n	8005686 <HAL_SPI_Receive+0x28>

0800578c <TIM_OC1_SetConfig>:
  uint32_t tmpccmrx;
  uint32_t tmpccer;
  uint32_t tmpcr2;

  /* Disable the Channel 1: Reset the CC1E Bit */
  TIMx->CCER &= ~TIM_CCER_CC1E;
 800578c:	6a03      	ldr	r3, [r0, #32]
 800578e:	f023 0301 	bic.w	r3, r3, #1
 8005792:	6203      	str	r3, [r0, #32]

  /* Get the TIMx CCER register value */
  tmpccer = TIMx->CCER;
 8005794:	6a03      	ldr	r3, [r0, #32]
{
 8005796:	b570      	push	{r4, r5, r6, lr}
  /* Get the TIMx CR2 register value */
  tmpcr2 =  TIMx->CR2;
 8005798:	6844      	ldr	r4, [r0, #4]

  /* Get the TIMx CCMR1 register value */
  tmpccmrx = TIMx->CCMR1;
 800579a:	6982      	ldr	r2, [r0, #24]

  /* Reset the Output Compare Mode Bits */
  tmpccmrx &= ~TIM_CCMR1_OC1M;
  tmpccmrx &= ~TIM_CCMR1_CC1S;
  /* Select the Output Compare Mode */
  tmpccmrx |= OC_Config->OCMode;
 800579c:	680d      	ldr	r5, [r1, #0]
  tmpccmrx &= ~TIM_CCMR1_CC1S;
 800579e:	f022 0273 	bic.w	r2, r2, #115	; 0x73
  tmpccmrx |= OC_Config->OCMode;
 80057a2:	432a      	orrs	r2, r5

  /* Reset the Output Polarity level */
  tmpccer &= ~TIM_CCER_CC1P;
  /* Set the Output Compare Polarity */
  tmpccer |= OC_Config->OCPolarity;
 80057a4:	688d      	ldr	r5, [r1, #8]
  tmpccer &= ~TIM_CCER_CC1P;
 80057a6:	f023 0302 	bic.w	r3, r3, #2
  tmpccer |= OC_Config->OCPolarity;
 80057aa:	432b      	orrs	r3, r5

  if (IS_TIM_CCXN_INSTANCE(TIMx, TIM_CHANNEL_1))
 80057ac:	4d0e      	ldr	r5, [pc, #56]	; (80057e8 <TIM_OC1_SetConfig+0x5c>)
 80057ae:	42a8      	cmp	r0, r5
 80057b0:	d002      	beq.n	80057b8 <TIM_OC1_SetConfig+0x2c>
 80057b2:	4e0e      	ldr	r6, [pc, #56]	; (80057ec <TIM_OC1_SetConfig+0x60>)
 80057b4:	42b0      	cmp	r0, r6
 80057b6:	d110      	bne.n	80057da <TIM_OC1_SetConfig+0x4e>
    assert_param(IS_TIM_OCN_POLARITY(OC_Config->OCNPolarity));

    /* Reset the Output N Polarity level */
    tmpccer &= ~TIM_CCER_CC1NP;
    /* Set the Output N Polarity */
    tmpccer |= OC_Config->OCNPolarity;
 80057b8:	68ce      	ldr	r6, [r1, #12]
    tmpccer &= ~TIM_CCER_CC1NP;
 80057ba:	f023 0308 	bic.w	r3, r3, #8
    tmpccer |= OC_Config->OCNPolarity;
 80057be:	4333      	orrs	r3, r6
    /* Reset the Output N State */
    tmpccer &= ~TIM_CCER_CC1NE;
  }

  if (IS_TIM_BREAK_INSTANCE(TIMx))
 80057c0:	42a8      	cmp	r0, r5
    tmpccer &= ~TIM_CCER_CC1NE;
 80057c2:	f023 0304 	bic.w	r3, r3, #4
  if (IS_TIM_BREAK_INSTANCE(TIMx))
 80057c6:	d002      	beq.n	80057ce <TIM_OC1_SetConfig+0x42>
 80057c8:	4d08      	ldr	r5, [pc, #32]	; (80057ec <TIM_OC1_SetConfig+0x60>)
 80057ca:	42a8      	cmp	r0, r5
 80057cc:	d105      	bne.n	80057da <TIM_OC1_SetConfig+0x4e>
    tmpcr2 &= ~TIM_CR2_OIS1;
    tmpcr2 &= ~TIM_CR2_OIS1N;
    /* Set the Output Idle state */
    tmpcr2 |= OC_Config->OCIdleState;
    /* Set the Output N Idle state */
    tmpcr2 |= OC_Config->OCNIdleState;
 80057ce:	e9d1 5605 	ldrd	r5, r6, [r1, #20]
    tmpcr2 &= ~TIM_CR2_OIS1N;
 80057d2:	f424 7440 	bic.w	r4, r4, #768	; 0x300
    tmpcr2 |= OC_Config->OCNIdleState;
 80057d6:	4335      	orrs	r5, r6
 80057d8:	432c      	orrs	r4, r5
  }

  /* Write to TIMx CR2 */
  TIMx->CR2 = tmpcr2;
 80057da:	6044      	str	r4, [r0, #4]

  /* Write to TIMx CCMR1 */
  TIMx->CCMR1 = tmpccmrx;
 80057dc:	6182      	str	r2, [r0, #24]

  /* Set the Capture Compare Register value */
  TIMx->CCR1 = OC_Config->Pulse;
 80057de:	684a      	ldr	r2, [r1, #4]
 80057e0:	6342      	str	r2, [r0, #52]	; 0x34

  /* Write to TIMx CCER */
  TIMx->CCER = tmpccer;
 80057e2:	6203      	str	r3, [r0, #32]
}
 80057e4:	bd70      	pop	{r4, r5, r6, pc}
 80057e6:	bf00      	nop
 80057e8:	40010000 	.word	0x40010000
 80057ec:	40010400 	.word	0x40010400

080057f0 <TIM_OC3_SetConfig>:
  uint32_t tmpccmrx;
  uint32_t tmpccer;
  uint32_t tmpcr2;

  /* Disable the Channel 3: Reset the CC2E Bit */
  TIMx->CCER &= ~TIM_CCER_CC3E;
 80057f0:	6a03      	ldr	r3, [r0, #32]
 80057f2:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 80057f6:	6203      	str	r3, [r0, #32]

  /* Get the TIMx CCER register value */
  tmpccer = TIMx->CCER;
 80057f8:	6a03      	ldr	r3, [r0, #32]
{
 80057fa:	b570      	push	{r4, r5, r6, lr}
  /* Get the TIMx CR2 register value */
  tmpcr2 =  TIMx->CR2;
 80057fc:	6844      	ldr	r4, [r0, #4]

  /* Get the TIMx CCMR2 register value */
  tmpccmrx = TIMx->CCMR2;
 80057fe:	69c2      	ldr	r2, [r0, #28]

  /* Reset the Output Compare mode and Capture/Compare selection Bits */
  tmpccmrx &= ~TIM_CCMR2_OC3M;
  tmpccmrx &= ~TIM_CCMR2_CC3S;
  /* Select the Output Compare Mode */
  tmpccmrx |= OC_Config->OCMode;
 8005800:	680d      	ldr	r5, [r1, #0]
  tmpccmrx &= ~TIM_CCMR2_CC3S;
 8005802:	f022 0273 	bic.w	r2, r2, #115	; 0x73
  tmpccmrx |= OC_Config->OCMode;
 8005806:	432a      	orrs	r2, r5

  /* Reset the Output Polarity level */
  tmpccer &= ~TIM_CCER_CC3P;
  /* Set the Output Compare Polarity */
  tmpccer |= (OC_Config->OCPolarity << 8U);
 8005808:	688d      	ldr	r5, [r1, #8]
  tmpccer &= ~TIM_CCER_CC3P;
 800580a:	f423 7300 	bic.w	r3, r3, #512	; 0x200
  tmpccer |= (OC_Config->OCPolarity << 8U);
 800580e:	ea43 2305 	orr.w	r3, r3, r5, lsl #8

  if (IS_TIM_CCXN_INSTANCE(TIMx, TIM_CHANNEL_3))
 8005812:	4d11      	ldr	r5, [pc, #68]	; (8005858 <TIM_OC3_SetConfig+0x68>)
 8005814:	42a8      	cmp	r0, r5
 8005816:	d003      	beq.n	8005820 <TIM_OC3_SetConfig+0x30>
 8005818:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 800581c:	42a8      	cmp	r0, r5
 800581e:	d114      	bne.n	800584a <TIM_OC3_SetConfig+0x5a>
    assert_param(IS_TIM_OCN_POLARITY(OC_Config->OCNPolarity));

    /* Reset the Output N Polarity level */
    tmpccer &= ~TIM_CCER_CC3NP;
    /* Set the Output N Polarity */
    tmpccer |= (OC_Config->OCNPolarity << 8U);
 8005820:	68cd      	ldr	r5, [r1, #12]
    tmpccer &= ~TIM_CCER_CC3NP;
 8005822:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
    tmpccer |= (OC_Config->OCNPolarity << 8U);
 8005826:	ea43 2305 	orr.w	r3, r3, r5, lsl #8
    /* Reset the Output N State */
    tmpccer &= ~TIM_CCER_CC3NE;
  }

  if (IS_TIM_BREAK_INSTANCE(TIMx))
 800582a:	4d0b      	ldr	r5, [pc, #44]	; (8005858 <TIM_OC3_SetConfig+0x68>)
 800582c:	42a8      	cmp	r0, r5
    tmpccer &= ~TIM_CCER_CC3NE;
 800582e:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
  if (IS_TIM_BREAK_INSTANCE(TIMx))
 8005832:	d003      	beq.n	800583c <TIM_OC3_SetConfig+0x4c>
 8005834:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 8005838:	42a8      	cmp	r0, r5
 800583a:	d106      	bne.n	800584a <TIM_OC3_SetConfig+0x5a>
    tmpcr2 &= ~TIM_CR2_OIS3;
    tmpcr2 &= ~TIM_CR2_OIS3N;
    /* Set the Output Idle state */
    tmpcr2 |= (OC_Config->OCIdleState << 4U);
    /* Set the Output N Idle state */
    tmpcr2 |= (OC_Config->OCNIdleState << 4U);
 800583c:	e9d1 5605 	ldrd	r5, r6, [r1, #20]
    tmpcr2 &= ~TIM_CR2_OIS3N;
 8005840:	f424 5440 	bic.w	r4, r4, #12288	; 0x3000
    tmpcr2 |= (OC_Config->OCNIdleState << 4U);
 8005844:	4335      	orrs	r5, r6
 8005846:	ea44 1405 	orr.w	r4, r4, r5, lsl #4
  }

  /* Write to TIMx CR2 */
  TIMx->CR2 = tmpcr2;
 800584a:	6044      	str	r4, [r0, #4]

  /* Write to TIMx CCMR2 */
  TIMx->CCMR2 = tmpccmrx;
 800584c:	61c2      	str	r2, [r0, #28]

  /* Set the Capture Compare Register value */
  TIMx->CCR3 = OC_Config->Pulse;
 800584e:	684a      	ldr	r2, [r1, #4]
 8005850:	63c2      	str	r2, [r0, #60]	; 0x3c

  /* Write to TIMx CCER */
  TIMx->CCER = tmpccer;
 8005852:	6203      	str	r3, [r0, #32]
}
 8005854:	bd70      	pop	{r4, r5, r6, pc}
 8005856:	bf00      	nop
 8005858:	40010000 	.word	0x40010000

0800585c <TIM_OC4_SetConfig>:
  uint32_t tmpccmrx;
  uint32_t tmpccer;
  uint32_t tmpcr2;

  /* Disable the Channel 4: Reset the CC4E Bit */
  TIMx->CCER &= ~TIM_CCER_CC4E;
 800585c:	6a03      	ldr	r3, [r0, #32]
 800585e:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8005862:	6203      	str	r3, [r0, #32]

  /* Get the TIMx CCER register value */
  tmpccer = TIMx->CCER;
 8005864:	6a03      	ldr	r3, [r0, #32]
{
 8005866:	b530      	push	{r4, r5, lr}
  /* Get the TIMx CR2 register value */
  tmpcr2 =  TIMx->CR2;
 8005868:	6844      	ldr	r4, [r0, #4]

  /* Get the TIMx CCMR2 register value */
  tmpccmrx = TIMx->CCMR2;
 800586a:	69c2      	ldr	r2, [r0, #28]
  /* Reset the Output Compare mode and Capture/Compare selection Bits */
  tmpccmrx &= ~TIM_CCMR2_OC4M;
  tmpccmrx &= ~TIM_CCMR2_CC4S;

  /* Select the Output Compare Mode */
  tmpccmrx |= (OC_Config->OCMode << 8U);
 800586c:	680d      	ldr	r5, [r1, #0]
  tmpccmrx &= ~TIM_CCMR2_CC4S;
 800586e:	f422 42e6 	bic.w	r2, r2, #29440	; 0x7300
  tmpccmrx |= (OC_Config->OCMode << 8U);
 8005872:	ea42 2205 	orr.w	r2, r2, r5, lsl #8

  /* Reset the Output Polarity level */
  tmpccer &= ~TIM_CCER_CC4P;
  /* Set the Output Compare Polarity */
  tmpccer |= (OC_Config->OCPolarity << 12U);
 8005876:	688d      	ldr	r5, [r1, #8]
  tmpccer &= ~TIM_CCER_CC4P;
 8005878:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
  tmpccer |= (OC_Config->OCPolarity << 12U);
 800587c:	ea43 3305 	orr.w	r3, r3, r5, lsl #12

  if (IS_TIM_BREAK_INSTANCE(TIMx))
 8005880:	4d08      	ldr	r5, [pc, #32]	; (80058a4 <TIM_OC4_SetConfig+0x48>)
 8005882:	42a8      	cmp	r0, r5
 8005884:	d003      	beq.n	800588e <TIM_OC4_SetConfig+0x32>
 8005886:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 800588a:	42a8      	cmp	r0, r5
 800588c:	d104      	bne.n	8005898 <TIM_OC4_SetConfig+0x3c>

    /* Reset the Output Compare IDLE State */
    tmpcr2 &= ~TIM_CR2_OIS4;

    /* Set the Output Idle state */
    tmpcr2 |= (OC_Config->OCIdleState << 6U);
 800588e:	694d      	ldr	r5, [r1, #20]
    tmpcr2 &= ~TIM_CR2_OIS4;
 8005890:	f424 4480 	bic.w	r4, r4, #16384	; 0x4000
    tmpcr2 |= (OC_Config->OCIdleState << 6U);
 8005894:	ea44 1485 	orr.w	r4, r4, r5, lsl #6
  }

  /* Write to TIMx CR2 */
  TIMx->CR2 = tmpcr2;
 8005898:	6044      	str	r4, [r0, #4]

  /* Write to TIMx CCMR2 */
  TIMx->CCMR2 = tmpccmrx;
 800589a:	61c2      	str	r2, [r0, #28]

  /* Set the Capture Compare Register value */
  TIMx->CCR4 = OC_Config->Pulse;
 800589c:	684a      	ldr	r2, [r1, #4]
 800589e:	6402      	str	r2, [r0, #64]	; 0x40

  /* Write to TIMx CCER */
  TIMx->CCER = tmpccer;
 80058a0:	6203      	str	r3, [r0, #32]
}
 80058a2:	bd30      	pop	{r4, r5, pc}
 80058a4:	40010000 	.word	0x40010000

080058a8 <HAL_TIM_Base_Start_IT>:
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
 80058a8:	6803      	ldr	r3, [r0, #0]
 80058aa:	68da      	ldr	r2, [r3, #12]
 80058ac:	f042 0201 	orr.w	r2, r2, #1
 80058b0:	60da      	str	r2, [r3, #12]
  tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
 80058b2:	689a      	ldr	r2, [r3, #8]
 80058b4:	f002 0207 	and.w	r2, r2, #7
  if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 80058b8:	2a06      	cmp	r2, #6
    __HAL_TIM_ENABLE(htim);
 80058ba:	bf1e      	ittt	ne
 80058bc:	681a      	ldrne	r2, [r3, #0]
 80058be:	f042 0201 	orrne.w	r2, r2, #1
 80058c2:	601a      	strne	r2, [r3, #0]
}
 80058c4:	2000      	movs	r0, #0
 80058c6:	4770      	bx	lr

080058c8 <HAL_TIM_PWM_MspInit>:
 80058c8:	4770      	bx	lr

080058ca <HAL_TIM_OC_DelayElapsedCallback>:
 80058ca:	4770      	bx	lr

080058cc <HAL_TIM_IC_CaptureCallback>:
 80058cc:	4770      	bx	lr

080058ce <HAL_TIM_PWM_PulseFinishedCallback>:
 80058ce:	4770      	bx	lr

080058d0 <TIM_DMADelayPulseCplt>:
{
 80058d0:	b510      	push	{r4, lr}
  TIM_HandleTypeDef *htim = (TIM_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 80058d2:	6b84      	ldr	r4, [r0, #56]	; 0x38
  if (hdma == htim->hdma[TIM_DMA_ID_CC1])
 80058d4:	6a62      	ldr	r2, [r4, #36]	; 0x24
  htim->State = HAL_TIM_STATE_READY;
 80058d6:	2301      	movs	r3, #1
  if (hdma == htim->hdma[TIM_DMA_ID_CC1])
 80058d8:	4282      	cmp	r2, r0
  htim->State = HAL_TIM_STATE_READY;
 80058da:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  if (hdma == htim->hdma[TIM_DMA_ID_CC1])
 80058de:	d106      	bne.n	80058ee <TIM_DMADelayPulseCplt+0x1e>
    htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
 80058e0:	7723      	strb	r3, [r4, #28]
  HAL_TIM_PWM_PulseFinishedCallback(htim);
 80058e2:	4620      	mov	r0, r4
 80058e4:	f7ff fff3 	bl	80058ce <HAL_TIM_PWM_PulseFinishedCallback>
  htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 80058e8:	2300      	movs	r3, #0
 80058ea:	7723      	strb	r3, [r4, #28]
}
 80058ec:	bd10      	pop	{r4, pc}
  else if (hdma == htim->hdma[TIM_DMA_ID_CC2])
 80058ee:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 80058f0:	4283      	cmp	r3, r0
 80058f2:	d101      	bne.n	80058f8 <TIM_DMADelayPulseCplt+0x28>
    htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
 80058f4:	2302      	movs	r3, #2
 80058f6:	e7f3      	b.n	80058e0 <TIM_DMADelayPulseCplt+0x10>
  else if (hdma == htim->hdma[TIM_DMA_ID_CC3])
 80058f8:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 80058fa:	4283      	cmp	r3, r0
 80058fc:	d101      	bne.n	8005902 <TIM_DMADelayPulseCplt+0x32>
    htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
 80058fe:	2304      	movs	r3, #4
 8005900:	e7ee      	b.n	80058e0 <TIM_DMADelayPulseCplt+0x10>
  else if (hdma == htim->hdma[TIM_DMA_ID_CC4])
 8005902:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8005904:	4283      	cmp	r3, r0
 8005906:	d1ec      	bne.n	80058e2 <TIM_DMADelayPulseCplt+0x12>
    htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
 8005908:	2308      	movs	r3, #8
 800590a:	e7e9      	b.n	80058e0 <TIM_DMADelayPulseCplt+0x10>

0800590c <HAL_TIM_PWM_PulseFinishedHalfCpltCallback>:
 800590c:	4770      	bx	lr

0800590e <TIM_DMADelayPulseHalfCplt>:
{
 800590e:	b510      	push	{r4, lr}
  TIM_HandleTypeDef *htim = (TIM_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 8005910:	6b84      	ldr	r4, [r0, #56]	; 0x38
  if (hdma == htim->hdma[TIM_DMA_ID_CC1])
 8005912:	6a62      	ldr	r2, [r4, #36]	; 0x24
  htim->State = HAL_TIM_STATE_READY;
 8005914:	2301      	movs	r3, #1
  if (hdma == htim->hdma[TIM_DMA_ID_CC1])
 8005916:	4282      	cmp	r2, r0
  htim->State = HAL_TIM_STATE_READY;
 8005918:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  if (hdma == htim->hdma[TIM_DMA_ID_CC1])
 800591c:	d106      	bne.n	800592c <TIM_DMADelayPulseHalfCplt+0x1e>
    htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
 800591e:	7723      	strb	r3, [r4, #28]
  HAL_TIM_PWM_PulseFinishedHalfCpltCallback(htim);
 8005920:	4620      	mov	r0, r4
 8005922:	f7ff fff3 	bl	800590c <HAL_TIM_PWM_PulseFinishedHalfCpltCallback>
  htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 8005926:	2300      	movs	r3, #0
 8005928:	7723      	strb	r3, [r4, #28]
}
 800592a:	bd10      	pop	{r4, pc}
  else if (hdma == htim->hdma[TIM_DMA_ID_CC2])
 800592c:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 800592e:	4283      	cmp	r3, r0
 8005930:	d101      	bne.n	8005936 <TIM_DMADelayPulseHalfCplt+0x28>
    htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
 8005932:	2302      	movs	r3, #2
 8005934:	e7f3      	b.n	800591e <TIM_DMADelayPulseHalfCplt+0x10>
  else if (hdma == htim->hdma[TIM_DMA_ID_CC3])
 8005936:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8005938:	4283      	cmp	r3, r0
 800593a:	d101      	bne.n	8005940 <TIM_DMADelayPulseHalfCplt+0x32>
    htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
 800593c:	2304      	movs	r3, #4
 800593e:	e7ee      	b.n	800591e <TIM_DMADelayPulseHalfCplt+0x10>
  else if (hdma == htim->hdma[TIM_DMA_ID_CC4])
 8005940:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8005942:	4283      	cmp	r3, r0
 8005944:	d1ec      	bne.n	8005920 <TIM_DMADelayPulseHalfCplt+0x12>
    htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
 8005946:	2308      	movs	r3, #8
 8005948:	e7e9      	b.n	800591e <TIM_DMADelayPulseHalfCplt+0x10>

0800594a <HAL_TIM_TriggerCallback>:
 800594a:	4770      	bx	lr

0800594c <HAL_TIM_IRQHandler>:
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
 800594c:	6803      	ldr	r3, [r0, #0]
 800594e:	691a      	ldr	r2, [r3, #16]
 8005950:	0791      	lsls	r1, r2, #30
{
 8005952:	b510      	push	{r4, lr}
 8005954:	4604      	mov	r4, r0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
 8005956:	d50e      	bpl.n	8005976 <HAL_TIM_IRQHandler+0x2a>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC1) != RESET)
 8005958:	68da      	ldr	r2, [r3, #12]
 800595a:	0792      	lsls	r2, r2, #30
 800595c:	d50b      	bpl.n	8005976 <HAL_TIM_IRQHandler+0x2a>
        __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC1);
 800595e:	f06f 0202 	mvn.w	r2, #2
 8005962:	611a      	str	r2, [r3, #16]
        if ((htim->Instance->CCMR1 & TIM_CCMR1_CC1S) != 0x00U)
 8005964:	699b      	ldr	r3, [r3, #24]
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
 8005966:	2201      	movs	r2, #1
        if ((htim->Instance->CCMR1 & TIM_CCMR1_CC1S) != 0x00U)
 8005968:	079b      	lsls	r3, r3, #30
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
 800596a:	7702      	strb	r2, [r0, #28]
        if ((htim->Instance->CCMR1 & TIM_CCMR1_CC1S) != 0x00U)
 800596c:	d077      	beq.n	8005a5e <HAL_TIM_IRQHandler+0x112>
          HAL_TIM_IC_CaptureCallback(htim);
 800596e:	f7ff ffad 	bl	80058cc <HAL_TIM_IC_CaptureCallback>
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 8005972:	2300      	movs	r3, #0
 8005974:	7723      	strb	r3, [r4, #28]
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC2) != RESET)
 8005976:	6823      	ldr	r3, [r4, #0]
 8005978:	691a      	ldr	r2, [r3, #16]
 800597a:	0750      	lsls	r0, r2, #29
 800597c:	d510      	bpl.n	80059a0 <HAL_TIM_IRQHandler+0x54>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC2) != RESET)
 800597e:	68da      	ldr	r2, [r3, #12]
 8005980:	0751      	lsls	r1, r2, #29
 8005982:	d50d      	bpl.n	80059a0 <HAL_TIM_IRQHandler+0x54>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC2);
 8005984:	f06f 0204 	mvn.w	r2, #4
 8005988:	611a      	str	r2, [r3, #16]
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 800598a:	699b      	ldr	r3, [r3, #24]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
 800598c:	2202      	movs	r2, #2
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 800598e:	f413 7f40 	tst.w	r3, #768	; 0x300
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
 8005992:	7722      	strb	r2, [r4, #28]
        HAL_TIM_IC_CaptureCallback(htim);
 8005994:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 8005996:	d068      	beq.n	8005a6a <HAL_TIM_IRQHandler+0x11e>
        HAL_TIM_IC_CaptureCallback(htim);
 8005998:	f7ff ff98 	bl	80058cc <HAL_TIM_IC_CaptureCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800599c:	2300      	movs	r3, #0
 800599e:	7723      	strb	r3, [r4, #28]
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC3) != RESET)
 80059a0:	6823      	ldr	r3, [r4, #0]
 80059a2:	691a      	ldr	r2, [r3, #16]
 80059a4:	0712      	lsls	r2, r2, #28
 80059a6:	d50f      	bpl.n	80059c8 <HAL_TIM_IRQHandler+0x7c>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC3) != RESET)
 80059a8:	68da      	ldr	r2, [r3, #12]
 80059aa:	0710      	lsls	r0, r2, #28
 80059ac:	d50c      	bpl.n	80059c8 <HAL_TIM_IRQHandler+0x7c>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC3);
 80059ae:	f06f 0208 	mvn.w	r2, #8
 80059b2:	611a      	str	r2, [r3, #16]
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 80059b4:	69db      	ldr	r3, [r3, #28]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
 80059b6:	2204      	movs	r2, #4
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 80059b8:	0799      	lsls	r1, r3, #30
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
 80059ba:	7722      	strb	r2, [r4, #28]
        HAL_TIM_IC_CaptureCallback(htim);
 80059bc:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 80059be:	d05a      	beq.n	8005a76 <HAL_TIM_IRQHandler+0x12a>
        HAL_TIM_IC_CaptureCallback(htim);
 80059c0:	f7ff ff84 	bl	80058cc <HAL_TIM_IC_CaptureCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 80059c4:	2300      	movs	r3, #0
 80059c6:	7723      	strb	r3, [r4, #28]
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC4) != RESET)
 80059c8:	6823      	ldr	r3, [r4, #0]
 80059ca:	691a      	ldr	r2, [r3, #16]
 80059cc:	06d2      	lsls	r2, r2, #27
 80059ce:	d510      	bpl.n	80059f2 <HAL_TIM_IRQHandler+0xa6>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC4) != RESET)
 80059d0:	68da      	ldr	r2, [r3, #12]
 80059d2:	06d0      	lsls	r0, r2, #27
 80059d4:	d50d      	bpl.n	80059f2 <HAL_TIM_IRQHandler+0xa6>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC4);
 80059d6:	f06f 0210 	mvn.w	r2, #16
 80059da:	611a      	str	r2, [r3, #16]
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 80059dc:	69db      	ldr	r3, [r3, #28]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
 80059de:	2208      	movs	r2, #8
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 80059e0:	f413 7f40 	tst.w	r3, #768	; 0x300
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
 80059e4:	7722      	strb	r2, [r4, #28]
        HAL_TIM_IC_CaptureCallback(htim);
 80059e6:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 80059e8:	d04b      	beq.n	8005a82 <HAL_TIM_IRQHandler+0x136>
        HAL_TIM_IC_CaptureCallback(htim);
 80059ea:	f7ff ff6f 	bl	80058cc <HAL_TIM_IC_CaptureCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 80059ee:	2300      	movs	r3, #0
 80059f0:	7723      	strb	r3, [r4, #28]
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_UPDATE) != RESET)
 80059f2:	6823      	ldr	r3, [r4, #0]
 80059f4:	691a      	ldr	r2, [r3, #16]
 80059f6:	07d1      	lsls	r1, r2, #31
 80059f8:	d508      	bpl.n	8005a0c <HAL_TIM_IRQHandler+0xc0>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_UPDATE) != RESET)
 80059fa:	68da      	ldr	r2, [r3, #12]
 80059fc:	07d2      	lsls	r2, r2, #31
 80059fe:	d505      	bpl.n	8005a0c <HAL_TIM_IRQHandler+0xc0>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_UPDATE);
 8005a00:	f06f 0201 	mvn.w	r2, #1
 8005a04:	611a      	str	r2, [r3, #16]
      HAL_TIM_PeriodElapsedCallback(htim);
 8005a06:	4620      	mov	r0, r4
 8005a08:	f7fb ffc4 	bl	8001994 <HAL_TIM_PeriodElapsedCallback>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_BREAK) != RESET)
 8005a0c:	6823      	ldr	r3, [r4, #0]
 8005a0e:	691a      	ldr	r2, [r3, #16]
 8005a10:	0610      	lsls	r0, r2, #24
 8005a12:	d508      	bpl.n	8005a26 <HAL_TIM_IRQHandler+0xda>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_BREAK) != RESET)
 8005a14:	68da      	ldr	r2, [r3, #12]
 8005a16:	0611      	lsls	r1, r2, #24
 8005a18:	d505      	bpl.n	8005a26 <HAL_TIM_IRQHandler+0xda>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_BREAK);
 8005a1a:	f06f 0280 	mvn.w	r2, #128	; 0x80
 8005a1e:	611a      	str	r2, [r3, #16]
      HAL_TIMEx_BreakCallback(htim);
 8005a20:	4620      	mov	r0, r4
 8005a22:	f000 faea 	bl	8005ffa <HAL_TIMEx_BreakCallback>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_TRIGGER) != RESET)
 8005a26:	6823      	ldr	r3, [r4, #0]
 8005a28:	691a      	ldr	r2, [r3, #16]
 8005a2a:	0652      	lsls	r2, r2, #25
 8005a2c:	d508      	bpl.n	8005a40 <HAL_TIM_IRQHandler+0xf4>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_TRIGGER) != RESET)
 8005a2e:	68da      	ldr	r2, [r3, #12]
 8005a30:	0650      	lsls	r0, r2, #25
 8005a32:	d505      	bpl.n	8005a40 <HAL_TIM_IRQHandler+0xf4>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_TRIGGER);
 8005a34:	f06f 0240 	mvn.w	r2, #64	; 0x40
 8005a38:	611a      	str	r2, [r3, #16]
      HAL_TIM_TriggerCallback(htim);
 8005a3a:	4620      	mov	r0, r4
 8005a3c:	f7ff ff85 	bl	800594a <HAL_TIM_TriggerCallback>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_COM) != RESET)
 8005a40:	6823      	ldr	r3, [r4, #0]
 8005a42:	691a      	ldr	r2, [r3, #16]
 8005a44:	0691      	lsls	r1, r2, #26
 8005a46:	d522      	bpl.n	8005a8e <HAL_TIM_IRQHandler+0x142>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_COM) != RESET)
 8005a48:	68da      	ldr	r2, [r3, #12]
 8005a4a:	0692      	lsls	r2, r2, #26
 8005a4c:	d51f      	bpl.n	8005a8e <HAL_TIM_IRQHandler+0x142>
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
 8005a4e:	f06f 0220 	mvn.w	r2, #32
      HAL_TIMEx_CommutCallback(htim);
 8005a52:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
 8005a54:	611a      	str	r2, [r3, #16]
}
 8005a56:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
      HAL_TIMEx_CommutCallback(htim);
 8005a5a:	f000 bacd 	b.w	8005ff8 <HAL_TIMEx_CommutCallback>
          HAL_TIM_OC_DelayElapsedCallback(htim);
 8005a5e:	f7ff ff34 	bl	80058ca <HAL_TIM_OC_DelayElapsedCallback>
          HAL_TIM_PWM_PulseFinishedCallback(htim);
 8005a62:	4620      	mov	r0, r4
 8005a64:	f7ff ff33 	bl	80058ce <HAL_TIM_PWM_PulseFinishedCallback>
 8005a68:	e783      	b.n	8005972 <HAL_TIM_IRQHandler+0x26>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 8005a6a:	f7ff ff2e 	bl	80058ca <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 8005a6e:	4620      	mov	r0, r4
 8005a70:	f7ff ff2d 	bl	80058ce <HAL_TIM_PWM_PulseFinishedCallback>
 8005a74:	e792      	b.n	800599c <HAL_TIM_IRQHandler+0x50>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 8005a76:	f7ff ff28 	bl	80058ca <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 8005a7a:	4620      	mov	r0, r4
 8005a7c:	f7ff ff27 	bl	80058ce <HAL_TIM_PWM_PulseFinishedCallback>
 8005a80:	e7a0      	b.n	80059c4 <HAL_TIM_IRQHandler+0x78>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 8005a82:	f7ff ff22 	bl	80058ca <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 8005a86:	4620      	mov	r0, r4
 8005a88:	f7ff ff21 	bl	80058ce <HAL_TIM_PWM_PulseFinishedCallback>
 8005a8c:	e7af      	b.n	80059ee <HAL_TIM_IRQHandler+0xa2>
}
 8005a8e:	bd10      	pop	{r4, pc}

08005a90 <HAL_TIM_ErrorCallback>:
 8005a90:	4770      	bx	lr

08005a92 <TIM_DMAError>:
{
 8005a92:	b508      	push	{r3, lr}
  TIM_HandleTypeDef *htim = (TIM_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 8005a94:	6b80      	ldr	r0, [r0, #56]	; 0x38
  htim->State = HAL_TIM_STATE_READY;
 8005a96:	2301      	movs	r3, #1
 8005a98:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d
  HAL_TIM_ErrorCallback(htim);
 8005a9c:	f7ff fff8 	bl	8005a90 <HAL_TIM_ErrorCallback>
}
 8005aa0:	bd08      	pop	{r3, pc}
	...

08005aa4 <TIM_Base_SetConfig>:
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 8005aa4:	4a30      	ldr	r2, [pc, #192]	; (8005b68 <TIM_Base_SetConfig+0xc4>)
  tmpcr1 = TIMx->CR1;
 8005aa6:	6803      	ldr	r3, [r0, #0]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 8005aa8:	4290      	cmp	r0, r2
 8005aaa:	d012      	beq.n	8005ad2 <TIM_Base_SetConfig+0x2e>
 8005aac:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
 8005ab0:	d00f      	beq.n	8005ad2 <TIM_Base_SetConfig+0x2e>
 8005ab2:	f5a2 427c 	sub.w	r2, r2, #64512	; 0xfc00
 8005ab6:	4290      	cmp	r0, r2
 8005ab8:	d00b      	beq.n	8005ad2 <TIM_Base_SetConfig+0x2e>
 8005aba:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8005abe:	4290      	cmp	r0, r2
 8005ac0:	d007      	beq.n	8005ad2 <TIM_Base_SetConfig+0x2e>
 8005ac2:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8005ac6:	4290      	cmp	r0, r2
 8005ac8:	d003      	beq.n	8005ad2 <TIM_Base_SetConfig+0x2e>
 8005aca:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
 8005ace:	4290      	cmp	r0, r2
 8005ad0:	d119      	bne.n	8005b06 <TIM_Base_SetConfig+0x62>
    tmpcr1 |= Structure->CounterMode;
 8005ad2:	684a      	ldr	r2, [r1, #4]
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 8005ad4:	f023 0370 	bic.w	r3, r3, #112	; 0x70
    tmpcr1 |= Structure->CounterMode;
 8005ad8:	4313      	orrs	r3, r2
  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
 8005ada:	4a23      	ldr	r2, [pc, #140]	; (8005b68 <TIM_Base_SetConfig+0xc4>)
 8005adc:	4290      	cmp	r0, r2
 8005ade:	d029      	beq.n	8005b34 <TIM_Base_SetConfig+0x90>
 8005ae0:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
 8005ae4:	d026      	beq.n	8005b34 <TIM_Base_SetConfig+0x90>
 8005ae6:	f5a2 427c 	sub.w	r2, r2, #64512	; 0xfc00
 8005aea:	4290      	cmp	r0, r2
 8005aec:	d022      	beq.n	8005b34 <TIM_Base_SetConfig+0x90>
 8005aee:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8005af2:	4290      	cmp	r0, r2
 8005af4:	d01e      	beq.n	8005b34 <TIM_Base_SetConfig+0x90>
 8005af6:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8005afa:	4290      	cmp	r0, r2
 8005afc:	d01a      	beq.n	8005b34 <TIM_Base_SetConfig+0x90>
 8005afe:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
 8005b02:	4290      	cmp	r0, r2
 8005b04:	d016      	beq.n	8005b34 <TIM_Base_SetConfig+0x90>
 8005b06:	4a19      	ldr	r2, [pc, #100]	; (8005b6c <TIM_Base_SetConfig+0xc8>)
 8005b08:	4290      	cmp	r0, r2
 8005b0a:	d013      	beq.n	8005b34 <TIM_Base_SetConfig+0x90>
 8005b0c:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8005b10:	4290      	cmp	r0, r2
 8005b12:	d00f      	beq.n	8005b34 <TIM_Base_SetConfig+0x90>
 8005b14:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8005b18:	4290      	cmp	r0, r2
 8005b1a:	d00b      	beq.n	8005b34 <TIM_Base_SetConfig+0x90>
 8005b1c:	f5a2 3298 	sub.w	r2, r2, #77824	; 0x13000
 8005b20:	4290      	cmp	r0, r2
 8005b22:	d007      	beq.n	8005b34 <TIM_Base_SetConfig+0x90>
 8005b24:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8005b28:	4290      	cmp	r0, r2
 8005b2a:	d003      	beq.n	8005b34 <TIM_Base_SetConfig+0x90>
 8005b2c:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8005b30:	4290      	cmp	r0, r2
 8005b32:	d103      	bne.n	8005b3c <TIM_Base_SetConfig+0x98>
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 8005b34:	68ca      	ldr	r2, [r1, #12]
    tmpcr1 &= ~TIM_CR1_CKD;
 8005b36:	f423 7340 	bic.w	r3, r3, #768	; 0x300
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 8005b3a:	4313      	orrs	r3, r2
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 8005b3c:	694a      	ldr	r2, [r1, #20]
 8005b3e:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8005b42:	4313      	orrs	r3, r2
  TIMx->CR1 = tmpcr1;
 8005b44:	6003      	str	r3, [r0, #0]
  TIMx->ARR = (uint32_t)Structure->Period ;
 8005b46:	688b      	ldr	r3, [r1, #8]
 8005b48:	62c3      	str	r3, [r0, #44]	; 0x2c
  TIMx->PSC = Structure->Prescaler;
 8005b4a:	680b      	ldr	r3, [r1, #0]
 8005b4c:	6283      	str	r3, [r0, #40]	; 0x28
  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
 8005b4e:	4b06      	ldr	r3, [pc, #24]	; (8005b68 <TIM_Base_SetConfig+0xc4>)
 8005b50:	4298      	cmp	r0, r3
 8005b52:	d003      	beq.n	8005b5c <TIM_Base_SetConfig+0xb8>
 8005b54:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8005b58:	4298      	cmp	r0, r3
 8005b5a:	d101      	bne.n	8005b60 <TIM_Base_SetConfig+0xbc>
    TIMx->RCR = Structure->RepetitionCounter;
 8005b5c:	690b      	ldr	r3, [r1, #16]
 8005b5e:	6303      	str	r3, [r0, #48]	; 0x30
  TIMx->EGR = TIM_EGR_UG;
 8005b60:	2301      	movs	r3, #1
 8005b62:	6143      	str	r3, [r0, #20]
}
 8005b64:	4770      	bx	lr
 8005b66:	bf00      	nop
 8005b68:	40010000 	.word	0x40010000
 8005b6c:	40014000 	.word	0x40014000

08005b70 <HAL_TIM_Base_Init>:
{
 8005b70:	b510      	push	{r4, lr}
  if (htim == NULL)
 8005b72:	4604      	mov	r4, r0
 8005b74:	b1a0      	cbz	r0, 8005ba0 <HAL_TIM_Base_Init+0x30>
  if (htim->State == HAL_TIM_STATE_RESET)
 8005b76:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 8005b7a:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8005b7e:	b91b      	cbnz	r3, 8005b88 <HAL_TIM_Base_Init+0x18>
    htim->Lock = HAL_UNLOCKED;
 8005b80:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    HAL_TIM_Base_MspInit(htim);
 8005b84:	f7fc f946 	bl	8001e14 <HAL_TIM_Base_MspInit>
  htim->State = HAL_TIM_STATE_BUSY;
 8005b88:	2302      	movs	r3, #2
 8005b8a:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 8005b8e:	6820      	ldr	r0, [r4, #0]
 8005b90:	1d21      	adds	r1, r4, #4
 8005b92:	f7ff ff87 	bl	8005aa4 <TIM_Base_SetConfig>
  htim->State = HAL_TIM_STATE_READY;
 8005b96:	2301      	movs	r3, #1
 8005b98:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  return HAL_OK;
 8005b9c:	2000      	movs	r0, #0
}
 8005b9e:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 8005ba0:	2001      	movs	r0, #1
 8005ba2:	e7fc      	b.n	8005b9e <HAL_TIM_Base_Init+0x2e>

08005ba4 <HAL_TIM_PWM_Init>:
{
 8005ba4:	b510      	push	{r4, lr}
  if (htim == NULL)
 8005ba6:	4604      	mov	r4, r0
 8005ba8:	b1a0      	cbz	r0, 8005bd4 <HAL_TIM_PWM_Init+0x30>
  if (htim->State == HAL_TIM_STATE_RESET)
 8005baa:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 8005bae:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8005bb2:	b91b      	cbnz	r3, 8005bbc <HAL_TIM_PWM_Init+0x18>
    htim->Lock = HAL_UNLOCKED;
 8005bb4:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    HAL_TIM_PWM_MspInit(htim);
 8005bb8:	f7ff fe86 	bl	80058c8 <HAL_TIM_PWM_MspInit>
  htim->State = HAL_TIM_STATE_BUSY;
 8005bbc:	2302      	movs	r3, #2
 8005bbe:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 8005bc2:	6820      	ldr	r0, [r4, #0]
 8005bc4:	1d21      	adds	r1, r4, #4
 8005bc6:	f7ff ff6d 	bl	8005aa4 <TIM_Base_SetConfig>
  htim->State = HAL_TIM_STATE_READY;
 8005bca:	2301      	movs	r3, #1
 8005bcc:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  return HAL_OK;
 8005bd0:	2000      	movs	r0, #0
}
 8005bd2:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 8005bd4:	2001      	movs	r0, #1
 8005bd6:	e7fc      	b.n	8005bd2 <HAL_TIM_PWM_Init+0x2e>

08005bd8 <TIM_OC2_SetConfig>:
  TIMx->CCER &= ~TIM_CCER_CC2E;
 8005bd8:	6a03      	ldr	r3, [r0, #32]
 8005bda:	f023 0310 	bic.w	r3, r3, #16
 8005bde:	6203      	str	r3, [r0, #32]
  tmpccer = TIMx->CCER;
 8005be0:	6a03      	ldr	r3, [r0, #32]
{
 8005be2:	b570      	push	{r4, r5, r6, lr}
  tmpcr2 =  TIMx->CR2;
 8005be4:	6844      	ldr	r4, [r0, #4]
  tmpccmrx = TIMx->CCMR1;
 8005be6:	6982      	ldr	r2, [r0, #24]
  tmpccmrx |= (OC_Config->OCMode << 8U);
 8005be8:	680d      	ldr	r5, [r1, #0]
  tmpccmrx &= ~TIM_CCMR1_CC2S;
 8005bea:	f422 42e6 	bic.w	r2, r2, #29440	; 0x7300
  tmpccmrx |= (OC_Config->OCMode << 8U);
 8005bee:	ea42 2205 	orr.w	r2, r2, r5, lsl #8
  tmpccer |= (OC_Config->OCPolarity << 4U);
 8005bf2:	688d      	ldr	r5, [r1, #8]
  tmpccer &= ~TIM_CCER_CC2P;
 8005bf4:	f023 0320 	bic.w	r3, r3, #32
  tmpccer |= (OC_Config->OCPolarity << 4U);
 8005bf8:	ea43 1305 	orr.w	r3, r3, r5, lsl #4
  if (IS_TIM_CCXN_INSTANCE(TIMx, TIM_CHANNEL_2))
 8005bfc:	4d10      	ldr	r5, [pc, #64]	; (8005c40 <TIM_OC2_SetConfig+0x68>)
 8005bfe:	42a8      	cmp	r0, r5
 8005c00:	d003      	beq.n	8005c0a <TIM_OC2_SetConfig+0x32>
 8005c02:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 8005c06:	42a8      	cmp	r0, r5
 8005c08:	d114      	bne.n	8005c34 <TIM_OC2_SetConfig+0x5c>
    tmpccer |= (OC_Config->OCNPolarity << 4U);
 8005c0a:	68cd      	ldr	r5, [r1, #12]
    tmpccer &= ~TIM_CCER_CC2NP;
 8005c0c:	f023 0380 	bic.w	r3, r3, #128	; 0x80
    tmpccer |= (OC_Config->OCNPolarity << 4U);
 8005c10:	ea43 1305 	orr.w	r3, r3, r5, lsl #4
  if (IS_TIM_BREAK_INSTANCE(TIMx))
 8005c14:	4d0a      	ldr	r5, [pc, #40]	; (8005c40 <TIM_OC2_SetConfig+0x68>)
 8005c16:	42a8      	cmp	r0, r5
    tmpccer &= ~TIM_CCER_CC2NE;
 8005c18:	f023 0340 	bic.w	r3, r3, #64	; 0x40
  if (IS_TIM_BREAK_INSTANCE(TIMx))
 8005c1c:	d003      	beq.n	8005c26 <TIM_OC2_SetConfig+0x4e>
 8005c1e:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 8005c22:	42a8      	cmp	r0, r5
 8005c24:	d106      	bne.n	8005c34 <TIM_OC2_SetConfig+0x5c>
    tmpcr2 |= (OC_Config->OCNIdleState << 2U);
 8005c26:	e9d1 5605 	ldrd	r5, r6, [r1, #20]
    tmpcr2 &= ~TIM_CR2_OIS2N;
 8005c2a:	f424 6440 	bic.w	r4, r4, #3072	; 0xc00
    tmpcr2 |= (OC_Config->OCNIdleState << 2U);
 8005c2e:	4335      	orrs	r5, r6
 8005c30:	ea44 0485 	orr.w	r4, r4, r5, lsl #2
  TIMx->CR2 = tmpcr2;
 8005c34:	6044      	str	r4, [r0, #4]
  TIMx->CCMR1 = tmpccmrx;
 8005c36:	6182      	str	r2, [r0, #24]
  TIMx->CCR2 = OC_Config->Pulse;
 8005c38:	684a      	ldr	r2, [r1, #4]
 8005c3a:	6382      	str	r2, [r0, #56]	; 0x38
  TIMx->CCER = tmpccer;
 8005c3c:	6203      	str	r3, [r0, #32]
}
 8005c3e:	bd70      	pop	{r4, r5, r6, pc}
 8005c40:	40010000 	.word	0x40010000

08005c44 <HAL_TIM_PWM_ConfigChannel>:
{
 8005c44:	b538      	push	{r3, r4, r5, lr}
  __HAL_LOCK(htim);
 8005c46:	f890 303c 	ldrb.w	r3, [r0, #60]	; 0x3c
 8005c4a:	2b01      	cmp	r3, #1
{
 8005c4c:	4604      	mov	r4, r0
 8005c4e:	f04f 0002 	mov.w	r0, #2
  __HAL_LOCK(htim);
 8005c52:	d025      	beq.n	8005ca0 <HAL_TIM_PWM_ConfigChannel+0x5c>
 8005c54:	2301      	movs	r3, #1
 8005c56:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
  htim->State = HAL_TIM_STATE_BUSY;
 8005c5a:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
  switch (Channel)
 8005c5e:	2a0c      	cmp	r2, #12
 8005c60:	d818      	bhi.n	8005c94 <HAL_TIM_PWM_ConfigChannel+0x50>
 8005c62:	e8df f002 	tbb	[pc, r2]
 8005c66:	1707      	.short	0x1707
 8005c68:	171e1717 	.word	0x171e1717
 8005c6c:	172f1717 	.word	0x172f1717
 8005c70:	1717      	.short	0x1717
 8005c72:	40          	.byte	0x40
 8005c73:	00          	.byte	0x00
      TIM_OC1_SetConfig(htim->Instance, sConfig);
 8005c74:	6820      	ldr	r0, [r4, #0]
 8005c76:	f7ff fd89 	bl	800578c <TIM_OC1_SetConfig>
      htim->Instance->CCMR1 |= TIM_CCMR1_OC1PE;
 8005c7a:	6823      	ldr	r3, [r4, #0]
      htim->Instance->CCMR1 |= sConfig->OCFastMode;
 8005c7c:	6909      	ldr	r1, [r1, #16]
      htim->Instance->CCMR1 |= TIM_CCMR1_OC1PE;
 8005c7e:	699a      	ldr	r2, [r3, #24]
 8005c80:	f042 0208 	orr.w	r2, r2, #8
 8005c84:	619a      	str	r2, [r3, #24]
      htim->Instance->CCMR1 &= ~TIM_CCMR1_OC1FE;
 8005c86:	699a      	ldr	r2, [r3, #24]
 8005c88:	f022 0204 	bic.w	r2, r2, #4
 8005c8c:	619a      	str	r2, [r3, #24]
      htim->Instance->CCMR1 |= sConfig->OCFastMode;
 8005c8e:	699a      	ldr	r2, [r3, #24]
 8005c90:	430a      	orrs	r2, r1
      htim->Instance->CCMR1 |= sConfig->OCFastMode << 8U;
 8005c92:	619a      	str	r2, [r3, #24]
  htim->State = HAL_TIM_STATE_READY;
 8005c94:	2301      	movs	r3, #1
  __HAL_UNLOCK(htim);
 8005c96:	2000      	movs	r0, #0
  htim->State = HAL_TIM_STATE_READY;
 8005c98:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  __HAL_UNLOCK(htim);
 8005c9c:	f884 003c 	strb.w	r0, [r4, #60]	; 0x3c
}
 8005ca0:	bd38      	pop	{r3, r4, r5, pc}
      TIM_OC2_SetConfig(htim->Instance, sConfig);
 8005ca2:	6820      	ldr	r0, [r4, #0]
 8005ca4:	f7ff ff98 	bl	8005bd8 <TIM_OC2_SetConfig>
      htim->Instance->CCMR1 |= TIM_CCMR1_OC2PE;
 8005ca8:	6823      	ldr	r3, [r4, #0]
      htim->Instance->CCMR1 |= sConfig->OCFastMode << 8U;
 8005caa:	6909      	ldr	r1, [r1, #16]
      htim->Instance->CCMR1 |= TIM_CCMR1_OC2PE;
 8005cac:	699a      	ldr	r2, [r3, #24]
 8005cae:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 8005cb2:	619a      	str	r2, [r3, #24]
      htim->Instance->CCMR1 &= ~TIM_CCMR1_OC2FE;
 8005cb4:	699a      	ldr	r2, [r3, #24]
 8005cb6:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8005cba:	619a      	str	r2, [r3, #24]
      htim->Instance->CCMR1 |= sConfig->OCFastMode << 8U;
 8005cbc:	699a      	ldr	r2, [r3, #24]
 8005cbe:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 8005cc2:	e7e6      	b.n	8005c92 <HAL_TIM_PWM_ConfigChannel+0x4e>
      TIM_OC3_SetConfig(htim->Instance, sConfig);
 8005cc4:	6820      	ldr	r0, [r4, #0]
 8005cc6:	f7ff fd93 	bl	80057f0 <TIM_OC3_SetConfig>
      htim->Instance->CCMR2 |= TIM_CCMR2_OC3PE;
 8005cca:	6823      	ldr	r3, [r4, #0]
      htim->Instance->CCMR2 |= sConfig->OCFastMode;
 8005ccc:	6909      	ldr	r1, [r1, #16]
      htim->Instance->CCMR2 |= TIM_CCMR2_OC3PE;
 8005cce:	69da      	ldr	r2, [r3, #28]
 8005cd0:	f042 0208 	orr.w	r2, r2, #8
 8005cd4:	61da      	str	r2, [r3, #28]
      htim->Instance->CCMR2 &= ~TIM_CCMR2_OC3FE;
 8005cd6:	69da      	ldr	r2, [r3, #28]
 8005cd8:	f022 0204 	bic.w	r2, r2, #4
 8005cdc:	61da      	str	r2, [r3, #28]
      htim->Instance->CCMR2 |= sConfig->OCFastMode;
 8005cde:	69da      	ldr	r2, [r3, #28]
 8005ce0:	430a      	orrs	r2, r1
      htim->Instance->CCMR2 |= sConfig->OCFastMode << 8U;
 8005ce2:	61da      	str	r2, [r3, #28]
      break;
 8005ce4:	e7d6      	b.n	8005c94 <HAL_TIM_PWM_ConfigChannel+0x50>
      TIM_OC4_SetConfig(htim->Instance, sConfig);
 8005ce6:	6820      	ldr	r0, [r4, #0]
 8005ce8:	f7ff fdb8 	bl	800585c <TIM_OC4_SetConfig>
      htim->Instance->CCMR2 |= TIM_CCMR2_OC4PE;
 8005cec:	6823      	ldr	r3, [r4, #0]
      htim->Instance->CCMR2 |= sConfig->OCFastMode << 8U;
 8005cee:	6909      	ldr	r1, [r1, #16]
      htim->Instance->CCMR2 |= TIM_CCMR2_OC4PE;
 8005cf0:	69da      	ldr	r2, [r3, #28]
 8005cf2:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 8005cf6:	61da      	str	r2, [r3, #28]
      htim->Instance->CCMR2 &= ~TIM_CCMR2_OC4FE;
 8005cf8:	69da      	ldr	r2, [r3, #28]
 8005cfa:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8005cfe:	61da      	str	r2, [r3, #28]
      htim->Instance->CCMR2 |= sConfig->OCFastMode << 8U;
 8005d00:	69da      	ldr	r2, [r3, #28]
 8005d02:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 8005d06:	e7ec      	b.n	8005ce2 <HAL_TIM_PWM_ConfigChannel+0x9e>

08005d08 <TIM_ETR_SetConfig>:
  *          This parameter must be a value between 0x00 and 0x0F
  * @retval None
  */
void TIM_ETR_SetConfig(TIM_TypeDef *TIMx, uint32_t TIM_ExtTRGPrescaler,
                       uint32_t TIM_ExtTRGPolarity, uint32_t ExtTRGFilter)
{
 8005d08:	b510      	push	{r4, lr}
  uint32_t tmpsmcr;

  tmpsmcr = TIMx->SMCR;
 8005d0a:	6884      	ldr	r4, [r0, #8]

  /* Reset the ETR Bits */
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);

  /* Set the Prescaler, the Filter value and the Polarity */
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 8005d0c:	430a      	orrs	r2, r1
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
 8005d0e:	f424 447f 	bic.w	r4, r4, #65280	; 0xff00
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 8005d12:	ea42 2303 	orr.w	r3, r2, r3, lsl #8
 8005d16:	4323      	orrs	r3, r4

  /* Write to TIMx SMCR */
  TIMx->SMCR = tmpsmcr;
 8005d18:	6083      	str	r3, [r0, #8]
}
 8005d1a:	bd10      	pop	{r4, pc}

08005d1c <HAL_TIM_ConfigClockSource>:
  __HAL_LOCK(htim);
 8005d1c:	f890 303c 	ldrb.w	r3, [r0, #60]	; 0x3c
 8005d20:	2b01      	cmp	r3, #1
{
 8005d22:	b570      	push	{r4, r5, r6, lr}
 8005d24:	4604      	mov	r4, r0
 8005d26:	f04f 0002 	mov.w	r0, #2
  __HAL_LOCK(htim);
 8005d2a:	d019      	beq.n	8005d60 <HAL_TIM_ConfigClockSource+0x44>
  htim->State = HAL_TIM_STATE_BUSY;
 8005d2c:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
  tmpsmcr = htim->Instance->SMCR;
 8005d30:	6820      	ldr	r0, [r4, #0]
  __HAL_LOCK(htim);
 8005d32:	2301      	movs	r3, #1
 8005d34:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
  tmpsmcr = htim->Instance->SMCR;
 8005d38:	6883      	ldr	r3, [r0, #8]
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
 8005d3a:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 8005d3e:	f023 0377 	bic.w	r3, r3, #119	; 0x77
  htim->Instance->SMCR = tmpsmcr;
 8005d42:	6083      	str	r3, [r0, #8]
  switch (sClockSourceConfig->ClockSource)
 8005d44:	680b      	ldr	r3, [r1, #0]
 8005d46:	2b40      	cmp	r3, #64	; 0x40
 8005d48:	d065      	beq.n	8005e16 <HAL_TIM_ConfigClockSource+0xfa>
 8005d4a:	d815      	bhi.n	8005d78 <HAL_TIM_ConfigClockSource+0x5c>
 8005d4c:	2b10      	cmp	r3, #16
 8005d4e:	d00c      	beq.n	8005d6a <HAL_TIM_ConfigClockSource+0x4e>
 8005d50:	d807      	bhi.n	8005d62 <HAL_TIM_ConfigClockSource+0x46>
 8005d52:	b153      	cbz	r3, 8005d6a <HAL_TIM_ConfigClockSource+0x4e>
  htim->State = HAL_TIM_STATE_READY;
 8005d54:	2301      	movs	r3, #1
  __HAL_UNLOCK(htim);
 8005d56:	2000      	movs	r0, #0
  htim->State = HAL_TIM_STATE_READY;
 8005d58:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  __HAL_UNLOCK(htim);
 8005d5c:	f884 003c 	strb.w	r0, [r4, #60]	; 0x3c
}
 8005d60:	bd70      	pop	{r4, r5, r6, pc}
  switch (sClockSourceConfig->ClockSource)
 8005d62:	2b20      	cmp	r3, #32
 8005d64:	d001      	beq.n	8005d6a <HAL_TIM_ConfigClockSource+0x4e>
 8005d66:	2b30      	cmp	r3, #48	; 0x30
 8005d68:	d1f4      	bne.n	8005d54 <HAL_TIM_ConfigClockSource+0x38>
  tmpsmcr = TIMx->SMCR;
 8005d6a:	6882      	ldr	r2, [r0, #8]
  tmpsmcr |= (InputTriggerSource | TIM_SLAVEMODE_EXTERNAL1);
 8005d6c:	f043 0307 	orr.w	r3, r3, #7
  tmpsmcr &= ~TIM_SMCR_TS;
 8005d70:	f022 0270 	bic.w	r2, r2, #112	; 0x70
  tmpsmcr |= (InputTriggerSource | TIM_SLAVEMODE_EXTERNAL1);
 8005d74:	4313      	orrs	r3, r2
 8005d76:	e01a      	b.n	8005dae <HAL_TIM_ConfigClockSource+0x92>
  switch (sClockSourceConfig->ClockSource)
 8005d78:	2b60      	cmp	r3, #96	; 0x60
 8005d7a:	d034      	beq.n	8005de6 <HAL_TIM_ConfigClockSource+0xca>
 8005d7c:	d819      	bhi.n	8005db2 <HAL_TIM_ConfigClockSource+0x96>
 8005d7e:	2b50      	cmp	r3, #80	; 0x50
 8005d80:	d1e8      	bne.n	8005d54 <HAL_TIM_ConfigClockSource+0x38>
      TIM_TI1_ConfigInputStage(htim->Instance,
 8005d82:	684a      	ldr	r2, [r1, #4]
 8005d84:	68ce      	ldr	r6, [r1, #12]
  tmpccer = TIMx->CCER;
 8005d86:	6a01      	ldr	r1, [r0, #32]
  TIMx->CCER &= ~TIM_CCER_CC1E;
 8005d88:	6a05      	ldr	r5, [r0, #32]
 8005d8a:	f025 0501 	bic.w	r5, r5, #1
 8005d8e:	6205      	str	r5, [r0, #32]
  tmpccmr1 = TIMx->CCMR1;
 8005d90:	6983      	ldr	r3, [r0, #24]
  tmpccer &= ~(TIM_CCER_CC1P | TIM_CCER_CC1NP);
 8005d92:	f021 010a 	bic.w	r1, r1, #10
  tmpccmr1 &= ~TIM_CCMR1_IC1F;
 8005d96:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
  tmpccmr1 |= (TIM_ICFilter << 4U);
 8005d9a:	ea43 1306 	orr.w	r3, r3, r6, lsl #4
  tmpccer |= TIM_ICPolarity;
 8005d9e:	430a      	orrs	r2, r1
  TIMx->CCMR1 = tmpccmr1;
 8005da0:	6183      	str	r3, [r0, #24]
  TIMx->CCER = tmpccer;
 8005da2:	6202      	str	r2, [r0, #32]
  tmpsmcr = TIMx->SMCR;
 8005da4:	6883      	ldr	r3, [r0, #8]
  tmpsmcr &= ~TIM_SMCR_TS;
 8005da6:	f023 0370 	bic.w	r3, r3, #112	; 0x70
  tmpsmcr |= (InputTriggerSource | TIM_SLAVEMODE_EXTERNAL1);
 8005daa:	f043 0357 	orr.w	r3, r3, #87	; 0x57
  TIMx->SMCR = tmpsmcr;
 8005dae:	6083      	str	r3, [r0, #8]
 8005db0:	e7d0      	b.n	8005d54 <HAL_TIM_ConfigClockSource+0x38>
  switch (sClockSourceConfig->ClockSource)
 8005db2:	2b70      	cmp	r3, #112	; 0x70
 8005db4:	d00c      	beq.n	8005dd0 <HAL_TIM_ConfigClockSource+0xb4>
 8005db6:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8005dba:	d1cb      	bne.n	8005d54 <HAL_TIM_ConfigClockSource+0x38>
      TIM_ETR_SetConfig(htim->Instance,
 8005dbc:	68cb      	ldr	r3, [r1, #12]
 8005dbe:	e9d1 2101 	ldrd	r2, r1, [r1, #4]
 8005dc2:	f7ff ffa1 	bl	8005d08 <TIM_ETR_SetConfig>
      htim->Instance->SMCR |= TIM_SMCR_ECE;
 8005dc6:	6822      	ldr	r2, [r4, #0]
 8005dc8:	6893      	ldr	r3, [r2, #8]
 8005dca:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8005dce:	e008      	b.n	8005de2 <HAL_TIM_ConfigClockSource+0xc6>
      TIM_ETR_SetConfig(htim->Instance,
 8005dd0:	68cb      	ldr	r3, [r1, #12]
 8005dd2:	e9d1 2101 	ldrd	r2, r1, [r1, #4]
 8005dd6:	f7ff ff97 	bl	8005d08 <TIM_ETR_SetConfig>
      tmpsmcr = htim->Instance->SMCR;
 8005dda:	6822      	ldr	r2, [r4, #0]
 8005ddc:	6893      	ldr	r3, [r2, #8]
      tmpsmcr |= (TIM_SLAVEMODE_EXTERNAL1 | TIM_CLOCKSOURCE_ETRMODE1);
 8005dde:	f043 0377 	orr.w	r3, r3, #119	; 0x77
      htim->Instance->SMCR |= TIM_SMCR_ECE;
 8005de2:	6093      	str	r3, [r2, #8]
      break;
 8005de4:	e7b6      	b.n	8005d54 <HAL_TIM_ConfigClockSource+0x38>
      TIM_TI2_ConfigInputStage(htim->Instance,
 8005de6:	684d      	ldr	r5, [r1, #4]
 8005de8:	68ce      	ldr	r6, [r1, #12]
  TIMx->CCER &= ~TIM_CCER_CC2E;
 8005dea:	6a01      	ldr	r1, [r0, #32]
 8005dec:	f021 0110 	bic.w	r1, r1, #16
 8005df0:	6201      	str	r1, [r0, #32]
  tmpccmr1 = TIMx->CCMR1;
 8005df2:	6982      	ldr	r2, [r0, #24]
  tmpccer = TIMx->CCER;
 8005df4:	6a03      	ldr	r3, [r0, #32]
  tmpccmr1 &= ~TIM_CCMR1_IC2F;
 8005df6:	f422 4270 	bic.w	r2, r2, #61440	; 0xf000
  tmpccer &= ~(TIM_CCER_CC2P | TIM_CCER_CC2NP);
 8005dfa:	f023 03a0 	bic.w	r3, r3, #160	; 0xa0
  tmpccer |= (TIM_ICPolarity << 4U);
 8005dfe:	ea43 1305 	orr.w	r3, r3, r5, lsl #4
  tmpccmr1 |= (TIM_ICFilter << 12U);
 8005e02:	ea42 3206 	orr.w	r2, r2, r6, lsl #12
  TIMx->CCMR1 = tmpccmr1 ;
 8005e06:	6182      	str	r2, [r0, #24]
  TIMx->CCER = tmpccer;
 8005e08:	6203      	str	r3, [r0, #32]
  tmpsmcr = TIMx->SMCR;
 8005e0a:	6883      	ldr	r3, [r0, #8]
  tmpsmcr &= ~TIM_SMCR_TS;
 8005e0c:	f023 0370 	bic.w	r3, r3, #112	; 0x70
  tmpsmcr |= (InputTriggerSource | TIM_SLAVEMODE_EXTERNAL1);
 8005e10:	f043 0367 	orr.w	r3, r3, #103	; 0x67
 8005e14:	e7cb      	b.n	8005dae <HAL_TIM_ConfigClockSource+0x92>
      TIM_TI1_ConfigInputStage(htim->Instance,
 8005e16:	684a      	ldr	r2, [r1, #4]
 8005e18:	68ce      	ldr	r6, [r1, #12]
  tmpccer = TIMx->CCER;
 8005e1a:	6a01      	ldr	r1, [r0, #32]
  TIMx->CCER &= ~TIM_CCER_CC1E;
 8005e1c:	6a05      	ldr	r5, [r0, #32]
 8005e1e:	f025 0501 	bic.w	r5, r5, #1
 8005e22:	6205      	str	r5, [r0, #32]
  tmpccmr1 = TIMx->CCMR1;
 8005e24:	6983      	ldr	r3, [r0, #24]
  tmpccer &= ~(TIM_CCER_CC1P | TIM_CCER_CC1NP);
 8005e26:	f021 010a 	bic.w	r1, r1, #10
  tmpccmr1 &= ~TIM_CCMR1_IC1F;
 8005e2a:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
  tmpccmr1 |= (TIM_ICFilter << 4U);
 8005e2e:	ea43 1306 	orr.w	r3, r3, r6, lsl #4
  tmpccer |= TIM_ICPolarity;
 8005e32:	430a      	orrs	r2, r1
  TIMx->CCMR1 = tmpccmr1;
 8005e34:	6183      	str	r3, [r0, #24]
  TIMx->CCER = tmpccer;
 8005e36:	6202      	str	r2, [r0, #32]
  tmpsmcr = TIMx->SMCR;
 8005e38:	6883      	ldr	r3, [r0, #8]
  tmpsmcr &= ~TIM_SMCR_TS;
 8005e3a:	f023 0370 	bic.w	r3, r3, #112	; 0x70
  tmpsmcr |= (InputTriggerSource | TIM_SLAVEMODE_EXTERNAL1);
 8005e3e:	f043 0347 	orr.w	r3, r3, #71	; 0x47
 8005e42:	e7b4      	b.n	8005dae <HAL_TIM_ConfigClockSource+0x92>

08005e44 <TIM_CCxChannelCmd>:
  assert_param(IS_TIM_CHANNELS(Channel));

  tmp = TIM_CCER_CC1E << (Channel & 0x1FU); /* 0x1FU = 31 bits max shift */

  /* Reset the CCxE Bit */
  TIMx->CCER &= ~tmp;
 8005e44:	6a03      	ldr	r3, [r0, #32]
  tmp = TIM_CCER_CC1E << (Channel & 0x1FU); /* 0x1FU = 31 bits max shift */
 8005e46:	f001 011f 	and.w	r1, r1, #31
{
 8005e4a:	b510      	push	{r4, lr}
  tmp = TIM_CCER_CC1E << (Channel & 0x1FU); /* 0x1FU = 31 bits max shift */
 8005e4c:	2401      	movs	r4, #1
 8005e4e:	408c      	lsls	r4, r1
  TIMx->CCER &= ~tmp;
 8005e50:	ea23 0304 	bic.w	r3, r3, r4
 8005e54:	6203      	str	r3, [r0, #32]

  /* Set or reset the CCxE Bit */
  TIMx->CCER |= (uint32_t)(ChannelState << (Channel & 0x1FU)); /* 0x1FU = 31 bits max shift */
 8005e56:	6a03      	ldr	r3, [r0, #32]
 8005e58:	408a      	lsls	r2, r1
 8005e5a:	431a      	orrs	r2, r3
 8005e5c:	6202      	str	r2, [r0, #32]
}
 8005e5e:	bd10      	pop	{r4, pc}

08005e60 <HAL_TIM_OC_Start_DMA>:
{
 8005e60:	b570      	push	{r4, r5, r6, lr}
 8005e62:	4604      	mov	r4, r0
  if (htim->State == HAL_TIM_STATE_BUSY)
 8005e64:	f890 003d 	ldrb.w	r0, [r0, #61]	; 0x3d
 8005e68:	b2c0      	uxtb	r0, r0
 8005e6a:	2802      	cmp	r0, #2
{
 8005e6c:	460d      	mov	r5, r1
 8005e6e:	4611      	mov	r1, r2
  if (htim->State == HAL_TIM_STATE_BUSY)
 8005e70:	d006      	beq.n	8005e80 <HAL_TIM_OC_Start_DMA+0x20>
  else if (htim->State == HAL_TIM_STATE_READY)
 8005e72:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
 8005e76:	2a01      	cmp	r2, #1
 8005e78:	d106      	bne.n	8005e88 <HAL_TIM_OC_Start_DMA+0x28>
    if ((pData == NULL) && (Length > 0U))
 8005e7a:	b911      	cbnz	r1, 8005e82 <HAL_TIM_OC_Start_DMA+0x22>
 8005e7c:	b10b      	cbz	r3, 8005e82 <HAL_TIM_OC_Start_DMA+0x22>
      return HAL_ERROR;
 8005e7e:	2001      	movs	r0, #1
}
 8005e80:	bd70      	pop	{r4, r5, r6, pc}
      htim->State = HAL_TIM_STATE_BUSY;
 8005e82:	2202      	movs	r2, #2
 8005e84:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
 8005e88:	6822      	ldr	r2, [r4, #0]
  switch (Channel)
 8005e8a:	2d0c      	cmp	r5, #12
 8005e8c:	d819      	bhi.n	8005ec2 <HAL_TIM_OC_Start_DMA+0x62>
 8005e8e:	e8df f005 	tbb	[pc, r5]
 8005e92:	1807      	.short	0x1807
 8005e94:	18341818 	.word	0x18341818
 8005e98:	18451818 	.word	0x18451818
 8005e9c:	1818      	.short	0x1818
 8005e9e:	56          	.byte	0x56
 8005e9f:	00          	.byte	0x00
      htim->hdma[TIM_DMA_ID_CC1]->XferCpltCallback = TIM_DMADelayPulseCplt;
 8005ea0:	6a60      	ldr	r0, [r4, #36]	; 0x24
 8005ea2:	4e2f      	ldr	r6, [pc, #188]	; (8005f60 <HAL_TIM_OC_Start_DMA+0x100>)
 8005ea4:	63c6      	str	r6, [r0, #60]	; 0x3c
      htim->hdma[TIM_DMA_ID_CC1]->XferHalfCpltCallback = TIM_DMADelayPulseHalfCplt;
 8005ea6:	4e2f      	ldr	r6, [pc, #188]	; (8005f64 <HAL_TIM_OC_Start_DMA+0x104>)
 8005ea8:	6406      	str	r6, [r0, #64]	; 0x40
      htim->hdma[TIM_DMA_ID_CC1]->XferErrorCallback = TIM_DMAError ;
 8005eaa:	4e2f      	ldr	r6, [pc, #188]	; (8005f68 <HAL_TIM_OC_Start_DMA+0x108>)
 8005eac:	64c6      	str	r6, [r0, #76]	; 0x4c
      if (HAL_DMA_Start_IT(htim->hdma[TIM_DMA_ID_CC1], (uint32_t)pData, (uint32_t)&htim->Instance->CCR1, Length) != HAL_OK)
 8005eae:	3234      	adds	r2, #52	; 0x34
 8005eb0:	f7fd fc2e 	bl	8003710 <HAL_DMA_Start_IT>
 8005eb4:	2800      	cmp	r0, #0
 8005eb6:	d1e2      	bne.n	8005e7e <HAL_TIM_OC_Start_DMA+0x1e>
      __HAL_TIM_ENABLE_DMA(htim, TIM_DMA_CC1);
 8005eb8:	6822      	ldr	r2, [r4, #0]
 8005eba:	68d3      	ldr	r3, [r2, #12]
 8005ebc:	f443 7300 	orr.w	r3, r3, #512	; 0x200
      __HAL_TIM_ENABLE_DMA(htim, TIM_DMA_CC4);
 8005ec0:	60d3      	str	r3, [r2, #12]
  TIM_CCxChannelCmd(htim->Instance, Channel, TIM_CCx_ENABLE);
 8005ec2:	2201      	movs	r2, #1
 8005ec4:	4629      	mov	r1, r5
 8005ec6:	6820      	ldr	r0, [r4, #0]
 8005ec8:	f7ff ffbc 	bl	8005e44 <TIM_CCxChannelCmd>
  if (IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)
 8005ecc:	6823      	ldr	r3, [r4, #0]
 8005ece:	4a27      	ldr	r2, [pc, #156]	; (8005f6c <HAL_TIM_OC_Start_DMA+0x10c>)
 8005ed0:	4293      	cmp	r3, r2
 8005ed2:	d003      	beq.n	8005edc <HAL_TIM_OC_Start_DMA+0x7c>
 8005ed4:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8005ed8:	4293      	cmp	r3, r2
 8005eda:	d103      	bne.n	8005ee4 <HAL_TIM_OC_Start_DMA+0x84>
    __HAL_TIM_MOE_ENABLE(htim);
 8005edc:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8005ede:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 8005ee2:	645a      	str	r2, [r3, #68]	; 0x44
  tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
 8005ee4:	689a      	ldr	r2, [r3, #8]
 8005ee6:	f002 0207 	and.w	r2, r2, #7
  if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 8005eea:	2a06      	cmp	r2, #6
    __HAL_TIM_ENABLE(htim);
 8005eec:	bf1e      	ittt	ne
 8005eee:	681a      	ldrne	r2, [r3, #0]
 8005ef0:	f042 0201 	orrne.w	r2, r2, #1
 8005ef4:	601a      	strne	r2, [r3, #0]
  return HAL_OK;
 8005ef6:	2000      	movs	r0, #0
 8005ef8:	e7c2      	b.n	8005e80 <HAL_TIM_OC_Start_DMA+0x20>
      htim->hdma[TIM_DMA_ID_CC2]->XferCpltCallback = TIM_DMADelayPulseCplt;
 8005efa:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 8005efc:	4e18      	ldr	r6, [pc, #96]	; (8005f60 <HAL_TIM_OC_Start_DMA+0x100>)
 8005efe:	63c6      	str	r6, [r0, #60]	; 0x3c
      htim->hdma[TIM_DMA_ID_CC2]->XferHalfCpltCallback = TIM_DMADelayPulseHalfCplt;
 8005f00:	4e18      	ldr	r6, [pc, #96]	; (8005f64 <HAL_TIM_OC_Start_DMA+0x104>)
 8005f02:	6406      	str	r6, [r0, #64]	; 0x40
      htim->hdma[TIM_DMA_ID_CC2]->XferErrorCallback = TIM_DMAError ;
 8005f04:	4e18      	ldr	r6, [pc, #96]	; (8005f68 <HAL_TIM_OC_Start_DMA+0x108>)
 8005f06:	64c6      	str	r6, [r0, #76]	; 0x4c
      if (HAL_DMA_Start_IT(htim->hdma[TIM_DMA_ID_CC2], (uint32_t)pData, (uint32_t)&htim->Instance->CCR2, Length) != HAL_OK)
 8005f08:	3238      	adds	r2, #56	; 0x38
 8005f0a:	f7fd fc01 	bl	8003710 <HAL_DMA_Start_IT>
 8005f0e:	2800      	cmp	r0, #0
 8005f10:	d1b5      	bne.n	8005e7e <HAL_TIM_OC_Start_DMA+0x1e>
      __HAL_TIM_ENABLE_DMA(htim, TIM_DMA_CC2);
 8005f12:	6822      	ldr	r2, [r4, #0]
 8005f14:	68d3      	ldr	r3, [r2, #12]
 8005f16:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 8005f1a:	e7d1      	b.n	8005ec0 <HAL_TIM_OC_Start_DMA+0x60>
      htim->hdma[TIM_DMA_ID_CC3]->XferCpltCallback = TIM_DMADelayPulseCplt;
 8005f1c:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
 8005f1e:	4e10      	ldr	r6, [pc, #64]	; (8005f60 <HAL_TIM_OC_Start_DMA+0x100>)
 8005f20:	63c6      	str	r6, [r0, #60]	; 0x3c
      htim->hdma[TIM_DMA_ID_CC3]->XferHalfCpltCallback = TIM_DMADelayPulseHalfCplt;
 8005f22:	4e10      	ldr	r6, [pc, #64]	; (8005f64 <HAL_TIM_OC_Start_DMA+0x104>)
 8005f24:	6406      	str	r6, [r0, #64]	; 0x40
      htim->hdma[TIM_DMA_ID_CC3]->XferErrorCallback = TIM_DMAError ;
 8005f26:	4e10      	ldr	r6, [pc, #64]	; (8005f68 <HAL_TIM_OC_Start_DMA+0x108>)
 8005f28:	64c6      	str	r6, [r0, #76]	; 0x4c
      if (HAL_DMA_Start_IT(htim->hdma[TIM_DMA_ID_CC3], (uint32_t)pData, (uint32_t)&htim->Instance->CCR3, Length) != HAL_OK)
 8005f2a:	323c      	adds	r2, #60	; 0x3c
 8005f2c:	f7fd fbf0 	bl	8003710 <HAL_DMA_Start_IT>
 8005f30:	2800      	cmp	r0, #0
 8005f32:	d1a4      	bne.n	8005e7e <HAL_TIM_OC_Start_DMA+0x1e>
      __HAL_TIM_ENABLE_DMA(htim, TIM_DMA_CC3);
 8005f34:	6822      	ldr	r2, [r4, #0]
 8005f36:	68d3      	ldr	r3, [r2, #12]
 8005f38:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
 8005f3c:	e7c0      	b.n	8005ec0 <HAL_TIM_OC_Start_DMA+0x60>
      htim->hdma[TIM_DMA_ID_CC4]->XferCpltCallback = TIM_DMADelayPulseCplt;
 8005f3e:	6b20      	ldr	r0, [r4, #48]	; 0x30
 8005f40:	4e07      	ldr	r6, [pc, #28]	; (8005f60 <HAL_TIM_OC_Start_DMA+0x100>)
 8005f42:	63c6      	str	r6, [r0, #60]	; 0x3c
      htim->hdma[TIM_DMA_ID_CC4]->XferHalfCpltCallback = TIM_DMADelayPulseHalfCplt;
 8005f44:	4e07      	ldr	r6, [pc, #28]	; (8005f64 <HAL_TIM_OC_Start_DMA+0x104>)
 8005f46:	6406      	str	r6, [r0, #64]	; 0x40
      htim->hdma[TIM_DMA_ID_CC4]->XferErrorCallback = TIM_DMAError ;
 8005f48:	4e07      	ldr	r6, [pc, #28]	; (8005f68 <HAL_TIM_OC_Start_DMA+0x108>)
 8005f4a:	64c6      	str	r6, [r0, #76]	; 0x4c
      if (HAL_DMA_Start_IT(htim->hdma[TIM_DMA_ID_CC4], (uint32_t)pData, (uint32_t)&htim->Instance->CCR4, Length) != HAL_OK)
 8005f4c:	3240      	adds	r2, #64	; 0x40
 8005f4e:	f7fd fbdf 	bl	8003710 <HAL_DMA_Start_IT>
 8005f52:	2800      	cmp	r0, #0
 8005f54:	d193      	bne.n	8005e7e <HAL_TIM_OC_Start_DMA+0x1e>
      __HAL_TIM_ENABLE_DMA(htim, TIM_DMA_CC4);
 8005f56:	6822      	ldr	r2, [r4, #0]
 8005f58:	68d3      	ldr	r3, [r2, #12]
 8005f5a:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
 8005f5e:	e7af      	b.n	8005ec0 <HAL_TIM_OC_Start_DMA+0x60>
 8005f60:	080058d1 	.word	0x080058d1
 8005f64:	0800590f 	.word	0x0800590f
 8005f68:	08005a93 	.word	0x08005a93
 8005f6c:	40010000 	.word	0x40010000

08005f70 <HAL_TIM_PWM_Start_DMA>:
 8005f70:	f7ff bf76 	b.w	8005e60 <HAL_TIM_OC_Start_DMA>

08005f74 <HAL_TIMEx_MasterConfigSynchronization>:
  assert_param(IS_TIM_MASTER_INSTANCE(htim->Instance));
  assert_param(IS_TIM_TRGO_SOURCE(sMasterConfig->MasterOutputTrigger));
  assert_param(IS_TIM_MSM_STATE(sMasterConfig->MasterSlaveMode));

  /* Check input state */
  __HAL_LOCK(htim);
 8005f74:	f890 303c 	ldrb.w	r3, [r0, #60]	; 0x3c
 8005f78:	2b01      	cmp	r3, #1
{
 8005f7a:	b530      	push	{r4, r5, lr}
 8005f7c:	f04f 0302 	mov.w	r3, #2
  __HAL_LOCK(htim);
 8005f80:	d035      	beq.n	8005fee <HAL_TIMEx_MasterConfigSynchronization+0x7a>

  /* Change the handler state */
  htim->State = HAL_TIM_STATE_BUSY;
 8005f82:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d

  /* Get the TIMx CR2 register value */
  tmpcr2 = htim->Instance->CR2;
 8005f86:	6803      	ldr	r3, [r0, #0]
  tmpsmcr = htim->Instance->SMCR;

  /* Reset the MMS Bits */
  tmpcr2 &= ~TIM_CR2_MMS;
  /* Select the TRGO source */
  tmpcr2 |=  sMasterConfig->MasterOutputTrigger;
 8005f88:	680d      	ldr	r5, [r1, #0]
  tmpcr2 = htim->Instance->CR2;
 8005f8a:	685c      	ldr	r4, [r3, #4]
  tmpcr2 &= ~TIM_CR2_MMS;
 8005f8c:	f024 0470 	bic.w	r4, r4, #112	; 0x70
  __HAL_LOCK(htim);
 8005f90:	2201      	movs	r2, #1
  tmpcr2 |=  sMasterConfig->MasterOutputTrigger;
 8005f92:	432c      	orrs	r4, r5
  __HAL_LOCK(htim);
 8005f94:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
  tmpsmcr = htim->Instance->SMCR;
 8005f98:	689a      	ldr	r2, [r3, #8]

  /* Update TIMx CR2 */
  htim->Instance->CR2 = tmpcr2;
 8005f9a:	605c      	str	r4, [r3, #4]

  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 8005f9c:	4c15      	ldr	r4, [pc, #84]	; (8005ff4 <HAL_TIMEx_MasterConfigSynchronization+0x80>)
 8005f9e:	42a3      	cmp	r3, r4
 8005fa0:	d01a      	beq.n	8005fd8 <HAL_TIMEx_MasterConfigSynchronization+0x64>
 8005fa2:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8005fa6:	d017      	beq.n	8005fd8 <HAL_TIMEx_MasterConfigSynchronization+0x64>
 8005fa8:	f5a4 447c 	sub.w	r4, r4, #64512	; 0xfc00
 8005fac:	42a3      	cmp	r3, r4
 8005fae:	d013      	beq.n	8005fd8 <HAL_TIMEx_MasterConfigSynchronization+0x64>
 8005fb0:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 8005fb4:	42a3      	cmp	r3, r4
 8005fb6:	d00f      	beq.n	8005fd8 <HAL_TIMEx_MasterConfigSynchronization+0x64>
 8005fb8:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 8005fbc:	42a3      	cmp	r3, r4
 8005fbe:	d00b      	beq.n	8005fd8 <HAL_TIMEx_MasterConfigSynchronization+0x64>
 8005fc0:	f504 4478 	add.w	r4, r4, #63488	; 0xf800
 8005fc4:	42a3      	cmp	r3, r4
 8005fc6:	d007      	beq.n	8005fd8 <HAL_TIMEx_MasterConfigSynchronization+0x64>
 8005fc8:	f504 5470 	add.w	r4, r4, #15360	; 0x3c00
 8005fcc:	42a3      	cmp	r3, r4
 8005fce:	d003      	beq.n	8005fd8 <HAL_TIMEx_MasterConfigSynchronization+0x64>
 8005fd0:	f5a4 3494 	sub.w	r4, r4, #75776	; 0x12800
 8005fd4:	42a3      	cmp	r3, r4
 8005fd6:	d104      	bne.n	8005fe2 <HAL_TIMEx_MasterConfigSynchronization+0x6e>
  {
    /* Reset the MSM Bit */
    tmpsmcr &= ~TIM_SMCR_MSM;
    /* Set master mode */
    tmpsmcr |= sMasterConfig->MasterSlaveMode;
 8005fd8:	6849      	ldr	r1, [r1, #4]
    tmpsmcr &= ~TIM_SMCR_MSM;
 8005fda:	f022 0280 	bic.w	r2, r2, #128	; 0x80
    tmpsmcr |= sMasterConfig->MasterSlaveMode;
 8005fde:	430a      	orrs	r2, r1

    /* Update TIMx SMCR */
    htim->Instance->SMCR = tmpsmcr;
 8005fe0:	609a      	str	r2, [r3, #8]
  }

  /* Change the htim state */
  htim->State = HAL_TIM_STATE_READY;
 8005fe2:	2301      	movs	r3, #1
 8005fe4:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d

  __HAL_UNLOCK(htim);
 8005fe8:	2300      	movs	r3, #0
 8005fea:	f880 303c 	strb.w	r3, [r0, #60]	; 0x3c
  __HAL_LOCK(htim);
 8005fee:	4618      	mov	r0, r3

  return HAL_OK;
}
 8005ff0:	bd30      	pop	{r4, r5, pc}
 8005ff2:	bf00      	nop
 8005ff4:	40010000 	.word	0x40010000

08005ff8 <HAL_TIMEx_CommutCallback>:
 8005ff8:	4770      	bx	lr

08005ffa <HAL_TIMEx_BreakCallback>:
 8005ffa:	4770      	bx	lr

08005ffc <FMC_SDRAM_Init>:
  * @param  Device Pointer to SDRAM device instance
  * @param  Init Pointer to SDRAM Initialization structure   
  * @retval HAL status
  */
HAL_StatusTypeDef FMC_SDRAM_Init(FMC_SDRAM_TypeDef *Device, FMC_SDRAM_InitTypeDef *Init)
{
 8005ffc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8006000:	6a4a      	ldr	r2, [r1, #36]	; 0x24
 8006002:	e9d1 4307 	ldrd	r4, r3, [r1, #28]
 8006006:	e9d1 5801 	ldrd	r5, r8, [r1, #4]
 800600a:	e9d1 ec03 	ldrd	lr, ip, [r1, #12]
 800600e:	e9d1 7605 	ldrd	r7, r6, [r1, #20]
  assert_param(IS_FMC_SDCLOCK_PERIOD(Init->SDClockPeriod));
  assert_param(IS_FMC_READ_BURST(Init->ReadBurst));
  assert_param(IS_FMC_READPIPE_DELAY(Init->ReadPipeDelay));   

  /* Set SDRAM bank configuration parameters */
  if (Init->SDBank != FMC_SDRAM_BANK2) 
 8006012:	6809      	ldr	r1, [r1, #0]
 8006014:	2901      	cmp	r1, #1
 8006016:	ea43 0304 	orr.w	r3, r3, r4
 800601a:	4912      	ldr	r1, [pc, #72]	; (8006064 <FMC_SDRAM_Init+0x68>)
  {    
    tmpr1 = Device->SDCR[FMC_SDRAM_BANK1];
 800601c:	6804      	ldr	r4, [r0, #0]
  if (Init->SDBank != FMC_SDRAM_BANK2) 
 800601e:	d00f      	beq.n	8006040 <FMC_SDRAM_Init+0x44>
    tmpr1 &= ((uint32_t)~(FMC_SDCR1_NC  | FMC_SDCR1_NR | FMC_SDCR1_MWID | \
                         FMC_SDCR1_NB  | FMC_SDCR1_CAS | FMC_SDCR1_WP | \
                         FMC_SDCR1_SDCLK | FMC_SDCR1_RBURST | FMC_SDCR1_RPIPE));
  
  
    tmpr1 |= (uint32_t)(Init->ColumnBitsNumber   |\
 8006020:	431a      	orrs	r2, r3
 8006022:	432a      	orrs	r2, r5
 8006024:	ea42 0308 	orr.w	r3, r2, r8
 8006028:	ea43 030e 	orr.w	r3, r3, lr
 800602c:	ea43 030c 	orr.w	r3, r3, ip
 8006030:	433b      	orrs	r3, r7
    tmpr1 &= ((uint32_t)~(FMC_SDCR1_NC  | FMC_SDCR1_NR | FMC_SDCR1_MWID | \
 8006032:	4021      	ands	r1, r4
    tmpr1 |= (uint32_t)(Init->ColumnBitsNumber   |\
 8006034:	4333      	orrs	r3, r6
 8006036:	430b      	orrs	r3, r1
                                               Init->WriteProtection    |\
                                               Init->SDClockPeriod      |\
                                               Init->ReadBurst          |\
                                               Init->ReadPipeDelay
                                               );
    Device->SDCR[FMC_SDRAM_BANK1] = tmpr1;
 8006038:	6003      	str	r3, [r0, #0]
    Device->SDCR[FMC_SDRAM_BANK1] = tmpr1;
    Device->SDCR[FMC_SDRAM_BANK2] = tmpr2;
  }  
  
  return HAL_OK;
}
 800603a:	2000      	movs	r0, #0
 800603c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    tmpr1 |= (uint32_t)(Init->SDClockPeriod      |\
 8006040:	4313      	orrs	r3, r2
    tmpr2 = Device->SDCR[FMC_SDRAM_BANK2];
 8006042:	6842      	ldr	r2, [r0, #4]
    tmpr2 &= ((uint32_t)~(FMC_SDCR1_NC  | FMC_SDCR1_NR | FMC_SDCR1_MWID | \
 8006044:	4011      	ands	r1, r2
    tmpr2 |= (uint32_t)(Init->ColumnBitsNumber   |\
 8006046:	ea45 0208 	orr.w	r2, r5, r8
 800604a:	ea42 020e 	orr.w	r2, r2, lr
 800604e:	ea42 020c 	orr.w	r2, r2, ip
 8006052:	433a      	orrs	r2, r7
    tmpr1 &= ((uint32_t)~(FMC_SDCR1_SDCLK | FMC_SDCR1_RBURST | FMC_SDCR1_RPIPE));
 8006054:	f424 44f8 	bic.w	r4, r4, #31744	; 0x7c00
    tmpr2 |= (uint32_t)(Init->ColumnBitsNumber   |\
 8006058:	4332      	orrs	r2, r6
    tmpr1 |= (uint32_t)(Init->SDClockPeriod      |\
 800605a:	4323      	orrs	r3, r4
    tmpr2 |= (uint32_t)(Init->ColumnBitsNumber   |\
 800605c:	430a      	orrs	r2, r1
    Device->SDCR[FMC_SDRAM_BANK1] = tmpr1;
 800605e:	6003      	str	r3, [r0, #0]
    Device->SDCR[FMC_SDRAM_BANK2] = tmpr2;
 8006060:	6042      	str	r2, [r0, #4]
 8006062:	e7ea      	b.n	800603a <FMC_SDRAM_Init+0x3e>
 8006064:	ffff8000 	.word	0xffff8000

08006068 <FMC_SDRAM_Timing_Init>:
  * @param  Timing Pointer to SDRAM Timing structure
  * @param  Bank SDRAM bank number   
  * @retval HAL status
  */
HAL_StatusTypeDef FMC_SDRAM_Timing_Init(FMC_SDRAM_TypeDef *Device, FMC_SDRAM_TimingTypeDef *Timing, uint32_t Bank)
{
 8006068:	68cb      	ldr	r3, [r1, #12]
 800606a:	b5f0      	push	{r4, r5, r6, r7, lr}
 800606c:	680c      	ldr	r4, [r1, #0]
 800606e:	688e      	ldr	r6, [r1, #8]
 8006070:	690d      	ldr	r5, [r1, #16]
 8006072:	1e5f      	subs	r7, r3, #1
 8006074:	694b      	ldr	r3, [r1, #20]
 8006076:	f104 3cff 	add.w	ip, r4, #4294967295
 800607a:	684c      	ldr	r4, [r1, #4]
 800607c:	6989      	ldr	r1, [r1, #24]
 800607e:	3b01      	subs	r3, #1
 8006080:	051b      	lsls	r3, r3, #20
 8006082:	3c01      	subs	r4, #1
 8006084:	3e01      	subs	r6, #1
 8006086:	3d01      	subs	r5, #1
 8006088:	3901      	subs	r1, #1
  assert_param(IS_FMC_RP_DELAY(Timing->RPDelay));
  assert_param(IS_FMC_RCD_DELAY(Timing->RCDDelay));
  assert_param(IS_FMC_SDRAM_BANK(Bank));
  
  /* Set SDRAM device timing parameters */ 
  if (Bank != FMC_SDRAM_BANK2) 
 800608a:	2a01      	cmp	r2, #1
 800608c:	ea4f 1404 	mov.w	r4, r4, lsl #4
 8006090:	ea4f 2606 	mov.w	r6, r6, lsl #8
 8006094:	ea4f 4505 	mov.w	r5, r5, lsl #16
 8006098:	ea4f 6101 	mov.w	r1, r1, lsl #24
 800609c:	ea43 3307 	orr.w	r3, r3, r7, lsl #12
 80060a0:	d00c      	beq.n	80060bc <FMC_SDRAM_Timing_Init+0x54>
    /* Clear TMRD, TXSR, TRAS, TRC, TWR, TRP and TRCD bits */
    tmpr1 &= ((uint32_t)~(FMC_SDTR1_TMRD  | FMC_SDTR1_TXSR | FMC_SDTR1_TRAS | \
                          FMC_SDTR1_TRC  | FMC_SDTR1_TWR | FMC_SDTR1_TRP | \
                          FMC_SDTR1_TRCD));
    
    tmpr1 |= (uint32_t)(((Timing->LoadToActiveDelay)-1U)           |\
 80060a2:	ea43 030c 	orr.w	r3, r3, ip
 80060a6:	4323      	orrs	r3, r4
    tmpr1 = Device->SDTR[FMC_SDRAM_BANK1];
 80060a8:	6882      	ldr	r2, [r0, #8]
    tmpr1 |= (uint32_t)(((Timing->LoadToActiveDelay)-1U)           |\
 80060aa:	4333      	orrs	r3, r6
 80060ac:	432b      	orrs	r3, r5
    tmpr1 &= ((uint32_t)~(FMC_SDTR1_TMRD  | FMC_SDTR1_TXSR | FMC_SDTR1_TRAS | \
 80060ae:	f002 4270 	and.w	r2, r2, #4026531840	; 0xf0000000
    tmpr1 |= (uint32_t)(((Timing->LoadToActiveDelay)-1U)           |\
 80060b2:	430b      	orrs	r3, r1
 80060b4:	4313      	orrs	r3, r2
                       (((Timing->SelfRefreshTime)-1U) << 8U)      |\
                       (((Timing->RowCycleDelay)-1U) << 12U)       |\
                       (((Timing->WriteRecoveryTime)-1U) <<16U)    |\
                       (((Timing->RPDelay)-1U) << 20U)             |\
                       (((Timing->RCDDelay)-1U) << 24U));
    Device->SDTR[FMC_SDRAM_BANK1] = tmpr1;
 80060b6:	6083      	str	r3, [r0, #8]

    Device->SDTR[FMC_SDRAM_BANK1] = tmpr1;
    Device->SDTR[FMC_SDRAM_BANK2] = tmpr2;
  }
  return HAL_OK;
}
 80060b8:	2000      	movs	r0, #0
 80060ba:	bdf0      	pop	{r4, r5, r6, r7, pc}
    tmpr1 = Device->SDTR[FMC_SDRAM_BANK1];
 80060bc:	6887      	ldr	r7, [r0, #8]
    tmpr1 &= ((uint32_t)~(FMC_SDTR1_TRC | FMC_SDTR1_TRP));
 80060be:	f427 0770 	bic.w	r7, r7, #15728640	; 0xf00000
 80060c2:	f427 4770 	bic.w	r7, r7, #61440	; 0xf000
    tmpr2 |= (uint32_t)((((Timing->LoadToActiveDelay)-1U)           |\
 80060c6:	ea44 0206 	orr.w	r2, r4, r6
    tmpr1 |= (uint32_t)((((Timing->RowCycleDelay)-1U) << 12U)       |\
 80060ca:	433b      	orrs	r3, r7
    tmpr2 |= (uint32_t)((((Timing->LoadToActiveDelay)-1U)           |\
 80060cc:	ea42 020c 	orr.w	r2, r2, ip
    tmpr2 = Device->SDTR[FMC_SDRAM_BANK2];
 80060d0:	68c7      	ldr	r7, [r0, #12]
    Device->SDTR[FMC_SDRAM_BANK1] = tmpr1;
 80060d2:	6083      	str	r3, [r0, #8]
    tmpr2 |= (uint32_t)((((Timing->LoadToActiveDelay)-1U)           |\
 80060d4:	432a      	orrs	r2, r5
    tmpr2 &= ((uint32_t)~(FMC_SDTR1_TMRD  | FMC_SDTR1_TXSR | FMC_SDTR1_TRAS | \
 80060d6:	f007 4770 	and.w	r7, r7, #4026531840	; 0xf0000000
    tmpr2 |= (uint32_t)((((Timing->LoadToActiveDelay)-1U)           |\
 80060da:	430a      	orrs	r2, r1
 80060dc:	433a      	orrs	r2, r7
    Device->SDTR[FMC_SDRAM_BANK2] = tmpr2;
 80060de:	60c2      	str	r2, [r0, #12]
 80060e0:	e7ea      	b.n	80060b8 <FMC_SDRAM_Timing_Init+0x50>

080060e2 <FMC_SDRAM_SendCommand>:
  * @param  Timing Pointer to SDRAM Timing structure
  * @param  Timeout Timeout wait value
  * @retval HAL state
  */  
HAL_StatusTypeDef FMC_SDRAM_SendCommand(FMC_SDRAM_TypeDef *Device, FMC_SDRAM_CommandTypeDef *Command, uint32_t Timeout)
{
 80060e2:	b573      	push	{r0, r1, r4, r5, r6, lr}
  __IO uint32_t tmpr = 0U;
 80060e4:	2300      	movs	r3, #0
 80060e6:	9301      	str	r3, [sp, #4]
{
 80060e8:	4615      	mov	r5, r2
  assert_param(IS_FMC_COMMAND_TARGET(Command->CommandTarget));
  assert_param(IS_FMC_AUTOREFRESH_NUMBER(Command->AutoRefreshNumber));
  assert_param(IS_FMC_MODE_REGISTER(Command->ModeRegisterDefinition));  

  /* Set command register */
  tmpr = (uint32_t)((Command->CommandMode)                  |\
 80060ea:	e9d1 3200 	ldrd	r3, r2, [r1]
 80060ee:	4313      	orrs	r3, r2
                    (Command->CommandTarget)                |\
                    (((Command->AutoRefreshNumber)-1U) << 5U) |\
                    ((Command->ModeRegisterDefinition) << 9U)
 80060f0:	68ca      	ldr	r2, [r1, #12]
  tmpr = (uint32_t)((Command->CommandMode)                  |\
 80060f2:	ea43 2342 	orr.w	r3, r3, r2, lsl #9
                    (((Command->AutoRefreshNumber)-1U) << 5U) |\
 80060f6:	688a      	ldr	r2, [r1, #8]
 80060f8:	3a01      	subs	r2, #1
  tmpr = (uint32_t)((Command->CommandMode)                  |\
 80060fa:	ea43 1342 	orr.w	r3, r3, r2, lsl #5
 80060fe:	9301      	str	r3, [sp, #4]
                    );
    
  Device->SDCMR = tmpr;
 8006100:	9b01      	ldr	r3, [sp, #4]
 8006102:	6103      	str	r3, [r0, #16]
{
 8006104:	4604      	mov	r4, r0

  /* Get tick */ 
  tickstart = HAL_GetTick();
 8006106:	f7fd f9dd 	bl	80034c4 <HAL_GetTick>
 800610a:	4606      	mov	r6, r0

  /* Wait until command is send */
  while(HAL_IS_BIT_SET(Device->SDSR, FMC_SDSR_BUSY))
 800610c:	69a0      	ldr	r0, [r4, #24]
 800610e:	f010 0020 	ands.w	r0, r0, #32
 8006112:	d003      	beq.n	800611c <FMC_SDRAM_SendCommand+0x3a>
  {
    /* Check for the Timeout */
    if(Timeout != HAL_MAX_DELAY)
 8006114:	1c6b      	adds	r3, r5, #1
 8006116:	d0f9      	beq.n	800610c <FMC_SDRAM_SendCommand+0x2a>
    {
      if((Timeout == 0U)||((HAL_GetTick() - tickstart ) > Timeout))
 8006118:	b915      	cbnz	r5, 8006120 <FMC_SDRAM_SendCommand+0x3e>
      {
        return HAL_TIMEOUT;
 800611a:	2003      	movs	r0, #3
      }
    }
  }

  return HAL_OK;
}
 800611c:	b002      	add	sp, #8
 800611e:	bd70      	pop	{r4, r5, r6, pc}
      if((Timeout == 0U)||((HAL_GetTick() - tickstart ) > Timeout))
 8006120:	f7fd f9d0 	bl	80034c4 <HAL_GetTick>
 8006124:	1b80      	subs	r0, r0, r6
 8006126:	42a8      	cmp	r0, r5
 8006128:	d9f0      	bls.n	800610c <FMC_SDRAM_SendCommand+0x2a>
 800612a:	e7f6      	b.n	800611a <FMC_SDRAM_SendCommand+0x38>

0800612c <FMC_SDRAM_ProgramRefreshRate>:
  /* Check the parameters */
  assert_param(IS_FMC_SDRAM_DEVICE(Device));
  assert_param(IS_FMC_REFRESH_RATE(RefreshRate));
  
  /* Set the refresh rate in command register */
  Device->SDRTR |= (RefreshRate<<1U);
 800612c:	6943      	ldr	r3, [r0, #20]
 800612e:	ea43 0141 	orr.w	r1, r3, r1, lsl #1
 8006132:	6141      	str	r1, [r0, #20]
  
  return HAL_OK;   
}
 8006134:	2000      	movs	r0, #0
 8006136:	4770      	bx	lr

08006138 <osKernelInitialize>:
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 8006138:	f3ef 8305 	mrs	r3, IPSR
/*---------------------------------------------------------------------------*/

osStatus_t osKernelInitialize (void) {
  osStatus_t stat;

  if (IS_IRQ()) {
 800613c:	b113      	cbz	r3, 8006144 <osKernelInitialize+0xc>
    stat = osErrorISR;
 800613e:	f06f 0005 	mvn.w	r0, #5
 8006142:	4770      	bx	lr
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8006144:	f3ef 8210 	mrs	r2, PRIMASK
 8006148:	4b07      	ldr	r3, [pc, #28]	; (8006168 <osKernelInitialize+0x30>)
  if (IS_IRQ()) {
 800614a:	b912      	cbnz	r2, 8006152 <osKernelInitialize+0x1a>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 800614c:	f3ef 8211 	mrs	r2, BASEPRI
 8006150:	b112      	cbz	r2, 8006158 <osKernelInitialize+0x20>
 8006152:	681a      	ldr	r2, [r3, #0]
 8006154:	2a02      	cmp	r2, #2
 8006156:	d0f2      	beq.n	800613e <osKernelInitialize+0x6>
  }
  else {
    if (KernelState == osKernelInactive) {
 8006158:	6818      	ldr	r0, [r3, #0]
 800615a:	b910      	cbnz	r0, 8006162 <osKernelInitialize+0x2a>
      #if defined(USE_FREERTOS_HEAP_5) && (HEAP_5_REGION_SETUP == 1)
        vPortDefineHeapRegions (configHEAP_5_REGIONS);
      #endif
      KernelState = osKernelReady;
 800615c:	2201      	movs	r2, #1
 800615e:	601a      	str	r2, [r3, #0]
 8006160:	4770      	bx	lr
      stat = osOK;
    } else {
      stat = osError;
 8006162:	f04f 30ff 	mov.w	r0, #4294967295
    }
  }

  return (stat);
}
 8006166:	4770      	bx	lr
 8006168:	200016d4 	.word	0x200016d4

0800616c <osKernelStart>:
  }

  return (state);
}

osStatus_t osKernelStart (void) {
 800616c:	b508      	push	{r3, lr}
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 800616e:	f3ef 8305 	mrs	r3, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
 8006172:	b113      	cbz	r3, 800617a <osKernelStart+0xe>
    stat = osErrorISR;
 8006174:	f06f 0005 	mvn.w	r0, #5
      stat = osError;
    }
  }

  return (stat);
}
 8006178:	bd08      	pop	{r3, pc}
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 800617a:	f3ef 8210 	mrs	r2, PRIMASK
 800617e:	4b0a      	ldr	r3, [pc, #40]	; (80061a8 <osKernelStart+0x3c>)
  if (IS_IRQ()) {
 8006180:	b912      	cbnz	r2, 8006188 <osKernelStart+0x1c>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 8006182:	f3ef 8211 	mrs	r2, BASEPRI
 8006186:	b112      	cbz	r2, 800618e <osKernelStart+0x22>
 8006188:	681a      	ldr	r2, [r3, #0]
 800618a:	2a02      	cmp	r2, #2
 800618c:	d0f2      	beq.n	8006174 <osKernelStart+0x8>
    if (KernelState == osKernelReady) {
 800618e:	681a      	ldr	r2, [r3, #0]
 8006190:	2a01      	cmp	r2, #1
 8006192:	d105      	bne.n	80061a0 <osKernelStart+0x34>
      KernelState = osKernelRunning;
 8006194:	2202      	movs	r2, #2
 8006196:	601a      	str	r2, [r3, #0]
      vTaskStartScheduler();
 8006198:	f001 fbb2 	bl	8007900 <vTaskStartScheduler>
      stat = osOK;
 800619c:	2000      	movs	r0, #0
 800619e:	e7eb      	b.n	8006178 <osKernelStart+0xc>
      stat = osError;
 80061a0:	f04f 30ff 	mov.w	r0, #4294967295
  return (stat);
 80061a4:	e7e8      	b.n	8006178 <osKernelStart+0xc>
 80061a6:	bf00      	nop
 80061a8:	200016d4 	.word	0x200016d4

080061ac <osThreadNew>:
  return (configCPU_CLOCK_HZ);
}

/*---------------------------------------------------------------------------*/

osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 80061ac:	b5f0      	push	{r4, r5, r6, r7, lr}
 80061ae:	b087      	sub	sp, #28
 80061b0:	4614      	mov	r4, r2
  uint32_t stack;
  TaskHandle_t hTask;
  UBaseType_t prio;
  int32_t mem;

  hTask = NULL;
 80061b2:	2200      	movs	r2, #0
osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 80061b4:	460b      	mov	r3, r1
  hTask = NULL;
 80061b6:	9205      	str	r2, [sp, #20]
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 80061b8:	f3ef 8205 	mrs	r2, IPSR

  if (!IS_IRQ() && (func != NULL)) {
 80061bc:	bb32      	cbnz	r2, 800620c <osThreadNew+0x60>
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 80061be:	f3ef 8210 	mrs	r2, PRIMASK
 80061c2:	b912      	cbnz	r2, 80061ca <osThreadNew+0x1e>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 80061c4:	f3ef 8211 	mrs	r2, BASEPRI
 80061c8:	b11a      	cbz	r2, 80061d2 <osThreadNew+0x26>
 80061ca:	4a22      	ldr	r2, [pc, #136]	; (8006254 <osThreadNew+0xa8>)
 80061cc:	6812      	ldr	r2, [r2, #0]
 80061ce:	2a02      	cmp	r2, #2
 80061d0:	d01c      	beq.n	800620c <osThreadNew+0x60>
 80061d2:	b1d8      	cbz	r0, 800620c <osThreadNew+0x60>
    prio  = (UBaseType_t)osPriorityNormal;

    name = NULL;
    mem  = -1;

    if (attr != NULL) {
 80061d4:	2c00      	cmp	r4, #0
 80061d6:	d036      	beq.n	8006246 <osThreadNew+0x9a>
      if (attr->name != NULL) {
        name = attr->name;
      }
      if (attr->priority != osPriorityNone) {
 80061d8:	69a5      	ldr	r5, [r4, #24]
      if (attr->name != NULL) {
 80061da:	6821      	ldr	r1, [r4, #0]
 80061dc:	2d00      	cmp	r5, #0
 80061de:	bf08      	it	eq
 80061e0:	2518      	moveq	r5, #24
        prio = (UBaseType_t)attr->priority;
      }

      if ((prio < osPriorityIdle) || (prio > osPriorityISR) || ((attr->attr_bits & osThreadJoinable) == osThreadJoinable)) {
 80061e2:	1e6a      	subs	r2, r5, #1
 80061e4:	2a37      	cmp	r2, #55	; 0x37
 80061e6:	462f      	mov	r7, r5
 80061e8:	d831      	bhi.n	800624e <osThreadNew+0xa2>
 80061ea:	6862      	ldr	r2, [r4, #4]
 80061ec:	07d2      	lsls	r2, r2, #31
 80061ee:	d42e      	bmi.n	800624e <osThreadNew+0xa2>
        return (NULL);
      }

      if (attr->stack_size > 0U) {
 80061f0:	6966      	ldr	r6, [r4, #20]
 80061f2:	b176      	cbz	r6, 8006212 <osThreadNew+0x66>
        /* In FreeRTOS stack is not in bytes, but in sizeof(StackType_t) which is 4 on ARM ports.       */
        /* Stack size should be therefore 4 byte aligned in order to avoid division caused side effects */
        stack = attr->stack_size / sizeof(StackType_t);
 80061f4:	08b2      	lsrs	r2, r6, #2
 80061f6:	e9d4 ce02 	ldrd	ip, lr, [r4, #8]
      }

      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 80061fa:	f1bc 0f00 	cmp.w	ip, #0
 80061fe:	d00a      	beq.n	8006216 <osThreadNew+0x6a>
 8006200:	f1be 0f5f 	cmp.w	lr, #95	; 0x5f
 8006204:	d902      	bls.n	800620c <osThreadNew+0x60>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 8006206:	6924      	ldr	r4, [r4, #16]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 8006208:	b104      	cbz	r4, 800620c <osThreadNew+0x60>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 800620a:	b9ae      	cbnz	r6, 8006238 <osThreadNew+0x8c>
        }
      }
    }
  }

  return ((osThreadId_t)hTask);
 800620c:	9805      	ldr	r0, [sp, #20]
}
 800620e:	b007      	add	sp, #28
 8006210:	bdf0      	pop	{r4, r5, r6, r7, pc}
    stack = configMINIMAL_STACK_SIZE;
 8006212:	2280      	movs	r2, #128	; 0x80
 8006214:	e7ef      	b.n	80061f6 <osThreadNew+0x4a>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) && (attr->stack_mem == NULL)) {
 8006216:	f1be 0f00 	cmp.w	lr, #0
 800621a:	d1f7      	bne.n	800620c <osThreadNew+0x60>
      if (mem == 0) {
 800621c:	6924      	ldr	r4, [r4, #16]
 800621e:	2c00      	cmp	r4, #0
 8006220:	d1f4      	bne.n	800620c <osThreadNew+0x60>
        if (xTaskCreate ((TaskFunction_t)func, name, (uint16_t)stack, argument, prio, &hTask) != pdPASS) {
 8006222:	ac05      	add	r4, sp, #20
 8006224:	e9cd 7400 	strd	r7, r4, [sp]
 8006228:	b292      	uxth	r2, r2
 800622a:	f001 fb3b 	bl	80078a4 <xTaskCreate>
 800622e:	2801      	cmp	r0, #1
          hTask = NULL;
 8006230:	bf1c      	itt	ne
 8006232:	2300      	movne	r3, #0
 8006234:	9305      	strne	r3, [sp, #20]
 8006236:	e7e9      	b.n	800620c <osThreadNew+0x60>
      hTask = xTaskCreateStatic ((TaskFunction_t)func, name, stack, argument, prio, (StackType_t  *)attr->stack_mem,
 8006238:	e9cd 4c01 	strd	r4, ip, [sp, #4]
 800623c:	9500      	str	r5, [sp, #0]
 800623e:	f001 faf9 	bl	8007834 <xTaskCreateStatic>
 8006242:	9005      	str	r0, [sp, #20]
 8006244:	e7e2      	b.n	800620c <osThreadNew+0x60>
    prio  = (UBaseType_t)osPriorityNormal;
 8006246:	2718      	movs	r7, #24
    stack = configMINIMAL_STACK_SIZE;
 8006248:	2280      	movs	r2, #128	; 0x80
    name = NULL;
 800624a:	4621      	mov	r1, r4
 800624c:	e7e9      	b.n	8006222 <osThreadNew+0x76>
        return (NULL);
 800624e:	2000      	movs	r0, #0
 8006250:	e7dd      	b.n	800620e <osThreadNew+0x62>
 8006252:	bf00      	nop
 8006254:	200016d4 	.word	0x200016d4

08006258 <osSemaphoreNew>:
  return (stat);
}

/*---------------------------------------------------------------------------*/

osSemaphoreId_t osSemaphoreNew (uint32_t max_count, uint32_t initial_count, const osSemaphoreAttr_t *attr) {
 8006258:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800625a:	460e      	mov	r6, r1
 800625c:	4615      	mov	r5, r2
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 800625e:	f3ef 8305 	mrs	r3, IPSR
  const char *name;
  #endif

  hSemaphore = NULL;

  if (!IS_IRQ() && (max_count > 0U) && (initial_count <= max_count)) {
 8006262:	b11b      	cbz	r3, 800626c <osSemaphoreNew+0x14>
        }

        if ((hSemaphore != NULL) && (initial_count != 0U)) {
          if (xSemaphoreGive (hSemaphore) != pdPASS) {
            vSemaphoreDelete (hSemaphore);
            hSemaphore = NULL;
 8006264:	2400      	movs	r4, #0
      #endif
    }
  }

  return ((osSemaphoreId_t)hSemaphore);
}
 8006266:	4620      	mov	r0, r4
 8006268:	b002      	add	sp, #8
 800626a:	bd70      	pop	{r4, r5, r6, pc}
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 800626c:	f3ef 8310 	mrs	r3, PRIMASK
  if (!IS_IRQ() && (max_count > 0U) && (initial_count <= max_count)) {
 8006270:	b913      	cbnz	r3, 8006278 <osSemaphoreNew+0x20>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 8006272:	f3ef 8311 	mrs	r3, BASEPRI
 8006276:	b11b      	cbz	r3, 8006280 <osSemaphoreNew+0x28>
 8006278:	4b21      	ldr	r3, [pc, #132]	; (8006300 <osSemaphoreNew+0xa8>)
 800627a:	681b      	ldr	r3, [r3, #0]
 800627c:	2b02      	cmp	r3, #2
 800627e:	d0f1      	beq.n	8006264 <osSemaphoreNew+0xc>
 8006280:	2800      	cmp	r0, #0
 8006282:	d0ef      	beq.n	8006264 <osSemaphoreNew+0xc>
 8006284:	42b0      	cmp	r0, r6
 8006286:	d3ed      	bcc.n	8006264 <osSemaphoreNew+0xc>
    if (attr != NULL) {
 8006288:	b1ed      	cbz	r5, 80062c6 <osSemaphoreNew+0x6e>
 800628a:	e9d5 3202 	ldrd	r3, r2, [r5, #8]
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticSemaphore_t))) {
 800628e:	b1c3      	cbz	r3, 80062c2 <osSemaphoreNew+0x6a>
 8006290:	2a4f      	cmp	r2, #79	; 0x4f
 8006292:	d9e7      	bls.n	8006264 <osSemaphoreNew+0xc>
      if (max_count == 1U) {
 8006294:	2801      	cmp	r0, #1
 8006296:	d126      	bne.n	80062e6 <osSemaphoreNew+0x8e>
          hSemaphore = xSemaphoreCreateBinaryStatic ((StaticSemaphore_t *)attr->cb_mem);
 8006298:	2203      	movs	r2, #3
 800629a:	9200      	str	r2, [sp, #0]
 800629c:	2200      	movs	r2, #0
 800629e:	4611      	mov	r1, r2
 80062a0:	f000 fd30 	bl	8006d04 <xQueueGenericCreateStatic>
          hSemaphore = xSemaphoreCreateBinary();
 80062a4:	4604      	mov	r4, r0
        if ((hSemaphore != NULL) && (initial_count != 0U)) {
 80062a6:	2800      	cmp	r0, #0
 80062a8:	d0dc      	beq.n	8006264 <osSemaphoreNew+0xc>
 80062aa:	b1ce      	cbz	r6, 80062e0 <osSemaphoreNew+0x88>
          if (xSemaphoreGive (hSemaphore) != pdPASS) {
 80062ac:	2300      	movs	r3, #0
 80062ae:	461a      	mov	r2, r3
 80062b0:	4619      	mov	r1, r3
 80062b2:	f000 fddd 	bl	8006e70 <xQueueGenericSend>
 80062b6:	2801      	cmp	r0, #1
 80062b8:	d012      	beq.n	80062e0 <osSemaphoreNew+0x88>
            vSemaphoreDelete (hSemaphore);
 80062ba:	4620      	mov	r0, r4
 80062bc:	f001 f918 	bl	80074f0 <vQueueDelete>
 80062c0:	e7d0      	b.n	8006264 <osSemaphoreNew+0xc>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U)) {
 80062c2:	2a00      	cmp	r2, #0
 80062c4:	d1ce      	bne.n	8006264 <osSemaphoreNew+0xc>
      if (max_count == 1U) {
 80062c6:	2801      	cmp	r0, #1
 80062c8:	d104      	bne.n	80062d4 <osSemaphoreNew+0x7c>
          hSemaphore = xSemaphoreCreateBinary();
 80062ca:	2203      	movs	r2, #3
 80062cc:	2100      	movs	r1, #0
 80062ce:	f000 fd67 	bl	8006da0 <xQueueGenericCreate>
 80062d2:	e7e7      	b.n	80062a4 <osSemaphoreNew+0x4c>
          hSemaphore = xSemaphoreCreateCounting (max_count, initial_count);
 80062d4:	4631      	mov	r1, r6
 80062d6:	f000 fdac 	bl	8006e32 <xQueueCreateCountingSemaphore>
      if (hSemaphore != NULL) {
 80062da:	4604      	mov	r4, r0
 80062dc:	2800      	cmp	r0, #0
 80062de:	d0c1      	beq.n	8006264 <osSemaphoreNew+0xc>
        if (attr != NULL) {
 80062e0:	b945      	cbnz	r5, 80062f4 <osSemaphoreNew+0x9c>
          name = NULL;
 80062e2:	4629      	mov	r1, r5
 80062e4:	e007      	b.n	80062f6 <osSemaphoreNew+0x9e>
          hSemaphore = xSemaphoreCreateCountingStatic (max_count, initial_count, (StaticSemaphore_t *)attr->cb_mem);
 80062e6:	461a      	mov	r2, r3
 80062e8:	4631      	mov	r1, r6
 80062ea:	f000 fd80 	bl	8006dee <xQueueCreateCountingSemaphoreStatic>
      if (hSemaphore != NULL) {
 80062ee:	4604      	mov	r4, r0
 80062f0:	2800      	cmp	r0, #0
 80062f2:	d0b7      	beq.n	8006264 <osSemaphoreNew+0xc>
          name = attr->name;
 80062f4:	6829      	ldr	r1, [r5, #0]
        vQueueAddToRegistry (hSemaphore, name);
 80062f6:	4620      	mov	r0, r4
 80062f8:	f001 f8d4 	bl	80074a4 <vQueueAddToRegistry>
  return ((osSemaphoreId_t)hSemaphore);
 80062fc:	e7b3      	b.n	8006266 <osSemaphoreNew+0xe>
 80062fe:	bf00      	nop
 8006300:	200016d4 	.word	0x200016d4

08006304 <osSemaphoreAcquire>:

osStatus_t osSemaphoreAcquire (osSemaphoreId_t semaphore_id, uint32_t timeout) {
 8006304:	b513      	push	{r0, r1, r4, lr}
 8006306:	460c      	mov	r4, r1
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 8006308:	b918      	cbnz	r0, 8006312 <osSemaphoreAcquire+0xe>
    stat = osErrorParameter;
 800630a:	f06f 0003 	mvn.w	r0, #3
      }
    }
  }

  return (stat);
}
 800630e:	b002      	add	sp, #8
 8006310:	bd10      	pop	{r4, pc}
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 8006312:	f3ef 8305 	mrs	r3, IPSR
  else if (IS_IRQ()) {
 8006316:	b16b      	cbz	r3, 8006334 <osSemaphoreAcquire+0x30>
    if (timeout != 0U) {
 8006318:	2c00      	cmp	r4, #0
 800631a:	d1f6      	bne.n	800630a <osSemaphoreAcquire+0x6>
      yield = pdFALSE;
 800631c:	aa02      	add	r2, sp, #8
      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 800631e:	4621      	mov	r1, r4
      yield = pdFALSE;
 8006320:	f842 4d04 	str.w	r4, [r2, #-4]!
      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 8006324:	f001 f86e 	bl	8007404 <xQueueReceiveFromISR>
 8006328:	2801      	cmp	r0, #1
 800632a:	d113      	bne.n	8006354 <osSemaphoreAcquire+0x50>
        portYIELD_FROM_ISR (yield);
 800632c:	9b01      	ldr	r3, [sp, #4]
 800632e:	b9a3      	cbnz	r3, 800635a <osSemaphoreAcquire+0x56>
  stat = osOK;
 8006330:	2000      	movs	r0, #0
 8006332:	e7ec      	b.n	800630e <osSemaphoreAcquire+0xa>
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8006334:	f3ef 8310 	mrs	r3, PRIMASK
  else if (IS_IRQ()) {
 8006338:	b913      	cbnz	r3, 8006340 <osSemaphoreAcquire+0x3c>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 800633a:	f3ef 8311 	mrs	r3, BASEPRI
 800633e:	b11b      	cbz	r3, 8006348 <osSemaphoreAcquire+0x44>
 8006340:	4b0c      	ldr	r3, [pc, #48]	; (8006374 <osSemaphoreAcquire+0x70>)
 8006342:	681b      	ldr	r3, [r3, #0]
 8006344:	2b02      	cmp	r3, #2
 8006346:	d0e7      	beq.n	8006318 <osSemaphoreAcquire+0x14>
    if (xSemaphoreTake (hSemaphore, (TickType_t)timeout) != pdPASS) {
 8006348:	4621      	mov	r1, r4
 800634a:	f000 ff99 	bl	8007280 <xQueueSemaphoreTake>
 800634e:	2801      	cmp	r0, #1
 8006350:	d0ee      	beq.n	8006330 <osSemaphoreAcquire+0x2c>
      if (timeout != 0U) {
 8006352:	b95c      	cbnz	r4, 800636c <osSemaphoreAcquire+0x68>
        stat = osErrorResource;
 8006354:	f06f 0002 	mvn.w	r0, #2
 8006358:	e7d9      	b.n	800630e <osSemaphoreAcquire+0xa>
        portYIELD_FROM_ISR (yield);
 800635a:	4b07      	ldr	r3, [pc, #28]	; (8006378 <osSemaphoreAcquire+0x74>)
 800635c:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8006360:	601a      	str	r2, [r3, #0]
 8006362:	f3bf 8f4f 	dsb	sy
 8006366:	f3bf 8f6f 	isb	sy
 800636a:	e7e1      	b.n	8006330 <osSemaphoreAcquire+0x2c>
        stat = osErrorTimeout;
 800636c:	f06f 0001 	mvn.w	r0, #1
  return (stat);
 8006370:	e7cd      	b.n	800630e <osSemaphoreAcquire+0xa>
 8006372:	bf00      	nop
 8006374:	200016d4 	.word	0x200016d4
 8006378:	e000ed04 	.word	0xe000ed04

0800637c <osSemaphoreRelease>:

osStatus_t osSemaphoreRelease (osSemaphoreId_t semaphore_id) {
 800637c:	b513      	push	{r0, r1, r4, lr}
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 800637e:	b368      	cbz	r0, 80063dc <osSemaphoreRelease+0x60>
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 8006380:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
 8006384:	b153      	cbz	r3, 800639c <osSemaphoreRelease+0x20>
    yield = pdFALSE;
 8006386:	a902      	add	r1, sp, #8
 8006388:	2400      	movs	r4, #0
 800638a:	f841 4d04 	str.w	r4, [r1, #-4]!

    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 800638e:	f000 fe82 	bl	8007096 <xQueueGiveFromISR>
 8006392:	2801      	cmp	r0, #1
 8006394:	d014      	beq.n	80063c0 <osSemaphoreRelease+0x44>
      portYIELD_FROM_ISR (yield);
    }
  }
  else {
    if (xSemaphoreGive (hSemaphore) != pdPASS) {
      stat = osErrorResource;
 8006396:	f06f 0002 	mvn.w	r0, #2
 800639a:	e014      	b.n	80063c6 <osSemaphoreRelease+0x4a>
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 800639c:	f3ef 8310 	mrs	r3, PRIMASK
  else if (IS_IRQ()) {
 80063a0:	b913      	cbnz	r3, 80063a8 <osSemaphoreRelease+0x2c>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 80063a2:	f3ef 8311 	mrs	r3, BASEPRI
 80063a6:	b11b      	cbz	r3, 80063b0 <osSemaphoreRelease+0x34>
 80063a8:	4b0e      	ldr	r3, [pc, #56]	; (80063e4 <osSemaphoreRelease+0x68>)
 80063aa:	681b      	ldr	r3, [r3, #0]
 80063ac:	2b02      	cmp	r3, #2
 80063ae:	d0ea      	beq.n	8006386 <osSemaphoreRelease+0xa>
    if (xSemaphoreGive (hSemaphore) != pdPASS) {
 80063b0:	2300      	movs	r3, #0
 80063b2:	461a      	mov	r2, r3
 80063b4:	4619      	mov	r1, r3
 80063b6:	f000 fd5b 	bl	8006e70 <xQueueGenericSend>
 80063ba:	2801      	cmp	r0, #1
 80063bc:	d002      	beq.n	80063c4 <osSemaphoreRelease+0x48>
 80063be:	e7ea      	b.n	8006396 <osSemaphoreRelease+0x1a>
      portYIELD_FROM_ISR (yield);
 80063c0:	9b01      	ldr	r3, [sp, #4]
 80063c2:	b913      	cbnz	r3, 80063ca <osSemaphoreRelease+0x4e>
  stat = osOK;
 80063c4:	2000      	movs	r0, #0
    }
  }

  return (stat);
}
 80063c6:	b002      	add	sp, #8
 80063c8:	bd10      	pop	{r4, pc}
      portYIELD_FROM_ISR (yield);
 80063ca:	4b07      	ldr	r3, [pc, #28]	; (80063e8 <osSemaphoreRelease+0x6c>)
 80063cc:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 80063d0:	601a      	str	r2, [r3, #0]
 80063d2:	f3bf 8f4f 	dsb	sy
 80063d6:	f3bf 8f6f 	isb	sy
 80063da:	e7f3      	b.n	80063c4 <osSemaphoreRelease+0x48>
    stat = osErrorParameter;
 80063dc:	f06f 0003 	mvn.w	r0, #3
  return (stat);
 80063e0:	e7f1      	b.n	80063c6 <osSemaphoreRelease+0x4a>
 80063e2:	bf00      	nop
 80063e4:	200016d4 	.word	0x200016d4
 80063e8:	e000ed04 	.word	0xe000ed04

080063ec <osMessageQueueNew>:
  return (stat);
}

/*---------------------------------------------------------------------------*/

osMessageQueueId_t osMessageQueueNew (uint32_t msg_count, uint32_t msg_size, const osMessageQueueAttr_t *attr) {
 80063ec:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80063ee:	4614      	mov	r4, r2
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 80063f0:	f3ef 8305 	mrs	r3, IPSR
  const char *name;
  #endif

  hQueue = NULL;

  if (!IS_IRQ() && (msg_count > 0U) && (msg_size > 0U)) {
 80063f4:	b11b      	cbz	r3, 80063fe <osMessageQueueNew+0x12>
  hQueue = NULL;
 80063f6:	2500      	movs	r5, #0
    #endif

  }

  return ((osMessageQueueId_t)hQueue);
}
 80063f8:	4628      	mov	r0, r5
 80063fa:	b002      	add	sp, #8
 80063fc:	bd70      	pop	{r4, r5, r6, pc}
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 80063fe:	f3ef 8310 	mrs	r3, PRIMASK
  if (!IS_IRQ() && (msg_count > 0U) && (msg_size > 0U)) {
 8006402:	b913      	cbnz	r3, 800640a <osMessageQueueNew+0x1e>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 8006404:	f3ef 8311 	mrs	r3, BASEPRI
 8006408:	b11b      	cbz	r3, 8006412 <osMessageQueueNew+0x26>
 800640a:	4b1a      	ldr	r3, [pc, #104]	; (8006474 <osMessageQueueNew+0x88>)
 800640c:	681b      	ldr	r3, [r3, #0]
 800640e:	2b02      	cmp	r3, #2
 8006410:	d0f1      	beq.n	80063f6 <osMessageQueueNew+0xa>
 8006412:	2800      	cmp	r0, #0
 8006414:	d0ef      	beq.n	80063f6 <osMessageQueueNew+0xa>
 8006416:	2900      	cmp	r1, #0
 8006418:	d0ed      	beq.n	80063f6 <osMessageQueueNew+0xa>
    if (attr != NULL) {
 800641a:	b304      	cbz	r4, 800645e <osMessageQueueNew+0x72>
 800641c:	e9d4 3202 	ldrd	r3, r2, [r4, #8]
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 8006420:	b1ab      	cbz	r3, 800644e <osMessageQueueNew+0x62>
 8006422:	2a4f      	cmp	r2, #79	; 0x4f
 8006424:	d9e7      	bls.n	80063f6 <osMessageQueueNew+0xa>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 8006426:	6922      	ldr	r2, [r4, #16]
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 8006428:	2a00      	cmp	r2, #0
 800642a:	d0e4      	beq.n	80063f6 <osMessageQueueNew+0xa>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 800642c:	6966      	ldr	r6, [r4, #20]
 800642e:	fb01 f500 	mul.w	r5, r1, r0
 8006432:	42ae      	cmp	r6, r5
 8006434:	d3df      	bcc.n	80063f6 <osMessageQueueNew+0xa>
      hQueue = xQueueCreateStatic (msg_count, msg_size, attr->mq_mem, attr->cb_mem);
 8006436:	2500      	movs	r5, #0
 8006438:	9500      	str	r5, [sp, #0]
 800643a:	f000 fc63 	bl	8006d04 <xQueueGenericCreateStatic>
    if (hQueue != NULL) {
 800643e:	4605      	mov	r5, r0
 8006440:	2800      	cmp	r0, #0
 8006442:	d0d8      	beq.n	80063f6 <osMessageQueueNew+0xa>
        name = attr->name;
 8006444:	6821      	ldr	r1, [r4, #0]
      vQueueAddToRegistry (hQueue, name);
 8006446:	4628      	mov	r0, r5
 8006448:	f001 f82c 	bl	80074a4 <vQueueAddToRegistry>
  return ((osMessageQueueId_t)hQueue);
 800644c:	e7d4      	b.n	80063f8 <osMessageQueueNew+0xc>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) &&
 800644e:	2a00      	cmp	r2, #0
 8006450:	d1d1      	bne.n	80063f6 <osMessageQueueNew+0xa>
 8006452:	6923      	ldr	r3, [r4, #16]
 8006454:	2b00      	cmp	r3, #0
 8006456:	d1ce      	bne.n	80063f6 <osMessageQueueNew+0xa>
            (attr->mq_mem == NULL) && (attr->mq_size == 0U)) {
 8006458:	6963      	ldr	r3, [r4, #20]
 800645a:	2b00      	cmp	r3, #0
 800645c:	d1cb      	bne.n	80063f6 <osMessageQueueNew+0xa>
        hQueue = xQueueCreate (msg_count, msg_size);
 800645e:	2200      	movs	r2, #0
 8006460:	f000 fc9e 	bl	8006da0 <xQueueGenericCreate>
    if (hQueue != NULL) {
 8006464:	4605      	mov	r5, r0
 8006466:	2800      	cmp	r0, #0
 8006468:	d0c5      	beq.n	80063f6 <osMessageQueueNew+0xa>
      if (attr != NULL) {
 800646a:	2c00      	cmp	r4, #0
 800646c:	d1ea      	bne.n	8006444 <osMessageQueueNew+0x58>
        name = NULL;
 800646e:	4621      	mov	r1, r4
 8006470:	e7e9      	b.n	8006446 <osMessageQueueNew+0x5a>
 8006472:	bf00      	nop
 8006474:	200016d4 	.word	0x200016d4

08006478 <osMessageQueuePut>:

osStatus_t osMessageQueuePut (osMessageQueueId_t mq_id, const void *msg_ptr, uint8_t msg_prio, uint32_t timeout) {
 8006478:	b513      	push	{r0, r1, r4, lr}
 800647a:	461c      	mov	r4, r3
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 800647c:	f3ef 8305 	mrs	r3, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 8006480:	b123      	cbz	r3, 800648c <osMessageQueuePut+0x14>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 8006482:	b9d8      	cbnz	r0, 80064bc <osMessageQueuePut+0x44>
      stat = osErrorParameter;
 8006484:	f06f 0003 	mvn.w	r0, #3
      }
    }
  }

  return (stat);
}
 8006488:	b002      	add	sp, #8
 800648a:	bd10      	pop	{r4, pc}
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 800648c:	f3ef 8310 	mrs	r3, PRIMASK
  if (IS_IRQ()) {
 8006490:	b913      	cbnz	r3, 8006498 <osMessageQueuePut+0x20>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 8006492:	f3ef 8311 	mrs	r3, BASEPRI
 8006496:	b11b      	cbz	r3, 80064a0 <osMessageQueuePut+0x28>
 8006498:	4b16      	ldr	r3, [pc, #88]	; (80064f4 <osMessageQueuePut+0x7c>)
 800649a:	681b      	ldr	r3, [r3, #0]
 800649c:	2b02      	cmp	r3, #2
 800649e:	d0f0      	beq.n	8006482 <osMessageQueuePut+0xa>
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 80064a0:	2800      	cmp	r0, #0
 80064a2:	d0ef      	beq.n	8006484 <osMessageQueuePut+0xc>
 80064a4:	2900      	cmp	r1, #0
 80064a6:	d0ed      	beq.n	8006484 <osMessageQueuePut+0xc>
      if (xQueueSendToBack (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 80064a8:	2300      	movs	r3, #0
 80064aa:	4622      	mov	r2, r4
 80064ac:	f000 fce0 	bl	8006e70 <xQueueGenericSend>
 80064b0:	2801      	cmp	r0, #1
 80064b2:	d011      	beq.n	80064d8 <osMessageQueuePut+0x60>
        if (timeout != 0U) {
 80064b4:	b9dc      	cbnz	r4, 80064ee <osMessageQueuePut+0x76>
          stat = osErrorResource;
 80064b6:	f06f 0002 	mvn.w	r0, #2
 80064ba:	e7e5      	b.n	8006488 <osMessageQueuePut+0x10>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 80064bc:	2900      	cmp	r1, #0
 80064be:	d0e1      	beq.n	8006484 <osMessageQueuePut+0xc>
 80064c0:	2c00      	cmp	r4, #0
 80064c2:	d1df      	bne.n	8006484 <osMessageQueuePut+0xc>
      yield = pdFALSE;
 80064c4:	aa02      	add	r2, sp, #8
      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 80064c6:	4623      	mov	r3, r4
      yield = pdFALSE;
 80064c8:	f842 4d04 	str.w	r4, [r2, #-4]!
      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 80064cc:	f000 fd82 	bl	8006fd4 <xQueueGenericSendFromISR>
 80064d0:	2801      	cmp	r0, #1
 80064d2:	d1f0      	bne.n	80064b6 <osMessageQueuePut+0x3e>
        portYIELD_FROM_ISR (yield);
 80064d4:	9b01      	ldr	r3, [sp, #4]
 80064d6:	b90b      	cbnz	r3, 80064dc <osMessageQueuePut+0x64>
  stat = osOK;
 80064d8:	2000      	movs	r0, #0
 80064da:	e7d5      	b.n	8006488 <osMessageQueuePut+0x10>
        portYIELD_FROM_ISR (yield);
 80064dc:	4b06      	ldr	r3, [pc, #24]	; (80064f8 <osMessageQueuePut+0x80>)
 80064de:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 80064e2:	601a      	str	r2, [r3, #0]
 80064e4:	f3bf 8f4f 	dsb	sy
 80064e8:	f3bf 8f6f 	isb	sy
 80064ec:	e7f4      	b.n	80064d8 <osMessageQueuePut+0x60>
          stat = osErrorTimeout;
 80064ee:	f06f 0001 	mvn.w	r0, #1
  return (stat);
 80064f2:	e7c9      	b.n	8006488 <osMessageQueuePut+0x10>
 80064f4:	200016d4 	.word	0x200016d4
 80064f8:	e000ed04 	.word	0xe000ed04

080064fc <osMessageQueueGet>:

osStatus_t osMessageQueueGet (osMessageQueueId_t mq_id, void *msg_ptr, uint8_t *msg_prio, uint32_t timeout) {
 80064fc:	b513      	push	{r0, r1, r4, lr}
 80064fe:	461c      	mov	r4, r3
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 8006500:	f3ef 8305 	mrs	r3, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 8006504:	b123      	cbz	r3, 8006510 <osMessageQueueGet+0x14>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 8006506:	b9d0      	cbnz	r0, 800653e <osMessageQueueGet+0x42>
      stat = osErrorParameter;
 8006508:	f06f 0003 	mvn.w	r0, #3
      }
    }
  }

  return (stat);
}
 800650c:	b002      	add	sp, #8
 800650e:	bd10      	pop	{r4, pc}
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8006510:	f3ef 8310 	mrs	r3, PRIMASK
  if (IS_IRQ()) {
 8006514:	b913      	cbnz	r3, 800651c <osMessageQueueGet+0x20>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 8006516:	f3ef 8311 	mrs	r3, BASEPRI
 800651a:	b11b      	cbz	r3, 8006524 <osMessageQueueGet+0x28>
 800651c:	4b15      	ldr	r3, [pc, #84]	; (8006574 <osMessageQueueGet+0x78>)
 800651e:	681b      	ldr	r3, [r3, #0]
 8006520:	2b02      	cmp	r3, #2
 8006522:	d0f0      	beq.n	8006506 <osMessageQueueGet+0xa>
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 8006524:	2800      	cmp	r0, #0
 8006526:	d0ef      	beq.n	8006508 <osMessageQueueGet+0xc>
 8006528:	2900      	cmp	r1, #0
 800652a:	d0ed      	beq.n	8006508 <osMessageQueueGet+0xc>
      if (xQueueReceive (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 800652c:	4622      	mov	r2, r4
 800652e:	f000 fe07 	bl	8007140 <xQueueReceive>
 8006532:	2801      	cmp	r0, #1
 8006534:	d010      	beq.n	8006558 <osMessageQueueGet+0x5c>
        if (timeout != 0U) {
 8006536:	b9d4      	cbnz	r4, 800656e <osMessageQueueGet+0x72>
          stat = osErrorResource;
 8006538:	f06f 0002 	mvn.w	r0, #2
 800653c:	e7e6      	b.n	800650c <osMessageQueueGet+0x10>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 800653e:	2900      	cmp	r1, #0
 8006540:	d0e2      	beq.n	8006508 <osMessageQueueGet+0xc>
 8006542:	2c00      	cmp	r4, #0
 8006544:	d1e0      	bne.n	8006508 <osMessageQueueGet+0xc>
      yield = pdFALSE;
 8006546:	aa02      	add	r2, sp, #8
 8006548:	f842 4d04 	str.w	r4, [r2, #-4]!
      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 800654c:	f000 ff5a 	bl	8007404 <xQueueReceiveFromISR>
 8006550:	2801      	cmp	r0, #1
 8006552:	d1f1      	bne.n	8006538 <osMessageQueueGet+0x3c>
        portYIELD_FROM_ISR (yield);
 8006554:	9b01      	ldr	r3, [sp, #4]
 8006556:	b90b      	cbnz	r3, 800655c <osMessageQueueGet+0x60>
  stat = osOK;
 8006558:	2000      	movs	r0, #0
 800655a:	e7d7      	b.n	800650c <osMessageQueueGet+0x10>
        portYIELD_FROM_ISR (yield);
 800655c:	4b06      	ldr	r3, [pc, #24]	; (8006578 <osMessageQueueGet+0x7c>)
 800655e:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8006562:	601a      	str	r2, [r3, #0]
 8006564:	f3bf 8f4f 	dsb	sy
 8006568:	f3bf 8f6f 	isb	sy
 800656c:	e7f4      	b.n	8006558 <osMessageQueueGet+0x5c>
          stat = osErrorTimeout;
 800656e:	f06f 0001 	mvn.w	r0, #1
  return (stat);
 8006572:	e7cb      	b.n	800650c <osMessageQueueGet+0x10>
 8006574:	200016d4 	.word	0x200016d4
 8006578:	e000ed04 	.word	0xe000ed04

0800657c <vApplicationGetIdleTaskMemory>:
/*
  vApplicationGetIdleTaskMemory gets called when configSUPPORT_STATIC_ALLOCATION
  equals to 1 and is required for static memory allocation support.
*/
void vApplicationGetIdleTaskMemory (StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskStackBuffer, uint32_t *pulIdleTaskStackSize) {
  *ppxIdleTaskTCBBuffer   = &Idle_TCB;
 800657c:	4b03      	ldr	r3, [pc, #12]	; (800658c <vApplicationGetIdleTaskMemory+0x10>)
 800657e:	6003      	str	r3, [r0, #0]
  *ppxIdleTaskStackBuffer = &Idle_Stack[0];
 8006580:	4b03      	ldr	r3, [pc, #12]	; (8006590 <vApplicationGetIdleTaskMemory+0x14>)
 8006582:	600b      	str	r3, [r1, #0]
  *pulIdleTaskStackSize   = (uint32_t)configMINIMAL_STACK_SIZE;
 8006584:	2380      	movs	r3, #128	; 0x80
 8006586:	6013      	str	r3, [r2, #0]
}
 8006588:	4770      	bx	lr
 800658a:	bf00      	nop
 800658c:	20001674 	.word	0x20001674
 8006590:	20001474 	.word	0x20001474

08006594 <vApplicationGetTimerTaskMemory>:
/*
  vApplicationGetTimerTaskMemory gets called when configSUPPORT_STATIC_ALLOCATION
  equals to 1 and is required for static memory allocation support.
*/
void vApplicationGetTimerTaskMemory (StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **ppxTimerTaskStackBuffer, uint32_t *pulTimerTaskStackSize) {
  *ppxTimerTaskTCBBuffer   = &Timer_TCB;
 8006594:	4b03      	ldr	r3, [pc, #12]	; (80065a4 <vApplicationGetTimerTaskMemory+0x10>)
 8006596:	6003      	str	r3, [r0, #0]
  *ppxTimerTaskStackBuffer = &Timer_Stack[0];
 8006598:	4b03      	ldr	r3, [pc, #12]	; (80065a8 <vApplicationGetTimerTaskMemory+0x14>)
 800659a:	600b      	str	r3, [r1, #0]
  *pulTimerTaskStackSize   = (uint32_t)configTIMER_TASK_STACK_DEPTH;
 800659c:	f44f 7380 	mov.w	r3, #256	; 0x100
 80065a0:	6013      	str	r3, [r2, #0]
}
 80065a2:	4770      	bx	lr
 80065a4:	20001ad8 	.word	0x20001ad8
 80065a8:	200016d8 	.word	0x200016d8

080065ac <prvInsertBlockIntoFreeList>:
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
}
/*-----------------------------------------------------------*/

static void prvInsertBlockIntoFreeList( BlockLink_t *pxBlockToInsert )
{
 80065ac:	b510      	push	{r4, lr}
BlockLink_t *pxIterator;
uint8_t *puc;

	/* Iterate through the list until a block is found that has a higher address
	than the block being inserted. */
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 80065ae:	4b0f      	ldr	r3, [pc, #60]	; (80065ec <prvInsertBlockIntoFreeList+0x40>)
 80065b0:	681a      	ldr	r2, [r3, #0]
 80065b2:	4282      	cmp	r2, r0
 80065b4:	d318      	bcc.n	80065e8 <prvInsertBlockIntoFreeList+0x3c>
	}

	/* Do the block being inserted, and the block it is being inserted after
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxIterator;
	if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
 80065b6:	685c      	ldr	r4, [r3, #4]
 80065b8:	1919      	adds	r1, r3, r4
 80065ba:	4288      	cmp	r0, r1
	{
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 80065bc:	bf01      	itttt	eq
 80065be:	6841      	ldreq	r1, [r0, #4]
 80065c0:	4618      	moveq	r0, r3
 80065c2:	1909      	addeq	r1, r1, r4
 80065c4:	6059      	streq	r1, [r3, #4]
	}

	/* Do the block being inserted, and the block it is being inserted before
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxBlockToInsert;
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 80065c6:	6844      	ldr	r4, [r0, #4]
 80065c8:	1901      	adds	r1, r0, r4
 80065ca:	428a      	cmp	r2, r1
 80065cc:	d107      	bne.n	80065de <prvInsertBlockIntoFreeList+0x32>
	{
		if( pxIterator->pxNextFreeBlock != pxEnd )
 80065ce:	4908      	ldr	r1, [pc, #32]	; (80065f0 <prvInsertBlockIntoFreeList+0x44>)
 80065d0:	6809      	ldr	r1, [r1, #0]
 80065d2:	428a      	cmp	r2, r1
		{
			/* Form one big block from the two blocks. */
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 80065d4:	bf1f      	itttt	ne
 80065d6:	6851      	ldrne	r1, [r2, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 80065d8:	6812      	ldrne	r2, [r2, #0]
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 80065da:	1909      	addne	r1, r1, r4
 80065dc:	6041      	strne	r1, [r0, #4]

	/* If the block being inserted plugged a gab, so was merged with the block
	before and the block after, then it's pxNextFreeBlock pointer will have
	already been set, and should not be set here as that would make it point
	to itself. */
	if( pxIterator != pxBlockToInsert )
 80065de:	4298      	cmp	r0, r3
		pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock;
 80065e0:	6002      	str	r2, [r0, #0]
	{
		pxIterator->pxNextFreeBlock = pxBlockToInsert;
 80065e2:	bf18      	it	ne
 80065e4:	6018      	strne	r0, [r3, #0]
	}
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}
}
 80065e6:	bd10      	pop	{r4, pc}
 80065e8:	4613      	mov	r3, r2
 80065ea:	e7e1      	b.n	80065b0 <prvInsertBlockIntoFreeList+0x4>
 80065ec:	20011b48 	.word	0x20011b48
 80065f0:	20001b38 	.word	0x20001b38

080065f4 <pvPortMalloc>:
{
 80065f4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80065f8:	4604      	mov	r4, r0
	vTaskSuspendAll();
 80065fa:	f001 f9c5 	bl	8007988 <vTaskSuspendAll>
		if( pxEnd == NULL )
 80065fe:	493d      	ldr	r1, [pc, #244]	; (80066f4 <pvPortMalloc+0x100>)
 8006600:	4d3d      	ldr	r5, [pc, #244]	; (80066f8 <pvPortMalloc+0x104>)
 8006602:	680b      	ldr	r3, [r1, #0]
 8006604:	b9fb      	cbnz	r3, 8006646 <pvPortMalloc+0x52>
	uxAddress = ( size_t ) ucHeap;
 8006606:	4a3d      	ldr	r2, [pc, #244]	; (80066fc <pvPortMalloc+0x108>)
	if( ( uxAddress & portBYTE_ALIGNMENT_MASK ) != 0 )
 8006608:	0756      	lsls	r6, r2, #29
 800660a:	f502 3380 	add.w	r3, r2, #65536	; 0x10000
		uxAddress += ( portBYTE_ALIGNMENT - 1 );
 800660e:	bf1d      	ittte	ne
 8006610:	3207      	addne	r2, #7
		uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 8006612:	f022 0207 	bicne.w	r2, r2, #7
		xTotalHeapSize -= uxAddress - ( size_t ) ucHeap;
 8006616:	1a9b      	subne	r3, r3, r2
size_t xTotalHeapSize = configTOTAL_HEAP_SIZE;
 8006618:	f44f 3380 	moveq.w	r3, #65536	; 0x10000
	uxAddress = ( ( size_t ) pucAlignedHeap ) + xTotalHeapSize;
 800661c:	4413      	add	r3, r2
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 800661e:	4e38      	ldr	r6, [pc, #224]	; (8006700 <pvPortMalloc+0x10c>)
	uxAddress -= xHeapStructSize;
 8006620:	3b08      	subs	r3, #8
	uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 8006622:	f023 0307 	bic.w	r3, r3, #7
	xStart.xBlockSize = ( size_t ) 0;
 8006626:	2000      	movs	r0, #0
 8006628:	6070      	str	r0, [r6, #4]
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 800662a:	6032      	str	r2, [r6, #0]
	pxEnd->pxNextFreeBlock = NULL;
 800662c:	e9c3 0000 	strd	r0, r0, [r3]
	pxFirstFreeBlock->xBlockSize = uxAddress - ( size_t ) pxFirstFreeBlock;
 8006630:	1a98      	subs	r0, r3, r2
	pxEnd = ( void * ) uxAddress;
 8006632:	600b      	str	r3, [r1, #0]
	pxFirstFreeBlock->pxNextFreeBlock = pxEnd;
 8006634:	e9c2 3000 	strd	r3, r0, [r2]
	xMinimumEverFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 8006638:	4b32      	ldr	r3, [pc, #200]	; (8006704 <pvPortMalloc+0x110>)
 800663a:	6018      	str	r0, [r3, #0]
	xFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 800663c:	4b32      	ldr	r3, [pc, #200]	; (8006708 <pvPortMalloc+0x114>)
 800663e:	6018      	str	r0, [r3, #0]
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
 8006640:	f04f 4300 	mov.w	r3, #2147483648	; 0x80000000
 8006644:	602b      	str	r3, [r5, #0]
		if( ( xWantedSize & xBlockAllocatedBit ) == 0 )
 8006646:	682f      	ldr	r7, [r5, #0]
 8006648:	4227      	tst	r7, r4
 800664a:	d14e      	bne.n	80066ea <pvPortMalloc+0xf6>
			if( xWantedSize > 0 )
 800664c:	2c00      	cmp	r4, #0
 800664e:	d03f      	beq.n	80066d0 <pvPortMalloc+0xdc>
				xWantedSize += xHeapStructSize;
 8006650:	f104 0308 	add.w	r3, r4, #8
				if( ( xWantedSize & portBYTE_ALIGNMENT_MASK ) != 0x00 )
 8006654:	0758      	lsls	r0, r3, #29
					xWantedSize += ( portBYTE_ALIGNMENT - ( xWantedSize & portBYTE_ALIGNMENT_MASK ) );
 8006656:	bf1c      	itt	ne
 8006658:	f023 0307 	bicne.w	r3, r3, #7
 800665c:	3308      	addne	r3, #8
			if( ( xWantedSize > 0 ) && ( xWantedSize <= xFreeBytesRemaining ) )
 800665e:	2b00      	cmp	r3, #0
 8006660:	d043      	beq.n	80066ea <pvPortMalloc+0xf6>
 8006662:	4a29      	ldr	r2, [pc, #164]	; (8006708 <pvPortMalloc+0x114>)
 8006664:	6816      	ldr	r6, [r2, #0]
 8006666:	429e      	cmp	r6, r3
 8006668:	4690      	mov	r8, r2
 800666a:	d33e      	bcc.n	80066ea <pvPortMalloc+0xf6>
				pxBlock = xStart.pxNextFreeBlock;
 800666c:	4a24      	ldr	r2, [pc, #144]	; (8006700 <pvPortMalloc+0x10c>)
 800666e:	6815      	ldr	r5, [r2, #0]
				while( ( pxBlock->xBlockSize < xWantedSize ) && ( pxBlock->pxNextFreeBlock != NULL ) )
 8006670:	6868      	ldr	r0, [r5, #4]
 8006672:	4298      	cmp	r0, r3
 8006674:	d201      	bcs.n	800667a <pvPortMalloc+0x86>
 8006676:	682c      	ldr	r4, [r5, #0]
 8006678:	b9a4      	cbnz	r4, 80066a4 <pvPortMalloc+0xb0>
				if( pxBlock != pxEnd )
 800667a:	6809      	ldr	r1, [r1, #0]
 800667c:	42a9      	cmp	r1, r5
 800667e:	d034      	beq.n	80066ea <pvPortMalloc+0xf6>
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
 8006680:	6829      	ldr	r1, [r5, #0]
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
 8006682:	6814      	ldr	r4, [r2, #0]
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
 8006684:	6011      	str	r1, [r2, #0]
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
 8006686:	1ac2      	subs	r2, r0, r3
 8006688:	2a10      	cmp	r2, #16
 800668a:	d912      	bls.n	80066b2 <pvPortMalloc+0xbe>
						pxNewBlockLink = ( void * ) ( ( ( uint8_t * ) pxBlock ) + xWantedSize );
 800668c:	18e8      	adds	r0, r5, r3
						configASSERT( ( ( ( size_t ) pxNewBlockLink ) & portBYTE_ALIGNMENT_MASK ) == 0 );
 800668e:	0741      	lsls	r1, r0, #29
 8006690:	d00b      	beq.n	80066aa <pvPortMalloc+0xb6>

portFORCE_INLINE static void vPortRaiseBASEPRI( void )
{
uint32_t ulNewBASEPRI;

	__asm volatile
 8006692:	f04f 0350 	mov.w	r3, #80	; 0x50
 8006696:	f383 8811 	msr	BASEPRI, r3
 800669a:	f3bf 8f6f 	isb	sy
 800669e:	f3bf 8f4f 	dsb	sy
 80066a2:	e7fe      	b.n	80066a2 <pvPortMalloc+0xae>
 80066a4:	462a      	mov	r2, r5
 80066a6:	4625      	mov	r5, r4
 80066a8:	e7e2      	b.n	8006670 <pvPortMalloc+0x7c>
						pxNewBlockLink->xBlockSize = pxBlock->xBlockSize - xWantedSize;
 80066aa:	6042      	str	r2, [r0, #4]
						pxBlock->xBlockSize = xWantedSize;
 80066ac:	606b      	str	r3, [r5, #4]
						prvInsertBlockIntoFreeList( pxNewBlockLink );
 80066ae:	f7ff ff7d 	bl	80065ac <prvInsertBlockIntoFreeList>
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 80066b2:	4914      	ldr	r1, [pc, #80]	; (8006704 <pvPortMalloc+0x110>)
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 80066b4:	686b      	ldr	r3, [r5, #4]
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 80066b6:	6808      	ldr	r0, [r1, #0]
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 80066b8:	1af6      	subs	r6, r6, r3
					pxBlock->xBlockSize |= xBlockAllocatedBit;
 80066ba:	431f      	orrs	r7, r3
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 80066bc:	4286      	cmp	r6, r0
					pxBlock->pxNextFreeBlock = NULL;
 80066be:	f04f 0300 	mov.w	r3, #0
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 80066c2:	f8c8 6000 	str.w	r6, [r8]
						xMinimumEverFreeBytesRemaining = xFreeBytesRemaining;
 80066c6:	bf38      	it	cc
 80066c8:	600e      	strcc	r6, [r1, #0]
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
 80066ca:	3408      	adds	r4, #8
					pxBlock->xBlockSize |= xBlockAllocatedBit;
 80066cc:	606f      	str	r7, [r5, #4]
					pxBlock->pxNextFreeBlock = NULL;
 80066ce:	602b      	str	r3, [r5, #0]
	( void ) xTaskResumeAll();
 80066d0:	f001 f9f8 	bl	8007ac4 <xTaskResumeAll>
	configASSERT( ( ( ( size_t ) pvReturn ) & ( size_t ) portBYTE_ALIGNMENT_MASK ) == 0 );
 80066d4:	0763      	lsls	r3, r4, #29
 80066d6:	d00a      	beq.n	80066ee <pvPortMalloc+0xfa>
 80066d8:	f04f 0350 	mov.w	r3, #80	; 0x50
 80066dc:	f383 8811 	msr	BASEPRI, r3
 80066e0:	f3bf 8f6f 	isb	sy
 80066e4:	f3bf 8f4f 	dsb	sy
 80066e8:	e7fe      	b.n	80066e8 <pvPortMalloc+0xf4>
void *pvReturn = NULL;
 80066ea:	2400      	movs	r4, #0
 80066ec:	e7f0      	b.n	80066d0 <pvPortMalloc+0xdc>
}
 80066ee:	4620      	mov	r0, r4
 80066f0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80066f4:	20001b38 	.word	0x20001b38
 80066f8:	20011b3c 	.word	0x20011b3c
 80066fc:	20001b3c 	.word	0x20001b3c
 8006700:	20011b48 	.word	0x20011b48
 8006704:	20011b44 	.word	0x20011b44
 8006708:	20011b40 	.word	0x20011b40

0800670c <vPortFree>:
{
 800670c:	b510      	push	{r4, lr}
	if( pv != NULL )
 800670e:	4604      	mov	r4, r0
 8006710:	b370      	cbz	r0, 8006770 <vPortFree+0x64>
		configASSERT( ( pxLink->xBlockSize & xBlockAllocatedBit ) != 0 );
 8006712:	4a18      	ldr	r2, [pc, #96]	; (8006774 <vPortFree+0x68>)
 8006714:	f850 3c04 	ldr.w	r3, [r0, #-4]
 8006718:	6812      	ldr	r2, [r2, #0]
 800671a:	4213      	tst	r3, r2
 800671c:	d108      	bne.n	8006730 <vPortFree+0x24>
 800671e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8006722:	f383 8811 	msr	BASEPRI, r3
 8006726:	f3bf 8f6f 	isb	sy
 800672a:	f3bf 8f4f 	dsb	sy
 800672e:	e7fe      	b.n	800672e <vPortFree+0x22>
		configASSERT( pxLink->pxNextFreeBlock == NULL );
 8006730:	f850 1c08 	ldr.w	r1, [r0, #-8]
 8006734:	b141      	cbz	r1, 8006748 <vPortFree+0x3c>
 8006736:	f04f 0350 	mov.w	r3, #80	; 0x50
 800673a:	f383 8811 	msr	BASEPRI, r3
 800673e:	f3bf 8f6f 	isb	sy
 8006742:	f3bf 8f4f 	dsb	sy
 8006746:	e7fe      	b.n	8006746 <vPortFree+0x3a>
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
 8006748:	ea23 0302 	bic.w	r3, r3, r2
 800674c:	f840 3c04 	str.w	r3, [r0, #-4]
				vTaskSuspendAll();
 8006750:	f001 f91a 	bl	8007988 <vTaskSuspendAll>
					xFreeBytesRemaining += pxLink->xBlockSize;
 8006754:	4a08      	ldr	r2, [pc, #32]	; (8006778 <vPortFree+0x6c>)
 8006756:	f854 3c04 	ldr.w	r3, [r4, #-4]
 800675a:	6811      	ldr	r1, [r2, #0]
					prvInsertBlockIntoFreeList( ( ( BlockLink_t * ) pxLink ) );
 800675c:	f1a4 0008 	sub.w	r0, r4, #8
					xFreeBytesRemaining += pxLink->xBlockSize;
 8006760:	440b      	add	r3, r1
 8006762:	6013      	str	r3, [r2, #0]
					prvInsertBlockIntoFreeList( ( ( BlockLink_t * ) pxLink ) );
 8006764:	f7ff ff22 	bl	80065ac <prvInsertBlockIntoFreeList>
}
 8006768:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
				( void ) xTaskResumeAll();
 800676c:	f001 b9aa 	b.w	8007ac4 <xTaskResumeAll>
}
 8006770:	bd10      	pop	{r4, pc}
 8006772:	bf00      	nop
 8006774:	20011b3c 	.word	0x20011b3c
 8006778:	20011b40 	.word	0x20011b40

0800677c <vListInitialise>:
void vListInitialise( List_t * const pxList )
{
	/* The list structure contains a list item which is used to mark the
	end of the list.  To initialise the list the list end is inserted
	as the only list entry. */
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 800677c:	f100 0308 	add.w	r3, r0, #8

	/* The list end value is the highest possible value in the list to
	ensure it remains at the end of the list. */
	pxList->xListEnd.xItemValue = portMAX_DELAY;
 8006780:	f04f 32ff 	mov.w	r2, #4294967295
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 8006784:	6043      	str	r3, [r0, #4]

	/* The list end next and previous pointers point to itself so we know
	when the list is empty. */
	pxList->xListEnd.pxNext = ( ListItem_t * ) &( pxList->xListEnd );	/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 8006786:	e9c0 2302 	strd	r2, r3, [r0, #8]
	pxList->xListEnd.pxPrevious = ( ListItem_t * ) &( pxList->xListEnd );/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 800678a:	6103      	str	r3, [r0, #16]

	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
 800678c:	2300      	movs	r3, #0
 800678e:	6003      	str	r3, [r0, #0]

	/* Write known values into the list if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_LIST_INTEGRITY_CHECK_1_VALUE( pxList );
	listSET_LIST_INTEGRITY_CHECK_2_VALUE( pxList );
}
 8006790:	4770      	bx	lr

08006792 <vListInitialiseItem>:
/*-----------------------------------------------------------*/

void vListInitialiseItem( ListItem_t * const pxItem )
{
	/* Make sure the list item is not recorded as being on a list. */
	pxItem->pxContainer = NULL;
 8006792:	2300      	movs	r3, #0
 8006794:	6103      	str	r3, [r0, #16]

	/* Write known values into the list item if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_FIRST_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
	listSET_SECOND_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
}
 8006796:	4770      	bx	lr

08006798 <vListInsertEnd>:
/*-----------------------------------------------------------*/

void vListInsertEnd( List_t * const pxList, ListItem_t * const pxNewListItem )
{
ListItem_t * const pxIndex = pxList->pxIndex;
 8006798:	6843      	ldr	r3, [r0, #4]
	listTEST_LIST_ITEM_INTEGRITY( pxNewListItem );

	/* Insert a new list item into pxList, but rather than sort the list,
	makes the new list item the last item to be removed by a call to
	listGET_OWNER_OF_NEXT_ENTRY(). */
	pxNewListItem->pxNext = pxIndex;
 800679a:	604b      	str	r3, [r1, #4]
	pxNewListItem->pxPrevious = pxIndex->pxPrevious;
 800679c:	689a      	ldr	r2, [r3, #8]
 800679e:	608a      	str	r2, [r1, #8]

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	pxIndex->pxPrevious->pxNext = pxNewListItem;
 80067a0:	689a      	ldr	r2, [r3, #8]
 80067a2:	6051      	str	r1, [r2, #4]
	pxIndex->pxPrevious = pxNewListItem;
 80067a4:	6099      	str	r1, [r3, #8]

	/* Remember which list the item is in. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 80067a6:	6803      	ldr	r3, [r0, #0]
	pxNewListItem->pxContainer = pxList;
 80067a8:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
 80067aa:	3301      	adds	r3, #1
 80067ac:	6003      	str	r3, [r0, #0]
}
 80067ae:	4770      	bx	lr

080067b0 <vListInsert>:
/*-----------------------------------------------------------*/

void vListInsert( List_t * const pxList, ListItem_t * const pxNewListItem )
{
ListItem_t *pxIterator;
const TickType_t xValueOfInsertion = pxNewListItem->xItemValue;
 80067b0:	680a      	ldr	r2, [r1, #0]
	new list item should be placed after it.  This ensures that TCBs which are
	stored in ready lists (all of which have the same xItemValue value) get a
	share of the CPU.  However, if the xItemValue is the same as the back marker
	the iteration loop below will not end.  Therefore the value is checked
	first, and the algorithm slightly modified if necessary. */
	if( xValueOfInsertion == portMAX_DELAY )
 80067b2:	1c53      	adds	r3, r2, #1
{
 80067b4:	b530      	push	{r4, r5, lr}
	if( xValueOfInsertion == portMAX_DELAY )
 80067b6:	d10a      	bne.n	80067ce <vListInsert+0x1e>
	{
		pxIterator = pxList->xListEnd.pxPrevious;
 80067b8:	6903      	ldr	r3, [r0, #16]
			/* There is nothing to do here, just iterating to the wanted
			insertion position. */
		}
	}

	pxNewListItem->pxNext = pxIterator->pxNext;
 80067ba:	685a      	ldr	r2, [r3, #4]
 80067bc:	604a      	str	r2, [r1, #4]
	pxNewListItem->pxNext->pxPrevious = pxNewListItem;
 80067be:	6091      	str	r1, [r2, #8]
	pxNewListItem->pxPrevious = pxIterator;
 80067c0:	608b      	str	r3, [r1, #8]
	pxIterator->pxNext = pxNewListItem;
 80067c2:	6059      	str	r1, [r3, #4]

	/* Remember which list the item is in.  This allows fast removal of the
	item later. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 80067c4:	6803      	ldr	r3, [r0, #0]
	pxNewListItem->pxContainer = pxList;
 80067c6:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
 80067c8:	3301      	adds	r3, #1
 80067ca:	6003      	str	r3, [r0, #0]
}
 80067cc:	bd30      	pop	{r4, r5, pc}
		for( pxIterator = ( ListItem_t * ) &( pxList->xListEnd ); pxIterator->pxNext->xItemValue <= xValueOfInsertion; pxIterator = pxIterator->pxNext ) /*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. *//*lint !e440 The iterator moves to a different value, not xValueOfInsertion. */
 80067ce:	f100 0308 	add.w	r3, r0, #8
 80067d2:	685c      	ldr	r4, [r3, #4]
 80067d4:	6825      	ldr	r5, [r4, #0]
 80067d6:	4295      	cmp	r5, r2
 80067d8:	d8ef      	bhi.n	80067ba <vListInsert+0xa>
 80067da:	4623      	mov	r3, r4
 80067dc:	e7f9      	b.n	80067d2 <vListInsert+0x22>

080067de <uxListRemove>:
{
/* The list item knows which list it is in.  Obtain the list from the list
item. */
List_t * const pxList = pxItemToRemove->pxContainer;

	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 80067de:	e9d0 1201 	ldrd	r1, r2, [r0, #4]
List_t * const pxList = pxItemToRemove->pxContainer;
 80067e2:	6903      	ldr	r3, [r0, #16]
	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 80067e4:	608a      	str	r2, [r1, #8]
	pxItemToRemove->pxPrevious->pxNext = pxItemToRemove->pxNext;
 80067e6:	6882      	ldr	r2, [r0, #8]
 80067e8:	6051      	str	r1, [r2, #4]

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	/* Make sure the index is left pointing to a valid item. */
	if( pxList->pxIndex == pxItemToRemove )
 80067ea:	6859      	ldr	r1, [r3, #4]
 80067ec:	4281      	cmp	r1, r0
	{
		pxList->pxIndex = pxItemToRemove->pxPrevious;
 80067ee:	bf08      	it	eq
 80067f0:	605a      	streq	r2, [r3, #4]
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}

	pxItemToRemove->pxContainer = NULL;
 80067f2:	2200      	movs	r2, #0
 80067f4:	6102      	str	r2, [r0, #16]
	( pxList->uxNumberOfItems )--;
 80067f6:	681a      	ldr	r2, [r3, #0]
 80067f8:	3a01      	subs	r2, #1
 80067fa:	601a      	str	r2, [r3, #0]

	return pxList->uxNumberOfItems;
 80067fc:	6818      	ldr	r0, [r3, #0]
}
 80067fe:	4770      	bx	lr

08006800 <prvTaskExitError>:
	return pxTopOfStack;
}
/*-----------------------------------------------------------*/

static void prvTaskExitError( void )
{
 8006800:	b082      	sub	sp, #8
volatile uint32_t ulDummy = 0;
 8006802:	2300      	movs	r3, #0
 8006804:	9301      	str	r3, [sp, #4]
	its caller as there is nothing to return to.  If a task wants to exit it
	should instead call vTaskDelete( NULL ).

	Artificially force an assert() to be triggered if configASSERT() is
	defined, then stop here so application writers can catch the error. */
	configASSERT( uxCriticalNesting == ~0UL );
 8006806:	4b0d      	ldr	r3, [pc, #52]	; (800683c <prvTaskExitError+0x3c>)
 8006808:	681b      	ldr	r3, [r3, #0]
 800680a:	3301      	adds	r3, #1
 800680c:	d008      	beq.n	8006820 <prvTaskExitError+0x20>
 800680e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8006812:	f383 8811 	msr	BASEPRI, r3
 8006816:	f3bf 8f6f 	isb	sy
 800681a:	f3bf 8f4f 	dsb	sy
 800681e:	e7fe      	b.n	800681e <prvTaskExitError+0x1e>
 8006820:	f04f 0350 	mov.w	r3, #80	; 0x50
 8006824:	f383 8811 	msr	BASEPRI, r3
 8006828:	f3bf 8f6f 	isb	sy
 800682c:	f3bf 8f4f 	dsb	sy
	portDISABLE_INTERRUPTS();
	while( ulDummy == 0 )
 8006830:	9b01      	ldr	r3, [sp, #4]
 8006832:	2b00      	cmp	r3, #0
 8006834:	d0fc      	beq.n	8006830 <prvTaskExitError+0x30>
		about code appearing after this function is called - making ulDummy
		volatile makes the compiler think the function could return and
		therefore not output an 'unreachable code' warning for code that appears
		after it. */
	}
}
 8006836:	b002      	add	sp, #8
 8006838:	4770      	bx	lr
 800683a:	bf00      	nop
 800683c:	20000080 	.word	0x20000080

08006840 <prvPortStartFirstTask>:
{
	/* Start the first task.  This also clears the bit that indicates the FPU is
	in use in case the FPU was used before the scheduler was started - which
	would otherwise result in the unnecessary leaving of space in the SVC stack
	for lazy saving of FPU registers. */
	__asm volatile(
 8006840:	4808      	ldr	r0, [pc, #32]	; (8006864 <prvPortStartFirstTask+0x24>)
 8006842:	6800      	ldr	r0, [r0, #0]
 8006844:	6800      	ldr	r0, [r0, #0]
 8006846:	f380 8808 	msr	MSP, r0
 800684a:	f04f 0000 	mov.w	r0, #0
 800684e:	f380 8814 	msr	CONTROL, r0
 8006852:	b662      	cpsie	i
 8006854:	b661      	cpsie	f
 8006856:	f3bf 8f4f 	dsb	sy
 800685a:	f3bf 8f6f 	isb	sy
 800685e:	df00      	svc	0
 8006860:	bf00      	nop
 8006862:	0000      	.short	0x0000
 8006864:	e000ed08 	.word	0xe000ed08

08006868 <vPortEnableVFP>:
/*-----------------------------------------------------------*/

/* This is a naked function. */
static void vPortEnableVFP( void )
{
	__asm volatile
 8006868:	f8df 000c 	ldr.w	r0, [pc, #12]	; 8006878 <vPortEnableVFP+0x10>
 800686c:	6801      	ldr	r1, [r0, #0]
 800686e:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 8006872:	6001      	str	r1, [r0, #0]
 8006874:	4770      	bx	lr
 8006876:	0000      	.short	0x0000
 8006878:	e000ed88 	.word	0xe000ed88

0800687c <pxPortInitialiseStack>:
	*pxTopOfStack = portINITIAL_XPSR;	/* xPSR */
 800687c:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
 8006880:	f840 3c04 	str.w	r3, [r0, #-4]
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
 8006884:	4b07      	ldr	r3, [pc, #28]	; (80068a4 <pxPortInitialiseStack+0x28>)
 8006886:	f840 3c0c 	str.w	r3, [r0, #-12]
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
 800688a:	f021 0101 	bic.w	r1, r1, #1
	*pxTopOfStack = portINITIAL_EXC_RETURN;
 800688e:	f06f 0302 	mvn.w	r3, #2
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
 8006892:	f840 1c08 	str.w	r1, [r0, #-8]
	*pxTopOfStack = ( StackType_t ) pvParameters;	/* R0 */
 8006896:	f840 2c20 	str.w	r2, [r0, #-32]
	*pxTopOfStack = portINITIAL_EXC_RETURN;
 800689a:	f840 3c24 	str.w	r3, [r0, #-36]
}
 800689e:	3844      	subs	r0, #68	; 0x44
 80068a0:	4770      	bx	lr
 80068a2:	bf00      	nop
 80068a4:	08006801 	.word	0x08006801
	...

080068b0 <SVC_Handler>:
	__asm volatile (
 80068b0:	4b07      	ldr	r3, [pc, #28]	; (80068d0 <pxCurrentTCBConst2>)
 80068b2:	6819      	ldr	r1, [r3, #0]
 80068b4:	6808      	ldr	r0, [r1, #0]
 80068b6:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80068ba:	f380 8809 	msr	PSP, r0
 80068be:	f3bf 8f6f 	isb	sy
 80068c2:	f04f 0000 	mov.w	r0, #0
 80068c6:	f380 8811 	msr	BASEPRI, r0
 80068ca:	4770      	bx	lr
 80068cc:	f3af 8000 	nop.w

080068d0 <pxCurrentTCBConst2>:
 80068d0:	20011b58 	.word	0x20011b58

080068d4 <vPortEnterCritical>:
 80068d4:	f04f 0350 	mov.w	r3, #80	; 0x50
 80068d8:	f383 8811 	msr	BASEPRI, r3
 80068dc:	f3bf 8f6f 	isb	sy
 80068e0:	f3bf 8f4f 	dsb	sy
	uxCriticalNesting++;
 80068e4:	4a0a      	ldr	r2, [pc, #40]	; (8006910 <vPortEnterCritical+0x3c>)
 80068e6:	6813      	ldr	r3, [r2, #0]
 80068e8:	3301      	adds	r3, #1
	if( uxCriticalNesting == 1 )
 80068ea:	2b01      	cmp	r3, #1
	uxCriticalNesting++;
 80068ec:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 1 )
 80068ee:	d10d      	bne.n	800690c <vPortEnterCritical+0x38>
		configASSERT( ( portNVIC_INT_CTRL_REG & portVECTACTIVE_MASK ) == 0 );
 80068f0:	4b08      	ldr	r3, [pc, #32]	; (8006914 <vPortEnterCritical+0x40>)
 80068f2:	681b      	ldr	r3, [r3, #0]
 80068f4:	f013 0fff 	tst.w	r3, #255	; 0xff
 80068f8:	d008      	beq.n	800690c <vPortEnterCritical+0x38>
 80068fa:	f04f 0350 	mov.w	r3, #80	; 0x50
 80068fe:	f383 8811 	msr	BASEPRI, r3
 8006902:	f3bf 8f6f 	isb	sy
 8006906:	f3bf 8f4f 	dsb	sy
 800690a:	e7fe      	b.n	800690a <vPortEnterCritical+0x36>
}
 800690c:	4770      	bx	lr
 800690e:	bf00      	nop
 8006910:	20000080 	.word	0x20000080
 8006914:	e000ed04 	.word	0xe000ed04

08006918 <vPortExitCritical>:
	configASSERT( uxCriticalNesting );
 8006918:	4a08      	ldr	r2, [pc, #32]	; (800693c <vPortExitCritical+0x24>)
 800691a:	6813      	ldr	r3, [r2, #0]
 800691c:	b943      	cbnz	r3, 8006930 <vPortExitCritical+0x18>
 800691e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8006922:	f383 8811 	msr	BASEPRI, r3
 8006926:	f3bf 8f6f 	isb	sy
 800692a:	f3bf 8f4f 	dsb	sy
 800692e:	e7fe      	b.n	800692e <vPortExitCritical+0x16>
	uxCriticalNesting--;
 8006930:	3b01      	subs	r3, #1
 8006932:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 0 )
 8006934:	b90b      	cbnz	r3, 800693a <vPortExitCritical+0x22>
}
/*-----------------------------------------------------------*/

portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
{
	__asm volatile
 8006936:	f383 8811 	msr	BASEPRI, r3
}
 800693a:	4770      	bx	lr
 800693c:	20000080 	.word	0x20000080

08006940 <PendSV_Handler>:
	__asm volatile
 8006940:	f3ef 8009 	mrs	r0, PSP
 8006944:	f3bf 8f6f 	isb	sy
 8006948:	4b15      	ldr	r3, [pc, #84]	; (80069a0 <pxCurrentTCBConst>)
 800694a:	681a      	ldr	r2, [r3, #0]
 800694c:	f01e 0f10 	tst.w	lr, #16
 8006950:	bf08      	it	eq
 8006952:	ed20 8a10 	vstmdbeq	r0!, {s16-s31}
 8006956:	e920 4ff0 	stmdb	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800695a:	6010      	str	r0, [r2, #0]
 800695c:	e92d 0009 	stmdb	sp!, {r0, r3}
 8006960:	f04f 0050 	mov.w	r0, #80	; 0x50
 8006964:	f380 8811 	msr	BASEPRI, r0
 8006968:	f3bf 8f4f 	dsb	sy
 800696c:	f3bf 8f6f 	isb	sy
 8006970:	f001 f91c 	bl	8007bac <vTaskSwitchContext>
 8006974:	f04f 0000 	mov.w	r0, #0
 8006978:	f380 8811 	msr	BASEPRI, r0
 800697c:	bc09      	pop	{r0, r3}
 800697e:	6819      	ldr	r1, [r3, #0]
 8006980:	6808      	ldr	r0, [r1, #0]
 8006982:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006986:	f01e 0f10 	tst.w	lr, #16
 800698a:	bf08      	it	eq
 800698c:	ecb0 8a10 	vldmiaeq	r0!, {s16-s31}
 8006990:	f380 8809 	msr	PSP, r0
 8006994:	f3bf 8f6f 	isb	sy
 8006998:	4770      	bx	lr
 800699a:	bf00      	nop
 800699c:	f3af 8000 	nop.w

080069a0 <pxCurrentTCBConst>:
 80069a0:	20011b58 	.word	0x20011b58

080069a4 <SysTick_Handler>:
{
 80069a4:	b508      	push	{r3, lr}
	__asm volatile
 80069a6:	f04f 0350 	mov.w	r3, #80	; 0x50
 80069aa:	f383 8811 	msr	BASEPRI, r3
 80069ae:	f3bf 8f6f 	isb	sy
 80069b2:	f3bf 8f4f 	dsb	sy
		if( xTaskIncrementTick() != pdFALSE )
 80069b6:	f000 fff5 	bl	80079a4 <xTaskIncrementTick>
 80069ba:	b118      	cbz	r0, 80069c4 <SysTick_Handler+0x20>
			portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;
 80069bc:	4b03      	ldr	r3, [pc, #12]	; (80069cc <SysTick_Handler+0x28>)
 80069be:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 80069c2:	601a      	str	r2, [r3, #0]
	__asm volatile
 80069c4:	2300      	movs	r3, #0
 80069c6:	f383 8811 	msr	BASEPRI, r3
}
 80069ca:	bd08      	pop	{r3, pc}
 80069cc:	e000ed04 	.word	0xe000ed04

080069d0 <vPortSetupTimerInterrupt>:
	portNVIC_SYSTICK_CTRL_REG = 0UL;
 80069d0:	4a08      	ldr	r2, [pc, #32]	; (80069f4 <vPortSetupTimerInterrupt+0x24>)
	portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
 80069d2:	4909      	ldr	r1, [pc, #36]	; (80069f8 <vPortSetupTimerInterrupt+0x28>)
	portNVIC_SYSTICK_CTRL_REG = 0UL;
 80069d4:	2300      	movs	r3, #0
 80069d6:	6013      	str	r3, [r2, #0]
	portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
 80069d8:	600b      	str	r3, [r1, #0]
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
 80069da:	4b08      	ldr	r3, [pc, #32]	; (80069fc <vPortSetupTimerInterrupt+0x2c>)
 80069dc:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 80069e0:	681b      	ldr	r3, [r3, #0]
 80069e2:	fbb3 f3f1 	udiv	r3, r3, r1
 80069e6:	4906      	ldr	r1, [pc, #24]	; (8006a00 <vPortSetupTimerInterrupt+0x30>)
 80069e8:	3b01      	subs	r3, #1
 80069ea:	600b      	str	r3, [r1, #0]
	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT );
 80069ec:	2307      	movs	r3, #7
 80069ee:	6013      	str	r3, [r2, #0]
}
 80069f0:	4770      	bx	lr
 80069f2:	bf00      	nop
 80069f4:	e000e010 	.word	0xe000e010
 80069f8:	e000e018 	.word	0xe000e018
 80069fc:	20000074 	.word	0x20000074
 8006a00:	e000e014 	.word	0xe000e014

08006a04 <xPortStartScheduler>:
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
 8006a04:	4b39      	ldr	r3, [pc, #228]	; (8006aec <xPortStartScheduler+0xe8>)
 8006a06:	4a3a      	ldr	r2, [pc, #232]	; (8006af0 <xPortStartScheduler+0xec>)
{
 8006a08:	b513      	push	{r0, r1, r4, lr}
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
 8006a0a:	6819      	ldr	r1, [r3, #0]
 8006a0c:	4291      	cmp	r1, r2
 8006a0e:	d108      	bne.n	8006a22 <xPortStartScheduler+0x1e>
	__asm volatile
 8006a10:	f04f 0350 	mov.w	r3, #80	; 0x50
 8006a14:	f383 8811 	msr	BASEPRI, r3
 8006a18:	f3bf 8f6f 	isb	sy
 8006a1c:	f3bf 8f4f 	dsb	sy
 8006a20:	e7fe      	b.n	8006a20 <xPortStartScheduler+0x1c>
	configASSERT( portCPUID != portCORTEX_M7_r0p0_ID );
 8006a22:	681a      	ldr	r2, [r3, #0]
 8006a24:	4b33      	ldr	r3, [pc, #204]	; (8006af4 <xPortStartScheduler+0xf0>)
 8006a26:	429a      	cmp	r2, r3
 8006a28:	d108      	bne.n	8006a3c <xPortStartScheduler+0x38>
 8006a2a:	f04f 0350 	mov.w	r3, #80	; 0x50
 8006a2e:	f383 8811 	msr	BASEPRI, r3
 8006a32:	f3bf 8f6f 	isb	sy
 8006a36:	f3bf 8f4f 	dsb	sy
 8006a3a:	e7fe      	b.n	8006a3a <xPortStartScheduler+0x36>
		ulOriginalPriority = *pucFirstUserPriorityRegister;
 8006a3c:	4b2e      	ldr	r3, [pc, #184]	; (8006af8 <xPortStartScheduler+0xf4>)
 8006a3e:	781a      	ldrb	r2, [r3, #0]
 8006a40:	b2d2      	uxtb	r2, r2
 8006a42:	9201      	str	r2, [sp, #4]
		*pucFirstUserPriorityRegister = portMAX_8_BIT_VALUE;
 8006a44:	22ff      	movs	r2, #255	; 0xff
 8006a46:	701a      	strb	r2, [r3, #0]
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
 8006a48:	781b      	ldrb	r3, [r3, #0]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 8006a4a:	4a2c      	ldr	r2, [pc, #176]	; (8006afc <xPortStartScheduler+0xf8>)
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
 8006a4c:	b2db      	uxtb	r3, r3
 8006a4e:	f88d 3003 	strb.w	r3, [sp, #3]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 8006a52:	f89d 3003 	ldrb.w	r3, [sp, #3]
 8006a56:	f003 0350 	and.w	r3, r3, #80	; 0x50
 8006a5a:	7013      	strb	r3, [r2, #0]
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
 8006a5c:	4b28      	ldr	r3, [pc, #160]	; (8006b00 <xPortStartScheduler+0xfc>)
 8006a5e:	2207      	movs	r2, #7
 8006a60:	601a      	str	r2, [r3, #0]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 8006a62:	2100      	movs	r1, #0
 8006a64:	f89d 0003 	ldrb.w	r0, [sp, #3]
 8006a68:	0600      	lsls	r0, r0, #24
 8006a6a:	f102 34ff 	add.w	r4, r2, #4294967295
 8006a6e:	d40d      	bmi.n	8006a8c <xPortStartScheduler+0x88>
 8006a70:	b101      	cbz	r1, 8006a74 <xPortStartScheduler+0x70>
 8006a72:	601a      	str	r2, [r3, #0]
			configASSERT( ( portMAX_PRIGROUP_BITS - ulMaxPRIGROUPValue ) == configPRIO_BITS );
 8006a74:	681a      	ldr	r2, [r3, #0]
 8006a76:	2a03      	cmp	r2, #3
 8006a78:	d011      	beq.n	8006a9e <xPortStartScheduler+0x9a>
 8006a7a:	f04f 0350 	mov.w	r3, #80	; 0x50
 8006a7e:	f383 8811 	msr	BASEPRI, r3
 8006a82:	f3bf 8f6f 	isb	sy
 8006a86:	f3bf 8f4f 	dsb	sy
 8006a8a:	e7fe      	b.n	8006a8a <xPortStartScheduler+0x86>
			ucMaxPriorityValue <<= ( uint8_t ) 0x01;
 8006a8c:	f89d 2003 	ldrb.w	r2, [sp, #3]
 8006a90:	0052      	lsls	r2, r2, #1
 8006a92:	b2d2      	uxtb	r2, r2
 8006a94:	f88d 2003 	strb.w	r2, [sp, #3]
 8006a98:	2101      	movs	r1, #1
 8006a9a:	4622      	mov	r2, r4
 8006a9c:	e7e2      	b.n	8006a64 <xPortStartScheduler+0x60>
		ulMaxPRIGROUPValue <<= portPRIGROUP_SHIFT;
 8006a9e:	0212      	lsls	r2, r2, #8
		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
 8006aa0:	f402 62e0 	and.w	r2, r2, #1792	; 0x700
 8006aa4:	601a      	str	r2, [r3, #0]
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 8006aa6:	9b01      	ldr	r3, [sp, #4]
 8006aa8:	4a13      	ldr	r2, [pc, #76]	; (8006af8 <xPortStartScheduler+0xf4>)
 8006aaa:	b2db      	uxtb	r3, r3
 8006aac:	7013      	strb	r3, [r2, #0]
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 8006aae:	4b15      	ldr	r3, [pc, #84]	; (8006b04 <xPortStartScheduler+0x100>)
 8006ab0:	681a      	ldr	r2, [r3, #0]
 8006ab2:	f442 0270 	orr.w	r2, r2, #15728640	; 0xf00000
 8006ab6:	601a      	str	r2, [r3, #0]
	portNVIC_SYSPRI2_REG |= portNVIC_SYSTICK_PRI;
 8006ab8:	681a      	ldr	r2, [r3, #0]
 8006aba:	f042 4270 	orr.w	r2, r2, #4026531840	; 0xf0000000
 8006abe:	601a      	str	r2, [r3, #0]
	vPortSetupTimerInterrupt();
 8006ac0:	f7ff ff86 	bl	80069d0 <vPortSetupTimerInterrupt>
	uxCriticalNesting = 0;
 8006ac4:	4b10      	ldr	r3, [pc, #64]	; (8006b08 <xPortStartScheduler+0x104>)
 8006ac6:	2400      	movs	r4, #0
 8006ac8:	601c      	str	r4, [r3, #0]
	vPortEnableVFP();
 8006aca:	f7ff fecd 	bl	8006868 <vPortEnableVFP>
	*( portFPCCR ) |= portASPEN_AND_LSPEN_BITS;
 8006ace:	4a0f      	ldr	r2, [pc, #60]	; (8006b0c <xPortStartScheduler+0x108>)
 8006ad0:	6813      	ldr	r3, [r2, #0]
 8006ad2:	f043 4340 	orr.w	r3, r3, #3221225472	; 0xc0000000
 8006ad6:	6013      	str	r3, [r2, #0]
	prvPortStartFirstTask();
 8006ad8:	f7ff feb2 	bl	8006840 <prvPortStartFirstTask>
	vTaskSwitchContext();
 8006adc:	f001 f866 	bl	8007bac <vTaskSwitchContext>
	prvTaskExitError();
 8006ae0:	f7ff fe8e 	bl	8006800 <prvTaskExitError>
}
 8006ae4:	4620      	mov	r0, r4
 8006ae6:	b002      	add	sp, #8
 8006ae8:	bd10      	pop	{r4, pc}
 8006aea:	bf00      	nop
 8006aec:	e000ed00 	.word	0xe000ed00
 8006af0:	410fc271 	.word	0x410fc271
 8006af4:	410fc270 	.word	0x410fc270
 8006af8:	e000e400 	.word	0xe000e400
 8006afc:	20011b50 	.word	0x20011b50
 8006b00:	20011b54 	.word	0x20011b54
 8006b04:	e000ed20 	.word	0xe000ed20
 8006b08:	20000080 	.word	0x20000080
 8006b0c:	e000ef34 	.word	0xe000ef34

08006b10 <vPortValidateInterruptPriority>:
	{
	uint32_t ulCurrentInterrupt;
	uint8_t ucCurrentPriority;

		/* Obtain the number of the currently executing interrupt. */
		__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
 8006b10:	f3ef 8305 	mrs	r3, IPSR

		/* Is the interrupt number a user defined interrupt? */
		if( ulCurrentInterrupt >= portFIRST_USER_INTERRUPT_NUMBER )
 8006b14:	2b0f      	cmp	r3, #15
 8006b16:	d90e      	bls.n	8006b36 <vPortValidateInterruptPriority+0x26>
		{
			/* Look up the interrupt's priority. */
			ucCurrentPriority = pcInterruptPriorityRegisters[ ulCurrentInterrupt ];
 8006b18:	4a10      	ldr	r2, [pc, #64]	; (8006b5c <vPortValidateInterruptPriority+0x4c>)
 8006b1a:	5c9b      	ldrb	r3, [r3, r2]
			interrupt entry is as fast and simple as possible.

			The following links provide detailed information:
			http://www.freertos.org/RTOS-Cortex-M3-M4.html
			http://www.freertos.org/FAQHelp.html */
			configASSERT( ucCurrentPriority >= ucMaxSysCallPriority );
 8006b1c:	4a10      	ldr	r2, [pc, #64]	; (8006b60 <vPortValidateInterruptPriority+0x50>)
 8006b1e:	7812      	ldrb	r2, [r2, #0]
 8006b20:	429a      	cmp	r2, r3
 8006b22:	d908      	bls.n	8006b36 <vPortValidateInterruptPriority+0x26>
 8006b24:	f04f 0350 	mov.w	r3, #80	; 0x50
 8006b28:	f383 8811 	msr	BASEPRI, r3
 8006b2c:	f3bf 8f6f 	isb	sy
 8006b30:	f3bf 8f4f 	dsb	sy
 8006b34:	e7fe      	b.n	8006b34 <vPortValidateInterruptPriority+0x24>
		configuration then the correct setting can be achieved on all Cortex-M
		devices by calling NVIC_SetPriorityGrouping( 0 ); before starting the
		scheduler.  Note however that some vendor specific peripheral libraries
		assume a non-zero priority group setting, in which cases using a value
		of zero will result in unpredictable behaviour. */
		configASSERT( ( portAIRCR_REG & portPRIORITY_GROUP_MASK ) <= ulMaxPRIGROUPValue );
 8006b36:	4b0b      	ldr	r3, [pc, #44]	; (8006b64 <vPortValidateInterruptPriority+0x54>)
 8006b38:	4a0b      	ldr	r2, [pc, #44]	; (8006b68 <vPortValidateInterruptPriority+0x58>)
 8006b3a:	681b      	ldr	r3, [r3, #0]
 8006b3c:	6812      	ldr	r2, [r2, #0]
 8006b3e:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
 8006b42:	4293      	cmp	r3, r2
 8006b44:	d908      	bls.n	8006b58 <vPortValidateInterruptPriority+0x48>
 8006b46:	f04f 0350 	mov.w	r3, #80	; 0x50
 8006b4a:	f383 8811 	msr	BASEPRI, r3
 8006b4e:	f3bf 8f6f 	isb	sy
 8006b52:	f3bf 8f4f 	dsb	sy
 8006b56:	e7fe      	b.n	8006b56 <vPortValidateInterruptPriority+0x46>
	}
 8006b58:	4770      	bx	lr
 8006b5a:	bf00      	nop
 8006b5c:	e000e3f0 	.word	0xe000e3f0
 8006b60:	20011b50 	.word	0x20011b50
 8006b64:	e000ed0c 	.word	0xe000ed0c
 8006b68:	20011b54 	.word	0x20011b54

08006b6c <prvIsQueueEmpty>:
	taskEXIT_CRITICAL();
}
/*-----------------------------------------------------------*/

static BaseType_t prvIsQueueEmpty( const Queue_t *pxQueue )
{
 8006b6c:	b510      	push	{r4, lr}
 8006b6e:	4604      	mov	r4, r0
BaseType_t xReturn;

	taskENTER_CRITICAL();
 8006b70:	f7ff feb0 	bl	80068d4 <vPortEnterCritical>
	{
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
 8006b74:	6ba4      	ldr	r4, [r4, #56]	; 0x38
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
 8006b76:	f7ff fecf 	bl	8006918 <vPortExitCritical>

	return xReturn;
}
 8006b7a:	fab4 f084 	clz	r0, r4
 8006b7e:	0940      	lsrs	r0, r0, #5
 8006b80:	bd10      	pop	{r4, pc}

08006b82 <prvCopyDataToQueue>:
{
 8006b82:	b570      	push	{r4, r5, r6, lr}
 8006b84:	4615      	mov	r5, r2
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 8006b86:	6c02      	ldr	r2, [r0, #64]	; 0x40
	uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 8006b88:	6b86      	ldr	r6, [r0, #56]	; 0x38
{
 8006b8a:	4604      	mov	r4, r0
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 8006b8c:	b942      	cbnz	r2, 8006ba0 <prvCopyDataToQueue+0x1e>
			if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 8006b8e:	6805      	ldr	r5, [r0, #0]
 8006b90:	b99d      	cbnz	r5, 8006bba <prvCopyDataToQueue+0x38>
				xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
 8006b92:	6880      	ldr	r0, [r0, #8]
 8006b94:	f001 f95c 	bl	8007e50 <xTaskPriorityDisinherit>
				pxQueue->u.xSemaphore.xMutexHolder = NULL;
 8006b98:	60a5      	str	r5, [r4, #8]
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 8006b9a:	3601      	adds	r6, #1
 8006b9c:	63a6      	str	r6, [r4, #56]	; 0x38
}
 8006b9e:	bd70      	pop	{r4, r5, r6, pc}
	else if( xPosition == queueSEND_TO_BACK )
 8006ba0:	b96d      	cbnz	r5, 8006bbe <prvCopyDataToQueue+0x3c>
		( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports, plus previous logic ensures a null pointer can only be passed to memcpy() if the copy size is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 8006ba2:	6840      	ldr	r0, [r0, #4]
 8006ba4:	f012 f8a0 	bl	8018ce8 <memcpy>
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8006ba8:	6863      	ldr	r3, [r4, #4]
 8006baa:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8006bac:	4413      	add	r3, r2
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 8006bae:	68a2      	ldr	r2, [r4, #8]
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8006bb0:	6063      	str	r3, [r4, #4]
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 8006bb2:	4293      	cmp	r3, r2
 8006bb4:	d301      	bcc.n	8006bba <prvCopyDataToQueue+0x38>
			pxQueue->pcWriteTo = pxQueue->pcHead;
 8006bb6:	6823      	ldr	r3, [r4, #0]
 8006bb8:	6063      	str	r3, [r4, #4]
BaseType_t xReturn = pdFALSE;
 8006bba:	2000      	movs	r0, #0
 8006bbc:	e7ed      	b.n	8006b9a <prvCopyDataToQueue+0x18>
		( void ) memcpy( ( void * ) pxQueue->u.xQueue.pcReadFrom, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e9087 !e418 MISRA exception as the casts are only redundant for some ports.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes.  Assert checks null pointer only used when length is 0. */
 8006bbe:	68c0      	ldr	r0, [r0, #12]
 8006bc0:	f012 f892 	bl	8018ce8 <memcpy>
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 8006bc4:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8006bc6:	68e2      	ldr	r2, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 8006bc8:	6821      	ldr	r1, [r4, #0]
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 8006bca:	425b      	negs	r3, r3
 8006bcc:	441a      	add	r2, r3
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 8006bce:	428a      	cmp	r2, r1
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 8006bd0:	60e2      	str	r2, [r4, #12]
			pxQueue->u.xQueue.pcReadFrom = ( pxQueue->u.xQueue.pcTail - pxQueue->uxItemSize );
 8006bd2:	bf3e      	ittt	cc
 8006bd4:	68a2      	ldrcc	r2, [r4, #8]
 8006bd6:	189b      	addcc	r3, r3, r2
 8006bd8:	60e3      	strcc	r3, [r4, #12]
		if( xPosition == queueOVERWRITE )
 8006bda:	2d02      	cmp	r5, #2
 8006bdc:	d1ed      	bne.n	8006bba <prvCopyDataToQueue+0x38>
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 8006bde:	b10e      	cbz	r6, 8006be4 <prvCopyDataToQueue+0x62>
				--uxMessagesWaiting;
 8006be0:	3e01      	subs	r6, #1
 8006be2:	e7ea      	b.n	8006bba <prvCopyDataToQueue+0x38>
BaseType_t xReturn = pdFALSE;
 8006be4:	4630      	mov	r0, r6
 8006be6:	e7d8      	b.n	8006b9a <prvCopyDataToQueue+0x18>

08006be8 <prvCopyDataFromQueue>:
{
 8006be8:	4603      	mov	r3, r0
 8006bea:	b410      	push	{r4}
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 8006bec:	6c1a      	ldr	r2, [r3, #64]	; 0x40
{
 8006bee:	4608      	mov	r0, r1
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 8006bf0:	b162      	cbz	r2, 8006c0c <prvCopyDataFromQueue+0x24>
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8006bf2:	68d9      	ldr	r1, [r3, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 8006bf4:	689c      	ldr	r4, [r3, #8]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8006bf6:	4411      	add	r1, r2
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 8006bf8:	42a1      	cmp	r1, r4
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8006bfa:	60d9      	str	r1, [r3, #12]
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
 8006bfc:	bf24      	itt	cs
 8006bfe:	6819      	ldrcs	r1, [r3, #0]
 8006c00:	60d9      	strcs	r1, [r3, #12]
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 8006c02:	68d9      	ldr	r1, [r3, #12]
}
 8006c04:	f85d 4b04 	ldr.w	r4, [sp], #4
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 8006c08:	f012 b86e 	b.w	8018ce8 <memcpy>
}
 8006c0c:	f85d 4b04 	ldr.w	r4, [sp], #4
 8006c10:	4770      	bx	lr

08006c12 <prvUnlockQueue>:
{
 8006c12:	b570      	push	{r4, r5, r6, lr}
 8006c14:	4604      	mov	r4, r0
	taskENTER_CRITICAL();
 8006c16:	f7ff fe5d 	bl	80068d4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 8006c1a:	f894 5045 	ldrb.w	r5, [r4, #69]	; 0x45
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8006c1e:	f104 0624 	add.w	r6, r4, #36	; 0x24
		int8_t cTxLock = pxQueue->cTxLock;
 8006c22:	b26d      	sxtb	r5, r5
		while( cTxLock > queueLOCKED_UNMODIFIED )
 8006c24:	2d00      	cmp	r5, #0
 8006c26:	dc14      	bgt.n	8006c52 <prvUnlockQueue+0x40>
		pxQueue->cTxLock = queueUNLOCKED;
 8006c28:	23ff      	movs	r3, #255	; 0xff
 8006c2a:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 8006c2e:	f7ff fe73 	bl	8006918 <vPortExitCritical>
	taskENTER_CRITICAL();
 8006c32:	f7ff fe4f 	bl	80068d4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 8006c36:	f894 5044 	ldrb.w	r5, [r4, #68]	; 0x44
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8006c3a:	f104 0610 	add.w	r6, r4, #16
		int8_t cRxLock = pxQueue->cRxLock;
 8006c3e:	b26d      	sxtb	r5, r5
		while( cRxLock > queueLOCKED_UNMODIFIED )
 8006c40:	2d00      	cmp	r5, #0
 8006c42:	dc12      	bgt.n	8006c6a <prvUnlockQueue+0x58>
		pxQueue->cRxLock = queueUNLOCKED;
 8006c44:	23ff      	movs	r3, #255	; 0xff
 8006c46:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
}
 8006c4a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
	taskEXIT_CRITICAL();
 8006c4e:	f7ff be63 	b.w	8006918 <vPortExitCritical>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8006c52:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8006c54:	2b00      	cmp	r3, #0
 8006c56:	d0e7      	beq.n	8006c28 <prvUnlockQueue+0x16>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8006c58:	4630      	mov	r0, r6
 8006c5a:	f001 f81b 	bl	8007c94 <xTaskRemoveFromEventList>
 8006c5e:	b108      	cbz	r0, 8006c64 <prvUnlockQueue+0x52>
						vTaskMissedYield();
 8006c60:	f001 f8a0 	bl	8007da4 <vTaskMissedYield>
 8006c64:	3d01      	subs	r5, #1
 8006c66:	b26d      	sxtb	r5, r5
 8006c68:	e7dc      	b.n	8006c24 <prvUnlockQueue+0x12>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8006c6a:	6923      	ldr	r3, [r4, #16]
 8006c6c:	2b00      	cmp	r3, #0
 8006c6e:	d0e9      	beq.n	8006c44 <prvUnlockQueue+0x32>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8006c70:	4630      	mov	r0, r6
 8006c72:	f001 f80f 	bl	8007c94 <xTaskRemoveFromEventList>
 8006c76:	b108      	cbz	r0, 8006c7c <prvUnlockQueue+0x6a>
					vTaskMissedYield();
 8006c78:	f001 f894 	bl	8007da4 <vTaskMissedYield>
 8006c7c:	3d01      	subs	r5, #1
 8006c7e:	b26d      	sxtb	r5, r5
 8006c80:	e7de      	b.n	8006c40 <prvUnlockQueue+0x2e>
	...

08006c84 <xQueueGenericReset>:
{
 8006c84:	b538      	push	{r3, r4, r5, lr}
 8006c86:	460d      	mov	r5, r1
	configASSERT( pxQueue );
 8006c88:	4604      	mov	r4, r0
 8006c8a:	b940      	cbnz	r0, 8006c9e <xQueueGenericReset+0x1a>
 8006c8c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8006c90:	f383 8811 	msr	BASEPRI, r3
 8006c94:	f3bf 8f6f 	isb	sy
 8006c98:	f3bf 8f4f 	dsb	sy
 8006c9c:	e7fe      	b.n	8006c9c <xQueueGenericReset+0x18>
	taskENTER_CRITICAL();
 8006c9e:	f7ff fe19 	bl	80068d4 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8006ca2:	e9d4 300f 	ldrd	r3, r0, [r4, #60]	; 0x3c
 8006ca6:	6822      	ldr	r2, [r4, #0]
		pxQueue->pcWriteTo = pxQueue->pcHead;
 8006ca8:	6062      	str	r2, [r4, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8006caa:	4343      	muls	r3, r0
 8006cac:	18d1      	adds	r1, r2, r3
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8006cae:	1a1b      	subs	r3, r3, r0
 8006cb0:	4413      	add	r3, r2
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8006cb2:	60a1      	str	r1, [r4, #8]
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8006cb4:	60e3      	str	r3, [r4, #12]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 8006cb6:	2100      	movs	r1, #0
		pxQueue->cRxLock = queueUNLOCKED;
 8006cb8:	23ff      	movs	r3, #255	; 0xff
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 8006cba:	63a1      	str	r1, [r4, #56]	; 0x38
		pxQueue->cRxLock = queueUNLOCKED;
 8006cbc:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
		pxQueue->cTxLock = queueUNLOCKED;
 8006cc0:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
		if( xNewQueue == pdFALSE )
 8006cc4:	b995      	cbnz	r5, 8006cec <xQueueGenericReset+0x68>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8006cc6:	6923      	ldr	r3, [r4, #16]
 8006cc8:	b163      	cbz	r3, 8006ce4 <xQueueGenericReset+0x60>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8006cca:	f104 0010 	add.w	r0, r4, #16
 8006cce:	f000 ffe1 	bl	8007c94 <xTaskRemoveFromEventList>
 8006cd2:	b138      	cbz	r0, 8006ce4 <xQueueGenericReset+0x60>
					queueYIELD_IF_USING_PREEMPTION();
 8006cd4:	4b0a      	ldr	r3, [pc, #40]	; (8006d00 <xQueueGenericReset+0x7c>)
 8006cd6:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8006cda:	601a      	str	r2, [r3, #0]
 8006cdc:	f3bf 8f4f 	dsb	sy
 8006ce0:	f3bf 8f6f 	isb	sy
	taskEXIT_CRITICAL();
 8006ce4:	f7ff fe18 	bl	8006918 <vPortExitCritical>
}
 8006ce8:	2001      	movs	r0, #1
 8006cea:	bd38      	pop	{r3, r4, r5, pc}
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 8006cec:	f104 0010 	add.w	r0, r4, #16
 8006cf0:	f7ff fd44 	bl	800677c <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 8006cf4:	f104 0024 	add.w	r0, r4, #36	; 0x24
 8006cf8:	f7ff fd40 	bl	800677c <vListInitialise>
 8006cfc:	e7f2      	b.n	8006ce4 <xQueueGenericReset+0x60>
 8006cfe:	bf00      	nop
 8006d00:	e000ed04 	.word	0xe000ed04

08006d04 <xQueueGenericCreateStatic>:
	{
 8006d04:	b513      	push	{r0, r1, r4, lr}
 8006d06:	461c      	mov	r4, r3
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 8006d08:	b940      	cbnz	r0, 8006d1c <xQueueGenericCreateStatic+0x18>
 8006d0a:	f04f 0350 	mov.w	r3, #80	; 0x50
 8006d0e:	f383 8811 	msr	BASEPRI, r3
 8006d12:	f3bf 8f6f 	isb	sy
 8006d16:	f3bf 8f4f 	dsb	sy
 8006d1a:	e7fe      	b.n	8006d1a <xQueueGenericCreateStatic+0x16>
		configASSERT( pxStaticQueue != NULL );
 8006d1c:	b943      	cbnz	r3, 8006d30 <xQueueGenericCreateStatic+0x2c>
 8006d1e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8006d22:	f383 8811 	msr	BASEPRI, r3
 8006d26:	f3bf 8f6f 	isb	sy
 8006d2a:	f3bf 8f4f 	dsb	sy
 8006d2e:	e7fe      	b.n	8006d2e <xQueueGenericCreateStatic+0x2a>
		configASSERT( !( ( pucQueueStorage != NULL ) && ( uxItemSize == 0 ) ) );
 8006d30:	b14a      	cbz	r2, 8006d46 <xQueueGenericCreateStatic+0x42>
 8006d32:	b991      	cbnz	r1, 8006d5a <xQueueGenericCreateStatic+0x56>
 8006d34:	f04f 0350 	mov.w	r3, #80	; 0x50
 8006d38:	f383 8811 	msr	BASEPRI, r3
 8006d3c:	f3bf 8f6f 	isb	sy
 8006d40:	f3bf 8f4f 	dsb	sy
 8006d44:	e7fe      	b.n	8006d44 <xQueueGenericCreateStatic+0x40>
		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
 8006d46:	b141      	cbz	r1, 8006d5a <xQueueGenericCreateStatic+0x56>
 8006d48:	f04f 0350 	mov.w	r3, #80	; 0x50
 8006d4c:	f383 8811 	msr	BASEPRI, r3
 8006d50:	f3bf 8f6f 	isb	sy
 8006d54:	f3bf 8f4f 	dsb	sy
 8006d58:	e7fe      	b.n	8006d58 <xQueueGenericCreateStatic+0x54>
			volatile size_t xSize = sizeof( StaticQueue_t );
 8006d5a:	2350      	movs	r3, #80	; 0x50
 8006d5c:	9301      	str	r3, [sp, #4]
			configASSERT( xSize == sizeof( Queue_t ) );
 8006d5e:	9b01      	ldr	r3, [sp, #4]
 8006d60:	2b50      	cmp	r3, #80	; 0x50
 8006d62:	d008      	beq.n	8006d76 <xQueueGenericCreateStatic+0x72>
 8006d64:	f04f 0350 	mov.w	r3, #80	; 0x50
 8006d68:	f383 8811 	msr	BASEPRI, r3
 8006d6c:	f3bf 8f6f 	isb	sy
 8006d70:	f3bf 8f4f 	dsb	sy
 8006d74:	e7fe      	b.n	8006d74 <xQueueGenericCreateStatic+0x70>
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
 8006d76:	2900      	cmp	r1, #0
 8006d78:	bf08      	it	eq
 8006d7a:	4622      	moveq	r2, r4
			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
 8006d7c:	9b01      	ldr	r3, [sp, #4]
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
 8006d7e:	6022      	str	r2, [r4, #0]
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 8006d80:	2301      	movs	r3, #1
	pxNewQueue->uxItemSize = uxItemSize;
 8006d82:	e9c4 010f 	strd	r0, r1, [r4, #60]	; 0x3c
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 8006d86:	f884 3046 	strb.w	r3, [r4, #70]	; 0x46
	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 8006d8a:	4619      	mov	r1, r3
 8006d8c:	4620      	mov	r0, r4
 8006d8e:	f7ff ff79 	bl	8006c84 <xQueueGenericReset>
		pxNewQueue->ucQueueType = ucQueueType;
 8006d92:	f89d 3010 	ldrb.w	r3, [sp, #16]
 8006d96:	f884 304c 	strb.w	r3, [r4, #76]	; 0x4c
	}
 8006d9a:	4620      	mov	r0, r4
 8006d9c:	b002      	add	sp, #8
 8006d9e:	bd10      	pop	{r4, pc}

08006da0 <xQueueGenericCreate>:
	{
 8006da0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8006da2:	460d      	mov	r5, r1
 8006da4:	4617      	mov	r7, r2
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 8006da6:	4606      	mov	r6, r0
 8006da8:	b940      	cbnz	r0, 8006dbc <xQueueGenericCreate+0x1c>
 8006daa:	f04f 0350 	mov.w	r3, #80	; 0x50
 8006dae:	f383 8811 	msr	BASEPRI, r3
 8006db2:	f3bf 8f6f 	isb	sy
 8006db6:	f3bf 8f4f 	dsb	sy
 8006dba:	e7fe      	b.n	8006dba <xQueueGenericCreate+0x1a>
			xQueueSizeInBytes = ( size_t ) ( uxQueueLength * uxItemSize ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8006dbc:	4348      	muls	r0, r1
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !e9079 see comment above. */
 8006dbe:	3050      	adds	r0, #80	; 0x50
 8006dc0:	f7ff fc18 	bl	80065f4 <pvPortMalloc>
		if( pxNewQueue != NULL )
 8006dc4:	4604      	mov	r4, r0
 8006dc6:	b160      	cbz	r0, 8006de2 <xQueueGenericCreate+0x42>
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
 8006dc8:	2300      	movs	r3, #0
 8006dca:	f880 3046 	strb.w	r3, [r0, #70]	; 0x46
	if( uxItemSize == ( UBaseType_t ) 0 )
 8006dce:	b955      	cbnz	r5, 8006de6 <xQueueGenericCreate+0x46>
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
 8006dd0:	6020      	str	r0, [r4, #0]
	pxNewQueue->uxItemSize = uxItemSize;
 8006dd2:	e9c4 650f 	strd	r6, r5, [r4, #60]	; 0x3c
	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 8006dd6:	2101      	movs	r1, #1
 8006dd8:	4620      	mov	r0, r4
 8006dda:	f7ff ff53 	bl	8006c84 <xQueueGenericReset>
		pxNewQueue->ucQueueType = ucQueueType;
 8006dde:	f884 704c 	strb.w	r7, [r4, #76]	; 0x4c
	}
 8006de2:	4620      	mov	r0, r4
 8006de4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
			pucQueueStorage += sizeof( Queue_t ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8006de6:	f100 0350 	add.w	r3, r0, #80	; 0x50
		pxNewQueue->pcHead = ( int8_t * ) pucQueueStorage;
 8006dea:	6003      	str	r3, [r0, #0]
 8006dec:	e7f1      	b.n	8006dd2 <xQueueGenericCreate+0x32>

08006dee <xQueueCreateCountingSemaphoreStatic>:
	{
 8006dee:	b513      	push	{r0, r1, r4, lr}
 8006df0:	4613      	mov	r3, r2
 8006df2:	460c      	mov	r4, r1
		configASSERT( uxMaxCount != 0 );
 8006df4:	b940      	cbnz	r0, 8006e08 <xQueueCreateCountingSemaphoreStatic+0x1a>
 8006df6:	f04f 0350 	mov.w	r3, #80	; 0x50
 8006dfa:	f383 8811 	msr	BASEPRI, r3
 8006dfe:	f3bf 8f6f 	isb	sy
 8006e02:	f3bf 8f4f 	dsb	sy
 8006e06:	e7fe      	b.n	8006e06 <xQueueCreateCountingSemaphoreStatic+0x18>
		configASSERT( uxInitialCount <= uxMaxCount );
 8006e08:	4288      	cmp	r0, r1
 8006e0a:	d208      	bcs.n	8006e1e <xQueueCreateCountingSemaphoreStatic+0x30>
 8006e0c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8006e10:	f383 8811 	msr	BASEPRI, r3
 8006e14:	f3bf 8f6f 	isb	sy
 8006e18:	f3bf 8f4f 	dsb	sy
 8006e1c:	e7fe      	b.n	8006e1c <xQueueCreateCountingSemaphoreStatic+0x2e>
		xHandle = xQueueGenericCreateStatic( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, NULL, pxStaticQueue, queueQUEUE_TYPE_COUNTING_SEMAPHORE );
 8006e1e:	2202      	movs	r2, #2
 8006e20:	9200      	str	r2, [sp, #0]
 8006e22:	2200      	movs	r2, #0
 8006e24:	4611      	mov	r1, r2
 8006e26:	f7ff ff6d 	bl	8006d04 <xQueueGenericCreateStatic>
		if( xHandle != NULL )
 8006e2a:	b100      	cbz	r0, 8006e2e <xQueueCreateCountingSemaphoreStatic+0x40>
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 8006e2c:	6384      	str	r4, [r0, #56]	; 0x38
	}
 8006e2e:	b002      	add	sp, #8
 8006e30:	bd10      	pop	{r4, pc}

08006e32 <xQueueCreateCountingSemaphore>:
	{
 8006e32:	b510      	push	{r4, lr}
 8006e34:	460c      	mov	r4, r1
		configASSERT( uxMaxCount != 0 );
 8006e36:	b940      	cbnz	r0, 8006e4a <xQueueCreateCountingSemaphore+0x18>
 8006e38:	f04f 0350 	mov.w	r3, #80	; 0x50
 8006e3c:	f383 8811 	msr	BASEPRI, r3
 8006e40:	f3bf 8f6f 	isb	sy
 8006e44:	f3bf 8f4f 	dsb	sy
 8006e48:	e7fe      	b.n	8006e48 <xQueueCreateCountingSemaphore+0x16>
		configASSERT( uxInitialCount <= uxMaxCount );
 8006e4a:	4288      	cmp	r0, r1
 8006e4c:	d208      	bcs.n	8006e60 <xQueueCreateCountingSemaphore+0x2e>
 8006e4e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8006e52:	f383 8811 	msr	BASEPRI, r3
 8006e56:	f3bf 8f6f 	isb	sy
 8006e5a:	f3bf 8f4f 	dsb	sy
 8006e5e:	e7fe      	b.n	8006e5e <xQueueCreateCountingSemaphore+0x2c>
		xHandle = xQueueGenericCreate( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, queueQUEUE_TYPE_COUNTING_SEMAPHORE );
 8006e60:	2202      	movs	r2, #2
 8006e62:	2100      	movs	r1, #0
 8006e64:	f7ff ff9c 	bl	8006da0 <xQueueGenericCreate>
		if( xHandle != NULL )
 8006e68:	b100      	cbz	r0, 8006e6c <xQueueCreateCountingSemaphore+0x3a>
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 8006e6a:	6384      	str	r4, [r0, #56]	; 0x38
	}
 8006e6c:	bd10      	pop	{r4, pc}
	...

08006e70 <xQueueGenericSend>:
{
 8006e70:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8006e74:	4688      	mov	r8, r1
 8006e76:	9201      	str	r2, [sp, #4]
 8006e78:	461f      	mov	r7, r3
	configASSERT( pxQueue );
 8006e7a:	4604      	mov	r4, r0
 8006e7c:	b940      	cbnz	r0, 8006e90 <xQueueGenericSend+0x20>
 8006e7e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8006e82:	f383 8811 	msr	BASEPRI, r3
 8006e86:	f3bf 8f6f 	isb	sy
 8006e8a:	f3bf 8f4f 	dsb	sy
 8006e8e:	e7fe      	b.n	8006e8e <xQueueGenericSend+0x1e>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 8006e90:	b951      	cbnz	r1, 8006ea8 <xQueueGenericSend+0x38>
 8006e92:	6c03      	ldr	r3, [r0, #64]	; 0x40
 8006e94:	b143      	cbz	r3, 8006ea8 <xQueueGenericSend+0x38>
 8006e96:	f04f 0350 	mov.w	r3, #80	; 0x50
 8006e9a:	f383 8811 	msr	BASEPRI, r3
 8006e9e:	f3bf 8f6f 	isb	sy
 8006ea2:	f3bf 8f4f 	dsb	sy
 8006ea6:	e7fe      	b.n	8006ea6 <xQueueGenericSend+0x36>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 8006ea8:	2f02      	cmp	r7, #2
 8006eaa:	d10b      	bne.n	8006ec4 <xQueueGenericSend+0x54>
 8006eac:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8006eae:	2b01      	cmp	r3, #1
 8006eb0:	d008      	beq.n	8006ec4 <xQueueGenericSend+0x54>
 8006eb2:	f04f 0350 	mov.w	r3, #80	; 0x50
 8006eb6:	f383 8811 	msr	BASEPRI, r3
 8006eba:	f3bf 8f6f 	isb	sy
 8006ebe:	f3bf 8f4f 	dsb	sy
 8006ec2:	e7fe      	b.n	8006ec2 <xQueueGenericSend+0x52>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 8006ec4:	f000 ff74 	bl	8007db0 <xTaskGetSchedulerState>
 8006ec8:	b950      	cbnz	r0, 8006ee0 <xQueueGenericSend+0x70>
 8006eca:	9e01      	ldr	r6, [sp, #4]
 8006ecc:	b14e      	cbz	r6, 8006ee2 <xQueueGenericSend+0x72>
 8006ece:	f04f 0350 	mov.w	r3, #80	; 0x50
 8006ed2:	f383 8811 	msr	BASEPRI, r3
 8006ed6:	f3bf 8f6f 	isb	sy
 8006eda:	f3bf 8f4f 	dsb	sy
 8006ede:	e7fe      	b.n	8006ede <xQueueGenericSend+0x6e>
 8006ee0:	2600      	movs	r6, #0
		prvLockQueue( pxQueue );
 8006ee2:	f04f 0900 	mov.w	r9, #0
					portYIELD_WITHIN_API();
 8006ee6:	f8df a0e8 	ldr.w	sl, [pc, #232]	; 8006fd0 <xQueueGenericSend+0x160>
 8006eea:	e037      	b.n	8006f5c <xQueueGenericSend+0xec>
				if( xTicksToWait == ( TickType_t ) 0 )
 8006eec:	9d01      	ldr	r5, [sp, #4]
 8006eee:	b91d      	cbnz	r5, 8006ef8 <xQueueGenericSend+0x88>
					taskEXIT_CRITICAL();
 8006ef0:	f7ff fd12 	bl	8006918 <vPortExitCritical>
			return errQUEUE_FULL;
 8006ef4:	2000      	movs	r0, #0
 8006ef6:	e050      	b.n	8006f9a <xQueueGenericSend+0x12a>
				else if( xEntryTimeSet == pdFALSE )
 8006ef8:	b916      	cbnz	r6, 8006f00 <xQueueGenericSend+0x90>
					vTaskInternalSetTimeOutState( &xTimeOut );
 8006efa:	a802      	add	r0, sp, #8
 8006efc:	f000 ff0a 	bl	8007d14 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 8006f00:	f7ff fd0a 	bl	8006918 <vPortExitCritical>
		vTaskSuspendAll();
 8006f04:	f000 fd40 	bl	8007988 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 8006f08:	f7ff fce4 	bl	80068d4 <vPortEnterCritical>
 8006f0c:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 8006f10:	2bff      	cmp	r3, #255	; 0xff
 8006f12:	bf08      	it	eq
 8006f14:	f884 9044 	strbeq.w	r9, [r4, #68]	; 0x44
 8006f18:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 8006f1c:	2bff      	cmp	r3, #255	; 0xff
 8006f1e:	bf08      	it	eq
 8006f20:	f884 9045 	strbeq.w	r9, [r4, #69]	; 0x45
 8006f24:	f7ff fcf8 	bl	8006918 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 8006f28:	a901      	add	r1, sp, #4
 8006f2a:	a802      	add	r0, sp, #8
 8006f2c:	f000 fefe 	bl	8007d2c <xTaskCheckForTimeOut>
 8006f30:	2800      	cmp	r0, #0
 8006f32:	d146      	bne.n	8006fc2 <xQueueGenericSend+0x152>

static BaseType_t prvIsQueueFull( const Queue_t *pxQueue )
{
BaseType_t xReturn;

	taskENTER_CRITICAL();
 8006f34:	f7ff fcce 	bl	80068d4 <vPortEnterCritical>
	{
		if( pxQueue->uxMessagesWaiting == pxQueue->uxLength )
 8006f38:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8006f3a:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8006f3c:	429a      	cmp	r2, r3
 8006f3e:	d12f      	bne.n	8006fa0 <xQueueGenericSend+0x130>
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
 8006f40:	f7ff fcea 	bl	8006918 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
 8006f44:	9901      	ldr	r1, [sp, #4]
 8006f46:	f104 0010 	add.w	r0, r4, #16
 8006f4a:	f000 fe6b 	bl	8007c24 <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 8006f4e:	4620      	mov	r0, r4
 8006f50:	f7ff fe5f 	bl	8006c12 <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 8006f54:	f000 fdb6 	bl	8007ac4 <xTaskResumeAll>
 8006f58:	b350      	cbz	r0, 8006fb0 <xQueueGenericSend+0x140>
 8006f5a:	2601      	movs	r6, #1
		taskENTER_CRITICAL();
 8006f5c:	f7ff fcba 	bl	80068d4 <vPortEnterCritical>
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 8006f60:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8006f62:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8006f64:	429a      	cmp	r2, r3
 8006f66:	d301      	bcc.n	8006f6c <xQueueGenericSend+0xfc>
 8006f68:	2f02      	cmp	r7, #2
 8006f6a:	d1bf      	bne.n	8006eec <xQueueGenericSend+0x7c>
					xYieldRequired = prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 8006f6c:	463a      	mov	r2, r7
 8006f6e:	4641      	mov	r1, r8
 8006f70:	4620      	mov	r0, r4
 8006f72:	f7ff fe06 	bl	8006b82 <prvCopyDataToQueue>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8006f76:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8006f78:	b11b      	cbz	r3, 8006f82 <xQueueGenericSend+0x112>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8006f7a:	f104 0024 	add.w	r0, r4, #36	; 0x24
 8006f7e:	f000 fe89 	bl	8007c94 <xTaskRemoveFromEventList>
					else if( xYieldRequired != pdFALSE )
 8006f82:	b138      	cbz	r0, 8006f94 <xQueueGenericSend+0x124>
						queueYIELD_IF_USING_PREEMPTION();
 8006f84:	4b12      	ldr	r3, [pc, #72]	; (8006fd0 <xQueueGenericSend+0x160>)
 8006f86:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8006f8a:	601a      	str	r2, [r3, #0]
 8006f8c:	f3bf 8f4f 	dsb	sy
 8006f90:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 8006f94:	f7ff fcc0 	bl	8006918 <vPortExitCritical>
				return pdPASS;
 8006f98:	2001      	movs	r0, #1
}
 8006f9a:	b004      	add	sp, #16
 8006f9c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
	taskEXIT_CRITICAL();
 8006fa0:	f7ff fcba 	bl	8006918 <vPortExitCritical>
				prvUnlockQueue( pxQueue );
 8006fa4:	4620      	mov	r0, r4
 8006fa6:	f7ff fe34 	bl	8006c12 <prvUnlockQueue>
				( void ) xTaskResumeAll();
 8006faa:	f000 fd8b 	bl	8007ac4 <xTaskResumeAll>
 8006fae:	e7d4      	b.n	8006f5a <xQueueGenericSend+0xea>
					portYIELD_WITHIN_API();
 8006fb0:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
 8006fb4:	f8ca 3000 	str.w	r3, [sl]
 8006fb8:	f3bf 8f4f 	dsb	sy
 8006fbc:	f3bf 8f6f 	isb	sy
 8006fc0:	e7cb      	b.n	8006f5a <xQueueGenericSend+0xea>
			prvUnlockQueue( pxQueue );
 8006fc2:	4620      	mov	r0, r4
 8006fc4:	f7ff fe25 	bl	8006c12 <prvUnlockQueue>
			( void ) xTaskResumeAll();
 8006fc8:	f000 fd7c 	bl	8007ac4 <xTaskResumeAll>
 8006fcc:	e792      	b.n	8006ef4 <xQueueGenericSend+0x84>
 8006fce:	bf00      	nop
 8006fd0:	e000ed04 	.word	0xe000ed04

08006fd4 <xQueueGenericSendFromISR>:
{
 8006fd4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8006fd8:	4689      	mov	r9, r1
 8006fda:	4690      	mov	r8, r2
 8006fdc:	461f      	mov	r7, r3
	configASSERT( pxQueue );
 8006fde:	4604      	mov	r4, r0
 8006fe0:	b940      	cbnz	r0, 8006ff4 <xQueueGenericSendFromISR+0x20>
 8006fe2:	f04f 0350 	mov.w	r3, #80	; 0x50
 8006fe6:	f383 8811 	msr	BASEPRI, r3
 8006fea:	f3bf 8f6f 	isb	sy
 8006fee:	f3bf 8f4f 	dsb	sy
 8006ff2:	e7fe      	b.n	8006ff2 <xQueueGenericSendFromISR+0x1e>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 8006ff4:	b951      	cbnz	r1, 800700c <xQueueGenericSendFromISR+0x38>
 8006ff6:	6c03      	ldr	r3, [r0, #64]	; 0x40
 8006ff8:	b143      	cbz	r3, 800700c <xQueueGenericSendFromISR+0x38>
 8006ffa:	f04f 0350 	mov.w	r3, #80	; 0x50
 8006ffe:	f383 8811 	msr	BASEPRI, r3
 8007002:	f3bf 8f6f 	isb	sy
 8007006:	f3bf 8f4f 	dsb	sy
 800700a:	e7fe      	b.n	800700a <xQueueGenericSendFromISR+0x36>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 800700c:	2f02      	cmp	r7, #2
 800700e:	d10b      	bne.n	8007028 <xQueueGenericSendFromISR+0x54>
 8007010:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8007012:	2b01      	cmp	r3, #1
 8007014:	d008      	beq.n	8007028 <xQueueGenericSendFromISR+0x54>
 8007016:	f04f 0350 	mov.w	r3, #80	; 0x50
 800701a:	f383 8811 	msr	BASEPRI, r3
 800701e:	f3bf 8f6f 	isb	sy
 8007022:	f3bf 8f4f 	dsb	sy
 8007026:	e7fe      	b.n	8007026 <xQueueGenericSendFromISR+0x52>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 8007028:	f7ff fd72 	bl	8006b10 <vPortValidateInterruptPriority>
	__asm volatile
 800702c:	f3ef 8611 	mrs	r6, BASEPRI
 8007030:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007034:	f383 8811 	msr	BASEPRI, r3
 8007038:	f3bf 8f6f 	isb	sy
 800703c:	f3bf 8f4f 	dsb	sy
		if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 8007040:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8007042:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8007044:	429a      	cmp	r2, r3
 8007046:	d301      	bcc.n	800704c <xQueueGenericSendFromISR+0x78>
 8007048:	2f02      	cmp	r7, #2
 800704a:	d122      	bne.n	8007092 <xQueueGenericSendFromISR+0xbe>
			const int8_t cTxLock = pxQueue->cTxLock;
 800704c:	f894 5045 	ldrb.w	r5, [r4, #69]	; 0x45
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 8007050:	463a      	mov	r2, r7
			const int8_t cTxLock = pxQueue->cTxLock;
 8007052:	b26d      	sxtb	r5, r5
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 8007054:	4649      	mov	r1, r9
 8007056:	4620      	mov	r0, r4
 8007058:	f7ff fd93 	bl	8006b82 <prvCopyDataToQueue>
			if( cTxLock == queueUNLOCKED )
 800705c:	1c6b      	adds	r3, r5, #1
 800705e:	d113      	bne.n	8007088 <xQueueGenericSendFromISR+0xb4>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8007060:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8007062:	b90b      	cbnz	r3, 8007068 <xQueueGenericSendFromISR+0x94>
			xReturn = pdPASS;
 8007064:	2001      	movs	r0, #1
 8007066:	e00b      	b.n	8007080 <xQueueGenericSendFromISR+0xac>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8007068:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800706c:	f000 fe12 	bl	8007c94 <xTaskRemoveFromEventList>
 8007070:	2800      	cmp	r0, #0
 8007072:	d0f7      	beq.n	8007064 <xQueueGenericSendFromISR+0x90>
							if( pxHigherPriorityTaskWoken != NULL )
 8007074:	f1b8 0f00 	cmp.w	r8, #0
 8007078:	d0f4      	beq.n	8007064 <xQueueGenericSendFromISR+0x90>
								*pxHigherPriorityTaskWoken = pdTRUE;
 800707a:	2001      	movs	r0, #1
 800707c:	f8c8 0000 	str.w	r0, [r8]
	__asm volatile
 8007080:	f386 8811 	msr	BASEPRI, r6
}
 8007084:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 8007088:	3501      	adds	r5, #1
 800708a:	b26d      	sxtb	r5, r5
 800708c:	f884 5045 	strb.w	r5, [r4, #69]	; 0x45
 8007090:	e7e8      	b.n	8007064 <xQueueGenericSendFromISR+0x90>
			xReturn = errQUEUE_FULL;
 8007092:	2000      	movs	r0, #0
 8007094:	e7f4      	b.n	8007080 <xQueueGenericSendFromISR+0xac>

08007096 <xQueueGiveFromISR>:
{
 8007096:	b570      	push	{r4, r5, r6, lr}
 8007098:	460d      	mov	r5, r1
	configASSERT( pxQueue );
 800709a:	4604      	mov	r4, r0
 800709c:	b940      	cbnz	r0, 80070b0 <xQueueGiveFromISR+0x1a>
	__asm volatile
 800709e:	f04f 0350 	mov.w	r3, #80	; 0x50
 80070a2:	f383 8811 	msr	BASEPRI, r3
 80070a6:	f3bf 8f6f 	isb	sy
 80070aa:	f3bf 8f4f 	dsb	sy
 80070ae:	e7fe      	b.n	80070ae <xQueueGiveFromISR+0x18>
	configASSERT( pxQueue->uxItemSize == 0 );
 80070b0:	6c03      	ldr	r3, [r0, #64]	; 0x40
 80070b2:	b143      	cbz	r3, 80070c6 <xQueueGiveFromISR+0x30>
 80070b4:	f04f 0350 	mov.w	r3, #80	; 0x50
 80070b8:	f383 8811 	msr	BASEPRI, r3
 80070bc:	f3bf 8f6f 	isb	sy
 80070c0:	f3bf 8f4f 	dsb	sy
 80070c4:	e7fe      	b.n	80070c4 <xQueueGiveFromISR+0x2e>
	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->u.xSemaphore.xMutexHolder != NULL ) ) );
 80070c6:	6803      	ldr	r3, [r0, #0]
 80070c8:	b953      	cbnz	r3, 80070e0 <xQueueGiveFromISR+0x4a>
 80070ca:	6883      	ldr	r3, [r0, #8]
 80070cc:	b143      	cbz	r3, 80070e0 <xQueueGiveFromISR+0x4a>
 80070ce:	f04f 0350 	mov.w	r3, #80	; 0x50
 80070d2:	f383 8811 	msr	BASEPRI, r3
 80070d6:	f3bf 8f6f 	isb	sy
 80070da:	f3bf 8f4f 	dsb	sy
 80070de:	e7fe      	b.n	80070de <xQueueGiveFromISR+0x48>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 80070e0:	f7ff fd16 	bl	8006b10 <vPortValidateInterruptPriority>
	__asm volatile
 80070e4:	f3ef 8611 	mrs	r6, BASEPRI
 80070e8:	f04f 0350 	mov.w	r3, #80	; 0x50
 80070ec:	f383 8811 	msr	BASEPRI, r3
 80070f0:	f3bf 8f6f 	isb	sy
 80070f4:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 80070f8:	6ba2      	ldr	r2, [r4, #56]	; 0x38
		if( uxMessagesWaiting < pxQueue->uxLength )
 80070fa:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 80070fc:	4293      	cmp	r3, r2
 80070fe:	d91c      	bls.n	800713a <xQueueGiveFromISR+0xa4>
			const int8_t cTxLock = pxQueue->cTxLock;
 8007100:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 8007104:	3201      	adds	r2, #1
			const int8_t cTxLock = pxQueue->cTxLock;
 8007106:	b25b      	sxtb	r3, r3
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 8007108:	63a2      	str	r2, [r4, #56]	; 0x38
			if( cTxLock == queueUNLOCKED )
 800710a:	1c5a      	adds	r2, r3, #1
 800710c:	d110      	bne.n	8007130 <xQueueGiveFromISR+0x9a>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800710e:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8007110:	b90b      	cbnz	r3, 8007116 <xQueueGiveFromISR+0x80>
			xReturn = pdPASS;
 8007112:	2001      	movs	r0, #1
 8007114:	e009      	b.n	800712a <xQueueGiveFromISR+0x94>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8007116:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800711a:	f000 fdbb 	bl	8007c94 <xTaskRemoveFromEventList>
 800711e:	2800      	cmp	r0, #0
 8007120:	d0f7      	beq.n	8007112 <xQueueGiveFromISR+0x7c>
							if( pxHigherPriorityTaskWoken != NULL )
 8007122:	2d00      	cmp	r5, #0
 8007124:	d0f5      	beq.n	8007112 <xQueueGiveFromISR+0x7c>
								*pxHigherPriorityTaskWoken = pdTRUE;
 8007126:	2001      	movs	r0, #1
 8007128:	6028      	str	r0, [r5, #0]
	__asm volatile
 800712a:	f386 8811 	msr	BASEPRI, r6
}
 800712e:	bd70      	pop	{r4, r5, r6, pc}
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 8007130:	3301      	adds	r3, #1
 8007132:	b25b      	sxtb	r3, r3
 8007134:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 8007138:	e7eb      	b.n	8007112 <xQueueGiveFromISR+0x7c>
			xReturn = errQUEUE_FULL;
 800713a:	2000      	movs	r0, #0
 800713c:	e7f5      	b.n	800712a <xQueueGiveFromISR+0x94>
	...

08007140 <xQueueReceive>:
{
 8007140:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8007144:	b085      	sub	sp, #20
 8007146:	460f      	mov	r7, r1
 8007148:	9201      	str	r2, [sp, #4]
	configASSERT( ( pxQueue ) );
 800714a:	4604      	mov	r4, r0
 800714c:	b940      	cbnz	r0, 8007160 <xQueueReceive+0x20>
	__asm volatile
 800714e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007152:	f383 8811 	msr	BASEPRI, r3
 8007156:	f3bf 8f6f 	isb	sy
 800715a:	f3bf 8f4f 	dsb	sy
 800715e:	e7fe      	b.n	800715e <xQueueReceive+0x1e>
	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) );
 8007160:	b951      	cbnz	r1, 8007178 <xQueueReceive+0x38>
 8007162:	6c03      	ldr	r3, [r0, #64]	; 0x40
 8007164:	b143      	cbz	r3, 8007178 <xQueueReceive+0x38>
 8007166:	f04f 0350 	mov.w	r3, #80	; 0x50
 800716a:	f383 8811 	msr	BASEPRI, r3
 800716e:	f3bf 8f6f 	isb	sy
 8007172:	f3bf 8f4f 	dsb	sy
 8007176:	e7fe      	b.n	8007176 <xQueueReceive+0x36>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 8007178:	f000 fe1a 	bl	8007db0 <xTaskGetSchedulerState>
 800717c:	b950      	cbnz	r0, 8007194 <xQueueReceive+0x54>
 800717e:	9e01      	ldr	r6, [sp, #4]
 8007180:	b14e      	cbz	r6, 8007196 <xQueueReceive+0x56>
 8007182:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007186:	f383 8811 	msr	BASEPRI, r3
 800718a:	f3bf 8f6f 	isb	sy
 800718e:	f3bf 8f4f 	dsb	sy
 8007192:	e7fe      	b.n	8007192 <xQueueReceive+0x52>
 8007194:	2600      	movs	r6, #0
		prvLockQueue( pxQueue );
 8007196:	f04f 0800 	mov.w	r8, #0
					portYIELD_WITHIN_API();
 800719a:	f8df 90e0 	ldr.w	r9, [pc, #224]	; 800727c <xQueueReceive+0x13c>
 800719e:	e03b      	b.n	8007218 <xQueueReceive+0xd8>
				if( xTicksToWait == ( TickType_t ) 0 )
 80071a0:	9d01      	ldr	r5, [sp, #4]
 80071a2:	b91d      	cbnz	r5, 80071ac <xQueueReceive+0x6c>
					taskEXIT_CRITICAL();
 80071a4:	f7ff fbb8 	bl	8006918 <vPortExitCritical>
				return errQUEUE_EMPTY;
 80071a8:	2000      	movs	r0, #0
 80071aa:	e052      	b.n	8007252 <xQueueReceive+0x112>
				else if( xEntryTimeSet == pdFALSE )
 80071ac:	b916      	cbnz	r6, 80071b4 <xQueueReceive+0x74>
					vTaskInternalSetTimeOutState( &xTimeOut );
 80071ae:	a802      	add	r0, sp, #8
 80071b0:	f000 fdb0 	bl	8007d14 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 80071b4:	f7ff fbb0 	bl	8006918 <vPortExitCritical>
		vTaskSuspendAll();
 80071b8:	f000 fbe6 	bl	8007988 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 80071bc:	f7ff fb8a 	bl	80068d4 <vPortEnterCritical>
 80071c0:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 80071c4:	2bff      	cmp	r3, #255	; 0xff
 80071c6:	bf08      	it	eq
 80071c8:	f884 8044 	strbeq.w	r8, [r4, #68]	; 0x44
 80071cc:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 80071d0:	2bff      	cmp	r3, #255	; 0xff
 80071d2:	bf08      	it	eq
 80071d4:	f884 8045 	strbeq.w	r8, [r4, #69]	; 0x45
 80071d8:	f7ff fb9e 	bl	8006918 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 80071dc:	a901      	add	r1, sp, #4
 80071de:	a802      	add	r0, sp, #8
 80071e0:	f000 fda4 	bl	8007d2c <xTaskCheckForTimeOut>
 80071e4:	2800      	cmp	r0, #0
 80071e6:	d13d      	bne.n	8007264 <xQueueReceive+0x124>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 80071e8:	4620      	mov	r0, r4
 80071ea:	f7ff fcbf 	bl	8006b6c <prvIsQueueEmpty>
 80071ee:	b398      	cbz	r0, 8007258 <xQueueReceive+0x118>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 80071f0:	9901      	ldr	r1, [sp, #4]
 80071f2:	f104 0024 	add.w	r0, r4, #36	; 0x24
 80071f6:	f000 fd15 	bl	8007c24 <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 80071fa:	4620      	mov	r0, r4
 80071fc:	f7ff fd09 	bl	8006c12 <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 8007200:	f000 fc60 	bl	8007ac4 <xTaskResumeAll>
 8007204:	b938      	cbnz	r0, 8007216 <xQueueReceive+0xd6>
					portYIELD_WITHIN_API();
 8007206:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
 800720a:	f8c9 3000 	str.w	r3, [r9]
 800720e:	f3bf 8f4f 	dsb	sy
 8007212:	f3bf 8f6f 	isb	sy
 8007216:	2601      	movs	r6, #1
		taskENTER_CRITICAL();
 8007218:	f7ff fb5c 	bl	80068d4 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800721c:	6ba5      	ldr	r5, [r4, #56]	; 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 800721e:	2d00      	cmp	r5, #0
 8007220:	d0be      	beq.n	80071a0 <xQueueReceive+0x60>
				prvCopyDataFromQueue( pxQueue, pvBuffer );
 8007222:	4639      	mov	r1, r7
 8007224:	4620      	mov	r0, r4
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 8007226:	3d01      	subs	r5, #1
				prvCopyDataFromQueue( pxQueue, pvBuffer );
 8007228:	f7ff fcde 	bl	8006be8 <prvCopyDataFromQueue>
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 800722c:	63a5      	str	r5, [r4, #56]	; 0x38
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800722e:	6923      	ldr	r3, [r4, #16]
 8007230:	b163      	cbz	r3, 800724c <xQueueReceive+0x10c>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8007232:	f104 0010 	add.w	r0, r4, #16
 8007236:	f000 fd2d 	bl	8007c94 <xTaskRemoveFromEventList>
 800723a:	b138      	cbz	r0, 800724c <xQueueReceive+0x10c>
						queueYIELD_IF_USING_PREEMPTION();
 800723c:	4b0f      	ldr	r3, [pc, #60]	; (800727c <xQueueReceive+0x13c>)
 800723e:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8007242:	601a      	str	r2, [r3, #0]
 8007244:	f3bf 8f4f 	dsb	sy
 8007248:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 800724c:	f7ff fb64 	bl	8006918 <vPortExitCritical>
				return pdPASS;
 8007250:	2001      	movs	r0, #1
}
 8007252:	b005      	add	sp, #20
 8007254:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
				prvUnlockQueue( pxQueue );
 8007258:	4620      	mov	r0, r4
 800725a:	f7ff fcda 	bl	8006c12 <prvUnlockQueue>
				( void ) xTaskResumeAll();
 800725e:	f000 fc31 	bl	8007ac4 <xTaskResumeAll>
 8007262:	e7d8      	b.n	8007216 <xQueueReceive+0xd6>
			prvUnlockQueue( pxQueue );
 8007264:	4620      	mov	r0, r4
 8007266:	f7ff fcd4 	bl	8006c12 <prvUnlockQueue>
			( void ) xTaskResumeAll();
 800726a:	f000 fc2b 	bl	8007ac4 <xTaskResumeAll>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 800726e:	4620      	mov	r0, r4
 8007270:	f7ff fc7c 	bl	8006b6c <prvIsQueueEmpty>
 8007274:	2800      	cmp	r0, #0
 8007276:	d0ce      	beq.n	8007216 <xQueueReceive+0xd6>
 8007278:	e796      	b.n	80071a8 <xQueueReceive+0x68>
 800727a:	bf00      	nop
 800727c:	e000ed04 	.word	0xe000ed04

08007280 <xQueueSemaphoreTake>:
{
 8007280:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
	configASSERT( ( pxQueue ) );
 8007284:	4604      	mov	r4, r0
{
 8007286:	9101      	str	r1, [sp, #4]
	configASSERT( ( pxQueue ) );
 8007288:	b940      	cbnz	r0, 800729c <xQueueSemaphoreTake+0x1c>
 800728a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800728e:	f383 8811 	msr	BASEPRI, r3
 8007292:	f3bf 8f6f 	isb	sy
 8007296:	f3bf 8f4f 	dsb	sy
 800729a:	e7fe      	b.n	800729a <xQueueSemaphoreTake+0x1a>
	configASSERT( pxQueue->uxItemSize == 0 );
 800729c:	6c05      	ldr	r5, [r0, #64]	; 0x40
 800729e:	b145      	cbz	r5, 80072b2 <xQueueSemaphoreTake+0x32>
 80072a0:	f04f 0350 	mov.w	r3, #80	; 0x50
 80072a4:	f383 8811 	msr	BASEPRI, r3
 80072a8:	f3bf 8f6f 	isb	sy
 80072ac:	f3bf 8f4f 	dsb	sy
 80072b0:	e7fe      	b.n	80072b0 <xQueueSemaphoreTake+0x30>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 80072b2:	f000 fd7d 	bl	8007db0 <xTaskGetSchedulerState>
 80072b6:	b950      	cbnz	r0, 80072ce <xQueueSemaphoreTake+0x4e>
 80072b8:	9d01      	ldr	r5, [sp, #4]
 80072ba:	b145      	cbz	r5, 80072ce <xQueueSemaphoreTake+0x4e>
 80072bc:	f04f 0350 	mov.w	r3, #80	; 0x50
 80072c0:	f383 8811 	msr	BASEPRI, r3
 80072c4:	f3bf 8f6f 	isb	sy
 80072c8:	f3bf 8f4f 	dsb	sy
 80072cc:	e7fe      	b.n	80072cc <xQueueSemaphoreTake+0x4c>
 80072ce:	462e      	mov	r6, r5
		prvLockQueue( pxQueue );
 80072d0:	2700      	movs	r7, #0
					portYIELD_WITHIN_API();
 80072d2:	f8df 812c 	ldr.w	r8, [pc, #300]	; 8007400 <xQueueSemaphoreTake+0x180>
 80072d6:	e04f      	b.n	8007378 <xQueueSemaphoreTake+0xf8>
				if( xTicksToWait == ( TickType_t ) 0 )
 80072d8:	9b01      	ldr	r3, [sp, #4]
 80072da:	b963      	cbnz	r3, 80072f6 <xQueueSemaphoreTake+0x76>
						configASSERT( xInheritanceOccurred == pdFALSE );
 80072dc:	b145      	cbz	r5, 80072f0 <xQueueSemaphoreTake+0x70>
 80072de:	f04f 0350 	mov.w	r3, #80	; 0x50
 80072e2:	f383 8811 	msr	BASEPRI, r3
 80072e6:	f3bf 8f6f 	isb	sy
 80072ea:	f3bf 8f4f 	dsb	sy
 80072ee:	e7fe      	b.n	80072ee <xQueueSemaphoreTake+0x6e>
					taskEXIT_CRITICAL();
 80072f0:	f7ff fb12 	bl	8006918 <vPortExitCritical>
					return errQUEUE_EMPTY;
 80072f4:	e05e      	b.n	80073b4 <xQueueSemaphoreTake+0x134>
				else if( xEntryTimeSet == pdFALSE )
 80072f6:	b916      	cbnz	r6, 80072fe <xQueueSemaphoreTake+0x7e>
					vTaskInternalSetTimeOutState( &xTimeOut );
 80072f8:	a802      	add	r0, sp, #8
 80072fa:	f000 fd0b 	bl	8007d14 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 80072fe:	f7ff fb0b 	bl	8006918 <vPortExitCritical>
		vTaskSuspendAll();
 8007302:	f000 fb41 	bl	8007988 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 8007306:	f7ff fae5 	bl	80068d4 <vPortEnterCritical>
 800730a:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800730e:	2bff      	cmp	r3, #255	; 0xff
 8007310:	bf08      	it	eq
 8007312:	f884 7044 	strbeq.w	r7, [r4, #68]	; 0x44
 8007316:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800731a:	2bff      	cmp	r3, #255	; 0xff
 800731c:	bf08      	it	eq
 800731e:	f884 7045 	strbeq.w	r7, [r4, #69]	; 0x45
 8007322:	f7ff faf9 	bl	8006918 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 8007326:	a901      	add	r1, sp, #4
 8007328:	a802      	add	r0, sp, #8
 800732a:	f000 fcff 	bl	8007d2c <xTaskCheckForTimeOut>
 800732e:	2800      	cmp	r0, #0
 8007330:	d14a      	bne.n	80073c8 <xQueueSemaphoreTake+0x148>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 8007332:	4620      	mov	r0, r4
 8007334:	f7ff fc1a 	bl	8006b6c <prvIsQueueEmpty>
 8007338:	2800      	cmp	r0, #0
 800733a:	d03f      	beq.n	80073bc <xQueueSemaphoreTake+0x13c>
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 800733c:	6823      	ldr	r3, [r4, #0]
 800733e:	b93b      	cbnz	r3, 8007350 <xQueueSemaphoreTake+0xd0>
						taskENTER_CRITICAL();
 8007340:	f7ff fac8 	bl	80068d4 <vPortEnterCritical>
							xInheritanceOccurred = xTaskPriorityInherit( pxQueue->u.xSemaphore.xMutexHolder );
 8007344:	68a0      	ldr	r0, [r4, #8]
 8007346:	f000 fd43 	bl	8007dd0 <xTaskPriorityInherit>
 800734a:	4605      	mov	r5, r0
						taskEXIT_CRITICAL();
 800734c:	f7ff fae4 	bl	8006918 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 8007350:	9901      	ldr	r1, [sp, #4]
 8007352:	f104 0024 	add.w	r0, r4, #36	; 0x24
 8007356:	f000 fc65 	bl	8007c24 <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 800735a:	4620      	mov	r0, r4
 800735c:	f7ff fc59 	bl	8006c12 <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 8007360:	f000 fbb0 	bl	8007ac4 <xTaskResumeAll>
 8007364:	b938      	cbnz	r0, 8007376 <xQueueSemaphoreTake+0xf6>
					portYIELD_WITHIN_API();
 8007366:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
 800736a:	f8c8 3000 	str.w	r3, [r8]
 800736e:	f3bf 8f4f 	dsb	sy
 8007372:	f3bf 8f6f 	isb	sy
 8007376:	2601      	movs	r6, #1
		taskENTER_CRITICAL();
 8007378:	f7ff faac 	bl	80068d4 <vPortEnterCritical>
			const UBaseType_t uxSemaphoreCount = pxQueue->uxMessagesWaiting;
 800737c:	6ba3      	ldr	r3, [r4, #56]	; 0x38
			if( uxSemaphoreCount > ( UBaseType_t ) 0 )
 800737e:	2b00      	cmp	r3, #0
 8007380:	d0aa      	beq.n	80072d8 <xQueueSemaphoreTake+0x58>
				pxQueue->uxMessagesWaiting = uxSemaphoreCount - ( UBaseType_t ) 1;
 8007382:	3b01      	subs	r3, #1
 8007384:	63a3      	str	r3, [r4, #56]	; 0x38
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 8007386:	6823      	ldr	r3, [r4, #0]
 8007388:	b913      	cbnz	r3, 8007390 <xQueueSemaphoreTake+0x110>
						pxQueue->u.xSemaphore.xMutexHolder = pvTaskIncrementMutexHeldCount();
 800738a:	f000 fdf1 	bl	8007f70 <pvTaskIncrementMutexHeldCount>
 800738e:	60a0      	str	r0, [r4, #8]
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8007390:	6923      	ldr	r3, [r4, #16]
 8007392:	b163      	cbz	r3, 80073ae <xQueueSemaphoreTake+0x12e>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8007394:	f104 0010 	add.w	r0, r4, #16
 8007398:	f000 fc7c 	bl	8007c94 <xTaskRemoveFromEventList>
 800739c:	b138      	cbz	r0, 80073ae <xQueueSemaphoreTake+0x12e>
						queueYIELD_IF_USING_PREEMPTION();
 800739e:	4b18      	ldr	r3, [pc, #96]	; (8007400 <xQueueSemaphoreTake+0x180>)
 80073a0:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 80073a4:	601a      	str	r2, [r3, #0]
 80073a6:	f3bf 8f4f 	dsb	sy
 80073aa:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 80073ae:	f7ff fab3 	bl	8006918 <vPortExitCritical>
				return pdPASS;
 80073b2:	2501      	movs	r5, #1
}
 80073b4:	4628      	mov	r0, r5
 80073b6:	b004      	add	sp, #16
 80073b8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
				prvUnlockQueue( pxQueue );
 80073bc:	4620      	mov	r0, r4
 80073be:	f7ff fc28 	bl	8006c12 <prvUnlockQueue>
				( void ) xTaskResumeAll();
 80073c2:	f000 fb7f 	bl	8007ac4 <xTaskResumeAll>
 80073c6:	e7d6      	b.n	8007376 <xQueueSemaphoreTake+0xf6>
			prvUnlockQueue( pxQueue );
 80073c8:	4620      	mov	r0, r4
 80073ca:	f7ff fc22 	bl	8006c12 <prvUnlockQueue>
			( void ) xTaskResumeAll();
 80073ce:	f000 fb79 	bl	8007ac4 <xTaskResumeAll>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 80073d2:	4620      	mov	r0, r4
 80073d4:	f7ff fbca 	bl	8006b6c <prvIsQueueEmpty>
 80073d8:	2800      	cmp	r0, #0
 80073da:	d0cc      	beq.n	8007376 <xQueueSemaphoreTake+0xf6>
					if( xInheritanceOccurred != pdFALSE )
 80073dc:	2d00      	cmp	r5, #0
 80073de:	d0e9      	beq.n	80073b4 <xQueueSemaphoreTake+0x134>
						taskENTER_CRITICAL();
 80073e0:	f7ff fa78 	bl	80068d4 <vPortEnterCritical>
		if( listCURRENT_LIST_LENGTH( &( pxQueue->xTasksWaitingToReceive ) ) > 0U )
 80073e4:	6a61      	ldr	r1, [r4, #36]	; 0x24
 80073e6:	b119      	cbz	r1, 80073f0 <xQueueSemaphoreTake+0x170>
			uxHighestPriorityOfWaitingTasks = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) listGET_ITEM_VALUE_OF_HEAD_ENTRY( &( pxQueue->xTasksWaitingToReceive ) );
 80073e8:	6b23      	ldr	r3, [r4, #48]	; 0x30
 80073ea:	6819      	ldr	r1, [r3, #0]
 80073ec:	f1c1 0138 	rsb	r1, r1, #56	; 0x38
							vTaskPriorityDisinheritAfterTimeout( pxQueue->u.xSemaphore.xMutexHolder, uxHighestWaitingPriority );
 80073f0:	68a0      	ldr	r0, [r4, #8]
 80073f2:	f000 fd6f 	bl	8007ed4 <vTaskPriorityDisinheritAfterTimeout>
				return errQUEUE_EMPTY;
 80073f6:	2500      	movs	r5, #0
						taskEXIT_CRITICAL();
 80073f8:	f7ff fa8e 	bl	8006918 <vPortExitCritical>
 80073fc:	e7da      	b.n	80073b4 <xQueueSemaphoreTake+0x134>
 80073fe:	bf00      	nop
 8007400:	e000ed04 	.word	0xe000ed04

08007404 <xQueueReceiveFromISR>:
{
 8007404:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8007408:	4689      	mov	r9, r1
 800740a:	4690      	mov	r8, r2
	configASSERT( pxQueue );
 800740c:	4605      	mov	r5, r0
 800740e:	b940      	cbnz	r0, 8007422 <xQueueReceiveFromISR+0x1e>
 8007410:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007414:	f383 8811 	msr	BASEPRI, r3
 8007418:	f3bf 8f6f 	isb	sy
 800741c:	f3bf 8f4f 	dsb	sy
 8007420:	e7fe      	b.n	8007420 <xQueueReceiveFromISR+0x1c>
	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 8007422:	b951      	cbnz	r1, 800743a <xQueueReceiveFromISR+0x36>
 8007424:	6c03      	ldr	r3, [r0, #64]	; 0x40
 8007426:	b143      	cbz	r3, 800743a <xQueueReceiveFromISR+0x36>
 8007428:	f04f 0350 	mov.w	r3, #80	; 0x50
 800742c:	f383 8811 	msr	BASEPRI, r3
 8007430:	f3bf 8f6f 	isb	sy
 8007434:	f3bf 8f4f 	dsb	sy
 8007438:	e7fe      	b.n	8007438 <xQueueReceiveFromISR+0x34>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 800743a:	f7ff fb69 	bl	8006b10 <vPortValidateInterruptPriority>
	__asm volatile
 800743e:	f3ef 8711 	mrs	r7, BASEPRI
 8007442:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007446:	f383 8811 	msr	BASEPRI, r3
 800744a:	f3bf 8f6f 	isb	sy
 800744e:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 8007452:	6bac      	ldr	r4, [r5, #56]	; 0x38
		if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 8007454:	b31c      	cbz	r4, 800749e <xQueueReceiveFromISR+0x9a>
			const int8_t cRxLock = pxQueue->cRxLock;
 8007456:	f895 6044 	ldrb.w	r6, [r5, #68]	; 0x44
			prvCopyDataFromQueue( pxQueue, pvBuffer );
 800745a:	4649      	mov	r1, r9
			const int8_t cRxLock = pxQueue->cRxLock;
 800745c:	b276      	sxtb	r6, r6
			prvCopyDataFromQueue( pxQueue, pvBuffer );
 800745e:	4628      	mov	r0, r5
 8007460:	f7ff fbc2 	bl	8006be8 <prvCopyDataFromQueue>
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 8007464:	3c01      	subs	r4, #1
			if( cRxLock == queueUNLOCKED )
 8007466:	1c73      	adds	r3, r6, #1
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 8007468:	63ac      	str	r4, [r5, #56]	; 0x38
			if( cRxLock == queueUNLOCKED )
 800746a:	d113      	bne.n	8007494 <xQueueReceiveFromISR+0x90>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800746c:	692b      	ldr	r3, [r5, #16]
 800746e:	b90b      	cbnz	r3, 8007474 <xQueueReceiveFromISR+0x70>
			xReturn = pdPASS;
 8007470:	2001      	movs	r0, #1
 8007472:	e00b      	b.n	800748c <xQueueReceiveFromISR+0x88>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8007474:	f105 0010 	add.w	r0, r5, #16
 8007478:	f000 fc0c 	bl	8007c94 <xTaskRemoveFromEventList>
 800747c:	2800      	cmp	r0, #0
 800747e:	d0f7      	beq.n	8007470 <xQueueReceiveFromISR+0x6c>
						if( pxHigherPriorityTaskWoken != NULL )
 8007480:	f1b8 0f00 	cmp.w	r8, #0
 8007484:	d0f4      	beq.n	8007470 <xQueueReceiveFromISR+0x6c>
							*pxHigherPriorityTaskWoken = pdTRUE;
 8007486:	2001      	movs	r0, #1
 8007488:	f8c8 0000 	str.w	r0, [r8]
	__asm volatile
 800748c:	f387 8811 	msr	BASEPRI, r7
}
 8007490:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				pxQueue->cRxLock = ( int8_t ) ( cRxLock + 1 );
 8007494:	3601      	adds	r6, #1
 8007496:	b276      	sxtb	r6, r6
 8007498:	f885 6044 	strb.w	r6, [r5, #68]	; 0x44
 800749c:	e7e8      	b.n	8007470 <xQueueReceiveFromISR+0x6c>
			xReturn = pdFAIL;
 800749e:	4620      	mov	r0, r4
 80074a0:	e7f4      	b.n	800748c <xQueueReceiveFromISR+0x88>
	...

080074a4 <vQueueAddToRegistry>:
/*-----------------------------------------------------------*/

#if ( configQUEUE_REGISTRY_SIZE > 0 )

	void vQueueAddToRegistry( QueueHandle_t xQueue, const char *pcQueueName ) /*lint !e971 Unqualified char types are allowed for strings and single characters only. */
	{
 80074a4:	b530      	push	{r4, r5, lr}

		/* See if there is an empty space in the registry.  A NULL name denotes
		a free slot. */
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
		{
			if( xQueueRegistry[ ux ].pcQueueName == NULL )
 80074a6:	4a07      	ldr	r2, [pc, #28]	; (80074c4 <vQueueAddToRegistry+0x20>)
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 80074a8:	2300      	movs	r3, #0
			if( xQueueRegistry[ ux ].pcQueueName == NULL )
 80074aa:	f852 5033 	ldr.w	r5, [r2, r3, lsl #3]
 80074ae:	eb02 04c3 	add.w	r4, r2, r3, lsl #3
 80074b2:	b91d      	cbnz	r5, 80074bc <vQueueAddToRegistry+0x18>
			{
				/* Store the information on this queue. */
				xQueueRegistry[ ux ].pcQueueName = pcQueueName;
 80074b4:	f842 1033 	str.w	r1, [r2, r3, lsl #3]
				xQueueRegistry[ ux ].xHandle = xQueue;
 80074b8:	6060      	str	r0, [r4, #4]
			else
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}
	}
 80074ba:	bd30      	pop	{r4, r5, pc}
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 80074bc:	3301      	adds	r3, #1
 80074be:	2b08      	cmp	r3, #8
 80074c0:	d1f3      	bne.n	80074aa <vQueueAddToRegistry+0x6>
 80074c2:	e7fa      	b.n	80074ba <vQueueAddToRegistry+0x16>
 80074c4:	20012940 	.word	0x20012940

080074c8 <vQueueUnregisterQueue>:
/*-----------------------------------------------------------*/

#if ( configQUEUE_REGISTRY_SIZE > 0 )

	void vQueueUnregisterQueue( QueueHandle_t xQueue )
	{
 80074c8:	b510      	push	{r4, lr}

		/* See if the handle of the queue being unregistered in actually in the
		registry. */
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
		{
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 80074ca:	4a08      	ldr	r2, [pc, #32]	; (80074ec <vQueueUnregisterQueue+0x24>)
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 80074cc:	2300      	movs	r3, #0
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 80074ce:	eb02 01c3 	add.w	r1, r2, r3, lsl #3
 80074d2:	684c      	ldr	r4, [r1, #4]
 80074d4:	4284      	cmp	r4, r0
 80074d6:	d104      	bne.n	80074e2 <vQueueUnregisterQueue+0x1a>
			{
				/* Set the name to NULL to show that this slot if free again. */
				xQueueRegistry[ ux ].pcQueueName = NULL;
 80074d8:	2000      	movs	r0, #0
 80074da:	f842 0033 	str.w	r0, [r2, r3, lsl #3]

				/* Set the handle to NULL to ensure the same queue handle cannot
				appear in the registry twice if it is added, removed, then
				added again. */
				xQueueRegistry[ ux ].xHandle = ( QueueHandle_t ) 0;
 80074de:	6048      	str	r0, [r1, #4]
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}

	} /*lint !e818 xQueue could not be pointer to const because it is a typedef. */
 80074e0:	bd10      	pop	{r4, pc}
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 80074e2:	3301      	adds	r3, #1
 80074e4:	2b08      	cmp	r3, #8
 80074e6:	d1f2      	bne.n	80074ce <vQueueUnregisterQueue+0x6>
 80074e8:	e7fa      	b.n	80074e0 <vQueueUnregisterQueue+0x18>
 80074ea:	bf00      	nop
 80074ec:	20012940 	.word	0x20012940

080074f0 <vQueueDelete>:
{
 80074f0:	b510      	push	{r4, lr}
	configASSERT( pxQueue );
 80074f2:	4604      	mov	r4, r0
 80074f4:	b940      	cbnz	r0, 8007508 <vQueueDelete+0x18>
	__asm volatile
 80074f6:	f04f 0350 	mov.w	r3, #80	; 0x50
 80074fa:	f383 8811 	msr	BASEPRI, r3
 80074fe:	f3bf 8f6f 	isb	sy
 8007502:	f3bf 8f4f 	dsb	sy
 8007506:	e7fe      	b.n	8007506 <vQueueDelete+0x16>
		vQueueUnregisterQueue( pxQueue );
 8007508:	f7ff ffde 	bl	80074c8 <vQueueUnregisterQueue>
		if( pxQueue->ucStaticallyAllocated == ( uint8_t ) pdFALSE )
 800750c:	f894 3046 	ldrb.w	r3, [r4, #70]	; 0x46
 8007510:	b923      	cbnz	r3, 800751c <vQueueDelete+0x2c>
			vPortFree( pxQueue );
 8007512:	4620      	mov	r0, r4
}
 8007514:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
			vPortFree( pxQueue );
 8007518:	f7ff b8f8 	b.w	800670c <vPortFree>
}
 800751c:	bd10      	pop	{r4, pc}

0800751e <vQueueWaitForMessageRestricted>:
/*-----------------------------------------------------------*/

#if ( configUSE_TIMERS == 1 )

	void vQueueWaitForMessageRestricted( QueueHandle_t xQueue, TickType_t xTicksToWait, const BaseType_t xWaitIndefinitely )
	{
 800751e:	b570      	push	{r4, r5, r6, lr}
 8007520:	4604      	mov	r4, r0
 8007522:	460d      	mov	r5, r1
 8007524:	4616      	mov	r6, r2
		will not actually cause the task to block, just place it on a blocked
		list.  It will not block until the scheduler is unlocked - at which
		time a yield will be performed.  If an item is added to the queue while
		the queue is locked, and the calling task blocks on the queue, then the
		calling task will be immediately unblocked when the queue is unlocked. */
		prvLockQueue( pxQueue );
 8007526:	f7ff f9d5 	bl	80068d4 <vPortEnterCritical>
 800752a:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800752e:	2bff      	cmp	r3, #255	; 0xff
 8007530:	bf04      	itt	eq
 8007532:	2300      	moveq	r3, #0
 8007534:	f884 3044 	strbeq.w	r3, [r4, #68]	; 0x44
 8007538:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800753c:	2bff      	cmp	r3, #255	; 0xff
 800753e:	bf04      	itt	eq
 8007540:	2300      	moveq	r3, #0
 8007542:	f884 3045 	strbeq.w	r3, [r4, #69]	; 0x45
 8007546:	f7ff f9e7 	bl	8006918 <vPortExitCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0U )
 800754a:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800754c:	b92b      	cbnz	r3, 800755a <vQueueWaitForMessageRestricted+0x3c>
		{
			/* There is nothing in the queue, block for the specified period. */
			vTaskPlaceOnEventListRestricted( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait, xWaitIndefinitely );
 800754e:	4632      	mov	r2, r6
 8007550:	4629      	mov	r1, r5
 8007552:	f104 0024 	add.w	r0, r4, #36	; 0x24
 8007556:	f000 fb7f 	bl	8007c58 <vTaskPlaceOnEventListRestricted>
		}
		else
		{
			mtCOVERAGE_TEST_MARKER();
		}
		prvUnlockQueue( pxQueue );
 800755a:	4620      	mov	r0, r4
	}
 800755c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
		prvUnlockQueue( pxQueue );
 8007560:	f7ff bb57 	b.w	8006c12 <prvUnlockQueue>

08007564 <prvAddNewTaskToReadyList>:
	}
}
/*-----------------------------------------------------------*/

static void prvAddNewTaskToReadyList( TCB_t *pxNewTCB )
{
 8007564:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8007568:	4604      	mov	r4, r0
	/* Ensure interrupts don't access the task lists while the lists are being
	updated. */
	taskENTER_CRITICAL();
 800756a:	f7ff f9b3 	bl	80068d4 <vPortEnterCritical>
	{
		uxCurrentNumberOfTasks++;
 800756e:	4b2f      	ldr	r3, [pc, #188]	; (800762c <prvAddNewTaskToReadyList+0xc8>)
		if( pxCurrentTCB == NULL )
 8007570:	4d2f      	ldr	r5, [pc, #188]	; (8007630 <prvAddNewTaskToReadyList+0xcc>)
		uxCurrentNumberOfTasks++;
 8007572:	681a      	ldr	r2, [r3, #0]
 8007574:	4f2f      	ldr	r7, [pc, #188]	; (8007634 <prvAddNewTaskToReadyList+0xd0>)
 8007576:	3201      	adds	r2, #1
 8007578:	601a      	str	r2, [r3, #0]
		if( pxCurrentTCB == NULL )
 800757a:	682e      	ldr	r6, [r5, #0]
 800757c:	2e00      	cmp	r6, #0
 800757e:	d149      	bne.n	8007614 <prvAddNewTaskToReadyList+0xb0>
		{
			/* There are no other tasks, or all the other tasks are in
			the suspended state - make this the current task. */
			pxCurrentTCB = pxNewTCB;
 8007580:	602c      	str	r4, [r5, #0]

			if( uxCurrentNumberOfTasks == ( UBaseType_t ) 1 )
 8007582:	681b      	ldr	r3, [r3, #0]
 8007584:	2b01      	cmp	r3, #1
 8007586:	d11f      	bne.n	80075c8 <prvAddNewTaskToReadyList+0x64>
{
UBaseType_t uxPriority;

	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
	{
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 8007588:	f04f 0814 	mov.w	r8, #20
 800758c:	fb08 7006 	mla	r0, r8, r6, r7
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 8007590:	3601      	adds	r6, #1
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 8007592:	f7ff f8f3 	bl	800677c <vListInitialise>
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 8007596:	2e38      	cmp	r6, #56	; 0x38
 8007598:	d1f8      	bne.n	800758c <prvAddNewTaskToReadyList+0x28>
	}

	vListInitialise( &xDelayedTaskList1 );
 800759a:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 8007660 <prvAddNewTaskToReadyList+0xfc>
	vListInitialise( &xDelayedTaskList2 );
 800759e:	4e26      	ldr	r6, [pc, #152]	; (8007638 <prvAddNewTaskToReadyList+0xd4>)
	vListInitialise( &xDelayedTaskList1 );
 80075a0:	4640      	mov	r0, r8
 80075a2:	f7ff f8eb 	bl	800677c <vListInitialise>
	vListInitialise( &xDelayedTaskList2 );
 80075a6:	4630      	mov	r0, r6
 80075a8:	f7ff f8e8 	bl	800677c <vListInitialise>
	vListInitialise( &xPendingReadyList );
 80075ac:	4823      	ldr	r0, [pc, #140]	; (800763c <prvAddNewTaskToReadyList+0xd8>)
 80075ae:	f7ff f8e5 	bl	800677c <vListInitialise>

	#if ( INCLUDE_vTaskDelete == 1 )
	{
		vListInitialise( &xTasksWaitingTermination );
 80075b2:	4823      	ldr	r0, [pc, #140]	; (8007640 <prvAddNewTaskToReadyList+0xdc>)
 80075b4:	f7ff f8e2 	bl	800677c <vListInitialise>
	}
	#endif /* INCLUDE_vTaskDelete */

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		vListInitialise( &xSuspendedTaskList );
 80075b8:	4822      	ldr	r0, [pc, #136]	; (8007644 <prvAddNewTaskToReadyList+0xe0>)
 80075ba:	f7ff f8df 	bl	800677c <vListInitialise>
	}
	#endif /* INCLUDE_vTaskSuspend */

	/* Start with pxDelayedTaskList using list1 and the pxOverflowDelayedTaskList
	using list2. */
	pxDelayedTaskList = &xDelayedTaskList1;
 80075be:	4b22      	ldr	r3, [pc, #136]	; (8007648 <prvAddNewTaskToReadyList+0xe4>)
 80075c0:	f8c3 8000 	str.w	r8, [r3]
	pxOverflowDelayedTaskList = &xDelayedTaskList2;
 80075c4:	4b21      	ldr	r3, [pc, #132]	; (800764c <prvAddNewTaskToReadyList+0xe8>)
 80075c6:	601e      	str	r6, [r3, #0]
		uxTaskNumber++;
 80075c8:	4a21      	ldr	r2, [pc, #132]	; (8007650 <prvAddNewTaskToReadyList+0xec>)
 80075ca:	6813      	ldr	r3, [r2, #0]
 80075cc:	3301      	adds	r3, #1
 80075ce:	6013      	str	r3, [r2, #0]
		prvAddTaskToReadyList( pxNewTCB );
 80075d0:	4a20      	ldr	r2, [pc, #128]	; (8007654 <prvAddNewTaskToReadyList+0xf0>)
			pxNewTCB->uxTCBNumber = uxTaskNumber;
 80075d2:	6463      	str	r3, [r4, #68]	; 0x44
		prvAddTaskToReadyList( pxNewTCB );
 80075d4:	6811      	ldr	r1, [r2, #0]
 80075d6:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 80075d8:	2014      	movs	r0, #20
 80075da:	428b      	cmp	r3, r1
 80075dc:	fb00 7003 	mla	r0, r0, r3, r7
 80075e0:	f104 0104 	add.w	r1, r4, #4
 80075e4:	bf88      	it	hi
 80075e6:	6013      	strhi	r3, [r2, #0]
 80075e8:	f7ff f8d6 	bl	8006798 <vListInsertEnd>
	taskEXIT_CRITICAL();
 80075ec:	f7ff f994 	bl	8006918 <vPortExitCritical>
	if( xSchedulerRunning != pdFALSE )
 80075f0:	4b19      	ldr	r3, [pc, #100]	; (8007658 <prvAddNewTaskToReadyList+0xf4>)
 80075f2:	681b      	ldr	r3, [r3, #0]
 80075f4:	b163      	cbz	r3, 8007610 <prvAddNewTaskToReadyList+0xac>
		if( pxCurrentTCB->uxPriority < pxNewTCB->uxPriority )
 80075f6:	682b      	ldr	r3, [r5, #0]
 80075f8:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 80075fa:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 80075fc:	429a      	cmp	r2, r3
 80075fe:	d207      	bcs.n	8007610 <prvAddNewTaskToReadyList+0xac>
			taskYIELD_IF_USING_PREEMPTION();
 8007600:	4b16      	ldr	r3, [pc, #88]	; (800765c <prvAddNewTaskToReadyList+0xf8>)
 8007602:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8007606:	601a      	str	r2, [r3, #0]
 8007608:	f3bf 8f4f 	dsb	sy
 800760c:	f3bf 8f6f 	isb	sy
}
 8007610:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
			if( xSchedulerRunning == pdFALSE )
 8007614:	4b10      	ldr	r3, [pc, #64]	; (8007658 <prvAddNewTaskToReadyList+0xf4>)
 8007616:	681b      	ldr	r3, [r3, #0]
 8007618:	2b00      	cmp	r3, #0
 800761a:	d1d5      	bne.n	80075c8 <prvAddNewTaskToReadyList+0x64>
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 800761c:	682b      	ldr	r3, [r5, #0]
 800761e:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8007620:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8007622:	429a      	cmp	r2, r3
					pxCurrentTCB = pxNewTCB;
 8007624:	bf98      	it	ls
 8007626:	602c      	strls	r4, [r5, #0]
 8007628:	e7ce      	b.n	80075c8 <prvAddNewTaskToReadyList+0x64>
 800762a:	bf00      	nop
 800762c:	20011fc4 	.word	0x20011fc4
 8007630:	20011b58 	.word	0x20011b58
 8007634:	20011b64 	.word	0x20011b64
 8007638:	20011ff0 	.word	0x20011ff0
 800763c:	2001200c 	.word	0x2001200c
 8007640:	20012038 	.word	0x20012038
 8007644:	20012024 	.word	0x20012024
 8007648:	20011b5c 	.word	0x20011b5c
 800764c:	20011b60 	.word	0x20011b60
 8007650:	20011fd4 	.word	0x20011fd4
 8007654:	20011fd8 	.word	0x20011fd8
 8007658:	20012020 	.word	0x20012020
 800765c:	e000ed04 	.word	0xe000ed04
 8007660:	20011fdc 	.word	0x20011fdc

08007664 <prvDeleteTCB>:
/*-----------------------------------------------------------*/

#if ( INCLUDE_vTaskDelete == 1 )

	static void prvDeleteTCB( TCB_t *pxTCB )
	{
 8007664:	b510      	push	{r4, lr}
		#elif( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 ) /*lint !e731 !e9029 Macro has been consolidated for readability reasons. */
		{
			/* The task could have been allocated statically or dynamically, so
			check what was statically allocated before trying to free the
			memory. */
			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
 8007666:	f890 305d 	ldrb.w	r3, [r0, #93]	; 0x5d
	{
 800766a:	4604      	mov	r4, r0
			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
 800766c:	b93b      	cbnz	r3, 800767e <prvDeleteTCB+0x1a>
			{
				/* Both the stack and TCB were allocated dynamically, so both
				must be freed. */
				vPortFree( pxTCB->pxStack );
 800766e:	6b00      	ldr	r0, [r0, #48]	; 0x30
 8007670:	f7ff f84c 	bl	800670c <vPortFree>
				vPortFree( pxTCB );
 8007674:	4620      	mov	r0, r4
				configASSERT( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_AND_TCB	);
				mtCOVERAGE_TEST_MARKER();
			}
		}
		#endif /* configSUPPORT_DYNAMIC_ALLOCATION */
	}
 8007676:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
				vPortFree( pxTCB );
 800767a:	f7ff b847 	b.w	800670c <vPortFree>
			else if( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_ONLY )
 800767e:	2b01      	cmp	r3, #1
 8007680:	d0f9      	beq.n	8007676 <prvDeleteTCB+0x12>
				configASSERT( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_AND_TCB	);
 8007682:	2b02      	cmp	r3, #2
 8007684:	d008      	beq.n	8007698 <prvDeleteTCB+0x34>
 8007686:	f04f 0350 	mov.w	r3, #80	; 0x50
 800768a:	f383 8811 	msr	BASEPRI, r3
 800768e:	f3bf 8f6f 	isb	sy
 8007692:	f3bf 8f4f 	dsb	sy
 8007696:	e7fe      	b.n	8007696 <prvDeleteTCB+0x32>
	}
 8007698:	bd10      	pop	{r4, pc}
	...

0800769c <prvIdleTask>:
{
 800769c:	b580      	push	{r7, lr}
				taskYIELD();
 800769e:	f8df 805c 	ldr.w	r8, [pc, #92]	; 80076fc <prvIdleTask+0x60>
				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 80076a2:	4f12      	ldr	r7, [pc, #72]	; (80076ec <prvIdleTask+0x50>)
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 80076a4:	4c12      	ldr	r4, [pc, #72]	; (80076f0 <prvIdleTask+0x54>)
				--uxCurrentNumberOfTasks;
 80076a6:	4d13      	ldr	r5, [pc, #76]	; (80076f4 <prvIdleTask+0x58>)
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 80076a8:	6823      	ldr	r3, [r4, #0]
 80076aa:	b963      	cbnz	r3, 80076c6 <prvIdleTask+0x2a>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > ( UBaseType_t ) 1 )
 80076ac:	4b12      	ldr	r3, [pc, #72]	; (80076f8 <prvIdleTask+0x5c>)
 80076ae:	681b      	ldr	r3, [r3, #0]
 80076b0:	2b01      	cmp	r3, #1
 80076b2:	d9f8      	bls.n	80076a6 <prvIdleTask+0xa>
				taskYIELD();
 80076b4:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
 80076b8:	f8c8 3000 	str.w	r3, [r8]
 80076bc:	f3bf 8f4f 	dsb	sy
 80076c0:	f3bf 8f6f 	isb	sy
 80076c4:	e7ee      	b.n	80076a4 <prvIdleTask+0x8>
			taskENTER_CRITICAL();
 80076c6:	f7ff f905 	bl	80068d4 <vPortEnterCritical>
				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 80076ca:	68fb      	ldr	r3, [r7, #12]
 80076cc:	68de      	ldr	r6, [r3, #12]
				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 80076ce:	1d30      	adds	r0, r6, #4
 80076d0:	f7ff f885 	bl	80067de <uxListRemove>
				--uxCurrentNumberOfTasks;
 80076d4:	682b      	ldr	r3, [r5, #0]
 80076d6:	3b01      	subs	r3, #1
 80076d8:	602b      	str	r3, [r5, #0]
				--uxDeletedTasksWaitingCleanUp;
 80076da:	6823      	ldr	r3, [r4, #0]
 80076dc:	3b01      	subs	r3, #1
 80076de:	6023      	str	r3, [r4, #0]
			taskEXIT_CRITICAL();
 80076e0:	f7ff f91a 	bl	8006918 <vPortExitCritical>
			prvDeleteTCB( pxTCB );
 80076e4:	4630      	mov	r0, r6
 80076e6:	f7ff ffbd 	bl	8007664 <prvDeleteTCB>
 80076ea:	e7dd      	b.n	80076a8 <prvIdleTask+0xc>
 80076ec:	20012038 	.word	0x20012038
 80076f0:	20011fc8 	.word	0x20011fc8
 80076f4:	20011fc4 	.word	0x20011fc4
 80076f8:	20011b64 	.word	0x20011b64
 80076fc:	e000ed04 	.word	0xe000ed04

08007700 <prvResetNextTaskUnblockTime>:

static void prvResetNextTaskUnblockTime( void )
{
TCB_t *pxTCB;

	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 8007700:	4a06      	ldr	r2, [pc, #24]	; (800771c <prvResetNextTaskUnblockTime+0x1c>)
 8007702:	6813      	ldr	r3, [r2, #0]
 8007704:	6819      	ldr	r1, [r3, #0]
 8007706:	4b06      	ldr	r3, [pc, #24]	; (8007720 <prvResetNextTaskUnblockTime+0x20>)
 8007708:	b919      	cbnz	r1, 8007712 <prvResetNextTaskUnblockTime+0x12>
	{
		/* The new current delayed list is empty.  Set xNextTaskUnblockTime to
		the maximum possible value so it is	extremely unlikely that the
		if( xTickCount >= xNextTaskUnblockTime ) test will pass until
		there is an item in the delayed list. */
		xNextTaskUnblockTime = portMAX_DELAY;
 800770a:	f04f 32ff 	mov.w	r2, #4294967295
		/* The new current delayed list is not empty, get the value of
		the item at the head of the delayed list.  This is the time at
		which the task at the head of the delayed list should be removed
		from the Blocked state. */
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 800770e:	601a      	str	r2, [r3, #0]
	}
}
 8007710:	4770      	bx	lr
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8007712:	6812      	ldr	r2, [r2, #0]
 8007714:	68d2      	ldr	r2, [r2, #12]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 8007716:	68d2      	ldr	r2, [r2, #12]
 8007718:	6852      	ldr	r2, [r2, #4]
 800771a:	e7f8      	b.n	800770e <prvResetNextTaskUnblockTime+0xe>
 800771c:	20011b5c 	.word	0x20011b5c
 8007720:	20012004 	.word	0x20012004

08007724 <prvInitialiseNewTask.isra.2>:
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 8007724:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8007728:	e9dd 6409 	ldrd	r6, r4, [sp, #36]	; 0x24
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 800772c:	ea4f 0982 	mov.w	r9, r2, lsl #2
 8007730:	464a      	mov	r2, r9
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 8007732:	4607      	mov	r7, r0
 8007734:	460d      	mov	r5, r1
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 8007736:	6b20      	ldr	r0, [r4, #48]	; 0x30
 8007738:	21a5      	movs	r1, #165	; 0xa5
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 800773a:	4698      	mov	r8, r3
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 800773c:	f011 fadf 	bl	8018cfe <memset>
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
 8007740:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8007742:	f1a9 0904 	sub.w	r9, r9, #4
 8007746:	4499      	add	r9, r3
		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTER_SIZE_TYPE ) portBYTE_ALIGNMENT_MASK ) ) ); /*lint !e923 !e9033 !e9078 MISRA exception.  Avoiding casts between pointers and integers is not practical.  Size differences accounted for using portPOINTER_SIZE_TYPE type.  Checked by assert(). */
 8007748:	f029 0907 	bic.w	r9, r9, #7
	if( pcName != NULL )
 800774c:	b3a5      	cbz	r5, 80077b8 <prvInitialiseNewTask.isra.2+0x94>
 800774e:	1e6b      	subs	r3, r5, #1
 8007750:	f104 0234 	add.w	r2, r4, #52	; 0x34
 8007754:	350f      	adds	r5, #15
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 8007756:	f813 1f01 	ldrb.w	r1, [r3, #1]!
 800775a:	f802 1b01 	strb.w	r1, [r2], #1
			if( pcName[ x ] == ( char ) 0x00 )
 800775e:	7819      	ldrb	r1, [r3, #0]
 8007760:	b109      	cbz	r1, 8007766 <prvInitialiseNewTask.isra.2+0x42>
		for( x = ( UBaseType_t ) 0; x < ( UBaseType_t ) configMAX_TASK_NAME_LEN; x++ )
 8007762:	42ab      	cmp	r3, r5
 8007764:	d1f7      	bne.n	8007756 <prvInitialiseNewTask.isra.2+0x32>
		pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
 8007766:	2300      	movs	r3, #0
 8007768:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 800776c:	9d08      	ldr	r5, [sp, #32]
 800776e:	2d37      	cmp	r5, #55	; 0x37
 8007770:	bf28      	it	cs
 8007772:	2537      	movcs	r5, #55	; 0x37
		pxNewTCB->uxMutexesHeld = 0;
 8007774:	f04f 0a00 	mov.w	sl, #0
	pxNewTCB->uxPriority = uxPriority;
 8007778:	62e5      	str	r5, [r4, #44]	; 0x2c
		pxNewTCB->uxBasePriority = uxPriority;
 800777a:	64e5      	str	r5, [r4, #76]	; 0x4c
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 800777c:	1d20      	adds	r0, r4, #4
		pxNewTCB->uxMutexesHeld = 0;
 800777e:	f8c4 a050 	str.w	sl, [r4, #80]	; 0x50
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 8007782:	f7ff f806 	bl	8006792 <vListInitialiseItem>
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8007786:	f1c5 0538 	rsb	r5, r5, #56	; 0x38
	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
 800778a:	f104 0018 	add.w	r0, r4, #24
 800778e:	f7ff f800 	bl	8006792 <vListInitialiseItem>
		pxNewTCB->ulNotifiedValue = 0;
 8007792:	f8c4 a058 	str.w	sl, [r4, #88]	; 0x58
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
 8007796:	6124      	str	r4, [r4, #16]
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8007798:	61a5      	str	r5, [r4, #24]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
 800779a:	6264      	str	r4, [r4, #36]	; 0x24
		pxNewTCB->pxTaskTag = NULL;
 800779c:	f8c4 a054 	str.w	sl, [r4, #84]	; 0x54
		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
 80077a0:	f884 a05c 	strb.w	sl, [r4, #92]	; 0x5c
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
 80077a4:	4642      	mov	r2, r8
 80077a6:	4639      	mov	r1, r7
 80077a8:	4648      	mov	r0, r9
 80077aa:	f7ff f867 	bl	800687c <pxPortInitialiseStack>
 80077ae:	6020      	str	r0, [r4, #0]
	if( pxCreatedTask != NULL )
 80077b0:	b106      	cbz	r6, 80077b4 <prvInitialiseNewTask.isra.2+0x90>
		*pxCreatedTask = ( TaskHandle_t ) pxNewTCB;
 80077b2:	6034      	str	r4, [r6, #0]
}
 80077b4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
		pxNewTCB->pcTaskName[ 0 ] = 0x00;
 80077b8:	f884 5034 	strb.w	r5, [r4, #52]	; 0x34
 80077bc:	e7d6      	b.n	800776c <prvInitialiseNewTask.isra.2+0x48>
	...

080077c0 <prvAddCurrentTaskToDelayedList>:
	}
#endif
/*-----------------------------------------------------------*/

static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait, const BaseType_t xCanBlockIndefinitely )
{
 80077c0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
TickType_t xTimeToWake;
const TickType_t xConstTickCount = xTickCount;
 80077c2:	4b16      	ldr	r3, [pc, #88]	; (800781c <prvAddCurrentTaskToDelayedList+0x5c>)
	}
	#endif

	/* Remove the task from the ready list before adding it to the blocked list
	as the same list item is used for both lists. */
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 80077c4:	4e16      	ldr	r6, [pc, #88]	; (8007820 <prvAddCurrentTaskToDelayedList+0x60>)
const TickType_t xConstTickCount = xTickCount;
 80077c6:	681c      	ldr	r4, [r3, #0]
{
 80077c8:	4605      	mov	r5, r0
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 80077ca:	6830      	ldr	r0, [r6, #0]
 80077cc:	3004      	adds	r0, #4
{
 80077ce:	460f      	mov	r7, r1
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 80077d0:	f7ff f805 	bl	80067de <uxListRemove>
		mtCOVERAGE_TEST_MARKER();
	}

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		if( ( xTicksToWait == portMAX_DELAY ) && ( xCanBlockIndefinitely != pdFALSE ) )
 80077d4:	1c6b      	adds	r3, r5, #1
 80077d6:	4633      	mov	r3, r6
 80077d8:	d107      	bne.n	80077ea <prvAddCurrentTaskToDelayedList+0x2a>
 80077da:	b137      	cbz	r7, 80077ea <prvAddCurrentTaskToDelayedList+0x2a>
		{
			/* Add the task to the suspended task list instead of a delayed task
			list to ensure it is not woken by a timing event.  It will block
			indefinitely. */
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 80077dc:	6831      	ldr	r1, [r6, #0]
 80077de:	4811      	ldr	r0, [pc, #68]	; (8007824 <prvAddCurrentTaskToDelayedList+0x64>)
 80077e0:	3104      	adds	r1, #4

		/* Avoid compiler warning when INCLUDE_vTaskSuspend is not 1. */
		( void ) xCanBlockIndefinitely;
	}
	#endif /* INCLUDE_vTaskSuspend */
}
 80077e2:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 80077e6:	f7fe bfd7 	b.w	8006798 <vListInsertEnd>
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
 80077ea:	681a      	ldr	r2, [r3, #0]
 80077ec:	1964      	adds	r4, r4, r5
 80077ee:	6054      	str	r4, [r2, #4]
			if( xTimeToWake < xConstTickCount )
 80077f0:	d307      	bcc.n	8007802 <prvAddCurrentTaskToDelayedList+0x42>
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 80077f2:	4a0d      	ldr	r2, [pc, #52]	; (8007828 <prvAddCurrentTaskToDelayedList+0x68>)
 80077f4:	6810      	ldr	r0, [r2, #0]
 80077f6:	6819      	ldr	r1, [r3, #0]
}
 80077f8:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 80077fc:	3104      	adds	r1, #4
 80077fe:	f7fe bfd7 	b.w	80067b0 <vListInsert>
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8007802:	4a0a      	ldr	r2, [pc, #40]	; (800782c <prvAddCurrentTaskToDelayedList+0x6c>)
 8007804:	6810      	ldr	r0, [r2, #0]
 8007806:	6819      	ldr	r1, [r3, #0]
 8007808:	3104      	adds	r1, #4
 800780a:	f7fe ffd1 	bl	80067b0 <vListInsert>
				if( xTimeToWake < xNextTaskUnblockTime )
 800780e:	4b08      	ldr	r3, [pc, #32]	; (8007830 <prvAddCurrentTaskToDelayedList+0x70>)
 8007810:	681a      	ldr	r2, [r3, #0]
 8007812:	42a2      	cmp	r2, r4
					xNextTaskUnblockTime = xTimeToWake;
 8007814:	bf88      	it	hi
 8007816:	601c      	strhi	r4, [r3, #0]
}
 8007818:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800781a:	bf00      	nop
 800781c:	2001204c 	.word	0x2001204c
 8007820:	20011b58 	.word	0x20011b58
 8007824:	20012024 	.word	0x20012024
 8007828:	20011b60 	.word	0x20011b60
 800782c:	20011b5c 	.word	0x20011b5c
 8007830:	20012004 	.word	0x20012004

08007834 <xTaskCreateStatic>:
	{
 8007834:	b570      	push	{r4, r5, r6, lr}
 8007836:	b086      	sub	sp, #24
 8007838:	e9dd 540b 	ldrd	r5, r4, [sp, #44]	; 0x2c
		configASSERT( puxStackBuffer != NULL );
 800783c:	b945      	cbnz	r5, 8007850 <xTaskCreateStatic+0x1c>
 800783e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007842:	f383 8811 	msr	BASEPRI, r3
 8007846:	f3bf 8f6f 	isb	sy
 800784a:	f3bf 8f4f 	dsb	sy
 800784e:	e7fe      	b.n	800784e <xTaskCreateStatic+0x1a>
		configASSERT( pxTaskBuffer != NULL );
 8007850:	b944      	cbnz	r4, 8007864 <xTaskCreateStatic+0x30>
 8007852:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007856:	f383 8811 	msr	BASEPRI, r3
 800785a:	f3bf 8f6f 	isb	sy
 800785e:	f3bf 8f4f 	dsb	sy
 8007862:	e7fe      	b.n	8007862 <xTaskCreateStatic+0x2e>
			volatile size_t xSize = sizeof( StaticTask_t );
 8007864:	2660      	movs	r6, #96	; 0x60
 8007866:	9605      	str	r6, [sp, #20]
			configASSERT( xSize == sizeof( TCB_t ) );
 8007868:	9e05      	ldr	r6, [sp, #20]
 800786a:	2e60      	cmp	r6, #96	; 0x60
 800786c:	d008      	beq.n	8007880 <xTaskCreateStatic+0x4c>
 800786e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007872:	f383 8811 	msr	BASEPRI, r3
 8007876:	f3bf 8f6f 	isb	sy
 800787a:	f3bf 8f4f 	dsb	sy
 800787e:	e7fe      	b.n	800787e <xTaskCreateStatic+0x4a>
			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
 8007880:	6325      	str	r5, [r4, #48]	; 0x30
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 8007882:	2502      	movs	r5, #2
 8007884:	f884 505d 	strb.w	r5, [r4, #93]	; 0x5d
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 8007888:	ad04      	add	r5, sp, #16
 800788a:	9501      	str	r5, [sp, #4]
 800788c:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 800788e:	9402      	str	r4, [sp, #8]
 8007890:	9500      	str	r5, [sp, #0]
			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
 8007892:	9e05      	ldr	r6, [sp, #20]
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 8007894:	f7ff ff46 	bl	8007724 <prvInitialiseNewTask.isra.2>
			prvAddNewTaskToReadyList( pxNewTCB );
 8007898:	4620      	mov	r0, r4
 800789a:	f7ff fe63 	bl	8007564 <prvAddNewTaskToReadyList>
	}
 800789e:	9804      	ldr	r0, [sp, #16]
 80078a0:	b006      	add	sp, #24
 80078a2:	bd70      	pop	{r4, r5, r6, pc}

080078a4 <xTaskCreate>:
	{
 80078a4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80078a8:	4607      	mov	r7, r0
 80078aa:	b085      	sub	sp, #20
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 80078ac:	0090      	lsls	r0, r2, #2
	{
 80078ae:	4688      	mov	r8, r1
 80078b0:	4616      	mov	r6, r2
 80078b2:	4699      	mov	r9, r3
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 80078b4:	f7fe fe9e 	bl	80065f4 <pvPortMalloc>
			if( pxStack != NULL )
 80078b8:	4605      	mov	r5, r0
 80078ba:	b1e8      	cbz	r0, 80078f8 <xTaskCreate+0x54>
				pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) ); /*lint !e9087 !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack, and the first member of TCB_t is always a pointer to the task's stack. */
 80078bc:	2060      	movs	r0, #96	; 0x60
 80078be:	f7fe fe99 	bl	80065f4 <pvPortMalloc>
				if( pxNewTCB != NULL )
 80078c2:	4604      	mov	r4, r0
 80078c4:	b1a8      	cbz	r0, 80078f2 <xTaskCreate+0x4e>
				pxNewTCB->ucStaticallyAllocated = tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB;
 80078c6:	2300      	movs	r3, #0
 80078c8:	f880 305d 	strb.w	r3, [r0, #93]	; 0x5d
			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
 80078cc:	9b0d      	ldr	r3, [sp, #52]	; 0x34
					pxNewTCB->pxStack = pxStack;
 80078ce:	6305      	str	r5, [r0, #48]	; 0x30
			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
 80078d0:	9301      	str	r3, [sp, #4]
 80078d2:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80078d4:	9002      	str	r0, [sp, #8]
 80078d6:	9300      	str	r3, [sp, #0]
 80078d8:	4632      	mov	r2, r6
 80078da:	464b      	mov	r3, r9
 80078dc:	4641      	mov	r1, r8
 80078de:	4638      	mov	r0, r7
 80078e0:	f7ff ff20 	bl	8007724 <prvInitialiseNewTask.isra.2>
			prvAddNewTaskToReadyList( pxNewTCB );
 80078e4:	4620      	mov	r0, r4
 80078e6:	f7ff fe3d 	bl	8007564 <prvAddNewTaskToReadyList>
			xReturn = pdPASS;
 80078ea:	2001      	movs	r0, #1
	}
 80078ec:	b005      	add	sp, #20
 80078ee:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
					vPortFree( pxStack );
 80078f2:	4628      	mov	r0, r5
 80078f4:	f7fe ff0a 	bl	800670c <vPortFree>
			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 80078f8:	f04f 30ff 	mov.w	r0, #4294967295
		return xReturn;
 80078fc:	e7f6      	b.n	80078ec <xTaskCreate+0x48>
	...

08007900 <vTaskStartScheduler>:
{
 8007900:	b510      	push	{r4, lr}
 8007902:	b088      	sub	sp, #32
		StaticTask_t *pxIdleTaskTCBBuffer = NULL;
 8007904:	2400      	movs	r4, #0
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 8007906:	aa07      	add	r2, sp, #28
 8007908:	a906      	add	r1, sp, #24
 800790a:	a805      	add	r0, sp, #20
		StackType_t *pxIdleTaskStackBuffer = NULL;
 800790c:	e9cd 4405 	strd	r4, r4, [sp, #20]
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 8007910:	f7fe fe34 	bl	800657c <vApplicationGetIdleTaskMemory>
		xIdleTaskHandle = xTaskCreateStatic(	prvIdleTask,
 8007914:	9b05      	ldr	r3, [sp, #20]
 8007916:	9302      	str	r3, [sp, #8]
 8007918:	9b06      	ldr	r3, [sp, #24]
 800791a:	9a07      	ldr	r2, [sp, #28]
 800791c:	4915      	ldr	r1, [pc, #84]	; (8007974 <vTaskStartScheduler+0x74>)
 800791e:	4816      	ldr	r0, [pc, #88]	; (8007978 <vTaskStartScheduler+0x78>)
 8007920:	e9cd 4300 	strd	r4, r3, [sp]
 8007924:	4623      	mov	r3, r4
 8007926:	f7ff ff85 	bl	8007834 <xTaskCreateStatic>
		if( xIdleTaskHandle != NULL )
 800792a:	b1a8      	cbz	r0, 8007958 <vTaskStartScheduler+0x58>
			xReturn = xTimerCreateTimerTask();
 800792c:	f000 fb7e 	bl	800802c <xTimerCreateTimerTask>
	if( xReturn == pdPASS )
 8007930:	2801      	cmp	r0, #1
 8007932:	d113      	bne.n	800795c <vTaskStartScheduler+0x5c>
 8007934:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007938:	f383 8811 	msr	BASEPRI, r3
 800793c:	f3bf 8f6f 	isb	sy
 8007940:	f3bf 8f4f 	dsb	sy
		xNextTaskUnblockTime = portMAX_DELAY;
 8007944:	4b0d      	ldr	r3, [pc, #52]	; (800797c <vTaskStartScheduler+0x7c>)
 8007946:	f04f 32ff 	mov.w	r2, #4294967295
 800794a:	601a      	str	r2, [r3, #0]
		xSchedulerRunning = pdTRUE;
 800794c:	4b0c      	ldr	r3, [pc, #48]	; (8007980 <vTaskStartScheduler+0x80>)
 800794e:	6018      	str	r0, [r3, #0]
		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
 8007950:	4b0c      	ldr	r3, [pc, #48]	; (8007984 <vTaskStartScheduler+0x84>)
 8007952:	601c      	str	r4, [r3, #0]
		if( xPortStartScheduler() != pdFALSE )
 8007954:	f7ff f856 	bl	8006a04 <xPortStartScheduler>
}
 8007958:	b008      	add	sp, #32
 800795a:	bd10      	pop	{r4, pc}
		configASSERT( xReturn != errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY );
 800795c:	3001      	adds	r0, #1
 800795e:	d1fb      	bne.n	8007958 <vTaskStartScheduler+0x58>
 8007960:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007964:	f383 8811 	msr	BASEPRI, r3
 8007968:	f3bf 8f6f 	isb	sy
 800796c:	f3bf 8f4f 	dsb	sy
 8007970:	e7fe      	b.n	8007970 <vTaskStartScheduler+0x70>
 8007972:	bf00      	nop
 8007974:	0801aa2c 	.word	0x0801aa2c
 8007978:	0800769d 	.word	0x0800769d
 800797c:	20012004 	.word	0x20012004
 8007980:	20012020 	.word	0x20012020
 8007984:	2001204c 	.word	0x2001204c

08007988 <vTaskSuspendAll>:
	++uxSchedulerSuspended;
 8007988:	4a02      	ldr	r2, [pc, #8]	; (8007994 <vTaskSuspendAll+0xc>)
 800798a:	6813      	ldr	r3, [r2, #0]
 800798c:	3301      	adds	r3, #1
 800798e:	6013      	str	r3, [r2, #0]
}
 8007990:	4770      	bx	lr
 8007992:	bf00      	nop
 8007994:	20011fd0 	.word	0x20011fd0

08007998 <xTaskGetTickCount>:
		xTicks = xTickCount;
 8007998:	4b01      	ldr	r3, [pc, #4]	; (80079a0 <xTaskGetTickCount+0x8>)
 800799a:	6818      	ldr	r0, [r3, #0]
}
 800799c:	4770      	bx	lr
 800799e:	bf00      	nop
 80079a0:	2001204c 	.word	0x2001204c

080079a4 <xTaskIncrementTick>:
{
 80079a4:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 80079a8:	4b3b      	ldr	r3, [pc, #236]	; (8007a98 <xTaskIncrementTick+0xf4>)
 80079aa:	681b      	ldr	r3, [r3, #0]
 80079ac:	2b00      	cmp	r3, #0
 80079ae:	d16c      	bne.n	8007a8a <xTaskIncrementTick+0xe6>
		const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
 80079b0:	4b3a      	ldr	r3, [pc, #232]	; (8007a9c <xTaskIncrementTick+0xf8>)
 80079b2:	681c      	ldr	r4, [r3, #0]
 80079b4:	3401      	adds	r4, #1
		xTickCount = xConstTickCount;
 80079b6:	601c      	str	r4, [r3, #0]
		if( xConstTickCount == ( TickType_t ) 0U ) /*lint !e774 'if' does not always evaluate to false as it is looking for an overflow. */
 80079b8:	b9bc      	cbnz	r4, 80079ea <xTaskIncrementTick+0x46>
			taskSWITCH_DELAYED_LISTS();
 80079ba:	4b39      	ldr	r3, [pc, #228]	; (8007aa0 <xTaskIncrementTick+0xfc>)
 80079bc:	681a      	ldr	r2, [r3, #0]
 80079be:	6812      	ldr	r2, [r2, #0]
 80079c0:	b142      	cbz	r2, 80079d4 <xTaskIncrementTick+0x30>
 80079c2:	f04f 0350 	mov.w	r3, #80	; 0x50
 80079c6:	f383 8811 	msr	BASEPRI, r3
 80079ca:	f3bf 8f6f 	isb	sy
 80079ce:	f3bf 8f4f 	dsb	sy
 80079d2:	e7fe      	b.n	80079d2 <xTaskIncrementTick+0x2e>
 80079d4:	4a33      	ldr	r2, [pc, #204]	; (8007aa4 <xTaskIncrementTick+0x100>)
 80079d6:	6819      	ldr	r1, [r3, #0]
 80079d8:	6810      	ldr	r0, [r2, #0]
 80079da:	6018      	str	r0, [r3, #0]
 80079dc:	6011      	str	r1, [r2, #0]
 80079de:	4a32      	ldr	r2, [pc, #200]	; (8007aa8 <xTaskIncrementTick+0x104>)
 80079e0:	6813      	ldr	r3, [r2, #0]
 80079e2:	3301      	adds	r3, #1
 80079e4:	6013      	str	r3, [r2, #0]
 80079e6:	f7ff fe8b 	bl	8007700 <prvResetNextTaskUnblockTime>
		if( xConstTickCount >= xNextTaskUnblockTime )
 80079ea:	4d30      	ldr	r5, [pc, #192]	; (8007aac <xTaskIncrementTick+0x108>)
 80079ec:	4f30      	ldr	r7, [pc, #192]	; (8007ab0 <xTaskIncrementTick+0x10c>)
 80079ee:	682b      	ldr	r3, [r5, #0]
 80079f0:	42a3      	cmp	r3, r4
BaseType_t xSwitchRequired = pdFALSE;
 80079f2:	f04f 0b00 	mov.w	fp, #0
		if( xConstTickCount >= xNextTaskUnblockTime )
 80079f6:	d911      	bls.n	8007a1c <xTaskIncrementTick+0x78>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_t ) 1 )
 80079f8:	683a      	ldr	r2, [r7, #0]
 80079fa:	4b2e      	ldr	r3, [pc, #184]	; (8007ab4 <xTaskIncrementTick+0x110>)
 80079fc:	6ad1      	ldr	r1, [r2, #44]	; 0x2c
 80079fe:	2214      	movs	r2, #20
 8007a00:	434a      	muls	r2, r1
 8007a02:	589a      	ldr	r2, [r3, r2]
				xSwitchRequired = pdTRUE;
 8007a04:	2a02      	cmp	r2, #2
 8007a06:	bf28      	it	cs
 8007a08:	f04f 0b01 	movcs.w	fp, #1
		if( xYieldPending != pdFALSE )
 8007a0c:	4a2a      	ldr	r2, [pc, #168]	; (8007ab8 <xTaskIncrementTick+0x114>)
 8007a0e:	6812      	ldr	r2, [r2, #0]
			xSwitchRequired = pdTRUE;
 8007a10:	2a00      	cmp	r2, #0
}
 8007a12:	bf0c      	ite	eq
 8007a14:	4658      	moveq	r0, fp
 8007a16:	2001      	movne	r0, #1
 8007a18:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 8007a1c:	f8df 9080 	ldr.w	r9, [pc, #128]	; 8007aa0 <xTaskIncrementTick+0xfc>
					prvAddTaskToReadyList( pxTCB );
 8007a20:	f8df a09c 	ldr.w	sl, [pc, #156]	; 8007ac0 <xTaskIncrementTick+0x11c>
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 8007a24:	f8d9 2000 	ldr.w	r2, [r9]
 8007a28:	6812      	ldr	r2, [r2, #0]
 8007a2a:	b91a      	cbnz	r2, 8007a34 <xTaskIncrementTick+0x90>
					xNextTaskUnblockTime = portMAX_DELAY; /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8007a2c:	f04f 32ff 	mov.w	r2, #4294967295
 8007a30:	602a      	str	r2, [r5, #0]
					break;
 8007a32:	e7e1      	b.n	80079f8 <xTaskIncrementTick+0x54>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8007a34:	f8d9 2000 	ldr.w	r2, [r9]
 8007a38:	68d2      	ldr	r2, [r2, #12]
 8007a3a:	68d6      	ldr	r6, [r2, #12]
					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
 8007a3c:	6871      	ldr	r1, [r6, #4]
					if( xConstTickCount < xItemValue )
 8007a3e:	428c      	cmp	r4, r1
 8007a40:	d201      	bcs.n	8007a46 <xTaskIncrementTick+0xa2>
						xNextTaskUnblockTime = xItemValue;
 8007a42:	6029      	str	r1, [r5, #0]
						break; /*lint !e9011 Code structure here is deedmed easier to understand with multiple breaks. */
 8007a44:	e7d8      	b.n	80079f8 <xTaskIncrementTick+0x54>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 8007a46:	f106 0804 	add.w	r8, r6, #4
 8007a4a:	4640      	mov	r0, r8
 8007a4c:	f7fe fec7 	bl	80067de <uxListRemove>
					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
 8007a50:	6ab1      	ldr	r1, [r6, #40]	; 0x28
 8007a52:	b119      	cbz	r1, 8007a5c <xTaskIncrementTick+0xb8>
						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 8007a54:	f106 0018 	add.w	r0, r6, #24
 8007a58:	f7fe fec1 	bl	80067de <uxListRemove>
					prvAddTaskToReadyList( pxTCB );
 8007a5c:	6af0      	ldr	r0, [r6, #44]	; 0x2c
 8007a5e:	f8da 1000 	ldr.w	r1, [sl]
 8007a62:	4b14      	ldr	r3, [pc, #80]	; (8007ab4 <xTaskIncrementTick+0x110>)
 8007a64:	4288      	cmp	r0, r1
 8007a66:	f04f 0214 	mov.w	r2, #20
 8007a6a:	bf88      	it	hi
 8007a6c:	f8ca 0000 	strhi.w	r0, [sl]
 8007a70:	4641      	mov	r1, r8
 8007a72:	fb02 3000 	mla	r0, r2, r0, r3
 8007a76:	f7fe fe8f 	bl	8006798 <vListInsertEnd>
						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 8007a7a:	6838      	ldr	r0, [r7, #0]
 8007a7c:	6af1      	ldr	r1, [r6, #44]	; 0x2c
 8007a7e:	6ac2      	ldr	r2, [r0, #44]	; 0x2c
							xSwitchRequired = pdTRUE;
 8007a80:	4291      	cmp	r1, r2
 8007a82:	bf28      	it	cs
 8007a84:	f04f 0b01 	movcs.w	fp, #1
 8007a88:	e7cc      	b.n	8007a24 <xTaskIncrementTick+0x80>
		++uxPendedTicks;
 8007a8a:	4a0c      	ldr	r2, [pc, #48]	; (8007abc <xTaskIncrementTick+0x118>)
 8007a8c:	6813      	ldr	r3, [r2, #0]
 8007a8e:	3301      	adds	r3, #1
 8007a90:	6013      	str	r3, [r2, #0]
BaseType_t xSwitchRequired = pdFALSE;
 8007a92:	f04f 0b00 	mov.w	fp, #0
 8007a96:	e7b9      	b.n	8007a0c <xTaskIncrementTick+0x68>
 8007a98:	20011fd0 	.word	0x20011fd0
 8007a9c:	2001204c 	.word	0x2001204c
 8007aa0:	20011b5c 	.word	0x20011b5c
 8007aa4:	20011b60 	.word	0x20011b60
 8007aa8:	20012008 	.word	0x20012008
 8007aac:	20012004 	.word	0x20012004
 8007ab0:	20011b58 	.word	0x20011b58
 8007ab4:	20011b64 	.word	0x20011b64
 8007ab8:	20012050 	.word	0x20012050
 8007abc:	20011fcc 	.word	0x20011fcc
 8007ac0:	20011fd8 	.word	0x20011fd8

08007ac4 <xTaskResumeAll>:
{
 8007ac4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
	configASSERT( uxSchedulerSuspended );
 8007ac8:	4c2f      	ldr	r4, [pc, #188]	; (8007b88 <xTaskResumeAll+0xc4>)
 8007aca:	6823      	ldr	r3, [r4, #0]
 8007acc:	b943      	cbnz	r3, 8007ae0 <xTaskResumeAll+0x1c>
 8007ace:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007ad2:	f383 8811 	msr	BASEPRI, r3
 8007ad6:	f3bf 8f6f 	isb	sy
 8007ada:	f3bf 8f4f 	dsb	sy
 8007ade:	e7fe      	b.n	8007ade <xTaskResumeAll+0x1a>
	taskENTER_CRITICAL();
 8007ae0:	f7fe fef8 	bl	80068d4 <vPortEnterCritical>
		--uxSchedulerSuspended;
 8007ae4:	6823      	ldr	r3, [r4, #0]
 8007ae6:	3b01      	subs	r3, #1
 8007ae8:	6023      	str	r3, [r4, #0]
		if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 8007aea:	6824      	ldr	r4, [r4, #0]
 8007aec:	b12c      	cbz	r4, 8007afa <xTaskResumeAll+0x36>
BaseType_t xAlreadyYielded = pdFALSE;
 8007aee:	2400      	movs	r4, #0
	taskEXIT_CRITICAL();
 8007af0:	f7fe ff12 	bl	8006918 <vPortExitCritical>
}
 8007af4:	4620      	mov	r0, r4
 8007af6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
			if( uxCurrentNumberOfTasks > ( UBaseType_t ) 0U )
 8007afa:	4b24      	ldr	r3, [pc, #144]	; (8007b8c <xTaskResumeAll+0xc8>)
 8007afc:	681b      	ldr	r3, [r3, #0]
 8007afe:	2b00      	cmp	r3, #0
 8007b00:	d0f5      	beq.n	8007aee <xTaskResumeAll+0x2a>
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 8007b02:	4d23      	ldr	r5, [pc, #140]	; (8007b90 <xTaskResumeAll+0xcc>)
					prvAddTaskToReadyList( pxTCB );
 8007b04:	4e23      	ldr	r6, [pc, #140]	; (8007b94 <xTaskResumeAll+0xd0>)
 8007b06:	f8df 80a0 	ldr.w	r8, [pc, #160]	; 8007ba8 <xTaskResumeAll+0xe4>
 8007b0a:	e01d      	b.n	8007b48 <xTaskResumeAll+0x84>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xPendingReadyList ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8007b0c:	68eb      	ldr	r3, [r5, #12]
 8007b0e:	68dc      	ldr	r4, [r3, #12]
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 8007b10:	1d27      	adds	r7, r4, #4
					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 8007b12:	f104 0018 	add.w	r0, r4, #24
 8007b16:	f7fe fe62 	bl	80067de <uxListRemove>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 8007b1a:	4638      	mov	r0, r7
 8007b1c:	f7fe fe5f 	bl	80067de <uxListRemove>
					prvAddTaskToReadyList( pxTCB );
 8007b20:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8007b22:	6832      	ldr	r2, [r6, #0]
 8007b24:	2014      	movs	r0, #20
 8007b26:	4293      	cmp	r3, r2
 8007b28:	fb00 8003 	mla	r0, r0, r3, r8
 8007b2c:	4639      	mov	r1, r7
 8007b2e:	bf88      	it	hi
 8007b30:	6033      	strhi	r3, [r6, #0]
 8007b32:	f7fe fe31 	bl	8006798 <vListInsertEnd>
					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 8007b36:	4b18      	ldr	r3, [pc, #96]	; (8007b98 <xTaskResumeAll+0xd4>)
 8007b38:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8007b3a:	681b      	ldr	r3, [r3, #0]
 8007b3c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8007b3e:	429a      	cmp	r2, r3
 8007b40:	d302      	bcc.n	8007b48 <xTaskResumeAll+0x84>
						xYieldPending = pdTRUE;
 8007b42:	4b16      	ldr	r3, [pc, #88]	; (8007b9c <xTaskResumeAll+0xd8>)
 8007b44:	2201      	movs	r2, #1
 8007b46:	601a      	str	r2, [r3, #0]
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 8007b48:	682b      	ldr	r3, [r5, #0]
 8007b4a:	2b00      	cmp	r3, #0
 8007b4c:	d1de      	bne.n	8007b0c <xTaskResumeAll+0x48>
				if( pxTCB != NULL )
 8007b4e:	b10c      	cbz	r4, 8007b54 <xTaskResumeAll+0x90>
					prvResetNextTaskUnblockTime();
 8007b50:	f7ff fdd6 	bl	8007700 <prvResetNextTaskUnblockTime>
					UBaseType_t uxPendedCounts = uxPendedTicks; /* Non-volatile copy. */
 8007b54:	4d12      	ldr	r5, [pc, #72]	; (8007ba0 <xTaskResumeAll+0xdc>)
 8007b56:	682c      	ldr	r4, [r5, #0]
					if( uxPendedCounts > ( UBaseType_t ) 0U )
 8007b58:	b144      	cbz	r4, 8007b6c <xTaskResumeAll+0xa8>
								xYieldPending = pdTRUE;
 8007b5a:	4e10      	ldr	r6, [pc, #64]	; (8007b9c <xTaskResumeAll+0xd8>)
 8007b5c:	2701      	movs	r7, #1
							if( xTaskIncrementTick() != pdFALSE )
 8007b5e:	f7ff ff21 	bl	80079a4 <xTaskIncrementTick>
 8007b62:	b100      	cbz	r0, 8007b66 <xTaskResumeAll+0xa2>
								xYieldPending = pdTRUE;
 8007b64:	6037      	str	r7, [r6, #0]
						} while( uxPendedCounts > ( UBaseType_t ) 0U );
 8007b66:	3c01      	subs	r4, #1
 8007b68:	d1f9      	bne.n	8007b5e <xTaskResumeAll+0x9a>
						uxPendedTicks = 0;
 8007b6a:	602c      	str	r4, [r5, #0]
				if( xYieldPending != pdFALSE )
 8007b6c:	4b0b      	ldr	r3, [pc, #44]	; (8007b9c <xTaskResumeAll+0xd8>)
 8007b6e:	681b      	ldr	r3, [r3, #0]
 8007b70:	2b00      	cmp	r3, #0
 8007b72:	d0bc      	beq.n	8007aee <xTaskResumeAll+0x2a>
					taskYIELD_IF_USING_PREEMPTION();
 8007b74:	4b0b      	ldr	r3, [pc, #44]	; (8007ba4 <xTaskResumeAll+0xe0>)
 8007b76:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8007b7a:	601a      	str	r2, [r3, #0]
 8007b7c:	f3bf 8f4f 	dsb	sy
 8007b80:	f3bf 8f6f 	isb	sy
						xAlreadyYielded = pdTRUE;
 8007b84:	2401      	movs	r4, #1
 8007b86:	e7b3      	b.n	8007af0 <xTaskResumeAll+0x2c>
 8007b88:	20011fd0 	.word	0x20011fd0
 8007b8c:	20011fc4 	.word	0x20011fc4
 8007b90:	2001200c 	.word	0x2001200c
 8007b94:	20011fd8 	.word	0x20011fd8
 8007b98:	20011b58 	.word	0x20011b58
 8007b9c:	20012050 	.word	0x20012050
 8007ba0:	20011fcc 	.word	0x20011fcc
 8007ba4:	e000ed04 	.word	0xe000ed04
 8007ba8:	20011b64 	.word	0x20011b64

08007bac <vTaskSwitchContext>:
	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
 8007bac:	4b18      	ldr	r3, [pc, #96]	; (8007c10 <vTaskSwitchContext+0x64>)
 8007bae:	681a      	ldr	r2, [r3, #0]
 8007bb0:	4b18      	ldr	r3, [pc, #96]	; (8007c14 <vTaskSwitchContext+0x68>)
{
 8007bb2:	b5f0      	push	{r4, r5, r6, r7, lr}
	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
 8007bb4:	b112      	cbz	r2, 8007bbc <vTaskSwitchContext+0x10>
		xYieldPending = pdTRUE;
 8007bb6:	2201      	movs	r2, #1
 8007bb8:	601a      	str	r2, [r3, #0]
}
 8007bba:	bdf0      	pop	{r4, r5, r6, r7, pc}
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8007bbc:	4d16      	ldr	r5, [pc, #88]	; (8007c18 <vTaskSwitchContext+0x6c>)
		xYieldPending = pdFALSE;
 8007bbe:	601a      	str	r2, [r3, #0]
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8007bc0:	4a16      	ldr	r2, [pc, #88]	; (8007c1c <vTaskSwitchContext+0x70>)
 8007bc2:	682b      	ldr	r3, [r5, #0]
 8007bc4:	2714      	movs	r7, #20
 8007bc6:	4616      	mov	r6, r2
 8007bc8:	fb07 f103 	mul.w	r1, r7, r3
 8007bcc:	1850      	adds	r0, r2, r1
 8007bce:	5854      	ldr	r4, [r2, r1]
 8007bd0:	b18c      	cbz	r4, 8007bf6 <vTaskSwitchContext+0x4a>
 8007bd2:	6844      	ldr	r4, [r0, #4]
 8007bd4:	3108      	adds	r1, #8
 8007bd6:	6864      	ldr	r4, [r4, #4]
 8007bd8:	6044      	str	r4, [r0, #4]
 8007bda:	440a      	add	r2, r1
 8007bdc:	4294      	cmp	r4, r2
 8007bde:	bf04      	itt	eq
 8007be0:	6862      	ldreq	r2, [r4, #4]
 8007be2:	6042      	streq	r2, [r0, #4]
 8007be4:	2214      	movs	r2, #20
 8007be6:	fb02 6203 	mla	r2, r2, r3, r6
 8007bea:	6852      	ldr	r2, [r2, #4]
 8007bec:	68d1      	ldr	r1, [r2, #12]
 8007bee:	4a0c      	ldr	r2, [pc, #48]	; (8007c20 <vTaskSwitchContext+0x74>)
 8007bf0:	6011      	str	r1, [r2, #0]
 8007bf2:	602b      	str	r3, [r5, #0]
}
 8007bf4:	e7e1      	b.n	8007bba <vTaskSwitchContext+0xe>
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8007bf6:	b943      	cbnz	r3, 8007c0a <vTaskSwitchContext+0x5e>
 8007bf8:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007bfc:	f383 8811 	msr	BASEPRI, r3
 8007c00:	f3bf 8f6f 	isb	sy
 8007c04:	f3bf 8f4f 	dsb	sy
 8007c08:	e7fe      	b.n	8007c08 <vTaskSwitchContext+0x5c>
 8007c0a:	3b01      	subs	r3, #1
 8007c0c:	e7dc      	b.n	8007bc8 <vTaskSwitchContext+0x1c>
 8007c0e:	bf00      	nop
 8007c10:	20011fd0 	.word	0x20011fd0
 8007c14:	20012050 	.word	0x20012050
 8007c18:	20011fd8 	.word	0x20011fd8
 8007c1c:	20011b64 	.word	0x20011b64
 8007c20:	20011b58 	.word	0x20011b58

08007c24 <vTaskPlaceOnEventList>:
{
 8007c24:	b510      	push	{r4, lr}
 8007c26:	460c      	mov	r4, r1
	configASSERT( pxEventList );
 8007c28:	b940      	cbnz	r0, 8007c3c <vTaskPlaceOnEventList+0x18>
 8007c2a:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007c2e:	f383 8811 	msr	BASEPRI, r3
 8007c32:	f3bf 8f6f 	isb	sy
 8007c36:	f3bf 8f4f 	dsb	sy
 8007c3a:	e7fe      	b.n	8007c3a <vTaskPlaceOnEventList+0x16>
	vListInsert( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 8007c3c:	4b05      	ldr	r3, [pc, #20]	; (8007c54 <vTaskPlaceOnEventList+0x30>)
 8007c3e:	6819      	ldr	r1, [r3, #0]
 8007c40:	3118      	adds	r1, #24
 8007c42:	f7fe fdb5 	bl	80067b0 <vListInsert>
	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
 8007c46:	4620      	mov	r0, r4
 8007c48:	2101      	movs	r1, #1
}
 8007c4a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
 8007c4e:	f7ff bdb7 	b.w	80077c0 <prvAddCurrentTaskToDelayedList>
 8007c52:	bf00      	nop
 8007c54:	20011b58 	.word	0x20011b58

08007c58 <vTaskPlaceOnEventListRestricted>:
	{
 8007c58:	b538      	push	{r3, r4, r5, lr}
 8007c5a:	460d      	mov	r5, r1
 8007c5c:	4614      	mov	r4, r2
		configASSERT( pxEventList );
 8007c5e:	b940      	cbnz	r0, 8007c72 <vTaskPlaceOnEventListRestricted+0x1a>
 8007c60:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007c64:	f383 8811 	msr	BASEPRI, r3
 8007c68:	f3bf 8f6f 	isb	sy
 8007c6c:	f3bf 8f4f 	dsb	sy
 8007c70:	e7fe      	b.n	8007c70 <vTaskPlaceOnEventListRestricted+0x18>
		vListInsertEnd( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 8007c72:	4b07      	ldr	r3, [pc, #28]	; (8007c90 <vTaskPlaceOnEventListRestricted+0x38>)
 8007c74:	6819      	ldr	r1, [r3, #0]
 8007c76:	3118      	adds	r1, #24
 8007c78:	f7fe fd8e 	bl	8006798 <vListInsertEnd>
			xTicksToWait = portMAX_DELAY;
 8007c7c:	2c00      	cmp	r4, #0
		prvAddCurrentTaskToDelayedList( xTicksToWait, xWaitIndefinitely );
 8007c7e:	4621      	mov	r1, r4
 8007c80:	bf0c      	ite	eq
 8007c82:	4628      	moveq	r0, r5
 8007c84:	f04f 30ff 	movne.w	r0, #4294967295
	}
 8007c88:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		prvAddCurrentTaskToDelayedList( xTicksToWait, xWaitIndefinitely );
 8007c8c:	f7ff bd98 	b.w	80077c0 <prvAddCurrentTaskToDelayedList>
 8007c90:	20011b58 	.word	0x20011b58

08007c94 <xTaskRemoveFromEventList>:
{
 8007c94:	b538      	push	{r3, r4, r5, lr}
	pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8007c96:	68c3      	ldr	r3, [r0, #12]
 8007c98:	68dc      	ldr	r4, [r3, #12]
	configASSERT( pxUnblockedTCB );
 8007c9a:	b944      	cbnz	r4, 8007cae <xTaskRemoveFromEventList+0x1a>
 8007c9c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007ca0:	f383 8811 	msr	BASEPRI, r3
 8007ca4:	f3bf 8f6f 	isb	sy
 8007ca8:	f3bf 8f4f 	dsb	sy
 8007cac:	e7fe      	b.n	8007cac <xTaskRemoveFromEventList+0x18>
	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
 8007cae:	f104 0518 	add.w	r5, r4, #24
 8007cb2:	4628      	mov	r0, r5
 8007cb4:	f7fe fd93 	bl	80067de <uxListRemove>
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 8007cb8:	4b10      	ldr	r3, [pc, #64]	; (8007cfc <xTaskRemoveFromEventList+0x68>)
 8007cba:	681b      	ldr	r3, [r3, #0]
 8007cbc:	b9db      	cbnz	r3, 8007cf6 <xTaskRemoveFromEventList+0x62>
		( void ) uxListRemove( &( pxUnblockedTCB->xStateListItem ) );
 8007cbe:	1d25      	adds	r5, r4, #4
 8007cc0:	4628      	mov	r0, r5
 8007cc2:	f7fe fd8c 	bl	80067de <uxListRemove>
		prvAddTaskToReadyList( pxUnblockedTCB );
 8007cc6:	4a0e      	ldr	r2, [pc, #56]	; (8007d00 <xTaskRemoveFromEventList+0x6c>)
 8007cc8:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8007cca:	6811      	ldr	r1, [r2, #0]
 8007ccc:	428b      	cmp	r3, r1
 8007cce:	bf88      	it	hi
 8007cd0:	6013      	strhi	r3, [r2, #0]
 8007cd2:	4a0c      	ldr	r2, [pc, #48]	; (8007d04 <xTaskRemoveFromEventList+0x70>)
 8007cd4:	2014      	movs	r0, #20
 8007cd6:	4629      	mov	r1, r5
 8007cd8:	fb00 2003 	mla	r0, r0, r3, r2
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
 8007cdc:	f7fe fd5c 	bl	8006798 <vListInsertEnd>
	if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
 8007ce0:	4b09      	ldr	r3, [pc, #36]	; (8007d08 <xTaskRemoveFromEventList+0x74>)
 8007ce2:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8007ce4:	681b      	ldr	r3, [r3, #0]
 8007ce6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8007ce8:	429a      	cmp	r2, r3
		xYieldPending = pdTRUE;
 8007cea:	bf83      	ittte	hi
 8007cec:	4b07      	ldrhi	r3, [pc, #28]	; (8007d0c <xTaskRemoveFromEventList+0x78>)
 8007cee:	2001      	movhi	r0, #1
 8007cf0:	6018      	strhi	r0, [r3, #0]
		xReturn = pdFALSE;
 8007cf2:	2000      	movls	r0, #0
}
 8007cf4:	bd38      	pop	{r3, r4, r5, pc}
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
 8007cf6:	4629      	mov	r1, r5
 8007cf8:	4805      	ldr	r0, [pc, #20]	; (8007d10 <xTaskRemoveFromEventList+0x7c>)
 8007cfa:	e7ef      	b.n	8007cdc <xTaskRemoveFromEventList+0x48>
 8007cfc:	20011fd0 	.word	0x20011fd0
 8007d00:	20011fd8 	.word	0x20011fd8
 8007d04:	20011b64 	.word	0x20011b64
 8007d08:	20011b58 	.word	0x20011b58
 8007d0c:	20012050 	.word	0x20012050
 8007d10:	2001200c 	.word	0x2001200c

08007d14 <vTaskInternalSetTimeOutState>:
	pxTimeOut->xOverflowCount = xNumOfOverflows;
 8007d14:	4b03      	ldr	r3, [pc, #12]	; (8007d24 <vTaskInternalSetTimeOutState+0x10>)
 8007d16:	681b      	ldr	r3, [r3, #0]
 8007d18:	6003      	str	r3, [r0, #0]
	pxTimeOut->xTimeOnEntering = xTickCount;
 8007d1a:	4b03      	ldr	r3, [pc, #12]	; (8007d28 <vTaskInternalSetTimeOutState+0x14>)
 8007d1c:	681b      	ldr	r3, [r3, #0]
 8007d1e:	6043      	str	r3, [r0, #4]
}
 8007d20:	4770      	bx	lr
 8007d22:	bf00      	nop
 8007d24:	20012008 	.word	0x20012008
 8007d28:	2001204c 	.word	0x2001204c

08007d2c <xTaskCheckForTimeOut>:
{
 8007d2c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8007d2e:	460c      	mov	r4, r1
	configASSERT( pxTimeOut );
 8007d30:	4605      	mov	r5, r0
 8007d32:	b940      	cbnz	r0, 8007d46 <xTaskCheckForTimeOut+0x1a>
 8007d34:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007d38:	f383 8811 	msr	BASEPRI, r3
 8007d3c:	f3bf 8f6f 	isb	sy
 8007d40:	f3bf 8f4f 	dsb	sy
 8007d44:	e7fe      	b.n	8007d44 <xTaskCheckForTimeOut+0x18>
	configASSERT( pxTicksToWait );
 8007d46:	b941      	cbnz	r1, 8007d5a <xTaskCheckForTimeOut+0x2e>
 8007d48:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007d4c:	f383 8811 	msr	BASEPRI, r3
 8007d50:	f3bf 8f6f 	isb	sy
 8007d54:	f3bf 8f4f 	dsb	sy
 8007d58:	e7fe      	b.n	8007d58 <xTaskCheckForTimeOut+0x2c>
	taskENTER_CRITICAL();
 8007d5a:	f7fe fdbb 	bl	80068d4 <vPortEnterCritical>
		const TickType_t xConstTickCount = xTickCount;
 8007d5e:	4b0f      	ldr	r3, [pc, #60]	; (8007d9c <xTaskCheckForTimeOut+0x70>)
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 8007d60:	6868      	ldr	r0, [r5, #4]
		const TickType_t xConstTickCount = xTickCount;
 8007d62:	6819      	ldr	r1, [r3, #0]
			if( *pxTicksToWait == portMAX_DELAY )
 8007d64:	6823      	ldr	r3, [r4, #0]
 8007d66:	1c5e      	adds	r6, r3, #1
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 8007d68:	eba1 0200 	sub.w	r2, r1, r0
			if( *pxTicksToWait == portMAX_DELAY )
 8007d6c:	d00d      	beq.n	8007d8a <xTaskCheckForTimeOut+0x5e>
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
 8007d6e:	4e0c      	ldr	r6, [pc, #48]	; (8007da0 <xTaskCheckForTimeOut+0x74>)
 8007d70:	682f      	ldr	r7, [r5, #0]
 8007d72:	6836      	ldr	r6, [r6, #0]
 8007d74:	42b7      	cmp	r7, r6
 8007d76:	d001      	beq.n	8007d7c <xTaskCheckForTimeOut+0x50>
 8007d78:	4288      	cmp	r0, r1
 8007d7a:	d90d      	bls.n	8007d98 <xTaskCheckForTimeOut+0x6c>
		else if( xElapsedTime < *pxTicksToWait ) /*lint !e961 Explicit casting is only redundant with some compilers, whereas others require it to prevent integer conversion errors. */
 8007d7c:	4293      	cmp	r3, r2
 8007d7e:	d909      	bls.n	8007d94 <xTaskCheckForTimeOut+0x68>
			*pxTicksToWait -= xElapsedTime;
 8007d80:	1a9b      	subs	r3, r3, r2
 8007d82:	6023      	str	r3, [r4, #0]
			vTaskInternalSetTimeOutState( pxTimeOut );
 8007d84:	4628      	mov	r0, r5
 8007d86:	f7ff ffc5 	bl	8007d14 <vTaskInternalSetTimeOutState>
				xReturn = pdFALSE;
 8007d8a:	2400      	movs	r4, #0
	taskEXIT_CRITICAL();
 8007d8c:	f7fe fdc4 	bl	8006918 <vPortExitCritical>
}
 8007d90:	4620      	mov	r0, r4
 8007d92:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
			*pxTicksToWait = 0;
 8007d94:	2300      	movs	r3, #0
 8007d96:	6023      	str	r3, [r4, #0]
			xReturn = pdTRUE;
 8007d98:	2401      	movs	r4, #1
 8007d9a:	e7f7      	b.n	8007d8c <xTaskCheckForTimeOut+0x60>
 8007d9c:	2001204c 	.word	0x2001204c
 8007da0:	20012008 	.word	0x20012008

08007da4 <vTaskMissedYield>:
	xYieldPending = pdTRUE;
 8007da4:	4b01      	ldr	r3, [pc, #4]	; (8007dac <vTaskMissedYield+0x8>)
 8007da6:	2201      	movs	r2, #1
 8007da8:	601a      	str	r2, [r3, #0]
}
 8007daa:	4770      	bx	lr
 8007dac:	20012050 	.word	0x20012050

08007db0 <xTaskGetSchedulerState>:
		if( xSchedulerRunning == pdFALSE )
 8007db0:	4b05      	ldr	r3, [pc, #20]	; (8007dc8 <xTaskGetSchedulerState+0x18>)
 8007db2:	681b      	ldr	r3, [r3, #0]
 8007db4:	b133      	cbz	r3, 8007dc4 <xTaskGetSchedulerState+0x14>
			if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 8007db6:	4b05      	ldr	r3, [pc, #20]	; (8007dcc <xTaskGetSchedulerState+0x1c>)
 8007db8:	681b      	ldr	r3, [r3, #0]
 8007dba:	2b00      	cmp	r3, #0
				xReturn = taskSCHEDULER_SUSPENDED;
 8007dbc:	bf0c      	ite	eq
 8007dbe:	2002      	moveq	r0, #2
 8007dc0:	2000      	movne	r0, #0
 8007dc2:	4770      	bx	lr
			xReturn = taskSCHEDULER_NOT_STARTED;
 8007dc4:	2001      	movs	r0, #1
	}
 8007dc6:	4770      	bx	lr
 8007dc8:	20012020 	.word	0x20012020
 8007dcc:	20011fd0 	.word	0x20011fd0

08007dd0 <xTaskPriorityInherit>:
	{
 8007dd0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
		if( pxMutexHolder != NULL )
 8007dd2:	4604      	mov	r4, r0
 8007dd4:	b340      	cbz	r0, 8007e28 <xTaskPriorityInherit+0x58>
			if( pxMutexHolderTCB->uxPriority < pxCurrentTCB->uxPriority )
 8007dd6:	4a1b      	ldr	r2, [pc, #108]	; (8007e44 <xTaskPriorityInherit+0x74>)
 8007dd8:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8007dda:	6811      	ldr	r1, [r2, #0]
 8007ddc:	6ac9      	ldr	r1, [r1, #44]	; 0x2c
 8007dde:	428b      	cmp	r3, r1
 8007de0:	4616      	mov	r6, r2
 8007de2:	d226      	bcs.n	8007e32 <xTaskPriorityInherit+0x62>
				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 8007de4:	6982      	ldr	r2, [r0, #24]
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
 8007de6:	4d18      	ldr	r5, [pc, #96]	; (8007e48 <xTaskPriorityInherit+0x78>)
				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 8007de8:	2a00      	cmp	r2, #0
					listSET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxCurrentTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8007dea:	bfa1      	itttt	ge
 8007dec:	6832      	ldrge	r2, [r6, #0]
 8007dee:	6ad2      	ldrge	r2, [r2, #44]	; 0x2c
 8007df0:	f1c2 0238 	rsbge	r2, r2, #56	; 0x38
 8007df4:	6182      	strge	r2, [r0, #24]
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
 8007df6:	2214      	movs	r2, #20
 8007df8:	fb02 5303 	mla	r3, r2, r3, r5
 8007dfc:	6942      	ldr	r2, [r0, #20]
 8007dfe:	429a      	cmp	r2, r3
 8007e00:	d113      	bne.n	8007e2a <xTaskPriorityInherit+0x5a>
					if( uxListRemove( &( pxMutexHolderTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8007e02:	1d07      	adds	r7, r0, #4
 8007e04:	4638      	mov	r0, r7
 8007e06:	f7fe fcea 	bl	80067de <uxListRemove>
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 8007e0a:	6833      	ldr	r3, [r6, #0]
					prvAddTaskToReadyList( pxMutexHolderTCB );
 8007e0c:	4a0f      	ldr	r2, [pc, #60]	; (8007e4c <xTaskPriorityInherit+0x7c>)
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 8007e0e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 8007e10:	6811      	ldr	r1, [r2, #0]
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 8007e12:	62e3      	str	r3, [r4, #44]	; 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 8007e14:	2014      	movs	r0, #20
 8007e16:	428b      	cmp	r3, r1
 8007e18:	fb00 5003 	mla	r0, r0, r3, r5
 8007e1c:	4639      	mov	r1, r7
 8007e1e:	bf88      	it	hi
 8007e20:	6013      	strhi	r3, [r2, #0]
 8007e22:	f7fe fcb9 	bl	8006798 <vListInsertEnd>
				xReturn = pdTRUE;
 8007e26:	2001      	movs	r0, #1
	}
 8007e28:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 8007e2a:	6833      	ldr	r3, [r6, #0]
 8007e2c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8007e2e:	62c3      	str	r3, [r0, #44]	; 0x2c
 8007e30:	e7f9      	b.n	8007e26 <xTaskPriorityInherit+0x56>
				if( pxMutexHolderTCB->uxBasePriority < pxCurrentTCB->uxPriority )
 8007e32:	6813      	ldr	r3, [r2, #0]
 8007e34:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 8007e36:	6adc      	ldr	r4, [r3, #44]	; 0x2c
 8007e38:	42a0      	cmp	r0, r4
 8007e3a:	bf2c      	ite	cs
 8007e3c:	2000      	movcs	r0, #0
 8007e3e:	2001      	movcc	r0, #1
 8007e40:	e7f2      	b.n	8007e28 <xTaskPriorityInherit+0x58>
 8007e42:	bf00      	nop
 8007e44:	20011b58 	.word	0x20011b58
 8007e48:	20011b64 	.word	0x20011b64
 8007e4c:	20011fd8 	.word	0x20011fd8

08007e50 <xTaskPriorityDisinherit>:
	{
 8007e50:	b538      	push	{r3, r4, r5, lr}
		if( pxMutexHolder != NULL )
 8007e52:	b908      	cbnz	r0, 8007e58 <xTaskPriorityDisinherit+0x8>
	BaseType_t xReturn = pdFALSE;
 8007e54:	2000      	movs	r0, #0
	}
 8007e56:	bd38      	pop	{r3, r4, r5, pc}
			configASSERT( pxTCB == pxCurrentTCB );
 8007e58:	4b1b      	ldr	r3, [pc, #108]	; (8007ec8 <xTaskPriorityDisinherit+0x78>)
 8007e5a:	681c      	ldr	r4, [r3, #0]
 8007e5c:	4284      	cmp	r4, r0
 8007e5e:	d008      	beq.n	8007e72 <xTaskPriorityDisinherit+0x22>
 8007e60:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007e64:	f383 8811 	msr	BASEPRI, r3
 8007e68:	f3bf 8f6f 	isb	sy
 8007e6c:	f3bf 8f4f 	dsb	sy
 8007e70:	e7fe      	b.n	8007e70 <xTaskPriorityDisinherit+0x20>
			configASSERT( pxTCB->uxMutexesHeld );
 8007e72:	6d23      	ldr	r3, [r4, #80]	; 0x50
 8007e74:	b943      	cbnz	r3, 8007e88 <xTaskPriorityDisinherit+0x38>
 8007e76:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007e7a:	f383 8811 	msr	BASEPRI, r3
 8007e7e:	f3bf 8f6f 	isb	sy
 8007e82:	f3bf 8f4f 	dsb	sy
 8007e86:	e7fe      	b.n	8007e86 <xTaskPriorityDisinherit+0x36>
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 8007e88:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 8007e8a:	6ce2      	ldr	r2, [r4, #76]	; 0x4c
			( pxTCB->uxMutexesHeld )--;
 8007e8c:	3b01      	subs	r3, #1
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 8007e8e:	4291      	cmp	r1, r2
			( pxTCB->uxMutexesHeld )--;
 8007e90:	6523      	str	r3, [r4, #80]	; 0x50
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 8007e92:	d0df      	beq.n	8007e54 <xTaskPriorityDisinherit+0x4>
				if( pxTCB->uxMutexesHeld == ( UBaseType_t ) 0 )
 8007e94:	2b00      	cmp	r3, #0
 8007e96:	d1dd      	bne.n	8007e54 <xTaskPriorityDisinherit+0x4>
					if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8007e98:	1d25      	adds	r5, r4, #4
 8007e9a:	4628      	mov	r0, r5
 8007e9c:	f7fe fc9f 	bl	80067de <uxListRemove>
					pxTCB->uxPriority = pxTCB->uxBasePriority;
 8007ea0:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
 8007ea2:	62e3      	str	r3, [r4, #44]	; 0x2c
					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8007ea4:	f1c3 0238 	rsb	r2, r3, #56	; 0x38
 8007ea8:	61a2      	str	r2, [r4, #24]
					prvAddTaskToReadyList( pxTCB );
 8007eaa:	4a08      	ldr	r2, [pc, #32]	; (8007ecc <xTaskPriorityDisinherit+0x7c>)
 8007eac:	6811      	ldr	r1, [r2, #0]
 8007eae:	428b      	cmp	r3, r1
 8007eb0:	bf88      	it	hi
 8007eb2:	6013      	strhi	r3, [r2, #0]
 8007eb4:	4a06      	ldr	r2, [pc, #24]	; (8007ed0 <xTaskPriorityDisinherit+0x80>)
 8007eb6:	2014      	movs	r0, #20
 8007eb8:	fb00 2003 	mla	r0, r0, r3, r2
 8007ebc:	4629      	mov	r1, r5
 8007ebe:	f7fe fc6b 	bl	8006798 <vListInsertEnd>
					xReturn = pdTRUE;
 8007ec2:	2001      	movs	r0, #1
		return xReturn;
 8007ec4:	e7c7      	b.n	8007e56 <xTaskPriorityDisinherit+0x6>
 8007ec6:	bf00      	nop
 8007ec8:	20011b58 	.word	0x20011b58
 8007ecc:	20011fd8 	.word	0x20011fd8
 8007ed0:	20011b64 	.word	0x20011b64

08007ed4 <vTaskPriorityDisinheritAfterTimeout>:
	{
 8007ed4:	b570      	push	{r4, r5, r6, lr}
		if( pxMutexHolder != NULL )
 8007ed6:	4604      	mov	r4, r0
 8007ed8:	2800      	cmp	r0, #0
 8007eda:	d041      	beq.n	8007f60 <vTaskPriorityDisinheritAfterTimeout+0x8c>
			configASSERT( pxTCB->uxMutexesHeld );
 8007edc:	6d02      	ldr	r2, [r0, #80]	; 0x50
 8007ede:	b942      	cbnz	r2, 8007ef2 <vTaskPriorityDisinheritAfterTimeout+0x1e>
 8007ee0:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007ee4:	f383 8811 	msr	BASEPRI, r3
 8007ee8:	f3bf 8f6f 	isb	sy
 8007eec:	f3bf 8f4f 	dsb	sy
 8007ef0:	e7fe      	b.n	8007ef0 <vTaskPriorityDisinheritAfterTimeout+0x1c>
 8007ef2:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
 8007ef4:	4299      	cmp	r1, r3
 8007ef6:	bf38      	it	cc
 8007ef8:	4619      	movcc	r1, r3
			if( pxTCB->uxPriority != uxPriorityToUse )
 8007efa:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8007efc:	428b      	cmp	r3, r1
 8007efe:	d02f      	beq.n	8007f60 <vTaskPriorityDisinheritAfterTimeout+0x8c>
				if( pxTCB->uxMutexesHeld == uxOnlyOneMutexHeld )
 8007f00:	2a01      	cmp	r2, #1
 8007f02:	d12d      	bne.n	8007f60 <vTaskPriorityDisinheritAfterTimeout+0x8c>
					configASSERT( pxTCB != pxCurrentTCB );
 8007f04:	4a17      	ldr	r2, [pc, #92]	; (8007f64 <vTaskPriorityDisinheritAfterTimeout+0x90>)
 8007f06:	6812      	ldr	r2, [r2, #0]
 8007f08:	4282      	cmp	r2, r0
 8007f0a:	d108      	bne.n	8007f1e <vTaskPriorityDisinheritAfterTimeout+0x4a>
 8007f0c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007f10:	f383 8811 	msr	BASEPRI, r3
 8007f14:	f3bf 8f6f 	isb	sy
 8007f18:	f3bf 8f4f 	dsb	sy
 8007f1c:	e7fe      	b.n	8007f1c <vTaskPriorityDisinheritAfterTimeout+0x48>
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 8007f1e:	6982      	ldr	r2, [r0, #24]
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 8007f20:	4d11      	ldr	r5, [pc, #68]	; (8007f68 <vTaskPriorityDisinheritAfterTimeout+0x94>)
					pxTCB->uxPriority = uxPriorityToUse;
 8007f22:	62c1      	str	r1, [r0, #44]	; 0x2c
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 8007f24:	2a00      	cmp	r2, #0
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 8007f26:	f04f 0214 	mov.w	r2, #20
 8007f2a:	fb02 5303 	mla	r3, r2, r3, r5
 8007f2e:	6942      	ldr	r2, [r0, #20]
						listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriorityToUse ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8007f30:	bfa4      	itt	ge
 8007f32:	f1c1 0138 	rsbge	r1, r1, #56	; 0x38
 8007f36:	6181      	strge	r1, [r0, #24]
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 8007f38:	429a      	cmp	r2, r3
 8007f3a:	d111      	bne.n	8007f60 <vTaskPriorityDisinheritAfterTimeout+0x8c>
						if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8007f3c:	1d06      	adds	r6, r0, #4
 8007f3e:	4630      	mov	r0, r6
 8007f40:	f7fe fc4d 	bl	80067de <uxListRemove>
						prvAddTaskToReadyList( pxTCB );
 8007f44:	4a09      	ldr	r2, [pc, #36]	; (8007f6c <vTaskPriorityDisinheritAfterTimeout+0x98>)
 8007f46:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8007f48:	6811      	ldr	r1, [r2, #0]
 8007f4a:	2014      	movs	r0, #20
 8007f4c:	428b      	cmp	r3, r1
 8007f4e:	fb00 5003 	mla	r0, r0, r3, r5
 8007f52:	4631      	mov	r1, r6
	}
 8007f54:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
						prvAddTaskToReadyList( pxTCB );
 8007f58:	bf88      	it	hi
 8007f5a:	6013      	strhi	r3, [r2, #0]
 8007f5c:	f7fe bc1c 	b.w	8006798 <vListInsertEnd>
	}
 8007f60:	bd70      	pop	{r4, r5, r6, pc}
 8007f62:	bf00      	nop
 8007f64:	20011b58 	.word	0x20011b58
 8007f68:	20011b64 	.word	0x20011b64
 8007f6c:	20011fd8 	.word	0x20011fd8

08007f70 <pvTaskIncrementMutexHeldCount>:
		if( pxCurrentTCB != NULL )
 8007f70:	4b04      	ldr	r3, [pc, #16]	; (8007f84 <pvTaskIncrementMutexHeldCount+0x14>)
 8007f72:	681a      	ldr	r2, [r3, #0]
 8007f74:	b11a      	cbz	r2, 8007f7e <pvTaskIncrementMutexHeldCount+0xe>
			( pxCurrentTCB->uxMutexesHeld )++;
 8007f76:	6819      	ldr	r1, [r3, #0]
 8007f78:	6d0a      	ldr	r2, [r1, #80]	; 0x50
 8007f7a:	3201      	adds	r2, #1
 8007f7c:	650a      	str	r2, [r1, #80]	; 0x50
		return pxCurrentTCB;
 8007f7e:	6818      	ldr	r0, [r3, #0]
	}
 8007f80:	4770      	bx	lr
 8007f82:	bf00      	nop
 8007f84:	20011b58 	.word	0x20011b58

08007f88 <prvCheckForValidListAndQueue>:
	pxOverflowTimerList = pxTemp;
}
/*-----------------------------------------------------------*/

static void prvCheckForValidListAndQueue( void )
{
 8007f88:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
	/* Check that the list from which active timers are referenced, and the
	queue used to communicate with the timer service, have been
	initialised. */
	taskENTER_CRITICAL();
	{
		if( xTimerQueue == NULL )
 8007f8a:	4c11      	ldr	r4, [pc, #68]	; (8007fd0 <prvCheckForValidListAndQueue+0x48>)
	taskENTER_CRITICAL();
 8007f8c:	f7fe fca2 	bl	80068d4 <vPortEnterCritical>
		if( xTimerQueue == NULL )
 8007f90:	6825      	ldr	r5, [r4, #0]
 8007f92:	b9bd      	cbnz	r5, 8007fc4 <prvCheckForValidListAndQueue+0x3c>
		{
			vListInitialise( &xActiveTimerList1 );
 8007f94:	4f0f      	ldr	r7, [pc, #60]	; (8007fd4 <prvCheckForValidListAndQueue+0x4c>)
			vListInitialise( &xActiveTimerList2 );
 8007f96:	4e10      	ldr	r6, [pc, #64]	; (8007fd8 <prvCheckForValidListAndQueue+0x50>)
			vListInitialise( &xActiveTimerList1 );
 8007f98:	4638      	mov	r0, r7
 8007f9a:	f7fe fbef 	bl	800677c <vListInitialise>
			vListInitialise( &xActiveTimerList2 );
 8007f9e:	4630      	mov	r0, r6
 8007fa0:	f7fe fbec 	bl	800677c <vListInitialise>
			pxCurrentTimerList = &xActiveTimerList1;
 8007fa4:	4b0d      	ldr	r3, [pc, #52]	; (8007fdc <prvCheckForValidListAndQueue+0x54>)
				/* The timer queue is allocated statically in case
				configSUPPORT_DYNAMIC_ALLOCATION is 0. */
				static StaticQueue_t xStaticTimerQueue; /*lint !e956 Ok to declare in this manner to prevent additional conditional compilation guards in other locations. */
				static uint8_t ucStaticTimerQueueStorage[ ( size_t ) configTIMER_QUEUE_LENGTH * sizeof( DaemonTaskMessage_t ) ]; /*lint !e956 Ok to declare in this manner to prevent additional conditional compilation guards in other locations. */

				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 8007fa6:	4a0e      	ldr	r2, [pc, #56]	; (8007fe0 <prvCheckForValidListAndQueue+0x58>)
			pxCurrentTimerList = &xActiveTimerList1;
 8007fa8:	601f      	str	r7, [r3, #0]
			pxOverflowTimerList = &xActiveTimerList2;
 8007faa:	4b0e      	ldr	r3, [pc, #56]	; (8007fe4 <prvCheckForValidListAndQueue+0x5c>)
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 8007fac:	2110      	movs	r1, #16
			pxOverflowTimerList = &xActiveTimerList2;
 8007fae:	601e      	str	r6, [r3, #0]
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 8007fb0:	200a      	movs	r0, #10
 8007fb2:	9500      	str	r5, [sp, #0]
 8007fb4:	4b0c      	ldr	r3, [pc, #48]	; (8007fe8 <prvCheckForValidListAndQueue+0x60>)
 8007fb6:	f7fe fea5 	bl	8006d04 <xQueueGenericCreateStatic>
 8007fba:	6020      	str	r0, [r4, #0]
			}
			#endif

			#if ( configQUEUE_REGISTRY_SIZE > 0 )
			{
				if( xTimerQueue != NULL )
 8007fbc:	b110      	cbz	r0, 8007fc4 <prvCheckForValidListAndQueue+0x3c>
				{
					vQueueAddToRegistry( xTimerQueue, "TmrQ" );
 8007fbe:	490b      	ldr	r1, [pc, #44]	; (8007fec <prvCheckForValidListAndQueue+0x64>)
 8007fc0:	f7ff fa70 	bl	80074a4 <vQueueAddToRegistry>
		{
			mtCOVERAGE_TEST_MARKER();
		}
	}
	taskEXIT_CRITICAL();
}
 8007fc4:	b003      	add	sp, #12
 8007fc6:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
	taskEXIT_CRITICAL();
 8007fca:	f7fe bca5 	b.w	8006918 <vPortExitCritical>
 8007fce:	bf00      	nop
 8007fd0:	20012178 	.word	0x20012178
 8007fd4:	200120fc 	.word	0x200120fc
 8007fd8:	20012110 	.word	0x20012110
 8007fdc:	20012054 	.word	0x20012054
 8007fe0:	2001205c 	.word	0x2001205c
 8007fe4:	20012058 	.word	0x20012058
 8007fe8:	20012128 	.word	0x20012128
 8007fec:	0801aa31 	.word	0x0801aa31

08007ff0 <prvInsertTimerInActiveList>:
	if( xNextExpiryTime <= xTimeNow )
 8007ff0:	4291      	cmp	r1, r2
{
 8007ff2:	b508      	push	{r3, lr}
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
 8007ff4:	6041      	str	r1, [r0, #4]
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 8007ff6:	6100      	str	r0, [r0, #16]
	if( xNextExpiryTime <= xTimeNow )
 8007ff8:	d80a      	bhi.n	8008010 <prvInsertTimerInActiveList+0x20>
		if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks ) /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8007ffa:	1ad2      	subs	r2, r2, r3
 8007ffc:	6983      	ldr	r3, [r0, #24]
 8007ffe:	429a      	cmp	r2, r3
 8008000:	d20d      	bcs.n	800801e <prvInsertTimerInActiveList+0x2e>
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
 8008002:	4b08      	ldr	r3, [pc, #32]	; (8008024 <prvInsertTimerInActiveList+0x34>)
 8008004:	1d01      	adds	r1, r0, #4
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 8008006:	6818      	ldr	r0, [r3, #0]
 8008008:	f7fe fbd2 	bl	80067b0 <vListInsert>
BaseType_t xProcessTimerNow = pdFALSE;
 800800c:	2000      	movs	r0, #0
}
 800800e:	bd08      	pop	{r3, pc}
		if( ( xTimeNow < xCommandTime ) && ( xNextExpiryTime >= xCommandTime ) )
 8008010:	429a      	cmp	r2, r3
 8008012:	d201      	bcs.n	8008018 <prvInsertTimerInActiveList+0x28>
 8008014:	4299      	cmp	r1, r3
 8008016:	d202      	bcs.n	800801e <prvInsertTimerInActiveList+0x2e>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 8008018:	1d01      	adds	r1, r0, #4
 800801a:	4b03      	ldr	r3, [pc, #12]	; (8008028 <prvInsertTimerInActiveList+0x38>)
 800801c:	e7f3      	b.n	8008006 <prvInsertTimerInActiveList+0x16>
			xProcessTimerNow = pdTRUE;
 800801e:	2001      	movs	r0, #1
	return xProcessTimerNow;
 8008020:	e7f5      	b.n	800800e <prvInsertTimerInActiveList+0x1e>
 8008022:	bf00      	nop
 8008024:	20012058 	.word	0x20012058
 8008028:	20012054 	.word	0x20012054

0800802c <xTimerCreateTimerTask>:
{
 800802c:	b510      	push	{r4, lr}
 800802e:	b088      	sub	sp, #32
	prvCheckForValidListAndQueue();
 8008030:	f7ff ffaa 	bl	8007f88 <prvCheckForValidListAndQueue>
	if( xTimerQueue != NULL )
 8008034:	4b12      	ldr	r3, [pc, #72]	; (8008080 <xTimerCreateTimerTask+0x54>)
 8008036:	681b      	ldr	r3, [r3, #0]
 8008038:	b1b3      	cbz	r3, 8008068 <xTimerCreateTimerTask+0x3c>
			StaticTask_t *pxTimerTaskTCBBuffer = NULL;
 800803a:	2400      	movs	r4, #0
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 800803c:	aa07      	add	r2, sp, #28
 800803e:	a906      	add	r1, sp, #24
 8008040:	a805      	add	r0, sp, #20
			StackType_t *pxTimerTaskStackBuffer = NULL;
 8008042:	e9cd 4405 	strd	r4, r4, [sp, #20]
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 8008046:	f7fe faa5 	bl	8006594 <vApplicationGetTimerTaskMemory>
			xTimerTaskHandle = xTaskCreateStatic(	prvTimerTask,
 800804a:	9b05      	ldr	r3, [sp, #20]
 800804c:	9302      	str	r3, [sp, #8]
 800804e:	9b06      	ldr	r3, [sp, #24]
 8008050:	9301      	str	r3, [sp, #4]
 8008052:	2302      	movs	r3, #2
 8008054:	9300      	str	r3, [sp, #0]
 8008056:	9a07      	ldr	r2, [sp, #28]
 8008058:	490a      	ldr	r1, [pc, #40]	; (8008084 <xTimerCreateTimerTask+0x58>)
 800805a:	480b      	ldr	r0, [pc, #44]	; (8008088 <xTimerCreateTimerTask+0x5c>)
 800805c:	4623      	mov	r3, r4
 800805e:	f7ff fbe9 	bl	8007834 <xTaskCreateStatic>
 8008062:	4b0a      	ldr	r3, [pc, #40]	; (800808c <xTimerCreateTimerTask+0x60>)
 8008064:	6018      	str	r0, [r3, #0]
			if( xTimerTaskHandle != NULL )
 8008066:	b940      	cbnz	r0, 800807a <xTimerCreateTimerTask+0x4e>
 8008068:	f04f 0350 	mov.w	r3, #80	; 0x50
 800806c:	f383 8811 	msr	BASEPRI, r3
 8008070:	f3bf 8f6f 	isb	sy
 8008074:	f3bf 8f4f 	dsb	sy
 8008078:	e7fe      	b.n	8008078 <xTimerCreateTimerTask+0x4c>
}
 800807a:	2001      	movs	r0, #1
 800807c:	b008      	add	sp, #32
 800807e:	bd10      	pop	{r4, pc}
 8008080:	20012178 	.word	0x20012178
 8008084:	0801aa36 	.word	0x0801aa36
 8008088:	08008169 	.word	0x08008169
 800808c:	2001217c 	.word	0x2001217c

08008090 <xTimerGenericCommand>:
{
 8008090:	b530      	push	{r4, r5, lr}
 8008092:	4615      	mov	r5, r2
 8008094:	b085      	sub	sp, #20
 8008096:	461a      	mov	r2, r3
	configASSERT( xTimer );
 8008098:	4603      	mov	r3, r0
 800809a:	b940      	cbnz	r0, 80080ae <xTimerGenericCommand+0x1e>
 800809c:	f04f 0350 	mov.w	r3, #80	; 0x50
 80080a0:	f383 8811 	msr	BASEPRI, r3
 80080a4:	f3bf 8f6f 	isb	sy
 80080a8:	f3bf 8f4f 	dsb	sy
 80080ac:	e7fe      	b.n	80080ac <xTimerGenericCommand+0x1c>
	if( xTimerQueue != NULL )
 80080ae:	4c0d      	ldr	r4, [pc, #52]	; (80080e4 <xTimerGenericCommand+0x54>)
 80080b0:	6820      	ldr	r0, [r4, #0]
 80080b2:	b180      	cbz	r0, 80080d6 <xTimerGenericCommand+0x46>
		if( xCommandID < tmrFIRST_FROM_ISR_COMMAND )
 80080b4:	2905      	cmp	r1, #5
		xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
 80080b6:	e9cd 1500 	strd	r1, r5, [sp]
		xMessage.u.xTimerParameters.pxTimer = xTimer;
 80080ba:	9302      	str	r3, [sp, #8]
		if( xCommandID < tmrFIRST_FROM_ISR_COMMAND )
 80080bc:	dc0d      	bgt.n	80080da <xTimerGenericCommand+0x4a>
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 80080be:	f7ff fe77 	bl	8007db0 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 80080c2:	2300      	movs	r3, #0
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 80080c4:	2802      	cmp	r0, #2
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 80080c6:	bf08      	it	eq
 80080c8:	9a08      	ldreq	r2, [sp, #32]
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, tmrNO_DELAY );
 80080ca:	6820      	ldr	r0, [r4, #0]
 80080cc:	bf18      	it	ne
 80080ce:	461a      	movne	r2, r3
 80080d0:	4669      	mov	r1, sp
 80080d2:	f7fe fecd 	bl	8006e70 <xQueueGenericSend>
}
 80080d6:	b005      	add	sp, #20
 80080d8:	bd30      	pop	{r4, r5, pc}
			xReturn = xQueueSendToBackFromISR( xTimerQueue, &xMessage, pxHigherPriorityTaskWoken );
 80080da:	2300      	movs	r3, #0
 80080dc:	4669      	mov	r1, sp
 80080de:	f7fe ff79 	bl	8006fd4 <xQueueGenericSendFromISR>
 80080e2:	e7f8      	b.n	80080d6 <xTimerGenericCommand+0x46>
 80080e4:	20012178 	.word	0x20012178

080080e8 <prvSwitchTimerLists>:
{
 80080e8:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 80080ec:	4d1c      	ldr	r5, [pc, #112]	; (8008160 <prvSwitchTimerLists+0x78>)
				xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
 80080ee:	f04f 0800 	mov.w	r8, #0
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 80080f2:	682b      	ldr	r3, [r5, #0]
 80080f4:	681a      	ldr	r2, [r3, #0]
 80080f6:	b932      	cbnz	r2, 8008106 <prvSwitchTimerLists+0x1e>
	pxCurrentTimerList = pxOverflowTimerList;
 80080f8:	4a1a      	ldr	r2, [pc, #104]	; (8008164 <prvSwitchTimerLists+0x7c>)
 80080fa:	6811      	ldr	r1, [r2, #0]
 80080fc:	6029      	str	r1, [r5, #0]
	pxOverflowTimerList = pxTemp;
 80080fe:	6013      	str	r3, [r2, #0]
}
 8008100:	b002      	add	sp, #8
 8008102:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 8008106:	68db      	ldr	r3, [r3, #12]
		pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8008108:	68dc      	ldr	r4, [r3, #12]
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 800810a:	681e      	ldr	r6, [r3, #0]
		( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 800810c:	1d27      	adds	r7, r4, #4
 800810e:	4638      	mov	r0, r7
 8008110:	f7fe fb65 	bl	80067de <uxListRemove>
		pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 8008114:	6a23      	ldr	r3, [r4, #32]
 8008116:	4620      	mov	r0, r4
 8008118:	4798      	blx	r3
		if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 800811a:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 800811e:	075b      	lsls	r3, r3, #29
 8008120:	d5e7      	bpl.n	80080f2 <prvSwitchTimerLists+0xa>
			xReloadTime = ( xNextExpireTime + pxTimer->xTimerPeriodInTicks );
 8008122:	69a3      	ldr	r3, [r4, #24]
 8008124:	4433      	add	r3, r6
			if( xReloadTime > xNextExpireTime )
 8008126:	429e      	cmp	r6, r3
 8008128:	d206      	bcs.n	8008138 <prvSwitchTimerLists+0x50>
				listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xReloadTime );
 800812a:	6063      	str	r3, [r4, #4]
				listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 800812c:	6124      	str	r4, [r4, #16]
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800812e:	4639      	mov	r1, r7
 8008130:	6828      	ldr	r0, [r5, #0]
 8008132:	f7fe fb3d 	bl	80067b0 <vListInsert>
 8008136:	e7dc      	b.n	80080f2 <prvSwitchTimerLists+0xa>
				xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
 8008138:	2300      	movs	r3, #0
 800813a:	f8cd 8000 	str.w	r8, [sp]
 800813e:	4632      	mov	r2, r6
 8008140:	4619      	mov	r1, r3
 8008142:	4620      	mov	r0, r4
 8008144:	f7ff ffa4 	bl	8008090 <xTimerGenericCommand>
				configASSERT( xResult );
 8008148:	2800      	cmp	r0, #0
 800814a:	d1d2      	bne.n	80080f2 <prvSwitchTimerLists+0xa>
 800814c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008150:	f383 8811 	msr	BASEPRI, r3
 8008154:	f3bf 8f6f 	isb	sy
 8008158:	f3bf 8f4f 	dsb	sy
 800815c:	e7fe      	b.n	800815c <prvSwitchTimerLists+0x74>
 800815e:	bf00      	nop
 8008160:	20012054 	.word	0x20012054
 8008164:	20012058 	.word	0x20012058

08008168 <prvTimerTask>:
{
 8008168:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 800816c:	4d81      	ldr	r5, [pc, #516]	; (8008374 <prvTimerTask+0x20c>)
					portYIELD_WITHIN_API();
 800816e:	f8df 8210 	ldr.w	r8, [pc, #528]	; 8008380 <prvTimerTask+0x218>
{
 8008172:	b087      	sub	sp, #28
 8008174:	462f      	mov	r7, r5
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 8008176:	682a      	ldr	r2, [r5, #0]
 8008178:	6813      	ldr	r3, [r2, #0]
 800817a:	b353      	cbz	r3, 80081d2 <prvTimerTask+0x6a>
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 800817c:	68d3      	ldr	r3, [r2, #12]
 800817e:	f8d3 9000 	ldr.w	r9, [r3]
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 8008182:	2400      	movs	r4, #0
	if( xTimeNow < xLastTime )
 8008184:	f8df b1fc 	ldr.w	fp, [pc, #508]	; 8008384 <prvTimerTask+0x21c>
	vTaskSuspendAll();
 8008188:	f7ff fbfe 	bl	8007988 <vTaskSuspendAll>
	xTimeNow = xTaskGetTickCount();
 800818c:	f7ff fc04 	bl	8007998 <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
 8008190:	f8db 3000 	ldr.w	r3, [fp]
 8008194:	4298      	cmp	r0, r3
	xTimeNow = xTaskGetTickCount();
 8008196:	4682      	mov	sl, r0
 8008198:	465e      	mov	r6, fp
	if( xTimeNow < xLastTime )
 800819a:	d31d      	bcc.n	80081d8 <prvTimerTask+0x70>
	xLastTime = xTimeNow;
 800819c:	f8cb 0000 	str.w	r0, [fp]
			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
 80081a0:	b32c      	cbz	r4, 80081ee <prvTimerTask+0x86>
					xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
 80081a2:	4b75      	ldr	r3, [pc, #468]	; (8008378 <prvTimerTask+0x210>)
 80081a4:	681b      	ldr	r3, [r3, #0]
 80081a6:	681a      	ldr	r2, [r3, #0]
 80081a8:	fab2 f282 	clz	r2, r2
 80081ac:	0952      	lsrs	r2, r2, #5
				vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
 80081ae:	4b73      	ldr	r3, [pc, #460]	; (800837c <prvTimerTask+0x214>)
 80081b0:	eba9 010a 	sub.w	r1, r9, sl
 80081b4:	6818      	ldr	r0, [r3, #0]
 80081b6:	f7ff f9b2 	bl	800751e <vQueueWaitForMessageRestricted>
				if( xTaskResumeAll() == pdFALSE )
 80081ba:	f7ff fc83 	bl	8007ac4 <xTaskResumeAll>
 80081be:	b988      	cbnz	r0, 80081e4 <prvTimerTask+0x7c>
					portYIELD_WITHIN_API();
 80081c0:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
 80081c4:	f8c8 3000 	str.w	r3, [r8]
 80081c8:	f3bf 8f4f 	dsb	sy
 80081cc:	f3bf 8f6f 	isb	sy
 80081d0:	e008      	b.n	80081e4 <prvTimerTask+0x7c>
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 80081d2:	2401      	movs	r4, #1
		xNextExpireTime = ( TickType_t ) 0U;
 80081d4:	4699      	mov	r9, r3
 80081d6:	e7d5      	b.n	8008184 <prvTimerTask+0x1c>
		prvSwitchTimerLists();
 80081d8:	f7ff ff86 	bl	80080e8 <prvSwitchTimerLists>
	xLastTime = xTimeNow;
 80081dc:	f8cb a000 	str.w	sl, [fp]
			( void ) xTaskResumeAll();
 80081e0:	f7ff fc70 	bl	8007ac4 <xTaskResumeAll>
	while( xQueueReceive( xTimerQueue, &xMessage, tmrNO_DELAY ) != pdFAIL ) /*lint !e603 xMessage does not have to be initialised as it is passed out, not in, and it is not used unless xQueueReceive() returns pdTRUE. */
 80081e4:	f8df 9194 	ldr.w	r9, [pc, #404]	; 800837c <prvTimerTask+0x214>
 80081e8:	f04f 0a00 	mov.w	sl, #0
 80081ec:	e07d      	b.n	80082ea <prvTimerTask+0x182>
			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
 80081ee:	4581      	cmp	r9, r0
 80081f0:	d830      	bhi.n	8008254 <prvTimerTask+0xec>
				( void ) xTaskResumeAll();
 80081f2:	f7ff fc67 	bl	8007ac4 <xTaskResumeAll>
Timer_t * const pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 80081f6:	683b      	ldr	r3, [r7, #0]
 80081f8:	68db      	ldr	r3, [r3, #12]
 80081fa:	f8d3 b00c 	ldr.w	fp, [r3, #12]
	( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 80081fe:	f10b 0004 	add.w	r0, fp, #4
 8008202:	f7fe faec 	bl	80067de <uxListRemove>
	if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 8008206:	f89b 3028 	ldrb.w	r3, [fp, #40]	; 0x28
 800820a:	0758      	lsls	r0, r3, #29
 800820c:	d519      	bpl.n	8008242 <prvTimerTask+0xda>
		if( prvInsertTimerInActiveList( pxTimer, ( xNextExpireTime + pxTimer->xTimerPeriodInTicks ), xTimeNow, xNextExpireTime ) != pdFALSE )
 800820e:	f8db 1018 	ldr.w	r1, [fp, #24]
 8008212:	464b      	mov	r3, r9
 8008214:	4652      	mov	r2, sl
 8008216:	4449      	add	r1, r9
 8008218:	4658      	mov	r0, fp
 800821a:	f7ff fee9 	bl	8007ff0 <prvInsertTimerInActiveList>
 800821e:	b1a0      	cbz	r0, 800824a <prvTimerTask+0xe2>
			xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
 8008220:	9400      	str	r4, [sp, #0]
 8008222:	4623      	mov	r3, r4
 8008224:	464a      	mov	r2, r9
 8008226:	4621      	mov	r1, r4
 8008228:	4658      	mov	r0, fp
 800822a:	f7ff ff31 	bl	8008090 <xTimerGenericCommand>
			configASSERT( xResult );
 800822e:	b960      	cbnz	r0, 800824a <prvTimerTask+0xe2>
 8008230:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008234:	f383 8811 	msr	BASEPRI, r3
 8008238:	f3bf 8f6f 	isb	sy
 800823c:	f3bf 8f4f 	dsb	sy
 8008240:	e7fe      	b.n	8008240 <prvTimerTask+0xd8>
		pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 8008242:	f023 0301 	bic.w	r3, r3, #1
 8008246:	f88b 3028 	strb.w	r3, [fp, #40]	; 0x28
	pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 800824a:	f8db 3020 	ldr.w	r3, [fp, #32]
 800824e:	4658      	mov	r0, fp
 8008250:	4798      	blx	r3
 8008252:	e7c7      	b.n	80081e4 <prvTimerTask+0x7c>
			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
 8008254:	4622      	mov	r2, r4
 8008256:	e7aa      	b.n	80081ae <prvTimerTask+0x46>
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 8008258:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 800825c:	69a1      	ldr	r1, [r4, #24]
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 800825e:	f043 0301 	orr.w	r3, r3, #1
 8008262:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 8008266:	9b03      	ldr	r3, [sp, #12]
 8008268:	465a      	mov	r2, fp
 800826a:	4419      	add	r1, r3
 800826c:	4620      	mov	r0, r4
 800826e:	f7ff febf 	bl	8007ff0 <prvInsertTimerInActiveList>
 8008272:	2800      	cmp	r0, #0
 8008274:	d039      	beq.n	80082ea <prvTimerTask+0x182>
						pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 8008276:	6a23      	ldr	r3, [r4, #32]
 8008278:	4620      	mov	r0, r4
 800827a:	4798      	blx	r3
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 800827c:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 8008280:	0759      	lsls	r1, r3, #29
 8008282:	d532      	bpl.n	80082ea <prvTimerTask+0x182>
							xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, NULL, tmrNO_DELAY );
 8008284:	69a2      	ldr	r2, [r4, #24]
 8008286:	9903      	ldr	r1, [sp, #12]
 8008288:	f8cd a000 	str.w	sl, [sp]
 800828c:	2300      	movs	r3, #0
 800828e:	440a      	add	r2, r1
 8008290:	4620      	mov	r0, r4
 8008292:	4619      	mov	r1, r3
 8008294:	f7ff fefc 	bl	8008090 <xTimerGenericCommand>
							configASSERT( xResult );
 8008298:	bb38      	cbnz	r0, 80082ea <prvTimerTask+0x182>
 800829a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800829e:	f383 8811 	msr	BASEPRI, r3
 80082a2:	f3bf 8f6f 	isb	sy
 80082a6:	f3bf 8f4f 	dsb	sy
 80082aa:	e7fe      	b.n	80082aa <prvTimerTask+0x142>
					pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 80082ac:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
							pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 80082b0:	f023 0301 	bic.w	r3, r3, #1
 80082b4:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
 80082b8:	e017      	b.n	80082ea <prvTimerTask+0x182>
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 80082ba:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
					pxTimer->xTimerPeriodInTicks = xMessage.u.xTimerParameters.xMessageValue;
 80082be:	9903      	ldr	r1, [sp, #12]
 80082c0:	61a1      	str	r1, [r4, #24]
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 80082c2:	f043 0301 	orr.w	r3, r3, #1
 80082c6:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
 80082ca:	b941      	cbnz	r1, 80082de <prvTimerTask+0x176>
 80082cc:	f04f 0350 	mov.w	r3, #80	; 0x50
 80082d0:	f383 8811 	msr	BASEPRI, r3
 80082d4:	f3bf 8f6f 	isb	sy
 80082d8:	f3bf 8f4f 	dsb	sy
 80082dc:	e7fe      	b.n	80082dc <prvTimerTask+0x174>
					( void ) prvInsertTimerInActiveList( pxTimer, ( xTimeNow + pxTimer->xTimerPeriodInTicks ), xTimeNow, xTimeNow );
 80082de:	465b      	mov	r3, fp
 80082e0:	465a      	mov	r2, fp
 80082e2:	4459      	add	r1, fp
 80082e4:	4620      	mov	r0, r4
 80082e6:	f7ff fe83 	bl	8007ff0 <prvInsertTimerInActiveList>
	while( xQueueReceive( xTimerQueue, &xMessage, tmrNO_DELAY ) != pdFAIL ) /*lint !e603 xMessage does not have to be initialised as it is passed out, not in, and it is not used unless xQueueReceive() returns pdTRUE. */
 80082ea:	2200      	movs	r2, #0
 80082ec:	a902      	add	r1, sp, #8
 80082ee:	f8d9 0000 	ldr.w	r0, [r9]
 80082f2:	f7fe ff25 	bl	8007140 <xQueueReceive>
 80082f6:	2800      	cmp	r0, #0
 80082f8:	f43f af3d 	beq.w	8008176 <prvTimerTask+0xe>
			if( xMessage.xMessageID < ( BaseType_t ) 0 )
 80082fc:	9b02      	ldr	r3, [sp, #8]
 80082fe:	2b00      	cmp	r3, #0
 8008300:	da03      	bge.n	800830a <prvTimerTask+0x1a2>
				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
 8008302:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8008306:	9b03      	ldr	r3, [sp, #12]
 8008308:	4798      	blx	r3
		if( xMessage.xMessageID >= ( BaseType_t ) 0 )
 800830a:	9b02      	ldr	r3, [sp, #8]
 800830c:	2b00      	cmp	r3, #0
 800830e:	dbec      	blt.n	80082ea <prvTimerTask+0x182>
			pxTimer = xMessage.u.xTimerParameters.pxTimer;
 8008310:	9c04      	ldr	r4, [sp, #16]
			if( listIS_CONTAINED_WITHIN( NULL, &( pxTimer->xTimerListItem ) ) == pdFALSE ) /*lint !e961. The cast is only redundant when NULL is passed into the macro. */
 8008312:	6963      	ldr	r3, [r4, #20]
 8008314:	b113      	cbz	r3, 800831c <prvTimerTask+0x1b4>
				( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 8008316:	1d20      	adds	r0, r4, #4
 8008318:	f7fe fa61 	bl	80067de <uxListRemove>
	xTimeNow = xTaskGetTickCount();
 800831c:	f7ff fb3c 	bl	8007998 <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
 8008320:	6833      	ldr	r3, [r6, #0]
 8008322:	4298      	cmp	r0, r3
	xTimeNow = xTaskGetTickCount();
 8008324:	4683      	mov	fp, r0
	if( xTimeNow < xLastTime )
 8008326:	d201      	bcs.n	800832c <prvTimerTask+0x1c4>
		prvSwitchTimerLists();
 8008328:	f7ff fede 	bl	80080e8 <prvSwitchTimerLists>
			switch( xMessage.xMessageID )
 800832c:	9b02      	ldr	r3, [sp, #8]
	xLastTime = xTimeNow;
 800832e:	f8c6 b000 	str.w	fp, [r6]
			switch( xMessage.xMessageID )
 8008332:	2b09      	cmp	r3, #9
 8008334:	d8d9      	bhi.n	80082ea <prvTimerTask+0x182>
 8008336:	a201      	add	r2, pc, #4	; (adr r2, 800833c <prvTimerTask+0x1d4>)
 8008338:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800833c:	08008259 	.word	0x08008259
 8008340:	08008259 	.word	0x08008259
 8008344:	08008259 	.word	0x08008259
 8008348:	080082ad 	.word	0x080082ad
 800834c:	080082bb 	.word	0x080082bb
 8008350:	08008365 	.word	0x08008365
 8008354:	08008259 	.word	0x08008259
 8008358:	08008259 	.word	0x08008259
 800835c:	080082ad 	.word	0x080082ad
 8008360:	080082bb 	.word	0x080082bb
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_STATICALLY_ALLOCATED ) == ( uint8_t ) 0 )
 8008364:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 8008368:	079a      	lsls	r2, r3, #30
 800836a:	d4a1      	bmi.n	80082b0 <prvTimerTask+0x148>
							vPortFree( pxTimer );
 800836c:	4620      	mov	r0, r4
 800836e:	f7fe f9cd 	bl	800670c <vPortFree>
 8008372:	e7ba      	b.n	80082ea <prvTimerTask+0x182>
 8008374:	20012054 	.word	0x20012054
 8008378:	20012058 	.word	0x20012058
 800837c:	20012178 	.word	0x20012178
 8008380:	e000ed04 	.word	0xe000ed04
 8008384:	20012124 	.word	0x20012124

08008388 <_ZNK8touchgfx17AbstractPartition18getAllocationCountEv>:
 8008388:	8880      	ldrh	r0, [r0, #4]
 800838a:	4770      	bx	lr

0800838c <_ZN8touchgfx17AbstractPartition5clearEv>:
 800838c:	2300      	movs	r3, #0
 800838e:	8083      	strh	r3, [r0, #4]
 8008390:	4770      	bx	lr
	...

08008394 <_ZN8touchgfx17AbstractPartition7indexOfEPKv>:
 8008394:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8008396:	6803      	ldr	r3, [r0, #0]
 8008398:	4605      	mov	r5, r0
 800839a:	460e      	mov	r6, r1
 800839c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800839e:	2100      	movs	r1, #0
 80083a0:	4798      	blx	r3
 80083a2:	682b      	ldr	r3, [r5, #0]
 80083a4:	4604      	mov	r4, r0
 80083a6:	6a1b      	ldr	r3, [r3, #32]
 80083a8:	4628      	mov	r0, r5
 80083aa:	4798      	blx	r3
 80083ac:	88ab      	ldrh	r3, [r5, #4]
 80083ae:	1b34      	subs	r4, r6, r4
 80083b0:	b2a4      	uxth	r4, r4
 80083b2:	fbb4 f4f0 	udiv	r4, r4, r0
 80083b6:	42a3      	cmp	r3, r4
 80083b8:	d805      	bhi.n	80083c6 <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x32>
 80083ba:	4b0e      	ldr	r3, [pc, #56]	; (80083f4 <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x60>)
 80083bc:	4a0e      	ldr	r2, [pc, #56]	; (80083f8 <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x64>)
 80083be:	2120      	movs	r1, #32
 80083c0:	480e      	ldr	r0, [pc, #56]	; (80083fc <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x68>)
 80083c2:	f010 fc13 	bl	8018bec <__assert_func>
 80083c6:	682b      	ldr	r3, [r5, #0]
 80083c8:	2100      	movs	r1, #0
 80083ca:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80083cc:	4628      	mov	r0, r5
 80083ce:	4798      	blx	r3
 80083d0:	682b      	ldr	r3, [r5, #0]
 80083d2:	4607      	mov	r7, r0
 80083d4:	6a1b      	ldr	r3, [r3, #32]
 80083d6:	4628      	mov	r0, r5
 80083d8:	4798      	blx	r3
 80083da:	1bf3      	subs	r3, r6, r7
 80083dc:	b29b      	uxth	r3, r3
 80083de:	fbb3 f2f0 	udiv	r2, r3, r0
 80083e2:	fb02 3010 	mls	r0, r2, r0, r3
 80083e6:	b118      	cbz	r0, 80083f0 <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x5c>
 80083e8:	4b05      	ldr	r3, [pc, #20]	; (8008400 <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x6c>)
 80083ea:	4a03      	ldr	r2, [pc, #12]	; (80083f8 <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x64>)
 80083ec:	2121      	movs	r1, #33	; 0x21
 80083ee:	e7e7      	b.n	80083c0 <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x2c>
 80083f0:	4620      	mov	r0, r4
 80083f2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80083f4:	0801aa3e 	.word	0x0801aa3e
 80083f8:	0801abaa 	.word	0x0801abaa
 80083fc:	0801aa53 	.word	0x0801aa53
 8008400:	0801aa81 	.word	0x0801aa81

08008404 <_ZN8touchgfx17AbstractPartition8allocateEt>:
 8008404:	b538      	push	{r3, r4, r5, lr}
 8008406:	6803      	ldr	r3, [r0, #0]
 8008408:	6a1b      	ldr	r3, [r3, #32]
 800840a:	460d      	mov	r5, r1
 800840c:	4604      	mov	r4, r0
 800840e:	4798      	blx	r3
 8008410:	4285      	cmp	r5, r0
 8008412:	d905      	bls.n	8008420 <_ZN8touchgfx17AbstractPartition8allocateEt+0x1c>
 8008414:	4b0c      	ldr	r3, [pc, #48]	; (8008448 <_ZN8touchgfx17AbstractPartition8allocateEt+0x44>)
 8008416:	4a0d      	ldr	r2, [pc, #52]	; (800844c <_ZN8touchgfx17AbstractPartition8allocateEt+0x48>)
 8008418:	2132      	movs	r1, #50	; 0x32
 800841a:	480d      	ldr	r0, [pc, #52]	; (8008450 <_ZN8touchgfx17AbstractPartition8allocateEt+0x4c>)
 800841c:	f010 fbe6 	bl	8018bec <__assert_func>
 8008420:	6823      	ldr	r3, [r4, #0]
 8008422:	88a5      	ldrh	r5, [r4, #4]
 8008424:	69db      	ldr	r3, [r3, #28]
 8008426:	4620      	mov	r0, r4
 8008428:	4798      	blx	r3
 800842a:	4285      	cmp	r5, r0
 800842c:	d303      	bcc.n	8008436 <_ZN8touchgfx17AbstractPartition8allocateEt+0x32>
 800842e:	4b09      	ldr	r3, [pc, #36]	; (8008454 <_ZN8touchgfx17AbstractPartition8allocateEt+0x50>)
 8008430:	4a06      	ldr	r2, [pc, #24]	; (800844c <_ZN8touchgfx17AbstractPartition8allocateEt+0x48>)
 8008432:	2133      	movs	r1, #51	; 0x33
 8008434:	e7f1      	b.n	800841a <_ZN8touchgfx17AbstractPartition8allocateEt+0x16>
 8008436:	6823      	ldr	r3, [r4, #0]
 8008438:	88a1      	ldrh	r1, [r4, #4]
 800843a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800843c:	4620      	mov	r0, r4
 800843e:	4798      	blx	r3
 8008440:	88a3      	ldrh	r3, [r4, #4]
 8008442:	3301      	adds	r3, #1
 8008444:	80a3      	strh	r3, [r4, #4]
 8008446:	bd38      	pop	{r3, r4, r5, pc}
 8008448:	0801aafb 	.word	0x0801aafb
 800844c:	0801abed 	.word	0x0801abed
 8008450:	0801aa53 	.word	0x0801aa53
 8008454:	0801ab12 	.word	0x0801ab12

08008458 <_ZN8touchgfx17AbstractPartition10allocateAtEtt>:
 8008458:	b570      	push	{r4, r5, r6, lr}
 800845a:	6803      	ldr	r3, [r0, #0]
 800845c:	6a1b      	ldr	r3, [r3, #32]
 800845e:	4616      	mov	r6, r2
 8008460:	4604      	mov	r4, r0
 8008462:	460d      	mov	r5, r1
 8008464:	4798      	blx	r3
 8008466:	4286      	cmp	r6, r0
 8008468:	d905      	bls.n	8008476 <_ZN8touchgfx17AbstractPartition10allocateAtEtt+0x1e>
 800846a:	4b06      	ldr	r3, [pc, #24]	; (8008484 <_ZN8touchgfx17AbstractPartition10allocateAtEtt+0x2c>)
 800846c:	4a06      	ldr	r2, [pc, #24]	; (8008488 <_ZN8touchgfx17AbstractPartition10allocateAtEtt+0x30>)
 800846e:	4807      	ldr	r0, [pc, #28]	; (800848c <_ZN8touchgfx17AbstractPartition10allocateAtEtt+0x34>)
 8008470:	213c      	movs	r1, #60	; 0x3c
 8008472:	f010 fbbb 	bl	8018bec <__assert_func>
 8008476:	6823      	ldr	r3, [r4, #0]
 8008478:	4629      	mov	r1, r5
 800847a:	4620      	mov	r0, r4
 800847c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800847e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8008482:	4718      	bx	r3
 8008484:	0801aafb 	.word	0x0801aafb
 8008488:	0801ab60 	.word	0x0801ab60
 800848c:	0801aa53 	.word	0x0801aa53

08008490 <_ZN8touchgfx17AbstractPartitionD1Ev>:
 8008490:	4770      	bx	lr
	...

08008494 <_ZN8touchgfx17AbstractPartitionC1Ev>:
 8008494:	4a02      	ldr	r2, [pc, #8]	; (80084a0 <_ZN8touchgfx17AbstractPartitionC1Ev+0xc>)
 8008496:	6002      	str	r2, [r0, #0]
 8008498:	2200      	movs	r2, #0
 800849a:	8082      	strh	r2, [r0, #4]
 800849c:	4770      	bx	lr
 800849e:	bf00      	nop
 80084a0:	0801ab34 	.word	0x0801ab34

080084a4 <_ZN8touchgfx9Container8containsERKNS_8DrawableE>:
 80084a4:	6a83      	ldr	r3, [r0, #40]	; 0x28
 80084a6:	2000      	movs	r0, #0
 80084a8:	b12b      	cbz	r3, 80084b6 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 80084aa:	b920      	cbnz	r0, 80084b6 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 80084ac:	1a5a      	subs	r2, r3, r1
 80084ae:	4250      	negs	r0, r2
 80084b0:	4150      	adcs	r0, r2
 80084b2:	699b      	ldr	r3, [r3, #24]
 80084b4:	e7f8      	b.n	80084a8 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x4>
 80084b6:	4770      	bx	lr

080084b8 <_ZN8touchgfx9Container9removeAllEv>:
 80084b8:	2200      	movs	r2, #0
 80084ba:	6a83      	ldr	r3, [r0, #40]	; 0x28
 80084bc:	b123      	cbz	r3, 80084c8 <_ZN8touchgfx9Container9removeAllEv+0x10>
 80084be:	6999      	ldr	r1, [r3, #24]
 80084c0:	6281      	str	r1, [r0, #40]	; 0x28
 80084c2:	e9c3 2205 	strd	r2, r2, [r3, #20]
 80084c6:	e7f8      	b.n	80084ba <_ZN8touchgfx9Container9removeAllEv+0x2>
 80084c8:	4770      	bx	lr

080084ca <_ZN8touchgfx9Container6unlinkEv>:
 80084ca:	2300      	movs	r3, #0
 80084cc:	6283      	str	r3, [r0, #40]	; 0x28
 80084ce:	4770      	bx	lr

080084d0 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>:
 80084d0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80084d4:	461f      	mov	r7, r3
 80084d6:	f890 3024 	ldrb.w	r3, [r0, #36]	; 0x24
 80084da:	460d      	mov	r5, r1
 80084dc:	4616      	mov	r6, r2
 80084de:	b103      	cbz	r3, 80084e2 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x12>
 80084e0:	6038      	str	r0, [r7, #0]
 80084e2:	6a84      	ldr	r4, [r0, #40]	; 0x28
 80084e4:	b314      	cbz	r4, 800852c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x5c>
 80084e6:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 80084ea:	b1eb      	cbz	r3, 8008528 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 80084ec:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 80084f0:	428d      	cmp	r5, r1
 80084f2:	db19      	blt.n	8008528 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 80084f4:	8923      	ldrh	r3, [r4, #8]
 80084f6:	b289      	uxth	r1, r1
 80084f8:	440b      	add	r3, r1
 80084fa:	b21b      	sxth	r3, r3
 80084fc:	429d      	cmp	r5, r3
 80084fe:	da13      	bge.n	8008528 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 8008500:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 8008504:	4296      	cmp	r6, r2
 8008506:	db0f      	blt.n	8008528 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 8008508:	8963      	ldrh	r3, [r4, #10]
 800850a:	b292      	uxth	r2, r2
 800850c:	4413      	add	r3, r2
 800850e:	b21b      	sxth	r3, r3
 8008510:	429e      	cmp	r6, r3
 8008512:	da09      	bge.n	8008528 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 8008514:	6823      	ldr	r3, [r4, #0]
 8008516:	1ab2      	subs	r2, r6, r2
 8008518:	1a69      	subs	r1, r5, r1
 800851a:	f8d3 801c 	ldr.w	r8, [r3, #28]
 800851e:	b212      	sxth	r2, r2
 8008520:	463b      	mov	r3, r7
 8008522:	b209      	sxth	r1, r1
 8008524:	4620      	mov	r0, r4
 8008526:	47c0      	blx	r8
 8008528:	69a4      	ldr	r4, [r4, #24]
 800852a:	e7db      	b.n	80084e4 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x14>
 800852c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08008530 <_ZNK8touchgfx9Container12getSolidRectEv>:
 8008530:	2200      	movs	r2, #0
 8008532:	8002      	strh	r2, [r0, #0]
 8008534:	8042      	strh	r2, [r0, #2]
 8008536:	8082      	strh	r2, [r0, #4]
 8008538:	80c2      	strh	r2, [r0, #6]
 800853a:	4770      	bx	lr

0800853c <_ZN8touchgfx9Container20moveChildrenRelativeEss>:
 800853c:	b570      	push	{r4, r5, r6, lr}
 800853e:	6a84      	ldr	r4, [r0, #40]	; 0x28
 8008540:	460d      	mov	r5, r1
 8008542:	4616      	mov	r6, r2
 8008544:	b13c      	cbz	r4, 8008556 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x1a>
 8008546:	6823      	ldr	r3, [r4, #0]
 8008548:	4620      	mov	r0, r4
 800854a:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800854c:	4632      	mov	r2, r6
 800854e:	4629      	mov	r1, r5
 8008550:	4798      	blx	r3
 8008552:	69a4      	ldr	r4, [r4, #24]
 8008554:	e7f6      	b.n	8008544 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x8>
 8008556:	bd70      	pop	{r4, r5, r6, pc}

08008558 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE>:
 8008558:	b538      	push	{r3, r4, r5, lr}
 800855a:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800855c:	460d      	mov	r5, r1
 800855e:	b134      	cbz	r4, 800856e <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x16>
 8008560:	682b      	ldr	r3, [r5, #0]
 8008562:	4621      	mov	r1, r4
 8008564:	689b      	ldr	r3, [r3, #8]
 8008566:	4628      	mov	r0, r5
 8008568:	4798      	blx	r3
 800856a:	69a4      	ldr	r4, [r4, #24]
 800856c:	e7f7      	b.n	800855e <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x6>
 800856e:	bd38      	pop	{r3, r4, r5, pc}

08008570 <_ZN8touchgfx9ContainerD1Ev>:
 8008570:	4770      	bx	lr

08008572 <_ZN8touchgfx9ContainerD0Ev>:
 8008572:	b510      	push	{r4, lr}
 8008574:	212c      	movs	r1, #44	; 0x2c
 8008576:	4604      	mov	r4, r0
 8008578:	f010 fb0c 	bl	8018b94 <_ZdlPvj>
 800857c:	4620      	mov	r0, r4
 800857e:	bd10      	pop	{r4, pc}

08008580 <_ZN8touchgfx9Container6removeERNS_8DrawableE>:
 8008580:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8008582:	b19b      	cbz	r3, 80085ac <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 8008584:	428b      	cmp	r3, r1
 8008586:	d109      	bne.n	800859c <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x1c>
 8008588:	699a      	ldr	r2, [r3, #24]
 800858a:	2100      	movs	r1, #0
 800858c:	6159      	str	r1, [r3, #20]
 800858e:	6282      	str	r2, [r0, #40]	; 0x28
 8008590:	b902      	cbnz	r2, 8008594 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x14>
 8008592:	4770      	bx	lr
 8008594:	6199      	str	r1, [r3, #24]
 8008596:	4770      	bx	lr
 8008598:	4613      	mov	r3, r2
 800859a:	b13a      	cbz	r2, 80085ac <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 800859c:	699a      	ldr	r2, [r3, #24]
 800859e:	428a      	cmp	r2, r1
 80085a0:	d1fa      	bne.n	8008598 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x18>
 80085a2:	698a      	ldr	r2, [r1, #24]
 80085a4:	619a      	str	r2, [r3, #24]
 80085a6:	2300      	movs	r3, #0
 80085a8:	e9c1 3305 	strd	r3, r3, [r1, #20]
 80085ac:	4770      	bx	lr

080085ae <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_>:
 80085ae:	b410      	push	{r4}
 80085b0:	6a83      	ldr	r3, [r0, #40]	; 0x28
 80085b2:	4604      	mov	r4, r0
 80085b4:	b92b      	cbnz	r3, 80085c2 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x14>
 80085b6:	6803      	ldr	r3, [r0, #0]
 80085b8:	f85d 4b04 	ldr.w	r4, [sp], #4
 80085bc:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 80085be:	4611      	mov	r1, r2
 80085c0:	4718      	bx	r3
 80085c2:	b941      	cbnz	r1, 80085d6 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x28>
 80085c4:	6193      	str	r3, [r2, #24]
 80085c6:	6282      	str	r2, [r0, #40]	; 0x28
 80085c8:	6154      	str	r4, [r2, #20]
 80085ca:	f85d 4b04 	ldr.w	r4, [sp], #4
 80085ce:	4770      	bx	lr
 80085d0:	4603      	mov	r3, r0
 80085d2:	2800      	cmp	r0, #0
 80085d4:	d0f9      	beq.n	80085ca <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1c>
 80085d6:	4299      	cmp	r1, r3
 80085d8:	6998      	ldr	r0, [r3, #24]
 80085da:	d1f9      	bne.n	80085d0 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x22>
 80085dc:	6190      	str	r0, [r2, #24]
 80085de:	618a      	str	r2, [r1, #24]
 80085e0:	e7f2      	b.n	80085c8 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1a>
	...

080085e4 <_ZN8touchgfx9Container3addERNS_8DrawableE>:
 80085e4:	4288      	cmp	r0, r1
 80085e6:	b508      	push	{r3, lr}
 80085e8:	d105      	bne.n	80085f6 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x12>
 80085ea:	4b11      	ldr	r3, [pc, #68]	; (8008630 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x4c>)
 80085ec:	4a11      	ldr	r2, [pc, #68]	; (8008634 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x50>)
 80085ee:	2123      	movs	r1, #35	; 0x23
 80085f0:	4811      	ldr	r0, [pc, #68]	; (8008638 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x54>)
 80085f2:	f010 fafb 	bl	8018bec <__assert_func>
 80085f6:	694b      	ldr	r3, [r1, #20]
 80085f8:	b11b      	cbz	r3, 8008602 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x1e>
 80085fa:	4b10      	ldr	r3, [pc, #64]	; (800863c <_ZN8touchgfx9Container3addERNS_8DrawableE+0x58>)
 80085fc:	4a0d      	ldr	r2, [pc, #52]	; (8008634 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x50>)
 80085fe:	2124      	movs	r1, #36	; 0x24
 8008600:	e7f6      	b.n	80085f0 <_ZN8touchgfx9Container3addERNS_8DrawableE+0xc>
 8008602:	e9c1 0305 	strd	r0, r3, [r1, #20]
 8008606:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8008608:	b913      	cbnz	r3, 8008610 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x2c>
 800860a:	6281      	str	r1, [r0, #40]	; 0x28
 800860c:	bd08      	pop	{r3, pc}
 800860e:	4613      	mov	r3, r2
 8008610:	699a      	ldr	r2, [r3, #24]
 8008612:	b12a      	cbz	r2, 8008620 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x3c>
 8008614:	428b      	cmp	r3, r1
 8008616:	d1fa      	bne.n	800860e <_ZN8touchgfx9Container3addERNS_8DrawableE+0x2a>
 8008618:	4b09      	ldr	r3, [pc, #36]	; (8008640 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x5c>)
 800861a:	4a06      	ldr	r2, [pc, #24]	; (8008634 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x50>)
 800861c:	2135      	movs	r1, #53	; 0x35
 800861e:	e7e7      	b.n	80085f0 <_ZN8touchgfx9Container3addERNS_8DrawableE+0xc>
 8008620:	428b      	cmp	r3, r1
 8008622:	d103      	bne.n	800862c <_ZN8touchgfx9Container3addERNS_8DrawableE+0x48>
 8008624:	4b06      	ldr	r3, [pc, #24]	; (8008640 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x5c>)
 8008626:	4a03      	ldr	r2, [pc, #12]	; (8008634 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x50>)
 8008628:	2138      	movs	r1, #56	; 0x38
 800862a:	e7e1      	b.n	80085f0 <_ZN8touchgfx9Container3addERNS_8DrawableE+0xc>
 800862c:	6199      	str	r1, [r3, #24]
 800862e:	e7ed      	b.n	800860c <_ZN8touchgfx9Container3addERNS_8DrawableE+0x28>
 8008630:	0801ac2b 	.word	0x0801ac2b
 8008634:	0801ad80 	.word	0x0801ad80
 8008638:	0801ac57 	.word	0x0801ac57
 800863c:	0801ac8a 	.word	0x0801ac8a
 8008640:	0801acc0 	.word	0x0801acc0

08008644 <_ZN8touchgfx4RectaNERKS0_>:
 8008644:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8008648:	f9b1 7000 	ldrsh.w	r7, [r1]
 800864c:	888c      	ldrh	r4, [r1, #4]
 800864e:	f9b0 9000 	ldrsh.w	r9, [r0]
 8008652:	443c      	add	r4, r7
 8008654:	b2a4      	uxth	r4, r4
 8008656:	fa0f f884 	sxth.w	r8, r4
 800865a:	45c1      	cmp	r9, r8
 800865c:	da2f      	bge.n	80086be <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800865e:	8882      	ldrh	r2, [r0, #4]
 8008660:	444a      	add	r2, r9
 8008662:	b292      	uxth	r2, r2
 8008664:	fa0f fe82 	sxth.w	lr, r2
 8008668:	4577      	cmp	r7, lr
 800866a:	da28      	bge.n	80086be <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800866c:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
 8008670:	88cb      	ldrh	r3, [r1, #6]
 8008672:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 8008676:	442b      	add	r3, r5
 8008678:	b21b      	sxth	r3, r3
 800867a:	429e      	cmp	r6, r3
 800867c:	da1f      	bge.n	80086be <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800867e:	88c3      	ldrh	r3, [r0, #6]
 8008680:	4433      	add	r3, r6
 8008682:	b29b      	uxth	r3, r3
 8008684:	fa0f fc83 	sxth.w	ip, r3
 8008688:	4565      	cmp	r5, ip
 800868a:	da18      	bge.n	80086be <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800868c:	454f      	cmp	r7, r9
 800868e:	bfb8      	it	lt
 8008690:	464f      	movlt	r7, r9
 8008692:	42b5      	cmp	r5, r6
 8008694:	bfb8      	it	lt
 8008696:	4635      	movlt	r5, r6
 8008698:	45f0      	cmp	r8, lr
 800869a:	bfd8      	it	le
 800869c:	4622      	movle	r2, r4
 800869e:	1bd2      	subs	r2, r2, r7
 80086a0:	8082      	strh	r2, [r0, #4]
 80086a2:	884a      	ldrh	r2, [r1, #2]
 80086a4:	88c9      	ldrh	r1, [r1, #6]
 80086a6:	8007      	strh	r7, [r0, #0]
 80086a8:	440a      	add	r2, r1
 80086aa:	b292      	uxth	r2, r2
 80086ac:	b211      	sxth	r1, r2
 80086ae:	458c      	cmp	ip, r1
 80086b0:	bfa8      	it	ge
 80086b2:	4613      	movge	r3, r2
 80086b4:	1b5b      	subs	r3, r3, r5
 80086b6:	80c3      	strh	r3, [r0, #6]
 80086b8:	8045      	strh	r5, [r0, #2]
 80086ba:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80086be:	2300      	movs	r3, #0
 80086c0:	8003      	strh	r3, [r0, #0]
 80086c2:	8043      	strh	r3, [r0, #2]
 80086c4:	8083      	strh	r3, [r0, #4]
 80086c6:	80c3      	strh	r3, [r0, #6]
 80086c8:	e7f7      	b.n	80086ba <_ZN8touchgfx4RectaNERKS0_+0x76>

080086ca <_ZNK8touchgfx4Rect7isEmptyEv>:
 80086ca:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 80086ce:	2b00      	cmp	r3, #0
 80086d0:	dd06      	ble.n	80086e0 <_ZNK8touchgfx4Rect7isEmptyEv+0x16>
 80086d2:	f9b0 0006 	ldrsh.w	r0, [r0, #6]
 80086d6:	2800      	cmp	r0, #0
 80086d8:	bfcc      	ite	gt
 80086da:	2000      	movgt	r0, #0
 80086dc:	2001      	movle	r0, #1
 80086de:	4770      	bx	lr
 80086e0:	2001      	movs	r0, #1
 80086e2:	4770      	bx	lr

080086e4 <_ZNK8touchgfx9Container16getContainedAreaEv>:
 80086e4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80086e8:	2300      	movs	r3, #0
 80086ea:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 80086ec:	8003      	strh	r3, [r0, #0]
 80086ee:	4604      	mov	r4, r0
 80086f0:	8043      	strh	r3, [r0, #2]
 80086f2:	8083      	strh	r3, [r0, #4]
 80086f4:	80c3      	strh	r3, [r0, #6]
 80086f6:	2d00      	cmp	r5, #0
 80086f8:	d040      	beq.n	800877c <_ZNK8touchgfx9Container16getContainedAreaEv+0x98>
 80086fa:	1d28      	adds	r0, r5, #4
 80086fc:	f7ff ffe5 	bl	80086ca <_ZNK8touchgfx4Rect7isEmptyEv>
 8008700:	b988      	cbnz	r0, 8008726 <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 8008702:	4620      	mov	r0, r4
 8008704:	f7ff ffe1 	bl	80086ca <_ZNK8touchgfx4Rect7isEmptyEv>
 8008708:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 800870c:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 8008710:	f9b5 e008 	ldrsh.w	lr, [r5, #8]
 8008714:	f9b5 c00a 	ldrsh.w	ip, [r5, #10]
 8008718:	b138      	cbz	r0, 800872a <_ZNK8touchgfx9Container16getContainedAreaEv+0x46>
 800871a:	8022      	strh	r2, [r4, #0]
 800871c:	8063      	strh	r3, [r4, #2]
 800871e:	f8a4 e004 	strh.w	lr, [r4, #4]
 8008722:	f8a4 c006 	strh.w	ip, [r4, #6]
 8008726:	69ad      	ldr	r5, [r5, #24]
 8008728:	e7e5      	b.n	80086f6 <_ZNK8touchgfx9Container16getContainedAreaEv+0x12>
 800872a:	f9b4 0000 	ldrsh.w	r0, [r4]
 800872e:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 8008732:	f8b4 8004 	ldrh.w	r8, [r4, #4]
 8008736:	4290      	cmp	r0, r2
 8008738:	4607      	mov	r7, r0
 800873a:	bfa8      	it	ge
 800873c:	4617      	movge	r7, r2
 800873e:	4472      	add	r2, lr
 8008740:	f8b4 e006 	ldrh.w	lr, [r4, #6]
 8008744:	8027      	strh	r7, [r4, #0]
 8008746:	4299      	cmp	r1, r3
 8008748:	460e      	mov	r6, r1
 800874a:	4440      	add	r0, r8
 800874c:	bfa8      	it	ge
 800874e:	461e      	movge	r6, r3
 8008750:	4471      	add	r1, lr
 8008752:	4463      	add	r3, ip
 8008754:	b200      	sxth	r0, r0
 8008756:	b212      	sxth	r2, r2
 8008758:	b209      	sxth	r1, r1
 800875a:	b21b      	sxth	r3, r3
 800875c:	4290      	cmp	r0, r2
 800875e:	bfac      	ite	ge
 8008760:	ebc7 0200 	rsbge	r2, r7, r0
 8008764:	ebc7 0202 	rsblt	r2, r7, r2
 8008768:	4299      	cmp	r1, r3
 800876a:	bfac      	ite	ge
 800876c:	ebc6 0301 	rsbge	r3, r6, r1
 8008770:	ebc6 0303 	rsblt	r3, r6, r3
 8008774:	8066      	strh	r6, [r4, #2]
 8008776:	80a2      	strh	r2, [r4, #4]
 8008778:	80e3      	strh	r3, [r4, #6]
 800877a:	e7d4      	b.n	8008726 <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 800877c:	4620      	mov	r0, r4
 800877e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08008782 <_ZNK8touchgfx9Container4drawERKNS_4RectE>:
 8008782:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8008786:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 800878a:	b383      	cbz	r3, 80087ee <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 800878c:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800878e:	b374      	cbz	r4, 80087ee <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 8008790:	f9b1 5000 	ldrsh.w	r5, [r1]
 8008794:	f9b1 6002 	ldrsh.w	r6, [r1, #2]
 8008798:	f9b1 7004 	ldrsh.w	r7, [r1, #4]
 800879c:	f9b1 8006 	ldrsh.w	r8, [r1, #6]
 80087a0:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 80087a4:	b303      	cbz	r3, 80087e8 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 80087a6:	4668      	mov	r0, sp
 80087a8:	1d21      	adds	r1, r4, #4
 80087aa:	f8ad 5000 	strh.w	r5, [sp]
 80087ae:	f8ad 6002 	strh.w	r6, [sp, #2]
 80087b2:	f8ad 7004 	strh.w	r7, [sp, #4]
 80087b6:	f8ad 8006 	strh.w	r8, [sp, #6]
 80087ba:	f7ff ff43 	bl	8008644 <_ZN8touchgfx4RectaNERKS0_>
 80087be:	4668      	mov	r0, sp
 80087c0:	f7ff ff83 	bl	80086ca <_ZNK8touchgfx4Rect7isEmptyEv>
 80087c4:	b980      	cbnz	r0, 80087e8 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 80087c6:	f8bd 3000 	ldrh.w	r3, [sp]
 80087ca:	88a2      	ldrh	r2, [r4, #4]
 80087cc:	1a9b      	subs	r3, r3, r2
 80087ce:	f8ad 3000 	strh.w	r3, [sp]
 80087d2:	88e2      	ldrh	r2, [r4, #6]
 80087d4:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 80087d8:	1a9b      	subs	r3, r3, r2
 80087da:	f8ad 3002 	strh.w	r3, [sp, #2]
 80087de:	6823      	ldr	r3, [r4, #0]
 80087e0:	4669      	mov	r1, sp
 80087e2:	689b      	ldr	r3, [r3, #8]
 80087e4:	4620      	mov	r0, r4
 80087e6:	4798      	blx	r3
 80087e8:	69a4      	ldr	r4, [r4, #24]
 80087ea:	2c00      	cmp	r4, #0
 80087ec:	d1d8      	bne.n	80087a0 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x1e>
 80087ee:	b002      	add	sp, #8
 80087f0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080087f4 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>:
 80087f4:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80087f6:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 80087fa:	460d      	mov	r5, r1
 80087fc:	4616      	mov	r6, r2
 80087fe:	b323      	cbz	r3, 800884a <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 8008800:	6a84      	ldr	r4, [r0, #40]	; 0x28
 8008802:	b314      	cbz	r4, 800884a <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 8008804:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 8008808:	b1eb      	cbz	r3, 8008846 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 800880a:	6828      	ldr	r0, [r5, #0]
 800880c:	6869      	ldr	r1, [r5, #4]
 800880e:	466b      	mov	r3, sp
 8008810:	c303      	stmia	r3!, {r0, r1}
 8008812:	4668      	mov	r0, sp
 8008814:	1d21      	adds	r1, r4, #4
 8008816:	f7ff ff15 	bl	8008644 <_ZN8touchgfx4RectaNERKS0_>
 800881a:	4668      	mov	r0, sp
 800881c:	f7ff ff55 	bl	80086ca <_ZNK8touchgfx4Rect7isEmptyEv>
 8008820:	b988      	cbnz	r0, 8008846 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 8008822:	f8bd 3000 	ldrh.w	r3, [sp]
 8008826:	88a2      	ldrh	r2, [r4, #4]
 8008828:	1a9b      	subs	r3, r3, r2
 800882a:	f8ad 3000 	strh.w	r3, [sp]
 800882e:	88e2      	ldrh	r2, [r4, #6]
 8008830:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8008834:	1a9b      	subs	r3, r3, r2
 8008836:	f8ad 3002 	strh.w	r3, [sp, #2]
 800883a:	6823      	ldr	r3, [r4, #0]
 800883c:	4632      	mov	r2, r6
 800883e:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8008840:	4669      	mov	r1, sp
 8008842:	4620      	mov	r0, r4
 8008844:	4798      	blx	r3
 8008846:	69a4      	ldr	r4, [r4, #24]
 8008848:	e7db      	b.n	8008802 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0xe>
 800884a:	b002      	add	sp, #8
 800884c:	bd70      	pop	{r4, r5, r6, pc}

0800884e <_ZNK8touchgfx6Slider15getIndicatorMinEv>:
 800884e:	f8b0 00ee 	ldrh.w	r0, [r0, #238]	; 0xee
 8008852:	4770      	bx	lr

08008854 <_ZNK8touchgfx6Slider15getIndicatorMaxEv>:
 8008854:	f8b0 00ee 	ldrh.w	r0, [r0, #238]	; 0xee
 8008858:	4770      	bx	lr

0800885a <_ZNK8touchgfx6Slider11getMinValueEv>:
 800885a:	8e80      	ldrh	r0, [r0, #52]	; 0x34
 800885c:	4770      	bx	lr

0800885e <_ZNK8touchgfx6Slider11getMaxValueEv>:
 800885e:	8f00      	ldrh	r0, [r0, #56]	; 0x38
 8008860:	4770      	bx	lr

08008862 <_ZN8touchgfx6Slider8setValueEi>:
 8008862:	b570      	push	{r4, r5, r6, lr}
 8008864:	6803      	ldr	r3, [r0, #0]
 8008866:	e9d3 532a 	ldrd	r5, r3, [r3, #168]	; 0xa8
 800886a:	4604      	mov	r4, r0
 800886c:	4798      	blx	r3
 800886e:	462b      	mov	r3, r5
 8008870:	4601      	mov	r1, r0
 8008872:	4620      	mov	r0, r4
 8008874:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8008878:	4718      	bx	r3

0800887a <_ZNK8touchgfx6Slider15valueToPositionEi>:
 800887a:	b538      	push	{r3, r4, r5, lr}
 800887c:	e9d0 340d 	ldrd	r3, r4, [r0, #52]	; 0x34
 8008880:	428c      	cmp	r4, r1
 8008882:	bfa8      	it	ge
 8008884:	460c      	movge	r4, r1
 8008886:	429c      	cmp	r4, r3
 8008888:	bfac      	ite	ge
 800888a:	ebc3 0404 	rsbge	r4, r3, r4
 800888e:	ebc3 0403 	rsblt	r4, r3, r3
 8008892:	6803      	ldr	r3, [r0, #0]
 8008894:	4605      	mov	r5, r0
 8008896:	f8d3 30b8 	ldr.w	r3, [r3, #184]	; 0xb8
 800889a:	4798      	blx	r3
 800889c:	682b      	ldr	r3, [r5, #0]
 800889e:	fb00 4404 	mla	r4, r0, r4, r4
 80088a2:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 80088a6:	4628      	mov	r0, r5
 80088a8:	4798      	blx	r3
 80088aa:	f895 202c 	ldrb.w	r2, [r5, #44]	; 0x2c
 80088ae:	f9b5 30ec 	ldrsh.w	r3, [r5, #236]	; 0xec
 80088b2:	fb94 f0f0 	sdiv	r0, r4, r0
 80088b6:	2a01      	cmp	r2, #1
 80088b8:	bf08      	it	eq
 80088ba:	f9b5 20ee 	ldrsheq.w	r2, [r5, #238]	; 0xee
 80088be:	4418      	add	r0, r3
 80088c0:	bf04      	itt	eq
 80088c2:	1a10      	subeq	r0, r2, r0
 80088c4:	18c0      	addeq	r0, r0, r3
 80088c6:	b200      	sxth	r0, r0
 80088c8:	bd38      	pop	{r3, r4, r5, pc}

080088ca <_ZNK8touchgfx6Slider15positionToValueEs>:
 80088ca:	b570      	push	{r4, r5, r6, lr}
 80088cc:	f9b0 30ec 	ldrsh.w	r3, [r0, #236]	; 0xec
 80088d0:	428b      	cmp	r3, r1
 80088d2:	4605      	mov	r5, r0
 80088d4:	460c      	mov	r4, r1
 80088d6:	d109      	bne.n	80088ec <_ZNK8touchgfx6Slider15positionToValueEs+0x22>
 80088d8:	6b40      	ldr	r0, [r0, #52]	; 0x34
 80088da:	f895 302c 	ldrb.w	r3, [r5, #44]	; 0x2c
 80088de:	2b01      	cmp	r3, #1
 80088e0:	bf01      	itttt	eq
 80088e2:	6bab      	ldreq	r3, [r5, #56]	; 0x38
 80088e4:	1a18      	subeq	r0, r3, r0
 80088e6:	6b6b      	ldreq	r3, [r5, #52]	; 0x34
 80088e8:	18c0      	addeq	r0, r0, r3
 80088ea:	bd70      	pop	{r4, r5, r6, pc}
 80088ec:	f9b0 30ee 	ldrsh.w	r3, [r0, #238]	; 0xee
 80088f0:	428b      	cmp	r3, r1
 80088f2:	d101      	bne.n	80088f8 <_ZNK8touchgfx6Slider15positionToValueEs+0x2e>
 80088f4:	6b80      	ldr	r0, [r0, #56]	; 0x38
 80088f6:	e7f0      	b.n	80088da <_ZNK8touchgfx6Slider15positionToValueEs+0x10>
 80088f8:	6803      	ldr	r3, [r0, #0]
 80088fa:	f8d3 30b8 	ldr.w	r3, [r3, #184]	; 0xb8
 80088fe:	4798      	blx	r3
 8008900:	682b      	ldr	r3, [r5, #0]
 8008902:	f9b5 10ec 	ldrsh.w	r1, [r5, #236]	; 0xec
 8008906:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 800890a:	4606      	mov	r6, r0
 800890c:	4628      	mov	r0, r5
 800890e:	1a64      	subs	r4, r4, r1
 8008910:	4798      	blx	r3
 8008912:	682b      	ldr	r3, [r5, #0]
 8008914:	2102      	movs	r1, #2
 8008916:	f8d3 30b8 	ldr.w	r3, [r3, #184]	; 0xb8
 800891a:	fb96 f6f1 	sdiv	r6, r6, r1
 800891e:	fb00 6404 	mla	r4, r0, r4, r6
 8008922:	4628      	mov	r0, r5
 8008924:	4798      	blx	r3
 8008926:	6b6b      	ldr	r3, [r5, #52]	; 0x34
 8008928:	fb94 f0f0 	sdiv	r0, r4, r0
 800892c:	4418      	add	r0, r3
 800892e:	e7d4      	b.n	80088da <_ZNK8touchgfx6Slider15positionToValueEs+0x10>

08008930 <_ZNK8touchgfx6Slider18getIndicatorRadiusEv>:
 8008930:	f890 202c 	ldrb.w	r2, [r0, #44]	; 0x2c
 8008934:	2302      	movs	r3, #2
 8008936:	b92a      	cbnz	r2, 8008944 <_ZNK8touchgfx6Slider18getIndicatorRadiusEv+0x14>
 8008938:	f9b0 009c 	ldrsh.w	r0, [r0, #156]	; 0x9c
 800893c:	fb90 f0f3 	sdiv	r0, r0, r3
 8008940:	b280      	uxth	r0, r0
 8008942:	4770      	bx	lr
 8008944:	f9b0 009e 	ldrsh.w	r0, [r0, #158]	; 0x9e
 8008948:	e7f8      	b.n	800893c <_ZNK8touchgfx6Slider18getIndicatorRadiusEv+0xc>

0800894a <_ZN8touchgfx6Slider13setValueRangeEii>:
 800894a:	6b03      	ldr	r3, [r0, #48]	; 0x30
 800894c:	428b      	cmp	r3, r1
 800894e:	b410      	push	{r4}
 8008950:	db09      	blt.n	8008966 <_ZN8touchgfx6Slider13setValueRangeEii+0x1c>
 8008952:	4293      	cmp	r3, r2
 8008954:	bfa8      	it	ge
 8008956:	4613      	movge	r3, r2
 8008958:	6804      	ldr	r4, [r0, #0]
 800895a:	f8d4 4094 	ldr.w	r4, [r4, #148]	; 0x94
 800895e:	46a4      	mov	ip, r4
 8008960:	f85d 4b04 	ldr.w	r4, [sp], #4
 8008964:	4760      	bx	ip
 8008966:	460b      	mov	r3, r1
 8008968:	e7f6      	b.n	8008958 <_ZN8touchgfx6Slider13setValueRangeEii+0xe>

0800896a <_ZNK8touchgfx6Slider29getIndicatorPositionRangeSizeEv>:
 800896a:	f9b0 20ee 	ldrsh.w	r2, [r0, #238]	; 0xee
 800896e:	f9b0 00ec 	ldrsh.w	r0, [r0, #236]	; 0xec
 8008972:	1a10      	subs	r0, r2, r0
 8008974:	4770      	bx	lr

08008976 <_ZNK8touchgfx6Slider17getValueRangeSizeEv>:
 8008976:	e9d0 020d 	ldrd	r0, r2, [r0, #52]	; 0x34
 800897a:	1a10      	subs	r0, r2, r0
 800897c:	4770      	bx	lr

0800897e <_ZN8touchgfx6SliderD1Ev>:
 800897e:	4770      	bx	lr

08008980 <_ZN8touchgfx6Slider23updateIndicatorPositionEs>:
 8008980:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8008984:	f9b0 60ec 	ldrsh.w	r6, [r0, #236]	; 0xec
 8008988:	428e      	cmp	r6, r1
 800898a:	4604      	mov	r4, r0
 800898c:	bfb8      	it	lt
 800898e:	460e      	movlt	r6, r1
 8008990:	f9b0 10ee 	ldrsh.w	r1, [r0, #238]	; 0xee
 8008994:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
 8008998:	428e      	cmp	r6, r1
 800899a:	bfa8      	it	ge
 800899c:	460e      	movge	r6, r1
 800899e:	3094      	adds	r0, #148	; 0x94
 80089a0:	f104 07c0 	add.w	r7, r4, #192	; 0xc0
 80089a4:	fa1f f886 	uxth.w	r8, r6
 80089a8:	2b00      	cmp	r3, #0
 80089aa:	d132      	bne.n	8008a12 <_ZN8touchgfx6Slider23updateIndicatorPositionEs+0x92>
 80089ac:	f9b4 209a 	ldrsh.w	r2, [r4, #154]	; 0x9a
 80089b0:	4631      	mov	r1, r6
 80089b2:	f7f9 ffb9 	bl	8002928 <_ZN8touchgfx8Drawable6moveToEss>
 80089b6:	4638      	mov	r0, r7
 80089b8:	f003 f943 	bl	800bc42 <_ZNK8touchgfx8Drawable10invalidateEv>
 80089bc:	6823      	ldr	r3, [r4, #0]
 80089be:	f8b4 20c4 	ldrh.w	r2, [r4, #196]	; 0xc4
 80089c2:	f8d3 30b4 	ldr.w	r3, [r3, #180]	; 0xb4
 80089c6:	4620      	mov	r0, r4
 80089c8:	eba8 0802 	sub.w	r8, r8, r2
 80089cc:	4798      	blx	r3
 80089ce:	fa1f f888 	uxth.w	r8, r8
 80089d2:	4480      	add	r8, r0
 80089d4:	f8a4 80c8 	strh.w	r8, [r4, #200]	; 0xc8
 80089d8:	4638      	mov	r0, r7
 80089da:	f003 f932 	bl	800bc42 <_ZNK8touchgfx8Drawable10invalidateEv>
 80089de:	6823      	ldr	r3, [r4, #0]
 80089e0:	4631      	mov	r1, r6
 80089e2:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 80089e6:	4620      	mov	r0, r4
 80089e8:	4798      	blx	r3
 80089ea:	6320      	str	r0, [r4, #48]	; 0x30
 80089ec:	f8d4 00f8 	ldr.w	r0, [r4, #248]	; 0xf8
 80089f0:	2800      	cmp	r0, #0
 80089f2:	d03c      	beq.n	8008a6e <_ZN8touchgfx6Slider23updateIndicatorPositionEs+0xee>
 80089f4:	6803      	ldr	r3, [r0, #0]
 80089f6:	68db      	ldr	r3, [r3, #12]
 80089f8:	4798      	blx	r3
 80089fa:	2800      	cmp	r0, #0
 80089fc:	d037      	beq.n	8008a6e <_ZN8touchgfx6Slider23updateIndicatorPositionEs+0xee>
 80089fe:	f8d4 00f8 	ldr.w	r0, [r4, #248]	; 0xf8
 8008a02:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8008a04:	6803      	ldr	r3, [r0, #0]
 8008a06:	689b      	ldr	r3, [r3, #8]
 8008a08:	4621      	mov	r1, r4
 8008a0a:	b003      	add	sp, #12
 8008a0c:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8008a10:	4718      	bx	r3
 8008a12:	4632      	mov	r2, r6
 8008a14:	f9b4 1098 	ldrsh.w	r1, [r4, #152]	; 0x98
 8008a18:	f7f9 ff86 	bl	8002928 <_ZN8touchgfx8Drawable6moveToEss>
 8008a1c:	4638      	mov	r0, r7
 8008a1e:	f003 f910 	bl	800bc42 <_ZNK8touchgfx8Drawable10invalidateEv>
 8008a22:	f8b4 0042 	ldrh.w	r0, [r4, #66]	; 0x42
 8008a26:	f8b4 5046 	ldrh.w	r5, [r4, #70]	; 0x46
 8008a2a:	6823      	ldr	r3, [r4, #0]
 8008a2c:	4405      	add	r5, r0
 8008a2e:	f8d3 30b4 	ldr.w	r3, [r3, #180]	; 0xb4
 8008a32:	4620      	mov	r0, r4
 8008a34:	4798      	blx	r3
 8008a36:	b2ad      	uxth	r5, r5
 8008a38:	6823      	ldr	r3, [r4, #0]
 8008a3a:	f9b4 90c4 	ldrsh.w	r9, [r4, #196]	; 0xc4
 8008a3e:	f8d3 30b4 	ldr.w	r3, [r3, #180]	; 0xb4
 8008a42:	eba5 0508 	sub.w	r5, r5, r8
 8008a46:	1a2d      	subs	r5, r5, r0
 8008a48:	4620      	mov	r0, r4
 8008a4a:	4798      	blx	r3
 8008a4c:	b2ad      	uxth	r5, r5
 8008a4e:	b22a      	sxth	r2, r5
 8008a50:	4440      	add	r0, r8
 8008a52:	9200      	str	r2, [sp, #0]
 8008a54:	f9b4 30c8 	ldrsh.w	r3, [r4, #200]	; 0xc8
 8008a58:	b202      	sxth	r2, r0
 8008a5a:	4649      	mov	r1, r9
 8008a5c:	4638      	mov	r0, r7
 8008a5e:	f7f9 ff35 	bl	80028cc <_ZN8touchgfx8Drawable11setPositionEssss>
 8008a62:	f8b4 0072 	ldrh.w	r0, [r4, #114]	; 0x72
 8008a66:	1a2d      	subs	r5, r5, r0
 8008a68:	f8a4 506e 	strh.w	r5, [r4, #110]	; 0x6e
 8008a6c:	e7b4      	b.n	80089d8 <_ZN8touchgfx6Slider23updateIndicatorPositionEs+0x58>
 8008a6e:	b003      	add	sp, #12
 8008a70:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

08008a74 <_ZN8touchgfx6SliderD0Ev>:
 8008a74:	b510      	push	{r4, lr}
 8008a76:	21fc      	movs	r1, #252	; 0xfc
 8008a78:	4604      	mov	r4, r0
 8008a7a:	f010 f88b 	bl	8018b94 <_ZdlPvj>
 8008a7e:	4620      	mov	r0, r4
 8008a80:	bd10      	pop	{r4, pc}
	...

08008a84 <_ZN8touchgfx6Slider21setupHorizontalSliderEttttt>:
 8008a84:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8008a88:	f8bd 8030 	ldrh.w	r8, [sp, #48]	; 0x30
 8008a8c:	f8bd 7034 	ldrh.w	r7, [sp, #52]	; 0x34
 8008a90:	45b8      	cmp	r8, r7
 8008a92:	4604      	mov	r4, r0
 8008a94:	4689      	mov	r9, r1
 8008a96:	4616      	mov	r6, r2
 8008a98:	461d      	mov	r5, r3
 8008a9a:	d305      	bcc.n	8008aa8 <_ZN8touchgfx6Slider21setupHorizontalSliderEttttt+0x24>
 8008a9c:	4b28      	ldr	r3, [pc, #160]	; (8008b40 <_ZN8touchgfx6Slider21setupHorizontalSliderEttttt+0xbc>)
 8008a9e:	4a29      	ldr	r2, [pc, #164]	; (8008b44 <_ZN8touchgfx6Slider21setupHorizontalSliderEttttt+0xc0>)
 8008aa0:	4829      	ldr	r0, [pc, #164]	; (8008b48 <_ZN8touchgfx6Slider21setupHorizontalSliderEttttt+0xc4>)
 8008aa2:	2143      	movs	r1, #67	; 0x43
 8008aa4:	f010 f8a2 	bl	8018bec <__assert_func>
 8008aa8:	f04f 0a00 	mov.w	sl, #0
 8008aac:	b213      	sxth	r3, r2
 8008aae:	fa0f fb81 	sxth.w	fp, r1
 8008ab2:	f880 a02c 	strb.w	sl, [r0, #44]	; 0x2c
 8008ab6:	461a      	mov	r2, r3
 8008ab8:	4659      	mov	r1, fp
 8008aba:	303c      	adds	r0, #60	; 0x3c
 8008abc:	9301      	str	r3, [sp, #4]
 8008abe:	f7f9 ff1d 	bl	80028fc <_ZN8touchgfx8Drawable5setXYEss>
 8008ac2:	9b01      	ldr	r3, [sp, #4]
 8008ac4:	4659      	mov	r1, fp
 8008ac6:	461a      	mov	r2, r3
 8008ac8:	f104 00c0 	add.w	r0, r4, #192	; 0xc0
 8008acc:	f7f9 ff16 	bl	80028fc <_ZN8touchgfx8Drawable5setXYEss>
 8008ad0:	4652      	mov	r2, sl
 8008ad2:	4651      	mov	r1, sl
 8008ad4:	f104 0068 	add.w	r0, r4, #104	; 0x68
 8008ad8:	f7f9 ff10 	bl	80028fc <_ZN8touchgfx8Drawable5setXYEss>
 8008adc:	f8b4 1044 	ldrh.w	r1, [r4, #68]	; 0x44
 8008ae0:	f8a4 509a 	strh.w	r5, [r4, #154]	; 0x9a
 8008ae4:	4449      	add	r1, r9
 8008ae6:	b28b      	uxth	r3, r1
 8008ae8:	f8b4 109c 	ldrh.w	r1, [r4, #156]	; 0x9c
 8008aec:	f8a4 80ec 	strh.w	r8, [r4, #236]	; 0xec
 8008af0:	4439      	add	r1, r7
 8008af2:	b289      	uxth	r1, r1
 8008af4:	428b      	cmp	r3, r1
 8008af6:	bf88      	it	hi
 8008af8:	b219      	sxthhi	r1, r3
 8008afa:	f8b4 3046 	ldrh.w	r3, [r4, #70]	; 0x46
 8008afe:	f8a4 70ee 	strh.w	r7, [r4, #238]	; 0xee
 8008b02:	441e      	add	r6, r3
 8008b04:	f8b4 309e 	ldrh.w	r3, [r4, #158]	; 0x9e
 8008b08:	441d      	add	r5, r3
 8008b0a:	6823      	ldr	r3, [r4, #0]
 8008b0c:	b2ad      	uxth	r5, r5
 8008b0e:	b2b6      	uxth	r6, r6
 8008b10:	bf98      	it	ls
 8008b12:	b209      	sxthls	r1, r1
 8008b14:	4620      	mov	r0, r4
 8008b16:	42ae      	cmp	r6, r5
 8008b18:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8008b1a:	bf8c      	ite	hi
 8008b1c:	b235      	sxthhi	r5, r6
 8008b1e:	b22d      	sxthls	r5, r5
 8008b20:	4798      	blx	r3
 8008b22:	6823      	ldr	r3, [r4, #0]
 8008b24:	4629      	mov	r1, r5
 8008b26:	4620      	mov	r0, r4
 8008b28:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8008b2a:	4798      	blx	r3
 8008b2c:	6823      	ldr	r3, [r4, #0]
 8008b2e:	6b21      	ldr	r1, [r4, #48]	; 0x30
 8008b30:	f8d3 30a4 	ldr.w	r3, [r3, #164]	; 0xa4
 8008b34:	4620      	mov	r0, r4
 8008b36:	b003      	add	sp, #12
 8008b38:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8008b3c:	4718      	bx	r3
 8008b3e:	bf00      	nop
 8008b40:	0801af64 	.word	0x0801af64
 8008b44:	0801b1de 	.word	0x0801b1de
 8008b48:	0801afd8 	.word	0x0801afd8

08008b4c <_ZN8touchgfx6Slider19setupVerticalSliderEttttt>:
 8008b4c:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8008b50:	f8bd 7028 	ldrh.w	r7, [sp, #40]	; 0x28
 8008b54:	f8bd 602c 	ldrh.w	r6, [sp, #44]	; 0x2c
 8008b58:	42b7      	cmp	r7, r6
 8008b5a:	4604      	mov	r4, r0
 8008b5c:	4689      	mov	r9, r1
 8008b5e:	4690      	mov	r8, r2
 8008b60:	461d      	mov	r5, r3
 8008b62:	d305      	bcc.n	8008b70 <_ZN8touchgfx6Slider19setupVerticalSliderEttttt+0x24>
 8008b64:	4b25      	ldr	r3, [pc, #148]	; (8008bfc <_ZN8touchgfx6Slider19setupVerticalSliderEttttt+0xb0>)
 8008b66:	4a26      	ldr	r2, [pc, #152]	; (8008c00 <_ZN8touchgfx6Slider19setupVerticalSliderEttttt+0xb4>)
 8008b68:	4826      	ldr	r0, [pc, #152]	; (8008c04 <_ZN8touchgfx6Slider19setupVerticalSliderEttttt+0xb8>)
 8008b6a:	215f      	movs	r1, #95	; 0x5f
 8008b6c:	f010 f83e 	bl	8018bec <__assert_func>
 8008b70:	2301      	movs	r3, #1
 8008b72:	fa0f fa81 	sxth.w	sl, r1
 8008b76:	fa0f fb82 	sxth.w	fp, r2
 8008b7a:	f880 302c 	strb.w	r3, [r0, #44]	; 0x2c
 8008b7e:	465a      	mov	r2, fp
 8008b80:	4651      	mov	r1, sl
 8008b82:	303c      	adds	r0, #60	; 0x3c
 8008b84:	f7f9 feba 	bl	80028fc <_ZN8touchgfx8Drawable5setXYEss>
 8008b88:	465a      	mov	r2, fp
 8008b8a:	4651      	mov	r1, sl
 8008b8c:	f104 00c0 	add.w	r0, r4, #192	; 0xc0
 8008b90:	f7f9 feb4 	bl	80028fc <_ZN8touchgfx8Drawable5setXYEss>
 8008b94:	f8b4 1044 	ldrh.w	r1, [r4, #68]	; 0x44
 8008b98:	f8a4 5098 	strh.w	r5, [r4, #152]	; 0x98
 8008b9c:	4489      	add	r9, r1
 8008b9e:	f8b4 109c 	ldrh.w	r1, [r4, #156]	; 0x9c
 8008ba2:	6823      	ldr	r3, [r4, #0]
 8008ba4:	f8a4 70ec 	strh.w	r7, [r4, #236]	; 0xec
 8008ba8:	4429      	add	r1, r5
 8008baa:	f8b4 5046 	ldrh.w	r5, [r4, #70]	; 0x46
 8008bae:	f8a4 60ee 	strh.w	r6, [r4, #238]	; 0xee
 8008bb2:	44a8      	add	r8, r5
 8008bb4:	f8b4 509e 	ldrh.w	r5, [r4, #158]	; 0x9e
 8008bb8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8008bba:	b289      	uxth	r1, r1
 8008bbc:	fa1f f989 	uxth.w	r9, r9
 8008bc0:	4435      	add	r5, r6
 8008bc2:	4589      	cmp	r9, r1
 8008bc4:	b2ad      	uxth	r5, r5
 8008bc6:	fa1f f888 	uxth.w	r8, r8
 8008bca:	bf8c      	ite	hi
 8008bcc:	fa0f f189 	sxthhi.w	r1, r9
 8008bd0:	b209      	sxthls	r1, r1
 8008bd2:	4620      	mov	r0, r4
 8008bd4:	45a8      	cmp	r8, r5
 8008bd6:	bf8c      	ite	hi
 8008bd8:	fa0f f588 	sxthhi.w	r5, r8
 8008bdc:	b22d      	sxthls	r5, r5
 8008bde:	4798      	blx	r3
 8008be0:	6823      	ldr	r3, [r4, #0]
 8008be2:	4629      	mov	r1, r5
 8008be4:	4620      	mov	r0, r4
 8008be6:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8008be8:	4798      	blx	r3
 8008bea:	6823      	ldr	r3, [r4, #0]
 8008bec:	6b21      	ldr	r1, [r4, #48]	; 0x30
 8008bee:	f8d3 30a4 	ldr.w	r3, [r3, #164]	; 0xa4
 8008bf2:	4620      	mov	r0, r4
 8008bf4:	b001      	add	sp, #4
 8008bf6:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8008bfa:	4718      	bx	r3
 8008bfc:	0801aef2 	.word	0x0801aef2
 8008c00:	0801b179 	.word	0x0801b179
 8008c04:	0801afd8 	.word	0x0801afd8

08008c08 <_ZN8touchgfx6Slider13setValueRangeEiii>:
 8008c08:	4291      	cmp	r1, r2
 8008c0a:	b510      	push	{r4, lr}
 8008c0c:	db06      	blt.n	8008c1c <_ZN8touchgfx6Slider13setValueRangeEiii+0x14>
 8008c0e:	4b08      	ldr	r3, [pc, #32]	; (8008c30 <_ZN8touchgfx6Slider13setValueRangeEiii+0x28>)
 8008c10:	4a08      	ldr	r2, [pc, #32]	; (8008c34 <_ZN8touchgfx6Slider13setValueRangeEiii+0x2c>)
 8008c12:	4809      	ldr	r0, [pc, #36]	; (8008c38 <_ZN8touchgfx6Slider13setValueRangeEiii+0x30>)
 8008c14:	f240 1107 	movw	r1, #263	; 0x107
 8008c18:	f00f ffe8 	bl	8018bec <__assert_func>
 8008c1c:	e9c0 120d 	strd	r1, r2, [r0, #52]	; 0x34
 8008c20:	6802      	ldr	r2, [r0, #0]
 8008c22:	4619      	mov	r1, r3
 8008c24:	f8d2 20a4 	ldr.w	r2, [r2, #164]	; 0xa4
 8008c28:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8008c2c:	4710      	bx	r2
 8008c2e:	bf00      	nop
 8008c30:	0801ae9a 	.word	0x0801ae9a
 8008c34:	0801b13d 	.word	0x0801b13d
 8008c38:	0801afd8 	.word	0x0801afd8

08008c3c <_ZN8touchgfx6Slider16handleClickEventERKNS_10ClickEventE>:
 8008c3c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8008c40:	790b      	ldrb	r3, [r1, #4]
 8008c42:	4604      	mov	r4, r0
 8008c44:	460d      	mov	r5, r1
 8008c46:	b323      	cbz	r3, 8008c92 <_ZN8touchgfx6Slider16handleClickEventERKNS_10ClickEventE+0x56>
 8008c48:	2b01      	cmp	r3, #1
 8008c4a:	d135      	bne.n	8008cb8 <_ZN8touchgfx6Slider16handleClickEventERKNS_10ClickEventE+0x7c>
 8008c4c:	6823      	ldr	r3, [r4, #0]
 8008c4e:	f894 202c 	ldrb.w	r2, [r4, #44]	; 0x2c
 8008c52:	f8d3 70a8 	ldr.w	r7, [r3, #168]	; 0xa8
 8008c56:	f8d3 30b4 	ldr.w	r3, [r3, #180]	; 0xb4
 8008c5a:	2a00      	cmp	r2, #0
 8008c5c:	d12a      	bne.n	8008cb4 <_ZN8touchgfx6Slider16handleClickEventERKNS_10ClickEventE+0x78>
 8008c5e:	88ee      	ldrh	r6, [r5, #6]
 8008c60:	4620      	mov	r0, r4
 8008c62:	4798      	blx	r3
 8008c64:	1a31      	subs	r1, r6, r0
 8008c66:	b209      	sxth	r1, r1
 8008c68:	4620      	mov	r0, r4
 8008c6a:	47b8      	blx	r7
 8008c6c:	792b      	ldrb	r3, [r5, #4]
 8008c6e:	2b01      	cmp	r3, #1
 8008c70:	d122      	bne.n	8008cb8 <_ZN8touchgfx6Slider16handleClickEventERKNS_10ClickEventE+0x7c>
 8008c72:	f8d4 00f4 	ldr.w	r0, [r4, #244]	; 0xf4
 8008c76:	b1f8      	cbz	r0, 8008cb8 <_ZN8touchgfx6Slider16handleClickEventERKNS_10ClickEventE+0x7c>
 8008c78:	6803      	ldr	r3, [r0, #0]
 8008c7a:	68db      	ldr	r3, [r3, #12]
 8008c7c:	4798      	blx	r3
 8008c7e:	b1d8      	cbz	r0, 8008cb8 <_ZN8touchgfx6Slider16handleClickEventERKNS_10ClickEventE+0x7c>
 8008c80:	f8d4 00f4 	ldr.w	r0, [r4, #244]	; 0xf4
 8008c84:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8008c86:	6803      	ldr	r3, [r0, #0]
 8008c88:	4621      	mov	r1, r4
 8008c8a:	689b      	ldr	r3, [r3, #8]
 8008c8c:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8008c90:	4718      	bx	r3
 8008c92:	f8d0 00f0 	ldr.w	r0, [r0, #240]	; 0xf0
 8008c96:	2800      	cmp	r0, #0
 8008c98:	d0d8      	beq.n	8008c4c <_ZN8touchgfx6Slider16handleClickEventERKNS_10ClickEventE+0x10>
 8008c9a:	6803      	ldr	r3, [r0, #0]
 8008c9c:	68db      	ldr	r3, [r3, #12]
 8008c9e:	4798      	blx	r3
 8008ca0:	2800      	cmp	r0, #0
 8008ca2:	d0d3      	beq.n	8008c4c <_ZN8touchgfx6Slider16handleClickEventERKNS_10ClickEventE+0x10>
 8008ca4:	f8d4 00f0 	ldr.w	r0, [r4, #240]	; 0xf0
 8008ca8:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8008caa:	6803      	ldr	r3, [r0, #0]
 8008cac:	4621      	mov	r1, r4
 8008cae:	689b      	ldr	r3, [r3, #8]
 8008cb0:	4798      	blx	r3
 8008cb2:	e7cb      	b.n	8008c4c <_ZN8touchgfx6Slider16handleClickEventERKNS_10ClickEventE+0x10>
 8008cb4:	892e      	ldrh	r6, [r5, #8]
 8008cb6:	e7d3      	b.n	8008c60 <_ZN8touchgfx6Slider16handleClickEventERKNS_10ClickEventE+0x24>
 8008cb8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08008cbc <_ZN8touchgfx6Slider15handleDragEventERKNS_9DragEventE>:
 8008cbc:	b570      	push	{r4, r5, r6, lr}
 8008cbe:	6803      	ldr	r3, [r0, #0]
 8008cc0:	f890 202c 	ldrb.w	r2, [r0, #44]	; 0x2c
 8008cc4:	f8d3 60a8 	ldr.w	r6, [r3, #168]	; 0xa8
 8008cc8:	f8d3 30b4 	ldr.w	r3, [r3, #180]	; 0xb4
 8008ccc:	4604      	mov	r4, r0
 8008cce:	b942      	cbnz	r2, 8008ce2 <_ZN8touchgfx6Slider15handleDragEventERKNS_9DragEventE+0x26>
 8008cd0:	894d      	ldrh	r5, [r1, #10]
 8008cd2:	4798      	blx	r3
 8008cd4:	1a29      	subs	r1, r5, r0
 8008cd6:	4633      	mov	r3, r6
 8008cd8:	4620      	mov	r0, r4
 8008cda:	b209      	sxth	r1, r1
 8008cdc:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8008ce0:	4718      	bx	r3
 8008ce2:	898d      	ldrh	r5, [r1, #12]
 8008ce4:	e7f5      	b.n	8008cd2 <_ZN8touchgfx6Slider15handleDragEventERKNS_9DragEventE+0x16>
	...

08008ce8 <_ZN8touchgfx9ContainerC1Ev>:
 8008ce8:	2101      	movs	r1, #1
 8008cea:	2200      	movs	r2, #0
 8008cec:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
 8008cf0:	4908      	ldr	r1, [pc, #32]	; (8008d14 <_ZN8touchgfx9ContainerC1Ev+0x2c>)
 8008cf2:	8082      	strh	r2, [r0, #4]
 8008cf4:	80c2      	strh	r2, [r0, #6]
 8008cf6:	8102      	strh	r2, [r0, #8]
 8008cf8:	8142      	strh	r2, [r0, #10]
 8008cfa:	8182      	strh	r2, [r0, #12]
 8008cfc:	81c2      	strh	r2, [r0, #14]
 8008cfe:	8202      	strh	r2, [r0, #16]
 8008d00:	8242      	strh	r2, [r0, #18]
 8008d02:	e9c0 2205 	strd	r2, r2, [r0, #20]
 8008d06:	61c2      	str	r2, [r0, #28]
 8008d08:	f880 2024 	strb.w	r2, [r0, #36]	; 0x24
 8008d0c:	6001      	str	r1, [r0, #0]
 8008d0e:	6282      	str	r2, [r0, #40]	; 0x28
 8008d10:	4770      	bx	lr
 8008d12:	bf00      	nop
 8008d14:	0801acfc 	.word	0x0801acfc

08008d18 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>:
 8008d18:	b510      	push	{r4, lr}
 8008d1a:	2300      	movs	r3, #0
 8008d1c:	8083      	strh	r3, [r0, #4]
 8008d1e:	80c3      	strh	r3, [r0, #6]
 8008d20:	8103      	strh	r3, [r0, #8]
 8008d22:	8143      	strh	r3, [r0, #10]
 8008d24:	8183      	strh	r3, [r0, #12]
 8008d26:	81c3      	strh	r3, [r0, #14]
 8008d28:	8203      	strh	r3, [r0, #16]
 8008d2a:	8243      	strh	r3, [r0, #18]
 8008d2c:	e9c0 3305 	strd	r3, r3, [r0, #20]
 8008d30:	61c3      	str	r3, [r0, #28]
 8008d32:	f880 3024 	strb.w	r3, [r0, #36]	; 0x24
 8008d36:	2301      	movs	r3, #1
 8008d38:	f880 3025 	strb.w	r3, [r0, #37]	; 0x25
 8008d3c:	4b05      	ldr	r3, [pc, #20]	; (8008d54 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE+0x3c>)
 8008d3e:	6003      	str	r3, [r0, #0]
 8008d40:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8008d44:	4604      	mov	r4, r0
 8008d46:	84c3      	strh	r3, [r0, #38]	; 0x26
 8008d48:	f880 3028 	strb.w	r3, [r0, #40]	; 0x28
 8008d4c:	f001 fa51 	bl	800a1f2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8008d50:	4620      	mov	r0, r4
 8008d52:	bd10      	pop	{r4, pc}
 8008d54:	0801bb6c 	.word	0x0801bb6c

08008d58 <_ZN8touchgfx6SliderC1Ev>:
 8008d58:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8008d5c:	ae02      	add	r6, sp, #8
 8008d5e:	f64f 77ff 	movw	r7, #65535	; 0xffff
 8008d62:	4604      	mov	r4, r0
 8008d64:	f7ff ffc0 	bl	8008ce8 <_ZN8touchgfx9ContainerC1Ev>
 8008d68:	f826 7d04 	strh.w	r7, [r6, #-4]!
 8008d6c:	4b23      	ldr	r3, [pc, #140]	; (8008dfc <_ZN8touchgfx6SliderC1Ev+0xa4>)
 8008d6e:	6023      	str	r3, [r4, #0]
 8008d70:	2500      	movs	r5, #0
 8008d72:	f04f 0b01 	mov.w	fp, #1
 8008d76:	f104 093c 	add.w	r9, r4, #60	; 0x3c
 8008d7a:	4631      	mov	r1, r6
 8008d7c:	f104 0a68 	add.w	sl, r4, #104	; 0x68
 8008d80:	f884 502c 	strb.w	r5, [r4, #44]	; 0x2c
 8008d84:	e9c4 550c 	strd	r5, r5, [r4, #48]	; 0x30
 8008d88:	f8c4 b038 	str.w	fp, [r4, #56]	; 0x38
 8008d8c:	4648      	mov	r0, r9
 8008d8e:	f7ff ffc3 	bl	8008d18 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 8008d92:	f104 0894 	add.w	r8, r4, #148	; 0x94
 8008d96:	4631      	mov	r1, r6
 8008d98:	4650      	mov	r0, sl
 8008d9a:	f8ad 7004 	strh.w	r7, [sp, #4]
 8008d9e:	f7ff ffbb 	bl	8008d18 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 8008da2:	4631      	mov	r1, r6
 8008da4:	4640      	mov	r0, r8
 8008da6:	f104 06c0 	add.w	r6, r4, #192	; 0xc0
 8008daa:	f8ad 7004 	strh.w	r7, [sp, #4]
 8008dae:	f7ff ffb3 	bl	8008d18 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 8008db2:	4630      	mov	r0, r6
 8008db4:	f7ff ff98 	bl	8008ce8 <_ZN8touchgfx9ContainerC1Ev>
 8008db8:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 8008dbc:	e9c4 353b 	strd	r3, r5, [r4, #236]	; 0xec
 8008dc0:	4651      	mov	r1, sl
 8008dc2:	4630      	mov	r0, r6
 8008dc4:	e9c4 553d 	strd	r5, r5, [r4, #244]	; 0xf4
 8008dc8:	f884 b024 	strb.w	fp, [r4, #36]	; 0x24
 8008dcc:	f7ff fc0a 	bl	80085e4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8008dd0:	4649      	mov	r1, r9
 8008dd2:	4620      	mov	r0, r4
 8008dd4:	f7ff fc06 	bl	80085e4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8008dd8:	4631      	mov	r1, r6
 8008dda:	4620      	mov	r0, r4
 8008ddc:	f7ff fc02 	bl	80085e4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8008de0:	4641      	mov	r1, r8
 8008de2:	4620      	mov	r0, r4
 8008de4:	f7ff fbfe 	bl	80085e4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8008de8:	4620      	mov	r0, r4
 8008dea:	2264      	movs	r2, #100	; 0x64
 8008dec:	4629      	mov	r1, r5
 8008dee:	f7ff fdac 	bl	800894a <_ZN8touchgfx6Slider13setValueRangeEii>
 8008df2:	4620      	mov	r0, r4
 8008df4:	b003      	add	sp, #12
 8008df6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8008dfa:	bf00      	nop
 8008dfc:	0801b010 	.word	0x0801b010

08008e00 <_ZN8touchgfx6Slider10setBitmapsERKNS_6BitmapES3_S3_>:
 8008e00:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8008e04:	4604      	mov	r4, r0
 8008e06:	4608      	mov	r0, r1
 8008e08:	4615      	mov	r5, r2
 8008e0a:	460e      	mov	r6, r1
 8008e0c:	461f      	mov	r7, r3
 8008e0e:	f004 fa1f 	bl	800d250 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8008e12:	4680      	mov	r8, r0
 8008e14:	4628      	mov	r0, r5
 8008e16:	f004 fa1b 	bl	800d250 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8008e1a:	4580      	cmp	r8, r0
 8008e1c:	d005      	beq.n	8008e2a <_ZN8touchgfx6Slider10setBitmapsERKNS_6BitmapES3_S3_+0x2a>
 8008e1e:	4b14      	ldr	r3, [pc, #80]	; (8008e70 <_ZN8touchgfx6Slider10setBitmapsERKNS_6BitmapES3_S3_+0x70>)
 8008e20:	4a14      	ldr	r2, [pc, #80]	; (8008e74 <_ZN8touchgfx6Slider10setBitmapsERKNS_6BitmapES3_S3_+0x74>)
 8008e22:	4815      	ldr	r0, [pc, #84]	; (8008e78 <_ZN8touchgfx6Slider10setBitmapsERKNS_6BitmapES3_S3_+0x78>)
 8008e24:	2133      	movs	r1, #51	; 0x33
 8008e26:	f00f fee1 	bl	8018bec <__assert_func>
 8008e2a:	4630      	mov	r0, r6
 8008e2c:	f004 fa4a 	bl	800d2c4 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8008e30:	4680      	mov	r8, r0
 8008e32:	4628      	mov	r0, r5
 8008e34:	f004 fa46 	bl	800d2c4 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8008e38:	4580      	cmp	r8, r0
 8008e3a:	d1f0      	bne.n	8008e1e <_ZN8touchgfx6Slider10setBitmapsERKNS_6BitmapES3_S3_+0x1e>
 8008e3c:	4631      	mov	r1, r6
 8008e3e:	f104 003c 	add.w	r0, r4, #60	; 0x3c
 8008e42:	f001 f9d6 	bl	800a1f2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8008e46:	4629      	mov	r1, r5
 8008e48:	f104 0068 	add.w	r0, r4, #104	; 0x68
 8008e4c:	f001 f9d1 	bl	800a1f2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8008e50:	4639      	mov	r1, r7
 8008e52:	f104 0094 	add.w	r0, r4, #148	; 0x94
 8008e56:	f001 f9cc 	bl	800a1f2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8008e5a:	f8b4 3070 	ldrh.w	r3, [r4, #112]	; 0x70
 8008e5e:	f8a4 30c8 	strh.w	r3, [r4, #200]	; 0xc8
 8008e62:	f8b4 3072 	ldrh.w	r3, [r4, #114]	; 0x72
 8008e66:	f8a4 30ca 	strh.w	r3, [r4, #202]	; 0xca
 8008e6a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8008e6e:	bf00      	nop
 8008e70:	0801adbb 	.word	0x0801adbb
 8008e74:	0801b0d0 	.word	0x0801b0d0
 8008e78:	0801afd8 	.word	0x0801afd8

08008e7c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEt>:
 8008e7c:	b513      	push	{r0, r1, r4, lr}
 8008e7e:	6803      	ldr	r3, [r0, #0]
 8008e80:	f8d3 4090 	ldr.w	r4, [r3, #144]	; 0x90
 8008e84:	2300      	movs	r3, #0
 8008e86:	e9cd 3300 	strd	r3, r3, [sp]
 8008e8a:	466b      	mov	r3, sp
 8008e8c:	47a0      	blx	r4
 8008e8e:	b002      	add	sp, #8
 8008e90:	bd10      	pop	{r4, pc}

08008e92 <_ZN8touchgfx3HAL16flushFrameBufferEv>:
 8008e92:	2301      	movs	r3, #1
 8008e94:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
 8008e98:	f880 3069 	strb.w	r3, [r0, #105]	; 0x69
 8008e9c:	4770      	bx	lr

08008e9e <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>:
 8008e9e:	2301      	movs	r3, #1
 8008ea0:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
 8008ea4:	f880 3069 	strb.w	r3, [r0, #105]	; 0x69
 8008ea8:	4770      	bx	lr

08008eaa <_ZN8touchgfx3HAL17allowDMATransfersEv>:
 8008eaa:	6843      	ldr	r3, [r0, #4]
 8008eac:	2201      	movs	r2, #1
 8008eae:	725a      	strb	r2, [r3, #9]
 8008eb0:	6840      	ldr	r0, [r0, #4]
 8008eb2:	6803      	ldr	r3, [r0, #0]
 8008eb4:	691b      	ldr	r3, [r3, #16]
 8008eb6:	4718      	bx	r3

08008eb8 <_ZN8touchgfx3HAL8flushDMAEv>:
 8008eb8:	6840      	ldr	r0, [r0, #4]
 8008eba:	6803      	ldr	r3, [r0, #0]
 8008ebc:	689b      	ldr	r3, [r3, #8]
 8008ebe:	4718      	bx	r3

08008ec0 <_ZN8touchgfx3HAL10beginFrameEv>:
 8008ec0:	4b04      	ldr	r3, [pc, #16]	; (8008ed4 <_ZN8touchgfx3HAL10beginFrameEv+0x14>)
 8008ec2:	781b      	ldrb	r3, [r3, #0]
 8008ec4:	b123      	cbz	r3, 8008ed0 <_ZN8touchgfx3HAL10beginFrameEv+0x10>
 8008ec6:	f890 006a 	ldrb.w	r0, [r0, #106]	; 0x6a
 8008eca:	f080 0001 	eor.w	r0, r0, #1
 8008ece:	4770      	bx	lr
 8008ed0:	2001      	movs	r0, #1
 8008ed2:	4770      	bx	lr
 8008ed4:	2001218a 	.word	0x2001218a

08008ed8 <_ZN8touchgfx3HAL8endFrameEv>:
 8008ed8:	b510      	push	{r4, lr}
 8008eda:	4604      	mov	r4, r0
 8008edc:	6840      	ldr	r0, [r0, #4]
 8008ede:	6803      	ldr	r3, [r0, #0]
 8008ee0:	689b      	ldr	r3, [r3, #8]
 8008ee2:	4798      	blx	r3
 8008ee4:	f894 3069 	ldrb.w	r3, [r4, #105]	; 0x69
 8008ee8:	b113      	cbz	r3, 8008ef0 <_ZN8touchgfx3HAL8endFrameEv+0x18>
 8008eea:	2301      	movs	r3, #1
 8008eec:	f884 306a 	strb.w	r3, [r4, #106]	; 0x6a
 8008ef0:	bd10      	pop	{r4, pc}
	...

08008ef4 <_ZN8touchgfx3HAL4tickEv>:
 8008ef4:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8008ef6:	6803      	ldr	r3, [r0, #0]
 8008ef8:	4d5c      	ldr	r5, [pc, #368]	; (800906c <_ZN8touchgfx3HAL4tickEv+0x178>)
 8008efa:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
 8008efe:	4604      	mov	r4, r0
 8008f00:	4798      	blx	r3
 8008f02:	2800      	cmp	r0, #0
 8008f04:	f000 8097 	beq.w	8009036 <_ZN8touchgfx3HAL4tickEv+0x142>
 8008f08:	2001      	movs	r0, #1
 8008f0a:	f7f7 fc15 	bl	8000738 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 8008f0e:	f894 3066 	ldrb.w	r3, [r4, #102]	; 0x66
 8008f12:	f884 3067 	strb.w	r3, [r4, #103]	; 0x67
 8008f16:	f894 3075 	ldrb.w	r3, [r4, #117]	; 0x75
 8008f1a:	2600      	movs	r6, #0
 8008f1c:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 8008f20:	f884 604b 	strb.w	r6, [r4, #75]	; 0x4b
 8008f24:	b133      	cbz	r3, 8008f34 <_ZN8touchgfx3HAL4tickEv+0x40>
 8008f26:	6823      	ldr	r3, [r4, #0]
 8008f28:	4620      	mov	r0, r4
 8008f2a:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
 8008f2e:	4798      	blx	r3
 8008f30:	f884 6075 	strb.w	r6, [r4, #117]	; 0x75
 8008f34:	f894 304a 	ldrb.w	r3, [r4, #74]	; 0x4a
 8008f38:	6862      	ldr	r2, [r4, #4]
 8008f3a:	f083 0301 	eor.w	r3, r3, #1
 8008f3e:	7253      	strb	r3, [r2, #9]
 8008f40:	2601      	movs	r6, #1
 8008f42:	702e      	strb	r6, [r5, #0]
 8008f44:	f002 f9ae 	bl	800b2a4 <_ZN8touchgfx11Application11getInstanceEv>
 8008f48:	6803      	ldr	r3, [r0, #0]
 8008f4a:	4631      	mov	r1, r6
 8008f4c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8008f4e:	4798      	blx	r3
 8008f50:	f894 3067 	ldrb.w	r3, [r4, #103]	; 0x67
 8008f54:	b90b      	cbnz	r3, 8008f5a <_ZN8touchgfx3HAL4tickEv+0x66>
 8008f56:	f884 6067 	strb.w	r6, [r4, #103]	; 0x67
 8008f5a:	f002 f9a3 	bl	800b2a4 <_ZN8touchgfx11Application11getInstanceEv>
 8008f5e:	6803      	ldr	r3, [r0, #0]
 8008f60:	695b      	ldr	r3, [r3, #20]
 8008f62:	4798      	blx	r3
 8008f64:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8008f66:	6803      	ldr	r3, [r0, #0]
 8008f68:	691b      	ldr	r3, [r3, #16]
 8008f6a:	4798      	blx	r3
 8008f6c:	f894 3067 	ldrb.w	r3, [r4, #103]	; 0x67
 8008f70:	f894 2068 	ldrb.w	r2, [r4, #104]	; 0x68
 8008f74:	3b01      	subs	r3, #1
 8008f76:	b2db      	uxtb	r3, r3
 8008f78:	f884 3067 	strb.w	r3, [r4, #103]	; 0x67
 8008f7c:	b10a      	cbz	r2, 8008f82 <_ZN8touchgfx3HAL4tickEv+0x8e>
 8008f7e:	2b00      	cmp	r3, #0
 8008f80:	d1eb      	bne.n	8008f5a <_ZN8touchgfx3HAL4tickEv+0x66>
 8008f82:	4a3b      	ldr	r2, [pc, #236]	; (8009070 <_ZN8touchgfx3HAL4tickEv+0x17c>)
 8008f84:	f994 1064 	ldrsb.w	r1, [r4, #100]	; 0x64
 8008f88:	7813      	ldrb	r3, [r2, #0]
 8008f8a:	3301      	adds	r3, #1
 8008f8c:	b25b      	sxtb	r3, r3
 8008f8e:	4299      	cmp	r1, r3
 8008f90:	7013      	strb	r3, [r2, #0]
 8008f92:	dc10      	bgt.n	8008fb6 <_ZN8touchgfx3HAL4tickEv+0xc2>
 8008f94:	68e0      	ldr	r0, [r4, #12]
 8008f96:	2300      	movs	r3, #0
 8008f98:	7013      	strb	r3, [r2, #0]
 8008f9a:	6803      	ldr	r3, [r0, #0]
 8008f9c:	aa03      	add	r2, sp, #12
 8008f9e:	68db      	ldr	r3, [r3, #12]
 8008fa0:	a902      	add	r1, sp, #8
 8008fa2:	4798      	blx	r3
 8008fa4:	6823      	ldr	r3, [r4, #0]
 8008fa6:	2800      	cmp	r0, #0
 8008fa8:	d051      	beq.n	800904e <_ZN8touchgfx3HAL4tickEv+0x15a>
 8008faa:	f8d3 30a4 	ldr.w	r3, [r3, #164]	; 0xa4
 8008fae:	e9dd 1202 	ldrd	r1, r2, [sp, #8]
 8008fb2:	4620      	mov	r0, r4
 8008fb4:	4798      	blx	r3
 8008fb6:	6960      	ldr	r0, [r4, #20]
 8008fb8:	2300      	movs	r3, #0
 8008fba:	f88d 3007 	strb.w	r3, [sp, #7]
 8008fbe:	b158      	cbz	r0, 8008fd8 <_ZN8touchgfx3HAL4tickEv+0xe4>
 8008fc0:	6803      	ldr	r3, [r0, #0]
 8008fc2:	f10d 0107 	add.w	r1, sp, #7
 8008fc6:	68db      	ldr	r3, [r3, #12]
 8008fc8:	4798      	blx	r3
 8008fca:	b128      	cbz	r0, 8008fd8 <_ZN8touchgfx3HAL4tickEv+0xe4>
 8008fcc:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8008fce:	f89d 1007 	ldrb.w	r1, [sp, #7]
 8008fd2:	6803      	ldr	r3, [r0, #0]
 8008fd4:	68db      	ldr	r3, [r3, #12]
 8008fd6:	4798      	blx	r3
 8008fd8:	f104 001c 	add.w	r0, r4, #28
 8008fdc:	f00f fcf8 	bl	80189d0 <_ZN8touchgfx8Gestures4tickEv>
 8008fe0:	f894 306c 	ldrb.w	r3, [r4, #108]	; 0x6c
 8008fe4:	b30b      	cbz	r3, 800902a <_ZN8touchgfx3HAL4tickEv+0x136>
 8008fe6:	6920      	ldr	r0, [r4, #16]
 8008fe8:	6803      	ldr	r3, [r0, #0]
 8008fea:	691b      	ldr	r3, [r3, #16]
 8008fec:	4798      	blx	r3
 8008fee:	6f23      	ldr	r3, [r4, #112]	; 0x70
 8008ff0:	4606      	mov	r6, r0
 8008ff2:	b903      	cbnz	r3, 8008ff6 <_ZN8touchgfx3HAL4tickEv+0x102>
 8008ff4:	6720      	str	r0, [r4, #112]	; 0x70
 8008ff6:	6f23      	ldr	r3, [r4, #112]	; 0x70
 8008ff8:	4a1e      	ldr	r2, [pc, #120]	; (8009074 <_ZN8touchgfx3HAL4tickEv+0x180>)
 8008ffa:	1af3      	subs	r3, r6, r3
 8008ffc:	4293      	cmp	r3, r2
 8008ffe:	d914      	bls.n	800902a <_ZN8touchgfx3HAL4tickEv+0x136>
 8009000:	6920      	ldr	r0, [r4, #16]
 8009002:	6803      	ldr	r3, [r0, #0]
 8009004:	699b      	ldr	r3, [r3, #24]
 8009006:	4798      	blx	r3
 8009008:	6f23      	ldr	r3, [r4, #112]	; 0x70
 800900a:	2264      	movs	r2, #100	; 0x64
 800900c:	1af3      	subs	r3, r6, r3
 800900e:	fbb3 f3f2 	udiv	r3, r3, r2
 8009012:	fbb0 f0f3 	udiv	r0, r0, r3
 8009016:	2800      	cmp	r0, #0
 8009018:	dc1e      	bgt.n	8009058 <_ZN8touchgfx3HAL4tickEv+0x164>
 800901a:	f884 2065 	strb.w	r2, [r4, #101]	; 0x65
 800901e:	6920      	ldr	r0, [r4, #16]
 8009020:	6803      	ldr	r3, [r0, #0]
 8009022:	2100      	movs	r1, #0
 8009024:	69db      	ldr	r3, [r3, #28]
 8009026:	4798      	blx	r3
 8009028:	6726      	str	r6, [r4, #112]	; 0x70
 800902a:	f002 f93b 	bl	800b2a4 <_ZN8touchgfx11Application11getInstanceEv>
 800902e:	6803      	ldr	r3, [r0, #0]
 8009030:	2100      	movs	r1, #0
 8009032:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8009034:	4798      	blx	r3
 8009036:	6823      	ldr	r3, [r4, #0]
 8009038:	4620      	mov	r0, r4
 800903a:	f8d3 309c 	ldr.w	r3, [r3, #156]	; 0x9c
 800903e:	4798      	blx	r3
 8009040:	2001      	movs	r0, #1
 8009042:	f7f7 fb7a 	bl	800073a <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
 8009046:	2300      	movs	r3, #0
 8009048:	702b      	strb	r3, [r5, #0]
 800904a:	b004      	add	sp, #16
 800904c:	bd70      	pop	{r4, r5, r6, pc}
 800904e:	f8d3 30a8 	ldr.w	r3, [r3, #168]	; 0xa8
 8009052:	4620      	mov	r0, r4
 8009054:	4798      	blx	r3
 8009056:	e7ae      	b.n	8008fb6 <_ZN8touchgfx3HAL4tickEv+0xc2>
 8009058:	2863      	cmp	r0, #99	; 0x63
 800905a:	bfcb      	itete	gt
 800905c:	2300      	movgt	r3, #0
 800905e:	f1c0 0064 	rsble	r0, r0, #100	; 0x64
 8009062:	f884 3065 	strbgt.w	r3, [r4, #101]	; 0x65
 8009066:	f884 0065 	strble.w	r0, [r4, #101]	; 0x65
 800906a:	e7d8      	b.n	800901e <_ZN8touchgfx3HAL4tickEv+0x12a>
 800906c:	20012190 	.word	0x20012190
 8009070:	20012191 	.word	0x20012191
 8009074:	05f5e100 	.word	0x05f5e100

08009078 <_ZN8touchgfx3HAL17unlockFrameBufferEv>:
 8009078:	f7f7 bc88 	b.w	800098c <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

0800907c <_ZN8touchgfx3HAL21registerEventListenerERNS_15UIEventListenerE>:
 800907c:	6581      	str	r1, [r0, #88]	; 0x58
 800907e:	301c      	adds	r0, #28
 8009080:	f00f bca4 	b.w	80189cc <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>

08009084 <_ZN8touchgfx3HAL5touchEll>:
 8009084:	b530      	push	{r4, r5, lr}
 8009086:	b087      	sub	sp, #28
 8009088:	4604      	mov	r4, r0
 800908a:	a804      	add	r0, sp, #16
 800908c:	e9cd 1204 	strd	r1, r2, [sp, #16]
 8009090:	f001 feb8 	bl	800ae04 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>
 8009094:	9b04      	ldr	r3, [sp, #16]
 8009096:	f8ad 300c 	strh.w	r3, [sp, #12]
 800909a:	a906      	add	r1, sp, #24
 800909c:	9b05      	ldr	r3, [sp, #20]
 800909e:	f821 3d0a 	strh.w	r3, [r1, #-10]!
 80090a2:	a803      	add	r0, sp, #12
 80090a4:	f001 fefc 	bl	800aea0 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>
 80090a8:	f894 106b 	ldrb.w	r1, [r4, #107]	; 0x6b
 80090ac:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 80090b0:	f8bd 300e 	ldrh.w	r3, [sp, #14]
 80090b4:	f104 001c 	add.w	r0, r4, #28
 80090b8:	b189      	cbz	r1, 80090de <_ZN8touchgfx3HAL5touchEll+0x5a>
 80090ba:	f8b4 5060 	ldrh.w	r5, [r4, #96]	; 0x60
 80090be:	9300      	str	r3, [sp, #0]
 80090c0:	f8b4 105c 	ldrh.w	r1, [r4, #92]	; 0x5c
 80090c4:	4613      	mov	r3, r2
 80090c6:	462a      	mov	r2, r5
 80090c8:	f00f fc90 	bl	80189ec <_ZN8touchgfx8Gestures17registerDragEventEtttt>
 80090cc:	b128      	cbz	r0, 80090da <_ZN8touchgfx3HAL5touchEll+0x56>
 80090ce:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 80090d2:	65e3      	str	r3, [r4, #92]	; 0x5c
 80090d4:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 80090d8:	6623      	str	r3, [r4, #96]	; 0x60
 80090da:	b007      	add	sp, #28
 80090dc:	bd30      	pop	{r4, r5, pc}
 80090de:	f00f fcc9 	bl	8018a74 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 80090e2:	2301      	movs	r3, #1
 80090e4:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
 80090e8:	e7f1      	b.n	80090ce <_ZN8touchgfx3HAL5touchEll+0x4a>

080090ea <_ZN8touchgfx3HAL9blockCopyEPvPKvm>:
 80090ea:	b570      	push	{r4, r5, r6, lr}
 80090ec:	2b00      	cmp	r3, #0
 80090ee:	d050      	beq.n	8009192 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0xa8>
 80090f0:	ea81 0002 	eor.w	r0, r1, r2
 80090f4:	07c6      	lsls	r6, r0, #31
 80090f6:	d508      	bpl.n	800910a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x20>
 80090f8:	3a01      	subs	r2, #1
 80090fa:	18cc      	adds	r4, r1, r3
 80090fc:	42a1      	cmp	r1, r4
 80090fe:	d048      	beq.n	8009192 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0xa8>
 8009100:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 8009104:	f801 0b01 	strb.w	r0, [r1], #1
 8009108:	e7f8      	b.n	80090fc <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x12>
 800910a:	07d5      	lsls	r5, r2, #31
 800910c:	bf42      	ittt	mi
 800910e:	f812 0b01 	ldrbmi.w	r0, [r2], #1
 8009112:	f801 0b01 	strbmi.w	r0, [r1], #1
 8009116:	f103 33ff 	addmi.w	r3, r3, #4294967295
 800911a:	2b01      	cmp	r3, #1
 800911c:	d915      	bls.n	800914a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x60>
 800911e:	ea82 0001 	eor.w	r0, r2, r1
 8009122:	0784      	lsls	r4, r0, #30
 8009124:	d02d      	beq.n	8009182 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x98>
 8009126:	1e94      	subs	r4, r2, #2
 8009128:	4608      	mov	r0, r1
 800912a:	18ce      	adds	r6, r1, r3
 800912c:	f834 5f02 	ldrh.w	r5, [r4, #2]!
 8009130:	f820 5b02 	strh.w	r5, [r0], #2
 8009134:	1a35      	subs	r5, r6, r0
 8009136:	2d01      	cmp	r5, #1
 8009138:	d8f8      	bhi.n	800912c <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x42>
 800913a:	1e98      	subs	r0, r3, #2
 800913c:	f020 0001 	bic.w	r0, r0, #1
 8009140:	3002      	adds	r0, #2
 8009142:	4401      	add	r1, r0
 8009144:	4402      	add	r2, r0
 8009146:	f003 0301 	and.w	r3, r3, #1
 800914a:	1f14      	subs	r4, r2, #4
 800914c:	4608      	mov	r0, r1
 800914e:	18ce      	adds	r6, r1, r3
 8009150:	1a35      	subs	r5, r6, r0
 8009152:	2d03      	cmp	r5, #3
 8009154:	d810      	bhi.n	8009178 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x8e>
 8009156:	089c      	lsrs	r4, r3, #2
 8009158:	00a0      	lsls	r0, r4, #2
 800915a:	4401      	add	r1, r0
 800915c:	3801      	subs	r0, #1
 800915e:	4402      	add	r2, r0
 8009160:	f06f 0003 	mvn.w	r0, #3
 8009164:	fb00 3404 	mla	r4, r0, r4, r3
 8009168:	440c      	add	r4, r1
 800916a:	42a1      	cmp	r1, r4
 800916c:	d011      	beq.n	8009192 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0xa8>
 800916e:	f812 3f01 	ldrb.w	r3, [r2, #1]!
 8009172:	f801 3b01 	strb.w	r3, [r1], #1
 8009176:	e7f8      	b.n	800916a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x80>
 8009178:	f854 5f04 	ldr.w	r5, [r4, #4]!
 800917c:	f840 5b04 	str.w	r5, [r0], #4
 8009180:	e7e6      	b.n	8009150 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x66>
 8009182:	0790      	lsls	r0, r2, #30
 8009184:	d0e1      	beq.n	800914a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x60>
 8009186:	f832 0b02 	ldrh.w	r0, [r2], #2
 800918a:	f821 0b02 	strh.w	r0, [r1], #2
 800918e:	3b02      	subs	r3, #2
 8009190:	e7db      	b.n	800914a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x60>
 8009192:	2001      	movs	r0, #1
 8009194:	bd70      	pop	{r4, r5, r6, pc}

08009196 <_ZN8touchgfx3HAL7noTouchEv>:
 8009196:	b510      	push	{r4, lr}
 8009198:	f890 306b 	ldrb.w	r3, [r0, #107]	; 0x6b
 800919c:	4604      	mov	r4, r0
 800919e:	b153      	cbz	r3, 80091b6 <_ZN8touchgfx3HAL7noTouchEv+0x20>
 80091a0:	f8b0 3060 	ldrh.w	r3, [r0, #96]	; 0x60
 80091a4:	f8b0 205c 	ldrh.w	r2, [r0, #92]	; 0x5c
 80091a8:	2101      	movs	r1, #1
 80091aa:	301c      	adds	r0, #28
 80091ac:	f00f fc62 	bl	8018a74 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 80091b0:	2300      	movs	r3, #0
 80091b2:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
 80091b6:	bd10      	pop	{r4, pc}

080091b8 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt>:
 80091b8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80091bc:	4605      	mov	r5, r0
 80091be:	6980      	ldr	r0, [r0, #24]
 80091c0:	b085      	sub	sp, #20
 80091c2:	460f      	mov	r7, r1
 80091c4:	4690      	mov	r8, r2
 80091c6:	4699      	mov	r9, r3
 80091c8:	b930      	cbnz	r0, 80091d8 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x20>
 80091ca:	4b1f      	ldr	r3, [pc, #124]	; (8009248 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x90>)
 80091cc:	4a1f      	ldr	r2, [pc, #124]	; (800924c <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x94>)
 80091ce:	f240 112f 	movw	r1, #303	; 0x12f
 80091d2:	481f      	ldr	r0, [pc, #124]	; (8009250 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x98>)
 80091d4:	f00f fd0a 	bl	8018bec <__assert_func>
 80091d8:	ac04      	add	r4, sp, #16
 80091da:	2600      	movs	r6, #0
 80091dc:	f844 6d04 	str.w	r6, [r4, #-4]!
 80091e0:	6806      	ldr	r6, [r0, #0]
 80091e2:	9401      	str	r4, [sp, #4]
 80091e4:	f8bd 4030 	ldrh.w	r4, [sp, #48]	; 0x30
 80091e8:	9400      	str	r4, [sp, #0]
 80091ea:	6834      	ldr	r4, [r6, #0]
 80091ec:	47a0      	blx	r4
 80091ee:	4c19      	ldr	r4, [pc, #100]	; (8009254 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x9c>)
 80091f0:	4606      	mov	r6, r0
 80091f2:	f8a4 9000 	strh.w	r9, [r4]
 80091f6:	f7f7 fc8f 	bl	8000b18 <_ZN8touchgfx3HAL3lcdEv>
 80091fa:	6803      	ldr	r3, [r0, #0]
 80091fc:	6a1b      	ldr	r3, [r3, #32]
 80091fe:	4798      	blx	r3
 8009200:	280c      	cmp	r0, #12
 8009202:	d80f      	bhi.n	8009224 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x6c>
 8009204:	e8df f000 	tbb	[pc, r0]
 8009208:	1b1b1207 	.word	0x1b1b1207
 800920c:	1b1b1b1b 	.word	0x1b1b1b1b
 8009210:	1b1b1b1b 	.word	0x1b1b1b1b
 8009214:	1b          	.byte	0x1b
 8009215:	00          	.byte	0x00
 8009216:	8823      	ldrh	r3, [r4, #0]
 8009218:	fb08 7203 	mla	r2, r8, r3, r7
 800921c:	9b03      	ldr	r3, [sp, #12]
 800921e:	eba3 0342 	sub.w	r3, r3, r2, lsl #1
 8009222:	63eb      	str	r3, [r5, #60]	; 0x3c
 8009224:	4630      	mov	r0, r6
 8009226:	b005      	add	sp, #20
 8009228:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800922c:	8822      	ldrh	r2, [r4, #0]
 800922e:	9b03      	ldr	r3, [sp, #12]
 8009230:	fb08 7202 	mla	r2, r8, r2, r7
 8009234:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8009238:	1a9a      	subs	r2, r3, r2
 800923a:	63ea      	str	r2, [r5, #60]	; 0x3c
 800923c:	e7f2      	b.n	8009224 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x6c>
 800923e:	4b06      	ldr	r3, [pc, #24]	; (8009258 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0xa0>)
 8009240:	4a02      	ldr	r2, [pc, #8]	; (800924c <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x94>)
 8009242:	f44f 71a6 	mov.w	r1, #332	; 0x14c
 8009246:	e7c4      	b.n	80091d2 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x1a>
 8009248:	0801b2b3 	.word	0x0801b2b3
 800924c:	0801b50d 	.word	0x0801b50d
 8009250:	0801b2f8 	.word	0x0801b2f8
 8009254:	20012186 	.word	0x20012186
 8009258:	0801b31e 	.word	0x0801b31e

0800925c <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttth>:
 800925c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8009260:	4698      	mov	r8, r3
 8009262:	6803      	ldr	r3, [r0, #0]
 8009264:	6c5d      	ldr	r5, [r3, #68]	; 0x44
 8009266:	4b0f      	ldr	r3, [pc, #60]	; (80092a4 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttth+0x48>)
 8009268:	b087      	sub	sp, #28
 800926a:	f8b3 9000 	ldrh.w	r9, [r3]
 800926e:	460e      	mov	r6, r1
 8009270:	4617      	mov	r7, r2
 8009272:	4604      	mov	r4, r0
 8009274:	f7f7 fc50 	bl	8000b18 <_ZN8touchgfx3HAL3lcdEv>
 8009278:	6803      	ldr	r3, [r0, #0]
 800927a:	6a1b      	ldr	r3, [r3, #32]
 800927c:	4798      	blx	r3
 800927e:	f89d 3040 	ldrb.w	r3, [sp, #64]	; 0x40
 8009282:	9302      	str	r3, [sp, #8]
 8009284:	f8bd 303c 	ldrh.w	r3, [sp, #60]	; 0x3c
 8009288:	9301      	str	r3, [sp, #4]
 800928a:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 800928e:	9300      	str	r3, [sp, #0]
 8009290:	e9cd 9003 	strd	r9, r0, [sp, #12]
 8009294:	4643      	mov	r3, r8
 8009296:	463a      	mov	r2, r7
 8009298:	4631      	mov	r1, r6
 800929a:	4620      	mov	r0, r4
 800929c:	47a8      	blx	r5
 800929e:	b007      	add	sp, #28
 80092a0:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80092a4:	20012186 	.word	0x20012186

080092a8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE>:
 80092a8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80092ac:	4606      	mov	r6, r0
 80092ae:	b089      	sub	sp, #36	; 0x24
 80092b0:	4610      	mov	r0, r2
 80092b2:	460c      	mov	r4, r1
 80092b4:	4691      	mov	r9, r2
 80092b6:	4698      	mov	r8, r3
 80092b8:	f003 ff06 	bl	800d0c8 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 80092bc:	2800      	cmp	r0, #0
 80092be:	f000 8093 	beq.w	80093e8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x140>
 80092c2:	f8df a13c 	ldr.w	sl, [pc, #316]	; 8009400 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x158>
 80092c6:	f8df b13c 	ldr.w	fp, [pc, #316]	; 8009404 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x15c>
 80092ca:	f8da 0000 	ldr.w	r0, [sl]
 80092ce:	4f4b      	ldr	r7, [pc, #300]	; (80093fc <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x154>)
 80092d0:	6802      	ldr	r2, [r0, #0]
 80092d2:	6a12      	ldr	r2, [r2, #32]
 80092d4:	4790      	blx	r2
 80092d6:	f8da 0000 	ldr.w	r0, [sl]
 80092da:	6802      	ldr	r2, [r0, #0]
 80092dc:	ad08      	add	r5, sp, #32
 80092de:	6a52      	ldr	r2, [r2, #36]	; 0x24
 80092e0:	4790      	blx	r2
 80092e2:	f825 9d0c 	strh.w	r9, [r5, #-12]!
 80092e6:	f8bb 3000 	ldrh.w	r3, [fp]
 80092ea:	9300      	str	r3, [sp, #0]
 80092ec:	4628      	mov	r0, r5
 80092ee:	883b      	ldrh	r3, [r7, #0]
 80092f0:	9301      	str	r3, [sp, #4]
 80092f2:	f003 ffad 	bl	800d250 <_ZNK8touchgfx6Bitmap8getWidthEv>
 80092f6:	f8ab 0000 	strh.w	r0, [fp]
 80092fa:	4628      	mov	r0, r5
 80092fc:	f003 ffe2 	bl	800d2c4 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8009300:	f8da b000 	ldr.w	fp, [sl]
 8009304:	8038      	strh	r0, [r7, #0]
 8009306:	f8db 303c 	ldr.w	r3, [fp, #60]	; 0x3c
 800930a:	9302      	str	r3, [sp, #8]
 800930c:	4648      	mov	r0, r9
 800930e:	f8db 7040 	ldr.w	r7, [fp, #64]	; 0x40
 8009312:	f003 fed9 	bl	800d0c8 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 8009316:	f8da 2000 	ldr.w	r2, [sl]
 800931a:	f8cb 0040 	str.w	r0, [fp, #64]	; 0x40
 800931e:	63d0      	str	r0, [r2, #60]	; 0x3c
 8009320:	6822      	ldr	r2, [r4, #0]
 8009322:	f9b4 9004 	ldrsh.w	r9, [r4, #4]
 8009326:	6b53      	ldr	r3, [r2, #52]	; 0x34
 8009328:	f9b4 a006 	ldrsh.w	sl, [r4, #6]
 800932c:	2200      	movs	r2, #0
 800932e:	4611      	mov	r1, r2
 8009330:	4620      	mov	r0, r4
 8009332:	4798      	blx	r3
 8009334:	2201      	movs	r2, #1
 8009336:	f894 b025 	ldrb.w	fp, [r4, #37]	; 0x25
 800933a:	f884 2025 	strb.w	r2, [r4, #37]	; 0x25
 800933e:	f9b8 2004 	ldrsh.w	r2, [r8, #4]
 8009342:	2a00      	cmp	r2, #0
 8009344:	f104 0204 	add.w	r2, r4, #4
 8009348:	dd51      	ble.n	80093ee <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x146>
 800934a:	f9b8 1006 	ldrsh.w	r1, [r8, #6]
 800934e:	2900      	cmp	r1, #0
 8009350:	dd4d      	ble.n	80093ee <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x146>
 8009352:	6810      	ldr	r0, [r2, #0]
 8009354:	6851      	ldr	r1, [r2, #4]
 8009356:	f10d 0c18 	add.w	ip, sp, #24
 800935a:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 800935e:	4641      	mov	r1, r8
 8009360:	a806      	add	r0, sp, #24
 8009362:	f7ff f96f 	bl	8008644 <_ZN8touchgfx4RectaNERKS0_>
 8009366:	4628      	mov	r0, r5
 8009368:	f004 f8fe 	bl	800d568 <_ZNK8touchgfx6Bitmap9getFormatEv>
 800936c:	4680      	mov	r8, r0
 800936e:	f7f7 fbd3 	bl	8000b18 <_ZN8touchgfx3HAL3lcdEv>
 8009372:	6802      	ldr	r2, [r0, #0]
 8009374:	6a12      	ldr	r2, [r2, #32]
 8009376:	4790      	blx	r2
 8009378:	4580      	cmp	r8, r0
 800937a:	d03d      	beq.n	80093f8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x150>
 800937c:	6cf0      	ldr	r0, [r6, #76]	; 0x4c
 800937e:	b150      	cbz	r0, 8009396 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xee>
 8009380:	4628      	mov	r0, r5
 8009382:	f004 f8f1 	bl	800d568 <_ZNK8touchgfx6Bitmap9getFormatEv>
 8009386:	4605      	mov	r5, r0
 8009388:	6cf0      	ldr	r0, [r6, #76]	; 0x4c
 800938a:	6803      	ldr	r3, [r0, #0]
 800938c:	6a1b      	ldr	r3, [r3, #32]
 800938e:	4798      	blx	r3
 8009390:	1a2b      	subs	r3, r5, r0
 8009392:	4258      	negs	r0, r3
 8009394:	4158      	adcs	r0, r3
 8009396:	f886 0076 	strb.w	r0, [r6, #118]	; 0x76
 800939a:	6822      	ldr	r2, [r4, #0]
 800939c:	6963      	ldr	r3, [r4, #20]
 800939e:	9303      	str	r3, [sp, #12]
 80093a0:	2500      	movs	r5, #0
 80093a2:	6165      	str	r5, [r4, #20]
 80093a4:	4620      	mov	r0, r4
 80093a6:	6892      	ldr	r2, [r2, #8]
 80093a8:	a906      	add	r1, sp, #24
 80093aa:	4790      	blx	r2
 80093ac:	9b03      	ldr	r3, [sp, #12]
 80093ae:	6163      	str	r3, [r4, #20]
 80093b0:	f886 5076 	strb.w	r5, [r6, #118]	; 0x76
 80093b4:	6823      	ldr	r3, [r4, #0]
 80093b6:	f884 b025 	strb.w	fp, [r4, #37]	; 0x25
 80093ba:	4620      	mov	r0, r4
 80093bc:	4c10      	ldr	r4, [pc, #64]	; (8009400 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x158>)
 80093be:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80093c0:	4652      	mov	r2, sl
 80093c2:	4649      	mov	r1, r9
 80093c4:	4798      	blx	r3
 80093c6:	6820      	ldr	r0, [r4, #0]
 80093c8:	9b02      	ldr	r3, [sp, #8]
 80093ca:	9a00      	ldr	r2, [sp, #0]
 80093cc:	e9c0 370f 	strd	r3, r7, [r0, #60]	; 0x3c
 80093d0:	4b0c      	ldr	r3, [pc, #48]	; (8009404 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x15c>)
 80093d2:	801a      	strh	r2, [r3, #0]
 80093d4:	4b09      	ldr	r3, [pc, #36]	; (80093fc <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x154>)
 80093d6:	9a01      	ldr	r2, [sp, #4]
 80093d8:	801a      	strh	r2, [r3, #0]
 80093da:	6803      	ldr	r3, [r0, #0]
 80093dc:	6a1b      	ldr	r3, [r3, #32]
 80093de:	4798      	blx	r3
 80093e0:	6820      	ldr	r0, [r4, #0]
 80093e2:	6803      	ldr	r3, [r0, #0]
 80093e4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80093e6:	4798      	blx	r3
 80093e8:	b009      	add	sp, #36	; 0x24
 80093ea:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80093ee:	6810      	ldr	r0, [r2, #0]
 80093f0:	6851      	ldr	r1, [r2, #4]
 80093f2:	ab06      	add	r3, sp, #24
 80093f4:	c303      	stmia	r3!, {r0, r1}
 80093f6:	e7b6      	b.n	8009366 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xbe>
 80093f8:	2000      	movs	r0, #0
 80093fa:	e7cc      	b.n	8009396 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xee>
 80093fc:	20012188 	.word	0x20012188
 8009400:	2001218c 	.word	0x2001218c
 8009404:	20012186 	.word	0x20012186

08009408 <_ZN8touchgfx3HAL20getClientFrameBufferEv>:
 8009408:	b510      	push	{r4, lr}
 800940a:	4b07      	ldr	r3, [pc, #28]	; (8009428 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x20>)
 800940c:	781b      	ldrb	r3, [r3, #0]
 800940e:	4604      	mov	r4, r0
 8009410:	b13b      	cbz	r3, 8009422 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 8009412:	6803      	ldr	r3, [r0, #0]
 8009414:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8009416:	4798      	blx	r3
 8009418:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800941a:	4283      	cmp	r3, r0
 800941c:	d101      	bne.n	8009422 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 800941e:	6c20      	ldr	r0, [r4, #64]	; 0x40
 8009420:	bd10      	pop	{r4, pc}
 8009422:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 8009424:	e7fc      	b.n	8009420 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x18>
 8009426:	bf00      	nop
 8009428:	2001218a 	.word	0x2001218a

0800942c <_ZN8touchgfx3HAL15lockFrameBufferEv>:
 800942c:	b510      	push	{r4, lr}
 800942e:	4b0b      	ldr	r3, [pc, #44]	; (800945c <_ZN8touchgfx3HAL15lockFrameBufferEv+0x30>)
 8009430:	781b      	ldrb	r3, [r3, #0]
 8009432:	4604      	mov	r4, r0
 8009434:	b95b      	cbnz	r3, 800944e <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 8009436:	f890 3048 	ldrb.w	r3, [r0, #72]	; 0x48
 800943a:	2b02      	cmp	r3, #2
 800943c:	d007      	beq.n	800944e <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 800943e:	6840      	ldr	r0, [r0, #4]
 8009440:	f000 fbce 	bl	8009be0 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>
 8009444:	b118      	cbz	r0, 800944e <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 8009446:	6862      	ldr	r2, [r4, #4]
 8009448:	7a53      	ldrb	r3, [r2, #9]
 800944a:	2b00      	cmp	r3, #0
 800944c:	d0fc      	beq.n	8009448 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x1c>
 800944e:	f7f7 fa85 	bl	800095c <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 8009452:	4620      	mov	r0, r4
 8009454:	f7ff ffd8 	bl	8009408 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8009458:	bd10      	pop	{r4, pc}
 800945a:	bf00      	nop
 800945c:	2001218a 	.word	0x2001218a

08009460 <_ZN8touchgfx3HAL10initializeEv>:
 8009460:	b510      	push	{r4, lr}
 8009462:	4604      	mov	r4, r0
 8009464:	f7f7 fa62 	bl	800092c <_ZN8touchgfx10OSWrappers10initializeEv>
 8009468:	6860      	ldr	r0, [r4, #4]
 800946a:	6803      	ldr	r3, [r0, #0]
 800946c:	68db      	ldr	r3, [r3, #12]
 800946e:	4798      	blx	r3
 8009470:	68e0      	ldr	r0, [r4, #12]
 8009472:	6803      	ldr	r3, [r0, #0]
 8009474:	689b      	ldr	r3, [r3, #8]
 8009476:	4798      	blx	r3
 8009478:	6823      	ldr	r3, [r4, #0]
 800947a:	4620      	mov	r0, r4
 800947c:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800947e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8009482:	4718      	bx	r3

08009484 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE>:
 8009484:	b508      	push	{r3, lr}
 8009486:	290c      	cmp	r1, #12
 8009488:	d817      	bhi.n	80094ba <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x36>
 800948a:	e8df f001 	tbb	[pc, r1]
 800948e:	090b      	.short	0x090b
 8009490:	0d0d0d07 	.word	0x0d0d0d07
 8009494:	1414140d 	.word	0x1414140d
 8009498:	1414      	.short	0x1414
 800949a:	0d          	.byte	0x0d
 800949b:	00          	.byte	0x00
 800949c:	2020      	movs	r0, #32
 800949e:	bd08      	pop	{r3, pc}
 80094a0:	2018      	movs	r0, #24
 80094a2:	e7fc      	b.n	800949e <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x1a>
 80094a4:	2010      	movs	r0, #16
 80094a6:	e7fa      	b.n	800949e <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x1a>
 80094a8:	4b05      	ldr	r3, [pc, #20]	; (80094c0 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x3c>)
 80094aa:	4a06      	ldr	r2, [pc, #24]	; (80094c4 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x40>)
 80094ac:	4806      	ldr	r0, [pc, #24]	; (80094c8 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x44>)
 80094ae:	f240 212f 	movw	r1, #559	; 0x22f
 80094b2:	f00f fb9b 	bl	8018bec <__assert_func>
 80094b6:	2008      	movs	r0, #8
 80094b8:	e7f1      	b.n	800949e <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x1a>
 80094ba:	2000      	movs	r0, #0
 80094bc:	e7ef      	b.n	800949e <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x1a>
 80094be:	bf00      	nop
 80094c0:	0801b3f1 	.word	0x0801b3f1
 80094c4:	0801b6cf 	.word	0x0801b6cf
 80094c8:	0801b2f8 	.word	0x0801b2f8

080094cc <_ZNK8touchgfx3HAL13getDstAddressEttPttNS_6Bitmap12BitmapFormatE>:
 80094cc:	b570      	push	{r4, r5, r6, lr}
 80094ce:	460d      	mov	r5, r1
 80094d0:	f89d 1014 	ldrb.w	r1, [sp, #20]
 80094d4:	4616      	mov	r6, r2
 80094d6:	461c      	mov	r4, r3
 80094d8:	f7ff ffd4 	bl	8009484 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE>
 80094dc:	f8bd 1010 	ldrh.w	r1, [sp, #16]
 80094e0:	10c0      	asrs	r0, r0, #3
 80094e2:	fb06 5101 	mla	r1, r6, r1, r5
 80094e6:	fb00 4001 	mla	r0, r0, r1, r4
 80094ea:	bd70      	pop	{r4, r5, r6, pc}

080094ec <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_>:
 80094ec:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80094f0:	b08a      	sub	sp, #40	; 0x28
 80094f2:	f04f 0c00 	mov.w	ip, #0
 80094f6:	f89d 8064 	ldrb.w	r8, [sp, #100]	; 0x64
 80094fa:	f8bd 604c 	ldrh.w	r6, [sp, #76]	; 0x4c
 80094fe:	f8bd 5050 	ldrh.w	r5, [sp, #80]	; 0x50
 8009502:	f8bd 9060 	ldrh.w	r9, [sp, #96]	; 0x60
 8009506:	f89d 7068 	ldrb.w	r7, [sp, #104]	; 0x68
 800950a:	f8cd c020 	str.w	ip, [sp, #32]
 800950e:	f1b8 0f02 	cmp.w	r8, #2
 8009512:	4604      	mov	r4, r0
 8009514:	469a      	mov	sl, r3
 8009516:	f89d 005c 	ldrb.w	r0, [sp, #92]	; 0x5c
 800951a:	f89d 3058 	ldrb.w	r3, [sp, #88]	; 0x58
 800951e:	d030      	beq.n	8009582 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0x96>
 8009520:	2bff      	cmp	r3, #255	; 0xff
 8009522:	d12c      	bne.n	800957e <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0x92>
 8009524:	4560      	cmp	r0, ip
 8009526:	bf14      	ite	ne
 8009528:	2004      	movne	r0, #4
 800952a:	2001      	moveq	r0, #1
 800952c:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8009530:	9204      	str	r2, [sp, #16]
 8009532:	4620      	mov	r0, r4
 8009534:	f8bd 2054 	ldrh.w	r2, [sp, #84]	; 0x54
 8009538:	f8ad 201c 	strh.w	r2, [sp, #28]
 800953c:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 8009540:	f8ad 6018 	strh.w	r6, [sp, #24]
 8009544:	f8ad 501a 	strh.w	r5, [sp, #26]
 8009548:	f7ff ff5e 	bl	8009408 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800954c:	e9cd 9700 	strd	r9, r7, [sp]
 8009550:	4603      	mov	r3, r0
 8009552:	f8bd 2048 	ldrh.w	r2, [sp, #72]	; 0x48
 8009556:	4651      	mov	r1, sl
 8009558:	4620      	mov	r0, r4
 800955a:	f7ff ffb7 	bl	80094cc <_ZNK8touchgfx3HAL13getDstAddressEttPttNS_6Bitmap12BitmapFormatE>
 800955e:	f8ad 901e 	strh.w	r9, [sp, #30]
 8009562:	9005      	str	r0, [sp, #20]
 8009564:	f88d 8025 	strb.w	r8, [sp, #37]	; 0x25
 8009568:	f88d 7026 	strb.w	r7, [sp, #38]	; 0x26
 800956c:	b106      	cbz	r6, 8009570 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0x84>
 800956e:	b98d      	cbnz	r5, 8009594 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0xa8>
 8009570:	4b12      	ldr	r3, [pc, #72]	; (80095bc <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0xd0>)
 8009572:	4a13      	ldr	r2, [pc, #76]	; (80095c0 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0xd4>)
 8009574:	f240 11af 	movw	r1, #431	; 0x1af
 8009578:	4812      	ldr	r0, [pc, #72]	; (80095c4 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0xd8>)
 800957a:	f00f fb37 	bl	8018bec <__assert_func>
 800957e:	2004      	movs	r0, #4
 8009580:	e7d4      	b.n	800952c <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0x40>
 8009582:	2bff      	cmp	r3, #255	; 0xff
 8009584:	d104      	bne.n	8009590 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0xa4>
 8009586:	2800      	cmp	r0, #0
 8009588:	bf14      	ite	ne
 800958a:	2040      	movne	r0, #64	; 0x40
 800958c:	2020      	moveq	r0, #32
 800958e:	e7cd      	b.n	800952c <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0x40>
 8009590:	2040      	movs	r0, #64	; 0x40
 8009592:	e7cb      	b.n	800952c <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0x40>
 8009594:	6823      	ldr	r3, [r4, #0]
 8009596:	9d02      	ldr	r5, [sp, #8]
 8009598:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800959a:	4620      	mov	r0, r4
 800959c:	4798      	blx	r3
 800959e:	4228      	tst	r0, r5
 80095a0:	d104      	bne.n	80095ac <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0xc0>
 80095a2:	4b09      	ldr	r3, [pc, #36]	; (80095c8 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0xdc>)
 80095a4:	4a06      	ldr	r2, [pc, #24]	; (80095c0 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0xd4>)
 80095a6:	f44f 71d8 	mov.w	r1, #432	; 0x1b0
 80095aa:	e7e5      	b.n	8009578 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0x8c>
 80095ac:	6860      	ldr	r0, [r4, #4]
 80095ae:	6803      	ldr	r3, [r0, #0]
 80095b0:	a902      	add	r1, sp, #8
 80095b2:	685b      	ldr	r3, [r3, #4]
 80095b4:	4798      	blx	r3
 80095b6:	b00a      	add	sp, #40	; 0x28
 80095b8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80095bc:	0801b374 	.word	0x0801b374
 80095c0:	0801b571 	.word	0x0801b571
 80095c4:	0801b2f8 	.word	0x0801b2f8
 80095c8:	0801b3ac 	.word	0x0801b3ac

080095cc <_ZN8touchgfx3HAL8blitCopyEPKtttttthbtNS_6Bitmap12BitmapFormatES4_>:
 80095cc:	b510      	push	{r4, lr}
 80095ce:	b08a      	sub	sp, #40	; 0x28
 80095d0:	f89d 404c 	ldrb.w	r4, [sp, #76]	; 0x4c
 80095d4:	9408      	str	r4, [sp, #32]
 80095d6:	f89d 4048 	ldrb.w	r4, [sp, #72]	; 0x48
 80095da:	9407      	str	r4, [sp, #28]
 80095dc:	f8bd 4044 	ldrh.w	r4, [sp, #68]	; 0x44
 80095e0:	9406      	str	r4, [sp, #24]
 80095e2:	f89d 4040 	ldrb.w	r4, [sp, #64]	; 0x40
 80095e6:	9405      	str	r4, [sp, #20]
 80095e8:	f89d 403c 	ldrb.w	r4, [sp, #60]	; 0x3c
 80095ec:	9404      	str	r4, [sp, #16]
 80095ee:	f8bd 4038 	ldrh.w	r4, [sp, #56]	; 0x38
 80095f2:	9403      	str	r4, [sp, #12]
 80095f4:	f8bd 4034 	ldrh.w	r4, [sp, #52]	; 0x34
 80095f8:	9402      	str	r4, [sp, #8]
 80095fa:	f8bd 4030 	ldrh.w	r4, [sp, #48]	; 0x30
 80095fe:	e9cd 3400 	strd	r3, r4, [sp]
 8009602:	4613      	mov	r3, r2
 8009604:	2200      	movs	r2, #0
 8009606:	f7ff ff71 	bl	80094ec <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_>
 800960a:	b00a      	add	sp, #40	; 0x28
 800960c:	bd10      	pop	{r4, pc}
	...

08009610 <_ZN8touchgfx3HAL8blitCopyEPKtttttthb>:
 8009610:	b5f0      	push	{r4, r5, r6, r7, lr}
 8009612:	b08b      	sub	sp, #44	; 0x2c
 8009614:	4616      	mov	r6, r2
 8009616:	460d      	mov	r5, r1
 8009618:	461f      	mov	r7, r3
 800961a:	4604      	mov	r4, r0
 800961c:	f7f7 fa7c 	bl	8000b18 <_ZN8touchgfx3HAL3lcdEv>
 8009620:	6803      	ldr	r3, [r0, #0]
 8009622:	6a1b      	ldr	r3, [r3, #32]
 8009624:	4798      	blx	r3
 8009626:	e9cd 0007 	strd	r0, r0, [sp, #28]
 800962a:	4b0d      	ldr	r3, [pc, #52]	; (8009660 <_ZN8touchgfx3HAL8blitCopyEPKtttttthb+0x50>)
 800962c:	881b      	ldrh	r3, [r3, #0]
 800962e:	9306      	str	r3, [sp, #24]
 8009630:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 8009634:	9305      	str	r3, [sp, #20]
 8009636:	f89d 304c 	ldrb.w	r3, [sp, #76]	; 0x4c
 800963a:	9304      	str	r3, [sp, #16]
 800963c:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8009640:	9303      	str	r3, [sp, #12]
 8009642:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 8009646:	9302      	str	r3, [sp, #8]
 8009648:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 800964c:	2200      	movs	r2, #0
 800964e:	e9cd 7300 	strd	r7, r3, [sp]
 8009652:	4629      	mov	r1, r5
 8009654:	4633      	mov	r3, r6
 8009656:	4620      	mov	r0, r4
 8009658:	f7ff ff48 	bl	80094ec <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_>
 800965c:	b00b      	add	sp, #44	; 0x2c
 800965e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8009660:	20012186 	.word	0x20012186

08009664 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttth>:
 8009664:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8009668:	461f      	mov	r7, r3
 800966a:	4b14      	ldr	r3, [pc, #80]	; (80096bc <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttth+0x58>)
 800966c:	b08a      	sub	sp, #40	; 0x28
 800966e:	4616      	mov	r6, r2
 8009670:	f8b3 8000 	ldrh.w	r8, [r3]
 8009674:	460d      	mov	r5, r1
 8009676:	4604      	mov	r4, r0
 8009678:	f7f7 fa4e 	bl	8000b18 <_ZN8touchgfx3HAL3lcdEv>
 800967c:	6803      	ldr	r3, [r0, #0]
 800967e:	6a1b      	ldr	r3, [r3, #32]
 8009680:	4798      	blx	r3
 8009682:	2302      	movs	r3, #2
 8009684:	e9cd 8306 	strd	r8, r3, [sp, #24]
 8009688:	2301      	movs	r3, #1
 800968a:	9305      	str	r3, [sp, #20]
 800968c:	f89d 304c 	ldrb.w	r3, [sp, #76]	; 0x4c
 8009690:	9304      	str	r3, [sp, #16]
 8009692:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8009696:	9303      	str	r3, [sp, #12]
 8009698:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 800969c:	9302      	str	r3, [sp, #8]
 800969e:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 80096a2:	9008      	str	r0, [sp, #32]
 80096a4:	e9cd 7300 	strd	r7, r3, [sp]
 80096a8:	2200      	movs	r2, #0
 80096aa:	4633      	mov	r3, r6
 80096ac:	4629      	mov	r1, r5
 80096ae:	4620      	mov	r0, r4
 80096b0:	f7ff ff1c 	bl	80094ec <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_>
 80096b4:	b00a      	add	sp, #40	; 0x28
 80096b6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80096ba:	bf00      	nop
 80096bc:	20012186 	.word	0x20012186

080096c0 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatE>:
 80096c0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80096c4:	b08b      	sub	sp, #44	; 0x2c
 80096c6:	469b      	mov	fp, r3
 80096c8:	f89d 7058 	ldrb.w	r7, [sp, #88]	; 0x58
 80096cc:	f89d 5060 	ldrb.w	r5, [sp, #96]	; 0x60
 80096d0:	f8bd 805c 	ldrh.w	r8, [sp, #92]	; 0x5c
 80096d4:	2fff      	cmp	r7, #255	; 0xff
 80096d6:	bf14      	ite	ne
 80096d8:	2308      	movne	r3, #8
 80096da:	2302      	moveq	r3, #2
 80096dc:	2600      	movs	r6, #0
 80096de:	4604      	mov	r4, r0
 80096e0:	4689      	mov	r9, r1
 80096e2:	4692      	mov	sl, r2
 80096e4:	e9cd 3602 	strd	r3, r6, [sp, #8]
 80096e8:	9608      	str	r6, [sp, #32]
 80096ea:	f7ff fe8d 	bl	8009408 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 80096ee:	e9cd 8500 	strd	r8, r5, [sp]
 80096f2:	4603      	mov	r3, r0
 80096f4:	465a      	mov	r2, fp
 80096f6:	4651      	mov	r1, sl
 80096f8:	4620      	mov	r0, r4
 80096fa:	f7ff fee7 	bl	80094cc <_ZNK8touchgfx3HAL13getDstAddressEttPttNS_6Bitmap12BitmapFormatE>
 80096fe:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 8009702:	f8ad 3018 	strh.w	r3, [sp, #24]
 8009706:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 800970a:	f8ad 301a 	strh.w	r3, [sp, #26]
 800970e:	6823      	ldr	r3, [r4, #0]
 8009710:	9005      	str	r0, [sp, #20]
 8009712:	f88d 5025 	strb.w	r5, [sp, #37]	; 0x25
 8009716:	f88d 5026 	strb.w	r5, [sp, #38]	; 0x26
 800971a:	f8ad 601c 	strh.w	r6, [sp, #28]
 800971e:	f8ad 801e 	strh.w	r8, [sp, #30]
 8009722:	f8cd 9020 	str.w	r9, [sp, #32]
 8009726:	f88d 7024 	strb.w	r7, [sp, #36]	; 0x24
 800972a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800972c:	9d02      	ldr	r5, [sp, #8]
 800972e:	4620      	mov	r0, r4
 8009730:	4798      	blx	r3
 8009732:	4228      	tst	r0, r5
 8009734:	d106      	bne.n	8009744 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatE+0x84>
 8009736:	4b07      	ldr	r3, [pc, #28]	; (8009754 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatE+0x94>)
 8009738:	4a07      	ldr	r2, [pc, #28]	; (8009758 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatE+0x98>)
 800973a:	4808      	ldr	r0, [pc, #32]	; (800975c <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatE+0x9c>)
 800973c:	f240 11e7 	movw	r1, #487	; 0x1e7
 8009740:	f00f fa54 	bl	8018bec <__assert_func>
 8009744:	6860      	ldr	r0, [r4, #4]
 8009746:	6803      	ldr	r3, [r0, #0]
 8009748:	a902      	add	r1, sp, #8
 800974a:	685b      	ldr	r3, [r3, #4]
 800974c:	4798      	blx	r3
 800974e:	b00b      	add	sp, #44	; 0x2c
 8009750:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8009754:	0801b3ac 	.word	0x0801b3ac
 8009758:	0801b63a 	.word	0x0801b63a
 800975c:	0801b2f8 	.word	0x0801b2f8

08009760 <_ZNK8touchgfx3HAL13getDstAddressEttPt>:
 8009760:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8009764:	461f      	mov	r7, r3
 8009766:	4b0b      	ldr	r3, [pc, #44]	; (8009794 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x34>)
 8009768:	460d      	mov	r5, r1
 800976a:	f8b3 8000 	ldrh.w	r8, [r3]
 800976e:	4616      	mov	r6, r2
 8009770:	4604      	mov	r4, r0
 8009772:	f7f7 f9d1 	bl	8000b18 <_ZN8touchgfx3HAL3lcdEv>
 8009776:	6803      	ldr	r3, [r0, #0]
 8009778:	6a1b      	ldr	r3, [r3, #32]
 800977a:	4798      	blx	r3
 800977c:	463b      	mov	r3, r7
 800977e:	e9cd 8000 	strd	r8, r0, [sp]
 8009782:	4632      	mov	r2, r6
 8009784:	4629      	mov	r1, r5
 8009786:	4620      	mov	r0, r4
 8009788:	f7ff fea0 	bl	80094cc <_ZNK8touchgfx3HAL13getDstAddressEttPttNS_6Bitmap12BitmapFormatE>
 800978c:	b002      	add	sp, #8
 800978e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8009792:	bf00      	nop
 8009794:	20012186 	.word	0x20012186

08009798 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE>:
 8009798:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800979c:	b088      	sub	sp, #32
 800979e:	4698      	mov	r8, r3
 80097a0:	2300      	movs	r3, #0
 80097a2:	9306      	str	r3, [sp, #24]
 80097a4:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 80097a8:	f8bd 6038 	ldrh.w	r6, [sp, #56]	; 0x38
 80097ac:	f8bd 503c 	ldrh.w	r5, [sp, #60]	; 0x3c
 80097b0:	f8ad 6010 	strh.w	r6, [sp, #16]
 80097b4:	e9cd 3100 	strd	r3, r1, [sp]
 80097b8:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 80097bc:	f8ad 3014 	strh.w	r3, [sp, #20]
 80097c0:	f89d 3048 	ldrb.w	r3, [sp, #72]	; 0x48
 80097c4:	f88d 301c 	strb.w	r3, [sp, #28]
 80097c8:	4617      	mov	r7, r2
 80097ca:	4604      	mov	r4, r0
 80097cc:	f8ad 5012 	strh.w	r5, [sp, #18]
 80097d0:	f7ff fe1a 	bl	8009408 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 80097d4:	4642      	mov	r2, r8
 80097d6:	4603      	mov	r3, r0
 80097d8:	4639      	mov	r1, r7
 80097da:	4620      	mov	r0, r4
 80097dc:	f7ff ffc0 	bl	8009760 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 80097e0:	4b16      	ldr	r3, [pc, #88]	; (800983c <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0xa4>)
 80097e2:	9003      	str	r0, [sp, #12]
 80097e4:	881b      	ldrh	r3, [r3, #0]
 80097e6:	f8ad 3016 	strh.w	r3, [sp, #22]
 80097ea:	f7f7 f995 	bl	8000b18 <_ZN8touchgfx3HAL3lcdEv>
 80097ee:	6803      	ldr	r3, [r0, #0]
 80097f0:	6a1b      	ldr	r3, [r3, #32]
 80097f2:	4798      	blx	r3
 80097f4:	f88d 001e 	strb.w	r0, [sp, #30]
 80097f8:	f88d 001d 	strb.w	r0, [sp, #29]
 80097fc:	b106      	cbz	r6, 8009800 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0x68>
 80097fe:	b935      	cbnz	r5, 800980e <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0x76>
 8009800:	4b0f      	ldr	r3, [pc, #60]	; (8009840 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0xa8>)
 8009802:	4a10      	ldr	r2, [pc, #64]	; (8009844 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0xac>)
 8009804:	f44f 71e6 	mov.w	r1, #460	; 0x1cc
 8009808:	480f      	ldr	r0, [pc, #60]	; (8009848 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0xb0>)
 800980a:	f00f f9ef 	bl	8018bec <__assert_func>
 800980e:	6823      	ldr	r3, [r4, #0]
 8009810:	9d00      	ldr	r5, [sp, #0]
 8009812:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8009814:	4620      	mov	r0, r4
 8009816:	4798      	blx	r3
 8009818:	4228      	tst	r0, r5
 800981a:	d104      	bne.n	8009826 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0x8e>
 800981c:	4b0b      	ldr	r3, [pc, #44]	; (800984c <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0xb4>)
 800981e:	4a09      	ldr	r2, [pc, #36]	; (8009844 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0xac>)
 8009820:	f240 11cd 	movw	r1, #461	; 0x1cd
 8009824:	e7f0      	b.n	8009808 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0x70>
 8009826:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8009828:	6860      	ldr	r0, [r4, #4]
 800982a:	9306      	str	r3, [sp, #24]
 800982c:	6803      	ldr	r3, [r0, #0]
 800982e:	4669      	mov	r1, sp
 8009830:	685b      	ldr	r3, [r3, #4]
 8009832:	4798      	blx	r3
 8009834:	b008      	add	sp, #32
 8009836:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800983a:	bf00      	nop
 800983c:	20012186 	.word	0x20012186
 8009840:	0801b374 	.word	0x0801b374
 8009844:	0801b423 	.word	0x0801b423
 8009848:	0801b2f8 	.word	0x0801b2f8
 800984c:	0801b3ac 	.word	0x0801b3ac

08009850 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE>:
 8009850:	b570      	push	{r4, r5, r6, lr}
 8009852:	b08a      	sub	sp, #40	; 0x28
 8009854:	466b      	mov	r3, sp
 8009856:	e883 0006 	stmia.w	r3, {r1, r2}
 800985a:	4b20      	ldr	r3, [pc, #128]	; (80098dc <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x8c>)
 800985c:	781b      	ldrb	r3, [r3, #0]
 800985e:	4604      	mov	r4, r0
 8009860:	b933      	cbnz	r3, 8009870 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x20>
 8009862:	4b1f      	ldr	r3, [pc, #124]	; (80098e0 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x90>)
 8009864:	4a1f      	ldr	r2, [pc, #124]	; (80098e4 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x94>)
 8009866:	4820      	ldr	r0, [pc, #128]	; (80098e8 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x98>)
 8009868:	f44f 71fc 	mov.w	r1, #504	; 0x1f8
 800986c:	f00f f9be 	bl	8018bec <__assert_func>
 8009870:	2300      	movs	r3, #0
 8009872:	9308      	str	r3, [sp, #32]
 8009874:	2301      	movs	r3, #1
 8009876:	9302      	str	r3, [sp, #8]
 8009878:	6803      	ldr	r3, [r0, #0]
 800987a:	f8bd 5000 	ldrh.w	r5, [sp]
 800987e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8009880:	f8bd 6002 	ldrh.w	r6, [sp, #2]
 8009884:	4798      	blx	r3
 8009886:	4632      	mov	r2, r6
 8009888:	4629      	mov	r1, r5
 800988a:	4603      	mov	r3, r0
 800988c:	4620      	mov	r0, r4
 800988e:	f7ff ff67 	bl	8009760 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 8009892:	6c63      	ldr	r3, [r4, #68]	; 0x44
 8009894:	9305      	str	r3, [sp, #20]
 8009896:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800989a:	f8ad 3018 	strh.w	r3, [sp, #24]
 800989e:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 80098a2:	f8ad 301a 	strh.w	r3, [sp, #26]
 80098a6:	4b11      	ldr	r3, [pc, #68]	; (80098ec <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x9c>)
 80098a8:	9003      	str	r0, [sp, #12]
 80098aa:	881b      	ldrh	r3, [r3, #0]
 80098ac:	f8ad 301c 	strh.w	r3, [sp, #28]
 80098b0:	f8ad 301e 	strh.w	r3, [sp, #30]
 80098b4:	f7f7 f930 	bl	8000b18 <_ZN8touchgfx3HAL3lcdEv>
 80098b8:	6803      	ldr	r3, [r0, #0]
 80098ba:	6a1b      	ldr	r3, [r3, #32]
 80098bc:	4798      	blx	r3
 80098be:	23ff      	movs	r3, #255	; 0xff
 80098c0:	f88d 0025 	strb.w	r0, [sp, #37]	; 0x25
 80098c4:	f88d 0026 	strb.w	r0, [sp, #38]	; 0x26
 80098c8:	6860      	ldr	r0, [r4, #4]
 80098ca:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 80098ce:	6803      	ldr	r3, [r0, #0]
 80098d0:	a902      	add	r1, sp, #8
 80098d2:	685b      	ldr	r3, [r3, #4]
 80098d4:	4798      	blx	r3
 80098d6:	6c60      	ldr	r0, [r4, #68]	; 0x44
 80098d8:	b00a      	add	sp, #40	; 0x28
 80098da:	bd70      	pop	{r4, r5, r6, pc}
 80098dc:	2001218b 	.word	0x2001218b
 80098e0:	0801b245 	.word	0x0801b245
 80098e4:	0801b4c7 	.word	0x0801b4c7
 80098e8:	0801b2f8 	.word	0x0801b2f8
 80098ec:	20012186 	.word	0x20012186

080098f0 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm>:
 80098f0:	b5f0      	push	{r4, r5, r6, r7, lr}
 80098f2:	b08b      	sub	sp, #44	; 0x2c
 80098f4:	466d      	mov	r5, sp
 80098f6:	e885 0006 	stmia.w	r5, {r1, r2}
 80098fa:	461d      	mov	r5, r3
 80098fc:	2300      	movs	r3, #0
 80098fe:	9308      	str	r3, [sp, #32]
 8009900:	2301      	movs	r3, #1
 8009902:	9302      	str	r3, [sp, #8]
 8009904:	6803      	ldr	r3, [r0, #0]
 8009906:	f8bd 6000 	ldrh.w	r6, [sp]
 800990a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800990c:	f8bd 7002 	ldrh.w	r7, [sp, #2]
 8009910:	4604      	mov	r4, r0
 8009912:	4798      	blx	r3
 8009914:	463a      	mov	r2, r7
 8009916:	4631      	mov	r1, r6
 8009918:	4603      	mov	r3, r0
 800991a:	4620      	mov	r0, r4
 800991c:	f7ff ff20 	bl	8009760 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 8009920:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8009924:	f8ad 3018 	strh.w	r3, [sp, #24]
 8009928:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 800992c:	f8ad 301a 	strh.w	r3, [sp, #26]
 8009930:	4b0e      	ldr	r3, [pc, #56]	; (800996c <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm+0x7c>)
 8009932:	9003      	str	r0, [sp, #12]
 8009934:	881b      	ldrh	r3, [r3, #0]
 8009936:	f8ad 301c 	strh.w	r3, [sp, #28]
 800993a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800993c:	f8ad 301e 	strh.w	r3, [sp, #30]
 8009940:	9505      	str	r5, [sp, #20]
 8009942:	f7f7 f8e9 	bl	8000b18 <_ZN8touchgfx3HAL3lcdEv>
 8009946:	6803      	ldr	r3, [r0, #0]
 8009948:	6a1b      	ldr	r3, [r3, #32]
 800994a:	4798      	blx	r3
 800994c:	23ff      	movs	r3, #255	; 0xff
 800994e:	f88d 0025 	strb.w	r0, [sp, #37]	; 0x25
 8009952:	f88d 0026 	strb.w	r0, [sp, #38]	; 0x26
 8009956:	6860      	ldr	r0, [r4, #4]
 8009958:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 800995c:	6803      	ldr	r3, [r0, #0]
 800995e:	a902      	add	r1, sp, #8
 8009960:	685b      	ldr	r3, [r3, #4]
 8009962:	4798      	blx	r3
 8009964:	4628      	mov	r0, r5
 8009966:	b00b      	add	sp, #44	; 0x2c
 8009968:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800996a:	bf00      	nop
 800996c:	20012186 	.word	0x20012186

08009970 <_ZN8touchgfx3HAL16swapFrameBuffersEv>:
 8009970:	b570      	push	{r4, r5, r6, lr}
 8009972:	f890 306a 	ldrb.w	r3, [r0, #106]	; 0x6a
 8009976:	4604      	mov	r4, r0
 8009978:	b19b      	cbz	r3, 80099a2 <_ZN8touchgfx3HAL16swapFrameBuffersEv+0x32>
 800997a:	2002      	movs	r0, #2
 800997c:	f7f6 fede 	bl	800073c <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>
 8009980:	2300      	movs	r3, #0
 8009982:	f884 306a 	strb.w	r3, [r4, #106]	; 0x6a
 8009986:	f884 3069 	strb.w	r3, [r4, #105]	; 0x69
 800998a:	6823      	ldr	r3, [r4, #0]
 800998c:	4620      	mov	r0, r4
 800998e:	f8d3 50a0 	ldr.w	r5, [r3, #160]	; 0xa0
 8009992:	f7ff fd39 	bl	8009408 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8009996:	462b      	mov	r3, r5
 8009998:	4601      	mov	r1, r0
 800999a:	4620      	mov	r0, r4
 800999c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80099a0:	4718      	bx	r3
 80099a2:	bd70      	pop	{r4, r5, r6, pc}

080099a4 <_ZN8touchgfx17LockFreeDMA_Queue7isEmptyEv>:
 80099a4:	e9d0 2003 	ldrd	r2, r0, [r0, #12]
 80099a8:	1a13      	subs	r3, r2, r0
 80099aa:	4258      	negs	r0, r3
 80099ac:	4158      	adcs	r0, r3
 80099ae:	4770      	bx	lr

080099b0 <_ZN8touchgfx17LockFreeDMA_Queue6isFullEv>:
 80099b0:	e9d0 2303 	ldrd	r2, r3, [r0, #12]
 80099b4:	1a9b      	subs	r3, r3, r2
 80099b6:	2b00      	cmp	r3, #0
 80099b8:	bfdc      	itt	le
 80099ba:	6882      	ldrle	r2, [r0, #8]
 80099bc:	189b      	addle	r3, r3, r2
 80099be:	2b01      	cmp	r3, #1
 80099c0:	bfcc      	ite	gt
 80099c2:	2000      	movgt	r0, #0
 80099c4:	2001      	movle	r0, #1
 80099c6:	4770      	bx	lr

080099c8 <_ZN8touchgfx17LockFreeDMA_Queue5firstEv>:
 80099c8:	6902      	ldr	r2, [r0, #16]
 80099ca:	6840      	ldr	r0, [r0, #4]
 80099cc:	eb00 1042 	add.w	r0, r0, r2, lsl #5
 80099d0:	4770      	bx	lr

080099d2 <_ZN8touchgfx13DMA_Interface13seedExecutionEv>:
 80099d2:	6803      	ldr	r3, [r0, #0]
 80099d4:	691b      	ldr	r3, [r3, #16]
 80099d6:	4718      	bx	r3

080099d8 <_ZN8touchgfx13DMA_Interface11enableAlphaEh>:
 80099d8:	4770      	bx	lr

080099da <_ZN8touchgfx13DMA_Interface12disableAlphaEv>:
 80099da:	4770      	bx	lr

080099dc <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>:
 80099dc:	4770      	bx	lr
	...

080099e0 <_ZN8touchgfx13DMA_Interface7executeEv>:
 80099e0:	b570      	push	{r4, r5, r6, lr}
 80099e2:	2301      	movs	r3, #1
 80099e4:	7203      	strb	r3, [r0, #8]
 80099e6:	4604      	mov	r4, r0
 80099e8:	6840      	ldr	r0, [r0, #4]
 80099ea:	6803      	ldr	r3, [r0, #0]
 80099ec:	699b      	ldr	r3, [r3, #24]
 80099ee:	4798      	blx	r3
 80099f0:	6803      	ldr	r3, [r0, #0]
 80099f2:	2b08      	cmp	r3, #8
 80099f4:	4605      	mov	r5, r0
 80099f6:	d01e      	beq.n	8009a36 <_ZN8touchgfx13DMA_Interface7executeEv+0x56>
 80099f8:	d80b      	bhi.n	8009a12 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 80099fa:	2b02      	cmp	r3, #2
 80099fc:	d027      	beq.n	8009a4e <_ZN8touchgfx13DMA_Interface7executeEv+0x6e>
 80099fe:	2b04      	cmp	r3, #4
 8009a00:	d011      	beq.n	8009a26 <_ZN8touchgfx13DMA_Interface7executeEv+0x46>
 8009a02:	2b01      	cmp	r3, #1
 8009a04:	d028      	beq.n	8009a58 <_ZN8touchgfx13DMA_Interface7executeEv+0x78>
 8009a06:	4b17      	ldr	r3, [pc, #92]	; (8009a64 <_ZN8touchgfx13DMA_Interface7executeEv+0x84>)
 8009a08:	4a17      	ldr	r2, [pc, #92]	; (8009a68 <_ZN8touchgfx13DMA_Interface7executeEv+0x88>)
 8009a0a:	4818      	ldr	r0, [pc, #96]	; (8009a6c <_ZN8touchgfx13DMA_Interface7executeEv+0x8c>)
 8009a0c:	218b      	movs	r1, #139	; 0x8b
 8009a0e:	f00f f8ed 	bl	8018bec <__assert_func>
 8009a12:	2b40      	cmp	r3, #64	; 0x40
 8009a14:	d020      	beq.n	8009a58 <_ZN8touchgfx13DMA_Interface7executeEv+0x78>
 8009a16:	d801      	bhi.n	8009a1c <_ZN8touchgfx13DMA_Interface7executeEv+0x3c>
 8009a18:	2b20      	cmp	r3, #32
 8009a1a:	e7f3      	b.n	8009a04 <_ZN8touchgfx13DMA_Interface7executeEv+0x24>
 8009a1c:	2b80      	cmp	r3, #128	; 0x80
 8009a1e:	d01b      	beq.n	8009a58 <_ZN8touchgfx13DMA_Interface7executeEv+0x78>
 8009a20:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8009a24:	e7ee      	b.n	8009a04 <_ZN8touchgfx13DMA_Interface7executeEv+0x24>
 8009a26:	6823      	ldr	r3, [r4, #0]
 8009a28:	7f01      	ldrb	r1, [r0, #28]
 8009a2a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8009a2c:	4620      	mov	r0, r4
 8009a2e:	4798      	blx	r3
 8009a30:	6823      	ldr	r3, [r4, #0]
 8009a32:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8009a34:	e006      	b.n	8009a44 <_ZN8touchgfx13DMA_Interface7executeEv+0x64>
 8009a36:	6823      	ldr	r3, [r4, #0]
 8009a38:	7f01      	ldrb	r1, [r0, #28]
 8009a3a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8009a3c:	4620      	mov	r0, r4
 8009a3e:	4798      	blx	r3
 8009a40:	6823      	ldr	r3, [r4, #0]
 8009a42:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8009a44:	4629      	mov	r1, r5
 8009a46:	4620      	mov	r0, r4
 8009a48:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8009a4c:	4718      	bx	r3
 8009a4e:	6823      	ldr	r3, [r4, #0]
 8009a50:	4620      	mov	r0, r4
 8009a52:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8009a54:	4798      	blx	r3
 8009a56:	e7f3      	b.n	8009a40 <_ZN8touchgfx13DMA_Interface7executeEv+0x60>
 8009a58:	6823      	ldr	r3, [r4, #0]
 8009a5a:	4620      	mov	r0, r4
 8009a5c:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8009a5e:	4798      	blx	r3
 8009a60:	e7e6      	b.n	8009a30 <_ZN8touchgfx13DMA_Interface7executeEv+0x50>
 8009a62:	bf00      	nop
 8009a64:	0801b718 	.word	0x0801b718
 8009a68:	0801b7d8 	.word	0x0801b7d8
 8009a6c:	0801b73d 	.word	0x0801b73d

08009a70 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE>:
 8009a70:	b570      	push	{r4, r5, r6, lr}
 8009a72:	4604      	mov	r4, r0
 8009a74:	460e      	mov	r6, r1
 8009a76:	6860      	ldr	r0, [r4, #4]
 8009a78:	6803      	ldr	r3, [r0, #0]
 8009a7a:	685b      	ldr	r3, [r3, #4]
 8009a7c:	4798      	blx	r3
 8009a7e:	2800      	cmp	r0, #0
 8009a80:	d1f9      	bne.n	8009a76 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x6>
 8009a82:	4d0b      	ldr	r5, [pc, #44]	; (8009ab0 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x40>)
 8009a84:	6828      	ldr	r0, [r5, #0]
 8009a86:	6803      	ldr	r3, [r0, #0]
 8009a88:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8009a8a:	4798      	blx	r3
 8009a8c:	f7f6 ff94 	bl	80009b8 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>
 8009a90:	6860      	ldr	r0, [r4, #4]
 8009a92:	6803      	ldr	r3, [r0, #0]
 8009a94:	4631      	mov	r1, r6
 8009a96:	689b      	ldr	r3, [r3, #8]
 8009a98:	4798      	blx	r3
 8009a9a:	6823      	ldr	r3, [r4, #0]
 8009a9c:	4620      	mov	r0, r4
 8009a9e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8009aa0:	4798      	blx	r3
 8009aa2:	6828      	ldr	r0, [r5, #0]
 8009aa4:	6803      	ldr	r3, [r0, #0]
 8009aa6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8009aaa:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8009aac:	4718      	bx	r3
 8009aae:	bf00      	nop
 8009ab0:	2001218c 	.word	0x2001218c

08009ab4 <_ZN8touchgfx13DMA_Interface27waitForFrameBufferSemaphoreEv>:
 8009ab4:	b508      	push	{r3, lr}
 8009ab6:	f7f6 ff51 	bl	800095c <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 8009aba:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8009abe:	f7f6 bf65 	b.w	800098c <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

08009ac2 <_ZN8touchgfx17LockFreeDMA_QueueD0Ev>:
 8009ac2:	b510      	push	{r4, lr}
 8009ac4:	2114      	movs	r1, #20
 8009ac6:	4604      	mov	r4, r0
 8009ac8:	f00f f864 	bl	8018b94 <_ZdlPvj>
 8009acc:	4620      	mov	r0, r4
 8009ace:	bd10      	pop	{r4, pc}

08009ad0 <_ZN8touchgfx13DMA_Interface5startEv>:
 8009ad0:	b510      	push	{r4, lr}
 8009ad2:	4604      	mov	r4, r0
 8009ad4:	6840      	ldr	r0, [r0, #4]
 8009ad6:	6803      	ldr	r3, [r0, #0]
 8009ad8:	681b      	ldr	r3, [r3, #0]
 8009ada:	4798      	blx	r3
 8009adc:	b948      	cbnz	r0, 8009af2 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 8009ade:	7a63      	ldrb	r3, [r4, #9]
 8009ae0:	b13b      	cbz	r3, 8009af2 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 8009ae2:	7a23      	ldrb	r3, [r4, #8]
 8009ae4:	b92b      	cbnz	r3, 8009af2 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 8009ae6:	6823      	ldr	r3, [r4, #0]
 8009ae8:	4620      	mov	r0, r4
 8009aea:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8009aec:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8009af0:	4718      	bx	r3
 8009af2:	bd10      	pop	{r4, pc}

08009af4 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE>:
 8009af4:	b510      	push	{r4, lr}
 8009af6:	e9d0 4203 	ldrd	r4, r2, [r0, #12]
 8009afa:	1b12      	subs	r2, r2, r4
 8009afc:	2a00      	cmp	r2, #0
 8009afe:	bfdc      	itt	le
 8009b00:	6883      	ldrle	r3, [r0, #8]
 8009b02:	18d2      	addle	r2, r2, r3
 8009b04:	2a01      	cmp	r2, #1
 8009b06:	dd18      	ble.n	8009b3a <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x46>
 8009b08:	6843      	ldr	r3, [r0, #4]
 8009b0a:	f101 021c 	add.w	r2, r1, #28
 8009b0e:	eb03 1344 	add.w	r3, r3, r4, lsl #5
 8009b12:	f851 4b04 	ldr.w	r4, [r1], #4
 8009b16:	f843 4b04 	str.w	r4, [r3], #4
 8009b1a:	4291      	cmp	r1, r2
 8009b1c:	d1f9      	bne.n	8009b12 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x1e>
 8009b1e:	880a      	ldrh	r2, [r1, #0]
 8009b20:	801a      	strh	r2, [r3, #0]
 8009b22:	788a      	ldrb	r2, [r1, #2]
 8009b24:	709a      	strb	r2, [r3, #2]
 8009b26:	68c3      	ldr	r3, [r0, #12]
 8009b28:	6882      	ldr	r2, [r0, #8]
 8009b2a:	f3bf 8f5b 	dmb	ish
 8009b2e:	3301      	adds	r3, #1
 8009b30:	429a      	cmp	r2, r3
 8009b32:	bfd8      	it	le
 8009b34:	1a9b      	suble	r3, r3, r2
 8009b36:	60c3      	str	r3, [r0, #12]
 8009b38:	bd10      	pop	{r4, pc}
 8009b3a:	4b03      	ldr	r3, [pc, #12]	; (8009b48 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x54>)
 8009b3c:	4a03      	ldr	r2, [pc, #12]	; (8009b4c <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x58>)
 8009b3e:	4804      	ldr	r0, [pc, #16]	; (8009b50 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x5c>)
 8009b40:	2139      	movs	r1, #57	; 0x39
 8009b42:	f00f f853 	bl	8018bec <__assert_func>
 8009b46:	bf00      	nop
 8009b48:	0801b763 	.word	0x0801b763
 8009b4c:	0801b808 	.word	0x0801b808
 8009b50:	0801b73d 	.word	0x0801b73d

08009b54 <_ZN8touchgfx17LockFreeDMA_Queue3popEv>:
 8009b54:	b510      	push	{r4, lr}
 8009b56:	6803      	ldr	r3, [r0, #0]
 8009b58:	681b      	ldr	r3, [r3, #0]
 8009b5a:	4604      	mov	r4, r0
 8009b5c:	4798      	blx	r3
 8009b5e:	b128      	cbz	r0, 8009b6c <_ZN8touchgfx17LockFreeDMA_Queue3popEv+0x18>
 8009b60:	4b07      	ldr	r3, [pc, #28]	; (8009b80 <_ZN8touchgfx17LockFreeDMA_Queue3popEv+0x2c>)
 8009b62:	4a08      	ldr	r2, [pc, #32]	; (8009b84 <_ZN8touchgfx17LockFreeDMA_Queue3popEv+0x30>)
 8009b64:	4808      	ldr	r0, [pc, #32]	; (8009b88 <_ZN8touchgfx17LockFreeDMA_Queue3popEv+0x34>)
 8009b66:	213f      	movs	r1, #63	; 0x3f
 8009b68:	f00f f840 	bl	8018bec <__assert_func>
 8009b6c:	6923      	ldr	r3, [r4, #16]
 8009b6e:	68a2      	ldr	r2, [r4, #8]
 8009b70:	f3bf 8f5b 	dmb	ish
 8009b74:	3301      	adds	r3, #1
 8009b76:	429a      	cmp	r2, r3
 8009b78:	bfd8      	it	le
 8009b7a:	1a9b      	suble	r3, r3, r2
 8009b7c:	6123      	str	r3, [r4, #16]
 8009b7e:	bd10      	pop	{r4, pc}
 8009b80:	0801b786 	.word	0x0801b786
 8009b84:	0801b856 	.word	0x0801b856
 8009b88:	0801b73d 	.word	0x0801b73d

08009b8c <_ZN8touchgfx13DMA_Interface16executeCompletedEv>:
 8009b8c:	b570      	push	{r4, r5, r6, lr}
 8009b8e:	4604      	mov	r4, r0
 8009b90:	6840      	ldr	r0, [r0, #4]
 8009b92:	6803      	ldr	r3, [r0, #0]
 8009b94:	681b      	ldr	r3, [r3, #0]
 8009b96:	4798      	blx	r3
 8009b98:	4605      	mov	r5, r0
 8009b9a:	b930      	cbnz	r0, 8009baa <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 8009b9c:	7a23      	ldrb	r3, [r4, #8]
 8009b9e:	b123      	cbz	r3, 8009baa <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 8009ba0:	6860      	ldr	r0, [r4, #4]
 8009ba2:	6803      	ldr	r3, [r0, #0]
 8009ba4:	695b      	ldr	r3, [r3, #20]
 8009ba6:	4798      	blx	r3
 8009ba8:	7225      	strb	r5, [r4, #8]
 8009baa:	6860      	ldr	r0, [r4, #4]
 8009bac:	6803      	ldr	r3, [r0, #0]
 8009bae:	681b      	ldr	r3, [r3, #0]
 8009bb0:	4798      	blx	r3
 8009bb2:	b928      	cbnz	r0, 8009bc0 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x34>
 8009bb4:	6823      	ldr	r3, [r4, #0]
 8009bb6:	4620      	mov	r0, r4
 8009bb8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8009bba:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8009bbe:	4718      	bx	r3
 8009bc0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8009bc4:	f7f6 bf10 	b.w	80009e8 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>

08009bc8 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>:
 8009bc8:	b510      	push	{r4, lr}
 8009bca:	4c04      	ldr	r4, [pc, #16]	; (8009bdc <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi+0x14>)
 8009bcc:	6082      	str	r2, [r0, #8]
 8009bce:	2200      	movs	r2, #0
 8009bd0:	e9c0 4100 	strd	r4, r1, [r0]
 8009bd4:	e9c0 2203 	strd	r2, r2, [r0, #12]
 8009bd8:	bd10      	pop	{r4, pc}
 8009bda:	bf00      	nop
 8009bdc:	0801b7bc 	.word	0x0801b7bc

08009be0 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>:
 8009be0:	6840      	ldr	r0, [r0, #4]
 8009be2:	6803      	ldr	r3, [r0, #0]
 8009be4:	681b      	ldr	r3, [r3, #0]
 8009be6:	4718      	bx	r3

08009be8 <_ZNK8touchgfx14AbstractButton15getPressedStateEv>:
 8009be8:	f890 002c 	ldrb.w	r0, [r0, #44]	; 0x2c
 8009bec:	4770      	bx	lr

08009bee <_ZN8touchgfx12ToggleButtonD1Ev>:
 8009bee:	4770      	bx	lr

08009bf0 <_ZN8touchgfx12ToggleButton16handleClickEventERKNS_10ClickEventE>:
 8009bf0:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 8009bf4:	b133      	cbz	r3, 8009c04 <_ZN8touchgfx12ToggleButton16handleClickEventERKNS_10ClickEventE+0x14>
 8009bf6:	790b      	ldrb	r3, [r1, #4]
 8009bf8:	2b01      	cmp	r3, #1
 8009bfa:	bf01      	itttt	eq
 8009bfc:	8dc3      	ldrheq	r3, [r0, #46]	; 0x2e
 8009bfe:	8e02      	ldrheq	r2, [r0, #48]	; 0x30
 8009c00:	85c2      	strheq	r2, [r0, #46]	; 0x2e
 8009c02:	8603      	strheq	r3, [r0, #48]	; 0x30
 8009c04:	f00e bf98 	b.w	8018b38 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE>

08009c08 <_ZN8touchgfx12ToggleButton10setBitmapsERKNS_6BitmapES3_>:
 8009c08:	8813      	ldrh	r3, [r2, #0]
 8009c0a:	8683      	strh	r3, [r0, #52]	; 0x34
 8009c0c:	f000 ba3a 	b.w	800a084 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>

08009c10 <_ZN8touchgfx12ToggleButtonD0Ev>:
 8009c10:	b510      	push	{r4, lr}
 8009c12:	2138      	movs	r1, #56	; 0x38
 8009c14:	4604      	mov	r4, r0
 8009c16:	f00e ffbd 	bl	8018b94 <_ZdlPvj>
 8009c1a:	4620      	mov	r0, r4
 8009c1c:	bd10      	pop	{r4, pc}

08009c1e <_ZNK8touchgfx8TextArea12getSolidRectEv>:
 8009c1e:	2200      	movs	r2, #0
 8009c20:	8002      	strh	r2, [r0, #0]
 8009c22:	8042      	strh	r2, [r0, #2]
 8009c24:	8082      	strh	r2, [r0, #4]
 8009c26:	80c2      	strh	r2, [r0, #6]
 8009c28:	4770      	bx	lr

08009c2a <_ZN8touchgfx8TextArea13setXBaselineYEss>:
 8009c2a:	b570      	push	{r4, r5, r6, lr}
 8009c2c:	6803      	ldr	r3, [r0, #0]
 8009c2e:	4604      	mov	r4, r0
 8009c30:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8009c32:	4615      	mov	r5, r2
 8009c34:	4798      	blx	r3
 8009c36:	6823      	ldr	r3, [r4, #0]
 8009c38:	4629      	mov	r1, r5
 8009c3a:	4620      	mov	r0, r4
 8009c3c:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8009c3e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8009c42:	4718      	bx	r3

08009c44 <_ZN8touchgfx8TextAreaD1Ev>:
 8009c44:	4770      	bx	lr
	...

08009c48 <_ZNK8touchgfx8TextArea12getTextWidthEv>:
 8009c48:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8009c4a:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 8009c4c:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8009c50:	4299      	cmp	r1, r3
 8009c52:	d029      	beq.n	8009ca8 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x60>
 8009c54:	4b15      	ldr	r3, [pc, #84]	; (8009cac <_ZNK8touchgfx8TextArea12getTextWidthEv+0x64>)
 8009c56:	681b      	ldr	r3, [r3, #0]
 8009c58:	b92b      	cbnz	r3, 8009c66 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x1e>
 8009c5a:	4b15      	ldr	r3, [pc, #84]	; (8009cb0 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x68>)
 8009c5c:	4a15      	ldr	r2, [pc, #84]	; (8009cb4 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x6c>)
 8009c5e:	21b1      	movs	r1, #177	; 0xb1
 8009c60:	4815      	ldr	r0, [pc, #84]	; (8009cb8 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x70>)
 8009c62:	f00e ffc3 	bl	8018bec <__assert_func>
 8009c66:	4a15      	ldr	r2, [pc, #84]	; (8009cbc <_ZNK8touchgfx8TextArea12getTextWidthEv+0x74>)
 8009c68:	8812      	ldrh	r2, [r2, #0]
 8009c6a:	428a      	cmp	r2, r1
 8009c6c:	d803      	bhi.n	8009c76 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x2e>
 8009c6e:	4b14      	ldr	r3, [pc, #80]	; (8009cc0 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x78>)
 8009c70:	4a10      	ldr	r2, [pc, #64]	; (8009cb4 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x6c>)
 8009c72:	21b2      	movs	r1, #178	; 0xb2
 8009c74:	e7f4      	b.n	8009c60 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x18>
 8009c76:	eb03 0241 	add.w	r2, r3, r1, lsl #1
 8009c7a:	f813 0011 	ldrb.w	r0, [r3, r1, lsl #1]
 8009c7e:	4b11      	ldr	r3, [pc, #68]	; (8009cc4 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x7c>)
 8009c80:	7854      	ldrb	r4, [r2, #1]
 8009c82:	681b      	ldr	r3, [r3, #0]
 8009c84:	f853 5020 	ldr.w	r5, [r3, r0, lsl #2]
 8009c88:	682b      	ldr	r3, [r5, #0]
 8009c8a:	69de      	ldr	r6, [r3, #28]
 8009c8c:	4b0e      	ldr	r3, [pc, #56]	; (8009cc8 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x80>)
 8009c8e:	6818      	ldr	r0, [r3, #0]
 8009c90:	f7f8 fdfa 	bl	8002888 <_ZNK8touchgfx5Texts7getTextEt>
 8009c94:	f3c4 0481 	ubfx	r4, r4, #2, #2
 8009c98:	2300      	movs	r3, #0
 8009c9a:	4602      	mov	r2, r0
 8009c9c:	9300      	str	r3, [sp, #0]
 8009c9e:	4621      	mov	r1, r4
 8009ca0:	4628      	mov	r0, r5
 8009ca2:	47b0      	blx	r6
 8009ca4:	b002      	add	sp, #8
 8009ca6:	bd70      	pop	{r4, r5, r6, pc}
 8009ca8:	2000      	movs	r0, #0
 8009caa:	e7fb      	b.n	8009ca4 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x5c>
 8009cac:	200121fc 	.word	0x200121fc
 8009cb0:	0801b8f8 	.word	0x0801b8f8
 8009cb4:	0801ba34 	.word	0x0801ba34
 8009cb8:	0801b93a 	.word	0x0801b93a
 8009cbc:	20012200 	.word	0x20012200
 8009cc0:	0801b963 	.word	0x0801b963
 8009cc4:	20012204 	.word	0x20012204
 8009cc8:	20012208 	.word	0x20012208

08009ccc <_ZN8touchgfx8TextArea12setBaselineYEs>:
 8009ccc:	b570      	push	{r4, r5, r6, lr}
 8009cce:	6803      	ldr	r3, [r0, #0]
 8009cd0:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 8009cd2:	6b1e      	ldr	r6, [r3, #48]	; 0x30
 8009cd4:	4b11      	ldr	r3, [pc, #68]	; (8009d1c <_ZN8touchgfx8TextArea12setBaselineYEs+0x50>)
 8009cd6:	681b      	ldr	r3, [r3, #0]
 8009cd8:	4604      	mov	r4, r0
 8009cda:	b28d      	uxth	r5, r1
 8009cdc:	b92b      	cbnz	r3, 8009cea <_ZN8touchgfx8TextArea12setBaselineYEs+0x1e>
 8009cde:	4b10      	ldr	r3, [pc, #64]	; (8009d20 <_ZN8touchgfx8TextArea12setBaselineYEs+0x54>)
 8009ce0:	4a10      	ldr	r2, [pc, #64]	; (8009d24 <_ZN8touchgfx8TextArea12setBaselineYEs+0x58>)
 8009ce2:	21b1      	movs	r1, #177	; 0xb1
 8009ce4:	4810      	ldr	r0, [pc, #64]	; (8009d28 <_ZN8touchgfx8TextArea12setBaselineYEs+0x5c>)
 8009ce6:	f00e ff81 	bl	8018bec <__assert_func>
 8009cea:	4910      	ldr	r1, [pc, #64]	; (8009d2c <_ZN8touchgfx8TextArea12setBaselineYEs+0x60>)
 8009cec:	8809      	ldrh	r1, [r1, #0]
 8009cee:	4291      	cmp	r1, r2
 8009cf0:	d803      	bhi.n	8009cfa <_ZN8touchgfx8TextArea12setBaselineYEs+0x2e>
 8009cf2:	4b0f      	ldr	r3, [pc, #60]	; (8009d30 <_ZN8touchgfx8TextArea12setBaselineYEs+0x64>)
 8009cf4:	4a0b      	ldr	r2, [pc, #44]	; (8009d24 <_ZN8touchgfx8TextArea12setBaselineYEs+0x58>)
 8009cf6:	21b2      	movs	r1, #178	; 0xb2
 8009cf8:	e7f4      	b.n	8009ce4 <_ZN8touchgfx8TextArea12setBaselineYEs+0x18>
 8009cfa:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
 8009cfe:	4b0d      	ldr	r3, [pc, #52]	; (8009d34 <_ZN8touchgfx8TextArea12setBaselineYEs+0x68>)
 8009d00:	681b      	ldr	r3, [r3, #0]
 8009d02:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 8009d06:	6803      	ldr	r3, [r0, #0]
 8009d08:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8009d0a:	4798      	blx	r3
 8009d0c:	1a29      	subs	r1, r5, r0
 8009d0e:	4633      	mov	r3, r6
 8009d10:	4620      	mov	r0, r4
 8009d12:	b209      	sxth	r1, r1
 8009d14:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8009d18:	4718      	bx	r3
 8009d1a:	bf00      	nop
 8009d1c:	200121fc 	.word	0x200121fc
 8009d20:	0801b8f8 	.word	0x0801b8f8
 8009d24:	0801ba34 	.word	0x0801ba34
 8009d28:	0801b93a 	.word	0x0801b93a
 8009d2c:	20012200 	.word	0x20012200
 8009d30:	0801b963 	.word	0x0801b963
 8009d34:	20012204 	.word	0x20012204

08009d38 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE>:
 8009d38:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8009d3c:	8d83      	ldrh	r3, [r0, #44]	; 0x2c
 8009d3e:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8009d42:	4293      	cmp	r3, r2
 8009d44:	b08c      	sub	sp, #48	; 0x30
 8009d46:	4604      	mov	r4, r0
 8009d48:	4688      	mov	r8, r1
 8009d4a:	d05f      	beq.n	8009e0c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd4>
 8009d4c:	4e31      	ldr	r6, [pc, #196]	; (8009e14 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xdc>)
 8009d4e:	6832      	ldr	r2, [r6, #0]
 8009d50:	b92a      	cbnz	r2, 8009d5e <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x26>
 8009d52:	4b31      	ldr	r3, [pc, #196]	; (8009e18 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xe0>)
 8009d54:	4a31      	ldr	r2, [pc, #196]	; (8009e1c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xe4>)
 8009d56:	21b1      	movs	r1, #177	; 0xb1
 8009d58:	4831      	ldr	r0, [pc, #196]	; (8009e20 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xe8>)
 8009d5a:	f00e ff47 	bl	8018bec <__assert_func>
 8009d5e:	4d31      	ldr	r5, [pc, #196]	; (8009e24 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xec>)
 8009d60:	8829      	ldrh	r1, [r5, #0]
 8009d62:	4299      	cmp	r1, r3
 8009d64:	d803      	bhi.n	8009d6e <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x36>
 8009d66:	4b30      	ldr	r3, [pc, #192]	; (8009e28 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xf0>)
 8009d68:	4a2c      	ldr	r2, [pc, #176]	; (8009e1c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xe4>)
 8009d6a:	21b2      	movs	r1, #178	; 0xb2
 8009d6c:	e7f4      	b.n	8009d58 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x20>
 8009d6e:	eb02 0143 	add.w	r1, r2, r3, lsl #1
 8009d72:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 8009d76:	4b2d      	ldr	r3, [pc, #180]	; (8009e2c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xf4>)
 8009d78:	681b      	ldr	r3, [r3, #0]
 8009d7a:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 8009d7e:	2a00      	cmp	r2, #0
 8009d80:	d044      	beq.n	8009e0c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd4>
 8009d82:	784b      	ldrb	r3, [r1, #1]
 8009d84:	9207      	str	r2, [sp, #28]
 8009d86:	f3c3 0901 	ubfx	r9, r3, #0, #2
 8009d8a:	f3c3 0381 	ubfx	r3, r3, #2, #2
 8009d8e:	f88d 3021 	strb.w	r3, [sp, #33]	; 0x21
 8009d92:	4b27      	ldr	r3, [pc, #156]	; (8009e30 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xf8>)
 8009d94:	f890 a036 	ldrb.w	sl, [r0, #54]	; 0x36
 8009d98:	681b      	ldr	r3, [r3, #0]
 8009d9a:	f9b0 c034 	ldrsh.w	ip, [r0, #52]	; 0x34
 8009d9e:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 8009da2:	f890 e038 	ldrb.w	lr, [r0, #56]	; 0x38
 8009da6:	f890 7037 	ldrb.w	r7, [r0, #55]	; 0x37
 8009daa:	f890 1039 	ldrb.w	r1, [r0, #57]	; 0x39
 8009dae:	6b00      	ldr	r0, [r0, #48]	; 0x30
 8009db0:	9009      	str	r0, [sp, #36]	; 0x24
 8009db2:	f88d a02a 	strb.w	sl, [sp, #42]	; 0x2a
 8009db6:	f88d 9020 	strb.w	r9, [sp, #32]
 8009dba:	f88d e022 	strb.w	lr, [sp, #34]	; 0x22
 8009dbe:	f8ad c028 	strh.w	ip, [sp, #40]	; 0x28
 8009dc2:	f88d 702b 	strb.w	r7, [sp, #43]	; 0x2b
 8009dc6:	f88d 102c 	strb.w	r1, [sp, #44]	; 0x2c
 8009dca:	b10a      	cbz	r2, 8009dd0 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x98>
 8009dcc:	6cdf      	ldr	r7, [r3, #76]	; 0x4c
 8009dce:	b907      	cbnz	r7, 8009dd2 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x9a>
 8009dd0:	689f      	ldr	r7, [r3, #8]
 8009dd2:	f10d 0914 	add.w	r9, sp, #20
 8009dd6:	4621      	mov	r1, r4
 8009dd8:	4648      	mov	r0, r9
 8009dda:	f001 ffdb 	bl	800bd94 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8009dde:	6833      	ldr	r3, [r6, #0]
 8009de0:	2b00      	cmp	r3, #0
 8009de2:	d0b6      	beq.n	8009d52 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x1a>
 8009de4:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 8009de6:	882b      	ldrh	r3, [r5, #0]
 8009de8:	428b      	cmp	r3, r1
 8009dea:	d9bc      	bls.n	8009d66 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x2e>
 8009dec:	4b11      	ldr	r3, [pc, #68]	; (8009e34 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xfc>)
 8009dee:	6818      	ldr	r0, [r3, #0]
 8009df0:	f7f8 fd4a 	bl	8002888 <_ZNK8touchgfx5Texts7getTextEt>
 8009df4:	2300      	movs	r3, #0
 8009df6:	e9cd 3302 	strd	r3, r3, [sp, #8]
 8009dfa:	ab07      	add	r3, sp, #28
 8009dfc:	9001      	str	r0, [sp, #4]
 8009dfe:	9300      	str	r3, [sp, #0]
 8009e00:	e899 0006 	ldmia.w	r9, {r1, r2}
 8009e04:	4643      	mov	r3, r8
 8009e06:	4638      	mov	r0, r7
 8009e08:	f7f8 fcf2 	bl	80027f0 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 8009e0c:	b00c      	add	sp, #48	; 0x30
 8009e0e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8009e12:	bf00      	nop
 8009e14:	200121fc 	.word	0x200121fc
 8009e18:	0801b8f8 	.word	0x0801b8f8
 8009e1c:	0801ba34 	.word	0x0801ba34
 8009e20:	0801b93a 	.word	0x0801b93a
 8009e24:	20012200 	.word	0x20012200
 8009e28:	0801b963 	.word	0x0801b963
 8009e2c:	20012204 	.word	0x20012204
 8009e30:	2001218c 	.word	0x2001218c
 8009e34:	20012208 	.word	0x20012208

08009e38 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz>:
 8009e38:	b40e      	push	{r1, r2, r3}
 8009e3a:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8009e3e:	8d83      	ldrh	r3, [r0, #44]	; 0x2c
 8009e40:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8009e44:	4293      	cmp	r3, r2
 8009e46:	b09b      	sub	sp, #108	; 0x6c
 8009e48:	4604      	mov	r4, r0
 8009e4a:	d061      	beq.n	8009f10 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xd8>
 8009e4c:	f8df a0d4 	ldr.w	sl, [pc, #212]	; 8009f24 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xec>
 8009e50:	aa24      	add	r2, sp, #144	; 0x90
 8009e52:	9203      	str	r2, [sp, #12]
 8009e54:	f8da 2000 	ldr.w	r2, [sl]
 8009e58:	b92a      	cbnz	r2, 8009e66 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0x2e>
 8009e5a:	4b2e      	ldr	r3, [pc, #184]	; (8009f14 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xdc>)
 8009e5c:	4a2e      	ldr	r2, [pc, #184]	; (8009f18 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xe0>)
 8009e5e:	21b1      	movs	r1, #177	; 0xb1
 8009e60:	482e      	ldr	r0, [pc, #184]	; (8009f1c <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xe4>)
 8009e62:	f00e fec3 	bl	8018bec <__assert_func>
 8009e66:	f8df 80c0 	ldr.w	r8, [pc, #192]	; 8009f28 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xf0>
 8009e6a:	f8b8 1000 	ldrh.w	r1, [r8]
 8009e6e:	4299      	cmp	r1, r3
 8009e70:	d803      	bhi.n	8009e7a <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0x42>
 8009e72:	4b2b      	ldr	r3, [pc, #172]	; (8009f20 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xe8>)
 8009e74:	4a28      	ldr	r2, [pc, #160]	; (8009f18 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xe0>)
 8009e76:	21b2      	movs	r1, #178	; 0xb2
 8009e78:	e7f2      	b.n	8009e60 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0x28>
 8009e7a:	f8df 90b0 	ldr.w	r9, [pc, #176]	; 8009f2c <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xf4>
 8009e7e:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 8009e82:	f8d9 3000 	ldr.w	r3, [r9]
 8009e86:	f853 7022 	ldr.w	r7, [r3, r2, lsl #2]
 8009e8a:	683b      	ldr	r3, [r7, #0]
 8009e8c:	4638      	mov	r0, r7
 8009e8e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8009e90:	4798      	blx	r3
 8009e92:	4606      	mov	r6, r0
 8009e94:	b205      	sxth	r5, r0
 8009e96:	a804      	add	r0, sp, #16
 8009e98:	f002 fb90 	bl	800c5bc <_ZN8touchgfx12TextProviderC1Ev>
 8009e9c:	683b      	ldr	r3, [r7, #0]
 8009e9e:	4638      	mov	r0, r7
 8009ea0:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8009ea2:	4798      	blx	r3
 8009ea4:	9923      	ldr	r1, [sp, #140]	; 0x8c
 8009ea6:	9a03      	ldr	r2, [sp, #12]
 8009ea8:	4603      	mov	r3, r0
 8009eaa:	a804      	add	r0, sp, #16
 8009eac:	f002 fbcb 	bl	800c646 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_>
 8009eb0:	f8da 3000 	ldr.w	r3, [sl]
 8009eb4:	f894 1039 	ldrb.w	r1, [r4, #57]	; 0x39
 8009eb8:	2b00      	cmp	r3, #0
 8009eba:	d0ce      	beq.n	8009e5a <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0x22>
 8009ebc:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 8009ebe:	f8b8 0000 	ldrh.w	r0, [r8]
 8009ec2:	4290      	cmp	r0, r2
 8009ec4:	d9d5      	bls.n	8009e72 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0x3a>
 8009ec6:	eb03 0742 	add.w	r7, r3, r2, lsl #1
 8009eca:	f813 0012 	ldrb.w	r0, [r3, r2, lsl #1]
 8009ece:	787a      	ldrb	r2, [r7, #1]
 8009ed0:	f8d9 3000 	ldr.w	r3, [r9]
 8009ed4:	f9b4 7008 	ldrsh.w	r7, [r4, #8]
 8009ed8:	9700      	str	r7, [sp, #0]
 8009eda:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
 8009ede:	f3c2 0281 	ubfx	r2, r2, #2, #2
 8009ee2:	a804      	add	r0, sp, #16
 8009ee4:	f000 fdc8 	bl	800aa78 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>
 8009ee8:	f9b4 2034 	ldrsh.w	r2, [r4, #52]	; 0x34
 8009eec:	18a9      	adds	r1, r5, r2
 8009eee:	2900      	cmp	r1, #0
 8009ef0:	b203      	sxth	r3, r0
 8009ef2:	dd0b      	ble.n	8009f0c <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xd4>
 8009ef4:	3b01      	subs	r3, #1
 8009ef6:	fb13 f302 	smulbb	r3, r3, r2
 8009efa:	fb16 3300 	smlabb	r3, r6, r0, r3
 8009efe:	b21d      	sxth	r5, r3
 8009f00:	4628      	mov	r0, r5
 8009f02:	b01b      	add	sp, #108	; 0x6c
 8009f04:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8009f08:	b003      	add	sp, #12
 8009f0a:	4770      	bx	lr
 8009f0c:	2b00      	cmp	r3, #0
 8009f0e:	dcf7      	bgt.n	8009f00 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc8>
 8009f10:	2500      	movs	r5, #0
 8009f12:	e7f5      	b.n	8009f00 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc8>
 8009f14:	0801b8f8 	.word	0x0801b8f8
 8009f18:	0801ba34 	.word	0x0801ba34
 8009f1c:	0801b93a 	.word	0x0801b93a
 8009f20:	0801b963 	.word	0x0801b963
 8009f24:	200121fc 	.word	0x200121fc
 8009f28:	20012200 	.word	0x20012200
 8009f2c:	20012204 	.word	0x20012204

08009f30 <_ZN8touchgfx8TextAreaD0Ev>:
 8009f30:	b510      	push	{r4, lr}
 8009f32:	213c      	movs	r1, #60	; 0x3c
 8009f34:	4604      	mov	r4, r0
 8009f36:	f00e fe2d 	bl	8018b94 <_ZdlPvj>
 8009f3a:	4620      	mov	r0, r4
 8009f3c:	bd10      	pop	{r4, pc}
	...

08009f40 <_ZN8touchgfx8TextArea13getTextHeightEv>:
 8009f40:	b570      	push	{r4, r5, r6, lr}
 8009f42:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 8009f44:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8009f48:	4299      	cmp	r1, r3
 8009f4a:	4604      	mov	r4, r0
 8009f4c:	d01e      	beq.n	8009f8c <_ZN8touchgfx8TextArea13getTextHeightEv+0x4c>
 8009f4e:	6803      	ldr	r3, [r0, #0]
 8009f50:	6f1d      	ldr	r5, [r3, #112]	; 0x70
 8009f52:	4b0f      	ldr	r3, [pc, #60]	; (8009f90 <_ZN8touchgfx8TextArea13getTextHeightEv+0x50>)
 8009f54:	681b      	ldr	r3, [r3, #0]
 8009f56:	b92b      	cbnz	r3, 8009f64 <_ZN8touchgfx8TextArea13getTextHeightEv+0x24>
 8009f58:	4b0e      	ldr	r3, [pc, #56]	; (8009f94 <_ZN8touchgfx8TextArea13getTextHeightEv+0x54>)
 8009f5a:	4a0f      	ldr	r2, [pc, #60]	; (8009f98 <_ZN8touchgfx8TextArea13getTextHeightEv+0x58>)
 8009f5c:	21b1      	movs	r1, #177	; 0xb1
 8009f5e:	480f      	ldr	r0, [pc, #60]	; (8009f9c <_ZN8touchgfx8TextArea13getTextHeightEv+0x5c>)
 8009f60:	f00e fe44 	bl	8018bec <__assert_func>
 8009f64:	4b0e      	ldr	r3, [pc, #56]	; (8009fa0 <_ZN8touchgfx8TextArea13getTextHeightEv+0x60>)
 8009f66:	881b      	ldrh	r3, [r3, #0]
 8009f68:	428b      	cmp	r3, r1
 8009f6a:	d803      	bhi.n	8009f74 <_ZN8touchgfx8TextArea13getTextHeightEv+0x34>
 8009f6c:	4b0d      	ldr	r3, [pc, #52]	; (8009fa4 <_ZN8touchgfx8TextArea13getTextHeightEv+0x64>)
 8009f6e:	4a0a      	ldr	r2, [pc, #40]	; (8009f98 <_ZN8touchgfx8TextArea13getTextHeightEv+0x58>)
 8009f70:	21b2      	movs	r1, #178	; 0xb2
 8009f72:	e7f4      	b.n	8009f5e <_ZN8touchgfx8TextArea13getTextHeightEv+0x1e>
 8009f74:	4b0c      	ldr	r3, [pc, #48]	; (8009fa8 <_ZN8touchgfx8TextArea13getTextHeightEv+0x68>)
 8009f76:	6818      	ldr	r0, [r3, #0]
 8009f78:	f7f8 fc86 	bl	8002888 <_ZNK8touchgfx5Texts7getTextEt>
 8009f7c:	2300      	movs	r3, #0
 8009f7e:	4601      	mov	r1, r0
 8009f80:	46ac      	mov	ip, r5
 8009f82:	4620      	mov	r0, r4
 8009f84:	461a      	mov	r2, r3
 8009f86:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8009f8a:	4760      	bx	ip
 8009f8c:	2000      	movs	r0, #0
 8009f8e:	bd70      	pop	{r4, r5, r6, pc}
 8009f90:	200121fc 	.word	0x200121fc
 8009f94:	0801b8f8 	.word	0x0801b8f8
 8009f98:	0801ba34 	.word	0x0801ba34
 8009f9c:	0801b93a 	.word	0x0801b93a
 8009fa0:	20012200 	.word	0x20012200
 8009fa4:	0801b963 	.word	0x0801b963
 8009fa8:	20012208 	.word	0x20012208

08009fac <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>:
 8009fac:	b570      	push	{r4, r5, r6, lr}
 8009fae:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 8009fb0:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8009fb4:	429a      	cmp	r2, r3
 8009fb6:	4604      	mov	r4, r0
 8009fb8:	d021      	beq.n	8009ffe <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x52>
 8009fba:	6803      	ldr	r3, [r0, #0]
 8009fbc:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8009fbe:	4798      	blx	r3
 8009fc0:	6823      	ldr	r3, [r4, #0]
 8009fc2:	4605      	mov	r5, r0
 8009fc4:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 8009fc6:	4620      	mov	r0, r4
 8009fc8:	4798      	blx	r3
 8009fca:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 8009fce:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 8009fd2:	6823      	ldr	r3, [r4, #0]
 8009fd4:	4606      	mov	r6, r0
 8009fd6:	b22d      	sxth	r5, r5
 8009fd8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8009fda:	d109      	bne.n	8009ff0 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x44>
 8009fdc:	4629      	mov	r1, r5
 8009fde:	4620      	mov	r0, r4
 8009fe0:	4798      	blx	r3
 8009fe2:	6823      	ldr	r3, [r4, #0]
 8009fe4:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8009fe6:	4631      	mov	r1, r6
 8009fe8:	4620      	mov	r0, r4
 8009fea:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8009fee:	4718      	bx	r3
 8009ff0:	4601      	mov	r1, r0
 8009ff2:	4620      	mov	r0, r4
 8009ff4:	4798      	blx	r3
 8009ff6:	6823      	ldr	r3, [r4, #0]
 8009ff8:	4629      	mov	r1, r5
 8009ffa:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8009ffc:	e7f4      	b.n	8009fe8 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x3c>
 8009ffe:	bd70      	pop	{r4, r5, r6, pc}

0800a000 <_ZN8touchgfx8TextArea12setTypedTextENS_9TypedTextE>:
 800a000:	888a      	ldrh	r2, [r1, #4]
 800a002:	8582      	strh	r2, [r0, #44]	; 0x2c
 800a004:	f9b0 2008 	ldrsh.w	r2, [r0, #8]
 800a008:	b922      	cbnz	r2, 800a014 <_ZN8touchgfx8TextArea12setTypedTextENS_9TypedTextE+0x14>
 800a00a:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 800a00e:	b90b      	cbnz	r3, 800a014 <_ZN8touchgfx8TextArea12setTypedTextENS_9TypedTextE+0x14>
 800a010:	f7ff bfcc 	b.w	8009fac <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
 800a014:	4770      	bx	lr

0800a016 <_ZNK8touchgfx3Box12getSolidRectEv>:
 800a016:	2300      	movs	r3, #0
 800a018:	8003      	strh	r3, [r0, #0]
 800a01a:	8043      	strh	r3, [r0, #2]
 800a01c:	8083      	strh	r3, [r0, #4]
 800a01e:	80c3      	strh	r3, [r0, #6]
 800a020:	f891 302c 	ldrb.w	r3, [r1, #44]	; 0x2c
 800a024:	b91b      	cbnz	r3, 800a02e <_ZNK8touchgfx3Box12getSolidRectEv+0x18>
 800a026:	f891 3026 	ldrb.w	r3, [r1, #38]	; 0x26
 800a02a:	2bff      	cmp	r3, #255	; 0xff
 800a02c:	d103      	bne.n	800a036 <_ZNK8touchgfx3Box12getSolidRectEv+0x20>
 800a02e:	890b      	ldrh	r3, [r1, #8]
 800a030:	8083      	strh	r3, [r0, #4]
 800a032:	894b      	ldrh	r3, [r1, #10]
 800a034:	80c3      	strh	r3, [r0, #6]
 800a036:	4770      	bx	lr

0800a038 <_ZNK8touchgfx3Box4drawERKNS_4RectE>:
 800a038:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800a03a:	4604      	mov	r4, r0
 800a03c:	6808      	ldr	r0, [r1, #0]
 800a03e:	6849      	ldr	r1, [r1, #4]
 800a040:	466b      	mov	r3, sp
 800a042:	c303      	stmia	r3!, {r0, r1}
 800a044:	6823      	ldr	r3, [r4, #0]
 800a046:	4669      	mov	r1, sp
 800a048:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800a04a:	4620      	mov	r0, r4
 800a04c:	4798      	blx	r3
 800a04e:	4b08      	ldr	r3, [pc, #32]	; (800a070 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x38>)
 800a050:	681b      	ldr	r3, [r3, #0]
 800a052:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 800a056:	b10a      	cbz	r2, 800a05c <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x24>
 800a058:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 800a05a:	b900      	cbnz	r0, 800a05e <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x26>
 800a05c:	6898      	ldr	r0, [r3, #8]
 800a05e:	6803      	ldr	r3, [r0, #0]
 800a060:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 800a062:	699d      	ldr	r5, [r3, #24]
 800a064:	f894 3026 	ldrb.w	r3, [r4, #38]	; 0x26
 800a068:	4669      	mov	r1, sp
 800a06a:	47a8      	blx	r5
 800a06c:	b003      	add	sp, #12
 800a06e:	bd30      	pop	{r4, r5, pc}
 800a070:	2001218c 	.word	0x2001218c

0800a074 <_ZN8touchgfx3BoxD1Ev>:
 800a074:	4770      	bx	lr

0800a076 <_ZN8touchgfx3BoxD0Ev>:
 800a076:	b510      	push	{r4, lr}
 800a078:	2130      	movs	r1, #48	; 0x30
 800a07a:	4604      	mov	r4, r0
 800a07c:	f00e fd8a 	bl	8018b94 <_ZdlPvj>
 800a080:	4620      	mov	r0, r4
 800a082:	bd10      	pop	{r4, pc}

0800a084 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>:
 800a084:	b538      	push	{r3, r4, r5, lr}
 800a086:	880b      	ldrh	r3, [r1, #0]
 800a088:	85c3      	strh	r3, [r0, #46]	; 0x2e
 800a08a:	4605      	mov	r5, r0
 800a08c:	8813      	ldrh	r3, [r2, #0]
 800a08e:	f825 3f30 	strh.w	r3, [r5, #48]!
 800a092:	4604      	mov	r4, r0
 800a094:	4628      	mov	r0, r5
 800a096:	f003 f8db 	bl	800d250 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800a09a:	8120      	strh	r0, [r4, #8]
 800a09c:	4628      	mov	r0, r5
 800a09e:	f003 f911 	bl	800d2c4 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800a0a2:	8160      	strh	r0, [r4, #10]
 800a0a4:	bd38      	pop	{r3, r4, r5, pc}

0800a0a6 <_ZNK8touchgfx6Button12getSolidRectEv>:
 800a0a6:	b510      	push	{r4, lr}
 800a0a8:	f891 3032 	ldrb.w	r3, [r1, #50]	; 0x32
 800a0ac:	2bff      	cmp	r3, #255	; 0xff
 800a0ae:	4604      	mov	r4, r0
 800a0b0:	d006      	beq.n	800a0c0 <_ZNK8touchgfx6Button12getSolidRectEv+0x1a>
 800a0b2:	2300      	movs	r3, #0
 800a0b4:	8003      	strh	r3, [r0, #0]
 800a0b6:	8043      	strh	r3, [r0, #2]
 800a0b8:	8083      	strh	r3, [r0, #4]
 800a0ba:	80c3      	strh	r3, [r0, #6]
 800a0bc:	4620      	mov	r0, r4
 800a0be:	bd10      	pop	{r4, pc}
 800a0c0:	f891 302c 	ldrb.w	r3, [r1, #44]	; 0x2c
 800a0c4:	b11b      	cbz	r3, 800a0ce <_ZNK8touchgfx6Button12getSolidRectEv+0x28>
 800a0c6:	3130      	adds	r1, #48	; 0x30
 800a0c8:	f003 f936 	bl	800d338 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 800a0cc:	e7f6      	b.n	800a0bc <_ZNK8touchgfx6Button12getSolidRectEv+0x16>
 800a0ce:	312e      	adds	r1, #46	; 0x2e
 800a0d0:	e7fa      	b.n	800a0c8 <_ZNK8touchgfx6Button12getSolidRectEv+0x22>
	...

0800a0d4 <_ZNK8touchgfx6Button4drawERKNS_4RectE>:
 800a0d4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800a0d8:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 800a0dc:	b08a      	sub	sp, #40	; 0x28
 800a0de:	4604      	mov	r4, r0
 800a0e0:	4688      	mov	r8, r1
 800a0e2:	2b00      	cmp	r3, #0
 800a0e4:	d044      	beq.n	800a170 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x9c>
 800a0e6:	8e03      	ldrh	r3, [r0, #48]	; 0x30
 800a0e8:	f8ad 3014 	strh.w	r3, [sp, #20]
 800a0ec:	a805      	add	r0, sp, #20
 800a0ee:	f003 f8af 	bl	800d250 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800a0f2:	4605      	mov	r5, r0
 800a0f4:	b206      	sxth	r6, r0
 800a0f6:	a805      	add	r0, sp, #20
 800a0f8:	f003 f8e4 	bl	800d2c4 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800a0fc:	f9b8 2000 	ldrsh.w	r2, [r8]
 800a100:	f8b8 7004 	ldrh.w	r7, [r8, #4]
 800a104:	4417      	add	r7, r2
 800a106:	b2bf      	uxth	r7, r7
 800a108:	2300      	movs	r3, #0
 800a10a:	fa0f fe87 	sxth.w	lr, r7
 800a10e:	459e      	cmp	lr, r3
 800a110:	fa0f fc80 	sxth.w	ip, r0
 800a114:	9306      	str	r3, [sp, #24]
 800a116:	dd2d      	ble.n	800a174 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xa0>
 800a118:	4296      	cmp	r6, r2
 800a11a:	dd2b      	ble.n	800a174 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xa0>
 800a11c:	f9b8 3002 	ldrsh.w	r3, [r8, #2]
 800a120:	f8b8 1006 	ldrh.w	r1, [r8, #6]
 800a124:	4419      	add	r1, r3
 800a126:	b289      	uxth	r1, r1
 800a128:	fa0f f881 	sxth.w	r8, r1
 800a12c:	f1b8 0f00 	cmp.w	r8, #0
 800a130:	dd20      	ble.n	800a174 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xa0>
 800a132:	459c      	cmp	ip, r3
 800a134:	dd1e      	ble.n	800a174 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xa0>
 800a136:	ea22 72e2 	bic.w	r2, r2, r2, asr #31
 800a13a:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 800a13e:	4576      	cmp	r6, lr
 800a140:	bfa8      	it	ge
 800a142:	463d      	movge	r5, r7
 800a144:	45c4      	cmp	ip, r8
 800a146:	bfa8      	it	ge
 800a148:	4608      	movge	r0, r1
 800a14a:	1aad      	subs	r5, r5, r2
 800a14c:	1ac0      	subs	r0, r0, r3
 800a14e:	f8ad 501c 	strh.w	r5, [sp, #28]
 800a152:	f8ad 001e 	strh.w	r0, [sp, #30]
 800a156:	f8ad 2018 	strh.w	r2, [sp, #24]
 800a15a:	f8ad 301a 	strh.w	r3, [sp, #26]
 800a15e:	4b1f      	ldr	r3, [pc, #124]	; (800a1dc <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x108>)
 800a160:	681b      	ldr	r3, [r3, #0]
 800a162:	b953      	cbnz	r3, 800a17a <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xa6>
 800a164:	4b1e      	ldr	r3, [pc, #120]	; (800a1e0 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x10c>)
 800a166:	4a1f      	ldr	r2, [pc, #124]	; (800a1e4 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x110>)
 800a168:	481f      	ldr	r0, [pc, #124]	; (800a1e8 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x114>)
 800a16a:	2189      	movs	r1, #137	; 0x89
 800a16c:	f00e fd3e 	bl	8018bec <__assert_func>
 800a170:	8dc3      	ldrh	r3, [r0, #46]	; 0x2e
 800a172:	e7b9      	b.n	800a0e8 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x14>
 800a174:	2300      	movs	r3, #0
 800a176:	9307      	str	r3, [sp, #28]
 800a178:	e7f1      	b.n	800a15e <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x8a>
 800a17a:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 800a17e:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800a182:	429a      	cmp	r2, r3
 800a184:	d026      	beq.n	800a1d4 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x100>
 800a186:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 800a18a:	2b00      	cmp	r3, #0
 800a18c:	dd22      	ble.n	800a1d4 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x100>
 800a18e:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 800a192:	2b00      	cmp	r3, #0
 800a194:	dd1e      	ble.n	800a1d4 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x100>
 800a196:	2300      	movs	r3, #0
 800a198:	e9cd 3308 	strd	r3, r3, [sp, #32]
 800a19c:	6823      	ldr	r3, [r4, #0]
 800a19e:	a908      	add	r1, sp, #32
 800a1a0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800a1a2:	4620      	mov	r0, r4
 800a1a4:	4798      	blx	r3
 800a1a6:	4b11      	ldr	r3, [pc, #68]	; (800a1ec <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x118>)
 800a1a8:	681b      	ldr	r3, [r3, #0]
 800a1aa:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 800a1ae:	b10a      	cbz	r2, 800a1b4 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe0>
 800a1b0:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 800a1b2:	b900      	cbnz	r0, 800a1b6 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe2>
 800a1b4:	6898      	ldr	r0, [r3, #8]
 800a1b6:	6801      	ldr	r1, [r0, #0]
 800a1b8:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 800a1bc:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 800a1c0:	2501      	movs	r5, #1
 800a1c2:	9502      	str	r5, [sp, #8]
 800a1c4:	f894 4032 	ldrb.w	r4, [r4, #50]	; 0x32
 800a1c8:	9401      	str	r4, [sp, #4]
 800a1ca:	ac06      	add	r4, sp, #24
 800a1cc:	9400      	str	r4, [sp, #0]
 800a1ce:	688c      	ldr	r4, [r1, #8]
 800a1d0:	a905      	add	r1, sp, #20
 800a1d2:	47a0      	blx	r4
 800a1d4:	b00a      	add	sp, #40	; 0x28
 800a1d6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800a1da:	bf00      	nop
 800a1dc:	20012234 	.word	0x20012234
 800a1e0:	0801bacc 	.word	0x0801bacc
 800a1e4:	0801bb2e 	.word	0x0801bb2e
 800a1e8:	0801bb08 	.word	0x0801bb08
 800a1ec:	2001218c 	.word	0x2001218c

0800a1f0 <_ZN8touchgfx5ImageD1Ev>:
 800a1f0:	4770      	bx	lr

0800a1f2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>:
 800a1f2:	b570      	push	{r4, r5, r6, lr}
 800a1f4:	4605      	mov	r5, r0
 800a1f6:	880b      	ldrh	r3, [r1, #0]
 800a1f8:	84c3      	strh	r3, [r0, #38]	; 0x26
 800a1fa:	f855 3b26 	ldr.w	r3, [r5], #38
 800a1fe:	4604      	mov	r4, r0
 800a200:	4628      	mov	r0, r5
 800a202:	6b9e      	ldr	r6, [r3, #56]	; 0x38
 800a204:	f003 f824 	bl	800d250 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800a208:	b201      	sxth	r1, r0
 800a20a:	4620      	mov	r0, r4
 800a20c:	47b0      	blx	r6
 800a20e:	6823      	ldr	r3, [r4, #0]
 800a210:	4628      	mov	r0, r5
 800a212:	6bde      	ldr	r6, [r3, #60]	; 0x3c
 800a214:	f003 f856 	bl	800d2c4 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800a218:	4633      	mov	r3, r6
 800a21a:	b201      	sxth	r1, r0
 800a21c:	4620      	mov	r0, r4
 800a21e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800a222:	4718      	bx	r3

0800a224 <_ZN8touchgfx5ImageD0Ev>:
 800a224:	b510      	push	{r4, lr}
 800a226:	212c      	movs	r1, #44	; 0x2c
 800a228:	4604      	mov	r4, r0
 800a22a:	f00e fcb3 	bl	8018b94 <_ZdlPvj>
 800a22e:	4620      	mov	r0, r4
 800a230:	bd10      	pop	{r4, pc}

0800a232 <_ZNK8touchgfx5Image12getSolidRectEv>:
 800a232:	b510      	push	{r4, lr}
 800a234:	f891 3028 	ldrb.w	r3, [r1, #40]	; 0x28
 800a238:	2bff      	cmp	r3, #255	; 0xff
 800a23a:	4604      	mov	r4, r0
 800a23c:	d006      	beq.n	800a24c <_ZNK8touchgfx5Image12getSolidRectEv+0x1a>
 800a23e:	2300      	movs	r3, #0
 800a240:	8003      	strh	r3, [r0, #0]
 800a242:	8043      	strh	r3, [r0, #2]
 800a244:	8083      	strh	r3, [r0, #4]
 800a246:	80c3      	strh	r3, [r0, #6]
 800a248:	4620      	mov	r0, r4
 800a24a:	bd10      	pop	{r4, pc}
 800a24c:	3126      	adds	r1, #38	; 0x26
 800a24e:	f003 f873 	bl	800d338 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 800a252:	e7f9      	b.n	800a248 <_ZNK8touchgfx5Image12getSolidRectEv+0x16>

0800a254 <_ZNK8touchgfx5Image4drawERKNS_4RectE>:
 800a254:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800a258:	4604      	mov	r4, r0
 800a25a:	b088      	sub	sp, #32
 800a25c:	f854 3b26 	ldr.w	r3, [r4], #38
 800a260:	2500      	movs	r5, #0
 800a262:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800a264:	460f      	mov	r7, r1
 800a266:	e9cd 5504 	strd	r5, r5, [sp, #16]
 800a26a:	a904      	add	r1, sp, #16
 800a26c:	4606      	mov	r6, r0
 800a26e:	4798      	blx	r3
 800a270:	4620      	mov	r0, r4
 800a272:	f002 ffed 	bl	800d250 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800a276:	4680      	mov	r8, r0
 800a278:	4620      	mov	r0, r4
 800a27a:	f003 f823 	bl	800d2c4 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800a27e:	9506      	str	r5, [sp, #24]
 800a280:	ad06      	add	r5, sp, #24
 800a282:	f8ad 001e 	strh.w	r0, [sp, #30]
 800a286:	4639      	mov	r1, r7
 800a288:	4628      	mov	r0, r5
 800a28a:	f8ad 801c 	strh.w	r8, [sp, #28]
 800a28e:	f7fe f9d9 	bl	8008644 <_ZN8touchgfx4RectaNERKS0_>
 800a292:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 800a296:	2b00      	cmp	r3, #0
 800a298:	dd19      	ble.n	800a2ce <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
 800a29a:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 800a29e:	2b00      	cmp	r3, #0
 800a2a0:	dd15      	ble.n	800a2ce <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
 800a2a2:	4b0c      	ldr	r3, [pc, #48]	; (800a2d4 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x80>)
 800a2a4:	681b      	ldr	r3, [r3, #0]
 800a2a6:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 800a2aa:	b10a      	cbz	r2, 800a2b0 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5c>
 800a2ac:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 800a2ae:	b900      	cbnz	r0, 800a2b2 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5e>
 800a2b0:	6898      	ldr	r0, [r3, #8]
 800a2b2:	6801      	ldr	r1, [r0, #0]
 800a2b4:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 800a2b8:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 800a2bc:	2701      	movs	r7, #1
 800a2be:	9702      	str	r7, [sp, #8]
 800a2c0:	f896 6028 	ldrb.w	r6, [r6, #40]	; 0x28
 800a2c4:	e9cd 5600 	strd	r5, r6, [sp]
 800a2c8:	688d      	ldr	r5, [r1, #8]
 800a2ca:	4621      	mov	r1, r4
 800a2cc:	47a8      	blx	r5
 800a2ce:	b008      	add	sp, #32
 800a2d0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800a2d4:	2001218c 	.word	0x2001218c

0800a2d8 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht>:
 800a2d8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800a2dc:	b091      	sub	sp, #68	; 0x44
 800a2de:	4699      	mov	r9, r3
 800a2e0:	f8dd a06c 	ldr.w	sl, [sp, #108]	; 0x6c
 800a2e4:	9c1d      	ldr	r4, [sp, #116]	; 0x74
 800a2e6:	f9ba 300c 	ldrsh.w	r3, [sl, #12]
 800a2ea:	f8ad 303e 	strh.w	r3, [sp, #62]	; 0x3e
 800a2ee:	4680      	mov	r8, r0
 800a2f0:	4617      	mov	r7, r2
 800a2f2:	a80e      	add	r0, sp, #56	; 0x38
 800a2f4:	f9ba 2008 	ldrsh.w	r2, [sl, #8]
 800a2f8:	f8ad 203c 	strh.w	r2, [sp, #60]	; 0x3c
 800a2fc:	2500      	movs	r5, #0
 800a2fe:	910d      	str	r1, [sp, #52]	; 0x34
 800a300:	950e      	str	r5, [sp, #56]	; 0x38
 800a302:	f000 fe3b 	bl	800af7c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 800a306:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 800a308:	f8d9 6000 	ldr.w	r6, [r9]
 800a30c:	6818      	ldr	r0, [r3, #0]
 800a30e:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 800a310:	f9b4 b000 	ldrsh.w	fp, [r4]
 800a314:	f9b3 2000 	ldrsh.w	r2, [r3]
 800a318:	eb02 0c06 	add.w	ip, r2, r6
 800a31c:	1b80      	subs	r0, r0, r6
 800a31e:	ebab 0e0c 	sub.w	lr, fp, ip
 800a322:	4570      	cmp	r0, lr
 800a324:	f340 80bd 	ble.w	800a4a2 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x1ca>
 800a328:	88a1      	ldrh	r1, [r4, #4]
 800a32a:	4459      	add	r1, fp
 800a32c:	b209      	sxth	r1, r1
 800a32e:	458c      	cmp	ip, r1
 800a330:	f300 80b7 	bgt.w	800a4a2 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x1ca>
 800a334:	f8bd 3080 	ldrh.w	r3, [sp, #128]	; 0x80
 800a338:	ed97 4a09 	vldr	s8, [r7, #36]	; 0x24
 800a33c:	edd7 4a0b 	vldr	s9, [r7, #44]	; 0x2c
 800a340:	edd9 6a07 	vldr	s13, [r9, #28]
 800a344:	edd9 1a0a 	vldr	s3, [r9, #40]	; 0x28
 800a348:	ed99 2a0d 	vldr	s4, [r9, #52]	; 0x34
 800a34c:	4283      	cmp	r3, r0
 800a34e:	bfa8      	it	ge
 800a350:	4603      	movge	r3, r0
 800a352:	ee07 3a90 	vmov	s15, r3
 800a356:	eeb8 5ae7 	vcvt.f32.s32	s10, s15
 800a35a:	edd7 7a0d 	vldr	s15, [r7, #52]	; 0x34
 800a35e:	ee25 4a04 	vmul.f32	s8, s10, s8
 800a362:	ee65 4a24 	vmul.f32	s9, s10, s9
 800a366:	ee25 5a27 	vmul.f32	s10, s10, s15
 800a36a:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 800a36e:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 800a372:	45e3      	cmp	fp, ip
 800a374:	ee71 0aa4 	vadd.f32	s1, s3, s9
 800a378:	ee32 1a05 	vadd.f32	s2, s4, s10
 800a37c:	ee36 0a84 	vadd.f32	s0, s13, s8
 800a380:	ee61 1a87 	vmul.f32	s3, s3, s14
 800a384:	ee22 2a07 	vmul.f32	s4, s4, s14
 800a388:	f340 808e 	ble.w	800a4a8 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x1d0>
 800a38c:	fb9e f5f3 	sdiv	r5, lr, r3
 800a390:	ee07 5a10 	vmov	s14, r5
 800a394:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800a398:	2d00      	cmp	r5, #0
 800a39a:	fb03 e415 	mls	r4, r3, r5, lr
 800a39e:	eea7 0a04 	vfma.f32	s0, s14, s8
 800a3a2:	eee7 0a24 	vfma.f32	s1, s14, s9
 800a3a6:	eea7 1a05 	vfma.f32	s2, s14, s10
 800a3aa:	dd13      	ble.n	800a3d4 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xfc>
 800a3ac:	ee70 6a44 	vsub.f32	s13, s0, s8
 800a3b0:	ee70 1ae4 	vsub.f32	s3, s1, s9
 800a3b4:	eef5 6a40 	vcmp.f32	s13, #0.0
 800a3b8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800a3bc:	bf18      	it	ne
 800a3be:	ee87 7aa6 	vdivne.f32	s14, s15, s13
 800a3c2:	ee31 2a45 	vsub.f32	s4, s2, s10
 800a3c6:	bf08      	it	eq
 800a3c8:	eeb0 7a67 	vmoveq.f32	s14, s15
 800a3cc:	ee61 1a87 	vmul.f32	s3, s3, s14
 800a3d0:	ee22 2a07 	vmul.f32	s4, s4, s14
 800a3d4:	fb05 f703 	mul.w	r7, r5, r3
 800a3d8:	1bc0      	subs	r0, r0, r7
 800a3da:	443e      	add	r6, r7
 800a3dc:	1997      	adds	r7, r2, r6
 800a3de:	4407      	add	r7, r0
 800a3e0:	42b9      	cmp	r1, r7
 800a3e2:	bfbc      	itt	lt
 800a3e4:	1a88      	sublt	r0, r1, r2
 800a3e6:	1b80      	sublt	r0, r0, r6
 800a3e8:	2800      	cmp	r0, #0
 800a3ea:	dd5a      	ble.n	800a4a2 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x1ca>
 800a3ec:	fb90 f1f3 	sdiv	r1, r0, r3
 800a3f0:	fb03 0211 	mls	r2, r3, r1, r0
 800a3f4:	b90a      	cbnz	r2, 800a3fa <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x122>
 800a3f6:	3901      	subs	r1, #1
 800a3f8:	461a      	mov	r2, r3
 800a3fa:	eec7 3a80 	vdiv.f32	s7, s15, s0
 800a3fe:	f89d b07c 	ldrb.w	fp, [sp, #124]	; 0x7c
 800a402:	44a4      	add	ip, r4
 800a404:	fb03 c505 	mla	r5, r3, r5, ip
 800a408:	2900      	cmp	r1, #0
 800a40a:	bfcc      	ite	gt
 800a40c:	469e      	movgt	lr, r3
 800a40e:	4696      	movle	lr, r2
 800a410:	eef0 6a42 	vmov.f32	s13, s4
 800a414:	ee60 2aa3 	vmul.f32	s5, s1, s7
 800a418:	ee21 3a23 	vmul.f32	s6, s2, s7
 800a41c:	ee72 7ae1 	vsub.f32	s15, s5, s3
 800a420:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 800a424:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 800a428:	eeb0 7a61 	vmov.f32	s14, s3
 800a42c:	ee17 0a90 	vmov	r0, s15
 800a430:	ee73 7a42 	vsub.f32	s15, s6, s4
 800a434:	fb90 f6f3 	sdiv	r6, r0, r3
 800a438:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 800a43c:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 800a440:	ee17 0a90 	vmov	r0, s15
 800a444:	fb90 f7f3 	sdiv	r7, r0, r3
 800a448:	f8d8 0004 	ldr.w	r0, [r8, #4]
 800a44c:	900c      	str	r0, [sp, #48]	; 0x30
 800a44e:	f8d0 8000 	ldr.w	r8, [r0]
 800a452:	981c      	ldr	r0, [sp, #112]	; 0x70
 800a454:	e9cd ab0a 	strd	sl, fp, [sp, #40]	; 0x28
 800a458:	f9bd a03e 	ldrsh.w	sl, [sp, #62]	; 0x3e
 800a45c:	f8cd a024 	str.w	sl, [sp, #36]	; 0x24
 800a460:	f9bd a03c 	ldrsh.w	sl, [sp, #60]	; 0x3c
 800a464:	f8cd a020 	str.w	sl, [sp, #32]
 800a468:	f9b0 a002 	ldrsh.w	sl, [r0, #2]
 800a46c:	980d      	ldr	r0, [sp, #52]	; 0x34
 800a46e:	f8d9 9014 	ldr.w	r9, [r9, #20]
 800a472:	9603      	str	r6, [sp, #12]
 800a474:	e9cd 7004 	strd	r7, r0, [sp, #16]
 800a478:	ee16 0a90 	vmov	r0, s13
 800a47c:	fb07 0704 	mla	r7, r7, r4, r0
 800a480:	ee17 0a10 	vmov	r0, s14
 800a484:	fb06 0604 	mla	r6, r6, r4, r0
 800a488:	e9cd 3600 	strd	r3, r6, [sp]
 800a48c:	44ca      	add	sl, r9
 800a48e:	f8cd a01c 	str.w	sl, [sp, #28]
 800a492:	9506      	str	r5, [sp, #24]
 800a494:	9702      	str	r7, [sp, #8]
 800a496:	f8d8 5008 	ldr.w	r5, [r8, #8]
 800a49a:	980c      	ldr	r0, [sp, #48]	; 0x30
 800a49c:	ebae 0304 	sub.w	r3, lr, r4
 800a4a0:	47a8      	blx	r5
 800a4a2:	b011      	add	sp, #68	; 0x44
 800a4a4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800a4a8:	462c      	mov	r4, r5
 800a4aa:	e797      	b.n	800a3dc <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x104>

0800a4ac <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE>:
 800a4ac:	b570      	push	{r4, r5, r6, lr}
 800a4ae:	4604      	mov	r4, r0
 800a4b0:	2500      	movs	r5, #0
 800a4b2:	7223      	strb	r3, [r4, #8]
 800a4b4:	9804      	ldr	r0, [sp, #16]
 800a4b6:	f89d 3014 	ldrb.w	r3, [sp, #20]
 800a4ba:	8025      	strh	r5, [r4, #0]
 800a4bc:	6061      	str	r1, [r4, #4]
 800a4be:	7263      	strb	r3, [r4, #9]
 800a4c0:	60e0      	str	r0, [r4, #12]
 800a4c2:	8222      	strh	r2, [r4, #16]
 800a4c4:	8265      	strh	r5, [r4, #18]
 800a4c6:	82a5      	strh	r5, [r4, #20]
 800a4c8:	82e5      	strh	r5, [r4, #22]
 800a4ca:	8325      	strh	r5, [r4, #24]
 800a4cc:	8365      	strh	r5, [r4, #26]
 800a4ce:	83a5      	strh	r5, [r4, #28]
 800a4d0:	77a5      	strb	r5, [r4, #30]
 800a4d2:	6803      	ldr	r3, [r0, #0]
 800a4d4:	695b      	ldr	r3, [r3, #20]
 800a4d6:	4798      	blx	r3
 800a4d8:	4606      	mov	r6, r0
 800a4da:	b1f8      	cbz	r0, 800a51c <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE+0x70>
 800a4dc:	68e0      	ldr	r0, [r4, #12]
 800a4de:	6803      	ldr	r3, [r0, #0]
 800a4e0:	4631      	mov	r1, r6
 800a4e2:	68db      	ldr	r3, [r3, #12]
 800a4e4:	4798      	blx	r3
 800a4e6:	7b43      	ldrb	r3, [r0, #13]
 800a4e8:	7a82      	ldrb	r2, [r0, #10]
 800a4ea:	005b      	lsls	r3, r3, #1
 800a4ec:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800a4f0:	4313      	orrs	r3, r2
 800a4f2:	83a3      	strh	r3, [r4, #28]
 800a4f4:	7a63      	ldrb	r3, [r4, #9]
 800a4f6:	2b04      	cmp	r3, #4
 800a4f8:	4605      	mov	r5, r0
 800a4fa:	d10f      	bne.n	800a51c <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE+0x70>
 800a4fc:	68e0      	ldr	r0, [r4, #12]
 800a4fe:	6803      	ldr	r3, [r0, #0]
 800a500:	462a      	mov	r2, r5
 800a502:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800a504:	4631      	mov	r1, r6
 800a506:	4798      	blx	r3
 800a508:	7b6b      	ldrb	r3, [r5, #13]
 800a50a:	005b      	lsls	r3, r3, #1
 800a50c:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800a510:	7aab      	ldrb	r3, [r5, #10]
 800a512:	4313      	orrs	r3, r2
 800a514:	4418      	add	r0, r3
 800a516:	8ba3      	ldrh	r3, [r4, #28]
 800a518:	4418      	add	r0, r3
 800a51a:	83a0      	strh	r0, [r4, #28]
 800a51c:	4620      	mov	r0, r4
 800a51e:	bd70      	pop	{r4, r5, r6, pc}

0800a520 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>:
 800a520:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800a524:	2400      	movs	r4, #0
 800a526:	b085      	sub	sp, #20
 800a528:	4681      	mov	r9, r0
 800a52a:	4688      	mov	r8, r1
 800a52c:	4692      	mov	sl, r2
 800a52e:	469b      	mov	fp, r3
 800a530:	4627      	mov	r7, r4
 800a532:	4625      	mov	r5, r4
 800a534:	4626      	mov	r6, r4
 800a536:	4554      	cmp	r4, sl
 800a538:	da2a      	bge.n	800a590 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 800a53a:	2300      	movs	r3, #0
 800a53c:	9303      	str	r3, [sp, #12]
 800a53e:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 800a542:	429d      	cmp	r5, r3
 800a544:	d004      	beq.n	800a550 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x30>
 800a546:	f242 030b 	movw	r3, #8203	; 0x200b
 800a54a:	429d      	cmp	r5, r3
 800a54c:	bf18      	it	ne
 800a54e:	462f      	movne	r7, r5
 800a550:	ab03      	add	r3, sp, #12
 800a552:	4642      	mov	r2, r8
 800a554:	4659      	mov	r1, fp
 800a556:	4648      	mov	r0, r9
 800a558:	f002 fb6e 	bl	800cc38 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800a55c:	4605      	mov	r5, r0
 800a55e:	b1b8      	cbz	r0, 800a590 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 800a560:	280a      	cmp	r0, #10
 800a562:	d015      	beq.n	800a590 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 800a564:	9a03      	ldr	r2, [sp, #12]
 800a566:	b18a      	cbz	r2, 800a58c <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x6c>
 800a568:	7b50      	ldrb	r0, [r2, #13]
 800a56a:	7a93      	ldrb	r3, [r2, #10]
 800a56c:	8895      	ldrh	r5, [r2, #4]
 800a56e:	0040      	lsls	r0, r0, #1
 800a570:	f400 7080 	and.w	r0, r0, #256	; 0x100
 800a574:	4303      	orrs	r3, r0
 800a576:	9301      	str	r3, [sp, #4]
 800a578:	f8d8 3000 	ldr.w	r3, [r8]
 800a57c:	4639      	mov	r1, r7
 800a57e:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800a580:	4640      	mov	r0, r8
 800a582:	4798      	blx	r3
 800a584:	9b01      	ldr	r3, [sp, #4]
 800a586:	4418      	add	r0, r3
 800a588:	4406      	add	r6, r0
 800a58a:	b2b6      	uxth	r6, r6
 800a58c:	3401      	adds	r4, #1
 800a58e:	e7d2      	b.n	800a536 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x16>
 800a590:	4630      	mov	r0, r6
 800a592:	b005      	add	sp, #20
 800a594:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800a598 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>:
 800a598:	2a02      	cmp	r2, #2
 800a59a:	b530      	push	{r4, r5, lr}
 800a59c:	d011      	beq.n	800a5c2 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x2a>
 800a59e:	2a03      	cmp	r2, #3
 800a5a0:	d01c      	beq.n	800a5dc <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x44>
 800a5a2:	2a01      	cmp	r2, #1
 800a5a4:	d10c      	bne.n	800a5c0 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 800a5a6:	888b      	ldrh	r3, [r1, #4]
 800a5a8:	f9b0 2004 	ldrsh.w	r2, [r0, #4]
 800a5ac:	8801      	ldrh	r1, [r0, #0]
 800a5ae:	8844      	ldrh	r4, [r0, #2]
 800a5b0:	8004      	strh	r4, [r0, #0]
 800a5b2:	1a9b      	subs	r3, r3, r2
 800a5b4:	1a5b      	subs	r3, r3, r1
 800a5b6:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 800a5ba:	8043      	strh	r3, [r0, #2]
 800a5bc:	8081      	strh	r1, [r0, #4]
 800a5be:	80c2      	strh	r2, [r0, #6]
 800a5c0:	bd30      	pop	{r4, r5, pc}
 800a5c2:	88cb      	ldrh	r3, [r1, #6]
 800a5c4:	88c2      	ldrh	r2, [r0, #6]
 800a5c6:	1a9b      	subs	r3, r3, r2
 800a5c8:	8842      	ldrh	r2, [r0, #2]
 800a5ca:	1a9b      	subs	r3, r3, r2
 800a5cc:	888a      	ldrh	r2, [r1, #4]
 800a5ce:	8881      	ldrh	r1, [r0, #4]
 800a5d0:	8043      	strh	r3, [r0, #2]
 800a5d2:	1a52      	subs	r2, r2, r1
 800a5d4:	8801      	ldrh	r1, [r0, #0]
 800a5d6:	1a52      	subs	r2, r2, r1
 800a5d8:	8002      	strh	r2, [r0, #0]
 800a5da:	e7f1      	b.n	800a5c0 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 800a5dc:	88cb      	ldrh	r3, [r1, #6]
 800a5de:	f9b0 2006 	ldrsh.w	r2, [r0, #6]
 800a5e2:	8841      	ldrh	r1, [r0, #2]
 800a5e4:	f9b0 5000 	ldrsh.w	r5, [r0]
 800a5e8:	f9b0 4004 	ldrsh.w	r4, [r0, #4]
 800a5ec:	8045      	strh	r5, [r0, #2]
 800a5ee:	1a9b      	subs	r3, r3, r2
 800a5f0:	1a5b      	subs	r3, r3, r1
 800a5f2:	8003      	strh	r3, [r0, #0]
 800a5f4:	8082      	strh	r2, [r0, #4]
 800a5f6:	80c4      	strh	r4, [r0, #6]
 800a5f8:	e7e2      	b.n	800a5c0 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>

0800a5fa <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>:
 800a5fa:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800a5fe:	b09f      	sub	sp, #124	; 0x7c
 800a600:	9116      	str	r1, [sp, #88]	; 0x58
 800a602:	9317      	str	r3, [sp, #92]	; 0x5c
 800a604:	9929      	ldr	r1, [sp, #164]	; 0xa4
 800a606:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 800a608:	8809      	ldrh	r1, [r1, #0]
 800a60a:	889b      	ldrh	r3, [r3, #4]
 800a60c:	f8dd 80a8 	ldr.w	r8, [sp, #168]	; 0xa8
 800a610:	9212      	str	r2, [sp, #72]	; 0x48
 800a612:	440b      	add	r3, r1
 800a614:	b21b      	sxth	r3, r3
 800a616:	9310      	str	r3, [sp, #64]	; 0x40
 800a618:	f8d8 3000 	ldr.w	r3, [r8]
 800a61c:	f89d 20b8 	ldrb.w	r2, [sp, #184]	; 0xb8
 800a620:	7a59      	ldrb	r1, [r3, #9]
 800a622:	7a1b      	ldrb	r3, [r3, #8]
 800a624:	9315      	str	r3, [sp, #84]	; 0x54
 800a626:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 800a628:	9011      	str	r0, [sp, #68]	; 0x44
 800a62a:	f89d b0ac 	ldrb.w	fp, [sp, #172]	; 0xac
 800a62e:	9114      	str	r1, [sp, #80]	; 0x50
 800a630:	f9b3 5000 	ldrsh.w	r5, [r3]
 800a634:	2a00      	cmp	r2, #0
 800a636:	d067      	beq.n	800a708 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x10e>
 800a638:	f898 3010 	ldrb.w	r3, [r8, #16]
 800a63c:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 800a63e:	2b04      	cmp	r3, #4
 800a640:	bf14      	ite	ne
 800a642:	2301      	movne	r3, #1
 800a644:	2302      	moveq	r3, #2
 800a646:	4413      	add	r3, r2
 800a648:	f04f 0900 	mov.w	r9, #0
 800a64c:	930f      	str	r3, [sp, #60]	; 0x3c
 800a64e:	f8cd 9038 	str.w	r9, [sp, #56]	; 0x38
 800a652:	464c      	mov	r4, r9
 800a654:	f8cd 9034 	str.w	r9, [sp, #52]	; 0x34
 800a658:	e9dd 320e 	ldrd	r3, r2, [sp, #56]	; 0x38
 800a65c:	4293      	cmp	r3, r2
 800a65e:	f280 808c 	bge.w	800a77a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x180>
 800a662:	2300      	movs	r3, #0
 800a664:	931c      	str	r3, [sp, #112]	; 0x70
 800a666:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 800a66a:	429c      	cmp	r4, r3
 800a66c:	d006      	beq.n	800a67c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x82>
 800a66e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800a670:	f242 020b 	movw	r2, #8203	; 0x200b
 800a674:	4294      	cmp	r4, r2
 800a676:	bf18      	it	ne
 800a678:	4623      	movne	r3, r4
 800a67a:	930d      	str	r3, [sp, #52]	; 0x34
 800a67c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800a67e:	992d      	ldr	r1, [sp, #180]	; 0xb4
 800a680:	f8d8 2000 	ldr.w	r2, [r8]
 800a684:	428b      	cmp	r3, r1
 800a686:	db41      	blt.n	800a70c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x112>
 800a688:	6813      	ldr	r3, [r2, #0]
 800a68a:	4610      	mov	r0, r2
 800a68c:	695b      	ldr	r3, [r3, #20]
 800a68e:	4798      	blx	r3
 800a690:	4604      	mov	r4, r0
 800a692:	f8d8 0000 	ldr.w	r0, [r8]
 800a696:	6803      	ldr	r3, [r0, #0]
 800a698:	aa1d      	add	r2, sp, #116	; 0x74
 800a69a:	689e      	ldr	r6, [r3, #8]
 800a69c:	4621      	mov	r1, r4
 800a69e:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
 800a6a2:	47b0      	blx	r6
 800a6a4:	901c      	str	r0, [sp, #112]	; 0x70
 800a6a6:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 800a6aa:	429c      	cmp	r4, r3
 800a6ac:	f000 80e9 	beq.w	800a882 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x288>
 800a6b0:	f242 030b 	movw	r3, #8203	; 0x200b
 800a6b4:	429c      	cmp	r4, r3
 800a6b6:	f000 80e4 	beq.w	800a882 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x288>
 800a6ba:	2c00      	cmp	r4, #0
 800a6bc:	f000 80f6 	beq.w	800a8ac <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2b2>
 800a6c0:	2c0a      	cmp	r4, #10
 800a6c2:	d060      	beq.n	800a786 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18c>
 800a6c4:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 800a6c6:	b36a      	cbz	r2, 800a724 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x12a>
 800a6c8:	8894      	ldrh	r4, [r2, #4]
 800a6ca:	f1bb 0f00 	cmp.w	fp, #0
 800a6ce:	d03b      	beq.n	800a748 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x14e>
 800a6d0:	f892 900d 	ldrb.w	r9, [r2, #13]
 800a6d4:	ea4f 0949 	mov.w	r9, r9, lsl #1
 800a6d8:	f409 7380 	and.w	r3, r9, #256	; 0x100
 800a6dc:	f892 900a 	ldrb.w	r9, [r2, #10]
 800a6e0:	f1bb 0f01 	cmp.w	fp, #1
 800a6e4:	ea49 0903 	orr.w	r9, r9, r3
 800a6e8:	d134      	bne.n	800a754 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x15a>
 800a6ea:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800a6ec:	eba5 0509 	sub.w	r5, r5, r9
 800a6f0:	2b00      	cmp	r3, #0
 800a6f2:	d14f      	bne.n	800a794 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19a>
 800a6f4:	9a14      	ldr	r2, [sp, #80]	; 0x50
 800a6f6:	eb09 0305 	add.w	r3, r9, r5
 800a6fa:	4413      	add	r3, r2
 800a6fc:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 800a6fe:	f9b2 2000 	ldrsh.w	r2, [r2]
 800a702:	4293      	cmp	r3, r2
 800a704:	da51      	bge.n	800a7aa <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b0>
 800a706:	e038      	b.n	800a77a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x180>
 800a708:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 800a70a:	e79d      	b.n	800a648 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x4e>
 800a70c:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
 800a710:	9301      	str	r3, [sp, #4]
 800a712:	ab1d      	add	r3, sp, #116	; 0x74
 800a714:	9300      	str	r3, [sp, #0]
 800a716:	4659      	mov	r1, fp
 800a718:	ab1c      	add	r3, sp, #112	; 0x70
 800a71a:	982c      	ldr	r0, [sp, #176]	; 0xb0
 800a71c:	f002 fae4 	bl	800cce8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>
 800a720:	4604      	mov	r4, r0
 800a722:	e7c0      	b.n	800a6a6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xac>
 800a724:	f8d8 0000 	ldr.w	r0, [r8]
 800a728:	6803      	ldr	r3, [r0, #0]
 800a72a:	691b      	ldr	r3, [r3, #16]
 800a72c:	4798      	blx	r3
 800a72e:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 800a732:	4298      	cmp	r0, r3
 800a734:	f000 80a5 	beq.w	800a882 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x288>
 800a738:	f242 030b 	movw	r3, #8203	; 0x200b
 800a73c:	4298      	cmp	r0, r3
 800a73e:	f000 80a0 	beq.w	800a882 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x288>
 800a742:	f1bb 0f00 	cmp.w	fp, #0
 800a746:	d100      	bne.n	800a74a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x150>
 800a748:	444d      	add	r5, r9
 800a74a:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 800a74c:	2a00      	cmp	r2, #0
 800a74e:	d1bf      	bne.n	800a6d0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xd6>
 800a750:	4691      	mov	r9, r2
 800a752:	e096      	b.n	800a882 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x288>
 800a754:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800a756:	2b00      	cmp	r3, #0
 800a758:	f000 80aa 	beq.w	800a8b0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2b6>
 800a75c:	f1bb 0f00 	cmp.w	fp, #0
 800a760:	d118      	bne.n	800a794 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19a>
 800a762:	f8d8 0000 	ldr.w	r0, [r8]
 800a766:	990d      	ldr	r1, [sp, #52]	; 0x34
 800a768:	6803      	ldr	r3, [r0, #0]
 800a76a:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800a76c:	4798      	blx	r3
 800a76e:	4405      	add	r5, r0
 800a770:	9b15      	ldr	r3, [sp, #84]	; 0x54
 800a772:	9a10      	ldr	r2, [sp, #64]	; 0x40
 800a774:	1aeb      	subs	r3, r5, r3
 800a776:	4293      	cmp	r3, r2
 800a778:	dd17      	ble.n	800a7aa <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b0>
 800a77a:	2c00      	cmp	r4, #0
 800a77c:	f000 8096 	beq.w	800a8ac <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2b2>
 800a780:	2c0a      	cmp	r4, #10
 800a782:	f040 8084 	bne.w	800a88e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x294>
 800a786:	240a      	movs	r4, #10
 800a788:	fab4 f084 	clz	r0, r4
 800a78c:	0940      	lsrs	r0, r0, #5
 800a78e:	b01f      	add	sp, #124	; 0x7c
 800a790:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800a794:	f8d8 0000 	ldr.w	r0, [r8]
 800a798:	990d      	ldr	r1, [sp, #52]	; 0x34
 800a79a:	6803      	ldr	r3, [r0, #0]
 800a79c:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800a79e:	4798      	blx	r3
 800a7a0:	f1bb 0f01 	cmp.w	fp, #1
 800a7a4:	eba5 0500 	sub.w	r5, r5, r0
 800a7a8:	d0a4      	beq.n	800a6f4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xfa>
 800a7aa:	981c      	ldr	r0, [sp, #112]	; 0x70
 800a7ac:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 800a7ae:	f990 1009 	ldrsb.w	r1, [r0, #9]
 800a7b2:	f9b3 6000 	ldrsh.w	r6, [r3]
 800a7b6:	7b43      	ldrb	r3, [r0, #13]
 800a7b8:	015b      	lsls	r3, r3, #5
 800a7ba:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800a7be:	7983      	ldrb	r3, [r0, #6]
 800a7c0:	4429      	add	r1, r5
 800a7c2:	4313      	orrs	r3, r2
 800a7c4:	440b      	add	r3, r1
 800a7c6:	42b3      	cmp	r3, r6
 800a7c8:	db5b      	blt.n	800a882 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x288>
 800a7ca:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800a7cc:	4299      	cmp	r1, r3
 800a7ce:	da58      	bge.n	800a882 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x288>
 800a7d0:	f8d8 0000 	ldr.w	r0, [r8]
 800a7d4:	6803      	ldr	r3, [r0, #0]
 800a7d6:	42ae      	cmp	r6, r5
 800a7d8:	bfc8      	it	gt
 800a7da:	1b76      	subgt	r6, r6, r5
 800a7dc:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a7de:	bfcc      	ite	gt
 800a7e0:	b2b6      	uxthgt	r6, r6
 800a7e2:	2600      	movle	r6, #0
 800a7e4:	4798      	blx	r3
 800a7e6:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 800a7e8:	7b5a      	ldrb	r2, [r3, #13]
 800a7ea:	00d1      	lsls	r1, r2, #3
 800a7ec:	f401 7780 	and.w	r7, r1, #256	; 0x100
 800a7f0:	7a19      	ldrb	r1, [r3, #8]
 800a7f2:	4339      	orrs	r1, r7
 800a7f4:	0657      	lsls	r7, r2, #25
 800a7f6:	9f17      	ldr	r7, [sp, #92]	; 0x5c
 800a7f8:	bf44      	itt	mi
 800a7fa:	f5a1 7100 	submi.w	r1, r1, #512	; 0x200
 800a7fe:	b209      	sxthmi	r1, r1
 800a800:	19c7      	adds	r7, r0, r7
 800a802:	1a7f      	subs	r7, r7, r1
 800a804:	9929      	ldr	r1, [sp, #164]	; 0xa4
 800a806:	b2bf      	uxth	r7, r7
 800a808:	f9b1 1002 	ldrsh.w	r1, [r1, #2]
 800a80c:	fa0f fa87 	sxth.w	sl, r7
 800a810:	4551      	cmp	r1, sl
 800a812:	dd3a      	ble.n	800a88a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 800a814:	0112      	lsls	r2, r2, #4
 800a816:	79d8      	ldrb	r0, [r3, #7]
 800a818:	f402 7280 	and.w	r2, r2, #256	; 0x100
 800a81c:	4302      	orrs	r2, r0
 800a81e:	4492      	add	sl, r2
 800a820:	4551      	cmp	r1, sl
 800a822:	dc2e      	bgt.n	800a882 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x288>
 800a824:	1bcf      	subs	r7, r1, r7
 800a826:	b2bf      	uxth	r7, r7
 800a828:	468a      	mov	sl, r1
 800a82a:	9319      	str	r3, [sp, #100]	; 0x64
 800a82c:	9b11      	ldr	r3, [sp, #68]	; 0x44
 800a82e:	f8d8 0000 	ldr.w	r0, [r8]
 800a832:	681a      	ldr	r2, [r3, #0]
 800a834:	6801      	ldr	r1, [r0, #0]
 800a836:	6c13      	ldr	r3, [r2, #64]	; 0x40
 800a838:	9a1d      	ldr	r2, [sp, #116]	; 0x74
 800a83a:	9313      	str	r3, [sp, #76]	; 0x4c
 800a83c:	9218      	str	r2, [sp, #96]	; 0x60
 800a83e:	6b89      	ldr	r1, [r1, #56]	; 0x38
 800a840:	4788      	blx	r1
 800a842:	f898 1006 	ldrb.w	r1, [r8, #6]
 800a846:	910b      	str	r1, [sp, #44]	; 0x2c
 800a848:	f898 100e 	ldrb.w	r1, [r8, #14]
 800a84c:	910a      	str	r1, [sp, #40]	; 0x28
 800a84e:	f89d 106f 	ldrb.w	r1, [sp, #111]	; 0x6f
 800a852:	9109      	str	r1, [sp, #36]	; 0x24
 800a854:	9b19      	ldr	r3, [sp, #100]	; 0x64
 800a856:	f8d8 1008 	ldr.w	r1, [r8, #8]
 800a85a:	9305      	str	r3, [sp, #20]
 800a85c:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 800a85e:	9a18      	ldr	r2, [sp, #96]	; 0x60
 800a860:	9206      	str	r2, [sp, #24]
 800a862:	e9cd 0107 	strd	r0, r1, [sp, #28]
 800a866:	e9cd 7303 	strd	r7, r3, [sp, #12]
 800a86a:	e9cd a601 	strd	sl, r6, [sp, #4]
 800a86e:	442e      	add	r6, r5
 800a870:	b236      	sxth	r6, r6
 800a872:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800a874:	9600      	str	r6, [sp, #0]
 800a876:	681a      	ldr	r2, [r3, #0]
 800a878:	9916      	ldr	r1, [sp, #88]	; 0x58
 800a87a:	685b      	ldr	r3, [r3, #4]
 800a87c:	9811      	ldr	r0, [sp, #68]	; 0x44
 800a87e:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 800a880:	47b0      	blx	r6
 800a882:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800a884:	3301      	adds	r3, #1
 800a886:	930e      	str	r3, [sp, #56]	; 0x38
 800a888:	e6e6      	b.n	800a658 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x5e>
 800a88a:	2700      	movs	r7, #0
 800a88c:	e7cd      	b.n	800a82a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x230>
 800a88e:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 800a890:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 800a892:	3501      	adds	r5, #1
 800a894:	429d      	cmp	r5, r3
 800a896:	f6bf af77 	bge.w	800a788 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18e>
 800a89a:	4659      	mov	r1, fp
 800a89c:	982c      	ldr	r0, [sp, #176]	; 0xb0
 800a89e:	f7f7 ff63 	bl	8002768 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 800a8a2:	4604      	mov	r4, r0
 800a8a4:	b110      	cbz	r0, 800a8ac <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2b2>
 800a8a6:	280a      	cmp	r0, #10
 800a8a8:	d1f2      	bne.n	800a890 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x296>
 800a8aa:	e76c      	b.n	800a786 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18c>
 800a8ac:	2400      	movs	r4, #0
 800a8ae:	e76b      	b.n	800a788 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18e>
 800a8b0:	f1bb 0f00 	cmp.w	fp, #0
 800a8b4:	f43f af5c 	beq.w	800a770 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x176>
 800a8b8:	e777      	b.n	800a7aa <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b0>

0800a8ba <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>:
 800a8ba:	b530      	push	{r4, r5, lr}
 800a8bc:	8a44      	ldrh	r4, [r0, #18]
 800a8be:	8ac5      	ldrh	r5, [r0, #22]
 800a8c0:	82c3      	strh	r3, [r0, #22]
 800a8c2:	442c      	add	r4, r5
 800a8c4:	1ae4      	subs	r4, r4, r3
 800a8c6:	8244      	strh	r4, [r0, #18]
 800a8c8:	8b03      	ldrh	r3, [r0, #24]
 800a8ca:	8a84      	ldrh	r4, [r0, #20]
 800a8cc:	4422      	add	r2, r4
 800a8ce:	440c      	add	r4, r1
 800a8d0:	1a59      	subs	r1, r3, r1
 800a8d2:	8342      	strh	r2, [r0, #26]
 800a8d4:	8284      	strh	r4, [r0, #20]
 800a8d6:	8301      	strh	r1, [r0, #24]
 800a8d8:	bd30      	pop	{r4, r5, pc}

0800a8da <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb>:
 800a8da:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800a8de:	7a43      	ldrb	r3, [r0, #9]
 800a8e0:	1eda      	subs	r2, r3, #3
 800a8e2:	b087      	sub	sp, #28
 800a8e4:	4604      	mov	r4, r0
 800a8e6:	b2d2      	uxtb	r2, r2
 800a8e8:	460f      	mov	r7, r1
 800a8ea:	2900      	cmp	r1, #0
 800a8ec:	d036      	beq.n	800a95c <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x82>
 800a8ee:	2a01      	cmp	r2, #1
 800a8f0:	d932      	bls.n	800a958 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x7e>
 800a8f2:	1e58      	subs	r0, r3, #1
 800a8f4:	f1d0 0b00 	rsbs	fp, r0, #0
 800a8f8:	eb4b 0b00 	adc.w	fp, fp, r0
 800a8fc:	1e99      	subs	r1, r3, #2
 800a8fe:	424b      	negs	r3, r1
 800a900:	414b      	adcs	r3, r1
 800a902:	9303      	str	r3, [sp, #12]
 800a904:	2300      	movs	r3, #0
 800a906:	e9cd 3301 	strd	r3, r3, [sp, #4]
 800a90a:	2500      	movs	r5, #0
 800a90c:	8265      	strh	r5, [r4, #18]
 800a90e:	82a5      	strh	r5, [r4, #20]
 800a910:	46a9      	mov	r9, r5
 800a912:	f242 0a0b 	movw	sl, #8203	; 0x200b
 800a916:	2300      	movs	r3, #0
 800a918:	9305      	str	r3, [sp, #20]
 800a91a:	8823      	ldrh	r3, [r4, #0]
 800a91c:	2b20      	cmp	r3, #32
 800a91e:	d02b      	beq.n	800a978 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x9e>
 800a920:	eba3 020a 	sub.w	r2, r3, sl
 800a924:	4256      	negs	r6, r2
 800a926:	4156      	adcs	r6, r2
 800a928:	f64f 62ff 	movw	r2, #65279	; 0xfeff
 800a92c:	4293      	cmp	r3, r2
 800a92e:	d004      	beq.n	800a93a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x60>
 800a930:	4553      	cmp	r3, sl
 800a932:	bf16      	itet	ne
 800a934:	4699      	movne	r9, r3
 800a936:	2601      	moveq	r6, #1
 800a938:	2600      	movne	r6, #0
 800a93a:	ab05      	add	r3, sp, #20
 800a93c:	68e2      	ldr	r2, [r4, #12]
 800a93e:	7a21      	ldrb	r1, [r4, #8]
 800a940:	6860      	ldr	r0, [r4, #4]
 800a942:	f002 f979 	bl	800cc38 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800a946:	8020      	strh	r0, [r4, #0]
 800a948:	b9c8      	cbnz	r0, 800a97e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xa4>
 800a94a:	8b22      	ldrh	r2, [r4, #24]
 800a94c:	2300      	movs	r3, #0
 800a94e:	4611      	mov	r1, r2
 800a950:	4620      	mov	r0, r4
 800a952:	f7ff ffb2 	bl	800a8ba <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 800a956:	e066      	b.n	800aa26 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x14c>
 800a958:	468b      	mov	fp, r1
 800a95a:	e7cf      	b.n	800a8fc <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x22>
 800a95c:	3b01      	subs	r3, #1
 800a95e:	2a01      	cmp	r2, #1
 800a960:	bf8c      	ite	hi
 800a962:	2200      	movhi	r2, #0
 800a964:	2201      	movls	r2, #1
 800a966:	2b01      	cmp	r3, #1
 800a968:	bf8c      	ite	hi
 800a96a:	2300      	movhi	r3, #0
 800a96c:	2301      	movls	r3, #1
 800a96e:	9202      	str	r2, [sp, #8]
 800a970:	9301      	str	r3, [sp, #4]
 800a972:	9103      	str	r1, [sp, #12]
 800a974:	468b      	mov	fp, r1
 800a976:	e7c8      	b.n	800a90a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x30>
 800a978:	4699      	mov	r9, r3
 800a97a:	2601      	movs	r6, #1
 800a97c:	e7dd      	b.n	800a93a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x60>
 800a97e:	8ae3      	ldrh	r3, [r4, #22]
 800a980:	280a      	cmp	r0, #10
 800a982:	f103 0301 	add.w	r3, r3, #1
 800a986:	82e3      	strh	r3, [r4, #22]
 800a988:	d0df      	beq.n	800a94a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x70>
 800a98a:	9a05      	ldr	r2, [sp, #20]
 800a98c:	bb42      	cbnz	r2, 800a9e0 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x106>
 800a98e:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 800a992:	4298      	cmp	r0, r3
 800a994:	d001      	beq.n	800a99a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xc0>
 800a996:	4550      	cmp	r0, sl
 800a998:	d1bd      	bne.n	800a916 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800a99a:	8823      	ldrh	r3, [r4, #0]
 800a99c:	8b21      	ldrh	r1, [r4, #24]
 800a99e:	2b20      	cmp	r3, #32
 800a9a0:	d001      	beq.n	800a9a6 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xcc>
 800a9a2:	4553      	cmp	r3, sl
 800a9a4:	d131      	bne.n	800aa0a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x130>
 800a9a6:	2e00      	cmp	r6, #0
 800a9a8:	bf0a      	itet	eq
 800a9aa:	460d      	moveq	r5, r1
 800a9ac:	4630      	movne	r0, r6
 800a9ae:	2001      	moveq	r0, #1
 800a9b0:	440a      	add	r2, r1
 800a9b2:	8aa3      	ldrh	r3, [r4, #20]
 800a9b4:	f8b4 c010 	ldrh.w	ip, [r4, #16]
 800a9b8:	b292      	uxth	r2, r2
 800a9ba:	8322      	strh	r2, [r4, #24]
 800a9bc:	4413      	add	r3, r2
 800a9be:	2f00      	cmp	r7, #0
 800a9c0:	d03a      	beq.n	800aa38 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x15e>
 800a9c2:	f1bb 0f00 	cmp.w	fp, #0
 800a9c6:	d102      	bne.n	800a9ce <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xf4>
 800a9c8:	9903      	ldr	r1, [sp, #12]
 800a9ca:	b301      	cbz	r1, 800aa0e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x134>
 800a9cc:	b1f8      	cbz	r0, 800aa0e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x134>
 800a9ce:	8ba1      	ldrh	r1, [r4, #28]
 800a9d0:	4419      	add	r1, r3
 800a9d2:	458c      	cmp	ip, r1
 800a9d4:	da2a      	bge.n	800aa2c <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x152>
 800a9d6:	8a61      	ldrh	r1, [r4, #18]
 800a9d8:	b341      	cbz	r1, 800aa2c <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x152>
 800a9da:	4563      	cmp	r3, ip
 800a9dc:	dd9b      	ble.n	800a916 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800a9de:	e01c      	b.n	800aa1a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x140>
 800a9e0:	8893      	ldrh	r3, [r2, #4]
 800a9e2:	8023      	strh	r3, [r4, #0]
 800a9e4:	f892 800d 	ldrb.w	r8, [r2, #13]
 800a9e8:	ea4f 0848 	mov.w	r8, r8, lsl #1
 800a9ec:	f408 7080 	and.w	r0, r8, #256	; 0x100
 800a9f0:	f892 800a 	ldrb.w	r8, [r2, #10]
 800a9f4:	ea48 0800 	orr.w	r8, r8, r0
 800a9f8:	68e0      	ldr	r0, [r4, #12]
 800a9fa:	6803      	ldr	r3, [r0, #0]
 800a9fc:	4649      	mov	r1, r9
 800a9fe:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800aa00:	4798      	blx	r3
 800aa02:	eb08 0200 	add.w	r2, r8, r0
 800aa06:	b292      	uxth	r2, r2
 800aa08:	e7c7      	b.n	800a99a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xc0>
 800aa0a:	2000      	movs	r0, #0
 800aa0c:	e7d0      	b.n	800a9b0 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xd6>
 800aa0e:	4563      	cmp	r3, ip
 800aa10:	dd81      	ble.n	800a916 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800aa12:	8a63      	ldrh	r3, [r4, #18]
 800aa14:	2b00      	cmp	r3, #0
 800aa16:	f43f af7e 	beq.w	800a916 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800aa1a:	2301      	movs	r3, #1
 800aa1c:	77a3      	strb	r3, [r4, #30]
 800aa1e:	8ba2      	ldrh	r2, [r4, #28]
 800aa20:	8b63      	ldrh	r3, [r4, #26]
 800aa22:	4413      	add	r3, r2
 800aa24:	8363      	strh	r3, [r4, #26]
 800aa26:	b007      	add	sp, #28
 800aa28:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800aa2c:	2300      	movs	r3, #0
 800aa2e:	4611      	mov	r1, r2
 800aa30:	4620      	mov	r0, r4
 800aa32:	f7ff ff42 	bl	800a8ba <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 800aa36:	e76e      	b.n	800a916 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800aa38:	4563      	cmp	r3, ip
 800aa3a:	dd14      	ble.n	800aa66 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x18c>
 800aa3c:	9b02      	ldr	r3, [sp, #8]
 800aa3e:	b113      	cbz	r3, 800aa46 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x16c>
 800aa40:	2301      	movs	r3, #1
 800aa42:	460a      	mov	r2, r1
 800aa44:	e783      	b.n	800a94e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x74>
 800aa46:	9b01      	ldr	r3, [sp, #4]
 800aa48:	2b00      	cmp	r3, #0
 800aa4a:	f43f af64 	beq.w	800a916 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800aa4e:	2800      	cmp	r0, #0
 800aa50:	f47f af61 	bne.w	800a916 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800aa54:	b116      	cbz	r6, 800aa5c <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x182>
 800aa56:	2301      	movs	r3, #1
 800aa58:	462a      	mov	r2, r5
 800aa5a:	e779      	b.n	800a950 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x76>
 800aa5c:	8a63      	ldrh	r3, [r4, #18]
 800aa5e:	2b00      	cmp	r3, #0
 800aa60:	f43f af59 	beq.w	800a916 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800aa64:	e7df      	b.n	800aa26 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x14c>
 800aa66:	2800      	cmp	r0, #0
 800aa68:	f47f af55 	bne.w	800a916 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800aa6c:	2e00      	cmp	r6, #0
 800aa6e:	f43f af52 	beq.w	800a916 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800aa72:	2301      	movs	r3, #1
 800aa74:	462a      	mov	r2, r5
 800aa76:	e7db      	b.n	800aa30 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x156>

0800aa78 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>:
 800aa78:	b530      	push	{r4, r5, lr}
 800aa7a:	4605      	mov	r5, r0
 800aa7c:	b08b      	sub	sp, #44	; 0x2c
 800aa7e:	b191      	cbz	r1, 800aaa6 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x2e>
 800aa80:	e9cd 3100 	strd	r3, r1, [sp]
 800aa84:	4613      	mov	r3, r2
 800aa86:	4601      	mov	r1, r0
 800aa88:	f8bd 2038 	ldrh.w	r2, [sp, #56]	; 0x38
 800aa8c:	a802      	add	r0, sp, #8
 800aa8e:	f7ff fd0d 	bl	800a4ac <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE>
 800aa92:	2401      	movs	r4, #1
 800aa94:	2100      	movs	r1, #0
 800aa96:	a802      	add	r0, sp, #8
 800aa98:	f7ff ff1f 	bl	800a8da <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb>
 800aa9c:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 800aaa0:	b163      	cbz	r3, 800aabc <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x44>
 800aaa2:	3401      	adds	r4, #1
 800aaa4:	e7f6      	b.n	800aa94 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x1c>
 800aaa6:	f002 f9bf 	bl	800ce28 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800aaaa:	2401      	movs	r4, #1
 800aaac:	280a      	cmp	r0, #10
 800aaae:	4628      	mov	r0, r5
 800aab0:	bf08      	it	eq
 800aab2:	3401      	addeq	r4, #1
 800aab4:	f002 f9b8 	bl	800ce28 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800aab8:	2800      	cmp	r0, #0
 800aaba:	d1f7      	bne.n	800aaac <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x34>
 800aabc:	b2a0      	uxth	r0, r4
 800aabe:	b00b      	add	sp, #44	; 0x2c
 800aac0:	bd30      	pop	{r4, r5, pc}

0800aac2 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>:
 800aac2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800aac6:	b0db      	sub	sp, #364	; 0x16c
 800aac8:	4689      	mov	r9, r1
 800aaca:	f8dd a190 	ldr.w	sl, [sp, #400]	; 0x190
 800aace:	900a      	str	r0, [sp, #40]	; 0x28
 800aad0:	461c      	mov	r4, r3
 800aad2:	f1ba 0f00 	cmp.w	sl, #0
 800aad6:	f000 80a5 	beq.w	800ac24 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x162>
 800aada:	681b      	ldr	r3, [r3, #0]
 800aadc:	2b00      	cmp	r3, #0
 800aade:	f000 80a1 	beq.w	800ac24 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x162>
 800aae2:	7ba3      	ldrb	r3, [r4, #14]
 800aae4:	2b00      	cmp	r3, #0
 800aae6:	f000 809d 	beq.w	800ac24 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x162>
 800aaea:	6810      	ldr	r0, [r2, #0]
 800aaec:	6851      	ldr	r1, [r2, #4]
 800aaee:	f9b9 2004 	ldrsh.w	r2, [r9, #4]
 800aaf2:	f8ad 203c 	strh.w	r2, [sp, #60]	; 0x3c
 800aaf6:	f10d 0830 	add.w	r8, sp, #48	; 0x30
 800aafa:	4643      	mov	r3, r8
 800aafc:	c303      	stmia	r3!, {r0, r1}
 800aafe:	2500      	movs	r5, #0
 800ab00:	f9b9 3006 	ldrsh.w	r3, [r9, #6]
 800ab04:	79a2      	ldrb	r2, [r4, #6]
 800ab06:	f8ad 303e 	strh.w	r3, [sp, #62]	; 0x3e
 800ab0a:	a90e      	add	r1, sp, #56	; 0x38
 800ab0c:	4640      	mov	r0, r8
 800ab0e:	950e      	str	r5, [sp, #56]	; 0x38
 800ab10:	f7ff fd42 	bl	800a598 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 800ab14:	a90e      	add	r1, sp, #56	; 0x38
 800ab16:	4608      	mov	r0, r1
 800ab18:	79a2      	ldrb	r2, [r4, #6]
 800ab1a:	af18      	add	r7, sp, #96	; 0x60
 800ab1c:	f7ff fd3c 	bl	800a598 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 800ab20:	4638      	mov	r0, r7
 800ab22:	f001 fd4b 	bl	800c5bc <_ZN8touchgfx12TextProviderC1Ev>
 800ab26:	6820      	ldr	r0, [r4, #0]
 800ab28:	6803      	ldr	r3, [r0, #0]
 800ab2a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800ab2c:	4798      	blx	r3
 800ab2e:	9a65      	ldr	r2, [sp, #404]	; 0x194
 800ab30:	4603      	mov	r3, r0
 800ab32:	4651      	mov	r1, sl
 800ab34:	4638      	mov	r0, r7
 800ab36:	f001 fd86 	bl	800c646 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_>
 800ab3a:	6820      	ldr	r0, [r4, #0]
 800ab3c:	7923      	ldrb	r3, [r4, #4]
 800ab3e:	9308      	str	r3, [sp, #32]
 800ab40:	6803      	ldr	r3, [r0, #0]
 800ab42:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800ab44:	4798      	blx	r3
 800ab46:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800ab4a:	181e      	adds	r6, r3, r0
 800ab4c:	42ae      	cmp	r6, r5
 800ab4e:	dd06      	ble.n	800ab5e <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x9c>
 800ab50:	f9b8 2002 	ldrsh.w	r2, [r8, #2]
 800ab54:	4282      	cmp	r2, r0
 800ab56:	bfa4      	itt	ge
 800ab58:	189d      	addge	r5, r3, r2
 800ab5a:	fb95 f5f6 	sdivge	r5, r5, r6
 800ab5e:	a82e      	add	r0, sp, #184	; 0xb8
 800ab60:	f001 fd2c 	bl	800c5bc <_ZN8touchgfx12TextProviderC1Ev>
 800ab64:	7c23      	ldrb	r3, [r4, #16]
 800ab66:	b14b      	cbz	r3, 800ab7c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xba>
 800ab68:	6820      	ldr	r0, [r4, #0]
 800ab6a:	6803      	ldr	r3, [r0, #0]
 800ab6c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800ab6e:	4798      	blx	r3
 800ab70:	9a65      	ldr	r2, [sp, #404]	; 0x194
 800ab72:	4603      	mov	r3, r0
 800ab74:	4651      	mov	r1, sl
 800ab76:	a82e      	add	r0, sp, #184	; 0xb8
 800ab78:	f001 fd65 	bl	800c646 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_>
 800ab7c:	7c21      	ldrb	r1, [r4, #16]
 800ab7e:	9101      	str	r1, [sp, #4]
 800ab80:	6821      	ldr	r1, [r4, #0]
 800ab82:	7963      	ldrb	r3, [r4, #5]
 800ab84:	9100      	str	r1, [sp, #0]
 800ab86:	f8bd 203c 	ldrh.w	r2, [sp, #60]	; 0x3c
 800ab8a:	a92e      	add	r1, sp, #184	; 0xb8
 800ab8c:	a810      	add	r0, sp, #64	; 0x40
 800ab8e:	f7ff fc8d 	bl	800a4ac <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE>
 800ab92:	7c23      	ldrb	r3, [r4, #16]
 800ab94:	b9bb      	cbnz	r3, 800abc6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x104>
 800ab96:	fa1f fa86 	uxth.w	sl, r6
 800ab9a:	2d00      	cmp	r5, #0
 800ab9c:	dd45      	ble.n	800ac2a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x168>
 800ab9e:	4638      	mov	r0, r7
 800aba0:	f002 f942 	bl	800ce28 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800aba4:	2800      	cmp	r0, #0
 800aba6:	d03d      	beq.n	800ac24 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x162>
 800aba8:	280a      	cmp	r0, #10
 800abaa:	d1f6      	bne.n	800ab9a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xd8>
 800abac:	f8bd 303a 	ldrh.w	r3, [sp, #58]	; 0x3a
 800abb0:	4453      	add	r3, sl
 800abb2:	f8ad 303a 	strh.w	r3, [sp, #58]	; 0x3a
 800abb6:	f8bd 303e 	ldrh.w	r3, [sp, #62]	; 0x3e
 800abba:	eba3 030a 	sub.w	r3, r3, sl
 800abbe:	3d01      	subs	r5, #1
 800abc0:	f8ad 303e 	strh.w	r3, [sp, #62]	; 0x3e
 800abc4:	e7e9      	b.n	800ab9a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xd8>
 800abc6:	0073      	lsls	r3, r6, #1
 800abc8:	9309      	str	r3, [sp, #36]	; 0x24
 800abca:	f64f 7bff 	movw	fp, #65535	; 0xffff
 800abce:	fa1f fa86 	uxth.w	sl, r6
 800abd2:	2d00      	cmp	r5, #0
 800abd4:	dd29      	ble.n	800ac2a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x168>
 800abd6:	f9bd 103e 	ldrsh.w	r1, [sp, #62]	; 0x3e
 800abda:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800abdc:	428b      	cmp	r3, r1
 800abde:	bfd4      	ite	le
 800abe0:	2100      	movle	r1, #0
 800abe2:	2101      	movgt	r1, #1
 800abe4:	a810      	add	r0, sp, #64	; 0x40
 800abe6:	f7ff fe78 	bl	800a8da <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb>
 800abea:	f8bd 3052 	ldrh.w	r3, [sp, #82]	; 0x52
 800abee:	3b01      	subs	r3, #1
 800abf0:	b29b      	uxth	r3, r3
 800abf2:	455b      	cmp	r3, fp
 800abf4:	930b      	str	r3, [sp, #44]	; 0x2c
 800abf6:	d005      	beq.n	800ac04 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x142>
 800abf8:	7961      	ldrb	r1, [r4, #5]
 800abfa:	4638      	mov	r0, r7
 800abfc:	f7f7 fdb4 	bl	8002768 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 800ac00:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800ac02:	e7f4      	b.n	800abee <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x12c>
 800ac04:	f8bd 303a 	ldrh.w	r3, [sp, #58]	; 0x3a
 800ac08:	4453      	add	r3, sl
 800ac0a:	f8ad 303a 	strh.w	r3, [sp, #58]	; 0x3a
 800ac0e:	f8bd 303e 	ldrh.w	r3, [sp, #62]	; 0x3e
 800ac12:	eba3 030a 	sub.w	r3, r3, sl
 800ac16:	f8ad 303e 	strh.w	r3, [sp, #62]	; 0x3e
 800ac1a:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 800ac1e:	3d01      	subs	r5, #1
 800ac20:	2b00      	cmp	r3, #0
 800ac22:	d1d6      	bne.n	800abd2 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x110>
 800ac24:	b05b      	add	sp, #364	; 0x16c
 800ac26:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800ac2a:	ea4f 0a46 	mov.w	sl, r6, lsl #1
 800ac2e:	ad44      	add	r5, sp, #272	; 0x110
 800ac30:	f04f 0b00 	mov.w	fp, #0
 800ac34:	7c23      	ldrb	r3, [r4, #16]
 800ac36:	2b00      	cmp	r3, #0
 800ac38:	d067      	beq.n	800ad0a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x248>
 800ac3a:	f9bd 103e 	ldrsh.w	r1, [sp, #62]	; 0x3e
 800ac3e:	458a      	cmp	sl, r1
 800ac40:	bfd4      	ite	le
 800ac42:	2100      	movle	r1, #0
 800ac44:	2101      	movgt	r1, #1
 800ac46:	a810      	add	r0, sp, #64	; 0x40
 800ac48:	f7ff fe47 	bl	800a8da <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb>
 800ac4c:	9b08      	ldr	r3, [sp, #32]
 800ac4e:	2b00      	cmp	r3, #0
 800ac50:	d056      	beq.n	800ad00 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x23e>
 800ac52:	7c23      	ldrb	r3, [r4, #16]
 800ac54:	9309      	str	r3, [sp, #36]	; 0x24
 800ac56:	2258      	movs	r2, #88	; 0x58
 800ac58:	4639      	mov	r1, r7
 800ac5a:	4628      	mov	r0, r5
 800ac5c:	f00e f844 	bl	8018ce8 <memcpy>
 800ac60:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800ac62:	2b00      	cmp	r3, #0
 800ac64:	d059      	beq.n	800ad1a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x258>
 800ac66:	f9bd 305a 	ldrsh.w	r3, [sp, #90]	; 0x5a
 800ac6a:	7922      	ldrb	r2, [r4, #4]
 800ac6c:	2a01      	cmp	r2, #1
 800ac6e:	d13d      	bne.n	800acec <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x22a>
 800ac70:	f9bd 003c 	ldrsh.w	r0, [sp, #60]	; 0x3c
 800ac74:	1ac0      	subs	r0, r0, r3
 800ac76:	2302      	movs	r3, #2
 800ac78:	fb90 f0f3 	sdiv	r0, r0, r3
 800ac7c:	b200      	sxth	r0, r0
 800ac7e:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 800ac82:	4418      	add	r0, r3
 800ac84:	7c23      	ldrb	r3, [r4, #16]
 800ac86:	f8ad 0110 	strh.w	r0, [sp, #272]	; 0x110
 800ac8a:	2b00      	cmp	r3, #0
 800ac8c:	d03a      	beq.n	800ad04 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x242>
 800ac8e:	f8bd 2052 	ldrh.w	r2, [sp, #82]	; 0x52
 800ac92:	f89d 105e 	ldrb.w	r1, [sp, #94]	; 0x5e
 800ac96:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 800ac9a:	9500      	str	r5, [sp, #0]
 800ac9c:	e9cd 2105 	strd	r2, r1, [sp, #20]
 800aca0:	e9cd b703 	strd	fp, r7, [sp, #12]
 800aca4:	e9cd 8401 	strd	r8, r4, [sp, #4]
 800aca8:	464a      	mov	r2, r9
 800acaa:	2100      	movs	r1, #0
 800acac:	980a      	ldr	r0, [sp, #40]	; 0x28
 800acae:	f7ff fca4 	bl	800a5fa <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>
 800acb2:	2800      	cmp	r0, #0
 800acb4:	d1b6      	bne.n	800ac24 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x162>
 800acb6:	f8bd 303a 	ldrh.w	r3, [sp, #58]	; 0x3a
 800acba:	b2b2      	uxth	r2, r6
 800acbc:	4611      	mov	r1, r2
 800acbe:	4413      	add	r3, r2
 800acc0:	f8bd 203e 	ldrh.w	r2, [sp, #62]	; 0x3e
 800acc4:	1a52      	subs	r2, r2, r1
 800acc6:	7c21      	ldrb	r1, [r4, #16]
 800acc8:	b21b      	sxth	r3, r3
 800acca:	b212      	sxth	r2, r2
 800accc:	f8ad 303a 	strh.w	r3, [sp, #58]	; 0x3a
 800acd0:	f8ad 203e 	strh.w	r2, [sp, #62]	; 0x3e
 800acd4:	b109      	cbz	r1, 800acda <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x218>
 800acd6:	42b2      	cmp	r2, r6
 800acd8:	dba4      	blt.n	800ac24 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x162>
 800acda:	f8b8 2006 	ldrh.w	r2, [r8, #6]
 800acde:	f8b8 1002 	ldrh.w	r1, [r8, #2]
 800ace2:	440a      	add	r2, r1
 800ace4:	b212      	sxth	r2, r2
 800ace6:	4293      	cmp	r3, r2
 800ace8:	dda4      	ble.n	800ac34 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x172>
 800acea:	e79b      	b.n	800ac24 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x162>
 800acec:	2a02      	cmp	r2, #2
 800acee:	d105      	bne.n	800acfc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x23a>
 800acf0:	7be2      	ldrb	r2, [r4, #15]
 800acf2:	f8bd 003c 	ldrh.w	r0, [sp, #60]	; 0x3c
 800acf6:	1a80      	subs	r0, r0, r2
 800acf8:	1ac0      	subs	r0, r0, r3
 800acfa:	e7bf      	b.n	800ac7c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1ba>
 800acfc:	2000      	movs	r0, #0
 800acfe:	e7be      	b.n	800ac7e <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1bc>
 800ad00:	7be0      	ldrb	r0, [r4, #15]
 800ad02:	e7bc      	b.n	800ac7e <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1bc>
 800ad04:	f647 72ff 	movw	r2, #32767	; 0x7fff
 800ad08:	e7c3      	b.n	800ac92 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1d0>
 800ad0a:	9b08      	ldr	r3, [sp, #32]
 800ad0c:	2b00      	cmp	r3, #0
 800ad0e:	d0f7      	beq.n	800ad00 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x23e>
 800ad10:	2258      	movs	r2, #88	; 0x58
 800ad12:	4639      	mov	r1, r7
 800ad14:	4628      	mov	r0, r5
 800ad16:	f00d ffe7 	bl	8018ce8 <memcpy>
 800ad1a:	2300      	movs	r3, #0
 800ad1c:	f647 72ff 	movw	r2, #32767	; 0x7fff
 800ad20:	6821      	ldr	r1, [r4, #0]
 800ad22:	4628      	mov	r0, r5
 800ad24:	f7ff fbfc 	bl	800a520 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 800ad28:	b203      	sxth	r3, r0
 800ad2a:	e79e      	b.n	800ac6a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1a8>

0800ad2c <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>:
 800ad2c:	b510      	push	{r4, lr}
 800ad2e:	2b02      	cmp	r3, #2
 800ad30:	f9b0 4000 	ldrsh.w	r4, [r0]
 800ad34:	d00b      	beq.n	800ad4e <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x22>
 800ad36:	2b03      	cmp	r3, #3
 800ad38:	d00e      	beq.n	800ad58 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x2c>
 800ad3a:	2b01      	cmp	r3, #1
 800ad3c:	d001      	beq.n	800ad42 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x16>
 800ad3e:	1860      	adds	r0, r4, r1
 800ad40:	bd10      	pop	{r4, pc}
 800ad42:	8880      	ldrh	r0, [r0, #4]
 800ad44:	4420      	add	r0, r4
 800ad46:	b200      	sxth	r0, r0
 800ad48:	1a80      	subs	r0, r0, r2
 800ad4a:	3801      	subs	r0, #1
 800ad4c:	e7f8      	b.n	800ad40 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x14>
 800ad4e:	8880      	ldrh	r0, [r0, #4]
 800ad50:	4420      	add	r0, r4
 800ad52:	b200      	sxth	r0, r0
 800ad54:	1a40      	subs	r0, r0, r1
 800ad56:	e7f8      	b.n	800ad4a <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x1e>
 800ad58:	18a0      	adds	r0, r4, r2
 800ad5a:	e7f1      	b.n	800ad40 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x14>

0800ad5c <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>:
 800ad5c:	b510      	push	{r4, lr}
 800ad5e:	2b02      	cmp	r3, #2
 800ad60:	f9b0 4002 	ldrsh.w	r4, [r0, #2]
 800ad64:	d006      	beq.n	800ad74 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x18>
 800ad66:	2b03      	cmp	r3, #3
 800ad68:	d00a      	beq.n	800ad80 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x24>
 800ad6a:	2b01      	cmp	r3, #1
 800ad6c:	bf14      	ite	ne
 800ad6e:	18a0      	addne	r0, r4, r2
 800ad70:	1860      	addeq	r0, r4, r1
 800ad72:	bd10      	pop	{r4, pc}
 800ad74:	88c0      	ldrh	r0, [r0, #6]
 800ad76:	4420      	add	r0, r4
 800ad78:	b200      	sxth	r0, r0
 800ad7a:	1a80      	subs	r0, r0, r2
 800ad7c:	3801      	subs	r0, #1
 800ad7e:	e7f8      	b.n	800ad72 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x16>
 800ad80:	88c0      	ldrh	r0, [r0, #6]
 800ad82:	4420      	add	r0, r4
 800ad84:	b200      	sxth	r0, r0
 800ad86:	1a40      	subs	r0, r0, r1
 800ad88:	e7f8      	b.n	800ad7c <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x20>
	...

0800ad8c <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE>:
 800ad8c:	4b01      	ldr	r3, [pc, #4]	; (800ad94 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE+0x8>)
 800ad8e:	2200      	movs	r2, #0
 800ad90:	601a      	str	r2, [r3, #0]
 800ad92:	4770      	bx	lr
 800ad94:	20012194 	.word	0x20012194

0800ad98 <_ZN8touchgfx16TouchCalibration6muldivEllllllRl>:
 800ad98:	b5f0      	push	{r4, r5, r6, r7, lr}
 800ad9a:	e9dd e405 	ldrd	lr, r4, [sp, #20]
 800ad9e:	1e05      	subs	r5, r0, #0
 800ada0:	bfba      	itte	lt
 800ada2:	f04f 37ff 	movlt.w	r7, #4294967295
 800ada6:	426d      	neglt	r5, r5
 800ada8:	2701      	movge	r7, #1
 800adaa:	f1be 0f00 	cmp.w	lr, #0
 800adae:	bfb8      	it	lt
 800adb0:	f1ce 0e00 	rsblt	lr, lr, #0
 800adb4:	f04f 0601 	mov.w	r6, #1
 800adb8:	fa4e f001 	asr.w	r0, lr, r1
 800adbc:	fa06 f101 	lsl.w	r1, r6, r1
 800adc0:	f8dd c01c 	ldr.w	ip, [sp, #28]
 800adc4:	f101 31ff 	add.w	r1, r1, #4294967295
 800adc8:	ea01 010e 	and.w	r1, r1, lr
 800adcc:	bfb8      	it	lt
 800adce:	427f      	neglt	r7, r7
 800add0:	434d      	muls	r5, r1
 800add2:	2c00      	cmp	r4, #0
 800add4:	f8dc 1000 	ldr.w	r1, [ip]
 800add8:	bfb8      	it	lt
 800adda:	4264      	neglt	r4, r4
 800addc:	fb03 1300 	mla	r3, r3, r0, r1
 800ade0:	fb95 f1f4 	sdiv	r1, r5, r4
 800ade4:	fb04 5511 	mls	r5, r4, r1, r5
 800ade8:	441d      	add	r5, r3
 800adea:	fb95 f3f4 	sdiv	r3, r5, r4
 800adee:	fb04 5413 	mls	r4, r4, r3, r5
 800adf2:	4419      	add	r1, r3
 800adf4:	bfb8      	it	lt
 800adf6:	427f      	neglt	r7, r7
 800adf8:	fb02 1000 	mla	r0, r2, r0, r1
 800adfc:	f8cc 4000 	str.w	r4, [ip]
 800ae00:	4378      	muls	r0, r7
 800ae02:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800ae04 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>:
 800ae04:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800ae08:	4c24      	ldr	r4, [pc, #144]	; (800ae9c <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x98>)
 800ae0a:	6807      	ldr	r7, [r0, #0]
 800ae0c:	69a3      	ldr	r3, [r4, #24]
 800ae0e:	b086      	sub	sp, #24
 800ae10:	4605      	mov	r5, r0
 800ae12:	b92b      	cbnz	r3, 800ae20 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x1c>
 800ae14:	6840      	ldr	r0, [r0, #4]
 800ae16:	e9c5 7000 	strd	r7, r0, [r5]
 800ae1a:	b006      	add	sp, #24
 800ae1c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800ae20:	68a2      	ldr	r2, [r4, #8]
 800ae22:	6820      	ldr	r0, [r4, #0]
 800ae24:	ae06      	add	r6, sp, #24
 800ae26:	f04f 0802 	mov.w	r8, #2
 800ae2a:	fb93 f1f8 	sdiv	r1, r3, r8
 800ae2e:	440a      	add	r2, r1
 800ae30:	f846 2d04 	str.w	r2, [r6, #-4]!
 800ae34:	69e1      	ldr	r1, [r4, #28]
 800ae36:	9700      	str	r7, [sp, #0]
 800ae38:	e9cd 3601 	strd	r3, r6, [sp, #4]
 800ae3c:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800ae3e:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800ae40:	f7ff ffaa 	bl	800ad98 <_ZN8touchgfx16TouchCalibration6muldivEllllllRl>
 800ae44:	69a3      	ldr	r3, [r4, #24]
 800ae46:	9301      	str	r3, [sp, #4]
 800ae48:	686b      	ldr	r3, [r5, #4]
 800ae4a:	9300      	str	r3, [sp, #0]
 800ae4c:	4607      	mov	r7, r0
 800ae4e:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800ae50:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800ae52:	6a21      	ldr	r1, [r4, #32]
 800ae54:	9602      	str	r6, [sp, #8]
 800ae56:	6860      	ldr	r0, [r4, #4]
 800ae58:	f7ff ff9e 	bl	800ad98 <_ZN8touchgfx16TouchCalibration6muldivEllllllRl>
 800ae5c:	6963      	ldr	r3, [r4, #20]
 800ae5e:	69a2      	ldr	r2, [r4, #24]
 800ae60:	fb92 f8f8 	sdiv	r8, r2, r8
 800ae64:	4443      	add	r3, r8
 800ae66:	9305      	str	r3, [sp, #20]
 800ae68:	682b      	ldr	r3, [r5, #0]
 800ae6a:	9300      	str	r3, [sp, #0]
 800ae6c:	e9cd 2601 	strd	r2, r6, [sp, #4]
 800ae70:	6c63      	ldr	r3, [r4, #68]	; 0x44
 800ae72:	6b62      	ldr	r2, [r4, #52]	; 0x34
 800ae74:	6a61      	ldr	r1, [r4, #36]	; 0x24
 800ae76:	4407      	add	r7, r0
 800ae78:	68e0      	ldr	r0, [r4, #12]
 800ae7a:	f7ff ff8d 	bl	800ad98 <_ZN8touchgfx16TouchCalibration6muldivEllllllRl>
 800ae7e:	69a3      	ldr	r3, [r4, #24]
 800ae80:	9301      	str	r3, [sp, #4]
 800ae82:	686b      	ldr	r3, [r5, #4]
 800ae84:	9300      	str	r3, [sp, #0]
 800ae86:	4680      	mov	r8, r0
 800ae88:	9602      	str	r6, [sp, #8]
 800ae8a:	6ca3      	ldr	r3, [r4, #72]	; 0x48
 800ae8c:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800ae8e:	6aa1      	ldr	r1, [r4, #40]	; 0x28
 800ae90:	6920      	ldr	r0, [r4, #16]
 800ae92:	f7ff ff81 	bl	800ad98 <_ZN8touchgfx16TouchCalibration6muldivEllllllRl>
 800ae96:	4440      	add	r0, r8
 800ae98:	e7bd      	b.n	800ae16 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x12>
 800ae9a:	bf00      	nop
 800ae9c:	20012198 	.word	0x20012198

0800aea0 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>:
 800aea0:	b510      	push	{r4, lr}
 800aea2:	4b07      	ldr	r3, [pc, #28]	; (800aec0 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x20>)
 800aea4:	781b      	ldrb	r3, [r3, #0]
 800aea6:	2b01      	cmp	r3, #1
 800aea8:	d108      	bne.n	800aebc <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x1c>
 800aeaa:	4b06      	ldr	r3, [pc, #24]	; (800aec4 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x24>)
 800aeac:	880c      	ldrh	r4, [r1, #0]
 800aeae:	881b      	ldrh	r3, [r3, #0]
 800aeb0:	f9b0 2000 	ldrsh.w	r2, [r0]
 800aeb4:	3b01      	subs	r3, #1
 800aeb6:	1b1b      	subs	r3, r3, r4
 800aeb8:	8003      	strh	r3, [r0, #0]
 800aeba:	800a      	strh	r2, [r1, #0]
 800aebc:	bd10      	pop	{r4, pc}
 800aebe:	bf00      	nop
 800aec0:	20012184 	.word	0x20012184
 800aec4:	20012188 	.word	0x20012188

0800aec8 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>:
 800aec8:	b510      	push	{r4, lr}
 800aeca:	4b0a      	ldr	r3, [pc, #40]	; (800aef4 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x2c>)
 800aecc:	781b      	ldrb	r3, [r3, #0]
 800aece:	2b01      	cmp	r3, #1
 800aed0:	d10e      	bne.n	800aef0 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x28>
 800aed2:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 800aed6:	8843      	ldrh	r3, [r0, #2]
 800aed8:	f9b0 4000 	ldrsh.w	r4, [r0]
 800aedc:	8044      	strh	r4, [r0, #2]
 800aede:	18ca      	adds	r2, r1, r3
 800aee0:	4b05      	ldr	r3, [pc, #20]	; (800aef8 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x30>)
 800aee2:	881b      	ldrh	r3, [r3, #0]
 800aee4:	1a9b      	subs	r3, r3, r2
 800aee6:	8003      	strh	r3, [r0, #0]
 800aee8:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800aeec:	80c3      	strh	r3, [r0, #6]
 800aeee:	8081      	strh	r1, [r0, #4]
 800aef0:	bd10      	pop	{r4, pc}
 800aef2:	bf00      	nop
 800aef4:	20012184 	.word	0x20012184
 800aef8:	20012180 	.word	0x20012180

0800aefc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>:
 800aefc:	b510      	push	{r4, lr}
 800aefe:	4b07      	ldr	r3, [pc, #28]	; (800af1c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x20>)
 800af00:	781b      	ldrb	r3, [r3, #0]
 800af02:	2b01      	cmp	r3, #1
 800af04:	d108      	bne.n	800af18 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x1c>
 800af06:	f9b1 3000 	ldrsh.w	r3, [r1]
 800af0a:	f9b0 4000 	ldrsh.w	r4, [r0]
 800af0e:	8003      	strh	r3, [r0, #0]
 800af10:	8893      	ldrh	r3, [r2, #4]
 800af12:	3b01      	subs	r3, #1
 800af14:	1b1b      	subs	r3, r3, r4
 800af16:	800b      	strh	r3, [r1, #0]
 800af18:	bd10      	pop	{r4, pc}
 800af1a:	bf00      	nop
 800af1c:	20012184 	.word	0x20012184

0800af20 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>:
 800af20:	b513      	push	{r0, r1, r4, lr}
 800af22:	4b08      	ldr	r3, [pc, #32]	; (800af44 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x24>)
 800af24:	f9b3 2000 	ldrsh.w	r2, [r3]
 800af28:	4b07      	ldr	r3, [pc, #28]	; (800af48 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x28>)
 800af2a:	f8ad 2004 	strh.w	r2, [sp, #4]
 800af2e:	f9b3 3000 	ldrsh.w	r3, [r3]
 800af32:	f8ad 3006 	strh.w	r3, [sp, #6]
 800af36:	2400      	movs	r4, #0
 800af38:	466a      	mov	r2, sp
 800af3a:	9400      	str	r4, [sp, #0]
 800af3c:	f7ff ffde 	bl	800aefc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>
 800af40:	b002      	add	sp, #8
 800af42:	bd10      	pop	{r4, pc}
 800af44:	20012180 	.word	0x20012180
 800af48:	20012182 	.word	0x20012182

0800af4c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>:
 800af4c:	b510      	push	{r4, lr}
 800af4e:	4b0a      	ldr	r3, [pc, #40]	; (800af78 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x2c>)
 800af50:	781b      	ldrb	r3, [r3, #0]
 800af52:	2b01      	cmp	r3, #1
 800af54:	460a      	mov	r2, r1
 800af56:	d10d      	bne.n	800af74 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x28>
 800af58:	8881      	ldrh	r1, [r0, #4]
 800af5a:	8803      	ldrh	r3, [r0, #0]
 800af5c:	440b      	add	r3, r1
 800af5e:	4601      	mov	r1, r0
 800af60:	3b01      	subs	r3, #1
 800af62:	f821 3b02 	strh.w	r3, [r1], #2
 800af66:	f7ff ffc9 	bl	800aefc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>
 800af6a:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800af6e:	88c2      	ldrh	r2, [r0, #6]
 800af70:	8082      	strh	r2, [r0, #4]
 800af72:	80c3      	strh	r3, [r0, #6]
 800af74:	bd10      	pop	{r4, pc}
 800af76:	bf00      	nop
 800af78:	20012184 	.word	0x20012184

0800af7c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>:
 800af7c:	b507      	push	{r0, r1, r2, lr}
 800af7e:	4b09      	ldr	r3, [pc, #36]	; (800afa4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x28>)
 800af80:	f9b3 2000 	ldrsh.w	r2, [r3]
 800af84:	4b08      	ldr	r3, [pc, #32]	; (800afa8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x2c>)
 800af86:	f8ad 2004 	strh.w	r2, [sp, #4]
 800af8a:	2100      	movs	r1, #0
 800af8c:	f9b3 3000 	ldrsh.w	r3, [r3]
 800af90:	9100      	str	r1, [sp, #0]
 800af92:	4669      	mov	r1, sp
 800af94:	f8ad 3006 	strh.w	r3, [sp, #6]
 800af98:	f7ff ffd8 	bl	800af4c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 800af9c:	b003      	add	sp, #12
 800af9e:	f85d fb04 	ldr.w	pc, [sp], #4
 800afa2:	bf00      	nop
 800afa4:	20012180 	.word	0x20012180
 800afa8:	20012182 	.word	0x20012182

0800afac <_ZN8touchgfx11Application13requestRedrawEv>:
 800afac:	4b06      	ldr	r3, [pc, #24]	; (800afc8 <_ZN8touchgfx11Application13requestRedrawEv+0x1c>)
 800afae:	f9b3 2000 	ldrsh.w	r2, [r3]
 800afb2:	4b06      	ldr	r3, [pc, #24]	; (800afcc <_ZN8touchgfx11Application13requestRedrawEv+0x20>)
 800afb4:	f8a0 2130 	strh.w	r2, [r0, #304]	; 0x130
 800afb8:	f9b3 3000 	ldrsh.w	r3, [r3]
 800afbc:	f8a0 3132 	strh.w	r3, [r0, #306]	; 0x132
 800afc0:	2100      	movs	r1, #0
 800afc2:	f8c0 112c 	str.w	r1, [r0, #300]	; 0x12c
 800afc6:	4770      	bx	lr
 800afc8:	20012180 	.word	0x20012180
 800afcc:	20012182 	.word	0x20012182

0800afd0 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE>:
 800afd0:	4b03      	ldr	r3, [pc, #12]	; (800afe0 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0x10>)
 800afd2:	6818      	ldr	r0, [r3, #0]
 800afd4:	b110      	cbz	r0, 800afdc <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0xc>
 800afd6:	6803      	ldr	r3, [r0, #0]
 800afd8:	699b      	ldr	r3, [r3, #24]
 800afda:	4718      	bx	r3
 800afdc:	4770      	bx	lr
 800afde:	bf00      	nop
 800afe0:	200121e8 	.word	0x200121e8

0800afe4 <_ZN8touchgfx11Application29handlePendingScreenTransitionEv>:
 800afe4:	4770      	bx	lr
	...

0800afe8 <_ZN8touchgfx11Application4drawEv>:
 800afe8:	b507      	push	{r0, r1, r2, lr}
 800afea:	4b09      	ldr	r3, [pc, #36]	; (800b010 <_ZN8touchgfx11Application4drawEv+0x28>)
 800afec:	f9b3 2000 	ldrsh.w	r2, [r3]
 800aff0:	4b08      	ldr	r3, [pc, #32]	; (800b014 <_ZN8touchgfx11Application4drawEv+0x2c>)
 800aff2:	f8ad 2004 	strh.w	r2, [sp, #4]
 800aff6:	f9b3 3000 	ldrsh.w	r3, [r3]
 800affa:	f8ad 3006 	strh.w	r3, [sp, #6]
 800affe:	6803      	ldr	r3, [r0, #0]
 800b000:	2100      	movs	r1, #0
 800b002:	9100      	str	r1, [sp, #0]
 800b004:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800b006:	4669      	mov	r1, sp
 800b008:	4798      	blx	r3
 800b00a:	b003      	add	sp, #12
 800b00c:	f85d fb04 	ldr.w	pc, [sp], #4
 800b010:	20012180 	.word	0x20012180
 800b014:	20012182 	.word	0x20012182

0800b018 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE>:
 800b018:	4b03      	ldr	r3, [pc, #12]	; (800b028 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0x10>)
 800b01a:	6818      	ldr	r0, [r3, #0]
 800b01c:	b110      	cbz	r0, 800b024 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0xc>
 800b01e:	6803      	ldr	r3, [r0, #0]
 800b020:	69db      	ldr	r3, [r3, #28]
 800b022:	4718      	bx	r3
 800b024:	4770      	bx	lr
 800b026:	bf00      	nop
 800b028:	200121e8 	.word	0x200121e8

0800b02c <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE>:
 800b02c:	4b03      	ldr	r3, [pc, #12]	; (800b03c <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0x10>)
 800b02e:	6818      	ldr	r0, [r3, #0]
 800b030:	b110      	cbz	r0, 800b038 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0xc>
 800b032:	6803      	ldr	r3, [r0, #0]
 800b034:	6a1b      	ldr	r3, [r3, #32]
 800b036:	4718      	bx	r3
 800b038:	4770      	bx	lr
 800b03a:	bf00      	nop
 800b03c:	200121e8 	.word	0x200121e8

0800b040 <_ZN8touchgfx11Application14handleKeyEventEh>:
 800b040:	4b03      	ldr	r3, [pc, #12]	; (800b050 <_ZN8touchgfx11Application14handleKeyEventEh+0x10>)
 800b042:	6818      	ldr	r0, [r3, #0]
 800b044:	b110      	cbz	r0, 800b04c <_ZN8touchgfx11Application14handleKeyEventEh+0xc>
 800b046:	6803      	ldr	r3, [r0, #0]
 800b048:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800b04a:	4718      	bx	r3
 800b04c:	4770      	bx	lr
 800b04e:	bf00      	nop
 800b050:	200121e8 	.word	0x200121e8

0800b054 <_ZN8touchgfx11Application15handleTickEventEv>:
 800b054:	b570      	push	{r4, r5, r6, lr}
 800b056:	4d34      	ldr	r5, [pc, #208]	; (800b128 <_ZN8touchgfx11Application15handleTickEventEv+0xd4>)
 800b058:	4604      	mov	r4, r0
 800b05a:	6828      	ldr	r0, [r5, #0]
 800b05c:	b140      	cbz	r0, 800b070 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 800b05e:	7a03      	ldrb	r3, [r0, #8]
 800b060:	b933      	cbnz	r3, 800b070 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 800b062:	f884 3135 	strb.w	r3, [r4, #309]	; 0x135
 800b066:	6803      	ldr	r3, [r0, #0]
 800b068:	689b      	ldr	r3, [r3, #8]
 800b06a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800b06e:	4718      	bx	r3
 800b070:	f894 3135 	ldrb.w	r3, [r4, #309]	; 0x135
 800b074:	b97b      	cbnz	r3, 800b096 <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 800b076:	b170      	cbz	r0, 800b096 <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 800b078:	7a03      	ldrb	r3, [r0, #8]
 800b07a:	b163      	cbz	r3, 800b096 <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 800b07c:	4b2b      	ldr	r3, [pc, #172]	; (800b12c <_ZN8touchgfx11Application15handleTickEventEv+0xd8>)
 800b07e:	6818      	ldr	r0, [r3, #0]
 800b080:	b110      	cbz	r0, 800b088 <_ZN8touchgfx11Application15handleTickEventEv+0x34>
 800b082:	6803      	ldr	r3, [r0, #0]
 800b084:	691b      	ldr	r3, [r3, #16]
 800b086:	4798      	blx	r3
 800b088:	6828      	ldr	r0, [r5, #0]
 800b08a:	6803      	ldr	r3, [r0, #0]
 800b08c:	68db      	ldr	r3, [r3, #12]
 800b08e:	4798      	blx	r3
 800b090:	2301      	movs	r3, #1
 800b092:	f884 3135 	strb.w	r3, [r4, #309]	; 0x135
 800b096:	2500      	movs	r5, #0
 800b098:	f8b4 0084 	ldrh.w	r0, [r4, #132]	; 0x84
 800b09c:	42a8      	cmp	r0, r5
 800b09e:	dd0c      	ble.n	800b0ba <_ZN8touchgfx11Application15handleTickEventEv+0x66>
 800b0a0:	1963      	adds	r3, r4, r5
 800b0a2:	f893 2088 	ldrb.w	r2, [r3, #136]	; 0x88
 800b0a6:	b132      	cbz	r2, 800b0b6 <_ZN8touchgfx11Application15handleTickEventEv+0x62>
 800b0a8:	eb05 0245 	add.w	r2, r5, r5, lsl #1
 800b0ac:	4413      	add	r3, r2
 800b0ae:	6858      	ldr	r0, [r3, #4]
 800b0b0:	6803      	ldr	r3, [r0, #0]
 800b0b2:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 800b0b4:	4798      	blx	r3
 800b0b6:	3501      	adds	r5, #1
 800b0b8:	e7ee      	b.n	800b098 <_ZN8touchgfx11Application15handleTickEventEv+0x44>
 800b0ba:	2300      	movs	r3, #0
 800b0bc:	461a      	mov	r2, r3
 800b0be:	4298      	cmp	r0, r3
 800b0c0:	d114      	bne.n	800b0ec <_ZN8touchgfx11Application15handleTickEventEv+0x98>
 800b0c2:	1d25      	adds	r5, r4, #4
 800b0c4:	f8b4 1084 	ldrh.w	r1, [r4, #132]	; 0x84
 800b0c8:	1e48      	subs	r0, r1, #1
 800b0ca:	b280      	uxth	r0, r0
 800b0cc:	4291      	cmp	r1, r2
 800b0ce:	dd24      	ble.n	800b11a <_ZN8touchgfx11Application15handleTickEventEv+0xc6>
 800b0d0:	4288      	cmp	r0, r1
 800b0d2:	d2fb      	bcs.n	800b0cc <_ZN8touchgfx11Application15handleTickEventEv+0x78>
 800b0d4:	eb04 0380 	add.w	r3, r4, r0, lsl #2
 800b0d8:	3304      	adds	r3, #4
 800b0da:	eb05 0181 	add.w	r1, r5, r1, lsl #2
 800b0de:	428b      	cmp	r3, r1
 800b0e0:	d018      	beq.n	800b114 <_ZN8touchgfx11Application15handleTickEventEv+0xc0>
 800b0e2:	f853 6f04 	ldr.w	r6, [r3, #4]!
 800b0e6:	f843 6c04 	str.w	r6, [r3, #-4]
 800b0ea:	e7f8      	b.n	800b0de <_ZN8touchgfx11Application15handleTickEventEv+0x8a>
 800b0ec:	18e1      	adds	r1, r4, r3
 800b0ee:	f891 5088 	ldrb.w	r5, [r1, #136]	; 0x88
 800b0f2:	b16d      	cbz	r5, 800b110 <_ZN8touchgfx11Application15handleTickEventEv+0xbc>
 800b0f4:	429a      	cmp	r2, r3
 800b0f6:	d00a      	beq.n	800b10e <_ZN8touchgfx11Application15handleTickEventEv+0xba>
 800b0f8:	eb03 0643 	add.w	r6, r3, r3, lsl #1
 800b0fc:	4431      	add	r1, r6
 800b0fe:	684e      	ldr	r6, [r1, #4]
 800b100:	b291      	uxth	r1, r2
 800b102:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 800b106:	604e      	str	r6, [r1, #4]
 800b108:	18a1      	adds	r1, r4, r2
 800b10a:	f881 5088 	strb.w	r5, [r1, #136]	; 0x88
 800b10e:	3201      	adds	r2, #1
 800b110:	3301      	adds	r3, #1
 800b112:	e7d4      	b.n	800b0be <_ZN8touchgfx11Application15handleTickEventEv+0x6a>
 800b114:	f8a4 0084 	strh.w	r0, [r4, #132]	; 0x84
 800b118:	e7d4      	b.n	800b0c4 <_ZN8touchgfx11Application15handleTickEventEv+0x70>
 800b11a:	4b04      	ldr	r3, [pc, #16]	; (800b12c <_ZN8touchgfx11Application15handleTickEventEv+0xd8>)
 800b11c:	6818      	ldr	r0, [r3, #0]
 800b11e:	b110      	cbz	r0, 800b126 <_ZN8touchgfx11Application15handleTickEventEv+0xd2>
 800b120:	6803      	ldr	r3, [r0, #0]
 800b122:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800b124:	e7a1      	b.n	800b06a <_ZN8touchgfx11Application15handleTickEventEv+0x16>
 800b126:	bd70      	pop	{r4, r5, r6, pc}
 800b128:	200121ec 	.word	0x200121ec
 800b12c:	200121e8 	.word	0x200121e8

0800b130 <_ZN8touchgfx11ApplicationD1Ev>:
 800b130:	4770      	bx	lr

0800b132 <_ZN8touchgfx11ApplicationD0Ev>:
 800b132:	b510      	push	{r4, lr}
 800b134:	f44f 719c 	mov.w	r1, #312	; 0x138
 800b138:	4604      	mov	r4, r0
 800b13a:	f00d fd2b 	bl	8018b94 <_ZdlPvj>
 800b13e:	4620      	mov	r0, r4
 800b140:	bd10      	pop	{r4, pc}
	...

0800b144 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE>:
 800b144:	b570      	push	{r4, r5, r6, lr}
 800b146:	4606      	mov	r6, r0
 800b148:	460c      	mov	r4, r1
 800b14a:	b929      	cbnz	r1, 800b158 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x14>
 800b14c:	4b0c      	ldr	r3, [pc, #48]	; (800b180 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x3c>)
 800b14e:	4a0d      	ldr	r2, [pc, #52]	; (800b184 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x40>)
 800b150:	480d      	ldr	r0, [pc, #52]	; (800b188 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x44>)
 800b152:	2166      	movs	r1, #102	; 0x66
 800b154:	f00d fd4a 	bl	8018bec <__assert_func>
 800b158:	4d0c      	ldr	r5, [pc, #48]	; (800b18c <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x48>)
 800b15a:	2300      	movs	r3, #0
 800b15c:	f8a0 3084 	strh.w	r3, [r0, #132]	; 0x84
 800b160:	6828      	ldr	r0, [r5, #0]
 800b162:	b110      	cbz	r0, 800b16a <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x26>
 800b164:	6803      	ldr	r3, [r0, #0]
 800b166:	695b      	ldr	r3, [r3, #20]
 800b168:	4798      	blx	r3
 800b16a:	602c      	str	r4, [r5, #0]
 800b16c:	6823      	ldr	r3, [r4, #0]
 800b16e:	4620      	mov	r0, r4
 800b170:	68db      	ldr	r3, [r3, #12]
 800b172:	4798      	blx	r3
 800b174:	6833      	ldr	r3, [r6, #0]
 800b176:	4630      	mov	r0, r6
 800b178:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800b17a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800b17e:	4718      	bx	r3
 800b180:	0801bbd0 	.word	0x0801bbd0
 800b184:	0801bca0 	.word	0x0801bca0
 800b188:	0801bbda 	.word	0x0801bbda
 800b18c:	200121e8 	.word	0x200121e8

0800b190 <_ZNK8touchgfx4Rect9intersectERKS0_>:
 800b190:	b510      	push	{r4, lr}
 800b192:	f9b1 4000 	ldrsh.w	r4, [r1]
 800b196:	888a      	ldrh	r2, [r1, #4]
 800b198:	f9b0 3000 	ldrsh.w	r3, [r0]
 800b19c:	4422      	add	r2, r4
 800b19e:	b212      	sxth	r2, r2
 800b1a0:	4293      	cmp	r3, r2
 800b1a2:	da15      	bge.n	800b1d0 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 800b1a4:	8882      	ldrh	r2, [r0, #4]
 800b1a6:	4413      	add	r3, r2
 800b1a8:	b21b      	sxth	r3, r3
 800b1aa:	429c      	cmp	r4, r3
 800b1ac:	da10      	bge.n	800b1d0 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 800b1ae:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 800b1b2:	88c9      	ldrh	r1, [r1, #6]
 800b1b4:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 800b1b8:	4419      	add	r1, r3
 800b1ba:	b209      	sxth	r1, r1
 800b1bc:	428a      	cmp	r2, r1
 800b1be:	da07      	bge.n	800b1d0 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 800b1c0:	88c0      	ldrh	r0, [r0, #6]
 800b1c2:	4410      	add	r0, r2
 800b1c4:	b200      	sxth	r0, r0
 800b1c6:	4283      	cmp	r3, r0
 800b1c8:	bfac      	ite	ge
 800b1ca:	2000      	movge	r0, #0
 800b1cc:	2001      	movlt	r0, #1
 800b1ce:	bd10      	pop	{r4, pc}
 800b1d0:	2000      	movs	r0, #0
 800b1d2:	e7fc      	b.n	800b1ce <_ZNK8touchgfx4Rect9intersectERKS0_+0x3e>

0800b1d4 <_ZNK8touchgfx4Rect8includesERKS0_>:
 800b1d4:	b570      	push	{r4, r5, r6, lr}
 800b1d6:	f9b1 4000 	ldrsh.w	r4, [r1]
 800b1da:	f9b0 5000 	ldrsh.w	r5, [r0]
 800b1de:	42ac      	cmp	r4, r5
 800b1e0:	db18      	blt.n	800b214 <_ZNK8touchgfx4Rect8includesERKS0_+0x40>
 800b1e2:	f9b1 2002 	ldrsh.w	r2, [r1, #2]
 800b1e6:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 800b1ea:	429a      	cmp	r2, r3
 800b1ec:	db12      	blt.n	800b214 <_ZNK8touchgfx4Rect8includesERKS0_+0x40>
 800b1ee:	8886      	ldrh	r6, [r0, #4]
 800b1f0:	4435      	add	r5, r6
 800b1f2:	888e      	ldrh	r6, [r1, #4]
 800b1f4:	4434      	add	r4, r6
 800b1f6:	b22d      	sxth	r5, r5
 800b1f8:	b224      	sxth	r4, r4
 800b1fa:	42a5      	cmp	r5, r4
 800b1fc:	db0a      	blt.n	800b214 <_ZNK8touchgfx4Rect8includesERKS0_+0x40>
 800b1fe:	88c0      	ldrh	r0, [r0, #6]
 800b200:	4418      	add	r0, r3
 800b202:	88cb      	ldrh	r3, [r1, #6]
 800b204:	441a      	add	r2, r3
 800b206:	b200      	sxth	r0, r0
 800b208:	b212      	sxth	r2, r2
 800b20a:	4290      	cmp	r0, r2
 800b20c:	bfb4      	ite	lt
 800b20e:	2000      	movlt	r0, #0
 800b210:	2001      	movge	r0, #1
 800b212:	bd70      	pop	{r4, r5, r6, pc}
 800b214:	2000      	movs	r0, #0
 800b216:	e7fc      	b.n	800b212 <_ZNK8touchgfx4Rect8includesERKS0_+0x3e>

0800b218 <_ZN8touchgfx4Rect11expandToFitERKS0_>:
 800b218:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800b21a:	4604      	mov	r4, r0
 800b21c:	4608      	mov	r0, r1
 800b21e:	460d      	mov	r5, r1
 800b220:	f7fd fa53 	bl	80086ca <_ZNK8touchgfx4Rect7isEmptyEv>
 800b224:	b978      	cbnz	r0, 800b246 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
 800b226:	4620      	mov	r0, r4
 800b228:	f7fd fa4f 	bl	80086ca <_ZNK8touchgfx4Rect7isEmptyEv>
 800b22c:	f9b5 6000 	ldrsh.w	r6, [r5]
 800b230:	b150      	cbz	r0, 800b248 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x30>
 800b232:	8026      	strh	r6, [r4, #0]
 800b234:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 800b238:	8063      	strh	r3, [r4, #2]
 800b23a:	f9b5 3004 	ldrsh.w	r3, [r5, #4]
 800b23e:	80a3      	strh	r3, [r4, #4]
 800b240:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 800b244:	80e3      	strh	r3, [r4, #6]
 800b246:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800b248:	f9b4 1000 	ldrsh.w	r1, [r4]
 800b24c:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 800b250:	f9b4 3002 	ldrsh.w	r3, [r4, #2]
 800b254:	f8b5 c004 	ldrh.w	ip, [r5, #4]
 800b258:	88ed      	ldrh	r5, [r5, #6]
 800b25a:	42b1      	cmp	r1, r6
 800b25c:	460f      	mov	r7, r1
 800b25e:	bfa8      	it	ge
 800b260:	4637      	movge	r7, r6
 800b262:	4293      	cmp	r3, r2
 800b264:	4618      	mov	r0, r3
 800b266:	4466      	add	r6, ip
 800b268:	bfa8      	it	ge
 800b26a:	4610      	movge	r0, r2
 800b26c:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 800b270:	8027      	strh	r7, [r4, #0]
 800b272:	442a      	add	r2, r5
 800b274:	88e5      	ldrh	r5, [r4, #6]
 800b276:	8060      	strh	r0, [r4, #2]
 800b278:	4461      	add	r1, ip
 800b27a:	442b      	add	r3, r5
 800b27c:	b236      	sxth	r6, r6
 800b27e:	b209      	sxth	r1, r1
 800b280:	b212      	sxth	r2, r2
 800b282:	b21b      	sxth	r3, r3
 800b284:	428e      	cmp	r6, r1
 800b286:	bfac      	ite	ge
 800b288:	ebc7 0106 	rsbge	r1, r7, r6
 800b28c:	ebc7 0101 	rsblt	r1, r7, r1
 800b290:	429a      	cmp	r2, r3
 800b292:	bfac      	ite	ge
 800b294:	ebc0 0202 	rsbge	r2, r0, r2
 800b298:	ebc0 0203 	rsblt	r2, r0, r3
 800b29c:	80a1      	strh	r1, [r4, #4]
 800b29e:	80e2      	strh	r2, [r4, #6]
 800b2a0:	e7d1      	b.n	800b246 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
	...

0800b2a4 <_ZN8touchgfx11Application11getInstanceEv>:
 800b2a4:	4b01      	ldr	r3, [pc, #4]	; (800b2ac <_ZN8touchgfx11Application11getInstanceEv+0x8>)
 800b2a6:	6818      	ldr	r0, [r3, #0]
 800b2a8:	4770      	bx	lr
 800b2aa:	bf00      	nop
 800b2ac:	200121f8 	.word	0x200121f8

0800b2b0 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>:
 800b2b0:	2300      	movs	r3, #0
 800b2b2:	f8a0 3084 	strh.w	r3, [r0, #132]	; 0x84
 800b2b6:	f100 0288 	add.w	r2, r0, #136	; 0x88
 800b2ba:	30a8      	adds	r0, #168	; 0xa8
 800b2bc:	f802 3b01 	strb.w	r3, [r2], #1
 800b2c0:	4282      	cmp	r2, r0
 800b2c2:	d1fb      	bne.n	800b2bc <_ZN8touchgfx11Application20clearAllTimerWidgetsEv+0xc>
 800b2c4:	4770      	bx	lr

0800b2c6 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>:
 800b2c6:	4603      	mov	r3, r0
 800b2c8:	f100 0140 	add.w	r1, r0, #64	; 0x40
 800b2cc:	2200      	movs	r2, #0
 800b2ce:	801a      	strh	r2, [r3, #0]
 800b2d0:	805a      	strh	r2, [r3, #2]
 800b2d2:	809a      	strh	r2, [r3, #4]
 800b2d4:	80da      	strh	r2, [r3, #6]
 800b2d6:	3308      	adds	r3, #8
 800b2d8:	428b      	cmp	r3, r1
 800b2da:	d1f8      	bne.n	800b2ce <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev+0x8>
 800b2dc:	f8a0 2040 	strh.w	r2, [r0, #64]	; 0x40
 800b2e0:	4770      	bx	lr
	...

0800b2e4 <_ZN8touchgfx11ApplicationC1Ev>:
 800b2e4:	b570      	push	{r4, r5, r6, lr}
 800b2e6:	4b1a      	ldr	r3, [pc, #104]	; (800b350 <_ZN8touchgfx11ApplicationC1Ev+0x6c>)
 800b2e8:	6003      	str	r3, [r0, #0]
 800b2ea:	2500      	movs	r5, #0
 800b2ec:	4604      	mov	r4, r0
 800b2ee:	f8a0 5084 	strh.w	r5, [r0, #132]	; 0x84
 800b2f2:	30a8      	adds	r0, #168	; 0xa8
 800b2f4:	f7ff ffe7 	bl	800b2c6 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 800b2f8:	f104 00ea 	add.w	r0, r4, #234	; 0xea
 800b2fc:	f7ff ffe3 	bl	800b2c6 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 800b300:	f8a4 512c 	strh.w	r5, [r4, #300]	; 0x12c
 800b304:	f8a4 512e 	strh.w	r5, [r4, #302]	; 0x12e
 800b308:	f8a4 5130 	strh.w	r5, [r4, #304]	; 0x130
 800b30c:	f8a4 5132 	strh.w	r5, [r4, #306]	; 0x132
 800b310:	f884 5134 	strb.w	r5, [r4, #308]	; 0x134
 800b314:	f884 5135 	strb.w	r5, [r4, #309]	; 0x135
 800b318:	490e      	ldr	r1, [pc, #56]	; (800b354 <_ZN8touchgfx11ApplicationC1Ev+0x70>)
 800b31a:	480f      	ldr	r0, [pc, #60]	; (800b358 <_ZN8touchgfx11ApplicationC1Ev+0x74>)
 800b31c:	4e0f      	ldr	r6, [pc, #60]	; (800b35c <_ZN8touchgfx11ApplicationC1Ev+0x78>)
 800b31e:	f00d fb09 	bl	8018934 <CRC_Lock>
 800b322:	4b0f      	ldr	r3, [pc, #60]	; (800b360 <_ZN8touchgfx11ApplicationC1Ev+0x7c>)
 800b324:	b158      	cbz	r0, 800b33e <_ZN8touchgfx11ApplicationC1Ev+0x5a>
 800b326:	801d      	strh	r5, [r3, #0]
 800b328:	4a0e      	ldr	r2, [pc, #56]	; (800b364 <_ZN8touchgfx11ApplicationC1Ev+0x80>)
 800b32a:	2300      	movs	r3, #0
 800b32c:	6013      	str	r3, [r2, #0]
 800b32e:	4a0e      	ldr	r2, [pc, #56]	; (800b368 <_ZN8touchgfx11ApplicationC1Ev+0x84>)
 800b330:	6033      	str	r3, [r6, #0]
 800b332:	4620      	mov	r0, r4
 800b334:	6013      	str	r3, [r2, #0]
 800b336:	f7ff ffbb 	bl	800b2b0 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
 800b33a:	4620      	mov	r0, r4
 800b33c:	bd70      	pop	{r4, r5, r6, pc}
 800b33e:	f44f 6280 	mov.w	r2, #1024	; 0x400
 800b342:	2002      	movs	r0, #2
 800b344:	801a      	strh	r2, [r3, #0]
 800b346:	6030      	str	r0, [r6, #0]
 800b348:	f000 fff0 	bl	800c32c <_ZN8touchgfx6Screen4drawEv>
 800b34c:	e7ec      	b.n	800b328 <_ZN8touchgfx11ApplicationC1Ev+0x44>
 800b34e:	bf00      	nop
 800b350:	0801bc64 	.word	0x0801bc64
 800b354:	b5e8b5cd 	.word	0xb5e8b5cd
 800b358:	f407a5c2 	.word	0xf407a5c2
 800b35c:	200121e8 	.word	0x200121e8
 800b360:	20000084 	.word	0x20000084
 800b364:	200121f8 	.word	0x200121f8
 800b368:	200121ec 	.word	0x200121ec

0800b36c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>:
 800b36c:	2300      	movs	r3, #0
 800b36e:	8003      	strh	r3, [r0, #0]
 800b370:	8043      	strh	r3, [r0, #2]
 800b372:	8083      	strh	r3, [r0, #4]
 800b374:	80c3      	strh	r3, [r0, #6]
 800b376:	f8b1 3040 	ldrh.w	r3, [r1, #64]	; 0x40
 800b37a:	4293      	cmp	r3, r2
 800b37c:	b530      	push	{r4, r5, lr}
 800b37e:	d912      	bls.n	800b3a6 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x3a>
 800b380:	eb01 04c2 	add.w	r4, r1, r2, lsl #3
 800b384:	3b01      	subs	r3, #1
 800b386:	6825      	ldr	r5, [r4, #0]
 800b388:	6005      	str	r5, [r0, #0]
 800b38a:	b29b      	uxth	r3, r3
 800b38c:	6865      	ldr	r5, [r4, #4]
 800b38e:	6045      	str	r5, [r0, #4]
 800b390:	4293      	cmp	r3, r2
 800b392:	f8a1 3040 	strh.w	r3, [r1, #64]	; 0x40
 800b396:	d906      	bls.n	800b3a6 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x3a>
 800b398:	eb01 03c3 	add.w	r3, r1, r3, lsl #3
 800b39c:	681d      	ldr	r5, [r3, #0]
 800b39e:	f841 5032 	str.w	r5, [r1, r2, lsl #3]
 800b3a2:	685d      	ldr	r5, [r3, #4]
 800b3a4:	6065      	str	r5, [r4, #4]
 800b3a6:	bd30      	pop	{r4, r5, pc}

0800b3a8 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_>:
 800b3a8:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800b3aa:	466b      	mov	r3, sp
 800b3ac:	e883 0006 	stmia.w	r3, {r1, r2}
 800b3b0:	f8b0 2040 	ldrh.w	r2, [r0, #64]	; 0x40
 800b3b4:	2a07      	cmp	r2, #7
 800b3b6:	4604      	mov	r4, r0
 800b3b8:	d906      	bls.n	800b3c8 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_+0x20>
 800b3ba:	4b09      	ldr	r3, [pc, #36]	; (800b3e0 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_+0x38>)
 800b3bc:	4a09      	ldr	r2, [pc, #36]	; (800b3e4 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_+0x3c>)
 800b3be:	480a      	ldr	r0, [pc, #40]	; (800b3e8 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_+0x40>)
 800b3c0:	f240 118f 	movw	r1, #399	; 0x18f
 800b3c4:	f00d fc12 	bl	8018bec <__assert_func>
 800b3c8:	1c51      	adds	r1, r2, #1
 800b3ca:	f8a0 1040 	strh.w	r1, [r0, #64]	; 0x40
 800b3ce:	eb00 05c2 	add.w	r5, r0, r2, lsl #3
 800b3d2:	cb03      	ldmia	r3!, {r0, r1}
 800b3d4:	f844 0032 	str.w	r0, [r4, r2, lsl #3]
 800b3d8:	6069      	str	r1, [r5, #4]
 800b3da:	b003      	add	sp, #12
 800b3dc:	bd30      	pop	{r4, r5, pc}
 800b3de:	bf00      	nop
 800b3e0:	0801bc04 	.word	0x0801bc04
 800b3e4:	0801bce4 	.word	0x0801bce4
 800b3e8:	0801bc33 	.word	0x0801bc33

0800b3ec <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>:
 800b3ec:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800b3f0:	b089      	sub	sp, #36	; 0x24
 800b3f2:	466c      	mov	r4, sp
 800b3f4:	4606      	mov	r6, r0
 800b3f6:	4620      	mov	r0, r4
 800b3f8:	e884 0006 	stmia.w	r4, {r1, r2}
 800b3fc:	f7fd f965 	bl	80086ca <_ZNK8touchgfx4Rect7isEmptyEv>
 800b400:	bbb0      	cbnz	r0, 800b470 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x84>
 800b402:	f8b6 50e8 	ldrh.w	r5, [r6, #232]	; 0xe8
 800b406:	b1fd      	cbz	r5, 800b448 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5c>
 800b408:	3d01      	subs	r5, #1
 800b40a:	af04      	add	r7, sp, #16
 800b40c:	f04f 090a 	mov.w	r9, #10
 800b410:	eb06 02c5 	add.w	r2, r6, r5, lsl #3
 800b414:	ab02      	add	r3, sp, #8
 800b416:	f852 0fa8 	ldr.w	r0, [r2, #168]!
 800b41a:	6851      	ldr	r1, [r2, #4]
 800b41c:	c303      	stmia	r3!, {r0, r1}
 800b41e:	4621      	mov	r1, r4
 800b420:	a802      	add	r0, sp, #8
 800b422:	fa1f f885 	uxth.w	r8, r5
 800b426:	f7ff fed5 	bl	800b1d4 <_ZNK8touchgfx4Rect8includesERKS0_>
 800b42a:	bb08      	cbnz	r0, 800b470 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x84>
 800b42c:	a902      	add	r1, sp, #8
 800b42e:	4620      	mov	r0, r4
 800b430:	f7ff fed0 	bl	800b1d4 <_ZNK8touchgfx4Rect8includesERKS0_>
 800b434:	b1f8      	cbz	r0, 800b476 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x8a>
 800b436:	4642      	mov	r2, r8
 800b438:	f106 01a8 	add.w	r1, r6, #168	; 0xa8
 800b43c:	a806      	add	r0, sp, #24
 800b43e:	f7ff ff95 	bl	800b36c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800b442:	f115 35ff 	adds.w	r5, r5, #4294967295
 800b446:	d2e3      	bcs.n	800b410 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x24>
 800b448:	f8b6 30e8 	ldrh.w	r3, [r6, #232]	; 0xe8
 800b44c:	2b08      	cmp	r3, #8
 800b44e:	f106 05a8 	add.w	r5, r6, #168	; 0xa8
 800b452:	d108      	bne.n	800b466 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x7a>
 800b454:	4629      	mov	r1, r5
 800b456:	a806      	add	r0, sp, #24
 800b458:	2207      	movs	r2, #7
 800b45a:	f7ff ff87 	bl	800b36c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800b45e:	a906      	add	r1, sp, #24
 800b460:	4620      	mov	r0, r4
 800b462:	f7ff fed9 	bl	800b218 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 800b466:	e894 0006 	ldmia.w	r4, {r1, r2}
 800b46a:	4628      	mov	r0, r5
 800b46c:	f7ff ff9c 	bl	800b3a8 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_>
 800b470:	b009      	add	sp, #36	; 0x24
 800b472:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800b476:	4621      	mov	r1, r4
 800b478:	a802      	add	r0, sp, #8
 800b47a:	f7ff fe89 	bl	800b190 <_ZNK8touchgfx4Rect9intersectERKS0_>
 800b47e:	b150      	cbz	r0, 800b496 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xaa>
 800b480:	f106 01a8 	add.w	r1, r6, #168	; 0xa8
 800b484:	a806      	add	r0, sp, #24
 800b486:	4642      	mov	r2, r8
 800b488:	f7ff ff70 	bl	800b36c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800b48c:	a902      	add	r1, sp, #8
 800b48e:	4620      	mov	r0, r4
 800b490:	f7ff fec2 	bl	800b218 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 800b494:	e7d5      	b.n	800b442 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x56>
 800b496:	e894 0003 	ldmia.w	r4, {r0, r1}
 800b49a:	e887 0003 	stmia.w	r7, {r0, r1}
 800b49e:	a902      	add	r1, sp, #8
 800b4a0:	4638      	mov	r0, r7
 800b4a2:	f7ff feb9 	bl	800b218 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 800b4a6:	f8bd 2016 	ldrh.w	r2, [sp, #22]
 800b4aa:	f8bd 3014 	ldrh.w	r3, [sp, #20]
 800b4ae:	f8bd 100c 	ldrh.w	r1, [sp, #12]
 800b4b2:	f8bd 0006 	ldrh.w	r0, [sp, #6]
 800b4b6:	fb13 f302 	smulbb	r3, r3, r2
 800b4ba:	f8bd 200e 	ldrh.w	r2, [sp, #14]
 800b4be:	fb11 f102 	smulbb	r1, r1, r2
 800b4c2:	f8bd 2004 	ldrh.w	r2, [sp, #4]
 800b4c6:	fb12 1100 	smlabb	r1, r2, r0, r1
 800b4ca:	220b      	movs	r2, #11
 800b4cc:	fb09 f303 	mul.w	r3, r9, r3
 800b4d0:	434a      	muls	r2, r1
 800b4d2:	4293      	cmp	r3, r2
 800b4d4:	dab5      	bge.n	800b442 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x56>
 800b4d6:	f106 01a8 	add.w	r1, r6, #168	; 0xa8
 800b4da:	a806      	add	r0, sp, #24
 800b4dc:	4642      	mov	r2, r8
 800b4de:	f7ff ff45 	bl	800b36c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800b4e2:	e897 0003 	ldmia.w	r7, {r0, r1}
 800b4e6:	e884 0003 	stmia.w	r4, {r0, r1}
 800b4ea:	e7aa      	b.n	800b442 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x56>

0800b4ec <_ZN8touchgfx11Application4drawERNS_4RectE>:
 800b4ec:	b530      	push	{r4, r5, lr}
 800b4ee:	4b1d      	ldr	r3, [pc, #116]	; (800b564 <_ZN8touchgfx11Application4drawERNS_4RectE+0x78>)
 800b4f0:	b085      	sub	sp, #20
 800b4f2:	460c      	mov	r4, r1
 800b4f4:	f9b3 2000 	ldrsh.w	r2, [r3]
 800b4f8:	4b1b      	ldr	r3, [pc, #108]	; (800b568 <_ZN8touchgfx11Application4drawERNS_4RectE+0x7c>)
 800b4fa:	f8ad 2004 	strh.w	r2, [sp, #4]
 800b4fe:	2100      	movs	r1, #0
 800b500:	f9b3 3000 	ldrsh.w	r3, [r3]
 800b504:	9100      	str	r1, [sp, #0]
 800b506:	4605      	mov	r5, r0
 800b508:	6861      	ldr	r1, [r4, #4]
 800b50a:	6820      	ldr	r0, [r4, #0]
 800b50c:	f8ad 3006 	strh.w	r3, [sp, #6]
 800b510:	ab02      	add	r3, sp, #8
 800b512:	c303      	stmia	r3!, {r0, r1}
 800b514:	4669      	mov	r1, sp
 800b516:	a802      	add	r0, sp, #8
 800b518:	f7fd f894 	bl	8008644 <_ZN8touchgfx4RectaNERKS0_>
 800b51c:	ab02      	add	r3, sp, #8
 800b51e:	cb03      	ldmia	r3!, {r0, r1}
 800b520:	4b12      	ldr	r3, [pc, #72]	; (800b56c <_ZN8touchgfx11Application4drawERNS_4RectE+0x80>)
 800b522:	6020      	str	r0, [r4, #0]
 800b524:	6818      	ldr	r0, [r3, #0]
 800b526:	6061      	str	r1, [r4, #4]
 800b528:	b138      	cbz	r0, 800b53a <_ZN8touchgfx11Application4drawERNS_4RectE+0x4e>
 800b52a:	f895 3134 	ldrb.w	r3, [r5, #308]	; 0x134
 800b52e:	b133      	cbz	r3, 800b53e <_ZN8touchgfx11Application4drawERNS_4RectE+0x52>
 800b530:	6821      	ldr	r1, [r4, #0]
 800b532:	6862      	ldr	r2, [r4, #4]
 800b534:	4628      	mov	r0, r5
 800b536:	f7ff ff59 	bl	800b3ec <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 800b53a:	b005      	add	sp, #20
 800b53c:	bd30      	pop	{r4, r5, pc}
 800b53e:	6803      	ldr	r3, [r0, #0]
 800b540:	4621      	mov	r1, r4
 800b542:	689b      	ldr	r3, [r3, #8]
 800b544:	4798      	blx	r3
 800b546:	4b0a      	ldr	r3, [pc, #40]	; (800b570 <_ZN8touchgfx11Application4drawERNS_4RectE+0x84>)
 800b548:	6818      	ldr	r0, [r3, #0]
 800b54a:	b118      	cbz	r0, 800b554 <_ZN8touchgfx11Application4drawERNS_4RectE+0x68>
 800b54c:	6803      	ldr	r3, [r0, #0]
 800b54e:	4621      	mov	r1, r4
 800b550:	689b      	ldr	r3, [r3, #8]
 800b552:	4798      	blx	r3
 800b554:	4b07      	ldr	r3, [pc, #28]	; (800b574 <_ZN8touchgfx11Application4drawERNS_4RectE+0x88>)
 800b556:	6818      	ldr	r0, [r3, #0]
 800b558:	6803      	ldr	r3, [r0, #0]
 800b55a:	4621      	mov	r1, r4
 800b55c:	695b      	ldr	r3, [r3, #20]
 800b55e:	4798      	blx	r3
 800b560:	e7eb      	b.n	800b53a <_ZN8touchgfx11Application4drawERNS_4RectE+0x4e>
 800b562:	bf00      	nop
 800b564:	20012180 	.word	0x20012180
 800b568:	20012182 	.word	0x20012182
 800b56c:	200121e8 	.word	0x200121e8
 800b570:	200121e4 	.word	0x200121e4
 800b574:	2001218c 	.word	0x2001218c

0800b578 <_ZN8touchgfx11Application19cacheDrawOperationsEb>:
 800b578:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b57c:	4604      	mov	r4, r0
 800b57e:	b09b      	sub	sp, #108	; 0x6c
 800b580:	f880 1134 	strb.w	r1, [r0, #308]	; 0x134
 800b584:	b129      	cbz	r1, 800b592 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1a>
 800b586:	2300      	movs	r3, #0
 800b588:	f8a0 30e8 	strh.w	r3, [r0, #232]	; 0xe8
 800b58c:	b01b      	add	sp, #108	; 0x6c
 800b58e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800b592:	f500 7696 	add.w	r6, r0, #300	; 0x12c
 800b596:	4630      	mov	r0, r6
 800b598:	f7fd f897 	bl	80086ca <_ZNK8touchgfx4Rect7isEmptyEv>
 800b59c:	4605      	mov	r5, r0
 800b59e:	b940      	cbnz	r0, 800b5b2 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x3a>
 800b5a0:	e896 0006 	ldmia.w	r6, {r1, r2}
 800b5a4:	4620      	mov	r0, r4
 800b5a6:	f7ff ff21 	bl	800b3ec <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 800b5aa:	f8c4 512c 	str.w	r5, [r4, #300]	; 0x12c
 800b5ae:	f8c4 5130 	str.w	r5, [r4, #304]	; 0x130
 800b5b2:	4b92      	ldr	r3, [pc, #584]	; (800b7fc <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x284>)
 800b5b4:	681b      	ldr	r3, [r3, #0]
 800b5b6:	b33b      	cbz	r3, 800b608 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x90>
 800b5b8:	4d91      	ldr	r5, [pc, #580]	; (800b800 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x288>)
 800b5ba:	4628      	mov	r0, r5
 800b5bc:	f7fd f885 	bl	80086ca <_ZNK8touchgfx4Rect7isEmptyEv>
 800b5c0:	4606      	mov	r6, r0
 800b5c2:	bb08      	cbnz	r0, 800b608 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x90>
 800b5c4:	4628      	mov	r0, r5
 800b5c6:	f7ff fc7f 	bl	800aec8 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 800b5ca:	6829      	ldr	r1, [r5, #0]
 800b5cc:	686a      	ldr	r2, [r5, #4]
 800b5ce:	4620      	mov	r0, r4
 800b5d0:	f7ff ff0c 	bl	800b3ec <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 800b5d4:	802e      	strh	r6, [r5, #0]
 800b5d6:	806e      	strh	r6, [r5, #2]
 800b5d8:	80ae      	strh	r6, [r5, #4]
 800b5da:	80ee      	strh	r6, [r5, #6]
 800b5dc:	4f89      	ldr	r7, [pc, #548]	; (800b804 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x28c>)
 800b5de:	a809      	add	r0, sp, #36	; 0x24
 800b5e0:	f7ff fe71 	bl	800b2c6 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 800b5e4:	883d      	ldrh	r5, [r7, #0]
 800b5e6:	462e      	mov	r6, r5
 800b5e8:	f8b4 30e8 	ldrh.w	r3, [r4, #232]	; 0xe8
 800b5ec:	42b3      	cmp	r3, r6
 800b5ee:	d910      	bls.n	800b612 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x9a>
 800b5f0:	eb04 03c6 	add.w	r3, r4, r6, lsl #3
 800b5f4:	a809      	add	r0, sp, #36	; 0x24
 800b5f6:	f8d3 10a8 	ldr.w	r1, [r3, #168]	; 0xa8
 800b5fa:	f8d3 20ac 	ldr.w	r2, [r3, #172]	; 0xac
 800b5fe:	3601      	adds	r6, #1
 800b600:	f7ff fed2 	bl	800b3a8 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_>
 800b604:	b2b6      	uxth	r6, r6
 800b606:	e7ef      	b.n	800b5e8 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x70>
 800b608:	f8b4 30e8 	ldrh.w	r3, [r4, #232]	; 0xe8
 800b60c:	2b00      	cmp	r3, #0
 800b60e:	d1e5      	bne.n	800b5dc <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x64>
 800b610:	e7bc      	b.n	800b58c <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x14>
 800b612:	462e      	mov	r6, r5
 800b614:	f8b4 312a 	ldrh.w	r3, [r4, #298]	; 0x12a
 800b618:	42b3      	cmp	r3, r6
 800b61a:	d90b      	bls.n	800b634 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0xbc>
 800b61c:	eb04 03c6 	add.w	r3, r4, r6, lsl #3
 800b620:	4620      	mov	r0, r4
 800b622:	f8d3 10ea 	ldr.w	r1, [r3, #234]	; 0xea
 800b626:	f8d3 20ee 	ldr.w	r2, [r3, #238]	; 0xee
 800b62a:	3601      	adds	r6, #1
 800b62c:	f7ff fede 	bl	800b3ec <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 800b630:	b2b6      	uxth	r6, r6
 800b632:	e7ef      	b.n	800b614 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x9c>
 800b634:	4a74      	ldr	r2, [pc, #464]	; (800b808 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x290>)
 800b636:	6813      	ldr	r3, [r2, #0]
 800b638:	f893 3048 	ldrb.w	r3, [r3, #72]	; 0x48
 800b63c:	2b01      	cmp	r3, #1
 800b63e:	4690      	mov	r8, r2
 800b640:	f040 8094 	bne.w	800b76c <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1f4>
 800b644:	eb04 03c5 	add.w	r3, r4, r5, lsl #3
 800b648:	f8b4 00e8 	ldrh.w	r0, [r4, #232]	; 0xe8
 800b64c:	33aa      	adds	r3, #170	; 0xaa
 800b64e:	f04f 0900 	mov.w	r9, #0
 800b652:	42a8      	cmp	r0, r5
 800b654:	f103 0308 	add.w	r3, r3, #8
 800b658:	dd0a      	ble.n	800b670 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0xf8>
 800b65a:	f833 2c08 	ldrh.w	r2, [r3, #-8]
 800b65e:	f833 1c04 	ldrh.w	r1, [r3, #-4]
 800b662:	440a      	add	r2, r1
 800b664:	b212      	sxth	r2, r2
 800b666:	4591      	cmp	r9, r2
 800b668:	bfb8      	it	lt
 800b66a:	4691      	movlt	r9, r2
 800b66c:	3501      	adds	r5, #1
 800b66e:	e7f0      	b.n	800b652 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0xda>
 800b670:	4b66      	ldr	r3, [pc, #408]	; (800b80c <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x294>)
 800b672:	4e67      	ldr	r6, [pc, #412]	; (800b810 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x298>)
 800b674:	881d      	ldrh	r5, [r3, #0]
 800b676:	2300      	movs	r3, #0
 800b678:	e9cd 3305 	strd	r3, r3, [sp, #20]
 800b67c:	2d0f      	cmp	r5, #15
 800b67e:	bf8c      	ite	hi
 800b680:	08ed      	lsrhi	r5, r5, #3
 800b682:	2501      	movls	r5, #1
 800b684:	f8bd 3016 	ldrh.w	r3, [sp, #22]
 800b688:	f8bd 101a 	ldrh.w	r1, [sp, #26]
 800b68c:	f8d8 0000 	ldr.w	r0, [r8]
 800b690:	440b      	add	r3, r1
 800b692:	b21b      	sxth	r3, r3
 800b694:	4599      	cmp	r9, r3
 800b696:	6802      	ldr	r2, [r0, #0]
 800b698:	dd4b      	ble.n	800b732 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1ba>
 800b69a:	f8d2 3084 	ldr.w	r3, [r2, #132]	; 0x84
 800b69e:	4798      	blx	r3
 800b6a0:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 800b6a4:	f8bd 3016 	ldrh.w	r3, [sp, #22]
 800b6a8:	4413      	add	r3, r2
 800b6aa:	b21b      	sxth	r3, r3
 800b6ac:	195a      	adds	r2, r3, r5
 800b6ae:	4290      	cmp	r0, r2
 800b6b0:	da07      	bge.n	800b6c2 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x14a>
 800b6b2:	4581      	cmp	r9, r0
 800b6b4:	dd05      	ble.n	800b6c2 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x14a>
 800b6b6:	4298      	cmp	r0, r3
 800b6b8:	da33      	bge.n	800b722 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1aa>
 800b6ba:	2b00      	cmp	r3, #0
 800b6bc:	dd31      	ble.n	800b722 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1aa>
 800b6be:	4648      	mov	r0, r9
 800b6c0:	e004      	b.n	800b6cc <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x154>
 800b6c2:	4298      	cmp	r0, r3
 800b6c4:	dbfb      	blt.n	800b6be <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x146>
 800b6c6:	4548      	cmp	r0, r9
 800b6c8:	bfa8      	it	ge
 800b6ca:	4648      	movge	r0, r9
 800b6cc:	f9b6 2000 	ldrsh.w	r2, [r6]
 800b6d0:	f8b7 a000 	ldrh.w	sl, [r7]
 800b6d4:	f8ad 3016 	strh.w	r3, [sp, #22]
 800b6d8:	2100      	movs	r1, #0
 800b6da:	1ac0      	subs	r0, r0, r3
 800b6dc:	f8ad 1014 	strh.w	r1, [sp, #20]
 800b6e0:	f8ad 2018 	strh.w	r2, [sp, #24]
 800b6e4:	f8ad 001a 	strh.w	r0, [sp, #26]
 800b6e8:	f8b4 30e8 	ldrh.w	r3, [r4, #232]	; 0xe8
 800b6ec:	4553      	cmp	r3, sl
 800b6ee:	d9c9      	bls.n	800b684 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x10c>
 800b6f0:	eb04 02ca 	add.w	r2, r4, sl, lsl #3
 800b6f4:	ab07      	add	r3, sp, #28
 800b6f6:	f852 0fa8 	ldr.w	r0, [r2, #168]!
 800b6fa:	6851      	ldr	r1, [r2, #4]
 800b6fc:	c303      	stmia	r3!, {r0, r1}
 800b6fe:	a807      	add	r0, sp, #28
 800b700:	a905      	add	r1, sp, #20
 800b702:	f7fc ff9f 	bl	8008644 <_ZN8touchgfx4RectaNERKS0_>
 800b706:	a807      	add	r0, sp, #28
 800b708:	f7fc ffdf 	bl	80086ca <_ZNK8touchgfx4Rect7isEmptyEv>
 800b70c:	b920      	cbnz	r0, 800b718 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1a0>
 800b70e:	6823      	ldr	r3, [r4, #0]
 800b710:	a907      	add	r1, sp, #28
 800b712:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800b714:	4620      	mov	r0, r4
 800b716:	4798      	blx	r3
 800b718:	f10a 0a01 	add.w	sl, sl, #1
 800b71c:	fa1f fa8a 	uxth.w	sl, sl
 800b720:	e7e2      	b.n	800b6e8 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x170>
 800b722:	f8d8 0000 	ldr.w	r0, [r8]
 800b726:	6803      	ldr	r3, [r0, #0]
 800b728:	2101      	movs	r1, #1
 800b72a:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800b72e:	4798      	blx	r3
 800b730:	e7a8      	b.n	800b684 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x10c>
 800b732:	69d3      	ldr	r3, [r2, #28]
 800b734:	4798      	blx	r3
 800b736:	4b37      	ldr	r3, [pc, #220]	; (800b814 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x29c>)
 800b738:	781b      	ldrb	r3, [r3, #0]
 800b73a:	2b00      	cmp	r3, #0
 800b73c:	f43f af26 	beq.w	800b58c <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x14>
 800b740:	2300      	movs	r3, #0
 800b742:	883d      	ldrh	r5, [r7, #0]
 800b744:	f8a4 312a 	strh.w	r3, [r4, #298]	; 0x12a
 800b748:	34ea      	adds	r4, #234	; 0xea
 800b74a:	f8bd 3064 	ldrh.w	r3, [sp, #100]	; 0x64
 800b74e:	42ab      	cmp	r3, r5
 800b750:	f67f af1c 	bls.w	800b58c <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x14>
 800b754:	ab1a      	add	r3, sp, #104	; 0x68
 800b756:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 800b75a:	3b44      	subs	r3, #68	; 0x44
 800b75c:	e893 0006 	ldmia.w	r3, {r1, r2}
 800b760:	4620      	mov	r0, r4
 800b762:	3501      	adds	r5, #1
 800b764:	f7ff fe20 	bl	800b3a8 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_>
 800b768:	b2ad      	uxth	r5, r5
 800b76a:	e7ee      	b.n	800b74a <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1d2>
 800b76c:	2b02      	cmp	r3, #2
 800b76e:	f040 813d 	bne.w	800b9ec <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x474>
 800b772:	4b29      	ldr	r3, [pc, #164]	; (800b818 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2a0>)
 800b774:	781b      	ldrb	r3, [r3, #0]
 800b776:	2b01      	cmp	r3, #1
 800b778:	f000 809d 	beq.w	800b8b6 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x33e>
 800b77c:	f104 0ba8 	add.w	fp, r4, #168	; 0xa8
 800b780:	883a      	ldrh	r2, [r7, #0]
 800b782:	f8b4 10e8 	ldrh.w	r1, [r4, #232]	; 0xe8
 800b786:	3201      	adds	r2, #1
 800b788:	b292      	uxth	r2, r2
 800b78a:	2900      	cmp	r1, #0
 800b78c:	d0d3      	beq.n	800b736 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1be>
 800b78e:	f8b4 50aa 	ldrh.w	r5, [r4, #170]	; 0xaa
 800b792:	f8b4 30ae 	ldrh.w	r3, [r4, #174]	; 0xae
 800b796:	441d      	add	r5, r3
 800b798:	b22d      	sxth	r5, r5
 800b79a:	4610      	mov	r0, r2
 800b79c:	f04f 0a00 	mov.w	sl, #0
 800b7a0:	b283      	uxth	r3, r0
 800b7a2:	4299      	cmp	r1, r3
 800b7a4:	ea4f 06ca 	mov.w	r6, sl, lsl #3
 800b7a8:	f240 80c3 	bls.w	800b932 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x3ba>
 800b7ac:	4426      	add	r6, r4
 800b7ae:	eb04 09c0 	add.w	r9, r4, r0, lsl #3
 800b7b2:	f9b6 30aa 	ldrsh.w	r3, [r6, #170]	; 0xaa
 800b7b6:	f9b9 e0aa 	ldrsh.w	lr, [r9, #170]	; 0xaa
 800b7ba:	4573      	cmp	r3, lr
 800b7bc:	4684      	mov	ip, r0
 800b7be:	f340 80a5 	ble.w	800b90c <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x394>
 800b7c2:	f8b9 50ae 	ldrh.w	r5, [r9, #174]	; 0xae
 800b7c6:	4475      	add	r5, lr
 800b7c8:	b22d      	sxth	r5, r5
 800b7ca:	429d      	cmp	r5, r3
 800b7cc:	bfa8      	it	ge
 800b7ce:	461d      	movge	r5, r3
 800b7d0:	3001      	adds	r0, #1
 800b7d2:	46e2      	mov	sl, ip
 800b7d4:	e7e4      	b.n	800b7a0 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x228>
 800b7d6:	d10b      	bne.n	800b7f0 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x278>
 800b7d8:	f9b5 c0ae 	ldrsh.w	ip, [r5, #174]	; 0xae
 800b7dc:	f9b9 10ae 	ldrsh.w	r1, [r9, #174]	; 0xae
 800b7e0:	458c      	cmp	ip, r1
 800b7e2:	bfb4      	ite	lt
 800b7e4:	469c      	movlt	ip, r3
 800b7e6:	46b4      	movge	ip, r6
 800b7e8:	4572      	cmp	r2, lr
 800b7ea:	bfb8      	it	lt
 800b7ec:	4672      	movlt	r2, lr
 800b7ee:	e08a      	b.n	800b906 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x38e>
 800b7f0:	428a      	cmp	r2, r1
 800b7f2:	bfb8      	it	lt
 800b7f4:	460a      	movlt	r2, r1
 800b7f6:	46b4      	mov	ip, r6
 800b7f8:	e085      	b.n	800b906 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x38e>
 800b7fa:	bf00      	nop
 800b7fc:	200121e4 	.word	0x200121e4
 800b800:	200121f0 	.word	0x200121f0
 800b804:	20000084 	.word	0x20000084
 800b808:	2001218c 	.word	0x2001218c
 800b80c:	20012182 	.word	0x20012182
 800b810:	20012180 	.word	0x20012180
 800b814:	2001218a 	.word	0x2001218a
 800b818:	20012184 	.word	0x20012184
 800b81c:	1961      	adds	r1, r4, r5
 800b81e:	ab05      	add	r3, sp, #20
 800b820:	f851 0fa8 	ldr.w	r0, [r1, #168]!
 800b824:	6849      	ldr	r1, [r1, #4]
 800b826:	c303      	stmia	r3!, {r0, r1}
 800b828:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 800b82c:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 800b830:	2b13      	cmp	r3, #19
 800b832:	bfd8      	it	le
 800b834:	f9bd 2014 	ldrshle.w	r2, [sp, #20]
 800b838:	f8ad 2014 	strh.w	r2, [sp, #20]
 800b83c:	440b      	add	r3, r1
 800b83e:	1a9b      	subs	r3, r3, r2
 800b840:	a805      	add	r0, sp, #20
 800b842:	f8ad 3018 	strh.w	r3, [sp, #24]
 800b846:	f7ff fb99 	bl	800af7c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 800b84a:	a805      	add	r0, sp, #20
 800b84c:	f7fc ff3d 	bl	80086ca <_ZNK8touchgfx4Rect7isEmptyEv>
 800b850:	bb88      	cbnz	r0, 800b8b6 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x33e>
 800b852:	f9bd c01a 	ldrsh.w	ip, [sp, #26]
 800b856:	f8d8 0000 	ldr.w	r0, [r8]
 800b85a:	f8bd 3018 	ldrh.w	r3, [sp, #24]
 800b85e:	f8d0 e000 	ldr.w	lr, [r0]
 800b862:	f8bd 2016 	ldrh.w	r2, [sp, #22]
 800b866:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 800b86a:	f1bc 0f14 	cmp.w	ip, #20
 800b86e:	bfa8      	it	ge
 800b870:	f04f 0c14 	movge.w	ip, #20
 800b874:	fa1f fc8c 	uxth.w	ip, ip
 800b878:	f8cd c000 	str.w	ip, [sp]
 800b87c:	f8de 9078 	ldr.w	r9, [lr, #120]	; 0x78
 800b880:	47c8      	blx	r9
 800b882:	4681      	mov	r9, r0
 800b884:	f8ad 001a 	strh.w	r0, [sp, #26]
 800b888:	a805      	add	r0, sp, #20
 800b88a:	f7ff fb1d 	bl	800aec8 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 800b88e:	6823      	ldr	r3, [r4, #0]
 800b890:	4425      	add	r5, r4
 800b892:	4620      	mov	r0, r4
 800b894:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800b896:	a905      	add	r1, sp, #20
 800b898:	4798      	blx	r3
 800b89a:	f8b5 00ac 	ldrh.w	r0, [r5, #172]	; 0xac
 800b89e:	eba0 0009 	sub.w	r0, r0, r9
 800b8a2:	b200      	sxth	r0, r0
 800b8a4:	f8a5 00ac 	strh.w	r0, [r5, #172]	; 0xac
 800b8a8:	b928      	cbnz	r0, 800b8b6 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x33e>
 800b8aa:	b2b2      	uxth	r2, r6
 800b8ac:	f104 01a8 	add.w	r1, r4, #168	; 0xa8
 800b8b0:	a807      	add	r0, sp, #28
 800b8b2:	f7ff fd5b 	bl	800b36c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800b8b6:	f8b4 a0e8 	ldrh.w	sl, [r4, #232]	; 0xe8
 800b8ba:	f1ba 0f00 	cmp.w	sl, #0
 800b8be:	f43f af3a 	beq.w	800b736 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1be>
 800b8c2:	883b      	ldrh	r3, [r7, #0]
 800b8c4:	f9b4 20a8 	ldrsh.w	r2, [r4, #168]	; 0xa8
 800b8c8:	3301      	adds	r3, #1
 800b8ca:	b29b      	uxth	r3, r3
 800b8cc:	2600      	movs	r6, #0
 800b8ce:	b299      	uxth	r1, r3
 800b8d0:	458a      	cmp	sl, r1
 800b8d2:	ea4f 05c6 	mov.w	r5, r6, lsl #3
 800b8d6:	d9a1      	bls.n	800b81c <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2a4>
 800b8d8:	4425      	add	r5, r4
 800b8da:	eb04 09c3 	add.w	r9, r4, r3, lsl #3
 800b8de:	f8b5 10ac 	ldrh.w	r1, [r5, #172]	; 0xac
 800b8e2:	f8b5 00a8 	ldrh.w	r0, [r5, #168]	; 0xa8
 800b8e6:	f9b9 e0a8 	ldrsh.w	lr, [r9, #168]	; 0xa8
 800b8ea:	4408      	add	r0, r1
 800b8ec:	f8b9 10ac 	ldrh.w	r1, [r9, #172]	; 0xac
 800b8f0:	4471      	add	r1, lr
 800b8f2:	b200      	sxth	r0, r0
 800b8f4:	b209      	sxth	r1, r1
 800b8f6:	4288      	cmp	r0, r1
 800b8f8:	469c      	mov	ip, r3
 800b8fa:	f6bf af6c 	bge.w	800b7d6 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x25e>
 800b8fe:	4586      	cmp	lr, r0
 800b900:	4672      	mov	r2, lr
 800b902:	bfb8      	it	lt
 800b904:	4602      	movlt	r2, r0
 800b906:	3301      	adds	r3, #1
 800b908:	4666      	mov	r6, ip
 800b90a:	e7e0      	b.n	800b8ce <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x356>
 800b90c:	d10c      	bne.n	800b928 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x3b0>
 800b90e:	f9b6 c0ac 	ldrsh.w	ip, [r6, #172]	; 0xac
 800b912:	f9b9 60ac 	ldrsh.w	r6, [r9, #172]	; 0xac
 800b916:	45b4      	cmp	ip, r6
 800b918:	bfb4      	ite	lt
 800b91a:	4684      	movlt	ip, r0
 800b91c:	46d4      	movge	ip, sl
 800b91e:	f8b9 60ae 	ldrh.w	r6, [r9, #174]	; 0xae
 800b922:	4433      	add	r3, r6
 800b924:	b21b      	sxth	r3, r3
 800b926:	e750      	b.n	800b7ca <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x252>
 800b928:	4575      	cmp	r5, lr
 800b92a:	bfa8      	it	ge
 800b92c:	4675      	movge	r5, lr
 800b92e:	46d4      	mov	ip, sl
 800b930:	e74e      	b.n	800b7d0 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x258>
 800b932:	eb0b 0006 	add.w	r0, fp, r6
 800b936:	4426      	add	r6, r4
 800b938:	e9cd 1202 	strd	r1, r2, [sp, #8]
 800b93c:	f9b6 90ae 	ldrsh.w	r9, [r6, #174]	; 0xae
 800b940:	f1b9 0f13 	cmp.w	r9, #19
 800b944:	bfde      	ittt	le
 800b946:	f8b6 50aa 	ldrhle.w	r5, [r6, #170]	; 0xaa
 800b94a:	444d      	addle	r5, r9
 800b94c:	b22d      	sxthle	r5, r5
 800b94e:	f7fc febc 	bl	80086ca <_ZNK8touchgfx4Rect7isEmptyEv>
 800b952:	e9dd 1202 	ldrd	r1, r2, [sp, #8]
 800b956:	2800      	cmp	r0, #0
 800b958:	f47f af17 	bne.w	800b78a <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x212>
 800b95c:	f9b6 c0aa 	ldrsh.w	ip, [r6, #170]	; 0xaa
 800b960:	f8ad 001a 	strh.w	r0, [sp, #26]
 800b964:	eba5 050c 	sub.w	r5, r5, ip
 800b968:	fa1f f28c 	uxth.w	r2, ip
 800b96c:	fa1f f989 	uxth.w	r9, r9
 800b970:	eb02 0009 	add.w	r0, r2, r9
 800b974:	2d14      	cmp	r5, #20
 800b976:	bfa8      	it	ge
 800b978:	2514      	movge	r5, #20
 800b97a:	b200      	sxth	r0, r0
 800b97c:	fa1f fe85 	uxth.w	lr, r5
 800b980:	eba0 000c 	sub.w	r0, r0, ip
 800b984:	f9b6 10a8 	ldrsh.w	r1, [r6, #168]	; 0xa8
 800b988:	f9b6 30ac 	ldrsh.w	r3, [r6, #172]	; 0xac
 800b98c:	f8ad 1014 	strh.w	r1, [sp, #20]
 800b990:	4586      	cmp	lr, r0
 800b992:	f8d8 0000 	ldr.w	r0, [r8]
 800b996:	f8ad c016 	strh.w	ip, [sp, #22]
 800b99a:	f8ad 3018 	strh.w	r3, [sp, #24]
 800b99e:	bfb8      	it	lt
 800b9a0:	46f1      	movlt	r9, lr
 800b9a2:	6805      	ldr	r5, [r0, #0]
 800b9a4:	f8cd 9000 	str.w	r9, [sp]
 800b9a8:	b29b      	uxth	r3, r3
 800b9aa:	b289      	uxth	r1, r1
 800b9ac:	6fad      	ldr	r5, [r5, #120]	; 0x78
 800b9ae:	47a8      	blx	r5
 800b9b0:	6823      	ldr	r3, [r4, #0]
 800b9b2:	f8ad 001a 	strh.w	r0, [sp, #26]
 800b9b6:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800b9b8:	a905      	add	r1, sp, #20
 800b9ba:	4620      	mov	r0, r4
 800b9bc:	4798      	blx	r3
 800b9be:	f8bd 101a 	ldrh.w	r1, [sp, #26]
 800b9c2:	f8b6 30ae 	ldrh.w	r3, [r6, #174]	; 0xae
 800b9c6:	f8b6 20aa 	ldrh.w	r2, [r6, #170]	; 0xaa
 800b9ca:	1a5b      	subs	r3, r3, r1
 800b9cc:	440a      	add	r2, r1
 800b9ce:	b21b      	sxth	r3, r3
 800b9d0:	f8a6 20aa 	strh.w	r2, [r6, #170]	; 0xaa
 800b9d4:	f8a6 30ae 	strh.w	r3, [r6, #174]	; 0xae
 800b9d8:	2b00      	cmp	r3, #0
 800b9da:	f47f aed1 	bne.w	800b780 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x208>
 800b9de:	fa1f f28a 	uxth.w	r2, sl
 800b9e2:	4659      	mov	r1, fp
 800b9e4:	a807      	add	r0, sp, #28
 800b9e6:	f7ff fcc1 	bl	800b36c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800b9ea:	e6c9      	b.n	800b780 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x208>
 800b9ec:	f8b4 30e8 	ldrh.w	r3, [r4, #232]	; 0xe8
 800b9f0:	42ab      	cmp	r3, r5
 800b9f2:	f67f aea0 	bls.w	800b736 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1be>
 800b9f6:	eb04 02c5 	add.w	r2, r4, r5, lsl #3
 800b9fa:	ab07      	add	r3, sp, #28
 800b9fc:	f852 0fa8 	ldr.w	r0, [r2, #168]!
 800ba00:	6851      	ldr	r1, [r2, #4]
 800ba02:	c303      	stmia	r3!, {r0, r1}
 800ba04:	a807      	add	r0, sp, #28
 800ba06:	f7fc fe60 	bl	80086ca <_ZNK8touchgfx4Rect7isEmptyEv>
 800ba0a:	b920      	cbnz	r0, 800ba16 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x49e>
 800ba0c:	6823      	ldr	r3, [r4, #0]
 800ba0e:	a907      	add	r1, sp, #28
 800ba10:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800ba12:	4620      	mov	r0, r4
 800ba14:	4798      	blx	r3
 800ba16:	3501      	adds	r5, #1
 800ba18:	b2ad      	uxth	r5, r5
 800ba1a:	e7e7      	b.n	800b9ec <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x474>

0800ba1c <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE>:
 800ba1c:	4b03      	ldr	r3, [pc, #12]	; (800ba2c <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE+0x10>)
 800ba1e:	2200      	movs	r2, #0
 800ba20:	801a      	strh	r2, [r3, #0]
 800ba22:	805a      	strh	r2, [r3, #2]
 800ba24:	809a      	strh	r2, [r3, #4]
 800ba26:	80da      	strh	r2, [r3, #6]
 800ba28:	4770      	bx	lr
 800ba2a:	bf00      	nop
 800ba2c:	200121f0 	.word	0x200121f0

0800ba30 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>:
 800ba30:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ba34:	4607      	mov	r7, r0
 800ba36:	b099      	sub	sp, #100	; 0x64
 800ba38:	a802      	add	r0, sp, #8
 800ba3a:	4614      	mov	r4, r2
 800ba3c:	461d      	mov	r5, r3
 800ba3e:	468a      	mov	sl, r1
 800ba40:	f000 fdbc 	bl	800c5bc <_ZN8touchgfx12TextProviderC1Ev>
 800ba44:	683b      	ldr	r3, [r7, #0]
 800ba46:	4638      	mov	r0, r7
 800ba48:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800ba4a:	4798      	blx	r3
 800ba4c:	462a      	mov	r2, r5
 800ba4e:	4603      	mov	r3, r0
 800ba50:	4621      	mov	r1, r4
 800ba52:	a802      	add	r0, sp, #8
 800ba54:	f000 fdf7 	bl	800c646 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_>
 800ba58:	2500      	movs	r5, #0
 800ba5a:	462c      	mov	r4, r5
 800ba5c:	46a9      	mov	r9, r5
 800ba5e:	46a8      	mov	r8, r5
 800ba60:	f242 0b0b 	movw	fp, #8203	; 0x200b
 800ba64:	2300      	movs	r3, #0
 800ba66:	9301      	str	r3, [sp, #4]
 800ba68:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 800ba6c:	429c      	cmp	r4, r3
 800ba6e:	d002      	beq.n	800ba76 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x46>
 800ba70:	455c      	cmp	r4, fp
 800ba72:	bf18      	it	ne
 800ba74:	4625      	movne	r5, r4
 800ba76:	ab01      	add	r3, sp, #4
 800ba78:	463a      	mov	r2, r7
 800ba7a:	4651      	mov	r1, sl
 800ba7c:	a802      	add	r0, sp, #8
 800ba7e:	f001 f8db 	bl	800cc38 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800ba82:	4604      	mov	r4, r0
 800ba84:	b108      	cbz	r0, 800ba8a <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x5a>
 800ba86:	280a      	cmp	r0, #10
 800ba88:	d10a      	bne.n	800baa0 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x70>
 800ba8a:	45c1      	cmp	r9, r8
 800ba8c:	bf38      	it	cc
 800ba8e:	46c1      	movcc	r9, r8
 800ba90:	f04f 0800 	mov.w	r8, #0
 800ba94:	2c00      	cmp	r4, #0
 800ba96:	d1e5      	bne.n	800ba64 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x34>
 800ba98:	4648      	mov	r0, r9
 800ba9a:	b019      	add	sp, #100	; 0x64
 800ba9c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800baa0:	9a01      	ldr	r2, [sp, #4]
 800baa2:	2a00      	cmp	r2, #0
 800baa4:	d0de      	beq.n	800ba64 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x34>
 800baa6:	7b56      	ldrb	r6, [r2, #13]
 800baa8:	683b      	ldr	r3, [r7, #0]
 800baaa:	8894      	ldrh	r4, [r2, #4]
 800baac:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800baae:	0076      	lsls	r6, r6, #1
 800bab0:	f406 7080 	and.w	r0, r6, #256	; 0x100
 800bab4:	7a96      	ldrb	r6, [r2, #10]
 800bab6:	4629      	mov	r1, r5
 800bab8:	4306      	orrs	r6, r0
 800baba:	4638      	mov	r0, r7
 800babc:	4798      	blx	r3
 800babe:	4430      	add	r0, r6
 800bac0:	4480      	add	r8, r0
 800bac2:	fa1f f888 	uxth.w	r8, r8
 800bac6:	e7e5      	b.n	800ba94 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x64>

0800bac8 <_ZNK8touchgfx4Font12getCharWidthEt>:
 800bac8:	b508      	push	{r3, lr}
 800baca:	6803      	ldr	r3, [r0, #0]
 800bacc:	68db      	ldr	r3, [r3, #12]
 800bace:	4798      	blx	r3
 800bad0:	b128      	cbz	r0, 800bade <_ZNK8touchgfx4Font12getCharWidthEt+0x16>
 800bad2:	7b43      	ldrb	r3, [r0, #13]
 800bad4:	7a80      	ldrb	r0, [r0, #10]
 800bad6:	005b      	lsls	r3, r3, #1
 800bad8:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800badc:	4318      	orrs	r0, r3
 800bade:	bd08      	pop	{r3, pc}

0800bae0 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz>:
 800bae0:	b40e      	push	{r1, r2, r3}
 800bae2:	b5f0      	push	{r4, r5, r6, r7, lr}
 800bae4:	b098      	sub	sp, #96	; 0x60
 800bae6:	ab1d      	add	r3, sp, #116	; 0x74
 800bae8:	4605      	mov	r5, r0
 800baea:	f853 4b04 	ldr.w	r4, [r3], #4
 800baee:	9300      	str	r3, [sp, #0]
 800baf0:	a802      	add	r0, sp, #8
 800baf2:	f000 fd63 	bl	800c5bc <_ZN8touchgfx12TextProviderC1Ev>
 800baf6:	682b      	ldr	r3, [r5, #0]
 800baf8:	4628      	mov	r0, r5
 800bafa:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800bafc:	4798      	blx	r3
 800bafe:	ae18      	add	r6, sp, #96	; 0x60
 800bb00:	4603      	mov	r3, r0
 800bb02:	4621      	mov	r1, r4
 800bb04:	9a00      	ldr	r2, [sp, #0]
 800bb06:	2400      	movs	r4, #0
 800bb08:	a802      	add	r0, sp, #8
 800bb0a:	f000 fd9c 	bl	800c646 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_>
 800bb0e:	f846 4d5c 	str.w	r4, [r6, #-92]!
 800bb12:	462a      	mov	r2, r5
 800bb14:	4633      	mov	r3, r6
 800bb16:	4621      	mov	r1, r4
 800bb18:	a802      	add	r0, sp, #8
 800bb1a:	f001 f88d 	bl	800cc38 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800bb1e:	b1f0      	cbz	r0, 800bb5e <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x7e>
 800bb20:	280a      	cmp	r0, #10
 800bb22:	d018      	beq.n	800bb56 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x76>
 800bb24:	9f01      	ldr	r7, [sp, #4]
 800bb26:	b1b7      	cbz	r7, 800bb56 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x76>
 800bb28:	7b78      	ldrb	r0, [r7, #13]
 800bb2a:	7a3b      	ldrb	r3, [r7, #8]
 800bb2c:	88aa      	ldrh	r2, [r5, #4]
 800bb2e:	00c1      	lsls	r1, r0, #3
 800bb30:	f401 7180 	and.w	r1, r1, #256	; 0x100
 800bb34:	4319      	orrs	r1, r3
 800bb36:	0643      	lsls	r3, r0, #25
 800bb38:	bf44      	itt	mi
 800bb3a:	f5a1 7300 	submi.w	r3, r1, #512	; 0x200
 800bb3e:	b219      	sxthmi	r1, r3
 800bb40:	0100      	lsls	r0, r0, #4
 800bb42:	79fb      	ldrb	r3, [r7, #7]
 800bb44:	f400 7080 	and.w	r0, r0, #256	; 0x100
 800bb48:	4303      	orrs	r3, r0
 800bb4a:	4413      	add	r3, r2
 800bb4c:	1a5b      	subs	r3, r3, r1
 800bb4e:	b29b      	uxth	r3, r3
 800bb50:	42a3      	cmp	r3, r4
 800bb52:	bfc8      	it	gt
 800bb54:	b21c      	sxthgt	r4, r3
 800bb56:	4633      	mov	r3, r6
 800bb58:	462a      	mov	r2, r5
 800bb5a:	2100      	movs	r1, #0
 800bb5c:	e7dc      	b.n	800bb18 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x38>
 800bb5e:	b2a0      	uxth	r0, r4
 800bb60:	b018      	add	sp, #96	; 0x60
 800bb62:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 800bb66:	b003      	add	sp, #12
 800bb68:	4770      	bx	lr

0800bb6a <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz>:
 800bb6a:	b40e      	push	{r1, r2, r3}
 800bb6c:	b530      	push	{r4, r5, lr}
 800bb6e:	b098      	sub	sp, #96	; 0x60
 800bb70:	ab1b      	add	r3, sp, #108	; 0x6c
 800bb72:	4604      	mov	r4, r0
 800bb74:	f853 5b04 	ldr.w	r5, [r3], #4
 800bb78:	9301      	str	r3, [sp, #4]
 800bb7a:	a802      	add	r0, sp, #8
 800bb7c:	f000 fd1e 	bl	800c5bc <_ZN8touchgfx12TextProviderC1Ev>
 800bb80:	6823      	ldr	r3, [r4, #0]
 800bb82:	4620      	mov	r0, r4
 800bb84:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800bb86:	4798      	blx	r3
 800bb88:	9a01      	ldr	r2, [sp, #4]
 800bb8a:	4603      	mov	r3, r0
 800bb8c:	4629      	mov	r1, r5
 800bb8e:	a802      	add	r0, sp, #8
 800bb90:	f000 fd59 	bl	800c646 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_>
 800bb94:	a802      	add	r0, sp, #8
 800bb96:	f001 f947 	bl	800ce28 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800bb9a:	2401      	movs	r4, #1
 800bb9c:	b2a3      	uxth	r3, r4
 800bb9e:	b140      	cbz	r0, 800bbb2 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x48>
 800bba0:	280a      	cmp	r0, #10
 800bba2:	bf08      	it	eq
 800bba4:	3301      	addeq	r3, #1
 800bba6:	a802      	add	r0, sp, #8
 800bba8:	bf08      	it	eq
 800bbaa:	b21c      	sxtheq	r4, r3
 800bbac:	f001 f93c 	bl	800ce28 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800bbb0:	e7f4      	b.n	800bb9c <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x32>
 800bbb2:	4618      	mov	r0, r3
 800bbb4:	b018      	add	sp, #96	; 0x60
 800bbb6:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 800bbba:	b003      	add	sp, #12
 800bbbc:	4770      	bx	lr

0800bbbe <_ZNK8touchgfx4Font15getSpacingAboveEPKtz>:
 800bbbe:	b40e      	push	{r1, r2, r3}
 800bbc0:	b5f0      	push	{r4, r5, r6, r7, lr}
 800bbc2:	b098      	sub	sp, #96	; 0x60
 800bbc4:	ab1d      	add	r3, sp, #116	; 0x74
 800bbc6:	4604      	mov	r4, r0
 800bbc8:	f853 5b04 	ldr.w	r5, [r3], #4
 800bbcc:	9300      	str	r3, [sp, #0]
 800bbce:	a802      	add	r0, sp, #8
 800bbd0:	f000 fcf4 	bl	800c5bc <_ZN8touchgfx12TextProviderC1Ev>
 800bbd4:	6823      	ldr	r3, [r4, #0]
 800bbd6:	4620      	mov	r0, r4
 800bbd8:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800bbda:	4798      	blx	r3
 800bbdc:	4629      	mov	r1, r5
 800bbde:	4603      	mov	r3, r0
 800bbe0:	9a00      	ldr	r2, [sp, #0]
 800bbe2:	a802      	add	r0, sp, #8
 800bbe4:	ad18      	add	r5, sp, #96	; 0x60
 800bbe6:	f000 fd2e 	bl	800c646 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_>
 800bbea:	2100      	movs	r1, #0
 800bbec:	f845 1d5c 	str.w	r1, [r5, #-92]!
 800bbf0:	4622      	mov	r2, r4
 800bbf2:	462b      	mov	r3, r5
 800bbf4:	a802      	add	r0, sp, #8
 800bbf6:	f001 f81f 	bl	800cc38 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800bbfa:	26ff      	movs	r6, #255	; 0xff
 800bbfc:	b1d8      	cbz	r0, 800bc36 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
 800bbfe:	280a      	cmp	r0, #10
 800bc00:	d012      	beq.n	800bc28 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x6a>
 800bc02:	9801      	ldr	r0, [sp, #4]
 800bc04:	b180      	cbz	r0, 800bc28 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x6a>
 800bc06:	7b47      	ldrb	r7, [r0, #13]
 800bc08:	7922      	ldrb	r2, [r4, #4]
 800bc0a:	00fb      	lsls	r3, r7, #3
 800bc0c:	f403 7180 	and.w	r1, r3, #256	; 0x100
 800bc10:	7a03      	ldrb	r3, [r0, #8]
 800bc12:	430b      	orrs	r3, r1
 800bc14:	0679      	lsls	r1, r7, #25
 800bc16:	bf44      	itt	mi
 800bc18:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 800bc1c:	b21b      	sxthmi	r3, r3
 800bc1e:	1ad3      	subs	r3, r2, r3
 800bc20:	b2db      	uxtb	r3, r3
 800bc22:	429e      	cmp	r6, r3
 800bc24:	bf28      	it	cs
 800bc26:	461e      	movcs	r6, r3
 800bc28:	462b      	mov	r3, r5
 800bc2a:	4622      	mov	r2, r4
 800bc2c:	2100      	movs	r1, #0
 800bc2e:	a802      	add	r0, sp, #8
 800bc30:	f001 f802 	bl	800cc38 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800bc34:	e7e2      	b.n	800bbfc <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x3e>
 800bc36:	4630      	mov	r0, r6
 800bc38:	b018      	add	sp, #96	; 0x60
 800bc3a:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 800bc3e:	b003      	add	sp, #12
 800bc40:	4770      	bx	lr

0800bc42 <_ZNK8touchgfx8Drawable10invalidateEv>:
 800bc42:	b513      	push	{r0, r1, r4, lr}
 800bc44:	1d01      	adds	r1, r0, #4
 800bc46:	4603      	mov	r3, r0
 800bc48:	c903      	ldmia	r1, {r0, r1}
 800bc4a:	466a      	mov	r2, sp
 800bc4c:	e882 0003 	stmia.w	r2, {r0, r1}
 800bc50:	2100      	movs	r1, #0
 800bc52:	9100      	str	r1, [sp, #0]
 800bc54:	6819      	ldr	r1, [r3, #0]
 800bc56:	4618      	mov	r0, r3
 800bc58:	690c      	ldr	r4, [r1, #16]
 800bc5a:	4611      	mov	r1, r2
 800bc5c:	47a0      	blx	r4
 800bc5e:	b002      	add	sp, #8
 800bc60:	bd10      	pop	{r4, pc}

0800bc62 <_ZN8touchgfx8Drawable20getSolidRectAbsoluteEv>:
 800bc62:	b538      	push	{r3, r4, r5, lr}
 800bc64:	680b      	ldr	r3, [r1, #0]
 800bc66:	460c      	mov	r4, r1
 800bc68:	68db      	ldr	r3, [r3, #12]
 800bc6a:	4605      	mov	r5, r0
 800bc6c:	4798      	blx	r3
 800bc6e:	6823      	ldr	r3, [r4, #0]
 800bc70:	4620      	mov	r0, r4
 800bc72:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800bc74:	4629      	mov	r1, r5
 800bc76:	4798      	blx	r3
 800bc78:	4628      	mov	r0, r5
 800bc7a:	bd38      	pop	{r3, r4, r5, pc}

0800bc7c <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE>:
 800bc7c:	b410      	push	{r4}
 800bc7e:	880a      	ldrh	r2, [r1, #0]
 800bc80:	8884      	ldrh	r4, [r0, #4]
 800bc82:	4422      	add	r2, r4
 800bc84:	800a      	strh	r2, [r1, #0]
 800bc86:	88c4      	ldrh	r4, [r0, #6]
 800bc88:	884a      	ldrh	r2, [r1, #2]
 800bc8a:	4422      	add	r2, r4
 800bc8c:	804a      	strh	r2, [r1, #2]
 800bc8e:	6940      	ldr	r0, [r0, #20]
 800bc90:	b120      	cbz	r0, 800bc9c <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE+0x20>
 800bc92:	6803      	ldr	r3, [r0, #0]
 800bc94:	f85d 4b04 	ldr.w	r4, [sp], #4
 800bc98:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800bc9a:	4718      	bx	r3
 800bc9c:	f85d 4b04 	ldr.w	r4, [sp], #4
 800bca0:	4770      	bx	lr

0800bca2 <_ZN8touchgfx8Drawable12moveRelativeEss>:
 800bca2:	b5f0      	push	{r4, r5, r6, r7, lr}
 800bca4:	460b      	mov	r3, r1
 800bca6:	b085      	sub	sp, #20
 800bca8:	4604      	mov	r4, r0
 800bcaa:	b901      	cbnz	r1, 800bcae <_ZN8touchgfx8Drawable12moveRelativeEss+0xc>
 800bcac:	b1fa      	cbz	r2, 800bcee <_ZN8touchgfx8Drawable12moveRelativeEss+0x4c>
 800bcae:	1d27      	adds	r7, r4, #4
 800bcb0:	e897 0003 	ldmia.w	r7, {r0, r1}
 800bcb4:	466e      	mov	r6, sp
 800bcb6:	e886 0003 	stmia.w	r6, {r0, r1}
 800bcba:	88e1      	ldrh	r1, [r4, #6]
 800bcbc:	440a      	add	r2, r1
 800bcbe:	88a1      	ldrh	r1, [r4, #4]
 800bcc0:	4419      	add	r1, r3
 800bcc2:	6823      	ldr	r3, [r4, #0]
 800bcc4:	b209      	sxth	r1, r1
 800bcc6:	4620      	mov	r0, r4
 800bcc8:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800bcca:	b212      	sxth	r2, r2
 800bccc:	4798      	blx	r3
 800bcce:	e897 0003 	ldmia.w	r7, {r0, r1}
 800bcd2:	ad02      	add	r5, sp, #8
 800bcd4:	e885 0003 	stmia.w	r5, {r0, r1}
 800bcd8:	6960      	ldr	r0, [r4, #20]
 800bcda:	b150      	cbz	r0, 800bcf2 <_ZN8touchgfx8Drawable12moveRelativeEss+0x50>
 800bcdc:	6803      	ldr	r3, [r0, #0]
 800bcde:	4631      	mov	r1, r6
 800bce0:	691b      	ldr	r3, [r3, #16]
 800bce2:	4798      	blx	r3
 800bce4:	6960      	ldr	r0, [r4, #20]
 800bce6:	6803      	ldr	r3, [r0, #0]
 800bce8:	691b      	ldr	r3, [r3, #16]
 800bcea:	4629      	mov	r1, r5
 800bcec:	4798      	blx	r3
 800bcee:	b005      	add	sp, #20
 800bcf0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800bcf2:	f7ff fad7 	bl	800b2a4 <_ZN8touchgfx11Application11getInstanceEv>
 800bcf6:	6803      	ldr	r3, [r0, #0]
 800bcf8:	4631      	mov	r1, r6
 800bcfa:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800bcfc:	4798      	blx	r3
 800bcfe:	f7ff fad1 	bl	800b2a4 <_ZN8touchgfx11Application11getInstanceEv>
 800bd02:	6803      	ldr	r3, [r0, #0]
 800bd04:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800bd06:	e7f0      	b.n	800bcea <_ZN8touchgfx8Drawable12moveRelativeEss+0x48>

0800bd08 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE>:
 800bd08:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800bd0a:	8882      	ldrh	r2, [r0, #4]
 800bd0c:	880b      	ldrh	r3, [r1, #0]
 800bd0e:	4413      	add	r3, r2
 800bd10:	800b      	strh	r3, [r1, #0]
 800bd12:	88c2      	ldrh	r2, [r0, #6]
 800bd14:	884b      	ldrh	r3, [r1, #2]
 800bd16:	4413      	add	r3, r2
 800bd18:	4602      	mov	r2, r0
 800bd1a:	804b      	strh	r3, [r1, #2]
 800bd1c:	4605      	mov	r5, r0
 800bd1e:	f852 0f04 	ldr.w	r0, [r2, #4]!
 800bd22:	460c      	mov	r4, r1
 800bd24:	6851      	ldr	r1, [r2, #4]
 800bd26:	466b      	mov	r3, sp
 800bd28:	c303      	stmia	r3!, {r0, r1}
 800bd2a:	4621      	mov	r1, r4
 800bd2c:	4668      	mov	r0, sp
 800bd2e:	f7fc fc89 	bl	8008644 <_ZN8touchgfx4RectaNERKS0_>
 800bd32:	466b      	mov	r3, sp
 800bd34:	cb03      	ldmia	r3!, {r0, r1}
 800bd36:	6020      	str	r0, [r4, #0]
 800bd38:	6061      	str	r1, [r4, #4]
 800bd3a:	6968      	ldr	r0, [r5, #20]
 800bd3c:	b128      	cbz	r0, 800bd4a <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x42>
 800bd3e:	6803      	ldr	r3, [r0, #0]
 800bd40:	691b      	ldr	r3, [r3, #16]
 800bd42:	4621      	mov	r1, r4
 800bd44:	4798      	blx	r3
 800bd46:	b003      	add	sp, #12
 800bd48:	bd30      	pop	{r4, r5, pc}
 800bd4a:	f7ff faab 	bl	800b2a4 <_ZN8touchgfx11Application11getInstanceEv>
 800bd4e:	6803      	ldr	r3, [r0, #0]
 800bd50:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800bd52:	e7f6      	b.n	800bd42 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x3a>

0800bd54 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE>:
 800bd54:	b570      	push	{r4, r5, r6, lr}
 800bd56:	8882      	ldrh	r2, [r0, #4]
 800bd58:	880b      	ldrh	r3, [r1, #0]
 800bd5a:	4413      	add	r3, r2
 800bd5c:	800b      	strh	r3, [r1, #0]
 800bd5e:	88c2      	ldrh	r2, [r0, #6]
 800bd60:	884b      	ldrh	r3, [r1, #2]
 800bd62:	460c      	mov	r4, r1
 800bd64:	4413      	add	r3, r2
 800bd66:	804b      	strh	r3, [r1, #2]
 800bd68:	4605      	mov	r5, r0
 800bd6a:	1d01      	adds	r1, r0, #4
 800bd6c:	4620      	mov	r0, r4
 800bd6e:	f7fc fc69 	bl	8008644 <_ZN8touchgfx4RectaNERKS0_>
 800bd72:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 800bd76:	2b00      	cmp	r3, #0
 800bd78:	dd0b      	ble.n	800bd92 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 800bd7a:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 800bd7e:	2b00      	cmp	r3, #0
 800bd80:	dd07      	ble.n	800bd92 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 800bd82:	6968      	ldr	r0, [r5, #20]
 800bd84:	b128      	cbz	r0, 800bd92 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 800bd86:	6803      	ldr	r3, [r0, #0]
 800bd88:	4621      	mov	r1, r4
 800bd8a:	6a1b      	ldr	r3, [r3, #32]
 800bd8c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800bd90:	4718      	bx	r3
 800bd92:	bd70      	pop	{r4, r5, r6, pc}

0800bd94 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>:
 800bd94:	b510      	push	{r4, lr}
 800bd96:	4604      	mov	r4, r0
 800bd98:	4608      	mov	r0, r1
 800bd9a:	2300      	movs	r3, #0
 800bd9c:	8023      	strh	r3, [r4, #0]
 800bd9e:	8063      	strh	r3, [r4, #2]
 800bda0:	6803      	ldr	r3, [r0, #0]
 800bda2:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 800bda6:	f9b1 1008 	ldrsh.w	r1, [r1, #8]
 800bdaa:	80a1      	strh	r1, [r4, #4]
 800bdac:	80e2      	strh	r2, [r4, #6]
 800bdae:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800bdb0:	4621      	mov	r1, r4
 800bdb2:	4798      	blx	r3
 800bdb4:	4620      	mov	r0, r4
 800bdb6:	bd10      	pop	{r4, pc}

0800bdb8 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEtthhhhhtt>:
 800bdb8:	b530      	push	{r4, r5, lr}
 800bdba:	8083      	strh	r3, [r0, #4]
 800bdbc:	f89d 300c 	ldrb.w	r3, [sp, #12]
 800bdc0:	f89d 5010 	ldrb.w	r5, [sp, #16]
 800bdc4:	7183      	strb	r3, [r0, #6]
 800bdc6:	79c3      	ldrb	r3, [r0, #7]
 800bdc8:	6101      	str	r1, [r0, #16]
 800bdca:	f365 0306 	bfi	r3, r5, #0, #7
 800bdce:	f89d 5014 	ldrb.w	r5, [sp, #20]
 800bdd2:	8282      	strh	r2, [r0, #20]
 800bdd4:	f365 13c7 	bfi	r3, r5, #7, #1
 800bdd8:	71c3      	strb	r3, [r0, #7]
 800bdda:	f89d 3018 	ldrb.w	r3, [sp, #24]
 800bdde:	7203      	strb	r3, [r0, #8]
 800bde0:	f89d 301c 	ldrb.w	r3, [sp, #28]
 800bde4:	7243      	strb	r3, [r0, #9]
 800bde6:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 800bdea:	8143      	strh	r3, [r0, #10]
 800bdec:	f8bd 3024 	ldrh.w	r3, [sp, #36]	; 0x24
 800bdf0:	8183      	strh	r3, [r0, #12]
 800bdf2:	4b01      	ldr	r3, [pc, #4]	; (800bdf8 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEtthhhhhtt+0x40>)
 800bdf4:	6003      	str	r3, [r0, #0]
 800bdf6:	bd30      	pop	{r4, r5, pc}
 800bdf8:	0801bdbc 	.word	0x0801bdbc

0800bdfc <_ZNK8touchgfx9ConstFont4findEt>:
 800bdfc:	b5f0      	push	{r4, r5, r6, r7, lr}
 800bdfe:	6904      	ldr	r4, [r0, #16]
 800be00:	8a82      	ldrh	r2, [r0, #20]
 800be02:	88a3      	ldrh	r3, [r4, #4]
 800be04:	1acb      	subs	r3, r1, r3
 800be06:	f102 32ff 	add.w	r2, r2, #4294967295
 800be0a:	d431      	bmi.n	800be70 <_ZNK8touchgfx9ConstFont4findEt+0x74>
 800be0c:	4293      	cmp	r3, r2
 800be0e:	dd0c      	ble.n	800be2a <_ZNK8touchgfx9ConstFont4findEt+0x2e>
 800be10:	230e      	movs	r3, #14
 800be12:	fb03 4302 	mla	r3, r3, r2, r4
 800be16:	889b      	ldrh	r3, [r3, #4]
 800be18:	1a5b      	subs	r3, r3, r1
 800be1a:	1ad3      	subs	r3, r2, r3
 800be1c:	429a      	cmp	r2, r3
 800be1e:	db27      	blt.n	800be70 <_ZNK8touchgfx9ConstFont4findEt+0x74>
 800be20:	2b00      	cmp	r3, #0
 800be22:	bfbc      	itt	lt
 800be24:	2302      	movlt	r3, #2
 800be26:	fb92 f3f3 	sdivlt	r3, r2, r3
 800be2a:	2500      	movs	r5, #0
 800be2c:	260e      	movs	r6, #14
 800be2e:	4295      	cmp	r5, r2
 800be30:	dc1e      	bgt.n	800be70 <_ZNK8touchgfx9ConstFont4findEt+0x74>
 800be32:	fb06 4003 	mla	r0, r6, r3, r4
 800be36:	8887      	ldrh	r7, [r0, #4]
 800be38:	42b9      	cmp	r1, r7
 800be3a:	d01a      	beq.n	800be72 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800be3c:	d20d      	bcs.n	800be5a <_ZNK8touchgfx9ConstFont4findEt+0x5e>
 800be3e:	1e5a      	subs	r2, r3, #1
 800be40:	4295      	cmp	r5, r2
 800be42:	dc15      	bgt.n	800be70 <_ZNK8touchgfx9ConstFont4findEt+0x74>
 800be44:	f830 3c0a 	ldrh.w	r3, [r0, #-10]
 800be48:	1a5b      	subs	r3, r3, r1
 800be4a:	1ad3      	subs	r3, r2, r3
 800be4c:	429a      	cmp	r2, r3
 800be4e:	db0f      	blt.n	800be70 <_ZNK8touchgfx9ConstFont4findEt+0x74>
 800be50:	429d      	cmp	r5, r3
 800be52:	ddec      	ble.n	800be2e <_ZNK8touchgfx9ConstFont4findEt+0x32>
 800be54:	1953      	adds	r3, r2, r5
 800be56:	105b      	asrs	r3, r3, #1
 800be58:	e7e9      	b.n	800be2e <_ZNK8touchgfx9ConstFont4findEt+0x32>
 800be5a:	1c5d      	adds	r5, r3, #1
 800be5c:	42aa      	cmp	r2, r5
 800be5e:	db07      	blt.n	800be70 <_ZNK8touchgfx9ConstFont4findEt+0x74>
 800be60:	8a43      	ldrh	r3, [r0, #18]
 800be62:	1acb      	subs	r3, r1, r3
 800be64:	442b      	add	r3, r5
 800be66:	429d      	cmp	r5, r3
 800be68:	dc02      	bgt.n	800be70 <_ZNK8touchgfx9ConstFont4findEt+0x74>
 800be6a:	429a      	cmp	r2, r3
 800be6c:	dadf      	bge.n	800be2e <_ZNK8touchgfx9ConstFont4findEt+0x32>
 800be6e:	e7f1      	b.n	800be54 <_ZNK8touchgfx9ConstFont4findEt+0x58>
 800be70:	2000      	movs	r0, #0
 800be72:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800be74 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh>:
 800be74:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800be76:	4604      	mov	r4, r0
 800be78:	4617      	mov	r7, r2
 800be7a:	461e      	mov	r6, r3
 800be7c:	b911      	cbnz	r1, 800be84 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x10>
 800be7e:	2500      	movs	r5, #0
 800be80:	4628      	mov	r0, r5
 800be82:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800be84:	290a      	cmp	r1, #10
 800be86:	d0fa      	beq.n	800be7e <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 800be88:	f64f 62ff 	movw	r2, #65279	; 0xfeff
 800be8c:	4291      	cmp	r1, r2
 800be8e:	d0f6      	beq.n	800be7e <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 800be90:	f242 020b 	movw	r2, #8203	; 0x200b
 800be94:	4291      	cmp	r1, r2
 800be96:	d0f2      	beq.n	800be7e <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 800be98:	f7ff ffb0 	bl	800bdfc <_ZNK8touchgfx9ConstFont4findEt>
 800be9c:	4605      	mov	r5, r0
 800be9e:	b950      	cbnz	r0, 800beb6 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x42>
 800bea0:	6823      	ldr	r3, [r4, #0]
 800bea2:	4620      	mov	r0, r4
 800bea4:	691b      	ldr	r3, [r3, #16]
 800bea6:	4798      	blx	r3
 800bea8:	4601      	mov	r1, r0
 800beaa:	4620      	mov	r0, r4
 800beac:	f7ff ffa6 	bl	800bdfc <_ZNK8touchgfx9ConstFont4findEt>
 800beb0:	4605      	mov	r5, r0
 800beb2:	2800      	cmp	r0, #0
 800beb4:	d0e3      	beq.n	800be7e <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 800beb6:	6823      	ldr	r3, [r4, #0]
 800beb8:	4629      	mov	r1, r5
 800beba:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800bebc:	4620      	mov	r0, r4
 800bebe:	4798      	blx	r3
 800bec0:	6038      	str	r0, [r7, #0]
 800bec2:	6823      	ldr	r3, [r4, #0]
 800bec4:	4620      	mov	r0, r4
 800bec6:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800bec8:	4798      	blx	r3
 800beca:	7030      	strb	r0, [r6, #0]
 800becc:	e7d8      	b.n	800be80 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xc>

0800bece <_ZN8touchgfx10ClickEvent12getEventTypeEv>:
 800bece:	2000      	movs	r0, #0
 800bed0:	4770      	bx	lr

0800bed2 <_ZN8touchgfx9DragEvent12getEventTypeEv>:
 800bed2:	2001      	movs	r0, #1
 800bed4:	4770      	bx	lr

0800bed6 <_ZN8touchgfx12GestureEvent12getEventTypeEv>:
 800bed6:	2002      	movs	r0, #2
 800bed8:	4770      	bx	lr

0800beda <_ZN8touchgfx6ScreenD1Ev>:
 800beda:	4770      	bx	lr

0800bedc <_ZN8touchgfx12GestureEventD1Ev>:
 800bedc:	4770      	bx	lr

0800bede <_ZN8touchgfx9DragEventD1Ev>:
 800bede:	4770      	bx	lr

0800bee0 <_ZN8touchgfx10ClickEventD1Ev>:
 800bee0:	4770      	bx	lr

0800bee2 <_ZN8touchgfx10ClickEventD0Ev>:
 800bee2:	b510      	push	{r4, lr}
 800bee4:	210c      	movs	r1, #12
 800bee6:	4604      	mov	r4, r0
 800bee8:	f00c fe54 	bl	8018b94 <_ZdlPvj>
 800beec:	4620      	mov	r0, r4
 800beee:	bd10      	pop	{r4, pc}

0800bef0 <_ZN8touchgfx9DragEventD0Ev>:
 800bef0:	b510      	push	{r4, lr}
 800bef2:	2110      	movs	r1, #16
 800bef4:	4604      	mov	r4, r0
 800bef6:	f00c fe4d 	bl	8018b94 <_ZdlPvj>
 800befa:	4620      	mov	r0, r4
 800befc:	bd10      	pop	{r4, pc}

0800befe <_ZN8touchgfx12GestureEventD0Ev>:
 800befe:	b510      	push	{r4, lr}
 800bf00:	210c      	movs	r1, #12
 800bf02:	4604      	mov	r4, r0
 800bf04:	f00c fe46 	bl	8018b94 <_ZdlPvj>
 800bf08:	4620      	mov	r0, r4
 800bf0a:	bd10      	pop	{r4, pc}

0800bf0c <_ZN8touchgfx6ScreenD0Ev>:
 800bf0c:	b510      	push	{r4, lr}
 800bf0e:	213c      	movs	r1, #60	; 0x3c
 800bf10:	4604      	mov	r4, r0
 800bf12:	f00c fe3f 	bl	8018b94 <_ZdlPvj>
 800bf16:	4620      	mov	r0, r4
 800bf18:	bd10      	pop	{r4, pc}
	...

0800bf1c <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE>:
 800bf1c:	b530      	push	{r4, r5, lr}
 800bf1e:	460d      	mov	r5, r1
 800bf20:	6b01      	ldr	r1, [r0, #48]	; 0x30
 800bf22:	b087      	sub	sp, #28
 800bf24:	4604      	mov	r4, r0
 800bf26:	b301      	cbz	r1, 800bf6a <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x4e>
 800bf28:	a801      	add	r0, sp, #4
 800bf2a:	f7ff ff33 	bl	800bd94 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800bf2e:	892a      	ldrh	r2, [r5, #8]
 800bf30:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800bf34:	7928      	ldrb	r0, [r5, #4]
 800bf36:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 800bf3a:	f88d 0010 	strb.w	r0, [sp, #16]
 800bf3e:	1ad2      	subs	r2, r2, r3
 800bf40:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 800bf42:	6b20      	ldr	r0, [r4, #48]	; 0x30
 800bf44:	f8ad 1012 	strh.w	r1, [sp, #18]
 800bf48:	441a      	add	r2, r3
 800bf4a:	896b      	ldrh	r3, [r5, #10]
 800bf4c:	f8bd 5006 	ldrh.w	r5, [sp, #6]
 800bf50:	f8ad 2014 	strh.w	r2, [sp, #20]
 800bf54:	1b5b      	subs	r3, r3, r5
 800bf56:	8ee5      	ldrh	r5, [r4, #54]	; 0x36
 800bf58:	442b      	add	r3, r5
 800bf5a:	4d05      	ldr	r5, [pc, #20]	; (800bf70 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x54>)
 800bf5c:	9503      	str	r5, [sp, #12]
 800bf5e:	f8ad 3016 	strh.w	r3, [sp, #22]
 800bf62:	6803      	ldr	r3, [r0, #0]
 800bf64:	a903      	add	r1, sp, #12
 800bf66:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800bf68:	4798      	blx	r3
 800bf6a:	b007      	add	sp, #28
 800bf6c:	bd30      	pop	{r4, r5, pc}
 800bf6e:	bf00      	nop
 800bf70:	0801be38 	.word	0x0801be38

0800bf74 <_ZNK8touchgfx4Rect9intersectEss>:
 800bf74:	b510      	push	{r4, lr}
 800bf76:	f9b0 3000 	ldrsh.w	r3, [r0]
 800bf7a:	428b      	cmp	r3, r1
 800bf7c:	dc10      	bgt.n	800bfa0 <_ZNK8touchgfx4Rect9intersectEss+0x2c>
 800bf7e:	8884      	ldrh	r4, [r0, #4]
 800bf80:	4423      	add	r3, r4
 800bf82:	b21b      	sxth	r3, r3
 800bf84:	4299      	cmp	r1, r3
 800bf86:	da0b      	bge.n	800bfa0 <_ZNK8touchgfx4Rect9intersectEss+0x2c>
 800bf88:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 800bf8c:	4293      	cmp	r3, r2
 800bf8e:	dc07      	bgt.n	800bfa0 <_ZNK8touchgfx4Rect9intersectEss+0x2c>
 800bf90:	88c0      	ldrh	r0, [r0, #6]
 800bf92:	4418      	add	r0, r3
 800bf94:	b200      	sxth	r0, r0
 800bf96:	4282      	cmp	r2, r0
 800bf98:	bfac      	ite	ge
 800bf9a:	2000      	movge	r0, #0
 800bf9c:	2001      	movlt	r0, #1
 800bf9e:	bd10      	pop	{r4, pc}
 800bfa0:	2000      	movs	r0, #0
 800bfa2:	e7fc      	b.n	800bf9e <_ZNK8touchgfx4Rect9intersectEss+0x2a>

0800bfa4 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE>:
 800bfa4:	b5f0      	push	{r4, r5, r6, r7, lr}
 800bfa6:	460c      	mov	r4, r1
 800bfa8:	6b01      	ldr	r1, [r0, #48]	; 0x30
 800bfaa:	b089      	sub	sp, #36	; 0x24
 800bfac:	4605      	mov	r5, r0
 800bfae:	2900      	cmp	r1, #0
 800bfb0:	d054      	beq.n	800c05c <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xb8>
 800bfb2:	4668      	mov	r0, sp
 800bfb4:	f7ff feee 	bl	800bd94 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800bfb8:	8eae      	ldrh	r6, [r5, #52]	; 0x34
 800bfba:	8eef      	ldrh	r7, [r5, #54]	; 0x36
 800bfbc:	8922      	ldrh	r2, [r4, #8]
 800bfbe:	88e1      	ldrh	r1, [r4, #6]
 800bfc0:	443a      	add	r2, r7
 800bfc2:	4431      	add	r1, r6
 800bfc4:	b212      	sxth	r2, r2
 800bfc6:	b209      	sxth	r1, r1
 800bfc8:	4668      	mov	r0, sp
 800bfca:	f7ff ffd3 	bl	800bf74 <_ZNK8touchgfx4Rect9intersectEss>
 800bfce:	b1d0      	cbz	r0, 800c006 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x62>
 800bfd0:	89a2      	ldrh	r2, [r4, #12]
 800bfd2:	8961      	ldrh	r1, [r4, #10]
 800bfd4:	443a      	add	r2, r7
 800bfd6:	4431      	add	r1, r6
 800bfd8:	b212      	sxth	r2, r2
 800bfda:	b209      	sxth	r1, r1
 800bfdc:	4668      	mov	r0, sp
 800bfde:	f7ff ffc9 	bl	800bf74 <_ZNK8touchgfx4Rect9intersectEss>
 800bfe2:	4603      	mov	r3, r0
 800bfe4:	b978      	cbnz	r0, 800c006 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x62>
 800bfe6:	4a1e      	ldr	r2, [pc, #120]	; (800c060 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xbc>)
 800bfe8:	9204      	str	r2, [sp, #16]
 800bfea:	6b28      	ldr	r0, [r5, #48]	; 0x30
 800bfec:	f8ad 3016 	strh.w	r3, [sp, #22]
 800bff0:	2202      	movs	r2, #2
 800bff2:	f88d 2014 	strb.w	r2, [sp, #20]
 800bff6:	f8ad 3018 	strh.w	r3, [sp, #24]
 800bffa:	f8ad 301a 	strh.w	r3, [sp, #26]
 800bffe:	6803      	ldr	r3, [r0, #0]
 800c000:	a904      	add	r1, sp, #16
 800c002:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800c004:	4798      	blx	r3
 800c006:	6b29      	ldr	r1, [r5, #48]	; 0x30
 800c008:	a802      	add	r0, sp, #8
 800c00a:	f7ff fec3 	bl	800bd94 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800c00e:	f8bd 2008 	ldrh.w	r2, [sp, #8]
 800c012:	88e0      	ldrh	r0, [r4, #6]
 800c014:	8961      	ldrh	r1, [r4, #10]
 800c016:	f8b5 c034 	ldrh.w	ip, [r5, #52]	; 0x34
 800c01a:	f8bd e00a 	ldrh.w	lr, [sp, #10]
 800c01e:	8923      	ldrh	r3, [r4, #8]
 800c020:	8eee      	ldrh	r6, [r5, #54]	; 0x36
 800c022:	7927      	ldrb	r7, [r4, #4]
 800c024:	f88d 7014 	strb.w	r7, [sp, #20]
 800c028:	1a80      	subs	r0, r0, r2
 800c02a:	1a89      	subs	r1, r1, r2
 800c02c:	89a2      	ldrh	r2, [r4, #12]
 800c02e:	4c0d      	ldr	r4, [pc, #52]	; (800c064 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xc0>)
 800c030:	9404      	str	r4, [sp, #16]
 800c032:	4460      	add	r0, ip
 800c034:	eba3 030e 	sub.w	r3, r3, lr
 800c038:	eba2 020e 	sub.w	r2, r2, lr
 800c03c:	f8ad 0016 	strh.w	r0, [sp, #22]
 800c040:	4433      	add	r3, r6
 800c042:	4461      	add	r1, ip
 800c044:	4432      	add	r2, r6
 800c046:	6b28      	ldr	r0, [r5, #48]	; 0x30
 800c048:	f8ad 101a 	strh.w	r1, [sp, #26]
 800c04c:	f8ad 3018 	strh.w	r3, [sp, #24]
 800c050:	f8ad 201c 	strh.w	r2, [sp, #28]
 800c054:	6803      	ldr	r3, [r0, #0]
 800c056:	a904      	add	r1, sp, #16
 800c058:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800c05a:	4798      	blx	r3
 800c05c:	b009      	add	sp, #36	; 0x24
 800c05e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800c060:	0801be10 	.word	0x0801be10
 800c064:	0801be24 	.word	0x0801be24

0800c068 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE>:
 800c068:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c06c:	f8d0 9030 	ldr.w	r9, [r0, #48]	; 0x30
 800c070:	790b      	ldrb	r3, [r1, #4]
 800c072:	b0a1      	sub	sp, #132	; 0x84
 800c074:	4604      	mov	r4, r0
 800c076:	460d      	mov	r5, r1
 800c078:	f1b9 0f00 	cmp.w	r9, #0
 800c07c:	d00f      	beq.n	800c09e <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x36>
 800c07e:	2b00      	cmp	r3, #0
 800c080:	f040 80a0 	bne.w	800c1c4 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x15c>
 800c084:	b021      	add	sp, #132	; 0x84
 800c086:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c08a:	f104 0330 	add.w	r3, r4, #48	; 0x30
 800c08e:	f9b5 2008 	ldrsh.w	r2, [r5, #8]
 800c092:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 800c096:	1d20      	adds	r0, r4, #4
 800c098:	f7fc fa1a 	bl	80084d0 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 800c09c:	e092      	b.n	800c1c4 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x15c>
 800c09e:	2b00      	cmp	r3, #0
 800c0a0:	d1f0      	bne.n	800c084 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x1c>
 800c0a2:	4b5e      	ldr	r3, [pc, #376]	; (800c21c <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x1b4>)
 800c0a4:	681b      	ldr	r3, [r3, #0]
 800c0a6:	f893 a049 	ldrb.w	sl, [r3, #73]	; 0x49
 800c0aa:	f8c4 9034 	str.w	r9, [r4, #52]	; 0x34
 800c0ae:	f1ba 0f03 	cmp.w	sl, #3
 800c0b2:	ddea      	ble.n	800c08a <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x22>
 800c0b4:	f1ba 0f0c 	cmp.w	sl, #12
 800c0b8:	f04f 0303 	mov.w	r3, #3
 800c0bc:	bfdc      	itt	le
 800c0be:	f10a 32ff 	addle.w	r2, sl, #4294967295
 800c0c2:	fb92 f3f3 	sdivle	r3, r2, r3
 800c0c6:	9301      	str	r3, [sp, #4]
 800c0c8:	4b55      	ldr	r3, [pc, #340]	; (800c220 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x1b8>)
 800c0ca:	4956      	ldr	r1, [pc, #344]	; (800c224 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x1bc>)
 800c0cc:	f9b3 2000 	ldrsh.w	r2, [r3]
 800c0d0:	4b55      	ldr	r3, [pc, #340]	; (800c228 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x1c0>)
 800c0d2:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
 800c0d6:	f9b3 3000 	ldrsh.w	r3, [r3]
 800c0da:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 800c0de:	ab0e      	add	r3, sp, #56	; 0x38
 800c0e0:	2248      	movs	r2, #72	; 0x48
 800c0e2:	2600      	movs	r6, #0
 800c0e4:	4618      	mov	r0, r3
 800c0e6:	960a      	str	r6, [sp, #40]	; 0x28
 800c0e8:	f00c fdfe 	bl	8018ce8 <memcpy>
 800c0ec:	f04f 32ff 	mov.w	r2, #4294967295
 800c0f0:	e9cd 2006 	strd	r2, r0, [sp, #24]
 800c0f4:	f8cd a008 	str.w	sl, [sp, #8]
 800c0f8:	e9dd 2301 	ldrd	r2, r3, [sp, #4]
 800c0fc:	fb93 f3f2 	sdiv	r3, r3, r2
 800c100:	b29b      	uxth	r3, r3
 800c102:	46b3      	mov	fp, r6
 800c104:	9303      	str	r3, [sp, #12]
 800c106:	2300      	movs	r3, #0
 800c108:	9309      	str	r3, [sp, #36]	; 0x24
 800c10a:	9b07      	ldr	r3, [sp, #28]
 800c10c:	9a03      	ldr	r2, [sp, #12]
 800c10e:	f853 303b 	ldr.w	r3, [r3, fp, lsl #3]
 800c112:	88ef      	ldrh	r7, [r5, #6]
 800c114:	f8b5 8008 	ldrh.w	r8, [r5, #8]
 800c118:	fb13 f302 	smulbb	r3, r3, r2
 800c11c:	b29b      	uxth	r3, r3
 800c11e:	9304      	str	r3, [sp, #16]
 800c120:	9b07      	ldr	r3, [sp, #28]
 800c122:	eb03 03cb 	add.w	r3, r3, fp, lsl #3
 800c126:	a80a      	add	r0, sp, #40	; 0x28
 800c128:	685b      	ldr	r3, [r3, #4]
 800c12a:	fb13 f302 	smulbb	r3, r3, r2
 800c12e:	b29b      	uxth	r3, r3
 800c130:	9305      	str	r3, [sp, #20]
 800c132:	9b04      	ldr	r3, [sp, #16]
 800c134:	441f      	add	r7, r3
 800c136:	9b05      	ldr	r3, [sp, #20]
 800c138:	4498      	add	r8, r3
 800c13a:	b23f      	sxth	r7, r7
 800c13c:	fa0f f888 	sxth.w	r8, r8
 800c140:	4642      	mov	r2, r8
 800c142:	4639      	mov	r1, r7
 800c144:	f7ff ff16 	bl	800bf74 <_ZNK8touchgfx4Rect9intersectEss>
 800c148:	b380      	cbz	r0, 800c1ac <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x144>
 800c14a:	4639      	mov	r1, r7
 800c14c:	ab09      	add	r3, sp, #36	; 0x24
 800c14e:	4642      	mov	r2, r8
 800c150:	1d20      	adds	r0, r4, #4
 800c152:	f7fc f9bd 	bl	80084d0 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 800c156:	9909      	ldr	r1, [sp, #36]	; 0x24
 800c158:	b341      	cbz	r1, 800c1ac <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x144>
 800c15a:	4549      	cmp	r1, r9
 800c15c:	d026      	beq.n	800c1ac <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x144>
 800c15e:	a80c      	add	r0, sp, #48	; 0x30
 800c160:	f7ff fe18 	bl	800bd94 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800c164:	f9bd 1030 	ldrsh.w	r1, [sp, #48]	; 0x30
 800c168:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 800c16c:	f9bd 2034 	ldrsh.w	r2, [sp, #52]	; 0x34
 800c170:	2002      	movs	r0, #2
 800c172:	fb92 f2f0 	sdiv	r2, r2, r0
 800c176:	440a      	add	r2, r1
 800c178:	1a99      	subs	r1, r3, r2
 800c17a:	f9bd 3036 	ldrsh.w	r3, [sp, #54]	; 0x36
 800c17e:	fb93 f3f0 	sdiv	r3, r3, r0
 800c182:	f9bd 0032 	ldrsh.w	r0, [sp, #50]	; 0x32
 800c186:	f9b5 2008 	ldrsh.w	r2, [r5, #8]
 800c18a:	4403      	add	r3, r0
 800c18c:	1ad3      	subs	r3, r2, r3
 800c18e:	435b      	muls	r3, r3
 800c190:	9a06      	ldr	r2, [sp, #24]
 800c192:	fb01 3301 	mla	r3, r1, r1, r3
 800c196:	4293      	cmp	r3, r2
 800c198:	d208      	bcs.n	800c1ac <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x144>
 800c19a:	9a04      	ldr	r2, [sp, #16]
 800c19c:	f8dd 9024 	ldr.w	r9, [sp, #36]	; 0x24
 800c1a0:	86a2      	strh	r2, [r4, #52]	; 0x34
 800c1a2:	9a05      	ldr	r2, [sp, #20]
 800c1a4:	f8c4 9030 	str.w	r9, [r4, #48]	; 0x30
 800c1a8:	86e2      	strh	r2, [r4, #54]	; 0x36
 800c1aa:	9306      	str	r3, [sp, #24]
 800c1ac:	f10b 0b02 	add.w	fp, fp, #2
 800c1b0:	f1bb 0f08 	cmp.w	fp, #8
 800c1b4:	dda7      	ble.n	800c106 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 800c1b6:	9b02      	ldr	r3, [sp, #8]
 800c1b8:	4453      	add	r3, sl
 800c1ba:	9302      	str	r3, [sp, #8]
 800c1bc:	9b01      	ldr	r3, [sp, #4]
 800c1be:	3601      	adds	r6, #1
 800c1c0:	42b3      	cmp	r3, r6
 800c1c2:	d199      	bne.n	800c0f8 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x90>
 800c1c4:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800c1c6:	2900      	cmp	r1, #0
 800c1c8:	f43f af5c 	beq.w	800c084 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x1c>
 800c1cc:	a80c      	add	r0, sp, #48	; 0x30
 800c1ce:	f7ff fde1 	bl	800bd94 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800c1d2:	f8bd 3030 	ldrh.w	r3, [sp, #48]	; 0x30
 800c1d6:	88ea      	ldrh	r2, [r5, #6]
 800c1d8:	f8bd 0032 	ldrh.w	r0, [sp, #50]	; 0x32
 800c1dc:	7929      	ldrb	r1, [r5, #4]
 800c1de:	f88d 103c 	strb.w	r1, [sp, #60]	; 0x3c
 800c1e2:	1ad2      	subs	r2, r2, r3
 800c1e4:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 800c1e6:	441a      	add	r2, r3
 800c1e8:	892b      	ldrh	r3, [r5, #8]
 800c1ea:	f8ad 203e 	strh.w	r2, [sp, #62]	; 0x3e
 800c1ee:	1a1b      	subs	r3, r3, r0
 800c1f0:	8ee0      	ldrh	r0, [r4, #54]	; 0x36
 800c1f2:	4403      	add	r3, r0
 800c1f4:	480d      	ldr	r0, [pc, #52]	; (800c22c <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x1c4>)
 800c1f6:	900e      	str	r0, [sp, #56]	; 0x38
 800c1f8:	2600      	movs	r6, #0
 800c1fa:	6b20      	ldr	r0, [r4, #48]	; 0x30
 800c1fc:	f8ad 3040 	strh.w	r3, [sp, #64]	; 0x40
 800c200:	f8ad 6042 	strh.w	r6, [sp, #66]	; 0x42
 800c204:	6803      	ldr	r3, [r0, #0]
 800c206:	a90e      	add	r1, sp, #56	; 0x38
 800c208:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800c20a:	4798      	blx	r3
 800c20c:	792b      	ldrb	r3, [r5, #4]
 800c20e:	2b00      	cmp	r3, #0
 800c210:	f43f af38 	beq.w	800c084 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x1c>
 800c214:	e9c4 660c 	strd	r6, r6, [r4, #48]	; 0x30
 800c218:	e734      	b.n	800c084 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x1c>
 800c21a:	bf00      	nop
 800c21c:	2001218c 	.word	0x2001218c
 800c220:	20012180 	.word	0x20012180
 800c224:	08019c10 	.word	0x08019c10
 800c228:	20012182 	.word	0x20012182
 800c22c:	0801be10 	.word	0x0801be10

0800c230 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>:
 800c230:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800c232:	4604      	mov	r4, r0
 800c234:	f934 2f0c 	ldrsh.w	r2, [r4, #12]!
 800c238:	3201      	adds	r2, #1
 800c23a:	d112      	bne.n	800c262 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv+0x32>
 800c23c:	6803      	ldr	r3, [r0, #0]
 800c23e:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 800c242:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 800c246:	f8ad 1004 	strh.w	r1, [sp, #4]
 800c24a:	2500      	movs	r5, #0
 800c24c:	9500      	str	r5, [sp, #0]
 800c24e:	466d      	mov	r5, sp
 800c250:	4629      	mov	r1, r5
 800c252:	f8ad 2006 	strh.w	r2, [sp, #6]
 800c256:	6a1b      	ldr	r3, [r3, #32]
 800c258:	4798      	blx	r3
 800c25a:	e895 0003 	ldmia.w	r5, {r0, r1}
 800c25e:	e884 0003 	stmia.w	r4, {r0, r1}
 800c262:	4620      	mov	r0, r4
 800c264:	b003      	add	sp, #12
 800c266:	bd30      	pop	{r4, r5, pc}

0800c268 <_ZN8touchgfx8Drawable13getCachedAbsXEv>:
 800c268:	b513      	push	{r0, r1, r4, lr}
 800c26a:	f9b0 3020 	ldrsh.w	r3, [r0, #32]
 800c26e:	3301      	adds	r3, #1
 800c270:	4604      	mov	r4, r0
 800c272:	d109      	bne.n	800c288 <_ZN8touchgfx8Drawable13getCachedAbsXEv+0x20>
 800c274:	4601      	mov	r1, r0
 800c276:	4668      	mov	r0, sp
 800c278:	f7ff fd8c 	bl	800bd94 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800c27c:	f8bd 3000 	ldrh.w	r3, [sp]
 800c280:	8423      	strh	r3, [r4, #32]
 800c282:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800c286:	8463      	strh	r3, [r4, #34]	; 0x22
 800c288:	f9b4 0020 	ldrsh.w	r0, [r4, #32]
 800c28c:	b002      	add	sp, #8
 800c28e:	bd10      	pop	{r4, pc}

0800c290 <_ZN8touchgfx8Drawable13getCachedAbsYEv>:
 800c290:	b513      	push	{r0, r1, r4, lr}
 800c292:	f9b0 3022 	ldrsh.w	r3, [r0, #34]	; 0x22
 800c296:	3301      	adds	r3, #1
 800c298:	4604      	mov	r4, r0
 800c29a:	d109      	bne.n	800c2b0 <_ZN8touchgfx8Drawable13getCachedAbsYEv+0x20>
 800c29c:	4601      	mov	r1, r0
 800c29e:	4668      	mov	r0, sp
 800c2a0:	f7ff fd78 	bl	800bd94 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800c2a4:	f8bd 3000 	ldrh.w	r3, [sp]
 800c2a8:	8423      	strh	r3, [r4, #32]
 800c2aa:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800c2ae:	8463      	strh	r3, [r4, #34]	; 0x22
 800c2b0:	f9b4 0022 	ldrsh.w	r0, [r4, #34]	; 0x22
 800c2b4:	b002      	add	sp, #8
 800c2b6:	bd10      	pop	{r4, pc}

0800c2b8 <_ZN8touchgfx6ScreenC1Ev>:
 800c2b8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800c2ba:	4605      	mov	r5, r0
 800c2bc:	4b17      	ldr	r3, [pc, #92]	; (800c31c <_ZN8touchgfx6ScreenC1Ev+0x64>)
 800c2be:	f845 3b04 	str.w	r3, [r5], #4
 800c2c2:	2301      	movs	r3, #1
 800c2c4:	f880 3029 	strb.w	r3, [r0, #41]	; 0x29
 800c2c8:	f880 3038 	strb.w	r3, [r0, #56]	; 0x38
 800c2cc:	4b14      	ldr	r3, [pc, #80]	; (800c320 <_ZN8touchgfx6ScreenC1Ev+0x68>)
 800c2ce:	4915      	ldr	r1, [pc, #84]	; (800c324 <_ZN8touchgfx6ScreenC1Ev+0x6c>)
 800c2d0:	f9b3 7000 	ldrsh.w	r7, [r3]
 800c2d4:	4b14      	ldr	r3, [pc, #80]	; (800c328 <_ZN8touchgfx6ScreenC1Ev+0x70>)
 800c2d6:	6041      	str	r1, [r0, #4]
 800c2d8:	2200      	movs	r2, #0
 800c2da:	8102      	strh	r2, [r0, #8]
 800c2dc:	8142      	strh	r2, [r0, #10]
 800c2de:	8182      	strh	r2, [r0, #12]
 800c2e0:	81c2      	strh	r2, [r0, #14]
 800c2e2:	8202      	strh	r2, [r0, #16]
 800c2e4:	8242      	strh	r2, [r0, #18]
 800c2e6:	8282      	strh	r2, [r0, #20]
 800c2e8:	82c2      	strh	r2, [r0, #22]
 800c2ea:	e9c0 2206 	strd	r2, r2, [r0, #24]
 800c2ee:	6202      	str	r2, [r0, #32]
 800c2f0:	f880 2028 	strb.w	r2, [r0, #40]	; 0x28
 800c2f4:	e9c0 220b 	strd	r2, r2, [r0, #44]	; 0x2c
 800c2f8:	6342      	str	r2, [r0, #52]	; 0x34
 800c2fa:	f9b3 6000 	ldrsh.w	r6, [r3]
 800c2fe:	4611      	mov	r1, r2
 800c300:	4604      	mov	r4, r0
 800c302:	4628      	mov	r0, r5
 800c304:	f7f6 fafa 	bl	80028fc <_ZN8touchgfx8Drawable5setXYEss>
 800c308:	4639      	mov	r1, r7
 800c30a:	4628      	mov	r0, r5
 800c30c:	f7f6 fb03 	bl	8002916 <_ZN8touchgfx8Drawable8setWidthEs>
 800c310:	4628      	mov	r0, r5
 800c312:	4631      	mov	r1, r6
 800c314:	f7f6 fb01 	bl	800291a <_ZN8touchgfx8Drawable9setHeightEs>
 800c318:	4620      	mov	r0, r4
 800c31a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800c31c:	0801be4c 	.word	0x0801be4c
 800c320:	20012180 	.word	0x20012180
 800c324:	0801acfc 	.word	0x0801acfc
 800c328:	20012182 	.word	0x20012182

0800c32c <_ZN8touchgfx6Screen4drawEv>:
 800c32c:	b507      	push	{r0, r1, r2, lr}
 800c32e:	4b09      	ldr	r3, [pc, #36]	; (800c354 <_ZN8touchgfx6Screen4drawEv+0x28>)
 800c330:	f9b3 2000 	ldrsh.w	r2, [r3]
 800c334:	4b08      	ldr	r3, [pc, #32]	; (800c358 <_ZN8touchgfx6Screen4drawEv+0x2c>)
 800c336:	f8ad 2004 	strh.w	r2, [sp, #4]
 800c33a:	f9b3 3000 	ldrsh.w	r3, [r3]
 800c33e:	f8ad 3006 	strh.w	r3, [sp, #6]
 800c342:	6803      	ldr	r3, [r0, #0]
 800c344:	2100      	movs	r1, #0
 800c346:	9100      	str	r1, [sp, #0]
 800c348:	689b      	ldr	r3, [r3, #8]
 800c34a:	4669      	mov	r1, sp
 800c34c:	4798      	blx	r3
 800c34e:	b003      	add	sp, #12
 800c350:	f85d fb04 	ldr.w	pc, [sp], #4
 800c354:	20012180 	.word	0x20012180
 800c358:	20012182 	.word	0x20012182

0800c35c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>:
 800c35c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c360:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
 800c364:	2b00      	cmp	r3, #0
 800c366:	b089      	sub	sp, #36	; 0x24
 800c368:	4680      	mov	r8, r0
 800c36a:	460c      	mov	r4, r1
 800c36c:	4615      	mov	r5, r2
 800c36e:	dd0e      	ble.n	800c38e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 800c370:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
 800c374:	2b00      	cmp	r3, #0
 800c376:	dd0a      	ble.n	800c38e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 800c378:	4628      	mov	r0, r5
 800c37a:	f7ff ff59 	bl	800c230 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 800c37e:	4621      	mov	r1, r4
 800c380:	f7fe ff06 	bl	800b190 <_ZNK8touchgfx4Rect9intersectERKS0_>
 800c384:	69eb      	ldr	r3, [r5, #28]
 800c386:	b928      	cbnz	r0, 800c394 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x38>
 800c388:	461d      	mov	r5, r3
 800c38a:	2b00      	cmp	r3, #0
 800c38c:	d1f4      	bne.n	800c378 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1c>
 800c38e:	b009      	add	sp, #36	; 0x24
 800c390:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c394:	ae04      	add	r6, sp, #16
 800c396:	2b00      	cmp	r3, #0
 800c398:	d051      	beq.n	800c43e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xe2>
 800c39a:	682b      	ldr	r3, [r5, #0]
 800c39c:	4629      	mov	r1, r5
 800c39e:	68db      	ldr	r3, [r3, #12]
 800c3a0:	a802      	add	r0, sp, #8
 800c3a2:	4798      	blx	r3
 800c3a4:	4628      	mov	r0, r5
 800c3a6:	f7ff ff5f 	bl	800c268 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 800c3aa:	f8bd 7008 	ldrh.w	r7, [sp, #8]
 800c3ae:	4407      	add	r7, r0
 800c3b0:	4628      	mov	r0, r5
 800c3b2:	f7ff ff6d 	bl	800c290 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 800c3b6:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 800c3ba:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 800c3be:	f8ad 2014 	strh.w	r2, [sp, #20]
 800c3c2:	4418      	add	r0, r3
 800c3c4:	4621      	mov	r1, r4
 800c3c6:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 800c3ca:	f8ad 0012 	strh.w	r0, [sp, #18]
 800c3ce:	b23f      	sxth	r7, r7
 800c3d0:	4630      	mov	r0, r6
 800c3d2:	f8ad 3016 	strh.w	r3, [sp, #22]
 800c3d6:	f8ad 7010 	strh.w	r7, [sp, #16]
 800c3da:	f7fc f933 	bl	8008644 <_ZN8touchgfx4RectaNERKS0_>
 800c3de:	4628      	mov	r0, r5
 800c3e0:	f7ff ff26 	bl	800c230 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 800c3e4:	4602      	mov	r2, r0
 800c3e6:	e896 0003 	ldmia.w	r6, {r0, r1}
 800c3ea:	ab06      	add	r3, sp, #24
 800c3ec:	e883 0003 	stmia.w	r3, {r0, r1}
 800c3f0:	4611      	mov	r1, r2
 800c3f2:	4618      	mov	r0, r3
 800c3f4:	f7fc f926 	bl	8008644 <_ZN8touchgfx4RectaNERKS0_>
 800c3f8:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 800c3fc:	f9b4 1000 	ldrsh.w	r1, [r4]
 800c400:	f9bd a01a 	ldrsh.w	sl, [sp, #26]
 800c404:	f9bd b01c 	ldrsh.w	fp, [sp, #28]
 800c408:	f9bd 901e 	ldrsh.w	r9, [sp, #30]
 800c40c:	4299      	cmp	r1, r3
 800c40e:	d10b      	bne.n	800c428 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xcc>
 800c410:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 800c414:	4552      	cmp	r2, sl
 800c416:	d107      	bne.n	800c428 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xcc>
 800c418:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 800c41c:	455a      	cmp	r2, fp
 800c41e:	d103      	bne.n	800c428 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xcc>
 800c420:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 800c424:	454a      	cmp	r2, r9
 800c426:	d00a      	beq.n	800c43e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xe2>
 800c428:	f1bb 0f00 	cmp.w	fp, #0
 800c42c:	d002      	beq.n	800c434 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xd8>
 800c42e:	f1b9 0f00 	cmp.w	r9, #0
 800c432:	d12e      	bne.n	800c492 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x136>
 800c434:	69ea      	ldr	r2, [r5, #28]
 800c436:	4621      	mov	r1, r4
 800c438:	4640      	mov	r0, r8
 800c43a:	f7ff ff8f 	bl	800c35c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 800c43e:	4628      	mov	r0, r5
 800c440:	f7ff fef6 	bl	800c230 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 800c444:	6861      	ldr	r1, [r4, #4]
 800c446:	4602      	mov	r2, r0
 800c448:	6820      	ldr	r0, [r4, #0]
 800c44a:	4633      	mov	r3, r6
 800c44c:	c303      	stmia	r3!, {r0, r1}
 800c44e:	4611      	mov	r1, r2
 800c450:	4630      	mov	r0, r6
 800c452:	f7fc f8f7 	bl	8008644 <_ZN8touchgfx4RectaNERKS0_>
 800c456:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 800c45a:	2b00      	cmp	r3, #0
 800c45c:	dd97      	ble.n	800c38e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 800c45e:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 800c462:	2b00      	cmp	r3, #0
 800c464:	dd93      	ble.n	800c38e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 800c466:	4628      	mov	r0, r5
 800c468:	f7ff fefe 	bl	800c268 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 800c46c:	f8bd 3010 	ldrh.w	r3, [sp, #16]
 800c470:	1a18      	subs	r0, r3, r0
 800c472:	f8ad 0010 	strh.w	r0, [sp, #16]
 800c476:	4628      	mov	r0, r5
 800c478:	f7ff ff0a 	bl	800c290 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 800c47c:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800c480:	1a18      	subs	r0, r3, r0
 800c482:	f8ad 0012 	strh.w	r0, [sp, #18]
 800c486:	682b      	ldr	r3, [r5, #0]
 800c488:	4631      	mov	r1, r6
 800c48a:	689b      	ldr	r3, [r3, #8]
 800c48c:	4628      	mov	r0, r5
 800c48e:	4798      	blx	r3
 800c490:	e77d      	b.n	800c38e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 800c492:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 800c496:	fa1f f08a 	uxth.w	r0, sl
 800c49a:	4552      	cmp	r2, sl
 800c49c:	9000      	str	r0, [sp, #0]
 800c49e:	da12      	bge.n	800c4c6 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x16a>
 800c4a0:	9301      	str	r3, [sp, #4]
 800c4a2:	9b00      	ldr	r3, [sp, #0]
 800c4a4:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 800c4a8:	f8ad 2012 	strh.w	r2, [sp, #18]
 800c4ac:	1a9a      	subs	r2, r3, r2
 800c4ae:	f8ad 1010 	strh.w	r1, [sp, #16]
 800c4b2:	f8ad 0014 	strh.w	r0, [sp, #20]
 800c4b6:	f8ad 2016 	strh.w	r2, [sp, #22]
 800c4ba:	69ea      	ldr	r2, [r5, #28]
 800c4bc:	4631      	mov	r1, r6
 800c4be:	4640      	mov	r0, r8
 800c4c0:	f7ff ff4c 	bl	800c35c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 800c4c4:	9b01      	ldr	r3, [sp, #4]
 800c4c6:	f9b4 2000 	ldrsh.w	r2, [r4]
 800c4ca:	429a      	cmp	r2, r3
 800c4cc:	b29f      	uxth	r7, r3
 800c4ce:	da0d      	bge.n	800c4ec <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x190>
 800c4d0:	f8ad 2010 	strh.w	r2, [sp, #16]
 800c4d4:	1aba      	subs	r2, r7, r2
 800c4d6:	f8ad a012 	strh.w	sl, [sp, #18]
 800c4da:	f8ad 2014 	strh.w	r2, [sp, #20]
 800c4de:	f8ad 9016 	strh.w	r9, [sp, #22]
 800c4e2:	69ea      	ldr	r2, [r5, #28]
 800c4e4:	4631      	mov	r1, r6
 800c4e6:	4640      	mov	r0, r8
 800c4e8:	f7ff ff38 	bl	800c35c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 800c4ec:	8822      	ldrh	r2, [r4, #0]
 800c4ee:	88a3      	ldrh	r3, [r4, #4]
 800c4f0:	445f      	add	r7, fp
 800c4f2:	4413      	add	r3, r2
 800c4f4:	b29b      	uxth	r3, r3
 800c4f6:	b2bf      	uxth	r7, r7
 800c4f8:	b23a      	sxth	r2, r7
 800c4fa:	b219      	sxth	r1, r3
 800c4fc:	4291      	cmp	r1, r2
 800c4fe:	dd0d      	ble.n	800c51c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1c0>
 800c500:	1bdb      	subs	r3, r3, r7
 800c502:	f8ad 2010 	strh.w	r2, [sp, #16]
 800c506:	f8ad a012 	strh.w	sl, [sp, #18]
 800c50a:	f8ad 3014 	strh.w	r3, [sp, #20]
 800c50e:	f8ad 9016 	strh.w	r9, [sp, #22]
 800c512:	69ea      	ldr	r2, [r5, #28]
 800c514:	4631      	mov	r1, r6
 800c516:	4640      	mov	r0, r8
 800c518:	f7ff ff20 	bl	800c35c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 800c51c:	88e2      	ldrh	r2, [r4, #6]
 800c51e:	8863      	ldrh	r3, [r4, #2]
 800c520:	4413      	add	r3, r2
 800c522:	9a00      	ldr	r2, [sp, #0]
 800c524:	444a      	add	r2, r9
 800c526:	b29b      	uxth	r3, r3
 800c528:	fa1f f982 	uxth.w	r9, r2
 800c52c:	fa0f f289 	sxth.w	r2, r9
 800c530:	b219      	sxth	r1, r3
 800c532:	428a      	cmp	r2, r1
 800c534:	da83      	bge.n	800c43e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xe2>
 800c536:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 800c53a:	f9b4 0000 	ldrsh.w	r0, [r4]
 800c53e:	f8ad 1014 	strh.w	r1, [sp, #20]
 800c542:	eba3 0309 	sub.w	r3, r3, r9
 800c546:	f8ad 0010 	strh.w	r0, [sp, #16]
 800c54a:	f8ad 2012 	strh.w	r2, [sp, #18]
 800c54e:	f8ad 3016 	strh.w	r3, [sp, #22]
 800c552:	69ea      	ldr	r2, [r5, #28]
 800c554:	4631      	mov	r1, r6
 800c556:	e76f      	b.n	800c438 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xdc>

0800c558 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>:
 800c558:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800c55a:	aa02      	add	r2, sp, #8
 800c55c:	2300      	movs	r3, #0
 800c55e:	f842 3d04 	str.w	r3, [r2, #-4]!
 800c562:	4604      	mov	r4, r0
 800c564:	3004      	adds	r0, #4
 800c566:	460d      	mov	r5, r1
 800c568:	f7fc f944 	bl	80087f4 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>
 800c56c:	9a01      	ldr	r2, [sp, #4]
 800c56e:	b11a      	cbz	r2, 800c578 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE+0x20>
 800c570:	4629      	mov	r1, r5
 800c572:	4620      	mov	r0, r4
 800c574:	f7ff fef2 	bl	800c35c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 800c578:	b003      	add	sp, #12
 800c57a:	bd30      	pop	{r4, r5, pc}

0800c57c <_ZN8touchgfx6Screen4drawERNS_4RectE>:
 800c57c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800c57e:	4602      	mov	r2, r0
 800c580:	4604      	mov	r4, r0
 800c582:	f852 0f08 	ldr.w	r0, [r2, #8]!
 800c586:	460d      	mov	r5, r1
 800c588:	6851      	ldr	r1, [r2, #4]
 800c58a:	466b      	mov	r3, sp
 800c58c:	c303      	stmia	r3!, {r0, r1}
 800c58e:	4629      	mov	r1, r5
 800c590:	4668      	mov	r0, sp
 800c592:	f7fc f857 	bl	8008644 <_ZN8touchgfx4RectaNERKS0_>
 800c596:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 800c59a:	4669      	mov	r1, sp
 800c59c:	b123      	cbz	r3, 800c5a8 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2c>
 800c59e:	4620      	mov	r0, r4
 800c5a0:	f7ff ffda 	bl	800c558 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>
 800c5a4:	b003      	add	sp, #12
 800c5a6:	bd30      	pop	{r4, r5, pc}
 800c5a8:	1d20      	adds	r0, r4, #4
 800c5aa:	f7fc f8ea 	bl	8008782 <_ZNK8touchgfx9Container4drawERKNS_4RectE>
 800c5ae:	e7f9      	b.n	800c5a4 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x28>

0800c5b0 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>:
 800c5b0:	680a      	ldr	r2, [r1, #0]
 800c5b2:	460b      	mov	r3, r1
 800c5b4:	6992      	ldr	r2, [r2, #24]
 800c5b6:	1d01      	adds	r1, r0, #4
 800c5b8:	4618      	mov	r0, r3
 800c5ba:	4710      	bx	r2

0800c5bc <_ZN8touchgfx12TextProviderC1Ev>:
 800c5bc:	b510      	push	{r4, lr}
 800c5be:	2300      	movs	r3, #0
 800c5c0:	2201      	movs	r2, #1
 800c5c2:	4604      	mov	r4, r0
 800c5c4:	e9c0 3300 	strd	r3, r3, [r0]
 800c5c8:	60c3      	str	r3, [r0, #12]
 800c5ca:	7403      	strb	r3, [r0, #16]
 800c5cc:	82c3      	strh	r3, [r0, #22]
 800c5ce:	8303      	strh	r3, [r0, #24]
 800c5d0:	85c3      	strh	r3, [r0, #46]	; 0x2e
 800c5d2:	8603      	strh	r3, [r0, #48]	; 0x30
 800c5d4:	86c3      	strh	r3, [r0, #54]	; 0x36
 800c5d6:	8703      	strh	r3, [r0, #56]	; 0x38
 800c5d8:	63c3      	str	r3, [r0, #60]	; 0x3c
 800c5da:	f8a0 304e 	strh.w	r3, [r0, #78]	; 0x4e
 800c5de:	f8a0 3050 	strh.w	r3, [r0, #80]	; 0x50
 800c5e2:	f8a0 3052 	strh.w	r3, [r0, #82]	; 0x52
 800c5e6:	f880 2054 	strb.w	r2, [r0, #84]	; 0x54
 800c5ea:	f880 3055 	strb.w	r3, [r0, #85]	; 0x55
 800c5ee:	f7f6 f8fd 	bl	80027ec <_ZN8touchgfx12TextProvider18initializeInternalEv>
 800c5f2:	4620      	mov	r0, r4
 800c5f4:	bd10      	pop	{r4, pc}

0800c5f6 <_ZN8touchgfx12TextProvider19getNextCharInternalEv>:
 800c5f6:	b530      	push	{r4, r5, lr}
 800c5f8:	2500      	movs	r5, #0
 800c5fa:	2401      	movs	r4, #1
 800c5fc:	6843      	ldr	r3, [r0, #4]
 800c5fe:	b913      	cbnz	r3, 800c606 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x10>
 800c600:	6803      	ldr	r3, [r0, #0]
 800c602:	b1f3      	cbz	r3, 800c642 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x4c>
 800c604:	6043      	str	r3, [r0, #4]
 800c606:	7c03      	ldrb	r3, [r0, #16]
 800c608:	b143      	cbz	r3, 800c61c <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x26>
 800c60a:	68c3      	ldr	r3, [r0, #12]
 800c60c:	b12b      	cbz	r3, 800c61a <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 800c60e:	881a      	ldrh	r2, [r3, #0]
 800c610:	b11a      	cbz	r2, 800c61a <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 800c612:	1c9a      	adds	r2, r3, #2
 800c614:	60c2      	str	r2, [r0, #12]
 800c616:	8818      	ldrh	r0, [r3, #0]
 800c618:	bd30      	pop	{r4, r5, pc}
 800c61a:	7405      	strb	r5, [r0, #16]
 800c61c:	6843      	ldr	r3, [r0, #4]
 800c61e:	8819      	ldrh	r1, [r3, #0]
 800c620:	b179      	cbz	r1, 800c642 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x4c>
 800c622:	1c9a      	adds	r2, r3, #2
 800c624:	2902      	cmp	r1, #2
 800c626:	6042      	str	r2, [r0, #4]
 800c628:	d1f5      	bne.n	800c616 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x20>
 800c62a:	6883      	ldr	r3, [r0, #8]
 800c62c:	1d1a      	adds	r2, r3, #4
 800c62e:	6082      	str	r2, [r0, #8]
 800c630:	681b      	ldr	r3, [r3, #0]
 800c632:	60c3      	str	r3, [r0, #12]
 800c634:	2b00      	cmp	r3, #0
 800c636:	d0e1      	beq.n	800c5fc <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 800c638:	881b      	ldrh	r3, [r3, #0]
 800c63a:	2b00      	cmp	r3, #0
 800c63c:	d0de      	beq.n	800c5fc <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 800c63e:	7404      	strb	r4, [r0, #16]
 800c640:	e7dc      	b.n	800c5fc <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 800c642:	2000      	movs	r0, #0
 800c644:	e7e8      	b.n	800c618 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x22>

0800c646 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_>:
 800c646:	b410      	push	{r4}
 800c648:	63c3      	str	r3, [r0, #60]	; 0x3c
 800c64a:	2300      	movs	r3, #0
 800c64c:	6082      	str	r2, [r0, #8]
 800c64e:	6001      	str	r1, [r0, #0]
 800c650:	6043      	str	r3, [r0, #4]
 800c652:	60c3      	str	r3, [r0, #12]
 800c654:	7403      	strb	r3, [r0, #16]
 800c656:	8603      	strh	r3, [r0, #48]	; 0x30
 800c658:	8303      	strh	r3, [r0, #24]
 800c65a:	8703      	strh	r3, [r0, #56]	; 0x38
 800c65c:	f85d 4b04 	ldr.w	r4, [sp], #4
 800c660:	f7f6 b8c4 	b.w	80027ec <_ZN8touchgfx12TextProvider18initializeInternalEv>

0800c664 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>:
 800c664:	b5f0      	push	{r4, r5, r6, r7, lr}
 800c666:	4605      	mov	r5, r0
 800c668:	4608      	mov	r0, r1
 800c66a:	b1e9      	cbz	r1, 800c6a8 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x44>
 800c66c:	f105 0440 	add.w	r4, r5, #64	; 0x40
 800c670:	460b      	mov	r3, r1
 800c672:	f101 0708 	add.w	r7, r1, #8
 800c676:	4622      	mov	r2, r4
 800c678:	6818      	ldr	r0, [r3, #0]
 800c67a:	6859      	ldr	r1, [r3, #4]
 800c67c:	4626      	mov	r6, r4
 800c67e:	c603      	stmia	r6!, {r0, r1}
 800c680:	3308      	adds	r3, #8
 800c682:	42bb      	cmp	r3, r7
 800c684:	4634      	mov	r4, r6
 800c686:	d1f7      	bne.n	800c678 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x14>
 800c688:	6818      	ldr	r0, [r3, #0]
 800c68a:	6030      	str	r0, [r6, #0]
 800c68c:	889b      	ldrh	r3, [r3, #4]
 800c68e:	80b3      	strh	r3, [r6, #4]
 800c690:	f895 304d 	ldrb.w	r3, [r5, #77]	; 0x4d
 800c694:	015b      	lsls	r3, r3, #5
 800c696:	f403 7180 	and.w	r1, r3, #256	; 0x100
 800c69a:	f895 3046 	ldrb.w	r3, [r5, #70]	; 0x46
 800c69e:	430b      	orrs	r3, r1
 800c6a0:	425b      	negs	r3, r3
 800c6a2:	f885 3049 	strb.w	r3, [r5, #73]	; 0x49
 800c6a6:	4610      	mov	r0, r2
 800c6a8:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800c6aa <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>:
 800c6aa:	b538      	push	{r3, r4, r5, lr}
 800c6ac:	460c      	mov	r4, r1
 800c6ae:	6811      	ldr	r1, [r2, #0]
 800c6b0:	4610      	mov	r0, r2
 800c6b2:	68cd      	ldr	r5, [r1, #12]
 800c6b4:	4619      	mov	r1, r3
 800c6b6:	47a8      	blx	r5
 800c6b8:	2800      	cmp	r0, #0
 800c6ba:	bf08      	it	eq
 800c6bc:	4620      	moveq	r0, r4
 800c6be:	bd38      	pop	{r3, r4, r5, pc}

0800c6c0 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>:
 800c6c0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800c6c2:	4604      	mov	r4, r0
 800c6c4:	4615      	mov	r5, r2
 800c6c6:	4608      	mov	r0, r1
 800c6c8:	b93a      	cbnz	r2, 800c6da <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1a>
 800c6ca:	f8a4 204e 	strh.w	r2, [r4, #78]	; 0x4e
 800c6ce:	f8a4 2050 	strh.w	r2, [r4, #80]	; 0x50
 800c6d2:	f8a4 2052 	strh.w	r2, [r4, #82]	; 0x52
 800c6d6:	4628      	mov	r0, r5
 800c6d8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800c6da:	f892 c00d 	ldrb.w	ip, [r2, #13]
 800c6de:	8893      	ldrh	r3, [r2, #4]
 800c6e0:	ea4f 160c 	mov.w	r6, ip, lsl #4
 800c6e4:	f406 7280 	and.w	r2, r6, #256	; 0x100
 800c6e8:	79ee      	ldrb	r6, [r5, #7]
 800c6ea:	4316      	orrs	r6, r2
 800c6ec:	f46f 6263 	mvn.w	r2, #3632	; 0xe30
 800c6f0:	189a      	adds	r2, r3, r2
 800c6f2:	b291      	uxth	r1, r2
 800c6f4:	291d      	cmp	r1, #29
 800c6f6:	b2b7      	uxth	r7, r6
 800c6f8:	f200 8083 	bhi.w	800c802 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x142>
 800c6fc:	2201      	movs	r2, #1
 800c6fe:	408a      	lsls	r2, r1
 800c700:	4978      	ldr	r1, [pc, #480]	; (800c8e4 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x224>)
 800c702:	420a      	tst	r2, r1
 800c704:	ea4f 06e6 	mov.w	r6, r6, asr #3
 800c708:	d12d      	bne.n	800c766 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xa6>
 800c70a:	f412 7f60 	tst.w	r2, #896	; 0x380
 800c70e:	d078      	beq.n	800c802 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x142>
 800c710:	f104 0240 	add.w	r2, r4, #64	; 0x40
 800c714:	462b      	mov	r3, r5
 800c716:	f105 0e08 	add.w	lr, r5, #8
 800c71a:	4615      	mov	r5, r2
 800c71c:	6818      	ldr	r0, [r3, #0]
 800c71e:	6859      	ldr	r1, [r3, #4]
 800c720:	4694      	mov	ip, r2
 800c722:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 800c726:	3308      	adds	r3, #8
 800c728:	4573      	cmp	r3, lr
 800c72a:	4662      	mov	r2, ip
 800c72c:	d1f6      	bne.n	800c71c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x5c>
 800c72e:	6818      	ldr	r0, [r3, #0]
 800c730:	f8cc 0000 	str.w	r0, [ip]
 800c734:	889b      	ldrh	r3, [r3, #4]
 800c736:	f8ac 3004 	strh.w	r3, [ip, #4]
 800c73a:	f8b4 1050 	ldrh.w	r1, [r4, #80]	; 0x50
 800c73e:	f894 004d 	ldrb.w	r0, [r4, #77]	; 0x4d
 800c742:	b2b3      	uxth	r3, r6
 800c744:	1aca      	subs	r2, r1, r3
 800c746:	b292      	uxth	r2, r2
 800c748:	f884 2048 	strb.w	r2, [r4, #72]	; 0x48
 800c74c:	10d2      	asrs	r2, r2, #3
 800c74e:	f020 0060 	bic.w	r0, r0, #96	; 0x60
 800c752:	f002 0260 	and.w	r2, r2, #96	; 0x60
 800c756:	4302      	orrs	r2, r0
 800c758:	1bcf      	subs	r7, r1, r7
 800c75a:	f884 204d 	strb.w	r2, [r4, #77]	; 0x4d
 800c75e:	1afb      	subs	r3, r7, r3
 800c760:	f8a4 3050 	strh.w	r3, [r4, #80]	; 0x50
 800c764:	e7b7      	b.n	800c6d6 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 800c766:	8e23      	ldrh	r3, [r4, #48]	; 0x30
 800c768:	b92b      	cbnz	r3, 800c776 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xb6>
 800c76a:	4b5f      	ldr	r3, [pc, #380]	; (800c8e8 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x228>)
 800c76c:	4a5f      	ldr	r2, [pc, #380]	; (800c8ec <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x22c>)
 800c76e:	4860      	ldr	r0, [pc, #384]	; (800c8f0 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x230>)
 800c770:	21c0      	movs	r1, #192	; 0xc0
 800c772:	f00c fa3b 	bl	8018bec <__assert_func>
 800c776:	8de3      	ldrh	r3, [r4, #46]	; 0x2e
 800c778:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 800c77c:	8b59      	ldrh	r1, [r3, #26]
 800c77e:	f640 6333 	movw	r3, #3635	; 0xe33
 800c782:	4299      	cmp	r1, r3
 800c784:	d110      	bne.n	800c7a8 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xe8>
 800c786:	6803      	ldr	r3, [r0, #0]
 800c788:	68db      	ldr	r3, [r3, #12]
 800c78a:	4798      	blx	r3
 800c78c:	7b41      	ldrb	r1, [r0, #13]
 800c78e:	00cb      	lsls	r3, r1, #3
 800c790:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800c794:	7a03      	ldrb	r3, [r0, #8]
 800c796:	0648      	lsls	r0, r1, #25
 800c798:	ea43 0302 	orr.w	r3, r3, r2
 800c79c:	bf44      	itt	mi
 800c79e:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 800c7a2:	b21b      	sxthmi	r3, r3
 800c7a4:	f8a4 304e 	strh.w	r3, [r4, #78]	; 0x4e
 800c7a8:	f8b4 304e 	ldrh.w	r3, [r4, #78]	; 0x4e
 800c7ac:	443b      	add	r3, r7
 800c7ae:	4433      	add	r3, r6
 800c7b0:	b29b      	uxth	r3, r3
 800c7b2:	f104 0640 	add.w	r6, r4, #64	; 0x40
 800c7b6:	462a      	mov	r2, r5
 800c7b8:	f105 0c08 	add.w	ip, r5, #8
 800c7bc:	f8a4 304e 	strh.w	r3, [r4, #78]	; 0x4e
 800c7c0:	4635      	mov	r5, r6
 800c7c2:	6810      	ldr	r0, [r2, #0]
 800c7c4:	6851      	ldr	r1, [r2, #4]
 800c7c6:	4637      	mov	r7, r6
 800c7c8:	c703      	stmia	r7!, {r0, r1}
 800c7ca:	3208      	adds	r2, #8
 800c7cc:	4562      	cmp	r2, ip
 800c7ce:	463e      	mov	r6, r7
 800c7d0:	d1f7      	bne.n	800c7c2 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x102>
 800c7d2:	6810      	ldr	r0, [r2, #0]
 800c7d4:	6038      	str	r0, [r7, #0]
 800c7d6:	8892      	ldrh	r2, [r2, #4]
 800c7d8:	80ba      	strh	r2, [r7, #4]
 800c7da:	f894 204d 	ldrb.w	r2, [r4, #77]	; 0x4d
 800c7de:	f884 3048 	strb.w	r3, [r4, #72]	; 0x48
 800c7e2:	10db      	asrs	r3, r3, #3
 800c7e4:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 800c7e8:	f003 0360 	and.w	r3, r3, #96	; 0x60
 800c7ec:	4313      	orrs	r3, r2
 800c7ee:	f884 304d 	strb.w	r3, [r4, #77]	; 0x4d
 800c7f2:	f894 2052 	ldrb.w	r2, [r4, #82]	; 0x52
 800c7f6:	f894 3049 	ldrb.w	r3, [r4, #73]	; 0x49
 800c7fa:	1a9b      	subs	r3, r3, r2
 800c7fc:	f884 3049 	strb.w	r3, [r4, #73]	; 0x49
 800c800:	e769      	b.n	800c6d6 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 800c802:	f023 0204 	bic.w	r2, r3, #4
 800c806:	f640 611b 	movw	r1, #3611	; 0xe1b
 800c80a:	428a      	cmp	r2, r1
 800c80c:	d003      	beq.n	800c816 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x156>
 800c80e:	f640 621d 	movw	r2, #3613	; 0xe1d
 800c812:	4293      	cmp	r3, r2
 800c814:	d120      	bne.n	800c858 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x198>
 800c816:	3b01      	subs	r3, #1
 800c818:	4602      	mov	r2, r0
 800c81a:	b29b      	uxth	r3, r3
 800c81c:	4629      	mov	r1, r5
 800c81e:	4620      	mov	r0, r4
 800c820:	f7ff ff43 	bl	800c6aa <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 800c824:	7b41      	ldrb	r1, [r0, #13]
 800c826:	00cb      	lsls	r3, r1, #3
 800c828:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800c82c:	7a03      	ldrb	r3, [r0, #8]
 800c82e:	0649      	lsls	r1, r1, #25
 800c830:	ea43 0302 	orr.w	r3, r3, r2
 800c834:	bf44      	itt	mi
 800c836:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 800c83a:	b21b      	sxthmi	r3, r3
 800c83c:	f8a4 304e 	strh.w	r3, [r4, #78]	; 0x4e
 800c840:	7b6b      	ldrb	r3, [r5, #13]
 800c842:	7aaa      	ldrb	r2, [r5, #10]
 800c844:	005b      	lsls	r3, r3, #1
 800c846:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800c84a:	4313      	orrs	r3, r2
 800c84c:	115a      	asrs	r2, r3, #5
 800c84e:	eb02 0393 	add.w	r3, r2, r3, lsr #2
 800c852:	f8a4 3052 	strh.w	r3, [r4, #82]	; 0x52
 800c856:	e036      	b.n	800c8c6 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x206>
 800c858:	ea4f 02cc 	mov.w	r2, ip, lsl #3
 800c85c:	f402 7180 	and.w	r1, r2, #256	; 0x100
 800c860:	7a2a      	ldrb	r2, [r5, #8]
 800c862:	f01c 0f40 	tst.w	ip, #64	; 0x40
 800c866:	ea42 0201 	orr.w	r2, r2, r1
 800c86a:	bf1c      	itt	ne
 800c86c:	f5a2 7200 	subne.w	r2, r2, #512	; 0x200
 800c870:	b212      	sxthne	r2, r2
 800c872:	f8a4 204e 	strh.w	r2, [r4, #78]	; 0x4e
 800c876:	f640 6109 	movw	r1, #3593	; 0xe09
 800c87a:	f023 0210 	bic.w	r2, r3, #16
 800c87e:	428a      	cmp	r2, r1
 800c880:	d003      	beq.n	800c88a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1ca>
 800c882:	f640 6213 	movw	r2, #3603	; 0xe13
 800c886:	4293      	cmp	r3, r2
 800c888:	d12a      	bne.n	800c8e0 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x220>
 800c88a:	7b6e      	ldrb	r6, [r5, #13]
 800c88c:	0076      	lsls	r6, r6, #1
 800c88e:	f406 7280 	and.w	r2, r6, #256	; 0x100
 800c892:	7aae      	ldrb	r6, [r5, #10]
 800c894:	4316      	orrs	r6, r2
 800c896:	f640 6213 	movw	r2, #3603	; 0xe13
 800c89a:	4293      	cmp	r3, r2
 800c89c:	bf18      	it	ne
 800c89e:	f103 33ff 	addne.w	r3, r3, #4294967295
 800c8a2:	4602      	mov	r2, r0
 800c8a4:	bf14      	ite	ne
 800c8a6:	b29b      	uxthne	r3, r3
 800c8a8:	f640 630c 	movweq	r3, #3596	; 0xe0c
 800c8ac:	4629      	mov	r1, r5
 800c8ae:	4620      	mov	r0, r4
 800c8b0:	f7ff fefb 	bl	800c6aa <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 800c8b4:	7b43      	ldrb	r3, [r0, #13]
 800c8b6:	7a82      	ldrb	r2, [r0, #10]
 800c8b8:	005b      	lsls	r3, r3, #1
 800c8ba:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800c8be:	4313      	orrs	r3, r2
 800c8c0:	1af6      	subs	r6, r6, r3
 800c8c2:	f8a4 6052 	strh.w	r6, [r4, #82]	; 0x52
 800c8c6:	7b69      	ldrb	r1, [r5, #13]
 800c8c8:	00cb      	lsls	r3, r1, #3
 800c8ca:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800c8ce:	7a2b      	ldrb	r3, [r5, #8]
 800c8d0:	4313      	orrs	r3, r2
 800c8d2:	064a      	lsls	r2, r1, #25
 800c8d4:	bf44      	itt	mi
 800c8d6:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 800c8da:	b21b      	sxthmi	r3, r3
 800c8dc:	1bdb      	subs	r3, r3, r7
 800c8de:	e73f      	b.n	800c760 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xa0>
 800c8e0:	2300      	movs	r3, #0
 800c8e2:	e7b6      	b.n	800c852 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x192>
 800c8e4:	3fc00079 	.word	0x3fc00079
 800c8e8:	0801a62c 	.word	0x0801a62c
 800c8ec:	0801c0a7 	.word	0x0801c0a7
 800c8f0:	0801a653 	.word	0x0801a653

0800c8f4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>:
 800c8f4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800c8f8:	4604      	mov	r4, r0
 800c8fa:	b942      	cbnz	r2, 800c90e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1a>
 800c8fc:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 800c900:	f8a0 304e 	strh.w	r3, [r0, #78]	; 0x4e
 800c904:	f8a0 3050 	strh.w	r3, [r0, #80]	; 0x50
 800c908:	f8a4 3052 	strh.w	r3, [r4, #82]	; 0x52
 800c90c:	e046      	b.n	800c99c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa8>
 800c90e:	7b51      	ldrb	r1, [r2, #13]
 800c910:	8893      	ldrh	r3, [r2, #4]
 800c912:	010f      	lsls	r7, r1, #4
 800c914:	f407 7080 	and.w	r0, r7, #256	; 0x100
 800c918:	79d7      	ldrb	r7, [r2, #7]
 800c91a:	4307      	orrs	r7, r0
 800c91c:	2f04      	cmp	r7, #4
 800c91e:	b2bd      	uxth	r5, r7
 800c920:	bfcc      	ite	gt
 800c922:	08bf      	lsrgt	r7, r7, #2
 800c924:	2701      	movle	r7, #1
 800c926:	f5b3 6fdd 	cmp.w	r3, #1768	; 0x6e8
 800c92a:	f200 80ab 	bhi.w	800ca84 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x190>
 800c92e:	f240 60e7 	movw	r0, #1767	; 0x6e7
 800c932:	4283      	cmp	r3, r0
 800c934:	d216      	bcs.n	800c964 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800c936:	f240 605b 	movw	r0, #1627	; 0x65b
 800c93a:	4283      	cmp	r3, r0
 800c93c:	d859      	bhi.n	800c9f2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xfe>
 800c93e:	f240 6057 	movw	r0, #1623	; 0x657
 800c942:	4283      	cmp	r3, r0
 800c944:	d20e      	bcs.n	800c964 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800c946:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
 800c94a:	d24a      	bcs.n	800c9e2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xee>
 800c94c:	f240 604e 	movw	r0, #1614	; 0x64e
 800c950:	4283      	cmp	r3, r0
 800c952:	d207      	bcs.n	800c964 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800c954:	f240 601a 	movw	r0, #1562	; 0x61a
 800c958:	4283      	cmp	r3, r0
 800c95a:	d02a      	beq.n	800c9b2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 800c95c:	d821      	bhi.n	800c9a2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xae>
 800c95e:	f5b3 6fc2 	cmp.w	r3, #1552	; 0x610
 800c962:	d35b      	bcc.n	800ca1c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 800c964:	f9b4 304e 	ldrsh.w	r3, [r4, #78]	; 0x4e
 800c968:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 800c96c:	f040 80d0 	bne.w	800cb10 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21c>
 800c970:	f9b4 0050 	ldrsh.w	r0, [r4, #80]	; 0x50
 800c974:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 800c978:	f040 80ca 	bne.w	800cb10 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21c>
 800c97c:	00cb      	lsls	r3, r1, #3
 800c97e:	f403 7080 	and.w	r0, r3, #256	; 0x100
 800c982:	7a13      	ldrb	r3, [r2, #8]
 800c984:	0649      	lsls	r1, r1, #25
 800c986:	ea43 0300 	orr.w	r3, r3, r0
 800c98a:	bf44      	itt	mi
 800c98c:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 800c990:	b21b      	sxthmi	r3, r3
 800c992:	f8a4 304e 	strh.w	r3, [r4, #78]	; 0x4e
 800c996:	1b5d      	subs	r5, r3, r5
 800c998:	f8a4 5050 	strh.w	r5, [r4, #80]	; 0x50
 800c99c:	4610      	mov	r0, r2
 800c99e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800c9a2:	f240 604b 	movw	r0, #1611	; 0x64b
 800c9a6:	4283      	cmp	r3, r0
 800c9a8:	d338      	bcc.n	800ca1c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 800c9aa:	f240 604c 	movw	r0, #1612	; 0x64c
 800c9ae:	4283      	cmp	r3, r0
 800c9b0:	d9d8      	bls.n	800c964 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800c9b2:	f9b4 004e 	ldrsh.w	r0, [r4, #78]	; 0x4e
 800c9b6:	f9b4 3050 	ldrsh.w	r3, [r4, #80]	; 0x50
 800c9ba:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 800c9be:	f040 80f1 	bne.w	800cba4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b0>
 800c9c2:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 800c9c6:	f040 80ed 	bne.w	800cba4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b0>
 800c9ca:	00cb      	lsls	r3, r1, #3
 800c9cc:	f403 7080 	and.w	r0, r3, #256	; 0x100
 800c9d0:	7a13      	ldrb	r3, [r2, #8]
 800c9d2:	064e      	lsls	r6, r1, #25
 800c9d4:	ea43 0300 	orr.w	r3, r3, r0
 800c9d8:	bf44      	itt	mi
 800c9da:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 800c9de:	b21b      	sxthmi	r3, r3
 800c9e0:	e7d9      	b.n	800c996 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa2>
 800c9e2:	f240 6054 	movw	r0, #1620	; 0x654
 800c9e6:	4283      	cmp	r3, r0
 800c9e8:	d8e3      	bhi.n	800c9b2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 800c9ea:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
 800c9ee:	d9e0      	bls.n	800c9b2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 800c9f0:	e7b8      	b.n	800c964 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800c9f2:	f240 6074 	movw	r0, #1652	; 0x674
 800c9f6:	4283      	cmp	r3, r0
 800c9f8:	d0b4      	beq.n	800c964 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800c9fa:	d82d      	bhi.n	800ca58 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x164>
 800c9fc:	f240 605e 	movw	r0, #1630	; 0x65e
 800ca00:	4283      	cmp	r3, r0
 800ca02:	d804      	bhi.n	800ca0e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x11a>
 800ca04:	f240 605d 	movw	r0, #1629	; 0x65d
 800ca08:	4283      	cmp	r3, r0
 800ca0a:	d3d2      	bcc.n	800c9b2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 800ca0c:	e7aa      	b.n	800c964 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800ca0e:	f240 605f 	movw	r0, #1631	; 0x65f
 800ca12:	4283      	cmp	r3, r0
 800ca14:	d0cd      	beq.n	800c9b2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 800ca16:	f5b3 6fce 	cmp.w	r3, #1648	; 0x670
 800ca1a:	d0a3      	beq.n	800c964 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800ca1c:	00cb      	lsls	r3, r1, #3
 800ca1e:	f403 7080 	and.w	r0, r3, #256	; 0x100
 800ca22:	7a13      	ldrb	r3, [r2, #8]
 800ca24:	0649      	lsls	r1, r1, #25
 800ca26:	ea43 0300 	orr.w	r3, r3, r0
 800ca2a:	bf44      	itt	mi
 800ca2c:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 800ca30:	b21b      	sxthmi	r3, r3
 800ca32:	1b5d      	subs	r5, r3, r5
 800ca34:	f8a4 304e 	strh.w	r3, [r4, #78]	; 0x4e
 800ca38:	f8a4 5050 	strh.w	r5, [r4, #80]	; 0x50
 800ca3c:	7b53      	ldrb	r3, [r2, #13]
 800ca3e:	015b      	lsls	r3, r3, #5
 800ca40:	f403 7180 	and.w	r1, r3, #256	; 0x100
 800ca44:	7993      	ldrb	r3, [r2, #6]
 800ca46:	430b      	orrs	r3, r1
 800ca48:	005b      	lsls	r3, r3, #1
 800ca4a:	2105      	movs	r1, #5
 800ca4c:	fb93 f3f1 	sdiv	r3, r3, r1
 800ca50:	f992 1009 	ldrsb.w	r1, [r2, #9]
 800ca54:	440b      	add	r3, r1
 800ca56:	e757      	b.n	800c908 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x14>
 800ca58:	f240 60e2 	movw	r0, #1762	; 0x6e2
 800ca5c:	4283      	cmp	r3, r0
 800ca5e:	d809      	bhi.n	800ca74 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x180>
 800ca60:	f240 60df 	movw	r0, #1759	; 0x6df
 800ca64:	4283      	cmp	r3, r0
 800ca66:	f4bf af7d 	bcs.w	800c964 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800ca6a:	f2a3 63d6 	subw	r3, r3, #1750	; 0x6d6
 800ca6e:	2b05      	cmp	r3, #5
 800ca70:	d8d4      	bhi.n	800ca1c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 800ca72:	e777      	b.n	800c964 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800ca74:	f240 60e3 	movw	r0, #1763	; 0x6e3
 800ca78:	4283      	cmp	r3, r0
 800ca7a:	d09a      	beq.n	800c9b2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 800ca7c:	f240 60e4 	movw	r0, #1764	; 0x6e4
 800ca80:	4283      	cmp	r3, r0
 800ca82:	e7ca      	b.n	800ca1a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x126>
 800ca84:	f5b3 6f0f 	cmp.w	r3, #2288	; 0x8f0
 800ca88:	d22b      	bcs.n	800cae2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1ee>
 800ca8a:	f640 00ed 	movw	r0, #2285	; 0x8ed
 800ca8e:	4283      	cmp	r3, r0
 800ca90:	d28f      	bcs.n	800c9b2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 800ca92:	f640 00e5 	movw	r0, #2277	; 0x8e5
 800ca96:	4283      	cmp	r3, r0
 800ca98:	d816      	bhi.n	800cac8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d4>
 800ca9a:	f640 00e4 	movw	r0, #2276	; 0x8e4
 800ca9e:	4283      	cmp	r3, r0
 800caa0:	f4bf af60 	bcs.w	800c964 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800caa4:	f240 60ec 	movw	r0, #1772	; 0x6ec
 800caa8:	4283      	cmp	r3, r0
 800caaa:	d80a      	bhi.n	800cac2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1ce>
 800caac:	f240 60eb 	movw	r0, #1771	; 0x6eb
 800cab0:	4283      	cmp	r3, r0
 800cab2:	f4bf af57 	bcs.w	800c964 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800cab6:	f240 60ea 	movw	r0, #1770	; 0x6ea
 800caba:	4283      	cmp	r3, r0
 800cabc:	f43f af79 	beq.w	800c9b2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 800cac0:	e7ac      	b.n	800ca1c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 800cac2:	f240 60ed 	movw	r0, #1773	; 0x6ed
 800cac6:	e7f8      	b.n	800caba <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1c6>
 800cac8:	f640 00e8 	movw	r0, #2280	; 0x8e8
 800cacc:	4283      	cmp	r3, r0
 800cace:	d802      	bhi.n	800cad6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e2>
 800cad0:	f640 00e7 	movw	r0, #2279	; 0x8e7
 800cad4:	e798      	b.n	800ca08 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x114>
 800cad6:	f640 00e9 	movw	r0, #2281	; 0x8e9
 800cada:	4283      	cmp	r3, r0
 800cadc:	f47f af42 	bne.w	800c964 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800cae0:	e767      	b.n	800c9b2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 800cae2:	f640 00f6 	movw	r0, #2294	; 0x8f6
 800cae6:	4283      	cmp	r3, r0
 800cae8:	f43f af63 	beq.w	800c9b2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 800caec:	d802      	bhi.n	800caf4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x200>
 800caee:	f640 00f2 	movw	r0, #2290	; 0x8f2
 800caf2:	e7f2      	b.n	800cada <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e6>
 800caf4:	f640 00fa 	movw	r0, #2298	; 0x8fa
 800caf8:	4283      	cmp	r3, r0
 800cafa:	d805      	bhi.n	800cb08 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x214>
 800cafc:	f640 00f9 	movw	r0, #2297	; 0x8f9
 800cb00:	4283      	cmp	r3, r0
 800cb02:	f4ff af2f 	bcc.w	800c964 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800cb06:	e754      	b.n	800c9b2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 800cb08:	f640 00fe 	movw	r0, #2302	; 0x8fe
 800cb0c:	4283      	cmp	r3, r0
 800cb0e:	e7af      	b.n	800ca70 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x17c>
 800cb10:	f104 0c40 	add.w	ip, r4, #64	; 0x40
 800cb14:	4617      	mov	r7, r2
 800cb16:	f102 0808 	add.w	r8, r2, #8
 800cb1a:	4666      	mov	r6, ip
 800cb1c:	6838      	ldr	r0, [r7, #0]
 800cb1e:	6879      	ldr	r1, [r7, #4]
 800cb20:	46e6      	mov	lr, ip
 800cb22:	e8ae 0003 	stmia.w	lr!, {r0, r1}
 800cb26:	3708      	adds	r7, #8
 800cb28:	4547      	cmp	r7, r8
 800cb2a:	46f4      	mov	ip, lr
 800cb2c:	d1f6      	bne.n	800cb1c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x228>
 800cb2e:	6838      	ldr	r0, [r7, #0]
 800cb30:	f8ce 0000 	str.w	r0, [lr]
 800cb34:	88b9      	ldrh	r1, [r7, #4]
 800cb36:	f8ae 1004 	strh.w	r1, [lr, #4]
 800cb3a:	f9b4 0052 	ldrsh.w	r0, [r4, #82]	; 0x52
 800cb3e:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 800cb42:	d009      	beq.n	800cb58 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x264>
 800cb44:	7b51      	ldrb	r1, [r2, #13]
 800cb46:	7992      	ldrb	r2, [r2, #6]
 800cb48:	0149      	lsls	r1, r1, #5
 800cb4a:	f401 7180 	and.w	r1, r1, #256	; 0x100
 800cb4e:	4311      	orrs	r1, r2
 800cb50:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 800cb54:	f884 0049 	strb.w	r0, [r4, #73]	; 0x49
 800cb58:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 800cb5c:	d00d      	beq.n	800cb7a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x286>
 800cb5e:	442b      	add	r3, r5
 800cb60:	b29b      	uxth	r3, r3
 800cb62:	f894 204d 	ldrb.w	r2, [r4, #77]	; 0x4d
 800cb66:	f884 3048 	strb.w	r3, [r4, #72]	; 0x48
 800cb6a:	10db      	asrs	r3, r3, #3
 800cb6c:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 800cb70:	f003 0360 	and.w	r3, r3, #96	; 0x60
 800cb74:	4313      	orrs	r3, r2
 800cb76:	f884 304d 	strb.w	r3, [r4, #77]	; 0x4d
 800cb7a:	f894 104d 	ldrb.w	r1, [r4, #77]	; 0x4d
 800cb7e:	00cb      	lsls	r3, r1, #3
 800cb80:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800cb84:	f894 3048 	ldrb.w	r3, [r4, #72]	; 0x48
 800cb88:	064f      	lsls	r7, r1, #25
 800cb8a:	ea43 0302 	orr.w	r3, r3, r2
 800cb8e:	bf44      	itt	mi
 800cb90:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 800cb94:	b21b      	sxthmi	r3, r3
 800cb96:	f8a4 304e 	strh.w	r3, [r4, #78]	; 0x4e
 800cb9a:	1b5d      	subs	r5, r3, r5
 800cb9c:	f8a4 5050 	strh.w	r5, [r4, #80]	; 0x50
 800cba0:	4632      	mov	r2, r6
 800cba2:	e6fb      	b.n	800c99c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa8>
 800cba4:	f104 0e40 	add.w	lr, r4, #64	; 0x40
 800cba8:	4694      	mov	ip, r2
 800cbaa:	f102 0908 	add.w	r9, r2, #8
 800cbae:	4676      	mov	r6, lr
 800cbb0:	f8dc 0000 	ldr.w	r0, [ip]
 800cbb4:	f8dc 1004 	ldr.w	r1, [ip, #4]
 800cbb8:	46f0      	mov	r8, lr
 800cbba:	e8a8 0003 	stmia.w	r8!, {r0, r1}
 800cbbe:	f10c 0c08 	add.w	ip, ip, #8
 800cbc2:	45cc      	cmp	ip, r9
 800cbc4:	46c6      	mov	lr, r8
 800cbc6:	d1f3      	bne.n	800cbb0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2bc>
 800cbc8:	f8dc 0000 	ldr.w	r0, [ip]
 800cbcc:	f8c8 0000 	str.w	r0, [r8]
 800cbd0:	f8bc 1004 	ldrh.w	r1, [ip, #4]
 800cbd4:	f8a8 1004 	strh.w	r1, [r8, #4]
 800cbd8:	f9b4 0052 	ldrsh.w	r0, [r4, #82]	; 0x52
 800cbdc:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 800cbe0:	d009      	beq.n	800cbf6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x302>
 800cbe2:	7b51      	ldrb	r1, [r2, #13]
 800cbe4:	7992      	ldrb	r2, [r2, #6]
 800cbe6:	0149      	lsls	r1, r1, #5
 800cbe8:	f401 7180 	and.w	r1, r1, #256	; 0x100
 800cbec:	4311      	orrs	r1, r2
 800cbee:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 800cbf2:	f884 0049 	strb.w	r0, [r4, #73]	; 0x49
 800cbf6:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 800cbfa:	d00d      	beq.n	800cc18 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x324>
 800cbfc:	1bdb      	subs	r3, r3, r7
 800cbfe:	f894 204d 	ldrb.w	r2, [r4, #77]	; 0x4d
 800cc02:	b29b      	uxth	r3, r3
 800cc04:	f884 3048 	strb.w	r3, [r4, #72]	; 0x48
 800cc08:	10db      	asrs	r3, r3, #3
 800cc0a:	f003 0360 	and.w	r3, r3, #96	; 0x60
 800cc0e:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 800cc12:	4313      	orrs	r3, r2
 800cc14:	f884 304d 	strb.w	r3, [r4, #77]	; 0x4d
 800cc18:	f894 104d 	ldrb.w	r1, [r4, #77]	; 0x4d
 800cc1c:	00cb      	lsls	r3, r1, #3
 800cc1e:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800cc22:	f894 3048 	ldrb.w	r3, [r4, #72]	; 0x48
 800cc26:	0648      	lsls	r0, r1, #25
 800cc28:	ea43 0302 	orr.w	r3, r3, r2
 800cc2c:	bf44      	itt	mi
 800cc2e:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 800cc32:	b21b      	sxthmi	r3, r3
 800cc34:	e7b1      	b.n	800cb9a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2a6>
	...

0800cc38 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>:
 800cc38:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800cc3c:	461e      	mov	r6, r3
 800cc3e:	8e03      	ldrh	r3, [r0, #48]	; 0x30
 800cc40:	4604      	mov	r4, r0
 800cc42:	4617      	mov	r7, r2
 800cc44:	b92b      	cbnz	r3, 800cc52 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x1a>
 800cc46:	4b25      	ldr	r3, [pc, #148]	; (800ccdc <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0xa4>)
 800cc48:	4a25      	ldr	r2, [pc, #148]	; (800cce0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0xa8>)
 800cc4a:	4826      	ldr	r0, [pc, #152]	; (800cce4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0xac>)
 800cc4c:	21c0      	movs	r1, #192	; 0xc0
 800cc4e:	f00b ffcd 	bl	8018bec <__assert_func>
 800cc52:	8dc3      	ldrh	r3, [r0, #46]	; 0x2e
 800cc54:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 800cc58:	f8b3 801a 	ldrh.w	r8, [r3, #26]
 800cc5c:	f7f5 fd84 	bl	8002768 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 800cc60:	4605      	mov	r5, r0
 800cc62:	b918      	cbnz	r0, 800cc6c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x34>
 800cc64:	6030      	str	r0, [r6, #0]
 800cc66:	4628      	mov	r0, r5
 800cc68:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800cc6c:	683b      	ldr	r3, [r7, #0]
 800cc6e:	4601      	mov	r1, r0
 800cc70:	68db      	ldr	r3, [r3, #12]
 800cc72:	4638      	mov	r0, r7
 800cc74:	4798      	blx	r3
 800cc76:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
 800cc7a:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 800cc7e:	4602      	mov	r2, r0
 800cc80:	6030      	str	r0, [r6, #0]
 800cc82:	d213      	bcs.n	800ccac <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x74>
 800cc84:	4643      	mov	r3, r8
 800cc86:	4639      	mov	r1, r7
 800cc88:	4620      	mov	r0, r4
 800cc8a:	f7ff fe33 	bl	800c8f4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 800cc8e:	6030      	str	r0, [r6, #0]
 800cc90:	6833      	ldr	r3, [r6, #0]
 800cc92:	b143      	cbz	r3, 800cca6 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x6e>
 800cc94:	7b5a      	ldrb	r2, [r3, #13]
 800cc96:	7a9b      	ldrb	r3, [r3, #10]
 800cc98:	0052      	lsls	r2, r2, #1
 800cc9a:	f402 7280 	and.w	r2, r2, #256	; 0x100
 800cc9e:	4313      	orrs	r3, r2
 800cca0:	bf0c      	ite	eq
 800cca2:	2301      	moveq	r3, #1
 800cca4:	2300      	movne	r3, #0
 800cca6:	f884 3055 	strb.w	r3, [r4, #85]	; 0x55
 800ccaa:	e7dc      	b.n	800cc66 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x2e>
 800ccac:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
 800ccb0:	b29b      	uxth	r3, r3
 800ccb2:	2b7f      	cmp	r3, #127	; 0x7f
 800ccb4:	d804      	bhi.n	800ccc0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x88>
 800ccb6:	4639      	mov	r1, r7
 800ccb8:	4620      	mov	r0, r4
 800ccba:	f7ff fd01 	bl	800c6c0 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 800ccbe:	e7e6      	b.n	800cc8e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x56>
 800ccc0:	f894 3055 	ldrb.w	r3, [r4, #85]	; 0x55
 800ccc4:	2b00      	cmp	r3, #0
 800ccc6:	d0e3      	beq.n	800cc90 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x58>
 800ccc8:	f640 1302 	movw	r3, #2306	; 0x902
 800cccc:	429d      	cmp	r5, r3
 800ccce:	d1df      	bne.n	800cc90 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x58>
 800ccd0:	4601      	mov	r1, r0
 800ccd2:	4620      	mov	r0, r4
 800ccd4:	f7ff fcc6 	bl	800c664 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 800ccd8:	e7d9      	b.n	800cc8e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x56>
 800ccda:	bf00      	nop
 800ccdc:	0801a62c 	.word	0x0801a62c
 800cce0:	0801c0a7 	.word	0x0801c0a7
 800cce4:	0801a653 	.word	0x0801a653

0800cce8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>:
 800cce8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800ccec:	461e      	mov	r6, r3
 800ccee:	8e03      	ldrh	r3, [r0, #48]	; 0x30
 800ccf0:	4604      	mov	r4, r0
 800ccf2:	4617      	mov	r7, r2
 800ccf4:	b92b      	cbnz	r3, 800cd02 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x1a>
 800ccf6:	4b26      	ldr	r3, [pc, #152]	; (800cd90 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0xa8>)
 800ccf8:	4a26      	ldr	r2, [pc, #152]	; (800cd94 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0xac>)
 800ccfa:	4827      	ldr	r0, [pc, #156]	; (800cd98 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0xb0>)
 800ccfc:	21c0      	movs	r1, #192	; 0xc0
 800ccfe:	f00b ff75 	bl	8018bec <__assert_func>
 800cd02:	8dc3      	ldrh	r3, [r0, #46]	; 0x2e
 800cd04:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 800cd08:	f8b3 801a 	ldrh.w	r8, [r3, #26]
 800cd0c:	f7f5 fd2c 	bl	8002768 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 800cd10:	4605      	mov	r5, r0
 800cd12:	b918      	cbnz	r0, 800cd1c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x34>
 800cd14:	6030      	str	r0, [r6, #0]
 800cd16:	4628      	mov	r0, r5
 800cd18:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800cd1c:	683b      	ldr	r3, [r7, #0]
 800cd1e:	4601      	mov	r1, r0
 800cd20:	f8d3 9008 	ldr.w	r9, [r3, #8]
 800cd24:	4638      	mov	r0, r7
 800cd26:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 800cd2a:	47c8      	blx	r9
 800cd2c:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
 800cd30:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 800cd34:	4602      	mov	r2, r0
 800cd36:	6030      	str	r0, [r6, #0]
 800cd38:	d213      	bcs.n	800cd62 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x7a>
 800cd3a:	4643      	mov	r3, r8
 800cd3c:	4639      	mov	r1, r7
 800cd3e:	4620      	mov	r0, r4
 800cd40:	f7ff fdd8 	bl	800c8f4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 800cd44:	6030      	str	r0, [r6, #0]
 800cd46:	6833      	ldr	r3, [r6, #0]
 800cd48:	b143      	cbz	r3, 800cd5c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x74>
 800cd4a:	7b5a      	ldrb	r2, [r3, #13]
 800cd4c:	7a9b      	ldrb	r3, [r3, #10]
 800cd4e:	0052      	lsls	r2, r2, #1
 800cd50:	f402 7280 	and.w	r2, r2, #256	; 0x100
 800cd54:	4313      	orrs	r3, r2
 800cd56:	bf0c      	ite	eq
 800cd58:	2301      	moveq	r3, #1
 800cd5a:	2300      	movne	r3, #0
 800cd5c:	f884 3055 	strb.w	r3, [r4, #85]	; 0x55
 800cd60:	e7d9      	b.n	800cd16 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x2e>
 800cd62:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
 800cd66:	b29b      	uxth	r3, r3
 800cd68:	2b7f      	cmp	r3, #127	; 0x7f
 800cd6a:	d804      	bhi.n	800cd76 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x8e>
 800cd6c:	4639      	mov	r1, r7
 800cd6e:	4620      	mov	r0, r4
 800cd70:	f7ff fca6 	bl	800c6c0 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 800cd74:	e7e6      	b.n	800cd44 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x5c>
 800cd76:	f894 3055 	ldrb.w	r3, [r4, #85]	; 0x55
 800cd7a:	2b00      	cmp	r3, #0
 800cd7c:	d0e3      	beq.n	800cd46 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x5e>
 800cd7e:	f640 1302 	movw	r3, #2306	; 0x902
 800cd82:	429d      	cmp	r5, r3
 800cd84:	d1df      	bne.n	800cd46 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x5e>
 800cd86:	4601      	mov	r1, r0
 800cd88:	4620      	mov	r0, r4
 800cd8a:	f7ff fc6b 	bl	800c664 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 800cd8e:	e7d9      	b.n	800cd44 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x5c>
 800cd90:	0801a62c 	.word	0x0801a62c
 800cd94:	0801c0a7 	.word	0x0801c0a7
 800cd98:	0801a653 	.word	0x0801a653

0800cd9c <_ZN8touchgfx12TextProvider15fillInputBufferEv>:
 800cd9c:	b510      	push	{r4, lr}
 800cd9e:	4604      	mov	r4, r0
 800cda0:	8f21      	ldrh	r1, [r4, #56]	; 0x38
 800cda2:	8e23      	ldrh	r3, [r4, #48]	; 0x30
 800cda4:	b9d9      	cbnz	r1, 800cdde <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x42>
 800cda6:	8e23      	ldrh	r3, [r4, #48]	; 0x30
 800cda8:	2b0a      	cmp	r3, #10
 800cdaa:	d036      	beq.n	800ce1a <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x7e>
 800cdac:	4620      	mov	r0, r4
 800cdae:	f7ff fc22 	bl	800c5f6 <_ZN8touchgfx12TextProvider19getNextCharInternalEv>
 800cdb2:	8e23      	ldrh	r3, [r4, #48]	; 0x30
 800cdb4:	2b09      	cmp	r3, #9
 800cdb6:	d906      	bls.n	800cdc6 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x2a>
 800cdb8:	4b18      	ldr	r3, [pc, #96]	; (800ce1c <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x80>)
 800cdba:	4a19      	ldr	r2, [pc, #100]	; (800ce20 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x84>)
 800cdbc:	4819      	ldr	r0, [pc, #100]	; (800ce24 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x88>)
 800cdbe:	f44f 7182 	mov.w	r1, #260	; 0x104
 800cdc2:	f00b ff13 	bl	8018bec <__assert_func>
 800cdc6:	1c5a      	adds	r2, r3, #1
 800cdc8:	8622      	strh	r2, [r4, #48]	; 0x30
 800cdca:	8de2      	ldrh	r2, [r4, #46]	; 0x2e
 800cdcc:	4413      	add	r3, r2
 800cdce:	b29b      	uxth	r3, r3
 800cdd0:	2b09      	cmp	r3, #9
 800cdd2:	bf88      	it	hi
 800cdd4:	3b0a      	subhi	r3, #10
 800cdd6:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 800cdda:	8358      	strh	r0, [r3, #26]
 800cddc:	e7e3      	b.n	800cda6 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0xa>
 800cdde:	2b0a      	cmp	r3, #10
 800cde0:	d01b      	beq.n	800ce1a <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x7e>
 800cde2:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 800cde4:	eb04 0042 	add.w	r0, r4, r2, lsl #1
 800cde8:	3901      	subs	r1, #1
 800cdea:	8e40      	ldrh	r0, [r0, #50]	; 0x32
 800cdec:	8721      	strh	r1, [r4, #56]	; 0x38
 800cdee:	1c51      	adds	r1, r2, #1
 800cdf0:	b289      	uxth	r1, r1
 800cdf2:	2901      	cmp	r1, #1
 800cdf4:	bf8a      	itet	hi
 800cdf6:	f102 32ff 	addhi.w	r2, r2, #4294967295
 800cdfa:	86e1      	strhls	r1, [r4, #54]	; 0x36
 800cdfc:	86e2      	strhhi	r2, [r4, #54]	; 0x36
 800cdfe:	2b09      	cmp	r3, #9
 800ce00:	d8da      	bhi.n	800cdb8 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x1c>
 800ce02:	1c5a      	adds	r2, r3, #1
 800ce04:	8622      	strh	r2, [r4, #48]	; 0x30
 800ce06:	8de2      	ldrh	r2, [r4, #46]	; 0x2e
 800ce08:	4413      	add	r3, r2
 800ce0a:	b29b      	uxth	r3, r3
 800ce0c:	2b09      	cmp	r3, #9
 800ce0e:	bf88      	it	hi
 800ce10:	3b0a      	subhi	r3, #10
 800ce12:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 800ce16:	8358      	strh	r0, [r3, #26]
 800ce18:	e7c2      	b.n	800cda0 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4>
 800ce1a:	bd10      	pop	{r4, pc}
 800ce1c:	0801be78 	.word	0x0801be78
 800ce20:	0801c1fd 	.word	0x0801c1fd
 800ce24:	0801a653 	.word	0x0801a653

0800ce28 <_ZN8touchgfx12TextProvider11getNextCharEv>:
 800ce28:	b538      	push	{r3, r4, r5, lr}
 800ce2a:	8e02      	ldrh	r2, [r0, #48]	; 0x30
 800ce2c:	4604      	mov	r4, r0
 800ce2e:	b92a      	cbnz	r2, 800ce3c <_ZN8touchgfx12TextProvider11getNextCharEv+0x14>
 800ce30:	4b13      	ldr	r3, [pc, #76]	; (800ce80 <_ZN8touchgfx12TextProvider11getNextCharEv+0x58>)
 800ce32:	4a14      	ldr	r2, [pc, #80]	; (800ce84 <_ZN8touchgfx12TextProvider11getNextCharEv+0x5c>)
 800ce34:	4814      	ldr	r0, [pc, #80]	; (800ce88 <_ZN8touchgfx12TextProvider11getNextCharEv+0x60>)
 800ce36:	21d5      	movs	r1, #213	; 0xd5
 800ce38:	f00b fed8 	bl	8018bec <__assert_func>
 800ce3c:	8dc3      	ldrh	r3, [r0, #46]	; 0x2e
 800ce3e:	eb00 0143 	add.w	r1, r0, r3, lsl #1
 800ce42:	3a01      	subs	r2, #1
 800ce44:	8b4d      	ldrh	r5, [r1, #26]
 800ce46:	8602      	strh	r2, [r0, #48]	; 0x30
 800ce48:	1c5a      	adds	r2, r3, #1
 800ce4a:	b292      	uxth	r2, r2
 800ce4c:	2a09      	cmp	r2, #9
 800ce4e:	bf86      	itte	hi
 800ce50:	3b09      	subhi	r3, #9
 800ce52:	85c3      	strhhi	r3, [r0, #46]	; 0x2e
 800ce54:	85c2      	strhls	r2, [r0, #46]	; 0x2e
 800ce56:	f7ff ffa1 	bl	800cd9c <_ZN8touchgfx12TextProvider15fillInputBufferEv>
 800ce5a:	8b23      	ldrh	r3, [r4, #24]
 800ce5c:	2b01      	cmp	r3, #1
 800ce5e:	bf9c      	itt	ls
 800ce60:	3301      	addls	r3, #1
 800ce62:	8323      	strhls	r3, [r4, #24]
 800ce64:	8ae3      	ldrh	r3, [r4, #22]
 800ce66:	b90b      	cbnz	r3, 800ce6c <_ZN8touchgfx12TextProvider11getNextCharEv+0x44>
 800ce68:	2302      	movs	r3, #2
 800ce6a:	82e3      	strh	r3, [r4, #22]
 800ce6c:	8ae3      	ldrh	r3, [r4, #22]
 800ce6e:	3b01      	subs	r3, #1
 800ce70:	b29b      	uxth	r3, r3
 800ce72:	82e3      	strh	r3, [r4, #22]
 800ce74:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 800ce78:	4628      	mov	r0, r5
 800ce7a:	8265      	strh	r5, [r4, #18]
 800ce7c:	bd38      	pop	{r3, r4, r5, pc}
 800ce7e:	bf00      	nop
 800ce80:	0801a62c 	.word	0x0801a62c
 800ce84:	0801c152 	.word	0x0801c152
 800ce88:	0801a653 	.word	0x0801a653

0800ce8c <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>:
 800ce8c:	b538      	push	{r3, r4, r5, lr}
 800ce8e:	428a      	cmp	r2, r1
 800ce90:	8e04      	ldrh	r4, [r0, #48]	; 0x30
 800ce92:	d90c      	bls.n	800ceae <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x22>
 800ce94:	b92c      	cbnz	r4, 800cea2 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x16>
 800ce96:	4b1c      	ldr	r3, [pc, #112]	; (800cf08 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x7c>)
 800ce98:	4a1c      	ldr	r2, [pc, #112]	; (800cf0c <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x80>)
 800ce9a:	21e1      	movs	r1, #225	; 0xe1
 800ce9c:	481c      	ldr	r0, [pc, #112]	; (800cf10 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x84>)
 800ce9e:	f00b fea5 	bl	8018bec <__assert_func>
 800cea2:	3c01      	subs	r4, #1
 800cea4:	8604      	strh	r4, [r0, #48]	; 0x30
 800cea6:	4b1b      	ldr	r3, [pc, #108]	; (800cf14 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x88>)
 800cea8:	4a1b      	ldr	r2, [pc, #108]	; (800cf18 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x8c>)
 800ceaa:	21c5      	movs	r1, #197	; 0xc5
 800ceac:	e7f6      	b.n	800ce9c <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x10>
 800ceae:	428c      	cmp	r4, r1
 800ceb0:	d203      	bcs.n	800ceba <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x2e>
 800ceb2:	4b1a      	ldr	r3, [pc, #104]	; (800cf1c <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x90>)
 800ceb4:	4a1a      	ldr	r2, [pc, #104]	; (800cf20 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x94>)
 800ceb6:	21cb      	movs	r1, #203	; 0xcb
 800ceb8:	e7f0      	b.n	800ce9c <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x10>
 800ceba:	1a64      	subs	r4, r4, r1
 800cebc:	8604      	strh	r4, [r0, #48]	; 0x30
 800cebe:	8dc4      	ldrh	r4, [r0, #46]	; 0x2e
 800cec0:	4421      	add	r1, r4
 800cec2:	b289      	uxth	r1, r1
 800cec4:	2909      	cmp	r1, #9
 800cec6:	bf88      	it	hi
 800cec8:	390a      	subhi	r1, #10
 800ceca:	85c1      	strh	r1, [r0, #46]	; 0x2e
 800cecc:	250a      	movs	r5, #10
 800cece:	b1ba      	cbz	r2, 800cf00 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x74>
 800ced0:	3a01      	subs	r2, #1
 800ced2:	8e01      	ldrh	r1, [r0, #48]	; 0x30
 800ced4:	b292      	uxth	r2, r2
 800ced6:	2909      	cmp	r1, #9
 800ced8:	f833 4012 	ldrh.w	r4, [r3, r2, lsl #1]
 800cedc:	d903      	bls.n	800cee6 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x5a>
 800cede:	4b11      	ldr	r3, [pc, #68]	; (800cf24 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x98>)
 800cee0:	4a11      	ldr	r2, [pc, #68]	; (800cf28 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x9c>)
 800cee2:	21e6      	movs	r1, #230	; 0xe6
 800cee4:	e7da      	b.n	800ce9c <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x10>
 800cee6:	3101      	adds	r1, #1
 800cee8:	8601      	strh	r1, [r0, #48]	; 0x30
 800ceea:	8dc1      	ldrh	r1, [r0, #46]	; 0x2e
 800ceec:	b901      	cbnz	r1, 800cef0 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x64>
 800ceee:	85c5      	strh	r5, [r0, #46]	; 0x2e
 800cef0:	8dc1      	ldrh	r1, [r0, #46]	; 0x2e
 800cef2:	3901      	subs	r1, #1
 800cef4:	b289      	uxth	r1, r1
 800cef6:	85c1      	strh	r1, [r0, #46]	; 0x2e
 800cef8:	eb00 0141 	add.w	r1, r0, r1, lsl #1
 800cefc:	834c      	strh	r4, [r1, #26]
 800cefe:	e7e6      	b.n	800cece <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x42>
 800cf00:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800cf04:	f7ff bf4a 	b.w	800cd9c <_ZN8touchgfx12TextProvider15fillInputBufferEv>
 800cf08:	0801a62c 	.word	0x0801a62c
 800cf0c:	0801bf2b 	.word	0x0801bf2b
 800cf10:	0801a653 	.word	0x0801a653
 800cf14:	0801a67f 	.word	0x0801a67f
 800cf18:	0801bfd5 	.word	0x0801bfd5
 800cf1c:	0801be84 	.word	0x0801be84
 800cf20:	0801c2ac 	.word	0x0801c2ac
 800cf24:	0801be90 	.word	0x0801be90
 800cf28:	0801bea3 	.word	0x0801bea3

0800cf2c <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>:
 800cf2c:	3a01      	subs	r2, #1
 800cf2e:	b570      	push	{r4, r5, r6, lr}
 800cf30:	b292      	uxth	r2, r2
 800cf32:	f64f 76ff 	movw	r6, #65535	; 0xffff
 800cf36:	42b2      	cmp	r2, r6
 800cf38:	d019      	beq.n	800cf6e <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x42>
 800cf3a:	8b04      	ldrh	r4, [r0, #24]
 800cf3c:	f831 5b02 	ldrh.w	r5, [r1], #2
 800cf40:	4294      	cmp	r4, r2
 800cf42:	d805      	bhi.n	800cf50 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x24>
 800cf44:	4b19      	ldr	r3, [pc, #100]	; (800cfac <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x80>)
 800cf46:	4a1a      	ldr	r2, [pc, #104]	; (800cfb0 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x84>)
 800cf48:	481a      	ldr	r0, [pc, #104]	; (800cfb4 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x88>)
 800cf4a:	21c5      	movs	r1, #197	; 0xc5
 800cf4c:	f00b fe4e 	bl	8018bec <__assert_func>
 800cf50:	8ac4      	ldrh	r4, [r0, #22]
 800cf52:	4414      	add	r4, r2
 800cf54:	b2a4      	uxth	r4, r4
 800cf56:	2c01      	cmp	r4, #1
 800cf58:	bf88      	it	hi
 800cf5a:	3c02      	subhi	r4, #2
 800cf5c:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 800cf60:	3a01      	subs	r2, #1
 800cf62:	8a64      	ldrh	r4, [r4, #18]
 800cf64:	42ac      	cmp	r4, r5
 800cf66:	b292      	uxth	r2, r2
 800cf68:	d0e5      	beq.n	800cf36 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0xa>
 800cf6a:	2000      	movs	r0, #0
 800cf6c:	bd70      	pop	{r4, r5, r6, pc}
 800cf6e:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 800cf72:	2400      	movs	r4, #0
 800cf74:	4413      	add	r3, r2
 800cf76:	b2a2      	uxth	r2, r4
 800cf78:	429a      	cmp	r2, r3
 800cf7a:	da14      	bge.n	800cfa6 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x7a>
 800cf7c:	8e06      	ldrh	r6, [r0, #48]	; 0x30
 800cf7e:	f831 5014 	ldrh.w	r5, [r1, r4, lsl #1]
 800cf82:	4296      	cmp	r6, r2
 800cf84:	d802      	bhi.n	800cf8c <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x60>
 800cf86:	4b09      	ldr	r3, [pc, #36]	; (800cfac <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x80>)
 800cf88:	4a0b      	ldr	r2, [pc, #44]	; (800cfb8 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x8c>)
 800cf8a:	e7dd      	b.n	800cf48 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x1c>
 800cf8c:	8dc6      	ldrh	r6, [r0, #46]	; 0x2e
 800cf8e:	4432      	add	r2, r6
 800cf90:	b292      	uxth	r2, r2
 800cf92:	2a09      	cmp	r2, #9
 800cf94:	bf88      	it	hi
 800cf96:	3a0a      	subhi	r2, #10
 800cf98:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 800cf9c:	3401      	adds	r4, #1
 800cf9e:	8b52      	ldrh	r2, [r2, #26]
 800cfa0:	42aa      	cmp	r2, r5
 800cfa2:	d0e8      	beq.n	800cf76 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x4a>
 800cfa4:	e7e1      	b.n	800cf6a <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x3e>
 800cfa6:	2001      	movs	r0, #1
 800cfa8:	e7e0      	b.n	800cf6c <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x40>
 800cfaa:	bf00      	nop
 800cfac:	0801a67f 	.word	0x0801a67f
 800cfb0:	0801c330 	.word	0x0801c330
 800cfb4:	0801a653 	.word	0x0801a653
 800cfb8:	0801bfd5 	.word	0x0801bfd5

0800cfbc <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>:
 800cfbc:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800cfc0:	4605      	mov	r5, r0
 800cfc2:	4616      	mov	r6, r2
 800cfc4:	1c8c      	adds	r4, r1, #2
 800cfc6:	8809      	ldrh	r1, [r1, #0]
 800cfc8:	ea4f 3a11 	mov.w	sl, r1, lsr #12
 800cfcc:	f834 301a 	ldrh.w	r3, [r4, sl, lsl #1]
 800cfd0:	42b3      	cmp	r3, r6
 800cfd2:	d124      	bne.n	800d01e <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x62>
 800cfd4:	f3c1 2903 	ubfx	r9, r1, #8, #4
 800cfd8:	f3c1 1803 	ubfx	r8, r1, #4, #4
 800cfdc:	f001 070f 	and.w	r7, r1, #15
 800cfe0:	f8cd 8000 	str.w	r8, [sp]
 800cfe4:	464b      	mov	r3, r9
 800cfe6:	4652      	mov	r2, sl
 800cfe8:	4621      	mov	r1, r4
 800cfea:	4628      	mov	r0, r5
 800cfec:	f7ff ff9e 	bl	800cf2c <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>
 800cff0:	4683      	mov	fp, r0
 800cff2:	b168      	cbz	r0, 800d010 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x54>
 800cff4:	eb0a 0109 	add.w	r1, sl, r9
 800cff8:	4441      	add	r1, r8
 800cffa:	eb04 0341 	add.w	r3, r4, r1, lsl #1
 800cffe:	463a      	mov	r2, r7
 800d000:	4649      	mov	r1, r9
 800d002:	4628      	mov	r0, r5
 800d004:	f7ff ff42 	bl	800ce8c <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>
 800d008:	4658      	mov	r0, fp
 800d00a:	b003      	add	sp, #12
 800d00c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d010:	eb07 010a 	add.w	r1, r7, sl
 800d014:	4449      	add	r1, r9
 800d016:	4441      	add	r1, r8
 800d018:	eb04 0141 	add.w	r1, r4, r1, lsl #1
 800d01c:	e7d2      	b.n	800cfc4 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x8>
 800d01e:	f04f 0b00 	mov.w	fp, #0
 800d022:	e7f1      	b.n	800d008 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x4c>

0800d024 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>:
 800d024:	b570      	push	{r4, r5, r6, lr}
 800d026:	8810      	ldrh	r0, [r2, #0]
 800d028:	4298      	cmp	r0, r3
 800d02a:	d817      	bhi.n	800d05c <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 800d02c:	1e48      	subs	r0, r1, #1
 800d02e:	f832 0020 	ldrh.w	r0, [r2, r0, lsl #2]
 800d032:	4298      	cmp	r0, r3
 800d034:	d312      	bcc.n	800d05c <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 800d036:	2400      	movs	r4, #0
 800d038:	428c      	cmp	r4, r1
 800d03a:	d20f      	bcs.n	800d05c <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 800d03c:	1860      	adds	r0, r4, r1
 800d03e:	1040      	asrs	r0, r0, #1
 800d040:	0085      	lsls	r5, r0, #2
 800d042:	f832 6020 	ldrh.w	r6, [r2, r0, lsl #2]
 800d046:	42b3      	cmp	r3, r6
 800d048:	d902      	bls.n	800d050 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x2c>
 800d04a:	3001      	adds	r0, #1
 800d04c:	b284      	uxth	r4, r0
 800d04e:	e7f3      	b.n	800d038 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 800d050:	d201      	bcs.n	800d056 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x32>
 800d052:	b281      	uxth	r1, r0
 800d054:	e7f0      	b.n	800d038 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 800d056:	442a      	add	r2, r5
 800d058:	8850      	ldrh	r0, [r2, #2]
 800d05a:	bd70      	pop	{r4, r5, r6, pc}
 800d05c:	2000      	movs	r0, #0
 800d05e:	e7fc      	b.n	800d05a <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x36>

0800d060 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>:
 800d060:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800d064:	6bc5      	ldr	r5, [r0, #60]	; 0x3c
 800d066:	886f      	ldrh	r7, [r5, #2]
 800d068:	4604      	mov	r4, r0
 800d06a:	087f      	lsrs	r7, r7, #1
 800d06c:	260b      	movs	r6, #11
 800d06e:	3e01      	subs	r6, #1
 800d070:	d01b      	beq.n	800d0aa <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x4a>
 800d072:	8e23      	ldrh	r3, [r4, #48]	; 0x30
 800d074:	b92b      	cbnz	r3, 800d082 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x22>
 800d076:	4b0e      	ldr	r3, [pc, #56]	; (800d0b0 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x50>)
 800d078:	4a0e      	ldr	r2, [pc, #56]	; (800d0b4 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x54>)
 800d07a:	480f      	ldr	r0, [pc, #60]	; (800d0b8 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x58>)
 800d07c:	21c0      	movs	r1, #192	; 0xc0
 800d07e:	f00b fdb5 	bl	8018bec <__assert_func>
 800d082:	8de3      	ldrh	r3, [r4, #46]	; 0x2e
 800d084:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 800d088:	462a      	mov	r2, r5
 800d08a:	f8b3 801a 	ldrh.w	r8, [r3, #26]
 800d08e:	4639      	mov	r1, r7
 800d090:	4643      	mov	r3, r8
 800d092:	4620      	mov	r0, r4
 800d094:	f7ff ffc6 	bl	800d024 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>
 800d098:	b138      	cbz	r0, 800d0aa <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x4a>
 800d09a:	eb05 0140 	add.w	r1, r5, r0, lsl #1
 800d09e:	4642      	mov	r2, r8
 800d0a0:	4620      	mov	r0, r4
 800d0a2:	f7ff ff8b 	bl	800cfbc <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>
 800d0a6:	2800      	cmp	r0, #0
 800d0a8:	d1e1      	bne.n	800d06e <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0xe>
 800d0aa:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800d0ae:	bf00      	nop
 800d0b0:	0801a62c 	.word	0x0801a62c
 800d0b4:	0801c0a7 	.word	0x0801c0a7
 800d0b8:	0801a653 	.word	0x0801a653

0800d0bc <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>:
 800d0bc:	4b01      	ldr	r3, [pc, #4]	; (800d0c4 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE+0x8>)
 800d0be:	6018      	str	r0, [r3, #0]
 800d0c0:	4770      	bx	lr
 800d0c2:	bf00      	nop
 800d0c4:	2001220c 	.word	0x2001220c

0800d0c8 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>:
 800d0c8:	4b07      	ldr	r3, [pc, #28]	; (800d0e8 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x20>)
 800d0ca:	881a      	ldrh	r2, [r3, #0]
 800d0cc:	4282      	cmp	r2, r0
 800d0ce:	d809      	bhi.n	800d0e4 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x1c>
 800d0d0:	4b06      	ldr	r3, [pc, #24]	; (800d0ec <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x24>)
 800d0d2:	881b      	ldrh	r3, [r3, #0]
 800d0d4:	4413      	add	r3, r2
 800d0d6:	4298      	cmp	r0, r3
 800d0d8:	da04      	bge.n	800d0e4 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x1c>
 800d0da:	4b05      	ldr	r3, [pc, #20]	; (800d0f0 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x28>)
 800d0dc:	681b      	ldr	r3, [r3, #0]
 800d0de:	f853 0020 	ldr.w	r0, [r3, r0, lsl #2]
 800d0e2:	4770      	bx	lr
 800d0e4:	2000      	movs	r0, #0
 800d0e6:	4770      	bx	lr
 800d0e8:	2001222c 	.word	0x2001222c
 800d0ec:	20012230 	.word	0x20012230
 800d0f0:	20012210 	.word	0x20012210

0800d0f4 <_ZN8touchgfx6Bitmap10clearCacheEv>:
 800d0f4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800d0f8:	4d28      	ldr	r5, [pc, #160]	; (800d19c <_ZN8touchgfx6Bitmap10clearCacheEv+0xa8>)
 800d0fa:	682b      	ldr	r3, [r5, #0]
 800d0fc:	2b00      	cmp	r3, #0
 800d0fe:	d04a      	beq.n	800d196 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa2>
 800d100:	4a27      	ldr	r2, [pc, #156]	; (800d1a0 <_ZN8touchgfx6Bitmap10clearCacheEv+0xac>)
 800d102:	4e28      	ldr	r6, [pc, #160]	; (800d1a4 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb0>)
 800d104:	8810      	ldrh	r0, [r2, #0]
 800d106:	f8b6 8000 	ldrh.w	r8, [r6]
 800d10a:	4c27      	ldr	r4, [pc, #156]	; (800d1a8 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb4>)
 800d10c:	4f27      	ldr	r7, [pc, #156]	; (800d1ac <_ZN8touchgfx6Bitmap10clearCacheEv+0xb8>)
 800d10e:	4440      	add	r0, r8
 800d110:	1c41      	adds	r1, r0, #1
 800d112:	f021 0101 	bic.w	r1, r1, #1
 800d116:	0409      	lsls	r1, r1, #16
 800d118:	0c09      	lsrs	r1, r1, #16
 800d11a:	ea4f 0e80 	mov.w	lr, r0, lsl #2
 800d11e:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 800d122:	eb03 020e 	add.w	r2, r3, lr
 800d126:	eb0e 010c 	add.w	r1, lr, ip
 800d12a:	6022      	str	r2, [r4, #0]
 800d12c:	185a      	adds	r2, r3, r1
 800d12e:	603a      	str	r2, [r7, #0]
 800d130:	220e      	movs	r2, #14
 800d132:	fb02 f208 	mul.w	r2, r2, r8
 800d136:	3203      	adds	r2, #3
 800d138:	f022 0203 	bic.w	r2, r2, #3
 800d13c:	4411      	add	r1, r2
 800d13e:	440b      	add	r3, r1
 800d140:	491b      	ldr	r1, [pc, #108]	; (800d1b0 <_ZN8touchgfx6Bitmap10clearCacheEv+0xbc>)
 800d142:	600b      	str	r3, [r1, #0]
 800d144:	491b      	ldr	r1, [pc, #108]	; (800d1b4 <_ZN8touchgfx6Bitmap10clearCacheEv+0xc0>)
 800d146:	2300      	movs	r3, #0
 800d148:	800b      	strh	r3, [r1, #0]
 800d14a:	491b      	ldr	r1, [pc, #108]	; (800d1b8 <_ZN8touchgfx6Bitmap10clearCacheEv+0xc4>)
 800d14c:	6809      	ldr	r1, [r1, #0]
 800d14e:	eba1 010e 	sub.w	r1, r1, lr
 800d152:	eba1 010c 	sub.w	r1, r1, ip
 800d156:	1a8a      	subs	r2, r1, r2
 800d158:	4918      	ldr	r1, [pc, #96]	; (800d1bc <_ZN8touchgfx6Bitmap10clearCacheEv+0xc8>)
 800d15a:	600a      	str	r2, [r1, #0]
 800d15c:	4a18      	ldr	r2, [pc, #96]	; (800d1c0 <_ZN8touchgfx6Bitmap10clearCacheEv+0xcc>)
 800d15e:	469c      	mov	ip, r3
 800d160:	8013      	strh	r3, [r2, #0]
 800d162:	f64f 71ff 	movw	r1, #65535	; 0xffff
 800d166:	4283      	cmp	r3, r0
 800d168:	d10d      	bne.n	800d186 <_ZN8touchgfx6Bitmap10clearCacheEv+0x92>
 800d16a:	8835      	ldrh	r5, [r6, #0]
 800d16c:	6838      	ldr	r0, [r7, #0]
 800d16e:	2300      	movs	r3, #0
 800d170:	240e      	movs	r4, #14
 800d172:	429d      	cmp	r5, r3
 800d174:	d90f      	bls.n	800d196 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa2>
 800d176:	fb04 0203 	mla	r2, r4, r3, r0
 800d17a:	3301      	adds	r3, #1
 800d17c:	7b11      	ldrb	r1, [r2, #12]
 800d17e:	f36f 1145 	bfc	r1, #5, #1
 800d182:	7311      	strb	r1, [r2, #12]
 800d184:	e7f5      	b.n	800d172 <_ZN8touchgfx6Bitmap10clearCacheEv+0x7e>
 800d186:	682a      	ldr	r2, [r5, #0]
 800d188:	f842 c023 	str.w	ip, [r2, r3, lsl #2]
 800d18c:	6822      	ldr	r2, [r4, #0]
 800d18e:	f822 1013 	strh.w	r1, [r2, r3, lsl #1]
 800d192:	3301      	adds	r3, #1
 800d194:	e7e7      	b.n	800d166 <_ZN8touchgfx6Bitmap10clearCacheEv+0x72>
 800d196:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800d19a:	bf00      	nop
 800d19c:	20012210 	.word	0x20012210
 800d1a0:	2001222c 	.word	0x2001222c
 800d1a4:	20012230 	.word	0x20012230
 800d1a8:	20012224 	.word	0x20012224
 800d1ac:	20012214 	.word	0x20012214
 800d1b0:	2001221c 	.word	0x2001221c
 800d1b4:	2001222e 	.word	0x2001222e
 800d1b8:	20012218 	.word	0x20012218
 800d1bc:	20012228 	.word	0x20012228
 800d1c0:	20012220 	.word	0x20012220

0800d1c4 <_ZN8touchgfx6Bitmap8setCacheEPtmm>:
 800d1c4:	b510      	push	{r4, lr}
 800d1c6:	4b10      	ldr	r3, [pc, #64]	; (800d208 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x44>)
 800d1c8:	681b      	ldr	r3, [r3, #0]
 800d1ca:	b9db      	cbnz	r3, 800d204 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x40>
 800d1cc:	b1d1      	cbz	r1, 800d204 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x40>
 800d1ce:	4b0f      	ldr	r3, [pc, #60]	; (800d20c <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x48>)
 800d1d0:	801a      	strh	r2, [r3, #0]
 800d1d2:	4b0f      	ldr	r3, [pc, #60]	; (800d210 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x4c>)
 800d1d4:	881b      	ldrh	r3, [r3, #0]
 800d1d6:	b292      	uxth	r2, r2
 800d1d8:	240e      	movs	r4, #14
 800d1da:	4413      	add	r3, r2
 800d1dc:	4362      	muls	r2, r4
 800d1de:	2406      	movs	r4, #6
 800d1e0:	fb04 2203 	mla	r2, r4, r3, r2
 800d1e4:	428a      	cmp	r2, r1
 800d1e6:	d305      	bcc.n	800d1f4 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x30>
 800d1e8:	4b0a      	ldr	r3, [pc, #40]	; (800d214 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x50>)
 800d1ea:	4a0b      	ldr	r2, [pc, #44]	; (800d218 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x54>)
 800d1ec:	480b      	ldr	r0, [pc, #44]	; (800d21c <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x58>)
 800d1ee:	2137      	movs	r1, #55	; 0x37
 800d1f0:	f00b fcfc 	bl	8018bec <__assert_func>
 800d1f4:	4b0a      	ldr	r3, [pc, #40]	; (800d220 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x5c>)
 800d1f6:	6019      	str	r1, [r3, #0]
 800d1f8:	4b0a      	ldr	r3, [pc, #40]	; (800d224 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x60>)
 800d1fa:	6018      	str	r0, [r3, #0]
 800d1fc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800d200:	f7ff bf78 	b.w	800d0f4 <_ZN8touchgfx6Bitmap10clearCacheEv>
 800d204:	bd10      	pop	{r4, pc}
 800d206:	bf00      	nop
 800d208:	2001221c 	.word	0x2001221c
 800d20c:	20012230 	.word	0x20012230
 800d210:	2001222c 	.word	0x2001222c
 800d214:	0801c45e 	.word	0x0801c45e
 800d218:	0801c4b7 	.word	0x0801c4b7
 800d21c:	0801c439 	.word	0x0801c439
 800d220:	20012218 	.word	0x20012218
 800d224:	20012210 	.word	0x20012210

0800d228 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>:
 800d228:	b470      	push	{r4, r5, r6}
 800d22a:	4c07      	ldr	r4, [pc, #28]	; (800d248 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x20>)
 800d22c:	6826      	ldr	r6, [r4, #0]
 800d22e:	4605      	mov	r5, r0
 800d230:	4610      	mov	r0, r2
 800d232:	9a03      	ldr	r2, [sp, #12]
 800d234:	b936      	cbnz	r6, 800d244 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x1c>
 800d236:	6025      	str	r5, [r4, #0]
 800d238:	4c04      	ldr	r4, [pc, #16]	; (800d24c <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x24>)
 800d23a:	8021      	strh	r1, [r4, #0]
 800d23c:	bc70      	pop	{r4, r5, r6}
 800d23e:	4619      	mov	r1, r3
 800d240:	f7ff bfc0 	b.w	800d1c4 <_ZN8touchgfx6Bitmap8setCacheEPtmm>
 800d244:	bc70      	pop	{r4, r5, r6}
 800d246:	4770      	bx	lr
 800d248:	20012234 	.word	0x20012234
 800d24c:	2001222c 	.word	0x2001222c

0800d250 <_ZNK8touchgfx6Bitmap8getWidthEv>:
 800d250:	b508      	push	{r3, lr}
 800d252:	4b14      	ldr	r3, [pc, #80]	; (800d2a4 <_ZNK8touchgfx6Bitmap8getWidthEv+0x54>)
 800d254:	6819      	ldr	r1, [r3, #0]
 800d256:	b931      	cbnz	r1, 800d266 <_ZNK8touchgfx6Bitmap8getWidthEv+0x16>
 800d258:	4b13      	ldr	r3, [pc, #76]	; (800d2a8 <_ZNK8touchgfx6Bitmap8getWidthEv+0x58>)
 800d25a:	4a14      	ldr	r2, [pc, #80]	; (800d2ac <_ZNK8touchgfx6Bitmap8getWidthEv+0x5c>)
 800d25c:	4814      	ldr	r0, [pc, #80]	; (800d2b0 <_ZNK8touchgfx6Bitmap8getWidthEv+0x60>)
 800d25e:	f44f 713e 	mov.w	r1, #760	; 0x2f8
 800d262:	f00b fcc3 	bl	8018bec <__assert_func>
 800d266:	4a13      	ldr	r2, [pc, #76]	; (800d2b4 <_ZNK8touchgfx6Bitmap8getWidthEv+0x64>)
 800d268:	8803      	ldrh	r3, [r0, #0]
 800d26a:	8812      	ldrh	r2, [r2, #0]
 800d26c:	4293      	cmp	r3, r2
 800d26e:	d204      	bcs.n	800d27a <_ZNK8touchgfx6Bitmap8getWidthEv+0x2a>
 800d270:	2214      	movs	r2, #20
 800d272:	fb02 1303 	mla	r3, r2, r3, r1
 800d276:	8918      	ldrh	r0, [r3, #8]
 800d278:	bd08      	pop	{r3, pc}
 800d27a:	490f      	ldr	r1, [pc, #60]	; (800d2b8 <_ZNK8touchgfx6Bitmap8getWidthEv+0x68>)
 800d27c:	8809      	ldrh	r1, [r1, #0]
 800d27e:	4411      	add	r1, r2
 800d280:	428b      	cmp	r3, r1
 800d282:	da06      	bge.n	800d292 <_ZNK8touchgfx6Bitmap8getWidthEv+0x42>
 800d284:	1a9b      	subs	r3, r3, r2
 800d286:	4a0d      	ldr	r2, [pc, #52]	; (800d2bc <_ZNK8touchgfx6Bitmap8getWidthEv+0x6c>)
 800d288:	6812      	ldr	r2, [r2, #0]
 800d28a:	210e      	movs	r1, #14
 800d28c:	fb01 2303 	mla	r3, r1, r3, r2
 800d290:	e7f1      	b.n	800d276 <_ZNK8touchgfx6Bitmap8getWidthEv+0x26>
 800d292:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 800d296:	4293      	cmp	r3, r2
 800d298:	bf0a      	itet	eq
 800d29a:	4b09      	ldreq	r3, [pc, #36]	; (800d2c0 <_ZNK8touchgfx6Bitmap8getWidthEv+0x70>)
 800d29c:	2000      	movne	r0, #0
 800d29e:	8818      	ldrheq	r0, [r3, #0]
 800d2a0:	e7ea      	b.n	800d278 <_ZNK8touchgfx6Bitmap8getWidthEv+0x28>
 800d2a2:	bf00      	nop
 800d2a4:	20012234 	.word	0x20012234
 800d2a8:	0801bacc 	.word	0x0801bacc
 800d2ac:	0801c564 	.word	0x0801c564
 800d2b0:	0801c439 	.word	0x0801c439
 800d2b4:	2001222c 	.word	0x2001222c
 800d2b8:	20012230 	.word	0x20012230
 800d2bc:	20012214 	.word	0x20012214
 800d2c0:	20012180 	.word	0x20012180

0800d2c4 <_ZNK8touchgfx6Bitmap9getHeightEv>:
 800d2c4:	b508      	push	{r3, lr}
 800d2c6:	4b14      	ldr	r3, [pc, #80]	; (800d318 <_ZNK8touchgfx6Bitmap9getHeightEv+0x54>)
 800d2c8:	6819      	ldr	r1, [r3, #0]
 800d2ca:	b931      	cbnz	r1, 800d2da <_ZNK8touchgfx6Bitmap9getHeightEv+0x16>
 800d2cc:	4b13      	ldr	r3, [pc, #76]	; (800d31c <_ZNK8touchgfx6Bitmap9getHeightEv+0x58>)
 800d2ce:	4a14      	ldr	r2, [pc, #80]	; (800d320 <_ZNK8touchgfx6Bitmap9getHeightEv+0x5c>)
 800d2d0:	4814      	ldr	r0, [pc, #80]	; (800d324 <_ZNK8touchgfx6Bitmap9getHeightEv+0x60>)
 800d2d2:	f44f 7143 	mov.w	r1, #780	; 0x30c
 800d2d6:	f00b fc89 	bl	8018bec <__assert_func>
 800d2da:	4a13      	ldr	r2, [pc, #76]	; (800d328 <_ZNK8touchgfx6Bitmap9getHeightEv+0x64>)
 800d2dc:	8803      	ldrh	r3, [r0, #0]
 800d2de:	8812      	ldrh	r2, [r2, #0]
 800d2e0:	4293      	cmp	r3, r2
 800d2e2:	d204      	bcs.n	800d2ee <_ZNK8touchgfx6Bitmap9getHeightEv+0x2a>
 800d2e4:	2214      	movs	r2, #20
 800d2e6:	fb02 1303 	mla	r3, r2, r3, r1
 800d2ea:	8958      	ldrh	r0, [r3, #10]
 800d2ec:	bd08      	pop	{r3, pc}
 800d2ee:	490f      	ldr	r1, [pc, #60]	; (800d32c <_ZNK8touchgfx6Bitmap9getHeightEv+0x68>)
 800d2f0:	8809      	ldrh	r1, [r1, #0]
 800d2f2:	4411      	add	r1, r2
 800d2f4:	428b      	cmp	r3, r1
 800d2f6:	da06      	bge.n	800d306 <_ZNK8touchgfx6Bitmap9getHeightEv+0x42>
 800d2f8:	1a9b      	subs	r3, r3, r2
 800d2fa:	4a0d      	ldr	r2, [pc, #52]	; (800d330 <_ZNK8touchgfx6Bitmap9getHeightEv+0x6c>)
 800d2fc:	6812      	ldr	r2, [r2, #0]
 800d2fe:	210e      	movs	r1, #14
 800d300:	fb01 2303 	mla	r3, r1, r3, r2
 800d304:	e7f1      	b.n	800d2ea <_ZNK8touchgfx6Bitmap9getHeightEv+0x26>
 800d306:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 800d30a:	4293      	cmp	r3, r2
 800d30c:	bf0a      	itet	eq
 800d30e:	4b09      	ldreq	r3, [pc, #36]	; (800d334 <_ZNK8touchgfx6Bitmap9getHeightEv+0x70>)
 800d310:	2000      	movne	r0, #0
 800d312:	8818      	ldrheq	r0, [r3, #0]
 800d314:	e7ea      	b.n	800d2ec <_ZNK8touchgfx6Bitmap9getHeightEv+0x28>
 800d316:	bf00      	nop
 800d318:	20012234 	.word	0x20012234
 800d31c:	0801bacc 	.word	0x0801bacc
 800d320:	0801c590 	.word	0x0801c590
 800d324:	0801c439 	.word	0x0801c439
 800d328:	2001222c 	.word	0x2001222c
 800d32c:	20012230 	.word	0x20012230
 800d330:	20012214 	.word	0x20012214
 800d334:	20012182 	.word	0x20012182

0800d338 <_ZNK8touchgfx6Bitmap12getSolidRectEv>:
 800d338:	b510      	push	{r4, lr}
 800d33a:	4b23      	ldr	r3, [pc, #140]	; (800d3c8 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x90>)
 800d33c:	681c      	ldr	r4, [r3, #0]
 800d33e:	b934      	cbnz	r4, 800d34e <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x16>
 800d340:	4b22      	ldr	r3, [pc, #136]	; (800d3cc <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x94>)
 800d342:	4a23      	ldr	r2, [pc, #140]	; (800d3d0 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x98>)
 800d344:	4823      	ldr	r0, [pc, #140]	; (800d3d4 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x9c>)
 800d346:	f44f 7148 	mov.w	r1, #800	; 0x320
 800d34a:	f00b fc4f 	bl	8018bec <__assert_func>
 800d34e:	4a22      	ldr	r2, [pc, #136]	; (800d3d8 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xa0>)
 800d350:	880b      	ldrh	r3, [r1, #0]
 800d352:	8812      	ldrh	r2, [r2, #0]
 800d354:	4293      	cmp	r3, r2
 800d356:	d211      	bcs.n	800d37c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x44>
 800d358:	2214      	movs	r2, #20
 800d35a:	fb02 4303 	mla	r3, r2, r3, r4
 800d35e:	8a1a      	ldrh	r2, [r3, #16]
 800d360:	f9b3 400c 	ldrsh.w	r4, [r3, #12]
 800d364:	f9b3 100e 	ldrsh.w	r1, [r3, #14]
 800d368:	8a5b      	ldrh	r3, [r3, #18]
 800d36a:	8004      	strh	r4, [r0, #0]
 800d36c:	f3c2 020c 	ubfx	r2, r2, #0, #13
 800d370:	f3c3 030c 	ubfx	r3, r3, #0, #13
 800d374:	8041      	strh	r1, [r0, #2]
 800d376:	8082      	strh	r2, [r0, #4]
 800d378:	80c3      	strh	r3, [r0, #6]
 800d37a:	e00e      	b.n	800d39a <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x62>
 800d37c:	4917      	ldr	r1, [pc, #92]	; (800d3dc <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xa4>)
 800d37e:	8809      	ldrh	r1, [r1, #0]
 800d380:	4411      	add	r1, r2
 800d382:	428b      	cmp	r3, r1
 800d384:	da0a      	bge.n	800d39c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x64>
 800d386:	1a9b      	subs	r3, r3, r2
 800d388:	4a15      	ldr	r2, [pc, #84]	; (800d3e0 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xa8>)
 800d38a:	6812      	ldr	r2, [r2, #0]
 800d38c:	210e      	movs	r1, #14
 800d38e:	fb01 2303 	mla	r3, r1, r3, r2
 800d392:	681a      	ldr	r2, [r3, #0]
 800d394:	6002      	str	r2, [r0, #0]
 800d396:	685a      	ldr	r2, [r3, #4]
 800d398:	6042      	str	r2, [r0, #4]
 800d39a:	bd10      	pop	{r4, pc}
 800d39c:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 800d3a0:	4293      	cmp	r3, r2
 800d3a2:	d10b      	bne.n	800d3bc <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x84>
 800d3a4:	4b0f      	ldr	r3, [pc, #60]	; (800d3e4 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xac>)
 800d3a6:	f9b3 1000 	ldrsh.w	r1, [r3]
 800d3aa:	4b0f      	ldr	r3, [pc, #60]	; (800d3e8 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xb0>)
 800d3ac:	8081      	strh	r1, [r0, #4]
 800d3ae:	f9b3 2000 	ldrsh.w	r2, [r3]
 800d3b2:	80c2      	strh	r2, [r0, #6]
 800d3b4:	2300      	movs	r3, #0
 800d3b6:	8003      	strh	r3, [r0, #0]
 800d3b8:	8043      	strh	r3, [r0, #2]
 800d3ba:	e7ee      	b.n	800d39a <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x62>
 800d3bc:	2300      	movs	r3, #0
 800d3be:	8003      	strh	r3, [r0, #0]
 800d3c0:	8043      	strh	r3, [r0, #2]
 800d3c2:	8083      	strh	r3, [r0, #4]
 800d3c4:	e7d8      	b.n	800d378 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x40>
 800d3c6:	bf00      	nop
 800d3c8:	20012234 	.word	0x20012234
 800d3cc:	0801bacc 	.word	0x0801bacc
 800d3d0:	0801c4fd 	.word	0x0801c4fd
 800d3d4:	0801c439 	.word	0x0801c439
 800d3d8:	2001222c 	.word	0x2001222c
 800d3dc:	20012230 	.word	0x20012230
 800d3e0:	20012214 	.word	0x20012214
 800d3e4:	20012180 	.word	0x20012180
 800d3e8:	20012182 	.word	0x20012182

0800d3ec <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>:
 800d3ec:	4b18      	ldr	r3, [pc, #96]	; (800d450 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x64>)
 800d3ee:	681b      	ldr	r3, [r3, #0]
 800d3f0:	b34b      	cbz	r3, 800d446 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5a>
 800d3f2:	4a18      	ldr	r2, [pc, #96]	; (800d454 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x68>)
 800d3f4:	8800      	ldrh	r0, [r0, #0]
 800d3f6:	8812      	ldrh	r2, [r2, #0]
 800d3f8:	4290      	cmp	r0, r2
 800d3fa:	d211      	bcs.n	800d420 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x34>
 800d3fc:	2214      	movs	r2, #20
 800d3fe:	fb02 3300 	mla	r3, r2, r0, r3
 800d402:	8a1a      	ldrh	r2, [r3, #16]
 800d404:	8919      	ldrh	r1, [r3, #8]
 800d406:	f3c2 020c 	ubfx	r2, r2, #0, #13
 800d40a:	428a      	cmp	r2, r1
 800d40c:	db1d      	blt.n	800d44a <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5e>
 800d40e:	8a58      	ldrh	r0, [r3, #18]
 800d410:	f3c0 000c 	ubfx	r0, r0, #0, #13
 800d414:	895b      	ldrh	r3, [r3, #10]
 800d416:	4298      	cmp	r0, r3
 800d418:	bfac      	ite	ge
 800d41a:	2000      	movge	r0, #0
 800d41c:	2001      	movlt	r0, #1
 800d41e:	4770      	bx	lr
 800d420:	4b0d      	ldr	r3, [pc, #52]	; (800d458 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x6c>)
 800d422:	881b      	ldrh	r3, [r3, #0]
 800d424:	4413      	add	r3, r2
 800d426:	4298      	cmp	r0, r3
 800d428:	da0d      	bge.n	800d446 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5a>
 800d42a:	4b0c      	ldr	r3, [pc, #48]	; (800d45c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x70>)
 800d42c:	681b      	ldr	r3, [r3, #0]
 800d42e:	1a80      	subs	r0, r0, r2
 800d430:	220e      	movs	r2, #14
 800d432:	fb02 3300 	mla	r3, r2, r0, r3
 800d436:	f9b3 1004 	ldrsh.w	r1, [r3, #4]
 800d43a:	891a      	ldrh	r2, [r3, #8]
 800d43c:	4291      	cmp	r1, r2
 800d43e:	db04      	blt.n	800d44a <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5e>
 800d440:	f9b3 0006 	ldrsh.w	r0, [r3, #6]
 800d444:	e7e6      	b.n	800d414 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x28>
 800d446:	2000      	movs	r0, #0
 800d448:	4770      	bx	lr
 800d44a:	2001      	movs	r0, #1
 800d44c:	4770      	bx	lr
 800d44e:	bf00      	nop
 800d450:	20012234 	.word	0x20012234
 800d454:	2001222c 	.word	0x2001222c
 800d458:	20012230 	.word	0x20012230
 800d45c:	20012214 	.word	0x20012214

0800d460 <_ZNK8touchgfx6Bitmap7getDataEv>:
 800d460:	b508      	push	{r3, lr}
 800d462:	4b12      	ldr	r3, [pc, #72]	; (800d4ac <_ZNK8touchgfx6Bitmap7getDataEv+0x4c>)
 800d464:	6819      	ldr	r1, [r3, #0]
 800d466:	b931      	cbnz	r1, 800d476 <_ZNK8touchgfx6Bitmap7getDataEv+0x16>
 800d468:	4b11      	ldr	r3, [pc, #68]	; (800d4b0 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 800d46a:	4a12      	ldr	r2, [pc, #72]	; (800d4b4 <_ZNK8touchgfx6Bitmap7getDataEv+0x54>)
 800d46c:	4812      	ldr	r0, [pc, #72]	; (800d4b8 <_ZNK8touchgfx6Bitmap7getDataEv+0x58>)
 800d46e:	f44f 7151 	mov.w	r1, #836	; 0x344
 800d472:	f00b fbbb 	bl	8018bec <__assert_func>
 800d476:	8803      	ldrh	r3, [r0, #0]
 800d478:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800d47c:	4293      	cmp	r3, r2
 800d47e:	d012      	beq.n	800d4a6 <_ZNK8touchgfx6Bitmap7getDataEv+0x46>
 800d480:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 800d484:	4293      	cmp	r3, r2
 800d486:	d103      	bne.n	800d490 <_ZNK8touchgfx6Bitmap7getDataEv+0x30>
 800d488:	4b0c      	ldr	r3, [pc, #48]	; (800d4bc <_ZNK8touchgfx6Bitmap7getDataEv+0x5c>)
 800d48a:	681b      	ldr	r3, [r3, #0]
 800d48c:	6c58      	ldr	r0, [r3, #68]	; 0x44
 800d48e:	bd08      	pop	{r3, pc}
 800d490:	4a0b      	ldr	r2, [pc, #44]	; (800d4c0 <_ZNK8touchgfx6Bitmap7getDataEv+0x60>)
 800d492:	6812      	ldr	r2, [r2, #0]
 800d494:	b11a      	cbz	r2, 800d49e <_ZNK8touchgfx6Bitmap7getDataEv+0x3e>
 800d496:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 800d49a:	2800      	cmp	r0, #0
 800d49c:	d1f7      	bne.n	800d48e <_ZNK8touchgfx6Bitmap7getDataEv+0x2e>
 800d49e:	2214      	movs	r2, #20
 800d4a0:	4353      	muls	r3, r2
 800d4a2:	58c8      	ldr	r0, [r1, r3]
 800d4a4:	e7f3      	b.n	800d48e <_ZNK8touchgfx6Bitmap7getDataEv+0x2e>
 800d4a6:	2000      	movs	r0, #0
 800d4a8:	e7f1      	b.n	800d48e <_ZNK8touchgfx6Bitmap7getDataEv+0x2e>
 800d4aa:	bf00      	nop
 800d4ac:	20012234 	.word	0x20012234
 800d4b0:	0801bacc 	.word	0x0801bacc
 800d4b4:	0801c533 	.word	0x0801c533
 800d4b8:	0801c439 	.word	0x0801c439
 800d4bc:	2001218c 	.word	0x2001218c
 800d4c0:	20012210 	.word	0x20012210

0800d4c4 <_ZNK8touchgfx6Bitmap12getExtraDataEv>:
 800d4c4:	8802      	ldrh	r2, [r0, #0]
 800d4c6:	f64f 73fd 	movw	r3, #65533	; 0xfffd
 800d4ca:	429a      	cmp	r2, r3
 800d4cc:	d840      	bhi.n	800d550 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8c>
 800d4ce:	4b21      	ldr	r3, [pc, #132]	; (800d554 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>)
 800d4d0:	881b      	ldrh	r3, [r3, #0]
 800d4d2:	429a      	cmp	r2, r3
 800d4d4:	d220      	bcs.n	800d518 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x54>
 800d4d6:	4b20      	ldr	r3, [pc, #128]	; (800d558 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x94>)
 800d4d8:	6819      	ldr	r1, [r3, #0]
 800d4da:	2314      	movs	r3, #20
 800d4dc:	fb03 1302 	mla	r3, r3, r2, r1
 800d4e0:	6858      	ldr	r0, [r3, #4]
 800d4e2:	2800      	cmp	r0, #0
 800d4e4:	d035      	beq.n	800d552 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 800d4e6:	491d      	ldr	r1, [pc, #116]	; (800d55c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>)
 800d4e8:	6809      	ldr	r1, [r1, #0]
 800d4ea:	2900      	cmp	r1, #0
 800d4ec:	d031      	beq.n	800d552 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 800d4ee:	f851 1022 	ldr.w	r1, [r1, r2, lsl #2]
 800d4f2:	b371      	cbz	r1, 800d552 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 800d4f4:	895a      	ldrh	r2, [r3, #10]
 800d4f6:	8918      	ldrh	r0, [r3, #8]
 800d4f8:	4350      	muls	r0, r2
 800d4fa:	7c5a      	ldrb	r2, [r3, #17]
 800d4fc:	7cdb      	ldrb	r3, [r3, #19]
 800d4fe:	0952      	lsrs	r2, r2, #5
 800d500:	f3c3 1342 	ubfx	r3, r3, #5, #3
 800d504:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 800d508:	2b0b      	cmp	r3, #11
 800d50a:	bf18      	it	ne
 800d50c:	0040      	lslne	r0, r0, #1
 800d50e:	3003      	adds	r0, #3
 800d510:	f020 0003 	bic.w	r0, r0, #3
 800d514:	4408      	add	r0, r1
 800d516:	4770      	bx	lr
 800d518:	4911      	ldr	r1, [pc, #68]	; (800d560 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 800d51a:	8809      	ldrh	r1, [r1, #0]
 800d51c:	4419      	add	r1, r3
 800d51e:	428a      	cmp	r2, r1
 800d520:	da16      	bge.n	800d550 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8c>
 800d522:	4910      	ldr	r1, [pc, #64]	; (800d564 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa0>)
 800d524:	6809      	ldr	r1, [r1, #0]
 800d526:	1ad3      	subs	r3, r2, r3
 800d528:	200e      	movs	r0, #14
 800d52a:	fb00 1303 	mla	r3, r0, r3, r1
 800d52e:	7b19      	ldrb	r1, [r3, #12]
 800d530:	f001 011f 	and.w	r1, r1, #31
 800d534:	290b      	cmp	r1, #11
 800d536:	d10b      	bne.n	800d550 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8c>
 800d538:	8919      	ldrh	r1, [r3, #8]
 800d53a:	8958      	ldrh	r0, [r3, #10]
 800d53c:	4b07      	ldr	r3, [pc, #28]	; (800d55c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>)
 800d53e:	4348      	muls	r0, r1
 800d540:	6819      	ldr	r1, [r3, #0]
 800d542:	3003      	adds	r0, #3
 800d544:	f020 0303 	bic.w	r3, r0, #3
 800d548:	f851 0022 	ldr.w	r0, [r1, r2, lsl #2]
 800d54c:	4418      	add	r0, r3
 800d54e:	4770      	bx	lr
 800d550:	2000      	movs	r0, #0
 800d552:	4770      	bx	lr
 800d554:	2001222c 	.word	0x2001222c
 800d558:	20012234 	.word	0x20012234
 800d55c:	20012210 	.word	0x20012210
 800d560:	20012230 	.word	0x20012230
 800d564:	20012214 	.word	0x20012214

0800d568 <_ZNK8touchgfx6Bitmap9getFormatEv>:
 800d568:	4b19      	ldr	r3, [pc, #100]	; (800d5d0 <_ZNK8touchgfx6Bitmap9getFormatEv+0x68>)
 800d56a:	6819      	ldr	r1, [r3, #0]
 800d56c:	8803      	ldrh	r3, [r0, #0]
 800d56e:	b1e9      	cbz	r1, 800d5ac <_ZNK8touchgfx6Bitmap9getFormatEv+0x44>
 800d570:	4a18      	ldr	r2, [pc, #96]	; (800d5d4 <_ZNK8touchgfx6Bitmap9getFormatEv+0x6c>)
 800d572:	8812      	ldrh	r2, [r2, #0]
 800d574:	429a      	cmp	r2, r3
 800d576:	d90a      	bls.n	800d58e <_ZNK8touchgfx6Bitmap9getFormatEv+0x26>
 800d578:	2214      	movs	r2, #20
 800d57a:	fb02 1303 	mla	r3, r2, r3, r1
 800d57e:	7c58      	ldrb	r0, [r3, #17]
 800d580:	0942      	lsrs	r2, r0, #5
 800d582:	7cd8      	ldrb	r0, [r3, #19]
 800d584:	f3c0 1042 	ubfx	r0, r0, #5, #3
 800d588:	ea40 00c2 	orr.w	r0, r0, r2, lsl #3
 800d58c:	4770      	bx	lr
 800d58e:	4912      	ldr	r1, [pc, #72]	; (800d5d8 <_ZNK8touchgfx6Bitmap9getFormatEv+0x70>)
 800d590:	8809      	ldrh	r1, [r1, #0]
 800d592:	4411      	add	r1, r2
 800d594:	428b      	cmp	r3, r1
 800d596:	da09      	bge.n	800d5ac <_ZNK8touchgfx6Bitmap9getFormatEv+0x44>
 800d598:	1a9b      	subs	r3, r3, r2
 800d59a:	4a10      	ldr	r2, [pc, #64]	; (800d5dc <_ZNK8touchgfx6Bitmap9getFormatEv+0x74>)
 800d59c:	6812      	ldr	r2, [r2, #0]
 800d59e:	210e      	movs	r1, #14
 800d5a0:	fb01 2303 	mla	r3, r1, r3, r2
 800d5a4:	7b18      	ldrb	r0, [r3, #12]
 800d5a6:	f000 001f 	and.w	r0, r0, #31
 800d5aa:	4770      	bx	lr
 800d5ac:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 800d5b0:	4293      	cmp	r3, r2
 800d5b2:	d10a      	bne.n	800d5ca <_ZNK8touchgfx6Bitmap9getFormatEv+0x62>
 800d5b4:	4b0a      	ldr	r3, [pc, #40]	; (800d5e0 <_ZNK8touchgfx6Bitmap9getFormatEv+0x78>)
 800d5b6:	681b      	ldr	r3, [r3, #0]
 800d5b8:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 800d5bc:	b10a      	cbz	r2, 800d5c2 <_ZNK8touchgfx6Bitmap9getFormatEv+0x5a>
 800d5be:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 800d5c0:	b900      	cbnz	r0, 800d5c4 <_ZNK8touchgfx6Bitmap9getFormatEv+0x5c>
 800d5c2:	6898      	ldr	r0, [r3, #8]
 800d5c4:	6803      	ldr	r3, [r0, #0]
 800d5c6:	6a1b      	ldr	r3, [r3, #32]
 800d5c8:	4718      	bx	r3
 800d5ca:	2000      	movs	r0, #0
 800d5cc:	4770      	bx	lr
 800d5ce:	bf00      	nop
 800d5d0:	20012234 	.word	0x20012234
 800d5d4:	2001222c 	.word	0x2001222c
 800d5d8:	20012230 	.word	0x20012230
 800d5dc:	20012214 	.word	0x20012214
 800d5e0:	2001218c 	.word	0x2001218c

0800d5e4 <_ZNK8touchgfx8LCD16bpp8bitDepthEv>:
 800d5e4:	2010      	movs	r0, #16
 800d5e6:	4770      	bx	lr

0800d5e8 <_ZNK8touchgfx8LCD16bpp17framebufferFormatEv>:
 800d5e8:	2000      	movs	r0, #0
 800d5ea:	4770      	bx	lr

0800d5ec <_ZNK8touchgfx8LCD16bpp20getColorFrom24BitRGBEhhh>:
 800d5ec:	00d2      	lsls	r2, r2, #3
 800d5ee:	0209      	lsls	r1, r1, #8
 800d5f0:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 800d5f4:	ea42 02d3 	orr.w	r2, r2, r3, lsr #3
 800d5f8:	f401 4078 	and.w	r0, r1, #63488	; 0xf800
 800d5fc:	4310      	orrs	r0, r2
 800d5fe:	4770      	bx	lr

0800d600 <_ZNK8touchgfx8LCD16bpp11getRedColorENS_9colortypeE>:
 800d600:	0a09      	lsrs	r1, r1, #8
 800d602:	f001 00f8 	and.w	r0, r1, #248	; 0xf8
 800d606:	4770      	bx	lr

0800d608 <_ZNK8touchgfx8LCD16bpp13getGreenColorENS_9colortypeE>:
 800d608:	08c9      	lsrs	r1, r1, #3
 800d60a:	f001 00fc 	and.w	r0, r1, #252	; 0xfc
 800d60e:	4770      	bx	lr

0800d610 <_ZNK8touchgfx8LCD16bpp12getBlueColorENS_9colortypeE>:
 800d610:	00c9      	lsls	r1, r1, #3
 800d612:	f001 00f8 	and.w	r0, r1, #248	; 0xf8
 800d616:	4770      	bx	lr

0800d618 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth>:
 800d618:	2bff      	cmp	r3, #255	; 0xff
 800d61a:	d050      	beq.n	800d6be <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa6>
 800d61c:	2a0b      	cmp	r2, #11
 800d61e:	d04a      	beq.n	800d6b6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 800d620:	d80e      	bhi.n	800d640 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x28>
 800d622:	2a03      	cmp	r2, #3
 800d624:	d03f      	beq.n	800d6a6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8e>
 800d626:	d804      	bhi.n	800d632 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x1a>
 800d628:	2a01      	cmp	r2, #1
 800d62a:	d03e      	beq.n	800d6aa <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x92>
 800d62c:	d93f      	bls.n	800d6ae <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x96>
 800d62e:	6b80      	ldr	r0, [r0, #56]	; 0x38
 800d630:	4770      	bx	lr
 800d632:	2a09      	cmp	r2, #9
 800d634:	d03f      	beq.n	800d6b6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 800d636:	d83c      	bhi.n	800d6b2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 800d638:	2a08      	cmp	r2, #8
 800d63a:	d03a      	beq.n	800d6b2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 800d63c:	2000      	movs	r0, #0
 800d63e:	4770      	bx	lr
 800d640:	2a2f      	cmp	r2, #47	; 0x2f
 800d642:	d024      	beq.n	800d68e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x76>
 800d644:	d80d      	bhi.n	800d662 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x4a>
 800d646:	2a2d      	cmp	r2, #45	; 0x2d
 800d648:	d014      	beq.n	800d674 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x5c>
 800d64a:	d826      	bhi.n	800d69a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x82>
 800d64c:	2a2c      	cmp	r2, #44	; 0x2c
 800d64e:	d1f5      	bne.n	800d63c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800d650:	684b      	ldr	r3, [r1, #4]
 800d652:	781b      	ldrb	r3, [r3, #0]
 800d654:	2b01      	cmp	r3, #1
 800d656:	d018      	beq.n	800d68a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x72>
 800d658:	d323      	bcc.n	800d6a2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8a>
 800d65a:	2b02      	cmp	r3, #2
 800d65c:	d1ee      	bne.n	800d63c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800d65e:	6880      	ldr	r0, [r0, #8]
 800d660:	4770      	bx	lr
 800d662:	2a31      	cmp	r2, #49	; 0x31
 800d664:	d004      	beq.n	800d670 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x58>
 800d666:	d328      	bcc.n	800d6ba <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 800d668:	2a32      	cmp	r2, #50	; 0x32
 800d66a:	d026      	beq.n	800d6ba <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 800d66c:	2a33      	cmp	r2, #51	; 0x33
 800d66e:	d1e5      	bne.n	800d63c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800d670:	6f00      	ldr	r0, [r0, #112]	; 0x70
 800d672:	4770      	bx	lr
 800d674:	684b      	ldr	r3, [r1, #4]
 800d676:	781b      	ldrb	r3, [r3, #0]
 800d678:	2b01      	cmp	r3, #1
 800d67a:	d004      	beq.n	800d686 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6e>
 800d67c:	d30b      	bcc.n	800d696 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 800d67e:	2b02      	cmp	r3, #2
 800d680:	d1dc      	bne.n	800d63c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800d682:	6900      	ldr	r0, [r0, #16]
 800d684:	4770      	bx	lr
 800d686:	6a00      	ldr	r0, [r0, #32]
 800d688:	4770      	bx	lr
 800d68a:	6980      	ldr	r0, [r0, #24]
 800d68c:	4770      	bx	lr
 800d68e:	684b      	ldr	r3, [r1, #4]
 800d690:	781b      	ldrb	r3, [r3, #0]
 800d692:	2b00      	cmp	r3, #0
 800d694:	d1d2      	bne.n	800d63c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800d696:	6b00      	ldr	r0, [r0, #48]	; 0x30
 800d698:	4770      	bx	lr
 800d69a:	684b      	ldr	r3, [r1, #4]
 800d69c:	781b      	ldrb	r3, [r3, #0]
 800d69e:	2b00      	cmp	r3, #0
 800d6a0:	d1cc      	bne.n	800d63c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800d6a2:	6a80      	ldr	r0, [r0, #40]	; 0x28
 800d6a4:	4770      	bx	lr
 800d6a6:	6c80      	ldr	r0, [r0, #72]	; 0x48
 800d6a8:	4770      	bx	lr
 800d6aa:	6d00      	ldr	r0, [r0, #80]	; 0x50
 800d6ac:	4770      	bx	lr
 800d6ae:	6c00      	ldr	r0, [r0, #64]	; 0x40
 800d6b0:	4770      	bx	lr
 800d6b2:	6d80      	ldr	r0, [r0, #88]	; 0x58
 800d6b4:	4770      	bx	lr
 800d6b6:	6e00      	ldr	r0, [r0, #96]	; 0x60
 800d6b8:	4770      	bx	lr
 800d6ba:	6e80      	ldr	r0, [r0, #104]	; 0x68
 800d6bc:	4770      	bx	lr
 800d6be:	2a0b      	cmp	r2, #11
 800d6c0:	d049      	beq.n	800d756 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 800d6c2:	d80e      	bhi.n	800d6e2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xca>
 800d6c4:	2a03      	cmp	r2, #3
 800d6c6:	d040      	beq.n	800d74a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x132>
 800d6c8:	d804      	bhi.n	800d6d4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xbc>
 800d6ca:	2a01      	cmp	r2, #1
 800d6cc:	d03f      	beq.n	800d74e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x136>
 800d6ce:	d940      	bls.n	800d752 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13a>
 800d6d0:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
 800d6d2:	4770      	bx	lr
 800d6d4:	2a09      	cmp	r2, #9
 800d6d6:	d03e      	beq.n	800d756 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 800d6d8:	d801      	bhi.n	800d6de <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xc6>
 800d6da:	2a08      	cmp	r2, #8
 800d6dc:	d1ae      	bne.n	800d63c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800d6de:	6dc0      	ldr	r0, [r0, #92]	; 0x5c
 800d6e0:	4770      	bx	lr
 800d6e2:	2a2f      	cmp	r2, #47	; 0x2f
 800d6e4:	d024      	beq.n	800d730 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x118>
 800d6e6:	d80d      	bhi.n	800d704 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xec>
 800d6e8:	2a2d      	cmp	r2, #45	; 0x2d
 800d6ea:	d014      	beq.n	800d716 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfe>
 800d6ec:	d826      	bhi.n	800d73c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x124>
 800d6ee:	2a2c      	cmp	r2, #44	; 0x2c
 800d6f0:	d1a4      	bne.n	800d63c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800d6f2:	684b      	ldr	r3, [r1, #4]
 800d6f4:	781b      	ldrb	r3, [r3, #0]
 800d6f6:	2b01      	cmp	r3, #1
 800d6f8:	d018      	beq.n	800d72c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x114>
 800d6fa:	d324      	bcc.n	800d746 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x12e>
 800d6fc:	2b02      	cmp	r3, #2
 800d6fe:	d19d      	bne.n	800d63c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800d700:	68c0      	ldr	r0, [r0, #12]
 800d702:	4770      	bx	lr
 800d704:	2a31      	cmp	r2, #49	; 0x31
 800d706:	d004      	beq.n	800d712 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfa>
 800d708:	d327      	bcc.n	800d75a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 800d70a:	2a32      	cmp	r2, #50	; 0x32
 800d70c:	d025      	beq.n	800d75a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 800d70e:	2a33      	cmp	r2, #51	; 0x33
 800d710:	d194      	bne.n	800d63c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800d712:	6f40      	ldr	r0, [r0, #116]	; 0x74
 800d714:	4770      	bx	lr
 800d716:	684b      	ldr	r3, [r1, #4]
 800d718:	781b      	ldrb	r3, [r3, #0]
 800d71a:	2b01      	cmp	r3, #1
 800d71c:	d004      	beq.n	800d728 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x110>
 800d71e:	d30b      	bcc.n	800d738 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x120>
 800d720:	2b02      	cmp	r3, #2
 800d722:	d18b      	bne.n	800d63c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800d724:	6940      	ldr	r0, [r0, #20]
 800d726:	4770      	bx	lr
 800d728:	6a40      	ldr	r0, [r0, #36]	; 0x24
 800d72a:	4770      	bx	lr
 800d72c:	69c0      	ldr	r0, [r0, #28]
 800d72e:	4770      	bx	lr
 800d730:	684b      	ldr	r3, [r1, #4]
 800d732:	781b      	ldrb	r3, [r3, #0]
 800d734:	2b00      	cmp	r3, #0
 800d736:	d181      	bne.n	800d63c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800d738:	6b40      	ldr	r0, [r0, #52]	; 0x34
 800d73a:	4770      	bx	lr
 800d73c:	684b      	ldr	r3, [r1, #4]
 800d73e:	781b      	ldrb	r3, [r3, #0]
 800d740:	2b00      	cmp	r3, #0
 800d742:	f47f af7b 	bne.w	800d63c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800d746:	6ac0      	ldr	r0, [r0, #44]	; 0x2c
 800d748:	4770      	bx	lr
 800d74a:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 800d74c:	4770      	bx	lr
 800d74e:	6d40      	ldr	r0, [r0, #84]	; 0x54
 800d750:	4770      	bx	lr
 800d752:	6c40      	ldr	r0, [r0, #68]	; 0x44
 800d754:	4770      	bx	lr
 800d756:	6e40      	ldr	r0, [r0, #100]	; 0x64
 800d758:	4770      	bx	lr
 800d75a:	6ec0      	ldr	r0, [r0, #108]	; 0x6c
 800d75c:	4770      	bx	lr

0800d75e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 800d75e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d762:	b087      	sub	sp, #28
 800d764:	9e15      	ldr	r6, [sp, #84]	; 0x54
 800d766:	9205      	str	r2, [sp, #20]
 800d768:	f9bd 2064 	ldrsh.w	r2, [sp, #100]	; 0x64
 800d76c:	9202      	str	r2, [sp, #8]
 800d76e:	e9dd 2516 	ldrd	r2, r5, [sp, #88]	; 0x58
 800d772:	9101      	str	r1, [sp, #4]
 800d774:	6871      	ldr	r1, [r6, #4]
 800d776:	981a      	ldr	r0, [sp, #104]	; 0x68
 800d778:	f89d 406c 	ldrb.w	r4, [sp, #108]	; 0x6c
 800d77c:	f9bd 8060 	ldrsh.w	r8, [sp, #96]	; 0x60
 800d780:	fb01 2505 	mla	r5, r1, r5, r2
 800d784:	6832      	ldr	r2, [r6, #0]
 800d786:	eb02 0545 	add.w	r5, r2, r5, lsl #1
 800d78a:	6802      	ldr	r2, [r0, #0]
 800d78c:	9203      	str	r2, [sp, #12]
 800d78e:	6842      	ldr	r2, [r0, #4]
 800d790:	fa1f fe84 	uxth.w	lr, r4
 800d794:	3204      	adds	r2, #4
 800d796:	43e4      	mvns	r4, r4
 800d798:	9204      	str	r2, [sp, #16]
 800d79a:	b2e4      	uxtb	r4, r4
 800d79c:	9a01      	ldr	r2, [sp, #4]
 800d79e:	2a00      	cmp	r2, #0
 800d7a0:	dc03      	bgt.n	800d7aa <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4c>
 800d7a2:	9a05      	ldr	r2, [sp, #20]
 800d7a4:	2a00      	cmp	r2, #0
 800d7a6:	f340 8119 	ble.w	800d9dc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x27e>
 800d7aa:	9a11      	ldr	r2, [sp, #68]	; 0x44
 800d7ac:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 800d7b0:	9a12      	ldr	r2, [sp, #72]	; 0x48
 800d7b2:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 800d7b6:	2b00      	cmp	r3, #0
 800d7b8:	dd0f      	ble.n	800d7da <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7c>
 800d7ba:	1408      	asrs	r0, r1, #16
 800d7bc:	d406      	bmi.n	800d7cc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6e>
 800d7be:	4540      	cmp	r0, r8
 800d7c0:	da04      	bge.n	800d7cc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6e>
 800d7c2:	1410      	asrs	r0, r2, #16
 800d7c4:	d402      	bmi.n	800d7cc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6e>
 800d7c6:	9e02      	ldr	r6, [sp, #8]
 800d7c8:	42b0      	cmp	r0, r6
 800d7ca:	db07      	blt.n	800d7dc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7e>
 800d7cc:	9813      	ldr	r0, [sp, #76]	; 0x4c
 800d7ce:	4401      	add	r1, r0
 800d7d0:	9814      	ldr	r0, [sp, #80]	; 0x50
 800d7d2:	3b01      	subs	r3, #1
 800d7d4:	4402      	add	r2, r0
 800d7d6:	3502      	adds	r5, #2
 800d7d8:	e7ed      	b.n	800d7b6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x58>
 800d7da:	d00f      	beq.n	800d7fc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9e>
 800d7dc:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 800d7de:	1e58      	subs	r0, r3, #1
 800d7e0:	fb06 1600 	mla	r6, r6, r0, r1
 800d7e4:	1436      	asrs	r6, r6, #16
 800d7e6:	d547      	bpl.n	800d878 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x11a>
 800d7e8:	469b      	mov	fp, r3
 800d7ea:	46aa      	mov	sl, r5
 800d7ec:	f1bb 0f00 	cmp.w	fp, #0
 800d7f0:	f300 809e 	bgt.w	800d930 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d2>
 800d7f4:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 800d7f8:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 800d7fc:	9b01      	ldr	r3, [sp, #4]
 800d7fe:	2b00      	cmp	r3, #0
 800d800:	f340 80ec 	ble.w	800d9dc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x27e>
 800d804:	ee30 0a04 	vadd.f32	s0, s0, s8
 800d808:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 800d80c:	eec7 7a00 	vdiv.f32	s15, s14, s0
 800d810:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800d812:	ee70 0aa4 	vadd.f32	s1, s1, s9
 800d816:	ee31 1a05 	vadd.f32	s2, s2, s10
 800d81a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 800d81e:	eef0 6a62 	vmov.f32	s13, s5
 800d822:	ee61 7a27 	vmul.f32	s15, s2, s15
 800d826:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 800d82a:	ee77 2a62 	vsub.f32	s5, s14, s5
 800d82e:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
 800d832:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 800d836:	eef0 6a43 	vmov.f32	s13, s6
 800d83a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 800d83e:	ee12 2a90 	vmov	r2, s5
 800d842:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 800d846:	fb92 f3f3 	sdiv	r3, r2, r3
 800d84a:	ee13 2a10 	vmov	r2, s6
 800d84e:	9313      	str	r3, [sp, #76]	; 0x4c
 800d850:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800d852:	fb92 f3f3 	sdiv	r3, r2, r3
 800d856:	9314      	str	r3, [sp, #80]	; 0x50
 800d858:	9b01      	ldr	r3, [sp, #4]
 800d85a:	9a05      	ldr	r2, [sp, #20]
 800d85c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 800d860:	3b01      	subs	r3, #1
 800d862:	9301      	str	r3, [sp, #4]
 800d864:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
 800d868:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800d86a:	eeb0 3a67 	vmov.f32	s6, s15
 800d86e:	bf08      	it	eq
 800d870:	4613      	moveq	r3, r2
 800d872:	eef0 2a47 	vmov.f32	s5, s14
 800d876:	e791      	b.n	800d79c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3e>
 800d878:	4546      	cmp	r6, r8
 800d87a:	dab5      	bge.n	800d7e8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x8a>
 800d87c:	9e14      	ldr	r6, [sp, #80]	; 0x50
 800d87e:	fb06 2000 	mla	r0, r6, r0, r2
 800d882:	1400      	asrs	r0, r0, #16
 800d884:	d4b0      	bmi.n	800d7e8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x8a>
 800d886:	9e02      	ldr	r6, [sp, #8]
 800d888:	42b0      	cmp	r0, r6
 800d88a:	daad      	bge.n	800d7e8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x8a>
 800d88c:	469a      	mov	sl, r3
 800d88e:	46ab      	mov	fp, r5
 800d890:	f1ba 0f00 	cmp.w	sl, #0
 800d894:	ddae      	ble.n	800d7f4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x96>
 800d896:	9f03      	ldr	r7, [sp, #12]
 800d898:	1410      	asrs	r0, r2, #16
 800d89a:	140e      	asrs	r6, r1, #16
 800d89c:	fb08 7000 	mla	r0, r8, r0, r7
 800d8a0:	f10a 3aff 	add.w	sl, sl, #4294967295
 800d8a4:	5d80      	ldrb	r0, [r0, r6]
 800d8a6:	9e04      	ldr	r6, [sp, #16]
 800d8a8:	f836 0010 	ldrh.w	r0, [r6, r0, lsl #1]
 800d8ac:	f8bb 6000 	ldrh.w	r6, [fp]
 800d8b0:	1237      	asrs	r7, r6, #8
 800d8b2:	ea4f 2c20 	mov.w	ip, r0, asr #8
 800d8b6:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 800d8ba:	fb17 f704 	smulbb	r7, r7, r4
 800d8be:	ea4f 09e6 	mov.w	r9, r6, asr #3
 800d8c2:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 800d8c6:	00f6      	lsls	r6, r6, #3
 800d8c8:	fb0c 7c0e 	mla	ip, ip, lr, r7
 800d8cc:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 800d8d0:	10c7      	asrs	r7, r0, #3
 800d8d2:	b2f6      	uxtb	r6, r6
 800d8d4:	00c0      	lsls	r0, r0, #3
 800d8d6:	fb19 f904 	smulbb	r9, r9, r4
 800d8da:	fb16 f604 	smulbb	r6, r6, r4
 800d8de:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 800d8e2:	b2c0      	uxtb	r0, r0
 800d8e4:	fa1f fc8c 	uxth.w	ip, ip
 800d8e8:	fb07 970e 	mla	r7, r7, lr, r9
 800d8ec:	fb00 600e 	mla	r0, r0, lr, r6
 800d8f0:	b280      	uxth	r0, r0
 800d8f2:	b2bf      	uxth	r7, r7
 800d8f4:	f10c 0601 	add.w	r6, ip, #1
 800d8f8:	eb06 2c1c 	add.w	ip, r6, ip, lsr #8
 800d8fc:	f107 0901 	add.w	r9, r7, #1
 800d900:	1c46      	adds	r6, r0, #1
 800d902:	eb06 2610 	add.w	r6, r6, r0, lsr #8
 800d906:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 800d90a:	9813      	ldr	r0, [sp, #76]	; 0x4c
 800d90c:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 800d910:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 800d914:	ea4f 1959 	mov.w	r9, r9, lsr #5
 800d918:	ea4c 0c06 	orr.w	ip, ip, r6
 800d91c:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 800d920:	4401      	add	r1, r0
 800d922:	9814      	ldr	r0, [sp, #80]	; 0x50
 800d924:	ea4c 0c09 	orr.w	ip, ip, r9
 800d928:	f82b cb02 	strh.w	ip, [fp], #2
 800d92c:	4402      	add	r2, r0
 800d92e:	e7af      	b.n	800d890 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x132>
 800d930:	140e      	asrs	r6, r1, #16
 800d932:	d44a      	bmi.n	800d9ca <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x26c>
 800d934:	4546      	cmp	r6, r8
 800d936:	da48      	bge.n	800d9ca <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x26c>
 800d938:	1410      	asrs	r0, r2, #16
 800d93a:	d446      	bmi.n	800d9ca <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x26c>
 800d93c:	9f02      	ldr	r7, [sp, #8]
 800d93e:	42b8      	cmp	r0, r7
 800d940:	da43      	bge.n	800d9ca <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x26c>
 800d942:	9f03      	ldr	r7, [sp, #12]
 800d944:	fb08 7000 	mla	r0, r8, r0, r7
 800d948:	5d80      	ldrb	r0, [r0, r6]
 800d94a:	9e04      	ldr	r6, [sp, #16]
 800d94c:	f836 0010 	ldrh.w	r0, [r6, r0, lsl #1]
 800d950:	f8ba 6000 	ldrh.w	r6, [sl]
 800d954:	1237      	asrs	r7, r6, #8
 800d956:	ea4f 2c20 	mov.w	ip, r0, asr #8
 800d95a:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 800d95e:	fb17 f704 	smulbb	r7, r7, r4
 800d962:	ea4f 09e6 	mov.w	r9, r6, asr #3
 800d966:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 800d96a:	00f6      	lsls	r6, r6, #3
 800d96c:	fb0c 7c0e 	mla	ip, ip, lr, r7
 800d970:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 800d974:	10c7      	asrs	r7, r0, #3
 800d976:	b2f6      	uxtb	r6, r6
 800d978:	00c0      	lsls	r0, r0, #3
 800d97a:	fb19 f904 	smulbb	r9, r9, r4
 800d97e:	fb16 f604 	smulbb	r6, r6, r4
 800d982:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 800d986:	b2c0      	uxtb	r0, r0
 800d988:	fa1f fc8c 	uxth.w	ip, ip
 800d98c:	fb07 970e 	mla	r7, r7, lr, r9
 800d990:	fb00 600e 	mla	r0, r0, lr, r6
 800d994:	b2bf      	uxth	r7, r7
 800d996:	b280      	uxth	r0, r0
 800d998:	f10c 0601 	add.w	r6, ip, #1
 800d99c:	eb06 2c1c 	add.w	ip, r6, ip, lsr #8
 800d9a0:	f107 0901 	add.w	r9, r7, #1
 800d9a4:	1c46      	adds	r6, r0, #1
 800d9a6:	eb06 2610 	add.w	r6, r6, r0, lsr #8
 800d9aa:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 800d9ae:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 800d9b2:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 800d9b6:	ea4f 1959 	mov.w	r9, r9, lsr #5
 800d9ba:	ea4c 0c06 	orr.w	ip, ip, r6
 800d9be:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 800d9c2:	ea4c 0c09 	orr.w	ip, ip, r9
 800d9c6:	f8aa c000 	strh.w	ip, [sl]
 800d9ca:	9813      	ldr	r0, [sp, #76]	; 0x4c
 800d9cc:	4401      	add	r1, r0
 800d9ce:	9814      	ldr	r0, [sp, #80]	; 0x50
 800d9d0:	f10a 0a02 	add.w	sl, sl, #2
 800d9d4:	4402      	add	r2, r0
 800d9d6:	f10b 3bff 	add.w	fp, fp, #4294967295
 800d9da:	e707      	b.n	800d7ec <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x8e>
 800d9dc:	b007      	add	sp, #28
 800d9de:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800d9e2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 800d9e2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d9e6:	b085      	sub	sp, #20
 800d9e8:	e9dd 7611 	ldrd	r7, r6, [sp, #68]	; 0x44
 800d9ec:	9813      	ldr	r0, [sp, #76]	; 0x4c
 800d9ee:	9203      	str	r2, [sp, #12]
 800d9f0:	6842      	ldr	r2, [r0, #4]
 800d9f2:	9d15      	ldr	r5, [sp, #84]	; 0x54
 800d9f4:	9c18      	ldr	r4, [sp, #96]	; 0x60
 800d9f6:	6800      	ldr	r0, [r0, #0]
 800d9f8:	f9bd c058 	ldrsh.w	ip, [sp, #88]	; 0x58
 800d9fc:	f9bd 805c 	ldrsh.w	r8, [sp, #92]	; 0x5c
 800da00:	4696      	mov	lr, r2
 800da02:	9a14      	ldr	r2, [sp, #80]	; 0x50
 800da04:	fb0e 2505 	mla	r5, lr, r5, r2
 800da08:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 800da0c:	6860      	ldr	r0, [r4, #4]
 800da0e:	6822      	ldr	r2, [r4, #0]
 800da10:	9201      	str	r2, [sp, #4]
 800da12:	1d02      	adds	r2, r0, #4
 800da14:	9202      	str	r2, [sp, #8]
 800da16:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 800da1a:	2900      	cmp	r1, #0
 800da1c:	dc03      	bgt.n	800da26 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x44>
 800da1e:	9a03      	ldr	r2, [sp, #12]
 800da20:	2a00      	cmp	r2, #0
 800da22:	f340 809b 	ble.w	800db5c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x17a>
 800da26:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 800da28:	f502 4400 	add.w	r4, r2, #32768	; 0x8000
 800da2c:	9a10      	ldr	r2, [sp, #64]	; 0x40
 800da2e:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 800da32:	2b00      	cmp	r3, #0
 800da34:	dd0e      	ble.n	800da54 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x72>
 800da36:	ea5f 4e24 	movs.w	lr, r4, asr #16
 800da3a:	d406      	bmi.n	800da4a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x68>
 800da3c:	45e6      	cmp	lr, ip
 800da3e:	da04      	bge.n	800da4a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x68>
 800da40:	ea5f 4e20 	movs.w	lr, r0, asr #16
 800da44:	d401      	bmi.n	800da4a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x68>
 800da46:	45c6      	cmp	lr, r8
 800da48:	db05      	blt.n	800da56 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x74>
 800da4a:	443c      	add	r4, r7
 800da4c:	4430      	add	r0, r6
 800da4e:	3b01      	subs	r3, #1
 800da50:	3502      	adds	r5, #2
 800da52:	e7ee      	b.n	800da32 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x50>
 800da54:	d010      	beq.n	800da78 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x96>
 800da56:	f103 3eff 	add.w	lr, r3, #4294967295
 800da5a:	fb07 490e 	mla	r9, r7, lr, r4
 800da5e:	ea5f 4929 	movs.w	r9, r9, asr #16
 800da62:	d53d      	bpl.n	800dae0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfe>
 800da64:	469e      	mov	lr, r3
 800da66:	eb05 0b43 	add.w	fp, r5, r3, lsl #1
 800da6a:	f1be 0f00 	cmp.w	lr, #0
 800da6e:	dc58      	bgt.n	800db22 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x140>
 800da70:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 800da74:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 800da78:	2900      	cmp	r1, #0
 800da7a:	dd6f      	ble.n	800db5c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x17a>
 800da7c:	ee30 0a04 	vadd.f32	s0, s0, s8
 800da80:	ee70 0aa4 	vadd.f32	s1, s1, s9
 800da84:	eec6 7a80 	vdiv.f32	s15, s13, s0
 800da88:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800da8a:	3901      	subs	r1, #1
 800da8c:	ee31 1a05 	vadd.f32	s2, s2, s10
 800da90:	ee20 7aa7 	vmul.f32	s14, s1, s15
 800da94:	eeb0 6a62 	vmov.f32	s12, s5
 800da98:	ee61 7a27 	vmul.f32	s15, s2, s15
 800da9c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 800daa0:	ee77 2a62 	vsub.f32	s5, s14, s5
 800daa4:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 800daa8:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 800daac:	eeb0 6a43 	vmov.f32	s12, s6
 800dab0:	ee37 3ac3 	vsub.f32	s6, s15, s6
 800dab4:	ee12 2a90 	vmov	r2, s5
 800dab8:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 800dabc:	fb92 f7f3 	sdiv	r7, r2, r3
 800dac0:	ee13 2a10 	vmov	r2, s6
 800dac4:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 800dac8:	fb92 f6f3 	sdiv	r6, r2, r3
 800dacc:	9a03      	ldr	r2, [sp, #12]
 800dace:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 800dad2:	bf08      	it	eq
 800dad4:	4613      	moveq	r3, r2
 800dad6:	eeb0 3a67 	vmov.f32	s6, s15
 800dada:	eef0 2a47 	vmov.f32	s5, s14
 800dade:	e79c      	b.n	800da1a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x38>
 800dae0:	45e1      	cmp	r9, ip
 800dae2:	dabf      	bge.n	800da64 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x82>
 800dae4:	fb06 0e0e 	mla	lr, r6, lr, r0
 800dae8:	ea5f 4e2e 	movs.w	lr, lr, asr #16
 800daec:	d4ba      	bmi.n	800da64 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x82>
 800daee:	45c6      	cmp	lr, r8
 800daf0:	dab8      	bge.n	800da64 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x82>
 800daf2:	469e      	mov	lr, r3
 800daf4:	46aa      	mov	sl, r5
 800daf6:	f1be 0f00 	cmp.w	lr, #0
 800dafa:	ddb9      	ble.n	800da70 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x8e>
 800dafc:	9a01      	ldr	r2, [sp, #4]
 800dafe:	ea4f 4920 	mov.w	r9, r0, asr #16
 800db02:	ea4f 4b24 	mov.w	fp, r4, asr #16
 800db06:	fb0c 2909 	mla	r9, ip, r9, r2
 800db0a:	9a02      	ldr	r2, [sp, #8]
 800db0c:	f819 900b 	ldrb.w	r9, [r9, fp]
 800db10:	f832 9019 	ldrh.w	r9, [r2, r9, lsl #1]
 800db14:	f82a 9b02 	strh.w	r9, [sl], #2
 800db18:	443c      	add	r4, r7
 800db1a:	4430      	add	r0, r6
 800db1c:	f10e 3eff 	add.w	lr, lr, #4294967295
 800db20:	e7e9      	b.n	800daf6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x114>
 800db22:	ea5f 4a24 	movs.w	sl, r4, asr #16
 800db26:	d414      	bmi.n	800db52 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x170>
 800db28:	45e2      	cmp	sl, ip
 800db2a:	da12      	bge.n	800db52 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x170>
 800db2c:	ea5f 4920 	movs.w	r9, r0, asr #16
 800db30:	d40f      	bmi.n	800db52 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x170>
 800db32:	45c1      	cmp	r9, r8
 800db34:	da0d      	bge.n	800db52 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x170>
 800db36:	9a01      	ldr	r2, [sp, #4]
 800db38:	fb0c 2909 	mla	r9, ip, r9, r2
 800db3c:	9a02      	ldr	r2, [sp, #8]
 800db3e:	f819 900a 	ldrb.w	r9, [r9, sl]
 800db42:	f832 a019 	ldrh.w	sl, [r2, r9, lsl #1]
 800db46:	f06f 0201 	mvn.w	r2, #1
 800db4a:	fb02 f90e 	mul.w	r9, r2, lr
 800db4e:	f82b a009 	strh.w	sl, [fp, r9]
 800db52:	443c      	add	r4, r7
 800db54:	4430      	add	r0, r6
 800db56:	f10e 3eff 	add.w	lr, lr, #4294967295
 800db5a:	e786      	b.n	800da6a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x88>
 800db5c:	b005      	add	sp, #20
 800db5e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800db62 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 800db62:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800db66:	b087      	sub	sp, #28
 800db68:	9e15      	ldr	r6, [sp, #84]	; 0x54
 800db6a:	9205      	str	r2, [sp, #20]
 800db6c:	f9bd 2064 	ldrsh.w	r2, [sp, #100]	; 0x64
 800db70:	9202      	str	r2, [sp, #8]
 800db72:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 800db76:	9101      	str	r1, [sp, #4]
 800db78:	6871      	ldr	r1, [r6, #4]
 800db7a:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 800db7c:	f89d 006c 	ldrb.w	r0, [sp, #108]	; 0x6c
 800db80:	f9bd e060 	ldrsh.w	lr, [sp, #96]	; 0x60
 800db84:	fb01 2404 	mla	r4, r1, r4, r2
 800db88:	6832      	ldr	r2, [r6, #0]
 800db8a:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 800db8e:	682a      	ldr	r2, [r5, #0]
 800db90:	9203      	str	r2, [sp, #12]
 800db92:	686a      	ldr	r2, [r5, #4]
 800db94:	fa1f fc80 	uxth.w	ip, r0
 800db98:	3204      	adds	r2, #4
 800db9a:	43c0      	mvns	r0, r0
 800db9c:	9200      	str	r2, [sp, #0]
 800db9e:	b2c0      	uxtb	r0, r0
 800dba0:	9a01      	ldr	r2, [sp, #4]
 800dba2:	2a00      	cmp	r2, #0
 800dba4:	dc03      	bgt.n	800dbae <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4c>
 800dba6:	9a05      	ldr	r2, [sp, #20]
 800dba8:	2a00      	cmp	r2, #0
 800dbaa:	f340 811b 	ble.w	800dde4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x282>
 800dbae:	9a11      	ldr	r2, [sp, #68]	; 0x44
 800dbb0:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 800dbb4:	9a12      	ldr	r2, [sp, #72]	; 0x48
 800dbb6:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 800dbba:	2b00      	cmp	r3, #0
 800dbbc:	dd0f      	ble.n	800dbde <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7c>
 800dbbe:	140d      	asrs	r5, r1, #16
 800dbc0:	d406      	bmi.n	800dbd0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6e>
 800dbc2:	4575      	cmp	r5, lr
 800dbc4:	da04      	bge.n	800dbd0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6e>
 800dbc6:	1415      	asrs	r5, r2, #16
 800dbc8:	d402      	bmi.n	800dbd0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6e>
 800dbca:	9e02      	ldr	r6, [sp, #8]
 800dbcc:	42b5      	cmp	r5, r6
 800dbce:	db07      	blt.n	800dbe0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7e>
 800dbd0:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 800dbd2:	4429      	add	r1, r5
 800dbd4:	9d14      	ldr	r5, [sp, #80]	; 0x50
 800dbd6:	3b01      	subs	r3, #1
 800dbd8:	442a      	add	r2, r5
 800dbda:	3402      	adds	r4, #2
 800dbdc:	e7ed      	b.n	800dbba <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x58>
 800dbde:	d00f      	beq.n	800dc00 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9e>
 800dbe0:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 800dbe2:	1e5d      	subs	r5, r3, #1
 800dbe4:	fb06 1605 	mla	r6, r6, r5, r1
 800dbe8:	1436      	asrs	r6, r6, #16
 800dbea:	d547      	bpl.n	800dc7c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x11a>
 800dbec:	469a      	mov	sl, r3
 800dbee:	46a1      	mov	r9, r4
 800dbf0:	f1ba 0f00 	cmp.w	sl, #0
 800dbf4:	f300 809f 	bgt.w	800dd36 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d4>
 800dbf8:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 800dbfc:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 800dc00:	9b01      	ldr	r3, [sp, #4]
 800dc02:	2b00      	cmp	r3, #0
 800dc04:	f340 80ee 	ble.w	800dde4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x282>
 800dc08:	ee30 0a04 	vadd.f32	s0, s0, s8
 800dc0c:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 800dc10:	eec7 7a00 	vdiv.f32	s15, s14, s0
 800dc14:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800dc16:	ee70 0aa4 	vadd.f32	s1, s1, s9
 800dc1a:	ee31 1a05 	vadd.f32	s2, s2, s10
 800dc1e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 800dc22:	eef0 6a62 	vmov.f32	s13, s5
 800dc26:	ee61 7a27 	vmul.f32	s15, s2, s15
 800dc2a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 800dc2e:	ee77 2a62 	vsub.f32	s5, s14, s5
 800dc32:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
 800dc36:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 800dc3a:	eef0 6a43 	vmov.f32	s13, s6
 800dc3e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 800dc42:	ee12 2a90 	vmov	r2, s5
 800dc46:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 800dc4a:	fb92 f3f3 	sdiv	r3, r2, r3
 800dc4e:	ee13 2a10 	vmov	r2, s6
 800dc52:	9313      	str	r3, [sp, #76]	; 0x4c
 800dc54:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800dc56:	fb92 f3f3 	sdiv	r3, r2, r3
 800dc5a:	9314      	str	r3, [sp, #80]	; 0x50
 800dc5c:	9b01      	ldr	r3, [sp, #4]
 800dc5e:	9a05      	ldr	r2, [sp, #20]
 800dc60:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 800dc64:	3b01      	subs	r3, #1
 800dc66:	9301      	str	r3, [sp, #4]
 800dc68:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
 800dc6c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800dc6e:	eeb0 3a67 	vmov.f32	s6, s15
 800dc72:	bf08      	it	eq
 800dc74:	4613      	moveq	r3, r2
 800dc76:	eef0 2a47 	vmov.f32	s5, s14
 800dc7a:	e791      	b.n	800dba0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3e>
 800dc7c:	4576      	cmp	r6, lr
 800dc7e:	dab5      	bge.n	800dbec <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x8a>
 800dc80:	9e14      	ldr	r6, [sp, #80]	; 0x50
 800dc82:	fb06 2505 	mla	r5, r6, r5, r2
 800dc86:	142d      	asrs	r5, r5, #16
 800dc88:	d4b0      	bmi.n	800dbec <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x8a>
 800dc8a:	9e02      	ldr	r6, [sp, #8]
 800dc8c:	42b5      	cmp	r5, r6
 800dc8e:	daad      	bge.n	800dbec <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x8a>
 800dc90:	4699      	mov	r9, r3
 800dc92:	46a2      	mov	sl, r4
 800dc94:	f1b9 0f00 	cmp.w	r9, #0
 800dc98:	ddae      	ble.n	800dbf8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x96>
 800dc9a:	9f03      	ldr	r7, [sp, #12]
 800dc9c:	1415      	asrs	r5, r2, #16
 800dc9e:	140e      	asrs	r6, r1, #16
 800dca0:	fb0e 7505 	mla	r5, lr, r5, r7
 800dca4:	f109 39ff 	add.w	r9, r9, #4294967295
 800dca8:	f815 8006 	ldrb.w	r8, [r5, r6]
 800dcac:	9d00      	ldr	r5, [sp, #0]
 800dcae:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 800dcb2:	eb05 0b08 	add.w	fp, r5, r8
 800dcb6:	f8ba 5000 	ldrh.w	r5, [sl]
 800dcba:	f89b 6002 	ldrb.w	r6, [fp, #2]
 800dcbe:	f89b b001 	ldrb.w	fp, [fp, #1]
 800dcc2:	122f      	asrs	r7, r5, #8
 800dcc4:	fb16 f60c 	smulbb	r6, r6, ip
 800dcc8:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 800dccc:	fb07 6700 	mla	r7, r7, r0, r6
 800dcd0:	10ee      	asrs	r6, r5, #3
 800dcd2:	fb1b fb0c 	smulbb	fp, fp, ip
 800dcd6:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 800dcda:	fb06 b600 	mla	r6, r6, r0, fp
 800dcde:	b2b6      	uxth	r6, r6
 800dce0:	9604      	str	r6, [sp, #16]
 800dce2:	9e00      	ldr	r6, [sp, #0]
 800dce4:	00ed      	lsls	r5, r5, #3
 800dce6:	f816 8008 	ldrb.w	r8, [r6, r8]
 800dcea:	b2ed      	uxtb	r5, r5
 800dcec:	fb15 f500 	smulbb	r5, r5, r0
 800dcf0:	b2bf      	uxth	r7, r7
 800dcf2:	fb08 580c 	mla	r8, r8, ip, r5
 800dcf6:	fa1f f888 	uxth.w	r8, r8
 800dcfa:	1c7d      	adds	r5, r7, #1
 800dcfc:	eb05 2717 	add.w	r7, r5, r7, lsr #8
 800dd00:	f108 0501 	add.w	r5, r8, #1
 800dd04:	eb05 2518 	add.w	r5, r5, r8, lsr #8
 800dd08:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 800dd0c:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 800dd10:	432f      	orrs	r7, r5
 800dd12:	9d04      	ldr	r5, [sp, #16]
 800dd14:	f105 0b01 	add.w	fp, r5, #1
 800dd18:	eb0b 2b15 	add.w	fp, fp, r5, lsr #8
 800dd1c:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 800dd1e:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 800dd22:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 800dd26:	4429      	add	r1, r5
 800dd28:	9d14      	ldr	r5, [sp, #80]	; 0x50
 800dd2a:	ea47 070b 	orr.w	r7, r7, fp
 800dd2e:	f82a 7b02 	strh.w	r7, [sl], #2
 800dd32:	442a      	add	r2, r5
 800dd34:	e7ae      	b.n	800dc94 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x132>
 800dd36:	140e      	asrs	r6, r1, #16
 800dd38:	d44b      	bmi.n	800ddd2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x270>
 800dd3a:	4576      	cmp	r6, lr
 800dd3c:	da49      	bge.n	800ddd2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x270>
 800dd3e:	1415      	asrs	r5, r2, #16
 800dd40:	d447      	bmi.n	800ddd2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x270>
 800dd42:	9f02      	ldr	r7, [sp, #8]
 800dd44:	42bd      	cmp	r5, r7
 800dd46:	da44      	bge.n	800ddd2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x270>
 800dd48:	9f03      	ldr	r7, [sp, #12]
 800dd4a:	fb0e 7505 	mla	r5, lr, r5, r7
 800dd4e:	f815 8006 	ldrb.w	r8, [r5, r6]
 800dd52:	9d00      	ldr	r5, [sp, #0]
 800dd54:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 800dd58:	eb05 0b08 	add.w	fp, r5, r8
 800dd5c:	f8b9 5000 	ldrh.w	r5, [r9]
 800dd60:	f89b 6002 	ldrb.w	r6, [fp, #2]
 800dd64:	f89b b001 	ldrb.w	fp, [fp, #1]
 800dd68:	122f      	asrs	r7, r5, #8
 800dd6a:	fb16 f60c 	smulbb	r6, r6, ip
 800dd6e:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 800dd72:	fb07 6700 	mla	r7, r7, r0, r6
 800dd76:	10ee      	asrs	r6, r5, #3
 800dd78:	fb1b fb0c 	smulbb	fp, fp, ip
 800dd7c:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 800dd80:	fb06 b600 	mla	r6, r6, r0, fp
 800dd84:	b2b6      	uxth	r6, r6
 800dd86:	9604      	str	r6, [sp, #16]
 800dd88:	9e00      	ldr	r6, [sp, #0]
 800dd8a:	00ed      	lsls	r5, r5, #3
 800dd8c:	f816 8008 	ldrb.w	r8, [r6, r8]
 800dd90:	b2ed      	uxtb	r5, r5
 800dd92:	fb15 f500 	smulbb	r5, r5, r0
 800dd96:	b2bf      	uxth	r7, r7
 800dd98:	fb08 580c 	mla	r8, r8, ip, r5
 800dd9c:	fa1f f888 	uxth.w	r8, r8
 800dda0:	1c7d      	adds	r5, r7, #1
 800dda2:	eb05 2717 	add.w	r7, r5, r7, lsr #8
 800dda6:	f108 0501 	add.w	r5, r8, #1
 800ddaa:	eb05 2518 	add.w	r5, r5, r8, lsr #8
 800ddae:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 800ddb2:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 800ddb6:	432f      	orrs	r7, r5
 800ddb8:	9d04      	ldr	r5, [sp, #16]
 800ddba:	f105 0b01 	add.w	fp, r5, #1
 800ddbe:	eb0b 2b15 	add.w	fp, fp, r5, lsr #8
 800ddc2:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 800ddc6:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 800ddca:	ea47 070b 	orr.w	r7, r7, fp
 800ddce:	f8a9 7000 	strh.w	r7, [r9]
 800ddd2:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 800ddd4:	4429      	add	r1, r5
 800ddd6:	9d14      	ldr	r5, [sp, #80]	; 0x50
 800ddd8:	f109 0902 	add.w	r9, r9, #2
 800dddc:	442a      	add	r2, r5
 800ddde:	f10a 3aff 	add.w	sl, sl, #4294967295
 800dde2:	e705      	b.n	800dbf0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x8e>
 800dde4:	b007      	add	sp, #28
 800dde6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

0800ddec <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 800ddec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ddf0:	b085      	sub	sp, #20
 800ddf2:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 800ddf6:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 800ddf8:	9203      	str	r2, [sp, #12]
 800ddfa:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 800ddfe:	6870      	ldr	r0, [r6, #4]
 800de00:	9d18      	ldr	r5, [sp, #96]	; 0x60
 800de02:	f9bd 7058 	ldrsh.w	r7, [sp, #88]	; 0x58
 800de06:	f9bd 805c 	ldrsh.w	r8, [sp, #92]	; 0x5c
 800de0a:	9101      	str	r1, [sp, #4]
 800de0c:	fb00 2404 	mla	r4, r0, r4, r2
 800de10:	6832      	ldr	r2, [r6, #0]
 800de12:	686e      	ldr	r6, [r5, #4]
 800de14:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 800de18:	682a      	ldr	r2, [r5, #0]
 800de1a:	9202      	str	r2, [sp, #8]
 800de1c:	3604      	adds	r6, #4
 800de1e:	9a01      	ldr	r2, [sp, #4]
 800de20:	2a00      	cmp	r2, #0
 800de22:	dc03      	bgt.n	800de2c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x40>
 800de24:	9a03      	ldr	r2, [sp, #12]
 800de26:	2a00      	cmp	r2, #0
 800de28:	f340 80c7 	ble.w	800dfba <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1ce>
 800de2c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 800de2e:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 800de32:	9a10      	ldr	r2, [sp, #64]	; 0x40
 800de34:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 800de38:	2b00      	cmp	r3, #0
 800de3a:	dd0e      	ble.n	800de5a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6e>
 800de3c:	1405      	asrs	r5, r0, #16
 800de3e:	d405      	bmi.n	800de4c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x60>
 800de40:	42bd      	cmp	r5, r7
 800de42:	da03      	bge.n	800de4c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x60>
 800de44:	1415      	asrs	r5, r2, #16
 800de46:	d401      	bmi.n	800de4c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x60>
 800de48:	4545      	cmp	r5, r8
 800de4a:	db07      	blt.n	800de5c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x70>
 800de4c:	9d11      	ldr	r5, [sp, #68]	; 0x44
 800de4e:	4428      	add	r0, r5
 800de50:	9d12      	ldr	r5, [sp, #72]	; 0x48
 800de52:	3b01      	subs	r3, #1
 800de54:	442a      	add	r2, r5
 800de56:	3402      	adds	r4, #2
 800de58:	e7ee      	b.n	800de38 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4c>
 800de5a:	d010      	beq.n	800de7e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x92>
 800de5c:	9911      	ldr	r1, [sp, #68]	; 0x44
 800de5e:	1e5d      	subs	r5, r3, #1
 800de60:	fb01 0c05 	mla	ip, r1, r5, r0
 800de64:	ea5f 4c2c 	movs.w	ip, ip, asr #16
 800de68:	d545      	bpl.n	800def6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x10a>
 800de6a:	469e      	mov	lr, r3
 800de6c:	eb04 0b43 	add.w	fp, r4, r3, lsl #1
 800de70:	f1be 0f00 	cmp.w	lr, #0
 800de74:	dc72      	bgt.n	800df5c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x170>
 800de76:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 800de7a:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 800de7e:	9b01      	ldr	r3, [sp, #4]
 800de80:	2b00      	cmp	r3, #0
 800de82:	f340 809a 	ble.w	800dfba <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1ce>
 800de86:	ee30 0a04 	vadd.f32	s0, s0, s8
 800de8a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 800de8e:	eec6 7a80 	vdiv.f32	s15, s13, s0
 800de92:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800de94:	ee31 1a05 	vadd.f32	s2, s2, s10
 800de98:	ee20 7aa7 	vmul.f32	s14, s1, s15
 800de9c:	eeb0 6a62 	vmov.f32	s12, s5
 800dea0:	ee61 7a27 	vmul.f32	s15, s2, s15
 800dea4:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 800dea8:	ee77 2a62 	vsub.f32	s5, s14, s5
 800deac:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 800deb0:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 800deb4:	eeb0 6a43 	vmov.f32	s12, s6
 800deb8:	ee37 3ac3 	vsub.f32	s6, s15, s6
 800debc:	ee12 2a90 	vmov	r2, s5
 800dec0:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 800dec4:	fb92 f3f3 	sdiv	r3, r2, r3
 800dec8:	ee13 2a10 	vmov	r2, s6
 800decc:	9311      	str	r3, [sp, #68]	; 0x44
 800dece:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800ded0:	fb92 f3f3 	sdiv	r3, r2, r3
 800ded4:	9312      	str	r3, [sp, #72]	; 0x48
 800ded6:	9b01      	ldr	r3, [sp, #4]
 800ded8:	9a03      	ldr	r2, [sp, #12]
 800deda:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 800dede:	3b01      	subs	r3, #1
 800dee0:	9301      	str	r3, [sp, #4]
 800dee2:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 800dee6:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800dee8:	eeb0 3a67 	vmov.f32	s6, s15
 800deec:	bf08      	it	eq
 800deee:	4613      	moveq	r3, r2
 800def0:	eef0 2a47 	vmov.f32	s5, s14
 800def4:	e793      	b.n	800de1e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x32>
 800def6:	45bc      	cmp	ip, r7
 800def8:	dab7      	bge.n	800de6a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7e>
 800defa:	9912      	ldr	r1, [sp, #72]	; 0x48
 800defc:	fb01 2505 	mla	r5, r1, r5, r2
 800df00:	142d      	asrs	r5, r5, #16
 800df02:	d4b2      	bmi.n	800de6a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7e>
 800df04:	4545      	cmp	r5, r8
 800df06:	dab0      	bge.n	800de6a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7e>
 800df08:	469e      	mov	lr, r3
 800df0a:	46a2      	mov	sl, r4
 800df0c:	f1be 0f00 	cmp.w	lr, #0
 800df10:	ddb1      	ble.n	800de76 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x8a>
 800df12:	9902      	ldr	r1, [sp, #8]
 800df14:	1415      	asrs	r5, r2, #16
 800df16:	fb07 1505 	mla	r5, r7, r5, r1
 800df1a:	ea4f 4c20 	mov.w	ip, r0, asr #16
 800df1e:	4928      	ldr	r1, [pc, #160]	; (800dfc0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d4>)
 800df20:	f815 c00c 	ldrb.w	ip, [r5, ip]
 800df24:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 800df28:	eb06 0b0c 	add.w	fp, r6, ip
 800df2c:	f10e 3eff 	add.w	lr, lr, #4294967295
 800df30:	f89b 5001 	ldrb.w	r5, [fp, #1]
 800df34:	f89b 9002 	ldrb.w	r9, [fp, #2]
 800df38:	00ed      	lsls	r5, r5, #3
 800df3a:	ea01 2909 	and.w	r9, r1, r9, lsl #8
 800df3e:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 800df42:	9911      	ldr	r1, [sp, #68]	; 0x44
 800df44:	ea49 0505 	orr.w	r5, r9, r5
 800df48:	f816 900c 	ldrb.w	r9, [r6, ip]
 800df4c:	4408      	add	r0, r1
 800df4e:	9912      	ldr	r1, [sp, #72]	; 0x48
 800df50:	ea45 05d9 	orr.w	r5, r5, r9, lsr #3
 800df54:	f82a 5b02 	strh.w	r5, [sl], #2
 800df58:	440a      	add	r2, r1
 800df5a:	e7d7      	b.n	800df0c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x120>
 800df5c:	ea5f 4c20 	movs.w	ip, r0, asr #16
 800df60:	d424      	bmi.n	800dfac <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1c0>
 800df62:	45bc      	cmp	ip, r7
 800df64:	da22      	bge.n	800dfac <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1c0>
 800df66:	1415      	asrs	r5, r2, #16
 800df68:	d420      	bmi.n	800dfac <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1c0>
 800df6a:	4545      	cmp	r5, r8
 800df6c:	da1e      	bge.n	800dfac <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1c0>
 800df6e:	9902      	ldr	r1, [sp, #8]
 800df70:	fb07 1505 	mla	r5, r7, r5, r1
 800df74:	f06f 0101 	mvn.w	r1, #1
 800df78:	f815 c00c 	ldrb.w	ip, [r5, ip]
 800df7c:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 800df80:	eb06 050c 	add.w	r5, r6, ip
 800df84:	fb01 f90e 	mul.w	r9, r1, lr
 800df88:	f895 a002 	ldrb.w	sl, [r5, #2]
 800df8c:	786d      	ldrb	r5, [r5, #1]
 800df8e:	f2a1 71fe 	subw	r1, r1, #2046	; 0x7fe
 800df92:	00ed      	lsls	r5, r5, #3
 800df94:	ea01 2a0a 	and.w	sl, r1, sl, lsl #8
 800df98:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 800df9c:	ea4a 0505 	orr.w	r5, sl, r5
 800dfa0:	f816 a00c 	ldrb.w	sl, [r6, ip]
 800dfa4:	ea45 05da 	orr.w	r5, r5, sl, lsr #3
 800dfa8:	f82b 5009 	strh.w	r5, [fp, r9]
 800dfac:	9911      	ldr	r1, [sp, #68]	; 0x44
 800dfae:	4408      	add	r0, r1
 800dfb0:	9912      	ldr	r1, [sp, #72]	; 0x48
 800dfb2:	f10e 3eff 	add.w	lr, lr, #4294967295
 800dfb6:	440a      	add	r2, r1
 800dfb8:	e75a      	b.n	800de70 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x84>
 800dfba:	b005      	add	sp, #20
 800dfbc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800dfc0:	fffff800 	.word	0xfffff800

0800dfc4 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 800dfc4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800dfc8:	b087      	sub	sp, #28
 800dfca:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 800dfce:	9204      	str	r2, [sp, #16]
 800dfd0:	f9bd 2064 	ldrsh.w	r2, [sp, #100]	; 0x64
 800dfd4:	9d15      	ldr	r5, [sp, #84]	; 0x54
 800dfd6:	9201      	str	r2, [sp, #4]
 800dfd8:	f89d 206c 	ldrb.w	r2, [sp, #108]	; 0x6c
 800dfdc:	9205      	str	r2, [sp, #20]
 800dfde:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 800dfe2:	9100      	str	r1, [sp, #0]
 800dfe4:	6869      	ldr	r1, [r5, #4]
 800dfe6:	981a      	ldr	r0, [sp, #104]	; 0x68
 800dfe8:	f9bd e060 	ldrsh.w	lr, [sp, #96]	; 0x60
 800dfec:	fb01 2404 	mla	r4, r1, r4, r2
 800dff0:	682a      	ldr	r2, [r5, #0]
 800dff2:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 800dff6:	6802      	ldr	r2, [r0, #0]
 800dff8:	9202      	str	r2, [sp, #8]
 800dffa:	6842      	ldr	r2, [r0, #4]
 800dffc:	3204      	adds	r2, #4
 800dffe:	9203      	str	r2, [sp, #12]
 800e000:	9a00      	ldr	r2, [sp, #0]
 800e002:	2a00      	cmp	r2, #0
 800e004:	dc03      	bgt.n	800e00e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4a>
 800e006:	9a04      	ldr	r2, [sp, #16]
 800e008:	2a00      	cmp	r2, #0
 800e00a:	f340 812c 	ble.w	800e266 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2a2>
 800e00e:	9a11      	ldr	r2, [sp, #68]	; 0x44
 800e010:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 800e014:	9a12      	ldr	r2, [sp, #72]	; 0x48
 800e016:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 800e01a:	2b00      	cmp	r3, #0
 800e01c:	dd0f      	ble.n	800e03e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7a>
 800e01e:	1402      	asrs	r2, r0, #16
 800e020:	d406      	bmi.n	800e030 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6c>
 800e022:	4572      	cmp	r2, lr
 800e024:	da04      	bge.n	800e030 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6c>
 800e026:	140a      	asrs	r2, r1, #16
 800e028:	d402      	bmi.n	800e030 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6c>
 800e02a:	9d01      	ldr	r5, [sp, #4]
 800e02c:	42aa      	cmp	r2, r5
 800e02e:	db07      	blt.n	800e040 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7c>
 800e030:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 800e032:	4410      	add	r0, r2
 800e034:	9a14      	ldr	r2, [sp, #80]	; 0x50
 800e036:	3b01      	subs	r3, #1
 800e038:	4411      	add	r1, r2
 800e03a:	3402      	adds	r4, #2
 800e03c:	e7ed      	b.n	800e01a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x56>
 800e03e:	d00f      	beq.n	800e060 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9c>
 800e040:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 800e042:	1e5a      	subs	r2, r3, #1
 800e044:	fb05 0502 	mla	r5, r5, r2, r0
 800e048:	142d      	asrs	r5, r5, #16
 800e04a:	d545      	bpl.n	800e0d8 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x114>
 800e04c:	4699      	mov	r9, r3
 800e04e:	46a0      	mov	r8, r4
 800e050:	f1b9 0f00 	cmp.w	r9, #0
 800e054:	f300 80a7 	bgt.w	800e1a6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1e2>
 800e058:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 800e05c:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 800e060:	9b00      	ldr	r3, [sp, #0]
 800e062:	2b00      	cmp	r3, #0
 800e064:	f340 80ff 	ble.w	800e266 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2a2>
 800e068:	ee30 0a04 	vadd.f32	s0, s0, s8
 800e06c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 800e070:	eec6 7a80 	vdiv.f32	s15, s13, s0
 800e074:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800e076:	ee31 1a05 	vadd.f32	s2, s2, s10
 800e07a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 800e07e:	eeb0 6a62 	vmov.f32	s12, s5
 800e082:	ee61 7a27 	vmul.f32	s15, s2, s15
 800e086:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 800e08a:	ee77 2a62 	vsub.f32	s5, s14, s5
 800e08e:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 800e092:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 800e096:	eeb0 6a43 	vmov.f32	s12, s6
 800e09a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 800e09e:	ee12 2a90 	vmov	r2, s5
 800e0a2:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 800e0a6:	fb92 f3f3 	sdiv	r3, r2, r3
 800e0aa:	ee13 2a10 	vmov	r2, s6
 800e0ae:	9313      	str	r3, [sp, #76]	; 0x4c
 800e0b0:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800e0b2:	fb92 f3f3 	sdiv	r3, r2, r3
 800e0b6:	9314      	str	r3, [sp, #80]	; 0x50
 800e0b8:	9b00      	ldr	r3, [sp, #0]
 800e0ba:	9a04      	ldr	r2, [sp, #16]
 800e0bc:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 800e0c0:	3b01      	subs	r3, #1
 800e0c2:	9300      	str	r3, [sp, #0]
 800e0c4:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 800e0c8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800e0ca:	eeb0 3a67 	vmov.f32	s6, s15
 800e0ce:	bf08      	it	eq
 800e0d0:	4613      	moveq	r3, r2
 800e0d2:	eef0 2a47 	vmov.f32	s5, s14
 800e0d6:	e793      	b.n	800e000 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3c>
 800e0d8:	4575      	cmp	r5, lr
 800e0da:	dab7      	bge.n	800e04c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x88>
 800e0dc:	9d14      	ldr	r5, [sp, #80]	; 0x50
 800e0de:	fb05 1202 	mla	r2, r5, r2, r1
 800e0e2:	1412      	asrs	r2, r2, #16
 800e0e4:	d4b2      	bmi.n	800e04c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x88>
 800e0e6:	9d01      	ldr	r5, [sp, #4]
 800e0e8:	42aa      	cmp	r2, r5
 800e0ea:	daaf      	bge.n	800e04c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x88>
 800e0ec:	f04f 0800 	mov.w	r8, #0
 800e0f0:	eba3 0208 	sub.w	r2, r3, r8
 800e0f4:	2a00      	cmp	r2, #0
 800e0f6:	ddaf      	ble.n	800e058 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x94>
 800e0f8:	9e02      	ldr	r6, [sp, #8]
 800e0fa:	140a      	asrs	r2, r1, #16
 800e0fc:	1405      	asrs	r5, r0, #16
 800e0fe:	fb0e 6202 	mla	r2, lr, r2, r6
 800e102:	5d52      	ldrb	r2, [r2, r5]
 800e104:	9d03      	ldr	r5, [sp, #12]
 800e106:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 800e10a:	0e2e      	lsrs	r6, r5, #24
 800e10c:	d044      	beq.n	800e198 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d4>
 800e10e:	9a05      	ldr	r2, [sp, #20]
 800e110:	f834 c018 	ldrh.w	ip, [r4, r8, lsl #1]
 800e114:	4356      	muls	r6, r2
 800e116:	1c72      	adds	r2, r6, #1
 800e118:	eb02 2226 	add.w	r2, r2, r6, asr #8
 800e11c:	1212      	asrs	r2, r2, #8
 800e11e:	fa1f f982 	uxth.w	r9, r2
 800e122:	ea4f 272c 	mov.w	r7, ip, asr #8
 800e126:	f3c5 4607 	ubfx	r6, r5, #16, #8
 800e12a:	43d2      	mvns	r2, r2
 800e12c:	b2d2      	uxtb	r2, r2
 800e12e:	fb16 f609 	smulbb	r6, r6, r9
 800e132:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 800e136:	fb07 6702 	mla	r7, r7, r2, r6
 800e13a:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 800e13e:	ea4f 06ec 	mov.w	r6, ip, asr #3
 800e142:	b2ed      	uxtb	r5, r5
 800e144:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 800e148:	fa5f fc8c 	uxtb.w	ip, ip
 800e14c:	fb15 f509 	smulbb	r5, r5, r9
 800e150:	fb0c 5502 	mla	r5, ip, r2, r5
 800e154:	b2bf      	uxth	r7, r7
 800e156:	fb1a fa09 	smulbb	sl, sl, r9
 800e15a:	b2ad      	uxth	r5, r5
 800e15c:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 800e160:	fb06 a602 	mla	r6, r6, r2, sl
 800e164:	1c7a      	adds	r2, r7, #1
 800e166:	f105 0a01 	add.w	sl, r5, #1
 800e16a:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 800e16e:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 800e172:	b2b6      	uxth	r6, r6
 800e174:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 800e178:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 800e17c:	ea47 070a 	orr.w	r7, r7, sl
 800e180:	f106 0a01 	add.w	sl, r6, #1
 800e184:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 800e188:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 800e18c:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 800e190:	ea47 070a 	orr.w	r7, r7, sl
 800e194:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 800e198:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 800e19a:	4410      	add	r0, r2
 800e19c:	9a14      	ldr	r2, [sp, #80]	; 0x50
 800e19e:	f108 0801 	add.w	r8, r8, #1
 800e1a2:	4411      	add	r1, r2
 800e1a4:	e7a4      	b.n	800e0f0 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x12c>
 800e1a6:	1405      	asrs	r5, r0, #16
 800e1a8:	d454      	bmi.n	800e254 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x290>
 800e1aa:	4575      	cmp	r5, lr
 800e1ac:	da52      	bge.n	800e254 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x290>
 800e1ae:	140a      	asrs	r2, r1, #16
 800e1b0:	d450      	bmi.n	800e254 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x290>
 800e1b2:	9e01      	ldr	r6, [sp, #4]
 800e1b4:	42b2      	cmp	r2, r6
 800e1b6:	da4d      	bge.n	800e254 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x290>
 800e1b8:	9e02      	ldr	r6, [sp, #8]
 800e1ba:	fb0e 6202 	mla	r2, lr, r2, r6
 800e1be:	5d52      	ldrb	r2, [r2, r5]
 800e1c0:	9d03      	ldr	r5, [sp, #12]
 800e1c2:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 800e1c6:	0e2e      	lsrs	r6, r5, #24
 800e1c8:	d044      	beq.n	800e254 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x290>
 800e1ca:	9a05      	ldr	r2, [sp, #20]
 800e1cc:	f8b8 c000 	ldrh.w	ip, [r8]
 800e1d0:	4356      	muls	r6, r2
 800e1d2:	1c72      	adds	r2, r6, #1
 800e1d4:	eb02 2226 	add.w	r2, r2, r6, asr #8
 800e1d8:	1212      	asrs	r2, r2, #8
 800e1da:	fa1f fa82 	uxth.w	sl, r2
 800e1de:	ea4f 272c 	mov.w	r7, ip, asr #8
 800e1e2:	f3c5 4607 	ubfx	r6, r5, #16, #8
 800e1e6:	43d2      	mvns	r2, r2
 800e1e8:	b2d2      	uxtb	r2, r2
 800e1ea:	fb16 f60a 	smulbb	r6, r6, sl
 800e1ee:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 800e1f2:	fb07 6702 	mla	r7, r7, r2, r6
 800e1f6:	f3c5 2b07 	ubfx	fp, r5, #8, #8
 800e1fa:	ea4f 06ec 	mov.w	r6, ip, asr #3
 800e1fe:	b2ed      	uxtb	r5, r5
 800e200:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 800e204:	fa5f fc8c 	uxtb.w	ip, ip
 800e208:	fb15 f50a 	smulbb	r5, r5, sl
 800e20c:	fb0c 5502 	mla	r5, ip, r2, r5
 800e210:	b2bf      	uxth	r7, r7
 800e212:	fb1b fb0a 	smulbb	fp, fp, sl
 800e216:	b2ad      	uxth	r5, r5
 800e218:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 800e21c:	fb06 b602 	mla	r6, r6, r2, fp
 800e220:	1c7a      	adds	r2, r7, #1
 800e222:	f105 0b01 	add.w	fp, r5, #1
 800e226:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 800e22a:	eb0b 2b15 	add.w	fp, fp, r5, lsr #8
 800e22e:	b2b6      	uxth	r6, r6
 800e230:	f3cb 2bc4 	ubfx	fp, fp, #11, #5
 800e234:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 800e238:	ea47 070b 	orr.w	r7, r7, fp
 800e23c:	f106 0b01 	add.w	fp, r6, #1
 800e240:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 800e244:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 800e248:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 800e24c:	ea47 070b 	orr.w	r7, r7, fp
 800e250:	f8a8 7000 	strh.w	r7, [r8]
 800e254:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 800e256:	4410      	add	r0, r2
 800e258:	9a14      	ldr	r2, [sp, #80]	; 0x50
 800e25a:	f108 0802 	add.w	r8, r8, #2
 800e25e:	4411      	add	r1, r2
 800e260:	f109 39ff 	add.w	r9, r9, #4294967295
 800e264:	e6f4      	b.n	800e050 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x8c>
 800e266:	b007      	add	sp, #28
 800e268:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800e26c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 800e26c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e270:	b087      	sub	sp, #28
 800e272:	468b      	mov	fp, r1
 800e274:	9d15      	ldr	r5, [sp, #84]	; 0x54
 800e276:	9205      	str	r2, [sp, #20]
 800e278:	f9bd 2064 	ldrsh.w	r2, [sp, #100]	; 0x64
 800e27c:	9201      	str	r2, [sp, #4]
 800e27e:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 800e282:	6869      	ldr	r1, [r5, #4]
 800e284:	981a      	ldr	r0, [sp, #104]	; 0x68
 800e286:	f9bd 8060 	ldrsh.w	r8, [sp, #96]	; 0x60
 800e28a:	fb01 2404 	mla	r4, r1, r4, r2
 800e28e:	682a      	ldr	r2, [r5, #0]
 800e290:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 800e294:	6802      	ldr	r2, [r0, #0]
 800e296:	9203      	str	r2, [sp, #12]
 800e298:	6842      	ldr	r2, [r0, #4]
 800e29a:	3204      	adds	r2, #4
 800e29c:	9204      	str	r2, [sp, #16]
 800e29e:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 800e2a2:	f1bb 0f00 	cmp.w	fp, #0
 800e2a6:	dc03      	bgt.n	800e2b0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x44>
 800e2a8:	9a05      	ldr	r2, [sp, #20]
 800e2aa:	2a00      	cmp	r2, #0
 800e2ac:	f340 814a 	ble.w	800e544 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2d8>
 800e2b0:	9a11      	ldr	r2, [sp, #68]	; 0x44
 800e2b2:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 800e2b6:	9a12      	ldr	r2, [sp, #72]	; 0x48
 800e2b8:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 800e2bc:	2b00      	cmp	r3, #0
 800e2be:	dd0f      	ble.n	800e2e0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x74>
 800e2c0:	1408      	asrs	r0, r1, #16
 800e2c2:	d406      	bmi.n	800e2d2 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x66>
 800e2c4:	4540      	cmp	r0, r8
 800e2c6:	da04      	bge.n	800e2d2 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x66>
 800e2c8:	1410      	asrs	r0, r2, #16
 800e2ca:	d402      	bmi.n	800e2d2 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x66>
 800e2cc:	9d01      	ldr	r5, [sp, #4]
 800e2ce:	42a8      	cmp	r0, r5
 800e2d0:	db07      	blt.n	800e2e2 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x76>
 800e2d2:	9813      	ldr	r0, [sp, #76]	; 0x4c
 800e2d4:	4401      	add	r1, r0
 800e2d6:	9814      	ldr	r0, [sp, #80]	; 0x50
 800e2d8:	3b01      	subs	r3, #1
 800e2da:	4402      	add	r2, r0
 800e2dc:	3402      	adds	r4, #2
 800e2de:	e7ed      	b.n	800e2bc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x50>
 800e2e0:	d018      	beq.n	800e314 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xa8>
 800e2e2:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 800e2e4:	1e58      	subs	r0, r3, #1
 800e2e6:	fb05 1500 	mla	r5, r5, r0, r1
 800e2ea:	142d      	asrs	r5, r5, #16
 800e2ec:	d40a      	bmi.n	800e304 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x98>
 800e2ee:	4545      	cmp	r5, r8
 800e2f0:	da08      	bge.n	800e304 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x98>
 800e2f2:	9d14      	ldr	r5, [sp, #80]	; 0x50
 800e2f4:	fb05 2000 	mla	r0, r5, r0, r2
 800e2f8:	1400      	asrs	r0, r0, #16
 800e2fa:	d403      	bmi.n	800e304 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x98>
 800e2fc:	9d01      	ldr	r5, [sp, #4]
 800e2fe:	42a8      	cmp	r0, r5
 800e300:	f2c0 80b7 	blt.w	800e472 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x206>
 800e304:	2600      	movs	r6, #0
 800e306:	1998      	adds	r0, r3, r6
 800e308:	2800      	cmp	r0, #0
 800e30a:	dc3e      	bgt.n	800e38a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x11e>
 800e30c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 800e310:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 800e314:	f1bb 0f00 	cmp.w	fp, #0
 800e318:	f340 8114 	ble.w	800e544 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2d8>
 800e31c:	ee30 0a04 	vadd.f32	s0, s0, s8
 800e320:	ee70 0aa4 	vadd.f32	s1, s1, s9
 800e324:	eec6 7a80 	vdiv.f32	s15, s13, s0
 800e328:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800e32a:	f1bb 0b01 	subs.w	fp, fp, #1
 800e32e:	ee31 1a05 	vadd.f32	s2, s2, s10
 800e332:	ee20 7aa7 	vmul.f32	s14, s1, s15
 800e336:	eeb0 6a62 	vmov.f32	s12, s5
 800e33a:	ee61 7a27 	vmul.f32	s15, s2, s15
 800e33e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 800e342:	ee77 2a62 	vsub.f32	s5, s14, s5
 800e346:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 800e34a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 800e34e:	eeb0 6a43 	vmov.f32	s12, s6
 800e352:	ee37 3ac3 	vsub.f32	s6, s15, s6
 800e356:	ee12 2a90 	vmov	r2, s5
 800e35a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 800e35e:	fb92 f3f3 	sdiv	r3, r2, r3
 800e362:	ee13 2a10 	vmov	r2, s6
 800e366:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 800e36a:	9313      	str	r3, [sp, #76]	; 0x4c
 800e36c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800e36e:	fb92 f3f3 	sdiv	r3, r2, r3
 800e372:	9a05      	ldr	r2, [sp, #20]
 800e374:	9314      	str	r3, [sp, #80]	; 0x50
 800e376:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 800e37a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800e37c:	eeb0 3a67 	vmov.f32	s6, s15
 800e380:	bf08      	it	eq
 800e382:	4613      	moveq	r3, r2
 800e384:	eef0 2a47 	vmov.f32	s5, s14
 800e388:	e78b      	b.n	800e2a2 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x36>
 800e38a:	140d      	asrs	r5, r1, #16
 800e38c:	d459      	bmi.n	800e442 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 800e38e:	4545      	cmp	r5, r8
 800e390:	da57      	bge.n	800e442 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 800e392:	1410      	asrs	r0, r2, #16
 800e394:	d455      	bmi.n	800e442 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 800e396:	9f01      	ldr	r7, [sp, #4]
 800e398:	42b8      	cmp	r0, r7
 800e39a:	da52      	bge.n	800e442 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 800e39c:	9f03      	ldr	r7, [sp, #12]
 800e39e:	fb08 7000 	mla	r0, r8, r0, r7
 800e3a2:	5d40      	ldrb	r0, [r0, r5]
 800e3a4:	9d04      	ldr	r5, [sp, #16]
 800e3a6:	f855 0020 	ldr.w	r0, [r5, r0, lsl #2]
 800e3aa:	0e07      	lsrs	r7, r0, #24
 800e3ac:	2fff      	cmp	r7, #255	; 0xff
 800e3ae:	d04e      	beq.n	800e44e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1e2>
 800e3b0:	b2fd      	uxtb	r5, r7
 800e3b2:	2f00      	cmp	r7, #0
 800e3b4:	d045      	beq.n	800e442 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 800e3b6:	f06f 0701 	mvn.w	r7, #1
 800e3ba:	4377      	muls	r7, r6
 800e3bc:	fa1f f985 	uxth.w	r9, r5
 800e3c0:	f834 e007 	ldrh.w	lr, [r4, r7]
 800e3c4:	9702      	str	r7, [sp, #8]
 800e3c6:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 800e3ca:	f3c0 4707 	ubfx	r7, r0, #16, #8
 800e3ce:	43ed      	mvns	r5, r5
 800e3d0:	b2ed      	uxtb	r5, r5
 800e3d2:	fb17 f709 	smulbb	r7, r7, r9
 800e3d6:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 800e3da:	fb0c 7c05 	mla	ip, ip, r5, r7
 800e3de:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 800e3e2:	ea4f 07ee 	mov.w	r7, lr, asr #3
 800e3e6:	b2c0      	uxtb	r0, r0
 800e3e8:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 800e3ec:	fa5f fe8e 	uxtb.w	lr, lr
 800e3f0:	fb10 f009 	smulbb	r0, r0, r9
 800e3f4:	fb0e 0005 	mla	r0, lr, r5, r0
 800e3f8:	b280      	uxth	r0, r0
 800e3fa:	fa1f fc8c 	uxth.w	ip, ip
 800e3fe:	fb1a fa09 	smulbb	sl, sl, r9
 800e402:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 800e406:	fb07 a705 	mla	r7, r7, r5, sl
 800e40a:	f100 0a01 	add.w	sl, r0, #1
 800e40e:	f10c 0501 	add.w	r5, ip, #1
 800e412:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 800e416:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 800e41a:	b2bf      	uxth	r7, r7
 800e41c:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 800e420:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 800e424:	ea4c 0c0a 	orr.w	ip, ip, sl
 800e428:	f107 0a01 	add.w	sl, r7, #1
 800e42c:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 800e430:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 800e434:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 800e438:	9802      	ldr	r0, [sp, #8]
 800e43a:	ea4c 0c0a 	orr.w	ip, ip, sl
 800e43e:	f824 c000 	strh.w	ip, [r4, r0]
 800e442:	9813      	ldr	r0, [sp, #76]	; 0x4c
 800e444:	4401      	add	r1, r0
 800e446:	9814      	ldr	r0, [sp, #80]	; 0x50
 800e448:	3e01      	subs	r6, #1
 800e44a:	4402      	add	r2, r0
 800e44c:	e75b      	b.n	800e306 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9a>
 800e44e:	f06f 0501 	mvn.w	r5, #1
 800e452:	fb05 f706 	mul.w	r7, r5, r6
 800e456:	f2a5 75fe 	subw	r5, r5, #2046	; 0x7fe
 800e45a:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 800e45e:	0945      	lsrs	r5, r0, #5
 800e460:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 800e464:	ea4c 0505 	orr.w	r5, ip, r5
 800e468:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 800e46c:	4305      	orrs	r5, r0
 800e46e:	53e5      	strh	r5, [r4, r7]
 800e470:	e7e7      	b.n	800e442 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 800e472:	f04f 0e00 	mov.w	lr, #0
 800e476:	eba3 000e 	sub.w	r0, r3, lr
 800e47a:	2800      	cmp	r0, #0
 800e47c:	f77f af46 	ble.w	800e30c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xa0>
 800e480:	9e03      	ldr	r6, [sp, #12]
 800e482:	1410      	asrs	r0, r2, #16
 800e484:	140d      	asrs	r5, r1, #16
 800e486:	fb08 6000 	mla	r0, r8, r0, r6
 800e48a:	5d40      	ldrb	r0, [r0, r5]
 800e48c:	9d04      	ldr	r5, [sp, #16]
 800e48e:	f855 0020 	ldr.w	r0, [r5, r0, lsl #2]
 800e492:	0e06      	lsrs	r6, r0, #24
 800e494:	2eff      	cmp	r6, #255	; 0xff
 800e496:	d048      	beq.n	800e52a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2be>
 800e498:	b2f5      	uxtb	r5, r6
 800e49a:	2e00      	cmp	r6, #0
 800e49c:	d03e      	beq.n	800e51c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2b0>
 800e49e:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 800e4a2:	fa1f f985 	uxth.w	r9, r5
 800e4a6:	ea4f 272c 	mov.w	r7, ip, asr #8
 800e4aa:	f3c0 4607 	ubfx	r6, r0, #16, #8
 800e4ae:	43ed      	mvns	r5, r5
 800e4b0:	b2ed      	uxtb	r5, r5
 800e4b2:	fb16 f609 	smulbb	r6, r6, r9
 800e4b6:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 800e4ba:	fb07 6705 	mla	r7, r7, r5, r6
 800e4be:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 800e4c2:	ea4f 06ec 	mov.w	r6, ip, asr #3
 800e4c6:	b2c0      	uxtb	r0, r0
 800e4c8:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 800e4cc:	fa5f fc8c 	uxtb.w	ip, ip
 800e4d0:	fb10 f009 	smulbb	r0, r0, r9
 800e4d4:	fb0c 0005 	mla	r0, ip, r5, r0
 800e4d8:	b2bf      	uxth	r7, r7
 800e4da:	fb1a fa09 	smulbb	sl, sl, r9
 800e4de:	b280      	uxth	r0, r0
 800e4e0:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 800e4e4:	fb06 a605 	mla	r6, r6, r5, sl
 800e4e8:	1c7d      	adds	r5, r7, #1
 800e4ea:	f100 0a01 	add.w	sl, r0, #1
 800e4ee:	eb05 2717 	add.w	r7, r5, r7, lsr #8
 800e4f2:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 800e4f6:	b2b6      	uxth	r6, r6
 800e4f8:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 800e4fc:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 800e500:	ea47 070a 	orr.w	r7, r7, sl
 800e504:	f106 0a01 	add.w	sl, r6, #1
 800e508:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 800e50c:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 800e510:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 800e514:	ea47 070a 	orr.w	r7, r7, sl
 800e518:	f824 701e 	strh.w	r7, [r4, lr, lsl #1]
 800e51c:	9813      	ldr	r0, [sp, #76]	; 0x4c
 800e51e:	4401      	add	r1, r0
 800e520:	9814      	ldr	r0, [sp, #80]	; 0x50
 800e522:	f10e 0e01 	add.w	lr, lr, #1
 800e526:	4402      	add	r2, r0
 800e528:	e7a5      	b.n	800e476 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x20a>
 800e52a:	4d08      	ldr	r5, [pc, #32]	; (800e54c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2e0>)
 800e52c:	ea05 2610 	and.w	r6, r5, r0, lsr #8
 800e530:	0945      	lsrs	r5, r0, #5
 800e532:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 800e536:	4335      	orrs	r5, r6
 800e538:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 800e53c:	4305      	orrs	r5, r0
 800e53e:	f824 501e 	strh.w	r5, [r4, lr, lsl #1]
 800e542:	e7eb      	b.n	800e51c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2b0>
 800e544:	b007      	add	sp, #28
 800e546:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800e54a:	bf00      	nop
 800e54c:	fffff800 	.word	0xfffff800

0800e550 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 800e550:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e554:	b087      	sub	sp, #28
 800e556:	468b      	mov	fp, r1
 800e558:	9204      	str	r2, [sp, #16]
 800e55a:	f9bd 2064 	ldrsh.w	r2, [sp, #100]	; 0x64
 800e55e:	9d15      	ldr	r5, [sp, #84]	; 0x54
 800e560:	9201      	str	r2, [sp, #4]
 800e562:	f89d 206c 	ldrb.w	r2, [sp, #108]	; 0x6c
 800e566:	9205      	str	r2, [sp, #20]
 800e568:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 800e56c:	6869      	ldr	r1, [r5, #4]
 800e56e:	981a      	ldr	r0, [sp, #104]	; 0x68
 800e570:	f9bd 8060 	ldrsh.w	r8, [sp, #96]	; 0x60
 800e574:	fb01 2404 	mla	r4, r1, r4, r2
 800e578:	682a      	ldr	r2, [r5, #0]
 800e57a:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 800e57e:	6802      	ldr	r2, [r0, #0]
 800e580:	9202      	str	r2, [sp, #8]
 800e582:	6842      	ldr	r2, [r0, #4]
 800e584:	9203      	str	r2, [sp, #12]
 800e586:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 800e58a:	f1bb 0f00 	cmp.w	fp, #0
 800e58e:	dc03      	bgt.n	800e598 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x48>
 800e590:	9a04      	ldr	r2, [sp, #16]
 800e592:	2a00      	cmp	r2, #0
 800e594:	f340 8136 	ble.w	800e804 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2b4>
 800e598:	9a11      	ldr	r2, [sp, #68]	; 0x44
 800e59a:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 800e59e:	9a12      	ldr	r2, [sp, #72]	; 0x48
 800e5a0:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 800e5a4:	2b00      	cmp	r3, #0
 800e5a6:	dd0f      	ble.n	800e5c8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x78>
 800e5a8:	1408      	asrs	r0, r1, #16
 800e5aa:	d406      	bmi.n	800e5ba <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6a>
 800e5ac:	4540      	cmp	r0, r8
 800e5ae:	da04      	bge.n	800e5ba <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6a>
 800e5b0:	1410      	asrs	r0, r2, #16
 800e5b2:	d402      	bmi.n	800e5ba <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6a>
 800e5b4:	9d01      	ldr	r5, [sp, #4]
 800e5b6:	42a8      	cmp	r0, r5
 800e5b8:	db07      	blt.n	800e5ca <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7a>
 800e5ba:	9813      	ldr	r0, [sp, #76]	; 0x4c
 800e5bc:	4401      	add	r1, r0
 800e5be:	9814      	ldr	r0, [sp, #80]	; 0x50
 800e5c0:	3b01      	subs	r3, #1
 800e5c2:	4402      	add	r2, r0
 800e5c4:	3402      	adds	r4, #2
 800e5c6:	e7ed      	b.n	800e5a4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x54>
 800e5c8:	d00f      	beq.n	800e5ea <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9a>
 800e5ca:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 800e5cc:	1e58      	subs	r0, r3, #1
 800e5ce:	fb05 1500 	mla	r5, r5, r0, r1
 800e5d2:	142d      	asrs	r5, r5, #16
 800e5d4:	d544      	bpl.n	800e660 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x110>
 800e5d6:	9300      	str	r3, [sp, #0]
 800e5d8:	46a2      	mov	sl, r4
 800e5da:	9800      	ldr	r0, [sp, #0]
 800e5dc:	2800      	cmp	r0, #0
 800e5de:	f300 80ab 	bgt.w	800e738 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1e8>
 800e5e2:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 800e5e6:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 800e5ea:	f1bb 0f00 	cmp.w	fp, #0
 800e5ee:	f340 8109 	ble.w	800e804 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2b4>
 800e5f2:	ee30 0a04 	vadd.f32	s0, s0, s8
 800e5f6:	ee70 0aa4 	vadd.f32	s1, s1, s9
 800e5fa:	eec6 7a80 	vdiv.f32	s15, s13, s0
 800e5fe:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800e600:	f1bb 0b01 	subs.w	fp, fp, #1
 800e604:	ee31 1a05 	vadd.f32	s2, s2, s10
 800e608:	ee20 7aa7 	vmul.f32	s14, s1, s15
 800e60c:	eeb0 6a62 	vmov.f32	s12, s5
 800e610:	ee61 7a27 	vmul.f32	s15, s2, s15
 800e614:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 800e618:	ee77 2a62 	vsub.f32	s5, s14, s5
 800e61c:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 800e620:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 800e624:	eeb0 6a43 	vmov.f32	s12, s6
 800e628:	ee37 3ac3 	vsub.f32	s6, s15, s6
 800e62c:	ee12 2a90 	vmov	r2, s5
 800e630:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 800e634:	fb92 f3f3 	sdiv	r3, r2, r3
 800e638:	ee13 2a10 	vmov	r2, s6
 800e63c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 800e640:	9313      	str	r3, [sp, #76]	; 0x4c
 800e642:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800e644:	fb92 f3f3 	sdiv	r3, r2, r3
 800e648:	9a04      	ldr	r2, [sp, #16]
 800e64a:	9314      	str	r3, [sp, #80]	; 0x50
 800e64c:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 800e650:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800e652:	eeb0 3a67 	vmov.f32	s6, s15
 800e656:	bf08      	it	eq
 800e658:	4613      	moveq	r3, r2
 800e65a:	eef0 2a47 	vmov.f32	s5, s14
 800e65e:	e794      	b.n	800e58a <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3a>
 800e660:	4545      	cmp	r5, r8
 800e662:	dab8      	bge.n	800e5d6 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x86>
 800e664:	9d14      	ldr	r5, [sp, #80]	; 0x50
 800e666:	fb05 2000 	mla	r0, r5, r0, r2
 800e66a:	1400      	asrs	r0, r0, #16
 800e66c:	d4b3      	bmi.n	800e5d6 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x86>
 800e66e:	9d01      	ldr	r5, [sp, #4]
 800e670:	42a8      	cmp	r0, r5
 800e672:	dab0      	bge.n	800e5d6 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x86>
 800e674:	f04f 0900 	mov.w	r9, #0
 800e678:	eba3 0009 	sub.w	r0, r3, r9
 800e67c:	2800      	cmp	r0, #0
 800e67e:	ddb0      	ble.n	800e5e2 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x92>
 800e680:	140d      	asrs	r5, r1, #16
 800e682:	1410      	asrs	r0, r2, #16
 800e684:	fb08 5000 	mla	r0, r8, r0, r5
 800e688:	9d03      	ldr	r5, [sp, #12]
 800e68a:	5c2e      	ldrb	r6, [r5, r0]
 800e68c:	2e00      	cmp	r6, #0
 800e68e:	d04c      	beq.n	800e72a <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1da>
 800e690:	9d02      	ldr	r5, [sp, #8]
 800e692:	f835 e010 	ldrh.w	lr, [r5, r0, lsl #1]
 800e696:	9805      	ldr	r0, [sp, #20]
 800e698:	f834 5019 	ldrh.w	r5, [r4, r9, lsl #1]
 800e69c:	4346      	muls	r6, r0
 800e69e:	1c70      	adds	r0, r6, #1
 800e6a0:	eb00 2016 	add.w	r0, r0, r6, lsr #8
 800e6a4:	1200      	asrs	r0, r0, #8
 800e6a6:	b287      	uxth	r7, r0
 800e6a8:	122e      	asrs	r6, r5, #8
 800e6aa:	43c0      	mvns	r0, r0
 800e6ac:	b2c0      	uxtb	r0, r0
 800e6ae:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 800e6b2:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 800e6b6:	fb16 f600 	smulbb	r6, r6, r0
 800e6ba:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 800e6be:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 800e6c2:	00ed      	lsls	r5, r5, #3
 800e6c4:	fb0c 6c07 	mla	ip, ip, r7, r6
 800e6c8:	b2ed      	uxtb	r5, r5
 800e6ca:	ea4f 06ee 	mov.w	r6, lr, asr #3
 800e6ce:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 800e6d2:	fb15 f500 	smulbb	r5, r5, r0
 800e6d6:	fa5f fe8e 	uxtb.w	lr, lr
 800e6da:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 800e6de:	fb0e 5507 	mla	r5, lr, r7, r5
 800e6e2:	fb1a fa00 	smulbb	sl, sl, r0
 800e6e6:	fa1f fc8c 	uxth.w	ip, ip
 800e6ea:	b2ad      	uxth	r5, r5
 800e6ec:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 800e6f0:	fb06 a607 	mla	r6, r6, r7, sl
 800e6f4:	f10c 0001 	add.w	r0, ip, #1
 800e6f8:	f105 0a01 	add.w	sl, r5, #1
 800e6fc:	eb00 2c1c 	add.w	ip, r0, ip, lsr #8
 800e700:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 800e704:	b2b6      	uxth	r6, r6
 800e706:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 800e70a:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 800e70e:	ea4c 0c0a 	orr.w	ip, ip, sl
 800e712:	f106 0a01 	add.w	sl, r6, #1
 800e716:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 800e71a:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 800e71e:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 800e722:	ea4c 0c0a 	orr.w	ip, ip, sl
 800e726:	f824 c019 	strh.w	ip, [r4, r9, lsl #1]
 800e72a:	9813      	ldr	r0, [sp, #76]	; 0x4c
 800e72c:	4401      	add	r1, r0
 800e72e:	9814      	ldr	r0, [sp, #80]	; 0x50
 800e730:	f109 0901 	add.w	r9, r9, #1
 800e734:	4402      	add	r2, r0
 800e736:	e79f      	b.n	800e678 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x128>
 800e738:	1408      	asrs	r0, r1, #16
 800e73a:	d459      	bmi.n	800e7f0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2a0>
 800e73c:	4540      	cmp	r0, r8
 800e73e:	da57      	bge.n	800e7f0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2a0>
 800e740:	1415      	asrs	r5, r2, #16
 800e742:	d455      	bmi.n	800e7f0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2a0>
 800e744:	9e01      	ldr	r6, [sp, #4]
 800e746:	42b5      	cmp	r5, r6
 800e748:	da52      	bge.n	800e7f0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2a0>
 800e74a:	fb08 0005 	mla	r0, r8, r5, r0
 800e74e:	9d03      	ldr	r5, [sp, #12]
 800e750:	5c2e      	ldrb	r6, [r5, r0]
 800e752:	2e00      	cmp	r6, #0
 800e754:	d04c      	beq.n	800e7f0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2a0>
 800e756:	9d02      	ldr	r5, [sp, #8]
 800e758:	f835 e010 	ldrh.w	lr, [r5, r0, lsl #1]
 800e75c:	9805      	ldr	r0, [sp, #20]
 800e75e:	f8ba 5000 	ldrh.w	r5, [sl]
 800e762:	4346      	muls	r6, r0
 800e764:	1c70      	adds	r0, r6, #1
 800e766:	eb00 2016 	add.w	r0, r0, r6, lsr #8
 800e76a:	1200      	asrs	r0, r0, #8
 800e76c:	b287      	uxth	r7, r0
 800e76e:	122e      	asrs	r6, r5, #8
 800e770:	43c0      	mvns	r0, r0
 800e772:	b2c0      	uxtb	r0, r0
 800e774:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 800e778:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 800e77c:	fb16 f600 	smulbb	r6, r6, r0
 800e780:	ea4f 09e5 	mov.w	r9, r5, asr #3
 800e784:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 800e788:	00ed      	lsls	r5, r5, #3
 800e78a:	fb0c 6c07 	mla	ip, ip, r7, r6
 800e78e:	b2ed      	uxtb	r5, r5
 800e790:	ea4f 06ee 	mov.w	r6, lr, asr #3
 800e794:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 800e798:	fb15 f500 	smulbb	r5, r5, r0
 800e79c:	fa5f fe8e 	uxtb.w	lr, lr
 800e7a0:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 800e7a4:	fb0e 5507 	mla	r5, lr, r7, r5
 800e7a8:	fb19 f900 	smulbb	r9, r9, r0
 800e7ac:	fa1f fc8c 	uxth.w	ip, ip
 800e7b0:	b2ad      	uxth	r5, r5
 800e7b2:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 800e7b6:	fb06 9607 	mla	r6, r6, r7, r9
 800e7ba:	f10c 0001 	add.w	r0, ip, #1
 800e7be:	f105 0901 	add.w	r9, r5, #1
 800e7c2:	eb00 2c1c 	add.w	ip, r0, ip, lsr #8
 800e7c6:	eb09 2915 	add.w	r9, r9, r5, lsr #8
 800e7ca:	b2b6      	uxth	r6, r6
 800e7cc:	f3c9 29c4 	ubfx	r9, r9, #11, #5
 800e7d0:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 800e7d4:	ea4c 0c09 	orr.w	ip, ip, r9
 800e7d8:	f106 0901 	add.w	r9, r6, #1
 800e7dc:	eb09 2916 	add.w	r9, r9, r6, lsr #8
 800e7e0:	ea4f 1959 	mov.w	r9, r9, lsr #5
 800e7e4:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 800e7e8:	ea4c 0c09 	orr.w	ip, ip, r9
 800e7ec:	f8aa c000 	strh.w	ip, [sl]
 800e7f0:	9813      	ldr	r0, [sp, #76]	; 0x4c
 800e7f2:	4401      	add	r1, r0
 800e7f4:	9814      	ldr	r0, [sp, #80]	; 0x50
 800e7f6:	4402      	add	r2, r0
 800e7f8:	9800      	ldr	r0, [sp, #0]
 800e7fa:	3801      	subs	r0, #1
 800e7fc:	f10a 0a02 	add.w	sl, sl, #2
 800e800:	9000      	str	r0, [sp, #0]
 800e802:	e6ea      	b.n	800e5da <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x8a>
 800e804:	b007      	add	sp, #28
 800e806:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800e80a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 800e80a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e80e:	b087      	sub	sp, #28
 800e810:	468b      	mov	fp, r1
 800e812:	9d15      	ldr	r5, [sp, #84]	; 0x54
 800e814:	9205      	str	r2, [sp, #20]
 800e816:	f9bd 2064 	ldrsh.w	r2, [sp, #100]	; 0x64
 800e81a:	9202      	str	r2, [sp, #8]
 800e81c:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
 800e820:	6869      	ldr	r1, [r5, #4]
 800e822:	9c1a      	ldr	r4, [sp, #104]	; 0x68
 800e824:	f9bd 9060 	ldrsh.w	r9, [sp, #96]	; 0x60
 800e828:	fb01 2000 	mla	r0, r1, r0, r2
 800e82c:	682a      	ldr	r2, [r5, #0]
 800e82e:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 800e832:	6822      	ldr	r2, [r4, #0]
 800e834:	9201      	str	r2, [sp, #4]
 800e836:	6862      	ldr	r2, [r4, #4]
 800e838:	9204      	str	r2, [sp, #16]
 800e83a:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 800e83e:	f1bb 0f00 	cmp.w	fp, #0
 800e842:	dc03      	bgt.n	800e84c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x42>
 800e844:	9a05      	ldr	r2, [sp, #20]
 800e846:	2a00      	cmp	r2, #0
 800e848:	f340 813d 	ble.w	800eac6 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2bc>
 800e84c:	9a11      	ldr	r2, [sp, #68]	; 0x44
 800e84e:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 800e852:	9a12      	ldr	r2, [sp, #72]	; 0x48
 800e854:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 800e858:	2b00      	cmp	r3, #0
 800e85a:	dd0f      	ble.n	800e87c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x72>
 800e85c:	140c      	asrs	r4, r1, #16
 800e85e:	d406      	bmi.n	800e86e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x64>
 800e860:	454c      	cmp	r4, r9
 800e862:	da04      	bge.n	800e86e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x64>
 800e864:	1414      	asrs	r4, r2, #16
 800e866:	d402      	bmi.n	800e86e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x64>
 800e868:	9d02      	ldr	r5, [sp, #8]
 800e86a:	42ac      	cmp	r4, r5
 800e86c:	db07      	blt.n	800e87e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x74>
 800e86e:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 800e870:	4421      	add	r1, r4
 800e872:	9c14      	ldr	r4, [sp, #80]	; 0x50
 800e874:	3b01      	subs	r3, #1
 800e876:	4422      	add	r2, r4
 800e878:	3002      	adds	r0, #2
 800e87a:	e7ed      	b.n	800e858 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4e>
 800e87c:	d018      	beq.n	800e8b0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xa6>
 800e87e:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 800e880:	1e5c      	subs	r4, r3, #1
 800e882:	fb05 1504 	mla	r5, r5, r4, r1
 800e886:	142d      	asrs	r5, r5, #16
 800e888:	d40a      	bmi.n	800e8a0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x96>
 800e88a:	454d      	cmp	r5, r9
 800e88c:	da08      	bge.n	800e8a0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x96>
 800e88e:	9d14      	ldr	r5, [sp, #80]	; 0x50
 800e890:	fb05 2404 	mla	r4, r5, r4, r2
 800e894:	1424      	asrs	r4, r4, #16
 800e896:	d403      	bmi.n	800e8a0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x96>
 800e898:	9d02      	ldr	r5, [sp, #8]
 800e89a:	42ac      	cmp	r4, r5
 800e89c:	f2c0 80ae 	blt.w	800e9fc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1f2>
 800e8a0:	2600      	movs	r6, #0
 800e8a2:	199c      	adds	r4, r3, r6
 800e8a4:	2c00      	cmp	r4, #0
 800e8a6:	dc3e      	bgt.n	800e926 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x11c>
 800e8a8:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 800e8ac:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 800e8b0:	f1bb 0f00 	cmp.w	fp, #0
 800e8b4:	f340 8107 	ble.w	800eac6 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2bc>
 800e8b8:	ee30 0a04 	vadd.f32	s0, s0, s8
 800e8bc:	ee70 0aa4 	vadd.f32	s1, s1, s9
 800e8c0:	eec6 7a80 	vdiv.f32	s15, s13, s0
 800e8c4:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800e8c6:	f1bb 0b01 	subs.w	fp, fp, #1
 800e8ca:	ee31 1a05 	vadd.f32	s2, s2, s10
 800e8ce:	ee20 7aa7 	vmul.f32	s14, s1, s15
 800e8d2:	eeb0 6a62 	vmov.f32	s12, s5
 800e8d6:	ee61 7a27 	vmul.f32	s15, s2, s15
 800e8da:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 800e8de:	ee77 2a62 	vsub.f32	s5, s14, s5
 800e8e2:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 800e8e6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 800e8ea:	eeb0 6a43 	vmov.f32	s12, s6
 800e8ee:	ee37 3ac3 	vsub.f32	s6, s15, s6
 800e8f2:	ee12 2a90 	vmov	r2, s5
 800e8f6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 800e8fa:	fb92 f3f3 	sdiv	r3, r2, r3
 800e8fe:	ee13 2a10 	vmov	r2, s6
 800e902:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 800e906:	9313      	str	r3, [sp, #76]	; 0x4c
 800e908:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800e90a:	fb92 f3f3 	sdiv	r3, r2, r3
 800e90e:	9a05      	ldr	r2, [sp, #20]
 800e910:	9314      	str	r3, [sp, #80]	; 0x50
 800e912:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 800e916:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800e918:	eeb0 3a67 	vmov.f32	s6, s15
 800e91c:	bf08      	it	eq
 800e91e:	4613      	moveq	r3, r2
 800e920:	eef0 2a47 	vmov.f32	s5, s14
 800e924:	e78b      	b.n	800e83e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x34>
 800e926:	140c      	asrs	r4, r1, #16
 800e928:	d45a      	bmi.n	800e9e0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 800e92a:	454c      	cmp	r4, r9
 800e92c:	da58      	bge.n	800e9e0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 800e92e:	1415      	asrs	r5, r2, #16
 800e930:	d456      	bmi.n	800e9e0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 800e932:	9f02      	ldr	r7, [sp, #8]
 800e934:	42bd      	cmp	r5, r7
 800e936:	da53      	bge.n	800e9e0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 800e938:	fb09 4505 	mla	r5, r9, r5, r4
 800e93c:	9c04      	ldr	r4, [sp, #16]
 800e93e:	5d64      	ldrb	r4, [r4, r5]
 800e940:	2cff      	cmp	r4, #255	; 0xff
 800e942:	d053      	beq.n	800e9ec <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1e2>
 800e944:	2c00      	cmp	r4, #0
 800e946:	d04b      	beq.n	800e9e0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 800e948:	9f01      	ldr	r7, [sp, #4]
 800e94a:	f837 8015 	ldrh.w	r8, [r7, r5, lsl #1]
 800e94e:	f06f 0501 	mvn.w	r5, #1
 800e952:	4375      	muls	r5, r6
 800e954:	9503      	str	r5, [sp, #12]
 800e956:	5b45      	ldrh	r5, [r0, r5]
 800e958:	fa1f fc84 	uxth.w	ip, r4
 800e95c:	122f      	asrs	r7, r5, #8
 800e95e:	43e4      	mvns	r4, r4
 800e960:	b2e4      	uxtb	r4, r4
 800e962:	ea4f 2e28 	mov.w	lr, r8, asr #8
 800e966:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 800e96a:	fb17 f704 	smulbb	r7, r7, r4
 800e96e:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 800e972:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 800e976:	00ed      	lsls	r5, r5, #3
 800e978:	fb0e 7e0c 	mla	lr, lr, ip, r7
 800e97c:	b2ed      	uxtb	r5, r5
 800e97e:	ea4f 07e8 	mov.w	r7, r8, asr #3
 800e982:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 800e986:	fb15 f504 	smulbb	r5, r5, r4
 800e98a:	fa5f f888 	uxtb.w	r8, r8
 800e98e:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 800e992:	fb08 550c 	mla	r5, r8, ip, r5
 800e996:	fb1a fa04 	smulbb	sl, sl, r4
 800e99a:	fa1f fe8e 	uxth.w	lr, lr
 800e99e:	b2ad      	uxth	r5, r5
 800e9a0:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 800e9a4:	fb07 a70c 	mla	r7, r7, ip, sl
 800e9a8:	f10e 0401 	add.w	r4, lr, #1
 800e9ac:	f105 0a01 	add.w	sl, r5, #1
 800e9b0:	eb04 2e1e 	add.w	lr, r4, lr, lsr #8
 800e9b4:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 800e9b8:	b2bf      	uxth	r7, r7
 800e9ba:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 800e9be:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 800e9c2:	ea4e 0e0a 	orr.w	lr, lr, sl
 800e9c6:	f107 0a01 	add.w	sl, r7, #1
 800e9ca:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 800e9ce:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 800e9d2:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 800e9d6:	9c03      	ldr	r4, [sp, #12]
 800e9d8:	ea4e 0e0a 	orr.w	lr, lr, sl
 800e9dc:	f820 e004 	strh.w	lr, [r0, r4]
 800e9e0:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 800e9e2:	4421      	add	r1, r4
 800e9e4:	9c14      	ldr	r4, [sp, #80]	; 0x50
 800e9e6:	3e01      	subs	r6, #1
 800e9e8:	4422      	add	r2, r4
 800e9ea:	e75a      	b.n	800e8a2 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x98>
 800e9ec:	9c01      	ldr	r4, [sp, #4]
 800e9ee:	f834 5015 	ldrh.w	r5, [r4, r5, lsl #1]
 800e9f2:	f06f 0401 	mvn.w	r4, #1
 800e9f6:	4374      	muls	r4, r6
 800e9f8:	5305      	strh	r5, [r0, r4]
 800e9fa:	e7f1      	b.n	800e9e0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 800e9fc:	f04f 0800 	mov.w	r8, #0
 800ea00:	eba3 0408 	sub.w	r4, r3, r8
 800ea04:	2c00      	cmp	r4, #0
 800ea06:	f77f af4f 	ble.w	800e8a8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9e>
 800ea0a:	140c      	asrs	r4, r1, #16
 800ea0c:	1415      	asrs	r5, r2, #16
 800ea0e:	fb09 4505 	mla	r5, r9, r5, r4
 800ea12:	9c04      	ldr	r4, [sp, #16]
 800ea14:	5d64      	ldrb	r4, [r4, r5]
 800ea16:	2cff      	cmp	r4, #255	; 0xff
 800ea18:	d04f      	beq.n	800eaba <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2b0>
 800ea1a:	2c00      	cmp	r4, #0
 800ea1c:	d046      	beq.n	800eaac <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2a2>
 800ea1e:	9e01      	ldr	r6, [sp, #4]
 800ea20:	f836 e015 	ldrh.w	lr, [r6, r5, lsl #1]
 800ea24:	f830 5018 	ldrh.w	r5, [r0, r8, lsl #1]
 800ea28:	b2a7      	uxth	r7, r4
 800ea2a:	122e      	asrs	r6, r5, #8
 800ea2c:	43e4      	mvns	r4, r4
 800ea2e:	b2e4      	uxtb	r4, r4
 800ea30:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 800ea34:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 800ea38:	fb16 f604 	smulbb	r6, r6, r4
 800ea3c:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 800ea40:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 800ea44:	00ed      	lsls	r5, r5, #3
 800ea46:	fb0c 6c07 	mla	ip, ip, r7, r6
 800ea4a:	b2ed      	uxtb	r5, r5
 800ea4c:	ea4f 06ee 	mov.w	r6, lr, asr #3
 800ea50:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 800ea54:	fb15 f504 	smulbb	r5, r5, r4
 800ea58:	fa5f fe8e 	uxtb.w	lr, lr
 800ea5c:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 800ea60:	fb0e 5507 	mla	r5, lr, r7, r5
 800ea64:	fb1a fa04 	smulbb	sl, sl, r4
 800ea68:	fa1f fc8c 	uxth.w	ip, ip
 800ea6c:	b2ad      	uxth	r5, r5
 800ea6e:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 800ea72:	fb06 a607 	mla	r6, r6, r7, sl
 800ea76:	f10c 0401 	add.w	r4, ip, #1
 800ea7a:	f105 0a01 	add.w	sl, r5, #1
 800ea7e:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 800ea82:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 800ea86:	b2b6      	uxth	r6, r6
 800ea88:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 800ea8c:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 800ea90:	ea4c 0c0a 	orr.w	ip, ip, sl
 800ea94:	f106 0a01 	add.w	sl, r6, #1
 800ea98:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 800ea9c:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 800eaa0:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 800eaa4:	ea4c 0c0a 	orr.w	ip, ip, sl
 800eaa8:	f820 c018 	strh.w	ip, [r0, r8, lsl #1]
 800eaac:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 800eaae:	4421      	add	r1, r4
 800eab0:	9c14      	ldr	r4, [sp, #80]	; 0x50
 800eab2:	f108 0801 	add.w	r8, r8, #1
 800eab6:	4422      	add	r2, r4
 800eab8:	e7a2      	b.n	800ea00 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1f6>
 800eaba:	9c01      	ldr	r4, [sp, #4]
 800eabc:	f834 4015 	ldrh.w	r4, [r4, r5, lsl #1]
 800eac0:	f820 4018 	strh.w	r4, [r0, r8, lsl #1]
 800eac4:	e7f2      	b.n	800eaac <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2a2>
 800eac6:	b007      	add	sp, #28
 800eac8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800eacc <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 800eacc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ead0:	b085      	sub	sp, #20
 800ead2:	9813      	ldr	r0, [sp, #76]	; 0x4c
 800ead4:	9203      	str	r2, [sp, #12]
 800ead6:	f9bd 205c 	ldrsh.w	r2, [sp, #92]	; 0x5c
 800eada:	9201      	str	r2, [sp, #4]
 800eadc:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 800eae0:	9100      	str	r1, [sp, #0]
 800eae2:	6841      	ldr	r1, [r0, #4]
 800eae4:	f89d 5064 	ldrb.w	r5, [sp, #100]	; 0x64
 800eae8:	f9bd 8058 	ldrsh.w	r8, [sp, #88]	; 0x58
 800eaec:	fb01 2404 	mla	r4, r1, r4, r2
 800eaf0:	6802      	ldr	r2, [r0, #0]
 800eaf2:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 800eaf6:	9a18      	ldr	r2, [sp, #96]	; 0x60
 800eaf8:	fa1f fe85 	uxth.w	lr, r5
 800eafc:	6812      	ldr	r2, [r2, #0]
 800eafe:	9202      	str	r2, [sp, #8]
 800eb00:	43ed      	mvns	r5, r5
 800eb02:	b2ed      	uxtb	r5, r5
 800eb04:	9a00      	ldr	r2, [sp, #0]
 800eb06:	2a00      	cmp	r2, #0
 800eb08:	dc03      	bgt.n	800eb12 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x46>
 800eb0a:	9a03      	ldr	r2, [sp, #12]
 800eb0c:	2a00      	cmp	r2, #0
 800eb0e:	f340 8117 	ble.w	800ed40 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x274>
 800eb12:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 800eb14:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 800eb18:	9a10      	ldr	r2, [sp, #64]	; 0x40
 800eb1a:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 800eb1e:	2b00      	cmp	r3, #0
 800eb20:	dd0f      	ble.n	800eb42 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x76>
 800eb22:	1408      	asrs	r0, r1, #16
 800eb24:	d406      	bmi.n	800eb34 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x68>
 800eb26:	4540      	cmp	r0, r8
 800eb28:	da04      	bge.n	800eb34 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x68>
 800eb2a:	1410      	asrs	r0, r2, #16
 800eb2c:	d402      	bmi.n	800eb34 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x68>
 800eb2e:	9e01      	ldr	r6, [sp, #4]
 800eb30:	42b0      	cmp	r0, r6
 800eb32:	db07      	blt.n	800eb44 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x78>
 800eb34:	9811      	ldr	r0, [sp, #68]	; 0x44
 800eb36:	4401      	add	r1, r0
 800eb38:	9812      	ldr	r0, [sp, #72]	; 0x48
 800eb3a:	3b01      	subs	r3, #1
 800eb3c:	4402      	add	r2, r0
 800eb3e:	3402      	adds	r4, #2
 800eb40:	e7ed      	b.n	800eb1e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x52>
 800eb42:	d069      	beq.n	800ec18 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x14c>
 800eb44:	9e11      	ldr	r6, [sp, #68]	; 0x44
 800eb46:	1e58      	subs	r0, r3, #1
 800eb48:	fb06 1600 	mla	r6, r6, r0, r1
 800eb4c:	1436      	asrs	r6, r6, #16
 800eb4e:	d459      	bmi.n	800ec04 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x138>
 800eb50:	4546      	cmp	r6, r8
 800eb52:	da57      	bge.n	800ec04 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x138>
 800eb54:	9e12      	ldr	r6, [sp, #72]	; 0x48
 800eb56:	fb06 2000 	mla	r0, r6, r0, r2
 800eb5a:	1400      	asrs	r0, r0, #16
 800eb5c:	d452      	bmi.n	800ec04 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x138>
 800eb5e:	9e01      	ldr	r6, [sp, #4]
 800eb60:	42b0      	cmp	r0, r6
 800eb62:	da4f      	bge.n	800ec04 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x138>
 800eb64:	469a      	mov	sl, r3
 800eb66:	46a3      	mov	fp, r4
 800eb68:	f1ba 0f00 	cmp.w	sl, #0
 800eb6c:	dd50      	ble.n	800ec10 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x144>
 800eb6e:	140e      	asrs	r6, r1, #16
 800eb70:	1410      	asrs	r0, r2, #16
 800eb72:	fb08 6000 	mla	r0, r8, r0, r6
 800eb76:	9e02      	ldr	r6, [sp, #8]
 800eb78:	f836 0010 	ldrh.w	r0, [r6, r0, lsl #1]
 800eb7c:	f8bb 6000 	ldrh.w	r6, [fp]
 800eb80:	1237      	asrs	r7, r6, #8
 800eb82:	ea4f 2c20 	mov.w	ip, r0, asr #8
 800eb86:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 800eb8a:	fb17 f705 	smulbb	r7, r7, r5
 800eb8e:	ea4f 09e6 	mov.w	r9, r6, asr #3
 800eb92:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 800eb96:	00f6      	lsls	r6, r6, #3
 800eb98:	fb0c 7c0e 	mla	ip, ip, lr, r7
 800eb9c:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 800eba0:	10c7      	asrs	r7, r0, #3
 800eba2:	b2f6      	uxtb	r6, r6
 800eba4:	00c0      	lsls	r0, r0, #3
 800eba6:	fb19 f905 	smulbb	r9, r9, r5
 800ebaa:	fb16 f605 	smulbb	r6, r6, r5
 800ebae:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 800ebb2:	b2c0      	uxtb	r0, r0
 800ebb4:	fa1f fc8c 	uxth.w	ip, ip
 800ebb8:	fb07 970e 	mla	r7, r7, lr, r9
 800ebbc:	fb00 600e 	mla	r0, r0, lr, r6
 800ebc0:	b280      	uxth	r0, r0
 800ebc2:	b2bf      	uxth	r7, r7
 800ebc4:	f10c 0601 	add.w	r6, ip, #1
 800ebc8:	eb06 2c1c 	add.w	ip, r6, ip, lsr #8
 800ebcc:	f107 0901 	add.w	r9, r7, #1
 800ebd0:	1c46      	adds	r6, r0, #1
 800ebd2:	eb06 2610 	add.w	r6, r6, r0, lsr #8
 800ebd6:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 800ebda:	9811      	ldr	r0, [sp, #68]	; 0x44
 800ebdc:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 800ebe0:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 800ebe4:	ea4f 1959 	mov.w	r9, r9, lsr #5
 800ebe8:	ea4c 0c06 	orr.w	ip, ip, r6
 800ebec:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 800ebf0:	4401      	add	r1, r0
 800ebf2:	9812      	ldr	r0, [sp, #72]	; 0x48
 800ebf4:	ea4c 0c09 	orr.w	ip, ip, r9
 800ebf8:	f82b cb02 	strh.w	ip, [fp], #2
 800ebfc:	4402      	add	r2, r0
 800ebfe:	f10a 3aff 	add.w	sl, sl, #4294967295
 800ec02:	e7b1      	b.n	800eb68 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9c>
 800ec04:	f04f 0900 	mov.w	r9, #0
 800ec08:	eb03 0009 	add.w	r0, r3, r9
 800ec0c:	2800      	cmp	r0, #0
 800ec0e:	dc41      	bgt.n	800ec94 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1c8>
 800ec10:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 800ec14:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 800ec18:	9b00      	ldr	r3, [sp, #0]
 800ec1a:	2b00      	cmp	r3, #0
 800ec1c:	f340 8090 	ble.w	800ed40 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x274>
 800ec20:	ee30 0a04 	vadd.f32	s0, s0, s8
 800ec24:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 800ec28:	eec7 7a00 	vdiv.f32	s15, s14, s0
 800ec2c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800ec2e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 800ec32:	ee31 1a05 	vadd.f32	s2, s2, s10
 800ec36:	ee20 7aa7 	vmul.f32	s14, s1, s15
 800ec3a:	eef0 6a62 	vmov.f32	s13, s5
 800ec3e:	ee61 7a27 	vmul.f32	s15, s2, s15
 800ec42:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 800ec46:	ee77 2a62 	vsub.f32	s5, s14, s5
 800ec4a:	edcd 6a0f 	vstr	s13, [sp, #60]	; 0x3c
 800ec4e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 800ec52:	eef0 6a43 	vmov.f32	s13, s6
 800ec56:	ee37 3ac3 	vsub.f32	s6, s15, s6
 800ec5a:	ee12 2a90 	vmov	r2, s5
 800ec5e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 800ec62:	fb92 f3f3 	sdiv	r3, r2, r3
 800ec66:	ee13 2a10 	vmov	r2, s6
 800ec6a:	9311      	str	r3, [sp, #68]	; 0x44
 800ec6c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800ec6e:	fb92 f3f3 	sdiv	r3, r2, r3
 800ec72:	9312      	str	r3, [sp, #72]	; 0x48
 800ec74:	9b00      	ldr	r3, [sp, #0]
 800ec76:	9a03      	ldr	r2, [sp, #12]
 800ec78:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 800ec7c:	3b01      	subs	r3, #1
 800ec7e:	9300      	str	r3, [sp, #0]
 800ec80:	edcd 6a10 	vstr	s13, [sp, #64]	; 0x40
 800ec84:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800ec86:	eeb0 3a67 	vmov.f32	s6, s15
 800ec8a:	bf08      	it	eq
 800ec8c:	4613      	moveq	r3, r2
 800ec8e:	eef0 2a47 	vmov.f32	s5, s14
 800ec92:	e737      	b.n	800eb04 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x38>
 800ec94:	140e      	asrs	r6, r1, #16
 800ec96:	d44c      	bmi.n	800ed32 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x266>
 800ec98:	4546      	cmp	r6, r8
 800ec9a:	da4a      	bge.n	800ed32 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x266>
 800ec9c:	1410      	asrs	r0, r2, #16
 800ec9e:	d448      	bmi.n	800ed32 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x266>
 800eca0:	9f01      	ldr	r7, [sp, #4]
 800eca2:	42b8      	cmp	r0, r7
 800eca4:	da45      	bge.n	800ed32 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x266>
 800eca6:	fb08 6000 	mla	r0, r8, r0, r6
 800ecaa:	9e02      	ldr	r6, [sp, #8]
 800ecac:	f836 0010 	ldrh.w	r0, [r6, r0, lsl #1]
 800ecb0:	f06f 0601 	mvn.w	r6, #1
 800ecb4:	fb06 fb09 	mul.w	fp, r6, r9
 800ecb8:	ea4f 2c20 	mov.w	ip, r0, asr #8
 800ecbc:	f834 600b 	ldrh.w	r6, [r4, fp]
 800ecc0:	1237      	asrs	r7, r6, #8
 800ecc2:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 800ecc6:	fb17 f705 	smulbb	r7, r7, r5
 800ecca:	ea4f 0ae6 	mov.w	sl, r6, asr #3
 800ecce:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 800ecd2:	00f6      	lsls	r6, r6, #3
 800ecd4:	fb0c 7c0e 	mla	ip, ip, lr, r7
 800ecd8:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 800ecdc:	10c7      	asrs	r7, r0, #3
 800ecde:	b2f6      	uxtb	r6, r6
 800ece0:	00c0      	lsls	r0, r0, #3
 800ece2:	fb1a fa05 	smulbb	sl, sl, r5
 800ece6:	fb16 f605 	smulbb	r6, r6, r5
 800ecea:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 800ecee:	b2c0      	uxtb	r0, r0
 800ecf0:	fa1f fc8c 	uxth.w	ip, ip
 800ecf4:	fb07 a70e 	mla	r7, r7, lr, sl
 800ecf8:	fb00 600e 	mla	r0, r0, lr, r6
 800ecfc:	b2bf      	uxth	r7, r7
 800ecfe:	b280      	uxth	r0, r0
 800ed00:	f10c 0601 	add.w	r6, ip, #1
 800ed04:	eb06 2c1c 	add.w	ip, r6, ip, lsr #8
 800ed08:	f107 0a01 	add.w	sl, r7, #1
 800ed0c:	1c46      	adds	r6, r0, #1
 800ed0e:	eb06 2610 	add.w	r6, r6, r0, lsr #8
 800ed12:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 800ed16:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 800ed1a:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 800ed1e:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 800ed22:	ea4c 0c06 	orr.w	ip, ip, r6
 800ed26:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 800ed2a:	ea4c 0c0a 	orr.w	ip, ip, sl
 800ed2e:	f824 c00b 	strh.w	ip, [r4, fp]
 800ed32:	9811      	ldr	r0, [sp, #68]	; 0x44
 800ed34:	4401      	add	r1, r0
 800ed36:	9812      	ldr	r0, [sp, #72]	; 0x48
 800ed38:	f109 39ff 	add.w	r9, r9, #4294967295
 800ed3c:	4402      	add	r2, r0
 800ed3e:	e763      	b.n	800ec08 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x13c>
 800ed40:	b005      	add	sp, #20
 800ed42:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800ed46 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 800ed46:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ed4a:	9811      	ldr	r0, [sp, #68]	; 0x44
 800ed4c:	9201      	str	r2, [sp, #4]
 800ed4e:	e9dd 2512 	ldrd	r2, r5, [sp, #72]	; 0x48
 800ed52:	6844      	ldr	r4, [r0, #4]
 800ed54:	6800      	ldr	r0, [r0, #0]
 800ed56:	f9bd c050 	ldrsh.w	ip, [sp, #80]	; 0x50
 800ed5a:	f9bd e054 	ldrsh.w	lr, [sp, #84]	; 0x54
 800ed5e:	fb04 2505 	mla	r5, r4, r5, r2
 800ed62:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 800ed66:	9816      	ldr	r0, [sp, #88]	; 0x58
 800ed68:	e9dd 760f 	ldrd	r7, r6, [sp, #60]	; 0x3c
 800ed6c:	6802      	ldr	r2, [r0, #0]
 800ed6e:	9200      	str	r2, [sp, #0]
 800ed70:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 800ed74:	2900      	cmp	r1, #0
 800ed76:	dc03      	bgt.n	800ed80 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3a>
 800ed78:	9a01      	ldr	r2, [sp, #4]
 800ed7a:	2a00      	cmp	r2, #0
 800ed7c:	f340 8095 	ble.w	800eeaa <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x164>
 800ed80:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 800ed82:	f502 4400 	add.w	r4, r2, #32768	; 0x8000
 800ed86:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 800ed88:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 800ed8c:	2b00      	cmp	r3, #0
 800ed8e:	dd0e      	ble.n	800edae <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x68>
 800ed90:	ea5f 4824 	movs.w	r8, r4, asr #16
 800ed94:	d406      	bmi.n	800eda4 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x5e>
 800ed96:	45e0      	cmp	r8, ip
 800ed98:	da04      	bge.n	800eda4 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x5e>
 800ed9a:	ea5f 4820 	movs.w	r8, r0, asr #16
 800ed9e:	d401      	bmi.n	800eda4 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x5e>
 800eda0:	45f0      	cmp	r8, lr
 800eda2:	db05      	blt.n	800edb0 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6a>
 800eda4:	443c      	add	r4, r7
 800eda6:	4430      	add	r0, r6
 800eda8:	3b01      	subs	r3, #1
 800edaa:	3502      	adds	r5, #2
 800edac:	e7ee      	b.n	800ed8c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x46>
 800edae:	d010      	beq.n	800edd2 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x8c>
 800edb0:	f103 38ff 	add.w	r8, r3, #4294967295
 800edb4:	fb07 4908 	mla	r9, r7, r8, r4
 800edb8:	ea5f 4929 	movs.w	r9, r9, asr #16
 800edbc:	d53d      	bpl.n	800ee3a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf4>
 800edbe:	4698      	mov	r8, r3
 800edc0:	eb05 0b43 	add.w	fp, r5, r3, lsl #1
 800edc4:	f1b8 0f00 	cmp.w	r8, #0
 800edc8:	dc55      	bgt.n	800ee76 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x130>
 800edca:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 800edce:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 800edd2:	2900      	cmp	r1, #0
 800edd4:	dd69      	ble.n	800eeaa <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x164>
 800edd6:	ee30 0a04 	vadd.f32	s0, s0, s8
 800edda:	ee70 0aa4 	vadd.f32	s1, s1, s9
 800edde:	eec6 7a80 	vdiv.f32	s15, s13, s0
 800ede2:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800ede4:	3901      	subs	r1, #1
 800ede6:	ee31 1a05 	vadd.f32	s2, s2, s10
 800edea:	ee20 7aa7 	vmul.f32	s14, s1, s15
 800edee:	eeb0 6a62 	vmov.f32	s12, s5
 800edf2:	ee61 7a27 	vmul.f32	s15, s2, s15
 800edf6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 800edfa:	ee77 2a62 	vsub.f32	s5, s14, s5
 800edfe:	ed8d 6a0d 	vstr	s12, [sp, #52]	; 0x34
 800ee02:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 800ee06:	eeb0 6a43 	vmov.f32	s12, s6
 800ee0a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 800ee0e:	ee12 2a90 	vmov	r2, s5
 800ee12:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 800ee16:	fb92 f7f3 	sdiv	r7, r2, r3
 800ee1a:	ee13 2a10 	vmov	r2, s6
 800ee1e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 800ee22:	fb92 f6f3 	sdiv	r6, r2, r3
 800ee26:	9a01      	ldr	r2, [sp, #4]
 800ee28:	ed8d 6a0e 	vstr	s12, [sp, #56]	; 0x38
 800ee2c:	bf08      	it	eq
 800ee2e:	4613      	moveq	r3, r2
 800ee30:	eeb0 3a67 	vmov.f32	s6, s15
 800ee34:	eef0 2a47 	vmov.f32	s5, s14
 800ee38:	e79c      	b.n	800ed74 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2e>
 800ee3a:	45e1      	cmp	r9, ip
 800ee3c:	dabf      	bge.n	800edbe <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x78>
 800ee3e:	fb06 0808 	mla	r8, r6, r8, r0
 800ee42:	ea5f 4828 	movs.w	r8, r8, asr #16
 800ee46:	d4ba      	bmi.n	800edbe <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x78>
 800ee48:	45f0      	cmp	r8, lr
 800ee4a:	dab8      	bge.n	800edbe <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x78>
 800ee4c:	4698      	mov	r8, r3
 800ee4e:	46aa      	mov	sl, r5
 800ee50:	f1b8 0f00 	cmp.w	r8, #0
 800ee54:	ddb9      	ble.n	800edca <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x84>
 800ee56:	ea4f 4920 	mov.w	r9, r0, asr #16
 800ee5a:	ea4f 4b24 	mov.w	fp, r4, asr #16
 800ee5e:	fb0c b909 	mla	r9, ip, r9, fp
 800ee62:	9a00      	ldr	r2, [sp, #0]
 800ee64:	f832 9019 	ldrh.w	r9, [r2, r9, lsl #1]
 800ee68:	f82a 9b02 	strh.w	r9, [sl], #2
 800ee6c:	443c      	add	r4, r7
 800ee6e:	4430      	add	r0, r6
 800ee70:	f108 38ff 	add.w	r8, r8, #4294967295
 800ee74:	e7ec      	b.n	800ee50 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x10a>
 800ee76:	ea5f 4a24 	movs.w	sl, r4, asr #16
 800ee7a:	d411      	bmi.n	800eea0 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x15a>
 800ee7c:	45e2      	cmp	sl, ip
 800ee7e:	da0f      	bge.n	800eea0 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x15a>
 800ee80:	ea5f 4920 	movs.w	r9, r0, asr #16
 800ee84:	d40c      	bmi.n	800eea0 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x15a>
 800ee86:	45f1      	cmp	r9, lr
 800ee88:	da0a      	bge.n	800eea0 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x15a>
 800ee8a:	fb0c a909 	mla	r9, ip, r9, sl
 800ee8e:	9a00      	ldr	r2, [sp, #0]
 800ee90:	f832 a019 	ldrh.w	sl, [r2, r9, lsl #1]
 800ee94:	f06f 0201 	mvn.w	r2, #1
 800ee98:	fb02 f908 	mul.w	r9, r2, r8
 800ee9c:	f82b a009 	strh.w	sl, [fp, r9]
 800eea0:	443c      	add	r4, r7
 800eea2:	4430      	add	r0, r6
 800eea4:	f108 38ff 	add.w	r8, r8, #4294967295
 800eea8:	e78c      	b.n	800edc4 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7e>
 800eeaa:	b003      	add	sp, #12
 800eeac:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800eeb0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 800eeb0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800eeb4:	b087      	sub	sp, #28
 800eeb6:	468b      	mov	fp, r1
 800eeb8:	9204      	str	r2, [sp, #16]
 800eeba:	f9bd 2064 	ldrsh.w	r2, [sp, #100]	; 0x64
 800eebe:	9815      	ldr	r0, [sp, #84]	; 0x54
 800eec0:	9201      	str	r2, [sp, #4]
 800eec2:	f89d 206c 	ldrb.w	r2, [sp, #108]	; 0x6c
 800eec6:	9205      	str	r2, [sp, #20]
 800eec8:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 800eecc:	6841      	ldr	r1, [r0, #4]
 800eece:	f9bd 8060 	ldrsh.w	r8, [sp, #96]	; 0x60
 800eed2:	fb01 2404 	mla	r4, r1, r4, r2
 800eed6:	6802      	ldr	r2, [r0, #0]
 800eed8:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 800eedc:	9a1a      	ldr	r2, [sp, #104]	; 0x68
 800eede:	6812      	ldr	r2, [r2, #0]
 800eee0:	9203      	str	r2, [sp, #12]
 800eee2:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 800eee6:	f1bb 0f00 	cmp.w	fp, #0
 800eeea:	dc03      	bgt.n	800eef4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x44>
 800eeec:	9a04      	ldr	r2, [sp, #16]
 800eeee:	2a00      	cmp	r2, #0
 800eef0:	f340 812c 	ble.w	800f14c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x29c>
 800eef4:	9a11      	ldr	r2, [sp, #68]	; 0x44
 800eef6:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 800eefa:	9a12      	ldr	r2, [sp, #72]	; 0x48
 800eefc:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 800ef00:	2b00      	cmp	r3, #0
 800ef02:	dd0f      	ble.n	800ef24 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x74>
 800ef04:	1402      	asrs	r2, r0, #16
 800ef06:	d406      	bmi.n	800ef16 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x66>
 800ef08:	4542      	cmp	r2, r8
 800ef0a:	da04      	bge.n	800ef16 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x66>
 800ef0c:	140a      	asrs	r2, r1, #16
 800ef0e:	d402      	bmi.n	800ef16 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x66>
 800ef10:	9d01      	ldr	r5, [sp, #4]
 800ef12:	42aa      	cmp	r2, r5
 800ef14:	db07      	blt.n	800ef26 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x76>
 800ef16:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 800ef18:	4410      	add	r0, r2
 800ef1a:	9a14      	ldr	r2, [sp, #80]	; 0x50
 800ef1c:	3b01      	subs	r3, #1
 800ef1e:	4411      	add	r1, r2
 800ef20:	3402      	adds	r4, #2
 800ef22:	e7ed      	b.n	800ef00 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x50>
 800ef24:	d01a      	beq.n	800ef5c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xac>
 800ef26:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 800ef28:	1e5a      	subs	r2, r3, #1
 800ef2a:	fb05 0502 	mla	r5, r5, r2, r0
 800ef2e:	142d      	asrs	r5, r5, #16
 800ef30:	d40a      	bmi.n	800ef48 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x98>
 800ef32:	4545      	cmp	r5, r8
 800ef34:	da08      	bge.n	800ef48 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x98>
 800ef36:	9d14      	ldr	r5, [sp, #80]	; 0x50
 800ef38:	fb05 1202 	mla	r2, r5, r2, r1
 800ef3c:	1412      	asrs	r2, r2, #16
 800ef3e:	d403      	bmi.n	800ef48 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x98>
 800ef40:	9d01      	ldr	r5, [sp, #4]
 800ef42:	42aa      	cmp	r2, r5
 800ef44:	f2c0 80a6 	blt.w	800f094 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1e4>
 800ef48:	f04f 0c00 	mov.w	ip, #0
 800ef4c:	eb03 020c 	add.w	r2, r3, ip
 800ef50:	2a00      	cmp	r2, #0
 800ef52:	dc3e      	bgt.n	800efd2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x122>
 800ef54:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 800ef58:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 800ef5c:	f1bb 0f00 	cmp.w	fp, #0
 800ef60:	f340 80f4 	ble.w	800f14c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x29c>
 800ef64:	ee30 0a04 	vadd.f32	s0, s0, s8
 800ef68:	ee70 0aa4 	vadd.f32	s1, s1, s9
 800ef6c:	eec6 7a80 	vdiv.f32	s15, s13, s0
 800ef70:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800ef72:	f1bb 0b01 	subs.w	fp, fp, #1
 800ef76:	ee31 1a05 	vadd.f32	s2, s2, s10
 800ef7a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 800ef7e:	eeb0 6a62 	vmov.f32	s12, s5
 800ef82:	ee61 7a27 	vmul.f32	s15, s2, s15
 800ef86:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 800ef8a:	ee77 2a62 	vsub.f32	s5, s14, s5
 800ef8e:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 800ef92:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 800ef96:	eeb0 6a43 	vmov.f32	s12, s6
 800ef9a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 800ef9e:	ee12 2a90 	vmov	r2, s5
 800efa2:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 800efa6:	fb92 f3f3 	sdiv	r3, r2, r3
 800efaa:	ee13 2a10 	vmov	r2, s6
 800efae:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 800efb2:	9313      	str	r3, [sp, #76]	; 0x4c
 800efb4:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800efb6:	fb92 f3f3 	sdiv	r3, r2, r3
 800efba:	9a04      	ldr	r2, [sp, #16]
 800efbc:	9314      	str	r3, [sp, #80]	; 0x50
 800efbe:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 800efc2:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800efc4:	eeb0 3a67 	vmov.f32	s6, s15
 800efc8:	bf08      	it	eq
 800efca:	4613      	moveq	r3, r2
 800efcc:	eef0 2a47 	vmov.f32	s5, s14
 800efd0:	e789      	b.n	800eee6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x36>
 800efd2:	1405      	asrs	r5, r0, #16
 800efd4:	d457      	bmi.n	800f086 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 800efd6:	4545      	cmp	r5, r8
 800efd8:	da55      	bge.n	800f086 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 800efda:	140a      	asrs	r2, r1, #16
 800efdc:	d453      	bmi.n	800f086 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 800efde:	9e01      	ldr	r6, [sp, #4]
 800efe0:	42b2      	cmp	r2, r6
 800efe2:	da50      	bge.n	800f086 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 800efe4:	fb08 5202 	mla	r2, r8, r2, r5
 800efe8:	9d03      	ldr	r5, [sp, #12]
 800efea:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 800efee:	0e2e      	lsrs	r6, r5, #24
 800eff0:	d049      	beq.n	800f086 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 800eff2:	f06f 0201 	mvn.w	r2, #1
 800eff6:	fb02 f20c 	mul.w	r2, r2, ip
 800effa:	9202      	str	r2, [sp, #8]
 800effc:	f834 e002 	ldrh.w	lr, [r4, r2]
 800f000:	9a05      	ldr	r2, [sp, #20]
 800f002:	4356      	muls	r6, r2
 800f004:	1c72      	adds	r2, r6, #1
 800f006:	eb02 2226 	add.w	r2, r2, r6, asr #8
 800f00a:	1212      	asrs	r2, r2, #8
 800f00c:	fa1f f982 	uxth.w	r9, r2
 800f010:	ea4f 272e 	mov.w	r7, lr, asr #8
 800f014:	f3c5 4607 	ubfx	r6, r5, #16, #8
 800f018:	43d2      	mvns	r2, r2
 800f01a:	b2d2      	uxtb	r2, r2
 800f01c:	fb16 f609 	smulbb	r6, r6, r9
 800f020:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 800f024:	fb07 6702 	mla	r7, r7, r2, r6
 800f028:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 800f02c:	ea4f 06ee 	mov.w	r6, lr, asr #3
 800f030:	b2ed      	uxtb	r5, r5
 800f032:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 800f036:	fa5f fe8e 	uxtb.w	lr, lr
 800f03a:	fb15 f509 	smulbb	r5, r5, r9
 800f03e:	fb0e 5502 	mla	r5, lr, r2, r5
 800f042:	b2bf      	uxth	r7, r7
 800f044:	fb1a fa09 	smulbb	sl, sl, r9
 800f048:	b2ad      	uxth	r5, r5
 800f04a:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 800f04e:	fb06 a602 	mla	r6, r6, r2, sl
 800f052:	1c7a      	adds	r2, r7, #1
 800f054:	f105 0a01 	add.w	sl, r5, #1
 800f058:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 800f05c:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 800f060:	b2b6      	uxth	r6, r6
 800f062:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 800f066:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 800f06a:	ea47 070a 	orr.w	r7, r7, sl
 800f06e:	f106 0a01 	add.w	sl, r6, #1
 800f072:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 800f076:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 800f07a:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 800f07e:	9a02      	ldr	r2, [sp, #8]
 800f080:	ea47 070a 	orr.w	r7, r7, sl
 800f084:	52a7      	strh	r7, [r4, r2]
 800f086:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 800f088:	4410      	add	r0, r2
 800f08a:	9a14      	ldr	r2, [sp, #80]	; 0x50
 800f08c:	f10c 3cff 	add.w	ip, ip, #4294967295
 800f090:	4411      	add	r1, r2
 800f092:	e75b      	b.n	800ef4c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9c>
 800f094:	f04f 0e00 	mov.w	lr, #0
 800f098:	eba3 020e 	sub.w	r2, r3, lr
 800f09c:	2a00      	cmp	r2, #0
 800f09e:	f77f af59 	ble.w	800ef54 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xa4>
 800f0a2:	1405      	asrs	r5, r0, #16
 800f0a4:	140a      	asrs	r2, r1, #16
 800f0a6:	fb08 5202 	mla	r2, r8, r2, r5
 800f0aa:	9d03      	ldr	r5, [sp, #12]
 800f0ac:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 800f0b0:	0e2e      	lsrs	r6, r5, #24
 800f0b2:	d044      	beq.n	800f13e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x28e>
 800f0b4:	9a05      	ldr	r2, [sp, #20]
 800f0b6:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 800f0ba:	4356      	muls	r6, r2
 800f0bc:	1c72      	adds	r2, r6, #1
 800f0be:	eb02 2226 	add.w	r2, r2, r6, asr #8
 800f0c2:	1212      	asrs	r2, r2, #8
 800f0c4:	fa1f f982 	uxth.w	r9, r2
 800f0c8:	ea4f 272c 	mov.w	r7, ip, asr #8
 800f0cc:	f3c5 4607 	ubfx	r6, r5, #16, #8
 800f0d0:	43d2      	mvns	r2, r2
 800f0d2:	b2d2      	uxtb	r2, r2
 800f0d4:	fb16 f609 	smulbb	r6, r6, r9
 800f0d8:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 800f0dc:	fb07 6702 	mla	r7, r7, r2, r6
 800f0e0:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 800f0e4:	ea4f 06ec 	mov.w	r6, ip, asr #3
 800f0e8:	b2ed      	uxtb	r5, r5
 800f0ea:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 800f0ee:	fa5f fc8c 	uxtb.w	ip, ip
 800f0f2:	fb15 f509 	smulbb	r5, r5, r9
 800f0f6:	fb0c 5502 	mla	r5, ip, r2, r5
 800f0fa:	b2bf      	uxth	r7, r7
 800f0fc:	fb1a fa09 	smulbb	sl, sl, r9
 800f100:	b2ad      	uxth	r5, r5
 800f102:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 800f106:	fb06 a602 	mla	r6, r6, r2, sl
 800f10a:	1c7a      	adds	r2, r7, #1
 800f10c:	f105 0a01 	add.w	sl, r5, #1
 800f110:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 800f114:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 800f118:	b2b6      	uxth	r6, r6
 800f11a:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 800f11e:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 800f122:	ea47 070a 	orr.w	r7, r7, sl
 800f126:	f106 0a01 	add.w	sl, r6, #1
 800f12a:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 800f12e:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 800f132:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 800f136:	ea47 070a 	orr.w	r7, r7, sl
 800f13a:	f824 701e 	strh.w	r7, [r4, lr, lsl #1]
 800f13e:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 800f140:	4410      	add	r0, r2
 800f142:	9a14      	ldr	r2, [sp, #80]	; 0x50
 800f144:	f10e 0e01 	add.w	lr, lr, #1
 800f148:	4411      	add	r1, r2
 800f14a:	e7a5      	b.n	800f098 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1e8>
 800f14c:	b007      	add	sp, #28
 800f14e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

0800f154 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 800f154:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f158:	b087      	sub	sp, #28
 800f15a:	468b      	mov	fp, r1
 800f15c:	9c15      	ldr	r4, [sp, #84]	; 0x54
 800f15e:	9205      	str	r2, [sp, #20]
 800f160:	f9bd 2064 	ldrsh.w	r2, [sp, #100]	; 0x64
 800f164:	9201      	str	r2, [sp, #4]
 800f166:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
 800f16a:	6861      	ldr	r1, [r4, #4]
 800f16c:	f9bd 9060 	ldrsh.w	r9, [sp, #96]	; 0x60
 800f170:	fb01 2000 	mla	r0, r1, r0, r2
 800f174:	6822      	ldr	r2, [r4, #0]
 800f176:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 800f17a:	9a1a      	ldr	r2, [sp, #104]	; 0x68
 800f17c:	6812      	ldr	r2, [r2, #0]
 800f17e:	9203      	str	r2, [sp, #12]
 800f180:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 800f184:	f1bb 0f00 	cmp.w	fp, #0
 800f188:	dc03      	bgt.n	800f192 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3e>
 800f18a:	9a05      	ldr	r2, [sp, #20]
 800f18c:	2a00      	cmp	r2, #0
 800f18e:	f340 814b 	ble.w	800f428 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2d4>
 800f192:	9a11      	ldr	r2, [sp, #68]	; 0x44
 800f194:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 800f198:	9a12      	ldr	r2, [sp, #72]	; 0x48
 800f19a:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 800f19e:	2b00      	cmp	r3, #0
 800f1a0:	dd0f      	ble.n	800f1c2 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6e>
 800f1a2:	140c      	asrs	r4, r1, #16
 800f1a4:	d406      	bmi.n	800f1b4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x60>
 800f1a6:	454c      	cmp	r4, r9
 800f1a8:	da04      	bge.n	800f1b4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x60>
 800f1aa:	1414      	asrs	r4, r2, #16
 800f1ac:	d402      	bmi.n	800f1b4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x60>
 800f1ae:	9d01      	ldr	r5, [sp, #4]
 800f1b0:	42ac      	cmp	r4, r5
 800f1b2:	db07      	blt.n	800f1c4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x70>
 800f1b4:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 800f1b6:	4421      	add	r1, r4
 800f1b8:	9c14      	ldr	r4, [sp, #80]	; 0x50
 800f1ba:	3b01      	subs	r3, #1
 800f1bc:	4422      	add	r2, r4
 800f1be:	3002      	adds	r0, #2
 800f1c0:	e7ed      	b.n	800f19e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4a>
 800f1c2:	d018      	beq.n	800f1f6 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xa2>
 800f1c4:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 800f1c6:	1e5c      	subs	r4, r3, #1
 800f1c8:	fb05 1504 	mla	r5, r5, r4, r1
 800f1cc:	142d      	asrs	r5, r5, #16
 800f1ce:	d40a      	bmi.n	800f1e6 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x92>
 800f1d0:	454d      	cmp	r5, r9
 800f1d2:	da08      	bge.n	800f1e6 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x92>
 800f1d4:	9d14      	ldr	r5, [sp, #80]	; 0x50
 800f1d6:	fb05 2404 	mla	r4, r5, r4, r2
 800f1da:	1424      	asrs	r4, r4, #16
 800f1dc:	d403      	bmi.n	800f1e6 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x92>
 800f1de:	9d01      	ldr	r5, [sp, #4]
 800f1e0:	42ac      	cmp	r4, r5
 800f1e2:	f2c0 80bb 	blt.w	800f35c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x208>
 800f1e6:	2700      	movs	r7, #0
 800f1e8:	19dc      	adds	r4, r3, r7
 800f1ea:	2c00      	cmp	r4, #0
 800f1ec:	dc3e      	bgt.n	800f26c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x118>
 800f1ee:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 800f1f2:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 800f1f6:	f1bb 0f00 	cmp.w	fp, #0
 800f1fa:	f340 8115 	ble.w	800f428 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2d4>
 800f1fe:	ee30 0a04 	vadd.f32	s0, s0, s8
 800f202:	ee70 0aa4 	vadd.f32	s1, s1, s9
 800f206:	eec6 7a80 	vdiv.f32	s15, s13, s0
 800f20a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800f20c:	f1bb 0b01 	subs.w	fp, fp, #1
 800f210:	ee31 1a05 	vadd.f32	s2, s2, s10
 800f214:	ee20 7aa7 	vmul.f32	s14, s1, s15
 800f218:	eeb0 6a62 	vmov.f32	s12, s5
 800f21c:	ee61 7a27 	vmul.f32	s15, s2, s15
 800f220:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 800f224:	ee77 2a62 	vsub.f32	s5, s14, s5
 800f228:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 800f22c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 800f230:	eeb0 6a43 	vmov.f32	s12, s6
 800f234:	ee37 3ac3 	vsub.f32	s6, s15, s6
 800f238:	ee12 2a90 	vmov	r2, s5
 800f23c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 800f240:	fb92 f3f3 	sdiv	r3, r2, r3
 800f244:	ee13 2a10 	vmov	r2, s6
 800f248:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 800f24c:	9313      	str	r3, [sp, #76]	; 0x4c
 800f24e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800f250:	fb92 f3f3 	sdiv	r3, r2, r3
 800f254:	9a05      	ldr	r2, [sp, #20]
 800f256:	9314      	str	r3, [sp, #80]	; 0x50
 800f258:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 800f25c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800f25e:	eeb0 3a67 	vmov.f32	s6, s15
 800f262:	bf08      	it	eq
 800f264:	4613      	moveq	r3, r2
 800f266:	eef0 2a47 	vmov.f32	s5, s14
 800f26a:	e78b      	b.n	800f184 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x30>
 800f26c:	140d      	asrs	r5, r1, #16
 800f26e:	d45c      	bmi.n	800f32a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 800f270:	454d      	cmp	r5, r9
 800f272:	da5a      	bge.n	800f32a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 800f274:	1414      	asrs	r4, r2, #16
 800f276:	d458      	bmi.n	800f32a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 800f278:	9e01      	ldr	r6, [sp, #4]
 800f27a:	42b4      	cmp	r4, r6
 800f27c:	da55      	bge.n	800f32a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 800f27e:	fb09 5404 	mla	r4, r9, r4, r5
 800f282:	9d03      	ldr	r5, [sp, #12]
 800f284:	f855 4024 	ldr.w	r4, [r5, r4, lsl #2]
 800f288:	ea5f 6e14 	movs.w	lr, r4, lsr #24
 800f28c:	d04d      	beq.n	800f32a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 800f28e:	0a26      	lsrs	r6, r4, #8
 800f290:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 800f294:	fa5f f58e 	uxtb.w	r5, lr
 800f298:	ea4f 4c14 	mov.w	ip, r4, lsr #16
 800f29c:	9604      	str	r6, [sp, #16]
 800f29e:	d04a      	beq.n	800f336 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1e2>
 800f2a0:	f06f 0601 	mvn.w	r6, #1
 800f2a4:	437e      	muls	r6, r7
 800f2a6:	fa1f fa85 	uxth.w	sl, r5
 800f2aa:	f830 8006 	ldrh.w	r8, [r0, r6]
 800f2ae:	9602      	str	r6, [sp, #8]
 800f2b0:	ea4f 2e28 	mov.w	lr, r8, asr #8
 800f2b4:	43ed      	mvns	r5, r5
 800f2b6:	fa5f fc8c 	uxtb.w	ip, ip
 800f2ba:	b2ed      	uxtb	r5, r5
 800f2bc:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 800f2c0:	fb1c fc0a 	smulbb	ip, ip, sl
 800f2c4:	fb0e cc05 	mla	ip, lr, r5, ip
 800f2c8:	b2e4      	uxtb	r4, r4
 800f2ca:	ea4f 0ee8 	mov.w	lr, r8, asr #3
 800f2ce:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 800f2d2:	f89d 6010 	ldrb.w	r6, [sp, #16]
 800f2d6:	fa5f f888 	uxtb.w	r8, r8
 800f2da:	fb14 f40a 	smulbb	r4, r4, sl
 800f2de:	fb08 4405 	mla	r4, r8, r5, r4
 800f2e2:	b2a4      	uxth	r4, r4
 800f2e4:	fa1f fc8c 	uxth.w	ip, ip
 800f2e8:	fb16 f60a 	smulbb	r6, r6, sl
 800f2ec:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 800f2f0:	fb0e 6e05 	mla	lr, lr, r5, r6
 800f2f4:	1c66      	adds	r6, r4, #1
 800f2f6:	f10c 0501 	add.w	r5, ip, #1
 800f2fa:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 800f2fe:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 800f302:	fa1f fe8e 	uxth.w	lr, lr
 800f306:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 800f30a:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 800f30e:	ea4c 0c06 	orr.w	ip, ip, r6
 800f312:	f10e 0601 	add.w	r6, lr, #1
 800f316:	eb06 261e 	add.w	r6, r6, lr, lsr #8
 800f31a:	0976      	lsrs	r6, r6, #5
 800f31c:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 800f320:	9c02      	ldr	r4, [sp, #8]
 800f322:	ea4c 0c06 	orr.w	ip, ip, r6
 800f326:	f820 c004 	strh.w	ip, [r0, r4]
 800f32a:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 800f32c:	4421      	add	r1, r4
 800f32e:	9c14      	ldr	r4, [sp, #80]	; 0x50
 800f330:	3f01      	subs	r7, #1
 800f332:	4422      	add	r2, r4
 800f334:	e758      	b.n	800f1e8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x94>
 800f336:	4e3e      	ldr	r6, [pc, #248]	; (800f430 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2dc>)
 800f338:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 800f33c:	ea06 2c0c 	and.w	ip, r6, ip, lsl #8
 800f340:	ea4c 0c04 	orr.w	ip, ip, r4
 800f344:	9c04      	ldr	r4, [sp, #16]
 800f346:	f06f 0501 	mvn.w	r5, #1
 800f34a:	00e6      	lsls	r6, r4, #3
 800f34c:	437d      	muls	r5, r7
 800f34e:	f406 64fc 	and.w	r4, r6, #2016	; 0x7e0
 800f352:	ea4c 0c04 	orr.w	ip, ip, r4
 800f356:	f820 c005 	strh.w	ip, [r0, r5]
 800f35a:	e7e6      	b.n	800f32a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 800f35c:	f04f 0800 	mov.w	r8, #0
 800f360:	eba3 0408 	sub.w	r4, r3, r8
 800f364:	2c00      	cmp	r4, #0
 800f366:	f77f af42 	ble.w	800f1ee <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9a>
 800f36a:	140d      	asrs	r5, r1, #16
 800f36c:	1414      	asrs	r4, r2, #16
 800f36e:	fb09 5404 	mla	r4, r9, r4, r5
 800f372:	9d03      	ldr	r5, [sp, #12]
 800f374:	f855 4024 	ldr.w	r4, [r5, r4, lsl #2]
 800f378:	ea5f 6c14 	movs.w	ip, r4, lsr #24
 800f37c:	d042      	beq.n	800f404 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2b0>
 800f37e:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 800f382:	fa5f f58c 	uxtb.w	r5, ip
 800f386:	ea4f 4714 	mov.w	r7, r4, lsr #16
 800f38a:	ea4f 2614 	mov.w	r6, r4, lsr #8
 800f38e:	d040      	beq.n	800f412 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2be>
 800f390:	f830 e018 	ldrh.w	lr, [r0, r8, lsl #1]
 800f394:	fa1f fa85 	uxth.w	sl, r5
 800f398:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 800f39c:	43ed      	mvns	r5, r5
 800f39e:	b2ff      	uxtb	r7, r7
 800f3a0:	b2ed      	uxtb	r5, r5
 800f3a2:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 800f3a6:	fb17 f70a 	smulbb	r7, r7, sl
 800f3aa:	fb0c 7705 	mla	r7, ip, r5, r7
 800f3ae:	b2e4      	uxtb	r4, r4
 800f3b0:	ea4f 0cee 	mov.w	ip, lr, asr #3
 800f3b4:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 800f3b8:	fa5f fe8e 	uxtb.w	lr, lr
 800f3bc:	fb14 f40a 	smulbb	r4, r4, sl
 800f3c0:	fb0e 4405 	mla	r4, lr, r5, r4
 800f3c4:	b2f6      	uxtb	r6, r6
 800f3c6:	b2bf      	uxth	r7, r7
 800f3c8:	fb16 f60a 	smulbb	r6, r6, sl
 800f3cc:	b2a4      	uxth	r4, r4
 800f3ce:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 800f3d2:	fb0c 6c05 	mla	ip, ip, r5, r6
 800f3d6:	1c7d      	adds	r5, r7, #1
 800f3d8:	1c66      	adds	r6, r4, #1
 800f3da:	eb05 2717 	add.w	r7, r5, r7, lsr #8
 800f3de:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 800f3e2:	fa1f fc8c 	uxth.w	ip, ip
 800f3e6:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 800f3ea:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 800f3ee:	4337      	orrs	r7, r6
 800f3f0:	f10c 0601 	add.w	r6, ip, #1
 800f3f4:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 800f3f8:	0976      	lsrs	r6, r6, #5
 800f3fa:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 800f3fe:	4337      	orrs	r7, r6
 800f400:	f820 7018 	strh.w	r7, [r0, r8, lsl #1]
 800f404:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 800f406:	4421      	add	r1, r4
 800f408:	9c14      	ldr	r4, [sp, #80]	; 0x50
 800f40a:	f108 0801 	add.w	r8, r8, #1
 800f40e:	4422      	add	r2, r4
 800f410:	e7a6      	b.n	800f360 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x20c>
 800f412:	4d07      	ldr	r5, [pc, #28]	; (800f430 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2dc>)
 800f414:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 800f418:	ea05 2707 	and.w	r7, r5, r7, lsl #8
 800f41c:	00f6      	lsls	r6, r6, #3
 800f41e:	4327      	orrs	r7, r4
 800f420:	f406 64fc 	and.w	r4, r6, #2016	; 0x7e0
 800f424:	4327      	orrs	r7, r4
 800f426:	e7eb      	b.n	800f400 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2ac>
 800f428:	b007      	add	sp, #28
 800f42a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800f42e:	bf00      	nop
 800f430:	fffff800 	.word	0xfffff800

0800f434 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 800f434:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f438:	b087      	sub	sp, #28
 800f43a:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 800f43e:	9204      	str	r2, [sp, #16]
 800f440:	f9bd 2060 	ldrsh.w	r2, [sp, #96]	; 0x60
 800f444:	9200      	str	r2, [sp, #0]
 800f446:	f9bd 2064 	ldrsh.w	r2, [sp, #100]	; 0x64
 800f44a:	9c15      	ldr	r4, [sp, #84]	; 0x54
 800f44c:	9201      	str	r2, [sp, #4]
 800f44e:	f89d 206c 	ldrb.w	r2, [sp, #108]	; 0x6c
 800f452:	9205      	str	r2, [sp, #20]
 800f454:	e9dd 2516 	ldrd	r2, r5, [sp, #88]	; 0x58
 800f458:	6860      	ldr	r0, [r4, #4]
 800f45a:	fb00 2505 	mla	r5, r0, r5, r2
 800f45e:	6822      	ldr	r2, [r4, #0]
 800f460:	eb02 0545 	add.w	r5, r2, r5, lsl #1
 800f464:	9a00      	ldr	r2, [sp, #0]
 800f466:	3201      	adds	r2, #1
 800f468:	f022 0201 	bic.w	r2, r2, #1
 800f46c:	9202      	str	r2, [sp, #8]
 800f46e:	9a1a      	ldr	r2, [sp, #104]	; 0x68
 800f470:	6812      	ldr	r2, [r2, #0]
 800f472:	9203      	str	r2, [sp, #12]
 800f474:	2900      	cmp	r1, #0
 800f476:	dc03      	bgt.n	800f480 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4c>
 800f478:	9a04      	ldr	r2, [sp, #16]
 800f47a:	2a00      	cmp	r2, #0
 800f47c:	f340 814c 	ble.w	800f718 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2e4>
 800f480:	9a11      	ldr	r2, [sp, #68]	; 0x44
 800f482:	f502 4400 	add.w	r4, r2, #32768	; 0x8000
 800f486:	9a12      	ldr	r2, [sp, #72]	; 0x48
 800f488:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 800f48c:	2b00      	cmp	r3, #0
 800f48e:	dd10      	ble.n	800f4b2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7e>
 800f490:	1422      	asrs	r2, r4, #16
 800f492:	d407      	bmi.n	800f4a4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x70>
 800f494:	9e00      	ldr	r6, [sp, #0]
 800f496:	4296      	cmp	r6, r2
 800f498:	dd04      	ble.n	800f4a4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x70>
 800f49a:	1402      	asrs	r2, r0, #16
 800f49c:	d402      	bmi.n	800f4a4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x70>
 800f49e:	9e01      	ldr	r6, [sp, #4]
 800f4a0:	42b2      	cmp	r2, r6
 800f4a2:	db07      	blt.n	800f4b4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x80>
 800f4a4:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 800f4a6:	4414      	add	r4, r2
 800f4a8:	9a14      	ldr	r2, [sp, #80]	; 0x50
 800f4aa:	3b01      	subs	r3, #1
 800f4ac:	4410      	add	r0, r2
 800f4ae:	3502      	adds	r5, #2
 800f4b0:	e7ec      	b.n	800f48c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x58>
 800f4b2:	d00f      	beq.n	800f4d4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xa0>
 800f4b4:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 800f4b6:	1e5a      	subs	r2, r3, #1
 800f4b8:	fb06 4602 	mla	r6, r6, r2, r4
 800f4bc:	1436      	asrs	r6, r6, #16
 800f4be:	d542      	bpl.n	800f546 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x112>
 800f4c0:	469a      	mov	sl, r3
 800f4c2:	46a9      	mov	r9, r5
 800f4c4:	f1ba 0f00 	cmp.w	sl, #0
 800f4c8:	f300 80b5 	bgt.w	800f636 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x202>
 800f4cc:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 800f4d0:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 800f4d4:	2900      	cmp	r1, #0
 800f4d6:	f340 811f 	ble.w	800f718 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2e4>
 800f4da:	ee30 0a04 	vadd.f32	s0, s0, s8
 800f4de:	ee70 0aa4 	vadd.f32	s1, s1, s9
 800f4e2:	eec6 7a80 	vdiv.f32	s15, s13, s0
 800f4e6:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800f4e8:	3901      	subs	r1, #1
 800f4ea:	ee31 1a05 	vadd.f32	s2, s2, s10
 800f4ee:	ee20 7aa7 	vmul.f32	s14, s1, s15
 800f4f2:	eeb0 6a62 	vmov.f32	s12, s5
 800f4f6:	ee61 7a27 	vmul.f32	s15, s2, s15
 800f4fa:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 800f4fe:	ee77 2a62 	vsub.f32	s5, s14, s5
 800f502:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 800f506:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 800f50a:	eeb0 6a43 	vmov.f32	s12, s6
 800f50e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 800f512:	ee12 2a90 	vmov	r2, s5
 800f516:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 800f51a:	fb92 f3f3 	sdiv	r3, r2, r3
 800f51e:	ee13 2a10 	vmov	r2, s6
 800f522:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 800f526:	9313      	str	r3, [sp, #76]	; 0x4c
 800f528:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800f52a:	fb92 f3f3 	sdiv	r3, r2, r3
 800f52e:	9a04      	ldr	r2, [sp, #16]
 800f530:	9314      	str	r3, [sp, #80]	; 0x50
 800f532:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 800f536:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800f538:	eeb0 3a67 	vmov.f32	s6, s15
 800f53c:	bf08      	it	eq
 800f53e:	4613      	moveq	r3, r2
 800f540:	eef0 2a47 	vmov.f32	s5, s14
 800f544:	e796      	b.n	800f474 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x40>
 800f546:	9f00      	ldr	r7, [sp, #0]
 800f548:	42b7      	cmp	r7, r6
 800f54a:	ddb9      	ble.n	800f4c0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x8c>
 800f54c:	9e14      	ldr	r6, [sp, #80]	; 0x50
 800f54e:	fb06 0202 	mla	r2, r6, r2, r0
 800f552:	1412      	asrs	r2, r2, #16
 800f554:	d4b4      	bmi.n	800f4c0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x8c>
 800f556:	9e01      	ldr	r6, [sp, #4]
 800f558:	42b2      	cmp	r2, r6
 800f55a:	dab1      	bge.n	800f4c0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x8c>
 800f55c:	f04f 0800 	mov.w	r8, #0
 800f560:	eba3 0208 	sub.w	r2, r3, r8
 800f564:	2a00      	cmp	r2, #0
 800f566:	ddb1      	ble.n	800f4cc <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x98>
 800f568:	9f02      	ldr	r7, [sp, #8]
 800f56a:	1422      	asrs	r2, r4, #16
 800f56c:	1406      	asrs	r6, r0, #16
 800f56e:	fb07 2606 	mla	r6, r7, r6, r2
 800f572:	0872      	lsrs	r2, r6, #1
 800f574:	9f03      	ldr	r7, [sp, #12]
 800f576:	5cba      	ldrb	r2, [r7, r2]
 800f578:	07f6      	lsls	r6, r6, #31
 800f57a:	bf54      	ite	pl
 800f57c:	f002 020f 	andpl.w	r2, r2, #15
 800f580:	1112      	asrmi	r2, r2, #4
 800f582:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 800f586:	b2d2      	uxtb	r2, r2
 800f588:	2a00      	cmp	r2, #0
 800f58a:	d04d      	beq.n	800f628 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1f4>
 800f58c:	9f05      	ldr	r7, [sp, #20]
 800f58e:	4e64      	ldr	r6, [pc, #400]	; (800f720 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2ec>)
 800f590:	f835 e018 	ldrh.w	lr, [r5, r8, lsl #1]
 800f594:	6836      	ldr	r6, [r6, #0]
 800f596:	437a      	muls	r2, r7
 800f598:	1c57      	adds	r7, r2, #1
 800f59a:	eb07 2222 	add.w	r2, r7, r2, asr #8
 800f59e:	1212      	asrs	r2, r2, #8
 800f5a0:	ea4f 2c16 	mov.w	ip, r6, lsr #8
 800f5a4:	fa1f fa82 	uxth.w	sl, r2
 800f5a8:	ea4f 272e 	mov.w	r7, lr, asr #8
 800f5ac:	43d2      	mvns	r2, r2
 800f5ae:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 800f5b2:	b2d2      	uxtb	r2, r2
 800f5b4:	fb1c fc0a 	smulbb	ip, ip, sl
 800f5b8:	ea4f 09d6 	mov.w	r9, r6, lsr #3
 800f5bc:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 800f5c0:	fb07 c702 	mla	r7, r7, r2, ip
 800f5c4:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 800f5c8:	ea4f 0cee 	mov.w	ip, lr, asr #3
 800f5cc:	fb19 f90a 	smulbb	r9, r9, sl
 800f5d0:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 800f5d4:	00f6      	lsls	r6, r6, #3
 800f5d6:	fb0c 9c02 	mla	ip, ip, r2, r9
 800f5da:	b2f6      	uxtb	r6, r6
 800f5dc:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 800f5e0:	fa1f fc8c 	uxth.w	ip, ip
 800f5e4:	fa5f fe8e 	uxtb.w	lr, lr
 800f5e8:	fb16 f60a 	smulbb	r6, r6, sl
 800f5ec:	b2bf      	uxth	r7, r7
 800f5ee:	fb0e 6602 	mla	r6, lr, r2, r6
 800f5f2:	f10c 0901 	add.w	r9, ip, #1
 800f5f6:	b2b6      	uxth	r6, r6
 800f5f8:	eb09 2c1c 	add.w	ip, r9, ip, lsr #8
 800f5fc:	f107 0b01 	add.w	fp, r7, #1
 800f600:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 800f604:	eb0b 2717 	add.w	r7, fp, r7, lsr #8
 800f608:	f106 0e01 	add.w	lr, r6, #1
 800f60c:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 800f610:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 800f614:	eb0e 2e16 	add.w	lr, lr, r6, lsr #8
 800f618:	ea4c 0c07 	orr.w	ip, ip, r7
 800f61c:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 800f620:	ea4c 0c0e 	orr.w	ip, ip, lr
 800f624:	f825 c018 	strh.w	ip, [r5, r8, lsl #1]
 800f628:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 800f62a:	4414      	add	r4, r2
 800f62c:	9a14      	ldr	r2, [sp, #80]	; 0x50
 800f62e:	f108 0801 	add.w	r8, r8, #1
 800f632:	4410      	add	r0, r2
 800f634:	e794      	b.n	800f560 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x12c>
 800f636:	1422      	asrs	r2, r4, #16
 800f638:	d465      	bmi.n	800f706 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2d2>
 800f63a:	9e00      	ldr	r6, [sp, #0]
 800f63c:	4296      	cmp	r6, r2
 800f63e:	dd62      	ble.n	800f706 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2d2>
 800f640:	1406      	asrs	r6, r0, #16
 800f642:	d460      	bmi.n	800f706 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2d2>
 800f644:	9f01      	ldr	r7, [sp, #4]
 800f646:	42be      	cmp	r6, r7
 800f648:	da5d      	bge.n	800f706 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2d2>
 800f64a:	9f02      	ldr	r7, [sp, #8]
 800f64c:	fb06 2607 	mla	r6, r6, r7, r2
 800f650:	0872      	lsrs	r2, r6, #1
 800f652:	9f03      	ldr	r7, [sp, #12]
 800f654:	5cba      	ldrb	r2, [r7, r2]
 800f656:	07f7      	lsls	r7, r6, #31
 800f658:	bf54      	ite	pl
 800f65a:	f002 020f 	andpl.w	r2, r2, #15
 800f65e:	1112      	asrmi	r2, r2, #4
 800f660:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 800f664:	b2d2      	uxtb	r2, r2
 800f666:	2a00      	cmp	r2, #0
 800f668:	d04d      	beq.n	800f706 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2d2>
 800f66a:	9f05      	ldr	r7, [sp, #20]
 800f66c:	4e2c      	ldr	r6, [pc, #176]	; (800f720 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2ec>)
 800f66e:	f8b9 e000 	ldrh.w	lr, [r9]
 800f672:	6836      	ldr	r6, [r6, #0]
 800f674:	437a      	muls	r2, r7
 800f676:	1c57      	adds	r7, r2, #1
 800f678:	eb07 2222 	add.w	r2, r7, r2, asr #8
 800f67c:	1212      	asrs	r2, r2, #8
 800f67e:	ea4f 2c16 	mov.w	ip, r6, lsr #8
 800f682:	fa1f fb82 	uxth.w	fp, r2
 800f686:	ea4f 272e 	mov.w	r7, lr, asr #8
 800f68a:	43d2      	mvns	r2, r2
 800f68c:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 800f690:	b2d2      	uxtb	r2, r2
 800f692:	fb1c fc0b 	smulbb	ip, ip, fp
 800f696:	ea4f 08d6 	mov.w	r8, r6, lsr #3
 800f69a:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 800f69e:	fb07 c702 	mla	r7, r7, r2, ip
 800f6a2:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 800f6a6:	ea4f 0cee 	mov.w	ip, lr, asr #3
 800f6aa:	fb18 f80b 	smulbb	r8, r8, fp
 800f6ae:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 800f6b2:	00f6      	lsls	r6, r6, #3
 800f6b4:	fb0c 8c02 	mla	ip, ip, r2, r8
 800f6b8:	b2f6      	uxtb	r6, r6
 800f6ba:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 800f6be:	fa1f fc8c 	uxth.w	ip, ip
 800f6c2:	fa5f fe8e 	uxtb.w	lr, lr
 800f6c6:	fb16 f60b 	smulbb	r6, r6, fp
 800f6ca:	b2bf      	uxth	r7, r7
 800f6cc:	fb0e 6602 	mla	r6, lr, r2, r6
 800f6d0:	f10c 0801 	add.w	r8, ip, #1
 800f6d4:	b2b6      	uxth	r6, r6
 800f6d6:	eb08 2c1c 	add.w	ip, r8, ip, lsr #8
 800f6da:	f107 0801 	add.w	r8, r7, #1
 800f6de:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 800f6e2:	eb08 2717 	add.w	r7, r8, r7, lsr #8
 800f6e6:	f106 0e01 	add.w	lr, r6, #1
 800f6ea:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 800f6ee:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 800f6f2:	eb0e 2e16 	add.w	lr, lr, r6, lsr #8
 800f6f6:	ea4c 0c07 	orr.w	ip, ip, r7
 800f6fa:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 800f6fe:	ea4c 0c0e 	orr.w	ip, ip, lr
 800f702:	f8a9 c000 	strh.w	ip, [r9]
 800f706:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 800f708:	4414      	add	r4, r2
 800f70a:	9a14      	ldr	r2, [sp, #80]	; 0x50
 800f70c:	f109 0902 	add.w	r9, r9, #2
 800f710:	4410      	add	r0, r2
 800f712:	f10a 3aff 	add.w	sl, sl, #4294967295
 800f716:	e6d5      	b.n	800f4c4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x90>
 800f718:	b007      	add	sp, #28
 800f71a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800f71e:	bf00      	nop
 800f720:	20012194 	.word	0x20012194

0800f724 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 800f724:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f728:	b087      	sub	sp, #28
 800f72a:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 800f72e:	9c15      	ldr	r4, [sp, #84]	; 0x54
 800f730:	9205      	str	r2, [sp, #20]
 800f732:	f9bd 2064 	ldrsh.w	r2, [sp, #100]	; 0x64
 800f736:	9201      	str	r2, [sp, #4]
 800f738:	e9dd 2516 	ldrd	r2, r5, [sp, #88]	; 0x58
 800f73c:	6860      	ldr	r0, [r4, #4]
 800f73e:	f9bd b060 	ldrsh.w	fp, [sp, #96]	; 0x60
 800f742:	9100      	str	r1, [sp, #0]
 800f744:	fb00 2505 	mla	r5, r0, r5, r2
 800f748:	6822      	ldr	r2, [r4, #0]
 800f74a:	eb02 0545 	add.w	r5, r2, r5, lsl #1
 800f74e:	f10b 0201 	add.w	r2, fp, #1
 800f752:	f022 0201 	bic.w	r2, r2, #1
 800f756:	9203      	str	r2, [sp, #12]
 800f758:	9a1a      	ldr	r2, [sp, #104]	; 0x68
 800f75a:	6812      	ldr	r2, [r2, #0]
 800f75c:	9204      	str	r2, [sp, #16]
 800f75e:	9a00      	ldr	r2, [sp, #0]
 800f760:	2a00      	cmp	r2, #0
 800f762:	dc03      	bgt.n	800f76c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x48>
 800f764:	9a05      	ldr	r2, [sp, #20]
 800f766:	2a00      	cmp	r2, #0
 800f768:	f340 8157 	ble.w	800fa1a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2f6>
 800f76c:	9a11      	ldr	r2, [sp, #68]	; 0x44
 800f76e:	f502 4400 	add.w	r4, r2, #32768	; 0x8000
 800f772:	9a12      	ldr	r2, [sp, #72]	; 0x48
 800f774:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 800f778:	2b00      	cmp	r3, #0
 800f77a:	dd0f      	ble.n	800f79c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x78>
 800f77c:	1422      	asrs	r2, r4, #16
 800f77e:	d406      	bmi.n	800f78e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6a>
 800f780:	4593      	cmp	fp, r2
 800f782:	dd04      	ble.n	800f78e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6a>
 800f784:	1402      	asrs	r2, r0, #16
 800f786:	d402      	bmi.n	800f78e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6a>
 800f788:	9e01      	ldr	r6, [sp, #4]
 800f78a:	42b2      	cmp	r2, r6
 800f78c:	db07      	blt.n	800f79e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7a>
 800f78e:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 800f790:	4414      	add	r4, r2
 800f792:	9a14      	ldr	r2, [sp, #80]	; 0x50
 800f794:	3b01      	subs	r3, #1
 800f796:	4410      	add	r0, r2
 800f798:	3502      	adds	r5, #2
 800f79a:	e7ed      	b.n	800f778 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x54>
 800f79c:	d018      	beq.n	800f7d0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xac>
 800f79e:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 800f7a0:	1e5a      	subs	r2, r3, #1
 800f7a2:	fb06 4602 	mla	r6, r6, r2, r4
 800f7a6:	1436      	asrs	r6, r6, #16
 800f7a8:	d40a      	bmi.n	800f7c0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9c>
 800f7aa:	45b3      	cmp	fp, r6
 800f7ac:	dd08      	ble.n	800f7c0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9c>
 800f7ae:	9e14      	ldr	r6, [sp, #80]	; 0x50
 800f7b0:	fb06 0202 	mla	r2, r6, r2, r0
 800f7b4:	1412      	asrs	r2, r2, #16
 800f7b6:	d403      	bmi.n	800f7c0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9c>
 800f7b8:	9e01      	ldr	r6, [sp, #4]
 800f7ba:	42b2      	cmp	r2, r6
 800f7bc:	f2c0 80bf 	blt.w	800f93e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x21a>
 800f7c0:	2700      	movs	r7, #0
 800f7c2:	19da      	adds	r2, r3, r7
 800f7c4:	2a00      	cmp	r2, #0
 800f7c6:	dc3f      	bgt.n	800f848 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x124>
 800f7c8:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 800f7cc:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 800f7d0:	9b00      	ldr	r3, [sp, #0]
 800f7d2:	2b00      	cmp	r3, #0
 800f7d4:	f340 8121 	ble.w	800fa1a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2f6>
 800f7d8:	ee30 0a04 	vadd.f32	s0, s0, s8
 800f7dc:	ee70 0aa4 	vadd.f32	s1, s1, s9
 800f7e0:	eec6 7a80 	vdiv.f32	s15, s13, s0
 800f7e4:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800f7e6:	ee31 1a05 	vadd.f32	s2, s2, s10
 800f7ea:	ee20 7aa7 	vmul.f32	s14, s1, s15
 800f7ee:	eeb0 6a62 	vmov.f32	s12, s5
 800f7f2:	ee61 7a27 	vmul.f32	s15, s2, s15
 800f7f6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 800f7fa:	ee77 2a62 	vsub.f32	s5, s14, s5
 800f7fe:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 800f802:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 800f806:	eeb0 6a43 	vmov.f32	s12, s6
 800f80a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 800f80e:	ee12 2a90 	vmov	r2, s5
 800f812:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 800f816:	fb92 f3f3 	sdiv	r3, r2, r3
 800f81a:	ee13 2a10 	vmov	r2, s6
 800f81e:	9313      	str	r3, [sp, #76]	; 0x4c
 800f820:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800f822:	fb92 f3f3 	sdiv	r3, r2, r3
 800f826:	9314      	str	r3, [sp, #80]	; 0x50
 800f828:	9b00      	ldr	r3, [sp, #0]
 800f82a:	9a05      	ldr	r2, [sp, #20]
 800f82c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 800f830:	3b01      	subs	r3, #1
 800f832:	9300      	str	r3, [sp, #0]
 800f834:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 800f838:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800f83a:	eeb0 3a67 	vmov.f32	s6, s15
 800f83e:	bf08      	it	eq
 800f840:	4613      	moveq	r3, r2
 800f842:	eef0 2a47 	vmov.f32	s5, s14
 800f846:	e78a      	b.n	800f75e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3a>
 800f848:	1422      	asrs	r2, r4, #16
 800f84a:	d466      	bmi.n	800f91a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1f6>
 800f84c:	4593      	cmp	fp, r2
 800f84e:	dd64      	ble.n	800f91a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1f6>
 800f850:	1406      	asrs	r6, r0, #16
 800f852:	d462      	bmi.n	800f91a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1f6>
 800f854:	9901      	ldr	r1, [sp, #4]
 800f856:	428e      	cmp	r6, r1
 800f858:	da5f      	bge.n	800f91a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1f6>
 800f85a:	9903      	ldr	r1, [sp, #12]
 800f85c:	fb06 2601 	mla	r6, r6, r1, r2
 800f860:	0872      	lsrs	r2, r6, #1
 800f862:	9904      	ldr	r1, [sp, #16]
 800f864:	5c8a      	ldrb	r2, [r1, r2]
 800f866:	07f6      	lsls	r6, r6, #31
 800f868:	bf54      	ite	pl
 800f86a:	f002 020f 	andpl.w	r2, r2, #15
 800f86e:	1112      	asrmi	r2, r2, #4
 800f870:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 800f874:	b2d2      	uxtb	r2, r2
 800f876:	2a00      	cmp	r2, #0
 800f878:	d04f      	beq.n	800f91a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1f6>
 800f87a:	4969      	ldr	r1, [pc, #420]	; (800fa20 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2fc>)
 800f87c:	f8d1 c000 	ldr.w	ip, [r1]
 800f880:	2aff      	cmp	r2, #255	; 0xff
 800f882:	ea4f 291c 	mov.w	r9, ip, lsr #8
 800f886:	ea4f 06dc 	mov.w	r6, ip, lsr #3
 800f88a:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 800f88e:	f009 09f8 	and.w	r9, r9, #248	; 0xf8
 800f892:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 800f896:	fa5f fc8c 	uxtb.w	ip, ip
 800f89a:	d044      	beq.n	800f926 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x202>
 800f89c:	f06f 0101 	mvn.w	r1, #1
 800f8a0:	4379      	muls	r1, r7
 800f8a2:	fa1f fa82 	uxth.w	sl, r2
 800f8a6:	f835 8001 	ldrh.w	r8, [r5, r1]
 800f8aa:	9102      	str	r1, [sp, #8]
 800f8ac:	ea4f 2e28 	mov.w	lr, r8, asr #8
 800f8b0:	43d2      	mvns	r2, r2
 800f8b2:	b2d2      	uxtb	r2, r2
 800f8b4:	fb19 f90a 	smulbb	r9, r9, sl
 800f8b8:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 800f8bc:	fb0e 9e02 	mla	lr, lr, r2, r9
 800f8c0:	ea4f 09e8 	mov.w	r9, r8, asr #3
 800f8c4:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 800f8c8:	fb16 f60a 	smulbb	r6, r6, sl
 800f8cc:	fb09 6602 	mla	r6, r9, r2, r6
 800f8d0:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 800f8d4:	b2b6      	uxth	r6, r6
 800f8d6:	fa5f f888 	uxtb.w	r8, r8
 800f8da:	fb1c fc0a 	smulbb	ip, ip, sl
 800f8de:	fa1f fe8e 	uxth.w	lr, lr
 800f8e2:	fb08 cc02 	mla	ip, r8, r2, ip
 800f8e6:	f106 0901 	add.w	r9, r6, #1
 800f8ea:	fa1f fc8c 	uxth.w	ip, ip
 800f8ee:	eb09 2616 	add.w	r6, r9, r6, lsr #8
 800f8f2:	f10e 0901 	add.w	r9, lr, #1
 800f8f6:	0976      	lsrs	r6, r6, #5
 800f8f8:	eb09 2e1e 	add.w	lr, r9, lr, lsr #8
 800f8fc:	f10c 0201 	add.w	r2, ip, #1
 800f900:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 800f904:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 800f908:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 800f90c:	ea46 060e 	orr.w	r6, r6, lr
 800f910:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 800f914:	ea46 060c 	orr.w	r6, r6, ip
 800f918:	526e      	strh	r6, [r5, r1]
 800f91a:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 800f91c:	4414      	add	r4, r2
 800f91e:	9a14      	ldr	r2, [sp, #80]	; 0x50
 800f920:	3f01      	subs	r7, #1
 800f922:	4410      	add	r0, r2
 800f924:	e74d      	b.n	800f7c2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9e>
 800f926:	f06f 0201 	mvn.w	r2, #1
 800f92a:	00f6      	lsls	r6, r6, #3
 800f92c:	fb02 f807 	mul.w	r8, r2, r7
 800f930:	ea46 2609 	orr.w	r6, r6, r9, lsl #8
 800f934:	ea46 06dc 	orr.w	r6, r6, ip, lsr #3
 800f938:	f825 6008 	strh.w	r6, [r5, r8]
 800f93c:	e7ed      	b.n	800f91a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1f6>
 800f93e:	f04f 0800 	mov.w	r8, #0
 800f942:	eba3 0208 	sub.w	r2, r3, r8
 800f946:	2a00      	cmp	r2, #0
 800f948:	f77f af3e 	ble.w	800f7c8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xa4>
 800f94c:	9903      	ldr	r1, [sp, #12]
 800f94e:	1422      	asrs	r2, r4, #16
 800f950:	1406      	asrs	r6, r0, #16
 800f952:	fb01 2606 	mla	r6, r1, r6, r2
 800f956:	0872      	lsrs	r2, r6, #1
 800f958:	9904      	ldr	r1, [sp, #16]
 800f95a:	5c8a      	ldrb	r2, [r1, r2]
 800f95c:	07f1      	lsls	r1, r6, #31
 800f95e:	bf54      	ite	pl
 800f960:	f002 020f 	andpl.w	r2, r2, #15
 800f964:	1112      	asrmi	r2, r2, #4
 800f966:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 800f96a:	b2d2      	uxtb	r2, r2
 800f96c:	2a00      	cmp	r2, #0
 800f96e:	d047      	beq.n	800fa00 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2dc>
 800f970:	492b      	ldr	r1, [pc, #172]	; (800fa20 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2fc>)
 800f972:	680f      	ldr	r7, [r1, #0]
 800f974:	2aff      	cmp	r2, #255	; 0xff
 800f976:	ea4f 2917 	mov.w	r9, r7, lsr #8
 800f97a:	ea4f 06d7 	mov.w	r6, r7, lsr #3
 800f97e:	ea4f 07c7 	mov.w	r7, r7, lsl #3
 800f982:	f009 09f8 	and.w	r9, r9, #248	; 0xf8
 800f986:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 800f98a:	b2ff      	uxtb	r7, r7
 800f98c:	d03f      	beq.n	800fa0e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2ea>
 800f98e:	f835 e018 	ldrh.w	lr, [r5, r8, lsl #1]
 800f992:	fa1f fa82 	uxth.w	sl, r2
 800f996:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 800f99a:	43d2      	mvns	r2, r2
 800f99c:	b2d2      	uxtb	r2, r2
 800f99e:	fb19 f90a 	smulbb	r9, r9, sl
 800f9a2:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 800f9a6:	fb0c 9c02 	mla	ip, ip, r2, r9
 800f9aa:	ea4f 09ee 	mov.w	r9, lr, asr #3
 800f9ae:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 800f9b2:	fb16 f60a 	smulbb	r6, r6, sl
 800f9b6:	fb09 6602 	mla	r6, r9, r2, r6
 800f9ba:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 800f9be:	b2b6      	uxth	r6, r6
 800f9c0:	fa5f fe8e 	uxtb.w	lr, lr
 800f9c4:	fb17 f70a 	smulbb	r7, r7, sl
 800f9c8:	fa1f fc8c 	uxth.w	ip, ip
 800f9cc:	fb0e 7702 	mla	r7, lr, r2, r7
 800f9d0:	f106 0901 	add.w	r9, r6, #1
 800f9d4:	b2bf      	uxth	r7, r7
 800f9d6:	eb09 2616 	add.w	r6, r9, r6, lsr #8
 800f9da:	f10c 0901 	add.w	r9, ip, #1
 800f9de:	0976      	lsrs	r6, r6, #5
 800f9e0:	eb09 2c1c 	add.w	ip, r9, ip, lsr #8
 800f9e4:	1c7a      	adds	r2, r7, #1
 800f9e6:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 800f9ea:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 800f9ee:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 800f9f2:	ea46 060c 	orr.w	r6, r6, ip
 800f9f6:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 800f9fa:	433e      	orrs	r6, r7
 800f9fc:	f825 6018 	strh.w	r6, [r5, r8, lsl #1]
 800fa00:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 800fa02:	4414      	add	r4, r2
 800fa04:	9a14      	ldr	r2, [sp, #80]	; 0x50
 800fa06:	f108 0801 	add.w	r8, r8, #1
 800fa0a:	4410      	add	r0, r2
 800fa0c:	e799      	b.n	800f942 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x21e>
 800fa0e:	00f6      	lsls	r6, r6, #3
 800fa10:	ea46 2609 	orr.w	r6, r6, r9, lsl #8
 800fa14:	ea46 06d7 	orr.w	r6, r6, r7, lsr #3
 800fa18:	e7f0      	b.n	800f9fc <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2d8>
 800fa1a:	b007      	add	sp, #28
 800fa1c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800fa20:	20012194 	.word	0x20012194

0800fa24 <_ZN8touchgfx8LCD16bppD1Ev>:
 800fa24:	4770      	bx	lr

0800fa26 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD1Ev>:
 800fa26:	4770      	bx	lr

0800fa28 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD1Ev>:
 800fa28:	4770      	bx	lr

0800fa2a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD1Ev>:
 800fa2a:	4770      	bx	lr

0800fa2c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD1Ev>:
 800fa2c:	4770      	bx	lr

0800fa2e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 800fa2e:	4770      	bx	lr

0800fa30 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 800fa30:	4770      	bx	lr

0800fa32 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 800fa32:	4770      	bx	lr

0800fa34 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 800fa34:	4770      	bx	lr

0800fa36 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 800fa36:	4770      	bx	lr

0800fa38 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 800fa38:	4770      	bx	lr

0800fa3a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 800fa3a:	4770      	bx	lr

0800fa3c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD1Ev>:
 800fa3c:	4770      	bx	lr

0800fa3e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 800fa3e:	4770      	bx	lr

0800fa40 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 800fa40:	4770      	bx	lr

0800fa42 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 800fa42:	4770      	bx	lr

0800fa44 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD1Ev>:
 800fa44:	4770      	bx	lr

0800fa46 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 800fa46:	4770      	bx	lr

0800fa48 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 800fa48:	4770      	bx	lr

0800fa4a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 800fa4a:	4770      	bx	lr

0800fa4c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 800fa4c:	4770      	bx	lr

0800fa4e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD1Ev>:
 800fa4e:	4770      	bx	lr

0800fa50 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD1Ev>:
 800fa50:	4770      	bx	lr

0800fa52 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD1Ev>:
 800fa52:	4770      	bx	lr

0800fa54 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD1Ev>:
 800fa54:	4770      	bx	lr

0800fa56 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 800fa56:	4770      	bx	lr

0800fa58 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 800fa58:	4770      	bx	lr

0800fa5a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 800fa5a:	4770      	bx	lr

0800fa5c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 800fa5c:	4770      	bx	lr
	...

0800fa60 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv>:
 800fa60:	b508      	push	{r3, lr}
 800fa62:	4b06      	ldr	r3, [pc, #24]	; (800fa7c <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0x1c>)
 800fa64:	8818      	ldrh	r0, [r3, #0]
 800fa66:	b928      	cbnz	r0, 800fa74 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0x14>
 800fa68:	4b05      	ldr	r3, [pc, #20]	; (800fa80 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0x20>)
 800fa6a:	4a06      	ldr	r2, [pc, #24]	; (800fa84 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0x24>)
 800fa6c:	4806      	ldr	r0, [pc, #24]	; (800fa88 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0x28>)
 800fa6e:	2154      	movs	r1, #84	; 0x54
 800fa70:	f009 f8bc 	bl	8018bec <__assert_func>
 800fa74:	0040      	lsls	r0, r0, #1
 800fa76:	b280      	uxth	r0, r0
 800fa78:	bd08      	pop	{r3, pc}
 800fa7a:	bf00      	nop
 800fa7c:	20012186 	.word	0x20012186
 800fa80:	0801c95b 	.word	0x0801c95b
 800fa84:	0801cedb 	.word	0x0801cedb
 800fa88:	0801c99d 	.word	0x0801c99d

0800fa8c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb>:
 800fa8c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800fa90:	b08d      	sub	sp, #52	; 0x34
 800fa92:	460f      	mov	r7, r1
 800fa94:	f89d 9058 	ldrb.w	r9, [sp, #88]	; 0x58
 800fa98:	f89d 405c 	ldrb.w	r4, [sp, #92]	; 0x5c
 800fa9c:	4616      	mov	r6, r2
 800fa9e:	f1b9 0f00 	cmp.w	r9, #0
 800faa2:	d046      	beq.n	800fb32 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xa6>
 800faa4:	6810      	ldr	r0, [r2, #0]
 800faa6:	6851      	ldr	r1, [r2, #4]
 800faa8:	f8df 81c4 	ldr.w	r8, [pc, #452]	; 800fc70 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1e4>
 800faac:	ad08      	add	r5, sp, #32
 800faae:	c503      	stmia	r5!, {r0, r1}
 800fab0:	6818      	ldr	r0, [r3, #0]
 800fab2:	6859      	ldr	r1, [r3, #4]
 800fab4:	ad0a      	add	r5, sp, #40	; 0x28
 800fab6:	c503      	stmia	r5!, {r0, r1}
 800fab8:	a808      	add	r0, sp, #32
 800faba:	f7fb fa5f 	bl	800af7c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 800fabe:	4631      	mov	r1, r6
 800fac0:	a80a      	add	r0, sp, #40	; 0x28
 800fac2:	f7fb fa43 	bl	800af4c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 800fac6:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	; 0x28
 800faca:	f9bd 302a 	ldrsh.w	r3, [sp, #42]	; 0x2a
 800face:	f8bd 6024 	ldrh.w	r6, [sp, #36]	; 0x24
 800fad2:	f8d8 0000 	ldr.w	r0, [r8]
 800fad6:	f9bd 502c 	ldrsh.w	r5, [sp, #44]	; 0x2c
 800fada:	fb16 2103 	smlabb	r1, r6, r3, r2
 800fade:	eb07 0641 	add.w	r6, r7, r1, lsl #1
 800fae2:	f8bd 1020 	ldrh.w	r1, [sp, #32]
 800fae6:	f9bd 702e 	ldrsh.w	r7, [sp, #46]	; 0x2e
 800faea:	440a      	add	r2, r1
 800faec:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 800faf0:	f8bd 2022 	ldrh.w	r2, [sp, #34]	; 0x22
 800faf4:	4413      	add	r3, r2
 800faf6:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 800fafa:	6803      	ldr	r3, [r0, #0]
 800fafc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800fafe:	4798      	blx	r3
 800fb00:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 800fb04:	d018      	beq.n	800fb38 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xac>
 800fb06:	f010 0f04 	tst.w	r0, #4
 800fb0a:	d019      	beq.n	800fb40 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xb4>
 800fb0c:	f8d8 0000 	ldr.w	r0, [r8]
 800fb10:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 800fb14:	6801      	ldr	r1, [r0, #0]
 800fb16:	f8bd 2028 	ldrh.w	r2, [sp, #40]	; 0x28
 800fb1a:	e9cd 9403 	strd	r9, r4, [sp, #12]
 800fb1e:	b2bf      	uxth	r7, r7
 800fb20:	f8bd 4024 	ldrh.w	r4, [sp, #36]	; 0x24
 800fb24:	9402      	str	r4, [sp, #8]
 800fb26:	b2ad      	uxth	r5, r5
 800fb28:	9701      	str	r7, [sp, #4]
 800fb2a:	9500      	str	r5, [sp, #0]
 800fb2c:	6b8c      	ldr	r4, [r1, #56]	; 0x38
 800fb2e:	4631      	mov	r1, r6
 800fb30:	47a0      	blx	r4
 800fb32:	b00d      	add	sp, #52	; 0x34
 800fb34:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800fb38:	b914      	cbnz	r4, 800fb40 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xb4>
 800fb3a:	f010 0f01 	tst.w	r0, #1
 800fb3e:	e7e4      	b.n	800fb0a <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x7e>
 800fb40:	f8d8 0000 	ldr.w	r0, [r8]
 800fb44:	6803      	ldr	r3, [r0, #0]
 800fb46:	6a1b      	ldr	r3, [r3, #32]
 800fb48:	4798      	blx	r3
 800fb4a:	4a48      	ldr	r2, [pc, #288]	; (800fc6c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1e0>)
 800fb4c:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	; 0x2a
 800fb50:	8814      	ldrh	r4, [r2, #0]
 800fb52:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 800fb56:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 800fb5a:	fb01 3404 	mla	r4, r1, r4, r3
 800fb5e:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 800fb62:	4692      	mov	sl, r2
 800fb64:	d118      	bne.n	800fb98 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x10c>
 800fb66:	ea4f 0b45 	mov.w	fp, r5, lsl #1
 800fb6a:	f04f 0900 	mov.w	r9, #0
 800fb6e:	f8d8 0000 	ldr.w	r0, [r8]
 800fb72:	45b9      	cmp	r9, r7
 800fb74:	6803      	ldr	r3, [r0, #0]
 800fb76:	da73      	bge.n	800fc60 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>
 800fb78:	6add      	ldr	r5, [r3, #44]	; 0x2c
 800fb7a:	4632      	mov	r2, r6
 800fb7c:	465b      	mov	r3, fp
 800fb7e:	4621      	mov	r1, r4
 800fb80:	47a8      	blx	r5
 800fb82:	f8ba 3000 	ldrh.w	r3, [sl]
 800fb86:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 800fb8a:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	; 0x24
 800fb8e:	f109 0901 	add.w	r9, r9, #1
 800fb92:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 800fb96:	e7ea      	b.n	800fb6e <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xe2>
 800fb98:	f1c9 08ff 	rsb	r8, r9, #255	; 0xff
 800fb9c:	ea25 7ae5 	bic.w	sl, r5, r5, asr #31
 800fba0:	ea4f 0a4a 	mov.w	sl, sl, lsl #1
 800fba4:	f04f 0b00 	mov.w	fp, #0
 800fba8:	fa1f f389 	uxth.w	r3, r9
 800fbac:	fa1f f888 	uxth.w	r8, r8
 800fbb0:	9207      	str	r2, [sp, #28]
 800fbb2:	45bb      	cmp	fp, r7
 800fbb4:	da54      	bge.n	800fc60 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>
 800fbb6:	f04f 0e00 	mov.w	lr, #0
 800fbba:	45ae      	cmp	lr, r5
 800fbbc:	da41      	bge.n	800fc42 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1b6>
 800fbbe:	f834 101e 	ldrh.w	r1, [r4, lr, lsl #1]
 800fbc2:	f836 201e 	ldrh.w	r2, [r6, lr, lsl #1]
 800fbc6:	1208      	asrs	r0, r1, #8
 800fbc8:	ea4f 2c22 	mov.w	ip, r2, asr #8
 800fbcc:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 800fbd0:	fb10 f008 	smulbb	r0, r0, r8
 800fbd4:	ea4f 09e1 	mov.w	r9, r1, asr #3
 800fbd8:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 800fbdc:	00c9      	lsls	r1, r1, #3
 800fbde:	fb0c 0c03 	mla	ip, ip, r3, r0
 800fbe2:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 800fbe6:	10d0      	asrs	r0, r2, #3
 800fbe8:	b2c9      	uxtb	r1, r1
 800fbea:	00d2      	lsls	r2, r2, #3
 800fbec:	fa1f fc8c 	uxth.w	ip, ip
 800fbf0:	fb19 f908 	smulbb	r9, r9, r8
 800fbf4:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 800fbf8:	b2d2      	uxtb	r2, r2
 800fbfa:	fb11 f108 	smulbb	r1, r1, r8
 800fbfe:	fb00 9003 	mla	r0, r0, r3, r9
 800fc02:	fb02 1203 	mla	r2, r2, r3, r1
 800fc06:	f10c 0901 	add.w	r9, ip, #1
 800fc0a:	b292      	uxth	r2, r2
 800fc0c:	eb09 2c1c 	add.w	ip, r9, ip, lsr #8
 800fc10:	f40c 4978 	and.w	r9, ip, #63488	; 0xf800
 800fc14:	f102 0c01 	add.w	ip, r2, #1
 800fc18:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 800fc1c:	b280      	uxth	r0, r0
 800fc1e:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 800fc22:	ea49 0c02 	orr.w	ip, r9, r2
 800fc26:	f100 0901 	add.w	r9, r0, #1
 800fc2a:	eb09 2010 	add.w	r0, r9, r0, lsr #8
 800fc2e:	0940      	lsrs	r0, r0, #5
 800fc30:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 800fc34:	ea4c 0c00 	orr.w	ip, ip, r0
 800fc38:	f824 c01e 	strh.w	ip, [r4, lr, lsl #1]
 800fc3c:	f10e 0e01 	add.w	lr, lr, #1
 800fc40:	e7bb      	b.n	800fbba <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x12e>
 800fc42:	9a07      	ldr	r2, [sp, #28]
 800fc44:	8812      	ldrh	r2, [r2, #0]
 800fc46:	1b52      	subs	r2, r2, r5
 800fc48:	eb0a 0242 	add.w	r2, sl, r2, lsl #1
 800fc4c:	4414      	add	r4, r2
 800fc4e:	f9bd 2024 	ldrsh.w	r2, [sp, #36]	; 0x24
 800fc52:	1b52      	subs	r2, r2, r5
 800fc54:	eb0a 0242 	add.w	r2, sl, r2, lsl #1
 800fc58:	4416      	add	r6, r2
 800fc5a:	f10b 0b01 	add.w	fp, fp, #1
 800fc5e:	e7a8      	b.n	800fbb2 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x126>
 800fc60:	4b03      	ldr	r3, [pc, #12]	; (800fc70 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1e4>)
 800fc62:	6818      	ldr	r0, [r3, #0]
 800fc64:	6803      	ldr	r3, [r0, #0]
 800fc66:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800fc68:	4798      	blx	r3
 800fc6a:	e762      	b.n	800fb32 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xa6>
 800fc6c:	20012186 	.word	0x20012186
 800fc70:	2001218c 	.word	0x2001218c

0800fc74 <_ZN8touchgfx8LCD16bppD0Ev>:
 800fc74:	b510      	push	{r4, lr}
 800fc76:	2178      	movs	r1, #120	; 0x78
 800fc78:	4604      	mov	r4, r0
 800fc7a:	f008 ff8b 	bl	8018b94 <_ZdlPvj>
 800fc7e:	4620      	mov	r0, r4
 800fc80:	bd10      	pop	{r4, pc}

0800fc82 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 800fc82:	b510      	push	{r4, lr}
 800fc84:	2104      	movs	r1, #4
 800fc86:	4604      	mov	r4, r0
 800fc88:	f008 ff84 	bl	8018b94 <_ZdlPvj>
 800fc8c:	4620      	mov	r0, r4
 800fc8e:	bd10      	pop	{r4, pc}

0800fc90 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 800fc90:	b510      	push	{r4, lr}
 800fc92:	2104      	movs	r1, #4
 800fc94:	4604      	mov	r4, r0
 800fc96:	f008 ff7d 	bl	8018b94 <_ZdlPvj>
 800fc9a:	4620      	mov	r0, r4
 800fc9c:	bd10      	pop	{r4, pc}

0800fc9e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 800fc9e:	b510      	push	{r4, lr}
 800fca0:	2104      	movs	r1, #4
 800fca2:	4604      	mov	r4, r0
 800fca4:	f008 ff76 	bl	8018b94 <_ZdlPvj>
 800fca8:	4620      	mov	r0, r4
 800fcaa:	bd10      	pop	{r4, pc}

0800fcac <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 800fcac:	b510      	push	{r4, lr}
 800fcae:	2104      	movs	r1, #4
 800fcb0:	4604      	mov	r4, r0
 800fcb2:	f008 ff6f 	bl	8018b94 <_ZdlPvj>
 800fcb6:	4620      	mov	r0, r4
 800fcb8:	bd10      	pop	{r4, pc}

0800fcba <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD0Ev>:
 800fcba:	b510      	push	{r4, lr}
 800fcbc:	2104      	movs	r1, #4
 800fcbe:	4604      	mov	r4, r0
 800fcc0:	f008 ff68 	bl	8018b94 <_ZdlPvj>
 800fcc4:	4620      	mov	r0, r4
 800fcc6:	bd10      	pop	{r4, pc}

0800fcc8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD0Ev>:
 800fcc8:	b510      	push	{r4, lr}
 800fcca:	2104      	movs	r1, #4
 800fccc:	4604      	mov	r4, r0
 800fcce:	f008 ff61 	bl	8018b94 <_ZdlPvj>
 800fcd2:	4620      	mov	r0, r4
 800fcd4:	bd10      	pop	{r4, pc}

0800fcd6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD0Ev>:
 800fcd6:	b510      	push	{r4, lr}
 800fcd8:	2104      	movs	r1, #4
 800fcda:	4604      	mov	r4, r0
 800fcdc:	f008 ff5a 	bl	8018b94 <_ZdlPvj>
 800fce0:	4620      	mov	r0, r4
 800fce2:	bd10      	pop	{r4, pc}

0800fce4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD0Ev>:
 800fce4:	b510      	push	{r4, lr}
 800fce6:	2104      	movs	r1, #4
 800fce8:	4604      	mov	r4, r0
 800fcea:	f008 ff53 	bl	8018b94 <_ZdlPvj>
 800fcee:	4620      	mov	r0, r4
 800fcf0:	bd10      	pop	{r4, pc}

0800fcf2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 800fcf2:	b510      	push	{r4, lr}
 800fcf4:	2104      	movs	r1, #4
 800fcf6:	4604      	mov	r4, r0
 800fcf8:	f008 ff4c 	bl	8018b94 <_ZdlPvj>
 800fcfc:	4620      	mov	r0, r4
 800fcfe:	bd10      	pop	{r4, pc}

0800fd00 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 800fd00:	b510      	push	{r4, lr}
 800fd02:	2104      	movs	r1, #4
 800fd04:	4604      	mov	r4, r0
 800fd06:	f008 ff45 	bl	8018b94 <_ZdlPvj>
 800fd0a:	4620      	mov	r0, r4
 800fd0c:	bd10      	pop	{r4, pc}

0800fd0e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 800fd0e:	b510      	push	{r4, lr}
 800fd10:	2104      	movs	r1, #4
 800fd12:	4604      	mov	r4, r0
 800fd14:	f008 ff3e 	bl	8018b94 <_ZdlPvj>
 800fd18:	4620      	mov	r0, r4
 800fd1a:	bd10      	pop	{r4, pc}

0800fd1c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 800fd1c:	b510      	push	{r4, lr}
 800fd1e:	2104      	movs	r1, #4
 800fd20:	4604      	mov	r4, r0
 800fd22:	f008 ff37 	bl	8018b94 <_ZdlPvj>
 800fd26:	4620      	mov	r0, r4
 800fd28:	bd10      	pop	{r4, pc}

0800fd2a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 800fd2a:	b510      	push	{r4, lr}
 800fd2c:	2104      	movs	r1, #4
 800fd2e:	4604      	mov	r4, r0
 800fd30:	f008 ff30 	bl	8018b94 <_ZdlPvj>
 800fd34:	4620      	mov	r0, r4
 800fd36:	bd10      	pop	{r4, pc}

0800fd38 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 800fd38:	b510      	push	{r4, lr}
 800fd3a:	2104      	movs	r1, #4
 800fd3c:	4604      	mov	r4, r0
 800fd3e:	f008 ff29 	bl	8018b94 <_ZdlPvj>
 800fd42:	4620      	mov	r0, r4
 800fd44:	bd10      	pop	{r4, pc}

0800fd46 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 800fd46:	b510      	push	{r4, lr}
 800fd48:	2104      	movs	r1, #4
 800fd4a:	4604      	mov	r4, r0
 800fd4c:	f008 ff22 	bl	8018b94 <_ZdlPvj>
 800fd50:	4620      	mov	r0, r4
 800fd52:	bd10      	pop	{r4, pc}

0800fd54 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD0Ev>:
 800fd54:	b510      	push	{r4, lr}
 800fd56:	2104      	movs	r1, #4
 800fd58:	4604      	mov	r4, r0
 800fd5a:	f008 ff1b 	bl	8018b94 <_ZdlPvj>
 800fd5e:	4620      	mov	r0, r4
 800fd60:	bd10      	pop	{r4, pc}

0800fd62 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 800fd62:	b510      	push	{r4, lr}
 800fd64:	2104      	movs	r1, #4
 800fd66:	4604      	mov	r4, r0
 800fd68:	f008 ff14 	bl	8018b94 <_ZdlPvj>
 800fd6c:	4620      	mov	r0, r4
 800fd6e:	bd10      	pop	{r4, pc}

0800fd70 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 800fd70:	b510      	push	{r4, lr}
 800fd72:	2104      	movs	r1, #4
 800fd74:	4604      	mov	r4, r0
 800fd76:	f008 ff0d 	bl	8018b94 <_ZdlPvj>
 800fd7a:	4620      	mov	r0, r4
 800fd7c:	bd10      	pop	{r4, pc}

0800fd7e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 800fd7e:	b510      	push	{r4, lr}
 800fd80:	2104      	movs	r1, #4
 800fd82:	4604      	mov	r4, r0
 800fd84:	f008 ff06 	bl	8018b94 <_ZdlPvj>
 800fd88:	4620      	mov	r0, r4
 800fd8a:	bd10      	pop	{r4, pc}

0800fd8c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD0Ev>:
 800fd8c:	b510      	push	{r4, lr}
 800fd8e:	2104      	movs	r1, #4
 800fd90:	4604      	mov	r4, r0
 800fd92:	f008 feff 	bl	8018b94 <_ZdlPvj>
 800fd96:	4620      	mov	r0, r4
 800fd98:	bd10      	pop	{r4, pc}

0800fd9a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 800fd9a:	b510      	push	{r4, lr}
 800fd9c:	2104      	movs	r1, #4
 800fd9e:	4604      	mov	r4, r0
 800fda0:	f008 fef8 	bl	8018b94 <_ZdlPvj>
 800fda4:	4620      	mov	r0, r4
 800fda6:	bd10      	pop	{r4, pc}

0800fda8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 800fda8:	b510      	push	{r4, lr}
 800fdaa:	2104      	movs	r1, #4
 800fdac:	4604      	mov	r4, r0
 800fdae:	f008 fef1 	bl	8018b94 <_ZdlPvj>
 800fdb2:	4620      	mov	r0, r4
 800fdb4:	bd10      	pop	{r4, pc}

0800fdb6 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 800fdb6:	b510      	push	{r4, lr}
 800fdb8:	2104      	movs	r1, #4
 800fdba:	4604      	mov	r4, r0
 800fdbc:	f008 feea 	bl	8018b94 <_ZdlPvj>
 800fdc0:	4620      	mov	r0, r4
 800fdc2:	bd10      	pop	{r4, pc}

0800fdc4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 800fdc4:	b510      	push	{r4, lr}
 800fdc6:	2104      	movs	r1, #4
 800fdc8:	4604      	mov	r4, r0
 800fdca:	f008 fee3 	bl	8018b94 <_ZdlPvj>
 800fdce:	4620      	mov	r0, r4
 800fdd0:	bd10      	pop	{r4, pc}

0800fdd2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD0Ev>:
 800fdd2:	b510      	push	{r4, lr}
 800fdd4:	2104      	movs	r1, #4
 800fdd6:	4604      	mov	r4, r0
 800fdd8:	f008 fedc 	bl	8018b94 <_ZdlPvj>
 800fddc:	4620      	mov	r0, r4
 800fdde:	bd10      	pop	{r4, pc}

0800fde0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD0Ev>:
 800fde0:	b510      	push	{r4, lr}
 800fde2:	2104      	movs	r1, #4
 800fde4:	4604      	mov	r4, r0
 800fde6:	f008 fed5 	bl	8018b94 <_ZdlPvj>
 800fdea:	4620      	mov	r0, r4
 800fdec:	bd10      	pop	{r4, pc}

0800fdee <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD0Ev>:
 800fdee:	b510      	push	{r4, lr}
 800fdf0:	2104      	movs	r1, #4
 800fdf2:	4604      	mov	r4, r0
 800fdf4:	f008 fece 	bl	8018b94 <_ZdlPvj>
 800fdf8:	4620      	mov	r0, r4
 800fdfa:	bd10      	pop	{r4, pc}

0800fdfc <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD0Ev>:
 800fdfc:	b510      	push	{r4, lr}
 800fdfe:	2104      	movs	r1, #4
 800fe00:	4604      	mov	r4, r0
 800fe02:	f008 fec7 	bl	8018b94 <_ZdlPvj>
 800fe06:	4620      	mov	r0, r4
 800fe08:	bd10      	pop	{r4, pc}
	...

0800fe0c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh>:
 800fe0c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800fe10:	460e      	mov	r6, r1
 800fe12:	b08b      	sub	sp, #44	; 0x2c
 800fe14:	4615      	mov	r5, r2
 800fe16:	461c      	mov	r4, r3
 800fe18:	b323      	cbz	r3, 800fe64 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x58>
 800fe1a:	4608      	mov	r0, r1
 800fe1c:	f7f8 fc55 	bl	80086ca <_ZNK8touchgfx4Rect7isEmptyEv>
 800fe20:	bb00      	cbnz	r0, 800fe64 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x58>
 800fe22:	6830      	ldr	r0, [r6, #0]
 800fe24:	6871      	ldr	r1, [r6, #4]
 800fe26:	4e55      	ldr	r6, [pc, #340]	; (800ff7c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x170>)
 800fe28:	ab08      	add	r3, sp, #32
 800fe2a:	c303      	stmia	r3!, {r0, r1}
 800fe2c:	a808      	add	r0, sp, #32
 800fe2e:	f7fb f8a5 	bl	800af7c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 800fe32:	6830      	ldr	r0, [r6, #0]
 800fe34:	6803      	ldr	r3, [r0, #0]
 800fe36:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800fe38:	4798      	blx	r3
 800fe3a:	2cff      	cmp	r4, #255	; 0xff
 800fe3c:	d015      	beq.n	800fe6a <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5e>
 800fe3e:	f010 0f08 	tst.w	r0, #8
 800fe42:	d015      	beq.n	800fe70 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x64>
 800fe44:	6830      	ldr	r0, [r6, #0]
 800fe46:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
 800fe4a:	6801      	ldr	r1, [r0, #0]
 800fe4c:	9402      	str	r4, [sp, #8]
 800fe4e:	f8bd 4026 	ldrh.w	r4, [sp, #38]	; 0x26
 800fe52:	9401      	str	r4, [sp, #4]
 800fe54:	f8bd 4024 	ldrh.w	r4, [sp, #36]	; 0x24
 800fe58:	9400      	str	r4, [sp, #0]
 800fe5a:	6c8c      	ldr	r4, [r1, #72]	; 0x48
 800fe5c:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 800fe60:	4629      	mov	r1, r5
 800fe62:	47a0      	blx	r4
 800fe64:	b00b      	add	sp, #44	; 0x2c
 800fe66:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800fe6a:	f010 0f02 	tst.w	r0, #2
 800fe6e:	e7e8      	b.n	800fe42 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x36>
 800fe70:	6830      	ldr	r0, [r6, #0]
 800fe72:	f9bd 8024 	ldrsh.w	r8, [sp, #36]	; 0x24
 800fe76:	6803      	ldr	r3, [r0, #0]
 800fe78:	f9bd 9026 	ldrsh.w	r9, [sp, #38]	; 0x26
 800fe7c:	6a1b      	ldr	r3, [r3, #32]
 800fe7e:	4798      	blx	r3
 800fe80:	4a3f      	ldr	r2, [pc, #252]	; (800ff80 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x174>)
 800fe82:	f9bd 1020 	ldrsh.w	r1, [sp, #32]
 800fe86:	8816      	ldrh	r6, [r2, #0]
 800fe88:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 800fe8c:	2cff      	cmp	r4, #255	; 0xff
 800fe8e:	fb06 1303 	mla	r3, r6, r3, r1
 800fe92:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 800fe96:	ea4f 0b48 	mov.w	fp, r8, lsl #1
 800fe9a:	4616      	mov	r6, r2
 800fe9c:	ea28 71e8 	bic.w	r1, r8, r8, asr #31
 800fea0:	d10a      	bne.n	800feb8 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0xac>
 800fea2:	0049      	lsls	r1, r1, #1
 800fea4:	2200      	movs	r2, #0
 800fea6:	454a      	cmp	r2, r9
 800fea8:	da61      	bge.n	800ff6e <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x162>
 800feaa:	2300      	movs	r3, #0
 800feac:	4543      	cmp	r3, r8
 800feae:	da57      	bge.n	800ff60 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x154>
 800feb0:	f820 5013 	strh.w	r5, [r0, r3, lsl #1]
 800feb4:	3301      	adds	r3, #1
 800feb6:	e7f9      	b.n	800feac <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0xa0>
 800feb8:	0a2b      	lsrs	r3, r5, #8
 800feba:	f1c4 07ff 	rsb	r7, r4, #255	; 0xff
 800febe:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 800fec2:	b2a4      	uxth	r4, r4
 800fec4:	4363      	muls	r3, r4
 800fec6:	9305      	str	r3, [sp, #20]
 800fec8:	08ee      	lsrs	r6, r5, #3
 800feca:	00eb      	lsls	r3, r5, #3
 800fecc:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 800fed0:	b2db      	uxtb	r3, r3
 800fed2:	0049      	lsls	r1, r1, #1
 800fed4:	4366      	muls	r6, r4
 800fed6:	4363      	muls	r3, r4
 800fed8:	9106      	str	r1, [sp, #24]
 800feda:	f04f 0c00 	mov.w	ip, #0
 800fede:	b2bf      	uxth	r7, r7
 800fee0:	9207      	str	r2, [sp, #28]
 800fee2:	45cc      	cmp	ip, r9
 800fee4:	da43      	bge.n	800ff6e <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x162>
 800fee6:	4682      	mov	sl, r0
 800fee8:	f04f 0e00 	mov.w	lr, #0
 800feec:	45c6      	cmp	lr, r8
 800feee:	da2d      	bge.n	800ff4c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x140>
 800fef0:	f8ba 2000 	ldrh.w	r2, [sl]
 800fef4:	9905      	ldr	r1, [sp, #20]
 800fef6:	1214      	asrs	r4, r2, #8
 800fef8:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 800fefc:	fb14 f407 	smulbb	r4, r4, r7
 800ff00:	440c      	add	r4, r1
 800ff02:	10d1      	asrs	r1, r2, #3
 800ff04:	00d2      	lsls	r2, r2, #3
 800ff06:	b2d2      	uxtb	r2, r2
 800ff08:	fb12 f207 	smulbb	r2, r2, r7
 800ff0c:	b2a4      	uxth	r4, r4
 800ff0e:	441a      	add	r2, r3
 800ff10:	b292      	uxth	r2, r2
 800ff12:	1c65      	adds	r5, r4, #1
 800ff14:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 800ff18:	eb05 2414 	add.w	r4, r5, r4, lsr #8
 800ff1c:	fb11 f107 	smulbb	r1, r1, r7
 800ff20:	1c55      	adds	r5, r2, #1
 800ff22:	4431      	add	r1, r6
 800ff24:	eb05 2212 	add.w	r2, r5, r2, lsr #8
 800ff28:	b289      	uxth	r1, r1
 800ff2a:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 800ff2e:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 800ff32:	4314      	orrs	r4, r2
 800ff34:	1c4a      	adds	r2, r1, #1
 800ff36:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 800ff3a:	0949      	lsrs	r1, r1, #5
 800ff3c:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 800ff40:	430c      	orrs	r4, r1
 800ff42:	f82a 4b02 	strh.w	r4, [sl], #2
 800ff46:	f10e 0e01 	add.w	lr, lr, #1
 800ff4a:	e7cf      	b.n	800feec <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0xe0>
 800ff4c:	9a07      	ldr	r2, [sp, #28]
 800ff4e:	9906      	ldr	r1, [sp, #24]
 800ff50:	8812      	ldrh	r2, [r2, #0]
 800ff52:	ebcb 0242 	rsb	r2, fp, r2, lsl #1
 800ff56:	440a      	add	r2, r1
 800ff58:	4410      	add	r0, r2
 800ff5a:	f10c 0c01 	add.w	ip, ip, #1
 800ff5e:	e7c0      	b.n	800fee2 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0xd6>
 800ff60:	8833      	ldrh	r3, [r6, #0]
 800ff62:	ebcb 0343 	rsb	r3, fp, r3, lsl #1
 800ff66:	440b      	add	r3, r1
 800ff68:	4418      	add	r0, r3
 800ff6a:	3201      	adds	r2, #1
 800ff6c:	e79b      	b.n	800fea6 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x9a>
 800ff6e:	4b03      	ldr	r3, [pc, #12]	; (800ff7c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x170>)
 800ff70:	6818      	ldr	r0, [r3, #0]
 800ff72:	6803      	ldr	r3, [r0, #0]
 800ff74:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800ff76:	4798      	blx	r3
 800ff78:	e774      	b.n	800fe64 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x58>
 800ff7a:	bf00      	nop
 800ff7c:	2001218c 	.word	0x2001218c
 800ff80:	20012186 	.word	0x20012186

0800ff84 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t>:
 800ff84:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ff88:	4d9b      	ldr	r5, [pc, #620]	; (80101f8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x274>)
 800ff8a:	4690      	mov	r8, r2
 800ff8c:	682a      	ldr	r2, [r5, #0]
 800ff8e:	f892 2048 	ldrb.w	r2, [r2, #72]	; 0x48
 800ff92:	2a02      	cmp	r2, #2
 800ff94:	b08f      	sub	sp, #60	; 0x3c
 800ff96:	4604      	mov	r4, r0
 800ff98:	4689      	mov	r9, r1
 800ff9a:	d106      	bne.n	800ffaa <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x26>
 800ff9c:	4b97      	ldr	r3, [pc, #604]	; (80101fc <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x278>)
 800ff9e:	4a98      	ldr	r2, [pc, #608]	; (8010200 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x27c>)
 800ffa0:	f240 21be 	movw	r1, #702	; 0x2be
 800ffa4:	4897      	ldr	r0, [pc, #604]	; (8010204 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x280>)
 800ffa6:	f008 fe21 	bl	8018bec <__assert_func>
 800ffaa:	ae0e      	add	r6, sp, #56	; 0x38
 800ffac:	f826 3d24 	strh.w	r3, [r6, #-36]!
 800ffb0:	4630      	mov	r0, r6
 800ffb2:	f7fd fad9 	bl	800d568 <_ZNK8touchgfx6Bitmap9getFormatEv>
 800ffb6:	6823      	ldr	r3, [r4, #0]
 800ffb8:	4607      	mov	r7, r0
 800ffba:	6a1b      	ldr	r3, [r3, #32]
 800ffbc:	4620      	mov	r0, r4
 800ffbe:	4798      	blx	r3
 800ffc0:	4287      	cmp	r7, r0
 800ffc2:	d004      	beq.n	800ffce <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x4a>
 800ffc4:	4b90      	ldr	r3, [pc, #576]	; (8010208 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x284>)
 800ffc6:	4a8e      	ldr	r2, [pc, #568]	; (8010200 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x27c>)
 800ffc8:	f44f 7130 	mov.w	r1, #704	; 0x2c0
 800ffcc:	e7ea      	b.n	800ffa4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x20>
 800ffce:	4630      	mov	r0, r6
 800ffd0:	f7fd fa46 	bl	800d460 <_ZNK8touchgfx6Bitmap7getDataEv>
 800ffd4:	4607      	mov	r7, r0
 800ffd6:	b920      	cbnz	r0, 800ffe2 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x5e>
 800ffd8:	4b8c      	ldr	r3, [pc, #560]	; (801020c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x288>)
 800ffda:	4a89      	ldr	r2, [pc, #548]	; (8010200 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x27c>)
 800ffdc:	f240 21c2 	movw	r1, #706	; 0x2c2
 800ffe0:	e7e0      	b.n	800ffa4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x20>
 800ffe2:	f8d8 0000 	ldr.w	r0, [r8]
 800ffe6:	f8d8 1004 	ldr.w	r1, [r8, #4]
 800ffea:	f9b8 a000 	ldrsh.w	sl, [r8]
 800ffee:	ab06      	add	r3, sp, #24
 800fff0:	c303      	stmia	r3!, {r0, r1}
 800fff2:	f8d9 1004 	ldr.w	r1, [r9, #4]
 800fff6:	f8d9 0000 	ldr.w	r0, [r9]
 800fffa:	f9b8 9002 	ldrsh.w	r9, [r8, #2]
 800fffe:	ab08      	add	r3, sp, #32
 8010000:	c303      	stmia	r3!, {r0, r1}
 8010002:	4630      	mov	r0, r6
 8010004:	f7fd f924 	bl	800d250 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8010008:	4680      	mov	r8, r0
 801000a:	4630      	mov	r0, r6
 801000c:	f7fd f95a 	bl	800d2c4 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8010010:	f8ad 902a 	strh.w	r9, [sp, #42]	; 0x2a
 8010014:	f8ad 002e 	strh.w	r0, [sp, #46]	; 0x2e
 8010018:	f10d 0920 	add.w	r9, sp, #32
 801001c:	a806      	add	r0, sp, #24
 801001e:	f8ad a028 	strh.w	sl, [sp, #40]	; 0x28
 8010022:	f8ad 802c 	strh.w	r8, [sp, #44]	; 0x2c
 8010026:	f7fa ffa9 	bl	800af7c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801002a:	4648      	mov	r0, r9
 801002c:	f7fa ffa6 	bl	800af7c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8010030:	a80a      	add	r0, sp, #40	; 0x28
 8010032:	f7fa ffa3 	bl	800af7c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8010036:	4e76      	ldr	r6, [pc, #472]	; (8010210 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x28c>)
 8010038:	4b76      	ldr	r3, [pc, #472]	; (8010214 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x290>)
 801003a:	f9b6 2000 	ldrsh.w	r2, [r6]
 801003e:	f9b3 3000 	ldrsh.w	r3, [r3]
 8010042:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
 8010046:	2100      	movs	r1, #0
 8010048:	910c      	str	r1, [sp, #48]	; 0x30
 801004a:	4648      	mov	r0, r9
 801004c:	a90c      	add	r1, sp, #48	; 0x30
 801004e:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 8010052:	f7f8 faf7 	bl	8008644 <_ZN8touchgfx4RectaNERKS0_>
 8010056:	4648      	mov	r0, r9
 8010058:	f7f8 fb37 	bl	80086ca <_ZNK8touchgfx4Rect7isEmptyEv>
 801005c:	2800      	cmp	r0, #0
 801005e:	f040 80bd 	bne.w	80101dc <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x258>
 8010062:	f9bd 0020 	ldrsh.w	r0, [sp, #32]
 8010066:	f9bd 1018 	ldrsh.w	r1, [sp, #24]
 801006a:	4288      	cmp	r0, r1
 801006c:	db37      	blt.n	80100de <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x15a>
 801006e:	f9bd 2022 	ldrsh.w	r2, [sp, #34]	; 0x22
 8010072:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 8010076:	429a      	cmp	r2, r3
 8010078:	db31      	blt.n	80100de <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x15a>
 801007a:	f8bd c024 	ldrh.w	ip, [sp, #36]	; 0x24
 801007e:	4460      	add	r0, ip
 8010080:	f8bd c01c 	ldrh.w	ip, [sp, #28]
 8010084:	4461      	add	r1, ip
 8010086:	b200      	sxth	r0, r0
 8010088:	b209      	sxth	r1, r1
 801008a:	4288      	cmp	r0, r1
 801008c:	dc27      	bgt.n	80100de <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x15a>
 801008e:	f8bd 1026 	ldrh.w	r1, [sp, #38]	; 0x26
 8010092:	440a      	add	r2, r1
 8010094:	f8bd 101e 	ldrh.w	r1, [sp, #30]
 8010098:	440b      	add	r3, r1
 801009a:	b212      	sxth	r2, r2
 801009c:	b21b      	sxth	r3, r3
 801009e:	429a      	cmp	r2, r3
 80100a0:	dc1d      	bgt.n	80100de <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x15a>
 80100a2:	6823      	ldr	r3, [r4, #0]
 80100a4:	4620      	mov	r0, r4
 80100a6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80100a8:	4798      	blx	r3
 80100aa:	4682      	mov	sl, r0
 80100ac:	6828      	ldr	r0, [r5, #0]
 80100ae:	6803      	ldr	r3, [r0, #0]
 80100b0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80100b2:	4798      	blx	r3
 80100b4:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	; 0x28
 80100b8:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 80100bc:	f9bd b02c 	ldrsh.w	fp, [sp, #44]	; 0x2c
 80100c0:	1a9b      	subs	r3, r3, r2
 80100c2:	b29b      	uxth	r3, r3
 80100c4:	b21c      	sxth	r4, r3
 80100c6:	2c00      	cmp	r4, #0
 80100c8:	dc0e      	bgt.n	80100e8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x164>
 80100ca:	bf1f      	itttt	ne
 80100cc:	f8ad 2020 	strhne.w	r2, [sp, #32]
 80100d0:	f8bd 2024 	ldrhne.w	r2, [sp, #36]	; 0x24
 80100d4:	189b      	addne	r3, r3, r2
 80100d6:	f8ad 3024 	strhne.w	r3, [sp, #36]	; 0x24
 80100da:	463c      	mov	r4, r7
 80100dc:	e00a      	b.n	80100f4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x170>
 80100de:	4b4e      	ldr	r3, [pc, #312]	; (8010218 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x294>)
 80100e0:	4a47      	ldr	r2, [pc, #284]	; (8010200 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x27c>)
 80100e2:	f44f 7134 	mov.w	r1, #720	; 0x2d0
 80100e6:	e75d      	b.n	800ffa4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x20>
 80100e8:	ebab 0303 	sub.w	r3, fp, r3
 80100ec:	eb07 0444 	add.w	r4, r7, r4, lsl #1
 80100f0:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80100f4:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	; 0x2a
 80100f8:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
 80100fc:	1a5b      	subs	r3, r3, r1
 80100fe:	b29b      	uxth	r3, r3
 8010100:	b21a      	sxth	r2, r3
 8010102:	2a00      	cmp	r2, #0
 8010104:	dd4a      	ble.n	801019c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x218>
 8010106:	fb02 f20b 	mul.w	r2, r2, fp
 801010a:	eb04 0442 	add.w	r4, r4, r2, lsl #1
 801010e:	f8bd 202e 	ldrh.w	r2, [sp, #46]	; 0x2e
 8010112:	1ad3      	subs	r3, r2, r3
 8010114:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 8010118:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 801011c:	2b00      	cmp	r3, #0
 801011e:	dd5d      	ble.n	80101dc <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x258>
 8010120:	f9bd c02e 	ldrsh.w	ip, [sp, #46]	; 0x2e
 8010124:	f1bc 0f00 	cmp.w	ip, #0
 8010128:	dd58      	ble.n	80101dc <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x258>
 801012a:	f9bd 1022 	ldrsh.w	r1, [sp, #34]	; 0x22
 801012e:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 8010132:	fb0a f801 	mul.w	r8, sl, r1
 8010136:	eb08 0842 	add.w	r8, r8, r2, lsl #1
 801013a:	4480      	add	r8, r0
 801013c:	8830      	ldrh	r0, [r6, #0]
 801013e:	f9bd 6024 	ldrsh.w	r6, [sp, #36]	; 0x24
 8010142:	42b3      	cmp	r3, r6
 8010144:	bfa8      	it	ge
 8010146:	4633      	movge	r3, r6
 8010148:	1a82      	subs	r2, r0, r2
 801014a:	4293      	cmp	r3, r2
 801014c:	bfa8      	it	ge
 801014e:	4613      	movge	r3, r2
 8010150:	4a30      	ldr	r2, [pc, #192]	; (8010214 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x290>)
 8010152:	f9bd 6026 	ldrsh.w	r6, [sp, #38]	; 0x26
 8010156:	8812      	ldrh	r2, [r2, #0]
 8010158:	4566      	cmp	r6, ip
 801015a:	eba2 0101 	sub.w	r1, r2, r1
 801015e:	bfa8      	it	ge
 8010160:	4666      	movge	r6, ip
 8010162:	428e      	cmp	r6, r1
 8010164:	4632      	mov	r2, r6
 8010166:	bfa8      	it	ge
 8010168:	460a      	movge	r2, r1
 801016a:	4298      	cmp	r0, r3
 801016c:	9202      	str	r2, [sp, #8]
 801016e:	d01e      	beq.n	80101ae <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x22a>
 8010170:	005b      	lsls	r3, r3, #1
 8010172:	9303      	str	r3, [sp, #12]
 8010174:	ea4f 0b4b 	mov.w	fp, fp, lsl #1
 8010178:	f04f 0900 	mov.w	r9, #0
 801017c:	9b02      	ldr	r3, [sp, #8]
 801017e:	454b      	cmp	r3, r9
 8010180:	dd2c      	ble.n	80101dc <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x258>
 8010182:	6828      	ldr	r0, [r5, #0]
 8010184:	6803      	ldr	r3, [r0, #0]
 8010186:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8010188:	4642      	mov	r2, r8
 801018a:	461e      	mov	r6, r3
 801018c:	4621      	mov	r1, r4
 801018e:	9b03      	ldr	r3, [sp, #12]
 8010190:	47b0      	blx	r6
 8010192:	44d0      	add	r8, sl
 8010194:	445c      	add	r4, fp
 8010196:	f109 0901 	add.w	r9, r9, #1
 801019a:	e7ef      	b.n	801017c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x1f8>
 801019c:	bf1f      	itttt	ne
 801019e:	f8bd 2026 	ldrhne.w	r2, [sp, #38]	; 0x26
 80101a2:	f8ad 1022 	strhne.w	r1, [sp, #34]	; 0x22
 80101a6:	189b      	addne	r3, r3, r2
 80101a8:	f8ad 3026 	strhne.w	r3, [sp, #38]	; 0x26
 80101ac:	e7b4      	b.n	8010118 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x194>
 80101ae:	4558      	cmp	r0, fp
 80101b0:	d1de      	bne.n	8010170 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x1ec>
 80101b2:	6828      	ldr	r0, [r5, #0]
 80101b4:	6803      	ldr	r3, [r0, #0]
 80101b6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80101b8:	4798      	blx	r3
 80101ba:	07c3      	lsls	r3, r0, #31
 80101bc:	d512      	bpl.n	80101e4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x260>
 80101be:	6828      	ldr	r0, [r5, #0]
 80101c0:	9b02      	ldr	r3, [sp, #8]
 80101c2:	f8ad b024 	strh.w	fp, [sp, #36]	; 0x24
 80101c6:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 80101ca:	6803      	ldr	r3, [r0, #0]
 80101cc:	f8cd b000 	str.w	fp, [sp]
 80101d0:	6d5d      	ldr	r5, [r3, #84]	; 0x54
 80101d2:	e899 0006 	ldmia.w	r9, {r1, r2}
 80101d6:	4623      	mov	r3, r4
 80101d8:	47a8      	blx	r5
 80101da:	4607      	mov	r7, r0
 80101dc:	4638      	mov	r0, r7
 80101de:	b00f      	add	sp, #60	; 0x3c
 80101e0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80101e4:	6828      	ldr	r0, [r5, #0]
 80101e6:	6803      	ldr	r3, [r0, #0]
 80101e8:	6add      	ldr	r5, [r3, #44]	; 0x2c
 80101ea:	9b02      	ldr	r3, [sp, #8]
 80101ec:	4642      	mov	r2, r8
 80101ee:	fb03 f30a 	mul.w	r3, r3, sl
 80101f2:	4621      	mov	r1, r4
 80101f4:	47a8      	blx	r5
 80101f6:	e7f1      	b.n	80101dc <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x258>
 80101f8:	2001218c 	.word	0x2001218c
 80101fc:	0801c74f 	.word	0x0801c74f
 8010200:	0801cf8b 	.word	0x0801cf8b
 8010204:	0801c801 	.word	0x0801c801
 8010208:	0801c833 	.word	0x0801c833
 801020c:	0801c888 	.word	0x0801c888
 8010210:	20012186 	.word	0x20012186
 8010214:	20012188 	.word	0x20012188
 8010218:	0801c8c6 	.word	0x0801c8c6

0801021c <_ZN8touchgfx8LCD16bppC1Ev>:
 801021c:	2200      	movs	r2, #0
 801021e:	4910      	ldr	r1, [pc, #64]	; (8010260 <_ZN8touchgfx8LCD16bppC1Ev+0x44>)
 8010220:	6042      	str	r2, [r0, #4]
 8010222:	6001      	str	r1, [r0, #0]
 8010224:	e9c0 2202 	strd	r2, r2, [r0, #8]
 8010228:	e9c0 2204 	strd	r2, r2, [r0, #16]
 801022c:	e9c0 2206 	strd	r2, r2, [r0, #24]
 8010230:	e9c0 2208 	strd	r2, r2, [r0, #32]
 8010234:	e9c0 220a 	strd	r2, r2, [r0, #40]	; 0x28
 8010238:	e9c0 220c 	strd	r2, r2, [r0, #48]	; 0x30
 801023c:	e9c0 220e 	strd	r2, r2, [r0, #56]	; 0x38
 8010240:	e9c0 2210 	strd	r2, r2, [r0, #64]	; 0x40
 8010244:	e9c0 2212 	strd	r2, r2, [r0, #72]	; 0x48
 8010248:	e9c0 2214 	strd	r2, r2, [r0, #80]	; 0x50
 801024c:	e9c0 2216 	strd	r2, r2, [r0, #88]	; 0x58
 8010250:	e9c0 2218 	strd	r2, r2, [r0, #96]	; 0x60
 8010254:	e9c0 221a 	strd	r2, r2, [r0, #104]	; 0x68
 8010258:	e9c0 221c 	strd	r2, r2, [r0, #112]	; 0x70
 801025c:	4770      	bx	lr
 801025e:	bf00      	nop
 8010260:	0801cc08 	.word	0x0801cc08

08010264 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>:
 8010264:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010268:	460c      	mov	r4, r1
 801026a:	b08d      	sub	sp, #52	; 0x34
 801026c:	4682      	mov	sl, r0
 801026e:	6808      	ldr	r0, [r1, #0]
 8010270:	6849      	ldr	r1, [r1, #4]
 8010272:	469b      	mov	fp, r3
 8010274:	ab08      	add	r3, sp, #32
 8010276:	c303      	stmia	r3!, {r0, r1}
 8010278:	6810      	ldr	r0, [r2, #0]
 801027a:	6851      	ldr	r1, [r2, #4]
 801027c:	ab0a      	add	r3, sp, #40	; 0x28
 801027e:	c303      	stmia	r3!, {r0, r1}
 8010280:	a808      	add	r0, sp, #32
 8010282:	f7fa fe7b 	bl	800af7c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8010286:	4621      	mov	r1, r4
 8010288:	a80a      	add	r0, sp, #40	; 0x28
 801028a:	f7fa fe5f 	bl	800af4c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801028e:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	; 0x28
 8010292:	f9bd 302a 	ldrsh.w	r3, [sp, #42]	; 0x2a
 8010296:	f8bd 1024 	ldrh.w	r1, [sp, #36]	; 0x24
 801029a:	4c60      	ldr	r4, [pc, #384]	; (801041c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1b8>)
 801029c:	f9bd 802c 	ldrsh.w	r8, [sp, #44]	; 0x2c
 80102a0:	6820      	ldr	r0, [r4, #0]
 80102a2:	f9bd 902e 	ldrsh.w	r9, [sp, #46]	; 0x2e
 80102a6:	fb11 2103 	smlabb	r1, r1, r3, r2
 80102aa:	eb0a 0a81 	add.w	sl, sl, r1, lsl #2
 80102ae:	f8bd 1020 	ldrh.w	r1, [sp, #32]
 80102b2:	440a      	add	r2, r1
 80102b4:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 80102b8:	f8bd 2022 	ldrh.w	r2, [sp, #34]	; 0x22
 80102bc:	4413      	add	r3, r2
 80102be:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 80102c2:	6803      	ldr	r3, [r0, #0]
 80102c4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80102c6:	4798      	blx	r3
 80102c8:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 80102cc:	d119      	bne.n	8010302 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x9e>
 80102ce:	f010 0f20 	tst.w	r0, #32
 80102d2:	6820      	ldr	r0, [r4, #0]
 80102d4:	d018      	beq.n	8010308 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xa4>
 80102d6:	f8bd 4024 	ldrh.w	r4, [sp, #36]	; 0x24
 80102da:	6801      	ldr	r1, [r0, #0]
 80102dc:	9402      	str	r4, [sp, #8]
 80102de:	fa1f f489 	uxth.w	r4, r9
 80102e2:	9401      	str	r4, [sp, #4]
 80102e4:	fa1f f488 	uxth.w	r4, r8
 80102e8:	f8cd b00c 	str.w	fp, [sp, #12]
 80102ec:	9400      	str	r4, [sp, #0]
 80102ee:	6bcc      	ldr	r4, [r1, #60]	; 0x3c
 80102f0:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 80102f4:	f8bd 2028 	ldrh.w	r2, [sp, #40]	; 0x28
 80102f8:	4651      	mov	r1, sl
 80102fa:	47a0      	blx	r4
 80102fc:	b00d      	add	sp, #52	; 0x34
 80102fe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010302:	f010 0f40 	tst.w	r0, #64	; 0x40
 8010306:	e7e4      	b.n	80102d2 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x6e>
 8010308:	6803      	ldr	r3, [r0, #0]
 801030a:	6a1b      	ldr	r3, [r3, #32]
 801030c:	4798      	blx	r3
 801030e:	4a44      	ldr	r2, [pc, #272]	; (8010420 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1bc>)
 8010310:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	; 0x28
 8010314:	8813      	ldrh	r3, [r2, #0]
 8010316:	f9bd 402a 	ldrsh.w	r4, [sp, #42]	; 0x2a
 801031a:	9207      	str	r2, [sp, #28]
 801031c:	fb04 1303 	mla	r3, r4, r3, r1
 8010320:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8010324:	ea28 73e8 	bic.w	r3, r8, r8, asr #31
 8010328:	0099      	lsls	r1, r3, #2
 801032a:	005b      	lsls	r3, r3, #1
 801032c:	9106      	str	r1, [sp, #24]
 801032e:	9305      	str	r3, [sp, #20]
 8010330:	f04f 0c00 	mov.w	ip, #0
 8010334:	45cc      	cmp	ip, r9
 8010336:	da6b      	bge.n	8010410 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1ac>
 8010338:	2300      	movs	r3, #0
 801033a:	4543      	cmp	r3, r8
 801033c:	da55      	bge.n	80103ea <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x186>
 801033e:	f85a 4023 	ldr.w	r4, [sl, r3, lsl #2]
 8010342:	0e25      	lsrs	r5, r4, #24
 8010344:	d013      	beq.n	801036e <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x10a>
 8010346:	2dff      	cmp	r5, #255	; 0xff
 8010348:	ea4f 2714 	mov.w	r7, r4, lsr #8
 801034c:	d111      	bne.n	8010372 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x10e>
 801034e:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 8010352:	d10e      	bne.n	8010372 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x10e>
 8010354:	0962      	lsrs	r2, r4, #5
 8010356:	f427 67ff 	bic.w	r7, r7, #2040	; 0x7f8
 801035a:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801035e:	f027 0707 	bic.w	r7, r7, #7
 8010362:	4317      	orrs	r7, r2
 8010364:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 8010368:	433c      	orrs	r4, r7
 801036a:	f820 4013 	strh.w	r4, [r0, r3, lsl #1]
 801036e:	3301      	adds	r3, #1
 8010370:	e7e3      	b.n	801033a <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xd6>
 8010372:	fb0b f505 	mul.w	r5, fp, r5
 8010376:	1c6a      	adds	r2, r5, #1
 8010378:	f830 1013 	ldrh.w	r1, [r0, r3, lsl #1]
 801037c:	eb02 2225 	add.w	r2, r2, r5, asr #8
 8010380:	1212      	asrs	r2, r2, #8
 8010382:	fa1f fe82 	uxth.w	lr, r2
 8010386:	120e      	asrs	r6, r1, #8
 8010388:	f3c4 4507 	ubfx	r5, r4, #16, #8
 801038c:	43d2      	mvns	r2, r2
 801038e:	b2d2      	uxtb	r2, r2
 8010390:	fb15 f50e 	smulbb	r5, r5, lr
 8010394:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8010398:	fb06 5602 	mla	r6, r6, r2, r5
 801039c:	b2e4      	uxtb	r4, r4
 801039e:	10cd      	asrs	r5, r1, #3
 80103a0:	00c9      	lsls	r1, r1, #3
 80103a2:	b2c9      	uxtb	r1, r1
 80103a4:	fb14 f40e 	smulbb	r4, r4, lr
 80103a8:	fb01 4402 	mla	r4, r1, r2, r4
 80103ac:	b2ff      	uxtb	r7, r7
 80103ae:	b2b6      	uxth	r6, r6
 80103b0:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 80103b4:	b2a4      	uxth	r4, r4
 80103b6:	fb17 f70e 	smulbb	r7, r7, lr
 80103ba:	fb05 7702 	mla	r7, r5, r2, r7
 80103be:	1c72      	adds	r2, r6, #1
 80103c0:	1c65      	adds	r5, r4, #1
 80103c2:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 80103c6:	eb05 2514 	add.w	r5, r5, r4, lsr #8
 80103ca:	b2bf      	uxth	r7, r7
 80103cc:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 80103d0:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 80103d4:	432e      	orrs	r6, r5
 80103d6:	1c7d      	adds	r5, r7, #1
 80103d8:	eb05 2717 	add.w	r7, r5, r7, lsr #8
 80103dc:	097f      	lsrs	r7, r7, #5
 80103de:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 80103e2:	433e      	orrs	r6, r7
 80103e4:	f820 6013 	strh.w	r6, [r0, r3, lsl #1]
 80103e8:	e7c1      	b.n	801036e <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x10a>
 80103ea:	9b07      	ldr	r3, [sp, #28]
 80103ec:	9a05      	ldr	r2, [sp, #20]
 80103ee:	881b      	ldrh	r3, [r3, #0]
 80103f0:	eba3 0308 	sub.w	r3, r3, r8
 80103f4:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80103f8:	4418      	add	r0, r3
 80103fa:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	; 0x24
 80103fe:	9a06      	ldr	r2, [sp, #24]
 8010400:	eba3 0308 	sub.w	r3, r3, r8
 8010404:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 8010408:	449a      	add	sl, r3
 801040a:	f10c 0c01 	add.w	ip, ip, #1
 801040e:	e791      	b.n	8010334 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xd0>
 8010410:	4b02      	ldr	r3, [pc, #8]	; (801041c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1b8>)
 8010412:	6818      	ldr	r0, [r3, #0]
 8010414:	6803      	ldr	r3, [r0, #0]
 8010416:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8010418:	4798      	blx	r3
 801041a:	e76f      	b.n	80102fc <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x98>
 801041c:	2001218c 	.word	0x2001218c
 8010420:	20012186 	.word	0x20012186

08010424 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb>:
 8010424:	b570      	push	{r4, r5, r6, lr}
 8010426:	9d04      	ldr	r5, [sp, #16]
 8010428:	f89d 6018 	ldrb.w	r6, [sp, #24]
 801042c:	460c      	mov	r4, r1
 801042e:	4619      	mov	r1, r3
 8010430:	f89d 3014 	ldrb.w	r3, [sp, #20]
 8010434:	2a0c      	cmp	r2, #12
 8010436:	d820      	bhi.n	801047a <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x56>
 8010438:	e8df f002 	tbb	[pc, r2]
 801043c:	18121807 	.word	0x18121807
 8010440:	18181818 	.word	0x18181818
 8010444:	18181818 	.word	0x18181818
 8010448:	18          	.byte	0x18
 8010449:	00          	.byte	0x00
 801044a:	6802      	ldr	r2, [r0, #0]
 801044c:	e9cd 3604 	strd	r3, r6, [sp, #16]
 8010450:	68d6      	ldr	r6, [r2, #12]
 8010452:	462b      	mov	r3, r5
 8010454:	460a      	mov	r2, r1
 8010456:	46b4      	mov	ip, r6
 8010458:	4621      	mov	r1, r4
 801045a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801045e:	4760      	bx	ip
 8010460:	462a      	mov	r2, r5
 8010462:	4620      	mov	r0, r4
 8010464:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8010468:	f7ff befc 	b.w	8010264 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801046c:	4b03      	ldr	r3, [pc, #12]	; (801047c <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x58>)
 801046e:	4a04      	ldr	r2, [pc, #16]	; (8010480 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x5c>)
 8010470:	4804      	ldr	r0, [pc, #16]	; (8010484 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x60>)
 8010472:	f240 21b7 	movw	r1, #695	; 0x2b7
 8010476:	f008 fbb9 	bl	8018bec <__assert_func>
 801047a:	bd70      	pop	{r4, r5, r6, pc}
 801047c:	0801c926 	.word	0x0801c926
 8010480:	0801d011 	.word	0x0801d011
 8010484:	0801c801 	.word	0x0801c801

08010488 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>:
 8010488:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801048c:	b093      	sub	sp, #76	; 0x4c
 801048e:	880f      	ldrh	r7, [r1, #0]
 8010490:	f89d a070 	ldrb.w	sl, [sp, #112]	; 0x70
 8010494:	4681      	mov	r9, r0
 8010496:	4688      	mov	r8, r1
 8010498:	4615      	mov	r5, r2
 801049a:	b12f      	cbz	r7, 80104a8 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x20>
 801049c:	4b71      	ldr	r3, [pc, #452]	; (8010664 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1dc>)
 801049e:	4a72      	ldr	r2, [pc, #456]	; (8010668 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1e0>)
 80104a0:	4872      	ldr	r0, [pc, #456]	; (801066c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1e4>)
 80104a2:	21e8      	movs	r1, #232	; 0xe8
 80104a4:	f008 fba2 	bl	8018bec <__assert_func>
 80104a8:	6810      	ldr	r0, [r2, #0]
 80104aa:	6851      	ldr	r1, [r2, #4]
 80104ac:	ac0e      	add	r4, sp, #56	; 0x38
 80104ae:	c403      	stmia	r4!, {r0, r1}
 80104b0:	6818      	ldr	r0, [r3, #0]
 80104b2:	6859      	ldr	r1, [r3, #4]
 80104b4:	ac10      	add	r4, sp, #64	; 0x40
 80104b6:	c403      	stmia	r4!, {r0, r1}
 80104b8:	a80e      	add	r0, sp, #56	; 0x38
 80104ba:	f7fa fd5f 	bl	800af7c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80104be:	4629      	mov	r1, r5
 80104c0:	a810      	add	r0, sp, #64	; 0x40
 80104c2:	f7fa fd43 	bl	800af4c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80104c6:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	; 0x40
 80104ca:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	; 0x42
 80104ce:	f8bd 103c 	ldrh.w	r1, [sp, #60]	; 0x3c
 80104d2:	4d67      	ldr	r5, [pc, #412]	; (8010670 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1e8>)
 80104d4:	f9bd b044 	ldrsh.w	fp, [sp, #68]	; 0x44
 80104d8:	6828      	ldr	r0, [r5, #0]
 80104da:	4c66      	ldr	r4, [pc, #408]	; (8010674 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1ec>)
 80104dc:	fb11 2103 	smlabb	r1, r1, r3, r2
 80104e0:	4489      	add	r9, r1
 80104e2:	f8bd 1038 	ldrh.w	r1, [sp, #56]	; 0x38
 80104e6:	440a      	add	r2, r1
 80104e8:	f8ad 2040 	strh.w	r2, [sp, #64]	; 0x40
 80104ec:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 80104f0:	4413      	add	r3, r2
 80104f2:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 80104f6:	f9bd 3046 	ldrsh.w	r3, [sp, #70]	; 0x46
 80104fa:	930a      	str	r3, [sp, #40]	; 0x28
 80104fc:	6803      	ldr	r3, [r0, #0]
 80104fe:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8010502:	4798      	blx	r3
 8010504:	2801      	cmp	r0, #1
 8010506:	d11d      	bne.n	8010544 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xbc>
 8010508:	220b      	movs	r2, #11
 801050a:	9708      	str	r7, [sp, #32]
 801050c:	9207      	str	r2, [sp, #28]
 801050e:	8822      	ldrh	r2, [r4, #0]
 8010510:	f8cd a010 	str.w	sl, [sp, #16]
 8010514:	e9cd 0205 	strd	r0, r2, [sp, #20]
 8010518:	f8bd 203c 	ldrh.w	r2, [sp, #60]	; 0x3c
 801051c:	9203      	str	r2, [sp, #12]
 801051e:	f8bd 2028 	ldrh.w	r2, [sp, #40]	; 0x28
 8010522:	9202      	str	r2, [sp, #8]
 8010524:	fa1f f28b 	uxth.w	r2, fp
 8010528:	9201      	str	r2, [sp, #4]
 801052a:	f8bd 2042 	ldrh.w	r2, [sp, #66]	; 0x42
 801052e:	9200      	str	r2, [sp, #0]
 8010530:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 8010534:	6828      	ldr	r0, [r5, #0]
 8010536:	4642      	mov	r2, r8
 8010538:	4649      	mov	r1, r9
 801053a:	f7f8 ffd7 	bl	80094ec <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_>
 801053e:	b013      	add	sp, #76	; 0x4c
 8010540:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010544:	6828      	ldr	r0, [r5, #0]
 8010546:	6803      	ldr	r3, [r0, #0]
 8010548:	6a1b      	ldr	r3, [r3, #32]
 801054a:	4798      	blx	r3
 801054c:	8823      	ldrh	r3, [r4, #0]
 801054e:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	; 0x42
 8010552:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	; 0x40
 8010556:	fb01 2303 	mla	r3, r1, r3, r2
 801055a:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801055e:	ea2b 73eb 	bic.w	r3, fp, fp, asr #31
 8010562:	930b      	str	r3, [sp, #44]	; 0x2c
 8010564:	005b      	lsls	r3, r3, #1
 8010566:	e9cd 340c 	strd	r3, r4, [sp, #48]	; 0x30
 801056a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801056c:	429f      	cmp	r7, r3
 801056e:	da72      	bge.n	8010656 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1ce>
 8010570:	2100      	movs	r1, #0
 8010572:	4559      	cmp	r1, fp
 8010574:	da5e      	bge.n	8010634 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1ac>
 8010576:	f819 3001 	ldrb.w	r3, [r9, r1]
 801057a:	2204      	movs	r2, #4
 801057c:	fb12 2303 	smlabb	r3, r2, r3, r2
 8010580:	f858 2003 	ldr.w	r2, [r8, r3]
 8010584:	0e15      	lsrs	r5, r2, #24
 8010586:	d013      	beq.n	80105b0 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 8010588:	2dff      	cmp	r5, #255	; 0xff
 801058a:	ea4f 2412 	mov.w	r4, r2, lsr #8
 801058e:	d111      	bne.n	80105b4 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 8010590:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 8010594:	d10e      	bne.n	80105b4 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 8010596:	0953      	lsrs	r3, r2, #5
 8010598:	f424 64ff 	bic.w	r4, r4, #2040	; 0x7f8
 801059c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80105a0:	f024 0407 	bic.w	r4, r4, #7
 80105a4:	431c      	orrs	r4, r3
 80105a6:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 80105aa:	4314      	orrs	r4, r2
 80105ac:	f820 4011 	strh.w	r4, [r0, r1, lsl #1]
 80105b0:	3101      	adds	r1, #1
 80105b2:	e7de      	b.n	8010572 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xea>
 80105b4:	fb0a f505 	mul.w	r5, sl, r5
 80105b8:	1c6b      	adds	r3, r5, #1
 80105ba:	f830 c011 	ldrh.w	ip, [r0, r1, lsl #1]
 80105be:	eb03 2325 	add.w	r3, r3, r5, asr #8
 80105c2:	121b      	asrs	r3, r3, #8
 80105c4:	fa1f fe83 	uxth.w	lr, r3
 80105c8:	ea4f 262c 	mov.w	r6, ip, asr #8
 80105cc:	f3c2 4507 	ubfx	r5, r2, #16, #8
 80105d0:	43db      	mvns	r3, r3
 80105d2:	b2db      	uxtb	r3, r3
 80105d4:	fb15 f50e 	smulbb	r5, r5, lr
 80105d8:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 80105dc:	fb06 5603 	mla	r6, r6, r3, r5
 80105e0:	b2d2      	uxtb	r2, r2
 80105e2:	ea4f 05ec 	mov.w	r5, ip, asr #3
 80105e6:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 80105ea:	fa5f fc8c 	uxtb.w	ip, ip
 80105ee:	fb12 f20e 	smulbb	r2, r2, lr
 80105f2:	fb0c 2203 	mla	r2, ip, r3, r2
 80105f6:	b2e4      	uxtb	r4, r4
 80105f8:	b2b6      	uxth	r6, r6
 80105fa:	fb14 f40e 	smulbb	r4, r4, lr
 80105fe:	b292      	uxth	r2, r2
 8010600:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8010604:	fb05 4503 	mla	r5, r5, r3, r4
 8010608:	1c73      	adds	r3, r6, #1
 801060a:	1c54      	adds	r4, r2, #1
 801060c:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 8010610:	eb04 2412 	add.w	r4, r4, r2, lsr #8
 8010614:	b2ad      	uxth	r5, r5
 8010616:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 801061a:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801061e:	4326      	orrs	r6, r4
 8010620:	1c6c      	adds	r4, r5, #1
 8010622:	eb04 2415 	add.w	r4, r4, r5, lsr #8
 8010626:	0964      	lsrs	r4, r4, #5
 8010628:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 801062c:	4326      	orrs	r6, r4
 801062e:	f820 6011 	strh.w	r6, [r0, r1, lsl #1]
 8010632:	e7bd      	b.n	80105b0 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 8010634:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8010636:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8010638:	881b      	ldrh	r3, [r3, #0]
 801063a:	eba3 030b 	sub.w	r3, r3, fp
 801063e:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8010642:	4418      	add	r0, r3
 8010644:	f9bd 303c 	ldrsh.w	r3, [sp, #60]	; 0x3c
 8010648:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801064a:	eba3 030b 	sub.w	r3, r3, fp
 801064e:	4413      	add	r3, r2
 8010650:	4499      	add	r9, r3
 8010652:	3701      	adds	r7, #1
 8010654:	e789      	b.n	801056a <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xe2>
 8010656:	4b06      	ldr	r3, [pc, #24]	; (8010670 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1e8>)
 8010658:	6818      	ldr	r0, [r3, #0]
 801065a:	6803      	ldr	r3, [r0, #0]
 801065c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 801065e:	4798      	blx	r3
 8010660:	e76d      	b.n	801053e <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xb6>
 8010662:	bf00      	nop
 8010664:	0801c6ff 	.word	0x0801c6ff
 8010668:	0801cde2 	.word	0x0801cde2
 801066c:	0801c801 	.word	0x0801c801
 8010670:	2001218c 	.word	0x2001218c
 8010674:	20012186 	.word	0x20012186

08010678 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>:
 8010678:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801067c:	4614      	mov	r4, r2
 801067e:	880a      	ldrh	r2, [r1, #0]
 8010680:	b093      	sub	sp, #76	; 0x4c
 8010682:	2a02      	cmp	r2, #2
 8010684:	4606      	mov	r6, r0
 8010686:	4689      	mov	r9, r1
 8010688:	f89d 7070 	ldrb.w	r7, [sp, #112]	; 0x70
 801068c:	d006      	beq.n	801069c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x24>
 801068e:	4b7a      	ldr	r3, [pc, #488]	; (8010878 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x200>)
 8010690:	4a7a      	ldr	r2, [pc, #488]	; (801087c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x204>)
 8010692:	487b      	ldr	r0, [pc, #492]	; (8010880 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x208>)
 8010694:	f44f 71a1 	mov.w	r1, #322	; 0x142
 8010698:	f008 faa8 	bl	8018bec <__assert_func>
 801069c:	2f00      	cmp	r7, #0
 801069e:	d04b      	beq.n	8010738 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xc0>
 80106a0:	6820      	ldr	r0, [r4, #0]
 80106a2:	6861      	ldr	r1, [r4, #4]
 80106a4:	f8df a1e0 	ldr.w	sl, [pc, #480]	; 8010888 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x210>
 80106a8:	ad0e      	add	r5, sp, #56	; 0x38
 80106aa:	c503      	stmia	r5!, {r0, r1}
 80106ac:	6818      	ldr	r0, [r3, #0]
 80106ae:	6859      	ldr	r1, [r3, #4]
 80106b0:	ad10      	add	r5, sp, #64	; 0x40
 80106b2:	c503      	stmia	r5!, {r0, r1}
 80106b4:	a80e      	add	r0, sp, #56	; 0x38
 80106b6:	f7fa fc61 	bl	800af7c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80106ba:	4621      	mov	r1, r4
 80106bc:	a810      	add	r0, sp, #64	; 0x40
 80106be:	f7fa fc45 	bl	800af4c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80106c2:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	; 0x40
 80106c6:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	; 0x42
 80106ca:	f8bd 103c 	ldrh.w	r1, [sp, #60]	; 0x3c
 80106ce:	f8da 0000 	ldr.w	r0, [sl]
 80106d2:	f9bd 5044 	ldrsh.w	r5, [sp, #68]	; 0x44
 80106d6:	f9bd 8046 	ldrsh.w	r8, [sp, #70]	; 0x46
 80106da:	fb11 2103 	smlabb	r1, r1, r3, r2
 80106de:	1874      	adds	r4, r6, r1
 80106e0:	f8bd 1038 	ldrh.w	r1, [sp, #56]	; 0x38
 80106e4:	4e67      	ldr	r6, [pc, #412]	; (8010884 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x20c>)
 80106e6:	440a      	add	r2, r1
 80106e8:	f8ad 2040 	strh.w	r2, [sp, #64]	; 0x40
 80106ec:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 80106f0:	4413      	add	r3, r2
 80106f2:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 80106f6:	6803      	ldr	r3, [r0, #0]
 80106f8:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 80106fc:	4798      	blx	r3
 80106fe:	2801      	cmp	r0, #1
 8010700:	d11d      	bne.n	801073e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xc6>
 8010702:	2200      	movs	r2, #0
 8010704:	210b      	movs	r1, #11
 8010706:	e9cd 1207 	strd	r1, r2, [sp, #28]
 801070a:	8831      	ldrh	r1, [r6, #0]
 801070c:	9704      	str	r7, [sp, #16]
 801070e:	e9cd 2105 	strd	r2, r1, [sp, #20]
 8010712:	f8bd 203c 	ldrh.w	r2, [sp, #60]	; 0x3c
 8010716:	9203      	str	r2, [sp, #12]
 8010718:	fa1f f288 	uxth.w	r2, r8
 801071c:	9202      	str	r2, [sp, #8]
 801071e:	b2ad      	uxth	r5, r5
 8010720:	f8bd 2042 	ldrh.w	r2, [sp, #66]	; 0x42
 8010724:	9200      	str	r2, [sp, #0]
 8010726:	9501      	str	r5, [sp, #4]
 8010728:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 801072c:	f8da 0000 	ldr.w	r0, [sl]
 8010730:	464a      	mov	r2, r9
 8010732:	4621      	mov	r1, r4
 8010734:	f7f8 feda 	bl	80094ec <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_>
 8010738:	b013      	add	sp, #76	; 0x4c
 801073a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801073e:	f8da 0000 	ldr.w	r0, [sl]
 8010742:	6803      	ldr	r3, [r0, #0]
 8010744:	6a1b      	ldr	r3, [r3, #32]
 8010746:	4798      	blx	r3
 8010748:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	; 0x40
 801074c:	8833      	ldrh	r3, [r6, #0]
 801074e:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	; 0x42
 8010752:	fb01 2303 	mla	r3, r1, r3, r2
 8010756:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801075a:	2fff      	cmp	r7, #255	; 0xff
 801075c:	f109 0304 	add.w	r3, r9, #4
 8010760:	930a      	str	r3, [sp, #40]	; 0x28
 8010762:	ea25 72e5 	bic.w	r2, r5, r5, asr #31
 8010766:	d111      	bne.n	801078c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x114>
 8010768:	b212      	sxth	r2, r2
 801076a:	ea4f 0e42 	mov.w	lr, r2, lsl #1
 801076e:	2100      	movs	r1, #0
 8010770:	4541      	cmp	r1, r8
 8010772:	da7a      	bge.n	801086a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x1f2>
 8010774:	2300      	movs	r3, #0
 8010776:	42ab      	cmp	r3, r5
 8010778:	da6b      	bge.n	8010852 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x1da>
 801077a:	f814 c003 	ldrb.w	ip, [r4, r3]
 801077e:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8010780:	f837 c01c 	ldrh.w	ip, [r7, ip, lsl #1]
 8010784:	f820 c013 	strh.w	ip, [r0, r3, lsl #1]
 8010788:	3301      	adds	r3, #1
 801078a:	e7f4      	b.n	8010776 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xfe>
 801078c:	b213      	sxth	r3, r2
 801078e:	f1c7 0cff 	rsb	ip, r7, #255	; 0xff
 8010792:	930b      	str	r3, [sp, #44]	; 0x2c
 8010794:	005b      	lsls	r3, r3, #1
 8010796:	930c      	str	r3, [sp, #48]	; 0x30
 8010798:	f04f 0900 	mov.w	r9, #0
 801079c:	b2ba      	uxth	r2, r7
 801079e:	fa1f fc8c 	uxth.w	ip, ip
 80107a2:	960d      	str	r6, [sp, #52]	; 0x34
 80107a4:	45c1      	cmp	r9, r8
 80107a6:	da60      	bge.n	801086a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x1f2>
 80107a8:	46a3      	mov	fp, r4
 80107aa:	4682      	mov	sl, r0
 80107ac:	ebab 0304 	sub.w	r3, fp, r4
 80107b0:	429d      	cmp	r5, r3
 80107b2:	dd3e      	ble.n	8010832 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x1ba>
 80107b4:	f81b 3b01 	ldrb.w	r3, [fp], #1
 80107b8:	9e0a      	ldr	r6, [sp, #40]	; 0x28
 80107ba:	f8ba 1000 	ldrh.w	r1, [sl]
 80107be:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 80107c2:	120e      	asrs	r6, r1, #8
 80107c4:	121f      	asrs	r7, r3, #8
 80107c6:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 80107ca:	fb16 f60c 	smulbb	r6, r6, ip
 80107ce:	ea4f 0ee1 	mov.w	lr, r1, asr #3
 80107d2:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 80107d6:	00c9      	lsls	r1, r1, #3
 80107d8:	fb07 6702 	mla	r7, r7, r2, r6
 80107dc:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 80107e0:	10de      	asrs	r6, r3, #3
 80107e2:	b2c9      	uxtb	r1, r1
 80107e4:	00db      	lsls	r3, r3, #3
 80107e6:	fb1e fe0c 	smulbb	lr, lr, ip
 80107ea:	fb11 f10c 	smulbb	r1, r1, ip
 80107ee:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80107f2:	b2db      	uxtb	r3, r3
 80107f4:	b2bf      	uxth	r7, r7
 80107f6:	fb06 e602 	mla	r6, r6, r2, lr
 80107fa:	fb03 1302 	mla	r3, r3, r2, r1
 80107fe:	b2b6      	uxth	r6, r6
 8010800:	b29b      	uxth	r3, r3
 8010802:	1c79      	adds	r1, r7, #1
 8010804:	eb01 2717 	add.w	r7, r1, r7, lsr #8
 8010808:	f106 0e01 	add.w	lr, r6, #1
 801080c:	1c59      	adds	r1, r3, #1
 801080e:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 8010812:	eb0e 2e16 	add.w	lr, lr, r6, lsr #8
 8010816:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801081a:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 801081e:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8010822:	430f      	orrs	r7, r1
 8010824:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 8010828:	ea47 070e 	orr.w	r7, r7, lr
 801082c:	f82a 7b02 	strh.w	r7, [sl], #2
 8010830:	e7bc      	b.n	80107ac <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x134>
 8010832:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8010834:	990c      	ldr	r1, [sp, #48]	; 0x30
 8010836:	881b      	ldrh	r3, [r3, #0]
 8010838:	1b5b      	subs	r3, r3, r5
 801083a:	eb01 0343 	add.w	r3, r1, r3, lsl #1
 801083e:	4418      	add	r0, r3
 8010840:	f9bd 303c 	ldrsh.w	r3, [sp, #60]	; 0x3c
 8010844:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8010846:	1b5b      	subs	r3, r3, r5
 8010848:	440b      	add	r3, r1
 801084a:	441c      	add	r4, r3
 801084c:	f109 0901 	add.w	r9, r9, #1
 8010850:	e7a8      	b.n	80107a4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x12c>
 8010852:	8833      	ldrh	r3, [r6, #0]
 8010854:	1b5b      	subs	r3, r3, r5
 8010856:	eb0e 0343 	add.w	r3, lr, r3, lsl #1
 801085a:	4418      	add	r0, r3
 801085c:	f9bd 303c 	ldrsh.w	r3, [sp, #60]	; 0x3c
 8010860:	1b5b      	subs	r3, r3, r5
 8010862:	4413      	add	r3, r2
 8010864:	441c      	add	r4, r3
 8010866:	3101      	adds	r1, #1
 8010868:	e782      	b.n	8010770 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xf8>
 801086a:	4b07      	ldr	r3, [pc, #28]	; (8010888 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x210>)
 801086c:	6818      	ldr	r0, [r3, #0]
 801086e:	6803      	ldr	r3, [r0, #0]
 8010870:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8010872:	4798      	blx	r3
 8010874:	e760      	b.n	8010738 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xc0>
 8010876:	bf00      	nop
 8010878:	0801c5bd 	.word	0x0801c5bd
 801087c:	0801cc4c 	.word	0x0801cc4c
 8010880:	0801c801 	.word	0x0801c801
 8010884:	20012186 	.word	0x20012186
 8010888:	2001218c 	.word	0x2001218c

0801088c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>:
 801088c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010890:	4616      	mov	r6, r2
 8010892:	880a      	ldrh	r2, [r1, #0]
 8010894:	b093      	sub	sp, #76	; 0x4c
 8010896:	2a01      	cmp	r2, #1
 8010898:	4681      	mov	r9, r0
 801089a:	4688      	mov	r8, r1
 801089c:	f89d a070 	ldrb.w	sl, [sp, #112]	; 0x70
 80108a0:	d006      	beq.n	80108b0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x24>
 80108a2:	4b6c      	ldr	r3, [pc, #432]	; (8010a54 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1c8>)
 80108a4:	4a6c      	ldr	r2, [pc, #432]	; (8010a58 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1cc>)
 80108a6:	486d      	ldr	r0, [pc, #436]	; (8010a5c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1d0>)
 80108a8:	f240 119d 	movw	r1, #413	; 0x19d
 80108ac:	f008 f99e 	bl	8018bec <__assert_func>
 80108b0:	f1ba 0f00 	cmp.w	sl, #0
 80108b4:	d04a      	beq.n	801094c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xc0>
 80108b6:	6830      	ldr	r0, [r6, #0]
 80108b8:	6871      	ldr	r1, [r6, #4]
 80108ba:	4d69      	ldr	r5, [pc, #420]	; (8010a60 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1d4>)
 80108bc:	ac0e      	add	r4, sp, #56	; 0x38
 80108be:	c403      	stmia	r4!, {r0, r1}
 80108c0:	6818      	ldr	r0, [r3, #0]
 80108c2:	6859      	ldr	r1, [r3, #4]
 80108c4:	ac10      	add	r4, sp, #64	; 0x40
 80108c6:	c403      	stmia	r4!, {r0, r1}
 80108c8:	a80e      	add	r0, sp, #56	; 0x38
 80108ca:	f7fa fb57 	bl	800af7c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80108ce:	4631      	mov	r1, r6
 80108d0:	a810      	add	r0, sp, #64	; 0x40
 80108d2:	f7fa fb3b 	bl	800af4c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80108d6:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	; 0x40
 80108da:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	; 0x42
 80108de:	f8bd 103c 	ldrh.w	r1, [sp, #60]	; 0x3c
 80108e2:	6828      	ldr	r0, [r5, #0]
 80108e4:	f9bd 6044 	ldrsh.w	r6, [sp, #68]	; 0x44
 80108e8:	4c5e      	ldr	r4, [pc, #376]	; (8010a64 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1d8>)
 80108ea:	fb11 2103 	smlabb	r1, r1, r3, r2
 80108ee:	4489      	add	r9, r1
 80108f0:	f8bd 1038 	ldrh.w	r1, [sp, #56]	; 0x38
 80108f4:	440a      	add	r2, r1
 80108f6:	f8ad 2040 	strh.w	r2, [sp, #64]	; 0x40
 80108fa:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 80108fe:	4413      	add	r3, r2
 8010900:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 8010904:	f9bd 3046 	ldrsh.w	r3, [sp, #70]	; 0x46
 8010908:	930a      	str	r3, [sp, #40]	; 0x28
 801090a:	6803      	ldr	r3, [r0, #0]
 801090c:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8010910:	4798      	blx	r3
 8010912:	2801      	cmp	r0, #1
 8010914:	d11d      	bne.n	8010952 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xc6>
 8010916:	220b      	movs	r2, #11
 8010918:	2100      	movs	r1, #0
 801091a:	e9cd 2107 	strd	r2, r1, [sp, #28]
 801091e:	8822      	ldrh	r2, [r4, #0]
 8010920:	f8cd a010 	str.w	sl, [sp, #16]
 8010924:	e9cd 0205 	strd	r0, r2, [sp, #20]
 8010928:	f8bd 203c 	ldrh.w	r2, [sp, #60]	; 0x3c
 801092c:	9203      	str	r2, [sp, #12]
 801092e:	f8bd 2028 	ldrh.w	r2, [sp, #40]	; 0x28
 8010932:	9202      	str	r2, [sp, #8]
 8010934:	b2b6      	uxth	r6, r6
 8010936:	f8bd 2042 	ldrh.w	r2, [sp, #66]	; 0x42
 801093a:	9200      	str	r2, [sp, #0]
 801093c:	9601      	str	r6, [sp, #4]
 801093e:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 8010942:	6828      	ldr	r0, [r5, #0]
 8010944:	4642      	mov	r2, r8
 8010946:	4649      	mov	r1, r9
 8010948:	f7f8 fdd0 	bl	80094ec <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_>
 801094c:	b013      	add	sp, #76	; 0x4c
 801094e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010952:	6828      	ldr	r0, [r5, #0]
 8010954:	6803      	ldr	r3, [r0, #0]
 8010956:	6a1b      	ldr	r3, [r3, #32]
 8010958:	4798      	blx	r3
 801095a:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	; 0x42
 801095e:	8823      	ldrh	r3, [r4, #0]
 8010960:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	; 0x40
 8010964:	940d      	str	r4, [sp, #52]	; 0x34
 8010966:	fb01 2303 	mla	r3, r1, r3, r2
 801096a:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801096e:	ea26 73e6 	bic.w	r3, r6, r6, asr #31
 8010972:	930b      	str	r3, [sp, #44]	; 0x2c
 8010974:	ea6f 010a 	mvn.w	r1, sl
 8010978:	005b      	lsls	r3, r3, #1
 801097a:	930c      	str	r3, [sp, #48]	; 0x30
 801097c:	f04f 0e00 	mov.w	lr, #0
 8010980:	b2c9      	uxtb	r1, r1
 8010982:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8010984:	459e      	cmp	lr, r3
 8010986:	da5f      	bge.n	8010a48 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1bc>
 8010988:	2700      	movs	r7, #0
 801098a:	fa1f fb8a 	uxth.w	fp, sl
 801098e:	42b7      	cmp	r7, r6
 8010990:	da4a      	bge.n	8010a28 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x19c>
 8010992:	f819 3007 	ldrb.w	r3, [r9, r7]
 8010996:	2203      	movs	r2, #3
 8010998:	2404      	movs	r4, #4
 801099a:	fb12 4303 	smlabb	r3, r2, r3, r4
 801099e:	eb08 0403 	add.w	r4, r8, r3
 80109a2:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 80109a6:	78a2      	ldrb	r2, [r4, #2]
 80109a8:	7865      	ldrb	r5, [r4, #1]
 80109aa:	f818 c003 	ldrb.w	ip, [r8, r3]
 80109ae:	d10c      	bne.n	80109ca <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x13e>
 80109b0:	4b2d      	ldr	r3, [pc, #180]	; (8010a68 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1dc>)
 80109b2:	00ed      	lsls	r5, r5, #3
 80109b4:	ea03 2202 	and.w	r2, r3, r2, lsl #8
 80109b8:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80109bc:	432a      	orrs	r2, r5
 80109be:	ea42 02dc 	orr.w	r2, r2, ip, lsr #3
 80109c2:	f820 2017 	strh.w	r2, [r0, r7, lsl #1]
 80109c6:	3701      	adds	r7, #1
 80109c8:	e7e1      	b.n	801098e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x102>
 80109ca:	f830 3017 	ldrh.w	r3, [r0, r7, lsl #1]
 80109ce:	121c      	asrs	r4, r3, #8
 80109d0:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 80109d4:	fb12 f20b 	smulbb	r2, r2, fp
 80109d8:	fb04 2201 	mla	r2, r4, r1, r2
 80109dc:	10dc      	asrs	r4, r3, #3
 80109de:	00db      	lsls	r3, r3, #3
 80109e0:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 80109e4:	b2db      	uxtb	r3, r3
 80109e6:	fb15 f50b 	smulbb	r5, r5, fp
 80109ea:	fb1c fc0b 	smulbb	ip, ip, fp
 80109ee:	b292      	uxth	r2, r2
 80109f0:	fb04 5501 	mla	r5, r4, r1, r5
 80109f4:	fb03 cc01 	mla	ip, r3, r1, ip
 80109f8:	b2ad      	uxth	r5, r5
 80109fa:	fa1f fc8c 	uxth.w	ip, ip
 80109fe:	1c53      	adds	r3, r2, #1
 8010a00:	eb03 2212 	add.w	r2, r3, r2, lsr #8
 8010a04:	1c6c      	adds	r4, r5, #1
 8010a06:	f10c 0301 	add.w	r3, ip, #1
 8010a0a:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 8010a0e:	eb04 2515 	add.w	r5, r4, r5, lsr #8
 8010a12:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 8010a16:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8010a1a:	096d      	lsrs	r5, r5, #5
 8010a1c:	ea42 020c 	orr.w	r2, r2, ip
 8010a20:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8010a24:	432a      	orrs	r2, r5
 8010a26:	e7cc      	b.n	80109c2 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x136>
 8010a28:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8010a2a:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8010a2c:	881b      	ldrh	r3, [r3, #0]
 8010a2e:	1b9b      	subs	r3, r3, r6
 8010a30:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8010a34:	4418      	add	r0, r3
 8010a36:	f9bd 303c 	ldrsh.w	r3, [sp, #60]	; 0x3c
 8010a3a:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8010a3c:	1b9b      	subs	r3, r3, r6
 8010a3e:	4413      	add	r3, r2
 8010a40:	4499      	add	r9, r3
 8010a42:	f10e 0e01 	add.w	lr, lr, #1
 8010a46:	e79c      	b.n	8010982 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xf6>
 8010a48:	4b05      	ldr	r3, [pc, #20]	; (8010a60 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1d4>)
 8010a4a:	6818      	ldr	r0, [r3, #0]
 8010a4c:	6803      	ldr	r3, [r0, #0]
 8010a4e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8010a50:	4798      	blx	r3
 8010a52:	e77b      	b.n	801094c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xc0>
 8010a54:	0801c60b 	.word	0x0801c60b
 8010a58:	0801ccd5 	.word	0x0801ccd5
 8010a5c:	0801c801 	.word	0x0801c801
 8010a60:	2001218c 	.word	0x2001218c
 8010a64:	20012186 	.word	0x20012186
 8010a68:	fffff800 	.word	0xfffff800

08010a6c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>:
 8010a6c:	b430      	push	{r4, r5}
 8010a6e:	780d      	ldrb	r5, [r1, #0]
 8010a70:	f89d 4008 	ldrb.w	r4, [sp, #8]
 8010a74:	2d01      	cmp	r5, #1
 8010a76:	d00a      	beq.n	8010a8e <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x22>
 8010a78:	d305      	bcc.n	8010a86 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x1a>
 8010a7a:	2d02      	cmp	r5, #2
 8010a7c:	d10b      	bne.n	8010a96 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x2a>
 8010a7e:	9402      	str	r4, [sp, #8]
 8010a80:	bc30      	pop	{r4, r5}
 8010a82:	f7ff bdf9 	b.w	8010678 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>
 8010a86:	9402      	str	r4, [sp, #8]
 8010a88:	bc30      	pop	{r4, r5}
 8010a8a:	f7ff bcfd 	b.w	8010488 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>
 8010a8e:	9402      	str	r4, [sp, #8]
 8010a90:	bc30      	pop	{r4, r5}
 8010a92:	f7ff befb 	b.w	801088c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>
 8010a96:	bc30      	pop	{r4, r5}
 8010a98:	4770      	bx	lr
	...

08010a9c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>:
 8010a9c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010aa0:	4605      	mov	r5, r0
 8010aa2:	b089      	sub	sp, #36	; 0x24
 8010aa4:	6810      	ldr	r0, [r2, #0]
 8010aa6:	f89d 9048 	ldrb.w	r9, [sp, #72]	; 0x48
 8010aaa:	460c      	mov	r4, r1
 8010aac:	6851      	ldr	r1, [r2, #4]
 8010aae:	ae04      	add	r6, sp, #16
 8010ab0:	c603      	stmia	r6!, {r0, r1}
 8010ab2:	6818      	ldr	r0, [r3, #0]
 8010ab4:	6859      	ldr	r1, [r3, #4]
 8010ab6:	ae06      	add	r6, sp, #24
 8010ab8:	4617      	mov	r7, r2
 8010aba:	c603      	stmia	r6!, {r0, r1}
 8010abc:	a804      	add	r0, sp, #16
 8010abe:	f7fa fa5d 	bl	800af7c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8010ac2:	4639      	mov	r1, r7
 8010ac4:	a806      	add	r0, sp, #24
 8010ac6:	f7fa fa41 	bl	800af4c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8010aca:	f9bd 2018 	ldrsh.w	r2, [sp, #24]
 8010ace:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 8010ad2:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 8010ad6:	f9bd 801c 	ldrsh.w	r8, [sp, #28]
 8010ada:	fb11 2103 	smlabb	r1, r1, r3, r2
 8010ade:	eb05 0541 	add.w	r5, r5, r1, lsl #1
 8010ae2:	440c      	add	r4, r1
 8010ae4:	f8bd 1010 	ldrh.w	r1, [sp, #16]
 8010ae8:	440a      	add	r2, r1
 8010aea:	f8ad 2018 	strh.w	r2, [sp, #24]
 8010aee:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 8010af2:	4413      	add	r3, r2
 8010af4:	f8ad 301a 	strh.w	r3, [sp, #26]
 8010af8:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 8010afc:	9300      	str	r3, [sp, #0]
 8010afe:	4b80      	ldr	r3, [pc, #512]	; (8010d00 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x264>)
 8010b00:	6818      	ldr	r0, [r3, #0]
 8010b02:	6803      	ldr	r3, [r0, #0]
 8010b04:	6a1b      	ldr	r3, [r3, #32]
 8010b06:	4798      	blx	r3
 8010b08:	4b7e      	ldr	r3, [pc, #504]	; (8010d04 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x268>)
 8010b0a:	f9bd 601a 	ldrsh.w	r6, [sp, #26]
 8010b0e:	881a      	ldrh	r2, [r3, #0]
 8010b10:	f9bd 1018 	ldrsh.w	r1, [sp, #24]
 8010b14:	fb06 1202 	mla	r2, r6, r2, r1
 8010b18:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8010b1c:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8010b20:	ea28 72e8 	bic.w	r2, r8, r8, asr #31
 8010b24:	b212      	sxth	r2, r2
 8010b26:	d117      	bne.n	8010b58 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0xbc>
 8010b28:	9201      	str	r2, [sp, #4]
 8010b2a:	ea4f 0b42 	mov.w	fp, r2, lsl #1
 8010b2e:	f04f 0a00 	mov.w	sl, #0
 8010b32:	9302      	str	r3, [sp, #8]
 8010b34:	9b00      	ldr	r3, [sp, #0]
 8010b36:	459a      	cmp	sl, r3
 8010b38:	f280 80d9 	bge.w	8010cee <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x252>
 8010b3c:	2100      	movs	r1, #0
 8010b3e:	4541      	cmp	r1, r8
 8010b40:	f280 80c1 	bge.w	8010cc6 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x22a>
 8010b44:	5c63      	ldrb	r3, [r4, r1]
 8010b46:	b12b      	cbz	r3, 8010b54 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0xb8>
 8010b48:	2bff      	cmp	r3, #255	; 0xff
 8010b4a:	f835 e011 	ldrh.w	lr, [r5, r1, lsl #1]
 8010b4e:	d176      	bne.n	8010c3e <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x1a2>
 8010b50:	f820 e011 	strh.w	lr, [r0, r1, lsl #1]
 8010b54:	3101      	adds	r1, #1
 8010b56:	e7f2      	b.n	8010b3e <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0xa2>
 8010b58:	9202      	str	r2, [sp, #8]
 8010b5a:	0052      	lsls	r2, r2, #1
 8010b5c:	9201      	str	r2, [sp, #4]
 8010b5e:	f04f 0b00 	mov.w	fp, #0
 8010b62:	9303      	str	r3, [sp, #12]
 8010b64:	9b00      	ldr	r3, [sp, #0]
 8010b66:	459b      	cmp	fp, r3
 8010b68:	f280 80c1 	bge.w	8010cee <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x252>
 8010b6c:	f04f 0c00 	mov.w	ip, #0
 8010b70:	45c4      	cmp	ip, r8
 8010b72:	da4f      	bge.n	8010c14 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x178>
 8010b74:	f814 300c 	ldrb.w	r3, [r4, ip]
 8010b78:	2b00      	cmp	r3, #0
 8010b7a:	d048      	beq.n	8010c0e <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x172>
 8010b7c:	fb09 f303 	mul.w	r3, r9, r3
 8010b80:	1c5a      	adds	r2, r3, #1
 8010b82:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 8010b86:	121b      	asrs	r3, r3, #8
 8010b88:	d041      	beq.n	8010c0e <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x172>
 8010b8a:	f830 201c 	ldrh.w	r2, [r0, ip, lsl #1]
 8010b8e:	f835 e01c 	ldrh.w	lr, [r5, ip, lsl #1]
 8010b92:	b29e      	uxth	r6, r3
 8010b94:	1211      	asrs	r1, r2, #8
 8010b96:	43db      	mvns	r3, r3
 8010b98:	b2db      	uxtb	r3, r3
 8010b9a:	ea4f 272e 	mov.w	r7, lr, asr #8
 8010b9e:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8010ba2:	fb11 f103 	smulbb	r1, r1, r3
 8010ba6:	ea4f 0ae2 	mov.w	sl, r2, asr #3
 8010baa:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8010bae:	00d2      	lsls	r2, r2, #3
 8010bb0:	fb07 1706 	mla	r7, r7, r6, r1
 8010bb4:	b2d2      	uxtb	r2, r2
 8010bb6:	ea4f 01ee 	mov.w	r1, lr, asr #3
 8010bba:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8010bbe:	fb12 f203 	smulbb	r2, r2, r3
 8010bc2:	fa5f fe8e 	uxtb.w	lr, lr
 8010bc6:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 8010bca:	fb0e 2206 	mla	r2, lr, r6, r2
 8010bce:	fb1a fa03 	smulbb	sl, sl, r3
 8010bd2:	b2bf      	uxth	r7, r7
 8010bd4:	b292      	uxth	r2, r2
 8010bd6:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8010bda:	fb01 a106 	mla	r1, r1, r6, sl
 8010bde:	1c7b      	adds	r3, r7, #1
 8010be0:	f102 0a01 	add.w	sl, r2, #1
 8010be4:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 8010be8:	eb0a 2a12 	add.w	sl, sl, r2, lsr #8
 8010bec:	b289      	uxth	r1, r1
 8010bee:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8010bf2:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8010bf6:	ea47 070a 	orr.w	r7, r7, sl
 8010bfa:	f101 0a01 	add.w	sl, r1, #1
 8010bfe:	eb0a 2111 	add.w	r1, sl, r1, lsr #8
 8010c02:	0949      	lsrs	r1, r1, #5
 8010c04:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8010c08:	430f      	orrs	r7, r1
 8010c0a:	f820 701c 	strh.w	r7, [r0, ip, lsl #1]
 8010c0e:	f10c 0c01 	add.w	ip, ip, #1
 8010c12:	e7ad      	b.n	8010b70 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0xd4>
 8010c14:	9b03      	ldr	r3, [sp, #12]
 8010c16:	9a01      	ldr	r2, [sp, #4]
 8010c18:	881b      	ldrh	r3, [r3, #0]
 8010c1a:	eba3 0308 	sub.w	r3, r3, r8
 8010c1e:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8010c22:	4418      	add	r0, r3
 8010c24:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 8010c28:	eba3 0308 	sub.w	r3, r3, r8
 8010c2c:	eb02 0243 	add.w	r2, r2, r3, lsl #1
 8010c30:	4415      	add	r5, r2
 8010c32:	9a02      	ldr	r2, [sp, #8]
 8010c34:	4413      	add	r3, r2
 8010c36:	441c      	add	r4, r3
 8010c38:	f10b 0b01 	add.w	fp, fp, #1
 8010c3c:	e792      	b.n	8010b64 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0xc8>
 8010c3e:	f830 2011 	ldrh.w	r2, [r0, r1, lsl #1]
 8010c42:	b29f      	uxth	r7, r3
 8010c44:	1216      	asrs	r6, r2, #8
 8010c46:	43db      	mvns	r3, r3
 8010c48:	b2db      	uxtb	r3, r3
 8010c4a:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8010c4e:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8010c52:	fb16 f603 	smulbb	r6, r6, r3
 8010c56:	ea4f 09e2 	mov.w	r9, r2, asr #3
 8010c5a:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8010c5e:	00d2      	lsls	r2, r2, #3
 8010c60:	fb0c 6c07 	mla	ip, ip, r7, r6
 8010c64:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 8010c68:	ea4f 06ee 	mov.w	r6, lr, asr #3
 8010c6c:	b2d2      	uxtb	r2, r2
 8010c6e:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8010c72:	fa1f fc8c 	uxth.w	ip, ip
 8010c76:	fb19 f903 	smulbb	r9, r9, r3
 8010c7a:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8010c7e:	fa5f fe8e 	uxtb.w	lr, lr
 8010c82:	fb12 f203 	smulbb	r2, r2, r3
 8010c86:	fb06 9607 	mla	r6, r6, r7, r9
 8010c8a:	fb0e 2207 	mla	r2, lr, r7, r2
 8010c8e:	f10c 0901 	add.w	r9, ip, #1
 8010c92:	b292      	uxth	r2, r2
 8010c94:	eb09 2c1c 	add.w	ip, r9, ip, lsr #8
 8010c98:	f40c 4978 	and.w	r9, ip, #63488	; 0xf800
 8010c9c:	f102 0c01 	add.w	ip, r2, #1
 8010ca0:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 8010ca4:	b2b6      	uxth	r6, r6
 8010ca6:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8010caa:	ea49 0c02 	orr.w	ip, r9, r2
 8010cae:	f106 0901 	add.w	r9, r6, #1
 8010cb2:	eb09 2616 	add.w	r6, r9, r6, lsr #8
 8010cb6:	0976      	lsrs	r6, r6, #5
 8010cb8:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8010cbc:	ea4c 0c06 	orr.w	ip, ip, r6
 8010cc0:	f820 c011 	strh.w	ip, [r0, r1, lsl #1]
 8010cc4:	e746      	b.n	8010b54 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0xb8>
 8010cc6:	9b02      	ldr	r3, [sp, #8]
 8010cc8:	881b      	ldrh	r3, [r3, #0]
 8010cca:	eba3 0308 	sub.w	r3, r3, r8
 8010cce:	eb0b 0343 	add.w	r3, fp, r3, lsl #1
 8010cd2:	4418      	add	r0, r3
 8010cd4:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 8010cd8:	eba3 0308 	sub.w	r3, r3, r8
 8010cdc:	eb0b 0243 	add.w	r2, fp, r3, lsl #1
 8010ce0:	4415      	add	r5, r2
 8010ce2:	9a01      	ldr	r2, [sp, #4]
 8010ce4:	4413      	add	r3, r2
 8010ce6:	441c      	add	r4, r3
 8010ce8:	f10a 0a01 	add.w	sl, sl, #1
 8010cec:	e722      	b.n	8010b34 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x98>
 8010cee:	4b04      	ldr	r3, [pc, #16]	; (8010d00 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x264>)
 8010cf0:	6818      	ldr	r0, [r3, #0]
 8010cf2:	6803      	ldr	r3, [r0, #0]
 8010cf4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8010cf6:	4798      	blx	r3
 8010cf8:	b009      	add	sp, #36	; 0x24
 8010cfa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010cfe:	bf00      	nop
 8010d00:	2001218c 	.word	0x2001218c
 8010d04:	20012186 	.word	0x20012186

08010d08 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb>:
 8010d08:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010d0c:	b089      	sub	sp, #36	; 0x24
 8010d0e:	4682      	mov	sl, r0
 8010d10:	f89d 604c 	ldrb.w	r6, [sp, #76]	; 0x4c
 8010d14:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8010d16:	460d      	mov	r5, r1
 8010d18:	4691      	mov	r9, r2
 8010d1a:	4698      	mov	r8, r3
 8010d1c:	b3ae      	cbz	r6, 8010d8a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x82>
 8010d1e:	4608      	mov	r0, r1
 8010d20:	f7fc fa96 	bl	800d250 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8010d24:	4607      	mov	r7, r0
 8010d26:	4628      	mov	r0, r5
 8010d28:	f7fc facc 	bl	800d2c4 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8010d2c:	f8ad 000e 	strh.w	r0, [sp, #14]
 8010d30:	4628      	mov	r0, r5
 8010d32:	f8ad 9008 	strh.w	r9, [sp, #8]
 8010d36:	f8ad 800a 	strh.w	r8, [sp, #10]
 8010d3a:	f8ad 700c 	strh.w	r7, [sp, #12]
 8010d3e:	f7fc fc13 	bl	800d568 <_ZNK8touchgfx6Bitmap9getFormatEv>
 8010d42:	b178      	cbz	r0, 8010d64 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x5c>
 8010d44:	4628      	mov	r0, r5
 8010d46:	f7fc fc0f 	bl	800d568 <_ZNK8touchgfx6Bitmap9getFormatEv>
 8010d4a:	2802      	cmp	r0, #2
 8010d4c:	d00a      	beq.n	8010d64 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x5c>
 8010d4e:	4628      	mov	r0, r5
 8010d50:	f7fc fc0a 	bl	800d568 <_ZNK8touchgfx6Bitmap9getFormatEv>
 8010d54:	280b      	cmp	r0, #11
 8010d56:	d005      	beq.n	8010d64 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x5c>
 8010d58:	4b69      	ldr	r3, [pc, #420]	; (8010f00 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1f8>)
 8010d5a:	4a6a      	ldr	r2, [pc, #424]	; (8010f04 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1fc>)
 8010d5c:	486a      	ldr	r0, [pc, #424]	; (8010f08 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x200>)
 8010d5e:	214b      	movs	r1, #75	; 0x4b
 8010d60:	f007 ff44 	bl	8018bec <__assert_func>
 8010d64:	4628      	mov	r0, r5
 8010d66:	f7fc fb7b 	bl	800d460 <_ZNK8touchgfx6Bitmap7getDataEv>
 8010d6a:	4607      	mov	r7, r0
 8010d6c:	4628      	mov	r0, r5
 8010d6e:	f7fc fba9 	bl	800d4c4 <_ZNK8touchgfx6Bitmap12getExtraDataEv>
 8010d72:	4681      	mov	r9, r0
 8010d74:	4628      	mov	r0, r5
 8010d76:	f7fc fbf7 	bl	800d568 <_ZNK8touchgfx6Bitmap9getFormatEv>
 8010d7a:	2802      	cmp	r0, #2
 8010d7c:	d108      	bne.n	8010d90 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x88>
 8010d7e:	4633      	mov	r3, r6
 8010d80:	4622      	mov	r2, r4
 8010d82:	a902      	add	r1, sp, #8
 8010d84:	4638      	mov	r0, r7
 8010d86:	f7ff fa6d 	bl	8010264 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 8010d8a:	b009      	add	sp, #36	; 0x24
 8010d8c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010d90:	4628      	mov	r0, r5
 8010d92:	f7fc fbe9 	bl	800d568 <_ZNK8touchgfx6Bitmap9getFormatEv>
 8010d96:	280b      	cmp	r0, #11
 8010d98:	d107      	bne.n	8010daa <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xa2>
 8010d9a:	9600      	str	r6, [sp, #0]
 8010d9c:	4623      	mov	r3, r4
 8010d9e:	aa02      	add	r2, sp, #8
 8010da0:	4649      	mov	r1, r9
 8010da2:	4638      	mov	r0, r7
 8010da4:	f7ff fe62 	bl	8010a6c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>
 8010da8:	e7ef      	b.n	8010d8a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x82>
 8010daa:	4628      	mov	r0, r5
 8010dac:	f7fc fb1e 	bl	800d3ec <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 8010db0:	b950      	cbnz	r0, 8010dc8 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xc0>
 8010db2:	e9cd 6000 	strd	r6, r0, [sp]
 8010db6:	f8da 3000 	ldr.w	r3, [sl]
 8010dba:	aa02      	add	r2, sp, #8
 8010dbc:	68dd      	ldr	r5, [r3, #12]
 8010dbe:	4639      	mov	r1, r7
 8010dc0:	4623      	mov	r3, r4
 8010dc2:	4650      	mov	r0, sl
 8010dc4:	47a8      	blx	r5
 8010dc6:	e7e0      	b.n	8010d8a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x82>
 8010dc8:	f10d 0818 	add.w	r8, sp, #24
 8010dcc:	4629      	mov	r1, r5
 8010dce:	4640      	mov	r0, r8
 8010dd0:	f7fc fab2 	bl	800d338 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 8010dd4:	e898 0003 	ldmia.w	r8, {r0, r1}
 8010dd8:	ad04      	add	r5, sp, #16
 8010dda:	e885 0003 	stmia.w	r5, {r0, r1}
 8010dde:	4628      	mov	r0, r5
 8010de0:	4621      	mov	r1, r4
 8010de2:	f7f7 fc2f 	bl	8008644 <_ZN8touchgfx4RectaNERKS0_>
 8010de6:	4628      	mov	r0, r5
 8010de8:	f7f7 fc6f 	bl	80086ca <_ZNK8touchgfx4Rect7isEmptyEv>
 8010dec:	b138      	cbz	r0, 8010dfe <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xf6>
 8010dee:	9600      	str	r6, [sp, #0]
 8010df0:	4623      	mov	r3, r4
 8010df2:	aa02      	add	r2, sp, #8
 8010df4:	4649      	mov	r1, r9
 8010df6:	4638      	mov	r0, r7
 8010df8:	f7ff fe50 	bl	8010a9c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 8010dfc:	e7c5      	b.n	8010d8a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x82>
 8010dfe:	e9cd 6000 	strd	r6, r0, [sp]
 8010e02:	f8da 3000 	ldr.w	r3, [sl]
 8010e06:	aa02      	add	r2, sp, #8
 8010e08:	f8d3 b00c 	ldr.w	fp, [r3, #12]
 8010e0c:	4639      	mov	r1, r7
 8010e0e:	462b      	mov	r3, r5
 8010e10:	4650      	mov	r0, sl
 8010e12:	47d8      	blx	fp
 8010e14:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8010e18:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 8010e1c:	4293      	cmp	r3, r2
 8010e1e:	dd13      	ble.n	8010e48 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x140>
 8010e20:	f9b4 0000 	ldrsh.w	r0, [r4]
 8010e24:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8010e28:	f8ad 0018 	strh.w	r0, [sp, #24]
 8010e2c:	1a9b      	subs	r3, r3, r2
 8010e2e:	f8ad 201a 	strh.w	r2, [sp, #26]
 8010e32:	f8ad 101c 	strh.w	r1, [sp, #28]
 8010e36:	f8ad 301e 	strh.w	r3, [sp, #30]
 8010e3a:	9600      	str	r6, [sp, #0]
 8010e3c:	4643      	mov	r3, r8
 8010e3e:	aa02      	add	r2, sp, #8
 8010e40:	4649      	mov	r1, r9
 8010e42:	4638      	mov	r0, r7
 8010e44:	f7ff fe2a 	bl	8010a9c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 8010e48:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 8010e4c:	f9b4 2000 	ldrsh.w	r2, [r4]
 8010e50:	4293      	cmp	r3, r2
 8010e52:	dd13      	ble.n	8010e7c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x174>
 8010e54:	1a9b      	subs	r3, r3, r2
 8010e56:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 8010e5a:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 8010e5e:	f8ad 2018 	strh.w	r2, [sp, #24]
 8010e62:	f8ad 001a 	strh.w	r0, [sp, #26]
 8010e66:	f8ad 301c 	strh.w	r3, [sp, #28]
 8010e6a:	f8ad 101e 	strh.w	r1, [sp, #30]
 8010e6e:	9600      	str	r6, [sp, #0]
 8010e70:	4643      	mov	r3, r8
 8010e72:	aa02      	add	r2, sp, #8
 8010e74:	4649      	mov	r1, r9
 8010e76:	4638      	mov	r0, r7
 8010e78:	f7ff fe10 	bl	8010a9c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 8010e7c:	88a2      	ldrh	r2, [r4, #4]
 8010e7e:	8823      	ldrh	r3, [r4, #0]
 8010e80:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 8010e84:	4413      	add	r3, r2
 8010e86:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 8010e8a:	440a      	add	r2, r1
 8010e8c:	b29b      	uxth	r3, r3
 8010e8e:	b292      	uxth	r2, r2
 8010e90:	b211      	sxth	r1, r2
 8010e92:	b218      	sxth	r0, r3
 8010e94:	4288      	cmp	r0, r1
 8010e96:	dd13      	ble.n	8010ec0 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1b8>
 8010e98:	1a9b      	subs	r3, r3, r2
 8010e9a:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 8010e9e:	f9bd 5012 	ldrsh.w	r5, [sp, #18]
 8010ea2:	f8ad 1018 	strh.w	r1, [sp, #24]
 8010ea6:	f8ad 301c 	strh.w	r3, [sp, #28]
 8010eaa:	f8ad 001e 	strh.w	r0, [sp, #30]
 8010eae:	9600      	str	r6, [sp, #0]
 8010eb0:	4643      	mov	r3, r8
 8010eb2:	aa02      	add	r2, sp, #8
 8010eb4:	4649      	mov	r1, r9
 8010eb6:	4638      	mov	r0, r7
 8010eb8:	f8ad 501a 	strh.w	r5, [sp, #26]
 8010ebc:	f7ff fdee 	bl	8010a9c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 8010ec0:	88e2      	ldrh	r2, [r4, #6]
 8010ec2:	8863      	ldrh	r3, [r4, #2]
 8010ec4:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 8010ec8:	4413      	add	r3, r2
 8010eca:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 8010ece:	440a      	add	r2, r1
 8010ed0:	b29b      	uxth	r3, r3
 8010ed2:	b292      	uxth	r2, r2
 8010ed4:	b211      	sxth	r1, r2
 8010ed6:	b218      	sxth	r0, r3
 8010ed8:	4288      	cmp	r0, r1
 8010eda:	f77f af56 	ble.w	8010d8a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x82>
 8010ede:	f9b4 5000 	ldrsh.w	r5, [r4]
 8010ee2:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8010ee6:	f8ad 5018 	strh.w	r5, [sp, #24]
 8010eea:	1a9b      	subs	r3, r3, r2
 8010eec:	f8ad 301e 	strh.w	r3, [sp, #30]
 8010ef0:	f8ad 101a 	strh.w	r1, [sp, #26]
 8010ef4:	f8ad 001c 	strh.w	r0, [sp, #28]
 8010ef8:	9600      	str	r6, [sp, #0]
 8010efa:	4643      	mov	r3, r8
 8010efc:	e779      	b.n	8010df2 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xea>
 8010efe:	bf00      	nop
 8010f00:	0801c659 	.word	0x0801c659
 8010f04:	0801cd5e 	.word	0x0801cd5e
 8010f08:	0801c801 	.word	0x0801c801

08010f0c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>:
 8010f0c:	b508      	push	{r3, lr}
 8010f0e:	b180      	cbz	r0, 8010f32 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x26>
 8010f10:	2902      	cmp	r1, #2
 8010f12:	d014      	beq.n	8010f3e <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x32>
 8010f14:	2903      	cmp	r1, #3
 8010f16:	d01d      	beq.n	8010f54 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x48>
 8010f18:	2901      	cmp	r1, #1
 8010f1a:	d101      	bne.n	8010f20 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x14>
 8010f1c:	2001      	movs	r0, #1
 8010f1e:	bd08      	pop	{r3, pc}
 8010f20:	4b0e      	ldr	r3, [pc, #56]	; (8010f5c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 8010f22:	8818      	ldrh	r0, [r3, #0]
 8010f24:	b990      	cbnz	r0, 8010f4c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 8010f26:	4b0e      	ldr	r3, [pc, #56]	; (8010f60 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x54>)
 8010f28:	4a0e      	ldr	r2, [pc, #56]	; (8010f64 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x58>)
 8010f2a:	480f      	ldr	r0, [pc, #60]	; (8010f68 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x5c>)
 8010f2c:	2154      	movs	r1, #84	; 0x54
 8010f2e:	f007 fe5d 	bl	8018bec <__assert_func>
 8010f32:	2902      	cmp	r1, #2
 8010f34:	d00e      	beq.n	8010f54 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x48>
 8010f36:	2903      	cmp	r1, #3
 8010f38:	d0f2      	beq.n	8010f20 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x14>
 8010f3a:	2901      	cmp	r1, #1
 8010f3c:	d1ee      	bne.n	8010f1c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x10>
 8010f3e:	4b07      	ldr	r3, [pc, #28]	; (8010f5c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 8010f40:	8818      	ldrh	r0, [r3, #0]
 8010f42:	2800      	cmp	r0, #0
 8010f44:	d0ef      	beq.n	8010f26 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x1a>
 8010f46:	f3c0 000e 	ubfx	r0, r0, #0, #15
 8010f4a:	e7e8      	b.n	8010f1e <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x12>
 8010f4c:	f3c0 000e 	ubfx	r0, r0, #0, #15
 8010f50:	4240      	negs	r0, r0
 8010f52:	e7e4      	b.n	8010f1e <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x12>
 8010f54:	f04f 30ff 	mov.w	r0, #4294967295
 8010f58:	e7e1      	b.n	8010f1e <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x12>
 8010f5a:	bf00      	nop
 8010f5c:	20012186 	.word	0x20012186
 8010f60:	0801c95b 	.word	0x0801c95b
 8010f64:	0801cedb 	.word	0x0801cedb
 8010f68:	0801c99d 	.word	0x0801c99d

08010f6c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>:
 8010f6c:	b508      	push	{r3, lr}
 8010f6e:	b180      	cbz	r0, 8010f92 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x26>
 8010f70:	2902      	cmp	r1, #2
 8010f72:	d014      	beq.n	8010f9e <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x32>
 8010f74:	2903      	cmp	r1, #3
 8010f76:	d018      	beq.n	8010faa <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x3e>
 8010f78:	2901      	cmp	r1, #1
 8010f7a:	d001      	beq.n	8010f80 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x14>
 8010f7c:	2001      	movs	r0, #1
 8010f7e:	e013      	b.n	8010fa8 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x3c>
 8010f80:	4b0e      	ldr	r3, [pc, #56]	; (8010fbc <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 8010f82:	8818      	ldrh	r0, [r3, #0]
 8010f84:	b970      	cbnz	r0, 8010fa4 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x38>
 8010f86:	4b0e      	ldr	r3, [pc, #56]	; (8010fc0 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x54>)
 8010f88:	4a0e      	ldr	r2, [pc, #56]	; (8010fc4 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x58>)
 8010f8a:	480f      	ldr	r0, [pc, #60]	; (8010fc8 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x5c>)
 8010f8c:	2154      	movs	r1, #84	; 0x54
 8010f8e:	f007 fe2d 	bl	8018bec <__assert_func>
 8010f92:	2902      	cmp	r1, #2
 8010f94:	d009      	beq.n	8010faa <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x3e>
 8010f96:	2903      	cmp	r1, #3
 8010f98:	d0f0      	beq.n	8010f7c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x10>
 8010f9a:	2901      	cmp	r1, #1
 8010f9c:	d1f0      	bne.n	8010f80 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x14>
 8010f9e:	f04f 30ff 	mov.w	r0, #4294967295
 8010fa2:	e001      	b.n	8010fa8 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x3c>
 8010fa4:	f3c0 000e 	ubfx	r0, r0, #0, #15
 8010fa8:	bd08      	pop	{r3, pc}
 8010faa:	4b04      	ldr	r3, [pc, #16]	; (8010fbc <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 8010fac:	8818      	ldrh	r0, [r3, #0]
 8010fae:	2800      	cmp	r0, #0
 8010fb0:	d0e9      	beq.n	8010f86 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x1a>
 8010fb2:	f3c0 000e 	ubfx	r0, r0, #0, #15
 8010fb6:	4240      	negs	r0, r0
 8010fb8:	e7f6      	b.n	8010fa8 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x3c>
 8010fba:	bf00      	nop
 8010fbc:	20012186 	.word	0x20012186
 8010fc0:	0801c95b 	.word	0x0801c95b
 8010fc4:	0801cedb 	.word	0x0801cedb
 8010fc8:	0801c99d 	.word	0x0801c99d

08010fcc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE>:
 8010fcc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010fd0:	b097      	sub	sp, #92	; 0x5c
 8010fd2:	910a      	str	r1, [sp, #40]	; 0x28
 8010fd4:	a912      	add	r1, sp, #72	; 0x48
 8010fd6:	e881 000c 	stmia.w	r1, {r2, r3}
 8010fda:	f9bd 3084 	ldrsh.w	r3, [sp, #132]	; 0x84
 8010fde:	9307      	str	r3, [sp, #28]
 8010fe0:	e9dd 2124 	ldrd	r2, r1, [sp, #144]	; 0x90
 8010fe4:	f89d 309c 	ldrb.w	r3, [sp, #156]	; 0x9c
 8010fe8:	930f      	str	r3, [sp, #60]	; 0x3c
 8010fea:	f89d 30a8 	ldrb.w	r3, [sp, #168]	; 0xa8
 8010fee:	930b      	str	r3, [sp, #44]	; 0x2c
 8010ff0:	7b4b      	ldrb	r3, [r1, #13]
 8010ff2:	798d      	ldrb	r5, [r1, #6]
 8010ff4:	f9bd 6080 	ldrsh.w	r6, [sp, #128]	; 0x80
 8010ff8:	f8bd 7088 	ldrh.w	r7, [sp, #136]	; 0x88
 8010ffc:	f8bd 408c 	ldrh.w	r4, [sp, #140]	; 0x8c
 8011000:	f89d 80a4 	ldrb.w	r8, [sp, #164]	; 0xa4
 8011004:	f89d 90ac 	ldrb.w	r9, [sp, #172]	; 0xac
 8011008:	0158      	lsls	r0, r3, #5
 801100a:	f400 7080 	and.w	r0, r0, #256	; 0x100
 801100e:	4328      	orrs	r0, r5
 8011010:	9006      	str	r0, [sp, #24]
 8011012:	f000 8156 	beq.w	80112c2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2f6>
 8011016:	011b      	lsls	r3, r3, #4
 8011018:	79c8      	ldrb	r0, [r1, #7]
 801101a:	f403 7380 	and.w	r3, r3, #256	; 0x100
 801101e:	4303      	orrs	r3, r0
 8011020:	9308      	str	r3, [sp, #32]
 8011022:	f000 814e 	beq.w	80112c2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2f6>
 8011026:	f991 3009 	ldrsb.w	r3, [r1, #9]
 801102a:	b29b      	uxth	r3, r3
 801102c:	2f00      	cmp	r7, #0
 801102e:	f000 80f2 	beq.w	8011216 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x24a>
 8011032:	1aff      	subs	r7, r7, r3
 8011034:	b2bf      	uxth	r7, r7
 8011036:	043b      	lsls	r3, r7, #16
 8011038:	d502      	bpl.n	8011040 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x74>
 801103a:	1bf6      	subs	r6, r6, r7
 801103c:	b236      	sxth	r6, r6
 801103e:	2700      	movs	r7, #0
 8011040:	f9b2 1000 	ldrsh.w	r1, [r2]
 8011044:	f8b2 a002 	ldrh.w	sl, [r2, #2]
 8011048:	f8bd 5018 	ldrh.w	r5, [sp, #24]
 801104c:	428e      	cmp	r6, r1
 801104e:	b28b      	uxth	r3, r1
 8011050:	bfbf      	itttt	lt
 8011052:	18ff      	addlt	r7, r7, r3
 8011054:	1bbe      	sublt	r6, r7, r6
 8011056:	b2b7      	uxthlt	r7, r6
 8011058:	460e      	movlt	r6, r1
 801105a:	8891      	ldrh	r1, [r2, #4]
 801105c:	440b      	add	r3, r1
 801105e:	b21b      	sxth	r3, r3
 8011060:	930e      	str	r3, [sp, #56]	; 0x38
 8011062:	88d3      	ldrh	r3, [r2, #6]
 8011064:	9a07      	ldr	r2, [sp, #28]
 8011066:	449a      	add	sl, r3
 8011068:	fa0f f38a 	sxth.w	r3, sl
 801106c:	930d      	str	r3, [sp, #52]	; 0x34
 801106e:	4bbc      	ldr	r3, [pc, #752]	; (8011360 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x394>)
 8011070:	f8bd a020 	ldrh.w	sl, [sp, #32]
 8011074:	f893 b000 	ldrb.w	fp, [r3]
 8011078:	f10b 3cff 	add.w	ip, fp, #4294967295
 801107c:	f1dc 0300 	rsbs	r3, ip, #0
 8011080:	eb43 030c 	adc.w	r3, r3, ip
 8011084:	930c      	str	r3, [sp, #48]	; 0x30
 8011086:	4631      	mov	r1, r6
 8011088:	464b      	mov	r3, r9
 801108a:	a812      	add	r0, sp, #72	; 0x48
 801108c:	f7f9 fe4e 	bl	800ad2c <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>
 8011090:	4631      	mov	r1, r6
 8011092:	f8ad 0054 	strh.w	r0, [sp, #84]	; 0x54
 8011096:	464b      	mov	r3, r9
 8011098:	9a07      	ldr	r2, [sp, #28]
 801109a:	a812      	add	r0, sp, #72	; 0x48
 801109c:	f7f9 fe5e 	bl	800ad5c <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>
 80110a0:	a916      	add	r1, sp, #88	; 0x58
 80110a2:	f821 0d02 	strh.w	r0, [r1, #-2]!
 80110a6:	a815      	add	r0, sp, #84	; 0x54
 80110a8:	f7f9 ff3a 	bl	800af20 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>
 80110ac:	f1b9 0f00 	cmp.w	r9, #0
 80110b0:	f040 80b4 	bne.w	801121c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x250>
 80110b4:	f1bb 0f01 	cmp.w	fp, #1
 80110b8:	f040 80b8 	bne.w	801122c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x260>
 80110bc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80110be:	2b00      	cmp	r3, #0
 80110c0:	f040 8104 	bne.w	80112cc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x300>
 80110c4:	4ba7      	ldr	r3, [pc, #668]	; (8011364 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x398>)
 80110c6:	6818      	ldr	r0, [r3, #0]
 80110c8:	6803      	ldr	r3, [r0, #0]
 80110ca:	6a1b      	ldr	r3, [r3, #32]
 80110cc:	4798      	blx	r3
 80110ce:	4aa6      	ldr	r2, [pc, #664]	; (8011368 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x39c>)
 80110d0:	f9bd 3056 	ldrsh.w	r3, [sp, #86]	; 0x56
 80110d4:	8811      	ldrh	r1, [r2, #0]
 80110d6:	f9bd 2054 	ldrsh.w	r2, [sp, #84]	; 0x54
 80110da:	fb01 2303 	mla	r3, r1, r3, r2
 80110de:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 80110e2:	9308      	str	r3, [sp, #32]
 80110e4:	2301      	movs	r3, #1
 80110e6:	fa03 f308 	lsl.w	r3, r3, r8
 80110ea:	3b01      	subs	r3, #1
 80110ec:	b2db      	uxtb	r3, r3
 80110ee:	f1b8 0f01 	cmp.w	r8, #1
 80110f2:	9310      	str	r3, [sp, #64]	; 0x40
 80110f4:	f000 80ec 	beq.w	80112d0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x304>
 80110f8:	f1b8 0f02 	cmp.w	r8, #2
 80110fc:	f000 80ea 	beq.w	80112d4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x308>
 8011100:	f1b8 0f04 	cmp.w	r8, #4
 8011104:	bf14      	ite	ne
 8011106:	2301      	movne	r3, #1
 8011108:	2311      	moveq	r3, #17
 801110a:	9309      	str	r3, [sp, #36]	; 0x24
 801110c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801110e:	b153      	cbz	r3, 8011126 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x15a>
 8011110:	9a06      	ldr	r2, [sp, #24]
 8011112:	2508      	movs	r5, #8
 8011114:	fb95 f3f8 	sdiv	r3, r5, r8
 8011118:	1e5d      	subs	r5, r3, #1
 801111a:	4415      	add	r5, r2
 801111c:	fb95 f5f3 	sdiv	r5, r5, r3
 8011120:	fb15 f503 	smulbb	r5, r5, r3
 8011124:	b2ad      	uxth	r5, r5
 8011126:	b907      	cbnz	r7, 801112a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x15e>
 8011128:	b16c      	cbz	r4, 8011146 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x17a>
 801112a:	fb04 7305 	mla	r3, r4, r5, r7
 801112e:	9a26      	ldr	r2, [sp, #152]	; 0x98
 8011130:	fb08 f303 	mul.w	r3, r8, r3
 8011134:	ebaa 0a04 	sub.w	sl, sl, r4
 8011138:	eb02 02d3 	add.w	r2, r2, r3, lsr #3
 801113c:	9226      	str	r2, [sp, #152]	; 0x98
 801113e:	fa1f fa8a 	uxth.w	sl, sl
 8011142:	f003 0407 	and.w	r4, r3, #7
 8011146:	4649      	mov	r1, r9
 8011148:	980c      	ldr	r0, [sp, #48]	; 0x30
 801114a:	f7ff fedf 	bl	8010f0c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>
 801114e:	4649      	mov	r1, r9
 8011150:	4683      	mov	fp, r0
 8011152:	980c      	ldr	r0, [sp, #48]	; 0x30
 8011154:	f7ff ff0a 	bl	8010f6c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>
 8011158:	9a07      	ldr	r2, [sp, #28]
 801115a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801115c:	1a9b      	subs	r3, r3, r2
 801115e:	459a      	cmp	sl, r3
 8011160:	bfa8      	it	ge
 8011162:	469a      	movge	sl, r3
 8011164:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8011166:	1bf6      	subs	r6, r6, r7
 8011168:	1b9e      	subs	r6, r3, r6
 801116a:	9b06      	ldr	r3, [sp, #24]
 801116c:	429e      	cmp	r6, r3
 801116e:	bfd4      	ite	le
 8011170:	ebc7 0706 	rsble	r7, r7, r6
 8011174:	ebc7 0703 	rsbgt	r7, r7, r3
 8011178:	1bed      	subs	r5, r5, r7
 801117a:	fb08 f305 	mul.w	r3, r8, r5
 801117e:	9307      	str	r3, [sp, #28]
 8011180:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8011182:	781a      	ldrb	r2, [r3, #0]
 8011184:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8011186:	0a1b      	lsrs	r3, r3, #8
 8011188:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 801118c:	930d      	str	r3, [sp, #52]	; 0x34
 801118e:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8011190:	08db      	lsrs	r3, r3, #3
 8011192:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 8011196:	930e      	str	r3, [sp, #56]	; 0x38
 8011198:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801119a:	00db      	lsls	r3, r3, #3
 801119c:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 80111a0:	930f      	str	r3, [sp, #60]	; 0x3c
 80111a2:	ea4f 034b 	mov.w	r3, fp, lsl #1
 80111a6:	fb0b 0b17 	mls	fp, fp, r7, r0
 80111aa:	ea27 70e7 	bic.w	r0, r7, r7, asr #31
 80111ae:	4358      	muls	r0, r3
 80111b0:	9306      	str	r3, [sp, #24]
 80111b2:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80111b4:	4122      	asrs	r2, r4
 80111b6:	b29b      	uxth	r3, r3
 80111b8:	b2d2      	uxtb	r2, r2
 80111ba:	9311      	str	r3, [sp, #68]	; 0x44
 80111bc:	eb00 0b4b 	add.w	fp, r0, fp, lsl #1
 80111c0:	f1ba 0f00 	cmp.w	sl, #0
 80111c4:	f340 80e5 	ble.w	8011392 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3c6>
 80111c8:	f8dd c020 	ldr.w	ip, [sp, #32]
 80111cc:	46be      	mov	lr, r7
 80111ce:	f1be 0f00 	cmp.w	lr, #0
 80111d2:	f340 80cb 	ble.w	801136c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a0>
 80111d6:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80111d8:	4013      	ands	r3, r2
 80111da:	d00a      	beq.n	80111f2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x226>
 80111dc:	9909      	ldr	r1, [sp, #36]	; 0x24
 80111de:	fb13 f301 	smulbb	r3, r3, r1
 80111e2:	2bfe      	cmp	r3, #254	; 0xfe
 80111e4:	dd78      	ble.n	80112d8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x30c>
 80111e6:	990b      	ldr	r1, [sp, #44]	; 0x2c
 80111e8:	29ff      	cmp	r1, #255	; 0xff
 80111ea:	d175      	bne.n	80112d8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x30c>
 80111ec:	9811      	ldr	r0, [sp, #68]	; 0x44
 80111ee:	f8ac 0000 	strh.w	r0, [ip]
 80111f2:	4444      	add	r4, r8
 80111f4:	b2a4      	uxth	r4, r4
 80111f6:	2c07      	cmp	r4, #7
 80111f8:	bf81      	itttt	hi
 80111fa:	9b26      	ldrhi	r3, [sp, #152]	; 0x98
 80111fc:	785a      	ldrbhi	r2, [r3, #1]
 80111fe:	3301      	addhi	r3, #1
 8011200:	9326      	strhi	r3, [sp, #152]	; 0x98
 8011202:	9b06      	ldr	r3, [sp, #24]
 8011204:	bf9a      	itte	ls
 8011206:	fa42 f208 	asrls.w	r2, r2, r8
 801120a:	b2d2      	uxtbls	r2, r2
 801120c:	2400      	movhi	r4, #0
 801120e:	449c      	add	ip, r3
 8011210:	f10e 3eff 	add.w	lr, lr, #4294967295
 8011214:	e7db      	b.n	80111ce <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x202>
 8011216:	441e      	add	r6, r3
 8011218:	b236      	sxth	r6, r6
 801121a:	e711      	b.n	8011040 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x74>
 801121c:	f1b9 0f01 	cmp.w	r9, #1
 8011220:	f47f af4c 	bne.w	80110bc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf0>
 8011224:	f1bb 0f01 	cmp.w	fp, #1
 8011228:	f47f af48 	bne.w	80110bc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf0>
 801122c:	f8df b134 	ldr.w	fp, [pc, #308]	; 8011364 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x398>
 8011230:	f8db 0000 	ldr.w	r0, [fp]
 8011234:	6803      	ldr	r3, [r0, #0]
 8011236:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8011238:	4798      	blx	r3
 801123a:	f010 0380 	ands.w	r3, r0, #128	; 0x80
 801123e:	465a      	mov	r2, fp
 8011240:	d006      	beq.n	8011250 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x284>
 8011242:	f1b8 0f04 	cmp.w	r8, #4
 8011246:	d13f      	bne.n	80112c8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2fc>
 8011248:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801124a:	3300      	adds	r3, #0
 801124c:	bf18      	it	ne
 801124e:	2301      	movne	r3, #1
 8011250:	05c0      	lsls	r0, r0, #23
 8011252:	f140 80a7 	bpl.w	80113a4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3d8>
 8011256:	f1b8 0f08 	cmp.w	r8, #8
 801125a:	f040 80a3 	bne.w	80113a4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3d8>
 801125e:	2b00      	cmp	r3, #0
 8011260:	bf0c      	ite	eq
 8011262:	f44f 7180 	moveq.w	r1, #256	; 0x100
 8011266:	2180      	movne	r1, #128	; 0x80
 8011268:	2f00      	cmp	r7, #0
 801126a:	f47f af27 	bne.w	80110bc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf0>
 801126e:	2c00      	cmp	r4, #0
 8011270:	f47f af24 	bne.w	80110bc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf0>
 8011274:	9b06      	ldr	r3, [sp, #24]
 8011276:	980e      	ldr	r0, [sp, #56]	; 0x38
 8011278:	18f3      	adds	r3, r6, r3
 801127a:	4283      	cmp	r3, r0
 801127c:	f73f af1e 	bgt.w	80110bc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf0>
 8011280:	e9dd 0307 	ldrd	r0, r3, [sp, #28]
 8011284:	4403      	add	r3, r0
 8011286:	980d      	ldr	r0, [sp, #52]	; 0x34
 8011288:	4283      	cmp	r3, r0
 801128a:	f73f af17 	bgt.w	80110bc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf0>
 801128e:	6810      	ldr	r0, [r2, #0]
 8011290:	f8bd 3056 	ldrh.w	r3, [sp, #86]	; 0x56
 8011294:	6804      	ldr	r4, [r0, #0]
 8011296:	9105      	str	r1, [sp, #20]
 8011298:	f1b8 0f08 	cmp.w	r8, #8
 801129c:	bf18      	it	ne
 801129e:	3501      	addne	r5, #1
 80112a0:	990b      	ldr	r1, [sp, #44]	; 0x2c
 80112a2:	9104      	str	r1, [sp, #16]
 80112a4:	bf18      	it	ne
 80112a6:	f025 0501 	bicne.w	r5, r5, #1
 80112aa:	9928      	ldr	r1, [sp, #160]	; 0xa0
 80112ac:	f8bd 2054 	ldrh.w	r2, [sp, #84]	; 0x54
 80112b0:	bf18      	it	ne
 80112b2:	b2ad      	uxthne	r5, r5
 80112b4:	e9cd 5102 	strd	r5, r1, [sp, #8]
 80112b8:	e9cd 5a00 	strd	r5, sl, [sp]
 80112bc:	9926      	ldr	r1, [sp, #152]	; 0x98
 80112be:	6c24      	ldr	r4, [r4, #64]	; 0x40
 80112c0:	47a0      	blx	r4
 80112c2:	b017      	add	sp, #92	; 0x5c
 80112c4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80112c8:	2300      	movs	r3, #0
 80112ca:	e7c1      	b.n	8011250 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x284>
 80112cc:	980a      	ldr	r0, [sp, #40]	; 0x28
 80112ce:	e6fe      	b.n	80110ce <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x102>
 80112d0:	23ff      	movs	r3, #255	; 0xff
 80112d2:	e71a      	b.n	801110a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x13e>
 80112d4:	2355      	movs	r3, #85	; 0x55
 80112d6:	e718      	b.n	801110a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x13e>
 80112d8:	990b      	ldr	r1, [sp, #44]	; 0x2c
 80112da:	f8bc 5000 	ldrh.w	r5, [ip]
 80112de:	fb11 f303 	smulbb	r3, r1, r3
 80112e2:	b29b      	uxth	r3, r3
 80112e4:	1c59      	adds	r1, r3, #1
 80112e6:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 80112ea:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80112ee:	990d      	ldr	r1, [sp, #52]	; 0x34
 80112f0:	b29e      	uxth	r6, r3
 80112f2:	1228      	asrs	r0, r5, #8
 80112f4:	43db      	mvns	r3, r3
 80112f6:	b2db      	uxtb	r3, r3
 80112f8:	fb11 f106 	smulbb	r1, r1, r6
 80112fc:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8011300:	fb00 1003 	mla	r0, r0, r3, r1
 8011304:	b281      	uxth	r1, r0
 8011306:	980e      	ldr	r0, [sp, #56]	; 0x38
 8011308:	910c      	str	r1, [sp, #48]	; 0x30
 801130a:	fb16 f900 	smulbb	r9, r6, r0
 801130e:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8011310:	10e9      	asrs	r1, r5, #3
 8011312:	00ed      	lsls	r5, r5, #3
 8011314:	fb16 f600 	smulbb	r6, r6, r0
 8011318:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801131c:	b2ed      	uxtb	r5, r5
 801131e:	fb01 9103 	mla	r1, r1, r3, r9
 8011322:	fb05 6603 	mla	r6, r5, r3, r6
 8011326:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8011328:	980c      	ldr	r0, [sp, #48]	; 0x30
 801132a:	b2b6      	uxth	r6, r6
 801132c:	3301      	adds	r3, #1
 801132e:	f106 0901 	add.w	r9, r6, #1
 8011332:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8011336:	eb09 2916 	add.w	r9, r9, r6, lsr #8
 801133a:	b289      	uxth	r1, r1
 801133c:	f3c9 29c4 	ubfx	r9, r9, #11, #5
 8011340:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 8011344:	ea40 0009 	orr.w	r0, r0, r9
 8011348:	f101 0901 	add.w	r9, r1, #1
 801134c:	eb09 2911 	add.w	r9, r9, r1, lsr #8
 8011350:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8011354:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8011358:	ea40 0009 	orr.w	r0, r0, r9
 801135c:	e747      	b.n	80111ee <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x222>
 801135e:	bf00      	nop
 8011360:	20012184 	.word	0x20012184
 8011364:	2001218c 	.word	0x2001218c
 8011368:	20012186 	.word	0x20012186
 801136c:	9b07      	ldr	r3, [sp, #28]
 801136e:	b153      	cbz	r3, 8011386 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ba>
 8011370:	441c      	add	r4, r3
 8011372:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8011374:	b2a4      	uxth	r4, r4
 8011376:	eb03 03d4 	add.w	r3, r3, r4, lsr #3
 801137a:	f004 0407 	and.w	r4, r4, #7
 801137e:	781a      	ldrb	r2, [r3, #0]
 8011380:	9326      	str	r3, [sp, #152]	; 0x98
 8011382:	4122      	asrs	r2, r4
 8011384:	b2d2      	uxtb	r2, r2
 8011386:	9b08      	ldr	r3, [sp, #32]
 8011388:	445b      	add	r3, fp
 801138a:	9308      	str	r3, [sp, #32]
 801138c:	f10a 3aff 	add.w	sl, sl, #4294967295
 8011390:	e716      	b.n	80111c0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1f4>
 8011392:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8011394:	2b00      	cmp	r3, #0
 8011396:	d194      	bne.n	80112c2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2f6>
 8011398:	4b05      	ldr	r3, [pc, #20]	; (80113b0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e4>)
 801139a:	6818      	ldr	r0, [r3, #0]
 801139c:	6803      	ldr	r3, [r0, #0]
 801139e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80113a0:	4798      	blx	r3
 80113a2:	e78e      	b.n	80112c2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2f6>
 80113a4:	2b00      	cmp	r3, #0
 80113a6:	f43f ae89 	beq.w	80110bc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf0>
 80113aa:	2180      	movs	r1, #128	; 0x80
 80113ac:	e75c      	b.n	8011268 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x29c>
 80113ae:	bf00      	nop
 80113b0:	2001218c 	.word	0x2001218c

080113b4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>:
 80113b4:	b538      	push	{r3, r4, r5, lr}
 80113b6:	4c15      	ldr	r4, [pc, #84]	; (801140c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x58>)
 80113b8:	7823      	ldrb	r3, [r4, #0]
 80113ba:	f3bf 8f5b 	dmb	ish
 80113be:	07da      	lsls	r2, r3, #31
 80113c0:	4605      	mov	r5, r0
 80113c2:	d40b      	bmi.n	80113dc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 80113c4:	4620      	mov	r0, r4
 80113c6:	f007 fbe7 	bl	8018b98 <__cxa_guard_acquire>
 80113ca:	b138      	cbz	r0, 80113dc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 80113cc:	4620      	mov	r0, r4
 80113ce:	f007 fbef 	bl	8018bb0 <__cxa_guard_release>
 80113d2:	4a0f      	ldr	r2, [pc, #60]	; (8011410 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 80113d4:	490f      	ldr	r1, [pc, #60]	; (8011414 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x60>)
 80113d6:	4810      	ldr	r0, [pc, #64]	; (8011418 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 80113d8:	f007 fbd4 	bl	8018b84 <__aeabi_atexit>
 80113dc:	4c0f      	ldr	r4, [pc, #60]	; (801141c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x68>)
 80113de:	7823      	ldrb	r3, [r4, #0]
 80113e0:	f3bf 8f5b 	dmb	ish
 80113e4:	07db      	lsls	r3, r3, #31
 80113e6:	d40b      	bmi.n	8011400 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 80113e8:	4620      	mov	r0, r4
 80113ea:	f007 fbd5 	bl	8018b98 <__cxa_guard_acquire>
 80113ee:	b138      	cbz	r0, 8011400 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 80113f0:	4620      	mov	r0, r4
 80113f2:	f007 fbdd 	bl	8018bb0 <__cxa_guard_release>
 80113f6:	4a06      	ldr	r2, [pc, #24]	; (8011410 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 80113f8:	4909      	ldr	r1, [pc, #36]	; (8011420 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x6c>)
 80113fa:	480a      	ldr	r0, [pc, #40]	; (8011424 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 80113fc:	f007 fbc2 	bl	8018b84 <__aeabi_atexit>
 8011400:	4b05      	ldr	r3, [pc, #20]	; (8011418 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 8011402:	612b      	str	r3, [r5, #16]
 8011404:	4b07      	ldr	r3, [pc, #28]	; (8011424 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 8011406:	616b      	str	r3, [r5, #20]
 8011408:	bd38      	pop	{r3, r4, r5, pc}
 801140a:	bf00      	nop
 801140c:	20012278 	.word	0x20012278
 8011410:	20000000 	.word	0x20000000
 8011414:	0800fa59 	.word	0x0800fa59
 8011418:	200000c8 	.word	0x200000c8
 801141c:	2001227c 	.word	0x2001227c
 8011420:	0800fa57 	.word	0x0800fa57
 8011424:	200000cc 	.word	0x200000cc

08011428 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>:
 8011428:	b538      	push	{r3, r4, r5, lr}
 801142a:	4c15      	ldr	r4, [pc, #84]	; (8011480 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x58>)
 801142c:	7823      	ldrb	r3, [r4, #0]
 801142e:	f3bf 8f5b 	dmb	ish
 8011432:	07da      	lsls	r2, r3, #31
 8011434:	4605      	mov	r5, r0
 8011436:	d40b      	bmi.n	8011450 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 8011438:	4620      	mov	r0, r4
 801143a:	f007 fbad 	bl	8018b98 <__cxa_guard_acquire>
 801143e:	b138      	cbz	r0, 8011450 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 8011440:	4620      	mov	r0, r4
 8011442:	f007 fbb5 	bl	8018bb0 <__cxa_guard_release>
 8011446:	4a0f      	ldr	r2, [pc, #60]	; (8011484 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 8011448:	490f      	ldr	r1, [pc, #60]	; (8011488 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x60>)
 801144a:	4810      	ldr	r0, [pc, #64]	; (801148c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 801144c:	f007 fb9a 	bl	8018b84 <__aeabi_atexit>
 8011450:	4c0f      	ldr	r4, [pc, #60]	; (8011490 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x68>)
 8011452:	7823      	ldrb	r3, [r4, #0]
 8011454:	f3bf 8f5b 	dmb	ish
 8011458:	07db      	lsls	r3, r3, #31
 801145a:	d40b      	bmi.n	8011474 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 801145c:	4620      	mov	r0, r4
 801145e:	f007 fb9b 	bl	8018b98 <__cxa_guard_acquire>
 8011462:	b138      	cbz	r0, 8011474 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 8011464:	4620      	mov	r0, r4
 8011466:	f007 fba3 	bl	8018bb0 <__cxa_guard_release>
 801146a:	4a06      	ldr	r2, [pc, #24]	; (8011484 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 801146c:	4909      	ldr	r1, [pc, #36]	; (8011494 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x6c>)
 801146e:	480a      	ldr	r0, [pc, #40]	; (8011498 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 8011470:	f007 fb88 	bl	8018b84 <__aeabi_atexit>
 8011474:	4b05      	ldr	r3, [pc, #20]	; (801148c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 8011476:	60ab      	str	r3, [r5, #8]
 8011478:	4b07      	ldr	r3, [pc, #28]	; (8011498 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 801147a:	60eb      	str	r3, [r5, #12]
 801147c:	bd38      	pop	{r3, r4, r5, pc}
 801147e:	bf00      	nop
 8011480:	20012250 	.word	0x20012250
 8011484:	20000000 	.word	0x20000000
 8011488:	0800fa5d 	.word	0x0800fa5d
 801148c:	200000a0 	.word	0x200000a0
 8011490:	20012254 	.word	0x20012254
 8011494:	0800fa5b 	.word	0x0800fa5b
 8011498:	200000a4 	.word	0x200000a4

0801149c <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>:
 801149c:	b510      	push	{r4, lr}
 801149e:	4604      	mov	r4, r0
 80114a0:	f7ff ff88 	bl	80113b4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>
 80114a4:	4620      	mov	r0, r4
 80114a6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80114aa:	f7ff bfbd 	b.w	8011428 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>
	...

080114b0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>:
 80114b0:	b538      	push	{r3, r4, r5, lr}
 80114b2:	4c15      	ldr	r4, [pc, #84]	; (8011508 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x58>)
 80114b4:	7823      	ldrb	r3, [r4, #0]
 80114b6:	f3bf 8f5b 	dmb	ish
 80114ba:	07da      	lsls	r2, r3, #31
 80114bc:	4605      	mov	r5, r0
 80114be:	d40b      	bmi.n	80114d8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 80114c0:	4620      	mov	r0, r4
 80114c2:	f007 fb69 	bl	8018b98 <__cxa_guard_acquire>
 80114c6:	b138      	cbz	r0, 80114d8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 80114c8:	4620      	mov	r0, r4
 80114ca:	f007 fb71 	bl	8018bb0 <__cxa_guard_release>
 80114ce:	4a0f      	ldr	r2, [pc, #60]	; (801150c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 80114d0:	490f      	ldr	r1, [pc, #60]	; (8011510 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x60>)
 80114d2:	4810      	ldr	r0, [pc, #64]	; (8011514 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 80114d4:	f007 fb56 	bl	8018b84 <__aeabi_atexit>
 80114d8:	4c0f      	ldr	r4, [pc, #60]	; (8011518 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x68>)
 80114da:	7823      	ldrb	r3, [r4, #0]
 80114dc:	f3bf 8f5b 	dmb	ish
 80114e0:	07db      	lsls	r3, r3, #31
 80114e2:	d40b      	bmi.n	80114fc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 80114e4:	4620      	mov	r0, r4
 80114e6:	f007 fb57 	bl	8018b98 <__cxa_guard_acquire>
 80114ea:	b138      	cbz	r0, 80114fc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 80114ec:	4620      	mov	r0, r4
 80114ee:	f007 fb5f 	bl	8018bb0 <__cxa_guard_release>
 80114f2:	4a06      	ldr	r2, [pc, #24]	; (801150c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 80114f4:	4909      	ldr	r1, [pc, #36]	; (801151c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x6c>)
 80114f6:	480a      	ldr	r0, [pc, #40]	; (8011520 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 80114f8:	f007 fb44 	bl	8018b84 <__aeabi_atexit>
 80114fc:	4b05      	ldr	r3, [pc, #20]	; (8011514 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 80114fe:	622b      	str	r3, [r5, #32]
 8011500:	4b07      	ldr	r3, [pc, #28]	; (8011520 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 8011502:	626b      	str	r3, [r5, #36]	; 0x24
 8011504:	bd38      	pop	{r3, r4, r5, pc}
 8011506:	bf00      	nop
 8011508:	20012280 	.word	0x20012280
 801150c:	20000000 	.word	0x20000000
 8011510:	0800fa51 	.word	0x0800fa51
 8011514:	200000d0 	.word	0x200000d0
 8011518:	20012284 	.word	0x20012284
 801151c:	0800fa4f 	.word	0x0800fa4f
 8011520:	200000d4 	.word	0x200000d4

08011524 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>:
 8011524:	b538      	push	{r3, r4, r5, lr}
 8011526:	4c15      	ldr	r4, [pc, #84]	; (801157c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x58>)
 8011528:	7823      	ldrb	r3, [r4, #0]
 801152a:	f3bf 8f5b 	dmb	ish
 801152e:	07da      	lsls	r2, r3, #31
 8011530:	4605      	mov	r5, r0
 8011532:	d40b      	bmi.n	801154c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 8011534:	4620      	mov	r0, r4
 8011536:	f007 fb2f 	bl	8018b98 <__cxa_guard_acquire>
 801153a:	b138      	cbz	r0, 801154c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 801153c:	4620      	mov	r0, r4
 801153e:	f007 fb37 	bl	8018bb0 <__cxa_guard_release>
 8011542:	4a0f      	ldr	r2, [pc, #60]	; (8011580 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 8011544:	490f      	ldr	r1, [pc, #60]	; (8011584 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x60>)
 8011546:	4810      	ldr	r0, [pc, #64]	; (8011588 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 8011548:	f007 fb1c 	bl	8018b84 <__aeabi_atexit>
 801154c:	4c0f      	ldr	r4, [pc, #60]	; (801158c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x68>)
 801154e:	7823      	ldrb	r3, [r4, #0]
 8011550:	f3bf 8f5b 	dmb	ish
 8011554:	07db      	lsls	r3, r3, #31
 8011556:	d40b      	bmi.n	8011570 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 8011558:	4620      	mov	r0, r4
 801155a:	f007 fb1d 	bl	8018b98 <__cxa_guard_acquire>
 801155e:	b138      	cbz	r0, 8011570 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 8011560:	4620      	mov	r0, r4
 8011562:	f007 fb25 	bl	8018bb0 <__cxa_guard_release>
 8011566:	4a06      	ldr	r2, [pc, #24]	; (8011580 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 8011568:	4909      	ldr	r1, [pc, #36]	; (8011590 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x6c>)
 801156a:	480a      	ldr	r0, [pc, #40]	; (8011594 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 801156c:	f007 fb0a 	bl	8018b84 <__aeabi_atexit>
 8011570:	4b05      	ldr	r3, [pc, #20]	; (8011588 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 8011572:	61ab      	str	r3, [r5, #24]
 8011574:	4b07      	ldr	r3, [pc, #28]	; (8011594 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 8011576:	61eb      	str	r3, [r5, #28]
 8011578:	bd38      	pop	{r3, r4, r5, pc}
 801157a:	bf00      	nop
 801157c:	20012258 	.word	0x20012258
 8011580:	20000000 	.word	0x20000000
 8011584:	0800fa55 	.word	0x0800fa55
 8011588:	200000a8 	.word	0x200000a8
 801158c:	2001225c 	.word	0x2001225c
 8011590:	0800fa53 	.word	0x0800fa53
 8011594:	200000ac 	.word	0x200000ac

08011598 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>:
 8011598:	b510      	push	{r4, lr}
 801159a:	4604      	mov	r4, r0
 801159c:	f7ff ff88 	bl	80114b0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>
 80115a0:	4620      	mov	r0, r4
 80115a2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80115a6:	f7ff bfbd 	b.w	8011524 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>
	...

080115ac <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>:
 80115ac:	b538      	push	{r3, r4, r5, lr}
 80115ae:	4c15      	ldr	r4, [pc, #84]	; (8011604 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x58>)
 80115b0:	7823      	ldrb	r3, [r4, #0]
 80115b2:	f3bf 8f5b 	dmb	ish
 80115b6:	07da      	lsls	r2, r3, #31
 80115b8:	4605      	mov	r5, r0
 80115ba:	d40b      	bmi.n	80115d4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 80115bc:	4620      	mov	r0, r4
 80115be:	f007 faeb 	bl	8018b98 <__cxa_guard_acquire>
 80115c2:	b138      	cbz	r0, 80115d4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 80115c4:	4620      	mov	r0, r4
 80115c6:	f007 faf3 	bl	8018bb0 <__cxa_guard_release>
 80115ca:	4a0f      	ldr	r2, [pc, #60]	; (8011608 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 80115cc:	490f      	ldr	r1, [pc, #60]	; (801160c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x60>)
 80115ce:	4810      	ldr	r0, [pc, #64]	; (8011610 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 80115d0:	f007 fad8 	bl	8018b84 <__aeabi_atexit>
 80115d4:	4c0f      	ldr	r4, [pc, #60]	; (8011614 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x68>)
 80115d6:	7823      	ldrb	r3, [r4, #0]
 80115d8:	f3bf 8f5b 	dmb	ish
 80115dc:	07db      	lsls	r3, r3, #31
 80115de:	d40b      	bmi.n	80115f8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 80115e0:	4620      	mov	r0, r4
 80115e2:	f007 fad9 	bl	8018b98 <__cxa_guard_acquire>
 80115e6:	b138      	cbz	r0, 80115f8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 80115e8:	4620      	mov	r0, r4
 80115ea:	f007 fae1 	bl	8018bb0 <__cxa_guard_release>
 80115ee:	4a06      	ldr	r2, [pc, #24]	; (8011608 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 80115f0:	4909      	ldr	r1, [pc, #36]	; (8011618 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x6c>)
 80115f2:	480a      	ldr	r0, [pc, #40]	; (801161c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 80115f4:	f007 fac6 	bl	8018b84 <__aeabi_atexit>
 80115f8:	4b05      	ldr	r3, [pc, #20]	; (8011610 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 80115fa:	632b      	str	r3, [r5, #48]	; 0x30
 80115fc:	4b07      	ldr	r3, [pc, #28]	; (801161c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 80115fe:	636b      	str	r3, [r5, #52]	; 0x34
 8011600:	bd38      	pop	{r3, r4, r5, pc}
 8011602:	bf00      	nop
 8011604:	20012290 	.word	0x20012290
 8011608:	20000000 	.word	0x20000000
 801160c:	0800fa49 	.word	0x0800fa49
 8011610:	200000e0 	.word	0x200000e0
 8011614:	20012294 	.word	0x20012294
 8011618:	0800fa47 	.word	0x0800fa47
 801161c:	200000e4 	.word	0x200000e4

08011620 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>:
 8011620:	b538      	push	{r3, r4, r5, lr}
 8011622:	4c15      	ldr	r4, [pc, #84]	; (8011678 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x58>)
 8011624:	7823      	ldrb	r3, [r4, #0]
 8011626:	f3bf 8f5b 	dmb	ish
 801162a:	07da      	lsls	r2, r3, #31
 801162c:	4605      	mov	r5, r0
 801162e:	d40b      	bmi.n	8011648 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 8011630:	4620      	mov	r0, r4
 8011632:	f007 fab1 	bl	8018b98 <__cxa_guard_acquire>
 8011636:	b138      	cbz	r0, 8011648 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 8011638:	4620      	mov	r0, r4
 801163a:	f007 fab9 	bl	8018bb0 <__cxa_guard_release>
 801163e:	4a0f      	ldr	r2, [pc, #60]	; (801167c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 8011640:	490f      	ldr	r1, [pc, #60]	; (8011680 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x60>)
 8011642:	4810      	ldr	r0, [pc, #64]	; (8011684 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 8011644:	f007 fa9e 	bl	8018b84 <__aeabi_atexit>
 8011648:	4c0f      	ldr	r4, [pc, #60]	; (8011688 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x68>)
 801164a:	7823      	ldrb	r3, [r4, #0]
 801164c:	f3bf 8f5b 	dmb	ish
 8011650:	07db      	lsls	r3, r3, #31
 8011652:	d40b      	bmi.n	801166c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 8011654:	4620      	mov	r0, r4
 8011656:	f007 fa9f 	bl	8018b98 <__cxa_guard_acquire>
 801165a:	b138      	cbz	r0, 801166c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 801165c:	4620      	mov	r0, r4
 801165e:	f007 faa7 	bl	8018bb0 <__cxa_guard_release>
 8011662:	4a06      	ldr	r2, [pc, #24]	; (801167c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 8011664:	4909      	ldr	r1, [pc, #36]	; (801168c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x6c>)
 8011666:	480a      	ldr	r0, [pc, #40]	; (8011690 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 8011668:	f007 fa8c 	bl	8018b84 <__aeabi_atexit>
 801166c:	4b05      	ldr	r3, [pc, #20]	; (8011684 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 801166e:	62ab      	str	r3, [r5, #40]	; 0x28
 8011670:	4b07      	ldr	r3, [pc, #28]	; (8011690 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 8011672:	62eb      	str	r3, [r5, #44]	; 0x2c
 8011674:	bd38      	pop	{r3, r4, r5, pc}
 8011676:	bf00      	nop
 8011678:	20012260 	.word	0x20012260
 801167c:	20000000 	.word	0x20000000
 8011680:	0800fa4d 	.word	0x0800fa4d
 8011684:	200000b0 	.word	0x200000b0
 8011688:	20012264 	.word	0x20012264
 801168c:	0800fa4b 	.word	0x0800fa4b
 8011690:	200000b4 	.word	0x200000b4

08011694 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>:
 8011694:	b510      	push	{r4, lr}
 8011696:	4604      	mov	r4, r0
 8011698:	f7ff ff88 	bl	80115ac <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>
 801169c:	4620      	mov	r0, r4
 801169e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80116a2:	f7ff bfbd 	b.w	8011620 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>
	...

080116a8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>:
 80116a8:	b538      	push	{r3, r4, r5, lr}
 80116aa:	4c15      	ldr	r4, [pc, #84]	; (8011700 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x58>)
 80116ac:	7823      	ldrb	r3, [r4, #0]
 80116ae:	f3bf 8f5b 	dmb	ish
 80116b2:	07da      	lsls	r2, r3, #31
 80116b4:	4605      	mov	r5, r0
 80116b6:	d40b      	bmi.n	80116d0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 80116b8:	4620      	mov	r0, r4
 80116ba:	f007 fa6d 	bl	8018b98 <__cxa_guard_acquire>
 80116be:	b138      	cbz	r0, 80116d0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 80116c0:	4620      	mov	r0, r4
 80116c2:	f007 fa75 	bl	8018bb0 <__cxa_guard_release>
 80116c6:	4a0f      	ldr	r2, [pc, #60]	; (8011704 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 80116c8:	490f      	ldr	r1, [pc, #60]	; (8011708 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x60>)
 80116ca:	4810      	ldr	r0, [pc, #64]	; (801170c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 80116cc:	f007 fa5a 	bl	8018b84 <__aeabi_atexit>
 80116d0:	4c0f      	ldr	r4, [pc, #60]	; (8011710 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x68>)
 80116d2:	7823      	ldrb	r3, [r4, #0]
 80116d4:	f3bf 8f5b 	dmb	ish
 80116d8:	07db      	lsls	r3, r3, #31
 80116da:	d40b      	bmi.n	80116f4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 80116dc:	4620      	mov	r0, r4
 80116de:	f007 fa5b 	bl	8018b98 <__cxa_guard_acquire>
 80116e2:	b138      	cbz	r0, 80116f4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 80116e4:	4620      	mov	r0, r4
 80116e6:	f007 fa63 	bl	8018bb0 <__cxa_guard_release>
 80116ea:	4a06      	ldr	r2, [pc, #24]	; (8011704 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 80116ec:	4909      	ldr	r1, [pc, #36]	; (8011714 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x6c>)
 80116ee:	480a      	ldr	r0, [pc, #40]	; (8011718 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 80116f0:	f007 fa48 	bl	8018b84 <__aeabi_atexit>
 80116f4:	4b05      	ldr	r3, [pc, #20]	; (801170c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 80116f6:	652b      	str	r3, [r5, #80]	; 0x50
 80116f8:	4b07      	ldr	r3, [pc, #28]	; (8011718 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 80116fa:	656b      	str	r3, [r5, #84]	; 0x54
 80116fc:	bd38      	pop	{r3, r4, r5, pc}
 80116fe:	bf00      	nop
 8011700:	20012298 	.word	0x20012298
 8011704:	20000000 	.word	0x20000000
 8011708:	0800fa39 	.word	0x0800fa39
 801170c:	200000e8 	.word	0x200000e8
 8011710:	2001229c 	.word	0x2001229c
 8011714:	0800fa37 	.word	0x0800fa37
 8011718:	200000ec 	.word	0x200000ec

0801171c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>:
 801171c:	b538      	push	{r3, r4, r5, lr}
 801171e:	4c15      	ldr	r4, [pc, #84]	; (8011774 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x58>)
 8011720:	7823      	ldrb	r3, [r4, #0]
 8011722:	f3bf 8f5b 	dmb	ish
 8011726:	07da      	lsls	r2, r3, #31
 8011728:	4605      	mov	r5, r0
 801172a:	d40b      	bmi.n	8011744 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 801172c:	4620      	mov	r0, r4
 801172e:	f007 fa33 	bl	8018b98 <__cxa_guard_acquire>
 8011732:	b138      	cbz	r0, 8011744 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 8011734:	4620      	mov	r0, r4
 8011736:	f007 fa3b 	bl	8018bb0 <__cxa_guard_release>
 801173a:	4a0f      	ldr	r2, [pc, #60]	; (8011778 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 801173c:	490f      	ldr	r1, [pc, #60]	; (801177c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x60>)
 801173e:	4810      	ldr	r0, [pc, #64]	; (8011780 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 8011740:	f007 fa20 	bl	8018b84 <__aeabi_atexit>
 8011744:	4c0f      	ldr	r4, [pc, #60]	; (8011784 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x68>)
 8011746:	7823      	ldrb	r3, [r4, #0]
 8011748:	f3bf 8f5b 	dmb	ish
 801174c:	07db      	lsls	r3, r3, #31
 801174e:	d40b      	bmi.n	8011768 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 8011750:	4620      	mov	r0, r4
 8011752:	f007 fa21 	bl	8018b98 <__cxa_guard_acquire>
 8011756:	b138      	cbz	r0, 8011768 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 8011758:	4620      	mov	r0, r4
 801175a:	f007 fa29 	bl	8018bb0 <__cxa_guard_release>
 801175e:	4a06      	ldr	r2, [pc, #24]	; (8011778 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 8011760:	4909      	ldr	r1, [pc, #36]	; (8011788 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x6c>)
 8011762:	480a      	ldr	r0, [pc, #40]	; (801178c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 8011764:	f007 fa0e 	bl	8018b84 <__aeabi_atexit>
 8011768:	4b05      	ldr	r3, [pc, #20]	; (8011780 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 801176a:	64ab      	str	r3, [r5, #72]	; 0x48
 801176c:	4b07      	ldr	r3, [pc, #28]	; (801178c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 801176e:	64eb      	str	r3, [r5, #76]	; 0x4c
 8011770:	bd38      	pop	{r3, r4, r5, pc}
 8011772:	bf00      	nop
 8011774:	200122a0 	.word	0x200122a0
 8011778:	20000000 	.word	0x20000000
 801177c:	0800fa3d 	.word	0x0800fa3d
 8011780:	200000f0 	.word	0x200000f0
 8011784:	200122a4 	.word	0x200122a4
 8011788:	0800fa3b 	.word	0x0800fa3b
 801178c:	200000f4 	.word	0x200000f4

08011790 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>:
 8011790:	b538      	push	{r3, r4, r5, lr}
 8011792:	4c15      	ldr	r4, [pc, #84]	; (80117e8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x58>)
 8011794:	7823      	ldrb	r3, [r4, #0]
 8011796:	f3bf 8f5b 	dmb	ish
 801179a:	07da      	lsls	r2, r3, #31
 801179c:	4605      	mov	r5, r0
 801179e:	d40b      	bmi.n	80117b8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 80117a0:	4620      	mov	r0, r4
 80117a2:	f007 f9f9 	bl	8018b98 <__cxa_guard_acquire>
 80117a6:	b138      	cbz	r0, 80117b8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 80117a8:	4620      	mov	r0, r4
 80117aa:	f007 fa01 	bl	8018bb0 <__cxa_guard_release>
 80117ae:	4a0f      	ldr	r2, [pc, #60]	; (80117ec <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 80117b0:	490f      	ldr	r1, [pc, #60]	; (80117f0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x60>)
 80117b2:	4810      	ldr	r0, [pc, #64]	; (80117f4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 80117b4:	f007 f9e6 	bl	8018b84 <__aeabi_atexit>
 80117b8:	4c0f      	ldr	r4, [pc, #60]	; (80117f8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x68>)
 80117ba:	7823      	ldrb	r3, [r4, #0]
 80117bc:	f3bf 8f5b 	dmb	ish
 80117c0:	07db      	lsls	r3, r3, #31
 80117c2:	d40b      	bmi.n	80117dc <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 80117c4:	4620      	mov	r0, r4
 80117c6:	f007 f9e7 	bl	8018b98 <__cxa_guard_acquire>
 80117ca:	b138      	cbz	r0, 80117dc <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 80117cc:	4620      	mov	r0, r4
 80117ce:	f007 f9ef 	bl	8018bb0 <__cxa_guard_release>
 80117d2:	4a06      	ldr	r2, [pc, #24]	; (80117ec <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 80117d4:	4909      	ldr	r1, [pc, #36]	; (80117fc <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x6c>)
 80117d6:	480a      	ldr	r0, [pc, #40]	; (8011800 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 80117d8:	f007 f9d4 	bl	8018b84 <__aeabi_atexit>
 80117dc:	4b05      	ldr	r3, [pc, #20]	; (80117f4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 80117de:	642b      	str	r3, [r5, #64]	; 0x40
 80117e0:	4b07      	ldr	r3, [pc, #28]	; (8011800 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 80117e2:	646b      	str	r3, [r5, #68]	; 0x44
 80117e4:	bd38      	pop	{r3, r4, r5, pc}
 80117e6:	bf00      	nop
 80117e8:	20012268 	.word	0x20012268
 80117ec:	20000000 	.word	0x20000000
 80117f0:	0800fa41 	.word	0x0800fa41
 80117f4:	200000b8 	.word	0x200000b8
 80117f8:	2001226c 	.word	0x2001226c
 80117fc:	0800fa3f 	.word	0x0800fa3f
 8011800:	200000bc 	.word	0x200000bc

08011804 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>:
 8011804:	b538      	push	{r3, r4, r5, lr}
 8011806:	4c15      	ldr	r4, [pc, #84]	; (801185c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x58>)
 8011808:	7823      	ldrb	r3, [r4, #0]
 801180a:	f3bf 8f5b 	dmb	ish
 801180e:	07da      	lsls	r2, r3, #31
 8011810:	4605      	mov	r5, r0
 8011812:	d40b      	bmi.n	801182c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 8011814:	4620      	mov	r0, r4
 8011816:	f007 f9bf 	bl	8018b98 <__cxa_guard_acquire>
 801181a:	b138      	cbz	r0, 801182c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 801181c:	4620      	mov	r0, r4
 801181e:	f007 f9c7 	bl	8018bb0 <__cxa_guard_release>
 8011822:	4a0f      	ldr	r2, [pc, #60]	; (8011860 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 8011824:	490f      	ldr	r1, [pc, #60]	; (8011864 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x60>)
 8011826:	4810      	ldr	r0, [pc, #64]	; (8011868 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 8011828:	f007 f9ac 	bl	8018b84 <__aeabi_atexit>
 801182c:	4c0f      	ldr	r4, [pc, #60]	; (801186c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x68>)
 801182e:	7823      	ldrb	r3, [r4, #0]
 8011830:	f3bf 8f5b 	dmb	ish
 8011834:	07db      	lsls	r3, r3, #31
 8011836:	d40b      	bmi.n	8011850 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 8011838:	4620      	mov	r0, r4
 801183a:	f007 f9ad 	bl	8018b98 <__cxa_guard_acquire>
 801183e:	b138      	cbz	r0, 8011850 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 8011840:	4620      	mov	r0, r4
 8011842:	f007 f9b5 	bl	8018bb0 <__cxa_guard_release>
 8011846:	4a06      	ldr	r2, [pc, #24]	; (8011860 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 8011848:	4909      	ldr	r1, [pc, #36]	; (8011870 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x6c>)
 801184a:	480a      	ldr	r0, [pc, #40]	; (8011874 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 801184c:	f007 f99a 	bl	8018b84 <__aeabi_atexit>
 8011850:	4b05      	ldr	r3, [pc, #20]	; (8011868 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 8011852:	63ab      	str	r3, [r5, #56]	; 0x38
 8011854:	4b07      	ldr	r3, [pc, #28]	; (8011874 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 8011856:	63eb      	str	r3, [r5, #60]	; 0x3c
 8011858:	bd38      	pop	{r3, r4, r5, pc}
 801185a:	bf00      	nop
 801185c:	20012288 	.word	0x20012288
 8011860:	20000000 	.word	0x20000000
 8011864:	0800fa45 	.word	0x0800fa45
 8011868:	200000d8 	.word	0x200000d8
 801186c:	2001228c 	.word	0x2001228c
 8011870:	0800fa43 	.word	0x0800fa43
 8011874:	200000dc 	.word	0x200000dc

08011878 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>:
 8011878:	b510      	push	{r4, lr}
 801187a:	4604      	mov	r4, r0
 801187c:	f7ff ff14 	bl	80116a8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>
 8011880:	4620      	mov	r0, r4
 8011882:	f7ff ff85 	bl	8011790 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>
 8011886:	4620      	mov	r0, r4
 8011888:	f7ff ff48 	bl	801171c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>
 801188c:	4620      	mov	r0, r4
 801188e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8011892:	f7ff bfb7 	b.w	8011804 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>
	...

08011898 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>:
 8011898:	b538      	push	{r3, r4, r5, lr}
 801189a:	4c15      	ldr	r4, [pc, #84]	; (80118f0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x58>)
 801189c:	7823      	ldrb	r3, [r4, #0]
 801189e:	f3bf 8f5b 	dmb	ish
 80118a2:	07da      	lsls	r2, r3, #31
 80118a4:	4605      	mov	r5, r0
 80118a6:	d40b      	bmi.n	80118c0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 80118a8:	4620      	mov	r0, r4
 80118aa:	f007 f975 	bl	8018b98 <__cxa_guard_acquire>
 80118ae:	b138      	cbz	r0, 80118c0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 80118b0:	4620      	mov	r0, r4
 80118b2:	f007 f97d 	bl	8018bb0 <__cxa_guard_release>
 80118b6:	4a0f      	ldr	r2, [pc, #60]	; (80118f4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 80118b8:	490f      	ldr	r1, [pc, #60]	; (80118f8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x60>)
 80118ba:	4810      	ldr	r0, [pc, #64]	; (80118fc <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 80118bc:	f007 f962 	bl	8018b84 <__aeabi_atexit>
 80118c0:	4c0f      	ldr	r4, [pc, #60]	; (8011900 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x68>)
 80118c2:	7823      	ldrb	r3, [r4, #0]
 80118c4:	f3bf 8f5b 	dmb	ish
 80118c8:	07db      	lsls	r3, r3, #31
 80118ca:	d40b      	bmi.n	80118e4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 80118cc:	4620      	mov	r0, r4
 80118ce:	f007 f963 	bl	8018b98 <__cxa_guard_acquire>
 80118d2:	b138      	cbz	r0, 80118e4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 80118d4:	4620      	mov	r0, r4
 80118d6:	f007 f96b 	bl	8018bb0 <__cxa_guard_release>
 80118da:	4a06      	ldr	r2, [pc, #24]	; (80118f4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 80118dc:	4909      	ldr	r1, [pc, #36]	; (8011904 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x6c>)
 80118de:	480a      	ldr	r0, [pc, #40]	; (8011908 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 80118e0:	f007 f950 	bl	8018b84 <__aeabi_atexit>
 80118e4:	4b05      	ldr	r3, [pc, #20]	; (80118fc <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 80118e6:	662b      	str	r3, [r5, #96]	; 0x60
 80118e8:	4b07      	ldr	r3, [pc, #28]	; (8011908 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 80118ea:	666b      	str	r3, [r5, #100]	; 0x64
 80118ec:	bd38      	pop	{r3, r4, r5, pc}
 80118ee:	bf00      	nop
 80118f0:	20012270 	.word	0x20012270
 80118f4:	20000000 	.word	0x20000000
 80118f8:	0800fa31 	.word	0x0800fa31
 80118fc:	200000c0 	.word	0x200000c0
 8011900:	20012274 	.word	0x20012274
 8011904:	0800fa2f 	.word	0x0800fa2f
 8011908:	200000c4 	.word	0x200000c4

0801190c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>:
 801190c:	b538      	push	{r3, r4, r5, lr}
 801190e:	4c15      	ldr	r4, [pc, #84]	; (8011964 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x58>)
 8011910:	7823      	ldrb	r3, [r4, #0]
 8011912:	f3bf 8f5b 	dmb	ish
 8011916:	07da      	lsls	r2, r3, #31
 8011918:	4605      	mov	r5, r0
 801191a:	d40b      	bmi.n	8011934 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 801191c:	4620      	mov	r0, r4
 801191e:	f007 f93b 	bl	8018b98 <__cxa_guard_acquire>
 8011922:	b138      	cbz	r0, 8011934 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 8011924:	4620      	mov	r0, r4
 8011926:	f007 f943 	bl	8018bb0 <__cxa_guard_release>
 801192a:	4a0f      	ldr	r2, [pc, #60]	; (8011968 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 801192c:	490f      	ldr	r1, [pc, #60]	; (801196c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x60>)
 801192e:	4810      	ldr	r0, [pc, #64]	; (8011970 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 8011930:	f007 f928 	bl	8018b84 <__aeabi_atexit>
 8011934:	4c0f      	ldr	r4, [pc, #60]	; (8011974 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x68>)
 8011936:	7823      	ldrb	r3, [r4, #0]
 8011938:	f3bf 8f5b 	dmb	ish
 801193c:	07db      	lsls	r3, r3, #31
 801193e:	d40b      	bmi.n	8011958 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 8011940:	4620      	mov	r0, r4
 8011942:	f007 f929 	bl	8018b98 <__cxa_guard_acquire>
 8011946:	b138      	cbz	r0, 8011958 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 8011948:	4620      	mov	r0, r4
 801194a:	f007 f931 	bl	8018bb0 <__cxa_guard_release>
 801194e:	4a06      	ldr	r2, [pc, #24]	; (8011968 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 8011950:	4909      	ldr	r1, [pc, #36]	; (8011978 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x6c>)
 8011952:	480a      	ldr	r0, [pc, #40]	; (801197c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 8011954:	f007 f916 	bl	8018b84 <__aeabi_atexit>
 8011958:	4b05      	ldr	r3, [pc, #20]	; (8011970 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 801195a:	65ab      	str	r3, [r5, #88]	; 0x58
 801195c:	4b07      	ldr	r3, [pc, #28]	; (801197c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 801195e:	65eb      	str	r3, [r5, #92]	; 0x5c
 8011960:	bd38      	pop	{r3, r4, r5, pc}
 8011962:	bf00      	nop
 8011964:	20012248 	.word	0x20012248
 8011968:	20000000 	.word	0x20000000
 801196c:	0800fa35 	.word	0x0800fa35
 8011970:	20000098 	.word	0x20000098
 8011974:	2001224c 	.word	0x2001224c
 8011978:	0800fa33 	.word	0x0800fa33
 801197c:	2000009c 	.word	0x2000009c

08011980 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>:
 8011980:	b510      	push	{r4, lr}
 8011982:	4604      	mov	r4, r0
 8011984:	f7ff ff88 	bl	8011898 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>
 8011988:	4620      	mov	r0, r4
 801198a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801198e:	f7ff bfbd 	b.w	801190c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>
	...

08011994 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>:
 8011994:	b538      	push	{r3, r4, r5, lr}
 8011996:	4c15      	ldr	r4, [pc, #84]	; (80119ec <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x58>)
 8011998:	7823      	ldrb	r3, [r4, #0]
 801199a:	f3bf 8f5b 	dmb	ish
 801199e:	07da      	lsls	r2, r3, #31
 80119a0:	4605      	mov	r5, r0
 80119a2:	d40b      	bmi.n	80119bc <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 80119a4:	4620      	mov	r0, r4
 80119a6:	f007 f8f7 	bl	8018b98 <__cxa_guard_acquire>
 80119aa:	b138      	cbz	r0, 80119bc <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 80119ac:	4620      	mov	r0, r4
 80119ae:	f007 f8ff 	bl	8018bb0 <__cxa_guard_release>
 80119b2:	4a0f      	ldr	r2, [pc, #60]	; (80119f0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 80119b4:	490f      	ldr	r1, [pc, #60]	; (80119f4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x60>)
 80119b6:	4810      	ldr	r0, [pc, #64]	; (80119f8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 80119b8:	f007 f8e4 	bl	8018b84 <__aeabi_atexit>
 80119bc:	4c0f      	ldr	r4, [pc, #60]	; (80119fc <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x68>)
 80119be:	7823      	ldrb	r3, [r4, #0]
 80119c0:	f3bf 8f5b 	dmb	ish
 80119c4:	07db      	lsls	r3, r3, #31
 80119c6:	d40b      	bmi.n	80119e0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 80119c8:	4620      	mov	r0, r4
 80119ca:	f007 f8e5 	bl	8018b98 <__cxa_guard_acquire>
 80119ce:	b138      	cbz	r0, 80119e0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 80119d0:	4620      	mov	r0, r4
 80119d2:	f007 f8ed 	bl	8018bb0 <__cxa_guard_release>
 80119d6:	4a06      	ldr	r2, [pc, #24]	; (80119f0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 80119d8:	4909      	ldr	r1, [pc, #36]	; (8011a00 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x6c>)
 80119da:	480a      	ldr	r0, [pc, #40]	; (8011a04 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 80119dc:	f007 f8d2 	bl	8018b84 <__aeabi_atexit>
 80119e0:	4b05      	ldr	r3, [pc, #20]	; (80119f8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 80119e2:	672b      	str	r3, [r5, #112]	; 0x70
 80119e4:	4b07      	ldr	r3, [pc, #28]	; (8011a04 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 80119e6:	676b      	str	r3, [r5, #116]	; 0x74
 80119e8:	bd38      	pop	{r3, r4, r5, pc}
 80119ea:	bf00      	nop
 80119ec:	20012240 	.word	0x20012240
 80119f0:	20000000 	.word	0x20000000
 80119f4:	0800fa29 	.word	0x0800fa29
 80119f8:	20000090 	.word	0x20000090
 80119fc:	20012244 	.word	0x20012244
 8011a00:	0800fa27 	.word	0x0800fa27
 8011a04:	20000094 	.word	0x20000094

08011a08 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>:
 8011a08:	b538      	push	{r3, r4, r5, lr}
 8011a0a:	4c15      	ldr	r4, [pc, #84]	; (8011a60 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x58>)
 8011a0c:	7823      	ldrb	r3, [r4, #0]
 8011a0e:	f3bf 8f5b 	dmb	ish
 8011a12:	07da      	lsls	r2, r3, #31
 8011a14:	4605      	mov	r5, r0
 8011a16:	d40b      	bmi.n	8011a30 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 8011a18:	4620      	mov	r0, r4
 8011a1a:	f007 f8bd 	bl	8018b98 <__cxa_guard_acquire>
 8011a1e:	b138      	cbz	r0, 8011a30 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 8011a20:	4620      	mov	r0, r4
 8011a22:	f007 f8c5 	bl	8018bb0 <__cxa_guard_release>
 8011a26:	4a0f      	ldr	r2, [pc, #60]	; (8011a64 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 8011a28:	490f      	ldr	r1, [pc, #60]	; (8011a68 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x60>)
 8011a2a:	4810      	ldr	r0, [pc, #64]	; (8011a6c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 8011a2c:	f007 f8aa 	bl	8018b84 <__aeabi_atexit>
 8011a30:	4c0f      	ldr	r4, [pc, #60]	; (8011a70 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x68>)
 8011a32:	7823      	ldrb	r3, [r4, #0]
 8011a34:	f3bf 8f5b 	dmb	ish
 8011a38:	07db      	lsls	r3, r3, #31
 8011a3a:	d40b      	bmi.n	8011a54 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 8011a3c:	4620      	mov	r0, r4
 8011a3e:	f007 f8ab 	bl	8018b98 <__cxa_guard_acquire>
 8011a42:	b138      	cbz	r0, 8011a54 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 8011a44:	4620      	mov	r0, r4
 8011a46:	f007 f8b3 	bl	8018bb0 <__cxa_guard_release>
 8011a4a:	4a06      	ldr	r2, [pc, #24]	; (8011a64 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 8011a4c:	4909      	ldr	r1, [pc, #36]	; (8011a74 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x6c>)
 8011a4e:	480a      	ldr	r0, [pc, #40]	; (8011a78 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 8011a50:	f007 f898 	bl	8018b84 <__aeabi_atexit>
 8011a54:	4b05      	ldr	r3, [pc, #20]	; (8011a6c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 8011a56:	66ab      	str	r3, [r5, #104]	; 0x68
 8011a58:	4b07      	ldr	r3, [pc, #28]	; (8011a78 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 8011a5a:	66eb      	str	r3, [r5, #108]	; 0x6c
 8011a5c:	bd38      	pop	{r3, r4, r5, pc}
 8011a5e:	bf00      	nop
 8011a60:	20012238 	.word	0x20012238
 8011a64:	20000000 	.word	0x20000000
 8011a68:	0800fa2d 	.word	0x0800fa2d
 8011a6c:	20000088 	.word	0x20000088
 8011a70:	2001223c 	.word	0x2001223c
 8011a74:	0800fa2b 	.word	0x0800fa2b
 8011a78:	2000008c 	.word	0x2000008c

08011a7c <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>:
 8011a7c:	b510      	push	{r4, lr}
 8011a7e:	4604      	mov	r4, r0
 8011a80:	f7ff ff88 	bl	8011994 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>
 8011a84:	4620      	mov	r0, r4
 8011a86:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8011a8a:	f7ff bfbd 	b.w	8011a08 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>

08011a8e <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>:
 8011a8e:	b510      	push	{r4, lr}
 8011a90:	4604      	mov	r4, r0
 8011a92:	f7ff fff3 	bl	8011a7c <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>
 8011a96:	4620      	mov	r0, r4
 8011a98:	f7ff ff72 	bl	8011980 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>
 8011a9c:	4620      	mov	r0, r4
 8011a9e:	f7ff fdf9 	bl	8011694 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>
 8011aa2:	4620      	mov	r0, r4
 8011aa4:	f7ff fcfa 	bl	801149c <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>
 8011aa8:	4620      	mov	r0, r4
 8011aaa:	f7ff fd75 	bl	8011598 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>
 8011aae:	4620      	mov	r0, r4
 8011ab0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8011ab4:	f7ff bee0 	b.w	8011878 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>

08011ab8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>:
 8011ab8:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011abc:	e9dd 4e0c 	ldrd	r4, lr, [sp, #48]	; 0x30
 8011ac0:	f9bd 8028 	ldrsh.w	r8, [sp, #40]	; 0x28
 8011ac4:	f9bd b02c 	ldrsh.w	fp, [sp, #44]	; 0x2c
 8011ac8:	f89d 6038 	ldrb.w	r6, [sp, #56]	; 0x38
 8011acc:	f89d c03c 	ldrb.w	ip, [sp, #60]	; 0x3c
 8011ad0:	f89d 5040 	ldrb.w	r5, [sp, #64]	; 0x40
 8011ad4:	8808      	ldrh	r0, [r1, #0]
 8011ad6:	fb0e 4708 	mla	r7, lr, r8, r4
 8011ada:	f1be 0f00 	cmp.w	lr, #0
 8011ade:	eb02 0a07 	add.w	sl, r2, r7
 8011ae2:	db37      	blt.n	8011b54 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x9c>
 8011ae4:	45f3      	cmp	fp, lr
 8011ae6:	dd35      	ble.n	8011b54 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x9c>
 8011ae8:	2c00      	cmp	r4, #0
 8011aea:	db31      	blt.n	8011b50 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x98>
 8011aec:	45a0      	cmp	r8, r4
 8011aee:	dd2f      	ble.n	8011b50 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x98>
 8011af0:	5dd2      	ldrb	r2, [r2, r7]
 8011af2:	f833 9012 	ldrh.w	r9, [r3, r2, lsl #1]
 8011af6:	1c62      	adds	r2, r4, #1
 8011af8:	d42f      	bmi.n	8011b5a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa2>
 8011afa:	4590      	cmp	r8, r2
 8011afc:	dd2d      	ble.n	8011b5a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa2>
 8011afe:	b366      	cbz	r6, 8011b5a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa2>
 8011b00:	f89a 2001 	ldrb.w	r2, [sl, #1]
 8011b04:	f833 7012 	ldrh.w	r7, [r3, r2, lsl #1]
 8011b08:	f11e 0e01 	adds.w	lr, lr, #1
 8011b0c:	d429      	bmi.n	8011b62 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xaa>
 8011b0e:	45f3      	cmp	fp, lr
 8011b10:	dd27      	ble.n	8011b62 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xaa>
 8011b12:	f1bc 0f00 	cmp.w	ip, #0
 8011b16:	f000 80a0 	beq.w	8011c5a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a2>
 8011b1a:	2c00      	cmp	r4, #0
 8011b1c:	db1f      	blt.n	8011b5e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>
 8011b1e:	45a0      	cmp	r8, r4
 8011b20:	dd1d      	ble.n	8011b5e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>
 8011b22:	f81a 2008 	ldrb.w	r2, [sl, r8]
 8011b26:	f833 e012 	ldrh.w	lr, [r3, r2, lsl #1]
 8011b2a:	3401      	adds	r4, #1
 8011b2c:	d41c      	bmi.n	8011b68 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xb0>
 8011b2e:	45a0      	cmp	r8, r4
 8011b30:	dd1a      	ble.n	8011b68 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xb0>
 8011b32:	b1de      	cbz	r6, 8011b6c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xb4>
 8011b34:	44d0      	add	r8, sl
 8011b36:	f898 2001 	ldrb.w	r2, [r8, #1]
 8011b3a:	f833 3012 	ldrh.w	r3, [r3, r2, lsl #1]
 8011b3e:	2e0f      	cmp	r6, #15
 8011b40:	d915      	bls.n	8011b6e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xb6>
 8011b42:	4b49      	ldr	r3, [pc, #292]	; (8011c68 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1b0>)
 8011b44:	4a49      	ldr	r2, [pc, #292]	; (8011c6c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1b4>)
 8011b46:	484a      	ldr	r0, [pc, #296]	; (8011c70 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1b8>)
 8011b48:	f240 11ef 	movw	r1, #495	; 0x1ef
 8011b4c:	f007 f84e 	bl	8018bec <__assert_func>
 8011b50:	4681      	mov	r9, r0
 8011b52:	e7d0      	b.n	8011af6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x3e>
 8011b54:	4607      	mov	r7, r0
 8011b56:	4681      	mov	r9, r0
 8011b58:	e7d6      	b.n	8011b08 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x50>
 8011b5a:	4607      	mov	r7, r0
 8011b5c:	e7d4      	b.n	8011b08 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x50>
 8011b5e:	4686      	mov	lr, r0
 8011b60:	e7e3      	b.n	8011b2a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x72>
 8011b62:	4603      	mov	r3, r0
 8011b64:	4686      	mov	lr, r0
 8011b66:	e7ea      	b.n	8011b3e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x86>
 8011b68:	4603      	mov	r3, r0
 8011b6a:	e7e8      	b.n	8011b3e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x86>
 8011b6c:	4603      	mov	r3, r0
 8011b6e:	f1bc 0f0f 	cmp.w	ip, #15
 8011b72:	d8e6      	bhi.n	8011b42 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x8a>
 8011b74:	ea4f 4409 	mov.w	r4, r9, lsl #16
 8011b78:	fb16 f80c 	smulbb	r8, r6, ip
 8011b7c:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8011b80:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 8011b84:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8011b88:	ea4f 08e8 	mov.w	r8, r8, asr #3
 8011b8c:	ea44 0909 	orr.w	r9, r4, r9
 8011b90:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8011b94:	f1cc 0410 	rsb	r4, ip, #16
 8011b98:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8011b9c:	1ba4      	subs	r4, r4, r6
 8011b9e:	041a      	lsls	r2, r3, #16
 8011ba0:	ebc8 0646 	rsb	r6, r8, r6, lsl #1
 8011ba4:	ea4a 0707 	orr.w	r7, sl, r7
 8011ba8:	4377      	muls	r7, r6
 8011baa:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8011bae:	eb08 0444 	add.w	r4, r8, r4, lsl #1
 8011bb2:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8011bb6:	fb04 7409 	mla	r4, r4, r9, r7
 8011bba:	4313      	orrs	r3, r2
 8011bbc:	ea4f 420e 	mov.w	r2, lr, lsl #16
 8011bc0:	fb08 4303 	mla	r3, r8, r3, r4
 8011bc4:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8011bc8:	f42e 64fc 	bic.w	r4, lr, #2016	; 0x7e0
 8011bcc:	4322      	orrs	r2, r4
 8011bce:	ebc8 0c4c 	rsb	ip, r8, ip, lsl #1
 8011bd2:	fb0c 3202 	mla	r2, ip, r2, r3
 8011bd6:	0d53      	lsrs	r3, r2, #21
 8011bd8:	0952      	lsrs	r2, r2, #5
 8011bda:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8011bde:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8011be2:	431a      	orrs	r2, r3
 8011be4:	b293      	uxth	r3, r2
 8011be6:	b2af      	uxth	r7, r5
 8011be8:	1202      	asrs	r2, r0, #8
 8011bea:	43ed      	mvns	r5, r5
 8011bec:	b2ed      	uxtb	r5, r5
 8011bee:	ea4f 2c23 	mov.w	ip, r3, asr #8
 8011bf2:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8011bf6:	fb12 f205 	smulbb	r2, r2, r5
 8011bfa:	10c6      	asrs	r6, r0, #3
 8011bfc:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8011c00:	fb0c 2c07 	mla	ip, ip, r7, r2
 8011c04:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8011c08:	10da      	asrs	r2, r3, #3
 8011c0a:	fb16 f605 	smulbb	r6, r6, r5
 8011c0e:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8011c12:	fb02 6207 	mla	r2, r2, r7, r6
 8011c16:	b296      	uxth	r6, r2
 8011c18:	00c2      	lsls	r2, r0, #3
 8011c1a:	00dc      	lsls	r4, r3, #3
 8011c1c:	b2d2      	uxtb	r2, r2
 8011c1e:	b2e4      	uxtb	r4, r4
 8011c20:	fb12 f205 	smulbb	r2, r2, r5
 8011c24:	fb04 2207 	mla	r2, r4, r7, r2
 8011c28:	fa1f fc8c 	uxth.w	ip, ip
 8011c2c:	b292      	uxth	r2, r2
 8011c2e:	f10c 0301 	add.w	r3, ip, #1
 8011c32:	1c50      	adds	r0, r2, #1
 8011c34:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 8011c38:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 8011c3c:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8011c40:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 8011c44:	4313      	orrs	r3, r2
 8011c46:	1c72      	adds	r2, r6, #1
 8011c48:	eb02 2216 	add.w	r2, r2, r6, lsr #8
 8011c4c:	0952      	lsrs	r2, r2, #5
 8011c4e:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8011c52:	4313      	orrs	r3, r2
 8011c54:	800b      	strh	r3, [r1, #0]
 8011c56:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011c5a:	2e0f      	cmp	r6, #15
 8011c5c:	f63f af71 	bhi.w	8011b42 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x8a>
 8011c60:	4603      	mov	r3, r0
 8011c62:	4686      	mov	lr, r0
 8011c64:	e786      	b.n	8011b74 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xbc>
 8011c66:	bf00      	nop
 8011c68:	0801c915 	.word	0x0801c915
 8011c6c:	0801cf16 	.word	0x0801cf16
 8011c70:	0801c99d 	.word	0x0801c99d

08011c74 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 8011c74:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011c78:	ed2d 8b08 	vpush	{d8-d11}
 8011c7c:	b09b      	sub	sp, #108	; 0x6c
 8011c7e:	e9dd 982d 	ldrd	r9, r8, [sp, #180]	; 0xb4
 8011c82:	9309      	str	r3, [sp, #36]	; 0x24
 8011c84:	f9bd 30d4 	ldrsh.w	r3, [sp, #212]	; 0xd4
 8011c88:	9e31      	ldr	r6, [sp, #196]	; 0xc4
 8011c8a:	930a      	str	r3, [sp, #40]	; 0x28
 8011c8c:	f89d 30dc 	ldrb.w	r3, [sp, #220]	; 0xdc
 8011c90:	930e      	str	r3, [sp, #56]	; 0x38
 8011c92:	910d      	str	r1, [sp, #52]	; 0x34
 8011c94:	e9dd 1332 	ldrd	r1, r3, [sp, #200]	; 0xc8
 8011c98:	9018      	str	r0, [sp, #96]	; 0x60
 8011c9a:	6870      	ldr	r0, [r6, #4]
 8011c9c:	9217      	str	r2, [sp, #92]	; 0x5c
 8011c9e:	fb00 1303 	mla	r3, r0, r3, r1
 8011ca2:	9a36      	ldr	r2, [sp, #216]	; 0xd8
 8011ca4:	6831      	ldr	r1, [r6, #0]
 8011ca6:	6856      	ldr	r6, [r2, #4]
 8011ca8:	f9bd 40d0 	ldrsh.w	r4, [sp, #208]	; 0xd0
 8011cac:	eb01 0a43 	add.w	sl, r1, r3, lsl #1
 8011cb0:	6813      	ldr	r3, [r2, #0]
 8011cb2:	930c      	str	r3, [sp, #48]	; 0x30
 8011cb4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8011cb6:	43db      	mvns	r3, r3
 8011cb8:	b2db      	uxtb	r3, r3
 8011cba:	eeb0 aa40 	vmov.f32	s20, s0
 8011cbe:	eef0 9a60 	vmov.f32	s19, s1
 8011cc2:	eeb0 9a41 	vmov.f32	s18, s2
 8011cc6:	eeb0 8a62 	vmov.f32	s16, s5
 8011cca:	eef0 8a43 	vmov.f32	s17, s6
 8011cce:	eef0 ba44 	vmov.f32	s23, s8
 8011cd2:	eeb0 ba64 	vmov.f32	s22, s9
 8011cd6:	eef0 aa45 	vmov.f32	s21, s10
 8011cda:	3604      	adds	r6, #4
 8011cdc:	930b      	str	r3, [sp, #44]	; 0x2c
 8011cde:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8011ce0:	2b00      	cmp	r3, #0
 8011ce2:	dc03      	bgt.n	8011cec <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x78>
 8011ce4:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8011ce6:	2b00      	cmp	r3, #0
 8011ce8:	f340 8215 	ble.w	8012116 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4a2>
 8011cec:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8011cee:	2b00      	cmp	r3, #0
 8011cf0:	f340 8102 	ble.w	8011ef8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x284>
 8011cf4:	ea5f 4229 	movs.w	r2, r9, asr #16
 8011cf8:	ea4f 4328 	mov.w	r3, r8, asr #16
 8011cfc:	d42c      	bmi.n	8011d58 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe4>
 8011cfe:	1c51      	adds	r1, r2, #1
 8011d00:	428c      	cmp	r4, r1
 8011d02:	dd2c      	ble.n	8011d5e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xea>
 8011d04:	2b00      	cmp	r3, #0
 8011d06:	db2a      	blt.n	8011d5e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xea>
 8011d08:	980a      	ldr	r0, [sp, #40]	; 0x28
 8011d0a:	1c59      	adds	r1, r3, #1
 8011d0c:	4288      	cmp	r0, r1
 8011d0e:	dd26      	ble.n	8011d5e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xea>
 8011d10:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8011d12:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 8011d14:	3b01      	subs	r3, #1
 8011d16:	fb02 9203 	mla	r2, r2, r3, r9
 8011d1a:	1412      	asrs	r2, r2, #16
 8011d1c:	d429      	bmi.n	8011d72 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfe>
 8011d1e:	3201      	adds	r2, #1
 8011d20:	4294      	cmp	r4, r2
 8011d22:	dd26      	ble.n	8011d72 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfe>
 8011d24:	9a30      	ldr	r2, [sp, #192]	; 0xc0
 8011d26:	fb02 8303 	mla	r3, r2, r3, r8
 8011d2a:	141b      	asrs	r3, r3, #16
 8011d2c:	d421      	bmi.n	8011d72 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfe>
 8011d2e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8011d30:	3301      	adds	r3, #1
 8011d32:	429a      	cmp	r2, r3
 8011d34:	dd1d      	ble.n	8011d72 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfe>
 8011d36:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 8011d3a:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
 8011d3e:	f8cd a03c 	str.w	sl, [sp, #60]	; 0x3c
 8011d42:	9312      	str	r3, [sp, #72]	; 0x48
 8011d44:	f1be 0f00 	cmp.w	lr, #0
 8011d48:	f300 8138 	bgt.w	8011fbc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x348>
 8011d4c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8011d4e:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8011d52:	eb0a 0a45 	add.w	sl, sl, r5, lsl #1
 8011d56:	e0d1      	b.n	8011efc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x288>
 8011d58:	1c51      	adds	r1, r2, #1
 8011d5a:	f040 80c3 	bne.w	8011ee4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x270>
 8011d5e:	42a2      	cmp	r2, r4
 8011d60:	f280 80c0 	bge.w	8011ee4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x270>
 8011d64:	1c5f      	adds	r7, r3, #1
 8011d66:	f2c0 80bd 	blt.w	8011ee4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x270>
 8011d6a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8011d6c:	4293      	cmp	r3, r2
 8011d6e:	f280 80b9 	bge.w	8011ee4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x270>
 8011d72:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 8011d76:	4657      	mov	r7, sl
 8011d78:	f1bb 0f00 	cmp.w	fp, #0
 8011d7c:	dde6      	ble.n	8011d4c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xd8>
 8011d7e:	ea5f 4229 	movs.w	r2, r9, asr #16
 8011d82:	ea4f 4328 	mov.w	r3, r8, asr #16
 8011d86:	f3c9 3003 	ubfx	r0, r9, #12, #4
 8011d8a:	f3c8 3103 	ubfx	r1, r8, #12, #4
 8011d8e:	f100 80fc 	bmi.w	8011f8a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x316>
 8011d92:	f102 0c01 	add.w	ip, r2, #1
 8011d96:	4564      	cmp	r4, ip
 8011d98:	f340 80f9 	ble.w	8011f8e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x31a>
 8011d9c:	2b00      	cmp	r3, #0
 8011d9e:	f2c0 80f6 	blt.w	8011f8e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x31a>
 8011da2:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 8011da4:	f103 0c01 	add.w	ip, r3, #1
 8011da8:	4565      	cmp	r5, ip
 8011daa:	f340 80f0 	ble.w	8011f8e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x31a>
 8011dae:	fb03 2304 	mla	r3, r3, r4, r2
 8011db2:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8011db4:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8011db6:	441a      	add	r2, r3
 8011db8:	5ceb      	ldrb	r3, [r5, r3]
 8011dba:	f836 e013 	ldrh.w	lr, [r6, r3, lsl #1]
 8011dbe:	2800      	cmp	r0, #0
 8011dc0:	f000 80db 	beq.w	8011f7a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x306>
 8011dc4:	7853      	ldrb	r3, [r2, #1]
 8011dc6:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8011dca:	9313      	str	r3, [sp, #76]	; 0x4c
 8011dcc:	b141      	cbz	r1, 8011de0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x16c>
 8011dce:	1913      	adds	r3, r2, r4
 8011dd0:	5d12      	ldrb	r2, [r2, r4]
 8011dd2:	785b      	ldrb	r3, [r3, #1]
 8011dd4:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 8011dd8:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8011ddc:	9210      	str	r2, [sp, #64]	; 0x40
 8011dde:	9314      	str	r3, [sp, #80]	; 0x50
 8011de0:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8011de2:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8011de4:	fb10 f201 	smulbb	r2, r0, r1
 8011de8:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8011dec:	10d2      	asrs	r2, r2, #3
 8011dee:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8011df2:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8011df6:	ea4c 0c03 	orr.w	ip, ip, r3
 8011dfa:	ebc2 0340 	rsb	r3, r2, r0, lsl #1
 8011dfe:	930f      	str	r3, [sp, #60]	; 0x3c
 8011e00:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8011e02:	041b      	lsls	r3, r3, #16
 8011e04:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 8011e08:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8011e0c:	432b      	orrs	r3, r5
 8011e0e:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8011e10:	4353      	muls	r3, r2
 8011e12:	fb05 330c 	mla	r3, r5, ip, r3
 8011e16:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 8011e1a:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8011e1e:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8011e22:	ea4c 0e0e 	orr.w	lr, ip, lr
 8011e26:	f1c1 0c10 	rsb	ip, r1, #16
 8011e2a:	ebac 0c00 	sub.w	ip, ip, r0
 8011e2e:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 8011e32:	fb0c 3c0e 	mla	ip, ip, lr, r3
 8011e36:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8011e38:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8011e3a:	0418      	lsls	r0, r3, #16
 8011e3c:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8011e40:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8011e44:	4318      	orrs	r0, r3
 8011e46:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 8011e4a:	fb02 c200 	mla	r2, r2, r0, ip
 8011e4e:	0d53      	lsrs	r3, r2, #21
 8011e50:	0952      	lsrs	r2, r2, #5
 8011e52:	f8b7 c000 	ldrh.w	ip, [r7]
 8011e56:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8011e5a:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8011e5e:	431a      	orrs	r2, r3
 8011e60:	b292      	uxth	r2, r2
 8011e62:	ea4f 212c 	mov.w	r1, ip, asr #8
 8011e66:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 8011e6a:	1210      	asrs	r0, r2, #8
 8011e6c:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8011e70:	fb11 f105 	smulbb	r1, r1, r5
 8011e74:	ea4f 0eec 	mov.w	lr, ip, asr #3
 8011e78:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8011e7c:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8011e80:	fb00 1003 	mla	r0, r0, r3, r1
 8011e84:	fa5f fc8c 	uxtb.w	ip, ip
 8011e88:	10d1      	asrs	r1, r2, #3
 8011e8a:	00d2      	lsls	r2, r2, #3
 8011e8c:	fb1c fc05 	smulbb	ip, ip, r5
 8011e90:	b2d2      	uxtb	r2, r2
 8011e92:	fb02 c203 	mla	r2, r2, r3, ip
 8011e96:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 8011e9a:	b280      	uxth	r0, r0
 8011e9c:	b292      	uxth	r2, r2
 8011e9e:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8011ea2:	fb1e fe05 	smulbb	lr, lr, r5
 8011ea6:	fb01 e103 	mla	r1, r1, r3, lr
 8011eaa:	f102 0c01 	add.w	ip, r2, #1
 8011eae:	1c43      	adds	r3, r0, #1
 8011eb0:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8011eb4:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 8011eb8:	b289      	uxth	r1, r1
 8011eba:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8011ebe:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 8011ec2:	4313      	orrs	r3, r2
 8011ec4:	1c4a      	adds	r2, r1, #1
 8011ec6:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8011eca:	0949      	lsrs	r1, r1, #5
 8011ecc:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8011ed0:	430b      	orrs	r3, r1
 8011ed2:	803b      	strh	r3, [r7, #0]
 8011ed4:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
 8011ed6:	4499      	add	r9, r3
 8011ed8:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8011eda:	3702      	adds	r7, #2
 8011edc:	4498      	add	r8, r3
 8011ede:	f10b 3bff 	add.w	fp, fp, #4294967295
 8011ee2:	e749      	b.n	8011d78 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x104>
 8011ee4:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
 8011ee6:	4499      	add	r9, r3
 8011ee8:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8011eea:	4498      	add	r8, r3
 8011eec:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8011eee:	3b01      	subs	r3, #1
 8011ef0:	9309      	str	r3, [sp, #36]	; 0x24
 8011ef2:	f10a 0a02 	add.w	sl, sl, #2
 8011ef6:	e6f9      	b.n	8011cec <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x78>
 8011ef8:	f47f af0a 	bne.w	8011d10 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9c>
 8011efc:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8011efe:	2b00      	cmp	r3, #0
 8011f00:	f340 8109 	ble.w	8012116 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4a2>
 8011f04:	ee3a aa2b 	vadd.f32	s20, s20, s23
 8011f08:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8011f0c:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 8011f10:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8011f12:	ee79 9a8b 	vadd.f32	s19, s19, s22
 8011f16:	ee39 9a2a 	vadd.f32	s18, s18, s21
 8011f1a:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8011f1e:	eef0 6a48 	vmov.f32	s13, s16
 8011f22:	ee69 7a27 	vmul.f32	s15, s18, s15
 8011f26:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8011f2a:	ee37 8a48 	vsub.f32	s16, s14, s16
 8011f2e:	ee16 9a90 	vmov	r9, s13
 8011f32:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8011f36:	eef0 6a68 	vmov.f32	s13, s17
 8011f3a:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8011f3e:	ee18 2a10 	vmov	r2, s16
 8011f42:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8011f46:	fb92 f3f3 	sdiv	r3, r2, r3
 8011f4a:	ee18 2a90 	vmov	r2, s17
 8011f4e:	932f      	str	r3, [sp, #188]	; 0xbc
 8011f50:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8011f52:	fb92 f3f3 	sdiv	r3, r2, r3
 8011f56:	9330      	str	r3, [sp, #192]	; 0xc0
 8011f58:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8011f5a:	9a17      	ldr	r2, [sp, #92]	; 0x5c
 8011f5c:	3b01      	subs	r3, #1
 8011f5e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8011f62:	930d      	str	r3, [sp, #52]	; 0x34
 8011f64:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8011f66:	bf08      	it	eq
 8011f68:	4613      	moveq	r3, r2
 8011f6a:	ee16 8a90 	vmov	r8, s13
 8011f6e:	9309      	str	r3, [sp, #36]	; 0x24
 8011f70:	eef0 8a67 	vmov.f32	s17, s15
 8011f74:	eeb0 8a47 	vmov.f32	s16, s14
 8011f78:	e6b1      	b.n	8011cde <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6a>
 8011f7a:	2900      	cmp	r1, #0
 8011f7c:	f43f af30 	beq.w	8011de0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x16c>
 8011f80:	5d13      	ldrb	r3, [r2, r4]
 8011f82:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8011f86:	9310      	str	r3, [sp, #64]	; 0x40
 8011f88:	e72a      	b.n	8011de0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x16c>
 8011f8a:	1c55      	adds	r5, r2, #1
 8011f8c:	d1a2      	bne.n	8011ed4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x260>
 8011f8e:	4294      	cmp	r4, r2
 8011f90:	dda0      	ble.n	8011ed4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x260>
 8011f92:	1c5d      	adds	r5, r3, #1
 8011f94:	db9e      	blt.n	8011ed4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x260>
 8011f96:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 8011f98:	429d      	cmp	r5, r3
 8011f9a:	dd9b      	ble.n	8011ed4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x260>
 8011f9c:	e9cd 3003 	strd	r3, r0, [sp, #12]
 8011fa0:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8011fa2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8011fa4:	9202      	str	r2, [sp, #8]
 8011fa6:	e9cd 1505 	strd	r1, r5, [sp, #20]
 8011faa:	e9cd 4300 	strd	r4, r3, [sp]
 8011fae:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8011fb0:	9818      	ldr	r0, [sp, #96]	; 0x60
 8011fb2:	4633      	mov	r3, r6
 8011fb4:	4639      	mov	r1, r7
 8011fb6:	f7ff fd7f 	bl	8011ab8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>
 8011fba:	e78b      	b.n	8011ed4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x260>
 8011fbc:	ea4f 4329 	mov.w	r3, r9, asr #16
 8011fc0:	ea4f 4228 	mov.w	r2, r8, asr #16
 8011fc4:	fb04 3202 	mla	r2, r4, r2, r3
 8011fc8:	990c      	ldr	r1, [sp, #48]	; 0x30
 8011fca:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8011fcc:	4413      	add	r3, r2
 8011fce:	5c8a      	ldrb	r2, [r1, r2]
 8011fd0:	f3c9 3c03 	ubfx	ip, r9, #12, #4
 8011fd4:	f3c8 3003 	ubfx	r0, r8, #12, #4
 8011fd8:	f836 1012 	ldrh.w	r1, [r6, r2, lsl #1]
 8011fdc:	f1bc 0f00 	cmp.w	ip, #0
 8011fe0:	f000 8091 	beq.w	8012106 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x492>
 8011fe4:	785a      	ldrb	r2, [r3, #1]
 8011fe6:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 8011fea:	9215      	str	r2, [sp, #84]	; 0x54
 8011fec:	b140      	cbz	r0, 8012000 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x38c>
 8011fee:	191a      	adds	r2, r3, r4
 8011ff0:	5d1b      	ldrb	r3, [r3, r4]
 8011ff2:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8011ff6:	9311      	str	r3, [sp, #68]	; 0x44
 8011ff8:	7853      	ldrb	r3, [r2, #1]
 8011ffa:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8011ffe:	9316      	str	r3, [sp, #88]	; 0x58
 8012000:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8012002:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8012004:	fb1c f200 	smulbb	r2, ip, r0
 8012008:	041f      	lsls	r7, r3, #16
 801200a:	10d2      	asrs	r2, r2, #3
 801200c:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8012010:	f007 67fc 	and.w	r7, r7, #132120576	; 0x7e00000
 8012014:	431f      	orrs	r7, r3
 8012016:	ebc2 034c 	rsb	r3, r2, ip, lsl #1
 801201a:	9319      	str	r3, [sp, #100]	; 0x64
 801201c:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801201e:	041b      	lsls	r3, r3, #16
 8012020:	f425 6bfc 	bic.w	fp, r5, #2016	; 0x7e0
 8012024:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8012028:	ea43 030b 	orr.w	r3, r3, fp
 801202c:	9d19      	ldr	r5, [sp, #100]	; 0x64
 801202e:	4353      	muls	r3, r2
 8012030:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8012034:	fb05 3707 	mla	r7, r5, r7, r3
 8012038:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801203c:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
 8012040:	ea43 0b01 	orr.w	fp, r3, r1
 8012044:	f1c0 0110 	rsb	r1, r0, #16
 8012048:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801204a:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 801204c:	eba1 0c0c 	sub.w	ip, r1, ip
 8012050:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 8012054:	fb0c 770b 	mla	r7, ip, fp, r7
 8012058:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801205c:	f423 6bfc 	bic.w	fp, r3, #2016	; 0x7e0
 8012060:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8012064:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 8012068:	ea4c 0c0b 	orr.w	ip, ip, fp
 801206c:	fb02 770c 	mla	r7, r2, ip, r7
 8012070:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8012072:	0d79      	lsrs	r1, r7, #21
 8012074:	8812      	ldrh	r2, [r2, #0]
 8012076:	097f      	lsrs	r7, r7, #5
 8012078:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801207c:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8012080:	430f      	orrs	r7, r1
 8012082:	1211      	asrs	r1, r2, #8
 8012084:	b2bb      	uxth	r3, r7
 8012086:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801208a:	fb11 f105 	smulbb	r1, r1, r5
 801208e:	1218      	asrs	r0, r3, #8
 8012090:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8012092:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8012096:	fb00 1005 	mla	r0, r0, r5, r1
 801209a:	10d7      	asrs	r7, r2, #3
 801209c:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 801209e:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 80120a2:	fb17 f705 	smulbb	r7, r7, r5
 80120a6:	10d9      	asrs	r1, r3, #3
 80120a8:	9d12      	ldr	r5, [sp, #72]	; 0x48
 80120aa:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 80120ae:	fb01 7105 	mla	r1, r1, r5, r7
 80120b2:	00d2      	lsls	r2, r2, #3
 80120b4:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 80120b6:	b2d2      	uxtb	r2, r2
 80120b8:	fb12 f205 	smulbb	r2, r2, r5
 80120bc:	00db      	lsls	r3, r3, #3
 80120be:	9d12      	ldr	r5, [sp, #72]	; 0x48
 80120c0:	b2db      	uxtb	r3, r3
 80120c2:	b280      	uxth	r0, r0
 80120c4:	fb03 2305 	mla	r3, r3, r5, r2
 80120c8:	b29b      	uxth	r3, r3
 80120ca:	b289      	uxth	r1, r1
 80120cc:	1c42      	adds	r2, r0, #1
 80120ce:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 80120d2:	1c4f      	adds	r7, r1, #1
 80120d4:	1c5a      	adds	r2, r3, #1
 80120d6:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 80120da:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 80120de:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 80120e2:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 80120e6:	0949      	lsrs	r1, r1, #5
 80120e8:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80120ea:	4310      	orrs	r0, r2
 80120ec:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80120f0:	4308      	orrs	r0, r1
 80120f2:	f823 0b02 	strh.w	r0, [r3], #2
 80120f6:	930f      	str	r3, [sp, #60]	; 0x3c
 80120f8:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
 80120fa:	4499      	add	r9, r3
 80120fc:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 80120fe:	f10e 3eff 	add.w	lr, lr, #4294967295
 8012102:	4498      	add	r8, r3
 8012104:	e61e      	b.n	8011d44 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xd0>
 8012106:	2800      	cmp	r0, #0
 8012108:	f43f af7a 	beq.w	8012000 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x38c>
 801210c:	5d1b      	ldrb	r3, [r3, r4]
 801210e:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8012112:	9311      	str	r3, [sp, #68]	; 0x44
 8012114:	e774      	b.n	8012000 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x38c>
 8012116:	b01b      	add	sp, #108	; 0x6c
 8012118:	ecbd 8b08 	vpop	{d8-d11}
 801211c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08012120 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 8012120:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8012124:	e9dd 560a 	ldrd	r5, r6, [sp, #40]	; 0x28
 8012128:	f9bd e020 	ldrsh.w	lr, [sp, #32]
 801212c:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 8012130:	f89d 4030 	ldrb.w	r4, [sp, #48]	; 0x30
 8012134:	f89d c034 	ldrb.w	ip, [sp, #52]	; 0x34
 8012138:	8808      	ldrh	r0, [r1, #0]
 801213a:	fb06 570e 	mla	r7, r6, lr, r5
 801213e:	2e00      	cmp	r6, #0
 8012140:	eb02 0807 	add.w	r8, r2, r7
 8012144:	db38      	blt.n	80121b8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x98>
 8012146:	45b1      	cmp	r9, r6
 8012148:	dd36      	ble.n	80121b8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x98>
 801214a:	2d00      	cmp	r5, #0
 801214c:	db32      	blt.n	80121b4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x94>
 801214e:	45ae      	cmp	lr, r5
 8012150:	dd30      	ble.n	80121b4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x94>
 8012152:	5dd2      	ldrb	r2, [r2, r7]
 8012154:	f833 7012 	ldrh.w	r7, [r3, r2, lsl #1]
 8012158:	1c6a      	adds	r2, r5, #1
 801215a:	d430      	bmi.n	80121be <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x9e>
 801215c:	4596      	cmp	lr, r2
 801215e:	dd2e      	ble.n	80121be <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x9e>
 8012160:	b36c      	cbz	r4, 80121be <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x9e>
 8012162:	f898 2001 	ldrb.w	r2, [r8, #1]
 8012166:	f833 2012 	ldrh.w	r2, [r3, r2, lsl #1]
 801216a:	3601      	adds	r6, #1
 801216c:	d42b      	bmi.n	80121c6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xa6>
 801216e:	45b1      	cmp	r9, r6
 8012170:	dd29      	ble.n	80121c6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xa6>
 8012172:	f1bc 0f00 	cmp.w	ip, #0
 8012176:	d028      	beq.n	80121ca <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xaa>
 8012178:	2d00      	cmp	r5, #0
 801217a:	db22      	blt.n	80121c2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xa2>
 801217c:	45ae      	cmp	lr, r5
 801217e:	dd20      	ble.n	80121c2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xa2>
 8012180:	f818 600e 	ldrb.w	r6, [r8, lr]
 8012184:	f833 6016 	ldrh.w	r6, [r3, r6, lsl #1]
 8012188:	3501      	adds	r5, #1
 801218a:	d407      	bmi.n	801219c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7c>
 801218c:	45ae      	cmp	lr, r5
 801218e:	dd05      	ble.n	801219c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7c>
 8012190:	b134      	cbz	r4, 80121a0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 8012192:	44c6      	add	lr, r8
 8012194:	f89e 0001 	ldrb.w	r0, [lr, #1]
 8012198:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 801219c:	2c0f      	cmp	r4, #15
 801219e:	d802      	bhi.n	80121a6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x86>
 80121a0:	f1bc 0f0f 	cmp.w	ip, #15
 80121a4:	d914      	bls.n	80121d0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xb0>
 80121a6:	4b26      	ldr	r3, [pc, #152]	; (8012240 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x120>)
 80121a8:	4a26      	ldr	r2, [pc, #152]	; (8012244 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x124>)
 80121aa:	4827      	ldr	r0, [pc, #156]	; (8012248 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x128>)
 80121ac:	f240 11ef 	movw	r1, #495	; 0x1ef
 80121b0:	f006 fd1c 	bl	8018bec <__assert_func>
 80121b4:	4607      	mov	r7, r0
 80121b6:	e7cf      	b.n	8012158 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x38>
 80121b8:	4602      	mov	r2, r0
 80121ba:	4607      	mov	r7, r0
 80121bc:	e7d5      	b.n	801216a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4a>
 80121be:	4602      	mov	r2, r0
 80121c0:	e7d3      	b.n	801216a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4a>
 80121c2:	4606      	mov	r6, r0
 80121c4:	e7e0      	b.n	8012188 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x68>
 80121c6:	4606      	mov	r6, r0
 80121c8:	e7e8      	b.n	801219c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7c>
 80121ca:	2c0f      	cmp	r4, #15
 80121cc:	d8eb      	bhi.n	80121a6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x86>
 80121ce:	4606      	mov	r6, r0
 80121d0:	043d      	lsls	r5, r7, #16
 80121d2:	fb14 f30c 	smulbb	r3, r4, ip
 80121d6:	f005 65fc 	and.w	r5, r5, #132120576	; 0x7e00000
 80121da:	ea4f 4e02 	mov.w	lr, r2, lsl #16
 80121de:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 80121e2:	10db      	asrs	r3, r3, #3
 80121e4:	432f      	orrs	r7, r5
 80121e6:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 80121ea:	f1cc 0510 	rsb	r5, ip, #16
 80121ee:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80121f2:	1b2d      	subs	r5, r5, r4
 80121f4:	ea4e 0202 	orr.w	r2, lr, r2
 80121f8:	ebc3 0444 	rsb	r4, r3, r4, lsl #1
 80121fc:	eb03 0545 	add.w	r5, r3, r5, lsl #1
 8012200:	4354      	muls	r4, r2
 8012202:	fb05 4507 	mla	r5, r5, r7, r4
 8012206:	0404      	lsls	r4, r0, #16
 8012208:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 801220c:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8012210:	4320      	orrs	r0, r4
 8012212:	fb03 5400 	mla	r4, r3, r0, r5
 8012216:	0430      	lsls	r0, r6, #16
 8012218:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801221c:	f426 66fc 	bic.w	r6, r6, #2016	; 0x7e0
 8012220:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 8012224:	4330      	orrs	r0, r6
 8012226:	fb03 4000 	mla	r0, r3, r0, r4
 801222a:	0d43      	lsrs	r3, r0, #21
 801222c:	0940      	lsrs	r0, r0, #5
 801222e:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8012232:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8012236:	4318      	orrs	r0, r3
 8012238:	8008      	strh	r0, [r1, #0]
 801223a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 801223e:	bf00      	nop
 8012240:	0801c915 	.word	0x0801c915
 8012244:	0801cf16 	.word	0x0801cf16
 8012248:	0801c99d 	.word	0x0801c99d

0801224c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 801224c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012250:	ed2d 8b0a 	vpush	{d8-d12}
 8012254:	b095      	sub	sp, #84	; 0x54
 8012256:	e9dd 9629 	ldrd	r9, r6, [sp, #164]	; 0xa4
 801225a:	9f2d      	ldr	r7, [sp, #180]	; 0xb4
 801225c:	9306      	str	r3, [sp, #24]
 801225e:	f9bd 30c4 	ldrsh.w	r3, [sp, #196]	; 0xc4
 8012262:	9109      	str	r1, [sp, #36]	; 0x24
 8012264:	9307      	str	r3, [sp, #28]
 8012266:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	; 0xb8
 801226a:	9012      	str	r0, [sp, #72]	; 0x48
 801226c:	6878      	ldr	r0, [r7, #4]
 801226e:	9211      	str	r2, [sp, #68]	; 0x44
 8012270:	9a32      	ldr	r2, [sp, #200]	; 0xc8
 8012272:	f9bd 40c0 	ldrsh.w	r4, [sp, #192]	; 0xc0
 8012276:	fb00 1303 	mla	r3, r0, r3, r1
 801227a:	6839      	ldr	r1, [r7, #0]
 801227c:	6857      	ldr	r7, [r2, #4]
 801227e:	eb01 0a43 	add.w	sl, r1, r3, lsl #1
 8012282:	6813      	ldr	r3, [r2, #0]
 8012284:	9308      	str	r3, [sp, #32]
 8012286:	eeb0 aa40 	vmov.f32	s20, s0
 801228a:	eef0 9a60 	vmov.f32	s19, s1
 801228e:	eeb0 9a41 	vmov.f32	s18, s2
 8012292:	eeb0 8a62 	vmov.f32	s16, s5
 8012296:	eef0 8a43 	vmov.f32	s17, s6
 801229a:	eeb0 ca44 	vmov.f32	s24, s8
 801229e:	eef0 ba64 	vmov.f32	s23, s9
 80122a2:	eeb0 ba45 	vmov.f32	s22, s10
 80122a6:	3704      	adds	r7, #4
 80122a8:	eef7 aa00 	vmov.f32	s21, #112	; 0x3f800000  1.0
 80122ac:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80122ae:	2b00      	cmp	r3, #0
 80122b0:	dc03      	bgt.n	80122ba <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6e>
 80122b2:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80122b4:	2b00      	cmp	r3, #0
 80122b6:	f340 819a 	ble.w	80125ee <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3a2>
 80122ba:	9b06      	ldr	r3, [sp, #24]
 80122bc:	2b00      	cmp	r3, #0
 80122be:	f340 80c4 	ble.w	801244a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1fe>
 80122c2:	ea5f 4229 	movs.w	r2, r9, asr #16
 80122c6:	ea4f 4326 	mov.w	r3, r6, asr #16
 80122ca:	d429      	bmi.n	8012320 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xd4>
 80122cc:	1c51      	adds	r1, r2, #1
 80122ce:	428c      	cmp	r4, r1
 80122d0:	dd29      	ble.n	8012326 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xda>
 80122d2:	2b00      	cmp	r3, #0
 80122d4:	db27      	blt.n	8012326 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xda>
 80122d6:	9807      	ldr	r0, [sp, #28]
 80122d8:	1c59      	adds	r1, r3, #1
 80122da:	4288      	cmp	r0, r1
 80122dc:	dd23      	ble.n	8012326 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xda>
 80122de:	9b06      	ldr	r3, [sp, #24]
 80122e0:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 80122e2:	3b01      	subs	r3, #1
 80122e4:	fb02 9203 	mla	r2, r2, r3, r9
 80122e8:	1412      	asrs	r2, r2, #16
 80122ea:	d425      	bmi.n	8012338 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xec>
 80122ec:	3201      	adds	r2, #1
 80122ee:	4294      	cmp	r4, r2
 80122f0:	dd22      	ble.n	8012338 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xec>
 80122f2:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 80122f4:	fb02 6303 	mla	r3, r2, r3, r6
 80122f8:	141b      	asrs	r3, r3, #16
 80122fa:	d41d      	bmi.n	8012338 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xec>
 80122fc:	9a07      	ldr	r2, [sp, #28]
 80122fe:	3301      	adds	r3, #1
 8012300:	429a      	cmp	r2, r3
 8012302:	dd19      	ble.n	8012338 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xec>
 8012304:	f8dd 8018 	ldr.w	r8, [sp, #24]
 8012308:	f8cd a030 	str.w	sl, [sp, #48]	; 0x30
 801230c:	f1b8 0f00 	cmp.w	r8, #0
 8012310:	f300 80f8 	bgt.w	8012504 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2b8>
 8012314:	9b06      	ldr	r3, [sp, #24]
 8012316:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 801231a:	eb0a 0a45 	add.w	sl, sl, r5, lsl #1
 801231e:	e096      	b.n	801244e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x202>
 8012320:	1c51      	adds	r1, r2, #1
 8012322:	f040 8088 	bne.w	8012436 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1ea>
 8012326:	42a2      	cmp	r2, r4
 8012328:	f280 8085 	bge.w	8012436 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1ea>
 801232c:	1c5a      	adds	r2, r3, #1
 801232e:	f2c0 8082 	blt.w	8012436 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1ea>
 8012332:	9a07      	ldr	r2, [sp, #28]
 8012334:	4293      	cmp	r3, r2
 8012336:	da7e      	bge.n	8012436 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1ea>
 8012338:	f8dd b018 	ldr.w	fp, [sp, #24]
 801233c:	46d0      	mov	r8, sl
 801233e:	f1bb 0f00 	cmp.w	fp, #0
 8012342:	dde7      	ble.n	8012314 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xc8>
 8012344:	ea5f 4229 	movs.w	r2, r9, asr #16
 8012348:	ea4f 4326 	mov.w	r3, r6, asr #16
 801234c:	f3c9 3003 	ubfx	r0, r9, #12, #4
 8012350:	f3c6 3103 	ubfx	r1, r6, #12, #4
 8012354:	f100 80c0 	bmi.w	80124d8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x28c>
 8012358:	f102 0c01 	add.w	ip, r2, #1
 801235c:	4564      	cmp	r4, ip
 801235e:	f340 80bd 	ble.w	80124dc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x290>
 8012362:	2b00      	cmp	r3, #0
 8012364:	f2c0 80ba 	blt.w	80124dc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x290>
 8012368:	9d07      	ldr	r5, [sp, #28]
 801236a:	f103 0c01 	add.w	ip, r3, #1
 801236e:	4565      	cmp	r5, ip
 8012370:	f340 80b4 	ble.w	80124dc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x290>
 8012374:	fb03 2304 	mla	r3, r3, r4, r2
 8012378:	9d08      	ldr	r5, [sp, #32]
 801237a:	9a08      	ldr	r2, [sp, #32]
 801237c:	441a      	add	r2, r3
 801237e:	5ceb      	ldrb	r3, [r5, r3]
 8012380:	f837 e013 	ldrh.w	lr, [r7, r3, lsl #1]
 8012384:	2800      	cmp	r0, #0
 8012386:	f000 809f 	beq.w	80124c8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x27c>
 801238a:	7853      	ldrb	r3, [r2, #1]
 801238c:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8012390:	930d      	str	r3, [sp, #52]	; 0x34
 8012392:	b141      	cbz	r1, 80123a6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x15a>
 8012394:	1913      	adds	r3, r2, r4
 8012396:	5d12      	ldrb	r2, [r2, r4]
 8012398:	785b      	ldrb	r3, [r3, #1]
 801239a:	f837 2012 	ldrh.w	r2, [r7, r2, lsl #1]
 801239e:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 80123a2:	920a      	str	r2, [sp, #40]	; 0x28
 80123a4:	930e      	str	r3, [sp, #56]	; 0x38
 80123a6:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80123a8:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 80123aa:	fb10 f201 	smulbb	r2, r0, r1
 80123ae:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 80123b2:	10d2      	asrs	r2, r2, #3
 80123b4:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 80123b8:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 80123bc:	ea4c 0c03 	orr.w	ip, ip, r3
 80123c0:	ebc2 0340 	rsb	r3, r2, r0, lsl #1
 80123c4:	930c      	str	r3, [sp, #48]	; 0x30
 80123c6:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80123c8:	041b      	lsls	r3, r3, #16
 80123ca:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 80123ce:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 80123d2:	432b      	orrs	r3, r5
 80123d4:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 80123d6:	4353      	muls	r3, r2
 80123d8:	fb05 330c 	mla	r3, r5, ip, r3
 80123dc:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 80123e0:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 80123e4:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 80123e8:	ea4c 0e0e 	orr.w	lr, ip, lr
 80123ec:	f1c1 0c10 	rsb	ip, r1, #16
 80123f0:	ebac 0c00 	sub.w	ip, ip, r0
 80123f4:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 80123f8:	fb0c 3c0e 	mla	ip, ip, lr, r3
 80123fc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80123fe:	0418      	lsls	r0, r3, #16
 8012400:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8012404:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8012408:	4318      	orrs	r0, r3
 801240a:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 801240e:	fb02 c200 	mla	r2, r2, r0, ip
 8012412:	0d53      	lsrs	r3, r2, #21
 8012414:	0952      	lsrs	r2, r2, #5
 8012416:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801241a:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801241e:	431a      	orrs	r2, r3
 8012420:	f8a8 2000 	strh.w	r2, [r8]
 8012424:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8012426:	4499      	add	r9, r3
 8012428:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801242a:	f108 0802 	add.w	r8, r8, #2
 801242e:	441e      	add	r6, r3
 8012430:	f10b 3bff 	add.w	fp, fp, #4294967295
 8012434:	e783      	b.n	801233e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf2>
 8012436:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8012438:	4499      	add	r9, r3
 801243a:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801243c:	441e      	add	r6, r3
 801243e:	9b06      	ldr	r3, [sp, #24]
 8012440:	3b01      	subs	r3, #1
 8012442:	9306      	str	r3, [sp, #24]
 8012444:	f10a 0a02 	add.w	sl, sl, #2
 8012448:	e737      	b.n	80122ba <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6e>
 801244a:	f47f af48 	bne.w	80122de <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x92>
 801244e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8012450:	2b00      	cmp	r3, #0
 8012452:	f340 80cc 	ble.w	80125ee <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3a2>
 8012456:	ee3a aa0c 	vadd.f32	s20, s20, s24
 801245a:	ee79 9aab 	vadd.f32	s19, s19, s23
 801245e:	eeca 7a8a 	vdiv.f32	s15, s21, s20
 8012462:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8012464:	ee39 9a0b 	vadd.f32	s18, s18, s22
 8012468:	ee29 7aa7 	vmul.f32	s14, s19, s15
 801246c:	eef0 6a48 	vmov.f32	s13, s16
 8012470:	ee69 7a27 	vmul.f32	s15, s18, s15
 8012474:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8012478:	ee37 8a48 	vsub.f32	s16, s14, s16
 801247c:	ee16 9a90 	vmov	r9, s13
 8012480:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8012484:	eef0 6a68 	vmov.f32	s13, s17
 8012488:	ee77 8ae8 	vsub.f32	s17, s15, s17
 801248c:	ee18 2a10 	vmov	r2, s16
 8012490:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8012494:	fb92 f3f3 	sdiv	r3, r2, r3
 8012498:	ee18 2a90 	vmov	r2, s17
 801249c:	932b      	str	r3, [sp, #172]	; 0xac
 801249e:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80124a0:	fb92 f3f3 	sdiv	r3, r2, r3
 80124a4:	932c      	str	r3, [sp, #176]	; 0xb0
 80124a6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80124a8:	9a11      	ldr	r2, [sp, #68]	; 0x44
 80124aa:	3b01      	subs	r3, #1
 80124ac:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80124b0:	9309      	str	r3, [sp, #36]	; 0x24
 80124b2:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80124b4:	bf08      	it	eq
 80124b6:	4613      	moveq	r3, r2
 80124b8:	ee16 6a90 	vmov	r6, s13
 80124bc:	9306      	str	r3, [sp, #24]
 80124be:	eef0 8a67 	vmov.f32	s17, s15
 80124c2:	eeb0 8a47 	vmov.f32	s16, s14
 80124c6:	e6f1      	b.n	80122ac <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x60>
 80124c8:	2900      	cmp	r1, #0
 80124ca:	f43f af6c 	beq.w	80123a6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x15a>
 80124ce:	5d13      	ldrb	r3, [r2, r4]
 80124d0:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 80124d4:	930a      	str	r3, [sp, #40]	; 0x28
 80124d6:	e766      	b.n	80123a6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x15a>
 80124d8:	1c55      	adds	r5, r2, #1
 80124da:	d1a3      	bne.n	8012424 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d8>
 80124dc:	4294      	cmp	r4, r2
 80124de:	dda1      	ble.n	8012424 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d8>
 80124e0:	1c5d      	adds	r5, r3, #1
 80124e2:	db9f      	blt.n	8012424 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d8>
 80124e4:	9d07      	ldr	r5, [sp, #28]
 80124e6:	429d      	cmp	r5, r3
 80124e8:	dd9c      	ble.n	8012424 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d8>
 80124ea:	e9cd 0104 	strd	r0, r1, [sp, #16]
 80124ee:	e9cd 2302 	strd	r2, r3, [sp, #8]
 80124f2:	e9cd 4500 	strd	r4, r5, [sp]
 80124f6:	463b      	mov	r3, r7
 80124f8:	9a08      	ldr	r2, [sp, #32]
 80124fa:	9812      	ldr	r0, [sp, #72]	; 0x48
 80124fc:	4641      	mov	r1, r8
 80124fe:	f7ff fe0f 	bl	8012120 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 8012502:	e78f      	b.n	8012424 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d8>
 8012504:	ea4f 4329 	mov.w	r3, r9, asr #16
 8012508:	1432      	asrs	r2, r6, #16
 801250a:	fb04 3202 	mla	r2, r4, r2, r3
 801250e:	9908      	ldr	r1, [sp, #32]
 8012510:	9b08      	ldr	r3, [sp, #32]
 8012512:	4413      	add	r3, r2
 8012514:	5c8a      	ldrb	r2, [r1, r2]
 8012516:	f3c9 3e03 	ubfx	lr, r9, #12, #4
 801251a:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801251e:	f837 1012 	ldrh.w	r1, [r7, r2, lsl #1]
 8012522:	f1be 0f00 	cmp.w	lr, #0
 8012526:	d05b      	beq.n	80125e0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x394>
 8012528:	785a      	ldrb	r2, [r3, #1]
 801252a:	f837 2012 	ldrh.w	r2, [r7, r2, lsl #1]
 801252e:	920f      	str	r2, [sp, #60]	; 0x3c
 8012530:	b140      	cbz	r0, 8012544 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2f8>
 8012532:	191a      	adds	r2, r3, r4
 8012534:	5d1b      	ldrb	r3, [r3, r4]
 8012536:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801253a:	930b      	str	r3, [sp, #44]	; 0x2c
 801253c:	7853      	ldrb	r3, [r2, #1]
 801253e:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8012542:	9310      	str	r3, [sp, #64]	; 0x40
 8012544:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8012546:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8012548:	fb1e f200 	smulbb	r2, lr, r0
 801254c:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8012550:	10d2      	asrs	r2, r2, #3
 8012552:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8012556:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801255a:	ea4c 0c03 	orr.w	ip, ip, r3
 801255e:	ebc2 034e 	rsb	r3, r2, lr, lsl #1
 8012562:	9313      	str	r3, [sp, #76]	; 0x4c
 8012564:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8012566:	041b      	lsls	r3, r3, #16
 8012568:	f425 6bfc 	bic.w	fp, r5, #2016	; 0x7e0
 801256c:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8012570:	ea43 030b 	orr.w	r3, r3, fp
 8012574:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8012576:	4353      	muls	r3, r2
 8012578:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 801257c:	fb05 3c0c 	mla	ip, r5, ip, r3
 8012580:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8012584:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
 8012588:	ea43 0b01 	orr.w	fp, r3, r1
 801258c:	f1c0 0110 	rsb	r1, r0, #16
 8012590:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8012592:	eba1 0e0e 	sub.w	lr, r1, lr
 8012596:	eb02 0e4e 	add.w	lr, r2, lr, lsl #1
 801259a:	fb0e cc0b 	mla	ip, lr, fp, ip
 801259e:	ea4f 4b03 	mov.w	fp, r3, lsl #16
 80125a2:	f423 6efc 	bic.w	lr, r3, #2016	; 0x7e0
 80125a6:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 80125aa:	ea4b 0e0e 	orr.w	lr, fp, lr
 80125ae:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 80125b2:	fb02 cc0e 	mla	ip, r2, lr, ip
 80125b6:	ea4f 535c 	mov.w	r3, ip, lsr #21
 80125ba:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 80125be:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80125c2:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 80125c6:	ea43 0c0c 	orr.w	ip, r3, ip
 80125ca:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80125cc:	f823 cb02 	strh.w	ip, [r3], #2
 80125d0:	930c      	str	r3, [sp, #48]	; 0x30
 80125d2:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 80125d4:	4499      	add	r9, r3
 80125d6:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80125d8:	f108 38ff 	add.w	r8, r8, #4294967295
 80125dc:	441e      	add	r6, r3
 80125de:	e695      	b.n	801230c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xc0>
 80125e0:	2800      	cmp	r0, #0
 80125e2:	d0af      	beq.n	8012544 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2f8>
 80125e4:	5d1b      	ldrb	r3, [r3, r4]
 80125e6:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 80125ea:	930b      	str	r3, [sp, #44]	; 0x2c
 80125ec:	e7aa      	b.n	8012544 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2f8>
 80125ee:	b015      	add	sp, #84	; 0x54
 80125f0:	ecbd 8b0a 	vpop	{d8-d12}
 80125f4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080125f8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>:
 80125f8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80125fc:	468b      	mov	fp, r1
 80125fe:	8809      	ldrh	r1, [r1, #0]
 8012600:	b089      	sub	sp, #36	; 0x24
 8012602:	10cd      	asrs	r5, r1, #3
 8012604:	e9dd 6414 	ldrd	r6, r4, [sp, #80]	; 0x50
 8012608:	ea4f 2921 	mov.w	r9, r1, asr #8
 801260c:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8012610:	00c9      	lsls	r1, r1, #3
 8012612:	9500      	str	r5, [sp, #0]
 8012614:	b2c9      	uxtb	r1, r1
 8012616:	f9bd e048 	ldrsh.w	lr, [sp, #72]	; 0x48
 801261a:	9101      	str	r1, [sp, #4]
 801261c:	9900      	ldr	r1, [sp, #0]
 801261e:	9202      	str	r2, [sp, #8]
 8012620:	fb04 650e 	mla	r5, r4, lr, r6
 8012624:	f009 09f8 	and.w	r9, r9, #248	; 0xf8
 8012628:	eb02 0805 	add.w	r8, r2, r5
 801262c:	0209      	lsls	r1, r1, #8
 801262e:	9a01      	ldr	r2, [sp, #4]
 8012630:	f9bd a04c 	ldrsh.w	sl, [sp, #76]	; 0x4c
 8012634:	f89d 7058 	ldrb.w	r7, [sp, #88]	; 0x58
 8012638:	f89d 005c 	ldrb.w	r0, [sp, #92]	; 0x5c
 801263c:	f89d c060 	ldrb.w	ip, [sp, #96]	; 0x60
 8012640:	ea41 4109 	orr.w	r1, r1, r9, lsl #16
 8012644:	4311      	orrs	r1, r2
 8012646:	2c00      	cmp	r4, #0
 8012648:	9107      	str	r1, [sp, #28]
 801264a:	db43      	blt.n	80126d4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xdc>
 801264c:	45a2      	cmp	sl, r4
 801264e:	dd41      	ble.n	80126d4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xdc>
 8012650:	2e00      	cmp	r6, #0
 8012652:	db3d      	blt.n	80126d0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd8>
 8012654:	45b6      	cmp	lr, r6
 8012656:	dd3b      	ble.n	80126d0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd8>
 8012658:	9a02      	ldr	r2, [sp, #8]
 801265a:	5d55      	ldrb	r5, [r2, r5]
 801265c:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8012660:	441d      	add	r5, r3
 8012662:	1c72      	adds	r2, r6, #1
 8012664:	d439      	bmi.n	80126da <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xe2>
 8012666:	4596      	cmp	lr, r2
 8012668:	dd37      	ble.n	80126da <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xe2>
 801266a:	2f00      	cmp	r7, #0
 801266c:	d035      	beq.n	80126da <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xe2>
 801266e:	f898 1001 	ldrb.w	r1, [r8, #1]
 8012672:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8012676:	4419      	add	r1, r3
 8012678:	3401      	adds	r4, #1
 801267a:	d432      	bmi.n	80126e2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xea>
 801267c:	45a2      	cmp	sl, r4
 801267e:	dd30      	ble.n	80126e2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xea>
 8012680:	b378      	cbz	r0, 80126e2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xea>
 8012682:	2e00      	cmp	r6, #0
 8012684:	db2b      	blt.n	80126de <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xe6>
 8012686:	45b6      	cmp	lr, r6
 8012688:	dd29      	ble.n	80126de <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xe6>
 801268a:	f818 400e 	ldrb.w	r4, [r8, lr]
 801268e:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 8012692:	441c      	add	r4, r3
 8012694:	3601      	adds	r6, #1
 8012696:	d427      	bmi.n	80126e8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xf0>
 8012698:	45b6      	cmp	lr, r6
 801269a:	dd25      	ble.n	80126e8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xf0>
 801269c:	b327      	cbz	r7, 80126e8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xf0>
 801269e:	44c6      	add	lr, r8
 80126a0:	f89e 2001 	ldrb.w	r2, [lr, #1]
 80126a4:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80126a8:	4413      	add	r3, r2
 80126aa:	782a      	ldrb	r2, [r5, #0]
 80126ac:	9202      	str	r2, [sp, #8]
 80126ae:	780a      	ldrb	r2, [r1, #0]
 80126b0:	9203      	str	r2, [sp, #12]
 80126b2:	7822      	ldrb	r2, [r4, #0]
 80126b4:	9204      	str	r2, [sp, #16]
 80126b6:	2f0f      	cmp	r7, #15
 80126b8:	781a      	ldrb	r2, [r3, #0]
 80126ba:	9205      	str	r2, [sp, #20]
 80126bc:	d801      	bhi.n	80126c2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xca>
 80126be:	280f      	cmp	r0, #15
 80126c0:	d914      	bls.n	80126ec <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xf4>
 80126c2:	4b3f      	ldr	r3, [pc, #252]	; (80127c0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c8>)
 80126c4:	4a3f      	ldr	r2, [pc, #252]	; (80127c4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1cc>)
 80126c6:	4840      	ldr	r0, [pc, #256]	; (80127c8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d0>)
 80126c8:	f240 210d 	movw	r1, #525	; 0x20d
 80126cc:	f006 fa8e 	bl	8018bec <__assert_func>
 80126d0:	ad07      	add	r5, sp, #28
 80126d2:	e7c6      	b.n	8012662 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x6a>
 80126d4:	a907      	add	r1, sp, #28
 80126d6:	460d      	mov	r5, r1
 80126d8:	e7ce      	b.n	8012678 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x80>
 80126da:	a907      	add	r1, sp, #28
 80126dc:	e7cc      	b.n	8012678 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x80>
 80126de:	ac07      	add	r4, sp, #28
 80126e0:	e7d8      	b.n	8012694 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x9c>
 80126e2:	ab07      	add	r3, sp, #28
 80126e4:	461c      	mov	r4, r3
 80126e6:	e7e0      	b.n	80126aa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xb2>
 80126e8:	ab07      	add	r3, sp, #28
 80126ea:	e7de      	b.n	80126aa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xb2>
 80126ec:	b2ba      	uxth	r2, r7
 80126ee:	b280      	uxth	r0, r0
 80126f0:	fb02 fa00 	mul.w	sl, r2, r0
 80126f4:	ebca 1000 	rsb	r0, sl, r0, lsl #4
 80126f8:	0112      	lsls	r2, r2, #4
 80126fa:	b280      	uxth	r0, r0
 80126fc:	f891 8002 	ldrb.w	r8, [r1, #2]
 8012700:	7849      	ldrb	r1, [r1, #1]
 8012702:	78ae      	ldrb	r6, [r5, #2]
 8012704:	786d      	ldrb	r5, [r5, #1]
 8012706:	f5c2 7e80 	rsb	lr, r2, #256	; 0x100
 801270a:	eba2 020a 	sub.w	r2, r2, sl
 801270e:	b292      	uxth	r2, r2
 8012710:	ebae 0e00 	sub.w	lr, lr, r0
 8012714:	fa1f fe8e 	uxth.w	lr, lr
 8012718:	4351      	muls	r1, r2
 801271a:	fb02 f808 	mul.w	r8, r2, r8
 801271e:	fb0e 8806 	mla	r8, lr, r6, r8
 8012722:	fb0e 1505 	mla	r5, lr, r5, r1
 8012726:	78a6      	ldrb	r6, [r4, #2]
 8012728:	7861      	ldrb	r1, [r4, #1]
 801272a:	fa1f f78c 	uxth.w	r7, ip
 801272e:	fb00 8806 	mla	r8, r0, r6, r8
 8012732:	fb00 5501 	mla	r5, r0, r1, r5
 8012736:	789e      	ldrb	r6, [r3, #2]
 8012738:	7859      	ldrb	r1, [r3, #1]
 801273a:	9b00      	ldr	r3, [sp, #0]
 801273c:	ea6f 0c0c 	mvn.w	ip, ip
 8012740:	fa5f fc8c 	uxtb.w	ip, ip
 8012744:	fb0a 5101 	mla	r1, sl, r1, r5
 8012748:	fb13 f50c 	smulbb	r5, r3, ip
 801274c:	9b03      	ldr	r3, [sp, #12]
 801274e:	435a      	muls	r2, r3
 8012750:	9b02      	ldr	r3, [sp, #8]
 8012752:	fb0e 2203 	mla	r2, lr, r3, r2
 8012756:	9b04      	ldr	r3, [sp, #16]
 8012758:	fb00 2003 	mla	r0, r0, r3, r2
 801275c:	9b05      	ldr	r3, [sp, #20]
 801275e:	fb0a 8606 	mla	r6, sl, r6, r8
 8012762:	fb0a 0a03 	mla	sl, sl, r3, r0
 8012766:	9b01      	ldr	r3, [sp, #4]
 8012768:	fb19 f90c 	smulbb	r9, r9, ip
 801276c:	f3ca 2a07 	ubfx	sl, sl, #8, #8
 8012770:	fb13 fc0c 	smulbb	ip, r3, ip
 8012774:	f3c6 2607 	ubfx	r6, r6, #8, #8
 8012778:	f3c1 2107 	ubfx	r1, r1, #8, #8
 801277c:	fb06 9607 	mla	r6, r6, r7, r9
 8012780:	fb01 5107 	mla	r1, r1, r7, r5
 8012784:	fb0a c707 	mla	r7, sl, r7, ip
 8012788:	b2b6      	uxth	r6, r6
 801278a:	b289      	uxth	r1, r1
 801278c:	b2bf      	uxth	r7, r7
 801278e:	f106 0901 	add.w	r9, r6, #1
 8012792:	f107 0c01 	add.w	ip, r7, #1
 8012796:	1c4d      	adds	r5, r1, #1
 8012798:	eb09 2616 	add.w	r6, r9, r6, lsr #8
 801279c:	eb0c 2717 	add.w	r7, ip, r7, lsr #8
 80127a0:	eb05 2111 	add.w	r1, r5, r1, lsr #8
 80127a4:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 80127a8:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 80127ac:	0949      	lsrs	r1, r1, #5
 80127ae:	433e      	orrs	r6, r7
 80127b0:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80127b4:	430e      	orrs	r6, r1
 80127b6:	f8ab 6000 	strh.w	r6, [fp]
 80127ba:	b009      	add	sp, #36	; 0x24
 80127bc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80127c0:	0801c915 	.word	0x0801c915
 80127c4:	0801ce6d 	.word	0x0801ce6d
 80127c8:	0801c99d 	.word	0x0801c99d

080127cc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 80127cc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80127d0:	ed2d 8b08 	vpush	{d8-d11}
 80127d4:	b097      	sub	sp, #92	; 0x5c
 80127d6:	eeb0 aa40 	vmov.f32	s20, s0
 80127da:	9309      	str	r3, [sp, #36]	; 0x24
 80127dc:	f9bd 30c4 	ldrsh.w	r3, [sp, #196]	; 0xc4
 80127e0:	9c2d      	ldr	r4, [sp, #180]	; 0xb4
 80127e2:	930b      	str	r3, [sp, #44]	; 0x2c
 80127e4:	f89d 30cc 	ldrb.w	r3, [sp, #204]	; 0xcc
 80127e8:	9310      	str	r3, [sp, #64]	; 0x40
 80127ea:	910f      	str	r1, [sp, #60]	; 0x3c
 80127ec:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	; 0xb8
 80127f0:	9015      	str	r0, [sp, #84]	; 0x54
 80127f2:	6860      	ldr	r0, [r4, #4]
 80127f4:	9213      	str	r2, [sp, #76]	; 0x4c
 80127f6:	fb00 1303 	mla	r3, r0, r3, r1
 80127fa:	9a32      	ldr	r2, [sp, #200]	; 0xc8
 80127fc:	6821      	ldr	r1, [r4, #0]
 80127fe:	6854      	ldr	r4, [r2, #4]
 8012800:	f9bd 50c0 	ldrsh.w	r5, [sp, #192]	; 0xc0
 8012804:	eb01 0343 	add.w	r3, r1, r3, lsl #1
 8012808:	930a      	str	r3, [sp, #40]	; 0x28
 801280a:	6813      	ldr	r3, [r2, #0]
 801280c:	930e      	str	r3, [sp, #56]	; 0x38
 801280e:	1d23      	adds	r3, r4, #4
 8012810:	9308      	str	r3, [sp, #32]
 8012812:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8012814:	43db      	mvns	r3, r3
 8012816:	b2db      	uxtb	r3, r3
 8012818:	eef0 9a60 	vmov.f32	s19, s1
 801281c:	eeb0 9a41 	vmov.f32	s18, s2
 8012820:	eeb0 8a62 	vmov.f32	s16, s5
 8012824:	eef0 8a43 	vmov.f32	s17, s6
 8012828:	eef0 ba44 	vmov.f32	s23, s8
 801282c:	eeb0 ba64 	vmov.f32	s22, s9
 8012830:	eef0 aa45 	vmov.f32	s21, s10
 8012834:	930c      	str	r3, [sp, #48]	; 0x30
 8012836:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8012838:	2b00      	cmp	r3, #0
 801283a:	dc03      	bgt.n	8012844 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x78>
 801283c:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801283e:	2b00      	cmp	r3, #0
 8012840:	f340 825c 	ble.w	8012cfc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x530>
 8012844:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8012846:	2b00      	cmp	r3, #0
 8012848:	f340 8127 	ble.w	8012a9a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2ce>
 801284c:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 801284e:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8012850:	1412      	asrs	r2, r2, #16
 8012852:	ea4f 4323 	mov.w	r3, r3, asr #16
 8012856:	d430      	bmi.n	80128ba <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xee>
 8012858:	1c51      	adds	r1, r2, #1
 801285a:	428d      	cmp	r5, r1
 801285c:	dd30      	ble.n	80128c0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf4>
 801285e:	2b00      	cmp	r3, #0
 8012860:	db2e      	blt.n	80128c0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf4>
 8012862:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8012864:	1c59      	adds	r1, r3, #1
 8012866:	4288      	cmp	r0, r1
 8012868:	dd2a      	ble.n	80128c0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf4>
 801286a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801286c:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 801286e:	9929      	ldr	r1, [sp, #164]	; 0xa4
 8012870:	3b01      	subs	r3, #1
 8012872:	fb02 1203 	mla	r2, r2, r3, r1
 8012876:	1412      	asrs	r2, r2, #16
 8012878:	d42c      	bmi.n	80128d4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x108>
 801287a:	3201      	adds	r2, #1
 801287c:	4295      	cmp	r5, r2
 801287e:	dd29      	ble.n	80128d4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x108>
 8012880:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 8012882:	992a      	ldr	r1, [sp, #168]	; 0xa8
 8012884:	fb02 1303 	mla	r3, r2, r3, r1
 8012888:	141b      	asrs	r3, r3, #16
 801288a:	d423      	bmi.n	80128d4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x108>
 801288c:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801288e:	3301      	adds	r3, #1
 8012890:	429a      	cmp	r2, r3
 8012892:	dd1f      	ble.n	80128d4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x108>
 8012894:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8012896:	9311      	str	r3, [sp, #68]	; 0x44
 8012898:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801289a:	930d      	str	r3, [sp, #52]	; 0x34
 801289c:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 80128a0:	9312      	str	r3, [sp, #72]	; 0x48
 80128a2:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80128a4:	2b00      	cmp	r3, #0
 80128a6:	f300 8161 	bgt.w	8012b6c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3a0>
 80128aa:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80128ac:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80128ae:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80128b2:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80128b6:	930a      	str	r3, [sp, #40]	; 0x28
 80128b8:	e0f1      	b.n	8012a9e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2d2>
 80128ba:	1c51      	adds	r1, r2, #1
 80128bc:	f040 80de 	bne.w	8012a7c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2b0>
 80128c0:	42aa      	cmp	r2, r5
 80128c2:	f280 80db 	bge.w	8012a7c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2b0>
 80128c6:	1c5f      	adds	r7, r3, #1
 80128c8:	f2c0 80d8 	blt.w	8012a7c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2b0>
 80128cc:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80128ce:	4293      	cmp	r3, r2
 80128d0:	f280 80d4 	bge.w	8012a7c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2b0>
 80128d4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80128d6:	9311      	str	r3, [sp, #68]	; 0x44
 80128d8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80128da:	930d      	str	r3, [sp, #52]	; 0x34
 80128dc:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80128de:	2b00      	cmp	r3, #0
 80128e0:	dde3      	ble.n	80128aa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xde>
 80128e2:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80128e4:	9829      	ldr	r0, [sp, #164]	; 0xa4
 80128e6:	992a      	ldr	r1, [sp, #168]	; 0xa8
 80128e8:	141a      	asrs	r2, r3, #16
 80128ea:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80128ec:	1400      	asrs	r0, r0, #16
 80128ee:	f3c3 3303 	ubfx	r3, r3, #12, #4
 80128f2:	f3c1 3103 	ubfx	r1, r1, #12, #4
 80128f6:	f100 8120 	bmi.w	8012b3a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x36e>
 80128fa:	1c46      	adds	r6, r0, #1
 80128fc:	42b5      	cmp	r5, r6
 80128fe:	f340 811e 	ble.w	8012b3e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x372>
 8012902:	2a00      	cmp	r2, #0
 8012904:	f2c0 811b 	blt.w	8012b3e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x372>
 8012908:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 801290a:	1c56      	adds	r6, r2, #1
 801290c:	42b7      	cmp	r7, r6
 801290e:	f340 8116 	ble.w	8012b3e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x372>
 8012912:	fb02 0005 	mla	r0, r2, r5, r0
 8012916:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 8012918:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801291a:	9c08      	ldr	r4, [sp, #32]
 801291c:	4402      	add	r2, r0
 801291e:	5c30      	ldrb	r0, [r6, r0]
 8012920:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8012924:	9014      	str	r0, [sp, #80]	; 0x50
 8012926:	1826      	adds	r6, r4, r0
 8012928:	2b00      	cmp	r3, #0
 801292a:	f000 80f7 	beq.w	8012b1c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x350>
 801292e:	f892 e001 	ldrb.w	lr, [r2, #1]
 8012932:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 8012936:	44a6      	add	lr, r4
 8012938:	2900      	cmp	r1, #0
 801293a:	f000 80f8 	beq.w	8012b2e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x362>
 801293e:	1950      	adds	r0, r2, r5
 8012940:	5d52      	ldrb	r2, [r2, r5]
 8012942:	7840      	ldrb	r0, [r0, #1]
 8012944:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8012948:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801294c:	4422      	add	r2, r4
 801294e:	4420      	add	r0, r4
 8012950:	b29b      	uxth	r3, r3
 8012952:	b289      	uxth	r1, r1
 8012954:	fb03 fa01 	mul.w	sl, r3, r1
 8012958:	ebca 1101 	rsb	r1, sl, r1, lsl #4
 801295c:	011b      	lsls	r3, r3, #4
 801295e:	b289      	uxth	r1, r1
 8012960:	f89e c002 	ldrb.w	ip, [lr, #2]
 8012964:	f896 b002 	ldrb.w	fp, [r6, #2]
 8012968:	9f0d      	ldr	r7, [sp, #52]	; 0x34
 801296a:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 801296c:	f8b7 8000 	ldrh.w	r8, [r7]
 8012970:	f8bd 7040 	ldrh.w	r7, [sp, #64]	; 0x40
 8012974:	f5c3 7980 	rsb	r9, r3, #256	; 0x100
 8012978:	eba3 030a 	sub.w	r3, r3, sl
 801297c:	b29b      	uxth	r3, r3
 801297e:	eba9 0901 	sub.w	r9, r9, r1
 8012982:	fa1f f989 	uxth.w	r9, r9
 8012986:	fb03 fc0c 	mul.w	ip, r3, ip
 801298a:	fb09 cc0b 	mla	ip, r9, fp, ip
 801298e:	f892 b002 	ldrb.w	fp, [r2, #2]
 8012992:	fb01 cc0b 	mla	ip, r1, fp, ip
 8012996:	f890 b002 	ldrb.w	fp, [r0, #2]
 801299a:	fb0a cc0b 	mla	ip, sl, fp, ip
 801299e:	ea4f 2b28 	mov.w	fp, r8, asr #8
 80129a2:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
 80129a6:	fb1b fb04 	smulbb	fp, fp, r4
 80129aa:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 80129ae:	fb0c bc07 	mla	ip, ip, r7, fp
 80129b2:	f896 b001 	ldrb.w	fp, [r6, #1]
 80129b6:	f89e 6001 	ldrb.w	r6, [lr, #1]
 80129ba:	f89e e000 	ldrb.w	lr, [lr]
 80129be:	435e      	muls	r6, r3
 80129c0:	fb09 660b 	mla	r6, r9, fp, r6
 80129c4:	f892 b001 	ldrb.w	fp, [r2, #1]
 80129c8:	fb01 660b 	mla	r6, r1, fp, r6
 80129cc:	f890 b001 	ldrb.w	fp, [r0, #1]
 80129d0:	fb0a 660b 	mla	r6, sl, fp, r6
 80129d4:	ea4f 0be8 	mov.w	fp, r8, asr #3
 80129d8:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 80129dc:	fb1b fb04 	smulbb	fp, fp, r4
 80129e0:	f3c6 2607 	ubfx	r6, r6, #8, #8
 80129e4:	fb06 b607 	mla	r6, r6, r7, fp
 80129e8:	b2b4      	uxth	r4, r6
 80129ea:	9412      	str	r4, [sp, #72]	; 0x48
 80129ec:	9e08      	ldr	r6, [sp, #32]
 80129ee:	9c14      	ldr	r4, [sp, #80]	; 0x50
 80129f0:	f816 b004 	ldrb.w	fp, [r6, r4]
 80129f4:	fb03 f30e 	mul.w	r3, r3, lr
 80129f8:	f892 e000 	ldrb.w	lr, [r2]
 80129fc:	fb09 330b 	mla	r3, r9, fp, r3
 8012a00:	fb01 330e 	mla	r3, r1, lr, r3
 8012a04:	f890 e000 	ldrb.w	lr, [r0]
 8012a08:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8012a0c:	fb0a 3e0e 	mla	lr, sl, lr, r3
 8012a10:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8012a12:	fa5f f888 	uxtb.w	r8, r8
 8012a16:	f3ce 2e07 	ubfx	lr, lr, #8, #8
 8012a1a:	fb18 f803 	smulbb	r8, r8, r3
 8012a1e:	fb0e 8807 	mla	r8, lr, r7, r8
 8012a22:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8012a24:	fa1f fc8c 	uxth.w	ip, ip
 8012a28:	fa1f f888 	uxth.w	r8, r8
 8012a2c:	f103 0b01 	add.w	fp, r3, #1
 8012a30:	f10c 0201 	add.w	r2, ip, #1
 8012a34:	f108 0e01 	add.w	lr, r8, #1
 8012a38:	eb0b 2613 	add.w	r6, fp, r3, lsr #8
 8012a3c:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 8012a40:	eb0e 2818 	add.w	r8, lr, r8, lsr #8
 8012a44:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8012a48:	f3c8 28c4 	ubfx	r8, r8, #11, #5
 8012a4c:	0976      	lsrs	r6, r6, #5
 8012a4e:	ea4c 0c08 	orr.w	ip, ip, r8
 8012a52:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8012a56:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8012a58:	ea4c 0606 	orr.w	r6, ip, r6
 8012a5c:	801e      	strh	r6, [r3, #0]
 8012a5e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8012a60:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 8012a62:	3302      	adds	r3, #2
 8012a64:	930d      	str	r3, [sp, #52]	; 0x34
 8012a66:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8012a68:	4413      	add	r3, r2
 8012a6a:	9329      	str	r3, [sp, #164]	; 0xa4
 8012a6c:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 8012a6e:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8012a70:	4413      	add	r3, r2
 8012a72:	932a      	str	r3, [sp, #168]	; 0xa8
 8012a74:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8012a76:	3b01      	subs	r3, #1
 8012a78:	9311      	str	r3, [sp, #68]	; 0x44
 8012a7a:	e72f      	b.n	80128dc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x110>
 8012a7c:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8012a7e:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 8012a80:	4413      	add	r3, r2
 8012a82:	9329      	str	r3, [sp, #164]	; 0xa4
 8012a84:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 8012a86:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8012a88:	4413      	add	r3, r2
 8012a8a:	932a      	str	r3, [sp, #168]	; 0xa8
 8012a8c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8012a8e:	3b01      	subs	r3, #1
 8012a90:	9309      	str	r3, [sp, #36]	; 0x24
 8012a92:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8012a94:	3302      	adds	r3, #2
 8012a96:	930a      	str	r3, [sp, #40]	; 0x28
 8012a98:	e6d4      	b.n	8012844 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x78>
 8012a9a:	f47f aee6 	bne.w	801286a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9e>
 8012a9e:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8012aa0:	2b00      	cmp	r3, #0
 8012aa2:	f340 812b 	ble.w	8012cfc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x530>
 8012aa6:	ee3a aa2b 	vadd.f32	s20, s20, s23
 8012aaa:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8012aae:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 8012ab2:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8012ab4:	ee79 9a8b 	vadd.f32	s19, s19, s22
 8012ab8:	ee39 9a2a 	vadd.f32	s18, s18, s21
 8012abc:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8012ac0:	eef0 6a48 	vmov.f32	s13, s16
 8012ac4:	ee69 7a27 	vmul.f32	s15, s18, s15
 8012ac8:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8012acc:	ee37 8a48 	vsub.f32	s16, s14, s16
 8012ad0:	edcd 6a29 	vstr	s13, [sp, #164]	; 0xa4
 8012ad4:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8012ad8:	eef0 6a68 	vmov.f32	s13, s17
 8012adc:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8012ae0:	ee18 2a10 	vmov	r2, s16
 8012ae4:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8012ae8:	fb92 f3f3 	sdiv	r3, r2, r3
 8012aec:	ee18 2a90 	vmov	r2, s17
 8012af0:	932b      	str	r3, [sp, #172]	; 0xac
 8012af2:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8012af4:	fb92 f3f3 	sdiv	r3, r2, r3
 8012af8:	932c      	str	r3, [sp, #176]	; 0xb0
 8012afa:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8012afc:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8012afe:	3b01      	subs	r3, #1
 8012b00:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8012b04:	930f      	str	r3, [sp, #60]	; 0x3c
 8012b06:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8012b08:	edcd 6a2a 	vstr	s13, [sp, #168]	; 0xa8
 8012b0c:	bf08      	it	eq
 8012b0e:	4613      	moveq	r3, r2
 8012b10:	9309      	str	r3, [sp, #36]	; 0x24
 8012b12:	eef0 8a67 	vmov.f32	s17, s15
 8012b16:	eeb0 8a47 	vmov.f32	s16, s14
 8012b1a:	e68c      	b.n	8012836 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6a>
 8012b1c:	b151      	cbz	r1, 8012b34 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x368>
 8012b1e:	5d52      	ldrb	r2, [r2, r5]
 8012b20:	9808      	ldr	r0, [sp, #32]
 8012b22:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8012b26:	4402      	add	r2, r0
 8012b28:	4630      	mov	r0, r6
 8012b2a:	46b6      	mov	lr, r6
 8012b2c:	e710      	b.n	8012950 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x184>
 8012b2e:	4630      	mov	r0, r6
 8012b30:	4632      	mov	r2, r6
 8012b32:	e70d      	b.n	8012950 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x184>
 8012b34:	4630      	mov	r0, r6
 8012b36:	4632      	mov	r2, r6
 8012b38:	e7f7      	b.n	8012b2a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x35e>
 8012b3a:	1c46      	adds	r6, r0, #1
 8012b3c:	d18f      	bne.n	8012a5e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x292>
 8012b3e:	4285      	cmp	r5, r0
 8012b40:	dd8d      	ble.n	8012a5e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x292>
 8012b42:	1c54      	adds	r4, r2, #1
 8012b44:	db8b      	blt.n	8012a5e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x292>
 8012b46:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8012b48:	4294      	cmp	r4, r2
 8012b4a:	dd88      	ble.n	8012a5e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x292>
 8012b4c:	e9cd 2303 	strd	r2, r3, [sp, #12]
 8012b50:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8012b52:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8012b54:	9002      	str	r0, [sp, #8]
 8012b56:	e9cd 1405 	strd	r1, r4, [sp, #20]
 8012b5a:	e9cd 5300 	strd	r5, r3, [sp]
 8012b5e:	e9dd 120d 	ldrd	r1, r2, [sp, #52]	; 0x34
 8012b62:	9b08      	ldr	r3, [sp, #32]
 8012b64:	9815      	ldr	r0, [sp, #84]	; 0x54
 8012b66:	f7ff fd47 	bl	80125f8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>
 8012b6a:	e778      	b.n	8012a5e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x292>
 8012b6c:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 8012b6e:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8012b70:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8012b72:	1410      	asrs	r0, r2, #16
 8012b74:	f3c2 3103 	ubfx	r1, r2, #12, #4
 8012b78:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8012b7a:	1412      	asrs	r2, r2, #16
 8012b7c:	fb05 2000 	mla	r0, r5, r0, r2
 8012b80:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8012b82:	f814 a000 	ldrb.w	sl, [r4, r0]
 8012b86:	4402      	add	r2, r0
 8012b88:	9808      	ldr	r0, [sp, #32]
 8012b8a:	eb0a 0a4a 	add.w	sl, sl, sl, lsl #1
 8012b8e:	f3c3 3303 	ubfx	r3, r3, #12, #4
 8012b92:	eb00 060a 	add.w	r6, r0, sl
 8012b96:	2b00      	cmp	r3, #0
 8012b98:	f000 80a1 	beq.w	8012cde <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x512>
 8012b9c:	f892 c001 	ldrb.w	ip, [r2, #1]
 8012ba0:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 8012ba4:	4484      	add	ip, r0
 8012ba6:	2900      	cmp	r1, #0
 8012ba8:	f000 80a2 	beq.w	8012cf0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x524>
 8012bac:	1950      	adds	r0, r2, r5
 8012bae:	5d52      	ldrb	r2, [r2, r5]
 8012bb0:	7840      	ldrb	r0, [r0, #1]
 8012bb2:	9c08      	ldr	r4, [sp, #32]
 8012bb4:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8012bb8:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8012bbc:	4422      	add	r2, r4
 8012bbe:	4420      	add	r0, r4
 8012bc0:	b29b      	uxth	r3, r3
 8012bc2:	b289      	uxth	r1, r1
 8012bc4:	fb03 f901 	mul.w	r9, r3, r1
 8012bc8:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8012bcc:	011b      	lsls	r3, r3, #4
 8012bce:	b289      	uxth	r1, r1
 8012bd0:	f89c 7002 	ldrb.w	r7, [ip, #2]
 8012bd4:	f896 b002 	ldrb.w	fp, [r6, #2]
 8012bd8:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8012bda:	f5c3 7880 	rsb	r8, r3, #256	; 0x100
 8012bde:	eba3 0309 	sub.w	r3, r3, r9
 8012be2:	b29b      	uxth	r3, r3
 8012be4:	eba8 0801 	sub.w	r8, r8, r1
 8012be8:	fa1f f888 	uxth.w	r8, r8
 8012bec:	435f      	muls	r7, r3
 8012bee:	fb08 770b 	mla	r7, r8, fp, r7
 8012bf2:	f892 b002 	ldrb.w	fp, [r2, #2]
 8012bf6:	f8b4 e000 	ldrh.w	lr, [r4]
 8012bfa:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8012bfc:	fb01 770b 	mla	r7, r1, fp, r7
 8012c00:	f890 b002 	ldrb.w	fp, [r0, #2]
 8012c04:	fb09 770b 	mla	r7, r9, fp, r7
 8012c08:	ea4f 2b2e 	mov.w	fp, lr, asr #8
 8012c0c:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
 8012c10:	fb1b fb04 	smulbb	fp, fp, r4
 8012c14:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8012c16:	f3c7 2707 	ubfx	r7, r7, #8, #8
 8012c1a:	fb07 b704 	mla	r7, r7, r4, fp
 8012c1e:	f896 b001 	ldrb.w	fp, [r6, #1]
 8012c22:	f89c 6001 	ldrb.w	r6, [ip, #1]
 8012c26:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8012c28:	f89c c000 	ldrb.w	ip, [ip]
 8012c2c:	435e      	muls	r6, r3
 8012c2e:	fb08 660b 	mla	r6, r8, fp, r6
 8012c32:	f892 b001 	ldrb.w	fp, [r2, #1]
 8012c36:	fb01 660b 	mla	r6, r1, fp, r6
 8012c3a:	f890 b001 	ldrb.w	fp, [r0, #1]
 8012c3e:	fb09 660b 	mla	r6, r9, fp, r6
 8012c42:	ea4f 0bee 	mov.w	fp, lr, asr #3
 8012c46:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 8012c4a:	fb1b fb04 	smulbb	fp, fp, r4
 8012c4e:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8012c50:	f3c6 2607 	ubfx	r6, r6, #8, #8
 8012c54:	fb06 b604 	mla	r6, r6, r4, fp
 8012c58:	9c08      	ldr	r4, [sp, #32]
 8012c5a:	f814 a00a 	ldrb.w	sl, [r4, sl]
 8012c5e:	fb03 f30c 	mul.w	r3, r3, ip
 8012c62:	f892 c000 	ldrb.w	ip, [r2]
 8012c66:	fb08 330a 	mla	r3, r8, sl, r3
 8012c6a:	fb01 330c 	mla	r3, r1, ip, r3
 8012c6e:	f890 c000 	ldrb.w	ip, [r0]
 8012c72:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8012c76:	fb09 3c0c 	mla	ip, r9, ip, r3
 8012c7a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8012c7c:	fa5f fe8e 	uxtb.w	lr, lr
 8012c80:	fb1e fe03 	smulbb	lr, lr, r3
 8012c84:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8012c86:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 8012c8a:	fb0c ec03 	mla	ip, ip, r3, lr
 8012c8e:	b2bf      	uxth	r7, r7
 8012c90:	b2b6      	uxth	r6, r6
 8012c92:	fa1f fc8c 	uxth.w	ip, ip
 8012c96:	1c7b      	adds	r3, r7, #1
 8012c98:	f10c 0201 	add.w	r2, ip, #1
 8012c9c:	f106 0b01 	add.w	fp, r6, #1
 8012ca0:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 8012ca4:	eb02 221c 	add.w	r2, r2, ip, lsr #8
 8012ca8:	eb0b 2616 	add.w	r6, fp, r6, lsr #8
 8012cac:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8012cb0:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8012cb4:	0976      	lsrs	r6, r6, #5
 8012cb6:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8012cb8:	4317      	orrs	r7, r2
 8012cba:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8012cbe:	4337      	orrs	r7, r6
 8012cc0:	f823 7b02 	strh.w	r7, [r3], #2
 8012cc4:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 8012cc6:	930d      	str	r3, [sp, #52]	; 0x34
 8012cc8:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8012cca:	4413      	add	r3, r2
 8012ccc:	9329      	str	r3, [sp, #164]	; 0xa4
 8012cce:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 8012cd0:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8012cd2:	4413      	add	r3, r2
 8012cd4:	932a      	str	r3, [sp, #168]	; 0xa8
 8012cd6:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8012cd8:	3b01      	subs	r3, #1
 8012cda:	9311      	str	r3, [sp, #68]	; 0x44
 8012cdc:	e5e1      	b.n	80128a2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xd6>
 8012cde:	b151      	cbz	r1, 8012cf6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x52a>
 8012ce0:	5d52      	ldrb	r2, [r2, r5]
 8012ce2:	9808      	ldr	r0, [sp, #32]
 8012ce4:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8012ce8:	4402      	add	r2, r0
 8012cea:	4630      	mov	r0, r6
 8012cec:	46b4      	mov	ip, r6
 8012cee:	e767      	b.n	8012bc0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3f4>
 8012cf0:	4630      	mov	r0, r6
 8012cf2:	4632      	mov	r2, r6
 8012cf4:	e764      	b.n	8012bc0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3f4>
 8012cf6:	4630      	mov	r0, r6
 8012cf8:	4632      	mov	r2, r6
 8012cfa:	e7f7      	b.n	8012cec <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x520>
 8012cfc:	b017      	add	sp, #92	; 0x5c
 8012cfe:	ecbd 8b08 	vpop	{d8-d11}
 8012d02:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

08012d08 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>:
 8012d08:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012d0c:	880e      	ldrh	r6, [r1, #0]
 8012d0e:	b085      	sub	sp, #20
 8012d10:	0230      	lsls	r0, r6, #8
 8012d12:	e9dd 7510 	ldrd	r7, r5, [sp, #64]	; 0x40
 8012d16:	f400 0b78 	and.w	fp, r0, #16252928	; 0xf80000
 8012d1a:	0170      	lsls	r0, r6, #5
 8012d1c:	f9bd c038 	ldrsh.w	ip, [sp, #56]	; 0x38
 8012d20:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	; 0x3c
 8012d24:	f89d 404c 	ldrb.w	r4, [sp, #76]	; 0x4c
 8012d28:	f400 407c 	and.w	r0, r0, #64512	; 0xfc00
 8012d2c:	00f6      	lsls	r6, r6, #3
 8012d2e:	ea4b 0000 	orr.w	r0, fp, r0
 8012d32:	b2f6      	uxtb	r6, r6
 8012d34:	4691      	mov	r9, r2
 8012d36:	fb05 7a0c 	mla	sl, r5, ip, r7
 8012d3a:	4306      	orrs	r6, r0
 8012d3c:	2d00      	cmp	r5, #0
 8012d3e:	f89d 2048 	ldrb.w	r2, [sp, #72]	; 0x48
 8012d42:	9603      	str	r6, [sp, #12]
 8012d44:	eb09 0e0a 	add.w	lr, r9, sl
 8012d48:	db42      	blt.n	8012dd0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xc8>
 8012d4a:	45a8      	cmp	r8, r5
 8012d4c:	dd40      	ble.n	8012dd0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xc8>
 8012d4e:	2f00      	cmp	r7, #0
 8012d50:	db3c      	blt.n	8012dcc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xc4>
 8012d52:	45bc      	cmp	ip, r7
 8012d54:	dd3a      	ble.n	8012dcc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xc4>
 8012d56:	f819 600a 	ldrb.w	r6, [r9, sl]
 8012d5a:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 8012d5e:	441e      	add	r6, r3
 8012d60:	1c78      	adds	r0, r7, #1
 8012d62:	d438      	bmi.n	8012dd6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xce>
 8012d64:	4584      	cmp	ip, r0
 8012d66:	dd36      	ble.n	8012dd6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xce>
 8012d68:	b3aa      	cbz	r2, 8012dd6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xce>
 8012d6a:	f89e 0001 	ldrb.w	r0, [lr, #1]
 8012d6e:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8012d72:	4418      	add	r0, r3
 8012d74:	3501      	adds	r5, #1
 8012d76:	d432      	bmi.n	8012dde <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd6>
 8012d78:	45a8      	cmp	r8, r5
 8012d7a:	dd30      	ble.n	8012dde <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd6>
 8012d7c:	b37c      	cbz	r4, 8012dde <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd6>
 8012d7e:	2f00      	cmp	r7, #0
 8012d80:	db2b      	blt.n	8012dda <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd2>
 8012d82:	45bc      	cmp	ip, r7
 8012d84:	dd29      	ble.n	8012dda <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd2>
 8012d86:	f81e 500c 	ldrb.w	r5, [lr, ip]
 8012d8a:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8012d8e:	441d      	add	r5, r3
 8012d90:	3701      	adds	r7, #1
 8012d92:	d427      	bmi.n	8012de4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xdc>
 8012d94:	45bc      	cmp	ip, r7
 8012d96:	dd25      	ble.n	8012de4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xdc>
 8012d98:	b322      	cbz	r2, 8012de4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xdc>
 8012d9a:	44f4      	add	ip, lr
 8012d9c:	f89c 7001 	ldrb.w	r7, [ip, #1]
 8012da0:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 8012da4:	443b      	add	r3, r7
 8012da6:	781f      	ldrb	r7, [r3, #0]
 8012da8:	f896 a000 	ldrb.w	sl, [r6]
 8012dac:	f890 b000 	ldrb.w	fp, [r0]
 8012db0:	f895 9000 	ldrb.w	r9, [r5]
 8012db4:	9700      	str	r7, [sp, #0]
 8012db6:	2a0f      	cmp	r2, #15
 8012db8:	d801      	bhi.n	8012dbe <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xb6>
 8012dba:	2c0f      	cmp	r4, #15
 8012dbc:	d914      	bls.n	8012de8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xe0>
 8012dbe:	4b2c      	ldr	r3, [pc, #176]	; (8012e70 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x168>)
 8012dc0:	4a2c      	ldr	r2, [pc, #176]	; (8012e74 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x16c>)
 8012dc2:	482d      	ldr	r0, [pc, #180]	; (8012e78 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x170>)
 8012dc4:	f240 210d 	movw	r1, #525	; 0x20d
 8012dc8:	f005 ff10 	bl	8018bec <__assert_func>
 8012dcc:	ae03      	add	r6, sp, #12
 8012dce:	e7c7      	b.n	8012d60 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x58>
 8012dd0:	a803      	add	r0, sp, #12
 8012dd2:	4606      	mov	r6, r0
 8012dd4:	e7ce      	b.n	8012d74 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6c>
 8012dd6:	a803      	add	r0, sp, #12
 8012dd8:	e7cc      	b.n	8012d74 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6c>
 8012dda:	ad03      	add	r5, sp, #12
 8012ddc:	e7d8      	b.n	8012d90 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x88>
 8012dde:	ab03      	add	r3, sp, #12
 8012de0:	461d      	mov	r5, r3
 8012de2:	e7e0      	b.n	8012da6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x9e>
 8012de4:	ab03      	add	r3, sp, #12
 8012de6:	e7de      	b.n	8012da6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x9e>
 8012de8:	b292      	uxth	r2, r2
 8012dea:	b2a4      	uxth	r4, r4
 8012dec:	fb02 f804 	mul.w	r8, r2, r4
 8012df0:	ebc8 1404 	rsb	r4, r8, r4, lsl #4
 8012df4:	0112      	lsls	r2, r2, #4
 8012df6:	b2a4      	uxth	r4, r4
 8012df8:	f890 e002 	ldrb.w	lr, [r0, #2]
 8012dfc:	78b7      	ldrb	r7, [r6, #2]
 8012dfe:	7840      	ldrb	r0, [r0, #1]
 8012e00:	7876      	ldrb	r6, [r6, #1]
 8012e02:	f5c2 7c80 	rsb	ip, r2, #256	; 0x100
 8012e06:	eba2 0208 	sub.w	r2, r2, r8
 8012e0a:	b292      	uxth	r2, r2
 8012e0c:	ebac 0c04 	sub.w	ip, ip, r4
 8012e10:	fa1f fc8c 	uxth.w	ip, ip
 8012e14:	fb02 fe0e 	mul.w	lr, r2, lr
 8012e18:	fb0c ee07 	mla	lr, ip, r7, lr
 8012e1c:	78af      	ldrb	r7, [r5, #2]
 8012e1e:	fb04 ee07 	mla	lr, r4, r7, lr
 8012e22:	789f      	ldrb	r7, [r3, #2]
 8012e24:	785b      	ldrb	r3, [r3, #1]
 8012e26:	fb08 e707 	mla	r7, r8, r7, lr
 8012e2a:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8012e2e:	fb02 fe0b 	mul.w	lr, r2, fp
 8012e32:	4342      	muls	r2, r0
 8012e34:	7868      	ldrb	r0, [r5, #1]
 8012e36:	9701      	str	r7, [sp, #4]
 8012e38:	fb0c ee0a 	mla	lr, ip, sl, lr
 8012e3c:	9f00      	ldr	r7, [sp, #0]
 8012e3e:	fb0c 2206 	mla	r2, ip, r6, r2
 8012e42:	fb04 ee09 	mla	lr, r4, r9, lr
 8012e46:	fb04 2400 	mla	r4, r4, r0, r2
 8012e4a:	fb08 ee07 	mla	lr, r8, r7, lr
 8012e4e:	9f01      	ldr	r7, [sp, #4]
 8012e50:	fb08 4803 	mla	r8, r8, r3, r4
 8012e54:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 8012e58:	ea4f 1858 	mov.w	r8, r8, lsr #5
 8012e5c:	ea47 070e 	orr.w	r7, r7, lr
 8012e60:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 8012e64:	ea47 0708 	orr.w	r7, r7, r8
 8012e68:	800f      	strh	r7, [r1, #0]
 8012e6a:	b005      	add	sp, #20
 8012e6c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8012e70:	0801c915 	.word	0x0801c915
 8012e74:	0801ce6d 	.word	0x0801ce6d
 8012e78:	0801c99d 	.word	0x0801c99d

08012e7c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 8012e7c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012e80:	ed2d 8b0a 	vpush	{d8-d12}
 8012e84:	b091      	sub	sp, #68	; 0x44
 8012e86:	eeb0 aa40 	vmov.f32	s20, s0
 8012e8a:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 8012e8c:	9307      	str	r3, [sp, #28]
 8012e8e:	f9bd 30b4 	ldrsh.w	r3, [sp, #180]	; 0xb4
 8012e92:	910c      	str	r1, [sp, #48]	; 0x30
 8012e94:	9309      	str	r3, [sp, #36]	; 0x24
 8012e96:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
 8012e9a:	900f      	str	r0, [sp, #60]	; 0x3c
 8012e9c:	6860      	ldr	r0, [r4, #4]
 8012e9e:	920e      	str	r2, [sp, #56]	; 0x38
 8012ea0:	fb00 1303 	mla	r3, r0, r3, r1
 8012ea4:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
 8012ea6:	6821      	ldr	r1, [r4, #0]
 8012ea8:	6854      	ldr	r4, [r2, #4]
 8012eaa:	f8dd b098 	ldr.w	fp, [sp, #152]	; 0x98
 8012eae:	f9bd 50b0 	ldrsh.w	r5, [sp, #176]	; 0xb0
 8012eb2:	eb01 0343 	add.w	r3, r1, r3, lsl #1
 8012eb6:	9308      	str	r3, [sp, #32]
 8012eb8:	6813      	ldr	r3, [r2, #0]
 8012eba:	930a      	str	r3, [sp, #40]	; 0x28
 8012ebc:	eef0 9a60 	vmov.f32	s19, s1
 8012ec0:	eeb0 9a41 	vmov.f32	s18, s2
 8012ec4:	eeb0 8a62 	vmov.f32	s16, s5
 8012ec8:	eef0 8a43 	vmov.f32	s17, s6
 8012ecc:	eeb0 ca44 	vmov.f32	s24, s8
 8012ed0:	eef0 ba64 	vmov.f32	s23, s9
 8012ed4:	eeb0 ba45 	vmov.f32	s22, s10
 8012ed8:	3404      	adds	r4, #4
 8012eda:	eef7 aa00 	vmov.f32	s21, #112	; 0x3f800000  1.0
 8012ede:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8012ee0:	2b00      	cmp	r3, #0
 8012ee2:	dc03      	bgt.n	8012eec <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x70>
 8012ee4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8012ee6:	2b00      	cmp	r3, #0
 8012ee8:	f340 81cb 	ble.w	8013282 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x406>
 8012eec:	9b07      	ldr	r3, [sp, #28]
 8012eee:	2b00      	cmp	r3, #0
 8012ef0:	f340 80dd 	ble.w	80130ae <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x232>
 8012ef4:	9a25      	ldr	r2, [sp, #148]	; 0x94
 8012ef6:	1412      	asrs	r2, r2, #16
 8012ef8:	ea4f 432b 	mov.w	r3, fp, asr #16
 8012efc:	d42c      	bmi.n	8012f58 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xdc>
 8012efe:	1c51      	adds	r1, r2, #1
 8012f00:	428d      	cmp	r5, r1
 8012f02:	dd2c      	ble.n	8012f5e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe2>
 8012f04:	2b00      	cmp	r3, #0
 8012f06:	db2a      	blt.n	8012f5e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe2>
 8012f08:	9809      	ldr	r0, [sp, #36]	; 0x24
 8012f0a:	1c59      	adds	r1, r3, #1
 8012f0c:	4288      	cmp	r0, r1
 8012f0e:	dd26      	ble.n	8012f5e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe2>
 8012f10:	9b07      	ldr	r3, [sp, #28]
 8012f12:	9a27      	ldr	r2, [sp, #156]	; 0x9c
 8012f14:	9925      	ldr	r1, [sp, #148]	; 0x94
 8012f16:	3b01      	subs	r3, #1
 8012f18:	fb02 1203 	mla	r2, r2, r3, r1
 8012f1c:	1412      	asrs	r2, r2, #16
 8012f1e:	d428      	bmi.n	8012f72 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf6>
 8012f20:	3201      	adds	r2, #1
 8012f22:	4295      	cmp	r5, r2
 8012f24:	dd25      	ble.n	8012f72 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf6>
 8012f26:	9a28      	ldr	r2, [sp, #160]	; 0xa0
 8012f28:	fb02 b303 	mla	r3, r2, r3, fp
 8012f2c:	141b      	asrs	r3, r3, #16
 8012f2e:	d420      	bmi.n	8012f72 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf6>
 8012f30:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8012f32:	3301      	adds	r3, #1
 8012f34:	429a      	cmp	r2, r3
 8012f36:	dd1c      	ble.n	8012f72 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf6>
 8012f38:	9b07      	ldr	r3, [sp, #28]
 8012f3a:	930b      	str	r3, [sp, #44]	; 0x2c
 8012f3c:	9b08      	ldr	r3, [sp, #32]
 8012f3e:	930d      	str	r3, [sp, #52]	; 0x34
 8012f40:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8012f42:	2b00      	cmp	r3, #0
 8012f44:	f300 8116 	bgt.w	8013174 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2f8>
 8012f48:	9b07      	ldr	r3, [sp, #28]
 8012f4a:	9a08      	ldr	r2, [sp, #32]
 8012f4c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8012f50:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8012f54:	9308      	str	r3, [sp, #32]
 8012f56:	e0ac      	b.n	80130b2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x236>
 8012f58:	1c51      	adds	r1, r2, #1
 8012f5a:	f040 809b 	bne.w	8013094 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x218>
 8012f5e:	42aa      	cmp	r2, r5
 8012f60:	f280 8098 	bge.w	8013094 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x218>
 8012f64:	1c5a      	adds	r2, r3, #1
 8012f66:	f2c0 8095 	blt.w	8013094 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x218>
 8012f6a:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8012f6c:	4293      	cmp	r3, r2
 8012f6e:	f280 8091 	bge.w	8013094 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x218>
 8012f72:	9b07      	ldr	r3, [sp, #28]
 8012f74:	930d      	str	r3, [sp, #52]	; 0x34
 8012f76:	9b08      	ldr	r3, [sp, #32]
 8012f78:	930b      	str	r3, [sp, #44]	; 0x2c
 8012f7a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8012f7c:	2b00      	cmp	r3, #0
 8012f7e:	dde3      	ble.n	8012f48 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xcc>
 8012f80:	9825      	ldr	r0, [sp, #148]	; 0x94
 8012f82:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8012f84:	1400      	asrs	r0, r0, #16
 8012f86:	ea4f 422b 	mov.w	r2, fp, asr #16
 8012f8a:	f3c3 3303 	ubfx	r3, r3, #12, #4
 8012f8e:	f3cb 3103 	ubfx	r1, fp, #12, #4
 8012f92:	f100 80d9 	bmi.w	8013148 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2cc>
 8012f96:	1c46      	adds	r6, r0, #1
 8012f98:	42b5      	cmp	r5, r6
 8012f9a:	f340 80d7 	ble.w	801314c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2d0>
 8012f9e:	2a00      	cmp	r2, #0
 8012fa0:	f2c0 80d4 	blt.w	801314c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2d0>
 8012fa4:	9f09      	ldr	r7, [sp, #36]	; 0x24
 8012fa6:	1c56      	adds	r6, r2, #1
 8012fa8:	42b7      	cmp	r7, r6
 8012faa:	f340 80cf 	ble.w	801314c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2d0>
 8012fae:	fb02 0005 	mla	r0, r2, r5, r0
 8012fb2:	9e0a      	ldr	r6, [sp, #40]	; 0x28
 8012fb4:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8012fb6:	4402      	add	r2, r0
 8012fb8:	5c30      	ldrb	r0, [r6, r0]
 8012fba:	eb00 0840 	add.w	r8, r0, r0, lsl #1
 8012fbe:	eb04 0c08 	add.w	ip, r4, r8
 8012fc2:	2b00      	cmp	r3, #0
 8012fc4:	f000 80b2 	beq.w	801312c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2b0>
 8012fc8:	7856      	ldrb	r6, [r2, #1]
 8012fca:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 8012fce:	4426      	add	r6, r4
 8012fd0:	2900      	cmp	r1, #0
 8012fd2:	f000 80b3 	beq.w	801313c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2c0>
 8012fd6:	1950      	adds	r0, r2, r5
 8012fd8:	5d52      	ldrb	r2, [r2, r5]
 8012fda:	7840      	ldrb	r0, [r0, #1]
 8012fdc:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8012fe0:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8012fe4:	4422      	add	r2, r4
 8012fe6:	4420      	add	r0, r4
 8012fe8:	b29b      	uxth	r3, r3
 8012fea:	b289      	uxth	r1, r1
 8012fec:	fb03 f901 	mul.w	r9, r3, r1
 8012ff0:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8012ff4:	011b      	lsls	r3, r3, #4
 8012ff6:	b289      	uxth	r1, r1
 8012ff8:	78b7      	ldrb	r7, [r6, #2]
 8012ffa:	f89c a002 	ldrb.w	sl, [ip, #2]
 8012ffe:	f89c c001 	ldrb.w	ip, [ip, #1]
 8013002:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 8013006:	eba3 0309 	sub.w	r3, r3, r9
 801300a:	b29b      	uxth	r3, r3
 801300c:	ebae 0e01 	sub.w	lr, lr, r1
 8013010:	fa1f fe8e 	uxth.w	lr, lr
 8013014:	435f      	muls	r7, r3
 8013016:	fb0e 770a 	mla	r7, lr, sl, r7
 801301a:	f892 a002 	ldrb.w	sl, [r2, #2]
 801301e:	fb01 770a 	mla	r7, r1, sl, r7
 8013022:	f890 a002 	ldrb.w	sl, [r0, #2]
 8013026:	fb09 7a0a 	mla	sl, r9, sl, r7
 801302a:	f814 7008 	ldrb.w	r7, [r4, r8]
 801302e:	f896 8000 	ldrb.w	r8, [r6]
 8013032:	7876      	ldrb	r6, [r6, #1]
 8013034:	fb03 f808 	mul.w	r8, r3, r8
 8013038:	fb0e 8807 	mla	r8, lr, r7, r8
 801303c:	7817      	ldrb	r7, [r2, #0]
 801303e:	fb01 8807 	mla	r8, r1, r7, r8
 8013042:	7807      	ldrb	r7, [r0, #0]
 8013044:	fb09 8707 	mla	r7, r9, r7, r8
 8013048:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
 801304c:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8013050:	ea4a 0707 	orr.w	r7, sl, r7
 8013054:	4373      	muls	r3, r6
 8013056:	f892 a001 	ldrb.w	sl, [r2, #1]
 801305a:	fb0e 330c 	mla	r3, lr, ip, r3
 801305e:	fb01 310a 	mla	r1, r1, sl, r3
 8013062:	f890 a001 	ldrb.w	sl, [r0, #1]
 8013066:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8013068:	fb09 1a0a 	mla	sl, r9, sl, r1
 801306c:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8013070:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8013074:	ea47 070a 	orr.w	r7, r7, sl
 8013078:	801f      	strh	r7, [r3, #0]
 801307a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801307c:	9a27      	ldr	r2, [sp, #156]	; 0x9c
 801307e:	3302      	adds	r3, #2
 8013080:	930b      	str	r3, [sp, #44]	; 0x2c
 8013082:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8013084:	4413      	add	r3, r2
 8013086:	9325      	str	r3, [sp, #148]	; 0x94
 8013088:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801308a:	449b      	add	fp, r3
 801308c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801308e:	3b01      	subs	r3, #1
 8013090:	930d      	str	r3, [sp, #52]	; 0x34
 8013092:	e772      	b.n	8012f7a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfe>
 8013094:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8013096:	9a27      	ldr	r2, [sp, #156]	; 0x9c
 8013098:	4413      	add	r3, r2
 801309a:	9325      	str	r3, [sp, #148]	; 0x94
 801309c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801309e:	449b      	add	fp, r3
 80130a0:	9b07      	ldr	r3, [sp, #28]
 80130a2:	3b01      	subs	r3, #1
 80130a4:	9307      	str	r3, [sp, #28]
 80130a6:	9b08      	ldr	r3, [sp, #32]
 80130a8:	3302      	adds	r3, #2
 80130aa:	9308      	str	r3, [sp, #32]
 80130ac:	e71e      	b.n	8012eec <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x70>
 80130ae:	f47f af2f 	bne.w	8012f10 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x94>
 80130b2:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80130b4:	2b00      	cmp	r3, #0
 80130b6:	f340 80e4 	ble.w	8013282 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x406>
 80130ba:	ee3a aa0c 	vadd.f32	s20, s20, s24
 80130be:	ee79 9aab 	vadd.f32	s19, s19, s23
 80130c2:	eeca 7a8a 	vdiv.f32	s15, s21, s20
 80130c6:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80130c8:	ee39 9a0b 	vadd.f32	s18, s18, s22
 80130cc:	ee29 7aa7 	vmul.f32	s14, s19, s15
 80130d0:	eef0 6a48 	vmov.f32	s13, s16
 80130d4:	ee69 7a27 	vmul.f32	s15, s18, s15
 80130d8:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80130dc:	ee37 8a48 	vsub.f32	s16, s14, s16
 80130e0:	edcd 6a25 	vstr	s13, [sp, #148]	; 0x94
 80130e4:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 80130e8:	eef0 6a68 	vmov.f32	s13, s17
 80130ec:	ee77 8ae8 	vsub.f32	s17, s15, s17
 80130f0:	ee18 2a10 	vmov	r2, s16
 80130f4:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 80130f8:	fb92 f3f3 	sdiv	r3, r2, r3
 80130fc:	ee18 2a90 	vmov	r2, s17
 8013100:	9327      	str	r3, [sp, #156]	; 0x9c
 8013102:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8013104:	fb92 f3f3 	sdiv	r3, r2, r3
 8013108:	9328      	str	r3, [sp, #160]	; 0xa0
 801310a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801310c:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801310e:	3b01      	subs	r3, #1
 8013110:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8013114:	930c      	str	r3, [sp, #48]	; 0x30
 8013116:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8013118:	bf08      	it	eq
 801311a:	4613      	moveq	r3, r2
 801311c:	ee16 ba90 	vmov	fp, s13
 8013120:	9307      	str	r3, [sp, #28]
 8013122:	eef0 8a67 	vmov.f32	s17, s15
 8013126:	eeb0 8a47 	vmov.f32	s16, s14
 801312a:	e6d8      	b.n	8012ede <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x62>
 801312c:	b149      	cbz	r1, 8013142 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2c6>
 801312e:	5d52      	ldrb	r2, [r2, r5]
 8013130:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8013134:	4422      	add	r2, r4
 8013136:	4660      	mov	r0, ip
 8013138:	4666      	mov	r6, ip
 801313a:	e755      	b.n	8012fe8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x16c>
 801313c:	4660      	mov	r0, ip
 801313e:	4662      	mov	r2, ip
 8013140:	e752      	b.n	8012fe8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x16c>
 8013142:	4660      	mov	r0, ip
 8013144:	4662      	mov	r2, ip
 8013146:	e7f7      	b.n	8013138 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2bc>
 8013148:	1c47      	adds	r7, r0, #1
 801314a:	d196      	bne.n	801307a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1fe>
 801314c:	4285      	cmp	r5, r0
 801314e:	dd94      	ble.n	801307a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1fe>
 8013150:	1c56      	adds	r6, r2, #1
 8013152:	db92      	blt.n	801307a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1fe>
 8013154:	9e09      	ldr	r6, [sp, #36]	; 0x24
 8013156:	4296      	cmp	r6, r2
 8013158:	dd8f      	ble.n	801307a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1fe>
 801315a:	e9cd 3104 	strd	r3, r1, [sp, #16]
 801315e:	e9cd 0202 	strd	r0, r2, [sp, #8]
 8013162:	e9cd 5600 	strd	r5, r6, [sp]
 8013166:	4623      	mov	r3, r4
 8013168:	e9dd 210a 	ldrd	r2, r1, [sp, #40]	; 0x28
 801316c:	980f      	ldr	r0, [sp, #60]	; 0x3c
 801316e:	f7ff fdcb 	bl	8012d08 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>
 8013172:	e782      	b.n	801307a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1fe>
 8013174:	9a25      	ldr	r2, [sp, #148]	; 0x94
 8013176:	9e0a      	ldr	r6, [sp, #40]	; 0x28
 8013178:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801317a:	1412      	asrs	r2, r2, #16
 801317c:	ea4f 402b 	mov.w	r0, fp, asr #16
 8013180:	fb05 2000 	mla	r0, r5, r0, r2
 8013184:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8013186:	f816 8000 	ldrb.w	r8, [r6, r0]
 801318a:	f3c3 3303 	ubfx	r3, r3, #12, #4
 801318e:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 8013192:	f3cb 3103 	ubfx	r1, fp, #12, #4
 8013196:	4402      	add	r2, r0
 8013198:	eb04 0c08 	add.w	ip, r4, r8
 801319c:	2b00      	cmp	r3, #0
 801319e:	d062      	beq.n	8013266 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3ea>
 80131a0:	7856      	ldrb	r6, [r2, #1]
 80131a2:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 80131a6:	4426      	add	r6, r4
 80131a8:	2900      	cmp	r1, #0
 80131aa:	d064      	beq.n	8013276 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3fa>
 80131ac:	1950      	adds	r0, r2, r5
 80131ae:	5d52      	ldrb	r2, [r2, r5]
 80131b0:	7840      	ldrb	r0, [r0, #1]
 80131b2:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80131b6:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 80131ba:	4422      	add	r2, r4
 80131bc:	4420      	add	r0, r4
 80131be:	b29b      	uxth	r3, r3
 80131c0:	b289      	uxth	r1, r1
 80131c2:	fb03 f901 	mul.w	r9, r3, r1
 80131c6:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 80131ca:	011b      	lsls	r3, r3, #4
 80131cc:	b289      	uxth	r1, r1
 80131ce:	78b7      	ldrb	r7, [r6, #2]
 80131d0:	f89c a002 	ldrb.w	sl, [ip, #2]
 80131d4:	f89c c001 	ldrb.w	ip, [ip, #1]
 80131d8:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 80131dc:	eba3 0309 	sub.w	r3, r3, r9
 80131e0:	b29b      	uxth	r3, r3
 80131e2:	ebae 0e01 	sub.w	lr, lr, r1
 80131e6:	fa1f fe8e 	uxth.w	lr, lr
 80131ea:	435f      	muls	r7, r3
 80131ec:	fb0e 770a 	mla	r7, lr, sl, r7
 80131f0:	f892 a002 	ldrb.w	sl, [r2, #2]
 80131f4:	fb01 770a 	mla	r7, r1, sl, r7
 80131f8:	f890 a002 	ldrb.w	sl, [r0, #2]
 80131fc:	fb09 7a0a 	mla	sl, r9, sl, r7
 8013200:	f814 7008 	ldrb.w	r7, [r4, r8]
 8013204:	f896 8000 	ldrb.w	r8, [r6]
 8013208:	7876      	ldrb	r6, [r6, #1]
 801320a:	fb03 f808 	mul.w	r8, r3, r8
 801320e:	fb0e 8807 	mla	r8, lr, r7, r8
 8013212:	7817      	ldrb	r7, [r2, #0]
 8013214:	fb01 8807 	mla	r8, r1, r7, r8
 8013218:	7807      	ldrb	r7, [r0, #0]
 801321a:	fb09 8707 	mla	r7, r9, r7, r8
 801321e:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
 8013222:	4373      	muls	r3, r6
 8013224:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8013228:	7856      	ldrb	r6, [r2, #1]
 801322a:	9a27      	ldr	r2, [sp, #156]	; 0x9c
 801322c:	ea4a 0707 	orr.w	r7, sl, r7
 8013230:	fb0e 330c 	mla	r3, lr, ip, r3
 8013234:	f890 a001 	ldrb.w	sl, [r0, #1]
 8013238:	fb01 3306 	mla	r3, r1, r6, r3
 801323c:	fb09 3a0a 	mla	sl, r9, sl, r3
 8013240:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8013244:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8013246:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801324a:	ea47 070a 	orr.w	r7, r7, sl
 801324e:	f823 7b02 	strh.w	r7, [r3], #2
 8013252:	930d      	str	r3, [sp, #52]	; 0x34
 8013254:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8013256:	4413      	add	r3, r2
 8013258:	9325      	str	r3, [sp, #148]	; 0x94
 801325a:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801325c:	449b      	add	fp, r3
 801325e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8013260:	3b01      	subs	r3, #1
 8013262:	930b      	str	r3, [sp, #44]	; 0x2c
 8013264:	e66c      	b.n	8012f40 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xc4>
 8013266:	b149      	cbz	r1, 801327c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x400>
 8013268:	5d52      	ldrb	r2, [r2, r5]
 801326a:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801326e:	4422      	add	r2, r4
 8013270:	4660      	mov	r0, ip
 8013272:	4666      	mov	r6, ip
 8013274:	e7a3      	b.n	80131be <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x342>
 8013276:	4660      	mov	r0, ip
 8013278:	4662      	mov	r2, ip
 801327a:	e7a0      	b.n	80131be <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x342>
 801327c:	4660      	mov	r0, ip
 801327e:	4662      	mov	r2, ip
 8013280:	e7f7      	b.n	8013272 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3f6>
 8013282:	b011      	add	sp, #68	; 0x44
 8013284:	ecbd 8b0a 	vpop	{d8-d12}
 8013288:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801328c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>:
 801328c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013290:	8808      	ldrh	r0, [r1, #0]
 8013292:	b085      	sub	sp, #20
 8013294:	1206      	asrs	r6, r0, #8
 8013296:	e9dd 5410 	ldrd	r5, r4, [sp, #64]	; 0x40
 801329a:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801329e:	9600      	str	r6, [sp, #0]
 80132a0:	f9bd c038 	ldrsh.w	ip, [sp, #56]	; 0x38
 80132a4:	f9bd 903c 	ldrsh.w	r9, [sp, #60]	; 0x3c
 80132a8:	f89d 704c 	ldrb.w	r7, [sp, #76]	; 0x4c
 80132ac:	10c6      	asrs	r6, r0, #3
 80132ae:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80132b2:	9601      	str	r6, [sp, #4]
 80132b4:	00c0      	lsls	r0, r0, #3
 80132b6:	fb04 560c 	mla	r6, r4, ip, r5
 80132ba:	b2c0      	uxtb	r0, r0
 80132bc:	4692      	mov	sl, r2
 80132be:	eb02 0e06 	add.w	lr, r2, r6
 80132c2:	9a00      	ldr	r2, [sp, #0]
 80132c4:	9002      	str	r0, [sp, #8]
 80132c6:	f040 407f 	orr.w	r0, r0, #4278190080	; 0xff000000
 80132ca:	ea40 4002 	orr.w	r0, r0, r2, lsl #16
 80132ce:	9a01      	ldr	r2, [sp, #4]
 80132d0:	2c00      	cmp	r4, #0
 80132d2:	4698      	mov	r8, r3
 80132d4:	ea40 2002 	orr.w	r0, r0, r2, lsl #8
 80132d8:	f89d 3048 	ldrb.w	r3, [sp, #72]	; 0x48
 80132dc:	db3e      	blt.n	801335c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xd0>
 80132de:	45a1      	cmp	r9, r4
 80132e0:	dd3c      	ble.n	801335c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xd0>
 80132e2:	2d00      	cmp	r5, #0
 80132e4:	db38      	blt.n	8013358 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xcc>
 80132e6:	45ac      	cmp	ip, r5
 80132e8:	dd36      	ble.n	8013358 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xcc>
 80132ea:	f81a 2006 	ldrb.w	r2, [sl, r6]
 80132ee:	f858 2022 	ldr.w	r2, [r8, r2, lsl #2]
 80132f2:	1c6e      	adds	r6, r5, #1
 80132f4:	d435      	bmi.n	8013362 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xd6>
 80132f6:	45b4      	cmp	ip, r6
 80132f8:	dd33      	ble.n	8013362 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xd6>
 80132fa:	b393      	cbz	r3, 8013362 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xd6>
 80132fc:	f89e 6001 	ldrb.w	r6, [lr, #1]
 8013300:	f858 6026 	ldr.w	r6, [r8, r6, lsl #2]
 8013304:	3401      	adds	r4, #1
 8013306:	d430      	bmi.n	801336a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xde>
 8013308:	45a1      	cmp	r9, r4
 801330a:	dd2e      	ble.n	801336a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xde>
 801330c:	b36f      	cbz	r7, 801336a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xde>
 801330e:	2d00      	cmp	r5, #0
 8013310:	db29      	blt.n	8013366 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xda>
 8013312:	45ac      	cmp	ip, r5
 8013314:	dd27      	ble.n	8013366 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xda>
 8013316:	f81e 400c 	ldrb.w	r4, [lr, ip]
 801331a:	f858 4024 	ldr.w	r4, [r8, r4, lsl #2]
 801331e:	3501      	adds	r5, #1
 8013320:	d407      	bmi.n	8013332 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xa6>
 8013322:	45ac      	cmp	ip, r5
 8013324:	dd05      	ble.n	8013332 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xa6>
 8013326:	b123      	cbz	r3, 8013332 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xa6>
 8013328:	44f4      	add	ip, lr
 801332a:	f89c 0001 	ldrb.w	r0, [ip, #1]
 801332e:	f858 0020 	ldr.w	r0, [r8, r0, lsl #2]
 8013332:	2b0f      	cmp	r3, #15
 8013334:	ea4f 6b12 	mov.w	fp, r2, lsr #24
 8013338:	ea4f 6a16 	mov.w	sl, r6, lsr #24
 801333c:	ea4f 6914 	mov.w	r9, r4, lsr #24
 8013340:	ea4f 6810 	mov.w	r8, r0, lsr #24
 8013344:	d801      	bhi.n	801334a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xbe>
 8013346:	2f0f      	cmp	r7, #15
 8013348:	d911      	bls.n	801336e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xe2>
 801334a:	4b7f      	ldr	r3, [pc, #508]	; (8013548 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x2bc>)
 801334c:	4a7f      	ldr	r2, [pc, #508]	; (801354c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x2c0>)
 801334e:	4880      	ldr	r0, [pc, #512]	; (8013550 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x2c4>)
 8013350:	f240 210d 	movw	r1, #525	; 0x20d
 8013354:	f005 fc4a 	bl	8018bec <__assert_func>
 8013358:	4602      	mov	r2, r0
 801335a:	e7ca      	b.n	80132f2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x66>
 801335c:	4606      	mov	r6, r0
 801335e:	4602      	mov	r2, r0
 8013360:	e7d0      	b.n	8013304 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x78>
 8013362:	4606      	mov	r6, r0
 8013364:	e7ce      	b.n	8013304 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x78>
 8013366:	4604      	mov	r4, r0
 8013368:	e7d9      	b.n	801331e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x92>
 801336a:	4604      	mov	r4, r0
 801336c:	e7e1      	b.n	8013332 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xa6>
 801336e:	b29b      	uxth	r3, r3
 8013370:	b2bf      	uxth	r7, r7
 8013372:	fb03 fe07 	mul.w	lr, r3, r7
 8013376:	ebce 1707 	rsb	r7, lr, r7, lsl #4
 801337a:	011b      	lsls	r3, r3, #4
 801337c:	eba3 0c0e 	sub.w	ip, r3, lr
 8013380:	b2bf      	uxth	r7, r7
 8013382:	f5c3 7580 	rsb	r5, r3, #256	; 0x100
 8013386:	fa1f fc8c 	uxth.w	ip, ip
 801338a:	1bed      	subs	r5, r5, r7
 801338c:	b2ad      	uxth	r5, r5
 801338e:	fb0c f30a 	mul.w	r3, ip, sl
 8013392:	fb05 330b 	mla	r3, r5, fp, r3
 8013396:	fb07 3309 	mla	r3, r7, r9, r3
 801339a:	fb0e 3308 	mla	r3, lr, r8, r3
 801339e:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80133a2:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 80133a6:	9303      	str	r3, [sp, #12]
 80133a8:	d018      	beq.n	80133dc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x150>
 80133aa:	f002 13ff 	and.w	r3, r2, #16711935	; 0xff00ff
 80133ae:	fb0b f303 	mul.w	r3, fp, r3
 80133b2:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 80133b6:	fb0b fb02 	mul.w	fp, fp, r2
 80133ba:	0a1a      	lsrs	r2, r3, #8
 80133bc:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 80133c0:	f103 1301 	add.w	r3, r3, #65537	; 0x10001
 80133c4:	441a      	add	r2, r3
 80133c6:	f50b 7380 	add.w	r3, fp, #256	; 0x100
 80133ca:	eb03 231b 	add.w	r3, r3, fp, lsr #8
 80133ce:	0a12      	lsrs	r2, r2, #8
 80133d0:	0a1b      	lsrs	r3, r3, #8
 80133d2:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 80133d6:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80133da:	431a      	orrs	r2, r3
 80133dc:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 80133e0:	d019      	beq.n	8013416 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x18a>
 80133e2:	f006 1bff 	and.w	fp, r6, #16711935	; 0xff00ff
 80133e6:	fb0a fb0b 	mul.w	fp, sl, fp
 80133ea:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 80133ee:	fb0a fa06 	mul.w	sl, sl, r6
 80133f2:	ea4f 261b 	mov.w	r6, fp, lsr #8
 80133f6:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 80133fa:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 80133fe:	f50a 7380 	add.w	r3, sl, #256	; 0x100
 8013402:	445e      	add	r6, fp
 8013404:	eb03 231a 	add.w	r3, r3, sl, lsr #8
 8013408:	0a36      	lsrs	r6, r6, #8
 801340a:	0a1b      	lsrs	r3, r3, #8
 801340c:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8013410:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8013414:	431e      	orrs	r6, r3
 8013416:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801341a:	d019      	beq.n	8013450 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x1c4>
 801341c:	f004 1aff 	and.w	sl, r4, #16711935	; 0xff00ff
 8013420:	fb09 fa0a 	mul.w	sl, r9, sl
 8013424:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 8013428:	fb09 f904 	mul.w	r9, r9, r4
 801342c:	ea4f 241a 	mov.w	r4, sl, lsr #8
 8013430:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8013434:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8013438:	f509 7380 	add.w	r3, r9, #256	; 0x100
 801343c:	4454      	add	r4, sl
 801343e:	eb03 2319 	add.w	r3, r3, r9, lsr #8
 8013442:	0a24      	lsrs	r4, r4, #8
 8013444:	0a1b      	lsrs	r3, r3, #8
 8013446:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 801344a:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801344e:	431c      	orrs	r4, r3
 8013450:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8013454:	d019      	beq.n	801348a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x1fe>
 8013456:	f000 19ff 	and.w	r9, r0, #16711935	; 0xff00ff
 801345a:	fb08 f909 	mul.w	r9, r8, r9
 801345e:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8013462:	fb08 f800 	mul.w	r8, r8, r0
 8013466:	ea4f 2019 	mov.w	r0, r9, lsr #8
 801346a:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 801346e:	f109 1901 	add.w	r9, r9, #65537	; 0x10001
 8013472:	f508 7380 	add.w	r3, r8, #256	; 0x100
 8013476:	4448      	add	r0, r9
 8013478:	eb03 2318 	add.w	r3, r3, r8, lsr #8
 801347c:	0a00      	lsrs	r0, r0, #8
 801347e:	0a1b      	lsrs	r3, r3, #8
 8013480:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 8013484:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8013488:	4318      	orrs	r0, r3
 801348a:	f006 18ff 	and.w	r8, r6, #16711935	; 0xff00ff
 801348e:	f002 13ff 	and.w	r3, r2, #16711935	; 0xff00ff
 8013492:	fb0c f808 	mul.w	r8, ip, r8
 8013496:	fb05 8803 	mla	r8, r5, r3, r8
 801349a:	f004 13ff 	and.w	r3, r4, #16711935	; 0xff00ff
 801349e:	fb07 8803 	mla	r8, r7, r3, r8
 80134a2:	f000 13ff 	and.w	r3, r0, #16711935	; 0xff00ff
 80134a6:	fb0e 8303 	mla	r3, lr, r3, r8
 80134aa:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 80134ae:	fb0c f606 	mul.w	r6, ip, r6
 80134b2:	0a1b      	lsrs	r3, r3, #8
 80134b4:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 80134b8:	fb05 6202 	mla	r2, r5, r2, r6
 80134bc:	f003 18ff 	and.w	r8, r3, #16711935	; 0xff00ff
 80134c0:	f404 437f 	and.w	r3, r4, #65280	; 0xff00
 80134c4:	fb07 2703 	mla	r7, r7, r3, r2
 80134c8:	f89d 2050 	ldrb.w	r2, [sp, #80]	; 0x50
 80134cc:	b295      	uxth	r5, r2
 80134ce:	9a03      	ldr	r2, [sp, #12]
 80134d0:	f400 437f 	and.w	r3, r0, #65280	; 0xff00
 80134d4:	436a      	muls	r2, r5
 80134d6:	fb0e 7303 	mla	r3, lr, r3, r7
 80134da:	1c50      	adds	r0, r2, #1
 80134dc:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 80134e0:	0a1b      	lsrs	r3, r3, #8
 80134e2:	9a00      	ldr	r2, [sp, #0]
 80134e4:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80134e8:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 80134ec:	ea48 0303 	orr.w	r3, r8, r3
 80134f0:	b2c0      	uxtb	r0, r0
 80134f2:	fb12 f200 	smulbb	r2, r2, r0
 80134f6:	0c1e      	lsrs	r6, r3, #16
 80134f8:	fb06 2605 	mla	r6, r6, r5, r2
 80134fc:	9a01      	ldr	r2, [sp, #4]
 80134fe:	f3c3 2407 	ubfx	r4, r3, #8, #8
 8013502:	fb12 f200 	smulbb	r2, r2, r0
 8013506:	fb04 2205 	mla	r2, r4, r5, r2
 801350a:	b294      	uxth	r4, r2
 801350c:	9a02      	ldr	r2, [sp, #8]
 801350e:	b2db      	uxtb	r3, r3
 8013510:	fb12 f200 	smulbb	r2, r2, r0
 8013514:	fb03 2205 	mla	r2, r3, r5, r2
 8013518:	b2b6      	uxth	r6, r6
 801351a:	b292      	uxth	r2, r2
 801351c:	1c73      	adds	r3, r6, #1
 801351e:	1c50      	adds	r0, r2, #1
 8013520:	eb03 2316 	add.w	r3, r3, r6, lsr #8
 8013524:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 8013528:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801352c:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 8013530:	4313      	orrs	r3, r2
 8013532:	1c62      	adds	r2, r4, #1
 8013534:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 8013538:	0952      	lsrs	r2, r2, #5
 801353a:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801353e:	4313      	orrs	r3, r2
 8013540:	800b      	strh	r3, [r1, #0]
 8013542:	b005      	add	sp, #20
 8013544:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013548:	0801c915 	.word	0x0801c915
 801354c:	0801ce6d 	.word	0x0801ce6d
 8013550:	0801c99d 	.word	0x0801c99d

08013554 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 8013554:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013558:	ed2d 8b08 	vpush	{d8-d11}
 801355c:	b09b      	sub	sp, #108	; 0x6c
 801355e:	eeb0 aa40 	vmov.f32	s20, s0
 8013562:	9309      	str	r3, [sp, #36]	; 0x24
 8013564:	f9bd 30d4 	ldrsh.w	r3, [sp, #212]	; 0xd4
 8013568:	9d31      	ldr	r5, [sp, #196]	; 0xc4
 801356a:	9311      	str	r3, [sp, #68]	; 0x44
 801356c:	f89d 30dc 	ldrb.w	r3, [sp, #220]	; 0xdc
 8013570:	9114      	str	r1, [sp, #80]	; 0x50
 8013572:	9317      	str	r3, [sp, #92]	; 0x5c
 8013574:	e9dd 1332 	ldrd	r1, r3, [sp, #200]	; 0xc8
 8013578:	9019      	str	r0, [sp, #100]	; 0x64
 801357a:	6868      	ldr	r0, [r5, #4]
 801357c:	9218      	str	r2, [sp, #96]	; 0x60
 801357e:	fb00 1303 	mla	r3, r0, r3, r1
 8013582:	6829      	ldr	r1, [r5, #0]
 8013584:	9a36      	ldr	r2, [sp, #216]	; 0xd8
 8013586:	f9bd 40d0 	ldrsh.w	r4, [sp, #208]	; 0xd0
 801358a:	eb01 0343 	add.w	r3, r1, r3, lsl #1
 801358e:	930c      	str	r3, [sp, #48]	; 0x30
 8013590:	6813      	ldr	r3, [r2, #0]
 8013592:	9313      	str	r3, [sp, #76]	; 0x4c
 8013594:	6853      	ldr	r3, [r2, #4]
 8013596:	3304      	adds	r3, #4
 8013598:	eef0 9a60 	vmov.f32	s19, s1
 801359c:	eeb0 9a41 	vmov.f32	s18, s2
 80135a0:	eeb0 8a62 	vmov.f32	s16, s5
 80135a4:	eef0 8a43 	vmov.f32	s17, s6
 80135a8:	eef0 ba44 	vmov.f32	s23, s8
 80135ac:	eeb0 ba64 	vmov.f32	s22, s9
 80135b0:	eef0 aa45 	vmov.f32	s21, s10
 80135b4:	9308      	str	r3, [sp, #32]
 80135b6:	9b14      	ldr	r3, [sp, #80]	; 0x50
 80135b8:	2b00      	cmp	r3, #0
 80135ba:	dc03      	bgt.n	80135c4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x70>
 80135bc:	9b18      	ldr	r3, [sp, #96]	; 0x60
 80135be:	2b00      	cmp	r3, #0
 80135c0:	f340 8363 	ble.w	8013c8a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x736>
 80135c4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80135c6:	2b00      	cmp	r3, #0
 80135c8:	f340 81ad 	ble.w	8013926 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3d2>
 80135cc:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 80135ce:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 80135d0:	1412      	asrs	r2, r2, #16
 80135d2:	ea4f 4323 	mov.w	r3, r3, asr #16
 80135d6:	d42f      	bmi.n	8013638 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe4>
 80135d8:	1c51      	adds	r1, r2, #1
 80135da:	428c      	cmp	r4, r1
 80135dc:	dd2f      	ble.n	801363e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xea>
 80135de:	2b00      	cmp	r3, #0
 80135e0:	db2d      	blt.n	801363e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xea>
 80135e2:	9811      	ldr	r0, [sp, #68]	; 0x44
 80135e4:	1c59      	adds	r1, r3, #1
 80135e6:	4288      	cmp	r0, r1
 80135e8:	dd29      	ble.n	801363e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xea>
 80135ea:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80135ec:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 80135ee:	992d      	ldr	r1, [sp, #180]	; 0xb4
 80135f0:	3b01      	subs	r3, #1
 80135f2:	fb02 1203 	mla	r2, r2, r3, r1
 80135f6:	1412      	asrs	r2, r2, #16
 80135f8:	d42b      	bmi.n	8013652 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfe>
 80135fa:	3201      	adds	r2, #1
 80135fc:	4294      	cmp	r4, r2
 80135fe:	dd28      	ble.n	8013652 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfe>
 8013600:	9a30      	ldr	r2, [sp, #192]	; 0xc0
 8013602:	992e      	ldr	r1, [sp, #184]	; 0xb8
 8013604:	fb02 1303 	mla	r3, r2, r3, r1
 8013608:	141b      	asrs	r3, r3, #16
 801360a:	d422      	bmi.n	8013652 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfe>
 801360c:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801360e:	3301      	adds	r3, #1
 8013610:	429a      	cmp	r2, r3
 8013612:	dd1e      	ble.n	8013652 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfe>
 8013614:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8013616:	f8dd a030 	ldr.w	sl, [sp, #48]	; 0x30
 801361a:	f8bd b05c 	ldrh.w	fp, [sp, #92]	; 0x5c
 801361e:	9312      	str	r3, [sp, #72]	; 0x48
 8013620:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8013622:	2b00      	cmp	r3, #0
 8013624:	f300 81ea 	bgt.w	80139fc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4a8>
 8013628:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801362a:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801362c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8013630:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8013634:	930c      	str	r3, [sp, #48]	; 0x30
 8013636:	e178      	b.n	801392a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3d6>
 8013638:	1c51      	adds	r1, r2, #1
 801363a:	f040 8165 	bne.w	8013908 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3b4>
 801363e:	42a2      	cmp	r2, r4
 8013640:	f280 8162 	bge.w	8013908 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3b4>
 8013644:	1c5f      	adds	r7, r3, #1
 8013646:	f2c0 815f 	blt.w	8013908 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3b4>
 801364a:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801364c:	4293      	cmp	r3, r2
 801364e:	f280 815b 	bge.w	8013908 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3b4>
 8013652:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8013654:	9316      	str	r3, [sp, #88]	; 0x58
 8013656:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8013658:	9312      	str	r3, [sp, #72]	; 0x48
 801365a:	f8bd 305c 	ldrh.w	r3, [sp, #92]	; 0x5c
 801365e:	9315      	str	r3, [sp, #84]	; 0x54
 8013660:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8013662:	2b00      	cmp	r3, #0
 8013664:	dde0      	ble.n	8013628 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xd4>
 8013666:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 8013668:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 801366a:	f3c2 3003 	ubfx	r0, r2, #12, #4
 801366e:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
 8013670:	f3c2 3103 	ubfx	r1, r2, #12, #4
 8013674:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 8013676:	1412      	asrs	r2, r2, #16
 8013678:	ea4f 4323 	mov.w	r3, r3, asr #16
 801367c:	f100 81a5 	bmi.w	80139ca <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x476>
 8013680:	1c55      	adds	r5, r2, #1
 8013682:	42ac      	cmp	r4, r5
 8013684:	f340 81a3 	ble.w	80139ce <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x47a>
 8013688:	2b00      	cmp	r3, #0
 801368a:	f2c0 81a0 	blt.w	80139ce <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x47a>
 801368e:	9f11      	ldr	r7, [sp, #68]	; 0x44
 8013690:	1c5d      	adds	r5, r3, #1
 8013692:	42af      	cmp	r7, r5
 8013694:	f340 819b 	ble.w	80139ce <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x47a>
 8013698:	fb03 2304 	mla	r3, r3, r4, r2
 801369c:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801369e:	18d5      	adds	r5, r2, r3
 80136a0:	5cd3      	ldrb	r3, [r2, r3]
 80136a2:	9a08      	ldr	r2, [sp, #32]
 80136a4:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 80136a8:	0e1f      	lsrs	r7, r3, #24
 80136aa:	2800      	cmp	r0, #0
 80136ac:	f000 817c 	beq.w	80139a8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x454>
 80136b0:	786a      	ldrb	r2, [r5, #1]
 80136b2:	9e08      	ldr	r6, [sp, #32]
 80136b4:	f856 2022 	ldr.w	r2, [r6, r2, lsl #2]
 80136b8:	920d      	str	r2, [sp, #52]	; 0x34
 80136ba:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 80136be:	2900      	cmp	r1, #0
 80136c0:	f000 817d 	beq.w	80139be <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x46a>
 80136c4:	192a      	adds	r2, r5, r4
 80136c6:	5d2d      	ldrb	r5, [r5, r4]
 80136c8:	7852      	ldrb	r2, [r2, #1]
 80136ca:	f856 5025 	ldr.w	r5, [r6, r5, lsl #2]
 80136ce:	f856 2022 	ldr.w	r2, [r6, r2, lsl #2]
 80136d2:	950a      	str	r5, [sp, #40]	; 0x28
 80136d4:	ea4f 6915 	mov.w	r9, r5, lsr #24
 80136d8:	920e      	str	r2, [sp, #56]	; 0x38
 80136da:	0e15      	lsrs	r5, r2, #24
 80136dc:	b280      	uxth	r0, r0
 80136de:	b289      	uxth	r1, r1
 80136e0:	fb00 fa01 	mul.w	sl, r0, r1
 80136e4:	ebca 1101 	rsb	r1, sl, r1, lsl #4
 80136e8:	0100      	lsls	r0, r0, #4
 80136ea:	eba0 080a 	sub.w	r8, r0, sl
 80136ee:	b289      	uxth	r1, r1
 80136f0:	f5c0 7280 	rsb	r2, r0, #256	; 0x100
 80136f4:	fa1f f888 	uxth.w	r8, r8
 80136f8:	1a52      	subs	r2, r2, r1
 80136fa:	b292      	uxth	r2, r2
 80136fc:	fb08 f00e 	mul.w	r0, r8, lr
 8013700:	fb02 0007 	mla	r0, r2, r7, r0
 8013704:	fb01 0009 	mla	r0, r1, r9, r0
 8013708:	fb0a 0005 	mla	r0, sl, r5, r0
 801370c:	f3c0 2007 	ubfx	r0, r0, #8, #8
 8013710:	2800      	cmp	r0, #0
 8013712:	f000 80ea 	beq.w	80138ea <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x396>
 8013716:	2fff      	cmp	r7, #255	; 0xff
 8013718:	d01a      	beq.n	8013750 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1fc>
 801371a:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 801371e:	fb07 fc0c 	mul.w	ip, r7, ip
 8013722:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8013726:	435f      	muls	r7, r3
 8013728:	ea4f 231c 	mov.w	r3, ip, lsr #8
 801372c:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8013730:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8013734:	f507 7b80 	add.w	fp, r7, #256	; 0x100
 8013738:	4463      	add	r3, ip
 801373a:	eb0b 2b17 	add.w	fp, fp, r7, lsr #8
 801373e:	0a1b      	lsrs	r3, r3, #8
 8013740:	ea4f 2b1b 	mov.w	fp, fp, lsr #8
 8013744:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8013748:	f40b 4b7f 	and.w	fp, fp, #65280	; 0xff00
 801374c:	ea43 030b 	orr.w	r3, r3, fp
 8013750:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 8013754:	d01e      	beq.n	8013794 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x240>
 8013756:	9e0d      	ldr	r6, [sp, #52]	; 0x34
 8013758:	f006 1bff 	and.w	fp, r6, #16711935	; 0xff00ff
 801375c:	fb0e fb0b 	mul.w	fp, lr, fp
 8013760:	f406 477f 	and.w	r7, r6, #65280	; 0xff00
 8013764:	fb0e fe07 	mul.w	lr, lr, r7
 8013768:	ea4f 2c1b 	mov.w	ip, fp, lsr #8
 801376c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8013770:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8013774:	f50e 7780 	add.w	r7, lr, #256	; 0x100
 8013778:	44dc      	add	ip, fp
 801377a:	eb07 2e1e 	add.w	lr, r7, lr, lsr #8
 801377e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8013782:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8013786:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801378a:	f40e 4e7f 	and.w	lr, lr, #65280	; 0xff00
 801378e:	ea4c 060e 	orr.w	r6, ip, lr
 8013792:	960d      	str	r6, [sp, #52]	; 0x34
 8013794:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8013798:	d01e      	beq.n	80137d8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x284>
 801379a:	9e0a      	ldr	r6, [sp, #40]	; 0x28
 801379c:	f006 1eff 	and.w	lr, r6, #16711935	; 0xff00ff
 80137a0:	fb09 fe0e 	mul.w	lr, r9, lr
 80137a4:	f406 477f 	and.w	r7, r6, #65280	; 0xff00
 80137a8:	fb09 f907 	mul.w	r9, r9, r7
 80137ac:	ea4f 2c1e 	mov.w	ip, lr, lsr #8
 80137b0:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80137b4:	f10e 1e01 	add.w	lr, lr, #65537	; 0x10001
 80137b8:	f509 7780 	add.w	r7, r9, #256	; 0x100
 80137bc:	44f4      	add	ip, lr
 80137be:	eb07 2919 	add.w	r9, r7, r9, lsr #8
 80137c2:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80137c6:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80137ca:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80137ce:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 80137d2:	ea4c 0609 	orr.w	r6, ip, r9
 80137d6:	960a      	str	r6, [sp, #40]	; 0x28
 80137d8:	2dff      	cmp	r5, #255	; 0xff
 80137da:	d01c      	beq.n	8013816 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2c2>
 80137dc:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 80137de:	f006 1eff 	and.w	lr, r6, #16711935	; 0xff00ff
 80137e2:	fb05 fe0e 	mul.w	lr, r5, lr
 80137e6:	f406 477f 	and.w	r7, r6, #65280	; 0xff00
 80137ea:	437d      	muls	r5, r7
 80137ec:	ea4f 2c1e 	mov.w	ip, lr, lsr #8
 80137f0:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80137f4:	f10e 1e01 	add.w	lr, lr, #65537	; 0x10001
 80137f8:	f505 7780 	add.w	r7, r5, #256	; 0x100
 80137fc:	44f4      	add	ip, lr
 80137fe:	eb07 2515 	add.w	r5, r7, r5, lsr #8
 8013802:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8013806:	0a2d      	lsrs	r5, r5, #8
 8013808:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801380c:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 8013810:	ea4c 0505 	orr.w	r5, ip, r5
 8013814:	950e      	str	r5, [sp, #56]	; 0x38
 8013816:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8013818:	9e0a      	ldr	r6, [sp, #40]	; 0x28
 801381a:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801381e:	f003 17ff 	and.w	r7, r3, #16711935	; 0xff00ff
 8013822:	fb08 f505 	mul.w	r5, r8, r5
 8013826:	fb02 5507 	mla	r5, r2, r7, r5
 801382a:	f006 17ff 	and.w	r7, r6, #16711935	; 0xff00ff
 801382e:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 8013830:	fb01 5507 	mla	r5, r1, r7, r5
 8013834:	f006 17ff 	and.w	r7, r6, #16711935	; 0xff00ff
 8013838:	9e0d      	ldr	r6, [sp, #52]	; 0x34
 801383a:	fb0a 5507 	mla	r5, sl, r7, r5
 801383e:	f406 477f 	and.w	r7, r6, #65280	; 0xff00
 8013842:	fb08 f807 	mul.w	r8, r8, r7
 8013846:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801384a:	fb02 8303 	mla	r3, r2, r3, r8
 801384e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8013850:	9e15      	ldr	r6, [sp, #84]	; 0x54
 8013852:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 8013856:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8013858:	fb01 330c 	mla	r3, r1, ip, r3
 801385c:	f402 417f 	and.w	r1, r2, #65280	; 0xff00
 8013860:	fb0a 3a01 	mla	sl, sl, r1, r3
 8013864:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8013866:	9a15      	ldr	r2, [sp, #84]	; 0x54
 8013868:	881f      	ldrh	r7, [r3, #0]
 801386a:	9b15      	ldr	r3, [sp, #84]	; 0x54
 801386c:	0a2d      	lsrs	r5, r5, #8
 801386e:	4343      	muls	r3, r0
 8013870:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8013874:	1c58      	adds	r0, r3, #1
 8013876:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801387a:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801387e:	ea45 050a 	orr.w	r5, r5, sl
 8013882:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8013886:	0c29      	lsrs	r1, r5, #16
 8013888:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 801388c:	123b      	asrs	r3, r7, #8
 801388e:	b2c0      	uxtb	r0, r0
 8013890:	fb11 f102 	smulbb	r1, r1, r2
 8013894:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8013898:	fb03 1300 	mla	r3, r3, r0, r1
 801389c:	b299      	uxth	r1, r3
 801389e:	10fa      	asrs	r2, r7, #3
 80138a0:	f3c5 2307 	ubfx	r3, r5, #8, #8
 80138a4:	fb13 f306 	smulbb	r3, r3, r6
 80138a8:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 80138ac:	fb02 3200 	mla	r2, r2, r0, r3
 80138b0:	b2ed      	uxtb	r5, r5
 80138b2:	00fb      	lsls	r3, r7, #3
 80138b4:	b2db      	uxtb	r3, r3
 80138b6:	fb15 f506 	smulbb	r5, r5, r6
 80138ba:	fb03 5500 	mla	r5, r3, r0, r5
 80138be:	b292      	uxth	r2, r2
 80138c0:	b2ad      	uxth	r5, r5
 80138c2:	1c4b      	adds	r3, r1, #1
 80138c4:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 80138c8:	1c68      	adds	r0, r5, #1
 80138ca:	1c51      	adds	r1, r2, #1
 80138cc:	eb00 2515 	add.w	r5, r0, r5, lsr #8
 80138d0:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 80138d4:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 80138d8:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 80138dc:	0952      	lsrs	r2, r2, #5
 80138de:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80138e2:	432b      	orrs	r3, r5
 80138e4:	4313      	orrs	r3, r2
 80138e6:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80138e8:	8013      	strh	r3, [r2, #0]
 80138ea:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80138ec:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 80138ee:	3302      	adds	r3, #2
 80138f0:	9312      	str	r3, [sp, #72]	; 0x48
 80138f2:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 80138f4:	4413      	add	r3, r2
 80138f6:	932d      	str	r3, [sp, #180]	; 0xb4
 80138f8:	9a30      	ldr	r2, [sp, #192]	; 0xc0
 80138fa:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 80138fc:	4413      	add	r3, r2
 80138fe:	932e      	str	r3, [sp, #184]	; 0xb8
 8013900:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8013902:	3b01      	subs	r3, #1
 8013904:	9316      	str	r3, [sp, #88]	; 0x58
 8013906:	e6ab      	b.n	8013660 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x10c>
 8013908:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 801390a:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 801390c:	4413      	add	r3, r2
 801390e:	932d      	str	r3, [sp, #180]	; 0xb4
 8013910:	9a30      	ldr	r2, [sp, #192]	; 0xc0
 8013912:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8013914:	4413      	add	r3, r2
 8013916:	932e      	str	r3, [sp, #184]	; 0xb8
 8013918:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801391a:	3b01      	subs	r3, #1
 801391c:	9309      	str	r3, [sp, #36]	; 0x24
 801391e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8013920:	3302      	adds	r3, #2
 8013922:	930c      	str	r3, [sp, #48]	; 0x30
 8013924:	e64e      	b.n	80135c4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x70>
 8013926:	f47f ae60 	bne.w	80135ea <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x96>
 801392a:	9b14      	ldr	r3, [sp, #80]	; 0x50
 801392c:	2b00      	cmp	r3, #0
 801392e:	f340 81ac 	ble.w	8013c8a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x736>
 8013932:	ee3a aa2b 	vadd.f32	s20, s20, s23
 8013936:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801393a:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 801393e:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8013940:	ee79 9a8b 	vadd.f32	s19, s19, s22
 8013944:	ee39 9a2a 	vadd.f32	s18, s18, s21
 8013948:	ee29 7aa7 	vmul.f32	s14, s19, s15
 801394c:	eef0 6a48 	vmov.f32	s13, s16
 8013950:	ee69 7a27 	vmul.f32	s15, s18, s15
 8013954:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8013958:	ee37 8a48 	vsub.f32	s16, s14, s16
 801395c:	edcd 6a2d 	vstr	s13, [sp, #180]	; 0xb4
 8013960:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8013964:	eef0 6a68 	vmov.f32	s13, s17
 8013968:	ee77 8ae8 	vsub.f32	s17, s15, s17
 801396c:	ee18 2a10 	vmov	r2, s16
 8013970:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8013974:	fb92 f3f3 	sdiv	r3, r2, r3
 8013978:	ee18 2a90 	vmov	r2, s17
 801397c:	932f      	str	r3, [sp, #188]	; 0xbc
 801397e:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8013980:	fb92 f3f3 	sdiv	r3, r2, r3
 8013984:	9330      	str	r3, [sp, #192]	; 0xc0
 8013986:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8013988:	9a18      	ldr	r2, [sp, #96]	; 0x60
 801398a:	3b01      	subs	r3, #1
 801398c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8013990:	9314      	str	r3, [sp, #80]	; 0x50
 8013992:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8013994:	edcd 6a2e 	vstr	s13, [sp, #184]	; 0xb8
 8013998:	bf08      	it	eq
 801399a:	4613      	moveq	r3, r2
 801399c:	9309      	str	r3, [sp, #36]	; 0x24
 801399e:	eef0 8a67 	vmov.f32	s17, s15
 80139a2:	eeb0 8a47 	vmov.f32	s16, s14
 80139a6:	e606      	b.n	80135b6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x62>
 80139a8:	b161      	cbz	r1, 80139c4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x470>
 80139aa:	5d2a      	ldrb	r2, [r5, r4]
 80139ac:	9d08      	ldr	r5, [sp, #32]
 80139ae:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 80139b2:	920a      	str	r2, [sp, #40]	; 0x28
 80139b4:	ea4f 6912 	mov.w	r9, r2, lsr #24
 80139b8:	25ff      	movs	r5, #255	; 0xff
 80139ba:	46ae      	mov	lr, r5
 80139bc:	e68e      	b.n	80136dc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x188>
 80139be:	25ff      	movs	r5, #255	; 0xff
 80139c0:	46a9      	mov	r9, r5
 80139c2:	e68b      	b.n	80136dc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x188>
 80139c4:	25ff      	movs	r5, #255	; 0xff
 80139c6:	46a9      	mov	r9, r5
 80139c8:	e7f7      	b.n	80139ba <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x466>
 80139ca:	1c56      	adds	r6, r2, #1
 80139cc:	d18d      	bne.n	80138ea <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x396>
 80139ce:	4294      	cmp	r4, r2
 80139d0:	dd8b      	ble.n	80138ea <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x396>
 80139d2:	1c5d      	adds	r5, r3, #1
 80139d4:	db89      	blt.n	80138ea <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x396>
 80139d6:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80139d8:	429d      	cmp	r5, r3
 80139da:	dd86      	ble.n	80138ea <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x396>
 80139dc:	e9cd 3003 	strd	r3, r0, [sp, #12]
 80139e0:	9d17      	ldr	r5, [sp, #92]	; 0x5c
 80139e2:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80139e4:	9202      	str	r2, [sp, #8]
 80139e6:	e9cd 1505 	strd	r1, r5, [sp, #20]
 80139ea:	e9cd 4300 	strd	r4, r3, [sp]
 80139ee:	e9dd 1212 	ldrd	r1, r2, [sp, #72]	; 0x48
 80139f2:	9b08      	ldr	r3, [sp, #32]
 80139f4:	9819      	ldr	r0, [sp, #100]	; 0x64
 80139f6:	f7ff fc49 	bl	801328c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>
 80139fa:	e776      	b.n	80138ea <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x396>
 80139fc:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 80139fe:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 8013a00:	f3c3 3103 	ubfx	r1, r3, #12, #4
 8013a04:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8013a06:	1412      	asrs	r2, r2, #16
 8013a08:	f3c3 3003 	ubfx	r0, r3, #12, #4
 8013a0c:	141b      	asrs	r3, r3, #16
 8013a0e:	fb04 2303 	mla	r3, r4, r3, r2
 8013a12:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8013a14:	18d5      	adds	r5, r2, r3
 8013a16:	5cd3      	ldrb	r3, [r2, r3]
 8013a18:	9a08      	ldr	r2, [sp, #32]
 8013a1a:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8013a1e:	0e1e      	lsrs	r6, r3, #24
 8013a20:	2900      	cmp	r1, #0
 8013a22:	f000 8121 	beq.w	8013c68 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x714>
 8013a26:	786a      	ldrb	r2, [r5, #1]
 8013a28:	9f08      	ldr	r7, [sp, #32]
 8013a2a:	f857 2022 	ldr.w	r2, [r7, r2, lsl #2]
 8013a2e:	920f      	str	r2, [sp, #60]	; 0x3c
 8013a30:	ea4f 6c12 	mov.w	ip, r2, lsr #24
 8013a34:	2800      	cmp	r0, #0
 8013a36:	f000 8122 	beq.w	8013c7e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x72a>
 8013a3a:	192a      	adds	r2, r5, r4
 8013a3c:	5d2d      	ldrb	r5, [r5, r4]
 8013a3e:	7852      	ldrb	r2, [r2, #1]
 8013a40:	f857 5025 	ldr.w	r5, [r7, r5, lsl #2]
 8013a44:	f857 2022 	ldr.w	r2, [r7, r2, lsl #2]
 8013a48:	950b      	str	r5, [sp, #44]	; 0x2c
 8013a4a:	ea4f 6815 	mov.w	r8, r5, lsr #24
 8013a4e:	9210      	str	r2, [sp, #64]	; 0x40
 8013a50:	0e15      	lsrs	r5, r2, #24
 8013a52:	b289      	uxth	r1, r1
 8013a54:	b280      	uxth	r0, r0
 8013a56:	fb01 f900 	mul.w	r9, r1, r0
 8013a5a:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 8013a5e:	0109      	lsls	r1, r1, #4
 8013a60:	eba1 0e09 	sub.w	lr, r1, r9
 8013a64:	b280      	uxth	r0, r0
 8013a66:	f5c1 7280 	rsb	r2, r1, #256	; 0x100
 8013a6a:	fa1f fe8e 	uxth.w	lr, lr
 8013a6e:	1a12      	subs	r2, r2, r0
 8013a70:	b292      	uxth	r2, r2
 8013a72:	fb0e f10c 	mul.w	r1, lr, ip
 8013a76:	fb02 1106 	mla	r1, r2, r6, r1
 8013a7a:	fb00 1108 	mla	r1, r0, r8, r1
 8013a7e:	fb09 1105 	mla	r1, r9, r5, r1
 8013a82:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8013a86:	2900      	cmp	r1, #0
 8013a88:	f000 80e0 	beq.w	8013c4c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6f8>
 8013a8c:	2eff      	cmp	r6, #255	; 0xff
 8013a8e:	d016      	beq.n	8013abe <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x56a>
 8013a90:	f003 17ff 	and.w	r7, r3, #16711935	; 0xff00ff
 8013a94:	4377      	muls	r7, r6
 8013a96:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8013a9a:	435e      	muls	r6, r3
 8013a9c:	0a3b      	lsrs	r3, r7, #8
 8013a9e:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8013aa2:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8013aa6:	443b      	add	r3, r7
 8013aa8:	f506 7780 	add.w	r7, r6, #256	; 0x100
 8013aac:	eb07 2716 	add.w	r7, r7, r6, lsr #8
 8013ab0:	0a1b      	lsrs	r3, r3, #8
 8013ab2:	0a3f      	lsrs	r7, r7, #8
 8013ab4:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8013ab8:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 8013abc:	433b      	orrs	r3, r7
 8013abe:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8013ac2:	d01d      	beq.n	8013b00 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x5ac>
 8013ac4:	9e0f      	ldr	r6, [sp, #60]	; 0x3c
 8013ac6:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 8013ac8:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8013acc:	fb0c f606 	mul.w	r6, ip, r6
 8013ad0:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 8013ad4:	fb0c fc07 	mul.w	ip, ip, r7
 8013ad8:	0a37      	lsrs	r7, r6, #8
 8013ada:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8013ade:	f106 1601 	add.w	r6, r6, #65537	; 0x10001
 8013ae2:	4437      	add	r7, r6
 8013ae4:	f50c 7680 	add.w	r6, ip, #256	; 0x100
 8013ae8:	eb06 2c1c 	add.w	ip, r6, ip, lsr #8
 8013aec:	0a3f      	lsrs	r7, r7, #8
 8013aee:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8013af2:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8013af6:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8013afa:	ea47 060c 	orr.w	r6, r7, ip
 8013afe:	960f      	str	r6, [sp, #60]	; 0x3c
 8013b00:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8013b04:	d01d      	beq.n	8013b42 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x5ee>
 8013b06:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
 8013b08:	f006 1cff 	and.w	ip, r6, #16711935	; 0xff00ff
 8013b0c:	fb08 fc0c 	mul.w	ip, r8, ip
 8013b10:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8013b14:	fb08 f806 	mul.w	r8, r8, r6
 8013b18:	ea4f 271c 	mov.w	r7, ip, lsr #8
 8013b1c:	f508 7680 	add.w	r6, r8, #256	; 0x100
 8013b20:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8013b24:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8013b28:	eb06 2818 	add.w	r8, r6, r8, lsr #8
 8013b2c:	4467      	add	r7, ip
 8013b2e:	0a3f      	lsrs	r7, r7, #8
 8013b30:	ea4f 2818 	mov.w	r8, r8, lsr #8
 8013b34:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8013b38:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 8013b3c:	ea47 0608 	orr.w	r6, r7, r8
 8013b40:	960b      	str	r6, [sp, #44]	; 0x2c
 8013b42:	2dff      	cmp	r5, #255	; 0xff
 8013b44:	d01a      	beq.n	8013b7c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x628>
 8013b46:	9e10      	ldr	r6, [sp, #64]	; 0x40
 8013b48:	f006 1cff 	and.w	ip, r6, #16711935	; 0xff00ff
 8013b4c:	fb05 fc0c 	mul.w	ip, r5, ip
 8013b50:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8013b54:	4375      	muls	r5, r6
 8013b56:	ea4f 271c 	mov.w	r7, ip, lsr #8
 8013b5a:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8013b5e:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8013b62:	f505 7680 	add.w	r6, r5, #256	; 0x100
 8013b66:	4467      	add	r7, ip
 8013b68:	eb06 2515 	add.w	r5, r6, r5, lsr #8
 8013b6c:	0a3f      	lsrs	r7, r7, #8
 8013b6e:	0a2d      	lsrs	r5, r5, #8
 8013b70:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8013b74:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 8013b78:	433d      	orrs	r5, r7
 8013b7a:	9510      	str	r5, [sp, #64]	; 0x40
 8013b7c:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8013b7e:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8013b82:	f003 16ff 	and.w	r6, r3, #16711935	; 0xff00ff
 8013b86:	fb0e f505 	mul.w	r5, lr, r5
 8013b8a:	fb02 5506 	mla	r5, r2, r6, r5
 8013b8e:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
 8013b90:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8013b94:	fb00 5506 	mla	r5, r0, r6, r5
 8013b98:	9e10      	ldr	r6, [sp, #64]	; 0x40
 8013b9a:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8013b9e:	fb09 5506 	mla	r5, r9, r6, r5
 8013ba2:	9e0f      	ldr	r6, [sp, #60]	; 0x3c
 8013ba4:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8013ba8:	fb0e fe06 	mul.w	lr, lr, r6
 8013bac:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8013bb0:	fb02 e303 	mla	r3, r2, r3, lr
 8013bb4:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8013bb6:	f402 477f 	and.w	r7, r2, #65280	; 0xff00
 8013bba:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8013bbc:	fb00 3307 	mla	r3, r0, r7, r3
 8013bc0:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 8013bc4:	fb09 3c0c 	mla	ip, r9, ip, r3
 8013bc8:	fb01 f10b 	mul.w	r1, r1, fp
 8013bcc:	0a2d      	lsrs	r5, r5, #8
 8013bce:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8013bd2:	f8ba 0000 	ldrh.w	r0, [sl]
 8013bd6:	1c4b      	adds	r3, r1, #1
 8013bd8:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8013bdc:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8013be0:	ea45 050c 	orr.w	r5, r5, ip
 8013be4:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8013be8:	1202      	asrs	r2, r0, #8
 8013bea:	0c2b      	lsrs	r3, r5, #16
 8013bec:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 8013bf0:	b2c9      	uxtb	r1, r1
 8013bf2:	fb13 f30b 	smulbb	r3, r3, fp
 8013bf6:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8013bfa:	fb02 3201 	mla	r2, r2, r1, r3
 8013bfe:	f3c5 2607 	ubfx	r6, r5, #8, #8
 8013c02:	10c3      	asrs	r3, r0, #3
 8013c04:	b2ed      	uxtb	r5, r5
 8013c06:	00c0      	lsls	r0, r0, #3
 8013c08:	b2c0      	uxtb	r0, r0
 8013c0a:	fb15 f50b 	smulbb	r5, r5, fp
 8013c0e:	fb00 5001 	mla	r0, r0, r1, r5
 8013c12:	b292      	uxth	r2, r2
 8013c14:	fb16 f60b 	smulbb	r6, r6, fp
 8013c18:	b280      	uxth	r0, r0
 8013c1a:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 8013c1e:	fb03 6301 	mla	r3, r3, r1, r6
 8013c22:	1c51      	adds	r1, r2, #1
 8013c24:	1c46      	adds	r6, r0, #1
 8013c26:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8013c2a:	eb06 2610 	add.w	r6, r6, r0, lsr #8
 8013c2e:	b29b      	uxth	r3, r3
 8013c30:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8013c34:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 8013c38:	4332      	orrs	r2, r6
 8013c3a:	1c5e      	adds	r6, r3, #1
 8013c3c:	eb06 2313 	add.w	r3, r6, r3, lsr #8
 8013c40:	095b      	lsrs	r3, r3, #5
 8013c42:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8013c46:	431a      	orrs	r2, r3
 8013c48:	f8aa 2000 	strh.w	r2, [sl]
 8013c4c:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8013c4e:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 8013c50:	4413      	add	r3, r2
 8013c52:	932d      	str	r3, [sp, #180]	; 0xb4
 8013c54:	9a30      	ldr	r2, [sp, #192]	; 0xc0
 8013c56:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8013c58:	4413      	add	r3, r2
 8013c5a:	932e      	str	r3, [sp, #184]	; 0xb8
 8013c5c:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8013c5e:	3b01      	subs	r3, #1
 8013c60:	f10a 0a02 	add.w	sl, sl, #2
 8013c64:	9312      	str	r3, [sp, #72]	; 0x48
 8013c66:	e4db      	b.n	8013620 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xcc>
 8013c68:	b160      	cbz	r0, 8013c84 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x730>
 8013c6a:	5d2a      	ldrb	r2, [r5, r4]
 8013c6c:	9d08      	ldr	r5, [sp, #32]
 8013c6e:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 8013c72:	920b      	str	r2, [sp, #44]	; 0x2c
 8013c74:	ea4f 6812 	mov.w	r8, r2, lsr #24
 8013c78:	25ff      	movs	r5, #255	; 0xff
 8013c7a:	46ac      	mov	ip, r5
 8013c7c:	e6e9      	b.n	8013a52 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4fe>
 8013c7e:	25ff      	movs	r5, #255	; 0xff
 8013c80:	46a8      	mov	r8, r5
 8013c82:	e6e6      	b.n	8013a52 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4fe>
 8013c84:	25ff      	movs	r5, #255	; 0xff
 8013c86:	46a8      	mov	r8, r5
 8013c88:	e7f7      	b.n	8013c7a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x726>
 8013c8a:	b01b      	add	sp, #108	; 0x6c
 8013c8c:	ecbd 8b08 	vpop	{d8-d11}
 8013c90:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08013c94 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>:
 8013c94:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013c98:	8808      	ldrh	r0, [r1, #0]
 8013c9a:	b085      	sub	sp, #20
 8013c9c:	1206      	asrs	r6, r0, #8
 8013c9e:	e9dd 5410 	ldrd	r5, r4, [sp, #64]	; 0x40
 8013ca2:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8013ca6:	9600      	str	r6, [sp, #0]
 8013ca8:	f9bd c038 	ldrsh.w	ip, [sp, #56]	; 0x38
 8013cac:	f9bd 903c 	ldrsh.w	r9, [sp, #60]	; 0x3c
 8013cb0:	f89d 704c 	ldrb.w	r7, [sp, #76]	; 0x4c
 8013cb4:	10c6      	asrs	r6, r0, #3
 8013cb6:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8013cba:	9601      	str	r6, [sp, #4]
 8013cbc:	00c0      	lsls	r0, r0, #3
 8013cbe:	fb04 560c 	mla	r6, r4, ip, r5
 8013cc2:	b2c0      	uxtb	r0, r0
 8013cc4:	4692      	mov	sl, r2
 8013cc6:	eb02 0e06 	add.w	lr, r2, r6
 8013cca:	9a00      	ldr	r2, [sp, #0]
 8013ccc:	9002      	str	r0, [sp, #8]
 8013cce:	f040 407f 	orr.w	r0, r0, #4278190080	; 0xff000000
 8013cd2:	ea40 4002 	orr.w	r0, r0, r2, lsl #16
 8013cd6:	9a01      	ldr	r2, [sp, #4]
 8013cd8:	2c00      	cmp	r4, #0
 8013cda:	4698      	mov	r8, r3
 8013cdc:	ea40 2002 	orr.w	r0, r0, r2, lsl #8
 8013ce0:	f89d 3048 	ldrb.w	r3, [sp, #72]	; 0x48
 8013ce4:	db3e      	blt.n	8013d64 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xd0>
 8013ce6:	45a1      	cmp	r9, r4
 8013ce8:	dd3c      	ble.n	8013d64 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xd0>
 8013cea:	2d00      	cmp	r5, #0
 8013cec:	db38      	blt.n	8013d60 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xcc>
 8013cee:	45ac      	cmp	ip, r5
 8013cf0:	dd36      	ble.n	8013d60 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xcc>
 8013cf2:	f81a 2006 	ldrb.w	r2, [sl, r6]
 8013cf6:	f858 2022 	ldr.w	r2, [r8, r2, lsl #2]
 8013cfa:	1c6e      	adds	r6, r5, #1
 8013cfc:	d435      	bmi.n	8013d6a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xd6>
 8013cfe:	45b4      	cmp	ip, r6
 8013d00:	dd33      	ble.n	8013d6a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xd6>
 8013d02:	b393      	cbz	r3, 8013d6a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xd6>
 8013d04:	f89e 6001 	ldrb.w	r6, [lr, #1]
 8013d08:	f858 6026 	ldr.w	r6, [r8, r6, lsl #2]
 8013d0c:	3401      	adds	r4, #1
 8013d0e:	d430      	bmi.n	8013d72 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xde>
 8013d10:	45a1      	cmp	r9, r4
 8013d12:	dd2e      	ble.n	8013d72 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xde>
 8013d14:	b36f      	cbz	r7, 8013d72 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xde>
 8013d16:	2d00      	cmp	r5, #0
 8013d18:	db29      	blt.n	8013d6e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xda>
 8013d1a:	45ac      	cmp	ip, r5
 8013d1c:	dd27      	ble.n	8013d6e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xda>
 8013d1e:	f81e 400c 	ldrb.w	r4, [lr, ip]
 8013d22:	f858 4024 	ldr.w	r4, [r8, r4, lsl #2]
 8013d26:	3501      	adds	r5, #1
 8013d28:	d407      	bmi.n	8013d3a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xa6>
 8013d2a:	45ac      	cmp	ip, r5
 8013d2c:	dd05      	ble.n	8013d3a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xa6>
 8013d2e:	b123      	cbz	r3, 8013d3a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xa6>
 8013d30:	44f4      	add	ip, lr
 8013d32:	f89c 0001 	ldrb.w	r0, [ip, #1]
 8013d36:	f858 0020 	ldr.w	r0, [r8, r0, lsl #2]
 8013d3a:	2b0f      	cmp	r3, #15
 8013d3c:	ea4f 6b12 	mov.w	fp, r2, lsr #24
 8013d40:	ea4f 6a16 	mov.w	sl, r6, lsr #24
 8013d44:	ea4f 6914 	mov.w	r9, r4, lsr #24
 8013d48:	ea4f 6810 	mov.w	r8, r0, lsr #24
 8013d4c:	d801      	bhi.n	8013d52 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xbe>
 8013d4e:	2f0f      	cmp	r7, #15
 8013d50:	d911      	bls.n	8013d76 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xe2>
 8013d52:	4b79      	ldr	r3, [pc, #484]	; (8013f38 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x2a4>)
 8013d54:	4a79      	ldr	r2, [pc, #484]	; (8013f3c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x2a8>)
 8013d56:	487a      	ldr	r0, [pc, #488]	; (8013f40 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x2ac>)
 8013d58:	f240 210d 	movw	r1, #525	; 0x20d
 8013d5c:	f004 ff46 	bl	8018bec <__assert_func>
 8013d60:	4602      	mov	r2, r0
 8013d62:	e7ca      	b.n	8013cfa <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x66>
 8013d64:	4606      	mov	r6, r0
 8013d66:	4602      	mov	r2, r0
 8013d68:	e7d0      	b.n	8013d0c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x78>
 8013d6a:	4606      	mov	r6, r0
 8013d6c:	e7ce      	b.n	8013d0c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x78>
 8013d6e:	4604      	mov	r4, r0
 8013d70:	e7d9      	b.n	8013d26 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x92>
 8013d72:	4604      	mov	r4, r0
 8013d74:	e7e1      	b.n	8013d3a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xa6>
 8013d76:	b29b      	uxth	r3, r3
 8013d78:	b2bf      	uxth	r7, r7
 8013d7a:	fb03 fe07 	mul.w	lr, r3, r7
 8013d7e:	ebce 1707 	rsb	r7, lr, r7, lsl #4
 8013d82:	011b      	lsls	r3, r3, #4
 8013d84:	eba3 0c0e 	sub.w	ip, r3, lr
 8013d88:	b2bf      	uxth	r7, r7
 8013d8a:	f5c3 7580 	rsb	r5, r3, #256	; 0x100
 8013d8e:	fa1f fc8c 	uxth.w	ip, ip
 8013d92:	1bed      	subs	r5, r5, r7
 8013d94:	b2ad      	uxth	r5, r5
 8013d96:	fb0c f30a 	mul.w	r3, ip, sl
 8013d9a:	fb05 330b 	mla	r3, r5, fp, r3
 8013d9e:	fb07 3309 	mla	r3, r7, r9, r3
 8013da2:	fb0e 3308 	mla	r3, lr, r8, r3
 8013da6:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8013daa:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 8013dae:	9303      	str	r3, [sp, #12]
 8013db0:	d018      	beq.n	8013de4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x150>
 8013db2:	f002 13ff 	and.w	r3, r2, #16711935	; 0xff00ff
 8013db6:	fb0b f303 	mul.w	r3, fp, r3
 8013dba:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8013dbe:	fb0b fb02 	mul.w	fp, fp, r2
 8013dc2:	0a1a      	lsrs	r2, r3, #8
 8013dc4:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8013dc8:	f103 1301 	add.w	r3, r3, #65537	; 0x10001
 8013dcc:	441a      	add	r2, r3
 8013dce:	f50b 7380 	add.w	r3, fp, #256	; 0x100
 8013dd2:	eb03 231b 	add.w	r3, r3, fp, lsr #8
 8013dd6:	0a12      	lsrs	r2, r2, #8
 8013dd8:	0a1b      	lsrs	r3, r3, #8
 8013dda:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8013dde:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8013de2:	431a      	orrs	r2, r3
 8013de4:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 8013de8:	d019      	beq.n	8013e1e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x18a>
 8013dea:	f006 1bff 	and.w	fp, r6, #16711935	; 0xff00ff
 8013dee:	fb0a fb0b 	mul.w	fp, sl, fp
 8013df2:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8013df6:	fb0a fa06 	mul.w	sl, sl, r6
 8013dfa:	ea4f 261b 	mov.w	r6, fp, lsr #8
 8013dfe:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8013e02:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8013e06:	f50a 7380 	add.w	r3, sl, #256	; 0x100
 8013e0a:	445e      	add	r6, fp
 8013e0c:	eb03 231a 	add.w	r3, r3, sl, lsr #8
 8013e10:	0a36      	lsrs	r6, r6, #8
 8013e12:	0a1b      	lsrs	r3, r3, #8
 8013e14:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8013e18:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8013e1c:	431e      	orrs	r6, r3
 8013e1e:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8013e22:	d019      	beq.n	8013e58 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x1c4>
 8013e24:	f004 1aff 	and.w	sl, r4, #16711935	; 0xff00ff
 8013e28:	fb09 fa0a 	mul.w	sl, r9, sl
 8013e2c:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 8013e30:	fb09 f904 	mul.w	r9, r9, r4
 8013e34:	ea4f 241a 	mov.w	r4, sl, lsr #8
 8013e38:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8013e3c:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8013e40:	f509 7380 	add.w	r3, r9, #256	; 0x100
 8013e44:	4454      	add	r4, sl
 8013e46:	eb03 2319 	add.w	r3, r3, r9, lsr #8
 8013e4a:	0a24      	lsrs	r4, r4, #8
 8013e4c:	0a1b      	lsrs	r3, r3, #8
 8013e4e:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8013e52:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8013e56:	431c      	orrs	r4, r3
 8013e58:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8013e5c:	d019      	beq.n	8013e92 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x1fe>
 8013e5e:	f000 19ff 	and.w	r9, r0, #16711935	; 0xff00ff
 8013e62:	fb08 f909 	mul.w	r9, r8, r9
 8013e66:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8013e6a:	fb08 f800 	mul.w	r8, r8, r0
 8013e6e:	ea4f 2019 	mov.w	r0, r9, lsr #8
 8013e72:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 8013e76:	f109 1901 	add.w	r9, r9, #65537	; 0x10001
 8013e7a:	f508 7380 	add.w	r3, r8, #256	; 0x100
 8013e7e:	4448      	add	r0, r9
 8013e80:	eb03 2318 	add.w	r3, r3, r8, lsr #8
 8013e84:	0a00      	lsrs	r0, r0, #8
 8013e86:	0a1b      	lsrs	r3, r3, #8
 8013e88:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 8013e8c:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8013e90:	4318      	orrs	r0, r3
 8013e92:	f006 18ff 	and.w	r8, r6, #16711935	; 0xff00ff
 8013e96:	f002 13ff 	and.w	r3, r2, #16711935	; 0xff00ff
 8013e9a:	fb0c f808 	mul.w	r8, ip, r8
 8013e9e:	fb05 8803 	mla	r8, r5, r3, r8
 8013ea2:	f004 13ff 	and.w	r3, r4, #16711935	; 0xff00ff
 8013ea6:	fb07 8803 	mla	r8, r7, r3, r8
 8013eaa:	f000 13ff 	and.w	r3, r0, #16711935	; 0xff00ff
 8013eae:	fb0e 8303 	mla	r3, lr, r3, r8
 8013eb2:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8013eb6:	0a1b      	lsrs	r3, r3, #8
 8013eb8:	fb0c f606 	mul.w	r6, ip, r6
 8013ebc:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8013ec0:	fb05 6202 	mla	r2, r5, r2, r6
 8013ec4:	f003 18ff 	and.w	r8, r3, #16711935	; 0xff00ff
 8013ec8:	f404 437f 	and.w	r3, r4, #65280	; 0xff00
 8013ecc:	fb07 2703 	mla	r7, r7, r3, r2
 8013ed0:	9a03      	ldr	r2, [sp, #12]
 8013ed2:	9c02      	ldr	r4, [sp, #8]
 8013ed4:	9d01      	ldr	r5, [sp, #4]
 8013ed6:	f400 437f 	and.w	r3, r0, #65280	; 0xff00
 8013eda:	fb0e 7303 	mla	r3, lr, r3, r7
 8013ede:	43d0      	mvns	r0, r2
 8013ee0:	9a00      	ldr	r2, [sp, #0]
 8013ee2:	b2c0      	uxtb	r0, r0
 8013ee4:	0a1b      	lsrs	r3, r3, #8
 8013ee6:	4342      	muls	r2, r0
 8013ee8:	4344      	muls	r4, r0
 8013eea:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8013eee:	ea48 0303 	orr.w	r3, r8, r3
 8013ef2:	4345      	muls	r5, r0
 8013ef4:	4620      	mov	r0, r4
 8013ef6:	1c54      	adds	r4, r2, #1
 8013ef8:	eb04 2412 	add.w	r4, r4, r2, lsr #8
 8013efc:	0c1a      	lsrs	r2, r3, #16
 8013efe:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 8013f02:	4a10      	ldr	r2, [pc, #64]	; (8013f44 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x2b0>)
 8013f04:	ea02 2204 	and.w	r2, r2, r4, lsl #8
 8013f08:	1c44      	adds	r4, r0, #1
 8013f0a:	eb04 2410 	add.w	r4, r4, r0, lsr #8
 8013f0e:	b2d8      	uxtb	r0, r3
 8013f10:	eb00 2014 	add.w	r0, r0, r4, lsr #8
 8013f14:	ea42 02d0 	orr.w	r2, r2, r0, lsr #3
 8013f18:	1c68      	adds	r0, r5, #1
 8013f1a:	eb00 2015 	add.w	r0, r0, r5, lsr #8
 8013f1e:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8013f22:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8013f26:	00db      	lsls	r3, r3, #3
 8013f28:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8013f2c:	4313      	orrs	r3, r2
 8013f2e:	800b      	strh	r3, [r1, #0]
 8013f30:	b005      	add	sp, #20
 8013f32:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013f36:	bf00      	nop
 8013f38:	0801c915 	.word	0x0801c915
 8013f3c:	0801ce6d 	.word	0x0801ce6d
 8013f40:	0801c99d 	.word	0x0801c99d
 8013f44:	fffff800 	.word	0xfffff800

08013f48 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 8013f48:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013f4c:	ed2d 8b08 	vpush	{d8-d11}
 8013f50:	b097      	sub	sp, #92	; 0x5c
 8013f52:	eeb0 aa40 	vmov.f32	s20, s0
 8013f56:	9d2d      	ldr	r5, [sp, #180]	; 0xb4
 8013f58:	9307      	str	r3, [sp, #28]
 8013f5a:	f9bd 30c4 	ldrsh.w	r3, [sp, #196]	; 0xc4
 8013f5e:	9112      	str	r1, [sp, #72]	; 0x48
 8013f60:	930f      	str	r3, [sp, #60]	; 0x3c
 8013f62:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	; 0xb8
 8013f66:	9015      	str	r0, [sp, #84]	; 0x54
 8013f68:	6868      	ldr	r0, [r5, #4]
 8013f6a:	9214      	str	r2, [sp, #80]	; 0x50
 8013f6c:	fb00 1303 	mla	r3, r0, r3, r1
 8013f70:	9a32      	ldr	r2, [sp, #200]	; 0xc8
 8013f72:	6829      	ldr	r1, [r5, #0]
 8013f74:	6855      	ldr	r5, [r2, #4]
 8013f76:	f9bd 40c0 	ldrsh.w	r4, [sp, #192]	; 0xc0
 8013f7a:	eb01 0343 	add.w	r3, r1, r3, lsl #1
 8013f7e:	930a      	str	r3, [sp, #40]	; 0x28
 8013f80:	6813      	ldr	r3, [r2, #0]
 8013f82:	9311      	str	r3, [sp, #68]	; 0x44
 8013f84:	eef0 9a60 	vmov.f32	s19, s1
 8013f88:	eeb0 9a41 	vmov.f32	s18, s2
 8013f8c:	eeb0 8a62 	vmov.f32	s16, s5
 8013f90:	eef0 8a43 	vmov.f32	s17, s6
 8013f94:	eef0 ba44 	vmov.f32	s23, s8
 8013f98:	eeb0 ba64 	vmov.f32	s22, s9
 8013f9c:	eef0 aa45 	vmov.f32	s21, s10
 8013fa0:	3504      	adds	r5, #4
 8013fa2:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8013fa4:	2b00      	cmp	r3, #0
 8013fa6:	dc03      	bgt.n	8013fb0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x68>
 8013fa8:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8013faa:	2b00      	cmp	r3, #0
 8013fac:	f340 834d 	ble.w	801464a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x702>
 8013fb0:	9b07      	ldr	r3, [sp, #28]
 8013fb2:	2b00      	cmp	r3, #0
 8013fb4:	f340 819c 	ble.w	80142f0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3a8>
 8013fb8:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8013fba:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8013fbc:	1412      	asrs	r2, r2, #16
 8013fbe:	ea4f 4323 	mov.w	r3, r3, asr #16
 8013fc2:	d42d      	bmi.n	8014020 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xd8>
 8013fc4:	1c51      	adds	r1, r2, #1
 8013fc6:	428c      	cmp	r4, r1
 8013fc8:	dd2d      	ble.n	8014026 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xde>
 8013fca:	2b00      	cmp	r3, #0
 8013fcc:	db2b      	blt.n	8014026 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xde>
 8013fce:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8013fd0:	1c59      	adds	r1, r3, #1
 8013fd2:	4288      	cmp	r0, r1
 8013fd4:	dd27      	ble.n	8014026 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xde>
 8013fd6:	9b07      	ldr	r3, [sp, #28]
 8013fd8:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 8013fda:	9929      	ldr	r1, [sp, #164]	; 0xa4
 8013fdc:	3b01      	subs	r3, #1
 8013fde:	fb02 1203 	mla	r2, r2, r3, r1
 8013fe2:	1412      	asrs	r2, r2, #16
 8013fe4:	d429      	bmi.n	801403a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf2>
 8013fe6:	3201      	adds	r2, #1
 8013fe8:	4294      	cmp	r4, r2
 8013fea:	dd26      	ble.n	801403a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf2>
 8013fec:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 8013fee:	992a      	ldr	r1, [sp, #168]	; 0xa8
 8013ff0:	fb02 1303 	mla	r3, r2, r3, r1
 8013ff4:	141b      	asrs	r3, r3, #16
 8013ff6:	d420      	bmi.n	801403a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf2>
 8013ff8:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8013ffa:	3301      	adds	r3, #1
 8013ffc:	429a      	cmp	r2, r3
 8013ffe:	dd1c      	ble.n	801403a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf2>
 8014000:	9b07      	ldr	r3, [sp, #28]
 8014002:	f8dd b028 	ldr.w	fp, [sp, #40]	; 0x28
 8014006:	9310      	str	r3, [sp, #64]	; 0x40
 8014008:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801400a:	2b00      	cmp	r3, #0
 801400c:	f300 81da 	bgt.w	80143c4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x47c>
 8014010:	9b07      	ldr	r3, [sp, #28]
 8014012:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8014014:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8014018:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801401c:	930a      	str	r3, [sp, #40]	; 0x28
 801401e:	e169      	b.n	80142f4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3ac>
 8014020:	1c51      	adds	r1, r2, #1
 8014022:	f040 8156 	bne.w	80142d2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x38a>
 8014026:	42a2      	cmp	r2, r4
 8014028:	f280 8153 	bge.w	80142d2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x38a>
 801402c:	1c5a      	adds	r2, r3, #1
 801402e:	f2c0 8150 	blt.w	80142d2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x38a>
 8014032:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8014034:	4293      	cmp	r3, r2
 8014036:	f280 814c 	bge.w	80142d2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x38a>
 801403a:	9b07      	ldr	r3, [sp, #28]
 801403c:	9313      	str	r3, [sp, #76]	; 0x4c
 801403e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8014040:	9310      	str	r3, [sp, #64]	; 0x40
 8014042:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8014044:	2b00      	cmp	r3, #0
 8014046:	dde3      	ble.n	8014010 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xc8>
 8014048:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 801404a:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801404c:	f3c2 3103 	ubfx	r1, r2, #12, #4
 8014050:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 8014052:	f3c2 3003 	ubfx	r0, r2, #12, #4
 8014056:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8014058:	1412      	asrs	r2, r2, #16
 801405a:	ea4f 4323 	mov.w	r3, r3, asr #16
 801405e:	f100 8198 	bmi.w	8014392 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x44a>
 8014062:	1c56      	adds	r6, r2, #1
 8014064:	42b4      	cmp	r4, r6
 8014066:	f340 8196 	ble.w	8014396 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x44e>
 801406a:	2b00      	cmp	r3, #0
 801406c:	f2c0 8193 	blt.w	8014396 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x44e>
 8014070:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 8014072:	1c5e      	adds	r6, r3, #1
 8014074:	42b7      	cmp	r7, r6
 8014076:	f340 818e 	ble.w	8014396 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x44e>
 801407a:	fb03 2304 	mla	r3, r3, r4, r2
 801407e:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8014080:	18d6      	adds	r6, r2, r3
 8014082:	5cd3      	ldrb	r3, [r2, r3]
 8014084:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 8014088:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 801408c:	2900      	cmp	r1, #0
 801408e:	f000 8170 	beq.w	8014372 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x42a>
 8014092:	7872      	ldrb	r2, [r6, #1]
 8014094:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 8014098:	920b      	str	r2, [sp, #44]	; 0x2c
 801409a:	ea4f 6812 	mov.w	r8, r2, lsr #24
 801409e:	2800      	cmp	r0, #0
 80140a0:	f000 8171 	beq.w	8014386 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x43e>
 80140a4:	1932      	adds	r2, r6, r4
 80140a6:	5d36      	ldrb	r6, [r6, r4]
 80140a8:	7852      	ldrb	r2, [r2, #1]
 80140aa:	f855 6026 	ldr.w	r6, [r5, r6, lsl #2]
 80140ae:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 80140b2:	9608      	str	r6, [sp, #32]
 80140b4:	ea4f 6a16 	mov.w	sl, r6, lsr #24
 80140b8:	920c      	str	r2, [sp, #48]	; 0x30
 80140ba:	0e16      	lsrs	r6, r2, #24
 80140bc:	b289      	uxth	r1, r1
 80140be:	b280      	uxth	r0, r0
 80140c0:	fb01 fb00 	mul.w	fp, r1, r0
 80140c4:	ebcb 1000 	rsb	r0, fp, r0, lsl #4
 80140c8:	0109      	lsls	r1, r1, #4
 80140ca:	eba1 090b 	sub.w	r9, r1, fp
 80140ce:	b280      	uxth	r0, r0
 80140d0:	f5c1 7280 	rsb	r2, r1, #256	; 0x100
 80140d4:	fa1f f989 	uxth.w	r9, r9
 80140d8:	1a12      	subs	r2, r2, r0
 80140da:	b292      	uxth	r2, r2
 80140dc:	fb09 f108 	mul.w	r1, r9, r8
 80140e0:	fb02 110c 	mla	r1, r2, ip, r1
 80140e4:	fb00 110a 	mla	r1, r0, sl, r1
 80140e8:	fb0b 1106 	mla	r1, fp, r6, r1
 80140ec:	f3c1 2107 	ubfx	r1, r1, #8, #8
 80140f0:	2900      	cmp	r1, #0
 80140f2:	f000 80df 	beq.w	80142b4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x36c>
 80140f6:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 80140fa:	d01b      	beq.n	8014134 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1ec>
 80140fc:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 8014100:	fb0c fe0e 	mul.w	lr, ip, lr
 8014104:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8014108:	fb0c fc03 	mul.w	ip, ip, r3
 801410c:	ea4f 231e 	mov.w	r3, lr, lsr #8
 8014110:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8014114:	f10e 1e01 	add.w	lr, lr, #65537	; 0x10001
 8014118:	4473      	add	r3, lr
 801411a:	f50c 7e80 	add.w	lr, ip, #256	; 0x100
 801411e:	eb0e 2e1c 	add.w	lr, lr, ip, lsr #8
 8014122:	0a1b      	lsrs	r3, r3, #8
 8014124:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8014128:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801412c:	f40e 4e7f 	and.w	lr, lr, #65280	; 0xff00
 8014130:	ea43 030e 	orr.w	r3, r3, lr
 8014134:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8014138:	d01e      	beq.n	8014178 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x230>
 801413a:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 801413c:	f007 1cff 	and.w	ip, r7, #16711935	; 0xff00ff
 8014140:	fb08 fc0c 	mul.w	ip, r8, ip
 8014144:	f407 4e7f 	and.w	lr, r7, #65280	; 0xff00
 8014148:	fb08 f80e 	mul.w	r8, r8, lr
 801414c:	ea4f 2e1c 	mov.w	lr, ip, lsr #8
 8014150:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8014154:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8014158:	44e6      	add	lr, ip
 801415a:	f508 7c80 	add.w	ip, r8, #256	; 0x100
 801415e:	eb0c 2818 	add.w	r8, ip, r8, lsr #8
 8014162:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8014166:	ea4f 2818 	mov.w	r8, r8, lsr #8
 801416a:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801416e:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 8014172:	ea4e 0708 	orr.w	r7, lr, r8
 8014176:	970b      	str	r7, [sp, #44]	; 0x2c
 8014178:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 801417c:	d01e      	beq.n	80141bc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x274>
 801417e:	9f08      	ldr	r7, [sp, #32]
 8014180:	f007 18ff 	and.w	r8, r7, #16711935	; 0xff00ff
 8014184:	fb0a f808 	mul.w	r8, sl, r8
 8014188:	f407 4c7f 	and.w	ip, r7, #65280	; 0xff00
 801418c:	fb0a fa0c 	mul.w	sl, sl, ip
 8014190:	ea4f 2e18 	mov.w	lr, r8, lsr #8
 8014194:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8014198:	f108 1801 	add.w	r8, r8, #65537	; 0x10001
 801419c:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 80141a0:	44c6      	add	lr, r8
 80141a2:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80141a6:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80141aa:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80141ae:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80141b2:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80141b6:	ea4e 070a 	orr.w	r7, lr, sl
 80141ba:	9708      	str	r7, [sp, #32]
 80141bc:	2eff      	cmp	r6, #255	; 0xff
 80141be:	d01d      	beq.n	80141fc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2b4>
 80141c0:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 80141c2:	f007 18ff 	and.w	r8, r7, #16711935	; 0xff00ff
 80141c6:	fb06 f808 	mul.w	r8, r6, r8
 80141ca:	f407 4c7f 	and.w	ip, r7, #65280	; 0xff00
 80141ce:	fb06 f60c 	mul.w	r6, r6, ip
 80141d2:	ea4f 2e18 	mov.w	lr, r8, lsr #8
 80141d6:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80141da:	f108 1801 	add.w	r8, r8, #65537	; 0x10001
 80141de:	f506 7c80 	add.w	ip, r6, #256	; 0x100
 80141e2:	44c6      	add	lr, r8
 80141e4:	eb0c 2616 	add.w	r6, ip, r6, lsr #8
 80141e8:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80141ec:	0a36      	lsrs	r6, r6, #8
 80141ee:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80141f2:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 80141f6:	ea4e 0606 	orr.w	r6, lr, r6
 80141fa:	960c      	str	r6, [sp, #48]	; 0x30
 80141fc:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
 80141fe:	9f08      	ldr	r7, [sp, #32]
 8014200:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8014204:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 8014208:	fb09 f606 	mul.w	r6, r9, r6
 801420c:	fb02 660c 	mla	r6, r2, ip, r6
 8014210:	f007 1cff 	and.w	ip, r7, #16711935	; 0xff00ff
 8014214:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 8014216:	fb00 660c 	mla	r6, r0, ip, r6
 801421a:	f007 1cff 	and.w	ip, r7, #16711935	; 0xff00ff
 801421e:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 8014220:	fb0b 660c 	mla	r6, fp, ip, r6
 8014224:	f407 4c7f 	and.w	ip, r7, #65280	; 0xff00
 8014228:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801422c:	fb09 f90c 	mul.w	r9, r9, ip
 8014230:	fb02 9303 	mla	r3, r2, r3, r9
 8014234:	9a08      	ldr	r2, [sp, #32]
 8014236:	f402 4e7f 	and.w	lr, r2, #65280	; 0xff00
 801423a:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801423c:	fb00 330e 	mla	r3, r0, lr, r3
 8014240:	f402 407f 	and.w	r0, r2, #65280	; 0xff00
 8014244:	fb0b 3b00 	mla	fp, fp, r0, r3
 8014248:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801424a:	881b      	ldrh	r3, [r3, #0]
 801424c:	43c9      	mvns	r1, r1
 801424e:	1218      	asrs	r0, r3, #8
 8014250:	b2c9      	uxtb	r1, r1
 8014252:	10da      	asrs	r2, r3, #3
 8014254:	0a36      	lsrs	r6, r6, #8
 8014256:	ea4f 2b1b 	mov.w	fp, fp, lsr #8
 801425a:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801425e:	00db      	lsls	r3, r3, #3
 8014260:	4348      	muls	r0, r1
 8014262:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8014266:	f40b 4b7f 	and.w	fp, fp, #65280	; 0xff00
 801426a:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801426e:	b2db      	uxtb	r3, r3
 8014270:	434b      	muls	r3, r1
 8014272:	ea46 060b 	orr.w	r6, r6, fp
 8014276:	434a      	muls	r2, r1
 8014278:	1c41      	adds	r1, r0, #1
 801427a:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 801427e:	0c30      	lsrs	r0, r6, #16
 8014280:	eb00 2011 	add.w	r0, r0, r1, lsr #8
 8014284:	494e      	ldr	r1, [pc, #312]	; (80143c0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x478>)
 8014286:	ea01 2000 	and.w	r0, r1, r0, lsl #8
 801428a:	1c59      	adds	r1, r3, #1
 801428c:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 8014290:	b2f3      	uxtb	r3, r6
 8014292:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 8014296:	1c51      	adds	r1, r2, #1
 8014298:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801429c:	f3c6 2607 	ubfx	r6, r6, #8, #8
 80142a0:	eb06 2612 	add.w	r6, r6, r2, lsr #8
 80142a4:	00f6      	lsls	r6, r6, #3
 80142a6:	ea40 03d3 	orr.w	r3, r0, r3, lsr #3
 80142aa:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 80142ae:	431e      	orrs	r6, r3
 80142b0:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80142b2:	801e      	strh	r6, [r3, #0]
 80142b4:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80142b6:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 80142b8:	3302      	adds	r3, #2
 80142ba:	9310      	str	r3, [sp, #64]	; 0x40
 80142bc:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80142be:	4413      	add	r3, r2
 80142c0:	9329      	str	r3, [sp, #164]	; 0xa4
 80142c2:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 80142c4:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80142c6:	4413      	add	r3, r2
 80142c8:	932a      	str	r3, [sp, #168]	; 0xa8
 80142ca:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 80142cc:	3b01      	subs	r3, #1
 80142ce:	9313      	str	r3, [sp, #76]	; 0x4c
 80142d0:	e6b7      	b.n	8014042 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfa>
 80142d2:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80142d4:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 80142d6:	4413      	add	r3, r2
 80142d8:	9329      	str	r3, [sp, #164]	; 0xa4
 80142da:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 80142dc:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80142de:	4413      	add	r3, r2
 80142e0:	932a      	str	r3, [sp, #168]	; 0xa8
 80142e2:	9b07      	ldr	r3, [sp, #28]
 80142e4:	3b01      	subs	r3, #1
 80142e6:	9307      	str	r3, [sp, #28]
 80142e8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80142ea:	3302      	adds	r3, #2
 80142ec:	930a      	str	r3, [sp, #40]	; 0x28
 80142ee:	e65f      	b.n	8013fb0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x68>
 80142f0:	f47f ae71 	bne.w	8013fd6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x8e>
 80142f4:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80142f6:	2b00      	cmp	r3, #0
 80142f8:	f340 81a7 	ble.w	801464a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x702>
 80142fc:	ee3a aa2b 	vadd.f32	s20, s20, s23
 8014300:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8014304:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 8014308:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801430a:	ee79 9a8b 	vadd.f32	s19, s19, s22
 801430e:	ee39 9a2a 	vadd.f32	s18, s18, s21
 8014312:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8014316:	eef0 6a48 	vmov.f32	s13, s16
 801431a:	ee69 7a27 	vmul.f32	s15, s18, s15
 801431e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8014322:	ee37 8a48 	vsub.f32	s16, s14, s16
 8014326:	edcd 6a29 	vstr	s13, [sp, #164]	; 0xa4
 801432a:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 801432e:	eef0 6a68 	vmov.f32	s13, s17
 8014332:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8014336:	ee18 2a10 	vmov	r2, s16
 801433a:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 801433e:	fb92 f3f3 	sdiv	r3, r2, r3
 8014342:	ee18 2a90 	vmov	r2, s17
 8014346:	932b      	str	r3, [sp, #172]	; 0xac
 8014348:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801434a:	fb92 f3f3 	sdiv	r3, r2, r3
 801434e:	932c      	str	r3, [sp, #176]	; 0xb0
 8014350:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8014352:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8014354:	3b01      	subs	r3, #1
 8014356:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801435a:	9312      	str	r3, [sp, #72]	; 0x48
 801435c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801435e:	edcd 6a2a 	vstr	s13, [sp, #168]	; 0xa8
 8014362:	bf08      	it	eq
 8014364:	4613      	moveq	r3, r2
 8014366:	9307      	str	r3, [sp, #28]
 8014368:	eef0 8a67 	vmov.f32	s17, s15
 801436c:	eeb0 8a47 	vmov.f32	s16, s14
 8014370:	e617      	b.n	8013fa2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x5a>
 8014372:	b158      	cbz	r0, 801438c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x444>
 8014374:	5d32      	ldrb	r2, [r6, r4]
 8014376:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 801437a:	9208      	str	r2, [sp, #32]
 801437c:	ea4f 6a12 	mov.w	sl, r2, lsr #24
 8014380:	26ff      	movs	r6, #255	; 0xff
 8014382:	46b0      	mov	r8, r6
 8014384:	e69a      	b.n	80140bc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x174>
 8014386:	26ff      	movs	r6, #255	; 0xff
 8014388:	46b2      	mov	sl, r6
 801438a:	e697      	b.n	80140bc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x174>
 801438c:	26ff      	movs	r6, #255	; 0xff
 801438e:	46b2      	mov	sl, r6
 8014390:	e7f7      	b.n	8014382 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x43a>
 8014392:	1c57      	adds	r7, r2, #1
 8014394:	d18e      	bne.n	80142b4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x36c>
 8014396:	4294      	cmp	r4, r2
 8014398:	dd8c      	ble.n	80142b4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x36c>
 801439a:	1c5e      	adds	r6, r3, #1
 801439c:	db8a      	blt.n	80142b4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x36c>
 801439e:	9e0f      	ldr	r6, [sp, #60]	; 0x3c
 80143a0:	429e      	cmp	r6, r3
 80143a2:	dd87      	ble.n	80142b4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x36c>
 80143a4:	e9cd 1004 	strd	r1, r0, [sp, #16]
 80143a8:	e9cd 2302 	strd	r2, r3, [sp, #8]
 80143ac:	e9cd 4600 	strd	r4, r6, [sp]
 80143b0:	462b      	mov	r3, r5
 80143b2:	e9dd 1210 	ldrd	r1, r2, [sp, #64]	; 0x40
 80143b6:	9815      	ldr	r0, [sp, #84]	; 0x54
 80143b8:	f7ff fc6c 	bl	8013c94 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>
 80143bc:	e77a      	b.n	80142b4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x36c>
 80143be:	bf00      	nop
 80143c0:	fffff800 	.word	0xfffff800
 80143c4:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80143c6:	9929      	ldr	r1, [sp, #164]	; 0xa4
 80143c8:	f3c3 3203 	ubfx	r2, r3, #12, #4
 80143cc:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80143ce:	1409      	asrs	r1, r1, #16
 80143d0:	f3c3 3003 	ubfx	r0, r3, #12, #4
 80143d4:	141b      	asrs	r3, r3, #16
 80143d6:	fb04 1303 	mla	r3, r4, r3, r1
 80143da:	9911      	ldr	r1, [sp, #68]	; 0x44
 80143dc:	18ce      	adds	r6, r1, r3
 80143de:	5ccb      	ldrb	r3, [r1, r3]
 80143e0:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 80143e4:	0e1f      	lsrs	r7, r3, #24
 80143e6:	2a00      	cmp	r2, #0
 80143e8:	f000 811f 	beq.w	801462a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6e2>
 80143ec:	7871      	ldrb	r1, [r6, #1]
 80143ee:	f855 1021 	ldr.w	r1, [r5, r1, lsl #2]
 80143f2:	910d      	str	r1, [sp, #52]	; 0x34
 80143f4:	ea4f 6e11 	mov.w	lr, r1, lsr #24
 80143f8:	2800      	cmp	r0, #0
 80143fa:	f000 8120 	beq.w	801463e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6f6>
 80143fe:	1931      	adds	r1, r6, r4
 8014400:	5d36      	ldrb	r6, [r6, r4]
 8014402:	7849      	ldrb	r1, [r1, #1]
 8014404:	f855 6026 	ldr.w	r6, [r5, r6, lsl #2]
 8014408:	f855 1021 	ldr.w	r1, [r5, r1, lsl #2]
 801440c:	9609      	str	r6, [sp, #36]	; 0x24
 801440e:	ea4f 6916 	mov.w	r9, r6, lsr #24
 8014412:	910e      	str	r1, [sp, #56]	; 0x38
 8014414:	0e0e      	lsrs	r6, r1, #24
 8014416:	b292      	uxth	r2, r2
 8014418:	b280      	uxth	r0, r0
 801441a:	fb02 fa00 	mul.w	sl, r2, r0
 801441e:	ebca 1000 	rsb	r0, sl, r0, lsl #4
 8014422:	0112      	lsls	r2, r2, #4
 8014424:	eba2 080a 	sub.w	r8, r2, sl
 8014428:	b280      	uxth	r0, r0
 801442a:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 801442e:	fa1f f888 	uxth.w	r8, r8
 8014432:	1a09      	subs	r1, r1, r0
 8014434:	b289      	uxth	r1, r1
 8014436:	fb08 f20e 	mul.w	r2, r8, lr
 801443a:	fb01 2207 	mla	r2, r1, r7, r2
 801443e:	fb00 2209 	mla	r2, r0, r9, r2
 8014442:	fb0a 2206 	mla	r2, sl, r6, r2
 8014446:	f3c2 2207 	ubfx	r2, r2, #8, #8
 801444a:	9213      	str	r2, [sp, #76]	; 0x4c
 801444c:	2a00      	cmp	r2, #0
 801444e:	f000 80de 	beq.w	801460e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6c6>
 8014452:	2fff      	cmp	r7, #255	; 0xff
 8014454:	d01a      	beq.n	801448c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x544>
 8014456:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 801445a:	fb07 fc0c 	mul.w	ip, r7, ip
 801445e:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8014462:	435f      	muls	r7, r3
 8014464:	ea4f 231c 	mov.w	r3, ip, lsr #8
 8014468:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801446c:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8014470:	4463      	add	r3, ip
 8014472:	f507 7c80 	add.w	ip, r7, #256	; 0x100
 8014476:	eb0c 2c17 	add.w	ip, ip, r7, lsr #8
 801447a:	0a1b      	lsrs	r3, r3, #8
 801447c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8014480:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8014484:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8014488:	ea43 030c 	orr.w	r3, r3, ip
 801448c:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 8014490:	d01f      	beq.n	80144d2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x58a>
 8014492:	9f0d      	ldr	r7, [sp, #52]	; 0x34
 8014494:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8014496:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 801449a:	fb0e f707 	mul.w	r7, lr, r7
 801449e:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 80144a2:	fb0e fe0c 	mul.w	lr, lr, ip
 80144a6:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80144aa:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80144ae:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 80144b2:	44bc      	add	ip, r7
 80144b4:	f50e 7780 	add.w	r7, lr, #256	; 0x100
 80144b8:	eb07 2e1e 	add.w	lr, r7, lr, lsr #8
 80144bc:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80144c0:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80144c4:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80144c8:	f40e 4e7f 	and.w	lr, lr, #65280	; 0xff00
 80144cc:	ea4c 020e 	orr.w	r2, ip, lr
 80144d0:	920d      	str	r2, [sp, #52]	; 0x34
 80144d2:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 80144d6:	d01e      	beq.n	8014516 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x5ce>
 80144d8:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80144da:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
 80144de:	fb09 fe0e 	mul.w	lr, r9, lr
 80144e2:	f402 477f 	and.w	r7, r2, #65280	; 0xff00
 80144e6:	fb09 f907 	mul.w	r9, r9, r7
 80144ea:	ea4f 2c1e 	mov.w	ip, lr, lsr #8
 80144ee:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80144f2:	f10e 1e01 	add.w	lr, lr, #65537	; 0x10001
 80144f6:	f509 7780 	add.w	r7, r9, #256	; 0x100
 80144fa:	44f4      	add	ip, lr
 80144fc:	eb07 2919 	add.w	r9, r7, r9, lsr #8
 8014500:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8014504:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8014508:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801450c:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 8014510:	ea4c 0209 	orr.w	r2, ip, r9
 8014514:	9209      	str	r2, [sp, #36]	; 0x24
 8014516:	2eff      	cmp	r6, #255	; 0xff
 8014518:	d01c      	beq.n	8014554 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x60c>
 801451a:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801451c:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
 8014520:	fb06 fe0e 	mul.w	lr, r6, lr
 8014524:	f402 477f 	and.w	r7, r2, #65280	; 0xff00
 8014528:	437e      	muls	r6, r7
 801452a:	ea4f 2c1e 	mov.w	ip, lr, lsr #8
 801452e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8014532:	f10e 1e01 	add.w	lr, lr, #65537	; 0x10001
 8014536:	f506 7780 	add.w	r7, r6, #256	; 0x100
 801453a:	44f4      	add	ip, lr
 801453c:	eb07 2616 	add.w	r6, r7, r6, lsr #8
 8014540:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8014544:	0a36      	lsrs	r6, r6, #8
 8014546:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801454a:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 801454e:	ea4c 0206 	orr.w	r2, ip, r6
 8014552:	920e      	str	r2, [sp, #56]	; 0x38
 8014554:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8014556:	f002 16ff 	and.w	r6, r2, #16711935	; 0xff00ff
 801455a:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801455c:	f003 17ff 	and.w	r7, r3, #16711935	; 0xff00ff
 8014560:	fb08 f606 	mul.w	r6, r8, r6
 8014564:	fb01 6607 	mla	r6, r1, r7, r6
 8014568:	f002 17ff 	and.w	r7, r2, #16711935	; 0xff00ff
 801456c:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801456e:	fb00 6607 	mla	r6, r0, r7, r6
 8014572:	f002 17ff 	and.w	r7, r2, #16711935	; 0xff00ff
 8014576:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8014578:	fb0a 6607 	mla	r6, sl, r7, r6
 801457c:	f402 477f 	and.w	r7, r2, #65280	; 0xff00
 8014580:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8014582:	fb08 f807 	mul.w	r8, r8, r7
 8014586:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 801458a:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801458e:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8014590:	fb01 8303 	mla	r3, r1, r3, r8
 8014594:	fb00 330c 	mla	r3, r0, ip, r3
 8014598:	f402 4e7f 	and.w	lr, r2, #65280	; 0xff00
 801459c:	fb0a 3e0e 	mla	lr, sl, lr, r3
 80145a0:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80145a2:	f8bb 3000 	ldrh.w	r3, [fp]
 80145a6:	43d2      	mvns	r2, r2
 80145a8:	1218      	asrs	r0, r3, #8
 80145aa:	b2d2      	uxtb	r2, r2
 80145ac:	0a36      	lsrs	r6, r6, #8
 80145ae:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80145b2:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 80145b6:	4350      	muls	r0, r2
 80145b8:	10d9      	asrs	r1, r3, #3
 80145ba:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 80145be:	f40e 4e7f 	and.w	lr, lr, #65280	; 0xff00
 80145c2:	00db      	lsls	r3, r3, #3
 80145c4:	ea46 060e 	orr.w	r6, r6, lr
 80145c8:	1c47      	adds	r7, r0, #1
 80145ca:	b2db      	uxtb	r3, r3
 80145cc:	4353      	muls	r3, r2
 80145ce:	eb07 2010 	add.w	r0, r7, r0, lsr #8
 80145d2:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 80145d6:	0c37      	lsrs	r7, r6, #16
 80145d8:	4351      	muls	r1, r2
 80145da:	eb07 2010 	add.w	r0, r7, r0, lsr #8
 80145de:	4a1d      	ldr	r2, [pc, #116]	; (8014654 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x70c>)
 80145e0:	1c5f      	adds	r7, r3, #1
 80145e2:	eb07 2313 	add.w	r3, r7, r3, lsr #8
 80145e6:	b2f7      	uxtb	r7, r6
 80145e8:	eb07 2313 	add.w	r3, r7, r3, lsr #8
 80145ec:	ea02 2000 	and.w	r0, r2, r0, lsl #8
 80145f0:	ea40 00d3 	orr.w	r0, r0, r3, lsr #3
 80145f4:	1c4b      	adds	r3, r1, #1
 80145f6:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 80145fa:	f3c6 2607 	ubfx	r6, r6, #8, #8
 80145fe:	eb06 2611 	add.w	r6, r6, r1, lsr #8
 8014602:	00f6      	lsls	r6, r6, #3
 8014604:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8014608:	4330      	orrs	r0, r6
 801460a:	f8ab 0000 	strh.w	r0, [fp]
 801460e:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8014610:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 8014612:	4413      	add	r3, r2
 8014614:	9329      	str	r3, [sp, #164]	; 0xa4
 8014616:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 8014618:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801461a:	4413      	add	r3, r2
 801461c:	932a      	str	r3, [sp, #168]	; 0xa8
 801461e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8014620:	3b01      	subs	r3, #1
 8014622:	f10b 0b02 	add.w	fp, fp, #2
 8014626:	9310      	str	r3, [sp, #64]	; 0x40
 8014628:	e4ee      	b.n	8014008 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xc0>
 801462a:	b158      	cbz	r0, 8014644 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6fc>
 801462c:	5d31      	ldrb	r1, [r6, r4]
 801462e:	f855 1021 	ldr.w	r1, [r5, r1, lsl #2]
 8014632:	9109      	str	r1, [sp, #36]	; 0x24
 8014634:	ea4f 6911 	mov.w	r9, r1, lsr #24
 8014638:	26ff      	movs	r6, #255	; 0xff
 801463a:	46b6      	mov	lr, r6
 801463c:	e6eb      	b.n	8014416 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4ce>
 801463e:	26ff      	movs	r6, #255	; 0xff
 8014640:	46b1      	mov	r9, r6
 8014642:	e6e8      	b.n	8014416 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4ce>
 8014644:	26ff      	movs	r6, #255	; 0xff
 8014646:	46b1      	mov	r9, r6
 8014648:	e7f7      	b.n	801463a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6f2>
 801464a:	b017      	add	sp, #92	; 0x5c
 801464c:	ecbd 8b08 	vpop	{d8-d11}
 8014650:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8014654:	fffff800 	.word	0xfffff800

08014658 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>:
 8014658:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801465c:	b087      	sub	sp, #28
 801465e:	e9dd e012 	ldrd	lr, r0, [sp, #72]	; 0x48
 8014662:	f9bd 4040 	ldrsh.w	r4, [sp, #64]	; 0x40
 8014666:	9105      	str	r1, [sp, #20]
 8014668:	fb00 e604 	mla	r6, r0, r4, lr
 801466c:	f89d 1054 	ldrb.w	r1, [sp, #84]	; 0x54
 8014670:	9102      	str	r1, [sp, #8]
 8014672:	eb02 0146 	add.w	r1, r2, r6, lsl #1
 8014676:	9103      	str	r1, [sp, #12]
 8014678:	9905      	ldr	r1, [sp, #20]
 801467a:	f9bd 7044 	ldrsh.w	r7, [sp, #68]	; 0x44
 801467e:	f89d 5050 	ldrb.w	r5, [sp, #80]	; 0x50
 8014682:	8809      	ldrh	r1, [r1, #0]
 8014684:	2800      	cmp	r0, #0
 8014686:	eb03 0a06 	add.w	sl, r3, r6
 801468a:	f2c0 80ca 	blt.w	8014822 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1ca>
 801468e:	4287      	cmp	r7, r0
 8014690:	f340 80c7 	ble.w	8014822 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1ca>
 8014694:	f1be 0f00 	cmp.w	lr, #0
 8014698:	f2c0 80bf 	blt.w	801481a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1c2>
 801469c:	4574      	cmp	r4, lr
 801469e:	f340 80bc 	ble.w	801481a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1c2>
 80146a2:	f813 c006 	ldrb.w	ip, [r3, r6]
 80146a6:	f832 9016 	ldrh.w	r9, [r2, r6, lsl #1]
 80146aa:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 80146ae:	d01c      	beq.n	80146ea <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x92>
 80146b0:	f429 66fc 	bic.w	r6, r9, #2016	; 0x7e0
 80146b4:	ea4f 02ec 	mov.w	r2, ip, asr #3
 80146b8:	4372      	muls	r2, r6
 80146ba:	f64f 081f 	movw	r8, #63519	; 0xf81f
 80146be:	ea08 1352 	and.w	r3, r8, r2, lsr #5
 80146c2:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 80146c6:	f602 0201 	addw	r2, r2, #2049	; 0x801
 80146ca:	fb0c f609 	mul.w	r6, ip, r9
 80146ce:	eb03 0902 	add.w	r9, r3, r2
 80146d2:	ea08 1959 	and.w	r9, r8, r9, lsr #5
 80146d6:	f106 0820 	add.w	r8, r6, #32
 80146da:	eb08 2816 	add.w	r8, r8, r6, lsr #8
 80146de:	ea4f 2818 	mov.w	r8, r8, lsr #8
 80146e2:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 80146e6:	ea49 0908 	orr.w	r9, r9, r8
 80146ea:	fa1f f989 	uxth.w	r9, r9
 80146ee:	f11e 0301 	adds.w	r3, lr, #1
 80146f2:	f100 809b 	bmi.w	801482c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1d4>
 80146f6:	429c      	cmp	r4, r3
 80146f8:	f340 8098 	ble.w	801482c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1d4>
 80146fc:	2d00      	cmp	r5, #0
 80146fe:	f000 8095 	beq.w	801482c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1d4>
 8014702:	f89a 6001 	ldrb.w	r6, [sl, #1]
 8014706:	9b03      	ldr	r3, [sp, #12]
 8014708:	2eff      	cmp	r6, #255	; 0xff
 801470a:	885b      	ldrh	r3, [r3, #2]
 801470c:	d01b      	beq.n	8014746 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xee>
 801470e:	f423 62fc 	bic.w	r2, r3, #2016	; 0x7e0
 8014712:	ea4f 08e6 	mov.w	r8, r6, asr #3
 8014716:	fb08 f202 	mul.w	r2, r8, r2
 801471a:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801471e:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 8014722:	fb06 f803 	mul.w	r8, r6, r3
 8014726:	ea0b 1352 	and.w	r3, fp, r2, lsr #5
 801472a:	f602 0201 	addw	r2, r2, #2049	; 0x801
 801472e:	441a      	add	r2, r3
 8014730:	f108 0320 	add.w	r3, r8, #32
 8014734:	eb03 2318 	add.w	r3, r3, r8, lsr #8
 8014738:	0a1b      	lsrs	r3, r3, #8
 801473a:	ea0b 1b52 	and.w	fp, fp, r2, lsr #5
 801473e:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8014742:	ea4b 0303 	orr.w	r3, fp, r3
 8014746:	b29b      	uxth	r3, r3
 8014748:	9301      	str	r3, [sp, #4]
 801474a:	3001      	adds	r0, #1
 801474c:	d474      	bmi.n	8014838 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1e0>
 801474e:	4287      	cmp	r7, r0
 8014750:	dd72      	ble.n	8014838 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1e0>
 8014752:	9a02      	ldr	r2, [sp, #8]
 8014754:	2a00      	cmp	r2, #0
 8014756:	f000 8121 	beq.w	801499c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x344>
 801475a:	f1be 0f00 	cmp.w	lr, #0
 801475e:	db68      	blt.n	8014832 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1da>
 8014760:	4574      	cmp	r4, lr
 8014762:	dd66      	ble.n	8014832 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1da>
 8014764:	f81a 7004 	ldrb.w	r7, [sl, r4]
 8014768:	9a03      	ldr	r2, [sp, #12]
 801476a:	2fff      	cmp	r7, #255	; 0xff
 801476c:	f832 0014 	ldrh.w	r0, [r2, r4, lsl #1]
 8014770:	d01c      	beq.n	80147ac <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x154>
 8014772:	f420 62fc 	bic.w	r2, r0, #2016	; 0x7e0
 8014776:	ea4f 08e7 	mov.w	r8, r7, asr #3
 801477a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801477e:	fb07 fb00 	mul.w	fp, r7, r0
 8014782:	fb08 f802 	mul.w	r8, r8, r2
 8014786:	f64f 001f 	movw	r0, #63519	; 0xf81f
 801478a:	ea00 1258 	and.w	r2, r0, r8, lsr #5
 801478e:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8014792:	4490      	add	r8, r2
 8014794:	f10b 0220 	add.w	r2, fp, #32
 8014798:	eb02 2b1b 	add.w	fp, r2, fp, lsr #8
 801479c:	ea4f 2b1b 	mov.w	fp, fp, lsr #8
 80147a0:	ea00 1058 	and.w	r0, r0, r8, lsr #5
 80147a4:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 80147a8:	ea40 000b 	orr.w	r0, r0, fp
 80147ac:	b280      	uxth	r0, r0
 80147ae:	f11e 0e01 	adds.w	lr, lr, #1
 80147b2:	d446      	bmi.n	8014842 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1ea>
 80147b4:	4574      	cmp	r4, lr
 80147b6:	dd44      	ble.n	8014842 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1ea>
 80147b8:	2d00      	cmp	r5, #0
 80147ba:	d045      	beq.n	8014848 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1f0>
 80147bc:	1c62      	adds	r2, r4, #1
 80147be:	9b03      	ldr	r3, [sp, #12]
 80147c0:	f81a 4002 	ldrb.w	r4, [sl, r2]
 80147c4:	f833 2012 	ldrh.w	r2, [r3, r2, lsl #1]
 80147c8:	2cff      	cmp	r4, #255	; 0xff
 80147ca:	d01c      	beq.n	8014806 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1ae>
 80147cc:	f422 6efc 	bic.w	lr, r2, #2016	; 0x7e0
 80147d0:	ea4f 08e4 	mov.w	r8, r4, asr #3
 80147d4:	fb08 fe0e 	mul.w	lr, r8, lr
 80147d8:	f64f 0a1f 	movw	sl, #63519	; 0xf81f
 80147dc:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80147e0:	fb04 f802 	mul.w	r8, r4, r2
 80147e4:	ea0a 125e 	and.w	r2, sl, lr, lsr #5
 80147e8:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 80147ec:	4472      	add	r2, lr
 80147ee:	ea0a 1252 	and.w	r2, sl, r2, lsr #5
 80147f2:	f108 0a20 	add.w	sl, r8, #32
 80147f6:	eb0a 2a18 	add.w	sl, sl, r8, lsr #8
 80147fa:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80147fe:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8014802:	ea42 020a 	orr.w	r2, r2, sl
 8014806:	b292      	uxth	r2, r2
 8014808:	2d0f      	cmp	r5, #15
 801480a:	d91f      	bls.n	801484c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1f4>
 801480c:	4b67      	ldr	r3, [pc, #412]	; (80149ac <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x354>)
 801480e:	4a68      	ldr	r2, [pc, #416]	; (80149b0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x358>)
 8014810:	4868      	ldr	r0, [pc, #416]	; (80149b4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x35c>)
 8014812:	f240 210d 	movw	r1, #525	; 0x20d
 8014816:	f004 f9e9 	bl	8018bec <__assert_func>
 801481a:	4689      	mov	r9, r1
 801481c:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8014820:	e765      	b.n	80146ee <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x96>
 8014822:	26ff      	movs	r6, #255	; 0xff
 8014824:	9101      	str	r1, [sp, #4]
 8014826:	4689      	mov	r9, r1
 8014828:	46b4      	mov	ip, r6
 801482a:	e78e      	b.n	801474a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xf2>
 801482c:	9101      	str	r1, [sp, #4]
 801482e:	26ff      	movs	r6, #255	; 0xff
 8014830:	e78b      	b.n	801474a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xf2>
 8014832:	4608      	mov	r0, r1
 8014834:	27ff      	movs	r7, #255	; 0xff
 8014836:	e7ba      	b.n	80147ae <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x156>
 8014838:	24ff      	movs	r4, #255	; 0xff
 801483a:	460a      	mov	r2, r1
 801483c:	4608      	mov	r0, r1
 801483e:	4627      	mov	r7, r4
 8014840:	e7e2      	b.n	8014808 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1b0>
 8014842:	460a      	mov	r2, r1
 8014844:	24ff      	movs	r4, #255	; 0xff
 8014846:	e7df      	b.n	8014808 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1b0>
 8014848:	460a      	mov	r2, r1
 801484a:	24ff      	movs	r4, #255	; 0xff
 801484c:	9b02      	ldr	r3, [sp, #8]
 801484e:	2b0f      	cmp	r3, #15
 8014850:	d8dc      	bhi.n	801480c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1b4>
 8014852:	f8bd e008 	ldrh.w	lr, [sp, #8]
 8014856:	fa1f f885 	uxth.w	r8, r5
 801485a:	fb08 fa0e 	mul.w	sl, r8, lr
 801485e:	ea4f 1308 	mov.w	r3, r8, lsl #4
 8014862:	ebca 1e0e 	rsb	lr, sl, lr, lsl #4
 8014866:	9303      	str	r3, [sp, #12]
 8014868:	fa1f f38e 	uxth.w	r3, lr
 801486c:	9304      	str	r3, [sp, #16]
 801486e:	ea4f 4809 	mov.w	r8, r9, lsl #16
 8014872:	9b02      	ldr	r3, [sp, #8]
 8014874:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8014878:	f008 68fc 	and.w	r8, r8, #132120576	; 0x7e00000
 801487c:	fb15 fe03 	smulbb	lr, r5, r3
 8014880:	ea48 0809 	orr.w	r8, r8, r9
 8014884:	f1c3 0910 	rsb	r9, r3, #16
 8014888:	9b01      	ldr	r3, [sp, #4]
 801488a:	ea4f 4b03 	mov.w	fp, r3, lsl #16
 801488e:	ea4f 0eee 	mov.w	lr, lr, asr #3
 8014892:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8014896:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801489a:	eba9 0905 	sub.w	r9, r9, r5
 801489e:	ea4b 0303 	orr.w	r3, fp, r3
 80148a2:	ebce 0545 	rsb	r5, lr, r5, lsl #1
 80148a6:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 80148aa:	eb0e 0949 	add.w	r9, lr, r9, lsl #1
 80148ae:	436b      	muls	r3, r5
 80148b0:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 80148b4:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80148b8:	ea4b 0202 	orr.w	r2, fp, r2
 80148bc:	fb09 3308 	mla	r3, r9, r8, r3
 80148c0:	fb0e 3302 	mla	r3, lr, r2, r3
 80148c4:	0402      	lsls	r2, r0, #16
 80148c6:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 80148ca:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 80148ce:	4310      	orrs	r0, r2
 80148d0:	9a02      	ldr	r2, [sp, #8]
 80148d2:	ebce 0e42 	rsb	lr, lr, r2, lsl #1
 80148d6:	fb0e 3e00 	mla	lr, lr, r0, r3
 80148da:	9803      	ldr	r0, [sp, #12]
 80148dc:	f89d 2058 	ldrb.w	r2, [sp, #88]	; 0x58
 80148e0:	f5c0 7580 	rsb	r5, r0, #256	; 0x100
 80148e4:	9804      	ldr	r0, [sp, #16]
 80148e6:	1a2d      	subs	r5, r5, r0
 80148e8:	9803      	ldr	r0, [sp, #12]
 80148ea:	eba0 000a 	sub.w	r0, r0, sl
 80148ee:	b280      	uxth	r0, r0
 80148f0:	b2ad      	uxth	r5, r5
 80148f2:	4346      	muls	r6, r0
 80148f4:	9804      	ldr	r0, [sp, #16]
 80148f6:	fb0c 6605 	mla	r6, ip, r5, r6
 80148fa:	fb00 6707 	mla	r7, r0, r7, r6
 80148fe:	fb0a 7404 	mla	r4, sl, r4, r7
 8014902:	b292      	uxth	r2, r2
 8014904:	f3c4 2407 	ubfx	r4, r4, #8, #8
 8014908:	4354      	muls	r4, r2
 801490a:	ea4f 535e 	mov.w	r3, lr, lsr #21
 801490e:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8014912:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8014916:	f104 0a01 	add.w	sl, r4, #1
 801491a:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801491e:	ea43 0e0e 	orr.w	lr, r3, lr
 8014922:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 8014926:	fa1f f38e 	uxth.w	r3, lr
 801492a:	1208      	asrs	r0, r1, #8
 801492c:	ea6f 2414 	mvn.w	r4, r4, lsr #8
 8014930:	b2e4      	uxtb	r4, r4
 8014932:	121d      	asrs	r5, r3, #8
 8014934:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8014938:	fb10 f004 	smulbb	r0, r0, r4
 801493c:	10ce      	asrs	r6, r1, #3
 801493e:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8014942:	00c9      	lsls	r1, r1, #3
 8014944:	fb05 0502 	mla	r5, r5, r2, r0
 8014948:	b2c9      	uxtb	r1, r1
 801494a:	10d8      	asrs	r0, r3, #3
 801494c:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8014950:	00db      	lsls	r3, r3, #3
 8014952:	fb16 f604 	smulbb	r6, r6, r4
 8014956:	b2db      	uxtb	r3, r3
 8014958:	fb11 f404 	smulbb	r4, r1, r4
 801495c:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8014960:	fb00 6002 	mla	r0, r0, r2, r6
 8014964:	fb03 4202 	mla	r2, r3, r2, r4
 8014968:	b2ad      	uxth	r5, r5
 801496a:	b292      	uxth	r2, r2
 801496c:	1c6b      	adds	r3, r5, #1
 801496e:	1c51      	adds	r1, r2, #1
 8014970:	eb03 2315 	add.w	r3, r3, r5, lsr #8
 8014974:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8014978:	b280      	uxth	r0, r0
 801497a:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801497e:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 8014982:	4313      	orrs	r3, r2
 8014984:	1c42      	adds	r2, r0, #1
 8014986:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801498a:	0940      	lsrs	r0, r0, #5
 801498c:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8014990:	9a05      	ldr	r2, [sp, #20]
 8014992:	4303      	orrs	r3, r0
 8014994:	8013      	strh	r3, [r2, #0]
 8014996:	b007      	add	sp, #28
 8014998:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801499c:	2d0f      	cmp	r5, #15
 801499e:	f63f af35 	bhi.w	801480c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1b4>
 80149a2:	24ff      	movs	r4, #255	; 0xff
 80149a4:	460a      	mov	r2, r1
 80149a6:	4608      	mov	r0, r1
 80149a8:	4627      	mov	r7, r4
 80149aa:	e752      	b.n	8014852 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1fa>
 80149ac:	0801c915 	.word	0x0801c915
 80149b0:	0801ce6d 	.word	0x0801ce6d
 80149b4:	0801c99d 	.word	0x0801c99d

080149b8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 80149b8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80149bc:	ed2d 8b08 	vpush	{d8-d11}
 80149c0:	b099      	sub	sp, #100	; 0x64
 80149c2:	eeb0 aa40 	vmov.f32	s20, s0
 80149c6:	9308      	str	r3, [sp, #32]
 80149c8:	f9bd 30cc 	ldrsh.w	r3, [sp, #204]	; 0xcc
 80149cc:	9e2f      	ldr	r6, [sp, #188]	; 0xbc
 80149ce:	930b      	str	r3, [sp, #44]	; 0x2c
 80149d0:	f89d 30d4 	ldrb.w	r3, [sp, #212]	; 0xd4
 80149d4:	9314      	str	r3, [sp, #80]	; 0x50
 80149d6:	9113      	str	r1, [sp, #76]	; 0x4c
 80149d8:	e9dd 1330 	ldrd	r1, r3, [sp, #192]	; 0xc0
 80149dc:	9017      	str	r0, [sp, #92]	; 0x5c
 80149de:	6870      	ldr	r0, [r6, #4]
 80149e0:	9216      	str	r2, [sp, #88]	; 0x58
 80149e2:	fb00 1303 	mla	r3, r0, r3, r1
 80149e6:	6831      	ldr	r1, [r6, #0]
 80149e8:	9a34      	ldr	r2, [sp, #208]	; 0xd0
 80149ea:	f9bd 50c8 	ldrsh.w	r5, [sp, #200]	; 0xc8
 80149ee:	eb01 0343 	add.w	r3, r1, r3, lsl #1
 80149f2:	9309      	str	r3, [sp, #36]	; 0x24
 80149f4:	6813      	ldr	r3, [r2, #0]
 80149f6:	930c      	str	r3, [sp, #48]	; 0x30
 80149f8:	6853      	ldr	r3, [r2, #4]
 80149fa:	930d      	str	r3, [sp, #52]	; 0x34
 80149fc:	006b      	lsls	r3, r5, #1
 80149fe:	9312      	str	r3, [sp, #72]	; 0x48
 8014a00:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 8014a04:	930a      	str	r3, [sp, #40]	; 0x28
 8014a06:	eef0 9a60 	vmov.f32	s19, s1
 8014a0a:	eeb0 9a41 	vmov.f32	s18, s2
 8014a0e:	eeb0 8a62 	vmov.f32	s16, s5
 8014a12:	eef0 8a43 	vmov.f32	s17, s6
 8014a16:	eef0 ba44 	vmov.f32	s23, s8
 8014a1a:	eeb0 ba64 	vmov.f32	s22, s9
 8014a1e:	eef0 aa45 	vmov.f32	s21, s10
 8014a22:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8014a24:	2b00      	cmp	r3, #0
 8014a26:	dc03      	bgt.n	8014a30 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x78>
 8014a28:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8014a2a:	2b00      	cmp	r3, #0
 8014a2c:	f340 83bf 	ble.w	80151ae <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7f6>
 8014a30:	9b08      	ldr	r3, [sp, #32]
 8014a32:	2b00      	cmp	r3, #0
 8014a34:	f340 81cb 	ble.w	8014dce <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x416>
 8014a38:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 8014a3a:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8014a3c:	1412      	asrs	r2, r2, #16
 8014a3e:	ea4f 4323 	mov.w	r3, r3, asr #16
 8014a42:	d42f      	bmi.n	8014aa4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xec>
 8014a44:	1c51      	adds	r1, r2, #1
 8014a46:	428d      	cmp	r5, r1
 8014a48:	dd2f      	ble.n	8014aaa <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf2>
 8014a4a:	2b00      	cmp	r3, #0
 8014a4c:	db2d      	blt.n	8014aaa <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf2>
 8014a4e:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8014a50:	1c59      	adds	r1, r3, #1
 8014a52:	4288      	cmp	r0, r1
 8014a54:	dd29      	ble.n	8014aaa <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf2>
 8014a56:	9b08      	ldr	r3, [sp, #32]
 8014a58:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 8014a5a:	992b      	ldr	r1, [sp, #172]	; 0xac
 8014a5c:	3b01      	subs	r3, #1
 8014a5e:	fb02 1203 	mla	r2, r2, r3, r1
 8014a62:	1412      	asrs	r2, r2, #16
 8014a64:	d42b      	bmi.n	8014abe <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x106>
 8014a66:	3201      	adds	r2, #1
 8014a68:	4295      	cmp	r5, r2
 8014a6a:	dd28      	ble.n	8014abe <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x106>
 8014a6c:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
 8014a6e:	992c      	ldr	r1, [sp, #176]	; 0xb0
 8014a70:	fb02 1303 	mla	r3, r2, r3, r1
 8014a74:	141b      	asrs	r3, r3, #16
 8014a76:	d422      	bmi.n	8014abe <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x106>
 8014a78:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8014a7a:	3301      	adds	r3, #1
 8014a7c:	429a      	cmp	r2, r3
 8014a7e:	dd1e      	ble.n	8014abe <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x106>
 8014a80:	9b08      	ldr	r3, [sp, #32]
 8014a82:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
 8014a86:	9315      	str	r3, [sp, #84]	; 0x54
 8014a88:	f64f 061f 	movw	r6, #63519	; 0xf81f
 8014a8c:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8014a8e:	2b00      	cmp	r3, #0
 8014a90:	f300 8217 	bgt.w	8014ec2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x50a>
 8014a94:	9b08      	ldr	r3, [sp, #32]
 8014a96:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8014a9a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8014a9c:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 8014aa0:	9309      	str	r3, [sp, #36]	; 0x24
 8014aa2:	e196      	b.n	8014dd2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x41a>
 8014aa4:	1c57      	adds	r7, r2, #1
 8014aa6:	f040 8183 	bne.w	8014db0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3f8>
 8014aaa:	42aa      	cmp	r2, r5
 8014aac:	f280 8180 	bge.w	8014db0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3f8>
 8014ab0:	1c5e      	adds	r6, r3, #1
 8014ab2:	f2c0 817d 	blt.w	8014db0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3f8>
 8014ab6:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8014ab8:	4293      	cmp	r3, r2
 8014aba:	f280 8179 	bge.w	8014db0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3f8>
 8014abe:	9b08      	ldr	r3, [sp, #32]
 8014ac0:	9f09      	ldr	r7, [sp, #36]	; 0x24
 8014ac2:	9315      	str	r3, [sp, #84]	; 0x54
 8014ac4:	f64f 061f 	movw	r6, #63519	; 0xf81f
 8014ac8:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8014aca:	2b00      	cmp	r3, #0
 8014acc:	dde2      	ble.n	8014a94 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xdc>
 8014ace:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8014ad0:	1419      	asrs	r1, r3, #16
 8014ad2:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8014ad4:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8014ad8:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8014ada:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 8014ade:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8014ae0:	141b      	asrs	r3, r3, #16
 8014ae2:	f100 81d3 	bmi.w	8014e8c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4d4>
 8014ae6:	1c58      	adds	r0, r3, #1
 8014ae8:	4285      	cmp	r5, r0
 8014aea:	f340 81d1 	ble.w	8014e90 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4d8>
 8014aee:	2900      	cmp	r1, #0
 8014af0:	f2c0 81ce 	blt.w	8014e90 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4d8>
 8014af4:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8014af6:	1c48      	adds	r0, r1, #1
 8014af8:	4284      	cmp	r4, r0
 8014afa:	f340 81c9 	ble.w	8014e90 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4d8>
 8014afe:	fb01 3105 	mla	r1, r1, r5, r3
 8014b02:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8014b04:	fa1f fe82 	uxth.w	lr, r2
 8014b08:	eb03 0a01 	add.w	sl, r3, r1
 8014b0c:	ea4f 100e 	mov.w	r0, lr, lsl #4
 8014b10:	f813 9001 	ldrb.w	r9, [r3, r1]
 8014b14:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8014b18:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 8014b1c:	b29b      	uxth	r3, r3
 8014b1e:	f1bc 0f00 	cmp.w	ip, #0
 8014b22:	f000 8195 	beq.w	8014e50 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x498>
 8014b26:	f81a 4005 	ldrb.w	r4, [sl, r5]
 8014b2a:	940e      	str	r4, [sp, #56]	; 0x38
 8014b2c:	eb0a 0b05 	add.w	fp, sl, r5
 8014b30:	fa1f fa8c 	uxth.w	sl, ip
 8014b34:	fb0a fe0e 	mul.w	lr, sl, lr
 8014b38:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 8014b3c:	fa1f fa8a 	uxth.w	sl, sl
 8014b40:	eba0 000e 	sub.w	r0, r0, lr
 8014b44:	eba3 030a 	sub.w	r3, r3, sl
 8014b48:	b280      	uxth	r0, r0
 8014b4a:	fb08 f000 	mul.w	r0, r8, r0
 8014b4e:	b29b      	uxth	r3, r3
 8014b50:	fb09 0303 	mla	r3, r9, r3, r0
 8014b54:	980e      	ldr	r0, [sp, #56]	; 0x38
 8014b56:	f89b 4001 	ldrb.w	r4, [fp, #1]
 8014b5a:	940f      	str	r4, [sp, #60]	; 0x3c
 8014b5c:	fb0a 3300 	mla	r3, sl, r0, r3
 8014b60:	fb0e 3304 	mla	r3, lr, r4, r3
 8014b64:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8014b68:	2b00      	cmp	r3, #0
 8014b6a:	f000 8114 	beq.w	8014d96 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3de>
 8014b6e:	980c      	ldr	r0, [sp, #48]	; 0x30
 8014b70:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8014b72:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8014b76:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 8014b7a:	f834 1011 	ldrh.w	r1, [r4, r1, lsl #1]
 8014b7e:	f000 816c 	beq.w	8014e5a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4a2>
 8014b82:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 8014b86:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 8014b8a:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8014b8e:	fb09 f101 	mul.w	r1, r9, r1
 8014b92:	fb0a fe0e 	mul.w	lr, sl, lr
 8014b96:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 8014b9a:	f101 0b20 	add.w	fp, r1, #32
 8014b9e:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 8014ba2:	44ce      	add	lr, r9
 8014ba4:	eb0b 2911 	add.w	r9, fp, r1, lsr #8
 8014ba8:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8014bac:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 8014bb0:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8014bb4:	ea4e 0909 	orr.w	r9, lr, r9
 8014bb8:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8014bbc:	8841      	ldrh	r1, [r0, #2]
 8014bbe:	d019      	beq.n	8014bf4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x23c>
 8014bc0:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 8014bc4:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 8014bc8:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8014bcc:	fb0a fe0e 	mul.w	lr, sl, lr
 8014bd0:	fb08 f801 	mul.w	r8, r8, r1
 8014bd4:	f108 0b20 	add.w	fp, r8, #32
 8014bd8:	ea06 115e 	and.w	r1, r6, lr, lsr #5
 8014bdc:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 8014be0:	448e      	add	lr, r1
 8014be2:	eb0b 2118 	add.w	r1, fp, r8, lsr #8
 8014be6:	0a09      	lsrs	r1, r1, #8
 8014be8:	ea06 1a5e 	and.w	sl, r6, lr, lsr #5
 8014bec:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8014bf0:	ea4a 0101 	orr.w	r1, sl, r1
 8014bf4:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 8014bf8:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8014bfc:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8014c00:	ea4e 0909 	orr.w	r9, lr, r9
 8014c04:	ea4f 4e01 	mov.w	lr, r1, lsl #16
 8014c08:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8014c0c:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8014c10:	ea4e 0e01 	orr.w	lr, lr, r1
 8014c14:	f1bc 0f00 	cmp.w	ip, #0
 8014c18:	f000 8121 	beq.w	8014e5e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4a6>
 8014c1c:	9912      	ldr	r1, [sp, #72]	; 0x48
 8014c1e:	eb00 0801 	add.w	r8, r0, r1
 8014c22:	5a41      	ldrh	r1, [r0, r1]
 8014c24:	980e      	ldr	r0, [sp, #56]	; 0x38
 8014c26:	28ff      	cmp	r0, #255	; 0xff
 8014c28:	d019      	beq.n	8014c5e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2a6>
 8014c2a:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8014c2c:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
 8014c30:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8014c34:	fb04 fb01 	mul.w	fp, r4, r1
 8014c38:	ea4f 0ae4 	mov.w	sl, r4, asr #3
 8014c3c:	fb0a fa00 	mul.w	sl, sl, r0
 8014c40:	f10b 0020 	add.w	r0, fp, #32
 8014c44:	ea06 115a 	and.w	r1, r6, sl, lsr #5
 8014c48:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 8014c4c:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 8014c50:	4451      	add	r1, sl
 8014c52:	0a00      	lsrs	r0, r0, #8
 8014c54:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 8014c58:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8014c5c:	4301      	orrs	r1, r0
 8014c5e:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8014c60:	f8b8 0002 	ldrh.w	r0, [r8, #2]
 8014c64:	2cff      	cmp	r4, #255	; 0xff
 8014c66:	d01a      	beq.n	8014c9e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2e6>
 8014c68:	f420 68fc 	bic.w	r8, r0, #2016	; 0x7e0
 8014c6c:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8014c70:	fb04 fb00 	mul.w	fp, r4, r0
 8014c74:	ea4f 0ae4 	mov.w	sl, r4, asr #3
 8014c78:	fb0a fa08 	mul.w	sl, sl, r8
 8014c7c:	f10b 0820 	add.w	r8, fp, #32
 8014c80:	ea06 105a 	and.w	r0, r6, sl, lsr #5
 8014c84:	eb08 281b 	add.w	r8, r8, fp, lsr #8
 8014c88:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 8014c8c:	4450      	add	r0, sl
 8014c8e:	ea4f 2818 	mov.w	r8, r8, lsr #8
 8014c92:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 8014c96:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 8014c9a:	ea40 0008 	orr.w	r0, r0, r8
 8014c9e:	fb1c f802 	smulbb	r8, ip, r2
 8014ca2:	ea4f 08e8 	mov.w	r8, r8, asr #3
 8014ca6:	f1cc 0a10 	rsb	sl, ip, #16
 8014caa:	ebaa 0a02 	sub.w	sl, sl, r2
 8014cae:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8014cb2:	ebc8 0242 	rsb	r2, r8, r2, lsl #1
 8014cb6:	eb08 0a4a 	add.w	sl, r8, sl, lsl #1
 8014cba:	fb0e f202 	mul.w	r2, lr, r2
 8014cbe:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8014cc2:	ea4f 4e00 	mov.w	lr, r0, lsl #16
 8014cc6:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8014cca:	ebc8 0c4c 	rsb	ip, r8, ip, lsl #1
 8014cce:	fb09 220a 	mla	r2, r9, sl, r2
 8014cd2:	ea4b 0101 	orr.w	r1, fp, r1
 8014cd6:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8014cda:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8014cde:	fb0c 2201 	mla	r2, ip, r1, r2
 8014ce2:	ea4e 0000 	orr.w	r0, lr, r0
 8014ce6:	fb08 2800 	mla	r8, r8, r0, r2
 8014cea:	ea4f 5258 	mov.w	r2, r8, lsr #21
 8014cee:	ea4f 1858 	mov.w	r8, r8, lsr #5
 8014cf2:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8014cf6:	f428 68fc 	bic.w	r8, r8, #2016	; 0x7e0
 8014cfa:	ea42 0808 	orr.w	r8, r2, r8
 8014cfe:	fa1f f288 	uxth.w	r2, r8
 8014d02:	2bff      	cmp	r3, #255	; 0xff
 8014d04:	d103      	bne.n	8014d0e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x356>
 8014d06:	9914      	ldr	r1, [sp, #80]	; 0x50
 8014d08:	29ff      	cmp	r1, #255	; 0xff
 8014d0a:	f000 80bd 	beq.w	8014e88 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4d0>
 8014d0e:	990a      	ldr	r1, [sp, #40]	; 0x28
 8014d10:	f8b7 c000 	ldrh.w	ip, [r7]
 8014d14:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8014d16:	434b      	muls	r3, r1
 8014d18:	f103 0e01 	add.w	lr, r3, #1
 8014d1c:	eb0e 2323 	add.w	r3, lr, r3, asr #8
 8014d20:	ea6f 2e23 	mvn.w	lr, r3, asr #8
 8014d24:	ea4f 202c 	mov.w	r0, ip, asr #8
 8014d28:	fa5f fe8e 	uxtb.w	lr, lr
 8014d2c:	1213      	asrs	r3, r2, #8
 8014d2e:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8014d32:	fb10 f00e 	smulbb	r0, r0, lr
 8014d36:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8014d3a:	fb03 0301 	mla	r3, r3, r1, r0
 8014d3e:	b298      	uxth	r0, r3
 8014d40:	ea4f 03ec 	mov.w	r3, ip, asr #3
 8014d44:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8014d48:	10d1      	asrs	r1, r2, #3
 8014d4a:	fa5f fc8c 	uxtb.w	ip, ip
 8014d4e:	00d2      	lsls	r2, r2, #3
 8014d50:	fb1c fc0e 	smulbb	ip, ip, lr
 8014d54:	b2d2      	uxtb	r2, r2
 8014d56:	fb02 c204 	mla	r2, r2, r4, ip
 8014d5a:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 8014d5e:	fb13 f30e 	smulbb	r3, r3, lr
 8014d62:	b292      	uxth	r2, r2
 8014d64:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8014d68:	fb01 3104 	mla	r1, r1, r4, r3
 8014d6c:	f102 0c01 	add.w	ip, r2, #1
 8014d70:	1c43      	adds	r3, r0, #1
 8014d72:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8014d76:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 8014d7a:	b289      	uxth	r1, r1
 8014d7c:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8014d80:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 8014d84:	4313      	orrs	r3, r2
 8014d86:	1c4a      	adds	r2, r1, #1
 8014d88:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8014d8c:	0949      	lsrs	r1, r1, #5
 8014d8e:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8014d92:	430b      	orrs	r3, r1
 8014d94:	803b      	strh	r3, [r7, #0]
 8014d96:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8014d98:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 8014d9a:	4413      	add	r3, r2
 8014d9c:	932b      	str	r3, [sp, #172]	; 0xac
 8014d9e:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 8014da0:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8014da2:	441a      	add	r2, r3
 8014da4:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8014da6:	922c      	str	r2, [sp, #176]	; 0xb0
 8014da8:	3b01      	subs	r3, #1
 8014daa:	3702      	adds	r7, #2
 8014dac:	9315      	str	r3, [sp, #84]	; 0x54
 8014dae:	e68b      	b.n	8014ac8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x110>
 8014db0:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8014db2:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 8014db4:	4413      	add	r3, r2
 8014db6:	932b      	str	r3, [sp, #172]	; 0xac
 8014db8:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 8014dba:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8014dbc:	441a      	add	r2, r3
 8014dbe:	9b08      	ldr	r3, [sp, #32]
 8014dc0:	922c      	str	r2, [sp, #176]	; 0xb0
 8014dc2:	3b01      	subs	r3, #1
 8014dc4:	9308      	str	r3, [sp, #32]
 8014dc6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8014dc8:	3302      	adds	r3, #2
 8014dca:	9309      	str	r3, [sp, #36]	; 0x24
 8014dcc:	e630      	b.n	8014a30 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x78>
 8014dce:	f47f ae42 	bne.w	8014a56 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9e>
 8014dd2:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8014dd4:	2b00      	cmp	r3, #0
 8014dd6:	f340 81ea 	ble.w	80151ae <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7f6>
 8014dda:	ee3a aa2b 	vadd.f32	s20, s20, s23
 8014dde:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8014de2:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 8014de6:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8014de8:	ee79 9a8b 	vadd.f32	s19, s19, s22
 8014dec:	ee39 9a2a 	vadd.f32	s18, s18, s21
 8014df0:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8014df4:	eef0 6a48 	vmov.f32	s13, s16
 8014df8:	ee69 7a27 	vmul.f32	s15, s18, s15
 8014dfc:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8014e00:	ee37 8a48 	vsub.f32	s16, s14, s16
 8014e04:	edcd 6a2b 	vstr	s13, [sp, #172]	; 0xac
 8014e08:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8014e0c:	eef0 6a68 	vmov.f32	s13, s17
 8014e10:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8014e14:	ee18 2a10 	vmov	r2, s16
 8014e18:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8014e1c:	fb92 f3f3 	sdiv	r3, r2, r3
 8014e20:	ee18 2a90 	vmov	r2, s17
 8014e24:	932d      	str	r3, [sp, #180]	; 0xb4
 8014e26:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8014e28:	fb92 f3f3 	sdiv	r3, r2, r3
 8014e2c:	932e      	str	r3, [sp, #184]	; 0xb8
 8014e2e:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8014e30:	9a16      	ldr	r2, [sp, #88]	; 0x58
 8014e32:	3b01      	subs	r3, #1
 8014e34:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8014e38:	9313      	str	r3, [sp, #76]	; 0x4c
 8014e3a:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8014e3c:	edcd 6a2c 	vstr	s13, [sp, #176]	; 0xb0
 8014e40:	bf08      	it	eq
 8014e42:	4613      	moveq	r3, r2
 8014e44:	9308      	str	r3, [sp, #32]
 8014e46:	eef0 8a67 	vmov.f32	s17, s15
 8014e4a:	eeb0 8a47 	vmov.f32	s16, s14
 8014e4e:	e5e8      	b.n	8014a22 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6a>
 8014e50:	fb08 f000 	mul.w	r0, r8, r0
 8014e54:	fb09 0303 	mla	r3, r9, r3, r0
 8014e58:	e684      	b.n	8014b64 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1ac>
 8014e5a:	4689      	mov	r9, r1
 8014e5c:	e6ac      	b.n	8014bb8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x200>
 8014e5e:	f1c2 0010 	rsb	r0, r2, #16
 8014e62:	fb0e f202 	mul.w	r2, lr, r2
 8014e66:	fb09 2900 	mla	r9, r9, r0, r2
 8014e6a:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8014e6e:	ea4f 5259 	mov.w	r2, r9, lsr #21
 8014e72:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8014e76:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8014e7a:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8014e7e:	ea42 0909 	orr.w	r9, r2, r9
 8014e82:	fa1f f289 	uxth.w	r2, r9
 8014e86:	e73c      	b.n	8014d02 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x34a>
 8014e88:	803a      	strh	r2, [r7, #0]
 8014e8a:	e784      	b.n	8014d96 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3de>
 8014e8c:	1c5c      	adds	r4, r3, #1
 8014e8e:	d182      	bne.n	8014d96 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3de>
 8014e90:	429d      	cmp	r5, r3
 8014e92:	dd80      	ble.n	8014d96 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3de>
 8014e94:	1c48      	adds	r0, r1, #1
 8014e96:	f6ff af7e 	blt.w	8014d96 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3de>
 8014e9a:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8014e9c:	4288      	cmp	r0, r1
 8014e9e:	f77f af7a 	ble.w	8014d96 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3de>
 8014ea2:	9814      	ldr	r0, [sp, #80]	; 0x50
 8014ea4:	9302      	str	r3, [sp, #8]
 8014ea6:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8014ea8:	e9cd 1203 	strd	r1, r2, [sp, #12]
 8014eac:	e9cd c005 	strd	ip, r0, [sp, #20]
 8014eb0:	e9cd 5300 	strd	r5, r3, [sp]
 8014eb4:	4639      	mov	r1, r7
 8014eb6:	e9dd 230c 	ldrd	r2, r3, [sp, #48]	; 0x30
 8014eba:	9817      	ldr	r0, [sp, #92]	; 0x5c
 8014ebc:	f7ff fbcc 	bl	8014658 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>
 8014ec0:	e769      	b.n	8014d96 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3de>
 8014ec2:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8014ec4:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8014ec8:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8014eca:	141f      	asrs	r7, r3, #16
 8014ecc:	f3c3 3003 	ubfx	r0, r3, #12, #4
 8014ed0:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8014ed2:	141b      	asrs	r3, r3, #16
 8014ed4:	fb05 3707 	mla	r7, r5, r7, r3
 8014ed8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8014eda:	fa1f fc82 	uxth.w	ip, r2
 8014ede:	eb03 0a07 	add.w	sl, r3, r7
 8014ee2:	ea4f 110c 	mov.w	r1, ip, lsl #4
 8014ee6:	f813 9007 	ldrb.w	r9, [r3, r7]
 8014eea:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8014eee:	f5c1 7380 	rsb	r3, r1, #256	; 0x100
 8014ef2:	b29b      	uxth	r3, r3
 8014ef4:	2800      	cmp	r0, #0
 8014ef6:	f000 813f 	beq.w	8015178 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7c0>
 8014efa:	f81a 4005 	ldrb.w	r4, [sl, r5]
 8014efe:	9410      	str	r4, [sp, #64]	; 0x40
 8014f00:	eb0a 0b05 	add.w	fp, sl, r5
 8014f04:	fa1f fa80 	uxth.w	sl, r0
 8014f08:	fb0a fc0c 	mul.w	ip, sl, ip
 8014f0c:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 8014f10:	fa1f fa8a 	uxth.w	sl, sl
 8014f14:	eba1 010c 	sub.w	r1, r1, ip
 8014f18:	eba3 030a 	sub.w	r3, r3, sl
 8014f1c:	b289      	uxth	r1, r1
 8014f1e:	fb08 f101 	mul.w	r1, r8, r1
 8014f22:	b29b      	uxth	r3, r3
 8014f24:	fb09 1303 	mla	r3, r9, r3, r1
 8014f28:	9910      	ldr	r1, [sp, #64]	; 0x40
 8014f2a:	f89b 4001 	ldrb.w	r4, [fp, #1]
 8014f2e:	9411      	str	r4, [sp, #68]	; 0x44
 8014f30:	fb0a 3301 	mla	r3, sl, r1, r3
 8014f34:	fb0c 3304 	mla	r3, ip, r4, r3
 8014f38:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8014f3c:	2b00      	cmp	r3, #0
 8014f3e:	f000 810d 	beq.w	801515c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7a4>
 8014f42:	990c      	ldr	r1, [sp, #48]	; 0x30
 8014f44:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8014f46:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8014f4a:	eb01 0147 	add.w	r1, r1, r7, lsl #1
 8014f4e:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 8014f52:	f000 8116 	beq.w	8015182 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7ca>
 8014f56:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 8014f5a:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 8014f5e:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8014f62:	fb09 f707 	mul.w	r7, r9, r7
 8014f66:	fb0a fc0c 	mul.w	ip, sl, ip
 8014f6a:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 8014f6e:	f107 0b20 	add.w	fp, r7, #32
 8014f72:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 8014f76:	44cc      	add	ip, r9
 8014f78:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 8014f7c:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8014f80:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8014f84:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8014f88:	ea4c 0909 	orr.w	r9, ip, r9
 8014f8c:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8014f90:	884f      	ldrh	r7, [r1, #2]
 8014f92:	d019      	beq.n	8014fc8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x610>
 8014f94:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 8014f98:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 8014f9c:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8014fa0:	fb08 f807 	mul.w	r8, r8, r7
 8014fa4:	fb0a fc0c 	mul.w	ip, sl, ip
 8014fa8:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 8014fac:	f108 0b20 	add.w	fp, r8, #32
 8014fb0:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 8014fb4:	44bc      	add	ip, r7
 8014fb6:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 8014fba:	0a3f      	lsrs	r7, r7, #8
 8014fbc:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8014fc0:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8014fc4:	ea4c 0707 	orr.w	r7, ip, r7
 8014fc8:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 8014fcc:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 8014fd0:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8014fd4:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8014fd8:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8014fdc:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8014fe0:	ea4c 0909 	orr.w	r9, ip, r9
 8014fe4:	ea4a 0707 	orr.w	r7, sl, r7
 8014fe8:	2800      	cmp	r0, #0
 8014fea:	f000 80cc 	beq.w	8015186 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7ce>
 8014fee:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8014ff0:	eb01 0c04 	add.w	ip, r1, r4
 8014ff4:	f831 8004 	ldrh.w	r8, [r1, r4]
 8014ff8:	9910      	ldr	r1, [sp, #64]	; 0x40
 8014ffa:	29ff      	cmp	r1, #255	; 0xff
 8014ffc:	d01a      	beq.n	8015034 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x67c>
 8014ffe:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8015000:	f428 61fc 	bic.w	r1, r8, #2016	; 0x7e0
 8015004:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 8015008:	fb04 fb08 	mul.w	fp, r4, r8
 801500c:	ea4f 0ae4 	mov.w	sl, r4, asr #3
 8015010:	fb0a fa01 	mul.w	sl, sl, r1
 8015014:	f10b 0120 	add.w	r1, fp, #32
 8015018:	ea06 185a 	and.w	r8, r6, sl, lsr #5
 801501c:	eb01 211b 	add.w	r1, r1, fp, lsr #8
 8015020:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 8015024:	44d0      	add	r8, sl
 8015026:	0a09      	lsrs	r1, r1, #8
 8015028:	ea06 1858 	and.w	r8, r6, r8, lsr #5
 801502c:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8015030:	ea48 0801 	orr.w	r8, r8, r1
 8015034:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8015036:	f8bc 1002 	ldrh.w	r1, [ip, #2]
 801503a:	2cff      	cmp	r4, #255	; 0xff
 801503c:	d01a      	beq.n	8015074 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6bc>
 801503e:	f421 6cfc 	bic.w	ip, r1, #2016	; 0x7e0
 8015042:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8015046:	fb04 fb01 	mul.w	fp, r4, r1
 801504a:	ea4f 0ae4 	mov.w	sl, r4, asr #3
 801504e:	fb0a fa0c 	mul.w	sl, sl, ip
 8015052:	f10b 0c20 	add.w	ip, fp, #32
 8015056:	ea06 115a 	and.w	r1, r6, sl, lsr #5
 801505a:	eb0c 2c1b 	add.w	ip, ip, fp, lsr #8
 801505e:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 8015062:	4451      	add	r1, sl
 8015064:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8015068:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 801506c:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8015070:	ea41 010c 	orr.w	r1, r1, ip
 8015074:	fb10 fc02 	smulbb	ip, r0, r2
 8015078:	ea4f 0cec 	mov.w	ip, ip, asr #3
 801507c:	f1c0 0a10 	rsb	sl, r0, #16
 8015080:	ebaa 0a02 	sub.w	sl, sl, r2
 8015084:	ea4f 4b08 	mov.w	fp, r8, lsl #16
 8015088:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 801508c:	437a      	muls	r2, r7
 801508e:	eb0c 0a4a 	add.w	sl, ip, sl, lsl #1
 8015092:	040f      	lsls	r7, r1, #16
 8015094:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8015098:	f428 68fc 	bic.w	r8, r8, #2016	; 0x7e0
 801509c:	fb09 220a 	mla	r2, r9, sl, r2
 80150a0:	ea4b 0808 	orr.w	r8, fp, r8
 80150a4:	ebcc 0040 	rsb	r0, ip, r0, lsl #1
 80150a8:	f007 67fc 	and.w	r7, r7, #132120576	; 0x7e00000
 80150ac:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 80150b0:	fb00 2208 	mla	r2, r0, r8, r2
 80150b4:	4339      	orrs	r1, r7
 80150b6:	fb0c 2201 	mla	r2, ip, r1, r2
 80150ba:	ea4f 5952 	mov.w	r9, r2, lsr #21
 80150be:	0952      	lsrs	r2, r2, #5
 80150c0:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 80150c4:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80150c8:	ea49 0202 	orr.w	r2, r9, r2
 80150cc:	2bff      	cmp	r3, #255	; 0xff
 80150ce:	b292      	uxth	r2, r2
 80150d0:	d102      	bne.n	80150d8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x720>
 80150d2:	9914      	ldr	r1, [sp, #80]	; 0x50
 80150d4:	29ff      	cmp	r1, #255	; 0xff
 80150d6:	d067      	beq.n	80151a8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7f0>
 80150d8:	990a      	ldr	r1, [sp, #40]	; 0x28
 80150da:	f8be 0000 	ldrh.w	r0, [lr]
 80150de:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 80150e0:	434b      	muls	r3, r1
 80150e2:	1c59      	adds	r1, r3, #1
 80150e4:	eb01 2323 	add.w	r3, r1, r3, asr #8
 80150e8:	ea6f 2323 	mvn.w	r3, r3, asr #8
 80150ec:	1201      	asrs	r1, r0, #8
 80150ee:	b2db      	uxtb	r3, r3
 80150f0:	1217      	asrs	r7, r2, #8
 80150f2:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 80150f6:	fb11 f103 	smulbb	r1, r1, r3
 80150fa:	ea4f 0ce0 	mov.w	ip, r0, asr #3
 80150fe:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8015102:	00c0      	lsls	r0, r0, #3
 8015104:	fb07 1704 	mla	r7, r7, r4, r1
 8015108:	b2c0      	uxtb	r0, r0
 801510a:	10d1      	asrs	r1, r2, #3
 801510c:	00d2      	lsls	r2, r2, #3
 801510e:	fb10 f003 	smulbb	r0, r0, r3
 8015112:	b2d2      	uxtb	r2, r2
 8015114:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 8015118:	fb02 0204 	mla	r2, r2, r4, r0
 801511c:	fb1c fc03 	smulbb	ip, ip, r3
 8015120:	b2bf      	uxth	r7, r7
 8015122:	b292      	uxth	r2, r2
 8015124:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8015128:	fb01 c104 	mla	r1, r1, r4, ip
 801512c:	1c7b      	adds	r3, r7, #1
 801512e:	f102 0c01 	add.w	ip, r2, #1
 8015132:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 8015136:	eb0c 2c12 	add.w	ip, ip, r2, lsr #8
 801513a:	b289      	uxth	r1, r1
 801513c:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8015140:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8015144:	ea47 070c 	orr.w	r7, r7, ip
 8015148:	f101 0c01 	add.w	ip, r1, #1
 801514c:	eb0c 2111 	add.w	r1, ip, r1, lsr #8
 8015150:	0949      	lsrs	r1, r1, #5
 8015152:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8015156:	430f      	orrs	r7, r1
 8015158:	f8ae 7000 	strh.w	r7, [lr]
 801515c:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 801515e:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 8015160:	4413      	add	r3, r2
 8015162:	932b      	str	r3, [sp, #172]	; 0xac
 8015164:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 8015166:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8015168:	441a      	add	r2, r3
 801516a:	9b15      	ldr	r3, [sp, #84]	; 0x54
 801516c:	922c      	str	r2, [sp, #176]	; 0xb0
 801516e:	3b01      	subs	r3, #1
 8015170:	f10e 0e02 	add.w	lr, lr, #2
 8015174:	9315      	str	r3, [sp, #84]	; 0x54
 8015176:	e489      	b.n	8014a8c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xd4>
 8015178:	fb08 f101 	mul.w	r1, r8, r1
 801517c:	fb09 1303 	mla	r3, r9, r3, r1
 8015180:	e6da      	b.n	8014f38 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x580>
 8015182:	46b9      	mov	r9, r7
 8015184:	e702      	b.n	8014f8c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x5d4>
 8015186:	f1c2 0110 	rsb	r1, r2, #16
 801518a:	437a      	muls	r2, r7
 801518c:	fb09 2901 	mla	r9, r9, r1, r2
 8015190:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8015194:	ea4f 5059 	mov.w	r0, r9, lsr #21
 8015198:	ea4f 1259 	mov.w	r2, r9, lsr #5
 801519c:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80151a0:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80151a4:	4302      	orrs	r2, r0
 80151a6:	e791      	b.n	80150cc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x714>
 80151a8:	f8ae 2000 	strh.w	r2, [lr]
 80151ac:	e7d6      	b.n	801515c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7a4>
 80151ae:	b019      	add	sp, #100	; 0x64
 80151b0:	ecbd 8b08 	vpop	{d8-d11}
 80151b4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080151b8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 80151b8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80151bc:	b087      	sub	sp, #28
 80151be:	e9dd e012 	ldrd	lr, r0, [sp, #72]	; 0x48
 80151c2:	f9bd 4040 	ldrsh.w	r4, [sp, #64]	; 0x40
 80151c6:	9105      	str	r1, [sp, #20]
 80151c8:	fb00 e604 	mla	r6, r0, r4, lr
 80151cc:	f89d 1054 	ldrb.w	r1, [sp, #84]	; 0x54
 80151d0:	9102      	str	r1, [sp, #8]
 80151d2:	eb03 0146 	add.w	r1, r3, r6, lsl #1
 80151d6:	9103      	str	r1, [sp, #12]
 80151d8:	9905      	ldr	r1, [sp, #20]
 80151da:	f9bd 7044 	ldrsh.w	r7, [sp, #68]	; 0x44
 80151de:	f89d 5050 	ldrb.w	r5, [sp, #80]	; 0x50
 80151e2:	8809      	ldrh	r1, [r1, #0]
 80151e4:	2800      	cmp	r0, #0
 80151e6:	eb02 0a06 	add.w	sl, r2, r6
 80151ea:	f2c0 80ca 	blt.w	8015382 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1ca>
 80151ee:	4287      	cmp	r7, r0
 80151f0:	f340 80c7 	ble.w	8015382 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1ca>
 80151f4:	f1be 0f00 	cmp.w	lr, #0
 80151f8:	f2c0 80bf 	blt.w	801537a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1c2>
 80151fc:	4574      	cmp	r4, lr
 80151fe:	f340 80bc 	ble.w	801537a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1c2>
 8015202:	f812 c006 	ldrb.w	ip, [r2, r6]
 8015206:	f833 9016 	ldrh.w	r9, [r3, r6, lsl #1]
 801520a:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 801520e:	d01c      	beq.n	801524a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x92>
 8015210:	f429 66fc 	bic.w	r6, r9, #2016	; 0x7e0
 8015214:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8015218:	4372      	muls	r2, r6
 801521a:	f64f 081f 	movw	r8, #63519	; 0xf81f
 801521e:	ea08 1352 	and.w	r3, r8, r2, lsr #5
 8015222:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8015226:	f602 0201 	addw	r2, r2, #2049	; 0x801
 801522a:	fb0c f609 	mul.w	r6, ip, r9
 801522e:	eb03 0902 	add.w	r9, r3, r2
 8015232:	ea08 1959 	and.w	r9, r8, r9, lsr #5
 8015236:	f106 0820 	add.w	r8, r6, #32
 801523a:	eb08 2816 	add.w	r8, r8, r6, lsr #8
 801523e:	ea4f 2818 	mov.w	r8, r8, lsr #8
 8015242:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 8015246:	ea49 0908 	orr.w	r9, r9, r8
 801524a:	fa1f f989 	uxth.w	r9, r9
 801524e:	f11e 0301 	adds.w	r3, lr, #1
 8015252:	f100 809b 	bmi.w	801538c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1d4>
 8015256:	429c      	cmp	r4, r3
 8015258:	f340 8098 	ble.w	801538c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1d4>
 801525c:	2d00      	cmp	r5, #0
 801525e:	f000 8095 	beq.w	801538c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1d4>
 8015262:	f89a 6001 	ldrb.w	r6, [sl, #1]
 8015266:	9b03      	ldr	r3, [sp, #12]
 8015268:	2eff      	cmp	r6, #255	; 0xff
 801526a:	885b      	ldrh	r3, [r3, #2]
 801526c:	d01b      	beq.n	80152a6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xee>
 801526e:	f423 62fc 	bic.w	r2, r3, #2016	; 0x7e0
 8015272:	ea4f 08e6 	mov.w	r8, r6, asr #3
 8015276:	fb08 f202 	mul.w	r2, r8, r2
 801527a:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801527e:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 8015282:	fb06 f803 	mul.w	r8, r6, r3
 8015286:	ea0b 1352 	and.w	r3, fp, r2, lsr #5
 801528a:	f602 0201 	addw	r2, r2, #2049	; 0x801
 801528e:	441a      	add	r2, r3
 8015290:	f108 0320 	add.w	r3, r8, #32
 8015294:	eb03 2318 	add.w	r3, r3, r8, lsr #8
 8015298:	0a1b      	lsrs	r3, r3, #8
 801529a:	ea0b 1b52 	and.w	fp, fp, r2, lsr #5
 801529e:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80152a2:	ea4b 0303 	orr.w	r3, fp, r3
 80152a6:	b29b      	uxth	r3, r3
 80152a8:	9301      	str	r3, [sp, #4]
 80152aa:	3001      	adds	r0, #1
 80152ac:	d474      	bmi.n	8015398 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1e0>
 80152ae:	4287      	cmp	r7, r0
 80152b0:	dd72      	ble.n	8015398 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1e0>
 80152b2:	9a02      	ldr	r2, [sp, #8]
 80152b4:	2a00      	cmp	r2, #0
 80152b6:	f000 8111 	beq.w	80154dc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x324>
 80152ba:	f1be 0f00 	cmp.w	lr, #0
 80152be:	db68      	blt.n	8015392 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1da>
 80152c0:	4574      	cmp	r4, lr
 80152c2:	dd66      	ble.n	8015392 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1da>
 80152c4:	f81a 7004 	ldrb.w	r7, [sl, r4]
 80152c8:	9a03      	ldr	r2, [sp, #12]
 80152ca:	2fff      	cmp	r7, #255	; 0xff
 80152cc:	f832 0014 	ldrh.w	r0, [r2, r4, lsl #1]
 80152d0:	d01c      	beq.n	801530c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x154>
 80152d2:	f420 62fc 	bic.w	r2, r0, #2016	; 0x7e0
 80152d6:	ea4f 08e7 	mov.w	r8, r7, asr #3
 80152da:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80152de:	fb07 fb00 	mul.w	fp, r7, r0
 80152e2:	fb08 f802 	mul.w	r8, r8, r2
 80152e6:	f64f 001f 	movw	r0, #63519	; 0xf81f
 80152ea:	ea00 1258 	and.w	r2, r0, r8, lsr #5
 80152ee:	f608 0801 	addw	r8, r8, #2049	; 0x801
 80152f2:	4490      	add	r8, r2
 80152f4:	f10b 0220 	add.w	r2, fp, #32
 80152f8:	eb02 2b1b 	add.w	fp, r2, fp, lsr #8
 80152fc:	ea4f 2b1b 	mov.w	fp, fp, lsr #8
 8015300:	ea00 1058 	and.w	r0, r0, r8, lsr #5
 8015304:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 8015308:	ea40 000b 	orr.w	r0, r0, fp
 801530c:	b280      	uxth	r0, r0
 801530e:	f11e 0e01 	adds.w	lr, lr, #1
 8015312:	d446      	bmi.n	80153a2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1ea>
 8015314:	4574      	cmp	r4, lr
 8015316:	dd44      	ble.n	80153a2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1ea>
 8015318:	2d00      	cmp	r5, #0
 801531a:	d045      	beq.n	80153a8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1f0>
 801531c:	1c62      	adds	r2, r4, #1
 801531e:	9b03      	ldr	r3, [sp, #12]
 8015320:	f81a 4002 	ldrb.w	r4, [sl, r2]
 8015324:	f833 2012 	ldrh.w	r2, [r3, r2, lsl #1]
 8015328:	2cff      	cmp	r4, #255	; 0xff
 801532a:	d01c      	beq.n	8015366 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1ae>
 801532c:	f422 6efc 	bic.w	lr, r2, #2016	; 0x7e0
 8015330:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8015334:	fb08 fe0e 	mul.w	lr, r8, lr
 8015338:	f64f 0a1f 	movw	sl, #63519	; 0xf81f
 801533c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8015340:	fb04 f802 	mul.w	r8, r4, r2
 8015344:	ea0a 125e 	and.w	r2, sl, lr, lsr #5
 8015348:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 801534c:	4472      	add	r2, lr
 801534e:	ea0a 1252 	and.w	r2, sl, r2, lsr #5
 8015352:	f108 0a20 	add.w	sl, r8, #32
 8015356:	eb0a 2a18 	add.w	sl, sl, r8, lsr #8
 801535a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801535e:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8015362:	ea42 020a 	orr.w	r2, r2, sl
 8015366:	b292      	uxth	r2, r2
 8015368:	2d0f      	cmp	r5, #15
 801536a:	d91f      	bls.n	80153ac <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1f4>
 801536c:	4b5f      	ldr	r3, [pc, #380]	; (80154ec <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x334>)
 801536e:	4a60      	ldr	r2, [pc, #384]	; (80154f0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x338>)
 8015370:	4860      	ldr	r0, [pc, #384]	; (80154f4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x33c>)
 8015372:	f240 210d 	movw	r1, #525	; 0x20d
 8015376:	f003 fc39 	bl	8018bec <__assert_func>
 801537a:	4689      	mov	r9, r1
 801537c:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8015380:	e765      	b.n	801524e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x96>
 8015382:	26ff      	movs	r6, #255	; 0xff
 8015384:	9101      	str	r1, [sp, #4]
 8015386:	4689      	mov	r9, r1
 8015388:	46b4      	mov	ip, r6
 801538a:	e78e      	b.n	80152aa <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf2>
 801538c:	9101      	str	r1, [sp, #4]
 801538e:	26ff      	movs	r6, #255	; 0xff
 8015390:	e78b      	b.n	80152aa <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf2>
 8015392:	4608      	mov	r0, r1
 8015394:	27ff      	movs	r7, #255	; 0xff
 8015396:	e7ba      	b.n	801530e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x156>
 8015398:	24ff      	movs	r4, #255	; 0xff
 801539a:	460a      	mov	r2, r1
 801539c:	4608      	mov	r0, r1
 801539e:	4627      	mov	r7, r4
 80153a0:	e7e2      	b.n	8015368 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1b0>
 80153a2:	460a      	mov	r2, r1
 80153a4:	24ff      	movs	r4, #255	; 0xff
 80153a6:	e7df      	b.n	8015368 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1b0>
 80153a8:	460a      	mov	r2, r1
 80153aa:	24ff      	movs	r4, #255	; 0xff
 80153ac:	9b02      	ldr	r3, [sp, #8]
 80153ae:	2b0f      	cmp	r3, #15
 80153b0:	d8dc      	bhi.n	801536c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1b4>
 80153b2:	f8bd e008 	ldrh.w	lr, [sp, #8]
 80153b6:	fa1f f885 	uxth.w	r8, r5
 80153ba:	fb08 fa0e 	mul.w	sl, r8, lr
 80153be:	ea4f 1308 	mov.w	r3, r8, lsl #4
 80153c2:	ebca 1e0e 	rsb	lr, sl, lr, lsl #4
 80153c6:	9303      	str	r3, [sp, #12]
 80153c8:	fa1f f38e 	uxth.w	r3, lr
 80153cc:	9304      	str	r3, [sp, #16]
 80153ce:	ea4f 4809 	mov.w	r8, r9, lsl #16
 80153d2:	9b02      	ldr	r3, [sp, #8]
 80153d4:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 80153d8:	f008 68fc 	and.w	r8, r8, #132120576	; 0x7e00000
 80153dc:	fb15 fe03 	smulbb	lr, r5, r3
 80153e0:	ea48 0809 	orr.w	r8, r8, r9
 80153e4:	f1c3 0910 	rsb	r9, r3, #16
 80153e8:	9b01      	ldr	r3, [sp, #4]
 80153ea:	ea4f 4b03 	mov.w	fp, r3, lsl #16
 80153ee:	ea4f 0eee 	mov.w	lr, lr, asr #3
 80153f2:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 80153f6:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 80153fa:	eba9 0905 	sub.w	r9, r9, r5
 80153fe:	ea4b 0303 	orr.w	r3, fp, r3
 8015402:	ebce 0545 	rsb	r5, lr, r5, lsl #1
 8015406:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 801540a:	eb0e 0949 	add.w	r9, lr, r9, lsl #1
 801540e:	436b      	muls	r3, r5
 8015410:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8015414:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8015418:	ea4b 0202 	orr.w	r2, fp, r2
 801541c:	fb09 3308 	mla	r3, r9, r8, r3
 8015420:	fb0e 3302 	mla	r3, lr, r2, r3
 8015424:	0402      	lsls	r2, r0, #16
 8015426:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801542a:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801542e:	4310      	orrs	r0, r2
 8015430:	9a02      	ldr	r2, [sp, #8]
 8015432:	ebce 0e42 	rsb	lr, lr, r2, lsl #1
 8015436:	9a03      	ldr	r2, [sp, #12]
 8015438:	fb0e 3e00 	mla	lr, lr, r0, r3
 801543c:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
 8015440:	9a04      	ldr	r2, [sp, #16]
 8015442:	1a80      	subs	r0, r0, r2
 8015444:	9a03      	ldr	r2, [sp, #12]
 8015446:	eba2 020a 	sub.w	r2, r2, sl
 801544a:	b292      	uxth	r2, r2
 801544c:	b280      	uxth	r0, r0
 801544e:	4356      	muls	r6, r2
 8015450:	9a04      	ldr	r2, [sp, #16]
 8015452:	fb0c 6600 	mla	r6, ip, r0, r6
 8015456:	fb02 6707 	mla	r7, r2, r7, r6
 801545a:	fb0a 7404 	mla	r4, sl, r4, r7
 801545e:	ea4f 535e 	mov.w	r3, lr, lsr #21
 8015462:	1208      	asrs	r0, r1, #8
 8015464:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8015468:	ea6f 2424 	mvn.w	r4, r4, asr #8
 801546c:	b2e4      	uxtb	r4, r4
 801546e:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8015472:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8015476:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801547a:	4360      	muls	r0, r4
 801547c:	ea43 0e0e 	orr.w	lr, r3, lr
 8015480:	fa1f f38e 	uxth.w	r3, lr
 8015484:	1c42      	adds	r2, r0, #1
 8015486:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 801548a:	1218      	asrs	r0, r3, #8
 801548c:	10cd      	asrs	r5, r1, #3
 801548e:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8015492:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 8015496:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801549a:	4a17      	ldr	r2, [pc, #92]	; (80154f8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x340>)
 801549c:	4365      	muls	r5, r4
 801549e:	ea02 2000 	and.w	r0, r2, r0, lsl #8
 80154a2:	1c6a      	adds	r2, r5, #1
 80154a4:	eb02 2515 	add.w	r5, r2, r5, lsr #8
 80154a8:	00c9      	lsls	r1, r1, #3
 80154aa:	10da      	asrs	r2, r3, #3
 80154ac:	b2c9      	uxtb	r1, r1
 80154ae:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 80154b2:	434c      	muls	r4, r1
 80154b4:	eb02 2215 	add.w	r2, r2, r5, lsr #8
 80154b8:	1c61      	adds	r1, r4, #1
 80154ba:	00d2      	lsls	r2, r2, #3
 80154bc:	00db      	lsls	r3, r3, #3
 80154be:	eb01 2414 	add.w	r4, r1, r4, lsr #8
 80154c2:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80154c6:	b2db      	uxtb	r3, r3
 80154c8:	4302      	orrs	r2, r0
 80154ca:	eb03 2314 	add.w	r3, r3, r4, lsr #8
 80154ce:	ea42 03d3 	orr.w	r3, r2, r3, lsr #3
 80154d2:	9a05      	ldr	r2, [sp, #20]
 80154d4:	8013      	strh	r3, [r2, #0]
 80154d6:	b007      	add	sp, #28
 80154d8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80154dc:	2d0f      	cmp	r5, #15
 80154de:	f63f af45 	bhi.w	801536c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1b4>
 80154e2:	24ff      	movs	r4, #255	; 0xff
 80154e4:	460a      	mov	r2, r1
 80154e6:	4608      	mov	r0, r1
 80154e8:	4627      	mov	r7, r4
 80154ea:	e762      	b.n	80153b2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1fa>
 80154ec:	0801c915 	.word	0x0801c915
 80154f0:	0801ce6d 	.word	0x0801ce6d
 80154f4:	0801c99d 	.word	0x0801c99d
 80154f8:	fffff800 	.word	0xfffff800

080154fc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 80154fc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015500:	ed2d 8b08 	vpush	{d8-d11}
 8015504:	b095      	sub	sp, #84	; 0x54
 8015506:	eeb0 aa40 	vmov.f32	s20, s0
 801550a:	9e2b      	ldr	r6, [sp, #172]	; 0xac
 801550c:	9306      	str	r3, [sp, #24]
 801550e:	f9bd 30bc 	ldrsh.w	r3, [sp, #188]	; 0xbc
 8015512:	9110      	str	r1, [sp, #64]	; 0x40
 8015514:	9308      	str	r3, [sp, #32]
 8015516:	e9dd 132c 	ldrd	r1, r3, [sp, #176]	; 0xb0
 801551a:	9013      	str	r0, [sp, #76]	; 0x4c
 801551c:	6870      	ldr	r0, [r6, #4]
 801551e:	9212      	str	r2, [sp, #72]	; 0x48
 8015520:	fb00 1303 	mla	r3, r0, r3, r1
 8015524:	6831      	ldr	r1, [r6, #0]
 8015526:	9a30      	ldr	r2, [sp, #192]	; 0xc0
 8015528:	f9bd 50b8 	ldrsh.w	r5, [sp, #184]	; 0xb8
 801552c:	eb01 0343 	add.w	r3, r1, r3, lsl #1
 8015530:	9307      	str	r3, [sp, #28]
 8015532:	6813      	ldr	r3, [r2, #0]
 8015534:	9309      	str	r3, [sp, #36]	; 0x24
 8015536:	6853      	ldr	r3, [r2, #4]
 8015538:	930a      	str	r3, [sp, #40]	; 0x28
 801553a:	006b      	lsls	r3, r5, #1
 801553c:	eef0 9a60 	vmov.f32	s19, s1
 8015540:	eeb0 9a41 	vmov.f32	s18, s2
 8015544:	eeb0 8a62 	vmov.f32	s16, s5
 8015548:	eef0 8a43 	vmov.f32	s17, s6
 801554c:	eef0 ba44 	vmov.f32	s23, s8
 8015550:	eeb0 ba64 	vmov.f32	s22, s9
 8015554:	eef0 aa45 	vmov.f32	s21, s10
 8015558:	930f      	str	r3, [sp, #60]	; 0x3c
 801555a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801555c:	2b00      	cmp	r3, #0
 801555e:	dc03      	bgt.n	8015568 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6c>
 8015560:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8015562:	2b00      	cmp	r3, #0
 8015564:	f340 83a3 	ble.w	8015cae <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7b2>
 8015568:	9b06      	ldr	r3, [sp, #24]
 801556a:	2b00      	cmp	r3, #0
 801556c:	f340 81bc 	ble.w	80158e8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3ec>
 8015570:	9a27      	ldr	r2, [sp, #156]	; 0x9c
 8015572:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8015574:	1412      	asrs	r2, r2, #16
 8015576:	ea4f 4323 	mov.w	r3, r3, asr #16
 801557a:	d42f      	bmi.n	80155dc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe0>
 801557c:	1c51      	adds	r1, r2, #1
 801557e:	428d      	cmp	r5, r1
 8015580:	dd2f      	ble.n	80155e2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe6>
 8015582:	2b00      	cmp	r3, #0
 8015584:	db2d      	blt.n	80155e2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe6>
 8015586:	9808      	ldr	r0, [sp, #32]
 8015588:	1c59      	adds	r1, r3, #1
 801558a:	4288      	cmp	r0, r1
 801558c:	dd29      	ble.n	80155e2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe6>
 801558e:	9b06      	ldr	r3, [sp, #24]
 8015590:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8015592:	9927      	ldr	r1, [sp, #156]	; 0x9c
 8015594:	3b01      	subs	r3, #1
 8015596:	fb02 1203 	mla	r2, r2, r3, r1
 801559a:	1412      	asrs	r2, r2, #16
 801559c:	d42b      	bmi.n	80155f6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfa>
 801559e:	3201      	adds	r2, #1
 80155a0:	4295      	cmp	r5, r2
 80155a2:	dd28      	ble.n	80155f6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfa>
 80155a4:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 80155a6:	9928      	ldr	r1, [sp, #160]	; 0xa0
 80155a8:	fb02 1303 	mla	r3, r2, r3, r1
 80155ac:	141b      	asrs	r3, r3, #16
 80155ae:	d422      	bmi.n	80155f6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfa>
 80155b0:	9a08      	ldr	r2, [sp, #32]
 80155b2:	3301      	adds	r3, #1
 80155b4:	429a      	cmp	r2, r3
 80155b6:	dd1e      	ble.n	80155f6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfa>
 80155b8:	9b06      	ldr	r3, [sp, #24]
 80155ba:	f8dd e01c 	ldr.w	lr, [sp, #28]
 80155be:	9311      	str	r3, [sp, #68]	; 0x44
 80155c0:	f64f 061f 	movw	r6, #63519	; 0xf81f
 80155c4:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80155c6:	2b00      	cmp	r3, #0
 80155c8:	f300 8208 	bgt.w	80159dc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4e0>
 80155cc:	9b06      	ldr	r3, [sp, #24]
 80155ce:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 80155d2:	9b07      	ldr	r3, [sp, #28]
 80155d4:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 80155d8:	9307      	str	r3, [sp, #28]
 80155da:	e187      	b.n	80158ec <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3f0>
 80155dc:	1c57      	adds	r7, r2, #1
 80155de:	f040 8174 	bne.w	80158ca <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3ce>
 80155e2:	42aa      	cmp	r2, r5
 80155e4:	f280 8171 	bge.w	80158ca <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3ce>
 80155e8:	1c5e      	adds	r6, r3, #1
 80155ea:	f2c0 816e 	blt.w	80158ca <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3ce>
 80155ee:	9a08      	ldr	r2, [sp, #32]
 80155f0:	4293      	cmp	r3, r2
 80155f2:	f280 816a 	bge.w	80158ca <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3ce>
 80155f6:	9b06      	ldr	r3, [sp, #24]
 80155f8:	9f07      	ldr	r7, [sp, #28]
 80155fa:	9311      	str	r3, [sp, #68]	; 0x44
 80155fc:	f64f 061f 	movw	r6, #63519	; 0xf81f
 8015600:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8015602:	2b00      	cmp	r3, #0
 8015604:	dde2      	ble.n	80155cc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xd0>
 8015606:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8015608:	1419      	asrs	r1, r3, #16
 801560a:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801560c:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8015610:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8015612:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 8015616:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8015618:	141b      	asrs	r3, r3, #16
 801561a:	f100 81c4 	bmi.w	80159a6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4aa>
 801561e:	1c58      	adds	r0, r3, #1
 8015620:	4285      	cmp	r5, r0
 8015622:	f340 81c2 	ble.w	80159aa <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4ae>
 8015626:	2900      	cmp	r1, #0
 8015628:	f2c0 81bf 	blt.w	80159aa <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4ae>
 801562c:	9c08      	ldr	r4, [sp, #32]
 801562e:	1c48      	adds	r0, r1, #1
 8015630:	4284      	cmp	r4, r0
 8015632:	f340 81ba 	ble.w	80159aa <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4ae>
 8015636:	fb01 3105 	mla	r1, r1, r5, r3
 801563a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801563c:	fa1f fe82 	uxth.w	lr, r2
 8015640:	eb03 0a01 	add.w	sl, r3, r1
 8015644:	ea4f 100e 	mov.w	r0, lr, lsl #4
 8015648:	f813 9001 	ldrb.w	r9, [r3, r1]
 801564c:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8015650:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 8015654:	b29b      	uxth	r3, r3
 8015656:	f1bc 0f00 	cmp.w	ip, #0
 801565a:	f000 8186 	beq.w	801596a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x46e>
 801565e:	f81a 4005 	ldrb.w	r4, [sl, r5]
 8015662:	940b      	str	r4, [sp, #44]	; 0x2c
 8015664:	eb0a 0b05 	add.w	fp, sl, r5
 8015668:	fa1f fa8c 	uxth.w	sl, ip
 801566c:	fb0a fe0e 	mul.w	lr, sl, lr
 8015670:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 8015674:	fa1f fa8a 	uxth.w	sl, sl
 8015678:	eba0 000e 	sub.w	r0, r0, lr
 801567c:	eba3 030a 	sub.w	r3, r3, sl
 8015680:	b280      	uxth	r0, r0
 8015682:	fb08 f000 	mul.w	r0, r8, r0
 8015686:	b29b      	uxth	r3, r3
 8015688:	fb09 0303 	mla	r3, r9, r3, r0
 801568c:	980b      	ldr	r0, [sp, #44]	; 0x2c
 801568e:	f89b 4001 	ldrb.w	r4, [fp, #1]
 8015692:	940c      	str	r4, [sp, #48]	; 0x30
 8015694:	fb0a 3300 	mla	r3, sl, r0, r3
 8015698:	fb0e 3304 	mla	r3, lr, r4, r3
 801569c:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80156a0:	2b00      	cmp	r3, #0
 80156a2:	f000 8105 	beq.w	80158b0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3b4>
 80156a6:	9809      	ldr	r0, [sp, #36]	; 0x24
 80156a8:	9c09      	ldr	r4, [sp, #36]	; 0x24
 80156aa:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 80156ae:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 80156b2:	f834 1011 	ldrh.w	r1, [r4, r1, lsl #1]
 80156b6:	f000 815d 	beq.w	8015974 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x478>
 80156ba:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 80156be:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 80156c2:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80156c6:	fb09 f101 	mul.w	r1, r9, r1
 80156ca:	fb0a fe0e 	mul.w	lr, sl, lr
 80156ce:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 80156d2:	f101 0b20 	add.w	fp, r1, #32
 80156d6:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 80156da:	44ce      	add	lr, r9
 80156dc:	eb0b 2911 	add.w	r9, fp, r1, lsr #8
 80156e0:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80156e4:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 80156e8:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 80156ec:	ea4e 0909 	orr.w	r9, lr, r9
 80156f0:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 80156f4:	8841      	ldrh	r1, [r0, #2]
 80156f6:	d019      	beq.n	801572c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x230>
 80156f8:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 80156fc:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 8015700:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8015704:	fb0a fe0e 	mul.w	lr, sl, lr
 8015708:	fb08 f801 	mul.w	r8, r8, r1
 801570c:	f108 0b20 	add.w	fp, r8, #32
 8015710:	ea06 115e 	and.w	r1, r6, lr, lsr #5
 8015714:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 8015718:	448e      	add	lr, r1
 801571a:	eb0b 2118 	add.w	r1, fp, r8, lsr #8
 801571e:	0a09      	lsrs	r1, r1, #8
 8015720:	ea06 1a5e 	and.w	sl, r6, lr, lsr #5
 8015724:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8015728:	ea4a 0101 	orr.w	r1, sl, r1
 801572c:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 8015730:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8015734:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8015738:	ea4e 0909 	orr.w	r9, lr, r9
 801573c:	ea4f 4e01 	mov.w	lr, r1, lsl #16
 8015740:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8015744:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8015748:	ea4e 0e01 	orr.w	lr, lr, r1
 801574c:	f1bc 0f00 	cmp.w	ip, #0
 8015750:	f000 8112 	beq.w	8015978 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x47c>
 8015754:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8015756:	eb00 0801 	add.w	r8, r0, r1
 801575a:	5a41      	ldrh	r1, [r0, r1]
 801575c:	980b      	ldr	r0, [sp, #44]	; 0x2c
 801575e:	28ff      	cmp	r0, #255	; 0xff
 8015760:	d019      	beq.n	8015796 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x29a>
 8015762:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8015764:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
 8015768:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801576c:	fb04 fb01 	mul.w	fp, r4, r1
 8015770:	ea4f 0ae4 	mov.w	sl, r4, asr #3
 8015774:	fb0a fa00 	mul.w	sl, sl, r0
 8015778:	f10b 0020 	add.w	r0, fp, #32
 801577c:	ea06 115a 	and.w	r1, r6, sl, lsr #5
 8015780:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 8015784:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 8015788:	4451      	add	r1, sl
 801578a:	0a00      	lsrs	r0, r0, #8
 801578c:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 8015790:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8015794:	4301      	orrs	r1, r0
 8015796:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8015798:	f8b8 0002 	ldrh.w	r0, [r8, #2]
 801579c:	2cff      	cmp	r4, #255	; 0xff
 801579e:	d01a      	beq.n	80157d6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2da>
 80157a0:	f420 68fc 	bic.w	r8, r0, #2016	; 0x7e0
 80157a4:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80157a8:	fb04 fb00 	mul.w	fp, r4, r0
 80157ac:	ea4f 0ae4 	mov.w	sl, r4, asr #3
 80157b0:	fb0a fa08 	mul.w	sl, sl, r8
 80157b4:	f10b 0820 	add.w	r8, fp, #32
 80157b8:	ea06 105a 	and.w	r0, r6, sl, lsr #5
 80157bc:	eb08 281b 	add.w	r8, r8, fp, lsr #8
 80157c0:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 80157c4:	4450      	add	r0, sl
 80157c6:	ea4f 2818 	mov.w	r8, r8, lsr #8
 80157ca:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 80157ce:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 80157d2:	ea40 0008 	orr.w	r0, r0, r8
 80157d6:	fb1c f802 	smulbb	r8, ip, r2
 80157da:	ea4f 08e8 	mov.w	r8, r8, asr #3
 80157de:	f1cc 0a10 	rsb	sl, ip, #16
 80157e2:	ebaa 0a02 	sub.w	sl, sl, r2
 80157e6:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 80157ea:	ebc8 0242 	rsb	r2, r8, r2, lsl #1
 80157ee:	eb08 0a4a 	add.w	sl, r8, sl, lsl #1
 80157f2:	fb0e f202 	mul.w	r2, lr, r2
 80157f6:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 80157fa:	ea4f 4e00 	mov.w	lr, r0, lsl #16
 80157fe:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8015802:	ebc8 0c4c 	rsb	ip, r8, ip, lsl #1
 8015806:	fb09 220a 	mla	r2, r9, sl, r2
 801580a:	ea4b 0101 	orr.w	r1, fp, r1
 801580e:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8015812:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8015816:	fb0c 2201 	mla	r2, ip, r1, r2
 801581a:	ea4e 0000 	orr.w	r0, lr, r0
 801581e:	fb08 2800 	mla	r8, r8, r0, r2
 8015822:	ea4f 5258 	mov.w	r2, r8, lsr #21
 8015826:	ea4f 1858 	mov.w	r8, r8, lsr #5
 801582a:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801582e:	f428 68fc 	bic.w	r8, r8, #2016	; 0x7e0
 8015832:	ea42 0808 	orr.w	r8, r2, r8
 8015836:	fa1f f288 	uxth.w	r2, r8
 801583a:	2bff      	cmp	r3, #255	; 0xff
 801583c:	f000 80b1 	beq.w	80159a2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4a6>
 8015840:	f8b7 8000 	ldrh.w	r8, [r7]
 8015844:	43db      	mvns	r3, r3
 8015846:	ea4f 2028 	mov.w	r0, r8, asr #8
 801584a:	fa5f fe83 	uxtb.w	lr, r3
 801584e:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8015852:	fb00 f00e 	mul.w	r0, r0, lr
 8015856:	1c41      	adds	r1, r0, #1
 8015858:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 801585c:	1210      	asrs	r0, r2, #8
 801585e:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 8015862:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8015866:	eb00 2011 	add.w	r0, r0, r1, lsr #8
 801586a:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 801586e:	495a      	ldr	r1, [pc, #360]	; (80159d8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4dc>)
 8015870:	fb0c fc0e 	mul.w	ip, ip, lr
 8015874:	ea01 2000 	and.w	r0, r1, r0, lsl #8
 8015878:	f10c 0101 	add.w	r1, ip, #1
 801587c:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 8015880:	10d1      	asrs	r1, r2, #3
 8015882:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8015886:	ea4f 03c8 	mov.w	r3, r8, lsl #3
 801588a:	eb01 211c 	add.w	r1, r1, ip, lsr #8
 801588e:	b2db      	uxtb	r3, r3
 8015890:	00c9      	lsls	r1, r1, #3
 8015892:	fb03 f30e 	mul.w	r3, r3, lr
 8015896:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801589a:	4301      	orrs	r1, r0
 801589c:	1c58      	adds	r0, r3, #1
 801589e:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 80158a2:	00d3      	lsls	r3, r2, #3
 80158a4:	b2db      	uxtb	r3, r3
 80158a6:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 80158aa:	ea41 03d3 	orr.w	r3, r1, r3, lsr #3
 80158ae:	803b      	strh	r3, [r7, #0]
 80158b0:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 80158b2:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 80158b4:	4413      	add	r3, r2
 80158b6:	9327      	str	r3, [sp, #156]	; 0x9c
 80158b8:	9a28      	ldr	r2, [sp, #160]	; 0xa0
 80158ba:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80158bc:	441a      	add	r2, r3
 80158be:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80158c0:	9228      	str	r2, [sp, #160]	; 0xa0
 80158c2:	3b01      	subs	r3, #1
 80158c4:	3702      	adds	r7, #2
 80158c6:	9311      	str	r3, [sp, #68]	; 0x44
 80158c8:	e69a      	b.n	8015600 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x104>
 80158ca:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 80158cc:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 80158ce:	4413      	add	r3, r2
 80158d0:	9327      	str	r3, [sp, #156]	; 0x9c
 80158d2:	9a28      	ldr	r2, [sp, #160]	; 0xa0
 80158d4:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80158d6:	441a      	add	r2, r3
 80158d8:	9b06      	ldr	r3, [sp, #24]
 80158da:	9228      	str	r2, [sp, #160]	; 0xa0
 80158dc:	3b01      	subs	r3, #1
 80158de:	9306      	str	r3, [sp, #24]
 80158e0:	9b07      	ldr	r3, [sp, #28]
 80158e2:	3302      	adds	r3, #2
 80158e4:	9307      	str	r3, [sp, #28]
 80158e6:	e63f      	b.n	8015568 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6c>
 80158e8:	f47f ae51 	bne.w	801558e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x92>
 80158ec:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80158ee:	2b00      	cmp	r3, #0
 80158f0:	f340 81dd 	ble.w	8015cae <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7b2>
 80158f4:	ee3a aa2b 	vadd.f32	s20, s20, s23
 80158f8:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80158fc:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 8015900:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8015902:	ee79 9a8b 	vadd.f32	s19, s19, s22
 8015906:	ee39 9a2a 	vadd.f32	s18, s18, s21
 801590a:	ee29 7aa7 	vmul.f32	s14, s19, s15
 801590e:	eef0 6a48 	vmov.f32	s13, s16
 8015912:	ee69 7a27 	vmul.f32	s15, s18, s15
 8015916:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801591a:	ee37 8a48 	vsub.f32	s16, s14, s16
 801591e:	edcd 6a27 	vstr	s13, [sp, #156]	; 0x9c
 8015922:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8015926:	eef0 6a68 	vmov.f32	s13, s17
 801592a:	ee77 8ae8 	vsub.f32	s17, s15, s17
 801592e:	ee18 2a10 	vmov	r2, s16
 8015932:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8015936:	fb92 f3f3 	sdiv	r3, r2, r3
 801593a:	ee18 2a90 	vmov	r2, s17
 801593e:	9329      	str	r3, [sp, #164]	; 0xa4
 8015940:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8015942:	fb92 f3f3 	sdiv	r3, r2, r3
 8015946:	932a      	str	r3, [sp, #168]	; 0xa8
 8015948:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801594a:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801594c:	3b01      	subs	r3, #1
 801594e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8015952:	9310      	str	r3, [sp, #64]	; 0x40
 8015954:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8015956:	edcd 6a28 	vstr	s13, [sp, #160]	; 0xa0
 801595a:	bf08      	it	eq
 801595c:	4613      	moveq	r3, r2
 801595e:	9306      	str	r3, [sp, #24]
 8015960:	eef0 8a67 	vmov.f32	s17, s15
 8015964:	eeb0 8a47 	vmov.f32	s16, s14
 8015968:	e5f7      	b.n	801555a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x5e>
 801596a:	fb08 f000 	mul.w	r0, r8, r0
 801596e:	fb09 0303 	mla	r3, r9, r3, r0
 8015972:	e693      	b.n	801569c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1a0>
 8015974:	4689      	mov	r9, r1
 8015976:	e6bb      	b.n	80156f0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1f4>
 8015978:	f1c2 0010 	rsb	r0, r2, #16
 801597c:	fb0e f202 	mul.w	r2, lr, r2
 8015980:	fb09 2900 	mla	r9, r9, r0, r2
 8015984:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8015988:	ea4f 5259 	mov.w	r2, r9, lsr #21
 801598c:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8015990:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8015994:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8015998:	ea42 0909 	orr.w	r9, r2, r9
 801599c:	fa1f f289 	uxth.w	r2, r9
 80159a0:	e74b      	b.n	801583a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x33e>
 80159a2:	803a      	strh	r2, [r7, #0]
 80159a4:	e784      	b.n	80158b0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3b4>
 80159a6:	1c5c      	adds	r4, r3, #1
 80159a8:	d182      	bne.n	80158b0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3b4>
 80159aa:	429d      	cmp	r5, r3
 80159ac:	dd80      	ble.n	80158b0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3b4>
 80159ae:	1c48      	adds	r0, r1, #1
 80159b0:	f6ff af7e 	blt.w	80158b0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3b4>
 80159b4:	9808      	ldr	r0, [sp, #32]
 80159b6:	4288      	cmp	r0, r1
 80159b8:	f77f af7a 	ble.w	80158b0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3b4>
 80159bc:	e9cd 3102 	strd	r3, r1, [sp, #8]
 80159c0:	e9cd 2c04 	strd	r2, ip, [sp, #16]
 80159c4:	e9cd 5000 	strd	r5, r0, [sp]
 80159c8:	e9dd 3209 	ldrd	r3, r2, [sp, #36]	; 0x24
 80159cc:	4639      	mov	r1, r7
 80159ce:	9813      	ldr	r0, [sp, #76]	; 0x4c
 80159d0:	f7ff fbf2 	bl	80151b8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 80159d4:	e76c      	b.n	80158b0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3b4>
 80159d6:	bf00      	nop
 80159d8:	fffff800 	.word	0xfffff800
 80159dc:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 80159de:	f3c3 3203 	ubfx	r2, r3, #12, #4
 80159e2:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80159e4:	141f      	asrs	r7, r3, #16
 80159e6:	f3c3 3003 	ubfx	r0, r3, #12, #4
 80159ea:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 80159ec:	141b      	asrs	r3, r3, #16
 80159ee:	fb05 3707 	mla	r7, r5, r7, r3
 80159f2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80159f4:	fa1f fc82 	uxth.w	ip, r2
 80159f8:	eb03 0a07 	add.w	sl, r3, r7
 80159fc:	ea4f 110c 	mov.w	r1, ip, lsl #4
 8015a00:	f813 9007 	ldrb.w	r9, [r3, r7]
 8015a04:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8015a08:	f5c1 7380 	rsb	r3, r1, #256	; 0x100
 8015a0c:	b29b      	uxth	r3, r3
 8015a0e:	2800      	cmp	r0, #0
 8015a10:	f000 8132 	beq.w	8015c78 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x77c>
 8015a14:	f81a 4005 	ldrb.w	r4, [sl, r5]
 8015a18:	940d      	str	r4, [sp, #52]	; 0x34
 8015a1a:	eb0a 0b05 	add.w	fp, sl, r5
 8015a1e:	fa1f fa80 	uxth.w	sl, r0
 8015a22:	fb0a fc0c 	mul.w	ip, sl, ip
 8015a26:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 8015a2a:	fa1f fa8a 	uxth.w	sl, sl
 8015a2e:	eba1 010c 	sub.w	r1, r1, ip
 8015a32:	eba3 030a 	sub.w	r3, r3, sl
 8015a36:	b289      	uxth	r1, r1
 8015a38:	fb08 f101 	mul.w	r1, r8, r1
 8015a3c:	b29b      	uxth	r3, r3
 8015a3e:	fb09 1303 	mla	r3, r9, r3, r1
 8015a42:	990d      	ldr	r1, [sp, #52]	; 0x34
 8015a44:	f89b 4001 	ldrb.w	r4, [fp, #1]
 8015a48:	940e      	str	r4, [sp, #56]	; 0x38
 8015a4a:	fb0a 3301 	mla	r3, sl, r1, r3
 8015a4e:	fb0c 3304 	mla	r3, ip, r4, r3
 8015a52:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8015a56:	2b00      	cmp	r3, #0
 8015a58:	f000 8100 	beq.w	8015c5c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x760>
 8015a5c:	9909      	ldr	r1, [sp, #36]	; 0x24
 8015a5e:	9c09      	ldr	r4, [sp, #36]	; 0x24
 8015a60:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8015a64:	eb01 0147 	add.w	r1, r1, r7, lsl #1
 8015a68:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 8015a6c:	f000 8109 	beq.w	8015c82 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x786>
 8015a70:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 8015a74:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 8015a78:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8015a7c:	fb09 f707 	mul.w	r7, r9, r7
 8015a80:	fb0a fc0c 	mul.w	ip, sl, ip
 8015a84:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 8015a88:	f107 0b20 	add.w	fp, r7, #32
 8015a8c:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 8015a90:	44cc      	add	ip, r9
 8015a92:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 8015a96:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8015a9a:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8015a9e:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8015aa2:	ea4c 0909 	orr.w	r9, ip, r9
 8015aa6:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8015aaa:	884f      	ldrh	r7, [r1, #2]
 8015aac:	d019      	beq.n	8015ae2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x5e6>
 8015aae:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 8015ab2:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 8015ab6:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8015aba:	fb08 f807 	mul.w	r8, r8, r7
 8015abe:	fb0a fc0c 	mul.w	ip, sl, ip
 8015ac2:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 8015ac6:	f108 0b20 	add.w	fp, r8, #32
 8015aca:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 8015ace:	44bc      	add	ip, r7
 8015ad0:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 8015ad4:	0a3f      	lsrs	r7, r7, #8
 8015ad6:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8015ada:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8015ade:	ea4c 0707 	orr.w	r7, ip, r7
 8015ae2:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 8015ae6:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 8015aea:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8015aee:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8015af2:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8015af6:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8015afa:	ea4c 0909 	orr.w	r9, ip, r9
 8015afe:	ea4a 0707 	orr.w	r7, sl, r7
 8015b02:	2800      	cmp	r0, #0
 8015b04:	f000 80bf 	beq.w	8015c86 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x78a>
 8015b08:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8015b0a:	eb01 0c04 	add.w	ip, r1, r4
 8015b0e:	f831 8004 	ldrh.w	r8, [r1, r4]
 8015b12:	990d      	ldr	r1, [sp, #52]	; 0x34
 8015b14:	29ff      	cmp	r1, #255	; 0xff
 8015b16:	d01a      	beq.n	8015b4e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x652>
 8015b18:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8015b1a:	f428 61fc 	bic.w	r1, r8, #2016	; 0x7e0
 8015b1e:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 8015b22:	fb04 fb08 	mul.w	fp, r4, r8
 8015b26:	ea4f 0ae4 	mov.w	sl, r4, asr #3
 8015b2a:	fb0a fa01 	mul.w	sl, sl, r1
 8015b2e:	f10b 0120 	add.w	r1, fp, #32
 8015b32:	ea06 185a 	and.w	r8, r6, sl, lsr #5
 8015b36:	eb01 211b 	add.w	r1, r1, fp, lsr #8
 8015b3a:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 8015b3e:	44d0      	add	r8, sl
 8015b40:	0a09      	lsrs	r1, r1, #8
 8015b42:	ea06 1858 	and.w	r8, r6, r8, lsr #5
 8015b46:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8015b4a:	ea48 0801 	orr.w	r8, r8, r1
 8015b4e:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8015b50:	f8bc 1002 	ldrh.w	r1, [ip, #2]
 8015b54:	2cff      	cmp	r4, #255	; 0xff
 8015b56:	d01a      	beq.n	8015b8e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x692>
 8015b58:	f421 6cfc 	bic.w	ip, r1, #2016	; 0x7e0
 8015b5c:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8015b60:	fb04 fb01 	mul.w	fp, r4, r1
 8015b64:	ea4f 0ae4 	mov.w	sl, r4, asr #3
 8015b68:	fb0a fa0c 	mul.w	sl, sl, ip
 8015b6c:	f10b 0c20 	add.w	ip, fp, #32
 8015b70:	ea06 115a 	and.w	r1, r6, sl, lsr #5
 8015b74:	eb0c 2c1b 	add.w	ip, ip, fp, lsr #8
 8015b78:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 8015b7c:	4451      	add	r1, sl
 8015b7e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8015b82:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 8015b86:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8015b8a:	ea41 010c 	orr.w	r1, r1, ip
 8015b8e:	fb10 fc02 	smulbb	ip, r0, r2
 8015b92:	ea4f 0cec 	mov.w	ip, ip, asr #3
 8015b96:	f1c0 0a10 	rsb	sl, r0, #16
 8015b9a:	ebaa 0a02 	sub.w	sl, sl, r2
 8015b9e:	ea4f 4b08 	mov.w	fp, r8, lsl #16
 8015ba2:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 8015ba6:	437a      	muls	r2, r7
 8015ba8:	eb0c 0a4a 	add.w	sl, ip, sl, lsl #1
 8015bac:	040f      	lsls	r7, r1, #16
 8015bae:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8015bb2:	f428 68fc 	bic.w	r8, r8, #2016	; 0x7e0
 8015bb6:	fb09 220a 	mla	r2, r9, sl, r2
 8015bba:	ea4b 0808 	orr.w	r8, fp, r8
 8015bbe:	ebcc 0040 	rsb	r0, ip, r0, lsl #1
 8015bc2:	f007 67fc 	and.w	r7, r7, #132120576	; 0x7e00000
 8015bc6:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8015bca:	fb00 2208 	mla	r2, r0, r8, r2
 8015bce:	4339      	orrs	r1, r7
 8015bd0:	fb0c 2201 	mla	r2, ip, r1, r2
 8015bd4:	ea4f 5952 	mov.w	r9, r2, lsr #21
 8015bd8:	0952      	lsrs	r2, r2, #5
 8015bda:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8015bde:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8015be2:	ea49 0202 	orr.w	r2, r9, r2
 8015be6:	2bff      	cmp	r3, #255	; 0xff
 8015be8:	b292      	uxth	r2, r2
 8015bea:	d05d      	beq.n	8015ca8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7ac>
 8015bec:	f8be 8000 	ldrh.w	r8, [lr]
 8015bf0:	4c31      	ldr	r4, [pc, #196]	; (8015cb8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7bc>)
 8015bf2:	43db      	mvns	r3, r3
 8015bf4:	ea4f 2028 	mov.w	r0, r8, asr #8
 8015bf8:	fa5f fc83 	uxtb.w	ip, r3
 8015bfc:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8015c00:	ea4f 07e8 	mov.w	r7, r8, asr #3
 8015c04:	fb00 f00c 	mul.w	r0, r0, ip
 8015c08:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8015c0c:	fb07 f10c 	mul.w	r1, r7, ip
 8015c10:	1c47      	adds	r7, r0, #1
 8015c12:	eb07 2010 	add.w	r0, r7, r0, lsr #8
 8015c16:	1217      	asrs	r7, r2, #8
 8015c18:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8015c1c:	eb07 2010 	add.w	r0, r7, r0, lsr #8
 8015c20:	1c4f      	adds	r7, r1, #1
 8015c22:	eb07 2711 	add.w	r7, r7, r1, lsr #8
 8015c26:	10d1      	asrs	r1, r2, #3
 8015c28:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8015c2c:	ea4f 03c8 	mov.w	r3, r8, lsl #3
 8015c30:	eb01 2117 	add.w	r1, r1, r7, lsr #8
 8015c34:	b2db      	uxtb	r3, r3
 8015c36:	00c9      	lsls	r1, r1, #3
 8015c38:	fb03 f30c 	mul.w	r3, r3, ip
 8015c3c:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8015c40:	ea04 2000 	and.w	r0, r4, r0, lsl #8
 8015c44:	4308      	orrs	r0, r1
 8015c46:	00d2      	lsls	r2, r2, #3
 8015c48:	1c59      	adds	r1, r3, #1
 8015c4a:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 8015c4e:	b2d2      	uxtb	r2, r2
 8015c50:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 8015c54:	ea40 00d3 	orr.w	r0, r0, r3, lsr #3
 8015c58:	f8ae 0000 	strh.w	r0, [lr]
 8015c5c:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8015c5e:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8015c60:	4413      	add	r3, r2
 8015c62:	9327      	str	r3, [sp, #156]	; 0x9c
 8015c64:	9a28      	ldr	r2, [sp, #160]	; 0xa0
 8015c66:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8015c68:	441a      	add	r2, r3
 8015c6a:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8015c6c:	9228      	str	r2, [sp, #160]	; 0xa0
 8015c6e:	3b01      	subs	r3, #1
 8015c70:	f10e 0e02 	add.w	lr, lr, #2
 8015c74:	9311      	str	r3, [sp, #68]	; 0x44
 8015c76:	e4a5      	b.n	80155c4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xc8>
 8015c78:	fb08 f101 	mul.w	r1, r8, r1
 8015c7c:	fb09 1303 	mla	r3, r9, r3, r1
 8015c80:	e6e7      	b.n	8015a52 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x556>
 8015c82:	46b9      	mov	r9, r7
 8015c84:	e70f      	b.n	8015aa6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x5aa>
 8015c86:	f1c2 0110 	rsb	r1, r2, #16
 8015c8a:	437a      	muls	r2, r7
 8015c8c:	fb09 2901 	mla	r9, r9, r1, r2
 8015c90:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8015c94:	ea4f 5059 	mov.w	r0, r9, lsr #21
 8015c98:	ea4f 1259 	mov.w	r2, r9, lsr #5
 8015c9c:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8015ca0:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8015ca4:	4302      	orrs	r2, r0
 8015ca6:	e79e      	b.n	8015be6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6ea>
 8015ca8:	f8ae 2000 	strh.w	r2, [lr]
 8015cac:	e7d6      	b.n	8015c5c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x760>
 8015cae:	b015      	add	sp, #84	; 0x54
 8015cb0:	ecbd 8b08 	vpop	{d8-d11}
 8015cb4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015cb8:	fffff800 	.word	0xfffff800

08015cbc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>:
 8015cbc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8015cc0:	e9dd 4c09 	ldrd	r4, ip, [sp, #36]	; 0x24
 8015cc4:	fb0c 4e03 	mla	lr, ip, r3, r4
 8015cc8:	f1bc 0f00 	cmp.w	ip, #0
 8015ccc:	f9bd a020 	ldrsh.w	sl, [sp, #32]
 8015cd0:	f89d 702c 	ldrb.w	r7, [sp, #44]	; 0x2c
 8015cd4:	f89d 6030 	ldrb.w	r6, [sp, #48]	; 0x30
 8015cd8:	f89d 5034 	ldrb.w	r5, [sp, #52]	; 0x34
 8015cdc:	8808      	ldrh	r0, [r1, #0]
 8015cde:	eb02 084e 	add.w	r8, r2, lr, lsl #1
 8015ce2:	db2f      	blt.n	8015d44 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x88>
 8015ce4:	45e2      	cmp	sl, ip
 8015ce6:	dd2d      	ble.n	8015d44 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x88>
 8015ce8:	2c00      	cmp	r4, #0
 8015cea:	db29      	blt.n	8015d40 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x84>
 8015cec:	42a3      	cmp	r3, r4
 8015cee:	dd27      	ble.n	8015d40 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x84>
 8015cf0:	f832 901e 	ldrh.w	r9, [r2, lr, lsl #1]
 8015cf4:	1c62      	adds	r2, r4, #1
 8015cf6:	d428      	bmi.n	8015d4a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x8e>
 8015cf8:	4293      	cmp	r3, r2
 8015cfa:	dd26      	ble.n	8015d4a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x8e>
 8015cfc:	b32f      	cbz	r7, 8015d4a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x8e>
 8015cfe:	f8b8 e002 	ldrh.w	lr, [r8, #2]
 8015d02:	f11c 0c01 	adds.w	ip, ip, #1
 8015d06:	d424      	bmi.n	8015d52 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x96>
 8015d08:	45e2      	cmp	sl, ip
 8015d0a:	dd22      	ble.n	8015d52 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x96>
 8015d0c:	2e00      	cmp	r6, #0
 8015d0e:	f000 809c 	beq.w	8015e4a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18e>
 8015d12:	2c00      	cmp	r4, #0
 8015d14:	db1b      	blt.n	8015d4e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x92>
 8015d16:	42a3      	cmp	r3, r4
 8015d18:	dd19      	ble.n	8015d4e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x92>
 8015d1a:	f838 c013 	ldrh.w	ip, [r8, r3, lsl #1]
 8015d1e:	3401      	adds	r4, #1
 8015d20:	d41a      	bmi.n	8015d58 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x9c>
 8015d22:	42a3      	cmp	r3, r4
 8015d24:	dd18      	ble.n	8015d58 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x9c>
 8015d26:	b1cf      	cbz	r7, 8015d5c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0xa0>
 8015d28:	3301      	adds	r3, #1
 8015d2a:	f838 3013 	ldrh.w	r3, [r8, r3, lsl #1]
 8015d2e:	2f0f      	cmp	r7, #15
 8015d30:	d915      	bls.n	8015d5e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0xa2>
 8015d32:	4b49      	ldr	r3, [pc, #292]	; (8015e58 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x19c>)
 8015d34:	4a49      	ldr	r2, [pc, #292]	; (8015e5c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x1a0>)
 8015d36:	484a      	ldr	r0, [pc, #296]	; (8015e60 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x1a4>)
 8015d38:	f240 11ef 	movw	r1, #495	; 0x1ef
 8015d3c:	f002 ff56 	bl	8018bec <__assert_func>
 8015d40:	4681      	mov	r9, r0
 8015d42:	e7d7      	b.n	8015cf4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x38>
 8015d44:	4686      	mov	lr, r0
 8015d46:	4681      	mov	r9, r0
 8015d48:	e7db      	b.n	8015d02 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x46>
 8015d4a:	4686      	mov	lr, r0
 8015d4c:	e7d9      	b.n	8015d02 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x46>
 8015d4e:	4684      	mov	ip, r0
 8015d50:	e7e5      	b.n	8015d1e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x62>
 8015d52:	4603      	mov	r3, r0
 8015d54:	4684      	mov	ip, r0
 8015d56:	e7ea      	b.n	8015d2e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x72>
 8015d58:	4603      	mov	r3, r0
 8015d5a:	e7e8      	b.n	8015d2e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x72>
 8015d5c:	4603      	mov	r3, r0
 8015d5e:	2e0f      	cmp	r6, #15
 8015d60:	d8e7      	bhi.n	8015d32 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x76>
 8015d62:	ea4f 4409 	mov.w	r4, r9, lsl #16
 8015d66:	fb17 f806 	smulbb	r8, r7, r6
 8015d6a:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8015d6e:	ea4f 4a0e 	mov.w	sl, lr, lsl #16
 8015d72:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8015d76:	ea4f 08e8 	mov.w	r8, r8, asr #3
 8015d7a:	ea44 0909 	orr.w	r9, r4, r9
 8015d7e:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8015d82:	f1c6 0410 	rsb	r4, r6, #16
 8015d86:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8015d8a:	1be4      	subs	r4, r4, r7
 8015d8c:	041a      	lsls	r2, r3, #16
 8015d8e:	ebc8 0747 	rsb	r7, r8, r7, lsl #1
 8015d92:	ea4a 0e0e 	orr.w	lr, sl, lr
 8015d96:	fb07 fe0e 	mul.w	lr, r7, lr
 8015d9a:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8015d9e:	eb08 0444 	add.w	r4, r8, r4, lsl #1
 8015da2:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8015da6:	fb04 e409 	mla	r4, r4, r9, lr
 8015daa:	4313      	orrs	r3, r2
 8015dac:	ea4f 420c 	mov.w	r2, ip, lsl #16
 8015db0:	fb08 4303 	mla	r3, r8, r3, r4
 8015db4:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8015db8:	f42c 64fc 	bic.w	r4, ip, #2016	; 0x7e0
 8015dbc:	4322      	orrs	r2, r4
 8015dbe:	ebc8 0646 	rsb	r6, r8, r6, lsl #1
 8015dc2:	fb06 3202 	mla	r2, r6, r2, r3
 8015dc6:	0d53      	lsrs	r3, r2, #21
 8015dc8:	0952      	lsrs	r2, r2, #5
 8015dca:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8015dce:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8015dd2:	431a      	orrs	r2, r3
 8015dd4:	b293      	uxth	r3, r2
 8015dd6:	b2af      	uxth	r7, r5
 8015dd8:	1202      	asrs	r2, r0, #8
 8015dda:	43ed      	mvns	r5, r5
 8015ddc:	b2ed      	uxtb	r5, r5
 8015dde:	ea4f 2c23 	mov.w	ip, r3, asr #8
 8015de2:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8015de6:	fb12 f205 	smulbb	r2, r2, r5
 8015dea:	10c6      	asrs	r6, r0, #3
 8015dec:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8015df0:	fb0c 2c07 	mla	ip, ip, r7, r2
 8015df4:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8015df8:	10da      	asrs	r2, r3, #3
 8015dfa:	fb16 f605 	smulbb	r6, r6, r5
 8015dfe:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8015e02:	fb02 6207 	mla	r2, r2, r7, r6
 8015e06:	b296      	uxth	r6, r2
 8015e08:	00c2      	lsls	r2, r0, #3
 8015e0a:	00dc      	lsls	r4, r3, #3
 8015e0c:	b2d2      	uxtb	r2, r2
 8015e0e:	b2e4      	uxtb	r4, r4
 8015e10:	fb12 f205 	smulbb	r2, r2, r5
 8015e14:	fb04 2207 	mla	r2, r4, r7, r2
 8015e18:	fa1f fc8c 	uxth.w	ip, ip
 8015e1c:	b292      	uxth	r2, r2
 8015e1e:	f10c 0301 	add.w	r3, ip, #1
 8015e22:	1c50      	adds	r0, r2, #1
 8015e24:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 8015e28:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 8015e2c:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8015e30:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 8015e34:	4313      	orrs	r3, r2
 8015e36:	1c72      	adds	r2, r6, #1
 8015e38:	eb02 2216 	add.w	r2, r2, r6, lsr #8
 8015e3c:	0952      	lsrs	r2, r2, #5
 8015e3e:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8015e42:	4313      	orrs	r3, r2
 8015e44:	800b      	strh	r3, [r1, #0]
 8015e46:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8015e4a:	2f0f      	cmp	r7, #15
 8015e4c:	f63f af71 	bhi.w	8015d32 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x76>
 8015e50:	4603      	mov	r3, r0
 8015e52:	4684      	mov	ip, r0
 8015e54:	e785      	b.n	8015d62 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0xa6>
 8015e56:	bf00      	nop
 8015e58:	0801c915 	.word	0x0801c915
 8015e5c:	0801cf16 	.word	0x0801cf16
 8015e60:	0801c99d 	.word	0x0801c99d

08015e64 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 8015e64:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015e68:	ed2d 8b08 	vpush	{d8-d11}
 8015e6c:	b095      	sub	sp, #84	; 0x54
 8015e6e:	e9dd 4627 	ldrd	r4, r6, [sp, #156]	; 0x9c
 8015e72:	9306      	str	r3, [sp, #24]
 8015e74:	f9bd 30bc 	ldrsh.w	r3, [sp, #188]	; 0xbc
 8015e78:	9212      	str	r2, [sp, #72]	; 0x48
 8015e7a:	9307      	str	r3, [sp, #28]
 8015e7c:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 8015e7e:	f89d 30c4 	ldrb.w	r3, [sp, #196]	; 0xc4
 8015e82:	930c      	str	r3, [sp, #48]	; 0x30
 8015e84:	910b      	str	r1, [sp, #44]	; 0x2c
 8015e86:	e9dd 132c 	ldrd	r1, r3, [sp, #176]	; 0xb0
 8015e8a:	9013      	str	r0, [sp, #76]	; 0x4c
 8015e8c:	6850      	ldr	r0, [r2, #4]
 8015e8e:	6812      	ldr	r2, [r2, #0]
 8015e90:	f9bd 70b8 	ldrsh.w	r7, [sp, #184]	; 0xb8
 8015e94:	fb00 1303 	mla	r3, r0, r3, r1
 8015e98:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 8015e9c:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8015e9e:	681b      	ldr	r3, [r3, #0]
 8015ea0:	9309      	str	r3, [sp, #36]	; 0x24
 8015ea2:	007b      	lsls	r3, r7, #1
 8015ea4:	930a      	str	r3, [sp, #40]	; 0x28
 8015ea6:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8015ea8:	43db      	mvns	r3, r3
 8015eaa:	b2db      	uxtb	r3, r3
 8015eac:	eeb0 aa40 	vmov.f32	s20, s0
 8015eb0:	eef0 9a60 	vmov.f32	s19, s1
 8015eb4:	eeb0 9a41 	vmov.f32	s18, s2
 8015eb8:	eeb0 8a62 	vmov.f32	s16, s5
 8015ebc:	eef0 8a43 	vmov.f32	s17, s6
 8015ec0:	eef0 ba44 	vmov.f32	s23, s8
 8015ec4:	eeb0 ba64 	vmov.f32	s22, s9
 8015ec8:	eef0 aa45 	vmov.f32	s21, s10
 8015ecc:	9308      	str	r3, [sp, #32]
 8015ece:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8015ed0:	2b00      	cmp	r3, #0
 8015ed2:	dc03      	bgt.n	8015edc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x78>
 8015ed4:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8015ed6:	2b00      	cmp	r3, #0
 8015ed8:	f340 81f3 	ble.w	80162c2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x45e>
 8015edc:	9b06      	ldr	r3, [sp, #24]
 8015ede:	2b00      	cmp	r3, #0
 8015ee0:	f340 80fa 	ble.w	80160d8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x274>
 8015ee4:	1422      	asrs	r2, r4, #16
 8015ee6:	ea4f 4326 	mov.w	r3, r6, asr #16
 8015eea:	d42b      	bmi.n	8015f44 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe0>
 8015eec:	1c51      	adds	r1, r2, #1
 8015eee:	428f      	cmp	r7, r1
 8015ef0:	dd2b      	ble.n	8015f4a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe6>
 8015ef2:	2b00      	cmp	r3, #0
 8015ef4:	db29      	blt.n	8015f4a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe6>
 8015ef6:	9807      	ldr	r0, [sp, #28]
 8015ef8:	1c59      	adds	r1, r3, #1
 8015efa:	4288      	cmp	r0, r1
 8015efc:	dd25      	ble.n	8015f4a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe6>
 8015efe:	9b06      	ldr	r3, [sp, #24]
 8015f00:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8015f02:	3b01      	subs	r3, #1
 8015f04:	fb02 4203 	mla	r2, r2, r3, r4
 8015f08:	1412      	asrs	r2, r2, #16
 8015f0a:	d428      	bmi.n	8015f5e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfa>
 8015f0c:	3201      	adds	r2, #1
 8015f0e:	4297      	cmp	r7, r2
 8015f10:	dd25      	ble.n	8015f5e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfa>
 8015f12:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 8015f14:	fb02 6303 	mla	r3, r2, r3, r6
 8015f18:	141b      	asrs	r3, r3, #16
 8015f1a:	d420      	bmi.n	8015f5e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfa>
 8015f1c:	9a07      	ldr	r2, [sp, #28]
 8015f1e:	3301      	adds	r3, #1
 8015f20:	429a      	cmp	r2, r3
 8015f22:	dd1c      	ble.n	8015f5e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfa>
 8015f24:	f8dd 8018 	ldr.w	r8, [sp, #24]
 8015f28:	f8bd a030 	ldrh.w	sl, [sp, #48]	; 0x30
 8015f2c:	f8cd 9034 	str.w	r9, [sp, #52]	; 0x34
 8015f30:	f1b8 0f00 	cmp.w	r8, #0
 8015f34:	f300 8129 	bgt.w	801618a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x326>
 8015f38:	9b06      	ldr	r3, [sp, #24]
 8015f3a:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8015f3e:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 8015f42:	e0cb      	b.n	80160dc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x278>
 8015f44:	1c51      	adds	r1, r2, #1
 8015f46:	f040 80bd 	bne.w	80160c4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x260>
 8015f4a:	42ba      	cmp	r2, r7
 8015f4c:	f280 80ba 	bge.w	80160c4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x260>
 8015f50:	1c5a      	adds	r2, r3, #1
 8015f52:	f2c0 80b7 	blt.w	80160c4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x260>
 8015f56:	9a07      	ldr	r2, [sp, #28]
 8015f58:	4293      	cmp	r3, r2
 8015f5a:	f280 80b3 	bge.w	80160c4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x260>
 8015f5e:	f8dd b018 	ldr.w	fp, [sp, #24]
 8015f62:	46c8      	mov	r8, r9
 8015f64:	f1bb 0f00 	cmp.w	fp, #0
 8015f68:	dde6      	ble.n	8015f38 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xd4>
 8015f6a:	1421      	asrs	r1, r4, #16
 8015f6c:	ea4f 4226 	mov.w	r2, r6, asr #16
 8015f70:	f3c4 3303 	ubfx	r3, r4, #12, #4
 8015f74:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8015f78:	f100 80ef 	bmi.w	801615a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2f6>
 8015f7c:	f101 0c01 	add.w	ip, r1, #1
 8015f80:	4567      	cmp	r7, ip
 8015f82:	f340 80ec 	ble.w	801615e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2fa>
 8015f86:	2a00      	cmp	r2, #0
 8015f88:	f2c0 80e9 	blt.w	801615e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2fa>
 8015f8c:	9d07      	ldr	r5, [sp, #28]
 8015f8e:	f102 0c01 	add.w	ip, r2, #1
 8015f92:	4565      	cmp	r5, ip
 8015f94:	f340 80e3 	ble.w	801615e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2fa>
 8015f98:	fb02 1207 	mla	r2, r2, r7, r1
 8015f9c:	9909      	ldr	r1, [sp, #36]	; 0x24
 8015f9e:	eb01 0e42 	add.w	lr, r1, r2, lsl #1
 8015fa2:	f831 c012 	ldrh.w	ip, [r1, r2, lsl #1]
 8015fa6:	f8be 1002 	ldrh.w	r1, [lr, #2]
 8015faa:	b138      	cbz	r0, 8015fbc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x158>
 8015fac:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8015fae:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 8015fb0:	4472      	add	r2, lr
 8015fb2:	f83e 5005 	ldrh.w	r5, [lr, r5]
 8015fb6:	8852      	ldrh	r2, [r2, #2]
 8015fb8:	950e      	str	r5, [sp, #56]	; 0x38
 8015fba:	920f      	str	r2, [sp, #60]	; 0x3c
 8015fbc:	ea4f 4e0c 	mov.w	lr, ip, lsl #16
 8015fc0:	fb13 f200 	smulbb	r2, r3, r0
 8015fc4:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8015fc8:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 8015fcc:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8015fd0:	10d2      	asrs	r2, r2, #3
 8015fd2:	ea4e 0c0c 	orr.w	ip, lr, ip
 8015fd6:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8015fda:	f1c0 0e10 	rsb	lr, r0, #16
 8015fde:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8015fe2:	ebae 0e03 	sub.w	lr, lr, r3
 8015fe6:	ea4a 0101 	orr.w	r1, sl, r1
 8015fea:	ebc2 0343 	rsb	r3, r2, r3, lsl #1
 8015fee:	4359      	muls	r1, r3
 8015ff0:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8015ff2:	9d08      	ldr	r5, [sp, #32]
 8015ff4:	eb02 0e4e 	add.w	lr, r2, lr, lsl #1
 8015ff8:	fb0e 1e0c 	mla	lr, lr, ip, r1
 8015ffc:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8016000:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8016004:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8016008:	ea4c 0c03 	orr.w	ip, ip, r3
 801600c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801600e:	990e      	ldr	r1, [sp, #56]	; 0x38
 8016010:	041b      	lsls	r3, r3, #16
 8016012:	fb02 ec0c 	mla	ip, r2, ip, lr
 8016016:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801601a:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 801601e:	ea43 030e 	orr.w	r3, r3, lr
 8016022:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 8016026:	fb02 c203 	mla	r2, r2, r3, ip
 801602a:	0d53      	lsrs	r3, r2, #21
 801602c:	0952      	lsrs	r2, r2, #5
 801602e:	f8b8 c000 	ldrh.w	ip, [r8]
 8016032:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8016036:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801603a:	431a      	orrs	r2, r3
 801603c:	b292      	uxth	r2, r2
 801603e:	ea4f 212c 	mov.w	r1, ip, asr #8
 8016042:	f8bd 3030 	ldrh.w	r3, [sp, #48]	; 0x30
 8016046:	1210      	asrs	r0, r2, #8
 8016048:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801604c:	fb11 f105 	smulbb	r1, r1, r5
 8016050:	ea4f 0eec 	mov.w	lr, ip, asr #3
 8016054:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8016058:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801605c:	fb00 1003 	mla	r0, r0, r3, r1
 8016060:	fa5f fc8c 	uxtb.w	ip, ip
 8016064:	10d1      	asrs	r1, r2, #3
 8016066:	00d2      	lsls	r2, r2, #3
 8016068:	fb1c fc05 	smulbb	ip, ip, r5
 801606c:	b2d2      	uxtb	r2, r2
 801606e:	fb02 c203 	mla	r2, r2, r3, ip
 8016072:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 8016076:	b280      	uxth	r0, r0
 8016078:	b292      	uxth	r2, r2
 801607a:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801607e:	fb1e fe05 	smulbb	lr, lr, r5
 8016082:	fb01 e103 	mla	r1, r1, r3, lr
 8016086:	f102 0c01 	add.w	ip, r2, #1
 801608a:	1c43      	adds	r3, r0, #1
 801608c:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8016090:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 8016094:	b289      	uxth	r1, r1
 8016096:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801609a:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 801609e:	4313      	orrs	r3, r2
 80160a0:	1c4a      	adds	r2, r1, #1
 80160a2:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 80160a6:	0949      	lsrs	r1, r1, #5
 80160a8:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80160ac:	430b      	orrs	r3, r1
 80160ae:	f8a8 3000 	strh.w	r3, [r8]
 80160b2:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80160b4:	441c      	add	r4, r3
 80160b6:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80160b8:	f108 0802 	add.w	r8, r8, #2
 80160bc:	441e      	add	r6, r3
 80160be:	f10b 3bff 	add.w	fp, fp, #4294967295
 80160c2:	e74f      	b.n	8015f64 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x100>
 80160c4:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80160c6:	441c      	add	r4, r3
 80160c8:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80160ca:	441e      	add	r6, r3
 80160cc:	9b06      	ldr	r3, [sp, #24]
 80160ce:	3b01      	subs	r3, #1
 80160d0:	9306      	str	r3, [sp, #24]
 80160d2:	f109 0902 	add.w	r9, r9, #2
 80160d6:	e701      	b.n	8015edc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x78>
 80160d8:	f47f af11 	bne.w	8015efe <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9a>
 80160dc:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80160de:	2b00      	cmp	r3, #0
 80160e0:	f340 80ef 	ble.w	80162c2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x45e>
 80160e4:	ee3a aa2b 	vadd.f32	s20, s20, s23
 80160e8:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80160ec:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 80160f0:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80160f2:	ee79 9a8b 	vadd.f32	s19, s19, s22
 80160f6:	ee39 9a2a 	vadd.f32	s18, s18, s21
 80160fa:	ee29 7aa7 	vmul.f32	s14, s19, s15
 80160fe:	eef0 6a48 	vmov.f32	s13, s16
 8016102:	ee69 7a27 	vmul.f32	s15, s18, s15
 8016106:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801610a:	ee37 8a48 	vsub.f32	s16, s14, s16
 801610e:	ee16 4a90 	vmov	r4, s13
 8016112:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8016116:	eef0 6a68 	vmov.f32	s13, s17
 801611a:	ee77 8ae8 	vsub.f32	s17, s15, s17
 801611e:	ee18 2a10 	vmov	r2, s16
 8016122:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8016126:	fb92 f3f3 	sdiv	r3, r2, r3
 801612a:	ee18 2a90 	vmov	r2, s17
 801612e:	9329      	str	r3, [sp, #164]	; 0xa4
 8016130:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8016132:	fb92 f3f3 	sdiv	r3, r2, r3
 8016136:	932a      	str	r3, [sp, #168]	; 0xa8
 8016138:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801613a:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801613c:	3b01      	subs	r3, #1
 801613e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8016142:	930b      	str	r3, [sp, #44]	; 0x2c
 8016144:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8016146:	bf08      	it	eq
 8016148:	4613      	moveq	r3, r2
 801614a:	ee16 6a90 	vmov	r6, s13
 801614e:	9306      	str	r3, [sp, #24]
 8016150:	eef0 8a67 	vmov.f32	s17, s15
 8016154:	eeb0 8a47 	vmov.f32	s16, s14
 8016158:	e6b9      	b.n	8015ece <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6a>
 801615a:	1c4d      	adds	r5, r1, #1
 801615c:	d1a9      	bne.n	80160b2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x24e>
 801615e:	428f      	cmp	r7, r1
 8016160:	dda7      	ble.n	80160b2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x24e>
 8016162:	1c55      	adds	r5, r2, #1
 8016164:	dba5      	blt.n	80160b2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x24e>
 8016166:	9d07      	ldr	r5, [sp, #28]
 8016168:	4295      	cmp	r5, r2
 801616a:	dda2      	ble.n	80160b2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x24e>
 801616c:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801616e:	9101      	str	r1, [sp, #4]
 8016170:	e9cd 2302 	strd	r2, r3, [sp, #8]
 8016174:	9b07      	ldr	r3, [sp, #28]
 8016176:	9300      	str	r3, [sp, #0]
 8016178:	e9cd 0504 	strd	r0, r5, [sp, #16]
 801617c:	463b      	mov	r3, r7
 801617e:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8016180:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8016182:	4641      	mov	r1, r8
 8016184:	f7ff fd9a 	bl	8015cbc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>
 8016188:	e793      	b.n	80160b2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x24e>
 801618a:	1422      	asrs	r2, r4, #16
 801618c:	1431      	asrs	r1, r6, #16
 801618e:	fb07 2101 	mla	r1, r7, r1, r2
 8016192:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8016194:	9809      	ldr	r0, [sp, #36]	; 0x24
 8016196:	eb02 0241 	add.w	r2, r2, r1, lsl #1
 801619a:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 801619e:	f830 c011 	ldrh.w	ip, [r0, r1, lsl #1]
 80161a2:	8851      	ldrh	r1, [r2, #2]
 80161a4:	f3c4 3303 	ubfx	r3, r4, #12, #4
 80161a8:	f1be 0f00 	cmp.w	lr, #0
 80161ac:	d006      	beq.n	80161bc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x358>
 80161ae:	980a      	ldr	r0, [sp, #40]	; 0x28
 80161b0:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 80161b2:	1810      	adds	r0, r2, r0
 80161b4:	5b52      	ldrh	r2, [r2, r5]
 80161b6:	9210      	str	r2, [sp, #64]	; 0x40
 80161b8:	8842      	ldrh	r2, [r0, #2]
 80161ba:	9211      	str	r2, [sp, #68]	; 0x44
 80161bc:	ea4f 400c 	mov.w	r0, ip, lsl #16
 80161c0:	fb13 f20e 	smulbb	r2, r3, lr
 80161c4:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 80161c8:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 80161cc:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 80161d0:	10d2      	asrs	r2, r2, #3
 80161d2:	ea40 000c 	orr.w	r0, r0, ip
 80161d6:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 80161da:	f1ce 0c10 	rsb	ip, lr, #16
 80161de:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 80161e2:	ebac 0c03 	sub.w	ip, ip, r3
 80161e6:	ea4b 0101 	orr.w	r1, fp, r1
 80161ea:	ebc2 0343 	rsb	r3, r2, r3, lsl #1
 80161ee:	4359      	muls	r1, r3
 80161f0:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80161f2:	9d08      	ldr	r5, [sp, #32]
 80161f4:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 80161f8:	fb0c 1c00 	mla	ip, ip, r0, r1
 80161fc:	ea4f 4b03 	mov.w	fp, r3, lsl #16
 8016200:	f423 60fc 	bic.w	r0, r3, #2016	; 0x7e0
 8016204:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8016206:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801620a:	ea4b 0000 	orr.w	r0, fp, r0
 801620e:	ea4f 4b03 	mov.w	fp, r3, lsl #16
 8016212:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8016216:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801621a:	fb02 c000 	mla	r0, r2, r0, ip
 801621e:	ea4b 0b03 	orr.w	fp, fp, r3
 8016222:	ebc2 024e 	rsb	r2, r2, lr, lsl #1
 8016226:	fb02 0b0b 	mla	fp, r2, fp, r0
 801622a:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801622c:	ea4f 515b 	mov.w	r1, fp, lsr #21
 8016230:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 8016234:	8812      	ldrh	r2, [r2, #0]
 8016236:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801623a:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 801623e:	ea41 0b0b 	orr.w	fp, r1, fp
 8016242:	fa1f f38b 	uxth.w	r3, fp
 8016246:	1211      	asrs	r1, r2, #8
 8016248:	1218      	asrs	r0, r3, #8
 801624a:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801624e:	fb11 f105 	smulbb	r1, r1, r5
 8016252:	ea4f 0ce2 	mov.w	ip, r2, asr #3
 8016256:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801625a:	00d2      	lsls	r2, r2, #3
 801625c:	fb00 100a 	mla	r0, r0, sl, r1
 8016260:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 8016264:	10d9      	asrs	r1, r3, #3
 8016266:	b2d2      	uxtb	r2, r2
 8016268:	00db      	lsls	r3, r3, #3
 801626a:	fb1c fc05 	smulbb	ip, ip, r5
 801626e:	fb12 f205 	smulbb	r2, r2, r5
 8016272:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8016276:	b2db      	uxtb	r3, r3
 8016278:	b280      	uxth	r0, r0
 801627a:	fb01 c10a 	mla	r1, r1, sl, ip
 801627e:	fb03 230a 	mla	r3, r3, sl, r2
 8016282:	b29b      	uxth	r3, r3
 8016284:	b289      	uxth	r1, r1
 8016286:	1c42      	adds	r2, r0, #1
 8016288:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801628c:	f101 0c01 	add.w	ip, r1, #1
 8016290:	1c5a      	adds	r2, r3, #1
 8016292:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8016296:	eb0c 2111 	add.w	r1, ip, r1, lsr #8
 801629a:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 801629e:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 80162a2:	0949      	lsrs	r1, r1, #5
 80162a4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80162a6:	4310      	orrs	r0, r2
 80162a8:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80162ac:	4308      	orrs	r0, r1
 80162ae:	f823 0b02 	strh.w	r0, [r3], #2
 80162b2:	930d      	str	r3, [sp, #52]	; 0x34
 80162b4:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80162b6:	441c      	add	r4, r3
 80162b8:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80162ba:	f108 38ff 	add.w	r8, r8, #4294967295
 80162be:	441e      	add	r6, r3
 80162c0:	e636      	b.n	8015f30 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xcc>
 80162c2:	b015      	add	sp, #84	; 0x54
 80162c4:	ecbd 8b08 	vpop	{d8-d11}
 80162c8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080162cc <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>:
 80162cc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80162d0:	e9dd 5607 	ldrd	r5, r6, [sp, #28]
 80162d4:	fb06 5c03 	mla	ip, r6, r3, r5
 80162d8:	2e00      	cmp	r6, #0
 80162da:	f9bd 8018 	ldrsh.w	r8, [sp, #24]
 80162de:	f89d 4024 	ldrb.w	r4, [sp, #36]	; 0x24
 80162e2:	f89d 7028 	ldrb.w	r7, [sp, #40]	; 0x28
 80162e6:	8808      	ldrh	r0, [r1, #0]
 80162e8:	eb02 0e4c 	add.w	lr, r2, ip, lsl #1
 80162ec:	db2e      	blt.n	801634c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x80>
 80162ee:	45b0      	cmp	r8, r6
 80162f0:	dd2c      	ble.n	801634c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x80>
 80162f2:	2d00      	cmp	r5, #0
 80162f4:	db28      	blt.n	8016348 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x7c>
 80162f6:	42ab      	cmp	r3, r5
 80162f8:	dd26      	ble.n	8016348 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x7c>
 80162fa:	f832 c01c 	ldrh.w	ip, [r2, ip, lsl #1]
 80162fe:	1c6a      	adds	r2, r5, #1
 8016300:	d427      	bmi.n	8016352 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x86>
 8016302:	4293      	cmp	r3, r2
 8016304:	dd25      	ble.n	8016352 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x86>
 8016306:	b324      	cbz	r4, 8016352 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x86>
 8016308:	f8be 2002 	ldrh.w	r2, [lr, #2]
 801630c:	3601      	adds	r6, #1
 801630e:	d424      	bmi.n	801635a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x8e>
 8016310:	45b0      	cmp	r8, r6
 8016312:	dd22      	ble.n	801635a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x8e>
 8016314:	b31f      	cbz	r7, 801635e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x92>
 8016316:	2d00      	cmp	r5, #0
 8016318:	db1d      	blt.n	8016356 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x8a>
 801631a:	42ab      	cmp	r3, r5
 801631c:	dd1b      	ble.n	8016356 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x8a>
 801631e:	f83e 6013 	ldrh.w	r6, [lr, r3, lsl #1]
 8016322:	3501      	adds	r5, #1
 8016324:	d405      	bmi.n	8016332 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x66>
 8016326:	42ab      	cmp	r3, r5
 8016328:	dd03      	ble.n	8016332 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x66>
 801632a:	b124      	cbz	r4, 8016336 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6a>
 801632c:	3301      	adds	r3, #1
 801632e:	f83e 0013 	ldrh.w	r0, [lr, r3, lsl #1]
 8016332:	2c0f      	cmp	r4, #15
 8016334:	d801      	bhi.n	801633a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 8016336:	2f0f      	cmp	r7, #15
 8016338:	d914      	bls.n	8016364 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x98>
 801633a:	4b27      	ldr	r3, [pc, #156]	; (80163d8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x10c>)
 801633c:	4a27      	ldr	r2, [pc, #156]	; (80163dc <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x110>)
 801633e:	4828      	ldr	r0, [pc, #160]	; (80163e0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x114>)
 8016340:	f240 11ef 	movw	r1, #495	; 0x1ef
 8016344:	f002 fc52 	bl	8018bec <__assert_func>
 8016348:	4684      	mov	ip, r0
 801634a:	e7d8      	b.n	80162fe <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x32>
 801634c:	4602      	mov	r2, r0
 801634e:	4684      	mov	ip, r0
 8016350:	e7dc      	b.n	801630c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x40>
 8016352:	4602      	mov	r2, r0
 8016354:	e7da      	b.n	801630c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x40>
 8016356:	4606      	mov	r6, r0
 8016358:	e7e3      	b.n	8016322 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x56>
 801635a:	4606      	mov	r6, r0
 801635c:	e7e9      	b.n	8016332 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x66>
 801635e:	2c0f      	cmp	r4, #15
 8016360:	d8eb      	bhi.n	801633a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 8016362:	4606      	mov	r6, r0
 8016364:	ea4f 450c 	mov.w	r5, ip, lsl #16
 8016368:	fb14 f307 	smulbb	r3, r4, r7
 801636c:	f005 65fc 	and.w	r5, r5, #132120576	; 0x7e00000
 8016370:	ea4f 4e02 	mov.w	lr, r2, lsl #16
 8016374:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8016378:	10db      	asrs	r3, r3, #3
 801637a:	ea45 0c0c 	orr.w	ip, r5, ip
 801637e:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8016382:	f1c7 0510 	rsb	r5, r7, #16
 8016386:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801638a:	1b2d      	subs	r5, r5, r4
 801638c:	ea4e 0202 	orr.w	r2, lr, r2
 8016390:	ebc3 0444 	rsb	r4, r3, r4, lsl #1
 8016394:	eb03 0545 	add.w	r5, r3, r5, lsl #1
 8016398:	4354      	muls	r4, r2
 801639a:	fb05 450c 	mla	r5, r5, ip, r4
 801639e:	0404      	lsls	r4, r0, #16
 80163a0:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 80163a4:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 80163a8:	4320      	orrs	r0, r4
 80163aa:	fb03 5400 	mla	r4, r3, r0, r5
 80163ae:	0430      	lsls	r0, r6, #16
 80163b0:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 80163b4:	f426 66fc 	bic.w	r6, r6, #2016	; 0x7e0
 80163b8:	ebc3 0747 	rsb	r7, r3, r7, lsl #1
 80163bc:	4330      	orrs	r0, r6
 80163be:	fb07 4000 	mla	r0, r7, r0, r4
 80163c2:	0d43      	lsrs	r3, r0, #21
 80163c4:	0940      	lsrs	r0, r0, #5
 80163c6:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80163ca:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 80163ce:	4318      	orrs	r0, r3
 80163d0:	8008      	strh	r0, [r1, #0]
 80163d2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80163d6:	bf00      	nop
 80163d8:	0801c915 	.word	0x0801c915
 80163dc:	0801cf16 	.word	0x0801cf16
 80163e0:	0801c99d 	.word	0x0801c99d

080163e4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 80163e4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80163e8:	ed2d 8b0a 	vpush	{d8-d12}
 80163ec:	b093      	sub	sp, #76	; 0x4c
 80163ee:	461d      	mov	r5, r3
 80163f0:	9210      	str	r2, [sp, #64]	; 0x40
 80163f2:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 80163f4:	f9bd 20bc 	ldrsh.w	r2, [sp, #188]	; 0xbc
 80163f8:	9208      	str	r2, [sp, #32]
 80163fa:	e9dd 272c 	ldrd	r2, r7, [sp, #176]	; 0xb0
 80163fe:	910b      	str	r1, [sp, #44]	; 0x2c
 8016400:	6859      	ldr	r1, [r3, #4]
 8016402:	681b      	ldr	r3, [r3, #0]
 8016404:	f9bd 80b8 	ldrsh.w	r8, [sp, #184]	; 0xb8
 8016408:	9011      	str	r0, [sp, #68]	; 0x44
 801640a:	fb01 2707 	mla	r7, r1, r7, r2
 801640e:	eb03 0347 	add.w	r3, r3, r7, lsl #1
 8016412:	9307      	str	r3, [sp, #28]
 8016414:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8016416:	e9dd 4627 	ldrd	r4, r6, [sp, #156]	; 0x9c
 801641a:	681b      	ldr	r3, [r3, #0]
 801641c:	9309      	str	r3, [sp, #36]	; 0x24
 801641e:	ea4f 0348 	mov.w	r3, r8, lsl #1
 8016422:	eeb0 aa40 	vmov.f32	s20, s0
 8016426:	eef0 9a60 	vmov.f32	s19, s1
 801642a:	eeb0 9a41 	vmov.f32	s18, s2
 801642e:	eeb0 8a62 	vmov.f32	s16, s5
 8016432:	eef0 8a43 	vmov.f32	s17, s6
 8016436:	eeb0 ca44 	vmov.f32	s24, s8
 801643a:	eef0 ba64 	vmov.f32	s23, s9
 801643e:	eeb0 ba45 	vmov.f32	s22, s10
 8016442:	930a      	str	r3, [sp, #40]	; 0x28
 8016444:	eef7 aa00 	vmov.f32	s21, #112	; 0x3f800000  1.0
 8016448:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801644a:	2b00      	cmp	r3, #0
 801644c:	dc03      	bgt.n	8016456 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x72>
 801644e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8016450:	2b00      	cmp	r3, #0
 8016452:	f340 816c 	ble.w	801672e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x34a>
 8016456:	2d00      	cmp	r5, #0
 8016458:	f340 80b6 	ble.w	80165c8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1e4>
 801645c:	1422      	asrs	r2, r4, #16
 801645e:	ea4f 4326 	mov.w	r3, r6, asr #16
 8016462:	d428      	bmi.n	80164b6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xd2>
 8016464:	1c51      	adds	r1, r2, #1
 8016466:	4588      	cmp	r8, r1
 8016468:	dd27      	ble.n	80164ba <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xd6>
 801646a:	2b00      	cmp	r3, #0
 801646c:	db25      	blt.n	80164ba <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xd6>
 801646e:	9808      	ldr	r0, [sp, #32]
 8016470:	1c59      	adds	r1, r3, #1
 8016472:	4288      	cmp	r0, r1
 8016474:	dd21      	ble.n	80164ba <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xd6>
 8016476:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8016478:	1e6b      	subs	r3, r5, #1
 801647a:	fb02 4203 	mla	r2, r2, r3, r4
 801647e:	1412      	asrs	r2, r2, #16
 8016480:	d422      	bmi.n	80164c8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe4>
 8016482:	3201      	adds	r2, #1
 8016484:	4590      	cmp	r8, r2
 8016486:	dd1f      	ble.n	80164c8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe4>
 8016488:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 801648a:	fb02 6303 	mla	r3, r2, r3, r6
 801648e:	141b      	asrs	r3, r3, #16
 8016490:	d41a      	bmi.n	80164c8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe4>
 8016492:	9a08      	ldr	r2, [sp, #32]
 8016494:	3301      	adds	r3, #1
 8016496:	429a      	cmp	r2, r3
 8016498:	dd16      	ble.n	80164c8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe4>
 801649a:	f8dd b01c 	ldr.w	fp, [sp, #28]
 801649e:	46a9      	mov	r9, r5
 80164a0:	f1b9 0f00 	cmp.w	r9, #0
 80164a4:	f300 80e4 	bgt.w	8016670 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x28c>
 80164a8:	9b07      	ldr	r3, [sp, #28]
 80164aa:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 80164ae:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 80164b2:	9307      	str	r3, [sp, #28]
 80164b4:	e08a      	b.n	80165cc <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1e8>
 80164b6:	1c51      	adds	r1, r2, #1
 80164b8:	d17d      	bne.n	80165b6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d2>
 80164ba:	4542      	cmp	r2, r8
 80164bc:	da7b      	bge.n	80165b6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d2>
 80164be:	1c5a      	adds	r2, r3, #1
 80164c0:	db79      	blt.n	80165b6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d2>
 80164c2:	9a08      	ldr	r2, [sp, #32]
 80164c4:	4293      	cmp	r3, r2
 80164c6:	da76      	bge.n	80165b6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d2>
 80164c8:	f8dd 901c 	ldr.w	r9, [sp, #28]
 80164cc:	46aa      	mov	sl, r5
 80164ce:	f1ba 0f00 	cmp.w	sl, #0
 80164d2:	dde9      	ble.n	80164a8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xc4>
 80164d4:	1421      	asrs	r1, r4, #16
 80164d6:	ea4f 4226 	mov.w	r2, r6, asr #16
 80164da:	f3c4 3303 	ubfx	r3, r4, #12, #4
 80164de:	f3c6 3003 	ubfx	r0, r6, #12, #4
 80164e2:	f100 80b0 	bmi.w	8016646 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x262>
 80164e6:	f101 0c01 	add.w	ip, r1, #1
 80164ea:	45e0      	cmp	r8, ip
 80164ec:	f340 80ad 	ble.w	801664a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x266>
 80164f0:	2a00      	cmp	r2, #0
 80164f2:	f2c0 80aa 	blt.w	801664a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x266>
 80164f6:	9f08      	ldr	r7, [sp, #32]
 80164f8:	f102 0c01 	add.w	ip, r2, #1
 80164fc:	4567      	cmp	r7, ip
 80164fe:	f340 80a4 	ble.w	801664a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x266>
 8016502:	fb02 1208 	mla	r2, r2, r8, r1
 8016506:	9909      	ldr	r1, [sp, #36]	; 0x24
 8016508:	eb01 0e42 	add.w	lr, r1, r2, lsl #1
 801650c:	f831 c012 	ldrh.w	ip, [r1, r2, lsl #1]
 8016510:	f8be 1002 	ldrh.w	r1, [lr, #2]
 8016514:	b138      	cbz	r0, 8016526 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x142>
 8016516:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8016518:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 801651a:	4472      	add	r2, lr
 801651c:	f83e 7007 	ldrh.w	r7, [lr, r7]
 8016520:	8852      	ldrh	r2, [r2, #2]
 8016522:	970c      	str	r7, [sp, #48]	; 0x30
 8016524:	920d      	str	r2, [sp, #52]	; 0x34
 8016526:	ea4f 4e0c 	mov.w	lr, ip, lsl #16
 801652a:	fb13 f200 	smulbb	r2, r3, r0
 801652e:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8016532:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8016536:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 801653a:	10d2      	asrs	r2, r2, #3
 801653c:	ea4e 0c0c 	orr.w	ip, lr, ip
 8016540:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8016544:	f1c0 0e10 	rsb	lr, r0, #16
 8016548:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801654c:	ebae 0e03 	sub.w	lr, lr, r3
 8016550:	ea4b 0101 	orr.w	r1, fp, r1
 8016554:	ebc2 0343 	rsb	r3, r2, r3, lsl #1
 8016558:	4359      	muls	r1, r3
 801655a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801655c:	eb02 0e4e 	add.w	lr, r2, lr, lsl #1
 8016560:	fb0e 1e0c 	mla	lr, lr, ip, r1
 8016564:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8016568:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801656c:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8016570:	ea4c 0c03 	orr.w	ip, ip, r3
 8016574:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8016576:	990c      	ldr	r1, [sp, #48]	; 0x30
 8016578:	041b      	lsls	r3, r3, #16
 801657a:	fb02 ec0c 	mla	ip, r2, ip, lr
 801657e:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8016582:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 8016586:	ea43 030e 	orr.w	r3, r3, lr
 801658a:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 801658e:	fb02 c203 	mla	r2, r2, r3, ip
 8016592:	0d53      	lsrs	r3, r2, #21
 8016594:	0952      	lsrs	r2, r2, #5
 8016596:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801659a:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801659e:	431a      	orrs	r2, r3
 80165a0:	f8a9 2000 	strh.w	r2, [r9]
 80165a4:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80165a6:	441c      	add	r4, r3
 80165a8:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80165aa:	f109 0902 	add.w	r9, r9, #2
 80165ae:	441e      	add	r6, r3
 80165b0:	f10a 3aff 	add.w	sl, sl, #4294967295
 80165b4:	e78b      	b.n	80164ce <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xea>
 80165b6:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80165b8:	441c      	add	r4, r3
 80165ba:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80165bc:	441e      	add	r6, r3
 80165be:	9b07      	ldr	r3, [sp, #28]
 80165c0:	3302      	adds	r3, #2
 80165c2:	3d01      	subs	r5, #1
 80165c4:	9307      	str	r3, [sp, #28]
 80165c6:	e746      	b.n	8016456 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x72>
 80165c8:	f47f af55 	bne.w	8016476 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x92>
 80165cc:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80165ce:	2b00      	cmp	r3, #0
 80165d0:	f340 80ad 	ble.w	801672e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x34a>
 80165d4:	ee3a aa0c 	vadd.f32	s20, s20, s24
 80165d8:	ee79 9aab 	vadd.f32	s19, s19, s23
 80165dc:	eeca 7a8a 	vdiv.f32	s15, s21, s20
 80165e0:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80165e2:	ee39 9a0b 	vadd.f32	s18, s18, s22
 80165e6:	ee29 7aa7 	vmul.f32	s14, s19, s15
 80165ea:	eef0 6a48 	vmov.f32	s13, s16
 80165ee:	ee69 7a27 	vmul.f32	s15, s18, s15
 80165f2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80165f6:	ee37 8a48 	vsub.f32	s16, s14, s16
 80165fa:	ee16 4a90 	vmov	r4, s13
 80165fe:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8016602:	eef0 6a68 	vmov.f32	s13, s17
 8016606:	ee77 8ae8 	vsub.f32	s17, s15, s17
 801660a:	ee18 2a10 	vmov	r2, s16
 801660e:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8016612:	fb92 f3f3 	sdiv	r3, r2, r3
 8016616:	ee18 2a90 	vmov	r2, s17
 801661a:	9329      	str	r3, [sp, #164]	; 0xa4
 801661c:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801661e:	fb92 f3f3 	sdiv	r3, r2, r3
 8016622:	932a      	str	r3, [sp, #168]	; 0xa8
 8016624:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8016626:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8016628:	3b01      	subs	r3, #1
 801662a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801662e:	930b      	str	r3, [sp, #44]	; 0x2c
 8016630:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8016632:	ee16 6a90 	vmov	r6, s13
 8016636:	bf14      	ite	ne
 8016638:	461d      	movne	r5, r3
 801663a:	4615      	moveq	r5, r2
 801663c:	eef0 8a67 	vmov.f32	s17, s15
 8016640:	eeb0 8a47 	vmov.f32	s16, s14
 8016644:	e700      	b.n	8016448 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x64>
 8016646:	1c4f      	adds	r7, r1, #1
 8016648:	d1ac      	bne.n	80165a4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1c0>
 801664a:	4588      	cmp	r8, r1
 801664c:	ddaa      	ble.n	80165a4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1c0>
 801664e:	1c57      	adds	r7, r2, #1
 8016650:	dba8      	blt.n	80165a4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1c0>
 8016652:	9f08      	ldr	r7, [sp, #32]
 8016654:	4297      	cmp	r7, r2
 8016656:	dda5      	ble.n	80165a4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1c0>
 8016658:	e9cd 3003 	strd	r3, r0, [sp, #12]
 801665c:	e9cd 1201 	strd	r1, r2, [sp, #4]
 8016660:	9700      	str	r7, [sp, #0]
 8016662:	4643      	mov	r3, r8
 8016664:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8016666:	9811      	ldr	r0, [sp, #68]	; 0x44
 8016668:	4649      	mov	r1, r9
 801666a:	f7ff fe2f 	bl	80162cc <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>
 801666e:	e799      	b.n	80165a4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1c0>
 8016670:	1422      	asrs	r2, r4, #16
 8016672:	1431      	asrs	r1, r6, #16
 8016674:	fb08 2101 	mla	r1, r8, r1, r2
 8016678:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801667a:	9809      	ldr	r0, [sp, #36]	; 0x24
 801667c:	eb02 0241 	add.w	r2, r2, r1, lsl #1
 8016680:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 8016684:	f830 c011 	ldrh.w	ip, [r0, r1, lsl #1]
 8016688:	8851      	ldrh	r1, [r2, #2]
 801668a:	f3c4 3303 	ubfx	r3, r4, #12, #4
 801668e:	f1be 0f00 	cmp.w	lr, #0
 8016692:	d006      	beq.n	80166a2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2be>
 8016694:	980a      	ldr	r0, [sp, #40]	; 0x28
 8016696:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8016698:	1810      	adds	r0, r2, r0
 801669a:	5bd2      	ldrh	r2, [r2, r7]
 801669c:	920e      	str	r2, [sp, #56]	; 0x38
 801669e:	8842      	ldrh	r2, [r0, #2]
 80166a0:	920f      	str	r2, [sp, #60]	; 0x3c
 80166a2:	ea4f 400c 	mov.w	r0, ip, lsl #16
 80166a6:	fb13 f20e 	smulbb	r2, r3, lr
 80166aa:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 80166ae:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 80166b2:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 80166b6:	10d2      	asrs	r2, r2, #3
 80166b8:	ea40 000c 	orr.w	r0, r0, ip
 80166bc:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80166c0:	f1ce 0c10 	rsb	ip, lr, #16
 80166c4:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 80166c8:	ebac 0c03 	sub.w	ip, ip, r3
 80166cc:	ea4a 0101 	orr.w	r1, sl, r1
 80166d0:	ebc2 0343 	rsb	r3, r2, r3, lsl #1
 80166d4:	4359      	muls	r1, r3
 80166d6:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80166d8:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 80166dc:	fb0c 1c00 	mla	ip, ip, r0, r1
 80166e0:	ea4f 4a03 	mov.w	sl, r3, lsl #16
 80166e4:	f423 60fc 	bic.w	r0, r3, #2016	; 0x7e0
 80166e8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80166ea:	990e      	ldr	r1, [sp, #56]	; 0x38
 80166ec:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80166f0:	041b      	lsls	r3, r3, #16
 80166f2:	ea4a 0000 	orr.w	r0, sl, r0
 80166f6:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 80166fa:	f421 6afc 	bic.w	sl, r1, #2016	; 0x7e0
 80166fe:	fb02 c000 	mla	r0, r2, r0, ip
 8016702:	ea43 0a0a 	orr.w	sl, r3, sl
 8016706:	ebc2 024e 	rsb	r2, r2, lr, lsl #1
 801670a:	fb02 000a 	mla	r0, r2, sl, r0
 801670e:	0d43      	lsrs	r3, r0, #21
 8016710:	0940      	lsrs	r0, r0, #5
 8016712:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8016716:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801671a:	4318      	orrs	r0, r3
 801671c:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801671e:	f82b 0b02 	strh.w	r0, [fp], #2
 8016722:	441c      	add	r4, r3
 8016724:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8016726:	f109 39ff 	add.w	r9, r9, #4294967295
 801672a:	441e      	add	r6, r3
 801672c:	e6b8      	b.n	80164a0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xbc>
 801672e:	b013      	add	sp, #76	; 0x4c
 8016730:	ecbd 8b0a 	vpop	{d8-d12}
 8016734:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08016738 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>:
 8016738:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801673c:	8808      	ldrh	r0, [r1, #0]
 801673e:	b085      	sub	sp, #20
 8016740:	1206      	asrs	r6, r0, #8
 8016742:	e9dd c40f 	ldrd	ip, r4, [sp, #60]	; 0x3c
 8016746:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801674a:	9600      	str	r6, [sp, #0]
 801674c:	10c6      	asrs	r6, r0, #3
 801674e:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8016752:	9601      	str	r6, [sp, #4]
 8016754:	00c0      	lsls	r0, r0, #3
 8016756:	fb04 c603 	mla	r6, r4, r3, ip
 801675a:	b2c0      	uxtb	r0, r0
 801675c:	4691      	mov	r9, r2
 801675e:	eb02 0e86 	add.w	lr, r2, r6, lsl #2
 8016762:	9a00      	ldr	r2, [sp, #0]
 8016764:	9002      	str	r0, [sp, #8]
 8016766:	f040 407f 	orr.w	r0, r0, #4278190080	; 0xff000000
 801676a:	ea40 4002 	orr.w	r0, r0, r2, lsl #16
 801676e:	9a01      	ldr	r2, [sp, #4]
 8016770:	f9bd 8038 	ldrsh.w	r8, [sp, #56]	; 0x38
 8016774:	f89d 5044 	ldrb.w	r5, [sp, #68]	; 0x44
 8016778:	f89d 7048 	ldrb.w	r7, [sp, #72]	; 0x48
 801677c:	2c00      	cmp	r4, #0
 801677e:	ea40 2002 	orr.w	r0, r0, r2, lsl #8
 8016782:	db3a      	blt.n	80167fa <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xc2>
 8016784:	45a0      	cmp	r8, r4
 8016786:	dd38      	ble.n	80167fa <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xc2>
 8016788:	f1bc 0f00 	cmp.w	ip, #0
 801678c:	db33      	blt.n	80167f6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xbe>
 801678e:	4563      	cmp	r3, ip
 8016790:	dd31      	ble.n	80167f6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xbe>
 8016792:	f859 2026 	ldr.w	r2, [r9, r6, lsl #2]
 8016796:	f11c 0601 	adds.w	r6, ip, #1
 801679a:	d431      	bmi.n	8016800 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xc8>
 801679c:	42b3      	cmp	r3, r6
 801679e:	dd2f      	ble.n	8016800 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xc8>
 80167a0:	b375      	cbz	r5, 8016800 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xc8>
 80167a2:	f8de 6004 	ldr.w	r6, [lr, #4]
 80167a6:	3401      	adds	r4, #1
 80167a8:	d42e      	bmi.n	8016808 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xd0>
 80167aa:	45a0      	cmp	r8, r4
 80167ac:	dd2c      	ble.n	8016808 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xd0>
 80167ae:	b35f      	cbz	r7, 8016808 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xd0>
 80167b0:	f1bc 0f00 	cmp.w	ip, #0
 80167b4:	db26      	blt.n	8016804 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xcc>
 80167b6:	4563      	cmp	r3, ip
 80167b8:	dd24      	ble.n	8016804 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xcc>
 80167ba:	f85e 4023 	ldr.w	r4, [lr, r3, lsl #2]
 80167be:	f11c 0c01 	adds.w	ip, ip, #1
 80167c2:	d405      	bmi.n	80167d0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x98>
 80167c4:	4563      	cmp	r3, ip
 80167c6:	dd03      	ble.n	80167d0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x98>
 80167c8:	b115      	cbz	r5, 80167d0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x98>
 80167ca:	3301      	adds	r3, #1
 80167cc:	f85e 0023 	ldr.w	r0, [lr, r3, lsl #2]
 80167d0:	2d0f      	cmp	r5, #15
 80167d2:	ea4f 6b12 	mov.w	fp, r2, lsr #24
 80167d6:	ea4f 6a16 	mov.w	sl, r6, lsr #24
 80167da:	ea4f 6914 	mov.w	r9, r4, lsr #24
 80167de:	ea4f 6810 	mov.w	r8, r0, lsr #24
 80167e2:	d801      	bhi.n	80167e8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xb0>
 80167e4:	2f0f      	cmp	r7, #15
 80167e6:	d911      	bls.n	801680c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xd4>
 80167e8:	4b82      	ldr	r3, [pc, #520]	; (80169f4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x2bc>)
 80167ea:	4a83      	ldr	r2, [pc, #524]	; (80169f8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x2c0>)
 80167ec:	4883      	ldr	r0, [pc, #524]	; (80169fc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x2c4>)
 80167ee:	f240 210d 	movw	r1, #525	; 0x20d
 80167f2:	f002 f9fb 	bl	8018bec <__assert_func>
 80167f6:	4602      	mov	r2, r0
 80167f8:	e7cd      	b.n	8016796 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x5e>
 80167fa:	4606      	mov	r6, r0
 80167fc:	4602      	mov	r2, r0
 80167fe:	e7d2      	b.n	80167a6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x6e>
 8016800:	4606      	mov	r6, r0
 8016802:	e7d0      	b.n	80167a6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x6e>
 8016804:	4604      	mov	r4, r0
 8016806:	e7da      	b.n	80167be <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x86>
 8016808:	4604      	mov	r4, r0
 801680a:	e7e1      	b.n	80167d0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x98>
 801680c:	b2ab      	uxth	r3, r5
 801680e:	b2bf      	uxth	r7, r7
 8016810:	fb03 fe07 	mul.w	lr, r3, r7
 8016814:	ebce 1707 	rsb	r7, lr, r7, lsl #4
 8016818:	011b      	lsls	r3, r3, #4
 801681a:	eba3 0c0e 	sub.w	ip, r3, lr
 801681e:	b2bf      	uxth	r7, r7
 8016820:	f5c3 7580 	rsb	r5, r3, #256	; 0x100
 8016824:	fa1f fc8c 	uxth.w	ip, ip
 8016828:	1bed      	subs	r5, r5, r7
 801682a:	b2ad      	uxth	r5, r5
 801682c:	fb0c f30a 	mul.w	r3, ip, sl
 8016830:	fb05 330b 	mla	r3, r5, fp, r3
 8016834:	fb07 3309 	mla	r3, r7, r9, r3
 8016838:	fb0e 3308 	mla	r3, lr, r8, r3
 801683c:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8016840:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 8016844:	9303      	str	r3, [sp, #12]
 8016846:	d018      	beq.n	801687a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x142>
 8016848:	f002 13ff 	and.w	r3, r2, #16711935	; 0xff00ff
 801684c:	fb0b f303 	mul.w	r3, fp, r3
 8016850:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8016854:	fb0b fb02 	mul.w	fp, fp, r2
 8016858:	0a1a      	lsrs	r2, r3, #8
 801685a:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801685e:	f103 1301 	add.w	r3, r3, #65537	; 0x10001
 8016862:	441a      	add	r2, r3
 8016864:	f50b 7380 	add.w	r3, fp, #256	; 0x100
 8016868:	eb03 231b 	add.w	r3, r3, fp, lsr #8
 801686c:	0a12      	lsrs	r2, r2, #8
 801686e:	0a1b      	lsrs	r3, r3, #8
 8016870:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8016874:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8016878:	431a      	orrs	r2, r3
 801687a:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 801687e:	d019      	beq.n	80168b4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x17c>
 8016880:	f006 1bff 	and.w	fp, r6, #16711935	; 0xff00ff
 8016884:	fb0a fb0b 	mul.w	fp, sl, fp
 8016888:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 801688c:	fb0a fa06 	mul.w	sl, sl, r6
 8016890:	ea4f 261b 	mov.w	r6, fp, lsr #8
 8016894:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8016898:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801689c:	f50a 7380 	add.w	r3, sl, #256	; 0x100
 80168a0:	445e      	add	r6, fp
 80168a2:	eb03 231a 	add.w	r3, r3, sl, lsr #8
 80168a6:	0a36      	lsrs	r6, r6, #8
 80168a8:	0a1b      	lsrs	r3, r3, #8
 80168aa:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 80168ae:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80168b2:	431e      	orrs	r6, r3
 80168b4:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 80168b8:	d019      	beq.n	80168ee <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x1b6>
 80168ba:	f004 1aff 	and.w	sl, r4, #16711935	; 0xff00ff
 80168be:	fb09 fa0a 	mul.w	sl, r9, sl
 80168c2:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 80168c6:	fb09 f904 	mul.w	r9, r9, r4
 80168ca:	ea4f 241a 	mov.w	r4, sl, lsr #8
 80168ce:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 80168d2:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 80168d6:	f509 7380 	add.w	r3, r9, #256	; 0x100
 80168da:	4454      	add	r4, sl
 80168dc:	eb03 2319 	add.w	r3, r3, r9, lsr #8
 80168e0:	0a24      	lsrs	r4, r4, #8
 80168e2:	0a1b      	lsrs	r3, r3, #8
 80168e4:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 80168e8:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80168ec:	431c      	orrs	r4, r3
 80168ee:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 80168f2:	d019      	beq.n	8016928 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x1f0>
 80168f4:	f000 19ff 	and.w	r9, r0, #16711935	; 0xff00ff
 80168f8:	fb08 f909 	mul.w	r9, r8, r9
 80168fc:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8016900:	fb08 f800 	mul.w	r8, r8, r0
 8016904:	ea4f 2019 	mov.w	r0, r9, lsr #8
 8016908:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 801690c:	f109 1901 	add.w	r9, r9, #65537	; 0x10001
 8016910:	f508 7380 	add.w	r3, r8, #256	; 0x100
 8016914:	4448      	add	r0, r9
 8016916:	eb03 2318 	add.w	r3, r3, r8, lsr #8
 801691a:	0a00      	lsrs	r0, r0, #8
 801691c:	0a1b      	lsrs	r3, r3, #8
 801691e:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 8016922:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8016926:	4318      	orrs	r0, r3
 8016928:	f006 18ff 	and.w	r8, r6, #16711935	; 0xff00ff
 801692c:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8016930:	f002 13ff 	and.w	r3, r2, #16711935	; 0xff00ff
 8016934:	fb0c f808 	mul.w	r8, ip, r8
 8016938:	fb0c f606 	mul.w	r6, ip, r6
 801693c:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8016940:	fb05 6202 	mla	r2, r5, r2, r6
 8016944:	fb05 8803 	mla	r8, r5, r3, r8
 8016948:	f004 13ff 	and.w	r3, r4, #16711935	; 0xff00ff
 801694c:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 8016950:	fb07 8803 	mla	r8, r7, r3, r8
 8016954:	fb07 2704 	mla	r7, r7, r4, r2
 8016958:	f000 13ff 	and.w	r3, r0, #16711935	; 0xff00ff
 801695c:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8016960:	fb0e 8303 	mla	r3, lr, r3, r8
 8016964:	fb0e 7e00 	mla	lr, lr, r0, r7
 8016968:	0a1b      	lsrs	r3, r3, #8
 801696a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801696e:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8016972:	f89d 404c 	ldrb.w	r4, [sp, #76]	; 0x4c
 8016976:	f40e 4e7f 	and.w	lr, lr, #65280	; 0xff00
 801697a:	ea43 0e0e 	orr.w	lr, r3, lr
 801697e:	9b03      	ldr	r3, [sp, #12]
 8016980:	b2a4      	uxth	r4, r4
 8016982:	4363      	muls	r3, r4
 8016984:	1c5a      	adds	r2, r3, #1
 8016986:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 801698a:	ea6f 2212 	mvn.w	r2, r2, lsr #8
 801698e:	9b00      	ldr	r3, [sp, #0]
 8016990:	b2d2      	uxtb	r2, r2
 8016992:	ea4f 451e 	mov.w	r5, lr, lsr #16
 8016996:	fb13 f302 	smulbb	r3, r3, r2
 801699a:	fb05 3304 	mla	r3, r5, r4, r3
 801699e:	b29d      	uxth	r5, r3
 80169a0:	9b01      	ldr	r3, [sp, #4]
 80169a2:	f3ce 2007 	ubfx	r0, lr, #8, #8
 80169a6:	fb13 f302 	smulbb	r3, r3, r2
 80169aa:	fb00 3004 	mla	r0, r0, r4, r3
 80169ae:	9b02      	ldr	r3, [sp, #8]
 80169b0:	fa5f fe8e 	uxtb.w	lr, lr
 80169b4:	fb13 f202 	smulbb	r2, r3, r2
 80169b8:	fb0e 2e04 	mla	lr, lr, r4, r2
 80169bc:	fa1f fe8e 	uxth.w	lr, lr
 80169c0:	b280      	uxth	r0, r0
 80169c2:	f10e 0201 	add.w	r2, lr, #1
 80169c6:	1c6b      	adds	r3, r5, #1
 80169c8:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 80169cc:	1c42      	adds	r2, r0, #1
 80169ce:	eb03 2315 	add.w	r3, r3, r5, lsr #8
 80169d2:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 80169d6:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 80169da:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 80169de:	0952      	lsrs	r2, r2, #5
 80169e0:	ea43 030e 	orr.w	r3, r3, lr
 80169e4:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80169e8:	4313      	orrs	r3, r2
 80169ea:	800b      	strh	r3, [r1, #0]
 80169ec:	b005      	add	sp, #20
 80169ee:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80169f2:	bf00      	nop
 80169f4:	0801c915 	.word	0x0801c915
 80169f8:	0801ce6d 	.word	0x0801ce6d
 80169fc:	0801c99d 	.word	0x0801c99d

08016a00 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 8016a00:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016a04:	ed2d 8b08 	vpush	{d8-d11}
 8016a08:	b099      	sub	sp, #100	; 0x64
 8016a0a:	eeb0 aa40 	vmov.f32	s20, s0
 8016a0e:	9306      	str	r3, [sp, #24]
 8016a10:	f9bd 30c8 	ldrsh.w	r3, [sp, #200]	; 0xc8
 8016a14:	9307      	str	r3, [sp, #28]
 8016a16:	f9bd 30cc 	ldrsh.w	r3, [sp, #204]	; 0xcc
 8016a1a:	9216      	str	r2, [sp, #88]	; 0x58
 8016a1c:	9310      	str	r3, [sp, #64]	; 0x40
 8016a1e:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 8016a20:	f89d 30d4 	ldrb.w	r3, [sp, #212]	; 0xd4
 8016a24:	9113      	str	r1, [sp, #76]	; 0x4c
 8016a26:	9315      	str	r3, [sp, #84]	; 0x54
 8016a28:	e9dd 1330 	ldrd	r1, r3, [sp, #192]	; 0xc0
 8016a2c:	9017      	str	r0, [sp, #92]	; 0x5c
 8016a2e:	6850      	ldr	r0, [r2, #4]
 8016a30:	6812      	ldr	r2, [r2, #0]
 8016a32:	9c2c      	ldr	r4, [sp, #176]	; 0xb0
 8016a34:	fb00 1303 	mla	r3, r0, r3, r1
 8016a38:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8016a3c:	930a      	str	r3, [sp, #40]	; 0x28
 8016a3e:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 8016a40:	681b      	ldr	r3, [r3, #0]
 8016a42:	9312      	str	r3, [sp, #72]	; 0x48
 8016a44:	9b07      	ldr	r3, [sp, #28]
 8016a46:	009b      	lsls	r3, r3, #2
 8016a48:	eef0 9a60 	vmov.f32	s19, s1
 8016a4c:	eeb0 9a41 	vmov.f32	s18, s2
 8016a50:	eeb0 8a62 	vmov.f32	s16, s5
 8016a54:	eef0 8a43 	vmov.f32	s17, s6
 8016a58:	eef0 ba44 	vmov.f32	s23, s8
 8016a5c:	eeb0 ba64 	vmov.f32	s22, s9
 8016a60:	eef0 aa45 	vmov.f32	s21, s10
 8016a64:	930e      	str	r3, [sp, #56]	; 0x38
 8016a66:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8016a68:	2b00      	cmp	r3, #0
 8016a6a:	dc03      	bgt.n	8016a74 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x74>
 8016a6c:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8016a6e:	2b00      	cmp	r3, #0
 8016a70:	f340 8352 	ble.w	8017118 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x718>
 8016a74:	9b06      	ldr	r3, [sp, #24]
 8016a76:	2b00      	cmp	r3, #0
 8016a78:	f340 81a8 	ble.w	8016dcc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3cc>
 8016a7c:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 8016a7e:	1412      	asrs	r2, r2, #16
 8016a80:	ea4f 4324 	mov.w	r3, r4, asr #16
 8016a84:	d430      	bmi.n	8016ae8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe8>
 8016a86:	9807      	ldr	r0, [sp, #28]
 8016a88:	1c51      	adds	r1, r2, #1
 8016a8a:	4288      	cmp	r0, r1
 8016a8c:	dd2f      	ble.n	8016aee <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xee>
 8016a8e:	2b00      	cmp	r3, #0
 8016a90:	db2d      	blt.n	8016aee <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xee>
 8016a92:	9810      	ldr	r0, [sp, #64]	; 0x40
 8016a94:	1c59      	adds	r1, r3, #1
 8016a96:	4288      	cmp	r0, r1
 8016a98:	dd29      	ble.n	8016aee <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xee>
 8016a9a:	9b06      	ldr	r3, [sp, #24]
 8016a9c:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 8016a9e:	992b      	ldr	r1, [sp, #172]	; 0xac
 8016aa0:	3b01      	subs	r3, #1
 8016aa2:	fb02 1203 	mla	r2, r2, r3, r1
 8016aa6:	1412      	asrs	r2, r2, #16
 8016aa8:	d42c      	bmi.n	8016b04 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x104>
 8016aaa:	9907      	ldr	r1, [sp, #28]
 8016aac:	3201      	adds	r2, #1
 8016aae:	4291      	cmp	r1, r2
 8016ab0:	dd28      	ble.n	8016b04 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x104>
 8016ab2:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
 8016ab4:	fb02 4303 	mla	r3, r2, r3, r4
 8016ab8:	141b      	asrs	r3, r3, #16
 8016aba:	d423      	bmi.n	8016b04 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x104>
 8016abc:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8016abe:	3301      	adds	r3, #1
 8016ac0:	429a      	cmp	r2, r3
 8016ac2:	dd1f      	ble.n	8016b04 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x104>
 8016ac4:	9b06      	ldr	r3, [sp, #24]
 8016ac6:	f8dd a028 	ldr.w	sl, [sp, #40]	; 0x28
 8016aca:	f8bd b054 	ldrh.w	fp, [sp, #84]	; 0x54
 8016ace:	9311      	str	r3, [sp, #68]	; 0x44
 8016ad0:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8016ad2:	2b00      	cmp	r3, #0
 8016ad4:	f300 81e3 	bgt.w	8016e9e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x49e>
 8016ad8:	9b06      	ldr	r3, [sp, #24]
 8016ada:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8016ade:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8016ae0:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 8016ae4:	930a      	str	r3, [sp, #40]	; 0x28
 8016ae6:	e173      	b.n	8016dd0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3d0>
 8016ae8:	1c51      	adds	r1, r2, #1
 8016aea:	f040 8162 	bne.w	8016db2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3b2>
 8016aee:	9907      	ldr	r1, [sp, #28]
 8016af0:	428a      	cmp	r2, r1
 8016af2:	f280 815e 	bge.w	8016db2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3b2>
 8016af6:	1c5f      	adds	r7, r3, #1
 8016af8:	f2c0 815b 	blt.w	8016db2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3b2>
 8016afc:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8016afe:	4293      	cmp	r3, r2
 8016b00:	f280 8157 	bge.w	8016db2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3b2>
 8016b04:	9b06      	ldr	r3, [sp, #24]
 8016b06:	9314      	str	r3, [sp, #80]	; 0x50
 8016b08:	f8bd 7054 	ldrh.w	r7, [sp, #84]	; 0x54
 8016b0c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8016b0e:	9311      	str	r3, [sp, #68]	; 0x44
 8016b10:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8016b12:	2b00      	cmp	r3, #0
 8016b14:	dde0      	ble.n	8016ad8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xd8>
 8016b16:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 8016b18:	f3c2 3003 	ubfx	r0, r2, #12, #4
 8016b1c:	1412      	asrs	r2, r2, #16
 8016b1e:	ea4f 4324 	mov.w	r3, r4, asr #16
 8016b22:	f3c4 3103 	ubfx	r1, r4, #12, #4
 8016b26:	f100 81a1 	bmi.w	8016e6c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x46c>
 8016b2a:	9e07      	ldr	r6, [sp, #28]
 8016b2c:	1c55      	adds	r5, r2, #1
 8016b2e:	42ae      	cmp	r6, r5
 8016b30:	f340 819e 	ble.w	8016e70 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x470>
 8016b34:	2b00      	cmp	r3, #0
 8016b36:	f2c0 819b 	blt.w	8016e70 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x470>
 8016b3a:	9e10      	ldr	r6, [sp, #64]	; 0x40
 8016b3c:	1c5d      	adds	r5, r3, #1
 8016b3e:	42ae      	cmp	r6, r5
 8016b40:	f340 8196 	ble.w	8016e70 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x470>
 8016b44:	9d07      	ldr	r5, [sp, #28]
 8016b46:	fb03 2305 	mla	r3, r3, r5, r2
 8016b4a:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8016b4c:	eb02 0583 	add.w	r5, r2, r3, lsl #2
 8016b50:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8016b54:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 8016b58:	2800      	cmp	r0, #0
 8016b5a:	f000 8178 	beq.w	8016e4e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x44e>
 8016b5e:	686a      	ldr	r2, [r5, #4]
 8016b60:	920b      	str	r2, [sp, #44]	; 0x2c
 8016b62:	ea4f 6812 	mov.w	r8, r2, lsr #24
 8016b66:	2900      	cmp	r1, #0
 8016b68:	f000 817a 	beq.w	8016e60 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x460>
 8016b6c:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8016b6e:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 8016b70:	18aa      	adds	r2, r5, r2
 8016b72:	59ad      	ldr	r5, [r5, r6]
 8016b74:	6852      	ldr	r2, [r2, #4]
 8016b76:	9508      	str	r5, [sp, #32]
 8016b78:	ea4f 6a15 	mov.w	sl, r5, lsr #24
 8016b7c:	920c      	str	r2, [sp, #48]	; 0x30
 8016b7e:	0e15      	lsrs	r5, r2, #24
 8016b80:	b280      	uxth	r0, r0
 8016b82:	b289      	uxth	r1, r1
 8016b84:	fb00 fb01 	mul.w	fp, r0, r1
 8016b88:	ebcb 1101 	rsb	r1, fp, r1, lsl #4
 8016b8c:	0100      	lsls	r0, r0, #4
 8016b8e:	eba0 090b 	sub.w	r9, r0, fp
 8016b92:	b289      	uxth	r1, r1
 8016b94:	f5c0 7280 	rsb	r2, r0, #256	; 0x100
 8016b98:	fa1f f989 	uxth.w	r9, r9
 8016b9c:	1a52      	subs	r2, r2, r1
 8016b9e:	b292      	uxth	r2, r2
 8016ba0:	fb09 f008 	mul.w	r0, r9, r8
 8016ba4:	fb02 000c 	mla	r0, r2, ip, r0
 8016ba8:	fb01 000a 	mla	r0, r1, sl, r0
 8016bac:	fb0b 0005 	mla	r0, fp, r5, r0
 8016bb0:	f3c0 2007 	ubfx	r0, r0, #8, #8
 8016bb4:	2800      	cmp	r0, #0
 8016bb6:	f000 80ef 	beq.w	8016d98 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x398>
 8016bba:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8016bbe:	d01b      	beq.n	8016bf8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1f8>
 8016bc0:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 8016bc4:	fb0c fe0e 	mul.w	lr, ip, lr
 8016bc8:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8016bcc:	fb0c fc03 	mul.w	ip, ip, r3
 8016bd0:	ea4f 231e 	mov.w	r3, lr, lsr #8
 8016bd4:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8016bd8:	f10e 1e01 	add.w	lr, lr, #65537	; 0x10001
 8016bdc:	4473      	add	r3, lr
 8016bde:	f50c 7e80 	add.w	lr, ip, #256	; 0x100
 8016be2:	eb0e 2e1c 	add.w	lr, lr, ip, lsr #8
 8016be6:	0a1b      	lsrs	r3, r3, #8
 8016be8:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8016bec:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8016bf0:	f40e 4e7f 	and.w	lr, lr, #65280	; 0xff00
 8016bf4:	ea43 030e 	orr.w	r3, r3, lr
 8016bf8:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8016bfc:	d01e      	beq.n	8016c3c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x23c>
 8016bfe:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
 8016c00:	f006 1cff 	and.w	ip, r6, #16711935	; 0xff00ff
 8016c04:	fb08 fc0c 	mul.w	ip, r8, ip
 8016c08:	f406 4e7f 	and.w	lr, r6, #65280	; 0xff00
 8016c0c:	fb08 f80e 	mul.w	r8, r8, lr
 8016c10:	ea4f 2e1c 	mov.w	lr, ip, lsr #8
 8016c14:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8016c18:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8016c1c:	44e6      	add	lr, ip
 8016c1e:	f508 7c80 	add.w	ip, r8, #256	; 0x100
 8016c22:	eb0c 2818 	add.w	r8, ip, r8, lsr #8
 8016c26:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8016c2a:	ea4f 2818 	mov.w	r8, r8, lsr #8
 8016c2e:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8016c32:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 8016c36:	ea4e 0608 	orr.w	r6, lr, r8
 8016c3a:	960b      	str	r6, [sp, #44]	; 0x2c
 8016c3c:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 8016c40:	d01e      	beq.n	8016c80 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x280>
 8016c42:	9e08      	ldr	r6, [sp, #32]
 8016c44:	f006 18ff 	and.w	r8, r6, #16711935	; 0xff00ff
 8016c48:	fb0a f808 	mul.w	r8, sl, r8
 8016c4c:	f406 4c7f 	and.w	ip, r6, #65280	; 0xff00
 8016c50:	fb0a fa0c 	mul.w	sl, sl, ip
 8016c54:	ea4f 2e18 	mov.w	lr, r8, lsr #8
 8016c58:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8016c5c:	f108 1801 	add.w	r8, r8, #65537	; 0x10001
 8016c60:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8016c64:	44c6      	add	lr, r8
 8016c66:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8016c6a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8016c6e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8016c72:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8016c76:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8016c7a:	ea4e 060a 	orr.w	r6, lr, sl
 8016c7e:	9608      	str	r6, [sp, #32]
 8016c80:	2dff      	cmp	r5, #255	; 0xff
 8016c82:	d01d      	beq.n	8016cc0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2c0>
 8016c84:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 8016c86:	f006 18ff 	and.w	r8, r6, #16711935	; 0xff00ff
 8016c8a:	fb05 f808 	mul.w	r8, r5, r8
 8016c8e:	f406 4c7f 	and.w	ip, r6, #65280	; 0xff00
 8016c92:	fb05 f50c 	mul.w	r5, r5, ip
 8016c96:	ea4f 2e18 	mov.w	lr, r8, lsr #8
 8016c9a:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8016c9e:	f108 1801 	add.w	r8, r8, #65537	; 0x10001
 8016ca2:	f505 7c80 	add.w	ip, r5, #256	; 0x100
 8016ca6:	44c6      	add	lr, r8
 8016ca8:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 8016cac:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8016cb0:	0a2d      	lsrs	r5, r5, #8
 8016cb2:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8016cb6:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 8016cba:	ea4e 0505 	orr.w	r5, lr, r5
 8016cbe:	950c      	str	r5, [sp, #48]	; 0x30
 8016cc0:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8016cc2:	9e08      	ldr	r6, [sp, #32]
 8016cc4:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8016cc8:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 8016ccc:	fb09 f505 	mul.w	r5, r9, r5
 8016cd0:	fb02 550c 	mla	r5, r2, ip, r5
 8016cd4:	f006 1cff 	and.w	ip, r6, #16711935	; 0xff00ff
 8016cd8:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 8016cda:	fb01 550c 	mla	r5, r1, ip, r5
 8016cde:	f006 1cff 	and.w	ip, r6, #16711935	; 0xff00ff
 8016ce2:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
 8016ce4:	fb0b 550c 	mla	r5, fp, ip, r5
 8016ce8:	f406 4c7f 	and.w	ip, r6, #65280	; 0xff00
 8016cec:	fb09 f90c 	mul.w	r9, r9, ip
 8016cf0:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8016cf4:	fb02 9303 	mla	r3, r2, r3, r9
 8016cf8:	9a08      	ldr	r2, [sp, #32]
 8016cfa:	f402 4e7f 	and.w	lr, r2, #65280	; 0xff00
 8016cfe:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8016d00:	fb01 330e 	mla	r3, r1, lr, r3
 8016d04:	f402 417f 	and.w	r1, r2, #65280	; 0xff00
 8016d08:	fb0b 3b01 	mla	fp, fp, r1, r3
 8016d0c:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8016d0e:	0a2d      	lsrs	r5, r5, #8
 8016d10:	f8b3 c000 	ldrh.w	ip, [r3]
 8016d14:	ea4f 2b1b 	mov.w	fp, fp, lsr #8
 8016d18:	fb00 f307 	mul.w	r3, r0, r7
 8016d1c:	1c58      	adds	r0, r3, #1
 8016d1e:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8016d22:	f40b 4b7f 	and.w	fp, fp, #65280	; 0xff00
 8016d26:	ea45 050b 	orr.w	r5, r5, fp
 8016d2a:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8016d2e:	0c29      	lsrs	r1, r5, #16
 8016d30:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 8016d34:	ea4f 232c 	mov.w	r3, ip, asr #8
 8016d38:	b2c0      	uxtb	r0, r0
 8016d3a:	fb11 f107 	smulbb	r1, r1, r7
 8016d3e:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8016d42:	fb03 1300 	mla	r3, r3, r0, r1
 8016d46:	b299      	uxth	r1, r3
 8016d48:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8016d4c:	f3c5 2307 	ubfx	r3, r5, #8, #8
 8016d50:	fb13 f307 	smulbb	r3, r3, r7
 8016d54:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8016d58:	fb02 3200 	mla	r2, r2, r0, r3
 8016d5c:	b2ed      	uxtb	r5, r5
 8016d5e:	ea4f 03cc 	mov.w	r3, ip, lsl #3
 8016d62:	b2db      	uxtb	r3, r3
 8016d64:	fb15 f507 	smulbb	r5, r5, r7
 8016d68:	fb03 5500 	mla	r5, r3, r0, r5
 8016d6c:	b292      	uxth	r2, r2
 8016d6e:	b2ad      	uxth	r5, r5
 8016d70:	1c4b      	adds	r3, r1, #1
 8016d72:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 8016d76:	1c68      	adds	r0, r5, #1
 8016d78:	1c51      	adds	r1, r2, #1
 8016d7a:	eb00 2515 	add.w	r5, r0, r5, lsr #8
 8016d7e:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8016d82:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 8016d86:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8016d8a:	0952      	lsrs	r2, r2, #5
 8016d8c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8016d90:	432b      	orrs	r3, r5
 8016d92:	4313      	orrs	r3, r2
 8016d94:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8016d96:	8013      	strh	r3, [r2, #0]
 8016d98:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8016d9a:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 8016d9c:	3302      	adds	r3, #2
 8016d9e:	9311      	str	r3, [sp, #68]	; 0x44
 8016da0:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8016da2:	4413      	add	r3, r2
 8016da4:	932b      	str	r3, [sp, #172]	; 0xac
 8016da6:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8016da8:	441c      	add	r4, r3
 8016daa:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8016dac:	3b01      	subs	r3, #1
 8016dae:	9314      	str	r3, [sp, #80]	; 0x50
 8016db0:	e6ae      	b.n	8016b10 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x110>
 8016db2:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8016db4:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 8016db6:	4413      	add	r3, r2
 8016db8:	932b      	str	r3, [sp, #172]	; 0xac
 8016dba:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8016dbc:	441c      	add	r4, r3
 8016dbe:	9b06      	ldr	r3, [sp, #24]
 8016dc0:	3b01      	subs	r3, #1
 8016dc2:	9306      	str	r3, [sp, #24]
 8016dc4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8016dc6:	3302      	adds	r3, #2
 8016dc8:	930a      	str	r3, [sp, #40]	; 0x28
 8016dca:	e653      	b.n	8016a74 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x74>
 8016dcc:	f47f ae65 	bne.w	8016a9a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9a>
 8016dd0:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8016dd2:	2b00      	cmp	r3, #0
 8016dd4:	f340 81a0 	ble.w	8017118 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x718>
 8016dd8:	ee3a aa2b 	vadd.f32	s20, s20, s23
 8016ddc:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8016de0:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 8016de4:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8016de6:	ee79 9a8b 	vadd.f32	s19, s19, s22
 8016dea:	ee39 9a2a 	vadd.f32	s18, s18, s21
 8016dee:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8016df2:	eef0 6a48 	vmov.f32	s13, s16
 8016df6:	ee69 7a27 	vmul.f32	s15, s18, s15
 8016dfa:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8016dfe:	ee37 8a48 	vsub.f32	s16, s14, s16
 8016e02:	edcd 6a2b 	vstr	s13, [sp, #172]	; 0xac
 8016e06:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8016e0a:	eef0 6a68 	vmov.f32	s13, s17
 8016e0e:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8016e12:	ee18 2a10 	vmov	r2, s16
 8016e16:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8016e1a:	fb92 f3f3 	sdiv	r3, r2, r3
 8016e1e:	ee18 2a90 	vmov	r2, s17
 8016e22:	932d      	str	r3, [sp, #180]	; 0xb4
 8016e24:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8016e26:	fb92 f3f3 	sdiv	r3, r2, r3
 8016e2a:	932e      	str	r3, [sp, #184]	; 0xb8
 8016e2c:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8016e2e:	9a16      	ldr	r2, [sp, #88]	; 0x58
 8016e30:	3b01      	subs	r3, #1
 8016e32:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8016e36:	9313      	str	r3, [sp, #76]	; 0x4c
 8016e38:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8016e3a:	bf08      	it	eq
 8016e3c:	4613      	moveq	r3, r2
 8016e3e:	ee16 4a90 	vmov	r4, s13
 8016e42:	9306      	str	r3, [sp, #24]
 8016e44:	eef0 8a67 	vmov.f32	s17, s15
 8016e48:	eeb0 8a47 	vmov.f32	s16, s14
 8016e4c:	e60b      	b.n	8016a66 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x66>
 8016e4e:	b151      	cbz	r1, 8016e66 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x466>
 8016e50:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8016e52:	58aa      	ldr	r2, [r5, r2]
 8016e54:	9208      	str	r2, [sp, #32]
 8016e56:	ea4f 6a12 	mov.w	sl, r2, lsr #24
 8016e5a:	25ff      	movs	r5, #255	; 0xff
 8016e5c:	46a8      	mov	r8, r5
 8016e5e:	e68f      	b.n	8016b80 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x180>
 8016e60:	25ff      	movs	r5, #255	; 0xff
 8016e62:	46aa      	mov	sl, r5
 8016e64:	e68c      	b.n	8016b80 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x180>
 8016e66:	25ff      	movs	r5, #255	; 0xff
 8016e68:	46aa      	mov	sl, r5
 8016e6a:	e7f7      	b.n	8016e5c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x45c>
 8016e6c:	1c56      	adds	r6, r2, #1
 8016e6e:	d193      	bne.n	8016d98 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x398>
 8016e70:	9d07      	ldr	r5, [sp, #28]
 8016e72:	4295      	cmp	r5, r2
 8016e74:	dd90      	ble.n	8016d98 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x398>
 8016e76:	1c5d      	adds	r5, r3, #1
 8016e78:	db8e      	blt.n	8016d98 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x398>
 8016e7a:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8016e7c:	429d      	cmp	r5, r3
 8016e7e:	dd8b      	ble.n	8016d98 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x398>
 8016e80:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8016e82:	9201      	str	r2, [sp, #4]
 8016e84:	e9cd 3002 	strd	r3, r0, [sp, #8]
 8016e88:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8016e8a:	9300      	str	r3, [sp, #0]
 8016e8c:	e9cd 1504 	strd	r1, r5, [sp, #16]
 8016e90:	9b07      	ldr	r3, [sp, #28]
 8016e92:	9817      	ldr	r0, [sp, #92]	; 0x5c
 8016e94:	e9dd 1211 	ldrd	r1, r2, [sp, #68]	; 0x44
 8016e98:	f7ff fc4e 	bl	8016738 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>
 8016e9c:	e77c      	b.n	8016d98 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x398>
 8016e9e:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8016ea0:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 8016ea2:	9d07      	ldr	r5, [sp, #28]
 8016ea4:	1412      	asrs	r2, r2, #16
 8016ea6:	f3c3 3103 	ubfx	r1, r3, #12, #4
 8016eaa:	1423      	asrs	r3, r4, #16
 8016eac:	fb05 2303 	mla	r3, r5, r3, r2
 8016eb0:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8016eb2:	eb02 0583 	add.w	r5, r2, r3, lsl #2
 8016eb6:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8016eba:	f3c4 3003 	ubfx	r0, r4, #12, #4
 8016ebe:	0e1e      	lsrs	r6, r3, #24
 8016ec0:	2900      	cmp	r1, #0
 8016ec2:	f000 811a 	beq.w	80170fa <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6fa>
 8016ec6:	686a      	ldr	r2, [r5, #4]
 8016ec8:	920d      	str	r2, [sp, #52]	; 0x34
 8016eca:	ea4f 6c12 	mov.w	ip, r2, lsr #24
 8016ece:	2800      	cmp	r0, #0
 8016ed0:	f000 811c 	beq.w	801710c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x70c>
 8016ed4:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8016ed6:	9f0e      	ldr	r7, [sp, #56]	; 0x38
 8016ed8:	18aa      	adds	r2, r5, r2
 8016eda:	59ed      	ldr	r5, [r5, r7]
 8016edc:	6852      	ldr	r2, [r2, #4]
 8016ede:	9509      	str	r5, [sp, #36]	; 0x24
 8016ee0:	ea4f 6815 	mov.w	r8, r5, lsr #24
 8016ee4:	920f      	str	r2, [sp, #60]	; 0x3c
 8016ee6:	0e15      	lsrs	r5, r2, #24
 8016ee8:	b289      	uxth	r1, r1
 8016eea:	b280      	uxth	r0, r0
 8016eec:	fb01 f900 	mul.w	r9, r1, r0
 8016ef0:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 8016ef4:	0109      	lsls	r1, r1, #4
 8016ef6:	eba1 0e09 	sub.w	lr, r1, r9
 8016efa:	b280      	uxth	r0, r0
 8016efc:	f5c1 7280 	rsb	r2, r1, #256	; 0x100
 8016f00:	fa1f fe8e 	uxth.w	lr, lr
 8016f04:	1a12      	subs	r2, r2, r0
 8016f06:	b292      	uxth	r2, r2
 8016f08:	fb0e f10c 	mul.w	r1, lr, ip
 8016f0c:	fb02 1106 	mla	r1, r2, r6, r1
 8016f10:	fb00 1108 	mla	r1, r0, r8, r1
 8016f14:	fb09 1105 	mla	r1, r9, r5, r1
 8016f18:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8016f1c:	2900      	cmp	r1, #0
 8016f1e:	f000 80e0 	beq.w	80170e2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6e2>
 8016f22:	2eff      	cmp	r6, #255	; 0xff
 8016f24:	d016      	beq.n	8016f54 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x554>
 8016f26:	f003 17ff 	and.w	r7, r3, #16711935	; 0xff00ff
 8016f2a:	4377      	muls	r7, r6
 8016f2c:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8016f30:	435e      	muls	r6, r3
 8016f32:	0a3b      	lsrs	r3, r7, #8
 8016f34:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8016f38:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8016f3c:	443b      	add	r3, r7
 8016f3e:	f506 7780 	add.w	r7, r6, #256	; 0x100
 8016f42:	eb07 2716 	add.w	r7, r7, r6, lsr #8
 8016f46:	0a1b      	lsrs	r3, r3, #8
 8016f48:	0a3f      	lsrs	r7, r7, #8
 8016f4a:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8016f4e:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 8016f52:	433b      	orrs	r3, r7
 8016f54:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8016f58:	d01d      	beq.n	8016f96 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x596>
 8016f5a:	9e0d      	ldr	r6, [sp, #52]	; 0x34
 8016f5c:	9f0d      	ldr	r7, [sp, #52]	; 0x34
 8016f5e:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8016f62:	fb0c f606 	mul.w	r6, ip, r6
 8016f66:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 8016f6a:	fb0c fc07 	mul.w	ip, ip, r7
 8016f6e:	0a37      	lsrs	r7, r6, #8
 8016f70:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8016f74:	f106 1601 	add.w	r6, r6, #65537	; 0x10001
 8016f78:	4437      	add	r7, r6
 8016f7a:	f50c 7680 	add.w	r6, ip, #256	; 0x100
 8016f7e:	eb06 2c1c 	add.w	ip, r6, ip, lsr #8
 8016f82:	0a3f      	lsrs	r7, r7, #8
 8016f84:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8016f88:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8016f8c:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8016f90:	ea47 060c 	orr.w	r6, r7, ip
 8016f94:	960d      	str	r6, [sp, #52]	; 0x34
 8016f96:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8016f9a:	d01d      	beq.n	8016fd8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x5d8>
 8016f9c:	9e09      	ldr	r6, [sp, #36]	; 0x24
 8016f9e:	f006 1cff 	and.w	ip, r6, #16711935	; 0xff00ff
 8016fa2:	fb08 fc0c 	mul.w	ip, r8, ip
 8016fa6:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8016faa:	fb08 f806 	mul.w	r8, r8, r6
 8016fae:	ea4f 271c 	mov.w	r7, ip, lsr #8
 8016fb2:	f508 7680 	add.w	r6, r8, #256	; 0x100
 8016fb6:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8016fba:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8016fbe:	eb06 2818 	add.w	r8, r6, r8, lsr #8
 8016fc2:	4467      	add	r7, ip
 8016fc4:	0a3f      	lsrs	r7, r7, #8
 8016fc6:	ea4f 2818 	mov.w	r8, r8, lsr #8
 8016fca:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8016fce:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 8016fd2:	ea47 0608 	orr.w	r6, r7, r8
 8016fd6:	9609      	str	r6, [sp, #36]	; 0x24
 8016fd8:	2dff      	cmp	r5, #255	; 0xff
 8016fda:	d01a      	beq.n	8017012 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x612>
 8016fdc:	9e0f      	ldr	r6, [sp, #60]	; 0x3c
 8016fde:	f006 1cff 	and.w	ip, r6, #16711935	; 0xff00ff
 8016fe2:	fb05 fc0c 	mul.w	ip, r5, ip
 8016fe6:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8016fea:	4375      	muls	r5, r6
 8016fec:	ea4f 271c 	mov.w	r7, ip, lsr #8
 8016ff0:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8016ff4:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8016ff8:	f505 7680 	add.w	r6, r5, #256	; 0x100
 8016ffc:	4467      	add	r7, ip
 8016ffe:	eb06 2515 	add.w	r5, r6, r5, lsr #8
 8017002:	0a3f      	lsrs	r7, r7, #8
 8017004:	0a2d      	lsrs	r5, r5, #8
 8017006:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 801700a:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 801700e:	433d      	orrs	r5, r7
 8017010:	950f      	str	r5, [sp, #60]	; 0x3c
 8017012:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8017014:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8017018:	f003 16ff 	and.w	r6, r3, #16711935	; 0xff00ff
 801701c:	fb0e f505 	mul.w	r5, lr, r5
 8017020:	fb02 5506 	mla	r5, r2, r6, r5
 8017024:	9e09      	ldr	r6, [sp, #36]	; 0x24
 8017026:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 801702a:	fb00 5506 	mla	r5, r0, r6, r5
 801702e:	9e0f      	ldr	r6, [sp, #60]	; 0x3c
 8017030:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8017034:	fb09 5506 	mla	r5, r9, r6, r5
 8017038:	9e0d      	ldr	r6, [sp, #52]	; 0x34
 801703a:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 801703e:	fb0e fe06 	mul.w	lr, lr, r6
 8017042:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8017046:	fb02 e303 	mla	r3, r2, r3, lr
 801704a:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801704c:	f402 477f 	and.w	r7, r2, #65280	; 0xff00
 8017050:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8017052:	fb00 3307 	mla	r3, r0, r7, r3
 8017056:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 801705a:	fb09 3c0c 	mla	ip, r9, ip, r3
 801705e:	fb01 f10b 	mul.w	r1, r1, fp
 8017062:	0a2d      	lsrs	r5, r5, #8
 8017064:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8017068:	f8ba 0000 	ldrh.w	r0, [sl]
 801706c:	1c4b      	adds	r3, r1, #1
 801706e:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8017072:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8017076:	ea45 050c 	orr.w	r5, r5, ip
 801707a:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 801707e:	1202      	asrs	r2, r0, #8
 8017080:	0c2b      	lsrs	r3, r5, #16
 8017082:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 8017086:	b2c9      	uxtb	r1, r1
 8017088:	fb13 f30b 	smulbb	r3, r3, fp
 801708c:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8017090:	fb02 3201 	mla	r2, r2, r1, r3
 8017094:	f3c5 2607 	ubfx	r6, r5, #8, #8
 8017098:	10c3      	asrs	r3, r0, #3
 801709a:	b2ed      	uxtb	r5, r5
 801709c:	00c0      	lsls	r0, r0, #3
 801709e:	b2c0      	uxtb	r0, r0
 80170a0:	fb15 f50b 	smulbb	r5, r5, fp
 80170a4:	fb00 5001 	mla	r0, r0, r1, r5
 80170a8:	b292      	uxth	r2, r2
 80170aa:	fb16 f60b 	smulbb	r6, r6, fp
 80170ae:	b280      	uxth	r0, r0
 80170b0:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 80170b4:	fb03 6301 	mla	r3, r3, r1, r6
 80170b8:	1c51      	adds	r1, r2, #1
 80170ba:	1c46      	adds	r6, r0, #1
 80170bc:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 80170c0:	eb06 2610 	add.w	r6, r6, r0, lsr #8
 80170c4:	b29b      	uxth	r3, r3
 80170c6:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 80170ca:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 80170ce:	4332      	orrs	r2, r6
 80170d0:	1c5e      	adds	r6, r3, #1
 80170d2:	eb06 2313 	add.w	r3, r6, r3, lsr #8
 80170d6:	095b      	lsrs	r3, r3, #5
 80170d8:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80170dc:	431a      	orrs	r2, r3
 80170de:	f8aa 2000 	strh.w	r2, [sl]
 80170e2:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 80170e4:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 80170e6:	4413      	add	r3, r2
 80170e8:	932b      	str	r3, [sp, #172]	; 0xac
 80170ea:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 80170ec:	441c      	add	r4, r3
 80170ee:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80170f0:	3b01      	subs	r3, #1
 80170f2:	f10a 0a02 	add.w	sl, sl, #2
 80170f6:	9311      	str	r3, [sp, #68]	; 0x44
 80170f8:	e4ea      	b.n	8016ad0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xd0>
 80170fa:	b150      	cbz	r0, 8017112 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x712>
 80170fc:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 80170fe:	58aa      	ldr	r2, [r5, r2]
 8017100:	9209      	str	r2, [sp, #36]	; 0x24
 8017102:	ea4f 6812 	mov.w	r8, r2, lsr #24
 8017106:	25ff      	movs	r5, #255	; 0xff
 8017108:	46ac      	mov	ip, r5
 801710a:	e6ed      	b.n	8016ee8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4e8>
 801710c:	25ff      	movs	r5, #255	; 0xff
 801710e:	46a8      	mov	r8, r5
 8017110:	e6ea      	b.n	8016ee8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4e8>
 8017112:	25ff      	movs	r5, #255	; 0xff
 8017114:	46a8      	mov	r8, r5
 8017116:	e7f7      	b.n	8017108 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x708>
 8017118:	b019      	add	sp, #100	; 0x64
 801711a:	ecbd 8b08 	vpop	{d8-d11}
 801711e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

08017124 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>:
 8017124:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017128:	8808      	ldrh	r0, [r1, #0]
 801712a:	b085      	sub	sp, #20
 801712c:	1206      	asrs	r6, r0, #8
 801712e:	e9dd c40f 	ldrd	ip, r4, [sp, #60]	; 0x3c
 8017132:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8017136:	9600      	str	r6, [sp, #0]
 8017138:	10c6      	asrs	r6, r0, #3
 801713a:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801713e:	9601      	str	r6, [sp, #4]
 8017140:	00c0      	lsls	r0, r0, #3
 8017142:	fb04 c603 	mla	r6, r4, r3, ip
 8017146:	b2c0      	uxtb	r0, r0
 8017148:	4691      	mov	r9, r2
 801714a:	eb02 0e86 	add.w	lr, r2, r6, lsl #2
 801714e:	9a00      	ldr	r2, [sp, #0]
 8017150:	9002      	str	r0, [sp, #8]
 8017152:	f040 407f 	orr.w	r0, r0, #4278190080	; 0xff000000
 8017156:	ea40 4002 	orr.w	r0, r0, r2, lsl #16
 801715a:	9a01      	ldr	r2, [sp, #4]
 801715c:	f9bd 8038 	ldrsh.w	r8, [sp, #56]	; 0x38
 8017160:	f89d 5044 	ldrb.w	r5, [sp, #68]	; 0x44
 8017164:	f89d 7048 	ldrb.w	r7, [sp, #72]	; 0x48
 8017168:	2c00      	cmp	r4, #0
 801716a:	ea40 2002 	orr.w	r0, r0, r2, lsl #8
 801716e:	db3a      	blt.n	80171e6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xc2>
 8017170:	45a0      	cmp	r8, r4
 8017172:	dd38      	ble.n	80171e6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xc2>
 8017174:	f1bc 0f00 	cmp.w	ip, #0
 8017178:	db33      	blt.n	80171e2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xbe>
 801717a:	4563      	cmp	r3, ip
 801717c:	dd31      	ble.n	80171e2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xbe>
 801717e:	f859 2026 	ldr.w	r2, [r9, r6, lsl #2]
 8017182:	f11c 0601 	adds.w	r6, ip, #1
 8017186:	d431      	bmi.n	80171ec <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xc8>
 8017188:	42b3      	cmp	r3, r6
 801718a:	dd2f      	ble.n	80171ec <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xc8>
 801718c:	b375      	cbz	r5, 80171ec <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xc8>
 801718e:	f8de 6004 	ldr.w	r6, [lr, #4]
 8017192:	3401      	adds	r4, #1
 8017194:	d42e      	bmi.n	80171f4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xd0>
 8017196:	45a0      	cmp	r8, r4
 8017198:	dd2c      	ble.n	80171f4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xd0>
 801719a:	b35f      	cbz	r7, 80171f4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xd0>
 801719c:	f1bc 0f00 	cmp.w	ip, #0
 80171a0:	db26      	blt.n	80171f0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xcc>
 80171a2:	4563      	cmp	r3, ip
 80171a4:	dd24      	ble.n	80171f0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xcc>
 80171a6:	f85e 4023 	ldr.w	r4, [lr, r3, lsl #2]
 80171aa:	f11c 0c01 	adds.w	ip, ip, #1
 80171ae:	d405      	bmi.n	80171bc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x98>
 80171b0:	4563      	cmp	r3, ip
 80171b2:	dd03      	ble.n	80171bc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x98>
 80171b4:	b115      	cbz	r5, 80171bc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x98>
 80171b6:	3301      	adds	r3, #1
 80171b8:	f85e 0023 	ldr.w	r0, [lr, r3, lsl #2]
 80171bc:	2d0f      	cmp	r5, #15
 80171be:	ea4f 6b12 	mov.w	fp, r2, lsr #24
 80171c2:	ea4f 6a16 	mov.w	sl, r6, lsr #24
 80171c6:	ea4f 6914 	mov.w	r9, r4, lsr #24
 80171ca:	ea4f 6810 	mov.w	r8, r0, lsr #24
 80171ce:	d801      	bhi.n	80171d4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xb0>
 80171d0:	2f0f      	cmp	r7, #15
 80171d2:	d911      	bls.n	80171f8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xd4>
 80171d4:	4b7b      	ldr	r3, [pc, #492]	; (80173c4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x2a0>)
 80171d6:	4a7c      	ldr	r2, [pc, #496]	; (80173c8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x2a4>)
 80171d8:	487c      	ldr	r0, [pc, #496]	; (80173cc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x2a8>)
 80171da:	f240 210d 	movw	r1, #525	; 0x20d
 80171de:	f001 fd05 	bl	8018bec <__assert_func>
 80171e2:	4602      	mov	r2, r0
 80171e4:	e7cd      	b.n	8017182 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x5e>
 80171e6:	4606      	mov	r6, r0
 80171e8:	4602      	mov	r2, r0
 80171ea:	e7d2      	b.n	8017192 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x6e>
 80171ec:	4606      	mov	r6, r0
 80171ee:	e7d0      	b.n	8017192 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x6e>
 80171f0:	4604      	mov	r4, r0
 80171f2:	e7da      	b.n	80171aa <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x86>
 80171f4:	4604      	mov	r4, r0
 80171f6:	e7e1      	b.n	80171bc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x98>
 80171f8:	b2ab      	uxth	r3, r5
 80171fa:	b2bf      	uxth	r7, r7
 80171fc:	fb03 fe07 	mul.w	lr, r3, r7
 8017200:	ebce 1707 	rsb	r7, lr, r7, lsl #4
 8017204:	011b      	lsls	r3, r3, #4
 8017206:	eba3 0c0e 	sub.w	ip, r3, lr
 801720a:	b2bf      	uxth	r7, r7
 801720c:	f5c3 7580 	rsb	r5, r3, #256	; 0x100
 8017210:	fa1f fc8c 	uxth.w	ip, ip
 8017214:	1bed      	subs	r5, r5, r7
 8017216:	b2ad      	uxth	r5, r5
 8017218:	fb0c f30a 	mul.w	r3, ip, sl
 801721c:	fb05 330b 	mla	r3, r5, fp, r3
 8017220:	fb07 3309 	mla	r3, r7, r9, r3
 8017224:	fb0e 3308 	mla	r3, lr, r8, r3
 8017228:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801722c:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 8017230:	9303      	str	r3, [sp, #12]
 8017232:	d018      	beq.n	8017266 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x142>
 8017234:	f002 13ff 	and.w	r3, r2, #16711935	; 0xff00ff
 8017238:	fb0b f303 	mul.w	r3, fp, r3
 801723c:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8017240:	fb0b fb02 	mul.w	fp, fp, r2
 8017244:	0a1a      	lsrs	r2, r3, #8
 8017246:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801724a:	f103 1301 	add.w	r3, r3, #65537	; 0x10001
 801724e:	441a      	add	r2, r3
 8017250:	f50b 7380 	add.w	r3, fp, #256	; 0x100
 8017254:	eb03 231b 	add.w	r3, r3, fp, lsr #8
 8017258:	0a12      	lsrs	r2, r2, #8
 801725a:	0a1b      	lsrs	r3, r3, #8
 801725c:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8017260:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8017264:	431a      	orrs	r2, r3
 8017266:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 801726a:	d019      	beq.n	80172a0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x17c>
 801726c:	f006 1bff 	and.w	fp, r6, #16711935	; 0xff00ff
 8017270:	fb0a fb0b 	mul.w	fp, sl, fp
 8017274:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8017278:	fb0a fa06 	mul.w	sl, sl, r6
 801727c:	ea4f 261b 	mov.w	r6, fp, lsr #8
 8017280:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8017284:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8017288:	f50a 7380 	add.w	r3, sl, #256	; 0x100
 801728c:	445e      	add	r6, fp
 801728e:	eb03 231a 	add.w	r3, r3, sl, lsr #8
 8017292:	0a36      	lsrs	r6, r6, #8
 8017294:	0a1b      	lsrs	r3, r3, #8
 8017296:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 801729a:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801729e:	431e      	orrs	r6, r3
 80172a0:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 80172a4:	d019      	beq.n	80172da <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x1b6>
 80172a6:	f004 1aff 	and.w	sl, r4, #16711935	; 0xff00ff
 80172aa:	fb09 fa0a 	mul.w	sl, r9, sl
 80172ae:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 80172b2:	fb09 f904 	mul.w	r9, r9, r4
 80172b6:	ea4f 241a 	mov.w	r4, sl, lsr #8
 80172ba:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 80172be:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 80172c2:	f509 7380 	add.w	r3, r9, #256	; 0x100
 80172c6:	4454      	add	r4, sl
 80172c8:	eb03 2319 	add.w	r3, r3, r9, lsr #8
 80172cc:	0a24      	lsrs	r4, r4, #8
 80172ce:	0a1b      	lsrs	r3, r3, #8
 80172d0:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 80172d4:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80172d8:	431c      	orrs	r4, r3
 80172da:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 80172de:	d019      	beq.n	8017314 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x1f0>
 80172e0:	f000 19ff 	and.w	r9, r0, #16711935	; 0xff00ff
 80172e4:	fb08 f909 	mul.w	r9, r8, r9
 80172e8:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 80172ec:	fb08 f800 	mul.w	r8, r8, r0
 80172f0:	ea4f 2019 	mov.w	r0, r9, lsr #8
 80172f4:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 80172f8:	f109 1901 	add.w	r9, r9, #65537	; 0x10001
 80172fc:	f508 7380 	add.w	r3, r8, #256	; 0x100
 8017300:	4448      	add	r0, r9
 8017302:	eb03 2318 	add.w	r3, r3, r8, lsr #8
 8017306:	0a00      	lsrs	r0, r0, #8
 8017308:	0a1b      	lsrs	r3, r3, #8
 801730a:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 801730e:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8017312:	4318      	orrs	r0, r3
 8017314:	f006 18ff 	and.w	r8, r6, #16711935	; 0xff00ff
 8017318:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 801731c:	f002 13ff 	and.w	r3, r2, #16711935	; 0xff00ff
 8017320:	fb0c f808 	mul.w	r8, ip, r8
 8017324:	fb0c f606 	mul.w	r6, ip, r6
 8017328:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801732c:	fb05 8803 	mla	r8, r5, r3, r8
 8017330:	fb05 6202 	mla	r2, r5, r2, r6
 8017334:	f004 13ff 	and.w	r3, r4, #16711935	; 0xff00ff
 8017338:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 801733c:	fb07 8803 	mla	r8, r7, r3, r8
 8017340:	fb07 2704 	mla	r7, r7, r4, r2
 8017344:	f000 13ff 	and.w	r3, r0, #16711935	; 0xff00ff
 8017348:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 801734c:	fb0e 8303 	mla	r3, lr, r3, r8
 8017350:	fb0e 7e00 	mla	lr, lr, r0, r7
 8017354:	0a1b      	lsrs	r3, r3, #8
 8017356:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801735a:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801735e:	f40e 4e7f 	and.w	lr, lr, #65280	; 0xff00
 8017362:	ea43 0e0e 	orr.w	lr, r3, lr
 8017366:	9b03      	ldr	r3, [sp, #12]
 8017368:	9800      	ldr	r0, [sp, #0]
 801736a:	9c01      	ldr	r4, [sp, #4]
 801736c:	9a02      	ldr	r2, [sp, #8]
 801736e:	43db      	mvns	r3, r3
 8017370:	b2db      	uxtb	r3, r3
 8017372:	4358      	muls	r0, r3
 8017374:	435c      	muls	r4, r3
 8017376:	435a      	muls	r2, r3
 8017378:	1c43      	adds	r3, r0, #1
 801737a:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801737e:	ea4f 431e 	mov.w	r3, lr, lsr #16
 8017382:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8017386:	4b12      	ldr	r3, [pc, #72]	; (80173d0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x2ac>)
 8017388:	ea03 2300 	and.w	r3, r3, r0, lsl #8
 801738c:	1c50      	adds	r0, r2, #1
 801738e:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 8017392:	fa5f f28e 	uxtb.w	r2, lr
 8017396:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 801739a:	ea43 03d2 	orr.w	r3, r3, r2, lsr #3
 801739e:	1c62      	adds	r2, r4, #1
 80173a0:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 80173a4:	f3ce 2e07 	ubfx	lr, lr, #8, #8
 80173a8:	eb0e 2e12 	add.w	lr, lr, r2, lsr #8
 80173ac:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80173b0:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 80173b4:	ea43 0e0e 	orr.w	lr, r3, lr
 80173b8:	f8a1 e000 	strh.w	lr, [r1]
 80173bc:	b005      	add	sp, #20
 80173be:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80173c2:	bf00      	nop
 80173c4:	0801c915 	.word	0x0801c915
 80173c8:	0801ce6d 	.word	0x0801ce6d
 80173cc:	0801c99d 	.word	0x0801c99d
 80173d0:	fffff800 	.word	0xfffff800

080173d4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 80173d4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80173d8:	ed2d 8b08 	vpush	{d8-d11}
 80173dc:	b097      	sub	sp, #92	; 0x5c
 80173de:	eeb0 aa40 	vmov.f32	s20, s0
 80173e2:	9306      	str	r3, [sp, #24]
 80173e4:	f9bd 30c0 	ldrsh.w	r3, [sp, #192]	; 0xc0
 80173e8:	9307      	str	r3, [sp, #28]
 80173ea:	9214      	str	r2, [sp, #80]	; 0x50
 80173ec:	f9bd 30c4 	ldrsh.w	r3, [sp, #196]	; 0xc4
 80173f0:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 80173f2:	9112      	str	r1, [sp, #72]	; 0x48
 80173f4:	9310      	str	r3, [sp, #64]	; 0x40
 80173f6:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	; 0xb8
 80173fa:	9015      	str	r0, [sp, #84]	; 0x54
 80173fc:	6850      	ldr	r0, [r2, #4]
 80173fe:	6812      	ldr	r2, [r2, #0]
 8017400:	9d2a      	ldr	r5, [sp, #168]	; 0xa8
 8017402:	fb00 1303 	mla	r3, r0, r3, r1
 8017406:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801740a:	930a      	str	r3, [sp, #40]	; 0x28
 801740c:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 801740e:	681b      	ldr	r3, [r3, #0]
 8017410:	9311      	str	r3, [sp, #68]	; 0x44
 8017412:	9b07      	ldr	r3, [sp, #28]
 8017414:	009b      	lsls	r3, r3, #2
 8017416:	eef0 9a60 	vmov.f32	s19, s1
 801741a:	eeb0 9a41 	vmov.f32	s18, s2
 801741e:	eeb0 8a62 	vmov.f32	s16, s5
 8017422:	eef0 8a43 	vmov.f32	s17, s6
 8017426:	eef0 ba44 	vmov.f32	s23, s8
 801742a:	eeb0 ba64 	vmov.f32	s22, s9
 801742e:	eef0 aa45 	vmov.f32	s21, s10
 8017432:	930e      	str	r3, [sp, #56]	; 0x38
 8017434:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8017436:	2b00      	cmp	r3, #0
 8017438:	dc03      	bgt.n	8017442 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6e>
 801743a:	9b14      	ldr	r3, [sp, #80]	; 0x50
 801743c:	2b00      	cmp	r3, #0
 801743e:	f340 8361 	ble.w	8017b04 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x730>
 8017442:	9b06      	ldr	r3, [sp, #24]
 8017444:	2b00      	cmp	r3, #0
 8017446:	f340 819b 	ble.w	8017780 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3ac>
 801744a:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 801744c:	1412      	asrs	r2, r2, #16
 801744e:	ea4f 4325 	mov.w	r3, r5, asr #16
 8017452:	d42e      	bmi.n	80174b2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xde>
 8017454:	9807      	ldr	r0, [sp, #28]
 8017456:	1c51      	adds	r1, r2, #1
 8017458:	4288      	cmp	r0, r1
 801745a:	dd2d      	ble.n	80174b8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe4>
 801745c:	2b00      	cmp	r3, #0
 801745e:	db2b      	blt.n	80174b8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe4>
 8017460:	9810      	ldr	r0, [sp, #64]	; 0x40
 8017462:	1c59      	adds	r1, r3, #1
 8017464:	4288      	cmp	r0, r1
 8017466:	dd27      	ble.n	80174b8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe4>
 8017468:	9b06      	ldr	r3, [sp, #24]
 801746a:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 801746c:	9929      	ldr	r1, [sp, #164]	; 0xa4
 801746e:	3b01      	subs	r3, #1
 8017470:	fb02 1203 	mla	r2, r2, r3, r1
 8017474:	1412      	asrs	r2, r2, #16
 8017476:	d42a      	bmi.n	80174ce <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfa>
 8017478:	9907      	ldr	r1, [sp, #28]
 801747a:	3201      	adds	r2, #1
 801747c:	4291      	cmp	r1, r2
 801747e:	dd26      	ble.n	80174ce <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfa>
 8017480:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 8017482:	fb02 5303 	mla	r3, r2, r3, r5
 8017486:	141b      	asrs	r3, r3, #16
 8017488:	d421      	bmi.n	80174ce <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfa>
 801748a:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801748c:	3301      	adds	r3, #1
 801748e:	429a      	cmp	r2, r3
 8017490:	dd1d      	ble.n	80174ce <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfa>
 8017492:	9b06      	ldr	r3, [sp, #24]
 8017494:	f8dd a028 	ldr.w	sl, [sp, #40]	; 0x28
 8017498:	9313      	str	r3, [sp, #76]	; 0x4c
 801749a:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801749c:	2b00      	cmp	r3, #0
 801749e:	f300 81e3 	bgt.w	8017868 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x494>
 80174a2:	9b06      	ldr	r3, [sp, #24]
 80174a4:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 80174a8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80174aa:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 80174ae:	930a      	str	r3, [sp, #40]	; 0x28
 80174b0:	e168      	b.n	8017784 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3b0>
 80174b2:	1c51      	adds	r1, r2, #1
 80174b4:	f040 8157 	bne.w	8017766 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x392>
 80174b8:	9907      	ldr	r1, [sp, #28]
 80174ba:	428a      	cmp	r2, r1
 80174bc:	f280 8153 	bge.w	8017766 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x392>
 80174c0:	1c5f      	adds	r7, r3, #1
 80174c2:	f2c0 8150 	blt.w	8017766 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x392>
 80174c6:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80174c8:	4293      	cmp	r3, r2
 80174ca:	f280 814c 	bge.w	8017766 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x392>
 80174ce:	9b06      	ldr	r3, [sp, #24]
 80174d0:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 80174d2:	9313      	str	r3, [sp, #76]	; 0x4c
 80174d4:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 80174d6:	2b00      	cmp	r3, #0
 80174d8:	dde3      	ble.n	80174a2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xce>
 80174da:	9929      	ldr	r1, [sp, #164]	; 0xa4
 80174dc:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 80174de:	1409      	asrs	r1, r1, #16
 80174e0:	ea4f 4325 	mov.w	r3, r5, asr #16
 80174e4:	f3c2 3203 	ubfx	r2, r2, #12, #4
 80174e8:	f3c5 3003 	ubfx	r0, r5, #12, #4
 80174ec:	f100 81a3 	bmi.w	8017836 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x462>
 80174f0:	9c07      	ldr	r4, [sp, #28]
 80174f2:	1c4e      	adds	r6, r1, #1
 80174f4:	42b4      	cmp	r4, r6
 80174f6:	f340 81a0 	ble.w	801783a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x466>
 80174fa:	2b00      	cmp	r3, #0
 80174fc:	f2c0 819d 	blt.w	801783a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x466>
 8017500:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8017502:	1c5e      	adds	r6, r3, #1
 8017504:	42b4      	cmp	r4, r6
 8017506:	f340 8198 	ble.w	801783a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x466>
 801750a:	9c07      	ldr	r4, [sp, #28]
 801750c:	fb03 1304 	mla	r3, r3, r4, r1
 8017510:	9911      	ldr	r1, [sp, #68]	; 0x44
 8017512:	eb01 0683 	add.w	r6, r1, r3, lsl #2
 8017516:	f851 3023 	ldr.w	r3, [r1, r3, lsl #2]
 801751a:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 801751e:	2a00      	cmp	r2, #0
 8017520:	f000 816f 	beq.w	8017802 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x42e>
 8017524:	6871      	ldr	r1, [r6, #4]
 8017526:	910b      	str	r1, [sp, #44]	; 0x2c
 8017528:	ea4f 6811 	mov.w	r8, r1, lsr #24
 801752c:	2800      	cmp	r0, #0
 801752e:	f000 8171 	beq.w	8017814 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x440>
 8017532:	990e      	ldr	r1, [sp, #56]	; 0x38
 8017534:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8017536:	1871      	adds	r1, r6, r1
 8017538:	5934      	ldr	r4, [r6, r4]
 801753a:	6849      	ldr	r1, [r1, #4]
 801753c:	9408      	str	r4, [sp, #32]
 801753e:	ea4f 6a14 	mov.w	sl, r4, lsr #24
 8017542:	910c      	str	r1, [sp, #48]	; 0x30
 8017544:	0e0e      	lsrs	r6, r1, #24
 8017546:	b292      	uxth	r2, r2
 8017548:	b280      	uxth	r0, r0
 801754a:	fb02 fb00 	mul.w	fp, r2, r0
 801754e:	ebcb 1000 	rsb	r0, fp, r0, lsl #4
 8017552:	0112      	lsls	r2, r2, #4
 8017554:	eba2 090b 	sub.w	r9, r2, fp
 8017558:	b280      	uxth	r0, r0
 801755a:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 801755e:	fa1f f989 	uxth.w	r9, r9
 8017562:	1a09      	subs	r1, r1, r0
 8017564:	b289      	uxth	r1, r1
 8017566:	fb09 f208 	mul.w	r2, r9, r8
 801756a:	fb01 220c 	mla	r2, r1, ip, r2
 801756e:	fb00 220a 	mla	r2, r0, sl, r2
 8017572:	fb0b 2206 	mla	r2, fp, r6, r2
 8017576:	f3c2 2207 	ubfx	r2, r2, #8, #8
 801757a:	2a00      	cmp	r2, #0
 801757c:	f000 80e8 	beq.w	8017750 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x37c>
 8017580:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8017584:	d01b      	beq.n	80175be <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1ea>
 8017586:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 801758a:	fb0c fe0e 	mul.w	lr, ip, lr
 801758e:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8017592:	fb0c fc03 	mul.w	ip, ip, r3
 8017596:	ea4f 231e 	mov.w	r3, lr, lsr #8
 801759a:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801759e:	f10e 1e01 	add.w	lr, lr, #65537	; 0x10001
 80175a2:	4473      	add	r3, lr
 80175a4:	f50c 7e80 	add.w	lr, ip, #256	; 0x100
 80175a8:	eb0e 2e1c 	add.w	lr, lr, ip, lsr #8
 80175ac:	0a1b      	lsrs	r3, r3, #8
 80175ae:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80175b2:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80175b6:	f40e 4e7f 	and.w	lr, lr, #65280	; 0xff00
 80175ba:	ea43 030e 	orr.w	r3, r3, lr
 80175be:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 80175c2:	d01e      	beq.n	8017602 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x22e>
 80175c4:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 80175c6:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 80175ca:	fb08 fc0c 	mul.w	ip, r8, ip
 80175ce:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
 80175d2:	fb08 f80e 	mul.w	r8, r8, lr
 80175d6:	ea4f 2e1c 	mov.w	lr, ip, lsr #8
 80175da:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80175de:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 80175e2:	44e6      	add	lr, ip
 80175e4:	f508 7c80 	add.w	ip, r8, #256	; 0x100
 80175e8:	eb0c 2818 	add.w	r8, ip, r8, lsr #8
 80175ec:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80175f0:	ea4f 2818 	mov.w	r8, r8, lsr #8
 80175f4:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80175f8:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 80175fc:	ea4e 0408 	orr.w	r4, lr, r8
 8017600:	940b      	str	r4, [sp, #44]	; 0x2c
 8017602:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 8017606:	d01e      	beq.n	8017646 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x272>
 8017608:	9c08      	ldr	r4, [sp, #32]
 801760a:	f004 18ff 	and.w	r8, r4, #16711935	; 0xff00ff
 801760e:	fb0a f808 	mul.w	r8, sl, r8
 8017612:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 8017616:	fb0a fa0c 	mul.w	sl, sl, ip
 801761a:	ea4f 2e18 	mov.w	lr, r8, lsr #8
 801761e:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8017622:	f108 1801 	add.w	r8, r8, #65537	; 0x10001
 8017626:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801762a:	44c6      	add	lr, r8
 801762c:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8017630:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8017634:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8017638:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801763c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8017640:	ea4e 040a 	orr.w	r4, lr, sl
 8017644:	9408      	str	r4, [sp, #32]
 8017646:	2eff      	cmp	r6, #255	; 0xff
 8017648:	d01d      	beq.n	8017686 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2b2>
 801764a:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 801764c:	f004 18ff 	and.w	r8, r4, #16711935	; 0xff00ff
 8017650:	fb06 f808 	mul.w	r8, r6, r8
 8017654:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 8017658:	fb06 f60c 	mul.w	r6, r6, ip
 801765c:	ea4f 2e18 	mov.w	lr, r8, lsr #8
 8017660:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8017664:	f108 1801 	add.w	r8, r8, #65537	; 0x10001
 8017668:	f506 7c80 	add.w	ip, r6, #256	; 0x100
 801766c:	44c6      	add	lr, r8
 801766e:	eb0c 2616 	add.w	r6, ip, r6, lsr #8
 8017672:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8017676:	0a36      	lsrs	r6, r6, #8
 8017678:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801767c:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8017680:	ea4e 0406 	orr.w	r4, lr, r6
 8017684:	940c      	str	r4, [sp, #48]	; 0x30
 8017686:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8017688:	f004 16ff 	and.w	r6, r4, #16711935	; 0xff00ff
 801768c:	9c08      	ldr	r4, [sp, #32]
 801768e:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 8017692:	fb09 f606 	mul.w	r6, r9, r6
 8017696:	fb01 660c 	mla	r6, r1, ip, r6
 801769a:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801769e:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 80176a0:	fb00 660c 	mla	r6, r0, ip, r6
 80176a4:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 80176a8:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 80176aa:	fb0b 660c 	mla	r6, fp, ip, r6
 80176ae:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 80176b2:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80176b6:	fb09 f90c 	mul.w	r9, r9, ip
 80176ba:	fb01 9303 	mla	r3, r1, r3, r9
 80176be:	9908      	ldr	r1, [sp, #32]
 80176c0:	f401 4e7f 	and.w	lr, r1, #65280	; 0xff00
 80176c4:	990c      	ldr	r1, [sp, #48]	; 0x30
 80176c6:	fb00 330e 	mla	r3, r0, lr, r3
 80176ca:	f401 407f 	and.w	r0, r1, #65280	; 0xff00
 80176ce:	fb0b 3b00 	mla	fp, fp, r0, r3
 80176d2:	0a36      	lsrs	r6, r6, #8
 80176d4:	ea4f 2b1b 	mov.w	fp, fp, lsr #8
 80176d8:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 80176dc:	f40b 4b7f 	and.w	fp, fp, #65280	; 0xff00
 80176e0:	ea46 060b 	orr.w	r6, r6, fp
 80176e4:	2aff      	cmp	r2, #255	; 0xff
 80176e6:	ea4f 2316 	mov.w	r3, r6, lsr #8
 80176ea:	f000 8099 	beq.w	8017820 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x44c>
 80176ee:	8839      	ldrh	r1, [r7, #0]
 80176f0:	43d2      	mvns	r2, r2
 80176f2:	ea4f 2c21 	mov.w	ip, r1, asr #8
 80176f6:	fa5f fe82 	uxtb.w	lr, r2
 80176fa:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80176fe:	fb0c fc0e 	mul.w	ip, ip, lr
 8017702:	10c8      	asrs	r0, r1, #3
 8017704:	00ca      	lsls	r2, r1, #3
 8017706:	f10c 0101 	add.w	r1, ip, #1
 801770a:	eb01 211c 	add.w	r1, r1, ip, lsr #8
 801770e:	ea4f 4c16 	mov.w	ip, r6, lsr #16
 8017712:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 8017716:	b2d2      	uxtb	r2, r2
 8017718:	4952      	ldr	r1, [pc, #328]	; (8017864 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x490>)
 801771a:	fb02 f20e 	mul.w	r2, r2, lr
 801771e:	ea01 2c0c 	and.w	ip, r1, ip, lsl #8
 8017722:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8017726:	1c51      	adds	r1, r2, #1
 8017728:	fb00 f00e 	mul.w	r0, r0, lr
 801772c:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8017730:	b2f6      	uxtb	r6, r6
 8017732:	eb06 2612 	add.w	r6, r6, r2, lsr #8
 8017736:	1c42      	adds	r2, r0, #1
 8017738:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801773c:	b2db      	uxtb	r3, r3
 801773e:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8017742:	00db      	lsls	r3, r3, #3
 8017744:	ea4c 06d6 	orr.w	r6, ip, r6, lsr #3
 8017748:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801774c:	431e      	orrs	r6, r3
 801774e:	803e      	strh	r6, [r7, #0]
 8017750:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8017752:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8017754:	441a      	add	r2, r3
 8017756:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8017758:	9229      	str	r2, [sp, #164]	; 0xa4
 801775a:	441d      	add	r5, r3
 801775c:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801775e:	3b01      	subs	r3, #1
 8017760:	3702      	adds	r7, #2
 8017762:	9313      	str	r3, [sp, #76]	; 0x4c
 8017764:	e6b6      	b.n	80174d4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x100>
 8017766:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8017768:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 801776a:	441a      	add	r2, r3
 801776c:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801776e:	9229      	str	r2, [sp, #164]	; 0xa4
 8017770:	441d      	add	r5, r3
 8017772:	9b06      	ldr	r3, [sp, #24]
 8017774:	3b01      	subs	r3, #1
 8017776:	9306      	str	r3, [sp, #24]
 8017778:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801777a:	3302      	adds	r3, #2
 801777c:	930a      	str	r3, [sp, #40]	; 0x28
 801777e:	e660      	b.n	8017442 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6e>
 8017780:	f47f ae72 	bne.w	8017468 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x94>
 8017784:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8017786:	2b00      	cmp	r3, #0
 8017788:	f340 81bc 	ble.w	8017b04 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x730>
 801778c:	ee3a aa2b 	vadd.f32	s20, s20, s23
 8017790:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8017794:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 8017798:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801779a:	ee79 9a8b 	vadd.f32	s19, s19, s22
 801779e:	ee39 9a2a 	vadd.f32	s18, s18, s21
 80177a2:	ee29 7aa7 	vmul.f32	s14, s19, s15
 80177a6:	eef0 6a48 	vmov.f32	s13, s16
 80177aa:	ee69 7a27 	vmul.f32	s15, s18, s15
 80177ae:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80177b2:	ee37 8a48 	vsub.f32	s16, s14, s16
 80177b6:	edcd 6a29 	vstr	s13, [sp, #164]	; 0xa4
 80177ba:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 80177be:	eef0 6a68 	vmov.f32	s13, s17
 80177c2:	ee77 8ae8 	vsub.f32	s17, s15, s17
 80177c6:	ee18 2a10 	vmov	r2, s16
 80177ca:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 80177ce:	fb92 f3f3 	sdiv	r3, r2, r3
 80177d2:	ee18 2a90 	vmov	r2, s17
 80177d6:	932b      	str	r3, [sp, #172]	; 0xac
 80177d8:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80177da:	fb92 f3f3 	sdiv	r3, r2, r3
 80177de:	932c      	str	r3, [sp, #176]	; 0xb0
 80177e0:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80177e2:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80177e4:	3b01      	subs	r3, #1
 80177e6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80177ea:	9312      	str	r3, [sp, #72]	; 0x48
 80177ec:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80177ee:	bf08      	it	eq
 80177f0:	4613      	moveq	r3, r2
 80177f2:	ee16 5a90 	vmov	r5, s13
 80177f6:	9306      	str	r3, [sp, #24]
 80177f8:	eef0 8a67 	vmov.f32	s17, s15
 80177fc:	eeb0 8a47 	vmov.f32	s16, s14
 8017800:	e618      	b.n	8017434 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x60>
 8017802:	b150      	cbz	r0, 801781a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x446>
 8017804:	990e      	ldr	r1, [sp, #56]	; 0x38
 8017806:	5871      	ldr	r1, [r6, r1]
 8017808:	9108      	str	r1, [sp, #32]
 801780a:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 801780e:	26ff      	movs	r6, #255	; 0xff
 8017810:	46b0      	mov	r8, r6
 8017812:	e698      	b.n	8017546 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x172>
 8017814:	26ff      	movs	r6, #255	; 0xff
 8017816:	46b2      	mov	sl, r6
 8017818:	e695      	b.n	8017546 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x172>
 801781a:	26ff      	movs	r6, #255	; 0xff
 801781c:	46b2      	mov	sl, r6
 801781e:	e7f7      	b.n	8017810 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x43c>
 8017820:	0972      	lsrs	r2, r6, #5
 8017822:	f423 63ff 	bic.w	r3, r3, #2040	; 0x7f8
 8017826:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801782a:	f023 0307 	bic.w	r3, r3, #7
 801782e:	4313      	orrs	r3, r2
 8017830:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 8017834:	e78a      	b.n	801774c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x378>
 8017836:	1c4e      	adds	r6, r1, #1
 8017838:	d18a      	bne.n	8017750 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x37c>
 801783a:	9c07      	ldr	r4, [sp, #28]
 801783c:	428c      	cmp	r4, r1
 801783e:	dd87      	ble.n	8017750 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x37c>
 8017840:	1c5c      	adds	r4, r3, #1
 8017842:	db85      	blt.n	8017750 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x37c>
 8017844:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8017846:	429c      	cmp	r4, r3
 8017848:	dd82      	ble.n	8017750 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x37c>
 801784a:	e9cd 2003 	strd	r2, r0, [sp, #12]
 801784e:	e9cd 1301 	strd	r1, r3, [sp, #4]
 8017852:	9400      	str	r4, [sp, #0]
 8017854:	9b07      	ldr	r3, [sp, #28]
 8017856:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8017858:	9815      	ldr	r0, [sp, #84]	; 0x54
 801785a:	4639      	mov	r1, r7
 801785c:	f7ff fc62 	bl	8017124 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>
 8017860:	e776      	b.n	8017750 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x37c>
 8017862:	bf00      	nop
 8017864:	fffff800 	.word	0xfffff800
 8017868:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801786a:	9929      	ldr	r1, [sp, #164]	; 0xa4
 801786c:	9c07      	ldr	r4, [sp, #28]
 801786e:	1409      	asrs	r1, r1, #16
 8017870:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8017874:	142b      	asrs	r3, r5, #16
 8017876:	fb04 1303 	mla	r3, r4, r3, r1
 801787a:	9911      	ldr	r1, [sp, #68]	; 0x44
 801787c:	eb01 0683 	add.w	r6, r1, r3, lsl #2
 8017880:	f851 3023 	ldr.w	r3, [r1, r3, lsl #2]
 8017884:	f3c5 3003 	ubfx	r0, r5, #12, #4
 8017888:	0e1f      	lsrs	r7, r3, #24
 801788a:	2a00      	cmp	r2, #0
 801788c:	f000 811d 	beq.w	8017aca <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6f6>
 8017890:	6871      	ldr	r1, [r6, #4]
 8017892:	910d      	str	r1, [sp, #52]	; 0x34
 8017894:	ea4f 6e11 	mov.w	lr, r1, lsr #24
 8017898:	2800      	cmp	r0, #0
 801789a:	f000 811f 	beq.w	8017adc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x708>
 801789e:	990e      	ldr	r1, [sp, #56]	; 0x38
 80178a0:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 80178a2:	1871      	adds	r1, r6, r1
 80178a4:	5934      	ldr	r4, [r6, r4]
 80178a6:	6849      	ldr	r1, [r1, #4]
 80178a8:	9409      	str	r4, [sp, #36]	; 0x24
 80178aa:	ea4f 6914 	mov.w	r9, r4, lsr #24
 80178ae:	910f      	str	r1, [sp, #60]	; 0x3c
 80178b0:	0e0e      	lsrs	r6, r1, #24
 80178b2:	b292      	uxth	r2, r2
 80178b4:	b280      	uxth	r0, r0
 80178b6:	fb02 fb00 	mul.w	fp, r2, r0
 80178ba:	ebcb 1000 	rsb	r0, fp, r0, lsl #4
 80178be:	0112      	lsls	r2, r2, #4
 80178c0:	eba2 080b 	sub.w	r8, r2, fp
 80178c4:	b280      	uxth	r0, r0
 80178c6:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 80178ca:	fa1f f888 	uxth.w	r8, r8
 80178ce:	1a09      	subs	r1, r1, r0
 80178d0:	b289      	uxth	r1, r1
 80178d2:	fb08 f20e 	mul.w	r2, r8, lr
 80178d6:	fb01 2207 	mla	r2, r1, r7, r2
 80178da:	fb00 2209 	mla	r2, r0, r9, r2
 80178de:	fb0b 2206 	mla	r2, fp, r6, r2
 80178e2:	f3c2 2207 	ubfx	r2, r2, #8, #8
 80178e6:	2a00      	cmp	r2, #0
 80178e8:	f000 80e3 	beq.w	8017ab2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6de>
 80178ec:	2fff      	cmp	r7, #255	; 0xff
 80178ee:	d01a      	beq.n	8017926 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x552>
 80178f0:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 80178f4:	fb07 fc0c 	mul.w	ip, r7, ip
 80178f8:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80178fc:	435f      	muls	r7, r3
 80178fe:	ea4f 231c 	mov.w	r3, ip, lsr #8
 8017902:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8017906:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801790a:	4463      	add	r3, ip
 801790c:	f507 7c80 	add.w	ip, r7, #256	; 0x100
 8017910:	eb0c 2c17 	add.w	ip, ip, r7, lsr #8
 8017914:	0a1b      	lsrs	r3, r3, #8
 8017916:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801791a:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801791e:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8017922:	ea43 030c 	orr.w	r3, r3, ip
 8017926:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 801792a:	d01e      	beq.n	801796a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x596>
 801792c:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801792e:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8017932:	fb0e f707 	mul.w	r7, lr, r7
 8017936:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 801793a:	fb0e fe0c 	mul.w	lr, lr, ip
 801793e:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8017942:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8017946:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801794a:	44bc      	add	ip, r7
 801794c:	f50e 7780 	add.w	r7, lr, #256	; 0x100
 8017950:	eb07 2e1e 	add.w	lr, r7, lr, lsr #8
 8017954:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8017958:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801795c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8017960:	f40e 4e7f 	and.w	lr, lr, #65280	; 0xff00
 8017964:	ea4c 040e 	orr.w	r4, ip, lr
 8017968:	940d      	str	r4, [sp, #52]	; 0x34
 801796a:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801796e:	d01e      	beq.n	80179ae <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x5da>
 8017970:	9c09      	ldr	r4, [sp, #36]	; 0x24
 8017972:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 8017976:	fb09 fe0e 	mul.w	lr, r9, lr
 801797a:	f404 477f 	and.w	r7, r4, #65280	; 0xff00
 801797e:	fb09 f907 	mul.w	r9, r9, r7
 8017982:	ea4f 2c1e 	mov.w	ip, lr, lsr #8
 8017986:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801798a:	f10e 1e01 	add.w	lr, lr, #65537	; 0x10001
 801798e:	f509 7780 	add.w	r7, r9, #256	; 0x100
 8017992:	44f4      	add	ip, lr
 8017994:	eb07 2919 	add.w	r9, r7, r9, lsr #8
 8017998:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801799c:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80179a0:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80179a4:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 80179a8:	ea4c 0409 	orr.w	r4, ip, r9
 80179ac:	9409      	str	r4, [sp, #36]	; 0x24
 80179ae:	2eff      	cmp	r6, #255	; 0xff
 80179b0:	d01c      	beq.n	80179ec <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x618>
 80179b2:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 80179b4:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 80179b8:	fb06 fe0e 	mul.w	lr, r6, lr
 80179bc:	f404 477f 	and.w	r7, r4, #65280	; 0xff00
 80179c0:	437e      	muls	r6, r7
 80179c2:	ea4f 2c1e 	mov.w	ip, lr, lsr #8
 80179c6:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80179ca:	f10e 1e01 	add.w	lr, lr, #65537	; 0x10001
 80179ce:	f506 7780 	add.w	r7, r6, #256	; 0x100
 80179d2:	44f4      	add	ip, lr
 80179d4:	eb07 2616 	add.w	r6, r7, r6, lsr #8
 80179d8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80179dc:	0a36      	lsrs	r6, r6, #8
 80179de:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80179e2:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 80179e6:	ea4c 0406 	orr.w	r4, ip, r6
 80179ea:	940f      	str	r4, [sp, #60]	; 0x3c
 80179ec:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 80179ee:	f004 16ff 	and.w	r6, r4, #16711935	; 0xff00ff
 80179f2:	9c09      	ldr	r4, [sp, #36]	; 0x24
 80179f4:	f003 17ff 	and.w	r7, r3, #16711935	; 0xff00ff
 80179f8:	fb08 f606 	mul.w	r6, r8, r6
 80179fc:	fb01 6607 	mla	r6, r1, r7, r6
 8017a00:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8017a04:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8017a06:	fb00 6607 	mla	r6, r0, r7, r6
 8017a0a:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8017a0e:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8017a10:	fb0b 6607 	mla	r6, fp, r7, r6
 8017a14:	f404 477f 	and.w	r7, r4, #65280	; 0xff00
 8017a18:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8017a1c:	fb08 f807 	mul.w	r8, r8, r7
 8017a20:	fb01 8303 	mla	r3, r1, r3, r8
 8017a24:	9909      	ldr	r1, [sp, #36]	; 0x24
 8017a26:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
 8017a2a:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8017a2c:	fb00 330c 	mla	r3, r0, ip, r3
 8017a30:	f401 4e7f 	and.w	lr, r1, #65280	; 0xff00
 8017a34:	fb0b 3e0e 	mla	lr, fp, lr, r3
 8017a38:	0a36      	lsrs	r6, r6, #8
 8017a3a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8017a3e:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8017a42:	f40e 4e7f 	and.w	lr, lr, #65280	; 0xff00
 8017a46:	ea46 060e 	orr.w	r6, r6, lr
 8017a4a:	2aff      	cmp	r2, #255	; 0xff
 8017a4c:	ea4f 2316 	mov.w	r3, r6, lsr #8
 8017a50:	d04a      	beq.n	8017ae8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x714>
 8017a52:	f8ba 1000 	ldrh.w	r1, [sl]
 8017a56:	43d2      	mvns	r2, r2
 8017a58:	120f      	asrs	r7, r1, #8
 8017a5a:	fa5f fc82 	uxtb.w	ip, r2
 8017a5e:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8017a62:	fb07 f70c 	mul.w	r7, r7, ip
 8017a66:	10c8      	asrs	r0, r1, #3
 8017a68:	00ca      	lsls	r2, r1, #3
 8017a6a:	1c79      	adds	r1, r7, #1
 8017a6c:	eb01 2117 	add.w	r1, r1, r7, lsr #8
 8017a70:	0c37      	lsrs	r7, r6, #16
 8017a72:	eb07 2711 	add.w	r7, r7, r1, lsr #8
 8017a76:	b2d2      	uxtb	r2, r2
 8017a78:	4925      	ldr	r1, [pc, #148]	; (8017b10 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x73c>)
 8017a7a:	fb02 f20c 	mul.w	r2, r2, ip
 8017a7e:	ea01 2707 	and.w	r7, r1, r7, lsl #8
 8017a82:	1c51      	adds	r1, r2, #1
 8017a84:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8017a88:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8017a8c:	b2f6      	uxtb	r6, r6
 8017a8e:	fb00 f00c 	mul.w	r0, r0, ip
 8017a92:	eb06 2612 	add.w	r6, r6, r2, lsr #8
 8017a96:	ea47 07d6 	orr.w	r7, r7, r6, lsr #3
 8017a9a:	1c46      	adds	r6, r0, #1
 8017a9c:	eb06 2010 	add.w	r0, r6, r0, lsr #8
 8017aa0:	b2de      	uxtb	r6, r3
 8017aa2:	eb06 2610 	add.w	r6, r6, r0, lsr #8
 8017aa6:	00f6      	lsls	r6, r6, #3
 8017aa8:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8017aac:	4337      	orrs	r7, r6
 8017aae:	f8aa 7000 	strh.w	r7, [sl]
 8017ab2:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8017ab4:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8017ab6:	441a      	add	r2, r3
 8017ab8:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8017aba:	9229      	str	r2, [sp, #164]	; 0xa4
 8017abc:	441d      	add	r5, r3
 8017abe:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8017ac0:	3b01      	subs	r3, #1
 8017ac2:	f10a 0a02 	add.w	sl, sl, #2
 8017ac6:	9313      	str	r3, [sp, #76]	; 0x4c
 8017ac8:	e4e7      	b.n	801749a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xc6>
 8017aca:	b150      	cbz	r0, 8017ae2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x70e>
 8017acc:	990e      	ldr	r1, [sp, #56]	; 0x38
 8017ace:	5871      	ldr	r1, [r6, r1]
 8017ad0:	9109      	str	r1, [sp, #36]	; 0x24
 8017ad2:	ea4f 6911 	mov.w	r9, r1, lsr #24
 8017ad6:	26ff      	movs	r6, #255	; 0xff
 8017ad8:	46b6      	mov	lr, r6
 8017ada:	e6ea      	b.n	80178b2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4de>
 8017adc:	26ff      	movs	r6, #255	; 0xff
 8017ade:	46b1      	mov	r9, r6
 8017ae0:	e6e7      	b.n	80178b2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4de>
 8017ae2:	26ff      	movs	r6, #255	; 0xff
 8017ae4:	46b1      	mov	r9, r6
 8017ae6:	e7f7      	b.n	8017ad8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x704>
 8017ae8:	0972      	lsrs	r2, r6, #5
 8017aea:	f423 63ff 	bic.w	r3, r3, #2040	; 0x7f8
 8017aee:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8017af2:	f023 0307 	bic.w	r3, r3, #7
 8017af6:	4313      	orrs	r3, r2
 8017af8:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 8017afc:	431e      	orrs	r6, r3
 8017afe:	f8aa 6000 	strh.w	r6, [sl]
 8017b02:	e7d6      	b.n	8017ab2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6de>
 8017b04:	b017      	add	sp, #92	; 0x5c
 8017b06:	ecbd 8b08 	vpop	{d8-d11}
 8017b0a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017b0e:	bf00      	nop
 8017b10:	fffff800 	.word	0xfffff800

08017b14 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>:
 8017b14:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8017b18:	e9dd c40a 	ldrd	ip, r4, [sp, #40]	; 0x28
 8017b1c:	2c00      	cmp	r4, #0
 8017b1e:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 8017b22:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 8017b26:	f89d 5030 	ldrb.w	r5, [sp, #48]	; 0x30
 8017b2a:	f89d 7034 	ldrb.w	r7, [sp, #52]	; 0x34
 8017b2e:	fb04 ce03 	mla	lr, r4, r3, ip
 8017b32:	db60      	blt.n	8017bf6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xe2>
 8017b34:	45a1      	cmp	r9, r4
 8017b36:	dd5e      	ble.n	8017bf6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xe2>
 8017b38:	f1bc 0f00 	cmp.w	ip, #0
 8017b3c:	db59      	blt.n	8017bf2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xde>
 8017b3e:	45e0      	cmp	r8, ip
 8017b40:	dd57      	ble.n	8017bf2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xde>
 8017b42:	ea4f 005e 	mov.w	r0, lr, lsr #1
 8017b46:	f01e 0f01 	tst.w	lr, #1
 8017b4a:	5c16      	ldrb	r6, [r2, r0]
 8017b4c:	bf0c      	ite	eq
 8017b4e:	f006 060f 	andeq.w	r6, r6, #15
 8017b52:	1136      	asrne	r6, r6, #4
 8017b54:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 8017b58:	b2f6      	uxtb	r6, r6
 8017b5a:	f11c 0001 	adds.w	r0, ip, #1
 8017b5e:	d44d      	bmi.n	8017bfc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xe8>
 8017b60:	4580      	cmp	r8, r0
 8017b62:	dd4b      	ble.n	8017bfc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xe8>
 8017b64:	2d00      	cmp	r5, #0
 8017b66:	d04b      	beq.n	8017c00 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xec>
 8017b68:	f10e 0a01 	add.w	sl, lr, #1
 8017b6c:	ea4f 005a 	mov.w	r0, sl, lsr #1
 8017b70:	f01a 0f01 	tst.w	sl, #1
 8017b74:	5c10      	ldrb	r0, [r2, r0]
 8017b76:	bf0c      	ite	eq
 8017b78:	f000 000f 	andeq.w	r0, r0, #15
 8017b7c:	1100      	asrne	r0, r0, #4
 8017b7e:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 8017b82:	b2c0      	uxtb	r0, r0
 8017b84:	3401      	adds	r4, #1
 8017b86:	d43f      	bmi.n	8017c08 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xf4>
 8017b88:	45a1      	cmp	r9, r4
 8017b8a:	dd3d      	ble.n	8017c08 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xf4>
 8017b8c:	2f00      	cmp	r7, #0
 8017b8e:	f000 809e 	beq.w	8017cce <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1ba>
 8017b92:	f1bc 0f00 	cmp.w	ip, #0
 8017b96:	db35      	blt.n	8017c04 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xf0>
 8017b98:	45e0      	cmp	r8, ip
 8017b9a:	dd33      	ble.n	8017c04 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xf0>
 8017b9c:	eb03 090e 	add.w	r9, r3, lr
 8017ba0:	ea4f 0459 	mov.w	r4, r9, lsr #1
 8017ba4:	f019 0f01 	tst.w	r9, #1
 8017ba8:	5d14      	ldrb	r4, [r2, r4]
 8017baa:	bf0c      	ite	eq
 8017bac:	f004 040f 	andeq.w	r4, r4, #15
 8017bb0:	1124      	asrne	r4, r4, #4
 8017bb2:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 8017bb6:	b2e4      	uxtb	r4, r4
 8017bb8:	f11c 0c01 	adds.w	ip, ip, #1
 8017bbc:	d427      	bmi.n	8017c0e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xfa>
 8017bbe:	45e0      	cmp	r8, ip
 8017bc0:	dd25      	ble.n	8017c0e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xfa>
 8017bc2:	b335      	cbz	r5, 8017c12 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xfe>
 8017bc4:	3301      	adds	r3, #1
 8017bc6:	449e      	add	lr, r3
 8017bc8:	ea4f 035e 	mov.w	r3, lr, lsr #1
 8017bcc:	f01e 0f01 	tst.w	lr, #1
 8017bd0:	5cd2      	ldrb	r2, [r2, r3]
 8017bd2:	bf0c      	ite	eq
 8017bd4:	f002 020f 	andeq.w	r2, r2, #15
 8017bd8:	1112      	asrne	r2, r2, #4
 8017bda:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8017bde:	b2d3      	uxtb	r3, r2
 8017be0:	2d0f      	cmp	r5, #15
 8017be2:	d917      	bls.n	8017c14 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x100>
 8017be4:	4b3c      	ldr	r3, [pc, #240]	; (8017cd8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1c4>)
 8017be6:	4a3d      	ldr	r2, [pc, #244]	; (8017cdc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1c8>)
 8017be8:	483d      	ldr	r0, [pc, #244]	; (8017ce0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1cc>)
 8017bea:	f240 210d 	movw	r1, #525	; 0x20d
 8017bee:	f000 fffd 	bl	8018bec <__assert_func>
 8017bf2:	2600      	movs	r6, #0
 8017bf4:	e7b1      	b.n	8017b5a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x46>
 8017bf6:	2000      	movs	r0, #0
 8017bf8:	4606      	mov	r6, r0
 8017bfa:	e7c3      	b.n	8017b84 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x70>
 8017bfc:	2000      	movs	r0, #0
 8017bfe:	e7c1      	b.n	8017b84 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x70>
 8017c00:	4628      	mov	r0, r5
 8017c02:	e7bf      	b.n	8017b84 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x70>
 8017c04:	2400      	movs	r4, #0
 8017c06:	e7d7      	b.n	8017bb8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xa4>
 8017c08:	2300      	movs	r3, #0
 8017c0a:	461c      	mov	r4, r3
 8017c0c:	e7e8      	b.n	8017be0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xcc>
 8017c0e:	2300      	movs	r3, #0
 8017c10:	e7e6      	b.n	8017be0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xcc>
 8017c12:	462b      	mov	r3, r5
 8017c14:	2f0f      	cmp	r7, #15
 8017c16:	d8e5      	bhi.n	8017be4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xd0>
 8017c18:	b2ad      	uxth	r5, r5
 8017c1a:	b2bf      	uxth	r7, r7
 8017c1c:	fb05 fc07 	mul.w	ip, r5, r7
 8017c20:	ebcc 1707 	rsb	r7, ip, r7, lsl #4
 8017c24:	012d      	lsls	r5, r5, #4
 8017c26:	b2bf      	uxth	r7, r7
 8017c28:	f5c5 7280 	rsb	r2, r5, #256	; 0x100
 8017c2c:	eba5 050c 	sub.w	r5, r5, ip
 8017c30:	1bd2      	subs	r2, r2, r7
 8017c32:	b2ad      	uxth	r5, r5
 8017c34:	b292      	uxth	r2, r2
 8017c36:	4368      	muls	r0, r5
 8017c38:	fb06 0002 	mla	r0, r6, r2, r0
 8017c3c:	fb07 0404 	mla	r4, r7, r4, r0
 8017c40:	fb0c 4303 	mla	r3, ip, r3, r4
 8017c44:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8017c48:	2b00      	cmp	r3, #0
 8017c4a:	d03e      	beq.n	8017cca <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1b6>
 8017c4c:	f89d 0038 	ldrb.w	r0, [sp, #56]	; 0x38
 8017c50:	4a24      	ldr	r2, [pc, #144]	; (8017ce4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1d0>)
 8017c52:	4343      	muls	r3, r0
 8017c54:	1c58      	adds	r0, r3, #1
 8017c56:	6816      	ldr	r6, [r2, #0]
 8017c58:	880a      	ldrh	r2, [r1, #0]
 8017c5a:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8017c5e:	1200      	asrs	r0, r0, #8
 8017c60:	b284      	uxth	r4, r0
 8017c62:	1215      	asrs	r5, r2, #8
 8017c64:	43c0      	mvns	r0, r0
 8017c66:	b2c3      	uxtb	r3, r0
 8017c68:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8017c6c:	0a30      	lsrs	r0, r6, #8
 8017c6e:	fb15 f503 	smulbb	r5, r5, r3
 8017c72:	10d7      	asrs	r7, r2, #3
 8017c74:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8017c78:	fb00 5004 	mla	r0, r0, r4, r5
 8017c7c:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8017c80:	08f5      	lsrs	r5, r6, #3
 8017c82:	00d2      	lsls	r2, r2, #3
 8017c84:	fb17 f703 	smulbb	r7, r7, r3
 8017c88:	b2d2      	uxtb	r2, r2
 8017c8a:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8017c8e:	00f6      	lsls	r6, r6, #3
 8017c90:	fb05 7504 	mla	r5, r5, r4, r7
 8017c94:	fb12 f303 	smulbb	r3, r2, r3
 8017c98:	b2f6      	uxtb	r6, r6
 8017c9a:	fb06 3304 	mla	r3, r6, r4, r3
 8017c9e:	b2ad      	uxth	r5, r5
 8017ca0:	b29a      	uxth	r2, r3
 8017ca2:	b280      	uxth	r0, r0
 8017ca4:	1c6b      	adds	r3, r5, #1
 8017ca6:	eb03 2315 	add.w	r3, r3, r5, lsr #8
 8017caa:	1c44      	adds	r4, r0, #1
 8017cac:	095b      	lsrs	r3, r3, #5
 8017cae:	eb04 2010 	add.w	r0, r4, r0, lsr #8
 8017cb2:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 8017cb6:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8017cba:	4303      	orrs	r3, r0
 8017cbc:	1c50      	adds	r0, r2, #1
 8017cbe:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 8017cc2:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8017cc6:	4313      	orrs	r3, r2
 8017cc8:	800b      	strh	r3, [r1, #0]
 8017cca:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8017cce:	2d0f      	cmp	r5, #15
 8017cd0:	d888      	bhi.n	8017be4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xd0>
 8017cd2:	463b      	mov	r3, r7
 8017cd4:	463c      	mov	r4, r7
 8017cd6:	e79f      	b.n	8017c18 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x104>
 8017cd8:	0801c915 	.word	0x0801c915
 8017cdc:	0801ce6d 	.word	0x0801ce6d
 8017ce0:	0801c99d 	.word	0x0801c99d
 8017ce4:	20012194 	.word	0x20012194

08017ce8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 8017ce8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017cec:	ed2d 8b08 	vpush	{d8-d11}
 8017cf0:	b099      	sub	sp, #100	; 0x64
 8017cf2:	e9dd 462b 	ldrd	r4, r6, [sp, #172]	; 0xac
 8017cf6:	9309      	str	r3, [sp, #36]	; 0x24
 8017cf8:	f9bd 30c8 	ldrsh.w	r3, [sp, #200]	; 0xc8
 8017cfc:	930a      	str	r3, [sp, #40]	; 0x28
 8017cfe:	f9bd 30cc 	ldrsh.w	r3, [sp, #204]	; 0xcc
 8017d02:	9216      	str	r2, [sp, #88]	; 0x58
 8017d04:	930b      	str	r3, [sp, #44]	; 0x2c
 8017d06:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 8017d08:	f89d 30d4 	ldrb.w	r3, [sp, #212]	; 0xd4
 8017d0c:	910f      	str	r1, [sp, #60]	; 0x3c
 8017d0e:	9310      	str	r3, [sp, #64]	; 0x40
 8017d10:	e9dd 1330 	ldrd	r1, r3, [sp, #192]	; 0xc0
 8017d14:	9017      	str	r0, [sp, #92]	; 0x5c
 8017d16:	6850      	ldr	r0, [r2, #4]
 8017d18:	6812      	ldr	r2, [r2, #0]
 8017d1a:	fb00 1303 	mla	r3, r0, r3, r1
 8017d1e:	eb02 0a43 	add.w	sl, r2, r3, lsl #1
 8017d22:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8017d24:	3301      	adds	r3, #1
 8017d26:	f023 0301 	bic.w	r3, r3, #1
 8017d2a:	930c      	str	r3, [sp, #48]	; 0x30
 8017d2c:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 8017d2e:	681f      	ldr	r7, [r3, #0]
 8017d30:	eeb0 aa40 	vmov.f32	s20, s0
 8017d34:	eef0 9a60 	vmov.f32	s19, s1
 8017d38:	eeb0 9a41 	vmov.f32	s18, s2
 8017d3c:	eeb0 8a62 	vmov.f32	s16, s5
 8017d40:	eef0 8a43 	vmov.f32	s17, s6
 8017d44:	eef0 ba44 	vmov.f32	s23, s8
 8017d48:	eeb0 ba64 	vmov.f32	s22, s9
 8017d4c:	eef0 aa45 	vmov.f32	s21, s10
 8017d50:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8017d52:	2b00      	cmp	r3, #0
 8017d54:	dc03      	bgt.n	8017d5e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x76>
 8017d56:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8017d58:	2b00      	cmp	r3, #0
 8017d5a:	f340 8267 	ble.w	801822c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x544>
 8017d5e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8017d60:	2b00      	cmp	r3, #0
 8017d62:	f340 811e 	ble.w	8017fa2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2ba>
 8017d66:	1422      	asrs	r2, r4, #16
 8017d68:	ea4f 4326 	mov.w	r3, r6, asr #16
 8017d6c:	d42d      	bmi.n	8017dca <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe2>
 8017d6e:	980a      	ldr	r0, [sp, #40]	; 0x28
 8017d70:	1c51      	adds	r1, r2, #1
 8017d72:	4288      	cmp	r0, r1
 8017d74:	dd2c      	ble.n	8017dd0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe8>
 8017d76:	2b00      	cmp	r3, #0
 8017d78:	db2a      	blt.n	8017dd0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe8>
 8017d7a:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8017d7c:	1c59      	adds	r1, r3, #1
 8017d7e:	4288      	cmp	r0, r1
 8017d80:	dd26      	ble.n	8017dd0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe8>
 8017d82:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8017d84:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 8017d86:	3b01      	subs	r3, #1
 8017d88:	fb02 4203 	mla	r2, r2, r3, r4
 8017d8c:	1412      	asrs	r2, r2, #16
 8017d8e:	d42a      	bmi.n	8017de6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfe>
 8017d90:	990a      	ldr	r1, [sp, #40]	; 0x28
 8017d92:	3201      	adds	r2, #1
 8017d94:	4291      	cmp	r1, r2
 8017d96:	dd26      	ble.n	8017de6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfe>
 8017d98:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
 8017d9a:	fb02 6303 	mla	r3, r2, r3, r6
 8017d9e:	141b      	asrs	r3, r3, #16
 8017da0:	d421      	bmi.n	8017de6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfe>
 8017da2:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8017da4:	3301      	adds	r3, #1
 8017da6:	429a      	cmp	r2, r3
 8017da8:	dd1d      	ble.n	8017de6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfe>
 8017daa:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	; 0x30
 8017dae:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 8017db2:	9311      	str	r3, [sp, #68]	; 0x44
 8017db4:	46d1      	mov	r9, sl
 8017db6:	f1bb 0f00 	cmp.w	fp, #0
 8017dba:	f300 8162 	bgt.w	8018082 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x39a>
 8017dbe:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8017dc0:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8017dc4:	eb0a 0a45 	add.w	sl, sl, r5, lsl #1
 8017dc8:	e0ed      	b.n	8017fa6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2be>
 8017dca:	1c51      	adds	r1, r2, #1
 8017dcc:	f040 80df 	bne.w	8017f8e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2a6>
 8017dd0:	990a      	ldr	r1, [sp, #40]	; 0x28
 8017dd2:	4291      	cmp	r1, r2
 8017dd4:	f340 80db 	ble.w	8017f8e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2a6>
 8017dd8:	1c5a      	adds	r2, r3, #1
 8017dda:	f2c0 80d8 	blt.w	8017f8e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2a6>
 8017dde:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8017de0:	4293      	cmp	r3, r2
 8017de2:	f280 80d4 	bge.w	8017f8e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2a6>
 8017de6:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	; 0x30
 8017dea:	f8dd 9024 	ldr.w	r9, [sp, #36]	; 0x24
 8017dee:	9311      	str	r3, [sp, #68]	; 0x44
 8017df0:	46d0      	mov	r8, sl
 8017df2:	f1b9 0f00 	cmp.w	r9, #0
 8017df6:	dde2      	ble.n	8017dbe <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xd6>
 8017df8:	1420      	asrs	r0, r4, #16
 8017dfa:	ea4f 4326 	mov.w	r3, r6, asr #16
 8017dfe:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8017e02:	f3c6 3103 	ubfx	r1, r6, #12, #4
 8017e06:	f100 8121 	bmi.w	801804c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x364>
 8017e0a:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 8017e0c:	f100 0c01 	add.w	ip, r0, #1
 8017e10:	4565      	cmp	r5, ip
 8017e12:	f340 811d 	ble.w	8018050 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x368>
 8017e16:	2b00      	cmp	r3, #0
 8017e18:	f2c0 811a 	blt.w	8018050 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x368>
 8017e1c:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8017e1e:	f103 0c01 	add.w	ip, r3, #1
 8017e22:	4565      	cmp	r5, ip
 8017e24:	f340 8114 	ble.w	8018050 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x368>
 8017e28:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8017e2a:	fb03 0305 	mla	r3, r3, r5, r0
 8017e2e:	0858      	lsrs	r0, r3, #1
 8017e30:	07dd      	lsls	r5, r3, #31
 8017e32:	5c38      	ldrb	r0, [r7, r0]
 8017e34:	bf54      	ite	pl
 8017e36:	f000 000f 	andpl.w	r0, r0, #15
 8017e3a:	1100      	asrmi	r0, r0, #4
 8017e3c:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 8017e40:	b2c0      	uxtb	r0, r0
 8017e42:	2a00      	cmp	r2, #0
 8017e44:	f000 80ee 	beq.w	8018024 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x33c>
 8017e48:	f103 0e01 	add.w	lr, r3, #1
 8017e4c:	ea4f 0c5e 	mov.w	ip, lr, lsr #1
 8017e50:	f01e 0f01 	tst.w	lr, #1
 8017e54:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8017e58:	bf0c      	ite	eq
 8017e5a:	f00c 0c0f 	andeq.w	ip, ip, #15
 8017e5e:	ea4f 1c2c 	movne.w	ip, ip, asr #4
 8017e62:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8017e66:	fa5f f58c 	uxtb.w	r5, ip
 8017e6a:	9512      	str	r5, [sp, #72]	; 0x48
 8017e6c:	b1f9      	cbz	r1, 8017eae <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1c6>
 8017e6e:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8017e70:	442b      	add	r3, r5
 8017e72:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 8017e76:	07dd      	lsls	r5, r3, #31
 8017e78:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8017e7c:	bf54      	ite	pl
 8017e7e:	f00c 0c0f 	andpl.w	ip, ip, #15
 8017e82:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8017e86:	3301      	adds	r3, #1
 8017e88:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8017e8c:	fa5f f58c 	uxtb.w	r5, ip
 8017e90:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 8017e94:	950d      	str	r5, [sp, #52]	; 0x34
 8017e96:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8017e9a:	07dd      	lsls	r5, r3, #31
 8017e9c:	bf54      	ite	pl
 8017e9e:	f00c 030f 	andpl.w	r3, ip, #15
 8017ea2:	ea4f 132c 	movmi.w	r3, ip, asr #4
 8017ea6:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8017eaa:	b2db      	uxtb	r3, r3
 8017eac:	9313      	str	r3, [sp, #76]	; 0x4c
 8017eae:	b292      	uxth	r2, r2
 8017eb0:	b289      	uxth	r1, r1
 8017eb2:	fb02 f301 	mul.w	r3, r2, r1
 8017eb6:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 8017eba:	0112      	lsls	r2, r2, #4
 8017ebc:	b289      	uxth	r1, r1
 8017ebe:	f5c2 7c80 	rsb	ip, r2, #256	; 0x100
 8017ec2:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8017ec4:	1ad2      	subs	r2, r2, r3
 8017ec6:	ebac 0c01 	sub.w	ip, ip, r1
 8017eca:	b292      	uxth	r2, r2
 8017ecc:	436a      	muls	r2, r5
 8017ece:	fa1f fc8c 	uxth.w	ip, ip
 8017ed2:	fb00 200c 	mla	r0, r0, ip, r2
 8017ed6:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8017ed8:	fb01 0102 	mla	r1, r1, r2, r0
 8017edc:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8017ede:	fb03 1302 	mla	r3, r3, r2, r1
 8017ee2:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8017ee6:	2b00      	cmp	r3, #0
 8017ee8:	d048      	beq.n	8017f7c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x294>
 8017eea:	9910      	ldr	r1, [sp, #64]	; 0x40
 8017eec:	4ace      	ldr	r2, [pc, #824]	; (8018228 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x540>)
 8017eee:	434b      	muls	r3, r1
 8017ef0:	1c59      	adds	r1, r3, #1
 8017ef2:	f8d2 e000 	ldr.w	lr, [r2]
 8017ef6:	f8b8 2000 	ldrh.w	r2, [r8]
 8017efa:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 8017efe:	121b      	asrs	r3, r3, #8
 8017f00:	b299      	uxth	r1, r3
 8017f02:	ea4f 2c22 	mov.w	ip, r2, asr #8
 8017f06:	43db      	mvns	r3, r3
 8017f08:	b2db      	uxtb	r3, r3
 8017f0a:	ea4f 201e 	mov.w	r0, lr, lsr #8
 8017f0e:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8017f12:	fb1c fc03 	smulbb	ip, ip, r3
 8017f16:	ea4f 0be2 	mov.w	fp, r2, asr #3
 8017f1a:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8017f1e:	fb00 c001 	mla	r0, r0, r1, ip
 8017f22:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 8017f26:	ea4f 0cde 	mov.w	ip, lr, lsr #3
 8017f2a:	fb1b fb03 	smulbb	fp, fp, r3
 8017f2e:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 8017f32:	00d2      	lsls	r2, r2, #3
 8017f34:	fb0c bc01 	mla	ip, ip, r1, fp
 8017f38:	b2d2      	uxtb	r2, r2
 8017f3a:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8017f3e:	fb12 f303 	smulbb	r3, r2, r3
 8017f42:	fa1f fc8c 	uxth.w	ip, ip
 8017f46:	fa5f fe8e 	uxtb.w	lr, lr
 8017f4a:	b280      	uxth	r0, r0
 8017f4c:	fb0e 3101 	mla	r1, lr, r1, r3
 8017f50:	f10c 0201 	add.w	r2, ip, #1
 8017f54:	b289      	uxth	r1, r1
 8017f56:	1c43      	adds	r3, r0, #1
 8017f58:	eb02 221c 	add.w	r2, r2, ip, lsr #8
 8017f5c:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8017f60:	0952      	lsrs	r2, r2, #5
 8017f62:	1c4b      	adds	r3, r1, #1
 8017f64:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8017f68:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 8017f6c:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8017f70:	4310      	orrs	r0, r2
 8017f72:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 8017f76:	4308      	orrs	r0, r1
 8017f78:	f8a8 0000 	strh.w	r0, [r8]
 8017f7c:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8017f7e:	441c      	add	r4, r3
 8017f80:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8017f82:	f108 0802 	add.w	r8, r8, #2
 8017f86:	441e      	add	r6, r3
 8017f88:	f109 39ff 	add.w	r9, r9, #4294967295
 8017f8c:	e731      	b.n	8017df2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x10a>
 8017f8e:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8017f90:	441c      	add	r4, r3
 8017f92:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8017f94:	441e      	add	r6, r3
 8017f96:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8017f98:	3b01      	subs	r3, #1
 8017f9a:	9309      	str	r3, [sp, #36]	; 0x24
 8017f9c:	f10a 0a02 	add.w	sl, sl, #2
 8017fa0:	e6dd      	b.n	8017d5e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x76>
 8017fa2:	f47f aeee 	bne.w	8017d82 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9a>
 8017fa6:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8017fa8:	2b00      	cmp	r3, #0
 8017faa:	f340 813f 	ble.w	801822c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x544>
 8017fae:	ee3a aa2b 	vadd.f32	s20, s20, s23
 8017fb2:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8017fb6:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 8017fba:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8017fbc:	ee79 9a8b 	vadd.f32	s19, s19, s22
 8017fc0:	ee39 9a2a 	vadd.f32	s18, s18, s21
 8017fc4:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8017fc8:	eef0 6a48 	vmov.f32	s13, s16
 8017fcc:	ee69 7a27 	vmul.f32	s15, s18, s15
 8017fd0:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8017fd4:	ee37 8a48 	vsub.f32	s16, s14, s16
 8017fd8:	ee16 4a90 	vmov	r4, s13
 8017fdc:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8017fe0:	eef0 6a68 	vmov.f32	s13, s17
 8017fe4:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8017fe8:	ee18 2a10 	vmov	r2, s16
 8017fec:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8017ff0:	fb92 f3f3 	sdiv	r3, r2, r3
 8017ff4:	ee18 2a90 	vmov	r2, s17
 8017ff8:	932d      	str	r3, [sp, #180]	; 0xb4
 8017ffa:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8017ffc:	fb92 f3f3 	sdiv	r3, r2, r3
 8018000:	932e      	str	r3, [sp, #184]	; 0xb8
 8018002:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8018004:	9a16      	ldr	r2, [sp, #88]	; 0x58
 8018006:	3b01      	subs	r3, #1
 8018008:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801800c:	930f      	str	r3, [sp, #60]	; 0x3c
 801800e:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8018010:	bf08      	it	eq
 8018012:	4613      	moveq	r3, r2
 8018014:	ee16 6a90 	vmov	r6, s13
 8018018:	9309      	str	r3, [sp, #36]	; 0x24
 801801a:	eef0 8a67 	vmov.f32	s17, s15
 801801e:	eeb0 8a47 	vmov.f32	s16, s14
 8018022:	e695      	b.n	8017d50 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x68>
 8018024:	2900      	cmp	r1, #0
 8018026:	f43f af42 	beq.w	8017eae <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1c6>
 801802a:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801802c:	442b      	add	r3, r5
 801802e:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 8018032:	07db      	lsls	r3, r3, #31
 8018034:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8018038:	bf54      	ite	pl
 801803a:	f00c 030f 	andpl.w	r3, ip, #15
 801803e:	ea4f 132c 	movmi.w	r3, ip, asr #4
 8018042:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8018046:	b2db      	uxtb	r3, r3
 8018048:	930d      	str	r3, [sp, #52]	; 0x34
 801804a:	e730      	b.n	8017eae <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1c6>
 801804c:	1c45      	adds	r5, r0, #1
 801804e:	d195      	bne.n	8017f7c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x294>
 8018050:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 8018052:	4285      	cmp	r5, r0
 8018054:	dd92      	ble.n	8017f7c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x294>
 8018056:	1c5d      	adds	r5, r3, #1
 8018058:	db90      	blt.n	8017f7c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x294>
 801805a:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 801805c:	429d      	cmp	r5, r3
 801805e:	dd8d      	ble.n	8017f7c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x294>
 8018060:	e9cd 3203 	strd	r3, r2, [sp, #12]
 8018064:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8018066:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8018068:	9301      	str	r3, [sp, #4]
 801806a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801806c:	9002      	str	r0, [sp, #8]
 801806e:	e9cd 1505 	strd	r1, r5, [sp, #20]
 8018072:	9300      	str	r3, [sp, #0]
 8018074:	463a      	mov	r2, r7
 8018076:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8018078:	9817      	ldr	r0, [sp, #92]	; 0x5c
 801807a:	4641      	mov	r1, r8
 801807c:	f7ff fd4a 	bl	8017b14 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>
 8018080:	e77c      	b.n	8017f7c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x294>
 8018082:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8018084:	1422      	asrs	r2, r4, #16
 8018086:	1433      	asrs	r3, r6, #16
 8018088:	fb05 2303 	mla	r3, r5, r3, r2
 801808c:	085a      	lsrs	r2, r3, #1
 801808e:	07dd      	lsls	r5, r3, #31
 8018090:	5cba      	ldrb	r2, [r7, r2]
 8018092:	bf54      	ite	pl
 8018094:	f002 020f 	andpl.w	r2, r2, #15
 8018098:	1112      	asrmi	r2, r2, #4
 801809a:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801809e:	f3c4 3103 	ubfx	r1, r4, #12, #4
 80180a2:	f3c6 3003 	ubfx	r0, r6, #12, #4
 80180a6:	b2d2      	uxtb	r2, r2
 80180a8:	2900      	cmp	r1, #0
 80180aa:	f000 80a8 	beq.w	80181fe <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x516>
 80180ae:	f103 0e01 	add.w	lr, r3, #1
 80180b2:	ea4f 0c5e 	mov.w	ip, lr, lsr #1
 80180b6:	f01e 0f01 	tst.w	lr, #1
 80180ba:	f817 c00c 	ldrb.w	ip, [r7, ip]
 80180be:	bf0c      	ite	eq
 80180c0:	f00c 0c0f 	andeq.w	ip, ip, #15
 80180c4:	ea4f 1c2c 	movne.w	ip, ip, asr #4
 80180c8:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 80180cc:	fa5f f58c 	uxtb.w	r5, ip
 80180d0:	9514      	str	r5, [sp, #80]	; 0x50
 80180d2:	b300      	cbz	r0, 8018116 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x42e>
 80180d4:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80180d6:	442b      	add	r3, r5
 80180d8:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 80180dc:	07dd      	lsls	r5, r3, #31
 80180de:	f817 c00c 	ldrb.w	ip, [r7, ip]
 80180e2:	bf54      	ite	pl
 80180e4:	f00c 0c0f 	andpl.w	ip, ip, #15
 80180e8:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 80180ec:	3301      	adds	r3, #1
 80180ee:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 80180f2:	fa5f f58c 	uxtb.w	r5, ip
 80180f6:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 80180fa:	950e      	str	r5, [sp, #56]	; 0x38
 80180fc:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8018100:	07dd      	lsls	r5, r3, #31
 8018102:	bf54      	ite	pl
 8018104:	f00c 0c0f 	andpl.w	ip, ip, #15
 8018108:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801810c:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8018110:	fa5f f38c 	uxtb.w	r3, ip
 8018114:	9315      	str	r3, [sp, #84]	; 0x54
 8018116:	b289      	uxth	r1, r1
 8018118:	b280      	uxth	r0, r0
 801811a:	fb01 f300 	mul.w	r3, r1, r0
 801811e:	ebc3 1000 	rsb	r0, r3, r0, lsl #4
 8018122:	0109      	lsls	r1, r1, #4
 8018124:	b280      	uxth	r0, r0
 8018126:	f5c1 7c80 	rsb	ip, r1, #256	; 0x100
 801812a:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801812c:	1ac9      	subs	r1, r1, r3
 801812e:	ebac 0c00 	sub.w	ip, ip, r0
 8018132:	b289      	uxth	r1, r1
 8018134:	4369      	muls	r1, r5
 8018136:	fa1f fc8c 	uxth.w	ip, ip
 801813a:	fb02 120c 	mla	r2, r2, ip, r1
 801813e:	990e      	ldr	r1, [sp, #56]	; 0x38
 8018140:	fb00 2001 	mla	r0, r0, r1, r2
 8018144:	9a15      	ldr	r2, [sp, #84]	; 0x54
 8018146:	fb03 0302 	mla	r3, r3, r2, r0
 801814a:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801814e:	2b00      	cmp	r3, #0
 8018150:	d04c      	beq.n	80181ec <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x504>
 8018152:	9910      	ldr	r1, [sp, #64]	; 0x40
 8018154:	4a34      	ldr	r2, [pc, #208]	; (8018228 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x540>)
 8018156:	434b      	muls	r3, r1
 8018158:	1c59      	adds	r1, r3, #1
 801815a:	f8d2 e000 	ldr.w	lr, [r2]
 801815e:	f8b9 2000 	ldrh.w	r2, [r9]
 8018162:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 8018166:	121b      	asrs	r3, r3, #8
 8018168:	b299      	uxth	r1, r3
 801816a:	ea4f 2c22 	mov.w	ip, r2, asr #8
 801816e:	43db      	mvns	r3, r3
 8018170:	b2db      	uxtb	r3, r3
 8018172:	ea4f 201e 	mov.w	r0, lr, lsr #8
 8018176:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801817a:	fb1c fc03 	smulbb	ip, ip, r3
 801817e:	ea4f 08e2 	mov.w	r8, r2, asr #3
 8018182:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8018186:	fb00 c001 	mla	r0, r0, r1, ip
 801818a:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 801818e:	ea4f 0cde 	mov.w	ip, lr, lsr #3
 8018192:	fb18 f803 	smulbb	r8, r8, r3
 8018196:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 801819a:	00d2      	lsls	r2, r2, #3
 801819c:	fb0c 8c01 	mla	ip, ip, r1, r8
 80181a0:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80181a4:	b2d2      	uxtb	r2, r2
 80181a6:	fa1f fc8c 	uxth.w	ip, ip
 80181aa:	fa5f fe8e 	uxtb.w	lr, lr
 80181ae:	fb12 f203 	smulbb	r2, r2, r3
 80181b2:	b280      	uxth	r0, r0
 80181b4:	fb0e 2201 	mla	r2, lr, r1, r2
 80181b8:	f10c 0801 	add.w	r8, ip, #1
 80181bc:	b292      	uxth	r2, r2
 80181be:	eb08 2c1c 	add.w	ip, r8, ip, lsr #8
 80181c2:	f100 0801 	add.w	r8, r0, #1
 80181c6:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 80181ca:	eb08 2010 	add.w	r0, r8, r0, lsr #8
 80181ce:	1c51      	adds	r1, r2, #1
 80181d0:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 80181d4:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 80181d8:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 80181dc:	ea4c 0c00 	orr.w	ip, ip, r0
 80181e0:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 80181e4:	ea4c 0c02 	orr.w	ip, ip, r2
 80181e8:	f8a9 c000 	strh.w	ip, [r9]
 80181ec:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 80181ee:	441c      	add	r4, r3
 80181f0:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 80181f2:	f109 0902 	add.w	r9, r9, #2
 80181f6:	441e      	add	r6, r3
 80181f8:	f10b 3bff 	add.w	fp, fp, #4294967295
 80181fc:	e5db      	b.n	8017db6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xce>
 80181fe:	2800      	cmp	r0, #0
 8018200:	d089      	beq.n	8018116 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x42e>
 8018202:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8018204:	442b      	add	r3, r5
 8018206:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 801820a:	07db      	lsls	r3, r3, #31
 801820c:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8018210:	bf54      	ite	pl
 8018212:	f00c 0c0f 	andpl.w	ip, ip, #15
 8018216:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801821a:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801821e:	fa5f f38c 	uxtb.w	r3, ip
 8018222:	930e      	str	r3, [sp, #56]	; 0x38
 8018224:	e777      	b.n	8018116 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x42e>
 8018226:	bf00      	nop
 8018228:	20012194 	.word	0x20012194
 801822c:	b019      	add	sp, #100	; 0x64
 801822e:	ecbd 8b08 	vpop	{d8-d11}
 8018232:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018236:	bf00      	nop

08018238 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>:
 8018238:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801823c:	e9dd c40a 	ldrd	ip, r4, [sp, #40]	; 0x28
 8018240:	2c00      	cmp	r4, #0
 8018242:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 8018246:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 801824a:	f89d 5030 	ldrb.w	r5, [sp, #48]	; 0x30
 801824e:	f89d 7034 	ldrb.w	r7, [sp, #52]	; 0x34
 8018252:	fb04 ce03 	mla	lr, r4, r3, ip
 8018256:	db60      	blt.n	801831a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xe2>
 8018258:	45a1      	cmp	r9, r4
 801825a:	dd5e      	ble.n	801831a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xe2>
 801825c:	f1bc 0f00 	cmp.w	ip, #0
 8018260:	db59      	blt.n	8018316 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xde>
 8018262:	45e0      	cmp	r8, ip
 8018264:	dd57      	ble.n	8018316 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xde>
 8018266:	ea4f 005e 	mov.w	r0, lr, lsr #1
 801826a:	f01e 0f01 	tst.w	lr, #1
 801826e:	5c16      	ldrb	r6, [r2, r0]
 8018270:	bf0c      	ite	eq
 8018272:	f006 060f 	andeq.w	r6, r6, #15
 8018276:	1136      	asrne	r6, r6, #4
 8018278:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 801827c:	b2f6      	uxtb	r6, r6
 801827e:	f11c 0001 	adds.w	r0, ip, #1
 8018282:	d44d      	bmi.n	8018320 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xe8>
 8018284:	4580      	cmp	r8, r0
 8018286:	dd4b      	ble.n	8018320 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xe8>
 8018288:	2d00      	cmp	r5, #0
 801828a:	d04b      	beq.n	8018324 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xec>
 801828c:	f10e 0a01 	add.w	sl, lr, #1
 8018290:	ea4f 005a 	mov.w	r0, sl, lsr #1
 8018294:	f01a 0f01 	tst.w	sl, #1
 8018298:	5c10      	ldrb	r0, [r2, r0]
 801829a:	bf0c      	ite	eq
 801829c:	f000 000f 	andeq.w	r0, r0, #15
 80182a0:	1100      	asrne	r0, r0, #4
 80182a2:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 80182a6:	b2c0      	uxtb	r0, r0
 80182a8:	3401      	adds	r4, #1
 80182aa:	d43f      	bmi.n	801832c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xf4>
 80182ac:	45a1      	cmp	r9, r4
 80182ae:	dd3d      	ble.n	801832c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xf4>
 80182b0:	2f00      	cmp	r7, #0
 80182b2:	f000 8097 	beq.w	80183e4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1ac>
 80182b6:	f1bc 0f00 	cmp.w	ip, #0
 80182ba:	db35      	blt.n	8018328 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xf0>
 80182bc:	45e0      	cmp	r8, ip
 80182be:	dd33      	ble.n	8018328 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xf0>
 80182c0:	eb03 090e 	add.w	r9, r3, lr
 80182c4:	ea4f 0459 	mov.w	r4, r9, lsr #1
 80182c8:	f019 0f01 	tst.w	r9, #1
 80182cc:	5d14      	ldrb	r4, [r2, r4]
 80182ce:	bf0c      	ite	eq
 80182d0:	f004 040f 	andeq.w	r4, r4, #15
 80182d4:	1124      	asrne	r4, r4, #4
 80182d6:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 80182da:	b2e4      	uxtb	r4, r4
 80182dc:	f11c 0c01 	adds.w	ip, ip, #1
 80182e0:	d427      	bmi.n	8018332 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xfa>
 80182e2:	45e0      	cmp	r8, ip
 80182e4:	dd25      	ble.n	8018332 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xfa>
 80182e6:	b335      	cbz	r5, 8018336 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xfe>
 80182e8:	3301      	adds	r3, #1
 80182ea:	449e      	add	lr, r3
 80182ec:	ea4f 035e 	mov.w	r3, lr, lsr #1
 80182f0:	f01e 0f01 	tst.w	lr, #1
 80182f4:	5cd2      	ldrb	r2, [r2, r3]
 80182f6:	bf0c      	ite	eq
 80182f8:	f002 020f 	andeq.w	r2, r2, #15
 80182fc:	1112      	asrne	r2, r2, #4
 80182fe:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8018302:	b2d3      	uxtb	r3, r2
 8018304:	2d0f      	cmp	r5, #15
 8018306:	d917      	bls.n	8018338 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x100>
 8018308:	4b39      	ldr	r3, [pc, #228]	; (80183f0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1b8>)
 801830a:	4a3a      	ldr	r2, [pc, #232]	; (80183f4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1bc>)
 801830c:	483a      	ldr	r0, [pc, #232]	; (80183f8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1c0>)
 801830e:	f240 210d 	movw	r1, #525	; 0x20d
 8018312:	f000 fc6b 	bl	8018bec <__assert_func>
 8018316:	2600      	movs	r6, #0
 8018318:	e7b1      	b.n	801827e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x46>
 801831a:	2000      	movs	r0, #0
 801831c:	4606      	mov	r6, r0
 801831e:	e7c3      	b.n	80182a8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x70>
 8018320:	2000      	movs	r0, #0
 8018322:	e7c1      	b.n	80182a8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x70>
 8018324:	4628      	mov	r0, r5
 8018326:	e7bf      	b.n	80182a8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x70>
 8018328:	2400      	movs	r4, #0
 801832a:	e7d7      	b.n	80182dc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xa4>
 801832c:	2300      	movs	r3, #0
 801832e:	461c      	mov	r4, r3
 8018330:	e7e8      	b.n	8018304 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xcc>
 8018332:	2300      	movs	r3, #0
 8018334:	e7e6      	b.n	8018304 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xcc>
 8018336:	462b      	mov	r3, r5
 8018338:	2f0f      	cmp	r7, #15
 801833a:	d8e5      	bhi.n	8018308 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xd0>
 801833c:	b2ad      	uxth	r5, r5
 801833e:	b2bf      	uxth	r7, r7
 8018340:	fb05 fc07 	mul.w	ip, r5, r7
 8018344:	ebcc 1707 	rsb	r7, ip, r7, lsl #4
 8018348:	012d      	lsls	r5, r5, #4
 801834a:	b2bf      	uxth	r7, r7
 801834c:	f5c5 7280 	rsb	r2, r5, #256	; 0x100
 8018350:	eba5 050c 	sub.w	r5, r5, ip
 8018354:	1bd2      	subs	r2, r2, r7
 8018356:	b2ad      	uxth	r5, r5
 8018358:	b292      	uxth	r2, r2
 801835a:	4368      	muls	r0, r5
 801835c:	fb06 0002 	mla	r0, r6, r2, r0
 8018360:	fb07 0404 	mla	r4, r7, r4, r0
 8018364:	fb0c 4303 	mla	r3, ip, r3, r4
 8018368:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801836c:	2b00      	cmp	r3, #0
 801836e:	d037      	beq.n	80183e0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a8>
 8018370:	4a22      	ldr	r2, [pc, #136]	; (80183fc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1c4>)
 8018372:	6816      	ldr	r6, [r2, #0]
 8018374:	880a      	ldrh	r2, [r1, #0]
 8018376:	b298      	uxth	r0, r3
 8018378:	1215      	asrs	r5, r2, #8
 801837a:	43db      	mvns	r3, r3
 801837c:	b2db      	uxtb	r3, r3
 801837e:	0a34      	lsrs	r4, r6, #8
 8018380:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8018384:	fb15 f503 	smulbb	r5, r5, r3
 8018388:	10d7      	asrs	r7, r2, #3
 801838a:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 801838e:	fb04 5400 	mla	r4, r4, r0, r5
 8018392:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8018396:	08f5      	lsrs	r5, r6, #3
 8018398:	fb17 f703 	smulbb	r7, r7, r3
 801839c:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 80183a0:	00d2      	lsls	r2, r2, #3
 80183a2:	fb05 7500 	mla	r5, r5, r0, r7
 80183a6:	b2d2      	uxtb	r2, r2
 80183a8:	00f6      	lsls	r6, r6, #3
 80183aa:	fb12 f303 	smulbb	r3, r2, r3
 80183ae:	b2ad      	uxth	r5, r5
 80183b0:	b2f6      	uxtb	r6, r6
 80183b2:	b2a4      	uxth	r4, r4
 80183b4:	fb06 3000 	mla	r0, r6, r0, r3
 80183b8:	1c6b      	adds	r3, r5, #1
 80183ba:	b280      	uxth	r0, r0
 80183bc:	1c62      	adds	r2, r4, #1
 80183be:	eb03 2315 	add.w	r3, r3, r5, lsr #8
 80183c2:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 80183c6:	095b      	lsrs	r3, r3, #5
 80183c8:	1c42      	adds	r2, r0, #1
 80183ca:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80183ce:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 80183d2:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 80183d6:	4323      	orrs	r3, r4
 80183d8:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 80183dc:	4303      	orrs	r3, r0
 80183de:	800b      	strh	r3, [r1, #0]
 80183e0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80183e4:	2d0f      	cmp	r5, #15
 80183e6:	d88f      	bhi.n	8018308 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xd0>
 80183e8:	463b      	mov	r3, r7
 80183ea:	463c      	mov	r4, r7
 80183ec:	e7a6      	b.n	801833c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x104>
 80183ee:	bf00      	nop
 80183f0:	0801c915 	.word	0x0801c915
 80183f4:	0801ce6d 	.word	0x0801ce6d
 80183f8:	0801c99d 	.word	0x0801c99d
 80183fc:	20012194 	.word	0x20012194

08018400 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 8018400:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018404:	ed2d 8b08 	vpush	{d8-d11}
 8018408:	b095      	sub	sp, #84	; 0x54
 801840a:	e9dd 4627 	ldrd	r4, r6, [sp, #156]	; 0x9c
 801840e:	9306      	str	r3, [sp, #24]
 8018410:	f9bd 30b8 	ldrsh.w	r3, [sp, #184]	; 0xb8
 8018414:	9307      	str	r3, [sp, #28]
 8018416:	920d      	str	r2, [sp, #52]	; 0x34
 8018418:	f9bd 30bc 	ldrsh.w	r3, [sp, #188]	; 0xbc
 801841c:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 801841e:	910a      	str	r1, [sp, #40]	; 0x28
 8018420:	9308      	str	r3, [sp, #32]
 8018422:	e9dd 132c 	ldrd	r1, r3, [sp, #176]	; 0xb0
 8018426:	9013      	str	r0, [sp, #76]	; 0x4c
 8018428:	6850      	ldr	r0, [r2, #4]
 801842a:	6812      	ldr	r2, [r2, #0]
 801842c:	fb00 1303 	mla	r3, r0, r3, r1
 8018430:	eb02 0b43 	add.w	fp, r2, r3, lsl #1
 8018434:	9b07      	ldr	r3, [sp, #28]
 8018436:	3301      	adds	r3, #1
 8018438:	f023 0301 	bic.w	r3, r3, #1
 801843c:	9309      	str	r3, [sp, #36]	; 0x24
 801843e:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8018440:	681f      	ldr	r7, [r3, #0]
 8018442:	eeb0 aa40 	vmov.f32	s20, s0
 8018446:	eef0 9a60 	vmov.f32	s19, s1
 801844a:	eeb0 9a41 	vmov.f32	s18, s2
 801844e:	eeb0 8a62 	vmov.f32	s16, s5
 8018452:	eef0 8a43 	vmov.f32	s17, s6
 8018456:	eef0 ba44 	vmov.f32	s23, s8
 801845a:	eeb0 ba64 	vmov.f32	s22, s9
 801845e:	eef0 aa45 	vmov.f32	s21, s10
 8018462:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8018464:	2b00      	cmp	r3, #0
 8018466:	dc03      	bgt.n	8018470 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x70>
 8018468:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801846a:	2b00      	cmp	r3, #0
 801846c:	f340 825c 	ble.w	8018928 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x528>
 8018470:	9b06      	ldr	r3, [sp, #24]
 8018472:	2b00      	cmp	r3, #0
 8018474:	f340 8119 	ble.w	80186aa <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2aa>
 8018478:	1422      	asrs	r2, r4, #16
 801847a:	ea4f 4326 	mov.w	r3, r6, asr #16
 801847e:	d42d      	bmi.n	80184dc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xdc>
 8018480:	9807      	ldr	r0, [sp, #28]
 8018482:	1c51      	adds	r1, r2, #1
 8018484:	4288      	cmp	r0, r1
 8018486:	dd2c      	ble.n	80184e2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe2>
 8018488:	2b00      	cmp	r3, #0
 801848a:	db2a      	blt.n	80184e2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe2>
 801848c:	9808      	ldr	r0, [sp, #32]
 801848e:	1c59      	adds	r1, r3, #1
 8018490:	4288      	cmp	r0, r1
 8018492:	dd26      	ble.n	80184e2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe2>
 8018494:	9b06      	ldr	r3, [sp, #24]
 8018496:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8018498:	3b01      	subs	r3, #1
 801849a:	fb02 4203 	mla	r2, r2, r3, r4
 801849e:	1412      	asrs	r2, r2, #16
 80184a0:	d42a      	bmi.n	80184f8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf8>
 80184a2:	9907      	ldr	r1, [sp, #28]
 80184a4:	3201      	adds	r2, #1
 80184a6:	4291      	cmp	r1, r2
 80184a8:	dd26      	ble.n	80184f8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf8>
 80184aa:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 80184ac:	fb02 6303 	mla	r3, r2, r3, r6
 80184b0:	141b      	asrs	r3, r3, #16
 80184b2:	d421      	bmi.n	80184f8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf8>
 80184b4:	9a08      	ldr	r2, [sp, #32]
 80184b6:	3301      	adds	r3, #1
 80184b8:	429a      	cmp	r2, r3
 80184ba:	dd1d      	ble.n	80184f8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf8>
 80184bc:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	; 0x24
 80184c0:	f8dd a018 	ldr.w	sl, [sp, #24]
 80184c4:	930e      	str	r3, [sp, #56]	; 0x38
 80184c6:	46d8      	mov	r8, fp
 80184c8:	f1ba 0f00 	cmp.w	sl, #0
 80184cc:	f300 8161 	bgt.w	8018792 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x392>
 80184d0:	9b06      	ldr	r3, [sp, #24]
 80184d2:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 80184d6:	eb0b 0b45 	add.w	fp, fp, r5, lsl #1
 80184da:	e0e8      	b.n	80186ae <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2ae>
 80184dc:	1c51      	adds	r1, r2, #1
 80184de:	f040 80da 	bne.w	8018696 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x296>
 80184e2:	9907      	ldr	r1, [sp, #28]
 80184e4:	4291      	cmp	r1, r2
 80184e6:	f340 80d6 	ble.w	8018696 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x296>
 80184ea:	1c5a      	adds	r2, r3, #1
 80184ec:	f2c0 80d3 	blt.w	8018696 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x296>
 80184f0:	9a08      	ldr	r2, [sp, #32]
 80184f2:	4293      	cmp	r3, r2
 80184f4:	f280 80cf 	bge.w	8018696 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x296>
 80184f8:	f8dd 9018 	ldr.w	r9, [sp, #24]
 80184fc:	f9bd a024 	ldrsh.w	sl, [sp, #36]	; 0x24
 8018500:	46d8      	mov	r8, fp
 8018502:	f1b9 0f00 	cmp.w	r9, #0
 8018506:	dde3      	ble.n	80184d0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xd0>
 8018508:	1420      	asrs	r0, r4, #16
 801850a:	ea4f 4326 	mov.w	r3, r6, asr #16
 801850e:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8018512:	f3c6 3103 	ubfx	r1, r6, #12, #4
 8018516:	f100 8124 	bmi.w	8018762 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x362>
 801851a:	9d07      	ldr	r5, [sp, #28]
 801851c:	f100 0c01 	add.w	ip, r0, #1
 8018520:	4565      	cmp	r5, ip
 8018522:	f340 8120 	ble.w	8018766 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x366>
 8018526:	2b00      	cmp	r3, #0
 8018528:	f2c0 811d 	blt.w	8018766 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x366>
 801852c:	9d08      	ldr	r5, [sp, #32]
 801852e:	f103 0c01 	add.w	ip, r3, #1
 8018532:	4565      	cmp	r5, ip
 8018534:	f340 8117 	ble.w	8018766 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x366>
 8018538:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801853a:	fb03 0305 	mla	r3, r3, r5, r0
 801853e:	0858      	lsrs	r0, r3, #1
 8018540:	07dd      	lsls	r5, r3, #31
 8018542:	5c38      	ldrb	r0, [r7, r0]
 8018544:	bf54      	ite	pl
 8018546:	f000 000f 	andpl.w	r0, r0, #15
 801854a:	1100      	asrmi	r0, r0, #4
 801854c:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 8018550:	b2c0      	uxtb	r0, r0
 8018552:	2a00      	cmp	r2, #0
 8018554:	f000 80ea 	beq.w	801872c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x32c>
 8018558:	f103 0e01 	add.w	lr, r3, #1
 801855c:	ea4f 0c5e 	mov.w	ip, lr, lsr #1
 8018560:	f01e 0f01 	tst.w	lr, #1
 8018564:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8018568:	bf0c      	ite	eq
 801856a:	f00c 0c0f 	andeq.w	ip, ip, #15
 801856e:	ea4f 1c2c 	movne.w	ip, ip, asr #4
 8018572:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8018576:	fa5f fc8c 	uxtb.w	ip, ip
 801857a:	f8cd c03c 	str.w	ip, [sp, #60]	; 0x3c
 801857e:	b1f9      	cbz	r1, 80185c0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1c0>
 8018580:	4453      	add	r3, sl
 8018582:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 8018586:	07dd      	lsls	r5, r3, #31
 8018588:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801858c:	bf54      	ite	pl
 801858e:	f00c 0c0f 	andpl.w	ip, ip, #15
 8018592:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8018596:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801859a:	3301      	adds	r3, #1
 801859c:	fa5f fc8c 	uxtb.w	ip, ip
 80185a0:	f8cd c02c 	str.w	ip, [sp, #44]	; 0x2c
 80185a4:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 80185a8:	07dd      	lsls	r5, r3, #31
 80185aa:	f817 c00c 	ldrb.w	ip, [r7, ip]
 80185ae:	bf54      	ite	pl
 80185b0:	f00c 030f 	andpl.w	r3, ip, #15
 80185b4:	ea4f 132c 	movmi.w	r3, ip, asr #4
 80185b8:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 80185bc:	b2db      	uxtb	r3, r3
 80185be:	9310      	str	r3, [sp, #64]	; 0x40
 80185c0:	b292      	uxth	r2, r2
 80185c2:	b289      	uxth	r1, r1
 80185c4:	fb02 f301 	mul.w	r3, r2, r1
 80185c8:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 80185cc:	0112      	lsls	r2, r2, #4
 80185ce:	b289      	uxth	r1, r1
 80185d0:	f5c2 7c80 	rsb	ip, r2, #256	; 0x100
 80185d4:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 80185d6:	1ad2      	subs	r2, r2, r3
 80185d8:	ebac 0c01 	sub.w	ip, ip, r1
 80185dc:	b292      	uxth	r2, r2
 80185de:	436a      	muls	r2, r5
 80185e0:	fa1f fc8c 	uxth.w	ip, ip
 80185e4:	fb00 200c 	mla	r0, r0, ip, r2
 80185e8:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80185ea:	fb01 0102 	mla	r1, r1, r2, r0
 80185ee:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80185f0:	fb03 1302 	mla	r3, r3, r2, r1
 80185f4:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80185f8:	2b00      	cmp	r3, #0
 80185fa:	d043      	beq.n	8018684 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x284>
 80185fc:	4ac9      	ldr	r2, [pc, #804]	; (8018924 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x524>)
 80185fe:	6811      	ldr	r1, [r2, #0]
 8018600:	ea4f 2e11 	mov.w	lr, r1, lsr #8
 8018604:	08ca      	lsrs	r2, r1, #3
 8018606:	00c9      	lsls	r1, r1, #3
 8018608:	b2c9      	uxtb	r1, r1
 801860a:	2bff      	cmp	r3, #255	; 0xff
 801860c:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 8018610:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8018614:	460d      	mov	r5, r1
 8018616:	f000 809c 	beq.w	8018752 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x352>
 801861a:	f8b8 c000 	ldrh.w	ip, [r8]
 801861e:	b299      	uxth	r1, r3
 8018620:	ea4f 202c 	mov.w	r0, ip, asr #8
 8018624:	43db      	mvns	r3, r3
 8018626:	b2db      	uxtb	r3, r3
 8018628:	fb1e fe01 	smulbb	lr, lr, r1
 801862c:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8018630:	fb00 e003 	mla	r0, r0, r3, lr
 8018634:	ea4f 0eec 	mov.w	lr, ip, asr #3
 8018638:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 801863c:	fb12 f201 	smulbb	r2, r2, r1
 8018640:	fb0e 2203 	mla	r2, lr, r3, r2
 8018644:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8018648:	b292      	uxth	r2, r2
 801864a:	fb15 f101 	smulbb	r1, r5, r1
 801864e:	fa5f fc8c 	uxtb.w	ip, ip
 8018652:	b280      	uxth	r0, r0
 8018654:	fb0c 1303 	mla	r3, ip, r3, r1
 8018658:	f102 0e01 	add.w	lr, r2, #1
 801865c:	b29b      	uxth	r3, r3
 801865e:	1c41      	adds	r1, r0, #1
 8018660:	eb0e 2212 	add.w	r2, lr, r2, lsr #8
 8018664:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 8018668:	0952      	lsrs	r2, r2, #5
 801866a:	1c59      	adds	r1, r3, #1
 801866c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8018670:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 8018674:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 8018678:	4310      	orrs	r0, r2
 801867a:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801867e:	4318      	orrs	r0, r3
 8018680:	f8a8 0000 	strh.w	r0, [r8]
 8018684:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8018686:	441c      	add	r4, r3
 8018688:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801868a:	f108 0802 	add.w	r8, r8, #2
 801868e:	441e      	add	r6, r3
 8018690:	f109 39ff 	add.w	r9, r9, #4294967295
 8018694:	e735      	b.n	8018502 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x102>
 8018696:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8018698:	441c      	add	r4, r3
 801869a:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801869c:	441e      	add	r6, r3
 801869e:	9b06      	ldr	r3, [sp, #24]
 80186a0:	3b01      	subs	r3, #1
 80186a2:	9306      	str	r3, [sp, #24]
 80186a4:	f10b 0b02 	add.w	fp, fp, #2
 80186a8:	e6e2      	b.n	8018470 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x70>
 80186aa:	f47f aef3 	bne.w	8018494 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x94>
 80186ae:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80186b0:	2b00      	cmp	r3, #0
 80186b2:	f340 8139 	ble.w	8018928 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x528>
 80186b6:	ee3a aa2b 	vadd.f32	s20, s20, s23
 80186ba:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80186be:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 80186c2:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80186c4:	ee79 9a8b 	vadd.f32	s19, s19, s22
 80186c8:	ee39 9a2a 	vadd.f32	s18, s18, s21
 80186cc:	ee29 7aa7 	vmul.f32	s14, s19, s15
 80186d0:	eef0 6a48 	vmov.f32	s13, s16
 80186d4:	ee69 7a27 	vmul.f32	s15, s18, s15
 80186d8:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80186dc:	ee37 8a48 	vsub.f32	s16, s14, s16
 80186e0:	ee16 4a90 	vmov	r4, s13
 80186e4:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 80186e8:	eef0 6a68 	vmov.f32	s13, s17
 80186ec:	ee77 8ae8 	vsub.f32	s17, s15, s17
 80186f0:	ee18 2a10 	vmov	r2, s16
 80186f4:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 80186f8:	fb92 f3f3 	sdiv	r3, r2, r3
 80186fc:	ee18 2a90 	vmov	r2, s17
 8018700:	9329      	str	r3, [sp, #164]	; 0xa4
 8018702:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8018704:	fb92 f3f3 	sdiv	r3, r2, r3
 8018708:	932a      	str	r3, [sp, #168]	; 0xa8
 801870a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801870c:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801870e:	3b01      	subs	r3, #1
 8018710:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8018714:	930a      	str	r3, [sp, #40]	; 0x28
 8018716:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8018718:	bf08      	it	eq
 801871a:	4613      	moveq	r3, r2
 801871c:	ee16 6a90 	vmov	r6, s13
 8018720:	9306      	str	r3, [sp, #24]
 8018722:	eef0 8a67 	vmov.f32	s17, s15
 8018726:	eeb0 8a47 	vmov.f32	s16, s14
 801872a:	e69a      	b.n	8018462 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x62>
 801872c:	2900      	cmp	r1, #0
 801872e:	f43f af47 	beq.w	80185c0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1c0>
 8018732:	4453      	add	r3, sl
 8018734:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 8018738:	07db      	lsls	r3, r3, #31
 801873a:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801873e:	bf54      	ite	pl
 8018740:	f00c 030f 	andpl.w	r3, ip, #15
 8018744:	ea4f 132c 	movmi.w	r3, ip, asr #4
 8018748:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 801874c:	b2db      	uxtb	r3, r3
 801874e:	930b      	str	r3, [sp, #44]	; 0x2c
 8018750:	e736      	b.n	80185c0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1c0>
 8018752:	00d2      	lsls	r2, r2, #3
 8018754:	ea42 2e0e 	orr.w	lr, r2, lr, lsl #8
 8018758:	ea4e 01d1 	orr.w	r1, lr, r1, lsr #3
 801875c:	f8a8 1000 	strh.w	r1, [r8]
 8018760:	e790      	b.n	8018684 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x284>
 8018762:	1c45      	adds	r5, r0, #1
 8018764:	d18e      	bne.n	8018684 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x284>
 8018766:	9d07      	ldr	r5, [sp, #28]
 8018768:	4285      	cmp	r5, r0
 801876a:	dd8b      	ble.n	8018684 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x284>
 801876c:	1c5d      	adds	r5, r3, #1
 801876e:	db89      	blt.n	8018684 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x284>
 8018770:	9d08      	ldr	r5, [sp, #32]
 8018772:	429d      	cmp	r5, r3
 8018774:	dd86      	ble.n	8018684 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x284>
 8018776:	e9cd 0302 	strd	r0, r3, [sp, #8]
 801877a:	9b07      	ldr	r3, [sp, #28]
 801877c:	9300      	str	r3, [sp, #0]
 801877e:	e9cd 2104 	strd	r2, r1, [sp, #16]
 8018782:	9501      	str	r5, [sp, #4]
 8018784:	4653      	mov	r3, sl
 8018786:	463a      	mov	r2, r7
 8018788:	4641      	mov	r1, r8
 801878a:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801878c:	f7ff fd54 	bl	8018238 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>
 8018790:	e778      	b.n	8018684 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x284>
 8018792:	9909      	ldr	r1, [sp, #36]	; 0x24
 8018794:	1422      	asrs	r2, r4, #16
 8018796:	1433      	asrs	r3, r6, #16
 8018798:	fb01 2303 	mla	r3, r1, r3, r2
 801879c:	085a      	lsrs	r2, r3, #1
 801879e:	07d9      	lsls	r1, r3, #31
 80187a0:	5cba      	ldrb	r2, [r7, r2]
 80187a2:	bf54      	ite	pl
 80187a4:	f002 020f 	andpl.w	r2, r2, #15
 80187a8:	1112      	asrmi	r2, r2, #4
 80187aa:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 80187ae:	f3c4 3003 	ubfx	r0, r4, #12, #4
 80187b2:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 80187b6:	b2d2      	uxtb	r2, r2
 80187b8:	2800      	cmp	r0, #0
 80187ba:	f000 8099 	beq.w	80188f0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4f0>
 80187be:	f103 0e01 	add.w	lr, r3, #1
 80187c2:	ea4f 015e 	mov.w	r1, lr, lsr #1
 80187c6:	f01e 0f01 	tst.w	lr, #1
 80187ca:	5c79      	ldrb	r1, [r7, r1]
 80187cc:	bf0c      	ite	eq
 80187ce:	f001 010f 	andeq.w	r1, r1, #15
 80187d2:	1109      	asrne	r1, r1, #4
 80187d4:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 80187d8:	b2c9      	uxtb	r1, r1
 80187da:	9111      	str	r1, [sp, #68]	; 0x44
 80187dc:	f1bc 0f00 	cmp.w	ip, #0
 80187e0:	d018      	beq.n	8018814 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x414>
 80187e2:	990e      	ldr	r1, [sp, #56]	; 0x38
 80187e4:	440b      	add	r3, r1
 80187e6:	0859      	lsrs	r1, r3, #1
 80187e8:	07dd      	lsls	r5, r3, #31
 80187ea:	5c79      	ldrb	r1, [r7, r1]
 80187ec:	bf54      	ite	pl
 80187ee:	f001 010f 	andpl.w	r1, r1, #15
 80187f2:	1109      	asrmi	r1, r1, #4
 80187f4:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 80187f8:	b2c9      	uxtb	r1, r1
 80187fa:	3301      	adds	r3, #1
 80187fc:	910c      	str	r1, [sp, #48]	; 0x30
 80187fe:	0859      	lsrs	r1, r3, #1
 8018800:	07dd      	lsls	r5, r3, #31
 8018802:	5c79      	ldrb	r1, [r7, r1]
 8018804:	bf54      	ite	pl
 8018806:	f001 010f 	andpl.w	r1, r1, #15
 801880a:	1109      	asrmi	r1, r1, #4
 801880c:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 8018810:	b2c9      	uxtb	r1, r1
 8018812:	9112      	str	r1, [sp, #72]	; 0x48
 8018814:	b280      	uxth	r0, r0
 8018816:	fa1f fc8c 	uxth.w	ip, ip
 801881a:	fb00 f30c 	mul.w	r3, r0, ip
 801881e:	ebc3 1c0c 	rsb	ip, r3, ip, lsl #4
 8018822:	0100      	lsls	r0, r0, #4
 8018824:	fa1f fc8c 	uxth.w	ip, ip
 8018828:	f5c0 7180 	rsb	r1, r0, #256	; 0x100
 801882c:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801882e:	1ac0      	subs	r0, r0, r3
 8018830:	eba1 010c 	sub.w	r1, r1, ip
 8018834:	b280      	uxth	r0, r0
 8018836:	b289      	uxth	r1, r1
 8018838:	4368      	muls	r0, r5
 801883a:	fb02 0201 	mla	r2, r2, r1, r0
 801883e:	990c      	ldr	r1, [sp, #48]	; 0x30
 8018840:	fb0c 2c01 	mla	ip, ip, r1, r2
 8018844:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8018846:	fb03 c302 	mla	r3, r3, r2, ip
 801884a:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801884e:	2b00      	cmp	r3, #0
 8018850:	d045      	beq.n	80188de <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4de>
 8018852:	4a34      	ldr	r2, [pc, #208]	; (8018924 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x524>)
 8018854:	6811      	ldr	r1, [r2, #0]
 8018856:	2bff      	cmp	r3, #255	; 0xff
 8018858:	ea4f 2e11 	mov.w	lr, r1, lsr #8
 801885c:	ea4f 02d1 	mov.w	r2, r1, lsr #3
 8018860:	ea4f 01c1 	mov.w	r1, r1, lsl #3
 8018864:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 8018868:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801886c:	b2c9      	uxtb	r1, r1
 801886e:	d050      	beq.n	8018912 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x512>
 8018870:	f8b8 c000 	ldrh.w	ip, [r8]
 8018874:	fa1f f983 	uxth.w	r9, r3
 8018878:	ea4f 202c 	mov.w	r0, ip, asr #8
 801887c:	43db      	mvns	r3, r3
 801887e:	b2db      	uxtb	r3, r3
 8018880:	fb1e fe09 	smulbb	lr, lr, r9
 8018884:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8018888:	fb00 e003 	mla	r0, r0, r3, lr
 801888c:	ea4f 0eec 	mov.w	lr, ip, asr #3
 8018890:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 8018894:	fb12 f209 	smulbb	r2, r2, r9
 8018898:	fb0e 2203 	mla	r2, lr, r3, r2
 801889c:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 80188a0:	b292      	uxth	r2, r2
 80188a2:	fa5f fc8c 	uxtb.w	ip, ip
 80188a6:	fb11 f109 	smulbb	r1, r1, r9
 80188aa:	b280      	uxth	r0, r0
 80188ac:	fb0c 1103 	mla	r1, ip, r3, r1
 80188b0:	f102 0e01 	add.w	lr, r2, #1
 80188b4:	b289      	uxth	r1, r1
 80188b6:	eb0e 2212 	add.w	r2, lr, r2, lsr #8
 80188ba:	f100 0e01 	add.w	lr, r0, #1
 80188be:	0952      	lsrs	r2, r2, #5
 80188c0:	eb0e 2010 	add.w	r0, lr, r0, lsr #8
 80188c4:	1c4b      	adds	r3, r1, #1
 80188c6:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80188ca:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 80188ce:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 80188d2:	4302      	orrs	r2, r0
 80188d4:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 80188d8:	430a      	orrs	r2, r1
 80188da:	f8a8 2000 	strh.w	r2, [r8]
 80188de:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80188e0:	441c      	add	r4, r3
 80188e2:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80188e4:	f108 0802 	add.w	r8, r8, #2
 80188e8:	441e      	add	r6, r3
 80188ea:	f10a 3aff 	add.w	sl, sl, #4294967295
 80188ee:	e5eb      	b.n	80184c8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xc8>
 80188f0:	f1bc 0f00 	cmp.w	ip, #0
 80188f4:	d08e      	beq.n	8018814 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x414>
 80188f6:	990e      	ldr	r1, [sp, #56]	; 0x38
 80188f8:	440b      	add	r3, r1
 80188fa:	0859      	lsrs	r1, r3, #1
 80188fc:	07db      	lsls	r3, r3, #31
 80188fe:	5c79      	ldrb	r1, [r7, r1]
 8018900:	bf54      	ite	pl
 8018902:	f001 010f 	andpl.w	r1, r1, #15
 8018906:	1109      	asrmi	r1, r1, #4
 8018908:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 801890c:	b2c9      	uxtb	r1, r1
 801890e:	910c      	str	r1, [sp, #48]	; 0x30
 8018910:	e780      	b.n	8018814 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x414>
 8018912:	00d2      	lsls	r2, r2, #3
 8018914:	ea42 2e0e 	orr.w	lr, r2, lr, lsl #8
 8018918:	ea4e 01d1 	orr.w	r1, lr, r1, lsr #3
 801891c:	f8a8 1000 	strh.w	r1, [r8]
 8018920:	e7dd      	b.n	80188de <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4de>
 8018922:	bf00      	nop
 8018924:	20012194 	.word	0x20012194
 8018928:	b015      	add	sp, #84	; 0x54
 801892a:	ecbd 8b08 	vpop	{d8-d11}
 801892e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018932:	bf00      	nop

08018934 <CRC_Lock>:
 8018934:	b530      	push	{r4, r5, lr}
 8018936:	4a1d      	ldr	r2, [pc, #116]	; (80189ac <CRC_Lock+0x78>)
 8018938:	6813      	ldr	r3, [r2, #0]
 801893a:	f023 0301 	bic.w	r3, r3, #1
 801893e:	6013      	str	r3, [r2, #0]
 8018940:	4b1b      	ldr	r3, [pc, #108]	; (80189b0 <CRC_Lock+0x7c>)
 8018942:	681a      	ldr	r2, [r3, #0]
 8018944:	f64f 74f0 	movw	r4, #65520	; 0xfff0
 8018948:	4022      	ands	r2, r4
 801894a:	f24c 2540 	movw	r5, #49728	; 0xc240
 801894e:	42aa      	cmp	r2, r5
 8018950:	d005      	beq.n	801895e <CRC_Lock+0x2a>
 8018952:	681b      	ldr	r3, [r3, #0]
 8018954:	f24c 2270 	movw	r2, #49776	; 0xc270
 8018958:	4023      	ands	r3, r4
 801895a:	4293      	cmp	r3, r2
 801895c:	d11d      	bne.n	801899a <CRC_Lock+0x66>
 801895e:	4b15      	ldr	r3, [pc, #84]	; (80189b4 <CRC_Lock+0x80>)
 8018960:	681b      	ldr	r3, [r3, #0]
 8018962:	b9d3      	cbnz	r3, 801899a <CRC_Lock+0x66>
 8018964:	4a14      	ldr	r2, [pc, #80]	; (80189b8 <CRC_Lock+0x84>)
 8018966:	6813      	ldr	r3, [r2, #0]
 8018968:	f3c3 030b 	ubfx	r3, r3, #0, #12
 801896c:	f5b3 6f8a 	cmp.w	r3, #1104	; 0x450
 8018970:	d006      	beq.n	8018980 <CRC_Lock+0x4c>
 8018972:	6813      	ldr	r3, [r2, #0]
 8018974:	f240 4283 	movw	r2, #1155	; 0x483
 8018978:	f3c3 030b 	ubfx	r3, r3, #0, #12
 801897c:	4293      	cmp	r3, r2
 801897e:	d10c      	bne.n	801899a <CRC_Lock+0x66>
 8018980:	4b0e      	ldr	r3, [pc, #56]	; (80189bc <CRC_Lock+0x88>)
 8018982:	2201      	movs	r2, #1
 8018984:	601a      	str	r2, [r3, #0]
 8018986:	681a      	ldr	r2, [r3, #0]
 8018988:	2a00      	cmp	r2, #0
 801898a:	d1fc      	bne.n	8018986 <CRC_Lock+0x52>
 801898c:	4b0c      	ldr	r3, [pc, #48]	; (80189c0 <CRC_Lock+0x8c>)
 801898e:	6018      	str	r0, [r3, #0]
 8018990:	6818      	ldr	r0, [r3, #0]
 8018992:	1a43      	subs	r3, r0, r1
 8018994:	4258      	negs	r0, r3
 8018996:	4158      	adcs	r0, r3
 8018998:	bd30      	pop	{r4, r5, pc}
 801899a:	4b0a      	ldr	r3, [pc, #40]	; (80189c4 <CRC_Lock+0x90>)
 801899c:	2201      	movs	r2, #1
 801899e:	601a      	str	r2, [r3, #0]
 80189a0:	681a      	ldr	r2, [r3, #0]
 80189a2:	2a00      	cmp	r2, #0
 80189a4:	d1fc      	bne.n	80189a0 <CRC_Lock+0x6c>
 80189a6:	4b08      	ldr	r3, [pc, #32]	; (80189c8 <CRC_Lock+0x94>)
 80189a8:	e7f1      	b.n	801898e <CRC_Lock+0x5a>
 80189aa:	bf00      	nop
 80189ac:	e0002000 	.word	0xe0002000
 80189b0:	e000ed00 	.word	0xe000ed00
 80189b4:	e0042000 	.word	0xe0042000
 80189b8:	5c001000 	.word	0x5c001000
 80189bc:	58024c08 	.word	0x58024c08
 80189c0:	58024c00 	.word	0x58024c00
 80189c4:	40023008 	.word	0x40023008
 80189c8:	40023000 	.word	0x40023000

080189cc <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>:
 80189cc:	6101      	str	r1, [r0, #16]
 80189ce:	4770      	bx	lr

080189d0 <_ZN8touchgfx8Gestures4tickEv>:
 80189d0:	7b83      	ldrb	r3, [r0, #14]
 80189d2:	b14b      	cbz	r3, 80189e8 <_ZN8touchgfx8Gestures4tickEv+0x18>
 80189d4:	8903      	ldrh	r3, [r0, #8]
 80189d6:	3301      	adds	r3, #1
 80189d8:	b29b      	uxth	r3, r3
 80189da:	2b07      	cmp	r3, #7
 80189dc:	8103      	strh	r3, [r0, #8]
 80189de:	bf81      	itttt	hi
 80189e0:	2300      	movhi	r3, #0
 80189e2:	8143      	strhhi	r3, [r0, #10]
 80189e4:	8183      	strhhi	r3, [r0, #12]
 80189e6:	7383      	strbhi	r3, [r0, #14]
 80189e8:	4770      	bx	lr
	...

080189ec <_ZN8touchgfx8Gestures17registerDragEventEtttt>:
 80189ec:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 80189f0:	4604      	mov	r4, r0
 80189f2:	8880      	ldrh	r0, [r0, #4]
 80189f4:	f8ad 0006 	strh.w	r0, [sp, #6]
 80189f8:	4698      	mov	r8, r3
 80189fa:	eba8 0000 	sub.w	r0, r8, r0
 80189fe:	4b1c      	ldr	r3, [pc, #112]	; (8018a70 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x84>)
 8018a00:	9300      	str	r3, [sp, #0]
 8018a02:	b280      	uxth	r0, r0
 8018a04:	2300      	movs	r3, #0
 8018a06:	f88d 3004 	strb.w	r3, [sp, #4]
 8018a0a:	b203      	sxth	r3, r0
 8018a0c:	2b00      	cmp	r3, #0
 8018a0e:	bfb8      	it	lt
 8018a10:	4240      	neglt	r0, r0
 8018a12:	4617      	mov	r7, r2
 8018a14:	8aa2      	ldrh	r2, [r4, #20]
 8018a16:	f8bd 5028 	ldrh.w	r5, [sp, #40]	; 0x28
 8018a1a:	f8ad 800a 	strh.w	r8, [sp, #10]
 8018a1e:	bfb8      	it	lt
 8018a20:	b203      	sxthlt	r3, r0
 8018a22:	460e      	mov	r6, r1
 8018a24:	4293      	cmp	r3, r2
 8018a26:	88e1      	ldrh	r1, [r4, #6]
 8018a28:	f8ad 1008 	strh.w	r1, [sp, #8]
 8018a2c:	f8ad 500c 	strh.w	r5, [sp, #12]
 8018a30:	dc08      	bgt.n	8018a44 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x58>
 8018a32:	1a69      	subs	r1, r5, r1
 8018a34:	b289      	uxth	r1, r1
 8018a36:	b20b      	sxth	r3, r1
 8018a38:	2b00      	cmp	r3, #0
 8018a3a:	bfbc      	itt	lt
 8018a3c:	4249      	neglt	r1, r1
 8018a3e:	b20b      	sxthlt	r3, r1
 8018a40:	429a      	cmp	r2, r3
 8018a42:	da13      	bge.n	8018a6c <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x80>
 8018a44:	6920      	ldr	r0, [r4, #16]
 8018a46:	6803      	ldr	r3, [r0, #0]
 8018a48:	4669      	mov	r1, sp
 8018a4a:	685b      	ldr	r3, [r3, #4]
 8018a4c:	4798      	blx	r3
 8018a4e:	eba8 0606 	sub.w	r6, r8, r6
 8018a52:	2300      	movs	r3, #0
 8018a54:	1bef      	subs	r7, r5, r7
 8018a56:	2001      	movs	r0, #1
 8018a58:	8123      	strh	r3, [r4, #8]
 8018a5a:	8166      	strh	r6, [r4, #10]
 8018a5c:	81a7      	strh	r7, [r4, #12]
 8018a5e:	f8a4 8004 	strh.w	r8, [r4, #4]
 8018a62:	80e5      	strh	r5, [r4, #6]
 8018a64:	73a0      	strb	r0, [r4, #14]
 8018a66:	b004      	add	sp, #16
 8018a68:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8018a6c:	2000      	movs	r0, #0
 8018a6e:	e7fa      	b.n	8018a66 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x7a>
 8018a70:	0801be24 	.word	0x0801be24

08018a74 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>:
 8018a74:	b5f0      	push	{r4, r5, r6, r7, lr}
 8018a76:	461e      	mov	r6, r3
 8018a78:	1e4b      	subs	r3, r1, #1
 8018a7a:	2b01      	cmp	r3, #1
 8018a7c:	b085      	sub	sp, #20
 8018a7e:	4604      	mov	r4, r0
 8018a80:	460d      	mov	r5, r1
 8018a82:	4617      	mov	r7, r2
 8018a84:	d84b      	bhi.n	8018b1e <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xaa>
 8018a86:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8018a8a:	1cd3      	adds	r3, r2, #3
 8018a8c:	b29b      	uxth	r3, r3
 8018a8e:	2b06      	cmp	r3, #6
 8018a90:	d916      	bls.n	8018ac0 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x4c>
 8018a92:	f8df c0a0 	ldr.w	ip, [pc, #160]	; 8018b34 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 8018a96:	f8cd c004 	str.w	ip, [sp, #4]
 8018a9a:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8018a9e:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8018aa2:	6900      	ldr	r0, [r0, #16]
 8018aa4:	f8ad 100c 	strh.w	r1, [sp, #12]
 8018aa8:	f04f 0c00 	mov.w	ip, #0
 8018aac:	f88d c008 	strb.w	ip, [sp, #8]
 8018ab0:	f8ad 200a 	strh.w	r2, [sp, #10]
 8018ab4:	f8ad 300e 	strh.w	r3, [sp, #14]
 8018ab8:	6803      	ldr	r3, [r0, #0]
 8018aba:	a901      	add	r1, sp, #4
 8018abc:	689b      	ldr	r3, [r3, #8]
 8018abe:	4798      	blx	r3
 8018ac0:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8018ac4:	1cd3      	adds	r3, r2, #3
 8018ac6:	b29b      	uxth	r3, r3
 8018ac8:	2b06      	cmp	r3, #6
 8018aca:	d916      	bls.n	8018afa <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 8018acc:	f8df c064 	ldr.w	ip, [pc, #100]	; 8018b34 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 8018ad0:	f8cd c004 	str.w	ip, [sp, #4]
 8018ad4:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8018ad8:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8018adc:	6920      	ldr	r0, [r4, #16]
 8018ade:	f8ad 100c 	strh.w	r1, [sp, #12]
 8018ae2:	f04f 0c01 	mov.w	ip, #1
 8018ae6:	f88d c008 	strb.w	ip, [sp, #8]
 8018aea:	f8ad 200a 	strh.w	r2, [sp, #10]
 8018aee:	f8ad 300e 	strh.w	r3, [sp, #14]
 8018af2:	6803      	ldr	r3, [r0, #0]
 8018af4:	a901      	add	r1, sp, #4
 8018af6:	689b      	ldr	r3, [r3, #8]
 8018af8:	4798      	blx	r3
 8018afa:	4b0d      	ldr	r3, [pc, #52]	; (8018b30 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xbc>)
 8018afc:	9301      	str	r3, [sp, #4]
 8018afe:	6920      	ldr	r0, [r4, #16]
 8018b00:	f88d 5008 	strb.w	r5, [sp, #8]
 8018b04:	2300      	movs	r3, #0
 8018b06:	f8ad 700a 	strh.w	r7, [sp, #10]
 8018b0a:	f8ad 600c 	strh.w	r6, [sp, #12]
 8018b0e:	f8ad 300e 	strh.w	r3, [sp, #14]
 8018b12:	6803      	ldr	r3, [r0, #0]
 8018b14:	a901      	add	r1, sp, #4
 8018b16:	681b      	ldr	r3, [r3, #0]
 8018b18:	4798      	blx	r3
 8018b1a:	b005      	add	sp, #20
 8018b1c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8018b1e:	2900      	cmp	r1, #0
 8018b20:	d1eb      	bne.n	8018afa <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 8018b22:	80a2      	strh	r2, [r4, #4]
 8018b24:	80c6      	strh	r6, [r0, #6]
 8018b26:	60a1      	str	r1, [r4, #8]
 8018b28:	81a1      	strh	r1, [r4, #12]
 8018b2a:	73a1      	strb	r1, [r4, #14]
 8018b2c:	e7e5      	b.n	8018afa <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 8018b2e:	bf00      	nop
 8018b30:	0801be10 	.word	0x0801be10
 8018b34:	0801be38 	.word	0x0801be38

08018b38 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE>:
 8018b38:	b570      	push	{r4, r5, r6, lr}
 8018b3a:	790b      	ldrb	r3, [r1, #4]
 8018b3c:	f890 502c 	ldrb.w	r5, [r0, #44]	; 0x2c
 8018b40:	2b00      	cmp	r3, #0
 8018b42:	bf0c      	ite	eq
 8018b44:	2301      	moveq	r3, #1
 8018b46:	2300      	movne	r3, #0
 8018b48:	4604      	mov	r4, r0
 8018b4a:	460e      	mov	r6, r1
 8018b4c:	f880 302c 	strb.w	r3, [r0, #44]	; 0x2c
 8018b50:	d110      	bne.n	8018b74 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
 8018b52:	b185      	cbz	r5, 8018b76 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3e>
 8018b54:	7933      	ldrb	r3, [r6, #4]
 8018b56:	2b01      	cmp	r3, #1
 8018b58:	d113      	bne.n	8018b82 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x4a>
 8018b5a:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 8018b5c:	b188      	cbz	r0, 8018b82 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x4a>
 8018b5e:	6803      	ldr	r3, [r0, #0]
 8018b60:	68db      	ldr	r3, [r3, #12]
 8018b62:	4798      	blx	r3
 8018b64:	b168      	cbz	r0, 8018b82 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x4a>
 8018b66:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 8018b68:	6803      	ldr	r3, [r0, #0]
 8018b6a:	4621      	mov	r1, r4
 8018b6c:	689b      	ldr	r3, [r3, #8]
 8018b6e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8018b72:	4718      	bx	r3
 8018b74:	b12d      	cbz	r5, 8018b82 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x4a>
 8018b76:	6823      	ldr	r3, [r4, #0]
 8018b78:	4620      	mov	r0, r4
 8018b7a:	695b      	ldr	r3, [r3, #20]
 8018b7c:	4798      	blx	r3
 8018b7e:	2d00      	cmp	r5, #0
 8018b80:	d1e8      	bne.n	8018b54 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x1c>
 8018b82:	bd70      	pop	{r4, r5, r6, pc}

08018b84 <__aeabi_atexit>:
 8018b84:	460b      	mov	r3, r1
 8018b86:	4601      	mov	r1, r0
 8018b88:	4618      	mov	r0, r3
 8018b8a:	f000 b853 	b.w	8018c34 <__cxa_atexit>

08018b8e <__cxa_pure_virtual>:
 8018b8e:	b508      	push	{r3, lr}
 8018b90:	f000 f820 	bl	8018bd4 <_ZSt9terminatev>

08018b94 <_ZdlPvj>:
 8018b94:	f000 b80f 	b.w	8018bb6 <_ZdlPv>

08018b98 <__cxa_guard_acquire>:
 8018b98:	6803      	ldr	r3, [r0, #0]
 8018b9a:	07db      	lsls	r3, r3, #31
 8018b9c:	d406      	bmi.n	8018bac <__cxa_guard_acquire+0x14>
 8018b9e:	7843      	ldrb	r3, [r0, #1]
 8018ba0:	b103      	cbz	r3, 8018ba4 <__cxa_guard_acquire+0xc>
 8018ba2:	deff      	udf	#255	; 0xff
 8018ba4:	2301      	movs	r3, #1
 8018ba6:	7043      	strb	r3, [r0, #1]
 8018ba8:	4618      	mov	r0, r3
 8018baa:	4770      	bx	lr
 8018bac:	2000      	movs	r0, #0
 8018bae:	4770      	bx	lr

08018bb0 <__cxa_guard_release>:
 8018bb0:	2301      	movs	r3, #1
 8018bb2:	6003      	str	r3, [r0, #0]
 8018bb4:	4770      	bx	lr

08018bb6 <_ZdlPv>:
 8018bb6:	f000 b88f 	b.w	8018cd8 <free>

08018bba <_ZN10__cxxabiv111__terminateEPFvvE>:
 8018bba:	b508      	push	{r3, lr}
 8018bbc:	4780      	blx	r0
 8018bbe:	f000 f80e 	bl	8018bde <abort>
	...

08018bc4 <_ZSt13get_terminatev>:
 8018bc4:	4b02      	ldr	r3, [pc, #8]	; (8018bd0 <_ZSt13get_terminatev+0xc>)
 8018bc6:	6818      	ldr	r0, [r3, #0]
 8018bc8:	f3bf 8f5b 	dmb	ish
 8018bcc:	4770      	bx	lr
 8018bce:	bf00      	nop
 8018bd0:	200000f8 	.word	0x200000f8

08018bd4 <_ZSt9terminatev>:
 8018bd4:	b508      	push	{r3, lr}
 8018bd6:	f7ff fff5 	bl	8018bc4 <_ZSt13get_terminatev>
 8018bda:	f7ff ffee 	bl	8018bba <_ZN10__cxxabiv111__terminateEPFvvE>

08018bde <abort>:
 8018bde:	b508      	push	{r3, lr}
 8018be0:	2006      	movs	r0, #6
 8018be2:	f000 fc3d 	bl	8019460 <raise>
 8018be6:	2001      	movs	r0, #1
 8018be8:	f7e9 fab2 	bl	8002150 <_exit>

08018bec <__assert_func>:
 8018bec:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8018bee:	461c      	mov	r4, r3
 8018bf0:	4b09      	ldr	r3, [pc, #36]	; (8018c18 <__assert_func+0x2c>)
 8018bf2:	681b      	ldr	r3, [r3, #0]
 8018bf4:	4605      	mov	r5, r0
 8018bf6:	68d8      	ldr	r0, [r3, #12]
 8018bf8:	b152      	cbz	r2, 8018c10 <__assert_func+0x24>
 8018bfa:	4b08      	ldr	r3, [pc, #32]	; (8018c1c <__assert_func+0x30>)
 8018bfc:	9100      	str	r1, [sp, #0]
 8018bfe:	e9cd 3201 	strd	r3, r2, [sp, #4]
 8018c02:	4907      	ldr	r1, [pc, #28]	; (8018c20 <__assert_func+0x34>)
 8018c04:	462b      	mov	r3, r5
 8018c06:	4622      	mov	r2, r4
 8018c08:	f000 f828 	bl	8018c5c <fiprintf>
 8018c0c:	f7ff ffe7 	bl	8018bde <abort>
 8018c10:	4b04      	ldr	r3, [pc, #16]	; (8018c24 <__assert_func+0x38>)
 8018c12:	461a      	mov	r2, r3
 8018c14:	e7f2      	b.n	8018bfc <__assert_func+0x10>
 8018c16:	bf00      	nop
 8018c18:	200000fc 	.word	0x200000fc
 8018c1c:	0801d0a8 	.word	0x0801d0a8
 8018c20:	0801d0b5 	.word	0x0801d0b5
 8018c24:	0801d0e3 	.word	0x0801d0e3

08018c28 <atexit>:
 8018c28:	2300      	movs	r3, #0
 8018c2a:	4601      	mov	r1, r0
 8018c2c:	461a      	mov	r2, r3
 8018c2e:	4618      	mov	r0, r3
 8018c30:	f000 bcf2 	b.w	8019618 <__register_exitproc>

08018c34 <__cxa_atexit>:
 8018c34:	b510      	push	{r4, lr}
 8018c36:	4c05      	ldr	r4, [pc, #20]	; (8018c4c <__cxa_atexit+0x18>)
 8018c38:	4613      	mov	r3, r2
 8018c3a:	b12c      	cbz	r4, 8018c48 <__cxa_atexit+0x14>
 8018c3c:	460a      	mov	r2, r1
 8018c3e:	4601      	mov	r1, r0
 8018c40:	2002      	movs	r0, #2
 8018c42:	f000 fce9 	bl	8019618 <__register_exitproc>
 8018c46:	bd10      	pop	{r4, pc}
 8018c48:	4620      	mov	r0, r4
 8018c4a:	e7fc      	b.n	8018c46 <__cxa_atexit+0x12>
 8018c4c:	08019619 	.word	0x08019619

08018c50 <__errno>:
 8018c50:	4b01      	ldr	r3, [pc, #4]	; (8018c58 <__errno+0x8>)
 8018c52:	6818      	ldr	r0, [r3, #0]
 8018c54:	4770      	bx	lr
 8018c56:	bf00      	nop
 8018c58:	200000fc 	.word	0x200000fc

08018c5c <fiprintf>:
 8018c5c:	b40e      	push	{r1, r2, r3}
 8018c5e:	b503      	push	{r0, r1, lr}
 8018c60:	4601      	mov	r1, r0
 8018c62:	ab03      	add	r3, sp, #12
 8018c64:	4805      	ldr	r0, [pc, #20]	; (8018c7c <fiprintf+0x20>)
 8018c66:	f853 2b04 	ldr.w	r2, [r3], #4
 8018c6a:	6800      	ldr	r0, [r0, #0]
 8018c6c:	9301      	str	r3, [sp, #4]
 8018c6e:	f000 f921 	bl	8018eb4 <_vfiprintf_r>
 8018c72:	b002      	add	sp, #8
 8018c74:	f85d eb04 	ldr.w	lr, [sp], #4
 8018c78:	b003      	add	sp, #12
 8018c7a:	4770      	bx	lr
 8018c7c:	200000fc 	.word	0x200000fc

08018c80 <__libc_init_array>:
 8018c80:	b570      	push	{r4, r5, r6, lr}
 8018c82:	4e0d      	ldr	r6, [pc, #52]	; (8018cb8 <__libc_init_array+0x38>)
 8018c84:	4c0d      	ldr	r4, [pc, #52]	; (8018cbc <__libc_init_array+0x3c>)
 8018c86:	1ba4      	subs	r4, r4, r6
 8018c88:	10a4      	asrs	r4, r4, #2
 8018c8a:	2500      	movs	r5, #0
 8018c8c:	42a5      	cmp	r5, r4
 8018c8e:	d109      	bne.n	8018ca4 <__libc_init_array+0x24>
 8018c90:	4e0b      	ldr	r6, [pc, #44]	; (8018cc0 <__libc_init_array+0x40>)
 8018c92:	4c0c      	ldr	r4, [pc, #48]	; (8018cc4 <__libc_init_array+0x44>)
 8018c94:	f000 ffb0 	bl	8019bf8 <_init>
 8018c98:	1ba4      	subs	r4, r4, r6
 8018c9a:	10a4      	asrs	r4, r4, #2
 8018c9c:	2500      	movs	r5, #0
 8018c9e:	42a5      	cmp	r5, r4
 8018ca0:	d105      	bne.n	8018cae <__libc_init_array+0x2e>
 8018ca2:	bd70      	pop	{r4, r5, r6, pc}
 8018ca4:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 8018ca8:	4798      	blx	r3
 8018caa:	3501      	adds	r5, #1
 8018cac:	e7ee      	b.n	8018c8c <__libc_init_array+0xc>
 8018cae:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 8018cb2:	4798      	blx	r3
 8018cb4:	3501      	adds	r5, #1
 8018cb6:	e7f2      	b.n	8018c9e <__libc_init_array+0x1e>
 8018cb8:	08056e6c 	.word	0x08056e6c
 8018cbc:	08056e6c 	.word	0x08056e6c
 8018cc0:	08056e6c 	.word	0x08056e6c
 8018cc4:	08056e80 	.word	0x08056e80

08018cc8 <malloc>:
 8018cc8:	4b02      	ldr	r3, [pc, #8]	; (8018cd4 <malloc+0xc>)
 8018cca:	4601      	mov	r1, r0
 8018ccc:	6818      	ldr	r0, [r3, #0]
 8018cce:	f000 b86d 	b.w	8018dac <_malloc_r>
 8018cd2:	bf00      	nop
 8018cd4:	200000fc 	.word	0x200000fc

08018cd8 <free>:
 8018cd8:	4b02      	ldr	r3, [pc, #8]	; (8018ce4 <free+0xc>)
 8018cda:	4601      	mov	r1, r0
 8018cdc:	6818      	ldr	r0, [r3, #0]
 8018cde:	f000 b817 	b.w	8018d10 <_free_r>
 8018ce2:	bf00      	nop
 8018ce4:	200000fc 	.word	0x200000fc

08018ce8 <memcpy>:
 8018ce8:	b510      	push	{r4, lr}
 8018cea:	1e43      	subs	r3, r0, #1
 8018cec:	440a      	add	r2, r1
 8018cee:	4291      	cmp	r1, r2
 8018cf0:	d100      	bne.n	8018cf4 <memcpy+0xc>
 8018cf2:	bd10      	pop	{r4, pc}
 8018cf4:	f811 4b01 	ldrb.w	r4, [r1], #1
 8018cf8:	f803 4f01 	strb.w	r4, [r3, #1]!
 8018cfc:	e7f7      	b.n	8018cee <memcpy+0x6>

08018cfe <memset>:
 8018cfe:	4402      	add	r2, r0
 8018d00:	4603      	mov	r3, r0
 8018d02:	4293      	cmp	r3, r2
 8018d04:	d100      	bne.n	8018d08 <memset+0xa>
 8018d06:	4770      	bx	lr
 8018d08:	f803 1b01 	strb.w	r1, [r3], #1
 8018d0c:	e7f9      	b.n	8018d02 <memset+0x4>
	...

08018d10 <_free_r>:
 8018d10:	b538      	push	{r3, r4, r5, lr}
 8018d12:	4605      	mov	r5, r0
 8018d14:	2900      	cmp	r1, #0
 8018d16:	d045      	beq.n	8018da4 <_free_r+0x94>
 8018d18:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8018d1c:	1f0c      	subs	r4, r1, #4
 8018d1e:	2b00      	cmp	r3, #0
 8018d20:	bfb8      	it	lt
 8018d22:	18e4      	addlt	r4, r4, r3
 8018d24:	f000 feba 	bl	8019a9c <__malloc_lock>
 8018d28:	4a1f      	ldr	r2, [pc, #124]	; (8018da8 <_free_r+0x98>)
 8018d2a:	6813      	ldr	r3, [r2, #0]
 8018d2c:	4610      	mov	r0, r2
 8018d2e:	b933      	cbnz	r3, 8018d3e <_free_r+0x2e>
 8018d30:	6063      	str	r3, [r4, #4]
 8018d32:	6014      	str	r4, [r2, #0]
 8018d34:	4628      	mov	r0, r5
 8018d36:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8018d3a:	f000 beb0 	b.w	8019a9e <__malloc_unlock>
 8018d3e:	42a3      	cmp	r3, r4
 8018d40:	d90c      	bls.n	8018d5c <_free_r+0x4c>
 8018d42:	6821      	ldr	r1, [r4, #0]
 8018d44:	1862      	adds	r2, r4, r1
 8018d46:	4293      	cmp	r3, r2
 8018d48:	bf04      	itt	eq
 8018d4a:	681a      	ldreq	r2, [r3, #0]
 8018d4c:	685b      	ldreq	r3, [r3, #4]
 8018d4e:	6063      	str	r3, [r4, #4]
 8018d50:	bf04      	itt	eq
 8018d52:	1852      	addeq	r2, r2, r1
 8018d54:	6022      	streq	r2, [r4, #0]
 8018d56:	6004      	str	r4, [r0, #0]
 8018d58:	e7ec      	b.n	8018d34 <_free_r+0x24>
 8018d5a:	4613      	mov	r3, r2
 8018d5c:	685a      	ldr	r2, [r3, #4]
 8018d5e:	b10a      	cbz	r2, 8018d64 <_free_r+0x54>
 8018d60:	42a2      	cmp	r2, r4
 8018d62:	d9fa      	bls.n	8018d5a <_free_r+0x4a>
 8018d64:	6819      	ldr	r1, [r3, #0]
 8018d66:	1858      	adds	r0, r3, r1
 8018d68:	42a0      	cmp	r0, r4
 8018d6a:	d10b      	bne.n	8018d84 <_free_r+0x74>
 8018d6c:	6820      	ldr	r0, [r4, #0]
 8018d6e:	4401      	add	r1, r0
 8018d70:	1858      	adds	r0, r3, r1
 8018d72:	4282      	cmp	r2, r0
 8018d74:	6019      	str	r1, [r3, #0]
 8018d76:	d1dd      	bne.n	8018d34 <_free_r+0x24>
 8018d78:	6810      	ldr	r0, [r2, #0]
 8018d7a:	6852      	ldr	r2, [r2, #4]
 8018d7c:	605a      	str	r2, [r3, #4]
 8018d7e:	4401      	add	r1, r0
 8018d80:	6019      	str	r1, [r3, #0]
 8018d82:	e7d7      	b.n	8018d34 <_free_r+0x24>
 8018d84:	d902      	bls.n	8018d8c <_free_r+0x7c>
 8018d86:	230c      	movs	r3, #12
 8018d88:	602b      	str	r3, [r5, #0]
 8018d8a:	e7d3      	b.n	8018d34 <_free_r+0x24>
 8018d8c:	6820      	ldr	r0, [r4, #0]
 8018d8e:	1821      	adds	r1, r4, r0
 8018d90:	428a      	cmp	r2, r1
 8018d92:	bf04      	itt	eq
 8018d94:	6811      	ldreq	r1, [r2, #0]
 8018d96:	6852      	ldreq	r2, [r2, #4]
 8018d98:	6062      	str	r2, [r4, #4]
 8018d9a:	bf04      	itt	eq
 8018d9c:	1809      	addeq	r1, r1, r0
 8018d9e:	6021      	streq	r1, [r4, #0]
 8018da0:	605c      	str	r4, [r3, #4]
 8018da2:	e7c7      	b.n	8018d34 <_free_r+0x24>
 8018da4:	bd38      	pop	{r3, r4, r5, pc}
 8018da6:	bf00      	nop
 8018da8:	200122a8 	.word	0x200122a8

08018dac <_malloc_r>:
 8018dac:	b570      	push	{r4, r5, r6, lr}
 8018dae:	1ccd      	adds	r5, r1, #3
 8018db0:	f025 0503 	bic.w	r5, r5, #3
 8018db4:	3508      	adds	r5, #8
 8018db6:	2d0c      	cmp	r5, #12
 8018db8:	bf38      	it	cc
 8018dba:	250c      	movcc	r5, #12
 8018dbc:	2d00      	cmp	r5, #0
 8018dbe:	4606      	mov	r6, r0
 8018dc0:	db01      	blt.n	8018dc6 <_malloc_r+0x1a>
 8018dc2:	42a9      	cmp	r1, r5
 8018dc4:	d903      	bls.n	8018dce <_malloc_r+0x22>
 8018dc6:	230c      	movs	r3, #12
 8018dc8:	6033      	str	r3, [r6, #0]
 8018dca:	2000      	movs	r0, #0
 8018dcc:	bd70      	pop	{r4, r5, r6, pc}
 8018dce:	f000 fe65 	bl	8019a9c <__malloc_lock>
 8018dd2:	4a21      	ldr	r2, [pc, #132]	; (8018e58 <_malloc_r+0xac>)
 8018dd4:	6814      	ldr	r4, [r2, #0]
 8018dd6:	4621      	mov	r1, r4
 8018dd8:	b991      	cbnz	r1, 8018e00 <_malloc_r+0x54>
 8018dda:	4c20      	ldr	r4, [pc, #128]	; (8018e5c <_malloc_r+0xb0>)
 8018ddc:	6823      	ldr	r3, [r4, #0]
 8018dde:	b91b      	cbnz	r3, 8018de8 <_malloc_r+0x3c>
 8018de0:	4630      	mov	r0, r6
 8018de2:	f000 fb05 	bl	80193f0 <_sbrk_r>
 8018de6:	6020      	str	r0, [r4, #0]
 8018de8:	4629      	mov	r1, r5
 8018dea:	4630      	mov	r0, r6
 8018dec:	f000 fb00 	bl	80193f0 <_sbrk_r>
 8018df0:	1c43      	adds	r3, r0, #1
 8018df2:	d124      	bne.n	8018e3e <_malloc_r+0x92>
 8018df4:	230c      	movs	r3, #12
 8018df6:	6033      	str	r3, [r6, #0]
 8018df8:	4630      	mov	r0, r6
 8018dfa:	f000 fe50 	bl	8019a9e <__malloc_unlock>
 8018dfe:	e7e4      	b.n	8018dca <_malloc_r+0x1e>
 8018e00:	680b      	ldr	r3, [r1, #0]
 8018e02:	1b5b      	subs	r3, r3, r5
 8018e04:	d418      	bmi.n	8018e38 <_malloc_r+0x8c>
 8018e06:	2b0b      	cmp	r3, #11
 8018e08:	d90f      	bls.n	8018e2a <_malloc_r+0x7e>
 8018e0a:	600b      	str	r3, [r1, #0]
 8018e0c:	50cd      	str	r5, [r1, r3]
 8018e0e:	18cc      	adds	r4, r1, r3
 8018e10:	4630      	mov	r0, r6
 8018e12:	f000 fe44 	bl	8019a9e <__malloc_unlock>
 8018e16:	f104 000b 	add.w	r0, r4, #11
 8018e1a:	1d23      	adds	r3, r4, #4
 8018e1c:	f020 0007 	bic.w	r0, r0, #7
 8018e20:	1ac3      	subs	r3, r0, r3
 8018e22:	d0d3      	beq.n	8018dcc <_malloc_r+0x20>
 8018e24:	425a      	negs	r2, r3
 8018e26:	50e2      	str	r2, [r4, r3]
 8018e28:	e7d0      	b.n	8018dcc <_malloc_r+0x20>
 8018e2a:	428c      	cmp	r4, r1
 8018e2c:	684b      	ldr	r3, [r1, #4]
 8018e2e:	bf16      	itet	ne
 8018e30:	6063      	strne	r3, [r4, #4]
 8018e32:	6013      	streq	r3, [r2, #0]
 8018e34:	460c      	movne	r4, r1
 8018e36:	e7eb      	b.n	8018e10 <_malloc_r+0x64>
 8018e38:	460c      	mov	r4, r1
 8018e3a:	6849      	ldr	r1, [r1, #4]
 8018e3c:	e7cc      	b.n	8018dd8 <_malloc_r+0x2c>
 8018e3e:	1cc4      	adds	r4, r0, #3
 8018e40:	f024 0403 	bic.w	r4, r4, #3
 8018e44:	42a0      	cmp	r0, r4
 8018e46:	d005      	beq.n	8018e54 <_malloc_r+0xa8>
 8018e48:	1a21      	subs	r1, r4, r0
 8018e4a:	4630      	mov	r0, r6
 8018e4c:	f000 fad0 	bl	80193f0 <_sbrk_r>
 8018e50:	3001      	adds	r0, #1
 8018e52:	d0cf      	beq.n	8018df4 <_malloc_r+0x48>
 8018e54:	6025      	str	r5, [r4, #0]
 8018e56:	e7db      	b.n	8018e10 <_malloc_r+0x64>
 8018e58:	200122a8 	.word	0x200122a8
 8018e5c:	200122ac 	.word	0x200122ac

08018e60 <__sfputc_r>:
 8018e60:	6893      	ldr	r3, [r2, #8]
 8018e62:	3b01      	subs	r3, #1
 8018e64:	2b00      	cmp	r3, #0
 8018e66:	b410      	push	{r4}
 8018e68:	6093      	str	r3, [r2, #8]
 8018e6a:	da08      	bge.n	8018e7e <__sfputc_r+0x1e>
 8018e6c:	6994      	ldr	r4, [r2, #24]
 8018e6e:	42a3      	cmp	r3, r4
 8018e70:	db01      	blt.n	8018e76 <__sfputc_r+0x16>
 8018e72:	290a      	cmp	r1, #10
 8018e74:	d103      	bne.n	8018e7e <__sfputc_r+0x1e>
 8018e76:	f85d 4b04 	ldr.w	r4, [sp], #4
 8018e7a:	f000 bb0d 	b.w	8019498 <__swbuf_r>
 8018e7e:	6813      	ldr	r3, [r2, #0]
 8018e80:	1c58      	adds	r0, r3, #1
 8018e82:	6010      	str	r0, [r2, #0]
 8018e84:	7019      	strb	r1, [r3, #0]
 8018e86:	4608      	mov	r0, r1
 8018e88:	f85d 4b04 	ldr.w	r4, [sp], #4
 8018e8c:	4770      	bx	lr

08018e8e <__sfputs_r>:
 8018e8e:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8018e90:	4606      	mov	r6, r0
 8018e92:	460f      	mov	r7, r1
 8018e94:	4614      	mov	r4, r2
 8018e96:	18d5      	adds	r5, r2, r3
 8018e98:	42ac      	cmp	r4, r5
 8018e9a:	d101      	bne.n	8018ea0 <__sfputs_r+0x12>
 8018e9c:	2000      	movs	r0, #0
 8018e9e:	e007      	b.n	8018eb0 <__sfputs_r+0x22>
 8018ea0:	463a      	mov	r2, r7
 8018ea2:	f814 1b01 	ldrb.w	r1, [r4], #1
 8018ea6:	4630      	mov	r0, r6
 8018ea8:	f7ff ffda 	bl	8018e60 <__sfputc_r>
 8018eac:	1c43      	adds	r3, r0, #1
 8018eae:	d1f3      	bne.n	8018e98 <__sfputs_r+0xa>
 8018eb0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08018eb4 <_vfiprintf_r>:
 8018eb4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018eb8:	460c      	mov	r4, r1
 8018eba:	b09d      	sub	sp, #116	; 0x74
 8018ebc:	4617      	mov	r7, r2
 8018ebe:	461d      	mov	r5, r3
 8018ec0:	4606      	mov	r6, r0
 8018ec2:	b118      	cbz	r0, 8018ecc <_vfiprintf_r+0x18>
 8018ec4:	6983      	ldr	r3, [r0, #24]
 8018ec6:	b90b      	cbnz	r3, 8018ecc <_vfiprintf_r+0x18>
 8018ec8:	f000 fcfa 	bl	80198c0 <__sinit>
 8018ecc:	4b7c      	ldr	r3, [pc, #496]	; (80190c0 <_vfiprintf_r+0x20c>)
 8018ece:	429c      	cmp	r4, r3
 8018ed0:	d158      	bne.n	8018f84 <_vfiprintf_r+0xd0>
 8018ed2:	6874      	ldr	r4, [r6, #4]
 8018ed4:	89a3      	ldrh	r3, [r4, #12]
 8018ed6:	0718      	lsls	r0, r3, #28
 8018ed8:	d55e      	bpl.n	8018f98 <_vfiprintf_r+0xe4>
 8018eda:	6923      	ldr	r3, [r4, #16]
 8018edc:	2b00      	cmp	r3, #0
 8018ede:	d05b      	beq.n	8018f98 <_vfiprintf_r+0xe4>
 8018ee0:	2300      	movs	r3, #0
 8018ee2:	9309      	str	r3, [sp, #36]	; 0x24
 8018ee4:	2320      	movs	r3, #32
 8018ee6:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8018eea:	2330      	movs	r3, #48	; 0x30
 8018eec:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8018ef0:	9503      	str	r5, [sp, #12]
 8018ef2:	f04f 0b01 	mov.w	fp, #1
 8018ef6:	46b8      	mov	r8, r7
 8018ef8:	4645      	mov	r5, r8
 8018efa:	f815 3b01 	ldrb.w	r3, [r5], #1
 8018efe:	b10b      	cbz	r3, 8018f04 <_vfiprintf_r+0x50>
 8018f00:	2b25      	cmp	r3, #37	; 0x25
 8018f02:	d154      	bne.n	8018fae <_vfiprintf_r+0xfa>
 8018f04:	ebb8 0a07 	subs.w	sl, r8, r7
 8018f08:	d00b      	beq.n	8018f22 <_vfiprintf_r+0x6e>
 8018f0a:	4653      	mov	r3, sl
 8018f0c:	463a      	mov	r2, r7
 8018f0e:	4621      	mov	r1, r4
 8018f10:	4630      	mov	r0, r6
 8018f12:	f7ff ffbc 	bl	8018e8e <__sfputs_r>
 8018f16:	3001      	adds	r0, #1
 8018f18:	f000 80c2 	beq.w	80190a0 <_vfiprintf_r+0x1ec>
 8018f1c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8018f1e:	4453      	add	r3, sl
 8018f20:	9309      	str	r3, [sp, #36]	; 0x24
 8018f22:	f898 3000 	ldrb.w	r3, [r8]
 8018f26:	2b00      	cmp	r3, #0
 8018f28:	f000 80ba 	beq.w	80190a0 <_vfiprintf_r+0x1ec>
 8018f2c:	2300      	movs	r3, #0
 8018f2e:	f04f 32ff 	mov.w	r2, #4294967295
 8018f32:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8018f36:	9304      	str	r3, [sp, #16]
 8018f38:	9307      	str	r3, [sp, #28]
 8018f3a:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8018f3e:	931a      	str	r3, [sp, #104]	; 0x68
 8018f40:	46a8      	mov	r8, r5
 8018f42:	2205      	movs	r2, #5
 8018f44:	f818 1b01 	ldrb.w	r1, [r8], #1
 8018f48:	485e      	ldr	r0, [pc, #376]	; (80190c4 <_vfiprintf_r+0x210>)
 8018f4a:	f7e7 f951 	bl	80001f0 <memchr>
 8018f4e:	9b04      	ldr	r3, [sp, #16]
 8018f50:	bb78      	cbnz	r0, 8018fb2 <_vfiprintf_r+0xfe>
 8018f52:	06d9      	lsls	r1, r3, #27
 8018f54:	bf44      	itt	mi
 8018f56:	2220      	movmi	r2, #32
 8018f58:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
 8018f5c:	071a      	lsls	r2, r3, #28
 8018f5e:	bf44      	itt	mi
 8018f60:	222b      	movmi	r2, #43	; 0x2b
 8018f62:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
 8018f66:	782a      	ldrb	r2, [r5, #0]
 8018f68:	2a2a      	cmp	r2, #42	; 0x2a
 8018f6a:	d02a      	beq.n	8018fc2 <_vfiprintf_r+0x10e>
 8018f6c:	9a07      	ldr	r2, [sp, #28]
 8018f6e:	46a8      	mov	r8, r5
 8018f70:	2000      	movs	r0, #0
 8018f72:	250a      	movs	r5, #10
 8018f74:	4641      	mov	r1, r8
 8018f76:	f811 3b01 	ldrb.w	r3, [r1], #1
 8018f7a:	3b30      	subs	r3, #48	; 0x30
 8018f7c:	2b09      	cmp	r3, #9
 8018f7e:	d969      	bls.n	8019054 <_vfiprintf_r+0x1a0>
 8018f80:	b360      	cbz	r0, 8018fdc <_vfiprintf_r+0x128>
 8018f82:	e024      	b.n	8018fce <_vfiprintf_r+0x11a>
 8018f84:	4b50      	ldr	r3, [pc, #320]	; (80190c8 <_vfiprintf_r+0x214>)
 8018f86:	429c      	cmp	r4, r3
 8018f88:	d101      	bne.n	8018f8e <_vfiprintf_r+0xda>
 8018f8a:	68b4      	ldr	r4, [r6, #8]
 8018f8c:	e7a2      	b.n	8018ed4 <_vfiprintf_r+0x20>
 8018f8e:	4b4f      	ldr	r3, [pc, #316]	; (80190cc <_vfiprintf_r+0x218>)
 8018f90:	429c      	cmp	r4, r3
 8018f92:	bf08      	it	eq
 8018f94:	68f4      	ldreq	r4, [r6, #12]
 8018f96:	e79d      	b.n	8018ed4 <_vfiprintf_r+0x20>
 8018f98:	4621      	mov	r1, r4
 8018f9a:	4630      	mov	r0, r6
 8018f9c:	f000 face 	bl	801953c <__swsetup_r>
 8018fa0:	2800      	cmp	r0, #0
 8018fa2:	d09d      	beq.n	8018ee0 <_vfiprintf_r+0x2c>
 8018fa4:	f04f 30ff 	mov.w	r0, #4294967295
 8018fa8:	b01d      	add	sp, #116	; 0x74
 8018faa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018fae:	46a8      	mov	r8, r5
 8018fb0:	e7a2      	b.n	8018ef8 <_vfiprintf_r+0x44>
 8018fb2:	4a44      	ldr	r2, [pc, #272]	; (80190c4 <_vfiprintf_r+0x210>)
 8018fb4:	1a80      	subs	r0, r0, r2
 8018fb6:	fa0b f000 	lsl.w	r0, fp, r0
 8018fba:	4318      	orrs	r0, r3
 8018fbc:	9004      	str	r0, [sp, #16]
 8018fbe:	4645      	mov	r5, r8
 8018fc0:	e7be      	b.n	8018f40 <_vfiprintf_r+0x8c>
 8018fc2:	9a03      	ldr	r2, [sp, #12]
 8018fc4:	1d11      	adds	r1, r2, #4
 8018fc6:	6812      	ldr	r2, [r2, #0]
 8018fc8:	9103      	str	r1, [sp, #12]
 8018fca:	2a00      	cmp	r2, #0
 8018fcc:	db01      	blt.n	8018fd2 <_vfiprintf_r+0x11e>
 8018fce:	9207      	str	r2, [sp, #28]
 8018fd0:	e004      	b.n	8018fdc <_vfiprintf_r+0x128>
 8018fd2:	4252      	negs	r2, r2
 8018fd4:	f043 0302 	orr.w	r3, r3, #2
 8018fd8:	9207      	str	r2, [sp, #28]
 8018fda:	9304      	str	r3, [sp, #16]
 8018fdc:	f898 3000 	ldrb.w	r3, [r8]
 8018fe0:	2b2e      	cmp	r3, #46	; 0x2e
 8018fe2:	d10e      	bne.n	8019002 <_vfiprintf_r+0x14e>
 8018fe4:	f898 3001 	ldrb.w	r3, [r8, #1]
 8018fe8:	2b2a      	cmp	r3, #42	; 0x2a
 8018fea:	d138      	bne.n	801905e <_vfiprintf_r+0x1aa>
 8018fec:	9b03      	ldr	r3, [sp, #12]
 8018fee:	1d1a      	adds	r2, r3, #4
 8018ff0:	681b      	ldr	r3, [r3, #0]
 8018ff2:	9203      	str	r2, [sp, #12]
 8018ff4:	2b00      	cmp	r3, #0
 8018ff6:	bfb8      	it	lt
 8018ff8:	f04f 33ff 	movlt.w	r3, #4294967295
 8018ffc:	f108 0802 	add.w	r8, r8, #2
 8019000:	9305      	str	r3, [sp, #20]
 8019002:	4d33      	ldr	r5, [pc, #204]	; (80190d0 <_vfiprintf_r+0x21c>)
 8019004:	f898 1000 	ldrb.w	r1, [r8]
 8019008:	2203      	movs	r2, #3
 801900a:	4628      	mov	r0, r5
 801900c:	f7e7 f8f0 	bl	80001f0 <memchr>
 8019010:	b140      	cbz	r0, 8019024 <_vfiprintf_r+0x170>
 8019012:	2340      	movs	r3, #64	; 0x40
 8019014:	1b40      	subs	r0, r0, r5
 8019016:	fa03 f000 	lsl.w	r0, r3, r0
 801901a:	9b04      	ldr	r3, [sp, #16]
 801901c:	4303      	orrs	r3, r0
 801901e:	f108 0801 	add.w	r8, r8, #1
 8019022:	9304      	str	r3, [sp, #16]
 8019024:	f898 1000 	ldrb.w	r1, [r8]
 8019028:	482a      	ldr	r0, [pc, #168]	; (80190d4 <_vfiprintf_r+0x220>)
 801902a:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 801902e:	2206      	movs	r2, #6
 8019030:	f108 0701 	add.w	r7, r8, #1
 8019034:	f7e7 f8dc 	bl	80001f0 <memchr>
 8019038:	2800      	cmp	r0, #0
 801903a:	d037      	beq.n	80190ac <_vfiprintf_r+0x1f8>
 801903c:	4b26      	ldr	r3, [pc, #152]	; (80190d8 <_vfiprintf_r+0x224>)
 801903e:	bb1b      	cbnz	r3, 8019088 <_vfiprintf_r+0x1d4>
 8019040:	9b03      	ldr	r3, [sp, #12]
 8019042:	3307      	adds	r3, #7
 8019044:	f023 0307 	bic.w	r3, r3, #7
 8019048:	3308      	adds	r3, #8
 801904a:	9303      	str	r3, [sp, #12]
 801904c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801904e:	444b      	add	r3, r9
 8019050:	9309      	str	r3, [sp, #36]	; 0x24
 8019052:	e750      	b.n	8018ef6 <_vfiprintf_r+0x42>
 8019054:	fb05 3202 	mla	r2, r5, r2, r3
 8019058:	2001      	movs	r0, #1
 801905a:	4688      	mov	r8, r1
 801905c:	e78a      	b.n	8018f74 <_vfiprintf_r+0xc0>
 801905e:	2300      	movs	r3, #0
 8019060:	f108 0801 	add.w	r8, r8, #1
 8019064:	9305      	str	r3, [sp, #20]
 8019066:	4619      	mov	r1, r3
 8019068:	250a      	movs	r5, #10
 801906a:	4640      	mov	r0, r8
 801906c:	f810 2b01 	ldrb.w	r2, [r0], #1
 8019070:	3a30      	subs	r2, #48	; 0x30
 8019072:	2a09      	cmp	r2, #9
 8019074:	d903      	bls.n	801907e <_vfiprintf_r+0x1ca>
 8019076:	2b00      	cmp	r3, #0
 8019078:	d0c3      	beq.n	8019002 <_vfiprintf_r+0x14e>
 801907a:	9105      	str	r1, [sp, #20]
 801907c:	e7c1      	b.n	8019002 <_vfiprintf_r+0x14e>
 801907e:	fb05 2101 	mla	r1, r5, r1, r2
 8019082:	2301      	movs	r3, #1
 8019084:	4680      	mov	r8, r0
 8019086:	e7f0      	b.n	801906a <_vfiprintf_r+0x1b6>
 8019088:	ab03      	add	r3, sp, #12
 801908a:	9300      	str	r3, [sp, #0]
 801908c:	4622      	mov	r2, r4
 801908e:	4b13      	ldr	r3, [pc, #76]	; (80190dc <_vfiprintf_r+0x228>)
 8019090:	a904      	add	r1, sp, #16
 8019092:	4630      	mov	r0, r6
 8019094:	f3af 8000 	nop.w
 8019098:	f1b0 3fff 	cmp.w	r0, #4294967295
 801909c:	4681      	mov	r9, r0
 801909e:	d1d5      	bne.n	801904c <_vfiprintf_r+0x198>
 80190a0:	89a3      	ldrh	r3, [r4, #12]
 80190a2:	065b      	lsls	r3, r3, #25
 80190a4:	f53f af7e 	bmi.w	8018fa4 <_vfiprintf_r+0xf0>
 80190a8:	9809      	ldr	r0, [sp, #36]	; 0x24
 80190aa:	e77d      	b.n	8018fa8 <_vfiprintf_r+0xf4>
 80190ac:	ab03      	add	r3, sp, #12
 80190ae:	9300      	str	r3, [sp, #0]
 80190b0:	4622      	mov	r2, r4
 80190b2:	4b0a      	ldr	r3, [pc, #40]	; (80190dc <_vfiprintf_r+0x228>)
 80190b4:	a904      	add	r1, sp, #16
 80190b6:	4630      	mov	r0, r6
 80190b8:	f000 f888 	bl	80191cc <_printf_i>
 80190bc:	e7ec      	b.n	8019098 <_vfiprintf_r+0x1e4>
 80190be:	bf00      	nop
 80190c0:	0801d140 	.word	0x0801d140
 80190c4:	0801d0e8 	.word	0x0801d0e8
 80190c8:	0801d160 	.word	0x0801d160
 80190cc:	0801d120 	.word	0x0801d120
 80190d0:	0801d0ee 	.word	0x0801d0ee
 80190d4:	0801d0f2 	.word	0x0801d0f2
 80190d8:	00000000 	.word	0x00000000
 80190dc:	08018e8f 	.word	0x08018e8f

080190e0 <_printf_common>:
 80190e0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80190e4:	4691      	mov	r9, r2
 80190e6:	461f      	mov	r7, r3
 80190e8:	688a      	ldr	r2, [r1, #8]
 80190ea:	690b      	ldr	r3, [r1, #16]
 80190ec:	f8dd 8020 	ldr.w	r8, [sp, #32]
 80190f0:	4293      	cmp	r3, r2
 80190f2:	bfb8      	it	lt
 80190f4:	4613      	movlt	r3, r2
 80190f6:	f8c9 3000 	str.w	r3, [r9]
 80190fa:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 80190fe:	4606      	mov	r6, r0
 8019100:	460c      	mov	r4, r1
 8019102:	b112      	cbz	r2, 801910a <_printf_common+0x2a>
 8019104:	3301      	adds	r3, #1
 8019106:	f8c9 3000 	str.w	r3, [r9]
 801910a:	6823      	ldr	r3, [r4, #0]
 801910c:	0699      	lsls	r1, r3, #26
 801910e:	bf42      	ittt	mi
 8019110:	f8d9 3000 	ldrmi.w	r3, [r9]
 8019114:	3302      	addmi	r3, #2
 8019116:	f8c9 3000 	strmi.w	r3, [r9]
 801911a:	6825      	ldr	r5, [r4, #0]
 801911c:	f015 0506 	ands.w	r5, r5, #6
 8019120:	d107      	bne.n	8019132 <_printf_common+0x52>
 8019122:	f104 0a19 	add.w	sl, r4, #25
 8019126:	68e3      	ldr	r3, [r4, #12]
 8019128:	f8d9 2000 	ldr.w	r2, [r9]
 801912c:	1a9b      	subs	r3, r3, r2
 801912e:	42ab      	cmp	r3, r5
 8019130:	dc28      	bgt.n	8019184 <_printf_common+0xa4>
 8019132:	f894 3043 	ldrb.w	r3, [r4, #67]	; 0x43
 8019136:	6822      	ldr	r2, [r4, #0]
 8019138:	3300      	adds	r3, #0
 801913a:	bf18      	it	ne
 801913c:	2301      	movne	r3, #1
 801913e:	0692      	lsls	r2, r2, #26
 8019140:	d42d      	bmi.n	801919e <_printf_common+0xbe>
 8019142:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8019146:	4639      	mov	r1, r7
 8019148:	4630      	mov	r0, r6
 801914a:	47c0      	blx	r8
 801914c:	3001      	adds	r0, #1
 801914e:	d020      	beq.n	8019192 <_printf_common+0xb2>
 8019150:	6823      	ldr	r3, [r4, #0]
 8019152:	68e5      	ldr	r5, [r4, #12]
 8019154:	f8d9 2000 	ldr.w	r2, [r9]
 8019158:	f003 0306 	and.w	r3, r3, #6
 801915c:	2b04      	cmp	r3, #4
 801915e:	bf08      	it	eq
 8019160:	1aad      	subeq	r5, r5, r2
 8019162:	68a3      	ldr	r3, [r4, #8]
 8019164:	6922      	ldr	r2, [r4, #16]
 8019166:	bf0c      	ite	eq
 8019168:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 801916c:	2500      	movne	r5, #0
 801916e:	4293      	cmp	r3, r2
 8019170:	bfc4      	itt	gt
 8019172:	1a9b      	subgt	r3, r3, r2
 8019174:	18ed      	addgt	r5, r5, r3
 8019176:	f04f 0900 	mov.w	r9, #0
 801917a:	341a      	adds	r4, #26
 801917c:	454d      	cmp	r5, r9
 801917e:	d11a      	bne.n	80191b6 <_printf_common+0xd6>
 8019180:	2000      	movs	r0, #0
 8019182:	e008      	b.n	8019196 <_printf_common+0xb6>
 8019184:	2301      	movs	r3, #1
 8019186:	4652      	mov	r2, sl
 8019188:	4639      	mov	r1, r7
 801918a:	4630      	mov	r0, r6
 801918c:	47c0      	blx	r8
 801918e:	3001      	adds	r0, #1
 8019190:	d103      	bne.n	801919a <_printf_common+0xba>
 8019192:	f04f 30ff 	mov.w	r0, #4294967295
 8019196:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801919a:	3501      	adds	r5, #1
 801919c:	e7c3      	b.n	8019126 <_printf_common+0x46>
 801919e:	18e1      	adds	r1, r4, r3
 80191a0:	1c5a      	adds	r2, r3, #1
 80191a2:	2030      	movs	r0, #48	; 0x30
 80191a4:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 80191a8:	4422      	add	r2, r4
 80191aa:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 80191ae:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 80191b2:	3302      	adds	r3, #2
 80191b4:	e7c5      	b.n	8019142 <_printf_common+0x62>
 80191b6:	2301      	movs	r3, #1
 80191b8:	4622      	mov	r2, r4
 80191ba:	4639      	mov	r1, r7
 80191bc:	4630      	mov	r0, r6
 80191be:	47c0      	blx	r8
 80191c0:	3001      	adds	r0, #1
 80191c2:	d0e6      	beq.n	8019192 <_printf_common+0xb2>
 80191c4:	f109 0901 	add.w	r9, r9, #1
 80191c8:	e7d8      	b.n	801917c <_printf_common+0x9c>
	...

080191cc <_printf_i>:
 80191cc:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80191d0:	f101 0c43 	add.w	ip, r1, #67	; 0x43
 80191d4:	460c      	mov	r4, r1
 80191d6:	7e09      	ldrb	r1, [r1, #24]
 80191d8:	b085      	sub	sp, #20
 80191da:	296e      	cmp	r1, #110	; 0x6e
 80191dc:	4617      	mov	r7, r2
 80191de:	4606      	mov	r6, r0
 80191e0:	4698      	mov	r8, r3
 80191e2:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 80191e4:	f000 80b3 	beq.w	801934e <_printf_i+0x182>
 80191e8:	d822      	bhi.n	8019230 <_printf_i+0x64>
 80191ea:	2963      	cmp	r1, #99	; 0x63
 80191ec:	d036      	beq.n	801925c <_printf_i+0x90>
 80191ee:	d80a      	bhi.n	8019206 <_printf_i+0x3a>
 80191f0:	2900      	cmp	r1, #0
 80191f2:	f000 80b9 	beq.w	8019368 <_printf_i+0x19c>
 80191f6:	2958      	cmp	r1, #88	; 0x58
 80191f8:	f000 8083 	beq.w	8019302 <_printf_i+0x136>
 80191fc:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8019200:	f884 1042 	strb.w	r1, [r4, #66]	; 0x42
 8019204:	e032      	b.n	801926c <_printf_i+0xa0>
 8019206:	2964      	cmp	r1, #100	; 0x64
 8019208:	d001      	beq.n	801920e <_printf_i+0x42>
 801920a:	2969      	cmp	r1, #105	; 0x69
 801920c:	d1f6      	bne.n	80191fc <_printf_i+0x30>
 801920e:	6820      	ldr	r0, [r4, #0]
 8019210:	6813      	ldr	r3, [r2, #0]
 8019212:	0605      	lsls	r5, r0, #24
 8019214:	f103 0104 	add.w	r1, r3, #4
 8019218:	d52a      	bpl.n	8019270 <_printf_i+0xa4>
 801921a:	681b      	ldr	r3, [r3, #0]
 801921c:	6011      	str	r1, [r2, #0]
 801921e:	2b00      	cmp	r3, #0
 8019220:	da03      	bge.n	801922a <_printf_i+0x5e>
 8019222:	222d      	movs	r2, #45	; 0x2d
 8019224:	425b      	negs	r3, r3
 8019226:	f884 2043 	strb.w	r2, [r4, #67]	; 0x43
 801922a:	486f      	ldr	r0, [pc, #444]	; (80193e8 <_printf_i+0x21c>)
 801922c:	220a      	movs	r2, #10
 801922e:	e039      	b.n	80192a4 <_printf_i+0xd8>
 8019230:	2973      	cmp	r1, #115	; 0x73
 8019232:	f000 809d 	beq.w	8019370 <_printf_i+0x1a4>
 8019236:	d808      	bhi.n	801924a <_printf_i+0x7e>
 8019238:	296f      	cmp	r1, #111	; 0x6f
 801923a:	d020      	beq.n	801927e <_printf_i+0xb2>
 801923c:	2970      	cmp	r1, #112	; 0x70
 801923e:	d1dd      	bne.n	80191fc <_printf_i+0x30>
 8019240:	6823      	ldr	r3, [r4, #0]
 8019242:	f043 0320 	orr.w	r3, r3, #32
 8019246:	6023      	str	r3, [r4, #0]
 8019248:	e003      	b.n	8019252 <_printf_i+0x86>
 801924a:	2975      	cmp	r1, #117	; 0x75
 801924c:	d017      	beq.n	801927e <_printf_i+0xb2>
 801924e:	2978      	cmp	r1, #120	; 0x78
 8019250:	d1d4      	bne.n	80191fc <_printf_i+0x30>
 8019252:	2378      	movs	r3, #120	; 0x78
 8019254:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 8019258:	4864      	ldr	r0, [pc, #400]	; (80193ec <_printf_i+0x220>)
 801925a:	e055      	b.n	8019308 <_printf_i+0x13c>
 801925c:	6813      	ldr	r3, [r2, #0]
 801925e:	1d19      	adds	r1, r3, #4
 8019260:	681b      	ldr	r3, [r3, #0]
 8019262:	6011      	str	r1, [r2, #0]
 8019264:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8019268:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 801926c:	2301      	movs	r3, #1
 801926e:	e08c      	b.n	801938a <_printf_i+0x1be>
 8019270:	681b      	ldr	r3, [r3, #0]
 8019272:	6011      	str	r1, [r2, #0]
 8019274:	f010 0f40 	tst.w	r0, #64	; 0x40
 8019278:	bf18      	it	ne
 801927a:	b21b      	sxthne	r3, r3
 801927c:	e7cf      	b.n	801921e <_printf_i+0x52>
 801927e:	6813      	ldr	r3, [r2, #0]
 8019280:	6825      	ldr	r5, [r4, #0]
 8019282:	1d18      	adds	r0, r3, #4
 8019284:	6010      	str	r0, [r2, #0]
 8019286:	0628      	lsls	r0, r5, #24
 8019288:	d501      	bpl.n	801928e <_printf_i+0xc2>
 801928a:	681b      	ldr	r3, [r3, #0]
 801928c:	e002      	b.n	8019294 <_printf_i+0xc8>
 801928e:	0668      	lsls	r0, r5, #25
 8019290:	d5fb      	bpl.n	801928a <_printf_i+0xbe>
 8019292:	881b      	ldrh	r3, [r3, #0]
 8019294:	4854      	ldr	r0, [pc, #336]	; (80193e8 <_printf_i+0x21c>)
 8019296:	296f      	cmp	r1, #111	; 0x6f
 8019298:	bf14      	ite	ne
 801929a:	220a      	movne	r2, #10
 801929c:	2208      	moveq	r2, #8
 801929e:	2100      	movs	r1, #0
 80192a0:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 80192a4:	6865      	ldr	r5, [r4, #4]
 80192a6:	60a5      	str	r5, [r4, #8]
 80192a8:	2d00      	cmp	r5, #0
 80192aa:	f2c0 8095 	blt.w	80193d8 <_printf_i+0x20c>
 80192ae:	6821      	ldr	r1, [r4, #0]
 80192b0:	f021 0104 	bic.w	r1, r1, #4
 80192b4:	6021      	str	r1, [r4, #0]
 80192b6:	2b00      	cmp	r3, #0
 80192b8:	d13d      	bne.n	8019336 <_printf_i+0x16a>
 80192ba:	2d00      	cmp	r5, #0
 80192bc:	f040 808e 	bne.w	80193dc <_printf_i+0x210>
 80192c0:	4665      	mov	r5, ip
 80192c2:	2a08      	cmp	r2, #8
 80192c4:	d10b      	bne.n	80192de <_printf_i+0x112>
 80192c6:	6823      	ldr	r3, [r4, #0]
 80192c8:	07db      	lsls	r3, r3, #31
 80192ca:	d508      	bpl.n	80192de <_printf_i+0x112>
 80192cc:	6923      	ldr	r3, [r4, #16]
 80192ce:	6862      	ldr	r2, [r4, #4]
 80192d0:	429a      	cmp	r2, r3
 80192d2:	bfde      	ittt	le
 80192d4:	2330      	movle	r3, #48	; 0x30
 80192d6:	f805 3c01 	strble.w	r3, [r5, #-1]
 80192da:	f105 35ff 	addle.w	r5, r5, #4294967295
 80192de:	ebac 0305 	sub.w	r3, ip, r5
 80192e2:	6123      	str	r3, [r4, #16]
 80192e4:	f8cd 8000 	str.w	r8, [sp]
 80192e8:	463b      	mov	r3, r7
 80192ea:	aa03      	add	r2, sp, #12
 80192ec:	4621      	mov	r1, r4
 80192ee:	4630      	mov	r0, r6
 80192f0:	f7ff fef6 	bl	80190e0 <_printf_common>
 80192f4:	3001      	adds	r0, #1
 80192f6:	d14d      	bne.n	8019394 <_printf_i+0x1c8>
 80192f8:	f04f 30ff 	mov.w	r0, #4294967295
 80192fc:	b005      	add	sp, #20
 80192fe:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8019302:	4839      	ldr	r0, [pc, #228]	; (80193e8 <_printf_i+0x21c>)
 8019304:	f884 1045 	strb.w	r1, [r4, #69]	; 0x45
 8019308:	6813      	ldr	r3, [r2, #0]
 801930a:	6821      	ldr	r1, [r4, #0]
 801930c:	1d1d      	adds	r5, r3, #4
 801930e:	681b      	ldr	r3, [r3, #0]
 8019310:	6015      	str	r5, [r2, #0]
 8019312:	060a      	lsls	r2, r1, #24
 8019314:	d50b      	bpl.n	801932e <_printf_i+0x162>
 8019316:	07ca      	lsls	r2, r1, #31
 8019318:	bf44      	itt	mi
 801931a:	f041 0120 	orrmi.w	r1, r1, #32
 801931e:	6021      	strmi	r1, [r4, #0]
 8019320:	b91b      	cbnz	r3, 801932a <_printf_i+0x15e>
 8019322:	6822      	ldr	r2, [r4, #0]
 8019324:	f022 0220 	bic.w	r2, r2, #32
 8019328:	6022      	str	r2, [r4, #0]
 801932a:	2210      	movs	r2, #16
 801932c:	e7b7      	b.n	801929e <_printf_i+0xd2>
 801932e:	064d      	lsls	r5, r1, #25
 8019330:	bf48      	it	mi
 8019332:	b29b      	uxthmi	r3, r3
 8019334:	e7ef      	b.n	8019316 <_printf_i+0x14a>
 8019336:	4665      	mov	r5, ip
 8019338:	fbb3 f1f2 	udiv	r1, r3, r2
 801933c:	fb02 3311 	mls	r3, r2, r1, r3
 8019340:	5cc3      	ldrb	r3, [r0, r3]
 8019342:	f805 3d01 	strb.w	r3, [r5, #-1]!
 8019346:	460b      	mov	r3, r1
 8019348:	2900      	cmp	r1, #0
 801934a:	d1f5      	bne.n	8019338 <_printf_i+0x16c>
 801934c:	e7b9      	b.n	80192c2 <_printf_i+0xf6>
 801934e:	6813      	ldr	r3, [r2, #0]
 8019350:	6825      	ldr	r5, [r4, #0]
 8019352:	6961      	ldr	r1, [r4, #20]
 8019354:	1d18      	adds	r0, r3, #4
 8019356:	6010      	str	r0, [r2, #0]
 8019358:	0628      	lsls	r0, r5, #24
 801935a:	681b      	ldr	r3, [r3, #0]
 801935c:	d501      	bpl.n	8019362 <_printf_i+0x196>
 801935e:	6019      	str	r1, [r3, #0]
 8019360:	e002      	b.n	8019368 <_printf_i+0x19c>
 8019362:	066a      	lsls	r2, r5, #25
 8019364:	d5fb      	bpl.n	801935e <_printf_i+0x192>
 8019366:	8019      	strh	r1, [r3, #0]
 8019368:	2300      	movs	r3, #0
 801936a:	6123      	str	r3, [r4, #16]
 801936c:	4665      	mov	r5, ip
 801936e:	e7b9      	b.n	80192e4 <_printf_i+0x118>
 8019370:	6813      	ldr	r3, [r2, #0]
 8019372:	1d19      	adds	r1, r3, #4
 8019374:	6011      	str	r1, [r2, #0]
 8019376:	681d      	ldr	r5, [r3, #0]
 8019378:	6862      	ldr	r2, [r4, #4]
 801937a:	2100      	movs	r1, #0
 801937c:	4628      	mov	r0, r5
 801937e:	f7e6 ff37 	bl	80001f0 <memchr>
 8019382:	b108      	cbz	r0, 8019388 <_printf_i+0x1bc>
 8019384:	1b40      	subs	r0, r0, r5
 8019386:	6060      	str	r0, [r4, #4]
 8019388:	6863      	ldr	r3, [r4, #4]
 801938a:	6123      	str	r3, [r4, #16]
 801938c:	2300      	movs	r3, #0
 801938e:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8019392:	e7a7      	b.n	80192e4 <_printf_i+0x118>
 8019394:	6923      	ldr	r3, [r4, #16]
 8019396:	462a      	mov	r2, r5
 8019398:	4639      	mov	r1, r7
 801939a:	4630      	mov	r0, r6
 801939c:	47c0      	blx	r8
 801939e:	3001      	adds	r0, #1
 80193a0:	d0aa      	beq.n	80192f8 <_printf_i+0x12c>
 80193a2:	6823      	ldr	r3, [r4, #0]
 80193a4:	079b      	lsls	r3, r3, #30
 80193a6:	d413      	bmi.n	80193d0 <_printf_i+0x204>
 80193a8:	68e0      	ldr	r0, [r4, #12]
 80193aa:	9b03      	ldr	r3, [sp, #12]
 80193ac:	4298      	cmp	r0, r3
 80193ae:	bfb8      	it	lt
 80193b0:	4618      	movlt	r0, r3
 80193b2:	e7a3      	b.n	80192fc <_printf_i+0x130>
 80193b4:	2301      	movs	r3, #1
 80193b6:	464a      	mov	r2, r9
 80193b8:	4639      	mov	r1, r7
 80193ba:	4630      	mov	r0, r6
 80193bc:	47c0      	blx	r8
 80193be:	3001      	adds	r0, #1
 80193c0:	d09a      	beq.n	80192f8 <_printf_i+0x12c>
 80193c2:	3501      	adds	r5, #1
 80193c4:	68e3      	ldr	r3, [r4, #12]
 80193c6:	9a03      	ldr	r2, [sp, #12]
 80193c8:	1a9b      	subs	r3, r3, r2
 80193ca:	42ab      	cmp	r3, r5
 80193cc:	dcf2      	bgt.n	80193b4 <_printf_i+0x1e8>
 80193ce:	e7eb      	b.n	80193a8 <_printf_i+0x1dc>
 80193d0:	2500      	movs	r5, #0
 80193d2:	f104 0919 	add.w	r9, r4, #25
 80193d6:	e7f5      	b.n	80193c4 <_printf_i+0x1f8>
 80193d8:	2b00      	cmp	r3, #0
 80193da:	d1ac      	bne.n	8019336 <_printf_i+0x16a>
 80193dc:	7803      	ldrb	r3, [r0, #0]
 80193de:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 80193e2:	f104 0542 	add.w	r5, r4, #66	; 0x42
 80193e6:	e76c      	b.n	80192c2 <_printf_i+0xf6>
 80193e8:	0801d0f9 	.word	0x0801d0f9
 80193ec:	0801d10a 	.word	0x0801d10a

080193f0 <_sbrk_r>:
 80193f0:	b538      	push	{r3, r4, r5, lr}
 80193f2:	4c06      	ldr	r4, [pc, #24]	; (801940c <_sbrk_r+0x1c>)
 80193f4:	2300      	movs	r3, #0
 80193f6:	4605      	mov	r5, r0
 80193f8:	4608      	mov	r0, r1
 80193fa:	6023      	str	r3, [r4, #0]
 80193fc:	f7e8 fed6 	bl	80021ac <_sbrk>
 8019400:	1c43      	adds	r3, r0, #1
 8019402:	d102      	bne.n	801940a <_sbrk_r+0x1a>
 8019404:	6823      	ldr	r3, [r4, #0]
 8019406:	b103      	cbz	r3, 801940a <_sbrk_r+0x1a>
 8019408:	602b      	str	r3, [r5, #0]
 801940a:	bd38      	pop	{r3, r4, r5, pc}
 801940c:	20012980 	.word	0x20012980

08019410 <_raise_r>:
 8019410:	291f      	cmp	r1, #31
 8019412:	b538      	push	{r3, r4, r5, lr}
 8019414:	4604      	mov	r4, r0
 8019416:	460d      	mov	r5, r1
 8019418:	d904      	bls.n	8019424 <_raise_r+0x14>
 801941a:	2316      	movs	r3, #22
 801941c:	6003      	str	r3, [r0, #0]
 801941e:	f04f 30ff 	mov.w	r0, #4294967295
 8019422:	bd38      	pop	{r3, r4, r5, pc}
 8019424:	6c42      	ldr	r2, [r0, #68]	; 0x44
 8019426:	b112      	cbz	r2, 801942e <_raise_r+0x1e>
 8019428:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 801942c:	b94b      	cbnz	r3, 8019442 <_raise_r+0x32>
 801942e:	4620      	mov	r0, r4
 8019430:	f000 f830 	bl	8019494 <_getpid_r>
 8019434:	462a      	mov	r2, r5
 8019436:	4601      	mov	r1, r0
 8019438:	4620      	mov	r0, r4
 801943a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 801943e:	f000 b817 	b.w	8019470 <_kill_r>
 8019442:	2b01      	cmp	r3, #1
 8019444:	d00a      	beq.n	801945c <_raise_r+0x4c>
 8019446:	1c59      	adds	r1, r3, #1
 8019448:	d103      	bne.n	8019452 <_raise_r+0x42>
 801944a:	2316      	movs	r3, #22
 801944c:	6003      	str	r3, [r0, #0]
 801944e:	2001      	movs	r0, #1
 8019450:	e7e7      	b.n	8019422 <_raise_r+0x12>
 8019452:	2400      	movs	r4, #0
 8019454:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
 8019458:	4628      	mov	r0, r5
 801945a:	4798      	blx	r3
 801945c:	2000      	movs	r0, #0
 801945e:	e7e0      	b.n	8019422 <_raise_r+0x12>

08019460 <raise>:
 8019460:	4b02      	ldr	r3, [pc, #8]	; (801946c <raise+0xc>)
 8019462:	4601      	mov	r1, r0
 8019464:	6818      	ldr	r0, [r3, #0]
 8019466:	f7ff bfd3 	b.w	8019410 <_raise_r>
 801946a:	bf00      	nop
 801946c:	200000fc 	.word	0x200000fc

08019470 <_kill_r>:
 8019470:	b538      	push	{r3, r4, r5, lr}
 8019472:	4c07      	ldr	r4, [pc, #28]	; (8019490 <_kill_r+0x20>)
 8019474:	2300      	movs	r3, #0
 8019476:	4605      	mov	r5, r0
 8019478:	4608      	mov	r0, r1
 801947a:	4611      	mov	r1, r2
 801947c:	6023      	str	r3, [r4, #0]
 801947e:	f7e8 fe5f 	bl	8002140 <_kill>
 8019482:	1c43      	adds	r3, r0, #1
 8019484:	d102      	bne.n	801948c <_kill_r+0x1c>
 8019486:	6823      	ldr	r3, [r4, #0]
 8019488:	b103      	cbz	r3, 801948c <_kill_r+0x1c>
 801948a:	602b      	str	r3, [r5, #0]
 801948c:	bd38      	pop	{r3, r4, r5, pc}
 801948e:	bf00      	nop
 8019490:	20012980 	.word	0x20012980

08019494 <_getpid_r>:
 8019494:	f7e8 be52 	b.w	800213c <_getpid>

08019498 <__swbuf_r>:
 8019498:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801949a:	460e      	mov	r6, r1
 801949c:	4614      	mov	r4, r2
 801949e:	4605      	mov	r5, r0
 80194a0:	b118      	cbz	r0, 80194aa <__swbuf_r+0x12>
 80194a2:	6983      	ldr	r3, [r0, #24]
 80194a4:	b90b      	cbnz	r3, 80194aa <__swbuf_r+0x12>
 80194a6:	f000 fa0b 	bl	80198c0 <__sinit>
 80194aa:	4b21      	ldr	r3, [pc, #132]	; (8019530 <__swbuf_r+0x98>)
 80194ac:	429c      	cmp	r4, r3
 80194ae:	d12a      	bne.n	8019506 <__swbuf_r+0x6e>
 80194b0:	686c      	ldr	r4, [r5, #4]
 80194b2:	69a3      	ldr	r3, [r4, #24]
 80194b4:	60a3      	str	r3, [r4, #8]
 80194b6:	89a3      	ldrh	r3, [r4, #12]
 80194b8:	071a      	lsls	r2, r3, #28
 80194ba:	d52e      	bpl.n	801951a <__swbuf_r+0x82>
 80194bc:	6923      	ldr	r3, [r4, #16]
 80194be:	b363      	cbz	r3, 801951a <__swbuf_r+0x82>
 80194c0:	6923      	ldr	r3, [r4, #16]
 80194c2:	6820      	ldr	r0, [r4, #0]
 80194c4:	1ac0      	subs	r0, r0, r3
 80194c6:	6963      	ldr	r3, [r4, #20]
 80194c8:	b2f6      	uxtb	r6, r6
 80194ca:	4283      	cmp	r3, r0
 80194cc:	4637      	mov	r7, r6
 80194ce:	dc04      	bgt.n	80194da <__swbuf_r+0x42>
 80194d0:	4621      	mov	r1, r4
 80194d2:	4628      	mov	r0, r5
 80194d4:	f000 f98a 	bl	80197ec <_fflush_r>
 80194d8:	bb28      	cbnz	r0, 8019526 <__swbuf_r+0x8e>
 80194da:	68a3      	ldr	r3, [r4, #8]
 80194dc:	3b01      	subs	r3, #1
 80194de:	60a3      	str	r3, [r4, #8]
 80194e0:	6823      	ldr	r3, [r4, #0]
 80194e2:	1c5a      	adds	r2, r3, #1
 80194e4:	6022      	str	r2, [r4, #0]
 80194e6:	701e      	strb	r6, [r3, #0]
 80194e8:	6963      	ldr	r3, [r4, #20]
 80194ea:	3001      	adds	r0, #1
 80194ec:	4283      	cmp	r3, r0
 80194ee:	d004      	beq.n	80194fa <__swbuf_r+0x62>
 80194f0:	89a3      	ldrh	r3, [r4, #12]
 80194f2:	07db      	lsls	r3, r3, #31
 80194f4:	d519      	bpl.n	801952a <__swbuf_r+0x92>
 80194f6:	2e0a      	cmp	r6, #10
 80194f8:	d117      	bne.n	801952a <__swbuf_r+0x92>
 80194fa:	4621      	mov	r1, r4
 80194fc:	4628      	mov	r0, r5
 80194fe:	f000 f975 	bl	80197ec <_fflush_r>
 8019502:	b190      	cbz	r0, 801952a <__swbuf_r+0x92>
 8019504:	e00f      	b.n	8019526 <__swbuf_r+0x8e>
 8019506:	4b0b      	ldr	r3, [pc, #44]	; (8019534 <__swbuf_r+0x9c>)
 8019508:	429c      	cmp	r4, r3
 801950a:	d101      	bne.n	8019510 <__swbuf_r+0x78>
 801950c:	68ac      	ldr	r4, [r5, #8]
 801950e:	e7d0      	b.n	80194b2 <__swbuf_r+0x1a>
 8019510:	4b09      	ldr	r3, [pc, #36]	; (8019538 <__swbuf_r+0xa0>)
 8019512:	429c      	cmp	r4, r3
 8019514:	bf08      	it	eq
 8019516:	68ec      	ldreq	r4, [r5, #12]
 8019518:	e7cb      	b.n	80194b2 <__swbuf_r+0x1a>
 801951a:	4621      	mov	r1, r4
 801951c:	4628      	mov	r0, r5
 801951e:	f000 f80d 	bl	801953c <__swsetup_r>
 8019522:	2800      	cmp	r0, #0
 8019524:	d0cc      	beq.n	80194c0 <__swbuf_r+0x28>
 8019526:	f04f 37ff 	mov.w	r7, #4294967295
 801952a:	4638      	mov	r0, r7
 801952c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801952e:	bf00      	nop
 8019530:	0801d140 	.word	0x0801d140
 8019534:	0801d160 	.word	0x0801d160
 8019538:	0801d120 	.word	0x0801d120

0801953c <__swsetup_r>:
 801953c:	4b32      	ldr	r3, [pc, #200]	; (8019608 <__swsetup_r+0xcc>)
 801953e:	b570      	push	{r4, r5, r6, lr}
 8019540:	681d      	ldr	r5, [r3, #0]
 8019542:	4606      	mov	r6, r0
 8019544:	460c      	mov	r4, r1
 8019546:	b125      	cbz	r5, 8019552 <__swsetup_r+0x16>
 8019548:	69ab      	ldr	r3, [r5, #24]
 801954a:	b913      	cbnz	r3, 8019552 <__swsetup_r+0x16>
 801954c:	4628      	mov	r0, r5
 801954e:	f000 f9b7 	bl	80198c0 <__sinit>
 8019552:	4b2e      	ldr	r3, [pc, #184]	; (801960c <__swsetup_r+0xd0>)
 8019554:	429c      	cmp	r4, r3
 8019556:	d10f      	bne.n	8019578 <__swsetup_r+0x3c>
 8019558:	686c      	ldr	r4, [r5, #4]
 801955a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 801955e:	b29a      	uxth	r2, r3
 8019560:	0715      	lsls	r5, r2, #28
 8019562:	d42c      	bmi.n	80195be <__swsetup_r+0x82>
 8019564:	06d0      	lsls	r0, r2, #27
 8019566:	d411      	bmi.n	801958c <__swsetup_r+0x50>
 8019568:	2209      	movs	r2, #9
 801956a:	6032      	str	r2, [r6, #0]
 801956c:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8019570:	81a3      	strh	r3, [r4, #12]
 8019572:	f04f 30ff 	mov.w	r0, #4294967295
 8019576:	e03e      	b.n	80195f6 <__swsetup_r+0xba>
 8019578:	4b25      	ldr	r3, [pc, #148]	; (8019610 <__swsetup_r+0xd4>)
 801957a:	429c      	cmp	r4, r3
 801957c:	d101      	bne.n	8019582 <__swsetup_r+0x46>
 801957e:	68ac      	ldr	r4, [r5, #8]
 8019580:	e7eb      	b.n	801955a <__swsetup_r+0x1e>
 8019582:	4b24      	ldr	r3, [pc, #144]	; (8019614 <__swsetup_r+0xd8>)
 8019584:	429c      	cmp	r4, r3
 8019586:	bf08      	it	eq
 8019588:	68ec      	ldreq	r4, [r5, #12]
 801958a:	e7e6      	b.n	801955a <__swsetup_r+0x1e>
 801958c:	0751      	lsls	r1, r2, #29
 801958e:	d512      	bpl.n	80195b6 <__swsetup_r+0x7a>
 8019590:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8019592:	b141      	cbz	r1, 80195a6 <__swsetup_r+0x6a>
 8019594:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8019598:	4299      	cmp	r1, r3
 801959a:	d002      	beq.n	80195a2 <__swsetup_r+0x66>
 801959c:	4630      	mov	r0, r6
 801959e:	f7ff fbb7 	bl	8018d10 <_free_r>
 80195a2:	2300      	movs	r3, #0
 80195a4:	6363      	str	r3, [r4, #52]	; 0x34
 80195a6:	89a3      	ldrh	r3, [r4, #12]
 80195a8:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 80195ac:	81a3      	strh	r3, [r4, #12]
 80195ae:	2300      	movs	r3, #0
 80195b0:	6063      	str	r3, [r4, #4]
 80195b2:	6923      	ldr	r3, [r4, #16]
 80195b4:	6023      	str	r3, [r4, #0]
 80195b6:	89a3      	ldrh	r3, [r4, #12]
 80195b8:	f043 0308 	orr.w	r3, r3, #8
 80195bc:	81a3      	strh	r3, [r4, #12]
 80195be:	6923      	ldr	r3, [r4, #16]
 80195c0:	b94b      	cbnz	r3, 80195d6 <__swsetup_r+0x9a>
 80195c2:	89a3      	ldrh	r3, [r4, #12]
 80195c4:	f403 7320 	and.w	r3, r3, #640	; 0x280
 80195c8:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 80195cc:	d003      	beq.n	80195d6 <__swsetup_r+0x9a>
 80195ce:	4621      	mov	r1, r4
 80195d0:	4630      	mov	r0, r6
 80195d2:	f000 fa23 	bl	8019a1c <__smakebuf_r>
 80195d6:	89a2      	ldrh	r2, [r4, #12]
 80195d8:	f012 0301 	ands.w	r3, r2, #1
 80195dc:	d00c      	beq.n	80195f8 <__swsetup_r+0xbc>
 80195de:	2300      	movs	r3, #0
 80195e0:	60a3      	str	r3, [r4, #8]
 80195e2:	6963      	ldr	r3, [r4, #20]
 80195e4:	425b      	negs	r3, r3
 80195e6:	61a3      	str	r3, [r4, #24]
 80195e8:	6923      	ldr	r3, [r4, #16]
 80195ea:	b953      	cbnz	r3, 8019602 <__swsetup_r+0xc6>
 80195ec:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80195f0:	f013 0080 	ands.w	r0, r3, #128	; 0x80
 80195f4:	d1ba      	bne.n	801956c <__swsetup_r+0x30>
 80195f6:	bd70      	pop	{r4, r5, r6, pc}
 80195f8:	0792      	lsls	r2, r2, #30
 80195fa:	bf58      	it	pl
 80195fc:	6963      	ldrpl	r3, [r4, #20]
 80195fe:	60a3      	str	r3, [r4, #8]
 8019600:	e7f2      	b.n	80195e8 <__swsetup_r+0xac>
 8019602:	2000      	movs	r0, #0
 8019604:	e7f7      	b.n	80195f6 <__swsetup_r+0xba>
 8019606:	bf00      	nop
 8019608:	200000fc 	.word	0x200000fc
 801960c:	0801d140 	.word	0x0801d140
 8019610:	0801d160 	.word	0x0801d160
 8019614:	0801d120 	.word	0x0801d120

08019618 <__register_exitproc>:
 8019618:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 801961c:	4d2c      	ldr	r5, [pc, #176]	; (80196d0 <__register_exitproc+0xb8>)
 801961e:	682c      	ldr	r4, [r5, #0]
 8019620:	4607      	mov	r7, r0
 8019622:	460e      	mov	r6, r1
 8019624:	4691      	mov	r9, r2
 8019626:	4698      	mov	r8, r3
 8019628:	b934      	cbnz	r4, 8019638 <__register_exitproc+0x20>
 801962a:	4b2a      	ldr	r3, [pc, #168]	; (80196d4 <__register_exitproc+0xbc>)
 801962c:	4c2a      	ldr	r4, [pc, #168]	; (80196d8 <__register_exitproc+0xc0>)
 801962e:	602c      	str	r4, [r5, #0]
 8019630:	b113      	cbz	r3, 8019638 <__register_exitproc+0x20>
 8019632:	681b      	ldr	r3, [r3, #0]
 8019634:	f8c4 3088 	str.w	r3, [r4, #136]	; 0x88
 8019638:	6863      	ldr	r3, [r4, #4]
 801963a:	2b1f      	cmp	r3, #31
 801963c:	dd3d      	ble.n	80196ba <__register_exitproc+0xa2>
 801963e:	4b27      	ldr	r3, [pc, #156]	; (80196dc <__register_exitproc+0xc4>)
 8019640:	b91b      	cbnz	r3, 801964a <__register_exitproc+0x32>
 8019642:	f04f 30ff 	mov.w	r0, #4294967295
 8019646:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 801964a:	208c      	movs	r0, #140	; 0x8c
 801964c:	f7ff fb3c 	bl	8018cc8 <malloc>
 8019650:	4604      	mov	r4, r0
 8019652:	2800      	cmp	r0, #0
 8019654:	d0f5      	beq.n	8019642 <__register_exitproc+0x2a>
 8019656:	2300      	movs	r3, #0
 8019658:	682a      	ldr	r2, [r5, #0]
 801965a:	6002      	str	r2, [r0, #0]
 801965c:	6043      	str	r3, [r0, #4]
 801965e:	6028      	str	r0, [r5, #0]
 8019660:	f8c0 3088 	str.w	r3, [r0, #136]	; 0x88
 8019664:	b30f      	cbz	r7, 80196aa <__register_exitproc+0x92>
 8019666:	f44f 7084 	mov.w	r0, #264	; 0x108
 801966a:	f7ff fb2d 	bl	8018cc8 <malloc>
 801966e:	2800      	cmp	r0, #0
 8019670:	d0e7      	beq.n	8019642 <__register_exitproc+0x2a>
 8019672:	2300      	movs	r3, #0
 8019674:	f8c0 3100 	str.w	r3, [r0, #256]	; 0x100
 8019678:	f8c0 3104 	str.w	r3, [r0, #260]	; 0x104
 801967c:	f8c4 0088 	str.w	r0, [r4, #136]	; 0x88
 8019680:	6862      	ldr	r2, [r4, #4]
 8019682:	f840 9022 	str.w	r9, [r0, r2, lsl #2]
 8019686:	2301      	movs	r3, #1
 8019688:	4093      	lsls	r3, r2
 801968a:	eb00 0182 	add.w	r1, r0, r2, lsl #2
 801968e:	f8d0 2100 	ldr.w	r2, [r0, #256]	; 0x100
 8019692:	431a      	orrs	r2, r3
 8019694:	2f02      	cmp	r7, #2
 8019696:	f8c0 2100 	str.w	r2, [r0, #256]	; 0x100
 801969a:	f8c1 8080 	str.w	r8, [r1, #128]	; 0x80
 801969e:	bf02      	ittt	eq
 80196a0:	f8d0 2104 	ldreq.w	r2, [r0, #260]	; 0x104
 80196a4:	4313      	orreq	r3, r2
 80196a6:	f8c0 3104 	streq.w	r3, [r0, #260]	; 0x104
 80196aa:	6863      	ldr	r3, [r4, #4]
 80196ac:	1c5a      	adds	r2, r3, #1
 80196ae:	3302      	adds	r3, #2
 80196b0:	6062      	str	r2, [r4, #4]
 80196b2:	2000      	movs	r0, #0
 80196b4:	f844 6023 	str.w	r6, [r4, r3, lsl #2]
 80196b8:	e7c5      	b.n	8019646 <__register_exitproc+0x2e>
 80196ba:	2f00      	cmp	r7, #0
 80196bc:	d0f5      	beq.n	80196aa <__register_exitproc+0x92>
 80196be:	f8d4 0088 	ldr.w	r0, [r4, #136]	; 0x88
 80196c2:	2800      	cmp	r0, #0
 80196c4:	d1dc      	bne.n	8019680 <__register_exitproc+0x68>
 80196c6:	4b05      	ldr	r3, [pc, #20]	; (80196dc <__register_exitproc+0xc4>)
 80196c8:	2b00      	cmp	r3, #0
 80196ca:	d0ba      	beq.n	8019642 <__register_exitproc+0x2a>
 80196cc:	e7cb      	b.n	8019666 <__register_exitproc+0x4e>
 80196ce:	bf00      	nop
 80196d0:	20012444 	.word	0x20012444
 80196d4:	0801d11c 	.word	0x0801d11c
 80196d8:	200123b8 	.word	0x200123b8
 80196dc:	08018cc9 	.word	0x08018cc9

080196e0 <__sflush_r>:
 80196e0:	898a      	ldrh	r2, [r1, #12]
 80196e2:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80196e6:	4605      	mov	r5, r0
 80196e8:	0710      	lsls	r0, r2, #28
 80196ea:	460c      	mov	r4, r1
 80196ec:	d458      	bmi.n	80197a0 <__sflush_r+0xc0>
 80196ee:	684b      	ldr	r3, [r1, #4]
 80196f0:	2b00      	cmp	r3, #0
 80196f2:	dc05      	bgt.n	8019700 <__sflush_r+0x20>
 80196f4:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 80196f6:	2b00      	cmp	r3, #0
 80196f8:	dc02      	bgt.n	8019700 <__sflush_r+0x20>
 80196fa:	2000      	movs	r0, #0
 80196fc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8019700:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8019702:	2e00      	cmp	r6, #0
 8019704:	d0f9      	beq.n	80196fa <__sflush_r+0x1a>
 8019706:	2300      	movs	r3, #0
 8019708:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 801970c:	682f      	ldr	r7, [r5, #0]
 801970e:	6a21      	ldr	r1, [r4, #32]
 8019710:	602b      	str	r3, [r5, #0]
 8019712:	d032      	beq.n	801977a <__sflush_r+0x9a>
 8019714:	6d60      	ldr	r0, [r4, #84]	; 0x54
 8019716:	89a3      	ldrh	r3, [r4, #12]
 8019718:	075a      	lsls	r2, r3, #29
 801971a:	d505      	bpl.n	8019728 <__sflush_r+0x48>
 801971c:	6863      	ldr	r3, [r4, #4]
 801971e:	1ac0      	subs	r0, r0, r3
 8019720:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8019722:	b10b      	cbz	r3, 8019728 <__sflush_r+0x48>
 8019724:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8019726:	1ac0      	subs	r0, r0, r3
 8019728:	2300      	movs	r3, #0
 801972a:	4602      	mov	r2, r0
 801972c:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 801972e:	6a21      	ldr	r1, [r4, #32]
 8019730:	4628      	mov	r0, r5
 8019732:	47b0      	blx	r6
 8019734:	1c43      	adds	r3, r0, #1
 8019736:	89a3      	ldrh	r3, [r4, #12]
 8019738:	d106      	bne.n	8019748 <__sflush_r+0x68>
 801973a:	6829      	ldr	r1, [r5, #0]
 801973c:	291d      	cmp	r1, #29
 801973e:	d848      	bhi.n	80197d2 <__sflush_r+0xf2>
 8019740:	4a29      	ldr	r2, [pc, #164]	; (80197e8 <__sflush_r+0x108>)
 8019742:	40ca      	lsrs	r2, r1
 8019744:	07d6      	lsls	r6, r2, #31
 8019746:	d544      	bpl.n	80197d2 <__sflush_r+0xf2>
 8019748:	2200      	movs	r2, #0
 801974a:	6062      	str	r2, [r4, #4]
 801974c:	04d9      	lsls	r1, r3, #19
 801974e:	6922      	ldr	r2, [r4, #16]
 8019750:	6022      	str	r2, [r4, #0]
 8019752:	d504      	bpl.n	801975e <__sflush_r+0x7e>
 8019754:	1c42      	adds	r2, r0, #1
 8019756:	d101      	bne.n	801975c <__sflush_r+0x7c>
 8019758:	682b      	ldr	r3, [r5, #0]
 801975a:	b903      	cbnz	r3, 801975e <__sflush_r+0x7e>
 801975c:	6560      	str	r0, [r4, #84]	; 0x54
 801975e:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8019760:	602f      	str	r7, [r5, #0]
 8019762:	2900      	cmp	r1, #0
 8019764:	d0c9      	beq.n	80196fa <__sflush_r+0x1a>
 8019766:	f104 0344 	add.w	r3, r4, #68	; 0x44
 801976a:	4299      	cmp	r1, r3
 801976c:	d002      	beq.n	8019774 <__sflush_r+0x94>
 801976e:	4628      	mov	r0, r5
 8019770:	f7ff face 	bl	8018d10 <_free_r>
 8019774:	2000      	movs	r0, #0
 8019776:	6360      	str	r0, [r4, #52]	; 0x34
 8019778:	e7c0      	b.n	80196fc <__sflush_r+0x1c>
 801977a:	2301      	movs	r3, #1
 801977c:	4628      	mov	r0, r5
 801977e:	47b0      	blx	r6
 8019780:	1c41      	adds	r1, r0, #1
 8019782:	d1c8      	bne.n	8019716 <__sflush_r+0x36>
 8019784:	682b      	ldr	r3, [r5, #0]
 8019786:	2b00      	cmp	r3, #0
 8019788:	d0c5      	beq.n	8019716 <__sflush_r+0x36>
 801978a:	2b1d      	cmp	r3, #29
 801978c:	d001      	beq.n	8019792 <__sflush_r+0xb2>
 801978e:	2b16      	cmp	r3, #22
 8019790:	d101      	bne.n	8019796 <__sflush_r+0xb6>
 8019792:	602f      	str	r7, [r5, #0]
 8019794:	e7b1      	b.n	80196fa <__sflush_r+0x1a>
 8019796:	89a3      	ldrh	r3, [r4, #12]
 8019798:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 801979c:	81a3      	strh	r3, [r4, #12]
 801979e:	e7ad      	b.n	80196fc <__sflush_r+0x1c>
 80197a0:	690f      	ldr	r7, [r1, #16]
 80197a2:	2f00      	cmp	r7, #0
 80197a4:	d0a9      	beq.n	80196fa <__sflush_r+0x1a>
 80197a6:	0793      	lsls	r3, r2, #30
 80197a8:	680e      	ldr	r6, [r1, #0]
 80197aa:	bf08      	it	eq
 80197ac:	694b      	ldreq	r3, [r1, #20]
 80197ae:	600f      	str	r7, [r1, #0]
 80197b0:	bf18      	it	ne
 80197b2:	2300      	movne	r3, #0
 80197b4:	eba6 0807 	sub.w	r8, r6, r7
 80197b8:	608b      	str	r3, [r1, #8]
 80197ba:	f1b8 0f00 	cmp.w	r8, #0
 80197be:	dd9c      	ble.n	80196fa <__sflush_r+0x1a>
 80197c0:	4643      	mov	r3, r8
 80197c2:	463a      	mov	r2, r7
 80197c4:	6a21      	ldr	r1, [r4, #32]
 80197c6:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 80197c8:	4628      	mov	r0, r5
 80197ca:	47b0      	blx	r6
 80197cc:	2800      	cmp	r0, #0
 80197ce:	dc06      	bgt.n	80197de <__sflush_r+0xfe>
 80197d0:	89a3      	ldrh	r3, [r4, #12]
 80197d2:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80197d6:	81a3      	strh	r3, [r4, #12]
 80197d8:	f04f 30ff 	mov.w	r0, #4294967295
 80197dc:	e78e      	b.n	80196fc <__sflush_r+0x1c>
 80197de:	4407      	add	r7, r0
 80197e0:	eba8 0800 	sub.w	r8, r8, r0
 80197e4:	e7e9      	b.n	80197ba <__sflush_r+0xda>
 80197e6:	bf00      	nop
 80197e8:	20400001 	.word	0x20400001

080197ec <_fflush_r>:
 80197ec:	b538      	push	{r3, r4, r5, lr}
 80197ee:	690b      	ldr	r3, [r1, #16]
 80197f0:	4605      	mov	r5, r0
 80197f2:	460c      	mov	r4, r1
 80197f4:	b1db      	cbz	r3, 801982e <_fflush_r+0x42>
 80197f6:	b118      	cbz	r0, 8019800 <_fflush_r+0x14>
 80197f8:	6983      	ldr	r3, [r0, #24]
 80197fa:	b90b      	cbnz	r3, 8019800 <_fflush_r+0x14>
 80197fc:	f000 f860 	bl	80198c0 <__sinit>
 8019800:	4b0c      	ldr	r3, [pc, #48]	; (8019834 <_fflush_r+0x48>)
 8019802:	429c      	cmp	r4, r3
 8019804:	d109      	bne.n	801981a <_fflush_r+0x2e>
 8019806:	686c      	ldr	r4, [r5, #4]
 8019808:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 801980c:	b17b      	cbz	r3, 801982e <_fflush_r+0x42>
 801980e:	4621      	mov	r1, r4
 8019810:	4628      	mov	r0, r5
 8019812:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8019816:	f7ff bf63 	b.w	80196e0 <__sflush_r>
 801981a:	4b07      	ldr	r3, [pc, #28]	; (8019838 <_fflush_r+0x4c>)
 801981c:	429c      	cmp	r4, r3
 801981e:	d101      	bne.n	8019824 <_fflush_r+0x38>
 8019820:	68ac      	ldr	r4, [r5, #8]
 8019822:	e7f1      	b.n	8019808 <_fflush_r+0x1c>
 8019824:	4b05      	ldr	r3, [pc, #20]	; (801983c <_fflush_r+0x50>)
 8019826:	429c      	cmp	r4, r3
 8019828:	bf08      	it	eq
 801982a:	68ec      	ldreq	r4, [r5, #12]
 801982c:	e7ec      	b.n	8019808 <_fflush_r+0x1c>
 801982e:	2000      	movs	r0, #0
 8019830:	bd38      	pop	{r3, r4, r5, pc}
 8019832:	bf00      	nop
 8019834:	0801d140 	.word	0x0801d140
 8019838:	0801d160 	.word	0x0801d160
 801983c:	0801d120 	.word	0x0801d120

08019840 <std>:
 8019840:	2300      	movs	r3, #0
 8019842:	b510      	push	{r4, lr}
 8019844:	4604      	mov	r4, r0
 8019846:	e9c0 3300 	strd	r3, r3, [r0]
 801984a:	6083      	str	r3, [r0, #8]
 801984c:	8181      	strh	r1, [r0, #12]
 801984e:	6643      	str	r3, [r0, #100]	; 0x64
 8019850:	81c2      	strh	r2, [r0, #14]
 8019852:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8019856:	6183      	str	r3, [r0, #24]
 8019858:	4619      	mov	r1, r3
 801985a:	2208      	movs	r2, #8
 801985c:	305c      	adds	r0, #92	; 0x5c
 801985e:	f7ff fa4e 	bl	8018cfe <memset>
 8019862:	4b05      	ldr	r3, [pc, #20]	; (8019878 <std+0x38>)
 8019864:	6263      	str	r3, [r4, #36]	; 0x24
 8019866:	4b05      	ldr	r3, [pc, #20]	; (801987c <std+0x3c>)
 8019868:	62a3      	str	r3, [r4, #40]	; 0x28
 801986a:	4b05      	ldr	r3, [pc, #20]	; (8019880 <std+0x40>)
 801986c:	62e3      	str	r3, [r4, #44]	; 0x2c
 801986e:	4b05      	ldr	r3, [pc, #20]	; (8019884 <std+0x44>)
 8019870:	6224      	str	r4, [r4, #32]
 8019872:	6323      	str	r3, [r4, #48]	; 0x30
 8019874:	bd10      	pop	{r4, pc}
 8019876:	bf00      	nop
 8019878:	08019aa1 	.word	0x08019aa1
 801987c:	08019ac3 	.word	0x08019ac3
 8019880:	08019afb 	.word	0x08019afb
 8019884:	08019b1f 	.word	0x08019b1f

08019888 <_cleanup_r>:
 8019888:	4901      	ldr	r1, [pc, #4]	; (8019890 <_cleanup_r+0x8>)
 801988a:	f000 b885 	b.w	8019998 <_fwalk_reent>
 801988e:	bf00      	nop
 8019890:	080197ed 	.word	0x080197ed

08019894 <__sfmoreglue>:
 8019894:	b570      	push	{r4, r5, r6, lr}
 8019896:	1e4a      	subs	r2, r1, #1
 8019898:	2568      	movs	r5, #104	; 0x68
 801989a:	4355      	muls	r5, r2
 801989c:	460e      	mov	r6, r1
 801989e:	f105 0174 	add.w	r1, r5, #116	; 0x74
 80198a2:	f7ff fa83 	bl	8018dac <_malloc_r>
 80198a6:	4604      	mov	r4, r0
 80198a8:	b140      	cbz	r0, 80198bc <__sfmoreglue+0x28>
 80198aa:	2100      	movs	r1, #0
 80198ac:	e9c0 1600 	strd	r1, r6, [r0]
 80198b0:	300c      	adds	r0, #12
 80198b2:	60a0      	str	r0, [r4, #8]
 80198b4:	f105 0268 	add.w	r2, r5, #104	; 0x68
 80198b8:	f7ff fa21 	bl	8018cfe <memset>
 80198bc:	4620      	mov	r0, r4
 80198be:	bd70      	pop	{r4, r5, r6, pc}

080198c0 <__sinit>:
 80198c0:	6983      	ldr	r3, [r0, #24]
 80198c2:	b510      	push	{r4, lr}
 80198c4:	4604      	mov	r4, r0
 80198c6:	bb33      	cbnz	r3, 8019916 <__sinit+0x56>
 80198c8:	e9c0 3312 	strd	r3, r3, [r0, #72]	; 0x48
 80198cc:	6503      	str	r3, [r0, #80]	; 0x50
 80198ce:	4b12      	ldr	r3, [pc, #72]	; (8019918 <__sinit+0x58>)
 80198d0:	4a12      	ldr	r2, [pc, #72]	; (801991c <__sinit+0x5c>)
 80198d2:	681b      	ldr	r3, [r3, #0]
 80198d4:	6282      	str	r2, [r0, #40]	; 0x28
 80198d6:	4298      	cmp	r0, r3
 80198d8:	bf04      	itt	eq
 80198da:	2301      	moveq	r3, #1
 80198dc:	6183      	streq	r3, [r0, #24]
 80198de:	f000 f81f 	bl	8019920 <__sfp>
 80198e2:	6060      	str	r0, [r4, #4]
 80198e4:	4620      	mov	r0, r4
 80198e6:	f000 f81b 	bl	8019920 <__sfp>
 80198ea:	60a0      	str	r0, [r4, #8]
 80198ec:	4620      	mov	r0, r4
 80198ee:	f000 f817 	bl	8019920 <__sfp>
 80198f2:	2200      	movs	r2, #0
 80198f4:	60e0      	str	r0, [r4, #12]
 80198f6:	2104      	movs	r1, #4
 80198f8:	6860      	ldr	r0, [r4, #4]
 80198fa:	f7ff ffa1 	bl	8019840 <std>
 80198fe:	2201      	movs	r2, #1
 8019900:	2109      	movs	r1, #9
 8019902:	68a0      	ldr	r0, [r4, #8]
 8019904:	f7ff ff9c 	bl	8019840 <std>
 8019908:	2202      	movs	r2, #2
 801990a:	2112      	movs	r1, #18
 801990c:	68e0      	ldr	r0, [r4, #12]
 801990e:	f7ff ff97 	bl	8019840 <std>
 8019912:	2301      	movs	r3, #1
 8019914:	61a3      	str	r3, [r4, #24]
 8019916:	bd10      	pop	{r4, pc}
 8019918:	0801d0e4 	.word	0x0801d0e4
 801991c:	08019889 	.word	0x08019889

08019920 <__sfp>:
 8019920:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8019922:	4b1b      	ldr	r3, [pc, #108]	; (8019990 <__sfp+0x70>)
 8019924:	681e      	ldr	r6, [r3, #0]
 8019926:	69b3      	ldr	r3, [r6, #24]
 8019928:	4607      	mov	r7, r0
 801992a:	b913      	cbnz	r3, 8019932 <__sfp+0x12>
 801992c:	4630      	mov	r0, r6
 801992e:	f7ff ffc7 	bl	80198c0 <__sinit>
 8019932:	3648      	adds	r6, #72	; 0x48
 8019934:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 8019938:	3b01      	subs	r3, #1
 801993a:	d503      	bpl.n	8019944 <__sfp+0x24>
 801993c:	6833      	ldr	r3, [r6, #0]
 801993e:	b133      	cbz	r3, 801994e <__sfp+0x2e>
 8019940:	6836      	ldr	r6, [r6, #0]
 8019942:	e7f7      	b.n	8019934 <__sfp+0x14>
 8019944:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 8019948:	b16d      	cbz	r5, 8019966 <__sfp+0x46>
 801994a:	3468      	adds	r4, #104	; 0x68
 801994c:	e7f4      	b.n	8019938 <__sfp+0x18>
 801994e:	2104      	movs	r1, #4
 8019950:	4638      	mov	r0, r7
 8019952:	f7ff ff9f 	bl	8019894 <__sfmoreglue>
 8019956:	6030      	str	r0, [r6, #0]
 8019958:	2800      	cmp	r0, #0
 801995a:	d1f1      	bne.n	8019940 <__sfp+0x20>
 801995c:	230c      	movs	r3, #12
 801995e:	603b      	str	r3, [r7, #0]
 8019960:	4604      	mov	r4, r0
 8019962:	4620      	mov	r0, r4
 8019964:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8019966:	4b0b      	ldr	r3, [pc, #44]	; (8019994 <__sfp+0x74>)
 8019968:	6665      	str	r5, [r4, #100]	; 0x64
 801996a:	e9c4 5500 	strd	r5, r5, [r4]
 801996e:	60a5      	str	r5, [r4, #8]
 8019970:	e9c4 3503 	strd	r3, r5, [r4, #12]
 8019974:	e9c4 5505 	strd	r5, r5, [r4, #20]
 8019978:	2208      	movs	r2, #8
 801997a:	4629      	mov	r1, r5
 801997c:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 8019980:	f7ff f9bd 	bl	8018cfe <memset>
 8019984:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 8019988:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 801998c:	e7e9      	b.n	8019962 <__sfp+0x42>
 801998e:	bf00      	nop
 8019990:	0801d0e4 	.word	0x0801d0e4
 8019994:	ffff0001 	.word	0xffff0001

08019998 <_fwalk_reent>:
 8019998:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 801999c:	4680      	mov	r8, r0
 801999e:	4689      	mov	r9, r1
 80199a0:	f100 0448 	add.w	r4, r0, #72	; 0x48
 80199a4:	2600      	movs	r6, #0
 80199a6:	b914      	cbnz	r4, 80199ae <_fwalk_reent+0x16>
 80199a8:	4630      	mov	r0, r6
 80199aa:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80199ae:	e9d4 7501 	ldrd	r7, r5, [r4, #4]
 80199b2:	3f01      	subs	r7, #1
 80199b4:	d501      	bpl.n	80199ba <_fwalk_reent+0x22>
 80199b6:	6824      	ldr	r4, [r4, #0]
 80199b8:	e7f5      	b.n	80199a6 <_fwalk_reent+0xe>
 80199ba:	89ab      	ldrh	r3, [r5, #12]
 80199bc:	2b01      	cmp	r3, #1
 80199be:	d907      	bls.n	80199d0 <_fwalk_reent+0x38>
 80199c0:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 80199c4:	3301      	adds	r3, #1
 80199c6:	d003      	beq.n	80199d0 <_fwalk_reent+0x38>
 80199c8:	4629      	mov	r1, r5
 80199ca:	4640      	mov	r0, r8
 80199cc:	47c8      	blx	r9
 80199ce:	4306      	orrs	r6, r0
 80199d0:	3568      	adds	r5, #104	; 0x68
 80199d2:	e7ee      	b.n	80199b2 <_fwalk_reent+0x1a>

080199d4 <__swhatbuf_r>:
 80199d4:	b570      	push	{r4, r5, r6, lr}
 80199d6:	460e      	mov	r6, r1
 80199d8:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80199dc:	2900      	cmp	r1, #0
 80199de:	b096      	sub	sp, #88	; 0x58
 80199e0:	4614      	mov	r4, r2
 80199e2:	461d      	mov	r5, r3
 80199e4:	da07      	bge.n	80199f6 <__swhatbuf_r+0x22>
 80199e6:	2300      	movs	r3, #0
 80199e8:	602b      	str	r3, [r5, #0]
 80199ea:	89b3      	ldrh	r3, [r6, #12]
 80199ec:	061a      	lsls	r2, r3, #24
 80199ee:	d410      	bmi.n	8019a12 <__swhatbuf_r+0x3e>
 80199f0:	f44f 6380 	mov.w	r3, #1024	; 0x400
 80199f4:	e00e      	b.n	8019a14 <__swhatbuf_r+0x40>
 80199f6:	466a      	mov	r2, sp
 80199f8:	f000 f8b8 	bl	8019b6c <_fstat_r>
 80199fc:	2800      	cmp	r0, #0
 80199fe:	dbf2      	blt.n	80199e6 <__swhatbuf_r+0x12>
 8019a00:	9a01      	ldr	r2, [sp, #4]
 8019a02:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 8019a06:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 8019a0a:	425a      	negs	r2, r3
 8019a0c:	415a      	adcs	r2, r3
 8019a0e:	602a      	str	r2, [r5, #0]
 8019a10:	e7ee      	b.n	80199f0 <__swhatbuf_r+0x1c>
 8019a12:	2340      	movs	r3, #64	; 0x40
 8019a14:	2000      	movs	r0, #0
 8019a16:	6023      	str	r3, [r4, #0]
 8019a18:	b016      	add	sp, #88	; 0x58
 8019a1a:	bd70      	pop	{r4, r5, r6, pc}

08019a1c <__smakebuf_r>:
 8019a1c:	898b      	ldrh	r3, [r1, #12]
 8019a1e:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8019a20:	079d      	lsls	r5, r3, #30
 8019a22:	4606      	mov	r6, r0
 8019a24:	460c      	mov	r4, r1
 8019a26:	d507      	bpl.n	8019a38 <__smakebuf_r+0x1c>
 8019a28:	f104 0347 	add.w	r3, r4, #71	; 0x47
 8019a2c:	6023      	str	r3, [r4, #0]
 8019a2e:	6123      	str	r3, [r4, #16]
 8019a30:	2301      	movs	r3, #1
 8019a32:	6163      	str	r3, [r4, #20]
 8019a34:	b002      	add	sp, #8
 8019a36:	bd70      	pop	{r4, r5, r6, pc}
 8019a38:	ab01      	add	r3, sp, #4
 8019a3a:	466a      	mov	r2, sp
 8019a3c:	f7ff ffca 	bl	80199d4 <__swhatbuf_r>
 8019a40:	9900      	ldr	r1, [sp, #0]
 8019a42:	4605      	mov	r5, r0
 8019a44:	4630      	mov	r0, r6
 8019a46:	f7ff f9b1 	bl	8018dac <_malloc_r>
 8019a4a:	b948      	cbnz	r0, 8019a60 <__smakebuf_r+0x44>
 8019a4c:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8019a50:	059a      	lsls	r2, r3, #22
 8019a52:	d4ef      	bmi.n	8019a34 <__smakebuf_r+0x18>
 8019a54:	f023 0303 	bic.w	r3, r3, #3
 8019a58:	f043 0302 	orr.w	r3, r3, #2
 8019a5c:	81a3      	strh	r3, [r4, #12]
 8019a5e:	e7e3      	b.n	8019a28 <__smakebuf_r+0xc>
 8019a60:	4b0d      	ldr	r3, [pc, #52]	; (8019a98 <__smakebuf_r+0x7c>)
 8019a62:	62b3      	str	r3, [r6, #40]	; 0x28
 8019a64:	89a3      	ldrh	r3, [r4, #12]
 8019a66:	6020      	str	r0, [r4, #0]
 8019a68:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8019a6c:	81a3      	strh	r3, [r4, #12]
 8019a6e:	9b00      	ldr	r3, [sp, #0]
 8019a70:	6163      	str	r3, [r4, #20]
 8019a72:	9b01      	ldr	r3, [sp, #4]
 8019a74:	6120      	str	r0, [r4, #16]
 8019a76:	b15b      	cbz	r3, 8019a90 <__smakebuf_r+0x74>
 8019a78:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8019a7c:	4630      	mov	r0, r6
 8019a7e:	f000 f887 	bl	8019b90 <_isatty_r>
 8019a82:	b128      	cbz	r0, 8019a90 <__smakebuf_r+0x74>
 8019a84:	89a3      	ldrh	r3, [r4, #12]
 8019a86:	f023 0303 	bic.w	r3, r3, #3
 8019a8a:	f043 0301 	orr.w	r3, r3, #1
 8019a8e:	81a3      	strh	r3, [r4, #12]
 8019a90:	89a3      	ldrh	r3, [r4, #12]
 8019a92:	431d      	orrs	r5, r3
 8019a94:	81a5      	strh	r5, [r4, #12]
 8019a96:	e7cd      	b.n	8019a34 <__smakebuf_r+0x18>
 8019a98:	08019889 	.word	0x08019889

08019a9c <__malloc_lock>:
 8019a9c:	4770      	bx	lr

08019a9e <__malloc_unlock>:
 8019a9e:	4770      	bx	lr

08019aa0 <__sread>:
 8019aa0:	b510      	push	{r4, lr}
 8019aa2:	460c      	mov	r4, r1
 8019aa4:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8019aa8:	f000 f894 	bl	8019bd4 <_read_r>
 8019aac:	2800      	cmp	r0, #0
 8019aae:	bfab      	itete	ge
 8019ab0:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 8019ab2:	89a3      	ldrhlt	r3, [r4, #12]
 8019ab4:	181b      	addge	r3, r3, r0
 8019ab6:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 8019aba:	bfac      	ite	ge
 8019abc:	6563      	strge	r3, [r4, #84]	; 0x54
 8019abe:	81a3      	strhlt	r3, [r4, #12]
 8019ac0:	bd10      	pop	{r4, pc}

08019ac2 <__swrite>:
 8019ac2:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8019ac6:	461f      	mov	r7, r3
 8019ac8:	898b      	ldrh	r3, [r1, #12]
 8019aca:	05db      	lsls	r3, r3, #23
 8019acc:	4605      	mov	r5, r0
 8019ace:	460c      	mov	r4, r1
 8019ad0:	4616      	mov	r6, r2
 8019ad2:	d505      	bpl.n	8019ae0 <__swrite+0x1e>
 8019ad4:	2302      	movs	r3, #2
 8019ad6:	2200      	movs	r2, #0
 8019ad8:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8019adc:	f000 f868 	bl	8019bb0 <_lseek_r>
 8019ae0:	89a3      	ldrh	r3, [r4, #12]
 8019ae2:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8019ae6:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8019aea:	81a3      	strh	r3, [r4, #12]
 8019aec:	4632      	mov	r2, r6
 8019aee:	463b      	mov	r3, r7
 8019af0:	4628      	mov	r0, r5
 8019af2:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8019af6:	f000 b817 	b.w	8019b28 <_write_r>

08019afa <__sseek>:
 8019afa:	b510      	push	{r4, lr}
 8019afc:	460c      	mov	r4, r1
 8019afe:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8019b02:	f000 f855 	bl	8019bb0 <_lseek_r>
 8019b06:	1c43      	adds	r3, r0, #1
 8019b08:	89a3      	ldrh	r3, [r4, #12]
 8019b0a:	bf15      	itete	ne
 8019b0c:	6560      	strne	r0, [r4, #84]	; 0x54
 8019b0e:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 8019b12:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 8019b16:	81a3      	strheq	r3, [r4, #12]
 8019b18:	bf18      	it	ne
 8019b1a:	81a3      	strhne	r3, [r4, #12]
 8019b1c:	bd10      	pop	{r4, pc}

08019b1e <__sclose>:
 8019b1e:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8019b22:	f000 b813 	b.w	8019b4c <_close_r>
	...

08019b28 <_write_r>:
 8019b28:	b538      	push	{r3, r4, r5, lr}
 8019b2a:	4c07      	ldr	r4, [pc, #28]	; (8019b48 <_write_r+0x20>)
 8019b2c:	4605      	mov	r5, r0
 8019b2e:	4608      	mov	r0, r1
 8019b30:	4611      	mov	r1, r2
 8019b32:	2200      	movs	r2, #0
 8019b34:	6022      	str	r2, [r4, #0]
 8019b36:	461a      	mov	r2, r3
 8019b38:	f7e8 fb1e 	bl	8002178 <_write>
 8019b3c:	1c43      	adds	r3, r0, #1
 8019b3e:	d102      	bne.n	8019b46 <_write_r+0x1e>
 8019b40:	6823      	ldr	r3, [r4, #0]
 8019b42:	b103      	cbz	r3, 8019b46 <_write_r+0x1e>
 8019b44:	602b      	str	r3, [r5, #0]
 8019b46:	bd38      	pop	{r3, r4, r5, pc}
 8019b48:	20012980 	.word	0x20012980

08019b4c <_close_r>:
 8019b4c:	b538      	push	{r3, r4, r5, lr}
 8019b4e:	4c06      	ldr	r4, [pc, #24]	; (8019b68 <_close_r+0x1c>)
 8019b50:	2300      	movs	r3, #0
 8019b52:	4605      	mov	r5, r0
 8019b54:	4608      	mov	r0, r1
 8019b56:	6023      	str	r3, [r4, #0]
 8019b58:	f7e8 fb1c 	bl	8002194 <_close>
 8019b5c:	1c43      	adds	r3, r0, #1
 8019b5e:	d102      	bne.n	8019b66 <_close_r+0x1a>
 8019b60:	6823      	ldr	r3, [r4, #0]
 8019b62:	b103      	cbz	r3, 8019b66 <_close_r+0x1a>
 8019b64:	602b      	str	r3, [r5, #0]
 8019b66:	bd38      	pop	{r3, r4, r5, pc}
 8019b68:	20012980 	.word	0x20012980

08019b6c <_fstat_r>:
 8019b6c:	b538      	push	{r3, r4, r5, lr}
 8019b6e:	4c07      	ldr	r4, [pc, #28]	; (8019b8c <_fstat_r+0x20>)
 8019b70:	2300      	movs	r3, #0
 8019b72:	4605      	mov	r5, r0
 8019b74:	4608      	mov	r0, r1
 8019b76:	4611      	mov	r1, r2
 8019b78:	6023      	str	r3, [r4, #0]
 8019b7a:	f7e8 fb0e 	bl	800219a <_fstat>
 8019b7e:	1c43      	adds	r3, r0, #1
 8019b80:	d102      	bne.n	8019b88 <_fstat_r+0x1c>
 8019b82:	6823      	ldr	r3, [r4, #0]
 8019b84:	b103      	cbz	r3, 8019b88 <_fstat_r+0x1c>
 8019b86:	602b      	str	r3, [r5, #0]
 8019b88:	bd38      	pop	{r3, r4, r5, pc}
 8019b8a:	bf00      	nop
 8019b8c:	20012980 	.word	0x20012980

08019b90 <_isatty_r>:
 8019b90:	b538      	push	{r3, r4, r5, lr}
 8019b92:	4c06      	ldr	r4, [pc, #24]	; (8019bac <_isatty_r+0x1c>)
 8019b94:	2300      	movs	r3, #0
 8019b96:	4605      	mov	r5, r0
 8019b98:	4608      	mov	r0, r1
 8019b9a:	6023      	str	r3, [r4, #0]
 8019b9c:	f7e8 fb02 	bl	80021a4 <_isatty>
 8019ba0:	1c43      	adds	r3, r0, #1
 8019ba2:	d102      	bne.n	8019baa <_isatty_r+0x1a>
 8019ba4:	6823      	ldr	r3, [r4, #0]
 8019ba6:	b103      	cbz	r3, 8019baa <_isatty_r+0x1a>
 8019ba8:	602b      	str	r3, [r5, #0]
 8019baa:	bd38      	pop	{r3, r4, r5, pc}
 8019bac:	20012980 	.word	0x20012980

08019bb0 <_lseek_r>:
 8019bb0:	b538      	push	{r3, r4, r5, lr}
 8019bb2:	4c07      	ldr	r4, [pc, #28]	; (8019bd0 <_lseek_r+0x20>)
 8019bb4:	4605      	mov	r5, r0
 8019bb6:	4608      	mov	r0, r1
 8019bb8:	4611      	mov	r1, r2
 8019bba:	2200      	movs	r2, #0
 8019bbc:	6022      	str	r2, [r4, #0]
 8019bbe:	461a      	mov	r2, r3
 8019bc0:	f7e8 faf2 	bl	80021a8 <_lseek>
 8019bc4:	1c43      	adds	r3, r0, #1
 8019bc6:	d102      	bne.n	8019bce <_lseek_r+0x1e>
 8019bc8:	6823      	ldr	r3, [r4, #0]
 8019bca:	b103      	cbz	r3, 8019bce <_lseek_r+0x1e>
 8019bcc:	602b      	str	r3, [r5, #0]
 8019bce:	bd38      	pop	{r3, r4, r5, pc}
 8019bd0:	20012980 	.word	0x20012980

08019bd4 <_read_r>:
 8019bd4:	b538      	push	{r3, r4, r5, lr}
 8019bd6:	4c07      	ldr	r4, [pc, #28]	; (8019bf4 <_read_r+0x20>)
 8019bd8:	4605      	mov	r5, r0
 8019bda:	4608      	mov	r0, r1
 8019bdc:	4611      	mov	r1, r2
 8019bde:	2200      	movs	r2, #0
 8019be0:	6022      	str	r2, [r4, #0]
 8019be2:	461a      	mov	r2, r3
 8019be4:	f7e8 faba 	bl	800215c <_read>
 8019be8:	1c43      	adds	r3, r0, #1
 8019bea:	d102      	bne.n	8019bf2 <_read_r+0x1e>
 8019bec:	6823      	ldr	r3, [r4, #0]
 8019bee:	b103      	cbz	r3, 8019bf2 <_read_r+0x1e>
 8019bf0:	602b      	str	r3, [r5, #0]
 8019bf2:	bd38      	pop	{r3, r4, r5, pc}
 8019bf4:	20012980 	.word	0x20012980

08019bf8 <_init>:
 8019bf8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8019bfa:	bf00      	nop
 8019bfc:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8019bfe:	bc08      	pop	{r3}
 8019c00:	469e      	mov	lr, r3
 8019c02:	4770      	bx	lr

08019c04 <_fini>:
 8019c04:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8019c06:	bf00      	nop
 8019c08:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8019c0a:	bc08      	pop	{r3}
 8019c0c:	469e      	mov	lr, r3
 8019c0e:	4770      	bx	lr
