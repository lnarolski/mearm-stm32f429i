
STM32F429I-DISCO.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001ac  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00018dd0  080001b0  080001b0  000101b0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00003568  08018f80  08018f80  00028f80  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 FontFlashSection 0000079a  0801c4e8  0801c4e8  0002c4e8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 FontSearchFlashSection 0000000c  0801cc84  0801cc84  0002cc84  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 TextFlashSection 0000005c  0801cc90  0801cc90  0002cc90  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  6 ExtFlashSection 000394e0  0801ccec  0801ccec  0002ccec  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .ARM.extab    00000000  080561cc  080561cc  00070160  2**0
                  CONTENTS
  8 .ARM          00000008  080561cc  080561cc  000661cc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  9 .preinit_array 00000000  080561d4  080561d4  00070160  2**0
                  CONTENTS, ALLOC, LOAD, DATA
 10 .init_array   00000014  080561d4  080561d4  000661d4  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 11 .fini_array   00000008  080561e8  080561e8  000661e8  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 12 .data         00000160  20000000  080561f0  00070000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 13 .bss          00012530  20000160  08056350  00070160  2**2
                  ALLOC
 14 ._user_heap_stack 00001400  20012690  08056350  00072690  2**0
                  ALLOC
 15 .ARM.attributes 00000030  00000000  00000000  00070160  2**0
                  CONTENTS, READONLY
 16 TouchGFX_Framebuffer 0004b000  d0000000  d0000000  00080000  2**2
                  ALLOC
 17 .debug_line   0002bf93  00000000  00000000  00070190  2**0
                  CONTENTS, READONLY, DEBUGGING
 18 .debug_info   00089540  00000000  00000000  0009c123  2**0
                  CONTENTS, READONLY, DEBUGGING
 19 .debug_abbrev 00010285  00000000  00000000  00125663  2**0
                  CONTENTS, READONLY, DEBUGGING
 20 .debug_aranges 00002530  00000000  00000000  001358e8  2**3
                  CONTENTS, READONLY, DEBUGGING
 21 .debug_str    00104fed  00000000  00000000  00137e18  2**0
                  CONTENTS, READONLY, DEBUGGING
 22 .debug_ranges 00003148  00000000  00000000  0023ce08  2**3
                  CONTENTS, READONLY, DEBUGGING
 23 .debug_loc    0001a352  00000000  00000000  0023ff50  2**0
                  CONTENTS, READONLY, DEBUGGING
 24 .debug_macro  0002e27e  00000000  00000000  0025a2a2  2**0
                  CONTENTS, READONLY, DEBUGGING
 25 .comment      000000fa  00000000  00000000  00288520  2**0
                  CONTENTS, READONLY
 26 .debug_frame  00006fbc  00000000  00000000  0028861c  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

080001b0 <__do_global_dtors_aux>:
 80001b0:	b510      	push	{r4, lr}
 80001b2:	4c05      	ldr	r4, [pc, #20]	; (80001c8 <__do_global_dtors_aux+0x18>)
 80001b4:	7823      	ldrb	r3, [r4, #0]
 80001b6:	b933      	cbnz	r3, 80001c6 <__do_global_dtors_aux+0x16>
 80001b8:	4b04      	ldr	r3, [pc, #16]	; (80001cc <__do_global_dtors_aux+0x1c>)
 80001ba:	b113      	cbz	r3, 80001c2 <__do_global_dtors_aux+0x12>
 80001bc:	4804      	ldr	r0, [pc, #16]	; (80001d0 <__do_global_dtors_aux+0x20>)
 80001be:	f3af 8000 	nop.w
 80001c2:	2301      	movs	r3, #1
 80001c4:	7023      	strb	r3, [r4, #0]
 80001c6:	bd10      	pop	{r4, pc}
 80001c8:	20000160 	.word	0x20000160
 80001cc:	00000000 	.word	0x00000000
 80001d0:	08018f68 	.word	0x08018f68

080001d4 <frame_dummy>:
 80001d4:	b508      	push	{r3, lr}
 80001d6:	4b03      	ldr	r3, [pc, #12]	; (80001e4 <frame_dummy+0x10>)
 80001d8:	b11b      	cbz	r3, 80001e2 <frame_dummy+0xe>
 80001da:	4903      	ldr	r1, [pc, #12]	; (80001e8 <frame_dummy+0x14>)
 80001dc:	4803      	ldr	r0, [pc, #12]	; (80001ec <frame_dummy+0x18>)
 80001de:	f3af 8000 	nop.w
 80001e2:	bd08      	pop	{r3, pc}
 80001e4:	00000000 	.word	0x00000000
 80001e8:	20000164 	.word	0x20000164
 80001ec:	08018f68 	.word	0x08018f68

080001f0 <memchr>:
 80001f0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80001f4:	2a10      	cmp	r2, #16
 80001f6:	db2b      	blt.n	8000250 <memchr+0x60>
 80001f8:	f010 0f07 	tst.w	r0, #7
 80001fc:	d008      	beq.n	8000210 <memchr+0x20>
 80001fe:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000202:	3a01      	subs	r2, #1
 8000204:	428b      	cmp	r3, r1
 8000206:	d02d      	beq.n	8000264 <memchr+0x74>
 8000208:	f010 0f07 	tst.w	r0, #7
 800020c:	b342      	cbz	r2, 8000260 <memchr+0x70>
 800020e:	d1f6      	bne.n	80001fe <memchr+0xe>
 8000210:	b4f0      	push	{r4, r5, r6, r7}
 8000212:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000216:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800021a:	f022 0407 	bic.w	r4, r2, #7
 800021e:	f07f 0700 	mvns.w	r7, #0
 8000222:	2300      	movs	r3, #0
 8000224:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000228:	3c08      	subs	r4, #8
 800022a:	ea85 0501 	eor.w	r5, r5, r1
 800022e:	ea86 0601 	eor.w	r6, r6, r1
 8000232:	fa85 f547 	uadd8	r5, r5, r7
 8000236:	faa3 f587 	sel	r5, r3, r7
 800023a:	fa86 f647 	uadd8	r6, r6, r7
 800023e:	faa5 f687 	sel	r6, r5, r7
 8000242:	b98e      	cbnz	r6, 8000268 <memchr+0x78>
 8000244:	d1ee      	bne.n	8000224 <memchr+0x34>
 8000246:	bcf0      	pop	{r4, r5, r6, r7}
 8000248:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800024c:	f002 0207 	and.w	r2, r2, #7
 8000250:	b132      	cbz	r2, 8000260 <memchr+0x70>
 8000252:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000256:	3a01      	subs	r2, #1
 8000258:	ea83 0301 	eor.w	r3, r3, r1
 800025c:	b113      	cbz	r3, 8000264 <memchr+0x74>
 800025e:	d1f8      	bne.n	8000252 <memchr+0x62>
 8000260:	2000      	movs	r0, #0
 8000262:	4770      	bx	lr
 8000264:	3801      	subs	r0, #1
 8000266:	4770      	bx	lr
 8000268:	2d00      	cmp	r5, #0
 800026a:	bf06      	itte	eq
 800026c:	4635      	moveq	r5, r6
 800026e:	3803      	subeq	r0, #3
 8000270:	3807      	subne	r0, #7
 8000272:	f015 0f01 	tst.w	r5, #1
 8000276:	d107      	bne.n	8000288 <memchr+0x98>
 8000278:	3001      	adds	r0, #1
 800027a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800027e:	bf02      	ittt	eq
 8000280:	3001      	addeq	r0, #1
 8000282:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000286:	3001      	addeq	r0, #1
 8000288:	bcf0      	pop	{r4, r5, r6, r7}
 800028a:	3801      	subs	r0, #1
 800028c:	4770      	bx	lr
 800028e:	bf00      	nop

08000290 <__aeabi_uldivmod>:
 8000290:	b953      	cbnz	r3, 80002a8 <__aeabi_uldivmod+0x18>
 8000292:	b94a      	cbnz	r2, 80002a8 <__aeabi_uldivmod+0x18>
 8000294:	2900      	cmp	r1, #0
 8000296:	bf08      	it	eq
 8000298:	2800      	cmpeq	r0, #0
 800029a:	bf1c      	itt	ne
 800029c:	f04f 31ff 	movne.w	r1, #4294967295
 80002a0:	f04f 30ff 	movne.w	r0, #4294967295
 80002a4:	f000 b972 	b.w	800058c <__aeabi_idiv0>
 80002a8:	f1ad 0c08 	sub.w	ip, sp, #8
 80002ac:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 80002b0:	f000 f806 	bl	80002c0 <__udivmoddi4>
 80002b4:	f8dd e004 	ldr.w	lr, [sp, #4]
 80002b8:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80002bc:	b004      	add	sp, #16
 80002be:	4770      	bx	lr

080002c0 <__udivmoddi4>:
 80002c0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80002c4:	9e08      	ldr	r6, [sp, #32]
 80002c6:	4604      	mov	r4, r0
 80002c8:	4688      	mov	r8, r1
 80002ca:	2b00      	cmp	r3, #0
 80002cc:	d14b      	bne.n	8000366 <__udivmoddi4+0xa6>
 80002ce:	428a      	cmp	r2, r1
 80002d0:	4615      	mov	r5, r2
 80002d2:	d967      	bls.n	80003a4 <__udivmoddi4+0xe4>
 80002d4:	fab2 f282 	clz	r2, r2
 80002d8:	b14a      	cbz	r2, 80002ee <__udivmoddi4+0x2e>
 80002da:	f1c2 0720 	rsb	r7, r2, #32
 80002de:	fa01 f302 	lsl.w	r3, r1, r2
 80002e2:	fa20 f707 	lsr.w	r7, r0, r7
 80002e6:	4095      	lsls	r5, r2
 80002e8:	ea47 0803 	orr.w	r8, r7, r3
 80002ec:	4094      	lsls	r4, r2
 80002ee:	ea4f 4e15 	mov.w	lr, r5, lsr #16
 80002f2:	0c23      	lsrs	r3, r4, #16
 80002f4:	fbb8 f7fe 	udiv	r7, r8, lr
 80002f8:	fa1f fc85 	uxth.w	ip, r5
 80002fc:	fb0e 8817 	mls	r8, lr, r7, r8
 8000300:	ea43 4308 	orr.w	r3, r3, r8, lsl #16
 8000304:	fb07 f10c 	mul.w	r1, r7, ip
 8000308:	4299      	cmp	r1, r3
 800030a:	d909      	bls.n	8000320 <__udivmoddi4+0x60>
 800030c:	18eb      	adds	r3, r5, r3
 800030e:	f107 30ff 	add.w	r0, r7, #4294967295
 8000312:	f080 811b 	bcs.w	800054c <__udivmoddi4+0x28c>
 8000316:	4299      	cmp	r1, r3
 8000318:	f240 8118 	bls.w	800054c <__udivmoddi4+0x28c>
 800031c:	3f02      	subs	r7, #2
 800031e:	442b      	add	r3, r5
 8000320:	1a5b      	subs	r3, r3, r1
 8000322:	b2a4      	uxth	r4, r4
 8000324:	fbb3 f0fe 	udiv	r0, r3, lr
 8000328:	fb0e 3310 	mls	r3, lr, r0, r3
 800032c:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
 8000330:	fb00 fc0c 	mul.w	ip, r0, ip
 8000334:	45a4      	cmp	ip, r4
 8000336:	d909      	bls.n	800034c <__udivmoddi4+0x8c>
 8000338:	192c      	adds	r4, r5, r4
 800033a:	f100 33ff 	add.w	r3, r0, #4294967295
 800033e:	f080 8107 	bcs.w	8000550 <__udivmoddi4+0x290>
 8000342:	45a4      	cmp	ip, r4
 8000344:	f240 8104 	bls.w	8000550 <__udivmoddi4+0x290>
 8000348:	3802      	subs	r0, #2
 800034a:	442c      	add	r4, r5
 800034c:	ea40 4007 	orr.w	r0, r0, r7, lsl #16
 8000350:	eba4 040c 	sub.w	r4, r4, ip
 8000354:	2700      	movs	r7, #0
 8000356:	b11e      	cbz	r6, 8000360 <__udivmoddi4+0xa0>
 8000358:	40d4      	lsrs	r4, r2
 800035a:	2300      	movs	r3, #0
 800035c:	e9c6 4300 	strd	r4, r3, [r6]
 8000360:	4639      	mov	r1, r7
 8000362:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000366:	428b      	cmp	r3, r1
 8000368:	d909      	bls.n	800037e <__udivmoddi4+0xbe>
 800036a:	2e00      	cmp	r6, #0
 800036c:	f000 80eb 	beq.w	8000546 <__udivmoddi4+0x286>
 8000370:	2700      	movs	r7, #0
 8000372:	e9c6 0100 	strd	r0, r1, [r6]
 8000376:	4638      	mov	r0, r7
 8000378:	4639      	mov	r1, r7
 800037a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800037e:	fab3 f783 	clz	r7, r3
 8000382:	2f00      	cmp	r7, #0
 8000384:	d147      	bne.n	8000416 <__udivmoddi4+0x156>
 8000386:	428b      	cmp	r3, r1
 8000388:	d302      	bcc.n	8000390 <__udivmoddi4+0xd0>
 800038a:	4282      	cmp	r2, r0
 800038c:	f200 80fa 	bhi.w	8000584 <__udivmoddi4+0x2c4>
 8000390:	1a84      	subs	r4, r0, r2
 8000392:	eb61 0303 	sbc.w	r3, r1, r3
 8000396:	2001      	movs	r0, #1
 8000398:	4698      	mov	r8, r3
 800039a:	2e00      	cmp	r6, #0
 800039c:	d0e0      	beq.n	8000360 <__udivmoddi4+0xa0>
 800039e:	e9c6 4800 	strd	r4, r8, [r6]
 80003a2:	e7dd      	b.n	8000360 <__udivmoddi4+0xa0>
 80003a4:	b902      	cbnz	r2, 80003a8 <__udivmoddi4+0xe8>
 80003a6:	deff      	udf	#255	; 0xff
 80003a8:	fab2 f282 	clz	r2, r2
 80003ac:	2a00      	cmp	r2, #0
 80003ae:	f040 808f 	bne.w	80004d0 <__udivmoddi4+0x210>
 80003b2:	1b49      	subs	r1, r1, r5
 80003b4:	ea4f 4e15 	mov.w	lr, r5, lsr #16
 80003b8:	fa1f f885 	uxth.w	r8, r5
 80003bc:	2701      	movs	r7, #1
 80003be:	fbb1 fcfe 	udiv	ip, r1, lr
 80003c2:	0c23      	lsrs	r3, r4, #16
 80003c4:	fb0e 111c 	mls	r1, lr, ip, r1
 80003c8:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 80003cc:	fb08 f10c 	mul.w	r1, r8, ip
 80003d0:	4299      	cmp	r1, r3
 80003d2:	d907      	bls.n	80003e4 <__udivmoddi4+0x124>
 80003d4:	18eb      	adds	r3, r5, r3
 80003d6:	f10c 30ff 	add.w	r0, ip, #4294967295
 80003da:	d202      	bcs.n	80003e2 <__udivmoddi4+0x122>
 80003dc:	4299      	cmp	r1, r3
 80003de:	f200 80cd 	bhi.w	800057c <__udivmoddi4+0x2bc>
 80003e2:	4684      	mov	ip, r0
 80003e4:	1a59      	subs	r1, r3, r1
 80003e6:	b2a3      	uxth	r3, r4
 80003e8:	fbb1 f0fe 	udiv	r0, r1, lr
 80003ec:	fb0e 1410 	mls	r4, lr, r0, r1
 80003f0:	ea43 4404 	orr.w	r4, r3, r4, lsl #16
 80003f4:	fb08 f800 	mul.w	r8, r8, r0
 80003f8:	45a0      	cmp	r8, r4
 80003fa:	d907      	bls.n	800040c <__udivmoddi4+0x14c>
 80003fc:	192c      	adds	r4, r5, r4
 80003fe:	f100 33ff 	add.w	r3, r0, #4294967295
 8000402:	d202      	bcs.n	800040a <__udivmoddi4+0x14a>
 8000404:	45a0      	cmp	r8, r4
 8000406:	f200 80b6 	bhi.w	8000576 <__udivmoddi4+0x2b6>
 800040a:	4618      	mov	r0, r3
 800040c:	eba4 0408 	sub.w	r4, r4, r8
 8000410:	ea40 400c 	orr.w	r0, r0, ip, lsl #16
 8000414:	e79f      	b.n	8000356 <__udivmoddi4+0x96>
 8000416:	f1c7 0c20 	rsb	ip, r7, #32
 800041a:	40bb      	lsls	r3, r7
 800041c:	fa22 fe0c 	lsr.w	lr, r2, ip
 8000420:	ea4e 0e03 	orr.w	lr, lr, r3
 8000424:	fa01 f407 	lsl.w	r4, r1, r7
 8000428:	fa20 f50c 	lsr.w	r5, r0, ip
 800042c:	fa21 f30c 	lsr.w	r3, r1, ip
 8000430:	ea4f 481e 	mov.w	r8, lr, lsr #16
 8000434:	4325      	orrs	r5, r4
 8000436:	fbb3 f9f8 	udiv	r9, r3, r8
 800043a:	0c2c      	lsrs	r4, r5, #16
 800043c:	fb08 3319 	mls	r3, r8, r9, r3
 8000440:	fa1f fa8e 	uxth.w	sl, lr
 8000444:	ea44 4303 	orr.w	r3, r4, r3, lsl #16
 8000448:	fb09 f40a 	mul.w	r4, r9, sl
 800044c:	429c      	cmp	r4, r3
 800044e:	fa02 f207 	lsl.w	r2, r2, r7
 8000452:	fa00 f107 	lsl.w	r1, r0, r7
 8000456:	d90b      	bls.n	8000470 <__udivmoddi4+0x1b0>
 8000458:	eb1e 0303 	adds.w	r3, lr, r3
 800045c:	f109 30ff 	add.w	r0, r9, #4294967295
 8000460:	f080 8087 	bcs.w	8000572 <__udivmoddi4+0x2b2>
 8000464:	429c      	cmp	r4, r3
 8000466:	f240 8084 	bls.w	8000572 <__udivmoddi4+0x2b2>
 800046a:	f1a9 0902 	sub.w	r9, r9, #2
 800046e:	4473      	add	r3, lr
 8000470:	1b1b      	subs	r3, r3, r4
 8000472:	b2ad      	uxth	r5, r5
 8000474:	fbb3 f0f8 	udiv	r0, r3, r8
 8000478:	fb08 3310 	mls	r3, r8, r0, r3
 800047c:	ea45 4403 	orr.w	r4, r5, r3, lsl #16
 8000480:	fb00 fa0a 	mul.w	sl, r0, sl
 8000484:	45a2      	cmp	sl, r4
 8000486:	d908      	bls.n	800049a <__udivmoddi4+0x1da>
 8000488:	eb1e 0404 	adds.w	r4, lr, r4
 800048c:	f100 33ff 	add.w	r3, r0, #4294967295
 8000490:	d26b      	bcs.n	800056a <__udivmoddi4+0x2aa>
 8000492:	45a2      	cmp	sl, r4
 8000494:	d969      	bls.n	800056a <__udivmoddi4+0x2aa>
 8000496:	3802      	subs	r0, #2
 8000498:	4474      	add	r4, lr
 800049a:	ea40 4009 	orr.w	r0, r0, r9, lsl #16
 800049e:	fba0 8902 	umull	r8, r9, r0, r2
 80004a2:	eba4 040a 	sub.w	r4, r4, sl
 80004a6:	454c      	cmp	r4, r9
 80004a8:	46c2      	mov	sl, r8
 80004aa:	464b      	mov	r3, r9
 80004ac:	d354      	bcc.n	8000558 <__udivmoddi4+0x298>
 80004ae:	d051      	beq.n	8000554 <__udivmoddi4+0x294>
 80004b0:	2e00      	cmp	r6, #0
 80004b2:	d069      	beq.n	8000588 <__udivmoddi4+0x2c8>
 80004b4:	ebb1 050a 	subs.w	r5, r1, sl
 80004b8:	eb64 0403 	sbc.w	r4, r4, r3
 80004bc:	fa04 fc0c 	lsl.w	ip, r4, ip
 80004c0:	40fd      	lsrs	r5, r7
 80004c2:	40fc      	lsrs	r4, r7
 80004c4:	ea4c 0505 	orr.w	r5, ip, r5
 80004c8:	e9c6 5400 	strd	r5, r4, [r6]
 80004cc:	2700      	movs	r7, #0
 80004ce:	e747      	b.n	8000360 <__udivmoddi4+0xa0>
 80004d0:	f1c2 0320 	rsb	r3, r2, #32
 80004d4:	fa20 f703 	lsr.w	r7, r0, r3
 80004d8:	4095      	lsls	r5, r2
 80004da:	fa01 f002 	lsl.w	r0, r1, r2
 80004de:	fa21 f303 	lsr.w	r3, r1, r3
 80004e2:	ea4f 4e15 	mov.w	lr, r5, lsr #16
 80004e6:	4338      	orrs	r0, r7
 80004e8:	0c01      	lsrs	r1, r0, #16
 80004ea:	fbb3 f7fe 	udiv	r7, r3, lr
 80004ee:	fa1f f885 	uxth.w	r8, r5
 80004f2:	fb0e 3317 	mls	r3, lr, r7, r3
 80004f6:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 80004fa:	fb07 f308 	mul.w	r3, r7, r8
 80004fe:	428b      	cmp	r3, r1
 8000500:	fa04 f402 	lsl.w	r4, r4, r2
 8000504:	d907      	bls.n	8000516 <__udivmoddi4+0x256>
 8000506:	1869      	adds	r1, r5, r1
 8000508:	f107 3cff 	add.w	ip, r7, #4294967295
 800050c:	d22f      	bcs.n	800056e <__udivmoddi4+0x2ae>
 800050e:	428b      	cmp	r3, r1
 8000510:	d92d      	bls.n	800056e <__udivmoddi4+0x2ae>
 8000512:	3f02      	subs	r7, #2
 8000514:	4429      	add	r1, r5
 8000516:	1acb      	subs	r3, r1, r3
 8000518:	b281      	uxth	r1, r0
 800051a:	fbb3 f0fe 	udiv	r0, r3, lr
 800051e:	fb0e 3310 	mls	r3, lr, r0, r3
 8000522:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 8000526:	fb00 f308 	mul.w	r3, r0, r8
 800052a:	428b      	cmp	r3, r1
 800052c:	d907      	bls.n	800053e <__udivmoddi4+0x27e>
 800052e:	1869      	adds	r1, r5, r1
 8000530:	f100 3cff 	add.w	ip, r0, #4294967295
 8000534:	d217      	bcs.n	8000566 <__udivmoddi4+0x2a6>
 8000536:	428b      	cmp	r3, r1
 8000538:	d915      	bls.n	8000566 <__udivmoddi4+0x2a6>
 800053a:	3802      	subs	r0, #2
 800053c:	4429      	add	r1, r5
 800053e:	1ac9      	subs	r1, r1, r3
 8000540:	ea40 4707 	orr.w	r7, r0, r7, lsl #16
 8000544:	e73b      	b.n	80003be <__udivmoddi4+0xfe>
 8000546:	4637      	mov	r7, r6
 8000548:	4630      	mov	r0, r6
 800054a:	e709      	b.n	8000360 <__udivmoddi4+0xa0>
 800054c:	4607      	mov	r7, r0
 800054e:	e6e7      	b.n	8000320 <__udivmoddi4+0x60>
 8000550:	4618      	mov	r0, r3
 8000552:	e6fb      	b.n	800034c <__udivmoddi4+0x8c>
 8000554:	4541      	cmp	r1, r8
 8000556:	d2ab      	bcs.n	80004b0 <__udivmoddi4+0x1f0>
 8000558:	ebb8 0a02 	subs.w	sl, r8, r2
 800055c:	eb69 020e 	sbc.w	r2, r9, lr
 8000560:	3801      	subs	r0, #1
 8000562:	4613      	mov	r3, r2
 8000564:	e7a4      	b.n	80004b0 <__udivmoddi4+0x1f0>
 8000566:	4660      	mov	r0, ip
 8000568:	e7e9      	b.n	800053e <__udivmoddi4+0x27e>
 800056a:	4618      	mov	r0, r3
 800056c:	e795      	b.n	800049a <__udivmoddi4+0x1da>
 800056e:	4667      	mov	r7, ip
 8000570:	e7d1      	b.n	8000516 <__udivmoddi4+0x256>
 8000572:	4681      	mov	r9, r0
 8000574:	e77c      	b.n	8000470 <__udivmoddi4+0x1b0>
 8000576:	3802      	subs	r0, #2
 8000578:	442c      	add	r4, r5
 800057a:	e747      	b.n	800040c <__udivmoddi4+0x14c>
 800057c:	f1ac 0c02 	sub.w	ip, ip, #2
 8000580:	442b      	add	r3, r5
 8000582:	e72f      	b.n	80003e4 <__udivmoddi4+0x124>
 8000584:	4638      	mov	r0, r7
 8000586:	e708      	b.n	800039a <__udivmoddi4+0xda>
 8000588:	4637      	mov	r7, r6
 800058a:	e6e9      	b.n	8000360 <__udivmoddi4+0xa0>

0800058c <__aeabi_idiv0>:
 800058c:	4770      	bx	lr
 800058e:	bf00      	nop

08000590 <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler: 
  ldr   sp, =_estack       /* set stack pointer */
 8000590:	f8df d034 	ldr.w	sp, [pc, #52]	; 80005c8 <LoopFillZerobss+0x14>
 
/* Copy the data segment initializers from flash to SRAM */  
  movs  r1, #0
 8000594:	2100      	movs	r1, #0
  b  LoopCopyDataInit
 8000596:	e003      	b.n	80005a0 <LoopCopyDataInit>

08000598 <CopyDataInit>:

CopyDataInit:
  ldr  r3, =_sidata
 8000598:	4b0c      	ldr	r3, [pc, #48]	; (80005cc <LoopFillZerobss+0x18>)
  ldr  r3, [r3, r1]
 800059a:	585b      	ldr	r3, [r3, r1]
  str  r3, [r0, r1]
 800059c:	5043      	str	r3, [r0, r1]
  adds  r1, r1, #4
 800059e:	3104      	adds	r1, #4

080005a0 <LoopCopyDataInit>:
    
LoopCopyDataInit:
  ldr  r0, =_sdata
 80005a0:	480b      	ldr	r0, [pc, #44]	; (80005d0 <LoopFillZerobss+0x1c>)
  ldr  r3, =_edata
 80005a2:	4b0c      	ldr	r3, [pc, #48]	; (80005d4 <LoopFillZerobss+0x20>)
  adds  r2, r0, r1
 80005a4:	1842      	adds	r2, r0, r1
  cmp  r2, r3
 80005a6:	429a      	cmp	r2, r3
  bcc  CopyDataInit
 80005a8:	d3f6      	bcc.n	8000598 <CopyDataInit>
  ldr  r2, =_sbss
 80005aa:	4a0b      	ldr	r2, [pc, #44]	; (80005d8 <LoopFillZerobss+0x24>)
  b  LoopFillZerobss
 80005ac:	e002      	b.n	80005b4 <LoopFillZerobss>

080005ae <FillZerobss>:
/* Zero fill the bss segment. */  
FillZerobss:
  movs  r3, #0
 80005ae:	2300      	movs	r3, #0
  str  r3, [r2], #4
 80005b0:	f842 3b04 	str.w	r3, [r2], #4

080005b4 <LoopFillZerobss>:
    
LoopFillZerobss:
  ldr  r3, = _ebss
 80005b4:	4b09      	ldr	r3, [pc, #36]	; (80005dc <LoopFillZerobss+0x28>)
  cmp  r2, r3
 80005b6:	429a      	cmp	r2, r3
  bcc  FillZerobss
 80005b8:	d3f9      	bcc.n	80005ae <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit   
 80005ba:	f002 fcd1 	bl	8002f60 <SystemInit>
/* Call static constructors */
    bl __libc_init_array
 80005be:	f017 fd17 	bl	8017ff0 <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 80005c2:	f000 fe95 	bl	80012f0 <main>
  bx  lr    
 80005c6:	4770      	bx	lr
  ldr   sp, =_estack       /* set stack pointer */
 80005c8:	20030000 	.word	0x20030000
  ldr  r3, =_sidata
 80005cc:	080561f0 	.word	0x080561f0
  ldr  r0, =_sdata
 80005d0:	20000000 	.word	0x20000000
  ldr  r3, =_edata
 80005d4:	20000160 	.word	0x20000160
  ldr  r2, =_sbss
 80005d8:	20000160 	.word	0x20000160
  ldr  r3, = _ebss
 80005dc:	20012690 	.word	0x20012690

080005e0 <ADC_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 80005e0:	e7fe      	b.n	80005e0 <ADC_IRQHandler>

080005e2 <MX_TouchGFX_Init>:
 * Initialize TouchGFX application
 */
void MX_TouchGFX_Init(void)
{
  // Calling farward to touchgfx_init in C++ domain
  touchgfx_init();
 80005e2:	f000 bc93 	b.w	8000f0c <touchgfx_init>

080005e6 <TouchGFX_Task>:
 * TouchGFX application thread
 */
void TouchGFX_Task(void *argument)
{
  // Calling farward to touchgfx_init in C++ domain
  touchgfx_taskEntry();
 80005e6:	f000 bd01 	b.w	8000fec <touchgfx_taskEntry>

080005ea <_ZN20STM32TouchControllerD1Ev>:
 * @brief This class specializes TouchController Interface.
 *
 * @sa touchgfx::TouchController
 */

class STM32TouchController : public touchgfx::TouchController
 80005ea:	4770      	bx	lr

080005ec <_ZN20STM32TouchControllerD0Ev>:
 80005ec:	b510      	push	{r4, lr}
 80005ee:	2104      	movs	r1, #4
 80005f0:	4604      	mov	r4, r0
 80005f2:	f017 fc87 	bl	8017f04 <_ZdlPvj>
 80005f6:	4620      	mov	r0, r4
 80005f8:	bd10      	pop	{r4, pc}
	...

080005fc <_Z11BSP_TS_Inittt>:
  * @param  XSize: The maximum X size of the TS area on LCD
  * @param  YSize: The maximum Y size of the TS area on LCD
  * @retval TS_OK: if all initializations are OK. Other value if error.
  */
uint8_t BSP_TS_Init(uint16_t XSize, uint16_t YSize)
{
 80005fc:	b538      	push	{r3, r4, r5, lr}
    uint8_t ret = TS_ERROR;

    /* Initialize x and y positions boundaries */
    TsXBoundary = XSize;
 80005fe:	4b0c      	ldr	r3, [pc, #48]	; (8000630 <_Z11BSP_TS_Inittt+0x34>)
    TsYBoundary = YSize;

    /* Read ID and verify if the IO expander is ready */
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 8000600:	4c0c      	ldr	r4, [pc, #48]	; (8000634 <_Z11BSP_TS_Inittt+0x38>)
    TsXBoundary = XSize;
 8000602:	8018      	strh	r0, [r3, #0]
    TsYBoundary = YSize;
 8000604:	4b0c      	ldr	r3, [pc, #48]	; (8000638 <_Z11BSP_TS_Inittt+0x3c>)
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 8000606:	2082      	movs	r0, #130	; 0x82
    TsYBoundary = YSize;
 8000608:	8019      	strh	r1, [r3, #0]
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 800060a:	6863      	ldr	r3, [r4, #4]
 800060c:	4798      	blx	r3
 800060e:	f640 0311 	movw	r3, #2065	; 0x811
 8000612:	4298      	cmp	r0, r3
 8000614:	d10a      	bne.n	800062c <_Z11BSP_TS_Inittt+0x30>
    {
        /* Initialize the TS driver structure */
        TsDrv = &stmpe811_ts_drv;
 8000616:	4d09      	ldr	r5, [pc, #36]	; (800063c <_Z11BSP_TS_Inittt+0x40>)
    }

    if (ret == TS_OK)
    {
        /* Initialize the LL TS Driver */
        TsDrv->Init(TS_I2C_ADDRESS);
 8000618:	6823      	ldr	r3, [r4, #0]
        TsDrv = &stmpe811_ts_drv;
 800061a:	602c      	str	r4, [r5, #0]
        TsDrv->Init(TS_I2C_ADDRESS);
 800061c:	2082      	movs	r0, #130	; 0x82
 800061e:	4798      	blx	r3
        TsDrv->Start(TS_I2C_ADDRESS);
 8000620:	682b      	ldr	r3, [r5, #0]
 8000622:	2082      	movs	r0, #130	; 0x82
 8000624:	68db      	ldr	r3, [r3, #12]
 8000626:	4798      	blx	r3
        ret = TS_OK;
 8000628:	2000      	movs	r0, #0
    }

    return ret;
}
 800062a:	bd38      	pop	{r3, r4, r5, pc}
    uint8_t ret = TS_ERROR;
 800062c:	2001      	movs	r0, #1
 800062e:	e7fc      	b.n	800062a <_Z11BSP_TS_Inittt+0x2e>
 8000630:	2000017c 	.word	0x2000017c
 8000634:	2000004c 	.word	0x2000004c
 8000638:	2000017e 	.word	0x2000017e
 800063c:	20000180 	.word	0x20000180

08000640 <_ZN20STM32TouchController4initEv>:
    BSP_TS_Init(240, 320);
 8000640:	f44f 71a0 	mov.w	r1, #320	; 0x140
 8000644:	20f0      	movs	r0, #240	; 0xf0
 8000646:	f7ff bfd9 	b.w	80005fc <_Z11BSP_TS_Inittt>
	...

0800064c <_Z15BSP_TS_GetStateP15TS_StateTypeDef>:
/**
  * @brief  Returns status and positions of the touch screen.
  * @param  TsState: Pointer to touch screen current state structure
  */
void BSP_TS_GetState(TS_StateTypeDef* TsState)
{
 800064c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    static uint32_t _x = 0, _y = 0;
    uint16_t xDiff, yDiff, x, y, xr, yr;

    TsState->TouchDetected = TsDrv->DetectTouch(TS_I2C_ADDRESS);
 800064e:	4d2c      	ldr	r5, [pc, #176]	; (8000700 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xb4>)
 8000650:	682b      	ldr	r3, [r5, #0]
{
 8000652:	4604      	mov	r4, r0
    TsState->TouchDetected = TsDrv->DetectTouch(TS_I2C_ADDRESS);
 8000654:	691b      	ldr	r3, [r3, #16]
 8000656:	2082      	movs	r0, #130	; 0x82
 8000658:	4798      	blx	r3
 800065a:	b280      	uxth	r0, r0
 800065c:	8020      	strh	r0, [r4, #0]

    if (TsState->TouchDetected)
 800065e:	2800      	cmp	r0, #0
 8000660:	d04b      	beq.n	80006fa <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xae>
    {
        TsDrv->GetXY(TS_I2C_ADDRESS, &x, &y);
 8000662:	682b      	ldr	r3, [r5, #0]
 8000664:	f10d 0206 	add.w	r2, sp, #6
 8000668:	695b      	ldr	r3, [r3, #20]
 800066a:	a901      	add	r1, sp, #4
 800066c:	2082      	movs	r0, #130	; 0x82
 800066e:	4798      	blx	r3

        /* Y value first correction */
        y -= 360;
 8000670:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 8000674:	f5a3 73b4 	sub.w	r3, r3, #360	; 0x168

        /* Y value second correction */
        yr = y / 11;
 8000678:	b29b      	uxth	r3, r3
 800067a:	220b      	movs	r2, #11
 800067c:	fbb3 f3f2 	udiv	r3, r3, r2

        /* Return y position value */
        if (yr <= 0)
 8000680:	b133      	cbz	r3, 8000690 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x44>
        {
            yr = 0;
        }
        else if (yr > TsYBoundary)
 8000682:	4a20      	ldr	r2, [pc, #128]	; (8000704 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xb8>)
 8000684:	8812      	ldrh	r2, [r2, #0]
 8000686:	429a      	cmp	r2, r3
        {
            yr = TsYBoundary - 1;
 8000688:	bf3c      	itt	cc
 800068a:	f102 33ff 	addcc.w	r3, r2, #4294967295
 800068e:	b29b      	uxthcc	r3, r3
        else
        {}
        y = yr;

        /* X value first correction */
        if (x <= 3000)
 8000690:	f8bd 2004 	ldrh.w	r2, [sp, #4]
 8000694:	f640 31b8 	movw	r1, #3000	; 0xbb8
 8000698:	428a      	cmp	r2, r1
        {
            x = 3870 - x;
 800069a:	bf95      	itete	ls
 800069c:	f5c2 6271 	rsbls	r2, r2, #3856	; 0xf10
        }
        else
        {
            x = 3800 - x;
 80006a0:	f5c2 626d 	rsbhi	r2, r2, #3792	; 0xed0
            x = 3870 - x;
 80006a4:	320e      	addls	r2, #14
            x = 3800 - x;
 80006a6:	3208      	addhi	r2, #8
 80006a8:	f8ad 2004 	strh.w	r2, [sp, #4]
        }

        /* X value second correction */
        xr = x / 15;
 80006ac:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 80006b0:	220f      	movs	r2, #15
 80006b2:	fbb1 f1f2 	udiv	r1, r1, r2

        /* Return X position value */
        if (xr <= 0)
 80006b6:	b131      	cbz	r1, 80006c6 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x7a>
        {
            xr = 0;
        }
        else if (xr > TsXBoundary)
 80006b8:	4a13      	ldr	r2, [pc, #76]	; (8000708 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xbc>)
 80006ba:	8812      	ldrh	r2, [r2, #0]
 80006bc:	428a      	cmp	r2, r1
        {
            xr = TsXBoundary - 1;
 80006be:	bf3c      	itt	cc
 80006c0:	f102 31ff 	addcc.w	r1, r2, #4294967295
 80006c4:	b289      	uxthcc	r1, r1
        }
        else
        {}

        x = xr;
        xDiff = x > _x ? (x - _x) : (_x - x);
 80006c6:	4e11      	ldr	r6, [pc, #68]	; (800070c <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xc0>)
        yDiff = y > _y ? (y - _y) : (_y - y);
 80006c8:	4d11      	ldr	r5, [pc, #68]	; (8000710 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xc4>)
        xDiff = x > _x ? (x - _x) : (_x - x);
 80006ca:	6830      	ldr	r0, [r6, #0]
        yDiff = y > _y ? (y - _y) : (_y - y);
 80006cc:	682f      	ldr	r7, [r5, #0]
 80006ce:	b282      	uxth	r2, r0
        xDiff = x > _x ? (x - _x) : (_x - x);
 80006d0:	4281      	cmp	r1, r0
 80006d2:	bf88      	it	hi
 80006d4:	1a8a      	subhi	r2, r1, r2
 80006d6:	b2b8      	uxth	r0, r7
 80006d8:	bf98      	it	ls
 80006da:	1a52      	subls	r2, r2, r1
        yDiff = y > _y ? (y - _y) : (_y - y);
 80006dc:	42bb      	cmp	r3, r7
 80006de:	bf8c      	ite	hi
 80006e0:	1a18      	subhi	r0, r3, r0
 80006e2:	1ac0      	subls	r0, r0, r3
        xDiff = x > _x ? (x - _x) : (_x - x);
 80006e4:	b292      	uxth	r2, r2
        yDiff = y > _y ? (y - _y) : (_y - y);
 80006e6:	b280      	uxth	r0, r0

        if (xDiff + yDiff > 5)
 80006e8:	4402      	add	r2, r0
 80006ea:	2a05      	cmp	r2, #5
        {
            _x = x;
 80006ec:	bfc4      	itt	gt
 80006ee:	6031      	strgt	r1, [r6, #0]
            _y = y;
 80006f0:	602b      	strgt	r3, [r5, #0]
        }

        /* Update the X position */
        TsState->X = _x;
 80006f2:	6833      	ldr	r3, [r6, #0]
 80006f4:	8063      	strh	r3, [r4, #2]

        /* Update the Y position */
        TsState->Y = _y;
 80006f6:	682b      	ldr	r3, [r5, #0]
 80006f8:	80a3      	strh	r3, [r4, #4]
    }
}
 80006fa:	b003      	add	sp, #12
 80006fc:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80006fe:	bf00      	nop
 8000700:	20000180 	.word	0x20000180
 8000704:	2000017e 	.word	0x2000017e
 8000708:	2000017c 	.word	0x2000017c
 800070c:	20000184 	.word	0x20000184
 8000710:	20000188 	.word	0x20000188

08000714 <_ZN20STM32TouchController11sampleTouchERlS0_>:
{
 8000714:	b537      	push	{r0, r1, r2, r4, r5, lr}
    BSP_TS_GetState(&state);
 8000716:	4668      	mov	r0, sp
{
 8000718:	460d      	mov	r5, r1
 800071a:	4614      	mov	r4, r2
    BSP_TS_GetState(&state);
 800071c:	f7ff ff96 	bl	800064c <_Z15BSP_TS_GetStateP15TS_StateTypeDef>
    if (state.TouchDetected)
 8000720:	f8bd 0000 	ldrh.w	r0, [sp]
 8000724:	b130      	cbz	r0, 8000734 <_ZN20STM32TouchController11sampleTouchERlS0_+0x20>
        x = state.X;
 8000726:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800072a:	602b      	str	r3, [r5, #0]
        y = state.Y;
 800072c:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8000730:	6023      	str	r3, [r4, #0]
        return true;
 8000732:	2001      	movs	r0, #1
}
 8000734:	b003      	add	sp, #12
 8000736:	bd30      	pop	{r4, r5, pc}

08000738 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>:
 * Sets a pin high.
 */
void GPIO::set(GPIO_ID id)
{

}
 8000738:	4770      	bx	lr

0800073a <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>:
 800073a:	4770      	bx	lr

0800073c <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>:
 800073c:	4770      	bx	lr

0800073e <_ZN8touchgfx3HAL21setDisplayOrientationENS_18DisplayOrientationE>:
     * @note A screen transition must occur before this takes effect!
     */
    virtual void setDisplayOrientation(DisplayOrientation orientation)
    {
        requestedOrientation = orientation;
        displayOrientationChangeRequested = true;
 800073e:	2301      	movs	r3, #1
        requestedOrientation = orientation;
 8000740:	f880 1074 	strb.w	r1, [r0, #116]	; 0x74
        displayOrientationChangeRequested = true;
 8000744:	f880 3075 	strb.w	r3, [r0, #117]	; 0x75
    }
 8000748:	4770      	bx	lr

0800074a <_ZN8touchgfx3HAL9sampleKeyERh>:
     * @return True if a keypress was detected and the "key" parameter is set to a value.
     */
    virtual bool sampleKey(uint8_t& key)
    {
        return false;
    }
 800074a:	2000      	movs	r0, #0
 800074c:	4770      	bx	lr

0800074e <_ZNK8touchgfx3HAL18getFlashDataReaderEv>:
     * @return the FlashDataReader.
     */
    virtual FlashDataReader* getFlashDataReader() const
    {
        return 0;
    }
 800074e:	2000      	movs	r0, #0
 8000750:	4770      	bx	lr

08000752 <_ZN8touchgfx3HAL9taskDelayEt>:
     *
     * @see registerTaskDelayFunction
     */
    virtual void taskDelay(uint16_t ms)
    {
        if (taskDelayFunc)
 8000752:	6b83      	ldr	r3, [r0, #56]	; 0x38
 8000754:	b10b      	cbz	r3, 800075a <_ZN8touchgfx3HAL9taskDelayEt+0x8>
        {
            taskDelayFunc(ms);
 8000756:	4608      	mov	r0, r1
 8000758:	4718      	bx	r3
        }
    }
 800075a:	4770      	bx	lr

0800075c <_ZN8touchgfx3HAL17getTFTCurrentLineEv>:
     *         implemented".
     */
    virtual uint16_t getTFTCurrentLine()
    {
        return 0xFFFFu;
    }
 800075c:	f64f 70ff 	movw	r0, #65535	; 0xffff
 8000760:	4770      	bx	lr

08000762 <_ZN8touchgfx3HAL10getDMATypeEv>:
     *
     * @return a DMAType value of the concrete DMA implementation.
     */
    virtual DMAType getDMAType()
    {
        return dma.getDMAType();
 8000762:	6840      	ldr	r0, [r0, #4]
 8000764:	6803      	ldr	r3, [r0, #0]
 8000766:	699b      	ldr	r3, [r3, #24]
 8000768:	4718      	bx	r3

0800076a <_ZN11TouchGFXHALD1Ev>:
 *
 * @brief HAL implementation for TouchGFX.
 *
 * @sa HAL
 */
class TouchGFXHAL : public TouchGFXGeneratedHAL
 800076a:	4770      	bx	lr

0800076c <_ZN11TouchGFXHAL9taskEntryEv>:

    TouchGFXGeneratedHAL::initialize();
}

void TouchGFXHAL::taskEntry()
{
 800076c:	b508      	push	{r3, lr}
    enableLCDControllerInterrupt();
 800076e:	6803      	ldr	r3, [r0, #0]
{
 8000770:	4604      	mov	r4, r0
    enableLCDControllerInterrupt();
 8000772:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 8000774:	4798      	blx	r3
    enableInterrupts();
 8000776:	6823      	ldr	r3, [r4, #0]
 8000778:	4620      	mov	r0, r4
 800077a:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 800077c:	4798      	blx	r3

    OSWrappers::waitForVSync();
 800077e:	f000 f957 	bl	8000a30 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
    backPorchExited();
 8000782:	6823      	ldr	r3, [r4, #0]
 8000784:	4620      	mov	r0, r4
 8000786:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8000788:	4798      	blx	r3

    LCD_IO_WriteReg(0x29);
 800078a:	2029      	movs	r0, #41	; 0x29
 800078c:	f000 ffc6 	bl	800171c <LCD_IO_WriteReg>

    for (;;)
    {
        OSWrappers::waitForVSync();
 8000790:	f000 f94e 	bl	8000a30 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
        backPorchExited();
 8000794:	6823      	ldr	r3, [r4, #0]
 8000796:	4620      	mov	r0, r4
 8000798:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 800079a:	4798      	blx	r3
 800079c:	e7f8      	b.n	8000790 <_ZN11TouchGFXHAL9taskEntryEv+0x24>

0800079e <_ZN8touchgfx3HAL15backPorchExitedEv>:
    virtual void backPorchExited()
 800079e:	b510      	push	{r4, lr}
 80007a0:	4604      	mov	r4, r0
        swapFrameBuffers();
 80007a2:	f008 fa9d 	bl	8008ce0 <_ZN8touchgfx3HAL16swapFrameBuffersEv>
        tick();
 80007a6:	6823      	ldr	r3, [r4, #0]
 80007a8:	4620      	mov	r0, r4
 80007aa:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
    }
 80007ae:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        tick();
 80007b2:	4718      	bx	r3

080007b4 <_ZNK11TouchGFXHAL17getTFTFrameBufferEv>:
    // Calling parent implementation of getTFTFrameBuffer().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    return TouchGFXGeneratedHAL::getTFTFrameBuffer();
 80007b4:	f000 bcb6 	b.w	8001124 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>

080007b8 <_ZN11TouchGFXHAL17setTFTFrameBufferEPt>:
    // Calling parent implementation of setTFTFrameBuffer(uint16_t* address).
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::setTFTFrameBuffer(address);
 80007b8:	f000 bcba 	b.w	8001130 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>

080007bc <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE>:
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::flushFrameBuffer(const touchgfx::Rect& rect) must
    // be called to notify the touchgfx framework that flush has been performed.

    TouchGFXGeneratedHAL::flushFrameBuffer(rect);
 80007bc:	f000 bcc0 	b.w	8001140 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>

080007c0 <_ZN11TouchGFXHAL19configureInterruptsEv>:
    // Calling parent implementation of configureInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::configureInterrupts();
 80007c0:	f000 bc8c 	b.w	80010dc <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>

080007c4 <_ZN11TouchGFXHAL16enableInterruptsEv>:
    // Calling parent implementation of enableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableInterrupts();
 80007c4:	f000 bcbe 	b.w	8001144 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>

080007c8 <_ZN11TouchGFXHAL17disableInterruptsEv>:
    // Calling parent implementation of disableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::disableInterrupts();
 80007c8:	f000 bcc6 	b.w	8001158 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>

080007cc <_ZN11TouchGFXHAL28enableLCDControllerInterruptEv>:
    // Calling parent implementation of enableLCDControllerInterrupt().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableLCDControllerInterrupt();
 80007cc:	f000 bc90 	b.w	80010f0 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>

080007d0 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_>:
    virtual void setFrameBufferStartAddresses(void* frameBuffer, void* doubleBuffer, void* animationStorage)
 80007d0:	b508      	push	{r3, lr}
        assert(frameBuffer != 0 && "A framebuffer address must be set");
 80007d2:	b931      	cbnz	r1, 80007e2 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x12>
 80007d4:	4b0a      	ldr	r3, [pc, #40]	; (8000800 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x30>)
 80007d6:	4a0b      	ldr	r2, [pc, #44]	; (8000804 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x34>)
 80007d8:	480b      	ldr	r0, [pc, #44]	; (8000808 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x38>)
 80007da:	f44f 7127 	mov.w	r1, #668	; 0x29c
 80007de:	f017 fbbd 	bl	8017f5c <__assert_func>
        frameBuffer1 = reinterpret_cast<uint16_t*>(doubleBuffer);
 80007e2:	e9c0 120f 	strd	r1, r2, [r0, #60]	; 0x3c
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
 80007e6:	3200      	adds	r2, #0
 80007e8:	4908      	ldr	r1, [pc, #32]	; (800080c <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x3c>)
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
 80007ea:	6443      	str	r3, [r0, #68]	; 0x44
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
 80007ec:	bf18      	it	ne
 80007ee:	2201      	movne	r2, #1
 80007f0:	700a      	strb	r2, [r1, #0]
        USE_ANIMATION_STORAGE = animationStorage != 0;
 80007f2:	3300      	adds	r3, #0
 80007f4:	4a06      	ldr	r2, [pc, #24]	; (8000810 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x40>)
 80007f6:	bf18      	it	ne
 80007f8:	2301      	movne	r3, #1
 80007fa:	7013      	strb	r3, [r2, #0]
    }
 80007fc:	bd08      	pop	{r3, pc}
 80007fe:	bf00      	nop
 8000800:	08018ffd 	.word	0x08018ffd
 8000804:	08019188 	.word	0x08019188
 8000808:	08019035 	.word	0x08019035
 800080c:	20012176 	.word	0x20012176
 8000810:	20012177 	.word	0x20012177

08000814 <_ZN8touchgfx3HAL26setFrameBufferStartAddressEPvtbb>:
    TOUCHGFX_DEPRECATED(
 8000814:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000818:	4699      	mov	r9, r3
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 800081a:	4b1c      	ldr	r3, [pc, #112]	; (800088c <_ZN8touchgfx3HAL26setFrameBufferStartAddressEPvtbb+0x78>)
    TOUCHGFX_DEPRECATED(
 800081c:	f89d 5020 	ldrb.w	r5, [sp, #32]
 8000820:	4688      	mov	r8, r1
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 8000822:	6819      	ldr	r1, [r3, #0]
 8000824:	f891 3076 	ldrb.w	r3, [r1, #118]	; 0x76
    TOUCHGFX_DEPRECATED(
 8000828:	4607      	mov	r7, r0
 800082a:	4614      	mov	r4, r2
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 800082c:	b10b      	cbz	r3, 8000832 <_ZN8touchgfx3HAL26setFrameBufferStartAddressEPvtbb+0x1e>
 800082e:	6cc8      	ldr	r0, [r1, #76]	; 0x4c
 8000830:	b900      	cbnz	r0, 8000834 <_ZN8touchgfx3HAL26setFrameBufferStartAddressEPvtbb+0x20>
            return instance->lcdRef;
 8000832:	6888      	ldr	r0, [r1, #8]
        uint16_t stride = lcd().framebufferStride();
 8000834:	6803      	ldr	r3, [r0, #0]
 8000836:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8000838:	4798      	blx	r3
        uint32_t bufferSizeInBytes = stride * FRAME_BUFFER_HEIGHT;
 800083a:	4b15      	ldr	r3, [pc, #84]	; (8000890 <_ZN8touchgfx3HAL26setFrameBufferStartAddressEPvtbb+0x7c>)
 800083c:	881e      	ldrh	r6, [r3, #0]
 800083e:	4370      	muls	r0, r6
        if (useDoubleBuffering)
 8000840:	f1b9 0f00 	cmp.w	r9, #0
 8000844:	d016      	beq.n	8000874 <_ZN8touchgfx3HAL26setFrameBufferStartAddressEPvtbb+0x60>
            ptr += bufferSizeInBytes; // Move past used buffer (framebuffer)
 8000846:	eb08 0100 	add.w	r1, r8, r0
            double_buf = (void*)ptr;
 800084a:	460a      	mov	r2, r1
        if (useAnimationStorage)
 800084c:	b1ad      	cbz	r5, 800087a <_ZN8touchgfx3HAL26setFrameBufferStartAddressEPvtbb+0x66>
            ptr += bufferSizeInBytes; // Move past used buffer (framebuffer and possibly double buffer)
 800084e:	180b      	adds	r3, r1, r0
 8000850:	3c01      	subs	r4, #1
 8000852:	b2a4      	uxth	r4, r4
 8000854:	2c1f      	cmp	r4, #31
 8000856:	d812      	bhi.n	800087e <_ZN8touchgfx3HAL26setFrameBufferStartAddressEPvtbb+0x6a>
 8000858:	2101      	movs	r1, #1
 800085a:	fa01 f404 	lsl.w	r4, r1, r4
 800085e:	490d      	ldr	r1, [pc, #52]	; (8000894 <_ZN8touchgfx3HAL26setFrameBufferStartAddressEPvtbb+0x80>)
 8000860:	4021      	ands	r1, r4
 8000862:	b161      	cbz	r1, 800087e <_ZN8touchgfx3HAL26setFrameBufferStartAddressEPvtbb+0x6a>
            setFrameBufferStartAddresses(adr, double_buf, anim_store);
 8000864:	6839      	ldr	r1, [r7, #0]
 8000866:	6f4c      	ldr	r4, [r1, #116]	; 0x74
 8000868:	4638      	mov	r0, r7
 800086a:	4641      	mov	r1, r8
 800086c:	46a4      	mov	ip, r4
    }
 800086e:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
            setFrameBufferStartAddresses(adr, double_buf, anim_store);
 8000872:	4760      	bx	ip
        uint8_t* ptr = (uint8_t*)adr;
 8000874:	4641      	mov	r1, r8
        void* double_buf = 0;
 8000876:	464a      	mov	r2, r9
 8000878:	e7e8      	b.n	800084c <_ZN8touchgfx3HAL26setFrameBufferStartAddressEPvtbb+0x38>
        void* anim_store = 0;
 800087a:	462b      	mov	r3, r5
 800087c:	e7e8      	b.n	8000850 <_ZN8touchgfx3HAL26setFrameBufferStartAddressEPvtbb+0x3c>
            assert(0 && "Unsupported bit depth");
 800087e:	4b06      	ldr	r3, [pc, #24]	; (8000898 <_ZN8touchgfx3HAL26setFrameBufferStartAddressEPvtbb+0x84>)
 8000880:	4a06      	ldr	r2, [pc, #24]	; (800089c <_ZN8touchgfx3HAL26setFrameBufferStartAddressEPvtbb+0x88>)
 8000882:	4807      	ldr	r0, [pc, #28]	; (80008a0 <_ZN8touchgfx3HAL26setFrameBufferStartAddressEPvtbb+0x8c>)
 8000884:	f240 2189 	movw	r1, #649	; 0x289
 8000888:	f017 fb68 	bl	8017f5c <__assert_func>
 800088c:	20012178 	.word	0x20012178
 8000890:	20012174 	.word	0x20012174
 8000894:	8080808b 	.word	0x8080808b
 8000898:	08018fe0 	.word	0x08018fe0
 800089c:	08019134 	.word	0x08019134
 80008a0:	08019035 	.word	0x08019035

080008a4 <_ZN11TouchGFXHAL16flushFrameBufferEv>:
     * Rect version.
     * @see HAL::flushFrameBuffer
     */
    virtual void flushFrameBuffer()
    {
        HAL::flushFrameBuffer();
 80008a4:	f007 bcad 	b.w	8008202 <_ZN8touchgfx3HAL16flushFrameBufferEv>

080008a8 <_ZN11TouchGFXHALD0Ev>:
 80008a8:	b510      	push	{r4, lr}
 80008aa:	2178      	movs	r1, #120	; 0x78
 80008ac:	4604      	mov	r4, r0
 80008ae:	f017 fb29 	bl	8017f04 <_ZdlPvj>
 80008b2:	4620      	mov	r0, r4
 80008b4:	bd10      	pop	{r4, pc}

080008b6 <_ZN8touchgfx3HAL11getBlitCapsEv>:
        if (useDMAAcceleration)
 80008b6:	f890 3077 	ldrb.w	r3, [r0, #119]	; 0x77
 80008ba:	b11b      	cbz	r3, 80008c4 <_ZN8touchgfx3HAL11getBlitCapsEv+0xe>
            return dma.getBlitCaps();
 80008bc:	6840      	ldr	r0, [r0, #4]
 80008be:	6803      	ldr	r3, [r0, #0]
 80008c0:	681b      	ldr	r3, [r3, #0]
 80008c2:	4718      	bx	r3
    }
 80008c4:	4618      	mov	r0, r3
 80008c6:	4770      	bx	lr

080008c8 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv>:

    /** Called by the touch driver to indicate that no touch is currently detected. */
    virtual void noTouch();

    /** Perform the actual display orientation change. */
    virtual void performDisplayOrientationChange()
 80008c8:	b530      	push	{r4, r5, lr}
    {
        if (requestedOrientation != nativeDisplayOrientation)
 80008ca:	f890 1034 	ldrb.w	r1, [r0, #52]	; 0x34
 80008ce:	f890 4074 	ldrb.w	r4, [r0, #116]	; 0x74
 80008d2:	4b10      	ldr	r3, [pc, #64]	; (8000914 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x4c>)
 80008d4:	428c      	cmp	r4, r1
 80008d6:	781a      	ldrb	r2, [r3, #0]
 80008d8:	d00d      	beq.n	80008f6 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x2e>
        {
            if (DISPLAY_ROTATION == rotate0)
 80008da:	b95a      	cbnz	r2, 80008f4 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x2c>
            {
                FRAME_BUFFER_WIDTH = DISPLAY_WIDTH;
 80008dc:	4a0e      	ldr	r2, [pc, #56]	; (8000918 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x50>)
 80008de:	490f      	ldr	r1, [pc, #60]	; (800091c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x54>)
                FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT;
 80008e0:	480f      	ldr	r0, [pc, #60]	; (8000920 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x58>)
                FRAME_BUFFER_WIDTH = DISPLAY_WIDTH;
 80008e2:	8814      	ldrh	r4, [r2, #0]
                FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT;
 80008e4:	4d0f      	ldr	r5, [pc, #60]	; (8000924 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x5c>)
                FRAME_BUFFER_WIDTH = DISPLAY_WIDTH;
 80008e6:	800c      	strh	r4, [r1, #0]
                FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT;
 80008e8:	8801      	ldrh	r1, [r0, #0]
                DISPLAY_HEIGHT = FRAME_BUFFER_WIDTH;
                DISPLAY_WIDTH = FRAME_BUFFER_HEIGHT;
 80008ea:	8011      	strh	r1, [r2, #0]
                FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT;
 80008ec:	8029      	strh	r1, [r5, #0]
                DISPLAY_HEIGHT = FRAME_BUFFER_WIDTH;
 80008ee:	8004      	strh	r4, [r0, #0]
                DISPLAY_ROTATION = rotate90;
 80008f0:	2201      	movs	r2, #1
        {
            FRAME_BUFFER_WIDTH = DISPLAY_HEIGHT;
            FRAME_BUFFER_HEIGHT = DISPLAY_WIDTH;
            DISPLAY_HEIGHT = FRAME_BUFFER_HEIGHT;
            DISPLAY_WIDTH = FRAME_BUFFER_WIDTH;
            DISPLAY_ROTATION = rotate0;
 80008f2:	701a      	strb	r2, [r3, #0]
        }
    }
 80008f4:	bd30      	pop	{r4, r5, pc}
        else if (DISPLAY_ROTATION != rotate0)
 80008f6:	2a00      	cmp	r2, #0
 80008f8:	d0fc      	beq.n	80008f4 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x2c>
            FRAME_BUFFER_WIDTH = DISPLAY_HEIGHT;
 80008fa:	4809      	ldr	r0, [pc, #36]	; (8000920 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x58>)
 80008fc:	4a07      	ldr	r2, [pc, #28]	; (800091c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x54>)
 80008fe:	8801      	ldrh	r1, [r0, #0]
 8000900:	8011      	strh	r1, [r2, #0]
            FRAME_BUFFER_HEIGHT = DISPLAY_WIDTH;
 8000902:	4a05      	ldr	r2, [pc, #20]	; (8000918 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x50>)
 8000904:	4d07      	ldr	r5, [pc, #28]	; (8000924 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x5c>)
 8000906:	8814      	ldrh	r4, [r2, #0]
 8000908:	802c      	strh	r4, [r5, #0]
            DISPLAY_WIDTH = FRAME_BUFFER_WIDTH;
 800090a:	8011      	strh	r1, [r2, #0]
            DISPLAY_HEIGHT = FRAME_BUFFER_HEIGHT;
 800090c:	8004      	strh	r4, [r0, #0]
            DISPLAY_ROTATION = rotate0;
 800090e:	2200      	movs	r2, #0
 8000910:	e7ef      	b.n	80008f2 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x2a>
 8000912:	bf00      	nop
 8000914:	20012170 	.word	0x20012170
 8000918:	2001216c 	.word	0x2001216c
 800091c:	20012172 	.word	0x20012172
 8000920:	2001216e 	.word	0x2001216e
 8000924:	20012174 	.word	0x20012174

08000928 <_ZN11TouchGFXHAL10initializeEv>:
    TouchGFXGeneratedHAL::initialize();
 8000928:	f000 bc2a 	b.w	8001180 <_ZN20TouchGFXGeneratedHAL10initializeEv>

0800092c <_ZN8touchgfx10OSWrappers10initializeEv>:
 * Initialize frame buffer semaphore and queue/mutex for VSYNC signal.
 */
void OSWrappers::initialize()
{
    // Create a queue of length 1
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 800092c:	2101      	movs	r1, #1
{
 800092e:	b508      	push	{r3, lr}
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 8000930:	2200      	movs	r2, #0
 8000932:	4608      	mov	r0, r1
 8000934:	f004 fe46 	bl	80055c4 <osSemaphoreNew>
 8000938:	4b06      	ldr	r3, [pc, #24]	; (8000954 <_ZN8touchgfx10OSWrappers10initializeEv+0x28>)
    osSemaphoreAcquire(frame_buffer_sem, osWaitForever); // take the lock
 800093a:	f04f 31ff 	mov.w	r1, #4294967295
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 800093e:	6018      	str	r0, [r3, #0]
    osSemaphoreAcquire(frame_buffer_sem, osWaitForever); // take the lock
 8000940:	f004 fe96 	bl	8005670 <osSemaphoreAcquire>

    // Create a queue of length 1
    vsync_queue = osMessageQueueNew(1, 4, NULL);
 8000944:	2200      	movs	r2, #0
 8000946:	2104      	movs	r1, #4
 8000948:	2001      	movs	r0, #1
 800094a:	f004 ff05 	bl	8005758 <osMessageQueueNew>
 800094e:	4b02      	ldr	r3, [pc, #8]	; (8000958 <_ZN8touchgfx10OSWrappers10initializeEv+0x2c>)
 8000950:	6018      	str	r0, [r3, #0]
}
 8000952:	bd08      	pop	{r3, pc}
 8000954:	20000190 	.word	0x20000190
 8000958:	2000018c 	.word	0x2000018c

0800095c <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>:

/*
 * Take the frame buffer semaphore. Blocks until semaphore is available.
 */
void OSWrappers::takeFrameBufferSemaphore()
{
 800095c:	b508      	push	{r3, lr}
    assert(frame_buffer_sem);
 800095e:	4b07      	ldr	r3, [pc, #28]	; (800097c <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0x20>)
 8000960:	6818      	ldr	r0, [r3, #0]
 8000962:	b928      	cbnz	r0, 8000970 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0x14>
 8000964:	4b06      	ldr	r3, [pc, #24]	; (8000980 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0x24>)
 8000966:	4a07      	ldr	r2, [pc, #28]	; (8000984 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0x28>)
 8000968:	4807      	ldr	r0, [pc, #28]	; (8000988 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0x2c>)
 800096a:	2131      	movs	r1, #49	; 0x31
 800096c:	f017 faf6 	bl	8017f5c <__assert_func>
    osSemaphoreAcquire(frame_buffer_sem, osWaitForever);
 8000970:	f04f 31ff 	mov.w	r1, #4294967295
}
 8000974:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    osSemaphoreAcquire(frame_buffer_sem, osWaitForever);
 8000978:	f004 be7a 	b.w	8005670 <osSemaphoreAcquire>
 800097c:	20000190 	.word	0x20000190
 8000980:	080191d6 	.word	0x080191d6
 8000984:	08019272 	.word	0x08019272
 8000988:	080191e7 	.word	0x080191e7

0800098c <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>:

/*
 * Release the frame buffer semaphore.
 */
void OSWrappers::giveFrameBufferSemaphore()
{
 800098c:	b508      	push	{r3, lr}
    assert(frame_buffer_sem);
 800098e:	4b06      	ldr	r3, [pc, #24]	; (80009a8 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv+0x1c>)
 8000990:	6818      	ldr	r0, [r3, #0]
 8000992:	b928      	cbnz	r0, 80009a0 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv+0x14>
 8000994:	4b05      	ldr	r3, [pc, #20]	; (80009ac <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv+0x20>)
 8000996:	4a06      	ldr	r2, [pc, #24]	; (80009b0 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv+0x24>)
 8000998:	4806      	ldr	r0, [pc, #24]	; (80009b4 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv+0x28>)
 800099a:	213a      	movs	r1, #58	; 0x3a
 800099c:	f017 fade 	bl	8017f5c <__assert_func>
    osSemaphoreRelease(frame_buffer_sem);
}
 80009a0:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    osSemaphoreRelease(frame_buffer_sem);
 80009a4:	f004 bea0 	b.w	80056e8 <osSemaphoreRelease>
 80009a8:	20000190 	.word	0x20000190
 80009ac:	080191d6 	.word	0x080191d6
 80009b0:	08019235 	.word	0x08019235
 80009b4:	080191e7 	.word	0x080191e7

080009b8 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>:
 *
 * Note must return immediately! This function does not care who has the taken the semaphore,
 * it only serves to make sure that the semaphore is taken by someone.
 */
void OSWrappers::tryTakeFrameBufferSemaphore()
{
 80009b8:	b508      	push	{r3, lr}
    assert(frame_buffer_sem);
 80009ba:	4b07      	ldr	r3, [pc, #28]	; (80009d8 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv+0x20>)
 80009bc:	6818      	ldr	r0, [r3, #0]
 80009be:	b928      	cbnz	r0, 80009cc <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv+0x14>
 80009c0:	4b06      	ldr	r3, [pc, #24]	; (80009dc <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv+0x24>)
 80009c2:	4a07      	ldr	r2, [pc, #28]	; (80009e0 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv+0x28>)
 80009c4:	4807      	ldr	r0, [pc, #28]	; (80009e4 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv+0x2c>)
 80009c6:	2147      	movs	r1, #71	; 0x47
 80009c8:	f017 fac8 	bl	8017f5c <__assert_func>
    osSemaphoreAcquire(frame_buffer_sem, 0);
 80009cc:	2100      	movs	r1, #0
}
 80009ce:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    osSemaphoreAcquire(frame_buffer_sem, 0);
 80009d2:	f004 be4d 	b.w	8005670 <osSemaphoreAcquire>
 80009d6:	bf00      	nop
 80009d8:	20000190 	.word	0x20000190
 80009dc:	080191d6 	.word	0x080191d6
 80009e0:	080192af 	.word	0x080192af
 80009e4:	080191e7 	.word	0x080191e7

080009e8 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>:
 *
 * Release the frame buffer semaphore in a way that is safe in interrupt context.
 * Called from ISR.
 */
void OSWrappers::giveFrameBufferSemaphoreFromISR()
{
 80009e8:	b508      	push	{r3, lr}
    assert(frame_buffer_sem);
 80009ea:	4b06      	ldr	r3, [pc, #24]	; (8000a04 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv+0x1c>)
 80009ec:	6818      	ldr	r0, [r3, #0]
 80009ee:	b928      	cbnz	r0, 80009fc <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv+0x14>
 80009f0:	4b05      	ldr	r3, [pc, #20]	; (8000a08 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv+0x20>)
 80009f2:	4a06      	ldr	r2, [pc, #24]	; (8000a0c <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv+0x24>)
 80009f4:	4806      	ldr	r0, [pc, #24]	; (8000a10 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv+0x28>)
 80009f6:	2154      	movs	r1, #84	; 0x54
 80009f8:	f017 fab0 	bl	8017f5c <__assert_func>
    osSemaphoreRelease(frame_buffer_sem);
}
 80009fc:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    osSemaphoreRelease(frame_buffer_sem);
 8000a00:	f004 be72 	b.w	80056e8 <osSemaphoreRelease>
 8000a04:	20000190 	.word	0x20000190
 8000a08:	080191d6 	.word	0x080191d6
 8000a0c:	080192ef 	.word	0x080192ef
 8000a10:	080191e7 	.word	0x080191e7

08000a14 <_ZN8touchgfx10OSWrappers11signalVSyncEv>:
 * Note This function is called from an ISR, and should (depending on OS) trigger a
 * scheduling.
 */
void OSWrappers::signalVSync()
{
    if (vsync_queue)
 8000a14:	4b04      	ldr	r3, [pc, #16]	; (8000a28 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x14>)
 8000a16:	6818      	ldr	r0, [r3, #0]
 8000a18:	b120      	cbz	r0, 8000a24 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x10>
    {
        osMessageQueuePut(vsync_queue, &dummy, 0, 0);
 8000a1a:	2300      	movs	r3, #0
 8000a1c:	461a      	mov	r2, r3
 8000a1e:	4903      	ldr	r1, [pc, #12]	; (8000a2c <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x18>)
 8000a20:	f004 bee0 	b.w	80057e4 <osMessageQueuePut>
    }
}
 8000a24:	4770      	bx	lr
 8000a26:	bf00      	nop
 8000a28:	2000018c 	.word	0x2000018c
 8000a2c:	20000004 	.word	0x20000004

08000a30 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>:
 *
 * Note This function must first clear the mutex/queue and then wait for the next one to
 * occur.
 */
void OSWrappers::waitForVSync()
{
 8000a30:	b513      	push	{r0, r1, r4, lr}
    if (vsync_queue)
 8000a32:	4c08      	ldr	r4, [pc, #32]	; (8000a54 <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x24>)
 8000a34:	6820      	ldr	r0, [r4, #0]
 8000a36:	b158      	cbz	r0, 8000a50 <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x20>
    {
        uint32_t dummyGet;
        // First make sure the queue is empty, by trying to remove an element with 0 timeout.
        osMessageQueueGet(vsync_queue, &dummyGet, 0, 0);
 8000a38:	2300      	movs	r3, #0
 8000a3a:	461a      	mov	r2, r3
 8000a3c:	a901      	add	r1, sp, #4
 8000a3e:	f004 ff13 	bl	8005868 <osMessageQueueGet>

        // Then, wait for next VSYNC to occur.
        osMessageQueueGet(vsync_queue, &dummyGet, 0, osWaitForever);
 8000a42:	f04f 33ff 	mov.w	r3, #4294967295
 8000a46:	2200      	movs	r2, #0
 8000a48:	a901      	add	r1, sp, #4
 8000a4a:	6820      	ldr	r0, [r4, #0]
 8000a4c:	f004 ff0c 	bl	8005868 <osMessageQueueGet>
    }
}
 8000a50:	b002      	add	sp, #8
 8000a52:	bd10      	pop	{r4, pc}
 8000a54:	2000018c 	.word	0x2000018c

08000a58 <_ZN8touchgfx13DMA_Interface5flushEv>:
    virtual void addToQueue(const BlitOp& op);

    /** This function blocks until all DMA transfers in the queue have been completed. */
    virtual void flush()
    {
        waitForFrameBufferSemaphore();
 8000a58:	6803      	ldr	r3, [r0, #0]
 8000a5a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8000a5c:	4718      	bx	r3

08000a5e <_ZN8touchgfx13DMA_Interface10getDMATypeEv>:
     * @return a DMAType value of the concrete DMA_Interface implementation.
     */
    virtual DMAType getDMAType(void)
    {
        return DMA_TYPE_GENERIC;
    }
 8000a5e:	2000      	movs	r0, #0
 8000a60:	4770      	bx	lr

08000a62 <_ZN10STM32F4DMA18signalDMAInterruptEv>:
     *
     *        Raises a DMA interrupt signal.
     */
    virtual void signalDMAInterrupt()
    {
        executeCompleted();
 8000a62:	6803      	ldr	r3, [r0, #0]
 8000a64:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8000a66:	4718      	bx	r3

08000a68 <_ZN10STM32F4DMA11getBlitCapsEv>:
                                       | BLIT_OP_COPY_WITH_ALPHA
                                       | BLIT_OP_COPY_ARGB8888
                                       | BLIT_OP_COPY_ARGB8888_WITH_ALPHA
                                       | BLIT_OP_COPY_A4
                                       | BLIT_OP_COPY_A8);
}
 8000a68:	f240 10ef 	movw	r0, #495	; 0x1ef
 8000a6c:	4770      	bx	lr
	...

08000a70 <_ZN10STM32F4DMA10initializeEv>:
{
 8000a70:	b510      	push	{r4, lr}
    hdma2d.Instance = DMA2D;
 8000a72:	4c07      	ldr	r4, [pc, #28]	; (8000a90 <_ZN10STM32F4DMA10initializeEv+0x20>)
 8000a74:	4b07      	ldr	r3, [pc, #28]	; (8000a94 <_ZN10STM32F4DMA10initializeEv+0x24>)
 8000a76:	6023      	str	r3, [r4, #0]
    HAL_DMA2D_Init(&hdma2d);
 8000a78:	4620      	mov	r0, r4
 8000a7a:	f002 fb79 	bl	8003170 <HAL_DMA2D_Init>
    hdma2d.XferCpltCallback = DMA2D_XferCpltCallback;
 8000a7e:	4b06      	ldr	r3, [pc, #24]	; (8000a98 <_ZN10STM32F4DMA10initializeEv+0x28>)
 8000a80:	6123      	str	r3, [r4, #16]
    hdma2d.XferErrorCallback = DMA2D_XferErrorCallback;
 8000a82:	4b06      	ldr	r3, [pc, #24]	; (8000a9c <_ZN10STM32F4DMA10initializeEv+0x2c>)
 8000a84:	6163      	str	r3, [r4, #20]
 */
__STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8000a86:	4b06      	ldr	r3, [pc, #24]	; (8000aa0 <_ZN10STM32F4DMA10initializeEv+0x30>)
 8000a88:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 8000a8c:	609a      	str	r2, [r3, #8]
}
 8000a8e:	bd10      	pop	{r4, pc}
 8000a90:	20012594 	.word	0x20012594
 8000a94:	4002b000 	.word	0x4002b000
 8000a98:	08000ac1 	.word	0x08000ac1
 8000a9c:	08000aa5 	.word	0x08000aa5
 8000aa0:	e000e100 	.word	0xe000e100

08000aa4 <DMA2D_XferErrorCallback>:
    {
 8000aa4:	b508      	push	{r3, lr}
        assert(0);
 8000aa6:	4a03      	ldr	r2, [pc, #12]	; (8000ab4 <DMA2D_XferErrorCallback+0x10>)
 8000aa8:	4b03      	ldr	r3, [pc, #12]	; (8000ab8 <DMA2D_XferErrorCallback+0x14>)
 8000aaa:	4804      	ldr	r0, [pc, #16]	; (8000abc <DMA2D_XferErrorCallback+0x18>)
 8000aac:	2136      	movs	r1, #54	; 0x36
 8000aae:	f017 fa55 	bl	8017f5c <__assert_func>
 8000ab2:	bf00      	nop
 8000ab4:	080193d0 	.word	0x080193d0
 8000ab8:	080199a3 	.word	0x080199a3
 8000abc:	08019333 	.word	0x08019333

08000ac0 <DMA2D_XferCpltCallback>:
        touchgfx::HAL::getInstance()->signalDMAInterrupt();
 8000ac0:	4b02      	ldr	r3, [pc, #8]	; (8000acc <DMA2D_XferCpltCallback+0xc>)
 8000ac2:	681b      	ldr	r3, [r3, #0]
 8000ac4:	6858      	ldr	r0, [r3, #4]
        dma.signalDMAInterrupt();
 8000ac6:	6803      	ldr	r3, [r0, #0]
 8000ac8:	695b      	ldr	r3, [r3, #20]
 8000aca:	4718      	bx	r3
 8000acc:	20012178 	.word	0x20012178

08000ad0 <_ZN10STM32F4DMAD1Ev>:
STM32F4DMA::~STM32F4DMA()
 8000ad0:	4b08      	ldr	r3, [pc, #32]	; (8000af4 <_ZN10STM32F4DMAD1Ev+0x24>)
 8000ad2:	b510      	push	{r4, lr}
 8000ad4:	6003      	str	r3, [r0, #0]
 8000ad6:	4604      	mov	r4, r0
    HAL_DMA2D_DeInit(&hdma2d);
 8000ad8:	4807      	ldr	r0, [pc, #28]	; (8000af8 <_ZN10STM32F4DMAD1Ev+0x28>)
 8000ada:	f002 fc11 	bl	8003300 <HAL_DMA2D_DeInit>
 */
__STATIC_INLINE void __NVIC_DisableIRQ(IRQn_Type IRQn)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8000ade:	4b07      	ldr	r3, [pc, #28]	; (8000afc <_ZN10STM32F4DMAD1Ev+0x2c>)
 8000ae0:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 8000ae4:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  \details Acts as a special kind of Data Memory Barrier.
           It completes when all explicit memory accesses before this instruction complete.
 */
__STATIC_FORCEINLINE void __DSB(void)
{
  __ASM volatile ("dsb 0xF":::"memory");
 8000ae8:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 8000aec:	f3bf 8f6f 	isb	sy
}
 8000af0:	4620      	mov	r0, r4
 8000af2:	bd10      	pop	{r4, pc}
 8000af4:	08019388 	.word	0x08019388
 8000af8:	20012594 	.word	0x20012594
 8000afc:	e000e100 	.word	0xe000e100

08000b00 <_ZN10STM32F4DMAD0Ev>:
STM32F4DMA::~STM32F4DMA()
 8000b00:	b510      	push	{r4, lr}
 8000b02:	4604      	mov	r4, r0
}
 8000b04:	f7ff ffe4 	bl	8000ad0 <_ZN10STM32F4DMAD1Ev>
 8000b08:	4620      	mov	r0, r4
 8000b0a:	f44f 6142 	mov.w	r1, #3104	; 0xc20
 8000b0e:	f017 f9f9 	bl	8017f04 <_ZdlPvj>
 8000b12:	4620      	mov	r0, r4
 8000b14:	bd10      	pop	{r4, pc}
	...

08000b18 <_ZN8touchgfx3HAL3lcdEv>:
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 8000b18:	4b04      	ldr	r3, [pc, #16]	; (8000b2c <_ZN8touchgfx3HAL3lcdEv+0x14>)
 8000b1a:	681b      	ldr	r3, [r3, #0]
 8000b1c:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 8000b20:	b10a      	cbz	r2, 8000b26 <_ZN8touchgfx3HAL3lcdEv+0xe>
 8000b22:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8000b24:	b900      	cbnz	r0, 8000b28 <_ZN8touchgfx3HAL3lcdEv+0x10>
            return instance->lcdRef;
 8000b26:	6898      	ldr	r0, [r3, #8]
    }
 8000b28:	4770      	bx	lr
 8000b2a:	bf00      	nop
 8000b2c:	20012178 	.word	0x20012178

08000b30 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE>:

void STM32F4DMA::setupDataCopy(const BlitOp& blitOp)
{
 8000b30:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
    uint32_t dma2dTransferMode = DMA2D_M2M_BLEND;
    uint32_t dma2dColorMode = 0;

    bool blendingImage = (blitOp.operation == BLIT_OP_COPY_ARGB8888
 8000b34:	680d      	ldr	r5, [r1, #0]
                          || blitOp.operation == BLIT_OP_COPY_ARGB8888_WITH_ALPHA
                          || blitOp.operation == BLIT_OP_COPY_WITH_ALPHA);
 8000b36:	2d20      	cmp	r5, #32
{
 8000b38:	460c      	mov	r4, r1
                          || blitOp.operation == BLIT_OP_COPY_WITH_ALPHA);
 8000b3a:	f000 8097 	beq.w	8000c6c <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x13c>
                          || blitOp.operation == BLIT_OP_COPY_ARGB8888_WITH_ALPHA
 8000b3e:	2d40      	cmp	r5, #64	; 0x40
 8000b40:	f000 8094 	beq.w	8000c6c <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x13c>
                          || blitOp.operation == BLIT_OP_COPY_WITH_ALPHA);
 8000b44:	1f2a      	subs	r2, r5, #4
 8000b46:	4256      	negs	r6, r2
 8000b48:	4156      	adcs	r6, r2

    bool blendingText = (blitOp.operation == BLIT_OP_COPY_A4
                         || blitOp.operation == BLIT_OP_COPY_A8);
 8000b4a:	2d80      	cmp	r5, #128	; 0x80
 8000b4c:	f000 8090 	beq.w	8000c70 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x140>
 8000b50:	f5a5 7380 	sub.w	r3, r5, #256	; 0x100
 8000b54:	425d      	negs	r5, r3
 8000b56:	415d      	adcs	r5, r3

    uint8_t bitDepth = HAL::lcd().bitDepth();
 8000b58:	f7ff ffde 	bl	8000b18 <_ZN8touchgfx3HAL3lcdEv>
 8000b5c:	6803      	ldr	r3, [r0, #0]
 8000b5e:	69db      	ldr	r3, [r3, #28]
 8000b60:	4798      	blx	r3

    switch (blitOp.operation)
 8000b62:	6823      	ldr	r3, [r4, #0]
 8000b64:	2b40      	cmp	r3, #64	; 0x40
    uint8_t bitDepth = HAL::lcd().bitDepth();
 8000b66:	4686      	mov	lr, r0
    switch (blitOp.operation)
 8000b68:	f000 8099 	beq.w	8000c9e <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x16e>
 8000b6c:	f200 8082 	bhi.w	8000c74 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x144>
 8000b70:	2b04      	cmp	r3, #4
 8000b72:	f000 808d 	beq.w	8000c90 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x160>
 8000b76:	2b20      	cmp	r3, #32
 8000b78:	f000 8091 	beq.w	8000c9e <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x16e>
    case BLIT_OP_COPY_ARGB8888_WITH_ALPHA:
        dma2dColorMode = CM_ARGB8888;
        break;
    default:
        dma2dTransferMode = DMA2D_M2M;
        dma2dColorMode = (bitDepth == 16) ? CM_RGB565 : CM_RGB888;
 8000b7c:	f1be 0f10 	cmp.w	lr, #16
 8000b80:	bf14      	ite	ne
 8000b82:	f04f 0c01 	movne.w	ip, #1
 8000b86:	f04f 0c02 	moveq.w	ip, #2
 8000b8a:	2200      	movs	r2, #0
        break;
    }

    /* HAL_DMA2D_ConfigLayer() depends on hdma2d.Init */
    hdma2d.Init.Mode = dma2dTransferMode;
 8000b8c:	4b4b      	ldr	r3, [pc, #300]	; (8000cbc <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x18c>)
    hdma2d.Init.ColorMode = (bitDepth == 16) ? DMA2D_RGB565 : DMA2D_RGB888;
    hdma2d.Init.OutputOffset = blitOp.dstLoopStride - blitOp.nSteps;
 8000b8e:	f8b4 8010 	ldrh.w	r8, [r4, #16]
    MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, mode);
 8000b92:	6819      	ldr	r1, [r3, #0]
    hdma2d.Init.OutputOffset = blitOp.dstLoopStride - blitOp.nSteps;
 8000b94:	8ae7      	ldrh	r7, [r4, #22]
    MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, mode);
 8000b96:	f8d1 9000 	ldr.w	r9, [r1]
    hdma2d.Init.Mode = dma2dTransferMode;
 8000b9a:	605a      	str	r2, [r3, #4]
    hdma2d.Init.ColorMode = (bitDepth == 16) ? DMA2D_RGB565 : DMA2D_RGB888;
 8000b9c:	f1be 0f10 	cmp.w	lr, #16
    MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, mode);
 8000ba0:	f429 3940 	bic.w	r9, r9, #196608	; 0x30000
    hdma2d.Init.ColorMode = (bitDepth == 16) ? DMA2D_RGB565 : DMA2D_RGB888;
 8000ba4:	bf14      	ite	ne
 8000ba6:	2001      	movne	r0, #1
 8000ba8:	2002      	moveq	r0, #2
    hdma2d.Init.OutputOffset = blitOp.dstLoopStride - blitOp.nSteps;
 8000baa:	eba7 0708 	sub.w	r7, r7, r8
    MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, mode);
 8000bae:	ea49 0202 	orr.w	r2, r9, r2
    hdma2d.Init.ColorMode = (bitDepth == 16) ? DMA2D_RGB565 : DMA2D_RGB888;
 8000bb2:	6098      	str	r0, [r3, #8]
    hdma2d.Init.OutputOffset = blitOp.dstLoopStride - blitOp.nSteps;
 8000bb4:	60df      	str	r7, [r3, #12]
    MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, mode);
 8000bb6:	600a      	str	r2, [r1, #0]
    MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM, color);
 8000bb8:	6b4a      	ldr	r2, [r1, #52]	; 0x34

    HAL_DMA2D_SetMode(&hdma2d, dma2dTransferMode,
                      (bitDepth == 16) ? DMA2D_RGB565 : DMA2D_RGB888,
                      blitOp.dstLoopStride - blitOp.nSteps);

    hdma2d.LayerCfg[1].InputColorMode = dma2dColorMode;
 8000bba:	f8c3 c02c 	str.w	ip, [r3, #44]	; 0x2c
    MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM, color);
 8000bbe:	f022 0207 	bic.w	r2, r2, #7
 8000bc2:	4302      	orrs	r2, r0
 8000bc4:	634a      	str	r2, [r1, #52]	; 0x34
    MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, offset);
 8000bc6:	6c0a      	ldr	r2, [r1, #64]	; 0x40
 8000bc8:	f422 527f 	bic.w	r2, r2, #16320	; 0x3fc0
 8000bcc:	f022 023f 	bic.w	r2, r2, #63	; 0x3f
 8000bd0:	433a      	orrs	r2, r7
 8000bd2:	640a      	str	r2, [r1, #64]	; 0x40
    hdma2d.LayerCfg[1].InputOffset = blitOp.srcLoopStride - blitOp.nSteps;
 8000bd4:	8aa2      	ldrh	r2, [r4, #20]
 8000bd6:	eba2 0208 	sub.w	r2, r2, r8
 8000bda:	629a      	str	r2, [r3, #40]	; 0x28

    if (blendingImage || blendingText)
 8000bdc:	b906      	cbnz	r6, 8000be0 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xb0>
 8000bde:	b395      	cbz	r5, 8000c46 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x116>
    {
        if (blitOp.alpha < 255)
 8000be0:	7f22      	ldrb	r2, [r4, #28]
 8000be2:	2aff      	cmp	r2, #255	; 0xff
        {
            hdma2d.LayerCfg[1].AlphaMode = DMA2D_COMBINE_ALPHA;
 8000be4:	bf15      	itete	ne
 8000be6:	2102      	movne	r1, #2
            hdma2d.LayerCfg[1].InputAlpha = blitOp.alpha;
        }
        else
        {
            hdma2d.LayerCfg[1].AlphaMode = DMA2D_NO_MODIF_ALPHA;
 8000be8:	2200      	moveq	r2, #0
            hdma2d.LayerCfg[1].InputAlpha = blitOp.alpha;
 8000bea:	e9c3 120c 	strdne	r1, r2, [r3, #48]	; 0x30
            hdma2d.LayerCfg[1].AlphaMode = DMA2D_NO_MODIF_ALPHA;
 8000bee:	631a      	streq	r2, [r3, #48]	; 0x30
        }

        if (blendingText)
 8000bf0:	b31d      	cbz	r5, 8000c3a <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x10a>
 8000bf2:	7f22      	ldrb	r2, [r4, #28]
 8000bf4:	69a1      	ldr	r1, [r4, #24]
        {
            if (bitDepth == 16)
 8000bf6:	f1be 0f10 	cmp.w	lr, #16
 8000bfa:	ea4f 6c02 	mov.w	ip, r2, lsl #24
 8000bfe:	d151      	bne.n	8000ca4 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x174>
            {
                uint32_t red = (((blitOp.color & 0xF800) >> 11) * 255) / 31;
 8000c00:	f04f 081f 	mov.w	r8, #31
 8000c04:	f3c1 22c4 	ubfx	r2, r1, #11, #5
 8000c08:	ebc2 2202 	rsb	r2, r2, r2, lsl #8
 8000c0c:	fbb2 fef8 	udiv	lr, r2, r8
                uint32_t green = (((blitOp.color & 0x7E0) >> 5) * 255) / 63;
                uint32_t blue = (((blitOp.color & 0x1F)) * 255) / 31;
 8000c10:	ea01 0208 	and.w	r2, r1, r8
 8000c14:	ebc2 2202 	rsb	r2, r2, r2, lsl #8
 8000c18:	fbb2 f2f8 	udiv	r2, r2, r8
                uint32_t alpha = blitOp.alpha;
                hdma2d.LayerCfg[1].InputAlpha = (alpha << 24) | (red << 16) | (green << 8) | blue;
 8000c1c:	ea42 020c 	orr.w	r2, r2, ip
 8000c20:	ea42 420e 	orr.w	r2, r2, lr, lsl #16
                uint32_t green = (((blitOp.color & 0x7E0) >> 5) * 255) / 63;
 8000c24:	f3c1 1145 	ubfx	r1, r1, #5, #6
 8000c28:	ebc1 2101 	rsb	r1, r1, r1, lsl #8
 8000c2c:	f04f 0c3f 	mov.w	ip, #63	; 0x3f
 8000c30:	fbb1 f1fc 	udiv	r1, r1, ip
                hdma2d.LayerCfg[1].InputAlpha = (alpha << 24) | (red << 16) | (green << 8) | blue;
 8000c34:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 8000c38:	635a      	str	r2, [r3, #52]	; 0x34
                hdma2d.LayerCfg[1].InputAlpha = blitOp.color.getColor32() | (blitOp.alpha << 24);
            }
        }

        hdma2d.LayerCfg[0].InputOffset = blitOp.dstLoopStride - blitOp.nSteps;
        hdma2d.LayerCfg[0].InputColorMode = (bitDepth == 16) ? CM_RGB565 : CM_RGB888;
 8000c3a:	e9c3 7006 	strd	r7, r0, [r3, #24]

        HAL_DMA2D_ConfigLayer(&hdma2d, 0);
 8000c3e:	2100      	movs	r1, #0
 8000c40:	481e      	ldr	r0, [pc, #120]	; (8000cbc <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x18c>)
 8000c42:	f002 fc1d 	bl	8003480 <HAL_DMA2D_ConfigLayer>
    }

    HAL_DMA2D_ConfigLayer(&hdma2d, 1);
 8000c46:	2101      	movs	r1, #1
 8000c48:	481c      	ldr	r0, [pc, #112]	; (8000cbc <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x18c>)
 8000c4a:	f002 fc19 	bl	8003480 <HAL_DMA2D_ConfigLayer>
 8000c4e:	8a23      	ldrh	r3, [r4, #16]
 8000c50:	8a62      	ldrh	r2, [r4, #18]

    if (blendingImage || blendingText)
 8000c52:	b906      	cbnz	r6, 8000c56 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x126>
 8000c54:	b355      	cbz	r5, 8000cac <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x17c>
    {
        HAL_DMA2D_BlendingStart_IT(&hdma2d,
 8000c56:	e9cd 3200 	strd	r3, r2, [sp]
 8000c5a:	68e3      	ldr	r3, [r4, #12]
 8000c5c:	6861      	ldr	r1, [r4, #4]
 8000c5e:	4817      	ldr	r0, [pc, #92]	; (8000cbc <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x18c>)
 8000c60:	461a      	mov	r2, r3
 8000c62:	f002 facf 	bl	8003204 <HAL_DMA2D_BlendingStart_IT>
        HAL_DMA2D_Start_IT(&hdma2d,
                           (unsigned int)blitOp.pSrc,
                           (unsigned int)blitOp.pDst,
                           blitOp.nSteps, blitOp.nLoops);
    }
}
 8000c66:	b003      	add	sp, #12
 8000c68:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
                          || blitOp.operation == BLIT_OP_COPY_WITH_ALPHA);
 8000c6c:	2601      	movs	r6, #1
 8000c6e:	e76f      	b.n	8000b50 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x20>
                         || blitOp.operation == BLIT_OP_COPY_A8);
 8000c70:	2501      	movs	r5, #1
 8000c72:	e771      	b.n	8000b58 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x28>
    switch (blitOp.operation)
 8000c74:	2b80      	cmp	r3, #128	; 0x80
 8000c76:	d006      	beq.n	8000c86 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x156>
 8000c78:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8000c7c:	f47f af7e 	bne.w	8000b7c <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x4c>
        dma2dColorMode = CM_A8;
 8000c80:	f04f 0c09 	mov.w	ip, #9
 8000c84:	e001      	b.n	8000c8a <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x15a>
        dma2dColorMode = CM_A4;
 8000c86:	f04f 0c0a 	mov.w	ip, #10
    uint32_t dma2dTransferMode = DMA2D_M2M_BLEND;
 8000c8a:	f44f 3200 	mov.w	r2, #131072	; 0x20000
 8000c8e:	e77d      	b.n	8000b8c <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x5c>
        dma2dColorMode = (bitDepth == 16) ? CM_RGB565 : CM_RGB888;
 8000c90:	2810      	cmp	r0, #16
 8000c92:	bf14      	ite	ne
 8000c94:	f04f 0c01 	movne.w	ip, #1
 8000c98:	f04f 0c02 	moveq.w	ip, #2
 8000c9c:	e7f5      	b.n	8000c8a <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x15a>
        dma2dColorMode = CM_ARGB8888;
 8000c9e:	f04f 0c00 	mov.w	ip, #0
 8000ca2:	e7f2      	b.n	8000c8a <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x15a>
                hdma2d.LayerCfg[1].InputAlpha = blitOp.color.getColor32() | (blitOp.alpha << 24);
 8000ca4:	ea4c 0101 	orr.w	r1, ip, r1
 8000ca8:	6359      	str	r1, [r3, #52]	; 0x34
 8000caa:	e7c6      	b.n	8000c3a <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x10a>
        HAL_DMA2D_Start_IT(&hdma2d,
 8000cac:	9200      	str	r2, [sp, #0]
 8000cae:	6861      	ldr	r1, [r4, #4]
 8000cb0:	68e2      	ldr	r2, [r4, #12]
 8000cb2:	4802      	ldr	r0, [pc, #8]	; (8000cbc <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x18c>)
 8000cb4:	f002 fa88 	bl	80031c8 <HAL_DMA2D_Start_IT>
}
 8000cb8:	e7d5      	b.n	8000c66 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x136>
 8000cba:	bf00      	nop
 8000cbc:	20012594 	.word	0x20012594

08000cc0 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE>:

void STM32F4DMA::setupDataFill(const BlitOp& blitOp)
{
 8000cc0:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8000cc2:	460d      	mov	r5, r1
    uint8_t bitDepth = HAL::lcd().bitDepth();
 8000cc4:	f7ff ff28 	bl	8000b18 <_ZN8touchgfx3HAL3lcdEv>
 8000cc8:	6803      	ldr	r3, [r0, #0]
 8000cca:	69db      	ldr	r3, [r3, #28]
 8000ccc:	4798      	blx	r3
    uint32_t dma2dTransferMode;
    uint32_t dma2dColorMode = (bitDepth == 16) ? CM_RGB565 : CM_RGB888;
 8000cce:	2810      	cmp	r0, #16
 8000cd0:	69ab      	ldr	r3, [r5, #24]
 8000cd2:	7f29      	ldrb	r1, [r5, #28]
 8000cd4:	d166      	bne.n	8000da4 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0xe4>
    uint32_t color = 0;
    if (bitDepth == 16)
    {
        uint32_t red = (((blitOp.color & 0xF800) >> 11) * 255) / 31;
        uint32_t green = (((blitOp.color & 0x7E0) >> 5) * 255) / 63;
        uint32_t blue = (((blitOp.color & 0x1F)) * 255) / 31;
 8000cd6:	f003 021f 	and.w	r2, r3, #31
 8000cda:	ebc2 2202 	rsb	r2, r2, r2, lsl #8
 8000cde:	201f      	movs	r0, #31
 8000ce0:	fbb2 f4f0 	udiv	r4, r2, r0
        uint32_t red = (((blitOp.color & 0xF800) >> 11) * 255) / 31;
 8000ce4:	f3c3 22c4 	ubfx	r2, r3, #11, #5
        uint32_t alpha = blitOp.alpha;
        color = (alpha << 24) | (red << 16) | (green << 8) | blue;
 8000ce8:	ea44 6401 	orr.w	r4, r4, r1, lsl #24
        uint32_t red = (((blitOp.color & 0xF800) >> 11) * 255) / 31;
 8000cec:	ebc2 2202 	rsb	r2, r2, r2, lsl #8
        uint32_t green = (((blitOp.color & 0x7E0) >> 5) * 255) / 63;
 8000cf0:	f3c3 1345 	ubfx	r3, r3, #5, #6
        uint32_t red = (((blitOp.color & 0xF800) >> 11) * 255) / 31;
 8000cf4:	fbb2 f2f0 	udiv	r2, r2, r0
        color = (alpha << 24) | (red << 16) | (green << 8) | blue;
 8000cf8:	ea44 4402 	orr.w	r4, r4, r2, lsl #16
        uint32_t green = (((blitOp.color & 0x7E0) >> 5) * 255) / 63;
 8000cfc:	ebc3 2303 	rsb	r3, r3, r3, lsl #8
 8000d00:	223f      	movs	r2, #63	; 0x3f
    uint32_t dma2dColorMode = (bitDepth == 16) ? CM_RGB565 : CM_RGB888;
 8000d02:	2102      	movs	r1, #2
        uint32_t green = (((blitOp.color & 0x7E0) >> 5) * 255) / 63;
 8000d04:	fbb3 f3f2 	udiv	r3, r3, r2
        color = (alpha << 24) | (red << 16) | (green << 8) | blue;
 8000d08:	ea44 2403 	orr.w	r4, r4, r3, lsl #8
    else
    {
        color = (blitOp.alpha << 24) | blitOp.color.getColor32();
    }

    switch (blitOp.operation)
 8000d0c:	682b      	ldr	r3, [r5, #0]
        dma2dTransferMode = DMA2D_R2M;
        break;
    };

    /* HAL_DMA2D_ConfigLayer() depends on hdma2d.Init */
    hdma2d.Init.Mode = dma2dTransferMode;
 8000d0e:	4827      	ldr	r0, [pc, #156]	; (8000dac <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0xec>)
    hdma2d.Init.ColorMode = (bitDepth == 16) ? DMA2D_RGB565 : DMA2D_RGB888;
    hdma2d.Init.OutputOffset = blitOp.dstLoopStride - blitOp.nSteps;
 8000d10:	8aee      	ldrh	r6, [r5, #22]
    MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, mode);
 8000d12:	6802      	ldr	r2, [r0, #0]
    switch (blitOp.operation)
 8000d14:	2b08      	cmp	r3, #8
    hdma2d.Init.OutputOffset = blitOp.dstLoopStride - blitOp.nSteps;
 8000d16:	8a2b      	ldrh	r3, [r5, #16]
 8000d18:	eba6 0603 	sub.w	r6, r6, r3
    MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, mode);
 8000d1c:	6813      	ldr	r3, [r2, #0]
    hdma2d.Init.OutputOffset = blitOp.dstLoopStride - blitOp.nSteps;
 8000d1e:	60c6      	str	r6, [r0, #12]
        dma2dTransferMode = DMA2D_R2M;
 8000d20:	bf0c      	ite	eq
 8000d22:	f44f 3700 	moveq.w	r7, #131072	; 0x20000
 8000d26:	f44f 3740 	movne.w	r7, #196608	; 0x30000
    MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, mode);
 8000d2a:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 8000d2e:	433b      	orrs	r3, r7
    hdma2d.Init.ColorMode = (bitDepth == 16) ? DMA2D_RGB565 : DMA2D_RGB888;
 8000d30:	e9c0 7101 	strd	r7, r1, [r0, #4]
    MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, mode);
 8000d34:	6013      	str	r3, [r2, #0]
    MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM, color);
 8000d36:	6b53      	ldr	r3, [r2, #52]	; 0x34
 8000d38:	f023 0307 	bic.w	r3, r3, #7
 8000d3c:	430b      	orrs	r3, r1
 8000d3e:	6353      	str	r3, [r2, #52]	; 0x34
    MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, offset);
 8000d40:	6c13      	ldr	r3, [r2, #64]	; 0x40
 8000d42:	f423 537f 	bic.w	r3, r3, #16320	; 0x3fc0
 8000d46:	f023 033f 	bic.w	r3, r3, #63	; 0x3f
 8000d4a:	4333      	orrs	r3, r6

    HAL_DMA2D_SetMode(&hdma2d, dma2dTransferMode,
                      (bitDepth == 16) ? DMA2D_RGB565 : DMA2D_RGB888,
                      blitOp.dstLoopStride - blitOp.nSteps);

    if (dma2dTransferMode == DMA2D_M2M_BLEND)
 8000d4c:	f5b7 3f00 	cmp.w	r7, #131072	; 0x20000
    MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, offset);
 8000d50:	6413      	str	r3, [r2, #64]	; 0x40
    if (dma2dTransferMode == DMA2D_M2M_BLEND)
 8000d52:	d11c      	bne.n	8000d8e <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0xce>
    {
        hdma2d.LayerCfg[1].AlphaMode = DMA2D_REPLACE_ALPHA;
 8000d54:	2301      	movs	r3, #1
        hdma2d.LayerCfg[1].InputAlpha = color;
 8000d56:	e9c0 340c 	strd	r3, r4, [r0, #48]	; 0x30
        hdma2d.LayerCfg[1].InputColorMode = CM_A8;
 8000d5a:	2309      	movs	r3, #9
        hdma2d.LayerCfg[0].InputOffset = blitOp.dstLoopStride - blitOp.nSteps;
        hdma2d.LayerCfg[0].InputColorMode = (bitDepth == 16) ? CM_RGB565 : CM_RGB888;
 8000d5c:	e9c0 6106 	strd	r6, r1, [r0, #24]
        hdma2d.LayerCfg[1].InputColorMode = CM_A8;
 8000d60:	62c3      	str	r3, [r0, #44]	; 0x2c
        HAL_DMA2D_ConfigLayer(&hdma2d, 0);
 8000d62:	2100      	movs	r1, #0
 8000d64:	f002 fb8c 	bl	8003480 <HAL_DMA2D_ConfigLayer>
    {
        hdma2d.LayerCfg[1].InputColorMode = dma2dColorMode;
        hdma2d.LayerCfg[1].InputOffset = 0;
    }

    HAL_DMA2D_ConfigLayer(&hdma2d, 1);
 8000d68:	2101      	movs	r1, #1
 8000d6a:	4810      	ldr	r0, [pc, #64]	; (8000dac <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0xec>)
 8000d6c:	f002 fb88 	bl	8003480 <HAL_DMA2D_ConfigLayer>

    if (dma2dTransferMode == DMA2D_M2M_BLEND)
 8000d70:	f5b7 3f00 	cmp.w	r7, #131072	; 0x20000
 8000d74:	8a2b      	ldrh	r3, [r5, #16]
 8000d76:	8a6a      	ldrh	r2, [r5, #18]
 8000d78:	d10d      	bne.n	8000d96 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0xd6>
        HAL_DMA2D_BlendingStart_IT(&hdma2d,
 8000d7a:	68e9      	ldr	r1, [r5, #12]
 8000d7c:	480b      	ldr	r0, [pc, #44]	; (8000dac <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0xec>)
 8000d7e:	e9cd 3200 	strd	r3, r2, [sp]
 8000d82:	460b      	mov	r3, r1
 8000d84:	460a      	mov	r2, r1
 8000d86:	f002 fa3d 	bl	8003204 <HAL_DMA2D_BlendingStart_IT>
                                   (unsigned int)blitOp.pDst,
                                   blitOp.nSteps, blitOp.nLoops);
    else
        HAL_DMA2D_Start_IT(&hdma2d, color, (unsigned int)blitOp.pDst,
                           blitOp.nSteps, blitOp.nLoops);
}
 8000d8a:	b003      	add	sp, #12
 8000d8c:	bdf0      	pop	{r4, r5, r6, r7, pc}
        hdma2d.LayerCfg[1].InputOffset = 0;
 8000d8e:	2300      	movs	r3, #0
        hdma2d.LayerCfg[1].InputColorMode = dma2dColorMode;
 8000d90:	62c1      	str	r1, [r0, #44]	; 0x2c
        hdma2d.LayerCfg[1].InputOffset = 0;
 8000d92:	6283      	str	r3, [r0, #40]	; 0x28
 8000d94:	e7e8      	b.n	8000d68 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0xa8>
        HAL_DMA2D_Start_IT(&hdma2d, color, (unsigned int)blitOp.pDst,
 8000d96:	9200      	str	r2, [sp, #0]
 8000d98:	4621      	mov	r1, r4
 8000d9a:	68ea      	ldr	r2, [r5, #12]
 8000d9c:	4803      	ldr	r0, [pc, #12]	; (8000dac <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0xec>)
 8000d9e:	f002 fa13 	bl	80031c8 <HAL_DMA2D_Start_IT>
}
 8000da2:	e7f2      	b.n	8000d8a <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0xca>
        color = (blitOp.alpha << 24) | blitOp.color.getColor32();
 8000da4:	ea43 6401 	orr.w	r4, r3, r1, lsl #24
    uint32_t dma2dColorMode = (bitDepth == 16) ? CM_RGB565 : CM_RGB888;
 8000da8:	2101      	movs	r1, #1
 8000daa:	e7af      	b.n	8000d0c <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0x4c>
 8000dac:	20012594 	.word	0x20012594

08000db0 <_ZN10STM32F4DMAC1Ev>:
STM32F4DMA::STM32F4DMA()
 8000db0:	b570      	push	{r4, r5, r6, lr}
 8000db2:	4605      	mov	r5, r0
    : DMA_Interface(dma_queue), dma_queue(queue_storage, sizeof(queue_storage) / sizeof(queue_storage[0]))
 8000db4:	462c      	mov	r4, r5
 8000db6:	4b0a      	ldr	r3, [pc, #40]	; (8000de0 <_ZN10STM32F4DMAC1Ev+0x30>)
 8000db8:	300c      	adds	r0, #12
     * Constructs a DMA Interface object.
     *
     * @param [in] dmaQueue Reference to the queue of DMA operations.
     */
    DMA_Interface(DMA_Queue& dmaQueue)
        : queue(dmaQueue), isRunning(false), isAllowed(false)
 8000dba:	2600      	movs	r6, #0
 8000dbc:	6068      	str	r0, [r5, #4]
 8000dbe:	722e      	strb	r6, [r5, #8]
 8000dc0:	726e      	strb	r6, [r5, #9]
 8000dc2:	f844 3b20 	str.w	r3, [r4], #32
 8000dc6:	2260      	movs	r2, #96	; 0x60
 8000dc8:	4621      	mov	r1, r4
 8000dca:	f008 f8b5 	bl	8008f38 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>
 8000dce:	f505 6342 	add.w	r3, r5, #3104	; 0xc20
 */
struct colortype
{
    /** Default constructor. Creates a black (0) color. */
    colortype()
        : color(0)
 8000dd2:	61a6      	str	r6, [r4, #24]
 8000dd4:	3420      	adds	r4, #32
 8000dd6:	42a3      	cmp	r3, r4
 8000dd8:	d1fb      	bne.n	8000dd2 <_ZN10STM32F4DMAC1Ev+0x22>
{}
 8000dda:	4628      	mov	r0, r5
 8000ddc:	bd70      	pop	{r4, r5, r6, pc}
 8000dde:	bf00      	nop
 8000de0:	08019388 	.word	0x08019388

08000de4 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
     * @see touchgfx::AbstractPartition::capacity
     */
    virtual uint16_t capacity() const
    {
        return NUMBER_OF_ELEMENTS;
    }
 8000de4:	2001      	movs	r0, #1
 8000de6:	4770      	bx	lr

08000de8 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
     * @see touchgfx::AbstractPartition::element_size
     */
    virtual uint32_t element_size()
    {
        return sizeof(stBlocks[0]);
    }
 8000de8:	200c      	movs	r0, #12
 8000dea:	4770      	bx	lr

08000dec <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE7elementEt>:
     *
     * @see touchgfx::AbstractPartition::element
     */
    virtual void* element(uint16_t index)
    {
        return &stBlocks[index];
 8000dec:	230c      	movs	r3, #12
 8000dee:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8000df2:	3008      	adds	r0, #8
 8000df4:	4770      	bx	lr

08000df6 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE7elementEt>:
     *
     * @see touchgfx::AbstractPartition::element
     */
    virtual const void* element(uint16_t index) const
    {
        return &stBlocks[index];
 8000df6:	230c      	movs	r3, #12
 8000df8:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8000dfc:	3008      	adds	r0, #8
 8000dfe:	4770      	bx	lr

08000e00 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI14mainScreenViewNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 8000e00:	2001      	movs	r0, #1
 8000e02:	4770      	bx	lr

08000e04 <_ZN8touchgfx9PartitionINS_4meta8TypeListI14mainScreenViewNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 8000e04:	f44f 7059 	mov.w	r0, #868	; 0x364
 8000e08:	4770      	bx	lr

08000e0a <_ZN8touchgfx9PartitionINS_4meta8TypeListI14mainScreenViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8000e0a:	f44f 7359 	mov.w	r3, #868	; 0x364
 8000e0e:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8000e12:	3008      	adds	r0, #8
 8000e14:	4770      	bx	lr

08000e16 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI14mainScreenViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8000e16:	f44f 7359 	mov.w	r3, #868	; 0x364
 8000e1a:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8000e1e:	3008      	adds	r0, #8
 8000e20:	4770      	bx	lr

08000e22 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI19mainScreenPresenterNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 8000e22:	2001      	movs	r0, #1
 8000e24:	4770      	bx	lr

08000e26 <_ZN8touchgfx9PartitionINS_4meta8TypeListI19mainScreenPresenterNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 8000e26:	2010      	movs	r0, #16
 8000e28:	4770      	bx	lr

08000e2a <_ZN8touchgfx9PartitionINS_4meta8TypeListI19mainScreenPresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8000e2a:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 8000e2e:	3008      	adds	r0, #8
 8000e30:	4770      	bx	lr

08000e32 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI19mainScreenPresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8000e32:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 8000e36:	3008      	adds	r0, #8
 8000e38:	4770      	bx	lr

08000e3a <_ZN16FrontendHeapBase15gotoStartScreenER19FrontendApplication>:
     */
    typedef touchgfx::meta::select_type_maxsize< GeneratedTransitionTypes >::type MaxGeneratedTransitionType;

    virtual void gotoStartScreen(FrontendApplication& app)
    {
        app.gotomainScreenScreenNoTransition();
 8000e3a:	4608      	mov	r0, r1
 8000e3c:	f001 b884 	b.w	8001f48 <_ZN23FrontendApplicationBase32gotomainScreenScreenNoTransitionEv>

08000e40 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>:
class Partition : public AbstractPartition
 8000e40:	b510      	push	{r4, lr}
 8000e42:	4b03      	ldr	r3, [pc, #12]	; (8000e50 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 8000e44:	6003      	str	r3, [r0, #0]
 8000e46:	4604      	mov	r4, r0
 8000e48:	f006 fcda 	bl	8007800 <_ZN8touchgfx17AbstractPartitionD1Ev>
 8000e4c:	4620      	mov	r0, r4
 8000e4e:	bd10      	pop	{r4, pc}
 8000e50:	08019474 	.word	0x08019474

08000e54 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8000e54:	b510      	push	{r4, lr}
 8000e56:	4604      	mov	r4, r0
 8000e58:	f7ff fff2 	bl	8000e40 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>
 8000e5c:	4620      	mov	r0, r4
 8000e5e:	2114      	movs	r1, #20
 8000e60:	f017 f850 	bl	8017f04 <_ZdlPvj>
 8000e64:	4620      	mov	r0, r4
 8000e66:	bd10      	pop	{r4, pc}

08000e68 <_ZN8touchgfx9PartitionINS_4meta8TypeListI14mainScreenViewNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 8000e68:	b510      	push	{r4, lr}
 8000e6a:	4b03      	ldr	r3, [pc, #12]	; (8000e78 <_ZN8touchgfx9PartitionINS_4meta8TypeListI14mainScreenViewNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 8000e6c:	6003      	str	r3, [r0, #0]
 8000e6e:	4604      	mov	r4, r0
 8000e70:	f006 fcc6 	bl	8007800 <_ZN8touchgfx17AbstractPartitionD1Ev>
 8000e74:	4620      	mov	r0, r4
 8000e76:	bd10      	pop	{r4, pc}
 8000e78:	08019440 	.word	0x08019440

08000e7c <_ZN8touchgfx9PartitionINS_4meta8TypeListI14mainScreenViewNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8000e7c:	b510      	push	{r4, lr}
 8000e7e:	4604      	mov	r4, r0
 8000e80:	f7ff fff2 	bl	8000e68 <_ZN8touchgfx9PartitionINS_4meta8TypeListI14mainScreenViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8000e84:	4620      	mov	r0, r4
 8000e86:	f44f 715b 	mov.w	r1, #876	; 0x36c
 8000e8a:	f017 f83b 	bl	8017f04 <_ZdlPvj>
 8000e8e:	4620      	mov	r0, r4
 8000e90:	bd10      	pop	{r4, pc}
	...

08000e94 <_ZN8touchgfx9PartitionINS_4meta8TypeListI19mainScreenPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 8000e94:	b510      	push	{r4, lr}
 8000e96:	4b03      	ldr	r3, [pc, #12]	; (8000ea4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI19mainScreenPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 8000e98:	6003      	str	r3, [r0, #0]
 8000e9a:	4604      	mov	r4, r0
 8000e9c:	f006 fcb0 	bl	8007800 <_ZN8touchgfx17AbstractPartitionD1Ev>
 8000ea0:	4620      	mov	r0, r4
 8000ea2:	bd10      	pop	{r4, pc}
 8000ea4:	0801940c 	.word	0x0801940c

08000ea8 <_ZN8touchgfx9PartitionINS_4meta8TypeListI19mainScreenPresenterNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8000ea8:	b510      	push	{r4, lr}
 8000eaa:	4604      	mov	r4, r0
 8000eac:	f7ff fff2 	bl	8000e94 <_ZN8touchgfx9PartitionINS_4meta8TypeListI19mainScreenPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8000eb0:	4620      	mov	r0, r4
 8000eb2:	2118      	movs	r1, #24
 8000eb4:	f017 f826 	bl	8017f04 <_ZdlPvj>
 8000eb8:	4620      	mov	r0, r4
 8000eba:	bd10      	pop	{r4, pc}

08000ebc <_ZN12FrontendHeapD1Ev>:
#ifndef FRONTENDHEAP_HPP
#define FRONTENDHEAP_HPP

#include <gui_generated/common/FrontendHeapBase.hpp>

class FrontendHeap : public FrontendHeapBase
 8000ebc:	b510      	push	{r4, lr}
 8000ebe:	4b08      	ldr	r3, [pc, #32]	; (8000ee0 <_ZN12FrontendHeapD1Ev+0x24>)
 8000ec0:	6003      	str	r3, [r0, #0]
 8000ec2:	4604      	mov	r4, r0
 8000ec4:	f500 7066 	add.w	r0, r0, #920	; 0x398
 8000ec8:	f7ff ffba 	bl	8000e40 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>
 8000ecc:	f104 002c 	add.w	r0, r4, #44	; 0x2c
 8000ed0:	f7ff ffca 	bl	8000e68 <_ZN8touchgfx9PartitionINS_4meta8TypeListI14mainScreenViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8000ed4:	f104 0014 	add.w	r0, r4, #20
 8000ed8:	f7ff ffdc 	bl	8000e94 <_ZN8touchgfx9PartitionINS_4meta8TypeListI19mainScreenPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8000edc:	4620      	mov	r0, r4
 8000ede:	bd10      	pop	{r4, pc}
 8000ee0:	080194a8 	.word	0x080194a8

08000ee4 <__tcf_0>:
                            > > CombinedTransitionTypes;
    typedef touchgfx::meta::select_type_maxsize< CombinedTransitionTypes >::type MaxTransitionType;

    static FrontendHeap& getInstance()
    {
        static FrontendHeap instance;
 8000ee4:	b508      	push	{r3, lr}
 8000ee6:	4802      	ldr	r0, [pc, #8]	; (8000ef0 <__tcf_0+0xc>)
 8000ee8:	f7ff ffe8 	bl	8000ebc <_ZN12FrontendHeapD1Ev>
 8000eec:	bd08      	pop	{r3, pc}
 8000eee:	bf00      	nop
 8000ef0:	20000198 	.word	0x20000198

08000ef4 <_ZN12FrontendHeapD0Ev>:
class FrontendHeap : public FrontendHeapBase
 8000ef4:	b510      	push	{r4, lr}
 8000ef6:	4604      	mov	r4, r0
 8000ef8:	f7ff ffe0 	bl	8000ebc <_ZN12FrontendHeapD1Ev>
 8000efc:	4620      	mov	r0, r4
 8000efe:	f44f 61a1 	mov.w	r1, #1288	; 0x508
 8000f02:	f016 ffff 	bl	8017f04 <_ZdlPvj>
 8000f06:	4620      	mov	r0, r4
 8000f08:	bd10      	pop	{r4, pc}
	...

08000f0c <touchgfx_init>:
static ApplicationFontProvider fontProvider;
static Texts texts;
static TouchGFXHAL hal(dma, display, tc, 240, 320);

void touchgfx_init()
{
 8000f0c:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
    Bitmap::registerBitmapDatabase(BitmapDatabase::getInstance(), BitmapDatabase::getInstanceSize());
 8000f10:	f000 ff56 	bl	8001dc0 <_ZN14BitmapDatabase11getInstanceEv>
 8000f14:	4605      	mov	r5, r0
 8000f16:	f000 ff57 	bl	8001dc8 <_ZN14BitmapDatabase15getInstanceSizeEv>
 8000f1a:	2400      	movs	r4, #0
 8000f1c:	4601      	mov	r1, r0
 8000f1e:	4623      	mov	r3, r4
 8000f20:	4628      	mov	r0, r5
 8000f22:	4622      	mov	r2, r4
 8000f24:	9400      	str	r4, [sp, #0]
 8000f26:	f00b fb37 	bl	800c598 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>
     *
     * @param  t The array of texts.
     */
    static void registerTexts(const Texts* t)
    {
        texts = t;
 8000f2a:	4b25      	ldr	r3, [pc, #148]	; (8000fc0 <touchgfx_init+0xb4>)
 8000f2c:	4a25      	ldr	r2, [pc, #148]	; (8000fc4 <touchgfx_init+0xb8>)
        static FrontendHeap instance;
 8000f2e:	4d26      	ldr	r5, [pc, #152]	; (8000fc8 <touchgfx_init+0xbc>)
 8000f30:	601a      	str	r2, [r3, #0]
    TypedText::registerTexts(&texts);
    Texts::setLanguage(0);
 8000f32:	4620      	mov	r0, r4
 8000f34:	f001 fa42 	bl	80023bc <_ZN8touchgfx5Texts11setLanguageEt>

    FontManager::setFontProvider(&fontProvider);
 8000f38:	4824      	ldr	r0, [pc, #144]	; (8000fcc <touchgfx_init+0xc0>)
 8000f3a:	f00b fa77 	bl	800c42c <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>
 8000f3e:	782b      	ldrb	r3, [r5, #0]
 8000f40:	f3bf 8f5b 	dmb	ish
 8000f44:	07db      	lsls	r3, r3, #31
 8000f46:	d435      	bmi.n	8000fb4 <touchgfx_init+0xa8>
 8000f48:	4628      	mov	r0, r5
 8000f4a:	f016 ffdd 	bl	8017f08 <__cxa_guard_acquire>
 8000f4e:	b388      	cbz	r0, 8000fb4 <touchgfx_init+0xa8>
            AbstractPartition& tra,
            MVPApplication& app)
        : presenterStorage(pres),
          screenStorage(scr),
          transitionStorage(tra),
          frontendApplication(app)
 8000f50:	4c1f      	ldr	r4, [pc, #124]	; (8000fd0 <touchgfx_init+0xc4>)
    Model model;
    FrontendApplication app;

private:
    FrontendHeap() : FrontendHeapBase(presenters, views, transitions, app),
                     app(model, *this)
 8000f52:	4b20      	ldr	r3, [pc, #128]	; (8000fd4 <touchgfx_init+0xc8>)
 8000f54:	6023      	str	r3, [r4, #0]
 8000f56:	f504 766c 	add.w	r6, r4, #944	; 0x3b0
 8000f5a:	f104 0014 	add.w	r0, r4, #20
 8000f5e:	f104 082c 	add.w	r8, r4, #44	; 0x2c
 8000f62:	f504 7766 	add.w	r7, r4, #920	; 0x398
 8000f66:	6060      	str	r0, [r4, #4]
 8000f68:	f8c4 8008 	str.w	r8, [r4, #8]
 8000f6c:	60e7      	str	r7, [r4, #12]
 8000f6e:	6126      	str	r6, [r4, #16]
 8000f70:	f006 fc48 	bl	8007804 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8000f74:	4b18      	ldr	r3, [pc, #96]	; (8000fd8 <touchgfx_init+0xcc>)
 8000f76:	6163      	str	r3, [r4, #20]
 8000f78:	4640      	mov	r0, r8
 8000f7a:	f006 fc43 	bl	8007804 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8000f7e:	4b17      	ldr	r3, [pc, #92]	; (8000fdc <touchgfx_init+0xd0>)
 8000f80:	62e3      	str	r3, [r4, #44]	; 0x2c
 8000f82:	4638      	mov	r0, r7
 8000f84:	f006 fc3e 	bl	8007804 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8000f88:	4b15      	ldr	r3, [pc, #84]	; (8000fe0 <touchgfx_init+0xd4>)
 8000f8a:	f8c4 3398 	str.w	r3, [r4, #920]	; 0x398
 8000f8e:	f504 706b 	add.w	r0, r4, #940	; 0x3ac
 8000f92:	f001 fd0d 	bl	80029b0 <_ZN5ModelC1Ev>
 8000f96:	4622      	mov	r2, r4
 8000f98:	f504 716b 	add.w	r1, r4, #940	; 0x3ac
 8000f9c:	4630      	mov	r0, r6
 8000f9e:	f001 fcfd 	bl	800299c <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>
 8000fa2:	4630      	mov	r0, r6
 8000fa4:	f000 ffd0 	bl	8001f48 <_ZN23FrontendApplicationBase32gotomainScreenScreenNoTransitionEv>
        static FrontendHeap instance;
 8000fa8:	4628      	mov	r0, r5
 8000faa:	f016 ffb9 	bl	8017f20 <__cxa_guard_release>
 8000fae:	480d      	ldr	r0, [pc, #52]	; (8000fe4 <touchgfx_init+0xd8>)
 8000fb0:	f016 fff2 	bl	8017f98 <atexit>

    FrontendHeap& heap = FrontendHeap::getInstance();
    (void)heap; // we need to obtain the reference above to initialize the frontend heap.

    hal.initialize();
 8000fb4:	480c      	ldr	r0, [pc, #48]	; (8000fe8 <touchgfx_init+0xdc>)
}
 8000fb6:	b002      	add	sp, #8
 8000fb8:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    hal.initialize();
 8000fbc:	f7ff bcb4 	b.w	8000928 <_ZN11TouchGFXHAL10initializeEv>
 8000fc0:	200121f4 	.word	0x200121f4
 8000fc4:	2000133c 	.word	0x2000133c
 8000fc8:	20000194 	.word	0x20000194
 8000fcc:	20000008 	.word	0x20000008
 8000fd0:	20000198 	.word	0x20000198
 8000fd4:	080194a8 	.word	0x080194a8
 8000fd8:	0801940c 	.word	0x0801940c
 8000fdc:	08019440 	.word	0x08019440
 8000fe0:	08019474 	.word	0x08019474
 8000fe4:	08000ee5 	.word	0x08000ee5
 8000fe8:	200012c4 	.word	0x200012c4

08000fec <touchgfx_taskEntry>:
     * Main event loop. Will wait for VSYNC signal, and then process next frame. Call
     * this function from your GUI task.
     *
     * Note This function never returns
     */
    hal.taskEntry();
 8000fec:	4801      	ldr	r0, [pc, #4]	; (8000ff4 <touchgfx_taskEntry+0x8>)
 8000fee:	f7ff bbbd 	b.w	800076c <_ZN11TouchGFXHAL9taskEntryEv>
 8000ff2:	bf00      	nop
 8000ff4:	200012c4 	.word	0x200012c4

08000ff8 <_GLOBAL__sub_I_touchgfx_init>:
}
 8000ff8:	b570      	push	{r4, r5, r6, lr}
static STM32F4DMA dma;
 8000ffa:	4e28      	ldr	r6, [pc, #160]	; (800109c <_GLOBAL__sub_I_touchgfx_init+0xa4>)
{
public:

    STM32TouchController() {}
 8000ffc:	4c28      	ldr	r4, [pc, #160]	; (80010a0 <_GLOBAL__sub_I_touchgfx_init+0xa8>)
static LCD16bpp display;
 8000ffe:	4d29      	ldr	r5, [pc, #164]	; (80010a4 <_GLOBAL__sub_I_touchgfx_init+0xac>)
 8001000:	4b29      	ldr	r3, [pc, #164]	; (80010a8 <_GLOBAL__sub_I_touchgfx_init+0xb0>)
 8001002:	6023      	str	r3, [r4, #0]
static STM32F4DMA dma;
 8001004:	4630      	mov	r0, r6
 8001006:	f7ff fed3 	bl	8000db0 <_ZN10STM32F4DMAC1Ev>
static LCD16bpp display;
 800100a:	4628      	mov	r0, r5
 800100c:	f00e fabe 	bl	800f58c <_ZN8touchgfx8LCD16bppC1Ev>
          useDMAAcceleration(true)
 8001010:	4b26      	ldr	r3, [pc, #152]	; (80010ac <_GLOBAL__sub_I_touchgfx_init+0xb4>)
 8001012:	4827      	ldr	r0, [pc, #156]	; (80010b0 <_GLOBAL__sub_I_touchgfx_init+0xb8>)
 8001014:	6658      	str	r0, [r3, #100]	; 0x64
        instance = this;
 8001016:	4827      	ldr	r0, [pc, #156]	; (80010b4 <_GLOBAL__sub_I_touchgfx_init+0xbc>)
          useDMAAcceleration(true)
 8001018:	60dc      	str	r4, [r3, #12]
 800101a:	2200      	movs	r2, #0
 800101c:	2101      	movs	r1, #1
 800101e:	e9c3 6501 	strd	r6, r5, [r3, #4]
 8001022:	e9c3 2204 	strd	r2, r2, [r3, #16]
              downX(0),
              downY(0),
              tickCount(0),
              velocityX(0),
              velocityY(0),
              inProgress(false)
 8001026:	e9c3 2206 	strd	r2, r2, [r3, #24]
 800102a:	e9c3 2208 	strd	r2, r2, [r3, #32]
 800102e:	851a      	strh	r2, [r3, #40]	; 0x28
 8001030:	f883 202a 	strb.w	r2, [r3, #42]	; 0x2a
    };

public:
    /** Default constructor. Does nothing. */
    Gestures()
        : listener(0), dragThresholdValue(0)
 8001034:	62da      	str	r2, [r3, #44]	; 0x2c
 8001036:	861a      	strh	r2, [r3, #48]	; 0x30
 8001038:	e9c3 220e 	strd	r2, r2, [r3, #56]	; 0x38
 800103c:	e9c3 2210 	strd	r2, r2, [r3, #64]	; 0x40
 8001040:	f883 2048 	strb.w	r2, [r3, #72]	; 0x48
 8001044:	f883 204a 	strb.w	r2, [r3, #74]	; 0x4a
{
public:
    /** Default constructor. Resulting in an empty Rect with coordinates 0,0. */
    Rect()
    {
        this->x = 0;
 8001048:	e9c3 2213 	strd	r2, r2, [r3, #76]	; 0x4c
        this->y = 0;
 800104c:	655a      	str	r2, [r3, #84]	; 0x54
 800104e:	f883 2068 	strb.w	r2, [r3, #104]	; 0x68
 8001052:	f883 2069 	strb.w	r2, [r3, #105]	; 0x69
 8001056:	f883 206a 	strb.w	r2, [r3, #106]	; 0x6a
 800105a:	f883 206b 	strb.w	r2, [r3, #107]	; 0x6b
 800105e:	f883 206c 	strb.w	r2, [r3, #108]	; 0x6c
 8001062:	671a      	str	r2, [r3, #112]	; 0x70
 8001064:	f883 2075 	strb.w	r2, [r3, #117]	; 0x75
 8001068:	f883 2076 	strb.w	r2, [r3, #118]	; 0x76
 800106c:	f883 1049 	strb.w	r1, [r3, #73]	; 0x49
 8001070:	f883 1077 	strb.w	r1, [r3, #119]	; 0x77
        instance = this;
 8001074:	6003      	str	r3, [r0, #0]
        DISPLAY_WIDTH = width;
 8001076:	4810      	ldr	r0, [pc, #64]	; (80010b8 <_GLOBAL__sub_I_touchgfx_init+0xc0>)
        DISPLAY_HEIGHT = height;
 8001078:	4d10      	ldr	r5, [pc, #64]	; (80010bc <_GLOBAL__sub_I_touchgfx_init+0xc4>)
        nativeDisplayOrientation = ((width >= height) ? ORIENTATION_LANDSCAPE : ORIENTATION_PORTRAIT);
 800107a:	f883 1034 	strb.w	r1, [r3, #52]	; 0x34
        DISPLAY_WIDTH = width;
 800107e:	24f0      	movs	r4, #240	; 0xf0
 8001080:	8004      	strh	r4, [r0, #0]
        DISPLAY_HEIGHT = height;
 8001082:	f44f 70a0 	mov.w	r0, #320	; 0x140
 8001086:	8028      	strh	r0, [r5, #0]
        DISPLAY_ROTATION = rotate0;
 8001088:	4d0d      	ldr	r5, [pc, #52]	; (80010c0 <_GLOBAL__sub_I_touchgfx_init+0xc8>)
 800108a:	702a      	strb	r2, [r5, #0]
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH;
 800108c:	4a0d      	ldr	r2, [pc, #52]	; (80010c4 <_GLOBAL__sub_I_touchgfx_init+0xcc>)
 800108e:	8014      	strh	r4, [r2, #0]
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT;
 8001090:	4a0d      	ldr	r2, [pc, #52]	; (80010c8 <_GLOBAL__sub_I_touchgfx_init+0xd0>)
 8001092:	8010      	strh	r0, [r2, #0]
     * @param [in,out] display Reference to LCD interface.
     * @param [in,out] tc      Reference to Touch Controller driver.
     * @param width            Width of the display.
     * @param height           Height of the display.
     */
    TouchGFXHAL(touchgfx::DMA_Interface& dma, touchgfx::LCD& display, touchgfx::TouchController& tc, uint16_t width, uint16_t height) : TouchGFXGeneratedHAL(dma, display, tc, width, height)
 8001094:	4a0d      	ldr	r2, [pc, #52]	; (80010cc <_GLOBAL__sub_I_touchgfx_init+0xd4>)
 8001096:	601a      	str	r2, [r3, #0]
}
 8001098:	bd70      	pop	{r4, r5, r6, pc}
 800109a:	bf00      	nop
 800109c:	200006a4 	.word	0x200006a4
 80010a0:	200006a0 	.word	0x200006a0
 80010a4:	20001340 	.word	0x20001340
 80010a8:	08018fd0 	.word	0x08018fd0
 80010ac:	200012c4 	.word	0x200012c4
 80010b0:	01000001 	.word	0x01000001
 80010b4:	20012178 	.word	0x20012178
 80010b8:	2001216c 	.word	0x2001216c
 80010bc:	2001216e 	.word	0x2001216e
 80010c0:	20012170 	.word	0x20012170
 80010c4:	20012172 	.word	0x20012172
 80010c8:	20012174 	.word	0x20012174
 80010cc:	08019084 	.word	0x08019084

080010d0 <_GLOBAL__sub_D_touchgfx_init>:
static STM32F4DMA dma;
 80010d0:	4801      	ldr	r0, [pc, #4]	; (80010d8 <_GLOBAL__sub_D_touchgfx_init+0x8>)
 80010d2:	f7ff bcfd 	b.w	8000ad0 <_ZN10STM32F4DMAD1Ev>
 80010d6:	bf00      	nop
 80010d8:	200006a4 	.word	0x200006a4

080010dc <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>:
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80010dc:	4b03      	ldr	r3, [pc, #12]	; (80010ec <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv+0x10>)
 80010de:	2290      	movs	r2, #144	; 0x90
 80010e0:	f883 235a 	strb.w	r2, [r3, #858]	; 0x35a
 80010e4:	f883 2358 	strb.w	r2, [r3, #856]	; 0x358

void TouchGFXGeneratedHAL::configureInterrupts()
{
    NVIC_SetPriority(DMA2D_IRQn, 9);
    NVIC_SetPriority(LTDC_IRQn, 9);
}
 80010e8:	4770      	bx	lr
 80010ea:	bf00      	nop
 80010ec:	e000e100 	.word	0xe000e100

080010f0 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>:
    NVIC_DisableIRQ(LTDC_IRQn);
}

void TouchGFXGeneratedHAL::enableLCDControllerInterrupt()
{
    lcd_int_active_line = (LTDC->BPCR & 0x7FF) - 1;
 80010f0:	4a09      	ldr	r2, [pc, #36]	; (8001118 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x28>)
 80010f2:	490a      	ldr	r1, [pc, #40]	; (800111c <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x2c>)
 80010f4:	68d3      	ldr	r3, [r2, #12]
    lcd_int_porch_line = (LTDC->AWCR & 0x7FF) - 1;
 80010f6:	480a      	ldr	r0, [pc, #40]	; (8001120 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x30>)
    lcd_int_active_line = (LTDC->BPCR & 0x7FF) - 1;
 80010f8:	f3c3 030a 	ubfx	r3, r3, #0, #11
 80010fc:	3b01      	subs	r3, #1
 80010fe:	b29b      	uxth	r3, r3
 8001100:	800b      	strh	r3, [r1, #0]
    lcd_int_porch_line = (LTDC->AWCR & 0x7FF) - 1;
 8001102:	6911      	ldr	r1, [r2, #16]
 8001104:	f3c1 010a 	ubfx	r1, r1, #0, #11
 8001108:	3901      	subs	r1, #1
 800110a:	8001      	strh	r1, [r0, #0]

    /* Sets the Line Interrupt position */
    LTDC->LIPCR = lcd_int_active_line;
 800110c:	6413      	str	r3, [r2, #64]	; 0x40
    /* Line Interrupt Enable            */
    LTDC->IER |= LTDC_IER_LIE;
 800110e:	6b53      	ldr	r3, [r2, #52]	; 0x34
 8001110:	f043 0301 	orr.w	r3, r3, #1
 8001114:	6353      	str	r3, [r2, #52]	; 0x34
}
 8001116:	4770      	bx	lr
 8001118:	40016800 	.word	0x40016800
 800111c:	200013ba 	.word	0x200013ba
 8001120:	200013b8 	.word	0x200013b8

08001124 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>:

uint16_t* TouchGFXGeneratedHAL::getTFTFrameBuffer() const
{
    return (uint16_t*)LTDC_Layer1->CFBAR;
 8001124:	4b01      	ldr	r3, [pc, #4]	; (800112c <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv+0x8>)
 8001126:	6a98      	ldr	r0, [r3, #40]	; 0x28
}
 8001128:	4770      	bx	lr
 800112a:	bf00      	nop
 800112c:	40016884 	.word	0x40016884

08001130 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>:

void TouchGFXGeneratedHAL::setTFTFrameBuffer(uint16_t* adr)
{
    LTDC_Layer1->CFBAR = (uint32_t)adr;
 8001130:	4b02      	ldr	r3, [pc, #8]	; (800113c <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt+0xc>)

    /* Reload immediate */
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 8001132:	2201      	movs	r2, #1
    LTDC_Layer1->CFBAR = (uint32_t)adr;
 8001134:	6299      	str	r1, [r3, #40]	; 0x28
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 8001136:	f843 2c60 	str.w	r2, [r3, #-96]
}
 800113a:	4770      	bx	lr
 800113c:	40016884 	.word	0x40016884

08001140 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>:

void TouchGFXGeneratedHAL::flushFrameBuffer(const touchgfx::Rect& rect)
{
    HAL::flushFrameBuffer(rect);
 8001140:	f007 b865 	b.w	800820e <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>

08001144 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>:
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8001144:	4b03      	ldr	r3, [pc, #12]	; (8001154 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv+0x10>)
 8001146:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 800114a:	609a      	str	r2, [r3, #8]
 800114c:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 8001150:	609a      	str	r2, [r3, #8]
}
 8001152:	4770      	bx	lr
 8001154:	e000e100 	.word	0xe000e100

08001158 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>:
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8001158:	4b08      	ldr	r3, [pc, #32]	; (800117c <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv+0x24>)
 800115a:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 800115e:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  __ASM volatile ("dsb 0xF":::"memory");
 8001162:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 8001166:	f3bf 8f6f 	isb	sy
 800116a:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 800116e:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  __ASM volatile ("dsb 0xF":::"memory");
 8001172:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 8001176:	f3bf 8f6f 	isb	sy
}
 800117a:	4770      	bx	lr
 800117c:	e000e100 	.word	0xe000e100

08001180 <_ZN20TouchGFXGeneratedHAL10initializeEv>:
{
 8001180:	b538      	push	{r3, r4, r5, lr}
 8001182:	4604      	mov	r4, r0
    HAL::initialize();
 8001184:	f007 fb24 	bl	80087d0 <_ZN8touchgfx3HAL10initializeEv>
    registerEventListener(*(touchgfx::Application::getInstance()));
 8001188:	6823      	ldr	r3, [r4, #0]
 800118a:	6cdd      	ldr	r5, [r3, #76]	; 0x4c
 800118c:	f009 fa42 	bl	800a614 <_ZN8touchgfx11Application11getInstanceEv>
 8001190:	4601      	mov	r1, r0
 8001192:	4620      	mov	r0, r4
 8001194:	47a8      	blx	r5
    setFrameBufferStartAddresses((void*)frameBuf, (void*)(frameBuf + sizeof(frameBuf) / (sizeof(uint32_t) * 2)), (void*)0);
 8001196:	6823      	ldr	r3, [r4, #0]
 8001198:	4a05      	ldr	r2, [pc, #20]	; (80011b0 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x30>)
 800119a:	6f5d      	ldr	r5, [r3, #116]	; 0x74
 800119c:	f5a2 3116 	sub.w	r1, r2, #153600	; 0x25800
 80011a0:	2300      	movs	r3, #0
 80011a2:	4620      	mov	r0, r4
 80011a4:	47a8      	blx	r5
        lockDMAToPorch = enableLock;
 80011a6:	2300      	movs	r3, #0
 80011a8:	f884 304a 	strb.w	r3, [r4, #74]	; 0x4a
}
 80011ac:	bd38      	pop	{r3, r4, r5, pc}
 80011ae:	bf00      	nop
 80011b0:	d0025800 	.word	0xd0025800

080011b4 <HAL_LTDC_LineEventCallback>:

extern "C"
{
    void HAL_LTDC_LineEventCallback(LTDC_HandleTypeDef* hltdc)
    {
        if (LTDC->LIPCR == lcd_int_active_line)
 80011b4:	4b13      	ldr	r3, [pc, #76]	; (8001204 <HAL_LTDC_LineEventCallback+0x50>)
 80011b6:	4a14      	ldr	r2, [pc, #80]	; (8001208 <HAL_LTDC_LineEventCallback+0x54>)
 80011b8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80011ba:	8811      	ldrh	r1, [r2, #0]
 80011bc:	428b      	cmp	r3, r1
    {
 80011be:	b510      	push	{r4, lr}
 80011c0:	4c12      	ldr	r4, [pc, #72]	; (800120c <HAL_LTDC_LineEventCallback+0x58>)
        if (LTDC->LIPCR == lcd_int_active_line)
 80011c2:	d113      	bne.n	80011ec <HAL_LTDC_LineEventCallback+0x38>
        {
            //entering active area
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_porch_line);
 80011c4:	4b12      	ldr	r3, [pc, #72]	; (8001210 <HAL_LTDC_LineEventCallback+0x5c>)
 80011c6:	8819      	ldrh	r1, [r3, #0]
 80011c8:	f003 f86a 	bl	80042a0 <HAL_LTDC_ProgramLineEvent>
        return instance;
 80011cc:	6822      	ldr	r2, [r4, #0]
        vSyncCnt++;
 80011ce:	f892 3066 	ldrb.w	r3, [r2, #102]	; 0x66
 80011d2:	3301      	adds	r3, #1
 80011d4:	f882 3066 	strb.w	r3, [r2, #102]	; 0x66
            HAL::getInstance()->vSync();
            OSWrappers::signalVSync();
 80011d8:	f7ff fc1c 	bl	8000a14 <_ZN8touchgfx10OSWrappers11signalVSyncEv>
            // Swap frame buffers immediately instead of waiting for the task to be scheduled in.
            // Note: task will also swap when it wakes up, but that operation is guarded and will not have
            // any effect if already swapped.
            HAL::getInstance()->swapFrameBuffers();
 80011dc:	6820      	ldr	r0, [r4, #0]
 80011de:	f007 fd7f 	bl	8008ce0 <_ZN8touchgfx3HAL16swapFrameBuffersEv>
            GPIO::set(GPIO::VSYNC_FREQ);
 80011e2:	2000      	movs	r0, #0
            //exiting active area
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_active_line);
            GPIO::clear(GPIO::VSYNC_FREQ);
            HAL::getInstance()->frontPorchEntered();
        }
    }
 80011e4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            GPIO::set(GPIO::VSYNC_FREQ);
 80011e8:	f7ff baa6 	b.w	8000738 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_active_line);
 80011ec:	f003 f858 	bl	80042a0 <HAL_LTDC_ProgramLineEvent>
            GPIO::clear(GPIO::VSYNC_FREQ);
 80011f0:	2000      	movs	r0, #0
 80011f2:	f7ff faa2 	bl	800073a <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
        return instance;
 80011f6:	6820      	ldr	r0, [r4, #0]
        allowDMATransfers();
 80011f8:	6803      	ldr	r3, [r0, #0]
    }
 80011fa:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80011fe:	699b      	ldr	r3, [r3, #24]
 8001200:	4718      	bx	r3
 8001202:	bf00      	nop
 8001204:	40016800 	.word	0x40016800
 8001208:	200013ba 	.word	0x200013ba
 800120c:	20012178 	.word	0x20012178
 8001210:	200013b8 	.word	0x200013b8

08001214 <SPI5_Write>:
/**
  * @brief  Writes a byte to device.
  * @param  Value: value to be written
  */
static void SPI5_Write(uint16_t Value)
{
 8001214:	b507      	push	{r0, r1, r2, lr}
  HAL_StatusTypeDef status = HAL_OK;
  
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 8001216:	4b06      	ldr	r3, [pc, #24]	; (8001230 <SPI5_Write+0x1c>)
{
 8001218:	a902      	add	r1, sp, #8
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 800121a:	681b      	ldr	r3, [r3, #0]
{
 800121c:	f821 0d02 	strh.w	r0, [r1, #-2]!
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 8001220:	2201      	movs	r2, #1
 8001222:	4804      	ldr	r0, [pc, #16]	; (8001234 <SPI5_Write+0x20>)
 8001224:	f003 fd37 	bl	8004c96 <HAL_SPI_Transmit>
  if(status != HAL_OK)
  {
    /* Re-Initialize the BUS */
    SPI5_Error();
  }
}
 8001228:	b003      	add	sp, #12
 800122a:	f85d fb04 	ldr.w	pc, [sp], #4
 800122e:	bf00      	nop
 8001230:	20000010 	.word	0x20000010
 8001234:	20012488 	.word	0x20012488

08001238 <SystemClock_Config>:
{
 8001238:	b5f0      	push	{r4, r5, r6, r7, lr}
 800123a:	b0a1      	sub	sp, #132	; 0x84
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 800123c:	2210      	movs	r2, #16
 800123e:	2100      	movs	r1, #0
 8001240:	a80a      	add	r0, sp, #40	; 0x28
 8001242:	f016 ff14 	bl	801806e <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8001246:	2214      	movs	r2, #20
 8001248:	2100      	movs	r1, #0
 800124a:	a803      	add	r0, sp, #12
 800124c:	f016 ff0f 	bl	801806e <memset>
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 8001250:	2100      	movs	r1, #0
 8001252:	2230      	movs	r2, #48	; 0x30
 8001254:	a814      	add	r0, sp, #80	; 0x50
 8001256:	f016 ff0a 	bl	801806e <memset>
  __HAL_RCC_PWR_CLK_ENABLE();
 800125a:	2400      	movs	r4, #0
 800125c:	4b22      	ldr	r3, [pc, #136]	; (80012e8 <SystemClock_Config+0xb0>)
 800125e:	9401      	str	r4, [sp, #4]
 8001260:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8001262:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 8001266:	641a      	str	r2, [r3, #64]	; 0x40
 8001268:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800126a:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800126e:	9301      	str	r3, [sp, #4]
 8001270:	9b01      	ldr	r3, [sp, #4]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8001272:	4b1e      	ldr	r3, [pc, #120]	; (80012ec <SystemClock_Config+0xb4>)
 8001274:	9402      	str	r4, [sp, #8]
 8001276:	681a      	ldr	r2, [r3, #0]
 8001278:	f442 4240 	orr.w	r2, r2, #49152	; 0xc000
 800127c:	601a      	str	r2, [r3, #0]
 800127e:	681b      	ldr	r3, [r3, #0]
 8001280:	f403 4340 	and.w	r3, r3, #49152	; 0xc000
 8001284:	9302      	str	r3, [sp, #8]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 8001286:	2201      	movs	r2, #1
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8001288:	9b02      	ldr	r3, [sp, #8]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 800128a:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 800128e:	e9cd 2308 	strd	r2, r3, [sp, #32]
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 8001292:	2502      	movs	r5, #2
 8001294:	f44f 0380 	mov.w	r3, #4194304	; 0x400000
 8001298:	e9cd 530e 	strd	r5, r3, [sp, #56]	; 0x38
  RCC_OscInitStruct.PLL.PLLN = 336;
 800129c:	2708      	movs	r7, #8
 800129e:	f44f 73a8 	mov.w	r3, #336	; 0x150
  RCC_OscInitStruct.PLL.PLLQ = 4;
 80012a2:	2604      	movs	r6, #4
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 80012a4:	a808      	add	r0, sp, #32
  RCC_OscInitStruct.PLL.PLLN = 336;
 80012a6:	e9cd 7310 	strd	r7, r3, [sp, #64]	; 0x40
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 80012aa:	9512      	str	r5, [sp, #72]	; 0x48
  RCC_OscInitStruct.PLL.PLLQ = 4;
 80012ac:	9613      	str	r6, [sp, #76]	; 0x4c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 80012ae:	f003 f815 	bl	80042dc <HAL_RCC_OscConfig>
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 80012b2:	230f      	movs	r3, #15
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 80012b4:	e9cd 3503 	strd	r3, r5, [sp, #12]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 80012b8:	f44f 51a0 	mov.w	r1, #5120	; 0x1400
 80012bc:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 80012c0:	e9cd 1306 	strd	r1, r3, [sp, #24]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 80012c4:	a803      	add	r0, sp, #12
 80012c6:	2105      	movs	r1, #5
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 80012c8:	9405      	str	r4, [sp, #20]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 80012ca:	f003 f9db 	bl	8004684 <HAL_RCC_ClockConfig>
  PeriphClkInitStruct.PLLSAI.PLLSAIN = 192;
 80012ce:	23c0      	movs	r3, #192	; 0xc0
 80012d0:	9318      	str	r3, [sp, #96]	; 0x60
  if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 80012d2:	a814      	add	r0, sp, #80	; 0x50
  PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_8;
 80012d4:	f44f 3300 	mov.w	r3, #131072	; 0x20000
  PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
 80012d8:	9714      	str	r7, [sp, #80]	; 0x50
  PeriphClkInitStruct.PLLSAI.PLLSAIR = 4;
 80012da:	961a      	str	r6, [sp, #104]	; 0x68
  PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_8;
 80012dc:	931d      	str	r3, [sp, #116]	; 0x74
  if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 80012de:	f003 fa99 	bl	8004814 <HAL_RCCEx_PeriphCLKConfig>
}
 80012e2:	b021      	add	sp, #132	; 0x84
 80012e4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80012e6:	bf00      	nop
 80012e8:	40023800 	.word	0x40023800
 80012ec:	40007000 	.word	0x40007000

080012f0 <main>:
{
 80012f0:	b580      	push	{r7, lr}
 80012f2:	b09a      	sub	sp, #104	; 0x68
  HAL_Init();
 80012f4:	f001 fe42 	bl	8002f7c <HAL_Init>
  SystemClock_Config();
 80012f8:	f7ff ff9e 	bl	8001238 <SystemClock_Config>
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80012fc:	2214      	movs	r2, #20
 80012fe:	2100      	movs	r1, #0
 8001300:	a80d      	add	r0, sp, #52	; 0x34
  __HAL_RCC_GPIOF_CLK_ENABLE();
 8001302:	2400      	movs	r4, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001304:	f016 feb3 	bl	801806e <memset>
  __HAL_RCC_GPIOF_CLK_ENABLE();
 8001308:	4bb4      	ldr	r3, [pc, #720]	; (80015dc <main+0x2ec>)
 800130a:	9400      	str	r4, [sp, #0]
 800130c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 800130e:	48b4      	ldr	r0, [pc, #720]	; (80015e0 <main+0x2f0>)
  hi2c3.Instance = I2C3;
 8001310:	4db4      	ldr	r5, [pc, #720]	; (80015e4 <main+0x2f4>)
  __HAL_RCC_GPIOF_CLK_ENABLE();
 8001312:	f042 0220 	orr.w	r2, r2, #32
 8001316:	631a      	str	r2, [r3, #48]	; 0x30
 8001318:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800131a:	f002 0220 	and.w	r2, r2, #32
 800131e:	9200      	str	r2, [sp, #0]
 8001320:	9a00      	ldr	r2, [sp, #0]
  __HAL_RCC_GPIOH_CLK_ENABLE();
 8001322:	9401      	str	r4, [sp, #4]
 8001324:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001326:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 800132a:	631a      	str	r2, [r3, #48]	; 0x30
 800132c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800132e:	f002 0280 	and.w	r2, r2, #128	; 0x80
 8001332:	9201      	str	r2, [sp, #4]
 8001334:	9a01      	ldr	r2, [sp, #4]
  __HAL_RCC_GPIOC_CLK_ENABLE();
 8001336:	9402      	str	r4, [sp, #8]
 8001338:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800133a:	f042 0204 	orr.w	r2, r2, #4
 800133e:	631a      	str	r2, [r3, #48]	; 0x30
 8001340:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001342:	f002 0204 	and.w	r2, r2, #4
 8001346:	9202      	str	r2, [sp, #8]
 8001348:	9a02      	ldr	r2, [sp, #8]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 800134a:	9403      	str	r4, [sp, #12]
 800134c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800134e:	f042 0201 	orr.w	r2, r2, #1
 8001352:	631a      	str	r2, [r3, #48]	; 0x30
 8001354:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001356:	f002 0201 	and.w	r2, r2, #1
 800135a:	9203      	str	r2, [sp, #12]
 800135c:	9a03      	ldr	r2, [sp, #12]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 800135e:	9404      	str	r4, [sp, #16]
 8001360:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001362:	f042 0202 	orr.w	r2, r2, #2
 8001366:	631a      	str	r2, [r3, #48]	; 0x30
 8001368:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800136a:	f002 0202 	and.w	r2, r2, #2
 800136e:	9204      	str	r2, [sp, #16]
 8001370:	9a04      	ldr	r2, [sp, #16]
  __HAL_RCC_GPIOG_CLK_ENABLE();
 8001372:	9405      	str	r4, [sp, #20]
 8001374:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001376:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 800137a:	631a      	str	r2, [r3, #48]	; 0x30
 800137c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800137e:	f002 0240 	and.w	r2, r2, #64	; 0x40
 8001382:	9205      	str	r2, [sp, #20]
 8001384:	9a05      	ldr	r2, [sp, #20]
  __HAL_RCC_GPIOE_CLK_ENABLE();
 8001386:	9406      	str	r4, [sp, #24]
 8001388:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800138a:	f042 0210 	orr.w	r2, r2, #16
 800138e:	631a      	str	r2, [r3, #48]	; 0x30
 8001390:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001392:	f002 0210 	and.w	r2, r2, #16
 8001396:	9206      	str	r2, [sp, #24]
 8001398:	9a06      	ldr	r2, [sp, #24]
  __HAL_RCC_GPIOD_CLK_ENABLE();
 800139a:	9407      	str	r4, [sp, #28]
 800139c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800139e:	f042 0208 	orr.w	r2, r2, #8
 80013a2:	631a      	str	r2, [r3, #48]	; 0x30
 80013a4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80013a6:	f003 0308 	and.w	r3, r3, #8
 80013aa:	9307      	str	r3, [sp, #28]
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 80013ac:	4622      	mov	r2, r4
 80013ae:	2104      	movs	r1, #4
  __HAL_RCC_GPIOD_CLK_ENABLE();
 80013b0:	9b07      	ldr	r3, [sp, #28]
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 80013b2:	f002 f99b 	bl	80036ec <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_12|GPIO_PIN_13, GPIO_PIN_RESET);
 80013b6:	4622      	mov	r2, r4
 80013b8:	f44f 5140 	mov.w	r1, #12288	; 0x3000
 80013bc:	488a      	ldr	r0, [pc, #552]	; (80015e8 <main+0x2f8>)
 80013be:	f002 f995 	bl	80036ec <HAL_GPIO_WritePin>
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80013c2:	2601      	movs	r6, #1
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 80013c4:	2702      	movs	r7, #2
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80013c6:	f04f 0804 	mov.w	r8, #4
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80013ca:	a90d      	add	r1, sp, #52	; 0x34
 80013cc:	4884      	ldr	r0, [pc, #528]	; (80015e0 <main+0x2f0>)
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80013ce:	940f      	str	r4, [sp, #60]	; 0x3c
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80013d0:	e9cd 860d 	strd	r8, r6, [sp, #52]	; 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 80013d4:	9710      	str	r7, [sp, #64]	; 0x40
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80013d6:	f002 f89d 	bl	8003514 <HAL_GPIO_Init>
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80013da:	a90d      	add	r1, sp, #52	; 0x34
  GPIO_InitStruct.Pin = GPIO_PIN_12|GPIO_PIN_13;
 80013dc:	f44f 5340 	mov.w	r3, #12288	; 0x3000
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80013e0:	4881      	ldr	r0, [pc, #516]	; (80015e8 <main+0x2f8>)
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80013e2:	e9cd 360d 	strd	r3, r6, [sp, #52]	; 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 80013e6:	e9cd 470f 	strd	r4, r7, [sp, #60]	; 0x3c
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80013ea:	f002 f893 	bl	8003514 <HAL_GPIO_Init>
  hcrc.Instance = CRC;
 80013ee:	487f      	ldr	r0, [pc, #508]	; (80015ec <main+0x2fc>)
 80013f0:	4b7f      	ldr	r3, [pc, #508]	; (80015f0 <main+0x300>)
 80013f2:	6003      	str	r3, [r0, #0]
  if (HAL_CRC_Init(&hcrc) != HAL_OK)
 80013f4:	f001 fe6a 	bl	80030cc <HAL_CRC_Init>
  hi2c3.Init.ClockSpeed = 100000;
 80013f8:	4a7e      	ldr	r2, [pc, #504]	; (80015f4 <main+0x304>)
 80013fa:	4b7f      	ldr	r3, [pc, #508]	; (80015f8 <main+0x308>)
  hi2c3.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 80013fc:	622c      	str	r4, [r5, #32]
  hi2c3.Init.ClockSpeed = 100000;
 80013fe:	e9c5 2300 	strd	r2, r3, [r5]
  if (HAL_I2C_Init(&hi2c3) != HAL_OK)
 8001402:	4628      	mov	r0, r5
  hi2c3.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 8001404:	f44f 4380 	mov.w	r3, #16384	; 0x4000
  hi2c3.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 8001408:	e9c5 3404 	strd	r3, r4, [r5, #16]
  hi2c3.Init.OwnAddress1 = 0;
 800140c:	e9c5 4402 	strd	r4, r4, [r5, #8]
  hi2c3.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 8001410:	e9c5 4406 	strd	r4, r4, [r5, #24]
  if (HAL_I2C_Init(&hi2c3) != HAL_OK)
 8001414:	f002 fb44 	bl	8003aa0 <HAL_I2C_Init>
  if (HAL_I2CEx_ConfigAnalogFilter(&hi2c3, I2C_ANALOGFILTER_DISABLE) != HAL_OK)
 8001418:	2110      	movs	r1, #16
 800141a:	4628      	mov	r0, r5
 800141c:	f002 fd88 	bl	8003f30 <HAL_I2CEx_ConfigAnalogFilter>
  if (HAL_I2CEx_ConfigDigitalFilter(&hi2c3, 0) != HAL_OK)
 8001420:	4621      	mov	r1, r4
 8001422:	4628      	mov	r0, r5
 8001424:	f002 fda3 	bl	8003f6e <HAL_I2CEx_ConfigDigitalFilter>
  hspi5.Instance = SPI5;
 8001428:	4874      	ldr	r0, [pc, #464]	; (80015fc <main+0x30c>)
  hspi5.Init.Mode = SPI_MODE_MASTER;
 800142a:	4975      	ldr	r1, [pc, #468]	; (8001600 <main+0x310>)
  hspi5.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 800142c:	6284      	str	r4, [r0, #40]	; 0x28
  hspi5.Init.Mode = SPI_MODE_MASTER;
 800142e:	f44f 7382 	mov.w	r3, #260	; 0x104
 8001432:	e9c0 1300 	strd	r1, r3, [r0]
  hspi5.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_16;
 8001436:	f44f 7500 	mov.w	r5, #512	; 0x200
 800143a:	2318      	movs	r3, #24
 800143c:	e9c0 5306 	strd	r5, r3, [r0, #24]
  hspi5.Init.CRCPolynomial = 10;
 8001440:	230a      	movs	r3, #10
  hsdram1.Instance = FMC_SDRAM_DEVICE;
 8001442:	4d70      	ldr	r5, [pc, #448]	; (8001604 <main+0x314>)
  hspi5.Init.CRCPolynomial = 10;
 8001444:	62c3      	str	r3, [r0, #44]	; 0x2c
  hspi5.Init.DataSize = SPI_DATASIZE_8BIT;
 8001446:	e9c0 4402 	strd	r4, r4, [r0, #8]
  hspi5.Init.CLKPhase = SPI_PHASE_1EDGE;
 800144a:	e9c0 4404 	strd	r4, r4, [r0, #16]
  hspi5.Init.TIMode = SPI_TIMODE_DISABLE;
 800144e:	e9c0 4408 	strd	r4, r4, [r0, #32]
  if (HAL_SPI_Init(&hspi5) != HAL_OK)
 8001452:	f003 fbe3 	bl	8004c1c <HAL_SPI_Init>
  hsdram1.Instance = FMC_SDRAM_DEVICE;
 8001456:	4b6c      	ldr	r3, [pc, #432]	; (8001608 <main+0x318>)
  SdramTiming.LoadToActiveDelay = 2;
 8001458:	970d      	str	r7, [sp, #52]	; 0x34
  hsdram1.Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
 800145a:	f04f 0c10 	mov.w	ip, #16
  hsdram1.Init.SDBank = FMC_SDRAM_BANK2;
 800145e:	e9c5 3600 	strd	r3, r6, [r5]
  hsdram1.Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
 8001462:	2340      	movs	r3, #64	; 0x40
 8001464:	e9c5 c304 	strd	ip, r3, [r5, #16]
  hsdram1.Init.CASLatency = FMC_SDRAM_CAS_LATENCY_3;
 8001468:	f44f 73c0 	mov.w	r3, #384	; 0x180
  hsdram1.Init.WriteProtection = FMC_SDRAM_WRITE_PROTECTION_DISABLE;
 800146c:	e9c5 3406 	strd	r3, r4, [r5, #24]
  hsdram1.Init.SDClockPeriod = FMC_SDRAM_CLOCK_PERIOD_2;
 8001470:	f44f 6300 	mov.w	r3, #2048	; 0x800
  hsdram1.Init.ReadBurst = FMC_SDRAM_RBURST_DISABLE;
 8001474:	e9c5 3408 	strd	r3, r4, [r5, #32]
  hsdram1.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_1;
 8001478:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 800147c:	62ab      	str	r3, [r5, #40]	; 0x28
  SdramTiming.WriteRecoveryTime = 3;
 800147e:	f04f 0a03 	mov.w	sl, #3
  SdramTiming.ExitSelfRefreshDelay = 7;
 8001482:	2307      	movs	r3, #7
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 8001484:	a90d      	add	r1, sp, #52	; 0x34
 8001486:	4628      	mov	r0, r5
  SdramTiming.SelfRefreshTime = 4;
 8001488:	e9cd 380e 	strd	r3, r8, [sp, #56]	; 0x38
  SdramTiming.RowCycleDelay = 7;
 800148c:	9310      	str	r3, [sp, #64]	; 0x40
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 800148e:	f04f 0908 	mov.w	r9, #8
  hsdram1.Init.RowBitsNumber = FMC_SDRAM_ROW_BITS_NUM_12;
 8001492:	e9c5 4802 	strd	r4, r8, [r5, #8]
  SdramTiming.RPDelay = 2;
 8001496:	e9cd a711 	strd	sl, r7, [sp, #68]	; 0x44
  SdramTiming.RCDDelay = 2;
 800149a:	9713      	str	r7, [sp, #76]	; 0x4c
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 800149c:	f003 fae4 	bl	8004a68 <HAL_SDRAM_Init>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 80014a0:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80014a4:	a909      	add	r1, sp, #36	; 0x24
 80014a6:	4628      	mov	r0, r5
  Command->AutoRefreshNumber       = 1;
 80014a8:	e9cd 960a 	strd	r9, r6, [sp, #40]	; 0x28
 __IO uint32_t tmpmrd =0;
 80014ac:	9408      	str	r4, [sp, #32]
  Command->CommandMode             = FMC_SDRAM_CMD_CLK_ENABLE;
 80014ae:	9609      	str	r6, [sp, #36]	; 0x24
  Command->ModeRegisterDefinition  = 0;
 80014b0:	940c      	str	r4, [sp, #48]	; 0x30
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 80014b2:	f003 faf9 	bl	8004aa8 <HAL_SDRAM_SendCommand>
  HAL_Delay(1);
 80014b6:	4630      	mov	r0, r6
 80014b8:	f001 fd8c 	bl	8002fd4 <HAL_Delay>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);  
 80014bc:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80014c0:	a909      	add	r1, sp, #36	; 0x24
 80014c2:	4628      	mov	r0, r5
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 80014c4:	e9cd 7909 	strd	r7, r9, [sp, #36]	; 0x24
  Command->ModeRegisterDefinition  = 0;
 80014c8:	e9cd 640b 	strd	r6, r4, [sp, #44]	; 0x2c
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);  
 80014cc:	f003 faec 	bl	8004aa8 <HAL_SDRAM_SendCommand>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 80014d0:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80014d4:	a909      	add	r1, sp, #36	; 0x24
 80014d6:	4628      	mov	r0, r5
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 80014d8:	e9cd a909 	strd	sl, r9, [sp, #36]	; 0x24
  Command->ModeRegisterDefinition  = 0;
 80014dc:	e9cd 840b 	strd	r8, r4, [sp, #44]	; 0x2c
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 80014e0:	f003 fae2 	bl	8004aa8 <HAL_SDRAM_SendCommand>
  tmpmrd = (uint32_t)SDRAM_MODEREG_BURST_LENGTH_1          |
 80014e4:	f44f 730c 	mov.w	r3, #560	; 0x230
 80014e8:	9308      	str	r3, [sp, #32]
  Command->ModeRegisterDefinition  = tmpmrd;
 80014ea:	9b08      	ldr	r3, [sp, #32]
 80014ec:	930c      	str	r3, [sp, #48]	; 0x30
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 80014ee:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80014f2:	a909      	add	r1, sp, #36	; 0x24
 80014f4:	4628      	mov	r0, r5
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 80014f6:	e9cd 8909 	strd	r8, r9, [sp, #36]	; 0x24
  Command->AutoRefreshNumber       = 1;
 80014fa:	960b      	str	r6, [sp, #44]	; 0x2c
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 80014fc:	f003 fad4 	bl	8004aa8 <HAL_SDRAM_SendCommand>
  HAL_SDRAM_ProgramRefreshRate(hsdram, REFRESH_COUNT); 
 8001500:	f240 516a 	movw	r1, #1386	; 0x56a
 8001504:	4628      	mov	r0, r5
 8001506:	f003 fae6 	bl	8004ad6 <HAL_SDRAM_ProgramRefreshRate>
  LTDC_LayerCfgTypeDef pLayerCfg = {0};
 800150a:	2234      	movs	r2, #52	; 0x34
 800150c:	4621      	mov	r1, r4
 800150e:	eb0d 0002 	add.w	r0, sp, r2
 8001512:	f016 fdac 	bl	801806e <memset>
  hltdc.Instance = LTDC;
 8001516:	4d3d      	ldr	r5, [pc, #244]	; (800160c <main+0x31c>)
 8001518:	4b3d      	ldr	r3, [pc, #244]	; (8001610 <main+0x320>)
  hltdc.Init.DEPolarity = LTDC_DEPOLARITY_AL;
 800151a:	612c      	str	r4, [r5, #16]
  hltdc.Instance = LTDC;
 800151c:	e9c5 3400 	strd	r3, r4, [r5]
  hltdc.Init.PCPolarity = LTDC_PCPOLARITY_IPC;
 8001520:	2309      	movs	r3, #9
  hltdc.Init.HorizontalSync = 9;
 8001522:	e9c5 3605 	strd	r3, r6, [r5, #20]
  hltdc.Init.VerticalSync = 1;
 8001526:	231d      	movs	r3, #29
  hltdc.Init.AccumulatedActiveW = 269;
 8001528:	f240 1e0d 	movw	lr, #269	; 0x10d
  hltdc.Init.AccumulatedHBP = 29;
 800152c:	e9c5 3a07 	strd	r3, sl, [r5, #28]
  hltdc.Init.AccumulatedActiveW = 269;
 8001530:	f240 1343 	movw	r3, #323	; 0x143
 8001534:	e9c5 e309 	strd	lr, r3, [r5, #36]	; 0x24
  hltdc.Init.TotalWidth = 279;
 8001538:	f240 1817 	movw	r8, #279	; 0x117
 800153c:	f240 1347 	movw	r3, #327	; 0x147
 8001540:	e9c5 830b 	strd	r8, r3, [r5, #44]	; 0x2c
  hltdc.Init.VSPolarity = LTDC_VSPOLARITY_AL;
 8001544:	e9c5 4402 	strd	r4, r4, [r5, #8]
  hltdc.Init.TotalHeigh = 327;
 8001548:	86ac      	strh	r4, [r5, #52]	; 0x34
  hltdc.Init.Backcolor.Green = 0;
 800154a:	f885 4036 	strb.w	r4, [r5, #54]	; 0x36
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 800154e:	4628      	mov	r0, r5
 8001550:	f002 fdb2 	bl	80040b8 <HAL_LTDC_Init>
  pLayerCfg.PixelFormat = LTDC_PIXEL_FORMAT_RGB565;
 8001554:	21ff      	movs	r1, #255	; 0xff
  pLayerCfg.WindowX0 = 0;
 8001556:	22f0      	movs	r2, #240	; 0xf0
  pLayerCfg.Alpha = 255;
 8001558:	e9cd 1412 	strd	r1, r4, [sp, #72]	; 0x48
  pLayerCfg.BlendingFactor1 = LTDC_BLENDING_FACTOR1_CA;
 800155c:	f44f 6980 	mov.w	r9, #1024	; 0x400
 8001560:	2105      	movs	r1, #5
  pLayerCfg.WindowY0 = 0;
 8001562:	f44f 73a0 	mov.w	r3, #320	; 0x140
  pLayerCfg.WindowX1 = 240;
 8001566:	e9cd 240e 	strd	r2, r4, [sp, #56]	; 0x38
  pLayerCfg.BlendingFactor1 = LTDC_BLENDING_FACTOR1_CA;
 800156a:	e9cd 9114 	strd	r9, r1, [sp, #80]	; 0x50
  pLayerCfg.FBStartAdress = 0;
 800156e:	e9cd 4216 	strd	r4, r2, [sp, #88]	; 0x58
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 8001572:	a90d      	add	r1, sp, #52	; 0x34
 8001574:	4622      	mov	r2, r4
 8001576:	4628      	mov	r0, r5
  pLayerCfg.WindowY1 = 320;
 8001578:	e9cd 3710 	strd	r3, r7, [sp, #64]	; 0x40
  LcdDrv = &ili9341_drv;
 800157c:	4d25      	ldr	r5, [pc, #148]	; (8001614 <main+0x324>)
  pLayerCfg.ImageWidth = 240;
 800157e:	9318      	str	r3, [sp, #96]	; 0x60
  pLayerCfg.WindowX0 = 0;
 8001580:	940d      	str	r4, [sp, #52]	; 0x34
  pLayerCfg.ImageHeight = 320;
 8001582:	f8ad 4064 	strh.w	r4, [sp, #100]	; 0x64
  pLayerCfg.Backcolor.Green = 0;
 8001586:	f88d 4066 	strb.w	r4, [sp, #102]	; 0x66
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 800158a:	f002 fe60 	bl	800424e <HAL_LTDC_ConfigLayer>
  LcdDrv = &ili9341_drv;
 800158e:	4b22      	ldr	r3, [pc, #136]	; (8001618 <main+0x328>)
 8001590:	602b      	str	r3, [r5, #0]
  LcdDrv->Init();
 8001592:	681b      	ldr	r3, [r3, #0]
 8001594:	4798      	blx	r3
  LcdDrv->DisplayOff();
 8001596:	682b      	ldr	r3, [r5, #0]
  hdma2d.Instance = DMA2D;
 8001598:	4d20      	ldr	r5, [pc, #128]	; (800161c <main+0x32c>)
  LcdDrv->DisplayOff();
 800159a:	68db      	ldr	r3, [r3, #12]
 800159c:	4798      	blx	r3
  hdma2d.Instance = DMA2D;
 800159e:	4b20      	ldr	r3, [pc, #128]	; (8001620 <main+0x330>)
  hdma2d.LayerCfg[1].InputColorMode = DMA2D_INPUT_RGB565;
 80015a0:	e9c5 470a 	strd	r4, r7, [r5, #40]	; 0x28
  hdma2d.LayerCfg[1].InputAlpha = 0;
 80015a4:	e9c5 440c 	strd	r4, r4, [r5, #48]	; 0x30
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
 80015a8:	4628      	mov	r0, r5
  hdma2d.Init.Mode = DMA2D_M2M;
 80015aa:	e9c5 3400 	strd	r3, r4, [r5]
  hdma2d.Init.OutputOffset = 0;
 80015ae:	e9c5 7402 	strd	r7, r4, [r5, #8]
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
 80015b2:	f001 fddd 	bl	8003170 <HAL_DMA2D_Init>
  if (HAL_DMA2D_ConfigLayer(&hdma2d, 1) != HAL_OK)
 80015b6:	4631      	mov	r1, r6
 80015b8:	4628      	mov	r0, r5
 80015ba:	f001 ff61 	bl	8003480 <HAL_DMA2D_ConfigLayer>
  MX_TouchGFX_Init();
 80015be:	f7ff f810 	bl	80005e2 <MX_TouchGFX_Init>
  osKernelInitialize();
 80015c2:	f003 ff6f 	bl	80054a4 <osKernelInitialize>
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 80015c6:	4a17      	ldr	r2, [pc, #92]	; (8001624 <main+0x334>)
 80015c8:	4817      	ldr	r0, [pc, #92]	; (8001628 <main+0x338>)
 80015ca:	4621      	mov	r1, r4
 80015cc:	f003 ffa4 	bl	8005518 <osThreadNew>
 80015d0:	4b16      	ldr	r3, [pc, #88]	; (800162c <main+0x33c>)
 80015d2:	6018      	str	r0, [r3, #0]
  osKernelStart();
 80015d4:	f003 ff80 	bl	80054d8 <osKernelStart>
 80015d8:	e7fe      	b.n	80015d8 <main+0x2e8>
 80015da:	bf00      	nop
 80015dc:	40023800 	.word	0x40023800
 80015e0:	40020800 	.word	0x40020800
 80015e4:	20012434 	.word	0x20012434
 80015e8:	40020c00 	.word	0x40020c00
 80015ec:	200124e0 	.word	0x200124e0
 80015f0:	40023000 	.word	0x40023000
 80015f4:	40005c00 	.word	0x40005c00
 80015f8:	000186a0 	.word	0x000186a0
 80015fc:	20012488 	.word	0x20012488
 8001600:	40015000 	.word	0x40015000
 8001604:	200125d4 	.word	0x200125d4
 8001608:	a0000140 	.word	0xa0000140
 800160c:	200124e8 	.word	0x200124e8
 8001610:	40016800 	.word	0x40016800
 8001614:	200013bc 	.word	0x200013bc
 8001618:	20000014 	.word	0x20000014
 800161c:	20012594 	.word	0x20012594
 8001620:	4002b000 	.word	0x4002b000
 8001624:	080194b4 	.word	0x080194b4
 8001628:	080005e7 	.word	0x080005e7
 800162c:	20012590 	.word	0x20012590

08001630 <IOE_Init>:
 8001630:	4770      	bx	lr

08001632 <IOE_ITConfig>:
 8001632:	4770      	bx	lr

08001634 <IOE_Write>:
{
 8001634:	b510      	push	{r4, lr}
 8001636:	b086      	sub	sp, #24
 8001638:	ac06      	add	r4, sp, #24
  status = HAL_I2C_Mem_Write(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, &Value, 1, I2c3Timeout); 
 800163a:	4b07      	ldr	r3, [pc, #28]	; (8001658 <IOE_Write+0x24>)
 800163c:	f804 2d01 	strb.w	r2, [r4, #-1]!
 8001640:	681b      	ldr	r3, [r3, #0]
 8001642:	9302      	str	r3, [sp, #8]
 8001644:	2301      	movs	r3, #1
 8001646:	460a      	mov	r2, r1
 8001648:	e9cd 4300 	strd	r4, r3, [sp]
 800164c:	4601      	mov	r1, r0
 800164e:	4803      	ldr	r0, [pc, #12]	; (800165c <IOE_Write+0x28>)
 8001650:	f002 fad2 	bl	8003bf8 <HAL_I2C_Mem_Write>
}
 8001654:	b006      	add	sp, #24
 8001656:	bd10      	pop	{r4, pc}
 8001658:	2000000c 	.word	0x2000000c
 800165c:	20012434 	.word	0x20012434

08001660 <IOE_Read>:
{
 8001660:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
  uint8_t value = 0;
 8001662:	aa06      	add	r2, sp, #24
 8001664:	2300      	movs	r3, #0
 8001666:	f802 3d01 	strb.w	r3, [r2, #-1]!
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 800166a:	4b08      	ldr	r3, [pc, #32]	; (800168c <IOE_Read+0x2c>)
 800166c:	681b      	ldr	r3, [r3, #0]
 800166e:	9302      	str	r3, [sp, #8]
 8001670:	2301      	movs	r3, #1
 8001672:	e9cd 2300 	strd	r2, r3, [sp]
 8001676:	460a      	mov	r2, r1
 8001678:	4601      	mov	r1, r0
 800167a:	4805      	ldr	r0, [pc, #20]	; (8001690 <IOE_Read+0x30>)
 800167c:	f002 fb4c 	bl	8003d18 <HAL_I2C_Mem_Read>
}
 8001680:	f89d 0017 	ldrb.w	r0, [sp, #23]
 8001684:	b007      	add	sp, #28
 8001686:	f85d fb04 	ldr.w	pc, [sp], #4
 800168a:	bf00      	nop
 800168c:	2000000c 	.word	0x2000000c
 8001690:	20012434 	.word	0x20012434

08001694 <IOE_ReadMultiple>:
{
 8001694:	b51f      	push	{r0, r1, r2, r3, r4, lr}
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, pBuffer, Length, I2c3Timeout);
 8001696:	4c08      	ldr	r4, [pc, #32]	; (80016b8 <IOE_ReadMultiple+0x24>)
 8001698:	6824      	ldr	r4, [r4, #0]
 800169a:	9200      	str	r2, [sp, #0]
 800169c:	e9cd 3401 	strd	r3, r4, [sp, #4]
 80016a0:	460a      	mov	r2, r1
 80016a2:	2301      	movs	r3, #1
 80016a4:	4601      	mov	r1, r0
 80016a6:	4805      	ldr	r0, [pc, #20]	; (80016bc <IOE_ReadMultiple+0x28>)
 80016a8:	f002 fb36 	bl	8003d18 <HAL_I2C_Mem_Read>
}
 80016ac:	3000      	adds	r0, #0
 80016ae:	bf18      	it	ne
 80016b0:	2001      	movne	r0, #1
 80016b2:	b004      	add	sp, #16
 80016b4:	bd10      	pop	{r4, pc}
 80016b6:	bf00      	nop
 80016b8:	2000000c 	.word	0x2000000c
 80016bc:	20012434 	.word	0x20012434

080016c0 <IOE_Delay>:
 80016c0:	f001 bc88 	b.w	8002fd4 <HAL_Delay>

080016c4 <LCD_IO_Init>:
  /* Re- Initialize the SPI communication BUS */
  //SPIx_Init();
}

void LCD_IO_Init(void)
{
 80016c4:	b510      	push	{r4, lr}
  /* Set or Reset the control line */
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 80016c6:	4c06      	ldr	r4, [pc, #24]	; (80016e0 <LCD_IO_Init+0x1c>)
 80016c8:	2200      	movs	r2, #0
 80016ca:	4620      	mov	r0, r4
 80016cc:	2104      	movs	r1, #4
 80016ce:	f002 f80d 	bl	80036ec <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 80016d2:	4620      	mov	r0, r4
 80016d4:	2201      	movs	r2, #1
 80016d6:	2104      	movs	r1, #4
}
 80016d8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 80016dc:	f002 b806 	b.w	80036ec <HAL_GPIO_WritePin>
 80016e0:	40020800 	.word	0x40020800

080016e4 <LCD_IO_WriteData>:

/**
  * @brief  Writes register value.
  */
void LCD_IO_WriteData(uint16_t RegValue) 
{
 80016e4:	b538      	push	{r3, r4, r5, lr}
  /* Set WRX to send data */
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
  
  /* Reset LCD control line(/CS) and Send data */  
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 80016e6:	4c0b      	ldr	r4, [pc, #44]	; (8001714 <LCD_IO_WriteData+0x30>)
{
 80016e8:	4605      	mov	r5, r0
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 80016ea:	2201      	movs	r2, #1
 80016ec:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 80016f0:	4809      	ldr	r0, [pc, #36]	; (8001718 <LCD_IO_WriteData+0x34>)
 80016f2:	f001 fffb 	bl	80036ec <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 80016f6:	2200      	movs	r2, #0
 80016f8:	2104      	movs	r1, #4
 80016fa:	4620      	mov	r0, r4
 80016fc:	f001 fff6 	bl	80036ec <HAL_GPIO_WritePin>
  SPI5_Write(RegValue);
 8001700:	4628      	mov	r0, r5
 8001702:	f7ff fd87 	bl	8001214 <SPI5_Write>
  
  /* Deselect: Chip Select high */
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001706:	4620      	mov	r0, r4
 8001708:	2201      	movs	r2, #1
 800170a:	2104      	movs	r1, #4
}
 800170c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001710:	f001 bfec 	b.w	80036ec <HAL_GPIO_WritePin>
 8001714:	40020800 	.word	0x40020800
 8001718:	40020c00 	.word	0x40020c00

0800171c <LCD_IO_WriteReg>:

/**
  * @brief  Writes register address.
  */
void LCD_IO_WriteReg(uint8_t Reg) 
{
 800171c:	b538      	push	{r3, r4, r5, lr}
  /* Reset WRX to send command */
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
  
  /* Reset LCD control line(/CS) and Send command */
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 800171e:	4c0b      	ldr	r4, [pc, #44]	; (800174c <LCD_IO_WriteReg+0x30>)
{
 8001720:	4605      	mov	r5, r0
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 8001722:	2200      	movs	r2, #0
 8001724:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8001728:	4809      	ldr	r0, [pc, #36]	; (8001750 <LCD_IO_WriteReg+0x34>)
 800172a:	f001 ffdf 	bl	80036ec <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 800172e:	2200      	movs	r2, #0
 8001730:	2104      	movs	r1, #4
 8001732:	4620      	mov	r0, r4
 8001734:	f001 ffda 	bl	80036ec <HAL_GPIO_WritePin>
  SPI5_Write(Reg);
 8001738:	4628      	mov	r0, r5
 800173a:	f7ff fd6b 	bl	8001214 <SPI5_Write>
  
  /* Deselect: Chip Select high */
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 800173e:	4620      	mov	r0, r4
 8001740:	2201      	movs	r2, #1
 8001742:	2104      	movs	r1, #4
}
 8001744:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001748:	f001 bfd0 	b.w	80036ec <HAL_GPIO_WritePin>
 800174c:	40020800 	.word	0x40020800
 8001750:	40020c00 	.word	0x40020c00

08001754 <LCD_IO_ReadData>:
  * @param  RegValue Address of the register to read
  * @param  ReadSize Number of bytes to read
  * @retval Content of the register value
  */
uint32_t LCD_IO_ReadData(uint16_t RegValue, uint8_t ReadSize) 
{
 8001754:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
  uint32_t readvalue = 0;

  /* Select: Chip Select low */
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001756:	4c14      	ldr	r4, [pc, #80]	; (80017a8 <LCD_IO_ReadData+0x54>)

  /* Reset WRX to send command */
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 8001758:	4d14      	ldr	r5, [pc, #80]	; (80017ac <LCD_IO_ReadData+0x58>)
{
 800175a:	4607      	mov	r7, r0
 800175c:	460e      	mov	r6, r1
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 800175e:	4620      	mov	r0, r4
 8001760:	2200      	movs	r2, #0
 8001762:	2104      	movs	r1, #4
 8001764:	f001 ffc2 	bl	80036ec <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 8001768:	2200      	movs	r2, #0
 800176a:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 800176e:	4628      	mov	r0, r5
 8001770:	f001 ffbc 	bl	80036ec <HAL_GPIO_WritePin>
  
  SPI5_Write(RegValue);
 8001774:	4638      	mov	r0, r7
 8001776:	f7ff fd4d 	bl	8001214 <SPI5_Write>
  status = HAL_SPI_Receive(&hspi5, (uint8_t*) &readvalue, ReadSize, Spi5Timeout);
 800177a:	4b0d      	ldr	r3, [pc, #52]	; (80017b0 <LCD_IO_ReadData+0x5c>)
 800177c:	480d      	ldr	r0, [pc, #52]	; (80017b4 <LCD_IO_ReadData+0x60>)
 800177e:	681b      	ldr	r3, [r3, #0]
 8001780:	4632      	mov	r2, r6
 8001782:	a901      	add	r1, sp, #4
 8001784:	f003 fc1f 	bl	8004fc6 <HAL_SPI_Receive>
  
  readvalue = SPI5_Read(ReadSize);

  /* Set WRX to send data */
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 8001788:	4628      	mov	r0, r5
 800178a:	2201      	movs	r2, #1
 800178c:	f44f 5100 	mov.w	r1, #8192	; 0x2000
  return readvalue;
 8001790:	9e01      	ldr	r6, [sp, #4]
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 8001792:	f001 ffab 	bl	80036ec <HAL_GPIO_WritePin>

  /* Deselect: Chip Select high */
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001796:	4620      	mov	r0, r4
 8001798:	2201      	movs	r2, #1
 800179a:	2104      	movs	r1, #4
 800179c:	f001 ffa6 	bl	80036ec <HAL_GPIO_WritePin>
  
  return readvalue;
}
 80017a0:	4630      	mov	r0, r6
 80017a2:	b003      	add	sp, #12
 80017a4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80017a6:	bf00      	nop
 80017a8:	40020800 	.word	0x40020800
 80017ac:	40020c00 	.word	0x40020c00
 80017b0:	20000010 	.word	0x20000010
 80017b4:	20012488 	.word	0x20012488

080017b8 <LCD_Delay>:
  * @brief  Wait for loop in ms.
  * @param  Delay in ms.
  */
void LCD_Delay(uint32_t Delay)
{
  HAL_Delay(Delay);
 80017b8:	f001 bc0c 	b.w	8002fd4 <HAL_Delay>

080017bc <HAL_TIM_PeriodElapsedCallback>:
void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
{
  /* USER CODE BEGIN Callback 0 */

  /* USER CODE END Callback 0 */
  if (htim->Instance == TIM6) {
 80017bc:	6802      	ldr	r2, [r0, #0]
 80017be:	4b03      	ldr	r3, [pc, #12]	; (80017cc <HAL_TIM_PeriodElapsedCallback+0x10>)
 80017c0:	429a      	cmp	r2, r3
 80017c2:	d101      	bne.n	80017c8 <HAL_TIM_PeriodElapsedCallback+0xc>
    HAL_IncTick();
 80017c4:	f001 bbf4 	b.w	8002fb0 <HAL_IncTick>
  }
  /* USER CODE BEGIN Callback 1 */

  /* USER CODE END Callback 1 */
}
 80017c8:	4770      	bx	lr
 80017ca:	bf00      	nop
 80017cc:	40001000 	.word	0x40001000

080017d0 <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 80017d0:	b082      	sub	sp, #8
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 80017d2:	4b0e      	ldr	r3, [pc, #56]	; (800180c <HAL_MspInit+0x3c>)
 80017d4:	2200      	movs	r2, #0
 80017d6:	9200      	str	r2, [sp, #0]
 80017d8:	6c59      	ldr	r1, [r3, #68]	; 0x44
 80017da:	f441 4180 	orr.w	r1, r1, #16384	; 0x4000
 80017de:	6459      	str	r1, [r3, #68]	; 0x44
 80017e0:	6c59      	ldr	r1, [r3, #68]	; 0x44
 80017e2:	f401 4180 	and.w	r1, r1, #16384	; 0x4000
 80017e6:	9100      	str	r1, [sp, #0]
 80017e8:	9900      	ldr	r1, [sp, #0]
  __HAL_RCC_PWR_CLK_ENABLE();
 80017ea:	9201      	str	r2, [sp, #4]
 80017ec:	6c19      	ldr	r1, [r3, #64]	; 0x40
 80017ee:	f041 5180 	orr.w	r1, r1, #268435456	; 0x10000000
 80017f2:	6419      	str	r1, [r3, #64]	; 0x40
 80017f4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80017f6:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80017fa:	9301      	str	r3, [sp, #4]
 80017fc:	9b01      	ldr	r3, [sp, #4]

  /* System interrupt init*/
  /* PendSV_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 80017fe:	210f      	movs	r1, #15
 8001800:	f06f 0001 	mvn.w	r0, #1

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 8001804:	b002      	add	sp, #8
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 8001806:	f001 bc0b 	b.w	8003020 <HAL_NVIC_SetPriority>
 800180a:	bf00      	nop
 800180c:	40023800 	.word	0x40023800

08001810 <HAL_CRC_MspInit>:
* @param hcrc: CRC handle pointer
* @retval None
*/
void HAL_CRC_MspInit(CRC_HandleTypeDef* hcrc)
{
  if(hcrc->Instance==CRC)
 8001810:	6802      	ldr	r2, [r0, #0]
 8001812:	4b09      	ldr	r3, [pc, #36]	; (8001838 <HAL_CRC_MspInit+0x28>)
 8001814:	429a      	cmp	r2, r3
{
 8001816:	b082      	sub	sp, #8
  if(hcrc->Instance==CRC)
 8001818:	d10b      	bne.n	8001832 <HAL_CRC_MspInit+0x22>
  {
  /* USER CODE BEGIN CRC_MspInit 0 */

  /* USER CODE END CRC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_CRC_CLK_ENABLE();
 800181a:	2300      	movs	r3, #0
 800181c:	9301      	str	r3, [sp, #4]
 800181e:	4b07      	ldr	r3, [pc, #28]	; (800183c <HAL_CRC_MspInit+0x2c>)
 8001820:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001822:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 8001826:	631a      	str	r2, [r3, #48]	; 0x30
 8001828:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800182a:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 800182e:	9301      	str	r3, [sp, #4]
 8001830:	9b01      	ldr	r3, [sp, #4]
  /* USER CODE BEGIN CRC_MspInit 1 */

  /* USER CODE END CRC_MspInit 1 */
  }

}
 8001832:	b002      	add	sp, #8
 8001834:	4770      	bx	lr
 8001836:	bf00      	nop
 8001838:	40023000 	.word	0x40023000
 800183c:	40023800 	.word	0x40023800

08001840 <HAL_DMA2D_MspInit>:
* This function configures the hardware resources used in this example
* @param hdma2d: DMA2D handle pointer
* @retval None
*/
void HAL_DMA2D_MspInit(DMA2D_HandleTypeDef* hdma2d)
{
 8001840:	b507      	push	{r0, r1, r2, lr}
  if(hdma2d->Instance==DMA2D)
 8001842:	4b0f      	ldr	r3, [pc, #60]	; (8001880 <HAL_DMA2D_MspInit+0x40>)
 8001844:	6802      	ldr	r2, [r0, #0]
 8001846:	429a      	cmp	r2, r3
 8001848:	d116      	bne.n	8001878 <HAL_DMA2D_MspInit+0x38>
  {
  /* USER CODE BEGIN DMA2D_MspInit 0 */

  /* USER CODE END DMA2D_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_DMA2D_CLK_ENABLE();
 800184a:	2200      	movs	r2, #0
 800184c:	f5a3 43f0 	sub.w	r3, r3, #30720	; 0x7800
 8001850:	9201      	str	r2, [sp, #4]
 8001852:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8001854:	f441 0100 	orr.w	r1, r1, #8388608	; 0x800000
 8001858:	6319      	str	r1, [r3, #48]	; 0x30
 800185a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800185c:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
 8001860:	9301      	str	r3, [sp, #4]
    /* DMA2D interrupt Init */
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
 8001862:	2105      	movs	r1, #5
 8001864:	205a      	movs	r0, #90	; 0x5a
    __HAL_RCC_DMA2D_CLK_ENABLE();
 8001866:	9b01      	ldr	r3, [sp, #4]
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
 8001868:	f001 fbda 	bl	8003020 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
 800186c:	205a      	movs	r0, #90	; 0x5a
  /* USER CODE BEGIN DMA2D_MspInit 1 */

  /* USER CODE END DMA2D_MspInit 1 */
  }

}
 800186e:	b003      	add	sp, #12
 8001870:	f85d eb04 	ldr.w	lr, [sp], #4
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
 8001874:	f001 bc08 	b.w	8003088 <HAL_NVIC_EnableIRQ>
}
 8001878:	b003      	add	sp, #12
 800187a:	f85d fb04 	ldr.w	pc, [sp], #4
 800187e:	bf00      	nop
 8001880:	4002b000 	.word	0x4002b000

08001884 <HAL_DMA2D_MspDeInit>:
* @param hdma2d: DMA2D handle pointer
* @retval None
*/
void HAL_DMA2D_MspDeInit(DMA2D_HandleTypeDef* hdma2d)
{
  if(hdma2d->Instance==DMA2D)
 8001884:	6802      	ldr	r2, [r0, #0]
 8001886:	4b06      	ldr	r3, [pc, #24]	; (80018a0 <HAL_DMA2D_MspDeInit+0x1c>)
 8001888:	429a      	cmp	r2, r3
 800188a:	d107      	bne.n	800189c <HAL_DMA2D_MspDeInit+0x18>
  {
  /* USER CODE BEGIN DMA2D_MspDeInit 0 */

  /* USER CODE END DMA2D_MspDeInit 0 */
    /* Peripheral clock disable */
    __HAL_RCC_DMA2D_CLK_DISABLE();
 800188c:	4a05      	ldr	r2, [pc, #20]	; (80018a4 <HAL_DMA2D_MspDeInit+0x20>)
 800188e:	6b13      	ldr	r3, [r2, #48]	; 0x30
 8001890:	f423 0300 	bic.w	r3, r3, #8388608	; 0x800000
 8001894:	6313      	str	r3, [r2, #48]	; 0x30

    /* DMA2D interrupt DeInit */
    HAL_NVIC_DisableIRQ(DMA2D_IRQn);
 8001896:	205a      	movs	r0, #90	; 0x5a
 8001898:	f001 bc04 	b.w	80030a4 <HAL_NVIC_DisableIRQ>
  /* USER CODE BEGIN DMA2D_MspDeInit 1 */

  /* USER CODE END DMA2D_MspDeInit 1 */
  }

}
 800189c:	4770      	bx	lr
 800189e:	bf00      	nop
 80018a0:	4002b000 	.word	0x4002b000
 80018a4:	40023800 	.word	0x40023800

080018a8 <HAL_I2C_MspInit>:
* This function configures the hardware resources used in this example
* @param hi2c: I2C handle pointer
* @retval None
*/
void HAL_I2C_MspInit(I2C_HandleTypeDef* hi2c)
{
 80018a8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80018ac:	4604      	mov	r4, r0
 80018ae:	b089      	sub	sp, #36	; 0x24
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80018b0:	2214      	movs	r2, #20
 80018b2:	2100      	movs	r1, #0
 80018b4:	a803      	add	r0, sp, #12
 80018b6:	f016 fbda 	bl	801806e <memset>
  if(hi2c->Instance==I2C3)
 80018ba:	6822      	ldr	r2, [r4, #0]
 80018bc:	4b24      	ldr	r3, [pc, #144]	; (8001950 <HAL_I2C_MspInit+0xa8>)
 80018be:	429a      	cmp	r2, r3
 80018c0:	d143      	bne.n	800194a <HAL_I2C_MspInit+0xa2>
  {
  /* USER CODE BEGIN I2C3_MspInit 0 */

  /* USER CODE END I2C3_MspInit 0 */
  
    __HAL_RCC_GPIOC_CLK_ENABLE();
 80018c2:	4c24      	ldr	r4, [pc, #144]	; (8001954 <HAL_I2C_MspInit+0xac>)
    GPIO_InitStruct.Pin = GPIO_PIN_9;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
    GPIO_InitStruct.Pull = GPIO_PULLUP;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80018c4:	4824      	ldr	r0, [pc, #144]	; (8001958 <HAL_I2C_MspInit+0xb0>)
    __HAL_RCC_GPIOC_CLK_ENABLE();
 80018c6:	2500      	movs	r5, #0
 80018c8:	9500      	str	r5, [sp, #0]
 80018ca:	6b23      	ldr	r3, [r4, #48]	; 0x30
 80018cc:	f043 0304 	orr.w	r3, r3, #4
 80018d0:	6323      	str	r3, [r4, #48]	; 0x30
 80018d2:	6b23      	ldr	r3, [r4, #48]	; 0x30
 80018d4:	f003 0304 	and.w	r3, r3, #4
 80018d8:	9300      	str	r3, [sp, #0]
 80018da:	9b00      	ldr	r3, [sp, #0]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 80018dc:	9501      	str	r5, [sp, #4]
 80018de:	6b23      	ldr	r3, [r4, #48]	; 0x30
 80018e0:	f043 0301 	orr.w	r3, r3, #1
 80018e4:	6323      	str	r3, [r4, #48]	; 0x30
 80018e6:	6b23      	ldr	r3, [r4, #48]	; 0x30
 80018e8:	f003 0301 	and.w	r3, r3, #1
 80018ec:	9301      	str	r3, [sp, #4]
 80018ee:	9b01      	ldr	r3, [sp, #4]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 80018f0:	f04f 0912 	mov.w	r9, #18
 80018f4:	f44f 7300 	mov.w	r3, #512	; 0x200
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80018f8:	f04f 0801 	mov.w	r8, #1
 80018fc:	2703      	movs	r7, #3
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 80018fe:	2604      	movs	r6, #4
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001900:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8001902:	e9cd 3903 	strd	r3, r9, [sp, #12]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001906:	e9cd 8705 	strd	r8, r7, [sp, #20]
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 800190a:	9607      	str	r6, [sp, #28]
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 800190c:	f001 fe02 	bl	8003514 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_8;
 8001910:	f44f 7380 	mov.w	r3, #256	; 0x100
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
    GPIO_InitStruct.Pull = GPIO_PULLUP;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001914:	a903      	add	r1, sp, #12
 8001916:	4811      	ldr	r0, [pc, #68]	; (800195c <HAL_I2C_MspInit+0xb4>)
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 8001918:	9607      	str	r6, [sp, #28]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 800191a:	e9cd 3903 	strd	r3, r9, [sp, #12]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800191e:	e9cd 8705 	strd	r8, r7, [sp, #20]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001922:	f001 fdf7 	bl	8003514 <HAL_GPIO_Init>

    /* Peripheral clock enable */
    __HAL_RCC_I2C3_CLK_ENABLE();
 8001926:	9502      	str	r5, [sp, #8]
 8001928:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800192a:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 800192e:	6423      	str	r3, [r4, #64]	; 0x40
 8001930:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8001932:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
 8001936:	9302      	str	r3, [sp, #8]
 8001938:	9b02      	ldr	r3, [sp, #8]
  /* USER CODE BEGIN I2C3_MspInit 1 */
  /* Force the I2C Peripheral Clock Reset */  
    __HAL_RCC_I2C3_FORCE_RESET();
 800193a:	6a23      	ldr	r3, [r4, #32]
 800193c:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 8001940:	6223      	str	r3, [r4, #32]
      
    /* Release the I2C Peripheral Clock Reset */  
    __HAL_RCC_I2C3_RELEASE_RESET(); 
 8001942:	6a23      	ldr	r3, [r4, #32]
 8001944:	f423 0300 	bic.w	r3, r3, #8388608	; 0x800000
 8001948:	6223      	str	r3, [r4, #32]
  /* USER CODE END I2C3_MspInit 1 */
  }

}
 800194a:	b009      	add	sp, #36	; 0x24
 800194c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8001950:	40005c00 	.word	0x40005c00
 8001954:	40023800 	.word	0x40023800
 8001958:	40020800 	.word	0x40020800
 800195c:	40020000 	.word	0x40020000

08001960 <HAL_LTDC_MspInit>:
* This function configures the hardware resources used in this example
* @param hltdc: LTDC handle pointer
* @retval None
*/
void HAL_LTDC_MspInit(LTDC_HandleTypeDef* hltdc)
{
 8001960:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001962:	4604      	mov	r4, r0
 8001964:	b08d      	sub	sp, #52	; 0x34
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001966:	2214      	movs	r2, #20
 8001968:	2100      	movs	r1, #0
 800196a:	a807      	add	r0, sp, #28
 800196c:	f016 fb7f 	bl	801806e <memset>
  if(hltdc->Instance==LTDC)
 8001970:	6822      	ldr	r2, [r4, #0]
 8001972:	4b57      	ldr	r3, [pc, #348]	; (8001ad0 <HAL_LTDC_MspInit+0x170>)
 8001974:	429a      	cmp	r2, r3
 8001976:	f040 80a8 	bne.w	8001aca <HAL_LTDC_MspInit+0x16a>
  {
  /* USER CODE BEGIN LTDC_MspInit 0 */

  /* USER CODE END LTDC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_LTDC_CLK_ENABLE();
 800197a:	f503 4350 	add.w	r3, r3, #53248	; 0xd000
 800197e:	2500      	movs	r5, #0
 8001980:	9500      	str	r5, [sp, #0]
 8001982:	6c5a      	ldr	r2, [r3, #68]	; 0x44
    GPIO_InitStruct.Pin = GPIO_PIN_10;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001984:	4853      	ldr	r0, [pc, #332]	; (8001ad4 <HAL_LTDC_MspInit+0x174>)
    __HAL_RCC_LTDC_CLK_ENABLE();
 8001986:	f042 6280 	orr.w	r2, r2, #67108864	; 0x4000000
 800198a:	645a      	str	r2, [r3, #68]	; 0x44
 800198c:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 800198e:	f002 6280 	and.w	r2, r2, #67108864	; 0x4000000
 8001992:	9200      	str	r2, [sp, #0]
 8001994:	9a00      	ldr	r2, [sp, #0]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8001996:	9501      	str	r5, [sp, #4]
 8001998:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800199a:	f042 0220 	orr.w	r2, r2, #32
 800199e:	631a      	str	r2, [r3, #48]	; 0x30
 80019a0:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80019a2:	f002 0220 	and.w	r2, r2, #32
 80019a6:	9201      	str	r2, [sp, #4]
 80019a8:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 80019aa:	9502      	str	r5, [sp, #8]
 80019ac:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80019ae:	f042 0201 	orr.w	r2, r2, #1
 80019b2:	631a      	str	r2, [r3, #48]	; 0x30
 80019b4:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80019b6:	f002 0201 	and.w	r2, r2, #1
 80019ba:	9202      	str	r2, [sp, #8]
 80019bc:	9a02      	ldr	r2, [sp, #8]
    __HAL_RCC_GPIOB_CLK_ENABLE();
 80019be:	9503      	str	r5, [sp, #12]
 80019c0:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80019c2:	f042 0202 	orr.w	r2, r2, #2
 80019c6:	631a      	str	r2, [r3, #48]	; 0x30
 80019c8:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80019ca:	f002 0202 	and.w	r2, r2, #2
 80019ce:	9203      	str	r2, [sp, #12]
 80019d0:	9a03      	ldr	r2, [sp, #12]
    __HAL_RCC_GPIOG_CLK_ENABLE();
 80019d2:	9504      	str	r5, [sp, #16]
 80019d4:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80019d6:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 80019da:	631a      	str	r2, [r3, #48]	; 0x30
 80019dc:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80019de:	f002 0240 	and.w	r2, r2, #64	; 0x40
 80019e2:	9204      	str	r2, [sp, #16]
 80019e4:	9a04      	ldr	r2, [sp, #16]
    __HAL_RCC_GPIOC_CLK_ENABLE();
 80019e6:	9505      	str	r5, [sp, #20]
 80019e8:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80019ea:	f042 0204 	orr.w	r2, r2, #4
 80019ee:	631a      	str	r2, [r3, #48]	; 0x30
 80019f0:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80019f2:	f002 0204 	and.w	r2, r2, #4
 80019f6:	9205      	str	r2, [sp, #20]
 80019f8:	9a05      	ldr	r2, [sp, #20]
    __HAL_RCC_GPIOD_CLK_ENABLE();
 80019fa:	9506      	str	r5, [sp, #24]
 80019fc:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80019fe:	f042 0208 	orr.w	r2, r2, #8
 8001a02:	631a      	str	r2, [r3, #48]	; 0x30
 8001a04:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001a06:	f003 0308 	and.w	r3, r3, #8
 8001a0a:	9306      	str	r3, [sp, #24]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001a0c:	2402      	movs	r4, #2
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001a0e:	260e      	movs	r6, #14
    __HAL_RCC_GPIOD_CLK_ENABLE();
 8001a10:	9b06      	ldr	r3, [sp, #24]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001a12:	940a      	str	r4, [sp, #40]	; 0x28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001a14:	f44f 6380 	mov.w	r3, #1024	; 0x400
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001a18:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001a1a:	e9cd 3407 	strd	r3, r4, [sp, #28]
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001a1e:	960b      	str	r6, [sp, #44]	; 0x2c
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001a20:	f001 fd78 	bl	8003514 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_3|GPIO_PIN_4|GPIO_PIN_6|GPIO_PIN_11 
 8001a24:	f641 0358 	movw	r3, #6232	; 0x1858
                          |GPIO_PIN_12;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001a28:	a907      	add	r1, sp, #28
 8001a2a:	482b      	ldr	r0, [pc, #172]	; (8001ad8 <HAL_LTDC_MspInit+0x178>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001a2c:	960b      	str	r6, [sp, #44]	; 0x2c
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001a2e:	e9cd 3407 	strd	r3, r4, [sp, #28]

    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 8001a32:	2709      	movs	r7, #9
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001a34:	e9cd 5409 	strd	r5, r4, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001a38:	f001 fd6c 	bl	8003514 <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
 8001a3c:	2303      	movs	r3, #3
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001a3e:	a907      	add	r1, sp, #28
 8001a40:	4826      	ldr	r0, [pc, #152]	; (8001adc <HAL_LTDC_MspInit+0x17c>)
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 8001a42:	970b      	str	r7, [sp, #44]	; 0x2c
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001a44:	e9cd 3407 	strd	r3, r4, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001a48:	e9cd 5409 	strd	r5, r4, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001a4c:	f001 fd62 	bl	8003514 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_11|GPIO_PIN_8|GPIO_PIN_9;
 8001a50:	f44f 6370 	mov.w	r3, #3840	; 0xf00
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001a54:	a907      	add	r1, sp, #28
 8001a56:	4821      	ldr	r0, [pc, #132]	; (8001adc <HAL_LTDC_MspInit+0x17c>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001a58:	960b      	str	r6, [sp, #44]	; 0x2c
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001a5a:	e9cd 3407 	strd	r3, r4, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001a5e:	e9cd 5409 	strd	r5, r4, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001a62:	f001 fd57 	bl	8003514 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7|GPIO_PIN_11;
 8001a66:	f44f 630c 	mov.w	r3, #2240	; 0x8c0
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001a6a:	a907      	add	r1, sp, #28
 8001a6c:	481c      	ldr	r0, [pc, #112]	; (8001ae0 <HAL_LTDC_MspInit+0x180>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001a6e:	960b      	str	r6, [sp, #44]	; 0x2c
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001a70:	e9cd 3407 	strd	r3, r4, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001a74:	e9cd 5409 	strd	r5, r4, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001a78:	f001 fd4c 	bl	8003514 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7;
 8001a7c:	23c0      	movs	r3, #192	; 0xc0
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001a7e:	a907      	add	r1, sp, #28
 8001a80:	4818      	ldr	r0, [pc, #96]	; (8001ae4 <HAL_LTDC_MspInit+0x184>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001a82:	960b      	str	r6, [sp, #44]	; 0x2c
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001a84:	e9cd 3407 	strd	r3, r4, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001a88:	e9cd 5409 	strd	r5, r4, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001a8c:	f001 fd42 	bl	8003514 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_3;
 8001a90:	2308      	movs	r3, #8
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001a92:	a907      	add	r1, sp, #28
 8001a94:	4814      	ldr	r0, [pc, #80]	; (8001ae8 <HAL_LTDC_MspInit+0x188>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001a96:	960b      	str	r6, [sp, #44]	; 0x2c
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001a98:	e9cd 3407 	strd	r3, r4, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001a9c:	e9cd 5409 	strd	r5, r4, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001aa0:	f001 fd38 	bl	8003514 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_12;
 8001aa4:	f44f 53a0 	mov.w	r3, #5120	; 0x1400
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001aa8:	a907      	add	r1, sp, #28
 8001aaa:	480d      	ldr	r0, [pc, #52]	; (8001ae0 <HAL_LTDC_MspInit+0x180>)
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 8001aac:	970b      	str	r7, [sp, #44]	; 0x2c
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001aae:	e9cd 3407 	strd	r3, r4, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001ab2:	e9cd 5409 	strd	r5, r4, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001ab6:	f001 fd2d 	bl	8003514 <HAL_GPIO_Init>

    /* LTDC interrupt Init */
    HAL_NVIC_SetPriority(LTDC_IRQn, 5, 0);
 8001aba:	2058      	movs	r0, #88	; 0x58
 8001abc:	462a      	mov	r2, r5
 8001abe:	2105      	movs	r1, #5
 8001ac0:	f001 faae 	bl	8003020 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(LTDC_IRQn);
 8001ac4:	2058      	movs	r0, #88	; 0x58
 8001ac6:	f001 fadf 	bl	8003088 <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN LTDC_MspInit 1 */

  /* USER CODE END LTDC_MspInit 1 */
  }

}
 8001aca:	b00d      	add	sp, #52	; 0x34
 8001acc:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001ace:	bf00      	nop
 8001ad0:	40016800 	.word	0x40016800
 8001ad4:	40021400 	.word	0x40021400
 8001ad8:	40020000 	.word	0x40020000
 8001adc:	40020400 	.word	0x40020400
 8001ae0:	40021800 	.word	0x40021800
 8001ae4:	40020800 	.word	0x40020800
 8001ae8:	40020c00 	.word	0x40020c00

08001aec <HAL_SPI_MspInit>:
* This function configures the hardware resources used in this example
* @param hspi: SPI handle pointer
* @retval None
*/
void HAL_SPI_MspInit(SPI_HandleTypeDef* hspi)
{
 8001aec:	b510      	push	{r4, lr}
 8001aee:	4604      	mov	r4, r0
 8001af0:	b088      	sub	sp, #32
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001af2:	2214      	movs	r2, #20
 8001af4:	2100      	movs	r1, #0
 8001af6:	a803      	add	r0, sp, #12
 8001af8:	f016 fab9 	bl	801806e <memset>
  if(hspi->Instance==SPI5)
 8001afc:	6822      	ldr	r2, [r4, #0]
 8001afe:	4b14      	ldr	r3, [pc, #80]	; (8001b50 <HAL_SPI_MspInit+0x64>)
 8001b00:	429a      	cmp	r2, r3
 8001b02:	d123      	bne.n	8001b4c <HAL_SPI_MspInit+0x60>
  {
  /* USER CODE BEGIN SPI5_MspInit 0 */

  /* USER CODE END SPI5_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_SPI5_CLK_ENABLE();
 8001b04:	f503 4368 	add.w	r3, r3, #59392	; 0xe800
 8001b08:	2100      	movs	r1, #0
 8001b0a:	9101      	str	r1, [sp, #4]
 8001b0c:	6c5a      	ldr	r2, [r3, #68]	; 0x44
    GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI5;
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001b0e:	4811      	ldr	r0, [pc, #68]	; (8001b54 <HAL_SPI_MspInit+0x68>)
    __HAL_RCC_SPI5_CLK_ENABLE();
 8001b10:	f442 1280 	orr.w	r2, r2, #1048576	; 0x100000
 8001b14:	645a      	str	r2, [r3, #68]	; 0x44
 8001b16:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8001b18:	f402 1280 	and.w	r2, r2, #1048576	; 0x100000
 8001b1c:	9201      	str	r2, [sp, #4]
 8001b1e:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8001b20:	9102      	str	r1, [sp, #8]
 8001b22:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001b24:	f042 0220 	orr.w	r2, r2, #32
 8001b28:	631a      	str	r2, [r3, #48]	; 0x30
 8001b2a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001b2c:	f003 0320 	and.w	r3, r3, #32
 8001b30:	9302      	str	r3, [sp, #8]
 8001b32:	9b02      	ldr	r3, [sp, #8]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001b34:	f44f 7260 	mov.w	r2, #896	; 0x380
 8001b38:	2302      	movs	r3, #2
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI5;
 8001b3a:	2103      	movs	r1, #3
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001b3c:	e9cd 2303 	strd	r2, r3, [sp, #12]
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI5;
 8001b40:	2305      	movs	r3, #5
 8001b42:	e9cd 1306 	strd	r1, r3, [sp, #24]
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001b46:	a903      	add	r1, sp, #12
 8001b48:	f001 fce4 	bl	8003514 <HAL_GPIO_Init>
  /* USER CODE BEGIN SPI5_MspInit 1 */

  /* USER CODE END SPI5_MspInit 1 */
  }

}
 8001b4c:	b008      	add	sp, #32
 8001b4e:	bd10      	pop	{r4, pc}
 8001b50:	40015000 	.word	0x40015000
 8001b54:	40021400 	.word	0x40021400

08001b58 <HAL_SDRAM_MspInit>:
  /* USER CODE BEGIN FMC_MspInit 1 */

  /* USER CODE END FMC_MspInit 1 */
}

void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef* hsdram){
 8001b58:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8001b5c:	b086      	sub	sp, #24
  GPIO_InitTypeDef GPIO_InitStruct ={0};
 8001b5e:	2214      	movs	r2, #20
 8001b60:	2100      	movs	r1, #0
 8001b62:	a801      	add	r0, sp, #4
 8001b64:	f016 fa83 	bl	801806e <memset>
  if (FMC_Initialized) {
 8001b68:	4b2b      	ldr	r3, [pc, #172]	; (8001c18 <HAL_SDRAM_MspInit+0xc0>)
 8001b6a:	681c      	ldr	r4, [r3, #0]
 8001b6c:	2c00      	cmp	r4, #0
 8001b6e:	d14f      	bne.n	8001c10 <HAL_SDRAM_MspInit+0xb8>
  FMC_Initialized = 1;
 8001b70:	f04f 0801 	mov.w	r8, #1
 8001b74:	f8c3 8000 	str.w	r8, [r3]
  __HAL_RCC_FMC_CLK_ENABLE();
 8001b78:	4b28      	ldr	r3, [pc, #160]	; (8001c1c <HAL_SDRAM_MspInit+0xc4>)
 8001b7a:	9400      	str	r4, [sp, #0]
 8001b7c:	6b9a      	ldr	r2, [r3, #56]	; 0x38
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001b7e:	4828      	ldr	r0, [pc, #160]	; (8001c20 <HAL_SDRAM_MspInit+0xc8>)
  __HAL_RCC_FMC_CLK_ENABLE();
 8001b80:	ea42 0208 	orr.w	r2, r2, r8
 8001b84:	639a      	str	r2, [r3, #56]	; 0x38
 8001b86:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8001b88:	ea03 0308 	and.w	r3, r3, r8
 8001b8c:	9300      	str	r3, [sp, #0]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001b8e:	2702      	movs	r7, #2
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001b90:	2603      	movs	r6, #3
 8001b92:	250c      	movs	r5, #12
  __HAL_RCC_FMC_CLK_ENABLE();
 8001b94:	9b00      	ldr	r3, [sp, #0]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001b96:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001b98:	f64f 033f 	movw	r3, #63551	; 0xf83f
 8001b9c:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001ba0:	e9cd 6504 	strd	r6, r5, [sp, #16]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001ba4:	f001 fcb6 	bl	8003514 <HAL_GPIO_Init>
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001ba8:	a901      	add	r1, sp, #4
 8001baa:	481e      	ldr	r0, [pc, #120]	; (8001c24 <HAL_SDRAM_MspInit+0xcc>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001bac:	9505      	str	r5, [sp, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001bae:	e9cd 8701 	strd	r8, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001bb2:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001bb6:	f001 fcad 	bl	8003514 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_4|GPIO_PIN_5 
 8001bba:	f248 1333 	movw	r3, #33075	; 0x8133
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001bbe:	a901      	add	r1, sp, #4
 8001bc0:	4819      	ldr	r0, [pc, #100]	; (8001c28 <HAL_SDRAM_MspInit+0xd0>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001bc2:	9505      	str	r5, [sp, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001bc4:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001bc8:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001bcc:	f001 fca2 	bl	8003514 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10 
 8001bd0:	f64f 7383 	movw	r3, #65411	; 0xff83
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8001bd4:	a901      	add	r1, sp, #4
 8001bd6:	4815      	ldr	r0, [pc, #84]	; (8001c2c <HAL_SDRAM_MspInit+0xd4>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001bd8:	9505      	str	r5, [sp, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001bda:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001bde:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8001be2:	f001 fc97 	bl	8003514 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10|GPIO_PIN_14 
 8001be6:	f24c 7303 	movw	r3, #50947	; 0xc703
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001bea:	a901      	add	r1, sp, #4
 8001bec:	4810      	ldr	r0, [pc, #64]	; (8001c30 <HAL_SDRAM_MspInit+0xd8>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001bee:	9505      	str	r5, [sp, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001bf0:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001bf4:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001bf8:	f001 fc8c 	bl	8003514 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_6;
 8001bfc:	2360      	movs	r3, #96	; 0x60
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001bfe:	a901      	add	r1, sp, #4
 8001c00:	480c      	ldr	r0, [pc, #48]	; (8001c34 <HAL_SDRAM_MspInit+0xdc>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001c02:	9505      	str	r5, [sp, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001c04:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001c08:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001c0c:	f001 fc82 	bl	8003514 <HAL_GPIO_Init>
  /* USER CODE END SDRAM_MspInit 0 */
  HAL_FMC_MspInit();
  /* USER CODE BEGIN SDRAM_MspInit 1 */

  /* USER CODE END SDRAM_MspInit 1 */
}
 8001c10:	b006      	add	sp, #24
 8001c12:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8001c16:	bf00      	nop
 8001c18:	200013c0 	.word	0x200013c0
 8001c1c:	40023800 	.word	0x40023800
 8001c20:	40021400 	.word	0x40021400
 8001c24:	40020800 	.word	0x40020800
 8001c28:	40021800 	.word	0x40021800
 8001c2c:	40021000 	.word	0x40021000
 8001c30:	40020c00 	.word	0x40020c00
 8001c34:	40020400 	.word	0x40020400

08001c38 <HAL_InitTick>:
  *         reset by HAL_Init() or at any time when clock is configured, by HAL_RCC_ClockConfig(). 
  * @param  TickPriority: Tick interrupt priority.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 8001c38:	b530      	push	{r4, r5, lr}
  uint32_t              uwTimclock = 0;
  uint32_t              uwPrescalerValue = 0;
  uint32_t              pFLatency;
  
  /*Configure the TIM6 IRQ priority */
  HAL_NVIC_SetPriority(TIM6_DAC_IRQn, TickPriority ,0); 
 8001c3a:	4601      	mov	r1, r0
{
 8001c3c:	b089      	sub	sp, #36	; 0x24
  HAL_NVIC_SetPriority(TIM6_DAC_IRQn, TickPriority ,0); 
 8001c3e:	2200      	movs	r2, #0
 8001c40:	2036      	movs	r0, #54	; 0x36
 8001c42:	f001 f9ed 	bl	8003020 <HAL_NVIC_SetPriority>
  
  /* Enable the TIM6 global Interrupt */
  HAL_NVIC_EnableIRQ(TIM6_DAC_IRQn); 
 8001c46:	2036      	movs	r0, #54	; 0x36
 8001c48:	f001 fa1e 	bl	8003088 <HAL_NVIC_EnableIRQ>
  
  /* Enable TIM6 clock */
  __HAL_RCC_TIM6_CLK_ENABLE();
 8001c4c:	2500      	movs	r5, #0
 8001c4e:	4b15      	ldr	r3, [pc, #84]	; (8001ca4 <HAL_InitTick+0x6c>)
 8001c50:	9502      	str	r5, [sp, #8]
 8001c52:	6c1a      	ldr	r2, [r3, #64]	; 0x40
   
  /* Compute the prescaler value to have TIM6 counter clock equal to 1MHz */
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000) - 1);
  
  /* Initialize TIM6 */
  htim6.Instance = TIM6;
 8001c54:	4c14      	ldr	r4, [pc, #80]	; (8001ca8 <HAL_InitTick+0x70>)
  __HAL_RCC_TIM6_CLK_ENABLE();
 8001c56:	f042 0210 	orr.w	r2, r2, #16
 8001c5a:	641a      	str	r2, [r3, #64]	; 0x40
 8001c5c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001c5e:	f003 0310 	and.w	r3, r3, #16
 8001c62:	9302      	str	r3, [sp, #8]
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 8001c64:	a901      	add	r1, sp, #4
 8001c66:	a803      	add	r0, sp, #12
  __HAL_RCC_TIM6_CLK_ENABLE();
 8001c68:	9b02      	ldr	r3, [sp, #8]
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 8001c6a:	f002 fdb5 	bl	80047d8 <HAL_RCC_GetClockConfig>
  uwTimclock = 2*HAL_RCC_GetPCLK1Freq();
 8001c6e:	f002 fda3 	bl	80047b8 <HAL_RCC_GetPCLK1Freq>
  htim6.Instance = TIM6;
 8001c72:	4b0e      	ldr	r3, [pc, #56]	; (8001cac <HAL_InitTick+0x74>)
 8001c74:	6023      	str	r3, [r4, #0]
  + Period = [(TIM6CLK/1000) - 1]. to have a (1/1000) s time base.
  + Prescaler = (uwTimclock/1000000 - 1) to have a 1MHz counter clock.
  + ClockDivision = 0
  + Counter direction = Up
  */
  htim6.Init.Period = (1000000 / 1000) - 1;
 8001c76:	f240 33e7 	movw	r3, #999	; 0x3e7
 8001c7a:	60e3      	str	r3, [r4, #12]
  uwTimclock = 2*HAL_RCC_GetPCLK1Freq();
 8001c7c:	0040      	lsls	r0, r0, #1
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000) - 1);
 8001c7e:	4b0c      	ldr	r3, [pc, #48]	; (8001cb0 <HAL_InitTick+0x78>)
 8001c80:	fbb0 f0f3 	udiv	r0, r0, r3
 8001c84:	3801      	subs	r0, #1
  htim6.Init.Prescaler = uwPrescalerValue;
 8001c86:	6060      	str	r0, [r4, #4]
  htim6.Init.ClockDivision = 0;
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
  if(HAL_TIM_Base_Init(&htim6) == HAL_OK)
 8001c88:	4620      	mov	r0, r4
  htim6.Init.ClockDivision = 0;
 8001c8a:	6125      	str	r5, [r4, #16]
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
 8001c8c:	60a5      	str	r5, [r4, #8]
  if(HAL_TIM_Base_Init(&htim6) == HAL_OK)
 8001c8e:	f003 fb4f 	bl	8005330 <HAL_TIM_Base_Init>
 8001c92:	b920      	cbnz	r0, 8001c9e <HAL_InitTick+0x66>
  {
    /* Start the TIM time Base generation in interrupt mode */
    return HAL_TIM_Base_Start_IT(&htim6);
 8001c94:	4620      	mov	r0, r4
 8001c96:	f003 fa2e 	bl	80050f6 <HAL_TIM_Base_Start_IT>
  }
  
  /* Return function status */
  return HAL_ERROR;
}
 8001c9a:	b009      	add	sp, #36	; 0x24
 8001c9c:	bd30      	pop	{r4, r5, pc}
  return HAL_ERROR;
 8001c9e:	2001      	movs	r0, #1
 8001ca0:	e7fb      	b.n	8001c9a <HAL_InitTick+0x62>
 8001ca2:	bf00      	nop
 8001ca4:	40023800 	.word	0x40023800
 8001ca8:	20012608 	.word	0x20012608
 8001cac:	40001000 	.word	0x40001000
 8001cb0:	000f4240 	.word	0x000f4240

08001cb4 <NMI_Handler>:

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */

  /* USER CODE END NonMaskableInt_IRQn 1 */
}
 8001cb4:	4770      	bx	lr

08001cb6 <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 8001cb6:	e7fe      	b.n	8001cb6 <HardFault_Handler>

08001cb8 <MemManage_Handler>:

/**
  * @brief This function handles Memory management fault.
  */
void MemManage_Handler(void)
{
 8001cb8:	e7fe      	b.n	8001cb8 <MemManage_Handler>

08001cba <BusFault_Handler>:

/**
  * @brief This function handles Pre-fetch fault, memory access fault.
  */
void BusFault_Handler(void)
{
 8001cba:	e7fe      	b.n	8001cba <BusFault_Handler>

08001cbc <UsageFault_Handler>:

/**
  * @brief This function handles Undefined instruction or illegal state.
  */
void UsageFault_Handler(void)
{
 8001cbc:	e7fe      	b.n	8001cbc <UsageFault_Handler>

08001cbe <DebugMon_Handler>:
 8001cbe:	4770      	bx	lr

08001cc0 <TIM6_DAC_IRQHandler>:
void TIM6_DAC_IRQHandler(void)
{
  /* USER CODE BEGIN TIM6_DAC_IRQn 0 */

  /* USER CODE END TIM6_DAC_IRQn 0 */
  HAL_TIM_IRQHandler(&htim6);
 8001cc0:	4801      	ldr	r0, [pc, #4]	; (8001cc8 <TIM6_DAC_IRQHandler+0x8>)
 8001cc2:	f003 ba2c 	b.w	800511e <HAL_TIM_IRQHandler>
 8001cc6:	bf00      	nop
 8001cc8:	20012608 	.word	0x20012608

08001ccc <LTDC_IRQHandler>:
void LTDC_IRQHandler(void)
{
  /* USER CODE BEGIN LTDC_IRQn 0 */

  /* USER CODE END LTDC_IRQn 0 */
  HAL_LTDC_IRQHandler(&hltdc);
 8001ccc:	4801      	ldr	r0, [pc, #4]	; (8001cd4 <LTDC_IRQHandler+0x8>)
 8001cce:	f002 ba61 	b.w	8004194 <HAL_LTDC_IRQHandler>
 8001cd2:	bf00      	nop
 8001cd4:	200124e8 	.word	0x200124e8

08001cd8 <DMA2D_IRQHandler>:
void DMA2D_IRQHandler(void)
{
  /* USER CODE BEGIN DMA2D_IRQn 0 */

  /* USER CODE END DMA2D_IRQn 0 */
  HAL_DMA2D_IRQHandler(&hdma2d);
 8001cd8:	4801      	ldr	r0, [pc, #4]	; (8001ce0 <DMA2D_IRQHandler+0x8>)
 8001cda:	f001 bb47 	b.w	800336c <HAL_DMA2D_IRQHandler>
 8001cde:	bf00      	nop
 8001ce0:	20012594 	.word	0x20012594

08001ce4 <_getpid>:
}

int _getpid(void)
{
	return 1;
}
 8001ce4:	2001      	movs	r0, #1
 8001ce6:	4770      	bx	lr

08001ce8 <_kill>:

int _kill(int pid, int sig)
{
 8001ce8:	b508      	push	{r3, lr}
	errno = EINVAL;
 8001cea:	f016 f969 	bl	8017fc0 <__errno>
 8001cee:	2316      	movs	r3, #22
 8001cf0:	6003      	str	r3, [r0, #0]
	return -1;
}
 8001cf2:	f04f 30ff 	mov.w	r0, #4294967295
 8001cf6:	bd08      	pop	{r3, pc}

08001cf8 <_exit>:

void _exit (int status)
{
 8001cf8:	b508      	push	{r3, lr}
	errno = EINVAL;
 8001cfa:	f016 f961 	bl	8017fc0 <__errno>
 8001cfe:	2316      	movs	r3, #22
 8001d00:	6003      	str	r3, [r0, #0]
 8001d02:	e7fe      	b.n	8001d02 <_exit+0xa>

08001d04 <_read>:
	_kill(status, -1);
	while (1) {}		/* Make sure we hang here */
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8001d04:	b570      	push	{r4, r5, r6, lr}
 8001d06:	460e      	mov	r6, r1
 8001d08:	4615      	mov	r5, r2
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001d0a:	460c      	mov	r4, r1
 8001d0c:	1ba3      	subs	r3, r4, r6
 8001d0e:	429d      	cmp	r5, r3
 8001d10:	dc01      	bgt.n	8001d16 <_read+0x12>
	{
		*ptr++ = __io_getchar();
	}

return len;
}
 8001d12:	4628      	mov	r0, r5
 8001d14:	bd70      	pop	{r4, r5, r6, pc}
		*ptr++ = __io_getchar();
 8001d16:	f3af 8000 	nop.w
 8001d1a:	f804 0b01 	strb.w	r0, [r4], #1
 8001d1e:	e7f5      	b.n	8001d0c <_read+0x8>

08001d20 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8001d20:	b570      	push	{r4, r5, r6, lr}
 8001d22:	460e      	mov	r6, r1
 8001d24:	4615      	mov	r5, r2
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001d26:	460c      	mov	r4, r1
 8001d28:	1ba3      	subs	r3, r4, r6
 8001d2a:	429d      	cmp	r5, r3
 8001d2c:	dc01      	bgt.n	8001d32 <_write+0x12>
	{
		__io_putchar(*ptr++);
	}
	return len;
}
 8001d2e:	4628      	mov	r0, r5
 8001d30:	bd70      	pop	{r4, r5, r6, pc}
		__io_putchar(*ptr++);
 8001d32:	f814 0b01 	ldrb.w	r0, [r4], #1
 8001d36:	f3af 8000 	nop.w
 8001d3a:	e7f5      	b.n	8001d28 <_write+0x8>

08001d3c <_close>:

int _close(int file)
{
	return -1;
}
 8001d3c:	f04f 30ff 	mov.w	r0, #4294967295
 8001d40:	4770      	bx	lr

08001d42 <_fstat>:


int _fstat(int file, struct stat *st)
{
	st->st_mode = S_IFCHR;
 8001d42:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 8001d46:	604b      	str	r3, [r1, #4]
	return 0;
}
 8001d48:	2000      	movs	r0, #0
 8001d4a:	4770      	bx	lr

08001d4c <_isatty>:

int _isatty(int file)
{
	return 1;
}
 8001d4c:	2001      	movs	r0, #1
 8001d4e:	4770      	bx	lr

08001d50 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
	return 0;
}
 8001d50:	2000      	movs	r0, #0
 8001d52:	4770      	bx	lr

08001d54 <_sbrk>:
/**
 _sbrk
 Increase program data space. Malloc and related functions depend on this
**/
caddr_t _sbrk(int incr)
{
 8001d54:	b508      	push	{r3, lr}
	extern char end asm("end");
	static char *heap_end;
	char *prev_heap_end;

	if (heap_end == 0)
 8001d56:	4b0a      	ldr	r3, [pc, #40]	; (8001d80 <_sbrk+0x2c>)
 8001d58:	6819      	ldr	r1, [r3, #0]
{
 8001d5a:	4602      	mov	r2, r0
	if (heap_end == 0)
 8001d5c:	b909      	cbnz	r1, 8001d62 <_sbrk+0xe>
		heap_end = &end;
 8001d5e:	4909      	ldr	r1, [pc, #36]	; (8001d84 <_sbrk+0x30>)
 8001d60:	6019      	str	r1, [r3, #0]

	prev_heap_end = heap_end;
 8001d62:	6818      	ldr	r0, [r3, #0]
	if (heap_end + incr > stack_ptr)
 8001d64:	4669      	mov	r1, sp
 8001d66:	4402      	add	r2, r0
 8001d68:	428a      	cmp	r2, r1
 8001d6a:	d906      	bls.n	8001d7a <_sbrk+0x26>
	{
		errno = ENOMEM;
 8001d6c:	f016 f928 	bl	8017fc0 <__errno>
 8001d70:	230c      	movs	r3, #12
 8001d72:	6003      	str	r3, [r0, #0]
		return (caddr_t) -1;
 8001d74:	f04f 30ff 	mov.w	r0, #4294967295
	}

	heap_end += incr;

	return (caddr_t) prev_heap_end;
}
 8001d78:	bd08      	pop	{r3, pc}
	heap_end += incr;
 8001d7a:	601a      	str	r2, [r3, #0]
	return (caddr_t) prev_heap_end;
 8001d7c:	e7fc      	b.n	8001d78 <_sbrk+0x24>
 8001d7e:	bf00      	nop
 8001d80:	200013c4 	.word	0x200013c4
 8001d84:	20012690 	.word	0x20012690

08001d88 <_ZN23ApplicationFontProviderD1Ev>:
    static const touchgfx::FontId LARGE = 1;   // verdana_40_4bpp
    static const touchgfx::FontId SMALL = 2;   // verdana_10_4bpp
    static const uint16_t NUMBER_OF_FONTS = 3;
};

class ApplicationFontProvider : public touchgfx::FontProvider
 8001d88:	4770      	bx	lr

08001d8a <_ZN23ApplicationFontProviderD0Ev>:
 8001d8a:	b510      	push	{r4, lr}
 8001d8c:	2104      	movs	r1, #4
 8001d8e:	4604      	mov	r4, r0
 8001d90:	f016 f8b8 	bl	8017f04 <_ZdlPvj>
 8001d94:	4620      	mov	r0, r4
 8001d96:	bd10      	pop	{r4, pc}

08001d98 <_ZN23ApplicationFontProvider7getFontEt>:
#include <fonts/GeneratedFont.hpp>
#include <texts/TypedTextDatabase.hpp>

touchgfx::Font* ApplicationFontProvider::getFont(touchgfx::FontId typography)
{
    switch (typography)
 8001d98:	2901      	cmp	r1, #1
{
 8001d9a:	b508      	push	{r3, lr}
    switch (typography)
 8001d9c:	d008      	beq.n	8001db0 <_ZN23ApplicationFontProvider7getFontEt+0x18>
 8001d9e:	d303      	bcc.n	8001da8 <_ZN23ApplicationFontProvider7getFontEt+0x10>
 8001da0:	2902      	cmp	r1, #2
 8001da2:	d009      	beq.n	8001db8 <_ZN23ApplicationFontProvider7getFontEt+0x20>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[1]);
    case Typography::SMALL:
        // verdana_10_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
    default:
        return 0;
 8001da4:	2000      	movs	r0, #0
 8001da6:	e002      	b.n	8001dae <_ZN23ApplicationFontProvider7getFontEt+0x16>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[0]);
 8001da8:	f000 fb52 	bl	8002450 <_ZN17TypedTextDatabase8getFontsEv>
 8001dac:	6800      	ldr	r0, [r0, #0]
    }
}
 8001dae:	bd08      	pop	{r3, pc}
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[1]);
 8001db0:	f000 fb4e 	bl	8002450 <_ZN17TypedTextDatabase8getFontsEv>
 8001db4:	6840      	ldr	r0, [r0, #4]
 8001db6:	e7fa      	b.n	8001dae <_ZN23ApplicationFontProvider7getFontEt+0x16>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
 8001db8:	f000 fb4a 	bl	8002450 <_ZN17TypedTextDatabase8getFontsEv>
 8001dbc:	6880      	ldr	r0, [r0, #8]
 8001dbe:	e7f6      	b.n	8001dae <_ZN23ApplicationFontProvider7getFontEt+0x16>

08001dc0 <_ZN14BitmapDatabase11getInstanceEv>:
namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance()
{
    return bitmap_database;
}
 8001dc0:	4800      	ldr	r0, [pc, #0]	; (8001dc4 <_ZN14BitmapDatabase11getInstanceEv+0x4>)
 8001dc2:	4770      	bx	lr
 8001dc4:	080194f8 	.word	0x080194f8

08001dc8 <_ZN14BitmapDatabase15getInstanceSizeEv>:

uint16_t getInstanceSize()
{
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
}
 8001dc8:	2007      	movs	r0, #7
 8001dca:	4770      	bx	lr

08001dcc <_ZNK8touchgfx4Font8getGlyphEt>:
     *
     * @return A pointer to the glyph node or null if the glyph was not found.
     *
     * @see TextProvider::getNextLigature
     */
    virtual const GlyphNode* getGlyph(Unicode::UnicodeChar unicode) const
 8001dcc:	b513      	push	{r0, r1, r4, lr}
 8001dce:	2200      	movs	r2, #0
    {
        if (unicode == 0)
 8001dd0:	b149      	cbz	r1, 8001de6 <_ZNK8touchgfx4Font8getGlyphEt+0x1a>
        {
            return 0;
        }
        const uint8_t* dummyPixelDataPointer = 0;
        uint8_t bitsPerPixelDummy = 0;
 8001dd2:	ab02      	add	r3, sp, #8
        const uint8_t* dummyPixelDataPointer = 0;
 8001dd4:	9201      	str	r2, [sp, #4]
        uint8_t bitsPerPixelDummy = 0;
 8001dd6:	f803 2d05 	strb.w	r2, [r3, #-5]!
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 8001dda:	6802      	ldr	r2, [r0, #0]
 8001ddc:	6894      	ldr	r4, [r2, #8]
 8001dde:	aa01      	add	r2, sp, #4
 8001de0:	47a0      	blx	r4
        return glyph;
    }
 8001de2:	b002      	add	sp, #8
 8001de4:	bd10      	pop	{r4, pc}
            return 0;
 8001de6:	4608      	mov	r0, r1
 8001de8:	e7fb      	b.n	8001de2 <_ZNK8touchgfx4Font8getGlyphEt+0x16>

08001dea <_ZNK8touchgfx4Font15getFallbackCharEv>:
     * @return The default character for the typography in case no glyph is available.
     */
    virtual Unicode::UnicodeChar getFallbackChar() const
    {
        return fallbackCharacter;
    }
 8001dea:	8940      	ldrh	r0, [r0, #10]
 8001dec:	4770      	bx	lr

08001dee <_ZNK8touchgfx4Font15getEllipsisCharEv>:
     * @see TextArea::setWideTextAction
     */
    virtual Unicode::UnicodeChar getEllipsisChar() const
    {
        return ellipsisCharacter;
    }
 8001dee:	8980      	ldrh	r0, [r0, #12]
 8001df0:	4770      	bx	lr

08001df2 <_ZNK8touchgfx4Font13getFontHeightEv>:
     *       getMinimumTextHeight for this.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getFontHeight() const
    {
        return fontHeight;
    }
 8001df2:	8880      	ldrh	r0, [r0, #4]
 8001df4:	4770      	bx	lr

08001df6 <_ZNK8touchgfx4Font20getMinimumTextHeightEv>:
     *
     * @return The minimum height needed for a text field that uses this font.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getMinimumTextHeight() const
    {
        return fontHeight + pixelsBelowBaseline;
 8001df6:	7983      	ldrb	r3, [r0, #6]
 8001df8:	8880      	ldrh	r0, [r0, #4]
 8001dfa:	4418      	add	r0, r3
    }
 8001dfc:	b280      	uxth	r0, r0
 8001dfe:	4770      	bx	lr

08001e00 <_ZNK8touchgfx4Font15getBitsPerPixelEv>:
     *
     * @return The number of bits used per pixel in this font.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getBitsPerPixel() const
    {
        return bPerPixel;
 8001e00:	79c0      	ldrb	r0, [r0, #7]
    }
 8001e02:	f000 007f 	and.w	r0, r0, #127	; 0x7f
 8001e06:	4770      	bx	lr

08001e08 <_ZNK8touchgfx4Font15getByteAlignRowEv>:
     *
     * @return True if each glyph row is stored byte aligned, false otherwise.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getByteAlignRow() const
    {
        return bAlignRow;
 8001e08:	79c0      	ldrb	r0, [r0, #7]
    }
 8001e0a:	09c0      	lsrs	r0, r0, #7
 8001e0c:	4770      	bx	lr

08001e0e <_ZN8touchgfx9TypedTextD1Ev>:
    }
 8001e0e:	4770      	bx	lr

08001e10 <_ZN8touchgfx9TypedTextD0Ev>:
    virtual ~TypedText()
 8001e10:	b510      	push	{r4, lr}
    }
 8001e12:	2108      	movs	r1, #8
    virtual ~TypedText()
 8001e14:	4604      	mov	r4, r0
    }
 8001e16:	f016 f875 	bl	8017f04 <_ZdlPvj>
 8001e1a:	4620      	mov	r0, r4
 8001e1c:	bd10      	pop	{r4, pc}

08001e1e <_ZN8touchgfx11Application15appSwitchScreenEh>:
     *
     * @param screenId An id that maps to the desired screen.
     */
    virtual void appSwitchScreen(uint8_t screenId)
    {
    }
 8001e1e:	4770      	bx	lr

08001e20 <_ZN8touchgfx11Application13requestRedrawERNS_4RectE>:
     *
     * @param [in,out] rect The Rect that must be redrawn.
     */
    virtual void requestRedraw(Rect& rect)
    {
        redraw = rect;
 8001e20:	f500 7396 	add.w	r3, r0, #300	; 0x12c
 8001e24:	6808      	ldr	r0, [r1, #0]
 8001e26:	6849      	ldr	r1, [r1, #4]
 8001e28:	c303      	stmia	r3!, {r0, r1}
    };
 8001e2a:	4770      	bx	lr

08001e2c <_ZN8touchgfx10Transition8tearDownEv>:
     * Tears down the Animation. Called before the destructor is called, when the
     * application changes the transition.
     */
    virtual void tearDown()
    {
    }
 8001e2c:	4770      	bx	lr

08001e2e <_ZN8touchgfx10Transition4initEv>:
     * Initializes the transition. Called after the constructor is called, when the
     * application changes the transition.
     */
    virtual void init()
    {
    }
 8001e2e:	4770      	bx	lr

08001e30 <_ZN8touchgfx10Transition18setScreenContainerERNS_9ContainerE>:
     *
     * @param [in] cont The Container the transition should have access to.
     */
    virtual void setScreenContainer(Container& cont)
    {
        screenContainer = &cont;
 8001e30:	6041      	str	r1, [r0, #4]
    }
 8001e32:	4770      	bx	lr

08001e34 <_ZN23FrontendApplicationBaseD1Ev>:

class FrontendApplicationBase : public touchgfx::MVPApplication
{
public:
    FrontendApplicationBase(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplicationBase() { }
 8001e34:	4770      	bx	lr

08001e36 <_ZN8touchgfx12NoTransition15handleTickEventEv>:
{
public:
    /** Indicates that the transition is done after the first tick. */
    virtual void handleTickEvent()
    {
        done = true;
 8001e36:	2301      	movs	r3, #1
 8001e38:	7203      	strb	r3, [r0, #8]
    }
 8001e3a:	4770      	bx	lr

08001e3c <_ZN8touchgfx12NoTransitionD1Ev>:
class NoTransition : public Transition
 8001e3c:	4770      	bx	lr

08001e3e <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>:
 *
 * @note The member function to call must return void. The function can have zero, one, two or
 *       three arguments of any type.
 */
template <class dest_type>
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8001e3e:	4770      	bx	lr

08001e40 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv>:

    /**
     * Calls the member function. Do not call execute unless isValid() returns true (ie. a
     * pointer to the object and the function has been set).
     */
    virtual void execute()
 8001e40:	b410      	push	{r4}
    {
        (pobject->*pmemfun_0)();
 8001e42:	68c4      	ldr	r4, [r0, #12]
 8001e44:	6841      	ldr	r1, [r0, #4]
 8001e46:	1062      	asrs	r2, r4, #1
    virtual void execute()
 8001e48:	4603      	mov	r3, r0
        (pobject->*pmemfun_0)();
 8001e4a:	07e4      	lsls	r4, r4, #31
 8001e4c:	eb01 0002 	add.w	r0, r1, r2
 8001e50:	689b      	ldr	r3, [r3, #8]
 8001e52:	bf48      	it	mi
 8001e54:	588a      	ldrmi	r2, [r1, r2]
    }
 8001e56:	f85d 4b04 	ldr.w	r4, [sp], #4
        (pobject->*pmemfun_0)();
 8001e5a:	bf48      	it	mi
 8001e5c:	58d3      	ldrmi	r3, [r2, r3]
 8001e5e:	4718      	bx	r3

08001e60 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv>:
     *
     * @return true If the callback is valid (i.e. safe to call execute).
     */
    virtual bool isValid() const
    {
        return (pobject != 0) && (pmemfun_0 != 0);
 8001e60:	6843      	ldr	r3, [r0, #4]
 8001e62:	b12b      	cbz	r3, 8001e70 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x10>
 8001e64:	6883      	ldr	r3, [r0, #8]
 8001e66:	b92b      	cbnz	r3, 8001e74 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x14>
 8001e68:	68c0      	ldr	r0, [r0, #12]
 8001e6a:	f000 0001 	and.w	r0, r0, #1
 8001e6e:	4770      	bx	lr
 8001e70:	4618      	mov	r0, r3
 8001e72:	4770      	bx	lr
 8001e74:	2001      	movs	r0, #1
    }
 8001e76:	4770      	bx	lr

08001e78 <_ZN8touchgfx12NoTransitionD0Ev>:
 8001e78:	b510      	push	{r4, lr}
 8001e7a:	210c      	movs	r1, #12
 8001e7c:	4604      	mov	r4, r0
 8001e7e:	f016 f841 	bl	8017f04 <_ZdlPvj>
 8001e82:	4620      	mov	r0, r4
 8001e84:	bd10      	pop	{r4, pc}

08001e86 <_ZN23FrontendApplicationBaseD0Ev>:
 8001e86:	b510      	push	{r4, lr}
 8001e88:	f44f 71ac 	mov.w	r1, #344	; 0x158
 8001e8c:	4604      	mov	r4, r0
 8001e8e:	f016 f839 	bl	8017f04 <_ZdlPvj>
 8001e92:	4620      	mov	r0, r4
 8001e94:	bd10      	pop	{r4, pc}

08001e96 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED0Ev>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8001e96:	b510      	push	{r4, lr}
 8001e98:	2110      	movs	r1, #16
 8001e9a:	4604      	mov	r4, r0
 8001e9c:	f016 f832 	bl	8017f04 <_ZdlPvj>
 8001ea0:	4620      	mov	r0, r4
 8001ea2:	bd10      	pop	{r4, pc}

08001ea4 <_ZN8touchgfx10Transition10invalidateEv>:
    virtual void invalidate()
 8001ea4:	b510      	push	{r4, lr}
        Application::getInstance()->draw();
 8001ea6:	f008 fbb5 	bl	800a614 <_ZN8touchgfx11Application11getInstanceEv>
 8001eaa:	6803      	ldr	r3, [r0, #0]
    }
 8001eac:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        Application::getInstance()->draw();
 8001eb0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001eb2:	4718      	bx	r3

08001eb4 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv>:
    /**
     * Handles the pending screen transition.
     *
     * Delegates the work to evaluatePendingScreenTransition()
     */
    virtual void handlePendingScreenTransition()
 8001eb4:	b510      	push	{r4, lr}
 8001eb6:	4604      	mov	r4, r0
     * Evaluates the pending Callback instances. If a callback is valid, it is executed and
     * a Screen transition is executed.
     */
    void evaluatePendingScreenTransition()
    {
        if (pendingScreenTransitionCallback && pendingScreenTransitionCallback->isValid())
 8001eb8:	f8d0 013c 	ldr.w	r0, [r0, #316]	; 0x13c
 8001ebc:	b158      	cbz	r0, 8001ed6 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
 8001ebe:	6803      	ldr	r3, [r0, #0]
 8001ec0:	68db      	ldr	r3, [r3, #12]
 8001ec2:	4798      	blx	r3
 8001ec4:	b138      	cbz	r0, 8001ed6 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
        {
            pendingScreenTransitionCallback->execute();
 8001ec6:	f8d4 013c 	ldr.w	r0, [r4, #316]	; 0x13c
 8001eca:	6803      	ldr	r3, [r0, #0]
 8001ecc:	689b      	ldr	r3, [r3, #8]
 8001ece:	4798      	blx	r3
            pendingScreenTransitionCallback = 0;
 8001ed0:	2300      	movs	r3, #0
 8001ed2:	f8c4 313c 	str.w	r3, [r4, #316]	; 0x13c
    }
 8001ed6:	bd10      	pop	{r4, pc}

08001ed8 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>:
#include <gui/mainscreen_screen/mainScreenView.hpp>
#include <gui/mainscreen_screen/mainScreenPresenter.hpp>

using namespace touchgfx;

FrontendApplicationBase::FrontendApplicationBase(Model& m, FrontendHeap& heap)
 8001ed8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001eda:	4604      	mov	r4, r0
 8001edc:	4617      	mov	r7, r2
 8001ede:	460e      	mov	r6, r1
          pendingScreenTransitionCallback(0)
 8001ee0:	f008 fbb8 	bl	800a654 <_ZN8touchgfx11ApplicationC1Ev>
        instance = this;
 8001ee4:	4b14      	ldr	r3, [pc, #80]	; (8001f38 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x60>)
    : touchgfx::MVPApplication(),
      transitionCallback(),
      frontendHeap(heap),
      model(m)
 8001ee6:	f8c4 6154 	str.w	r6, [r4, #340]	; 0x154
 8001eea:	601c      	str	r4, [r3, #0]
        return instance;
 8001eec:	4e13      	ldr	r6, [pc, #76]	; (8001f3c <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x64>)
 8001eee:	4b14      	ldr	r3, [pc, #80]	; (8001f40 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x68>)
 8001ef0:	6023      	str	r3, [r4, #0]
          pendingScreenTransitionCallback(0)
 8001ef2:	2500      	movs	r5, #0
 8001ef4:	6830      	ldr	r0, [r6, #0]
        : pobject(0), pmemfun_0(0)
 8001ef6:	f8c4 5148 	str.w	r5, [r4, #328]	; 0x148
 8001efa:	f8c4 514c 	str.w	r5, [r4, #332]	; 0x14c
 8001efe:	4b11      	ldr	r3, [pc, #68]	; (8001f44 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x6c>)
 8001f00:	f8c4 3140 	str.w	r3, [r4, #320]	; 0x140
{
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_PORTRAIT);
 8001f04:	6803      	ldr	r3, [r0, #0]
 8001f06:	f8c4 5138 	str.w	r5, [r4, #312]	; 0x138
 8001f0a:	689b      	ldr	r3, [r3, #8]
 8001f0c:	f8c4 513c 	str.w	r5, [r4, #316]	; 0x13c
 8001f10:	2101      	movs	r1, #1
 8001f12:	f8c4 5144 	str.w	r5, [r4, #324]	; 0x144
      model(m)
 8001f16:	f8c4 7150 	str.w	r7, [r4, #336]	; 0x150
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_PORTRAIT);
 8001f1a:	4798      	blx	r3
    touchgfx::Texts::setLanguage(GB);
 8001f1c:	4628      	mov	r0, r5
 8001f1e:	f000 fa4d 	bl	80023bc <_ZN8touchgfx5Texts11setLanguageEt>
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 8001f22:	6833      	ldr	r3, [r6, #0]
 8001f24:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 8001f28:	b10a      	cbz	r2, 8001f2e <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x56>
 8001f2a:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8001f2c:	b900      	cbnz	r0, 8001f30 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x58>
            return instance->lcdRef;
 8001f2e:	6898      	ldr	r0, [r3, #8]
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableTextureMapperAll();
 8001f30:	f00e ff65 	bl	8010dfe <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>
}
 8001f34:	4620      	mov	r0, r4
 8001f36:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8001f38:	200121e4 	.word	0x200121e4
 8001f3c:	20012178 	.word	0x20012178
 8001f40:	080195b4 	.word	0x080195b4
 8001f44:	0801959c 	.word	0x0801959c

08001f48 <_ZN23FrontendApplicationBase32gotomainScreenScreenNoTransitionEv>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8001f48:	4b06      	ldr	r3, [pc, #24]	; (8001f64 <_ZN23FrontendApplicationBase32gotomainScreenScreenNoTransitionEv+0x1c>)
 8001f4a:	f8c0 3148 	str.w	r3, [r0, #328]	; 0x148
 8001f4e:	2300      	movs	r3, #0
 8001f50:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
// mainScreen

void FrontendApplicationBase::gotomainScreenScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplication::gotomainScreenScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 8001f54:	f500 73a0 	add.w	r3, r0, #320	; 0x140
 8001f58:	f8c0 0144 	str.w	r0, [r0, #324]	; 0x144
 8001f5c:	f8c0 313c 	str.w	r3, [r0, #316]	; 0x13c
}
 8001f60:	4770      	bx	lr
 8001f62:	bf00      	nop
 8001f64:	080020a9 	.word	0x080020a9

08001f68 <_ZN8touchgfx14makeTransitionI14mainScreenView19mainScreenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_>:
 *
 * @return Pointer to the new Presenter of the requested type. Incidentally it will be the same
 *         value as the old presenter due to memory reuse.
 */
template <class ScreenType, class PresenterType, class TransType, class ModelType>
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
 8001f68:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8001f6c:	4607      	mov	r7, r0
{
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8001f6e:	6890      	ldr	r0, [r2, #8]
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
 8001f70:	f8dd a020 	ldr.w	sl, [sp, #32]
 8001f74:	4699      	mov	r9, r3
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8001f76:	6803      	ldr	r3, [r0, #0]
 8001f78:	6a1b      	ldr	r3, [r3, #32]
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
 8001f7a:	4688      	mov	r8, r1
 8001f7c:	4615      	mov	r5, r2
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8001f7e:	4798      	blx	r3
 8001f80:	f5b0 7f59 	cmp.w	r0, #868	; 0x364
 8001f84:	d205      	bcs.n	8001f92 <_ZN8touchgfx14makeTransitionI14mainScreenView19mainScreenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x2a>
 8001f86:	4b42      	ldr	r3, [pc, #264]	; (8002090 <_ZN8touchgfx14makeTransitionI14mainScreenView19mainScreenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x128>)
 8001f88:	4a42      	ldr	r2, [pc, #264]	; (8002094 <_ZN8touchgfx14makeTransitionI14mainScreenView19mainScreenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x12c>)
 8001f8a:	21a7      	movs	r1, #167	; 0xa7
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8001f8c:	4842      	ldr	r0, [pc, #264]	; (8002098 <_ZN8touchgfx14makeTransitionI14mainScreenView19mainScreenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x130>)
 8001f8e:	f015 ffe5 	bl	8017f5c <__assert_func>
 8001f92:	6868      	ldr	r0, [r5, #4]
 8001f94:	6803      	ldr	r3, [r0, #0]
 8001f96:	6a1b      	ldr	r3, [r3, #32]
 8001f98:	4798      	blx	r3
 8001f9a:	280f      	cmp	r0, #15
 8001f9c:	d803      	bhi.n	8001fa6 <_ZN8touchgfx14makeTransitionI14mainScreenView19mainScreenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x3e>
 8001f9e:	4b3f      	ldr	r3, [pc, #252]	; (800209c <_ZN8touchgfx14makeTransitionI14mainScreenView19mainScreenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x134>)
 8001fa0:	4a3c      	ldr	r2, [pc, #240]	; (8002094 <_ZN8touchgfx14makeTransitionI14mainScreenView19mainScreenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x12c>)
 8001fa2:	21a8      	movs	r1, #168	; 0xa8
 8001fa4:	e7f2      	b.n	8001f8c <_ZN8touchgfx14makeTransitionI14mainScreenView19mainScreenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x24>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8001fa6:	68e8      	ldr	r0, [r5, #12]
 8001fa8:	6803      	ldr	r3, [r0, #0]
 8001faa:	6a1b      	ldr	r3, [r3, #32]
 8001fac:	4798      	blx	r3
 8001fae:	280b      	cmp	r0, #11
 8001fb0:	d803      	bhi.n	8001fba <_ZN8touchgfx14makeTransitionI14mainScreenView19mainScreenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x52>
 8001fb2:	4b3b      	ldr	r3, [pc, #236]	; (80020a0 <_ZN8touchgfx14makeTransitionI14mainScreenView19mainScreenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x138>)
 8001fb4:	4a37      	ldr	r2, [pc, #220]	; (8002094 <_ZN8touchgfx14makeTransitionI14mainScreenView19mainScreenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x12c>)
 8001fb6:	21a9      	movs	r1, #169	; 0xa9
 8001fb8:	e7e8      	b.n	8001f8c <_ZN8touchgfx14makeTransitionI14mainScreenView19mainScreenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x24>
    Application::getInstance()->clearAllTimerWidgets();
 8001fba:	f008 fb2b 	bl	800a614 <_ZN8touchgfx11Application11getInstanceEv>
 8001fbe:	f008 fb2f 	bl	800a620 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
    if (*currentTrans)
 8001fc2:	f8d9 0000 	ldr.w	r0, [r9]
 8001fc6:	b110      	cbz	r0, 8001fce <_ZN8touchgfx14makeTransitionI14mainScreenView19mainScreenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x66>
        (*currentTrans)->tearDown();
 8001fc8:	6803      	ldr	r3, [r0, #0]
 8001fca:	68db      	ldr	r3, [r3, #12]
 8001fcc:	4798      	blx	r3
    if (*currentTrans)
 8001fce:	f8d9 0000 	ldr.w	r0, [r9]
 8001fd2:	b110      	cbz	r0, 8001fda <_ZN8touchgfx14makeTransitionI14mainScreenView19mainScreenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x72>
        (*currentTrans)->~Transition();
 8001fd4:	6803      	ldr	r3, [r0, #0]
 8001fd6:	681b      	ldr	r3, [r3, #0]
 8001fd8:	4798      	blx	r3
    if (*currentScreen)
 8001fda:	6838      	ldr	r0, [r7, #0]
 8001fdc:	b110      	cbz	r0, 8001fe4 <_ZN8touchgfx14makeTransitionI14mainScreenView19mainScreenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x7c>
        (*currentScreen)->tearDownScreen();
 8001fde:	6803      	ldr	r3, [r0, #0]
 8001fe0:	695b      	ldr	r3, [r3, #20]
 8001fe2:	4798      	blx	r3
    if (*currentPresenter)
 8001fe4:	f8d8 0000 	ldr.w	r0, [r8]
 8001fe8:	b110      	cbz	r0, 8001ff0 <_ZN8touchgfx14makeTransitionI14mainScreenView19mainScreenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x88>
        (*currentPresenter)->deactivate();
 8001fea:	6803      	ldr	r3, [r0, #0]
 8001fec:	685b      	ldr	r3, [r3, #4]
 8001fee:	4798      	blx	r3
    if (*currentScreen)
 8001ff0:	6838      	ldr	r0, [r7, #0]
 8001ff2:	b110      	cbz	r0, 8001ffa <_ZN8touchgfx14makeTransitionI14mainScreenView19mainScreenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x92>
        (*currentScreen)->~Screen();
 8001ff4:	6803      	ldr	r3, [r0, #0]
 8001ff6:	681b      	ldr	r3, [r3, #0]
 8001ff8:	4798      	blx	r3
    if (*currentPresenter)
 8001ffa:	f8d8 0000 	ldr.w	r0, [r8]
 8001ffe:	b110      	cbz	r0, 8002006 <_ZN8touchgfx14makeTransitionI14mainScreenView19mainScreenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x9e>
        (*currentPresenter)->~Presenter();
 8002000:	6803      	ldr	r3, [r0, #0]
 8002002:	689b      	ldr	r3, [r3, #8]
 8002004:	4798      	blx	r3

    prepareTransition(currentScreen, currentPresenter, currentTrans);

    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8002006:	68e8      	ldr	r0, [r5, #12]
     * @return A typed reference to the object at the specified index.
     */
    template <typename T>
    T& at(const uint16_t index)
    {
        return *static_cast<T*>(element(index));
 8002008:	6803      	ldr	r3, [r0, #0]
 800200a:	2100      	movs	r1, #0
 800200c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800200e:	4798      	blx	r3
 8002010:	4604      	mov	r4, r0
 8002012:	b120      	cbz	r0, 800201e <_ZN8touchgfx14makeTransitionI14mainScreenView19mainScreenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xb6>
        : screenContainer(0), done(false)
 8002014:	2300      	movs	r3, #0
 8002016:	6043      	str	r3, [r0, #4]
 8002018:	7203      	strb	r3, [r0, #8]
 800201a:	4b22      	ldr	r3, [pc, #136]	; (80020a4 <_ZN8touchgfx14makeTransitionI14mainScreenView19mainScreenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x13c>)
 800201c:	6003      	str	r3, [r0, #0]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 800201e:	68a8      	ldr	r0, [r5, #8]
 8002020:	6803      	ldr	r3, [r0, #0]
 8002022:	2100      	movs	r1, #0
 8002024:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002026:	4798      	blx	r3
 8002028:	4606      	mov	r6, r0
 800202a:	b108      	cbz	r0, 8002030 <_ZN8touchgfx14makeTransitionI14mainScreenView19mainScreenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xc8>
 800202c:	f000 fcee 	bl	8002a0c <_ZN14mainScreenViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8002030:	6868      	ldr	r0, [r5, #4]
 8002032:	6803      	ldr	r3, [r0, #0]
 8002034:	2100      	movs	r1, #0
 8002036:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002038:	4798      	blx	r3
 800203a:	4605      	mov	r5, r0
 800203c:	b110      	cbz	r0, 8002044 <_ZN8touchgfx14makeTransitionI14mainScreenView19mainScreenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xdc>
 800203e:	4631      	mov	r1, r6
 8002040:	f000 fcc8 	bl	80029d4 <_ZN19mainScreenPresenterC1ER14mainScreenView>
    *currentTrans = newTransition;
 8002044:	f8c9 4000 	str.w	r4, [r9]
    *currentPresenter = newPresenter;
 8002048:	f8c8 5000 	str.w	r5, [r8]
    *currentScreen = newScreen;
 800204c:	603e      	str	r6, [r7, #0]
    model->bind(newPresenter);
 800204e:	b1e5      	cbz	r5, 800208a <_ZN8touchgfx14makeTransitionI14mainScreenView19mainScreenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x122>
 8002050:	1d2b      	adds	r3, r5, #4
public:
    Model();

    void bind(ModelListener* listener)
    {
        modelListener = listener;
 8002052:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8002056:	6833      	ldr	r3, [r6, #0]
    
    virtual ~ModelListener() {}

    void bind(Model* m)
    {
        model = m;
 8002058:	f8c5 a008 	str.w	sl, [r5, #8]
 800205c:	4630      	mov	r0, r6
     *
     * @param [in] presenter The specific Presenter to be associated with the View.
     */
    void bind(T& presenter)
    {
        this->presenter = &presenter;
 800205e:	63f5      	str	r5, [r6, #60]	; 0x3c
 8002060:	68db      	ldr	r3, [r3, #12]
 8002062:	4798      	blx	r3
    newPresenter->activate();
 8002064:	682b      	ldr	r3, [r5, #0]
 8002066:	4628      	mov	r0, r5
 8002068:	681b      	ldr	r3, [r3, #0]
 800206a:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 800206c:	4621      	mov	r1, r4
 800206e:	4630      	mov	r0, r6
 8002070:	f009 fc56 	bl	800b920 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8002074:	6823      	ldr	r3, [r4, #0]
 8002076:	4620      	mov	r0, r4
 8002078:	691b      	ldr	r3, [r3, #16]
 800207a:	4798      	blx	r3
    newTransition->invalidate();
 800207c:	6823      	ldr	r3, [r4, #0]
 800207e:	4620      	mov	r0, r4
 8002080:	695b      	ldr	r3, [r3, #20]
 8002082:	4798      	blx	r3
    newScreen->bind(*newPresenter);

    finalizeTransition((Screen*)newScreen, (Presenter*)newPresenter, (Transition*)newTransition);

    return newPresenter;
}
 8002084:	4628      	mov	r0, r5
 8002086:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    model->bind(newPresenter);
 800208a:	462b      	mov	r3, r5
 800208c:	e7e1      	b.n	8002052 <_ZN8touchgfx14makeTransitionI14mainScreenView19mainScreenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xea>
 800208e:	bf00      	nop
 8002090:	08019614 	.word	0x08019614
 8002094:	0801982f 	.word	0x0801982f
 8002098:	080196a2 	.word	0x080196a2
 800209c:	080196e9 	.word	0x080196e9
 80020a0:	0801978c 	.word	0x0801978c
 80020a4:	080195f8 	.word	0x080195f8

080020a8 <_ZN23FrontendApplicationBase36gotomainScreenScreenNoTransitionImplEv>:

void FrontendApplicationBase::gotomainScreenScreenNoTransitionImpl()
{
 80020a8:	b507      	push	{r0, r1, r2, lr}
    touchgfx::makeTransition<mainScreenView, mainScreenPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 80020aa:	f8d0 3154 	ldr.w	r3, [r0, #340]	; 0x154
 80020ae:	9300      	str	r3, [sp, #0]
 80020b0:	f8d0 2150 	ldr.w	r2, [r0, #336]	; 0x150
 80020b4:	4b04      	ldr	r3, [pc, #16]	; (80020c8 <_ZN23FrontendApplicationBase36gotomainScreenScreenNoTransitionImplEv+0x20>)
 80020b6:	f500 719c 	add.w	r1, r0, #312	; 0x138
 80020ba:	4804      	ldr	r0, [pc, #16]	; (80020cc <_ZN23FrontendApplicationBase36gotomainScreenScreenNoTransitionImplEv+0x24>)
 80020bc:	f7ff ff54 	bl	8001f68 <_ZN8touchgfx14makeTransitionI14mainScreenView19mainScreenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_>
}
 80020c0:	b003      	add	sp, #12
 80020c2:	f85d fb04 	ldr.w	pc, [sp], #4
 80020c6:	bf00      	nop
 80020c8:	200121d8 	.word	0x200121d8
 80020cc:	200121d4 	.word	0x200121d4

080020d0 <_ZNK8touchgfx13GeneratedFont12getGSUBTableEv>:
     * @return The GSUB table or null if font has GSUB no table
     */
    virtual const uint16_t* getGSUBTable() const
    {
        return gsubTable;
    }
 80020d0:	6a00      	ldr	r0, [r0, #32]
 80020d2:	4770      	bx	lr

080020d4 <_ZN8touchgfx13GeneratedFontD1Ev>:
class GeneratedFont : public ConstFont
 80020d4:	4770      	bx	lr

080020d6 <_ZNK8touchgfx13GeneratedFont12getPixelDataEPKNS_9GlyphNodeE>:
}

const uint8_t* GeneratedFont::getPixelData(const GlyphNode* glyph) const
{
    const uint8_t* const* table = (const uint8_t* const*)glyphData;
    return &(table[glyph->unicode / 2048][glyph->dataOffset]);
 80020d6:	888b      	ldrh	r3, [r1, #4]
 80020d8:	6980      	ldr	r0, [r0, #24]
 80020da:	680a      	ldr	r2, [r1, #0]
 80020dc:	0adb      	lsrs	r3, r3, #11
 80020de:	f850 0023 	ldr.w	r0, [r0, r3, lsl #2]
}
 80020e2:	4410      	add	r0, r2
 80020e4:	4770      	bx	lr

080020e6 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE>:

int8_t GeneratedFont::getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const
{
 80020e6:	b510      	push	{r4, lr}
    if (!glyph || glyph->kerningTableSize == 0)
 80020e8:	b1c2      	cbz	r2, 800211c <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
 80020ea:	7b13      	ldrb	r3, [r2, #12]
 80020ec:	b1b3      	cbz	r3, 800211c <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
        return ((flags & GLYPH_DATA_KERNINGTABLEPOS_BIT8_10) << 8) | _kerningTablePos;
 80020ee:	7b54      	ldrb	r4, [r2, #13]
 80020f0:	7ad2      	ldrb	r2, [r2, #11]
 80020f2:	0224      	lsls	r4, r4, #8
 80020f4:	f404 64e0 	and.w	r4, r4, #1792	; 0x700
    {
        return 0;
    }

    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 80020f8:	4314      	orrs	r4, r2
 80020fa:	69c2      	ldr	r2, [r0, #28]
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 80020fc:	b298      	uxth	r0, r3
    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 80020fe:	eb02 0284 	add.w	r2, r2, r4, lsl #2
    {
        if (prevChar == kerndata->unicodePrevChar)
 8002102:	8813      	ldrh	r3, [r2, #0]
 8002104:	428b      	cmp	r3, r1
 8002106:	d102      	bne.n	800210e <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x28>
        {
            return kerndata->distance;
 8002108:	f992 0002 	ldrsb.w	r0, [r2, #2]
        {
            break;
        }
    }
    return 0;
}
 800210c:	bd10      	pop	{r4, pc}
        if (prevChar < kerndata->unicodePrevChar)
 800210e:	d805      	bhi.n	800211c <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 8002110:	3801      	subs	r0, #1
 8002112:	b280      	uxth	r0, r0
 8002114:	3204      	adds	r2, #4
 8002116:	2800      	cmp	r0, #0
 8002118:	d1f3      	bne.n	8002102 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x1c>
 800211a:	e7f7      	b.n	800210c <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>
        return 0;
 800211c:	2000      	movs	r0, #0
 800211e:	e7f5      	b.n	800210c <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>

08002120 <_ZN8touchgfx13GeneratedFontD0Ev>:
 8002120:	b510      	push	{r4, lr}
 8002122:	2124      	movs	r1, #36	; 0x24
 8002124:	4604      	mov	r4, r0
 8002126:	f015 feed 	bl	8017f04 <_ZdlPvj>
 800212a:	4620      	mov	r0, r4
 800212c:	bd10      	pop	{r4, pc}
	...

08002130 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKt>:
GeneratedFont::GeneratedFont(const GlyphNode* list, uint16_t size, uint16_t height, uint8_t pixBelowBase, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData) :
 8002130:	b530      	push	{r4, r5, lr}
 8002132:	b089      	sub	sp, #36	; 0x24
 8002134:	4604      	mov	r4, r0
    gsubTable(gsubData)
 8002136:	f8bd 5050 	ldrh.w	r5, [sp, #80]	; 0x50
 800213a:	9506      	str	r5, [sp, #24]
 800213c:	f8bd 504c 	ldrh.w	r5, [sp, #76]	; 0x4c
 8002140:	9505      	str	r5, [sp, #20]
 8002142:	f89d 5040 	ldrb.w	r5, [sp, #64]	; 0x40
 8002146:	9504      	str	r5, [sp, #16]
 8002148:	f89d 503c 	ldrb.w	r5, [sp, #60]	; 0x3c
 800214c:	9503      	str	r5, [sp, #12]
 800214e:	f89d 5038 	ldrb.w	r5, [sp, #56]	; 0x38
 8002152:	9502      	str	r5, [sp, #8]
 8002154:	f89d 5034 	ldrb.w	r5, [sp, #52]	; 0x34
 8002158:	9501      	str	r5, [sp, #4]
 800215a:	f89d 5030 	ldrb.w	r5, [sp, #48]	; 0x30
 800215e:	9500      	str	r5, [sp, #0]
 8002160:	f008 ffe2 	bl	800b128 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEtthhhhhtt>
 8002164:	4b05      	ldr	r3, [pc, #20]	; (800217c <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKt+0x4c>)
 8002166:	6023      	str	r3, [r4, #0]
 8002168:	9b11      	ldr	r3, [sp, #68]	; 0x44
 800216a:	61a3      	str	r3, [r4, #24]
 800216c:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800216e:	61e3      	str	r3, [r4, #28]
 8002170:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8002172:	6223      	str	r3, [r4, #32]
}
 8002174:	4620      	mov	r0, r4
 8002176:	b009      	add	sp, #36	; 0x24
 8002178:	bd30      	pop	{r4, r5, pc}
 800217a:	bf00      	nop
 800217c:	08019944 	.word	0x08019944

08002180 <__tcf_0>:

touchgfx::GeneratedFont& getFont_verdana_10_4bpp();

touchgfx::GeneratedFont& getFont_verdana_10_4bpp()
{
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0);
 8002180:	4770      	bx	lr
	...

08002184 <_Z23getFont_verdana_10_4bppv>:
{
 8002184:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0);
 8002186:	4d14      	ldr	r5, [pc, #80]	; (80021d8 <_Z23getFont_verdana_10_4bppv+0x54>)
 8002188:	782c      	ldrb	r4, [r5, #0]
 800218a:	f3bf 8f5b 	dmb	ish
 800218e:	f014 0401 	ands.w	r4, r4, #1
{
 8002192:	b08b      	sub	sp, #44	; 0x2c
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0);
 8002194:	d11d      	bne.n	80021d2 <_Z23getFont_verdana_10_4bppv+0x4e>
 8002196:	4628      	mov	r0, r5
 8002198:	f015 feb6 	bl	8017f08 <__cxa_guard_acquire>
 800219c:	b1c8      	cbz	r0, 80021d2 <_Z23getFont_verdana_10_4bppv+0x4e>
 800219e:	233f      	movs	r3, #63	; 0x3f
 80021a0:	9307      	str	r3, [sp, #28]
 80021a2:	4b0e      	ldr	r3, [pc, #56]	; (80021dc <_Z23getFont_verdana_10_4bppv+0x58>)
 80021a4:	9306      	str	r3, [sp, #24]
 80021a6:	4b0e      	ldr	r3, [pc, #56]	; (80021e0 <_Z23getFont_verdana_10_4bppv+0x5c>)
 80021a8:	490e      	ldr	r1, [pc, #56]	; (80021e4 <_Z23getFont_verdana_10_4bppv+0x60>)
 80021aa:	9403      	str	r4, [sp, #12]
 80021ac:	2201      	movs	r2, #1
 80021ae:	e9cd 4304 	strd	r4, r3, [sp, #16]
 80021b2:	2304      	movs	r3, #4
 80021b4:	e9cd 3201 	strd	r3, r2, [sp, #4]
 80021b8:	e9cd 4408 	strd	r4, r4, [sp, #32]
 80021bc:	230a      	movs	r3, #10
 80021be:	9400      	str	r4, [sp, #0]
 80021c0:	4809      	ldr	r0, [pc, #36]	; (80021e8 <_Z23getFont_verdana_10_4bppv+0x64>)
 80021c2:	f7ff ffb5 	bl	8002130 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKt>
 80021c6:	4628      	mov	r0, r5
 80021c8:	f015 feaa 	bl	8017f20 <__cxa_guard_release>
 80021cc:	4807      	ldr	r0, [pc, #28]	; (80021ec <_Z23getFont_verdana_10_4bppv+0x68>)
 80021ce:	f015 fee3 	bl	8017f98 <atexit>
    return verdana_10_4bpp;
}
 80021d2:	4805      	ldr	r0, [pc, #20]	; (80021e8 <_Z23getFont_verdana_10_4bppv+0x64>)
 80021d4:	b00b      	add	sp, #44	; 0x2c
 80021d6:	bd30      	pop	{r4, r5, pc}
 80021d8:	200013c8 	.word	0x200013c8
 80021dc:	0801cc84 	.word	0x0801cc84
 80021e0:	08019990 	.word	0x08019990
 80021e4:	0801cb3c 	.word	0x0801cb3c
 80021e8:	200013cc 	.word	0x200013cc
 80021ec:	08002181 	.word	0x08002181

080021f0 <__tcf_0>:

touchgfx::GeneratedFont& getFont_verdana_20_4bpp();

touchgfx::GeneratedFont& getFont_verdana_20_4bpp()
{
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 21, 20, 4, 4, 1, 0, 1, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0);
 80021f0:	4770      	bx	lr
	...

080021f4 <_Z23getFont_verdana_20_4bppv>:
{
 80021f4:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 21, 20, 4, 4, 1, 0, 1, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0);
 80021f6:	4d15      	ldr	r5, [pc, #84]	; (800224c <_Z23getFont_verdana_20_4bppv+0x58>)
 80021f8:	782c      	ldrb	r4, [r5, #0]
 80021fa:	f3bf 8f5b 	dmb	ish
 80021fe:	f014 0401 	ands.w	r4, r4, #1
{
 8002202:	b08b      	sub	sp, #44	; 0x2c
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 21, 20, 4, 4, 1, 0, 1, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0);
 8002204:	d11e      	bne.n	8002244 <_Z23getFont_verdana_20_4bppv+0x50>
 8002206:	4628      	mov	r0, r5
 8002208:	f015 fe7e 	bl	8017f08 <__cxa_guard_acquire>
 800220c:	b1d0      	cbz	r0, 8002244 <_Z23getFont_verdana_20_4bppv+0x50>
 800220e:	233f      	movs	r3, #63	; 0x3f
 8002210:	9307      	str	r3, [sp, #28]
 8002212:	4b0f      	ldr	r3, [pc, #60]	; (8002250 <_Z23getFont_verdana_20_4bppv+0x5c>)
 8002214:	9306      	str	r3, [sp, #24]
 8002216:	4b0f      	ldr	r3, [pc, #60]	; (8002254 <_Z23getFont_verdana_20_4bppv+0x60>)
 8002218:	9305      	str	r3, [sp, #20]
 800221a:	2301      	movs	r3, #1
 800221c:	e9cd 4303 	strd	r4, r3, [sp, #12]
 8002220:	9302      	str	r3, [sp, #8]
 8002222:	2304      	movs	r3, #4
 8002224:	e9cd 3300 	strd	r3, r3, [sp]
 8002228:	2215      	movs	r2, #21
 800222a:	2314      	movs	r3, #20
 800222c:	490a      	ldr	r1, [pc, #40]	; (8002258 <_Z23getFont_verdana_20_4bppv+0x64>)
 800222e:	480b      	ldr	r0, [pc, #44]	; (800225c <_Z23getFont_verdana_20_4bppv+0x68>)
 8002230:	e9cd 4408 	strd	r4, r4, [sp, #32]
 8002234:	f7ff ff7c 	bl	8002130 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKt>
 8002238:	4628      	mov	r0, r5
 800223a:	f015 fe71 	bl	8017f20 <__cxa_guard_release>
 800223e:	4808      	ldr	r0, [pc, #32]	; (8002260 <_Z23getFont_verdana_20_4bppv+0x6c>)
 8002240:	f015 feaa 	bl	8017f98 <atexit>
    return verdana_20_4bpp;
}
 8002244:	4805      	ldr	r0, [pc, #20]	; (800225c <_Z23getFont_verdana_20_4bppv+0x68>)
 8002246:	b00b      	add	sp, #44	; 0x2c
 8002248:	bd30      	pop	{r4, r5, pc}
 800224a:	bf00      	nop
 800224c:	200013f0 	.word	0x200013f0
 8002250:	0801cc88 	.word	0x0801cc88
 8002254:	08019994 	.word	0x08019994
 8002258:	0801cb4c 	.word	0x0801cb4c
 800225c:	200013f4 	.word	0x200013f4
 8002260:	080021f1 	.word	0x080021f1

08002264 <__tcf_0>:

touchgfx::GeneratedFont& getFont_verdana_40_4bpp();

touchgfx::GeneratedFont& getFont_verdana_40_4bpp()
{
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0);
 8002264:	4770      	bx	lr
	...

08002268 <_Z23getFont_verdana_40_4bppv>:
{
 8002268:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0);
 800226a:	4d14      	ldr	r5, [pc, #80]	; (80022bc <_Z23getFont_verdana_40_4bppv+0x54>)
 800226c:	782c      	ldrb	r4, [r5, #0]
 800226e:	f3bf 8f5b 	dmb	ish
 8002272:	f014 0401 	ands.w	r4, r4, #1
{
 8002276:	b08b      	sub	sp, #44	; 0x2c
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0);
 8002278:	d11d      	bne.n	80022b6 <_Z23getFont_verdana_40_4bppv+0x4e>
 800227a:	4628      	mov	r0, r5
 800227c:	f015 fe44 	bl	8017f08 <__cxa_guard_acquire>
 8002280:	b1c8      	cbz	r0, 80022b6 <_Z23getFont_verdana_40_4bppv+0x4e>
 8002282:	233f      	movs	r3, #63	; 0x3f
 8002284:	9307      	str	r3, [sp, #28]
 8002286:	4b0e      	ldr	r3, [pc, #56]	; (80022c0 <_Z23getFont_verdana_40_4bppv+0x58>)
 8002288:	9306      	str	r3, [sp, #24]
 800228a:	4b0e      	ldr	r3, [pc, #56]	; (80022c4 <_Z23getFont_verdana_40_4bppv+0x5c>)
 800228c:	490e      	ldr	r1, [pc, #56]	; (80022c8 <_Z23getFont_verdana_40_4bppv+0x60>)
 800228e:	9403      	str	r4, [sp, #12]
 8002290:	2201      	movs	r2, #1
 8002292:	e9cd 4304 	strd	r4, r3, [sp, #16]
 8002296:	2304      	movs	r3, #4
 8002298:	e9cd 3201 	strd	r3, r2, [sp, #4]
 800229c:	e9cd 4408 	strd	r4, r4, [sp, #32]
 80022a0:	2328      	movs	r3, #40	; 0x28
 80022a2:	9400      	str	r4, [sp, #0]
 80022a4:	4809      	ldr	r0, [pc, #36]	; (80022cc <_Z23getFont_verdana_40_4bppv+0x64>)
 80022a6:	f7ff ff43 	bl	8002130 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKt>
 80022aa:	4628      	mov	r0, r5
 80022ac:	f015 fe38 	bl	8017f20 <__cxa_guard_release>
 80022b0:	4807      	ldr	r0, [pc, #28]	; (80022d0 <_Z23getFont_verdana_40_4bppv+0x68>)
 80022b2:	f015 fe71 	bl	8017f98 <atexit>
    return verdana_40_4bpp;
}
 80022b6:	4805      	ldr	r0, [pc, #20]	; (80022cc <_Z23getFont_verdana_40_4bppv+0x64>)
 80022b8:	b00b      	add	sp, #44	; 0x2c
 80022ba:	bd30      	pop	{r4, r5, pc}
 80022bc:	20001418 	.word	0x20001418
 80022c0:	0801cc8c 	.word	0x0801cc8c
 80022c4:	08019998 	.word	0x08019998
 80022c8:	0801cc74 	.word	0x0801cc74
 80022cc:	2000141c 	.word	0x2000141c
 80022d0:	08002265 	.word	0x08002265

080022d4 <_ZNK8touchgfx4Font12getGSUBTableEv>:
     * @return The GSUB table or null if font has GSUB no table.
     */
    virtual const uint16_t* getGSUBTable() const
    {
        return 0;
    }
 80022d4:	2000      	movs	r0, #0
 80022d6:	4770      	bx	lr

080022d8 <_ZNK8touchgfx4Font14getStringWidthEPKtz>:
#include <touchgfx/Unicode.hpp>
#include <touchgfx/hal/HAL.hpp>
#include <touchgfx/lcd/LCD.hpp>

uint16_t touchgfx::Font::getStringWidth(const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 80022d8:	b40e      	push	{r1, r2, r3}
 80022da:	b503      	push	{r0, r1, lr}
 80022dc:	ab03      	add	r3, sp, #12
    va_list pArg;
    va_start(pArg, text);
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 80022de:	2100      	movs	r1, #0
{
 80022e0:	f853 2b04 	ldr.w	r2, [r3], #4
    va_start(pArg, text);
 80022e4:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 80022e6:	f008 fd5b 	bl	800ada0 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 80022ea:	b002      	add	sp, #8
 80022ec:	f85d eb04 	ldr.w	lr, [sp], #4
 80022f0:	b003      	add	sp, #12
 80022f2:	4770      	bx	lr

080022f4 <_ZNK8touchgfx4Font14getStringWidthEhPKtz>:

uint16_t touchgfx::Font::getStringWidth(touchgfx::TextDirection textDirection, const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 80022f4:	b40c      	push	{r2, r3}
 80022f6:	b507      	push	{r0, r1, r2, lr}
 80022f8:	ab04      	add	r3, sp, #16
 80022fa:	f853 2b04 	ldr.w	r2, [r3], #4
    va_list pArg;
    va_start(pArg, text);
 80022fe:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(textDirection, text, pArg);
 8002300:	f008 fd4e 	bl	800ada0 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 8002304:	b003      	add	sp, #12
 8002306:	f85d eb04 	ldr.w	lr, [sp], #4
 800230a:	b002      	add	sp, #8
 800230c:	4770      	bx	lr
	...

08002310 <_ZN8touchgfx12TextProvider15getNextLigatureEh>:

touchgfx::Unicode::UnicodeChar touchgfx::TextProvider::getNextLigature(TextDirection direction)
{
    if (fontGsubTable && nextCharacters.peekChar())
 8002310:	6bc3      	ldr	r3, [r0, #60]	; 0x3c
{
 8002312:	b510      	push	{r4, lr}
 8002314:	4604      	mov	r4, r0
    if (fontGsubTable && nextCharacters.peekChar())
 8002316:	b373      	cbz	r3, 8002376 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
        {
            return used == size;
        }
        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
        {
            assert(used > 0);
 8002318:	8e03      	ldrh	r3, [r0, #48]	; 0x30
 800231a:	b92b      	cbnz	r3, 8002328 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x18>
 800231c:	4b18      	ldr	r3, [pc, #96]	; (8002380 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x70>)
 800231e:	4a19      	ldr	r2, [pc, #100]	; (8002384 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x74>)
 8002320:	21c0      	movs	r1, #192	; 0xc0
            return buffer[pos];
        }
        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar(uint16_t offset)
        {
            assert(offset < used);
 8002322:	4819      	ldr	r0, [pc, #100]	; (8002388 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x78>)
 8002324:	f015 fe1a 	bl	8017f5c <__assert_func>
            return buffer[pos];
 8002328:	8dc3      	ldrh	r3, [r0, #46]	; 0x2e
 800232a:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 800232e:	8b5b      	ldrh	r3, [r3, #26]
 8002330:	b30b      	cbz	r3, 8002376 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
    {
        substituteGlyphs();
 8002332:	f00a f84d 	bl	800c3d0 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>
            assert(offset < used);
 8002336:	8e23      	ldrh	r3, [r4, #48]	; 0x30
 8002338:	2b01      	cmp	r3, #1
 800233a:	d803      	bhi.n	8002344 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x34>
 800233c:	4b13      	ldr	r3, [pc, #76]	; (800238c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x7c>)
 800233e:	4a14      	ldr	r2, [pc, #80]	; (8002390 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x80>)
 8002340:	21c5      	movs	r1, #197	; 0xc5
 8002342:	e7ee      	b.n	8002322 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x12>
            const uint16_t index = pos + offset;
 8002344:	8de2      	ldrh	r2, [r4, #46]	; 0x2e
 8002346:	1c53      	adds	r3, r2, #1
 8002348:	b29b      	uxth	r3, r3
            return buffer[index < size ? index : index - size];
 800234a:	2b09      	cmp	r3, #9
 800234c:	4619      	mov	r1, r3
 800234e:	bf88      	it	hi
 8002350:	f1a3 010a 	subhi.w	r1, r3, #10
 8002354:	eb04 0141 	add.w	r1, r4, r1, lsl #1
        if (nextCharacters.peekChar(1) == 0x093F) //Hindi I-matra
 8002358:	f640 103f 	movw	r0, #2367	; 0x93f
 800235c:	8b49      	ldrh	r1, [r1, #26]
 800235e:	4281      	cmp	r1, r0
 8002360:	d109      	bne.n	8002376 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
        }
        FORCE_INLINE_FUNCTION void replaceAt1(Unicode::UnicodeChar newChar)
        {
            assert(used > 1);
            const uint16_t index = pos + 1;
            buffer[index < size ? index : 0] = newChar;
 8002362:	2b0a      	cmp	r3, #10
 8002364:	eb04 0242 	add.w	r2, r4, r2, lsl #1
 8002368:	bf28      	it	cs
 800236a:	2300      	movcs	r3, #0
 800236c:	eb04 0343 	add.w	r3, r4, r3, lsl #1
            return buffer[pos];
 8002370:	8b50      	ldrh	r0, [r2, #26]
            buffer[index < size ? index : 0] = newChar;
 8002372:	8358      	strh	r0, [r3, #26]
            buffer[pos] = newChar;
 8002374:	8351      	strh	r1, [r2, #26]
        {
            nextCharacters.replaceAt1(nextCharacters.peekChar());
            nextCharacters.replaceAt0(0x093F);
        }
    }
    return getNextChar();
 8002376:	4620      	mov	r0, r4
}
 8002378:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    return getNextChar();
 800237c:	f009 bf0c 	b.w	800c198 <_ZN8touchgfx12TextProvider11getNextCharEv>
 8002380:	0801999c 	.word	0x0801999c
 8002384:	08019acf 	.word	0x08019acf
 8002388:	080199a5 	.word	0x080199a5
 800238c:	080199ef 	.word	0x080199ef
 8002390:	080199fd 	.word	0x080199fd

08002394 <_ZN8touchgfx12TextProvider18initializeInternalEv>:

void touchgfx::TextProvider::initializeInternal()
{
    fillInputBuffer();
 8002394:	f009 beba 	b.w	800c10c <_ZN8touchgfx12TextProvider15fillInputBufferEv>

08002398 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>:
}

void touchgfx::LCD::drawString(touchgfx::Rect widgetArea, const touchgfx::Rect& invalidatedArea, const touchgfx::LCD::StringVisuals& stringVisuals, const touchgfx::Unicode::UnicodeChar* format, ...)
{
 8002398:	b510      	push	{r4, lr}
 800239a:	b086      	sub	sp, #24
 800239c:	ac02      	add	r4, sp, #8
 800239e:	e884 0006 	stmia.w	r4, {r1, r2}
 80023a2:	461a      	mov	r2, r3
    va_list pArg;
    va_start(pArg, format);
 80023a4:	ab0a      	add	r3, sp, #40	; 0x28
 80023a6:	9305      	str	r3, [sp, #20]
    drawStringLTR(widgetArea, invalidatedArea, stringVisuals, format, pArg);
 80023a8:	9301      	str	r3, [sp, #4]
 80023aa:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80023ac:	9300      	str	r3, [sp, #0]
 80023ae:	4621      	mov	r1, r4
 80023b0:	9b08      	ldr	r3, [sp, #32]
 80023b2:	f007 fd3e 	bl	8009e32 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>
    va_end(pArg);
}
 80023b6:	b006      	add	sp, #24
 80023b8:	bd10      	pop	{r4, pc}
	...

080023bc <_ZN8touchgfx5Texts11setLanguageEt>:
touchgfx::LanguageId touchgfx::Texts::currentLanguage = static_cast<touchgfx::LanguageId>(0);
static const touchgfx::Unicode::UnicodeChar* currentLanguagePtr = 0;
static const uint32_t* currentLanguageIndices = 0;

void touchgfx::Texts::setLanguage(touchgfx::LanguageId id)
{
 80023bc:	b538      	push	{r3, r4, r5, lr}
    const touchgfx::TypedText::TypedTextData* currentLanguageTypedText = 0;
    if (id < 1)
 80023be:	b9d8      	cbnz	r0, 80023f8 <_ZN8touchgfx5Texts11setLanguageEt+0x3c>
    {
        if (languagesArray[id] != 0)
 80023c0:	4b11      	ldr	r3, [pc, #68]	; (8002408 <_ZN8touchgfx5Texts11setLanguageEt+0x4c>)
 80023c2:	4812      	ldr	r0, [pc, #72]	; (800240c <_ZN8touchgfx5Texts11setLanguageEt+0x50>)
 80023c4:	681b      	ldr	r3, [r3, #0]
 80023c6:	4912      	ldr	r1, [pc, #72]	; (8002410 <_ZN8touchgfx5Texts11setLanguageEt+0x54>)
 80023c8:	b1bb      	cbz	r3, 80023fa <_ZN8touchgfx5Texts11setLanguageEt+0x3e>
        {
            //dynamic translation is added
            const TranslationHeader* translation = languagesArray[id];
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
 80023ca:	681a      	ldr	r2, [r3, #0]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
 80023cc:	689c      	ldr	r4, [r3, #8]
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
 80023ce:	441a      	add	r2, r3
 80023d0:	6002      	str	r2, [r0, #0]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
 80023d2:	685a      	ldr	r2, [r3, #4]
 80023d4:	441a      	add	r2, r3
 80023d6:	600a      	str	r2, [r1, #0]
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
 80023d8:	441c      	add	r4, r3
            currentLanguageIndices = staticLanguageIndices[id];
            currentLanguageTypedText = typedTextDatabaseArray[id];
        }
    }

    if (currentLanguageTypedText)
 80023da:	b16c      	cbz	r4, 80023f8 <_ZN8touchgfx5Texts11setLanguageEt+0x3c>
    {
        currentLanguage = id;
 80023dc:	4b0d      	ldr	r3, [pc, #52]	; (8002414 <_ZN8touchgfx5Texts11setLanguageEt+0x58>)
 80023de:	2200      	movs	r2, #0
 80023e0:	801a      	strh	r2, [r3, #0]
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
                                                       TypedTextDatabase::getFonts(), TypedTextDatabase::getInstanceSize());
 80023e2:	f000 f835 	bl	8002450 <_ZN17TypedTextDatabase8getFontsEv>
 80023e6:	4605      	mov	r5, r0
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
 80023e8:	f000 f830 	bl	800244c <_ZN17TypedTextDatabase15getInstanceSizeEv>
        typedTexts = data;
 80023ec:	4b0a      	ldr	r3, [pc, #40]	; (8002418 <_ZN8touchgfx5Texts11setLanguageEt+0x5c>)
 80023ee:	601c      	str	r4, [r3, #0]
        fonts = f;
 80023f0:	4b0a      	ldr	r3, [pc, #40]	; (800241c <_ZN8touchgfx5Texts11setLanguageEt+0x60>)
 80023f2:	601d      	str	r5, [r3, #0]
        numberOfTypedTexts = n;
 80023f4:	4b0a      	ldr	r3, [pc, #40]	; (8002420 <_ZN8touchgfx5Texts11setLanguageEt+0x64>)
 80023f6:	8018      	strh	r0, [r3, #0]
    }
}
 80023f8:	bd38      	pop	{r3, r4, r5, pc}
            currentLanguagePtr = texts_all_languages;
 80023fa:	4b0a      	ldr	r3, [pc, #40]	; (8002424 <_ZN8touchgfx5Texts11setLanguageEt+0x68>)
 80023fc:	6003      	str	r3, [r0, #0]
            currentLanguageIndices = staticLanguageIndices[id];
 80023fe:	4b0a      	ldr	r3, [pc, #40]	; (8002428 <_ZN8touchgfx5Texts11setLanguageEt+0x6c>)
 8002400:	600b      	str	r3, [r1, #0]
            currentLanguageTypedText = typedTextDatabaseArray[id];
 8002402:	4b0a      	ldr	r3, [pc, #40]	; (800242c <_ZN8touchgfx5Texts11setLanguageEt+0x70>)
 8002404:	681c      	ldr	r4, [r3, #0]
 8002406:	e7e8      	b.n	80023da <_ZN8touchgfx5Texts11setLanguageEt+0x1e>
 8002408:	20001440 	.word	0x20001440
 800240c:	20001444 	.word	0x20001444
 8002410:	20001448 	.word	0x20001448
 8002414:	2000144c 	.word	0x2000144c
 8002418:	200121e8 	.word	0x200121e8
 800241c:	200121f0 	.word	0x200121f0
 8002420:	200121ec 	.word	0x200121ec
 8002424:	0801cc98 	.word	0x0801cc98
 8002428:	0801cc90 	.word	0x0801cc90
 800242c:	0801cce8 	.word	0x0801cce8

08002430 <_ZNK8touchgfx5Texts7getTextEt>:
    languagesArray[id] = (const TranslationHeader*)translation;
}

const touchgfx::Unicode::UnicodeChar* touchgfx::Texts::getText(TypedTextId id) const
{
    return &currentLanguagePtr[currentLanguageIndices[id]];
 8002430:	4b04      	ldr	r3, [pc, #16]	; (8002444 <_ZNK8touchgfx5Texts7getTextEt+0x14>)
 8002432:	681b      	ldr	r3, [r3, #0]
 8002434:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 8002438:	4b03      	ldr	r3, [pc, #12]	; (8002448 <_ZNK8touchgfx5Texts7getTextEt+0x18>)
 800243a:	681b      	ldr	r3, [r3, #0]
}
 800243c:	eb03 0040 	add.w	r0, r3, r0, lsl #1
 8002440:	4770      	bx	lr
 8002442:	bf00      	nop
 8002444:	20001448 	.word	0x20001448
 8002448:	20001444 	.word	0x20001444

0800244c <_ZN17TypedTextDatabase15getInstanceSizeEv>:
}

uint16_t getInstanceSize()
{
    return sizeof(typedText_database_DEFAULT) / sizeof(touchgfx::TypedText::TypedTextData);
}
 800244c:	2002      	movs	r0, #2
 800244e:	4770      	bx	lr

08002450 <_ZN17TypedTextDatabase8getFontsEv>:

const touchgfx::Font** getFonts()
{
    return touchgfx_fonts;
}
 8002450:	4800      	ldr	r0, [pc, #0]	; (8002454 <_ZN17TypedTextDatabase8getFontsEv+0x4>)
 8002452:	4770      	bx	lr
 8002454:	20001450 	.word	0x20001450

08002458 <_GLOBAL__sub_I_touchgfx_fonts>:
    case 2:
        touchgfx_fonts[2] = &(getFont_verdana_10_4bpp());
        break;
    }
}
}  // namespace TypedTextDatabase
 8002458:	b510      	push	{r4, lr}
    &(getFont_verdana_20_4bpp()),
 800245a:	f7ff fecb 	bl	80021f4 <_Z23getFont_verdana_20_4bppv>
};
 800245e:	4c04      	ldr	r4, [pc, #16]	; (8002470 <_GLOBAL__sub_I_touchgfx_fonts+0x18>)
 8002460:	6020      	str	r0, [r4, #0]
    &(getFont_verdana_40_4bpp()),
 8002462:	f7ff ff01 	bl	8002268 <_Z23getFont_verdana_40_4bppv>
};
 8002466:	6060      	str	r0, [r4, #4]
    &(getFont_verdana_10_4bpp())
 8002468:	f7ff fe8c 	bl	8002184 <_Z23getFont_verdana_10_4bppv>
};
 800246c:	60a0      	str	r0, [r4, #8]
}  // namespace TypedTextDatabase
 800246e:	bd10      	pop	{r4, pc}
 8002470:	20001450 	.word	0x20001450

08002474 <_ZN8touchgfx8Drawable11setPositionEssss>:
     * @param  width  The width of this Drawable.
     * @param  height The height of this Drawable.
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setPosition(int16_t x, int16_t y, int16_t width, int16_t height)
 8002474:	b570      	push	{r4, r5, r6, lr}
 8002476:	461e      	mov	r6, r3
    {
        setXY(x, y);
 8002478:	6803      	ldr	r3, [r0, #0]
    virtual void setPosition(int16_t x, int16_t y, int16_t width, int16_t height)
 800247a:	f9bd 5010 	ldrsh.w	r5, [sp, #16]
        setXY(x, y);
 800247e:	6b5b      	ldr	r3, [r3, #52]	; 0x34
    virtual void setPosition(int16_t x, int16_t y, int16_t width, int16_t height)
 8002480:	4604      	mov	r4, r0
        setXY(x, y);
 8002482:	4798      	blx	r3
        setWidth(width);
 8002484:	6823      	ldr	r3, [r4, #0]
 8002486:	4631      	mov	r1, r6
 8002488:	4620      	mov	r0, r4
 800248a:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 800248c:	4790      	blx	r2
        setHeight(height);
 800248e:	6823      	ldr	r3, [r4, #0]
 8002490:	4629      	mov	r1, r5
 8002492:	4620      	mov	r0, r4
 8002494:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
    }
 8002496:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setHeight(height);
 800249a:	4718      	bx	r3

0800249c <_ZN8touchgfx8Drawable4setXEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setX(int16_t x)
    {
        rect.x = x;
 800249c:	8081      	strh	r1, [r0, #4]
    }
 800249e:	4770      	bx	lr

080024a0 <_ZN8touchgfx8Drawable4setYEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setY(int16_t y)
    {
        rect.y = y;
 80024a0:	80c1      	strh	r1, [r0, #6]
    }
 80024a2:	4770      	bx	lr

080024a4 <_ZN8touchgfx8Drawable5setXYEss>:
     *
     * @see moveTo
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setXY(int16_t x, int16_t y)
 80024a4:	b570      	push	{r4, r5, r6, lr}
    {
        setX(x);
 80024a6:	6803      	ldr	r3, [r0, #0]
    virtual void setXY(int16_t x, int16_t y)
 80024a8:	4604      	mov	r4, r0
        setX(x);
 80024aa:	6adb      	ldr	r3, [r3, #44]	; 0x2c
    virtual void setXY(int16_t x, int16_t y)
 80024ac:	4615      	mov	r5, r2
        setX(x);
 80024ae:	4798      	blx	r3
        setY(y);
 80024b0:	6823      	ldr	r3, [r4, #0]
 80024b2:	4629      	mov	r1, r5
 80024b4:	4620      	mov	r0, r4
 80024b6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    }
 80024b8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setY(y);
 80024bc:	4718      	bx	r3

080024be <_ZN8touchgfx8Drawable8setWidthEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setWidth(int16_t width)
    {
        rect.width = width;
 80024be:	8101      	strh	r1, [r0, #8]
    }
 80024c0:	4770      	bx	lr

080024c2 <_ZN8touchgfx8Drawable9setHeightEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setHeight(int16_t height)
    {
        rect.height = height;
 80024c2:	8141      	strh	r1, [r0, #10]
    }
 80024c4:	4770      	bx	lr

080024c6 <_ZN8touchgfx8Drawable20childGeometryChangedEv>:
     * one or more of its children has changed. Currently only used in ScrollableContainer
     * to redraw scrollbars when the size of the scrolling contents changes.
     */
    virtual void childGeometryChanged()
    {
    }
 80024c6:	4770      	bx	lr

080024c8 <_ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE>:
     *
     * @param  evt The ClickEvent received from the HAL.
     */
    virtual void handleClickEvent(const ClickEvent& evt)
    {
    }
 80024c8:	4770      	bx	lr

080024ca <_ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE>:
     *
     * @param  evt The GestureEvent received from the HAL.
     */
    virtual void handleGestureEvent(const GestureEvent& evt)
    {
    }
 80024ca:	4770      	bx	lr

080024cc <_ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE>:
     *
     * @param  evt The DragEvent received from the HAL.
     */
    virtual void handleDragEvent(const DragEvent& evt)
    {
    }
 80024cc:	4770      	bx	lr

080024ce <_ZN8touchgfx8Drawable15handleTickEventEv>:
     *
     * @see Application::registerTimerWidget
     */
    virtual void handleTickEvent()
    {
    }
 80024ce:	4770      	bx	lr

080024d0 <_ZN8touchgfx8Drawable6moveToEss>:
     *
     * @note Will redraw the appropriate areas of the screen.
     */
    virtual void moveTo(int16_t x, int16_t y)
    {
        moveRelative(x - rect.x, y - rect.y);
 80024d0:	88c3      	ldrh	r3, [r0, #6]
 80024d2:	1ad2      	subs	r2, r2, r3
 80024d4:	8883      	ldrh	r3, [r0, #4]
 80024d6:	1ac9      	subs	r1, r1, r3
 80024d8:	6803      	ldr	r3, [r0, #0]
    virtual void moveTo(int16_t x, int16_t y)
 80024da:	b410      	push	{r4}
        moveRelative(x - rect.x, y - rect.y);
 80024dc:	6d5b      	ldr	r3, [r3, #84]	; 0x54
    }
 80024de:	f85d 4b04 	ldr.w	r4, [sp], #4
        moveRelative(x - rect.x, y - rect.y);
 80024e2:	b212      	sxth	r2, r2
 80024e4:	b209      	sxth	r1, r1
 80024e6:	4718      	bx	r3

080024e8 <_ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_>:
     * @note For TouchGFX internal use only.
     */
    void resetDrawChainCache()
    {
        // Resetting the cached indicators
        cachedVisibleRect.x = UNCACHED_INDICATOR;
 80024e8:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80024ec:	8183      	strh	r3, [r0, #12]
        cachedAbsX = UNCACHED_INDICATOR;
 80024ee:	f04f 33ff 	mov.w	r3, #4294967295
 80024f2:	6203      	str	r3, [r0, #32]
     * @note For TouchGFX internal use only.
     */
    virtual void setupDrawChain(const Rect& invalidatedArea, Drawable** nextPreviousElement)
    {
        resetDrawChainCache();
        nextDrawChainElement = *nextPreviousElement;
 80024f4:	6813      	ldr	r3, [r2, #0]
 80024f6:	61c3      	str	r3, [r0, #28]
        *nextPreviousElement = this;
 80024f8:	6010      	str	r0, [r2, #0]
    }
 80024fa:	4770      	bx	lr

080024fc <_ZN8touchgfx6Screen11setupScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void setupScreen()
    {
    }
 80024fc:	4770      	bx	lr

080024fe <_ZN8touchgfx6Screen15afterTransitionEv>:
     *
     * @see Application::handleTickEvent
     */
    virtual void afterTransition()
    {
    }
 80024fe:	4770      	bx	lr

08002500 <_ZN8touchgfx6Screen14tearDownScreenEv>:
     *
     * @see touchgfx::Application::switchScreen
     */
    virtual void tearDownScreen()
    {
    }
 8002500:	4770      	bx	lr

08002502 <_ZN8touchgfx6Screen15handleTickEventEv>:
     * Called by the Application on the current screen with a frequency of
     * Application::TICK_INTERVAL_MS.
     */
    virtual void handleTickEvent()
    {
    }
 8002502:	4770      	bx	lr

08002504 <_ZN8touchgfx6Screen14handleKeyEventEh>:
     *
     * @param  key The key to handle.
     */
    virtual void handleKeyEvent(uint8_t key)
    {
    }
 8002504:	4770      	bx	lr

08002506 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE>:
     * @param       y    Not used since this Widget is the only "child".
     * @param [out] last Result, the address of the actual instance of the Widget.
     */
    virtual void getLastChild(int16_t x, int16_t y, Drawable** last)
    {
        if (isVisible() && isTouchable())
 8002506:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 800250a:	b11a      	cbz	r2, 8002514 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
 800250c:	f890 2024 	ldrb.w	r2, [r0, #36]	; 0x24
 8002510:	b102      	cbz	r2, 8002514 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
        {
            *last = this;
 8002512:	6018      	str	r0, [r3, #0]
        }
    }
 8002514:	4770      	bx	lr

08002516 <_ZN18mainScreenViewBaseD1Ev>:

class mainScreenViewBase : public touchgfx::View<mainScreenPresenter>
{
public:
    mainScreenViewBase();
    virtual ~mainScreenViewBase() {}
 8002516:	4770      	bx	lr

08002518 <_ZN18mainScreenViewBase24XAxisSliderValue_ChangedEi>:
     * Virtual Action Handlers
     */
    virtual void XAxisSliderValue_Changed(int value)
    {
        // Override and implement this function in mainScreen
    }
 8002518:	4770      	bx	lr

0800251a <_ZN18mainScreenViewBase24YAxisSliderValue_ChangedEi>:

    virtual void YAxisSliderValue_Changed(int value)
    {
        // Override and implement this function in mainScreen
    }
 800251a:	4770      	bx	lr

0800251c <_ZN18mainScreenViewBase38ManipulatorControlToggleButton_ClickedEv>:

    virtual void ManipulatorControlToggleButton_Clicked()
    {
        // Override and implement this function in mainScreen
    }
 800251c:	4770      	bx	lr

0800251e <_ZN18mainScreenViewBase11setupScreenEv>:
}

void mainScreenViewBase::setupScreen()
{

}
 800251e:	4770      	bx	lr

08002520 <_ZN8touchgfx8CallbackI18mainScreenViewBaseRKNS_6SliderEivED1Ev>:
struct Callback<dest_type, T1, T2, void> : public GenericCallback<T1, T2>
 8002520:	4770      	bx	lr

08002522 <_ZN8touchgfx8CallbackI18mainScreenViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8002522:	4770      	bx	lr

08002524 <_ZN8touchgfx8CallbackI18mainScreenViewBaseRKNS_6SliderEivE7executeES4_i>:
    virtual void execute(T1 t1, T2 t2)
 8002524:	b470      	push	{r4, r5, r6}
        (pobject->*pmemfun_2)(t1, t2);
 8002526:	68c6      	ldr	r6, [r0, #12]
 8002528:	6845      	ldr	r5, [r0, #4]
 800252a:	1074      	asrs	r4, r6, #1
    virtual void execute(T1 t1, T2 t2)
 800252c:	4603      	mov	r3, r0
        (pobject->*pmemfun_2)(t1, t2);
 800252e:	07f6      	lsls	r6, r6, #31
 8002530:	eb05 0004 	add.w	r0, r5, r4
 8002534:	689b      	ldr	r3, [r3, #8]
 8002536:	bf44      	itt	mi
 8002538:	592c      	ldrmi	r4, [r5, r4]
 800253a:	58e3      	ldrmi	r3, [r4, r3]
    }
 800253c:	bc70      	pop	{r4, r5, r6}
        (pobject->*pmemfun_2)(t1, t2);
 800253e:	4718      	bx	r3

08002540 <_ZNK8touchgfx8CallbackI18mainScreenViewBaseRKNS_6SliderEivE7isValidEv>:
        return (pobject != 0) && (pmemfun_2 != 0);
 8002540:	6843      	ldr	r3, [r0, #4]
 8002542:	b12b      	cbz	r3, 8002550 <_ZNK8touchgfx8CallbackI18mainScreenViewBaseRKNS_6SliderEivE7isValidEv+0x10>
 8002544:	6883      	ldr	r3, [r0, #8]
 8002546:	b92b      	cbnz	r3, 8002554 <_ZNK8touchgfx8CallbackI18mainScreenViewBaseRKNS_6SliderEivE7isValidEv+0x14>
 8002548:	68c0      	ldr	r0, [r0, #12]
 800254a:	f000 0001 	and.w	r0, r0, #1
 800254e:	4770      	bx	lr
 8002550:	4618      	mov	r0, r3
 8002552:	4770      	bx	lr
 8002554:	2001      	movs	r0, #1
    }
 8002556:	4770      	bx	lr

08002558 <_ZN8touchgfx8CallbackI18mainScreenViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8002558:	b430      	push	{r4, r5}
        (pobject->*pmemfun_1)(t1);
 800255a:	68c5      	ldr	r5, [r0, #12]
 800255c:	6844      	ldr	r4, [r0, #4]
 800255e:	106a      	asrs	r2, r5, #1
    virtual void execute(T1 t1)
 8002560:	4603      	mov	r3, r0
        (pobject->*pmemfun_1)(t1);
 8002562:	07ed      	lsls	r5, r5, #31
 8002564:	eb04 0002 	add.w	r0, r4, r2
 8002568:	689b      	ldr	r3, [r3, #8]
 800256a:	bf48      	it	mi
 800256c:	58a2      	ldrmi	r2, [r4, r2]
    }
 800256e:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun_1)(t1);
 8002570:	bf48      	it	mi
 8002572:	58d3      	ldrmi	r3, [r2, r3]
 8002574:	4718      	bx	r3

08002576 <_ZNK8touchgfx8CallbackI18mainScreenViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun_1 != 0);
 8002576:	6843      	ldr	r3, [r0, #4]
 8002578:	b12b      	cbz	r3, 8002586 <_ZNK8touchgfx8CallbackI18mainScreenViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 800257a:	6883      	ldr	r3, [r0, #8]
 800257c:	b92b      	cbnz	r3, 800258a <_ZNK8touchgfx8CallbackI18mainScreenViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 800257e:	68c0      	ldr	r0, [r0, #12]
 8002580:	f000 0001 	and.w	r0, r0, #1
 8002584:	4770      	bx	lr
 8002586:	4618      	mov	r0, r3
 8002588:	4770      	bx	lr
 800258a:	2001      	movs	r0, #1
    }
 800258c:	4770      	bx	lr

0800258e <_ZN8touchgfx8CallbackI18mainScreenViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 800258e:	b510      	push	{r4, lr}
 8002590:	2110      	movs	r1, #16
 8002592:	4604      	mov	r4, r0
 8002594:	f015 fcb6 	bl	8017f04 <_ZdlPvj>
 8002598:	4620      	mov	r0, r4
 800259a:	bd10      	pop	{r4, pc}

0800259c <_ZN8touchgfx8CallbackI18mainScreenViewBaseRKNS_6SliderEivED0Ev>:
struct Callback<dest_type, T1, T2, void> : public GenericCallback<T1, T2>
 800259c:	b510      	push	{r4, lr}
 800259e:	2110      	movs	r1, #16
 80025a0:	4604      	mov	r4, r0
 80025a2:	f015 fcaf 	bl	8017f04 <_ZdlPvj>
 80025a6:	4620      	mov	r0, r4
 80025a8:	bd10      	pop	{r4, pc}

080025aa <_ZN18mainScreenViewBaseD0Ev>:
    virtual ~mainScreenViewBase() {}
 80025aa:	b510      	push	{r4, lr}
 80025ac:	f44f 7159 	mov.w	r1, #868	; 0x364
 80025b0:	4604      	mov	r4, r0
 80025b2:	f015 fca7 	bl	8017f04 <_ZdlPvj>
 80025b6:	4620      	mov	r0, r4
 80025b8:	bd10      	pop	{r4, pc}

080025ba <_ZN18mainScreenViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void mainScreenViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &manipulatorControlToggleButton)
 80025ba:	f100 029c 	add.w	r2, r0, #156	; 0x9c
 80025be:	428a      	cmp	r2, r1
 80025c0:	d102      	bne.n	80025c8 <_ZN18mainScreenViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0xe>
    {
        //ManipulatorControlToggleButton_Clicked
        //When manipulatorControlToggleButton clicked call virtual function
        //Call ManipulatorControlToggleButton_Clicked
        ManipulatorControlToggleButton_Clicked();
 80025c2:	6803      	ldr	r3, [r0, #0]
 80025c4:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80025c6:	4718      	bx	r3
    }
}
 80025c8:	4770      	bx	lr

080025ca <_ZN18mainScreenViewBase33sliderValueChangedCallbackHandlerERKN8touchgfx6SliderEi>:

void mainScreenViewBase::sliderValueChangedCallbackHandler(const touchgfx::Slider& src, int value)
{
 80025ca:	b410      	push	{r4}
    if (&src == &yAxisSlider)
 80025cc:	f500 74a6 	add.w	r4, r0, #332	; 0x14c
 80025d0:	42a1      	cmp	r1, r4
 80025d2:	d105      	bne.n	80025e0 <_ZN18mainScreenViewBase33sliderValueChangedCallbackHandlerERKN8touchgfx6SliderEi+0x16>
    {
        //YAxisSliderValue_Changed
        //When yAxisSlider value changed call virtual function
        //Call YAxisSliderValue_Changed
        YAxisSliderValue_Changed(value);
 80025d4:	6803      	ldr	r3, [r0, #0]
 80025d6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
        //XAxisSliderValue_Changed
        //When xAxisSlider value changed call virtual function
        //Call XAxisSliderValue_Changed
        XAxisSliderValue_Changed(value);
    }
}
 80025d8:	f85d 4b04 	ldr.w	r4, [sp], #4
        XAxisSliderValue_Changed(value);
 80025dc:	4611      	mov	r1, r2
 80025de:	4718      	bx	r3
    else if (&src == &xAxisSlider)
 80025e0:	f500 7412 	add.w	r4, r0, #584	; 0x248
 80025e4:	42a1      	cmp	r1, r4
 80025e6:	d102      	bne.n	80025ee <_ZN18mainScreenViewBase33sliderValueChangedCallbackHandlerERKN8touchgfx6SliderEi+0x24>
        XAxisSliderValue_Changed(value);
 80025e8:	6803      	ldr	r3, [r0, #0]
 80025ea:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80025ec:	e7f4      	b.n	80025d8 <_ZN18mainScreenViewBase33sliderValueChangedCallbackHandlerERKN8touchgfx6SliderEi+0xe>
}
 80025ee:	f85d 4b04 	ldr.w	r4, [sp], #4
 80025f2:	4770      	bx	lr

080025f4 <_ZN8touchgfx8DrawableC1Ev>:
          visible(true)
 80025f4:	4a09      	ldr	r2, [pc, #36]	; (800261c <_ZN8touchgfx8DrawableC1Ev+0x28>)
 80025f6:	6002      	str	r2, [r0, #0]
     * @param  width  The width.
     * @param  height The height.
     */
    Rect(int16_t x, int16_t y, int16_t width, int16_t height)
    {
        this->x = x;
 80025f8:	2200      	movs	r2, #0
 80025fa:	8082      	strh	r2, [r0, #4]
        this->y = y;
 80025fc:	80c2      	strh	r2, [r0, #6]
        this->width = width;
 80025fe:	8102      	strh	r2, [r0, #8]
        this->height = height;
 8002600:	8142      	strh	r2, [r0, #10]
        this->x = 0;
 8002602:	8182      	strh	r2, [r0, #12]
        this->y = 0;
 8002604:	81c2      	strh	r2, [r0, #14]
        this->width = 0;
 8002606:	8202      	strh	r2, [r0, #16]
        this->height = 0;
 8002608:	8242      	strh	r2, [r0, #18]
 800260a:	e9c0 2205 	strd	r2, r2, [r0, #20]
 800260e:	61c2      	str	r2, [r0, #28]
 8002610:	f880 2024 	strb.w	r2, [r0, #36]	; 0x24
 8002614:	2201      	movs	r2, #1
 8002616:	f880 2025 	strb.w	r2, [r0, #37]	; 0x25
    }
 800261a:	4770      	bx	lr
 800261c:	0801b0bc 	.word	0x0801b0bc

08002620 <_ZN8touchgfx8TextAreaC1Ev>:
 *       the pointer remains valid when drawing.
 */
class TextArea : public Widget
{
public:
    TextArea()
 8002620:	b510      	push	{r4, lr}
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE)
 8002622:	2226      	movs	r2, #38	; 0x26
    TextArea()
 8002624:	4604      	mov	r4, r0
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE)
 8002626:	2100      	movs	r1, #0
 8002628:	f015 fd21 	bl	801806e <memset>
class Widget : public Drawable
 800262c:	4620      	mov	r0, r4
 800262e:	f7ff ffe1 	bl	80025f4 <_ZN8touchgfx8DrawableC1Ev>
 8002632:	4b09      	ldr	r3, [pc, #36]	; (8002658 <_ZN8touchgfx8TextAreaC1Ev+0x38>)
 8002634:	6023      	str	r3, [r4, #0]
        : typedTextId(id)
 8002636:	4b09      	ldr	r3, [pc, #36]	; (800265c <_ZN8touchgfx8TextAreaC1Ev+0x3c>)
 8002638:	62a3      	str	r3, [r4, #40]	; 0x28
 800263a:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800263e:	85a3      	strh	r3, [r4, #44]	; 0x2c
        color = col;
 8002640:	f44f 027f 	mov.w	r2, #16711680	; 0xff0000
 8002644:	2300      	movs	r3, #0
 8002646:	e9c4 320c 	strd	r3, r2, [r4, #48]	; 0x30
 800264a:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38
 800264e:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
    {
    }
 8002652:	4620      	mov	r0, r4
 8002654:	bd10      	pop	{r4, pc}
 8002656:	bf00      	nop
 8002658:	0801ad28 	.word	0x0801ad28
 800265c:	0801958c 	.word	0x0801958c

08002660 <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh>:
     *
     * @note This function is not available to call before the LCD has been setup, because the
     *       color depth is required. Consider using the function getColorFromRGB for a
     *       specific class, e.g. LCD16::getColorFromRGB().
     */
    static colortype getColorFrom24BitRGB(uint8_t red, uint8_t green, uint8_t blue)
 8002660:	4613      	mov	r3, r2
        return instance;
 8002662:	4a0c      	ldr	r2, [pc, #48]	; (8002694 <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh+0x34>)
 8002664:	b570      	push	{r4, r5, r6, lr}
 8002666:	6814      	ldr	r4, [r2, #0]
 8002668:	4605      	mov	r5, r0
    {
        assert(HAL::getInstance() && "Cannot set color before HAL is initialized");
 800266a:	b92c      	cbnz	r4, 8002678 <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh+0x18>
 800266c:	4b0a      	ldr	r3, [pc, #40]	; (8002698 <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh+0x38>)
 800266e:	4a0b      	ldr	r2, [pc, #44]	; (800269c <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh+0x3c>)
 8002670:	480b      	ldr	r0, [pc, #44]	; (80026a0 <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh+0x40>)
 8002672:	2135      	movs	r1, #53	; 0x35
 8002674:	f015 fc72 	bl	8017f5c <__assert_func>
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 8002678:	f894 2076 	ldrb.w	r2, [r4, #118]	; 0x76
 800267c:	b10a      	cbz	r2, 8002682 <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh+0x22>
 800267e:	6ce0      	ldr	r0, [r4, #76]	; 0x4c
 8002680:	b900      	cbnz	r0, 8002684 <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh+0x24>
            return instance->lcdRef;
 8002682:	68a0      	ldr	r0, [r4, #8]
        return HAL::lcd().getColorFrom24BitRGB(red, green, blue);
 8002684:	6802      	ldr	r2, [r0, #0]
 8002686:	6a94      	ldr	r4, [r2, #40]	; 0x28
 8002688:	460a      	mov	r2, r1
 800268a:	46a4      	mov	ip, r4
 800268c:	4629      	mov	r1, r5
    }
 800268e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        return HAL::lcd().getColorFrom24BitRGB(red, green, blue);
 8002692:	4760      	bx	ip
 8002694:	20012178 	.word	0x20012178
 8002698:	08019bac 	.word	0x08019bac
 800269c:	08019c74 	.word	0x08019c74
 80026a0:	08019bef 	.word	0x08019bef

080026a4 <_ZN18mainScreenViewBaseC1Ev>:
mainScreenViewBase::mainScreenViewBase() :
 80026a4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80026a8:	4604      	mov	r4, r0
 80026aa:	b08b      	sub	sp, #44	; 0x2c
    sliderValueChangedCallback(this, &mainScreenViewBase::sliderValueChangedCallbackHandler)
 80026ac:	46a2      	mov	sl, r4
        : presenter(0)
 80026ae:	2500      	movs	r5, #0
 80026b0:	f008 ffba 	bl	800b628 <_ZN8touchgfx6ScreenC1Ev>
 80026b4:	4ba6      	ldr	r3, [pc, #664]	; (8002950 <_ZN18mainScreenViewBaseC1Ev+0x2ac>)
 80026b6:	63e5      	str	r5, [r4, #60]	; 0x3c
 80026b8:	f84a 3b40 	str.w	r3, [sl], #64
class Box : public Widget
{
public:
    /** Construct a new Box with a default alpha value of 255 (solid) */
    Box()
        : Widget(), alpha(255), color(0), reportAsSolid(false)
 80026bc:	f04f 0b26 	mov.w	fp, #38	; 0x26
 80026c0:	465a      	mov	r2, fp
 80026c2:	4629      	mov	r1, r5
 80026c4:	4650      	mov	r0, sl
 80026c6:	f015 fcd2 	bl	801806e <memset>
 80026ca:	4650      	mov	r0, sl
 80026cc:	f7ff ff92 	bl	80025f4 <_ZN8touchgfx8DrawableC1Ev>
     * array.
     *
     * @param  id (Optional) The unique bitmap identifier.
     */
    explicit Bitmap(const BitmapId id = BITMAP_INVALID)
        : bitmapId(id)
 80026d0:	ae0a      	add	r6, sp, #40	; 0x28
 80026d2:	f104 0970 	add.w	r9, r4, #112	; 0x70
 80026d6:	4b9f      	ldr	r3, [pc, #636]	; (8002954 <_ZN18mainScreenViewBaseC1Ev+0x2b0>)
 80026d8:	6423      	str	r3, [r4, #64]	; 0x40
 80026da:	f04f 08ff 	mov.w	r8, #255	; 0xff
 80026de:	f64f 77ff 	movw	r7, #65535	; 0xffff
     * @param  bmp (Optional) The bitmap to display.
     *
     * @see setBitmap
     */
    Image(const Bitmap& bmp = Bitmap())
        : Widget(), alpha(255)
 80026e2:	465a      	mov	r2, fp
 80026e4:	4629      	mov	r1, r5
 80026e6:	f884 8066 	strb.w	r8, [r4, #102]	; 0x66
 80026ea:	66a5      	str	r5, [r4, #104]	; 0x68
 80026ec:	f884 506c 	strb.w	r5, [r4, #108]	; 0x6c
 80026f0:	4648      	mov	r0, r9
 80026f2:	f826 7d08 	strh.w	r7, [r6, #-8]!
 80026f6:	f015 fcba 	bl	801806e <memset>
 80026fa:	4648      	mov	r0, r9
 80026fc:	f7ff ff7a 	bl	80025f4 <_ZN8touchgfx8DrawableC1Ev>
 8002700:	4b95      	ldr	r3, [pc, #596]	; (8002958 <_ZN18mainScreenViewBaseC1Ev+0x2b4>)
 8002702:	6723      	str	r3, [r4, #112]	; 0x70
 8002704:	f8a4 7096 	strh.w	r7, [r4, #150]	; 0x96
 8002708:	f884 7098 	strb.w	r7, [r4, #152]	; 0x98
    {
        setBitmap(bmp);
 800270c:	4631      	mov	r1, r6
 800270e:	4648      	mov	r0, r9
 8002710:	f006 ff27 	bl	8009562 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8002714:	f104 039c 	add.w	r3, r4, #156	; 0x9c
class AbstractButton : public Widget
{
public:
    /** Sets this Widget touchable so the user can interact with buttons. */
    AbstractButton()
        : Widget(), action(), pressed(false)
 8002718:	465a      	mov	r2, fp
 800271a:	4629      	mov	r1, r5
 800271c:	4618      	mov	r0, r3
 800271e:	9302      	str	r3, [sp, #8]
 8002720:	f015 fca5 	bl	801806e <memset>
 8002724:	9802      	ldr	r0, [sp, #8]
 8002726:	f8df b248 	ldr.w	fp, [pc, #584]	; 8002970 <_ZN18mainScreenViewBaseC1Ev+0x2cc>
 800272a:	f7ff ff63 	bl	80025f4 <_ZN8touchgfx8DrawableC1Ev>
        touchable = touch;
 800272e:	f04f 0301 	mov.w	r3, #1
 8002732:	f884 30c0 	strb.w	r3, [r4, #192]	; 0xc0
 * A ToggleButton is a Button specialization that swaps the two bitmaps when clicked, such that
 * the previous "pressed" bitmap, now becomes the one displayed when button is not
 * pressed. This can by used to give the effect of a button that can be pressed in and
 * when it is subsequently pressed, it will pop back out.
 */
class ToggleButton : public Button
 8002736:	4b89      	ldr	r3, [pc, #548]	; (800295c <_ZN18mainScreenViewBaseC1Ev+0x2b8>)
 8002738:	f8c4 309c 	str.w	r3, [r4, #156]	; 0x9c
 800273c:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 8002740:	f8c4 50c4 	str.w	r5, [r4, #196]	; 0xc4
 8002744:	f884 50c8 	strb.w	r5, [r4, #200]	; 0xc8
 8002748:	f8a4 70ca 	strh.w	r7, [r4, #202]	; 0xca
 800274c:	f8a4 70cc 	strh.w	r7, [r4, #204]	; 0xcc
 */
class Button : public AbstractButton
{
public:
    Button()
        : AbstractButton(), up(), down(), alpha(255)
 8002750:	f884 80ce 	strb.w	r8, [r4, #206]	; 0xce
 8002754:	f8a4 70d0 	strh.w	r7, [r4, #208]	; 0xd0
 8002758:	4618      	mov	r0, r3
 800275a:	9303      	str	r3, [sp, #12]
 800275c:	f7ff ff60 	bl	8002620 <_ZN8touchgfx8TextAreaC1Ev>
 8002760:	f504 7388 	add.w	r3, r4, #272	; 0x110
 8002764:	f504 78a6 	add.w	r8, r4, #332	; 0x14c
 8002768:	4618      	mov	r0, r3
 800276a:	f504 7712 	add.w	r7, r4, #584	; 0x248
 800276e:	9304      	str	r3, [sp, #16]
 8002770:	f7ff ff56 	bl	8002620 <_ZN8touchgfx8TextAreaC1Ev>
 8002774:	4640      	mov	r0, r8
 8002776:	f005 fca7 	bl	80080c8 <_ZN8touchgfx6SliderC1Ev>
 800277a:	4638      	mov	r0, r7
 800277c:	f005 fca4 	bl	80080c8 <_ZN8touchgfx6SliderC1Ev>
    {
 8002780:	4b77      	ldr	r3, [pc, #476]	; (8002960 <_ZN18mainScreenViewBaseC1Ev+0x2bc>)
 8002782:	f8c4 3344 	str.w	r3, [r4, #836]	; 0x344
        this->pmemfun_1 = pmemfun_1;
 8002786:	4b77      	ldr	r3, [pc, #476]	; (8002964 <_ZN18mainScreenViewBaseC1Ev+0x2c0>)
 8002788:	f8c4 334c 	str.w	r3, [r4, #844]	; 0x34c
    {
 800278c:	4b76      	ldr	r3, [pc, #472]	; (8002968 <_ZN18mainScreenViewBaseC1Ev+0x2c4>)
 800278e:	f8c4 3354 	str.w	r3, [r4, #852]	; 0x354
        this->pmemfun_2 = pmemfun_2;
 8002792:	4b76      	ldr	r3, [pc, #472]	; (800296c <_ZN18mainScreenViewBaseC1Ev+0x2c8>)
 8002794:	f8c4 335c 	str.w	r3, [r4, #860]	; 0x35c
    __background.setPosition(0, 0, 240, 320);
 8002798:	f44f 73a0 	mov.w	r3, #320	; 0x140
        this->pmemfun_1 = pmemfun_1;
 800279c:	f8c4 5350 	str.w	r5, [r4, #848]	; 0x350
        this->pmemfun_2 = pmemfun_2;
 80027a0:	f8c4 5360 	str.w	r5, [r4, #864]	; 0x360
 80027a4:	9300      	str	r3, [sp, #0]
 80027a6:	462a      	mov	r2, r5
 80027a8:	23f0      	movs	r3, #240	; 0xf0
 80027aa:	4629      	mov	r1, r5
 80027ac:	4650      	mov	r0, sl
        this->pobject = pobject;
 80027ae:	f8c4 4348 	str.w	r4, [r4, #840]	; 0x348
        this->pobject = pobject;
 80027b2:	f8c4 4358 	str.w	r4, [r4, #856]	; 0x358
 80027b6:	f7ff fe5d 	bl	8002474 <_ZN8touchgfx8Drawable11setPositionEssss>
    __background.setColor(touchgfx::Color::getColorFrom24BitRGB(0, 0, 0));
 80027ba:	462a      	mov	r2, r5
 80027bc:	4629      	mov	r1, r5
 80027be:	4628      	mov	r0, r5
 80027c0:	f7ff ff4e 	bl	8002660 <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh>
    backgroundImage.setXY(0, 0);
 80027c4:	462a      	mov	r2, r5
     *
     * @see getColor, Color::getColorFrom24BitRGB
     */
    void setColor(colortype color)
    {
        this->color = color;
 80027c6:	66a0      	str	r0, [r4, #104]	; 0x68
 80027c8:	4629      	mov	r1, r5
 80027ca:	4648      	mov	r0, r9
 80027cc:	f7ff fe6a 	bl	80024a4 <_ZN8touchgfx8Drawable5setXYEss>
    backgroundImage.setBitmap(touchgfx::Bitmap(BITMAP_BLUE_BACKGROUNDS_MAIN_BG_PORTRAIT_240X320PX_ID));
 80027d0:	4631      	mov	r1, r6
 80027d2:	4648      	mov	r0, r9
 80027d4:	f8ad 5020 	strh.w	r5, [sp, #32]
 80027d8:	f006 fec3 	bl	8009562 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    manipulatorControlToggleButton.setXY(95, 157);
 80027dc:	9802      	ldr	r0, [sp, #8]
 80027de:	229d      	movs	r2, #157	; 0x9d
 80027e0:	215f      	movs	r1, #95	; 0x5f
 80027e2:	f7ff fe5f 	bl	80024a4 <_ZN8touchgfx8Drawable5setXYEss>
 80027e6:	2305      	movs	r3, #5
 80027e8:	f8ad 301c 	strh.w	r3, [sp, #28]
 80027ec:	2306      	movs	r3, #6
{
public:

    virtual void setBitmaps(const Bitmap& bmpReleased, const Bitmap& bmpPressed)
    {
        originalPressed = bmpPressed;
 80027ee:	f8a4 30d0 	strh.w	r3, [r4, #208]	; 0xd0
        Button::setBitmaps(bmpReleased, bmpPressed);
 80027f2:	4632      	mov	r2, r6
 80027f4:	a907      	add	r1, sp, #28
 80027f6:	9802      	ldr	r0, [sp, #8]
 80027f8:	f8ad 3020 	strh.w	r3, [sp, #32]
 80027fc:	f006 fdfa 	bl	80093f4 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
    manipulatorControlToggleButton.setAction(buttonCallback);
 8002800:	f504 7351 	add.w	r3, r4, #836	; 0x344
     *
     * @see GenericCallback, handleClickEvent, ClickEvent
     */
    void setAction(GenericCallback<const AbstractButton&>& callback)
    {
        action = &callback;
 8002804:	f8c4 30c4 	str.w	r3, [r4, #196]	; 0xc4
    titleText.setXY(23, 15);
 8002808:	9803      	ldr	r0, [sp, #12]
 800280a:	220f      	movs	r2, #15
 800280c:	2117      	movs	r1, #23
 800280e:	f7ff fe49 	bl	80024a4 <_ZN8touchgfx8Drawable5setXYEss>
    titleText.setColor(touchgfx::Color::getColorFrom24BitRGB(0, 0, 0));
 8002812:	462a      	mov	r2, r5
 8002814:	4629      	mov	r1, r5
 8002816:	4628      	mov	r0, r5
 8002818:	f7ff ff22 	bl	8002660 <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh>
     *
     * @see getLinespacing
     */
    FORCE_INLINE_FUNCTION void setLinespacing(int16_t space)
    {
        linespace = space;
 800281c:	f8a4 5108 	strh.w	r5, [r4, #264]	; 0x108
        this->color = color;
 8002820:	f8c4 0104 	str.w	r0, [r4, #260]	; 0x104
    titleText.setTypedText(touchgfx::TypedText(T_SINGLEUSEID1));
 8002824:	4631      	mov	r1, r6
 8002826:	9803      	ldr	r0, [sp, #12]
 8002828:	f8cd b020 	str.w	fp, [sp, #32]
 800282c:	f8ad 5024 	strh.w	r5, [sp, #36]	; 0x24
 8002830:	f006 fd9e 	bl	8009370 <_ZN8touchgfx8TextArea12setTypedTextENS_9TypedTextE>
    manipulatorText.setXY(100, 101);
 8002834:	9804      	ldr	r0, [sp, #16]
 8002836:	2265      	movs	r2, #101	; 0x65
 8002838:	2164      	movs	r1, #100	; 0x64
 800283a:	f7ff fe33 	bl	80024a4 <_ZN8touchgfx8Drawable5setXYEss>
    manipulatorText.setColor(touchgfx::Color::getColorFrom24BitRGB(0, 0, 0));
 800283e:	462a      	mov	r2, r5
 8002840:	4629      	mov	r1, r5
 8002842:	4628      	mov	r0, r5
 8002844:	f7ff ff0c 	bl	8002660 <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh>
 8002848:	f04f 0301 	mov.w	r3, #1
 800284c:	f8c4 0140 	str.w	r0, [r4, #320]	; 0x140
        linespace = space;
 8002850:	f8a4 5144 	strh.w	r5, [r4, #324]	; 0x144
    manipulatorText.setTypedText(touchgfx::TypedText(T_SINGLEUSEID2));
 8002854:	4631      	mov	r1, r6
 8002856:	9804      	ldr	r0, [sp, #16]
 8002858:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 800285c:	f8cd b020 	str.w	fp, [sp, #32]
 8002860:	f006 fd86 	bl	8009370 <_ZN8touchgfx8TextArea12setTypedTextENS_9TypedTextE>
    yAxisSlider.setXY(23, 71);
 8002864:	4640      	mov	r0, r8
 8002866:	2247      	movs	r2, #71	; 0x47
 8002868:	2117      	movs	r1, #23
 800286a:	f7ff fe1b 	bl	80024a4 <_ZN8touchgfx8Drawable5setXYEss>
 800286e:	2304      	movs	r3, #4
 8002870:	f04f 0b03 	mov.w	fp, #3
 8002874:	f8ad 3018 	strh.w	r3, [sp, #24]
 8002878:	f8ad 301c 	strh.w	r3, [sp, #28]
    yAxisSlider.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_SLIDER_VERTICAL_SMALL_SLIDER3_VERTICAL_ROUND_BACK_ID), touchgfx::Bitmap(BITMAP_BLUE_SLIDER_VERTICAL_SMALL_SLIDER3_VERTICAL_ROUND_BACK_ID), touchgfx::Bitmap(BITMAP_BLUE_SLIDER_VERTICAL_SMALL_INDICATORS_SLIDER3_VERTICAL_ROUND_NOB_ID));
 800287c:	aa07      	add	r2, sp, #28
 800287e:	4633      	mov	r3, r6
 8002880:	a906      	add	r1, sp, #24
 8002882:	4640      	mov	r0, r8
 8002884:	f8ad b020 	strh.w	fp, [sp, #32]
 8002888:	f005 fc72 	bl	8008170 <_ZN8touchgfx6Slider10setBitmapsERKNS_6BitmapES3_S3_>
    yAxisSlider.setupVerticalSlider(7, 3, 0, 0, 125);
 800288c:	227d      	movs	r2, #125	; 0x7d
 800288e:	462b      	mov	r3, r5
 8002890:	e9cd 5200 	strd	r5, r2, [sp]
 8002894:	4640      	mov	r0, r8
 8002896:	465a      	mov	r2, fp
 8002898:	2107      	movs	r1, #7
 800289a:	f005 fb0f 	bl	8007ebc <_ZN8touchgfx6Slider19setupVerticalSliderEttttt>
    yAxisSlider.setValueRange(0, 100);
 800289e:	2264      	movs	r2, #100	; 0x64
 80028a0:	4629      	mov	r1, r5
 80028a2:	4640      	mov	r0, r8
 80028a4:	f005 fa09 	bl	8007cba <_ZN8touchgfx6Slider13setValueRangeEii>
    yAxisSlider.setValue(50);
 80028a8:	4640      	mov	r0, r8
 80028aa:	2132      	movs	r1, #50	; 0x32
 80028ac:	f005 f991 	bl	8007bd2 <_ZN8touchgfx6Slider8setValueEi>
    yAxisSlider.setNewValueCallback(sliderValueChangedCallback);
 80028b0:	f504 7255 	add.w	r2, r4, #852	; 0x354
 80028b4:	9205      	str	r2, [sp, #20]
     *
     * @see GenericCallback
     */
    void setNewValueCallback(GenericCallback<const Slider&, int>& callback)
    {
        newValueCallback = &callback;
 80028b6:	f8c4 2244 	str.w	r2, [r4, #580]	; 0x244
    xAxisSlider.setXY(31, 266);
 80028ba:	4638      	mov	r0, r7
 80028bc:	f44f 7285 	mov.w	r2, #266	; 0x10a
 80028c0:	211f      	movs	r1, #31
 80028c2:	f7ff fdef 	bl	80024a4 <_ZN8touchgfx8Drawable5setXYEss>
 80028c6:	2302      	movs	r3, #2
 80028c8:	f8ad 3018 	strh.w	r3, [sp, #24]
 80028cc:	f8ad 301c 	strh.w	r3, [sp, #28]
 80028d0:	f04f 0301 	mov.w	r3, #1
 80028d4:	f8ad 3020 	strh.w	r3, [sp, #32]
    xAxisSlider.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_SLIDER_HORIZONTAL_SMALL_SLIDER_HORIZONTAL_SMALL_ROUND_BACK_ID), touchgfx::Bitmap(BITMAP_BLUE_SLIDER_HORIZONTAL_SMALL_SLIDER_HORIZONTAL_SMALL_ROUND_BACK_ID), touchgfx::Bitmap(BITMAP_BLUE_SLIDER_HORIZONTAL_SMALL_INDICATORS_SLIDER_HORIZONTAL_SMALL_ROUND_KNOB_ID));
 80028d8:	aa07      	add	r2, sp, #28
 80028da:	4633      	mov	r3, r6
 80028dc:	a906      	add	r1, sp, #24
 80028de:	4638      	mov	r0, r7
 80028e0:	f005 fc46 	bl	8008170 <_ZN8touchgfx6Slider10setBitmapsERKNS_6BitmapES3_S3_>
    xAxisSlider.setupHorizontalSlider(3, 7, 0, 0, 125);
 80028e4:	237d      	movs	r3, #125	; 0x7d
 80028e6:	e9cd 5300 	strd	r5, r3, [sp]
 80028ea:	4659      	mov	r1, fp
 80028ec:	462b      	mov	r3, r5
 80028ee:	4638      	mov	r0, r7
 80028f0:	2207      	movs	r2, #7
 80028f2:	f005 fa7f 	bl	8007df4 <_ZN8touchgfx6Slider21setupHorizontalSliderEttttt>
    xAxisSlider.setValueRange(0, 100);
 80028f6:	2264      	movs	r2, #100	; 0x64
 80028f8:	4629      	mov	r1, r5
 80028fa:	4638      	mov	r0, r7
 80028fc:	f005 f9dd 	bl	8007cba <_ZN8touchgfx6Slider13setValueRangeEii>
    xAxisSlider.setValue(50);
 8002900:	4638      	mov	r0, r7
 8002902:	2132      	movs	r1, #50	; 0x32
     * @note Must not be called with a Drawable that was already added to the screen. If in doubt,
     *       call remove() first.
     */
    void add(Drawable& d)
    {
        container.add(d);
 8002904:	1d25      	adds	r5, r4, #4
 8002906:	f005 f964 	bl	8007bd2 <_ZN8touchgfx6Slider8setValueEi>
 800290a:	9b05      	ldr	r3, [sp, #20]
 800290c:	f8c4 3340 	str.w	r3, [r4, #832]	; 0x340
 8002910:	4651      	mov	r1, sl
 8002912:	4628      	mov	r0, r5
 8002914:	f005 f81e 	bl	8007954 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8002918:	4649      	mov	r1, r9
 800291a:	4628      	mov	r0, r5
 800291c:	f005 f81a 	bl	8007954 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8002920:	9902      	ldr	r1, [sp, #8]
 8002922:	4628      	mov	r0, r5
 8002924:	f005 f816 	bl	8007954 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8002928:	9903      	ldr	r1, [sp, #12]
 800292a:	4628      	mov	r0, r5
 800292c:	f005 f812 	bl	8007954 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8002930:	9904      	ldr	r1, [sp, #16]
 8002932:	4628      	mov	r0, r5
 8002934:	f005 f80e 	bl	8007954 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8002938:	4641      	mov	r1, r8
 800293a:	4628      	mov	r0, r5
 800293c:	f005 f80a 	bl	8007954 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8002940:	4628      	mov	r0, r5
 8002942:	4639      	mov	r1, r7
 8002944:	f005 f806 	bl	8007954 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8002948:	4620      	mov	r0, r4
 800294a:	b00b      	add	sp, #44	; 0x2c
 800294c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8002950:	08019c3c 	.word	0x08019c3c
 8002954:	0801add4 	.word	0x0801add4
 8002958:	0801aed4 	.word	0x0801aed4
 800295c:	0801abf8 	.word	0x0801abf8
 8002960:	08019b84 	.word	0x08019b84
 8002964:	080025bb 	.word	0x080025bb
 8002968:	08019b9c 	.word	0x08019b9c
 800296c:	080025cb 	.word	0x080025cb
 8002970:	0801958c 	.word	0x0801958c

08002974 <_ZN19FrontendApplicationD1Ev>:

class FrontendApplication : public FrontendApplicationBase
{
public:
    FrontendApplication(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplication() { }
 8002974:	4770      	bx	lr

08002976 <_ZN19FrontendApplicationD0Ev>:
 8002976:	b510      	push	{r4, lr}
 8002978:	f44f 71ac 	mov.w	r1, #344	; 0x158
 800297c:	4604      	mov	r4, r0
 800297e:	f015 fac1 	bl	8017f04 <_ZdlPvj>
 8002982:	4620      	mov	r0, r4
 8002984:	bd10      	pop	{r4, pc}

08002986 <_ZN19FrontendApplication15handleTickEventEv>:

    virtual void handleTickEvent()
 8002986:	b510      	push	{r4, lr}
 8002988:	4604      	mov	r4, r0
    {
        model.tick();
 800298a:	f8d0 0154 	ldr.w	r0, [r0, #340]	; 0x154
 800298e:	f000 f812 	bl	80029b6 <_ZN5Model4tickEv>
        FrontendApplicationBase::handleTickEvent();
 8002992:	4620      	mov	r0, r4
    }
 8002994:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        FrontendApplicationBase::handleTickEvent();
 8002998:	f007 bd14 	b.w	800a3c4 <_ZN8touchgfx11Application15handleTickEventEv>

0800299c <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>:
#include <gui/common/FrontendApplication.hpp>

FrontendApplication::FrontendApplication(Model& m, FrontendHeap& heap)
 800299c:	b510      	push	{r4, lr}
 800299e:	4604      	mov	r4, r0
    : FrontendApplicationBase(m, heap)
 80029a0:	f7ff fa9a 	bl	8001ed8 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>
 80029a4:	4b01      	ldr	r3, [pc, #4]	; (80029ac <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap+0x10>)
 80029a6:	6023      	str	r3, [r4, #0]
{

}
 80029a8:	4620      	mov	r0, r4
 80029aa:	bd10      	pop	{r4, pc}
 80029ac:	08019cd8 	.word	0x08019cd8

080029b0 <_ZN5ModelC1Ev>:
#include <gui/model/Model.hpp>
#include <gui/model/ModelListener.hpp>

Model::Model() : modelListener(0)
 80029b0:	2200      	movs	r2, #0
 80029b2:	6002      	str	r2, [r0, #0]
{

}
 80029b4:	4770      	bx	lr

080029b6 <_ZN5Model4tickEv>:

void Model::tick()
{

}
 80029b6:	4770      	bx	lr

080029b8 <_ZN19mainScreenPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~mainScreenPresenter() {};
 80029b8:	4770      	bx	lr

080029ba <_ZThn4_N19mainScreenPresenterD1Ev>:
 80029ba:	3804      	subs	r0, #4
 80029bc:	4770      	bx	lr

080029be <_ZN19mainScreenPresenter10deactivateEv>:
}

void mainScreenPresenter::activate()
{

}
 80029be:	4770      	bx	lr

080029c0 <_ZN19mainScreenPresenterD0Ev>:
 80029c0:	b510      	push	{r4, lr}
 80029c2:	2110      	movs	r1, #16
 80029c4:	4604      	mov	r4, r0
 80029c6:	f015 fa9d 	bl	8017f04 <_ZdlPvj>
 80029ca:	4620      	mov	r0, r4
 80029cc:	bd10      	pop	{r4, pc}

080029ce <_ZThn4_N19mainScreenPresenterD0Ev>:
 80029ce:	f1a0 0004 	sub.w	r0, r0, #4
 80029d2:	e7f5      	b.n	80029c0 <_ZN19mainScreenPresenterD0Ev>

080029d4 <_ZN19mainScreenPresenterC1ER14mainScreenView>:
mainScreenPresenter::mainScreenPresenter(mainScreenView& v)
 80029d4:	b510      	push	{r4, lr}
    ModelListener() : model(0) {}
 80029d6:	2200      	movs	r2, #0
 80029d8:	6082      	str	r2, [r0, #8]
    : view(v)
 80029da:	4a04      	ldr	r2, [pc, #16]	; (80029ec <_ZN19mainScreenPresenterC1ER14mainScreenView+0x18>)
 80029dc:	60c1      	str	r1, [r0, #12]
 80029de:	f102 0408 	add.w	r4, r2, #8
 80029e2:	3220      	adds	r2, #32
 80029e4:	6004      	str	r4, [r0, #0]
 80029e6:	6042      	str	r2, [r0, #4]
}
 80029e8:	bd10      	pop	{r4, pc}
 80029ea:	bf00      	nop
 80029ec:	08019d14 	.word	0x08019d14

080029f0 <_ZN14mainScreenViewD1Ev>:

class mainScreenView : public mainScreenViewBase
{
public:
    mainScreenView();
    virtual ~mainScreenView() {}
 80029f0:	4770      	bx	lr

080029f2 <_ZN14mainScreenView14tearDownScreenEv>:
}

void mainScreenView::tearDownScreen()
{
    mainScreenViewBase::tearDownScreen();
}
 80029f2:	4770      	bx	lr

080029f4 <_ZN14mainScreenView24XAxisSliderValue_ChangedEi>:

void mainScreenView::XAxisSliderValue_Changed(int value)
{

}
 80029f4:	4770      	bx	lr

080029f6 <_ZN14mainScreenView11setupScreenEv>:
    mainScreenViewBase::setupScreen();
 80029f6:	f7ff bd92 	b.w	800251e <_ZN18mainScreenViewBase11setupScreenEv>

080029fa <_ZN14mainScreenViewD0Ev>:
 80029fa:	b510      	push	{r4, lr}
 80029fc:	f44f 7159 	mov.w	r1, #868	; 0x364
 8002a00:	4604      	mov	r4, r0
 8002a02:	f015 fa7f 	bl	8017f04 <_ZdlPvj>
 8002a06:	4620      	mov	r0, r4
 8002a08:	bd10      	pop	{r4, pc}
	...

08002a0c <_ZN14mainScreenViewC1Ev>:
mainScreenView::mainScreenView()
 8002a0c:	b510      	push	{r4, lr}
 8002a0e:	4604      	mov	r4, r0
 8002a10:	f7ff fe48 	bl	80026a4 <_ZN18mainScreenViewBaseC1Ev>
 8002a14:	4b01      	ldr	r3, [pc, #4]	; (8002a1c <_ZN14mainScreenViewC1Ev+0x10>)
 8002a16:	6023      	str	r3, [r4, #0]
}
 8002a18:	4620      	mov	r0, r4
 8002a1a:	bd10      	pop	{r4, pc}
 8002a1c:	08019d44 	.word	0x08019d44

08002a20 <ili9341_GetLcdPixelWidth>:
  */
uint16_t ili9341_GetLcdPixelWidth(void)
{
  /* Return LCD PIXEL WIDTH */
  return ILI9341_LCD_PIXEL_WIDTH;
}
 8002a20:	20f0      	movs	r0, #240	; 0xf0
 8002a22:	4770      	bx	lr

08002a24 <ili9341_GetLcdPixelHeight>:
  */
uint16_t ili9341_GetLcdPixelHeight(void)
{
  /* Return LCD PIXEL HEIGHT */
  return ILI9341_LCD_PIXEL_HEIGHT;
}
 8002a24:	f44f 70a0 	mov.w	r0, #320	; 0x140
 8002a28:	4770      	bx	lr

08002a2a <ili9341_DisplayOn>:
  LCD_IO_WriteReg(LCD_Reg);
 8002a2a:	2029      	movs	r0, #41	; 0x29
 8002a2c:	f7fe be76 	b.w	800171c <LCD_IO_WriteReg>

08002a30 <ili9341_DisplayOff>:
 8002a30:	2028      	movs	r0, #40	; 0x28
 8002a32:	f7fe be73 	b.w	800171c <LCD_IO_WriteReg>

08002a36 <ili9341_Init>:
{
 8002a36:	b508      	push	{r3, lr}
  LCD_IO_Init();
 8002a38:	f7fe fe44 	bl	80016c4 <LCD_IO_Init>
  LCD_IO_WriteReg(LCD_Reg);
 8002a3c:	20ca      	movs	r0, #202	; 0xca
 8002a3e:	f7fe fe6d 	bl	800171c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8002a42:	20c3      	movs	r0, #195	; 0xc3
 8002a44:	f7fe fe4e 	bl	80016e4 <LCD_IO_WriteData>
 8002a48:	2008      	movs	r0, #8
 8002a4a:	f7fe fe4b 	bl	80016e4 <LCD_IO_WriteData>
 8002a4e:	2050      	movs	r0, #80	; 0x50
 8002a50:	f7fe fe48 	bl	80016e4 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8002a54:	20cf      	movs	r0, #207	; 0xcf
 8002a56:	f7fe fe61 	bl	800171c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8002a5a:	2000      	movs	r0, #0
 8002a5c:	f7fe fe42 	bl	80016e4 <LCD_IO_WriteData>
 8002a60:	20c1      	movs	r0, #193	; 0xc1
 8002a62:	f7fe fe3f 	bl	80016e4 <LCD_IO_WriteData>
 8002a66:	2030      	movs	r0, #48	; 0x30
 8002a68:	f7fe fe3c 	bl	80016e4 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8002a6c:	20ed      	movs	r0, #237	; 0xed
 8002a6e:	f7fe fe55 	bl	800171c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8002a72:	2064      	movs	r0, #100	; 0x64
 8002a74:	f7fe fe36 	bl	80016e4 <LCD_IO_WriteData>
 8002a78:	2003      	movs	r0, #3
 8002a7a:	f7fe fe33 	bl	80016e4 <LCD_IO_WriteData>
 8002a7e:	2012      	movs	r0, #18
 8002a80:	f7fe fe30 	bl	80016e4 <LCD_IO_WriteData>
 8002a84:	2081      	movs	r0, #129	; 0x81
 8002a86:	f7fe fe2d 	bl	80016e4 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8002a8a:	20e8      	movs	r0, #232	; 0xe8
 8002a8c:	f7fe fe46 	bl	800171c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8002a90:	2085      	movs	r0, #133	; 0x85
 8002a92:	f7fe fe27 	bl	80016e4 <LCD_IO_WriteData>
 8002a96:	2000      	movs	r0, #0
 8002a98:	f7fe fe24 	bl	80016e4 <LCD_IO_WriteData>
 8002a9c:	2078      	movs	r0, #120	; 0x78
 8002a9e:	f7fe fe21 	bl	80016e4 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8002aa2:	20cb      	movs	r0, #203	; 0xcb
 8002aa4:	f7fe fe3a 	bl	800171c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8002aa8:	2039      	movs	r0, #57	; 0x39
 8002aaa:	f7fe fe1b 	bl	80016e4 <LCD_IO_WriteData>
 8002aae:	202c      	movs	r0, #44	; 0x2c
 8002ab0:	f7fe fe18 	bl	80016e4 <LCD_IO_WriteData>
 8002ab4:	2000      	movs	r0, #0
 8002ab6:	f7fe fe15 	bl	80016e4 <LCD_IO_WriteData>
 8002aba:	2034      	movs	r0, #52	; 0x34
 8002abc:	f7fe fe12 	bl	80016e4 <LCD_IO_WriteData>
 8002ac0:	2002      	movs	r0, #2
 8002ac2:	f7fe fe0f 	bl	80016e4 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8002ac6:	20f7      	movs	r0, #247	; 0xf7
 8002ac8:	f7fe fe28 	bl	800171c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8002acc:	2020      	movs	r0, #32
 8002ace:	f7fe fe09 	bl	80016e4 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8002ad2:	20ea      	movs	r0, #234	; 0xea
 8002ad4:	f7fe fe22 	bl	800171c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8002ad8:	2000      	movs	r0, #0
 8002ada:	f7fe fe03 	bl	80016e4 <LCD_IO_WriteData>
 8002ade:	2000      	movs	r0, #0
 8002ae0:	f7fe fe00 	bl	80016e4 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8002ae4:	20b1      	movs	r0, #177	; 0xb1
 8002ae6:	f7fe fe19 	bl	800171c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8002aea:	2000      	movs	r0, #0
 8002aec:	f7fe fdfa 	bl	80016e4 <LCD_IO_WriteData>
 8002af0:	201b      	movs	r0, #27
 8002af2:	f7fe fdf7 	bl	80016e4 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8002af6:	20b6      	movs	r0, #182	; 0xb6
 8002af8:	f7fe fe10 	bl	800171c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8002afc:	200a      	movs	r0, #10
 8002afe:	f7fe fdf1 	bl	80016e4 <LCD_IO_WriteData>
 8002b02:	20a2      	movs	r0, #162	; 0xa2
 8002b04:	f7fe fdee 	bl	80016e4 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8002b08:	20c0      	movs	r0, #192	; 0xc0
 8002b0a:	f7fe fe07 	bl	800171c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8002b0e:	2010      	movs	r0, #16
 8002b10:	f7fe fde8 	bl	80016e4 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8002b14:	20c1      	movs	r0, #193	; 0xc1
 8002b16:	f7fe fe01 	bl	800171c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8002b1a:	2010      	movs	r0, #16
 8002b1c:	f7fe fde2 	bl	80016e4 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8002b20:	20c5      	movs	r0, #197	; 0xc5
 8002b22:	f7fe fdfb 	bl	800171c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8002b26:	2045      	movs	r0, #69	; 0x45
 8002b28:	f7fe fddc 	bl	80016e4 <LCD_IO_WriteData>
 8002b2c:	2015      	movs	r0, #21
 8002b2e:	f7fe fdd9 	bl	80016e4 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8002b32:	20c7      	movs	r0, #199	; 0xc7
 8002b34:	f7fe fdf2 	bl	800171c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8002b38:	2090      	movs	r0, #144	; 0x90
 8002b3a:	f7fe fdd3 	bl	80016e4 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8002b3e:	2036      	movs	r0, #54	; 0x36
 8002b40:	f7fe fdec 	bl	800171c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8002b44:	20c8      	movs	r0, #200	; 0xc8
 8002b46:	f7fe fdcd 	bl	80016e4 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8002b4a:	20f2      	movs	r0, #242	; 0xf2
 8002b4c:	f7fe fde6 	bl	800171c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8002b50:	2000      	movs	r0, #0
 8002b52:	f7fe fdc7 	bl	80016e4 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8002b56:	20b0      	movs	r0, #176	; 0xb0
 8002b58:	f7fe fde0 	bl	800171c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8002b5c:	20c2      	movs	r0, #194	; 0xc2
 8002b5e:	f7fe fdc1 	bl	80016e4 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8002b62:	20b6      	movs	r0, #182	; 0xb6
 8002b64:	f7fe fdda 	bl	800171c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8002b68:	200a      	movs	r0, #10
 8002b6a:	f7fe fdbb 	bl	80016e4 <LCD_IO_WriteData>
 8002b6e:	20a7      	movs	r0, #167	; 0xa7
 8002b70:	f7fe fdb8 	bl	80016e4 <LCD_IO_WriteData>
 8002b74:	2027      	movs	r0, #39	; 0x27
 8002b76:	f7fe fdb5 	bl	80016e4 <LCD_IO_WriteData>
 8002b7a:	2004      	movs	r0, #4
 8002b7c:	f7fe fdb2 	bl	80016e4 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8002b80:	202a      	movs	r0, #42	; 0x2a
 8002b82:	f7fe fdcb 	bl	800171c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8002b86:	2000      	movs	r0, #0
 8002b88:	f7fe fdac 	bl	80016e4 <LCD_IO_WriteData>
 8002b8c:	2000      	movs	r0, #0
 8002b8e:	f7fe fda9 	bl	80016e4 <LCD_IO_WriteData>
 8002b92:	2000      	movs	r0, #0
 8002b94:	f7fe fda6 	bl	80016e4 <LCD_IO_WriteData>
 8002b98:	20ef      	movs	r0, #239	; 0xef
 8002b9a:	f7fe fda3 	bl	80016e4 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8002b9e:	202b      	movs	r0, #43	; 0x2b
 8002ba0:	f7fe fdbc 	bl	800171c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8002ba4:	2000      	movs	r0, #0
 8002ba6:	f7fe fd9d 	bl	80016e4 <LCD_IO_WriteData>
 8002baa:	2000      	movs	r0, #0
 8002bac:	f7fe fd9a 	bl	80016e4 <LCD_IO_WriteData>
 8002bb0:	2001      	movs	r0, #1
 8002bb2:	f7fe fd97 	bl	80016e4 <LCD_IO_WriteData>
 8002bb6:	203f      	movs	r0, #63	; 0x3f
 8002bb8:	f7fe fd94 	bl	80016e4 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8002bbc:	20f6      	movs	r0, #246	; 0xf6
 8002bbe:	f7fe fdad 	bl	800171c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8002bc2:	2001      	movs	r0, #1
 8002bc4:	f7fe fd8e 	bl	80016e4 <LCD_IO_WriteData>
 8002bc8:	2000      	movs	r0, #0
 8002bca:	f7fe fd8b 	bl	80016e4 <LCD_IO_WriteData>
 8002bce:	2006      	movs	r0, #6
 8002bd0:	f7fe fd88 	bl	80016e4 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8002bd4:	202c      	movs	r0, #44	; 0x2c
 8002bd6:	f7fe fda1 	bl	800171c <LCD_IO_WriteReg>
  LCD_Delay(200);
 8002bda:	20c8      	movs	r0, #200	; 0xc8
 8002bdc:	f7fe fdec 	bl	80017b8 <LCD_Delay>
  LCD_IO_WriteReg(LCD_Reg);
 8002be0:	2026      	movs	r0, #38	; 0x26
 8002be2:	f7fe fd9b 	bl	800171c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8002be6:	2001      	movs	r0, #1
 8002be8:	f7fe fd7c 	bl	80016e4 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8002bec:	20e0      	movs	r0, #224	; 0xe0
 8002bee:	f7fe fd95 	bl	800171c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8002bf2:	200f      	movs	r0, #15
 8002bf4:	f7fe fd76 	bl	80016e4 <LCD_IO_WriteData>
 8002bf8:	2029      	movs	r0, #41	; 0x29
 8002bfa:	f7fe fd73 	bl	80016e4 <LCD_IO_WriteData>
 8002bfe:	2024      	movs	r0, #36	; 0x24
 8002c00:	f7fe fd70 	bl	80016e4 <LCD_IO_WriteData>
 8002c04:	200c      	movs	r0, #12
 8002c06:	f7fe fd6d 	bl	80016e4 <LCD_IO_WriteData>
 8002c0a:	200e      	movs	r0, #14
 8002c0c:	f7fe fd6a 	bl	80016e4 <LCD_IO_WriteData>
 8002c10:	2009      	movs	r0, #9
 8002c12:	f7fe fd67 	bl	80016e4 <LCD_IO_WriteData>
 8002c16:	204e      	movs	r0, #78	; 0x4e
 8002c18:	f7fe fd64 	bl	80016e4 <LCD_IO_WriteData>
 8002c1c:	2078      	movs	r0, #120	; 0x78
 8002c1e:	f7fe fd61 	bl	80016e4 <LCD_IO_WriteData>
 8002c22:	203c      	movs	r0, #60	; 0x3c
 8002c24:	f7fe fd5e 	bl	80016e4 <LCD_IO_WriteData>
 8002c28:	2009      	movs	r0, #9
 8002c2a:	f7fe fd5b 	bl	80016e4 <LCD_IO_WriteData>
 8002c2e:	2013      	movs	r0, #19
 8002c30:	f7fe fd58 	bl	80016e4 <LCD_IO_WriteData>
 8002c34:	2005      	movs	r0, #5
 8002c36:	f7fe fd55 	bl	80016e4 <LCD_IO_WriteData>
 8002c3a:	2017      	movs	r0, #23
 8002c3c:	f7fe fd52 	bl	80016e4 <LCD_IO_WriteData>
 8002c40:	2011      	movs	r0, #17
 8002c42:	f7fe fd4f 	bl	80016e4 <LCD_IO_WriteData>
 8002c46:	2000      	movs	r0, #0
 8002c48:	f7fe fd4c 	bl	80016e4 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8002c4c:	20e1      	movs	r0, #225	; 0xe1
 8002c4e:	f7fe fd65 	bl	800171c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8002c52:	2000      	movs	r0, #0
 8002c54:	f7fe fd46 	bl	80016e4 <LCD_IO_WriteData>
 8002c58:	2016      	movs	r0, #22
 8002c5a:	f7fe fd43 	bl	80016e4 <LCD_IO_WriteData>
 8002c5e:	201b      	movs	r0, #27
 8002c60:	f7fe fd40 	bl	80016e4 <LCD_IO_WriteData>
 8002c64:	2004      	movs	r0, #4
 8002c66:	f7fe fd3d 	bl	80016e4 <LCD_IO_WriteData>
 8002c6a:	2011      	movs	r0, #17
 8002c6c:	f7fe fd3a 	bl	80016e4 <LCD_IO_WriteData>
 8002c70:	2007      	movs	r0, #7
 8002c72:	f7fe fd37 	bl	80016e4 <LCD_IO_WriteData>
 8002c76:	2031      	movs	r0, #49	; 0x31
 8002c78:	f7fe fd34 	bl	80016e4 <LCD_IO_WriteData>
 8002c7c:	2033      	movs	r0, #51	; 0x33
 8002c7e:	f7fe fd31 	bl	80016e4 <LCD_IO_WriteData>
 8002c82:	2042      	movs	r0, #66	; 0x42
 8002c84:	f7fe fd2e 	bl	80016e4 <LCD_IO_WriteData>
 8002c88:	2005      	movs	r0, #5
 8002c8a:	f7fe fd2b 	bl	80016e4 <LCD_IO_WriteData>
 8002c8e:	200c      	movs	r0, #12
 8002c90:	f7fe fd28 	bl	80016e4 <LCD_IO_WriteData>
 8002c94:	200a      	movs	r0, #10
 8002c96:	f7fe fd25 	bl	80016e4 <LCD_IO_WriteData>
 8002c9a:	2028      	movs	r0, #40	; 0x28
 8002c9c:	f7fe fd22 	bl	80016e4 <LCD_IO_WriteData>
 8002ca0:	202f      	movs	r0, #47	; 0x2f
 8002ca2:	f7fe fd1f 	bl	80016e4 <LCD_IO_WriteData>
 8002ca6:	200f      	movs	r0, #15
 8002ca8:	f7fe fd1c 	bl	80016e4 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8002cac:	2011      	movs	r0, #17
 8002cae:	f7fe fd35 	bl	800171c <LCD_IO_WriteReg>
  LCD_Delay(200);
 8002cb2:	20c8      	movs	r0, #200	; 0xc8
 8002cb4:	f7fe fd80 	bl	80017b8 <LCD_Delay>
  LCD_IO_WriteReg(LCD_Reg);
 8002cb8:	2029      	movs	r0, #41	; 0x29
 8002cba:	f7fe fd2f 	bl	800171c <LCD_IO_WriteReg>
 8002cbe:	202c      	movs	r0, #44	; 0x2c
}
 8002cc0:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  LCD_IO_WriteReg(LCD_Reg);
 8002cc4:	f7fe bd2a 	b.w	800171c <LCD_IO_WriteReg>

08002cc8 <ili9341_ReadID>:
{
 8002cc8:	b508      	push	{r3, lr}
  LCD_IO_Init();
 8002cca:	f7fe fcfb 	bl	80016c4 <LCD_IO_Init>
  return (LCD_IO_ReadData(RegValue, ReadSize));
 8002cce:	2103      	movs	r1, #3
 8002cd0:	20d3      	movs	r0, #211	; 0xd3
 8002cd2:	f7fe fd3f 	bl	8001754 <LCD_IO_ReadData>
}
 8002cd6:	b280      	uxth	r0, r0
 8002cd8:	bd08      	pop	{r3, pc}

08002cda <stmpe811_Reset>:
  * @brief  Reset the stmpe811 by Software.
  * @param  DeviceAddr: Device address on communication Bus.  
  * @retval None
  */
void stmpe811_Reset(uint16_t DeviceAddr)
{
 8002cda:	b510      	push	{r4, lr}
  /* Power Down the stmpe811 */  
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 2);
 8002cdc:	b2c4      	uxtb	r4, r0
 8002cde:	2202      	movs	r2, #2
 8002ce0:	2103      	movs	r1, #3
 8002ce2:	4620      	mov	r0, r4
 8002ce4:	f7fe fca6 	bl	8001634 <IOE_Write>

  /* Wait for a delay to ensure registers erasing */
  IOE_Delay(10); 
 8002ce8:	200a      	movs	r0, #10
 8002cea:	f7fe fce9 	bl	80016c0 <IOE_Delay>
  
  /* Power On the Codec after the power off => all registers are reinitialized */
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 0);
 8002cee:	4620      	mov	r0, r4
 8002cf0:	2200      	movs	r2, #0
 8002cf2:	2103      	movs	r1, #3
 8002cf4:	f7fe fc9e 	bl	8001634 <IOE_Write>
  
  /* Wait for a delay to ensure registers erasing */
  IOE_Delay(2); 
 8002cf8:	2002      	movs	r0, #2
}
 8002cfa:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Delay(2); 
 8002cfe:	f7fe bcdf 	b.w	80016c0 <IOE_Delay>

08002d02 <stmpe811_ReadID>:
  * @brief  Read the stmpe811 IO Expander device ID.
  * @param  DeviceAddr: Device address on communication Bus.  
  * @retval The Device ID (two bytes).
  */
uint16_t stmpe811_ReadID(uint16_t DeviceAddr)
{
 8002d02:	b538      	push	{r3, r4, r5, lr}
 8002d04:	4604      	mov	r4, r0
  /* Initialize IO BUS layer */
  IOE_Init(); 
  
  /* Return the device ID value */
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 8002d06:	b2e4      	uxtb	r4, r4
  IOE_Init(); 
 8002d08:	f7fe fc92 	bl	8001630 <IOE_Init>
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 8002d0c:	2100      	movs	r1, #0
 8002d0e:	4620      	mov	r0, r4
 8002d10:	f7fe fca6 	bl	8001660 <IOE_Read>
          (IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_MSB)));
 8002d14:	2101      	movs	r1, #1
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 8002d16:	4605      	mov	r5, r0
          (IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_MSB)));
 8002d18:	4620      	mov	r0, r4
 8002d1a:	f7fe fca1 	bl	8001660 <IOE_Read>
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 8002d1e:	ea40 2005 	orr.w	r0, r0, r5, lsl #8
}
 8002d22:	b280      	uxth	r0, r0
 8002d24:	bd38      	pop	{r3, r4, r5, pc}

08002d26 <stmpe811_TS_DetectTouch>:
  * @brief  Return if there is touch detected or not.
  * @param  DeviceAddr: Device address on communication Bus.
  * @retval Touch detected state.
  */
uint8_t stmpe811_TS_DetectTouch(uint16_t DeviceAddr)
{
 8002d26:	b510      	push	{r4, lr}
  uint8_t state;
  uint8_t ret = 0;
  
  state = ((IOE_Read(DeviceAddr, STMPE811_REG_TSC_CTRL) & (uint8_t)STMPE811_TS_CTRL_STATUS) == (uint8_t)0x80);
 8002d28:	b2c4      	uxtb	r4, r0
 8002d2a:	2140      	movs	r1, #64	; 0x40
 8002d2c:	4620      	mov	r0, r4
 8002d2e:	f7fe fc97 	bl	8001660 <IOE_Read>
  
  if(state > 0)
 8002d32:	0603      	lsls	r3, r0, #24
 8002d34:	d507      	bpl.n	8002d46 <stmpe811_TS_DetectTouch+0x20>
  {
    if(IOE_Read(DeviceAddr, STMPE811_REG_FIFO_SIZE) > 0)
 8002d36:	214c      	movs	r1, #76	; 0x4c
 8002d38:	4620      	mov	r0, r4
 8002d3a:	f7fe fc91 	bl	8001660 <IOE_Read>
    {
      ret = 1;
 8002d3e:	3000      	adds	r0, #0
 8002d40:	bf18      	it	ne
 8002d42:	2001      	movne	r0, #1
    /* Enable the FIFO again */
    IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
  }
  
  return ret;
}
 8002d44:	bd10      	pop	{r4, pc}
    IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 8002d46:	2201      	movs	r2, #1
 8002d48:	214b      	movs	r1, #75	; 0x4b
 8002d4a:	4620      	mov	r0, r4
 8002d4c:	f7fe fc72 	bl	8001634 <IOE_Write>
    IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 8002d50:	4620      	mov	r0, r4
 8002d52:	2200      	movs	r2, #0
 8002d54:	214b      	movs	r1, #75	; 0x4b
 8002d56:	f7fe fc6d 	bl	8001634 <IOE_Write>
  uint8_t ret = 0;
 8002d5a:	2000      	movs	r0, #0
 8002d5c:	e7f2      	b.n	8002d44 <stmpe811_TS_DetectTouch+0x1e>

08002d5e <stmpe811_TS_GetXY>:
  * @param  X: Pointer to X position value
  * @param  Y: Pointer to Y position value   
  * @retval None.
  */
void stmpe811_TS_GetXY(uint16_t DeviceAddr, uint16_t *X, uint16_t *Y)
{
 8002d5e:	b573      	push	{r0, r1, r4, r5, r6, lr}
  uint8_t  dataXYZ[4];
  uint32_t uldataXYZ;
  
  IOE_ReadMultiple(DeviceAddr, STMPE811_REG_TSC_DATA_NON_INC, dataXYZ, sizeof(dataXYZ)) ;
 8002d60:	2304      	movs	r3, #4
 8002d62:	b2c4      	uxtb	r4, r0
{
 8002d64:	460e      	mov	r6, r1
 8002d66:	4615      	mov	r5, r2
  IOE_ReadMultiple(DeviceAddr, STMPE811_REG_TSC_DATA_NON_INC, dataXYZ, sizeof(dataXYZ)) ;
 8002d68:	21d7      	movs	r1, #215	; 0xd7
 8002d6a:	eb0d 0203 	add.w	r2, sp, r3
 8002d6e:	4620      	mov	r0, r4
 8002d70:	f7fe fc90 	bl	8001694 <IOE_ReadMultiple>
 8002d74:	9b01      	ldr	r3, [sp, #4]
 8002d76:	ba1b      	rev	r3, r3
  
  /* Calculate positions values */
  uldataXYZ = (dataXYZ[0] << 24)|(dataXYZ[1] << 16)|(dataXYZ[2] << 8)|(dataXYZ[3] << 0);     
  *X = (uldataXYZ >> 20) & 0x00000FFF;     
 8002d78:	0d1a      	lsrs	r2, r3, #20
  *Y = (uldataXYZ >>  8) & 0x00000FFF;     
 8002d7a:	f3c3 230b 	ubfx	r3, r3, #8, #12
  *X = (uldataXYZ >> 20) & 0x00000FFF;     
 8002d7e:	8032      	strh	r2, [r6, #0]
  
  /* Reset FIFO */
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 8002d80:	4620      	mov	r0, r4
  *Y = (uldataXYZ >>  8) & 0x00000FFF;     
 8002d82:	802b      	strh	r3, [r5, #0]
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 8002d84:	2201      	movs	r2, #1
 8002d86:	214b      	movs	r1, #75	; 0x4b
 8002d88:	f7fe fc54 	bl	8001634 <IOE_Write>
  /* Enable the FIFO again */
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 8002d8c:	2200      	movs	r2, #0
 8002d8e:	214b      	movs	r1, #75	; 0x4b
 8002d90:	4620      	mov	r0, r4
 8002d92:	f7fe fc4f 	bl	8001634 <IOE_Write>
}
 8002d96:	b002      	add	sp, #8
 8002d98:	bd70      	pop	{r4, r5, r6, pc}
	...

08002d9c <stmpe811_Init>:
{
 8002d9c:	b510      	push	{r4, lr}
  uint8_t idx = 0;
  
  /* Check all the registered instances */
  for(idx = 0; idx < STMPE811_MAX_INSTANCE ; idx ++)
  {
    if(stmpe811[idx] == DeviceAddr)
 8002d9e:	4a0a      	ldr	r2, [pc, #40]	; (8002dc8 <stmpe811_Init+0x2c>)
 8002da0:	7813      	ldrb	r3, [r2, #0]
 8002da2:	4298      	cmp	r0, r3
{
 8002da4:	4604      	mov	r4, r0
    if(stmpe811[idx] == DeviceAddr)
 8002da6:	d00d      	beq.n	8002dc4 <stmpe811_Init+0x28>
 8002da8:	7851      	ldrb	r1, [r2, #1]
 8002daa:	4288      	cmp	r0, r1
 8002dac:	d00a      	beq.n	8002dc4 <stmpe811_Init+0x28>
 8002dae:	b10b      	cbz	r3, 8002db4 <stmpe811_Init+0x18>
 8002db0:	b941      	cbnz	r1, 8002dc4 <stmpe811_Init+0x28>
  for(idx = 0; idx < STMPE811_MAX_INSTANCE ; idx ++)
 8002db2:	2301      	movs	r3, #1
      stmpe811[empty] = DeviceAddr;
 8002db4:	54d4      	strb	r4, [r2, r3]
      IOE_Init(); 
 8002db6:	f7fe fc3b 	bl	8001630 <IOE_Init>
      stmpe811_Reset(DeviceAddr);
 8002dba:	4620      	mov	r0, r4
}
 8002dbc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
      stmpe811_Reset(DeviceAddr);
 8002dc0:	f7ff bf8b 	b.w	8002cda <stmpe811_Reset>
}
 8002dc4:	bd10      	pop	{r4, pc}
 8002dc6:	bf00      	nop
 8002dc8:	2000145c 	.word	0x2000145c

08002dcc <stmpe811_EnableGlobalIT>:
{
 8002dcc:	b510      	push	{r4, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_CTRL);
 8002dce:	b2c4      	uxtb	r4, r0
 8002dd0:	2109      	movs	r1, #9
 8002dd2:	4620      	mov	r0, r4
 8002dd4:	f7fe fc44 	bl	8001660 <IOE_Read>
  tmp |= (uint8_t)STMPE811_GIT_EN;
 8002dd8:	f040 0201 	orr.w	r2, r0, #1
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp); 
 8002ddc:	b2d2      	uxtb	r2, r2
 8002dde:	4620      	mov	r0, r4
 8002de0:	2109      	movs	r1, #9
}
 8002de2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp); 
 8002de6:	f7fe bc25 	b.w	8001634 <IOE_Write>

08002dea <stmpe811_DisableGlobalIT>:
{
 8002dea:	b510      	push	{r4, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_CTRL);
 8002dec:	b2c4      	uxtb	r4, r0
 8002dee:	2109      	movs	r1, #9
 8002df0:	4620      	mov	r0, r4
 8002df2:	f7fe fc35 	bl	8001660 <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp);
 8002df6:	2109      	movs	r1, #9
 8002df8:	f000 02fe 	and.w	r2, r0, #254	; 0xfe
 8002dfc:	4620      	mov	r0, r4
}
 8002dfe:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp);
 8002e02:	f7fe bc17 	b.w	8001634 <IOE_Write>

08002e06 <stmpe811_EnableITSource>:
{
 8002e06:	b538      	push	{r3, r4, r5, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 8002e08:	b2c5      	uxtb	r5, r0
{
 8002e0a:	460c      	mov	r4, r1
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 8002e0c:	4628      	mov	r0, r5
 8002e0e:	210a      	movs	r1, #10
 8002e10:	f7fe fc26 	bl	8001660 <IOE_Read>
  tmp |= Source; 
 8002e14:	ea40 0204 	orr.w	r2, r0, r4
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 8002e18:	b2d2      	uxtb	r2, r2
 8002e1a:	4628      	mov	r0, r5
 8002e1c:	210a      	movs	r1, #10
}
 8002e1e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 8002e22:	f7fe bc07 	b.w	8001634 <IOE_Write>

08002e26 <stmpe811_TS_EnableIT>:
{
 8002e26:	b510      	push	{r4, lr}
 8002e28:	4604      	mov	r4, r0
  IOE_ITConfig();
 8002e2a:	f7fe fc02 	bl	8001632 <IOE_ITConfig>
  stmpe811_EnableITSource(DeviceAddr, STMPE811_TS_IT); 
 8002e2e:	4620      	mov	r0, r4
 8002e30:	211f      	movs	r1, #31
 8002e32:	f7ff ffe8 	bl	8002e06 <stmpe811_EnableITSource>
  stmpe811_EnableGlobalIT(DeviceAddr);
 8002e36:	4620      	mov	r0, r4
}
 8002e38:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  stmpe811_EnableGlobalIT(DeviceAddr);
 8002e3c:	f7ff bfc6 	b.w	8002dcc <stmpe811_EnableGlobalIT>

08002e40 <stmpe811_DisableITSource>:
{
 8002e40:	b538      	push	{r3, r4, r5, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 8002e42:	b2c5      	uxtb	r5, r0
{
 8002e44:	460c      	mov	r4, r1
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 8002e46:	4628      	mov	r0, r5
 8002e48:	210a      	movs	r1, #10
 8002e4a:	f7fe fc09 	bl	8001660 <IOE_Read>
  tmp &= ~Source; 
 8002e4e:	ea20 0204 	bic.w	r2, r0, r4
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 8002e52:	b2d2      	uxtb	r2, r2
 8002e54:	4628      	mov	r0, r5
 8002e56:	210a      	movs	r1, #10
}
 8002e58:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 8002e5c:	f7fe bbea 	b.w	8001634 <IOE_Write>

08002e60 <stmpe811_TS_DisableIT>:
{
 8002e60:	b510      	push	{r4, lr}
 8002e62:	4604      	mov	r4, r0
  stmpe811_DisableGlobalIT(DeviceAddr);
 8002e64:	f7ff ffc1 	bl	8002dea <stmpe811_DisableGlobalIT>
  stmpe811_DisableITSource(DeviceAddr, STMPE811_TS_IT); 
 8002e68:	4620      	mov	r0, r4
 8002e6a:	211f      	movs	r1, #31
}
 8002e6c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  stmpe811_DisableITSource(DeviceAddr, STMPE811_TS_IT); 
 8002e70:	f7ff bfe6 	b.w	8002e40 <stmpe811_DisableITSource>

08002e74 <stmpe811_ReadGITStatus>:
{
 8002e74:	b510      	push	{r4, lr}
  return((IOE_Read(DeviceAddr, STMPE811_REG_INT_STA) & Source));
 8002e76:	b2c0      	uxtb	r0, r0
{
 8002e78:	460c      	mov	r4, r1
  return((IOE_Read(DeviceAddr, STMPE811_REG_INT_STA) & Source));
 8002e7a:	210b      	movs	r1, #11
 8002e7c:	f7fe fbf0 	bl	8001660 <IOE_Read>
}
 8002e80:	4020      	ands	r0, r4
 8002e82:	bd10      	pop	{r4, pc}

08002e84 <stmpe811_TS_ITStatus>:
  return(stmpe811_ReadGITStatus(DeviceAddr, STMPE811_TS_IT));
 8002e84:	211f      	movs	r1, #31
 8002e86:	f7ff bff5 	b.w	8002e74 <stmpe811_ReadGITStatus>

08002e8a <stmpe811_ClearGlobalIT>:
  IOE_Write(DeviceAddr, STMPE811_REG_INT_STA, Source);
 8002e8a:	460a      	mov	r2, r1
 8002e8c:	b2c0      	uxtb	r0, r0
 8002e8e:	210b      	movs	r1, #11
 8002e90:	f7fe bbd0 	b.w	8001634 <IOE_Write>

08002e94 <stmpe811_TS_ClearIT>:
  stmpe811_ClearGlobalIT(DeviceAddr, STMPE811_TS_IT);
 8002e94:	211f      	movs	r1, #31
 8002e96:	f7ff bff8 	b.w	8002e8a <stmpe811_ClearGlobalIT>

08002e9a <stmpe811_IO_EnableAF>:
{
 8002e9a:	b538      	push	{r3, r4, r5, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_IO_AF);
 8002e9c:	b2c5      	uxtb	r5, r0
{
 8002e9e:	460c      	mov	r4, r1
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_IO_AF);
 8002ea0:	4628      	mov	r0, r5
 8002ea2:	2117      	movs	r1, #23
 8002ea4:	f7fe fbdc 	bl	8001660 <IOE_Read>
  tmp &= ~(uint8_t)IO_Pin;   
 8002ea8:	ea20 0204 	bic.w	r2, r0, r4
  IOE_Write(DeviceAddr, STMPE811_REG_IO_AF, tmp); 
 8002eac:	b2d2      	uxtb	r2, r2
 8002eae:	4628      	mov	r0, r5
 8002eb0:	2117      	movs	r1, #23
}
 8002eb2:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_IO_AF, tmp); 
 8002eb6:	f7fe bbbd 	b.w	8001634 <IOE_Write>

08002eba <stmpe811_TS_Start>:
{
 8002eba:	b570      	push	{r4, r5, r6, lr}
  mode = IOE_Read(DeviceAddr, STMPE811_REG_SYS_CTRL2);
 8002ebc:	b2c4      	uxtb	r4, r0
{
 8002ebe:	4606      	mov	r6, r0
  mode = IOE_Read(DeviceAddr, STMPE811_REG_SYS_CTRL2);
 8002ec0:	2104      	movs	r1, #4
 8002ec2:	4620      	mov	r0, r4
 8002ec4:	f7fe fbcc 	bl	8001660 <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 8002ec8:	2104      	movs	r1, #4
 8002eca:	f000 02fb 	and.w	r2, r0, #251	; 0xfb
  mode = IOE_Read(DeviceAddr, STMPE811_REG_SYS_CTRL2);
 8002ece:	4605      	mov	r5, r0
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 8002ed0:	4620      	mov	r0, r4
 8002ed2:	f7fe fbaf 	bl	8001634 <IOE_Write>
  stmpe811_IO_EnableAF(DeviceAddr, STMPE811_TOUCH_IO_ALL);
 8002ed6:	4630      	mov	r0, r6
 8002ed8:	21f0      	movs	r1, #240	; 0xf0
 8002eda:	f7ff ffde 	bl	8002e9a <stmpe811_IO_EnableAF>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 8002ede:	f005 02f8 	and.w	r2, r5, #248	; 0xf8
 8002ee2:	4620      	mov	r0, r4
 8002ee4:	2104      	movs	r1, #4
 8002ee6:	f7fe fba5 	bl	8001634 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_ADC_CTRL1, 0x49);
 8002eea:	2249      	movs	r2, #73	; 0x49
 8002eec:	2120      	movs	r1, #32
 8002eee:	4620      	mov	r0, r4
 8002ef0:	f7fe fba0 	bl	8001634 <IOE_Write>
  IOE_Delay(2); 
 8002ef4:	2002      	movs	r0, #2
 8002ef6:	f7fe fbe3 	bl	80016c0 <IOE_Delay>
  IOE_Write(DeviceAddr, STMPE811_REG_ADC_CTRL2, 0x01);
 8002efa:	4620      	mov	r0, r4
 8002efc:	2201      	movs	r2, #1
 8002efe:	2121      	movs	r1, #33	; 0x21
 8002f00:	f7fe fb98 	bl	8001634 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_CFG, 0x9A); 
 8002f04:	4620      	mov	r0, r4
 8002f06:	229a      	movs	r2, #154	; 0x9a
 8002f08:	2141      	movs	r1, #65	; 0x41
 8002f0a:	f7fe fb93 	bl	8001634 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_TH, 0x01);
 8002f0e:	4620      	mov	r0, r4
 8002f10:	2201      	movs	r2, #1
 8002f12:	214a      	movs	r1, #74	; 0x4a
 8002f14:	f7fe fb8e 	bl	8001634 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 8002f18:	4620      	mov	r0, r4
 8002f1a:	2201      	movs	r2, #1
 8002f1c:	214b      	movs	r1, #75	; 0x4b
 8002f1e:	f7fe fb89 	bl	8001634 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 8002f22:	4620      	mov	r0, r4
 8002f24:	2200      	movs	r2, #0
 8002f26:	214b      	movs	r1, #75	; 0x4b
 8002f28:	f7fe fb84 	bl	8001634 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_FRACT_XYZ, 0x01);
 8002f2c:	4620      	mov	r0, r4
 8002f2e:	2201      	movs	r2, #1
 8002f30:	2156      	movs	r1, #86	; 0x56
 8002f32:	f7fe fb7f 	bl	8001634 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_I_DRIVE, 0x01);
 8002f36:	4620      	mov	r0, r4
 8002f38:	2201      	movs	r2, #1
 8002f3a:	2158      	movs	r1, #88	; 0x58
 8002f3c:	f7fe fb7a 	bl	8001634 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_CTRL, 0x01);
 8002f40:	4620      	mov	r0, r4
 8002f42:	2201      	movs	r2, #1
 8002f44:	2140      	movs	r1, #64	; 0x40
 8002f46:	f7fe fb75 	bl	8001634 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_INT_STA, 0xFF);
 8002f4a:	4620      	mov	r0, r4
 8002f4c:	22ff      	movs	r2, #255	; 0xff
 8002f4e:	210b      	movs	r1, #11
 8002f50:	f7fe fb70 	bl	8001634 <IOE_Write>
  IOE_Delay(2); 
 8002f54:	2002      	movs	r0, #2
}
 8002f56:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
  IOE_Delay(2); 
 8002f5a:	f7fe bbb1 	b.w	80016c0 <IOE_Delay>
	...

08002f60 <SystemInit>:
  */
void SystemInit(void)
{
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 8002f60:	4b05      	ldr	r3, [pc, #20]	; (8002f78 <SystemInit+0x18>)
 8002f62:	f8d3 2088 	ldr.w	r2, [r3, #136]	; 0x88
 8002f66:	f442 0270 	orr.w	r2, r2, #15728640	; 0xf00000
 8002f6a:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88

  /* Configure the Vector Table location add offset address ------------------*/
#ifdef VECT_TAB_SRAM
  SCB->VTOR = SRAM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#else
  SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
 8002f6e:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
 8002f72:	609a      	str	r2, [r3, #8]
#endif
}
 8002f74:	4770      	bx	lr
 8002f76:	bf00      	nop
 8002f78:	e000ed00 	.word	0xe000ed00

08002f7c <HAL_Init>:
  *         need to ensure that the SysTick time base is always set to 1 millisecond
  *         to have correct HAL operation.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_Init(void)
{
 8002f7c:	b508      	push	{r3, lr}
  /* Configure Flash prefetch, Instruction cache, Data cache */ 
#if (INSTRUCTION_CACHE_ENABLE != 0U)
  __HAL_FLASH_INSTRUCTION_CACHE_ENABLE();
 8002f7e:	4b0b      	ldr	r3, [pc, #44]	; (8002fac <HAL_Init+0x30>)
 8002f80:	681a      	ldr	r2, [r3, #0]
 8002f82:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8002f86:	601a      	str	r2, [r3, #0]
#endif /* INSTRUCTION_CACHE_ENABLE */

#if (DATA_CACHE_ENABLE != 0U)
  __HAL_FLASH_DATA_CACHE_ENABLE();
 8002f88:	681a      	ldr	r2, [r3, #0]
 8002f8a:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8002f8e:	601a      	str	r2, [r3, #0]
#endif /* DATA_CACHE_ENABLE */

#if (PREFETCH_ENABLE != 0U)
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 8002f90:	681a      	ldr	r2, [r3, #0]
 8002f92:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8002f96:	601a      	str	r2, [r3, #0]
#endif /* PREFETCH_ENABLE */

  /* Set Interrupt Group Priority */
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 8002f98:	2003      	movs	r0, #3
 8002f9a:	f000 f82f 	bl	8002ffc <HAL_NVIC_SetPriorityGrouping>

  /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
  HAL_InitTick(TICK_INT_PRIORITY);
 8002f9e:	2000      	movs	r0, #0
 8002fa0:	f7fe fe4a 	bl	8001c38 <HAL_InitTick>

  /* Init the low level hardware */
  HAL_MspInit();
 8002fa4:	f7fe fc14 	bl	80017d0 <HAL_MspInit>

  /* Return function status */
  return HAL_OK;
}
 8002fa8:	2000      	movs	r0, #0
 8002faa:	bd08      	pop	{r3, pc}
 8002fac:	40023c00 	.word	0x40023c00

08002fb0 <HAL_IncTick>:
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
  uwTick += uwTickFreq;
 8002fb0:	4a03      	ldr	r2, [pc, #12]	; (8002fc0 <HAL_IncTick+0x10>)
 8002fb2:	4b04      	ldr	r3, [pc, #16]	; (8002fc4 <HAL_IncTick+0x14>)
 8002fb4:	6811      	ldr	r1, [r2, #0]
 8002fb6:	781b      	ldrb	r3, [r3, #0]
 8002fb8:	440b      	add	r3, r1
 8002fba:	6013      	str	r3, [r2, #0]
}
 8002fbc:	4770      	bx	lr
 8002fbe:	bf00      	nop
 8002fc0:	20012648 	.word	0x20012648
 8002fc4:	20000078 	.word	0x20000078

08002fc8 <HAL_GetTick>:
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
  return uwTick;
 8002fc8:	4b01      	ldr	r3, [pc, #4]	; (8002fd0 <HAL_GetTick+0x8>)
 8002fca:	6818      	ldr	r0, [r3, #0]
}
 8002fcc:	4770      	bx	lr
 8002fce:	bf00      	nop
 8002fd0:	20012648 	.word	0x20012648

08002fd4 <HAL_Delay>:
  *       implementations in user file.
  * @param Delay specifies the delay time length, in milliseconds.
  * @retval None
  */
__weak void HAL_Delay(uint32_t Delay)
{
 8002fd4:	b538      	push	{r3, r4, r5, lr}
 8002fd6:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 8002fd8:	f7ff fff6 	bl	8002fc8 <HAL_GetTick>
  uint32_t wait = Delay;

  /* Add a freq to guarantee minimum wait */
  if (wait < HAL_MAX_DELAY)
 8002fdc:	1c63      	adds	r3, r4, #1
  {
    wait += (uint32_t)(uwTickFreq);
 8002fde:	bf1c      	itt	ne
 8002fe0:	4b05      	ldrne	r3, [pc, #20]	; (8002ff8 <HAL_Delay+0x24>)
 8002fe2:	781b      	ldrbne	r3, [r3, #0]
  uint32_t tickstart = HAL_GetTick();
 8002fe4:	4605      	mov	r5, r0
    wait += (uint32_t)(uwTickFreq);
 8002fe6:	bf18      	it	ne
 8002fe8:	18e4      	addne	r4, r4, r3
  }

  while((HAL_GetTick() - tickstart) < wait)
 8002fea:	f7ff ffed 	bl	8002fc8 <HAL_GetTick>
 8002fee:	1b40      	subs	r0, r0, r5
 8002ff0:	42a0      	cmp	r0, r4
 8002ff2:	d3fa      	bcc.n	8002fea <HAL_Delay+0x16>
  {
  }
}
 8002ff4:	bd38      	pop	{r3, r4, r5, pc}
 8002ff6:	bf00      	nop
 8002ff8:	20000078 	.word	0x20000078

08002ffc <HAL_NVIC_SetPriorityGrouping>:
  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 8002ffc:	4a07      	ldr	r2, [pc, #28]	; (800301c <HAL_NVIC_SetPriorityGrouping+0x20>)
 8002ffe:	68d3      	ldr	r3, [r2, #12]
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 8003000:	f423 63e0 	bic.w	r3, r3, #1792	; 0x700
 8003004:	041b      	lsls	r3, r3, #16
 8003006:	0c1b      	lsrs	r3, r3, #16
 8003008:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 800300c:	0200      	lsls	r0, r0, #8
 800300e:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8003012:	f400 60e0 	and.w	r0, r0, #1792	; 0x700
  reg_value  =  (reg_value                                   |
 8003016:	4303      	orrs	r3, r0
  SCB->AIRCR =  reg_value;
 8003018:	60d3      	str	r3, [r2, #12]
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));
  
  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
}
 800301a:	4770      	bx	lr
 800301c:	e000ed00 	.word	0xe000ed00

08003020 <HAL_NVIC_SetPriority>:
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 8003020:	4b17      	ldr	r3, [pc, #92]	; (8003080 <HAL_NVIC_SetPriority+0x60>)
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.          
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{ 
 8003022:	b570      	push	{r4, r5, r6, lr}
 8003024:	68dc      	ldr	r4, [r3, #12]
 8003026:	f3c4 2402 	ubfx	r4, r4, #8, #3
{
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used          */
  uint32_t PreemptPriorityBits;
  uint32_t SubPriorityBits;

  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 800302a:	f1c4 0507 	rsb	r5, r4, #7
 800302e:	2d04      	cmp	r5, #4
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8003030:	f104 0304 	add.w	r3, r4, #4
  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 8003034:	bf28      	it	cs
 8003036:	2504      	movcs	r5, #4

  return (
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8003038:	f04f 36ff 	mov.w	r6, #4294967295
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 800303c:	2b06      	cmp	r3, #6
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 800303e:	fa06 f305 	lsl.w	r3, r6, r5
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8003042:	bf8c      	ite	hi
 8003044:	3c03      	subhi	r4, #3
 8003046:	2400      	movls	r4, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8003048:	ea21 0303 	bic.w	r3, r1, r3
 800304c:	40a3      	lsls	r3, r4
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 800304e:	fa06 f404 	lsl.w	r4, r6, r4
 8003052:	ea22 0404 	bic.w	r4, r2, r4
  if ((int32_t)(IRQn) >= 0)
 8003056:	2800      	cmp	r0, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8003058:	ea43 0304 	orr.w	r3, r3, r4
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800305c:	bfa8      	it	ge
 800305e:	f100 4060 	addge.w	r0, r0, #3758096384	; 0xe0000000
 8003062:	ea4f 1303 	mov.w	r3, r3, lsl #4
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8003066:	bfbc      	itt	lt
 8003068:	f000 000f 	andlt.w	r0, r0, #15
 800306c:	4a05      	ldrlt	r2, [pc, #20]	; (8003084 <HAL_NVIC_SetPriority+0x64>)
 800306e:	b2db      	uxtb	r3, r3
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8003070:	bfaa      	itet	ge
 8003072:	f500 4061 	addge.w	r0, r0, #57600	; 0xe100
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8003076:	5413      	strblt	r3, [r2, r0]
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8003078:	f880 3300 	strbge.w	r3, [r0, #768]	; 0x300
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
  
  prioritygroup = NVIC_GetPriorityGrouping();
  
  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
}
 800307c:	bd70      	pop	{r4, r5, r6, pc}
 800307e:	bf00      	nop
 8003080:	e000ed00 	.word	0xe000ed00
 8003084:	e000ed14 	.word	0xe000ed14

08003088 <HAL_NVIC_EnableIRQ>:
  if ((int32_t)(IRQn) >= 0)
 8003088:	2800      	cmp	r0, #0
 800308a:	db08      	blt.n	800309e <HAL_NVIC_EnableIRQ+0x16>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 800308c:	0942      	lsrs	r2, r0, #5
 800308e:	2301      	movs	r3, #1
 8003090:	f000 001f 	and.w	r0, r0, #31
 8003094:	fa03 f000 	lsl.w	r0, r3, r0
 8003098:	4b01      	ldr	r3, [pc, #4]	; (80030a0 <HAL_NVIC_EnableIRQ+0x18>)
 800309a:	f843 0022 	str.w	r0, [r3, r2, lsl #2]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
  
  /* Enable interrupt */
  NVIC_EnableIRQ(IRQn);
}
 800309e:	4770      	bx	lr
 80030a0:	e000e100 	.word	0xe000e100

080030a4 <HAL_NVIC_DisableIRQ>:
  if ((int32_t)(IRQn) >= 0)
 80030a4:	2800      	cmp	r0, #0
 80030a6:	db0d      	blt.n	80030c4 <HAL_NVIC_DisableIRQ+0x20>
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80030a8:	0943      	lsrs	r3, r0, #5
 80030aa:	2201      	movs	r2, #1
 80030ac:	f000 001f 	and.w	r0, r0, #31
 80030b0:	fa02 f000 	lsl.w	r0, r2, r0
 80030b4:	3320      	adds	r3, #32
 80030b6:	4a04      	ldr	r2, [pc, #16]	; (80030c8 <HAL_NVIC_DisableIRQ+0x24>)
 80030b8:	f842 0023 	str.w	r0, [r2, r3, lsl #2]
  __ASM volatile ("dsb 0xF":::"memory");
 80030bc:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 80030c0:	f3bf 8f6f 	isb	sy
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
  
  /* Disable interrupt */
  NVIC_DisableIRQ(IRQn);
}
 80030c4:	4770      	bx	lr
 80030c6:	bf00      	nop
 80030c8:	e000e100 	.word	0xe000e100

080030cc <HAL_CRC_Init>:
  *         parameters in the CRC_InitTypeDef and create the associated handle.
  * @param  hcrc CRC handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_CRC_Init(CRC_HandleTypeDef *hcrc)
{
 80030cc:	b510      	push	{r4, lr}
  /* Check the CRC handle allocation */
  if (hcrc == NULL)
 80030ce:	4604      	mov	r4, r0
 80030d0:	b150      	cbz	r0, 80030e8 <HAL_CRC_Init+0x1c>
  }

  /* Check the parameters */
  assert_param(IS_CRC_ALL_INSTANCE(hcrc->Instance));

  if (hcrc->State == HAL_CRC_STATE_RESET)
 80030d2:	7943      	ldrb	r3, [r0, #5]
 80030d4:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 80030d8:	b913      	cbnz	r3, 80030e0 <HAL_CRC_Init+0x14>
  {
    /* Allocate lock resource and initialize it */
    hcrc->Lock = HAL_UNLOCKED;
 80030da:	7102      	strb	r2, [r0, #4]
    /* Init the low level hardware */
    HAL_CRC_MspInit(hcrc);
 80030dc:	f7fe fb98 	bl	8001810 <HAL_CRC_MspInit>
  }

  /* Change CRC peripheral state */
  hcrc->State = HAL_CRC_STATE_READY;
 80030e0:	2301      	movs	r3, #1
 80030e2:	7163      	strb	r3, [r4, #5]

  /* Return function status */
  return HAL_OK;
 80030e4:	2000      	movs	r0, #0
}
 80030e6:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 80030e8:	2001      	movs	r0, #1
 80030ea:	e7fc      	b.n	80030e6 <HAL_CRC_Init+0x1a>

080030ec <DMA2D_SetConfig>:
  * @param  Width      The width of data to be transferred from source to destination.
  * @param  Height     The height of data to be transferred from source to destination.
  * @retval HAL status
  */
static void DMA2D_SetConfig(DMA2D_HandleTypeDef *hdma2d, uint32_t pdata, uint32_t DstAddress, uint32_t Width, uint32_t Height)
{
 80030ec:	b570      	push	{r4, r5, r6, lr}
  uint32_t tmp2;
  uint32_t tmp3;
  uint32_t tmp4;

  /* Configure DMA2D data size */
  MODIFY_REG(hdma2d->Instance->NLR, (DMA2D_NLR_NL|DMA2D_NLR_PL), (Height| (Width << DMA2D_NLR_PL_Pos)));
 80030ee:	6804      	ldr	r4, [r0, #0]
 80030f0:	9d04      	ldr	r5, [sp, #16]
 80030f2:	6c66      	ldr	r6, [r4, #68]	; 0x44
 80030f4:	ea45 4303 	orr.w	r3, r5, r3, lsl #16
 80030f8:	f006 4640 	and.w	r6, r6, #3221225472	; 0xc0000000
 80030fc:	4333      	orrs	r3, r6
 80030fe:	6463      	str	r3, [r4, #68]	; 0x44

  /* Configure DMA2D destination address */
  WRITE_REG(hdma2d->Instance->OMAR, DstAddress);

  /* Register to memory DMA2D mode selected */
  if (hdma2d->Init.Mode == DMA2D_R2M)
 8003100:	6843      	ldr	r3, [r0, #4]
  WRITE_REG(hdma2d->Instance->OMAR, DstAddress);
 8003102:	63e2      	str	r2, [r4, #60]	; 0x3c
  if (hdma2d->Init.Mode == DMA2D_R2M)
 8003104:	f5b3 3f40 	cmp.w	r3, #196608	; 0x30000
 8003108:	d130      	bne.n	800316c <DMA2D_SetConfig+0x80>
    tmp2 = pdata & DMA2D_OCOLR_RED_1;
    tmp3 = pdata & DMA2D_OCOLR_GREEN_1;
    tmp4 = pdata & DMA2D_OCOLR_BLUE_1;

    /* Prepare the value to be written to the OCOLR register according to the color mode */
    if (hdma2d->Init.ColorMode == DMA2D_OUTPUT_ARGB8888)
 800310a:	6886      	ldr	r6, [r0, #8]
 800310c:	b11e      	cbz	r6, 8003116 <DMA2D_SetConfig+0x2a>
    {
      tmp = (tmp3 | tmp2 | tmp1| tmp4);
    }
    else if (hdma2d->Init.ColorMode == DMA2D_OUTPUT_RGB888)
 800310e:	2e01      	cmp	r6, #1
 8003110:	d103      	bne.n	800311a <DMA2D_SetConfig+0x2e>
    {
      tmp = (tmp3 | tmp2 | tmp4);
 8003112:	f021 417f 	bic.w	r1, r1, #4278190080	; 0xff000000
      tmp3 = (tmp3 >> 12U);
      tmp4 = (tmp4 >> 4U );
      tmp  = ((tmp3 << 4U) | (tmp2 << 8U) | (tmp1 << 12U) | tmp4);
    }
    /* Write to DMA2D OCOLR register */
    WRITE_REG(hdma2d->Instance->OCOLR, tmp);
 8003116:	63a1      	str	r1, [r4, #56]	; 0x38
  else /* M2M, M2M_PFC or M2M_Blending DMA2D Mode */
  {
    /* Configure DMA2D source address */
    WRITE_REG(hdma2d->Instance->FGMAR, pdata);
  }
}
 8003118:	bd70      	pop	{r4, r5, r6, pc}
    else if (hdma2d->Init.ColorMode == DMA2D_OUTPUT_RGB565)
 800311a:	2e02      	cmp	r6, #2
    tmp2 = pdata & DMA2D_OCOLR_RED_1;
 800311c:	f401 037f 	and.w	r3, r1, #16711680	; 0xff0000
    tmp3 = pdata & DMA2D_OCOLR_GREEN_1;
 8003120:	f401 457f 	and.w	r5, r1, #65280	; 0xff00
    tmp4 = pdata & DMA2D_OCOLR_BLUE_1;
 8003124:	b2c8      	uxtb	r0, r1
    else if (hdma2d->Init.ColorMode == DMA2D_OUTPUT_RGB565)
 8003126:	d107      	bne.n	8003138 <DMA2D_SetConfig+0x4c>
      tmp2 = (tmp2 >> 19U);
 8003128:	0cd9      	lsrs	r1, r3, #19
      tmp3 = (tmp3 >> 10U);
 800312a:	0aad      	lsrs	r5, r5, #10
      tmp  = ((tmp3 << 5U) | (tmp2 << 11U) | tmp4);
 800312c:	02c9      	lsls	r1, r1, #11
 800312e:	ea41 1145 	orr.w	r1, r1, r5, lsl #5
 8003132:	ea41 01d0 	orr.w	r1, r1, r0, lsr #3
 8003136:	e7ee      	b.n	8003116 <DMA2D_SetConfig+0x2a>
    else if (hdma2d->Init.ColorMode == DMA2D_OUTPUT_ARGB1555)
 8003138:	2e03      	cmp	r6, #3
    tmp1 = pdata & DMA2D_OCOLR_ALPHA_1;
 800313a:	f001 427f 	and.w	r2, r1, #4278190080	; 0xff000000
    else if (hdma2d->Init.ColorMode == DMA2D_OUTPUT_ARGB1555)
 800313e:	d10a      	bne.n	8003156 <DMA2D_SetConfig+0x6a>
      tmp2 = (tmp2 >> 19U);
 8003140:	0cdb      	lsrs	r3, r3, #19
      tmp3 = (tmp3 >> 11U);
 8003142:	0aed      	lsrs	r5, r5, #11
      tmp  = ((tmp3 << 5U) | (tmp2 << 10U) | (tmp1 << 15U) | tmp4);
 8003144:	029b      	lsls	r3, r3, #10
 8003146:	ea43 1345 	orr.w	r3, r3, r5, lsl #5
 800314a:	ea43 03d0 	orr.w	r3, r3, r0, lsr #3
      tmp1 = (tmp1 >> 31U);
 800314e:	0fd1      	lsrs	r1, r2, #31
      tmp  = ((tmp3 << 5U) | (tmp2 << 10U) | (tmp1 << 15U) | tmp4);
 8003150:	ea43 31c1 	orr.w	r1, r3, r1, lsl #15
 8003154:	e7df      	b.n	8003116 <DMA2D_SetConfig+0x2a>
      tmp2 = (tmp2 >> 20U);
 8003156:	0d19      	lsrs	r1, r3, #20
      tmp3 = (tmp3 >> 12U);
 8003158:	0b2d      	lsrs	r5, r5, #12
      tmp  = ((tmp3 << 4U) | (tmp2 << 8U) | (tmp1 << 12U) | tmp4);
 800315a:	0209      	lsls	r1, r1, #8
 800315c:	ea41 1105 	orr.w	r1, r1, r5, lsl #4
 8003160:	ea41 1110 	orr.w	r1, r1, r0, lsr #4
      tmp1 = (tmp1 >> 28U);
 8003164:	0f13      	lsrs	r3, r2, #28
      tmp  = ((tmp3 << 4U) | (tmp2 << 8U) | (tmp1 << 12U) | tmp4);
 8003166:	ea41 3103 	orr.w	r1, r1, r3, lsl #12
 800316a:	e7d4      	b.n	8003116 <DMA2D_SetConfig+0x2a>
    WRITE_REG(hdma2d->Instance->FGMAR, pdata);
 800316c:	60e1      	str	r1, [r4, #12]
}
 800316e:	e7d3      	b.n	8003118 <DMA2D_SetConfig+0x2c>

08003170 <HAL_DMA2D_Init>:
{
 8003170:	b510      	push	{r4, lr}
  if(hdma2d == NULL)
 8003172:	4604      	mov	r4, r0
 8003174:	b330      	cbz	r0, 80031c4 <HAL_DMA2D_Init+0x54>
  if(hdma2d->State == HAL_DMA2D_STATE_RESET)
 8003176:	f890 3039 	ldrb.w	r3, [r0, #57]	; 0x39
 800317a:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800317e:	b91b      	cbnz	r3, 8003188 <HAL_DMA2D_Init+0x18>
    hdma2d->Lock = HAL_UNLOCKED;
 8003180:	f880 2038 	strb.w	r2, [r0, #56]	; 0x38
    HAL_DMA2D_MspInit(hdma2d);
 8003184:	f7fe fb5c 	bl	8001840 <HAL_DMA2D_MspInit>
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, hdma2d->Init.Mode);
 8003188:	6822      	ldr	r2, [r4, #0]
 800318a:	6861      	ldr	r1, [r4, #4]
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 800318c:	2302      	movs	r3, #2
 800318e:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, hdma2d->Init.Mode);
 8003192:	6813      	ldr	r3, [r2, #0]
 8003194:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 8003198:	430b      	orrs	r3, r1
 800319a:	6013      	str	r3, [r2, #0]
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM, hdma2d->Init.ColorMode);
 800319c:	6b53      	ldr	r3, [r2, #52]	; 0x34
 800319e:	68a1      	ldr	r1, [r4, #8]
 80031a0:	f023 0307 	bic.w	r3, r3, #7
 80031a4:	430b      	orrs	r3, r1
 80031a6:	6353      	str	r3, [r2, #52]	; 0x34
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
 80031a8:	6c13      	ldr	r3, [r2, #64]	; 0x40
 80031aa:	68e1      	ldr	r1, [r4, #12]
 80031ac:	f423 537f 	bic.w	r3, r3, #16320	; 0x3fc0
 80031b0:	f023 033f 	bic.w	r3, r3, #63	; 0x3f
 80031b4:	430b      	orrs	r3, r1
 80031b6:	6413      	str	r3, [r2, #64]	; 0x40
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 80031b8:	2000      	movs	r0, #0
  hdma2d->State  = HAL_DMA2D_STATE_READY;
 80031ba:	2301      	movs	r3, #1
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 80031bc:	63e0      	str	r0, [r4, #60]	; 0x3c
  hdma2d->State  = HAL_DMA2D_STATE_READY;
 80031be:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
}
 80031c2:	bd10      	pop	{r4, pc}
     return HAL_ERROR;
 80031c4:	2001      	movs	r0, #1
 80031c6:	e7fc      	b.n	80031c2 <HAL_DMA2D_Init+0x52>

080031c8 <HAL_DMA2D_Start_IT>:
{
 80031c8:	b573      	push	{r0, r1, r4, r5, r6, lr}
  __HAL_LOCK(hdma2d);
 80031ca:	f890 4038 	ldrb.w	r4, [r0, #56]	; 0x38
 80031ce:	2c01      	cmp	r4, #1
{
 80031d0:	4605      	mov	r5, r0
 80031d2:	f04f 0402 	mov.w	r4, #2
  __HAL_LOCK(hdma2d);
 80031d6:	d013      	beq.n	8003200 <HAL_DMA2D_Start_IT+0x38>
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 80031d8:	f880 4039 	strb.w	r4, [r0, #57]	; 0x39
  __HAL_LOCK(hdma2d);
 80031dc:	2601      	movs	r6, #1
  DMA2D_SetConfig(hdma2d, pdata, DstAddress, Width, Height);
 80031de:	9c06      	ldr	r4, [sp, #24]
  __HAL_LOCK(hdma2d);
 80031e0:	f880 6038 	strb.w	r6, [r0, #56]	; 0x38
  DMA2D_SetConfig(hdma2d, pdata, DstAddress, Width, Height);
 80031e4:	9400      	str	r4, [sp, #0]
 80031e6:	f7ff ff81 	bl	80030ec <DMA2D_SetConfig>
  __HAL_DMA2D_ENABLE_IT(hdma2d, DMA2D_IT_TC|DMA2D_IT_TE|DMA2D_IT_CE);
 80031ea:	682b      	ldr	r3, [r5, #0]
 80031ec:	681a      	ldr	r2, [r3, #0]
 80031ee:	f442 520c 	orr.w	r2, r2, #8960	; 0x2300
 80031f2:	601a      	str	r2, [r3, #0]
  __HAL_DMA2D_ENABLE(hdma2d);
 80031f4:	681a      	ldr	r2, [r3, #0]
 80031f6:	4332      	orrs	r2, r6
 80031f8:	601a      	str	r2, [r3, #0]
  return HAL_OK;
 80031fa:	2000      	movs	r0, #0
}
 80031fc:	b002      	add	sp, #8
 80031fe:	bd70      	pop	{r4, r5, r6, pc}
  __HAL_LOCK(hdma2d);
 8003200:	4620      	mov	r0, r4
 8003202:	e7fb      	b.n	80031fc <HAL_DMA2D_Start_IT+0x34>

08003204 <HAL_DMA2D_BlendingStart_IT>:
{
 8003204:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8003206:	4615      	mov	r5, r2
 8003208:	461a      	mov	r2, r3
  __HAL_LOCK(hdma2d);
 800320a:	f890 3038 	ldrb.w	r3, [r0, #56]	; 0x38
 800320e:	2b01      	cmp	r3, #1
{
 8003210:	4604      	mov	r4, r0
 8003212:	f04f 0302 	mov.w	r3, #2
  __HAL_LOCK(hdma2d);
 8003216:	d016      	beq.n	8003246 <HAL_DMA2D_BlendingStart_IT+0x42>
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 8003218:	f880 3039 	strb.w	r3, [r0, #57]	; 0x39
  WRITE_REG(hdma2d->Instance->BGMAR, SrcAddress2);
 800321c:	6803      	ldr	r3, [r0, #0]
  __HAL_LOCK(hdma2d);
 800321e:	2601      	movs	r6, #1
 8003220:	f880 6038 	strb.w	r6, [r0, #56]	; 0x38
  WRITE_REG(hdma2d->Instance->BGMAR, SrcAddress2);
 8003224:	615d      	str	r5, [r3, #20]
  DMA2D_SetConfig(hdma2d, SrcAddress1, DstAddress, Width, Height);
 8003226:	9b07      	ldr	r3, [sp, #28]
 8003228:	9300      	str	r3, [sp, #0]
 800322a:	9b06      	ldr	r3, [sp, #24]
 800322c:	f7ff ff5e 	bl	80030ec <DMA2D_SetConfig>
  __HAL_DMA2D_ENABLE_IT(hdma2d, DMA2D_IT_TC|DMA2D_IT_TE|DMA2D_IT_CE);
 8003230:	6823      	ldr	r3, [r4, #0]
 8003232:	681a      	ldr	r2, [r3, #0]
 8003234:	f442 520c 	orr.w	r2, r2, #8960	; 0x2300
 8003238:	601a      	str	r2, [r3, #0]
  __HAL_DMA2D_ENABLE(hdma2d);
 800323a:	681a      	ldr	r2, [r3, #0]
 800323c:	4332      	orrs	r2, r6
 800323e:	601a      	str	r2, [r3, #0]
  return HAL_OK;
 8003240:	2000      	movs	r0, #0
}
 8003242:	b002      	add	sp, #8
 8003244:	bd70      	pop	{r4, r5, r6, pc}
  __HAL_LOCK(hdma2d);
 8003246:	4618      	mov	r0, r3
 8003248:	e7fb      	b.n	8003242 <HAL_DMA2D_BlendingStart_IT+0x3e>

0800324a <HAL_DMA2D_Abort>:
   MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_ABORT|DMA2D_CR_START, DMA2D_CR_ABORT);
 800324a:	6802      	ldr	r2, [r0, #0]
{
 800324c:	b538      	push	{r3, r4, r5, lr}
   MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_ABORT|DMA2D_CR_START, DMA2D_CR_ABORT);
 800324e:	6813      	ldr	r3, [r2, #0]
 8003250:	f023 0305 	bic.w	r3, r3, #5
 8003254:	f043 0304 	orr.w	r3, r3, #4
 8003258:	6013      	str	r3, [r2, #0]
{
 800325a:	4604      	mov	r4, r0
  tickstart = HAL_GetTick();
 800325c:	f7ff feb4 	bl	8002fc8 <HAL_GetTick>
 8003260:	4605      	mov	r5, r0
  while((hdma2d->Instance->CR & DMA2D_CR_START) != 0U)
 8003262:	6823      	ldr	r3, [r4, #0]
 8003264:	6818      	ldr	r0, [r3, #0]
 8003266:	f010 0001 	ands.w	r0, r0, #1
 800326a:	d109      	bne.n	8003280 <HAL_DMA2D_Abort+0x36>
  __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TC|DMA2D_IT_TE|DMA2D_IT_CE);
 800326c:	681a      	ldr	r2, [r3, #0]
 800326e:	f422 520c 	bic.w	r2, r2, #8960	; 0x2300
 8003272:	601a      	str	r2, [r3, #0]
  hdma2d->State = HAL_DMA2D_STATE_READY;
 8003274:	2301      	movs	r3, #1
 8003276:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
  __HAL_UNLOCK(hdma2d);
 800327a:	f884 0038 	strb.w	r0, [r4, #56]	; 0x38
  return HAL_OK;
 800327e:	e00f      	b.n	80032a0 <HAL_DMA2D_Abort+0x56>
    if((HAL_GetTick() - tickstart ) > DMA2D_TIMEOUT_ABORT)
 8003280:	f7ff fea2 	bl	8002fc8 <HAL_GetTick>
 8003284:	1b40      	subs	r0, r0, r5
 8003286:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
 800328a:	d9ea      	bls.n	8003262 <HAL_DMA2D_Abort+0x18>
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_TIMEOUT;
 800328c:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800328e:	f043 0320 	orr.w	r3, r3, #32
 8003292:	63e3      	str	r3, [r4, #60]	; 0x3c
      hdma2d->State = HAL_DMA2D_STATE_TIMEOUT;
 8003294:	2003      	movs	r0, #3
      __HAL_UNLOCK(hdma2d);
 8003296:	2300      	movs	r3, #0
      hdma2d->State = HAL_DMA2D_STATE_TIMEOUT;
 8003298:	f884 0039 	strb.w	r0, [r4, #57]	; 0x39
      __HAL_UNLOCK(hdma2d);
 800329c:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38
}
 80032a0:	bd38      	pop	{r3, r4, r5, pc}

080032a2 <HAL_DMA2D_CLUTLoading_Abort>:
{
 80032a2:	b570      	push	{r4, r5, r6, lr}
  const __IO uint32_t * reg =  &(hdma2d->Instance->BGPFCCR); /* by default, point at background register */
 80032a4:	6805      	ldr	r5, [r0, #0]
  SET_BIT(hdma2d->Instance->CR, DMA2D_CR_ABORT);
 80032a6:	682a      	ldr	r2, [r5, #0]
 80032a8:	f042 0204 	orr.w	r2, r2, #4
 80032ac:	602a      	str	r2, [r5, #0]
  if(LayerIdx == DMA2D_FOREGROUND_LAYER)
 80032ae:	2901      	cmp	r1, #1
{
 80032b0:	4604      	mov	r4, r0
  const __IO uint32_t * reg =  &(hdma2d->Instance->BGPFCCR); /* by default, point at background register */
 80032b2:	bf14      	ite	ne
 80032b4:	3524      	addne	r5, #36	; 0x24
    reg  = &(hdma2d->Instance->FGPFCCR);
 80032b6:	351c      	addeq	r5, #28
  tickstart = HAL_GetTick();
 80032b8:	f7ff fe86 	bl	8002fc8 <HAL_GetTick>
 80032bc:	4606      	mov	r6, r0
  while((*reg & DMA2D_BGPFCCR_START) != 0U)
 80032be:	6828      	ldr	r0, [r5, #0]
 80032c0:	f010 0020 	ands.w	r0, r0, #32
 80032c4:	d10a      	bne.n	80032dc <HAL_DMA2D_CLUTLoading_Abort+0x3a>
  __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CTC | DMA2D_IT_TE | DMA2D_IT_CE |DMA2D_IT_CAE);
 80032c6:	6822      	ldr	r2, [r4, #0]
 80032c8:	6813      	ldr	r3, [r2, #0]
 80032ca:	f423 5364 	bic.w	r3, r3, #14592	; 0x3900
 80032ce:	6013      	str	r3, [r2, #0]
  hdma2d->State = HAL_DMA2D_STATE_READY;
 80032d0:	2301      	movs	r3, #1
 80032d2:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
  __HAL_UNLOCK(hdma2d);
 80032d6:	f884 0038 	strb.w	r0, [r4, #56]	; 0x38
  return HAL_OK;
 80032da:	e00f      	b.n	80032fc <HAL_DMA2D_CLUTLoading_Abort+0x5a>
    if((HAL_GetTick() - tickstart ) > DMA2D_TIMEOUT_ABORT)
 80032dc:	f7ff fe74 	bl	8002fc8 <HAL_GetTick>
 80032e0:	1b80      	subs	r0, r0, r6
 80032e2:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
 80032e6:	d9ea      	bls.n	80032be <HAL_DMA2D_CLUTLoading_Abort+0x1c>
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_TIMEOUT;
 80032e8:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 80032ea:	f043 0320 	orr.w	r3, r3, #32
 80032ee:	63e3      	str	r3, [r4, #60]	; 0x3c
      hdma2d->State = HAL_DMA2D_STATE_TIMEOUT;
 80032f0:	2003      	movs	r0, #3
      __HAL_UNLOCK(hdma2d);
 80032f2:	2300      	movs	r3, #0
      hdma2d->State = HAL_DMA2D_STATE_TIMEOUT;
 80032f4:	f884 0039 	strb.w	r0, [r4, #57]	; 0x39
      __HAL_UNLOCK(hdma2d);
 80032f8:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38
}
 80032fc:	bd70      	pop	{r4, r5, r6, pc}
	...

08003300 <HAL_DMA2D_DeInit>:
{
 8003300:	b538      	push	{r3, r4, r5, lr}
  if(hdma2d == NULL)
 8003302:	4605      	mov	r5, r0
 8003304:	b908      	cbnz	r0, 800330a <HAL_DMA2D_DeInit+0xa>
     return HAL_ERROR;
 8003306:	2001      	movs	r0, #1
}
 8003308:	bd38      	pop	{r3, r4, r5, pc}
  if (__HAL_RCC_DMA2D_IS_CLK_ENABLED())
 800330a:	4b16      	ldr	r3, [pc, #88]	; (8003364 <HAL_DMA2D_DeInit+0x64>)
 800330c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800330e:	0219      	lsls	r1, r3, #8
 8003310:	d413      	bmi.n	800333a <HAL_DMA2D_DeInit+0x3a>
  hdma2d->Instance->CR       =    0U;
 8003312:	682b      	ldr	r3, [r5, #0]
 8003314:	2400      	movs	r4, #0
  hdma2d->Instance->IFCR     = 0x3FU;
 8003316:	223f      	movs	r2, #63	; 0x3f
  hdma2d->Instance->CR       =    0U;
 8003318:	601c      	str	r4, [r3, #0]
  HAL_DMA2D_MspDeInit(hdma2d);
 800331a:	4628      	mov	r0, r5
  hdma2d->Instance->IFCR     = 0x3FU;
 800331c:	609a      	str	r2, [r3, #8]
  hdma2d->Instance->FGOR     =    0U;
 800331e:	611c      	str	r4, [r3, #16]
  hdma2d->Instance->BGOR     =    0U;
 8003320:	619c      	str	r4, [r3, #24]
  hdma2d->Instance->FGPFCCR  =    0U;
 8003322:	61dc      	str	r4, [r3, #28]
  hdma2d->Instance->BGPFCCR  =    0U;
 8003324:	625c      	str	r4, [r3, #36]	; 0x24
  hdma2d->Instance->OPFCCR   =    0U;
 8003326:	635c      	str	r4, [r3, #52]	; 0x34
  HAL_DMA2D_MspDeInit(hdma2d);
 8003328:	f7fe faac 	bl	8001884 <HAL_DMA2D_MspDeInit>
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 800332c:	63ec      	str	r4, [r5, #60]	; 0x3c
  __HAL_UNLOCK(hdma2d);
 800332e:	f885 4038 	strb.w	r4, [r5, #56]	; 0x38
  hdma2d->State  = HAL_DMA2D_STATE_RESET;
 8003332:	f885 4039 	strb.w	r4, [r5, #57]	; 0x39
  return HAL_OK;
 8003336:	4620      	mov	r0, r4
 8003338:	e7e6      	b.n	8003308 <HAL_DMA2D_DeInit+0x8>
 800333a:	6803      	ldr	r3, [r0, #0]
    if ((hdma2d->Instance->CR & DMA2D_CR_START) == DMA2D_CR_START)
 800333c:	6819      	ldr	r1, [r3, #0]
 800333e:	f011 0101 	ands.w	r1, r1, #1
 8003342:	d004      	beq.n	800334e <HAL_DMA2D_DeInit+0x4e>
      if (HAL_DMA2D_Abort(hdma2d) != HAL_OK)
 8003344:	f7ff ff81 	bl	800324a <HAL_DMA2D_Abort>
          if (HAL_DMA2D_CLUTLoading_Abort(hdma2d, 1U) != HAL_OK)
 8003348:	2800      	cmp	r0, #0
 800334a:	d0e2      	beq.n	8003312 <HAL_DMA2D_DeInit+0x12>
 800334c:	e7db      	b.n	8003306 <HAL_DMA2D_DeInit+0x6>
      if ((hdma2d->Instance->BGPFCCR & DMA2D_BGPFCCR_START) == DMA2D_BGPFCCR_START)
 800334e:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8003350:	0692      	lsls	r2, r2, #26
 8003352:	d502      	bpl.n	800335a <HAL_DMA2D_DeInit+0x5a>
          if (HAL_DMA2D_CLUTLoading_Abort(hdma2d, 1U) != HAL_OK)
 8003354:	f7ff ffa5 	bl	80032a2 <HAL_DMA2D_CLUTLoading_Abort>
 8003358:	e7f6      	b.n	8003348 <HAL_DMA2D_DeInit+0x48>
        if ((hdma2d->Instance->FGPFCCR & DMA2D_FGPFCCR_START) == DMA2D_FGPFCCR_START)
 800335a:	69db      	ldr	r3, [r3, #28]
 800335c:	069b      	lsls	r3, r3, #26
 800335e:	d5d8      	bpl.n	8003312 <HAL_DMA2D_DeInit+0x12>
          if (HAL_DMA2D_CLUTLoading_Abort(hdma2d, 1U) != HAL_OK)
 8003360:	2101      	movs	r1, #1
 8003362:	e7f7      	b.n	8003354 <HAL_DMA2D_DeInit+0x54>
 8003364:	40023800 	.word	0x40023800

08003368 <HAL_DMA2D_LineEventCallback>:
 8003368:	4770      	bx	lr

0800336a <HAL_DMA2D_CLUTLoadingCpltCallback>:
 800336a:	4770      	bx	lr

0800336c <HAL_DMA2D_IRQHandler>:
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
 800336c:	6803      	ldr	r3, [r0, #0]
{
 800336e:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
 8003370:	685e      	ldr	r6, [r3, #4]
  uint32_t crflags = READ_REG(hdma2d->Instance->CR);
 8003372:	681d      	ldr	r5, [r3, #0]
  if ((isrflags & DMA2D_FLAG_TE) != 0U)
 8003374:	07f2      	lsls	r2, r6, #31
{
 8003376:	4604      	mov	r4, r0
  if ((isrflags & DMA2D_FLAG_TE) != 0U)
 8003378:	d514      	bpl.n	80033a4 <HAL_DMA2D_IRQHandler+0x38>
    if ((crflags & DMA2D_IT_TE) != 0U)
 800337a:	05e9      	lsls	r1, r5, #23
 800337c:	d512      	bpl.n	80033a4 <HAL_DMA2D_IRQHandler+0x38>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TE);
 800337e:	681a      	ldr	r2, [r3, #0]
 8003380:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 8003384:	601a      	str	r2, [r3, #0]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_TE;
 8003386:	6bc2      	ldr	r2, [r0, #60]	; 0x3c
 8003388:	f042 0201 	orr.w	r2, r2, #1
 800338c:	63c2      	str	r2, [r0, #60]	; 0x3c
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TE);
 800338e:	2201      	movs	r2, #1
 8003390:	609a      	str	r2, [r3, #8]
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 8003392:	2304      	movs	r3, #4
 8003394:	f880 3039 	strb.w	r3, [r0, #57]	; 0x39
      __HAL_UNLOCK(hdma2d);
 8003398:	2300      	movs	r3, #0
 800339a:	f880 3038 	strb.w	r3, [r0, #56]	; 0x38
      if(hdma2d->XferErrorCallback != NULL)
 800339e:	6943      	ldr	r3, [r0, #20]
 80033a0:	b103      	cbz	r3, 80033a4 <HAL_DMA2D_IRQHandler+0x38>
        hdma2d->XferErrorCallback(hdma2d);
 80033a2:	4798      	blx	r3
  if ((isrflags & DMA2D_FLAG_CE) != 0U)
 80033a4:	06b2      	lsls	r2, r6, #26
 80033a6:	d516      	bpl.n	80033d6 <HAL_DMA2D_IRQHandler+0x6a>
    if ((crflags & DMA2D_IT_CE) != 0U)
 80033a8:	04ab      	lsls	r3, r5, #18
 80033aa:	d514      	bpl.n	80033d6 <HAL_DMA2D_IRQHandler+0x6a>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CE);
 80033ac:	6823      	ldr	r3, [r4, #0]
 80033ae:	681a      	ldr	r2, [r3, #0]
 80033b0:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 80033b4:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CE);
 80033b6:	2220      	movs	r2, #32
 80033b8:	609a      	str	r2, [r3, #8]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CE;
 80033ba:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 80033bc:	f043 0302 	orr.w	r3, r3, #2
 80033c0:	63e3      	str	r3, [r4, #60]	; 0x3c
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 80033c2:	2304      	movs	r3, #4
 80033c4:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
      __HAL_UNLOCK(hdma2d);
 80033c8:	2300      	movs	r3, #0
 80033ca:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38
      if(hdma2d->XferErrorCallback != NULL)
 80033ce:	6963      	ldr	r3, [r4, #20]
 80033d0:	b10b      	cbz	r3, 80033d6 <HAL_DMA2D_IRQHandler+0x6a>
        hdma2d->XferErrorCallback(hdma2d);
 80033d2:	4620      	mov	r0, r4
 80033d4:	4798      	blx	r3
  if ((isrflags & DMA2D_FLAG_CAE) != 0U)
 80033d6:	0730      	lsls	r0, r6, #28
 80033d8:	d516      	bpl.n	8003408 <HAL_DMA2D_IRQHandler+0x9c>
    if ((crflags & DMA2D_IT_CAE) != 0U)
 80033da:	0529      	lsls	r1, r5, #20
 80033dc:	d514      	bpl.n	8003408 <HAL_DMA2D_IRQHandler+0x9c>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CAE);
 80033de:	6823      	ldr	r3, [r4, #0]
 80033e0:	681a      	ldr	r2, [r3, #0]
 80033e2:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 80033e6:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CAE);
 80033e8:	2208      	movs	r2, #8
 80033ea:	609a      	str	r2, [r3, #8]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CAE;
 80033ec:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 80033ee:	f043 0304 	orr.w	r3, r3, #4
 80033f2:	63e3      	str	r3, [r4, #60]	; 0x3c
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 80033f4:	2304      	movs	r3, #4
 80033f6:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
      __HAL_UNLOCK(hdma2d);
 80033fa:	2300      	movs	r3, #0
 80033fc:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38
      if(hdma2d->XferErrorCallback != NULL)
 8003400:	6963      	ldr	r3, [r4, #20]
 8003402:	b10b      	cbz	r3, 8003408 <HAL_DMA2D_IRQHandler+0x9c>
        hdma2d->XferErrorCallback(hdma2d);
 8003404:	4620      	mov	r0, r4
 8003406:	4798      	blx	r3
  if ((isrflags & DMA2D_FLAG_TW) != 0U)
 8003408:	0772      	lsls	r2, r6, #29
 800340a:	d50b      	bpl.n	8003424 <HAL_DMA2D_IRQHandler+0xb8>
    if ((crflags & DMA2D_IT_TW) != 0U)
 800340c:	056b      	lsls	r3, r5, #21
 800340e:	d509      	bpl.n	8003424 <HAL_DMA2D_IRQHandler+0xb8>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TW);
 8003410:	6823      	ldr	r3, [r4, #0]
 8003412:	681a      	ldr	r2, [r3, #0]
 8003414:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8003418:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TW);
 800341a:	2204      	movs	r2, #4
 800341c:	609a      	str	r2, [r3, #8]
      HAL_DMA2D_LineEventCallback(hdma2d);
 800341e:	4620      	mov	r0, r4
 8003420:	f7ff ffa2 	bl	8003368 <HAL_DMA2D_LineEventCallback>
  if ((isrflags & DMA2D_FLAG_TC) != 0U)
 8003424:	07b0      	lsls	r0, r6, #30
 8003426:	d514      	bpl.n	8003452 <HAL_DMA2D_IRQHandler+0xe6>
    if ((crflags & DMA2D_IT_TC) != 0U)
 8003428:	05a9      	lsls	r1, r5, #22
 800342a:	d512      	bpl.n	8003452 <HAL_DMA2D_IRQHandler+0xe6>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TC);
 800342c:	6823      	ldr	r3, [r4, #0]
 800342e:	681a      	ldr	r2, [r3, #0]
 8003430:	f422 7200 	bic.w	r2, r2, #512	; 0x200
 8003434:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TC);
 8003436:	2202      	movs	r2, #2
 8003438:	609a      	str	r2, [r3, #8]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
 800343a:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800343c:	63e3      	str	r3, [r4, #60]	; 0x3c
      hdma2d->State = HAL_DMA2D_STATE_READY;
 800343e:	2301      	movs	r3, #1
 8003440:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
      __HAL_UNLOCK(hdma2d);
 8003444:	2300      	movs	r3, #0
 8003446:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38
      if(hdma2d->XferCpltCallback != NULL)
 800344a:	6923      	ldr	r3, [r4, #16]
 800344c:	b10b      	cbz	r3, 8003452 <HAL_DMA2D_IRQHandler+0xe6>
        hdma2d->XferCpltCallback(hdma2d);
 800344e:	4620      	mov	r0, r4
 8003450:	4798      	blx	r3
  if ((isrflags & DMA2D_FLAG_CTC) != 0U)
 8003452:	06f2      	lsls	r2, r6, #27
 8003454:	d513      	bpl.n	800347e <HAL_DMA2D_IRQHandler+0x112>
    if ((crflags & DMA2D_IT_CTC) != 0U)
 8003456:	04eb      	lsls	r3, r5, #19
 8003458:	d511      	bpl.n	800347e <HAL_DMA2D_IRQHandler+0x112>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CTC);
 800345a:	6823      	ldr	r3, [r4, #0]
 800345c:	681a      	ldr	r2, [r3, #0]
 800345e:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
 8003462:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CTC);
 8003464:	2210      	movs	r2, #16
 8003466:	609a      	str	r2, [r3, #8]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
 8003468:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800346a:	63e3      	str	r3, [r4, #60]	; 0x3c
      hdma2d->State = HAL_DMA2D_STATE_READY;
 800346c:	2301      	movs	r3, #1
 800346e:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
      __HAL_UNLOCK(hdma2d);
 8003472:	2300      	movs	r3, #0
 8003474:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38
      HAL_DMA2D_CLUTLoadingCpltCallback(hdma2d);
 8003478:	4620      	mov	r0, r4
 800347a:	f7ff ff76 	bl	800336a <HAL_DMA2D_CLUTLoadingCpltCallback>
}
 800347e:	bd70      	pop	{r4, r5, r6, pc}

08003480 <HAL_DMA2D_ConfigLayer>:
  __HAL_LOCK(hdma2d);
 8003480:	f890 3038 	ldrb.w	r3, [r0, #56]	; 0x38
 8003484:	2b01      	cmp	r3, #1
{
 8003486:	b5f0      	push	{r4, r5, r6, r7, lr}
 8003488:	f04f 0302 	mov.w	r3, #2
  __HAL_LOCK(hdma2d);
 800348c:	d036      	beq.n	80034fc <HAL_DMA2D_ConfigLayer+0x7c>
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos);
 800348e:	010e      	lsls	r6, r1, #4
  __HAL_LOCK(hdma2d);
 8003490:	2201      	movs	r2, #1
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 8003492:	f880 3039 	strb.w	r3, [r0, #57]	; 0x39
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos);
 8003496:	1983      	adds	r3, r0, r6
  __HAL_LOCK(hdma2d);
 8003498:	f880 2038 	strb.w	r2, [r0, #56]	; 0x38
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos);
 800349c:	e9d3 5207 	ldrd	r5, r2, [r3, #28]
 80034a0:	ea45 4202 	orr.w	r2, r5, r2, lsl #16
  if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 80034a4:	3d09      	subs	r5, #9
 80034a6:	2d01      	cmp	r5, #1
 80034a8:	6a5c      	ldr	r4, [r3, #36]	; 0x24
 80034aa:	4f19      	ldr	r7, [pc, #100]	; (8003510 <HAL_DMA2D_ConfigLayer+0x90>)
 80034ac:	6803      	ldr	r3, [r0, #0]
 80034ae:	d80f      	bhi.n	80034d0 <HAL_DMA2D_ConfigLayer+0x50>
    regValue |= (pLayerCfg->InputAlpha & DMA2D_BGPFCCR_ALPHA);
 80034b0:	f004 4c7f 	and.w	ip, r4, #4278190080	; 0xff000000
 80034b4:	ea4c 0202 	orr.w	r2, ip, r2
  if(LayerIdx == DMA2D_BACKGROUND_LAYER)
 80034b8:	b969      	cbnz	r1, 80034d6 <HAL_DMA2D_ConfigLayer+0x56>
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
 80034ba:	6a59      	ldr	r1, [r3, #36]	; 0x24
 80034bc:	4039      	ands	r1, r7
 80034be:	430a      	orrs	r2, r1
 80034c0:	625a      	str	r2, [r3, #36]	; 0x24
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
 80034c2:	6982      	ldr	r2, [r0, #24]
 80034c4:	619a      	str	r2, [r3, #24]
      WRITE_REG(hdma2d->Instance->BGCOLR, pLayerCfg->InputAlpha & (DMA2D_BGCOLR_BLUE|DMA2D_BGCOLR_GREEN|DMA2D_BGCOLR_RED));
 80034c6:	6a42      	ldr	r2, [r0, #36]	; 0x24
 80034c8:	f022 427f 	bic.w	r2, r2, #4278190080	; 0xff000000
 80034cc:	629a      	str	r2, [r3, #40]	; 0x28
 80034ce:	e00f      	b.n	80034f0 <HAL_DMA2D_ConfigLayer+0x70>
    regValue |=  (pLayerCfg->InputAlpha << DMA2D_BGPFCCR_ALPHA_Pos);
 80034d0:	ea42 6204 	orr.w	r2, r2, r4, lsl #24
  if(LayerIdx == DMA2D_BACKGROUND_LAYER)
 80034d4:	b1a1      	cbz	r1, 8003500 <HAL_DMA2D_ConfigLayer+0x80>
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
 80034d6:	69d9      	ldr	r1, [r3, #28]
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
 80034d8:	4406      	add	r6, r0
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
 80034da:	4039      	ands	r1, r7
 80034dc:	430a      	orrs	r2, r1
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 80034de:	2d01      	cmp	r5, #1
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
 80034e0:	61da      	str	r2, [r3, #28]
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE|DMA2D_FGCOLR_GREEN|DMA2D_FGCOLR_RED));
 80034e2:	bf98      	it	ls
 80034e4:	f024 447f 	bicls.w	r4, r4, #4278190080	; 0xff000000
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
 80034e8:	69b2      	ldr	r2, [r6, #24]
 80034ea:	611a      	str	r2, [r3, #16]
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE|DMA2D_FGCOLR_GREEN|DMA2D_FGCOLR_RED));
 80034ec:	bf98      	it	ls
 80034ee:	621c      	strls	r4, [r3, #32]
  hdma2d->State = HAL_DMA2D_STATE_READY;
 80034f0:	2301      	movs	r3, #1
 80034f2:	f880 3039 	strb.w	r3, [r0, #57]	; 0x39
  __HAL_UNLOCK(hdma2d);
 80034f6:	2300      	movs	r3, #0
 80034f8:	f880 3038 	strb.w	r3, [r0, #56]	; 0x38
  __HAL_LOCK(hdma2d);
 80034fc:	4618      	mov	r0, r3
}
 80034fe:	bdf0      	pop	{r4, r5, r6, r7, pc}
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
 8003500:	6a59      	ldr	r1, [r3, #36]	; 0x24
 8003502:	4039      	ands	r1, r7
 8003504:	430a      	orrs	r2, r1
 8003506:	625a      	str	r2, [r3, #36]	; 0x24
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
 8003508:	6982      	ldr	r2, [r0, #24]
 800350a:	619a      	str	r2, [r3, #24]
 800350c:	e7f0      	b.n	80034f0 <HAL_DMA2D_ConfigLayer+0x70>
 800350e:	bf00      	nop
 8003510:	00fcfff0 	.word	0x00fcfff0

08003514 <HAL_GPIO_Init>:
  * @param  GPIO_Init pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
 8003514:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003518:	b085      	sub	sp, #20
  for(position = 0U; position < GPIO_NUMBER; position++)
  {
    /* Get the IO position */
    ioposition = 0x01U << position;
    /* Get the current IO position */
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 800351a:	680b      	ldr	r3, [r1, #0]
      /*--------------------- EXTI Mode Configuration ------------------------*/
      /* Configure the External Interrupt or event for the current IO */
      if((GPIO_Init->Mode & EXTI_MODE) == EXTI_MODE)
      {
        /* Enable SYSCFG Clock */
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 800351c:	f8df 81c4 	ldr.w	r8, [pc, #452]	; 80036e4 <HAL_GPIO_Init+0x1d0>
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
        SYSCFG->EXTICR[position >> 2U] = temp;

        /* Clear EXTI line configuration */
        temp = EXTI->IMR;
 8003520:	4a6e      	ldr	r2, [pc, #440]	; (80036dc <HAL_GPIO_Init+0x1c8>)
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 8003522:	f8df 91c4 	ldr.w	r9, [pc, #452]	; 80036e8 <HAL_GPIO_Init+0x1d4>
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 8003526:	9301      	str	r3, [sp, #4]
  for(position = 0U; position < GPIO_NUMBER; position++)
 8003528:	2300      	movs	r3, #0
    ioposition = 0x01U << position;
 800352a:	2401      	movs	r4, #1
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 800352c:	9d01      	ldr	r5, [sp, #4]
    ioposition = 0x01U << position;
 800352e:	409c      	lsls	r4, r3
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 8003530:	4025      	ands	r5, r4
    if(iocurrent == ioposition)
 8003532:	42ac      	cmp	r4, r5
 8003534:	f040 80b8 	bne.w	80036a8 <HAL_GPIO_Init+0x194>
      if((GPIO_Init->Mode == GPIO_MODE_OUTPUT_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_PP) ||
 8003538:	684c      	ldr	r4, [r1, #4]
 800353a:	f024 0c10 	bic.w	ip, r4, #16
 800353e:	ea4f 0e43 	mov.w	lr, r3, lsl #1
 8003542:	2603      	movs	r6, #3
 8003544:	f10c 37ff 	add.w	r7, ip, #4294967295
 8003548:	fa06 f60e 	lsl.w	r6, r6, lr
 800354c:	2f01      	cmp	r7, #1
 800354e:	ea6f 0606 	mvn.w	r6, r6
 8003552:	d811      	bhi.n	8003578 <HAL_GPIO_Init+0x64>
        temp = GPIOx->OSPEEDR; 
 8003554:	6887      	ldr	r7, [r0, #8]
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 8003556:	ea07 0a06 	and.w	sl, r7, r6
        temp |= (GPIO_Init->Speed << (position * 2U));
 800355a:	68cf      	ldr	r7, [r1, #12]
 800355c:	fa07 f70e 	lsl.w	r7, r7, lr
 8003560:	ea47 070a 	orr.w	r7, r7, sl
        GPIOx->OSPEEDR = temp;
 8003564:	6087      	str	r7, [r0, #8]
        temp = GPIOx->OTYPER;
 8003566:	6847      	ldr	r7, [r0, #4]
        temp &= ~(GPIO_OTYPER_OT_0 << position) ;
 8003568:	ea27 0a05 	bic.w	sl, r7, r5
        temp |= (((GPIO_Init->Mode & GPIO_OUTPUT_TYPE) >> 4U) << position);
 800356c:	f3c4 1700 	ubfx	r7, r4, #4, #1
 8003570:	409f      	lsls	r7, r3
 8003572:	ea47 070a 	orr.w	r7, r7, sl
        GPIOx->OTYPER = temp;
 8003576:	6047      	str	r7, [r0, #4]
      temp = GPIOx->PUPDR;
 8003578:	68c7      	ldr	r7, [r0, #12]
      temp &= ~(GPIO_PUPDR_PUPDR0 << (position * 2U));
 800357a:	ea07 0a06 	and.w	sl, r7, r6
      temp |= ((GPIO_Init->Pull) << (position * 2U));
 800357e:	688f      	ldr	r7, [r1, #8]
 8003580:	fa07 f70e 	lsl.w	r7, r7, lr
 8003584:	ea47 070a 	orr.w	r7, r7, sl
      if((GPIO_Init->Mode == GPIO_MODE_AF_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_OD))
 8003588:	f1bc 0f02 	cmp.w	ip, #2
      GPIOx->PUPDR = temp;
 800358c:	60c7      	str	r7, [r0, #12]
      if((GPIO_Init->Mode == GPIO_MODE_AF_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_OD))
 800358e:	d116      	bne.n	80035be <HAL_GPIO_Init+0xaa>
        temp = GPIOx->AFR[position >> 3U];
 8003590:	ea4f 0ad3 	mov.w	sl, r3, lsr #3
 8003594:	eb00 0a8a 	add.w	sl, r0, sl, lsl #2
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 8003598:	f003 0b07 	and.w	fp, r3, #7
        temp = GPIOx->AFR[position >> 3U];
 800359c:	f8da 7020 	ldr.w	r7, [sl, #32]
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 80035a0:	ea4f 0b8b 	mov.w	fp, fp, lsl #2
 80035a4:	f04f 0c0f 	mov.w	ip, #15
 80035a8:	fa0c fc0b 	lsl.w	ip, ip, fp
 80035ac:	ea27 0c0c 	bic.w	ip, r7, ip
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 80035b0:	690f      	ldr	r7, [r1, #16]
 80035b2:	fa07 f70b 	lsl.w	r7, r7, fp
 80035b6:	ea47 070c 	orr.w	r7, r7, ip
        GPIOx->AFR[position >> 3U] = temp;
 80035ba:	f8ca 7020 	str.w	r7, [sl, #32]
      temp = GPIOx->MODER;
 80035be:	6807      	ldr	r7, [r0, #0]
      temp &= ~(GPIO_MODER_MODER0 << (position * 2U));
 80035c0:	403e      	ands	r6, r7
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 80035c2:	f004 0703 	and.w	r7, r4, #3
 80035c6:	fa07 fe0e 	lsl.w	lr, r7, lr
 80035ca:	ea4e 0606 	orr.w	r6, lr, r6
      GPIOx->MODER = temp;
 80035ce:	6006      	str	r6, [r0, #0]
      if((GPIO_Init->Mode & EXTI_MODE) == EXTI_MODE)
 80035d0:	00e6      	lsls	r6, r4, #3
 80035d2:	d569      	bpl.n	80036a8 <HAL_GPIO_Init+0x194>
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 80035d4:	f04f 0b00 	mov.w	fp, #0
 80035d8:	f8cd b00c 	str.w	fp, [sp, #12]
 80035dc:	f8d8 7044 	ldr.w	r7, [r8, #68]	; 0x44
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 80035e0:	4e3f      	ldr	r6, [pc, #252]	; (80036e0 <HAL_GPIO_Init+0x1cc>)
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 80035e2:	f447 4780 	orr.w	r7, r7, #16384	; 0x4000
 80035e6:	f8c8 7044 	str.w	r7, [r8, #68]	; 0x44
 80035ea:	f8d8 7044 	ldr.w	r7, [r8, #68]	; 0x44
 80035ee:	f407 4780 	and.w	r7, r7, #16384	; 0x4000
 80035f2:	9703      	str	r7, [sp, #12]
 80035f4:	9f03      	ldr	r7, [sp, #12]
 80035f6:	f023 0703 	bic.w	r7, r3, #3
 80035fa:	f107 4780 	add.w	r7, r7, #1073741824	; 0x40000000
 80035fe:	f507 379c 	add.w	r7, r7, #79872	; 0x13800
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 8003602:	f003 0e03 	and.w	lr, r3, #3
        temp = SYSCFG->EXTICR[position >> 2U];
 8003606:	f8d7 a008 	ldr.w	sl, [r7, #8]
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 800360a:	ea4f 0e8e 	mov.w	lr, lr, lsl #2
 800360e:	f04f 0c0f 	mov.w	ip, #15
 8003612:	fa0c fc0e 	lsl.w	ip, ip, lr
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 8003616:	42b0      	cmp	r0, r6
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 8003618:	ea2a 0c0c 	bic.w	ip, sl, ip
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 800361c:	d04b      	beq.n	80036b6 <HAL_GPIO_Init+0x1a2>
 800361e:	f506 6680 	add.w	r6, r6, #1024	; 0x400
 8003622:	42b0      	cmp	r0, r6
 8003624:	d049      	beq.n	80036ba <HAL_GPIO_Init+0x1a6>
 8003626:	f506 6680 	add.w	r6, r6, #1024	; 0x400
 800362a:	42b0      	cmp	r0, r6
 800362c:	d047      	beq.n	80036be <HAL_GPIO_Init+0x1aa>
 800362e:	f506 6680 	add.w	r6, r6, #1024	; 0x400
 8003632:	42b0      	cmp	r0, r6
 8003634:	d045      	beq.n	80036c2 <HAL_GPIO_Init+0x1ae>
 8003636:	f506 6680 	add.w	r6, r6, #1024	; 0x400
 800363a:	42b0      	cmp	r0, r6
 800363c:	d043      	beq.n	80036c6 <HAL_GPIO_Init+0x1b2>
 800363e:	4548      	cmp	r0, r9
 8003640:	d043      	beq.n	80036ca <HAL_GPIO_Init+0x1b6>
 8003642:	f506 6600 	add.w	r6, r6, #2048	; 0x800
 8003646:	42b0      	cmp	r0, r6
 8003648:	d041      	beq.n	80036ce <HAL_GPIO_Init+0x1ba>
 800364a:	f506 6680 	add.w	r6, r6, #1024	; 0x400
 800364e:	42b0      	cmp	r0, r6
 8003650:	d03f      	beq.n	80036d2 <HAL_GPIO_Init+0x1be>
 8003652:	f506 6680 	add.w	r6, r6, #1024	; 0x400
 8003656:	42b0      	cmp	r0, r6
 8003658:	d03d      	beq.n	80036d6 <HAL_GPIO_Init+0x1c2>
 800365a:	f506 6680 	add.w	r6, r6, #1024	; 0x400
 800365e:	42b0      	cmp	r0, r6
 8003660:	bf14      	ite	ne
 8003662:	260a      	movne	r6, #10
 8003664:	2609      	moveq	r6, #9
 8003666:	fa06 f60e 	lsl.w	r6, r6, lr
 800366a:	ea46 060c 	orr.w	r6, r6, ip
        SYSCFG->EXTICR[position >> 2U] = temp;
 800366e:	60be      	str	r6, [r7, #8]
        temp = EXTI->IMR;
 8003670:	6816      	ldr	r6, [r2, #0]
        temp &= ~((uint32_t)iocurrent);
 8003672:	43ef      	mvns	r7, r5
        if((GPIO_Init->Mode & GPIO_MODE_IT) == GPIO_MODE_IT)
 8003674:	f414 3f80 	tst.w	r4, #65536	; 0x10000
        temp &= ~((uint32_t)iocurrent);
 8003678:	bf0c      	ite	eq
 800367a:	403e      	andeq	r6, r7
        {
          temp |= iocurrent;
 800367c:	432e      	orrne	r6, r5
        }
        EXTI->IMR = temp;
 800367e:	6016      	str	r6, [r2, #0]

        temp = EXTI->EMR;
 8003680:	6856      	ldr	r6, [r2, #4]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & GPIO_MODE_EVT) == GPIO_MODE_EVT)
 8003682:	f414 3f00 	tst.w	r4, #131072	; 0x20000
        temp &= ~((uint32_t)iocurrent);
 8003686:	bf0c      	ite	eq
 8003688:	403e      	andeq	r6, r7
        {
          temp |= iocurrent;
 800368a:	432e      	orrne	r6, r5
        }
        EXTI->EMR = temp;
 800368c:	6056      	str	r6, [r2, #4]

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR;
 800368e:	6896      	ldr	r6, [r2, #8]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & RISING_EDGE) == RISING_EDGE)
 8003690:	f414 1f80 	tst.w	r4, #1048576	; 0x100000
        temp &= ~((uint32_t)iocurrent);
 8003694:	bf0c      	ite	eq
 8003696:	403e      	andeq	r6, r7
        {
          temp |= iocurrent;
 8003698:	432e      	orrne	r6, r5
        }
        EXTI->RTSR = temp;
 800369a:	6096      	str	r6, [r2, #8]

        temp = EXTI->FTSR;
 800369c:	68d6      	ldr	r6, [r2, #12]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & FALLING_EDGE) == FALLING_EDGE)
 800369e:	02a4      	lsls	r4, r4, #10
        temp &= ~((uint32_t)iocurrent);
 80036a0:	bf54      	ite	pl
 80036a2:	403e      	andpl	r6, r7
        {
          temp |= iocurrent;
 80036a4:	432e      	orrmi	r6, r5
        }
        EXTI->FTSR = temp;
 80036a6:	60d6      	str	r6, [r2, #12]
  for(position = 0U; position < GPIO_NUMBER; position++)
 80036a8:	3301      	adds	r3, #1
 80036aa:	2b10      	cmp	r3, #16
 80036ac:	f47f af3d 	bne.w	800352a <HAL_GPIO_Init+0x16>
      }
    }
  }
}
 80036b0:	b005      	add	sp, #20
 80036b2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 80036b6:	465e      	mov	r6, fp
 80036b8:	e7d5      	b.n	8003666 <HAL_GPIO_Init+0x152>
 80036ba:	2601      	movs	r6, #1
 80036bc:	e7d3      	b.n	8003666 <HAL_GPIO_Init+0x152>
 80036be:	2602      	movs	r6, #2
 80036c0:	e7d1      	b.n	8003666 <HAL_GPIO_Init+0x152>
 80036c2:	2603      	movs	r6, #3
 80036c4:	e7cf      	b.n	8003666 <HAL_GPIO_Init+0x152>
 80036c6:	2604      	movs	r6, #4
 80036c8:	e7cd      	b.n	8003666 <HAL_GPIO_Init+0x152>
 80036ca:	2605      	movs	r6, #5
 80036cc:	e7cb      	b.n	8003666 <HAL_GPIO_Init+0x152>
 80036ce:	2606      	movs	r6, #6
 80036d0:	e7c9      	b.n	8003666 <HAL_GPIO_Init+0x152>
 80036d2:	2607      	movs	r6, #7
 80036d4:	e7c7      	b.n	8003666 <HAL_GPIO_Init+0x152>
 80036d6:	2608      	movs	r6, #8
 80036d8:	e7c5      	b.n	8003666 <HAL_GPIO_Init+0x152>
 80036da:	bf00      	nop
 80036dc:	40013c00 	.word	0x40013c00
 80036e0:	40020000 	.word	0x40020000
 80036e4:	40023800 	.word	0x40023800
 80036e8:	40021400 	.word	0x40021400

080036ec <HAL_GPIO_WritePin>:
{
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if(PinState != GPIO_PIN_RESET)
 80036ec:	b10a      	cbz	r2, 80036f2 <HAL_GPIO_WritePin+0x6>
  {
    GPIOx->BSRR = GPIO_Pin;
  }
  else
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
 80036ee:	6181      	str	r1, [r0, #24]
  }
}
 80036f0:	4770      	bx	lr
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
 80036f2:	0409      	lsls	r1, r1, #16
 80036f4:	e7fb      	b.n	80036ee <HAL_GPIO_WritePin+0x2>

080036f6 <I2C_IsAcknowledgeFailed>:
  *                the configuration information for the specified I2C.
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_IsAcknowledgeFailed(I2C_HandleTypeDef *hi2c)
{
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 80036f6:	6801      	ldr	r1, [r0, #0]
 80036f8:	694b      	ldr	r3, [r1, #20]
 80036fa:	f413 6380 	ands.w	r3, r3, #1024	; 0x400
 80036fe:	f04f 0200 	mov.w	r2, #0
 8003702:	d010      	beq.n	8003726 <I2C_IsAcknowledgeFailed+0x30>
  {
    /* Clear NACKF Flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8003704:	f46f 6380 	mvn.w	r3, #1024	; 0x400
 8003708:	614b      	str	r3, [r1, #20]

    hi2c->PreviousState       = I2C_STATE_NONE;
    hi2c->State               = HAL_I2C_STATE_READY;
 800370a:	2320      	movs	r3, #32
    hi2c->PreviousState       = I2C_STATE_NONE;
 800370c:	6302      	str	r2, [r0, #48]	; 0x30
    hi2c->State               = HAL_I2C_STATE_READY;
 800370e:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d
    hi2c->Mode                = HAL_I2C_MODE_NONE;
 8003712:	f880 203e 	strb.w	r2, [r0, #62]	; 0x3e
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 8003716:	6c03      	ldr	r3, [r0, #64]	; 0x40

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 8003718:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800371c:	f043 0304 	orr.w	r3, r3, #4
 8003720:	6403      	str	r3, [r0, #64]	; 0x40

    return HAL_ERROR;
 8003722:	2001      	movs	r0, #1
 8003724:	4770      	bx	lr
  }
  return HAL_OK;
 8003726:	4618      	mov	r0, r3
}
 8003728:	4770      	bx	lr

0800372a <I2C_WaitOnMasterAddressFlagUntilTimeout>:
{
 800372a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800372e:	4604      	mov	r4, r0
 8003730:	4616      	mov	r6, r2
 8003732:	4698      	mov	r8, r3
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 8003734:	b28f      	uxth	r7, r1
 8003736:	6825      	ldr	r5, [r4, #0]
 8003738:	6968      	ldr	r0, [r5, #20]
 800373a:	ea37 0000 	bics.w	r0, r7, r0
 800373e:	d017      	beq.n	8003770 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x46>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8003740:	696b      	ldr	r3, [r5, #20]
 8003742:	055a      	lsls	r2, r3, #21
 8003744:	d516      	bpl.n	8003774 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x4a>
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8003746:	682b      	ldr	r3, [r5, #0]
 8003748:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 800374c:	602b      	str	r3, [r5, #0]
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800374e:	f46f 6380 	mvn.w	r3, #1024	; 0x400
 8003752:	616b      	str	r3, [r5, #20]
      hi2c->State               = HAL_I2C_STATE_READY;
 8003754:	2220      	movs	r2, #32
      hi2c->PreviousState       = I2C_STATE_NONE;
 8003756:	2300      	movs	r3, #0
 8003758:	6323      	str	r3, [r4, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 800375a:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 800375e:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 8003762:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8003764:	f042 0204 	orr.w	r2, r2, #4
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8003768:	6422      	str	r2, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 800376a:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
        return HAL_ERROR;
 800376e:	2001      	movs	r0, #1
}
 8003770:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    if (Timeout != HAL_MAX_DELAY)
 8003774:	1c73      	adds	r3, r6, #1
 8003776:	d0df      	beq.n	8003738 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xe>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8003778:	f7ff fc26 	bl	8002fc8 <HAL_GetTick>
 800377c:	eba0 0008 	sub.w	r0, r0, r8
 8003780:	42b0      	cmp	r0, r6
 8003782:	d801      	bhi.n	8003788 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x5e>
 8003784:	2e00      	cmp	r6, #0
 8003786:	d1d6      	bne.n	8003736 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xc>
        hi2c->PreviousState       = I2C_STATE_NONE;
 8003788:	2300      	movs	r3, #0
        hi2c->State               = HAL_I2C_STATE_READY;
 800378a:	2220      	movs	r2, #32
        hi2c->PreviousState       = I2C_STATE_NONE;
 800378c:	6323      	str	r3, [r4, #48]	; 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 800378e:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 8003792:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8003796:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8003798:	f042 0220 	orr.w	r2, r2, #32
 800379c:	e7e4      	b.n	8003768 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x3e>

0800379e <I2C_WaitOnBTFFlagUntilTimeout>:
{
 800379e:	b570      	push	{r4, r5, r6, lr}
 80037a0:	4604      	mov	r4, r0
 80037a2:	460d      	mov	r5, r1
 80037a4:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 80037a6:	6823      	ldr	r3, [r4, #0]
 80037a8:	695b      	ldr	r3, [r3, #20]
 80037aa:	075b      	lsls	r3, r3, #29
 80037ac:	d501      	bpl.n	80037b2 <I2C_WaitOnBTFFlagUntilTimeout+0x14>
  return HAL_OK;
 80037ae:	2000      	movs	r0, #0
}
 80037b0:	bd70      	pop	{r4, r5, r6, pc}
    if (I2C_IsAcknowledgeFailed(hi2c) != HAL_OK)
 80037b2:	4620      	mov	r0, r4
 80037b4:	f7ff ff9f 	bl	80036f6 <I2C_IsAcknowledgeFailed>
 80037b8:	b9a8      	cbnz	r0, 80037e6 <I2C_WaitOnBTFFlagUntilTimeout+0x48>
    if (Timeout != HAL_MAX_DELAY)
 80037ba:	1c6a      	adds	r2, r5, #1
 80037bc:	d0f3      	beq.n	80037a6 <I2C_WaitOnBTFFlagUntilTimeout+0x8>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 80037be:	f7ff fc03 	bl	8002fc8 <HAL_GetTick>
 80037c2:	1b80      	subs	r0, r0, r6
 80037c4:	42a8      	cmp	r0, r5
 80037c6:	d801      	bhi.n	80037cc <I2C_WaitOnBTFFlagUntilTimeout+0x2e>
 80037c8:	2d00      	cmp	r5, #0
 80037ca:	d1ec      	bne.n	80037a6 <I2C_WaitOnBTFFlagUntilTimeout+0x8>
        hi2c->PreviousState     = I2C_STATE_NONE;
 80037cc:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 80037ce:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 80037d0:	6323      	str	r3, [r4, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 80037d2:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 80037d6:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 80037da:	6c22      	ldr	r2, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 80037dc:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 80037e0:	f042 0220 	orr.w	r2, r2, #32
 80037e4:	6422      	str	r2, [r4, #64]	; 0x40
      return HAL_ERROR;
 80037e6:	2001      	movs	r0, #1
 80037e8:	e7e2      	b.n	80037b0 <I2C_WaitOnBTFFlagUntilTimeout+0x12>

080037ea <I2C_WaitOnRXNEFlagUntilTimeout>:
{
 80037ea:	b570      	push	{r4, r5, r6, lr}
 80037ec:	4604      	mov	r4, r0
 80037ee:	460d      	mov	r5, r1
 80037f0:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 80037f2:	6820      	ldr	r0, [r4, #0]
 80037f4:	6943      	ldr	r3, [r0, #20]
 80037f6:	f013 0340 	ands.w	r3, r3, #64	; 0x40
 80037fa:	d001      	beq.n	8003800 <I2C_WaitOnRXNEFlagUntilTimeout+0x16>
  return HAL_OK;
 80037fc:	2000      	movs	r0, #0
 80037fe:	e010      	b.n	8003822 <I2C_WaitOnRXNEFlagUntilTimeout+0x38>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == SET)
 8003800:	6942      	ldr	r2, [r0, #20]
 8003802:	06d2      	lsls	r2, r2, #27
 8003804:	d50e      	bpl.n	8003824 <I2C_WaitOnRXNEFlagUntilTimeout+0x3a>
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 8003806:	f06f 0210 	mvn.w	r2, #16
 800380a:	6142      	str	r2, [r0, #20]
      hi2c->State               = HAL_I2C_STATE_READY;
 800380c:	2220      	movs	r2, #32
      hi2c->PreviousState       = I2C_STATE_NONE;
 800380e:	6323      	str	r3, [r4, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 8003810:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 8003814:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_NONE;
 8003818:	6c22      	ldr	r2, [r4, #64]	; 0x40
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800381a:	6422      	str	r2, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 800381c:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
 8003820:	2001      	movs	r0, #1
}
 8003822:	bd70      	pop	{r4, r5, r6, pc}
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8003824:	f7ff fbd0 	bl	8002fc8 <HAL_GetTick>
 8003828:	1b80      	subs	r0, r0, r6
 800382a:	42a8      	cmp	r0, r5
 800382c:	d801      	bhi.n	8003832 <I2C_WaitOnRXNEFlagUntilTimeout+0x48>
 800382e:	2d00      	cmp	r5, #0
 8003830:	d1df      	bne.n	80037f2 <I2C_WaitOnRXNEFlagUntilTimeout+0x8>
        hi2c->PreviousState     = I2C_STATE_NONE;
 8003832:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 8003834:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 8003836:	6323      	str	r3, [r4, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 8003838:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 800383c:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8003840:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8003842:	f042 0220 	orr.w	r2, r2, #32
 8003846:	e7e8      	b.n	800381a <I2C_WaitOnRXNEFlagUntilTimeout+0x30>

08003848 <I2C_WaitOnFlagUntilTimeout>:
{
 8003848:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800384c:	9e08      	ldr	r6, [sp, #32]
 800384e:	4604      	mov	r4, r0
 8003850:	4690      	mov	r8, r2
 8003852:	461f      	mov	r7, r3
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8003854:	ea4f 4911 	mov.w	r9, r1, lsr #16
 8003858:	b28d      	uxth	r5, r1
 800385a:	6821      	ldr	r1, [r4, #0]
 800385c:	f1b9 0f01 	cmp.w	r9, #1
 8003860:	bf0c      	ite	eq
 8003862:	694b      	ldreq	r3, [r1, #20]
 8003864:	698b      	ldrne	r3, [r1, #24]
 8003866:	ea35 0303 	bics.w	r3, r5, r3
 800386a:	bf0c      	ite	eq
 800386c:	2301      	moveq	r3, #1
 800386e:	2300      	movne	r3, #0
 8003870:	4598      	cmp	r8, r3
 8003872:	d001      	beq.n	8003878 <I2C_WaitOnFlagUntilTimeout+0x30>
  return HAL_OK;
 8003874:	2000      	movs	r0, #0
 8003876:	e016      	b.n	80038a6 <I2C_WaitOnFlagUntilTimeout+0x5e>
    if (Timeout != HAL_MAX_DELAY)
 8003878:	1c7b      	adds	r3, r7, #1
 800387a:	d0ef      	beq.n	800385c <I2C_WaitOnFlagUntilTimeout+0x14>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800387c:	f7ff fba4 	bl	8002fc8 <HAL_GetTick>
 8003880:	1b80      	subs	r0, r0, r6
 8003882:	42b8      	cmp	r0, r7
 8003884:	d801      	bhi.n	800388a <I2C_WaitOnFlagUntilTimeout+0x42>
 8003886:	2f00      	cmp	r7, #0
 8003888:	d1e7      	bne.n	800385a <I2C_WaitOnFlagUntilTimeout+0x12>
        hi2c->PreviousState     = I2C_STATE_NONE;
 800388a:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 800388c:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 800388e:	6323      	str	r3, [r4, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 8003890:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 8003894:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8003898:	6c22      	ldr	r2, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 800389a:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800389e:	f042 0220 	orr.w	r2, r2, #32
 80038a2:	6422      	str	r2, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 80038a4:	2001      	movs	r0, #1
}
 80038a6:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}

080038aa <I2C_WaitOnTXEFlagUntilTimeout>:
{
 80038aa:	b570      	push	{r4, r5, r6, lr}
 80038ac:	4604      	mov	r4, r0
 80038ae:	460d      	mov	r5, r1
 80038b0:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 80038b2:	6823      	ldr	r3, [r4, #0]
 80038b4:	695b      	ldr	r3, [r3, #20]
 80038b6:	061b      	lsls	r3, r3, #24
 80038b8:	d501      	bpl.n	80038be <I2C_WaitOnTXEFlagUntilTimeout+0x14>
  return HAL_OK;
 80038ba:	2000      	movs	r0, #0
}
 80038bc:	bd70      	pop	{r4, r5, r6, pc}
    if (I2C_IsAcknowledgeFailed(hi2c) != HAL_OK)
 80038be:	4620      	mov	r0, r4
 80038c0:	f7ff ff19 	bl	80036f6 <I2C_IsAcknowledgeFailed>
 80038c4:	b9a8      	cbnz	r0, 80038f2 <I2C_WaitOnTXEFlagUntilTimeout+0x48>
    if (Timeout != HAL_MAX_DELAY)
 80038c6:	1c6a      	adds	r2, r5, #1
 80038c8:	d0f3      	beq.n	80038b2 <I2C_WaitOnTXEFlagUntilTimeout+0x8>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 80038ca:	f7ff fb7d 	bl	8002fc8 <HAL_GetTick>
 80038ce:	1b80      	subs	r0, r0, r6
 80038d0:	42a8      	cmp	r0, r5
 80038d2:	d801      	bhi.n	80038d8 <I2C_WaitOnTXEFlagUntilTimeout+0x2e>
 80038d4:	2d00      	cmp	r5, #0
 80038d6:	d1ec      	bne.n	80038b2 <I2C_WaitOnTXEFlagUntilTimeout+0x8>
        hi2c->PreviousState     = I2C_STATE_NONE;
 80038d8:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 80038da:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 80038dc:	6323      	str	r3, [r4, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 80038de:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 80038e2:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 80038e6:	6c22      	ldr	r2, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 80038e8:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 80038ec:	f042 0220 	orr.w	r2, r2, #32
 80038f0:	6422      	str	r2, [r4, #64]	; 0x40
      return HAL_ERROR;
 80038f2:	2001      	movs	r0, #1
 80038f4:	e7e2      	b.n	80038bc <I2C_WaitOnTXEFlagUntilTimeout+0x12>
	...

080038f8 <I2C_RequestMemoryWrite>:
{
 80038f8:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 80038fc:	4615      	mov	r5, r2
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 80038fe:	6802      	ldr	r2, [r0, #0]
{
 8003900:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
 8003902:	4698      	mov	r8, r3
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8003904:	6813      	ldr	r3, [r2, #0]
 8003906:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800390a:	6013      	str	r3, [r2, #0]
{
 800390c:	460f      	mov	r7, r1
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 800390e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8003910:	9600      	str	r6, [sp, #0]
 8003912:	2200      	movs	r2, #0
 8003914:	f04f 1101 	mov.w	r1, #65537	; 0x10001
{
 8003918:	4604      	mov	r4, r0
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 800391a:	f7ff ff95 	bl	8003848 <I2C_WaitOnFlagUntilTimeout>
 800391e:	6823      	ldr	r3, [r4, #0]
 8003920:	b138      	cbz	r0, 8003932 <I2C_RequestMemoryWrite+0x3a>
    if (hi2c->Instance->CR1 & I2C_CR1_START)
 8003922:	681b      	ldr	r3, [r3, #0]
 8003924:	05db      	lsls	r3, r3, #23
 8003926:	d502      	bpl.n	800392e <I2C_RequestMemoryWrite+0x36>
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 8003928:	f44f 7300 	mov.w	r3, #512	; 0x200
 800392c:	6423      	str	r3, [r4, #64]	; 0x40
    return HAL_TIMEOUT;
 800392e:	2003      	movs	r0, #3
 8003930:	e00a      	b.n	8003948 <I2C_RequestMemoryWrite+0x50>
  hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 8003932:	f007 07fe 	and.w	r7, r7, #254	; 0xfe
 8003936:	611f      	str	r7, [r3, #16]
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 8003938:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800393a:	4919      	ldr	r1, [pc, #100]	; (80039a0 <I2C_RequestMemoryWrite+0xa8>)
 800393c:	4633      	mov	r3, r6
 800393e:	4620      	mov	r0, r4
 8003940:	f7ff fef3 	bl	800372a <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8003944:	b118      	cbz	r0, 800394e <I2C_RequestMemoryWrite+0x56>
      return HAL_ERROR;
 8003946:	2001      	movs	r0, #1
}
 8003948:	b004      	add	sp, #16
 800394a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800394e:	6823      	ldr	r3, [r4, #0]
 8003950:	9003      	str	r0, [sp, #12]
 8003952:	695a      	ldr	r2, [r3, #20]
 8003954:	9203      	str	r2, [sp, #12]
 8003956:	699b      	ldr	r3, [r3, #24]
 8003958:	9303      	str	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 800395a:	4632      	mov	r2, r6
 800395c:	990a      	ldr	r1, [sp, #40]	; 0x28
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800395e:	9b03      	ldr	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8003960:	4620      	mov	r0, r4
 8003962:	f7ff ffa2 	bl	80038aa <I2C_WaitOnTXEFlagUntilTimeout>
 8003966:	b140      	cbz	r0, 800397a <I2C_RequestMemoryWrite+0x82>
      if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8003968:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800396a:	2b04      	cmp	r3, #4
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800396c:	bf01      	itttt	eq
 800396e:	6822      	ldreq	r2, [r4, #0]
 8003970:	6813      	ldreq	r3, [r2, #0]
 8003972:	f443 7300 	orreq.w	r3, r3, #512	; 0x200
 8003976:	6013      	streq	r3, [r2, #0]
 8003978:	e7e5      	b.n	8003946 <I2C_RequestMemoryWrite+0x4e>
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 800397a:	f1b8 0f01 	cmp.w	r8, #1
 800397e:	6823      	ldr	r3, [r4, #0]
 8003980:	d102      	bne.n	8003988 <I2C_RequestMemoryWrite+0x90>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 8003982:	b2ed      	uxtb	r5, r5
 8003984:	611d      	str	r5, [r3, #16]
 8003986:	e7df      	b.n	8003948 <I2C_RequestMemoryWrite+0x50>
    hi2c->Instance->DR = I2C_MEM_ADD_MSB(MemAddress);
 8003988:	0a2a      	lsrs	r2, r5, #8
 800398a:	611a      	str	r2, [r3, #16]
    if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 800398c:	990a      	ldr	r1, [sp, #40]	; 0x28
 800398e:	4632      	mov	r2, r6
 8003990:	4620      	mov	r0, r4
 8003992:	f7ff ff8a 	bl	80038aa <I2C_WaitOnTXEFlagUntilTimeout>
 8003996:	2800      	cmp	r0, #0
 8003998:	d1e6      	bne.n	8003968 <I2C_RequestMemoryWrite+0x70>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 800399a:	6823      	ldr	r3, [r4, #0]
 800399c:	e7f1      	b.n	8003982 <I2C_RequestMemoryWrite+0x8a>
 800399e:	bf00      	nop
 80039a0:	00010002 	.word	0x00010002

080039a4 <I2C_RequestMemoryRead>:
{
 80039a4:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 80039a8:	4698      	mov	r8, r3
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 80039aa:	6803      	ldr	r3, [r0, #0]
{
 80039ac:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 80039ae:	4616      	mov	r6, r2
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 80039b0:	681a      	ldr	r2, [r3, #0]
 80039b2:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 80039b6:	601a      	str	r2, [r3, #0]
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 80039b8:	681a      	ldr	r2, [r3, #0]
 80039ba:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 80039be:	601a      	str	r2, [r3, #0]
{
 80039c0:	460f      	mov	r7, r1
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 80039c2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80039c4:	9500      	str	r5, [sp, #0]
 80039c6:	2200      	movs	r2, #0
 80039c8:	f04f 1101 	mov.w	r1, #65537	; 0x10001
{
 80039cc:	4604      	mov	r4, r0
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 80039ce:	f7ff ff3b 	bl	8003848 <I2C_WaitOnFlagUntilTimeout>
 80039d2:	6823      	ldr	r3, [r4, #0]
 80039d4:	b148      	cbz	r0, 80039ea <I2C_RequestMemoryRead+0x46>
    if (hi2c->Instance->CR1 & I2C_CR1_START)
 80039d6:	681b      	ldr	r3, [r3, #0]
 80039d8:	05db      	lsls	r3, r3, #23
 80039da:	d502      	bpl.n	80039e2 <I2C_RequestMemoryRead+0x3e>
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 80039dc:	f44f 7300 	mov.w	r3, #512	; 0x200
 80039e0:	6423      	str	r3, [r4, #64]	; 0x40
    return HAL_TIMEOUT;
 80039e2:	2003      	movs	r0, #3
}
 80039e4:	b004      	add	sp, #16
 80039e6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 80039ea:	b2ff      	uxtb	r7, r7
 80039ec:	f007 02fe 	and.w	r2, r7, #254	; 0xfe
 80039f0:	611a      	str	r2, [r3, #16]
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 80039f2:	492a      	ldr	r1, [pc, #168]	; (8003a9c <I2C_RequestMemoryRead+0xf8>)
 80039f4:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80039f6:	462b      	mov	r3, r5
 80039f8:	4620      	mov	r0, r4
 80039fa:	f7ff fe96 	bl	800372a <I2C_WaitOnMasterAddressFlagUntilTimeout>
 80039fe:	b108      	cbz	r0, 8003a04 <I2C_RequestMemoryRead+0x60>
    return HAL_ERROR;
 8003a00:	2001      	movs	r0, #1
 8003a02:	e7ef      	b.n	80039e4 <I2C_RequestMemoryRead+0x40>
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8003a04:	6823      	ldr	r3, [r4, #0]
 8003a06:	9003      	str	r0, [sp, #12]
 8003a08:	695a      	ldr	r2, [r3, #20]
 8003a0a:	9203      	str	r2, [sp, #12]
 8003a0c:	699b      	ldr	r3, [r3, #24]
 8003a0e:	9303      	str	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8003a10:	462a      	mov	r2, r5
 8003a12:	990a      	ldr	r1, [sp, #40]	; 0x28
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8003a14:	9b03      	ldr	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8003a16:	4620      	mov	r0, r4
 8003a18:	f7ff ff47 	bl	80038aa <I2C_WaitOnTXEFlagUntilTimeout>
 8003a1c:	b140      	cbz	r0, 8003a30 <I2C_RequestMemoryRead+0x8c>
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8003a1e:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8003a20:	2b04      	cmp	r3, #4
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8003a22:	bf01      	itttt	eq
 8003a24:	6822      	ldreq	r2, [r4, #0]
 8003a26:	6813      	ldreq	r3, [r2, #0]
 8003a28:	f443 7300 	orreq.w	r3, r3, #512	; 0x200
 8003a2c:	6013      	streq	r3, [r2, #0]
 8003a2e:	e7e7      	b.n	8003a00 <I2C_RequestMemoryRead+0x5c>
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 8003a30:	f1b8 0f01 	cmp.w	r8, #1
 8003a34:	6823      	ldr	r3, [r4, #0]
 8003a36:	d125      	bne.n	8003a84 <I2C_RequestMemoryRead+0xe0>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 8003a38:	b2f6      	uxtb	r6, r6
 8003a3a:	611e      	str	r6, [r3, #16]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8003a3c:	462a      	mov	r2, r5
 8003a3e:	990a      	ldr	r1, [sp, #40]	; 0x28
 8003a40:	4620      	mov	r0, r4
 8003a42:	f7ff ff32 	bl	80038aa <I2C_WaitOnTXEFlagUntilTimeout>
 8003a46:	4602      	mov	r2, r0
 8003a48:	2800      	cmp	r0, #0
 8003a4a:	d1e8      	bne.n	8003a1e <I2C_RequestMemoryRead+0x7a>
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8003a4c:	6821      	ldr	r1, [r4, #0]
 8003a4e:	680b      	ldr	r3, [r1, #0]
 8003a50:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8003a54:	600b      	str	r3, [r1, #0]
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 8003a56:	4620      	mov	r0, r4
 8003a58:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8003a5a:	9500      	str	r5, [sp, #0]
 8003a5c:	f04f 1101 	mov.w	r1, #65537	; 0x10001
 8003a60:	f7ff fef2 	bl	8003848 <I2C_WaitOnFlagUntilTimeout>
 8003a64:	6823      	ldr	r3, [r4, #0]
 8003a66:	2800      	cmp	r0, #0
 8003a68:	d1b5      	bne.n	80039d6 <I2C_RequestMemoryRead+0x32>
  hi2c->Instance->DR = I2C_7BIT_ADD_READ(DevAddress);
 8003a6a:	f047 0701 	orr.w	r7, r7, #1
 8003a6e:	611f      	str	r7, [r3, #16]
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 8003a70:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8003a72:	490a      	ldr	r1, [pc, #40]	; (8003a9c <I2C_RequestMemoryRead+0xf8>)
 8003a74:	462b      	mov	r3, r5
 8003a76:	4620      	mov	r0, r4
 8003a78:	f7ff fe57 	bl	800372a <I2C_WaitOnMasterAddressFlagUntilTimeout>
    return HAL_TIMEOUT;
 8003a7c:	3000      	adds	r0, #0
 8003a7e:	bf18      	it	ne
 8003a80:	2001      	movne	r0, #1
 8003a82:	e7af      	b.n	80039e4 <I2C_RequestMemoryRead+0x40>
    hi2c->Instance->DR = I2C_MEM_ADD_MSB(MemAddress);
 8003a84:	0a32      	lsrs	r2, r6, #8
 8003a86:	611a      	str	r2, [r3, #16]
    if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8003a88:	990a      	ldr	r1, [sp, #40]	; 0x28
 8003a8a:	462a      	mov	r2, r5
 8003a8c:	4620      	mov	r0, r4
 8003a8e:	f7ff ff0c 	bl	80038aa <I2C_WaitOnTXEFlagUntilTimeout>
 8003a92:	2800      	cmp	r0, #0
 8003a94:	d1c3      	bne.n	8003a1e <I2C_RequestMemoryRead+0x7a>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 8003a96:	6823      	ldr	r3, [r4, #0]
 8003a98:	e7ce      	b.n	8003a38 <I2C_RequestMemoryRead+0x94>
 8003a9a:	bf00      	nop
 8003a9c:	00010002 	.word	0x00010002

08003aa0 <HAL_I2C_Init>:
{
 8003aa0:	b570      	push	{r4, r5, r6, lr}
  if (hi2c == NULL)
 8003aa2:	4604      	mov	r4, r0
 8003aa4:	b908      	cbnz	r0, 8003aaa <HAL_I2C_Init+0xa>
    return HAL_ERROR;
 8003aa6:	2001      	movs	r0, #1
}
 8003aa8:	bd70      	pop	{r4, r5, r6, pc}
  if (hi2c->State == HAL_I2C_STATE_RESET)
 8003aaa:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 8003aae:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8003ab2:	b91b      	cbnz	r3, 8003abc <HAL_I2C_Init+0x1c>
    hi2c->Lock = HAL_UNLOCKED;
 8003ab4:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    HAL_I2C_MspInit(hi2c);
 8003ab8:	f7fd fef6 	bl	80018a8 <HAL_I2C_MspInit>
  hi2c->State = HAL_I2C_STATE_BUSY;
 8003abc:	2324      	movs	r3, #36	; 0x24
 8003abe:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  __HAL_I2C_DISABLE(hi2c);
 8003ac2:	6823      	ldr	r3, [r4, #0]
 8003ac4:	681a      	ldr	r2, [r3, #0]
 8003ac6:	f022 0201 	bic.w	r2, r2, #1
 8003aca:	601a      	str	r2, [r3, #0]
  hi2c->Instance->CR1 |= I2C_CR1_SWRST;
 8003acc:	681a      	ldr	r2, [r3, #0]
 8003ace:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 8003ad2:	601a      	str	r2, [r3, #0]
  hi2c->Instance->CR1 &= ~I2C_CR1_SWRST;
 8003ad4:	681a      	ldr	r2, [r3, #0]
 8003ad6:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
 8003ada:	601a      	str	r2, [r3, #0]
  pclk1 = HAL_RCC_GetPCLK1Freq();
 8003adc:	f000 fe6c 	bl	80047b8 <HAL_RCC_GetPCLK1Freq>
  if (I2C_MIN_PCLK_FREQ(pclk1, hi2c->Init.ClockSpeed) == 1U)
 8003ae0:	6863      	ldr	r3, [r4, #4]
 8003ae2:	4a41      	ldr	r2, [pc, #260]	; (8003be8 <HAL_I2C_Init+0x148>)
 8003ae4:	4293      	cmp	r3, r2
 8003ae6:	d84d      	bhi.n	8003b84 <HAL_I2C_Init+0xe4>
 8003ae8:	4a40      	ldr	r2, [pc, #256]	; (8003bec <HAL_I2C_Init+0x14c>)
 8003aea:	4290      	cmp	r0, r2
 8003aec:	d9db      	bls.n	8003aa6 <HAL_I2C_Init+0x6>
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 8003aee:	6822      	ldr	r2, [r4, #0]
  freqrange = I2C_FREQRANGE(pclk1);
 8003af0:	493f      	ldr	r1, [pc, #252]	; (8003bf0 <HAL_I2C_Init+0x150>)
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 8003af2:	6855      	ldr	r5, [r2, #4]
  freqrange = I2C_FREQRANGE(pclk1);
 8003af4:	fbb0 f1f1 	udiv	r1, r0, r1
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 8003af8:	f025 053f 	bic.w	r5, r5, #63	; 0x3f
 8003afc:	430d      	orrs	r5, r1
 8003afe:	6055      	str	r5, [r2, #4]
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 8003b00:	6a15      	ldr	r5, [r2, #32]
 8003b02:	f025 053f 	bic.w	r5, r5, #63	; 0x3f
 8003b06:	3101      	adds	r1, #1
 8003b08:	4329      	orrs	r1, r5
 8003b0a:	6211      	str	r1, [r2, #32]
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 8003b0c:	69d1      	ldr	r1, [r2, #28]
 8003b0e:	4d36      	ldr	r5, [pc, #216]	; (8003be8 <HAL_I2C_Init+0x148>)
 8003b10:	f421 414f 	bic.w	r1, r1, #52992	; 0xcf00
 8003b14:	42ab      	cmp	r3, r5
 8003b16:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 8003b1a:	f100 30ff 	add.w	r0, r0, #4294967295
 8003b1e:	d848      	bhi.n	8003bb2 <HAL_I2C_Init+0x112>
 8003b20:	005b      	lsls	r3, r3, #1
 8003b22:	fbb0 f0f3 	udiv	r0, r0, r3
 8003b26:	1c43      	adds	r3, r0, #1
 8003b28:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8003b2c:	2b04      	cmp	r3, #4
 8003b2e:	bf38      	it	cc
 8003b30:	2304      	movcc	r3, #4
 8003b32:	430b      	orrs	r3, r1
 8003b34:	61d3      	str	r3, [r2, #28]
  MODIFY_REG(hi2c->Instance->CR1, (I2C_CR1_ENGC | I2C_CR1_NOSTRETCH), (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode));
 8003b36:	e9d4 3007 	ldrd	r3, r0, [r4, #28]
 8003b3a:	6811      	ldr	r1, [r2, #0]
 8003b3c:	4303      	orrs	r3, r0
 8003b3e:	f021 01c0 	bic.w	r1, r1, #192	; 0xc0
 8003b42:	430b      	orrs	r3, r1
 8003b44:	6013      	str	r3, [r2, #0]
  MODIFY_REG(hi2c->Instance->OAR1, (I2C_OAR1_ADDMODE | I2C_OAR1_ADD8_9 | I2C_OAR1_ADD1_7 | I2C_OAR1_ADD0), (hi2c->Init.AddressingMode | hi2c->Init.OwnAddress1));
 8003b46:	6891      	ldr	r1, [r2, #8]
 8003b48:	e9d4 0303 	ldrd	r0, r3, [r4, #12]
 8003b4c:	f421 4103 	bic.w	r1, r1, #33536	; 0x8300
 8003b50:	4303      	orrs	r3, r0
 8003b52:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 8003b56:	430b      	orrs	r3, r1
 8003b58:	6093      	str	r3, [r2, #8]
  MODIFY_REG(hi2c->Instance->OAR2, (I2C_OAR2_ENDUAL | I2C_OAR2_ADD2), (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2));
 8003b5a:	e9d4 3005 	ldrd	r3, r0, [r4, #20]
 8003b5e:	68d1      	ldr	r1, [r2, #12]
 8003b60:	4303      	orrs	r3, r0
 8003b62:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 8003b66:	430b      	orrs	r3, r1
 8003b68:	60d3      	str	r3, [r2, #12]
  __HAL_I2C_ENABLE(hi2c);
 8003b6a:	6813      	ldr	r3, [r2, #0]
 8003b6c:	f043 0301 	orr.w	r3, r3, #1
 8003b70:	6013      	str	r3, [r2, #0]
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8003b72:	2000      	movs	r0, #0
  hi2c->State = HAL_I2C_STATE_READY;
 8003b74:	2320      	movs	r3, #32
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8003b76:	6420      	str	r0, [r4, #64]	; 0x40
  hi2c->State = HAL_I2C_STATE_READY;
 8003b78:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  hi2c->PreviousState = I2C_STATE_NONE;
 8003b7c:	6320      	str	r0, [r4, #48]	; 0x30
  hi2c->Mode = HAL_I2C_MODE_NONE;
 8003b7e:	f884 003e 	strb.w	r0, [r4, #62]	; 0x3e
  return HAL_OK;
 8003b82:	e791      	b.n	8003aa8 <HAL_I2C_Init+0x8>
  if (I2C_MIN_PCLK_FREQ(pclk1, hi2c->Init.ClockSpeed) == 1U)
 8003b84:	4a1b      	ldr	r2, [pc, #108]	; (8003bf4 <HAL_I2C_Init+0x154>)
 8003b86:	4290      	cmp	r0, r2
 8003b88:	d98d      	bls.n	8003aa6 <HAL_I2C_Init+0x6>
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 8003b8a:	6822      	ldr	r2, [r4, #0]
  freqrange = I2C_FREQRANGE(pclk1);
 8003b8c:	4e18      	ldr	r6, [pc, #96]	; (8003bf0 <HAL_I2C_Init+0x150>)
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 8003b8e:	6855      	ldr	r5, [r2, #4]
  freqrange = I2C_FREQRANGE(pclk1);
 8003b90:	fbb0 f6f6 	udiv	r6, r0, r6
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 8003b94:	f025 053f 	bic.w	r5, r5, #63	; 0x3f
 8003b98:	4335      	orrs	r5, r6
 8003b9a:	6055      	str	r5, [r2, #4]
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 8003b9c:	6a15      	ldr	r5, [r2, #32]
 8003b9e:	f44f 7196 	mov.w	r1, #300	; 0x12c
 8003ba2:	4371      	muls	r1, r6
 8003ba4:	f025 053f 	bic.w	r5, r5, #63	; 0x3f
 8003ba8:	f44f 767a 	mov.w	r6, #1000	; 0x3e8
 8003bac:	fbb1 f1f6 	udiv	r1, r1, r6
 8003bb0:	e7a9      	b.n	8003b06 <HAL_I2C_Init+0x66>
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 8003bb2:	68a5      	ldr	r5, [r4, #8]
 8003bb4:	b955      	cbnz	r5, 8003bcc <HAL_I2C_Init+0x12c>
 8003bb6:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8003bba:	fbb0 f0f3 	udiv	r0, r0, r3
 8003bbe:	1c43      	adds	r3, r0, #1
 8003bc0:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8003bc4:	b16b      	cbz	r3, 8003be2 <HAL_I2C_Init+0x142>
 8003bc6:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8003bca:	e7b2      	b.n	8003b32 <HAL_I2C_Init+0x92>
 8003bcc:	2519      	movs	r5, #25
 8003bce:	436b      	muls	r3, r5
 8003bd0:	fbb0 f0f3 	udiv	r0, r0, r3
 8003bd4:	1c43      	adds	r3, r0, #1
 8003bd6:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8003bda:	b113      	cbz	r3, 8003be2 <HAL_I2C_Init+0x142>
 8003bdc:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 8003be0:	e7a7      	b.n	8003b32 <HAL_I2C_Init+0x92>
 8003be2:	2301      	movs	r3, #1
 8003be4:	e7a5      	b.n	8003b32 <HAL_I2C_Init+0x92>
 8003be6:	bf00      	nop
 8003be8:	000186a0 	.word	0x000186a0
 8003bec:	001e847f 	.word	0x001e847f
 8003bf0:	000f4240 	.word	0x000f4240
 8003bf4:	003d08ff 	.word	0x003d08ff

08003bf8 <HAL_I2C_Mem_Write>:
{
 8003bf8:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8003bfc:	4604      	mov	r4, r0
 8003bfe:	4699      	mov	r9, r3
 8003c00:	460f      	mov	r7, r1
 8003c02:	4690      	mov	r8, r2
 8003c04:	9e0c      	ldr	r6, [sp, #48]	; 0x30
  uint32_t tickstart = HAL_GetTick();
 8003c06:	f7ff f9df 	bl	8002fc8 <HAL_GetTick>
  if (hi2c->State == HAL_I2C_STATE_READY)
 8003c0a:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
 8003c0e:	2b20      	cmp	r3, #32
  uint32_t tickstart = HAL_GetTick();
 8003c10:	4605      	mov	r5, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
 8003c12:	d003      	beq.n	8003c1c <HAL_I2C_Mem_Write+0x24>
    return HAL_BUSY;
 8003c14:	2002      	movs	r0, #2
}
 8003c16:	b003      	add	sp, #12
 8003c18:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY_FLAG, tickstart) != HAL_OK)
 8003c1c:	9000      	str	r0, [sp, #0]
 8003c1e:	2319      	movs	r3, #25
 8003c20:	2201      	movs	r2, #1
 8003c22:	493b      	ldr	r1, [pc, #236]	; (8003d10 <HAL_I2C_Mem_Write+0x118>)
 8003c24:	4620      	mov	r0, r4
 8003c26:	f7ff fe0f 	bl	8003848 <I2C_WaitOnFlagUntilTimeout>
 8003c2a:	2800      	cmp	r0, #0
 8003c2c:	d1f2      	bne.n	8003c14 <HAL_I2C_Mem_Write+0x1c>
    __HAL_LOCK(hi2c);
 8003c2e:	f894 303c 	ldrb.w	r3, [r4, #60]	; 0x3c
 8003c32:	2b01      	cmp	r3, #1
 8003c34:	d0ee      	beq.n	8003c14 <HAL_I2C_Mem_Write+0x1c>
 8003c36:	2301      	movs	r3, #1
 8003c38:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 8003c3c:	6823      	ldr	r3, [r4, #0]
 8003c3e:	681a      	ldr	r2, [r3, #0]
 8003c40:	07d1      	lsls	r1, r2, #31
      __HAL_I2C_ENABLE(hi2c);
 8003c42:	bf5e      	ittt	pl
 8003c44:	681a      	ldrpl	r2, [r3, #0]
 8003c46:	f042 0201 	orrpl.w	r2, r2, #1
 8003c4a:	601a      	strpl	r2, [r3, #0]
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 8003c4c:	681a      	ldr	r2, [r3, #0]
 8003c4e:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 8003c52:	601a      	str	r2, [r3, #0]
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
 8003c54:	2321      	movs	r3, #33	; 0x21
 8003c56:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 8003c5a:	2340      	movs	r3, #64	; 0x40
 8003c5c:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8003c60:	2300      	movs	r3, #0
 8003c62:	6423      	str	r3, [r4, #64]	; 0x40
    hi2c->pBuffPtr    = pData;
 8003c64:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8003c66:	6263      	str	r3, [r4, #36]	; 0x24
    hi2c->XferCount   = Size;
 8003c68:	f8bd 302c 	ldrh.w	r3, [sp, #44]	; 0x2c
 8003c6c:	8563      	strh	r3, [r4, #42]	; 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 8003c6e:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8003c70:	8523      	strh	r3, [r4, #40]	; 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 8003c72:	4b28      	ldr	r3, [pc, #160]	; (8003d14 <HAL_I2C_Mem_Write+0x11c>)
 8003c74:	62e3      	str	r3, [r4, #44]	; 0x2c
    if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 8003c76:	e9cd 6500 	strd	r6, r5, [sp]
 8003c7a:	464b      	mov	r3, r9
 8003c7c:	4642      	mov	r2, r8
 8003c7e:	4639      	mov	r1, r7
 8003c80:	4620      	mov	r0, r4
 8003c82:	f7ff fe39 	bl	80038f8 <I2C_RequestMemoryWrite>
 8003c86:	2800      	cmp	r0, #0
 8003c88:	d02a      	beq.n	8003ce0 <HAL_I2C_Mem_Write+0xe8>
      return HAL_ERROR;
 8003c8a:	2001      	movs	r0, #1
 8003c8c:	e7c3      	b.n	8003c16 <HAL_I2C_Mem_Write+0x1e>
      if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8003c8e:	f7ff fe0c 	bl	80038aa <I2C_WaitOnTXEFlagUntilTimeout>
 8003c92:	b140      	cbz	r0, 8003ca6 <HAL_I2C_Mem_Write+0xae>
      if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8003c94:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8003c96:	2b04      	cmp	r3, #4
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8003c98:	bf01      	itttt	eq
 8003c9a:	6822      	ldreq	r2, [r4, #0]
 8003c9c:	6813      	ldreq	r3, [r2, #0]
 8003c9e:	f443 7300 	orreq.w	r3, r3, #512	; 0x200
 8003ca2:	6013      	streq	r3, [r2, #0]
 8003ca4:	e7f1      	b.n	8003c8a <HAL_I2C_Mem_Write+0x92>
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 8003ca6:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8003ca8:	6827      	ldr	r7, [r4, #0]
 8003caa:	461a      	mov	r2, r3
 8003cac:	f812 1b01 	ldrb.w	r1, [r2], #1
 8003cb0:	6139      	str	r1, [r7, #16]
      hi2c->pBuffPtr++;
 8003cb2:	6262      	str	r2, [r4, #36]	; 0x24
      hi2c->XferCount--;
 8003cb4:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
      hi2c->XferSize--;
 8003cb6:	8d21      	ldrh	r1, [r4, #40]	; 0x28
      hi2c->XferCount--;
 8003cb8:	3a01      	subs	r2, #1
 8003cba:	b292      	uxth	r2, r2
 8003cbc:	8562      	strh	r2, [r4, #42]	; 0x2a
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 8003cbe:	697a      	ldr	r2, [r7, #20]
      hi2c->XferSize--;
 8003cc0:	1e48      	subs	r0, r1, #1
 8003cc2:	b280      	uxth	r0, r0
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 8003cc4:	0752      	lsls	r2, r2, #29
      hi2c->XferSize--;
 8003cc6:	8520      	strh	r0, [r4, #40]	; 0x28
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 8003cc8:	d50a      	bpl.n	8003ce0 <HAL_I2C_Mem_Write+0xe8>
 8003cca:	b148      	cbz	r0, 8003ce0 <HAL_I2C_Mem_Write+0xe8>
        hi2c->Instance->DR = *hi2c->pBuffPtr;
 8003ccc:	785a      	ldrb	r2, [r3, #1]
 8003cce:	613a      	str	r2, [r7, #16]
        hi2c->pBuffPtr++;
 8003cd0:	3302      	adds	r3, #2
 8003cd2:	6263      	str	r3, [r4, #36]	; 0x24
        hi2c->XferCount--;
 8003cd4:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8003cd6:	3b01      	subs	r3, #1
        hi2c->XferSize--;
 8003cd8:	3902      	subs	r1, #2
        hi2c->XferCount--;
 8003cda:	b29b      	uxth	r3, r3
        hi2c->XferSize--;
 8003cdc:	8521      	strh	r1, [r4, #40]	; 0x28
        hi2c->XferCount--;
 8003cde:	8563      	strh	r3, [r4, #42]	; 0x2a
    while (hi2c->XferSize > 0U)
 8003ce0:	8d23      	ldrh	r3, [r4, #40]	; 0x28
      if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8003ce2:	462a      	mov	r2, r5
 8003ce4:	4631      	mov	r1, r6
 8003ce6:	4620      	mov	r0, r4
    while (hi2c->XferSize > 0U)
 8003ce8:	2b00      	cmp	r3, #0
 8003cea:	d1d0      	bne.n	8003c8e <HAL_I2C_Mem_Write+0x96>
    if (I2C_WaitOnBTFFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8003cec:	f7ff fd57 	bl	800379e <I2C_WaitOnBTFFlagUntilTimeout>
 8003cf0:	2800      	cmp	r0, #0
 8003cf2:	d1cf      	bne.n	8003c94 <HAL_I2C_Mem_Write+0x9c>
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8003cf4:	6822      	ldr	r2, [r4, #0]
 8003cf6:	6813      	ldr	r3, [r2, #0]
 8003cf8:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8003cfc:	6013      	str	r3, [r2, #0]
    hi2c->State = HAL_I2C_STATE_READY;
 8003cfe:	2320      	movs	r3, #32
 8003d00:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
    __HAL_UNLOCK(hi2c);
 8003d04:	f884 003c 	strb.w	r0, [r4, #60]	; 0x3c
    hi2c->Mode = HAL_I2C_MODE_NONE;
 8003d08:	f884 003e 	strb.w	r0, [r4, #62]	; 0x3e
    return HAL_OK;
 8003d0c:	e783      	b.n	8003c16 <HAL_I2C_Mem_Write+0x1e>
 8003d0e:	bf00      	nop
 8003d10:	00100002 	.word	0x00100002
 8003d14:	ffff0000 	.word	0xffff0000

08003d18 <HAL_I2C_Mem_Read>:
{
 8003d18:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8003d1c:	4604      	mov	r4, r0
 8003d1e:	b087      	sub	sp, #28
 8003d20:	4699      	mov	r9, r3
 8003d22:	460d      	mov	r5, r1
 8003d24:	4690      	mov	r8, r2
 8003d26:	9f10      	ldr	r7, [sp, #64]	; 0x40
  uint32_t tickstart = HAL_GetTick();
 8003d28:	f7ff f94e 	bl	8002fc8 <HAL_GetTick>
  if (hi2c->State == HAL_I2C_STATE_READY)
 8003d2c:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
 8003d30:	2b20      	cmp	r3, #32
  uint32_t tickstart = HAL_GetTick();
 8003d32:	4606      	mov	r6, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
 8003d34:	d004      	beq.n	8003d40 <HAL_I2C_Mem_Read+0x28>
    return HAL_BUSY;
 8003d36:	2502      	movs	r5, #2
}
 8003d38:	4628      	mov	r0, r5
 8003d3a:	b007      	add	sp, #28
 8003d3c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY_FLAG, tickstart) != HAL_OK)
 8003d40:	9000      	str	r0, [sp, #0]
 8003d42:	2319      	movs	r3, #25
 8003d44:	2201      	movs	r2, #1
 8003d46:	4977      	ldr	r1, [pc, #476]	; (8003f24 <HAL_I2C_Mem_Read+0x20c>)
 8003d48:	4620      	mov	r0, r4
 8003d4a:	f7ff fd7d 	bl	8003848 <I2C_WaitOnFlagUntilTimeout>
 8003d4e:	2800      	cmp	r0, #0
 8003d50:	d1f1      	bne.n	8003d36 <HAL_I2C_Mem_Read+0x1e>
    __HAL_LOCK(hi2c);
 8003d52:	f894 303c 	ldrb.w	r3, [r4, #60]	; 0x3c
 8003d56:	2b01      	cmp	r3, #1
 8003d58:	d0ed      	beq.n	8003d36 <HAL_I2C_Mem_Read+0x1e>
 8003d5a:	2301      	movs	r3, #1
 8003d5c:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 8003d60:	6823      	ldr	r3, [r4, #0]
 8003d62:	681a      	ldr	r2, [r3, #0]
 8003d64:	07d0      	lsls	r0, r2, #31
      __HAL_I2C_ENABLE(hi2c);
 8003d66:	bf5e      	ittt	pl
 8003d68:	681a      	ldrpl	r2, [r3, #0]
 8003d6a:	f042 0201 	orrpl.w	r2, r2, #1
 8003d6e:	601a      	strpl	r2, [r3, #0]
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 8003d70:	681a      	ldr	r2, [r3, #0]
 8003d72:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 8003d76:	601a      	str	r2, [r3, #0]
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
 8003d78:	2322      	movs	r3, #34	; 0x22
 8003d7a:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 8003d7e:	2340      	movs	r3, #64	; 0x40
 8003d80:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8003d84:	2300      	movs	r3, #0
 8003d86:	6423      	str	r3, [r4, #64]	; 0x40
    hi2c->pBuffPtr    = pData;
 8003d88:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8003d8a:	6263      	str	r3, [r4, #36]	; 0x24
    hi2c->XferCount   = Size;
 8003d8c:	f8bd 303c 	ldrh.w	r3, [sp, #60]	; 0x3c
 8003d90:	8563      	strh	r3, [r4, #42]	; 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 8003d92:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8003d94:	8523      	strh	r3, [r4, #40]	; 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 8003d96:	4b64      	ldr	r3, [pc, #400]	; (8003f28 <HAL_I2C_Mem_Read+0x210>)
 8003d98:	62e3      	str	r3, [r4, #44]	; 0x2c
    if (I2C_RequestMemoryRead(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 8003d9a:	4629      	mov	r1, r5
 8003d9c:	e9cd 7600 	strd	r7, r6, [sp]
 8003da0:	464b      	mov	r3, r9
 8003da2:	4642      	mov	r2, r8
 8003da4:	4620      	mov	r0, r4
 8003da6:	f7ff fdfd 	bl	80039a4 <I2C_RequestMemoryRead>
 8003daa:	4605      	mov	r5, r0
 8003dac:	b108      	cbz	r0, 8003db2 <HAL_I2C_Mem_Read+0x9a>
      return HAL_ERROR;
 8003dae:	2501      	movs	r5, #1
 8003db0:	e7c2      	b.n	8003d38 <HAL_I2C_Mem_Read+0x20>
    if (hi2c->XferSize == 0U)
 8003db2:	8d22      	ldrh	r2, [r4, #40]	; 0x28
 8003db4:	6823      	ldr	r3, [r4, #0]
 8003db6:	b992      	cbnz	r2, 8003dde <HAL_I2C_Mem_Read+0xc6>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8003db8:	9002      	str	r0, [sp, #8]
 8003dba:	695a      	ldr	r2, [r3, #20]
 8003dbc:	9202      	str	r2, [sp, #8]
 8003dbe:	699a      	ldr	r2, [r3, #24]
 8003dc0:	9202      	str	r2, [sp, #8]
 8003dc2:	9a02      	ldr	r2, [sp, #8]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8003dc4:	681a      	ldr	r2, [r3, #0]
 8003dc6:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8003dca:	601a      	str	r2, [r3, #0]
    hi2c->State = HAL_I2C_STATE_READY;
 8003dcc:	2320      	movs	r3, #32
 8003dce:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
    hi2c->Mode = HAL_I2C_MODE_NONE;
 8003dd2:	2300      	movs	r3, #0
 8003dd4:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
    __HAL_UNLOCK(hi2c);
 8003dd8:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    return HAL_OK;
 8003ddc:	e7ac      	b.n	8003d38 <HAL_I2C_Mem_Read+0x20>
    else if (hi2c->XferSize == 1U)
 8003dde:	2a01      	cmp	r2, #1
 8003de0:	d12c      	bne.n	8003e3c <HAL_I2C_Mem_Read+0x124>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8003de2:	681a      	ldr	r2, [r3, #0]
 8003de4:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8003de8:	601a      	str	r2, [r3, #0]
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8003dea:	9003      	str	r0, [sp, #12]
 8003dec:	695a      	ldr	r2, [r3, #20]
 8003dee:	9203      	str	r2, [sp, #12]
 8003df0:	699a      	ldr	r2, [r3, #24]
 8003df2:	9203      	str	r2, [sp, #12]
 8003df4:	9a03      	ldr	r2, [sp, #12]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8003df6:	681a      	ldr	r2, [r3, #0]
 8003df8:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8003dfc:	601a      	str	r2, [r3, #0]
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8003dfe:	f8df 812c 	ldr.w	r8, [pc, #300]	; 8003f2c <HAL_I2C_Mem_Read+0x214>
    while (hi2c->XferSize > 0U)
 8003e02:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 8003e04:	2b00      	cmp	r3, #0
 8003e06:	d0e1      	beq.n	8003dcc <HAL_I2C_Mem_Read+0xb4>
      if (hi2c->XferSize <= 3U)
 8003e08:	2b03      	cmp	r3, #3
 8003e0a:	d86e      	bhi.n	8003eea <HAL_I2C_Mem_Read+0x1d2>
        if (hi2c->XferSize == 1U)
 8003e0c:	2b01      	cmp	r3, #1
 8003e0e:	d12d      	bne.n	8003e6c <HAL_I2C_Mem_Read+0x154>
          if (I2C_WaitOnRXNEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8003e10:	4632      	mov	r2, r6
 8003e12:	4639      	mov	r1, r7
 8003e14:	4620      	mov	r0, r4
 8003e16:	f7ff fce8 	bl	80037ea <I2C_WaitOnRXNEFlagUntilTimeout>
 8003e1a:	2800      	cmp	r0, #0
 8003e1c:	d1c7      	bne.n	8003dae <HAL_I2C_Mem_Read+0x96>
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8003e1e:	6823      	ldr	r3, [r4, #0]
 8003e20:	691a      	ldr	r2, [r3, #16]
 8003e22:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8003e24:	701a      	strb	r2, [r3, #0]
          hi2c->pBuffPtr++;
 8003e26:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8003e28:	3301      	adds	r3, #1
 8003e2a:	6263      	str	r3, [r4, #36]	; 0x24
          hi2c->XferSize--;
 8003e2c:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 8003e2e:	3b01      	subs	r3, #1
 8003e30:	8523      	strh	r3, [r4, #40]	; 0x28
          hi2c->XferCount--;
 8003e32:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8003e34:	3b01      	subs	r3, #1
 8003e36:	b29b      	uxth	r3, r3
 8003e38:	8563      	strh	r3, [r4, #42]	; 0x2a
 8003e3a:	e7e2      	b.n	8003e02 <HAL_I2C_Mem_Read+0xea>
    else if (hi2c->XferSize == 2U)
 8003e3c:	2a02      	cmp	r2, #2
 8003e3e:	d10e      	bne.n	8003e5e <HAL_I2C_Mem_Read+0x146>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8003e40:	681a      	ldr	r2, [r3, #0]
 8003e42:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8003e46:	601a      	str	r2, [r3, #0]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 8003e48:	681a      	ldr	r2, [r3, #0]
 8003e4a:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 8003e4e:	601a      	str	r2, [r3, #0]
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8003e50:	9004      	str	r0, [sp, #16]
 8003e52:	695a      	ldr	r2, [r3, #20]
 8003e54:	9204      	str	r2, [sp, #16]
 8003e56:	699b      	ldr	r3, [r3, #24]
 8003e58:	9304      	str	r3, [sp, #16]
 8003e5a:	9b04      	ldr	r3, [sp, #16]
 8003e5c:	e7cf      	b.n	8003dfe <HAL_I2C_Mem_Read+0xe6>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8003e5e:	9005      	str	r0, [sp, #20]
 8003e60:	695a      	ldr	r2, [r3, #20]
 8003e62:	9205      	str	r2, [sp, #20]
 8003e64:	699b      	ldr	r3, [r3, #24]
 8003e66:	9305      	str	r3, [sp, #20]
 8003e68:	9b05      	ldr	r3, [sp, #20]
 8003e6a:	e7c8      	b.n	8003dfe <HAL_I2C_Mem_Read+0xe6>
        else if (hi2c->XferSize == 2U)
 8003e6c:	2b02      	cmp	r3, #2
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8003e6e:	9600      	str	r6, [sp, #0]
 8003e70:	463b      	mov	r3, r7
 8003e72:	f04f 0200 	mov.w	r2, #0
 8003e76:	4641      	mov	r1, r8
 8003e78:	4620      	mov	r0, r4
        else if (hi2c->XferSize == 2U)
 8003e7a:	d119      	bne.n	8003eb0 <HAL_I2C_Mem_Read+0x198>
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8003e7c:	f7ff fce4 	bl	8003848 <I2C_WaitOnFlagUntilTimeout>
 8003e80:	2800      	cmp	r0, #0
 8003e82:	d194      	bne.n	8003dae <HAL_I2C_Mem_Read+0x96>
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8003e84:	6823      	ldr	r3, [r4, #0]
 8003e86:	681a      	ldr	r2, [r3, #0]
 8003e88:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8003e8c:	601a      	str	r2, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8003e8e:	691a      	ldr	r2, [r3, #16]
 8003e90:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8003e92:	701a      	strb	r2, [r3, #0]
          hi2c->pBuffPtr++;
 8003e94:	6a62      	ldr	r2, [r4, #36]	; 0x24
 8003e96:	1c53      	adds	r3, r2, #1
 8003e98:	6263      	str	r3, [r4, #36]	; 0x24
          hi2c->XferSize--;
 8003e9a:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 8003e9c:	3b01      	subs	r3, #1
 8003e9e:	8523      	strh	r3, [r4, #40]	; 0x28
          hi2c->XferCount--;
 8003ea0:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8003ea2:	3b01      	subs	r3, #1
 8003ea4:	b29b      	uxth	r3, r3
 8003ea6:	8563      	strh	r3, [r4, #42]	; 0x2a
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8003ea8:	6823      	ldr	r3, [r4, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8003eaa:	691b      	ldr	r3, [r3, #16]
 8003eac:	7053      	strb	r3, [r2, #1]
 8003eae:	e7ba      	b.n	8003e26 <HAL_I2C_Mem_Read+0x10e>
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8003eb0:	f7ff fcca 	bl	8003848 <I2C_WaitOnFlagUntilTimeout>
 8003eb4:	4602      	mov	r2, r0
 8003eb6:	2800      	cmp	r0, #0
 8003eb8:	f47f af79 	bne.w	8003dae <HAL_I2C_Mem_Read+0x96>
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8003ebc:	6823      	ldr	r3, [r4, #0]
 8003ebe:	6819      	ldr	r1, [r3, #0]
 8003ec0:	f421 6180 	bic.w	r1, r1, #1024	; 0x400
 8003ec4:	6019      	str	r1, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8003ec6:	6919      	ldr	r1, [r3, #16]
 8003ec8:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8003eca:	7019      	strb	r1, [r3, #0]
          hi2c->pBuffPtr++;
 8003ecc:	6a63      	ldr	r3, [r4, #36]	; 0x24
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8003ece:	9600      	str	r6, [sp, #0]
          hi2c->pBuffPtr++;
 8003ed0:	3301      	adds	r3, #1
 8003ed2:	6263      	str	r3, [r4, #36]	; 0x24
          hi2c->XferSize--;
 8003ed4:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 8003ed6:	3b01      	subs	r3, #1
 8003ed8:	8523      	strh	r3, [r4, #40]	; 0x28
          hi2c->XferCount--;
 8003eda:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8003edc:	3b01      	subs	r3, #1
 8003ede:	b29b      	uxth	r3, r3
 8003ee0:	8563      	strh	r3, [r4, #42]	; 0x2a
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8003ee2:	4641      	mov	r1, r8
 8003ee4:	463b      	mov	r3, r7
 8003ee6:	4620      	mov	r0, r4
 8003ee8:	e7c8      	b.n	8003e7c <HAL_I2C_Mem_Read+0x164>
        if (I2C_WaitOnRXNEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8003eea:	4632      	mov	r2, r6
 8003eec:	4639      	mov	r1, r7
 8003eee:	4620      	mov	r0, r4
 8003ef0:	f7ff fc7b 	bl	80037ea <I2C_WaitOnRXNEFlagUntilTimeout>
 8003ef4:	2800      	cmp	r0, #0
 8003ef6:	f47f af5a 	bne.w	8003dae <HAL_I2C_Mem_Read+0x96>
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8003efa:	6823      	ldr	r3, [r4, #0]
 8003efc:	691a      	ldr	r2, [r3, #16]
 8003efe:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8003f00:	701a      	strb	r2, [r3, #0]
        hi2c->pBuffPtr++;
 8003f02:	6a62      	ldr	r2, [r4, #36]	; 0x24
 8003f04:	1c53      	adds	r3, r2, #1
 8003f06:	6263      	str	r3, [r4, #36]	; 0x24
        hi2c->XferSize--;
 8003f08:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 8003f0a:	3b01      	subs	r3, #1
 8003f0c:	8523      	strh	r3, [r4, #40]	; 0x28
        hi2c->XferCount--;
 8003f0e:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8003f10:	3b01      	subs	r3, #1
 8003f12:	b29b      	uxth	r3, r3
 8003f14:	8563      	strh	r3, [r4, #42]	; 0x2a
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 8003f16:	6823      	ldr	r3, [r4, #0]
 8003f18:	6959      	ldr	r1, [r3, #20]
 8003f1a:	0749      	lsls	r1, r1, #29
 8003f1c:	f57f af71 	bpl.w	8003e02 <HAL_I2C_Mem_Read+0xea>
 8003f20:	e7c3      	b.n	8003eaa <HAL_I2C_Mem_Read+0x192>
 8003f22:	bf00      	nop
 8003f24:	00100002 	.word	0x00100002
 8003f28:	ffff0000 	.word	0xffff0000
 8003f2c:	00010004 	.word	0x00010004

08003f30 <HAL_I2CEx_ConfigAnalogFilter>:
{
  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_ANALOG_FILTER(AnalogFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 8003f30:	f890 203d 	ldrb.w	r2, [r0, #61]	; 0x3d
 8003f34:	b2d2      	uxtb	r2, r2
 8003f36:	2a20      	cmp	r2, #32
{
 8003f38:	b510      	push	{r4, lr}
  if (hi2c->State == HAL_I2C_STATE_READY)
 8003f3a:	d116      	bne.n	8003f6a <HAL_I2CEx_ConfigAnalogFilter+0x3a>
  {
    hi2c->State = HAL_I2C_STATE_BUSY;
 8003f3c:	2324      	movs	r3, #36	; 0x24
 8003f3e:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d

    /* Disable the selected I2C peripheral */
    __HAL_I2C_DISABLE(hi2c);
 8003f42:	6803      	ldr	r3, [r0, #0]
 8003f44:	681c      	ldr	r4, [r3, #0]
 8003f46:	f024 0401 	bic.w	r4, r4, #1
 8003f4a:	601c      	str	r4, [r3, #0]

    /* Reset I2Cx ANOFF bit */
    hi2c->Instance->FLTR &= ~(I2C_FLTR_ANOFF);
 8003f4c:	6a5c      	ldr	r4, [r3, #36]	; 0x24
 8003f4e:	f024 0410 	bic.w	r4, r4, #16
 8003f52:	625c      	str	r4, [r3, #36]	; 0x24

    /* Disable the analog filter */
    hi2c->Instance->FLTR |= AnalogFilter;
 8003f54:	6a5c      	ldr	r4, [r3, #36]	; 0x24
 8003f56:	4321      	orrs	r1, r4
 8003f58:	6259      	str	r1, [r3, #36]	; 0x24

    __HAL_I2C_ENABLE(hi2c);
 8003f5a:	6819      	ldr	r1, [r3, #0]
 8003f5c:	f041 0101 	orr.w	r1, r1, #1
 8003f60:	6019      	str	r1, [r3, #0]

    hi2c->State = HAL_I2C_STATE_READY;
 8003f62:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d

    return HAL_OK;
 8003f66:	2000      	movs	r0, #0
  }
  else
  {
    return HAL_BUSY;
  }
}
 8003f68:	bd10      	pop	{r4, pc}
    return HAL_BUSY;
 8003f6a:	2002      	movs	r0, #2
 8003f6c:	e7fc      	b.n	8003f68 <HAL_I2CEx_ConfigAnalogFilter+0x38>

08003f6e <HAL_I2CEx_ConfigDigitalFilter>:
  *                the configuration information for the specified I2Cx peripheral.
  * @param  DigitalFilter Coefficient of digital noise filter between 0x00 and 0x0F.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2CEx_ConfigDigitalFilter(I2C_HandleTypeDef *hi2c, uint32_t DigitalFilter)
{
 8003f6e:	b530      	push	{r4, r5, lr}

  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_DIGITAL_FILTER(DigitalFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 8003f70:	f890 403d 	ldrb.w	r4, [r0, #61]	; 0x3d
 8003f74:	b2e4      	uxtb	r4, r4
 8003f76:	2c20      	cmp	r4, #32
 8003f78:	d116      	bne.n	8003fa8 <HAL_I2CEx_ConfigDigitalFilter+0x3a>
  {
    hi2c->State = HAL_I2C_STATE_BUSY;

    /* Disable the selected I2C peripheral */
    __HAL_I2C_DISABLE(hi2c);
 8003f7a:	6802      	ldr	r2, [r0, #0]
    hi2c->State = HAL_I2C_STATE_BUSY;
 8003f7c:	2324      	movs	r3, #36	; 0x24
 8003f7e:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d
    __HAL_I2C_DISABLE(hi2c);
 8003f82:	6815      	ldr	r5, [r2, #0]
 8003f84:	f025 0501 	bic.w	r5, r5, #1
 8003f88:	6015      	str	r5, [r2, #0]

    /* Get the old register value */
    tmpreg = hi2c->Instance->FLTR;
 8003f8a:	6a55      	ldr	r5, [r2, #36]	; 0x24

    /* Reset I2Cx DNF bit [3:0] */
    tmpreg &= ~(I2C_FLTR_DNF);
 8003f8c:	f64f 73f0 	movw	r3, #65520	; 0xfff0
 8003f90:	402b      	ands	r3, r5

    /* Set I2Cx DNF coefficient */
    tmpreg |= DigitalFilter;
 8003f92:	430b      	orrs	r3, r1

    /* Store the new register value */
    hi2c->Instance->FLTR = tmpreg;
 8003f94:	b29b      	uxth	r3, r3
 8003f96:	6253      	str	r3, [r2, #36]	; 0x24

    __HAL_I2C_ENABLE(hi2c);
 8003f98:	6813      	ldr	r3, [r2, #0]
 8003f9a:	f043 0301 	orr.w	r3, r3, #1
 8003f9e:	6013      	str	r3, [r2, #0]

    hi2c->State = HAL_I2C_STATE_READY;
 8003fa0:	f880 403d 	strb.w	r4, [r0, #61]	; 0x3d

    return HAL_OK;
 8003fa4:	2000      	movs	r0, #0
  }
  else
  {
    return HAL_BUSY;
  }
}
 8003fa6:	bd30      	pop	{r4, r5, pc}
    return HAL_BUSY;
 8003fa8:	2002      	movs	r0, #2
 8003faa:	e7fc      	b.n	8003fa6 <HAL_I2CEx_ConfigDigitalFilter+0x38>

08003fac <LTDC_SetConfig>:
  * @param  LayerIdx  LTDC Layer index.
  *                   This parameter can be one of the following values: LTDC_LAYER_1 (0) or LTDC_LAYER_2 (1)
  * @retval None
  */
static void LTDC_SetConfig(LTDC_HandleTypeDef *hltdc, LTDC_LayerCfgTypeDef *pLayerCfg, uint32_t LayerIdx)
{
 8003fac:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  uint32_t tmp1;
  uint32_t tmp2;

  /* Configure the horizontal start and stop position */
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 8003fb0:	01d2      	lsls	r2, r2, #7
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8003fb2:	6804      	ldr	r4, [r0, #0]
 8003fb4:	684f      	ldr	r7, [r1, #4]
 8003fb6:	68e5      	ldr	r5, [r4, #12]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 8003fb8:	f8d1 c000 	ldr.w	ip, [r1]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);

  /* Configure the default color values */
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
  tmp2 = (pLayerCfg->Alpha0 << 24U);
 8003fbc:	f8d1 9018 	ldr.w	r9, [r1, #24]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 8003fc0:	3284      	adds	r2, #132	; 0x84
 8003fc2:	18a3      	adds	r3, r4, r2
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 8003fc4:	f10c 0601 	add.w	r6, ip, #1
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 8003fc8:	6858      	ldr	r0, [r3, #4]
 8003fca:	f400 4070 	and.w	r0, r0, #61440	; 0xf000
 8003fce:	6058      	str	r0, [r3, #4]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 8003fd0:	68e0      	ldr	r0, [r4, #12]
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8003fd2:	f3c5 450b 	ubfx	r5, r5, #16, #12
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 8003fd6:	f3c0 400b 	ubfx	r0, r0, #16, #12
 8003fda:	4430      	add	r0, r6
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8003fdc:	443d      	add	r5, r7
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 8003fde:	ea40 4005 	orr.w	r0, r0, r5, lsl #16
 8003fe2:	6058      	str	r0, [r3, #4]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 8003fe4:	68e0      	ldr	r0, [r4, #12]
 8003fe6:	68cd      	ldr	r5, [r1, #12]
 8003fe8:	f3c0 000a 	ubfx	r0, r0, #0, #11
 8003fec:	4405      	add	r5, r0
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR &= ~(LTDC_LxWVPCR_WVSTPOS | LTDC_LxWVPCR_WVSPPOS);
 8003fee:	6898      	ldr	r0, [r3, #8]
 8003ff0:	f400 4070 	and.w	r0, r0, #61440	; 0xf000
 8003ff4:	6098      	str	r0, [r3, #8]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
 8003ff6:	68e6      	ldr	r6, [r4, #12]
 8003ff8:	6888      	ldr	r0, [r1, #8]
 8003ffa:	f3c6 060a 	ubfx	r6, r6, #0, #11
 8003ffe:	3001      	adds	r0, #1
 8004000:	4430      	add	r0, r6
 8004002:	ea40 4005 	orr.w	r0, r0, r5, lsl #16
 8004006:	6098      	str	r0, [r3, #8]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 8004008:	6918      	ldr	r0, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 800400a:	690e      	ldr	r6, [r1, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 800400c:	f020 0007 	bic.w	r0, r0, #7
 8004010:	6118      	str	r0, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED | LTDC_LxDCCR_DCALPHA);
 8004012:	f04f 0e00 	mov.w	lr, #0
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 8004016:	611e      	str	r6, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED | LTDC_LxDCCR_DCALPHA);
 8004018:	699d      	ldr	r5, [r3, #24]
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
 800401a:	f891 0032 	ldrb.w	r0, [r1, #50]	; 0x32
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
 800401e:	f891 8031 	ldrb.w	r8, [r1, #49]	; 0x31
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED | LTDC_LxDCCR_DCALPHA);
 8004022:	f8c3 e018 	str.w	lr, [r3, #24]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR = (pLayerCfg->Backcolor.Blue | tmp | tmp1 | tmp2);
 8004026:	f891 5030 	ldrb.w	r5, [r1, #48]	; 0x30
 800402a:	ea45 6509 	orr.w	r5, r5, r9, lsl #24
 800402e:	ea45 2508 	orr.w	r5, r5, r8, lsl #8
 8004032:	ea45 4500 	orr.w	r5, r5, r0, lsl #16
 8004036:	619d      	str	r5, [r3, #24]

  /* Specifies the constant alpha value */
  LTDC_LAYER(hltdc, LayerIdx)->CACR &= ~(LTDC_LxCACR_CONSTA);
 8004038:	6958      	ldr	r0, [r3, #20]
 800403a:	f020 00ff 	bic.w	r0, r0, #255	; 0xff
 800403e:	6158      	str	r0, [r3, #20]
  LTDC_LAYER(hltdc, LayerIdx)->CACR = (pLayerCfg->Alpha);
 8004040:	6948      	ldr	r0, [r1, #20]
 8004042:	6158      	str	r0, [r3, #20]

  /* Specifies the blending factors */
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
 8004044:	69d8      	ldr	r0, [r3, #28]
 8004046:	f420 60e0 	bic.w	r0, r0, #1792	; 0x700
 800404a:	f020 0007 	bic.w	r0, r0, #7
 800404e:	61d8      	str	r0, [r3, #28]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR = (pLayerCfg->BlendingFactor1 | pLayerCfg->BlendingFactor2);
 8004050:	e9d1 5007 	ldrd	r5, r0, [r1, #28]
 8004054:	4305      	orrs	r5, r0
 8004056:	61dd      	str	r5, [r3, #28]

  /* Configure the color frame buffer start address */
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 8004058:	6a98      	ldr	r0, [r3, #40]	; 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 800405a:	6a48      	ldr	r0, [r1, #36]	; 0x24
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 800405c:	f8c3 e028 	str.w	lr, [r3, #40]	; 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 8004060:	6298      	str	r0, [r3, #40]	; 0x28

  if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
 8004062:	b31e      	cbz	r6, 80040ac <LTDC_SetConfig+0x100>
  {
    tmp = 4U;
  }
  else if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_RGB888)
 8004064:	2e01      	cmp	r6, #1
 8004066:	d023      	beq.n	80040b0 <LTDC_SetConfig+0x104>
  {
    tmp = 3U;
  }
  else if ((pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB4444) || \
 8004068:	1eb0      	subs	r0, r6, #2
 800406a:	2802      	cmp	r0, #2
 800406c:	d922      	bls.n	80040b4 <LTDC_SetConfig+0x108>
           (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_RGB565)   || \
           (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB1555) || \
 800406e:	2e07      	cmp	r6, #7
  {
    tmp = 2U;
  }
  else
  {
    tmp = 1U;
 8004070:	bf0c      	ite	eq
 8004072:	2002      	moveq	r0, #2
 8004074:	2001      	movne	r0, #1
  }

  /* Configure the color frame buffer pitch in byte */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
 8004076:	6add      	ldr	r5, [r3, #44]	; 0x2c
 8004078:	f005 25e0 	and.w	r5, r5, #3758153728	; 0xe000e000
 800407c:	62dd      	str	r5, [r3, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 800407e:	6a8d      	ldr	r5, [r1, #40]	; 0x28
  /* Configure the frame buffer line number */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 8004080:	6ac9      	ldr	r1, [r1, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 8004082:	eba7 070c 	sub.w	r7, r7, ip
 8004086:	4345      	muls	r5, r0
 8004088:	4378      	muls	r0, r7
 800408a:	3003      	adds	r0, #3
 800408c:	ea40 4005 	orr.w	r0, r0, r5, lsl #16
 8004090:	62d8      	str	r0, [r3, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
 8004092:	6b18      	ldr	r0, [r3, #48]	; 0x30
 8004094:	f420 60ff 	bic.w	r0, r0, #2040	; 0x7f8
 8004098:	f020 0007 	bic.w	r0, r0, #7
 800409c:	6318      	str	r0, [r3, #48]	; 0x30
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 800409e:	6319      	str	r1, [r3, #48]	; 0x30

  /* Enable LTDC_Layer by setting LEN bit */
  LTDC_LAYER(hltdc, LayerIdx)->CR |= (uint32_t)LTDC_LxCR_LEN;
 80040a0:	58a3      	ldr	r3, [r4, r2]
 80040a2:	f043 0301 	orr.w	r3, r3, #1
 80040a6:	50a3      	str	r3, [r4, r2]
}
 80040a8:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    tmp = 4U;
 80040ac:	2004      	movs	r0, #4
 80040ae:	e7e2      	b.n	8004076 <LTDC_SetConfig+0xca>
    tmp = 3U;
 80040b0:	2003      	movs	r0, #3
 80040b2:	e7e0      	b.n	8004076 <LTDC_SetConfig+0xca>
    tmp = 2U;
 80040b4:	2002      	movs	r0, #2
 80040b6:	e7de      	b.n	8004076 <LTDC_SetConfig+0xca>

080040b8 <HAL_LTDC_Init>:
{
 80040b8:	b538      	push	{r3, r4, r5, lr}
  if (hltdc == NULL)
 80040ba:	4604      	mov	r4, r0
 80040bc:	2800      	cmp	r0, #0
 80040be:	d063      	beq.n	8004188 <HAL_LTDC_Init+0xd0>
  if (hltdc->State == HAL_LTDC_STATE_RESET)
 80040c0:	f890 30a1 	ldrb.w	r3, [r0, #161]	; 0xa1
 80040c4:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 80040c8:	b91b      	cbnz	r3, 80040d2 <HAL_LTDC_Init+0x1a>
    hltdc->Lock = HAL_UNLOCKED;
 80040ca:	f880 20a0 	strb.w	r2, [r0, #160]	; 0xa0
    HAL_LTDC_MspInit(hltdc);
 80040ce:	f7fd fc47 	bl	8001960 <HAL_LTDC_MspInit>
  hltdc->State = HAL_LTDC_STATE_BUSY;
 80040d2:	2302      	movs	r3, #2
 80040d4:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
 80040d8:	6823      	ldr	r3, [r4, #0]
 80040da:	699a      	ldr	r2, [r3, #24]
 80040dc:	f022 4270 	bic.w	r2, r2, #4026531840	; 0xf0000000
 80040e0:	619a      	str	r2, [r3, #24]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 80040e2:	e9d4 2001 	ldrd	r2, r0, [r4, #4]
 80040e6:	4302      	orrs	r2, r0
 80040e8:	68e0      	ldr	r0, [r4, #12]
 80040ea:	6999      	ldr	r1, [r3, #24]
 80040ec:	4302      	orrs	r2, r0
                                     hltdc->Init.DEPolarity | hltdc->Init.PCPolarity);
 80040ee:	6920      	ldr	r0, [r4, #16]
 80040f0:	4302      	orrs	r2, r0
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 80040f2:	430a      	orrs	r2, r1
 80040f4:	619a      	str	r2, [r3, #24]
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 80040f6:	689a      	ldr	r2, [r3, #8]
 80040f8:	4924      	ldr	r1, [pc, #144]	; (800418c <HAL_LTDC_Init+0xd4>)
  tmp = (hltdc->Init.HorizontalSync << 16U);
 80040fa:	6960      	ldr	r0, [r4, #20]
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 80040fc:	400a      	ands	r2, r1
 80040fe:	609a      	str	r2, [r3, #8]
  hltdc->Instance->SSCR |= (tmp | hltdc->Init.VerticalSync);
 8004100:	689a      	ldr	r2, [r3, #8]
 8004102:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 8004106:	69a0      	ldr	r0, [r4, #24]
 8004108:	4302      	orrs	r2, r0
 800410a:	609a      	str	r2, [r3, #8]
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 800410c:	68da      	ldr	r2, [r3, #12]
  tmp = (hltdc->Init.AccumulatedHBP << 16U);
 800410e:	69e0      	ldr	r0, [r4, #28]
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 8004110:	400a      	ands	r2, r1
 8004112:	60da      	str	r2, [r3, #12]
  hltdc->Instance->BPCR |= (tmp | hltdc->Init.AccumulatedVBP);
 8004114:	68da      	ldr	r2, [r3, #12]
 8004116:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800411a:	6a20      	ldr	r0, [r4, #32]
 800411c:	4302      	orrs	r2, r0
 800411e:	60da      	str	r2, [r3, #12]
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 8004120:	691a      	ldr	r2, [r3, #16]
  tmp = (hltdc->Init.AccumulatedActiveW << 16U);
 8004122:	6a60      	ldr	r0, [r4, #36]	; 0x24
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 8004124:	400a      	ands	r2, r1
 8004126:	611a      	str	r2, [r3, #16]
  hltdc->Instance->AWCR |= (tmp | hltdc->Init.AccumulatedActiveH);
 8004128:	691a      	ldr	r2, [r3, #16]
 800412a:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800412e:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 8004130:	4302      	orrs	r2, r0
 8004132:	611a      	str	r2, [r3, #16]
  hltdc->Instance->TWCR &= ~(LTDC_TWCR_TOTALH | LTDC_TWCR_TOTALW);
 8004134:	695a      	ldr	r2, [r3, #20]
 8004136:	4011      	ands	r1, r2
 8004138:	6159      	str	r1, [r3, #20]
  hltdc->Instance->TWCR |= (tmp | hltdc->Init.TotalHeigh);
 800413a:	695a      	ldr	r2, [r3, #20]
  tmp = (hltdc->Init.TotalWidth << 16U);
 800413c:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
  hltdc->Instance->TWCR |= (tmp | hltdc->Init.TotalHeigh);
 800413e:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 8004142:	6b21      	ldr	r1, [r4, #48]	; 0x30
 8004144:	430a      	orrs	r2, r1
 8004146:	615a      	str	r2, [r3, #20]
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 8004148:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
  tmp1 = ((uint32_t)(hltdc->Init.Backcolor.Red) << 16U);
 800414a:	f894 0036 	ldrb.w	r0, [r4, #54]	; 0x36
  tmp = ((uint32_t)(hltdc->Init.Backcolor.Green) << 8U);
 800414e:	f894 5035 	ldrb.w	r5, [r4, #53]	; 0x35
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 8004152:	f001 417f 	and.w	r1, r1, #4278190080	; 0xff000000
 8004156:	62d9      	str	r1, [r3, #44]	; 0x2c
  hltdc->Instance->BCCR |= (tmp1 | tmp | hltdc->Init.Backcolor.Blue);
 8004158:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 800415a:	f894 2034 	ldrb.w	r2, [r4, #52]	; 0x34
 800415e:	430a      	orrs	r2, r1
 8004160:	ea42 2205 	orr.w	r2, r2, r5, lsl #8
 8004164:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 8004168:	62da      	str	r2, [r3, #44]	; 0x2c
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_TE | LTDC_IT_FU);
 800416a:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800416c:	f042 0206 	orr.w	r2, r2, #6
 8004170:	635a      	str	r2, [r3, #52]	; 0x34
  __HAL_LTDC_ENABLE(hltdc);
 8004172:	699a      	ldr	r2, [r3, #24]
 8004174:	f042 0201 	orr.w	r2, r2, #1
 8004178:	619a      	str	r2, [r3, #24]
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 800417a:	2000      	movs	r0, #0
  hltdc->State = HAL_LTDC_STATE_READY;
 800417c:	2301      	movs	r3, #1
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 800417e:	f8c4 00a4 	str.w	r0, [r4, #164]	; 0xa4
  hltdc->State = HAL_LTDC_STATE_READY;
 8004182:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
}
 8004186:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 8004188:	2001      	movs	r0, #1
 800418a:	e7fc      	b.n	8004186 <HAL_LTDC_Init+0xce>
 800418c:	f000f800 	.word	0xf000f800

08004190 <HAL_LTDC_ErrorCallback>:
 8004190:	4770      	bx	lr

08004192 <HAL_LTDC_ReloadEventCallback>:
 8004192:	4770      	bx	lr

08004194 <HAL_LTDC_IRQHandler>:
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 8004194:	6803      	ldr	r3, [r0, #0]
{
 8004196:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 8004198:	6b9e      	ldr	r6, [r3, #56]	; 0x38
  uint32_t itsources = READ_REG(hltdc->Instance->IER);
 800419a:	6b5d      	ldr	r5, [r3, #52]	; 0x34
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 800419c:	0772      	lsls	r2, r6, #29
{
 800419e:	4604      	mov	r4, r0
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 80041a0:	d514      	bpl.n	80041cc <HAL_LTDC_IRQHandler+0x38>
 80041a2:	0769      	lsls	r1, r5, #29
 80041a4:	d512      	bpl.n	80041cc <HAL_LTDC_IRQHandler+0x38>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_TE);
 80041a6:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 80041a8:	f022 0204 	bic.w	r2, r2, #4
 80041ac:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_TE);
 80041ae:	2204      	movs	r2, #4
 80041b0:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_TE;
 80041b2:	f8d0 30a4 	ldr.w	r3, [r0, #164]	; 0xa4
 80041b6:	f043 0301 	orr.w	r3, r3, #1
 80041ba:	f8c0 30a4 	str.w	r3, [r0, #164]	; 0xa4
    __HAL_UNLOCK(hltdc);
 80041be:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_ERROR;
 80041c0:	f880 20a1 	strb.w	r2, [r0, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 80041c4:	f880 30a0 	strb.w	r3, [r0, #160]	; 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 80041c8:	f7ff ffe2 	bl	8004190 <HAL_LTDC_ErrorCallback>
  if (((isrflags & LTDC_ISR_FUIF) != 0U) && ((itsources & LTDC_IER_FUIE) != 0U))
 80041cc:	07b2      	lsls	r2, r6, #30
 80041ce:	d516      	bpl.n	80041fe <HAL_LTDC_IRQHandler+0x6a>
 80041d0:	07ab      	lsls	r3, r5, #30
 80041d2:	d514      	bpl.n	80041fe <HAL_LTDC_IRQHandler+0x6a>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_FU);
 80041d4:	6823      	ldr	r3, [r4, #0]
 80041d6:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 80041d8:	f022 0202 	bic.w	r2, r2, #2
 80041dc:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_FU);
 80041de:	2202      	movs	r2, #2
 80041e0:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_FU;
 80041e2:	f8d4 30a4 	ldr.w	r3, [r4, #164]	; 0xa4
 80041e6:	4313      	orrs	r3, r2
 80041e8:	f8c4 30a4 	str.w	r3, [r4, #164]	; 0xa4
    hltdc->State = HAL_LTDC_STATE_ERROR;
 80041ec:	2304      	movs	r3, #4
 80041ee:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 80041f2:	2300      	movs	r3, #0
 80041f4:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 80041f8:	4620      	mov	r0, r4
 80041fa:	f7ff ffc9 	bl	8004190 <HAL_LTDC_ErrorCallback>
  if (((isrflags & LTDC_ISR_LIF) != 0U) && ((itsources & LTDC_IER_LIE) != 0U))
 80041fe:	07f0      	lsls	r0, r6, #31
 8004200:	d510      	bpl.n	8004224 <HAL_LTDC_IRQHandler+0x90>
 8004202:	07e9      	lsls	r1, r5, #31
 8004204:	d50e      	bpl.n	8004224 <HAL_LTDC_IRQHandler+0x90>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 8004206:	6823      	ldr	r3, [r4, #0]
 8004208:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800420a:	f022 0201 	bic.w	r2, r2, #1
 800420e:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_LI);
 8004210:	2201      	movs	r2, #1
 8004212:	63da      	str	r2, [r3, #60]	; 0x3c
    __HAL_UNLOCK(hltdc);
 8004214:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_READY;
 8004216:	f884 20a1 	strb.w	r2, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 800421a:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_LineEventCallback(hltdc);
 800421e:	4620      	mov	r0, r4
 8004220:	f7fc ffc8 	bl	80011b4 <HAL_LTDC_LineEventCallback>
  if (((isrflags & LTDC_ISR_RRIF) != 0U) && ((itsources & LTDC_IER_RRIE) != 0U))
 8004224:	0732      	lsls	r2, r6, #28
 8004226:	d511      	bpl.n	800424c <HAL_LTDC_IRQHandler+0xb8>
 8004228:	072b      	lsls	r3, r5, #28
 800422a:	d50f      	bpl.n	800424c <HAL_LTDC_IRQHandler+0xb8>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
 800422c:	6823      	ldr	r3, [r4, #0]
 800422e:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8004230:	f022 0208 	bic.w	r2, r2, #8
 8004234:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_RR);
 8004236:	2208      	movs	r2, #8
 8004238:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->State = HAL_LTDC_STATE_READY;
 800423a:	2301      	movs	r3, #1
 800423c:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 8004240:	2300      	movs	r3, #0
 8004242:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_ReloadEventCallback(hltdc);
 8004246:	4620      	mov	r0, r4
 8004248:	f7ff ffa3 	bl	8004192 <HAL_LTDC_ReloadEventCallback>
}
 800424c:	bd70      	pop	{r4, r5, r6, pc}

0800424e <HAL_LTDC_ConfigLayer>:
{
 800424e:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  __HAL_LOCK(hltdc);
 8004250:	f890 30a0 	ldrb.w	r3, [r0, #160]	; 0xa0
 8004254:	2b01      	cmp	r3, #1
{
 8004256:	4606      	mov	r6, r0
 8004258:	468c      	mov	ip, r1
 800425a:	4696      	mov	lr, r2
 800425c:	f04f 0002 	mov.w	r0, #2
  __HAL_LOCK(hltdc);
 8004260:	d01d      	beq.n	800429e <HAL_LTDC_ConfigLayer+0x50>
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 8004262:	2434      	movs	r4, #52	; 0x34
 8004264:	460d      	mov	r5, r1
  hltdc->State = HAL_LTDC_STATE_BUSY;
 8004266:	f886 00a1 	strb.w	r0, [r6, #161]	; 0xa1
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 800426a:	fb04 6402 	mla	r4, r4, r2, r6
 800426e:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
  __HAL_LOCK(hltdc);
 8004270:	2701      	movs	r7, #1
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 8004272:	3438      	adds	r4, #56	; 0x38
  __HAL_LOCK(hltdc);
 8004274:	f886 70a0 	strb.w	r7, [r6, #160]	; 0xa0
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 8004278:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800427a:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800427c:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800427e:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8004280:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8004282:	682b      	ldr	r3, [r5, #0]
 8004284:	6023      	str	r3, [r4, #0]
  LTDC_SetConfig(hltdc, pLayerCfg, LayerIdx);
 8004286:	4630      	mov	r0, r6
 8004288:	4672      	mov	r2, lr
 800428a:	4661      	mov	r1, ip
 800428c:	f7ff fe8e 	bl	8003fac <LTDC_SetConfig>
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 8004290:	6833      	ldr	r3, [r6, #0]
  __HAL_UNLOCK(hltdc);
 8004292:	2000      	movs	r0, #0
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 8004294:	625f      	str	r7, [r3, #36]	; 0x24
  hltdc->State  = HAL_LTDC_STATE_READY;
 8004296:	f886 70a1 	strb.w	r7, [r6, #161]	; 0xa1
  __HAL_UNLOCK(hltdc);
 800429a:	f886 00a0 	strb.w	r0, [r6, #160]	; 0xa0
}
 800429e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

080042a0 <HAL_LTDC_ProgramLineEvent>:
  __HAL_LOCK(hltdc);
 80042a0:	f890 30a0 	ldrb.w	r3, [r0, #160]	; 0xa0
 80042a4:	2b01      	cmp	r3, #1
 80042a6:	f04f 0302 	mov.w	r3, #2
 80042aa:	d012      	beq.n	80042d2 <HAL_LTDC_ProgramLineEvent+0x32>
  hltdc->State = HAL_LTDC_STATE_BUSY;
 80042ac:	f880 30a1 	strb.w	r3, [r0, #161]	; 0xa1
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 80042b0:	6803      	ldr	r3, [r0, #0]
 80042b2:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 80042b4:	f022 0201 	bic.w	r2, r2, #1
 80042b8:	635a      	str	r2, [r3, #52]	; 0x34
  LTDC->LIPCR = (uint32_t)Line;
 80042ba:	4a07      	ldr	r2, [pc, #28]	; (80042d8 <HAL_LTDC_ProgramLineEvent+0x38>)
 80042bc:	6411      	str	r1, [r2, #64]	; 0x40
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_LI);
 80042be:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 80042c0:	f042 0201 	orr.w	r2, r2, #1
 80042c4:	635a      	str	r2, [r3, #52]	; 0x34
  hltdc->State = HAL_LTDC_STATE_READY;
 80042c6:	2301      	movs	r3, #1
 80042c8:	f880 30a1 	strb.w	r3, [r0, #161]	; 0xa1
  __HAL_UNLOCK(hltdc);
 80042cc:	2300      	movs	r3, #0
 80042ce:	f880 30a0 	strb.w	r3, [r0, #160]	; 0xa0
  __HAL_LOCK(hltdc);
 80042d2:	4618      	mov	r0, r3
}
 80042d4:	4770      	bx	lr
 80042d6:	bf00      	nop
 80042d8:	40016800 	.word	0x40016800

080042dc <HAL_RCC_OscConfig>:
  *         supported by this API. User should request a transition to HSE Off
  *         first and then HSE On or HSE Bypass.
  * @retval HAL status
  */
__weak HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
{
 80042dc:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
  uint32_t tickstart, pll_config;

  /* Check Null pointer */
  if(RCC_OscInitStruct == NULL)
 80042e0:	4604      	mov	r4, r0
 80042e2:	b908      	cbnz	r0, 80042e8 <HAL_RCC_OscConfig+0xc>
    else
    {
      /* Check if there is a request to disable the PLL used as System clock source */
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
      {
        return HAL_ERROR;
 80042e4:	2001      	movs	r0, #1
 80042e6:	e03f      	b.n	8004368 <HAL_RCC_OscConfig+0x8c>
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 80042e8:	6803      	ldr	r3, [r0, #0]
 80042ea:	07dd      	lsls	r5, r3, #31
 80042ec:	d410      	bmi.n	8004310 <HAL_RCC_OscConfig+0x34>
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 80042ee:	6823      	ldr	r3, [r4, #0]
 80042f0:	0798      	lsls	r0, r3, #30
 80042f2:	d45a      	bmi.n	80043aa <HAL_RCC_OscConfig+0xce>
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 80042f4:	6823      	ldr	r3, [r4, #0]
 80042f6:	071a      	lsls	r2, r3, #28
 80042f8:	f100 809c 	bmi.w	8004434 <HAL_RCC_OscConfig+0x158>
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 80042fc:	6823      	ldr	r3, [r4, #0]
 80042fe:	075b      	lsls	r3, r3, #29
 8004300:	f100 80ba 	bmi.w	8004478 <HAL_RCC_OscConfig+0x19c>
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 8004304:	69a0      	ldr	r0, [r4, #24]
 8004306:	2800      	cmp	r0, #0
 8004308:	f040 811b 	bne.w	8004542 <HAL_RCC_OscConfig+0x266>
          return HAL_ERROR;
        }
      }
    }
  }
  return HAL_OK;
 800430c:	2000      	movs	r0, #0
 800430e:	e02b      	b.n	8004368 <HAL_RCC_OscConfig+0x8c>
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) ||\
 8004310:	4ba7      	ldr	r3, [pc, #668]	; (80045b0 <HAL_RCC_OscConfig+0x2d4>)
 8004312:	689a      	ldr	r2, [r3, #8]
 8004314:	f002 020c 	and.w	r2, r2, #12
 8004318:	2a04      	cmp	r2, #4
 800431a:	d007      	beq.n	800432c <HAL_RCC_OscConfig+0x50>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 800431c:	689a      	ldr	r2, [r3, #8]
 800431e:	f002 020c 	and.w	r2, r2, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) ||\
 8004322:	2a08      	cmp	r2, #8
 8004324:	d10a      	bne.n	800433c <HAL_RCC_OscConfig+0x60>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 8004326:	685b      	ldr	r3, [r3, #4]
 8004328:	0259      	lsls	r1, r3, #9
 800432a:	d507      	bpl.n	800433c <HAL_RCC_OscConfig+0x60>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 800432c:	4ba0      	ldr	r3, [pc, #640]	; (80045b0 <HAL_RCC_OscConfig+0x2d4>)
 800432e:	681b      	ldr	r3, [r3, #0]
 8004330:	039a      	lsls	r2, r3, #14
 8004332:	d5dc      	bpl.n	80042ee <HAL_RCC_OscConfig+0x12>
 8004334:	6863      	ldr	r3, [r4, #4]
 8004336:	2b00      	cmp	r3, #0
 8004338:	d1d9      	bne.n	80042ee <HAL_RCC_OscConfig+0x12>
 800433a:	e7d3      	b.n	80042e4 <HAL_RCC_OscConfig+0x8>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 800433c:	6863      	ldr	r3, [r4, #4]
 800433e:	4d9c      	ldr	r5, [pc, #624]	; (80045b0 <HAL_RCC_OscConfig+0x2d4>)
 8004340:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8004344:	d113      	bne.n	800436e <HAL_RCC_OscConfig+0x92>
 8004346:	682b      	ldr	r3, [r5, #0]
 8004348:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 800434c:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
 800434e:	f7fe fe3b 	bl	8002fc8 <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8004352:	4d97      	ldr	r5, [pc, #604]	; (80045b0 <HAL_RCC_OscConfig+0x2d4>)
        tickstart = HAL_GetTick();
 8004354:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8004356:	682b      	ldr	r3, [r5, #0]
 8004358:	039b      	lsls	r3, r3, #14
 800435a:	d4c8      	bmi.n	80042ee <HAL_RCC_OscConfig+0x12>
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 800435c:	f7fe fe34 	bl	8002fc8 <HAL_GetTick>
 8004360:	1b80      	subs	r0, r0, r6
 8004362:	2864      	cmp	r0, #100	; 0x64
 8004364:	d9f7      	bls.n	8004356 <HAL_RCC_OscConfig+0x7a>
            return HAL_TIMEOUT;
 8004366:	2003      	movs	r0, #3
}
 8004368:	b002      	add	sp, #8
 800436a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 800436e:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 8004372:	d104      	bne.n	800437e <HAL_RCC_OscConfig+0xa2>
 8004374:	682b      	ldr	r3, [r5, #0]
 8004376:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 800437a:	602b      	str	r3, [r5, #0]
 800437c:	e7e3      	b.n	8004346 <HAL_RCC_OscConfig+0x6a>
 800437e:	682a      	ldr	r2, [r5, #0]
 8004380:	f422 3280 	bic.w	r2, r2, #65536	; 0x10000
 8004384:	602a      	str	r2, [r5, #0]
 8004386:	682a      	ldr	r2, [r5, #0]
 8004388:	f422 2280 	bic.w	r2, r2, #262144	; 0x40000
 800438c:	602a      	str	r2, [r5, #0]
      if((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 800438e:	2b00      	cmp	r3, #0
 8004390:	d1dd      	bne.n	800434e <HAL_RCC_OscConfig+0x72>
        tickstart = HAL_GetTick();
 8004392:	f7fe fe19 	bl	8002fc8 <HAL_GetTick>
 8004396:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 8004398:	682b      	ldr	r3, [r5, #0]
 800439a:	039f      	lsls	r7, r3, #14
 800439c:	d5a7      	bpl.n	80042ee <HAL_RCC_OscConfig+0x12>
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 800439e:	f7fe fe13 	bl	8002fc8 <HAL_GetTick>
 80043a2:	1b80      	subs	r0, r0, r6
 80043a4:	2864      	cmp	r0, #100	; 0x64
 80043a6:	d9f7      	bls.n	8004398 <HAL_RCC_OscConfig+0xbc>
 80043a8:	e7dd      	b.n	8004366 <HAL_RCC_OscConfig+0x8a>
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) ||\
 80043aa:	4b81      	ldr	r3, [pc, #516]	; (80045b0 <HAL_RCC_OscConfig+0x2d4>)
 80043ac:	689a      	ldr	r2, [r3, #8]
 80043ae:	f012 0f0c 	tst.w	r2, #12
 80043b2:	d007      	beq.n	80043c4 <HAL_RCC_OscConfig+0xe8>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 80043b4:	689a      	ldr	r2, [r3, #8]
 80043b6:	f002 020c 	and.w	r2, r2, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) ||\
 80043ba:	2a08      	cmp	r2, #8
 80043bc:	d111      	bne.n	80043e2 <HAL_RCC_OscConfig+0x106>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 80043be:	685b      	ldr	r3, [r3, #4]
 80043c0:	025e      	lsls	r6, r3, #9
 80043c2:	d40e      	bmi.n	80043e2 <HAL_RCC_OscConfig+0x106>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 80043c4:	4b7a      	ldr	r3, [pc, #488]	; (80045b0 <HAL_RCC_OscConfig+0x2d4>)
 80043c6:	681a      	ldr	r2, [r3, #0]
 80043c8:	0795      	lsls	r5, r2, #30
 80043ca:	d502      	bpl.n	80043d2 <HAL_RCC_OscConfig+0xf6>
 80043cc:	68e2      	ldr	r2, [r4, #12]
 80043ce:	2a01      	cmp	r2, #1
 80043d0:	d188      	bne.n	80042e4 <HAL_RCC_OscConfig+0x8>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 80043d2:	681a      	ldr	r2, [r3, #0]
 80043d4:	6921      	ldr	r1, [r4, #16]
 80043d6:	f022 02f8 	bic.w	r2, r2, #248	; 0xf8
 80043da:	ea42 02c1 	orr.w	r2, r2, r1, lsl #3
 80043de:	601a      	str	r2, [r3, #0]
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 80043e0:	e788      	b.n	80042f4 <HAL_RCC_OscConfig+0x18>
      if((RCC_OscInitStruct->HSIState)!= RCC_HSI_OFF)
 80043e2:	68e2      	ldr	r2, [r4, #12]
 80043e4:	4b73      	ldr	r3, [pc, #460]	; (80045b4 <HAL_RCC_OscConfig+0x2d8>)
 80043e6:	b1b2      	cbz	r2, 8004416 <HAL_RCC_OscConfig+0x13a>
        __HAL_RCC_HSI_ENABLE();
 80043e8:	2201      	movs	r2, #1
 80043ea:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 80043ec:	f7fe fdec 	bl	8002fc8 <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 80043f0:	4d6f      	ldr	r5, [pc, #444]	; (80045b0 <HAL_RCC_OscConfig+0x2d4>)
        tickstart = HAL_GetTick();
 80043f2:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 80043f4:	682b      	ldr	r3, [r5, #0]
 80043f6:	0798      	lsls	r0, r3, #30
 80043f8:	d507      	bpl.n	800440a <HAL_RCC_OscConfig+0x12e>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 80043fa:	682b      	ldr	r3, [r5, #0]
 80043fc:	6922      	ldr	r2, [r4, #16]
 80043fe:	f023 03f8 	bic.w	r3, r3, #248	; 0xf8
 8004402:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 8004406:	602b      	str	r3, [r5, #0]
 8004408:	e774      	b.n	80042f4 <HAL_RCC_OscConfig+0x18>
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 800440a:	f7fe fddd 	bl	8002fc8 <HAL_GetTick>
 800440e:	1b80      	subs	r0, r0, r6
 8004410:	2802      	cmp	r0, #2
 8004412:	d9ef      	bls.n	80043f4 <HAL_RCC_OscConfig+0x118>
 8004414:	e7a7      	b.n	8004366 <HAL_RCC_OscConfig+0x8a>
        __HAL_RCC_HSI_DISABLE();
 8004416:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 8004418:	f7fe fdd6 	bl	8002fc8 <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 800441c:	4d64      	ldr	r5, [pc, #400]	; (80045b0 <HAL_RCC_OscConfig+0x2d4>)
        tickstart = HAL_GetTick();
 800441e:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 8004420:	682b      	ldr	r3, [r5, #0]
 8004422:	0799      	lsls	r1, r3, #30
 8004424:	f57f af66 	bpl.w	80042f4 <HAL_RCC_OscConfig+0x18>
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 8004428:	f7fe fdce 	bl	8002fc8 <HAL_GetTick>
 800442c:	1b80      	subs	r0, r0, r6
 800442e:	2802      	cmp	r0, #2
 8004430:	d9f6      	bls.n	8004420 <HAL_RCC_OscConfig+0x144>
 8004432:	e798      	b.n	8004366 <HAL_RCC_OscConfig+0x8a>
    if((RCC_OscInitStruct->LSIState)!= RCC_LSI_OFF)
 8004434:	6962      	ldr	r2, [r4, #20]
 8004436:	4b60      	ldr	r3, [pc, #384]	; (80045b8 <HAL_RCC_OscConfig+0x2dc>)
 8004438:	b17a      	cbz	r2, 800445a <HAL_RCC_OscConfig+0x17e>
      __HAL_RCC_LSI_ENABLE();
 800443a:	2201      	movs	r2, #1
 800443c:	601a      	str	r2, [r3, #0]
      tickstart = HAL_GetTick();
 800443e:	f7fe fdc3 	bl	8002fc8 <HAL_GetTick>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 8004442:	4d5b      	ldr	r5, [pc, #364]	; (80045b0 <HAL_RCC_OscConfig+0x2d4>)
      tickstart = HAL_GetTick();
 8004444:	4606      	mov	r6, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 8004446:	6f6b      	ldr	r3, [r5, #116]	; 0x74
 8004448:	079f      	lsls	r7, r3, #30
 800444a:	f53f af57 	bmi.w	80042fc <HAL_RCC_OscConfig+0x20>
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 800444e:	f7fe fdbb 	bl	8002fc8 <HAL_GetTick>
 8004452:	1b80      	subs	r0, r0, r6
 8004454:	2802      	cmp	r0, #2
 8004456:	d9f6      	bls.n	8004446 <HAL_RCC_OscConfig+0x16a>
 8004458:	e785      	b.n	8004366 <HAL_RCC_OscConfig+0x8a>
      __HAL_RCC_LSI_DISABLE();
 800445a:	601a      	str	r2, [r3, #0]
      tickstart = HAL_GetTick();
 800445c:	f7fe fdb4 	bl	8002fc8 <HAL_GetTick>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 8004460:	4d53      	ldr	r5, [pc, #332]	; (80045b0 <HAL_RCC_OscConfig+0x2d4>)
      tickstart = HAL_GetTick();
 8004462:	4606      	mov	r6, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 8004464:	6f6b      	ldr	r3, [r5, #116]	; 0x74
 8004466:	0798      	lsls	r0, r3, #30
 8004468:	f57f af48 	bpl.w	80042fc <HAL_RCC_OscConfig+0x20>
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 800446c:	f7fe fdac 	bl	8002fc8 <HAL_GetTick>
 8004470:	1b80      	subs	r0, r0, r6
 8004472:	2802      	cmp	r0, #2
 8004474:	d9f6      	bls.n	8004464 <HAL_RCC_OscConfig+0x188>
 8004476:	e776      	b.n	8004366 <HAL_RCC_OscConfig+0x8a>
    if(__HAL_RCC_PWR_IS_CLK_DISABLED())
 8004478:	4b4d      	ldr	r3, [pc, #308]	; (80045b0 <HAL_RCC_OscConfig+0x2d4>)
 800447a:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 800447c:	f012 5280 	ands.w	r2, r2, #268435456	; 0x10000000
 8004480:	d128      	bne.n	80044d4 <HAL_RCC_OscConfig+0x1f8>
      __HAL_RCC_PWR_CLK_ENABLE();
 8004482:	9201      	str	r2, [sp, #4]
 8004484:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8004486:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 800448a:	641a      	str	r2, [r3, #64]	; 0x40
 800448c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800448e:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8004492:	9301      	str	r3, [sp, #4]
 8004494:	9b01      	ldr	r3, [sp, #4]
      pwrclkchanged = SET;
 8004496:	2601      	movs	r6, #1
    if(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 8004498:	4d48      	ldr	r5, [pc, #288]	; (80045bc <HAL_RCC_OscConfig+0x2e0>)
 800449a:	682b      	ldr	r3, [r5, #0]
 800449c:	05d9      	lsls	r1, r3, #23
 800449e:	d51b      	bpl.n	80044d8 <HAL_RCC_OscConfig+0x1fc>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 80044a0:	68a3      	ldr	r3, [r4, #8]
 80044a2:	4d43      	ldr	r5, [pc, #268]	; (80045b0 <HAL_RCC_OscConfig+0x2d4>)
 80044a4:	2b01      	cmp	r3, #1
 80044a6:	d127      	bne.n	80044f8 <HAL_RCC_OscConfig+0x21c>
 80044a8:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 80044aa:	f043 0301 	orr.w	r3, r3, #1
 80044ae:	672b      	str	r3, [r5, #112]	; 0x70
      tickstart = HAL_GetTick();
 80044b0:	f7fe fd8a 	bl	8002fc8 <HAL_GetTick>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 80044b4:	4d3e      	ldr	r5, [pc, #248]	; (80045b0 <HAL_RCC_OscConfig+0x2d4>)
      tickstart = HAL_GetTick();
 80044b6:	4607      	mov	r7, r0
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 80044b8:	f241 3888 	movw	r8, #5000	; 0x1388
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 80044bc:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 80044be:	079b      	lsls	r3, r3, #30
 80044c0:	d539      	bpl.n	8004536 <HAL_RCC_OscConfig+0x25a>
    if(pwrclkchanged == SET)
 80044c2:	2e00      	cmp	r6, #0
 80044c4:	f43f af1e 	beq.w	8004304 <HAL_RCC_OscConfig+0x28>
      __HAL_RCC_PWR_CLK_DISABLE();
 80044c8:	4a39      	ldr	r2, [pc, #228]	; (80045b0 <HAL_RCC_OscConfig+0x2d4>)
 80044ca:	6c13      	ldr	r3, [r2, #64]	; 0x40
 80044cc:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 80044d0:	6413      	str	r3, [r2, #64]	; 0x40
 80044d2:	e717      	b.n	8004304 <HAL_RCC_OscConfig+0x28>
    FlagStatus       pwrclkchanged = RESET;
 80044d4:	2600      	movs	r6, #0
 80044d6:	e7df      	b.n	8004498 <HAL_RCC_OscConfig+0x1bc>
      SET_BIT(PWR->CR, PWR_CR_DBP);
 80044d8:	682b      	ldr	r3, [r5, #0]
 80044da:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80044de:	602b      	str	r3, [r5, #0]
      tickstart = HAL_GetTick();
 80044e0:	f7fe fd72 	bl	8002fc8 <HAL_GetTick>
 80044e4:	4607      	mov	r7, r0
      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 80044e6:	682b      	ldr	r3, [r5, #0]
 80044e8:	05da      	lsls	r2, r3, #23
 80044ea:	d4d9      	bmi.n	80044a0 <HAL_RCC_OscConfig+0x1c4>
        if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 80044ec:	f7fe fd6c 	bl	8002fc8 <HAL_GetTick>
 80044f0:	1bc0      	subs	r0, r0, r7
 80044f2:	2802      	cmp	r0, #2
 80044f4:	d9f7      	bls.n	80044e6 <HAL_RCC_OscConfig+0x20a>
 80044f6:	e736      	b.n	8004366 <HAL_RCC_OscConfig+0x8a>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 80044f8:	2b05      	cmp	r3, #5
 80044fa:	d104      	bne.n	8004506 <HAL_RCC_OscConfig+0x22a>
 80044fc:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 80044fe:	f043 0304 	orr.w	r3, r3, #4
 8004502:	672b      	str	r3, [r5, #112]	; 0x70
 8004504:	e7d0      	b.n	80044a8 <HAL_RCC_OscConfig+0x1cc>
 8004506:	6f2a      	ldr	r2, [r5, #112]	; 0x70
 8004508:	f022 0201 	bic.w	r2, r2, #1
 800450c:	672a      	str	r2, [r5, #112]	; 0x70
 800450e:	6f2a      	ldr	r2, [r5, #112]	; 0x70
 8004510:	f022 0204 	bic.w	r2, r2, #4
 8004514:	672a      	str	r2, [r5, #112]	; 0x70
    if((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
 8004516:	2b00      	cmp	r3, #0
 8004518:	d1ca      	bne.n	80044b0 <HAL_RCC_OscConfig+0x1d4>
      tickstart = HAL_GetTick();
 800451a:	f7fe fd55 	bl	8002fc8 <HAL_GetTick>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800451e:	f241 3888 	movw	r8, #5000	; 0x1388
      tickstart = HAL_GetTick();
 8004522:	4607      	mov	r7, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 8004524:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 8004526:	0798      	lsls	r0, r3, #30
 8004528:	d5cb      	bpl.n	80044c2 <HAL_RCC_OscConfig+0x1e6>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800452a:	f7fe fd4d 	bl	8002fc8 <HAL_GetTick>
 800452e:	1bc0      	subs	r0, r0, r7
 8004530:	4540      	cmp	r0, r8
 8004532:	d9f7      	bls.n	8004524 <HAL_RCC_OscConfig+0x248>
 8004534:	e717      	b.n	8004366 <HAL_RCC_OscConfig+0x8a>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8004536:	f7fe fd47 	bl	8002fc8 <HAL_GetTick>
 800453a:	1bc0      	subs	r0, r0, r7
 800453c:	4540      	cmp	r0, r8
 800453e:	d9bd      	bls.n	80044bc <HAL_RCC_OscConfig+0x1e0>
 8004540:	e711      	b.n	8004366 <HAL_RCC_OscConfig+0x8a>
    if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL)
 8004542:	4d1b      	ldr	r5, [pc, #108]	; (80045b0 <HAL_RCC_OscConfig+0x2d4>)
 8004544:	68ab      	ldr	r3, [r5, #8]
 8004546:	f003 030c 	and.w	r3, r3, #12
 800454a:	2b08      	cmp	r3, #8
 800454c:	d047      	beq.n	80045de <HAL_RCC_OscConfig+0x302>
 800454e:	4e1c      	ldr	r6, [pc, #112]	; (80045c0 <HAL_RCC_OscConfig+0x2e4>)
 8004550:	2300      	movs	r3, #0
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 8004552:	2802      	cmp	r0, #2
        __HAL_RCC_PLL_DISABLE();
 8004554:	6033      	str	r3, [r6, #0]
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 8004556:	d135      	bne.n	80045c4 <HAL_RCC_OscConfig+0x2e8>
        tickstart = HAL_GetTick();
 8004558:	f7fe fd36 	bl	8002fc8 <HAL_GetTick>
 800455c:	4607      	mov	r7, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 800455e:	682b      	ldr	r3, [r5, #0]
 8004560:	0199      	lsls	r1, r3, #6
 8004562:	d41e      	bmi.n	80045a2 <HAL_RCC_OscConfig+0x2c6>
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 8004564:	e9d4 3207 	ldrd	r3, r2, [r4, #28]
 8004568:	4313      	orrs	r3, r2
 800456a:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800456c:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 8004570:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8004572:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 8004576:	6aa2      	ldr	r2, [r4, #40]	; 0x28
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8004578:	4c0d      	ldr	r4, [pc, #52]	; (80045b0 <HAL_RCC_OscConfig+0x2d4>)
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 800457a:	0852      	lsrs	r2, r2, #1
 800457c:	3a01      	subs	r2, #1
 800457e:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8004582:	606b      	str	r3, [r5, #4]
        __HAL_RCC_PLL_ENABLE();
 8004584:	2301      	movs	r3, #1
 8004586:	6033      	str	r3, [r6, #0]
        tickstart = HAL_GetTick();
 8004588:	f7fe fd1e 	bl	8002fc8 <HAL_GetTick>
 800458c:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800458e:	6823      	ldr	r3, [r4, #0]
 8004590:	019a      	lsls	r2, r3, #6
 8004592:	f53f aebb 	bmi.w	800430c <HAL_RCC_OscConfig+0x30>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 8004596:	f7fe fd17 	bl	8002fc8 <HAL_GetTick>
 800459a:	1b40      	subs	r0, r0, r5
 800459c:	2802      	cmp	r0, #2
 800459e:	d9f6      	bls.n	800458e <HAL_RCC_OscConfig+0x2b2>
 80045a0:	e6e1      	b.n	8004366 <HAL_RCC_OscConfig+0x8a>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 80045a2:	f7fe fd11 	bl	8002fc8 <HAL_GetTick>
 80045a6:	1bc0      	subs	r0, r0, r7
 80045a8:	2802      	cmp	r0, #2
 80045aa:	d9d8      	bls.n	800455e <HAL_RCC_OscConfig+0x282>
 80045ac:	e6db      	b.n	8004366 <HAL_RCC_OscConfig+0x8a>
 80045ae:	bf00      	nop
 80045b0:	40023800 	.word	0x40023800
 80045b4:	42470000 	.word	0x42470000
 80045b8:	42470e80 	.word	0x42470e80
 80045bc:	40007000 	.word	0x40007000
 80045c0:	42470060 	.word	0x42470060
        tickstart = HAL_GetTick();
 80045c4:	f7fe fd00 	bl	8002fc8 <HAL_GetTick>
 80045c8:	4604      	mov	r4, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 80045ca:	682b      	ldr	r3, [r5, #0]
 80045cc:	019b      	lsls	r3, r3, #6
 80045ce:	f57f ae9d 	bpl.w	800430c <HAL_RCC_OscConfig+0x30>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 80045d2:	f7fe fcf9 	bl	8002fc8 <HAL_GetTick>
 80045d6:	1b00      	subs	r0, r0, r4
 80045d8:	2802      	cmp	r0, #2
 80045da:	d9f6      	bls.n	80045ca <HAL_RCC_OscConfig+0x2ee>
 80045dc:	e6c3      	b.n	8004366 <HAL_RCC_OscConfig+0x8a>
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
 80045de:	2801      	cmp	r0, #1
 80045e0:	f43f aec2 	beq.w	8004368 <HAL_RCC_OscConfig+0x8c>
        pll_config = RCC->PLLCFGR;
 80045e4:	6868      	ldr	r0, [r5, #4]
        if((READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 80045e6:	69e3      	ldr	r3, [r4, #28]
 80045e8:	f400 0280 	and.w	r2, r0, #4194304	; 0x400000
 80045ec:	429a      	cmp	r2, r3
 80045ee:	f47f ae79 	bne.w	80042e4 <HAL_RCC_OscConfig+0x8>
 80045f2:	6a22      	ldr	r2, [r4, #32]
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != RCC_OscInitStruct->PLL.PLLM) ||
 80045f4:	f000 033f 	and.w	r3, r0, #63	; 0x3f
        if((READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 80045f8:	4293      	cmp	r3, r2
 80045fa:	f47f ae73 	bne.w	80042e4 <HAL_RCC_OscConfig+0x8>
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != RCC_OscInitStruct->PLL.PLLM) ||
 80045fe:	6a62      	ldr	r2, [r4, #36]	; 0x24
 8004600:	f647 73c0 	movw	r3, #32704	; 0x7fc0
 8004604:	4003      	ands	r3, r0
 8004606:	4293      	cmp	r3, r2
 8004608:	f47f ae6c 	bne.w	80042e4 <HAL_RCC_OscConfig+0x8>
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != RCC_OscInitStruct->PLL.PLLN) ||
 800460c:	6aa2      	ldr	r2, [r4, #40]	; 0x28
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != RCC_OscInitStruct->PLL.PLLP) ||
 800460e:	f400 3340 	and.w	r3, r0, #196608	; 0x30000
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != RCC_OscInitStruct->PLL.PLLN) ||
 8004612:	4293      	cmp	r3, r2
 8004614:	f47f ae66 	bne.w	80042e4 <HAL_RCC_OscConfig+0x8>
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != RCC_OscInitStruct->PLL.PLLP) ||
 8004618:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != RCC_OscInitStruct->PLL.PLLQ))
 800461a:	f000 6070 	and.w	r0, r0, #251658240	; 0xf000000
    return HAL_ERROR;
 800461e:	1ac0      	subs	r0, r0, r3
 8004620:	bf18      	it	ne
 8004622:	2001      	movne	r0, #1
 8004624:	e6a0      	b.n	8004368 <HAL_RCC_OscConfig+0x8c>
 8004626:	bf00      	nop

08004628 <HAL_RCC_GetSysClockFreq>:
{
  uint32_t pllm = 0U, pllvco = 0U, pllp = 0U;
  uint32_t sysclockfreq = 0U;

  /* Get SYSCLK source -------------------------------------------------------*/
  switch (RCC->CFGR & RCC_CFGR_SWS)
 8004628:	4913      	ldr	r1, [pc, #76]	; (8004678 <HAL_RCC_GetSysClockFreq+0x50>)
{
 800462a:	b508      	push	{r3, lr}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 800462c:	688b      	ldr	r3, [r1, #8]
 800462e:	f003 030c 	and.w	r3, r3, #12
 8004632:	2b04      	cmp	r3, #4
 8004634:	d003      	beq.n	800463e <HAL_RCC_GetSysClockFreq+0x16>
 8004636:	2b08      	cmp	r3, #8
 8004638:	d003      	beq.n	8004642 <HAL_RCC_GetSysClockFreq+0x1a>
  {
    case RCC_CFGR_SWS_HSI:  /* HSI used as system clock source */
    {
      sysclockfreq = HSI_VALUE;
 800463a:	4810      	ldr	r0, [pc, #64]	; (800467c <HAL_RCC_GetSysClockFreq+0x54>)
    {
      sysclockfreq = HSI_VALUE;
      break;
    }
  }
  return sysclockfreq;
 800463c:	e000      	b.n	8004640 <HAL_RCC_GetSysClockFreq+0x18>
      sysclockfreq = HSE_VALUE;
 800463e:	4810      	ldr	r0, [pc, #64]	; (8004680 <HAL_RCC_GetSysClockFreq+0x58>)
}
 8004640:	bd08      	pop	{r3, pc}
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 8004642:	684a      	ldr	r2, [r1, #4]
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 8004644:	684b      	ldr	r3, [r1, #4]
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8004646:	6849      	ldr	r1, [r1, #4]
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 8004648:	f413 0380 	ands.w	r3, r3, #4194304	; 0x400000
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800464c:	bf14      	ite	ne
 800464e:	480c      	ldrne	r0, [pc, #48]	; (8004680 <HAL_RCC_GetSysClockFreq+0x58>)
        pllvco = (uint32_t) ((((uint64_t) HSI_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8004650:	480a      	ldreq	r0, [pc, #40]	; (800467c <HAL_RCC_GetSysClockFreq+0x54>)
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8004652:	f3c1 1188 	ubfx	r1, r1, #6, #9
 8004656:	bf18      	it	ne
 8004658:	2300      	movne	r3, #0
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 800465a:	f002 023f 	and.w	r2, r2, #63	; 0x3f
        pllvco = (uint32_t) ((((uint64_t) HSI_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800465e:	fba1 0100 	umull	r0, r1, r1, r0
 8004662:	f7fb fe15 	bl	8000290 <__aeabi_uldivmod>
      pllp = ((((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >> RCC_PLLCFGR_PLLP_Pos) + 1U) *2U);
 8004666:	4b04      	ldr	r3, [pc, #16]	; (8004678 <HAL_RCC_GetSysClockFreq+0x50>)
 8004668:	685b      	ldr	r3, [r3, #4]
 800466a:	f3c3 4301 	ubfx	r3, r3, #16, #2
 800466e:	3301      	adds	r3, #1
 8004670:	005b      	lsls	r3, r3, #1
      sysclockfreq = pllvco/pllp;
 8004672:	fbb0 f0f3 	udiv	r0, r0, r3
 8004676:	e7e3      	b.n	8004640 <HAL_RCC_GetSysClockFreq+0x18>
 8004678:	40023800 	.word	0x40023800
 800467c:	00f42400 	.word	0x00f42400
 8004680:	007a1200 	.word	0x007a1200

08004684 <HAL_RCC_ClockConfig>:
{
 8004684:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8004688:	460d      	mov	r5, r1
  if(RCC_ClkInitStruct == NULL)
 800468a:	4604      	mov	r4, r0
 800468c:	b910      	cbnz	r0, 8004694 <HAL_RCC_ClockConfig+0x10>
    return HAL_ERROR;
 800468e:	2001      	movs	r0, #1
}
 8004690:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if(FLatency > __HAL_FLASH_GET_LATENCY())
 8004694:	4b43      	ldr	r3, [pc, #268]	; (80047a4 <HAL_RCC_ClockConfig+0x120>)
 8004696:	681a      	ldr	r2, [r3, #0]
 8004698:	f002 020f 	and.w	r2, r2, #15
 800469c:	428a      	cmp	r2, r1
 800469e:	d328      	bcc.n	80046f2 <HAL_RCC_ClockConfig+0x6e>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 80046a0:	6821      	ldr	r1, [r4, #0]
 80046a2:	078f      	lsls	r7, r1, #30
 80046a4:	d42d      	bmi.n	8004702 <HAL_RCC_ClockConfig+0x7e>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 80046a6:	07c8      	lsls	r0, r1, #31
 80046a8:	d440      	bmi.n	800472c <HAL_RCC_ClockConfig+0xa8>
  if(FLatency < __HAL_FLASH_GET_LATENCY())
 80046aa:	4b3e      	ldr	r3, [pc, #248]	; (80047a4 <HAL_RCC_ClockConfig+0x120>)
 80046ac:	681a      	ldr	r2, [r3, #0]
 80046ae:	f002 020f 	and.w	r2, r2, #15
 80046b2:	42aa      	cmp	r2, r5
 80046b4:	d865      	bhi.n	8004782 <HAL_RCC_ClockConfig+0xfe>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 80046b6:	6822      	ldr	r2, [r4, #0]
 80046b8:	0751      	lsls	r1, r2, #29
 80046ba:	d46b      	bmi.n	8004794 <HAL_RCC_ClockConfig+0x110>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 80046bc:	0713      	lsls	r3, r2, #28
 80046be:	d507      	bpl.n	80046d0 <HAL_RCC_ClockConfig+0x4c>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3U));
 80046c0:	4a39      	ldr	r2, [pc, #228]	; (80047a8 <HAL_RCC_ClockConfig+0x124>)
 80046c2:	6921      	ldr	r1, [r4, #16]
 80046c4:	6893      	ldr	r3, [r2, #8]
 80046c6:	f423 4360 	bic.w	r3, r3, #57344	; 0xe000
 80046ca:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
 80046ce:	6093      	str	r3, [r2, #8]
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_Pos];
 80046d0:	f7ff ffaa 	bl	8004628 <HAL_RCC_GetSysClockFreq>
 80046d4:	4b34      	ldr	r3, [pc, #208]	; (80047a8 <HAL_RCC_ClockConfig+0x124>)
 80046d6:	4a35      	ldr	r2, [pc, #212]	; (80047ac <HAL_RCC_ClockConfig+0x128>)
 80046d8:	689b      	ldr	r3, [r3, #8]
 80046da:	f3c3 1303 	ubfx	r3, r3, #4, #4
 80046de:	5cd3      	ldrb	r3, [r2, r3]
 80046e0:	40d8      	lsrs	r0, r3
 80046e2:	4b33      	ldr	r3, [pc, #204]	; (80047b0 <HAL_RCC_ClockConfig+0x12c>)
 80046e4:	6018      	str	r0, [r3, #0]
  HAL_InitTick (uwTickPrio);
 80046e6:	4b33      	ldr	r3, [pc, #204]	; (80047b4 <HAL_RCC_ClockConfig+0x130>)
 80046e8:	6818      	ldr	r0, [r3, #0]
 80046ea:	f7fd faa5 	bl	8001c38 <HAL_InitTick>
  return HAL_OK;
 80046ee:	2000      	movs	r0, #0
 80046f0:	e7ce      	b.n	8004690 <HAL_RCC_ClockConfig+0xc>
    __HAL_FLASH_SET_LATENCY(FLatency);
 80046f2:	b2ca      	uxtb	r2, r1
 80046f4:	701a      	strb	r2, [r3, #0]
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 80046f6:	681b      	ldr	r3, [r3, #0]
 80046f8:	f003 030f 	and.w	r3, r3, #15
 80046fc:	428b      	cmp	r3, r1
 80046fe:	d1c6      	bne.n	800468e <HAL_RCC_ClockConfig+0xa>
 8004700:	e7ce      	b.n	80046a0 <HAL_RCC_ClockConfig+0x1c>
 8004702:	4b29      	ldr	r3, [pc, #164]	; (80047a8 <HAL_RCC_ClockConfig+0x124>)
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 8004704:	f011 0f04 	tst.w	r1, #4
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_HCLK_DIV16);
 8004708:	bf1e      	ittt	ne
 800470a:	689a      	ldrne	r2, [r3, #8]
 800470c:	f442 52e0 	orrne.w	r2, r2, #7168	; 0x1c00
 8004710:	609a      	strne	r2, [r3, #8]
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 8004712:	070e      	lsls	r6, r1, #28
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, (RCC_HCLK_DIV16 << 3));
 8004714:	bf42      	ittt	mi
 8004716:	689a      	ldrmi	r2, [r3, #8]
 8004718:	f442 4260 	orrmi.w	r2, r2, #57344	; 0xe000
 800471c:	609a      	strmi	r2, [r3, #8]
    MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 800471e:	689a      	ldr	r2, [r3, #8]
 8004720:	68a0      	ldr	r0, [r4, #8]
 8004722:	f022 02f0 	bic.w	r2, r2, #240	; 0xf0
 8004726:	4302      	orrs	r2, r0
 8004728:	609a      	str	r2, [r3, #8]
 800472a:	e7bc      	b.n	80046a6 <HAL_RCC_ClockConfig+0x22>
    if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 800472c:	6862      	ldr	r2, [r4, #4]
 800472e:	4b1e      	ldr	r3, [pc, #120]	; (80047a8 <HAL_RCC_ClockConfig+0x124>)
 8004730:	2a01      	cmp	r2, #1
 8004732:	d11c      	bne.n	800476e <HAL_RCC_ClockConfig+0xea>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8004734:	681b      	ldr	r3, [r3, #0]
 8004736:	f413 3f00 	tst.w	r3, #131072	; 0x20000
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800473a:	d0a8      	beq.n	800468e <HAL_RCC_ClockConfig+0xa>
    __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 800473c:	4e1a      	ldr	r6, [pc, #104]	; (80047a8 <HAL_RCC_ClockConfig+0x124>)
 800473e:	68b3      	ldr	r3, [r6, #8]
 8004740:	f023 0303 	bic.w	r3, r3, #3
 8004744:	4313      	orrs	r3, r2
 8004746:	60b3      	str	r3, [r6, #8]
    tickstart = HAL_GetTick();
 8004748:	f7fe fc3e 	bl	8002fc8 <HAL_GetTick>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 800474c:	f241 3888 	movw	r8, #5000	; 0x1388
    tickstart = HAL_GetTick();
 8004750:	4607      	mov	r7, r0
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 8004752:	68b3      	ldr	r3, [r6, #8]
 8004754:	6862      	ldr	r2, [r4, #4]
 8004756:	f003 030c 	and.w	r3, r3, #12
 800475a:	ebb3 0f82 	cmp.w	r3, r2, lsl #2
 800475e:	d0a4      	beq.n	80046aa <HAL_RCC_ClockConfig+0x26>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 8004760:	f7fe fc32 	bl	8002fc8 <HAL_GetTick>
 8004764:	1bc0      	subs	r0, r0, r7
 8004766:	4540      	cmp	r0, r8
 8004768:	d9f3      	bls.n	8004752 <HAL_RCC_ClockConfig+0xce>
        return HAL_TIMEOUT;
 800476a:	2003      	movs	r0, #3
 800476c:	e790      	b.n	8004690 <HAL_RCC_ClockConfig+0xc>
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 800476e:	1e91      	subs	r1, r2, #2
 8004770:	2901      	cmp	r1, #1
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8004772:	681b      	ldr	r3, [r3, #0]
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 8004774:	d802      	bhi.n	800477c <HAL_RCC_ClockConfig+0xf8>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8004776:	f013 7f00 	tst.w	r3, #33554432	; 0x2000000
 800477a:	e7de      	b.n	800473a <HAL_RCC_ClockConfig+0xb6>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800477c:	f013 0f02 	tst.w	r3, #2
 8004780:	e7db      	b.n	800473a <HAL_RCC_ClockConfig+0xb6>
    __HAL_FLASH_SET_LATENCY(FLatency);
 8004782:	b2ea      	uxtb	r2, r5
 8004784:	701a      	strb	r2, [r3, #0]
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 8004786:	681b      	ldr	r3, [r3, #0]
 8004788:	f003 030f 	and.w	r3, r3, #15
 800478c:	42ab      	cmp	r3, r5
 800478e:	f47f af7e 	bne.w	800468e <HAL_RCC_ClockConfig+0xa>
 8004792:	e790      	b.n	80046b6 <HAL_RCC_ClockConfig+0x32>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 8004794:	4904      	ldr	r1, [pc, #16]	; (80047a8 <HAL_RCC_ClockConfig+0x124>)
 8004796:	68e0      	ldr	r0, [r4, #12]
 8004798:	688b      	ldr	r3, [r1, #8]
 800479a:	f423 53e0 	bic.w	r3, r3, #7168	; 0x1c00
 800479e:	4303      	orrs	r3, r0
 80047a0:	608b      	str	r3, [r1, #8]
 80047a2:	e78b      	b.n	80046bc <HAL_RCC_ClockConfig+0x38>
 80047a4:	40023c00 	.word	0x40023c00
 80047a8:	40023800 	.word	0x40023800
 80047ac:	08019d7c 	.word	0x08019d7c
 80047b0:	20000074 	.word	0x20000074
 80047b4:	2000007c 	.word	0x2000007c

080047b8 <HAL_RCC_GetPCLK1Freq>:
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK1Freq(void)
{
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1)>> RCC_CFGR_PPRE1_Pos]);
 80047b8:	4b04      	ldr	r3, [pc, #16]	; (80047cc <HAL_RCC_GetPCLK1Freq+0x14>)
 80047ba:	4a05      	ldr	r2, [pc, #20]	; (80047d0 <HAL_RCC_GetPCLK1Freq+0x18>)
 80047bc:	689b      	ldr	r3, [r3, #8]
 80047be:	f3c3 2382 	ubfx	r3, r3, #10, #3
 80047c2:	5cd3      	ldrb	r3, [r2, r3]
 80047c4:	4a03      	ldr	r2, [pc, #12]	; (80047d4 <HAL_RCC_GetPCLK1Freq+0x1c>)
 80047c6:	6810      	ldr	r0, [r2, #0]
}
 80047c8:	40d8      	lsrs	r0, r3
 80047ca:	4770      	bx	lr
 80047cc:	40023800 	.word	0x40023800
 80047d0:	08019d8c 	.word	0x08019d8c
 80047d4:	20000074 	.word	0x20000074

080047d8 <HAL_RCC_GetClockConfig>:
  * @retval None
  */
void HAL_RCC_GetClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t *pFLatency)
{
  /* Set all possible values for the Clock type parameter --------------------*/
  RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2;
 80047d8:	230f      	movs	r3, #15
 80047da:	6003      	str	r3, [r0, #0]

  /* Get the SYSCLK configuration --------------------------------------------*/
  RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
 80047dc:	4b0b      	ldr	r3, [pc, #44]	; (800480c <HAL_RCC_GetClockConfig+0x34>)
 80047de:	689a      	ldr	r2, [r3, #8]
 80047e0:	f002 0203 	and.w	r2, r2, #3
 80047e4:	6042      	str	r2, [r0, #4]

  /* Get the HCLK configuration ----------------------------------------------*/
  RCC_ClkInitStruct->AHBCLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_HPRE);
 80047e6:	689a      	ldr	r2, [r3, #8]
 80047e8:	f002 02f0 	and.w	r2, r2, #240	; 0xf0
 80047ec:	6082      	str	r2, [r0, #8]

  /* Get the APB1 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB1CLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_PPRE1);
 80047ee:	689a      	ldr	r2, [r3, #8]
 80047f0:	f402 52e0 	and.w	r2, r2, #7168	; 0x1c00
 80047f4:	60c2      	str	r2, [r0, #12]

  /* Get the APB2 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)((RCC->CFGR & RCC_CFGR_PPRE2) >> 3U);
 80047f6:	689b      	ldr	r3, [r3, #8]
 80047f8:	08db      	lsrs	r3, r3, #3
 80047fa:	f403 53e0 	and.w	r3, r3, #7168	; 0x1c00
 80047fe:	6103      	str	r3, [r0, #16]

  /* Get the Flash Wait State (Latency) configuration ------------------------*/
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
 8004800:	4b03      	ldr	r3, [pc, #12]	; (8004810 <HAL_RCC_GetClockConfig+0x38>)
 8004802:	681b      	ldr	r3, [r3, #0]
 8004804:	f003 030f 	and.w	r3, r3, #15
 8004808:	600b      	str	r3, [r1, #0]
}
 800480a:	4770      	bx	lr
 800480c:	40023800 	.word	0x40023800
 8004810:	40023c00 	.word	0x40023c00

08004814 <HAL_RCCEx_PeriphCLKConfig>:
  /*----------------------- SAI/I2S Configuration (PLLI2S) -------------------*/
  /*----------------------- Common configuration SAI/I2S ---------------------*/
  /* In Case of SAI or I2S Clock Configuration through PLLI2S, PLLI2SN division
     factor is common parameters for both peripherals */
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
     (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLI2S) == RCC_PERIPHCLK_SAI_PLLI2S) ||
 8004814:	6803      	ldr	r3, [r0, #0]
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
 8004816:	f013 0f43 	tst.w	r3, #67	; 0x43
{
 800481a:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800481c:	4604      	mov	r4, r0
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
 800481e:	f040 808a 	bne.w	8004936 <HAL_RCCEx_PeriphCLKConfig+0x122>

  /*----------------------- SAI/LTDC Configuration (PLLSAI) ------------------*/
  /*----------------------- Common configuration SAI/LTDC --------------------*/
  /* In Case of SAI or LTDC Clock Configuration through PLLSAI, PLLSAIN division
     factor is common parameters for both peripherals */
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == RCC_PERIPHCLK_SAI_PLLSAI) ||
 8004822:	6823      	ldr	r3, [r4, #0]
 8004824:	f013 0f0c 	tst.w	r3, #12
 8004828:	d044      	beq.n	80048b4 <HAL_RCCEx_PeriphCLKConfig+0xa0>
  {
    /* Check the PLLSAI division factors */
    assert_param(IS_RCC_PLLSAIN_VALUE(PeriphClkInit->PLLSAI.PLLSAIN));

    /* Disable PLLSAI Clock */
    __HAL_RCC_PLLSAI_DISABLE();
 800482a:	4d89      	ldr	r5, [pc, #548]	; (8004a50 <HAL_RCCEx_PeriphCLKConfig+0x23c>)
    /* Get tick */
    tickstart = HAL_GetTick();
    /* Wait till PLLSAI is disabled */
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 800482c:	4e89      	ldr	r6, [pc, #548]	; (8004a54 <HAL_RCCEx_PeriphCLKConfig+0x240>)
    __HAL_RCC_PLLSAI_DISABLE();
 800482e:	2300      	movs	r3, #0
 8004830:	602b      	str	r3, [r5, #0]
    tickstart = HAL_GetTick();
 8004832:	f7fe fbc9 	bl	8002fc8 <HAL_GetTick>
 8004836:	4607      	mov	r7, r0
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 8004838:	6833      	ldr	r3, [r6, #0]
 800483a:	009b      	lsls	r3, r3, #2
 800483c:	f100 80cc 	bmi.w	80049d8 <HAL_RCCEx_PeriphCLKConfig+0x1c4>
    }

    /*---------------------------- SAI configuration -------------------------*/
    /* In Case of SAI Clock Configuration through PLLSAI, PLLSAIQ and PLLSAI_DIVQ must
       be added only for SAI configuration */
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == (RCC_PERIPHCLK_SAI_PLLSAI))
 8004840:	6821      	ldr	r1, [r4, #0]
 8004842:	074f      	lsls	r7, r1, #29
 8004844:	d515      	bpl.n	8004872 <HAL_RCCEx_PeriphCLKConfig+0x5e>
      /* Read PLLSAIR value from PLLSAICFGR register (this value is not need for SAI configuration) */
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIR) >> RCC_PLLSAICFGR_PLLSAIR_Pos);
      /* PLLSAI_VCO Input  = PLL_SOURCE/PLLM */
      /* PLLSAI_VCO Output = PLLSAI_VCO Input * PLLSAIN */
      /* SAI_CLK(first level) = PLLSAI_VCO Output/PLLSAIQ */
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , PeriphClkInit->PLLSAI.PLLSAIQ, tmpreg1);
 8004846:	e9d4 0304 	ldrd	r0, r3, [r4, #16]
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIR) >> RCC_PLLSAICFGR_PLLSAIR_Pos);
 800484a:	f8d6 2088 	ldr.w	r2, [r6, #136]	; 0x88
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , PeriphClkInit->PLLSAI.PLLSAIQ, tmpreg1);
 800484e:	061b      	lsls	r3, r3, #24
 8004850:	f002 42e0 	and.w	r2, r2, #1879048192	; 0x70000000
 8004854:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 8004858:	4313      	orrs	r3, r2
 800485a:	f8c6 3088 	str.w	r3, [r6, #136]	; 0x88
      /* SAI_CLK_x = SAI_CLK(first level)/PLLSAIDIVQ */
      __HAL_RCC_PLLSAI_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLSAIDivQ);
 800485e:	f8d6 308c 	ldr.w	r3, [r6, #140]	; 0x8c
 8004862:	6a22      	ldr	r2, [r4, #32]
 8004864:	f423 53f8 	bic.w	r3, r3, #7936	; 0x1f00
 8004868:	3a01      	subs	r2, #1
 800486a:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 800486e:	f8c6 308c 	str.w	r3, [r6, #140]	; 0x8c
    }

    /*---------------------------- LTDC configuration ------------------------*/
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == (RCC_PERIPHCLK_LTDC))
 8004872:	070e      	lsls	r6, r1, #28
 8004874:	d514      	bpl.n	80048a0 <HAL_RCCEx_PeriphCLKConfig+0x8c>
    {
      assert_param(IS_RCC_PLLSAIR_VALUE(PeriphClkInit->PLLSAI.PLLSAIR));
      assert_param(IS_RCC_PLLSAI_DIVR_VALUE(PeriphClkInit->PLLSAIDivR));

      /* Read PLLSAIR value from PLLSAICFGR register (this value is not need for SAI configuration) */
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 8004876:	4a77      	ldr	r2, [pc, #476]	; (8004a54 <HAL_RCCEx_PeriphCLKConfig+0x240>)
      /* PLLSAI_VCO Input  = PLL_SOURCE/PLLM */
      /* PLLSAI_VCO Output = PLLSAI_VCO Input * PLLSAIN */
      /* LTDC_CLK(first level) = PLLSAI_VCO Output/PLLSAIR */
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , tmpreg1, PeriphClkInit->PLLSAI.PLLSAIR);
 8004878:	69a3      	ldr	r3, [r4, #24]
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 800487a:	f8d2 1088 	ldr.w	r1, [r2, #136]	; 0x88
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , tmpreg1, PeriphClkInit->PLLSAI.PLLSAIR);
 800487e:	6920      	ldr	r0, [r4, #16]
 8004880:	071b      	lsls	r3, r3, #28
 8004882:	f001 6170 	and.w	r1, r1, #251658240	; 0xf000000
 8004886:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 800488a:	430b      	orrs	r3, r1
 800488c:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
      /* LTDC_CLK = LTDC_CLK(first level)/PLLSAIDIVR */
      __HAL_RCC_PLLSAI_PLLSAICLKDIVR_CONFIG(PeriphClkInit->PLLSAIDivR);
 8004890:	f8d2 308c 	ldr.w	r3, [r2, #140]	; 0x8c
 8004894:	6a61      	ldr	r1, [r4, #36]	; 0x24
 8004896:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 800489a:	430b      	orrs	r3, r1
 800489c:	f8c2 308c 	str.w	r3, [r2, #140]	; 0x8c
    }
    /* Enable PLLSAI Clock */
    __HAL_RCC_PLLSAI_ENABLE();
 80048a0:	2301      	movs	r3, #1
 80048a2:	602b      	str	r3, [r5, #0]
    /* Get tick */
    tickstart = HAL_GetTick();
 80048a4:	f7fe fb90 	bl	8002fc8 <HAL_GetTick>
    /* Wait till PLLSAI is ready */
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 80048a8:	4d6a      	ldr	r5, [pc, #424]	; (8004a54 <HAL_RCCEx_PeriphCLKConfig+0x240>)
    tickstart = HAL_GetTick();
 80048aa:	4606      	mov	r6, r0
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 80048ac:	682b      	ldr	r3, [r5, #0]
 80048ae:	0098      	lsls	r0, r3, #2
 80048b0:	f140 8099 	bpl.w	80049e6 <HAL_RCCEx_PeriphCLKConfig+0x1d2>
    }
  }
  /*--------------------------------------------------------------------------*/

  /*---------------------------- RTC configuration ---------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == (RCC_PERIPHCLK_RTC))
 80048b4:	6823      	ldr	r3, [r4, #0]
 80048b6:	069a      	lsls	r2, r3, #26
 80048b8:	d533      	bpl.n	8004922 <HAL_RCCEx_PeriphCLKConfig+0x10e>
  {
    /* Check for RTC Parameters used to output RTCCLK */
    assert_param(IS_RCC_RTCCLKSOURCE(PeriphClkInit->RTCClockSelection));

    /* Enable Power Clock*/
    __HAL_RCC_PWR_CLK_ENABLE();
 80048ba:	2300      	movs	r3, #0
 80048bc:	9301      	str	r3, [sp, #4]
 80048be:	4b65      	ldr	r3, [pc, #404]	; (8004a54 <HAL_RCCEx_PeriphCLKConfig+0x240>)

    /* Enable write access to Backup domain */
    PWR->CR |= PWR_CR_DBP;
 80048c0:	4d65      	ldr	r5, [pc, #404]	; (8004a58 <HAL_RCCEx_PeriphCLKConfig+0x244>)
    __HAL_RCC_PWR_CLK_ENABLE();
 80048c2:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 80048c4:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 80048c8:	641a      	str	r2, [r3, #64]	; 0x40
 80048ca:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80048cc:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80048d0:	9301      	str	r3, [sp, #4]
 80048d2:	9b01      	ldr	r3, [sp, #4]
    PWR->CR |= PWR_CR_DBP;
 80048d4:	682b      	ldr	r3, [r5, #0]
 80048d6:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80048da:	602b      	str	r3, [r5, #0]

    /* Get tick */
    tickstart = HAL_GetTick();
 80048dc:	f7fe fb74 	bl	8002fc8 <HAL_GetTick>
 80048e0:	4606      	mov	r6, r0

    while((PWR->CR & PWR_CR_DBP) == RESET)
 80048e2:	682b      	ldr	r3, [r5, #0]
 80048e4:	05d9      	lsls	r1, r3, #23
 80048e6:	f140 8085 	bpl.w	80049f4 <HAL_RCCEx_PeriphCLKConfig+0x1e0>
      {
        return HAL_TIMEOUT;
      }
    }
    /* Reset the Backup domain only if the RTC Clock source selection is modified from reset value */
    tmpreg1 = (RCC->BDCR & RCC_BDCR_RTCSEL);
 80048ea:	4d5a      	ldr	r5, [pc, #360]	; (8004a54 <HAL_RCCEx_PeriphCLKConfig+0x240>)
 80048ec:	6f2b      	ldr	r3, [r5, #112]	; 0x70
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 80048ee:	f413 7340 	ands.w	r3, r3, #768	; 0x300
 80048f2:	f040 8086 	bne.w	8004a02 <HAL_RCCEx_PeriphCLKConfig+0x1ee>
            return HAL_TIMEOUT;
          }
        }
      }
    }
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 80048f6:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 80048f8:	f403 7240 	and.w	r2, r3, #768	; 0x300
 80048fc:	f5b2 7f40 	cmp.w	r2, #768	; 0x300
 8004900:	4a54      	ldr	r2, [pc, #336]	; (8004a54 <HAL_RCCEx_PeriphCLKConfig+0x240>)
 8004902:	f040 80a0 	bne.w	8004a46 <HAL_RCCEx_PeriphCLKConfig+0x232>
 8004906:	6891      	ldr	r1, [r2, #8]
 8004908:	f023 4070 	bic.w	r0, r3, #4026531840	; 0xf0000000
 800490c:	f421 11f8 	bic.w	r1, r1, #2031616	; 0x1f0000
 8004910:	f420 7040 	bic.w	r0, r0, #768	; 0x300
 8004914:	4301      	orrs	r1, r0
 8004916:	6091      	str	r1, [r2, #8]
 8004918:	6f11      	ldr	r1, [r2, #112]	; 0x70
 800491a:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800491e:	430b      	orrs	r3, r1
 8004920:	6713      	str	r3, [r2, #112]	; 0x70
  }
  /*--------------------------------------------------------------------------*/

  /*---------------------------- TIM configuration ---------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == (RCC_PERIPHCLK_TIM))
 8004922:	6820      	ldr	r0, [r4, #0]
 8004924:	f010 0010 	ands.w	r0, r0, #16
  {
    __HAL_RCC_TIMCLKPRESCALER(PeriphClkInit->TIMPresSelection);
 8004928:	bf1f      	itttt	ne
 800492a:	4b4c      	ldrne	r3, [pc, #304]	; (8004a5c <HAL_RCCEx_PeriphCLKConfig+0x248>)
 800492c:	f894 202c 	ldrbne.w	r2, [r4, #44]	; 0x2c
 8004930:	601a      	strne	r2, [r3, #0]
  }
  return HAL_OK;
 8004932:	2000      	movne	r0, #0
 8004934:	e04e      	b.n	80049d4 <HAL_RCCEx_PeriphCLKConfig+0x1c0>
    __HAL_RCC_PLLI2S_DISABLE();
 8004936:	4d4a      	ldr	r5, [pc, #296]	; (8004a60 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 8004938:	4e46      	ldr	r6, [pc, #280]	; (8004a54 <HAL_RCCEx_PeriphCLKConfig+0x240>)
    __HAL_RCC_PLLI2S_DISABLE();
 800493a:	2300      	movs	r3, #0
 800493c:	602b      	str	r3, [r5, #0]
    tickstart = HAL_GetTick();
 800493e:	f7fe fb43 	bl	8002fc8 <HAL_GetTick>
 8004942:	4607      	mov	r7, r0
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 8004944:	6833      	ldr	r3, [r6, #0]
 8004946:	011b      	lsls	r3, r3, #4
 8004948:	d43e      	bmi.n	80049c8 <HAL_RCCEx_PeriphCLKConfig+0x1b4>
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == (RCC_PERIPHCLK_I2S))
 800494a:	6821      	ldr	r1, [r4, #0]
 800494c:	07cf      	lsls	r7, r1, #31
      __HAL_RCC_PLLI2S_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SR);
 800494e:	bf41      	itttt	mi
 8004950:	e9d4 2301 	ldrdmi	r2, r3, [r4, #4]
 8004954:	071b      	lslmi	r3, r3, #28
 8004956:	ea43 1382 	orrmi.w	r3, r3, r2, lsl #6
 800495a:	f8c6 3084 	strmi.w	r3, [r6, #132]	; 0x84
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLI2S) == (RCC_PERIPHCLK_SAI_PLLI2S))
 800495e:	078e      	lsls	r6, r1, #30
 8004960:	d515      	bpl.n	800498e <HAL_RCCEx_PeriphCLKConfig+0x17a>
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 8004962:	4a3c      	ldr	r2, [pc, #240]	; (8004a54 <HAL_RCCEx_PeriphCLKConfig+0x240>)
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SQ , tmpreg1);
 8004964:	68e3      	ldr	r3, [r4, #12]
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 8004966:	f8d2 0084 	ldr.w	r0, [r2, #132]	; 0x84
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SQ , tmpreg1);
 800496a:	6866      	ldr	r6, [r4, #4]
 800496c:	061b      	lsls	r3, r3, #24
 800496e:	f000 40e0 	and.w	r0, r0, #1879048192	; 0x70000000
 8004972:	ea43 1386 	orr.w	r3, r3, r6, lsl #6
 8004976:	4303      	orrs	r3, r0
 8004978:	f8c2 3084 	str.w	r3, [r2, #132]	; 0x84
      __HAL_RCC_PLLI2S_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLI2SDivQ);
 800497c:	f8d2 008c 	ldr.w	r0, [r2, #140]	; 0x8c
 8004980:	69e3      	ldr	r3, [r4, #28]
 8004982:	f020 001f 	bic.w	r0, r0, #31
 8004986:	3b01      	subs	r3, #1
 8004988:	4303      	orrs	r3, r0
 800498a:	f8c2 308c 	str.w	r3, [r2, #140]	; 0x8c
    if((PeriphClkInit->PeriphClockSelection & RCC_PERIPHCLK_PLLI2S) == RCC_PERIPHCLK_PLLI2S)
 800498e:	0648      	lsls	r0, r1, #25
 8004990:	d50a      	bpl.n	80049a8 <HAL_RCCEx_PeriphCLKConfig+0x194>
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN, PeriphClkInit->PLLI2S.PLLI2SQ, PeriphClkInit->PLLI2S.PLLI2SR);
 8004992:	68e3      	ldr	r3, [r4, #12]
 8004994:	6862      	ldr	r2, [r4, #4]
 8004996:	061b      	lsls	r3, r3, #24
 8004998:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 800499c:	68a2      	ldr	r2, [r4, #8]
 800499e:	ea43 7302 	orr.w	r3, r3, r2, lsl #28
 80049a2:	4a2c      	ldr	r2, [pc, #176]	; (8004a54 <HAL_RCCEx_PeriphCLKConfig+0x240>)
 80049a4:	f8c2 3084 	str.w	r3, [r2, #132]	; 0x84
    __HAL_RCC_PLLI2S_ENABLE();
 80049a8:	2301      	movs	r3, #1
 80049aa:	602b      	str	r3, [r5, #0]
    tickstart = HAL_GetTick();
 80049ac:	f7fe fb0c 	bl	8002fc8 <HAL_GetTick>
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 80049b0:	4d28      	ldr	r5, [pc, #160]	; (8004a54 <HAL_RCCEx_PeriphCLKConfig+0x240>)
    tickstart = HAL_GetTick();
 80049b2:	4606      	mov	r6, r0
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 80049b4:	682b      	ldr	r3, [r5, #0]
 80049b6:	0119      	lsls	r1, r3, #4
 80049b8:	f53f af33 	bmi.w	8004822 <HAL_RCCEx_PeriphCLKConfig+0xe>
      if((HAL_GetTick() - tickstart ) > PLLI2S_TIMEOUT_VALUE)
 80049bc:	f7fe fb04 	bl	8002fc8 <HAL_GetTick>
 80049c0:	1b80      	subs	r0, r0, r6
 80049c2:	2802      	cmp	r0, #2
 80049c4:	d9f6      	bls.n	80049b4 <HAL_RCCEx_PeriphCLKConfig+0x1a0>
 80049c6:	e004      	b.n	80049d2 <HAL_RCCEx_PeriphCLKConfig+0x1be>
      if((HAL_GetTick() - tickstart ) > PLLI2S_TIMEOUT_VALUE)
 80049c8:	f7fe fafe 	bl	8002fc8 <HAL_GetTick>
 80049cc:	1bc0      	subs	r0, r0, r7
 80049ce:	2802      	cmp	r0, #2
 80049d0:	d9b8      	bls.n	8004944 <HAL_RCCEx_PeriphCLKConfig+0x130>
        return HAL_TIMEOUT;
 80049d2:	2003      	movs	r0, #3
}
 80049d4:	b003      	add	sp, #12
 80049d6:	bdf0      	pop	{r4, r5, r6, r7, pc}
      if((HAL_GetTick() - tickstart ) > PLLSAI_TIMEOUT_VALUE)
 80049d8:	f7fe faf6 	bl	8002fc8 <HAL_GetTick>
 80049dc:	1bc0      	subs	r0, r0, r7
 80049de:	2802      	cmp	r0, #2
 80049e0:	f67f af2a 	bls.w	8004838 <HAL_RCCEx_PeriphCLKConfig+0x24>
 80049e4:	e7f5      	b.n	80049d2 <HAL_RCCEx_PeriphCLKConfig+0x1be>
      if((HAL_GetTick() - tickstart ) > PLLSAI_TIMEOUT_VALUE)
 80049e6:	f7fe faef 	bl	8002fc8 <HAL_GetTick>
 80049ea:	1b80      	subs	r0, r0, r6
 80049ec:	2802      	cmp	r0, #2
 80049ee:	f67f af5d 	bls.w	80048ac <HAL_RCCEx_PeriphCLKConfig+0x98>
 80049f2:	e7ee      	b.n	80049d2 <HAL_RCCEx_PeriphCLKConfig+0x1be>
      if((HAL_GetTick() - tickstart ) > RCC_DBP_TIMEOUT_VALUE)
 80049f4:	f7fe fae8 	bl	8002fc8 <HAL_GetTick>
 80049f8:	1b80      	subs	r0, r0, r6
 80049fa:	2802      	cmp	r0, #2
 80049fc:	f67f af71 	bls.w	80048e2 <HAL_RCCEx_PeriphCLKConfig+0xce>
 8004a00:	e7e7      	b.n	80049d2 <HAL_RCCEx_PeriphCLKConfig+0x1be>
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 8004a02:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 8004a04:	f402 7240 	and.w	r2, r2, #768	; 0x300
 8004a08:	4293      	cmp	r3, r2
 8004a0a:	f43f af74 	beq.w	80048f6 <HAL_RCCEx_PeriphCLKConfig+0xe2>
      tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 8004a0e:	6f2b      	ldr	r3, [r5, #112]	; 0x70
      __HAL_RCC_BACKUPRESET_FORCE();
 8004a10:	4a14      	ldr	r2, [pc, #80]	; (8004a64 <HAL_RCCEx_PeriphCLKConfig+0x250>)
 8004a12:	2101      	movs	r1, #1
 8004a14:	6011      	str	r1, [r2, #0]
      tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 8004a16:	f423 7340 	bic.w	r3, r3, #768	; 0x300
      __HAL_RCC_BACKUPRESET_RELEASE();
 8004a1a:	2100      	movs	r1, #0
 8004a1c:	6011      	str	r1, [r2, #0]
      RCC->BDCR = tmpreg1;
 8004a1e:	672b      	str	r3, [r5, #112]	; 0x70
      if(HAL_IS_BIT_SET(RCC->BDCR, RCC_BDCR_LSEON))
 8004a20:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 8004a22:	07da      	lsls	r2, r3, #31
 8004a24:	f57f af67 	bpl.w	80048f6 <HAL_RCCEx_PeriphCLKConfig+0xe2>
        tickstart = HAL_GetTick();
 8004a28:	f7fe face 	bl	8002fc8 <HAL_GetTick>
          if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8004a2c:	f241 3788 	movw	r7, #5000	; 0x1388
        tickstart = HAL_GetTick();
 8004a30:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8004a32:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 8004a34:	079b      	lsls	r3, r3, #30
 8004a36:	f53f af5e 	bmi.w	80048f6 <HAL_RCCEx_PeriphCLKConfig+0xe2>
          if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8004a3a:	f7fe fac5 	bl	8002fc8 <HAL_GetTick>
 8004a3e:	1b80      	subs	r0, r0, r6
 8004a40:	42b8      	cmp	r0, r7
 8004a42:	d9f6      	bls.n	8004a32 <HAL_RCCEx_PeriphCLKConfig+0x21e>
 8004a44:	e7c5      	b.n	80049d2 <HAL_RCCEx_PeriphCLKConfig+0x1be>
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 8004a46:	6891      	ldr	r1, [r2, #8]
 8004a48:	f421 11f8 	bic.w	r1, r1, #2031616	; 0x1f0000
 8004a4c:	e763      	b.n	8004916 <HAL_RCCEx_PeriphCLKConfig+0x102>
 8004a4e:	bf00      	nop
 8004a50:	42470070 	.word	0x42470070
 8004a54:	40023800 	.word	0x40023800
 8004a58:	40007000 	.word	0x40007000
 8004a5c:	424711e0 	.word	0x424711e0
 8004a60:	42470068 	.word	0x42470068
 8004a64:	42470e40 	.word	0x42470e40

08004a68 <HAL_SDRAM_Init>:
  *                the configuration information for SDRAM module.
  * @param  Timing Pointer to SDRAM control timing structure 
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_Init(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_TimingTypeDef *Timing)
{   
 8004a68:	b538      	push	{r3, r4, r5, lr}
 8004a6a:	460d      	mov	r5, r1
  /* Check the SDRAM handle parameter */
  if(hsdram == NULL)
 8004a6c:	4604      	mov	r4, r0
 8004a6e:	b1c8      	cbz	r0, 8004aa4 <HAL_SDRAM_Init+0x3c>
  {
    return HAL_ERROR;
  }
  
  if(hsdram->State == HAL_SDRAM_STATE_RESET)
 8004a70:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 8004a74:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8004a78:	b91b      	cbnz	r3, 8004a82 <HAL_SDRAM_Init+0x1a>
  {  
    /* Allocate lock resource and initialize it */
    hsdram->Lock = HAL_UNLOCKED;
 8004a7a:	f880 202d 	strb.w	r2, [r0, #45]	; 0x2d

    /* Init the low level hardware */
    hsdram->MspInitCallback(hsdram);
#else
    /* Initialize the low level hardware (MSP) */
    HAL_SDRAM_MspInit(hsdram);
 8004a7e:	f7fd f86b 	bl	8001b58 <HAL_SDRAM_MspInit>
#endif
  }
  
  /* Initialize the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;
 8004a82:	2302      	movs	r3, #2
 8004a84:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  
  /* Initialize SDRAM control Interface */
  FMC_SDRAM_Init(hsdram->Instance, &(hsdram->Init));
 8004a88:	1d21      	adds	r1, r4, #4
 8004a8a:	6820      	ldr	r0, [r4, #0]
 8004a8c:	f000 fc6c 	bl	8005368 <FMC_SDRAM_Init>
  
  /* Initialize SDRAM timing Interface */
  FMC_SDRAM_Timing_Init(hsdram->Instance, Timing, hsdram->Init.SDBank); 
 8004a90:	6862      	ldr	r2, [r4, #4]
 8004a92:	6820      	ldr	r0, [r4, #0]
 8004a94:	4629      	mov	r1, r5
 8004a96:	f000 fc9d 	bl	80053d4 <FMC_SDRAM_Timing_Init>
  
  /* Update the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_READY;
 8004a9a:	2301      	movs	r3, #1
 8004a9c:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  
  return HAL_OK;
 8004aa0:	2000      	movs	r0, #0
}
 8004aa2:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 8004aa4:	2001      	movs	r0, #1
 8004aa6:	e7fc      	b.n	8004aa2 <HAL_SDRAM_Init+0x3a>

08004aa8 <HAL_SDRAM_SendCommand>:
  * @param  Command SDRAM command structure
  * @param  Timeout Timeout duration
  * @retval HAL status
  */  
HAL_StatusTypeDef HAL_SDRAM_SendCommand(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_CommandTypeDef *Command, uint32_t Timeout)
{
 8004aa8:	b538      	push	{r3, r4, r5, lr}
 8004aaa:	4604      	mov	r4, r0
  /* Check the SDRAM controller state */
  if(hsdram->State == HAL_SDRAM_STATE_BUSY)
 8004aac:	f890 002c 	ldrb.w	r0, [r0, #44]	; 0x2c
 8004ab0:	b2c0      	uxtb	r0, r0
 8004ab2:	2802      	cmp	r0, #2
{
 8004ab4:	460d      	mov	r5, r1
  if(hsdram->State == HAL_SDRAM_STATE_BUSY)
 8004ab6:	d00d      	beq.n	8004ad4 <HAL_SDRAM_SendCommand+0x2c>
  {
    return HAL_BUSY;
  }
  
  /* Update the SDRAM state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;
 8004ab8:	2302      	movs	r3, #2
 8004aba:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  
  /* Send SDRAM command */
  FMC_SDRAM_SendCommand(hsdram->Instance, Command, Timeout);
 8004abe:	6820      	ldr	r0, [r4, #0]
 8004ac0:	f000 fcc5 	bl	800544e <FMC_SDRAM_SendCommand>
  
  /* Update the SDRAM controller state */
  if(Command->CommandMode == FMC_SDRAM_CMD_PALL)
 8004ac4:	682b      	ldr	r3, [r5, #0]
 8004ac6:	2b02      	cmp	r3, #2
  {
    hsdram->State = HAL_SDRAM_STATE_PRECHARGED;
 8004ac8:	bf0c      	ite	eq
 8004aca:	2305      	moveq	r3, #5
  }
  else
  {
    hsdram->State = HAL_SDRAM_STATE_READY;
 8004acc:	2301      	movne	r3, #1
 8004ace:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  }
  
  return HAL_OK;  
 8004ad2:	2000      	movs	r0, #0
}
 8004ad4:	bd38      	pop	{r3, r4, r5, pc}

08004ad6 <HAL_SDRAM_ProgramRefreshRate>:
  *                the configuration information for SDRAM module.  
  * @param  RefreshRate The SDRAM refresh rate value       
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_ProgramRefreshRate(SDRAM_HandleTypeDef *hsdram, uint32_t RefreshRate)
{
 8004ad6:	b510      	push	{r4, lr}
 8004ad8:	4604      	mov	r4, r0
  /* Check the SDRAM controller state */
  if(hsdram->State == HAL_SDRAM_STATE_BUSY)
 8004ada:	f890 002c 	ldrb.w	r0, [r0, #44]	; 0x2c
 8004ade:	b2c0      	uxtb	r0, r0
 8004ae0:	2802      	cmp	r0, #2
 8004ae2:	d009      	beq.n	8004af8 <HAL_SDRAM_ProgramRefreshRate+0x22>
  {
    return HAL_BUSY;
  } 
  
  /* Update the SDRAM state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;
 8004ae4:	2302      	movs	r3, #2
 8004ae6:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  
  /* Program the refresh rate */
  FMC_SDRAM_ProgramRefreshRate(hsdram->Instance ,RefreshRate);
 8004aea:	6820      	ldr	r0, [r4, #0]
 8004aec:	f000 fcd4 	bl	8005498 <FMC_SDRAM_ProgramRefreshRate>
  
  /* Update the SDRAM state */
  hsdram->State = HAL_SDRAM_STATE_READY;
 8004af0:	2301      	movs	r3, #1
 8004af2:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  
  return HAL_OK;   
 8004af6:	2000      	movs	r0, #0
}
 8004af8:	bd10      	pop	{r4, pc}

08004afa <SPI_WaitFlagStateUntilTimeout.constprop.7>:
  * @param  State flag state to check
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_WaitFlagStateUntilTimeout(SPI_HandleTypeDef *hspi, uint32_t Flag, FlagStatus State,
 8004afa:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8004afc:	4604      	mov	r4, r0
 8004afe:	460e      	mov	r6, r1
 8004b00:	4615      	mov	r5, r2
 8004b02:	461f      	mov	r7, r3
                                                       uint32_t Timeout, uint32_t Tickstart)
{
  while ((__HAL_SPI_GET_FLAG(hspi, Flag) ? SET : RESET) != State)
 8004b04:	6821      	ldr	r1, [r4, #0]
 8004b06:	688a      	ldr	r2, [r1, #8]
 8004b08:	ea36 0302 	bics.w	r3, r6, r2
 8004b0c:	d001      	beq.n	8004b12 <SPI_WaitFlagStateUntilTimeout.constprop.7+0x18>
        return HAL_TIMEOUT;
      }
    }
  }

  return HAL_OK;
 8004b0e:	2000      	movs	r0, #0
 8004b10:	e02d      	b.n	8004b6e <SPI_WaitFlagStateUntilTimeout.constprop.7+0x74>
    if (Timeout != HAL_MAX_DELAY)
 8004b12:	1c6b      	adds	r3, r5, #1
 8004b14:	d0f7      	beq.n	8004b06 <SPI_WaitFlagStateUntilTimeout.constprop.7+0xc>
      if (((HAL_GetTick() - Tickstart) >= Timeout) || (Timeout == 0U))
 8004b16:	f7fe fa57 	bl	8002fc8 <HAL_GetTick>
 8004b1a:	1bc0      	subs	r0, r0, r7
 8004b1c:	4285      	cmp	r5, r0
 8004b1e:	d8f1      	bhi.n	8004b04 <SPI_WaitFlagStateUntilTimeout.constprop.7+0xa>
        __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_TXE | SPI_IT_RXNE | SPI_IT_ERR));
 8004b20:	6823      	ldr	r3, [r4, #0]
 8004b22:	685a      	ldr	r2, [r3, #4]
 8004b24:	f022 02e0 	bic.w	r2, r2, #224	; 0xe0
 8004b28:	605a      	str	r2, [r3, #4]
        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8004b2a:	6862      	ldr	r2, [r4, #4]
 8004b2c:	f5b2 7f82 	cmp.w	r2, #260	; 0x104
 8004b30:	d10a      	bne.n	8004b48 <SPI_WaitFlagStateUntilTimeout.constprop.7+0x4e>
 8004b32:	68a2      	ldr	r2, [r4, #8]
 8004b34:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
 8004b38:	d002      	beq.n	8004b40 <SPI_WaitFlagStateUntilTimeout.constprop.7+0x46>
                                                     || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXONLY)))
 8004b3a:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
 8004b3e:	d103      	bne.n	8004b48 <SPI_WaitFlagStateUntilTimeout.constprop.7+0x4e>
          __HAL_SPI_DISABLE(hspi);
 8004b40:	681a      	ldr	r2, [r3, #0]
 8004b42:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8004b46:	601a      	str	r2, [r3, #0]
        if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
 8004b48:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 8004b4a:	f5b2 5f00 	cmp.w	r2, #8192	; 0x2000
 8004b4e:	d107      	bne.n	8004b60 <SPI_WaitFlagStateUntilTimeout.constprop.7+0x66>
          SPI_RESET_CRC(hspi);
 8004b50:	681a      	ldr	r2, [r3, #0]
 8004b52:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 8004b56:	601a      	str	r2, [r3, #0]
 8004b58:	681a      	ldr	r2, [r3, #0]
 8004b5a:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 8004b5e:	601a      	str	r2, [r3, #0]
        hspi->State = HAL_SPI_STATE_READY;
 8004b60:	2301      	movs	r3, #1
 8004b62:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
        __HAL_UNLOCK(hspi);
 8004b66:	2300      	movs	r3, #0
 8004b68:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
 8004b6c:	2003      	movs	r0, #3
}
 8004b6e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08004b70 <SPI_EndRxTransaction>:
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_EndRxTransaction(SPI_HandleTypeDef *hspi,  uint32_t Timeout, uint32_t Tickstart)
{
 8004b70:	b538      	push	{r3, r4, r5, lr}
 8004b72:	4613      	mov	r3, r2
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8004b74:	6842      	ldr	r2, [r0, #4]
 8004b76:	f5b2 7f82 	cmp.w	r2, #260	; 0x104
{
 8004b7a:	4604      	mov	r4, r0
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8004b7c:	d11f      	bne.n	8004bbe <SPI_EndRxTransaction+0x4e>
 8004b7e:	6882      	ldr	r2, [r0, #8]
 8004b80:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
 8004b84:	d002      	beq.n	8004b8c <SPI_EndRxTransaction+0x1c>
                                               || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXONLY)))
 8004b86:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
 8004b8a:	d107      	bne.n	8004b9c <SPI_EndRxTransaction+0x2c>
  {
    /* Disable SPI peripheral */
    __HAL_SPI_DISABLE(hspi);
 8004b8c:	6825      	ldr	r5, [r4, #0]
 8004b8e:	6828      	ldr	r0, [r5, #0]
  }

  /* Erratasheet: BSY bit may stay high at the end of a data transfer in Slave mode */
  if (hspi->Init.Mode == SPI_MODE_MASTER)
  {
    if (hspi->Init.Direction != SPI_DIRECTION_2LINES_RXONLY)
 8004b90:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
    __HAL_SPI_DISABLE(hspi);
 8004b94:	f020 0040 	bic.w	r0, r0, #64	; 0x40
 8004b98:	6028      	str	r0, [r5, #0]
    if (hspi->Init.Direction != SPI_DIRECTION_2LINES_RXONLY)
 8004b9a:	d007      	beq.n	8004bac <SPI_EndRxTransaction+0x3c>
    {
      /* Control the BSY flag */
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 8004b9c:	460a      	mov	r2, r1
 8004b9e:	2180      	movs	r1, #128	; 0x80
 8004ba0:	4620      	mov	r0, r4
 8004ba2:	f7ff ffaa 	bl	8004afa <SPI_WaitFlagStateUntilTimeout.constprop.7>
 8004ba6:	b920      	cbnz	r0, 8004bb2 <SPI_EndRxTransaction+0x42>
    {
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
      return HAL_TIMEOUT;
    }
  }
  return HAL_OK;
 8004ba8:	2000      	movs	r0, #0
}
 8004baa:	bd38      	pop	{r3, r4, r5, pc}
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 8004bac:	460a      	mov	r2, r1
 8004bae:	2101      	movs	r1, #1
 8004bb0:	e7f6      	b.n	8004ba0 <SPI_EndRxTransaction+0x30>
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 8004bb2:	6d63      	ldr	r3, [r4, #84]	; 0x54
 8004bb4:	f043 0320 	orr.w	r3, r3, #32
 8004bb8:	6563      	str	r3, [r4, #84]	; 0x54
      return HAL_TIMEOUT;
 8004bba:	2003      	movs	r0, #3
 8004bbc:	e7f5      	b.n	8004baa <SPI_EndRxTransaction+0x3a>
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 8004bbe:	460a      	mov	r2, r1
 8004bc0:	2101      	movs	r1, #1
 8004bc2:	e7ee      	b.n	8004ba2 <SPI_EndRxTransaction+0x32>

08004bc4 <SPI_EndRxTxTransaction>:
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_EndRxTxTransaction(SPI_HandleTypeDef *hspi, uint32_t Timeout, uint32_t Tickstart)
{
 8004bc4:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8004bc6:	4613      	mov	r3, r2
  /* Timeout in µs */
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 8004bc8:	4a12      	ldr	r2, [pc, #72]	; (8004c14 <SPI_EndRxTxTransaction+0x50>)
 8004bca:	4e13      	ldr	r6, [pc, #76]	; (8004c18 <SPI_EndRxTxTransaction+0x54>)
 8004bcc:	6815      	ldr	r5, [r2, #0]
  /* Erratasheet: BSY bit may stay high at the end of a data transfer in Slave mode */
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 8004bce:	6842      	ldr	r2, [r0, #4]
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 8004bd0:	fbb5 f6f6 	udiv	r6, r5, r6
 8004bd4:	f44f 757a 	mov.w	r5, #1000	; 0x3e8
 8004bd8:	4375      	muls	r5, r6
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 8004bda:	f5b2 7f82 	cmp.w	r2, #260	; 0x104
{
 8004bde:	4604      	mov	r4, r0
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 8004be0:	9501      	str	r5, [sp, #4]
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 8004be2:	d10b      	bne.n	8004bfc <SPI_EndRxTxTransaction+0x38>
  {
    /* Control the BSY flag */
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 8004be4:	460a      	mov	r2, r1
 8004be6:	2180      	movs	r1, #128	; 0x80
 8004be8:	f7ff ff87 	bl	8004afa <SPI_WaitFlagStateUntilTimeout.constprop.7>
 8004bec:	b178      	cbz	r0, 8004c0e <SPI_EndRxTxTransaction+0x4a>
    {
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 8004bee:	6d63      	ldr	r3, [r4, #84]	; 0x54
 8004bf0:	f043 0320 	orr.w	r3, r3, #32
 8004bf4:	6563      	str	r3, [r4, #84]	; 0x54
      return HAL_TIMEOUT;
 8004bf6:	2003      	movs	r0, #3
      count--;
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
  }

  return HAL_OK;
}
 8004bf8:	b002      	add	sp, #8
 8004bfa:	bd70      	pop	{r4, r5, r6, pc}
      if (count == 0U)
 8004bfc:	9b01      	ldr	r3, [sp, #4]
 8004bfe:	b133      	cbz	r3, 8004c0e <SPI_EndRxTxTransaction+0x4a>
      count--;
 8004c00:	9b01      	ldr	r3, [sp, #4]
 8004c02:	3b01      	subs	r3, #1
 8004c04:	9301      	str	r3, [sp, #4]
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
 8004c06:	6823      	ldr	r3, [r4, #0]
 8004c08:	689b      	ldr	r3, [r3, #8]
 8004c0a:	061b      	lsls	r3, r3, #24
 8004c0c:	d4f6      	bmi.n	8004bfc <SPI_EndRxTxTransaction+0x38>
  return HAL_OK;
 8004c0e:	2000      	movs	r0, #0
 8004c10:	e7f2      	b.n	8004bf8 <SPI_EndRxTxTransaction+0x34>
 8004c12:	bf00      	nop
 8004c14:	20000074 	.word	0x20000074
 8004c18:	016e3600 	.word	0x016e3600

08004c1c <HAL_SPI_Init>:
{
 8004c1c:	b510      	push	{r4, lr}
  if (hspi == NULL)
 8004c1e:	4604      	mov	r4, r0
 8004c20:	2800      	cmp	r0, #0
 8004c22:	d036      	beq.n	8004c92 <HAL_SPI_Init+0x76>
  hspi->Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 8004c24:	2300      	movs	r3, #0
 8004c26:	6283      	str	r3, [r0, #40]	; 0x28
  if (hspi->State == HAL_SPI_STATE_RESET)
 8004c28:	f890 3051 	ldrb.w	r3, [r0, #81]	; 0x51
 8004c2c:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8004c30:	b91b      	cbnz	r3, 8004c3a <HAL_SPI_Init+0x1e>
    hspi->Lock = HAL_UNLOCKED;
 8004c32:	f880 2050 	strb.w	r2, [r0, #80]	; 0x50
    HAL_SPI_MspInit(hspi);
 8004c36:	f7fc ff59 	bl	8001aec <HAL_SPI_MspInit>
  __HAL_SPI_DISABLE(hspi);
 8004c3a:	6821      	ldr	r1, [r4, #0]
  WRITE_REG(hspi->Instance->CR1, (hspi->Init.Mode | hspi->Init.Direction | hspi->Init.DataSize |
 8004c3c:	69a2      	ldr	r2, [r4, #24]
  hspi->State = HAL_SPI_STATE_BUSY;
 8004c3e:	2302      	movs	r3, #2
 8004c40:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
  __HAL_SPI_DISABLE(hspi);
 8004c44:	680b      	ldr	r3, [r1, #0]
 8004c46:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 8004c4a:	600b      	str	r3, [r1, #0]
  WRITE_REG(hspi->Instance->CR1, (hspi->Init.Mode | hspi->Init.Direction | hspi->Init.DataSize |
 8004c4c:	e9d4 3001 	ldrd	r3, r0, [r4, #4]
 8004c50:	4303      	orrs	r3, r0
 8004c52:	68e0      	ldr	r0, [r4, #12]
 8004c54:	4303      	orrs	r3, r0
 8004c56:	6920      	ldr	r0, [r4, #16]
 8004c58:	4303      	orrs	r3, r0
 8004c5a:	6960      	ldr	r0, [r4, #20]
 8004c5c:	4303      	orrs	r3, r0
 8004c5e:	69e0      	ldr	r0, [r4, #28]
 8004c60:	4303      	orrs	r3, r0
 8004c62:	6a20      	ldr	r0, [r4, #32]
 8004c64:	4303      	orrs	r3, r0
 8004c66:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 8004c68:	4303      	orrs	r3, r0
 8004c6a:	f402 7000 	and.w	r0, r2, #512	; 0x200
 8004c6e:	4303      	orrs	r3, r0
 8004c70:	600b      	str	r3, [r1, #0]
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | hspi->Init.TIMode));
 8004c72:	0c12      	lsrs	r2, r2, #16
 8004c74:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8004c76:	f002 0204 	and.w	r2, r2, #4
 8004c7a:	431a      	orrs	r2, r3
 8004c7c:	604a      	str	r2, [r1, #4]
  CLEAR_BIT(hspi->Instance->I2SCFGR, SPI_I2SCFGR_I2SMOD);
 8004c7e:	69cb      	ldr	r3, [r1, #28]
 8004c80:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 8004c84:	61cb      	str	r3, [r1, #28]
  hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 8004c86:	2000      	movs	r0, #0
  hspi->State     = HAL_SPI_STATE_READY;
 8004c88:	2301      	movs	r3, #1
  hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 8004c8a:	6560      	str	r0, [r4, #84]	; 0x54
  hspi->State     = HAL_SPI_STATE_READY;
 8004c8c:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
}
 8004c90:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 8004c92:	2001      	movs	r0, #1
 8004c94:	e7fc      	b.n	8004c90 <HAL_SPI_Init+0x74>

08004c96 <HAL_SPI_Transmit>:
{
 8004c96:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8004c9a:	461e      	mov	r6, r3
  __HAL_LOCK(hspi);
 8004c9c:	f890 3050 	ldrb.w	r3, [r0, #80]	; 0x50
 8004ca0:	2b01      	cmp	r3, #1
{
 8004ca2:	4604      	mov	r4, r0
 8004ca4:	460d      	mov	r5, r1
 8004ca6:	4690      	mov	r8, r2
  __HAL_LOCK(hspi);
 8004ca8:	f000 809b 	beq.w	8004de2 <HAL_SPI_Transmit+0x14c>
 8004cac:	2301      	movs	r3, #1
 8004cae:	f880 3050 	strb.w	r3, [r0, #80]	; 0x50
  tickstart = HAL_GetTick();
 8004cb2:	f7fe f989 	bl	8002fc8 <HAL_GetTick>
 8004cb6:	4607      	mov	r7, r0
  if (hspi->State != HAL_SPI_STATE_READY)
 8004cb8:	f894 0051 	ldrb.w	r0, [r4, #81]	; 0x51
 8004cbc:	b2c0      	uxtb	r0, r0
 8004cbe:	2801      	cmp	r0, #1
 8004cc0:	f040 808d 	bne.w	8004dde <HAL_SPI_Transmit+0x148>
  if ((pData == NULL) || (Size == 0U))
 8004cc4:	2d00      	cmp	r5, #0
 8004cc6:	d05d      	beq.n	8004d84 <HAL_SPI_Transmit+0xee>
 8004cc8:	f1b8 0f00 	cmp.w	r8, #0
 8004ccc:	d05a      	beq.n	8004d84 <HAL_SPI_Transmit+0xee>
  hspi->State       = HAL_SPI_STATE_BUSY_TX;
 8004cce:	2303      	movs	r3, #3
 8004cd0:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 8004cd4:	2000      	movs	r0, #0
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8004cd6:	68a3      	ldr	r3, [r4, #8]
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 8004cd8:	6560      	str	r0, [r4, #84]	; 0x54
  hspi->pRxBuffPtr  = (uint8_t *)NULL;
 8004cda:	63a0      	str	r0, [r4, #56]	; 0x38
  hspi->TxXferCount = Size;
 8004cdc:	f8a4 8036 	strh.w	r8, [r4, #54]	; 0x36
  hspi->RxXferSize  = 0U;
 8004ce0:	87a0      	strh	r0, [r4, #60]	; 0x3c
  hspi->RxXferCount = 0U;
 8004ce2:	87e0      	strh	r0, [r4, #62]	; 0x3e
  hspi->RxISR       = NULL;
 8004ce4:	e9c4 0010 	strd	r0, r0, [r4, #64]	; 0x40
 8004ce8:	6820      	ldr	r0, [r4, #0]
  hspi->pTxBuffPtr  = (uint8_t *)pData;
 8004cea:	6325      	str	r5, [r4, #48]	; 0x30
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8004cec:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
    SPI_1LINE_TX(hspi);
 8004cf0:	bf08      	it	eq
 8004cf2:	6803      	ldreq	r3, [r0, #0]
  hspi->TxXferSize  = Size;
 8004cf4:	f8a4 8034 	strh.w	r8, [r4, #52]	; 0x34
    SPI_1LINE_TX(hspi);
 8004cf8:	bf04      	itt	eq
 8004cfa:	f443 4380 	orreq.w	r3, r3, #16384	; 0x4000
 8004cfe:	6003      	streq	r3, [r0, #0]
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 8004d00:	6803      	ldr	r3, [r0, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 8004d02:	68e2      	ldr	r2, [r4, #12]
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 8004d04:	065b      	lsls	r3, r3, #25
    __HAL_SPI_ENABLE(hspi);
 8004d06:	bf5e      	ittt	pl
 8004d08:	6803      	ldrpl	r3, [r0, #0]
 8004d0a:	f043 0340 	orrpl.w	r3, r3, #64	; 0x40
 8004d0e:	6003      	strpl	r3, [r0, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 8004d10:	f5b2 6f00 	cmp.w	r2, #2048	; 0x800
 8004d14:	6863      	ldr	r3, [r4, #4]
 8004d16:	d13e      	bne.n	8004d96 <HAL_SPI_Transmit+0x100>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 8004d18:	b113      	cbz	r3, 8004d20 <HAL_SPI_Transmit+0x8a>
 8004d1a:	f1b8 0f01 	cmp.w	r8, #1
 8004d1e:	d107      	bne.n	8004d30 <HAL_SPI_Transmit+0x9a>
      hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 8004d20:	f835 3b02 	ldrh.w	r3, [r5], #2
 8004d24:	60c3      	str	r3, [r0, #12]
      hspi->pTxBuffPtr += sizeof(uint16_t);
 8004d26:	6325      	str	r5, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 8004d28:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8004d2a:	3b01      	subs	r3, #1
 8004d2c:	b29b      	uxth	r3, r3
 8004d2e:	86e3      	strh	r3, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 8004d30:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8004d32:	b29b      	uxth	r3, r3
 8004d34:	b9a3      	cbnz	r3, 8004d60 <HAL_SPI_Transmit+0xca>
  if (SPI_EndRxTxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 8004d36:	463a      	mov	r2, r7
 8004d38:	4631      	mov	r1, r6
 8004d3a:	4620      	mov	r0, r4
 8004d3c:	f7ff ff42 	bl	8004bc4 <SPI_EndRxTxTransaction>
 8004d40:	2800      	cmp	r0, #0
 8004d42:	d149      	bne.n	8004dd8 <HAL_SPI_Transmit+0x142>
  if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 8004d44:	68a3      	ldr	r3, [r4, #8]
 8004d46:	b933      	cbnz	r3, 8004d56 <HAL_SPI_Transmit+0xc0>
    __HAL_SPI_CLEAR_OVRFLAG(hspi);
 8004d48:	9301      	str	r3, [sp, #4]
 8004d4a:	6823      	ldr	r3, [r4, #0]
 8004d4c:	68da      	ldr	r2, [r3, #12]
 8004d4e:	9201      	str	r2, [sp, #4]
 8004d50:	689b      	ldr	r3, [r3, #8]
 8004d52:	9301      	str	r3, [sp, #4]
 8004d54:	9b01      	ldr	r3, [sp, #4]
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 8004d56:	6d60      	ldr	r0, [r4, #84]	; 0x54
    errorcode = HAL_BUSY;
 8004d58:	3000      	adds	r0, #0
 8004d5a:	bf18      	it	ne
 8004d5c:	2001      	movne	r0, #1
error:
 8004d5e:	e011      	b.n	8004d84 <HAL_SPI_Transmit+0xee>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 8004d60:	6822      	ldr	r2, [r4, #0]
 8004d62:	6893      	ldr	r3, [r2, #8]
 8004d64:	0798      	lsls	r0, r3, #30
 8004d66:	d505      	bpl.n	8004d74 <HAL_SPI_Transmit+0xde>
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 8004d68:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8004d6a:	f833 1b02 	ldrh.w	r1, [r3], #2
 8004d6e:	60d1      	str	r1, [r2, #12]
        hspi->pTxBuffPtr += sizeof(uint16_t);
 8004d70:	6323      	str	r3, [r4, #48]	; 0x30
 8004d72:	e7d9      	b.n	8004d28 <HAL_SPI_Transmit+0x92>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 8004d74:	f7fe f928 	bl	8002fc8 <HAL_GetTick>
 8004d78:	1bc0      	subs	r0, r0, r7
 8004d7a:	42b0      	cmp	r0, r6
 8004d7c:	d3d8      	bcc.n	8004d30 <HAL_SPI_Transmit+0x9a>
 8004d7e:	1c71      	adds	r1, r6, #1
 8004d80:	d0d6      	beq.n	8004d30 <HAL_SPI_Transmit+0x9a>
          errorcode = HAL_TIMEOUT;
 8004d82:	2003      	movs	r0, #3
  hspi->State = HAL_SPI_STATE_READY;
 8004d84:	2301      	movs	r3, #1
 8004d86:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
  __HAL_UNLOCK(hspi);
 8004d8a:	2300      	movs	r3, #0
 8004d8c:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
}
 8004d90:	b002      	add	sp, #8
 8004d92:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 8004d96:	b113      	cbz	r3, 8004d9e <HAL_SPI_Transmit+0x108>
 8004d98:	f1b8 0f01 	cmp.w	r8, #1
 8004d9c:	d108      	bne.n	8004db0 <HAL_SPI_Transmit+0x11a>
      *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 8004d9e:	782b      	ldrb	r3, [r5, #0]
 8004da0:	7303      	strb	r3, [r0, #12]
        hspi->pTxBuffPtr += sizeof(uint8_t);
 8004da2:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8004da4:	3301      	adds	r3, #1
 8004da6:	6323      	str	r3, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 8004da8:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8004daa:	3b01      	subs	r3, #1
 8004dac:	b29b      	uxth	r3, r3
 8004dae:	86e3      	strh	r3, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 8004db0:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8004db2:	b29b      	uxth	r3, r3
 8004db4:	2b00      	cmp	r3, #0
 8004db6:	d0be      	beq.n	8004d36 <HAL_SPI_Transmit+0xa0>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 8004db8:	6823      	ldr	r3, [r4, #0]
 8004dba:	689a      	ldr	r2, [r3, #8]
 8004dbc:	0792      	lsls	r2, r2, #30
 8004dbe:	d503      	bpl.n	8004dc8 <HAL_SPI_Transmit+0x132>
        *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 8004dc0:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8004dc2:	7812      	ldrb	r2, [r2, #0]
 8004dc4:	731a      	strb	r2, [r3, #12]
 8004dc6:	e7ec      	b.n	8004da2 <HAL_SPI_Transmit+0x10c>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 8004dc8:	f7fe f8fe 	bl	8002fc8 <HAL_GetTick>
 8004dcc:	1bc0      	subs	r0, r0, r7
 8004dce:	42b0      	cmp	r0, r6
 8004dd0:	d3ee      	bcc.n	8004db0 <HAL_SPI_Transmit+0x11a>
 8004dd2:	1c73      	adds	r3, r6, #1
 8004dd4:	d0ec      	beq.n	8004db0 <HAL_SPI_Transmit+0x11a>
 8004dd6:	e7d4      	b.n	8004d82 <HAL_SPI_Transmit+0xec>
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 8004dd8:	2320      	movs	r3, #32
 8004dda:	6563      	str	r3, [r4, #84]	; 0x54
 8004ddc:	e7b2      	b.n	8004d44 <HAL_SPI_Transmit+0xae>
    errorcode = HAL_BUSY;
 8004dde:	2002      	movs	r0, #2
 8004de0:	e7d0      	b.n	8004d84 <HAL_SPI_Transmit+0xee>
  __HAL_LOCK(hspi);
 8004de2:	2002      	movs	r0, #2
 8004de4:	e7d4      	b.n	8004d90 <HAL_SPI_Transmit+0xfa>

08004de6 <HAL_SPI_TransmitReceive>:
{
 8004de6:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8004dea:	461e      	mov	r6, r3
  __HAL_LOCK(hspi);
 8004dec:	f890 3050 	ldrb.w	r3, [r0, #80]	; 0x50
{
 8004df0:	9f0a      	ldr	r7, [sp, #40]	; 0x28
  __HAL_LOCK(hspi);
 8004df2:	2b01      	cmp	r3, #1
{
 8004df4:	4604      	mov	r4, r0
 8004df6:	460d      	mov	r5, r1
 8004df8:	4691      	mov	r9, r2
  __HAL_LOCK(hspi);
 8004dfa:	f000 80e2 	beq.w	8004fc2 <HAL_SPI_TransmitReceive+0x1dc>
 8004dfe:	2301      	movs	r3, #1
 8004e00:	f880 3050 	strb.w	r3, [r0, #80]	; 0x50
  tickstart = HAL_GetTick();
 8004e04:	f7fe f8e0 	bl	8002fc8 <HAL_GetTick>
  tmp_state           = hspi->State;
 8004e08:	f894 3051 	ldrb.w	r3, [r4, #81]	; 0x51
  tmp_mode            = hspi->Init.Mode;
 8004e0c:	6861      	ldr	r1, [r4, #4]
  tmp_state           = hspi->State;
 8004e0e:	b2db      	uxtb	r3, r3
  if (!((tmp_state == HAL_SPI_STATE_READY) || \
 8004e10:	2b01      	cmp	r3, #1
  tickstart = HAL_GetTick();
 8004e12:	4680      	mov	r8, r0
  if (!((tmp_state == HAL_SPI_STATE_READY) || \
 8004e14:	d00a      	beq.n	8004e2c <HAL_SPI_TransmitReceive+0x46>
 8004e16:	f5b1 7f82 	cmp.w	r1, #260	; 0x104
 8004e1a:	f040 80d0 	bne.w	8004fbe <HAL_SPI_TransmitReceive+0x1d8>
        ((tmp_mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES) && (tmp_state == HAL_SPI_STATE_BUSY_RX))))
 8004e1e:	68a0      	ldr	r0, [r4, #8]
 8004e20:	2800      	cmp	r0, #0
 8004e22:	f040 80cc 	bne.w	8004fbe <HAL_SPI_TransmitReceive+0x1d8>
 8004e26:	2b04      	cmp	r3, #4
 8004e28:	f040 80c9 	bne.w	8004fbe <HAL_SPI_TransmitReceive+0x1d8>
  if ((pTxData == NULL) || (pRxData == NULL) || (Size == 0U))
 8004e2c:	2d00      	cmp	r5, #0
 8004e2e:	f000 80c4 	beq.w	8004fba <HAL_SPI_TransmitReceive+0x1d4>
 8004e32:	f1b9 0f00 	cmp.w	r9, #0
 8004e36:	f000 80c0 	beq.w	8004fba <HAL_SPI_TransmitReceive+0x1d4>
 8004e3a:	2e00      	cmp	r6, #0
 8004e3c:	f000 80bd 	beq.w	8004fba <HAL_SPI_TransmitReceive+0x1d4>
  if (hspi->State != HAL_SPI_STATE_BUSY_RX)
 8004e40:	f894 3051 	ldrb.w	r3, [r4, #81]	; 0x51
  hspi->pRxBuffPtr  = (uint8_t *)pRxData;
 8004e44:	f8c4 9038 	str.w	r9, [r4, #56]	; 0x38
  if (hspi->State != HAL_SPI_STATE_BUSY_RX)
 8004e48:	2b04      	cmp	r3, #4
    hspi->State = HAL_SPI_STATE_BUSY_TX_RX;
 8004e4a:	bf1c      	itt	ne
 8004e4c:	2305      	movne	r3, #5
 8004e4e:	f884 3051 	strbne.w	r3, [r4, #81]	; 0x51
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 8004e52:	2300      	movs	r3, #0
 8004e54:	6563      	str	r3, [r4, #84]	; 0x54
  hspi->TxISR       = NULL;
 8004e56:	e9c4 3310 	strd	r3, r3, [r4, #64]	; 0x40
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 8004e5a:	6823      	ldr	r3, [r4, #0]
  hspi->RxXferCount = Size;
 8004e5c:	87e6      	strh	r6, [r4, #62]	; 0x3e
  hspi->TxXferCount = Size;
 8004e5e:	86e6      	strh	r6, [r4, #54]	; 0x36
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 8004e60:	681a      	ldr	r2, [r3, #0]
  hspi->RxXferSize  = Size;
 8004e62:	87a6      	strh	r6, [r4, #60]	; 0x3c
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 8004e64:	0650      	lsls	r0, r2, #25
    __HAL_SPI_ENABLE(hspi);
 8004e66:	bf58      	it	pl
 8004e68:	681a      	ldrpl	r2, [r3, #0]
  hspi->pTxBuffPtr  = (uint8_t *)pTxData;
 8004e6a:	6325      	str	r5, [r4, #48]	; 0x30
    __HAL_SPI_ENABLE(hspi);
 8004e6c:	bf58      	it	pl
 8004e6e:	f042 0240 	orrpl.w	r2, r2, #64	; 0x40
  hspi->TxXferSize  = Size;
 8004e72:	86a6      	strh	r6, [r4, #52]	; 0x34
    __HAL_SPI_ENABLE(hspi);
 8004e74:	bf58      	it	pl
 8004e76:	601a      	strpl	r2, [r3, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 8004e78:	68e2      	ldr	r2, [r4, #12]
 8004e7a:	f5b2 6f00 	cmp.w	r2, #2048	; 0x800
 8004e7e:	d158      	bne.n	8004f32 <HAL_SPI_TransmitReceive+0x14c>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 8004e80:	b109      	cbz	r1, 8004e86 <HAL_SPI_TransmitReceive+0xa0>
 8004e82:	2e01      	cmp	r6, #1
 8004e84:	d107      	bne.n	8004e96 <HAL_SPI_TransmitReceive+0xb0>
      hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 8004e86:	f835 2b02 	ldrh.w	r2, [r5], #2
 8004e8a:	60da      	str	r2, [r3, #12]
      hspi->TxXferCount--;
 8004e8c:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
      hspi->pTxBuffPtr += sizeof(uint16_t);
 8004e8e:	6325      	str	r5, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 8004e90:	3b01      	subs	r3, #1
 8004e92:	b29b      	uxth	r3, r3
 8004e94:	86e3      	strh	r3, [r4, #54]	; 0x36
        txallowed = 1U;
 8004e96:	2501      	movs	r5, #1
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 8004e98:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8004e9a:	b29b      	uxth	r3, r3
 8004e9c:	b9ab      	cbnz	r3, 8004eca <HAL_SPI_TransmitReceive+0xe4>
 8004e9e:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8004ea0:	b29b      	uxth	r3, r3
 8004ea2:	b993      	cbnz	r3, 8004eca <HAL_SPI_TransmitReceive+0xe4>
  if (SPI_EndRxTxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 8004ea4:	4642      	mov	r2, r8
 8004ea6:	4639      	mov	r1, r7
 8004ea8:	4620      	mov	r0, r4
 8004eaa:	f7ff fe8b 	bl	8004bc4 <SPI_EndRxTxTransaction>
 8004eae:	2800      	cmp	r0, #0
 8004eb0:	f040 8081 	bne.w	8004fb6 <HAL_SPI_TransmitReceive+0x1d0>
  if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 8004eb4:	68a3      	ldr	r3, [r4, #8]
 8004eb6:	2b00      	cmp	r3, #0
 8004eb8:	d132      	bne.n	8004f20 <HAL_SPI_TransmitReceive+0x13a>
    __HAL_SPI_CLEAR_OVRFLAG(hspi);
 8004eba:	6823      	ldr	r3, [r4, #0]
 8004ebc:	9001      	str	r0, [sp, #4]
 8004ebe:	68da      	ldr	r2, [r3, #12]
 8004ec0:	9201      	str	r2, [sp, #4]
 8004ec2:	689b      	ldr	r3, [r3, #8]
 8004ec4:	9301      	str	r3, [sp, #4]
 8004ec6:	9b01      	ldr	r3, [sp, #4]
 8004ec8:	e02a      	b.n	8004f20 <HAL_SPI_TransmitReceive+0x13a>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 8004eca:	6822      	ldr	r2, [r4, #0]
 8004ecc:	6893      	ldr	r3, [r2, #8]
 8004ece:	0799      	lsls	r1, r3, #30
 8004ed0:	d50d      	bpl.n	8004eee <HAL_SPI_TransmitReceive+0x108>
 8004ed2:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8004ed4:	b29b      	uxth	r3, r3
 8004ed6:	b153      	cbz	r3, 8004eee <HAL_SPI_TransmitReceive+0x108>
 8004ed8:	b14d      	cbz	r5, 8004eee <HAL_SPI_TransmitReceive+0x108>
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 8004eda:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8004edc:	f833 1b02 	ldrh.w	r1, [r3], #2
 8004ee0:	60d1      	str	r1, [r2, #12]
        hspi->pTxBuffPtr += sizeof(uint16_t);
 8004ee2:	6323      	str	r3, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 8004ee4:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8004ee6:	3b01      	subs	r3, #1
 8004ee8:	b29b      	uxth	r3, r3
 8004eea:	86e3      	strh	r3, [r4, #54]	; 0x36
        txallowed = 0U;
 8004eec:	2500      	movs	r5, #0
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 8004eee:	6893      	ldr	r3, [r2, #8]
 8004ef0:	07db      	lsls	r3, r3, #31
 8004ef2:	d50c      	bpl.n	8004f0e <HAL_SPI_TransmitReceive+0x128>
 8004ef4:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8004ef6:	b29b      	uxth	r3, r3
 8004ef8:	b14b      	cbz	r3, 8004f0e <HAL_SPI_TransmitReceive+0x128>
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 8004efa:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8004efc:	68d2      	ldr	r2, [r2, #12]
 8004efe:	f823 2b02 	strh.w	r2, [r3], #2
        hspi->pRxBuffPtr += sizeof(uint16_t);
 8004f02:	63a3      	str	r3, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 8004f04:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8004f06:	3b01      	subs	r3, #1
 8004f08:	b29b      	uxth	r3, r3
 8004f0a:	87e3      	strh	r3, [r4, #62]	; 0x3e
        txallowed = 1U;
 8004f0c:	2501      	movs	r5, #1
      if (((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY))
 8004f0e:	f7fe f85b 	bl	8002fc8 <HAL_GetTick>
 8004f12:	eba0 0008 	sub.w	r0, r0, r8
 8004f16:	4287      	cmp	r7, r0
 8004f18:	d8be      	bhi.n	8004e98 <HAL_SPI_TransmitReceive+0xb2>
 8004f1a:	1c7e      	adds	r6, r7, #1
 8004f1c:	d0bc      	beq.n	8004e98 <HAL_SPI_TransmitReceive+0xb2>
        errorcode = HAL_TIMEOUT;
 8004f1e:	2003      	movs	r0, #3
  hspi->State = HAL_SPI_STATE_READY;
 8004f20:	2301      	movs	r3, #1
 8004f22:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
  __HAL_UNLOCK(hspi);
 8004f26:	2300      	movs	r3, #0
 8004f28:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
}
 8004f2c:	b003      	add	sp, #12
 8004f2e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 8004f32:	b109      	cbz	r1, 8004f38 <HAL_SPI_TransmitReceive+0x152>
 8004f34:	2e01      	cmp	r6, #1
 8004f36:	d108      	bne.n	8004f4a <HAL_SPI_TransmitReceive+0x164>
      *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 8004f38:	782a      	ldrb	r2, [r5, #0]
 8004f3a:	731a      	strb	r2, [r3, #12]
      hspi->pTxBuffPtr += sizeof(uint8_t);
 8004f3c:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8004f3e:	3301      	adds	r3, #1
 8004f40:	6323      	str	r3, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 8004f42:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8004f44:	3b01      	subs	r3, #1
 8004f46:	b29b      	uxth	r3, r3
 8004f48:	86e3      	strh	r3, [r4, #54]	; 0x36
        txallowed = 1U;
 8004f4a:	2501      	movs	r5, #1
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 8004f4c:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8004f4e:	b29b      	uxth	r3, r3
 8004f50:	b91b      	cbnz	r3, 8004f5a <HAL_SPI_TransmitReceive+0x174>
 8004f52:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8004f54:	b29b      	uxth	r3, r3
 8004f56:	2b00      	cmp	r3, #0
 8004f58:	d0a4      	beq.n	8004ea4 <HAL_SPI_TransmitReceive+0xbe>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 8004f5a:	6822      	ldr	r2, [r4, #0]
 8004f5c:	6893      	ldr	r3, [r2, #8]
 8004f5e:	0798      	lsls	r0, r3, #30
 8004f60:	d50e      	bpl.n	8004f80 <HAL_SPI_TransmitReceive+0x19a>
 8004f62:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8004f64:	b29b      	uxth	r3, r3
 8004f66:	b15b      	cbz	r3, 8004f80 <HAL_SPI_TransmitReceive+0x19a>
 8004f68:	b155      	cbz	r5, 8004f80 <HAL_SPI_TransmitReceive+0x19a>
        *(__IO uint8_t *)&hspi->Instance->DR = (*hspi->pTxBuffPtr);
 8004f6a:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8004f6c:	781b      	ldrb	r3, [r3, #0]
 8004f6e:	7313      	strb	r3, [r2, #12]
        hspi->pTxBuffPtr++;
 8004f70:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8004f72:	3301      	adds	r3, #1
 8004f74:	6323      	str	r3, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 8004f76:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8004f78:	3b01      	subs	r3, #1
 8004f7a:	b29b      	uxth	r3, r3
 8004f7c:	86e3      	strh	r3, [r4, #54]	; 0x36
        txallowed = 0U;
 8004f7e:	2500      	movs	r5, #0
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 8004f80:	6822      	ldr	r2, [r4, #0]
 8004f82:	6893      	ldr	r3, [r2, #8]
 8004f84:	07d9      	lsls	r1, r3, #31
 8004f86:	d50d      	bpl.n	8004fa4 <HAL_SPI_TransmitReceive+0x1be>
 8004f88:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8004f8a:	b29b      	uxth	r3, r3
 8004f8c:	b153      	cbz	r3, 8004fa4 <HAL_SPI_TransmitReceive+0x1be>
        (*(uint8_t *)hspi->pRxBuffPtr) = hspi->Instance->DR;
 8004f8e:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8004f90:	68d2      	ldr	r2, [r2, #12]
 8004f92:	701a      	strb	r2, [r3, #0]
        hspi->pRxBuffPtr++;
 8004f94:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8004f96:	3301      	adds	r3, #1
 8004f98:	63a3      	str	r3, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 8004f9a:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8004f9c:	3b01      	subs	r3, #1
 8004f9e:	b29b      	uxth	r3, r3
 8004fa0:	87e3      	strh	r3, [r4, #62]	; 0x3e
        txallowed = 1U;
 8004fa2:	2501      	movs	r5, #1
      if ((((HAL_GetTick() - tickstart) >=  Timeout) && ((Timeout != HAL_MAX_DELAY))) || (Timeout == 0U))
 8004fa4:	f7fe f810 	bl	8002fc8 <HAL_GetTick>
 8004fa8:	eba0 0008 	sub.w	r0, r0, r8
 8004fac:	4287      	cmp	r7, r0
 8004fae:	d8cd      	bhi.n	8004f4c <HAL_SPI_TransmitReceive+0x166>
 8004fb0:	1c7b      	adds	r3, r7, #1
 8004fb2:	d0cb      	beq.n	8004f4c <HAL_SPI_TransmitReceive+0x166>
 8004fb4:	e7b3      	b.n	8004f1e <HAL_SPI_TransmitReceive+0x138>
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 8004fb6:	2320      	movs	r3, #32
 8004fb8:	6563      	str	r3, [r4, #84]	; 0x54
    errorcode = HAL_ERROR;
 8004fba:	2001      	movs	r0, #1
 8004fbc:	e7b0      	b.n	8004f20 <HAL_SPI_TransmitReceive+0x13a>
    errorcode = HAL_BUSY;
 8004fbe:	2002      	movs	r0, #2
 8004fc0:	e7ae      	b.n	8004f20 <HAL_SPI_TransmitReceive+0x13a>
  __HAL_LOCK(hspi);
 8004fc2:	2002      	movs	r0, #2
 8004fc4:	e7b2      	b.n	8004f2c <HAL_SPI_TransmitReceive+0x146>

08004fc6 <HAL_SPI_Receive>:
{
 8004fc6:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8004fca:	461d      	mov	r5, r3
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES))
 8004fcc:	6843      	ldr	r3, [r0, #4]
 8004fce:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
{
 8004fd2:	4604      	mov	r4, r0
 8004fd4:	4688      	mov	r8, r1
 8004fd6:	4617      	mov	r7, r2
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES))
 8004fd8:	d10c      	bne.n	8004ff4 <HAL_SPI_Receive+0x2e>
 8004fda:	6883      	ldr	r3, [r0, #8]
 8004fdc:	b953      	cbnz	r3, 8004ff4 <HAL_SPI_Receive+0x2e>
    hspi->State = HAL_SPI_STATE_BUSY_RX;
 8004fde:	2304      	movs	r3, #4
 8004fe0:	f880 3051 	strb.w	r3, [r0, #81]	; 0x51
    return HAL_SPI_TransmitReceive(hspi, pData, pData, Size, Timeout);
 8004fe4:	4613      	mov	r3, r2
 8004fe6:	9500      	str	r5, [sp, #0]
 8004fe8:	460a      	mov	r2, r1
 8004fea:	f7ff fefc 	bl	8004de6 <HAL_SPI_TransmitReceive>
}
 8004fee:	b002      	add	sp, #8
 8004ff0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  __HAL_LOCK(hspi);
 8004ff4:	f894 3050 	ldrb.w	r3, [r4, #80]	; 0x50
 8004ff8:	2b01      	cmp	r3, #1
 8004ffa:	d079      	beq.n	80050f0 <HAL_SPI_Receive+0x12a>
 8004ffc:	2301      	movs	r3, #1
 8004ffe:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
  tickstart = HAL_GetTick();
 8005002:	f7fd ffe1 	bl	8002fc8 <HAL_GetTick>
 8005006:	4606      	mov	r6, r0
  if (hspi->State != HAL_SPI_STATE_READY)
 8005008:	f894 0051 	ldrb.w	r0, [r4, #81]	; 0x51
 800500c:	b2c0      	uxtb	r0, r0
 800500e:	2801      	cmp	r0, #1
 8005010:	d16c      	bne.n	80050ec <HAL_SPI_Receive+0x126>
  if ((pData == NULL) || (Size == 0U))
 8005012:	f1b8 0f00 	cmp.w	r8, #0
 8005016:	d057      	beq.n	80050c8 <HAL_SPI_Receive+0x102>
 8005018:	2f00      	cmp	r7, #0
 800501a:	d055      	beq.n	80050c8 <HAL_SPI_Receive+0x102>
  hspi->State       = HAL_SPI_STATE_BUSY_RX;
 800501c:	2304      	movs	r3, #4
 800501e:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8005022:	68a2      	ldr	r2, [r4, #8]
  hspi->RxXferSize  = Size;
 8005024:	87a7      	strh	r7, [r4, #60]	; 0x3c
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 8005026:	2300      	movs	r3, #0
 8005028:	6563      	str	r3, [r4, #84]	; 0x54
  hspi->pTxBuffPtr  = (uint8_t *)NULL;
 800502a:	6323      	str	r3, [r4, #48]	; 0x30
  hspi->RxXferCount = Size;
 800502c:	87e7      	strh	r7, [r4, #62]	; 0x3e
  hspi->TxXferSize  = 0U;
 800502e:	86a3      	strh	r3, [r4, #52]	; 0x34
  hspi->TxXferCount = 0U;
 8005030:	86e3      	strh	r3, [r4, #54]	; 0x36
  hspi->TxISR       = NULL;
 8005032:	e9c4 3310 	strd	r3, r3, [r4, #64]	; 0x40
 8005036:	6823      	ldr	r3, [r4, #0]
  hspi->pRxBuffPtr  = (uint8_t *)pData;
 8005038:	f8c4 8038 	str.w	r8, [r4, #56]	; 0x38
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800503c:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
    SPI_1LINE_RX(hspi);
 8005040:	bf02      	ittt	eq
 8005042:	681a      	ldreq	r2, [r3, #0]
 8005044:	f422 4280 	biceq.w	r2, r2, #16384	; 0x4000
 8005048:	601a      	streq	r2, [r3, #0]
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800504a:	681a      	ldr	r2, [r3, #0]
 800504c:	0657      	lsls	r7, r2, #25
    __HAL_SPI_ENABLE(hspi);
 800504e:	bf5e      	ittt	pl
 8005050:	681a      	ldrpl	r2, [r3, #0]
 8005052:	f042 0240 	orrpl.w	r2, r2, #64	; 0x40
 8005056:	601a      	strpl	r2, [r3, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_8BIT)
 8005058:	68e3      	ldr	r3, [r4, #12]
 800505a:	b1f3      	cbz	r3, 800509a <HAL_SPI_Receive+0xd4>
    while (hspi->RxXferCount > 0U)
 800505c:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800505e:	b29b      	uxth	r3, r3
 8005060:	b1fb      	cbz	r3, 80050a2 <HAL_SPI_Receive+0xdc>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 8005062:	6823      	ldr	r3, [r4, #0]
 8005064:	689a      	ldr	r2, [r3, #8]
 8005066:	07d2      	lsls	r2, r2, #31
 8005068:	d535      	bpl.n	80050d6 <HAL_SPI_Receive+0x110>
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 800506a:	68da      	ldr	r2, [r3, #12]
 800506c:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800506e:	f823 2b02 	strh.w	r2, [r3], #2
        hspi->pRxBuffPtr += sizeof(uint16_t);
 8005072:	63a3      	str	r3, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 8005074:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8005076:	3b01      	subs	r3, #1
 8005078:	b29b      	uxth	r3, r3
 800507a:	87e3      	strh	r3, [r4, #62]	; 0x3e
 800507c:	e7ee      	b.n	800505c <HAL_SPI_Receive+0x96>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 800507e:	6823      	ldr	r3, [r4, #0]
 8005080:	689a      	ldr	r2, [r3, #8]
 8005082:	07d0      	lsls	r0, r2, #31
 8005084:	d518      	bpl.n	80050b8 <HAL_SPI_Receive+0xf2>
        (* (uint8_t *)hspi->pRxBuffPtr) = *(__IO uint8_t *)&hspi->Instance->DR;
 8005086:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8005088:	7b1b      	ldrb	r3, [r3, #12]
 800508a:	7013      	strb	r3, [r2, #0]
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800508c:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800508e:	3301      	adds	r3, #1
 8005090:	63a3      	str	r3, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 8005092:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8005094:	3b01      	subs	r3, #1
 8005096:	b29b      	uxth	r3, r3
 8005098:	87e3      	strh	r3, [r4, #62]	; 0x3e
    while (hspi->RxXferCount > 0U)
 800509a:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800509c:	b29b      	uxth	r3, r3
 800509e:	2b00      	cmp	r3, #0
 80050a0:	d1ed      	bne.n	800507e <HAL_SPI_Receive+0xb8>
  if (SPI_EndRxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 80050a2:	4632      	mov	r2, r6
 80050a4:	4629      	mov	r1, r5
 80050a6:	4620      	mov	r0, r4
 80050a8:	f7ff fd62 	bl	8004b70 <SPI_EndRxTransaction>
 80050ac:	b9d8      	cbnz	r0, 80050e6 <HAL_SPI_Receive+0x120>
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 80050ae:	6d60      	ldr	r0, [r4, #84]	; 0x54
    errorcode = HAL_BUSY;
 80050b0:	3000      	adds	r0, #0
 80050b2:	bf18      	it	ne
 80050b4:	2001      	movne	r0, #1
error :
 80050b6:	e007      	b.n	80050c8 <HAL_SPI_Receive+0x102>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 80050b8:	f7fd ff86 	bl	8002fc8 <HAL_GetTick>
 80050bc:	1b80      	subs	r0, r0, r6
 80050be:	42a8      	cmp	r0, r5
 80050c0:	d3eb      	bcc.n	800509a <HAL_SPI_Receive+0xd4>
 80050c2:	1c69      	adds	r1, r5, #1
 80050c4:	d0e9      	beq.n	800509a <HAL_SPI_Receive+0xd4>
          errorcode = HAL_TIMEOUT;
 80050c6:	2003      	movs	r0, #3
  hspi->State = HAL_SPI_STATE_READY;
 80050c8:	2301      	movs	r3, #1
 80050ca:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
  __HAL_UNLOCK(hspi);
 80050ce:	2300      	movs	r3, #0
 80050d0:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
  return errorcode;
 80050d4:	e78b      	b.n	8004fee <HAL_SPI_Receive+0x28>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 80050d6:	f7fd ff77 	bl	8002fc8 <HAL_GetTick>
 80050da:	1b80      	subs	r0, r0, r6
 80050dc:	42a8      	cmp	r0, r5
 80050de:	d3bd      	bcc.n	800505c <HAL_SPI_Receive+0x96>
 80050e0:	1c6b      	adds	r3, r5, #1
 80050e2:	d0bb      	beq.n	800505c <HAL_SPI_Receive+0x96>
 80050e4:	e7ef      	b.n	80050c6 <HAL_SPI_Receive+0x100>
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 80050e6:	2320      	movs	r3, #32
 80050e8:	6563      	str	r3, [r4, #84]	; 0x54
 80050ea:	e7e0      	b.n	80050ae <HAL_SPI_Receive+0xe8>
    errorcode = HAL_BUSY;
 80050ec:	2002      	movs	r0, #2
 80050ee:	e7eb      	b.n	80050c8 <HAL_SPI_Receive+0x102>
  __HAL_LOCK(hspi);
 80050f0:	2002      	movs	r0, #2
 80050f2:	e77c      	b.n	8004fee <HAL_SPI_Receive+0x28>

080050f4 <HAL_TIM_Base_MspInit>:
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIM_Base_MspInit could be implemented in the user file
   */
}
 80050f4:	4770      	bx	lr

080050f6 <HAL_TIM_Base_Start_IT>:

  /* Check the parameters */
  assert_param(IS_TIM_INSTANCE(htim->Instance));

  /* Enable the TIM Update interrupt */
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
 80050f6:	6803      	ldr	r3, [r0, #0]
 80050f8:	68da      	ldr	r2, [r3, #12]
 80050fa:	f042 0201 	orr.w	r2, r2, #1
 80050fe:	60da      	str	r2, [r3, #12]

  /* Enable the Peripheral, except in trigger mode where enable is automatically done with trigger */
  tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
 8005100:	689a      	ldr	r2, [r3, #8]
 8005102:	f002 0207 	and.w	r2, r2, #7
  if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 8005106:	2a06      	cmp	r2, #6
  {
    __HAL_TIM_ENABLE(htim);
 8005108:	bf1e      	ittt	ne
 800510a:	681a      	ldrne	r2, [r3, #0]
 800510c:	f042 0201 	orrne.w	r2, r2, #1
 8005110:	601a      	strne	r2, [r3, #0]
  }

  /* Return function status */
  return HAL_OK;
}
 8005112:	2000      	movs	r0, #0
 8005114:	4770      	bx	lr

08005116 <HAL_TIM_OC_DelayElapsedCallback>:
 8005116:	4770      	bx	lr

08005118 <HAL_TIM_IC_CaptureCallback>:
 8005118:	4770      	bx	lr

0800511a <HAL_TIM_PWM_PulseFinishedCallback>:
 800511a:	4770      	bx	lr

0800511c <HAL_TIM_TriggerCallback>:
 800511c:	4770      	bx	lr

0800511e <HAL_TIM_IRQHandler>:
  * @retval None
  */
void HAL_TIM_IRQHandler(TIM_HandleTypeDef *htim)
{
  /* Capture compare 1 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
 800511e:	6803      	ldr	r3, [r0, #0]
 8005120:	691a      	ldr	r2, [r3, #16]
 8005122:	0791      	lsls	r1, r2, #30
{
 8005124:	b510      	push	{r4, lr}
 8005126:	4604      	mov	r4, r0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
 8005128:	d50e      	bpl.n	8005148 <HAL_TIM_IRQHandler+0x2a>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC1) != RESET)
 800512a:	68da      	ldr	r2, [r3, #12]
 800512c:	0792      	lsls	r2, r2, #30
 800512e:	d50b      	bpl.n	8005148 <HAL_TIM_IRQHandler+0x2a>
    {
      {
        __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC1);
 8005130:	f06f 0202 	mvn.w	r2, #2
 8005134:	611a      	str	r2, [r3, #16]
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;

        /* Input capture event */
        if ((htim->Instance->CCMR1 & TIM_CCMR1_CC1S) != 0x00U)
 8005136:	699b      	ldr	r3, [r3, #24]
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
 8005138:	2201      	movs	r2, #1
        if ((htim->Instance->CCMR1 & TIM_CCMR1_CC1S) != 0x00U)
 800513a:	079b      	lsls	r3, r3, #30
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
 800513c:	7702      	strb	r2, [r0, #28]
        if ((htim->Instance->CCMR1 & TIM_CCMR1_CC1S) != 0x00U)
 800513e:	d077      	beq.n	8005230 <HAL_TIM_IRQHandler+0x112>
        {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
          htim->IC_CaptureCallback(htim);
#else
          HAL_TIM_IC_CaptureCallback(htim);
 8005140:	f7ff ffea 	bl	8005118 <HAL_TIM_IC_CaptureCallback>
#else
          HAL_TIM_OC_DelayElapsedCallback(htim);
          HAL_TIM_PWM_PulseFinishedCallback(htim);
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
        }
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 8005144:	2300      	movs	r3, #0
 8005146:	7723      	strb	r3, [r4, #28]
      }
    }
  }
  /* Capture compare 2 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC2) != RESET)
 8005148:	6823      	ldr	r3, [r4, #0]
 800514a:	691a      	ldr	r2, [r3, #16]
 800514c:	0750      	lsls	r0, r2, #29
 800514e:	d510      	bpl.n	8005172 <HAL_TIM_IRQHandler+0x54>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC2) != RESET)
 8005150:	68da      	ldr	r2, [r3, #12]
 8005152:	0751      	lsls	r1, r2, #29
 8005154:	d50d      	bpl.n	8005172 <HAL_TIM_IRQHandler+0x54>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC2);
 8005156:	f06f 0204 	mvn.w	r2, #4
 800515a:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
      /* Input capture event */
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 800515c:	699b      	ldr	r3, [r3, #24]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
 800515e:	2202      	movs	r2, #2
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 8005160:	f413 7f40 	tst.w	r3, #768	; 0x300
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
 8005164:	7722      	strb	r2, [r4, #28]
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->IC_CaptureCallback(htim);
#else
        HAL_TIM_IC_CaptureCallback(htim);
 8005166:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 8005168:	d068      	beq.n	800523c <HAL_TIM_IRQHandler+0x11e>
        HAL_TIM_IC_CaptureCallback(htim);
 800516a:	f7ff ffd5 	bl	8005118 <HAL_TIM_IC_CaptureCallback>
#else
        HAL_TIM_OC_DelayElapsedCallback(htim);
        HAL_TIM_PWM_PulseFinishedCallback(htim);
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
      }
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800516e:	2300      	movs	r3, #0
 8005170:	7723      	strb	r3, [r4, #28]
    }
  }
  /* Capture compare 3 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC3) != RESET)
 8005172:	6823      	ldr	r3, [r4, #0]
 8005174:	691a      	ldr	r2, [r3, #16]
 8005176:	0712      	lsls	r2, r2, #28
 8005178:	d50f      	bpl.n	800519a <HAL_TIM_IRQHandler+0x7c>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC3) != RESET)
 800517a:	68da      	ldr	r2, [r3, #12]
 800517c:	0710      	lsls	r0, r2, #28
 800517e:	d50c      	bpl.n	800519a <HAL_TIM_IRQHandler+0x7c>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC3);
 8005180:	f06f 0208 	mvn.w	r2, #8
 8005184:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
      /* Input capture event */
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 8005186:	69db      	ldr	r3, [r3, #28]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
 8005188:	2204      	movs	r2, #4
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 800518a:	0799      	lsls	r1, r3, #30
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
 800518c:	7722      	strb	r2, [r4, #28]
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->IC_CaptureCallback(htim);
#else
        HAL_TIM_IC_CaptureCallback(htim);
 800518e:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 8005190:	d05a      	beq.n	8005248 <HAL_TIM_IRQHandler+0x12a>
        HAL_TIM_IC_CaptureCallback(htim);
 8005192:	f7ff ffc1 	bl	8005118 <HAL_TIM_IC_CaptureCallback>
#else
        HAL_TIM_OC_DelayElapsedCallback(htim);
        HAL_TIM_PWM_PulseFinishedCallback(htim);
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
      }
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 8005196:	2300      	movs	r3, #0
 8005198:	7723      	strb	r3, [r4, #28]
    }
  }
  /* Capture compare 4 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC4) != RESET)
 800519a:	6823      	ldr	r3, [r4, #0]
 800519c:	691a      	ldr	r2, [r3, #16]
 800519e:	06d2      	lsls	r2, r2, #27
 80051a0:	d510      	bpl.n	80051c4 <HAL_TIM_IRQHandler+0xa6>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC4) != RESET)
 80051a2:	68da      	ldr	r2, [r3, #12]
 80051a4:	06d0      	lsls	r0, r2, #27
 80051a6:	d50d      	bpl.n	80051c4 <HAL_TIM_IRQHandler+0xa6>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC4);
 80051a8:	f06f 0210 	mvn.w	r2, #16
 80051ac:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
      /* Input capture event */
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 80051ae:	69db      	ldr	r3, [r3, #28]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
 80051b0:	2208      	movs	r2, #8
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 80051b2:	f413 7f40 	tst.w	r3, #768	; 0x300
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
 80051b6:	7722      	strb	r2, [r4, #28]
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->IC_CaptureCallback(htim);
#else
        HAL_TIM_IC_CaptureCallback(htim);
 80051b8:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 80051ba:	d04b      	beq.n	8005254 <HAL_TIM_IRQHandler+0x136>
        HAL_TIM_IC_CaptureCallback(htim);
 80051bc:	f7ff ffac 	bl	8005118 <HAL_TIM_IC_CaptureCallback>
#else
        HAL_TIM_OC_DelayElapsedCallback(htim);
        HAL_TIM_PWM_PulseFinishedCallback(htim);
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
      }
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 80051c0:	2300      	movs	r3, #0
 80051c2:	7723      	strb	r3, [r4, #28]
    }
  }
  /* TIM Update event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_UPDATE) != RESET)
 80051c4:	6823      	ldr	r3, [r4, #0]
 80051c6:	691a      	ldr	r2, [r3, #16]
 80051c8:	07d1      	lsls	r1, r2, #31
 80051ca:	d508      	bpl.n	80051de <HAL_TIM_IRQHandler+0xc0>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_UPDATE) != RESET)
 80051cc:	68da      	ldr	r2, [r3, #12]
 80051ce:	07d2      	lsls	r2, r2, #31
 80051d0:	d505      	bpl.n	80051de <HAL_TIM_IRQHandler+0xc0>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_UPDATE);
 80051d2:	f06f 0201 	mvn.w	r2, #1
 80051d6:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->PeriodElapsedCallback(htim);
#else
      HAL_TIM_PeriodElapsedCallback(htim);
 80051d8:	4620      	mov	r0, r4
 80051da:	f7fc faef 	bl	80017bc <HAL_TIM_PeriodElapsedCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM Break input event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_BREAK) != RESET)
 80051de:	6823      	ldr	r3, [r4, #0]
 80051e0:	691a      	ldr	r2, [r3, #16]
 80051e2:	0610      	lsls	r0, r2, #24
 80051e4:	d508      	bpl.n	80051f8 <HAL_TIM_IRQHandler+0xda>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_BREAK) != RESET)
 80051e6:	68da      	ldr	r2, [r3, #12]
 80051e8:	0611      	lsls	r1, r2, #24
 80051ea:	d505      	bpl.n	80051f8 <HAL_TIM_IRQHandler+0xda>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_BREAK);
 80051ec:	f06f 0280 	mvn.w	r2, #128	; 0x80
 80051f0:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->BreakCallback(htim);
#else
      HAL_TIMEx_BreakCallback(htim);
 80051f2:	4620      	mov	r0, r4
 80051f4:	f000 f8b7 	bl	8005366 <HAL_TIMEx_BreakCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM Trigger detection event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_TRIGGER) != RESET)
 80051f8:	6823      	ldr	r3, [r4, #0]
 80051fa:	691a      	ldr	r2, [r3, #16]
 80051fc:	0652      	lsls	r2, r2, #25
 80051fe:	d508      	bpl.n	8005212 <HAL_TIM_IRQHandler+0xf4>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_TRIGGER) != RESET)
 8005200:	68da      	ldr	r2, [r3, #12]
 8005202:	0650      	lsls	r0, r2, #25
 8005204:	d505      	bpl.n	8005212 <HAL_TIM_IRQHandler+0xf4>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_TRIGGER);
 8005206:	f06f 0240 	mvn.w	r2, #64	; 0x40
 800520a:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->TriggerCallback(htim);
#else
      HAL_TIM_TriggerCallback(htim);
 800520c:	4620      	mov	r0, r4
 800520e:	f7ff ff85 	bl	800511c <HAL_TIM_TriggerCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM commutation event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_COM) != RESET)
 8005212:	6823      	ldr	r3, [r4, #0]
 8005214:	691a      	ldr	r2, [r3, #16]
 8005216:	0691      	lsls	r1, r2, #26
 8005218:	d522      	bpl.n	8005260 <HAL_TIM_IRQHandler+0x142>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_COM) != RESET)
 800521a:	68da      	ldr	r2, [r3, #12]
 800521c:	0692      	lsls	r2, r2, #26
 800521e:	d51f      	bpl.n	8005260 <HAL_TIM_IRQHandler+0x142>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
 8005220:	f06f 0220 	mvn.w	r2, #32
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->CommutationCallback(htim);
#else
      HAL_TIMEx_CommutCallback(htim);
 8005224:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
 8005226:	611a      	str	r2, [r3, #16]
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
}
 8005228:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
      HAL_TIMEx_CommutCallback(htim);
 800522c:	f000 b89a 	b.w	8005364 <HAL_TIMEx_CommutCallback>
          HAL_TIM_OC_DelayElapsedCallback(htim);
 8005230:	f7ff ff71 	bl	8005116 <HAL_TIM_OC_DelayElapsedCallback>
          HAL_TIM_PWM_PulseFinishedCallback(htim);
 8005234:	4620      	mov	r0, r4
 8005236:	f7ff ff70 	bl	800511a <HAL_TIM_PWM_PulseFinishedCallback>
 800523a:	e783      	b.n	8005144 <HAL_TIM_IRQHandler+0x26>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 800523c:	f7ff ff6b 	bl	8005116 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 8005240:	4620      	mov	r0, r4
 8005242:	f7ff ff6a 	bl	800511a <HAL_TIM_PWM_PulseFinishedCallback>
 8005246:	e792      	b.n	800516e <HAL_TIM_IRQHandler+0x50>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 8005248:	f7ff ff65 	bl	8005116 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 800524c:	4620      	mov	r0, r4
 800524e:	f7ff ff64 	bl	800511a <HAL_TIM_PWM_PulseFinishedCallback>
 8005252:	e7a0      	b.n	8005196 <HAL_TIM_IRQHandler+0x78>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 8005254:	f7ff ff5f 	bl	8005116 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 8005258:	4620      	mov	r0, r4
 800525a:	f7ff ff5e 	bl	800511a <HAL_TIM_PWM_PulseFinishedCallback>
 800525e:	e7af      	b.n	80051c0 <HAL_TIM_IRQHandler+0xa2>
}
 8005260:	bd10      	pop	{r4, pc}
	...

08005264 <TIM_Base_SetConfig>:
{
  uint32_t tmpcr1;
  tmpcr1 = TIMx->CR1;

  /* Set TIM Time Base Unit parameters ---------------------------------------*/
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 8005264:	4a30      	ldr	r2, [pc, #192]	; (8005328 <TIM_Base_SetConfig+0xc4>)
  tmpcr1 = TIMx->CR1;
 8005266:	6803      	ldr	r3, [r0, #0]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 8005268:	4290      	cmp	r0, r2
 800526a:	d012      	beq.n	8005292 <TIM_Base_SetConfig+0x2e>
 800526c:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
 8005270:	d00f      	beq.n	8005292 <TIM_Base_SetConfig+0x2e>
 8005272:	f5a2 427c 	sub.w	r2, r2, #64512	; 0xfc00
 8005276:	4290      	cmp	r0, r2
 8005278:	d00b      	beq.n	8005292 <TIM_Base_SetConfig+0x2e>
 800527a:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800527e:	4290      	cmp	r0, r2
 8005280:	d007      	beq.n	8005292 <TIM_Base_SetConfig+0x2e>
 8005282:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8005286:	4290      	cmp	r0, r2
 8005288:	d003      	beq.n	8005292 <TIM_Base_SetConfig+0x2e>
 800528a:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
 800528e:	4290      	cmp	r0, r2
 8005290:	d119      	bne.n	80052c6 <TIM_Base_SetConfig+0x62>
  {
    /* Select the Counter Mode */
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
    tmpcr1 |= Structure->CounterMode;
 8005292:	684a      	ldr	r2, [r1, #4]
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 8005294:	f023 0370 	bic.w	r3, r3, #112	; 0x70
    tmpcr1 |= Structure->CounterMode;
 8005298:	4313      	orrs	r3, r2
  }

  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
 800529a:	4a23      	ldr	r2, [pc, #140]	; (8005328 <TIM_Base_SetConfig+0xc4>)
 800529c:	4290      	cmp	r0, r2
 800529e:	d029      	beq.n	80052f4 <TIM_Base_SetConfig+0x90>
 80052a0:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
 80052a4:	d026      	beq.n	80052f4 <TIM_Base_SetConfig+0x90>
 80052a6:	f5a2 427c 	sub.w	r2, r2, #64512	; 0xfc00
 80052aa:	4290      	cmp	r0, r2
 80052ac:	d022      	beq.n	80052f4 <TIM_Base_SetConfig+0x90>
 80052ae:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 80052b2:	4290      	cmp	r0, r2
 80052b4:	d01e      	beq.n	80052f4 <TIM_Base_SetConfig+0x90>
 80052b6:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 80052ba:	4290      	cmp	r0, r2
 80052bc:	d01a      	beq.n	80052f4 <TIM_Base_SetConfig+0x90>
 80052be:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
 80052c2:	4290      	cmp	r0, r2
 80052c4:	d016      	beq.n	80052f4 <TIM_Base_SetConfig+0x90>
 80052c6:	4a19      	ldr	r2, [pc, #100]	; (800532c <TIM_Base_SetConfig+0xc8>)
 80052c8:	4290      	cmp	r0, r2
 80052ca:	d013      	beq.n	80052f4 <TIM_Base_SetConfig+0x90>
 80052cc:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 80052d0:	4290      	cmp	r0, r2
 80052d2:	d00f      	beq.n	80052f4 <TIM_Base_SetConfig+0x90>
 80052d4:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 80052d8:	4290      	cmp	r0, r2
 80052da:	d00b      	beq.n	80052f4 <TIM_Base_SetConfig+0x90>
 80052dc:	f5a2 3298 	sub.w	r2, r2, #77824	; 0x13000
 80052e0:	4290      	cmp	r0, r2
 80052e2:	d007      	beq.n	80052f4 <TIM_Base_SetConfig+0x90>
 80052e4:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 80052e8:	4290      	cmp	r0, r2
 80052ea:	d003      	beq.n	80052f4 <TIM_Base_SetConfig+0x90>
 80052ec:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 80052f0:	4290      	cmp	r0, r2
 80052f2:	d103      	bne.n	80052fc <TIM_Base_SetConfig+0x98>
  {
    /* Set the clock division */
    tmpcr1 &= ~TIM_CR1_CKD;
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 80052f4:	68ca      	ldr	r2, [r1, #12]
    tmpcr1 &= ~TIM_CR1_CKD;
 80052f6:	f423 7340 	bic.w	r3, r3, #768	; 0x300
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 80052fa:	4313      	orrs	r3, r2
  }

  /* Set the auto-reload preload */
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 80052fc:	694a      	ldr	r2, [r1, #20]
 80052fe:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8005302:	4313      	orrs	r3, r2

  TIMx->CR1 = tmpcr1;
 8005304:	6003      	str	r3, [r0, #0]

  /* Set the Autoreload value */
  TIMx->ARR = (uint32_t)Structure->Period ;
 8005306:	688b      	ldr	r3, [r1, #8]
 8005308:	62c3      	str	r3, [r0, #44]	; 0x2c

  /* Set the Prescaler value */
  TIMx->PSC = Structure->Prescaler;
 800530a:	680b      	ldr	r3, [r1, #0]
 800530c:	6283      	str	r3, [r0, #40]	; 0x28

  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
 800530e:	4b06      	ldr	r3, [pc, #24]	; (8005328 <TIM_Base_SetConfig+0xc4>)
 8005310:	4298      	cmp	r0, r3
 8005312:	d003      	beq.n	800531c <TIM_Base_SetConfig+0xb8>
 8005314:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8005318:	4298      	cmp	r0, r3
 800531a:	d101      	bne.n	8005320 <TIM_Base_SetConfig+0xbc>
  {
    /* Set the Repetition Counter value */
    TIMx->RCR = Structure->RepetitionCounter;
 800531c:	690b      	ldr	r3, [r1, #16]
 800531e:	6303      	str	r3, [r0, #48]	; 0x30
  }

  /* Generate an update event to reload the Prescaler
     and the repetition counter (only for advanced timer) value immediately */
  TIMx->EGR = TIM_EGR_UG;
 8005320:	2301      	movs	r3, #1
 8005322:	6143      	str	r3, [r0, #20]
}
 8005324:	4770      	bx	lr
 8005326:	bf00      	nop
 8005328:	40010000 	.word	0x40010000
 800532c:	40014000 	.word	0x40014000

08005330 <HAL_TIM_Base_Init>:
{
 8005330:	b510      	push	{r4, lr}
  if (htim == NULL)
 8005332:	4604      	mov	r4, r0
 8005334:	b1a0      	cbz	r0, 8005360 <HAL_TIM_Base_Init+0x30>
  if (htim->State == HAL_TIM_STATE_RESET)
 8005336:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 800533a:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800533e:	b91b      	cbnz	r3, 8005348 <HAL_TIM_Base_Init+0x18>
    htim->Lock = HAL_UNLOCKED;
 8005340:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    HAL_TIM_Base_MspInit(htim);
 8005344:	f7ff fed6 	bl	80050f4 <HAL_TIM_Base_MspInit>
  htim->State = HAL_TIM_STATE_BUSY;
 8005348:	2302      	movs	r3, #2
 800534a:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 800534e:	6820      	ldr	r0, [r4, #0]
 8005350:	1d21      	adds	r1, r4, #4
 8005352:	f7ff ff87 	bl	8005264 <TIM_Base_SetConfig>
  htim->State = HAL_TIM_STATE_READY;
 8005356:	2301      	movs	r3, #1
 8005358:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  return HAL_OK;
 800535c:	2000      	movs	r0, #0
}
 800535e:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 8005360:	2001      	movs	r0, #1
 8005362:	e7fc      	b.n	800535e <HAL_TIM_Base_Init+0x2e>

08005364 <HAL_TIMEx_CommutCallback>:
 8005364:	4770      	bx	lr

08005366 <HAL_TIMEx_BreakCallback>:
 8005366:	4770      	bx	lr

08005368 <FMC_SDRAM_Init>:
  * @param  Device Pointer to SDRAM device instance
  * @param  Init Pointer to SDRAM Initialization structure   
  * @retval HAL status
  */
HAL_StatusTypeDef FMC_SDRAM_Init(FMC_SDRAM_TypeDef *Device, FMC_SDRAM_InitTypeDef *Init)
{
 8005368:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800536c:	6a4a      	ldr	r2, [r1, #36]	; 0x24
 800536e:	e9d1 4307 	ldrd	r4, r3, [r1, #28]
 8005372:	e9d1 5801 	ldrd	r5, r8, [r1, #4]
 8005376:	e9d1 ec03 	ldrd	lr, ip, [r1, #12]
 800537a:	e9d1 7605 	ldrd	r7, r6, [r1, #20]
  assert_param(IS_FMC_SDCLOCK_PERIOD(Init->SDClockPeriod));
  assert_param(IS_FMC_READ_BURST(Init->ReadBurst));
  assert_param(IS_FMC_READPIPE_DELAY(Init->ReadPipeDelay));   

  /* Set SDRAM bank configuration parameters */
  if (Init->SDBank != FMC_SDRAM_BANK2) 
 800537e:	6809      	ldr	r1, [r1, #0]
 8005380:	2901      	cmp	r1, #1
 8005382:	ea43 0304 	orr.w	r3, r3, r4
 8005386:	4912      	ldr	r1, [pc, #72]	; (80053d0 <FMC_SDRAM_Init+0x68>)
  {    
    tmpr1 = Device->SDCR[FMC_SDRAM_BANK1];
 8005388:	6804      	ldr	r4, [r0, #0]
  if (Init->SDBank != FMC_SDRAM_BANK2) 
 800538a:	d00f      	beq.n	80053ac <FMC_SDRAM_Init+0x44>
    tmpr1 &= ((uint32_t)~(FMC_SDCR1_NC  | FMC_SDCR1_NR | FMC_SDCR1_MWID | \
                         FMC_SDCR1_NB  | FMC_SDCR1_CAS | FMC_SDCR1_WP | \
                         FMC_SDCR1_SDCLK | FMC_SDCR1_RBURST | FMC_SDCR1_RPIPE));
  
  
    tmpr1 |= (uint32_t)(Init->ColumnBitsNumber   |\
 800538c:	431a      	orrs	r2, r3
 800538e:	432a      	orrs	r2, r5
 8005390:	ea42 0308 	orr.w	r3, r2, r8
 8005394:	ea43 030e 	orr.w	r3, r3, lr
 8005398:	ea43 030c 	orr.w	r3, r3, ip
 800539c:	433b      	orrs	r3, r7
    tmpr1 &= ((uint32_t)~(FMC_SDCR1_NC  | FMC_SDCR1_NR | FMC_SDCR1_MWID | \
 800539e:	4021      	ands	r1, r4
    tmpr1 |= (uint32_t)(Init->ColumnBitsNumber   |\
 80053a0:	4333      	orrs	r3, r6
 80053a2:	430b      	orrs	r3, r1
                                               Init->WriteProtection    |\
                                               Init->SDClockPeriod      |\
                                               Init->ReadBurst          |\
                                               Init->ReadPipeDelay
                                               );
    Device->SDCR[FMC_SDRAM_BANK1] = tmpr1;
 80053a4:	6003      	str	r3, [r0, #0]
    Device->SDCR[FMC_SDRAM_BANK1] = tmpr1;
    Device->SDCR[FMC_SDRAM_BANK2] = tmpr2;
  }  
  
  return HAL_OK;
}
 80053a6:	2000      	movs	r0, #0
 80053a8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    tmpr1 |= (uint32_t)(Init->SDClockPeriod      |\
 80053ac:	4313      	orrs	r3, r2
    tmpr2 = Device->SDCR[FMC_SDRAM_BANK2];
 80053ae:	6842      	ldr	r2, [r0, #4]
    tmpr2 &= ((uint32_t)~(FMC_SDCR1_NC  | FMC_SDCR1_NR | FMC_SDCR1_MWID | \
 80053b0:	4011      	ands	r1, r2
    tmpr2 |= (uint32_t)(Init->ColumnBitsNumber   |\
 80053b2:	ea45 0208 	orr.w	r2, r5, r8
 80053b6:	ea42 020e 	orr.w	r2, r2, lr
 80053ba:	ea42 020c 	orr.w	r2, r2, ip
 80053be:	433a      	orrs	r2, r7
    tmpr1 &= ((uint32_t)~(FMC_SDCR1_SDCLK | FMC_SDCR1_RBURST | FMC_SDCR1_RPIPE));
 80053c0:	f424 44f8 	bic.w	r4, r4, #31744	; 0x7c00
    tmpr2 |= (uint32_t)(Init->ColumnBitsNumber   |\
 80053c4:	4332      	orrs	r2, r6
    tmpr1 |= (uint32_t)(Init->SDClockPeriod      |\
 80053c6:	4323      	orrs	r3, r4
    tmpr2 |= (uint32_t)(Init->ColumnBitsNumber   |\
 80053c8:	430a      	orrs	r2, r1
    Device->SDCR[FMC_SDRAM_BANK1] = tmpr1;
 80053ca:	6003      	str	r3, [r0, #0]
    Device->SDCR[FMC_SDRAM_BANK2] = tmpr2;
 80053cc:	6042      	str	r2, [r0, #4]
 80053ce:	e7ea      	b.n	80053a6 <FMC_SDRAM_Init+0x3e>
 80053d0:	ffff8000 	.word	0xffff8000

080053d4 <FMC_SDRAM_Timing_Init>:
  * @param  Timing Pointer to SDRAM Timing structure
  * @param  Bank SDRAM bank number   
  * @retval HAL status
  */
HAL_StatusTypeDef FMC_SDRAM_Timing_Init(FMC_SDRAM_TypeDef *Device, FMC_SDRAM_TimingTypeDef *Timing, uint32_t Bank)
{
 80053d4:	68cb      	ldr	r3, [r1, #12]
 80053d6:	b5f0      	push	{r4, r5, r6, r7, lr}
 80053d8:	680c      	ldr	r4, [r1, #0]
 80053da:	688e      	ldr	r6, [r1, #8]
 80053dc:	690d      	ldr	r5, [r1, #16]
 80053de:	1e5f      	subs	r7, r3, #1
 80053e0:	694b      	ldr	r3, [r1, #20]
 80053e2:	f104 3cff 	add.w	ip, r4, #4294967295
 80053e6:	684c      	ldr	r4, [r1, #4]
 80053e8:	6989      	ldr	r1, [r1, #24]
 80053ea:	3b01      	subs	r3, #1
 80053ec:	051b      	lsls	r3, r3, #20
 80053ee:	3c01      	subs	r4, #1
 80053f0:	3e01      	subs	r6, #1
 80053f2:	3d01      	subs	r5, #1
 80053f4:	3901      	subs	r1, #1
  assert_param(IS_FMC_RP_DELAY(Timing->RPDelay));
  assert_param(IS_FMC_RCD_DELAY(Timing->RCDDelay));
  assert_param(IS_FMC_SDRAM_BANK(Bank));
  
  /* Set SDRAM device timing parameters */ 
  if (Bank != FMC_SDRAM_BANK2) 
 80053f6:	2a01      	cmp	r2, #1
 80053f8:	ea4f 1404 	mov.w	r4, r4, lsl #4
 80053fc:	ea4f 2606 	mov.w	r6, r6, lsl #8
 8005400:	ea4f 4505 	mov.w	r5, r5, lsl #16
 8005404:	ea4f 6101 	mov.w	r1, r1, lsl #24
 8005408:	ea43 3307 	orr.w	r3, r3, r7, lsl #12
 800540c:	d00c      	beq.n	8005428 <FMC_SDRAM_Timing_Init+0x54>
    /* Clear TMRD, TXSR, TRAS, TRC, TWR, TRP and TRCD bits */
    tmpr1 &= ((uint32_t)~(FMC_SDTR1_TMRD  | FMC_SDTR1_TXSR | FMC_SDTR1_TRAS | \
                          FMC_SDTR1_TRC  | FMC_SDTR1_TWR | FMC_SDTR1_TRP | \
                          FMC_SDTR1_TRCD));
    
    tmpr1 |= (uint32_t)(((Timing->LoadToActiveDelay)-1U)           |\
 800540e:	ea43 030c 	orr.w	r3, r3, ip
 8005412:	4323      	orrs	r3, r4
    tmpr1 = Device->SDTR[FMC_SDRAM_BANK1];
 8005414:	6882      	ldr	r2, [r0, #8]
    tmpr1 |= (uint32_t)(((Timing->LoadToActiveDelay)-1U)           |\
 8005416:	4333      	orrs	r3, r6
 8005418:	432b      	orrs	r3, r5
    tmpr1 &= ((uint32_t)~(FMC_SDTR1_TMRD  | FMC_SDTR1_TXSR | FMC_SDTR1_TRAS | \
 800541a:	f002 4270 	and.w	r2, r2, #4026531840	; 0xf0000000
    tmpr1 |= (uint32_t)(((Timing->LoadToActiveDelay)-1U)           |\
 800541e:	430b      	orrs	r3, r1
 8005420:	4313      	orrs	r3, r2
                       (((Timing->SelfRefreshTime)-1U) << 8U)      |\
                       (((Timing->RowCycleDelay)-1U) << 12U)       |\
                       (((Timing->WriteRecoveryTime)-1U) <<16U)    |\
                       (((Timing->RPDelay)-1U) << 20U)             |\
                       (((Timing->RCDDelay)-1U) << 24U));
    Device->SDTR[FMC_SDRAM_BANK1] = tmpr1;
 8005422:	6083      	str	r3, [r0, #8]

    Device->SDTR[FMC_SDRAM_BANK1] = tmpr1;
    Device->SDTR[FMC_SDRAM_BANK2] = tmpr2;
  }
  return HAL_OK;
}
 8005424:	2000      	movs	r0, #0
 8005426:	bdf0      	pop	{r4, r5, r6, r7, pc}
    tmpr1 = Device->SDTR[FMC_SDRAM_BANK1];
 8005428:	6887      	ldr	r7, [r0, #8]
    tmpr1 &= ((uint32_t)~(FMC_SDTR1_TRC | FMC_SDTR1_TRP));
 800542a:	f427 0770 	bic.w	r7, r7, #15728640	; 0xf00000
 800542e:	f427 4770 	bic.w	r7, r7, #61440	; 0xf000
    tmpr2 |= (uint32_t)((((Timing->LoadToActiveDelay)-1U)           |\
 8005432:	ea44 0206 	orr.w	r2, r4, r6
    tmpr1 |= (uint32_t)((((Timing->RowCycleDelay)-1U) << 12U)       |\
 8005436:	433b      	orrs	r3, r7
    tmpr2 |= (uint32_t)((((Timing->LoadToActiveDelay)-1U)           |\
 8005438:	ea42 020c 	orr.w	r2, r2, ip
    tmpr2 = Device->SDTR[FMC_SDRAM_BANK2];
 800543c:	68c7      	ldr	r7, [r0, #12]
    Device->SDTR[FMC_SDRAM_BANK1] = tmpr1;
 800543e:	6083      	str	r3, [r0, #8]
    tmpr2 |= (uint32_t)((((Timing->LoadToActiveDelay)-1U)           |\
 8005440:	432a      	orrs	r2, r5
    tmpr2 &= ((uint32_t)~(FMC_SDTR1_TMRD  | FMC_SDTR1_TXSR | FMC_SDTR1_TRAS | \
 8005442:	f007 4770 	and.w	r7, r7, #4026531840	; 0xf0000000
    tmpr2 |= (uint32_t)((((Timing->LoadToActiveDelay)-1U)           |\
 8005446:	430a      	orrs	r2, r1
 8005448:	433a      	orrs	r2, r7
    Device->SDTR[FMC_SDRAM_BANK2] = tmpr2;
 800544a:	60c2      	str	r2, [r0, #12]
 800544c:	e7ea      	b.n	8005424 <FMC_SDRAM_Timing_Init+0x50>

0800544e <FMC_SDRAM_SendCommand>:
  * @param  Timing Pointer to SDRAM Timing structure
  * @param  Timeout Timeout wait value
  * @retval HAL state
  */  
HAL_StatusTypeDef FMC_SDRAM_SendCommand(FMC_SDRAM_TypeDef *Device, FMC_SDRAM_CommandTypeDef *Command, uint32_t Timeout)
{
 800544e:	b573      	push	{r0, r1, r4, r5, r6, lr}
  __IO uint32_t tmpr = 0U;
 8005450:	2300      	movs	r3, #0
 8005452:	9301      	str	r3, [sp, #4]
{
 8005454:	4615      	mov	r5, r2
  assert_param(IS_FMC_COMMAND_TARGET(Command->CommandTarget));
  assert_param(IS_FMC_AUTOREFRESH_NUMBER(Command->AutoRefreshNumber));
  assert_param(IS_FMC_MODE_REGISTER(Command->ModeRegisterDefinition));  

  /* Set command register */
  tmpr = (uint32_t)((Command->CommandMode)                  |\
 8005456:	e9d1 3200 	ldrd	r3, r2, [r1]
 800545a:	4313      	orrs	r3, r2
                    (Command->CommandTarget)                |\
                    (((Command->AutoRefreshNumber)-1U) << 5U) |\
                    ((Command->ModeRegisterDefinition) << 9U)
 800545c:	68ca      	ldr	r2, [r1, #12]
  tmpr = (uint32_t)((Command->CommandMode)                  |\
 800545e:	ea43 2342 	orr.w	r3, r3, r2, lsl #9
                    (((Command->AutoRefreshNumber)-1U) << 5U) |\
 8005462:	688a      	ldr	r2, [r1, #8]
 8005464:	3a01      	subs	r2, #1
  tmpr = (uint32_t)((Command->CommandMode)                  |\
 8005466:	ea43 1342 	orr.w	r3, r3, r2, lsl #5
 800546a:	9301      	str	r3, [sp, #4]
                    );
    
  Device->SDCMR = tmpr;
 800546c:	9b01      	ldr	r3, [sp, #4]
 800546e:	6103      	str	r3, [r0, #16]
{
 8005470:	4604      	mov	r4, r0

  /* Get tick */ 
  tickstart = HAL_GetTick();
 8005472:	f7fd fda9 	bl	8002fc8 <HAL_GetTick>
 8005476:	4606      	mov	r6, r0

  /* Wait until command is send */
  while(HAL_IS_BIT_SET(Device->SDSR, FMC_SDSR_BUSY))
 8005478:	69a0      	ldr	r0, [r4, #24]
 800547a:	f010 0020 	ands.w	r0, r0, #32
 800547e:	d003      	beq.n	8005488 <FMC_SDRAM_SendCommand+0x3a>
  {
    /* Check for the Timeout */
    if(Timeout != HAL_MAX_DELAY)
 8005480:	1c6b      	adds	r3, r5, #1
 8005482:	d0f9      	beq.n	8005478 <FMC_SDRAM_SendCommand+0x2a>
    {
      if((Timeout == 0U)||((HAL_GetTick() - tickstart ) > Timeout))
 8005484:	b915      	cbnz	r5, 800548c <FMC_SDRAM_SendCommand+0x3e>
      {
        return HAL_TIMEOUT;
 8005486:	2003      	movs	r0, #3
      }
    }
  }

  return HAL_OK;
}
 8005488:	b002      	add	sp, #8
 800548a:	bd70      	pop	{r4, r5, r6, pc}
      if((Timeout == 0U)||((HAL_GetTick() - tickstart ) > Timeout))
 800548c:	f7fd fd9c 	bl	8002fc8 <HAL_GetTick>
 8005490:	1b80      	subs	r0, r0, r6
 8005492:	42a8      	cmp	r0, r5
 8005494:	d9f0      	bls.n	8005478 <FMC_SDRAM_SendCommand+0x2a>
 8005496:	e7f6      	b.n	8005486 <FMC_SDRAM_SendCommand+0x38>

08005498 <FMC_SDRAM_ProgramRefreshRate>:
  /* Check the parameters */
  assert_param(IS_FMC_SDRAM_DEVICE(Device));
  assert_param(IS_FMC_REFRESH_RATE(RefreshRate));
  
  /* Set the refresh rate in command register */
  Device->SDRTR |= (RefreshRate<<1U);
 8005498:	6943      	ldr	r3, [r0, #20]
 800549a:	ea43 0141 	orr.w	r1, r3, r1, lsl #1
 800549e:	6141      	str	r1, [r0, #20]
  
  return HAL_OK;   
}
 80054a0:	2000      	movs	r0, #0
 80054a2:	4770      	bx	lr

080054a4 <osKernelInitialize>:
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 80054a4:	f3ef 8305 	mrs	r3, IPSR
/*---------------------------------------------------------------------------*/

osStatus_t osKernelInitialize (void) {
  osStatus_t stat;

  if (IS_IRQ()) {
 80054a8:	b113      	cbz	r3, 80054b0 <osKernelInitialize+0xc>
    stat = osErrorISR;
 80054aa:	f06f 0005 	mvn.w	r0, #5
 80054ae:	4770      	bx	lr
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 80054b0:	f3ef 8210 	mrs	r2, PRIMASK
 80054b4:	4b07      	ldr	r3, [pc, #28]	; (80054d4 <osKernelInitialize+0x30>)
  if (IS_IRQ()) {
 80054b6:	b912      	cbnz	r2, 80054be <osKernelInitialize+0x1a>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 80054b8:	f3ef 8211 	mrs	r2, BASEPRI
 80054bc:	b112      	cbz	r2, 80054c4 <osKernelInitialize+0x20>
 80054be:	681a      	ldr	r2, [r3, #0]
 80054c0:	2a02      	cmp	r2, #2
 80054c2:	d0f2      	beq.n	80054aa <osKernelInitialize+0x6>
  }
  else {
    if (KernelState == osKernelInactive) {
 80054c4:	6818      	ldr	r0, [r3, #0]
 80054c6:	b910      	cbnz	r0, 80054ce <osKernelInitialize+0x2a>
      #if defined(USE_FREERTOS_HEAP_5) && (HEAP_5_REGION_SETUP == 1)
        vPortDefineHeapRegions (configHEAP_5_REGIONS);
      #endif
      KernelState = osKernelReady;
 80054c8:	2201      	movs	r2, #1
 80054ca:	601a      	str	r2, [r3, #0]
 80054cc:	4770      	bx	lr
      stat = osOK;
    } else {
      stat = osError;
 80054ce:	f04f 30ff 	mov.w	r0, #4294967295
    }
  }

  return (stat);
}
 80054d2:	4770      	bx	lr
 80054d4:	200016c0 	.word	0x200016c0

080054d8 <osKernelStart>:
  }

  return (state);
}

osStatus_t osKernelStart (void) {
 80054d8:	b508      	push	{r3, lr}
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 80054da:	f3ef 8305 	mrs	r3, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
 80054de:	b113      	cbz	r3, 80054e6 <osKernelStart+0xe>
    stat = osErrorISR;
 80054e0:	f06f 0005 	mvn.w	r0, #5
      stat = osError;
    }
  }

  return (stat);
}
 80054e4:	bd08      	pop	{r3, pc}
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 80054e6:	f3ef 8210 	mrs	r2, PRIMASK
 80054ea:	4b0a      	ldr	r3, [pc, #40]	; (8005514 <osKernelStart+0x3c>)
  if (IS_IRQ()) {
 80054ec:	b912      	cbnz	r2, 80054f4 <osKernelStart+0x1c>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 80054ee:	f3ef 8211 	mrs	r2, BASEPRI
 80054f2:	b112      	cbz	r2, 80054fa <osKernelStart+0x22>
 80054f4:	681a      	ldr	r2, [r3, #0]
 80054f6:	2a02      	cmp	r2, #2
 80054f8:	d0f2      	beq.n	80054e0 <osKernelStart+0x8>
    if (KernelState == osKernelReady) {
 80054fa:	681a      	ldr	r2, [r3, #0]
 80054fc:	2a01      	cmp	r2, #1
 80054fe:	d105      	bne.n	800550c <osKernelStart+0x34>
      KernelState = osKernelRunning;
 8005500:	2202      	movs	r2, #2
 8005502:	601a      	str	r2, [r3, #0]
      vTaskStartScheduler();
 8005504:	f001 fbb4 	bl	8006c70 <vTaskStartScheduler>
      stat = osOK;
 8005508:	2000      	movs	r0, #0
 800550a:	e7eb      	b.n	80054e4 <osKernelStart+0xc>
      stat = osError;
 800550c:	f04f 30ff 	mov.w	r0, #4294967295
  return (stat);
 8005510:	e7e8      	b.n	80054e4 <osKernelStart+0xc>
 8005512:	bf00      	nop
 8005514:	200016c0 	.word	0x200016c0

08005518 <osThreadNew>:
  return (configCPU_CLOCK_HZ);
}

/*---------------------------------------------------------------------------*/

osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 8005518:	b5f0      	push	{r4, r5, r6, r7, lr}
 800551a:	b087      	sub	sp, #28
 800551c:	4614      	mov	r4, r2
  uint32_t stack;
  TaskHandle_t hTask;
  UBaseType_t prio;
  int32_t mem;

  hTask = NULL;
 800551e:	2200      	movs	r2, #0
osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 8005520:	460b      	mov	r3, r1
  hTask = NULL;
 8005522:	9205      	str	r2, [sp, #20]
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 8005524:	f3ef 8205 	mrs	r2, IPSR

  if (!IS_IRQ() && (func != NULL)) {
 8005528:	bb32      	cbnz	r2, 8005578 <osThreadNew+0x60>
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 800552a:	f3ef 8210 	mrs	r2, PRIMASK
 800552e:	b912      	cbnz	r2, 8005536 <osThreadNew+0x1e>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 8005530:	f3ef 8211 	mrs	r2, BASEPRI
 8005534:	b11a      	cbz	r2, 800553e <osThreadNew+0x26>
 8005536:	4a22      	ldr	r2, [pc, #136]	; (80055c0 <osThreadNew+0xa8>)
 8005538:	6812      	ldr	r2, [r2, #0]
 800553a:	2a02      	cmp	r2, #2
 800553c:	d01c      	beq.n	8005578 <osThreadNew+0x60>
 800553e:	b1d8      	cbz	r0, 8005578 <osThreadNew+0x60>
    prio  = (UBaseType_t)osPriorityNormal;

    name = NULL;
    mem  = -1;

    if (attr != NULL) {
 8005540:	2c00      	cmp	r4, #0
 8005542:	d036      	beq.n	80055b2 <osThreadNew+0x9a>
      if (attr->name != NULL) {
        name = attr->name;
      }
      if (attr->priority != osPriorityNone) {
 8005544:	69a5      	ldr	r5, [r4, #24]
      if (attr->name != NULL) {
 8005546:	6821      	ldr	r1, [r4, #0]
 8005548:	2d00      	cmp	r5, #0
 800554a:	bf08      	it	eq
 800554c:	2518      	moveq	r5, #24
        prio = (UBaseType_t)attr->priority;
      }

      if ((prio < osPriorityIdle) || (prio > osPriorityISR) || ((attr->attr_bits & osThreadJoinable) == osThreadJoinable)) {
 800554e:	1e6a      	subs	r2, r5, #1
 8005550:	2a37      	cmp	r2, #55	; 0x37
 8005552:	462f      	mov	r7, r5
 8005554:	d831      	bhi.n	80055ba <osThreadNew+0xa2>
 8005556:	6862      	ldr	r2, [r4, #4]
 8005558:	07d2      	lsls	r2, r2, #31
 800555a:	d42e      	bmi.n	80055ba <osThreadNew+0xa2>
        return (NULL);
      }

      if (attr->stack_size > 0U) {
 800555c:	6966      	ldr	r6, [r4, #20]
 800555e:	b176      	cbz	r6, 800557e <osThreadNew+0x66>
        /* In FreeRTOS stack is not in bytes, but in sizeof(StackType_t) which is 4 on ARM ports.       */
        /* Stack size should be therefore 4 byte aligned in order to avoid division caused side effects */
        stack = attr->stack_size / sizeof(StackType_t);
 8005560:	08b2      	lsrs	r2, r6, #2
 8005562:	e9d4 ce02 	ldrd	ip, lr, [r4, #8]
      }

      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 8005566:	f1bc 0f00 	cmp.w	ip, #0
 800556a:	d00a      	beq.n	8005582 <osThreadNew+0x6a>
 800556c:	f1be 0f5f 	cmp.w	lr, #95	; 0x5f
 8005570:	d902      	bls.n	8005578 <osThreadNew+0x60>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 8005572:	6924      	ldr	r4, [r4, #16]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 8005574:	b104      	cbz	r4, 8005578 <osThreadNew+0x60>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 8005576:	b9ae      	cbnz	r6, 80055a4 <osThreadNew+0x8c>
        }
      }
    }
  }

  return ((osThreadId_t)hTask);
 8005578:	9805      	ldr	r0, [sp, #20]
}
 800557a:	b007      	add	sp, #28
 800557c:	bdf0      	pop	{r4, r5, r6, r7, pc}
    stack = configMINIMAL_STACK_SIZE;
 800557e:	2280      	movs	r2, #128	; 0x80
 8005580:	e7ef      	b.n	8005562 <osThreadNew+0x4a>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) && (attr->stack_mem == NULL)) {
 8005582:	f1be 0f00 	cmp.w	lr, #0
 8005586:	d1f7      	bne.n	8005578 <osThreadNew+0x60>
      if (mem == 0) {
 8005588:	6924      	ldr	r4, [r4, #16]
 800558a:	2c00      	cmp	r4, #0
 800558c:	d1f4      	bne.n	8005578 <osThreadNew+0x60>
        if (xTaskCreate ((TaskFunction_t)func, name, (uint16_t)stack, argument, prio, &hTask) != pdPASS) {
 800558e:	ac05      	add	r4, sp, #20
 8005590:	e9cd 7400 	strd	r7, r4, [sp]
 8005594:	b292      	uxth	r2, r2
 8005596:	f001 fb3d 	bl	8006c14 <xTaskCreate>
 800559a:	2801      	cmp	r0, #1
          hTask = NULL;
 800559c:	bf1c      	itt	ne
 800559e:	2300      	movne	r3, #0
 80055a0:	9305      	strne	r3, [sp, #20]
 80055a2:	e7e9      	b.n	8005578 <osThreadNew+0x60>
      hTask = xTaskCreateStatic ((TaskFunction_t)func, name, stack, argument, prio, (StackType_t  *)attr->stack_mem,
 80055a4:	e9cd 4c01 	strd	r4, ip, [sp, #4]
 80055a8:	9500      	str	r5, [sp, #0]
 80055aa:	f001 fafb 	bl	8006ba4 <xTaskCreateStatic>
 80055ae:	9005      	str	r0, [sp, #20]
 80055b0:	e7e2      	b.n	8005578 <osThreadNew+0x60>
    prio  = (UBaseType_t)osPriorityNormal;
 80055b2:	2718      	movs	r7, #24
    stack = configMINIMAL_STACK_SIZE;
 80055b4:	2280      	movs	r2, #128	; 0x80
    name = NULL;
 80055b6:	4621      	mov	r1, r4
 80055b8:	e7e9      	b.n	800558e <osThreadNew+0x76>
        return (NULL);
 80055ba:	2000      	movs	r0, #0
 80055bc:	e7dd      	b.n	800557a <osThreadNew+0x62>
 80055be:	bf00      	nop
 80055c0:	200016c0 	.word	0x200016c0

080055c4 <osSemaphoreNew>:
  return (stat);
}

/*---------------------------------------------------------------------------*/

osSemaphoreId_t osSemaphoreNew (uint32_t max_count, uint32_t initial_count, const osSemaphoreAttr_t *attr) {
 80055c4:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80055c6:	460e      	mov	r6, r1
 80055c8:	4615      	mov	r5, r2
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 80055ca:	f3ef 8305 	mrs	r3, IPSR
  const char *name;
  #endif

  hSemaphore = NULL;

  if (!IS_IRQ() && (max_count > 0U) && (initial_count <= max_count)) {
 80055ce:	b11b      	cbz	r3, 80055d8 <osSemaphoreNew+0x14>
        }

        if ((hSemaphore != NULL) && (initial_count != 0U)) {
          if (xSemaphoreGive (hSemaphore) != pdPASS) {
            vSemaphoreDelete (hSemaphore);
            hSemaphore = NULL;
 80055d0:	2400      	movs	r4, #0
      #endif
    }
  }

  return ((osSemaphoreId_t)hSemaphore);
}
 80055d2:	4620      	mov	r0, r4
 80055d4:	b002      	add	sp, #8
 80055d6:	bd70      	pop	{r4, r5, r6, pc}
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 80055d8:	f3ef 8310 	mrs	r3, PRIMASK
  if (!IS_IRQ() && (max_count > 0U) && (initial_count <= max_count)) {
 80055dc:	b913      	cbnz	r3, 80055e4 <osSemaphoreNew+0x20>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 80055de:	f3ef 8311 	mrs	r3, BASEPRI
 80055e2:	b11b      	cbz	r3, 80055ec <osSemaphoreNew+0x28>
 80055e4:	4b21      	ldr	r3, [pc, #132]	; (800566c <osSemaphoreNew+0xa8>)
 80055e6:	681b      	ldr	r3, [r3, #0]
 80055e8:	2b02      	cmp	r3, #2
 80055ea:	d0f1      	beq.n	80055d0 <osSemaphoreNew+0xc>
 80055ec:	2800      	cmp	r0, #0
 80055ee:	d0ef      	beq.n	80055d0 <osSemaphoreNew+0xc>
 80055f0:	42b0      	cmp	r0, r6
 80055f2:	d3ed      	bcc.n	80055d0 <osSemaphoreNew+0xc>
    if (attr != NULL) {
 80055f4:	b1ed      	cbz	r5, 8005632 <osSemaphoreNew+0x6e>
 80055f6:	e9d5 3202 	ldrd	r3, r2, [r5, #8]
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticSemaphore_t))) {
 80055fa:	b1c3      	cbz	r3, 800562e <osSemaphoreNew+0x6a>
 80055fc:	2a4f      	cmp	r2, #79	; 0x4f
 80055fe:	d9e7      	bls.n	80055d0 <osSemaphoreNew+0xc>
      if (max_count == 1U) {
 8005600:	2801      	cmp	r0, #1
 8005602:	d126      	bne.n	8005652 <osSemaphoreNew+0x8e>
          hSemaphore = xSemaphoreCreateBinaryStatic ((StaticSemaphore_t *)attr->cb_mem);
 8005604:	2203      	movs	r2, #3
 8005606:	9200      	str	r2, [sp, #0]
 8005608:	2200      	movs	r2, #0
 800560a:	4611      	mov	r1, r2
 800560c:	f000 fd32 	bl	8006074 <xQueueGenericCreateStatic>
          hSemaphore = xSemaphoreCreateBinary();
 8005610:	4604      	mov	r4, r0
        if ((hSemaphore != NULL) && (initial_count != 0U)) {
 8005612:	2800      	cmp	r0, #0
 8005614:	d0dc      	beq.n	80055d0 <osSemaphoreNew+0xc>
 8005616:	b1ce      	cbz	r6, 800564c <osSemaphoreNew+0x88>
          if (xSemaphoreGive (hSemaphore) != pdPASS) {
 8005618:	2300      	movs	r3, #0
 800561a:	461a      	mov	r2, r3
 800561c:	4619      	mov	r1, r3
 800561e:	f000 fddf 	bl	80061e0 <xQueueGenericSend>
 8005622:	2801      	cmp	r0, #1
 8005624:	d012      	beq.n	800564c <osSemaphoreNew+0x88>
            vSemaphoreDelete (hSemaphore);
 8005626:	4620      	mov	r0, r4
 8005628:	f001 f91a 	bl	8006860 <vQueueDelete>
 800562c:	e7d0      	b.n	80055d0 <osSemaphoreNew+0xc>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U)) {
 800562e:	2a00      	cmp	r2, #0
 8005630:	d1ce      	bne.n	80055d0 <osSemaphoreNew+0xc>
      if (max_count == 1U) {
 8005632:	2801      	cmp	r0, #1
 8005634:	d104      	bne.n	8005640 <osSemaphoreNew+0x7c>
          hSemaphore = xSemaphoreCreateBinary();
 8005636:	2203      	movs	r2, #3
 8005638:	2100      	movs	r1, #0
 800563a:	f000 fd69 	bl	8006110 <xQueueGenericCreate>
 800563e:	e7e7      	b.n	8005610 <osSemaphoreNew+0x4c>
          hSemaphore = xSemaphoreCreateCounting (max_count, initial_count);
 8005640:	4631      	mov	r1, r6
 8005642:	f000 fdae 	bl	80061a2 <xQueueCreateCountingSemaphore>
      if (hSemaphore != NULL) {
 8005646:	4604      	mov	r4, r0
 8005648:	2800      	cmp	r0, #0
 800564a:	d0c1      	beq.n	80055d0 <osSemaphoreNew+0xc>
        if (attr != NULL) {
 800564c:	b945      	cbnz	r5, 8005660 <osSemaphoreNew+0x9c>
          name = NULL;
 800564e:	4629      	mov	r1, r5
 8005650:	e007      	b.n	8005662 <osSemaphoreNew+0x9e>
          hSemaphore = xSemaphoreCreateCountingStatic (max_count, initial_count, (StaticSemaphore_t *)attr->cb_mem);
 8005652:	461a      	mov	r2, r3
 8005654:	4631      	mov	r1, r6
 8005656:	f000 fd82 	bl	800615e <xQueueCreateCountingSemaphoreStatic>
      if (hSemaphore != NULL) {
 800565a:	4604      	mov	r4, r0
 800565c:	2800      	cmp	r0, #0
 800565e:	d0b7      	beq.n	80055d0 <osSemaphoreNew+0xc>
          name = attr->name;
 8005660:	6829      	ldr	r1, [r5, #0]
        vQueueAddToRegistry (hSemaphore, name);
 8005662:	4620      	mov	r0, r4
 8005664:	f001 f8d6 	bl	8006814 <vQueueAddToRegistry>
  return ((osSemaphoreId_t)hSemaphore);
 8005668:	e7b3      	b.n	80055d2 <osSemaphoreNew+0xe>
 800566a:	bf00      	nop
 800566c:	200016c0 	.word	0x200016c0

08005670 <osSemaphoreAcquire>:

osStatus_t osSemaphoreAcquire (osSemaphoreId_t semaphore_id, uint32_t timeout) {
 8005670:	b513      	push	{r0, r1, r4, lr}
 8005672:	460c      	mov	r4, r1
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 8005674:	b918      	cbnz	r0, 800567e <osSemaphoreAcquire+0xe>
    stat = osErrorParameter;
 8005676:	f06f 0003 	mvn.w	r0, #3
      }
    }
  }

  return (stat);
}
 800567a:	b002      	add	sp, #8
 800567c:	bd10      	pop	{r4, pc}
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 800567e:	f3ef 8305 	mrs	r3, IPSR
  else if (IS_IRQ()) {
 8005682:	b16b      	cbz	r3, 80056a0 <osSemaphoreAcquire+0x30>
    if (timeout != 0U) {
 8005684:	2c00      	cmp	r4, #0
 8005686:	d1f6      	bne.n	8005676 <osSemaphoreAcquire+0x6>
      yield = pdFALSE;
 8005688:	aa02      	add	r2, sp, #8
      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 800568a:	4621      	mov	r1, r4
      yield = pdFALSE;
 800568c:	f842 4d04 	str.w	r4, [r2, #-4]!
      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 8005690:	f001 f870 	bl	8006774 <xQueueReceiveFromISR>
 8005694:	2801      	cmp	r0, #1
 8005696:	d113      	bne.n	80056c0 <osSemaphoreAcquire+0x50>
        portYIELD_FROM_ISR (yield);
 8005698:	9b01      	ldr	r3, [sp, #4]
 800569a:	b9a3      	cbnz	r3, 80056c6 <osSemaphoreAcquire+0x56>
  stat = osOK;
 800569c:	2000      	movs	r0, #0
 800569e:	e7ec      	b.n	800567a <osSemaphoreAcquire+0xa>
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 80056a0:	f3ef 8310 	mrs	r3, PRIMASK
  else if (IS_IRQ()) {
 80056a4:	b913      	cbnz	r3, 80056ac <osSemaphoreAcquire+0x3c>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 80056a6:	f3ef 8311 	mrs	r3, BASEPRI
 80056aa:	b11b      	cbz	r3, 80056b4 <osSemaphoreAcquire+0x44>
 80056ac:	4b0c      	ldr	r3, [pc, #48]	; (80056e0 <osSemaphoreAcquire+0x70>)
 80056ae:	681b      	ldr	r3, [r3, #0]
 80056b0:	2b02      	cmp	r3, #2
 80056b2:	d0e7      	beq.n	8005684 <osSemaphoreAcquire+0x14>
    if (xSemaphoreTake (hSemaphore, (TickType_t)timeout) != pdPASS) {
 80056b4:	4621      	mov	r1, r4
 80056b6:	f000 ff9b 	bl	80065f0 <xQueueSemaphoreTake>
 80056ba:	2801      	cmp	r0, #1
 80056bc:	d0ee      	beq.n	800569c <osSemaphoreAcquire+0x2c>
      if (timeout != 0U) {
 80056be:	b95c      	cbnz	r4, 80056d8 <osSemaphoreAcquire+0x68>
        stat = osErrorResource;
 80056c0:	f06f 0002 	mvn.w	r0, #2
 80056c4:	e7d9      	b.n	800567a <osSemaphoreAcquire+0xa>
        portYIELD_FROM_ISR (yield);
 80056c6:	4b07      	ldr	r3, [pc, #28]	; (80056e4 <osSemaphoreAcquire+0x74>)
 80056c8:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 80056cc:	601a      	str	r2, [r3, #0]
 80056ce:	f3bf 8f4f 	dsb	sy
 80056d2:	f3bf 8f6f 	isb	sy
 80056d6:	e7e1      	b.n	800569c <osSemaphoreAcquire+0x2c>
        stat = osErrorTimeout;
 80056d8:	f06f 0001 	mvn.w	r0, #1
  return (stat);
 80056dc:	e7cd      	b.n	800567a <osSemaphoreAcquire+0xa>
 80056de:	bf00      	nop
 80056e0:	200016c0 	.word	0x200016c0
 80056e4:	e000ed04 	.word	0xe000ed04

080056e8 <osSemaphoreRelease>:

osStatus_t osSemaphoreRelease (osSemaphoreId_t semaphore_id) {
 80056e8:	b513      	push	{r0, r1, r4, lr}
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 80056ea:	b368      	cbz	r0, 8005748 <osSemaphoreRelease+0x60>
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 80056ec:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
 80056f0:	b153      	cbz	r3, 8005708 <osSemaphoreRelease+0x20>
    yield = pdFALSE;
 80056f2:	a902      	add	r1, sp, #8
 80056f4:	2400      	movs	r4, #0
 80056f6:	f841 4d04 	str.w	r4, [r1, #-4]!

    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 80056fa:	f000 fe84 	bl	8006406 <xQueueGiveFromISR>
 80056fe:	2801      	cmp	r0, #1
 8005700:	d014      	beq.n	800572c <osSemaphoreRelease+0x44>
      portYIELD_FROM_ISR (yield);
    }
  }
  else {
    if (xSemaphoreGive (hSemaphore) != pdPASS) {
      stat = osErrorResource;
 8005702:	f06f 0002 	mvn.w	r0, #2
 8005706:	e014      	b.n	8005732 <osSemaphoreRelease+0x4a>
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8005708:	f3ef 8310 	mrs	r3, PRIMASK
  else if (IS_IRQ()) {
 800570c:	b913      	cbnz	r3, 8005714 <osSemaphoreRelease+0x2c>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 800570e:	f3ef 8311 	mrs	r3, BASEPRI
 8005712:	b11b      	cbz	r3, 800571c <osSemaphoreRelease+0x34>
 8005714:	4b0e      	ldr	r3, [pc, #56]	; (8005750 <osSemaphoreRelease+0x68>)
 8005716:	681b      	ldr	r3, [r3, #0]
 8005718:	2b02      	cmp	r3, #2
 800571a:	d0ea      	beq.n	80056f2 <osSemaphoreRelease+0xa>
    if (xSemaphoreGive (hSemaphore) != pdPASS) {
 800571c:	2300      	movs	r3, #0
 800571e:	461a      	mov	r2, r3
 8005720:	4619      	mov	r1, r3
 8005722:	f000 fd5d 	bl	80061e0 <xQueueGenericSend>
 8005726:	2801      	cmp	r0, #1
 8005728:	d002      	beq.n	8005730 <osSemaphoreRelease+0x48>
 800572a:	e7ea      	b.n	8005702 <osSemaphoreRelease+0x1a>
      portYIELD_FROM_ISR (yield);
 800572c:	9b01      	ldr	r3, [sp, #4]
 800572e:	b913      	cbnz	r3, 8005736 <osSemaphoreRelease+0x4e>
  stat = osOK;
 8005730:	2000      	movs	r0, #0
    }
  }

  return (stat);
}
 8005732:	b002      	add	sp, #8
 8005734:	bd10      	pop	{r4, pc}
      portYIELD_FROM_ISR (yield);
 8005736:	4b07      	ldr	r3, [pc, #28]	; (8005754 <osSemaphoreRelease+0x6c>)
 8005738:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800573c:	601a      	str	r2, [r3, #0]
 800573e:	f3bf 8f4f 	dsb	sy
 8005742:	f3bf 8f6f 	isb	sy
 8005746:	e7f3      	b.n	8005730 <osSemaphoreRelease+0x48>
    stat = osErrorParameter;
 8005748:	f06f 0003 	mvn.w	r0, #3
  return (stat);
 800574c:	e7f1      	b.n	8005732 <osSemaphoreRelease+0x4a>
 800574e:	bf00      	nop
 8005750:	200016c0 	.word	0x200016c0
 8005754:	e000ed04 	.word	0xe000ed04

08005758 <osMessageQueueNew>:
  return (stat);
}

/*---------------------------------------------------------------------------*/

osMessageQueueId_t osMessageQueueNew (uint32_t msg_count, uint32_t msg_size, const osMessageQueueAttr_t *attr) {
 8005758:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800575a:	4614      	mov	r4, r2
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 800575c:	f3ef 8305 	mrs	r3, IPSR
  const char *name;
  #endif

  hQueue = NULL;

  if (!IS_IRQ() && (msg_count > 0U) && (msg_size > 0U)) {
 8005760:	b11b      	cbz	r3, 800576a <osMessageQueueNew+0x12>
  hQueue = NULL;
 8005762:	2500      	movs	r5, #0
    #endif

  }

  return ((osMessageQueueId_t)hQueue);
}
 8005764:	4628      	mov	r0, r5
 8005766:	b002      	add	sp, #8
 8005768:	bd70      	pop	{r4, r5, r6, pc}
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 800576a:	f3ef 8310 	mrs	r3, PRIMASK
  if (!IS_IRQ() && (msg_count > 0U) && (msg_size > 0U)) {
 800576e:	b913      	cbnz	r3, 8005776 <osMessageQueueNew+0x1e>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 8005770:	f3ef 8311 	mrs	r3, BASEPRI
 8005774:	b11b      	cbz	r3, 800577e <osMessageQueueNew+0x26>
 8005776:	4b1a      	ldr	r3, [pc, #104]	; (80057e0 <osMessageQueueNew+0x88>)
 8005778:	681b      	ldr	r3, [r3, #0]
 800577a:	2b02      	cmp	r3, #2
 800577c:	d0f1      	beq.n	8005762 <osMessageQueueNew+0xa>
 800577e:	2800      	cmp	r0, #0
 8005780:	d0ef      	beq.n	8005762 <osMessageQueueNew+0xa>
 8005782:	2900      	cmp	r1, #0
 8005784:	d0ed      	beq.n	8005762 <osMessageQueueNew+0xa>
    if (attr != NULL) {
 8005786:	b304      	cbz	r4, 80057ca <osMessageQueueNew+0x72>
 8005788:	e9d4 3202 	ldrd	r3, r2, [r4, #8]
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 800578c:	b1ab      	cbz	r3, 80057ba <osMessageQueueNew+0x62>
 800578e:	2a4f      	cmp	r2, #79	; 0x4f
 8005790:	d9e7      	bls.n	8005762 <osMessageQueueNew+0xa>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 8005792:	6922      	ldr	r2, [r4, #16]
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 8005794:	2a00      	cmp	r2, #0
 8005796:	d0e4      	beq.n	8005762 <osMessageQueueNew+0xa>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 8005798:	6966      	ldr	r6, [r4, #20]
 800579a:	fb01 f500 	mul.w	r5, r1, r0
 800579e:	42ae      	cmp	r6, r5
 80057a0:	d3df      	bcc.n	8005762 <osMessageQueueNew+0xa>
      hQueue = xQueueCreateStatic (msg_count, msg_size, attr->mq_mem, attr->cb_mem);
 80057a2:	2500      	movs	r5, #0
 80057a4:	9500      	str	r5, [sp, #0]
 80057a6:	f000 fc65 	bl	8006074 <xQueueGenericCreateStatic>
    if (hQueue != NULL) {
 80057aa:	4605      	mov	r5, r0
 80057ac:	2800      	cmp	r0, #0
 80057ae:	d0d8      	beq.n	8005762 <osMessageQueueNew+0xa>
        name = attr->name;
 80057b0:	6821      	ldr	r1, [r4, #0]
      vQueueAddToRegistry (hQueue, name);
 80057b2:	4628      	mov	r0, r5
 80057b4:	f001 f82e 	bl	8006814 <vQueueAddToRegistry>
  return ((osMessageQueueId_t)hQueue);
 80057b8:	e7d4      	b.n	8005764 <osMessageQueueNew+0xc>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) &&
 80057ba:	2a00      	cmp	r2, #0
 80057bc:	d1d1      	bne.n	8005762 <osMessageQueueNew+0xa>
 80057be:	6923      	ldr	r3, [r4, #16]
 80057c0:	2b00      	cmp	r3, #0
 80057c2:	d1ce      	bne.n	8005762 <osMessageQueueNew+0xa>
            (attr->mq_mem == NULL) && (attr->mq_size == 0U)) {
 80057c4:	6963      	ldr	r3, [r4, #20]
 80057c6:	2b00      	cmp	r3, #0
 80057c8:	d1cb      	bne.n	8005762 <osMessageQueueNew+0xa>
        hQueue = xQueueCreate (msg_count, msg_size);
 80057ca:	2200      	movs	r2, #0
 80057cc:	f000 fca0 	bl	8006110 <xQueueGenericCreate>
    if (hQueue != NULL) {
 80057d0:	4605      	mov	r5, r0
 80057d2:	2800      	cmp	r0, #0
 80057d4:	d0c5      	beq.n	8005762 <osMessageQueueNew+0xa>
      if (attr != NULL) {
 80057d6:	2c00      	cmp	r4, #0
 80057d8:	d1ea      	bne.n	80057b0 <osMessageQueueNew+0x58>
        name = NULL;
 80057da:	4621      	mov	r1, r4
 80057dc:	e7e9      	b.n	80057b2 <osMessageQueueNew+0x5a>
 80057de:	bf00      	nop
 80057e0:	200016c0 	.word	0x200016c0

080057e4 <osMessageQueuePut>:

osStatus_t osMessageQueuePut (osMessageQueueId_t mq_id, const void *msg_ptr, uint8_t msg_prio, uint32_t timeout) {
 80057e4:	b513      	push	{r0, r1, r4, lr}
 80057e6:	461c      	mov	r4, r3
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 80057e8:	f3ef 8305 	mrs	r3, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 80057ec:	b123      	cbz	r3, 80057f8 <osMessageQueuePut+0x14>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 80057ee:	b9d8      	cbnz	r0, 8005828 <osMessageQueuePut+0x44>
      stat = osErrorParameter;
 80057f0:	f06f 0003 	mvn.w	r0, #3
      }
    }
  }

  return (stat);
}
 80057f4:	b002      	add	sp, #8
 80057f6:	bd10      	pop	{r4, pc}
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 80057f8:	f3ef 8310 	mrs	r3, PRIMASK
  if (IS_IRQ()) {
 80057fc:	b913      	cbnz	r3, 8005804 <osMessageQueuePut+0x20>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 80057fe:	f3ef 8311 	mrs	r3, BASEPRI
 8005802:	b11b      	cbz	r3, 800580c <osMessageQueuePut+0x28>
 8005804:	4b16      	ldr	r3, [pc, #88]	; (8005860 <osMessageQueuePut+0x7c>)
 8005806:	681b      	ldr	r3, [r3, #0]
 8005808:	2b02      	cmp	r3, #2
 800580a:	d0f0      	beq.n	80057ee <osMessageQueuePut+0xa>
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 800580c:	2800      	cmp	r0, #0
 800580e:	d0ef      	beq.n	80057f0 <osMessageQueuePut+0xc>
 8005810:	2900      	cmp	r1, #0
 8005812:	d0ed      	beq.n	80057f0 <osMessageQueuePut+0xc>
      if (xQueueSendToBack (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 8005814:	2300      	movs	r3, #0
 8005816:	4622      	mov	r2, r4
 8005818:	f000 fce2 	bl	80061e0 <xQueueGenericSend>
 800581c:	2801      	cmp	r0, #1
 800581e:	d011      	beq.n	8005844 <osMessageQueuePut+0x60>
        if (timeout != 0U) {
 8005820:	b9dc      	cbnz	r4, 800585a <osMessageQueuePut+0x76>
          stat = osErrorResource;
 8005822:	f06f 0002 	mvn.w	r0, #2
 8005826:	e7e5      	b.n	80057f4 <osMessageQueuePut+0x10>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 8005828:	2900      	cmp	r1, #0
 800582a:	d0e1      	beq.n	80057f0 <osMessageQueuePut+0xc>
 800582c:	2c00      	cmp	r4, #0
 800582e:	d1df      	bne.n	80057f0 <osMessageQueuePut+0xc>
      yield = pdFALSE;
 8005830:	aa02      	add	r2, sp, #8
      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 8005832:	4623      	mov	r3, r4
      yield = pdFALSE;
 8005834:	f842 4d04 	str.w	r4, [r2, #-4]!
      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 8005838:	f000 fd84 	bl	8006344 <xQueueGenericSendFromISR>
 800583c:	2801      	cmp	r0, #1
 800583e:	d1f0      	bne.n	8005822 <osMessageQueuePut+0x3e>
        portYIELD_FROM_ISR (yield);
 8005840:	9b01      	ldr	r3, [sp, #4]
 8005842:	b90b      	cbnz	r3, 8005848 <osMessageQueuePut+0x64>
  stat = osOK;
 8005844:	2000      	movs	r0, #0
 8005846:	e7d5      	b.n	80057f4 <osMessageQueuePut+0x10>
        portYIELD_FROM_ISR (yield);
 8005848:	4b06      	ldr	r3, [pc, #24]	; (8005864 <osMessageQueuePut+0x80>)
 800584a:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800584e:	601a      	str	r2, [r3, #0]
 8005850:	f3bf 8f4f 	dsb	sy
 8005854:	f3bf 8f6f 	isb	sy
 8005858:	e7f4      	b.n	8005844 <osMessageQueuePut+0x60>
          stat = osErrorTimeout;
 800585a:	f06f 0001 	mvn.w	r0, #1
  return (stat);
 800585e:	e7c9      	b.n	80057f4 <osMessageQueuePut+0x10>
 8005860:	200016c0 	.word	0x200016c0
 8005864:	e000ed04 	.word	0xe000ed04

08005868 <osMessageQueueGet>:

osStatus_t osMessageQueueGet (osMessageQueueId_t mq_id, void *msg_ptr, uint8_t *msg_prio, uint32_t timeout) {
 8005868:	b513      	push	{r0, r1, r4, lr}
 800586a:	461c      	mov	r4, r3
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 800586c:	f3ef 8305 	mrs	r3, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 8005870:	b123      	cbz	r3, 800587c <osMessageQueueGet+0x14>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 8005872:	b9d0      	cbnz	r0, 80058aa <osMessageQueueGet+0x42>
      stat = osErrorParameter;
 8005874:	f06f 0003 	mvn.w	r0, #3
      }
    }
  }

  return (stat);
}
 8005878:	b002      	add	sp, #8
 800587a:	bd10      	pop	{r4, pc}
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 800587c:	f3ef 8310 	mrs	r3, PRIMASK
  if (IS_IRQ()) {
 8005880:	b913      	cbnz	r3, 8005888 <osMessageQueueGet+0x20>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 8005882:	f3ef 8311 	mrs	r3, BASEPRI
 8005886:	b11b      	cbz	r3, 8005890 <osMessageQueueGet+0x28>
 8005888:	4b15      	ldr	r3, [pc, #84]	; (80058e0 <osMessageQueueGet+0x78>)
 800588a:	681b      	ldr	r3, [r3, #0]
 800588c:	2b02      	cmp	r3, #2
 800588e:	d0f0      	beq.n	8005872 <osMessageQueueGet+0xa>
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 8005890:	2800      	cmp	r0, #0
 8005892:	d0ef      	beq.n	8005874 <osMessageQueueGet+0xc>
 8005894:	2900      	cmp	r1, #0
 8005896:	d0ed      	beq.n	8005874 <osMessageQueueGet+0xc>
      if (xQueueReceive (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 8005898:	4622      	mov	r2, r4
 800589a:	f000 fe09 	bl	80064b0 <xQueueReceive>
 800589e:	2801      	cmp	r0, #1
 80058a0:	d010      	beq.n	80058c4 <osMessageQueueGet+0x5c>
        if (timeout != 0U) {
 80058a2:	b9d4      	cbnz	r4, 80058da <osMessageQueueGet+0x72>
          stat = osErrorResource;
 80058a4:	f06f 0002 	mvn.w	r0, #2
 80058a8:	e7e6      	b.n	8005878 <osMessageQueueGet+0x10>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 80058aa:	2900      	cmp	r1, #0
 80058ac:	d0e2      	beq.n	8005874 <osMessageQueueGet+0xc>
 80058ae:	2c00      	cmp	r4, #0
 80058b0:	d1e0      	bne.n	8005874 <osMessageQueueGet+0xc>
      yield = pdFALSE;
 80058b2:	aa02      	add	r2, sp, #8
 80058b4:	f842 4d04 	str.w	r4, [r2, #-4]!
      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 80058b8:	f000 ff5c 	bl	8006774 <xQueueReceiveFromISR>
 80058bc:	2801      	cmp	r0, #1
 80058be:	d1f1      	bne.n	80058a4 <osMessageQueueGet+0x3c>
        portYIELD_FROM_ISR (yield);
 80058c0:	9b01      	ldr	r3, [sp, #4]
 80058c2:	b90b      	cbnz	r3, 80058c8 <osMessageQueueGet+0x60>
  stat = osOK;
 80058c4:	2000      	movs	r0, #0
 80058c6:	e7d7      	b.n	8005878 <osMessageQueueGet+0x10>
        portYIELD_FROM_ISR (yield);
 80058c8:	4b06      	ldr	r3, [pc, #24]	; (80058e4 <osMessageQueueGet+0x7c>)
 80058ca:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 80058ce:	601a      	str	r2, [r3, #0]
 80058d0:	f3bf 8f4f 	dsb	sy
 80058d4:	f3bf 8f6f 	isb	sy
 80058d8:	e7f4      	b.n	80058c4 <osMessageQueueGet+0x5c>
          stat = osErrorTimeout;
 80058da:	f06f 0001 	mvn.w	r0, #1
  return (stat);
 80058de:	e7cb      	b.n	8005878 <osMessageQueueGet+0x10>
 80058e0:	200016c0 	.word	0x200016c0
 80058e4:	e000ed04 	.word	0xe000ed04

080058e8 <vApplicationGetIdleTaskMemory>:
/*
  vApplicationGetIdleTaskMemory gets called when configSUPPORT_STATIC_ALLOCATION
  equals to 1 and is required for static memory allocation support.
*/
void vApplicationGetIdleTaskMemory (StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskStackBuffer, uint32_t *pulIdleTaskStackSize) {
  *ppxIdleTaskTCBBuffer   = &Idle_TCB;
 80058e8:	4b03      	ldr	r3, [pc, #12]	; (80058f8 <vApplicationGetIdleTaskMemory+0x10>)
 80058ea:	6003      	str	r3, [r0, #0]
  *ppxIdleTaskStackBuffer = &Idle_Stack[0];
 80058ec:	4b03      	ldr	r3, [pc, #12]	; (80058fc <vApplicationGetIdleTaskMemory+0x14>)
 80058ee:	600b      	str	r3, [r1, #0]
  *pulIdleTaskStackSize   = (uint32_t)configMINIMAL_STACK_SIZE;
 80058f0:	2380      	movs	r3, #128	; 0x80
 80058f2:	6013      	str	r3, [r2, #0]
}
 80058f4:	4770      	bx	lr
 80058f6:	bf00      	nop
 80058f8:	20001660 	.word	0x20001660
 80058fc:	20001460 	.word	0x20001460

08005900 <vApplicationGetTimerTaskMemory>:
/*
  vApplicationGetTimerTaskMemory gets called when configSUPPORT_STATIC_ALLOCATION
  equals to 1 and is required for static memory allocation support.
*/
void vApplicationGetTimerTaskMemory (StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **ppxTimerTaskStackBuffer, uint32_t *pulTimerTaskStackSize) {
  *ppxTimerTaskTCBBuffer   = &Timer_TCB;
 8005900:	4b03      	ldr	r3, [pc, #12]	; (8005910 <vApplicationGetTimerTaskMemory+0x10>)
 8005902:	6003      	str	r3, [r0, #0]
  *ppxTimerTaskStackBuffer = &Timer_Stack[0];
 8005904:	4b03      	ldr	r3, [pc, #12]	; (8005914 <vApplicationGetTimerTaskMemory+0x14>)
 8005906:	600b      	str	r3, [r1, #0]
  *pulTimerTaskStackSize   = (uint32_t)configTIMER_TASK_STACK_DEPTH;
 8005908:	f44f 7380 	mov.w	r3, #256	; 0x100
 800590c:	6013      	str	r3, [r2, #0]
}
 800590e:	4770      	bx	lr
 8005910:	20001ac4 	.word	0x20001ac4
 8005914:	200016c4 	.word	0x200016c4

08005918 <prvInsertBlockIntoFreeList>:
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
}
/*-----------------------------------------------------------*/

static void prvInsertBlockIntoFreeList( BlockLink_t *pxBlockToInsert )
{
 8005918:	b510      	push	{r4, lr}
BlockLink_t *pxIterator;
uint8_t *puc;

	/* Iterate through the list until a block is found that has a higher address
	than the block being inserted. */
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 800591a:	4b0f      	ldr	r3, [pc, #60]	; (8005958 <prvInsertBlockIntoFreeList+0x40>)
 800591c:	681a      	ldr	r2, [r3, #0]
 800591e:	4282      	cmp	r2, r0
 8005920:	d318      	bcc.n	8005954 <prvInsertBlockIntoFreeList+0x3c>
	}

	/* Do the block being inserted, and the block it is being inserted after
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxIterator;
	if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
 8005922:	685c      	ldr	r4, [r3, #4]
 8005924:	1919      	adds	r1, r3, r4
 8005926:	4288      	cmp	r0, r1
	{
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 8005928:	bf01      	itttt	eq
 800592a:	6841      	ldreq	r1, [r0, #4]
 800592c:	4618      	moveq	r0, r3
 800592e:	1909      	addeq	r1, r1, r4
 8005930:	6059      	streq	r1, [r3, #4]
	}

	/* Do the block being inserted, and the block it is being inserted before
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxBlockToInsert;
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 8005932:	6844      	ldr	r4, [r0, #4]
 8005934:	1901      	adds	r1, r0, r4
 8005936:	428a      	cmp	r2, r1
 8005938:	d107      	bne.n	800594a <prvInsertBlockIntoFreeList+0x32>
	{
		if( pxIterator->pxNextFreeBlock != pxEnd )
 800593a:	4908      	ldr	r1, [pc, #32]	; (800595c <prvInsertBlockIntoFreeList+0x44>)
 800593c:	6809      	ldr	r1, [r1, #0]
 800593e:	428a      	cmp	r2, r1
		{
			/* Form one big block from the two blocks. */
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 8005940:	bf1f      	itttt	ne
 8005942:	6851      	ldrne	r1, [r2, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 8005944:	6812      	ldrne	r2, [r2, #0]
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 8005946:	1909      	addne	r1, r1, r4
 8005948:	6041      	strne	r1, [r0, #4]

	/* If the block being inserted plugged a gab, so was merged with the block
	before and the block after, then it's pxNextFreeBlock pointer will have
	already been set, and should not be set here as that would make it point
	to itself. */
	if( pxIterator != pxBlockToInsert )
 800594a:	4298      	cmp	r0, r3
		pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock;
 800594c:	6002      	str	r2, [r0, #0]
	{
		pxIterator->pxNextFreeBlock = pxBlockToInsert;
 800594e:	bf18      	it	ne
 8005950:	6018      	strne	r0, [r3, #0]
	}
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}
}
 8005952:	bd10      	pop	{r4, pc}
 8005954:	4613      	mov	r3, r2
 8005956:	e7e1      	b.n	800591c <prvInsertBlockIntoFreeList+0x4>
 8005958:	20011b34 	.word	0x20011b34
 800595c:	20001b24 	.word	0x20001b24

08005960 <pvPortMalloc>:
{
 8005960:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8005964:	4604      	mov	r4, r0
	vTaskSuspendAll();
 8005966:	f001 f9c7 	bl	8006cf8 <vTaskSuspendAll>
		if( pxEnd == NULL )
 800596a:	493d      	ldr	r1, [pc, #244]	; (8005a60 <pvPortMalloc+0x100>)
 800596c:	4d3d      	ldr	r5, [pc, #244]	; (8005a64 <pvPortMalloc+0x104>)
 800596e:	680b      	ldr	r3, [r1, #0]
 8005970:	b9fb      	cbnz	r3, 80059b2 <pvPortMalloc+0x52>
	uxAddress = ( size_t ) ucHeap;
 8005972:	4a3d      	ldr	r2, [pc, #244]	; (8005a68 <pvPortMalloc+0x108>)
	if( ( uxAddress & portBYTE_ALIGNMENT_MASK ) != 0 )
 8005974:	0756      	lsls	r6, r2, #29
 8005976:	f502 3380 	add.w	r3, r2, #65536	; 0x10000
		uxAddress += ( portBYTE_ALIGNMENT - 1 );
 800597a:	bf1d      	ittte	ne
 800597c:	3207      	addne	r2, #7
		uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 800597e:	f022 0207 	bicne.w	r2, r2, #7
		xTotalHeapSize -= uxAddress - ( size_t ) ucHeap;
 8005982:	1a9b      	subne	r3, r3, r2
size_t xTotalHeapSize = configTOTAL_HEAP_SIZE;
 8005984:	f44f 3380 	moveq.w	r3, #65536	; 0x10000
	uxAddress = ( ( size_t ) pucAlignedHeap ) + xTotalHeapSize;
 8005988:	4413      	add	r3, r2
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 800598a:	4e38      	ldr	r6, [pc, #224]	; (8005a6c <pvPortMalloc+0x10c>)
	uxAddress -= xHeapStructSize;
 800598c:	3b08      	subs	r3, #8
	uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 800598e:	f023 0307 	bic.w	r3, r3, #7
	xStart.xBlockSize = ( size_t ) 0;
 8005992:	2000      	movs	r0, #0
 8005994:	6070      	str	r0, [r6, #4]
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 8005996:	6032      	str	r2, [r6, #0]
	pxEnd->pxNextFreeBlock = NULL;
 8005998:	e9c3 0000 	strd	r0, r0, [r3]
	pxFirstFreeBlock->xBlockSize = uxAddress - ( size_t ) pxFirstFreeBlock;
 800599c:	1a98      	subs	r0, r3, r2
	pxEnd = ( void * ) uxAddress;
 800599e:	600b      	str	r3, [r1, #0]
	pxFirstFreeBlock->pxNextFreeBlock = pxEnd;
 80059a0:	e9c2 3000 	strd	r3, r0, [r2]
	xMinimumEverFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 80059a4:	4b32      	ldr	r3, [pc, #200]	; (8005a70 <pvPortMalloc+0x110>)
 80059a6:	6018      	str	r0, [r3, #0]
	xFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 80059a8:	4b32      	ldr	r3, [pc, #200]	; (8005a74 <pvPortMalloc+0x114>)
 80059aa:	6018      	str	r0, [r3, #0]
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
 80059ac:	f04f 4300 	mov.w	r3, #2147483648	; 0x80000000
 80059b0:	602b      	str	r3, [r5, #0]
		if( ( xWantedSize & xBlockAllocatedBit ) == 0 )
 80059b2:	682f      	ldr	r7, [r5, #0]
 80059b4:	4227      	tst	r7, r4
 80059b6:	d14e      	bne.n	8005a56 <pvPortMalloc+0xf6>
			if( xWantedSize > 0 )
 80059b8:	2c00      	cmp	r4, #0
 80059ba:	d03f      	beq.n	8005a3c <pvPortMalloc+0xdc>
				xWantedSize += xHeapStructSize;
 80059bc:	f104 0308 	add.w	r3, r4, #8
				if( ( xWantedSize & portBYTE_ALIGNMENT_MASK ) != 0x00 )
 80059c0:	0758      	lsls	r0, r3, #29
					xWantedSize += ( portBYTE_ALIGNMENT - ( xWantedSize & portBYTE_ALIGNMENT_MASK ) );
 80059c2:	bf1c      	itt	ne
 80059c4:	f023 0307 	bicne.w	r3, r3, #7
 80059c8:	3308      	addne	r3, #8
			if( ( xWantedSize > 0 ) && ( xWantedSize <= xFreeBytesRemaining ) )
 80059ca:	2b00      	cmp	r3, #0
 80059cc:	d043      	beq.n	8005a56 <pvPortMalloc+0xf6>
 80059ce:	4a29      	ldr	r2, [pc, #164]	; (8005a74 <pvPortMalloc+0x114>)
 80059d0:	6816      	ldr	r6, [r2, #0]
 80059d2:	429e      	cmp	r6, r3
 80059d4:	4690      	mov	r8, r2
 80059d6:	d33e      	bcc.n	8005a56 <pvPortMalloc+0xf6>
				pxBlock = xStart.pxNextFreeBlock;
 80059d8:	4a24      	ldr	r2, [pc, #144]	; (8005a6c <pvPortMalloc+0x10c>)
 80059da:	6815      	ldr	r5, [r2, #0]
				while( ( pxBlock->xBlockSize < xWantedSize ) && ( pxBlock->pxNextFreeBlock != NULL ) )
 80059dc:	6868      	ldr	r0, [r5, #4]
 80059de:	4298      	cmp	r0, r3
 80059e0:	d201      	bcs.n	80059e6 <pvPortMalloc+0x86>
 80059e2:	682c      	ldr	r4, [r5, #0]
 80059e4:	b9a4      	cbnz	r4, 8005a10 <pvPortMalloc+0xb0>
				if( pxBlock != pxEnd )
 80059e6:	6809      	ldr	r1, [r1, #0]
 80059e8:	42a9      	cmp	r1, r5
 80059ea:	d034      	beq.n	8005a56 <pvPortMalloc+0xf6>
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
 80059ec:	6829      	ldr	r1, [r5, #0]
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
 80059ee:	6814      	ldr	r4, [r2, #0]
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
 80059f0:	6011      	str	r1, [r2, #0]
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
 80059f2:	1ac2      	subs	r2, r0, r3
 80059f4:	2a10      	cmp	r2, #16
 80059f6:	d912      	bls.n	8005a1e <pvPortMalloc+0xbe>
						pxNewBlockLink = ( void * ) ( ( ( uint8_t * ) pxBlock ) + xWantedSize );
 80059f8:	18e8      	adds	r0, r5, r3
						configASSERT( ( ( ( size_t ) pxNewBlockLink ) & portBYTE_ALIGNMENT_MASK ) == 0 );
 80059fa:	0741      	lsls	r1, r0, #29
 80059fc:	d00b      	beq.n	8005a16 <pvPortMalloc+0xb6>

portFORCE_INLINE static void vPortRaiseBASEPRI( void )
{
uint32_t ulNewBASEPRI;

	__asm volatile
 80059fe:	f04f 0350 	mov.w	r3, #80	; 0x50
 8005a02:	f383 8811 	msr	BASEPRI, r3
 8005a06:	f3bf 8f6f 	isb	sy
 8005a0a:	f3bf 8f4f 	dsb	sy
 8005a0e:	e7fe      	b.n	8005a0e <pvPortMalloc+0xae>
 8005a10:	462a      	mov	r2, r5
 8005a12:	4625      	mov	r5, r4
 8005a14:	e7e2      	b.n	80059dc <pvPortMalloc+0x7c>
						pxNewBlockLink->xBlockSize = pxBlock->xBlockSize - xWantedSize;
 8005a16:	6042      	str	r2, [r0, #4]
						pxBlock->xBlockSize = xWantedSize;
 8005a18:	606b      	str	r3, [r5, #4]
						prvInsertBlockIntoFreeList( pxNewBlockLink );
 8005a1a:	f7ff ff7d 	bl	8005918 <prvInsertBlockIntoFreeList>
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 8005a1e:	4914      	ldr	r1, [pc, #80]	; (8005a70 <pvPortMalloc+0x110>)
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 8005a20:	686b      	ldr	r3, [r5, #4]
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 8005a22:	6808      	ldr	r0, [r1, #0]
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 8005a24:	1af6      	subs	r6, r6, r3
					pxBlock->xBlockSize |= xBlockAllocatedBit;
 8005a26:	431f      	orrs	r7, r3
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 8005a28:	4286      	cmp	r6, r0
					pxBlock->pxNextFreeBlock = NULL;
 8005a2a:	f04f 0300 	mov.w	r3, #0
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 8005a2e:	f8c8 6000 	str.w	r6, [r8]
						xMinimumEverFreeBytesRemaining = xFreeBytesRemaining;
 8005a32:	bf38      	it	cc
 8005a34:	600e      	strcc	r6, [r1, #0]
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
 8005a36:	3408      	adds	r4, #8
					pxBlock->xBlockSize |= xBlockAllocatedBit;
 8005a38:	606f      	str	r7, [r5, #4]
					pxBlock->pxNextFreeBlock = NULL;
 8005a3a:	602b      	str	r3, [r5, #0]
	( void ) xTaskResumeAll();
 8005a3c:	f001 f9fa 	bl	8006e34 <xTaskResumeAll>
	configASSERT( ( ( ( size_t ) pvReturn ) & ( size_t ) portBYTE_ALIGNMENT_MASK ) == 0 );
 8005a40:	0763      	lsls	r3, r4, #29
 8005a42:	d00a      	beq.n	8005a5a <pvPortMalloc+0xfa>
 8005a44:	f04f 0350 	mov.w	r3, #80	; 0x50
 8005a48:	f383 8811 	msr	BASEPRI, r3
 8005a4c:	f3bf 8f6f 	isb	sy
 8005a50:	f3bf 8f4f 	dsb	sy
 8005a54:	e7fe      	b.n	8005a54 <pvPortMalloc+0xf4>
void *pvReturn = NULL;
 8005a56:	2400      	movs	r4, #0
 8005a58:	e7f0      	b.n	8005a3c <pvPortMalloc+0xdc>
}
 8005a5a:	4620      	mov	r0, r4
 8005a5c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8005a60:	20001b24 	.word	0x20001b24
 8005a64:	20011b28 	.word	0x20011b28
 8005a68:	20001b28 	.word	0x20001b28
 8005a6c:	20011b34 	.word	0x20011b34
 8005a70:	20011b30 	.word	0x20011b30
 8005a74:	20011b2c 	.word	0x20011b2c

08005a78 <vPortFree>:
{
 8005a78:	b510      	push	{r4, lr}
	if( pv != NULL )
 8005a7a:	4604      	mov	r4, r0
 8005a7c:	b370      	cbz	r0, 8005adc <vPortFree+0x64>
		configASSERT( ( pxLink->xBlockSize & xBlockAllocatedBit ) != 0 );
 8005a7e:	4a18      	ldr	r2, [pc, #96]	; (8005ae0 <vPortFree+0x68>)
 8005a80:	f850 3c04 	ldr.w	r3, [r0, #-4]
 8005a84:	6812      	ldr	r2, [r2, #0]
 8005a86:	4213      	tst	r3, r2
 8005a88:	d108      	bne.n	8005a9c <vPortFree+0x24>
 8005a8a:	f04f 0350 	mov.w	r3, #80	; 0x50
 8005a8e:	f383 8811 	msr	BASEPRI, r3
 8005a92:	f3bf 8f6f 	isb	sy
 8005a96:	f3bf 8f4f 	dsb	sy
 8005a9a:	e7fe      	b.n	8005a9a <vPortFree+0x22>
		configASSERT( pxLink->pxNextFreeBlock == NULL );
 8005a9c:	f850 1c08 	ldr.w	r1, [r0, #-8]
 8005aa0:	b141      	cbz	r1, 8005ab4 <vPortFree+0x3c>
 8005aa2:	f04f 0350 	mov.w	r3, #80	; 0x50
 8005aa6:	f383 8811 	msr	BASEPRI, r3
 8005aaa:	f3bf 8f6f 	isb	sy
 8005aae:	f3bf 8f4f 	dsb	sy
 8005ab2:	e7fe      	b.n	8005ab2 <vPortFree+0x3a>
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
 8005ab4:	ea23 0302 	bic.w	r3, r3, r2
 8005ab8:	f840 3c04 	str.w	r3, [r0, #-4]
				vTaskSuspendAll();
 8005abc:	f001 f91c 	bl	8006cf8 <vTaskSuspendAll>
					xFreeBytesRemaining += pxLink->xBlockSize;
 8005ac0:	4a08      	ldr	r2, [pc, #32]	; (8005ae4 <vPortFree+0x6c>)
 8005ac2:	f854 3c04 	ldr.w	r3, [r4, #-4]
 8005ac6:	6811      	ldr	r1, [r2, #0]
					prvInsertBlockIntoFreeList( ( ( BlockLink_t * ) pxLink ) );
 8005ac8:	f1a4 0008 	sub.w	r0, r4, #8
					xFreeBytesRemaining += pxLink->xBlockSize;
 8005acc:	440b      	add	r3, r1
 8005ace:	6013      	str	r3, [r2, #0]
					prvInsertBlockIntoFreeList( ( ( BlockLink_t * ) pxLink ) );
 8005ad0:	f7ff ff22 	bl	8005918 <prvInsertBlockIntoFreeList>
}
 8005ad4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
				( void ) xTaskResumeAll();
 8005ad8:	f001 b9ac 	b.w	8006e34 <xTaskResumeAll>
}
 8005adc:	bd10      	pop	{r4, pc}
 8005ade:	bf00      	nop
 8005ae0:	20011b28 	.word	0x20011b28
 8005ae4:	20011b2c 	.word	0x20011b2c

08005ae8 <vListInitialise>:
void vListInitialise( List_t * const pxList )
{
	/* The list structure contains a list item which is used to mark the
	end of the list.  To initialise the list the list end is inserted
	as the only list entry. */
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 8005ae8:	f100 0308 	add.w	r3, r0, #8

	/* The list end value is the highest possible value in the list to
	ensure it remains at the end of the list. */
	pxList->xListEnd.xItemValue = portMAX_DELAY;
 8005aec:	f04f 32ff 	mov.w	r2, #4294967295
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 8005af0:	6043      	str	r3, [r0, #4]

	/* The list end next and previous pointers point to itself so we know
	when the list is empty. */
	pxList->xListEnd.pxNext = ( ListItem_t * ) &( pxList->xListEnd );	/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 8005af2:	e9c0 2302 	strd	r2, r3, [r0, #8]
	pxList->xListEnd.pxPrevious = ( ListItem_t * ) &( pxList->xListEnd );/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 8005af6:	6103      	str	r3, [r0, #16]

	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
 8005af8:	2300      	movs	r3, #0
 8005afa:	6003      	str	r3, [r0, #0]

	/* Write known values into the list if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_LIST_INTEGRITY_CHECK_1_VALUE( pxList );
	listSET_LIST_INTEGRITY_CHECK_2_VALUE( pxList );
}
 8005afc:	4770      	bx	lr

08005afe <vListInitialiseItem>:
/*-----------------------------------------------------------*/

void vListInitialiseItem( ListItem_t * const pxItem )
{
	/* Make sure the list item is not recorded as being on a list. */
	pxItem->pxContainer = NULL;
 8005afe:	2300      	movs	r3, #0
 8005b00:	6103      	str	r3, [r0, #16]

	/* Write known values into the list item if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_FIRST_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
	listSET_SECOND_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
}
 8005b02:	4770      	bx	lr

08005b04 <vListInsertEnd>:
/*-----------------------------------------------------------*/

void vListInsertEnd( List_t * const pxList, ListItem_t * const pxNewListItem )
{
ListItem_t * const pxIndex = pxList->pxIndex;
 8005b04:	6843      	ldr	r3, [r0, #4]
	listTEST_LIST_ITEM_INTEGRITY( pxNewListItem );

	/* Insert a new list item into pxList, but rather than sort the list,
	makes the new list item the last item to be removed by a call to
	listGET_OWNER_OF_NEXT_ENTRY(). */
	pxNewListItem->pxNext = pxIndex;
 8005b06:	604b      	str	r3, [r1, #4]
	pxNewListItem->pxPrevious = pxIndex->pxPrevious;
 8005b08:	689a      	ldr	r2, [r3, #8]
 8005b0a:	608a      	str	r2, [r1, #8]

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	pxIndex->pxPrevious->pxNext = pxNewListItem;
 8005b0c:	689a      	ldr	r2, [r3, #8]
 8005b0e:	6051      	str	r1, [r2, #4]
	pxIndex->pxPrevious = pxNewListItem;
 8005b10:	6099      	str	r1, [r3, #8]

	/* Remember which list the item is in. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 8005b12:	6803      	ldr	r3, [r0, #0]
	pxNewListItem->pxContainer = pxList;
 8005b14:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
 8005b16:	3301      	adds	r3, #1
 8005b18:	6003      	str	r3, [r0, #0]
}
 8005b1a:	4770      	bx	lr

08005b1c <vListInsert>:
/*-----------------------------------------------------------*/

void vListInsert( List_t * const pxList, ListItem_t * const pxNewListItem )
{
ListItem_t *pxIterator;
const TickType_t xValueOfInsertion = pxNewListItem->xItemValue;
 8005b1c:	680a      	ldr	r2, [r1, #0]
	new list item should be placed after it.  This ensures that TCBs which are
	stored in ready lists (all of which have the same xItemValue value) get a
	share of the CPU.  However, if the xItemValue is the same as the back marker
	the iteration loop below will not end.  Therefore the value is checked
	first, and the algorithm slightly modified if necessary. */
	if( xValueOfInsertion == portMAX_DELAY )
 8005b1e:	1c53      	adds	r3, r2, #1
{
 8005b20:	b530      	push	{r4, r5, lr}
	if( xValueOfInsertion == portMAX_DELAY )
 8005b22:	d10a      	bne.n	8005b3a <vListInsert+0x1e>
	{
		pxIterator = pxList->xListEnd.pxPrevious;
 8005b24:	6903      	ldr	r3, [r0, #16]
			/* There is nothing to do here, just iterating to the wanted
			insertion position. */
		}
	}

	pxNewListItem->pxNext = pxIterator->pxNext;
 8005b26:	685a      	ldr	r2, [r3, #4]
 8005b28:	604a      	str	r2, [r1, #4]
	pxNewListItem->pxNext->pxPrevious = pxNewListItem;
 8005b2a:	6091      	str	r1, [r2, #8]
	pxNewListItem->pxPrevious = pxIterator;
 8005b2c:	608b      	str	r3, [r1, #8]
	pxIterator->pxNext = pxNewListItem;
 8005b2e:	6059      	str	r1, [r3, #4]

	/* Remember which list the item is in.  This allows fast removal of the
	item later. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 8005b30:	6803      	ldr	r3, [r0, #0]
	pxNewListItem->pxContainer = pxList;
 8005b32:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
 8005b34:	3301      	adds	r3, #1
 8005b36:	6003      	str	r3, [r0, #0]
}
 8005b38:	bd30      	pop	{r4, r5, pc}
		for( pxIterator = ( ListItem_t * ) &( pxList->xListEnd ); pxIterator->pxNext->xItemValue <= xValueOfInsertion; pxIterator = pxIterator->pxNext ) /*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. *//*lint !e440 The iterator moves to a different value, not xValueOfInsertion. */
 8005b3a:	f100 0308 	add.w	r3, r0, #8
 8005b3e:	685c      	ldr	r4, [r3, #4]
 8005b40:	6825      	ldr	r5, [r4, #0]
 8005b42:	4295      	cmp	r5, r2
 8005b44:	d8ef      	bhi.n	8005b26 <vListInsert+0xa>
 8005b46:	4623      	mov	r3, r4
 8005b48:	e7f9      	b.n	8005b3e <vListInsert+0x22>

08005b4a <uxListRemove>:
{
/* The list item knows which list it is in.  Obtain the list from the list
item. */
List_t * const pxList = pxItemToRemove->pxContainer;

	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 8005b4a:	e9d0 1201 	ldrd	r1, r2, [r0, #4]
List_t * const pxList = pxItemToRemove->pxContainer;
 8005b4e:	6903      	ldr	r3, [r0, #16]
	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 8005b50:	608a      	str	r2, [r1, #8]
	pxItemToRemove->pxPrevious->pxNext = pxItemToRemove->pxNext;
 8005b52:	6882      	ldr	r2, [r0, #8]
 8005b54:	6051      	str	r1, [r2, #4]

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	/* Make sure the index is left pointing to a valid item. */
	if( pxList->pxIndex == pxItemToRemove )
 8005b56:	6859      	ldr	r1, [r3, #4]
 8005b58:	4281      	cmp	r1, r0
	{
		pxList->pxIndex = pxItemToRemove->pxPrevious;
 8005b5a:	bf08      	it	eq
 8005b5c:	605a      	streq	r2, [r3, #4]
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}

	pxItemToRemove->pxContainer = NULL;
 8005b5e:	2200      	movs	r2, #0
 8005b60:	6102      	str	r2, [r0, #16]
	( pxList->uxNumberOfItems )--;
 8005b62:	681a      	ldr	r2, [r3, #0]
 8005b64:	3a01      	subs	r2, #1
 8005b66:	601a      	str	r2, [r3, #0]

	return pxList->uxNumberOfItems;
 8005b68:	6818      	ldr	r0, [r3, #0]
}
 8005b6a:	4770      	bx	lr

08005b6c <prvTaskExitError>:
	return pxTopOfStack;
}
/*-----------------------------------------------------------*/

static void prvTaskExitError( void )
{
 8005b6c:	b082      	sub	sp, #8
volatile uint32_t ulDummy = 0;
 8005b6e:	2300      	movs	r3, #0
 8005b70:	9301      	str	r3, [sp, #4]
	its caller as there is nothing to return to.  If a task wants to exit it
	should instead call vTaskDelete( NULL ).

	Artificially force an assert() to be triggered if configASSERT() is
	defined, then stop here so application writers can catch the error. */
	configASSERT( uxCriticalNesting == ~0UL );
 8005b72:	4b0d      	ldr	r3, [pc, #52]	; (8005ba8 <prvTaskExitError+0x3c>)
 8005b74:	681b      	ldr	r3, [r3, #0]
 8005b76:	3301      	adds	r3, #1
 8005b78:	d008      	beq.n	8005b8c <prvTaskExitError+0x20>
 8005b7a:	f04f 0350 	mov.w	r3, #80	; 0x50
 8005b7e:	f383 8811 	msr	BASEPRI, r3
 8005b82:	f3bf 8f6f 	isb	sy
 8005b86:	f3bf 8f4f 	dsb	sy
 8005b8a:	e7fe      	b.n	8005b8a <prvTaskExitError+0x1e>
 8005b8c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8005b90:	f383 8811 	msr	BASEPRI, r3
 8005b94:	f3bf 8f6f 	isb	sy
 8005b98:	f3bf 8f4f 	dsb	sy
	portDISABLE_INTERRUPTS();
	while( ulDummy == 0 )
 8005b9c:	9b01      	ldr	r3, [sp, #4]
 8005b9e:	2b00      	cmp	r3, #0
 8005ba0:	d0fc      	beq.n	8005b9c <prvTaskExitError+0x30>
		about code appearing after this function is called - making ulDummy
		volatile makes the compiler think the function could return and
		therefore not output an 'unreachable code' warning for code that appears
		after it. */
	}
}
 8005ba2:	b002      	add	sp, #8
 8005ba4:	4770      	bx	lr
 8005ba6:	bf00      	nop
 8005ba8:	20000080 	.word	0x20000080

08005bac <prvPortStartFirstTask>:
{
	/* Start the first task.  This also clears the bit that indicates the FPU is
	in use in case the FPU was used before the scheduler was started - which
	would otherwise result in the unnecessary leaving of space in the SVC stack
	for lazy saving of FPU registers. */
	__asm volatile(
 8005bac:	4808      	ldr	r0, [pc, #32]	; (8005bd0 <prvPortStartFirstTask+0x24>)
 8005bae:	6800      	ldr	r0, [r0, #0]
 8005bb0:	6800      	ldr	r0, [r0, #0]
 8005bb2:	f380 8808 	msr	MSP, r0
 8005bb6:	f04f 0000 	mov.w	r0, #0
 8005bba:	f380 8814 	msr	CONTROL, r0
 8005bbe:	b662      	cpsie	i
 8005bc0:	b661      	cpsie	f
 8005bc2:	f3bf 8f4f 	dsb	sy
 8005bc6:	f3bf 8f6f 	isb	sy
 8005bca:	df00      	svc	0
 8005bcc:	bf00      	nop
 8005bce:	0000      	.short	0x0000
 8005bd0:	e000ed08 	.word	0xe000ed08

08005bd4 <vPortEnableVFP>:
/*-----------------------------------------------------------*/

/* This is a naked function. */
static void vPortEnableVFP( void )
{
	__asm volatile
 8005bd4:	f8df 000c 	ldr.w	r0, [pc, #12]	; 8005be4 <vPortEnableVFP+0x10>
 8005bd8:	6801      	ldr	r1, [r0, #0]
 8005bda:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 8005bde:	6001      	str	r1, [r0, #0]
 8005be0:	4770      	bx	lr
 8005be2:	0000      	.short	0x0000
 8005be4:	e000ed88 	.word	0xe000ed88

08005be8 <pxPortInitialiseStack>:
	*pxTopOfStack = portINITIAL_XPSR;	/* xPSR */
 8005be8:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
 8005bec:	f840 3c04 	str.w	r3, [r0, #-4]
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
 8005bf0:	4b07      	ldr	r3, [pc, #28]	; (8005c10 <pxPortInitialiseStack+0x28>)
 8005bf2:	f840 3c0c 	str.w	r3, [r0, #-12]
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
 8005bf6:	f021 0101 	bic.w	r1, r1, #1
	*pxTopOfStack = portINITIAL_EXC_RETURN;
 8005bfa:	f06f 0302 	mvn.w	r3, #2
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
 8005bfe:	f840 1c08 	str.w	r1, [r0, #-8]
	*pxTopOfStack = ( StackType_t ) pvParameters;	/* R0 */
 8005c02:	f840 2c20 	str.w	r2, [r0, #-32]
	*pxTopOfStack = portINITIAL_EXC_RETURN;
 8005c06:	f840 3c24 	str.w	r3, [r0, #-36]
}
 8005c0a:	3844      	subs	r0, #68	; 0x44
 8005c0c:	4770      	bx	lr
 8005c0e:	bf00      	nop
 8005c10:	08005b6d 	.word	0x08005b6d
	...

08005c20 <SVC_Handler>:
	__asm volatile (
 8005c20:	4b07      	ldr	r3, [pc, #28]	; (8005c40 <pxCurrentTCBConst2>)
 8005c22:	6819      	ldr	r1, [r3, #0]
 8005c24:	6808      	ldr	r0, [r1, #0]
 8005c26:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005c2a:	f380 8809 	msr	PSP, r0
 8005c2e:	f3bf 8f6f 	isb	sy
 8005c32:	f04f 0000 	mov.w	r0, #0
 8005c36:	f380 8811 	msr	BASEPRI, r0
 8005c3a:	4770      	bx	lr
 8005c3c:	f3af 8000 	nop.w

08005c40 <pxCurrentTCBConst2>:
 8005c40:	20011b44 	.word	0x20011b44

08005c44 <vPortEnterCritical>:
 8005c44:	f04f 0350 	mov.w	r3, #80	; 0x50
 8005c48:	f383 8811 	msr	BASEPRI, r3
 8005c4c:	f3bf 8f6f 	isb	sy
 8005c50:	f3bf 8f4f 	dsb	sy
	uxCriticalNesting++;
 8005c54:	4a0a      	ldr	r2, [pc, #40]	; (8005c80 <vPortEnterCritical+0x3c>)
 8005c56:	6813      	ldr	r3, [r2, #0]
 8005c58:	3301      	adds	r3, #1
	if( uxCriticalNesting == 1 )
 8005c5a:	2b01      	cmp	r3, #1
	uxCriticalNesting++;
 8005c5c:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 1 )
 8005c5e:	d10d      	bne.n	8005c7c <vPortEnterCritical+0x38>
		configASSERT( ( portNVIC_INT_CTRL_REG & portVECTACTIVE_MASK ) == 0 );
 8005c60:	4b08      	ldr	r3, [pc, #32]	; (8005c84 <vPortEnterCritical+0x40>)
 8005c62:	681b      	ldr	r3, [r3, #0]
 8005c64:	f013 0fff 	tst.w	r3, #255	; 0xff
 8005c68:	d008      	beq.n	8005c7c <vPortEnterCritical+0x38>
 8005c6a:	f04f 0350 	mov.w	r3, #80	; 0x50
 8005c6e:	f383 8811 	msr	BASEPRI, r3
 8005c72:	f3bf 8f6f 	isb	sy
 8005c76:	f3bf 8f4f 	dsb	sy
 8005c7a:	e7fe      	b.n	8005c7a <vPortEnterCritical+0x36>
}
 8005c7c:	4770      	bx	lr
 8005c7e:	bf00      	nop
 8005c80:	20000080 	.word	0x20000080
 8005c84:	e000ed04 	.word	0xe000ed04

08005c88 <vPortExitCritical>:
	configASSERT( uxCriticalNesting );
 8005c88:	4a08      	ldr	r2, [pc, #32]	; (8005cac <vPortExitCritical+0x24>)
 8005c8a:	6813      	ldr	r3, [r2, #0]
 8005c8c:	b943      	cbnz	r3, 8005ca0 <vPortExitCritical+0x18>
 8005c8e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8005c92:	f383 8811 	msr	BASEPRI, r3
 8005c96:	f3bf 8f6f 	isb	sy
 8005c9a:	f3bf 8f4f 	dsb	sy
 8005c9e:	e7fe      	b.n	8005c9e <vPortExitCritical+0x16>
	uxCriticalNesting--;
 8005ca0:	3b01      	subs	r3, #1
 8005ca2:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 0 )
 8005ca4:	b90b      	cbnz	r3, 8005caa <vPortExitCritical+0x22>
}
/*-----------------------------------------------------------*/

portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
{
	__asm volatile
 8005ca6:	f383 8811 	msr	BASEPRI, r3
}
 8005caa:	4770      	bx	lr
 8005cac:	20000080 	.word	0x20000080

08005cb0 <PendSV_Handler>:
	__asm volatile
 8005cb0:	f3ef 8009 	mrs	r0, PSP
 8005cb4:	f3bf 8f6f 	isb	sy
 8005cb8:	4b15      	ldr	r3, [pc, #84]	; (8005d10 <pxCurrentTCBConst>)
 8005cba:	681a      	ldr	r2, [r3, #0]
 8005cbc:	f01e 0f10 	tst.w	lr, #16
 8005cc0:	bf08      	it	eq
 8005cc2:	ed20 8a10 	vstmdbeq	r0!, {s16-s31}
 8005cc6:	e920 4ff0 	stmdb	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005cca:	6010      	str	r0, [r2, #0]
 8005ccc:	e92d 0009 	stmdb	sp!, {r0, r3}
 8005cd0:	f04f 0050 	mov.w	r0, #80	; 0x50
 8005cd4:	f380 8811 	msr	BASEPRI, r0
 8005cd8:	f3bf 8f4f 	dsb	sy
 8005cdc:	f3bf 8f6f 	isb	sy
 8005ce0:	f001 f91c 	bl	8006f1c <vTaskSwitchContext>
 8005ce4:	f04f 0000 	mov.w	r0, #0
 8005ce8:	f380 8811 	msr	BASEPRI, r0
 8005cec:	bc09      	pop	{r0, r3}
 8005cee:	6819      	ldr	r1, [r3, #0]
 8005cf0:	6808      	ldr	r0, [r1, #0]
 8005cf2:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005cf6:	f01e 0f10 	tst.w	lr, #16
 8005cfa:	bf08      	it	eq
 8005cfc:	ecb0 8a10 	vldmiaeq	r0!, {s16-s31}
 8005d00:	f380 8809 	msr	PSP, r0
 8005d04:	f3bf 8f6f 	isb	sy
 8005d08:	4770      	bx	lr
 8005d0a:	bf00      	nop
 8005d0c:	f3af 8000 	nop.w

08005d10 <pxCurrentTCBConst>:
 8005d10:	20011b44 	.word	0x20011b44

08005d14 <SysTick_Handler>:
{
 8005d14:	b508      	push	{r3, lr}
	__asm volatile
 8005d16:	f04f 0350 	mov.w	r3, #80	; 0x50
 8005d1a:	f383 8811 	msr	BASEPRI, r3
 8005d1e:	f3bf 8f6f 	isb	sy
 8005d22:	f3bf 8f4f 	dsb	sy
		if( xTaskIncrementTick() != pdFALSE )
 8005d26:	f000 fff5 	bl	8006d14 <xTaskIncrementTick>
 8005d2a:	b118      	cbz	r0, 8005d34 <SysTick_Handler+0x20>
			portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;
 8005d2c:	4b03      	ldr	r3, [pc, #12]	; (8005d3c <SysTick_Handler+0x28>)
 8005d2e:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8005d32:	601a      	str	r2, [r3, #0]
	__asm volatile
 8005d34:	2300      	movs	r3, #0
 8005d36:	f383 8811 	msr	BASEPRI, r3
}
 8005d3a:	bd08      	pop	{r3, pc}
 8005d3c:	e000ed04 	.word	0xe000ed04

08005d40 <vPortSetupTimerInterrupt>:
	portNVIC_SYSTICK_CTRL_REG = 0UL;
 8005d40:	4a08      	ldr	r2, [pc, #32]	; (8005d64 <vPortSetupTimerInterrupt+0x24>)
	portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
 8005d42:	4909      	ldr	r1, [pc, #36]	; (8005d68 <vPortSetupTimerInterrupt+0x28>)
	portNVIC_SYSTICK_CTRL_REG = 0UL;
 8005d44:	2300      	movs	r3, #0
 8005d46:	6013      	str	r3, [r2, #0]
	portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
 8005d48:	600b      	str	r3, [r1, #0]
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
 8005d4a:	4b08      	ldr	r3, [pc, #32]	; (8005d6c <vPortSetupTimerInterrupt+0x2c>)
 8005d4c:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 8005d50:	681b      	ldr	r3, [r3, #0]
 8005d52:	fbb3 f3f1 	udiv	r3, r3, r1
 8005d56:	4906      	ldr	r1, [pc, #24]	; (8005d70 <vPortSetupTimerInterrupt+0x30>)
 8005d58:	3b01      	subs	r3, #1
 8005d5a:	600b      	str	r3, [r1, #0]
	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT );
 8005d5c:	2307      	movs	r3, #7
 8005d5e:	6013      	str	r3, [r2, #0]
}
 8005d60:	4770      	bx	lr
 8005d62:	bf00      	nop
 8005d64:	e000e010 	.word	0xe000e010
 8005d68:	e000e018 	.word	0xe000e018
 8005d6c:	20000074 	.word	0x20000074
 8005d70:	e000e014 	.word	0xe000e014

08005d74 <xPortStartScheduler>:
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
 8005d74:	4b39      	ldr	r3, [pc, #228]	; (8005e5c <xPortStartScheduler+0xe8>)
 8005d76:	4a3a      	ldr	r2, [pc, #232]	; (8005e60 <xPortStartScheduler+0xec>)
{
 8005d78:	b513      	push	{r0, r1, r4, lr}
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
 8005d7a:	6819      	ldr	r1, [r3, #0]
 8005d7c:	4291      	cmp	r1, r2
 8005d7e:	d108      	bne.n	8005d92 <xPortStartScheduler+0x1e>
	__asm volatile
 8005d80:	f04f 0350 	mov.w	r3, #80	; 0x50
 8005d84:	f383 8811 	msr	BASEPRI, r3
 8005d88:	f3bf 8f6f 	isb	sy
 8005d8c:	f3bf 8f4f 	dsb	sy
 8005d90:	e7fe      	b.n	8005d90 <xPortStartScheduler+0x1c>
	configASSERT( portCPUID != portCORTEX_M7_r0p0_ID );
 8005d92:	681a      	ldr	r2, [r3, #0]
 8005d94:	4b33      	ldr	r3, [pc, #204]	; (8005e64 <xPortStartScheduler+0xf0>)
 8005d96:	429a      	cmp	r2, r3
 8005d98:	d108      	bne.n	8005dac <xPortStartScheduler+0x38>
 8005d9a:	f04f 0350 	mov.w	r3, #80	; 0x50
 8005d9e:	f383 8811 	msr	BASEPRI, r3
 8005da2:	f3bf 8f6f 	isb	sy
 8005da6:	f3bf 8f4f 	dsb	sy
 8005daa:	e7fe      	b.n	8005daa <xPortStartScheduler+0x36>
		ulOriginalPriority = *pucFirstUserPriorityRegister;
 8005dac:	4b2e      	ldr	r3, [pc, #184]	; (8005e68 <xPortStartScheduler+0xf4>)
 8005dae:	781a      	ldrb	r2, [r3, #0]
 8005db0:	b2d2      	uxtb	r2, r2
 8005db2:	9201      	str	r2, [sp, #4]
		*pucFirstUserPriorityRegister = portMAX_8_BIT_VALUE;
 8005db4:	22ff      	movs	r2, #255	; 0xff
 8005db6:	701a      	strb	r2, [r3, #0]
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
 8005db8:	781b      	ldrb	r3, [r3, #0]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 8005dba:	4a2c      	ldr	r2, [pc, #176]	; (8005e6c <xPortStartScheduler+0xf8>)
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
 8005dbc:	b2db      	uxtb	r3, r3
 8005dbe:	f88d 3003 	strb.w	r3, [sp, #3]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 8005dc2:	f89d 3003 	ldrb.w	r3, [sp, #3]
 8005dc6:	f003 0350 	and.w	r3, r3, #80	; 0x50
 8005dca:	7013      	strb	r3, [r2, #0]
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
 8005dcc:	4b28      	ldr	r3, [pc, #160]	; (8005e70 <xPortStartScheduler+0xfc>)
 8005dce:	2207      	movs	r2, #7
 8005dd0:	601a      	str	r2, [r3, #0]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 8005dd2:	2100      	movs	r1, #0
 8005dd4:	f89d 0003 	ldrb.w	r0, [sp, #3]
 8005dd8:	0600      	lsls	r0, r0, #24
 8005dda:	f102 34ff 	add.w	r4, r2, #4294967295
 8005dde:	d40d      	bmi.n	8005dfc <xPortStartScheduler+0x88>
 8005de0:	b101      	cbz	r1, 8005de4 <xPortStartScheduler+0x70>
 8005de2:	601a      	str	r2, [r3, #0]
			configASSERT( ( portMAX_PRIGROUP_BITS - ulMaxPRIGROUPValue ) == configPRIO_BITS );
 8005de4:	681a      	ldr	r2, [r3, #0]
 8005de6:	2a03      	cmp	r2, #3
 8005de8:	d011      	beq.n	8005e0e <xPortStartScheduler+0x9a>
 8005dea:	f04f 0350 	mov.w	r3, #80	; 0x50
 8005dee:	f383 8811 	msr	BASEPRI, r3
 8005df2:	f3bf 8f6f 	isb	sy
 8005df6:	f3bf 8f4f 	dsb	sy
 8005dfa:	e7fe      	b.n	8005dfa <xPortStartScheduler+0x86>
			ucMaxPriorityValue <<= ( uint8_t ) 0x01;
 8005dfc:	f89d 2003 	ldrb.w	r2, [sp, #3]
 8005e00:	0052      	lsls	r2, r2, #1
 8005e02:	b2d2      	uxtb	r2, r2
 8005e04:	f88d 2003 	strb.w	r2, [sp, #3]
 8005e08:	2101      	movs	r1, #1
 8005e0a:	4622      	mov	r2, r4
 8005e0c:	e7e2      	b.n	8005dd4 <xPortStartScheduler+0x60>
		ulMaxPRIGROUPValue <<= portPRIGROUP_SHIFT;
 8005e0e:	0212      	lsls	r2, r2, #8
		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
 8005e10:	f402 62e0 	and.w	r2, r2, #1792	; 0x700
 8005e14:	601a      	str	r2, [r3, #0]
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 8005e16:	9b01      	ldr	r3, [sp, #4]
 8005e18:	4a13      	ldr	r2, [pc, #76]	; (8005e68 <xPortStartScheduler+0xf4>)
 8005e1a:	b2db      	uxtb	r3, r3
 8005e1c:	7013      	strb	r3, [r2, #0]
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 8005e1e:	4b15      	ldr	r3, [pc, #84]	; (8005e74 <xPortStartScheduler+0x100>)
 8005e20:	681a      	ldr	r2, [r3, #0]
 8005e22:	f442 0270 	orr.w	r2, r2, #15728640	; 0xf00000
 8005e26:	601a      	str	r2, [r3, #0]
	portNVIC_SYSPRI2_REG |= portNVIC_SYSTICK_PRI;
 8005e28:	681a      	ldr	r2, [r3, #0]
 8005e2a:	f042 4270 	orr.w	r2, r2, #4026531840	; 0xf0000000
 8005e2e:	601a      	str	r2, [r3, #0]
	vPortSetupTimerInterrupt();
 8005e30:	f7ff ff86 	bl	8005d40 <vPortSetupTimerInterrupt>
	uxCriticalNesting = 0;
 8005e34:	4b10      	ldr	r3, [pc, #64]	; (8005e78 <xPortStartScheduler+0x104>)
 8005e36:	2400      	movs	r4, #0
 8005e38:	601c      	str	r4, [r3, #0]
	vPortEnableVFP();
 8005e3a:	f7ff fecb 	bl	8005bd4 <vPortEnableVFP>
	*( portFPCCR ) |= portASPEN_AND_LSPEN_BITS;
 8005e3e:	4a0f      	ldr	r2, [pc, #60]	; (8005e7c <xPortStartScheduler+0x108>)
 8005e40:	6813      	ldr	r3, [r2, #0]
 8005e42:	f043 4340 	orr.w	r3, r3, #3221225472	; 0xc0000000
 8005e46:	6013      	str	r3, [r2, #0]
	prvPortStartFirstTask();
 8005e48:	f7ff feb0 	bl	8005bac <prvPortStartFirstTask>
	vTaskSwitchContext();
 8005e4c:	f001 f866 	bl	8006f1c <vTaskSwitchContext>
	prvTaskExitError();
 8005e50:	f7ff fe8c 	bl	8005b6c <prvTaskExitError>
}
 8005e54:	4620      	mov	r0, r4
 8005e56:	b002      	add	sp, #8
 8005e58:	bd10      	pop	{r4, pc}
 8005e5a:	bf00      	nop
 8005e5c:	e000ed00 	.word	0xe000ed00
 8005e60:	410fc271 	.word	0x410fc271
 8005e64:	410fc270 	.word	0x410fc270
 8005e68:	e000e400 	.word	0xe000e400
 8005e6c:	20011b3c 	.word	0x20011b3c
 8005e70:	20011b40 	.word	0x20011b40
 8005e74:	e000ed20 	.word	0xe000ed20
 8005e78:	20000080 	.word	0x20000080
 8005e7c:	e000ef34 	.word	0xe000ef34

08005e80 <vPortValidateInterruptPriority>:
	{
	uint32_t ulCurrentInterrupt;
	uint8_t ucCurrentPriority;

		/* Obtain the number of the currently executing interrupt. */
		__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
 8005e80:	f3ef 8305 	mrs	r3, IPSR

		/* Is the interrupt number a user defined interrupt? */
		if( ulCurrentInterrupt >= portFIRST_USER_INTERRUPT_NUMBER )
 8005e84:	2b0f      	cmp	r3, #15
 8005e86:	d90e      	bls.n	8005ea6 <vPortValidateInterruptPriority+0x26>
		{
			/* Look up the interrupt's priority. */
			ucCurrentPriority = pcInterruptPriorityRegisters[ ulCurrentInterrupt ];
 8005e88:	4a10      	ldr	r2, [pc, #64]	; (8005ecc <vPortValidateInterruptPriority+0x4c>)
 8005e8a:	5c9b      	ldrb	r3, [r3, r2]
			interrupt entry is as fast and simple as possible.

			The following links provide detailed information:
			http://www.freertos.org/RTOS-Cortex-M3-M4.html
			http://www.freertos.org/FAQHelp.html */
			configASSERT( ucCurrentPriority >= ucMaxSysCallPriority );
 8005e8c:	4a10      	ldr	r2, [pc, #64]	; (8005ed0 <vPortValidateInterruptPriority+0x50>)
 8005e8e:	7812      	ldrb	r2, [r2, #0]
 8005e90:	429a      	cmp	r2, r3
 8005e92:	d908      	bls.n	8005ea6 <vPortValidateInterruptPriority+0x26>
 8005e94:	f04f 0350 	mov.w	r3, #80	; 0x50
 8005e98:	f383 8811 	msr	BASEPRI, r3
 8005e9c:	f3bf 8f6f 	isb	sy
 8005ea0:	f3bf 8f4f 	dsb	sy
 8005ea4:	e7fe      	b.n	8005ea4 <vPortValidateInterruptPriority+0x24>
		configuration then the correct setting can be achieved on all Cortex-M
		devices by calling NVIC_SetPriorityGrouping( 0 ); before starting the
		scheduler.  Note however that some vendor specific peripheral libraries
		assume a non-zero priority group setting, in which cases using a value
		of zero will result in unpredictable behaviour. */
		configASSERT( ( portAIRCR_REG & portPRIORITY_GROUP_MASK ) <= ulMaxPRIGROUPValue );
 8005ea6:	4b0b      	ldr	r3, [pc, #44]	; (8005ed4 <vPortValidateInterruptPriority+0x54>)
 8005ea8:	4a0b      	ldr	r2, [pc, #44]	; (8005ed8 <vPortValidateInterruptPriority+0x58>)
 8005eaa:	681b      	ldr	r3, [r3, #0]
 8005eac:	6812      	ldr	r2, [r2, #0]
 8005eae:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
 8005eb2:	4293      	cmp	r3, r2
 8005eb4:	d908      	bls.n	8005ec8 <vPortValidateInterruptPriority+0x48>
 8005eb6:	f04f 0350 	mov.w	r3, #80	; 0x50
 8005eba:	f383 8811 	msr	BASEPRI, r3
 8005ebe:	f3bf 8f6f 	isb	sy
 8005ec2:	f3bf 8f4f 	dsb	sy
 8005ec6:	e7fe      	b.n	8005ec6 <vPortValidateInterruptPriority+0x46>
	}
 8005ec8:	4770      	bx	lr
 8005eca:	bf00      	nop
 8005ecc:	e000e3f0 	.word	0xe000e3f0
 8005ed0:	20011b3c 	.word	0x20011b3c
 8005ed4:	e000ed0c 	.word	0xe000ed0c
 8005ed8:	20011b40 	.word	0x20011b40

08005edc <prvIsQueueEmpty>:
	taskEXIT_CRITICAL();
}
/*-----------------------------------------------------------*/

static BaseType_t prvIsQueueEmpty( const Queue_t *pxQueue )
{
 8005edc:	b510      	push	{r4, lr}
 8005ede:	4604      	mov	r4, r0
BaseType_t xReturn;

	taskENTER_CRITICAL();
 8005ee0:	f7ff feb0 	bl	8005c44 <vPortEnterCritical>
	{
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
 8005ee4:	6ba4      	ldr	r4, [r4, #56]	; 0x38
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
 8005ee6:	f7ff fecf 	bl	8005c88 <vPortExitCritical>

	return xReturn;
}
 8005eea:	fab4 f084 	clz	r0, r4
 8005eee:	0940      	lsrs	r0, r0, #5
 8005ef0:	bd10      	pop	{r4, pc}

08005ef2 <prvCopyDataToQueue>:
{
 8005ef2:	b570      	push	{r4, r5, r6, lr}
 8005ef4:	4615      	mov	r5, r2
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 8005ef6:	6c02      	ldr	r2, [r0, #64]	; 0x40
	uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 8005ef8:	6b86      	ldr	r6, [r0, #56]	; 0x38
{
 8005efa:	4604      	mov	r4, r0
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 8005efc:	b942      	cbnz	r2, 8005f10 <prvCopyDataToQueue+0x1e>
			if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 8005efe:	6805      	ldr	r5, [r0, #0]
 8005f00:	b99d      	cbnz	r5, 8005f2a <prvCopyDataToQueue+0x38>
				xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
 8005f02:	6880      	ldr	r0, [r0, #8]
 8005f04:	f001 f95c 	bl	80071c0 <xTaskPriorityDisinherit>
				pxQueue->u.xSemaphore.xMutexHolder = NULL;
 8005f08:	60a5      	str	r5, [r4, #8]
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 8005f0a:	3601      	adds	r6, #1
 8005f0c:	63a6      	str	r6, [r4, #56]	; 0x38
}
 8005f0e:	bd70      	pop	{r4, r5, r6, pc}
	else if( xPosition == queueSEND_TO_BACK )
 8005f10:	b96d      	cbnz	r5, 8005f2e <prvCopyDataToQueue+0x3c>
		( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports, plus previous logic ensures a null pointer can only be passed to memcpy() if the copy size is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 8005f12:	6840      	ldr	r0, [r0, #4]
 8005f14:	f012 f8a0 	bl	8018058 <memcpy>
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8005f18:	6863      	ldr	r3, [r4, #4]
 8005f1a:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8005f1c:	4413      	add	r3, r2
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 8005f1e:	68a2      	ldr	r2, [r4, #8]
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8005f20:	6063      	str	r3, [r4, #4]
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 8005f22:	4293      	cmp	r3, r2
 8005f24:	d301      	bcc.n	8005f2a <prvCopyDataToQueue+0x38>
			pxQueue->pcWriteTo = pxQueue->pcHead;
 8005f26:	6823      	ldr	r3, [r4, #0]
 8005f28:	6063      	str	r3, [r4, #4]
BaseType_t xReturn = pdFALSE;
 8005f2a:	2000      	movs	r0, #0
 8005f2c:	e7ed      	b.n	8005f0a <prvCopyDataToQueue+0x18>
		( void ) memcpy( ( void * ) pxQueue->u.xQueue.pcReadFrom, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e9087 !e418 MISRA exception as the casts are only redundant for some ports.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes.  Assert checks null pointer only used when length is 0. */
 8005f2e:	68c0      	ldr	r0, [r0, #12]
 8005f30:	f012 f892 	bl	8018058 <memcpy>
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 8005f34:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8005f36:	68e2      	ldr	r2, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 8005f38:	6821      	ldr	r1, [r4, #0]
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 8005f3a:	425b      	negs	r3, r3
 8005f3c:	441a      	add	r2, r3
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 8005f3e:	428a      	cmp	r2, r1
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 8005f40:	60e2      	str	r2, [r4, #12]
			pxQueue->u.xQueue.pcReadFrom = ( pxQueue->u.xQueue.pcTail - pxQueue->uxItemSize );
 8005f42:	bf3e      	ittt	cc
 8005f44:	68a2      	ldrcc	r2, [r4, #8]
 8005f46:	189b      	addcc	r3, r3, r2
 8005f48:	60e3      	strcc	r3, [r4, #12]
		if( xPosition == queueOVERWRITE )
 8005f4a:	2d02      	cmp	r5, #2
 8005f4c:	d1ed      	bne.n	8005f2a <prvCopyDataToQueue+0x38>
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 8005f4e:	b10e      	cbz	r6, 8005f54 <prvCopyDataToQueue+0x62>
				--uxMessagesWaiting;
 8005f50:	3e01      	subs	r6, #1
 8005f52:	e7ea      	b.n	8005f2a <prvCopyDataToQueue+0x38>
BaseType_t xReturn = pdFALSE;
 8005f54:	4630      	mov	r0, r6
 8005f56:	e7d8      	b.n	8005f0a <prvCopyDataToQueue+0x18>

08005f58 <prvCopyDataFromQueue>:
{
 8005f58:	4603      	mov	r3, r0
 8005f5a:	b410      	push	{r4}
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 8005f5c:	6c1a      	ldr	r2, [r3, #64]	; 0x40
{
 8005f5e:	4608      	mov	r0, r1
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 8005f60:	b162      	cbz	r2, 8005f7c <prvCopyDataFromQueue+0x24>
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8005f62:	68d9      	ldr	r1, [r3, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 8005f64:	689c      	ldr	r4, [r3, #8]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8005f66:	4411      	add	r1, r2
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 8005f68:	42a1      	cmp	r1, r4
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8005f6a:	60d9      	str	r1, [r3, #12]
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
 8005f6c:	bf24      	itt	cs
 8005f6e:	6819      	ldrcs	r1, [r3, #0]
 8005f70:	60d9      	strcs	r1, [r3, #12]
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 8005f72:	68d9      	ldr	r1, [r3, #12]
}
 8005f74:	f85d 4b04 	ldr.w	r4, [sp], #4
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 8005f78:	f012 b86e 	b.w	8018058 <memcpy>
}
 8005f7c:	f85d 4b04 	ldr.w	r4, [sp], #4
 8005f80:	4770      	bx	lr

08005f82 <prvUnlockQueue>:
{
 8005f82:	b570      	push	{r4, r5, r6, lr}
 8005f84:	4604      	mov	r4, r0
	taskENTER_CRITICAL();
 8005f86:	f7ff fe5d 	bl	8005c44 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 8005f8a:	f894 5045 	ldrb.w	r5, [r4, #69]	; 0x45
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8005f8e:	f104 0624 	add.w	r6, r4, #36	; 0x24
		int8_t cTxLock = pxQueue->cTxLock;
 8005f92:	b26d      	sxtb	r5, r5
		while( cTxLock > queueLOCKED_UNMODIFIED )
 8005f94:	2d00      	cmp	r5, #0
 8005f96:	dc14      	bgt.n	8005fc2 <prvUnlockQueue+0x40>
		pxQueue->cTxLock = queueUNLOCKED;
 8005f98:	23ff      	movs	r3, #255	; 0xff
 8005f9a:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 8005f9e:	f7ff fe73 	bl	8005c88 <vPortExitCritical>
	taskENTER_CRITICAL();
 8005fa2:	f7ff fe4f 	bl	8005c44 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 8005fa6:	f894 5044 	ldrb.w	r5, [r4, #68]	; 0x44
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8005faa:	f104 0610 	add.w	r6, r4, #16
		int8_t cRxLock = pxQueue->cRxLock;
 8005fae:	b26d      	sxtb	r5, r5
		while( cRxLock > queueLOCKED_UNMODIFIED )
 8005fb0:	2d00      	cmp	r5, #0
 8005fb2:	dc12      	bgt.n	8005fda <prvUnlockQueue+0x58>
		pxQueue->cRxLock = queueUNLOCKED;
 8005fb4:	23ff      	movs	r3, #255	; 0xff
 8005fb6:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
}
 8005fba:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
	taskEXIT_CRITICAL();
 8005fbe:	f7ff be63 	b.w	8005c88 <vPortExitCritical>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8005fc2:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8005fc4:	2b00      	cmp	r3, #0
 8005fc6:	d0e7      	beq.n	8005f98 <prvUnlockQueue+0x16>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8005fc8:	4630      	mov	r0, r6
 8005fca:	f001 f81b 	bl	8007004 <xTaskRemoveFromEventList>
 8005fce:	b108      	cbz	r0, 8005fd4 <prvUnlockQueue+0x52>
						vTaskMissedYield();
 8005fd0:	f001 f8a0 	bl	8007114 <vTaskMissedYield>
 8005fd4:	3d01      	subs	r5, #1
 8005fd6:	b26d      	sxtb	r5, r5
 8005fd8:	e7dc      	b.n	8005f94 <prvUnlockQueue+0x12>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8005fda:	6923      	ldr	r3, [r4, #16]
 8005fdc:	2b00      	cmp	r3, #0
 8005fde:	d0e9      	beq.n	8005fb4 <prvUnlockQueue+0x32>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8005fe0:	4630      	mov	r0, r6
 8005fe2:	f001 f80f 	bl	8007004 <xTaskRemoveFromEventList>
 8005fe6:	b108      	cbz	r0, 8005fec <prvUnlockQueue+0x6a>
					vTaskMissedYield();
 8005fe8:	f001 f894 	bl	8007114 <vTaskMissedYield>
 8005fec:	3d01      	subs	r5, #1
 8005fee:	b26d      	sxtb	r5, r5
 8005ff0:	e7de      	b.n	8005fb0 <prvUnlockQueue+0x2e>
	...

08005ff4 <xQueueGenericReset>:
{
 8005ff4:	b538      	push	{r3, r4, r5, lr}
 8005ff6:	460d      	mov	r5, r1
	configASSERT( pxQueue );
 8005ff8:	4604      	mov	r4, r0
 8005ffa:	b940      	cbnz	r0, 800600e <xQueueGenericReset+0x1a>
 8005ffc:	f04f 0350 	mov.w	r3, #80	; 0x50
 8006000:	f383 8811 	msr	BASEPRI, r3
 8006004:	f3bf 8f6f 	isb	sy
 8006008:	f3bf 8f4f 	dsb	sy
 800600c:	e7fe      	b.n	800600c <xQueueGenericReset+0x18>
	taskENTER_CRITICAL();
 800600e:	f7ff fe19 	bl	8005c44 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8006012:	e9d4 300f 	ldrd	r3, r0, [r4, #60]	; 0x3c
 8006016:	6822      	ldr	r2, [r4, #0]
		pxQueue->pcWriteTo = pxQueue->pcHead;
 8006018:	6062      	str	r2, [r4, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800601a:	4343      	muls	r3, r0
 800601c:	18d1      	adds	r1, r2, r3
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800601e:	1a1b      	subs	r3, r3, r0
 8006020:	4413      	add	r3, r2
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8006022:	60a1      	str	r1, [r4, #8]
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8006024:	60e3      	str	r3, [r4, #12]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 8006026:	2100      	movs	r1, #0
		pxQueue->cRxLock = queueUNLOCKED;
 8006028:	23ff      	movs	r3, #255	; 0xff
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800602a:	63a1      	str	r1, [r4, #56]	; 0x38
		pxQueue->cRxLock = queueUNLOCKED;
 800602c:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
		pxQueue->cTxLock = queueUNLOCKED;
 8006030:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
		if( xNewQueue == pdFALSE )
 8006034:	b995      	cbnz	r5, 800605c <xQueueGenericReset+0x68>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8006036:	6923      	ldr	r3, [r4, #16]
 8006038:	b163      	cbz	r3, 8006054 <xQueueGenericReset+0x60>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800603a:	f104 0010 	add.w	r0, r4, #16
 800603e:	f000 ffe1 	bl	8007004 <xTaskRemoveFromEventList>
 8006042:	b138      	cbz	r0, 8006054 <xQueueGenericReset+0x60>
					queueYIELD_IF_USING_PREEMPTION();
 8006044:	4b0a      	ldr	r3, [pc, #40]	; (8006070 <xQueueGenericReset+0x7c>)
 8006046:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800604a:	601a      	str	r2, [r3, #0]
 800604c:	f3bf 8f4f 	dsb	sy
 8006050:	f3bf 8f6f 	isb	sy
	taskEXIT_CRITICAL();
 8006054:	f7ff fe18 	bl	8005c88 <vPortExitCritical>
}
 8006058:	2001      	movs	r0, #1
 800605a:	bd38      	pop	{r3, r4, r5, pc}
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 800605c:	f104 0010 	add.w	r0, r4, #16
 8006060:	f7ff fd42 	bl	8005ae8 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 8006064:	f104 0024 	add.w	r0, r4, #36	; 0x24
 8006068:	f7ff fd3e 	bl	8005ae8 <vListInitialise>
 800606c:	e7f2      	b.n	8006054 <xQueueGenericReset+0x60>
 800606e:	bf00      	nop
 8006070:	e000ed04 	.word	0xe000ed04

08006074 <xQueueGenericCreateStatic>:
	{
 8006074:	b513      	push	{r0, r1, r4, lr}
 8006076:	461c      	mov	r4, r3
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 8006078:	b940      	cbnz	r0, 800608c <xQueueGenericCreateStatic+0x18>
 800607a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800607e:	f383 8811 	msr	BASEPRI, r3
 8006082:	f3bf 8f6f 	isb	sy
 8006086:	f3bf 8f4f 	dsb	sy
 800608a:	e7fe      	b.n	800608a <xQueueGenericCreateStatic+0x16>
		configASSERT( pxStaticQueue != NULL );
 800608c:	b943      	cbnz	r3, 80060a0 <xQueueGenericCreateStatic+0x2c>
 800608e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8006092:	f383 8811 	msr	BASEPRI, r3
 8006096:	f3bf 8f6f 	isb	sy
 800609a:	f3bf 8f4f 	dsb	sy
 800609e:	e7fe      	b.n	800609e <xQueueGenericCreateStatic+0x2a>
		configASSERT( !( ( pucQueueStorage != NULL ) && ( uxItemSize == 0 ) ) );
 80060a0:	b14a      	cbz	r2, 80060b6 <xQueueGenericCreateStatic+0x42>
 80060a2:	b991      	cbnz	r1, 80060ca <xQueueGenericCreateStatic+0x56>
 80060a4:	f04f 0350 	mov.w	r3, #80	; 0x50
 80060a8:	f383 8811 	msr	BASEPRI, r3
 80060ac:	f3bf 8f6f 	isb	sy
 80060b0:	f3bf 8f4f 	dsb	sy
 80060b4:	e7fe      	b.n	80060b4 <xQueueGenericCreateStatic+0x40>
		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
 80060b6:	b141      	cbz	r1, 80060ca <xQueueGenericCreateStatic+0x56>
 80060b8:	f04f 0350 	mov.w	r3, #80	; 0x50
 80060bc:	f383 8811 	msr	BASEPRI, r3
 80060c0:	f3bf 8f6f 	isb	sy
 80060c4:	f3bf 8f4f 	dsb	sy
 80060c8:	e7fe      	b.n	80060c8 <xQueueGenericCreateStatic+0x54>
			volatile size_t xSize = sizeof( StaticQueue_t );
 80060ca:	2350      	movs	r3, #80	; 0x50
 80060cc:	9301      	str	r3, [sp, #4]
			configASSERT( xSize == sizeof( Queue_t ) );
 80060ce:	9b01      	ldr	r3, [sp, #4]
 80060d0:	2b50      	cmp	r3, #80	; 0x50
 80060d2:	d008      	beq.n	80060e6 <xQueueGenericCreateStatic+0x72>
 80060d4:	f04f 0350 	mov.w	r3, #80	; 0x50
 80060d8:	f383 8811 	msr	BASEPRI, r3
 80060dc:	f3bf 8f6f 	isb	sy
 80060e0:	f3bf 8f4f 	dsb	sy
 80060e4:	e7fe      	b.n	80060e4 <xQueueGenericCreateStatic+0x70>
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
 80060e6:	2900      	cmp	r1, #0
 80060e8:	bf08      	it	eq
 80060ea:	4622      	moveq	r2, r4
			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
 80060ec:	9b01      	ldr	r3, [sp, #4]
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
 80060ee:	6022      	str	r2, [r4, #0]
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 80060f0:	2301      	movs	r3, #1
	pxNewQueue->uxItemSize = uxItemSize;
 80060f2:	e9c4 010f 	strd	r0, r1, [r4, #60]	; 0x3c
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 80060f6:	f884 3046 	strb.w	r3, [r4, #70]	; 0x46
	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 80060fa:	4619      	mov	r1, r3
 80060fc:	4620      	mov	r0, r4
 80060fe:	f7ff ff79 	bl	8005ff4 <xQueueGenericReset>
		pxNewQueue->ucQueueType = ucQueueType;
 8006102:	f89d 3010 	ldrb.w	r3, [sp, #16]
 8006106:	f884 304c 	strb.w	r3, [r4, #76]	; 0x4c
	}
 800610a:	4620      	mov	r0, r4
 800610c:	b002      	add	sp, #8
 800610e:	bd10      	pop	{r4, pc}

08006110 <xQueueGenericCreate>:
	{
 8006110:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8006112:	460d      	mov	r5, r1
 8006114:	4617      	mov	r7, r2
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 8006116:	4606      	mov	r6, r0
 8006118:	b940      	cbnz	r0, 800612c <xQueueGenericCreate+0x1c>
 800611a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800611e:	f383 8811 	msr	BASEPRI, r3
 8006122:	f3bf 8f6f 	isb	sy
 8006126:	f3bf 8f4f 	dsb	sy
 800612a:	e7fe      	b.n	800612a <xQueueGenericCreate+0x1a>
			xQueueSizeInBytes = ( size_t ) ( uxQueueLength * uxItemSize ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800612c:	4348      	muls	r0, r1
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !e9079 see comment above. */
 800612e:	3050      	adds	r0, #80	; 0x50
 8006130:	f7ff fc16 	bl	8005960 <pvPortMalloc>
		if( pxNewQueue != NULL )
 8006134:	4604      	mov	r4, r0
 8006136:	b160      	cbz	r0, 8006152 <xQueueGenericCreate+0x42>
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
 8006138:	2300      	movs	r3, #0
 800613a:	f880 3046 	strb.w	r3, [r0, #70]	; 0x46
	if( uxItemSize == ( UBaseType_t ) 0 )
 800613e:	b955      	cbnz	r5, 8006156 <xQueueGenericCreate+0x46>
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
 8006140:	6020      	str	r0, [r4, #0]
	pxNewQueue->uxItemSize = uxItemSize;
 8006142:	e9c4 650f 	strd	r6, r5, [r4, #60]	; 0x3c
	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 8006146:	2101      	movs	r1, #1
 8006148:	4620      	mov	r0, r4
 800614a:	f7ff ff53 	bl	8005ff4 <xQueueGenericReset>
		pxNewQueue->ucQueueType = ucQueueType;
 800614e:	f884 704c 	strb.w	r7, [r4, #76]	; 0x4c
	}
 8006152:	4620      	mov	r0, r4
 8006154:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
			pucQueueStorage += sizeof( Queue_t ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8006156:	f100 0350 	add.w	r3, r0, #80	; 0x50
		pxNewQueue->pcHead = ( int8_t * ) pucQueueStorage;
 800615a:	6003      	str	r3, [r0, #0]
 800615c:	e7f1      	b.n	8006142 <xQueueGenericCreate+0x32>

0800615e <xQueueCreateCountingSemaphoreStatic>:
	{
 800615e:	b513      	push	{r0, r1, r4, lr}
 8006160:	4613      	mov	r3, r2
 8006162:	460c      	mov	r4, r1
		configASSERT( uxMaxCount != 0 );
 8006164:	b940      	cbnz	r0, 8006178 <xQueueCreateCountingSemaphoreStatic+0x1a>
 8006166:	f04f 0350 	mov.w	r3, #80	; 0x50
 800616a:	f383 8811 	msr	BASEPRI, r3
 800616e:	f3bf 8f6f 	isb	sy
 8006172:	f3bf 8f4f 	dsb	sy
 8006176:	e7fe      	b.n	8006176 <xQueueCreateCountingSemaphoreStatic+0x18>
		configASSERT( uxInitialCount <= uxMaxCount );
 8006178:	4288      	cmp	r0, r1
 800617a:	d208      	bcs.n	800618e <xQueueCreateCountingSemaphoreStatic+0x30>
 800617c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8006180:	f383 8811 	msr	BASEPRI, r3
 8006184:	f3bf 8f6f 	isb	sy
 8006188:	f3bf 8f4f 	dsb	sy
 800618c:	e7fe      	b.n	800618c <xQueueCreateCountingSemaphoreStatic+0x2e>
		xHandle = xQueueGenericCreateStatic( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, NULL, pxStaticQueue, queueQUEUE_TYPE_COUNTING_SEMAPHORE );
 800618e:	2202      	movs	r2, #2
 8006190:	9200      	str	r2, [sp, #0]
 8006192:	2200      	movs	r2, #0
 8006194:	4611      	mov	r1, r2
 8006196:	f7ff ff6d 	bl	8006074 <xQueueGenericCreateStatic>
		if( xHandle != NULL )
 800619a:	b100      	cbz	r0, 800619e <xQueueCreateCountingSemaphoreStatic+0x40>
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 800619c:	6384      	str	r4, [r0, #56]	; 0x38
	}
 800619e:	b002      	add	sp, #8
 80061a0:	bd10      	pop	{r4, pc}

080061a2 <xQueueCreateCountingSemaphore>:
	{
 80061a2:	b510      	push	{r4, lr}
 80061a4:	460c      	mov	r4, r1
		configASSERT( uxMaxCount != 0 );
 80061a6:	b940      	cbnz	r0, 80061ba <xQueueCreateCountingSemaphore+0x18>
 80061a8:	f04f 0350 	mov.w	r3, #80	; 0x50
 80061ac:	f383 8811 	msr	BASEPRI, r3
 80061b0:	f3bf 8f6f 	isb	sy
 80061b4:	f3bf 8f4f 	dsb	sy
 80061b8:	e7fe      	b.n	80061b8 <xQueueCreateCountingSemaphore+0x16>
		configASSERT( uxInitialCount <= uxMaxCount );
 80061ba:	4288      	cmp	r0, r1
 80061bc:	d208      	bcs.n	80061d0 <xQueueCreateCountingSemaphore+0x2e>
 80061be:	f04f 0350 	mov.w	r3, #80	; 0x50
 80061c2:	f383 8811 	msr	BASEPRI, r3
 80061c6:	f3bf 8f6f 	isb	sy
 80061ca:	f3bf 8f4f 	dsb	sy
 80061ce:	e7fe      	b.n	80061ce <xQueueCreateCountingSemaphore+0x2c>
		xHandle = xQueueGenericCreate( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, queueQUEUE_TYPE_COUNTING_SEMAPHORE );
 80061d0:	2202      	movs	r2, #2
 80061d2:	2100      	movs	r1, #0
 80061d4:	f7ff ff9c 	bl	8006110 <xQueueGenericCreate>
		if( xHandle != NULL )
 80061d8:	b100      	cbz	r0, 80061dc <xQueueCreateCountingSemaphore+0x3a>
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 80061da:	6384      	str	r4, [r0, #56]	; 0x38
	}
 80061dc:	bd10      	pop	{r4, pc}
	...

080061e0 <xQueueGenericSend>:
{
 80061e0:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 80061e4:	4688      	mov	r8, r1
 80061e6:	9201      	str	r2, [sp, #4]
 80061e8:	461f      	mov	r7, r3
	configASSERT( pxQueue );
 80061ea:	4604      	mov	r4, r0
 80061ec:	b940      	cbnz	r0, 8006200 <xQueueGenericSend+0x20>
 80061ee:	f04f 0350 	mov.w	r3, #80	; 0x50
 80061f2:	f383 8811 	msr	BASEPRI, r3
 80061f6:	f3bf 8f6f 	isb	sy
 80061fa:	f3bf 8f4f 	dsb	sy
 80061fe:	e7fe      	b.n	80061fe <xQueueGenericSend+0x1e>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 8006200:	b951      	cbnz	r1, 8006218 <xQueueGenericSend+0x38>
 8006202:	6c03      	ldr	r3, [r0, #64]	; 0x40
 8006204:	b143      	cbz	r3, 8006218 <xQueueGenericSend+0x38>
 8006206:	f04f 0350 	mov.w	r3, #80	; 0x50
 800620a:	f383 8811 	msr	BASEPRI, r3
 800620e:	f3bf 8f6f 	isb	sy
 8006212:	f3bf 8f4f 	dsb	sy
 8006216:	e7fe      	b.n	8006216 <xQueueGenericSend+0x36>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 8006218:	2f02      	cmp	r7, #2
 800621a:	d10b      	bne.n	8006234 <xQueueGenericSend+0x54>
 800621c:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800621e:	2b01      	cmp	r3, #1
 8006220:	d008      	beq.n	8006234 <xQueueGenericSend+0x54>
 8006222:	f04f 0350 	mov.w	r3, #80	; 0x50
 8006226:	f383 8811 	msr	BASEPRI, r3
 800622a:	f3bf 8f6f 	isb	sy
 800622e:	f3bf 8f4f 	dsb	sy
 8006232:	e7fe      	b.n	8006232 <xQueueGenericSend+0x52>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 8006234:	f000 ff74 	bl	8007120 <xTaskGetSchedulerState>
 8006238:	b950      	cbnz	r0, 8006250 <xQueueGenericSend+0x70>
 800623a:	9e01      	ldr	r6, [sp, #4]
 800623c:	b14e      	cbz	r6, 8006252 <xQueueGenericSend+0x72>
 800623e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8006242:	f383 8811 	msr	BASEPRI, r3
 8006246:	f3bf 8f6f 	isb	sy
 800624a:	f3bf 8f4f 	dsb	sy
 800624e:	e7fe      	b.n	800624e <xQueueGenericSend+0x6e>
 8006250:	2600      	movs	r6, #0
		prvLockQueue( pxQueue );
 8006252:	f04f 0900 	mov.w	r9, #0
					portYIELD_WITHIN_API();
 8006256:	f8df a0e8 	ldr.w	sl, [pc, #232]	; 8006340 <xQueueGenericSend+0x160>
 800625a:	e037      	b.n	80062cc <xQueueGenericSend+0xec>
				if( xTicksToWait == ( TickType_t ) 0 )
 800625c:	9d01      	ldr	r5, [sp, #4]
 800625e:	b91d      	cbnz	r5, 8006268 <xQueueGenericSend+0x88>
					taskEXIT_CRITICAL();
 8006260:	f7ff fd12 	bl	8005c88 <vPortExitCritical>
			return errQUEUE_FULL;
 8006264:	2000      	movs	r0, #0
 8006266:	e050      	b.n	800630a <xQueueGenericSend+0x12a>
				else if( xEntryTimeSet == pdFALSE )
 8006268:	b916      	cbnz	r6, 8006270 <xQueueGenericSend+0x90>
					vTaskInternalSetTimeOutState( &xTimeOut );
 800626a:	a802      	add	r0, sp, #8
 800626c:	f000 ff0a 	bl	8007084 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 8006270:	f7ff fd0a 	bl	8005c88 <vPortExitCritical>
		vTaskSuspendAll();
 8006274:	f000 fd40 	bl	8006cf8 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 8006278:	f7ff fce4 	bl	8005c44 <vPortEnterCritical>
 800627c:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 8006280:	2bff      	cmp	r3, #255	; 0xff
 8006282:	bf08      	it	eq
 8006284:	f884 9044 	strbeq.w	r9, [r4, #68]	; 0x44
 8006288:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800628c:	2bff      	cmp	r3, #255	; 0xff
 800628e:	bf08      	it	eq
 8006290:	f884 9045 	strbeq.w	r9, [r4, #69]	; 0x45
 8006294:	f7ff fcf8 	bl	8005c88 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 8006298:	a901      	add	r1, sp, #4
 800629a:	a802      	add	r0, sp, #8
 800629c:	f000 fefe 	bl	800709c <xTaskCheckForTimeOut>
 80062a0:	2800      	cmp	r0, #0
 80062a2:	d146      	bne.n	8006332 <xQueueGenericSend+0x152>

static BaseType_t prvIsQueueFull( const Queue_t *pxQueue )
{
BaseType_t xReturn;

	taskENTER_CRITICAL();
 80062a4:	f7ff fcce 	bl	8005c44 <vPortEnterCritical>
	{
		if( pxQueue->uxMessagesWaiting == pxQueue->uxLength )
 80062a8:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 80062aa:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 80062ac:	429a      	cmp	r2, r3
 80062ae:	d12f      	bne.n	8006310 <xQueueGenericSend+0x130>
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
 80062b0:	f7ff fcea 	bl	8005c88 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
 80062b4:	9901      	ldr	r1, [sp, #4]
 80062b6:	f104 0010 	add.w	r0, r4, #16
 80062ba:	f000 fe6b 	bl	8006f94 <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 80062be:	4620      	mov	r0, r4
 80062c0:	f7ff fe5f 	bl	8005f82 <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 80062c4:	f000 fdb6 	bl	8006e34 <xTaskResumeAll>
 80062c8:	b350      	cbz	r0, 8006320 <xQueueGenericSend+0x140>
 80062ca:	2601      	movs	r6, #1
		taskENTER_CRITICAL();
 80062cc:	f7ff fcba 	bl	8005c44 <vPortEnterCritical>
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 80062d0:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 80062d2:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 80062d4:	429a      	cmp	r2, r3
 80062d6:	d301      	bcc.n	80062dc <xQueueGenericSend+0xfc>
 80062d8:	2f02      	cmp	r7, #2
 80062da:	d1bf      	bne.n	800625c <xQueueGenericSend+0x7c>
					xYieldRequired = prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 80062dc:	463a      	mov	r2, r7
 80062de:	4641      	mov	r1, r8
 80062e0:	4620      	mov	r0, r4
 80062e2:	f7ff fe06 	bl	8005ef2 <prvCopyDataToQueue>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 80062e6:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80062e8:	b11b      	cbz	r3, 80062f2 <xQueueGenericSend+0x112>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 80062ea:	f104 0024 	add.w	r0, r4, #36	; 0x24
 80062ee:	f000 fe89 	bl	8007004 <xTaskRemoveFromEventList>
					else if( xYieldRequired != pdFALSE )
 80062f2:	b138      	cbz	r0, 8006304 <xQueueGenericSend+0x124>
						queueYIELD_IF_USING_PREEMPTION();
 80062f4:	4b12      	ldr	r3, [pc, #72]	; (8006340 <xQueueGenericSend+0x160>)
 80062f6:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 80062fa:	601a      	str	r2, [r3, #0]
 80062fc:	f3bf 8f4f 	dsb	sy
 8006300:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 8006304:	f7ff fcc0 	bl	8005c88 <vPortExitCritical>
				return pdPASS;
 8006308:	2001      	movs	r0, #1
}
 800630a:	b004      	add	sp, #16
 800630c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
	taskEXIT_CRITICAL();
 8006310:	f7ff fcba 	bl	8005c88 <vPortExitCritical>
				prvUnlockQueue( pxQueue );
 8006314:	4620      	mov	r0, r4
 8006316:	f7ff fe34 	bl	8005f82 <prvUnlockQueue>
				( void ) xTaskResumeAll();
 800631a:	f000 fd8b 	bl	8006e34 <xTaskResumeAll>
 800631e:	e7d4      	b.n	80062ca <xQueueGenericSend+0xea>
					portYIELD_WITHIN_API();
 8006320:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
 8006324:	f8ca 3000 	str.w	r3, [sl]
 8006328:	f3bf 8f4f 	dsb	sy
 800632c:	f3bf 8f6f 	isb	sy
 8006330:	e7cb      	b.n	80062ca <xQueueGenericSend+0xea>
			prvUnlockQueue( pxQueue );
 8006332:	4620      	mov	r0, r4
 8006334:	f7ff fe25 	bl	8005f82 <prvUnlockQueue>
			( void ) xTaskResumeAll();
 8006338:	f000 fd7c 	bl	8006e34 <xTaskResumeAll>
 800633c:	e792      	b.n	8006264 <xQueueGenericSend+0x84>
 800633e:	bf00      	nop
 8006340:	e000ed04 	.word	0xe000ed04

08006344 <xQueueGenericSendFromISR>:
{
 8006344:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8006348:	4689      	mov	r9, r1
 800634a:	4690      	mov	r8, r2
 800634c:	461f      	mov	r7, r3
	configASSERT( pxQueue );
 800634e:	4604      	mov	r4, r0
 8006350:	b940      	cbnz	r0, 8006364 <xQueueGenericSendFromISR+0x20>
 8006352:	f04f 0350 	mov.w	r3, #80	; 0x50
 8006356:	f383 8811 	msr	BASEPRI, r3
 800635a:	f3bf 8f6f 	isb	sy
 800635e:	f3bf 8f4f 	dsb	sy
 8006362:	e7fe      	b.n	8006362 <xQueueGenericSendFromISR+0x1e>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 8006364:	b951      	cbnz	r1, 800637c <xQueueGenericSendFromISR+0x38>
 8006366:	6c03      	ldr	r3, [r0, #64]	; 0x40
 8006368:	b143      	cbz	r3, 800637c <xQueueGenericSendFromISR+0x38>
 800636a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800636e:	f383 8811 	msr	BASEPRI, r3
 8006372:	f3bf 8f6f 	isb	sy
 8006376:	f3bf 8f4f 	dsb	sy
 800637a:	e7fe      	b.n	800637a <xQueueGenericSendFromISR+0x36>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 800637c:	2f02      	cmp	r7, #2
 800637e:	d10b      	bne.n	8006398 <xQueueGenericSendFromISR+0x54>
 8006380:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8006382:	2b01      	cmp	r3, #1
 8006384:	d008      	beq.n	8006398 <xQueueGenericSendFromISR+0x54>
 8006386:	f04f 0350 	mov.w	r3, #80	; 0x50
 800638a:	f383 8811 	msr	BASEPRI, r3
 800638e:	f3bf 8f6f 	isb	sy
 8006392:	f3bf 8f4f 	dsb	sy
 8006396:	e7fe      	b.n	8006396 <xQueueGenericSendFromISR+0x52>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 8006398:	f7ff fd72 	bl	8005e80 <vPortValidateInterruptPriority>
	__asm volatile
 800639c:	f3ef 8611 	mrs	r6, BASEPRI
 80063a0:	f04f 0350 	mov.w	r3, #80	; 0x50
 80063a4:	f383 8811 	msr	BASEPRI, r3
 80063a8:	f3bf 8f6f 	isb	sy
 80063ac:	f3bf 8f4f 	dsb	sy
		if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 80063b0:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 80063b2:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 80063b4:	429a      	cmp	r2, r3
 80063b6:	d301      	bcc.n	80063bc <xQueueGenericSendFromISR+0x78>
 80063b8:	2f02      	cmp	r7, #2
 80063ba:	d122      	bne.n	8006402 <xQueueGenericSendFromISR+0xbe>
			const int8_t cTxLock = pxQueue->cTxLock;
 80063bc:	f894 5045 	ldrb.w	r5, [r4, #69]	; 0x45
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 80063c0:	463a      	mov	r2, r7
			const int8_t cTxLock = pxQueue->cTxLock;
 80063c2:	b26d      	sxtb	r5, r5
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 80063c4:	4649      	mov	r1, r9
 80063c6:	4620      	mov	r0, r4
 80063c8:	f7ff fd93 	bl	8005ef2 <prvCopyDataToQueue>
			if( cTxLock == queueUNLOCKED )
 80063cc:	1c6b      	adds	r3, r5, #1
 80063ce:	d113      	bne.n	80063f8 <xQueueGenericSendFromISR+0xb4>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 80063d0:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80063d2:	b90b      	cbnz	r3, 80063d8 <xQueueGenericSendFromISR+0x94>
			xReturn = pdPASS;
 80063d4:	2001      	movs	r0, #1
 80063d6:	e00b      	b.n	80063f0 <xQueueGenericSendFromISR+0xac>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 80063d8:	f104 0024 	add.w	r0, r4, #36	; 0x24
 80063dc:	f000 fe12 	bl	8007004 <xTaskRemoveFromEventList>
 80063e0:	2800      	cmp	r0, #0
 80063e2:	d0f7      	beq.n	80063d4 <xQueueGenericSendFromISR+0x90>
							if( pxHigherPriorityTaskWoken != NULL )
 80063e4:	f1b8 0f00 	cmp.w	r8, #0
 80063e8:	d0f4      	beq.n	80063d4 <xQueueGenericSendFromISR+0x90>
								*pxHigherPriorityTaskWoken = pdTRUE;
 80063ea:	2001      	movs	r0, #1
 80063ec:	f8c8 0000 	str.w	r0, [r8]
	__asm volatile
 80063f0:	f386 8811 	msr	BASEPRI, r6
}
 80063f4:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 80063f8:	3501      	adds	r5, #1
 80063fa:	b26d      	sxtb	r5, r5
 80063fc:	f884 5045 	strb.w	r5, [r4, #69]	; 0x45
 8006400:	e7e8      	b.n	80063d4 <xQueueGenericSendFromISR+0x90>
			xReturn = errQUEUE_FULL;
 8006402:	2000      	movs	r0, #0
 8006404:	e7f4      	b.n	80063f0 <xQueueGenericSendFromISR+0xac>

08006406 <xQueueGiveFromISR>:
{
 8006406:	b570      	push	{r4, r5, r6, lr}
 8006408:	460d      	mov	r5, r1
	configASSERT( pxQueue );
 800640a:	4604      	mov	r4, r0
 800640c:	b940      	cbnz	r0, 8006420 <xQueueGiveFromISR+0x1a>
	__asm volatile
 800640e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8006412:	f383 8811 	msr	BASEPRI, r3
 8006416:	f3bf 8f6f 	isb	sy
 800641a:	f3bf 8f4f 	dsb	sy
 800641e:	e7fe      	b.n	800641e <xQueueGiveFromISR+0x18>
	configASSERT( pxQueue->uxItemSize == 0 );
 8006420:	6c03      	ldr	r3, [r0, #64]	; 0x40
 8006422:	b143      	cbz	r3, 8006436 <xQueueGiveFromISR+0x30>
 8006424:	f04f 0350 	mov.w	r3, #80	; 0x50
 8006428:	f383 8811 	msr	BASEPRI, r3
 800642c:	f3bf 8f6f 	isb	sy
 8006430:	f3bf 8f4f 	dsb	sy
 8006434:	e7fe      	b.n	8006434 <xQueueGiveFromISR+0x2e>
	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->u.xSemaphore.xMutexHolder != NULL ) ) );
 8006436:	6803      	ldr	r3, [r0, #0]
 8006438:	b953      	cbnz	r3, 8006450 <xQueueGiveFromISR+0x4a>
 800643a:	6883      	ldr	r3, [r0, #8]
 800643c:	b143      	cbz	r3, 8006450 <xQueueGiveFromISR+0x4a>
 800643e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8006442:	f383 8811 	msr	BASEPRI, r3
 8006446:	f3bf 8f6f 	isb	sy
 800644a:	f3bf 8f4f 	dsb	sy
 800644e:	e7fe      	b.n	800644e <xQueueGiveFromISR+0x48>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 8006450:	f7ff fd16 	bl	8005e80 <vPortValidateInterruptPriority>
	__asm volatile
 8006454:	f3ef 8611 	mrs	r6, BASEPRI
 8006458:	f04f 0350 	mov.w	r3, #80	; 0x50
 800645c:	f383 8811 	msr	BASEPRI, r3
 8006460:	f3bf 8f6f 	isb	sy
 8006464:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 8006468:	6ba2      	ldr	r2, [r4, #56]	; 0x38
		if( uxMessagesWaiting < pxQueue->uxLength )
 800646a:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800646c:	4293      	cmp	r3, r2
 800646e:	d91c      	bls.n	80064aa <xQueueGiveFromISR+0xa4>
			const int8_t cTxLock = pxQueue->cTxLock;
 8006470:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 8006474:	3201      	adds	r2, #1
			const int8_t cTxLock = pxQueue->cTxLock;
 8006476:	b25b      	sxtb	r3, r3
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 8006478:	63a2      	str	r2, [r4, #56]	; 0x38
			if( cTxLock == queueUNLOCKED )
 800647a:	1c5a      	adds	r2, r3, #1
 800647c:	d110      	bne.n	80064a0 <xQueueGiveFromISR+0x9a>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800647e:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8006480:	b90b      	cbnz	r3, 8006486 <xQueueGiveFromISR+0x80>
			xReturn = pdPASS;
 8006482:	2001      	movs	r0, #1
 8006484:	e009      	b.n	800649a <xQueueGiveFromISR+0x94>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8006486:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800648a:	f000 fdbb 	bl	8007004 <xTaskRemoveFromEventList>
 800648e:	2800      	cmp	r0, #0
 8006490:	d0f7      	beq.n	8006482 <xQueueGiveFromISR+0x7c>
							if( pxHigherPriorityTaskWoken != NULL )
 8006492:	2d00      	cmp	r5, #0
 8006494:	d0f5      	beq.n	8006482 <xQueueGiveFromISR+0x7c>
								*pxHigherPriorityTaskWoken = pdTRUE;
 8006496:	2001      	movs	r0, #1
 8006498:	6028      	str	r0, [r5, #0]
	__asm volatile
 800649a:	f386 8811 	msr	BASEPRI, r6
}
 800649e:	bd70      	pop	{r4, r5, r6, pc}
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 80064a0:	3301      	adds	r3, #1
 80064a2:	b25b      	sxtb	r3, r3
 80064a4:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 80064a8:	e7eb      	b.n	8006482 <xQueueGiveFromISR+0x7c>
			xReturn = errQUEUE_FULL;
 80064aa:	2000      	movs	r0, #0
 80064ac:	e7f5      	b.n	800649a <xQueueGiveFromISR+0x94>
	...

080064b0 <xQueueReceive>:
{
 80064b0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80064b4:	b085      	sub	sp, #20
 80064b6:	460f      	mov	r7, r1
 80064b8:	9201      	str	r2, [sp, #4]
	configASSERT( ( pxQueue ) );
 80064ba:	4604      	mov	r4, r0
 80064bc:	b940      	cbnz	r0, 80064d0 <xQueueReceive+0x20>
	__asm volatile
 80064be:	f04f 0350 	mov.w	r3, #80	; 0x50
 80064c2:	f383 8811 	msr	BASEPRI, r3
 80064c6:	f3bf 8f6f 	isb	sy
 80064ca:	f3bf 8f4f 	dsb	sy
 80064ce:	e7fe      	b.n	80064ce <xQueueReceive+0x1e>
	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) );
 80064d0:	b951      	cbnz	r1, 80064e8 <xQueueReceive+0x38>
 80064d2:	6c03      	ldr	r3, [r0, #64]	; 0x40
 80064d4:	b143      	cbz	r3, 80064e8 <xQueueReceive+0x38>
 80064d6:	f04f 0350 	mov.w	r3, #80	; 0x50
 80064da:	f383 8811 	msr	BASEPRI, r3
 80064de:	f3bf 8f6f 	isb	sy
 80064e2:	f3bf 8f4f 	dsb	sy
 80064e6:	e7fe      	b.n	80064e6 <xQueueReceive+0x36>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 80064e8:	f000 fe1a 	bl	8007120 <xTaskGetSchedulerState>
 80064ec:	b950      	cbnz	r0, 8006504 <xQueueReceive+0x54>
 80064ee:	9e01      	ldr	r6, [sp, #4]
 80064f0:	b14e      	cbz	r6, 8006506 <xQueueReceive+0x56>
 80064f2:	f04f 0350 	mov.w	r3, #80	; 0x50
 80064f6:	f383 8811 	msr	BASEPRI, r3
 80064fa:	f3bf 8f6f 	isb	sy
 80064fe:	f3bf 8f4f 	dsb	sy
 8006502:	e7fe      	b.n	8006502 <xQueueReceive+0x52>
 8006504:	2600      	movs	r6, #0
		prvLockQueue( pxQueue );
 8006506:	f04f 0800 	mov.w	r8, #0
					portYIELD_WITHIN_API();
 800650a:	f8df 90e0 	ldr.w	r9, [pc, #224]	; 80065ec <xQueueReceive+0x13c>
 800650e:	e03b      	b.n	8006588 <xQueueReceive+0xd8>
				if( xTicksToWait == ( TickType_t ) 0 )
 8006510:	9d01      	ldr	r5, [sp, #4]
 8006512:	b91d      	cbnz	r5, 800651c <xQueueReceive+0x6c>
					taskEXIT_CRITICAL();
 8006514:	f7ff fbb8 	bl	8005c88 <vPortExitCritical>
				return errQUEUE_EMPTY;
 8006518:	2000      	movs	r0, #0
 800651a:	e052      	b.n	80065c2 <xQueueReceive+0x112>
				else if( xEntryTimeSet == pdFALSE )
 800651c:	b916      	cbnz	r6, 8006524 <xQueueReceive+0x74>
					vTaskInternalSetTimeOutState( &xTimeOut );
 800651e:	a802      	add	r0, sp, #8
 8006520:	f000 fdb0 	bl	8007084 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 8006524:	f7ff fbb0 	bl	8005c88 <vPortExitCritical>
		vTaskSuspendAll();
 8006528:	f000 fbe6 	bl	8006cf8 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 800652c:	f7ff fb8a 	bl	8005c44 <vPortEnterCritical>
 8006530:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 8006534:	2bff      	cmp	r3, #255	; 0xff
 8006536:	bf08      	it	eq
 8006538:	f884 8044 	strbeq.w	r8, [r4, #68]	; 0x44
 800653c:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 8006540:	2bff      	cmp	r3, #255	; 0xff
 8006542:	bf08      	it	eq
 8006544:	f884 8045 	strbeq.w	r8, [r4, #69]	; 0x45
 8006548:	f7ff fb9e 	bl	8005c88 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 800654c:	a901      	add	r1, sp, #4
 800654e:	a802      	add	r0, sp, #8
 8006550:	f000 fda4 	bl	800709c <xTaskCheckForTimeOut>
 8006554:	2800      	cmp	r0, #0
 8006556:	d13d      	bne.n	80065d4 <xQueueReceive+0x124>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 8006558:	4620      	mov	r0, r4
 800655a:	f7ff fcbf 	bl	8005edc <prvIsQueueEmpty>
 800655e:	b398      	cbz	r0, 80065c8 <xQueueReceive+0x118>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 8006560:	9901      	ldr	r1, [sp, #4]
 8006562:	f104 0024 	add.w	r0, r4, #36	; 0x24
 8006566:	f000 fd15 	bl	8006f94 <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 800656a:	4620      	mov	r0, r4
 800656c:	f7ff fd09 	bl	8005f82 <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 8006570:	f000 fc60 	bl	8006e34 <xTaskResumeAll>
 8006574:	b938      	cbnz	r0, 8006586 <xQueueReceive+0xd6>
					portYIELD_WITHIN_API();
 8006576:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
 800657a:	f8c9 3000 	str.w	r3, [r9]
 800657e:	f3bf 8f4f 	dsb	sy
 8006582:	f3bf 8f6f 	isb	sy
 8006586:	2601      	movs	r6, #1
		taskENTER_CRITICAL();
 8006588:	f7ff fb5c 	bl	8005c44 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800658c:	6ba5      	ldr	r5, [r4, #56]	; 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 800658e:	2d00      	cmp	r5, #0
 8006590:	d0be      	beq.n	8006510 <xQueueReceive+0x60>
				prvCopyDataFromQueue( pxQueue, pvBuffer );
 8006592:	4639      	mov	r1, r7
 8006594:	4620      	mov	r0, r4
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 8006596:	3d01      	subs	r5, #1
				prvCopyDataFromQueue( pxQueue, pvBuffer );
 8006598:	f7ff fcde 	bl	8005f58 <prvCopyDataFromQueue>
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 800659c:	63a5      	str	r5, [r4, #56]	; 0x38
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800659e:	6923      	ldr	r3, [r4, #16]
 80065a0:	b163      	cbz	r3, 80065bc <xQueueReceive+0x10c>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 80065a2:	f104 0010 	add.w	r0, r4, #16
 80065a6:	f000 fd2d 	bl	8007004 <xTaskRemoveFromEventList>
 80065aa:	b138      	cbz	r0, 80065bc <xQueueReceive+0x10c>
						queueYIELD_IF_USING_PREEMPTION();
 80065ac:	4b0f      	ldr	r3, [pc, #60]	; (80065ec <xQueueReceive+0x13c>)
 80065ae:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 80065b2:	601a      	str	r2, [r3, #0]
 80065b4:	f3bf 8f4f 	dsb	sy
 80065b8:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 80065bc:	f7ff fb64 	bl	8005c88 <vPortExitCritical>
				return pdPASS;
 80065c0:	2001      	movs	r0, #1
}
 80065c2:	b005      	add	sp, #20
 80065c4:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
				prvUnlockQueue( pxQueue );
 80065c8:	4620      	mov	r0, r4
 80065ca:	f7ff fcda 	bl	8005f82 <prvUnlockQueue>
				( void ) xTaskResumeAll();
 80065ce:	f000 fc31 	bl	8006e34 <xTaskResumeAll>
 80065d2:	e7d8      	b.n	8006586 <xQueueReceive+0xd6>
			prvUnlockQueue( pxQueue );
 80065d4:	4620      	mov	r0, r4
 80065d6:	f7ff fcd4 	bl	8005f82 <prvUnlockQueue>
			( void ) xTaskResumeAll();
 80065da:	f000 fc2b 	bl	8006e34 <xTaskResumeAll>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 80065de:	4620      	mov	r0, r4
 80065e0:	f7ff fc7c 	bl	8005edc <prvIsQueueEmpty>
 80065e4:	2800      	cmp	r0, #0
 80065e6:	d0ce      	beq.n	8006586 <xQueueReceive+0xd6>
 80065e8:	e796      	b.n	8006518 <xQueueReceive+0x68>
 80065ea:	bf00      	nop
 80065ec:	e000ed04 	.word	0xe000ed04

080065f0 <xQueueSemaphoreTake>:
{
 80065f0:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
	configASSERT( ( pxQueue ) );
 80065f4:	4604      	mov	r4, r0
{
 80065f6:	9101      	str	r1, [sp, #4]
	configASSERT( ( pxQueue ) );
 80065f8:	b940      	cbnz	r0, 800660c <xQueueSemaphoreTake+0x1c>
 80065fa:	f04f 0350 	mov.w	r3, #80	; 0x50
 80065fe:	f383 8811 	msr	BASEPRI, r3
 8006602:	f3bf 8f6f 	isb	sy
 8006606:	f3bf 8f4f 	dsb	sy
 800660a:	e7fe      	b.n	800660a <xQueueSemaphoreTake+0x1a>
	configASSERT( pxQueue->uxItemSize == 0 );
 800660c:	6c05      	ldr	r5, [r0, #64]	; 0x40
 800660e:	b145      	cbz	r5, 8006622 <xQueueSemaphoreTake+0x32>
 8006610:	f04f 0350 	mov.w	r3, #80	; 0x50
 8006614:	f383 8811 	msr	BASEPRI, r3
 8006618:	f3bf 8f6f 	isb	sy
 800661c:	f3bf 8f4f 	dsb	sy
 8006620:	e7fe      	b.n	8006620 <xQueueSemaphoreTake+0x30>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 8006622:	f000 fd7d 	bl	8007120 <xTaskGetSchedulerState>
 8006626:	b950      	cbnz	r0, 800663e <xQueueSemaphoreTake+0x4e>
 8006628:	9d01      	ldr	r5, [sp, #4]
 800662a:	b145      	cbz	r5, 800663e <xQueueSemaphoreTake+0x4e>
 800662c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8006630:	f383 8811 	msr	BASEPRI, r3
 8006634:	f3bf 8f6f 	isb	sy
 8006638:	f3bf 8f4f 	dsb	sy
 800663c:	e7fe      	b.n	800663c <xQueueSemaphoreTake+0x4c>
 800663e:	462e      	mov	r6, r5
		prvLockQueue( pxQueue );
 8006640:	2700      	movs	r7, #0
					portYIELD_WITHIN_API();
 8006642:	f8df 812c 	ldr.w	r8, [pc, #300]	; 8006770 <xQueueSemaphoreTake+0x180>
 8006646:	e04f      	b.n	80066e8 <xQueueSemaphoreTake+0xf8>
				if( xTicksToWait == ( TickType_t ) 0 )
 8006648:	9b01      	ldr	r3, [sp, #4]
 800664a:	b963      	cbnz	r3, 8006666 <xQueueSemaphoreTake+0x76>
						configASSERT( xInheritanceOccurred == pdFALSE );
 800664c:	b145      	cbz	r5, 8006660 <xQueueSemaphoreTake+0x70>
 800664e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8006652:	f383 8811 	msr	BASEPRI, r3
 8006656:	f3bf 8f6f 	isb	sy
 800665a:	f3bf 8f4f 	dsb	sy
 800665e:	e7fe      	b.n	800665e <xQueueSemaphoreTake+0x6e>
					taskEXIT_CRITICAL();
 8006660:	f7ff fb12 	bl	8005c88 <vPortExitCritical>
					return errQUEUE_EMPTY;
 8006664:	e05e      	b.n	8006724 <xQueueSemaphoreTake+0x134>
				else if( xEntryTimeSet == pdFALSE )
 8006666:	b916      	cbnz	r6, 800666e <xQueueSemaphoreTake+0x7e>
					vTaskInternalSetTimeOutState( &xTimeOut );
 8006668:	a802      	add	r0, sp, #8
 800666a:	f000 fd0b 	bl	8007084 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 800666e:	f7ff fb0b 	bl	8005c88 <vPortExitCritical>
		vTaskSuspendAll();
 8006672:	f000 fb41 	bl	8006cf8 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 8006676:	f7ff fae5 	bl	8005c44 <vPortEnterCritical>
 800667a:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800667e:	2bff      	cmp	r3, #255	; 0xff
 8006680:	bf08      	it	eq
 8006682:	f884 7044 	strbeq.w	r7, [r4, #68]	; 0x44
 8006686:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800668a:	2bff      	cmp	r3, #255	; 0xff
 800668c:	bf08      	it	eq
 800668e:	f884 7045 	strbeq.w	r7, [r4, #69]	; 0x45
 8006692:	f7ff faf9 	bl	8005c88 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 8006696:	a901      	add	r1, sp, #4
 8006698:	a802      	add	r0, sp, #8
 800669a:	f000 fcff 	bl	800709c <xTaskCheckForTimeOut>
 800669e:	2800      	cmp	r0, #0
 80066a0:	d14a      	bne.n	8006738 <xQueueSemaphoreTake+0x148>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 80066a2:	4620      	mov	r0, r4
 80066a4:	f7ff fc1a 	bl	8005edc <prvIsQueueEmpty>
 80066a8:	2800      	cmp	r0, #0
 80066aa:	d03f      	beq.n	800672c <xQueueSemaphoreTake+0x13c>
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 80066ac:	6823      	ldr	r3, [r4, #0]
 80066ae:	b93b      	cbnz	r3, 80066c0 <xQueueSemaphoreTake+0xd0>
						taskENTER_CRITICAL();
 80066b0:	f7ff fac8 	bl	8005c44 <vPortEnterCritical>
							xInheritanceOccurred = xTaskPriorityInherit( pxQueue->u.xSemaphore.xMutexHolder );
 80066b4:	68a0      	ldr	r0, [r4, #8]
 80066b6:	f000 fd43 	bl	8007140 <xTaskPriorityInherit>
 80066ba:	4605      	mov	r5, r0
						taskEXIT_CRITICAL();
 80066bc:	f7ff fae4 	bl	8005c88 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 80066c0:	9901      	ldr	r1, [sp, #4]
 80066c2:	f104 0024 	add.w	r0, r4, #36	; 0x24
 80066c6:	f000 fc65 	bl	8006f94 <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 80066ca:	4620      	mov	r0, r4
 80066cc:	f7ff fc59 	bl	8005f82 <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 80066d0:	f000 fbb0 	bl	8006e34 <xTaskResumeAll>
 80066d4:	b938      	cbnz	r0, 80066e6 <xQueueSemaphoreTake+0xf6>
					portYIELD_WITHIN_API();
 80066d6:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
 80066da:	f8c8 3000 	str.w	r3, [r8]
 80066de:	f3bf 8f4f 	dsb	sy
 80066e2:	f3bf 8f6f 	isb	sy
 80066e6:	2601      	movs	r6, #1
		taskENTER_CRITICAL();
 80066e8:	f7ff faac 	bl	8005c44 <vPortEnterCritical>
			const UBaseType_t uxSemaphoreCount = pxQueue->uxMessagesWaiting;
 80066ec:	6ba3      	ldr	r3, [r4, #56]	; 0x38
			if( uxSemaphoreCount > ( UBaseType_t ) 0 )
 80066ee:	2b00      	cmp	r3, #0
 80066f0:	d0aa      	beq.n	8006648 <xQueueSemaphoreTake+0x58>
				pxQueue->uxMessagesWaiting = uxSemaphoreCount - ( UBaseType_t ) 1;
 80066f2:	3b01      	subs	r3, #1
 80066f4:	63a3      	str	r3, [r4, #56]	; 0x38
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 80066f6:	6823      	ldr	r3, [r4, #0]
 80066f8:	b913      	cbnz	r3, 8006700 <xQueueSemaphoreTake+0x110>
						pxQueue->u.xSemaphore.xMutexHolder = pvTaskIncrementMutexHeldCount();
 80066fa:	f000 fdf1 	bl	80072e0 <pvTaskIncrementMutexHeldCount>
 80066fe:	60a0      	str	r0, [r4, #8]
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8006700:	6923      	ldr	r3, [r4, #16]
 8006702:	b163      	cbz	r3, 800671e <xQueueSemaphoreTake+0x12e>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8006704:	f104 0010 	add.w	r0, r4, #16
 8006708:	f000 fc7c 	bl	8007004 <xTaskRemoveFromEventList>
 800670c:	b138      	cbz	r0, 800671e <xQueueSemaphoreTake+0x12e>
						queueYIELD_IF_USING_PREEMPTION();
 800670e:	4b18      	ldr	r3, [pc, #96]	; (8006770 <xQueueSemaphoreTake+0x180>)
 8006710:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8006714:	601a      	str	r2, [r3, #0]
 8006716:	f3bf 8f4f 	dsb	sy
 800671a:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 800671e:	f7ff fab3 	bl	8005c88 <vPortExitCritical>
				return pdPASS;
 8006722:	2501      	movs	r5, #1
}
 8006724:	4628      	mov	r0, r5
 8006726:	b004      	add	sp, #16
 8006728:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
				prvUnlockQueue( pxQueue );
 800672c:	4620      	mov	r0, r4
 800672e:	f7ff fc28 	bl	8005f82 <prvUnlockQueue>
				( void ) xTaskResumeAll();
 8006732:	f000 fb7f 	bl	8006e34 <xTaskResumeAll>
 8006736:	e7d6      	b.n	80066e6 <xQueueSemaphoreTake+0xf6>
			prvUnlockQueue( pxQueue );
 8006738:	4620      	mov	r0, r4
 800673a:	f7ff fc22 	bl	8005f82 <prvUnlockQueue>
			( void ) xTaskResumeAll();
 800673e:	f000 fb79 	bl	8006e34 <xTaskResumeAll>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 8006742:	4620      	mov	r0, r4
 8006744:	f7ff fbca 	bl	8005edc <prvIsQueueEmpty>
 8006748:	2800      	cmp	r0, #0
 800674a:	d0cc      	beq.n	80066e6 <xQueueSemaphoreTake+0xf6>
					if( xInheritanceOccurred != pdFALSE )
 800674c:	2d00      	cmp	r5, #0
 800674e:	d0e9      	beq.n	8006724 <xQueueSemaphoreTake+0x134>
						taskENTER_CRITICAL();
 8006750:	f7ff fa78 	bl	8005c44 <vPortEnterCritical>
		if( listCURRENT_LIST_LENGTH( &( pxQueue->xTasksWaitingToReceive ) ) > 0U )
 8006754:	6a61      	ldr	r1, [r4, #36]	; 0x24
 8006756:	b119      	cbz	r1, 8006760 <xQueueSemaphoreTake+0x170>
			uxHighestPriorityOfWaitingTasks = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) listGET_ITEM_VALUE_OF_HEAD_ENTRY( &( pxQueue->xTasksWaitingToReceive ) );
 8006758:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800675a:	6819      	ldr	r1, [r3, #0]
 800675c:	f1c1 0138 	rsb	r1, r1, #56	; 0x38
							vTaskPriorityDisinheritAfterTimeout( pxQueue->u.xSemaphore.xMutexHolder, uxHighestWaitingPriority );
 8006760:	68a0      	ldr	r0, [r4, #8]
 8006762:	f000 fd6f 	bl	8007244 <vTaskPriorityDisinheritAfterTimeout>
				return errQUEUE_EMPTY;
 8006766:	2500      	movs	r5, #0
						taskEXIT_CRITICAL();
 8006768:	f7ff fa8e 	bl	8005c88 <vPortExitCritical>
 800676c:	e7da      	b.n	8006724 <xQueueSemaphoreTake+0x134>
 800676e:	bf00      	nop
 8006770:	e000ed04 	.word	0xe000ed04

08006774 <xQueueReceiveFromISR>:
{
 8006774:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8006778:	4689      	mov	r9, r1
 800677a:	4690      	mov	r8, r2
	configASSERT( pxQueue );
 800677c:	4605      	mov	r5, r0
 800677e:	b940      	cbnz	r0, 8006792 <xQueueReceiveFromISR+0x1e>
 8006780:	f04f 0350 	mov.w	r3, #80	; 0x50
 8006784:	f383 8811 	msr	BASEPRI, r3
 8006788:	f3bf 8f6f 	isb	sy
 800678c:	f3bf 8f4f 	dsb	sy
 8006790:	e7fe      	b.n	8006790 <xQueueReceiveFromISR+0x1c>
	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 8006792:	b951      	cbnz	r1, 80067aa <xQueueReceiveFromISR+0x36>
 8006794:	6c03      	ldr	r3, [r0, #64]	; 0x40
 8006796:	b143      	cbz	r3, 80067aa <xQueueReceiveFromISR+0x36>
 8006798:	f04f 0350 	mov.w	r3, #80	; 0x50
 800679c:	f383 8811 	msr	BASEPRI, r3
 80067a0:	f3bf 8f6f 	isb	sy
 80067a4:	f3bf 8f4f 	dsb	sy
 80067a8:	e7fe      	b.n	80067a8 <xQueueReceiveFromISR+0x34>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 80067aa:	f7ff fb69 	bl	8005e80 <vPortValidateInterruptPriority>
	__asm volatile
 80067ae:	f3ef 8711 	mrs	r7, BASEPRI
 80067b2:	f04f 0350 	mov.w	r3, #80	; 0x50
 80067b6:	f383 8811 	msr	BASEPRI, r3
 80067ba:	f3bf 8f6f 	isb	sy
 80067be:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 80067c2:	6bac      	ldr	r4, [r5, #56]	; 0x38
		if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 80067c4:	b31c      	cbz	r4, 800680e <xQueueReceiveFromISR+0x9a>
			const int8_t cRxLock = pxQueue->cRxLock;
 80067c6:	f895 6044 	ldrb.w	r6, [r5, #68]	; 0x44
			prvCopyDataFromQueue( pxQueue, pvBuffer );
 80067ca:	4649      	mov	r1, r9
			const int8_t cRxLock = pxQueue->cRxLock;
 80067cc:	b276      	sxtb	r6, r6
			prvCopyDataFromQueue( pxQueue, pvBuffer );
 80067ce:	4628      	mov	r0, r5
 80067d0:	f7ff fbc2 	bl	8005f58 <prvCopyDataFromQueue>
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 80067d4:	3c01      	subs	r4, #1
			if( cRxLock == queueUNLOCKED )
 80067d6:	1c73      	adds	r3, r6, #1
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 80067d8:	63ac      	str	r4, [r5, #56]	; 0x38
			if( cRxLock == queueUNLOCKED )
 80067da:	d113      	bne.n	8006804 <xQueueReceiveFromISR+0x90>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 80067dc:	692b      	ldr	r3, [r5, #16]
 80067de:	b90b      	cbnz	r3, 80067e4 <xQueueReceiveFromISR+0x70>
			xReturn = pdPASS;
 80067e0:	2001      	movs	r0, #1
 80067e2:	e00b      	b.n	80067fc <xQueueReceiveFromISR+0x88>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 80067e4:	f105 0010 	add.w	r0, r5, #16
 80067e8:	f000 fc0c 	bl	8007004 <xTaskRemoveFromEventList>
 80067ec:	2800      	cmp	r0, #0
 80067ee:	d0f7      	beq.n	80067e0 <xQueueReceiveFromISR+0x6c>
						if( pxHigherPriorityTaskWoken != NULL )
 80067f0:	f1b8 0f00 	cmp.w	r8, #0
 80067f4:	d0f4      	beq.n	80067e0 <xQueueReceiveFromISR+0x6c>
							*pxHigherPriorityTaskWoken = pdTRUE;
 80067f6:	2001      	movs	r0, #1
 80067f8:	f8c8 0000 	str.w	r0, [r8]
	__asm volatile
 80067fc:	f387 8811 	msr	BASEPRI, r7
}
 8006800:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				pxQueue->cRxLock = ( int8_t ) ( cRxLock + 1 );
 8006804:	3601      	adds	r6, #1
 8006806:	b276      	sxtb	r6, r6
 8006808:	f885 6044 	strb.w	r6, [r5, #68]	; 0x44
 800680c:	e7e8      	b.n	80067e0 <xQueueReceiveFromISR+0x6c>
			xReturn = pdFAIL;
 800680e:	4620      	mov	r0, r4
 8006810:	e7f4      	b.n	80067fc <xQueueReceiveFromISR+0x88>
	...

08006814 <vQueueAddToRegistry>:
/*-----------------------------------------------------------*/

#if ( configQUEUE_REGISTRY_SIZE > 0 )

	void vQueueAddToRegistry( QueueHandle_t xQueue, const char *pcQueueName ) /*lint !e971 Unqualified char types are allowed for strings and single characters only. */
	{
 8006814:	b530      	push	{r4, r5, lr}

		/* See if there is an empty space in the registry.  A NULL name denotes
		a free slot. */
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
		{
			if( xQueueRegistry[ ux ].pcQueueName == NULL )
 8006816:	4a07      	ldr	r2, [pc, #28]	; (8006834 <vQueueAddToRegistry+0x20>)
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 8006818:	2300      	movs	r3, #0
			if( xQueueRegistry[ ux ].pcQueueName == NULL )
 800681a:	f852 5033 	ldr.w	r5, [r2, r3, lsl #3]
 800681e:	eb02 04c3 	add.w	r4, r2, r3, lsl #3
 8006822:	b91d      	cbnz	r5, 800682c <vQueueAddToRegistry+0x18>
			{
				/* Store the information on this queue. */
				xQueueRegistry[ ux ].pcQueueName = pcQueueName;
 8006824:	f842 1033 	str.w	r1, [r2, r3, lsl #3]
				xQueueRegistry[ ux ].xHandle = xQueue;
 8006828:	6060      	str	r0, [r4, #4]
			else
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}
	}
 800682a:	bd30      	pop	{r4, r5, pc}
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800682c:	3301      	adds	r3, #1
 800682e:	2b08      	cmp	r3, #8
 8006830:	d1f3      	bne.n	800681a <vQueueAddToRegistry+0x6>
 8006832:	e7fa      	b.n	800682a <vQueueAddToRegistry+0x16>
 8006834:	2001264c 	.word	0x2001264c

08006838 <vQueueUnregisterQueue>:
/*-----------------------------------------------------------*/

#if ( configQUEUE_REGISTRY_SIZE > 0 )

	void vQueueUnregisterQueue( QueueHandle_t xQueue )
	{
 8006838:	b510      	push	{r4, lr}

		/* See if the handle of the queue being unregistered in actually in the
		registry. */
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
		{
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 800683a:	4a08      	ldr	r2, [pc, #32]	; (800685c <vQueueUnregisterQueue+0x24>)
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800683c:	2300      	movs	r3, #0
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 800683e:	eb02 01c3 	add.w	r1, r2, r3, lsl #3
 8006842:	684c      	ldr	r4, [r1, #4]
 8006844:	4284      	cmp	r4, r0
 8006846:	d104      	bne.n	8006852 <vQueueUnregisterQueue+0x1a>
			{
				/* Set the name to NULL to show that this slot if free again. */
				xQueueRegistry[ ux ].pcQueueName = NULL;
 8006848:	2000      	movs	r0, #0
 800684a:	f842 0033 	str.w	r0, [r2, r3, lsl #3]

				/* Set the handle to NULL to ensure the same queue handle cannot
				appear in the registry twice if it is added, removed, then
				added again. */
				xQueueRegistry[ ux ].xHandle = ( QueueHandle_t ) 0;
 800684e:	6048      	str	r0, [r1, #4]
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}

	} /*lint !e818 xQueue could not be pointer to const because it is a typedef. */
 8006850:	bd10      	pop	{r4, pc}
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 8006852:	3301      	adds	r3, #1
 8006854:	2b08      	cmp	r3, #8
 8006856:	d1f2      	bne.n	800683e <vQueueUnregisterQueue+0x6>
 8006858:	e7fa      	b.n	8006850 <vQueueUnregisterQueue+0x18>
 800685a:	bf00      	nop
 800685c:	2001264c 	.word	0x2001264c

08006860 <vQueueDelete>:
{
 8006860:	b510      	push	{r4, lr}
	configASSERT( pxQueue );
 8006862:	4604      	mov	r4, r0
 8006864:	b940      	cbnz	r0, 8006878 <vQueueDelete+0x18>
	__asm volatile
 8006866:	f04f 0350 	mov.w	r3, #80	; 0x50
 800686a:	f383 8811 	msr	BASEPRI, r3
 800686e:	f3bf 8f6f 	isb	sy
 8006872:	f3bf 8f4f 	dsb	sy
 8006876:	e7fe      	b.n	8006876 <vQueueDelete+0x16>
		vQueueUnregisterQueue( pxQueue );
 8006878:	f7ff ffde 	bl	8006838 <vQueueUnregisterQueue>
		if( pxQueue->ucStaticallyAllocated == ( uint8_t ) pdFALSE )
 800687c:	f894 3046 	ldrb.w	r3, [r4, #70]	; 0x46
 8006880:	b923      	cbnz	r3, 800688c <vQueueDelete+0x2c>
			vPortFree( pxQueue );
 8006882:	4620      	mov	r0, r4
}
 8006884:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
			vPortFree( pxQueue );
 8006888:	f7ff b8f6 	b.w	8005a78 <vPortFree>
}
 800688c:	bd10      	pop	{r4, pc}

0800688e <vQueueWaitForMessageRestricted>:
/*-----------------------------------------------------------*/

#if ( configUSE_TIMERS == 1 )

	void vQueueWaitForMessageRestricted( QueueHandle_t xQueue, TickType_t xTicksToWait, const BaseType_t xWaitIndefinitely )
	{
 800688e:	b570      	push	{r4, r5, r6, lr}
 8006890:	4604      	mov	r4, r0
 8006892:	460d      	mov	r5, r1
 8006894:	4616      	mov	r6, r2
		will not actually cause the task to block, just place it on a blocked
		list.  It will not block until the scheduler is unlocked - at which
		time a yield will be performed.  If an item is added to the queue while
		the queue is locked, and the calling task blocks on the queue, then the
		calling task will be immediately unblocked when the queue is unlocked. */
		prvLockQueue( pxQueue );
 8006896:	f7ff f9d5 	bl	8005c44 <vPortEnterCritical>
 800689a:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800689e:	2bff      	cmp	r3, #255	; 0xff
 80068a0:	bf04      	itt	eq
 80068a2:	2300      	moveq	r3, #0
 80068a4:	f884 3044 	strbeq.w	r3, [r4, #68]	; 0x44
 80068a8:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 80068ac:	2bff      	cmp	r3, #255	; 0xff
 80068ae:	bf04      	itt	eq
 80068b0:	2300      	moveq	r3, #0
 80068b2:	f884 3045 	strbeq.w	r3, [r4, #69]	; 0x45
 80068b6:	f7ff f9e7 	bl	8005c88 <vPortExitCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0U )
 80068ba:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 80068bc:	b92b      	cbnz	r3, 80068ca <vQueueWaitForMessageRestricted+0x3c>
		{
			/* There is nothing in the queue, block for the specified period. */
			vTaskPlaceOnEventListRestricted( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait, xWaitIndefinitely );
 80068be:	4632      	mov	r2, r6
 80068c0:	4629      	mov	r1, r5
 80068c2:	f104 0024 	add.w	r0, r4, #36	; 0x24
 80068c6:	f000 fb7f 	bl	8006fc8 <vTaskPlaceOnEventListRestricted>
		}
		else
		{
			mtCOVERAGE_TEST_MARKER();
		}
		prvUnlockQueue( pxQueue );
 80068ca:	4620      	mov	r0, r4
	}
 80068cc:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
		prvUnlockQueue( pxQueue );
 80068d0:	f7ff bb57 	b.w	8005f82 <prvUnlockQueue>

080068d4 <prvAddNewTaskToReadyList>:
	}
}
/*-----------------------------------------------------------*/

static void prvAddNewTaskToReadyList( TCB_t *pxNewTCB )
{
 80068d4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80068d8:	4604      	mov	r4, r0
	/* Ensure interrupts don't access the task lists while the lists are being
	updated. */
	taskENTER_CRITICAL();
 80068da:	f7ff f9b3 	bl	8005c44 <vPortEnterCritical>
	{
		uxCurrentNumberOfTasks++;
 80068de:	4b2f      	ldr	r3, [pc, #188]	; (800699c <prvAddNewTaskToReadyList+0xc8>)
		if( pxCurrentTCB == NULL )
 80068e0:	4d2f      	ldr	r5, [pc, #188]	; (80069a0 <prvAddNewTaskToReadyList+0xcc>)
		uxCurrentNumberOfTasks++;
 80068e2:	681a      	ldr	r2, [r3, #0]
 80068e4:	4f2f      	ldr	r7, [pc, #188]	; (80069a4 <prvAddNewTaskToReadyList+0xd0>)
 80068e6:	3201      	adds	r2, #1
 80068e8:	601a      	str	r2, [r3, #0]
		if( pxCurrentTCB == NULL )
 80068ea:	682e      	ldr	r6, [r5, #0]
 80068ec:	2e00      	cmp	r6, #0
 80068ee:	d149      	bne.n	8006984 <prvAddNewTaskToReadyList+0xb0>
		{
			/* There are no other tasks, or all the other tasks are in
			the suspended state - make this the current task. */
			pxCurrentTCB = pxNewTCB;
 80068f0:	602c      	str	r4, [r5, #0]

			if( uxCurrentNumberOfTasks == ( UBaseType_t ) 1 )
 80068f2:	681b      	ldr	r3, [r3, #0]
 80068f4:	2b01      	cmp	r3, #1
 80068f6:	d11f      	bne.n	8006938 <prvAddNewTaskToReadyList+0x64>
{
UBaseType_t uxPriority;

	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
	{
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 80068f8:	f04f 0814 	mov.w	r8, #20
 80068fc:	fb08 7006 	mla	r0, r8, r6, r7
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 8006900:	3601      	adds	r6, #1
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 8006902:	f7ff f8f1 	bl	8005ae8 <vListInitialise>
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 8006906:	2e38      	cmp	r6, #56	; 0x38
 8006908:	d1f8      	bne.n	80068fc <prvAddNewTaskToReadyList+0x28>
	}

	vListInitialise( &xDelayedTaskList1 );
 800690a:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 80069d0 <prvAddNewTaskToReadyList+0xfc>
	vListInitialise( &xDelayedTaskList2 );
 800690e:	4e26      	ldr	r6, [pc, #152]	; (80069a8 <prvAddNewTaskToReadyList+0xd4>)
	vListInitialise( &xDelayedTaskList1 );
 8006910:	4640      	mov	r0, r8
 8006912:	f7ff f8e9 	bl	8005ae8 <vListInitialise>
	vListInitialise( &xDelayedTaskList2 );
 8006916:	4630      	mov	r0, r6
 8006918:	f7ff f8e6 	bl	8005ae8 <vListInitialise>
	vListInitialise( &xPendingReadyList );
 800691c:	4823      	ldr	r0, [pc, #140]	; (80069ac <prvAddNewTaskToReadyList+0xd8>)
 800691e:	f7ff f8e3 	bl	8005ae8 <vListInitialise>

	#if ( INCLUDE_vTaskDelete == 1 )
	{
		vListInitialise( &xTasksWaitingTermination );
 8006922:	4823      	ldr	r0, [pc, #140]	; (80069b0 <prvAddNewTaskToReadyList+0xdc>)
 8006924:	f7ff f8e0 	bl	8005ae8 <vListInitialise>
	}
	#endif /* INCLUDE_vTaskDelete */

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		vListInitialise( &xSuspendedTaskList );
 8006928:	4822      	ldr	r0, [pc, #136]	; (80069b4 <prvAddNewTaskToReadyList+0xe0>)
 800692a:	f7ff f8dd 	bl	8005ae8 <vListInitialise>
	}
	#endif /* INCLUDE_vTaskSuspend */

	/* Start with pxDelayedTaskList using list1 and the pxOverflowDelayedTaskList
	using list2. */
	pxDelayedTaskList = &xDelayedTaskList1;
 800692e:	4b22      	ldr	r3, [pc, #136]	; (80069b8 <prvAddNewTaskToReadyList+0xe4>)
 8006930:	f8c3 8000 	str.w	r8, [r3]
	pxOverflowDelayedTaskList = &xDelayedTaskList2;
 8006934:	4b21      	ldr	r3, [pc, #132]	; (80069bc <prvAddNewTaskToReadyList+0xe8>)
 8006936:	601e      	str	r6, [r3, #0]
		uxTaskNumber++;
 8006938:	4a21      	ldr	r2, [pc, #132]	; (80069c0 <prvAddNewTaskToReadyList+0xec>)
 800693a:	6813      	ldr	r3, [r2, #0]
 800693c:	3301      	adds	r3, #1
 800693e:	6013      	str	r3, [r2, #0]
		prvAddTaskToReadyList( pxNewTCB );
 8006940:	4a20      	ldr	r2, [pc, #128]	; (80069c4 <prvAddNewTaskToReadyList+0xf0>)
			pxNewTCB->uxTCBNumber = uxTaskNumber;
 8006942:	6463      	str	r3, [r4, #68]	; 0x44
		prvAddTaskToReadyList( pxNewTCB );
 8006944:	6811      	ldr	r1, [r2, #0]
 8006946:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8006948:	2014      	movs	r0, #20
 800694a:	428b      	cmp	r3, r1
 800694c:	fb00 7003 	mla	r0, r0, r3, r7
 8006950:	f104 0104 	add.w	r1, r4, #4
 8006954:	bf88      	it	hi
 8006956:	6013      	strhi	r3, [r2, #0]
 8006958:	f7ff f8d4 	bl	8005b04 <vListInsertEnd>
	taskEXIT_CRITICAL();
 800695c:	f7ff f994 	bl	8005c88 <vPortExitCritical>
	if( xSchedulerRunning != pdFALSE )
 8006960:	4b19      	ldr	r3, [pc, #100]	; (80069c8 <prvAddNewTaskToReadyList+0xf4>)
 8006962:	681b      	ldr	r3, [r3, #0]
 8006964:	b163      	cbz	r3, 8006980 <prvAddNewTaskToReadyList+0xac>
		if( pxCurrentTCB->uxPriority < pxNewTCB->uxPriority )
 8006966:	682b      	ldr	r3, [r5, #0]
 8006968:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800696a:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800696c:	429a      	cmp	r2, r3
 800696e:	d207      	bcs.n	8006980 <prvAddNewTaskToReadyList+0xac>
			taskYIELD_IF_USING_PREEMPTION();
 8006970:	4b16      	ldr	r3, [pc, #88]	; (80069cc <prvAddNewTaskToReadyList+0xf8>)
 8006972:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8006976:	601a      	str	r2, [r3, #0]
 8006978:	f3bf 8f4f 	dsb	sy
 800697c:	f3bf 8f6f 	isb	sy
}
 8006980:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
			if( xSchedulerRunning == pdFALSE )
 8006984:	4b10      	ldr	r3, [pc, #64]	; (80069c8 <prvAddNewTaskToReadyList+0xf4>)
 8006986:	681b      	ldr	r3, [r3, #0]
 8006988:	2b00      	cmp	r3, #0
 800698a:	d1d5      	bne.n	8006938 <prvAddNewTaskToReadyList+0x64>
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 800698c:	682b      	ldr	r3, [r5, #0]
 800698e:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8006990:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8006992:	429a      	cmp	r2, r3
					pxCurrentTCB = pxNewTCB;
 8006994:	bf98      	it	ls
 8006996:	602c      	strls	r4, [r5, #0]
 8006998:	e7ce      	b.n	8006938 <prvAddNewTaskToReadyList+0x64>
 800699a:	bf00      	nop
 800699c:	20011fb0 	.word	0x20011fb0
 80069a0:	20011b44 	.word	0x20011b44
 80069a4:	20011b50 	.word	0x20011b50
 80069a8:	20011fdc 	.word	0x20011fdc
 80069ac:	20011ff8 	.word	0x20011ff8
 80069b0:	20012024 	.word	0x20012024
 80069b4:	20012010 	.word	0x20012010
 80069b8:	20011b48 	.word	0x20011b48
 80069bc:	20011b4c 	.word	0x20011b4c
 80069c0:	20011fc0 	.word	0x20011fc0
 80069c4:	20011fc4 	.word	0x20011fc4
 80069c8:	2001200c 	.word	0x2001200c
 80069cc:	e000ed04 	.word	0xe000ed04
 80069d0:	20011fc8 	.word	0x20011fc8

080069d4 <prvDeleteTCB>:
/*-----------------------------------------------------------*/

#if ( INCLUDE_vTaskDelete == 1 )

	static void prvDeleteTCB( TCB_t *pxTCB )
	{
 80069d4:	b510      	push	{r4, lr}
		#elif( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 ) /*lint !e731 !e9029 Macro has been consolidated for readability reasons. */
		{
			/* The task could have been allocated statically or dynamically, so
			check what was statically allocated before trying to free the
			memory. */
			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
 80069d6:	f890 305d 	ldrb.w	r3, [r0, #93]	; 0x5d
	{
 80069da:	4604      	mov	r4, r0
			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
 80069dc:	b93b      	cbnz	r3, 80069ee <prvDeleteTCB+0x1a>
			{
				/* Both the stack and TCB were allocated dynamically, so both
				must be freed. */
				vPortFree( pxTCB->pxStack );
 80069de:	6b00      	ldr	r0, [r0, #48]	; 0x30
 80069e0:	f7ff f84a 	bl	8005a78 <vPortFree>
				vPortFree( pxTCB );
 80069e4:	4620      	mov	r0, r4
				configASSERT( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_AND_TCB	);
				mtCOVERAGE_TEST_MARKER();
			}
		}
		#endif /* configSUPPORT_DYNAMIC_ALLOCATION */
	}
 80069e6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
				vPortFree( pxTCB );
 80069ea:	f7ff b845 	b.w	8005a78 <vPortFree>
			else if( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_ONLY )
 80069ee:	2b01      	cmp	r3, #1
 80069f0:	d0f9      	beq.n	80069e6 <prvDeleteTCB+0x12>
				configASSERT( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_AND_TCB	);
 80069f2:	2b02      	cmp	r3, #2
 80069f4:	d008      	beq.n	8006a08 <prvDeleteTCB+0x34>
 80069f6:	f04f 0350 	mov.w	r3, #80	; 0x50
 80069fa:	f383 8811 	msr	BASEPRI, r3
 80069fe:	f3bf 8f6f 	isb	sy
 8006a02:	f3bf 8f4f 	dsb	sy
 8006a06:	e7fe      	b.n	8006a06 <prvDeleteTCB+0x32>
	}
 8006a08:	bd10      	pop	{r4, pc}
	...

08006a0c <prvIdleTask>:
{
 8006a0c:	b580      	push	{r7, lr}
				taskYIELD();
 8006a0e:	f8df 805c 	ldr.w	r8, [pc, #92]	; 8006a6c <prvIdleTask+0x60>
				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8006a12:	4f12      	ldr	r7, [pc, #72]	; (8006a5c <prvIdleTask+0x50>)
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 8006a14:	4c12      	ldr	r4, [pc, #72]	; (8006a60 <prvIdleTask+0x54>)
				--uxCurrentNumberOfTasks;
 8006a16:	4d13      	ldr	r5, [pc, #76]	; (8006a64 <prvIdleTask+0x58>)
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 8006a18:	6823      	ldr	r3, [r4, #0]
 8006a1a:	b963      	cbnz	r3, 8006a36 <prvIdleTask+0x2a>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > ( UBaseType_t ) 1 )
 8006a1c:	4b12      	ldr	r3, [pc, #72]	; (8006a68 <prvIdleTask+0x5c>)
 8006a1e:	681b      	ldr	r3, [r3, #0]
 8006a20:	2b01      	cmp	r3, #1
 8006a22:	d9f8      	bls.n	8006a16 <prvIdleTask+0xa>
				taskYIELD();
 8006a24:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
 8006a28:	f8c8 3000 	str.w	r3, [r8]
 8006a2c:	f3bf 8f4f 	dsb	sy
 8006a30:	f3bf 8f6f 	isb	sy
 8006a34:	e7ee      	b.n	8006a14 <prvIdleTask+0x8>
			taskENTER_CRITICAL();
 8006a36:	f7ff f905 	bl	8005c44 <vPortEnterCritical>
				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8006a3a:	68fb      	ldr	r3, [r7, #12]
 8006a3c:	68de      	ldr	r6, [r3, #12]
				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 8006a3e:	1d30      	adds	r0, r6, #4
 8006a40:	f7ff f883 	bl	8005b4a <uxListRemove>
				--uxCurrentNumberOfTasks;
 8006a44:	682b      	ldr	r3, [r5, #0]
 8006a46:	3b01      	subs	r3, #1
 8006a48:	602b      	str	r3, [r5, #0]
				--uxDeletedTasksWaitingCleanUp;
 8006a4a:	6823      	ldr	r3, [r4, #0]
 8006a4c:	3b01      	subs	r3, #1
 8006a4e:	6023      	str	r3, [r4, #0]
			taskEXIT_CRITICAL();
 8006a50:	f7ff f91a 	bl	8005c88 <vPortExitCritical>
			prvDeleteTCB( pxTCB );
 8006a54:	4630      	mov	r0, r6
 8006a56:	f7ff ffbd 	bl	80069d4 <prvDeleteTCB>
 8006a5a:	e7dd      	b.n	8006a18 <prvIdleTask+0xc>
 8006a5c:	20012024 	.word	0x20012024
 8006a60:	20011fb4 	.word	0x20011fb4
 8006a64:	20011fb0 	.word	0x20011fb0
 8006a68:	20011b50 	.word	0x20011b50
 8006a6c:	e000ed04 	.word	0xe000ed04

08006a70 <prvResetNextTaskUnblockTime>:

static void prvResetNextTaskUnblockTime( void )
{
TCB_t *pxTCB;

	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 8006a70:	4a06      	ldr	r2, [pc, #24]	; (8006a8c <prvResetNextTaskUnblockTime+0x1c>)
 8006a72:	6813      	ldr	r3, [r2, #0]
 8006a74:	6819      	ldr	r1, [r3, #0]
 8006a76:	4b06      	ldr	r3, [pc, #24]	; (8006a90 <prvResetNextTaskUnblockTime+0x20>)
 8006a78:	b919      	cbnz	r1, 8006a82 <prvResetNextTaskUnblockTime+0x12>
	{
		/* The new current delayed list is empty.  Set xNextTaskUnblockTime to
		the maximum possible value so it is	extremely unlikely that the
		if( xTickCount >= xNextTaskUnblockTime ) test will pass until
		there is an item in the delayed list. */
		xNextTaskUnblockTime = portMAX_DELAY;
 8006a7a:	f04f 32ff 	mov.w	r2, #4294967295
		/* The new current delayed list is not empty, get the value of
		the item at the head of the delayed list.  This is the time at
		which the task at the head of the delayed list should be removed
		from the Blocked state. */
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 8006a7e:	601a      	str	r2, [r3, #0]
	}
}
 8006a80:	4770      	bx	lr
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8006a82:	6812      	ldr	r2, [r2, #0]
 8006a84:	68d2      	ldr	r2, [r2, #12]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 8006a86:	68d2      	ldr	r2, [r2, #12]
 8006a88:	6852      	ldr	r2, [r2, #4]
 8006a8a:	e7f8      	b.n	8006a7e <prvResetNextTaskUnblockTime+0xe>
 8006a8c:	20011b48 	.word	0x20011b48
 8006a90:	20011ff0 	.word	0x20011ff0

08006a94 <prvInitialiseNewTask.isra.2>:
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 8006a94:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8006a98:	e9dd 6409 	ldrd	r6, r4, [sp, #36]	; 0x24
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 8006a9c:	ea4f 0982 	mov.w	r9, r2, lsl #2
 8006aa0:	464a      	mov	r2, r9
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 8006aa2:	4607      	mov	r7, r0
 8006aa4:	460d      	mov	r5, r1
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 8006aa6:	6b20      	ldr	r0, [r4, #48]	; 0x30
 8006aa8:	21a5      	movs	r1, #165	; 0xa5
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 8006aaa:	4698      	mov	r8, r3
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 8006aac:	f011 fadf 	bl	801806e <memset>
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
 8006ab0:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8006ab2:	f1a9 0904 	sub.w	r9, r9, #4
 8006ab6:	4499      	add	r9, r3
		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTER_SIZE_TYPE ) portBYTE_ALIGNMENT_MASK ) ) ); /*lint !e923 !e9033 !e9078 MISRA exception.  Avoiding casts between pointers and integers is not practical.  Size differences accounted for using portPOINTER_SIZE_TYPE type.  Checked by assert(). */
 8006ab8:	f029 0907 	bic.w	r9, r9, #7
	if( pcName != NULL )
 8006abc:	b3a5      	cbz	r5, 8006b28 <prvInitialiseNewTask.isra.2+0x94>
 8006abe:	1e6b      	subs	r3, r5, #1
 8006ac0:	f104 0234 	add.w	r2, r4, #52	; 0x34
 8006ac4:	350f      	adds	r5, #15
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 8006ac6:	f813 1f01 	ldrb.w	r1, [r3, #1]!
 8006aca:	f802 1b01 	strb.w	r1, [r2], #1
			if( pcName[ x ] == ( char ) 0x00 )
 8006ace:	7819      	ldrb	r1, [r3, #0]
 8006ad0:	b109      	cbz	r1, 8006ad6 <prvInitialiseNewTask.isra.2+0x42>
		for( x = ( UBaseType_t ) 0; x < ( UBaseType_t ) configMAX_TASK_NAME_LEN; x++ )
 8006ad2:	42ab      	cmp	r3, r5
 8006ad4:	d1f7      	bne.n	8006ac6 <prvInitialiseNewTask.isra.2+0x32>
		pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
 8006ad6:	2300      	movs	r3, #0
 8006ad8:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8006adc:	9d08      	ldr	r5, [sp, #32]
 8006ade:	2d37      	cmp	r5, #55	; 0x37
 8006ae0:	bf28      	it	cs
 8006ae2:	2537      	movcs	r5, #55	; 0x37
		pxNewTCB->uxMutexesHeld = 0;
 8006ae4:	f04f 0a00 	mov.w	sl, #0
	pxNewTCB->uxPriority = uxPriority;
 8006ae8:	62e5      	str	r5, [r4, #44]	; 0x2c
		pxNewTCB->uxBasePriority = uxPriority;
 8006aea:	64e5      	str	r5, [r4, #76]	; 0x4c
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 8006aec:	1d20      	adds	r0, r4, #4
		pxNewTCB->uxMutexesHeld = 0;
 8006aee:	f8c4 a050 	str.w	sl, [r4, #80]	; 0x50
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 8006af2:	f7ff f804 	bl	8005afe <vListInitialiseItem>
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8006af6:	f1c5 0538 	rsb	r5, r5, #56	; 0x38
	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
 8006afa:	f104 0018 	add.w	r0, r4, #24
 8006afe:	f7fe fffe 	bl	8005afe <vListInitialiseItem>
		pxNewTCB->ulNotifiedValue = 0;
 8006b02:	f8c4 a058 	str.w	sl, [r4, #88]	; 0x58
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
 8006b06:	6124      	str	r4, [r4, #16]
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8006b08:	61a5      	str	r5, [r4, #24]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
 8006b0a:	6264      	str	r4, [r4, #36]	; 0x24
		pxNewTCB->pxTaskTag = NULL;
 8006b0c:	f8c4 a054 	str.w	sl, [r4, #84]	; 0x54
		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
 8006b10:	f884 a05c 	strb.w	sl, [r4, #92]	; 0x5c
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
 8006b14:	4642      	mov	r2, r8
 8006b16:	4639      	mov	r1, r7
 8006b18:	4648      	mov	r0, r9
 8006b1a:	f7ff f865 	bl	8005be8 <pxPortInitialiseStack>
 8006b1e:	6020      	str	r0, [r4, #0]
	if( pxCreatedTask != NULL )
 8006b20:	b106      	cbz	r6, 8006b24 <prvInitialiseNewTask.isra.2+0x90>
		*pxCreatedTask = ( TaskHandle_t ) pxNewTCB;
 8006b22:	6034      	str	r4, [r6, #0]
}
 8006b24:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
		pxNewTCB->pcTaskName[ 0 ] = 0x00;
 8006b28:	f884 5034 	strb.w	r5, [r4, #52]	; 0x34
 8006b2c:	e7d6      	b.n	8006adc <prvInitialiseNewTask.isra.2+0x48>
	...

08006b30 <prvAddCurrentTaskToDelayedList>:
	}
#endif
/*-----------------------------------------------------------*/

static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait, const BaseType_t xCanBlockIndefinitely )
{
 8006b30:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
TickType_t xTimeToWake;
const TickType_t xConstTickCount = xTickCount;
 8006b32:	4b16      	ldr	r3, [pc, #88]	; (8006b8c <prvAddCurrentTaskToDelayedList+0x5c>)
	}
	#endif

	/* Remove the task from the ready list before adding it to the blocked list
	as the same list item is used for both lists. */
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8006b34:	4e16      	ldr	r6, [pc, #88]	; (8006b90 <prvAddCurrentTaskToDelayedList+0x60>)
const TickType_t xConstTickCount = xTickCount;
 8006b36:	681c      	ldr	r4, [r3, #0]
{
 8006b38:	4605      	mov	r5, r0
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8006b3a:	6830      	ldr	r0, [r6, #0]
 8006b3c:	3004      	adds	r0, #4
{
 8006b3e:	460f      	mov	r7, r1
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8006b40:	f7ff f803 	bl	8005b4a <uxListRemove>
		mtCOVERAGE_TEST_MARKER();
	}

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		if( ( xTicksToWait == portMAX_DELAY ) && ( xCanBlockIndefinitely != pdFALSE ) )
 8006b44:	1c6b      	adds	r3, r5, #1
 8006b46:	4633      	mov	r3, r6
 8006b48:	d107      	bne.n	8006b5a <prvAddCurrentTaskToDelayedList+0x2a>
 8006b4a:	b137      	cbz	r7, 8006b5a <prvAddCurrentTaskToDelayedList+0x2a>
		{
			/* Add the task to the suspended task list instead of a delayed task
			list to ensure it is not woken by a timing event.  It will block
			indefinitely. */
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8006b4c:	6831      	ldr	r1, [r6, #0]
 8006b4e:	4811      	ldr	r0, [pc, #68]	; (8006b94 <prvAddCurrentTaskToDelayedList+0x64>)
 8006b50:	3104      	adds	r1, #4

		/* Avoid compiler warning when INCLUDE_vTaskSuspend is not 1. */
		( void ) xCanBlockIndefinitely;
	}
	#endif /* INCLUDE_vTaskSuspend */
}
 8006b52:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8006b56:	f7fe bfd5 	b.w	8005b04 <vListInsertEnd>
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
 8006b5a:	681a      	ldr	r2, [r3, #0]
 8006b5c:	1964      	adds	r4, r4, r5
 8006b5e:	6054      	str	r4, [r2, #4]
			if( xTimeToWake < xConstTickCount )
 8006b60:	d307      	bcc.n	8006b72 <prvAddCurrentTaskToDelayedList+0x42>
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8006b62:	4a0d      	ldr	r2, [pc, #52]	; (8006b98 <prvAddCurrentTaskToDelayedList+0x68>)
 8006b64:	6810      	ldr	r0, [r2, #0]
 8006b66:	6819      	ldr	r1, [r3, #0]
}
 8006b68:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8006b6c:	3104      	adds	r1, #4
 8006b6e:	f7fe bfd5 	b.w	8005b1c <vListInsert>
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8006b72:	4a0a      	ldr	r2, [pc, #40]	; (8006b9c <prvAddCurrentTaskToDelayedList+0x6c>)
 8006b74:	6810      	ldr	r0, [r2, #0]
 8006b76:	6819      	ldr	r1, [r3, #0]
 8006b78:	3104      	adds	r1, #4
 8006b7a:	f7fe ffcf 	bl	8005b1c <vListInsert>
				if( xTimeToWake < xNextTaskUnblockTime )
 8006b7e:	4b08      	ldr	r3, [pc, #32]	; (8006ba0 <prvAddCurrentTaskToDelayedList+0x70>)
 8006b80:	681a      	ldr	r2, [r3, #0]
 8006b82:	42a2      	cmp	r2, r4
					xNextTaskUnblockTime = xTimeToWake;
 8006b84:	bf88      	it	hi
 8006b86:	601c      	strhi	r4, [r3, #0]
}
 8006b88:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8006b8a:	bf00      	nop
 8006b8c:	20012038 	.word	0x20012038
 8006b90:	20011b44 	.word	0x20011b44
 8006b94:	20012010 	.word	0x20012010
 8006b98:	20011b4c 	.word	0x20011b4c
 8006b9c:	20011b48 	.word	0x20011b48
 8006ba0:	20011ff0 	.word	0x20011ff0

08006ba4 <xTaskCreateStatic>:
	{
 8006ba4:	b570      	push	{r4, r5, r6, lr}
 8006ba6:	b086      	sub	sp, #24
 8006ba8:	e9dd 540b 	ldrd	r5, r4, [sp, #44]	; 0x2c
		configASSERT( puxStackBuffer != NULL );
 8006bac:	b945      	cbnz	r5, 8006bc0 <xTaskCreateStatic+0x1c>
 8006bae:	f04f 0350 	mov.w	r3, #80	; 0x50
 8006bb2:	f383 8811 	msr	BASEPRI, r3
 8006bb6:	f3bf 8f6f 	isb	sy
 8006bba:	f3bf 8f4f 	dsb	sy
 8006bbe:	e7fe      	b.n	8006bbe <xTaskCreateStatic+0x1a>
		configASSERT( pxTaskBuffer != NULL );
 8006bc0:	b944      	cbnz	r4, 8006bd4 <xTaskCreateStatic+0x30>
 8006bc2:	f04f 0350 	mov.w	r3, #80	; 0x50
 8006bc6:	f383 8811 	msr	BASEPRI, r3
 8006bca:	f3bf 8f6f 	isb	sy
 8006bce:	f3bf 8f4f 	dsb	sy
 8006bd2:	e7fe      	b.n	8006bd2 <xTaskCreateStatic+0x2e>
			volatile size_t xSize = sizeof( StaticTask_t );
 8006bd4:	2660      	movs	r6, #96	; 0x60
 8006bd6:	9605      	str	r6, [sp, #20]
			configASSERT( xSize == sizeof( TCB_t ) );
 8006bd8:	9e05      	ldr	r6, [sp, #20]
 8006bda:	2e60      	cmp	r6, #96	; 0x60
 8006bdc:	d008      	beq.n	8006bf0 <xTaskCreateStatic+0x4c>
 8006bde:	f04f 0350 	mov.w	r3, #80	; 0x50
 8006be2:	f383 8811 	msr	BASEPRI, r3
 8006be6:	f3bf 8f6f 	isb	sy
 8006bea:	f3bf 8f4f 	dsb	sy
 8006bee:	e7fe      	b.n	8006bee <xTaskCreateStatic+0x4a>
			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
 8006bf0:	6325      	str	r5, [r4, #48]	; 0x30
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 8006bf2:	2502      	movs	r5, #2
 8006bf4:	f884 505d 	strb.w	r5, [r4, #93]	; 0x5d
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 8006bf8:	ad04      	add	r5, sp, #16
 8006bfa:	9501      	str	r5, [sp, #4]
 8006bfc:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 8006bfe:	9402      	str	r4, [sp, #8]
 8006c00:	9500      	str	r5, [sp, #0]
			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
 8006c02:	9e05      	ldr	r6, [sp, #20]
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 8006c04:	f7ff ff46 	bl	8006a94 <prvInitialiseNewTask.isra.2>
			prvAddNewTaskToReadyList( pxNewTCB );
 8006c08:	4620      	mov	r0, r4
 8006c0a:	f7ff fe63 	bl	80068d4 <prvAddNewTaskToReadyList>
	}
 8006c0e:	9804      	ldr	r0, [sp, #16]
 8006c10:	b006      	add	sp, #24
 8006c12:	bd70      	pop	{r4, r5, r6, pc}

08006c14 <xTaskCreate>:
	{
 8006c14:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8006c18:	4607      	mov	r7, r0
 8006c1a:	b085      	sub	sp, #20
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 8006c1c:	0090      	lsls	r0, r2, #2
	{
 8006c1e:	4688      	mov	r8, r1
 8006c20:	4616      	mov	r6, r2
 8006c22:	4699      	mov	r9, r3
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 8006c24:	f7fe fe9c 	bl	8005960 <pvPortMalloc>
			if( pxStack != NULL )
 8006c28:	4605      	mov	r5, r0
 8006c2a:	b1e8      	cbz	r0, 8006c68 <xTaskCreate+0x54>
				pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) ); /*lint !e9087 !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack, and the first member of TCB_t is always a pointer to the task's stack. */
 8006c2c:	2060      	movs	r0, #96	; 0x60
 8006c2e:	f7fe fe97 	bl	8005960 <pvPortMalloc>
				if( pxNewTCB != NULL )
 8006c32:	4604      	mov	r4, r0
 8006c34:	b1a8      	cbz	r0, 8006c62 <xTaskCreate+0x4e>
				pxNewTCB->ucStaticallyAllocated = tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB;
 8006c36:	2300      	movs	r3, #0
 8006c38:	f880 305d 	strb.w	r3, [r0, #93]	; 0x5d
			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
 8006c3c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
					pxNewTCB->pxStack = pxStack;
 8006c3e:	6305      	str	r5, [r0, #48]	; 0x30
			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
 8006c40:	9301      	str	r3, [sp, #4]
 8006c42:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8006c44:	9002      	str	r0, [sp, #8]
 8006c46:	9300      	str	r3, [sp, #0]
 8006c48:	4632      	mov	r2, r6
 8006c4a:	464b      	mov	r3, r9
 8006c4c:	4641      	mov	r1, r8
 8006c4e:	4638      	mov	r0, r7
 8006c50:	f7ff ff20 	bl	8006a94 <prvInitialiseNewTask.isra.2>
			prvAddNewTaskToReadyList( pxNewTCB );
 8006c54:	4620      	mov	r0, r4
 8006c56:	f7ff fe3d 	bl	80068d4 <prvAddNewTaskToReadyList>
			xReturn = pdPASS;
 8006c5a:	2001      	movs	r0, #1
	}
 8006c5c:	b005      	add	sp, #20
 8006c5e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
					vPortFree( pxStack );
 8006c62:	4628      	mov	r0, r5
 8006c64:	f7fe ff08 	bl	8005a78 <vPortFree>
			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 8006c68:	f04f 30ff 	mov.w	r0, #4294967295
		return xReturn;
 8006c6c:	e7f6      	b.n	8006c5c <xTaskCreate+0x48>
	...

08006c70 <vTaskStartScheduler>:
{
 8006c70:	b510      	push	{r4, lr}
 8006c72:	b088      	sub	sp, #32
		StaticTask_t *pxIdleTaskTCBBuffer = NULL;
 8006c74:	2400      	movs	r4, #0
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 8006c76:	aa07      	add	r2, sp, #28
 8006c78:	a906      	add	r1, sp, #24
 8006c7a:	a805      	add	r0, sp, #20
		StackType_t *pxIdleTaskStackBuffer = NULL;
 8006c7c:	e9cd 4405 	strd	r4, r4, [sp, #20]
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 8006c80:	f7fe fe32 	bl	80058e8 <vApplicationGetIdleTaskMemory>
		xIdleTaskHandle = xTaskCreateStatic(	prvIdleTask,
 8006c84:	9b05      	ldr	r3, [sp, #20]
 8006c86:	9302      	str	r3, [sp, #8]
 8006c88:	9b06      	ldr	r3, [sp, #24]
 8006c8a:	9a07      	ldr	r2, [sp, #28]
 8006c8c:	4915      	ldr	r1, [pc, #84]	; (8006ce4 <vTaskStartScheduler+0x74>)
 8006c8e:	4816      	ldr	r0, [pc, #88]	; (8006ce8 <vTaskStartScheduler+0x78>)
 8006c90:	e9cd 4300 	strd	r4, r3, [sp]
 8006c94:	4623      	mov	r3, r4
 8006c96:	f7ff ff85 	bl	8006ba4 <xTaskCreateStatic>
		if( xIdleTaskHandle != NULL )
 8006c9a:	b1a8      	cbz	r0, 8006cc8 <vTaskStartScheduler+0x58>
			xReturn = xTimerCreateTimerTask();
 8006c9c:	f000 fb7e 	bl	800739c <xTimerCreateTimerTask>
	if( xReturn == pdPASS )
 8006ca0:	2801      	cmp	r0, #1
 8006ca2:	d113      	bne.n	8006ccc <vTaskStartScheduler+0x5c>
 8006ca4:	f04f 0350 	mov.w	r3, #80	; 0x50
 8006ca8:	f383 8811 	msr	BASEPRI, r3
 8006cac:	f3bf 8f6f 	isb	sy
 8006cb0:	f3bf 8f4f 	dsb	sy
		xNextTaskUnblockTime = portMAX_DELAY;
 8006cb4:	4b0d      	ldr	r3, [pc, #52]	; (8006cec <vTaskStartScheduler+0x7c>)
 8006cb6:	f04f 32ff 	mov.w	r2, #4294967295
 8006cba:	601a      	str	r2, [r3, #0]
		xSchedulerRunning = pdTRUE;
 8006cbc:	4b0c      	ldr	r3, [pc, #48]	; (8006cf0 <vTaskStartScheduler+0x80>)
 8006cbe:	6018      	str	r0, [r3, #0]
		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
 8006cc0:	4b0c      	ldr	r3, [pc, #48]	; (8006cf4 <vTaskStartScheduler+0x84>)
 8006cc2:	601c      	str	r4, [r3, #0]
		if( xPortStartScheduler() != pdFALSE )
 8006cc4:	f7ff f856 	bl	8005d74 <xPortStartScheduler>
}
 8006cc8:	b008      	add	sp, #32
 8006cca:	bd10      	pop	{r4, pc}
		configASSERT( xReturn != errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY );
 8006ccc:	3001      	adds	r0, #1
 8006cce:	d1fb      	bne.n	8006cc8 <vTaskStartScheduler+0x58>
 8006cd0:	f04f 0350 	mov.w	r3, #80	; 0x50
 8006cd4:	f383 8811 	msr	BASEPRI, r3
 8006cd8:	f3bf 8f6f 	isb	sy
 8006cdc:	f3bf 8f4f 	dsb	sy
 8006ce0:	e7fe      	b.n	8006ce0 <vTaskStartScheduler+0x70>
 8006ce2:	bf00      	nop
 8006ce4:	08019d94 	.word	0x08019d94
 8006ce8:	08006a0d 	.word	0x08006a0d
 8006cec:	20011ff0 	.word	0x20011ff0
 8006cf0:	2001200c 	.word	0x2001200c
 8006cf4:	20012038 	.word	0x20012038

08006cf8 <vTaskSuspendAll>:
	++uxSchedulerSuspended;
 8006cf8:	4a02      	ldr	r2, [pc, #8]	; (8006d04 <vTaskSuspendAll+0xc>)
 8006cfa:	6813      	ldr	r3, [r2, #0]
 8006cfc:	3301      	adds	r3, #1
 8006cfe:	6013      	str	r3, [r2, #0]
}
 8006d00:	4770      	bx	lr
 8006d02:	bf00      	nop
 8006d04:	20011fbc 	.word	0x20011fbc

08006d08 <xTaskGetTickCount>:
		xTicks = xTickCount;
 8006d08:	4b01      	ldr	r3, [pc, #4]	; (8006d10 <xTaskGetTickCount+0x8>)
 8006d0a:	6818      	ldr	r0, [r3, #0]
}
 8006d0c:	4770      	bx	lr
 8006d0e:	bf00      	nop
 8006d10:	20012038 	.word	0x20012038

08006d14 <xTaskIncrementTick>:
{
 8006d14:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 8006d18:	4b3b      	ldr	r3, [pc, #236]	; (8006e08 <xTaskIncrementTick+0xf4>)
 8006d1a:	681b      	ldr	r3, [r3, #0]
 8006d1c:	2b00      	cmp	r3, #0
 8006d1e:	d16c      	bne.n	8006dfa <xTaskIncrementTick+0xe6>
		const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
 8006d20:	4b3a      	ldr	r3, [pc, #232]	; (8006e0c <xTaskIncrementTick+0xf8>)
 8006d22:	681c      	ldr	r4, [r3, #0]
 8006d24:	3401      	adds	r4, #1
		xTickCount = xConstTickCount;
 8006d26:	601c      	str	r4, [r3, #0]
		if( xConstTickCount == ( TickType_t ) 0U ) /*lint !e774 'if' does not always evaluate to false as it is looking for an overflow. */
 8006d28:	b9bc      	cbnz	r4, 8006d5a <xTaskIncrementTick+0x46>
			taskSWITCH_DELAYED_LISTS();
 8006d2a:	4b39      	ldr	r3, [pc, #228]	; (8006e10 <xTaskIncrementTick+0xfc>)
 8006d2c:	681a      	ldr	r2, [r3, #0]
 8006d2e:	6812      	ldr	r2, [r2, #0]
 8006d30:	b142      	cbz	r2, 8006d44 <xTaskIncrementTick+0x30>
 8006d32:	f04f 0350 	mov.w	r3, #80	; 0x50
 8006d36:	f383 8811 	msr	BASEPRI, r3
 8006d3a:	f3bf 8f6f 	isb	sy
 8006d3e:	f3bf 8f4f 	dsb	sy
 8006d42:	e7fe      	b.n	8006d42 <xTaskIncrementTick+0x2e>
 8006d44:	4a33      	ldr	r2, [pc, #204]	; (8006e14 <xTaskIncrementTick+0x100>)
 8006d46:	6819      	ldr	r1, [r3, #0]
 8006d48:	6810      	ldr	r0, [r2, #0]
 8006d4a:	6018      	str	r0, [r3, #0]
 8006d4c:	6011      	str	r1, [r2, #0]
 8006d4e:	4a32      	ldr	r2, [pc, #200]	; (8006e18 <xTaskIncrementTick+0x104>)
 8006d50:	6813      	ldr	r3, [r2, #0]
 8006d52:	3301      	adds	r3, #1
 8006d54:	6013      	str	r3, [r2, #0]
 8006d56:	f7ff fe8b 	bl	8006a70 <prvResetNextTaskUnblockTime>
		if( xConstTickCount >= xNextTaskUnblockTime )
 8006d5a:	4d30      	ldr	r5, [pc, #192]	; (8006e1c <xTaskIncrementTick+0x108>)
 8006d5c:	4f30      	ldr	r7, [pc, #192]	; (8006e20 <xTaskIncrementTick+0x10c>)
 8006d5e:	682b      	ldr	r3, [r5, #0]
 8006d60:	42a3      	cmp	r3, r4
BaseType_t xSwitchRequired = pdFALSE;
 8006d62:	f04f 0b00 	mov.w	fp, #0
		if( xConstTickCount >= xNextTaskUnblockTime )
 8006d66:	d911      	bls.n	8006d8c <xTaskIncrementTick+0x78>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_t ) 1 )
 8006d68:	683a      	ldr	r2, [r7, #0]
 8006d6a:	4b2e      	ldr	r3, [pc, #184]	; (8006e24 <xTaskIncrementTick+0x110>)
 8006d6c:	6ad1      	ldr	r1, [r2, #44]	; 0x2c
 8006d6e:	2214      	movs	r2, #20
 8006d70:	434a      	muls	r2, r1
 8006d72:	589a      	ldr	r2, [r3, r2]
				xSwitchRequired = pdTRUE;
 8006d74:	2a02      	cmp	r2, #2
 8006d76:	bf28      	it	cs
 8006d78:	f04f 0b01 	movcs.w	fp, #1
		if( xYieldPending != pdFALSE )
 8006d7c:	4a2a      	ldr	r2, [pc, #168]	; (8006e28 <xTaskIncrementTick+0x114>)
 8006d7e:	6812      	ldr	r2, [r2, #0]
			xSwitchRequired = pdTRUE;
 8006d80:	2a00      	cmp	r2, #0
}
 8006d82:	bf0c      	ite	eq
 8006d84:	4658      	moveq	r0, fp
 8006d86:	2001      	movne	r0, #1
 8006d88:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 8006d8c:	f8df 9080 	ldr.w	r9, [pc, #128]	; 8006e10 <xTaskIncrementTick+0xfc>
					prvAddTaskToReadyList( pxTCB );
 8006d90:	f8df a09c 	ldr.w	sl, [pc, #156]	; 8006e30 <xTaskIncrementTick+0x11c>
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 8006d94:	f8d9 2000 	ldr.w	r2, [r9]
 8006d98:	6812      	ldr	r2, [r2, #0]
 8006d9a:	b91a      	cbnz	r2, 8006da4 <xTaskIncrementTick+0x90>
					xNextTaskUnblockTime = portMAX_DELAY; /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8006d9c:	f04f 32ff 	mov.w	r2, #4294967295
 8006da0:	602a      	str	r2, [r5, #0]
					break;
 8006da2:	e7e1      	b.n	8006d68 <xTaskIncrementTick+0x54>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8006da4:	f8d9 2000 	ldr.w	r2, [r9]
 8006da8:	68d2      	ldr	r2, [r2, #12]
 8006daa:	68d6      	ldr	r6, [r2, #12]
					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
 8006dac:	6871      	ldr	r1, [r6, #4]
					if( xConstTickCount < xItemValue )
 8006dae:	428c      	cmp	r4, r1
 8006db0:	d201      	bcs.n	8006db6 <xTaskIncrementTick+0xa2>
						xNextTaskUnblockTime = xItemValue;
 8006db2:	6029      	str	r1, [r5, #0]
						break; /*lint !e9011 Code structure here is deedmed easier to understand with multiple breaks. */
 8006db4:	e7d8      	b.n	8006d68 <xTaskIncrementTick+0x54>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 8006db6:	f106 0804 	add.w	r8, r6, #4
 8006dba:	4640      	mov	r0, r8
 8006dbc:	f7fe fec5 	bl	8005b4a <uxListRemove>
					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
 8006dc0:	6ab1      	ldr	r1, [r6, #40]	; 0x28
 8006dc2:	b119      	cbz	r1, 8006dcc <xTaskIncrementTick+0xb8>
						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 8006dc4:	f106 0018 	add.w	r0, r6, #24
 8006dc8:	f7fe febf 	bl	8005b4a <uxListRemove>
					prvAddTaskToReadyList( pxTCB );
 8006dcc:	6af0      	ldr	r0, [r6, #44]	; 0x2c
 8006dce:	f8da 1000 	ldr.w	r1, [sl]
 8006dd2:	4b14      	ldr	r3, [pc, #80]	; (8006e24 <xTaskIncrementTick+0x110>)
 8006dd4:	4288      	cmp	r0, r1
 8006dd6:	f04f 0214 	mov.w	r2, #20
 8006dda:	bf88      	it	hi
 8006ddc:	f8ca 0000 	strhi.w	r0, [sl]
 8006de0:	4641      	mov	r1, r8
 8006de2:	fb02 3000 	mla	r0, r2, r0, r3
 8006de6:	f7fe fe8d 	bl	8005b04 <vListInsertEnd>
						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 8006dea:	6838      	ldr	r0, [r7, #0]
 8006dec:	6af1      	ldr	r1, [r6, #44]	; 0x2c
 8006dee:	6ac2      	ldr	r2, [r0, #44]	; 0x2c
							xSwitchRequired = pdTRUE;
 8006df0:	4291      	cmp	r1, r2
 8006df2:	bf28      	it	cs
 8006df4:	f04f 0b01 	movcs.w	fp, #1
 8006df8:	e7cc      	b.n	8006d94 <xTaskIncrementTick+0x80>
		++uxPendedTicks;
 8006dfa:	4a0c      	ldr	r2, [pc, #48]	; (8006e2c <xTaskIncrementTick+0x118>)
 8006dfc:	6813      	ldr	r3, [r2, #0]
 8006dfe:	3301      	adds	r3, #1
 8006e00:	6013      	str	r3, [r2, #0]
BaseType_t xSwitchRequired = pdFALSE;
 8006e02:	f04f 0b00 	mov.w	fp, #0
 8006e06:	e7b9      	b.n	8006d7c <xTaskIncrementTick+0x68>
 8006e08:	20011fbc 	.word	0x20011fbc
 8006e0c:	20012038 	.word	0x20012038
 8006e10:	20011b48 	.word	0x20011b48
 8006e14:	20011b4c 	.word	0x20011b4c
 8006e18:	20011ff4 	.word	0x20011ff4
 8006e1c:	20011ff0 	.word	0x20011ff0
 8006e20:	20011b44 	.word	0x20011b44
 8006e24:	20011b50 	.word	0x20011b50
 8006e28:	2001203c 	.word	0x2001203c
 8006e2c:	20011fb8 	.word	0x20011fb8
 8006e30:	20011fc4 	.word	0x20011fc4

08006e34 <xTaskResumeAll>:
{
 8006e34:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
	configASSERT( uxSchedulerSuspended );
 8006e38:	4c2f      	ldr	r4, [pc, #188]	; (8006ef8 <xTaskResumeAll+0xc4>)
 8006e3a:	6823      	ldr	r3, [r4, #0]
 8006e3c:	b943      	cbnz	r3, 8006e50 <xTaskResumeAll+0x1c>
 8006e3e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8006e42:	f383 8811 	msr	BASEPRI, r3
 8006e46:	f3bf 8f6f 	isb	sy
 8006e4a:	f3bf 8f4f 	dsb	sy
 8006e4e:	e7fe      	b.n	8006e4e <xTaskResumeAll+0x1a>
	taskENTER_CRITICAL();
 8006e50:	f7fe fef8 	bl	8005c44 <vPortEnterCritical>
		--uxSchedulerSuspended;
 8006e54:	6823      	ldr	r3, [r4, #0]
 8006e56:	3b01      	subs	r3, #1
 8006e58:	6023      	str	r3, [r4, #0]
		if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 8006e5a:	6824      	ldr	r4, [r4, #0]
 8006e5c:	b12c      	cbz	r4, 8006e6a <xTaskResumeAll+0x36>
BaseType_t xAlreadyYielded = pdFALSE;
 8006e5e:	2400      	movs	r4, #0
	taskEXIT_CRITICAL();
 8006e60:	f7fe ff12 	bl	8005c88 <vPortExitCritical>
}
 8006e64:	4620      	mov	r0, r4
 8006e66:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
			if( uxCurrentNumberOfTasks > ( UBaseType_t ) 0U )
 8006e6a:	4b24      	ldr	r3, [pc, #144]	; (8006efc <xTaskResumeAll+0xc8>)
 8006e6c:	681b      	ldr	r3, [r3, #0]
 8006e6e:	2b00      	cmp	r3, #0
 8006e70:	d0f5      	beq.n	8006e5e <xTaskResumeAll+0x2a>
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 8006e72:	4d23      	ldr	r5, [pc, #140]	; (8006f00 <xTaskResumeAll+0xcc>)
					prvAddTaskToReadyList( pxTCB );
 8006e74:	4e23      	ldr	r6, [pc, #140]	; (8006f04 <xTaskResumeAll+0xd0>)
 8006e76:	f8df 80a0 	ldr.w	r8, [pc, #160]	; 8006f18 <xTaskResumeAll+0xe4>
 8006e7a:	e01d      	b.n	8006eb8 <xTaskResumeAll+0x84>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xPendingReadyList ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8006e7c:	68eb      	ldr	r3, [r5, #12]
 8006e7e:	68dc      	ldr	r4, [r3, #12]
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 8006e80:	1d27      	adds	r7, r4, #4
					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 8006e82:	f104 0018 	add.w	r0, r4, #24
 8006e86:	f7fe fe60 	bl	8005b4a <uxListRemove>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 8006e8a:	4638      	mov	r0, r7
 8006e8c:	f7fe fe5d 	bl	8005b4a <uxListRemove>
					prvAddTaskToReadyList( pxTCB );
 8006e90:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8006e92:	6832      	ldr	r2, [r6, #0]
 8006e94:	2014      	movs	r0, #20
 8006e96:	4293      	cmp	r3, r2
 8006e98:	fb00 8003 	mla	r0, r0, r3, r8
 8006e9c:	4639      	mov	r1, r7
 8006e9e:	bf88      	it	hi
 8006ea0:	6033      	strhi	r3, [r6, #0]
 8006ea2:	f7fe fe2f 	bl	8005b04 <vListInsertEnd>
					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 8006ea6:	4b18      	ldr	r3, [pc, #96]	; (8006f08 <xTaskResumeAll+0xd4>)
 8006ea8:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8006eaa:	681b      	ldr	r3, [r3, #0]
 8006eac:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8006eae:	429a      	cmp	r2, r3
 8006eb0:	d302      	bcc.n	8006eb8 <xTaskResumeAll+0x84>
						xYieldPending = pdTRUE;
 8006eb2:	4b16      	ldr	r3, [pc, #88]	; (8006f0c <xTaskResumeAll+0xd8>)
 8006eb4:	2201      	movs	r2, #1
 8006eb6:	601a      	str	r2, [r3, #0]
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 8006eb8:	682b      	ldr	r3, [r5, #0]
 8006eba:	2b00      	cmp	r3, #0
 8006ebc:	d1de      	bne.n	8006e7c <xTaskResumeAll+0x48>
				if( pxTCB != NULL )
 8006ebe:	b10c      	cbz	r4, 8006ec4 <xTaskResumeAll+0x90>
					prvResetNextTaskUnblockTime();
 8006ec0:	f7ff fdd6 	bl	8006a70 <prvResetNextTaskUnblockTime>
					UBaseType_t uxPendedCounts = uxPendedTicks; /* Non-volatile copy. */
 8006ec4:	4d12      	ldr	r5, [pc, #72]	; (8006f10 <xTaskResumeAll+0xdc>)
 8006ec6:	682c      	ldr	r4, [r5, #0]
					if( uxPendedCounts > ( UBaseType_t ) 0U )
 8006ec8:	b144      	cbz	r4, 8006edc <xTaskResumeAll+0xa8>
								xYieldPending = pdTRUE;
 8006eca:	4e10      	ldr	r6, [pc, #64]	; (8006f0c <xTaskResumeAll+0xd8>)
 8006ecc:	2701      	movs	r7, #1
							if( xTaskIncrementTick() != pdFALSE )
 8006ece:	f7ff ff21 	bl	8006d14 <xTaskIncrementTick>
 8006ed2:	b100      	cbz	r0, 8006ed6 <xTaskResumeAll+0xa2>
								xYieldPending = pdTRUE;
 8006ed4:	6037      	str	r7, [r6, #0]
						} while( uxPendedCounts > ( UBaseType_t ) 0U );
 8006ed6:	3c01      	subs	r4, #1
 8006ed8:	d1f9      	bne.n	8006ece <xTaskResumeAll+0x9a>
						uxPendedTicks = 0;
 8006eda:	602c      	str	r4, [r5, #0]
				if( xYieldPending != pdFALSE )
 8006edc:	4b0b      	ldr	r3, [pc, #44]	; (8006f0c <xTaskResumeAll+0xd8>)
 8006ede:	681b      	ldr	r3, [r3, #0]
 8006ee0:	2b00      	cmp	r3, #0
 8006ee2:	d0bc      	beq.n	8006e5e <xTaskResumeAll+0x2a>
					taskYIELD_IF_USING_PREEMPTION();
 8006ee4:	4b0b      	ldr	r3, [pc, #44]	; (8006f14 <xTaskResumeAll+0xe0>)
 8006ee6:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8006eea:	601a      	str	r2, [r3, #0]
 8006eec:	f3bf 8f4f 	dsb	sy
 8006ef0:	f3bf 8f6f 	isb	sy
						xAlreadyYielded = pdTRUE;
 8006ef4:	2401      	movs	r4, #1
 8006ef6:	e7b3      	b.n	8006e60 <xTaskResumeAll+0x2c>
 8006ef8:	20011fbc 	.word	0x20011fbc
 8006efc:	20011fb0 	.word	0x20011fb0
 8006f00:	20011ff8 	.word	0x20011ff8
 8006f04:	20011fc4 	.word	0x20011fc4
 8006f08:	20011b44 	.word	0x20011b44
 8006f0c:	2001203c 	.word	0x2001203c
 8006f10:	20011fb8 	.word	0x20011fb8
 8006f14:	e000ed04 	.word	0xe000ed04
 8006f18:	20011b50 	.word	0x20011b50

08006f1c <vTaskSwitchContext>:
	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
 8006f1c:	4b18      	ldr	r3, [pc, #96]	; (8006f80 <vTaskSwitchContext+0x64>)
 8006f1e:	681a      	ldr	r2, [r3, #0]
 8006f20:	4b18      	ldr	r3, [pc, #96]	; (8006f84 <vTaskSwitchContext+0x68>)
{
 8006f22:	b5f0      	push	{r4, r5, r6, r7, lr}
	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
 8006f24:	b112      	cbz	r2, 8006f2c <vTaskSwitchContext+0x10>
		xYieldPending = pdTRUE;
 8006f26:	2201      	movs	r2, #1
 8006f28:	601a      	str	r2, [r3, #0]
}
 8006f2a:	bdf0      	pop	{r4, r5, r6, r7, pc}
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8006f2c:	4d16      	ldr	r5, [pc, #88]	; (8006f88 <vTaskSwitchContext+0x6c>)
		xYieldPending = pdFALSE;
 8006f2e:	601a      	str	r2, [r3, #0]
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8006f30:	4a16      	ldr	r2, [pc, #88]	; (8006f8c <vTaskSwitchContext+0x70>)
 8006f32:	682b      	ldr	r3, [r5, #0]
 8006f34:	2714      	movs	r7, #20
 8006f36:	4616      	mov	r6, r2
 8006f38:	fb07 f103 	mul.w	r1, r7, r3
 8006f3c:	1850      	adds	r0, r2, r1
 8006f3e:	5854      	ldr	r4, [r2, r1]
 8006f40:	b18c      	cbz	r4, 8006f66 <vTaskSwitchContext+0x4a>
 8006f42:	6844      	ldr	r4, [r0, #4]
 8006f44:	3108      	adds	r1, #8
 8006f46:	6864      	ldr	r4, [r4, #4]
 8006f48:	6044      	str	r4, [r0, #4]
 8006f4a:	440a      	add	r2, r1
 8006f4c:	4294      	cmp	r4, r2
 8006f4e:	bf04      	itt	eq
 8006f50:	6862      	ldreq	r2, [r4, #4]
 8006f52:	6042      	streq	r2, [r0, #4]
 8006f54:	2214      	movs	r2, #20
 8006f56:	fb02 6203 	mla	r2, r2, r3, r6
 8006f5a:	6852      	ldr	r2, [r2, #4]
 8006f5c:	68d1      	ldr	r1, [r2, #12]
 8006f5e:	4a0c      	ldr	r2, [pc, #48]	; (8006f90 <vTaskSwitchContext+0x74>)
 8006f60:	6011      	str	r1, [r2, #0]
 8006f62:	602b      	str	r3, [r5, #0]
}
 8006f64:	e7e1      	b.n	8006f2a <vTaskSwitchContext+0xe>
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8006f66:	b943      	cbnz	r3, 8006f7a <vTaskSwitchContext+0x5e>
 8006f68:	f04f 0350 	mov.w	r3, #80	; 0x50
 8006f6c:	f383 8811 	msr	BASEPRI, r3
 8006f70:	f3bf 8f6f 	isb	sy
 8006f74:	f3bf 8f4f 	dsb	sy
 8006f78:	e7fe      	b.n	8006f78 <vTaskSwitchContext+0x5c>
 8006f7a:	3b01      	subs	r3, #1
 8006f7c:	e7dc      	b.n	8006f38 <vTaskSwitchContext+0x1c>
 8006f7e:	bf00      	nop
 8006f80:	20011fbc 	.word	0x20011fbc
 8006f84:	2001203c 	.word	0x2001203c
 8006f88:	20011fc4 	.word	0x20011fc4
 8006f8c:	20011b50 	.word	0x20011b50
 8006f90:	20011b44 	.word	0x20011b44

08006f94 <vTaskPlaceOnEventList>:
{
 8006f94:	b510      	push	{r4, lr}
 8006f96:	460c      	mov	r4, r1
	configASSERT( pxEventList );
 8006f98:	b940      	cbnz	r0, 8006fac <vTaskPlaceOnEventList+0x18>
 8006f9a:	f04f 0350 	mov.w	r3, #80	; 0x50
 8006f9e:	f383 8811 	msr	BASEPRI, r3
 8006fa2:	f3bf 8f6f 	isb	sy
 8006fa6:	f3bf 8f4f 	dsb	sy
 8006faa:	e7fe      	b.n	8006faa <vTaskPlaceOnEventList+0x16>
	vListInsert( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 8006fac:	4b05      	ldr	r3, [pc, #20]	; (8006fc4 <vTaskPlaceOnEventList+0x30>)
 8006fae:	6819      	ldr	r1, [r3, #0]
 8006fb0:	3118      	adds	r1, #24
 8006fb2:	f7fe fdb3 	bl	8005b1c <vListInsert>
	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
 8006fb6:	4620      	mov	r0, r4
 8006fb8:	2101      	movs	r1, #1
}
 8006fba:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
 8006fbe:	f7ff bdb7 	b.w	8006b30 <prvAddCurrentTaskToDelayedList>
 8006fc2:	bf00      	nop
 8006fc4:	20011b44 	.word	0x20011b44

08006fc8 <vTaskPlaceOnEventListRestricted>:
	{
 8006fc8:	b538      	push	{r3, r4, r5, lr}
 8006fca:	460d      	mov	r5, r1
 8006fcc:	4614      	mov	r4, r2
		configASSERT( pxEventList );
 8006fce:	b940      	cbnz	r0, 8006fe2 <vTaskPlaceOnEventListRestricted+0x1a>
 8006fd0:	f04f 0350 	mov.w	r3, #80	; 0x50
 8006fd4:	f383 8811 	msr	BASEPRI, r3
 8006fd8:	f3bf 8f6f 	isb	sy
 8006fdc:	f3bf 8f4f 	dsb	sy
 8006fe0:	e7fe      	b.n	8006fe0 <vTaskPlaceOnEventListRestricted+0x18>
		vListInsertEnd( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 8006fe2:	4b07      	ldr	r3, [pc, #28]	; (8007000 <vTaskPlaceOnEventListRestricted+0x38>)
 8006fe4:	6819      	ldr	r1, [r3, #0]
 8006fe6:	3118      	adds	r1, #24
 8006fe8:	f7fe fd8c 	bl	8005b04 <vListInsertEnd>
			xTicksToWait = portMAX_DELAY;
 8006fec:	2c00      	cmp	r4, #0
		prvAddCurrentTaskToDelayedList( xTicksToWait, xWaitIndefinitely );
 8006fee:	4621      	mov	r1, r4
 8006ff0:	bf0c      	ite	eq
 8006ff2:	4628      	moveq	r0, r5
 8006ff4:	f04f 30ff 	movne.w	r0, #4294967295
	}
 8006ff8:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		prvAddCurrentTaskToDelayedList( xTicksToWait, xWaitIndefinitely );
 8006ffc:	f7ff bd98 	b.w	8006b30 <prvAddCurrentTaskToDelayedList>
 8007000:	20011b44 	.word	0x20011b44

08007004 <xTaskRemoveFromEventList>:
{
 8007004:	b538      	push	{r3, r4, r5, lr}
	pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8007006:	68c3      	ldr	r3, [r0, #12]
 8007008:	68dc      	ldr	r4, [r3, #12]
	configASSERT( pxUnblockedTCB );
 800700a:	b944      	cbnz	r4, 800701e <xTaskRemoveFromEventList+0x1a>
 800700c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007010:	f383 8811 	msr	BASEPRI, r3
 8007014:	f3bf 8f6f 	isb	sy
 8007018:	f3bf 8f4f 	dsb	sy
 800701c:	e7fe      	b.n	800701c <xTaskRemoveFromEventList+0x18>
	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
 800701e:	f104 0518 	add.w	r5, r4, #24
 8007022:	4628      	mov	r0, r5
 8007024:	f7fe fd91 	bl	8005b4a <uxListRemove>
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 8007028:	4b10      	ldr	r3, [pc, #64]	; (800706c <xTaskRemoveFromEventList+0x68>)
 800702a:	681b      	ldr	r3, [r3, #0]
 800702c:	b9db      	cbnz	r3, 8007066 <xTaskRemoveFromEventList+0x62>
		( void ) uxListRemove( &( pxUnblockedTCB->xStateListItem ) );
 800702e:	1d25      	adds	r5, r4, #4
 8007030:	4628      	mov	r0, r5
 8007032:	f7fe fd8a 	bl	8005b4a <uxListRemove>
		prvAddTaskToReadyList( pxUnblockedTCB );
 8007036:	4a0e      	ldr	r2, [pc, #56]	; (8007070 <xTaskRemoveFromEventList+0x6c>)
 8007038:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800703a:	6811      	ldr	r1, [r2, #0]
 800703c:	428b      	cmp	r3, r1
 800703e:	bf88      	it	hi
 8007040:	6013      	strhi	r3, [r2, #0]
 8007042:	4a0c      	ldr	r2, [pc, #48]	; (8007074 <xTaskRemoveFromEventList+0x70>)
 8007044:	2014      	movs	r0, #20
 8007046:	4629      	mov	r1, r5
 8007048:	fb00 2003 	mla	r0, r0, r3, r2
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
 800704c:	f7fe fd5a 	bl	8005b04 <vListInsertEnd>
	if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
 8007050:	4b09      	ldr	r3, [pc, #36]	; (8007078 <xTaskRemoveFromEventList+0x74>)
 8007052:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8007054:	681b      	ldr	r3, [r3, #0]
 8007056:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8007058:	429a      	cmp	r2, r3
		xYieldPending = pdTRUE;
 800705a:	bf83      	ittte	hi
 800705c:	4b07      	ldrhi	r3, [pc, #28]	; (800707c <xTaskRemoveFromEventList+0x78>)
 800705e:	2001      	movhi	r0, #1
 8007060:	6018      	strhi	r0, [r3, #0]
		xReturn = pdFALSE;
 8007062:	2000      	movls	r0, #0
}
 8007064:	bd38      	pop	{r3, r4, r5, pc}
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
 8007066:	4629      	mov	r1, r5
 8007068:	4805      	ldr	r0, [pc, #20]	; (8007080 <xTaskRemoveFromEventList+0x7c>)
 800706a:	e7ef      	b.n	800704c <xTaskRemoveFromEventList+0x48>
 800706c:	20011fbc 	.word	0x20011fbc
 8007070:	20011fc4 	.word	0x20011fc4
 8007074:	20011b50 	.word	0x20011b50
 8007078:	20011b44 	.word	0x20011b44
 800707c:	2001203c 	.word	0x2001203c
 8007080:	20011ff8 	.word	0x20011ff8

08007084 <vTaskInternalSetTimeOutState>:
	pxTimeOut->xOverflowCount = xNumOfOverflows;
 8007084:	4b03      	ldr	r3, [pc, #12]	; (8007094 <vTaskInternalSetTimeOutState+0x10>)
 8007086:	681b      	ldr	r3, [r3, #0]
 8007088:	6003      	str	r3, [r0, #0]
	pxTimeOut->xTimeOnEntering = xTickCount;
 800708a:	4b03      	ldr	r3, [pc, #12]	; (8007098 <vTaskInternalSetTimeOutState+0x14>)
 800708c:	681b      	ldr	r3, [r3, #0]
 800708e:	6043      	str	r3, [r0, #4]
}
 8007090:	4770      	bx	lr
 8007092:	bf00      	nop
 8007094:	20011ff4 	.word	0x20011ff4
 8007098:	20012038 	.word	0x20012038

0800709c <xTaskCheckForTimeOut>:
{
 800709c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800709e:	460c      	mov	r4, r1
	configASSERT( pxTimeOut );
 80070a0:	4605      	mov	r5, r0
 80070a2:	b940      	cbnz	r0, 80070b6 <xTaskCheckForTimeOut+0x1a>
 80070a4:	f04f 0350 	mov.w	r3, #80	; 0x50
 80070a8:	f383 8811 	msr	BASEPRI, r3
 80070ac:	f3bf 8f6f 	isb	sy
 80070b0:	f3bf 8f4f 	dsb	sy
 80070b4:	e7fe      	b.n	80070b4 <xTaskCheckForTimeOut+0x18>
	configASSERT( pxTicksToWait );
 80070b6:	b941      	cbnz	r1, 80070ca <xTaskCheckForTimeOut+0x2e>
 80070b8:	f04f 0350 	mov.w	r3, #80	; 0x50
 80070bc:	f383 8811 	msr	BASEPRI, r3
 80070c0:	f3bf 8f6f 	isb	sy
 80070c4:	f3bf 8f4f 	dsb	sy
 80070c8:	e7fe      	b.n	80070c8 <xTaskCheckForTimeOut+0x2c>
	taskENTER_CRITICAL();
 80070ca:	f7fe fdbb 	bl	8005c44 <vPortEnterCritical>
		const TickType_t xConstTickCount = xTickCount;
 80070ce:	4b0f      	ldr	r3, [pc, #60]	; (800710c <xTaskCheckForTimeOut+0x70>)
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 80070d0:	6868      	ldr	r0, [r5, #4]
		const TickType_t xConstTickCount = xTickCount;
 80070d2:	6819      	ldr	r1, [r3, #0]
			if( *pxTicksToWait == portMAX_DELAY )
 80070d4:	6823      	ldr	r3, [r4, #0]
 80070d6:	1c5e      	adds	r6, r3, #1
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 80070d8:	eba1 0200 	sub.w	r2, r1, r0
			if( *pxTicksToWait == portMAX_DELAY )
 80070dc:	d00d      	beq.n	80070fa <xTaskCheckForTimeOut+0x5e>
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
 80070de:	4e0c      	ldr	r6, [pc, #48]	; (8007110 <xTaskCheckForTimeOut+0x74>)
 80070e0:	682f      	ldr	r7, [r5, #0]
 80070e2:	6836      	ldr	r6, [r6, #0]
 80070e4:	42b7      	cmp	r7, r6
 80070e6:	d001      	beq.n	80070ec <xTaskCheckForTimeOut+0x50>
 80070e8:	4288      	cmp	r0, r1
 80070ea:	d90d      	bls.n	8007108 <xTaskCheckForTimeOut+0x6c>
		else if( xElapsedTime < *pxTicksToWait ) /*lint !e961 Explicit casting is only redundant with some compilers, whereas others require it to prevent integer conversion errors. */
 80070ec:	4293      	cmp	r3, r2
 80070ee:	d909      	bls.n	8007104 <xTaskCheckForTimeOut+0x68>
			*pxTicksToWait -= xElapsedTime;
 80070f0:	1a9b      	subs	r3, r3, r2
 80070f2:	6023      	str	r3, [r4, #0]
			vTaskInternalSetTimeOutState( pxTimeOut );
 80070f4:	4628      	mov	r0, r5
 80070f6:	f7ff ffc5 	bl	8007084 <vTaskInternalSetTimeOutState>
				xReturn = pdFALSE;
 80070fa:	2400      	movs	r4, #0
	taskEXIT_CRITICAL();
 80070fc:	f7fe fdc4 	bl	8005c88 <vPortExitCritical>
}
 8007100:	4620      	mov	r0, r4
 8007102:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
			*pxTicksToWait = 0;
 8007104:	2300      	movs	r3, #0
 8007106:	6023      	str	r3, [r4, #0]
			xReturn = pdTRUE;
 8007108:	2401      	movs	r4, #1
 800710a:	e7f7      	b.n	80070fc <xTaskCheckForTimeOut+0x60>
 800710c:	20012038 	.word	0x20012038
 8007110:	20011ff4 	.word	0x20011ff4

08007114 <vTaskMissedYield>:
	xYieldPending = pdTRUE;
 8007114:	4b01      	ldr	r3, [pc, #4]	; (800711c <vTaskMissedYield+0x8>)
 8007116:	2201      	movs	r2, #1
 8007118:	601a      	str	r2, [r3, #0]
}
 800711a:	4770      	bx	lr
 800711c:	2001203c 	.word	0x2001203c

08007120 <xTaskGetSchedulerState>:
		if( xSchedulerRunning == pdFALSE )
 8007120:	4b05      	ldr	r3, [pc, #20]	; (8007138 <xTaskGetSchedulerState+0x18>)
 8007122:	681b      	ldr	r3, [r3, #0]
 8007124:	b133      	cbz	r3, 8007134 <xTaskGetSchedulerState+0x14>
			if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 8007126:	4b05      	ldr	r3, [pc, #20]	; (800713c <xTaskGetSchedulerState+0x1c>)
 8007128:	681b      	ldr	r3, [r3, #0]
 800712a:	2b00      	cmp	r3, #0
				xReturn = taskSCHEDULER_SUSPENDED;
 800712c:	bf0c      	ite	eq
 800712e:	2002      	moveq	r0, #2
 8007130:	2000      	movne	r0, #0
 8007132:	4770      	bx	lr
			xReturn = taskSCHEDULER_NOT_STARTED;
 8007134:	2001      	movs	r0, #1
	}
 8007136:	4770      	bx	lr
 8007138:	2001200c 	.word	0x2001200c
 800713c:	20011fbc 	.word	0x20011fbc

08007140 <xTaskPriorityInherit>:
	{
 8007140:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
		if( pxMutexHolder != NULL )
 8007142:	4604      	mov	r4, r0
 8007144:	b340      	cbz	r0, 8007198 <xTaskPriorityInherit+0x58>
			if( pxMutexHolderTCB->uxPriority < pxCurrentTCB->uxPriority )
 8007146:	4a1b      	ldr	r2, [pc, #108]	; (80071b4 <xTaskPriorityInherit+0x74>)
 8007148:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 800714a:	6811      	ldr	r1, [r2, #0]
 800714c:	6ac9      	ldr	r1, [r1, #44]	; 0x2c
 800714e:	428b      	cmp	r3, r1
 8007150:	4616      	mov	r6, r2
 8007152:	d226      	bcs.n	80071a2 <xTaskPriorityInherit+0x62>
				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 8007154:	6982      	ldr	r2, [r0, #24]
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
 8007156:	4d18      	ldr	r5, [pc, #96]	; (80071b8 <xTaskPriorityInherit+0x78>)
				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 8007158:	2a00      	cmp	r2, #0
					listSET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxCurrentTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800715a:	bfa1      	itttt	ge
 800715c:	6832      	ldrge	r2, [r6, #0]
 800715e:	6ad2      	ldrge	r2, [r2, #44]	; 0x2c
 8007160:	f1c2 0238 	rsbge	r2, r2, #56	; 0x38
 8007164:	6182      	strge	r2, [r0, #24]
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
 8007166:	2214      	movs	r2, #20
 8007168:	fb02 5303 	mla	r3, r2, r3, r5
 800716c:	6942      	ldr	r2, [r0, #20]
 800716e:	429a      	cmp	r2, r3
 8007170:	d113      	bne.n	800719a <xTaskPriorityInherit+0x5a>
					if( uxListRemove( &( pxMutexHolderTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8007172:	1d07      	adds	r7, r0, #4
 8007174:	4638      	mov	r0, r7
 8007176:	f7fe fce8 	bl	8005b4a <uxListRemove>
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800717a:	6833      	ldr	r3, [r6, #0]
					prvAddTaskToReadyList( pxMutexHolderTCB );
 800717c:	4a0f      	ldr	r2, [pc, #60]	; (80071bc <xTaskPriorityInherit+0x7c>)
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800717e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 8007180:	6811      	ldr	r1, [r2, #0]
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 8007182:	62e3      	str	r3, [r4, #44]	; 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 8007184:	2014      	movs	r0, #20
 8007186:	428b      	cmp	r3, r1
 8007188:	fb00 5003 	mla	r0, r0, r3, r5
 800718c:	4639      	mov	r1, r7
 800718e:	bf88      	it	hi
 8007190:	6013      	strhi	r3, [r2, #0]
 8007192:	f7fe fcb7 	bl	8005b04 <vListInsertEnd>
				xReturn = pdTRUE;
 8007196:	2001      	movs	r0, #1
	}
 8007198:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800719a:	6833      	ldr	r3, [r6, #0]
 800719c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800719e:	62c3      	str	r3, [r0, #44]	; 0x2c
 80071a0:	e7f9      	b.n	8007196 <xTaskPriorityInherit+0x56>
				if( pxMutexHolderTCB->uxBasePriority < pxCurrentTCB->uxPriority )
 80071a2:	6813      	ldr	r3, [r2, #0]
 80071a4:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 80071a6:	6adc      	ldr	r4, [r3, #44]	; 0x2c
 80071a8:	42a0      	cmp	r0, r4
 80071aa:	bf2c      	ite	cs
 80071ac:	2000      	movcs	r0, #0
 80071ae:	2001      	movcc	r0, #1
 80071b0:	e7f2      	b.n	8007198 <xTaskPriorityInherit+0x58>
 80071b2:	bf00      	nop
 80071b4:	20011b44 	.word	0x20011b44
 80071b8:	20011b50 	.word	0x20011b50
 80071bc:	20011fc4 	.word	0x20011fc4

080071c0 <xTaskPriorityDisinherit>:
	{
 80071c0:	b538      	push	{r3, r4, r5, lr}
		if( pxMutexHolder != NULL )
 80071c2:	b908      	cbnz	r0, 80071c8 <xTaskPriorityDisinherit+0x8>
	BaseType_t xReturn = pdFALSE;
 80071c4:	2000      	movs	r0, #0
	}
 80071c6:	bd38      	pop	{r3, r4, r5, pc}
			configASSERT( pxTCB == pxCurrentTCB );
 80071c8:	4b1b      	ldr	r3, [pc, #108]	; (8007238 <xTaskPriorityDisinherit+0x78>)
 80071ca:	681c      	ldr	r4, [r3, #0]
 80071cc:	4284      	cmp	r4, r0
 80071ce:	d008      	beq.n	80071e2 <xTaskPriorityDisinherit+0x22>
 80071d0:	f04f 0350 	mov.w	r3, #80	; 0x50
 80071d4:	f383 8811 	msr	BASEPRI, r3
 80071d8:	f3bf 8f6f 	isb	sy
 80071dc:	f3bf 8f4f 	dsb	sy
 80071e0:	e7fe      	b.n	80071e0 <xTaskPriorityDisinherit+0x20>
			configASSERT( pxTCB->uxMutexesHeld );
 80071e2:	6d23      	ldr	r3, [r4, #80]	; 0x50
 80071e4:	b943      	cbnz	r3, 80071f8 <xTaskPriorityDisinherit+0x38>
 80071e6:	f04f 0350 	mov.w	r3, #80	; 0x50
 80071ea:	f383 8811 	msr	BASEPRI, r3
 80071ee:	f3bf 8f6f 	isb	sy
 80071f2:	f3bf 8f4f 	dsb	sy
 80071f6:	e7fe      	b.n	80071f6 <xTaskPriorityDisinherit+0x36>
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 80071f8:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 80071fa:	6ce2      	ldr	r2, [r4, #76]	; 0x4c
			( pxTCB->uxMutexesHeld )--;
 80071fc:	3b01      	subs	r3, #1
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 80071fe:	4291      	cmp	r1, r2
			( pxTCB->uxMutexesHeld )--;
 8007200:	6523      	str	r3, [r4, #80]	; 0x50
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 8007202:	d0df      	beq.n	80071c4 <xTaskPriorityDisinherit+0x4>
				if( pxTCB->uxMutexesHeld == ( UBaseType_t ) 0 )
 8007204:	2b00      	cmp	r3, #0
 8007206:	d1dd      	bne.n	80071c4 <xTaskPriorityDisinherit+0x4>
					if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8007208:	1d25      	adds	r5, r4, #4
 800720a:	4628      	mov	r0, r5
 800720c:	f7fe fc9d 	bl	8005b4a <uxListRemove>
					pxTCB->uxPriority = pxTCB->uxBasePriority;
 8007210:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
 8007212:	62e3      	str	r3, [r4, #44]	; 0x2c
					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8007214:	f1c3 0238 	rsb	r2, r3, #56	; 0x38
 8007218:	61a2      	str	r2, [r4, #24]
					prvAddTaskToReadyList( pxTCB );
 800721a:	4a08      	ldr	r2, [pc, #32]	; (800723c <xTaskPriorityDisinherit+0x7c>)
 800721c:	6811      	ldr	r1, [r2, #0]
 800721e:	428b      	cmp	r3, r1
 8007220:	bf88      	it	hi
 8007222:	6013      	strhi	r3, [r2, #0]
 8007224:	4a06      	ldr	r2, [pc, #24]	; (8007240 <xTaskPriorityDisinherit+0x80>)
 8007226:	2014      	movs	r0, #20
 8007228:	fb00 2003 	mla	r0, r0, r3, r2
 800722c:	4629      	mov	r1, r5
 800722e:	f7fe fc69 	bl	8005b04 <vListInsertEnd>
					xReturn = pdTRUE;
 8007232:	2001      	movs	r0, #1
		return xReturn;
 8007234:	e7c7      	b.n	80071c6 <xTaskPriorityDisinherit+0x6>
 8007236:	bf00      	nop
 8007238:	20011b44 	.word	0x20011b44
 800723c:	20011fc4 	.word	0x20011fc4
 8007240:	20011b50 	.word	0x20011b50

08007244 <vTaskPriorityDisinheritAfterTimeout>:
	{
 8007244:	b570      	push	{r4, r5, r6, lr}
		if( pxMutexHolder != NULL )
 8007246:	4604      	mov	r4, r0
 8007248:	2800      	cmp	r0, #0
 800724a:	d041      	beq.n	80072d0 <vTaskPriorityDisinheritAfterTimeout+0x8c>
			configASSERT( pxTCB->uxMutexesHeld );
 800724c:	6d02      	ldr	r2, [r0, #80]	; 0x50
 800724e:	b942      	cbnz	r2, 8007262 <vTaskPriorityDisinheritAfterTimeout+0x1e>
 8007250:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007254:	f383 8811 	msr	BASEPRI, r3
 8007258:	f3bf 8f6f 	isb	sy
 800725c:	f3bf 8f4f 	dsb	sy
 8007260:	e7fe      	b.n	8007260 <vTaskPriorityDisinheritAfterTimeout+0x1c>
 8007262:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
 8007264:	4299      	cmp	r1, r3
 8007266:	bf38      	it	cc
 8007268:	4619      	movcc	r1, r3
			if( pxTCB->uxPriority != uxPriorityToUse )
 800726a:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 800726c:	428b      	cmp	r3, r1
 800726e:	d02f      	beq.n	80072d0 <vTaskPriorityDisinheritAfterTimeout+0x8c>
				if( pxTCB->uxMutexesHeld == uxOnlyOneMutexHeld )
 8007270:	2a01      	cmp	r2, #1
 8007272:	d12d      	bne.n	80072d0 <vTaskPriorityDisinheritAfterTimeout+0x8c>
					configASSERT( pxTCB != pxCurrentTCB );
 8007274:	4a17      	ldr	r2, [pc, #92]	; (80072d4 <vTaskPriorityDisinheritAfterTimeout+0x90>)
 8007276:	6812      	ldr	r2, [r2, #0]
 8007278:	4282      	cmp	r2, r0
 800727a:	d108      	bne.n	800728e <vTaskPriorityDisinheritAfterTimeout+0x4a>
 800727c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007280:	f383 8811 	msr	BASEPRI, r3
 8007284:	f3bf 8f6f 	isb	sy
 8007288:	f3bf 8f4f 	dsb	sy
 800728c:	e7fe      	b.n	800728c <vTaskPriorityDisinheritAfterTimeout+0x48>
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800728e:	6982      	ldr	r2, [r0, #24]
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 8007290:	4d11      	ldr	r5, [pc, #68]	; (80072d8 <vTaskPriorityDisinheritAfterTimeout+0x94>)
					pxTCB->uxPriority = uxPriorityToUse;
 8007292:	62c1      	str	r1, [r0, #44]	; 0x2c
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 8007294:	2a00      	cmp	r2, #0
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 8007296:	f04f 0214 	mov.w	r2, #20
 800729a:	fb02 5303 	mla	r3, r2, r3, r5
 800729e:	6942      	ldr	r2, [r0, #20]
						listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriorityToUse ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 80072a0:	bfa4      	itt	ge
 80072a2:	f1c1 0138 	rsbge	r1, r1, #56	; 0x38
 80072a6:	6181      	strge	r1, [r0, #24]
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 80072a8:	429a      	cmp	r2, r3
 80072aa:	d111      	bne.n	80072d0 <vTaskPriorityDisinheritAfterTimeout+0x8c>
						if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 80072ac:	1d06      	adds	r6, r0, #4
 80072ae:	4630      	mov	r0, r6
 80072b0:	f7fe fc4b 	bl	8005b4a <uxListRemove>
						prvAddTaskToReadyList( pxTCB );
 80072b4:	4a09      	ldr	r2, [pc, #36]	; (80072dc <vTaskPriorityDisinheritAfterTimeout+0x98>)
 80072b6:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 80072b8:	6811      	ldr	r1, [r2, #0]
 80072ba:	2014      	movs	r0, #20
 80072bc:	428b      	cmp	r3, r1
 80072be:	fb00 5003 	mla	r0, r0, r3, r5
 80072c2:	4631      	mov	r1, r6
	}
 80072c4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
						prvAddTaskToReadyList( pxTCB );
 80072c8:	bf88      	it	hi
 80072ca:	6013      	strhi	r3, [r2, #0]
 80072cc:	f7fe bc1a 	b.w	8005b04 <vListInsertEnd>
	}
 80072d0:	bd70      	pop	{r4, r5, r6, pc}
 80072d2:	bf00      	nop
 80072d4:	20011b44 	.word	0x20011b44
 80072d8:	20011b50 	.word	0x20011b50
 80072dc:	20011fc4 	.word	0x20011fc4

080072e0 <pvTaskIncrementMutexHeldCount>:
		if( pxCurrentTCB != NULL )
 80072e0:	4b04      	ldr	r3, [pc, #16]	; (80072f4 <pvTaskIncrementMutexHeldCount+0x14>)
 80072e2:	681a      	ldr	r2, [r3, #0]
 80072e4:	b11a      	cbz	r2, 80072ee <pvTaskIncrementMutexHeldCount+0xe>
			( pxCurrentTCB->uxMutexesHeld )++;
 80072e6:	6819      	ldr	r1, [r3, #0]
 80072e8:	6d0a      	ldr	r2, [r1, #80]	; 0x50
 80072ea:	3201      	adds	r2, #1
 80072ec:	650a      	str	r2, [r1, #80]	; 0x50
		return pxCurrentTCB;
 80072ee:	6818      	ldr	r0, [r3, #0]
	}
 80072f0:	4770      	bx	lr
 80072f2:	bf00      	nop
 80072f4:	20011b44 	.word	0x20011b44

080072f8 <prvCheckForValidListAndQueue>:
	pxOverflowTimerList = pxTemp;
}
/*-----------------------------------------------------------*/

static void prvCheckForValidListAndQueue( void )
{
 80072f8:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
	/* Check that the list from which active timers are referenced, and the
	queue used to communicate with the timer service, have been
	initialised. */
	taskENTER_CRITICAL();
	{
		if( xTimerQueue == NULL )
 80072fa:	4c11      	ldr	r4, [pc, #68]	; (8007340 <prvCheckForValidListAndQueue+0x48>)
	taskENTER_CRITICAL();
 80072fc:	f7fe fca2 	bl	8005c44 <vPortEnterCritical>
		if( xTimerQueue == NULL )
 8007300:	6825      	ldr	r5, [r4, #0]
 8007302:	b9bd      	cbnz	r5, 8007334 <prvCheckForValidListAndQueue+0x3c>
		{
			vListInitialise( &xActiveTimerList1 );
 8007304:	4f0f      	ldr	r7, [pc, #60]	; (8007344 <prvCheckForValidListAndQueue+0x4c>)
			vListInitialise( &xActiveTimerList2 );
 8007306:	4e10      	ldr	r6, [pc, #64]	; (8007348 <prvCheckForValidListAndQueue+0x50>)
			vListInitialise( &xActiveTimerList1 );
 8007308:	4638      	mov	r0, r7
 800730a:	f7fe fbed 	bl	8005ae8 <vListInitialise>
			vListInitialise( &xActiveTimerList2 );
 800730e:	4630      	mov	r0, r6
 8007310:	f7fe fbea 	bl	8005ae8 <vListInitialise>
			pxCurrentTimerList = &xActiveTimerList1;
 8007314:	4b0d      	ldr	r3, [pc, #52]	; (800734c <prvCheckForValidListAndQueue+0x54>)
				/* The timer queue is allocated statically in case
				configSUPPORT_DYNAMIC_ALLOCATION is 0. */
				static StaticQueue_t xStaticTimerQueue; /*lint !e956 Ok to declare in this manner to prevent additional conditional compilation guards in other locations. */
				static uint8_t ucStaticTimerQueueStorage[ ( size_t ) configTIMER_QUEUE_LENGTH * sizeof( DaemonTaskMessage_t ) ]; /*lint !e956 Ok to declare in this manner to prevent additional conditional compilation guards in other locations. */

				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 8007316:	4a0e      	ldr	r2, [pc, #56]	; (8007350 <prvCheckForValidListAndQueue+0x58>)
			pxCurrentTimerList = &xActiveTimerList1;
 8007318:	601f      	str	r7, [r3, #0]
			pxOverflowTimerList = &xActiveTimerList2;
 800731a:	4b0e      	ldr	r3, [pc, #56]	; (8007354 <prvCheckForValidListAndQueue+0x5c>)
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 800731c:	2110      	movs	r1, #16
			pxOverflowTimerList = &xActiveTimerList2;
 800731e:	601e      	str	r6, [r3, #0]
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 8007320:	200a      	movs	r0, #10
 8007322:	9500      	str	r5, [sp, #0]
 8007324:	4b0c      	ldr	r3, [pc, #48]	; (8007358 <prvCheckForValidListAndQueue+0x60>)
 8007326:	f7fe fea5 	bl	8006074 <xQueueGenericCreateStatic>
 800732a:	6020      	str	r0, [r4, #0]
			}
			#endif

			#if ( configQUEUE_REGISTRY_SIZE > 0 )
			{
				if( xTimerQueue != NULL )
 800732c:	b110      	cbz	r0, 8007334 <prvCheckForValidListAndQueue+0x3c>
				{
					vQueueAddToRegistry( xTimerQueue, "TmrQ" );
 800732e:	490b      	ldr	r1, [pc, #44]	; (800735c <prvCheckForValidListAndQueue+0x64>)
 8007330:	f7ff fa70 	bl	8006814 <vQueueAddToRegistry>
		{
			mtCOVERAGE_TEST_MARKER();
		}
	}
	taskEXIT_CRITICAL();
}
 8007334:	b003      	add	sp, #12
 8007336:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
	taskEXIT_CRITICAL();
 800733a:	f7fe bca5 	b.w	8005c88 <vPortExitCritical>
 800733e:	bf00      	nop
 8007340:	20012164 	.word	0x20012164
 8007344:	200120e8 	.word	0x200120e8
 8007348:	200120fc 	.word	0x200120fc
 800734c:	20012040 	.word	0x20012040
 8007350:	20012048 	.word	0x20012048
 8007354:	20012044 	.word	0x20012044
 8007358:	20012114 	.word	0x20012114
 800735c:	08019d99 	.word	0x08019d99

08007360 <prvInsertTimerInActiveList>:
	if( xNextExpiryTime <= xTimeNow )
 8007360:	4291      	cmp	r1, r2
{
 8007362:	b508      	push	{r3, lr}
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
 8007364:	6041      	str	r1, [r0, #4]
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 8007366:	6100      	str	r0, [r0, #16]
	if( xNextExpiryTime <= xTimeNow )
 8007368:	d80a      	bhi.n	8007380 <prvInsertTimerInActiveList+0x20>
		if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks ) /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800736a:	1ad2      	subs	r2, r2, r3
 800736c:	6983      	ldr	r3, [r0, #24]
 800736e:	429a      	cmp	r2, r3
 8007370:	d20d      	bcs.n	800738e <prvInsertTimerInActiveList+0x2e>
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
 8007372:	4b08      	ldr	r3, [pc, #32]	; (8007394 <prvInsertTimerInActiveList+0x34>)
 8007374:	1d01      	adds	r1, r0, #4
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 8007376:	6818      	ldr	r0, [r3, #0]
 8007378:	f7fe fbd0 	bl	8005b1c <vListInsert>
BaseType_t xProcessTimerNow = pdFALSE;
 800737c:	2000      	movs	r0, #0
}
 800737e:	bd08      	pop	{r3, pc}
		if( ( xTimeNow < xCommandTime ) && ( xNextExpiryTime >= xCommandTime ) )
 8007380:	429a      	cmp	r2, r3
 8007382:	d201      	bcs.n	8007388 <prvInsertTimerInActiveList+0x28>
 8007384:	4299      	cmp	r1, r3
 8007386:	d202      	bcs.n	800738e <prvInsertTimerInActiveList+0x2e>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 8007388:	1d01      	adds	r1, r0, #4
 800738a:	4b03      	ldr	r3, [pc, #12]	; (8007398 <prvInsertTimerInActiveList+0x38>)
 800738c:	e7f3      	b.n	8007376 <prvInsertTimerInActiveList+0x16>
			xProcessTimerNow = pdTRUE;
 800738e:	2001      	movs	r0, #1
	return xProcessTimerNow;
 8007390:	e7f5      	b.n	800737e <prvInsertTimerInActiveList+0x1e>
 8007392:	bf00      	nop
 8007394:	20012044 	.word	0x20012044
 8007398:	20012040 	.word	0x20012040

0800739c <xTimerCreateTimerTask>:
{
 800739c:	b510      	push	{r4, lr}
 800739e:	b088      	sub	sp, #32
	prvCheckForValidListAndQueue();
 80073a0:	f7ff ffaa 	bl	80072f8 <prvCheckForValidListAndQueue>
	if( xTimerQueue != NULL )
 80073a4:	4b12      	ldr	r3, [pc, #72]	; (80073f0 <xTimerCreateTimerTask+0x54>)
 80073a6:	681b      	ldr	r3, [r3, #0]
 80073a8:	b1b3      	cbz	r3, 80073d8 <xTimerCreateTimerTask+0x3c>
			StaticTask_t *pxTimerTaskTCBBuffer = NULL;
 80073aa:	2400      	movs	r4, #0
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 80073ac:	aa07      	add	r2, sp, #28
 80073ae:	a906      	add	r1, sp, #24
 80073b0:	a805      	add	r0, sp, #20
			StackType_t *pxTimerTaskStackBuffer = NULL;
 80073b2:	e9cd 4405 	strd	r4, r4, [sp, #20]
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 80073b6:	f7fe faa3 	bl	8005900 <vApplicationGetTimerTaskMemory>
			xTimerTaskHandle = xTaskCreateStatic(	prvTimerTask,
 80073ba:	9b05      	ldr	r3, [sp, #20]
 80073bc:	9302      	str	r3, [sp, #8]
 80073be:	9b06      	ldr	r3, [sp, #24]
 80073c0:	9301      	str	r3, [sp, #4]
 80073c2:	2302      	movs	r3, #2
 80073c4:	9300      	str	r3, [sp, #0]
 80073c6:	9a07      	ldr	r2, [sp, #28]
 80073c8:	490a      	ldr	r1, [pc, #40]	; (80073f4 <xTimerCreateTimerTask+0x58>)
 80073ca:	480b      	ldr	r0, [pc, #44]	; (80073f8 <xTimerCreateTimerTask+0x5c>)
 80073cc:	4623      	mov	r3, r4
 80073ce:	f7ff fbe9 	bl	8006ba4 <xTaskCreateStatic>
 80073d2:	4b0a      	ldr	r3, [pc, #40]	; (80073fc <xTimerCreateTimerTask+0x60>)
 80073d4:	6018      	str	r0, [r3, #0]
			if( xTimerTaskHandle != NULL )
 80073d6:	b940      	cbnz	r0, 80073ea <xTimerCreateTimerTask+0x4e>
 80073d8:	f04f 0350 	mov.w	r3, #80	; 0x50
 80073dc:	f383 8811 	msr	BASEPRI, r3
 80073e0:	f3bf 8f6f 	isb	sy
 80073e4:	f3bf 8f4f 	dsb	sy
 80073e8:	e7fe      	b.n	80073e8 <xTimerCreateTimerTask+0x4c>
}
 80073ea:	2001      	movs	r0, #1
 80073ec:	b008      	add	sp, #32
 80073ee:	bd10      	pop	{r4, pc}
 80073f0:	20012164 	.word	0x20012164
 80073f4:	08019d9e 	.word	0x08019d9e
 80073f8:	080074d9 	.word	0x080074d9
 80073fc:	20012168 	.word	0x20012168

08007400 <xTimerGenericCommand>:
{
 8007400:	b530      	push	{r4, r5, lr}
 8007402:	4615      	mov	r5, r2
 8007404:	b085      	sub	sp, #20
 8007406:	461a      	mov	r2, r3
	configASSERT( xTimer );
 8007408:	4603      	mov	r3, r0
 800740a:	b940      	cbnz	r0, 800741e <xTimerGenericCommand+0x1e>
 800740c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007410:	f383 8811 	msr	BASEPRI, r3
 8007414:	f3bf 8f6f 	isb	sy
 8007418:	f3bf 8f4f 	dsb	sy
 800741c:	e7fe      	b.n	800741c <xTimerGenericCommand+0x1c>
	if( xTimerQueue != NULL )
 800741e:	4c0d      	ldr	r4, [pc, #52]	; (8007454 <xTimerGenericCommand+0x54>)
 8007420:	6820      	ldr	r0, [r4, #0]
 8007422:	b180      	cbz	r0, 8007446 <xTimerGenericCommand+0x46>
		if( xCommandID < tmrFIRST_FROM_ISR_COMMAND )
 8007424:	2905      	cmp	r1, #5
		xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
 8007426:	e9cd 1500 	strd	r1, r5, [sp]
		xMessage.u.xTimerParameters.pxTimer = xTimer;
 800742a:	9302      	str	r3, [sp, #8]
		if( xCommandID < tmrFIRST_FROM_ISR_COMMAND )
 800742c:	dc0d      	bgt.n	800744a <xTimerGenericCommand+0x4a>
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 800742e:	f7ff fe77 	bl	8007120 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 8007432:	2300      	movs	r3, #0
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 8007434:	2802      	cmp	r0, #2
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 8007436:	bf08      	it	eq
 8007438:	9a08      	ldreq	r2, [sp, #32]
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, tmrNO_DELAY );
 800743a:	6820      	ldr	r0, [r4, #0]
 800743c:	bf18      	it	ne
 800743e:	461a      	movne	r2, r3
 8007440:	4669      	mov	r1, sp
 8007442:	f7fe fecd 	bl	80061e0 <xQueueGenericSend>
}
 8007446:	b005      	add	sp, #20
 8007448:	bd30      	pop	{r4, r5, pc}
			xReturn = xQueueSendToBackFromISR( xTimerQueue, &xMessage, pxHigherPriorityTaskWoken );
 800744a:	2300      	movs	r3, #0
 800744c:	4669      	mov	r1, sp
 800744e:	f7fe ff79 	bl	8006344 <xQueueGenericSendFromISR>
 8007452:	e7f8      	b.n	8007446 <xTimerGenericCommand+0x46>
 8007454:	20012164 	.word	0x20012164

08007458 <prvSwitchTimerLists>:
{
 8007458:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 800745c:	4d1c      	ldr	r5, [pc, #112]	; (80074d0 <prvSwitchTimerLists+0x78>)
				xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
 800745e:	f04f 0800 	mov.w	r8, #0
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 8007462:	682b      	ldr	r3, [r5, #0]
 8007464:	681a      	ldr	r2, [r3, #0]
 8007466:	b932      	cbnz	r2, 8007476 <prvSwitchTimerLists+0x1e>
	pxCurrentTimerList = pxOverflowTimerList;
 8007468:	4a1a      	ldr	r2, [pc, #104]	; (80074d4 <prvSwitchTimerLists+0x7c>)
 800746a:	6811      	ldr	r1, [r2, #0]
 800746c:	6029      	str	r1, [r5, #0]
	pxOverflowTimerList = pxTemp;
 800746e:	6013      	str	r3, [r2, #0]
}
 8007470:	b002      	add	sp, #8
 8007472:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 8007476:	68db      	ldr	r3, [r3, #12]
		pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8007478:	68dc      	ldr	r4, [r3, #12]
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 800747a:	681e      	ldr	r6, [r3, #0]
		( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 800747c:	1d27      	adds	r7, r4, #4
 800747e:	4638      	mov	r0, r7
 8007480:	f7fe fb63 	bl	8005b4a <uxListRemove>
		pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 8007484:	6a23      	ldr	r3, [r4, #32]
 8007486:	4620      	mov	r0, r4
 8007488:	4798      	blx	r3
		if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 800748a:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 800748e:	075b      	lsls	r3, r3, #29
 8007490:	d5e7      	bpl.n	8007462 <prvSwitchTimerLists+0xa>
			xReloadTime = ( xNextExpireTime + pxTimer->xTimerPeriodInTicks );
 8007492:	69a3      	ldr	r3, [r4, #24]
 8007494:	4433      	add	r3, r6
			if( xReloadTime > xNextExpireTime )
 8007496:	429e      	cmp	r6, r3
 8007498:	d206      	bcs.n	80074a8 <prvSwitchTimerLists+0x50>
				listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xReloadTime );
 800749a:	6063      	str	r3, [r4, #4]
				listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 800749c:	6124      	str	r4, [r4, #16]
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800749e:	4639      	mov	r1, r7
 80074a0:	6828      	ldr	r0, [r5, #0]
 80074a2:	f7fe fb3b 	bl	8005b1c <vListInsert>
 80074a6:	e7dc      	b.n	8007462 <prvSwitchTimerLists+0xa>
				xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
 80074a8:	2300      	movs	r3, #0
 80074aa:	f8cd 8000 	str.w	r8, [sp]
 80074ae:	4632      	mov	r2, r6
 80074b0:	4619      	mov	r1, r3
 80074b2:	4620      	mov	r0, r4
 80074b4:	f7ff ffa4 	bl	8007400 <xTimerGenericCommand>
				configASSERT( xResult );
 80074b8:	2800      	cmp	r0, #0
 80074ba:	d1d2      	bne.n	8007462 <prvSwitchTimerLists+0xa>
 80074bc:	f04f 0350 	mov.w	r3, #80	; 0x50
 80074c0:	f383 8811 	msr	BASEPRI, r3
 80074c4:	f3bf 8f6f 	isb	sy
 80074c8:	f3bf 8f4f 	dsb	sy
 80074cc:	e7fe      	b.n	80074cc <prvSwitchTimerLists+0x74>
 80074ce:	bf00      	nop
 80074d0:	20012040 	.word	0x20012040
 80074d4:	20012044 	.word	0x20012044

080074d8 <prvTimerTask>:
{
 80074d8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 80074dc:	4d81      	ldr	r5, [pc, #516]	; (80076e4 <prvTimerTask+0x20c>)
					portYIELD_WITHIN_API();
 80074de:	f8df 8210 	ldr.w	r8, [pc, #528]	; 80076f0 <prvTimerTask+0x218>
{
 80074e2:	b087      	sub	sp, #28
 80074e4:	462f      	mov	r7, r5
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 80074e6:	682a      	ldr	r2, [r5, #0]
 80074e8:	6813      	ldr	r3, [r2, #0]
 80074ea:	b353      	cbz	r3, 8007542 <prvTimerTask+0x6a>
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 80074ec:	68d3      	ldr	r3, [r2, #12]
 80074ee:	f8d3 9000 	ldr.w	r9, [r3]
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 80074f2:	2400      	movs	r4, #0
	if( xTimeNow < xLastTime )
 80074f4:	f8df b1fc 	ldr.w	fp, [pc, #508]	; 80076f4 <prvTimerTask+0x21c>
	vTaskSuspendAll();
 80074f8:	f7ff fbfe 	bl	8006cf8 <vTaskSuspendAll>
	xTimeNow = xTaskGetTickCount();
 80074fc:	f7ff fc04 	bl	8006d08 <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
 8007500:	f8db 3000 	ldr.w	r3, [fp]
 8007504:	4298      	cmp	r0, r3
	xTimeNow = xTaskGetTickCount();
 8007506:	4682      	mov	sl, r0
 8007508:	465e      	mov	r6, fp
	if( xTimeNow < xLastTime )
 800750a:	d31d      	bcc.n	8007548 <prvTimerTask+0x70>
	xLastTime = xTimeNow;
 800750c:	f8cb 0000 	str.w	r0, [fp]
			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
 8007510:	b32c      	cbz	r4, 800755e <prvTimerTask+0x86>
					xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
 8007512:	4b75      	ldr	r3, [pc, #468]	; (80076e8 <prvTimerTask+0x210>)
 8007514:	681b      	ldr	r3, [r3, #0]
 8007516:	681a      	ldr	r2, [r3, #0]
 8007518:	fab2 f282 	clz	r2, r2
 800751c:	0952      	lsrs	r2, r2, #5
				vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
 800751e:	4b73      	ldr	r3, [pc, #460]	; (80076ec <prvTimerTask+0x214>)
 8007520:	eba9 010a 	sub.w	r1, r9, sl
 8007524:	6818      	ldr	r0, [r3, #0]
 8007526:	f7ff f9b2 	bl	800688e <vQueueWaitForMessageRestricted>
				if( xTaskResumeAll() == pdFALSE )
 800752a:	f7ff fc83 	bl	8006e34 <xTaskResumeAll>
 800752e:	b988      	cbnz	r0, 8007554 <prvTimerTask+0x7c>
					portYIELD_WITHIN_API();
 8007530:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
 8007534:	f8c8 3000 	str.w	r3, [r8]
 8007538:	f3bf 8f4f 	dsb	sy
 800753c:	f3bf 8f6f 	isb	sy
 8007540:	e008      	b.n	8007554 <prvTimerTask+0x7c>
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 8007542:	2401      	movs	r4, #1
		xNextExpireTime = ( TickType_t ) 0U;
 8007544:	4699      	mov	r9, r3
 8007546:	e7d5      	b.n	80074f4 <prvTimerTask+0x1c>
		prvSwitchTimerLists();
 8007548:	f7ff ff86 	bl	8007458 <prvSwitchTimerLists>
	xLastTime = xTimeNow;
 800754c:	f8cb a000 	str.w	sl, [fp]
			( void ) xTaskResumeAll();
 8007550:	f7ff fc70 	bl	8006e34 <xTaskResumeAll>
	while( xQueueReceive( xTimerQueue, &xMessage, tmrNO_DELAY ) != pdFAIL ) /*lint !e603 xMessage does not have to be initialised as it is passed out, not in, and it is not used unless xQueueReceive() returns pdTRUE. */
 8007554:	f8df 9194 	ldr.w	r9, [pc, #404]	; 80076ec <prvTimerTask+0x214>
 8007558:	f04f 0a00 	mov.w	sl, #0
 800755c:	e07d      	b.n	800765a <prvTimerTask+0x182>
			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
 800755e:	4581      	cmp	r9, r0
 8007560:	d830      	bhi.n	80075c4 <prvTimerTask+0xec>
				( void ) xTaskResumeAll();
 8007562:	f7ff fc67 	bl	8006e34 <xTaskResumeAll>
Timer_t * const pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8007566:	683b      	ldr	r3, [r7, #0]
 8007568:	68db      	ldr	r3, [r3, #12]
 800756a:	f8d3 b00c 	ldr.w	fp, [r3, #12]
	( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 800756e:	f10b 0004 	add.w	r0, fp, #4
 8007572:	f7fe faea 	bl	8005b4a <uxListRemove>
	if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 8007576:	f89b 3028 	ldrb.w	r3, [fp, #40]	; 0x28
 800757a:	0758      	lsls	r0, r3, #29
 800757c:	d519      	bpl.n	80075b2 <prvTimerTask+0xda>
		if( prvInsertTimerInActiveList( pxTimer, ( xNextExpireTime + pxTimer->xTimerPeriodInTicks ), xTimeNow, xNextExpireTime ) != pdFALSE )
 800757e:	f8db 1018 	ldr.w	r1, [fp, #24]
 8007582:	464b      	mov	r3, r9
 8007584:	4652      	mov	r2, sl
 8007586:	4449      	add	r1, r9
 8007588:	4658      	mov	r0, fp
 800758a:	f7ff fee9 	bl	8007360 <prvInsertTimerInActiveList>
 800758e:	b1a0      	cbz	r0, 80075ba <prvTimerTask+0xe2>
			xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
 8007590:	9400      	str	r4, [sp, #0]
 8007592:	4623      	mov	r3, r4
 8007594:	464a      	mov	r2, r9
 8007596:	4621      	mov	r1, r4
 8007598:	4658      	mov	r0, fp
 800759a:	f7ff ff31 	bl	8007400 <xTimerGenericCommand>
			configASSERT( xResult );
 800759e:	b960      	cbnz	r0, 80075ba <prvTimerTask+0xe2>
 80075a0:	f04f 0350 	mov.w	r3, #80	; 0x50
 80075a4:	f383 8811 	msr	BASEPRI, r3
 80075a8:	f3bf 8f6f 	isb	sy
 80075ac:	f3bf 8f4f 	dsb	sy
 80075b0:	e7fe      	b.n	80075b0 <prvTimerTask+0xd8>
		pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 80075b2:	f023 0301 	bic.w	r3, r3, #1
 80075b6:	f88b 3028 	strb.w	r3, [fp, #40]	; 0x28
	pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 80075ba:	f8db 3020 	ldr.w	r3, [fp, #32]
 80075be:	4658      	mov	r0, fp
 80075c0:	4798      	blx	r3
 80075c2:	e7c7      	b.n	8007554 <prvTimerTask+0x7c>
			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
 80075c4:	4622      	mov	r2, r4
 80075c6:	e7aa      	b.n	800751e <prvTimerTask+0x46>
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 80075c8:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 80075cc:	69a1      	ldr	r1, [r4, #24]
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 80075ce:	f043 0301 	orr.w	r3, r3, #1
 80075d2:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 80075d6:	9b03      	ldr	r3, [sp, #12]
 80075d8:	465a      	mov	r2, fp
 80075da:	4419      	add	r1, r3
 80075dc:	4620      	mov	r0, r4
 80075de:	f7ff febf 	bl	8007360 <prvInsertTimerInActiveList>
 80075e2:	2800      	cmp	r0, #0
 80075e4:	d039      	beq.n	800765a <prvTimerTask+0x182>
						pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 80075e6:	6a23      	ldr	r3, [r4, #32]
 80075e8:	4620      	mov	r0, r4
 80075ea:	4798      	blx	r3
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 80075ec:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 80075f0:	0759      	lsls	r1, r3, #29
 80075f2:	d532      	bpl.n	800765a <prvTimerTask+0x182>
							xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, NULL, tmrNO_DELAY );
 80075f4:	69a2      	ldr	r2, [r4, #24]
 80075f6:	9903      	ldr	r1, [sp, #12]
 80075f8:	f8cd a000 	str.w	sl, [sp]
 80075fc:	2300      	movs	r3, #0
 80075fe:	440a      	add	r2, r1
 8007600:	4620      	mov	r0, r4
 8007602:	4619      	mov	r1, r3
 8007604:	f7ff fefc 	bl	8007400 <xTimerGenericCommand>
							configASSERT( xResult );
 8007608:	bb38      	cbnz	r0, 800765a <prvTimerTask+0x182>
 800760a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800760e:	f383 8811 	msr	BASEPRI, r3
 8007612:	f3bf 8f6f 	isb	sy
 8007616:	f3bf 8f4f 	dsb	sy
 800761a:	e7fe      	b.n	800761a <prvTimerTask+0x142>
					pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 800761c:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
							pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 8007620:	f023 0301 	bic.w	r3, r3, #1
 8007624:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
 8007628:	e017      	b.n	800765a <prvTimerTask+0x182>
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 800762a:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
					pxTimer->xTimerPeriodInTicks = xMessage.u.xTimerParameters.xMessageValue;
 800762e:	9903      	ldr	r1, [sp, #12]
 8007630:	61a1      	str	r1, [r4, #24]
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 8007632:	f043 0301 	orr.w	r3, r3, #1
 8007636:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
 800763a:	b941      	cbnz	r1, 800764e <prvTimerTask+0x176>
 800763c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007640:	f383 8811 	msr	BASEPRI, r3
 8007644:	f3bf 8f6f 	isb	sy
 8007648:	f3bf 8f4f 	dsb	sy
 800764c:	e7fe      	b.n	800764c <prvTimerTask+0x174>
					( void ) prvInsertTimerInActiveList( pxTimer, ( xTimeNow + pxTimer->xTimerPeriodInTicks ), xTimeNow, xTimeNow );
 800764e:	465b      	mov	r3, fp
 8007650:	465a      	mov	r2, fp
 8007652:	4459      	add	r1, fp
 8007654:	4620      	mov	r0, r4
 8007656:	f7ff fe83 	bl	8007360 <prvInsertTimerInActiveList>
	while( xQueueReceive( xTimerQueue, &xMessage, tmrNO_DELAY ) != pdFAIL ) /*lint !e603 xMessage does not have to be initialised as it is passed out, not in, and it is not used unless xQueueReceive() returns pdTRUE. */
 800765a:	2200      	movs	r2, #0
 800765c:	a902      	add	r1, sp, #8
 800765e:	f8d9 0000 	ldr.w	r0, [r9]
 8007662:	f7fe ff25 	bl	80064b0 <xQueueReceive>
 8007666:	2800      	cmp	r0, #0
 8007668:	f43f af3d 	beq.w	80074e6 <prvTimerTask+0xe>
			if( xMessage.xMessageID < ( BaseType_t ) 0 )
 800766c:	9b02      	ldr	r3, [sp, #8]
 800766e:	2b00      	cmp	r3, #0
 8007670:	da03      	bge.n	800767a <prvTimerTask+0x1a2>
				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
 8007672:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8007676:	9b03      	ldr	r3, [sp, #12]
 8007678:	4798      	blx	r3
		if( xMessage.xMessageID >= ( BaseType_t ) 0 )
 800767a:	9b02      	ldr	r3, [sp, #8]
 800767c:	2b00      	cmp	r3, #0
 800767e:	dbec      	blt.n	800765a <prvTimerTask+0x182>
			pxTimer = xMessage.u.xTimerParameters.pxTimer;
 8007680:	9c04      	ldr	r4, [sp, #16]
			if( listIS_CONTAINED_WITHIN( NULL, &( pxTimer->xTimerListItem ) ) == pdFALSE ) /*lint !e961. The cast is only redundant when NULL is passed into the macro. */
 8007682:	6963      	ldr	r3, [r4, #20]
 8007684:	b113      	cbz	r3, 800768c <prvTimerTask+0x1b4>
				( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 8007686:	1d20      	adds	r0, r4, #4
 8007688:	f7fe fa5f 	bl	8005b4a <uxListRemove>
	xTimeNow = xTaskGetTickCount();
 800768c:	f7ff fb3c 	bl	8006d08 <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
 8007690:	6833      	ldr	r3, [r6, #0]
 8007692:	4298      	cmp	r0, r3
	xTimeNow = xTaskGetTickCount();
 8007694:	4683      	mov	fp, r0
	if( xTimeNow < xLastTime )
 8007696:	d201      	bcs.n	800769c <prvTimerTask+0x1c4>
		prvSwitchTimerLists();
 8007698:	f7ff fede 	bl	8007458 <prvSwitchTimerLists>
			switch( xMessage.xMessageID )
 800769c:	9b02      	ldr	r3, [sp, #8]
	xLastTime = xTimeNow;
 800769e:	f8c6 b000 	str.w	fp, [r6]
			switch( xMessage.xMessageID )
 80076a2:	2b09      	cmp	r3, #9
 80076a4:	d8d9      	bhi.n	800765a <prvTimerTask+0x182>
 80076a6:	a201      	add	r2, pc, #4	; (adr r2, 80076ac <prvTimerTask+0x1d4>)
 80076a8:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80076ac:	080075c9 	.word	0x080075c9
 80076b0:	080075c9 	.word	0x080075c9
 80076b4:	080075c9 	.word	0x080075c9
 80076b8:	0800761d 	.word	0x0800761d
 80076bc:	0800762b 	.word	0x0800762b
 80076c0:	080076d5 	.word	0x080076d5
 80076c4:	080075c9 	.word	0x080075c9
 80076c8:	080075c9 	.word	0x080075c9
 80076cc:	0800761d 	.word	0x0800761d
 80076d0:	0800762b 	.word	0x0800762b
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_STATICALLY_ALLOCATED ) == ( uint8_t ) 0 )
 80076d4:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 80076d8:	079a      	lsls	r2, r3, #30
 80076da:	d4a1      	bmi.n	8007620 <prvTimerTask+0x148>
							vPortFree( pxTimer );
 80076dc:	4620      	mov	r0, r4
 80076de:	f7fe f9cb 	bl	8005a78 <vPortFree>
 80076e2:	e7ba      	b.n	800765a <prvTimerTask+0x182>
 80076e4:	20012040 	.word	0x20012040
 80076e8:	20012044 	.word	0x20012044
 80076ec:	20012164 	.word	0x20012164
 80076f0:	e000ed04 	.word	0xe000ed04
 80076f4:	20012110 	.word	0x20012110

080076f8 <_ZNK8touchgfx17AbstractPartition18getAllocationCountEv>:
 80076f8:	8880      	ldrh	r0, [r0, #4]
 80076fa:	4770      	bx	lr

080076fc <_ZN8touchgfx17AbstractPartition5clearEv>:
 80076fc:	2300      	movs	r3, #0
 80076fe:	8083      	strh	r3, [r0, #4]
 8007700:	4770      	bx	lr
	...

08007704 <_ZN8touchgfx17AbstractPartition7indexOfEPKv>:
 8007704:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8007706:	6803      	ldr	r3, [r0, #0]
 8007708:	4605      	mov	r5, r0
 800770a:	460e      	mov	r6, r1
 800770c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800770e:	2100      	movs	r1, #0
 8007710:	4798      	blx	r3
 8007712:	682b      	ldr	r3, [r5, #0]
 8007714:	4604      	mov	r4, r0
 8007716:	6a1b      	ldr	r3, [r3, #32]
 8007718:	4628      	mov	r0, r5
 800771a:	4798      	blx	r3
 800771c:	88ab      	ldrh	r3, [r5, #4]
 800771e:	1b34      	subs	r4, r6, r4
 8007720:	b2a4      	uxth	r4, r4
 8007722:	fbb4 f4f0 	udiv	r4, r4, r0
 8007726:	42a3      	cmp	r3, r4
 8007728:	d805      	bhi.n	8007736 <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x32>
 800772a:	4b0e      	ldr	r3, [pc, #56]	; (8007764 <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x60>)
 800772c:	4a0e      	ldr	r2, [pc, #56]	; (8007768 <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x64>)
 800772e:	2120      	movs	r1, #32
 8007730:	480e      	ldr	r0, [pc, #56]	; (800776c <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x68>)
 8007732:	f010 fc13 	bl	8017f5c <__assert_func>
 8007736:	682b      	ldr	r3, [r5, #0]
 8007738:	2100      	movs	r1, #0
 800773a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800773c:	4628      	mov	r0, r5
 800773e:	4798      	blx	r3
 8007740:	682b      	ldr	r3, [r5, #0]
 8007742:	4607      	mov	r7, r0
 8007744:	6a1b      	ldr	r3, [r3, #32]
 8007746:	4628      	mov	r0, r5
 8007748:	4798      	blx	r3
 800774a:	1bf3      	subs	r3, r6, r7
 800774c:	b29b      	uxth	r3, r3
 800774e:	fbb3 f2f0 	udiv	r2, r3, r0
 8007752:	fb02 3010 	mls	r0, r2, r0, r3
 8007756:	b118      	cbz	r0, 8007760 <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x5c>
 8007758:	4b05      	ldr	r3, [pc, #20]	; (8007770 <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x6c>)
 800775a:	4a03      	ldr	r2, [pc, #12]	; (8007768 <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x64>)
 800775c:	2121      	movs	r1, #33	; 0x21
 800775e:	e7e7      	b.n	8007730 <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x2c>
 8007760:	4620      	mov	r0, r4
 8007762:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8007764:	08019da6 	.word	0x08019da6
 8007768:	08019f12 	.word	0x08019f12
 800776c:	08019dbb 	.word	0x08019dbb
 8007770:	08019de9 	.word	0x08019de9

08007774 <_ZN8touchgfx17AbstractPartition8allocateEt>:
 8007774:	b538      	push	{r3, r4, r5, lr}
 8007776:	6803      	ldr	r3, [r0, #0]
 8007778:	6a1b      	ldr	r3, [r3, #32]
 800777a:	460d      	mov	r5, r1
 800777c:	4604      	mov	r4, r0
 800777e:	4798      	blx	r3
 8007780:	4285      	cmp	r5, r0
 8007782:	d905      	bls.n	8007790 <_ZN8touchgfx17AbstractPartition8allocateEt+0x1c>
 8007784:	4b0c      	ldr	r3, [pc, #48]	; (80077b8 <_ZN8touchgfx17AbstractPartition8allocateEt+0x44>)
 8007786:	4a0d      	ldr	r2, [pc, #52]	; (80077bc <_ZN8touchgfx17AbstractPartition8allocateEt+0x48>)
 8007788:	2132      	movs	r1, #50	; 0x32
 800778a:	480d      	ldr	r0, [pc, #52]	; (80077c0 <_ZN8touchgfx17AbstractPartition8allocateEt+0x4c>)
 800778c:	f010 fbe6 	bl	8017f5c <__assert_func>
 8007790:	6823      	ldr	r3, [r4, #0]
 8007792:	88a5      	ldrh	r5, [r4, #4]
 8007794:	69db      	ldr	r3, [r3, #28]
 8007796:	4620      	mov	r0, r4
 8007798:	4798      	blx	r3
 800779a:	4285      	cmp	r5, r0
 800779c:	d303      	bcc.n	80077a6 <_ZN8touchgfx17AbstractPartition8allocateEt+0x32>
 800779e:	4b09      	ldr	r3, [pc, #36]	; (80077c4 <_ZN8touchgfx17AbstractPartition8allocateEt+0x50>)
 80077a0:	4a06      	ldr	r2, [pc, #24]	; (80077bc <_ZN8touchgfx17AbstractPartition8allocateEt+0x48>)
 80077a2:	2133      	movs	r1, #51	; 0x33
 80077a4:	e7f1      	b.n	800778a <_ZN8touchgfx17AbstractPartition8allocateEt+0x16>
 80077a6:	6823      	ldr	r3, [r4, #0]
 80077a8:	88a1      	ldrh	r1, [r4, #4]
 80077aa:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80077ac:	4620      	mov	r0, r4
 80077ae:	4798      	blx	r3
 80077b0:	88a3      	ldrh	r3, [r4, #4]
 80077b2:	3301      	adds	r3, #1
 80077b4:	80a3      	strh	r3, [r4, #4]
 80077b6:	bd38      	pop	{r3, r4, r5, pc}
 80077b8:	08019e63 	.word	0x08019e63
 80077bc:	08019f55 	.word	0x08019f55
 80077c0:	08019dbb 	.word	0x08019dbb
 80077c4:	08019e7a 	.word	0x08019e7a

080077c8 <_ZN8touchgfx17AbstractPartition10allocateAtEtt>:
 80077c8:	b570      	push	{r4, r5, r6, lr}
 80077ca:	6803      	ldr	r3, [r0, #0]
 80077cc:	6a1b      	ldr	r3, [r3, #32]
 80077ce:	4616      	mov	r6, r2
 80077d0:	4604      	mov	r4, r0
 80077d2:	460d      	mov	r5, r1
 80077d4:	4798      	blx	r3
 80077d6:	4286      	cmp	r6, r0
 80077d8:	d905      	bls.n	80077e6 <_ZN8touchgfx17AbstractPartition10allocateAtEtt+0x1e>
 80077da:	4b06      	ldr	r3, [pc, #24]	; (80077f4 <_ZN8touchgfx17AbstractPartition10allocateAtEtt+0x2c>)
 80077dc:	4a06      	ldr	r2, [pc, #24]	; (80077f8 <_ZN8touchgfx17AbstractPartition10allocateAtEtt+0x30>)
 80077de:	4807      	ldr	r0, [pc, #28]	; (80077fc <_ZN8touchgfx17AbstractPartition10allocateAtEtt+0x34>)
 80077e0:	213c      	movs	r1, #60	; 0x3c
 80077e2:	f010 fbbb 	bl	8017f5c <__assert_func>
 80077e6:	6823      	ldr	r3, [r4, #0]
 80077e8:	4629      	mov	r1, r5
 80077ea:	4620      	mov	r0, r4
 80077ec:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80077ee:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80077f2:	4718      	bx	r3
 80077f4:	08019e63 	.word	0x08019e63
 80077f8:	08019ec8 	.word	0x08019ec8
 80077fc:	08019dbb 	.word	0x08019dbb

08007800 <_ZN8touchgfx17AbstractPartitionD1Ev>:
 8007800:	4770      	bx	lr
	...

08007804 <_ZN8touchgfx17AbstractPartitionC1Ev>:
 8007804:	4a02      	ldr	r2, [pc, #8]	; (8007810 <_ZN8touchgfx17AbstractPartitionC1Ev+0xc>)
 8007806:	6002      	str	r2, [r0, #0]
 8007808:	2200      	movs	r2, #0
 800780a:	8082      	strh	r2, [r0, #4]
 800780c:	4770      	bx	lr
 800780e:	bf00      	nop
 8007810:	08019e9c 	.word	0x08019e9c

08007814 <_ZN8touchgfx9Container8containsERKNS_8DrawableE>:
 8007814:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8007816:	2000      	movs	r0, #0
 8007818:	b12b      	cbz	r3, 8007826 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 800781a:	b920      	cbnz	r0, 8007826 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 800781c:	1a5a      	subs	r2, r3, r1
 800781e:	4250      	negs	r0, r2
 8007820:	4150      	adcs	r0, r2
 8007822:	699b      	ldr	r3, [r3, #24]
 8007824:	e7f8      	b.n	8007818 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x4>
 8007826:	4770      	bx	lr

08007828 <_ZN8touchgfx9Container9removeAllEv>:
 8007828:	2200      	movs	r2, #0
 800782a:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800782c:	b123      	cbz	r3, 8007838 <_ZN8touchgfx9Container9removeAllEv+0x10>
 800782e:	6999      	ldr	r1, [r3, #24]
 8007830:	6281      	str	r1, [r0, #40]	; 0x28
 8007832:	e9c3 2205 	strd	r2, r2, [r3, #20]
 8007836:	e7f8      	b.n	800782a <_ZN8touchgfx9Container9removeAllEv+0x2>
 8007838:	4770      	bx	lr

0800783a <_ZN8touchgfx9Container6unlinkEv>:
 800783a:	2300      	movs	r3, #0
 800783c:	6283      	str	r3, [r0, #40]	; 0x28
 800783e:	4770      	bx	lr

08007840 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>:
 8007840:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8007844:	461f      	mov	r7, r3
 8007846:	f890 3024 	ldrb.w	r3, [r0, #36]	; 0x24
 800784a:	460d      	mov	r5, r1
 800784c:	4616      	mov	r6, r2
 800784e:	b103      	cbz	r3, 8007852 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x12>
 8007850:	6038      	str	r0, [r7, #0]
 8007852:	6a84      	ldr	r4, [r0, #40]	; 0x28
 8007854:	b314      	cbz	r4, 800789c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x5c>
 8007856:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 800785a:	b1eb      	cbz	r3, 8007898 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800785c:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8007860:	428d      	cmp	r5, r1
 8007862:	db19      	blt.n	8007898 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 8007864:	8923      	ldrh	r3, [r4, #8]
 8007866:	b289      	uxth	r1, r1
 8007868:	440b      	add	r3, r1
 800786a:	b21b      	sxth	r3, r3
 800786c:	429d      	cmp	r5, r3
 800786e:	da13      	bge.n	8007898 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 8007870:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 8007874:	4296      	cmp	r6, r2
 8007876:	db0f      	blt.n	8007898 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 8007878:	8963      	ldrh	r3, [r4, #10]
 800787a:	b292      	uxth	r2, r2
 800787c:	4413      	add	r3, r2
 800787e:	b21b      	sxth	r3, r3
 8007880:	429e      	cmp	r6, r3
 8007882:	da09      	bge.n	8007898 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 8007884:	6823      	ldr	r3, [r4, #0]
 8007886:	1ab2      	subs	r2, r6, r2
 8007888:	1a69      	subs	r1, r5, r1
 800788a:	f8d3 801c 	ldr.w	r8, [r3, #28]
 800788e:	b212      	sxth	r2, r2
 8007890:	463b      	mov	r3, r7
 8007892:	b209      	sxth	r1, r1
 8007894:	4620      	mov	r0, r4
 8007896:	47c0      	blx	r8
 8007898:	69a4      	ldr	r4, [r4, #24]
 800789a:	e7db      	b.n	8007854 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x14>
 800789c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080078a0 <_ZNK8touchgfx9Container12getSolidRectEv>:
 80078a0:	2200      	movs	r2, #0
 80078a2:	8002      	strh	r2, [r0, #0]
 80078a4:	8042      	strh	r2, [r0, #2]
 80078a6:	8082      	strh	r2, [r0, #4]
 80078a8:	80c2      	strh	r2, [r0, #6]
 80078aa:	4770      	bx	lr

080078ac <_ZN8touchgfx9Container20moveChildrenRelativeEss>:
 80078ac:	b570      	push	{r4, r5, r6, lr}
 80078ae:	6a84      	ldr	r4, [r0, #40]	; 0x28
 80078b0:	460d      	mov	r5, r1
 80078b2:	4616      	mov	r6, r2
 80078b4:	b13c      	cbz	r4, 80078c6 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x1a>
 80078b6:	6823      	ldr	r3, [r4, #0]
 80078b8:	4620      	mov	r0, r4
 80078ba:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80078bc:	4632      	mov	r2, r6
 80078be:	4629      	mov	r1, r5
 80078c0:	4798      	blx	r3
 80078c2:	69a4      	ldr	r4, [r4, #24]
 80078c4:	e7f6      	b.n	80078b4 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x8>
 80078c6:	bd70      	pop	{r4, r5, r6, pc}

080078c8 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE>:
 80078c8:	b538      	push	{r3, r4, r5, lr}
 80078ca:	6a84      	ldr	r4, [r0, #40]	; 0x28
 80078cc:	460d      	mov	r5, r1
 80078ce:	b134      	cbz	r4, 80078de <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x16>
 80078d0:	682b      	ldr	r3, [r5, #0]
 80078d2:	4621      	mov	r1, r4
 80078d4:	689b      	ldr	r3, [r3, #8]
 80078d6:	4628      	mov	r0, r5
 80078d8:	4798      	blx	r3
 80078da:	69a4      	ldr	r4, [r4, #24]
 80078dc:	e7f7      	b.n	80078ce <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x6>
 80078de:	bd38      	pop	{r3, r4, r5, pc}

080078e0 <_ZN8touchgfx9ContainerD1Ev>:
 80078e0:	4770      	bx	lr

080078e2 <_ZN8touchgfx9ContainerD0Ev>:
 80078e2:	b510      	push	{r4, lr}
 80078e4:	212c      	movs	r1, #44	; 0x2c
 80078e6:	4604      	mov	r4, r0
 80078e8:	f010 fb0c 	bl	8017f04 <_ZdlPvj>
 80078ec:	4620      	mov	r0, r4
 80078ee:	bd10      	pop	{r4, pc}

080078f0 <_ZN8touchgfx9Container6removeERNS_8DrawableE>:
 80078f0:	6a83      	ldr	r3, [r0, #40]	; 0x28
 80078f2:	b19b      	cbz	r3, 800791c <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 80078f4:	428b      	cmp	r3, r1
 80078f6:	d109      	bne.n	800790c <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x1c>
 80078f8:	699a      	ldr	r2, [r3, #24]
 80078fa:	2100      	movs	r1, #0
 80078fc:	6159      	str	r1, [r3, #20]
 80078fe:	6282      	str	r2, [r0, #40]	; 0x28
 8007900:	b902      	cbnz	r2, 8007904 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x14>
 8007902:	4770      	bx	lr
 8007904:	6199      	str	r1, [r3, #24]
 8007906:	4770      	bx	lr
 8007908:	4613      	mov	r3, r2
 800790a:	b13a      	cbz	r2, 800791c <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 800790c:	699a      	ldr	r2, [r3, #24]
 800790e:	428a      	cmp	r2, r1
 8007910:	d1fa      	bne.n	8007908 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x18>
 8007912:	698a      	ldr	r2, [r1, #24]
 8007914:	619a      	str	r2, [r3, #24]
 8007916:	2300      	movs	r3, #0
 8007918:	e9c1 3305 	strd	r3, r3, [r1, #20]
 800791c:	4770      	bx	lr

0800791e <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_>:
 800791e:	b410      	push	{r4}
 8007920:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8007922:	4604      	mov	r4, r0
 8007924:	b92b      	cbnz	r3, 8007932 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x14>
 8007926:	6803      	ldr	r3, [r0, #0]
 8007928:	f85d 4b04 	ldr.w	r4, [sp], #4
 800792c:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 800792e:	4611      	mov	r1, r2
 8007930:	4718      	bx	r3
 8007932:	b941      	cbnz	r1, 8007946 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x28>
 8007934:	6193      	str	r3, [r2, #24]
 8007936:	6282      	str	r2, [r0, #40]	; 0x28
 8007938:	6154      	str	r4, [r2, #20]
 800793a:	f85d 4b04 	ldr.w	r4, [sp], #4
 800793e:	4770      	bx	lr
 8007940:	4603      	mov	r3, r0
 8007942:	2800      	cmp	r0, #0
 8007944:	d0f9      	beq.n	800793a <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1c>
 8007946:	4299      	cmp	r1, r3
 8007948:	6998      	ldr	r0, [r3, #24]
 800794a:	d1f9      	bne.n	8007940 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x22>
 800794c:	6190      	str	r0, [r2, #24]
 800794e:	618a      	str	r2, [r1, #24]
 8007950:	e7f2      	b.n	8007938 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1a>
	...

08007954 <_ZN8touchgfx9Container3addERNS_8DrawableE>:
 8007954:	4288      	cmp	r0, r1
 8007956:	b508      	push	{r3, lr}
 8007958:	d105      	bne.n	8007966 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x12>
 800795a:	4b11      	ldr	r3, [pc, #68]	; (80079a0 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x4c>)
 800795c:	4a11      	ldr	r2, [pc, #68]	; (80079a4 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x50>)
 800795e:	2123      	movs	r1, #35	; 0x23
 8007960:	4811      	ldr	r0, [pc, #68]	; (80079a8 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x54>)
 8007962:	f010 fafb 	bl	8017f5c <__assert_func>
 8007966:	694b      	ldr	r3, [r1, #20]
 8007968:	b11b      	cbz	r3, 8007972 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x1e>
 800796a:	4b10      	ldr	r3, [pc, #64]	; (80079ac <_ZN8touchgfx9Container3addERNS_8DrawableE+0x58>)
 800796c:	4a0d      	ldr	r2, [pc, #52]	; (80079a4 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x50>)
 800796e:	2124      	movs	r1, #36	; 0x24
 8007970:	e7f6      	b.n	8007960 <_ZN8touchgfx9Container3addERNS_8DrawableE+0xc>
 8007972:	e9c1 0305 	strd	r0, r3, [r1, #20]
 8007976:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8007978:	b913      	cbnz	r3, 8007980 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x2c>
 800797a:	6281      	str	r1, [r0, #40]	; 0x28
 800797c:	bd08      	pop	{r3, pc}
 800797e:	4613      	mov	r3, r2
 8007980:	699a      	ldr	r2, [r3, #24]
 8007982:	b12a      	cbz	r2, 8007990 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x3c>
 8007984:	428b      	cmp	r3, r1
 8007986:	d1fa      	bne.n	800797e <_ZN8touchgfx9Container3addERNS_8DrawableE+0x2a>
 8007988:	4b09      	ldr	r3, [pc, #36]	; (80079b0 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x5c>)
 800798a:	4a06      	ldr	r2, [pc, #24]	; (80079a4 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x50>)
 800798c:	2135      	movs	r1, #53	; 0x35
 800798e:	e7e7      	b.n	8007960 <_ZN8touchgfx9Container3addERNS_8DrawableE+0xc>
 8007990:	428b      	cmp	r3, r1
 8007992:	d103      	bne.n	800799c <_ZN8touchgfx9Container3addERNS_8DrawableE+0x48>
 8007994:	4b06      	ldr	r3, [pc, #24]	; (80079b0 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x5c>)
 8007996:	4a03      	ldr	r2, [pc, #12]	; (80079a4 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x50>)
 8007998:	2138      	movs	r1, #56	; 0x38
 800799a:	e7e1      	b.n	8007960 <_ZN8touchgfx9Container3addERNS_8DrawableE+0xc>
 800799c:	6199      	str	r1, [r3, #24]
 800799e:	e7ed      	b.n	800797c <_ZN8touchgfx9Container3addERNS_8DrawableE+0x28>
 80079a0:	08019f93 	.word	0x08019f93
 80079a4:	0801a0e8 	.word	0x0801a0e8
 80079a8:	08019fbf 	.word	0x08019fbf
 80079ac:	08019ff2 	.word	0x08019ff2
 80079b0:	0801a028 	.word	0x0801a028

080079b4 <_ZN8touchgfx4RectaNERKS0_>:
 80079b4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80079b8:	f9b1 7000 	ldrsh.w	r7, [r1]
 80079bc:	888c      	ldrh	r4, [r1, #4]
 80079be:	f9b0 9000 	ldrsh.w	r9, [r0]
 80079c2:	443c      	add	r4, r7
 80079c4:	b2a4      	uxth	r4, r4
 80079c6:	fa0f f884 	sxth.w	r8, r4
 80079ca:	45c1      	cmp	r9, r8
 80079cc:	da2f      	bge.n	8007a2e <_ZN8touchgfx4RectaNERKS0_+0x7a>
 80079ce:	8882      	ldrh	r2, [r0, #4]
 80079d0:	444a      	add	r2, r9
 80079d2:	b292      	uxth	r2, r2
 80079d4:	fa0f fe82 	sxth.w	lr, r2
 80079d8:	4577      	cmp	r7, lr
 80079da:	da28      	bge.n	8007a2e <_ZN8touchgfx4RectaNERKS0_+0x7a>
 80079dc:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
 80079e0:	88cb      	ldrh	r3, [r1, #6]
 80079e2:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 80079e6:	442b      	add	r3, r5
 80079e8:	b21b      	sxth	r3, r3
 80079ea:	429e      	cmp	r6, r3
 80079ec:	da1f      	bge.n	8007a2e <_ZN8touchgfx4RectaNERKS0_+0x7a>
 80079ee:	88c3      	ldrh	r3, [r0, #6]
 80079f0:	4433      	add	r3, r6
 80079f2:	b29b      	uxth	r3, r3
 80079f4:	fa0f fc83 	sxth.w	ip, r3
 80079f8:	4565      	cmp	r5, ip
 80079fa:	da18      	bge.n	8007a2e <_ZN8touchgfx4RectaNERKS0_+0x7a>
 80079fc:	454f      	cmp	r7, r9
 80079fe:	bfb8      	it	lt
 8007a00:	464f      	movlt	r7, r9
 8007a02:	42b5      	cmp	r5, r6
 8007a04:	bfb8      	it	lt
 8007a06:	4635      	movlt	r5, r6
 8007a08:	45f0      	cmp	r8, lr
 8007a0a:	bfd8      	it	le
 8007a0c:	4622      	movle	r2, r4
 8007a0e:	1bd2      	subs	r2, r2, r7
 8007a10:	8082      	strh	r2, [r0, #4]
 8007a12:	884a      	ldrh	r2, [r1, #2]
 8007a14:	88c9      	ldrh	r1, [r1, #6]
 8007a16:	8007      	strh	r7, [r0, #0]
 8007a18:	440a      	add	r2, r1
 8007a1a:	b292      	uxth	r2, r2
 8007a1c:	b211      	sxth	r1, r2
 8007a1e:	458c      	cmp	ip, r1
 8007a20:	bfa8      	it	ge
 8007a22:	4613      	movge	r3, r2
 8007a24:	1b5b      	subs	r3, r3, r5
 8007a26:	80c3      	strh	r3, [r0, #6]
 8007a28:	8045      	strh	r5, [r0, #2]
 8007a2a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8007a2e:	2300      	movs	r3, #0
 8007a30:	8003      	strh	r3, [r0, #0]
 8007a32:	8043      	strh	r3, [r0, #2]
 8007a34:	8083      	strh	r3, [r0, #4]
 8007a36:	80c3      	strh	r3, [r0, #6]
 8007a38:	e7f7      	b.n	8007a2a <_ZN8touchgfx4RectaNERKS0_+0x76>

08007a3a <_ZNK8touchgfx4Rect7isEmptyEv>:
 8007a3a:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8007a3e:	2b00      	cmp	r3, #0
 8007a40:	dd06      	ble.n	8007a50 <_ZNK8touchgfx4Rect7isEmptyEv+0x16>
 8007a42:	f9b0 0006 	ldrsh.w	r0, [r0, #6]
 8007a46:	2800      	cmp	r0, #0
 8007a48:	bfcc      	ite	gt
 8007a4a:	2000      	movgt	r0, #0
 8007a4c:	2001      	movle	r0, #1
 8007a4e:	4770      	bx	lr
 8007a50:	2001      	movs	r0, #1
 8007a52:	4770      	bx	lr

08007a54 <_ZNK8touchgfx9Container16getContainedAreaEv>:
 8007a54:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8007a58:	2300      	movs	r3, #0
 8007a5a:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 8007a5c:	8003      	strh	r3, [r0, #0]
 8007a5e:	4604      	mov	r4, r0
 8007a60:	8043      	strh	r3, [r0, #2]
 8007a62:	8083      	strh	r3, [r0, #4]
 8007a64:	80c3      	strh	r3, [r0, #6]
 8007a66:	2d00      	cmp	r5, #0
 8007a68:	d040      	beq.n	8007aec <_ZNK8touchgfx9Container16getContainedAreaEv+0x98>
 8007a6a:	1d28      	adds	r0, r5, #4
 8007a6c:	f7ff ffe5 	bl	8007a3a <_ZNK8touchgfx4Rect7isEmptyEv>
 8007a70:	b988      	cbnz	r0, 8007a96 <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 8007a72:	4620      	mov	r0, r4
 8007a74:	f7ff ffe1 	bl	8007a3a <_ZNK8touchgfx4Rect7isEmptyEv>
 8007a78:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 8007a7c:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 8007a80:	f9b5 e008 	ldrsh.w	lr, [r5, #8]
 8007a84:	f9b5 c00a 	ldrsh.w	ip, [r5, #10]
 8007a88:	b138      	cbz	r0, 8007a9a <_ZNK8touchgfx9Container16getContainedAreaEv+0x46>
 8007a8a:	8022      	strh	r2, [r4, #0]
 8007a8c:	8063      	strh	r3, [r4, #2]
 8007a8e:	f8a4 e004 	strh.w	lr, [r4, #4]
 8007a92:	f8a4 c006 	strh.w	ip, [r4, #6]
 8007a96:	69ad      	ldr	r5, [r5, #24]
 8007a98:	e7e5      	b.n	8007a66 <_ZNK8touchgfx9Container16getContainedAreaEv+0x12>
 8007a9a:	f9b4 0000 	ldrsh.w	r0, [r4]
 8007a9e:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 8007aa2:	f8b4 8004 	ldrh.w	r8, [r4, #4]
 8007aa6:	4290      	cmp	r0, r2
 8007aa8:	4607      	mov	r7, r0
 8007aaa:	bfa8      	it	ge
 8007aac:	4617      	movge	r7, r2
 8007aae:	4472      	add	r2, lr
 8007ab0:	f8b4 e006 	ldrh.w	lr, [r4, #6]
 8007ab4:	8027      	strh	r7, [r4, #0]
 8007ab6:	4299      	cmp	r1, r3
 8007ab8:	460e      	mov	r6, r1
 8007aba:	4440      	add	r0, r8
 8007abc:	bfa8      	it	ge
 8007abe:	461e      	movge	r6, r3
 8007ac0:	4471      	add	r1, lr
 8007ac2:	4463      	add	r3, ip
 8007ac4:	b200      	sxth	r0, r0
 8007ac6:	b212      	sxth	r2, r2
 8007ac8:	b209      	sxth	r1, r1
 8007aca:	b21b      	sxth	r3, r3
 8007acc:	4290      	cmp	r0, r2
 8007ace:	bfac      	ite	ge
 8007ad0:	ebc7 0200 	rsbge	r2, r7, r0
 8007ad4:	ebc7 0202 	rsblt	r2, r7, r2
 8007ad8:	4299      	cmp	r1, r3
 8007ada:	bfac      	ite	ge
 8007adc:	ebc6 0301 	rsbge	r3, r6, r1
 8007ae0:	ebc6 0303 	rsblt	r3, r6, r3
 8007ae4:	8066      	strh	r6, [r4, #2]
 8007ae6:	80a2      	strh	r2, [r4, #4]
 8007ae8:	80e3      	strh	r3, [r4, #6]
 8007aea:	e7d4      	b.n	8007a96 <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 8007aec:	4620      	mov	r0, r4
 8007aee:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08007af2 <_ZNK8touchgfx9Container4drawERKNS_4RectE>:
 8007af2:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8007af6:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 8007afa:	b383      	cbz	r3, 8007b5e <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 8007afc:	6a84      	ldr	r4, [r0, #40]	; 0x28
 8007afe:	b374      	cbz	r4, 8007b5e <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 8007b00:	f9b1 5000 	ldrsh.w	r5, [r1]
 8007b04:	f9b1 6002 	ldrsh.w	r6, [r1, #2]
 8007b08:	f9b1 7004 	ldrsh.w	r7, [r1, #4]
 8007b0c:	f9b1 8006 	ldrsh.w	r8, [r1, #6]
 8007b10:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 8007b14:	b303      	cbz	r3, 8007b58 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 8007b16:	4668      	mov	r0, sp
 8007b18:	1d21      	adds	r1, r4, #4
 8007b1a:	f8ad 5000 	strh.w	r5, [sp]
 8007b1e:	f8ad 6002 	strh.w	r6, [sp, #2]
 8007b22:	f8ad 7004 	strh.w	r7, [sp, #4]
 8007b26:	f8ad 8006 	strh.w	r8, [sp, #6]
 8007b2a:	f7ff ff43 	bl	80079b4 <_ZN8touchgfx4RectaNERKS0_>
 8007b2e:	4668      	mov	r0, sp
 8007b30:	f7ff ff83 	bl	8007a3a <_ZNK8touchgfx4Rect7isEmptyEv>
 8007b34:	b980      	cbnz	r0, 8007b58 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 8007b36:	f8bd 3000 	ldrh.w	r3, [sp]
 8007b3a:	88a2      	ldrh	r2, [r4, #4]
 8007b3c:	1a9b      	subs	r3, r3, r2
 8007b3e:	f8ad 3000 	strh.w	r3, [sp]
 8007b42:	88e2      	ldrh	r2, [r4, #6]
 8007b44:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8007b48:	1a9b      	subs	r3, r3, r2
 8007b4a:	f8ad 3002 	strh.w	r3, [sp, #2]
 8007b4e:	6823      	ldr	r3, [r4, #0]
 8007b50:	4669      	mov	r1, sp
 8007b52:	689b      	ldr	r3, [r3, #8]
 8007b54:	4620      	mov	r0, r4
 8007b56:	4798      	blx	r3
 8007b58:	69a4      	ldr	r4, [r4, #24]
 8007b5a:	2c00      	cmp	r4, #0
 8007b5c:	d1d8      	bne.n	8007b10 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x1e>
 8007b5e:	b002      	add	sp, #8
 8007b60:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08007b64 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>:
 8007b64:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8007b66:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 8007b6a:	460d      	mov	r5, r1
 8007b6c:	4616      	mov	r6, r2
 8007b6e:	b323      	cbz	r3, 8007bba <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 8007b70:	6a84      	ldr	r4, [r0, #40]	; 0x28
 8007b72:	b314      	cbz	r4, 8007bba <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 8007b74:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 8007b78:	b1eb      	cbz	r3, 8007bb6 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 8007b7a:	6828      	ldr	r0, [r5, #0]
 8007b7c:	6869      	ldr	r1, [r5, #4]
 8007b7e:	466b      	mov	r3, sp
 8007b80:	c303      	stmia	r3!, {r0, r1}
 8007b82:	4668      	mov	r0, sp
 8007b84:	1d21      	adds	r1, r4, #4
 8007b86:	f7ff ff15 	bl	80079b4 <_ZN8touchgfx4RectaNERKS0_>
 8007b8a:	4668      	mov	r0, sp
 8007b8c:	f7ff ff55 	bl	8007a3a <_ZNK8touchgfx4Rect7isEmptyEv>
 8007b90:	b988      	cbnz	r0, 8007bb6 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 8007b92:	f8bd 3000 	ldrh.w	r3, [sp]
 8007b96:	88a2      	ldrh	r2, [r4, #4]
 8007b98:	1a9b      	subs	r3, r3, r2
 8007b9a:	f8ad 3000 	strh.w	r3, [sp]
 8007b9e:	88e2      	ldrh	r2, [r4, #6]
 8007ba0:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8007ba4:	1a9b      	subs	r3, r3, r2
 8007ba6:	f8ad 3002 	strh.w	r3, [sp, #2]
 8007baa:	6823      	ldr	r3, [r4, #0]
 8007bac:	4632      	mov	r2, r6
 8007bae:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8007bb0:	4669      	mov	r1, sp
 8007bb2:	4620      	mov	r0, r4
 8007bb4:	4798      	blx	r3
 8007bb6:	69a4      	ldr	r4, [r4, #24]
 8007bb8:	e7db      	b.n	8007b72 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0xe>
 8007bba:	b002      	add	sp, #8
 8007bbc:	bd70      	pop	{r4, r5, r6, pc}

08007bbe <_ZNK8touchgfx6Slider15getIndicatorMinEv>:
 8007bbe:	f8b0 00ee 	ldrh.w	r0, [r0, #238]	; 0xee
 8007bc2:	4770      	bx	lr

08007bc4 <_ZNK8touchgfx6Slider15getIndicatorMaxEv>:
 8007bc4:	f8b0 00ee 	ldrh.w	r0, [r0, #238]	; 0xee
 8007bc8:	4770      	bx	lr

08007bca <_ZNK8touchgfx6Slider11getMinValueEv>:
 8007bca:	8e80      	ldrh	r0, [r0, #52]	; 0x34
 8007bcc:	4770      	bx	lr

08007bce <_ZNK8touchgfx6Slider11getMaxValueEv>:
 8007bce:	8f00      	ldrh	r0, [r0, #56]	; 0x38
 8007bd0:	4770      	bx	lr

08007bd2 <_ZN8touchgfx6Slider8setValueEi>:
 8007bd2:	b570      	push	{r4, r5, r6, lr}
 8007bd4:	6803      	ldr	r3, [r0, #0]
 8007bd6:	e9d3 532a 	ldrd	r5, r3, [r3, #168]	; 0xa8
 8007bda:	4604      	mov	r4, r0
 8007bdc:	4798      	blx	r3
 8007bde:	462b      	mov	r3, r5
 8007be0:	4601      	mov	r1, r0
 8007be2:	4620      	mov	r0, r4
 8007be4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8007be8:	4718      	bx	r3

08007bea <_ZNK8touchgfx6Slider15valueToPositionEi>:
 8007bea:	b538      	push	{r3, r4, r5, lr}
 8007bec:	e9d0 340d 	ldrd	r3, r4, [r0, #52]	; 0x34
 8007bf0:	428c      	cmp	r4, r1
 8007bf2:	bfa8      	it	ge
 8007bf4:	460c      	movge	r4, r1
 8007bf6:	429c      	cmp	r4, r3
 8007bf8:	bfac      	ite	ge
 8007bfa:	ebc3 0404 	rsbge	r4, r3, r4
 8007bfe:	ebc3 0403 	rsblt	r4, r3, r3
 8007c02:	6803      	ldr	r3, [r0, #0]
 8007c04:	4605      	mov	r5, r0
 8007c06:	f8d3 30b8 	ldr.w	r3, [r3, #184]	; 0xb8
 8007c0a:	4798      	blx	r3
 8007c0c:	682b      	ldr	r3, [r5, #0]
 8007c0e:	fb00 4404 	mla	r4, r0, r4, r4
 8007c12:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 8007c16:	4628      	mov	r0, r5
 8007c18:	4798      	blx	r3
 8007c1a:	f895 202c 	ldrb.w	r2, [r5, #44]	; 0x2c
 8007c1e:	f9b5 30ec 	ldrsh.w	r3, [r5, #236]	; 0xec
 8007c22:	fb94 f0f0 	sdiv	r0, r4, r0
 8007c26:	2a01      	cmp	r2, #1
 8007c28:	bf08      	it	eq
 8007c2a:	f9b5 20ee 	ldrsheq.w	r2, [r5, #238]	; 0xee
 8007c2e:	4418      	add	r0, r3
 8007c30:	bf04      	itt	eq
 8007c32:	1a10      	subeq	r0, r2, r0
 8007c34:	18c0      	addeq	r0, r0, r3
 8007c36:	b200      	sxth	r0, r0
 8007c38:	bd38      	pop	{r3, r4, r5, pc}

08007c3a <_ZNK8touchgfx6Slider15positionToValueEs>:
 8007c3a:	b570      	push	{r4, r5, r6, lr}
 8007c3c:	f9b0 30ec 	ldrsh.w	r3, [r0, #236]	; 0xec
 8007c40:	428b      	cmp	r3, r1
 8007c42:	4605      	mov	r5, r0
 8007c44:	460c      	mov	r4, r1
 8007c46:	d109      	bne.n	8007c5c <_ZNK8touchgfx6Slider15positionToValueEs+0x22>
 8007c48:	6b40      	ldr	r0, [r0, #52]	; 0x34
 8007c4a:	f895 302c 	ldrb.w	r3, [r5, #44]	; 0x2c
 8007c4e:	2b01      	cmp	r3, #1
 8007c50:	bf01      	itttt	eq
 8007c52:	6bab      	ldreq	r3, [r5, #56]	; 0x38
 8007c54:	1a18      	subeq	r0, r3, r0
 8007c56:	6b6b      	ldreq	r3, [r5, #52]	; 0x34
 8007c58:	18c0      	addeq	r0, r0, r3
 8007c5a:	bd70      	pop	{r4, r5, r6, pc}
 8007c5c:	f9b0 30ee 	ldrsh.w	r3, [r0, #238]	; 0xee
 8007c60:	428b      	cmp	r3, r1
 8007c62:	d101      	bne.n	8007c68 <_ZNK8touchgfx6Slider15positionToValueEs+0x2e>
 8007c64:	6b80      	ldr	r0, [r0, #56]	; 0x38
 8007c66:	e7f0      	b.n	8007c4a <_ZNK8touchgfx6Slider15positionToValueEs+0x10>
 8007c68:	6803      	ldr	r3, [r0, #0]
 8007c6a:	f8d3 30b8 	ldr.w	r3, [r3, #184]	; 0xb8
 8007c6e:	4798      	blx	r3
 8007c70:	682b      	ldr	r3, [r5, #0]
 8007c72:	f9b5 10ec 	ldrsh.w	r1, [r5, #236]	; 0xec
 8007c76:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 8007c7a:	4606      	mov	r6, r0
 8007c7c:	4628      	mov	r0, r5
 8007c7e:	1a64      	subs	r4, r4, r1
 8007c80:	4798      	blx	r3
 8007c82:	682b      	ldr	r3, [r5, #0]
 8007c84:	2102      	movs	r1, #2
 8007c86:	f8d3 30b8 	ldr.w	r3, [r3, #184]	; 0xb8
 8007c8a:	fb96 f6f1 	sdiv	r6, r6, r1
 8007c8e:	fb00 6404 	mla	r4, r0, r4, r6
 8007c92:	4628      	mov	r0, r5
 8007c94:	4798      	blx	r3
 8007c96:	6b6b      	ldr	r3, [r5, #52]	; 0x34
 8007c98:	fb94 f0f0 	sdiv	r0, r4, r0
 8007c9c:	4418      	add	r0, r3
 8007c9e:	e7d4      	b.n	8007c4a <_ZNK8touchgfx6Slider15positionToValueEs+0x10>

08007ca0 <_ZNK8touchgfx6Slider18getIndicatorRadiusEv>:
 8007ca0:	f890 202c 	ldrb.w	r2, [r0, #44]	; 0x2c
 8007ca4:	2302      	movs	r3, #2
 8007ca6:	b92a      	cbnz	r2, 8007cb4 <_ZNK8touchgfx6Slider18getIndicatorRadiusEv+0x14>
 8007ca8:	f9b0 009c 	ldrsh.w	r0, [r0, #156]	; 0x9c
 8007cac:	fb90 f0f3 	sdiv	r0, r0, r3
 8007cb0:	b280      	uxth	r0, r0
 8007cb2:	4770      	bx	lr
 8007cb4:	f9b0 009e 	ldrsh.w	r0, [r0, #158]	; 0x9e
 8007cb8:	e7f8      	b.n	8007cac <_ZNK8touchgfx6Slider18getIndicatorRadiusEv+0xc>

08007cba <_ZN8touchgfx6Slider13setValueRangeEii>:
 8007cba:	6b03      	ldr	r3, [r0, #48]	; 0x30
 8007cbc:	428b      	cmp	r3, r1
 8007cbe:	b410      	push	{r4}
 8007cc0:	db09      	blt.n	8007cd6 <_ZN8touchgfx6Slider13setValueRangeEii+0x1c>
 8007cc2:	4293      	cmp	r3, r2
 8007cc4:	bfa8      	it	ge
 8007cc6:	4613      	movge	r3, r2
 8007cc8:	6804      	ldr	r4, [r0, #0]
 8007cca:	f8d4 4094 	ldr.w	r4, [r4, #148]	; 0x94
 8007cce:	46a4      	mov	ip, r4
 8007cd0:	f85d 4b04 	ldr.w	r4, [sp], #4
 8007cd4:	4760      	bx	ip
 8007cd6:	460b      	mov	r3, r1
 8007cd8:	e7f6      	b.n	8007cc8 <_ZN8touchgfx6Slider13setValueRangeEii+0xe>

08007cda <_ZNK8touchgfx6Slider29getIndicatorPositionRangeSizeEv>:
 8007cda:	f9b0 20ee 	ldrsh.w	r2, [r0, #238]	; 0xee
 8007cde:	f9b0 00ec 	ldrsh.w	r0, [r0, #236]	; 0xec
 8007ce2:	1a10      	subs	r0, r2, r0
 8007ce4:	4770      	bx	lr

08007ce6 <_ZNK8touchgfx6Slider17getValueRangeSizeEv>:
 8007ce6:	e9d0 020d 	ldrd	r0, r2, [r0, #52]	; 0x34
 8007cea:	1a10      	subs	r0, r2, r0
 8007cec:	4770      	bx	lr

08007cee <_ZN8touchgfx6SliderD1Ev>:
 8007cee:	4770      	bx	lr

08007cf0 <_ZN8touchgfx6Slider23updateIndicatorPositionEs>:
 8007cf0:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8007cf4:	f9b0 60ec 	ldrsh.w	r6, [r0, #236]	; 0xec
 8007cf8:	428e      	cmp	r6, r1
 8007cfa:	4604      	mov	r4, r0
 8007cfc:	bfb8      	it	lt
 8007cfe:	460e      	movlt	r6, r1
 8007d00:	f9b0 10ee 	ldrsh.w	r1, [r0, #238]	; 0xee
 8007d04:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
 8007d08:	428e      	cmp	r6, r1
 8007d0a:	bfa8      	it	ge
 8007d0c:	460e      	movge	r6, r1
 8007d0e:	3094      	adds	r0, #148	; 0x94
 8007d10:	f104 07c0 	add.w	r7, r4, #192	; 0xc0
 8007d14:	fa1f f886 	uxth.w	r8, r6
 8007d18:	2b00      	cmp	r3, #0
 8007d1a:	d132      	bne.n	8007d82 <_ZN8touchgfx6Slider23updateIndicatorPositionEs+0x92>
 8007d1c:	f9b4 209a 	ldrsh.w	r2, [r4, #154]	; 0x9a
 8007d20:	4631      	mov	r1, r6
 8007d22:	f7fa fbd5 	bl	80024d0 <_ZN8touchgfx8Drawable6moveToEss>
 8007d26:	4638      	mov	r0, r7
 8007d28:	f003 f943 	bl	800afb2 <_ZNK8touchgfx8Drawable10invalidateEv>
 8007d2c:	6823      	ldr	r3, [r4, #0]
 8007d2e:	f8b4 20c4 	ldrh.w	r2, [r4, #196]	; 0xc4
 8007d32:	f8d3 30b4 	ldr.w	r3, [r3, #180]	; 0xb4
 8007d36:	4620      	mov	r0, r4
 8007d38:	eba8 0802 	sub.w	r8, r8, r2
 8007d3c:	4798      	blx	r3
 8007d3e:	fa1f f888 	uxth.w	r8, r8
 8007d42:	4480      	add	r8, r0
 8007d44:	f8a4 80c8 	strh.w	r8, [r4, #200]	; 0xc8
 8007d48:	4638      	mov	r0, r7
 8007d4a:	f003 f932 	bl	800afb2 <_ZNK8touchgfx8Drawable10invalidateEv>
 8007d4e:	6823      	ldr	r3, [r4, #0]
 8007d50:	4631      	mov	r1, r6
 8007d52:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 8007d56:	4620      	mov	r0, r4
 8007d58:	4798      	blx	r3
 8007d5a:	6320      	str	r0, [r4, #48]	; 0x30
 8007d5c:	f8d4 00f8 	ldr.w	r0, [r4, #248]	; 0xf8
 8007d60:	2800      	cmp	r0, #0
 8007d62:	d03c      	beq.n	8007dde <_ZN8touchgfx6Slider23updateIndicatorPositionEs+0xee>
 8007d64:	6803      	ldr	r3, [r0, #0]
 8007d66:	68db      	ldr	r3, [r3, #12]
 8007d68:	4798      	blx	r3
 8007d6a:	2800      	cmp	r0, #0
 8007d6c:	d037      	beq.n	8007dde <_ZN8touchgfx6Slider23updateIndicatorPositionEs+0xee>
 8007d6e:	f8d4 00f8 	ldr.w	r0, [r4, #248]	; 0xf8
 8007d72:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8007d74:	6803      	ldr	r3, [r0, #0]
 8007d76:	689b      	ldr	r3, [r3, #8]
 8007d78:	4621      	mov	r1, r4
 8007d7a:	b003      	add	sp, #12
 8007d7c:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8007d80:	4718      	bx	r3
 8007d82:	4632      	mov	r2, r6
 8007d84:	f9b4 1098 	ldrsh.w	r1, [r4, #152]	; 0x98
 8007d88:	f7fa fba2 	bl	80024d0 <_ZN8touchgfx8Drawable6moveToEss>
 8007d8c:	4638      	mov	r0, r7
 8007d8e:	f003 f910 	bl	800afb2 <_ZNK8touchgfx8Drawable10invalidateEv>
 8007d92:	f8b4 0042 	ldrh.w	r0, [r4, #66]	; 0x42
 8007d96:	f8b4 5046 	ldrh.w	r5, [r4, #70]	; 0x46
 8007d9a:	6823      	ldr	r3, [r4, #0]
 8007d9c:	4405      	add	r5, r0
 8007d9e:	f8d3 30b4 	ldr.w	r3, [r3, #180]	; 0xb4
 8007da2:	4620      	mov	r0, r4
 8007da4:	4798      	blx	r3
 8007da6:	b2ad      	uxth	r5, r5
 8007da8:	6823      	ldr	r3, [r4, #0]
 8007daa:	f9b4 90c4 	ldrsh.w	r9, [r4, #196]	; 0xc4
 8007dae:	f8d3 30b4 	ldr.w	r3, [r3, #180]	; 0xb4
 8007db2:	eba5 0508 	sub.w	r5, r5, r8
 8007db6:	1a2d      	subs	r5, r5, r0
 8007db8:	4620      	mov	r0, r4
 8007dba:	4798      	blx	r3
 8007dbc:	b2ad      	uxth	r5, r5
 8007dbe:	b22a      	sxth	r2, r5
 8007dc0:	4440      	add	r0, r8
 8007dc2:	9200      	str	r2, [sp, #0]
 8007dc4:	f9b4 30c8 	ldrsh.w	r3, [r4, #200]	; 0xc8
 8007dc8:	b202      	sxth	r2, r0
 8007dca:	4649      	mov	r1, r9
 8007dcc:	4638      	mov	r0, r7
 8007dce:	f7fa fb51 	bl	8002474 <_ZN8touchgfx8Drawable11setPositionEssss>
 8007dd2:	f8b4 0072 	ldrh.w	r0, [r4, #114]	; 0x72
 8007dd6:	1a2d      	subs	r5, r5, r0
 8007dd8:	f8a4 506e 	strh.w	r5, [r4, #110]	; 0x6e
 8007ddc:	e7b4      	b.n	8007d48 <_ZN8touchgfx6Slider23updateIndicatorPositionEs+0x58>
 8007dde:	b003      	add	sp, #12
 8007de0:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

08007de4 <_ZN8touchgfx6SliderD0Ev>:
 8007de4:	b510      	push	{r4, lr}
 8007de6:	21fc      	movs	r1, #252	; 0xfc
 8007de8:	4604      	mov	r4, r0
 8007dea:	f010 f88b 	bl	8017f04 <_ZdlPvj>
 8007dee:	4620      	mov	r0, r4
 8007df0:	bd10      	pop	{r4, pc}
	...

08007df4 <_ZN8touchgfx6Slider21setupHorizontalSliderEttttt>:
 8007df4:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8007df8:	f8bd 8030 	ldrh.w	r8, [sp, #48]	; 0x30
 8007dfc:	f8bd 7034 	ldrh.w	r7, [sp, #52]	; 0x34
 8007e00:	45b8      	cmp	r8, r7
 8007e02:	4604      	mov	r4, r0
 8007e04:	4689      	mov	r9, r1
 8007e06:	4616      	mov	r6, r2
 8007e08:	461d      	mov	r5, r3
 8007e0a:	d305      	bcc.n	8007e18 <_ZN8touchgfx6Slider21setupHorizontalSliderEttttt+0x24>
 8007e0c:	4b28      	ldr	r3, [pc, #160]	; (8007eb0 <_ZN8touchgfx6Slider21setupHorizontalSliderEttttt+0xbc>)
 8007e0e:	4a29      	ldr	r2, [pc, #164]	; (8007eb4 <_ZN8touchgfx6Slider21setupHorizontalSliderEttttt+0xc0>)
 8007e10:	4829      	ldr	r0, [pc, #164]	; (8007eb8 <_ZN8touchgfx6Slider21setupHorizontalSliderEttttt+0xc4>)
 8007e12:	2143      	movs	r1, #67	; 0x43
 8007e14:	f010 f8a2 	bl	8017f5c <__assert_func>
 8007e18:	f04f 0a00 	mov.w	sl, #0
 8007e1c:	b213      	sxth	r3, r2
 8007e1e:	fa0f fb81 	sxth.w	fp, r1
 8007e22:	f880 a02c 	strb.w	sl, [r0, #44]	; 0x2c
 8007e26:	461a      	mov	r2, r3
 8007e28:	4659      	mov	r1, fp
 8007e2a:	303c      	adds	r0, #60	; 0x3c
 8007e2c:	9301      	str	r3, [sp, #4]
 8007e2e:	f7fa fb39 	bl	80024a4 <_ZN8touchgfx8Drawable5setXYEss>
 8007e32:	9b01      	ldr	r3, [sp, #4]
 8007e34:	4659      	mov	r1, fp
 8007e36:	461a      	mov	r2, r3
 8007e38:	f104 00c0 	add.w	r0, r4, #192	; 0xc0
 8007e3c:	f7fa fb32 	bl	80024a4 <_ZN8touchgfx8Drawable5setXYEss>
 8007e40:	4652      	mov	r2, sl
 8007e42:	4651      	mov	r1, sl
 8007e44:	f104 0068 	add.w	r0, r4, #104	; 0x68
 8007e48:	f7fa fb2c 	bl	80024a4 <_ZN8touchgfx8Drawable5setXYEss>
 8007e4c:	f8b4 1044 	ldrh.w	r1, [r4, #68]	; 0x44
 8007e50:	f8a4 509a 	strh.w	r5, [r4, #154]	; 0x9a
 8007e54:	4449      	add	r1, r9
 8007e56:	b28b      	uxth	r3, r1
 8007e58:	f8b4 109c 	ldrh.w	r1, [r4, #156]	; 0x9c
 8007e5c:	f8a4 80ec 	strh.w	r8, [r4, #236]	; 0xec
 8007e60:	4439      	add	r1, r7
 8007e62:	b289      	uxth	r1, r1
 8007e64:	428b      	cmp	r3, r1
 8007e66:	bf88      	it	hi
 8007e68:	b219      	sxthhi	r1, r3
 8007e6a:	f8b4 3046 	ldrh.w	r3, [r4, #70]	; 0x46
 8007e6e:	f8a4 70ee 	strh.w	r7, [r4, #238]	; 0xee
 8007e72:	441e      	add	r6, r3
 8007e74:	f8b4 309e 	ldrh.w	r3, [r4, #158]	; 0x9e
 8007e78:	441d      	add	r5, r3
 8007e7a:	6823      	ldr	r3, [r4, #0]
 8007e7c:	b2ad      	uxth	r5, r5
 8007e7e:	b2b6      	uxth	r6, r6
 8007e80:	bf98      	it	ls
 8007e82:	b209      	sxthls	r1, r1
 8007e84:	4620      	mov	r0, r4
 8007e86:	42ae      	cmp	r6, r5
 8007e88:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8007e8a:	bf8c      	ite	hi
 8007e8c:	b235      	sxthhi	r5, r6
 8007e8e:	b22d      	sxthls	r5, r5
 8007e90:	4798      	blx	r3
 8007e92:	6823      	ldr	r3, [r4, #0]
 8007e94:	4629      	mov	r1, r5
 8007e96:	4620      	mov	r0, r4
 8007e98:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8007e9a:	4798      	blx	r3
 8007e9c:	6823      	ldr	r3, [r4, #0]
 8007e9e:	6b21      	ldr	r1, [r4, #48]	; 0x30
 8007ea0:	f8d3 30a4 	ldr.w	r3, [r3, #164]	; 0xa4
 8007ea4:	4620      	mov	r0, r4
 8007ea6:	b003      	add	sp, #12
 8007ea8:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8007eac:	4718      	bx	r3
 8007eae:	bf00      	nop
 8007eb0:	0801a2cc 	.word	0x0801a2cc
 8007eb4:	0801a546 	.word	0x0801a546
 8007eb8:	0801a340 	.word	0x0801a340

08007ebc <_ZN8touchgfx6Slider19setupVerticalSliderEttttt>:
 8007ebc:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8007ec0:	f8bd 7028 	ldrh.w	r7, [sp, #40]	; 0x28
 8007ec4:	f8bd 602c 	ldrh.w	r6, [sp, #44]	; 0x2c
 8007ec8:	42b7      	cmp	r7, r6
 8007eca:	4604      	mov	r4, r0
 8007ecc:	4689      	mov	r9, r1
 8007ece:	4690      	mov	r8, r2
 8007ed0:	461d      	mov	r5, r3
 8007ed2:	d305      	bcc.n	8007ee0 <_ZN8touchgfx6Slider19setupVerticalSliderEttttt+0x24>
 8007ed4:	4b25      	ldr	r3, [pc, #148]	; (8007f6c <_ZN8touchgfx6Slider19setupVerticalSliderEttttt+0xb0>)
 8007ed6:	4a26      	ldr	r2, [pc, #152]	; (8007f70 <_ZN8touchgfx6Slider19setupVerticalSliderEttttt+0xb4>)
 8007ed8:	4826      	ldr	r0, [pc, #152]	; (8007f74 <_ZN8touchgfx6Slider19setupVerticalSliderEttttt+0xb8>)
 8007eda:	215f      	movs	r1, #95	; 0x5f
 8007edc:	f010 f83e 	bl	8017f5c <__assert_func>
 8007ee0:	2301      	movs	r3, #1
 8007ee2:	fa0f fa81 	sxth.w	sl, r1
 8007ee6:	fa0f fb82 	sxth.w	fp, r2
 8007eea:	f880 302c 	strb.w	r3, [r0, #44]	; 0x2c
 8007eee:	465a      	mov	r2, fp
 8007ef0:	4651      	mov	r1, sl
 8007ef2:	303c      	adds	r0, #60	; 0x3c
 8007ef4:	f7fa fad6 	bl	80024a4 <_ZN8touchgfx8Drawable5setXYEss>
 8007ef8:	465a      	mov	r2, fp
 8007efa:	4651      	mov	r1, sl
 8007efc:	f104 00c0 	add.w	r0, r4, #192	; 0xc0
 8007f00:	f7fa fad0 	bl	80024a4 <_ZN8touchgfx8Drawable5setXYEss>
 8007f04:	f8b4 1044 	ldrh.w	r1, [r4, #68]	; 0x44
 8007f08:	f8a4 5098 	strh.w	r5, [r4, #152]	; 0x98
 8007f0c:	4489      	add	r9, r1
 8007f0e:	f8b4 109c 	ldrh.w	r1, [r4, #156]	; 0x9c
 8007f12:	6823      	ldr	r3, [r4, #0]
 8007f14:	f8a4 70ec 	strh.w	r7, [r4, #236]	; 0xec
 8007f18:	4429      	add	r1, r5
 8007f1a:	f8b4 5046 	ldrh.w	r5, [r4, #70]	; 0x46
 8007f1e:	f8a4 60ee 	strh.w	r6, [r4, #238]	; 0xee
 8007f22:	44a8      	add	r8, r5
 8007f24:	f8b4 509e 	ldrh.w	r5, [r4, #158]	; 0x9e
 8007f28:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8007f2a:	b289      	uxth	r1, r1
 8007f2c:	fa1f f989 	uxth.w	r9, r9
 8007f30:	4435      	add	r5, r6
 8007f32:	4589      	cmp	r9, r1
 8007f34:	b2ad      	uxth	r5, r5
 8007f36:	fa1f f888 	uxth.w	r8, r8
 8007f3a:	bf8c      	ite	hi
 8007f3c:	fa0f f189 	sxthhi.w	r1, r9
 8007f40:	b209      	sxthls	r1, r1
 8007f42:	4620      	mov	r0, r4
 8007f44:	45a8      	cmp	r8, r5
 8007f46:	bf8c      	ite	hi
 8007f48:	fa0f f588 	sxthhi.w	r5, r8
 8007f4c:	b22d      	sxthls	r5, r5
 8007f4e:	4798      	blx	r3
 8007f50:	6823      	ldr	r3, [r4, #0]
 8007f52:	4629      	mov	r1, r5
 8007f54:	4620      	mov	r0, r4
 8007f56:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8007f58:	4798      	blx	r3
 8007f5a:	6823      	ldr	r3, [r4, #0]
 8007f5c:	6b21      	ldr	r1, [r4, #48]	; 0x30
 8007f5e:	f8d3 30a4 	ldr.w	r3, [r3, #164]	; 0xa4
 8007f62:	4620      	mov	r0, r4
 8007f64:	b001      	add	sp, #4
 8007f66:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8007f6a:	4718      	bx	r3
 8007f6c:	0801a25a 	.word	0x0801a25a
 8007f70:	0801a4e1 	.word	0x0801a4e1
 8007f74:	0801a340 	.word	0x0801a340

08007f78 <_ZN8touchgfx6Slider13setValueRangeEiii>:
 8007f78:	4291      	cmp	r1, r2
 8007f7a:	b510      	push	{r4, lr}
 8007f7c:	db06      	blt.n	8007f8c <_ZN8touchgfx6Slider13setValueRangeEiii+0x14>
 8007f7e:	4b08      	ldr	r3, [pc, #32]	; (8007fa0 <_ZN8touchgfx6Slider13setValueRangeEiii+0x28>)
 8007f80:	4a08      	ldr	r2, [pc, #32]	; (8007fa4 <_ZN8touchgfx6Slider13setValueRangeEiii+0x2c>)
 8007f82:	4809      	ldr	r0, [pc, #36]	; (8007fa8 <_ZN8touchgfx6Slider13setValueRangeEiii+0x30>)
 8007f84:	f240 1107 	movw	r1, #263	; 0x107
 8007f88:	f00f ffe8 	bl	8017f5c <__assert_func>
 8007f8c:	e9c0 120d 	strd	r1, r2, [r0, #52]	; 0x34
 8007f90:	6802      	ldr	r2, [r0, #0]
 8007f92:	4619      	mov	r1, r3
 8007f94:	f8d2 20a4 	ldr.w	r2, [r2, #164]	; 0xa4
 8007f98:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8007f9c:	4710      	bx	r2
 8007f9e:	bf00      	nop
 8007fa0:	0801a202 	.word	0x0801a202
 8007fa4:	0801a4a5 	.word	0x0801a4a5
 8007fa8:	0801a340 	.word	0x0801a340

08007fac <_ZN8touchgfx6Slider16handleClickEventERKNS_10ClickEventE>:
 8007fac:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8007fb0:	790b      	ldrb	r3, [r1, #4]
 8007fb2:	4604      	mov	r4, r0
 8007fb4:	460d      	mov	r5, r1
 8007fb6:	b323      	cbz	r3, 8008002 <_ZN8touchgfx6Slider16handleClickEventERKNS_10ClickEventE+0x56>
 8007fb8:	2b01      	cmp	r3, #1
 8007fba:	d135      	bne.n	8008028 <_ZN8touchgfx6Slider16handleClickEventERKNS_10ClickEventE+0x7c>
 8007fbc:	6823      	ldr	r3, [r4, #0]
 8007fbe:	f894 202c 	ldrb.w	r2, [r4, #44]	; 0x2c
 8007fc2:	f8d3 70a8 	ldr.w	r7, [r3, #168]	; 0xa8
 8007fc6:	f8d3 30b4 	ldr.w	r3, [r3, #180]	; 0xb4
 8007fca:	2a00      	cmp	r2, #0
 8007fcc:	d12a      	bne.n	8008024 <_ZN8touchgfx6Slider16handleClickEventERKNS_10ClickEventE+0x78>
 8007fce:	88ee      	ldrh	r6, [r5, #6]
 8007fd0:	4620      	mov	r0, r4
 8007fd2:	4798      	blx	r3
 8007fd4:	1a31      	subs	r1, r6, r0
 8007fd6:	b209      	sxth	r1, r1
 8007fd8:	4620      	mov	r0, r4
 8007fda:	47b8      	blx	r7
 8007fdc:	792b      	ldrb	r3, [r5, #4]
 8007fde:	2b01      	cmp	r3, #1
 8007fe0:	d122      	bne.n	8008028 <_ZN8touchgfx6Slider16handleClickEventERKNS_10ClickEventE+0x7c>
 8007fe2:	f8d4 00f4 	ldr.w	r0, [r4, #244]	; 0xf4
 8007fe6:	b1f8      	cbz	r0, 8008028 <_ZN8touchgfx6Slider16handleClickEventERKNS_10ClickEventE+0x7c>
 8007fe8:	6803      	ldr	r3, [r0, #0]
 8007fea:	68db      	ldr	r3, [r3, #12]
 8007fec:	4798      	blx	r3
 8007fee:	b1d8      	cbz	r0, 8008028 <_ZN8touchgfx6Slider16handleClickEventERKNS_10ClickEventE+0x7c>
 8007ff0:	f8d4 00f4 	ldr.w	r0, [r4, #244]	; 0xf4
 8007ff4:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8007ff6:	6803      	ldr	r3, [r0, #0]
 8007ff8:	4621      	mov	r1, r4
 8007ffa:	689b      	ldr	r3, [r3, #8]
 8007ffc:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8008000:	4718      	bx	r3
 8008002:	f8d0 00f0 	ldr.w	r0, [r0, #240]	; 0xf0
 8008006:	2800      	cmp	r0, #0
 8008008:	d0d8      	beq.n	8007fbc <_ZN8touchgfx6Slider16handleClickEventERKNS_10ClickEventE+0x10>
 800800a:	6803      	ldr	r3, [r0, #0]
 800800c:	68db      	ldr	r3, [r3, #12]
 800800e:	4798      	blx	r3
 8008010:	2800      	cmp	r0, #0
 8008012:	d0d3      	beq.n	8007fbc <_ZN8touchgfx6Slider16handleClickEventERKNS_10ClickEventE+0x10>
 8008014:	f8d4 00f0 	ldr.w	r0, [r4, #240]	; 0xf0
 8008018:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800801a:	6803      	ldr	r3, [r0, #0]
 800801c:	4621      	mov	r1, r4
 800801e:	689b      	ldr	r3, [r3, #8]
 8008020:	4798      	blx	r3
 8008022:	e7cb      	b.n	8007fbc <_ZN8touchgfx6Slider16handleClickEventERKNS_10ClickEventE+0x10>
 8008024:	892e      	ldrh	r6, [r5, #8]
 8008026:	e7d3      	b.n	8007fd0 <_ZN8touchgfx6Slider16handleClickEventERKNS_10ClickEventE+0x24>
 8008028:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800802c <_ZN8touchgfx6Slider15handleDragEventERKNS_9DragEventE>:
 800802c:	b570      	push	{r4, r5, r6, lr}
 800802e:	6803      	ldr	r3, [r0, #0]
 8008030:	f890 202c 	ldrb.w	r2, [r0, #44]	; 0x2c
 8008034:	f8d3 60a8 	ldr.w	r6, [r3, #168]	; 0xa8
 8008038:	f8d3 30b4 	ldr.w	r3, [r3, #180]	; 0xb4
 800803c:	4604      	mov	r4, r0
 800803e:	b942      	cbnz	r2, 8008052 <_ZN8touchgfx6Slider15handleDragEventERKNS_9DragEventE+0x26>
 8008040:	894d      	ldrh	r5, [r1, #10]
 8008042:	4798      	blx	r3
 8008044:	1a29      	subs	r1, r5, r0
 8008046:	4633      	mov	r3, r6
 8008048:	4620      	mov	r0, r4
 800804a:	b209      	sxth	r1, r1
 800804c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8008050:	4718      	bx	r3
 8008052:	898d      	ldrh	r5, [r1, #12]
 8008054:	e7f5      	b.n	8008042 <_ZN8touchgfx6Slider15handleDragEventERKNS_9DragEventE+0x16>
	...

08008058 <_ZN8touchgfx9ContainerC1Ev>:
 8008058:	2101      	movs	r1, #1
 800805a:	2200      	movs	r2, #0
 800805c:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
 8008060:	4908      	ldr	r1, [pc, #32]	; (8008084 <_ZN8touchgfx9ContainerC1Ev+0x2c>)
 8008062:	8082      	strh	r2, [r0, #4]
 8008064:	80c2      	strh	r2, [r0, #6]
 8008066:	8102      	strh	r2, [r0, #8]
 8008068:	8142      	strh	r2, [r0, #10]
 800806a:	8182      	strh	r2, [r0, #12]
 800806c:	81c2      	strh	r2, [r0, #14]
 800806e:	8202      	strh	r2, [r0, #16]
 8008070:	8242      	strh	r2, [r0, #18]
 8008072:	e9c0 2205 	strd	r2, r2, [r0, #20]
 8008076:	61c2      	str	r2, [r0, #28]
 8008078:	f880 2024 	strb.w	r2, [r0, #36]	; 0x24
 800807c:	6001      	str	r1, [r0, #0]
 800807e:	6282      	str	r2, [r0, #40]	; 0x28
 8008080:	4770      	bx	lr
 8008082:	bf00      	nop
 8008084:	0801a064 	.word	0x0801a064

08008088 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>:
 8008088:	b510      	push	{r4, lr}
 800808a:	2300      	movs	r3, #0
 800808c:	8083      	strh	r3, [r0, #4]
 800808e:	80c3      	strh	r3, [r0, #6]
 8008090:	8103      	strh	r3, [r0, #8]
 8008092:	8143      	strh	r3, [r0, #10]
 8008094:	8183      	strh	r3, [r0, #12]
 8008096:	81c3      	strh	r3, [r0, #14]
 8008098:	8203      	strh	r3, [r0, #16]
 800809a:	8243      	strh	r3, [r0, #18]
 800809c:	e9c0 3305 	strd	r3, r3, [r0, #20]
 80080a0:	61c3      	str	r3, [r0, #28]
 80080a2:	f880 3024 	strb.w	r3, [r0, #36]	; 0x24
 80080a6:	2301      	movs	r3, #1
 80080a8:	f880 3025 	strb.w	r3, [r0, #37]	; 0x25
 80080ac:	4b05      	ldr	r3, [pc, #20]	; (80080c4 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE+0x3c>)
 80080ae:	6003      	str	r3, [r0, #0]
 80080b0:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80080b4:	4604      	mov	r4, r0
 80080b6:	84c3      	strh	r3, [r0, #38]	; 0x26
 80080b8:	f880 3028 	strb.w	r3, [r0, #40]	; 0x28
 80080bc:	f001 fa51 	bl	8009562 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80080c0:	4620      	mov	r0, r4
 80080c2:	bd10      	pop	{r4, pc}
 80080c4:	0801aed4 	.word	0x0801aed4

080080c8 <_ZN8touchgfx6SliderC1Ev>:
 80080c8:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80080cc:	ae02      	add	r6, sp, #8
 80080ce:	f64f 77ff 	movw	r7, #65535	; 0xffff
 80080d2:	4604      	mov	r4, r0
 80080d4:	f7ff ffc0 	bl	8008058 <_ZN8touchgfx9ContainerC1Ev>
 80080d8:	f826 7d04 	strh.w	r7, [r6, #-4]!
 80080dc:	4b23      	ldr	r3, [pc, #140]	; (800816c <_ZN8touchgfx6SliderC1Ev+0xa4>)
 80080de:	6023      	str	r3, [r4, #0]
 80080e0:	2500      	movs	r5, #0
 80080e2:	f04f 0b01 	mov.w	fp, #1
 80080e6:	f104 093c 	add.w	r9, r4, #60	; 0x3c
 80080ea:	4631      	mov	r1, r6
 80080ec:	f104 0a68 	add.w	sl, r4, #104	; 0x68
 80080f0:	f884 502c 	strb.w	r5, [r4, #44]	; 0x2c
 80080f4:	e9c4 550c 	strd	r5, r5, [r4, #48]	; 0x30
 80080f8:	f8c4 b038 	str.w	fp, [r4, #56]	; 0x38
 80080fc:	4648      	mov	r0, r9
 80080fe:	f7ff ffc3 	bl	8008088 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 8008102:	f104 0894 	add.w	r8, r4, #148	; 0x94
 8008106:	4631      	mov	r1, r6
 8008108:	4650      	mov	r0, sl
 800810a:	f8ad 7004 	strh.w	r7, [sp, #4]
 800810e:	f7ff ffbb 	bl	8008088 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 8008112:	4631      	mov	r1, r6
 8008114:	4640      	mov	r0, r8
 8008116:	f104 06c0 	add.w	r6, r4, #192	; 0xc0
 800811a:	f8ad 7004 	strh.w	r7, [sp, #4]
 800811e:	f7ff ffb3 	bl	8008088 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 8008122:	4630      	mov	r0, r6
 8008124:	f7ff ff98 	bl	8008058 <_ZN8touchgfx9ContainerC1Ev>
 8008128:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 800812c:	e9c4 353b 	strd	r3, r5, [r4, #236]	; 0xec
 8008130:	4651      	mov	r1, sl
 8008132:	4630      	mov	r0, r6
 8008134:	e9c4 553d 	strd	r5, r5, [r4, #244]	; 0xf4
 8008138:	f884 b024 	strb.w	fp, [r4, #36]	; 0x24
 800813c:	f7ff fc0a 	bl	8007954 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8008140:	4649      	mov	r1, r9
 8008142:	4620      	mov	r0, r4
 8008144:	f7ff fc06 	bl	8007954 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8008148:	4631      	mov	r1, r6
 800814a:	4620      	mov	r0, r4
 800814c:	f7ff fc02 	bl	8007954 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8008150:	4641      	mov	r1, r8
 8008152:	4620      	mov	r0, r4
 8008154:	f7ff fbfe 	bl	8007954 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8008158:	4620      	mov	r0, r4
 800815a:	2264      	movs	r2, #100	; 0x64
 800815c:	4629      	mov	r1, r5
 800815e:	f7ff fdac 	bl	8007cba <_ZN8touchgfx6Slider13setValueRangeEii>
 8008162:	4620      	mov	r0, r4
 8008164:	b003      	add	sp, #12
 8008166:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800816a:	bf00      	nop
 800816c:	0801a378 	.word	0x0801a378

08008170 <_ZN8touchgfx6Slider10setBitmapsERKNS_6BitmapES3_S3_>:
 8008170:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8008174:	4604      	mov	r4, r0
 8008176:	4608      	mov	r0, r1
 8008178:	4615      	mov	r5, r2
 800817a:	460e      	mov	r6, r1
 800817c:	461f      	mov	r7, r3
 800817e:	f004 fa1f 	bl	800c5c0 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8008182:	4680      	mov	r8, r0
 8008184:	4628      	mov	r0, r5
 8008186:	f004 fa1b 	bl	800c5c0 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800818a:	4580      	cmp	r8, r0
 800818c:	d005      	beq.n	800819a <_ZN8touchgfx6Slider10setBitmapsERKNS_6BitmapES3_S3_+0x2a>
 800818e:	4b14      	ldr	r3, [pc, #80]	; (80081e0 <_ZN8touchgfx6Slider10setBitmapsERKNS_6BitmapES3_S3_+0x70>)
 8008190:	4a14      	ldr	r2, [pc, #80]	; (80081e4 <_ZN8touchgfx6Slider10setBitmapsERKNS_6BitmapES3_S3_+0x74>)
 8008192:	4815      	ldr	r0, [pc, #84]	; (80081e8 <_ZN8touchgfx6Slider10setBitmapsERKNS_6BitmapES3_S3_+0x78>)
 8008194:	2133      	movs	r1, #51	; 0x33
 8008196:	f00f fee1 	bl	8017f5c <__assert_func>
 800819a:	4630      	mov	r0, r6
 800819c:	f004 fa4a 	bl	800c634 <_ZNK8touchgfx6Bitmap9getHeightEv>
 80081a0:	4680      	mov	r8, r0
 80081a2:	4628      	mov	r0, r5
 80081a4:	f004 fa46 	bl	800c634 <_ZNK8touchgfx6Bitmap9getHeightEv>
 80081a8:	4580      	cmp	r8, r0
 80081aa:	d1f0      	bne.n	800818e <_ZN8touchgfx6Slider10setBitmapsERKNS_6BitmapES3_S3_+0x1e>
 80081ac:	4631      	mov	r1, r6
 80081ae:	f104 003c 	add.w	r0, r4, #60	; 0x3c
 80081b2:	f001 f9d6 	bl	8009562 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80081b6:	4629      	mov	r1, r5
 80081b8:	f104 0068 	add.w	r0, r4, #104	; 0x68
 80081bc:	f001 f9d1 	bl	8009562 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80081c0:	4639      	mov	r1, r7
 80081c2:	f104 0094 	add.w	r0, r4, #148	; 0x94
 80081c6:	f001 f9cc 	bl	8009562 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80081ca:	f8b4 3070 	ldrh.w	r3, [r4, #112]	; 0x70
 80081ce:	f8a4 30c8 	strh.w	r3, [r4, #200]	; 0xc8
 80081d2:	f8b4 3072 	ldrh.w	r3, [r4, #114]	; 0x72
 80081d6:	f8a4 30ca 	strh.w	r3, [r4, #202]	; 0xca
 80081da:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80081de:	bf00      	nop
 80081e0:	0801a123 	.word	0x0801a123
 80081e4:	0801a438 	.word	0x0801a438
 80081e8:	0801a340 	.word	0x0801a340

080081ec <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEt>:
 80081ec:	b513      	push	{r0, r1, r4, lr}
 80081ee:	6803      	ldr	r3, [r0, #0]
 80081f0:	f8d3 4090 	ldr.w	r4, [r3, #144]	; 0x90
 80081f4:	2300      	movs	r3, #0
 80081f6:	e9cd 3300 	strd	r3, r3, [sp]
 80081fa:	466b      	mov	r3, sp
 80081fc:	47a0      	blx	r4
 80081fe:	b002      	add	sp, #8
 8008200:	bd10      	pop	{r4, pc}

08008202 <_ZN8touchgfx3HAL16flushFrameBufferEv>:
 8008202:	2301      	movs	r3, #1
 8008204:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
 8008208:	f880 3069 	strb.w	r3, [r0, #105]	; 0x69
 800820c:	4770      	bx	lr

0800820e <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>:
 800820e:	2301      	movs	r3, #1
 8008210:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
 8008214:	f880 3069 	strb.w	r3, [r0, #105]	; 0x69
 8008218:	4770      	bx	lr

0800821a <_ZN8touchgfx3HAL17allowDMATransfersEv>:
 800821a:	6843      	ldr	r3, [r0, #4]
 800821c:	2201      	movs	r2, #1
 800821e:	725a      	strb	r2, [r3, #9]
 8008220:	6840      	ldr	r0, [r0, #4]
 8008222:	6803      	ldr	r3, [r0, #0]
 8008224:	691b      	ldr	r3, [r3, #16]
 8008226:	4718      	bx	r3

08008228 <_ZN8touchgfx3HAL8flushDMAEv>:
 8008228:	6840      	ldr	r0, [r0, #4]
 800822a:	6803      	ldr	r3, [r0, #0]
 800822c:	689b      	ldr	r3, [r3, #8]
 800822e:	4718      	bx	r3

08008230 <_ZN8touchgfx3HAL10beginFrameEv>:
 8008230:	4b04      	ldr	r3, [pc, #16]	; (8008244 <_ZN8touchgfx3HAL10beginFrameEv+0x14>)
 8008232:	781b      	ldrb	r3, [r3, #0]
 8008234:	b123      	cbz	r3, 8008240 <_ZN8touchgfx3HAL10beginFrameEv+0x10>
 8008236:	f890 006a 	ldrb.w	r0, [r0, #106]	; 0x6a
 800823a:	f080 0001 	eor.w	r0, r0, #1
 800823e:	4770      	bx	lr
 8008240:	2001      	movs	r0, #1
 8008242:	4770      	bx	lr
 8008244:	20012176 	.word	0x20012176

08008248 <_ZN8touchgfx3HAL8endFrameEv>:
 8008248:	b510      	push	{r4, lr}
 800824a:	4604      	mov	r4, r0
 800824c:	6840      	ldr	r0, [r0, #4]
 800824e:	6803      	ldr	r3, [r0, #0]
 8008250:	689b      	ldr	r3, [r3, #8]
 8008252:	4798      	blx	r3
 8008254:	f894 3069 	ldrb.w	r3, [r4, #105]	; 0x69
 8008258:	b113      	cbz	r3, 8008260 <_ZN8touchgfx3HAL8endFrameEv+0x18>
 800825a:	2301      	movs	r3, #1
 800825c:	f884 306a 	strb.w	r3, [r4, #106]	; 0x6a
 8008260:	bd10      	pop	{r4, pc}
	...

08008264 <_ZN8touchgfx3HAL4tickEv>:
 8008264:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8008266:	6803      	ldr	r3, [r0, #0]
 8008268:	4d5c      	ldr	r5, [pc, #368]	; (80083dc <_ZN8touchgfx3HAL4tickEv+0x178>)
 800826a:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
 800826e:	4604      	mov	r4, r0
 8008270:	4798      	blx	r3
 8008272:	2800      	cmp	r0, #0
 8008274:	f000 8097 	beq.w	80083a6 <_ZN8touchgfx3HAL4tickEv+0x142>
 8008278:	2001      	movs	r0, #1
 800827a:	f7f8 fa5d 	bl	8000738 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 800827e:	f894 3066 	ldrb.w	r3, [r4, #102]	; 0x66
 8008282:	f884 3067 	strb.w	r3, [r4, #103]	; 0x67
 8008286:	f894 3075 	ldrb.w	r3, [r4, #117]	; 0x75
 800828a:	2600      	movs	r6, #0
 800828c:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 8008290:	f884 604b 	strb.w	r6, [r4, #75]	; 0x4b
 8008294:	b133      	cbz	r3, 80082a4 <_ZN8touchgfx3HAL4tickEv+0x40>
 8008296:	6823      	ldr	r3, [r4, #0]
 8008298:	4620      	mov	r0, r4
 800829a:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
 800829e:	4798      	blx	r3
 80082a0:	f884 6075 	strb.w	r6, [r4, #117]	; 0x75
 80082a4:	f894 304a 	ldrb.w	r3, [r4, #74]	; 0x4a
 80082a8:	6862      	ldr	r2, [r4, #4]
 80082aa:	f083 0301 	eor.w	r3, r3, #1
 80082ae:	7253      	strb	r3, [r2, #9]
 80082b0:	2601      	movs	r6, #1
 80082b2:	702e      	strb	r6, [r5, #0]
 80082b4:	f002 f9ae 	bl	800a614 <_ZN8touchgfx11Application11getInstanceEv>
 80082b8:	6803      	ldr	r3, [r0, #0]
 80082ba:	4631      	mov	r1, r6
 80082bc:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80082be:	4798      	blx	r3
 80082c0:	f894 3067 	ldrb.w	r3, [r4, #103]	; 0x67
 80082c4:	b90b      	cbnz	r3, 80082ca <_ZN8touchgfx3HAL4tickEv+0x66>
 80082c6:	f884 6067 	strb.w	r6, [r4, #103]	; 0x67
 80082ca:	f002 f9a3 	bl	800a614 <_ZN8touchgfx11Application11getInstanceEv>
 80082ce:	6803      	ldr	r3, [r0, #0]
 80082d0:	695b      	ldr	r3, [r3, #20]
 80082d2:	4798      	blx	r3
 80082d4:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80082d6:	6803      	ldr	r3, [r0, #0]
 80082d8:	691b      	ldr	r3, [r3, #16]
 80082da:	4798      	blx	r3
 80082dc:	f894 3067 	ldrb.w	r3, [r4, #103]	; 0x67
 80082e0:	f894 2068 	ldrb.w	r2, [r4, #104]	; 0x68
 80082e4:	3b01      	subs	r3, #1
 80082e6:	b2db      	uxtb	r3, r3
 80082e8:	f884 3067 	strb.w	r3, [r4, #103]	; 0x67
 80082ec:	b10a      	cbz	r2, 80082f2 <_ZN8touchgfx3HAL4tickEv+0x8e>
 80082ee:	2b00      	cmp	r3, #0
 80082f0:	d1eb      	bne.n	80082ca <_ZN8touchgfx3HAL4tickEv+0x66>
 80082f2:	4a3b      	ldr	r2, [pc, #236]	; (80083e0 <_ZN8touchgfx3HAL4tickEv+0x17c>)
 80082f4:	f994 1064 	ldrsb.w	r1, [r4, #100]	; 0x64
 80082f8:	7813      	ldrb	r3, [r2, #0]
 80082fa:	3301      	adds	r3, #1
 80082fc:	b25b      	sxtb	r3, r3
 80082fe:	4299      	cmp	r1, r3
 8008300:	7013      	strb	r3, [r2, #0]
 8008302:	dc10      	bgt.n	8008326 <_ZN8touchgfx3HAL4tickEv+0xc2>
 8008304:	68e0      	ldr	r0, [r4, #12]
 8008306:	2300      	movs	r3, #0
 8008308:	7013      	strb	r3, [r2, #0]
 800830a:	6803      	ldr	r3, [r0, #0]
 800830c:	aa03      	add	r2, sp, #12
 800830e:	68db      	ldr	r3, [r3, #12]
 8008310:	a902      	add	r1, sp, #8
 8008312:	4798      	blx	r3
 8008314:	6823      	ldr	r3, [r4, #0]
 8008316:	2800      	cmp	r0, #0
 8008318:	d051      	beq.n	80083be <_ZN8touchgfx3HAL4tickEv+0x15a>
 800831a:	f8d3 30a4 	ldr.w	r3, [r3, #164]	; 0xa4
 800831e:	e9dd 1202 	ldrd	r1, r2, [sp, #8]
 8008322:	4620      	mov	r0, r4
 8008324:	4798      	blx	r3
 8008326:	6960      	ldr	r0, [r4, #20]
 8008328:	2300      	movs	r3, #0
 800832a:	f88d 3007 	strb.w	r3, [sp, #7]
 800832e:	b158      	cbz	r0, 8008348 <_ZN8touchgfx3HAL4tickEv+0xe4>
 8008330:	6803      	ldr	r3, [r0, #0]
 8008332:	f10d 0107 	add.w	r1, sp, #7
 8008336:	68db      	ldr	r3, [r3, #12]
 8008338:	4798      	blx	r3
 800833a:	b128      	cbz	r0, 8008348 <_ZN8touchgfx3HAL4tickEv+0xe4>
 800833c:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800833e:	f89d 1007 	ldrb.w	r1, [sp, #7]
 8008342:	6803      	ldr	r3, [r0, #0]
 8008344:	68db      	ldr	r3, [r3, #12]
 8008346:	4798      	blx	r3
 8008348:	f104 001c 	add.w	r0, r4, #28
 800834c:	f00f fcf8 	bl	8017d40 <_ZN8touchgfx8Gestures4tickEv>
 8008350:	f894 306c 	ldrb.w	r3, [r4, #108]	; 0x6c
 8008354:	b30b      	cbz	r3, 800839a <_ZN8touchgfx3HAL4tickEv+0x136>
 8008356:	6920      	ldr	r0, [r4, #16]
 8008358:	6803      	ldr	r3, [r0, #0]
 800835a:	691b      	ldr	r3, [r3, #16]
 800835c:	4798      	blx	r3
 800835e:	6f23      	ldr	r3, [r4, #112]	; 0x70
 8008360:	4606      	mov	r6, r0
 8008362:	b903      	cbnz	r3, 8008366 <_ZN8touchgfx3HAL4tickEv+0x102>
 8008364:	6720      	str	r0, [r4, #112]	; 0x70
 8008366:	6f23      	ldr	r3, [r4, #112]	; 0x70
 8008368:	4a1e      	ldr	r2, [pc, #120]	; (80083e4 <_ZN8touchgfx3HAL4tickEv+0x180>)
 800836a:	1af3      	subs	r3, r6, r3
 800836c:	4293      	cmp	r3, r2
 800836e:	d914      	bls.n	800839a <_ZN8touchgfx3HAL4tickEv+0x136>
 8008370:	6920      	ldr	r0, [r4, #16]
 8008372:	6803      	ldr	r3, [r0, #0]
 8008374:	699b      	ldr	r3, [r3, #24]
 8008376:	4798      	blx	r3
 8008378:	6f23      	ldr	r3, [r4, #112]	; 0x70
 800837a:	2264      	movs	r2, #100	; 0x64
 800837c:	1af3      	subs	r3, r6, r3
 800837e:	fbb3 f3f2 	udiv	r3, r3, r2
 8008382:	fbb0 f0f3 	udiv	r0, r0, r3
 8008386:	2800      	cmp	r0, #0
 8008388:	dc1e      	bgt.n	80083c8 <_ZN8touchgfx3HAL4tickEv+0x164>
 800838a:	f884 2065 	strb.w	r2, [r4, #101]	; 0x65
 800838e:	6920      	ldr	r0, [r4, #16]
 8008390:	6803      	ldr	r3, [r0, #0]
 8008392:	2100      	movs	r1, #0
 8008394:	69db      	ldr	r3, [r3, #28]
 8008396:	4798      	blx	r3
 8008398:	6726      	str	r6, [r4, #112]	; 0x70
 800839a:	f002 f93b 	bl	800a614 <_ZN8touchgfx11Application11getInstanceEv>
 800839e:	6803      	ldr	r3, [r0, #0]
 80083a0:	2100      	movs	r1, #0
 80083a2:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80083a4:	4798      	blx	r3
 80083a6:	6823      	ldr	r3, [r4, #0]
 80083a8:	4620      	mov	r0, r4
 80083aa:	f8d3 309c 	ldr.w	r3, [r3, #156]	; 0x9c
 80083ae:	4798      	blx	r3
 80083b0:	2001      	movs	r0, #1
 80083b2:	f7f8 f9c2 	bl	800073a <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
 80083b6:	2300      	movs	r3, #0
 80083b8:	702b      	strb	r3, [r5, #0]
 80083ba:	b004      	add	sp, #16
 80083bc:	bd70      	pop	{r4, r5, r6, pc}
 80083be:	f8d3 30a8 	ldr.w	r3, [r3, #168]	; 0xa8
 80083c2:	4620      	mov	r0, r4
 80083c4:	4798      	blx	r3
 80083c6:	e7ae      	b.n	8008326 <_ZN8touchgfx3HAL4tickEv+0xc2>
 80083c8:	2863      	cmp	r0, #99	; 0x63
 80083ca:	bfcb      	itete	gt
 80083cc:	2300      	movgt	r3, #0
 80083ce:	f1c0 0064 	rsble	r0, r0, #100	; 0x64
 80083d2:	f884 3065 	strbgt.w	r3, [r4, #101]	; 0x65
 80083d6:	f884 0065 	strble.w	r0, [r4, #101]	; 0x65
 80083da:	e7d8      	b.n	800838e <_ZN8touchgfx3HAL4tickEv+0x12a>
 80083dc:	2001217c 	.word	0x2001217c
 80083e0:	2001217d 	.word	0x2001217d
 80083e4:	05f5e100 	.word	0x05f5e100

080083e8 <_ZN8touchgfx3HAL17unlockFrameBufferEv>:
 80083e8:	f7f8 bad0 	b.w	800098c <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

080083ec <_ZN8touchgfx3HAL21registerEventListenerERNS_15UIEventListenerE>:
 80083ec:	6581      	str	r1, [r0, #88]	; 0x58
 80083ee:	301c      	adds	r0, #28
 80083f0:	f00f bca4 	b.w	8017d3c <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>

080083f4 <_ZN8touchgfx3HAL5touchEll>:
 80083f4:	b530      	push	{r4, r5, lr}
 80083f6:	b087      	sub	sp, #28
 80083f8:	4604      	mov	r4, r0
 80083fa:	a804      	add	r0, sp, #16
 80083fc:	e9cd 1204 	strd	r1, r2, [sp, #16]
 8008400:	f001 feb8 	bl	800a174 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>
 8008404:	9b04      	ldr	r3, [sp, #16]
 8008406:	f8ad 300c 	strh.w	r3, [sp, #12]
 800840a:	a906      	add	r1, sp, #24
 800840c:	9b05      	ldr	r3, [sp, #20]
 800840e:	f821 3d0a 	strh.w	r3, [r1, #-10]!
 8008412:	a803      	add	r0, sp, #12
 8008414:	f001 fefc 	bl	800a210 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>
 8008418:	f894 106b 	ldrb.w	r1, [r4, #107]	; 0x6b
 800841c:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 8008420:	f8bd 300e 	ldrh.w	r3, [sp, #14]
 8008424:	f104 001c 	add.w	r0, r4, #28
 8008428:	b189      	cbz	r1, 800844e <_ZN8touchgfx3HAL5touchEll+0x5a>
 800842a:	f8b4 5060 	ldrh.w	r5, [r4, #96]	; 0x60
 800842e:	9300      	str	r3, [sp, #0]
 8008430:	f8b4 105c 	ldrh.w	r1, [r4, #92]	; 0x5c
 8008434:	4613      	mov	r3, r2
 8008436:	462a      	mov	r2, r5
 8008438:	f00f fc90 	bl	8017d5c <_ZN8touchgfx8Gestures17registerDragEventEtttt>
 800843c:	b128      	cbz	r0, 800844a <_ZN8touchgfx3HAL5touchEll+0x56>
 800843e:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 8008442:	65e3      	str	r3, [r4, #92]	; 0x5c
 8008444:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 8008448:	6623      	str	r3, [r4, #96]	; 0x60
 800844a:	b007      	add	sp, #28
 800844c:	bd30      	pop	{r4, r5, pc}
 800844e:	f00f fcc9 	bl	8017de4 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 8008452:	2301      	movs	r3, #1
 8008454:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
 8008458:	e7f1      	b.n	800843e <_ZN8touchgfx3HAL5touchEll+0x4a>

0800845a <_ZN8touchgfx3HAL9blockCopyEPvPKvm>:
 800845a:	b570      	push	{r4, r5, r6, lr}
 800845c:	2b00      	cmp	r3, #0
 800845e:	d050      	beq.n	8008502 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0xa8>
 8008460:	ea81 0002 	eor.w	r0, r1, r2
 8008464:	07c6      	lsls	r6, r0, #31
 8008466:	d508      	bpl.n	800847a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x20>
 8008468:	3a01      	subs	r2, #1
 800846a:	18cc      	adds	r4, r1, r3
 800846c:	42a1      	cmp	r1, r4
 800846e:	d048      	beq.n	8008502 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0xa8>
 8008470:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 8008474:	f801 0b01 	strb.w	r0, [r1], #1
 8008478:	e7f8      	b.n	800846c <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x12>
 800847a:	07d5      	lsls	r5, r2, #31
 800847c:	bf42      	ittt	mi
 800847e:	f812 0b01 	ldrbmi.w	r0, [r2], #1
 8008482:	f801 0b01 	strbmi.w	r0, [r1], #1
 8008486:	f103 33ff 	addmi.w	r3, r3, #4294967295
 800848a:	2b01      	cmp	r3, #1
 800848c:	d915      	bls.n	80084ba <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x60>
 800848e:	ea82 0001 	eor.w	r0, r2, r1
 8008492:	0784      	lsls	r4, r0, #30
 8008494:	d02d      	beq.n	80084f2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x98>
 8008496:	1e94      	subs	r4, r2, #2
 8008498:	4608      	mov	r0, r1
 800849a:	18ce      	adds	r6, r1, r3
 800849c:	f834 5f02 	ldrh.w	r5, [r4, #2]!
 80084a0:	f820 5b02 	strh.w	r5, [r0], #2
 80084a4:	1a35      	subs	r5, r6, r0
 80084a6:	2d01      	cmp	r5, #1
 80084a8:	d8f8      	bhi.n	800849c <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x42>
 80084aa:	1e98      	subs	r0, r3, #2
 80084ac:	f020 0001 	bic.w	r0, r0, #1
 80084b0:	3002      	adds	r0, #2
 80084b2:	4401      	add	r1, r0
 80084b4:	4402      	add	r2, r0
 80084b6:	f003 0301 	and.w	r3, r3, #1
 80084ba:	1f14      	subs	r4, r2, #4
 80084bc:	4608      	mov	r0, r1
 80084be:	18ce      	adds	r6, r1, r3
 80084c0:	1a35      	subs	r5, r6, r0
 80084c2:	2d03      	cmp	r5, #3
 80084c4:	d810      	bhi.n	80084e8 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x8e>
 80084c6:	089c      	lsrs	r4, r3, #2
 80084c8:	00a0      	lsls	r0, r4, #2
 80084ca:	4401      	add	r1, r0
 80084cc:	3801      	subs	r0, #1
 80084ce:	4402      	add	r2, r0
 80084d0:	f06f 0003 	mvn.w	r0, #3
 80084d4:	fb00 3404 	mla	r4, r0, r4, r3
 80084d8:	440c      	add	r4, r1
 80084da:	42a1      	cmp	r1, r4
 80084dc:	d011      	beq.n	8008502 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0xa8>
 80084de:	f812 3f01 	ldrb.w	r3, [r2, #1]!
 80084e2:	f801 3b01 	strb.w	r3, [r1], #1
 80084e6:	e7f8      	b.n	80084da <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x80>
 80084e8:	f854 5f04 	ldr.w	r5, [r4, #4]!
 80084ec:	f840 5b04 	str.w	r5, [r0], #4
 80084f0:	e7e6      	b.n	80084c0 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x66>
 80084f2:	0790      	lsls	r0, r2, #30
 80084f4:	d0e1      	beq.n	80084ba <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x60>
 80084f6:	f832 0b02 	ldrh.w	r0, [r2], #2
 80084fa:	f821 0b02 	strh.w	r0, [r1], #2
 80084fe:	3b02      	subs	r3, #2
 8008500:	e7db      	b.n	80084ba <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x60>
 8008502:	2001      	movs	r0, #1
 8008504:	bd70      	pop	{r4, r5, r6, pc}

08008506 <_ZN8touchgfx3HAL7noTouchEv>:
 8008506:	b510      	push	{r4, lr}
 8008508:	f890 306b 	ldrb.w	r3, [r0, #107]	; 0x6b
 800850c:	4604      	mov	r4, r0
 800850e:	b153      	cbz	r3, 8008526 <_ZN8touchgfx3HAL7noTouchEv+0x20>
 8008510:	f8b0 3060 	ldrh.w	r3, [r0, #96]	; 0x60
 8008514:	f8b0 205c 	ldrh.w	r2, [r0, #92]	; 0x5c
 8008518:	2101      	movs	r1, #1
 800851a:	301c      	adds	r0, #28
 800851c:	f00f fc62 	bl	8017de4 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 8008520:	2300      	movs	r3, #0
 8008522:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
 8008526:	bd10      	pop	{r4, pc}

08008528 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt>:
 8008528:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800852c:	4605      	mov	r5, r0
 800852e:	6980      	ldr	r0, [r0, #24]
 8008530:	b085      	sub	sp, #20
 8008532:	460f      	mov	r7, r1
 8008534:	4690      	mov	r8, r2
 8008536:	4699      	mov	r9, r3
 8008538:	b930      	cbnz	r0, 8008548 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x20>
 800853a:	4b1f      	ldr	r3, [pc, #124]	; (80085b8 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x90>)
 800853c:	4a1f      	ldr	r2, [pc, #124]	; (80085bc <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x94>)
 800853e:	f240 112f 	movw	r1, #303	; 0x12f
 8008542:	481f      	ldr	r0, [pc, #124]	; (80085c0 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x98>)
 8008544:	f00f fd0a 	bl	8017f5c <__assert_func>
 8008548:	ac04      	add	r4, sp, #16
 800854a:	2600      	movs	r6, #0
 800854c:	f844 6d04 	str.w	r6, [r4, #-4]!
 8008550:	6806      	ldr	r6, [r0, #0]
 8008552:	9401      	str	r4, [sp, #4]
 8008554:	f8bd 4030 	ldrh.w	r4, [sp, #48]	; 0x30
 8008558:	9400      	str	r4, [sp, #0]
 800855a:	6834      	ldr	r4, [r6, #0]
 800855c:	47a0      	blx	r4
 800855e:	4c19      	ldr	r4, [pc, #100]	; (80085c4 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x9c>)
 8008560:	4606      	mov	r6, r0
 8008562:	f8a4 9000 	strh.w	r9, [r4]
 8008566:	f7f8 fad7 	bl	8000b18 <_ZN8touchgfx3HAL3lcdEv>
 800856a:	6803      	ldr	r3, [r0, #0]
 800856c:	6a1b      	ldr	r3, [r3, #32]
 800856e:	4798      	blx	r3
 8008570:	280c      	cmp	r0, #12
 8008572:	d80f      	bhi.n	8008594 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x6c>
 8008574:	e8df f000 	tbb	[pc, r0]
 8008578:	1b1b1207 	.word	0x1b1b1207
 800857c:	1b1b1b1b 	.word	0x1b1b1b1b
 8008580:	1b1b1b1b 	.word	0x1b1b1b1b
 8008584:	1b          	.byte	0x1b
 8008585:	00          	.byte	0x00
 8008586:	8823      	ldrh	r3, [r4, #0]
 8008588:	fb08 7203 	mla	r2, r8, r3, r7
 800858c:	9b03      	ldr	r3, [sp, #12]
 800858e:	eba3 0342 	sub.w	r3, r3, r2, lsl #1
 8008592:	63eb      	str	r3, [r5, #60]	; 0x3c
 8008594:	4630      	mov	r0, r6
 8008596:	b005      	add	sp, #20
 8008598:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800859c:	8822      	ldrh	r2, [r4, #0]
 800859e:	9b03      	ldr	r3, [sp, #12]
 80085a0:	fb08 7202 	mla	r2, r8, r2, r7
 80085a4:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80085a8:	1a9a      	subs	r2, r3, r2
 80085aa:	63ea      	str	r2, [r5, #60]	; 0x3c
 80085ac:	e7f2      	b.n	8008594 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x6c>
 80085ae:	4b06      	ldr	r3, [pc, #24]	; (80085c8 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0xa0>)
 80085b0:	4a02      	ldr	r2, [pc, #8]	; (80085bc <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x94>)
 80085b2:	f44f 71a6 	mov.w	r1, #332	; 0x14c
 80085b6:	e7c4      	b.n	8008542 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x1a>
 80085b8:	0801a61b 	.word	0x0801a61b
 80085bc:	0801a875 	.word	0x0801a875
 80085c0:	0801a660 	.word	0x0801a660
 80085c4:	20012172 	.word	0x20012172
 80085c8:	0801a686 	.word	0x0801a686

080085cc <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttth>:
 80085cc:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80085d0:	4698      	mov	r8, r3
 80085d2:	6803      	ldr	r3, [r0, #0]
 80085d4:	6c5d      	ldr	r5, [r3, #68]	; 0x44
 80085d6:	4b0f      	ldr	r3, [pc, #60]	; (8008614 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttth+0x48>)
 80085d8:	b087      	sub	sp, #28
 80085da:	f8b3 9000 	ldrh.w	r9, [r3]
 80085de:	460e      	mov	r6, r1
 80085e0:	4617      	mov	r7, r2
 80085e2:	4604      	mov	r4, r0
 80085e4:	f7f8 fa98 	bl	8000b18 <_ZN8touchgfx3HAL3lcdEv>
 80085e8:	6803      	ldr	r3, [r0, #0]
 80085ea:	6a1b      	ldr	r3, [r3, #32]
 80085ec:	4798      	blx	r3
 80085ee:	f89d 3040 	ldrb.w	r3, [sp, #64]	; 0x40
 80085f2:	9302      	str	r3, [sp, #8]
 80085f4:	f8bd 303c 	ldrh.w	r3, [sp, #60]	; 0x3c
 80085f8:	9301      	str	r3, [sp, #4]
 80085fa:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 80085fe:	9300      	str	r3, [sp, #0]
 8008600:	e9cd 9003 	strd	r9, r0, [sp, #12]
 8008604:	4643      	mov	r3, r8
 8008606:	463a      	mov	r2, r7
 8008608:	4631      	mov	r1, r6
 800860a:	4620      	mov	r0, r4
 800860c:	47a8      	blx	r5
 800860e:	b007      	add	sp, #28
 8008610:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8008614:	20012172 	.word	0x20012172

08008618 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE>:
 8008618:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800861c:	4606      	mov	r6, r0
 800861e:	b089      	sub	sp, #36	; 0x24
 8008620:	4610      	mov	r0, r2
 8008622:	460c      	mov	r4, r1
 8008624:	4691      	mov	r9, r2
 8008626:	4698      	mov	r8, r3
 8008628:	f003 ff06 	bl	800c438 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 800862c:	2800      	cmp	r0, #0
 800862e:	f000 8093 	beq.w	8008758 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x140>
 8008632:	f8df a13c 	ldr.w	sl, [pc, #316]	; 8008770 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x158>
 8008636:	f8df b13c 	ldr.w	fp, [pc, #316]	; 8008774 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x15c>
 800863a:	f8da 0000 	ldr.w	r0, [sl]
 800863e:	4f4b      	ldr	r7, [pc, #300]	; (800876c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x154>)
 8008640:	6802      	ldr	r2, [r0, #0]
 8008642:	6a12      	ldr	r2, [r2, #32]
 8008644:	4790      	blx	r2
 8008646:	f8da 0000 	ldr.w	r0, [sl]
 800864a:	6802      	ldr	r2, [r0, #0]
 800864c:	ad08      	add	r5, sp, #32
 800864e:	6a52      	ldr	r2, [r2, #36]	; 0x24
 8008650:	4790      	blx	r2
 8008652:	f825 9d0c 	strh.w	r9, [r5, #-12]!
 8008656:	f8bb 3000 	ldrh.w	r3, [fp]
 800865a:	9300      	str	r3, [sp, #0]
 800865c:	4628      	mov	r0, r5
 800865e:	883b      	ldrh	r3, [r7, #0]
 8008660:	9301      	str	r3, [sp, #4]
 8008662:	f003 ffad 	bl	800c5c0 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8008666:	f8ab 0000 	strh.w	r0, [fp]
 800866a:	4628      	mov	r0, r5
 800866c:	f003 ffe2 	bl	800c634 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8008670:	f8da b000 	ldr.w	fp, [sl]
 8008674:	8038      	strh	r0, [r7, #0]
 8008676:	f8db 303c 	ldr.w	r3, [fp, #60]	; 0x3c
 800867a:	9302      	str	r3, [sp, #8]
 800867c:	4648      	mov	r0, r9
 800867e:	f8db 7040 	ldr.w	r7, [fp, #64]	; 0x40
 8008682:	f003 fed9 	bl	800c438 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 8008686:	f8da 2000 	ldr.w	r2, [sl]
 800868a:	f8cb 0040 	str.w	r0, [fp, #64]	; 0x40
 800868e:	63d0      	str	r0, [r2, #60]	; 0x3c
 8008690:	6822      	ldr	r2, [r4, #0]
 8008692:	f9b4 9004 	ldrsh.w	r9, [r4, #4]
 8008696:	6b53      	ldr	r3, [r2, #52]	; 0x34
 8008698:	f9b4 a006 	ldrsh.w	sl, [r4, #6]
 800869c:	2200      	movs	r2, #0
 800869e:	4611      	mov	r1, r2
 80086a0:	4620      	mov	r0, r4
 80086a2:	4798      	blx	r3
 80086a4:	2201      	movs	r2, #1
 80086a6:	f894 b025 	ldrb.w	fp, [r4, #37]	; 0x25
 80086aa:	f884 2025 	strb.w	r2, [r4, #37]	; 0x25
 80086ae:	f9b8 2004 	ldrsh.w	r2, [r8, #4]
 80086b2:	2a00      	cmp	r2, #0
 80086b4:	f104 0204 	add.w	r2, r4, #4
 80086b8:	dd51      	ble.n	800875e <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x146>
 80086ba:	f9b8 1006 	ldrsh.w	r1, [r8, #6]
 80086be:	2900      	cmp	r1, #0
 80086c0:	dd4d      	ble.n	800875e <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x146>
 80086c2:	6810      	ldr	r0, [r2, #0]
 80086c4:	6851      	ldr	r1, [r2, #4]
 80086c6:	f10d 0c18 	add.w	ip, sp, #24
 80086ca:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 80086ce:	4641      	mov	r1, r8
 80086d0:	a806      	add	r0, sp, #24
 80086d2:	f7ff f96f 	bl	80079b4 <_ZN8touchgfx4RectaNERKS0_>
 80086d6:	4628      	mov	r0, r5
 80086d8:	f004 f8fe 	bl	800c8d8 <_ZNK8touchgfx6Bitmap9getFormatEv>
 80086dc:	4680      	mov	r8, r0
 80086de:	f7f8 fa1b 	bl	8000b18 <_ZN8touchgfx3HAL3lcdEv>
 80086e2:	6802      	ldr	r2, [r0, #0]
 80086e4:	6a12      	ldr	r2, [r2, #32]
 80086e6:	4790      	blx	r2
 80086e8:	4580      	cmp	r8, r0
 80086ea:	d03d      	beq.n	8008768 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x150>
 80086ec:	6cf0      	ldr	r0, [r6, #76]	; 0x4c
 80086ee:	b150      	cbz	r0, 8008706 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xee>
 80086f0:	4628      	mov	r0, r5
 80086f2:	f004 f8f1 	bl	800c8d8 <_ZNK8touchgfx6Bitmap9getFormatEv>
 80086f6:	4605      	mov	r5, r0
 80086f8:	6cf0      	ldr	r0, [r6, #76]	; 0x4c
 80086fa:	6803      	ldr	r3, [r0, #0]
 80086fc:	6a1b      	ldr	r3, [r3, #32]
 80086fe:	4798      	blx	r3
 8008700:	1a2b      	subs	r3, r5, r0
 8008702:	4258      	negs	r0, r3
 8008704:	4158      	adcs	r0, r3
 8008706:	f886 0076 	strb.w	r0, [r6, #118]	; 0x76
 800870a:	6822      	ldr	r2, [r4, #0]
 800870c:	6963      	ldr	r3, [r4, #20]
 800870e:	9303      	str	r3, [sp, #12]
 8008710:	2500      	movs	r5, #0
 8008712:	6165      	str	r5, [r4, #20]
 8008714:	4620      	mov	r0, r4
 8008716:	6892      	ldr	r2, [r2, #8]
 8008718:	a906      	add	r1, sp, #24
 800871a:	4790      	blx	r2
 800871c:	9b03      	ldr	r3, [sp, #12]
 800871e:	6163      	str	r3, [r4, #20]
 8008720:	f886 5076 	strb.w	r5, [r6, #118]	; 0x76
 8008724:	6823      	ldr	r3, [r4, #0]
 8008726:	f884 b025 	strb.w	fp, [r4, #37]	; 0x25
 800872a:	4620      	mov	r0, r4
 800872c:	4c10      	ldr	r4, [pc, #64]	; (8008770 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x158>)
 800872e:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8008730:	4652      	mov	r2, sl
 8008732:	4649      	mov	r1, r9
 8008734:	4798      	blx	r3
 8008736:	6820      	ldr	r0, [r4, #0]
 8008738:	9b02      	ldr	r3, [sp, #8]
 800873a:	9a00      	ldr	r2, [sp, #0]
 800873c:	e9c0 370f 	strd	r3, r7, [r0, #60]	; 0x3c
 8008740:	4b0c      	ldr	r3, [pc, #48]	; (8008774 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x15c>)
 8008742:	801a      	strh	r2, [r3, #0]
 8008744:	4b09      	ldr	r3, [pc, #36]	; (800876c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x154>)
 8008746:	9a01      	ldr	r2, [sp, #4]
 8008748:	801a      	strh	r2, [r3, #0]
 800874a:	6803      	ldr	r3, [r0, #0]
 800874c:	6a1b      	ldr	r3, [r3, #32]
 800874e:	4798      	blx	r3
 8008750:	6820      	ldr	r0, [r4, #0]
 8008752:	6803      	ldr	r3, [r0, #0]
 8008754:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8008756:	4798      	blx	r3
 8008758:	b009      	add	sp, #36	; 0x24
 800875a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800875e:	6810      	ldr	r0, [r2, #0]
 8008760:	6851      	ldr	r1, [r2, #4]
 8008762:	ab06      	add	r3, sp, #24
 8008764:	c303      	stmia	r3!, {r0, r1}
 8008766:	e7b6      	b.n	80086d6 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xbe>
 8008768:	2000      	movs	r0, #0
 800876a:	e7cc      	b.n	8008706 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xee>
 800876c:	20012174 	.word	0x20012174
 8008770:	20012178 	.word	0x20012178
 8008774:	20012172 	.word	0x20012172

08008778 <_ZN8touchgfx3HAL20getClientFrameBufferEv>:
 8008778:	b510      	push	{r4, lr}
 800877a:	4b07      	ldr	r3, [pc, #28]	; (8008798 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x20>)
 800877c:	781b      	ldrb	r3, [r3, #0]
 800877e:	4604      	mov	r4, r0
 8008780:	b13b      	cbz	r3, 8008792 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 8008782:	6803      	ldr	r3, [r0, #0]
 8008784:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8008786:	4798      	blx	r3
 8008788:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800878a:	4283      	cmp	r3, r0
 800878c:	d101      	bne.n	8008792 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 800878e:	6c20      	ldr	r0, [r4, #64]	; 0x40
 8008790:	bd10      	pop	{r4, pc}
 8008792:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 8008794:	e7fc      	b.n	8008790 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x18>
 8008796:	bf00      	nop
 8008798:	20012176 	.word	0x20012176

0800879c <_ZN8touchgfx3HAL15lockFrameBufferEv>:
 800879c:	b510      	push	{r4, lr}
 800879e:	4b0b      	ldr	r3, [pc, #44]	; (80087cc <_ZN8touchgfx3HAL15lockFrameBufferEv+0x30>)
 80087a0:	781b      	ldrb	r3, [r3, #0]
 80087a2:	4604      	mov	r4, r0
 80087a4:	b95b      	cbnz	r3, 80087be <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 80087a6:	f890 3048 	ldrb.w	r3, [r0, #72]	; 0x48
 80087aa:	2b02      	cmp	r3, #2
 80087ac:	d007      	beq.n	80087be <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 80087ae:	6840      	ldr	r0, [r0, #4]
 80087b0:	f000 fbce 	bl	8008f50 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>
 80087b4:	b118      	cbz	r0, 80087be <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 80087b6:	6862      	ldr	r2, [r4, #4]
 80087b8:	7a53      	ldrb	r3, [r2, #9]
 80087ba:	2b00      	cmp	r3, #0
 80087bc:	d0fc      	beq.n	80087b8 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x1c>
 80087be:	f7f8 f8cd 	bl	800095c <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 80087c2:	4620      	mov	r0, r4
 80087c4:	f7ff ffd8 	bl	8008778 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 80087c8:	bd10      	pop	{r4, pc}
 80087ca:	bf00      	nop
 80087cc:	20012176 	.word	0x20012176

080087d0 <_ZN8touchgfx3HAL10initializeEv>:
 80087d0:	b510      	push	{r4, lr}
 80087d2:	4604      	mov	r4, r0
 80087d4:	f7f8 f8aa 	bl	800092c <_ZN8touchgfx10OSWrappers10initializeEv>
 80087d8:	6860      	ldr	r0, [r4, #4]
 80087da:	6803      	ldr	r3, [r0, #0]
 80087dc:	68db      	ldr	r3, [r3, #12]
 80087de:	4798      	blx	r3
 80087e0:	68e0      	ldr	r0, [r4, #12]
 80087e2:	6803      	ldr	r3, [r0, #0]
 80087e4:	689b      	ldr	r3, [r3, #8]
 80087e6:	4798      	blx	r3
 80087e8:	6823      	ldr	r3, [r4, #0]
 80087ea:	4620      	mov	r0, r4
 80087ec:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 80087ee:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80087f2:	4718      	bx	r3

080087f4 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE>:
 80087f4:	b508      	push	{r3, lr}
 80087f6:	290c      	cmp	r1, #12
 80087f8:	d817      	bhi.n	800882a <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x36>
 80087fa:	e8df f001 	tbb	[pc, r1]
 80087fe:	090b      	.short	0x090b
 8008800:	0d0d0d07 	.word	0x0d0d0d07
 8008804:	1414140d 	.word	0x1414140d
 8008808:	1414      	.short	0x1414
 800880a:	0d          	.byte	0x0d
 800880b:	00          	.byte	0x00
 800880c:	2020      	movs	r0, #32
 800880e:	bd08      	pop	{r3, pc}
 8008810:	2018      	movs	r0, #24
 8008812:	e7fc      	b.n	800880e <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x1a>
 8008814:	2010      	movs	r0, #16
 8008816:	e7fa      	b.n	800880e <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x1a>
 8008818:	4b05      	ldr	r3, [pc, #20]	; (8008830 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x3c>)
 800881a:	4a06      	ldr	r2, [pc, #24]	; (8008834 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x40>)
 800881c:	4806      	ldr	r0, [pc, #24]	; (8008838 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x44>)
 800881e:	f240 212f 	movw	r1, #559	; 0x22f
 8008822:	f00f fb9b 	bl	8017f5c <__assert_func>
 8008826:	2008      	movs	r0, #8
 8008828:	e7f1      	b.n	800880e <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x1a>
 800882a:	2000      	movs	r0, #0
 800882c:	e7ef      	b.n	800880e <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x1a>
 800882e:	bf00      	nop
 8008830:	0801a759 	.word	0x0801a759
 8008834:	0801aa37 	.word	0x0801aa37
 8008838:	0801a660 	.word	0x0801a660

0800883c <_ZNK8touchgfx3HAL13getDstAddressEttPttNS_6Bitmap12BitmapFormatE>:
 800883c:	b570      	push	{r4, r5, r6, lr}
 800883e:	460d      	mov	r5, r1
 8008840:	f89d 1014 	ldrb.w	r1, [sp, #20]
 8008844:	4616      	mov	r6, r2
 8008846:	461c      	mov	r4, r3
 8008848:	f7ff ffd4 	bl	80087f4 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE>
 800884c:	f8bd 1010 	ldrh.w	r1, [sp, #16]
 8008850:	10c0      	asrs	r0, r0, #3
 8008852:	fb06 5101 	mla	r1, r6, r1, r5
 8008856:	fb00 4001 	mla	r0, r0, r1, r4
 800885a:	bd70      	pop	{r4, r5, r6, pc}

0800885c <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_>:
 800885c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8008860:	b08a      	sub	sp, #40	; 0x28
 8008862:	f04f 0c00 	mov.w	ip, #0
 8008866:	f89d 8064 	ldrb.w	r8, [sp, #100]	; 0x64
 800886a:	f8bd 604c 	ldrh.w	r6, [sp, #76]	; 0x4c
 800886e:	f8bd 5050 	ldrh.w	r5, [sp, #80]	; 0x50
 8008872:	f8bd 9060 	ldrh.w	r9, [sp, #96]	; 0x60
 8008876:	f89d 7068 	ldrb.w	r7, [sp, #104]	; 0x68
 800887a:	f8cd c020 	str.w	ip, [sp, #32]
 800887e:	f1b8 0f02 	cmp.w	r8, #2
 8008882:	4604      	mov	r4, r0
 8008884:	469a      	mov	sl, r3
 8008886:	f89d 005c 	ldrb.w	r0, [sp, #92]	; 0x5c
 800888a:	f89d 3058 	ldrb.w	r3, [sp, #88]	; 0x58
 800888e:	d030      	beq.n	80088f2 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0x96>
 8008890:	2bff      	cmp	r3, #255	; 0xff
 8008892:	d12c      	bne.n	80088ee <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0x92>
 8008894:	4560      	cmp	r0, ip
 8008896:	bf14      	ite	ne
 8008898:	2004      	movne	r0, #4
 800889a:	2001      	moveq	r0, #1
 800889c:	e9cd 0102 	strd	r0, r1, [sp, #8]
 80088a0:	9204      	str	r2, [sp, #16]
 80088a2:	4620      	mov	r0, r4
 80088a4:	f8bd 2054 	ldrh.w	r2, [sp, #84]	; 0x54
 80088a8:	f8ad 201c 	strh.w	r2, [sp, #28]
 80088ac:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 80088b0:	f8ad 6018 	strh.w	r6, [sp, #24]
 80088b4:	f8ad 501a 	strh.w	r5, [sp, #26]
 80088b8:	f7ff ff5e 	bl	8008778 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 80088bc:	e9cd 9700 	strd	r9, r7, [sp]
 80088c0:	4603      	mov	r3, r0
 80088c2:	f8bd 2048 	ldrh.w	r2, [sp, #72]	; 0x48
 80088c6:	4651      	mov	r1, sl
 80088c8:	4620      	mov	r0, r4
 80088ca:	f7ff ffb7 	bl	800883c <_ZNK8touchgfx3HAL13getDstAddressEttPttNS_6Bitmap12BitmapFormatE>
 80088ce:	f8ad 901e 	strh.w	r9, [sp, #30]
 80088d2:	9005      	str	r0, [sp, #20]
 80088d4:	f88d 8025 	strb.w	r8, [sp, #37]	; 0x25
 80088d8:	f88d 7026 	strb.w	r7, [sp, #38]	; 0x26
 80088dc:	b106      	cbz	r6, 80088e0 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0x84>
 80088de:	b98d      	cbnz	r5, 8008904 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0xa8>
 80088e0:	4b12      	ldr	r3, [pc, #72]	; (800892c <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0xd0>)
 80088e2:	4a13      	ldr	r2, [pc, #76]	; (8008930 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0xd4>)
 80088e4:	f240 11af 	movw	r1, #431	; 0x1af
 80088e8:	4812      	ldr	r0, [pc, #72]	; (8008934 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0xd8>)
 80088ea:	f00f fb37 	bl	8017f5c <__assert_func>
 80088ee:	2004      	movs	r0, #4
 80088f0:	e7d4      	b.n	800889c <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0x40>
 80088f2:	2bff      	cmp	r3, #255	; 0xff
 80088f4:	d104      	bne.n	8008900 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0xa4>
 80088f6:	2800      	cmp	r0, #0
 80088f8:	bf14      	ite	ne
 80088fa:	2040      	movne	r0, #64	; 0x40
 80088fc:	2020      	moveq	r0, #32
 80088fe:	e7cd      	b.n	800889c <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0x40>
 8008900:	2040      	movs	r0, #64	; 0x40
 8008902:	e7cb      	b.n	800889c <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0x40>
 8008904:	6823      	ldr	r3, [r4, #0]
 8008906:	9d02      	ldr	r5, [sp, #8]
 8008908:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800890a:	4620      	mov	r0, r4
 800890c:	4798      	blx	r3
 800890e:	4228      	tst	r0, r5
 8008910:	d104      	bne.n	800891c <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0xc0>
 8008912:	4b09      	ldr	r3, [pc, #36]	; (8008938 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0xdc>)
 8008914:	4a06      	ldr	r2, [pc, #24]	; (8008930 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0xd4>)
 8008916:	f44f 71d8 	mov.w	r1, #432	; 0x1b0
 800891a:	e7e5      	b.n	80088e8 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0x8c>
 800891c:	6860      	ldr	r0, [r4, #4]
 800891e:	6803      	ldr	r3, [r0, #0]
 8008920:	a902      	add	r1, sp, #8
 8008922:	685b      	ldr	r3, [r3, #4]
 8008924:	4798      	blx	r3
 8008926:	b00a      	add	sp, #40	; 0x28
 8008928:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800892c:	0801a6dc 	.word	0x0801a6dc
 8008930:	0801a8d9 	.word	0x0801a8d9
 8008934:	0801a660 	.word	0x0801a660
 8008938:	0801a714 	.word	0x0801a714

0800893c <_ZN8touchgfx3HAL8blitCopyEPKtttttthbtNS_6Bitmap12BitmapFormatES4_>:
 800893c:	b510      	push	{r4, lr}
 800893e:	b08a      	sub	sp, #40	; 0x28
 8008940:	f89d 404c 	ldrb.w	r4, [sp, #76]	; 0x4c
 8008944:	9408      	str	r4, [sp, #32]
 8008946:	f89d 4048 	ldrb.w	r4, [sp, #72]	; 0x48
 800894a:	9407      	str	r4, [sp, #28]
 800894c:	f8bd 4044 	ldrh.w	r4, [sp, #68]	; 0x44
 8008950:	9406      	str	r4, [sp, #24]
 8008952:	f89d 4040 	ldrb.w	r4, [sp, #64]	; 0x40
 8008956:	9405      	str	r4, [sp, #20]
 8008958:	f89d 403c 	ldrb.w	r4, [sp, #60]	; 0x3c
 800895c:	9404      	str	r4, [sp, #16]
 800895e:	f8bd 4038 	ldrh.w	r4, [sp, #56]	; 0x38
 8008962:	9403      	str	r4, [sp, #12]
 8008964:	f8bd 4034 	ldrh.w	r4, [sp, #52]	; 0x34
 8008968:	9402      	str	r4, [sp, #8]
 800896a:	f8bd 4030 	ldrh.w	r4, [sp, #48]	; 0x30
 800896e:	e9cd 3400 	strd	r3, r4, [sp]
 8008972:	4613      	mov	r3, r2
 8008974:	2200      	movs	r2, #0
 8008976:	f7ff ff71 	bl	800885c <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_>
 800897a:	b00a      	add	sp, #40	; 0x28
 800897c:	bd10      	pop	{r4, pc}
	...

08008980 <_ZN8touchgfx3HAL8blitCopyEPKtttttthb>:
 8008980:	b5f0      	push	{r4, r5, r6, r7, lr}
 8008982:	b08b      	sub	sp, #44	; 0x2c
 8008984:	4616      	mov	r6, r2
 8008986:	460d      	mov	r5, r1
 8008988:	461f      	mov	r7, r3
 800898a:	4604      	mov	r4, r0
 800898c:	f7f8 f8c4 	bl	8000b18 <_ZN8touchgfx3HAL3lcdEv>
 8008990:	6803      	ldr	r3, [r0, #0]
 8008992:	6a1b      	ldr	r3, [r3, #32]
 8008994:	4798      	blx	r3
 8008996:	e9cd 0007 	strd	r0, r0, [sp, #28]
 800899a:	4b0d      	ldr	r3, [pc, #52]	; (80089d0 <_ZN8touchgfx3HAL8blitCopyEPKtttttthb+0x50>)
 800899c:	881b      	ldrh	r3, [r3, #0]
 800899e:	9306      	str	r3, [sp, #24]
 80089a0:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 80089a4:	9305      	str	r3, [sp, #20]
 80089a6:	f89d 304c 	ldrb.w	r3, [sp, #76]	; 0x4c
 80089aa:	9304      	str	r3, [sp, #16]
 80089ac:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 80089b0:	9303      	str	r3, [sp, #12]
 80089b2:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 80089b6:	9302      	str	r3, [sp, #8]
 80089b8:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 80089bc:	2200      	movs	r2, #0
 80089be:	e9cd 7300 	strd	r7, r3, [sp]
 80089c2:	4629      	mov	r1, r5
 80089c4:	4633      	mov	r3, r6
 80089c6:	4620      	mov	r0, r4
 80089c8:	f7ff ff48 	bl	800885c <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_>
 80089cc:	b00b      	add	sp, #44	; 0x2c
 80089ce:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80089d0:	20012172 	.word	0x20012172

080089d4 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttth>:
 80089d4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80089d8:	461f      	mov	r7, r3
 80089da:	4b14      	ldr	r3, [pc, #80]	; (8008a2c <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttth+0x58>)
 80089dc:	b08a      	sub	sp, #40	; 0x28
 80089de:	4616      	mov	r6, r2
 80089e0:	f8b3 8000 	ldrh.w	r8, [r3]
 80089e4:	460d      	mov	r5, r1
 80089e6:	4604      	mov	r4, r0
 80089e8:	f7f8 f896 	bl	8000b18 <_ZN8touchgfx3HAL3lcdEv>
 80089ec:	6803      	ldr	r3, [r0, #0]
 80089ee:	6a1b      	ldr	r3, [r3, #32]
 80089f0:	4798      	blx	r3
 80089f2:	2302      	movs	r3, #2
 80089f4:	e9cd 8306 	strd	r8, r3, [sp, #24]
 80089f8:	2301      	movs	r3, #1
 80089fa:	9305      	str	r3, [sp, #20]
 80089fc:	f89d 304c 	ldrb.w	r3, [sp, #76]	; 0x4c
 8008a00:	9304      	str	r3, [sp, #16]
 8008a02:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8008a06:	9303      	str	r3, [sp, #12]
 8008a08:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 8008a0c:	9302      	str	r3, [sp, #8]
 8008a0e:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 8008a12:	9008      	str	r0, [sp, #32]
 8008a14:	e9cd 7300 	strd	r7, r3, [sp]
 8008a18:	2200      	movs	r2, #0
 8008a1a:	4633      	mov	r3, r6
 8008a1c:	4629      	mov	r1, r5
 8008a1e:	4620      	mov	r0, r4
 8008a20:	f7ff ff1c 	bl	800885c <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_>
 8008a24:	b00a      	add	sp, #40	; 0x28
 8008a26:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8008a2a:	bf00      	nop
 8008a2c:	20012172 	.word	0x20012172

08008a30 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatE>:
 8008a30:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8008a34:	b08b      	sub	sp, #44	; 0x2c
 8008a36:	469b      	mov	fp, r3
 8008a38:	f89d 7058 	ldrb.w	r7, [sp, #88]	; 0x58
 8008a3c:	f89d 5060 	ldrb.w	r5, [sp, #96]	; 0x60
 8008a40:	f8bd 805c 	ldrh.w	r8, [sp, #92]	; 0x5c
 8008a44:	2fff      	cmp	r7, #255	; 0xff
 8008a46:	bf14      	ite	ne
 8008a48:	2308      	movne	r3, #8
 8008a4a:	2302      	moveq	r3, #2
 8008a4c:	2600      	movs	r6, #0
 8008a4e:	4604      	mov	r4, r0
 8008a50:	4689      	mov	r9, r1
 8008a52:	4692      	mov	sl, r2
 8008a54:	e9cd 3602 	strd	r3, r6, [sp, #8]
 8008a58:	9608      	str	r6, [sp, #32]
 8008a5a:	f7ff fe8d 	bl	8008778 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8008a5e:	e9cd 8500 	strd	r8, r5, [sp]
 8008a62:	4603      	mov	r3, r0
 8008a64:	465a      	mov	r2, fp
 8008a66:	4651      	mov	r1, sl
 8008a68:	4620      	mov	r0, r4
 8008a6a:	f7ff fee7 	bl	800883c <_ZNK8touchgfx3HAL13getDstAddressEttPttNS_6Bitmap12BitmapFormatE>
 8008a6e:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 8008a72:	f8ad 3018 	strh.w	r3, [sp, #24]
 8008a76:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 8008a7a:	f8ad 301a 	strh.w	r3, [sp, #26]
 8008a7e:	6823      	ldr	r3, [r4, #0]
 8008a80:	9005      	str	r0, [sp, #20]
 8008a82:	f88d 5025 	strb.w	r5, [sp, #37]	; 0x25
 8008a86:	f88d 5026 	strb.w	r5, [sp, #38]	; 0x26
 8008a8a:	f8ad 601c 	strh.w	r6, [sp, #28]
 8008a8e:	f8ad 801e 	strh.w	r8, [sp, #30]
 8008a92:	f8cd 9020 	str.w	r9, [sp, #32]
 8008a96:	f88d 7024 	strb.w	r7, [sp, #36]	; 0x24
 8008a9a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8008a9c:	9d02      	ldr	r5, [sp, #8]
 8008a9e:	4620      	mov	r0, r4
 8008aa0:	4798      	blx	r3
 8008aa2:	4228      	tst	r0, r5
 8008aa4:	d106      	bne.n	8008ab4 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatE+0x84>
 8008aa6:	4b07      	ldr	r3, [pc, #28]	; (8008ac4 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatE+0x94>)
 8008aa8:	4a07      	ldr	r2, [pc, #28]	; (8008ac8 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatE+0x98>)
 8008aaa:	4808      	ldr	r0, [pc, #32]	; (8008acc <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatE+0x9c>)
 8008aac:	f240 11e7 	movw	r1, #487	; 0x1e7
 8008ab0:	f00f fa54 	bl	8017f5c <__assert_func>
 8008ab4:	6860      	ldr	r0, [r4, #4]
 8008ab6:	6803      	ldr	r3, [r0, #0]
 8008ab8:	a902      	add	r1, sp, #8
 8008aba:	685b      	ldr	r3, [r3, #4]
 8008abc:	4798      	blx	r3
 8008abe:	b00b      	add	sp, #44	; 0x2c
 8008ac0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8008ac4:	0801a714 	.word	0x0801a714
 8008ac8:	0801a9a2 	.word	0x0801a9a2
 8008acc:	0801a660 	.word	0x0801a660

08008ad0 <_ZNK8touchgfx3HAL13getDstAddressEttPt>:
 8008ad0:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8008ad4:	461f      	mov	r7, r3
 8008ad6:	4b0b      	ldr	r3, [pc, #44]	; (8008b04 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x34>)
 8008ad8:	460d      	mov	r5, r1
 8008ada:	f8b3 8000 	ldrh.w	r8, [r3]
 8008ade:	4616      	mov	r6, r2
 8008ae0:	4604      	mov	r4, r0
 8008ae2:	f7f8 f819 	bl	8000b18 <_ZN8touchgfx3HAL3lcdEv>
 8008ae6:	6803      	ldr	r3, [r0, #0]
 8008ae8:	6a1b      	ldr	r3, [r3, #32]
 8008aea:	4798      	blx	r3
 8008aec:	463b      	mov	r3, r7
 8008aee:	e9cd 8000 	strd	r8, r0, [sp]
 8008af2:	4632      	mov	r2, r6
 8008af4:	4629      	mov	r1, r5
 8008af6:	4620      	mov	r0, r4
 8008af8:	f7ff fea0 	bl	800883c <_ZNK8touchgfx3HAL13getDstAddressEttPttNS_6Bitmap12BitmapFormatE>
 8008afc:	b002      	add	sp, #8
 8008afe:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8008b02:	bf00      	nop
 8008b04:	20012172 	.word	0x20012172

08008b08 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE>:
 8008b08:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8008b0c:	b088      	sub	sp, #32
 8008b0e:	4698      	mov	r8, r3
 8008b10:	2300      	movs	r3, #0
 8008b12:	9306      	str	r3, [sp, #24]
 8008b14:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 8008b18:	f8bd 6038 	ldrh.w	r6, [sp, #56]	; 0x38
 8008b1c:	f8bd 503c 	ldrh.w	r5, [sp, #60]	; 0x3c
 8008b20:	f8ad 6010 	strh.w	r6, [sp, #16]
 8008b24:	e9cd 3100 	strd	r3, r1, [sp]
 8008b28:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 8008b2c:	f8ad 3014 	strh.w	r3, [sp, #20]
 8008b30:	f89d 3048 	ldrb.w	r3, [sp, #72]	; 0x48
 8008b34:	f88d 301c 	strb.w	r3, [sp, #28]
 8008b38:	4617      	mov	r7, r2
 8008b3a:	4604      	mov	r4, r0
 8008b3c:	f8ad 5012 	strh.w	r5, [sp, #18]
 8008b40:	f7ff fe1a 	bl	8008778 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8008b44:	4642      	mov	r2, r8
 8008b46:	4603      	mov	r3, r0
 8008b48:	4639      	mov	r1, r7
 8008b4a:	4620      	mov	r0, r4
 8008b4c:	f7ff ffc0 	bl	8008ad0 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 8008b50:	4b16      	ldr	r3, [pc, #88]	; (8008bac <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0xa4>)
 8008b52:	9003      	str	r0, [sp, #12]
 8008b54:	881b      	ldrh	r3, [r3, #0]
 8008b56:	f8ad 3016 	strh.w	r3, [sp, #22]
 8008b5a:	f7f7 ffdd 	bl	8000b18 <_ZN8touchgfx3HAL3lcdEv>
 8008b5e:	6803      	ldr	r3, [r0, #0]
 8008b60:	6a1b      	ldr	r3, [r3, #32]
 8008b62:	4798      	blx	r3
 8008b64:	f88d 001e 	strb.w	r0, [sp, #30]
 8008b68:	f88d 001d 	strb.w	r0, [sp, #29]
 8008b6c:	b106      	cbz	r6, 8008b70 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0x68>
 8008b6e:	b935      	cbnz	r5, 8008b7e <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0x76>
 8008b70:	4b0f      	ldr	r3, [pc, #60]	; (8008bb0 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0xa8>)
 8008b72:	4a10      	ldr	r2, [pc, #64]	; (8008bb4 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0xac>)
 8008b74:	f44f 71e6 	mov.w	r1, #460	; 0x1cc
 8008b78:	480f      	ldr	r0, [pc, #60]	; (8008bb8 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0xb0>)
 8008b7a:	f00f f9ef 	bl	8017f5c <__assert_func>
 8008b7e:	6823      	ldr	r3, [r4, #0]
 8008b80:	9d00      	ldr	r5, [sp, #0]
 8008b82:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8008b84:	4620      	mov	r0, r4
 8008b86:	4798      	blx	r3
 8008b88:	4228      	tst	r0, r5
 8008b8a:	d104      	bne.n	8008b96 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0x8e>
 8008b8c:	4b0b      	ldr	r3, [pc, #44]	; (8008bbc <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0xb4>)
 8008b8e:	4a09      	ldr	r2, [pc, #36]	; (8008bb4 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0xac>)
 8008b90:	f240 11cd 	movw	r1, #461	; 0x1cd
 8008b94:	e7f0      	b.n	8008b78 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0x70>
 8008b96:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8008b98:	6860      	ldr	r0, [r4, #4]
 8008b9a:	9306      	str	r3, [sp, #24]
 8008b9c:	6803      	ldr	r3, [r0, #0]
 8008b9e:	4669      	mov	r1, sp
 8008ba0:	685b      	ldr	r3, [r3, #4]
 8008ba2:	4798      	blx	r3
 8008ba4:	b008      	add	sp, #32
 8008ba6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8008baa:	bf00      	nop
 8008bac:	20012172 	.word	0x20012172
 8008bb0:	0801a6dc 	.word	0x0801a6dc
 8008bb4:	0801a78b 	.word	0x0801a78b
 8008bb8:	0801a660 	.word	0x0801a660
 8008bbc:	0801a714 	.word	0x0801a714

08008bc0 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE>:
 8008bc0:	b570      	push	{r4, r5, r6, lr}
 8008bc2:	b08a      	sub	sp, #40	; 0x28
 8008bc4:	466b      	mov	r3, sp
 8008bc6:	e883 0006 	stmia.w	r3, {r1, r2}
 8008bca:	4b20      	ldr	r3, [pc, #128]	; (8008c4c <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x8c>)
 8008bcc:	781b      	ldrb	r3, [r3, #0]
 8008bce:	4604      	mov	r4, r0
 8008bd0:	b933      	cbnz	r3, 8008be0 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x20>
 8008bd2:	4b1f      	ldr	r3, [pc, #124]	; (8008c50 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x90>)
 8008bd4:	4a1f      	ldr	r2, [pc, #124]	; (8008c54 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x94>)
 8008bd6:	4820      	ldr	r0, [pc, #128]	; (8008c58 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x98>)
 8008bd8:	f44f 71fc 	mov.w	r1, #504	; 0x1f8
 8008bdc:	f00f f9be 	bl	8017f5c <__assert_func>
 8008be0:	2300      	movs	r3, #0
 8008be2:	9308      	str	r3, [sp, #32]
 8008be4:	2301      	movs	r3, #1
 8008be6:	9302      	str	r3, [sp, #8]
 8008be8:	6803      	ldr	r3, [r0, #0]
 8008bea:	f8bd 5000 	ldrh.w	r5, [sp]
 8008bee:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8008bf0:	f8bd 6002 	ldrh.w	r6, [sp, #2]
 8008bf4:	4798      	blx	r3
 8008bf6:	4632      	mov	r2, r6
 8008bf8:	4629      	mov	r1, r5
 8008bfa:	4603      	mov	r3, r0
 8008bfc:	4620      	mov	r0, r4
 8008bfe:	f7ff ff67 	bl	8008ad0 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 8008c02:	6c63      	ldr	r3, [r4, #68]	; 0x44
 8008c04:	9305      	str	r3, [sp, #20]
 8008c06:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8008c0a:	f8ad 3018 	strh.w	r3, [sp, #24]
 8008c0e:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 8008c12:	f8ad 301a 	strh.w	r3, [sp, #26]
 8008c16:	4b11      	ldr	r3, [pc, #68]	; (8008c5c <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x9c>)
 8008c18:	9003      	str	r0, [sp, #12]
 8008c1a:	881b      	ldrh	r3, [r3, #0]
 8008c1c:	f8ad 301c 	strh.w	r3, [sp, #28]
 8008c20:	f8ad 301e 	strh.w	r3, [sp, #30]
 8008c24:	f7f7 ff78 	bl	8000b18 <_ZN8touchgfx3HAL3lcdEv>
 8008c28:	6803      	ldr	r3, [r0, #0]
 8008c2a:	6a1b      	ldr	r3, [r3, #32]
 8008c2c:	4798      	blx	r3
 8008c2e:	23ff      	movs	r3, #255	; 0xff
 8008c30:	f88d 0025 	strb.w	r0, [sp, #37]	; 0x25
 8008c34:	f88d 0026 	strb.w	r0, [sp, #38]	; 0x26
 8008c38:	6860      	ldr	r0, [r4, #4]
 8008c3a:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 8008c3e:	6803      	ldr	r3, [r0, #0]
 8008c40:	a902      	add	r1, sp, #8
 8008c42:	685b      	ldr	r3, [r3, #4]
 8008c44:	4798      	blx	r3
 8008c46:	6c60      	ldr	r0, [r4, #68]	; 0x44
 8008c48:	b00a      	add	sp, #40	; 0x28
 8008c4a:	bd70      	pop	{r4, r5, r6, pc}
 8008c4c:	20012177 	.word	0x20012177
 8008c50:	0801a5ad 	.word	0x0801a5ad
 8008c54:	0801a82f 	.word	0x0801a82f
 8008c58:	0801a660 	.word	0x0801a660
 8008c5c:	20012172 	.word	0x20012172

08008c60 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm>:
 8008c60:	b5f0      	push	{r4, r5, r6, r7, lr}
 8008c62:	b08b      	sub	sp, #44	; 0x2c
 8008c64:	466d      	mov	r5, sp
 8008c66:	e885 0006 	stmia.w	r5, {r1, r2}
 8008c6a:	461d      	mov	r5, r3
 8008c6c:	2300      	movs	r3, #0
 8008c6e:	9308      	str	r3, [sp, #32]
 8008c70:	2301      	movs	r3, #1
 8008c72:	9302      	str	r3, [sp, #8]
 8008c74:	6803      	ldr	r3, [r0, #0]
 8008c76:	f8bd 6000 	ldrh.w	r6, [sp]
 8008c7a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8008c7c:	f8bd 7002 	ldrh.w	r7, [sp, #2]
 8008c80:	4604      	mov	r4, r0
 8008c82:	4798      	blx	r3
 8008c84:	463a      	mov	r2, r7
 8008c86:	4631      	mov	r1, r6
 8008c88:	4603      	mov	r3, r0
 8008c8a:	4620      	mov	r0, r4
 8008c8c:	f7ff ff20 	bl	8008ad0 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 8008c90:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8008c94:	f8ad 3018 	strh.w	r3, [sp, #24]
 8008c98:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 8008c9c:	f8ad 301a 	strh.w	r3, [sp, #26]
 8008ca0:	4b0e      	ldr	r3, [pc, #56]	; (8008cdc <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm+0x7c>)
 8008ca2:	9003      	str	r0, [sp, #12]
 8008ca4:	881b      	ldrh	r3, [r3, #0]
 8008ca6:	f8ad 301c 	strh.w	r3, [sp, #28]
 8008caa:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8008cac:	f8ad 301e 	strh.w	r3, [sp, #30]
 8008cb0:	9505      	str	r5, [sp, #20]
 8008cb2:	f7f7 ff31 	bl	8000b18 <_ZN8touchgfx3HAL3lcdEv>
 8008cb6:	6803      	ldr	r3, [r0, #0]
 8008cb8:	6a1b      	ldr	r3, [r3, #32]
 8008cba:	4798      	blx	r3
 8008cbc:	23ff      	movs	r3, #255	; 0xff
 8008cbe:	f88d 0025 	strb.w	r0, [sp, #37]	; 0x25
 8008cc2:	f88d 0026 	strb.w	r0, [sp, #38]	; 0x26
 8008cc6:	6860      	ldr	r0, [r4, #4]
 8008cc8:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 8008ccc:	6803      	ldr	r3, [r0, #0]
 8008cce:	a902      	add	r1, sp, #8
 8008cd0:	685b      	ldr	r3, [r3, #4]
 8008cd2:	4798      	blx	r3
 8008cd4:	4628      	mov	r0, r5
 8008cd6:	b00b      	add	sp, #44	; 0x2c
 8008cd8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8008cda:	bf00      	nop
 8008cdc:	20012172 	.word	0x20012172

08008ce0 <_ZN8touchgfx3HAL16swapFrameBuffersEv>:
 8008ce0:	b570      	push	{r4, r5, r6, lr}
 8008ce2:	f890 306a 	ldrb.w	r3, [r0, #106]	; 0x6a
 8008ce6:	4604      	mov	r4, r0
 8008ce8:	b19b      	cbz	r3, 8008d12 <_ZN8touchgfx3HAL16swapFrameBuffersEv+0x32>
 8008cea:	2002      	movs	r0, #2
 8008cec:	f7f7 fd26 	bl	800073c <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>
 8008cf0:	2300      	movs	r3, #0
 8008cf2:	f884 306a 	strb.w	r3, [r4, #106]	; 0x6a
 8008cf6:	f884 3069 	strb.w	r3, [r4, #105]	; 0x69
 8008cfa:	6823      	ldr	r3, [r4, #0]
 8008cfc:	4620      	mov	r0, r4
 8008cfe:	f8d3 50a0 	ldr.w	r5, [r3, #160]	; 0xa0
 8008d02:	f7ff fd39 	bl	8008778 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8008d06:	462b      	mov	r3, r5
 8008d08:	4601      	mov	r1, r0
 8008d0a:	4620      	mov	r0, r4
 8008d0c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8008d10:	4718      	bx	r3
 8008d12:	bd70      	pop	{r4, r5, r6, pc}

08008d14 <_ZN8touchgfx17LockFreeDMA_Queue7isEmptyEv>:
 8008d14:	e9d0 2003 	ldrd	r2, r0, [r0, #12]
 8008d18:	1a13      	subs	r3, r2, r0
 8008d1a:	4258      	negs	r0, r3
 8008d1c:	4158      	adcs	r0, r3
 8008d1e:	4770      	bx	lr

08008d20 <_ZN8touchgfx17LockFreeDMA_Queue6isFullEv>:
 8008d20:	e9d0 2303 	ldrd	r2, r3, [r0, #12]
 8008d24:	1a9b      	subs	r3, r3, r2
 8008d26:	2b00      	cmp	r3, #0
 8008d28:	bfdc      	itt	le
 8008d2a:	6882      	ldrle	r2, [r0, #8]
 8008d2c:	189b      	addle	r3, r3, r2
 8008d2e:	2b01      	cmp	r3, #1
 8008d30:	bfcc      	ite	gt
 8008d32:	2000      	movgt	r0, #0
 8008d34:	2001      	movle	r0, #1
 8008d36:	4770      	bx	lr

08008d38 <_ZN8touchgfx17LockFreeDMA_Queue5firstEv>:
 8008d38:	6902      	ldr	r2, [r0, #16]
 8008d3a:	6840      	ldr	r0, [r0, #4]
 8008d3c:	eb00 1042 	add.w	r0, r0, r2, lsl #5
 8008d40:	4770      	bx	lr

08008d42 <_ZN8touchgfx13DMA_Interface13seedExecutionEv>:
 8008d42:	6803      	ldr	r3, [r0, #0]
 8008d44:	691b      	ldr	r3, [r3, #16]
 8008d46:	4718      	bx	r3

08008d48 <_ZN8touchgfx13DMA_Interface11enableAlphaEh>:
 8008d48:	4770      	bx	lr

08008d4a <_ZN8touchgfx13DMA_Interface12disableAlphaEv>:
 8008d4a:	4770      	bx	lr

08008d4c <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>:
 8008d4c:	4770      	bx	lr
	...

08008d50 <_ZN8touchgfx13DMA_Interface7executeEv>:
 8008d50:	b570      	push	{r4, r5, r6, lr}
 8008d52:	2301      	movs	r3, #1
 8008d54:	7203      	strb	r3, [r0, #8]
 8008d56:	4604      	mov	r4, r0
 8008d58:	6840      	ldr	r0, [r0, #4]
 8008d5a:	6803      	ldr	r3, [r0, #0]
 8008d5c:	699b      	ldr	r3, [r3, #24]
 8008d5e:	4798      	blx	r3
 8008d60:	6803      	ldr	r3, [r0, #0]
 8008d62:	2b08      	cmp	r3, #8
 8008d64:	4605      	mov	r5, r0
 8008d66:	d01e      	beq.n	8008da6 <_ZN8touchgfx13DMA_Interface7executeEv+0x56>
 8008d68:	d80b      	bhi.n	8008d82 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 8008d6a:	2b02      	cmp	r3, #2
 8008d6c:	d027      	beq.n	8008dbe <_ZN8touchgfx13DMA_Interface7executeEv+0x6e>
 8008d6e:	2b04      	cmp	r3, #4
 8008d70:	d011      	beq.n	8008d96 <_ZN8touchgfx13DMA_Interface7executeEv+0x46>
 8008d72:	2b01      	cmp	r3, #1
 8008d74:	d028      	beq.n	8008dc8 <_ZN8touchgfx13DMA_Interface7executeEv+0x78>
 8008d76:	4b17      	ldr	r3, [pc, #92]	; (8008dd4 <_ZN8touchgfx13DMA_Interface7executeEv+0x84>)
 8008d78:	4a17      	ldr	r2, [pc, #92]	; (8008dd8 <_ZN8touchgfx13DMA_Interface7executeEv+0x88>)
 8008d7a:	4818      	ldr	r0, [pc, #96]	; (8008ddc <_ZN8touchgfx13DMA_Interface7executeEv+0x8c>)
 8008d7c:	218b      	movs	r1, #139	; 0x8b
 8008d7e:	f00f f8ed 	bl	8017f5c <__assert_func>
 8008d82:	2b40      	cmp	r3, #64	; 0x40
 8008d84:	d020      	beq.n	8008dc8 <_ZN8touchgfx13DMA_Interface7executeEv+0x78>
 8008d86:	d801      	bhi.n	8008d8c <_ZN8touchgfx13DMA_Interface7executeEv+0x3c>
 8008d88:	2b20      	cmp	r3, #32
 8008d8a:	e7f3      	b.n	8008d74 <_ZN8touchgfx13DMA_Interface7executeEv+0x24>
 8008d8c:	2b80      	cmp	r3, #128	; 0x80
 8008d8e:	d01b      	beq.n	8008dc8 <_ZN8touchgfx13DMA_Interface7executeEv+0x78>
 8008d90:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8008d94:	e7ee      	b.n	8008d74 <_ZN8touchgfx13DMA_Interface7executeEv+0x24>
 8008d96:	6823      	ldr	r3, [r4, #0]
 8008d98:	7f01      	ldrb	r1, [r0, #28]
 8008d9a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8008d9c:	4620      	mov	r0, r4
 8008d9e:	4798      	blx	r3
 8008da0:	6823      	ldr	r3, [r4, #0]
 8008da2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8008da4:	e006      	b.n	8008db4 <_ZN8touchgfx13DMA_Interface7executeEv+0x64>
 8008da6:	6823      	ldr	r3, [r4, #0]
 8008da8:	7f01      	ldrb	r1, [r0, #28]
 8008daa:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8008dac:	4620      	mov	r0, r4
 8008dae:	4798      	blx	r3
 8008db0:	6823      	ldr	r3, [r4, #0]
 8008db2:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8008db4:	4629      	mov	r1, r5
 8008db6:	4620      	mov	r0, r4
 8008db8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8008dbc:	4718      	bx	r3
 8008dbe:	6823      	ldr	r3, [r4, #0]
 8008dc0:	4620      	mov	r0, r4
 8008dc2:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8008dc4:	4798      	blx	r3
 8008dc6:	e7f3      	b.n	8008db0 <_ZN8touchgfx13DMA_Interface7executeEv+0x60>
 8008dc8:	6823      	ldr	r3, [r4, #0]
 8008dca:	4620      	mov	r0, r4
 8008dcc:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8008dce:	4798      	blx	r3
 8008dd0:	e7e6      	b.n	8008da0 <_ZN8touchgfx13DMA_Interface7executeEv+0x50>
 8008dd2:	bf00      	nop
 8008dd4:	0801aa80 	.word	0x0801aa80
 8008dd8:	0801ab40 	.word	0x0801ab40
 8008ddc:	0801aaa5 	.word	0x0801aaa5

08008de0 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE>:
 8008de0:	b570      	push	{r4, r5, r6, lr}
 8008de2:	4604      	mov	r4, r0
 8008de4:	460e      	mov	r6, r1
 8008de6:	6860      	ldr	r0, [r4, #4]
 8008de8:	6803      	ldr	r3, [r0, #0]
 8008dea:	685b      	ldr	r3, [r3, #4]
 8008dec:	4798      	blx	r3
 8008dee:	2800      	cmp	r0, #0
 8008df0:	d1f9      	bne.n	8008de6 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x6>
 8008df2:	4d0b      	ldr	r5, [pc, #44]	; (8008e20 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x40>)
 8008df4:	6828      	ldr	r0, [r5, #0]
 8008df6:	6803      	ldr	r3, [r0, #0]
 8008df8:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8008dfa:	4798      	blx	r3
 8008dfc:	f7f7 fddc 	bl	80009b8 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>
 8008e00:	6860      	ldr	r0, [r4, #4]
 8008e02:	6803      	ldr	r3, [r0, #0]
 8008e04:	4631      	mov	r1, r6
 8008e06:	689b      	ldr	r3, [r3, #8]
 8008e08:	4798      	blx	r3
 8008e0a:	6823      	ldr	r3, [r4, #0]
 8008e0c:	4620      	mov	r0, r4
 8008e0e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8008e10:	4798      	blx	r3
 8008e12:	6828      	ldr	r0, [r5, #0]
 8008e14:	6803      	ldr	r3, [r0, #0]
 8008e16:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8008e1a:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8008e1c:	4718      	bx	r3
 8008e1e:	bf00      	nop
 8008e20:	20012178 	.word	0x20012178

08008e24 <_ZN8touchgfx13DMA_Interface27waitForFrameBufferSemaphoreEv>:
 8008e24:	b508      	push	{r3, lr}
 8008e26:	f7f7 fd99 	bl	800095c <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 8008e2a:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8008e2e:	f7f7 bdad 	b.w	800098c <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

08008e32 <_ZN8touchgfx17LockFreeDMA_QueueD0Ev>:
 8008e32:	b510      	push	{r4, lr}
 8008e34:	2114      	movs	r1, #20
 8008e36:	4604      	mov	r4, r0
 8008e38:	f00f f864 	bl	8017f04 <_ZdlPvj>
 8008e3c:	4620      	mov	r0, r4
 8008e3e:	bd10      	pop	{r4, pc}

08008e40 <_ZN8touchgfx13DMA_Interface5startEv>:
 8008e40:	b510      	push	{r4, lr}
 8008e42:	4604      	mov	r4, r0
 8008e44:	6840      	ldr	r0, [r0, #4]
 8008e46:	6803      	ldr	r3, [r0, #0]
 8008e48:	681b      	ldr	r3, [r3, #0]
 8008e4a:	4798      	blx	r3
 8008e4c:	b948      	cbnz	r0, 8008e62 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 8008e4e:	7a63      	ldrb	r3, [r4, #9]
 8008e50:	b13b      	cbz	r3, 8008e62 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 8008e52:	7a23      	ldrb	r3, [r4, #8]
 8008e54:	b92b      	cbnz	r3, 8008e62 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 8008e56:	6823      	ldr	r3, [r4, #0]
 8008e58:	4620      	mov	r0, r4
 8008e5a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8008e5c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8008e60:	4718      	bx	r3
 8008e62:	bd10      	pop	{r4, pc}

08008e64 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE>:
 8008e64:	b510      	push	{r4, lr}
 8008e66:	e9d0 4203 	ldrd	r4, r2, [r0, #12]
 8008e6a:	1b12      	subs	r2, r2, r4
 8008e6c:	2a00      	cmp	r2, #0
 8008e6e:	bfdc      	itt	le
 8008e70:	6883      	ldrle	r3, [r0, #8]
 8008e72:	18d2      	addle	r2, r2, r3
 8008e74:	2a01      	cmp	r2, #1
 8008e76:	dd18      	ble.n	8008eaa <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x46>
 8008e78:	6843      	ldr	r3, [r0, #4]
 8008e7a:	f101 021c 	add.w	r2, r1, #28
 8008e7e:	eb03 1344 	add.w	r3, r3, r4, lsl #5
 8008e82:	f851 4b04 	ldr.w	r4, [r1], #4
 8008e86:	f843 4b04 	str.w	r4, [r3], #4
 8008e8a:	4291      	cmp	r1, r2
 8008e8c:	d1f9      	bne.n	8008e82 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x1e>
 8008e8e:	880a      	ldrh	r2, [r1, #0]
 8008e90:	801a      	strh	r2, [r3, #0]
 8008e92:	788a      	ldrb	r2, [r1, #2]
 8008e94:	709a      	strb	r2, [r3, #2]
 8008e96:	68c3      	ldr	r3, [r0, #12]
 8008e98:	6882      	ldr	r2, [r0, #8]
 8008e9a:	f3bf 8f5b 	dmb	ish
 8008e9e:	3301      	adds	r3, #1
 8008ea0:	429a      	cmp	r2, r3
 8008ea2:	bfd8      	it	le
 8008ea4:	1a9b      	suble	r3, r3, r2
 8008ea6:	60c3      	str	r3, [r0, #12]
 8008ea8:	bd10      	pop	{r4, pc}
 8008eaa:	4b03      	ldr	r3, [pc, #12]	; (8008eb8 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x54>)
 8008eac:	4a03      	ldr	r2, [pc, #12]	; (8008ebc <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x58>)
 8008eae:	4804      	ldr	r0, [pc, #16]	; (8008ec0 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x5c>)
 8008eb0:	2139      	movs	r1, #57	; 0x39
 8008eb2:	f00f f853 	bl	8017f5c <__assert_func>
 8008eb6:	bf00      	nop
 8008eb8:	0801aacb 	.word	0x0801aacb
 8008ebc:	0801ab70 	.word	0x0801ab70
 8008ec0:	0801aaa5 	.word	0x0801aaa5

08008ec4 <_ZN8touchgfx17LockFreeDMA_Queue3popEv>:
 8008ec4:	b510      	push	{r4, lr}
 8008ec6:	6803      	ldr	r3, [r0, #0]
 8008ec8:	681b      	ldr	r3, [r3, #0]
 8008eca:	4604      	mov	r4, r0
 8008ecc:	4798      	blx	r3
 8008ece:	b128      	cbz	r0, 8008edc <_ZN8touchgfx17LockFreeDMA_Queue3popEv+0x18>
 8008ed0:	4b07      	ldr	r3, [pc, #28]	; (8008ef0 <_ZN8touchgfx17LockFreeDMA_Queue3popEv+0x2c>)
 8008ed2:	4a08      	ldr	r2, [pc, #32]	; (8008ef4 <_ZN8touchgfx17LockFreeDMA_Queue3popEv+0x30>)
 8008ed4:	4808      	ldr	r0, [pc, #32]	; (8008ef8 <_ZN8touchgfx17LockFreeDMA_Queue3popEv+0x34>)
 8008ed6:	213f      	movs	r1, #63	; 0x3f
 8008ed8:	f00f f840 	bl	8017f5c <__assert_func>
 8008edc:	6923      	ldr	r3, [r4, #16]
 8008ede:	68a2      	ldr	r2, [r4, #8]
 8008ee0:	f3bf 8f5b 	dmb	ish
 8008ee4:	3301      	adds	r3, #1
 8008ee6:	429a      	cmp	r2, r3
 8008ee8:	bfd8      	it	le
 8008eea:	1a9b      	suble	r3, r3, r2
 8008eec:	6123      	str	r3, [r4, #16]
 8008eee:	bd10      	pop	{r4, pc}
 8008ef0:	0801aaee 	.word	0x0801aaee
 8008ef4:	0801abbe 	.word	0x0801abbe
 8008ef8:	0801aaa5 	.word	0x0801aaa5

08008efc <_ZN8touchgfx13DMA_Interface16executeCompletedEv>:
 8008efc:	b570      	push	{r4, r5, r6, lr}
 8008efe:	4604      	mov	r4, r0
 8008f00:	6840      	ldr	r0, [r0, #4]
 8008f02:	6803      	ldr	r3, [r0, #0]
 8008f04:	681b      	ldr	r3, [r3, #0]
 8008f06:	4798      	blx	r3
 8008f08:	4605      	mov	r5, r0
 8008f0a:	b930      	cbnz	r0, 8008f1a <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 8008f0c:	7a23      	ldrb	r3, [r4, #8]
 8008f0e:	b123      	cbz	r3, 8008f1a <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 8008f10:	6860      	ldr	r0, [r4, #4]
 8008f12:	6803      	ldr	r3, [r0, #0]
 8008f14:	695b      	ldr	r3, [r3, #20]
 8008f16:	4798      	blx	r3
 8008f18:	7225      	strb	r5, [r4, #8]
 8008f1a:	6860      	ldr	r0, [r4, #4]
 8008f1c:	6803      	ldr	r3, [r0, #0]
 8008f1e:	681b      	ldr	r3, [r3, #0]
 8008f20:	4798      	blx	r3
 8008f22:	b928      	cbnz	r0, 8008f30 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x34>
 8008f24:	6823      	ldr	r3, [r4, #0]
 8008f26:	4620      	mov	r0, r4
 8008f28:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8008f2a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8008f2e:	4718      	bx	r3
 8008f30:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8008f34:	f7f7 bd58 	b.w	80009e8 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>

08008f38 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>:
 8008f38:	b510      	push	{r4, lr}
 8008f3a:	4c04      	ldr	r4, [pc, #16]	; (8008f4c <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi+0x14>)
 8008f3c:	6082      	str	r2, [r0, #8]
 8008f3e:	2200      	movs	r2, #0
 8008f40:	e9c0 4100 	strd	r4, r1, [r0]
 8008f44:	e9c0 2203 	strd	r2, r2, [r0, #12]
 8008f48:	bd10      	pop	{r4, pc}
 8008f4a:	bf00      	nop
 8008f4c:	0801ab24 	.word	0x0801ab24

08008f50 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>:
 8008f50:	6840      	ldr	r0, [r0, #4]
 8008f52:	6803      	ldr	r3, [r0, #0]
 8008f54:	681b      	ldr	r3, [r3, #0]
 8008f56:	4718      	bx	r3

08008f58 <_ZNK8touchgfx14AbstractButton15getPressedStateEv>:
 8008f58:	f890 002c 	ldrb.w	r0, [r0, #44]	; 0x2c
 8008f5c:	4770      	bx	lr

08008f5e <_ZN8touchgfx12ToggleButtonD1Ev>:
 8008f5e:	4770      	bx	lr

08008f60 <_ZN8touchgfx12ToggleButton16handleClickEventERKNS_10ClickEventE>:
 8008f60:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 8008f64:	b133      	cbz	r3, 8008f74 <_ZN8touchgfx12ToggleButton16handleClickEventERKNS_10ClickEventE+0x14>
 8008f66:	790b      	ldrb	r3, [r1, #4]
 8008f68:	2b01      	cmp	r3, #1
 8008f6a:	bf01      	itttt	eq
 8008f6c:	8dc3      	ldrheq	r3, [r0, #46]	; 0x2e
 8008f6e:	8e02      	ldrheq	r2, [r0, #48]	; 0x30
 8008f70:	85c2      	strheq	r2, [r0, #46]	; 0x2e
 8008f72:	8603      	strheq	r3, [r0, #48]	; 0x30
 8008f74:	f00e bf98 	b.w	8017ea8 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE>

08008f78 <_ZN8touchgfx12ToggleButton10setBitmapsERKNS_6BitmapES3_>:
 8008f78:	8813      	ldrh	r3, [r2, #0]
 8008f7a:	8683      	strh	r3, [r0, #52]	; 0x34
 8008f7c:	f000 ba3a 	b.w	80093f4 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>

08008f80 <_ZN8touchgfx12ToggleButtonD0Ev>:
 8008f80:	b510      	push	{r4, lr}
 8008f82:	2138      	movs	r1, #56	; 0x38
 8008f84:	4604      	mov	r4, r0
 8008f86:	f00e ffbd 	bl	8017f04 <_ZdlPvj>
 8008f8a:	4620      	mov	r0, r4
 8008f8c:	bd10      	pop	{r4, pc}

08008f8e <_ZNK8touchgfx8TextArea12getSolidRectEv>:
 8008f8e:	2200      	movs	r2, #0
 8008f90:	8002      	strh	r2, [r0, #0]
 8008f92:	8042      	strh	r2, [r0, #2]
 8008f94:	8082      	strh	r2, [r0, #4]
 8008f96:	80c2      	strh	r2, [r0, #6]
 8008f98:	4770      	bx	lr

08008f9a <_ZN8touchgfx8TextArea13setXBaselineYEss>:
 8008f9a:	b570      	push	{r4, r5, r6, lr}
 8008f9c:	6803      	ldr	r3, [r0, #0]
 8008f9e:	4604      	mov	r4, r0
 8008fa0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8008fa2:	4615      	mov	r5, r2
 8008fa4:	4798      	blx	r3
 8008fa6:	6823      	ldr	r3, [r4, #0]
 8008fa8:	4629      	mov	r1, r5
 8008faa:	4620      	mov	r0, r4
 8008fac:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8008fae:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8008fb2:	4718      	bx	r3

08008fb4 <_ZN8touchgfx8TextAreaD1Ev>:
 8008fb4:	4770      	bx	lr
	...

08008fb8 <_ZNK8touchgfx8TextArea12getTextWidthEv>:
 8008fb8:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8008fba:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 8008fbc:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8008fc0:	4299      	cmp	r1, r3
 8008fc2:	d029      	beq.n	8009018 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x60>
 8008fc4:	4b15      	ldr	r3, [pc, #84]	; (800901c <_ZNK8touchgfx8TextArea12getTextWidthEv+0x64>)
 8008fc6:	681b      	ldr	r3, [r3, #0]
 8008fc8:	b92b      	cbnz	r3, 8008fd6 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x1e>
 8008fca:	4b15      	ldr	r3, [pc, #84]	; (8009020 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x68>)
 8008fcc:	4a15      	ldr	r2, [pc, #84]	; (8009024 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x6c>)
 8008fce:	21b1      	movs	r1, #177	; 0xb1
 8008fd0:	4815      	ldr	r0, [pc, #84]	; (8009028 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x70>)
 8008fd2:	f00e ffc3 	bl	8017f5c <__assert_func>
 8008fd6:	4a15      	ldr	r2, [pc, #84]	; (800902c <_ZNK8touchgfx8TextArea12getTextWidthEv+0x74>)
 8008fd8:	8812      	ldrh	r2, [r2, #0]
 8008fda:	428a      	cmp	r2, r1
 8008fdc:	d803      	bhi.n	8008fe6 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x2e>
 8008fde:	4b14      	ldr	r3, [pc, #80]	; (8009030 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x78>)
 8008fe0:	4a10      	ldr	r2, [pc, #64]	; (8009024 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x6c>)
 8008fe2:	21b2      	movs	r1, #178	; 0xb2
 8008fe4:	e7f4      	b.n	8008fd0 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x18>
 8008fe6:	eb03 0241 	add.w	r2, r3, r1, lsl #1
 8008fea:	f813 0011 	ldrb.w	r0, [r3, r1, lsl #1]
 8008fee:	4b11      	ldr	r3, [pc, #68]	; (8009034 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x7c>)
 8008ff0:	7854      	ldrb	r4, [r2, #1]
 8008ff2:	681b      	ldr	r3, [r3, #0]
 8008ff4:	f853 5020 	ldr.w	r5, [r3, r0, lsl #2]
 8008ff8:	682b      	ldr	r3, [r5, #0]
 8008ffa:	69de      	ldr	r6, [r3, #28]
 8008ffc:	4b0e      	ldr	r3, [pc, #56]	; (8009038 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x80>)
 8008ffe:	6818      	ldr	r0, [r3, #0]
 8009000:	f7f9 fa16 	bl	8002430 <_ZNK8touchgfx5Texts7getTextEt>
 8009004:	f3c4 0481 	ubfx	r4, r4, #2, #2
 8009008:	2300      	movs	r3, #0
 800900a:	4602      	mov	r2, r0
 800900c:	9300      	str	r3, [sp, #0]
 800900e:	4621      	mov	r1, r4
 8009010:	4628      	mov	r0, r5
 8009012:	47b0      	blx	r6
 8009014:	b002      	add	sp, #8
 8009016:	bd70      	pop	{r4, r5, r6, pc}
 8009018:	2000      	movs	r0, #0
 800901a:	e7fb      	b.n	8009014 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x5c>
 800901c:	200121e8 	.word	0x200121e8
 8009020:	0801ac60 	.word	0x0801ac60
 8009024:	0801ad9c 	.word	0x0801ad9c
 8009028:	0801aca2 	.word	0x0801aca2
 800902c:	200121ec 	.word	0x200121ec
 8009030:	0801accb 	.word	0x0801accb
 8009034:	200121f0 	.word	0x200121f0
 8009038:	200121f4 	.word	0x200121f4

0800903c <_ZN8touchgfx8TextArea12setBaselineYEs>:
 800903c:	b570      	push	{r4, r5, r6, lr}
 800903e:	6803      	ldr	r3, [r0, #0]
 8009040:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 8009042:	6b1e      	ldr	r6, [r3, #48]	; 0x30
 8009044:	4b11      	ldr	r3, [pc, #68]	; (800908c <_ZN8touchgfx8TextArea12setBaselineYEs+0x50>)
 8009046:	681b      	ldr	r3, [r3, #0]
 8009048:	4604      	mov	r4, r0
 800904a:	b28d      	uxth	r5, r1
 800904c:	b92b      	cbnz	r3, 800905a <_ZN8touchgfx8TextArea12setBaselineYEs+0x1e>
 800904e:	4b10      	ldr	r3, [pc, #64]	; (8009090 <_ZN8touchgfx8TextArea12setBaselineYEs+0x54>)
 8009050:	4a10      	ldr	r2, [pc, #64]	; (8009094 <_ZN8touchgfx8TextArea12setBaselineYEs+0x58>)
 8009052:	21b1      	movs	r1, #177	; 0xb1
 8009054:	4810      	ldr	r0, [pc, #64]	; (8009098 <_ZN8touchgfx8TextArea12setBaselineYEs+0x5c>)
 8009056:	f00e ff81 	bl	8017f5c <__assert_func>
 800905a:	4910      	ldr	r1, [pc, #64]	; (800909c <_ZN8touchgfx8TextArea12setBaselineYEs+0x60>)
 800905c:	8809      	ldrh	r1, [r1, #0]
 800905e:	4291      	cmp	r1, r2
 8009060:	d803      	bhi.n	800906a <_ZN8touchgfx8TextArea12setBaselineYEs+0x2e>
 8009062:	4b0f      	ldr	r3, [pc, #60]	; (80090a0 <_ZN8touchgfx8TextArea12setBaselineYEs+0x64>)
 8009064:	4a0b      	ldr	r2, [pc, #44]	; (8009094 <_ZN8touchgfx8TextArea12setBaselineYEs+0x58>)
 8009066:	21b2      	movs	r1, #178	; 0xb2
 8009068:	e7f4      	b.n	8009054 <_ZN8touchgfx8TextArea12setBaselineYEs+0x18>
 800906a:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
 800906e:	4b0d      	ldr	r3, [pc, #52]	; (80090a4 <_ZN8touchgfx8TextArea12setBaselineYEs+0x68>)
 8009070:	681b      	ldr	r3, [r3, #0]
 8009072:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 8009076:	6803      	ldr	r3, [r0, #0]
 8009078:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800907a:	4798      	blx	r3
 800907c:	1a29      	subs	r1, r5, r0
 800907e:	4633      	mov	r3, r6
 8009080:	4620      	mov	r0, r4
 8009082:	b209      	sxth	r1, r1
 8009084:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8009088:	4718      	bx	r3
 800908a:	bf00      	nop
 800908c:	200121e8 	.word	0x200121e8
 8009090:	0801ac60 	.word	0x0801ac60
 8009094:	0801ad9c 	.word	0x0801ad9c
 8009098:	0801aca2 	.word	0x0801aca2
 800909c:	200121ec 	.word	0x200121ec
 80090a0:	0801accb 	.word	0x0801accb
 80090a4:	200121f0 	.word	0x200121f0

080090a8 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE>:
 80090a8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80090ac:	8d83      	ldrh	r3, [r0, #44]	; 0x2c
 80090ae:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80090b2:	4293      	cmp	r3, r2
 80090b4:	b08c      	sub	sp, #48	; 0x30
 80090b6:	4604      	mov	r4, r0
 80090b8:	4688      	mov	r8, r1
 80090ba:	d05f      	beq.n	800917c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd4>
 80090bc:	4e31      	ldr	r6, [pc, #196]	; (8009184 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xdc>)
 80090be:	6832      	ldr	r2, [r6, #0]
 80090c0:	b92a      	cbnz	r2, 80090ce <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x26>
 80090c2:	4b31      	ldr	r3, [pc, #196]	; (8009188 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xe0>)
 80090c4:	4a31      	ldr	r2, [pc, #196]	; (800918c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xe4>)
 80090c6:	21b1      	movs	r1, #177	; 0xb1
 80090c8:	4831      	ldr	r0, [pc, #196]	; (8009190 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xe8>)
 80090ca:	f00e ff47 	bl	8017f5c <__assert_func>
 80090ce:	4d31      	ldr	r5, [pc, #196]	; (8009194 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xec>)
 80090d0:	8829      	ldrh	r1, [r5, #0]
 80090d2:	4299      	cmp	r1, r3
 80090d4:	d803      	bhi.n	80090de <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x36>
 80090d6:	4b30      	ldr	r3, [pc, #192]	; (8009198 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xf0>)
 80090d8:	4a2c      	ldr	r2, [pc, #176]	; (800918c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xe4>)
 80090da:	21b2      	movs	r1, #178	; 0xb2
 80090dc:	e7f4      	b.n	80090c8 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x20>
 80090de:	eb02 0143 	add.w	r1, r2, r3, lsl #1
 80090e2:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 80090e6:	4b2d      	ldr	r3, [pc, #180]	; (800919c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xf4>)
 80090e8:	681b      	ldr	r3, [r3, #0]
 80090ea:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 80090ee:	2a00      	cmp	r2, #0
 80090f0:	d044      	beq.n	800917c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd4>
 80090f2:	784b      	ldrb	r3, [r1, #1]
 80090f4:	9207      	str	r2, [sp, #28]
 80090f6:	f3c3 0901 	ubfx	r9, r3, #0, #2
 80090fa:	f3c3 0381 	ubfx	r3, r3, #2, #2
 80090fe:	f88d 3021 	strb.w	r3, [sp, #33]	; 0x21
 8009102:	4b27      	ldr	r3, [pc, #156]	; (80091a0 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xf8>)
 8009104:	f890 a036 	ldrb.w	sl, [r0, #54]	; 0x36
 8009108:	681b      	ldr	r3, [r3, #0]
 800910a:	f9b0 c034 	ldrsh.w	ip, [r0, #52]	; 0x34
 800910e:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 8009112:	f890 e038 	ldrb.w	lr, [r0, #56]	; 0x38
 8009116:	f890 7037 	ldrb.w	r7, [r0, #55]	; 0x37
 800911a:	f890 1039 	ldrb.w	r1, [r0, #57]	; 0x39
 800911e:	6b00      	ldr	r0, [r0, #48]	; 0x30
 8009120:	9009      	str	r0, [sp, #36]	; 0x24
 8009122:	f88d a02a 	strb.w	sl, [sp, #42]	; 0x2a
 8009126:	f88d 9020 	strb.w	r9, [sp, #32]
 800912a:	f88d e022 	strb.w	lr, [sp, #34]	; 0x22
 800912e:	f8ad c028 	strh.w	ip, [sp, #40]	; 0x28
 8009132:	f88d 702b 	strb.w	r7, [sp, #43]	; 0x2b
 8009136:	f88d 102c 	strb.w	r1, [sp, #44]	; 0x2c
 800913a:	b10a      	cbz	r2, 8009140 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x98>
 800913c:	6cdf      	ldr	r7, [r3, #76]	; 0x4c
 800913e:	b907      	cbnz	r7, 8009142 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x9a>
 8009140:	689f      	ldr	r7, [r3, #8]
 8009142:	f10d 0914 	add.w	r9, sp, #20
 8009146:	4621      	mov	r1, r4
 8009148:	4648      	mov	r0, r9
 800914a:	f001 ffdb 	bl	800b104 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800914e:	6833      	ldr	r3, [r6, #0]
 8009150:	2b00      	cmp	r3, #0
 8009152:	d0b6      	beq.n	80090c2 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x1a>
 8009154:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 8009156:	882b      	ldrh	r3, [r5, #0]
 8009158:	428b      	cmp	r3, r1
 800915a:	d9bc      	bls.n	80090d6 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x2e>
 800915c:	4b11      	ldr	r3, [pc, #68]	; (80091a4 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xfc>)
 800915e:	6818      	ldr	r0, [r3, #0]
 8009160:	f7f9 f966 	bl	8002430 <_ZNK8touchgfx5Texts7getTextEt>
 8009164:	2300      	movs	r3, #0
 8009166:	e9cd 3302 	strd	r3, r3, [sp, #8]
 800916a:	ab07      	add	r3, sp, #28
 800916c:	9001      	str	r0, [sp, #4]
 800916e:	9300      	str	r3, [sp, #0]
 8009170:	e899 0006 	ldmia.w	r9, {r1, r2}
 8009174:	4643      	mov	r3, r8
 8009176:	4638      	mov	r0, r7
 8009178:	f7f9 f90e 	bl	8002398 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 800917c:	b00c      	add	sp, #48	; 0x30
 800917e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8009182:	bf00      	nop
 8009184:	200121e8 	.word	0x200121e8
 8009188:	0801ac60 	.word	0x0801ac60
 800918c:	0801ad9c 	.word	0x0801ad9c
 8009190:	0801aca2 	.word	0x0801aca2
 8009194:	200121ec 	.word	0x200121ec
 8009198:	0801accb 	.word	0x0801accb
 800919c:	200121f0 	.word	0x200121f0
 80091a0:	20012178 	.word	0x20012178
 80091a4:	200121f4 	.word	0x200121f4

080091a8 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz>:
 80091a8:	b40e      	push	{r1, r2, r3}
 80091aa:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80091ae:	8d83      	ldrh	r3, [r0, #44]	; 0x2c
 80091b0:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80091b4:	4293      	cmp	r3, r2
 80091b6:	b09b      	sub	sp, #108	; 0x6c
 80091b8:	4604      	mov	r4, r0
 80091ba:	d061      	beq.n	8009280 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xd8>
 80091bc:	f8df a0d4 	ldr.w	sl, [pc, #212]	; 8009294 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xec>
 80091c0:	aa24      	add	r2, sp, #144	; 0x90
 80091c2:	9203      	str	r2, [sp, #12]
 80091c4:	f8da 2000 	ldr.w	r2, [sl]
 80091c8:	b92a      	cbnz	r2, 80091d6 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0x2e>
 80091ca:	4b2e      	ldr	r3, [pc, #184]	; (8009284 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xdc>)
 80091cc:	4a2e      	ldr	r2, [pc, #184]	; (8009288 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xe0>)
 80091ce:	21b1      	movs	r1, #177	; 0xb1
 80091d0:	482e      	ldr	r0, [pc, #184]	; (800928c <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xe4>)
 80091d2:	f00e fec3 	bl	8017f5c <__assert_func>
 80091d6:	f8df 80c0 	ldr.w	r8, [pc, #192]	; 8009298 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xf0>
 80091da:	f8b8 1000 	ldrh.w	r1, [r8]
 80091de:	4299      	cmp	r1, r3
 80091e0:	d803      	bhi.n	80091ea <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0x42>
 80091e2:	4b2b      	ldr	r3, [pc, #172]	; (8009290 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xe8>)
 80091e4:	4a28      	ldr	r2, [pc, #160]	; (8009288 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xe0>)
 80091e6:	21b2      	movs	r1, #178	; 0xb2
 80091e8:	e7f2      	b.n	80091d0 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0x28>
 80091ea:	f8df 90b0 	ldr.w	r9, [pc, #176]	; 800929c <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xf4>
 80091ee:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 80091f2:	f8d9 3000 	ldr.w	r3, [r9]
 80091f6:	f853 7022 	ldr.w	r7, [r3, r2, lsl #2]
 80091fa:	683b      	ldr	r3, [r7, #0]
 80091fc:	4638      	mov	r0, r7
 80091fe:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8009200:	4798      	blx	r3
 8009202:	4606      	mov	r6, r0
 8009204:	b205      	sxth	r5, r0
 8009206:	a804      	add	r0, sp, #16
 8009208:	f002 fb90 	bl	800b92c <_ZN8touchgfx12TextProviderC1Ev>
 800920c:	683b      	ldr	r3, [r7, #0]
 800920e:	4638      	mov	r0, r7
 8009210:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8009212:	4798      	blx	r3
 8009214:	9923      	ldr	r1, [sp, #140]	; 0x8c
 8009216:	9a03      	ldr	r2, [sp, #12]
 8009218:	4603      	mov	r3, r0
 800921a:	a804      	add	r0, sp, #16
 800921c:	f002 fbcb 	bl	800b9b6 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_>
 8009220:	f8da 3000 	ldr.w	r3, [sl]
 8009224:	f894 1039 	ldrb.w	r1, [r4, #57]	; 0x39
 8009228:	2b00      	cmp	r3, #0
 800922a:	d0ce      	beq.n	80091ca <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0x22>
 800922c:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 800922e:	f8b8 0000 	ldrh.w	r0, [r8]
 8009232:	4290      	cmp	r0, r2
 8009234:	d9d5      	bls.n	80091e2 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0x3a>
 8009236:	eb03 0742 	add.w	r7, r3, r2, lsl #1
 800923a:	f813 0012 	ldrb.w	r0, [r3, r2, lsl #1]
 800923e:	787a      	ldrb	r2, [r7, #1]
 8009240:	f8d9 3000 	ldr.w	r3, [r9]
 8009244:	f9b4 7008 	ldrsh.w	r7, [r4, #8]
 8009248:	9700      	str	r7, [sp, #0]
 800924a:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
 800924e:	f3c2 0281 	ubfx	r2, r2, #2, #2
 8009252:	a804      	add	r0, sp, #16
 8009254:	f000 fdc8 	bl	8009de8 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>
 8009258:	f9b4 2034 	ldrsh.w	r2, [r4, #52]	; 0x34
 800925c:	18a9      	adds	r1, r5, r2
 800925e:	2900      	cmp	r1, #0
 8009260:	b203      	sxth	r3, r0
 8009262:	dd0b      	ble.n	800927c <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xd4>
 8009264:	3b01      	subs	r3, #1
 8009266:	fb13 f302 	smulbb	r3, r3, r2
 800926a:	fb16 3300 	smlabb	r3, r6, r0, r3
 800926e:	b21d      	sxth	r5, r3
 8009270:	4628      	mov	r0, r5
 8009272:	b01b      	add	sp, #108	; 0x6c
 8009274:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8009278:	b003      	add	sp, #12
 800927a:	4770      	bx	lr
 800927c:	2b00      	cmp	r3, #0
 800927e:	dcf7      	bgt.n	8009270 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc8>
 8009280:	2500      	movs	r5, #0
 8009282:	e7f5      	b.n	8009270 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc8>
 8009284:	0801ac60 	.word	0x0801ac60
 8009288:	0801ad9c 	.word	0x0801ad9c
 800928c:	0801aca2 	.word	0x0801aca2
 8009290:	0801accb 	.word	0x0801accb
 8009294:	200121e8 	.word	0x200121e8
 8009298:	200121ec 	.word	0x200121ec
 800929c:	200121f0 	.word	0x200121f0

080092a0 <_ZN8touchgfx8TextAreaD0Ev>:
 80092a0:	b510      	push	{r4, lr}
 80092a2:	213c      	movs	r1, #60	; 0x3c
 80092a4:	4604      	mov	r4, r0
 80092a6:	f00e fe2d 	bl	8017f04 <_ZdlPvj>
 80092aa:	4620      	mov	r0, r4
 80092ac:	bd10      	pop	{r4, pc}
	...

080092b0 <_ZN8touchgfx8TextArea13getTextHeightEv>:
 80092b0:	b570      	push	{r4, r5, r6, lr}
 80092b2:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 80092b4:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80092b8:	4299      	cmp	r1, r3
 80092ba:	4604      	mov	r4, r0
 80092bc:	d01e      	beq.n	80092fc <_ZN8touchgfx8TextArea13getTextHeightEv+0x4c>
 80092be:	6803      	ldr	r3, [r0, #0]
 80092c0:	6f1d      	ldr	r5, [r3, #112]	; 0x70
 80092c2:	4b0f      	ldr	r3, [pc, #60]	; (8009300 <_ZN8touchgfx8TextArea13getTextHeightEv+0x50>)
 80092c4:	681b      	ldr	r3, [r3, #0]
 80092c6:	b92b      	cbnz	r3, 80092d4 <_ZN8touchgfx8TextArea13getTextHeightEv+0x24>
 80092c8:	4b0e      	ldr	r3, [pc, #56]	; (8009304 <_ZN8touchgfx8TextArea13getTextHeightEv+0x54>)
 80092ca:	4a0f      	ldr	r2, [pc, #60]	; (8009308 <_ZN8touchgfx8TextArea13getTextHeightEv+0x58>)
 80092cc:	21b1      	movs	r1, #177	; 0xb1
 80092ce:	480f      	ldr	r0, [pc, #60]	; (800930c <_ZN8touchgfx8TextArea13getTextHeightEv+0x5c>)
 80092d0:	f00e fe44 	bl	8017f5c <__assert_func>
 80092d4:	4b0e      	ldr	r3, [pc, #56]	; (8009310 <_ZN8touchgfx8TextArea13getTextHeightEv+0x60>)
 80092d6:	881b      	ldrh	r3, [r3, #0]
 80092d8:	428b      	cmp	r3, r1
 80092da:	d803      	bhi.n	80092e4 <_ZN8touchgfx8TextArea13getTextHeightEv+0x34>
 80092dc:	4b0d      	ldr	r3, [pc, #52]	; (8009314 <_ZN8touchgfx8TextArea13getTextHeightEv+0x64>)
 80092de:	4a0a      	ldr	r2, [pc, #40]	; (8009308 <_ZN8touchgfx8TextArea13getTextHeightEv+0x58>)
 80092e0:	21b2      	movs	r1, #178	; 0xb2
 80092e2:	e7f4      	b.n	80092ce <_ZN8touchgfx8TextArea13getTextHeightEv+0x1e>
 80092e4:	4b0c      	ldr	r3, [pc, #48]	; (8009318 <_ZN8touchgfx8TextArea13getTextHeightEv+0x68>)
 80092e6:	6818      	ldr	r0, [r3, #0]
 80092e8:	f7f9 f8a2 	bl	8002430 <_ZNK8touchgfx5Texts7getTextEt>
 80092ec:	2300      	movs	r3, #0
 80092ee:	4601      	mov	r1, r0
 80092f0:	46ac      	mov	ip, r5
 80092f2:	4620      	mov	r0, r4
 80092f4:	461a      	mov	r2, r3
 80092f6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80092fa:	4760      	bx	ip
 80092fc:	2000      	movs	r0, #0
 80092fe:	bd70      	pop	{r4, r5, r6, pc}
 8009300:	200121e8 	.word	0x200121e8
 8009304:	0801ac60 	.word	0x0801ac60
 8009308:	0801ad9c 	.word	0x0801ad9c
 800930c:	0801aca2 	.word	0x0801aca2
 8009310:	200121ec 	.word	0x200121ec
 8009314:	0801accb 	.word	0x0801accb
 8009318:	200121f4 	.word	0x200121f4

0800931c <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>:
 800931c:	b570      	push	{r4, r5, r6, lr}
 800931e:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 8009320:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8009324:	429a      	cmp	r2, r3
 8009326:	4604      	mov	r4, r0
 8009328:	d021      	beq.n	800936e <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x52>
 800932a:	6803      	ldr	r3, [r0, #0]
 800932c:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 800932e:	4798      	blx	r3
 8009330:	6823      	ldr	r3, [r4, #0]
 8009332:	4605      	mov	r5, r0
 8009334:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 8009336:	4620      	mov	r0, r4
 8009338:	4798      	blx	r3
 800933a:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 800933e:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 8009342:	6823      	ldr	r3, [r4, #0]
 8009344:	4606      	mov	r6, r0
 8009346:	b22d      	sxth	r5, r5
 8009348:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800934a:	d109      	bne.n	8009360 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x44>
 800934c:	4629      	mov	r1, r5
 800934e:	4620      	mov	r0, r4
 8009350:	4798      	blx	r3
 8009352:	6823      	ldr	r3, [r4, #0]
 8009354:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8009356:	4631      	mov	r1, r6
 8009358:	4620      	mov	r0, r4
 800935a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800935e:	4718      	bx	r3
 8009360:	4601      	mov	r1, r0
 8009362:	4620      	mov	r0, r4
 8009364:	4798      	blx	r3
 8009366:	6823      	ldr	r3, [r4, #0]
 8009368:	4629      	mov	r1, r5
 800936a:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800936c:	e7f4      	b.n	8009358 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x3c>
 800936e:	bd70      	pop	{r4, r5, r6, pc}

08009370 <_ZN8touchgfx8TextArea12setTypedTextENS_9TypedTextE>:
 8009370:	888a      	ldrh	r2, [r1, #4]
 8009372:	8582      	strh	r2, [r0, #44]	; 0x2c
 8009374:	f9b0 2008 	ldrsh.w	r2, [r0, #8]
 8009378:	b922      	cbnz	r2, 8009384 <_ZN8touchgfx8TextArea12setTypedTextENS_9TypedTextE+0x14>
 800937a:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 800937e:	b90b      	cbnz	r3, 8009384 <_ZN8touchgfx8TextArea12setTypedTextENS_9TypedTextE+0x14>
 8009380:	f7ff bfcc 	b.w	800931c <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
 8009384:	4770      	bx	lr

08009386 <_ZNK8touchgfx3Box12getSolidRectEv>:
 8009386:	2300      	movs	r3, #0
 8009388:	8003      	strh	r3, [r0, #0]
 800938a:	8043      	strh	r3, [r0, #2]
 800938c:	8083      	strh	r3, [r0, #4]
 800938e:	80c3      	strh	r3, [r0, #6]
 8009390:	f891 302c 	ldrb.w	r3, [r1, #44]	; 0x2c
 8009394:	b91b      	cbnz	r3, 800939e <_ZNK8touchgfx3Box12getSolidRectEv+0x18>
 8009396:	f891 3026 	ldrb.w	r3, [r1, #38]	; 0x26
 800939a:	2bff      	cmp	r3, #255	; 0xff
 800939c:	d103      	bne.n	80093a6 <_ZNK8touchgfx3Box12getSolidRectEv+0x20>
 800939e:	890b      	ldrh	r3, [r1, #8]
 80093a0:	8083      	strh	r3, [r0, #4]
 80093a2:	894b      	ldrh	r3, [r1, #10]
 80093a4:	80c3      	strh	r3, [r0, #6]
 80093a6:	4770      	bx	lr

080093a8 <_ZNK8touchgfx3Box4drawERKNS_4RectE>:
 80093a8:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80093aa:	4604      	mov	r4, r0
 80093ac:	6808      	ldr	r0, [r1, #0]
 80093ae:	6849      	ldr	r1, [r1, #4]
 80093b0:	466b      	mov	r3, sp
 80093b2:	c303      	stmia	r3!, {r0, r1}
 80093b4:	6823      	ldr	r3, [r4, #0]
 80093b6:	4669      	mov	r1, sp
 80093b8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80093ba:	4620      	mov	r0, r4
 80093bc:	4798      	blx	r3
 80093be:	4b08      	ldr	r3, [pc, #32]	; (80093e0 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x38>)
 80093c0:	681b      	ldr	r3, [r3, #0]
 80093c2:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 80093c6:	b10a      	cbz	r2, 80093cc <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x24>
 80093c8:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 80093ca:	b900      	cbnz	r0, 80093ce <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x26>
 80093cc:	6898      	ldr	r0, [r3, #8]
 80093ce:	6803      	ldr	r3, [r0, #0]
 80093d0:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 80093d2:	699d      	ldr	r5, [r3, #24]
 80093d4:	f894 3026 	ldrb.w	r3, [r4, #38]	; 0x26
 80093d8:	4669      	mov	r1, sp
 80093da:	47a8      	blx	r5
 80093dc:	b003      	add	sp, #12
 80093de:	bd30      	pop	{r4, r5, pc}
 80093e0:	20012178 	.word	0x20012178

080093e4 <_ZN8touchgfx3BoxD1Ev>:
 80093e4:	4770      	bx	lr

080093e6 <_ZN8touchgfx3BoxD0Ev>:
 80093e6:	b510      	push	{r4, lr}
 80093e8:	2130      	movs	r1, #48	; 0x30
 80093ea:	4604      	mov	r4, r0
 80093ec:	f00e fd8a 	bl	8017f04 <_ZdlPvj>
 80093f0:	4620      	mov	r0, r4
 80093f2:	bd10      	pop	{r4, pc}

080093f4 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>:
 80093f4:	b538      	push	{r3, r4, r5, lr}
 80093f6:	880b      	ldrh	r3, [r1, #0]
 80093f8:	85c3      	strh	r3, [r0, #46]	; 0x2e
 80093fa:	4605      	mov	r5, r0
 80093fc:	8813      	ldrh	r3, [r2, #0]
 80093fe:	f825 3f30 	strh.w	r3, [r5, #48]!
 8009402:	4604      	mov	r4, r0
 8009404:	4628      	mov	r0, r5
 8009406:	f003 f8db 	bl	800c5c0 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800940a:	8120      	strh	r0, [r4, #8]
 800940c:	4628      	mov	r0, r5
 800940e:	f003 f911 	bl	800c634 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8009412:	8160      	strh	r0, [r4, #10]
 8009414:	bd38      	pop	{r3, r4, r5, pc}

08009416 <_ZNK8touchgfx6Button12getSolidRectEv>:
 8009416:	b510      	push	{r4, lr}
 8009418:	f891 3032 	ldrb.w	r3, [r1, #50]	; 0x32
 800941c:	2bff      	cmp	r3, #255	; 0xff
 800941e:	4604      	mov	r4, r0
 8009420:	d006      	beq.n	8009430 <_ZNK8touchgfx6Button12getSolidRectEv+0x1a>
 8009422:	2300      	movs	r3, #0
 8009424:	8003      	strh	r3, [r0, #0]
 8009426:	8043      	strh	r3, [r0, #2]
 8009428:	8083      	strh	r3, [r0, #4]
 800942a:	80c3      	strh	r3, [r0, #6]
 800942c:	4620      	mov	r0, r4
 800942e:	bd10      	pop	{r4, pc}
 8009430:	f891 302c 	ldrb.w	r3, [r1, #44]	; 0x2c
 8009434:	b11b      	cbz	r3, 800943e <_ZNK8touchgfx6Button12getSolidRectEv+0x28>
 8009436:	3130      	adds	r1, #48	; 0x30
 8009438:	f003 f936 	bl	800c6a8 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 800943c:	e7f6      	b.n	800942c <_ZNK8touchgfx6Button12getSolidRectEv+0x16>
 800943e:	312e      	adds	r1, #46	; 0x2e
 8009440:	e7fa      	b.n	8009438 <_ZNK8touchgfx6Button12getSolidRectEv+0x22>
	...

08009444 <_ZNK8touchgfx6Button4drawERKNS_4RectE>:
 8009444:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8009448:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 800944c:	b08a      	sub	sp, #40	; 0x28
 800944e:	4604      	mov	r4, r0
 8009450:	4688      	mov	r8, r1
 8009452:	2b00      	cmp	r3, #0
 8009454:	d044      	beq.n	80094e0 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x9c>
 8009456:	8e03      	ldrh	r3, [r0, #48]	; 0x30
 8009458:	f8ad 3014 	strh.w	r3, [sp, #20]
 800945c:	a805      	add	r0, sp, #20
 800945e:	f003 f8af 	bl	800c5c0 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8009462:	4605      	mov	r5, r0
 8009464:	b206      	sxth	r6, r0
 8009466:	a805      	add	r0, sp, #20
 8009468:	f003 f8e4 	bl	800c634 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800946c:	f9b8 2000 	ldrsh.w	r2, [r8]
 8009470:	f8b8 7004 	ldrh.w	r7, [r8, #4]
 8009474:	4417      	add	r7, r2
 8009476:	b2bf      	uxth	r7, r7
 8009478:	2300      	movs	r3, #0
 800947a:	fa0f fe87 	sxth.w	lr, r7
 800947e:	459e      	cmp	lr, r3
 8009480:	fa0f fc80 	sxth.w	ip, r0
 8009484:	9306      	str	r3, [sp, #24]
 8009486:	dd2d      	ble.n	80094e4 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xa0>
 8009488:	4296      	cmp	r6, r2
 800948a:	dd2b      	ble.n	80094e4 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xa0>
 800948c:	f9b8 3002 	ldrsh.w	r3, [r8, #2]
 8009490:	f8b8 1006 	ldrh.w	r1, [r8, #6]
 8009494:	4419      	add	r1, r3
 8009496:	b289      	uxth	r1, r1
 8009498:	fa0f f881 	sxth.w	r8, r1
 800949c:	f1b8 0f00 	cmp.w	r8, #0
 80094a0:	dd20      	ble.n	80094e4 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xa0>
 80094a2:	459c      	cmp	ip, r3
 80094a4:	dd1e      	ble.n	80094e4 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xa0>
 80094a6:	ea22 72e2 	bic.w	r2, r2, r2, asr #31
 80094aa:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80094ae:	4576      	cmp	r6, lr
 80094b0:	bfa8      	it	ge
 80094b2:	463d      	movge	r5, r7
 80094b4:	45c4      	cmp	ip, r8
 80094b6:	bfa8      	it	ge
 80094b8:	4608      	movge	r0, r1
 80094ba:	1aad      	subs	r5, r5, r2
 80094bc:	1ac0      	subs	r0, r0, r3
 80094be:	f8ad 501c 	strh.w	r5, [sp, #28]
 80094c2:	f8ad 001e 	strh.w	r0, [sp, #30]
 80094c6:	f8ad 2018 	strh.w	r2, [sp, #24]
 80094ca:	f8ad 301a 	strh.w	r3, [sp, #26]
 80094ce:	4b1f      	ldr	r3, [pc, #124]	; (800954c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x108>)
 80094d0:	681b      	ldr	r3, [r3, #0]
 80094d2:	b953      	cbnz	r3, 80094ea <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xa6>
 80094d4:	4b1e      	ldr	r3, [pc, #120]	; (8009550 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x10c>)
 80094d6:	4a1f      	ldr	r2, [pc, #124]	; (8009554 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x110>)
 80094d8:	481f      	ldr	r0, [pc, #124]	; (8009558 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x114>)
 80094da:	2189      	movs	r1, #137	; 0x89
 80094dc:	f00e fd3e 	bl	8017f5c <__assert_func>
 80094e0:	8dc3      	ldrh	r3, [r0, #46]	; 0x2e
 80094e2:	e7b9      	b.n	8009458 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x14>
 80094e4:	2300      	movs	r3, #0
 80094e6:	9307      	str	r3, [sp, #28]
 80094e8:	e7f1      	b.n	80094ce <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x8a>
 80094ea:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 80094ee:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80094f2:	429a      	cmp	r2, r3
 80094f4:	d026      	beq.n	8009544 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x100>
 80094f6:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 80094fa:	2b00      	cmp	r3, #0
 80094fc:	dd22      	ble.n	8009544 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x100>
 80094fe:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 8009502:	2b00      	cmp	r3, #0
 8009504:	dd1e      	ble.n	8009544 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x100>
 8009506:	2300      	movs	r3, #0
 8009508:	e9cd 3308 	strd	r3, r3, [sp, #32]
 800950c:	6823      	ldr	r3, [r4, #0]
 800950e:	a908      	add	r1, sp, #32
 8009510:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8009512:	4620      	mov	r0, r4
 8009514:	4798      	blx	r3
 8009516:	4b11      	ldr	r3, [pc, #68]	; (800955c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x118>)
 8009518:	681b      	ldr	r3, [r3, #0]
 800951a:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 800951e:	b10a      	cbz	r2, 8009524 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe0>
 8009520:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8009522:	b900      	cbnz	r0, 8009526 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe2>
 8009524:	6898      	ldr	r0, [r3, #8]
 8009526:	6801      	ldr	r1, [r0, #0]
 8009528:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 800952c:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 8009530:	2501      	movs	r5, #1
 8009532:	9502      	str	r5, [sp, #8]
 8009534:	f894 4032 	ldrb.w	r4, [r4, #50]	; 0x32
 8009538:	9401      	str	r4, [sp, #4]
 800953a:	ac06      	add	r4, sp, #24
 800953c:	9400      	str	r4, [sp, #0]
 800953e:	688c      	ldr	r4, [r1, #8]
 8009540:	a905      	add	r1, sp, #20
 8009542:	47a0      	blx	r4
 8009544:	b00a      	add	sp, #40	; 0x28
 8009546:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800954a:	bf00      	nop
 800954c:	20012220 	.word	0x20012220
 8009550:	0801ae34 	.word	0x0801ae34
 8009554:	0801ae96 	.word	0x0801ae96
 8009558:	0801ae70 	.word	0x0801ae70
 800955c:	20012178 	.word	0x20012178

08009560 <_ZN8touchgfx5ImageD1Ev>:
 8009560:	4770      	bx	lr

08009562 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>:
 8009562:	b570      	push	{r4, r5, r6, lr}
 8009564:	4605      	mov	r5, r0
 8009566:	880b      	ldrh	r3, [r1, #0]
 8009568:	84c3      	strh	r3, [r0, #38]	; 0x26
 800956a:	f855 3b26 	ldr.w	r3, [r5], #38
 800956e:	4604      	mov	r4, r0
 8009570:	4628      	mov	r0, r5
 8009572:	6b9e      	ldr	r6, [r3, #56]	; 0x38
 8009574:	f003 f824 	bl	800c5c0 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8009578:	b201      	sxth	r1, r0
 800957a:	4620      	mov	r0, r4
 800957c:	47b0      	blx	r6
 800957e:	6823      	ldr	r3, [r4, #0]
 8009580:	4628      	mov	r0, r5
 8009582:	6bde      	ldr	r6, [r3, #60]	; 0x3c
 8009584:	f003 f856 	bl	800c634 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8009588:	4633      	mov	r3, r6
 800958a:	b201      	sxth	r1, r0
 800958c:	4620      	mov	r0, r4
 800958e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8009592:	4718      	bx	r3

08009594 <_ZN8touchgfx5ImageD0Ev>:
 8009594:	b510      	push	{r4, lr}
 8009596:	212c      	movs	r1, #44	; 0x2c
 8009598:	4604      	mov	r4, r0
 800959a:	f00e fcb3 	bl	8017f04 <_ZdlPvj>
 800959e:	4620      	mov	r0, r4
 80095a0:	bd10      	pop	{r4, pc}

080095a2 <_ZNK8touchgfx5Image12getSolidRectEv>:
 80095a2:	b510      	push	{r4, lr}
 80095a4:	f891 3028 	ldrb.w	r3, [r1, #40]	; 0x28
 80095a8:	2bff      	cmp	r3, #255	; 0xff
 80095aa:	4604      	mov	r4, r0
 80095ac:	d006      	beq.n	80095bc <_ZNK8touchgfx5Image12getSolidRectEv+0x1a>
 80095ae:	2300      	movs	r3, #0
 80095b0:	8003      	strh	r3, [r0, #0]
 80095b2:	8043      	strh	r3, [r0, #2]
 80095b4:	8083      	strh	r3, [r0, #4]
 80095b6:	80c3      	strh	r3, [r0, #6]
 80095b8:	4620      	mov	r0, r4
 80095ba:	bd10      	pop	{r4, pc}
 80095bc:	3126      	adds	r1, #38	; 0x26
 80095be:	f003 f873 	bl	800c6a8 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 80095c2:	e7f9      	b.n	80095b8 <_ZNK8touchgfx5Image12getSolidRectEv+0x16>

080095c4 <_ZNK8touchgfx5Image4drawERKNS_4RectE>:
 80095c4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80095c8:	4604      	mov	r4, r0
 80095ca:	b088      	sub	sp, #32
 80095cc:	f854 3b26 	ldr.w	r3, [r4], #38
 80095d0:	2500      	movs	r5, #0
 80095d2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80095d4:	460f      	mov	r7, r1
 80095d6:	e9cd 5504 	strd	r5, r5, [sp, #16]
 80095da:	a904      	add	r1, sp, #16
 80095dc:	4606      	mov	r6, r0
 80095de:	4798      	blx	r3
 80095e0:	4620      	mov	r0, r4
 80095e2:	f002 ffed 	bl	800c5c0 <_ZNK8touchgfx6Bitmap8getWidthEv>
 80095e6:	4680      	mov	r8, r0
 80095e8:	4620      	mov	r0, r4
 80095ea:	f003 f823 	bl	800c634 <_ZNK8touchgfx6Bitmap9getHeightEv>
 80095ee:	9506      	str	r5, [sp, #24]
 80095f0:	ad06      	add	r5, sp, #24
 80095f2:	f8ad 001e 	strh.w	r0, [sp, #30]
 80095f6:	4639      	mov	r1, r7
 80095f8:	4628      	mov	r0, r5
 80095fa:	f8ad 801c 	strh.w	r8, [sp, #28]
 80095fe:	f7fe f9d9 	bl	80079b4 <_ZN8touchgfx4RectaNERKS0_>
 8009602:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 8009606:	2b00      	cmp	r3, #0
 8009608:	dd19      	ble.n	800963e <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
 800960a:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 800960e:	2b00      	cmp	r3, #0
 8009610:	dd15      	ble.n	800963e <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
 8009612:	4b0c      	ldr	r3, [pc, #48]	; (8009644 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x80>)
 8009614:	681b      	ldr	r3, [r3, #0]
 8009616:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 800961a:	b10a      	cbz	r2, 8009620 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5c>
 800961c:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 800961e:	b900      	cbnz	r0, 8009622 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5e>
 8009620:	6898      	ldr	r0, [r3, #8]
 8009622:	6801      	ldr	r1, [r0, #0]
 8009624:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8009628:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 800962c:	2701      	movs	r7, #1
 800962e:	9702      	str	r7, [sp, #8]
 8009630:	f896 6028 	ldrb.w	r6, [r6, #40]	; 0x28
 8009634:	e9cd 5600 	strd	r5, r6, [sp]
 8009638:	688d      	ldr	r5, [r1, #8]
 800963a:	4621      	mov	r1, r4
 800963c:	47a8      	blx	r5
 800963e:	b008      	add	sp, #32
 8009640:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8009644:	20012178 	.word	0x20012178

08009648 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht>:
 8009648:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800964c:	b091      	sub	sp, #68	; 0x44
 800964e:	4699      	mov	r9, r3
 8009650:	f8dd a06c 	ldr.w	sl, [sp, #108]	; 0x6c
 8009654:	9c1d      	ldr	r4, [sp, #116]	; 0x74
 8009656:	f9ba 300c 	ldrsh.w	r3, [sl, #12]
 800965a:	f8ad 303e 	strh.w	r3, [sp, #62]	; 0x3e
 800965e:	4680      	mov	r8, r0
 8009660:	4617      	mov	r7, r2
 8009662:	a80e      	add	r0, sp, #56	; 0x38
 8009664:	f9ba 2008 	ldrsh.w	r2, [sl, #8]
 8009668:	f8ad 203c 	strh.w	r2, [sp, #60]	; 0x3c
 800966c:	2500      	movs	r5, #0
 800966e:	910d      	str	r1, [sp, #52]	; 0x34
 8009670:	950e      	str	r5, [sp, #56]	; 0x38
 8009672:	f000 fe3b 	bl	800a2ec <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8009676:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 8009678:	f8d9 6000 	ldr.w	r6, [r9]
 800967c:	6818      	ldr	r0, [r3, #0]
 800967e:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8009680:	f9b4 b000 	ldrsh.w	fp, [r4]
 8009684:	f9b3 2000 	ldrsh.w	r2, [r3]
 8009688:	eb02 0c06 	add.w	ip, r2, r6
 800968c:	1b80      	subs	r0, r0, r6
 800968e:	ebab 0e0c 	sub.w	lr, fp, ip
 8009692:	4570      	cmp	r0, lr
 8009694:	f340 80bd 	ble.w	8009812 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x1ca>
 8009698:	88a1      	ldrh	r1, [r4, #4]
 800969a:	4459      	add	r1, fp
 800969c:	b209      	sxth	r1, r1
 800969e:	458c      	cmp	ip, r1
 80096a0:	f300 80b7 	bgt.w	8009812 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x1ca>
 80096a4:	f8bd 3080 	ldrh.w	r3, [sp, #128]	; 0x80
 80096a8:	ed97 4a09 	vldr	s8, [r7, #36]	; 0x24
 80096ac:	edd7 4a0b 	vldr	s9, [r7, #44]	; 0x2c
 80096b0:	edd9 6a07 	vldr	s13, [r9, #28]
 80096b4:	edd9 1a0a 	vldr	s3, [r9, #40]	; 0x28
 80096b8:	ed99 2a0d 	vldr	s4, [r9, #52]	; 0x34
 80096bc:	4283      	cmp	r3, r0
 80096be:	bfa8      	it	ge
 80096c0:	4603      	movge	r3, r0
 80096c2:	ee07 3a90 	vmov	s15, r3
 80096c6:	eeb8 5ae7 	vcvt.f32.s32	s10, s15
 80096ca:	edd7 7a0d 	vldr	s15, [r7, #52]	; 0x34
 80096ce:	ee25 4a04 	vmul.f32	s8, s10, s8
 80096d2:	ee65 4a24 	vmul.f32	s9, s10, s9
 80096d6:	ee25 5a27 	vmul.f32	s10, s10, s15
 80096da:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 80096de:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 80096e2:	45e3      	cmp	fp, ip
 80096e4:	ee71 0aa4 	vadd.f32	s1, s3, s9
 80096e8:	ee32 1a05 	vadd.f32	s2, s4, s10
 80096ec:	ee36 0a84 	vadd.f32	s0, s13, s8
 80096f0:	ee61 1a87 	vmul.f32	s3, s3, s14
 80096f4:	ee22 2a07 	vmul.f32	s4, s4, s14
 80096f8:	f340 808e 	ble.w	8009818 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x1d0>
 80096fc:	fb9e f5f3 	sdiv	r5, lr, r3
 8009700:	ee07 5a10 	vmov	s14, r5
 8009704:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8009708:	2d00      	cmp	r5, #0
 800970a:	fb03 e415 	mls	r4, r3, r5, lr
 800970e:	eea7 0a04 	vfma.f32	s0, s14, s8
 8009712:	eee7 0a24 	vfma.f32	s1, s14, s9
 8009716:	eea7 1a05 	vfma.f32	s2, s14, s10
 800971a:	dd13      	ble.n	8009744 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xfc>
 800971c:	ee70 6a44 	vsub.f32	s13, s0, s8
 8009720:	ee70 1ae4 	vsub.f32	s3, s1, s9
 8009724:	eef5 6a40 	vcmp.f32	s13, #0.0
 8009728:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800972c:	bf18      	it	ne
 800972e:	ee87 7aa6 	vdivne.f32	s14, s15, s13
 8009732:	ee31 2a45 	vsub.f32	s4, s2, s10
 8009736:	bf08      	it	eq
 8009738:	eeb0 7a67 	vmoveq.f32	s14, s15
 800973c:	ee61 1a87 	vmul.f32	s3, s3, s14
 8009740:	ee22 2a07 	vmul.f32	s4, s4, s14
 8009744:	fb05 f703 	mul.w	r7, r5, r3
 8009748:	1bc0      	subs	r0, r0, r7
 800974a:	443e      	add	r6, r7
 800974c:	1997      	adds	r7, r2, r6
 800974e:	4407      	add	r7, r0
 8009750:	42b9      	cmp	r1, r7
 8009752:	bfbc      	itt	lt
 8009754:	1a88      	sublt	r0, r1, r2
 8009756:	1b80      	sublt	r0, r0, r6
 8009758:	2800      	cmp	r0, #0
 800975a:	dd5a      	ble.n	8009812 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x1ca>
 800975c:	fb90 f1f3 	sdiv	r1, r0, r3
 8009760:	fb03 0211 	mls	r2, r3, r1, r0
 8009764:	b90a      	cbnz	r2, 800976a <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x122>
 8009766:	3901      	subs	r1, #1
 8009768:	461a      	mov	r2, r3
 800976a:	eec7 3a80 	vdiv.f32	s7, s15, s0
 800976e:	f89d b07c 	ldrb.w	fp, [sp, #124]	; 0x7c
 8009772:	44a4      	add	ip, r4
 8009774:	fb03 c505 	mla	r5, r3, r5, ip
 8009778:	2900      	cmp	r1, #0
 800977a:	bfcc      	ite	gt
 800977c:	469e      	movgt	lr, r3
 800977e:	4696      	movle	lr, r2
 8009780:	eef0 6a42 	vmov.f32	s13, s4
 8009784:	ee60 2aa3 	vmul.f32	s5, s1, s7
 8009788:	ee21 3a23 	vmul.f32	s6, s2, s7
 800978c:	ee72 7ae1 	vsub.f32	s15, s5, s3
 8009790:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8009794:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 8009798:	eeb0 7a61 	vmov.f32	s14, s3
 800979c:	ee17 0a90 	vmov	r0, s15
 80097a0:	ee73 7a42 	vsub.f32	s15, s6, s4
 80097a4:	fb90 f6f3 	sdiv	r6, r0, r3
 80097a8:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 80097ac:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 80097b0:	ee17 0a90 	vmov	r0, s15
 80097b4:	fb90 f7f3 	sdiv	r7, r0, r3
 80097b8:	f8d8 0004 	ldr.w	r0, [r8, #4]
 80097bc:	900c      	str	r0, [sp, #48]	; 0x30
 80097be:	f8d0 8000 	ldr.w	r8, [r0]
 80097c2:	981c      	ldr	r0, [sp, #112]	; 0x70
 80097c4:	e9cd ab0a 	strd	sl, fp, [sp, #40]	; 0x28
 80097c8:	f9bd a03e 	ldrsh.w	sl, [sp, #62]	; 0x3e
 80097cc:	f8cd a024 	str.w	sl, [sp, #36]	; 0x24
 80097d0:	f9bd a03c 	ldrsh.w	sl, [sp, #60]	; 0x3c
 80097d4:	f8cd a020 	str.w	sl, [sp, #32]
 80097d8:	f9b0 a002 	ldrsh.w	sl, [r0, #2]
 80097dc:	980d      	ldr	r0, [sp, #52]	; 0x34
 80097de:	f8d9 9014 	ldr.w	r9, [r9, #20]
 80097e2:	9603      	str	r6, [sp, #12]
 80097e4:	e9cd 7004 	strd	r7, r0, [sp, #16]
 80097e8:	ee16 0a90 	vmov	r0, s13
 80097ec:	fb07 0704 	mla	r7, r7, r4, r0
 80097f0:	ee17 0a10 	vmov	r0, s14
 80097f4:	fb06 0604 	mla	r6, r6, r4, r0
 80097f8:	e9cd 3600 	strd	r3, r6, [sp]
 80097fc:	44ca      	add	sl, r9
 80097fe:	f8cd a01c 	str.w	sl, [sp, #28]
 8009802:	9506      	str	r5, [sp, #24]
 8009804:	9702      	str	r7, [sp, #8]
 8009806:	f8d8 5008 	ldr.w	r5, [r8, #8]
 800980a:	980c      	ldr	r0, [sp, #48]	; 0x30
 800980c:	ebae 0304 	sub.w	r3, lr, r4
 8009810:	47a8      	blx	r5
 8009812:	b011      	add	sp, #68	; 0x44
 8009814:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8009818:	462c      	mov	r4, r5
 800981a:	e797      	b.n	800974c <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x104>

0800981c <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE>:
 800981c:	b570      	push	{r4, r5, r6, lr}
 800981e:	4604      	mov	r4, r0
 8009820:	2500      	movs	r5, #0
 8009822:	7223      	strb	r3, [r4, #8]
 8009824:	9804      	ldr	r0, [sp, #16]
 8009826:	f89d 3014 	ldrb.w	r3, [sp, #20]
 800982a:	8025      	strh	r5, [r4, #0]
 800982c:	6061      	str	r1, [r4, #4]
 800982e:	7263      	strb	r3, [r4, #9]
 8009830:	60e0      	str	r0, [r4, #12]
 8009832:	8222      	strh	r2, [r4, #16]
 8009834:	8265      	strh	r5, [r4, #18]
 8009836:	82a5      	strh	r5, [r4, #20]
 8009838:	82e5      	strh	r5, [r4, #22]
 800983a:	8325      	strh	r5, [r4, #24]
 800983c:	8365      	strh	r5, [r4, #26]
 800983e:	83a5      	strh	r5, [r4, #28]
 8009840:	77a5      	strb	r5, [r4, #30]
 8009842:	6803      	ldr	r3, [r0, #0]
 8009844:	695b      	ldr	r3, [r3, #20]
 8009846:	4798      	blx	r3
 8009848:	4606      	mov	r6, r0
 800984a:	b1f8      	cbz	r0, 800988c <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE+0x70>
 800984c:	68e0      	ldr	r0, [r4, #12]
 800984e:	6803      	ldr	r3, [r0, #0]
 8009850:	4631      	mov	r1, r6
 8009852:	68db      	ldr	r3, [r3, #12]
 8009854:	4798      	blx	r3
 8009856:	7b43      	ldrb	r3, [r0, #13]
 8009858:	7a82      	ldrb	r2, [r0, #10]
 800985a:	005b      	lsls	r3, r3, #1
 800985c:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8009860:	4313      	orrs	r3, r2
 8009862:	83a3      	strh	r3, [r4, #28]
 8009864:	7a63      	ldrb	r3, [r4, #9]
 8009866:	2b04      	cmp	r3, #4
 8009868:	4605      	mov	r5, r0
 800986a:	d10f      	bne.n	800988c <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE+0x70>
 800986c:	68e0      	ldr	r0, [r4, #12]
 800986e:	6803      	ldr	r3, [r0, #0]
 8009870:	462a      	mov	r2, r5
 8009872:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8009874:	4631      	mov	r1, r6
 8009876:	4798      	blx	r3
 8009878:	7b6b      	ldrb	r3, [r5, #13]
 800987a:	005b      	lsls	r3, r3, #1
 800987c:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8009880:	7aab      	ldrb	r3, [r5, #10]
 8009882:	4313      	orrs	r3, r2
 8009884:	4418      	add	r0, r3
 8009886:	8ba3      	ldrh	r3, [r4, #28]
 8009888:	4418      	add	r0, r3
 800988a:	83a0      	strh	r0, [r4, #28]
 800988c:	4620      	mov	r0, r4
 800988e:	bd70      	pop	{r4, r5, r6, pc}

08009890 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>:
 8009890:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8009894:	2400      	movs	r4, #0
 8009896:	b085      	sub	sp, #20
 8009898:	4681      	mov	r9, r0
 800989a:	4688      	mov	r8, r1
 800989c:	4692      	mov	sl, r2
 800989e:	469b      	mov	fp, r3
 80098a0:	4627      	mov	r7, r4
 80098a2:	4625      	mov	r5, r4
 80098a4:	4626      	mov	r6, r4
 80098a6:	4554      	cmp	r4, sl
 80098a8:	da2a      	bge.n	8009900 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 80098aa:	2300      	movs	r3, #0
 80098ac:	9303      	str	r3, [sp, #12]
 80098ae:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 80098b2:	429d      	cmp	r5, r3
 80098b4:	d004      	beq.n	80098c0 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x30>
 80098b6:	f242 030b 	movw	r3, #8203	; 0x200b
 80098ba:	429d      	cmp	r5, r3
 80098bc:	bf18      	it	ne
 80098be:	462f      	movne	r7, r5
 80098c0:	ab03      	add	r3, sp, #12
 80098c2:	4642      	mov	r2, r8
 80098c4:	4659      	mov	r1, fp
 80098c6:	4648      	mov	r0, r9
 80098c8:	f002 fb6e 	bl	800bfa8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 80098cc:	4605      	mov	r5, r0
 80098ce:	b1b8      	cbz	r0, 8009900 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 80098d0:	280a      	cmp	r0, #10
 80098d2:	d015      	beq.n	8009900 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 80098d4:	9a03      	ldr	r2, [sp, #12]
 80098d6:	b18a      	cbz	r2, 80098fc <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x6c>
 80098d8:	7b50      	ldrb	r0, [r2, #13]
 80098da:	7a93      	ldrb	r3, [r2, #10]
 80098dc:	8895      	ldrh	r5, [r2, #4]
 80098de:	0040      	lsls	r0, r0, #1
 80098e0:	f400 7080 	and.w	r0, r0, #256	; 0x100
 80098e4:	4303      	orrs	r3, r0
 80098e6:	9301      	str	r3, [sp, #4]
 80098e8:	f8d8 3000 	ldr.w	r3, [r8]
 80098ec:	4639      	mov	r1, r7
 80098ee:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80098f0:	4640      	mov	r0, r8
 80098f2:	4798      	blx	r3
 80098f4:	9b01      	ldr	r3, [sp, #4]
 80098f6:	4418      	add	r0, r3
 80098f8:	4406      	add	r6, r0
 80098fa:	b2b6      	uxth	r6, r6
 80098fc:	3401      	adds	r4, #1
 80098fe:	e7d2      	b.n	80098a6 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x16>
 8009900:	4630      	mov	r0, r6
 8009902:	b005      	add	sp, #20
 8009904:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08009908 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>:
 8009908:	2a02      	cmp	r2, #2
 800990a:	b530      	push	{r4, r5, lr}
 800990c:	d011      	beq.n	8009932 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x2a>
 800990e:	2a03      	cmp	r2, #3
 8009910:	d01c      	beq.n	800994c <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x44>
 8009912:	2a01      	cmp	r2, #1
 8009914:	d10c      	bne.n	8009930 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 8009916:	888b      	ldrh	r3, [r1, #4]
 8009918:	f9b0 2004 	ldrsh.w	r2, [r0, #4]
 800991c:	8801      	ldrh	r1, [r0, #0]
 800991e:	8844      	ldrh	r4, [r0, #2]
 8009920:	8004      	strh	r4, [r0, #0]
 8009922:	1a9b      	subs	r3, r3, r2
 8009924:	1a5b      	subs	r3, r3, r1
 8009926:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 800992a:	8043      	strh	r3, [r0, #2]
 800992c:	8081      	strh	r1, [r0, #4]
 800992e:	80c2      	strh	r2, [r0, #6]
 8009930:	bd30      	pop	{r4, r5, pc}
 8009932:	88cb      	ldrh	r3, [r1, #6]
 8009934:	88c2      	ldrh	r2, [r0, #6]
 8009936:	1a9b      	subs	r3, r3, r2
 8009938:	8842      	ldrh	r2, [r0, #2]
 800993a:	1a9b      	subs	r3, r3, r2
 800993c:	888a      	ldrh	r2, [r1, #4]
 800993e:	8881      	ldrh	r1, [r0, #4]
 8009940:	8043      	strh	r3, [r0, #2]
 8009942:	1a52      	subs	r2, r2, r1
 8009944:	8801      	ldrh	r1, [r0, #0]
 8009946:	1a52      	subs	r2, r2, r1
 8009948:	8002      	strh	r2, [r0, #0]
 800994a:	e7f1      	b.n	8009930 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 800994c:	88cb      	ldrh	r3, [r1, #6]
 800994e:	f9b0 2006 	ldrsh.w	r2, [r0, #6]
 8009952:	8841      	ldrh	r1, [r0, #2]
 8009954:	f9b0 5000 	ldrsh.w	r5, [r0]
 8009958:	f9b0 4004 	ldrsh.w	r4, [r0, #4]
 800995c:	8045      	strh	r5, [r0, #2]
 800995e:	1a9b      	subs	r3, r3, r2
 8009960:	1a5b      	subs	r3, r3, r1
 8009962:	8003      	strh	r3, [r0, #0]
 8009964:	8082      	strh	r2, [r0, #4]
 8009966:	80c4      	strh	r4, [r0, #6]
 8009968:	e7e2      	b.n	8009930 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>

0800996a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>:
 800996a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800996e:	b09f      	sub	sp, #124	; 0x7c
 8009970:	9116      	str	r1, [sp, #88]	; 0x58
 8009972:	9317      	str	r3, [sp, #92]	; 0x5c
 8009974:	9929      	ldr	r1, [sp, #164]	; 0xa4
 8009976:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8009978:	8809      	ldrh	r1, [r1, #0]
 800997a:	889b      	ldrh	r3, [r3, #4]
 800997c:	f8dd 80a8 	ldr.w	r8, [sp, #168]	; 0xa8
 8009980:	9212      	str	r2, [sp, #72]	; 0x48
 8009982:	440b      	add	r3, r1
 8009984:	b21b      	sxth	r3, r3
 8009986:	9310      	str	r3, [sp, #64]	; 0x40
 8009988:	f8d8 3000 	ldr.w	r3, [r8]
 800998c:	f89d 20b8 	ldrb.w	r2, [sp, #184]	; 0xb8
 8009990:	7a59      	ldrb	r1, [r3, #9]
 8009992:	7a1b      	ldrb	r3, [r3, #8]
 8009994:	9315      	str	r3, [sp, #84]	; 0x54
 8009996:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8009998:	9011      	str	r0, [sp, #68]	; 0x44
 800999a:	f89d b0ac 	ldrb.w	fp, [sp, #172]	; 0xac
 800999e:	9114      	str	r1, [sp, #80]	; 0x50
 80099a0:	f9b3 5000 	ldrsh.w	r5, [r3]
 80099a4:	2a00      	cmp	r2, #0
 80099a6:	d067      	beq.n	8009a78 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x10e>
 80099a8:	f898 3010 	ldrb.w	r3, [r8, #16]
 80099ac:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 80099ae:	2b04      	cmp	r3, #4
 80099b0:	bf14      	ite	ne
 80099b2:	2301      	movne	r3, #1
 80099b4:	2302      	moveq	r3, #2
 80099b6:	4413      	add	r3, r2
 80099b8:	f04f 0900 	mov.w	r9, #0
 80099bc:	930f      	str	r3, [sp, #60]	; 0x3c
 80099be:	f8cd 9038 	str.w	r9, [sp, #56]	; 0x38
 80099c2:	464c      	mov	r4, r9
 80099c4:	f8cd 9034 	str.w	r9, [sp, #52]	; 0x34
 80099c8:	e9dd 320e 	ldrd	r3, r2, [sp, #56]	; 0x38
 80099cc:	4293      	cmp	r3, r2
 80099ce:	f280 808c 	bge.w	8009aea <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x180>
 80099d2:	2300      	movs	r3, #0
 80099d4:	931c      	str	r3, [sp, #112]	; 0x70
 80099d6:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 80099da:	429c      	cmp	r4, r3
 80099dc:	d006      	beq.n	80099ec <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x82>
 80099de:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80099e0:	f242 020b 	movw	r2, #8203	; 0x200b
 80099e4:	4294      	cmp	r4, r2
 80099e6:	bf18      	it	ne
 80099e8:	4623      	movne	r3, r4
 80099ea:	930d      	str	r3, [sp, #52]	; 0x34
 80099ec:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80099ee:	992d      	ldr	r1, [sp, #180]	; 0xb4
 80099f0:	f8d8 2000 	ldr.w	r2, [r8]
 80099f4:	428b      	cmp	r3, r1
 80099f6:	db41      	blt.n	8009a7c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x112>
 80099f8:	6813      	ldr	r3, [r2, #0]
 80099fa:	4610      	mov	r0, r2
 80099fc:	695b      	ldr	r3, [r3, #20]
 80099fe:	4798      	blx	r3
 8009a00:	4604      	mov	r4, r0
 8009a02:	f8d8 0000 	ldr.w	r0, [r8]
 8009a06:	6803      	ldr	r3, [r0, #0]
 8009a08:	aa1d      	add	r2, sp, #116	; 0x74
 8009a0a:	689e      	ldr	r6, [r3, #8]
 8009a0c:	4621      	mov	r1, r4
 8009a0e:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
 8009a12:	47b0      	blx	r6
 8009a14:	901c      	str	r0, [sp, #112]	; 0x70
 8009a16:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8009a1a:	429c      	cmp	r4, r3
 8009a1c:	f000 80e9 	beq.w	8009bf2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x288>
 8009a20:	f242 030b 	movw	r3, #8203	; 0x200b
 8009a24:	429c      	cmp	r4, r3
 8009a26:	f000 80e4 	beq.w	8009bf2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x288>
 8009a2a:	2c00      	cmp	r4, #0
 8009a2c:	f000 80f6 	beq.w	8009c1c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2b2>
 8009a30:	2c0a      	cmp	r4, #10
 8009a32:	d060      	beq.n	8009af6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18c>
 8009a34:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 8009a36:	b36a      	cbz	r2, 8009a94 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x12a>
 8009a38:	8894      	ldrh	r4, [r2, #4]
 8009a3a:	f1bb 0f00 	cmp.w	fp, #0
 8009a3e:	d03b      	beq.n	8009ab8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x14e>
 8009a40:	f892 900d 	ldrb.w	r9, [r2, #13]
 8009a44:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8009a48:	f409 7380 	and.w	r3, r9, #256	; 0x100
 8009a4c:	f892 900a 	ldrb.w	r9, [r2, #10]
 8009a50:	f1bb 0f01 	cmp.w	fp, #1
 8009a54:	ea49 0903 	orr.w	r9, r9, r3
 8009a58:	d134      	bne.n	8009ac4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x15a>
 8009a5a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8009a5c:	eba5 0509 	sub.w	r5, r5, r9
 8009a60:	2b00      	cmp	r3, #0
 8009a62:	d14f      	bne.n	8009b04 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19a>
 8009a64:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8009a66:	eb09 0305 	add.w	r3, r9, r5
 8009a6a:	4413      	add	r3, r2
 8009a6c:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8009a6e:	f9b2 2000 	ldrsh.w	r2, [r2]
 8009a72:	4293      	cmp	r3, r2
 8009a74:	da51      	bge.n	8009b1a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b0>
 8009a76:	e038      	b.n	8009aea <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x180>
 8009a78:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8009a7a:	e79d      	b.n	80099b8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x4e>
 8009a7c:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
 8009a80:	9301      	str	r3, [sp, #4]
 8009a82:	ab1d      	add	r3, sp, #116	; 0x74
 8009a84:	9300      	str	r3, [sp, #0]
 8009a86:	4659      	mov	r1, fp
 8009a88:	ab1c      	add	r3, sp, #112	; 0x70
 8009a8a:	982c      	ldr	r0, [sp, #176]	; 0xb0
 8009a8c:	f002 fae4 	bl	800c058 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>
 8009a90:	4604      	mov	r4, r0
 8009a92:	e7c0      	b.n	8009a16 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xac>
 8009a94:	f8d8 0000 	ldr.w	r0, [r8]
 8009a98:	6803      	ldr	r3, [r0, #0]
 8009a9a:	691b      	ldr	r3, [r3, #16]
 8009a9c:	4798      	blx	r3
 8009a9e:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8009aa2:	4298      	cmp	r0, r3
 8009aa4:	f000 80a5 	beq.w	8009bf2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x288>
 8009aa8:	f242 030b 	movw	r3, #8203	; 0x200b
 8009aac:	4298      	cmp	r0, r3
 8009aae:	f000 80a0 	beq.w	8009bf2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x288>
 8009ab2:	f1bb 0f00 	cmp.w	fp, #0
 8009ab6:	d100      	bne.n	8009aba <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x150>
 8009ab8:	444d      	add	r5, r9
 8009aba:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 8009abc:	2a00      	cmp	r2, #0
 8009abe:	d1bf      	bne.n	8009a40 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xd6>
 8009ac0:	4691      	mov	r9, r2
 8009ac2:	e096      	b.n	8009bf2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x288>
 8009ac4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8009ac6:	2b00      	cmp	r3, #0
 8009ac8:	f000 80aa 	beq.w	8009c20 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2b6>
 8009acc:	f1bb 0f00 	cmp.w	fp, #0
 8009ad0:	d118      	bne.n	8009b04 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19a>
 8009ad2:	f8d8 0000 	ldr.w	r0, [r8]
 8009ad6:	990d      	ldr	r1, [sp, #52]	; 0x34
 8009ad8:	6803      	ldr	r3, [r0, #0]
 8009ada:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8009adc:	4798      	blx	r3
 8009ade:	4405      	add	r5, r0
 8009ae0:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8009ae2:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8009ae4:	1aeb      	subs	r3, r5, r3
 8009ae6:	4293      	cmp	r3, r2
 8009ae8:	dd17      	ble.n	8009b1a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b0>
 8009aea:	2c00      	cmp	r4, #0
 8009aec:	f000 8096 	beq.w	8009c1c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2b2>
 8009af0:	2c0a      	cmp	r4, #10
 8009af2:	f040 8084 	bne.w	8009bfe <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x294>
 8009af6:	240a      	movs	r4, #10
 8009af8:	fab4 f084 	clz	r0, r4
 8009afc:	0940      	lsrs	r0, r0, #5
 8009afe:	b01f      	add	sp, #124	; 0x7c
 8009b00:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8009b04:	f8d8 0000 	ldr.w	r0, [r8]
 8009b08:	990d      	ldr	r1, [sp, #52]	; 0x34
 8009b0a:	6803      	ldr	r3, [r0, #0]
 8009b0c:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8009b0e:	4798      	blx	r3
 8009b10:	f1bb 0f01 	cmp.w	fp, #1
 8009b14:	eba5 0500 	sub.w	r5, r5, r0
 8009b18:	d0a4      	beq.n	8009a64 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xfa>
 8009b1a:	981c      	ldr	r0, [sp, #112]	; 0x70
 8009b1c:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8009b1e:	f990 1009 	ldrsb.w	r1, [r0, #9]
 8009b22:	f9b3 6000 	ldrsh.w	r6, [r3]
 8009b26:	7b43      	ldrb	r3, [r0, #13]
 8009b28:	015b      	lsls	r3, r3, #5
 8009b2a:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8009b2e:	7983      	ldrb	r3, [r0, #6]
 8009b30:	4429      	add	r1, r5
 8009b32:	4313      	orrs	r3, r2
 8009b34:	440b      	add	r3, r1
 8009b36:	42b3      	cmp	r3, r6
 8009b38:	db5b      	blt.n	8009bf2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x288>
 8009b3a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8009b3c:	4299      	cmp	r1, r3
 8009b3e:	da58      	bge.n	8009bf2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x288>
 8009b40:	f8d8 0000 	ldr.w	r0, [r8]
 8009b44:	6803      	ldr	r3, [r0, #0]
 8009b46:	42ae      	cmp	r6, r5
 8009b48:	bfc8      	it	gt
 8009b4a:	1b76      	subgt	r6, r6, r5
 8009b4c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8009b4e:	bfcc      	ite	gt
 8009b50:	b2b6      	uxthgt	r6, r6
 8009b52:	2600      	movle	r6, #0
 8009b54:	4798      	blx	r3
 8009b56:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8009b58:	7b5a      	ldrb	r2, [r3, #13]
 8009b5a:	00d1      	lsls	r1, r2, #3
 8009b5c:	f401 7780 	and.w	r7, r1, #256	; 0x100
 8009b60:	7a19      	ldrb	r1, [r3, #8]
 8009b62:	4339      	orrs	r1, r7
 8009b64:	0657      	lsls	r7, r2, #25
 8009b66:	9f17      	ldr	r7, [sp, #92]	; 0x5c
 8009b68:	bf44      	itt	mi
 8009b6a:	f5a1 7100 	submi.w	r1, r1, #512	; 0x200
 8009b6e:	b209      	sxthmi	r1, r1
 8009b70:	19c7      	adds	r7, r0, r7
 8009b72:	1a7f      	subs	r7, r7, r1
 8009b74:	9929      	ldr	r1, [sp, #164]	; 0xa4
 8009b76:	b2bf      	uxth	r7, r7
 8009b78:	f9b1 1002 	ldrsh.w	r1, [r1, #2]
 8009b7c:	fa0f fa87 	sxth.w	sl, r7
 8009b80:	4551      	cmp	r1, sl
 8009b82:	dd3a      	ble.n	8009bfa <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8009b84:	0112      	lsls	r2, r2, #4
 8009b86:	79d8      	ldrb	r0, [r3, #7]
 8009b88:	f402 7280 	and.w	r2, r2, #256	; 0x100
 8009b8c:	4302      	orrs	r2, r0
 8009b8e:	4492      	add	sl, r2
 8009b90:	4551      	cmp	r1, sl
 8009b92:	dc2e      	bgt.n	8009bf2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x288>
 8009b94:	1bcf      	subs	r7, r1, r7
 8009b96:	b2bf      	uxth	r7, r7
 8009b98:	468a      	mov	sl, r1
 8009b9a:	9319      	str	r3, [sp, #100]	; 0x64
 8009b9c:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8009b9e:	f8d8 0000 	ldr.w	r0, [r8]
 8009ba2:	681a      	ldr	r2, [r3, #0]
 8009ba4:	6801      	ldr	r1, [r0, #0]
 8009ba6:	6c13      	ldr	r3, [r2, #64]	; 0x40
 8009ba8:	9a1d      	ldr	r2, [sp, #116]	; 0x74
 8009baa:	9313      	str	r3, [sp, #76]	; 0x4c
 8009bac:	9218      	str	r2, [sp, #96]	; 0x60
 8009bae:	6b89      	ldr	r1, [r1, #56]	; 0x38
 8009bb0:	4788      	blx	r1
 8009bb2:	f898 1006 	ldrb.w	r1, [r8, #6]
 8009bb6:	910b      	str	r1, [sp, #44]	; 0x2c
 8009bb8:	f898 100e 	ldrb.w	r1, [r8, #14]
 8009bbc:	910a      	str	r1, [sp, #40]	; 0x28
 8009bbe:	f89d 106f 	ldrb.w	r1, [sp, #111]	; 0x6f
 8009bc2:	9109      	str	r1, [sp, #36]	; 0x24
 8009bc4:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8009bc6:	f8d8 1008 	ldr.w	r1, [r8, #8]
 8009bca:	9305      	str	r3, [sp, #20]
 8009bcc:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8009bce:	9a18      	ldr	r2, [sp, #96]	; 0x60
 8009bd0:	9206      	str	r2, [sp, #24]
 8009bd2:	e9cd 0107 	strd	r0, r1, [sp, #28]
 8009bd6:	e9cd 7303 	strd	r7, r3, [sp, #12]
 8009bda:	e9cd a601 	strd	sl, r6, [sp, #4]
 8009bde:	442e      	add	r6, r5
 8009be0:	b236      	sxth	r6, r6
 8009be2:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8009be4:	9600      	str	r6, [sp, #0]
 8009be6:	681a      	ldr	r2, [r3, #0]
 8009be8:	9916      	ldr	r1, [sp, #88]	; 0x58
 8009bea:	685b      	ldr	r3, [r3, #4]
 8009bec:	9811      	ldr	r0, [sp, #68]	; 0x44
 8009bee:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 8009bf0:	47b0      	blx	r6
 8009bf2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8009bf4:	3301      	adds	r3, #1
 8009bf6:	930e      	str	r3, [sp, #56]	; 0x38
 8009bf8:	e6e6      	b.n	80099c8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x5e>
 8009bfa:	2700      	movs	r7, #0
 8009bfc:	e7cd      	b.n	8009b9a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x230>
 8009bfe:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8009c00:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8009c02:	3501      	adds	r5, #1
 8009c04:	429d      	cmp	r5, r3
 8009c06:	f6bf af77 	bge.w	8009af8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18e>
 8009c0a:	4659      	mov	r1, fp
 8009c0c:	982c      	ldr	r0, [sp, #176]	; 0xb0
 8009c0e:	f7f8 fb7f 	bl	8002310 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 8009c12:	4604      	mov	r4, r0
 8009c14:	b110      	cbz	r0, 8009c1c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2b2>
 8009c16:	280a      	cmp	r0, #10
 8009c18:	d1f2      	bne.n	8009c00 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x296>
 8009c1a:	e76c      	b.n	8009af6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18c>
 8009c1c:	2400      	movs	r4, #0
 8009c1e:	e76b      	b.n	8009af8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18e>
 8009c20:	f1bb 0f00 	cmp.w	fp, #0
 8009c24:	f43f af5c 	beq.w	8009ae0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x176>
 8009c28:	e777      	b.n	8009b1a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b0>

08009c2a <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>:
 8009c2a:	b530      	push	{r4, r5, lr}
 8009c2c:	8a44      	ldrh	r4, [r0, #18]
 8009c2e:	8ac5      	ldrh	r5, [r0, #22]
 8009c30:	82c3      	strh	r3, [r0, #22]
 8009c32:	442c      	add	r4, r5
 8009c34:	1ae4      	subs	r4, r4, r3
 8009c36:	8244      	strh	r4, [r0, #18]
 8009c38:	8b03      	ldrh	r3, [r0, #24]
 8009c3a:	8a84      	ldrh	r4, [r0, #20]
 8009c3c:	4422      	add	r2, r4
 8009c3e:	440c      	add	r4, r1
 8009c40:	1a59      	subs	r1, r3, r1
 8009c42:	8342      	strh	r2, [r0, #26]
 8009c44:	8284      	strh	r4, [r0, #20]
 8009c46:	8301      	strh	r1, [r0, #24]
 8009c48:	bd30      	pop	{r4, r5, pc}

08009c4a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb>:
 8009c4a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8009c4e:	7a43      	ldrb	r3, [r0, #9]
 8009c50:	1eda      	subs	r2, r3, #3
 8009c52:	b087      	sub	sp, #28
 8009c54:	4604      	mov	r4, r0
 8009c56:	b2d2      	uxtb	r2, r2
 8009c58:	460f      	mov	r7, r1
 8009c5a:	2900      	cmp	r1, #0
 8009c5c:	d036      	beq.n	8009ccc <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x82>
 8009c5e:	2a01      	cmp	r2, #1
 8009c60:	d932      	bls.n	8009cc8 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x7e>
 8009c62:	1e58      	subs	r0, r3, #1
 8009c64:	f1d0 0b00 	rsbs	fp, r0, #0
 8009c68:	eb4b 0b00 	adc.w	fp, fp, r0
 8009c6c:	1e99      	subs	r1, r3, #2
 8009c6e:	424b      	negs	r3, r1
 8009c70:	414b      	adcs	r3, r1
 8009c72:	9303      	str	r3, [sp, #12]
 8009c74:	2300      	movs	r3, #0
 8009c76:	e9cd 3301 	strd	r3, r3, [sp, #4]
 8009c7a:	2500      	movs	r5, #0
 8009c7c:	8265      	strh	r5, [r4, #18]
 8009c7e:	82a5      	strh	r5, [r4, #20]
 8009c80:	46a9      	mov	r9, r5
 8009c82:	f242 0a0b 	movw	sl, #8203	; 0x200b
 8009c86:	2300      	movs	r3, #0
 8009c88:	9305      	str	r3, [sp, #20]
 8009c8a:	8823      	ldrh	r3, [r4, #0]
 8009c8c:	2b20      	cmp	r3, #32
 8009c8e:	d02b      	beq.n	8009ce8 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x9e>
 8009c90:	eba3 020a 	sub.w	r2, r3, sl
 8009c94:	4256      	negs	r6, r2
 8009c96:	4156      	adcs	r6, r2
 8009c98:	f64f 62ff 	movw	r2, #65279	; 0xfeff
 8009c9c:	4293      	cmp	r3, r2
 8009c9e:	d004      	beq.n	8009caa <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x60>
 8009ca0:	4553      	cmp	r3, sl
 8009ca2:	bf16      	itet	ne
 8009ca4:	4699      	movne	r9, r3
 8009ca6:	2601      	moveq	r6, #1
 8009ca8:	2600      	movne	r6, #0
 8009caa:	ab05      	add	r3, sp, #20
 8009cac:	68e2      	ldr	r2, [r4, #12]
 8009cae:	7a21      	ldrb	r1, [r4, #8]
 8009cb0:	6860      	ldr	r0, [r4, #4]
 8009cb2:	f002 f979 	bl	800bfa8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8009cb6:	8020      	strh	r0, [r4, #0]
 8009cb8:	b9c8      	cbnz	r0, 8009cee <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xa4>
 8009cba:	8b22      	ldrh	r2, [r4, #24]
 8009cbc:	2300      	movs	r3, #0
 8009cbe:	4611      	mov	r1, r2
 8009cc0:	4620      	mov	r0, r4
 8009cc2:	f7ff ffb2 	bl	8009c2a <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 8009cc6:	e066      	b.n	8009d96 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x14c>
 8009cc8:	468b      	mov	fp, r1
 8009cca:	e7cf      	b.n	8009c6c <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x22>
 8009ccc:	3b01      	subs	r3, #1
 8009cce:	2a01      	cmp	r2, #1
 8009cd0:	bf8c      	ite	hi
 8009cd2:	2200      	movhi	r2, #0
 8009cd4:	2201      	movls	r2, #1
 8009cd6:	2b01      	cmp	r3, #1
 8009cd8:	bf8c      	ite	hi
 8009cda:	2300      	movhi	r3, #0
 8009cdc:	2301      	movls	r3, #1
 8009cde:	9202      	str	r2, [sp, #8]
 8009ce0:	9301      	str	r3, [sp, #4]
 8009ce2:	9103      	str	r1, [sp, #12]
 8009ce4:	468b      	mov	fp, r1
 8009ce6:	e7c8      	b.n	8009c7a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x30>
 8009ce8:	4699      	mov	r9, r3
 8009cea:	2601      	movs	r6, #1
 8009cec:	e7dd      	b.n	8009caa <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x60>
 8009cee:	8ae3      	ldrh	r3, [r4, #22]
 8009cf0:	280a      	cmp	r0, #10
 8009cf2:	f103 0301 	add.w	r3, r3, #1
 8009cf6:	82e3      	strh	r3, [r4, #22]
 8009cf8:	d0df      	beq.n	8009cba <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x70>
 8009cfa:	9a05      	ldr	r2, [sp, #20]
 8009cfc:	bb42      	cbnz	r2, 8009d50 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x106>
 8009cfe:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8009d02:	4298      	cmp	r0, r3
 8009d04:	d001      	beq.n	8009d0a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xc0>
 8009d06:	4550      	cmp	r0, sl
 8009d08:	d1bd      	bne.n	8009c86 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 8009d0a:	8823      	ldrh	r3, [r4, #0]
 8009d0c:	8b21      	ldrh	r1, [r4, #24]
 8009d0e:	2b20      	cmp	r3, #32
 8009d10:	d001      	beq.n	8009d16 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xcc>
 8009d12:	4553      	cmp	r3, sl
 8009d14:	d131      	bne.n	8009d7a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x130>
 8009d16:	2e00      	cmp	r6, #0
 8009d18:	bf0a      	itet	eq
 8009d1a:	460d      	moveq	r5, r1
 8009d1c:	4630      	movne	r0, r6
 8009d1e:	2001      	moveq	r0, #1
 8009d20:	440a      	add	r2, r1
 8009d22:	8aa3      	ldrh	r3, [r4, #20]
 8009d24:	f8b4 c010 	ldrh.w	ip, [r4, #16]
 8009d28:	b292      	uxth	r2, r2
 8009d2a:	8322      	strh	r2, [r4, #24]
 8009d2c:	4413      	add	r3, r2
 8009d2e:	2f00      	cmp	r7, #0
 8009d30:	d03a      	beq.n	8009da8 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x15e>
 8009d32:	f1bb 0f00 	cmp.w	fp, #0
 8009d36:	d102      	bne.n	8009d3e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xf4>
 8009d38:	9903      	ldr	r1, [sp, #12]
 8009d3a:	b301      	cbz	r1, 8009d7e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x134>
 8009d3c:	b1f8      	cbz	r0, 8009d7e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x134>
 8009d3e:	8ba1      	ldrh	r1, [r4, #28]
 8009d40:	4419      	add	r1, r3
 8009d42:	458c      	cmp	ip, r1
 8009d44:	da2a      	bge.n	8009d9c <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x152>
 8009d46:	8a61      	ldrh	r1, [r4, #18]
 8009d48:	b341      	cbz	r1, 8009d9c <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x152>
 8009d4a:	4563      	cmp	r3, ip
 8009d4c:	dd9b      	ble.n	8009c86 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 8009d4e:	e01c      	b.n	8009d8a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x140>
 8009d50:	8893      	ldrh	r3, [r2, #4]
 8009d52:	8023      	strh	r3, [r4, #0]
 8009d54:	f892 800d 	ldrb.w	r8, [r2, #13]
 8009d58:	ea4f 0848 	mov.w	r8, r8, lsl #1
 8009d5c:	f408 7080 	and.w	r0, r8, #256	; 0x100
 8009d60:	f892 800a 	ldrb.w	r8, [r2, #10]
 8009d64:	ea48 0800 	orr.w	r8, r8, r0
 8009d68:	68e0      	ldr	r0, [r4, #12]
 8009d6a:	6803      	ldr	r3, [r0, #0]
 8009d6c:	4649      	mov	r1, r9
 8009d6e:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8009d70:	4798      	blx	r3
 8009d72:	eb08 0200 	add.w	r2, r8, r0
 8009d76:	b292      	uxth	r2, r2
 8009d78:	e7c7      	b.n	8009d0a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xc0>
 8009d7a:	2000      	movs	r0, #0
 8009d7c:	e7d0      	b.n	8009d20 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xd6>
 8009d7e:	4563      	cmp	r3, ip
 8009d80:	dd81      	ble.n	8009c86 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 8009d82:	8a63      	ldrh	r3, [r4, #18]
 8009d84:	2b00      	cmp	r3, #0
 8009d86:	f43f af7e 	beq.w	8009c86 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 8009d8a:	2301      	movs	r3, #1
 8009d8c:	77a3      	strb	r3, [r4, #30]
 8009d8e:	8ba2      	ldrh	r2, [r4, #28]
 8009d90:	8b63      	ldrh	r3, [r4, #26]
 8009d92:	4413      	add	r3, r2
 8009d94:	8363      	strh	r3, [r4, #26]
 8009d96:	b007      	add	sp, #28
 8009d98:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8009d9c:	2300      	movs	r3, #0
 8009d9e:	4611      	mov	r1, r2
 8009da0:	4620      	mov	r0, r4
 8009da2:	f7ff ff42 	bl	8009c2a <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 8009da6:	e76e      	b.n	8009c86 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 8009da8:	4563      	cmp	r3, ip
 8009daa:	dd14      	ble.n	8009dd6 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x18c>
 8009dac:	9b02      	ldr	r3, [sp, #8]
 8009dae:	b113      	cbz	r3, 8009db6 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x16c>
 8009db0:	2301      	movs	r3, #1
 8009db2:	460a      	mov	r2, r1
 8009db4:	e783      	b.n	8009cbe <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x74>
 8009db6:	9b01      	ldr	r3, [sp, #4]
 8009db8:	2b00      	cmp	r3, #0
 8009dba:	f43f af64 	beq.w	8009c86 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 8009dbe:	2800      	cmp	r0, #0
 8009dc0:	f47f af61 	bne.w	8009c86 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 8009dc4:	b116      	cbz	r6, 8009dcc <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x182>
 8009dc6:	2301      	movs	r3, #1
 8009dc8:	462a      	mov	r2, r5
 8009dca:	e779      	b.n	8009cc0 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x76>
 8009dcc:	8a63      	ldrh	r3, [r4, #18]
 8009dce:	2b00      	cmp	r3, #0
 8009dd0:	f43f af59 	beq.w	8009c86 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 8009dd4:	e7df      	b.n	8009d96 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x14c>
 8009dd6:	2800      	cmp	r0, #0
 8009dd8:	f47f af55 	bne.w	8009c86 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 8009ddc:	2e00      	cmp	r6, #0
 8009dde:	f43f af52 	beq.w	8009c86 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 8009de2:	2301      	movs	r3, #1
 8009de4:	462a      	mov	r2, r5
 8009de6:	e7db      	b.n	8009da0 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x156>

08009de8 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>:
 8009de8:	b530      	push	{r4, r5, lr}
 8009dea:	4605      	mov	r5, r0
 8009dec:	b08b      	sub	sp, #44	; 0x2c
 8009dee:	b191      	cbz	r1, 8009e16 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x2e>
 8009df0:	e9cd 3100 	strd	r3, r1, [sp]
 8009df4:	4613      	mov	r3, r2
 8009df6:	4601      	mov	r1, r0
 8009df8:	f8bd 2038 	ldrh.w	r2, [sp, #56]	; 0x38
 8009dfc:	a802      	add	r0, sp, #8
 8009dfe:	f7ff fd0d 	bl	800981c <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE>
 8009e02:	2401      	movs	r4, #1
 8009e04:	2100      	movs	r1, #0
 8009e06:	a802      	add	r0, sp, #8
 8009e08:	f7ff ff1f 	bl	8009c4a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb>
 8009e0c:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 8009e10:	b163      	cbz	r3, 8009e2c <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x44>
 8009e12:	3401      	adds	r4, #1
 8009e14:	e7f6      	b.n	8009e04 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x1c>
 8009e16:	f002 f9bf 	bl	800c198 <_ZN8touchgfx12TextProvider11getNextCharEv>
 8009e1a:	2401      	movs	r4, #1
 8009e1c:	280a      	cmp	r0, #10
 8009e1e:	4628      	mov	r0, r5
 8009e20:	bf08      	it	eq
 8009e22:	3401      	addeq	r4, #1
 8009e24:	f002 f9b8 	bl	800c198 <_ZN8touchgfx12TextProvider11getNextCharEv>
 8009e28:	2800      	cmp	r0, #0
 8009e2a:	d1f7      	bne.n	8009e1c <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x34>
 8009e2c:	b2a0      	uxth	r0, r4
 8009e2e:	b00b      	add	sp, #44	; 0x2c
 8009e30:	bd30      	pop	{r4, r5, pc}

08009e32 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>:
 8009e32:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8009e36:	b0db      	sub	sp, #364	; 0x16c
 8009e38:	4689      	mov	r9, r1
 8009e3a:	f8dd a190 	ldr.w	sl, [sp, #400]	; 0x190
 8009e3e:	900a      	str	r0, [sp, #40]	; 0x28
 8009e40:	461c      	mov	r4, r3
 8009e42:	f1ba 0f00 	cmp.w	sl, #0
 8009e46:	f000 80a5 	beq.w	8009f94 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x162>
 8009e4a:	681b      	ldr	r3, [r3, #0]
 8009e4c:	2b00      	cmp	r3, #0
 8009e4e:	f000 80a1 	beq.w	8009f94 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x162>
 8009e52:	7ba3      	ldrb	r3, [r4, #14]
 8009e54:	2b00      	cmp	r3, #0
 8009e56:	f000 809d 	beq.w	8009f94 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x162>
 8009e5a:	6810      	ldr	r0, [r2, #0]
 8009e5c:	6851      	ldr	r1, [r2, #4]
 8009e5e:	f9b9 2004 	ldrsh.w	r2, [r9, #4]
 8009e62:	f8ad 203c 	strh.w	r2, [sp, #60]	; 0x3c
 8009e66:	f10d 0830 	add.w	r8, sp, #48	; 0x30
 8009e6a:	4643      	mov	r3, r8
 8009e6c:	c303      	stmia	r3!, {r0, r1}
 8009e6e:	2500      	movs	r5, #0
 8009e70:	f9b9 3006 	ldrsh.w	r3, [r9, #6]
 8009e74:	79a2      	ldrb	r2, [r4, #6]
 8009e76:	f8ad 303e 	strh.w	r3, [sp, #62]	; 0x3e
 8009e7a:	a90e      	add	r1, sp, #56	; 0x38
 8009e7c:	4640      	mov	r0, r8
 8009e7e:	950e      	str	r5, [sp, #56]	; 0x38
 8009e80:	f7ff fd42 	bl	8009908 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 8009e84:	a90e      	add	r1, sp, #56	; 0x38
 8009e86:	4608      	mov	r0, r1
 8009e88:	79a2      	ldrb	r2, [r4, #6]
 8009e8a:	af18      	add	r7, sp, #96	; 0x60
 8009e8c:	f7ff fd3c 	bl	8009908 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 8009e90:	4638      	mov	r0, r7
 8009e92:	f001 fd4b 	bl	800b92c <_ZN8touchgfx12TextProviderC1Ev>
 8009e96:	6820      	ldr	r0, [r4, #0]
 8009e98:	6803      	ldr	r3, [r0, #0]
 8009e9a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8009e9c:	4798      	blx	r3
 8009e9e:	9a65      	ldr	r2, [sp, #404]	; 0x194
 8009ea0:	4603      	mov	r3, r0
 8009ea2:	4651      	mov	r1, sl
 8009ea4:	4638      	mov	r0, r7
 8009ea6:	f001 fd86 	bl	800b9b6 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_>
 8009eaa:	6820      	ldr	r0, [r4, #0]
 8009eac:	7923      	ldrb	r3, [r4, #4]
 8009eae:	9308      	str	r3, [sp, #32]
 8009eb0:	6803      	ldr	r3, [r0, #0]
 8009eb2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8009eb4:	4798      	blx	r3
 8009eb6:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8009eba:	181e      	adds	r6, r3, r0
 8009ebc:	42ae      	cmp	r6, r5
 8009ebe:	dd06      	ble.n	8009ece <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x9c>
 8009ec0:	f9b8 2002 	ldrsh.w	r2, [r8, #2]
 8009ec4:	4282      	cmp	r2, r0
 8009ec6:	bfa4      	itt	ge
 8009ec8:	189d      	addge	r5, r3, r2
 8009eca:	fb95 f5f6 	sdivge	r5, r5, r6
 8009ece:	a82e      	add	r0, sp, #184	; 0xb8
 8009ed0:	f001 fd2c 	bl	800b92c <_ZN8touchgfx12TextProviderC1Ev>
 8009ed4:	7c23      	ldrb	r3, [r4, #16]
 8009ed6:	b14b      	cbz	r3, 8009eec <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xba>
 8009ed8:	6820      	ldr	r0, [r4, #0]
 8009eda:	6803      	ldr	r3, [r0, #0]
 8009edc:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8009ede:	4798      	blx	r3
 8009ee0:	9a65      	ldr	r2, [sp, #404]	; 0x194
 8009ee2:	4603      	mov	r3, r0
 8009ee4:	4651      	mov	r1, sl
 8009ee6:	a82e      	add	r0, sp, #184	; 0xb8
 8009ee8:	f001 fd65 	bl	800b9b6 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_>
 8009eec:	7c21      	ldrb	r1, [r4, #16]
 8009eee:	9101      	str	r1, [sp, #4]
 8009ef0:	6821      	ldr	r1, [r4, #0]
 8009ef2:	7963      	ldrb	r3, [r4, #5]
 8009ef4:	9100      	str	r1, [sp, #0]
 8009ef6:	f8bd 203c 	ldrh.w	r2, [sp, #60]	; 0x3c
 8009efa:	a92e      	add	r1, sp, #184	; 0xb8
 8009efc:	a810      	add	r0, sp, #64	; 0x40
 8009efe:	f7ff fc8d 	bl	800981c <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE>
 8009f02:	7c23      	ldrb	r3, [r4, #16]
 8009f04:	b9bb      	cbnz	r3, 8009f36 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x104>
 8009f06:	fa1f fa86 	uxth.w	sl, r6
 8009f0a:	2d00      	cmp	r5, #0
 8009f0c:	dd45      	ble.n	8009f9a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x168>
 8009f0e:	4638      	mov	r0, r7
 8009f10:	f002 f942 	bl	800c198 <_ZN8touchgfx12TextProvider11getNextCharEv>
 8009f14:	2800      	cmp	r0, #0
 8009f16:	d03d      	beq.n	8009f94 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x162>
 8009f18:	280a      	cmp	r0, #10
 8009f1a:	d1f6      	bne.n	8009f0a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xd8>
 8009f1c:	f8bd 303a 	ldrh.w	r3, [sp, #58]	; 0x3a
 8009f20:	4453      	add	r3, sl
 8009f22:	f8ad 303a 	strh.w	r3, [sp, #58]	; 0x3a
 8009f26:	f8bd 303e 	ldrh.w	r3, [sp, #62]	; 0x3e
 8009f2a:	eba3 030a 	sub.w	r3, r3, sl
 8009f2e:	3d01      	subs	r5, #1
 8009f30:	f8ad 303e 	strh.w	r3, [sp, #62]	; 0x3e
 8009f34:	e7e9      	b.n	8009f0a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xd8>
 8009f36:	0073      	lsls	r3, r6, #1
 8009f38:	9309      	str	r3, [sp, #36]	; 0x24
 8009f3a:	f64f 7bff 	movw	fp, #65535	; 0xffff
 8009f3e:	fa1f fa86 	uxth.w	sl, r6
 8009f42:	2d00      	cmp	r5, #0
 8009f44:	dd29      	ble.n	8009f9a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x168>
 8009f46:	f9bd 103e 	ldrsh.w	r1, [sp, #62]	; 0x3e
 8009f4a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8009f4c:	428b      	cmp	r3, r1
 8009f4e:	bfd4      	ite	le
 8009f50:	2100      	movle	r1, #0
 8009f52:	2101      	movgt	r1, #1
 8009f54:	a810      	add	r0, sp, #64	; 0x40
 8009f56:	f7ff fe78 	bl	8009c4a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb>
 8009f5a:	f8bd 3052 	ldrh.w	r3, [sp, #82]	; 0x52
 8009f5e:	3b01      	subs	r3, #1
 8009f60:	b29b      	uxth	r3, r3
 8009f62:	455b      	cmp	r3, fp
 8009f64:	930b      	str	r3, [sp, #44]	; 0x2c
 8009f66:	d005      	beq.n	8009f74 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x142>
 8009f68:	7961      	ldrb	r1, [r4, #5]
 8009f6a:	4638      	mov	r0, r7
 8009f6c:	f7f8 f9d0 	bl	8002310 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 8009f70:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8009f72:	e7f4      	b.n	8009f5e <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x12c>
 8009f74:	f8bd 303a 	ldrh.w	r3, [sp, #58]	; 0x3a
 8009f78:	4453      	add	r3, sl
 8009f7a:	f8ad 303a 	strh.w	r3, [sp, #58]	; 0x3a
 8009f7e:	f8bd 303e 	ldrh.w	r3, [sp, #62]	; 0x3e
 8009f82:	eba3 030a 	sub.w	r3, r3, sl
 8009f86:	f8ad 303e 	strh.w	r3, [sp, #62]	; 0x3e
 8009f8a:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 8009f8e:	3d01      	subs	r5, #1
 8009f90:	2b00      	cmp	r3, #0
 8009f92:	d1d6      	bne.n	8009f42 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x110>
 8009f94:	b05b      	add	sp, #364	; 0x16c
 8009f96:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8009f9a:	ea4f 0a46 	mov.w	sl, r6, lsl #1
 8009f9e:	ad44      	add	r5, sp, #272	; 0x110
 8009fa0:	f04f 0b00 	mov.w	fp, #0
 8009fa4:	7c23      	ldrb	r3, [r4, #16]
 8009fa6:	2b00      	cmp	r3, #0
 8009fa8:	d067      	beq.n	800a07a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x248>
 8009faa:	f9bd 103e 	ldrsh.w	r1, [sp, #62]	; 0x3e
 8009fae:	458a      	cmp	sl, r1
 8009fb0:	bfd4      	ite	le
 8009fb2:	2100      	movle	r1, #0
 8009fb4:	2101      	movgt	r1, #1
 8009fb6:	a810      	add	r0, sp, #64	; 0x40
 8009fb8:	f7ff fe47 	bl	8009c4a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb>
 8009fbc:	9b08      	ldr	r3, [sp, #32]
 8009fbe:	2b00      	cmp	r3, #0
 8009fc0:	d056      	beq.n	800a070 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x23e>
 8009fc2:	7c23      	ldrb	r3, [r4, #16]
 8009fc4:	9309      	str	r3, [sp, #36]	; 0x24
 8009fc6:	2258      	movs	r2, #88	; 0x58
 8009fc8:	4639      	mov	r1, r7
 8009fca:	4628      	mov	r0, r5
 8009fcc:	f00e f844 	bl	8018058 <memcpy>
 8009fd0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8009fd2:	2b00      	cmp	r3, #0
 8009fd4:	d059      	beq.n	800a08a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x258>
 8009fd6:	f9bd 305a 	ldrsh.w	r3, [sp, #90]	; 0x5a
 8009fda:	7922      	ldrb	r2, [r4, #4]
 8009fdc:	2a01      	cmp	r2, #1
 8009fde:	d13d      	bne.n	800a05c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x22a>
 8009fe0:	f9bd 003c 	ldrsh.w	r0, [sp, #60]	; 0x3c
 8009fe4:	1ac0      	subs	r0, r0, r3
 8009fe6:	2302      	movs	r3, #2
 8009fe8:	fb90 f0f3 	sdiv	r0, r0, r3
 8009fec:	b200      	sxth	r0, r0
 8009fee:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 8009ff2:	4418      	add	r0, r3
 8009ff4:	7c23      	ldrb	r3, [r4, #16]
 8009ff6:	f8ad 0110 	strh.w	r0, [sp, #272]	; 0x110
 8009ffa:	2b00      	cmp	r3, #0
 8009ffc:	d03a      	beq.n	800a074 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x242>
 8009ffe:	f8bd 2052 	ldrh.w	r2, [sp, #82]	; 0x52
 800a002:	f89d 105e 	ldrb.w	r1, [sp, #94]	; 0x5e
 800a006:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 800a00a:	9500      	str	r5, [sp, #0]
 800a00c:	e9cd 2105 	strd	r2, r1, [sp, #20]
 800a010:	e9cd b703 	strd	fp, r7, [sp, #12]
 800a014:	e9cd 8401 	strd	r8, r4, [sp, #4]
 800a018:	464a      	mov	r2, r9
 800a01a:	2100      	movs	r1, #0
 800a01c:	980a      	ldr	r0, [sp, #40]	; 0x28
 800a01e:	f7ff fca4 	bl	800996a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>
 800a022:	2800      	cmp	r0, #0
 800a024:	d1b6      	bne.n	8009f94 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x162>
 800a026:	f8bd 303a 	ldrh.w	r3, [sp, #58]	; 0x3a
 800a02a:	b2b2      	uxth	r2, r6
 800a02c:	4611      	mov	r1, r2
 800a02e:	4413      	add	r3, r2
 800a030:	f8bd 203e 	ldrh.w	r2, [sp, #62]	; 0x3e
 800a034:	1a52      	subs	r2, r2, r1
 800a036:	7c21      	ldrb	r1, [r4, #16]
 800a038:	b21b      	sxth	r3, r3
 800a03a:	b212      	sxth	r2, r2
 800a03c:	f8ad 303a 	strh.w	r3, [sp, #58]	; 0x3a
 800a040:	f8ad 203e 	strh.w	r2, [sp, #62]	; 0x3e
 800a044:	b109      	cbz	r1, 800a04a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x218>
 800a046:	42b2      	cmp	r2, r6
 800a048:	dba4      	blt.n	8009f94 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x162>
 800a04a:	f8b8 2006 	ldrh.w	r2, [r8, #6]
 800a04e:	f8b8 1002 	ldrh.w	r1, [r8, #2]
 800a052:	440a      	add	r2, r1
 800a054:	b212      	sxth	r2, r2
 800a056:	4293      	cmp	r3, r2
 800a058:	dda4      	ble.n	8009fa4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x172>
 800a05a:	e79b      	b.n	8009f94 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x162>
 800a05c:	2a02      	cmp	r2, #2
 800a05e:	d105      	bne.n	800a06c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x23a>
 800a060:	7be2      	ldrb	r2, [r4, #15]
 800a062:	f8bd 003c 	ldrh.w	r0, [sp, #60]	; 0x3c
 800a066:	1a80      	subs	r0, r0, r2
 800a068:	1ac0      	subs	r0, r0, r3
 800a06a:	e7bf      	b.n	8009fec <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1ba>
 800a06c:	2000      	movs	r0, #0
 800a06e:	e7be      	b.n	8009fee <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1bc>
 800a070:	7be0      	ldrb	r0, [r4, #15]
 800a072:	e7bc      	b.n	8009fee <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1bc>
 800a074:	f647 72ff 	movw	r2, #32767	; 0x7fff
 800a078:	e7c3      	b.n	800a002 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1d0>
 800a07a:	9b08      	ldr	r3, [sp, #32]
 800a07c:	2b00      	cmp	r3, #0
 800a07e:	d0f7      	beq.n	800a070 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x23e>
 800a080:	2258      	movs	r2, #88	; 0x58
 800a082:	4639      	mov	r1, r7
 800a084:	4628      	mov	r0, r5
 800a086:	f00d ffe7 	bl	8018058 <memcpy>
 800a08a:	2300      	movs	r3, #0
 800a08c:	f647 72ff 	movw	r2, #32767	; 0x7fff
 800a090:	6821      	ldr	r1, [r4, #0]
 800a092:	4628      	mov	r0, r5
 800a094:	f7ff fbfc 	bl	8009890 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 800a098:	b203      	sxth	r3, r0
 800a09a:	e79e      	b.n	8009fda <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1a8>

0800a09c <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>:
 800a09c:	b510      	push	{r4, lr}
 800a09e:	2b02      	cmp	r3, #2
 800a0a0:	f9b0 4000 	ldrsh.w	r4, [r0]
 800a0a4:	d00b      	beq.n	800a0be <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x22>
 800a0a6:	2b03      	cmp	r3, #3
 800a0a8:	d00e      	beq.n	800a0c8 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x2c>
 800a0aa:	2b01      	cmp	r3, #1
 800a0ac:	d001      	beq.n	800a0b2 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x16>
 800a0ae:	1860      	adds	r0, r4, r1
 800a0b0:	bd10      	pop	{r4, pc}
 800a0b2:	8880      	ldrh	r0, [r0, #4]
 800a0b4:	4420      	add	r0, r4
 800a0b6:	b200      	sxth	r0, r0
 800a0b8:	1a80      	subs	r0, r0, r2
 800a0ba:	3801      	subs	r0, #1
 800a0bc:	e7f8      	b.n	800a0b0 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x14>
 800a0be:	8880      	ldrh	r0, [r0, #4]
 800a0c0:	4420      	add	r0, r4
 800a0c2:	b200      	sxth	r0, r0
 800a0c4:	1a40      	subs	r0, r0, r1
 800a0c6:	e7f8      	b.n	800a0ba <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x1e>
 800a0c8:	18a0      	adds	r0, r4, r2
 800a0ca:	e7f1      	b.n	800a0b0 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x14>

0800a0cc <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>:
 800a0cc:	b510      	push	{r4, lr}
 800a0ce:	2b02      	cmp	r3, #2
 800a0d0:	f9b0 4002 	ldrsh.w	r4, [r0, #2]
 800a0d4:	d006      	beq.n	800a0e4 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x18>
 800a0d6:	2b03      	cmp	r3, #3
 800a0d8:	d00a      	beq.n	800a0f0 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x24>
 800a0da:	2b01      	cmp	r3, #1
 800a0dc:	bf14      	ite	ne
 800a0de:	18a0      	addne	r0, r4, r2
 800a0e0:	1860      	addeq	r0, r4, r1
 800a0e2:	bd10      	pop	{r4, pc}
 800a0e4:	88c0      	ldrh	r0, [r0, #6]
 800a0e6:	4420      	add	r0, r4
 800a0e8:	b200      	sxth	r0, r0
 800a0ea:	1a80      	subs	r0, r0, r2
 800a0ec:	3801      	subs	r0, #1
 800a0ee:	e7f8      	b.n	800a0e2 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x16>
 800a0f0:	88c0      	ldrh	r0, [r0, #6]
 800a0f2:	4420      	add	r0, r4
 800a0f4:	b200      	sxth	r0, r0
 800a0f6:	1a40      	subs	r0, r0, r1
 800a0f8:	e7f8      	b.n	800a0ec <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x20>
	...

0800a0fc <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE>:
 800a0fc:	4b01      	ldr	r3, [pc, #4]	; (800a104 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE+0x8>)
 800a0fe:	2200      	movs	r2, #0
 800a100:	601a      	str	r2, [r3, #0]
 800a102:	4770      	bx	lr
 800a104:	20012180 	.word	0x20012180

0800a108 <_ZN8touchgfx16TouchCalibration6muldivEllllllRl>:
 800a108:	b5f0      	push	{r4, r5, r6, r7, lr}
 800a10a:	e9dd e405 	ldrd	lr, r4, [sp, #20]
 800a10e:	1e05      	subs	r5, r0, #0
 800a110:	bfba      	itte	lt
 800a112:	f04f 37ff 	movlt.w	r7, #4294967295
 800a116:	426d      	neglt	r5, r5
 800a118:	2701      	movge	r7, #1
 800a11a:	f1be 0f00 	cmp.w	lr, #0
 800a11e:	bfb8      	it	lt
 800a120:	f1ce 0e00 	rsblt	lr, lr, #0
 800a124:	f04f 0601 	mov.w	r6, #1
 800a128:	fa4e f001 	asr.w	r0, lr, r1
 800a12c:	fa06 f101 	lsl.w	r1, r6, r1
 800a130:	f8dd c01c 	ldr.w	ip, [sp, #28]
 800a134:	f101 31ff 	add.w	r1, r1, #4294967295
 800a138:	ea01 010e 	and.w	r1, r1, lr
 800a13c:	bfb8      	it	lt
 800a13e:	427f      	neglt	r7, r7
 800a140:	434d      	muls	r5, r1
 800a142:	2c00      	cmp	r4, #0
 800a144:	f8dc 1000 	ldr.w	r1, [ip]
 800a148:	bfb8      	it	lt
 800a14a:	4264      	neglt	r4, r4
 800a14c:	fb03 1300 	mla	r3, r3, r0, r1
 800a150:	fb95 f1f4 	sdiv	r1, r5, r4
 800a154:	fb04 5511 	mls	r5, r4, r1, r5
 800a158:	441d      	add	r5, r3
 800a15a:	fb95 f3f4 	sdiv	r3, r5, r4
 800a15e:	fb04 5413 	mls	r4, r4, r3, r5
 800a162:	4419      	add	r1, r3
 800a164:	bfb8      	it	lt
 800a166:	427f      	neglt	r7, r7
 800a168:	fb02 1000 	mla	r0, r2, r0, r1
 800a16c:	f8cc 4000 	str.w	r4, [ip]
 800a170:	4378      	muls	r0, r7
 800a172:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800a174 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>:
 800a174:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800a178:	4c24      	ldr	r4, [pc, #144]	; (800a20c <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x98>)
 800a17a:	6807      	ldr	r7, [r0, #0]
 800a17c:	69a3      	ldr	r3, [r4, #24]
 800a17e:	b086      	sub	sp, #24
 800a180:	4605      	mov	r5, r0
 800a182:	b92b      	cbnz	r3, 800a190 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x1c>
 800a184:	6840      	ldr	r0, [r0, #4]
 800a186:	e9c5 7000 	strd	r7, r0, [r5]
 800a18a:	b006      	add	sp, #24
 800a18c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800a190:	68a2      	ldr	r2, [r4, #8]
 800a192:	6820      	ldr	r0, [r4, #0]
 800a194:	ae06      	add	r6, sp, #24
 800a196:	f04f 0802 	mov.w	r8, #2
 800a19a:	fb93 f1f8 	sdiv	r1, r3, r8
 800a19e:	440a      	add	r2, r1
 800a1a0:	f846 2d04 	str.w	r2, [r6, #-4]!
 800a1a4:	69e1      	ldr	r1, [r4, #28]
 800a1a6:	9700      	str	r7, [sp, #0]
 800a1a8:	e9cd 3601 	strd	r3, r6, [sp, #4]
 800a1ac:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800a1ae:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800a1b0:	f7ff ffaa 	bl	800a108 <_ZN8touchgfx16TouchCalibration6muldivEllllllRl>
 800a1b4:	69a3      	ldr	r3, [r4, #24]
 800a1b6:	9301      	str	r3, [sp, #4]
 800a1b8:	686b      	ldr	r3, [r5, #4]
 800a1ba:	9300      	str	r3, [sp, #0]
 800a1bc:	4607      	mov	r7, r0
 800a1be:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800a1c0:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800a1c2:	6a21      	ldr	r1, [r4, #32]
 800a1c4:	9602      	str	r6, [sp, #8]
 800a1c6:	6860      	ldr	r0, [r4, #4]
 800a1c8:	f7ff ff9e 	bl	800a108 <_ZN8touchgfx16TouchCalibration6muldivEllllllRl>
 800a1cc:	6963      	ldr	r3, [r4, #20]
 800a1ce:	69a2      	ldr	r2, [r4, #24]
 800a1d0:	fb92 f8f8 	sdiv	r8, r2, r8
 800a1d4:	4443      	add	r3, r8
 800a1d6:	9305      	str	r3, [sp, #20]
 800a1d8:	682b      	ldr	r3, [r5, #0]
 800a1da:	9300      	str	r3, [sp, #0]
 800a1dc:	e9cd 2601 	strd	r2, r6, [sp, #4]
 800a1e0:	6c63      	ldr	r3, [r4, #68]	; 0x44
 800a1e2:	6b62      	ldr	r2, [r4, #52]	; 0x34
 800a1e4:	6a61      	ldr	r1, [r4, #36]	; 0x24
 800a1e6:	4407      	add	r7, r0
 800a1e8:	68e0      	ldr	r0, [r4, #12]
 800a1ea:	f7ff ff8d 	bl	800a108 <_ZN8touchgfx16TouchCalibration6muldivEllllllRl>
 800a1ee:	69a3      	ldr	r3, [r4, #24]
 800a1f0:	9301      	str	r3, [sp, #4]
 800a1f2:	686b      	ldr	r3, [r5, #4]
 800a1f4:	9300      	str	r3, [sp, #0]
 800a1f6:	4680      	mov	r8, r0
 800a1f8:	9602      	str	r6, [sp, #8]
 800a1fa:	6ca3      	ldr	r3, [r4, #72]	; 0x48
 800a1fc:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800a1fe:	6aa1      	ldr	r1, [r4, #40]	; 0x28
 800a200:	6920      	ldr	r0, [r4, #16]
 800a202:	f7ff ff81 	bl	800a108 <_ZN8touchgfx16TouchCalibration6muldivEllllllRl>
 800a206:	4440      	add	r0, r8
 800a208:	e7bd      	b.n	800a186 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x12>
 800a20a:	bf00      	nop
 800a20c:	20012184 	.word	0x20012184

0800a210 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>:
 800a210:	b510      	push	{r4, lr}
 800a212:	4b07      	ldr	r3, [pc, #28]	; (800a230 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x20>)
 800a214:	781b      	ldrb	r3, [r3, #0]
 800a216:	2b01      	cmp	r3, #1
 800a218:	d108      	bne.n	800a22c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x1c>
 800a21a:	4b06      	ldr	r3, [pc, #24]	; (800a234 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x24>)
 800a21c:	880c      	ldrh	r4, [r1, #0]
 800a21e:	881b      	ldrh	r3, [r3, #0]
 800a220:	f9b0 2000 	ldrsh.w	r2, [r0]
 800a224:	3b01      	subs	r3, #1
 800a226:	1b1b      	subs	r3, r3, r4
 800a228:	8003      	strh	r3, [r0, #0]
 800a22a:	800a      	strh	r2, [r1, #0]
 800a22c:	bd10      	pop	{r4, pc}
 800a22e:	bf00      	nop
 800a230:	20012170 	.word	0x20012170
 800a234:	20012174 	.word	0x20012174

0800a238 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>:
 800a238:	b510      	push	{r4, lr}
 800a23a:	4b0a      	ldr	r3, [pc, #40]	; (800a264 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x2c>)
 800a23c:	781b      	ldrb	r3, [r3, #0]
 800a23e:	2b01      	cmp	r3, #1
 800a240:	d10e      	bne.n	800a260 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x28>
 800a242:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 800a246:	8843      	ldrh	r3, [r0, #2]
 800a248:	f9b0 4000 	ldrsh.w	r4, [r0]
 800a24c:	8044      	strh	r4, [r0, #2]
 800a24e:	18ca      	adds	r2, r1, r3
 800a250:	4b05      	ldr	r3, [pc, #20]	; (800a268 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x30>)
 800a252:	881b      	ldrh	r3, [r3, #0]
 800a254:	1a9b      	subs	r3, r3, r2
 800a256:	8003      	strh	r3, [r0, #0]
 800a258:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800a25c:	80c3      	strh	r3, [r0, #6]
 800a25e:	8081      	strh	r1, [r0, #4]
 800a260:	bd10      	pop	{r4, pc}
 800a262:	bf00      	nop
 800a264:	20012170 	.word	0x20012170
 800a268:	2001216c 	.word	0x2001216c

0800a26c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>:
 800a26c:	b510      	push	{r4, lr}
 800a26e:	4b07      	ldr	r3, [pc, #28]	; (800a28c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x20>)
 800a270:	781b      	ldrb	r3, [r3, #0]
 800a272:	2b01      	cmp	r3, #1
 800a274:	d108      	bne.n	800a288 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x1c>
 800a276:	f9b1 3000 	ldrsh.w	r3, [r1]
 800a27a:	f9b0 4000 	ldrsh.w	r4, [r0]
 800a27e:	8003      	strh	r3, [r0, #0]
 800a280:	8893      	ldrh	r3, [r2, #4]
 800a282:	3b01      	subs	r3, #1
 800a284:	1b1b      	subs	r3, r3, r4
 800a286:	800b      	strh	r3, [r1, #0]
 800a288:	bd10      	pop	{r4, pc}
 800a28a:	bf00      	nop
 800a28c:	20012170 	.word	0x20012170

0800a290 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>:
 800a290:	b513      	push	{r0, r1, r4, lr}
 800a292:	4b08      	ldr	r3, [pc, #32]	; (800a2b4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x24>)
 800a294:	f9b3 2000 	ldrsh.w	r2, [r3]
 800a298:	4b07      	ldr	r3, [pc, #28]	; (800a2b8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x28>)
 800a29a:	f8ad 2004 	strh.w	r2, [sp, #4]
 800a29e:	f9b3 3000 	ldrsh.w	r3, [r3]
 800a2a2:	f8ad 3006 	strh.w	r3, [sp, #6]
 800a2a6:	2400      	movs	r4, #0
 800a2a8:	466a      	mov	r2, sp
 800a2aa:	9400      	str	r4, [sp, #0]
 800a2ac:	f7ff ffde 	bl	800a26c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>
 800a2b0:	b002      	add	sp, #8
 800a2b2:	bd10      	pop	{r4, pc}
 800a2b4:	2001216c 	.word	0x2001216c
 800a2b8:	2001216e 	.word	0x2001216e

0800a2bc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>:
 800a2bc:	b510      	push	{r4, lr}
 800a2be:	4b0a      	ldr	r3, [pc, #40]	; (800a2e8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x2c>)
 800a2c0:	781b      	ldrb	r3, [r3, #0]
 800a2c2:	2b01      	cmp	r3, #1
 800a2c4:	460a      	mov	r2, r1
 800a2c6:	d10d      	bne.n	800a2e4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x28>
 800a2c8:	8881      	ldrh	r1, [r0, #4]
 800a2ca:	8803      	ldrh	r3, [r0, #0]
 800a2cc:	440b      	add	r3, r1
 800a2ce:	4601      	mov	r1, r0
 800a2d0:	3b01      	subs	r3, #1
 800a2d2:	f821 3b02 	strh.w	r3, [r1], #2
 800a2d6:	f7ff ffc9 	bl	800a26c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>
 800a2da:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800a2de:	88c2      	ldrh	r2, [r0, #6]
 800a2e0:	8082      	strh	r2, [r0, #4]
 800a2e2:	80c3      	strh	r3, [r0, #6]
 800a2e4:	bd10      	pop	{r4, pc}
 800a2e6:	bf00      	nop
 800a2e8:	20012170 	.word	0x20012170

0800a2ec <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>:
 800a2ec:	b507      	push	{r0, r1, r2, lr}
 800a2ee:	4b09      	ldr	r3, [pc, #36]	; (800a314 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x28>)
 800a2f0:	f9b3 2000 	ldrsh.w	r2, [r3]
 800a2f4:	4b08      	ldr	r3, [pc, #32]	; (800a318 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x2c>)
 800a2f6:	f8ad 2004 	strh.w	r2, [sp, #4]
 800a2fa:	2100      	movs	r1, #0
 800a2fc:	f9b3 3000 	ldrsh.w	r3, [r3]
 800a300:	9100      	str	r1, [sp, #0]
 800a302:	4669      	mov	r1, sp
 800a304:	f8ad 3006 	strh.w	r3, [sp, #6]
 800a308:	f7ff ffd8 	bl	800a2bc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 800a30c:	b003      	add	sp, #12
 800a30e:	f85d fb04 	ldr.w	pc, [sp], #4
 800a312:	bf00      	nop
 800a314:	2001216c 	.word	0x2001216c
 800a318:	2001216e 	.word	0x2001216e

0800a31c <_ZN8touchgfx11Application13requestRedrawEv>:
 800a31c:	4b06      	ldr	r3, [pc, #24]	; (800a338 <_ZN8touchgfx11Application13requestRedrawEv+0x1c>)
 800a31e:	f9b3 2000 	ldrsh.w	r2, [r3]
 800a322:	4b06      	ldr	r3, [pc, #24]	; (800a33c <_ZN8touchgfx11Application13requestRedrawEv+0x20>)
 800a324:	f8a0 2130 	strh.w	r2, [r0, #304]	; 0x130
 800a328:	f9b3 3000 	ldrsh.w	r3, [r3]
 800a32c:	f8a0 3132 	strh.w	r3, [r0, #306]	; 0x132
 800a330:	2100      	movs	r1, #0
 800a332:	f8c0 112c 	str.w	r1, [r0, #300]	; 0x12c
 800a336:	4770      	bx	lr
 800a338:	2001216c 	.word	0x2001216c
 800a33c:	2001216e 	.word	0x2001216e

0800a340 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE>:
 800a340:	4b03      	ldr	r3, [pc, #12]	; (800a350 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0x10>)
 800a342:	6818      	ldr	r0, [r3, #0]
 800a344:	b110      	cbz	r0, 800a34c <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0xc>
 800a346:	6803      	ldr	r3, [r0, #0]
 800a348:	699b      	ldr	r3, [r3, #24]
 800a34a:	4718      	bx	r3
 800a34c:	4770      	bx	lr
 800a34e:	bf00      	nop
 800a350:	200121d4 	.word	0x200121d4

0800a354 <_ZN8touchgfx11Application29handlePendingScreenTransitionEv>:
 800a354:	4770      	bx	lr
	...

0800a358 <_ZN8touchgfx11Application4drawEv>:
 800a358:	b507      	push	{r0, r1, r2, lr}
 800a35a:	4b09      	ldr	r3, [pc, #36]	; (800a380 <_ZN8touchgfx11Application4drawEv+0x28>)
 800a35c:	f9b3 2000 	ldrsh.w	r2, [r3]
 800a360:	4b08      	ldr	r3, [pc, #32]	; (800a384 <_ZN8touchgfx11Application4drawEv+0x2c>)
 800a362:	f8ad 2004 	strh.w	r2, [sp, #4]
 800a366:	f9b3 3000 	ldrsh.w	r3, [r3]
 800a36a:	f8ad 3006 	strh.w	r3, [sp, #6]
 800a36e:	6803      	ldr	r3, [r0, #0]
 800a370:	2100      	movs	r1, #0
 800a372:	9100      	str	r1, [sp, #0]
 800a374:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800a376:	4669      	mov	r1, sp
 800a378:	4798      	blx	r3
 800a37a:	b003      	add	sp, #12
 800a37c:	f85d fb04 	ldr.w	pc, [sp], #4
 800a380:	2001216c 	.word	0x2001216c
 800a384:	2001216e 	.word	0x2001216e

0800a388 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE>:
 800a388:	4b03      	ldr	r3, [pc, #12]	; (800a398 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0x10>)
 800a38a:	6818      	ldr	r0, [r3, #0]
 800a38c:	b110      	cbz	r0, 800a394 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0xc>
 800a38e:	6803      	ldr	r3, [r0, #0]
 800a390:	69db      	ldr	r3, [r3, #28]
 800a392:	4718      	bx	r3
 800a394:	4770      	bx	lr
 800a396:	bf00      	nop
 800a398:	200121d4 	.word	0x200121d4

0800a39c <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE>:
 800a39c:	4b03      	ldr	r3, [pc, #12]	; (800a3ac <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0x10>)
 800a39e:	6818      	ldr	r0, [r3, #0]
 800a3a0:	b110      	cbz	r0, 800a3a8 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0xc>
 800a3a2:	6803      	ldr	r3, [r0, #0]
 800a3a4:	6a1b      	ldr	r3, [r3, #32]
 800a3a6:	4718      	bx	r3
 800a3a8:	4770      	bx	lr
 800a3aa:	bf00      	nop
 800a3ac:	200121d4 	.word	0x200121d4

0800a3b0 <_ZN8touchgfx11Application14handleKeyEventEh>:
 800a3b0:	4b03      	ldr	r3, [pc, #12]	; (800a3c0 <_ZN8touchgfx11Application14handleKeyEventEh+0x10>)
 800a3b2:	6818      	ldr	r0, [r3, #0]
 800a3b4:	b110      	cbz	r0, 800a3bc <_ZN8touchgfx11Application14handleKeyEventEh+0xc>
 800a3b6:	6803      	ldr	r3, [r0, #0]
 800a3b8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800a3ba:	4718      	bx	r3
 800a3bc:	4770      	bx	lr
 800a3be:	bf00      	nop
 800a3c0:	200121d4 	.word	0x200121d4

0800a3c4 <_ZN8touchgfx11Application15handleTickEventEv>:
 800a3c4:	b570      	push	{r4, r5, r6, lr}
 800a3c6:	4d34      	ldr	r5, [pc, #208]	; (800a498 <_ZN8touchgfx11Application15handleTickEventEv+0xd4>)
 800a3c8:	4604      	mov	r4, r0
 800a3ca:	6828      	ldr	r0, [r5, #0]
 800a3cc:	b140      	cbz	r0, 800a3e0 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 800a3ce:	7a03      	ldrb	r3, [r0, #8]
 800a3d0:	b933      	cbnz	r3, 800a3e0 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 800a3d2:	f884 3135 	strb.w	r3, [r4, #309]	; 0x135
 800a3d6:	6803      	ldr	r3, [r0, #0]
 800a3d8:	689b      	ldr	r3, [r3, #8]
 800a3da:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800a3de:	4718      	bx	r3
 800a3e0:	f894 3135 	ldrb.w	r3, [r4, #309]	; 0x135
 800a3e4:	b97b      	cbnz	r3, 800a406 <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 800a3e6:	b170      	cbz	r0, 800a406 <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 800a3e8:	7a03      	ldrb	r3, [r0, #8]
 800a3ea:	b163      	cbz	r3, 800a406 <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 800a3ec:	4b2b      	ldr	r3, [pc, #172]	; (800a49c <_ZN8touchgfx11Application15handleTickEventEv+0xd8>)
 800a3ee:	6818      	ldr	r0, [r3, #0]
 800a3f0:	b110      	cbz	r0, 800a3f8 <_ZN8touchgfx11Application15handleTickEventEv+0x34>
 800a3f2:	6803      	ldr	r3, [r0, #0]
 800a3f4:	691b      	ldr	r3, [r3, #16]
 800a3f6:	4798      	blx	r3
 800a3f8:	6828      	ldr	r0, [r5, #0]
 800a3fa:	6803      	ldr	r3, [r0, #0]
 800a3fc:	68db      	ldr	r3, [r3, #12]
 800a3fe:	4798      	blx	r3
 800a400:	2301      	movs	r3, #1
 800a402:	f884 3135 	strb.w	r3, [r4, #309]	; 0x135
 800a406:	2500      	movs	r5, #0
 800a408:	f8b4 0084 	ldrh.w	r0, [r4, #132]	; 0x84
 800a40c:	42a8      	cmp	r0, r5
 800a40e:	dd0c      	ble.n	800a42a <_ZN8touchgfx11Application15handleTickEventEv+0x66>
 800a410:	1963      	adds	r3, r4, r5
 800a412:	f893 2088 	ldrb.w	r2, [r3, #136]	; 0x88
 800a416:	b132      	cbz	r2, 800a426 <_ZN8touchgfx11Application15handleTickEventEv+0x62>
 800a418:	eb05 0245 	add.w	r2, r5, r5, lsl #1
 800a41c:	4413      	add	r3, r2
 800a41e:	6858      	ldr	r0, [r3, #4]
 800a420:	6803      	ldr	r3, [r0, #0]
 800a422:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 800a424:	4798      	blx	r3
 800a426:	3501      	adds	r5, #1
 800a428:	e7ee      	b.n	800a408 <_ZN8touchgfx11Application15handleTickEventEv+0x44>
 800a42a:	2300      	movs	r3, #0
 800a42c:	461a      	mov	r2, r3
 800a42e:	4298      	cmp	r0, r3
 800a430:	d114      	bne.n	800a45c <_ZN8touchgfx11Application15handleTickEventEv+0x98>
 800a432:	1d25      	adds	r5, r4, #4
 800a434:	f8b4 1084 	ldrh.w	r1, [r4, #132]	; 0x84
 800a438:	1e48      	subs	r0, r1, #1
 800a43a:	b280      	uxth	r0, r0
 800a43c:	4291      	cmp	r1, r2
 800a43e:	dd24      	ble.n	800a48a <_ZN8touchgfx11Application15handleTickEventEv+0xc6>
 800a440:	4288      	cmp	r0, r1
 800a442:	d2fb      	bcs.n	800a43c <_ZN8touchgfx11Application15handleTickEventEv+0x78>
 800a444:	eb04 0380 	add.w	r3, r4, r0, lsl #2
 800a448:	3304      	adds	r3, #4
 800a44a:	eb05 0181 	add.w	r1, r5, r1, lsl #2
 800a44e:	428b      	cmp	r3, r1
 800a450:	d018      	beq.n	800a484 <_ZN8touchgfx11Application15handleTickEventEv+0xc0>
 800a452:	f853 6f04 	ldr.w	r6, [r3, #4]!
 800a456:	f843 6c04 	str.w	r6, [r3, #-4]
 800a45a:	e7f8      	b.n	800a44e <_ZN8touchgfx11Application15handleTickEventEv+0x8a>
 800a45c:	18e1      	adds	r1, r4, r3
 800a45e:	f891 5088 	ldrb.w	r5, [r1, #136]	; 0x88
 800a462:	b16d      	cbz	r5, 800a480 <_ZN8touchgfx11Application15handleTickEventEv+0xbc>
 800a464:	429a      	cmp	r2, r3
 800a466:	d00a      	beq.n	800a47e <_ZN8touchgfx11Application15handleTickEventEv+0xba>
 800a468:	eb03 0643 	add.w	r6, r3, r3, lsl #1
 800a46c:	4431      	add	r1, r6
 800a46e:	684e      	ldr	r6, [r1, #4]
 800a470:	b291      	uxth	r1, r2
 800a472:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 800a476:	604e      	str	r6, [r1, #4]
 800a478:	18a1      	adds	r1, r4, r2
 800a47a:	f881 5088 	strb.w	r5, [r1, #136]	; 0x88
 800a47e:	3201      	adds	r2, #1
 800a480:	3301      	adds	r3, #1
 800a482:	e7d4      	b.n	800a42e <_ZN8touchgfx11Application15handleTickEventEv+0x6a>
 800a484:	f8a4 0084 	strh.w	r0, [r4, #132]	; 0x84
 800a488:	e7d4      	b.n	800a434 <_ZN8touchgfx11Application15handleTickEventEv+0x70>
 800a48a:	4b04      	ldr	r3, [pc, #16]	; (800a49c <_ZN8touchgfx11Application15handleTickEventEv+0xd8>)
 800a48c:	6818      	ldr	r0, [r3, #0]
 800a48e:	b110      	cbz	r0, 800a496 <_ZN8touchgfx11Application15handleTickEventEv+0xd2>
 800a490:	6803      	ldr	r3, [r0, #0]
 800a492:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800a494:	e7a1      	b.n	800a3da <_ZN8touchgfx11Application15handleTickEventEv+0x16>
 800a496:	bd70      	pop	{r4, r5, r6, pc}
 800a498:	200121d8 	.word	0x200121d8
 800a49c:	200121d4 	.word	0x200121d4

0800a4a0 <_ZN8touchgfx11ApplicationD1Ev>:
 800a4a0:	4770      	bx	lr

0800a4a2 <_ZN8touchgfx11ApplicationD0Ev>:
 800a4a2:	b510      	push	{r4, lr}
 800a4a4:	f44f 719c 	mov.w	r1, #312	; 0x138
 800a4a8:	4604      	mov	r4, r0
 800a4aa:	f00d fd2b 	bl	8017f04 <_ZdlPvj>
 800a4ae:	4620      	mov	r0, r4
 800a4b0:	bd10      	pop	{r4, pc}
	...

0800a4b4 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE>:
 800a4b4:	b570      	push	{r4, r5, r6, lr}
 800a4b6:	4606      	mov	r6, r0
 800a4b8:	460c      	mov	r4, r1
 800a4ba:	b929      	cbnz	r1, 800a4c8 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x14>
 800a4bc:	4b0c      	ldr	r3, [pc, #48]	; (800a4f0 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x3c>)
 800a4be:	4a0d      	ldr	r2, [pc, #52]	; (800a4f4 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x40>)
 800a4c0:	480d      	ldr	r0, [pc, #52]	; (800a4f8 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x44>)
 800a4c2:	2166      	movs	r1, #102	; 0x66
 800a4c4:	f00d fd4a 	bl	8017f5c <__assert_func>
 800a4c8:	4d0c      	ldr	r5, [pc, #48]	; (800a4fc <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x48>)
 800a4ca:	2300      	movs	r3, #0
 800a4cc:	f8a0 3084 	strh.w	r3, [r0, #132]	; 0x84
 800a4d0:	6828      	ldr	r0, [r5, #0]
 800a4d2:	b110      	cbz	r0, 800a4da <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x26>
 800a4d4:	6803      	ldr	r3, [r0, #0]
 800a4d6:	695b      	ldr	r3, [r3, #20]
 800a4d8:	4798      	blx	r3
 800a4da:	602c      	str	r4, [r5, #0]
 800a4dc:	6823      	ldr	r3, [r4, #0]
 800a4de:	4620      	mov	r0, r4
 800a4e0:	68db      	ldr	r3, [r3, #12]
 800a4e2:	4798      	blx	r3
 800a4e4:	6833      	ldr	r3, [r6, #0]
 800a4e6:	4630      	mov	r0, r6
 800a4e8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800a4ea:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800a4ee:	4718      	bx	r3
 800a4f0:	0801af38 	.word	0x0801af38
 800a4f4:	0801b008 	.word	0x0801b008
 800a4f8:	0801af42 	.word	0x0801af42
 800a4fc:	200121d4 	.word	0x200121d4

0800a500 <_ZNK8touchgfx4Rect9intersectERKS0_>:
 800a500:	b510      	push	{r4, lr}
 800a502:	f9b1 4000 	ldrsh.w	r4, [r1]
 800a506:	888a      	ldrh	r2, [r1, #4]
 800a508:	f9b0 3000 	ldrsh.w	r3, [r0]
 800a50c:	4422      	add	r2, r4
 800a50e:	b212      	sxth	r2, r2
 800a510:	4293      	cmp	r3, r2
 800a512:	da15      	bge.n	800a540 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 800a514:	8882      	ldrh	r2, [r0, #4]
 800a516:	4413      	add	r3, r2
 800a518:	b21b      	sxth	r3, r3
 800a51a:	429c      	cmp	r4, r3
 800a51c:	da10      	bge.n	800a540 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 800a51e:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 800a522:	88c9      	ldrh	r1, [r1, #6]
 800a524:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 800a528:	4419      	add	r1, r3
 800a52a:	b209      	sxth	r1, r1
 800a52c:	428a      	cmp	r2, r1
 800a52e:	da07      	bge.n	800a540 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 800a530:	88c0      	ldrh	r0, [r0, #6]
 800a532:	4410      	add	r0, r2
 800a534:	b200      	sxth	r0, r0
 800a536:	4283      	cmp	r3, r0
 800a538:	bfac      	ite	ge
 800a53a:	2000      	movge	r0, #0
 800a53c:	2001      	movlt	r0, #1
 800a53e:	bd10      	pop	{r4, pc}
 800a540:	2000      	movs	r0, #0
 800a542:	e7fc      	b.n	800a53e <_ZNK8touchgfx4Rect9intersectERKS0_+0x3e>

0800a544 <_ZNK8touchgfx4Rect8includesERKS0_>:
 800a544:	b570      	push	{r4, r5, r6, lr}
 800a546:	f9b1 4000 	ldrsh.w	r4, [r1]
 800a54a:	f9b0 5000 	ldrsh.w	r5, [r0]
 800a54e:	42ac      	cmp	r4, r5
 800a550:	db18      	blt.n	800a584 <_ZNK8touchgfx4Rect8includesERKS0_+0x40>
 800a552:	f9b1 2002 	ldrsh.w	r2, [r1, #2]
 800a556:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 800a55a:	429a      	cmp	r2, r3
 800a55c:	db12      	blt.n	800a584 <_ZNK8touchgfx4Rect8includesERKS0_+0x40>
 800a55e:	8886      	ldrh	r6, [r0, #4]
 800a560:	4435      	add	r5, r6
 800a562:	888e      	ldrh	r6, [r1, #4]
 800a564:	4434      	add	r4, r6
 800a566:	b22d      	sxth	r5, r5
 800a568:	b224      	sxth	r4, r4
 800a56a:	42a5      	cmp	r5, r4
 800a56c:	db0a      	blt.n	800a584 <_ZNK8touchgfx4Rect8includesERKS0_+0x40>
 800a56e:	88c0      	ldrh	r0, [r0, #6]
 800a570:	4418      	add	r0, r3
 800a572:	88cb      	ldrh	r3, [r1, #6]
 800a574:	441a      	add	r2, r3
 800a576:	b200      	sxth	r0, r0
 800a578:	b212      	sxth	r2, r2
 800a57a:	4290      	cmp	r0, r2
 800a57c:	bfb4      	ite	lt
 800a57e:	2000      	movlt	r0, #0
 800a580:	2001      	movge	r0, #1
 800a582:	bd70      	pop	{r4, r5, r6, pc}
 800a584:	2000      	movs	r0, #0
 800a586:	e7fc      	b.n	800a582 <_ZNK8touchgfx4Rect8includesERKS0_+0x3e>

0800a588 <_ZN8touchgfx4Rect11expandToFitERKS0_>:
 800a588:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800a58a:	4604      	mov	r4, r0
 800a58c:	4608      	mov	r0, r1
 800a58e:	460d      	mov	r5, r1
 800a590:	f7fd fa53 	bl	8007a3a <_ZNK8touchgfx4Rect7isEmptyEv>
 800a594:	b978      	cbnz	r0, 800a5b6 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
 800a596:	4620      	mov	r0, r4
 800a598:	f7fd fa4f 	bl	8007a3a <_ZNK8touchgfx4Rect7isEmptyEv>
 800a59c:	f9b5 6000 	ldrsh.w	r6, [r5]
 800a5a0:	b150      	cbz	r0, 800a5b8 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x30>
 800a5a2:	8026      	strh	r6, [r4, #0]
 800a5a4:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 800a5a8:	8063      	strh	r3, [r4, #2]
 800a5aa:	f9b5 3004 	ldrsh.w	r3, [r5, #4]
 800a5ae:	80a3      	strh	r3, [r4, #4]
 800a5b0:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 800a5b4:	80e3      	strh	r3, [r4, #6]
 800a5b6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800a5b8:	f9b4 1000 	ldrsh.w	r1, [r4]
 800a5bc:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 800a5c0:	f9b4 3002 	ldrsh.w	r3, [r4, #2]
 800a5c4:	f8b5 c004 	ldrh.w	ip, [r5, #4]
 800a5c8:	88ed      	ldrh	r5, [r5, #6]
 800a5ca:	42b1      	cmp	r1, r6
 800a5cc:	460f      	mov	r7, r1
 800a5ce:	bfa8      	it	ge
 800a5d0:	4637      	movge	r7, r6
 800a5d2:	4293      	cmp	r3, r2
 800a5d4:	4618      	mov	r0, r3
 800a5d6:	4466      	add	r6, ip
 800a5d8:	bfa8      	it	ge
 800a5da:	4610      	movge	r0, r2
 800a5dc:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 800a5e0:	8027      	strh	r7, [r4, #0]
 800a5e2:	442a      	add	r2, r5
 800a5e4:	88e5      	ldrh	r5, [r4, #6]
 800a5e6:	8060      	strh	r0, [r4, #2]
 800a5e8:	4461      	add	r1, ip
 800a5ea:	442b      	add	r3, r5
 800a5ec:	b236      	sxth	r6, r6
 800a5ee:	b209      	sxth	r1, r1
 800a5f0:	b212      	sxth	r2, r2
 800a5f2:	b21b      	sxth	r3, r3
 800a5f4:	428e      	cmp	r6, r1
 800a5f6:	bfac      	ite	ge
 800a5f8:	ebc7 0106 	rsbge	r1, r7, r6
 800a5fc:	ebc7 0101 	rsblt	r1, r7, r1
 800a600:	429a      	cmp	r2, r3
 800a602:	bfac      	ite	ge
 800a604:	ebc0 0202 	rsbge	r2, r0, r2
 800a608:	ebc0 0203 	rsblt	r2, r0, r3
 800a60c:	80a1      	strh	r1, [r4, #4]
 800a60e:	80e2      	strh	r2, [r4, #6]
 800a610:	e7d1      	b.n	800a5b6 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
	...

0800a614 <_ZN8touchgfx11Application11getInstanceEv>:
 800a614:	4b01      	ldr	r3, [pc, #4]	; (800a61c <_ZN8touchgfx11Application11getInstanceEv+0x8>)
 800a616:	6818      	ldr	r0, [r3, #0]
 800a618:	4770      	bx	lr
 800a61a:	bf00      	nop
 800a61c:	200121e4 	.word	0x200121e4

0800a620 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>:
 800a620:	2300      	movs	r3, #0
 800a622:	f8a0 3084 	strh.w	r3, [r0, #132]	; 0x84
 800a626:	f100 0288 	add.w	r2, r0, #136	; 0x88
 800a62a:	30a8      	adds	r0, #168	; 0xa8
 800a62c:	f802 3b01 	strb.w	r3, [r2], #1
 800a630:	4282      	cmp	r2, r0
 800a632:	d1fb      	bne.n	800a62c <_ZN8touchgfx11Application20clearAllTimerWidgetsEv+0xc>
 800a634:	4770      	bx	lr

0800a636 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>:
 800a636:	4603      	mov	r3, r0
 800a638:	f100 0140 	add.w	r1, r0, #64	; 0x40
 800a63c:	2200      	movs	r2, #0
 800a63e:	801a      	strh	r2, [r3, #0]
 800a640:	805a      	strh	r2, [r3, #2]
 800a642:	809a      	strh	r2, [r3, #4]
 800a644:	80da      	strh	r2, [r3, #6]
 800a646:	3308      	adds	r3, #8
 800a648:	428b      	cmp	r3, r1
 800a64a:	d1f8      	bne.n	800a63e <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev+0x8>
 800a64c:	f8a0 2040 	strh.w	r2, [r0, #64]	; 0x40
 800a650:	4770      	bx	lr
	...

0800a654 <_ZN8touchgfx11ApplicationC1Ev>:
 800a654:	b570      	push	{r4, r5, r6, lr}
 800a656:	4b1a      	ldr	r3, [pc, #104]	; (800a6c0 <_ZN8touchgfx11ApplicationC1Ev+0x6c>)
 800a658:	6003      	str	r3, [r0, #0]
 800a65a:	2500      	movs	r5, #0
 800a65c:	4604      	mov	r4, r0
 800a65e:	f8a0 5084 	strh.w	r5, [r0, #132]	; 0x84
 800a662:	30a8      	adds	r0, #168	; 0xa8
 800a664:	f7ff ffe7 	bl	800a636 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 800a668:	f104 00ea 	add.w	r0, r4, #234	; 0xea
 800a66c:	f7ff ffe3 	bl	800a636 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 800a670:	f8a4 512c 	strh.w	r5, [r4, #300]	; 0x12c
 800a674:	f8a4 512e 	strh.w	r5, [r4, #302]	; 0x12e
 800a678:	f8a4 5130 	strh.w	r5, [r4, #304]	; 0x130
 800a67c:	f8a4 5132 	strh.w	r5, [r4, #306]	; 0x132
 800a680:	f884 5134 	strb.w	r5, [r4, #308]	; 0x134
 800a684:	f884 5135 	strb.w	r5, [r4, #309]	; 0x135
 800a688:	490e      	ldr	r1, [pc, #56]	; (800a6c4 <_ZN8touchgfx11ApplicationC1Ev+0x70>)
 800a68a:	480f      	ldr	r0, [pc, #60]	; (800a6c8 <_ZN8touchgfx11ApplicationC1Ev+0x74>)
 800a68c:	4e0f      	ldr	r6, [pc, #60]	; (800a6cc <_ZN8touchgfx11ApplicationC1Ev+0x78>)
 800a68e:	f00d fb09 	bl	8017ca4 <CRC_Lock>
 800a692:	4b0f      	ldr	r3, [pc, #60]	; (800a6d0 <_ZN8touchgfx11ApplicationC1Ev+0x7c>)
 800a694:	b158      	cbz	r0, 800a6ae <_ZN8touchgfx11ApplicationC1Ev+0x5a>
 800a696:	801d      	strh	r5, [r3, #0]
 800a698:	4a0e      	ldr	r2, [pc, #56]	; (800a6d4 <_ZN8touchgfx11ApplicationC1Ev+0x80>)
 800a69a:	2300      	movs	r3, #0
 800a69c:	6013      	str	r3, [r2, #0]
 800a69e:	4a0e      	ldr	r2, [pc, #56]	; (800a6d8 <_ZN8touchgfx11ApplicationC1Ev+0x84>)
 800a6a0:	6033      	str	r3, [r6, #0]
 800a6a2:	4620      	mov	r0, r4
 800a6a4:	6013      	str	r3, [r2, #0]
 800a6a6:	f7ff ffbb 	bl	800a620 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
 800a6aa:	4620      	mov	r0, r4
 800a6ac:	bd70      	pop	{r4, r5, r6, pc}
 800a6ae:	f44f 6280 	mov.w	r2, #1024	; 0x400
 800a6b2:	2002      	movs	r0, #2
 800a6b4:	801a      	strh	r2, [r3, #0]
 800a6b6:	6030      	str	r0, [r6, #0]
 800a6b8:	f000 fff0 	bl	800b69c <_ZN8touchgfx6Screen4drawEv>
 800a6bc:	e7ec      	b.n	800a698 <_ZN8touchgfx11ApplicationC1Ev+0x44>
 800a6be:	bf00      	nop
 800a6c0:	0801afcc 	.word	0x0801afcc
 800a6c4:	b5e8b5cd 	.word	0xb5e8b5cd
 800a6c8:	f407a5c2 	.word	0xf407a5c2
 800a6cc:	200121d4 	.word	0x200121d4
 800a6d0:	20000084 	.word	0x20000084
 800a6d4:	200121e4 	.word	0x200121e4
 800a6d8:	200121d8 	.word	0x200121d8

0800a6dc <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>:
 800a6dc:	2300      	movs	r3, #0
 800a6de:	8003      	strh	r3, [r0, #0]
 800a6e0:	8043      	strh	r3, [r0, #2]
 800a6e2:	8083      	strh	r3, [r0, #4]
 800a6e4:	80c3      	strh	r3, [r0, #6]
 800a6e6:	f8b1 3040 	ldrh.w	r3, [r1, #64]	; 0x40
 800a6ea:	4293      	cmp	r3, r2
 800a6ec:	b530      	push	{r4, r5, lr}
 800a6ee:	d912      	bls.n	800a716 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x3a>
 800a6f0:	eb01 04c2 	add.w	r4, r1, r2, lsl #3
 800a6f4:	3b01      	subs	r3, #1
 800a6f6:	6825      	ldr	r5, [r4, #0]
 800a6f8:	6005      	str	r5, [r0, #0]
 800a6fa:	b29b      	uxth	r3, r3
 800a6fc:	6865      	ldr	r5, [r4, #4]
 800a6fe:	6045      	str	r5, [r0, #4]
 800a700:	4293      	cmp	r3, r2
 800a702:	f8a1 3040 	strh.w	r3, [r1, #64]	; 0x40
 800a706:	d906      	bls.n	800a716 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x3a>
 800a708:	eb01 03c3 	add.w	r3, r1, r3, lsl #3
 800a70c:	681d      	ldr	r5, [r3, #0]
 800a70e:	f841 5032 	str.w	r5, [r1, r2, lsl #3]
 800a712:	685d      	ldr	r5, [r3, #4]
 800a714:	6065      	str	r5, [r4, #4]
 800a716:	bd30      	pop	{r4, r5, pc}

0800a718 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_>:
 800a718:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800a71a:	466b      	mov	r3, sp
 800a71c:	e883 0006 	stmia.w	r3, {r1, r2}
 800a720:	f8b0 2040 	ldrh.w	r2, [r0, #64]	; 0x40
 800a724:	2a07      	cmp	r2, #7
 800a726:	4604      	mov	r4, r0
 800a728:	d906      	bls.n	800a738 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_+0x20>
 800a72a:	4b09      	ldr	r3, [pc, #36]	; (800a750 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_+0x38>)
 800a72c:	4a09      	ldr	r2, [pc, #36]	; (800a754 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_+0x3c>)
 800a72e:	480a      	ldr	r0, [pc, #40]	; (800a758 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_+0x40>)
 800a730:	f240 118f 	movw	r1, #399	; 0x18f
 800a734:	f00d fc12 	bl	8017f5c <__assert_func>
 800a738:	1c51      	adds	r1, r2, #1
 800a73a:	f8a0 1040 	strh.w	r1, [r0, #64]	; 0x40
 800a73e:	eb00 05c2 	add.w	r5, r0, r2, lsl #3
 800a742:	cb03      	ldmia	r3!, {r0, r1}
 800a744:	f844 0032 	str.w	r0, [r4, r2, lsl #3]
 800a748:	6069      	str	r1, [r5, #4]
 800a74a:	b003      	add	sp, #12
 800a74c:	bd30      	pop	{r4, r5, pc}
 800a74e:	bf00      	nop
 800a750:	0801af6c 	.word	0x0801af6c
 800a754:	0801b04c 	.word	0x0801b04c
 800a758:	0801af9b 	.word	0x0801af9b

0800a75c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>:
 800a75c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800a760:	b089      	sub	sp, #36	; 0x24
 800a762:	466c      	mov	r4, sp
 800a764:	4606      	mov	r6, r0
 800a766:	4620      	mov	r0, r4
 800a768:	e884 0006 	stmia.w	r4, {r1, r2}
 800a76c:	f7fd f965 	bl	8007a3a <_ZNK8touchgfx4Rect7isEmptyEv>
 800a770:	bbb0      	cbnz	r0, 800a7e0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x84>
 800a772:	f8b6 50e8 	ldrh.w	r5, [r6, #232]	; 0xe8
 800a776:	b1fd      	cbz	r5, 800a7b8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5c>
 800a778:	3d01      	subs	r5, #1
 800a77a:	af04      	add	r7, sp, #16
 800a77c:	f04f 090a 	mov.w	r9, #10
 800a780:	eb06 02c5 	add.w	r2, r6, r5, lsl #3
 800a784:	ab02      	add	r3, sp, #8
 800a786:	f852 0fa8 	ldr.w	r0, [r2, #168]!
 800a78a:	6851      	ldr	r1, [r2, #4]
 800a78c:	c303      	stmia	r3!, {r0, r1}
 800a78e:	4621      	mov	r1, r4
 800a790:	a802      	add	r0, sp, #8
 800a792:	fa1f f885 	uxth.w	r8, r5
 800a796:	f7ff fed5 	bl	800a544 <_ZNK8touchgfx4Rect8includesERKS0_>
 800a79a:	bb08      	cbnz	r0, 800a7e0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x84>
 800a79c:	a902      	add	r1, sp, #8
 800a79e:	4620      	mov	r0, r4
 800a7a0:	f7ff fed0 	bl	800a544 <_ZNK8touchgfx4Rect8includesERKS0_>
 800a7a4:	b1f8      	cbz	r0, 800a7e6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x8a>
 800a7a6:	4642      	mov	r2, r8
 800a7a8:	f106 01a8 	add.w	r1, r6, #168	; 0xa8
 800a7ac:	a806      	add	r0, sp, #24
 800a7ae:	f7ff ff95 	bl	800a6dc <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800a7b2:	f115 35ff 	adds.w	r5, r5, #4294967295
 800a7b6:	d2e3      	bcs.n	800a780 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x24>
 800a7b8:	f8b6 30e8 	ldrh.w	r3, [r6, #232]	; 0xe8
 800a7bc:	2b08      	cmp	r3, #8
 800a7be:	f106 05a8 	add.w	r5, r6, #168	; 0xa8
 800a7c2:	d108      	bne.n	800a7d6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x7a>
 800a7c4:	4629      	mov	r1, r5
 800a7c6:	a806      	add	r0, sp, #24
 800a7c8:	2207      	movs	r2, #7
 800a7ca:	f7ff ff87 	bl	800a6dc <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800a7ce:	a906      	add	r1, sp, #24
 800a7d0:	4620      	mov	r0, r4
 800a7d2:	f7ff fed9 	bl	800a588 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 800a7d6:	e894 0006 	ldmia.w	r4, {r1, r2}
 800a7da:	4628      	mov	r0, r5
 800a7dc:	f7ff ff9c 	bl	800a718 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_>
 800a7e0:	b009      	add	sp, #36	; 0x24
 800a7e2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800a7e6:	4621      	mov	r1, r4
 800a7e8:	a802      	add	r0, sp, #8
 800a7ea:	f7ff fe89 	bl	800a500 <_ZNK8touchgfx4Rect9intersectERKS0_>
 800a7ee:	b150      	cbz	r0, 800a806 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xaa>
 800a7f0:	f106 01a8 	add.w	r1, r6, #168	; 0xa8
 800a7f4:	a806      	add	r0, sp, #24
 800a7f6:	4642      	mov	r2, r8
 800a7f8:	f7ff ff70 	bl	800a6dc <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800a7fc:	a902      	add	r1, sp, #8
 800a7fe:	4620      	mov	r0, r4
 800a800:	f7ff fec2 	bl	800a588 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 800a804:	e7d5      	b.n	800a7b2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x56>
 800a806:	e894 0003 	ldmia.w	r4, {r0, r1}
 800a80a:	e887 0003 	stmia.w	r7, {r0, r1}
 800a80e:	a902      	add	r1, sp, #8
 800a810:	4638      	mov	r0, r7
 800a812:	f7ff feb9 	bl	800a588 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 800a816:	f8bd 2016 	ldrh.w	r2, [sp, #22]
 800a81a:	f8bd 3014 	ldrh.w	r3, [sp, #20]
 800a81e:	f8bd 100c 	ldrh.w	r1, [sp, #12]
 800a822:	f8bd 0006 	ldrh.w	r0, [sp, #6]
 800a826:	fb13 f302 	smulbb	r3, r3, r2
 800a82a:	f8bd 200e 	ldrh.w	r2, [sp, #14]
 800a82e:	fb11 f102 	smulbb	r1, r1, r2
 800a832:	f8bd 2004 	ldrh.w	r2, [sp, #4]
 800a836:	fb12 1100 	smlabb	r1, r2, r0, r1
 800a83a:	220b      	movs	r2, #11
 800a83c:	fb09 f303 	mul.w	r3, r9, r3
 800a840:	434a      	muls	r2, r1
 800a842:	4293      	cmp	r3, r2
 800a844:	dab5      	bge.n	800a7b2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x56>
 800a846:	f106 01a8 	add.w	r1, r6, #168	; 0xa8
 800a84a:	a806      	add	r0, sp, #24
 800a84c:	4642      	mov	r2, r8
 800a84e:	f7ff ff45 	bl	800a6dc <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800a852:	e897 0003 	ldmia.w	r7, {r0, r1}
 800a856:	e884 0003 	stmia.w	r4, {r0, r1}
 800a85a:	e7aa      	b.n	800a7b2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x56>

0800a85c <_ZN8touchgfx11Application4drawERNS_4RectE>:
 800a85c:	b530      	push	{r4, r5, lr}
 800a85e:	4b1d      	ldr	r3, [pc, #116]	; (800a8d4 <_ZN8touchgfx11Application4drawERNS_4RectE+0x78>)
 800a860:	b085      	sub	sp, #20
 800a862:	460c      	mov	r4, r1
 800a864:	f9b3 2000 	ldrsh.w	r2, [r3]
 800a868:	4b1b      	ldr	r3, [pc, #108]	; (800a8d8 <_ZN8touchgfx11Application4drawERNS_4RectE+0x7c>)
 800a86a:	f8ad 2004 	strh.w	r2, [sp, #4]
 800a86e:	2100      	movs	r1, #0
 800a870:	f9b3 3000 	ldrsh.w	r3, [r3]
 800a874:	9100      	str	r1, [sp, #0]
 800a876:	4605      	mov	r5, r0
 800a878:	6861      	ldr	r1, [r4, #4]
 800a87a:	6820      	ldr	r0, [r4, #0]
 800a87c:	f8ad 3006 	strh.w	r3, [sp, #6]
 800a880:	ab02      	add	r3, sp, #8
 800a882:	c303      	stmia	r3!, {r0, r1}
 800a884:	4669      	mov	r1, sp
 800a886:	a802      	add	r0, sp, #8
 800a888:	f7fd f894 	bl	80079b4 <_ZN8touchgfx4RectaNERKS0_>
 800a88c:	ab02      	add	r3, sp, #8
 800a88e:	cb03      	ldmia	r3!, {r0, r1}
 800a890:	4b12      	ldr	r3, [pc, #72]	; (800a8dc <_ZN8touchgfx11Application4drawERNS_4RectE+0x80>)
 800a892:	6020      	str	r0, [r4, #0]
 800a894:	6818      	ldr	r0, [r3, #0]
 800a896:	6061      	str	r1, [r4, #4]
 800a898:	b138      	cbz	r0, 800a8aa <_ZN8touchgfx11Application4drawERNS_4RectE+0x4e>
 800a89a:	f895 3134 	ldrb.w	r3, [r5, #308]	; 0x134
 800a89e:	b133      	cbz	r3, 800a8ae <_ZN8touchgfx11Application4drawERNS_4RectE+0x52>
 800a8a0:	6821      	ldr	r1, [r4, #0]
 800a8a2:	6862      	ldr	r2, [r4, #4]
 800a8a4:	4628      	mov	r0, r5
 800a8a6:	f7ff ff59 	bl	800a75c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 800a8aa:	b005      	add	sp, #20
 800a8ac:	bd30      	pop	{r4, r5, pc}
 800a8ae:	6803      	ldr	r3, [r0, #0]
 800a8b0:	4621      	mov	r1, r4
 800a8b2:	689b      	ldr	r3, [r3, #8]
 800a8b4:	4798      	blx	r3
 800a8b6:	4b0a      	ldr	r3, [pc, #40]	; (800a8e0 <_ZN8touchgfx11Application4drawERNS_4RectE+0x84>)
 800a8b8:	6818      	ldr	r0, [r3, #0]
 800a8ba:	b118      	cbz	r0, 800a8c4 <_ZN8touchgfx11Application4drawERNS_4RectE+0x68>
 800a8bc:	6803      	ldr	r3, [r0, #0]
 800a8be:	4621      	mov	r1, r4
 800a8c0:	689b      	ldr	r3, [r3, #8]
 800a8c2:	4798      	blx	r3
 800a8c4:	4b07      	ldr	r3, [pc, #28]	; (800a8e4 <_ZN8touchgfx11Application4drawERNS_4RectE+0x88>)
 800a8c6:	6818      	ldr	r0, [r3, #0]
 800a8c8:	6803      	ldr	r3, [r0, #0]
 800a8ca:	4621      	mov	r1, r4
 800a8cc:	695b      	ldr	r3, [r3, #20]
 800a8ce:	4798      	blx	r3
 800a8d0:	e7eb      	b.n	800a8aa <_ZN8touchgfx11Application4drawERNS_4RectE+0x4e>
 800a8d2:	bf00      	nop
 800a8d4:	2001216c 	.word	0x2001216c
 800a8d8:	2001216e 	.word	0x2001216e
 800a8dc:	200121d4 	.word	0x200121d4
 800a8e0:	200121d0 	.word	0x200121d0
 800a8e4:	20012178 	.word	0x20012178

0800a8e8 <_ZN8touchgfx11Application19cacheDrawOperationsEb>:
 800a8e8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800a8ec:	4604      	mov	r4, r0
 800a8ee:	b09b      	sub	sp, #108	; 0x6c
 800a8f0:	f880 1134 	strb.w	r1, [r0, #308]	; 0x134
 800a8f4:	b129      	cbz	r1, 800a902 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1a>
 800a8f6:	2300      	movs	r3, #0
 800a8f8:	f8a0 30e8 	strh.w	r3, [r0, #232]	; 0xe8
 800a8fc:	b01b      	add	sp, #108	; 0x6c
 800a8fe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800a902:	f500 7696 	add.w	r6, r0, #300	; 0x12c
 800a906:	4630      	mov	r0, r6
 800a908:	f7fd f897 	bl	8007a3a <_ZNK8touchgfx4Rect7isEmptyEv>
 800a90c:	4605      	mov	r5, r0
 800a90e:	b940      	cbnz	r0, 800a922 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x3a>
 800a910:	e896 0006 	ldmia.w	r6, {r1, r2}
 800a914:	4620      	mov	r0, r4
 800a916:	f7ff ff21 	bl	800a75c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 800a91a:	f8c4 512c 	str.w	r5, [r4, #300]	; 0x12c
 800a91e:	f8c4 5130 	str.w	r5, [r4, #304]	; 0x130
 800a922:	4b92      	ldr	r3, [pc, #584]	; (800ab6c <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x284>)
 800a924:	681b      	ldr	r3, [r3, #0]
 800a926:	b33b      	cbz	r3, 800a978 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x90>
 800a928:	4d91      	ldr	r5, [pc, #580]	; (800ab70 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x288>)
 800a92a:	4628      	mov	r0, r5
 800a92c:	f7fd f885 	bl	8007a3a <_ZNK8touchgfx4Rect7isEmptyEv>
 800a930:	4606      	mov	r6, r0
 800a932:	bb08      	cbnz	r0, 800a978 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x90>
 800a934:	4628      	mov	r0, r5
 800a936:	f7ff fc7f 	bl	800a238 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 800a93a:	6829      	ldr	r1, [r5, #0]
 800a93c:	686a      	ldr	r2, [r5, #4]
 800a93e:	4620      	mov	r0, r4
 800a940:	f7ff ff0c 	bl	800a75c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 800a944:	802e      	strh	r6, [r5, #0]
 800a946:	806e      	strh	r6, [r5, #2]
 800a948:	80ae      	strh	r6, [r5, #4]
 800a94a:	80ee      	strh	r6, [r5, #6]
 800a94c:	4f89      	ldr	r7, [pc, #548]	; (800ab74 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x28c>)
 800a94e:	a809      	add	r0, sp, #36	; 0x24
 800a950:	f7ff fe71 	bl	800a636 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 800a954:	883d      	ldrh	r5, [r7, #0]
 800a956:	462e      	mov	r6, r5
 800a958:	f8b4 30e8 	ldrh.w	r3, [r4, #232]	; 0xe8
 800a95c:	42b3      	cmp	r3, r6
 800a95e:	d910      	bls.n	800a982 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x9a>
 800a960:	eb04 03c6 	add.w	r3, r4, r6, lsl #3
 800a964:	a809      	add	r0, sp, #36	; 0x24
 800a966:	f8d3 10a8 	ldr.w	r1, [r3, #168]	; 0xa8
 800a96a:	f8d3 20ac 	ldr.w	r2, [r3, #172]	; 0xac
 800a96e:	3601      	adds	r6, #1
 800a970:	f7ff fed2 	bl	800a718 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_>
 800a974:	b2b6      	uxth	r6, r6
 800a976:	e7ef      	b.n	800a958 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x70>
 800a978:	f8b4 30e8 	ldrh.w	r3, [r4, #232]	; 0xe8
 800a97c:	2b00      	cmp	r3, #0
 800a97e:	d1e5      	bne.n	800a94c <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x64>
 800a980:	e7bc      	b.n	800a8fc <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x14>
 800a982:	462e      	mov	r6, r5
 800a984:	f8b4 312a 	ldrh.w	r3, [r4, #298]	; 0x12a
 800a988:	42b3      	cmp	r3, r6
 800a98a:	d90b      	bls.n	800a9a4 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0xbc>
 800a98c:	eb04 03c6 	add.w	r3, r4, r6, lsl #3
 800a990:	4620      	mov	r0, r4
 800a992:	f8d3 10ea 	ldr.w	r1, [r3, #234]	; 0xea
 800a996:	f8d3 20ee 	ldr.w	r2, [r3, #238]	; 0xee
 800a99a:	3601      	adds	r6, #1
 800a99c:	f7ff fede 	bl	800a75c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 800a9a0:	b2b6      	uxth	r6, r6
 800a9a2:	e7ef      	b.n	800a984 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x9c>
 800a9a4:	4a74      	ldr	r2, [pc, #464]	; (800ab78 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x290>)
 800a9a6:	6813      	ldr	r3, [r2, #0]
 800a9a8:	f893 3048 	ldrb.w	r3, [r3, #72]	; 0x48
 800a9ac:	2b01      	cmp	r3, #1
 800a9ae:	4690      	mov	r8, r2
 800a9b0:	f040 8094 	bne.w	800aadc <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1f4>
 800a9b4:	eb04 03c5 	add.w	r3, r4, r5, lsl #3
 800a9b8:	f8b4 00e8 	ldrh.w	r0, [r4, #232]	; 0xe8
 800a9bc:	33aa      	adds	r3, #170	; 0xaa
 800a9be:	f04f 0900 	mov.w	r9, #0
 800a9c2:	42a8      	cmp	r0, r5
 800a9c4:	f103 0308 	add.w	r3, r3, #8
 800a9c8:	dd0a      	ble.n	800a9e0 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0xf8>
 800a9ca:	f833 2c08 	ldrh.w	r2, [r3, #-8]
 800a9ce:	f833 1c04 	ldrh.w	r1, [r3, #-4]
 800a9d2:	440a      	add	r2, r1
 800a9d4:	b212      	sxth	r2, r2
 800a9d6:	4591      	cmp	r9, r2
 800a9d8:	bfb8      	it	lt
 800a9da:	4691      	movlt	r9, r2
 800a9dc:	3501      	adds	r5, #1
 800a9de:	e7f0      	b.n	800a9c2 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0xda>
 800a9e0:	4b66      	ldr	r3, [pc, #408]	; (800ab7c <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x294>)
 800a9e2:	4e67      	ldr	r6, [pc, #412]	; (800ab80 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x298>)
 800a9e4:	881d      	ldrh	r5, [r3, #0]
 800a9e6:	2300      	movs	r3, #0
 800a9e8:	e9cd 3305 	strd	r3, r3, [sp, #20]
 800a9ec:	2d0f      	cmp	r5, #15
 800a9ee:	bf8c      	ite	hi
 800a9f0:	08ed      	lsrhi	r5, r5, #3
 800a9f2:	2501      	movls	r5, #1
 800a9f4:	f8bd 3016 	ldrh.w	r3, [sp, #22]
 800a9f8:	f8bd 101a 	ldrh.w	r1, [sp, #26]
 800a9fc:	f8d8 0000 	ldr.w	r0, [r8]
 800aa00:	440b      	add	r3, r1
 800aa02:	b21b      	sxth	r3, r3
 800aa04:	4599      	cmp	r9, r3
 800aa06:	6802      	ldr	r2, [r0, #0]
 800aa08:	dd4b      	ble.n	800aaa2 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1ba>
 800aa0a:	f8d2 3084 	ldr.w	r3, [r2, #132]	; 0x84
 800aa0e:	4798      	blx	r3
 800aa10:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 800aa14:	f8bd 3016 	ldrh.w	r3, [sp, #22]
 800aa18:	4413      	add	r3, r2
 800aa1a:	b21b      	sxth	r3, r3
 800aa1c:	195a      	adds	r2, r3, r5
 800aa1e:	4290      	cmp	r0, r2
 800aa20:	da07      	bge.n	800aa32 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x14a>
 800aa22:	4581      	cmp	r9, r0
 800aa24:	dd05      	ble.n	800aa32 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x14a>
 800aa26:	4298      	cmp	r0, r3
 800aa28:	da33      	bge.n	800aa92 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1aa>
 800aa2a:	2b00      	cmp	r3, #0
 800aa2c:	dd31      	ble.n	800aa92 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1aa>
 800aa2e:	4648      	mov	r0, r9
 800aa30:	e004      	b.n	800aa3c <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x154>
 800aa32:	4298      	cmp	r0, r3
 800aa34:	dbfb      	blt.n	800aa2e <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x146>
 800aa36:	4548      	cmp	r0, r9
 800aa38:	bfa8      	it	ge
 800aa3a:	4648      	movge	r0, r9
 800aa3c:	f9b6 2000 	ldrsh.w	r2, [r6]
 800aa40:	f8b7 a000 	ldrh.w	sl, [r7]
 800aa44:	f8ad 3016 	strh.w	r3, [sp, #22]
 800aa48:	2100      	movs	r1, #0
 800aa4a:	1ac0      	subs	r0, r0, r3
 800aa4c:	f8ad 1014 	strh.w	r1, [sp, #20]
 800aa50:	f8ad 2018 	strh.w	r2, [sp, #24]
 800aa54:	f8ad 001a 	strh.w	r0, [sp, #26]
 800aa58:	f8b4 30e8 	ldrh.w	r3, [r4, #232]	; 0xe8
 800aa5c:	4553      	cmp	r3, sl
 800aa5e:	d9c9      	bls.n	800a9f4 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x10c>
 800aa60:	eb04 02ca 	add.w	r2, r4, sl, lsl #3
 800aa64:	ab07      	add	r3, sp, #28
 800aa66:	f852 0fa8 	ldr.w	r0, [r2, #168]!
 800aa6a:	6851      	ldr	r1, [r2, #4]
 800aa6c:	c303      	stmia	r3!, {r0, r1}
 800aa6e:	a807      	add	r0, sp, #28
 800aa70:	a905      	add	r1, sp, #20
 800aa72:	f7fc ff9f 	bl	80079b4 <_ZN8touchgfx4RectaNERKS0_>
 800aa76:	a807      	add	r0, sp, #28
 800aa78:	f7fc ffdf 	bl	8007a3a <_ZNK8touchgfx4Rect7isEmptyEv>
 800aa7c:	b920      	cbnz	r0, 800aa88 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1a0>
 800aa7e:	6823      	ldr	r3, [r4, #0]
 800aa80:	a907      	add	r1, sp, #28
 800aa82:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800aa84:	4620      	mov	r0, r4
 800aa86:	4798      	blx	r3
 800aa88:	f10a 0a01 	add.w	sl, sl, #1
 800aa8c:	fa1f fa8a 	uxth.w	sl, sl
 800aa90:	e7e2      	b.n	800aa58 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x170>
 800aa92:	f8d8 0000 	ldr.w	r0, [r8]
 800aa96:	6803      	ldr	r3, [r0, #0]
 800aa98:	2101      	movs	r1, #1
 800aa9a:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800aa9e:	4798      	blx	r3
 800aaa0:	e7a8      	b.n	800a9f4 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x10c>
 800aaa2:	69d3      	ldr	r3, [r2, #28]
 800aaa4:	4798      	blx	r3
 800aaa6:	4b37      	ldr	r3, [pc, #220]	; (800ab84 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x29c>)
 800aaa8:	781b      	ldrb	r3, [r3, #0]
 800aaaa:	2b00      	cmp	r3, #0
 800aaac:	f43f af26 	beq.w	800a8fc <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x14>
 800aab0:	2300      	movs	r3, #0
 800aab2:	883d      	ldrh	r5, [r7, #0]
 800aab4:	f8a4 312a 	strh.w	r3, [r4, #298]	; 0x12a
 800aab8:	34ea      	adds	r4, #234	; 0xea
 800aaba:	f8bd 3064 	ldrh.w	r3, [sp, #100]	; 0x64
 800aabe:	42ab      	cmp	r3, r5
 800aac0:	f67f af1c 	bls.w	800a8fc <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x14>
 800aac4:	ab1a      	add	r3, sp, #104	; 0x68
 800aac6:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 800aaca:	3b44      	subs	r3, #68	; 0x44
 800aacc:	e893 0006 	ldmia.w	r3, {r1, r2}
 800aad0:	4620      	mov	r0, r4
 800aad2:	3501      	adds	r5, #1
 800aad4:	f7ff fe20 	bl	800a718 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_>
 800aad8:	b2ad      	uxth	r5, r5
 800aada:	e7ee      	b.n	800aaba <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1d2>
 800aadc:	2b02      	cmp	r3, #2
 800aade:	f040 813d 	bne.w	800ad5c <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x474>
 800aae2:	4b29      	ldr	r3, [pc, #164]	; (800ab88 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2a0>)
 800aae4:	781b      	ldrb	r3, [r3, #0]
 800aae6:	2b01      	cmp	r3, #1
 800aae8:	f000 809d 	beq.w	800ac26 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x33e>
 800aaec:	f104 0ba8 	add.w	fp, r4, #168	; 0xa8
 800aaf0:	883a      	ldrh	r2, [r7, #0]
 800aaf2:	f8b4 10e8 	ldrh.w	r1, [r4, #232]	; 0xe8
 800aaf6:	3201      	adds	r2, #1
 800aaf8:	b292      	uxth	r2, r2
 800aafa:	2900      	cmp	r1, #0
 800aafc:	d0d3      	beq.n	800aaa6 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1be>
 800aafe:	f8b4 50aa 	ldrh.w	r5, [r4, #170]	; 0xaa
 800ab02:	f8b4 30ae 	ldrh.w	r3, [r4, #174]	; 0xae
 800ab06:	441d      	add	r5, r3
 800ab08:	b22d      	sxth	r5, r5
 800ab0a:	4610      	mov	r0, r2
 800ab0c:	f04f 0a00 	mov.w	sl, #0
 800ab10:	b283      	uxth	r3, r0
 800ab12:	4299      	cmp	r1, r3
 800ab14:	ea4f 06ca 	mov.w	r6, sl, lsl #3
 800ab18:	f240 80c3 	bls.w	800aca2 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x3ba>
 800ab1c:	4426      	add	r6, r4
 800ab1e:	eb04 09c0 	add.w	r9, r4, r0, lsl #3
 800ab22:	f9b6 30aa 	ldrsh.w	r3, [r6, #170]	; 0xaa
 800ab26:	f9b9 e0aa 	ldrsh.w	lr, [r9, #170]	; 0xaa
 800ab2a:	4573      	cmp	r3, lr
 800ab2c:	4684      	mov	ip, r0
 800ab2e:	f340 80a5 	ble.w	800ac7c <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x394>
 800ab32:	f8b9 50ae 	ldrh.w	r5, [r9, #174]	; 0xae
 800ab36:	4475      	add	r5, lr
 800ab38:	b22d      	sxth	r5, r5
 800ab3a:	429d      	cmp	r5, r3
 800ab3c:	bfa8      	it	ge
 800ab3e:	461d      	movge	r5, r3
 800ab40:	3001      	adds	r0, #1
 800ab42:	46e2      	mov	sl, ip
 800ab44:	e7e4      	b.n	800ab10 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x228>
 800ab46:	d10b      	bne.n	800ab60 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x278>
 800ab48:	f9b5 c0ae 	ldrsh.w	ip, [r5, #174]	; 0xae
 800ab4c:	f9b9 10ae 	ldrsh.w	r1, [r9, #174]	; 0xae
 800ab50:	458c      	cmp	ip, r1
 800ab52:	bfb4      	ite	lt
 800ab54:	469c      	movlt	ip, r3
 800ab56:	46b4      	movge	ip, r6
 800ab58:	4572      	cmp	r2, lr
 800ab5a:	bfb8      	it	lt
 800ab5c:	4672      	movlt	r2, lr
 800ab5e:	e08a      	b.n	800ac76 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x38e>
 800ab60:	428a      	cmp	r2, r1
 800ab62:	bfb8      	it	lt
 800ab64:	460a      	movlt	r2, r1
 800ab66:	46b4      	mov	ip, r6
 800ab68:	e085      	b.n	800ac76 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x38e>
 800ab6a:	bf00      	nop
 800ab6c:	200121d0 	.word	0x200121d0
 800ab70:	200121dc 	.word	0x200121dc
 800ab74:	20000084 	.word	0x20000084
 800ab78:	20012178 	.word	0x20012178
 800ab7c:	2001216e 	.word	0x2001216e
 800ab80:	2001216c 	.word	0x2001216c
 800ab84:	20012176 	.word	0x20012176
 800ab88:	20012170 	.word	0x20012170
 800ab8c:	1961      	adds	r1, r4, r5
 800ab8e:	ab05      	add	r3, sp, #20
 800ab90:	f851 0fa8 	ldr.w	r0, [r1, #168]!
 800ab94:	6849      	ldr	r1, [r1, #4]
 800ab96:	c303      	stmia	r3!, {r0, r1}
 800ab98:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 800ab9c:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 800aba0:	2b13      	cmp	r3, #19
 800aba2:	bfd8      	it	le
 800aba4:	f9bd 2014 	ldrshle.w	r2, [sp, #20]
 800aba8:	f8ad 2014 	strh.w	r2, [sp, #20]
 800abac:	440b      	add	r3, r1
 800abae:	1a9b      	subs	r3, r3, r2
 800abb0:	a805      	add	r0, sp, #20
 800abb2:	f8ad 3018 	strh.w	r3, [sp, #24]
 800abb6:	f7ff fb99 	bl	800a2ec <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 800abba:	a805      	add	r0, sp, #20
 800abbc:	f7fc ff3d 	bl	8007a3a <_ZNK8touchgfx4Rect7isEmptyEv>
 800abc0:	bb88      	cbnz	r0, 800ac26 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x33e>
 800abc2:	f9bd c01a 	ldrsh.w	ip, [sp, #26]
 800abc6:	f8d8 0000 	ldr.w	r0, [r8]
 800abca:	f8bd 3018 	ldrh.w	r3, [sp, #24]
 800abce:	f8d0 e000 	ldr.w	lr, [r0]
 800abd2:	f8bd 2016 	ldrh.w	r2, [sp, #22]
 800abd6:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 800abda:	f1bc 0f14 	cmp.w	ip, #20
 800abde:	bfa8      	it	ge
 800abe0:	f04f 0c14 	movge.w	ip, #20
 800abe4:	fa1f fc8c 	uxth.w	ip, ip
 800abe8:	f8cd c000 	str.w	ip, [sp]
 800abec:	f8de 9078 	ldr.w	r9, [lr, #120]	; 0x78
 800abf0:	47c8      	blx	r9
 800abf2:	4681      	mov	r9, r0
 800abf4:	f8ad 001a 	strh.w	r0, [sp, #26]
 800abf8:	a805      	add	r0, sp, #20
 800abfa:	f7ff fb1d 	bl	800a238 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 800abfe:	6823      	ldr	r3, [r4, #0]
 800ac00:	4425      	add	r5, r4
 800ac02:	4620      	mov	r0, r4
 800ac04:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800ac06:	a905      	add	r1, sp, #20
 800ac08:	4798      	blx	r3
 800ac0a:	f8b5 00ac 	ldrh.w	r0, [r5, #172]	; 0xac
 800ac0e:	eba0 0009 	sub.w	r0, r0, r9
 800ac12:	b200      	sxth	r0, r0
 800ac14:	f8a5 00ac 	strh.w	r0, [r5, #172]	; 0xac
 800ac18:	b928      	cbnz	r0, 800ac26 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x33e>
 800ac1a:	b2b2      	uxth	r2, r6
 800ac1c:	f104 01a8 	add.w	r1, r4, #168	; 0xa8
 800ac20:	a807      	add	r0, sp, #28
 800ac22:	f7ff fd5b 	bl	800a6dc <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800ac26:	f8b4 a0e8 	ldrh.w	sl, [r4, #232]	; 0xe8
 800ac2a:	f1ba 0f00 	cmp.w	sl, #0
 800ac2e:	f43f af3a 	beq.w	800aaa6 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1be>
 800ac32:	883b      	ldrh	r3, [r7, #0]
 800ac34:	f9b4 20a8 	ldrsh.w	r2, [r4, #168]	; 0xa8
 800ac38:	3301      	adds	r3, #1
 800ac3a:	b29b      	uxth	r3, r3
 800ac3c:	2600      	movs	r6, #0
 800ac3e:	b299      	uxth	r1, r3
 800ac40:	458a      	cmp	sl, r1
 800ac42:	ea4f 05c6 	mov.w	r5, r6, lsl #3
 800ac46:	d9a1      	bls.n	800ab8c <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2a4>
 800ac48:	4425      	add	r5, r4
 800ac4a:	eb04 09c3 	add.w	r9, r4, r3, lsl #3
 800ac4e:	f8b5 10ac 	ldrh.w	r1, [r5, #172]	; 0xac
 800ac52:	f8b5 00a8 	ldrh.w	r0, [r5, #168]	; 0xa8
 800ac56:	f9b9 e0a8 	ldrsh.w	lr, [r9, #168]	; 0xa8
 800ac5a:	4408      	add	r0, r1
 800ac5c:	f8b9 10ac 	ldrh.w	r1, [r9, #172]	; 0xac
 800ac60:	4471      	add	r1, lr
 800ac62:	b200      	sxth	r0, r0
 800ac64:	b209      	sxth	r1, r1
 800ac66:	4288      	cmp	r0, r1
 800ac68:	469c      	mov	ip, r3
 800ac6a:	f6bf af6c 	bge.w	800ab46 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x25e>
 800ac6e:	4586      	cmp	lr, r0
 800ac70:	4672      	mov	r2, lr
 800ac72:	bfb8      	it	lt
 800ac74:	4602      	movlt	r2, r0
 800ac76:	3301      	adds	r3, #1
 800ac78:	4666      	mov	r6, ip
 800ac7a:	e7e0      	b.n	800ac3e <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x356>
 800ac7c:	d10c      	bne.n	800ac98 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x3b0>
 800ac7e:	f9b6 c0ac 	ldrsh.w	ip, [r6, #172]	; 0xac
 800ac82:	f9b9 60ac 	ldrsh.w	r6, [r9, #172]	; 0xac
 800ac86:	45b4      	cmp	ip, r6
 800ac88:	bfb4      	ite	lt
 800ac8a:	4684      	movlt	ip, r0
 800ac8c:	46d4      	movge	ip, sl
 800ac8e:	f8b9 60ae 	ldrh.w	r6, [r9, #174]	; 0xae
 800ac92:	4433      	add	r3, r6
 800ac94:	b21b      	sxth	r3, r3
 800ac96:	e750      	b.n	800ab3a <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x252>
 800ac98:	4575      	cmp	r5, lr
 800ac9a:	bfa8      	it	ge
 800ac9c:	4675      	movge	r5, lr
 800ac9e:	46d4      	mov	ip, sl
 800aca0:	e74e      	b.n	800ab40 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x258>
 800aca2:	eb0b 0006 	add.w	r0, fp, r6
 800aca6:	4426      	add	r6, r4
 800aca8:	e9cd 1202 	strd	r1, r2, [sp, #8]
 800acac:	f9b6 90ae 	ldrsh.w	r9, [r6, #174]	; 0xae
 800acb0:	f1b9 0f13 	cmp.w	r9, #19
 800acb4:	bfde      	ittt	le
 800acb6:	f8b6 50aa 	ldrhle.w	r5, [r6, #170]	; 0xaa
 800acba:	444d      	addle	r5, r9
 800acbc:	b22d      	sxthle	r5, r5
 800acbe:	f7fc febc 	bl	8007a3a <_ZNK8touchgfx4Rect7isEmptyEv>
 800acc2:	e9dd 1202 	ldrd	r1, r2, [sp, #8]
 800acc6:	2800      	cmp	r0, #0
 800acc8:	f47f af17 	bne.w	800aafa <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x212>
 800accc:	f9b6 c0aa 	ldrsh.w	ip, [r6, #170]	; 0xaa
 800acd0:	f8ad 001a 	strh.w	r0, [sp, #26]
 800acd4:	eba5 050c 	sub.w	r5, r5, ip
 800acd8:	fa1f f28c 	uxth.w	r2, ip
 800acdc:	fa1f f989 	uxth.w	r9, r9
 800ace0:	eb02 0009 	add.w	r0, r2, r9
 800ace4:	2d14      	cmp	r5, #20
 800ace6:	bfa8      	it	ge
 800ace8:	2514      	movge	r5, #20
 800acea:	b200      	sxth	r0, r0
 800acec:	fa1f fe85 	uxth.w	lr, r5
 800acf0:	eba0 000c 	sub.w	r0, r0, ip
 800acf4:	f9b6 10a8 	ldrsh.w	r1, [r6, #168]	; 0xa8
 800acf8:	f9b6 30ac 	ldrsh.w	r3, [r6, #172]	; 0xac
 800acfc:	f8ad 1014 	strh.w	r1, [sp, #20]
 800ad00:	4586      	cmp	lr, r0
 800ad02:	f8d8 0000 	ldr.w	r0, [r8]
 800ad06:	f8ad c016 	strh.w	ip, [sp, #22]
 800ad0a:	f8ad 3018 	strh.w	r3, [sp, #24]
 800ad0e:	bfb8      	it	lt
 800ad10:	46f1      	movlt	r9, lr
 800ad12:	6805      	ldr	r5, [r0, #0]
 800ad14:	f8cd 9000 	str.w	r9, [sp]
 800ad18:	b29b      	uxth	r3, r3
 800ad1a:	b289      	uxth	r1, r1
 800ad1c:	6fad      	ldr	r5, [r5, #120]	; 0x78
 800ad1e:	47a8      	blx	r5
 800ad20:	6823      	ldr	r3, [r4, #0]
 800ad22:	f8ad 001a 	strh.w	r0, [sp, #26]
 800ad26:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800ad28:	a905      	add	r1, sp, #20
 800ad2a:	4620      	mov	r0, r4
 800ad2c:	4798      	blx	r3
 800ad2e:	f8bd 101a 	ldrh.w	r1, [sp, #26]
 800ad32:	f8b6 30ae 	ldrh.w	r3, [r6, #174]	; 0xae
 800ad36:	f8b6 20aa 	ldrh.w	r2, [r6, #170]	; 0xaa
 800ad3a:	1a5b      	subs	r3, r3, r1
 800ad3c:	440a      	add	r2, r1
 800ad3e:	b21b      	sxth	r3, r3
 800ad40:	f8a6 20aa 	strh.w	r2, [r6, #170]	; 0xaa
 800ad44:	f8a6 30ae 	strh.w	r3, [r6, #174]	; 0xae
 800ad48:	2b00      	cmp	r3, #0
 800ad4a:	f47f aed1 	bne.w	800aaf0 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x208>
 800ad4e:	fa1f f28a 	uxth.w	r2, sl
 800ad52:	4659      	mov	r1, fp
 800ad54:	a807      	add	r0, sp, #28
 800ad56:	f7ff fcc1 	bl	800a6dc <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800ad5a:	e6c9      	b.n	800aaf0 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x208>
 800ad5c:	f8b4 30e8 	ldrh.w	r3, [r4, #232]	; 0xe8
 800ad60:	42ab      	cmp	r3, r5
 800ad62:	f67f aea0 	bls.w	800aaa6 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1be>
 800ad66:	eb04 02c5 	add.w	r2, r4, r5, lsl #3
 800ad6a:	ab07      	add	r3, sp, #28
 800ad6c:	f852 0fa8 	ldr.w	r0, [r2, #168]!
 800ad70:	6851      	ldr	r1, [r2, #4]
 800ad72:	c303      	stmia	r3!, {r0, r1}
 800ad74:	a807      	add	r0, sp, #28
 800ad76:	f7fc fe60 	bl	8007a3a <_ZNK8touchgfx4Rect7isEmptyEv>
 800ad7a:	b920      	cbnz	r0, 800ad86 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x49e>
 800ad7c:	6823      	ldr	r3, [r4, #0]
 800ad7e:	a907      	add	r1, sp, #28
 800ad80:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800ad82:	4620      	mov	r0, r4
 800ad84:	4798      	blx	r3
 800ad86:	3501      	adds	r5, #1
 800ad88:	b2ad      	uxth	r5, r5
 800ad8a:	e7e7      	b.n	800ad5c <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x474>

0800ad8c <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE>:
 800ad8c:	4b03      	ldr	r3, [pc, #12]	; (800ad9c <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE+0x10>)
 800ad8e:	2200      	movs	r2, #0
 800ad90:	801a      	strh	r2, [r3, #0]
 800ad92:	805a      	strh	r2, [r3, #2]
 800ad94:	809a      	strh	r2, [r3, #4]
 800ad96:	80da      	strh	r2, [r3, #6]
 800ad98:	4770      	bx	lr
 800ad9a:	bf00      	nop
 800ad9c:	200121dc 	.word	0x200121dc

0800ada0 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>:
 800ada0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ada4:	4607      	mov	r7, r0
 800ada6:	b099      	sub	sp, #100	; 0x64
 800ada8:	a802      	add	r0, sp, #8
 800adaa:	4614      	mov	r4, r2
 800adac:	461d      	mov	r5, r3
 800adae:	468a      	mov	sl, r1
 800adb0:	f000 fdbc 	bl	800b92c <_ZN8touchgfx12TextProviderC1Ev>
 800adb4:	683b      	ldr	r3, [r7, #0]
 800adb6:	4638      	mov	r0, r7
 800adb8:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800adba:	4798      	blx	r3
 800adbc:	462a      	mov	r2, r5
 800adbe:	4603      	mov	r3, r0
 800adc0:	4621      	mov	r1, r4
 800adc2:	a802      	add	r0, sp, #8
 800adc4:	f000 fdf7 	bl	800b9b6 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_>
 800adc8:	2500      	movs	r5, #0
 800adca:	462c      	mov	r4, r5
 800adcc:	46a9      	mov	r9, r5
 800adce:	46a8      	mov	r8, r5
 800add0:	f242 0b0b 	movw	fp, #8203	; 0x200b
 800add4:	2300      	movs	r3, #0
 800add6:	9301      	str	r3, [sp, #4]
 800add8:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 800addc:	429c      	cmp	r4, r3
 800adde:	d002      	beq.n	800ade6 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x46>
 800ade0:	455c      	cmp	r4, fp
 800ade2:	bf18      	it	ne
 800ade4:	4625      	movne	r5, r4
 800ade6:	ab01      	add	r3, sp, #4
 800ade8:	463a      	mov	r2, r7
 800adea:	4651      	mov	r1, sl
 800adec:	a802      	add	r0, sp, #8
 800adee:	f001 f8db 	bl	800bfa8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800adf2:	4604      	mov	r4, r0
 800adf4:	b108      	cbz	r0, 800adfa <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x5a>
 800adf6:	280a      	cmp	r0, #10
 800adf8:	d10a      	bne.n	800ae10 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x70>
 800adfa:	45c1      	cmp	r9, r8
 800adfc:	bf38      	it	cc
 800adfe:	46c1      	movcc	r9, r8
 800ae00:	f04f 0800 	mov.w	r8, #0
 800ae04:	2c00      	cmp	r4, #0
 800ae06:	d1e5      	bne.n	800add4 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x34>
 800ae08:	4648      	mov	r0, r9
 800ae0a:	b019      	add	sp, #100	; 0x64
 800ae0c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800ae10:	9a01      	ldr	r2, [sp, #4]
 800ae12:	2a00      	cmp	r2, #0
 800ae14:	d0de      	beq.n	800add4 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x34>
 800ae16:	7b56      	ldrb	r6, [r2, #13]
 800ae18:	683b      	ldr	r3, [r7, #0]
 800ae1a:	8894      	ldrh	r4, [r2, #4]
 800ae1c:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800ae1e:	0076      	lsls	r6, r6, #1
 800ae20:	f406 7080 	and.w	r0, r6, #256	; 0x100
 800ae24:	7a96      	ldrb	r6, [r2, #10]
 800ae26:	4629      	mov	r1, r5
 800ae28:	4306      	orrs	r6, r0
 800ae2a:	4638      	mov	r0, r7
 800ae2c:	4798      	blx	r3
 800ae2e:	4430      	add	r0, r6
 800ae30:	4480      	add	r8, r0
 800ae32:	fa1f f888 	uxth.w	r8, r8
 800ae36:	e7e5      	b.n	800ae04 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x64>

0800ae38 <_ZNK8touchgfx4Font12getCharWidthEt>:
 800ae38:	b508      	push	{r3, lr}
 800ae3a:	6803      	ldr	r3, [r0, #0]
 800ae3c:	68db      	ldr	r3, [r3, #12]
 800ae3e:	4798      	blx	r3
 800ae40:	b128      	cbz	r0, 800ae4e <_ZNK8touchgfx4Font12getCharWidthEt+0x16>
 800ae42:	7b43      	ldrb	r3, [r0, #13]
 800ae44:	7a80      	ldrb	r0, [r0, #10]
 800ae46:	005b      	lsls	r3, r3, #1
 800ae48:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800ae4c:	4318      	orrs	r0, r3
 800ae4e:	bd08      	pop	{r3, pc}

0800ae50 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz>:
 800ae50:	b40e      	push	{r1, r2, r3}
 800ae52:	b5f0      	push	{r4, r5, r6, r7, lr}
 800ae54:	b098      	sub	sp, #96	; 0x60
 800ae56:	ab1d      	add	r3, sp, #116	; 0x74
 800ae58:	4605      	mov	r5, r0
 800ae5a:	f853 4b04 	ldr.w	r4, [r3], #4
 800ae5e:	9300      	str	r3, [sp, #0]
 800ae60:	a802      	add	r0, sp, #8
 800ae62:	f000 fd63 	bl	800b92c <_ZN8touchgfx12TextProviderC1Ev>
 800ae66:	682b      	ldr	r3, [r5, #0]
 800ae68:	4628      	mov	r0, r5
 800ae6a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800ae6c:	4798      	blx	r3
 800ae6e:	ae18      	add	r6, sp, #96	; 0x60
 800ae70:	4603      	mov	r3, r0
 800ae72:	4621      	mov	r1, r4
 800ae74:	9a00      	ldr	r2, [sp, #0]
 800ae76:	2400      	movs	r4, #0
 800ae78:	a802      	add	r0, sp, #8
 800ae7a:	f000 fd9c 	bl	800b9b6 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_>
 800ae7e:	f846 4d5c 	str.w	r4, [r6, #-92]!
 800ae82:	462a      	mov	r2, r5
 800ae84:	4633      	mov	r3, r6
 800ae86:	4621      	mov	r1, r4
 800ae88:	a802      	add	r0, sp, #8
 800ae8a:	f001 f88d 	bl	800bfa8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800ae8e:	b1f0      	cbz	r0, 800aece <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x7e>
 800ae90:	280a      	cmp	r0, #10
 800ae92:	d018      	beq.n	800aec6 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x76>
 800ae94:	9f01      	ldr	r7, [sp, #4]
 800ae96:	b1b7      	cbz	r7, 800aec6 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x76>
 800ae98:	7b78      	ldrb	r0, [r7, #13]
 800ae9a:	7a3b      	ldrb	r3, [r7, #8]
 800ae9c:	88aa      	ldrh	r2, [r5, #4]
 800ae9e:	00c1      	lsls	r1, r0, #3
 800aea0:	f401 7180 	and.w	r1, r1, #256	; 0x100
 800aea4:	4319      	orrs	r1, r3
 800aea6:	0643      	lsls	r3, r0, #25
 800aea8:	bf44      	itt	mi
 800aeaa:	f5a1 7300 	submi.w	r3, r1, #512	; 0x200
 800aeae:	b219      	sxthmi	r1, r3
 800aeb0:	0100      	lsls	r0, r0, #4
 800aeb2:	79fb      	ldrb	r3, [r7, #7]
 800aeb4:	f400 7080 	and.w	r0, r0, #256	; 0x100
 800aeb8:	4303      	orrs	r3, r0
 800aeba:	4413      	add	r3, r2
 800aebc:	1a5b      	subs	r3, r3, r1
 800aebe:	b29b      	uxth	r3, r3
 800aec0:	42a3      	cmp	r3, r4
 800aec2:	bfc8      	it	gt
 800aec4:	b21c      	sxthgt	r4, r3
 800aec6:	4633      	mov	r3, r6
 800aec8:	462a      	mov	r2, r5
 800aeca:	2100      	movs	r1, #0
 800aecc:	e7dc      	b.n	800ae88 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x38>
 800aece:	b2a0      	uxth	r0, r4
 800aed0:	b018      	add	sp, #96	; 0x60
 800aed2:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 800aed6:	b003      	add	sp, #12
 800aed8:	4770      	bx	lr

0800aeda <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz>:
 800aeda:	b40e      	push	{r1, r2, r3}
 800aedc:	b530      	push	{r4, r5, lr}
 800aede:	b098      	sub	sp, #96	; 0x60
 800aee0:	ab1b      	add	r3, sp, #108	; 0x6c
 800aee2:	4604      	mov	r4, r0
 800aee4:	f853 5b04 	ldr.w	r5, [r3], #4
 800aee8:	9301      	str	r3, [sp, #4]
 800aeea:	a802      	add	r0, sp, #8
 800aeec:	f000 fd1e 	bl	800b92c <_ZN8touchgfx12TextProviderC1Ev>
 800aef0:	6823      	ldr	r3, [r4, #0]
 800aef2:	4620      	mov	r0, r4
 800aef4:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800aef6:	4798      	blx	r3
 800aef8:	9a01      	ldr	r2, [sp, #4]
 800aefa:	4603      	mov	r3, r0
 800aefc:	4629      	mov	r1, r5
 800aefe:	a802      	add	r0, sp, #8
 800af00:	f000 fd59 	bl	800b9b6 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_>
 800af04:	a802      	add	r0, sp, #8
 800af06:	f001 f947 	bl	800c198 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800af0a:	2401      	movs	r4, #1
 800af0c:	b2a3      	uxth	r3, r4
 800af0e:	b140      	cbz	r0, 800af22 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x48>
 800af10:	280a      	cmp	r0, #10
 800af12:	bf08      	it	eq
 800af14:	3301      	addeq	r3, #1
 800af16:	a802      	add	r0, sp, #8
 800af18:	bf08      	it	eq
 800af1a:	b21c      	sxtheq	r4, r3
 800af1c:	f001 f93c 	bl	800c198 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800af20:	e7f4      	b.n	800af0c <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x32>
 800af22:	4618      	mov	r0, r3
 800af24:	b018      	add	sp, #96	; 0x60
 800af26:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 800af2a:	b003      	add	sp, #12
 800af2c:	4770      	bx	lr

0800af2e <_ZNK8touchgfx4Font15getSpacingAboveEPKtz>:
 800af2e:	b40e      	push	{r1, r2, r3}
 800af30:	b5f0      	push	{r4, r5, r6, r7, lr}
 800af32:	b098      	sub	sp, #96	; 0x60
 800af34:	ab1d      	add	r3, sp, #116	; 0x74
 800af36:	4604      	mov	r4, r0
 800af38:	f853 5b04 	ldr.w	r5, [r3], #4
 800af3c:	9300      	str	r3, [sp, #0]
 800af3e:	a802      	add	r0, sp, #8
 800af40:	f000 fcf4 	bl	800b92c <_ZN8touchgfx12TextProviderC1Ev>
 800af44:	6823      	ldr	r3, [r4, #0]
 800af46:	4620      	mov	r0, r4
 800af48:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800af4a:	4798      	blx	r3
 800af4c:	4629      	mov	r1, r5
 800af4e:	4603      	mov	r3, r0
 800af50:	9a00      	ldr	r2, [sp, #0]
 800af52:	a802      	add	r0, sp, #8
 800af54:	ad18      	add	r5, sp, #96	; 0x60
 800af56:	f000 fd2e 	bl	800b9b6 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_>
 800af5a:	2100      	movs	r1, #0
 800af5c:	f845 1d5c 	str.w	r1, [r5, #-92]!
 800af60:	4622      	mov	r2, r4
 800af62:	462b      	mov	r3, r5
 800af64:	a802      	add	r0, sp, #8
 800af66:	f001 f81f 	bl	800bfa8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800af6a:	26ff      	movs	r6, #255	; 0xff
 800af6c:	b1d8      	cbz	r0, 800afa6 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
 800af6e:	280a      	cmp	r0, #10
 800af70:	d012      	beq.n	800af98 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x6a>
 800af72:	9801      	ldr	r0, [sp, #4]
 800af74:	b180      	cbz	r0, 800af98 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x6a>
 800af76:	7b47      	ldrb	r7, [r0, #13]
 800af78:	7922      	ldrb	r2, [r4, #4]
 800af7a:	00fb      	lsls	r3, r7, #3
 800af7c:	f403 7180 	and.w	r1, r3, #256	; 0x100
 800af80:	7a03      	ldrb	r3, [r0, #8]
 800af82:	430b      	orrs	r3, r1
 800af84:	0679      	lsls	r1, r7, #25
 800af86:	bf44      	itt	mi
 800af88:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 800af8c:	b21b      	sxthmi	r3, r3
 800af8e:	1ad3      	subs	r3, r2, r3
 800af90:	b2db      	uxtb	r3, r3
 800af92:	429e      	cmp	r6, r3
 800af94:	bf28      	it	cs
 800af96:	461e      	movcs	r6, r3
 800af98:	462b      	mov	r3, r5
 800af9a:	4622      	mov	r2, r4
 800af9c:	2100      	movs	r1, #0
 800af9e:	a802      	add	r0, sp, #8
 800afa0:	f001 f802 	bl	800bfa8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800afa4:	e7e2      	b.n	800af6c <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x3e>
 800afa6:	4630      	mov	r0, r6
 800afa8:	b018      	add	sp, #96	; 0x60
 800afaa:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 800afae:	b003      	add	sp, #12
 800afb0:	4770      	bx	lr

0800afb2 <_ZNK8touchgfx8Drawable10invalidateEv>:
 800afb2:	b513      	push	{r0, r1, r4, lr}
 800afb4:	1d01      	adds	r1, r0, #4
 800afb6:	4603      	mov	r3, r0
 800afb8:	c903      	ldmia	r1, {r0, r1}
 800afba:	466a      	mov	r2, sp
 800afbc:	e882 0003 	stmia.w	r2, {r0, r1}
 800afc0:	2100      	movs	r1, #0
 800afc2:	9100      	str	r1, [sp, #0]
 800afc4:	6819      	ldr	r1, [r3, #0]
 800afc6:	4618      	mov	r0, r3
 800afc8:	690c      	ldr	r4, [r1, #16]
 800afca:	4611      	mov	r1, r2
 800afcc:	47a0      	blx	r4
 800afce:	b002      	add	sp, #8
 800afd0:	bd10      	pop	{r4, pc}

0800afd2 <_ZN8touchgfx8Drawable20getSolidRectAbsoluteEv>:
 800afd2:	b538      	push	{r3, r4, r5, lr}
 800afd4:	680b      	ldr	r3, [r1, #0]
 800afd6:	460c      	mov	r4, r1
 800afd8:	68db      	ldr	r3, [r3, #12]
 800afda:	4605      	mov	r5, r0
 800afdc:	4798      	blx	r3
 800afde:	6823      	ldr	r3, [r4, #0]
 800afe0:	4620      	mov	r0, r4
 800afe2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800afe4:	4629      	mov	r1, r5
 800afe6:	4798      	blx	r3
 800afe8:	4628      	mov	r0, r5
 800afea:	bd38      	pop	{r3, r4, r5, pc}

0800afec <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE>:
 800afec:	b410      	push	{r4}
 800afee:	880a      	ldrh	r2, [r1, #0]
 800aff0:	8884      	ldrh	r4, [r0, #4]
 800aff2:	4422      	add	r2, r4
 800aff4:	800a      	strh	r2, [r1, #0]
 800aff6:	88c4      	ldrh	r4, [r0, #6]
 800aff8:	884a      	ldrh	r2, [r1, #2]
 800affa:	4422      	add	r2, r4
 800affc:	804a      	strh	r2, [r1, #2]
 800affe:	6940      	ldr	r0, [r0, #20]
 800b000:	b120      	cbz	r0, 800b00c <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE+0x20>
 800b002:	6803      	ldr	r3, [r0, #0]
 800b004:	f85d 4b04 	ldr.w	r4, [sp], #4
 800b008:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800b00a:	4718      	bx	r3
 800b00c:	f85d 4b04 	ldr.w	r4, [sp], #4
 800b010:	4770      	bx	lr

0800b012 <_ZN8touchgfx8Drawable12moveRelativeEss>:
 800b012:	b5f0      	push	{r4, r5, r6, r7, lr}
 800b014:	460b      	mov	r3, r1
 800b016:	b085      	sub	sp, #20
 800b018:	4604      	mov	r4, r0
 800b01a:	b901      	cbnz	r1, 800b01e <_ZN8touchgfx8Drawable12moveRelativeEss+0xc>
 800b01c:	b1fa      	cbz	r2, 800b05e <_ZN8touchgfx8Drawable12moveRelativeEss+0x4c>
 800b01e:	1d27      	adds	r7, r4, #4
 800b020:	e897 0003 	ldmia.w	r7, {r0, r1}
 800b024:	466e      	mov	r6, sp
 800b026:	e886 0003 	stmia.w	r6, {r0, r1}
 800b02a:	88e1      	ldrh	r1, [r4, #6]
 800b02c:	440a      	add	r2, r1
 800b02e:	88a1      	ldrh	r1, [r4, #4]
 800b030:	4419      	add	r1, r3
 800b032:	6823      	ldr	r3, [r4, #0]
 800b034:	b209      	sxth	r1, r1
 800b036:	4620      	mov	r0, r4
 800b038:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800b03a:	b212      	sxth	r2, r2
 800b03c:	4798      	blx	r3
 800b03e:	e897 0003 	ldmia.w	r7, {r0, r1}
 800b042:	ad02      	add	r5, sp, #8
 800b044:	e885 0003 	stmia.w	r5, {r0, r1}
 800b048:	6960      	ldr	r0, [r4, #20]
 800b04a:	b150      	cbz	r0, 800b062 <_ZN8touchgfx8Drawable12moveRelativeEss+0x50>
 800b04c:	6803      	ldr	r3, [r0, #0]
 800b04e:	4631      	mov	r1, r6
 800b050:	691b      	ldr	r3, [r3, #16]
 800b052:	4798      	blx	r3
 800b054:	6960      	ldr	r0, [r4, #20]
 800b056:	6803      	ldr	r3, [r0, #0]
 800b058:	691b      	ldr	r3, [r3, #16]
 800b05a:	4629      	mov	r1, r5
 800b05c:	4798      	blx	r3
 800b05e:	b005      	add	sp, #20
 800b060:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800b062:	f7ff fad7 	bl	800a614 <_ZN8touchgfx11Application11getInstanceEv>
 800b066:	6803      	ldr	r3, [r0, #0]
 800b068:	4631      	mov	r1, r6
 800b06a:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800b06c:	4798      	blx	r3
 800b06e:	f7ff fad1 	bl	800a614 <_ZN8touchgfx11Application11getInstanceEv>
 800b072:	6803      	ldr	r3, [r0, #0]
 800b074:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800b076:	e7f0      	b.n	800b05a <_ZN8touchgfx8Drawable12moveRelativeEss+0x48>

0800b078 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE>:
 800b078:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800b07a:	8882      	ldrh	r2, [r0, #4]
 800b07c:	880b      	ldrh	r3, [r1, #0]
 800b07e:	4413      	add	r3, r2
 800b080:	800b      	strh	r3, [r1, #0]
 800b082:	88c2      	ldrh	r2, [r0, #6]
 800b084:	884b      	ldrh	r3, [r1, #2]
 800b086:	4413      	add	r3, r2
 800b088:	4602      	mov	r2, r0
 800b08a:	804b      	strh	r3, [r1, #2]
 800b08c:	4605      	mov	r5, r0
 800b08e:	f852 0f04 	ldr.w	r0, [r2, #4]!
 800b092:	460c      	mov	r4, r1
 800b094:	6851      	ldr	r1, [r2, #4]
 800b096:	466b      	mov	r3, sp
 800b098:	c303      	stmia	r3!, {r0, r1}
 800b09a:	4621      	mov	r1, r4
 800b09c:	4668      	mov	r0, sp
 800b09e:	f7fc fc89 	bl	80079b4 <_ZN8touchgfx4RectaNERKS0_>
 800b0a2:	466b      	mov	r3, sp
 800b0a4:	cb03      	ldmia	r3!, {r0, r1}
 800b0a6:	6020      	str	r0, [r4, #0]
 800b0a8:	6061      	str	r1, [r4, #4]
 800b0aa:	6968      	ldr	r0, [r5, #20]
 800b0ac:	b128      	cbz	r0, 800b0ba <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x42>
 800b0ae:	6803      	ldr	r3, [r0, #0]
 800b0b0:	691b      	ldr	r3, [r3, #16]
 800b0b2:	4621      	mov	r1, r4
 800b0b4:	4798      	blx	r3
 800b0b6:	b003      	add	sp, #12
 800b0b8:	bd30      	pop	{r4, r5, pc}
 800b0ba:	f7ff faab 	bl	800a614 <_ZN8touchgfx11Application11getInstanceEv>
 800b0be:	6803      	ldr	r3, [r0, #0]
 800b0c0:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800b0c2:	e7f6      	b.n	800b0b2 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x3a>

0800b0c4 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE>:
 800b0c4:	b570      	push	{r4, r5, r6, lr}
 800b0c6:	8882      	ldrh	r2, [r0, #4]
 800b0c8:	880b      	ldrh	r3, [r1, #0]
 800b0ca:	4413      	add	r3, r2
 800b0cc:	800b      	strh	r3, [r1, #0]
 800b0ce:	88c2      	ldrh	r2, [r0, #6]
 800b0d0:	884b      	ldrh	r3, [r1, #2]
 800b0d2:	460c      	mov	r4, r1
 800b0d4:	4413      	add	r3, r2
 800b0d6:	804b      	strh	r3, [r1, #2]
 800b0d8:	4605      	mov	r5, r0
 800b0da:	1d01      	adds	r1, r0, #4
 800b0dc:	4620      	mov	r0, r4
 800b0de:	f7fc fc69 	bl	80079b4 <_ZN8touchgfx4RectaNERKS0_>
 800b0e2:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 800b0e6:	2b00      	cmp	r3, #0
 800b0e8:	dd0b      	ble.n	800b102 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 800b0ea:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 800b0ee:	2b00      	cmp	r3, #0
 800b0f0:	dd07      	ble.n	800b102 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 800b0f2:	6968      	ldr	r0, [r5, #20]
 800b0f4:	b128      	cbz	r0, 800b102 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 800b0f6:	6803      	ldr	r3, [r0, #0]
 800b0f8:	4621      	mov	r1, r4
 800b0fa:	6a1b      	ldr	r3, [r3, #32]
 800b0fc:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800b100:	4718      	bx	r3
 800b102:	bd70      	pop	{r4, r5, r6, pc}

0800b104 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>:
 800b104:	b510      	push	{r4, lr}
 800b106:	4604      	mov	r4, r0
 800b108:	4608      	mov	r0, r1
 800b10a:	2300      	movs	r3, #0
 800b10c:	8023      	strh	r3, [r4, #0]
 800b10e:	8063      	strh	r3, [r4, #2]
 800b110:	6803      	ldr	r3, [r0, #0]
 800b112:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 800b116:	f9b1 1008 	ldrsh.w	r1, [r1, #8]
 800b11a:	80a1      	strh	r1, [r4, #4]
 800b11c:	80e2      	strh	r2, [r4, #6]
 800b11e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800b120:	4621      	mov	r1, r4
 800b122:	4798      	blx	r3
 800b124:	4620      	mov	r0, r4
 800b126:	bd10      	pop	{r4, pc}

0800b128 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEtthhhhhtt>:
 800b128:	b530      	push	{r4, r5, lr}
 800b12a:	8083      	strh	r3, [r0, #4]
 800b12c:	f89d 300c 	ldrb.w	r3, [sp, #12]
 800b130:	f89d 5010 	ldrb.w	r5, [sp, #16]
 800b134:	7183      	strb	r3, [r0, #6]
 800b136:	79c3      	ldrb	r3, [r0, #7]
 800b138:	6101      	str	r1, [r0, #16]
 800b13a:	f365 0306 	bfi	r3, r5, #0, #7
 800b13e:	f89d 5014 	ldrb.w	r5, [sp, #20]
 800b142:	8282      	strh	r2, [r0, #20]
 800b144:	f365 13c7 	bfi	r3, r5, #7, #1
 800b148:	71c3      	strb	r3, [r0, #7]
 800b14a:	f89d 3018 	ldrb.w	r3, [sp, #24]
 800b14e:	7203      	strb	r3, [r0, #8]
 800b150:	f89d 301c 	ldrb.w	r3, [sp, #28]
 800b154:	7243      	strb	r3, [r0, #9]
 800b156:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 800b15a:	8143      	strh	r3, [r0, #10]
 800b15c:	f8bd 3024 	ldrh.w	r3, [sp, #36]	; 0x24
 800b160:	8183      	strh	r3, [r0, #12]
 800b162:	4b01      	ldr	r3, [pc, #4]	; (800b168 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEtthhhhhtt+0x40>)
 800b164:	6003      	str	r3, [r0, #0]
 800b166:	bd30      	pop	{r4, r5, pc}
 800b168:	0801b124 	.word	0x0801b124

0800b16c <_ZNK8touchgfx9ConstFont4findEt>:
 800b16c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800b16e:	6904      	ldr	r4, [r0, #16]
 800b170:	8a82      	ldrh	r2, [r0, #20]
 800b172:	88a3      	ldrh	r3, [r4, #4]
 800b174:	1acb      	subs	r3, r1, r3
 800b176:	f102 32ff 	add.w	r2, r2, #4294967295
 800b17a:	d431      	bmi.n	800b1e0 <_ZNK8touchgfx9ConstFont4findEt+0x74>
 800b17c:	4293      	cmp	r3, r2
 800b17e:	dd0c      	ble.n	800b19a <_ZNK8touchgfx9ConstFont4findEt+0x2e>
 800b180:	230e      	movs	r3, #14
 800b182:	fb03 4302 	mla	r3, r3, r2, r4
 800b186:	889b      	ldrh	r3, [r3, #4]
 800b188:	1a5b      	subs	r3, r3, r1
 800b18a:	1ad3      	subs	r3, r2, r3
 800b18c:	429a      	cmp	r2, r3
 800b18e:	db27      	blt.n	800b1e0 <_ZNK8touchgfx9ConstFont4findEt+0x74>
 800b190:	2b00      	cmp	r3, #0
 800b192:	bfbc      	itt	lt
 800b194:	2302      	movlt	r3, #2
 800b196:	fb92 f3f3 	sdivlt	r3, r2, r3
 800b19a:	2500      	movs	r5, #0
 800b19c:	260e      	movs	r6, #14
 800b19e:	4295      	cmp	r5, r2
 800b1a0:	dc1e      	bgt.n	800b1e0 <_ZNK8touchgfx9ConstFont4findEt+0x74>
 800b1a2:	fb06 4003 	mla	r0, r6, r3, r4
 800b1a6:	8887      	ldrh	r7, [r0, #4]
 800b1a8:	42b9      	cmp	r1, r7
 800b1aa:	d01a      	beq.n	800b1e2 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800b1ac:	d20d      	bcs.n	800b1ca <_ZNK8touchgfx9ConstFont4findEt+0x5e>
 800b1ae:	1e5a      	subs	r2, r3, #1
 800b1b0:	4295      	cmp	r5, r2
 800b1b2:	dc15      	bgt.n	800b1e0 <_ZNK8touchgfx9ConstFont4findEt+0x74>
 800b1b4:	f830 3c0a 	ldrh.w	r3, [r0, #-10]
 800b1b8:	1a5b      	subs	r3, r3, r1
 800b1ba:	1ad3      	subs	r3, r2, r3
 800b1bc:	429a      	cmp	r2, r3
 800b1be:	db0f      	blt.n	800b1e0 <_ZNK8touchgfx9ConstFont4findEt+0x74>
 800b1c0:	429d      	cmp	r5, r3
 800b1c2:	ddec      	ble.n	800b19e <_ZNK8touchgfx9ConstFont4findEt+0x32>
 800b1c4:	1953      	adds	r3, r2, r5
 800b1c6:	105b      	asrs	r3, r3, #1
 800b1c8:	e7e9      	b.n	800b19e <_ZNK8touchgfx9ConstFont4findEt+0x32>
 800b1ca:	1c5d      	adds	r5, r3, #1
 800b1cc:	42aa      	cmp	r2, r5
 800b1ce:	db07      	blt.n	800b1e0 <_ZNK8touchgfx9ConstFont4findEt+0x74>
 800b1d0:	8a43      	ldrh	r3, [r0, #18]
 800b1d2:	1acb      	subs	r3, r1, r3
 800b1d4:	442b      	add	r3, r5
 800b1d6:	429d      	cmp	r5, r3
 800b1d8:	dc02      	bgt.n	800b1e0 <_ZNK8touchgfx9ConstFont4findEt+0x74>
 800b1da:	429a      	cmp	r2, r3
 800b1dc:	dadf      	bge.n	800b19e <_ZNK8touchgfx9ConstFont4findEt+0x32>
 800b1de:	e7f1      	b.n	800b1c4 <_ZNK8touchgfx9ConstFont4findEt+0x58>
 800b1e0:	2000      	movs	r0, #0
 800b1e2:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800b1e4 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh>:
 800b1e4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800b1e6:	4604      	mov	r4, r0
 800b1e8:	4617      	mov	r7, r2
 800b1ea:	461e      	mov	r6, r3
 800b1ec:	b911      	cbnz	r1, 800b1f4 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x10>
 800b1ee:	2500      	movs	r5, #0
 800b1f0:	4628      	mov	r0, r5
 800b1f2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800b1f4:	290a      	cmp	r1, #10
 800b1f6:	d0fa      	beq.n	800b1ee <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 800b1f8:	f64f 62ff 	movw	r2, #65279	; 0xfeff
 800b1fc:	4291      	cmp	r1, r2
 800b1fe:	d0f6      	beq.n	800b1ee <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 800b200:	f242 020b 	movw	r2, #8203	; 0x200b
 800b204:	4291      	cmp	r1, r2
 800b206:	d0f2      	beq.n	800b1ee <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 800b208:	f7ff ffb0 	bl	800b16c <_ZNK8touchgfx9ConstFont4findEt>
 800b20c:	4605      	mov	r5, r0
 800b20e:	b950      	cbnz	r0, 800b226 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x42>
 800b210:	6823      	ldr	r3, [r4, #0]
 800b212:	4620      	mov	r0, r4
 800b214:	691b      	ldr	r3, [r3, #16]
 800b216:	4798      	blx	r3
 800b218:	4601      	mov	r1, r0
 800b21a:	4620      	mov	r0, r4
 800b21c:	f7ff ffa6 	bl	800b16c <_ZNK8touchgfx9ConstFont4findEt>
 800b220:	4605      	mov	r5, r0
 800b222:	2800      	cmp	r0, #0
 800b224:	d0e3      	beq.n	800b1ee <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 800b226:	6823      	ldr	r3, [r4, #0]
 800b228:	4629      	mov	r1, r5
 800b22a:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800b22c:	4620      	mov	r0, r4
 800b22e:	4798      	blx	r3
 800b230:	6038      	str	r0, [r7, #0]
 800b232:	6823      	ldr	r3, [r4, #0]
 800b234:	4620      	mov	r0, r4
 800b236:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800b238:	4798      	blx	r3
 800b23a:	7030      	strb	r0, [r6, #0]
 800b23c:	e7d8      	b.n	800b1f0 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xc>

0800b23e <_ZN8touchgfx10ClickEvent12getEventTypeEv>:
 800b23e:	2000      	movs	r0, #0
 800b240:	4770      	bx	lr

0800b242 <_ZN8touchgfx9DragEvent12getEventTypeEv>:
 800b242:	2001      	movs	r0, #1
 800b244:	4770      	bx	lr

0800b246 <_ZN8touchgfx12GestureEvent12getEventTypeEv>:
 800b246:	2002      	movs	r0, #2
 800b248:	4770      	bx	lr

0800b24a <_ZN8touchgfx6ScreenD1Ev>:
 800b24a:	4770      	bx	lr

0800b24c <_ZN8touchgfx12GestureEventD1Ev>:
 800b24c:	4770      	bx	lr

0800b24e <_ZN8touchgfx9DragEventD1Ev>:
 800b24e:	4770      	bx	lr

0800b250 <_ZN8touchgfx10ClickEventD1Ev>:
 800b250:	4770      	bx	lr

0800b252 <_ZN8touchgfx10ClickEventD0Ev>:
 800b252:	b510      	push	{r4, lr}
 800b254:	210c      	movs	r1, #12
 800b256:	4604      	mov	r4, r0
 800b258:	f00c fe54 	bl	8017f04 <_ZdlPvj>
 800b25c:	4620      	mov	r0, r4
 800b25e:	bd10      	pop	{r4, pc}

0800b260 <_ZN8touchgfx9DragEventD0Ev>:
 800b260:	b510      	push	{r4, lr}
 800b262:	2110      	movs	r1, #16
 800b264:	4604      	mov	r4, r0
 800b266:	f00c fe4d 	bl	8017f04 <_ZdlPvj>
 800b26a:	4620      	mov	r0, r4
 800b26c:	bd10      	pop	{r4, pc}

0800b26e <_ZN8touchgfx12GestureEventD0Ev>:
 800b26e:	b510      	push	{r4, lr}
 800b270:	210c      	movs	r1, #12
 800b272:	4604      	mov	r4, r0
 800b274:	f00c fe46 	bl	8017f04 <_ZdlPvj>
 800b278:	4620      	mov	r0, r4
 800b27a:	bd10      	pop	{r4, pc}

0800b27c <_ZN8touchgfx6ScreenD0Ev>:
 800b27c:	b510      	push	{r4, lr}
 800b27e:	213c      	movs	r1, #60	; 0x3c
 800b280:	4604      	mov	r4, r0
 800b282:	f00c fe3f 	bl	8017f04 <_ZdlPvj>
 800b286:	4620      	mov	r0, r4
 800b288:	bd10      	pop	{r4, pc}
	...

0800b28c <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE>:
 800b28c:	b530      	push	{r4, r5, lr}
 800b28e:	460d      	mov	r5, r1
 800b290:	6b01      	ldr	r1, [r0, #48]	; 0x30
 800b292:	b087      	sub	sp, #28
 800b294:	4604      	mov	r4, r0
 800b296:	b301      	cbz	r1, 800b2da <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x4e>
 800b298:	a801      	add	r0, sp, #4
 800b29a:	f7ff ff33 	bl	800b104 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800b29e:	892a      	ldrh	r2, [r5, #8]
 800b2a0:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800b2a4:	7928      	ldrb	r0, [r5, #4]
 800b2a6:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 800b2aa:	f88d 0010 	strb.w	r0, [sp, #16]
 800b2ae:	1ad2      	subs	r2, r2, r3
 800b2b0:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 800b2b2:	6b20      	ldr	r0, [r4, #48]	; 0x30
 800b2b4:	f8ad 1012 	strh.w	r1, [sp, #18]
 800b2b8:	441a      	add	r2, r3
 800b2ba:	896b      	ldrh	r3, [r5, #10]
 800b2bc:	f8bd 5006 	ldrh.w	r5, [sp, #6]
 800b2c0:	f8ad 2014 	strh.w	r2, [sp, #20]
 800b2c4:	1b5b      	subs	r3, r3, r5
 800b2c6:	8ee5      	ldrh	r5, [r4, #54]	; 0x36
 800b2c8:	442b      	add	r3, r5
 800b2ca:	4d05      	ldr	r5, [pc, #20]	; (800b2e0 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x54>)
 800b2cc:	9503      	str	r5, [sp, #12]
 800b2ce:	f8ad 3016 	strh.w	r3, [sp, #22]
 800b2d2:	6803      	ldr	r3, [r0, #0]
 800b2d4:	a903      	add	r1, sp, #12
 800b2d6:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800b2d8:	4798      	blx	r3
 800b2da:	b007      	add	sp, #28
 800b2dc:	bd30      	pop	{r4, r5, pc}
 800b2de:	bf00      	nop
 800b2e0:	0801b1a0 	.word	0x0801b1a0

0800b2e4 <_ZNK8touchgfx4Rect9intersectEss>:
 800b2e4:	b510      	push	{r4, lr}
 800b2e6:	f9b0 3000 	ldrsh.w	r3, [r0]
 800b2ea:	428b      	cmp	r3, r1
 800b2ec:	dc10      	bgt.n	800b310 <_ZNK8touchgfx4Rect9intersectEss+0x2c>
 800b2ee:	8884      	ldrh	r4, [r0, #4]
 800b2f0:	4423      	add	r3, r4
 800b2f2:	b21b      	sxth	r3, r3
 800b2f4:	4299      	cmp	r1, r3
 800b2f6:	da0b      	bge.n	800b310 <_ZNK8touchgfx4Rect9intersectEss+0x2c>
 800b2f8:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 800b2fc:	4293      	cmp	r3, r2
 800b2fe:	dc07      	bgt.n	800b310 <_ZNK8touchgfx4Rect9intersectEss+0x2c>
 800b300:	88c0      	ldrh	r0, [r0, #6]
 800b302:	4418      	add	r0, r3
 800b304:	b200      	sxth	r0, r0
 800b306:	4282      	cmp	r2, r0
 800b308:	bfac      	ite	ge
 800b30a:	2000      	movge	r0, #0
 800b30c:	2001      	movlt	r0, #1
 800b30e:	bd10      	pop	{r4, pc}
 800b310:	2000      	movs	r0, #0
 800b312:	e7fc      	b.n	800b30e <_ZNK8touchgfx4Rect9intersectEss+0x2a>

0800b314 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE>:
 800b314:	b5f0      	push	{r4, r5, r6, r7, lr}
 800b316:	460c      	mov	r4, r1
 800b318:	6b01      	ldr	r1, [r0, #48]	; 0x30
 800b31a:	b089      	sub	sp, #36	; 0x24
 800b31c:	4605      	mov	r5, r0
 800b31e:	2900      	cmp	r1, #0
 800b320:	d054      	beq.n	800b3cc <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xb8>
 800b322:	4668      	mov	r0, sp
 800b324:	f7ff feee 	bl	800b104 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800b328:	8eae      	ldrh	r6, [r5, #52]	; 0x34
 800b32a:	8eef      	ldrh	r7, [r5, #54]	; 0x36
 800b32c:	8922      	ldrh	r2, [r4, #8]
 800b32e:	88e1      	ldrh	r1, [r4, #6]
 800b330:	443a      	add	r2, r7
 800b332:	4431      	add	r1, r6
 800b334:	b212      	sxth	r2, r2
 800b336:	b209      	sxth	r1, r1
 800b338:	4668      	mov	r0, sp
 800b33a:	f7ff ffd3 	bl	800b2e4 <_ZNK8touchgfx4Rect9intersectEss>
 800b33e:	b1d0      	cbz	r0, 800b376 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x62>
 800b340:	89a2      	ldrh	r2, [r4, #12]
 800b342:	8961      	ldrh	r1, [r4, #10]
 800b344:	443a      	add	r2, r7
 800b346:	4431      	add	r1, r6
 800b348:	b212      	sxth	r2, r2
 800b34a:	b209      	sxth	r1, r1
 800b34c:	4668      	mov	r0, sp
 800b34e:	f7ff ffc9 	bl	800b2e4 <_ZNK8touchgfx4Rect9intersectEss>
 800b352:	4603      	mov	r3, r0
 800b354:	b978      	cbnz	r0, 800b376 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x62>
 800b356:	4a1e      	ldr	r2, [pc, #120]	; (800b3d0 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xbc>)
 800b358:	9204      	str	r2, [sp, #16]
 800b35a:	6b28      	ldr	r0, [r5, #48]	; 0x30
 800b35c:	f8ad 3016 	strh.w	r3, [sp, #22]
 800b360:	2202      	movs	r2, #2
 800b362:	f88d 2014 	strb.w	r2, [sp, #20]
 800b366:	f8ad 3018 	strh.w	r3, [sp, #24]
 800b36a:	f8ad 301a 	strh.w	r3, [sp, #26]
 800b36e:	6803      	ldr	r3, [r0, #0]
 800b370:	a904      	add	r1, sp, #16
 800b372:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800b374:	4798      	blx	r3
 800b376:	6b29      	ldr	r1, [r5, #48]	; 0x30
 800b378:	a802      	add	r0, sp, #8
 800b37a:	f7ff fec3 	bl	800b104 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800b37e:	f8bd 2008 	ldrh.w	r2, [sp, #8]
 800b382:	88e0      	ldrh	r0, [r4, #6]
 800b384:	8961      	ldrh	r1, [r4, #10]
 800b386:	f8b5 c034 	ldrh.w	ip, [r5, #52]	; 0x34
 800b38a:	f8bd e00a 	ldrh.w	lr, [sp, #10]
 800b38e:	8923      	ldrh	r3, [r4, #8]
 800b390:	8eee      	ldrh	r6, [r5, #54]	; 0x36
 800b392:	7927      	ldrb	r7, [r4, #4]
 800b394:	f88d 7014 	strb.w	r7, [sp, #20]
 800b398:	1a80      	subs	r0, r0, r2
 800b39a:	1a89      	subs	r1, r1, r2
 800b39c:	89a2      	ldrh	r2, [r4, #12]
 800b39e:	4c0d      	ldr	r4, [pc, #52]	; (800b3d4 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xc0>)
 800b3a0:	9404      	str	r4, [sp, #16]
 800b3a2:	4460      	add	r0, ip
 800b3a4:	eba3 030e 	sub.w	r3, r3, lr
 800b3a8:	eba2 020e 	sub.w	r2, r2, lr
 800b3ac:	f8ad 0016 	strh.w	r0, [sp, #22]
 800b3b0:	4433      	add	r3, r6
 800b3b2:	4461      	add	r1, ip
 800b3b4:	4432      	add	r2, r6
 800b3b6:	6b28      	ldr	r0, [r5, #48]	; 0x30
 800b3b8:	f8ad 101a 	strh.w	r1, [sp, #26]
 800b3bc:	f8ad 3018 	strh.w	r3, [sp, #24]
 800b3c0:	f8ad 201c 	strh.w	r2, [sp, #28]
 800b3c4:	6803      	ldr	r3, [r0, #0]
 800b3c6:	a904      	add	r1, sp, #16
 800b3c8:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800b3ca:	4798      	blx	r3
 800b3cc:	b009      	add	sp, #36	; 0x24
 800b3ce:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800b3d0:	0801b178 	.word	0x0801b178
 800b3d4:	0801b18c 	.word	0x0801b18c

0800b3d8 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE>:
 800b3d8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b3dc:	f8d0 9030 	ldr.w	r9, [r0, #48]	; 0x30
 800b3e0:	790b      	ldrb	r3, [r1, #4]
 800b3e2:	b0a1      	sub	sp, #132	; 0x84
 800b3e4:	4604      	mov	r4, r0
 800b3e6:	460d      	mov	r5, r1
 800b3e8:	f1b9 0f00 	cmp.w	r9, #0
 800b3ec:	d00f      	beq.n	800b40e <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x36>
 800b3ee:	2b00      	cmp	r3, #0
 800b3f0:	f040 80a0 	bne.w	800b534 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x15c>
 800b3f4:	b021      	add	sp, #132	; 0x84
 800b3f6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800b3fa:	f104 0330 	add.w	r3, r4, #48	; 0x30
 800b3fe:	f9b5 2008 	ldrsh.w	r2, [r5, #8]
 800b402:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 800b406:	1d20      	adds	r0, r4, #4
 800b408:	f7fc fa1a 	bl	8007840 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 800b40c:	e092      	b.n	800b534 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x15c>
 800b40e:	2b00      	cmp	r3, #0
 800b410:	d1f0      	bne.n	800b3f4 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x1c>
 800b412:	4b5e      	ldr	r3, [pc, #376]	; (800b58c <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x1b4>)
 800b414:	681b      	ldr	r3, [r3, #0]
 800b416:	f893 a049 	ldrb.w	sl, [r3, #73]	; 0x49
 800b41a:	f8c4 9034 	str.w	r9, [r4, #52]	; 0x34
 800b41e:	f1ba 0f03 	cmp.w	sl, #3
 800b422:	ddea      	ble.n	800b3fa <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x22>
 800b424:	f1ba 0f0c 	cmp.w	sl, #12
 800b428:	f04f 0303 	mov.w	r3, #3
 800b42c:	bfdc      	itt	le
 800b42e:	f10a 32ff 	addle.w	r2, sl, #4294967295
 800b432:	fb92 f3f3 	sdivle	r3, r2, r3
 800b436:	9301      	str	r3, [sp, #4]
 800b438:	4b55      	ldr	r3, [pc, #340]	; (800b590 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x1b8>)
 800b43a:	4956      	ldr	r1, [pc, #344]	; (800b594 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x1bc>)
 800b43c:	f9b3 2000 	ldrsh.w	r2, [r3]
 800b440:	4b55      	ldr	r3, [pc, #340]	; (800b598 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x1c0>)
 800b442:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
 800b446:	f9b3 3000 	ldrsh.w	r3, [r3]
 800b44a:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 800b44e:	ab0e      	add	r3, sp, #56	; 0x38
 800b450:	2248      	movs	r2, #72	; 0x48
 800b452:	2600      	movs	r6, #0
 800b454:	4618      	mov	r0, r3
 800b456:	960a      	str	r6, [sp, #40]	; 0x28
 800b458:	f00c fdfe 	bl	8018058 <memcpy>
 800b45c:	f04f 32ff 	mov.w	r2, #4294967295
 800b460:	e9cd 2006 	strd	r2, r0, [sp, #24]
 800b464:	f8cd a008 	str.w	sl, [sp, #8]
 800b468:	e9dd 2301 	ldrd	r2, r3, [sp, #4]
 800b46c:	fb93 f3f2 	sdiv	r3, r3, r2
 800b470:	b29b      	uxth	r3, r3
 800b472:	46b3      	mov	fp, r6
 800b474:	9303      	str	r3, [sp, #12]
 800b476:	2300      	movs	r3, #0
 800b478:	9309      	str	r3, [sp, #36]	; 0x24
 800b47a:	9b07      	ldr	r3, [sp, #28]
 800b47c:	9a03      	ldr	r2, [sp, #12]
 800b47e:	f853 303b 	ldr.w	r3, [r3, fp, lsl #3]
 800b482:	88ef      	ldrh	r7, [r5, #6]
 800b484:	f8b5 8008 	ldrh.w	r8, [r5, #8]
 800b488:	fb13 f302 	smulbb	r3, r3, r2
 800b48c:	b29b      	uxth	r3, r3
 800b48e:	9304      	str	r3, [sp, #16]
 800b490:	9b07      	ldr	r3, [sp, #28]
 800b492:	eb03 03cb 	add.w	r3, r3, fp, lsl #3
 800b496:	a80a      	add	r0, sp, #40	; 0x28
 800b498:	685b      	ldr	r3, [r3, #4]
 800b49a:	fb13 f302 	smulbb	r3, r3, r2
 800b49e:	b29b      	uxth	r3, r3
 800b4a0:	9305      	str	r3, [sp, #20]
 800b4a2:	9b04      	ldr	r3, [sp, #16]
 800b4a4:	441f      	add	r7, r3
 800b4a6:	9b05      	ldr	r3, [sp, #20]
 800b4a8:	4498      	add	r8, r3
 800b4aa:	b23f      	sxth	r7, r7
 800b4ac:	fa0f f888 	sxth.w	r8, r8
 800b4b0:	4642      	mov	r2, r8
 800b4b2:	4639      	mov	r1, r7
 800b4b4:	f7ff ff16 	bl	800b2e4 <_ZNK8touchgfx4Rect9intersectEss>
 800b4b8:	b380      	cbz	r0, 800b51c <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x144>
 800b4ba:	4639      	mov	r1, r7
 800b4bc:	ab09      	add	r3, sp, #36	; 0x24
 800b4be:	4642      	mov	r2, r8
 800b4c0:	1d20      	adds	r0, r4, #4
 800b4c2:	f7fc f9bd 	bl	8007840 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 800b4c6:	9909      	ldr	r1, [sp, #36]	; 0x24
 800b4c8:	b341      	cbz	r1, 800b51c <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x144>
 800b4ca:	4549      	cmp	r1, r9
 800b4cc:	d026      	beq.n	800b51c <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x144>
 800b4ce:	a80c      	add	r0, sp, #48	; 0x30
 800b4d0:	f7ff fe18 	bl	800b104 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800b4d4:	f9bd 1030 	ldrsh.w	r1, [sp, #48]	; 0x30
 800b4d8:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 800b4dc:	f9bd 2034 	ldrsh.w	r2, [sp, #52]	; 0x34
 800b4e0:	2002      	movs	r0, #2
 800b4e2:	fb92 f2f0 	sdiv	r2, r2, r0
 800b4e6:	440a      	add	r2, r1
 800b4e8:	1a99      	subs	r1, r3, r2
 800b4ea:	f9bd 3036 	ldrsh.w	r3, [sp, #54]	; 0x36
 800b4ee:	fb93 f3f0 	sdiv	r3, r3, r0
 800b4f2:	f9bd 0032 	ldrsh.w	r0, [sp, #50]	; 0x32
 800b4f6:	f9b5 2008 	ldrsh.w	r2, [r5, #8]
 800b4fa:	4403      	add	r3, r0
 800b4fc:	1ad3      	subs	r3, r2, r3
 800b4fe:	435b      	muls	r3, r3
 800b500:	9a06      	ldr	r2, [sp, #24]
 800b502:	fb01 3301 	mla	r3, r1, r1, r3
 800b506:	4293      	cmp	r3, r2
 800b508:	d208      	bcs.n	800b51c <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x144>
 800b50a:	9a04      	ldr	r2, [sp, #16]
 800b50c:	f8dd 9024 	ldr.w	r9, [sp, #36]	; 0x24
 800b510:	86a2      	strh	r2, [r4, #52]	; 0x34
 800b512:	9a05      	ldr	r2, [sp, #20]
 800b514:	f8c4 9030 	str.w	r9, [r4, #48]	; 0x30
 800b518:	86e2      	strh	r2, [r4, #54]	; 0x36
 800b51a:	9306      	str	r3, [sp, #24]
 800b51c:	f10b 0b02 	add.w	fp, fp, #2
 800b520:	f1bb 0f08 	cmp.w	fp, #8
 800b524:	dda7      	ble.n	800b476 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 800b526:	9b02      	ldr	r3, [sp, #8]
 800b528:	4453      	add	r3, sl
 800b52a:	9302      	str	r3, [sp, #8]
 800b52c:	9b01      	ldr	r3, [sp, #4]
 800b52e:	3601      	adds	r6, #1
 800b530:	42b3      	cmp	r3, r6
 800b532:	d199      	bne.n	800b468 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x90>
 800b534:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800b536:	2900      	cmp	r1, #0
 800b538:	f43f af5c 	beq.w	800b3f4 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x1c>
 800b53c:	a80c      	add	r0, sp, #48	; 0x30
 800b53e:	f7ff fde1 	bl	800b104 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800b542:	f8bd 3030 	ldrh.w	r3, [sp, #48]	; 0x30
 800b546:	88ea      	ldrh	r2, [r5, #6]
 800b548:	f8bd 0032 	ldrh.w	r0, [sp, #50]	; 0x32
 800b54c:	7929      	ldrb	r1, [r5, #4]
 800b54e:	f88d 103c 	strb.w	r1, [sp, #60]	; 0x3c
 800b552:	1ad2      	subs	r2, r2, r3
 800b554:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 800b556:	441a      	add	r2, r3
 800b558:	892b      	ldrh	r3, [r5, #8]
 800b55a:	f8ad 203e 	strh.w	r2, [sp, #62]	; 0x3e
 800b55e:	1a1b      	subs	r3, r3, r0
 800b560:	8ee0      	ldrh	r0, [r4, #54]	; 0x36
 800b562:	4403      	add	r3, r0
 800b564:	480d      	ldr	r0, [pc, #52]	; (800b59c <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x1c4>)
 800b566:	900e      	str	r0, [sp, #56]	; 0x38
 800b568:	2600      	movs	r6, #0
 800b56a:	6b20      	ldr	r0, [r4, #48]	; 0x30
 800b56c:	f8ad 3040 	strh.w	r3, [sp, #64]	; 0x40
 800b570:	f8ad 6042 	strh.w	r6, [sp, #66]	; 0x42
 800b574:	6803      	ldr	r3, [r0, #0]
 800b576:	a90e      	add	r1, sp, #56	; 0x38
 800b578:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800b57a:	4798      	blx	r3
 800b57c:	792b      	ldrb	r3, [r5, #4]
 800b57e:	2b00      	cmp	r3, #0
 800b580:	f43f af38 	beq.w	800b3f4 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x1c>
 800b584:	e9c4 660c 	strd	r6, r6, [r4, #48]	; 0x30
 800b588:	e734      	b.n	800b3f4 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x1c>
 800b58a:	bf00      	nop
 800b58c:	20012178 	.word	0x20012178
 800b590:	2001216c 	.word	0x2001216c
 800b594:	08018f80 	.word	0x08018f80
 800b598:	2001216e 	.word	0x2001216e
 800b59c:	0801b178 	.word	0x0801b178

0800b5a0 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>:
 800b5a0:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800b5a2:	4604      	mov	r4, r0
 800b5a4:	f934 2f0c 	ldrsh.w	r2, [r4, #12]!
 800b5a8:	3201      	adds	r2, #1
 800b5aa:	d112      	bne.n	800b5d2 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv+0x32>
 800b5ac:	6803      	ldr	r3, [r0, #0]
 800b5ae:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 800b5b2:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 800b5b6:	f8ad 1004 	strh.w	r1, [sp, #4]
 800b5ba:	2500      	movs	r5, #0
 800b5bc:	9500      	str	r5, [sp, #0]
 800b5be:	466d      	mov	r5, sp
 800b5c0:	4629      	mov	r1, r5
 800b5c2:	f8ad 2006 	strh.w	r2, [sp, #6]
 800b5c6:	6a1b      	ldr	r3, [r3, #32]
 800b5c8:	4798      	blx	r3
 800b5ca:	e895 0003 	ldmia.w	r5, {r0, r1}
 800b5ce:	e884 0003 	stmia.w	r4, {r0, r1}
 800b5d2:	4620      	mov	r0, r4
 800b5d4:	b003      	add	sp, #12
 800b5d6:	bd30      	pop	{r4, r5, pc}

0800b5d8 <_ZN8touchgfx8Drawable13getCachedAbsXEv>:
 800b5d8:	b513      	push	{r0, r1, r4, lr}
 800b5da:	f9b0 3020 	ldrsh.w	r3, [r0, #32]
 800b5de:	3301      	adds	r3, #1
 800b5e0:	4604      	mov	r4, r0
 800b5e2:	d109      	bne.n	800b5f8 <_ZN8touchgfx8Drawable13getCachedAbsXEv+0x20>
 800b5e4:	4601      	mov	r1, r0
 800b5e6:	4668      	mov	r0, sp
 800b5e8:	f7ff fd8c 	bl	800b104 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800b5ec:	f8bd 3000 	ldrh.w	r3, [sp]
 800b5f0:	8423      	strh	r3, [r4, #32]
 800b5f2:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800b5f6:	8463      	strh	r3, [r4, #34]	; 0x22
 800b5f8:	f9b4 0020 	ldrsh.w	r0, [r4, #32]
 800b5fc:	b002      	add	sp, #8
 800b5fe:	bd10      	pop	{r4, pc}

0800b600 <_ZN8touchgfx8Drawable13getCachedAbsYEv>:
 800b600:	b513      	push	{r0, r1, r4, lr}
 800b602:	f9b0 3022 	ldrsh.w	r3, [r0, #34]	; 0x22
 800b606:	3301      	adds	r3, #1
 800b608:	4604      	mov	r4, r0
 800b60a:	d109      	bne.n	800b620 <_ZN8touchgfx8Drawable13getCachedAbsYEv+0x20>
 800b60c:	4601      	mov	r1, r0
 800b60e:	4668      	mov	r0, sp
 800b610:	f7ff fd78 	bl	800b104 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800b614:	f8bd 3000 	ldrh.w	r3, [sp]
 800b618:	8423      	strh	r3, [r4, #32]
 800b61a:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800b61e:	8463      	strh	r3, [r4, #34]	; 0x22
 800b620:	f9b4 0022 	ldrsh.w	r0, [r4, #34]	; 0x22
 800b624:	b002      	add	sp, #8
 800b626:	bd10      	pop	{r4, pc}

0800b628 <_ZN8touchgfx6ScreenC1Ev>:
 800b628:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800b62a:	4605      	mov	r5, r0
 800b62c:	4b17      	ldr	r3, [pc, #92]	; (800b68c <_ZN8touchgfx6ScreenC1Ev+0x64>)
 800b62e:	f845 3b04 	str.w	r3, [r5], #4
 800b632:	2301      	movs	r3, #1
 800b634:	f880 3029 	strb.w	r3, [r0, #41]	; 0x29
 800b638:	f880 3038 	strb.w	r3, [r0, #56]	; 0x38
 800b63c:	4b14      	ldr	r3, [pc, #80]	; (800b690 <_ZN8touchgfx6ScreenC1Ev+0x68>)
 800b63e:	4915      	ldr	r1, [pc, #84]	; (800b694 <_ZN8touchgfx6ScreenC1Ev+0x6c>)
 800b640:	f9b3 7000 	ldrsh.w	r7, [r3]
 800b644:	4b14      	ldr	r3, [pc, #80]	; (800b698 <_ZN8touchgfx6ScreenC1Ev+0x70>)
 800b646:	6041      	str	r1, [r0, #4]
 800b648:	2200      	movs	r2, #0
 800b64a:	8102      	strh	r2, [r0, #8]
 800b64c:	8142      	strh	r2, [r0, #10]
 800b64e:	8182      	strh	r2, [r0, #12]
 800b650:	81c2      	strh	r2, [r0, #14]
 800b652:	8202      	strh	r2, [r0, #16]
 800b654:	8242      	strh	r2, [r0, #18]
 800b656:	8282      	strh	r2, [r0, #20]
 800b658:	82c2      	strh	r2, [r0, #22]
 800b65a:	e9c0 2206 	strd	r2, r2, [r0, #24]
 800b65e:	6202      	str	r2, [r0, #32]
 800b660:	f880 2028 	strb.w	r2, [r0, #40]	; 0x28
 800b664:	e9c0 220b 	strd	r2, r2, [r0, #44]	; 0x2c
 800b668:	6342      	str	r2, [r0, #52]	; 0x34
 800b66a:	f9b3 6000 	ldrsh.w	r6, [r3]
 800b66e:	4611      	mov	r1, r2
 800b670:	4604      	mov	r4, r0
 800b672:	4628      	mov	r0, r5
 800b674:	f7f6 ff16 	bl	80024a4 <_ZN8touchgfx8Drawable5setXYEss>
 800b678:	4639      	mov	r1, r7
 800b67a:	4628      	mov	r0, r5
 800b67c:	f7f6 ff1f 	bl	80024be <_ZN8touchgfx8Drawable8setWidthEs>
 800b680:	4628      	mov	r0, r5
 800b682:	4631      	mov	r1, r6
 800b684:	f7f6 ff1d 	bl	80024c2 <_ZN8touchgfx8Drawable9setHeightEs>
 800b688:	4620      	mov	r0, r4
 800b68a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800b68c:	0801b1b4 	.word	0x0801b1b4
 800b690:	2001216c 	.word	0x2001216c
 800b694:	0801a064 	.word	0x0801a064
 800b698:	2001216e 	.word	0x2001216e

0800b69c <_ZN8touchgfx6Screen4drawEv>:
 800b69c:	b507      	push	{r0, r1, r2, lr}
 800b69e:	4b09      	ldr	r3, [pc, #36]	; (800b6c4 <_ZN8touchgfx6Screen4drawEv+0x28>)
 800b6a0:	f9b3 2000 	ldrsh.w	r2, [r3]
 800b6a4:	4b08      	ldr	r3, [pc, #32]	; (800b6c8 <_ZN8touchgfx6Screen4drawEv+0x2c>)
 800b6a6:	f8ad 2004 	strh.w	r2, [sp, #4]
 800b6aa:	f9b3 3000 	ldrsh.w	r3, [r3]
 800b6ae:	f8ad 3006 	strh.w	r3, [sp, #6]
 800b6b2:	6803      	ldr	r3, [r0, #0]
 800b6b4:	2100      	movs	r1, #0
 800b6b6:	9100      	str	r1, [sp, #0]
 800b6b8:	689b      	ldr	r3, [r3, #8]
 800b6ba:	4669      	mov	r1, sp
 800b6bc:	4798      	blx	r3
 800b6be:	b003      	add	sp, #12
 800b6c0:	f85d fb04 	ldr.w	pc, [sp], #4
 800b6c4:	2001216c 	.word	0x2001216c
 800b6c8:	2001216e 	.word	0x2001216e

0800b6cc <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>:
 800b6cc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b6d0:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
 800b6d4:	2b00      	cmp	r3, #0
 800b6d6:	b089      	sub	sp, #36	; 0x24
 800b6d8:	4680      	mov	r8, r0
 800b6da:	460c      	mov	r4, r1
 800b6dc:	4615      	mov	r5, r2
 800b6de:	dd0e      	ble.n	800b6fe <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 800b6e0:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
 800b6e4:	2b00      	cmp	r3, #0
 800b6e6:	dd0a      	ble.n	800b6fe <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 800b6e8:	4628      	mov	r0, r5
 800b6ea:	f7ff ff59 	bl	800b5a0 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 800b6ee:	4621      	mov	r1, r4
 800b6f0:	f7fe ff06 	bl	800a500 <_ZNK8touchgfx4Rect9intersectERKS0_>
 800b6f4:	69eb      	ldr	r3, [r5, #28]
 800b6f6:	b928      	cbnz	r0, 800b704 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x38>
 800b6f8:	461d      	mov	r5, r3
 800b6fa:	2b00      	cmp	r3, #0
 800b6fc:	d1f4      	bne.n	800b6e8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1c>
 800b6fe:	b009      	add	sp, #36	; 0x24
 800b700:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800b704:	ae04      	add	r6, sp, #16
 800b706:	2b00      	cmp	r3, #0
 800b708:	d051      	beq.n	800b7ae <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xe2>
 800b70a:	682b      	ldr	r3, [r5, #0]
 800b70c:	4629      	mov	r1, r5
 800b70e:	68db      	ldr	r3, [r3, #12]
 800b710:	a802      	add	r0, sp, #8
 800b712:	4798      	blx	r3
 800b714:	4628      	mov	r0, r5
 800b716:	f7ff ff5f 	bl	800b5d8 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 800b71a:	f8bd 7008 	ldrh.w	r7, [sp, #8]
 800b71e:	4407      	add	r7, r0
 800b720:	4628      	mov	r0, r5
 800b722:	f7ff ff6d 	bl	800b600 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 800b726:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 800b72a:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 800b72e:	f8ad 2014 	strh.w	r2, [sp, #20]
 800b732:	4418      	add	r0, r3
 800b734:	4621      	mov	r1, r4
 800b736:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 800b73a:	f8ad 0012 	strh.w	r0, [sp, #18]
 800b73e:	b23f      	sxth	r7, r7
 800b740:	4630      	mov	r0, r6
 800b742:	f8ad 3016 	strh.w	r3, [sp, #22]
 800b746:	f8ad 7010 	strh.w	r7, [sp, #16]
 800b74a:	f7fc f933 	bl	80079b4 <_ZN8touchgfx4RectaNERKS0_>
 800b74e:	4628      	mov	r0, r5
 800b750:	f7ff ff26 	bl	800b5a0 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 800b754:	4602      	mov	r2, r0
 800b756:	e896 0003 	ldmia.w	r6, {r0, r1}
 800b75a:	ab06      	add	r3, sp, #24
 800b75c:	e883 0003 	stmia.w	r3, {r0, r1}
 800b760:	4611      	mov	r1, r2
 800b762:	4618      	mov	r0, r3
 800b764:	f7fc f926 	bl	80079b4 <_ZN8touchgfx4RectaNERKS0_>
 800b768:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 800b76c:	f9b4 1000 	ldrsh.w	r1, [r4]
 800b770:	f9bd a01a 	ldrsh.w	sl, [sp, #26]
 800b774:	f9bd b01c 	ldrsh.w	fp, [sp, #28]
 800b778:	f9bd 901e 	ldrsh.w	r9, [sp, #30]
 800b77c:	4299      	cmp	r1, r3
 800b77e:	d10b      	bne.n	800b798 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xcc>
 800b780:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 800b784:	4552      	cmp	r2, sl
 800b786:	d107      	bne.n	800b798 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xcc>
 800b788:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 800b78c:	455a      	cmp	r2, fp
 800b78e:	d103      	bne.n	800b798 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xcc>
 800b790:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 800b794:	454a      	cmp	r2, r9
 800b796:	d00a      	beq.n	800b7ae <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xe2>
 800b798:	f1bb 0f00 	cmp.w	fp, #0
 800b79c:	d002      	beq.n	800b7a4 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xd8>
 800b79e:	f1b9 0f00 	cmp.w	r9, #0
 800b7a2:	d12e      	bne.n	800b802 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x136>
 800b7a4:	69ea      	ldr	r2, [r5, #28]
 800b7a6:	4621      	mov	r1, r4
 800b7a8:	4640      	mov	r0, r8
 800b7aa:	f7ff ff8f 	bl	800b6cc <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 800b7ae:	4628      	mov	r0, r5
 800b7b0:	f7ff fef6 	bl	800b5a0 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 800b7b4:	6861      	ldr	r1, [r4, #4]
 800b7b6:	4602      	mov	r2, r0
 800b7b8:	6820      	ldr	r0, [r4, #0]
 800b7ba:	4633      	mov	r3, r6
 800b7bc:	c303      	stmia	r3!, {r0, r1}
 800b7be:	4611      	mov	r1, r2
 800b7c0:	4630      	mov	r0, r6
 800b7c2:	f7fc f8f7 	bl	80079b4 <_ZN8touchgfx4RectaNERKS0_>
 800b7c6:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 800b7ca:	2b00      	cmp	r3, #0
 800b7cc:	dd97      	ble.n	800b6fe <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 800b7ce:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 800b7d2:	2b00      	cmp	r3, #0
 800b7d4:	dd93      	ble.n	800b6fe <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 800b7d6:	4628      	mov	r0, r5
 800b7d8:	f7ff fefe 	bl	800b5d8 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 800b7dc:	f8bd 3010 	ldrh.w	r3, [sp, #16]
 800b7e0:	1a18      	subs	r0, r3, r0
 800b7e2:	f8ad 0010 	strh.w	r0, [sp, #16]
 800b7e6:	4628      	mov	r0, r5
 800b7e8:	f7ff ff0a 	bl	800b600 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 800b7ec:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800b7f0:	1a18      	subs	r0, r3, r0
 800b7f2:	f8ad 0012 	strh.w	r0, [sp, #18]
 800b7f6:	682b      	ldr	r3, [r5, #0]
 800b7f8:	4631      	mov	r1, r6
 800b7fa:	689b      	ldr	r3, [r3, #8]
 800b7fc:	4628      	mov	r0, r5
 800b7fe:	4798      	blx	r3
 800b800:	e77d      	b.n	800b6fe <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 800b802:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 800b806:	fa1f f08a 	uxth.w	r0, sl
 800b80a:	4552      	cmp	r2, sl
 800b80c:	9000      	str	r0, [sp, #0]
 800b80e:	da12      	bge.n	800b836 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x16a>
 800b810:	9301      	str	r3, [sp, #4]
 800b812:	9b00      	ldr	r3, [sp, #0]
 800b814:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 800b818:	f8ad 2012 	strh.w	r2, [sp, #18]
 800b81c:	1a9a      	subs	r2, r3, r2
 800b81e:	f8ad 1010 	strh.w	r1, [sp, #16]
 800b822:	f8ad 0014 	strh.w	r0, [sp, #20]
 800b826:	f8ad 2016 	strh.w	r2, [sp, #22]
 800b82a:	69ea      	ldr	r2, [r5, #28]
 800b82c:	4631      	mov	r1, r6
 800b82e:	4640      	mov	r0, r8
 800b830:	f7ff ff4c 	bl	800b6cc <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 800b834:	9b01      	ldr	r3, [sp, #4]
 800b836:	f9b4 2000 	ldrsh.w	r2, [r4]
 800b83a:	429a      	cmp	r2, r3
 800b83c:	b29f      	uxth	r7, r3
 800b83e:	da0d      	bge.n	800b85c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x190>
 800b840:	f8ad 2010 	strh.w	r2, [sp, #16]
 800b844:	1aba      	subs	r2, r7, r2
 800b846:	f8ad a012 	strh.w	sl, [sp, #18]
 800b84a:	f8ad 2014 	strh.w	r2, [sp, #20]
 800b84e:	f8ad 9016 	strh.w	r9, [sp, #22]
 800b852:	69ea      	ldr	r2, [r5, #28]
 800b854:	4631      	mov	r1, r6
 800b856:	4640      	mov	r0, r8
 800b858:	f7ff ff38 	bl	800b6cc <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 800b85c:	8822      	ldrh	r2, [r4, #0]
 800b85e:	88a3      	ldrh	r3, [r4, #4]
 800b860:	445f      	add	r7, fp
 800b862:	4413      	add	r3, r2
 800b864:	b29b      	uxth	r3, r3
 800b866:	b2bf      	uxth	r7, r7
 800b868:	b23a      	sxth	r2, r7
 800b86a:	b219      	sxth	r1, r3
 800b86c:	4291      	cmp	r1, r2
 800b86e:	dd0d      	ble.n	800b88c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1c0>
 800b870:	1bdb      	subs	r3, r3, r7
 800b872:	f8ad 2010 	strh.w	r2, [sp, #16]
 800b876:	f8ad a012 	strh.w	sl, [sp, #18]
 800b87a:	f8ad 3014 	strh.w	r3, [sp, #20]
 800b87e:	f8ad 9016 	strh.w	r9, [sp, #22]
 800b882:	69ea      	ldr	r2, [r5, #28]
 800b884:	4631      	mov	r1, r6
 800b886:	4640      	mov	r0, r8
 800b888:	f7ff ff20 	bl	800b6cc <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 800b88c:	88e2      	ldrh	r2, [r4, #6]
 800b88e:	8863      	ldrh	r3, [r4, #2]
 800b890:	4413      	add	r3, r2
 800b892:	9a00      	ldr	r2, [sp, #0]
 800b894:	444a      	add	r2, r9
 800b896:	b29b      	uxth	r3, r3
 800b898:	fa1f f982 	uxth.w	r9, r2
 800b89c:	fa0f f289 	sxth.w	r2, r9
 800b8a0:	b219      	sxth	r1, r3
 800b8a2:	428a      	cmp	r2, r1
 800b8a4:	da83      	bge.n	800b7ae <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xe2>
 800b8a6:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 800b8aa:	f9b4 0000 	ldrsh.w	r0, [r4]
 800b8ae:	f8ad 1014 	strh.w	r1, [sp, #20]
 800b8b2:	eba3 0309 	sub.w	r3, r3, r9
 800b8b6:	f8ad 0010 	strh.w	r0, [sp, #16]
 800b8ba:	f8ad 2012 	strh.w	r2, [sp, #18]
 800b8be:	f8ad 3016 	strh.w	r3, [sp, #22]
 800b8c2:	69ea      	ldr	r2, [r5, #28]
 800b8c4:	4631      	mov	r1, r6
 800b8c6:	e76f      	b.n	800b7a8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xdc>

0800b8c8 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>:
 800b8c8:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800b8ca:	aa02      	add	r2, sp, #8
 800b8cc:	2300      	movs	r3, #0
 800b8ce:	f842 3d04 	str.w	r3, [r2, #-4]!
 800b8d2:	4604      	mov	r4, r0
 800b8d4:	3004      	adds	r0, #4
 800b8d6:	460d      	mov	r5, r1
 800b8d8:	f7fc f944 	bl	8007b64 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>
 800b8dc:	9a01      	ldr	r2, [sp, #4]
 800b8de:	b11a      	cbz	r2, 800b8e8 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE+0x20>
 800b8e0:	4629      	mov	r1, r5
 800b8e2:	4620      	mov	r0, r4
 800b8e4:	f7ff fef2 	bl	800b6cc <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 800b8e8:	b003      	add	sp, #12
 800b8ea:	bd30      	pop	{r4, r5, pc}

0800b8ec <_ZN8touchgfx6Screen4drawERNS_4RectE>:
 800b8ec:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800b8ee:	4602      	mov	r2, r0
 800b8f0:	4604      	mov	r4, r0
 800b8f2:	f852 0f08 	ldr.w	r0, [r2, #8]!
 800b8f6:	460d      	mov	r5, r1
 800b8f8:	6851      	ldr	r1, [r2, #4]
 800b8fa:	466b      	mov	r3, sp
 800b8fc:	c303      	stmia	r3!, {r0, r1}
 800b8fe:	4629      	mov	r1, r5
 800b900:	4668      	mov	r0, sp
 800b902:	f7fc f857 	bl	80079b4 <_ZN8touchgfx4RectaNERKS0_>
 800b906:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 800b90a:	4669      	mov	r1, sp
 800b90c:	b123      	cbz	r3, 800b918 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2c>
 800b90e:	4620      	mov	r0, r4
 800b910:	f7ff ffda 	bl	800b8c8 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>
 800b914:	b003      	add	sp, #12
 800b916:	bd30      	pop	{r4, r5, pc}
 800b918:	1d20      	adds	r0, r4, #4
 800b91a:	f7fc f8ea 	bl	8007af2 <_ZNK8touchgfx9Container4drawERKNS_4RectE>
 800b91e:	e7f9      	b.n	800b914 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x28>

0800b920 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>:
 800b920:	680a      	ldr	r2, [r1, #0]
 800b922:	460b      	mov	r3, r1
 800b924:	6992      	ldr	r2, [r2, #24]
 800b926:	1d01      	adds	r1, r0, #4
 800b928:	4618      	mov	r0, r3
 800b92a:	4710      	bx	r2

0800b92c <_ZN8touchgfx12TextProviderC1Ev>:
 800b92c:	b510      	push	{r4, lr}
 800b92e:	2300      	movs	r3, #0
 800b930:	2201      	movs	r2, #1
 800b932:	4604      	mov	r4, r0
 800b934:	e9c0 3300 	strd	r3, r3, [r0]
 800b938:	60c3      	str	r3, [r0, #12]
 800b93a:	7403      	strb	r3, [r0, #16]
 800b93c:	82c3      	strh	r3, [r0, #22]
 800b93e:	8303      	strh	r3, [r0, #24]
 800b940:	85c3      	strh	r3, [r0, #46]	; 0x2e
 800b942:	8603      	strh	r3, [r0, #48]	; 0x30
 800b944:	86c3      	strh	r3, [r0, #54]	; 0x36
 800b946:	8703      	strh	r3, [r0, #56]	; 0x38
 800b948:	63c3      	str	r3, [r0, #60]	; 0x3c
 800b94a:	f8a0 304e 	strh.w	r3, [r0, #78]	; 0x4e
 800b94e:	f8a0 3050 	strh.w	r3, [r0, #80]	; 0x50
 800b952:	f8a0 3052 	strh.w	r3, [r0, #82]	; 0x52
 800b956:	f880 2054 	strb.w	r2, [r0, #84]	; 0x54
 800b95a:	f880 3055 	strb.w	r3, [r0, #85]	; 0x55
 800b95e:	f7f6 fd19 	bl	8002394 <_ZN8touchgfx12TextProvider18initializeInternalEv>
 800b962:	4620      	mov	r0, r4
 800b964:	bd10      	pop	{r4, pc}

0800b966 <_ZN8touchgfx12TextProvider19getNextCharInternalEv>:
 800b966:	b530      	push	{r4, r5, lr}
 800b968:	2500      	movs	r5, #0
 800b96a:	2401      	movs	r4, #1
 800b96c:	6843      	ldr	r3, [r0, #4]
 800b96e:	b913      	cbnz	r3, 800b976 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x10>
 800b970:	6803      	ldr	r3, [r0, #0]
 800b972:	b1f3      	cbz	r3, 800b9b2 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x4c>
 800b974:	6043      	str	r3, [r0, #4]
 800b976:	7c03      	ldrb	r3, [r0, #16]
 800b978:	b143      	cbz	r3, 800b98c <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x26>
 800b97a:	68c3      	ldr	r3, [r0, #12]
 800b97c:	b12b      	cbz	r3, 800b98a <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 800b97e:	881a      	ldrh	r2, [r3, #0]
 800b980:	b11a      	cbz	r2, 800b98a <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 800b982:	1c9a      	adds	r2, r3, #2
 800b984:	60c2      	str	r2, [r0, #12]
 800b986:	8818      	ldrh	r0, [r3, #0]
 800b988:	bd30      	pop	{r4, r5, pc}
 800b98a:	7405      	strb	r5, [r0, #16]
 800b98c:	6843      	ldr	r3, [r0, #4]
 800b98e:	8819      	ldrh	r1, [r3, #0]
 800b990:	b179      	cbz	r1, 800b9b2 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x4c>
 800b992:	1c9a      	adds	r2, r3, #2
 800b994:	2902      	cmp	r1, #2
 800b996:	6042      	str	r2, [r0, #4]
 800b998:	d1f5      	bne.n	800b986 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x20>
 800b99a:	6883      	ldr	r3, [r0, #8]
 800b99c:	1d1a      	adds	r2, r3, #4
 800b99e:	6082      	str	r2, [r0, #8]
 800b9a0:	681b      	ldr	r3, [r3, #0]
 800b9a2:	60c3      	str	r3, [r0, #12]
 800b9a4:	2b00      	cmp	r3, #0
 800b9a6:	d0e1      	beq.n	800b96c <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 800b9a8:	881b      	ldrh	r3, [r3, #0]
 800b9aa:	2b00      	cmp	r3, #0
 800b9ac:	d0de      	beq.n	800b96c <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 800b9ae:	7404      	strb	r4, [r0, #16]
 800b9b0:	e7dc      	b.n	800b96c <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 800b9b2:	2000      	movs	r0, #0
 800b9b4:	e7e8      	b.n	800b988 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x22>

0800b9b6 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_>:
 800b9b6:	b410      	push	{r4}
 800b9b8:	63c3      	str	r3, [r0, #60]	; 0x3c
 800b9ba:	2300      	movs	r3, #0
 800b9bc:	6082      	str	r2, [r0, #8]
 800b9be:	6001      	str	r1, [r0, #0]
 800b9c0:	6043      	str	r3, [r0, #4]
 800b9c2:	60c3      	str	r3, [r0, #12]
 800b9c4:	7403      	strb	r3, [r0, #16]
 800b9c6:	8603      	strh	r3, [r0, #48]	; 0x30
 800b9c8:	8303      	strh	r3, [r0, #24]
 800b9ca:	8703      	strh	r3, [r0, #56]	; 0x38
 800b9cc:	f85d 4b04 	ldr.w	r4, [sp], #4
 800b9d0:	f7f6 bce0 	b.w	8002394 <_ZN8touchgfx12TextProvider18initializeInternalEv>

0800b9d4 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>:
 800b9d4:	b5f0      	push	{r4, r5, r6, r7, lr}
 800b9d6:	4605      	mov	r5, r0
 800b9d8:	4608      	mov	r0, r1
 800b9da:	b1e9      	cbz	r1, 800ba18 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x44>
 800b9dc:	f105 0440 	add.w	r4, r5, #64	; 0x40
 800b9e0:	460b      	mov	r3, r1
 800b9e2:	f101 0708 	add.w	r7, r1, #8
 800b9e6:	4622      	mov	r2, r4
 800b9e8:	6818      	ldr	r0, [r3, #0]
 800b9ea:	6859      	ldr	r1, [r3, #4]
 800b9ec:	4626      	mov	r6, r4
 800b9ee:	c603      	stmia	r6!, {r0, r1}
 800b9f0:	3308      	adds	r3, #8
 800b9f2:	42bb      	cmp	r3, r7
 800b9f4:	4634      	mov	r4, r6
 800b9f6:	d1f7      	bne.n	800b9e8 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x14>
 800b9f8:	6818      	ldr	r0, [r3, #0]
 800b9fa:	6030      	str	r0, [r6, #0]
 800b9fc:	889b      	ldrh	r3, [r3, #4]
 800b9fe:	80b3      	strh	r3, [r6, #4]
 800ba00:	f895 304d 	ldrb.w	r3, [r5, #77]	; 0x4d
 800ba04:	015b      	lsls	r3, r3, #5
 800ba06:	f403 7180 	and.w	r1, r3, #256	; 0x100
 800ba0a:	f895 3046 	ldrb.w	r3, [r5, #70]	; 0x46
 800ba0e:	430b      	orrs	r3, r1
 800ba10:	425b      	negs	r3, r3
 800ba12:	f885 3049 	strb.w	r3, [r5, #73]	; 0x49
 800ba16:	4610      	mov	r0, r2
 800ba18:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800ba1a <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>:
 800ba1a:	b538      	push	{r3, r4, r5, lr}
 800ba1c:	460c      	mov	r4, r1
 800ba1e:	6811      	ldr	r1, [r2, #0]
 800ba20:	4610      	mov	r0, r2
 800ba22:	68cd      	ldr	r5, [r1, #12]
 800ba24:	4619      	mov	r1, r3
 800ba26:	47a8      	blx	r5
 800ba28:	2800      	cmp	r0, #0
 800ba2a:	bf08      	it	eq
 800ba2c:	4620      	moveq	r0, r4
 800ba2e:	bd38      	pop	{r3, r4, r5, pc}

0800ba30 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>:
 800ba30:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800ba32:	4604      	mov	r4, r0
 800ba34:	4615      	mov	r5, r2
 800ba36:	4608      	mov	r0, r1
 800ba38:	b93a      	cbnz	r2, 800ba4a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1a>
 800ba3a:	f8a4 204e 	strh.w	r2, [r4, #78]	; 0x4e
 800ba3e:	f8a4 2050 	strh.w	r2, [r4, #80]	; 0x50
 800ba42:	f8a4 2052 	strh.w	r2, [r4, #82]	; 0x52
 800ba46:	4628      	mov	r0, r5
 800ba48:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800ba4a:	f892 c00d 	ldrb.w	ip, [r2, #13]
 800ba4e:	8893      	ldrh	r3, [r2, #4]
 800ba50:	ea4f 160c 	mov.w	r6, ip, lsl #4
 800ba54:	f406 7280 	and.w	r2, r6, #256	; 0x100
 800ba58:	79ee      	ldrb	r6, [r5, #7]
 800ba5a:	4316      	orrs	r6, r2
 800ba5c:	f46f 6263 	mvn.w	r2, #3632	; 0xe30
 800ba60:	189a      	adds	r2, r3, r2
 800ba62:	b291      	uxth	r1, r2
 800ba64:	291d      	cmp	r1, #29
 800ba66:	b2b7      	uxth	r7, r6
 800ba68:	f200 8083 	bhi.w	800bb72 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x142>
 800ba6c:	2201      	movs	r2, #1
 800ba6e:	408a      	lsls	r2, r1
 800ba70:	4978      	ldr	r1, [pc, #480]	; (800bc54 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x224>)
 800ba72:	420a      	tst	r2, r1
 800ba74:	ea4f 06e6 	mov.w	r6, r6, asr #3
 800ba78:	d12d      	bne.n	800bad6 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xa6>
 800ba7a:	f412 7f60 	tst.w	r2, #896	; 0x380
 800ba7e:	d078      	beq.n	800bb72 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x142>
 800ba80:	f104 0240 	add.w	r2, r4, #64	; 0x40
 800ba84:	462b      	mov	r3, r5
 800ba86:	f105 0e08 	add.w	lr, r5, #8
 800ba8a:	4615      	mov	r5, r2
 800ba8c:	6818      	ldr	r0, [r3, #0]
 800ba8e:	6859      	ldr	r1, [r3, #4]
 800ba90:	4694      	mov	ip, r2
 800ba92:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 800ba96:	3308      	adds	r3, #8
 800ba98:	4573      	cmp	r3, lr
 800ba9a:	4662      	mov	r2, ip
 800ba9c:	d1f6      	bne.n	800ba8c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x5c>
 800ba9e:	6818      	ldr	r0, [r3, #0]
 800baa0:	f8cc 0000 	str.w	r0, [ip]
 800baa4:	889b      	ldrh	r3, [r3, #4]
 800baa6:	f8ac 3004 	strh.w	r3, [ip, #4]
 800baaa:	f8b4 1050 	ldrh.w	r1, [r4, #80]	; 0x50
 800baae:	f894 004d 	ldrb.w	r0, [r4, #77]	; 0x4d
 800bab2:	b2b3      	uxth	r3, r6
 800bab4:	1aca      	subs	r2, r1, r3
 800bab6:	b292      	uxth	r2, r2
 800bab8:	f884 2048 	strb.w	r2, [r4, #72]	; 0x48
 800babc:	10d2      	asrs	r2, r2, #3
 800babe:	f020 0060 	bic.w	r0, r0, #96	; 0x60
 800bac2:	f002 0260 	and.w	r2, r2, #96	; 0x60
 800bac6:	4302      	orrs	r2, r0
 800bac8:	1bcf      	subs	r7, r1, r7
 800baca:	f884 204d 	strb.w	r2, [r4, #77]	; 0x4d
 800bace:	1afb      	subs	r3, r7, r3
 800bad0:	f8a4 3050 	strh.w	r3, [r4, #80]	; 0x50
 800bad4:	e7b7      	b.n	800ba46 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 800bad6:	8e23      	ldrh	r3, [r4, #48]	; 0x30
 800bad8:	b92b      	cbnz	r3, 800bae6 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xb6>
 800bada:	4b5f      	ldr	r3, [pc, #380]	; (800bc58 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x228>)
 800badc:	4a5f      	ldr	r2, [pc, #380]	; (800bc5c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x22c>)
 800bade:	4860      	ldr	r0, [pc, #384]	; (800bc60 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x230>)
 800bae0:	21c0      	movs	r1, #192	; 0xc0
 800bae2:	f00c fa3b 	bl	8017f5c <__assert_func>
 800bae6:	8de3      	ldrh	r3, [r4, #46]	; 0x2e
 800bae8:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 800baec:	8b59      	ldrh	r1, [r3, #26]
 800baee:	f640 6333 	movw	r3, #3635	; 0xe33
 800baf2:	4299      	cmp	r1, r3
 800baf4:	d110      	bne.n	800bb18 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xe8>
 800baf6:	6803      	ldr	r3, [r0, #0]
 800baf8:	68db      	ldr	r3, [r3, #12]
 800bafa:	4798      	blx	r3
 800bafc:	7b41      	ldrb	r1, [r0, #13]
 800bafe:	00cb      	lsls	r3, r1, #3
 800bb00:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800bb04:	7a03      	ldrb	r3, [r0, #8]
 800bb06:	0648      	lsls	r0, r1, #25
 800bb08:	ea43 0302 	orr.w	r3, r3, r2
 800bb0c:	bf44      	itt	mi
 800bb0e:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 800bb12:	b21b      	sxthmi	r3, r3
 800bb14:	f8a4 304e 	strh.w	r3, [r4, #78]	; 0x4e
 800bb18:	f8b4 304e 	ldrh.w	r3, [r4, #78]	; 0x4e
 800bb1c:	443b      	add	r3, r7
 800bb1e:	4433      	add	r3, r6
 800bb20:	b29b      	uxth	r3, r3
 800bb22:	f104 0640 	add.w	r6, r4, #64	; 0x40
 800bb26:	462a      	mov	r2, r5
 800bb28:	f105 0c08 	add.w	ip, r5, #8
 800bb2c:	f8a4 304e 	strh.w	r3, [r4, #78]	; 0x4e
 800bb30:	4635      	mov	r5, r6
 800bb32:	6810      	ldr	r0, [r2, #0]
 800bb34:	6851      	ldr	r1, [r2, #4]
 800bb36:	4637      	mov	r7, r6
 800bb38:	c703      	stmia	r7!, {r0, r1}
 800bb3a:	3208      	adds	r2, #8
 800bb3c:	4562      	cmp	r2, ip
 800bb3e:	463e      	mov	r6, r7
 800bb40:	d1f7      	bne.n	800bb32 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x102>
 800bb42:	6810      	ldr	r0, [r2, #0]
 800bb44:	6038      	str	r0, [r7, #0]
 800bb46:	8892      	ldrh	r2, [r2, #4]
 800bb48:	80ba      	strh	r2, [r7, #4]
 800bb4a:	f894 204d 	ldrb.w	r2, [r4, #77]	; 0x4d
 800bb4e:	f884 3048 	strb.w	r3, [r4, #72]	; 0x48
 800bb52:	10db      	asrs	r3, r3, #3
 800bb54:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 800bb58:	f003 0360 	and.w	r3, r3, #96	; 0x60
 800bb5c:	4313      	orrs	r3, r2
 800bb5e:	f884 304d 	strb.w	r3, [r4, #77]	; 0x4d
 800bb62:	f894 2052 	ldrb.w	r2, [r4, #82]	; 0x52
 800bb66:	f894 3049 	ldrb.w	r3, [r4, #73]	; 0x49
 800bb6a:	1a9b      	subs	r3, r3, r2
 800bb6c:	f884 3049 	strb.w	r3, [r4, #73]	; 0x49
 800bb70:	e769      	b.n	800ba46 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 800bb72:	f023 0204 	bic.w	r2, r3, #4
 800bb76:	f640 611b 	movw	r1, #3611	; 0xe1b
 800bb7a:	428a      	cmp	r2, r1
 800bb7c:	d003      	beq.n	800bb86 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x156>
 800bb7e:	f640 621d 	movw	r2, #3613	; 0xe1d
 800bb82:	4293      	cmp	r3, r2
 800bb84:	d120      	bne.n	800bbc8 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x198>
 800bb86:	3b01      	subs	r3, #1
 800bb88:	4602      	mov	r2, r0
 800bb8a:	b29b      	uxth	r3, r3
 800bb8c:	4629      	mov	r1, r5
 800bb8e:	4620      	mov	r0, r4
 800bb90:	f7ff ff43 	bl	800ba1a <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 800bb94:	7b41      	ldrb	r1, [r0, #13]
 800bb96:	00cb      	lsls	r3, r1, #3
 800bb98:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800bb9c:	7a03      	ldrb	r3, [r0, #8]
 800bb9e:	0649      	lsls	r1, r1, #25
 800bba0:	ea43 0302 	orr.w	r3, r3, r2
 800bba4:	bf44      	itt	mi
 800bba6:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 800bbaa:	b21b      	sxthmi	r3, r3
 800bbac:	f8a4 304e 	strh.w	r3, [r4, #78]	; 0x4e
 800bbb0:	7b6b      	ldrb	r3, [r5, #13]
 800bbb2:	7aaa      	ldrb	r2, [r5, #10]
 800bbb4:	005b      	lsls	r3, r3, #1
 800bbb6:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800bbba:	4313      	orrs	r3, r2
 800bbbc:	115a      	asrs	r2, r3, #5
 800bbbe:	eb02 0393 	add.w	r3, r2, r3, lsr #2
 800bbc2:	f8a4 3052 	strh.w	r3, [r4, #82]	; 0x52
 800bbc6:	e036      	b.n	800bc36 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x206>
 800bbc8:	ea4f 02cc 	mov.w	r2, ip, lsl #3
 800bbcc:	f402 7180 	and.w	r1, r2, #256	; 0x100
 800bbd0:	7a2a      	ldrb	r2, [r5, #8]
 800bbd2:	f01c 0f40 	tst.w	ip, #64	; 0x40
 800bbd6:	ea42 0201 	orr.w	r2, r2, r1
 800bbda:	bf1c      	itt	ne
 800bbdc:	f5a2 7200 	subne.w	r2, r2, #512	; 0x200
 800bbe0:	b212      	sxthne	r2, r2
 800bbe2:	f8a4 204e 	strh.w	r2, [r4, #78]	; 0x4e
 800bbe6:	f640 6109 	movw	r1, #3593	; 0xe09
 800bbea:	f023 0210 	bic.w	r2, r3, #16
 800bbee:	428a      	cmp	r2, r1
 800bbf0:	d003      	beq.n	800bbfa <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1ca>
 800bbf2:	f640 6213 	movw	r2, #3603	; 0xe13
 800bbf6:	4293      	cmp	r3, r2
 800bbf8:	d12a      	bne.n	800bc50 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x220>
 800bbfa:	7b6e      	ldrb	r6, [r5, #13]
 800bbfc:	0076      	lsls	r6, r6, #1
 800bbfe:	f406 7280 	and.w	r2, r6, #256	; 0x100
 800bc02:	7aae      	ldrb	r6, [r5, #10]
 800bc04:	4316      	orrs	r6, r2
 800bc06:	f640 6213 	movw	r2, #3603	; 0xe13
 800bc0a:	4293      	cmp	r3, r2
 800bc0c:	bf18      	it	ne
 800bc0e:	f103 33ff 	addne.w	r3, r3, #4294967295
 800bc12:	4602      	mov	r2, r0
 800bc14:	bf14      	ite	ne
 800bc16:	b29b      	uxthne	r3, r3
 800bc18:	f640 630c 	movweq	r3, #3596	; 0xe0c
 800bc1c:	4629      	mov	r1, r5
 800bc1e:	4620      	mov	r0, r4
 800bc20:	f7ff fefb 	bl	800ba1a <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 800bc24:	7b43      	ldrb	r3, [r0, #13]
 800bc26:	7a82      	ldrb	r2, [r0, #10]
 800bc28:	005b      	lsls	r3, r3, #1
 800bc2a:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800bc2e:	4313      	orrs	r3, r2
 800bc30:	1af6      	subs	r6, r6, r3
 800bc32:	f8a4 6052 	strh.w	r6, [r4, #82]	; 0x52
 800bc36:	7b69      	ldrb	r1, [r5, #13]
 800bc38:	00cb      	lsls	r3, r1, #3
 800bc3a:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800bc3e:	7a2b      	ldrb	r3, [r5, #8]
 800bc40:	4313      	orrs	r3, r2
 800bc42:	064a      	lsls	r2, r1, #25
 800bc44:	bf44      	itt	mi
 800bc46:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 800bc4a:	b21b      	sxthmi	r3, r3
 800bc4c:	1bdb      	subs	r3, r3, r7
 800bc4e:	e73f      	b.n	800bad0 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xa0>
 800bc50:	2300      	movs	r3, #0
 800bc52:	e7b6      	b.n	800bbc2 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x192>
 800bc54:	3fc00079 	.word	0x3fc00079
 800bc58:	0801999c 	.word	0x0801999c
 800bc5c:	0801b40f 	.word	0x0801b40f
 800bc60:	080199c3 	.word	0x080199c3

0800bc64 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>:
 800bc64:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800bc68:	4604      	mov	r4, r0
 800bc6a:	b942      	cbnz	r2, 800bc7e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1a>
 800bc6c:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 800bc70:	f8a0 304e 	strh.w	r3, [r0, #78]	; 0x4e
 800bc74:	f8a0 3050 	strh.w	r3, [r0, #80]	; 0x50
 800bc78:	f8a4 3052 	strh.w	r3, [r4, #82]	; 0x52
 800bc7c:	e046      	b.n	800bd0c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa8>
 800bc7e:	7b51      	ldrb	r1, [r2, #13]
 800bc80:	8893      	ldrh	r3, [r2, #4]
 800bc82:	010f      	lsls	r7, r1, #4
 800bc84:	f407 7080 	and.w	r0, r7, #256	; 0x100
 800bc88:	79d7      	ldrb	r7, [r2, #7]
 800bc8a:	4307      	orrs	r7, r0
 800bc8c:	2f04      	cmp	r7, #4
 800bc8e:	b2bd      	uxth	r5, r7
 800bc90:	bfcc      	ite	gt
 800bc92:	08bf      	lsrgt	r7, r7, #2
 800bc94:	2701      	movle	r7, #1
 800bc96:	f5b3 6fdd 	cmp.w	r3, #1768	; 0x6e8
 800bc9a:	f200 80ab 	bhi.w	800bdf4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x190>
 800bc9e:	f240 60e7 	movw	r0, #1767	; 0x6e7
 800bca2:	4283      	cmp	r3, r0
 800bca4:	d216      	bcs.n	800bcd4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800bca6:	f240 605b 	movw	r0, #1627	; 0x65b
 800bcaa:	4283      	cmp	r3, r0
 800bcac:	d859      	bhi.n	800bd62 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xfe>
 800bcae:	f240 6057 	movw	r0, #1623	; 0x657
 800bcb2:	4283      	cmp	r3, r0
 800bcb4:	d20e      	bcs.n	800bcd4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800bcb6:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
 800bcba:	d24a      	bcs.n	800bd52 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xee>
 800bcbc:	f240 604e 	movw	r0, #1614	; 0x64e
 800bcc0:	4283      	cmp	r3, r0
 800bcc2:	d207      	bcs.n	800bcd4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800bcc4:	f240 601a 	movw	r0, #1562	; 0x61a
 800bcc8:	4283      	cmp	r3, r0
 800bcca:	d02a      	beq.n	800bd22 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 800bccc:	d821      	bhi.n	800bd12 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xae>
 800bcce:	f5b3 6fc2 	cmp.w	r3, #1552	; 0x610
 800bcd2:	d35b      	bcc.n	800bd8c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 800bcd4:	f9b4 304e 	ldrsh.w	r3, [r4, #78]	; 0x4e
 800bcd8:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 800bcdc:	f040 80d0 	bne.w	800be80 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21c>
 800bce0:	f9b4 0050 	ldrsh.w	r0, [r4, #80]	; 0x50
 800bce4:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 800bce8:	f040 80ca 	bne.w	800be80 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21c>
 800bcec:	00cb      	lsls	r3, r1, #3
 800bcee:	f403 7080 	and.w	r0, r3, #256	; 0x100
 800bcf2:	7a13      	ldrb	r3, [r2, #8]
 800bcf4:	0649      	lsls	r1, r1, #25
 800bcf6:	ea43 0300 	orr.w	r3, r3, r0
 800bcfa:	bf44      	itt	mi
 800bcfc:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 800bd00:	b21b      	sxthmi	r3, r3
 800bd02:	f8a4 304e 	strh.w	r3, [r4, #78]	; 0x4e
 800bd06:	1b5d      	subs	r5, r3, r5
 800bd08:	f8a4 5050 	strh.w	r5, [r4, #80]	; 0x50
 800bd0c:	4610      	mov	r0, r2
 800bd0e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800bd12:	f240 604b 	movw	r0, #1611	; 0x64b
 800bd16:	4283      	cmp	r3, r0
 800bd18:	d338      	bcc.n	800bd8c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 800bd1a:	f240 604c 	movw	r0, #1612	; 0x64c
 800bd1e:	4283      	cmp	r3, r0
 800bd20:	d9d8      	bls.n	800bcd4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800bd22:	f9b4 004e 	ldrsh.w	r0, [r4, #78]	; 0x4e
 800bd26:	f9b4 3050 	ldrsh.w	r3, [r4, #80]	; 0x50
 800bd2a:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 800bd2e:	f040 80f1 	bne.w	800bf14 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b0>
 800bd32:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 800bd36:	f040 80ed 	bne.w	800bf14 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b0>
 800bd3a:	00cb      	lsls	r3, r1, #3
 800bd3c:	f403 7080 	and.w	r0, r3, #256	; 0x100
 800bd40:	7a13      	ldrb	r3, [r2, #8]
 800bd42:	064e      	lsls	r6, r1, #25
 800bd44:	ea43 0300 	orr.w	r3, r3, r0
 800bd48:	bf44      	itt	mi
 800bd4a:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 800bd4e:	b21b      	sxthmi	r3, r3
 800bd50:	e7d9      	b.n	800bd06 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa2>
 800bd52:	f240 6054 	movw	r0, #1620	; 0x654
 800bd56:	4283      	cmp	r3, r0
 800bd58:	d8e3      	bhi.n	800bd22 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 800bd5a:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
 800bd5e:	d9e0      	bls.n	800bd22 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 800bd60:	e7b8      	b.n	800bcd4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800bd62:	f240 6074 	movw	r0, #1652	; 0x674
 800bd66:	4283      	cmp	r3, r0
 800bd68:	d0b4      	beq.n	800bcd4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800bd6a:	d82d      	bhi.n	800bdc8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x164>
 800bd6c:	f240 605e 	movw	r0, #1630	; 0x65e
 800bd70:	4283      	cmp	r3, r0
 800bd72:	d804      	bhi.n	800bd7e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x11a>
 800bd74:	f240 605d 	movw	r0, #1629	; 0x65d
 800bd78:	4283      	cmp	r3, r0
 800bd7a:	d3d2      	bcc.n	800bd22 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 800bd7c:	e7aa      	b.n	800bcd4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800bd7e:	f240 605f 	movw	r0, #1631	; 0x65f
 800bd82:	4283      	cmp	r3, r0
 800bd84:	d0cd      	beq.n	800bd22 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 800bd86:	f5b3 6fce 	cmp.w	r3, #1648	; 0x670
 800bd8a:	d0a3      	beq.n	800bcd4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800bd8c:	00cb      	lsls	r3, r1, #3
 800bd8e:	f403 7080 	and.w	r0, r3, #256	; 0x100
 800bd92:	7a13      	ldrb	r3, [r2, #8]
 800bd94:	0649      	lsls	r1, r1, #25
 800bd96:	ea43 0300 	orr.w	r3, r3, r0
 800bd9a:	bf44      	itt	mi
 800bd9c:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 800bda0:	b21b      	sxthmi	r3, r3
 800bda2:	1b5d      	subs	r5, r3, r5
 800bda4:	f8a4 304e 	strh.w	r3, [r4, #78]	; 0x4e
 800bda8:	f8a4 5050 	strh.w	r5, [r4, #80]	; 0x50
 800bdac:	7b53      	ldrb	r3, [r2, #13]
 800bdae:	015b      	lsls	r3, r3, #5
 800bdb0:	f403 7180 	and.w	r1, r3, #256	; 0x100
 800bdb4:	7993      	ldrb	r3, [r2, #6]
 800bdb6:	430b      	orrs	r3, r1
 800bdb8:	005b      	lsls	r3, r3, #1
 800bdba:	2105      	movs	r1, #5
 800bdbc:	fb93 f3f1 	sdiv	r3, r3, r1
 800bdc0:	f992 1009 	ldrsb.w	r1, [r2, #9]
 800bdc4:	440b      	add	r3, r1
 800bdc6:	e757      	b.n	800bc78 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x14>
 800bdc8:	f240 60e2 	movw	r0, #1762	; 0x6e2
 800bdcc:	4283      	cmp	r3, r0
 800bdce:	d809      	bhi.n	800bde4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x180>
 800bdd0:	f240 60df 	movw	r0, #1759	; 0x6df
 800bdd4:	4283      	cmp	r3, r0
 800bdd6:	f4bf af7d 	bcs.w	800bcd4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800bdda:	f2a3 63d6 	subw	r3, r3, #1750	; 0x6d6
 800bdde:	2b05      	cmp	r3, #5
 800bde0:	d8d4      	bhi.n	800bd8c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 800bde2:	e777      	b.n	800bcd4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800bde4:	f240 60e3 	movw	r0, #1763	; 0x6e3
 800bde8:	4283      	cmp	r3, r0
 800bdea:	d09a      	beq.n	800bd22 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 800bdec:	f240 60e4 	movw	r0, #1764	; 0x6e4
 800bdf0:	4283      	cmp	r3, r0
 800bdf2:	e7ca      	b.n	800bd8a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x126>
 800bdf4:	f5b3 6f0f 	cmp.w	r3, #2288	; 0x8f0
 800bdf8:	d22b      	bcs.n	800be52 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1ee>
 800bdfa:	f640 00ed 	movw	r0, #2285	; 0x8ed
 800bdfe:	4283      	cmp	r3, r0
 800be00:	d28f      	bcs.n	800bd22 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 800be02:	f640 00e5 	movw	r0, #2277	; 0x8e5
 800be06:	4283      	cmp	r3, r0
 800be08:	d816      	bhi.n	800be38 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d4>
 800be0a:	f640 00e4 	movw	r0, #2276	; 0x8e4
 800be0e:	4283      	cmp	r3, r0
 800be10:	f4bf af60 	bcs.w	800bcd4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800be14:	f240 60ec 	movw	r0, #1772	; 0x6ec
 800be18:	4283      	cmp	r3, r0
 800be1a:	d80a      	bhi.n	800be32 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1ce>
 800be1c:	f240 60eb 	movw	r0, #1771	; 0x6eb
 800be20:	4283      	cmp	r3, r0
 800be22:	f4bf af57 	bcs.w	800bcd4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800be26:	f240 60ea 	movw	r0, #1770	; 0x6ea
 800be2a:	4283      	cmp	r3, r0
 800be2c:	f43f af79 	beq.w	800bd22 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 800be30:	e7ac      	b.n	800bd8c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 800be32:	f240 60ed 	movw	r0, #1773	; 0x6ed
 800be36:	e7f8      	b.n	800be2a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1c6>
 800be38:	f640 00e8 	movw	r0, #2280	; 0x8e8
 800be3c:	4283      	cmp	r3, r0
 800be3e:	d802      	bhi.n	800be46 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e2>
 800be40:	f640 00e7 	movw	r0, #2279	; 0x8e7
 800be44:	e798      	b.n	800bd78 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x114>
 800be46:	f640 00e9 	movw	r0, #2281	; 0x8e9
 800be4a:	4283      	cmp	r3, r0
 800be4c:	f47f af42 	bne.w	800bcd4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800be50:	e767      	b.n	800bd22 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 800be52:	f640 00f6 	movw	r0, #2294	; 0x8f6
 800be56:	4283      	cmp	r3, r0
 800be58:	f43f af63 	beq.w	800bd22 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 800be5c:	d802      	bhi.n	800be64 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x200>
 800be5e:	f640 00f2 	movw	r0, #2290	; 0x8f2
 800be62:	e7f2      	b.n	800be4a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e6>
 800be64:	f640 00fa 	movw	r0, #2298	; 0x8fa
 800be68:	4283      	cmp	r3, r0
 800be6a:	d805      	bhi.n	800be78 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x214>
 800be6c:	f640 00f9 	movw	r0, #2297	; 0x8f9
 800be70:	4283      	cmp	r3, r0
 800be72:	f4ff af2f 	bcc.w	800bcd4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800be76:	e754      	b.n	800bd22 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 800be78:	f640 00fe 	movw	r0, #2302	; 0x8fe
 800be7c:	4283      	cmp	r3, r0
 800be7e:	e7af      	b.n	800bde0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x17c>
 800be80:	f104 0c40 	add.w	ip, r4, #64	; 0x40
 800be84:	4617      	mov	r7, r2
 800be86:	f102 0808 	add.w	r8, r2, #8
 800be8a:	4666      	mov	r6, ip
 800be8c:	6838      	ldr	r0, [r7, #0]
 800be8e:	6879      	ldr	r1, [r7, #4]
 800be90:	46e6      	mov	lr, ip
 800be92:	e8ae 0003 	stmia.w	lr!, {r0, r1}
 800be96:	3708      	adds	r7, #8
 800be98:	4547      	cmp	r7, r8
 800be9a:	46f4      	mov	ip, lr
 800be9c:	d1f6      	bne.n	800be8c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x228>
 800be9e:	6838      	ldr	r0, [r7, #0]
 800bea0:	f8ce 0000 	str.w	r0, [lr]
 800bea4:	88b9      	ldrh	r1, [r7, #4]
 800bea6:	f8ae 1004 	strh.w	r1, [lr, #4]
 800beaa:	f9b4 0052 	ldrsh.w	r0, [r4, #82]	; 0x52
 800beae:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 800beb2:	d009      	beq.n	800bec8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x264>
 800beb4:	7b51      	ldrb	r1, [r2, #13]
 800beb6:	7992      	ldrb	r2, [r2, #6]
 800beb8:	0149      	lsls	r1, r1, #5
 800beba:	f401 7180 	and.w	r1, r1, #256	; 0x100
 800bebe:	4311      	orrs	r1, r2
 800bec0:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 800bec4:	f884 0049 	strb.w	r0, [r4, #73]	; 0x49
 800bec8:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 800becc:	d00d      	beq.n	800beea <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x286>
 800bece:	442b      	add	r3, r5
 800bed0:	b29b      	uxth	r3, r3
 800bed2:	f894 204d 	ldrb.w	r2, [r4, #77]	; 0x4d
 800bed6:	f884 3048 	strb.w	r3, [r4, #72]	; 0x48
 800beda:	10db      	asrs	r3, r3, #3
 800bedc:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 800bee0:	f003 0360 	and.w	r3, r3, #96	; 0x60
 800bee4:	4313      	orrs	r3, r2
 800bee6:	f884 304d 	strb.w	r3, [r4, #77]	; 0x4d
 800beea:	f894 104d 	ldrb.w	r1, [r4, #77]	; 0x4d
 800beee:	00cb      	lsls	r3, r1, #3
 800bef0:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800bef4:	f894 3048 	ldrb.w	r3, [r4, #72]	; 0x48
 800bef8:	064f      	lsls	r7, r1, #25
 800befa:	ea43 0302 	orr.w	r3, r3, r2
 800befe:	bf44      	itt	mi
 800bf00:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 800bf04:	b21b      	sxthmi	r3, r3
 800bf06:	f8a4 304e 	strh.w	r3, [r4, #78]	; 0x4e
 800bf0a:	1b5d      	subs	r5, r3, r5
 800bf0c:	f8a4 5050 	strh.w	r5, [r4, #80]	; 0x50
 800bf10:	4632      	mov	r2, r6
 800bf12:	e6fb      	b.n	800bd0c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa8>
 800bf14:	f104 0e40 	add.w	lr, r4, #64	; 0x40
 800bf18:	4694      	mov	ip, r2
 800bf1a:	f102 0908 	add.w	r9, r2, #8
 800bf1e:	4676      	mov	r6, lr
 800bf20:	f8dc 0000 	ldr.w	r0, [ip]
 800bf24:	f8dc 1004 	ldr.w	r1, [ip, #4]
 800bf28:	46f0      	mov	r8, lr
 800bf2a:	e8a8 0003 	stmia.w	r8!, {r0, r1}
 800bf2e:	f10c 0c08 	add.w	ip, ip, #8
 800bf32:	45cc      	cmp	ip, r9
 800bf34:	46c6      	mov	lr, r8
 800bf36:	d1f3      	bne.n	800bf20 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2bc>
 800bf38:	f8dc 0000 	ldr.w	r0, [ip]
 800bf3c:	f8c8 0000 	str.w	r0, [r8]
 800bf40:	f8bc 1004 	ldrh.w	r1, [ip, #4]
 800bf44:	f8a8 1004 	strh.w	r1, [r8, #4]
 800bf48:	f9b4 0052 	ldrsh.w	r0, [r4, #82]	; 0x52
 800bf4c:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 800bf50:	d009      	beq.n	800bf66 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x302>
 800bf52:	7b51      	ldrb	r1, [r2, #13]
 800bf54:	7992      	ldrb	r2, [r2, #6]
 800bf56:	0149      	lsls	r1, r1, #5
 800bf58:	f401 7180 	and.w	r1, r1, #256	; 0x100
 800bf5c:	4311      	orrs	r1, r2
 800bf5e:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 800bf62:	f884 0049 	strb.w	r0, [r4, #73]	; 0x49
 800bf66:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 800bf6a:	d00d      	beq.n	800bf88 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x324>
 800bf6c:	1bdb      	subs	r3, r3, r7
 800bf6e:	f894 204d 	ldrb.w	r2, [r4, #77]	; 0x4d
 800bf72:	b29b      	uxth	r3, r3
 800bf74:	f884 3048 	strb.w	r3, [r4, #72]	; 0x48
 800bf78:	10db      	asrs	r3, r3, #3
 800bf7a:	f003 0360 	and.w	r3, r3, #96	; 0x60
 800bf7e:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 800bf82:	4313      	orrs	r3, r2
 800bf84:	f884 304d 	strb.w	r3, [r4, #77]	; 0x4d
 800bf88:	f894 104d 	ldrb.w	r1, [r4, #77]	; 0x4d
 800bf8c:	00cb      	lsls	r3, r1, #3
 800bf8e:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800bf92:	f894 3048 	ldrb.w	r3, [r4, #72]	; 0x48
 800bf96:	0648      	lsls	r0, r1, #25
 800bf98:	ea43 0302 	orr.w	r3, r3, r2
 800bf9c:	bf44      	itt	mi
 800bf9e:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 800bfa2:	b21b      	sxthmi	r3, r3
 800bfa4:	e7b1      	b.n	800bf0a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2a6>
	...

0800bfa8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>:
 800bfa8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800bfac:	461e      	mov	r6, r3
 800bfae:	8e03      	ldrh	r3, [r0, #48]	; 0x30
 800bfb0:	4604      	mov	r4, r0
 800bfb2:	4617      	mov	r7, r2
 800bfb4:	b92b      	cbnz	r3, 800bfc2 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x1a>
 800bfb6:	4b25      	ldr	r3, [pc, #148]	; (800c04c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0xa4>)
 800bfb8:	4a25      	ldr	r2, [pc, #148]	; (800c050 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0xa8>)
 800bfba:	4826      	ldr	r0, [pc, #152]	; (800c054 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0xac>)
 800bfbc:	21c0      	movs	r1, #192	; 0xc0
 800bfbe:	f00b ffcd 	bl	8017f5c <__assert_func>
 800bfc2:	8dc3      	ldrh	r3, [r0, #46]	; 0x2e
 800bfc4:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 800bfc8:	f8b3 801a 	ldrh.w	r8, [r3, #26]
 800bfcc:	f7f6 f9a0 	bl	8002310 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 800bfd0:	4605      	mov	r5, r0
 800bfd2:	b918      	cbnz	r0, 800bfdc <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x34>
 800bfd4:	6030      	str	r0, [r6, #0]
 800bfd6:	4628      	mov	r0, r5
 800bfd8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800bfdc:	683b      	ldr	r3, [r7, #0]
 800bfde:	4601      	mov	r1, r0
 800bfe0:	68db      	ldr	r3, [r3, #12]
 800bfe2:	4638      	mov	r0, r7
 800bfe4:	4798      	blx	r3
 800bfe6:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
 800bfea:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 800bfee:	4602      	mov	r2, r0
 800bff0:	6030      	str	r0, [r6, #0]
 800bff2:	d213      	bcs.n	800c01c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x74>
 800bff4:	4643      	mov	r3, r8
 800bff6:	4639      	mov	r1, r7
 800bff8:	4620      	mov	r0, r4
 800bffa:	f7ff fe33 	bl	800bc64 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 800bffe:	6030      	str	r0, [r6, #0]
 800c000:	6833      	ldr	r3, [r6, #0]
 800c002:	b143      	cbz	r3, 800c016 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x6e>
 800c004:	7b5a      	ldrb	r2, [r3, #13]
 800c006:	7a9b      	ldrb	r3, [r3, #10]
 800c008:	0052      	lsls	r2, r2, #1
 800c00a:	f402 7280 	and.w	r2, r2, #256	; 0x100
 800c00e:	4313      	orrs	r3, r2
 800c010:	bf0c      	ite	eq
 800c012:	2301      	moveq	r3, #1
 800c014:	2300      	movne	r3, #0
 800c016:	f884 3055 	strb.w	r3, [r4, #85]	; 0x55
 800c01a:	e7dc      	b.n	800bfd6 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x2e>
 800c01c:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
 800c020:	b29b      	uxth	r3, r3
 800c022:	2b7f      	cmp	r3, #127	; 0x7f
 800c024:	d804      	bhi.n	800c030 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x88>
 800c026:	4639      	mov	r1, r7
 800c028:	4620      	mov	r0, r4
 800c02a:	f7ff fd01 	bl	800ba30 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 800c02e:	e7e6      	b.n	800bffe <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x56>
 800c030:	f894 3055 	ldrb.w	r3, [r4, #85]	; 0x55
 800c034:	2b00      	cmp	r3, #0
 800c036:	d0e3      	beq.n	800c000 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x58>
 800c038:	f640 1302 	movw	r3, #2306	; 0x902
 800c03c:	429d      	cmp	r5, r3
 800c03e:	d1df      	bne.n	800c000 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x58>
 800c040:	4601      	mov	r1, r0
 800c042:	4620      	mov	r0, r4
 800c044:	f7ff fcc6 	bl	800b9d4 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 800c048:	e7d9      	b.n	800bffe <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x56>
 800c04a:	bf00      	nop
 800c04c:	0801999c 	.word	0x0801999c
 800c050:	0801b40f 	.word	0x0801b40f
 800c054:	080199c3 	.word	0x080199c3

0800c058 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>:
 800c058:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800c05c:	461e      	mov	r6, r3
 800c05e:	8e03      	ldrh	r3, [r0, #48]	; 0x30
 800c060:	4604      	mov	r4, r0
 800c062:	4617      	mov	r7, r2
 800c064:	b92b      	cbnz	r3, 800c072 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x1a>
 800c066:	4b26      	ldr	r3, [pc, #152]	; (800c100 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0xa8>)
 800c068:	4a26      	ldr	r2, [pc, #152]	; (800c104 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0xac>)
 800c06a:	4827      	ldr	r0, [pc, #156]	; (800c108 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0xb0>)
 800c06c:	21c0      	movs	r1, #192	; 0xc0
 800c06e:	f00b ff75 	bl	8017f5c <__assert_func>
 800c072:	8dc3      	ldrh	r3, [r0, #46]	; 0x2e
 800c074:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 800c078:	f8b3 801a 	ldrh.w	r8, [r3, #26]
 800c07c:	f7f6 f948 	bl	8002310 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 800c080:	4605      	mov	r5, r0
 800c082:	b918      	cbnz	r0, 800c08c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x34>
 800c084:	6030      	str	r0, [r6, #0]
 800c086:	4628      	mov	r0, r5
 800c088:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800c08c:	683b      	ldr	r3, [r7, #0]
 800c08e:	4601      	mov	r1, r0
 800c090:	f8d3 9008 	ldr.w	r9, [r3, #8]
 800c094:	4638      	mov	r0, r7
 800c096:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 800c09a:	47c8      	blx	r9
 800c09c:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
 800c0a0:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 800c0a4:	4602      	mov	r2, r0
 800c0a6:	6030      	str	r0, [r6, #0]
 800c0a8:	d213      	bcs.n	800c0d2 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x7a>
 800c0aa:	4643      	mov	r3, r8
 800c0ac:	4639      	mov	r1, r7
 800c0ae:	4620      	mov	r0, r4
 800c0b0:	f7ff fdd8 	bl	800bc64 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 800c0b4:	6030      	str	r0, [r6, #0]
 800c0b6:	6833      	ldr	r3, [r6, #0]
 800c0b8:	b143      	cbz	r3, 800c0cc <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x74>
 800c0ba:	7b5a      	ldrb	r2, [r3, #13]
 800c0bc:	7a9b      	ldrb	r3, [r3, #10]
 800c0be:	0052      	lsls	r2, r2, #1
 800c0c0:	f402 7280 	and.w	r2, r2, #256	; 0x100
 800c0c4:	4313      	orrs	r3, r2
 800c0c6:	bf0c      	ite	eq
 800c0c8:	2301      	moveq	r3, #1
 800c0ca:	2300      	movne	r3, #0
 800c0cc:	f884 3055 	strb.w	r3, [r4, #85]	; 0x55
 800c0d0:	e7d9      	b.n	800c086 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x2e>
 800c0d2:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
 800c0d6:	b29b      	uxth	r3, r3
 800c0d8:	2b7f      	cmp	r3, #127	; 0x7f
 800c0da:	d804      	bhi.n	800c0e6 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x8e>
 800c0dc:	4639      	mov	r1, r7
 800c0de:	4620      	mov	r0, r4
 800c0e0:	f7ff fca6 	bl	800ba30 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 800c0e4:	e7e6      	b.n	800c0b4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x5c>
 800c0e6:	f894 3055 	ldrb.w	r3, [r4, #85]	; 0x55
 800c0ea:	2b00      	cmp	r3, #0
 800c0ec:	d0e3      	beq.n	800c0b6 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x5e>
 800c0ee:	f640 1302 	movw	r3, #2306	; 0x902
 800c0f2:	429d      	cmp	r5, r3
 800c0f4:	d1df      	bne.n	800c0b6 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x5e>
 800c0f6:	4601      	mov	r1, r0
 800c0f8:	4620      	mov	r0, r4
 800c0fa:	f7ff fc6b 	bl	800b9d4 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 800c0fe:	e7d9      	b.n	800c0b4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x5c>
 800c100:	0801999c 	.word	0x0801999c
 800c104:	0801b40f 	.word	0x0801b40f
 800c108:	080199c3 	.word	0x080199c3

0800c10c <_ZN8touchgfx12TextProvider15fillInputBufferEv>:
 800c10c:	b510      	push	{r4, lr}
 800c10e:	4604      	mov	r4, r0
 800c110:	8f21      	ldrh	r1, [r4, #56]	; 0x38
 800c112:	8e23      	ldrh	r3, [r4, #48]	; 0x30
 800c114:	b9d9      	cbnz	r1, 800c14e <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x42>
 800c116:	8e23      	ldrh	r3, [r4, #48]	; 0x30
 800c118:	2b0a      	cmp	r3, #10
 800c11a:	d036      	beq.n	800c18a <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x7e>
 800c11c:	4620      	mov	r0, r4
 800c11e:	f7ff fc22 	bl	800b966 <_ZN8touchgfx12TextProvider19getNextCharInternalEv>
 800c122:	8e23      	ldrh	r3, [r4, #48]	; 0x30
 800c124:	2b09      	cmp	r3, #9
 800c126:	d906      	bls.n	800c136 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x2a>
 800c128:	4b18      	ldr	r3, [pc, #96]	; (800c18c <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x80>)
 800c12a:	4a19      	ldr	r2, [pc, #100]	; (800c190 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x84>)
 800c12c:	4819      	ldr	r0, [pc, #100]	; (800c194 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x88>)
 800c12e:	f44f 7182 	mov.w	r1, #260	; 0x104
 800c132:	f00b ff13 	bl	8017f5c <__assert_func>
 800c136:	1c5a      	adds	r2, r3, #1
 800c138:	8622      	strh	r2, [r4, #48]	; 0x30
 800c13a:	8de2      	ldrh	r2, [r4, #46]	; 0x2e
 800c13c:	4413      	add	r3, r2
 800c13e:	b29b      	uxth	r3, r3
 800c140:	2b09      	cmp	r3, #9
 800c142:	bf88      	it	hi
 800c144:	3b0a      	subhi	r3, #10
 800c146:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 800c14a:	8358      	strh	r0, [r3, #26]
 800c14c:	e7e3      	b.n	800c116 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0xa>
 800c14e:	2b0a      	cmp	r3, #10
 800c150:	d01b      	beq.n	800c18a <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x7e>
 800c152:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 800c154:	eb04 0042 	add.w	r0, r4, r2, lsl #1
 800c158:	3901      	subs	r1, #1
 800c15a:	8e40      	ldrh	r0, [r0, #50]	; 0x32
 800c15c:	8721      	strh	r1, [r4, #56]	; 0x38
 800c15e:	1c51      	adds	r1, r2, #1
 800c160:	b289      	uxth	r1, r1
 800c162:	2901      	cmp	r1, #1
 800c164:	bf8a      	itet	hi
 800c166:	f102 32ff 	addhi.w	r2, r2, #4294967295
 800c16a:	86e1      	strhls	r1, [r4, #54]	; 0x36
 800c16c:	86e2      	strhhi	r2, [r4, #54]	; 0x36
 800c16e:	2b09      	cmp	r3, #9
 800c170:	d8da      	bhi.n	800c128 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x1c>
 800c172:	1c5a      	adds	r2, r3, #1
 800c174:	8622      	strh	r2, [r4, #48]	; 0x30
 800c176:	8de2      	ldrh	r2, [r4, #46]	; 0x2e
 800c178:	4413      	add	r3, r2
 800c17a:	b29b      	uxth	r3, r3
 800c17c:	2b09      	cmp	r3, #9
 800c17e:	bf88      	it	hi
 800c180:	3b0a      	subhi	r3, #10
 800c182:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 800c186:	8358      	strh	r0, [r3, #26]
 800c188:	e7c2      	b.n	800c110 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4>
 800c18a:	bd10      	pop	{r4, pc}
 800c18c:	0801b1e0 	.word	0x0801b1e0
 800c190:	0801b565 	.word	0x0801b565
 800c194:	080199c3 	.word	0x080199c3

0800c198 <_ZN8touchgfx12TextProvider11getNextCharEv>:
 800c198:	b538      	push	{r3, r4, r5, lr}
 800c19a:	8e02      	ldrh	r2, [r0, #48]	; 0x30
 800c19c:	4604      	mov	r4, r0
 800c19e:	b92a      	cbnz	r2, 800c1ac <_ZN8touchgfx12TextProvider11getNextCharEv+0x14>
 800c1a0:	4b13      	ldr	r3, [pc, #76]	; (800c1f0 <_ZN8touchgfx12TextProvider11getNextCharEv+0x58>)
 800c1a2:	4a14      	ldr	r2, [pc, #80]	; (800c1f4 <_ZN8touchgfx12TextProvider11getNextCharEv+0x5c>)
 800c1a4:	4814      	ldr	r0, [pc, #80]	; (800c1f8 <_ZN8touchgfx12TextProvider11getNextCharEv+0x60>)
 800c1a6:	21d5      	movs	r1, #213	; 0xd5
 800c1a8:	f00b fed8 	bl	8017f5c <__assert_func>
 800c1ac:	8dc3      	ldrh	r3, [r0, #46]	; 0x2e
 800c1ae:	eb00 0143 	add.w	r1, r0, r3, lsl #1
 800c1b2:	3a01      	subs	r2, #1
 800c1b4:	8b4d      	ldrh	r5, [r1, #26]
 800c1b6:	8602      	strh	r2, [r0, #48]	; 0x30
 800c1b8:	1c5a      	adds	r2, r3, #1
 800c1ba:	b292      	uxth	r2, r2
 800c1bc:	2a09      	cmp	r2, #9
 800c1be:	bf86      	itte	hi
 800c1c0:	3b09      	subhi	r3, #9
 800c1c2:	85c3      	strhhi	r3, [r0, #46]	; 0x2e
 800c1c4:	85c2      	strhls	r2, [r0, #46]	; 0x2e
 800c1c6:	f7ff ffa1 	bl	800c10c <_ZN8touchgfx12TextProvider15fillInputBufferEv>
 800c1ca:	8b23      	ldrh	r3, [r4, #24]
 800c1cc:	2b01      	cmp	r3, #1
 800c1ce:	bf9c      	itt	ls
 800c1d0:	3301      	addls	r3, #1
 800c1d2:	8323      	strhls	r3, [r4, #24]
 800c1d4:	8ae3      	ldrh	r3, [r4, #22]
 800c1d6:	b90b      	cbnz	r3, 800c1dc <_ZN8touchgfx12TextProvider11getNextCharEv+0x44>
 800c1d8:	2302      	movs	r3, #2
 800c1da:	82e3      	strh	r3, [r4, #22]
 800c1dc:	8ae3      	ldrh	r3, [r4, #22]
 800c1de:	3b01      	subs	r3, #1
 800c1e0:	b29b      	uxth	r3, r3
 800c1e2:	82e3      	strh	r3, [r4, #22]
 800c1e4:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 800c1e8:	4628      	mov	r0, r5
 800c1ea:	8265      	strh	r5, [r4, #18]
 800c1ec:	bd38      	pop	{r3, r4, r5, pc}
 800c1ee:	bf00      	nop
 800c1f0:	0801999c 	.word	0x0801999c
 800c1f4:	0801b4ba 	.word	0x0801b4ba
 800c1f8:	080199c3 	.word	0x080199c3

0800c1fc <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>:
 800c1fc:	b538      	push	{r3, r4, r5, lr}
 800c1fe:	428a      	cmp	r2, r1
 800c200:	8e04      	ldrh	r4, [r0, #48]	; 0x30
 800c202:	d90c      	bls.n	800c21e <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x22>
 800c204:	b92c      	cbnz	r4, 800c212 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x16>
 800c206:	4b1c      	ldr	r3, [pc, #112]	; (800c278 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x7c>)
 800c208:	4a1c      	ldr	r2, [pc, #112]	; (800c27c <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x80>)
 800c20a:	21e1      	movs	r1, #225	; 0xe1
 800c20c:	481c      	ldr	r0, [pc, #112]	; (800c280 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x84>)
 800c20e:	f00b fea5 	bl	8017f5c <__assert_func>
 800c212:	3c01      	subs	r4, #1
 800c214:	8604      	strh	r4, [r0, #48]	; 0x30
 800c216:	4b1b      	ldr	r3, [pc, #108]	; (800c284 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x88>)
 800c218:	4a1b      	ldr	r2, [pc, #108]	; (800c288 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x8c>)
 800c21a:	21c5      	movs	r1, #197	; 0xc5
 800c21c:	e7f6      	b.n	800c20c <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x10>
 800c21e:	428c      	cmp	r4, r1
 800c220:	d203      	bcs.n	800c22a <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x2e>
 800c222:	4b1a      	ldr	r3, [pc, #104]	; (800c28c <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x90>)
 800c224:	4a1a      	ldr	r2, [pc, #104]	; (800c290 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x94>)
 800c226:	21cb      	movs	r1, #203	; 0xcb
 800c228:	e7f0      	b.n	800c20c <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x10>
 800c22a:	1a64      	subs	r4, r4, r1
 800c22c:	8604      	strh	r4, [r0, #48]	; 0x30
 800c22e:	8dc4      	ldrh	r4, [r0, #46]	; 0x2e
 800c230:	4421      	add	r1, r4
 800c232:	b289      	uxth	r1, r1
 800c234:	2909      	cmp	r1, #9
 800c236:	bf88      	it	hi
 800c238:	390a      	subhi	r1, #10
 800c23a:	85c1      	strh	r1, [r0, #46]	; 0x2e
 800c23c:	250a      	movs	r5, #10
 800c23e:	b1ba      	cbz	r2, 800c270 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x74>
 800c240:	3a01      	subs	r2, #1
 800c242:	8e01      	ldrh	r1, [r0, #48]	; 0x30
 800c244:	b292      	uxth	r2, r2
 800c246:	2909      	cmp	r1, #9
 800c248:	f833 4012 	ldrh.w	r4, [r3, r2, lsl #1]
 800c24c:	d903      	bls.n	800c256 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x5a>
 800c24e:	4b11      	ldr	r3, [pc, #68]	; (800c294 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x98>)
 800c250:	4a11      	ldr	r2, [pc, #68]	; (800c298 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x9c>)
 800c252:	21e6      	movs	r1, #230	; 0xe6
 800c254:	e7da      	b.n	800c20c <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x10>
 800c256:	3101      	adds	r1, #1
 800c258:	8601      	strh	r1, [r0, #48]	; 0x30
 800c25a:	8dc1      	ldrh	r1, [r0, #46]	; 0x2e
 800c25c:	b901      	cbnz	r1, 800c260 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x64>
 800c25e:	85c5      	strh	r5, [r0, #46]	; 0x2e
 800c260:	8dc1      	ldrh	r1, [r0, #46]	; 0x2e
 800c262:	3901      	subs	r1, #1
 800c264:	b289      	uxth	r1, r1
 800c266:	85c1      	strh	r1, [r0, #46]	; 0x2e
 800c268:	eb00 0141 	add.w	r1, r0, r1, lsl #1
 800c26c:	834c      	strh	r4, [r1, #26]
 800c26e:	e7e6      	b.n	800c23e <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x42>
 800c270:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800c274:	f7ff bf4a 	b.w	800c10c <_ZN8touchgfx12TextProvider15fillInputBufferEv>
 800c278:	0801999c 	.word	0x0801999c
 800c27c:	0801b293 	.word	0x0801b293
 800c280:	080199c3 	.word	0x080199c3
 800c284:	080199ef 	.word	0x080199ef
 800c288:	0801b33d 	.word	0x0801b33d
 800c28c:	0801b1ec 	.word	0x0801b1ec
 800c290:	0801b614 	.word	0x0801b614
 800c294:	0801b1f8 	.word	0x0801b1f8
 800c298:	0801b20b 	.word	0x0801b20b

0800c29c <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>:
 800c29c:	3a01      	subs	r2, #1
 800c29e:	b570      	push	{r4, r5, r6, lr}
 800c2a0:	b292      	uxth	r2, r2
 800c2a2:	f64f 76ff 	movw	r6, #65535	; 0xffff
 800c2a6:	42b2      	cmp	r2, r6
 800c2a8:	d019      	beq.n	800c2de <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x42>
 800c2aa:	8b04      	ldrh	r4, [r0, #24]
 800c2ac:	f831 5b02 	ldrh.w	r5, [r1], #2
 800c2b0:	4294      	cmp	r4, r2
 800c2b2:	d805      	bhi.n	800c2c0 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x24>
 800c2b4:	4b19      	ldr	r3, [pc, #100]	; (800c31c <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x80>)
 800c2b6:	4a1a      	ldr	r2, [pc, #104]	; (800c320 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x84>)
 800c2b8:	481a      	ldr	r0, [pc, #104]	; (800c324 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x88>)
 800c2ba:	21c5      	movs	r1, #197	; 0xc5
 800c2bc:	f00b fe4e 	bl	8017f5c <__assert_func>
 800c2c0:	8ac4      	ldrh	r4, [r0, #22]
 800c2c2:	4414      	add	r4, r2
 800c2c4:	b2a4      	uxth	r4, r4
 800c2c6:	2c01      	cmp	r4, #1
 800c2c8:	bf88      	it	hi
 800c2ca:	3c02      	subhi	r4, #2
 800c2cc:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 800c2d0:	3a01      	subs	r2, #1
 800c2d2:	8a64      	ldrh	r4, [r4, #18]
 800c2d4:	42ac      	cmp	r4, r5
 800c2d6:	b292      	uxth	r2, r2
 800c2d8:	d0e5      	beq.n	800c2a6 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0xa>
 800c2da:	2000      	movs	r0, #0
 800c2dc:	bd70      	pop	{r4, r5, r6, pc}
 800c2de:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 800c2e2:	2400      	movs	r4, #0
 800c2e4:	4413      	add	r3, r2
 800c2e6:	b2a2      	uxth	r2, r4
 800c2e8:	429a      	cmp	r2, r3
 800c2ea:	da14      	bge.n	800c316 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x7a>
 800c2ec:	8e06      	ldrh	r6, [r0, #48]	; 0x30
 800c2ee:	f831 5014 	ldrh.w	r5, [r1, r4, lsl #1]
 800c2f2:	4296      	cmp	r6, r2
 800c2f4:	d802      	bhi.n	800c2fc <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x60>
 800c2f6:	4b09      	ldr	r3, [pc, #36]	; (800c31c <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x80>)
 800c2f8:	4a0b      	ldr	r2, [pc, #44]	; (800c328 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x8c>)
 800c2fa:	e7dd      	b.n	800c2b8 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x1c>
 800c2fc:	8dc6      	ldrh	r6, [r0, #46]	; 0x2e
 800c2fe:	4432      	add	r2, r6
 800c300:	b292      	uxth	r2, r2
 800c302:	2a09      	cmp	r2, #9
 800c304:	bf88      	it	hi
 800c306:	3a0a      	subhi	r2, #10
 800c308:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 800c30c:	3401      	adds	r4, #1
 800c30e:	8b52      	ldrh	r2, [r2, #26]
 800c310:	42aa      	cmp	r2, r5
 800c312:	d0e8      	beq.n	800c2e6 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x4a>
 800c314:	e7e1      	b.n	800c2da <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x3e>
 800c316:	2001      	movs	r0, #1
 800c318:	e7e0      	b.n	800c2dc <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x40>
 800c31a:	bf00      	nop
 800c31c:	080199ef 	.word	0x080199ef
 800c320:	0801b698 	.word	0x0801b698
 800c324:	080199c3 	.word	0x080199c3
 800c328:	0801b33d 	.word	0x0801b33d

0800c32c <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>:
 800c32c:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c330:	4605      	mov	r5, r0
 800c332:	4616      	mov	r6, r2
 800c334:	1c8c      	adds	r4, r1, #2
 800c336:	8809      	ldrh	r1, [r1, #0]
 800c338:	ea4f 3a11 	mov.w	sl, r1, lsr #12
 800c33c:	f834 301a 	ldrh.w	r3, [r4, sl, lsl #1]
 800c340:	42b3      	cmp	r3, r6
 800c342:	d124      	bne.n	800c38e <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x62>
 800c344:	f3c1 2903 	ubfx	r9, r1, #8, #4
 800c348:	f3c1 1803 	ubfx	r8, r1, #4, #4
 800c34c:	f001 070f 	and.w	r7, r1, #15
 800c350:	f8cd 8000 	str.w	r8, [sp]
 800c354:	464b      	mov	r3, r9
 800c356:	4652      	mov	r2, sl
 800c358:	4621      	mov	r1, r4
 800c35a:	4628      	mov	r0, r5
 800c35c:	f7ff ff9e 	bl	800c29c <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>
 800c360:	4683      	mov	fp, r0
 800c362:	b168      	cbz	r0, 800c380 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x54>
 800c364:	eb0a 0109 	add.w	r1, sl, r9
 800c368:	4441      	add	r1, r8
 800c36a:	eb04 0341 	add.w	r3, r4, r1, lsl #1
 800c36e:	463a      	mov	r2, r7
 800c370:	4649      	mov	r1, r9
 800c372:	4628      	mov	r0, r5
 800c374:	f7ff ff42 	bl	800c1fc <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>
 800c378:	4658      	mov	r0, fp
 800c37a:	b003      	add	sp, #12
 800c37c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c380:	eb07 010a 	add.w	r1, r7, sl
 800c384:	4449      	add	r1, r9
 800c386:	4441      	add	r1, r8
 800c388:	eb04 0141 	add.w	r1, r4, r1, lsl #1
 800c38c:	e7d2      	b.n	800c334 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x8>
 800c38e:	f04f 0b00 	mov.w	fp, #0
 800c392:	e7f1      	b.n	800c378 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x4c>

0800c394 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>:
 800c394:	b570      	push	{r4, r5, r6, lr}
 800c396:	8810      	ldrh	r0, [r2, #0]
 800c398:	4298      	cmp	r0, r3
 800c39a:	d817      	bhi.n	800c3cc <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 800c39c:	1e48      	subs	r0, r1, #1
 800c39e:	f832 0020 	ldrh.w	r0, [r2, r0, lsl #2]
 800c3a2:	4298      	cmp	r0, r3
 800c3a4:	d312      	bcc.n	800c3cc <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 800c3a6:	2400      	movs	r4, #0
 800c3a8:	428c      	cmp	r4, r1
 800c3aa:	d20f      	bcs.n	800c3cc <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 800c3ac:	1860      	adds	r0, r4, r1
 800c3ae:	1040      	asrs	r0, r0, #1
 800c3b0:	0085      	lsls	r5, r0, #2
 800c3b2:	f832 6020 	ldrh.w	r6, [r2, r0, lsl #2]
 800c3b6:	42b3      	cmp	r3, r6
 800c3b8:	d902      	bls.n	800c3c0 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x2c>
 800c3ba:	3001      	adds	r0, #1
 800c3bc:	b284      	uxth	r4, r0
 800c3be:	e7f3      	b.n	800c3a8 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 800c3c0:	d201      	bcs.n	800c3c6 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x32>
 800c3c2:	b281      	uxth	r1, r0
 800c3c4:	e7f0      	b.n	800c3a8 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 800c3c6:	442a      	add	r2, r5
 800c3c8:	8850      	ldrh	r0, [r2, #2]
 800c3ca:	bd70      	pop	{r4, r5, r6, pc}
 800c3cc:	2000      	movs	r0, #0
 800c3ce:	e7fc      	b.n	800c3ca <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x36>

0800c3d0 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>:
 800c3d0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800c3d4:	6bc5      	ldr	r5, [r0, #60]	; 0x3c
 800c3d6:	886f      	ldrh	r7, [r5, #2]
 800c3d8:	4604      	mov	r4, r0
 800c3da:	087f      	lsrs	r7, r7, #1
 800c3dc:	260b      	movs	r6, #11
 800c3de:	3e01      	subs	r6, #1
 800c3e0:	d01b      	beq.n	800c41a <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x4a>
 800c3e2:	8e23      	ldrh	r3, [r4, #48]	; 0x30
 800c3e4:	b92b      	cbnz	r3, 800c3f2 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x22>
 800c3e6:	4b0e      	ldr	r3, [pc, #56]	; (800c420 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x50>)
 800c3e8:	4a0e      	ldr	r2, [pc, #56]	; (800c424 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x54>)
 800c3ea:	480f      	ldr	r0, [pc, #60]	; (800c428 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x58>)
 800c3ec:	21c0      	movs	r1, #192	; 0xc0
 800c3ee:	f00b fdb5 	bl	8017f5c <__assert_func>
 800c3f2:	8de3      	ldrh	r3, [r4, #46]	; 0x2e
 800c3f4:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 800c3f8:	462a      	mov	r2, r5
 800c3fa:	f8b3 801a 	ldrh.w	r8, [r3, #26]
 800c3fe:	4639      	mov	r1, r7
 800c400:	4643      	mov	r3, r8
 800c402:	4620      	mov	r0, r4
 800c404:	f7ff ffc6 	bl	800c394 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>
 800c408:	b138      	cbz	r0, 800c41a <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x4a>
 800c40a:	eb05 0140 	add.w	r1, r5, r0, lsl #1
 800c40e:	4642      	mov	r2, r8
 800c410:	4620      	mov	r0, r4
 800c412:	f7ff ff8b 	bl	800c32c <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>
 800c416:	2800      	cmp	r0, #0
 800c418:	d1e1      	bne.n	800c3de <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0xe>
 800c41a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800c41e:	bf00      	nop
 800c420:	0801999c 	.word	0x0801999c
 800c424:	0801b40f 	.word	0x0801b40f
 800c428:	080199c3 	.word	0x080199c3

0800c42c <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>:
 800c42c:	4b01      	ldr	r3, [pc, #4]	; (800c434 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE+0x8>)
 800c42e:	6018      	str	r0, [r3, #0]
 800c430:	4770      	bx	lr
 800c432:	bf00      	nop
 800c434:	200121f8 	.word	0x200121f8

0800c438 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>:
 800c438:	4b07      	ldr	r3, [pc, #28]	; (800c458 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x20>)
 800c43a:	881a      	ldrh	r2, [r3, #0]
 800c43c:	4282      	cmp	r2, r0
 800c43e:	d809      	bhi.n	800c454 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x1c>
 800c440:	4b06      	ldr	r3, [pc, #24]	; (800c45c <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x24>)
 800c442:	881b      	ldrh	r3, [r3, #0]
 800c444:	4413      	add	r3, r2
 800c446:	4298      	cmp	r0, r3
 800c448:	da04      	bge.n	800c454 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x1c>
 800c44a:	4b05      	ldr	r3, [pc, #20]	; (800c460 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x28>)
 800c44c:	681b      	ldr	r3, [r3, #0]
 800c44e:	f853 0020 	ldr.w	r0, [r3, r0, lsl #2]
 800c452:	4770      	bx	lr
 800c454:	2000      	movs	r0, #0
 800c456:	4770      	bx	lr
 800c458:	20012218 	.word	0x20012218
 800c45c:	2001221c 	.word	0x2001221c
 800c460:	200121fc 	.word	0x200121fc

0800c464 <_ZN8touchgfx6Bitmap10clearCacheEv>:
 800c464:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800c468:	4d28      	ldr	r5, [pc, #160]	; (800c50c <_ZN8touchgfx6Bitmap10clearCacheEv+0xa8>)
 800c46a:	682b      	ldr	r3, [r5, #0]
 800c46c:	2b00      	cmp	r3, #0
 800c46e:	d04a      	beq.n	800c506 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa2>
 800c470:	4a27      	ldr	r2, [pc, #156]	; (800c510 <_ZN8touchgfx6Bitmap10clearCacheEv+0xac>)
 800c472:	4e28      	ldr	r6, [pc, #160]	; (800c514 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb0>)
 800c474:	8810      	ldrh	r0, [r2, #0]
 800c476:	f8b6 8000 	ldrh.w	r8, [r6]
 800c47a:	4c27      	ldr	r4, [pc, #156]	; (800c518 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb4>)
 800c47c:	4f27      	ldr	r7, [pc, #156]	; (800c51c <_ZN8touchgfx6Bitmap10clearCacheEv+0xb8>)
 800c47e:	4440      	add	r0, r8
 800c480:	1c41      	adds	r1, r0, #1
 800c482:	f021 0101 	bic.w	r1, r1, #1
 800c486:	0409      	lsls	r1, r1, #16
 800c488:	0c09      	lsrs	r1, r1, #16
 800c48a:	ea4f 0e80 	mov.w	lr, r0, lsl #2
 800c48e:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 800c492:	eb03 020e 	add.w	r2, r3, lr
 800c496:	eb0e 010c 	add.w	r1, lr, ip
 800c49a:	6022      	str	r2, [r4, #0]
 800c49c:	185a      	adds	r2, r3, r1
 800c49e:	603a      	str	r2, [r7, #0]
 800c4a0:	220e      	movs	r2, #14
 800c4a2:	fb02 f208 	mul.w	r2, r2, r8
 800c4a6:	3203      	adds	r2, #3
 800c4a8:	f022 0203 	bic.w	r2, r2, #3
 800c4ac:	4411      	add	r1, r2
 800c4ae:	440b      	add	r3, r1
 800c4b0:	491b      	ldr	r1, [pc, #108]	; (800c520 <_ZN8touchgfx6Bitmap10clearCacheEv+0xbc>)
 800c4b2:	600b      	str	r3, [r1, #0]
 800c4b4:	491b      	ldr	r1, [pc, #108]	; (800c524 <_ZN8touchgfx6Bitmap10clearCacheEv+0xc0>)
 800c4b6:	2300      	movs	r3, #0
 800c4b8:	800b      	strh	r3, [r1, #0]
 800c4ba:	491b      	ldr	r1, [pc, #108]	; (800c528 <_ZN8touchgfx6Bitmap10clearCacheEv+0xc4>)
 800c4bc:	6809      	ldr	r1, [r1, #0]
 800c4be:	eba1 010e 	sub.w	r1, r1, lr
 800c4c2:	eba1 010c 	sub.w	r1, r1, ip
 800c4c6:	1a8a      	subs	r2, r1, r2
 800c4c8:	4918      	ldr	r1, [pc, #96]	; (800c52c <_ZN8touchgfx6Bitmap10clearCacheEv+0xc8>)
 800c4ca:	600a      	str	r2, [r1, #0]
 800c4cc:	4a18      	ldr	r2, [pc, #96]	; (800c530 <_ZN8touchgfx6Bitmap10clearCacheEv+0xcc>)
 800c4ce:	469c      	mov	ip, r3
 800c4d0:	8013      	strh	r3, [r2, #0]
 800c4d2:	f64f 71ff 	movw	r1, #65535	; 0xffff
 800c4d6:	4283      	cmp	r3, r0
 800c4d8:	d10d      	bne.n	800c4f6 <_ZN8touchgfx6Bitmap10clearCacheEv+0x92>
 800c4da:	8835      	ldrh	r5, [r6, #0]
 800c4dc:	6838      	ldr	r0, [r7, #0]
 800c4de:	2300      	movs	r3, #0
 800c4e0:	240e      	movs	r4, #14
 800c4e2:	429d      	cmp	r5, r3
 800c4e4:	d90f      	bls.n	800c506 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa2>
 800c4e6:	fb04 0203 	mla	r2, r4, r3, r0
 800c4ea:	3301      	adds	r3, #1
 800c4ec:	7b11      	ldrb	r1, [r2, #12]
 800c4ee:	f36f 1145 	bfc	r1, #5, #1
 800c4f2:	7311      	strb	r1, [r2, #12]
 800c4f4:	e7f5      	b.n	800c4e2 <_ZN8touchgfx6Bitmap10clearCacheEv+0x7e>
 800c4f6:	682a      	ldr	r2, [r5, #0]
 800c4f8:	f842 c023 	str.w	ip, [r2, r3, lsl #2]
 800c4fc:	6822      	ldr	r2, [r4, #0]
 800c4fe:	f822 1013 	strh.w	r1, [r2, r3, lsl #1]
 800c502:	3301      	adds	r3, #1
 800c504:	e7e7      	b.n	800c4d6 <_ZN8touchgfx6Bitmap10clearCacheEv+0x72>
 800c506:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800c50a:	bf00      	nop
 800c50c:	200121fc 	.word	0x200121fc
 800c510:	20012218 	.word	0x20012218
 800c514:	2001221c 	.word	0x2001221c
 800c518:	20012210 	.word	0x20012210
 800c51c:	20012200 	.word	0x20012200
 800c520:	20012208 	.word	0x20012208
 800c524:	2001221a 	.word	0x2001221a
 800c528:	20012204 	.word	0x20012204
 800c52c:	20012214 	.word	0x20012214
 800c530:	2001220c 	.word	0x2001220c

0800c534 <_ZN8touchgfx6Bitmap8setCacheEPtmm>:
 800c534:	b510      	push	{r4, lr}
 800c536:	4b10      	ldr	r3, [pc, #64]	; (800c578 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x44>)
 800c538:	681b      	ldr	r3, [r3, #0]
 800c53a:	b9db      	cbnz	r3, 800c574 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x40>
 800c53c:	b1d1      	cbz	r1, 800c574 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x40>
 800c53e:	4b0f      	ldr	r3, [pc, #60]	; (800c57c <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x48>)
 800c540:	801a      	strh	r2, [r3, #0]
 800c542:	4b0f      	ldr	r3, [pc, #60]	; (800c580 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x4c>)
 800c544:	881b      	ldrh	r3, [r3, #0]
 800c546:	b292      	uxth	r2, r2
 800c548:	240e      	movs	r4, #14
 800c54a:	4413      	add	r3, r2
 800c54c:	4362      	muls	r2, r4
 800c54e:	2406      	movs	r4, #6
 800c550:	fb04 2203 	mla	r2, r4, r3, r2
 800c554:	428a      	cmp	r2, r1
 800c556:	d305      	bcc.n	800c564 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x30>
 800c558:	4b0a      	ldr	r3, [pc, #40]	; (800c584 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x50>)
 800c55a:	4a0b      	ldr	r2, [pc, #44]	; (800c588 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x54>)
 800c55c:	480b      	ldr	r0, [pc, #44]	; (800c58c <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x58>)
 800c55e:	2137      	movs	r1, #55	; 0x37
 800c560:	f00b fcfc 	bl	8017f5c <__assert_func>
 800c564:	4b0a      	ldr	r3, [pc, #40]	; (800c590 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x5c>)
 800c566:	6019      	str	r1, [r3, #0]
 800c568:	4b0a      	ldr	r3, [pc, #40]	; (800c594 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x60>)
 800c56a:	6018      	str	r0, [r3, #0]
 800c56c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800c570:	f7ff bf78 	b.w	800c464 <_ZN8touchgfx6Bitmap10clearCacheEv>
 800c574:	bd10      	pop	{r4, pc}
 800c576:	bf00      	nop
 800c578:	20012208 	.word	0x20012208
 800c57c:	2001221c 	.word	0x2001221c
 800c580:	20012218 	.word	0x20012218
 800c584:	0801b7c6 	.word	0x0801b7c6
 800c588:	0801b81f 	.word	0x0801b81f
 800c58c:	0801b7a1 	.word	0x0801b7a1
 800c590:	20012204 	.word	0x20012204
 800c594:	200121fc 	.word	0x200121fc

0800c598 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>:
 800c598:	b470      	push	{r4, r5, r6}
 800c59a:	4c07      	ldr	r4, [pc, #28]	; (800c5b8 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x20>)
 800c59c:	6826      	ldr	r6, [r4, #0]
 800c59e:	4605      	mov	r5, r0
 800c5a0:	4610      	mov	r0, r2
 800c5a2:	9a03      	ldr	r2, [sp, #12]
 800c5a4:	b936      	cbnz	r6, 800c5b4 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x1c>
 800c5a6:	6025      	str	r5, [r4, #0]
 800c5a8:	4c04      	ldr	r4, [pc, #16]	; (800c5bc <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x24>)
 800c5aa:	8021      	strh	r1, [r4, #0]
 800c5ac:	bc70      	pop	{r4, r5, r6}
 800c5ae:	4619      	mov	r1, r3
 800c5b0:	f7ff bfc0 	b.w	800c534 <_ZN8touchgfx6Bitmap8setCacheEPtmm>
 800c5b4:	bc70      	pop	{r4, r5, r6}
 800c5b6:	4770      	bx	lr
 800c5b8:	20012220 	.word	0x20012220
 800c5bc:	20012218 	.word	0x20012218

0800c5c0 <_ZNK8touchgfx6Bitmap8getWidthEv>:
 800c5c0:	b508      	push	{r3, lr}
 800c5c2:	4b14      	ldr	r3, [pc, #80]	; (800c614 <_ZNK8touchgfx6Bitmap8getWidthEv+0x54>)
 800c5c4:	6819      	ldr	r1, [r3, #0]
 800c5c6:	b931      	cbnz	r1, 800c5d6 <_ZNK8touchgfx6Bitmap8getWidthEv+0x16>
 800c5c8:	4b13      	ldr	r3, [pc, #76]	; (800c618 <_ZNK8touchgfx6Bitmap8getWidthEv+0x58>)
 800c5ca:	4a14      	ldr	r2, [pc, #80]	; (800c61c <_ZNK8touchgfx6Bitmap8getWidthEv+0x5c>)
 800c5cc:	4814      	ldr	r0, [pc, #80]	; (800c620 <_ZNK8touchgfx6Bitmap8getWidthEv+0x60>)
 800c5ce:	f44f 713e 	mov.w	r1, #760	; 0x2f8
 800c5d2:	f00b fcc3 	bl	8017f5c <__assert_func>
 800c5d6:	4a13      	ldr	r2, [pc, #76]	; (800c624 <_ZNK8touchgfx6Bitmap8getWidthEv+0x64>)
 800c5d8:	8803      	ldrh	r3, [r0, #0]
 800c5da:	8812      	ldrh	r2, [r2, #0]
 800c5dc:	4293      	cmp	r3, r2
 800c5de:	d204      	bcs.n	800c5ea <_ZNK8touchgfx6Bitmap8getWidthEv+0x2a>
 800c5e0:	2214      	movs	r2, #20
 800c5e2:	fb02 1303 	mla	r3, r2, r3, r1
 800c5e6:	8918      	ldrh	r0, [r3, #8]
 800c5e8:	bd08      	pop	{r3, pc}
 800c5ea:	490f      	ldr	r1, [pc, #60]	; (800c628 <_ZNK8touchgfx6Bitmap8getWidthEv+0x68>)
 800c5ec:	8809      	ldrh	r1, [r1, #0]
 800c5ee:	4411      	add	r1, r2
 800c5f0:	428b      	cmp	r3, r1
 800c5f2:	da06      	bge.n	800c602 <_ZNK8touchgfx6Bitmap8getWidthEv+0x42>
 800c5f4:	1a9b      	subs	r3, r3, r2
 800c5f6:	4a0d      	ldr	r2, [pc, #52]	; (800c62c <_ZNK8touchgfx6Bitmap8getWidthEv+0x6c>)
 800c5f8:	6812      	ldr	r2, [r2, #0]
 800c5fa:	210e      	movs	r1, #14
 800c5fc:	fb01 2303 	mla	r3, r1, r3, r2
 800c600:	e7f1      	b.n	800c5e6 <_ZNK8touchgfx6Bitmap8getWidthEv+0x26>
 800c602:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 800c606:	4293      	cmp	r3, r2
 800c608:	bf0a      	itet	eq
 800c60a:	4b09      	ldreq	r3, [pc, #36]	; (800c630 <_ZNK8touchgfx6Bitmap8getWidthEv+0x70>)
 800c60c:	2000      	movne	r0, #0
 800c60e:	8818      	ldrheq	r0, [r3, #0]
 800c610:	e7ea      	b.n	800c5e8 <_ZNK8touchgfx6Bitmap8getWidthEv+0x28>
 800c612:	bf00      	nop
 800c614:	20012220 	.word	0x20012220
 800c618:	0801ae34 	.word	0x0801ae34
 800c61c:	0801b8cc 	.word	0x0801b8cc
 800c620:	0801b7a1 	.word	0x0801b7a1
 800c624:	20012218 	.word	0x20012218
 800c628:	2001221c 	.word	0x2001221c
 800c62c:	20012200 	.word	0x20012200
 800c630:	2001216c 	.word	0x2001216c

0800c634 <_ZNK8touchgfx6Bitmap9getHeightEv>:
 800c634:	b508      	push	{r3, lr}
 800c636:	4b14      	ldr	r3, [pc, #80]	; (800c688 <_ZNK8touchgfx6Bitmap9getHeightEv+0x54>)
 800c638:	6819      	ldr	r1, [r3, #0]
 800c63a:	b931      	cbnz	r1, 800c64a <_ZNK8touchgfx6Bitmap9getHeightEv+0x16>
 800c63c:	4b13      	ldr	r3, [pc, #76]	; (800c68c <_ZNK8touchgfx6Bitmap9getHeightEv+0x58>)
 800c63e:	4a14      	ldr	r2, [pc, #80]	; (800c690 <_ZNK8touchgfx6Bitmap9getHeightEv+0x5c>)
 800c640:	4814      	ldr	r0, [pc, #80]	; (800c694 <_ZNK8touchgfx6Bitmap9getHeightEv+0x60>)
 800c642:	f44f 7143 	mov.w	r1, #780	; 0x30c
 800c646:	f00b fc89 	bl	8017f5c <__assert_func>
 800c64a:	4a13      	ldr	r2, [pc, #76]	; (800c698 <_ZNK8touchgfx6Bitmap9getHeightEv+0x64>)
 800c64c:	8803      	ldrh	r3, [r0, #0]
 800c64e:	8812      	ldrh	r2, [r2, #0]
 800c650:	4293      	cmp	r3, r2
 800c652:	d204      	bcs.n	800c65e <_ZNK8touchgfx6Bitmap9getHeightEv+0x2a>
 800c654:	2214      	movs	r2, #20
 800c656:	fb02 1303 	mla	r3, r2, r3, r1
 800c65a:	8958      	ldrh	r0, [r3, #10]
 800c65c:	bd08      	pop	{r3, pc}
 800c65e:	490f      	ldr	r1, [pc, #60]	; (800c69c <_ZNK8touchgfx6Bitmap9getHeightEv+0x68>)
 800c660:	8809      	ldrh	r1, [r1, #0]
 800c662:	4411      	add	r1, r2
 800c664:	428b      	cmp	r3, r1
 800c666:	da06      	bge.n	800c676 <_ZNK8touchgfx6Bitmap9getHeightEv+0x42>
 800c668:	1a9b      	subs	r3, r3, r2
 800c66a:	4a0d      	ldr	r2, [pc, #52]	; (800c6a0 <_ZNK8touchgfx6Bitmap9getHeightEv+0x6c>)
 800c66c:	6812      	ldr	r2, [r2, #0]
 800c66e:	210e      	movs	r1, #14
 800c670:	fb01 2303 	mla	r3, r1, r3, r2
 800c674:	e7f1      	b.n	800c65a <_ZNK8touchgfx6Bitmap9getHeightEv+0x26>
 800c676:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 800c67a:	4293      	cmp	r3, r2
 800c67c:	bf0a      	itet	eq
 800c67e:	4b09      	ldreq	r3, [pc, #36]	; (800c6a4 <_ZNK8touchgfx6Bitmap9getHeightEv+0x70>)
 800c680:	2000      	movne	r0, #0
 800c682:	8818      	ldrheq	r0, [r3, #0]
 800c684:	e7ea      	b.n	800c65c <_ZNK8touchgfx6Bitmap9getHeightEv+0x28>
 800c686:	bf00      	nop
 800c688:	20012220 	.word	0x20012220
 800c68c:	0801ae34 	.word	0x0801ae34
 800c690:	0801b8f8 	.word	0x0801b8f8
 800c694:	0801b7a1 	.word	0x0801b7a1
 800c698:	20012218 	.word	0x20012218
 800c69c:	2001221c 	.word	0x2001221c
 800c6a0:	20012200 	.word	0x20012200
 800c6a4:	2001216e 	.word	0x2001216e

0800c6a8 <_ZNK8touchgfx6Bitmap12getSolidRectEv>:
 800c6a8:	b510      	push	{r4, lr}
 800c6aa:	4b23      	ldr	r3, [pc, #140]	; (800c738 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x90>)
 800c6ac:	681c      	ldr	r4, [r3, #0]
 800c6ae:	b934      	cbnz	r4, 800c6be <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x16>
 800c6b0:	4b22      	ldr	r3, [pc, #136]	; (800c73c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x94>)
 800c6b2:	4a23      	ldr	r2, [pc, #140]	; (800c740 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x98>)
 800c6b4:	4823      	ldr	r0, [pc, #140]	; (800c744 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x9c>)
 800c6b6:	f44f 7148 	mov.w	r1, #800	; 0x320
 800c6ba:	f00b fc4f 	bl	8017f5c <__assert_func>
 800c6be:	4a22      	ldr	r2, [pc, #136]	; (800c748 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xa0>)
 800c6c0:	880b      	ldrh	r3, [r1, #0]
 800c6c2:	8812      	ldrh	r2, [r2, #0]
 800c6c4:	4293      	cmp	r3, r2
 800c6c6:	d211      	bcs.n	800c6ec <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x44>
 800c6c8:	2214      	movs	r2, #20
 800c6ca:	fb02 4303 	mla	r3, r2, r3, r4
 800c6ce:	8a1a      	ldrh	r2, [r3, #16]
 800c6d0:	f9b3 400c 	ldrsh.w	r4, [r3, #12]
 800c6d4:	f9b3 100e 	ldrsh.w	r1, [r3, #14]
 800c6d8:	8a5b      	ldrh	r3, [r3, #18]
 800c6da:	8004      	strh	r4, [r0, #0]
 800c6dc:	f3c2 020c 	ubfx	r2, r2, #0, #13
 800c6e0:	f3c3 030c 	ubfx	r3, r3, #0, #13
 800c6e4:	8041      	strh	r1, [r0, #2]
 800c6e6:	8082      	strh	r2, [r0, #4]
 800c6e8:	80c3      	strh	r3, [r0, #6]
 800c6ea:	e00e      	b.n	800c70a <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x62>
 800c6ec:	4917      	ldr	r1, [pc, #92]	; (800c74c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xa4>)
 800c6ee:	8809      	ldrh	r1, [r1, #0]
 800c6f0:	4411      	add	r1, r2
 800c6f2:	428b      	cmp	r3, r1
 800c6f4:	da0a      	bge.n	800c70c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x64>
 800c6f6:	1a9b      	subs	r3, r3, r2
 800c6f8:	4a15      	ldr	r2, [pc, #84]	; (800c750 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xa8>)
 800c6fa:	6812      	ldr	r2, [r2, #0]
 800c6fc:	210e      	movs	r1, #14
 800c6fe:	fb01 2303 	mla	r3, r1, r3, r2
 800c702:	681a      	ldr	r2, [r3, #0]
 800c704:	6002      	str	r2, [r0, #0]
 800c706:	685a      	ldr	r2, [r3, #4]
 800c708:	6042      	str	r2, [r0, #4]
 800c70a:	bd10      	pop	{r4, pc}
 800c70c:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 800c710:	4293      	cmp	r3, r2
 800c712:	d10b      	bne.n	800c72c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x84>
 800c714:	4b0f      	ldr	r3, [pc, #60]	; (800c754 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xac>)
 800c716:	f9b3 1000 	ldrsh.w	r1, [r3]
 800c71a:	4b0f      	ldr	r3, [pc, #60]	; (800c758 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xb0>)
 800c71c:	8081      	strh	r1, [r0, #4]
 800c71e:	f9b3 2000 	ldrsh.w	r2, [r3]
 800c722:	80c2      	strh	r2, [r0, #6]
 800c724:	2300      	movs	r3, #0
 800c726:	8003      	strh	r3, [r0, #0]
 800c728:	8043      	strh	r3, [r0, #2]
 800c72a:	e7ee      	b.n	800c70a <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x62>
 800c72c:	2300      	movs	r3, #0
 800c72e:	8003      	strh	r3, [r0, #0]
 800c730:	8043      	strh	r3, [r0, #2]
 800c732:	8083      	strh	r3, [r0, #4]
 800c734:	e7d8      	b.n	800c6e8 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x40>
 800c736:	bf00      	nop
 800c738:	20012220 	.word	0x20012220
 800c73c:	0801ae34 	.word	0x0801ae34
 800c740:	0801b865 	.word	0x0801b865
 800c744:	0801b7a1 	.word	0x0801b7a1
 800c748:	20012218 	.word	0x20012218
 800c74c:	2001221c 	.word	0x2001221c
 800c750:	20012200 	.word	0x20012200
 800c754:	2001216c 	.word	0x2001216c
 800c758:	2001216e 	.word	0x2001216e

0800c75c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>:
 800c75c:	4b18      	ldr	r3, [pc, #96]	; (800c7c0 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x64>)
 800c75e:	681b      	ldr	r3, [r3, #0]
 800c760:	b34b      	cbz	r3, 800c7b6 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5a>
 800c762:	4a18      	ldr	r2, [pc, #96]	; (800c7c4 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x68>)
 800c764:	8800      	ldrh	r0, [r0, #0]
 800c766:	8812      	ldrh	r2, [r2, #0]
 800c768:	4290      	cmp	r0, r2
 800c76a:	d211      	bcs.n	800c790 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x34>
 800c76c:	2214      	movs	r2, #20
 800c76e:	fb02 3300 	mla	r3, r2, r0, r3
 800c772:	8a1a      	ldrh	r2, [r3, #16]
 800c774:	8919      	ldrh	r1, [r3, #8]
 800c776:	f3c2 020c 	ubfx	r2, r2, #0, #13
 800c77a:	428a      	cmp	r2, r1
 800c77c:	db1d      	blt.n	800c7ba <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5e>
 800c77e:	8a58      	ldrh	r0, [r3, #18]
 800c780:	f3c0 000c 	ubfx	r0, r0, #0, #13
 800c784:	895b      	ldrh	r3, [r3, #10]
 800c786:	4298      	cmp	r0, r3
 800c788:	bfac      	ite	ge
 800c78a:	2000      	movge	r0, #0
 800c78c:	2001      	movlt	r0, #1
 800c78e:	4770      	bx	lr
 800c790:	4b0d      	ldr	r3, [pc, #52]	; (800c7c8 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x6c>)
 800c792:	881b      	ldrh	r3, [r3, #0]
 800c794:	4413      	add	r3, r2
 800c796:	4298      	cmp	r0, r3
 800c798:	da0d      	bge.n	800c7b6 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5a>
 800c79a:	4b0c      	ldr	r3, [pc, #48]	; (800c7cc <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x70>)
 800c79c:	681b      	ldr	r3, [r3, #0]
 800c79e:	1a80      	subs	r0, r0, r2
 800c7a0:	220e      	movs	r2, #14
 800c7a2:	fb02 3300 	mla	r3, r2, r0, r3
 800c7a6:	f9b3 1004 	ldrsh.w	r1, [r3, #4]
 800c7aa:	891a      	ldrh	r2, [r3, #8]
 800c7ac:	4291      	cmp	r1, r2
 800c7ae:	db04      	blt.n	800c7ba <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5e>
 800c7b0:	f9b3 0006 	ldrsh.w	r0, [r3, #6]
 800c7b4:	e7e6      	b.n	800c784 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x28>
 800c7b6:	2000      	movs	r0, #0
 800c7b8:	4770      	bx	lr
 800c7ba:	2001      	movs	r0, #1
 800c7bc:	4770      	bx	lr
 800c7be:	bf00      	nop
 800c7c0:	20012220 	.word	0x20012220
 800c7c4:	20012218 	.word	0x20012218
 800c7c8:	2001221c 	.word	0x2001221c
 800c7cc:	20012200 	.word	0x20012200

0800c7d0 <_ZNK8touchgfx6Bitmap7getDataEv>:
 800c7d0:	b508      	push	{r3, lr}
 800c7d2:	4b12      	ldr	r3, [pc, #72]	; (800c81c <_ZNK8touchgfx6Bitmap7getDataEv+0x4c>)
 800c7d4:	6819      	ldr	r1, [r3, #0]
 800c7d6:	b931      	cbnz	r1, 800c7e6 <_ZNK8touchgfx6Bitmap7getDataEv+0x16>
 800c7d8:	4b11      	ldr	r3, [pc, #68]	; (800c820 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 800c7da:	4a12      	ldr	r2, [pc, #72]	; (800c824 <_ZNK8touchgfx6Bitmap7getDataEv+0x54>)
 800c7dc:	4812      	ldr	r0, [pc, #72]	; (800c828 <_ZNK8touchgfx6Bitmap7getDataEv+0x58>)
 800c7de:	f44f 7151 	mov.w	r1, #836	; 0x344
 800c7e2:	f00b fbbb 	bl	8017f5c <__assert_func>
 800c7e6:	8803      	ldrh	r3, [r0, #0]
 800c7e8:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800c7ec:	4293      	cmp	r3, r2
 800c7ee:	d012      	beq.n	800c816 <_ZNK8touchgfx6Bitmap7getDataEv+0x46>
 800c7f0:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 800c7f4:	4293      	cmp	r3, r2
 800c7f6:	d103      	bne.n	800c800 <_ZNK8touchgfx6Bitmap7getDataEv+0x30>
 800c7f8:	4b0c      	ldr	r3, [pc, #48]	; (800c82c <_ZNK8touchgfx6Bitmap7getDataEv+0x5c>)
 800c7fa:	681b      	ldr	r3, [r3, #0]
 800c7fc:	6c58      	ldr	r0, [r3, #68]	; 0x44
 800c7fe:	bd08      	pop	{r3, pc}
 800c800:	4a0b      	ldr	r2, [pc, #44]	; (800c830 <_ZNK8touchgfx6Bitmap7getDataEv+0x60>)
 800c802:	6812      	ldr	r2, [r2, #0]
 800c804:	b11a      	cbz	r2, 800c80e <_ZNK8touchgfx6Bitmap7getDataEv+0x3e>
 800c806:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 800c80a:	2800      	cmp	r0, #0
 800c80c:	d1f7      	bne.n	800c7fe <_ZNK8touchgfx6Bitmap7getDataEv+0x2e>
 800c80e:	2214      	movs	r2, #20
 800c810:	4353      	muls	r3, r2
 800c812:	58c8      	ldr	r0, [r1, r3]
 800c814:	e7f3      	b.n	800c7fe <_ZNK8touchgfx6Bitmap7getDataEv+0x2e>
 800c816:	2000      	movs	r0, #0
 800c818:	e7f1      	b.n	800c7fe <_ZNK8touchgfx6Bitmap7getDataEv+0x2e>
 800c81a:	bf00      	nop
 800c81c:	20012220 	.word	0x20012220
 800c820:	0801ae34 	.word	0x0801ae34
 800c824:	0801b89b 	.word	0x0801b89b
 800c828:	0801b7a1 	.word	0x0801b7a1
 800c82c:	20012178 	.word	0x20012178
 800c830:	200121fc 	.word	0x200121fc

0800c834 <_ZNK8touchgfx6Bitmap12getExtraDataEv>:
 800c834:	8802      	ldrh	r2, [r0, #0]
 800c836:	f64f 73fd 	movw	r3, #65533	; 0xfffd
 800c83a:	429a      	cmp	r2, r3
 800c83c:	d840      	bhi.n	800c8c0 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8c>
 800c83e:	4b21      	ldr	r3, [pc, #132]	; (800c8c4 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>)
 800c840:	881b      	ldrh	r3, [r3, #0]
 800c842:	429a      	cmp	r2, r3
 800c844:	d220      	bcs.n	800c888 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x54>
 800c846:	4b20      	ldr	r3, [pc, #128]	; (800c8c8 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x94>)
 800c848:	6819      	ldr	r1, [r3, #0]
 800c84a:	2314      	movs	r3, #20
 800c84c:	fb03 1302 	mla	r3, r3, r2, r1
 800c850:	6858      	ldr	r0, [r3, #4]
 800c852:	2800      	cmp	r0, #0
 800c854:	d035      	beq.n	800c8c2 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 800c856:	491d      	ldr	r1, [pc, #116]	; (800c8cc <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>)
 800c858:	6809      	ldr	r1, [r1, #0]
 800c85a:	2900      	cmp	r1, #0
 800c85c:	d031      	beq.n	800c8c2 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 800c85e:	f851 1022 	ldr.w	r1, [r1, r2, lsl #2]
 800c862:	b371      	cbz	r1, 800c8c2 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 800c864:	895a      	ldrh	r2, [r3, #10]
 800c866:	8918      	ldrh	r0, [r3, #8]
 800c868:	4350      	muls	r0, r2
 800c86a:	7c5a      	ldrb	r2, [r3, #17]
 800c86c:	7cdb      	ldrb	r3, [r3, #19]
 800c86e:	0952      	lsrs	r2, r2, #5
 800c870:	f3c3 1342 	ubfx	r3, r3, #5, #3
 800c874:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 800c878:	2b0b      	cmp	r3, #11
 800c87a:	bf18      	it	ne
 800c87c:	0040      	lslne	r0, r0, #1
 800c87e:	3003      	adds	r0, #3
 800c880:	f020 0003 	bic.w	r0, r0, #3
 800c884:	4408      	add	r0, r1
 800c886:	4770      	bx	lr
 800c888:	4911      	ldr	r1, [pc, #68]	; (800c8d0 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 800c88a:	8809      	ldrh	r1, [r1, #0]
 800c88c:	4419      	add	r1, r3
 800c88e:	428a      	cmp	r2, r1
 800c890:	da16      	bge.n	800c8c0 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8c>
 800c892:	4910      	ldr	r1, [pc, #64]	; (800c8d4 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa0>)
 800c894:	6809      	ldr	r1, [r1, #0]
 800c896:	1ad3      	subs	r3, r2, r3
 800c898:	200e      	movs	r0, #14
 800c89a:	fb00 1303 	mla	r3, r0, r3, r1
 800c89e:	7b19      	ldrb	r1, [r3, #12]
 800c8a0:	f001 011f 	and.w	r1, r1, #31
 800c8a4:	290b      	cmp	r1, #11
 800c8a6:	d10b      	bne.n	800c8c0 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8c>
 800c8a8:	8919      	ldrh	r1, [r3, #8]
 800c8aa:	8958      	ldrh	r0, [r3, #10]
 800c8ac:	4b07      	ldr	r3, [pc, #28]	; (800c8cc <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>)
 800c8ae:	4348      	muls	r0, r1
 800c8b0:	6819      	ldr	r1, [r3, #0]
 800c8b2:	3003      	adds	r0, #3
 800c8b4:	f020 0303 	bic.w	r3, r0, #3
 800c8b8:	f851 0022 	ldr.w	r0, [r1, r2, lsl #2]
 800c8bc:	4418      	add	r0, r3
 800c8be:	4770      	bx	lr
 800c8c0:	2000      	movs	r0, #0
 800c8c2:	4770      	bx	lr
 800c8c4:	20012218 	.word	0x20012218
 800c8c8:	20012220 	.word	0x20012220
 800c8cc:	200121fc 	.word	0x200121fc
 800c8d0:	2001221c 	.word	0x2001221c
 800c8d4:	20012200 	.word	0x20012200

0800c8d8 <_ZNK8touchgfx6Bitmap9getFormatEv>:
 800c8d8:	4b19      	ldr	r3, [pc, #100]	; (800c940 <_ZNK8touchgfx6Bitmap9getFormatEv+0x68>)
 800c8da:	6819      	ldr	r1, [r3, #0]
 800c8dc:	8803      	ldrh	r3, [r0, #0]
 800c8de:	b1e9      	cbz	r1, 800c91c <_ZNK8touchgfx6Bitmap9getFormatEv+0x44>
 800c8e0:	4a18      	ldr	r2, [pc, #96]	; (800c944 <_ZNK8touchgfx6Bitmap9getFormatEv+0x6c>)
 800c8e2:	8812      	ldrh	r2, [r2, #0]
 800c8e4:	429a      	cmp	r2, r3
 800c8e6:	d90a      	bls.n	800c8fe <_ZNK8touchgfx6Bitmap9getFormatEv+0x26>
 800c8e8:	2214      	movs	r2, #20
 800c8ea:	fb02 1303 	mla	r3, r2, r3, r1
 800c8ee:	7c58      	ldrb	r0, [r3, #17]
 800c8f0:	0942      	lsrs	r2, r0, #5
 800c8f2:	7cd8      	ldrb	r0, [r3, #19]
 800c8f4:	f3c0 1042 	ubfx	r0, r0, #5, #3
 800c8f8:	ea40 00c2 	orr.w	r0, r0, r2, lsl #3
 800c8fc:	4770      	bx	lr
 800c8fe:	4912      	ldr	r1, [pc, #72]	; (800c948 <_ZNK8touchgfx6Bitmap9getFormatEv+0x70>)
 800c900:	8809      	ldrh	r1, [r1, #0]
 800c902:	4411      	add	r1, r2
 800c904:	428b      	cmp	r3, r1
 800c906:	da09      	bge.n	800c91c <_ZNK8touchgfx6Bitmap9getFormatEv+0x44>
 800c908:	1a9b      	subs	r3, r3, r2
 800c90a:	4a10      	ldr	r2, [pc, #64]	; (800c94c <_ZNK8touchgfx6Bitmap9getFormatEv+0x74>)
 800c90c:	6812      	ldr	r2, [r2, #0]
 800c90e:	210e      	movs	r1, #14
 800c910:	fb01 2303 	mla	r3, r1, r3, r2
 800c914:	7b18      	ldrb	r0, [r3, #12]
 800c916:	f000 001f 	and.w	r0, r0, #31
 800c91a:	4770      	bx	lr
 800c91c:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 800c920:	4293      	cmp	r3, r2
 800c922:	d10a      	bne.n	800c93a <_ZNK8touchgfx6Bitmap9getFormatEv+0x62>
 800c924:	4b0a      	ldr	r3, [pc, #40]	; (800c950 <_ZNK8touchgfx6Bitmap9getFormatEv+0x78>)
 800c926:	681b      	ldr	r3, [r3, #0]
 800c928:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 800c92c:	b10a      	cbz	r2, 800c932 <_ZNK8touchgfx6Bitmap9getFormatEv+0x5a>
 800c92e:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 800c930:	b900      	cbnz	r0, 800c934 <_ZNK8touchgfx6Bitmap9getFormatEv+0x5c>
 800c932:	6898      	ldr	r0, [r3, #8]
 800c934:	6803      	ldr	r3, [r0, #0]
 800c936:	6a1b      	ldr	r3, [r3, #32]
 800c938:	4718      	bx	r3
 800c93a:	2000      	movs	r0, #0
 800c93c:	4770      	bx	lr
 800c93e:	bf00      	nop
 800c940:	20012220 	.word	0x20012220
 800c944:	20012218 	.word	0x20012218
 800c948:	2001221c 	.word	0x2001221c
 800c94c:	20012200 	.word	0x20012200
 800c950:	20012178 	.word	0x20012178

0800c954 <_ZNK8touchgfx8LCD16bpp8bitDepthEv>:
 800c954:	2010      	movs	r0, #16
 800c956:	4770      	bx	lr

0800c958 <_ZNK8touchgfx8LCD16bpp17framebufferFormatEv>:
 800c958:	2000      	movs	r0, #0
 800c95a:	4770      	bx	lr

0800c95c <_ZNK8touchgfx8LCD16bpp20getColorFrom24BitRGBEhhh>:
 800c95c:	00d2      	lsls	r2, r2, #3
 800c95e:	0209      	lsls	r1, r1, #8
 800c960:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 800c964:	ea42 02d3 	orr.w	r2, r2, r3, lsr #3
 800c968:	f401 4078 	and.w	r0, r1, #63488	; 0xf800
 800c96c:	4310      	orrs	r0, r2
 800c96e:	4770      	bx	lr

0800c970 <_ZNK8touchgfx8LCD16bpp11getRedColorENS_9colortypeE>:
 800c970:	0a09      	lsrs	r1, r1, #8
 800c972:	f001 00f8 	and.w	r0, r1, #248	; 0xf8
 800c976:	4770      	bx	lr

0800c978 <_ZNK8touchgfx8LCD16bpp13getGreenColorENS_9colortypeE>:
 800c978:	08c9      	lsrs	r1, r1, #3
 800c97a:	f001 00fc 	and.w	r0, r1, #252	; 0xfc
 800c97e:	4770      	bx	lr

0800c980 <_ZNK8touchgfx8LCD16bpp12getBlueColorENS_9colortypeE>:
 800c980:	00c9      	lsls	r1, r1, #3
 800c982:	f001 00f8 	and.w	r0, r1, #248	; 0xf8
 800c986:	4770      	bx	lr

0800c988 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth>:
 800c988:	2bff      	cmp	r3, #255	; 0xff
 800c98a:	d050      	beq.n	800ca2e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa6>
 800c98c:	2a0b      	cmp	r2, #11
 800c98e:	d04a      	beq.n	800ca26 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 800c990:	d80e      	bhi.n	800c9b0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x28>
 800c992:	2a03      	cmp	r2, #3
 800c994:	d03f      	beq.n	800ca16 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8e>
 800c996:	d804      	bhi.n	800c9a2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x1a>
 800c998:	2a01      	cmp	r2, #1
 800c99a:	d03e      	beq.n	800ca1a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x92>
 800c99c:	d93f      	bls.n	800ca1e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x96>
 800c99e:	6b80      	ldr	r0, [r0, #56]	; 0x38
 800c9a0:	4770      	bx	lr
 800c9a2:	2a09      	cmp	r2, #9
 800c9a4:	d03f      	beq.n	800ca26 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 800c9a6:	d83c      	bhi.n	800ca22 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 800c9a8:	2a08      	cmp	r2, #8
 800c9aa:	d03a      	beq.n	800ca22 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 800c9ac:	2000      	movs	r0, #0
 800c9ae:	4770      	bx	lr
 800c9b0:	2a2f      	cmp	r2, #47	; 0x2f
 800c9b2:	d024      	beq.n	800c9fe <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x76>
 800c9b4:	d80d      	bhi.n	800c9d2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x4a>
 800c9b6:	2a2d      	cmp	r2, #45	; 0x2d
 800c9b8:	d014      	beq.n	800c9e4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x5c>
 800c9ba:	d826      	bhi.n	800ca0a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x82>
 800c9bc:	2a2c      	cmp	r2, #44	; 0x2c
 800c9be:	d1f5      	bne.n	800c9ac <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800c9c0:	684b      	ldr	r3, [r1, #4]
 800c9c2:	781b      	ldrb	r3, [r3, #0]
 800c9c4:	2b01      	cmp	r3, #1
 800c9c6:	d018      	beq.n	800c9fa <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x72>
 800c9c8:	d323      	bcc.n	800ca12 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8a>
 800c9ca:	2b02      	cmp	r3, #2
 800c9cc:	d1ee      	bne.n	800c9ac <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800c9ce:	6880      	ldr	r0, [r0, #8]
 800c9d0:	4770      	bx	lr
 800c9d2:	2a31      	cmp	r2, #49	; 0x31
 800c9d4:	d004      	beq.n	800c9e0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x58>
 800c9d6:	d328      	bcc.n	800ca2a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 800c9d8:	2a32      	cmp	r2, #50	; 0x32
 800c9da:	d026      	beq.n	800ca2a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 800c9dc:	2a33      	cmp	r2, #51	; 0x33
 800c9de:	d1e5      	bne.n	800c9ac <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800c9e0:	6f00      	ldr	r0, [r0, #112]	; 0x70
 800c9e2:	4770      	bx	lr
 800c9e4:	684b      	ldr	r3, [r1, #4]
 800c9e6:	781b      	ldrb	r3, [r3, #0]
 800c9e8:	2b01      	cmp	r3, #1
 800c9ea:	d004      	beq.n	800c9f6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6e>
 800c9ec:	d30b      	bcc.n	800ca06 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 800c9ee:	2b02      	cmp	r3, #2
 800c9f0:	d1dc      	bne.n	800c9ac <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800c9f2:	6900      	ldr	r0, [r0, #16]
 800c9f4:	4770      	bx	lr
 800c9f6:	6a00      	ldr	r0, [r0, #32]
 800c9f8:	4770      	bx	lr
 800c9fa:	6980      	ldr	r0, [r0, #24]
 800c9fc:	4770      	bx	lr
 800c9fe:	684b      	ldr	r3, [r1, #4]
 800ca00:	781b      	ldrb	r3, [r3, #0]
 800ca02:	2b00      	cmp	r3, #0
 800ca04:	d1d2      	bne.n	800c9ac <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800ca06:	6b00      	ldr	r0, [r0, #48]	; 0x30
 800ca08:	4770      	bx	lr
 800ca0a:	684b      	ldr	r3, [r1, #4]
 800ca0c:	781b      	ldrb	r3, [r3, #0]
 800ca0e:	2b00      	cmp	r3, #0
 800ca10:	d1cc      	bne.n	800c9ac <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800ca12:	6a80      	ldr	r0, [r0, #40]	; 0x28
 800ca14:	4770      	bx	lr
 800ca16:	6c80      	ldr	r0, [r0, #72]	; 0x48
 800ca18:	4770      	bx	lr
 800ca1a:	6d00      	ldr	r0, [r0, #80]	; 0x50
 800ca1c:	4770      	bx	lr
 800ca1e:	6c00      	ldr	r0, [r0, #64]	; 0x40
 800ca20:	4770      	bx	lr
 800ca22:	6d80      	ldr	r0, [r0, #88]	; 0x58
 800ca24:	4770      	bx	lr
 800ca26:	6e00      	ldr	r0, [r0, #96]	; 0x60
 800ca28:	4770      	bx	lr
 800ca2a:	6e80      	ldr	r0, [r0, #104]	; 0x68
 800ca2c:	4770      	bx	lr
 800ca2e:	2a0b      	cmp	r2, #11
 800ca30:	d049      	beq.n	800cac6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 800ca32:	d80e      	bhi.n	800ca52 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xca>
 800ca34:	2a03      	cmp	r2, #3
 800ca36:	d040      	beq.n	800caba <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x132>
 800ca38:	d804      	bhi.n	800ca44 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xbc>
 800ca3a:	2a01      	cmp	r2, #1
 800ca3c:	d03f      	beq.n	800cabe <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x136>
 800ca3e:	d940      	bls.n	800cac2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13a>
 800ca40:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
 800ca42:	4770      	bx	lr
 800ca44:	2a09      	cmp	r2, #9
 800ca46:	d03e      	beq.n	800cac6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 800ca48:	d801      	bhi.n	800ca4e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xc6>
 800ca4a:	2a08      	cmp	r2, #8
 800ca4c:	d1ae      	bne.n	800c9ac <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800ca4e:	6dc0      	ldr	r0, [r0, #92]	; 0x5c
 800ca50:	4770      	bx	lr
 800ca52:	2a2f      	cmp	r2, #47	; 0x2f
 800ca54:	d024      	beq.n	800caa0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x118>
 800ca56:	d80d      	bhi.n	800ca74 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xec>
 800ca58:	2a2d      	cmp	r2, #45	; 0x2d
 800ca5a:	d014      	beq.n	800ca86 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfe>
 800ca5c:	d826      	bhi.n	800caac <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x124>
 800ca5e:	2a2c      	cmp	r2, #44	; 0x2c
 800ca60:	d1a4      	bne.n	800c9ac <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800ca62:	684b      	ldr	r3, [r1, #4]
 800ca64:	781b      	ldrb	r3, [r3, #0]
 800ca66:	2b01      	cmp	r3, #1
 800ca68:	d018      	beq.n	800ca9c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x114>
 800ca6a:	d324      	bcc.n	800cab6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x12e>
 800ca6c:	2b02      	cmp	r3, #2
 800ca6e:	d19d      	bne.n	800c9ac <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800ca70:	68c0      	ldr	r0, [r0, #12]
 800ca72:	4770      	bx	lr
 800ca74:	2a31      	cmp	r2, #49	; 0x31
 800ca76:	d004      	beq.n	800ca82 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfa>
 800ca78:	d327      	bcc.n	800caca <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 800ca7a:	2a32      	cmp	r2, #50	; 0x32
 800ca7c:	d025      	beq.n	800caca <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 800ca7e:	2a33      	cmp	r2, #51	; 0x33
 800ca80:	d194      	bne.n	800c9ac <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800ca82:	6f40      	ldr	r0, [r0, #116]	; 0x74
 800ca84:	4770      	bx	lr
 800ca86:	684b      	ldr	r3, [r1, #4]
 800ca88:	781b      	ldrb	r3, [r3, #0]
 800ca8a:	2b01      	cmp	r3, #1
 800ca8c:	d004      	beq.n	800ca98 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x110>
 800ca8e:	d30b      	bcc.n	800caa8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x120>
 800ca90:	2b02      	cmp	r3, #2
 800ca92:	d18b      	bne.n	800c9ac <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800ca94:	6940      	ldr	r0, [r0, #20]
 800ca96:	4770      	bx	lr
 800ca98:	6a40      	ldr	r0, [r0, #36]	; 0x24
 800ca9a:	4770      	bx	lr
 800ca9c:	69c0      	ldr	r0, [r0, #28]
 800ca9e:	4770      	bx	lr
 800caa0:	684b      	ldr	r3, [r1, #4]
 800caa2:	781b      	ldrb	r3, [r3, #0]
 800caa4:	2b00      	cmp	r3, #0
 800caa6:	d181      	bne.n	800c9ac <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800caa8:	6b40      	ldr	r0, [r0, #52]	; 0x34
 800caaa:	4770      	bx	lr
 800caac:	684b      	ldr	r3, [r1, #4]
 800caae:	781b      	ldrb	r3, [r3, #0]
 800cab0:	2b00      	cmp	r3, #0
 800cab2:	f47f af7b 	bne.w	800c9ac <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800cab6:	6ac0      	ldr	r0, [r0, #44]	; 0x2c
 800cab8:	4770      	bx	lr
 800caba:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 800cabc:	4770      	bx	lr
 800cabe:	6d40      	ldr	r0, [r0, #84]	; 0x54
 800cac0:	4770      	bx	lr
 800cac2:	6c40      	ldr	r0, [r0, #68]	; 0x44
 800cac4:	4770      	bx	lr
 800cac6:	6e40      	ldr	r0, [r0, #100]	; 0x64
 800cac8:	4770      	bx	lr
 800caca:	6ec0      	ldr	r0, [r0, #108]	; 0x6c
 800cacc:	4770      	bx	lr

0800cace <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 800cace:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800cad2:	b087      	sub	sp, #28
 800cad4:	9e15      	ldr	r6, [sp, #84]	; 0x54
 800cad6:	9205      	str	r2, [sp, #20]
 800cad8:	f9bd 2064 	ldrsh.w	r2, [sp, #100]	; 0x64
 800cadc:	9202      	str	r2, [sp, #8]
 800cade:	e9dd 2516 	ldrd	r2, r5, [sp, #88]	; 0x58
 800cae2:	9101      	str	r1, [sp, #4]
 800cae4:	6871      	ldr	r1, [r6, #4]
 800cae6:	981a      	ldr	r0, [sp, #104]	; 0x68
 800cae8:	f89d 406c 	ldrb.w	r4, [sp, #108]	; 0x6c
 800caec:	f9bd 8060 	ldrsh.w	r8, [sp, #96]	; 0x60
 800caf0:	fb01 2505 	mla	r5, r1, r5, r2
 800caf4:	6832      	ldr	r2, [r6, #0]
 800caf6:	eb02 0545 	add.w	r5, r2, r5, lsl #1
 800cafa:	6802      	ldr	r2, [r0, #0]
 800cafc:	9203      	str	r2, [sp, #12]
 800cafe:	6842      	ldr	r2, [r0, #4]
 800cb00:	fa1f fe84 	uxth.w	lr, r4
 800cb04:	3204      	adds	r2, #4
 800cb06:	43e4      	mvns	r4, r4
 800cb08:	9204      	str	r2, [sp, #16]
 800cb0a:	b2e4      	uxtb	r4, r4
 800cb0c:	9a01      	ldr	r2, [sp, #4]
 800cb0e:	2a00      	cmp	r2, #0
 800cb10:	dc03      	bgt.n	800cb1a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4c>
 800cb12:	9a05      	ldr	r2, [sp, #20]
 800cb14:	2a00      	cmp	r2, #0
 800cb16:	f340 8119 	ble.w	800cd4c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x27e>
 800cb1a:	9a11      	ldr	r2, [sp, #68]	; 0x44
 800cb1c:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 800cb20:	9a12      	ldr	r2, [sp, #72]	; 0x48
 800cb22:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 800cb26:	2b00      	cmp	r3, #0
 800cb28:	dd0f      	ble.n	800cb4a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7c>
 800cb2a:	1408      	asrs	r0, r1, #16
 800cb2c:	d406      	bmi.n	800cb3c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6e>
 800cb2e:	4540      	cmp	r0, r8
 800cb30:	da04      	bge.n	800cb3c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6e>
 800cb32:	1410      	asrs	r0, r2, #16
 800cb34:	d402      	bmi.n	800cb3c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6e>
 800cb36:	9e02      	ldr	r6, [sp, #8]
 800cb38:	42b0      	cmp	r0, r6
 800cb3a:	db07      	blt.n	800cb4c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7e>
 800cb3c:	9813      	ldr	r0, [sp, #76]	; 0x4c
 800cb3e:	4401      	add	r1, r0
 800cb40:	9814      	ldr	r0, [sp, #80]	; 0x50
 800cb42:	3b01      	subs	r3, #1
 800cb44:	4402      	add	r2, r0
 800cb46:	3502      	adds	r5, #2
 800cb48:	e7ed      	b.n	800cb26 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x58>
 800cb4a:	d00f      	beq.n	800cb6c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9e>
 800cb4c:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 800cb4e:	1e58      	subs	r0, r3, #1
 800cb50:	fb06 1600 	mla	r6, r6, r0, r1
 800cb54:	1436      	asrs	r6, r6, #16
 800cb56:	d547      	bpl.n	800cbe8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x11a>
 800cb58:	469b      	mov	fp, r3
 800cb5a:	46aa      	mov	sl, r5
 800cb5c:	f1bb 0f00 	cmp.w	fp, #0
 800cb60:	f300 809e 	bgt.w	800cca0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d2>
 800cb64:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 800cb68:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 800cb6c:	9b01      	ldr	r3, [sp, #4]
 800cb6e:	2b00      	cmp	r3, #0
 800cb70:	f340 80ec 	ble.w	800cd4c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x27e>
 800cb74:	ee30 0a04 	vadd.f32	s0, s0, s8
 800cb78:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 800cb7c:	eec7 7a00 	vdiv.f32	s15, s14, s0
 800cb80:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800cb82:	ee70 0aa4 	vadd.f32	s1, s1, s9
 800cb86:	ee31 1a05 	vadd.f32	s2, s2, s10
 800cb8a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 800cb8e:	eef0 6a62 	vmov.f32	s13, s5
 800cb92:	ee61 7a27 	vmul.f32	s15, s2, s15
 800cb96:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 800cb9a:	ee77 2a62 	vsub.f32	s5, s14, s5
 800cb9e:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
 800cba2:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 800cba6:	eef0 6a43 	vmov.f32	s13, s6
 800cbaa:	ee37 3ac3 	vsub.f32	s6, s15, s6
 800cbae:	ee12 2a90 	vmov	r2, s5
 800cbb2:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 800cbb6:	fb92 f3f3 	sdiv	r3, r2, r3
 800cbba:	ee13 2a10 	vmov	r2, s6
 800cbbe:	9313      	str	r3, [sp, #76]	; 0x4c
 800cbc0:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800cbc2:	fb92 f3f3 	sdiv	r3, r2, r3
 800cbc6:	9314      	str	r3, [sp, #80]	; 0x50
 800cbc8:	9b01      	ldr	r3, [sp, #4]
 800cbca:	9a05      	ldr	r2, [sp, #20]
 800cbcc:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 800cbd0:	3b01      	subs	r3, #1
 800cbd2:	9301      	str	r3, [sp, #4]
 800cbd4:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
 800cbd8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800cbda:	eeb0 3a67 	vmov.f32	s6, s15
 800cbde:	bf08      	it	eq
 800cbe0:	4613      	moveq	r3, r2
 800cbe2:	eef0 2a47 	vmov.f32	s5, s14
 800cbe6:	e791      	b.n	800cb0c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3e>
 800cbe8:	4546      	cmp	r6, r8
 800cbea:	dab5      	bge.n	800cb58 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x8a>
 800cbec:	9e14      	ldr	r6, [sp, #80]	; 0x50
 800cbee:	fb06 2000 	mla	r0, r6, r0, r2
 800cbf2:	1400      	asrs	r0, r0, #16
 800cbf4:	d4b0      	bmi.n	800cb58 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x8a>
 800cbf6:	9e02      	ldr	r6, [sp, #8]
 800cbf8:	42b0      	cmp	r0, r6
 800cbfa:	daad      	bge.n	800cb58 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x8a>
 800cbfc:	469a      	mov	sl, r3
 800cbfe:	46ab      	mov	fp, r5
 800cc00:	f1ba 0f00 	cmp.w	sl, #0
 800cc04:	ddae      	ble.n	800cb64 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x96>
 800cc06:	9f03      	ldr	r7, [sp, #12]
 800cc08:	1410      	asrs	r0, r2, #16
 800cc0a:	140e      	asrs	r6, r1, #16
 800cc0c:	fb08 7000 	mla	r0, r8, r0, r7
 800cc10:	f10a 3aff 	add.w	sl, sl, #4294967295
 800cc14:	5d80      	ldrb	r0, [r0, r6]
 800cc16:	9e04      	ldr	r6, [sp, #16]
 800cc18:	f836 0010 	ldrh.w	r0, [r6, r0, lsl #1]
 800cc1c:	f8bb 6000 	ldrh.w	r6, [fp]
 800cc20:	1237      	asrs	r7, r6, #8
 800cc22:	ea4f 2c20 	mov.w	ip, r0, asr #8
 800cc26:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 800cc2a:	fb17 f704 	smulbb	r7, r7, r4
 800cc2e:	ea4f 09e6 	mov.w	r9, r6, asr #3
 800cc32:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 800cc36:	00f6      	lsls	r6, r6, #3
 800cc38:	fb0c 7c0e 	mla	ip, ip, lr, r7
 800cc3c:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 800cc40:	10c7      	asrs	r7, r0, #3
 800cc42:	b2f6      	uxtb	r6, r6
 800cc44:	00c0      	lsls	r0, r0, #3
 800cc46:	fb19 f904 	smulbb	r9, r9, r4
 800cc4a:	fb16 f604 	smulbb	r6, r6, r4
 800cc4e:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 800cc52:	b2c0      	uxtb	r0, r0
 800cc54:	fa1f fc8c 	uxth.w	ip, ip
 800cc58:	fb07 970e 	mla	r7, r7, lr, r9
 800cc5c:	fb00 600e 	mla	r0, r0, lr, r6
 800cc60:	b280      	uxth	r0, r0
 800cc62:	b2bf      	uxth	r7, r7
 800cc64:	f10c 0601 	add.w	r6, ip, #1
 800cc68:	eb06 2c1c 	add.w	ip, r6, ip, lsr #8
 800cc6c:	f107 0901 	add.w	r9, r7, #1
 800cc70:	1c46      	adds	r6, r0, #1
 800cc72:	eb06 2610 	add.w	r6, r6, r0, lsr #8
 800cc76:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 800cc7a:	9813      	ldr	r0, [sp, #76]	; 0x4c
 800cc7c:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 800cc80:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 800cc84:	ea4f 1959 	mov.w	r9, r9, lsr #5
 800cc88:	ea4c 0c06 	orr.w	ip, ip, r6
 800cc8c:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 800cc90:	4401      	add	r1, r0
 800cc92:	9814      	ldr	r0, [sp, #80]	; 0x50
 800cc94:	ea4c 0c09 	orr.w	ip, ip, r9
 800cc98:	f82b cb02 	strh.w	ip, [fp], #2
 800cc9c:	4402      	add	r2, r0
 800cc9e:	e7af      	b.n	800cc00 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x132>
 800cca0:	140e      	asrs	r6, r1, #16
 800cca2:	d44a      	bmi.n	800cd3a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x26c>
 800cca4:	4546      	cmp	r6, r8
 800cca6:	da48      	bge.n	800cd3a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x26c>
 800cca8:	1410      	asrs	r0, r2, #16
 800ccaa:	d446      	bmi.n	800cd3a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x26c>
 800ccac:	9f02      	ldr	r7, [sp, #8]
 800ccae:	42b8      	cmp	r0, r7
 800ccb0:	da43      	bge.n	800cd3a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x26c>
 800ccb2:	9f03      	ldr	r7, [sp, #12]
 800ccb4:	fb08 7000 	mla	r0, r8, r0, r7
 800ccb8:	5d80      	ldrb	r0, [r0, r6]
 800ccba:	9e04      	ldr	r6, [sp, #16]
 800ccbc:	f836 0010 	ldrh.w	r0, [r6, r0, lsl #1]
 800ccc0:	f8ba 6000 	ldrh.w	r6, [sl]
 800ccc4:	1237      	asrs	r7, r6, #8
 800ccc6:	ea4f 2c20 	mov.w	ip, r0, asr #8
 800ccca:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 800ccce:	fb17 f704 	smulbb	r7, r7, r4
 800ccd2:	ea4f 09e6 	mov.w	r9, r6, asr #3
 800ccd6:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 800ccda:	00f6      	lsls	r6, r6, #3
 800ccdc:	fb0c 7c0e 	mla	ip, ip, lr, r7
 800cce0:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 800cce4:	10c7      	asrs	r7, r0, #3
 800cce6:	b2f6      	uxtb	r6, r6
 800cce8:	00c0      	lsls	r0, r0, #3
 800ccea:	fb19 f904 	smulbb	r9, r9, r4
 800ccee:	fb16 f604 	smulbb	r6, r6, r4
 800ccf2:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 800ccf6:	b2c0      	uxtb	r0, r0
 800ccf8:	fa1f fc8c 	uxth.w	ip, ip
 800ccfc:	fb07 970e 	mla	r7, r7, lr, r9
 800cd00:	fb00 600e 	mla	r0, r0, lr, r6
 800cd04:	b2bf      	uxth	r7, r7
 800cd06:	b280      	uxth	r0, r0
 800cd08:	f10c 0601 	add.w	r6, ip, #1
 800cd0c:	eb06 2c1c 	add.w	ip, r6, ip, lsr #8
 800cd10:	f107 0901 	add.w	r9, r7, #1
 800cd14:	1c46      	adds	r6, r0, #1
 800cd16:	eb06 2610 	add.w	r6, r6, r0, lsr #8
 800cd1a:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 800cd1e:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 800cd22:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 800cd26:	ea4f 1959 	mov.w	r9, r9, lsr #5
 800cd2a:	ea4c 0c06 	orr.w	ip, ip, r6
 800cd2e:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 800cd32:	ea4c 0c09 	orr.w	ip, ip, r9
 800cd36:	f8aa c000 	strh.w	ip, [sl]
 800cd3a:	9813      	ldr	r0, [sp, #76]	; 0x4c
 800cd3c:	4401      	add	r1, r0
 800cd3e:	9814      	ldr	r0, [sp, #80]	; 0x50
 800cd40:	f10a 0a02 	add.w	sl, sl, #2
 800cd44:	4402      	add	r2, r0
 800cd46:	f10b 3bff 	add.w	fp, fp, #4294967295
 800cd4a:	e707      	b.n	800cb5c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x8e>
 800cd4c:	b007      	add	sp, #28
 800cd4e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800cd52 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 800cd52:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800cd56:	b085      	sub	sp, #20
 800cd58:	e9dd 7611 	ldrd	r7, r6, [sp, #68]	; 0x44
 800cd5c:	9813      	ldr	r0, [sp, #76]	; 0x4c
 800cd5e:	9203      	str	r2, [sp, #12]
 800cd60:	6842      	ldr	r2, [r0, #4]
 800cd62:	9d15      	ldr	r5, [sp, #84]	; 0x54
 800cd64:	9c18      	ldr	r4, [sp, #96]	; 0x60
 800cd66:	6800      	ldr	r0, [r0, #0]
 800cd68:	f9bd c058 	ldrsh.w	ip, [sp, #88]	; 0x58
 800cd6c:	f9bd 805c 	ldrsh.w	r8, [sp, #92]	; 0x5c
 800cd70:	4696      	mov	lr, r2
 800cd72:	9a14      	ldr	r2, [sp, #80]	; 0x50
 800cd74:	fb0e 2505 	mla	r5, lr, r5, r2
 800cd78:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 800cd7c:	6860      	ldr	r0, [r4, #4]
 800cd7e:	6822      	ldr	r2, [r4, #0]
 800cd80:	9201      	str	r2, [sp, #4]
 800cd82:	1d02      	adds	r2, r0, #4
 800cd84:	9202      	str	r2, [sp, #8]
 800cd86:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 800cd8a:	2900      	cmp	r1, #0
 800cd8c:	dc03      	bgt.n	800cd96 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x44>
 800cd8e:	9a03      	ldr	r2, [sp, #12]
 800cd90:	2a00      	cmp	r2, #0
 800cd92:	f340 809b 	ble.w	800cecc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x17a>
 800cd96:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 800cd98:	f502 4400 	add.w	r4, r2, #32768	; 0x8000
 800cd9c:	9a10      	ldr	r2, [sp, #64]	; 0x40
 800cd9e:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 800cda2:	2b00      	cmp	r3, #0
 800cda4:	dd0e      	ble.n	800cdc4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x72>
 800cda6:	ea5f 4e24 	movs.w	lr, r4, asr #16
 800cdaa:	d406      	bmi.n	800cdba <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x68>
 800cdac:	45e6      	cmp	lr, ip
 800cdae:	da04      	bge.n	800cdba <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x68>
 800cdb0:	ea5f 4e20 	movs.w	lr, r0, asr #16
 800cdb4:	d401      	bmi.n	800cdba <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x68>
 800cdb6:	45c6      	cmp	lr, r8
 800cdb8:	db05      	blt.n	800cdc6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x74>
 800cdba:	443c      	add	r4, r7
 800cdbc:	4430      	add	r0, r6
 800cdbe:	3b01      	subs	r3, #1
 800cdc0:	3502      	adds	r5, #2
 800cdc2:	e7ee      	b.n	800cda2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x50>
 800cdc4:	d010      	beq.n	800cde8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x96>
 800cdc6:	f103 3eff 	add.w	lr, r3, #4294967295
 800cdca:	fb07 490e 	mla	r9, r7, lr, r4
 800cdce:	ea5f 4929 	movs.w	r9, r9, asr #16
 800cdd2:	d53d      	bpl.n	800ce50 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfe>
 800cdd4:	469e      	mov	lr, r3
 800cdd6:	eb05 0b43 	add.w	fp, r5, r3, lsl #1
 800cdda:	f1be 0f00 	cmp.w	lr, #0
 800cdde:	dc58      	bgt.n	800ce92 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x140>
 800cde0:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 800cde4:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 800cde8:	2900      	cmp	r1, #0
 800cdea:	dd6f      	ble.n	800cecc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x17a>
 800cdec:	ee30 0a04 	vadd.f32	s0, s0, s8
 800cdf0:	ee70 0aa4 	vadd.f32	s1, s1, s9
 800cdf4:	eec6 7a80 	vdiv.f32	s15, s13, s0
 800cdf8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800cdfa:	3901      	subs	r1, #1
 800cdfc:	ee31 1a05 	vadd.f32	s2, s2, s10
 800ce00:	ee20 7aa7 	vmul.f32	s14, s1, s15
 800ce04:	eeb0 6a62 	vmov.f32	s12, s5
 800ce08:	ee61 7a27 	vmul.f32	s15, s2, s15
 800ce0c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 800ce10:	ee77 2a62 	vsub.f32	s5, s14, s5
 800ce14:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 800ce18:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 800ce1c:	eeb0 6a43 	vmov.f32	s12, s6
 800ce20:	ee37 3ac3 	vsub.f32	s6, s15, s6
 800ce24:	ee12 2a90 	vmov	r2, s5
 800ce28:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 800ce2c:	fb92 f7f3 	sdiv	r7, r2, r3
 800ce30:	ee13 2a10 	vmov	r2, s6
 800ce34:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 800ce38:	fb92 f6f3 	sdiv	r6, r2, r3
 800ce3c:	9a03      	ldr	r2, [sp, #12]
 800ce3e:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 800ce42:	bf08      	it	eq
 800ce44:	4613      	moveq	r3, r2
 800ce46:	eeb0 3a67 	vmov.f32	s6, s15
 800ce4a:	eef0 2a47 	vmov.f32	s5, s14
 800ce4e:	e79c      	b.n	800cd8a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x38>
 800ce50:	45e1      	cmp	r9, ip
 800ce52:	dabf      	bge.n	800cdd4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x82>
 800ce54:	fb06 0e0e 	mla	lr, r6, lr, r0
 800ce58:	ea5f 4e2e 	movs.w	lr, lr, asr #16
 800ce5c:	d4ba      	bmi.n	800cdd4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x82>
 800ce5e:	45c6      	cmp	lr, r8
 800ce60:	dab8      	bge.n	800cdd4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x82>
 800ce62:	469e      	mov	lr, r3
 800ce64:	46aa      	mov	sl, r5
 800ce66:	f1be 0f00 	cmp.w	lr, #0
 800ce6a:	ddb9      	ble.n	800cde0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x8e>
 800ce6c:	9a01      	ldr	r2, [sp, #4]
 800ce6e:	ea4f 4920 	mov.w	r9, r0, asr #16
 800ce72:	ea4f 4b24 	mov.w	fp, r4, asr #16
 800ce76:	fb0c 2909 	mla	r9, ip, r9, r2
 800ce7a:	9a02      	ldr	r2, [sp, #8]
 800ce7c:	f819 900b 	ldrb.w	r9, [r9, fp]
 800ce80:	f832 9019 	ldrh.w	r9, [r2, r9, lsl #1]
 800ce84:	f82a 9b02 	strh.w	r9, [sl], #2
 800ce88:	443c      	add	r4, r7
 800ce8a:	4430      	add	r0, r6
 800ce8c:	f10e 3eff 	add.w	lr, lr, #4294967295
 800ce90:	e7e9      	b.n	800ce66 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x114>
 800ce92:	ea5f 4a24 	movs.w	sl, r4, asr #16
 800ce96:	d414      	bmi.n	800cec2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x170>
 800ce98:	45e2      	cmp	sl, ip
 800ce9a:	da12      	bge.n	800cec2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x170>
 800ce9c:	ea5f 4920 	movs.w	r9, r0, asr #16
 800cea0:	d40f      	bmi.n	800cec2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x170>
 800cea2:	45c1      	cmp	r9, r8
 800cea4:	da0d      	bge.n	800cec2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x170>
 800cea6:	9a01      	ldr	r2, [sp, #4]
 800cea8:	fb0c 2909 	mla	r9, ip, r9, r2
 800ceac:	9a02      	ldr	r2, [sp, #8]
 800ceae:	f819 900a 	ldrb.w	r9, [r9, sl]
 800ceb2:	f832 a019 	ldrh.w	sl, [r2, r9, lsl #1]
 800ceb6:	f06f 0201 	mvn.w	r2, #1
 800ceba:	fb02 f90e 	mul.w	r9, r2, lr
 800cebe:	f82b a009 	strh.w	sl, [fp, r9]
 800cec2:	443c      	add	r4, r7
 800cec4:	4430      	add	r0, r6
 800cec6:	f10e 3eff 	add.w	lr, lr, #4294967295
 800ceca:	e786      	b.n	800cdda <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x88>
 800cecc:	b005      	add	sp, #20
 800cece:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800ced2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 800ced2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ced6:	b087      	sub	sp, #28
 800ced8:	9e15      	ldr	r6, [sp, #84]	; 0x54
 800ceda:	9205      	str	r2, [sp, #20]
 800cedc:	f9bd 2064 	ldrsh.w	r2, [sp, #100]	; 0x64
 800cee0:	9202      	str	r2, [sp, #8]
 800cee2:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 800cee6:	9101      	str	r1, [sp, #4]
 800cee8:	6871      	ldr	r1, [r6, #4]
 800ceea:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 800ceec:	f89d 006c 	ldrb.w	r0, [sp, #108]	; 0x6c
 800cef0:	f9bd e060 	ldrsh.w	lr, [sp, #96]	; 0x60
 800cef4:	fb01 2404 	mla	r4, r1, r4, r2
 800cef8:	6832      	ldr	r2, [r6, #0]
 800cefa:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 800cefe:	682a      	ldr	r2, [r5, #0]
 800cf00:	9203      	str	r2, [sp, #12]
 800cf02:	686a      	ldr	r2, [r5, #4]
 800cf04:	fa1f fc80 	uxth.w	ip, r0
 800cf08:	3204      	adds	r2, #4
 800cf0a:	43c0      	mvns	r0, r0
 800cf0c:	9200      	str	r2, [sp, #0]
 800cf0e:	b2c0      	uxtb	r0, r0
 800cf10:	9a01      	ldr	r2, [sp, #4]
 800cf12:	2a00      	cmp	r2, #0
 800cf14:	dc03      	bgt.n	800cf1e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4c>
 800cf16:	9a05      	ldr	r2, [sp, #20]
 800cf18:	2a00      	cmp	r2, #0
 800cf1a:	f340 811b 	ble.w	800d154 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x282>
 800cf1e:	9a11      	ldr	r2, [sp, #68]	; 0x44
 800cf20:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 800cf24:	9a12      	ldr	r2, [sp, #72]	; 0x48
 800cf26:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 800cf2a:	2b00      	cmp	r3, #0
 800cf2c:	dd0f      	ble.n	800cf4e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7c>
 800cf2e:	140d      	asrs	r5, r1, #16
 800cf30:	d406      	bmi.n	800cf40 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6e>
 800cf32:	4575      	cmp	r5, lr
 800cf34:	da04      	bge.n	800cf40 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6e>
 800cf36:	1415      	asrs	r5, r2, #16
 800cf38:	d402      	bmi.n	800cf40 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6e>
 800cf3a:	9e02      	ldr	r6, [sp, #8]
 800cf3c:	42b5      	cmp	r5, r6
 800cf3e:	db07      	blt.n	800cf50 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7e>
 800cf40:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 800cf42:	4429      	add	r1, r5
 800cf44:	9d14      	ldr	r5, [sp, #80]	; 0x50
 800cf46:	3b01      	subs	r3, #1
 800cf48:	442a      	add	r2, r5
 800cf4a:	3402      	adds	r4, #2
 800cf4c:	e7ed      	b.n	800cf2a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x58>
 800cf4e:	d00f      	beq.n	800cf70 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9e>
 800cf50:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 800cf52:	1e5d      	subs	r5, r3, #1
 800cf54:	fb06 1605 	mla	r6, r6, r5, r1
 800cf58:	1436      	asrs	r6, r6, #16
 800cf5a:	d547      	bpl.n	800cfec <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x11a>
 800cf5c:	469a      	mov	sl, r3
 800cf5e:	46a1      	mov	r9, r4
 800cf60:	f1ba 0f00 	cmp.w	sl, #0
 800cf64:	f300 809f 	bgt.w	800d0a6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d4>
 800cf68:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 800cf6c:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 800cf70:	9b01      	ldr	r3, [sp, #4]
 800cf72:	2b00      	cmp	r3, #0
 800cf74:	f340 80ee 	ble.w	800d154 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x282>
 800cf78:	ee30 0a04 	vadd.f32	s0, s0, s8
 800cf7c:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 800cf80:	eec7 7a00 	vdiv.f32	s15, s14, s0
 800cf84:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800cf86:	ee70 0aa4 	vadd.f32	s1, s1, s9
 800cf8a:	ee31 1a05 	vadd.f32	s2, s2, s10
 800cf8e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 800cf92:	eef0 6a62 	vmov.f32	s13, s5
 800cf96:	ee61 7a27 	vmul.f32	s15, s2, s15
 800cf9a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 800cf9e:	ee77 2a62 	vsub.f32	s5, s14, s5
 800cfa2:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
 800cfa6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 800cfaa:	eef0 6a43 	vmov.f32	s13, s6
 800cfae:	ee37 3ac3 	vsub.f32	s6, s15, s6
 800cfb2:	ee12 2a90 	vmov	r2, s5
 800cfb6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 800cfba:	fb92 f3f3 	sdiv	r3, r2, r3
 800cfbe:	ee13 2a10 	vmov	r2, s6
 800cfc2:	9313      	str	r3, [sp, #76]	; 0x4c
 800cfc4:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800cfc6:	fb92 f3f3 	sdiv	r3, r2, r3
 800cfca:	9314      	str	r3, [sp, #80]	; 0x50
 800cfcc:	9b01      	ldr	r3, [sp, #4]
 800cfce:	9a05      	ldr	r2, [sp, #20]
 800cfd0:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 800cfd4:	3b01      	subs	r3, #1
 800cfd6:	9301      	str	r3, [sp, #4]
 800cfd8:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
 800cfdc:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800cfde:	eeb0 3a67 	vmov.f32	s6, s15
 800cfe2:	bf08      	it	eq
 800cfe4:	4613      	moveq	r3, r2
 800cfe6:	eef0 2a47 	vmov.f32	s5, s14
 800cfea:	e791      	b.n	800cf10 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3e>
 800cfec:	4576      	cmp	r6, lr
 800cfee:	dab5      	bge.n	800cf5c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x8a>
 800cff0:	9e14      	ldr	r6, [sp, #80]	; 0x50
 800cff2:	fb06 2505 	mla	r5, r6, r5, r2
 800cff6:	142d      	asrs	r5, r5, #16
 800cff8:	d4b0      	bmi.n	800cf5c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x8a>
 800cffa:	9e02      	ldr	r6, [sp, #8]
 800cffc:	42b5      	cmp	r5, r6
 800cffe:	daad      	bge.n	800cf5c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x8a>
 800d000:	4699      	mov	r9, r3
 800d002:	46a2      	mov	sl, r4
 800d004:	f1b9 0f00 	cmp.w	r9, #0
 800d008:	ddae      	ble.n	800cf68 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x96>
 800d00a:	9f03      	ldr	r7, [sp, #12]
 800d00c:	1415      	asrs	r5, r2, #16
 800d00e:	140e      	asrs	r6, r1, #16
 800d010:	fb0e 7505 	mla	r5, lr, r5, r7
 800d014:	f109 39ff 	add.w	r9, r9, #4294967295
 800d018:	f815 8006 	ldrb.w	r8, [r5, r6]
 800d01c:	9d00      	ldr	r5, [sp, #0]
 800d01e:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 800d022:	eb05 0b08 	add.w	fp, r5, r8
 800d026:	f8ba 5000 	ldrh.w	r5, [sl]
 800d02a:	f89b 6002 	ldrb.w	r6, [fp, #2]
 800d02e:	f89b b001 	ldrb.w	fp, [fp, #1]
 800d032:	122f      	asrs	r7, r5, #8
 800d034:	fb16 f60c 	smulbb	r6, r6, ip
 800d038:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 800d03c:	fb07 6700 	mla	r7, r7, r0, r6
 800d040:	10ee      	asrs	r6, r5, #3
 800d042:	fb1b fb0c 	smulbb	fp, fp, ip
 800d046:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 800d04a:	fb06 b600 	mla	r6, r6, r0, fp
 800d04e:	b2b6      	uxth	r6, r6
 800d050:	9604      	str	r6, [sp, #16]
 800d052:	9e00      	ldr	r6, [sp, #0]
 800d054:	00ed      	lsls	r5, r5, #3
 800d056:	f816 8008 	ldrb.w	r8, [r6, r8]
 800d05a:	b2ed      	uxtb	r5, r5
 800d05c:	fb15 f500 	smulbb	r5, r5, r0
 800d060:	b2bf      	uxth	r7, r7
 800d062:	fb08 580c 	mla	r8, r8, ip, r5
 800d066:	fa1f f888 	uxth.w	r8, r8
 800d06a:	1c7d      	adds	r5, r7, #1
 800d06c:	eb05 2717 	add.w	r7, r5, r7, lsr #8
 800d070:	f108 0501 	add.w	r5, r8, #1
 800d074:	eb05 2518 	add.w	r5, r5, r8, lsr #8
 800d078:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 800d07c:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 800d080:	432f      	orrs	r7, r5
 800d082:	9d04      	ldr	r5, [sp, #16]
 800d084:	f105 0b01 	add.w	fp, r5, #1
 800d088:	eb0b 2b15 	add.w	fp, fp, r5, lsr #8
 800d08c:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 800d08e:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 800d092:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 800d096:	4429      	add	r1, r5
 800d098:	9d14      	ldr	r5, [sp, #80]	; 0x50
 800d09a:	ea47 070b 	orr.w	r7, r7, fp
 800d09e:	f82a 7b02 	strh.w	r7, [sl], #2
 800d0a2:	442a      	add	r2, r5
 800d0a4:	e7ae      	b.n	800d004 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x132>
 800d0a6:	140e      	asrs	r6, r1, #16
 800d0a8:	d44b      	bmi.n	800d142 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x270>
 800d0aa:	4576      	cmp	r6, lr
 800d0ac:	da49      	bge.n	800d142 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x270>
 800d0ae:	1415      	asrs	r5, r2, #16
 800d0b0:	d447      	bmi.n	800d142 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x270>
 800d0b2:	9f02      	ldr	r7, [sp, #8]
 800d0b4:	42bd      	cmp	r5, r7
 800d0b6:	da44      	bge.n	800d142 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x270>
 800d0b8:	9f03      	ldr	r7, [sp, #12]
 800d0ba:	fb0e 7505 	mla	r5, lr, r5, r7
 800d0be:	f815 8006 	ldrb.w	r8, [r5, r6]
 800d0c2:	9d00      	ldr	r5, [sp, #0]
 800d0c4:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 800d0c8:	eb05 0b08 	add.w	fp, r5, r8
 800d0cc:	f8b9 5000 	ldrh.w	r5, [r9]
 800d0d0:	f89b 6002 	ldrb.w	r6, [fp, #2]
 800d0d4:	f89b b001 	ldrb.w	fp, [fp, #1]
 800d0d8:	122f      	asrs	r7, r5, #8
 800d0da:	fb16 f60c 	smulbb	r6, r6, ip
 800d0de:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 800d0e2:	fb07 6700 	mla	r7, r7, r0, r6
 800d0e6:	10ee      	asrs	r6, r5, #3
 800d0e8:	fb1b fb0c 	smulbb	fp, fp, ip
 800d0ec:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 800d0f0:	fb06 b600 	mla	r6, r6, r0, fp
 800d0f4:	b2b6      	uxth	r6, r6
 800d0f6:	9604      	str	r6, [sp, #16]
 800d0f8:	9e00      	ldr	r6, [sp, #0]
 800d0fa:	00ed      	lsls	r5, r5, #3
 800d0fc:	f816 8008 	ldrb.w	r8, [r6, r8]
 800d100:	b2ed      	uxtb	r5, r5
 800d102:	fb15 f500 	smulbb	r5, r5, r0
 800d106:	b2bf      	uxth	r7, r7
 800d108:	fb08 580c 	mla	r8, r8, ip, r5
 800d10c:	fa1f f888 	uxth.w	r8, r8
 800d110:	1c7d      	adds	r5, r7, #1
 800d112:	eb05 2717 	add.w	r7, r5, r7, lsr #8
 800d116:	f108 0501 	add.w	r5, r8, #1
 800d11a:	eb05 2518 	add.w	r5, r5, r8, lsr #8
 800d11e:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 800d122:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 800d126:	432f      	orrs	r7, r5
 800d128:	9d04      	ldr	r5, [sp, #16]
 800d12a:	f105 0b01 	add.w	fp, r5, #1
 800d12e:	eb0b 2b15 	add.w	fp, fp, r5, lsr #8
 800d132:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 800d136:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 800d13a:	ea47 070b 	orr.w	r7, r7, fp
 800d13e:	f8a9 7000 	strh.w	r7, [r9]
 800d142:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 800d144:	4429      	add	r1, r5
 800d146:	9d14      	ldr	r5, [sp, #80]	; 0x50
 800d148:	f109 0902 	add.w	r9, r9, #2
 800d14c:	442a      	add	r2, r5
 800d14e:	f10a 3aff 	add.w	sl, sl, #4294967295
 800d152:	e705      	b.n	800cf60 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x8e>
 800d154:	b007      	add	sp, #28
 800d156:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

0800d15c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 800d15c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d160:	b085      	sub	sp, #20
 800d162:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 800d166:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 800d168:	9203      	str	r2, [sp, #12]
 800d16a:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 800d16e:	6870      	ldr	r0, [r6, #4]
 800d170:	9d18      	ldr	r5, [sp, #96]	; 0x60
 800d172:	f9bd 7058 	ldrsh.w	r7, [sp, #88]	; 0x58
 800d176:	f9bd 805c 	ldrsh.w	r8, [sp, #92]	; 0x5c
 800d17a:	9101      	str	r1, [sp, #4]
 800d17c:	fb00 2404 	mla	r4, r0, r4, r2
 800d180:	6832      	ldr	r2, [r6, #0]
 800d182:	686e      	ldr	r6, [r5, #4]
 800d184:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 800d188:	682a      	ldr	r2, [r5, #0]
 800d18a:	9202      	str	r2, [sp, #8]
 800d18c:	3604      	adds	r6, #4
 800d18e:	9a01      	ldr	r2, [sp, #4]
 800d190:	2a00      	cmp	r2, #0
 800d192:	dc03      	bgt.n	800d19c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x40>
 800d194:	9a03      	ldr	r2, [sp, #12]
 800d196:	2a00      	cmp	r2, #0
 800d198:	f340 80c7 	ble.w	800d32a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1ce>
 800d19c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 800d19e:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 800d1a2:	9a10      	ldr	r2, [sp, #64]	; 0x40
 800d1a4:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 800d1a8:	2b00      	cmp	r3, #0
 800d1aa:	dd0e      	ble.n	800d1ca <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6e>
 800d1ac:	1405      	asrs	r5, r0, #16
 800d1ae:	d405      	bmi.n	800d1bc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x60>
 800d1b0:	42bd      	cmp	r5, r7
 800d1b2:	da03      	bge.n	800d1bc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x60>
 800d1b4:	1415      	asrs	r5, r2, #16
 800d1b6:	d401      	bmi.n	800d1bc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x60>
 800d1b8:	4545      	cmp	r5, r8
 800d1ba:	db07      	blt.n	800d1cc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x70>
 800d1bc:	9d11      	ldr	r5, [sp, #68]	; 0x44
 800d1be:	4428      	add	r0, r5
 800d1c0:	9d12      	ldr	r5, [sp, #72]	; 0x48
 800d1c2:	3b01      	subs	r3, #1
 800d1c4:	442a      	add	r2, r5
 800d1c6:	3402      	adds	r4, #2
 800d1c8:	e7ee      	b.n	800d1a8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4c>
 800d1ca:	d010      	beq.n	800d1ee <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x92>
 800d1cc:	9911      	ldr	r1, [sp, #68]	; 0x44
 800d1ce:	1e5d      	subs	r5, r3, #1
 800d1d0:	fb01 0c05 	mla	ip, r1, r5, r0
 800d1d4:	ea5f 4c2c 	movs.w	ip, ip, asr #16
 800d1d8:	d545      	bpl.n	800d266 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x10a>
 800d1da:	469e      	mov	lr, r3
 800d1dc:	eb04 0b43 	add.w	fp, r4, r3, lsl #1
 800d1e0:	f1be 0f00 	cmp.w	lr, #0
 800d1e4:	dc72      	bgt.n	800d2cc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x170>
 800d1e6:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 800d1ea:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 800d1ee:	9b01      	ldr	r3, [sp, #4]
 800d1f0:	2b00      	cmp	r3, #0
 800d1f2:	f340 809a 	ble.w	800d32a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1ce>
 800d1f6:	ee30 0a04 	vadd.f32	s0, s0, s8
 800d1fa:	ee70 0aa4 	vadd.f32	s1, s1, s9
 800d1fe:	eec6 7a80 	vdiv.f32	s15, s13, s0
 800d202:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800d204:	ee31 1a05 	vadd.f32	s2, s2, s10
 800d208:	ee20 7aa7 	vmul.f32	s14, s1, s15
 800d20c:	eeb0 6a62 	vmov.f32	s12, s5
 800d210:	ee61 7a27 	vmul.f32	s15, s2, s15
 800d214:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 800d218:	ee77 2a62 	vsub.f32	s5, s14, s5
 800d21c:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 800d220:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 800d224:	eeb0 6a43 	vmov.f32	s12, s6
 800d228:	ee37 3ac3 	vsub.f32	s6, s15, s6
 800d22c:	ee12 2a90 	vmov	r2, s5
 800d230:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 800d234:	fb92 f3f3 	sdiv	r3, r2, r3
 800d238:	ee13 2a10 	vmov	r2, s6
 800d23c:	9311      	str	r3, [sp, #68]	; 0x44
 800d23e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800d240:	fb92 f3f3 	sdiv	r3, r2, r3
 800d244:	9312      	str	r3, [sp, #72]	; 0x48
 800d246:	9b01      	ldr	r3, [sp, #4]
 800d248:	9a03      	ldr	r2, [sp, #12]
 800d24a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 800d24e:	3b01      	subs	r3, #1
 800d250:	9301      	str	r3, [sp, #4]
 800d252:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 800d256:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800d258:	eeb0 3a67 	vmov.f32	s6, s15
 800d25c:	bf08      	it	eq
 800d25e:	4613      	moveq	r3, r2
 800d260:	eef0 2a47 	vmov.f32	s5, s14
 800d264:	e793      	b.n	800d18e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x32>
 800d266:	45bc      	cmp	ip, r7
 800d268:	dab7      	bge.n	800d1da <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7e>
 800d26a:	9912      	ldr	r1, [sp, #72]	; 0x48
 800d26c:	fb01 2505 	mla	r5, r1, r5, r2
 800d270:	142d      	asrs	r5, r5, #16
 800d272:	d4b2      	bmi.n	800d1da <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7e>
 800d274:	4545      	cmp	r5, r8
 800d276:	dab0      	bge.n	800d1da <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7e>
 800d278:	469e      	mov	lr, r3
 800d27a:	46a2      	mov	sl, r4
 800d27c:	f1be 0f00 	cmp.w	lr, #0
 800d280:	ddb1      	ble.n	800d1e6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x8a>
 800d282:	9902      	ldr	r1, [sp, #8]
 800d284:	1415      	asrs	r5, r2, #16
 800d286:	fb07 1505 	mla	r5, r7, r5, r1
 800d28a:	ea4f 4c20 	mov.w	ip, r0, asr #16
 800d28e:	4928      	ldr	r1, [pc, #160]	; (800d330 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d4>)
 800d290:	f815 c00c 	ldrb.w	ip, [r5, ip]
 800d294:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 800d298:	eb06 0b0c 	add.w	fp, r6, ip
 800d29c:	f10e 3eff 	add.w	lr, lr, #4294967295
 800d2a0:	f89b 5001 	ldrb.w	r5, [fp, #1]
 800d2a4:	f89b 9002 	ldrb.w	r9, [fp, #2]
 800d2a8:	00ed      	lsls	r5, r5, #3
 800d2aa:	ea01 2909 	and.w	r9, r1, r9, lsl #8
 800d2ae:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 800d2b2:	9911      	ldr	r1, [sp, #68]	; 0x44
 800d2b4:	ea49 0505 	orr.w	r5, r9, r5
 800d2b8:	f816 900c 	ldrb.w	r9, [r6, ip]
 800d2bc:	4408      	add	r0, r1
 800d2be:	9912      	ldr	r1, [sp, #72]	; 0x48
 800d2c0:	ea45 05d9 	orr.w	r5, r5, r9, lsr #3
 800d2c4:	f82a 5b02 	strh.w	r5, [sl], #2
 800d2c8:	440a      	add	r2, r1
 800d2ca:	e7d7      	b.n	800d27c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x120>
 800d2cc:	ea5f 4c20 	movs.w	ip, r0, asr #16
 800d2d0:	d424      	bmi.n	800d31c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1c0>
 800d2d2:	45bc      	cmp	ip, r7
 800d2d4:	da22      	bge.n	800d31c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1c0>
 800d2d6:	1415      	asrs	r5, r2, #16
 800d2d8:	d420      	bmi.n	800d31c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1c0>
 800d2da:	4545      	cmp	r5, r8
 800d2dc:	da1e      	bge.n	800d31c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1c0>
 800d2de:	9902      	ldr	r1, [sp, #8]
 800d2e0:	fb07 1505 	mla	r5, r7, r5, r1
 800d2e4:	f06f 0101 	mvn.w	r1, #1
 800d2e8:	f815 c00c 	ldrb.w	ip, [r5, ip]
 800d2ec:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 800d2f0:	eb06 050c 	add.w	r5, r6, ip
 800d2f4:	fb01 f90e 	mul.w	r9, r1, lr
 800d2f8:	f895 a002 	ldrb.w	sl, [r5, #2]
 800d2fc:	786d      	ldrb	r5, [r5, #1]
 800d2fe:	f2a1 71fe 	subw	r1, r1, #2046	; 0x7fe
 800d302:	00ed      	lsls	r5, r5, #3
 800d304:	ea01 2a0a 	and.w	sl, r1, sl, lsl #8
 800d308:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 800d30c:	ea4a 0505 	orr.w	r5, sl, r5
 800d310:	f816 a00c 	ldrb.w	sl, [r6, ip]
 800d314:	ea45 05da 	orr.w	r5, r5, sl, lsr #3
 800d318:	f82b 5009 	strh.w	r5, [fp, r9]
 800d31c:	9911      	ldr	r1, [sp, #68]	; 0x44
 800d31e:	4408      	add	r0, r1
 800d320:	9912      	ldr	r1, [sp, #72]	; 0x48
 800d322:	f10e 3eff 	add.w	lr, lr, #4294967295
 800d326:	440a      	add	r2, r1
 800d328:	e75a      	b.n	800d1e0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x84>
 800d32a:	b005      	add	sp, #20
 800d32c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d330:	fffff800 	.word	0xfffff800

0800d334 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 800d334:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d338:	b087      	sub	sp, #28
 800d33a:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 800d33e:	9204      	str	r2, [sp, #16]
 800d340:	f9bd 2064 	ldrsh.w	r2, [sp, #100]	; 0x64
 800d344:	9d15      	ldr	r5, [sp, #84]	; 0x54
 800d346:	9201      	str	r2, [sp, #4]
 800d348:	f89d 206c 	ldrb.w	r2, [sp, #108]	; 0x6c
 800d34c:	9205      	str	r2, [sp, #20]
 800d34e:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 800d352:	9100      	str	r1, [sp, #0]
 800d354:	6869      	ldr	r1, [r5, #4]
 800d356:	981a      	ldr	r0, [sp, #104]	; 0x68
 800d358:	f9bd e060 	ldrsh.w	lr, [sp, #96]	; 0x60
 800d35c:	fb01 2404 	mla	r4, r1, r4, r2
 800d360:	682a      	ldr	r2, [r5, #0]
 800d362:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 800d366:	6802      	ldr	r2, [r0, #0]
 800d368:	9202      	str	r2, [sp, #8]
 800d36a:	6842      	ldr	r2, [r0, #4]
 800d36c:	3204      	adds	r2, #4
 800d36e:	9203      	str	r2, [sp, #12]
 800d370:	9a00      	ldr	r2, [sp, #0]
 800d372:	2a00      	cmp	r2, #0
 800d374:	dc03      	bgt.n	800d37e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4a>
 800d376:	9a04      	ldr	r2, [sp, #16]
 800d378:	2a00      	cmp	r2, #0
 800d37a:	f340 812c 	ble.w	800d5d6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2a2>
 800d37e:	9a11      	ldr	r2, [sp, #68]	; 0x44
 800d380:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 800d384:	9a12      	ldr	r2, [sp, #72]	; 0x48
 800d386:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 800d38a:	2b00      	cmp	r3, #0
 800d38c:	dd0f      	ble.n	800d3ae <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7a>
 800d38e:	1402      	asrs	r2, r0, #16
 800d390:	d406      	bmi.n	800d3a0 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6c>
 800d392:	4572      	cmp	r2, lr
 800d394:	da04      	bge.n	800d3a0 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6c>
 800d396:	140a      	asrs	r2, r1, #16
 800d398:	d402      	bmi.n	800d3a0 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6c>
 800d39a:	9d01      	ldr	r5, [sp, #4]
 800d39c:	42aa      	cmp	r2, r5
 800d39e:	db07      	blt.n	800d3b0 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7c>
 800d3a0:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 800d3a2:	4410      	add	r0, r2
 800d3a4:	9a14      	ldr	r2, [sp, #80]	; 0x50
 800d3a6:	3b01      	subs	r3, #1
 800d3a8:	4411      	add	r1, r2
 800d3aa:	3402      	adds	r4, #2
 800d3ac:	e7ed      	b.n	800d38a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x56>
 800d3ae:	d00f      	beq.n	800d3d0 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9c>
 800d3b0:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 800d3b2:	1e5a      	subs	r2, r3, #1
 800d3b4:	fb05 0502 	mla	r5, r5, r2, r0
 800d3b8:	142d      	asrs	r5, r5, #16
 800d3ba:	d545      	bpl.n	800d448 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x114>
 800d3bc:	4699      	mov	r9, r3
 800d3be:	46a0      	mov	r8, r4
 800d3c0:	f1b9 0f00 	cmp.w	r9, #0
 800d3c4:	f300 80a7 	bgt.w	800d516 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1e2>
 800d3c8:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 800d3cc:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 800d3d0:	9b00      	ldr	r3, [sp, #0]
 800d3d2:	2b00      	cmp	r3, #0
 800d3d4:	f340 80ff 	ble.w	800d5d6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2a2>
 800d3d8:	ee30 0a04 	vadd.f32	s0, s0, s8
 800d3dc:	ee70 0aa4 	vadd.f32	s1, s1, s9
 800d3e0:	eec6 7a80 	vdiv.f32	s15, s13, s0
 800d3e4:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800d3e6:	ee31 1a05 	vadd.f32	s2, s2, s10
 800d3ea:	ee20 7aa7 	vmul.f32	s14, s1, s15
 800d3ee:	eeb0 6a62 	vmov.f32	s12, s5
 800d3f2:	ee61 7a27 	vmul.f32	s15, s2, s15
 800d3f6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 800d3fa:	ee77 2a62 	vsub.f32	s5, s14, s5
 800d3fe:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 800d402:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 800d406:	eeb0 6a43 	vmov.f32	s12, s6
 800d40a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 800d40e:	ee12 2a90 	vmov	r2, s5
 800d412:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 800d416:	fb92 f3f3 	sdiv	r3, r2, r3
 800d41a:	ee13 2a10 	vmov	r2, s6
 800d41e:	9313      	str	r3, [sp, #76]	; 0x4c
 800d420:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800d422:	fb92 f3f3 	sdiv	r3, r2, r3
 800d426:	9314      	str	r3, [sp, #80]	; 0x50
 800d428:	9b00      	ldr	r3, [sp, #0]
 800d42a:	9a04      	ldr	r2, [sp, #16]
 800d42c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 800d430:	3b01      	subs	r3, #1
 800d432:	9300      	str	r3, [sp, #0]
 800d434:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 800d438:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800d43a:	eeb0 3a67 	vmov.f32	s6, s15
 800d43e:	bf08      	it	eq
 800d440:	4613      	moveq	r3, r2
 800d442:	eef0 2a47 	vmov.f32	s5, s14
 800d446:	e793      	b.n	800d370 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3c>
 800d448:	4575      	cmp	r5, lr
 800d44a:	dab7      	bge.n	800d3bc <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x88>
 800d44c:	9d14      	ldr	r5, [sp, #80]	; 0x50
 800d44e:	fb05 1202 	mla	r2, r5, r2, r1
 800d452:	1412      	asrs	r2, r2, #16
 800d454:	d4b2      	bmi.n	800d3bc <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x88>
 800d456:	9d01      	ldr	r5, [sp, #4]
 800d458:	42aa      	cmp	r2, r5
 800d45a:	daaf      	bge.n	800d3bc <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x88>
 800d45c:	f04f 0800 	mov.w	r8, #0
 800d460:	eba3 0208 	sub.w	r2, r3, r8
 800d464:	2a00      	cmp	r2, #0
 800d466:	ddaf      	ble.n	800d3c8 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x94>
 800d468:	9e02      	ldr	r6, [sp, #8]
 800d46a:	140a      	asrs	r2, r1, #16
 800d46c:	1405      	asrs	r5, r0, #16
 800d46e:	fb0e 6202 	mla	r2, lr, r2, r6
 800d472:	5d52      	ldrb	r2, [r2, r5]
 800d474:	9d03      	ldr	r5, [sp, #12]
 800d476:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 800d47a:	0e2e      	lsrs	r6, r5, #24
 800d47c:	d044      	beq.n	800d508 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d4>
 800d47e:	9a05      	ldr	r2, [sp, #20]
 800d480:	f834 c018 	ldrh.w	ip, [r4, r8, lsl #1]
 800d484:	4356      	muls	r6, r2
 800d486:	1c72      	adds	r2, r6, #1
 800d488:	eb02 2226 	add.w	r2, r2, r6, asr #8
 800d48c:	1212      	asrs	r2, r2, #8
 800d48e:	fa1f f982 	uxth.w	r9, r2
 800d492:	ea4f 272c 	mov.w	r7, ip, asr #8
 800d496:	f3c5 4607 	ubfx	r6, r5, #16, #8
 800d49a:	43d2      	mvns	r2, r2
 800d49c:	b2d2      	uxtb	r2, r2
 800d49e:	fb16 f609 	smulbb	r6, r6, r9
 800d4a2:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 800d4a6:	fb07 6702 	mla	r7, r7, r2, r6
 800d4aa:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 800d4ae:	ea4f 06ec 	mov.w	r6, ip, asr #3
 800d4b2:	b2ed      	uxtb	r5, r5
 800d4b4:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 800d4b8:	fa5f fc8c 	uxtb.w	ip, ip
 800d4bc:	fb15 f509 	smulbb	r5, r5, r9
 800d4c0:	fb0c 5502 	mla	r5, ip, r2, r5
 800d4c4:	b2bf      	uxth	r7, r7
 800d4c6:	fb1a fa09 	smulbb	sl, sl, r9
 800d4ca:	b2ad      	uxth	r5, r5
 800d4cc:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 800d4d0:	fb06 a602 	mla	r6, r6, r2, sl
 800d4d4:	1c7a      	adds	r2, r7, #1
 800d4d6:	f105 0a01 	add.w	sl, r5, #1
 800d4da:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 800d4de:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 800d4e2:	b2b6      	uxth	r6, r6
 800d4e4:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 800d4e8:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 800d4ec:	ea47 070a 	orr.w	r7, r7, sl
 800d4f0:	f106 0a01 	add.w	sl, r6, #1
 800d4f4:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 800d4f8:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 800d4fc:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 800d500:	ea47 070a 	orr.w	r7, r7, sl
 800d504:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 800d508:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 800d50a:	4410      	add	r0, r2
 800d50c:	9a14      	ldr	r2, [sp, #80]	; 0x50
 800d50e:	f108 0801 	add.w	r8, r8, #1
 800d512:	4411      	add	r1, r2
 800d514:	e7a4      	b.n	800d460 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x12c>
 800d516:	1405      	asrs	r5, r0, #16
 800d518:	d454      	bmi.n	800d5c4 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x290>
 800d51a:	4575      	cmp	r5, lr
 800d51c:	da52      	bge.n	800d5c4 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x290>
 800d51e:	140a      	asrs	r2, r1, #16
 800d520:	d450      	bmi.n	800d5c4 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x290>
 800d522:	9e01      	ldr	r6, [sp, #4]
 800d524:	42b2      	cmp	r2, r6
 800d526:	da4d      	bge.n	800d5c4 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x290>
 800d528:	9e02      	ldr	r6, [sp, #8]
 800d52a:	fb0e 6202 	mla	r2, lr, r2, r6
 800d52e:	5d52      	ldrb	r2, [r2, r5]
 800d530:	9d03      	ldr	r5, [sp, #12]
 800d532:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 800d536:	0e2e      	lsrs	r6, r5, #24
 800d538:	d044      	beq.n	800d5c4 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x290>
 800d53a:	9a05      	ldr	r2, [sp, #20]
 800d53c:	f8b8 c000 	ldrh.w	ip, [r8]
 800d540:	4356      	muls	r6, r2
 800d542:	1c72      	adds	r2, r6, #1
 800d544:	eb02 2226 	add.w	r2, r2, r6, asr #8
 800d548:	1212      	asrs	r2, r2, #8
 800d54a:	fa1f fa82 	uxth.w	sl, r2
 800d54e:	ea4f 272c 	mov.w	r7, ip, asr #8
 800d552:	f3c5 4607 	ubfx	r6, r5, #16, #8
 800d556:	43d2      	mvns	r2, r2
 800d558:	b2d2      	uxtb	r2, r2
 800d55a:	fb16 f60a 	smulbb	r6, r6, sl
 800d55e:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 800d562:	fb07 6702 	mla	r7, r7, r2, r6
 800d566:	f3c5 2b07 	ubfx	fp, r5, #8, #8
 800d56a:	ea4f 06ec 	mov.w	r6, ip, asr #3
 800d56e:	b2ed      	uxtb	r5, r5
 800d570:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 800d574:	fa5f fc8c 	uxtb.w	ip, ip
 800d578:	fb15 f50a 	smulbb	r5, r5, sl
 800d57c:	fb0c 5502 	mla	r5, ip, r2, r5
 800d580:	b2bf      	uxth	r7, r7
 800d582:	fb1b fb0a 	smulbb	fp, fp, sl
 800d586:	b2ad      	uxth	r5, r5
 800d588:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 800d58c:	fb06 b602 	mla	r6, r6, r2, fp
 800d590:	1c7a      	adds	r2, r7, #1
 800d592:	f105 0b01 	add.w	fp, r5, #1
 800d596:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 800d59a:	eb0b 2b15 	add.w	fp, fp, r5, lsr #8
 800d59e:	b2b6      	uxth	r6, r6
 800d5a0:	f3cb 2bc4 	ubfx	fp, fp, #11, #5
 800d5a4:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 800d5a8:	ea47 070b 	orr.w	r7, r7, fp
 800d5ac:	f106 0b01 	add.w	fp, r6, #1
 800d5b0:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 800d5b4:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 800d5b8:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 800d5bc:	ea47 070b 	orr.w	r7, r7, fp
 800d5c0:	f8a8 7000 	strh.w	r7, [r8]
 800d5c4:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 800d5c6:	4410      	add	r0, r2
 800d5c8:	9a14      	ldr	r2, [sp, #80]	; 0x50
 800d5ca:	f108 0802 	add.w	r8, r8, #2
 800d5ce:	4411      	add	r1, r2
 800d5d0:	f109 39ff 	add.w	r9, r9, #4294967295
 800d5d4:	e6f4      	b.n	800d3c0 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x8c>
 800d5d6:	b007      	add	sp, #28
 800d5d8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800d5dc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 800d5dc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d5e0:	b087      	sub	sp, #28
 800d5e2:	468b      	mov	fp, r1
 800d5e4:	9d15      	ldr	r5, [sp, #84]	; 0x54
 800d5e6:	9205      	str	r2, [sp, #20]
 800d5e8:	f9bd 2064 	ldrsh.w	r2, [sp, #100]	; 0x64
 800d5ec:	9201      	str	r2, [sp, #4]
 800d5ee:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 800d5f2:	6869      	ldr	r1, [r5, #4]
 800d5f4:	981a      	ldr	r0, [sp, #104]	; 0x68
 800d5f6:	f9bd 8060 	ldrsh.w	r8, [sp, #96]	; 0x60
 800d5fa:	fb01 2404 	mla	r4, r1, r4, r2
 800d5fe:	682a      	ldr	r2, [r5, #0]
 800d600:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 800d604:	6802      	ldr	r2, [r0, #0]
 800d606:	9203      	str	r2, [sp, #12]
 800d608:	6842      	ldr	r2, [r0, #4]
 800d60a:	3204      	adds	r2, #4
 800d60c:	9204      	str	r2, [sp, #16]
 800d60e:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 800d612:	f1bb 0f00 	cmp.w	fp, #0
 800d616:	dc03      	bgt.n	800d620 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x44>
 800d618:	9a05      	ldr	r2, [sp, #20]
 800d61a:	2a00      	cmp	r2, #0
 800d61c:	f340 814a 	ble.w	800d8b4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2d8>
 800d620:	9a11      	ldr	r2, [sp, #68]	; 0x44
 800d622:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 800d626:	9a12      	ldr	r2, [sp, #72]	; 0x48
 800d628:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 800d62c:	2b00      	cmp	r3, #0
 800d62e:	dd0f      	ble.n	800d650 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x74>
 800d630:	1408      	asrs	r0, r1, #16
 800d632:	d406      	bmi.n	800d642 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x66>
 800d634:	4540      	cmp	r0, r8
 800d636:	da04      	bge.n	800d642 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x66>
 800d638:	1410      	asrs	r0, r2, #16
 800d63a:	d402      	bmi.n	800d642 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x66>
 800d63c:	9d01      	ldr	r5, [sp, #4]
 800d63e:	42a8      	cmp	r0, r5
 800d640:	db07      	blt.n	800d652 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x76>
 800d642:	9813      	ldr	r0, [sp, #76]	; 0x4c
 800d644:	4401      	add	r1, r0
 800d646:	9814      	ldr	r0, [sp, #80]	; 0x50
 800d648:	3b01      	subs	r3, #1
 800d64a:	4402      	add	r2, r0
 800d64c:	3402      	adds	r4, #2
 800d64e:	e7ed      	b.n	800d62c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x50>
 800d650:	d018      	beq.n	800d684 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xa8>
 800d652:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 800d654:	1e58      	subs	r0, r3, #1
 800d656:	fb05 1500 	mla	r5, r5, r0, r1
 800d65a:	142d      	asrs	r5, r5, #16
 800d65c:	d40a      	bmi.n	800d674 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x98>
 800d65e:	4545      	cmp	r5, r8
 800d660:	da08      	bge.n	800d674 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x98>
 800d662:	9d14      	ldr	r5, [sp, #80]	; 0x50
 800d664:	fb05 2000 	mla	r0, r5, r0, r2
 800d668:	1400      	asrs	r0, r0, #16
 800d66a:	d403      	bmi.n	800d674 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x98>
 800d66c:	9d01      	ldr	r5, [sp, #4]
 800d66e:	42a8      	cmp	r0, r5
 800d670:	f2c0 80b7 	blt.w	800d7e2 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x206>
 800d674:	2600      	movs	r6, #0
 800d676:	1998      	adds	r0, r3, r6
 800d678:	2800      	cmp	r0, #0
 800d67a:	dc3e      	bgt.n	800d6fa <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x11e>
 800d67c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 800d680:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 800d684:	f1bb 0f00 	cmp.w	fp, #0
 800d688:	f340 8114 	ble.w	800d8b4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2d8>
 800d68c:	ee30 0a04 	vadd.f32	s0, s0, s8
 800d690:	ee70 0aa4 	vadd.f32	s1, s1, s9
 800d694:	eec6 7a80 	vdiv.f32	s15, s13, s0
 800d698:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800d69a:	f1bb 0b01 	subs.w	fp, fp, #1
 800d69e:	ee31 1a05 	vadd.f32	s2, s2, s10
 800d6a2:	ee20 7aa7 	vmul.f32	s14, s1, s15
 800d6a6:	eeb0 6a62 	vmov.f32	s12, s5
 800d6aa:	ee61 7a27 	vmul.f32	s15, s2, s15
 800d6ae:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 800d6b2:	ee77 2a62 	vsub.f32	s5, s14, s5
 800d6b6:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 800d6ba:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 800d6be:	eeb0 6a43 	vmov.f32	s12, s6
 800d6c2:	ee37 3ac3 	vsub.f32	s6, s15, s6
 800d6c6:	ee12 2a90 	vmov	r2, s5
 800d6ca:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 800d6ce:	fb92 f3f3 	sdiv	r3, r2, r3
 800d6d2:	ee13 2a10 	vmov	r2, s6
 800d6d6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 800d6da:	9313      	str	r3, [sp, #76]	; 0x4c
 800d6dc:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800d6de:	fb92 f3f3 	sdiv	r3, r2, r3
 800d6e2:	9a05      	ldr	r2, [sp, #20]
 800d6e4:	9314      	str	r3, [sp, #80]	; 0x50
 800d6e6:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 800d6ea:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800d6ec:	eeb0 3a67 	vmov.f32	s6, s15
 800d6f0:	bf08      	it	eq
 800d6f2:	4613      	moveq	r3, r2
 800d6f4:	eef0 2a47 	vmov.f32	s5, s14
 800d6f8:	e78b      	b.n	800d612 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x36>
 800d6fa:	140d      	asrs	r5, r1, #16
 800d6fc:	d459      	bmi.n	800d7b2 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 800d6fe:	4545      	cmp	r5, r8
 800d700:	da57      	bge.n	800d7b2 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 800d702:	1410      	asrs	r0, r2, #16
 800d704:	d455      	bmi.n	800d7b2 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 800d706:	9f01      	ldr	r7, [sp, #4]
 800d708:	42b8      	cmp	r0, r7
 800d70a:	da52      	bge.n	800d7b2 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 800d70c:	9f03      	ldr	r7, [sp, #12]
 800d70e:	fb08 7000 	mla	r0, r8, r0, r7
 800d712:	5d40      	ldrb	r0, [r0, r5]
 800d714:	9d04      	ldr	r5, [sp, #16]
 800d716:	f855 0020 	ldr.w	r0, [r5, r0, lsl #2]
 800d71a:	0e07      	lsrs	r7, r0, #24
 800d71c:	2fff      	cmp	r7, #255	; 0xff
 800d71e:	d04e      	beq.n	800d7be <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1e2>
 800d720:	b2fd      	uxtb	r5, r7
 800d722:	2f00      	cmp	r7, #0
 800d724:	d045      	beq.n	800d7b2 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 800d726:	f06f 0701 	mvn.w	r7, #1
 800d72a:	4377      	muls	r7, r6
 800d72c:	fa1f f985 	uxth.w	r9, r5
 800d730:	f834 e007 	ldrh.w	lr, [r4, r7]
 800d734:	9702      	str	r7, [sp, #8]
 800d736:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 800d73a:	f3c0 4707 	ubfx	r7, r0, #16, #8
 800d73e:	43ed      	mvns	r5, r5
 800d740:	b2ed      	uxtb	r5, r5
 800d742:	fb17 f709 	smulbb	r7, r7, r9
 800d746:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 800d74a:	fb0c 7c05 	mla	ip, ip, r5, r7
 800d74e:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 800d752:	ea4f 07ee 	mov.w	r7, lr, asr #3
 800d756:	b2c0      	uxtb	r0, r0
 800d758:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 800d75c:	fa5f fe8e 	uxtb.w	lr, lr
 800d760:	fb10 f009 	smulbb	r0, r0, r9
 800d764:	fb0e 0005 	mla	r0, lr, r5, r0
 800d768:	b280      	uxth	r0, r0
 800d76a:	fa1f fc8c 	uxth.w	ip, ip
 800d76e:	fb1a fa09 	smulbb	sl, sl, r9
 800d772:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 800d776:	fb07 a705 	mla	r7, r7, r5, sl
 800d77a:	f100 0a01 	add.w	sl, r0, #1
 800d77e:	f10c 0501 	add.w	r5, ip, #1
 800d782:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 800d786:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 800d78a:	b2bf      	uxth	r7, r7
 800d78c:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 800d790:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 800d794:	ea4c 0c0a 	orr.w	ip, ip, sl
 800d798:	f107 0a01 	add.w	sl, r7, #1
 800d79c:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 800d7a0:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 800d7a4:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 800d7a8:	9802      	ldr	r0, [sp, #8]
 800d7aa:	ea4c 0c0a 	orr.w	ip, ip, sl
 800d7ae:	f824 c000 	strh.w	ip, [r4, r0]
 800d7b2:	9813      	ldr	r0, [sp, #76]	; 0x4c
 800d7b4:	4401      	add	r1, r0
 800d7b6:	9814      	ldr	r0, [sp, #80]	; 0x50
 800d7b8:	3e01      	subs	r6, #1
 800d7ba:	4402      	add	r2, r0
 800d7bc:	e75b      	b.n	800d676 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9a>
 800d7be:	f06f 0501 	mvn.w	r5, #1
 800d7c2:	fb05 f706 	mul.w	r7, r5, r6
 800d7c6:	f2a5 75fe 	subw	r5, r5, #2046	; 0x7fe
 800d7ca:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 800d7ce:	0945      	lsrs	r5, r0, #5
 800d7d0:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 800d7d4:	ea4c 0505 	orr.w	r5, ip, r5
 800d7d8:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 800d7dc:	4305      	orrs	r5, r0
 800d7de:	53e5      	strh	r5, [r4, r7]
 800d7e0:	e7e7      	b.n	800d7b2 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 800d7e2:	f04f 0e00 	mov.w	lr, #0
 800d7e6:	eba3 000e 	sub.w	r0, r3, lr
 800d7ea:	2800      	cmp	r0, #0
 800d7ec:	f77f af46 	ble.w	800d67c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xa0>
 800d7f0:	9e03      	ldr	r6, [sp, #12]
 800d7f2:	1410      	asrs	r0, r2, #16
 800d7f4:	140d      	asrs	r5, r1, #16
 800d7f6:	fb08 6000 	mla	r0, r8, r0, r6
 800d7fa:	5d40      	ldrb	r0, [r0, r5]
 800d7fc:	9d04      	ldr	r5, [sp, #16]
 800d7fe:	f855 0020 	ldr.w	r0, [r5, r0, lsl #2]
 800d802:	0e06      	lsrs	r6, r0, #24
 800d804:	2eff      	cmp	r6, #255	; 0xff
 800d806:	d048      	beq.n	800d89a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2be>
 800d808:	b2f5      	uxtb	r5, r6
 800d80a:	2e00      	cmp	r6, #0
 800d80c:	d03e      	beq.n	800d88c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2b0>
 800d80e:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 800d812:	fa1f f985 	uxth.w	r9, r5
 800d816:	ea4f 272c 	mov.w	r7, ip, asr #8
 800d81a:	f3c0 4607 	ubfx	r6, r0, #16, #8
 800d81e:	43ed      	mvns	r5, r5
 800d820:	b2ed      	uxtb	r5, r5
 800d822:	fb16 f609 	smulbb	r6, r6, r9
 800d826:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 800d82a:	fb07 6705 	mla	r7, r7, r5, r6
 800d82e:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 800d832:	ea4f 06ec 	mov.w	r6, ip, asr #3
 800d836:	b2c0      	uxtb	r0, r0
 800d838:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 800d83c:	fa5f fc8c 	uxtb.w	ip, ip
 800d840:	fb10 f009 	smulbb	r0, r0, r9
 800d844:	fb0c 0005 	mla	r0, ip, r5, r0
 800d848:	b2bf      	uxth	r7, r7
 800d84a:	fb1a fa09 	smulbb	sl, sl, r9
 800d84e:	b280      	uxth	r0, r0
 800d850:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 800d854:	fb06 a605 	mla	r6, r6, r5, sl
 800d858:	1c7d      	adds	r5, r7, #1
 800d85a:	f100 0a01 	add.w	sl, r0, #1
 800d85e:	eb05 2717 	add.w	r7, r5, r7, lsr #8
 800d862:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 800d866:	b2b6      	uxth	r6, r6
 800d868:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 800d86c:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 800d870:	ea47 070a 	orr.w	r7, r7, sl
 800d874:	f106 0a01 	add.w	sl, r6, #1
 800d878:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 800d87c:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 800d880:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 800d884:	ea47 070a 	orr.w	r7, r7, sl
 800d888:	f824 701e 	strh.w	r7, [r4, lr, lsl #1]
 800d88c:	9813      	ldr	r0, [sp, #76]	; 0x4c
 800d88e:	4401      	add	r1, r0
 800d890:	9814      	ldr	r0, [sp, #80]	; 0x50
 800d892:	f10e 0e01 	add.w	lr, lr, #1
 800d896:	4402      	add	r2, r0
 800d898:	e7a5      	b.n	800d7e6 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x20a>
 800d89a:	4d08      	ldr	r5, [pc, #32]	; (800d8bc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2e0>)
 800d89c:	ea05 2610 	and.w	r6, r5, r0, lsr #8
 800d8a0:	0945      	lsrs	r5, r0, #5
 800d8a2:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 800d8a6:	4335      	orrs	r5, r6
 800d8a8:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 800d8ac:	4305      	orrs	r5, r0
 800d8ae:	f824 501e 	strh.w	r5, [r4, lr, lsl #1]
 800d8b2:	e7eb      	b.n	800d88c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2b0>
 800d8b4:	b007      	add	sp, #28
 800d8b6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d8ba:	bf00      	nop
 800d8bc:	fffff800 	.word	0xfffff800

0800d8c0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 800d8c0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d8c4:	b087      	sub	sp, #28
 800d8c6:	468b      	mov	fp, r1
 800d8c8:	9204      	str	r2, [sp, #16]
 800d8ca:	f9bd 2064 	ldrsh.w	r2, [sp, #100]	; 0x64
 800d8ce:	9d15      	ldr	r5, [sp, #84]	; 0x54
 800d8d0:	9201      	str	r2, [sp, #4]
 800d8d2:	f89d 206c 	ldrb.w	r2, [sp, #108]	; 0x6c
 800d8d6:	9205      	str	r2, [sp, #20]
 800d8d8:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 800d8dc:	6869      	ldr	r1, [r5, #4]
 800d8de:	981a      	ldr	r0, [sp, #104]	; 0x68
 800d8e0:	f9bd 8060 	ldrsh.w	r8, [sp, #96]	; 0x60
 800d8e4:	fb01 2404 	mla	r4, r1, r4, r2
 800d8e8:	682a      	ldr	r2, [r5, #0]
 800d8ea:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 800d8ee:	6802      	ldr	r2, [r0, #0]
 800d8f0:	9202      	str	r2, [sp, #8]
 800d8f2:	6842      	ldr	r2, [r0, #4]
 800d8f4:	9203      	str	r2, [sp, #12]
 800d8f6:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 800d8fa:	f1bb 0f00 	cmp.w	fp, #0
 800d8fe:	dc03      	bgt.n	800d908 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x48>
 800d900:	9a04      	ldr	r2, [sp, #16]
 800d902:	2a00      	cmp	r2, #0
 800d904:	f340 8136 	ble.w	800db74 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2b4>
 800d908:	9a11      	ldr	r2, [sp, #68]	; 0x44
 800d90a:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 800d90e:	9a12      	ldr	r2, [sp, #72]	; 0x48
 800d910:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 800d914:	2b00      	cmp	r3, #0
 800d916:	dd0f      	ble.n	800d938 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x78>
 800d918:	1408      	asrs	r0, r1, #16
 800d91a:	d406      	bmi.n	800d92a <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6a>
 800d91c:	4540      	cmp	r0, r8
 800d91e:	da04      	bge.n	800d92a <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6a>
 800d920:	1410      	asrs	r0, r2, #16
 800d922:	d402      	bmi.n	800d92a <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6a>
 800d924:	9d01      	ldr	r5, [sp, #4]
 800d926:	42a8      	cmp	r0, r5
 800d928:	db07      	blt.n	800d93a <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7a>
 800d92a:	9813      	ldr	r0, [sp, #76]	; 0x4c
 800d92c:	4401      	add	r1, r0
 800d92e:	9814      	ldr	r0, [sp, #80]	; 0x50
 800d930:	3b01      	subs	r3, #1
 800d932:	4402      	add	r2, r0
 800d934:	3402      	adds	r4, #2
 800d936:	e7ed      	b.n	800d914 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x54>
 800d938:	d00f      	beq.n	800d95a <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9a>
 800d93a:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 800d93c:	1e58      	subs	r0, r3, #1
 800d93e:	fb05 1500 	mla	r5, r5, r0, r1
 800d942:	142d      	asrs	r5, r5, #16
 800d944:	d544      	bpl.n	800d9d0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x110>
 800d946:	9300      	str	r3, [sp, #0]
 800d948:	46a2      	mov	sl, r4
 800d94a:	9800      	ldr	r0, [sp, #0]
 800d94c:	2800      	cmp	r0, #0
 800d94e:	f300 80ab 	bgt.w	800daa8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1e8>
 800d952:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 800d956:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 800d95a:	f1bb 0f00 	cmp.w	fp, #0
 800d95e:	f340 8109 	ble.w	800db74 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2b4>
 800d962:	ee30 0a04 	vadd.f32	s0, s0, s8
 800d966:	ee70 0aa4 	vadd.f32	s1, s1, s9
 800d96a:	eec6 7a80 	vdiv.f32	s15, s13, s0
 800d96e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800d970:	f1bb 0b01 	subs.w	fp, fp, #1
 800d974:	ee31 1a05 	vadd.f32	s2, s2, s10
 800d978:	ee20 7aa7 	vmul.f32	s14, s1, s15
 800d97c:	eeb0 6a62 	vmov.f32	s12, s5
 800d980:	ee61 7a27 	vmul.f32	s15, s2, s15
 800d984:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 800d988:	ee77 2a62 	vsub.f32	s5, s14, s5
 800d98c:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 800d990:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 800d994:	eeb0 6a43 	vmov.f32	s12, s6
 800d998:	ee37 3ac3 	vsub.f32	s6, s15, s6
 800d99c:	ee12 2a90 	vmov	r2, s5
 800d9a0:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 800d9a4:	fb92 f3f3 	sdiv	r3, r2, r3
 800d9a8:	ee13 2a10 	vmov	r2, s6
 800d9ac:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 800d9b0:	9313      	str	r3, [sp, #76]	; 0x4c
 800d9b2:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800d9b4:	fb92 f3f3 	sdiv	r3, r2, r3
 800d9b8:	9a04      	ldr	r2, [sp, #16]
 800d9ba:	9314      	str	r3, [sp, #80]	; 0x50
 800d9bc:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 800d9c0:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800d9c2:	eeb0 3a67 	vmov.f32	s6, s15
 800d9c6:	bf08      	it	eq
 800d9c8:	4613      	moveq	r3, r2
 800d9ca:	eef0 2a47 	vmov.f32	s5, s14
 800d9ce:	e794      	b.n	800d8fa <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3a>
 800d9d0:	4545      	cmp	r5, r8
 800d9d2:	dab8      	bge.n	800d946 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x86>
 800d9d4:	9d14      	ldr	r5, [sp, #80]	; 0x50
 800d9d6:	fb05 2000 	mla	r0, r5, r0, r2
 800d9da:	1400      	asrs	r0, r0, #16
 800d9dc:	d4b3      	bmi.n	800d946 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x86>
 800d9de:	9d01      	ldr	r5, [sp, #4]
 800d9e0:	42a8      	cmp	r0, r5
 800d9e2:	dab0      	bge.n	800d946 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x86>
 800d9e4:	f04f 0900 	mov.w	r9, #0
 800d9e8:	eba3 0009 	sub.w	r0, r3, r9
 800d9ec:	2800      	cmp	r0, #0
 800d9ee:	ddb0      	ble.n	800d952 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x92>
 800d9f0:	140d      	asrs	r5, r1, #16
 800d9f2:	1410      	asrs	r0, r2, #16
 800d9f4:	fb08 5000 	mla	r0, r8, r0, r5
 800d9f8:	9d03      	ldr	r5, [sp, #12]
 800d9fa:	5c2e      	ldrb	r6, [r5, r0]
 800d9fc:	2e00      	cmp	r6, #0
 800d9fe:	d04c      	beq.n	800da9a <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1da>
 800da00:	9d02      	ldr	r5, [sp, #8]
 800da02:	f835 e010 	ldrh.w	lr, [r5, r0, lsl #1]
 800da06:	9805      	ldr	r0, [sp, #20]
 800da08:	f834 5019 	ldrh.w	r5, [r4, r9, lsl #1]
 800da0c:	4346      	muls	r6, r0
 800da0e:	1c70      	adds	r0, r6, #1
 800da10:	eb00 2016 	add.w	r0, r0, r6, lsr #8
 800da14:	1200      	asrs	r0, r0, #8
 800da16:	b287      	uxth	r7, r0
 800da18:	122e      	asrs	r6, r5, #8
 800da1a:	43c0      	mvns	r0, r0
 800da1c:	b2c0      	uxtb	r0, r0
 800da1e:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 800da22:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 800da26:	fb16 f600 	smulbb	r6, r6, r0
 800da2a:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 800da2e:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 800da32:	00ed      	lsls	r5, r5, #3
 800da34:	fb0c 6c07 	mla	ip, ip, r7, r6
 800da38:	b2ed      	uxtb	r5, r5
 800da3a:	ea4f 06ee 	mov.w	r6, lr, asr #3
 800da3e:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 800da42:	fb15 f500 	smulbb	r5, r5, r0
 800da46:	fa5f fe8e 	uxtb.w	lr, lr
 800da4a:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 800da4e:	fb0e 5507 	mla	r5, lr, r7, r5
 800da52:	fb1a fa00 	smulbb	sl, sl, r0
 800da56:	fa1f fc8c 	uxth.w	ip, ip
 800da5a:	b2ad      	uxth	r5, r5
 800da5c:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 800da60:	fb06 a607 	mla	r6, r6, r7, sl
 800da64:	f10c 0001 	add.w	r0, ip, #1
 800da68:	f105 0a01 	add.w	sl, r5, #1
 800da6c:	eb00 2c1c 	add.w	ip, r0, ip, lsr #8
 800da70:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 800da74:	b2b6      	uxth	r6, r6
 800da76:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 800da7a:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 800da7e:	ea4c 0c0a 	orr.w	ip, ip, sl
 800da82:	f106 0a01 	add.w	sl, r6, #1
 800da86:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 800da8a:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 800da8e:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 800da92:	ea4c 0c0a 	orr.w	ip, ip, sl
 800da96:	f824 c019 	strh.w	ip, [r4, r9, lsl #1]
 800da9a:	9813      	ldr	r0, [sp, #76]	; 0x4c
 800da9c:	4401      	add	r1, r0
 800da9e:	9814      	ldr	r0, [sp, #80]	; 0x50
 800daa0:	f109 0901 	add.w	r9, r9, #1
 800daa4:	4402      	add	r2, r0
 800daa6:	e79f      	b.n	800d9e8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x128>
 800daa8:	1408      	asrs	r0, r1, #16
 800daaa:	d459      	bmi.n	800db60 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2a0>
 800daac:	4540      	cmp	r0, r8
 800daae:	da57      	bge.n	800db60 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2a0>
 800dab0:	1415      	asrs	r5, r2, #16
 800dab2:	d455      	bmi.n	800db60 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2a0>
 800dab4:	9e01      	ldr	r6, [sp, #4]
 800dab6:	42b5      	cmp	r5, r6
 800dab8:	da52      	bge.n	800db60 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2a0>
 800daba:	fb08 0005 	mla	r0, r8, r5, r0
 800dabe:	9d03      	ldr	r5, [sp, #12]
 800dac0:	5c2e      	ldrb	r6, [r5, r0]
 800dac2:	2e00      	cmp	r6, #0
 800dac4:	d04c      	beq.n	800db60 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2a0>
 800dac6:	9d02      	ldr	r5, [sp, #8]
 800dac8:	f835 e010 	ldrh.w	lr, [r5, r0, lsl #1]
 800dacc:	9805      	ldr	r0, [sp, #20]
 800dace:	f8ba 5000 	ldrh.w	r5, [sl]
 800dad2:	4346      	muls	r6, r0
 800dad4:	1c70      	adds	r0, r6, #1
 800dad6:	eb00 2016 	add.w	r0, r0, r6, lsr #8
 800dada:	1200      	asrs	r0, r0, #8
 800dadc:	b287      	uxth	r7, r0
 800dade:	122e      	asrs	r6, r5, #8
 800dae0:	43c0      	mvns	r0, r0
 800dae2:	b2c0      	uxtb	r0, r0
 800dae4:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 800dae8:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 800daec:	fb16 f600 	smulbb	r6, r6, r0
 800daf0:	ea4f 09e5 	mov.w	r9, r5, asr #3
 800daf4:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 800daf8:	00ed      	lsls	r5, r5, #3
 800dafa:	fb0c 6c07 	mla	ip, ip, r7, r6
 800dafe:	b2ed      	uxtb	r5, r5
 800db00:	ea4f 06ee 	mov.w	r6, lr, asr #3
 800db04:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 800db08:	fb15 f500 	smulbb	r5, r5, r0
 800db0c:	fa5f fe8e 	uxtb.w	lr, lr
 800db10:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 800db14:	fb0e 5507 	mla	r5, lr, r7, r5
 800db18:	fb19 f900 	smulbb	r9, r9, r0
 800db1c:	fa1f fc8c 	uxth.w	ip, ip
 800db20:	b2ad      	uxth	r5, r5
 800db22:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 800db26:	fb06 9607 	mla	r6, r6, r7, r9
 800db2a:	f10c 0001 	add.w	r0, ip, #1
 800db2e:	f105 0901 	add.w	r9, r5, #1
 800db32:	eb00 2c1c 	add.w	ip, r0, ip, lsr #8
 800db36:	eb09 2915 	add.w	r9, r9, r5, lsr #8
 800db3a:	b2b6      	uxth	r6, r6
 800db3c:	f3c9 29c4 	ubfx	r9, r9, #11, #5
 800db40:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 800db44:	ea4c 0c09 	orr.w	ip, ip, r9
 800db48:	f106 0901 	add.w	r9, r6, #1
 800db4c:	eb09 2916 	add.w	r9, r9, r6, lsr #8
 800db50:	ea4f 1959 	mov.w	r9, r9, lsr #5
 800db54:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 800db58:	ea4c 0c09 	orr.w	ip, ip, r9
 800db5c:	f8aa c000 	strh.w	ip, [sl]
 800db60:	9813      	ldr	r0, [sp, #76]	; 0x4c
 800db62:	4401      	add	r1, r0
 800db64:	9814      	ldr	r0, [sp, #80]	; 0x50
 800db66:	4402      	add	r2, r0
 800db68:	9800      	ldr	r0, [sp, #0]
 800db6a:	3801      	subs	r0, #1
 800db6c:	f10a 0a02 	add.w	sl, sl, #2
 800db70:	9000      	str	r0, [sp, #0]
 800db72:	e6ea      	b.n	800d94a <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x8a>
 800db74:	b007      	add	sp, #28
 800db76:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800db7a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 800db7a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800db7e:	b087      	sub	sp, #28
 800db80:	468b      	mov	fp, r1
 800db82:	9d15      	ldr	r5, [sp, #84]	; 0x54
 800db84:	9205      	str	r2, [sp, #20]
 800db86:	f9bd 2064 	ldrsh.w	r2, [sp, #100]	; 0x64
 800db8a:	9202      	str	r2, [sp, #8]
 800db8c:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
 800db90:	6869      	ldr	r1, [r5, #4]
 800db92:	9c1a      	ldr	r4, [sp, #104]	; 0x68
 800db94:	f9bd 9060 	ldrsh.w	r9, [sp, #96]	; 0x60
 800db98:	fb01 2000 	mla	r0, r1, r0, r2
 800db9c:	682a      	ldr	r2, [r5, #0]
 800db9e:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 800dba2:	6822      	ldr	r2, [r4, #0]
 800dba4:	9201      	str	r2, [sp, #4]
 800dba6:	6862      	ldr	r2, [r4, #4]
 800dba8:	9204      	str	r2, [sp, #16]
 800dbaa:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 800dbae:	f1bb 0f00 	cmp.w	fp, #0
 800dbb2:	dc03      	bgt.n	800dbbc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x42>
 800dbb4:	9a05      	ldr	r2, [sp, #20]
 800dbb6:	2a00      	cmp	r2, #0
 800dbb8:	f340 813d 	ble.w	800de36 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2bc>
 800dbbc:	9a11      	ldr	r2, [sp, #68]	; 0x44
 800dbbe:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 800dbc2:	9a12      	ldr	r2, [sp, #72]	; 0x48
 800dbc4:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 800dbc8:	2b00      	cmp	r3, #0
 800dbca:	dd0f      	ble.n	800dbec <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x72>
 800dbcc:	140c      	asrs	r4, r1, #16
 800dbce:	d406      	bmi.n	800dbde <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x64>
 800dbd0:	454c      	cmp	r4, r9
 800dbd2:	da04      	bge.n	800dbde <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x64>
 800dbd4:	1414      	asrs	r4, r2, #16
 800dbd6:	d402      	bmi.n	800dbde <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x64>
 800dbd8:	9d02      	ldr	r5, [sp, #8]
 800dbda:	42ac      	cmp	r4, r5
 800dbdc:	db07      	blt.n	800dbee <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x74>
 800dbde:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 800dbe0:	4421      	add	r1, r4
 800dbe2:	9c14      	ldr	r4, [sp, #80]	; 0x50
 800dbe4:	3b01      	subs	r3, #1
 800dbe6:	4422      	add	r2, r4
 800dbe8:	3002      	adds	r0, #2
 800dbea:	e7ed      	b.n	800dbc8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4e>
 800dbec:	d018      	beq.n	800dc20 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xa6>
 800dbee:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 800dbf0:	1e5c      	subs	r4, r3, #1
 800dbf2:	fb05 1504 	mla	r5, r5, r4, r1
 800dbf6:	142d      	asrs	r5, r5, #16
 800dbf8:	d40a      	bmi.n	800dc10 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x96>
 800dbfa:	454d      	cmp	r5, r9
 800dbfc:	da08      	bge.n	800dc10 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x96>
 800dbfe:	9d14      	ldr	r5, [sp, #80]	; 0x50
 800dc00:	fb05 2404 	mla	r4, r5, r4, r2
 800dc04:	1424      	asrs	r4, r4, #16
 800dc06:	d403      	bmi.n	800dc10 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x96>
 800dc08:	9d02      	ldr	r5, [sp, #8]
 800dc0a:	42ac      	cmp	r4, r5
 800dc0c:	f2c0 80ae 	blt.w	800dd6c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1f2>
 800dc10:	2600      	movs	r6, #0
 800dc12:	199c      	adds	r4, r3, r6
 800dc14:	2c00      	cmp	r4, #0
 800dc16:	dc3e      	bgt.n	800dc96 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x11c>
 800dc18:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 800dc1c:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 800dc20:	f1bb 0f00 	cmp.w	fp, #0
 800dc24:	f340 8107 	ble.w	800de36 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2bc>
 800dc28:	ee30 0a04 	vadd.f32	s0, s0, s8
 800dc2c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 800dc30:	eec6 7a80 	vdiv.f32	s15, s13, s0
 800dc34:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800dc36:	f1bb 0b01 	subs.w	fp, fp, #1
 800dc3a:	ee31 1a05 	vadd.f32	s2, s2, s10
 800dc3e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 800dc42:	eeb0 6a62 	vmov.f32	s12, s5
 800dc46:	ee61 7a27 	vmul.f32	s15, s2, s15
 800dc4a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 800dc4e:	ee77 2a62 	vsub.f32	s5, s14, s5
 800dc52:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 800dc56:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 800dc5a:	eeb0 6a43 	vmov.f32	s12, s6
 800dc5e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 800dc62:	ee12 2a90 	vmov	r2, s5
 800dc66:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 800dc6a:	fb92 f3f3 	sdiv	r3, r2, r3
 800dc6e:	ee13 2a10 	vmov	r2, s6
 800dc72:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 800dc76:	9313      	str	r3, [sp, #76]	; 0x4c
 800dc78:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800dc7a:	fb92 f3f3 	sdiv	r3, r2, r3
 800dc7e:	9a05      	ldr	r2, [sp, #20]
 800dc80:	9314      	str	r3, [sp, #80]	; 0x50
 800dc82:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 800dc86:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800dc88:	eeb0 3a67 	vmov.f32	s6, s15
 800dc8c:	bf08      	it	eq
 800dc8e:	4613      	moveq	r3, r2
 800dc90:	eef0 2a47 	vmov.f32	s5, s14
 800dc94:	e78b      	b.n	800dbae <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x34>
 800dc96:	140c      	asrs	r4, r1, #16
 800dc98:	d45a      	bmi.n	800dd50 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 800dc9a:	454c      	cmp	r4, r9
 800dc9c:	da58      	bge.n	800dd50 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 800dc9e:	1415      	asrs	r5, r2, #16
 800dca0:	d456      	bmi.n	800dd50 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 800dca2:	9f02      	ldr	r7, [sp, #8]
 800dca4:	42bd      	cmp	r5, r7
 800dca6:	da53      	bge.n	800dd50 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 800dca8:	fb09 4505 	mla	r5, r9, r5, r4
 800dcac:	9c04      	ldr	r4, [sp, #16]
 800dcae:	5d64      	ldrb	r4, [r4, r5]
 800dcb0:	2cff      	cmp	r4, #255	; 0xff
 800dcb2:	d053      	beq.n	800dd5c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1e2>
 800dcb4:	2c00      	cmp	r4, #0
 800dcb6:	d04b      	beq.n	800dd50 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 800dcb8:	9f01      	ldr	r7, [sp, #4]
 800dcba:	f837 8015 	ldrh.w	r8, [r7, r5, lsl #1]
 800dcbe:	f06f 0501 	mvn.w	r5, #1
 800dcc2:	4375      	muls	r5, r6
 800dcc4:	9503      	str	r5, [sp, #12]
 800dcc6:	5b45      	ldrh	r5, [r0, r5]
 800dcc8:	fa1f fc84 	uxth.w	ip, r4
 800dccc:	122f      	asrs	r7, r5, #8
 800dcce:	43e4      	mvns	r4, r4
 800dcd0:	b2e4      	uxtb	r4, r4
 800dcd2:	ea4f 2e28 	mov.w	lr, r8, asr #8
 800dcd6:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 800dcda:	fb17 f704 	smulbb	r7, r7, r4
 800dcde:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 800dce2:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 800dce6:	00ed      	lsls	r5, r5, #3
 800dce8:	fb0e 7e0c 	mla	lr, lr, ip, r7
 800dcec:	b2ed      	uxtb	r5, r5
 800dcee:	ea4f 07e8 	mov.w	r7, r8, asr #3
 800dcf2:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 800dcf6:	fb15 f504 	smulbb	r5, r5, r4
 800dcfa:	fa5f f888 	uxtb.w	r8, r8
 800dcfe:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 800dd02:	fb08 550c 	mla	r5, r8, ip, r5
 800dd06:	fb1a fa04 	smulbb	sl, sl, r4
 800dd0a:	fa1f fe8e 	uxth.w	lr, lr
 800dd0e:	b2ad      	uxth	r5, r5
 800dd10:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 800dd14:	fb07 a70c 	mla	r7, r7, ip, sl
 800dd18:	f10e 0401 	add.w	r4, lr, #1
 800dd1c:	f105 0a01 	add.w	sl, r5, #1
 800dd20:	eb04 2e1e 	add.w	lr, r4, lr, lsr #8
 800dd24:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 800dd28:	b2bf      	uxth	r7, r7
 800dd2a:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 800dd2e:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 800dd32:	ea4e 0e0a 	orr.w	lr, lr, sl
 800dd36:	f107 0a01 	add.w	sl, r7, #1
 800dd3a:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 800dd3e:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 800dd42:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 800dd46:	9c03      	ldr	r4, [sp, #12]
 800dd48:	ea4e 0e0a 	orr.w	lr, lr, sl
 800dd4c:	f820 e004 	strh.w	lr, [r0, r4]
 800dd50:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 800dd52:	4421      	add	r1, r4
 800dd54:	9c14      	ldr	r4, [sp, #80]	; 0x50
 800dd56:	3e01      	subs	r6, #1
 800dd58:	4422      	add	r2, r4
 800dd5a:	e75a      	b.n	800dc12 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x98>
 800dd5c:	9c01      	ldr	r4, [sp, #4]
 800dd5e:	f834 5015 	ldrh.w	r5, [r4, r5, lsl #1]
 800dd62:	f06f 0401 	mvn.w	r4, #1
 800dd66:	4374      	muls	r4, r6
 800dd68:	5305      	strh	r5, [r0, r4]
 800dd6a:	e7f1      	b.n	800dd50 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 800dd6c:	f04f 0800 	mov.w	r8, #0
 800dd70:	eba3 0408 	sub.w	r4, r3, r8
 800dd74:	2c00      	cmp	r4, #0
 800dd76:	f77f af4f 	ble.w	800dc18 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9e>
 800dd7a:	140c      	asrs	r4, r1, #16
 800dd7c:	1415      	asrs	r5, r2, #16
 800dd7e:	fb09 4505 	mla	r5, r9, r5, r4
 800dd82:	9c04      	ldr	r4, [sp, #16]
 800dd84:	5d64      	ldrb	r4, [r4, r5]
 800dd86:	2cff      	cmp	r4, #255	; 0xff
 800dd88:	d04f      	beq.n	800de2a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2b0>
 800dd8a:	2c00      	cmp	r4, #0
 800dd8c:	d046      	beq.n	800de1c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2a2>
 800dd8e:	9e01      	ldr	r6, [sp, #4]
 800dd90:	f836 e015 	ldrh.w	lr, [r6, r5, lsl #1]
 800dd94:	f830 5018 	ldrh.w	r5, [r0, r8, lsl #1]
 800dd98:	b2a7      	uxth	r7, r4
 800dd9a:	122e      	asrs	r6, r5, #8
 800dd9c:	43e4      	mvns	r4, r4
 800dd9e:	b2e4      	uxtb	r4, r4
 800dda0:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 800dda4:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 800dda8:	fb16 f604 	smulbb	r6, r6, r4
 800ddac:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 800ddb0:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 800ddb4:	00ed      	lsls	r5, r5, #3
 800ddb6:	fb0c 6c07 	mla	ip, ip, r7, r6
 800ddba:	b2ed      	uxtb	r5, r5
 800ddbc:	ea4f 06ee 	mov.w	r6, lr, asr #3
 800ddc0:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 800ddc4:	fb15 f504 	smulbb	r5, r5, r4
 800ddc8:	fa5f fe8e 	uxtb.w	lr, lr
 800ddcc:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 800ddd0:	fb0e 5507 	mla	r5, lr, r7, r5
 800ddd4:	fb1a fa04 	smulbb	sl, sl, r4
 800ddd8:	fa1f fc8c 	uxth.w	ip, ip
 800dddc:	b2ad      	uxth	r5, r5
 800ddde:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 800dde2:	fb06 a607 	mla	r6, r6, r7, sl
 800dde6:	f10c 0401 	add.w	r4, ip, #1
 800ddea:	f105 0a01 	add.w	sl, r5, #1
 800ddee:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 800ddf2:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 800ddf6:	b2b6      	uxth	r6, r6
 800ddf8:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 800ddfc:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 800de00:	ea4c 0c0a 	orr.w	ip, ip, sl
 800de04:	f106 0a01 	add.w	sl, r6, #1
 800de08:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 800de0c:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 800de10:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 800de14:	ea4c 0c0a 	orr.w	ip, ip, sl
 800de18:	f820 c018 	strh.w	ip, [r0, r8, lsl #1]
 800de1c:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 800de1e:	4421      	add	r1, r4
 800de20:	9c14      	ldr	r4, [sp, #80]	; 0x50
 800de22:	f108 0801 	add.w	r8, r8, #1
 800de26:	4422      	add	r2, r4
 800de28:	e7a2      	b.n	800dd70 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1f6>
 800de2a:	9c01      	ldr	r4, [sp, #4]
 800de2c:	f834 4015 	ldrh.w	r4, [r4, r5, lsl #1]
 800de30:	f820 4018 	strh.w	r4, [r0, r8, lsl #1]
 800de34:	e7f2      	b.n	800de1c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2a2>
 800de36:	b007      	add	sp, #28
 800de38:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800de3c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 800de3c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800de40:	b085      	sub	sp, #20
 800de42:	9813      	ldr	r0, [sp, #76]	; 0x4c
 800de44:	9203      	str	r2, [sp, #12]
 800de46:	f9bd 205c 	ldrsh.w	r2, [sp, #92]	; 0x5c
 800de4a:	9201      	str	r2, [sp, #4]
 800de4c:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 800de50:	9100      	str	r1, [sp, #0]
 800de52:	6841      	ldr	r1, [r0, #4]
 800de54:	f89d 5064 	ldrb.w	r5, [sp, #100]	; 0x64
 800de58:	f9bd 8058 	ldrsh.w	r8, [sp, #88]	; 0x58
 800de5c:	fb01 2404 	mla	r4, r1, r4, r2
 800de60:	6802      	ldr	r2, [r0, #0]
 800de62:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 800de66:	9a18      	ldr	r2, [sp, #96]	; 0x60
 800de68:	fa1f fe85 	uxth.w	lr, r5
 800de6c:	6812      	ldr	r2, [r2, #0]
 800de6e:	9202      	str	r2, [sp, #8]
 800de70:	43ed      	mvns	r5, r5
 800de72:	b2ed      	uxtb	r5, r5
 800de74:	9a00      	ldr	r2, [sp, #0]
 800de76:	2a00      	cmp	r2, #0
 800de78:	dc03      	bgt.n	800de82 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x46>
 800de7a:	9a03      	ldr	r2, [sp, #12]
 800de7c:	2a00      	cmp	r2, #0
 800de7e:	f340 8117 	ble.w	800e0b0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x274>
 800de82:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 800de84:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 800de88:	9a10      	ldr	r2, [sp, #64]	; 0x40
 800de8a:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 800de8e:	2b00      	cmp	r3, #0
 800de90:	dd0f      	ble.n	800deb2 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x76>
 800de92:	1408      	asrs	r0, r1, #16
 800de94:	d406      	bmi.n	800dea4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x68>
 800de96:	4540      	cmp	r0, r8
 800de98:	da04      	bge.n	800dea4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x68>
 800de9a:	1410      	asrs	r0, r2, #16
 800de9c:	d402      	bmi.n	800dea4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x68>
 800de9e:	9e01      	ldr	r6, [sp, #4]
 800dea0:	42b0      	cmp	r0, r6
 800dea2:	db07      	blt.n	800deb4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x78>
 800dea4:	9811      	ldr	r0, [sp, #68]	; 0x44
 800dea6:	4401      	add	r1, r0
 800dea8:	9812      	ldr	r0, [sp, #72]	; 0x48
 800deaa:	3b01      	subs	r3, #1
 800deac:	4402      	add	r2, r0
 800deae:	3402      	adds	r4, #2
 800deb0:	e7ed      	b.n	800de8e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x52>
 800deb2:	d069      	beq.n	800df88 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x14c>
 800deb4:	9e11      	ldr	r6, [sp, #68]	; 0x44
 800deb6:	1e58      	subs	r0, r3, #1
 800deb8:	fb06 1600 	mla	r6, r6, r0, r1
 800debc:	1436      	asrs	r6, r6, #16
 800debe:	d459      	bmi.n	800df74 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x138>
 800dec0:	4546      	cmp	r6, r8
 800dec2:	da57      	bge.n	800df74 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x138>
 800dec4:	9e12      	ldr	r6, [sp, #72]	; 0x48
 800dec6:	fb06 2000 	mla	r0, r6, r0, r2
 800deca:	1400      	asrs	r0, r0, #16
 800decc:	d452      	bmi.n	800df74 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x138>
 800dece:	9e01      	ldr	r6, [sp, #4]
 800ded0:	42b0      	cmp	r0, r6
 800ded2:	da4f      	bge.n	800df74 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x138>
 800ded4:	469a      	mov	sl, r3
 800ded6:	46a3      	mov	fp, r4
 800ded8:	f1ba 0f00 	cmp.w	sl, #0
 800dedc:	dd50      	ble.n	800df80 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x144>
 800dede:	140e      	asrs	r6, r1, #16
 800dee0:	1410      	asrs	r0, r2, #16
 800dee2:	fb08 6000 	mla	r0, r8, r0, r6
 800dee6:	9e02      	ldr	r6, [sp, #8]
 800dee8:	f836 0010 	ldrh.w	r0, [r6, r0, lsl #1]
 800deec:	f8bb 6000 	ldrh.w	r6, [fp]
 800def0:	1237      	asrs	r7, r6, #8
 800def2:	ea4f 2c20 	mov.w	ip, r0, asr #8
 800def6:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 800defa:	fb17 f705 	smulbb	r7, r7, r5
 800defe:	ea4f 09e6 	mov.w	r9, r6, asr #3
 800df02:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 800df06:	00f6      	lsls	r6, r6, #3
 800df08:	fb0c 7c0e 	mla	ip, ip, lr, r7
 800df0c:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 800df10:	10c7      	asrs	r7, r0, #3
 800df12:	b2f6      	uxtb	r6, r6
 800df14:	00c0      	lsls	r0, r0, #3
 800df16:	fb19 f905 	smulbb	r9, r9, r5
 800df1a:	fb16 f605 	smulbb	r6, r6, r5
 800df1e:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 800df22:	b2c0      	uxtb	r0, r0
 800df24:	fa1f fc8c 	uxth.w	ip, ip
 800df28:	fb07 970e 	mla	r7, r7, lr, r9
 800df2c:	fb00 600e 	mla	r0, r0, lr, r6
 800df30:	b280      	uxth	r0, r0
 800df32:	b2bf      	uxth	r7, r7
 800df34:	f10c 0601 	add.w	r6, ip, #1
 800df38:	eb06 2c1c 	add.w	ip, r6, ip, lsr #8
 800df3c:	f107 0901 	add.w	r9, r7, #1
 800df40:	1c46      	adds	r6, r0, #1
 800df42:	eb06 2610 	add.w	r6, r6, r0, lsr #8
 800df46:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 800df4a:	9811      	ldr	r0, [sp, #68]	; 0x44
 800df4c:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 800df50:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 800df54:	ea4f 1959 	mov.w	r9, r9, lsr #5
 800df58:	ea4c 0c06 	orr.w	ip, ip, r6
 800df5c:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 800df60:	4401      	add	r1, r0
 800df62:	9812      	ldr	r0, [sp, #72]	; 0x48
 800df64:	ea4c 0c09 	orr.w	ip, ip, r9
 800df68:	f82b cb02 	strh.w	ip, [fp], #2
 800df6c:	4402      	add	r2, r0
 800df6e:	f10a 3aff 	add.w	sl, sl, #4294967295
 800df72:	e7b1      	b.n	800ded8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9c>
 800df74:	f04f 0900 	mov.w	r9, #0
 800df78:	eb03 0009 	add.w	r0, r3, r9
 800df7c:	2800      	cmp	r0, #0
 800df7e:	dc41      	bgt.n	800e004 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1c8>
 800df80:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 800df84:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 800df88:	9b00      	ldr	r3, [sp, #0]
 800df8a:	2b00      	cmp	r3, #0
 800df8c:	f340 8090 	ble.w	800e0b0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x274>
 800df90:	ee30 0a04 	vadd.f32	s0, s0, s8
 800df94:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 800df98:	eec7 7a00 	vdiv.f32	s15, s14, s0
 800df9c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800df9e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 800dfa2:	ee31 1a05 	vadd.f32	s2, s2, s10
 800dfa6:	ee20 7aa7 	vmul.f32	s14, s1, s15
 800dfaa:	eef0 6a62 	vmov.f32	s13, s5
 800dfae:	ee61 7a27 	vmul.f32	s15, s2, s15
 800dfb2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 800dfb6:	ee77 2a62 	vsub.f32	s5, s14, s5
 800dfba:	edcd 6a0f 	vstr	s13, [sp, #60]	; 0x3c
 800dfbe:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 800dfc2:	eef0 6a43 	vmov.f32	s13, s6
 800dfc6:	ee37 3ac3 	vsub.f32	s6, s15, s6
 800dfca:	ee12 2a90 	vmov	r2, s5
 800dfce:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 800dfd2:	fb92 f3f3 	sdiv	r3, r2, r3
 800dfd6:	ee13 2a10 	vmov	r2, s6
 800dfda:	9311      	str	r3, [sp, #68]	; 0x44
 800dfdc:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800dfde:	fb92 f3f3 	sdiv	r3, r2, r3
 800dfe2:	9312      	str	r3, [sp, #72]	; 0x48
 800dfe4:	9b00      	ldr	r3, [sp, #0]
 800dfe6:	9a03      	ldr	r2, [sp, #12]
 800dfe8:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 800dfec:	3b01      	subs	r3, #1
 800dfee:	9300      	str	r3, [sp, #0]
 800dff0:	edcd 6a10 	vstr	s13, [sp, #64]	; 0x40
 800dff4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800dff6:	eeb0 3a67 	vmov.f32	s6, s15
 800dffa:	bf08      	it	eq
 800dffc:	4613      	moveq	r3, r2
 800dffe:	eef0 2a47 	vmov.f32	s5, s14
 800e002:	e737      	b.n	800de74 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x38>
 800e004:	140e      	asrs	r6, r1, #16
 800e006:	d44c      	bmi.n	800e0a2 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x266>
 800e008:	4546      	cmp	r6, r8
 800e00a:	da4a      	bge.n	800e0a2 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x266>
 800e00c:	1410      	asrs	r0, r2, #16
 800e00e:	d448      	bmi.n	800e0a2 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x266>
 800e010:	9f01      	ldr	r7, [sp, #4]
 800e012:	42b8      	cmp	r0, r7
 800e014:	da45      	bge.n	800e0a2 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x266>
 800e016:	fb08 6000 	mla	r0, r8, r0, r6
 800e01a:	9e02      	ldr	r6, [sp, #8]
 800e01c:	f836 0010 	ldrh.w	r0, [r6, r0, lsl #1]
 800e020:	f06f 0601 	mvn.w	r6, #1
 800e024:	fb06 fb09 	mul.w	fp, r6, r9
 800e028:	ea4f 2c20 	mov.w	ip, r0, asr #8
 800e02c:	f834 600b 	ldrh.w	r6, [r4, fp]
 800e030:	1237      	asrs	r7, r6, #8
 800e032:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 800e036:	fb17 f705 	smulbb	r7, r7, r5
 800e03a:	ea4f 0ae6 	mov.w	sl, r6, asr #3
 800e03e:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 800e042:	00f6      	lsls	r6, r6, #3
 800e044:	fb0c 7c0e 	mla	ip, ip, lr, r7
 800e048:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 800e04c:	10c7      	asrs	r7, r0, #3
 800e04e:	b2f6      	uxtb	r6, r6
 800e050:	00c0      	lsls	r0, r0, #3
 800e052:	fb1a fa05 	smulbb	sl, sl, r5
 800e056:	fb16 f605 	smulbb	r6, r6, r5
 800e05a:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 800e05e:	b2c0      	uxtb	r0, r0
 800e060:	fa1f fc8c 	uxth.w	ip, ip
 800e064:	fb07 a70e 	mla	r7, r7, lr, sl
 800e068:	fb00 600e 	mla	r0, r0, lr, r6
 800e06c:	b2bf      	uxth	r7, r7
 800e06e:	b280      	uxth	r0, r0
 800e070:	f10c 0601 	add.w	r6, ip, #1
 800e074:	eb06 2c1c 	add.w	ip, r6, ip, lsr #8
 800e078:	f107 0a01 	add.w	sl, r7, #1
 800e07c:	1c46      	adds	r6, r0, #1
 800e07e:	eb06 2610 	add.w	r6, r6, r0, lsr #8
 800e082:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 800e086:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 800e08a:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 800e08e:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 800e092:	ea4c 0c06 	orr.w	ip, ip, r6
 800e096:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 800e09a:	ea4c 0c0a 	orr.w	ip, ip, sl
 800e09e:	f824 c00b 	strh.w	ip, [r4, fp]
 800e0a2:	9811      	ldr	r0, [sp, #68]	; 0x44
 800e0a4:	4401      	add	r1, r0
 800e0a6:	9812      	ldr	r0, [sp, #72]	; 0x48
 800e0a8:	f109 39ff 	add.w	r9, r9, #4294967295
 800e0ac:	4402      	add	r2, r0
 800e0ae:	e763      	b.n	800df78 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x13c>
 800e0b0:	b005      	add	sp, #20
 800e0b2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800e0b6 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 800e0b6:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e0ba:	9811      	ldr	r0, [sp, #68]	; 0x44
 800e0bc:	9201      	str	r2, [sp, #4]
 800e0be:	e9dd 2512 	ldrd	r2, r5, [sp, #72]	; 0x48
 800e0c2:	6844      	ldr	r4, [r0, #4]
 800e0c4:	6800      	ldr	r0, [r0, #0]
 800e0c6:	f9bd c050 	ldrsh.w	ip, [sp, #80]	; 0x50
 800e0ca:	f9bd e054 	ldrsh.w	lr, [sp, #84]	; 0x54
 800e0ce:	fb04 2505 	mla	r5, r4, r5, r2
 800e0d2:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 800e0d6:	9816      	ldr	r0, [sp, #88]	; 0x58
 800e0d8:	e9dd 760f 	ldrd	r7, r6, [sp, #60]	; 0x3c
 800e0dc:	6802      	ldr	r2, [r0, #0]
 800e0de:	9200      	str	r2, [sp, #0]
 800e0e0:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 800e0e4:	2900      	cmp	r1, #0
 800e0e6:	dc03      	bgt.n	800e0f0 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3a>
 800e0e8:	9a01      	ldr	r2, [sp, #4]
 800e0ea:	2a00      	cmp	r2, #0
 800e0ec:	f340 8095 	ble.w	800e21a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x164>
 800e0f0:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 800e0f2:	f502 4400 	add.w	r4, r2, #32768	; 0x8000
 800e0f6:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 800e0f8:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 800e0fc:	2b00      	cmp	r3, #0
 800e0fe:	dd0e      	ble.n	800e11e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x68>
 800e100:	ea5f 4824 	movs.w	r8, r4, asr #16
 800e104:	d406      	bmi.n	800e114 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x5e>
 800e106:	45e0      	cmp	r8, ip
 800e108:	da04      	bge.n	800e114 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x5e>
 800e10a:	ea5f 4820 	movs.w	r8, r0, asr #16
 800e10e:	d401      	bmi.n	800e114 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x5e>
 800e110:	45f0      	cmp	r8, lr
 800e112:	db05      	blt.n	800e120 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6a>
 800e114:	443c      	add	r4, r7
 800e116:	4430      	add	r0, r6
 800e118:	3b01      	subs	r3, #1
 800e11a:	3502      	adds	r5, #2
 800e11c:	e7ee      	b.n	800e0fc <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x46>
 800e11e:	d010      	beq.n	800e142 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x8c>
 800e120:	f103 38ff 	add.w	r8, r3, #4294967295
 800e124:	fb07 4908 	mla	r9, r7, r8, r4
 800e128:	ea5f 4929 	movs.w	r9, r9, asr #16
 800e12c:	d53d      	bpl.n	800e1aa <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf4>
 800e12e:	4698      	mov	r8, r3
 800e130:	eb05 0b43 	add.w	fp, r5, r3, lsl #1
 800e134:	f1b8 0f00 	cmp.w	r8, #0
 800e138:	dc55      	bgt.n	800e1e6 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x130>
 800e13a:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 800e13e:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 800e142:	2900      	cmp	r1, #0
 800e144:	dd69      	ble.n	800e21a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x164>
 800e146:	ee30 0a04 	vadd.f32	s0, s0, s8
 800e14a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 800e14e:	eec6 7a80 	vdiv.f32	s15, s13, s0
 800e152:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800e154:	3901      	subs	r1, #1
 800e156:	ee31 1a05 	vadd.f32	s2, s2, s10
 800e15a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 800e15e:	eeb0 6a62 	vmov.f32	s12, s5
 800e162:	ee61 7a27 	vmul.f32	s15, s2, s15
 800e166:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 800e16a:	ee77 2a62 	vsub.f32	s5, s14, s5
 800e16e:	ed8d 6a0d 	vstr	s12, [sp, #52]	; 0x34
 800e172:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 800e176:	eeb0 6a43 	vmov.f32	s12, s6
 800e17a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 800e17e:	ee12 2a90 	vmov	r2, s5
 800e182:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 800e186:	fb92 f7f3 	sdiv	r7, r2, r3
 800e18a:	ee13 2a10 	vmov	r2, s6
 800e18e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 800e192:	fb92 f6f3 	sdiv	r6, r2, r3
 800e196:	9a01      	ldr	r2, [sp, #4]
 800e198:	ed8d 6a0e 	vstr	s12, [sp, #56]	; 0x38
 800e19c:	bf08      	it	eq
 800e19e:	4613      	moveq	r3, r2
 800e1a0:	eeb0 3a67 	vmov.f32	s6, s15
 800e1a4:	eef0 2a47 	vmov.f32	s5, s14
 800e1a8:	e79c      	b.n	800e0e4 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2e>
 800e1aa:	45e1      	cmp	r9, ip
 800e1ac:	dabf      	bge.n	800e12e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x78>
 800e1ae:	fb06 0808 	mla	r8, r6, r8, r0
 800e1b2:	ea5f 4828 	movs.w	r8, r8, asr #16
 800e1b6:	d4ba      	bmi.n	800e12e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x78>
 800e1b8:	45f0      	cmp	r8, lr
 800e1ba:	dab8      	bge.n	800e12e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x78>
 800e1bc:	4698      	mov	r8, r3
 800e1be:	46aa      	mov	sl, r5
 800e1c0:	f1b8 0f00 	cmp.w	r8, #0
 800e1c4:	ddb9      	ble.n	800e13a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x84>
 800e1c6:	ea4f 4920 	mov.w	r9, r0, asr #16
 800e1ca:	ea4f 4b24 	mov.w	fp, r4, asr #16
 800e1ce:	fb0c b909 	mla	r9, ip, r9, fp
 800e1d2:	9a00      	ldr	r2, [sp, #0]
 800e1d4:	f832 9019 	ldrh.w	r9, [r2, r9, lsl #1]
 800e1d8:	f82a 9b02 	strh.w	r9, [sl], #2
 800e1dc:	443c      	add	r4, r7
 800e1de:	4430      	add	r0, r6
 800e1e0:	f108 38ff 	add.w	r8, r8, #4294967295
 800e1e4:	e7ec      	b.n	800e1c0 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x10a>
 800e1e6:	ea5f 4a24 	movs.w	sl, r4, asr #16
 800e1ea:	d411      	bmi.n	800e210 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x15a>
 800e1ec:	45e2      	cmp	sl, ip
 800e1ee:	da0f      	bge.n	800e210 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x15a>
 800e1f0:	ea5f 4920 	movs.w	r9, r0, asr #16
 800e1f4:	d40c      	bmi.n	800e210 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x15a>
 800e1f6:	45f1      	cmp	r9, lr
 800e1f8:	da0a      	bge.n	800e210 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x15a>
 800e1fa:	fb0c a909 	mla	r9, ip, r9, sl
 800e1fe:	9a00      	ldr	r2, [sp, #0]
 800e200:	f832 a019 	ldrh.w	sl, [r2, r9, lsl #1]
 800e204:	f06f 0201 	mvn.w	r2, #1
 800e208:	fb02 f908 	mul.w	r9, r2, r8
 800e20c:	f82b a009 	strh.w	sl, [fp, r9]
 800e210:	443c      	add	r4, r7
 800e212:	4430      	add	r0, r6
 800e214:	f108 38ff 	add.w	r8, r8, #4294967295
 800e218:	e78c      	b.n	800e134 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7e>
 800e21a:	b003      	add	sp, #12
 800e21c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800e220 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 800e220:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e224:	b087      	sub	sp, #28
 800e226:	468b      	mov	fp, r1
 800e228:	9204      	str	r2, [sp, #16]
 800e22a:	f9bd 2064 	ldrsh.w	r2, [sp, #100]	; 0x64
 800e22e:	9815      	ldr	r0, [sp, #84]	; 0x54
 800e230:	9201      	str	r2, [sp, #4]
 800e232:	f89d 206c 	ldrb.w	r2, [sp, #108]	; 0x6c
 800e236:	9205      	str	r2, [sp, #20]
 800e238:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 800e23c:	6841      	ldr	r1, [r0, #4]
 800e23e:	f9bd 8060 	ldrsh.w	r8, [sp, #96]	; 0x60
 800e242:	fb01 2404 	mla	r4, r1, r4, r2
 800e246:	6802      	ldr	r2, [r0, #0]
 800e248:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 800e24c:	9a1a      	ldr	r2, [sp, #104]	; 0x68
 800e24e:	6812      	ldr	r2, [r2, #0]
 800e250:	9203      	str	r2, [sp, #12]
 800e252:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 800e256:	f1bb 0f00 	cmp.w	fp, #0
 800e25a:	dc03      	bgt.n	800e264 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x44>
 800e25c:	9a04      	ldr	r2, [sp, #16]
 800e25e:	2a00      	cmp	r2, #0
 800e260:	f340 812c 	ble.w	800e4bc <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x29c>
 800e264:	9a11      	ldr	r2, [sp, #68]	; 0x44
 800e266:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 800e26a:	9a12      	ldr	r2, [sp, #72]	; 0x48
 800e26c:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 800e270:	2b00      	cmp	r3, #0
 800e272:	dd0f      	ble.n	800e294 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x74>
 800e274:	1402      	asrs	r2, r0, #16
 800e276:	d406      	bmi.n	800e286 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x66>
 800e278:	4542      	cmp	r2, r8
 800e27a:	da04      	bge.n	800e286 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x66>
 800e27c:	140a      	asrs	r2, r1, #16
 800e27e:	d402      	bmi.n	800e286 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x66>
 800e280:	9d01      	ldr	r5, [sp, #4]
 800e282:	42aa      	cmp	r2, r5
 800e284:	db07      	blt.n	800e296 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x76>
 800e286:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 800e288:	4410      	add	r0, r2
 800e28a:	9a14      	ldr	r2, [sp, #80]	; 0x50
 800e28c:	3b01      	subs	r3, #1
 800e28e:	4411      	add	r1, r2
 800e290:	3402      	adds	r4, #2
 800e292:	e7ed      	b.n	800e270 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x50>
 800e294:	d01a      	beq.n	800e2cc <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xac>
 800e296:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 800e298:	1e5a      	subs	r2, r3, #1
 800e29a:	fb05 0502 	mla	r5, r5, r2, r0
 800e29e:	142d      	asrs	r5, r5, #16
 800e2a0:	d40a      	bmi.n	800e2b8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x98>
 800e2a2:	4545      	cmp	r5, r8
 800e2a4:	da08      	bge.n	800e2b8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x98>
 800e2a6:	9d14      	ldr	r5, [sp, #80]	; 0x50
 800e2a8:	fb05 1202 	mla	r2, r5, r2, r1
 800e2ac:	1412      	asrs	r2, r2, #16
 800e2ae:	d403      	bmi.n	800e2b8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x98>
 800e2b0:	9d01      	ldr	r5, [sp, #4]
 800e2b2:	42aa      	cmp	r2, r5
 800e2b4:	f2c0 80a6 	blt.w	800e404 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1e4>
 800e2b8:	f04f 0c00 	mov.w	ip, #0
 800e2bc:	eb03 020c 	add.w	r2, r3, ip
 800e2c0:	2a00      	cmp	r2, #0
 800e2c2:	dc3e      	bgt.n	800e342 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x122>
 800e2c4:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 800e2c8:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 800e2cc:	f1bb 0f00 	cmp.w	fp, #0
 800e2d0:	f340 80f4 	ble.w	800e4bc <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x29c>
 800e2d4:	ee30 0a04 	vadd.f32	s0, s0, s8
 800e2d8:	ee70 0aa4 	vadd.f32	s1, s1, s9
 800e2dc:	eec6 7a80 	vdiv.f32	s15, s13, s0
 800e2e0:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800e2e2:	f1bb 0b01 	subs.w	fp, fp, #1
 800e2e6:	ee31 1a05 	vadd.f32	s2, s2, s10
 800e2ea:	ee20 7aa7 	vmul.f32	s14, s1, s15
 800e2ee:	eeb0 6a62 	vmov.f32	s12, s5
 800e2f2:	ee61 7a27 	vmul.f32	s15, s2, s15
 800e2f6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 800e2fa:	ee77 2a62 	vsub.f32	s5, s14, s5
 800e2fe:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 800e302:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 800e306:	eeb0 6a43 	vmov.f32	s12, s6
 800e30a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 800e30e:	ee12 2a90 	vmov	r2, s5
 800e312:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 800e316:	fb92 f3f3 	sdiv	r3, r2, r3
 800e31a:	ee13 2a10 	vmov	r2, s6
 800e31e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 800e322:	9313      	str	r3, [sp, #76]	; 0x4c
 800e324:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800e326:	fb92 f3f3 	sdiv	r3, r2, r3
 800e32a:	9a04      	ldr	r2, [sp, #16]
 800e32c:	9314      	str	r3, [sp, #80]	; 0x50
 800e32e:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 800e332:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800e334:	eeb0 3a67 	vmov.f32	s6, s15
 800e338:	bf08      	it	eq
 800e33a:	4613      	moveq	r3, r2
 800e33c:	eef0 2a47 	vmov.f32	s5, s14
 800e340:	e789      	b.n	800e256 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x36>
 800e342:	1405      	asrs	r5, r0, #16
 800e344:	d457      	bmi.n	800e3f6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 800e346:	4545      	cmp	r5, r8
 800e348:	da55      	bge.n	800e3f6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 800e34a:	140a      	asrs	r2, r1, #16
 800e34c:	d453      	bmi.n	800e3f6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 800e34e:	9e01      	ldr	r6, [sp, #4]
 800e350:	42b2      	cmp	r2, r6
 800e352:	da50      	bge.n	800e3f6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 800e354:	fb08 5202 	mla	r2, r8, r2, r5
 800e358:	9d03      	ldr	r5, [sp, #12]
 800e35a:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 800e35e:	0e2e      	lsrs	r6, r5, #24
 800e360:	d049      	beq.n	800e3f6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 800e362:	f06f 0201 	mvn.w	r2, #1
 800e366:	fb02 f20c 	mul.w	r2, r2, ip
 800e36a:	9202      	str	r2, [sp, #8]
 800e36c:	f834 e002 	ldrh.w	lr, [r4, r2]
 800e370:	9a05      	ldr	r2, [sp, #20]
 800e372:	4356      	muls	r6, r2
 800e374:	1c72      	adds	r2, r6, #1
 800e376:	eb02 2226 	add.w	r2, r2, r6, asr #8
 800e37a:	1212      	asrs	r2, r2, #8
 800e37c:	fa1f f982 	uxth.w	r9, r2
 800e380:	ea4f 272e 	mov.w	r7, lr, asr #8
 800e384:	f3c5 4607 	ubfx	r6, r5, #16, #8
 800e388:	43d2      	mvns	r2, r2
 800e38a:	b2d2      	uxtb	r2, r2
 800e38c:	fb16 f609 	smulbb	r6, r6, r9
 800e390:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 800e394:	fb07 6702 	mla	r7, r7, r2, r6
 800e398:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 800e39c:	ea4f 06ee 	mov.w	r6, lr, asr #3
 800e3a0:	b2ed      	uxtb	r5, r5
 800e3a2:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 800e3a6:	fa5f fe8e 	uxtb.w	lr, lr
 800e3aa:	fb15 f509 	smulbb	r5, r5, r9
 800e3ae:	fb0e 5502 	mla	r5, lr, r2, r5
 800e3b2:	b2bf      	uxth	r7, r7
 800e3b4:	fb1a fa09 	smulbb	sl, sl, r9
 800e3b8:	b2ad      	uxth	r5, r5
 800e3ba:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 800e3be:	fb06 a602 	mla	r6, r6, r2, sl
 800e3c2:	1c7a      	adds	r2, r7, #1
 800e3c4:	f105 0a01 	add.w	sl, r5, #1
 800e3c8:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 800e3cc:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 800e3d0:	b2b6      	uxth	r6, r6
 800e3d2:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 800e3d6:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 800e3da:	ea47 070a 	orr.w	r7, r7, sl
 800e3de:	f106 0a01 	add.w	sl, r6, #1
 800e3e2:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 800e3e6:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 800e3ea:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 800e3ee:	9a02      	ldr	r2, [sp, #8]
 800e3f0:	ea47 070a 	orr.w	r7, r7, sl
 800e3f4:	52a7      	strh	r7, [r4, r2]
 800e3f6:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 800e3f8:	4410      	add	r0, r2
 800e3fa:	9a14      	ldr	r2, [sp, #80]	; 0x50
 800e3fc:	f10c 3cff 	add.w	ip, ip, #4294967295
 800e400:	4411      	add	r1, r2
 800e402:	e75b      	b.n	800e2bc <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9c>
 800e404:	f04f 0e00 	mov.w	lr, #0
 800e408:	eba3 020e 	sub.w	r2, r3, lr
 800e40c:	2a00      	cmp	r2, #0
 800e40e:	f77f af59 	ble.w	800e2c4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xa4>
 800e412:	1405      	asrs	r5, r0, #16
 800e414:	140a      	asrs	r2, r1, #16
 800e416:	fb08 5202 	mla	r2, r8, r2, r5
 800e41a:	9d03      	ldr	r5, [sp, #12]
 800e41c:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 800e420:	0e2e      	lsrs	r6, r5, #24
 800e422:	d044      	beq.n	800e4ae <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x28e>
 800e424:	9a05      	ldr	r2, [sp, #20]
 800e426:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 800e42a:	4356      	muls	r6, r2
 800e42c:	1c72      	adds	r2, r6, #1
 800e42e:	eb02 2226 	add.w	r2, r2, r6, asr #8
 800e432:	1212      	asrs	r2, r2, #8
 800e434:	fa1f f982 	uxth.w	r9, r2
 800e438:	ea4f 272c 	mov.w	r7, ip, asr #8
 800e43c:	f3c5 4607 	ubfx	r6, r5, #16, #8
 800e440:	43d2      	mvns	r2, r2
 800e442:	b2d2      	uxtb	r2, r2
 800e444:	fb16 f609 	smulbb	r6, r6, r9
 800e448:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 800e44c:	fb07 6702 	mla	r7, r7, r2, r6
 800e450:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 800e454:	ea4f 06ec 	mov.w	r6, ip, asr #3
 800e458:	b2ed      	uxtb	r5, r5
 800e45a:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 800e45e:	fa5f fc8c 	uxtb.w	ip, ip
 800e462:	fb15 f509 	smulbb	r5, r5, r9
 800e466:	fb0c 5502 	mla	r5, ip, r2, r5
 800e46a:	b2bf      	uxth	r7, r7
 800e46c:	fb1a fa09 	smulbb	sl, sl, r9
 800e470:	b2ad      	uxth	r5, r5
 800e472:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 800e476:	fb06 a602 	mla	r6, r6, r2, sl
 800e47a:	1c7a      	adds	r2, r7, #1
 800e47c:	f105 0a01 	add.w	sl, r5, #1
 800e480:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 800e484:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 800e488:	b2b6      	uxth	r6, r6
 800e48a:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 800e48e:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 800e492:	ea47 070a 	orr.w	r7, r7, sl
 800e496:	f106 0a01 	add.w	sl, r6, #1
 800e49a:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 800e49e:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 800e4a2:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 800e4a6:	ea47 070a 	orr.w	r7, r7, sl
 800e4aa:	f824 701e 	strh.w	r7, [r4, lr, lsl #1]
 800e4ae:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 800e4b0:	4410      	add	r0, r2
 800e4b2:	9a14      	ldr	r2, [sp, #80]	; 0x50
 800e4b4:	f10e 0e01 	add.w	lr, lr, #1
 800e4b8:	4411      	add	r1, r2
 800e4ba:	e7a5      	b.n	800e408 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1e8>
 800e4bc:	b007      	add	sp, #28
 800e4be:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

0800e4c4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 800e4c4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e4c8:	b087      	sub	sp, #28
 800e4ca:	468b      	mov	fp, r1
 800e4cc:	9c15      	ldr	r4, [sp, #84]	; 0x54
 800e4ce:	9205      	str	r2, [sp, #20]
 800e4d0:	f9bd 2064 	ldrsh.w	r2, [sp, #100]	; 0x64
 800e4d4:	9201      	str	r2, [sp, #4]
 800e4d6:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
 800e4da:	6861      	ldr	r1, [r4, #4]
 800e4dc:	f9bd 9060 	ldrsh.w	r9, [sp, #96]	; 0x60
 800e4e0:	fb01 2000 	mla	r0, r1, r0, r2
 800e4e4:	6822      	ldr	r2, [r4, #0]
 800e4e6:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 800e4ea:	9a1a      	ldr	r2, [sp, #104]	; 0x68
 800e4ec:	6812      	ldr	r2, [r2, #0]
 800e4ee:	9203      	str	r2, [sp, #12]
 800e4f0:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 800e4f4:	f1bb 0f00 	cmp.w	fp, #0
 800e4f8:	dc03      	bgt.n	800e502 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3e>
 800e4fa:	9a05      	ldr	r2, [sp, #20]
 800e4fc:	2a00      	cmp	r2, #0
 800e4fe:	f340 814b 	ble.w	800e798 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2d4>
 800e502:	9a11      	ldr	r2, [sp, #68]	; 0x44
 800e504:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 800e508:	9a12      	ldr	r2, [sp, #72]	; 0x48
 800e50a:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 800e50e:	2b00      	cmp	r3, #0
 800e510:	dd0f      	ble.n	800e532 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6e>
 800e512:	140c      	asrs	r4, r1, #16
 800e514:	d406      	bmi.n	800e524 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x60>
 800e516:	454c      	cmp	r4, r9
 800e518:	da04      	bge.n	800e524 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x60>
 800e51a:	1414      	asrs	r4, r2, #16
 800e51c:	d402      	bmi.n	800e524 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x60>
 800e51e:	9d01      	ldr	r5, [sp, #4]
 800e520:	42ac      	cmp	r4, r5
 800e522:	db07      	blt.n	800e534 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x70>
 800e524:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 800e526:	4421      	add	r1, r4
 800e528:	9c14      	ldr	r4, [sp, #80]	; 0x50
 800e52a:	3b01      	subs	r3, #1
 800e52c:	4422      	add	r2, r4
 800e52e:	3002      	adds	r0, #2
 800e530:	e7ed      	b.n	800e50e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4a>
 800e532:	d018      	beq.n	800e566 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xa2>
 800e534:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 800e536:	1e5c      	subs	r4, r3, #1
 800e538:	fb05 1504 	mla	r5, r5, r4, r1
 800e53c:	142d      	asrs	r5, r5, #16
 800e53e:	d40a      	bmi.n	800e556 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x92>
 800e540:	454d      	cmp	r5, r9
 800e542:	da08      	bge.n	800e556 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x92>
 800e544:	9d14      	ldr	r5, [sp, #80]	; 0x50
 800e546:	fb05 2404 	mla	r4, r5, r4, r2
 800e54a:	1424      	asrs	r4, r4, #16
 800e54c:	d403      	bmi.n	800e556 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x92>
 800e54e:	9d01      	ldr	r5, [sp, #4]
 800e550:	42ac      	cmp	r4, r5
 800e552:	f2c0 80bb 	blt.w	800e6cc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x208>
 800e556:	2700      	movs	r7, #0
 800e558:	19dc      	adds	r4, r3, r7
 800e55a:	2c00      	cmp	r4, #0
 800e55c:	dc3e      	bgt.n	800e5dc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x118>
 800e55e:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 800e562:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 800e566:	f1bb 0f00 	cmp.w	fp, #0
 800e56a:	f340 8115 	ble.w	800e798 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2d4>
 800e56e:	ee30 0a04 	vadd.f32	s0, s0, s8
 800e572:	ee70 0aa4 	vadd.f32	s1, s1, s9
 800e576:	eec6 7a80 	vdiv.f32	s15, s13, s0
 800e57a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800e57c:	f1bb 0b01 	subs.w	fp, fp, #1
 800e580:	ee31 1a05 	vadd.f32	s2, s2, s10
 800e584:	ee20 7aa7 	vmul.f32	s14, s1, s15
 800e588:	eeb0 6a62 	vmov.f32	s12, s5
 800e58c:	ee61 7a27 	vmul.f32	s15, s2, s15
 800e590:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 800e594:	ee77 2a62 	vsub.f32	s5, s14, s5
 800e598:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 800e59c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 800e5a0:	eeb0 6a43 	vmov.f32	s12, s6
 800e5a4:	ee37 3ac3 	vsub.f32	s6, s15, s6
 800e5a8:	ee12 2a90 	vmov	r2, s5
 800e5ac:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 800e5b0:	fb92 f3f3 	sdiv	r3, r2, r3
 800e5b4:	ee13 2a10 	vmov	r2, s6
 800e5b8:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 800e5bc:	9313      	str	r3, [sp, #76]	; 0x4c
 800e5be:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800e5c0:	fb92 f3f3 	sdiv	r3, r2, r3
 800e5c4:	9a05      	ldr	r2, [sp, #20]
 800e5c6:	9314      	str	r3, [sp, #80]	; 0x50
 800e5c8:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 800e5cc:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800e5ce:	eeb0 3a67 	vmov.f32	s6, s15
 800e5d2:	bf08      	it	eq
 800e5d4:	4613      	moveq	r3, r2
 800e5d6:	eef0 2a47 	vmov.f32	s5, s14
 800e5da:	e78b      	b.n	800e4f4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x30>
 800e5dc:	140d      	asrs	r5, r1, #16
 800e5de:	d45c      	bmi.n	800e69a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 800e5e0:	454d      	cmp	r5, r9
 800e5e2:	da5a      	bge.n	800e69a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 800e5e4:	1414      	asrs	r4, r2, #16
 800e5e6:	d458      	bmi.n	800e69a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 800e5e8:	9e01      	ldr	r6, [sp, #4]
 800e5ea:	42b4      	cmp	r4, r6
 800e5ec:	da55      	bge.n	800e69a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 800e5ee:	fb09 5404 	mla	r4, r9, r4, r5
 800e5f2:	9d03      	ldr	r5, [sp, #12]
 800e5f4:	f855 4024 	ldr.w	r4, [r5, r4, lsl #2]
 800e5f8:	ea5f 6e14 	movs.w	lr, r4, lsr #24
 800e5fc:	d04d      	beq.n	800e69a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 800e5fe:	0a26      	lsrs	r6, r4, #8
 800e600:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 800e604:	fa5f f58e 	uxtb.w	r5, lr
 800e608:	ea4f 4c14 	mov.w	ip, r4, lsr #16
 800e60c:	9604      	str	r6, [sp, #16]
 800e60e:	d04a      	beq.n	800e6a6 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1e2>
 800e610:	f06f 0601 	mvn.w	r6, #1
 800e614:	437e      	muls	r6, r7
 800e616:	fa1f fa85 	uxth.w	sl, r5
 800e61a:	f830 8006 	ldrh.w	r8, [r0, r6]
 800e61e:	9602      	str	r6, [sp, #8]
 800e620:	ea4f 2e28 	mov.w	lr, r8, asr #8
 800e624:	43ed      	mvns	r5, r5
 800e626:	fa5f fc8c 	uxtb.w	ip, ip
 800e62a:	b2ed      	uxtb	r5, r5
 800e62c:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 800e630:	fb1c fc0a 	smulbb	ip, ip, sl
 800e634:	fb0e cc05 	mla	ip, lr, r5, ip
 800e638:	b2e4      	uxtb	r4, r4
 800e63a:	ea4f 0ee8 	mov.w	lr, r8, asr #3
 800e63e:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 800e642:	f89d 6010 	ldrb.w	r6, [sp, #16]
 800e646:	fa5f f888 	uxtb.w	r8, r8
 800e64a:	fb14 f40a 	smulbb	r4, r4, sl
 800e64e:	fb08 4405 	mla	r4, r8, r5, r4
 800e652:	b2a4      	uxth	r4, r4
 800e654:	fa1f fc8c 	uxth.w	ip, ip
 800e658:	fb16 f60a 	smulbb	r6, r6, sl
 800e65c:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 800e660:	fb0e 6e05 	mla	lr, lr, r5, r6
 800e664:	1c66      	adds	r6, r4, #1
 800e666:	f10c 0501 	add.w	r5, ip, #1
 800e66a:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 800e66e:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 800e672:	fa1f fe8e 	uxth.w	lr, lr
 800e676:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 800e67a:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 800e67e:	ea4c 0c06 	orr.w	ip, ip, r6
 800e682:	f10e 0601 	add.w	r6, lr, #1
 800e686:	eb06 261e 	add.w	r6, r6, lr, lsr #8
 800e68a:	0976      	lsrs	r6, r6, #5
 800e68c:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 800e690:	9c02      	ldr	r4, [sp, #8]
 800e692:	ea4c 0c06 	orr.w	ip, ip, r6
 800e696:	f820 c004 	strh.w	ip, [r0, r4]
 800e69a:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 800e69c:	4421      	add	r1, r4
 800e69e:	9c14      	ldr	r4, [sp, #80]	; 0x50
 800e6a0:	3f01      	subs	r7, #1
 800e6a2:	4422      	add	r2, r4
 800e6a4:	e758      	b.n	800e558 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x94>
 800e6a6:	4e3e      	ldr	r6, [pc, #248]	; (800e7a0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2dc>)
 800e6a8:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 800e6ac:	ea06 2c0c 	and.w	ip, r6, ip, lsl #8
 800e6b0:	ea4c 0c04 	orr.w	ip, ip, r4
 800e6b4:	9c04      	ldr	r4, [sp, #16]
 800e6b6:	f06f 0501 	mvn.w	r5, #1
 800e6ba:	00e6      	lsls	r6, r4, #3
 800e6bc:	437d      	muls	r5, r7
 800e6be:	f406 64fc 	and.w	r4, r6, #2016	; 0x7e0
 800e6c2:	ea4c 0c04 	orr.w	ip, ip, r4
 800e6c6:	f820 c005 	strh.w	ip, [r0, r5]
 800e6ca:	e7e6      	b.n	800e69a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 800e6cc:	f04f 0800 	mov.w	r8, #0
 800e6d0:	eba3 0408 	sub.w	r4, r3, r8
 800e6d4:	2c00      	cmp	r4, #0
 800e6d6:	f77f af42 	ble.w	800e55e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9a>
 800e6da:	140d      	asrs	r5, r1, #16
 800e6dc:	1414      	asrs	r4, r2, #16
 800e6de:	fb09 5404 	mla	r4, r9, r4, r5
 800e6e2:	9d03      	ldr	r5, [sp, #12]
 800e6e4:	f855 4024 	ldr.w	r4, [r5, r4, lsl #2]
 800e6e8:	ea5f 6c14 	movs.w	ip, r4, lsr #24
 800e6ec:	d042      	beq.n	800e774 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2b0>
 800e6ee:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 800e6f2:	fa5f f58c 	uxtb.w	r5, ip
 800e6f6:	ea4f 4714 	mov.w	r7, r4, lsr #16
 800e6fa:	ea4f 2614 	mov.w	r6, r4, lsr #8
 800e6fe:	d040      	beq.n	800e782 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2be>
 800e700:	f830 e018 	ldrh.w	lr, [r0, r8, lsl #1]
 800e704:	fa1f fa85 	uxth.w	sl, r5
 800e708:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 800e70c:	43ed      	mvns	r5, r5
 800e70e:	b2ff      	uxtb	r7, r7
 800e710:	b2ed      	uxtb	r5, r5
 800e712:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 800e716:	fb17 f70a 	smulbb	r7, r7, sl
 800e71a:	fb0c 7705 	mla	r7, ip, r5, r7
 800e71e:	b2e4      	uxtb	r4, r4
 800e720:	ea4f 0cee 	mov.w	ip, lr, asr #3
 800e724:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 800e728:	fa5f fe8e 	uxtb.w	lr, lr
 800e72c:	fb14 f40a 	smulbb	r4, r4, sl
 800e730:	fb0e 4405 	mla	r4, lr, r5, r4
 800e734:	b2f6      	uxtb	r6, r6
 800e736:	b2bf      	uxth	r7, r7
 800e738:	fb16 f60a 	smulbb	r6, r6, sl
 800e73c:	b2a4      	uxth	r4, r4
 800e73e:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 800e742:	fb0c 6c05 	mla	ip, ip, r5, r6
 800e746:	1c7d      	adds	r5, r7, #1
 800e748:	1c66      	adds	r6, r4, #1
 800e74a:	eb05 2717 	add.w	r7, r5, r7, lsr #8
 800e74e:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 800e752:	fa1f fc8c 	uxth.w	ip, ip
 800e756:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 800e75a:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 800e75e:	4337      	orrs	r7, r6
 800e760:	f10c 0601 	add.w	r6, ip, #1
 800e764:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 800e768:	0976      	lsrs	r6, r6, #5
 800e76a:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 800e76e:	4337      	orrs	r7, r6
 800e770:	f820 7018 	strh.w	r7, [r0, r8, lsl #1]
 800e774:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 800e776:	4421      	add	r1, r4
 800e778:	9c14      	ldr	r4, [sp, #80]	; 0x50
 800e77a:	f108 0801 	add.w	r8, r8, #1
 800e77e:	4422      	add	r2, r4
 800e780:	e7a6      	b.n	800e6d0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x20c>
 800e782:	4d07      	ldr	r5, [pc, #28]	; (800e7a0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2dc>)
 800e784:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 800e788:	ea05 2707 	and.w	r7, r5, r7, lsl #8
 800e78c:	00f6      	lsls	r6, r6, #3
 800e78e:	4327      	orrs	r7, r4
 800e790:	f406 64fc 	and.w	r4, r6, #2016	; 0x7e0
 800e794:	4327      	orrs	r7, r4
 800e796:	e7eb      	b.n	800e770 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2ac>
 800e798:	b007      	add	sp, #28
 800e79a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800e79e:	bf00      	nop
 800e7a0:	fffff800 	.word	0xfffff800

0800e7a4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 800e7a4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e7a8:	b087      	sub	sp, #28
 800e7aa:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 800e7ae:	9204      	str	r2, [sp, #16]
 800e7b0:	f9bd 2060 	ldrsh.w	r2, [sp, #96]	; 0x60
 800e7b4:	9200      	str	r2, [sp, #0]
 800e7b6:	f9bd 2064 	ldrsh.w	r2, [sp, #100]	; 0x64
 800e7ba:	9c15      	ldr	r4, [sp, #84]	; 0x54
 800e7bc:	9201      	str	r2, [sp, #4]
 800e7be:	f89d 206c 	ldrb.w	r2, [sp, #108]	; 0x6c
 800e7c2:	9205      	str	r2, [sp, #20]
 800e7c4:	e9dd 2516 	ldrd	r2, r5, [sp, #88]	; 0x58
 800e7c8:	6860      	ldr	r0, [r4, #4]
 800e7ca:	fb00 2505 	mla	r5, r0, r5, r2
 800e7ce:	6822      	ldr	r2, [r4, #0]
 800e7d0:	eb02 0545 	add.w	r5, r2, r5, lsl #1
 800e7d4:	9a00      	ldr	r2, [sp, #0]
 800e7d6:	3201      	adds	r2, #1
 800e7d8:	f022 0201 	bic.w	r2, r2, #1
 800e7dc:	9202      	str	r2, [sp, #8]
 800e7de:	9a1a      	ldr	r2, [sp, #104]	; 0x68
 800e7e0:	6812      	ldr	r2, [r2, #0]
 800e7e2:	9203      	str	r2, [sp, #12]
 800e7e4:	2900      	cmp	r1, #0
 800e7e6:	dc03      	bgt.n	800e7f0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4c>
 800e7e8:	9a04      	ldr	r2, [sp, #16]
 800e7ea:	2a00      	cmp	r2, #0
 800e7ec:	f340 814c 	ble.w	800ea88 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2e4>
 800e7f0:	9a11      	ldr	r2, [sp, #68]	; 0x44
 800e7f2:	f502 4400 	add.w	r4, r2, #32768	; 0x8000
 800e7f6:	9a12      	ldr	r2, [sp, #72]	; 0x48
 800e7f8:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 800e7fc:	2b00      	cmp	r3, #0
 800e7fe:	dd10      	ble.n	800e822 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7e>
 800e800:	1422      	asrs	r2, r4, #16
 800e802:	d407      	bmi.n	800e814 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x70>
 800e804:	9e00      	ldr	r6, [sp, #0]
 800e806:	4296      	cmp	r6, r2
 800e808:	dd04      	ble.n	800e814 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x70>
 800e80a:	1402      	asrs	r2, r0, #16
 800e80c:	d402      	bmi.n	800e814 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x70>
 800e80e:	9e01      	ldr	r6, [sp, #4]
 800e810:	42b2      	cmp	r2, r6
 800e812:	db07      	blt.n	800e824 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x80>
 800e814:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 800e816:	4414      	add	r4, r2
 800e818:	9a14      	ldr	r2, [sp, #80]	; 0x50
 800e81a:	3b01      	subs	r3, #1
 800e81c:	4410      	add	r0, r2
 800e81e:	3502      	adds	r5, #2
 800e820:	e7ec      	b.n	800e7fc <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x58>
 800e822:	d00f      	beq.n	800e844 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xa0>
 800e824:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 800e826:	1e5a      	subs	r2, r3, #1
 800e828:	fb06 4602 	mla	r6, r6, r2, r4
 800e82c:	1436      	asrs	r6, r6, #16
 800e82e:	d542      	bpl.n	800e8b6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x112>
 800e830:	469a      	mov	sl, r3
 800e832:	46a9      	mov	r9, r5
 800e834:	f1ba 0f00 	cmp.w	sl, #0
 800e838:	f300 80b5 	bgt.w	800e9a6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x202>
 800e83c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 800e840:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 800e844:	2900      	cmp	r1, #0
 800e846:	f340 811f 	ble.w	800ea88 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2e4>
 800e84a:	ee30 0a04 	vadd.f32	s0, s0, s8
 800e84e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 800e852:	eec6 7a80 	vdiv.f32	s15, s13, s0
 800e856:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800e858:	3901      	subs	r1, #1
 800e85a:	ee31 1a05 	vadd.f32	s2, s2, s10
 800e85e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 800e862:	eeb0 6a62 	vmov.f32	s12, s5
 800e866:	ee61 7a27 	vmul.f32	s15, s2, s15
 800e86a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 800e86e:	ee77 2a62 	vsub.f32	s5, s14, s5
 800e872:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 800e876:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 800e87a:	eeb0 6a43 	vmov.f32	s12, s6
 800e87e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 800e882:	ee12 2a90 	vmov	r2, s5
 800e886:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 800e88a:	fb92 f3f3 	sdiv	r3, r2, r3
 800e88e:	ee13 2a10 	vmov	r2, s6
 800e892:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 800e896:	9313      	str	r3, [sp, #76]	; 0x4c
 800e898:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800e89a:	fb92 f3f3 	sdiv	r3, r2, r3
 800e89e:	9a04      	ldr	r2, [sp, #16]
 800e8a0:	9314      	str	r3, [sp, #80]	; 0x50
 800e8a2:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 800e8a6:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800e8a8:	eeb0 3a67 	vmov.f32	s6, s15
 800e8ac:	bf08      	it	eq
 800e8ae:	4613      	moveq	r3, r2
 800e8b0:	eef0 2a47 	vmov.f32	s5, s14
 800e8b4:	e796      	b.n	800e7e4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x40>
 800e8b6:	9f00      	ldr	r7, [sp, #0]
 800e8b8:	42b7      	cmp	r7, r6
 800e8ba:	ddb9      	ble.n	800e830 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x8c>
 800e8bc:	9e14      	ldr	r6, [sp, #80]	; 0x50
 800e8be:	fb06 0202 	mla	r2, r6, r2, r0
 800e8c2:	1412      	asrs	r2, r2, #16
 800e8c4:	d4b4      	bmi.n	800e830 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x8c>
 800e8c6:	9e01      	ldr	r6, [sp, #4]
 800e8c8:	42b2      	cmp	r2, r6
 800e8ca:	dab1      	bge.n	800e830 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x8c>
 800e8cc:	f04f 0800 	mov.w	r8, #0
 800e8d0:	eba3 0208 	sub.w	r2, r3, r8
 800e8d4:	2a00      	cmp	r2, #0
 800e8d6:	ddb1      	ble.n	800e83c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x98>
 800e8d8:	9f02      	ldr	r7, [sp, #8]
 800e8da:	1422      	asrs	r2, r4, #16
 800e8dc:	1406      	asrs	r6, r0, #16
 800e8de:	fb07 2606 	mla	r6, r7, r6, r2
 800e8e2:	0872      	lsrs	r2, r6, #1
 800e8e4:	9f03      	ldr	r7, [sp, #12]
 800e8e6:	5cba      	ldrb	r2, [r7, r2]
 800e8e8:	07f6      	lsls	r6, r6, #31
 800e8ea:	bf54      	ite	pl
 800e8ec:	f002 020f 	andpl.w	r2, r2, #15
 800e8f0:	1112      	asrmi	r2, r2, #4
 800e8f2:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 800e8f6:	b2d2      	uxtb	r2, r2
 800e8f8:	2a00      	cmp	r2, #0
 800e8fa:	d04d      	beq.n	800e998 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1f4>
 800e8fc:	9f05      	ldr	r7, [sp, #20]
 800e8fe:	4e64      	ldr	r6, [pc, #400]	; (800ea90 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2ec>)
 800e900:	f835 e018 	ldrh.w	lr, [r5, r8, lsl #1]
 800e904:	6836      	ldr	r6, [r6, #0]
 800e906:	437a      	muls	r2, r7
 800e908:	1c57      	adds	r7, r2, #1
 800e90a:	eb07 2222 	add.w	r2, r7, r2, asr #8
 800e90e:	1212      	asrs	r2, r2, #8
 800e910:	ea4f 2c16 	mov.w	ip, r6, lsr #8
 800e914:	fa1f fa82 	uxth.w	sl, r2
 800e918:	ea4f 272e 	mov.w	r7, lr, asr #8
 800e91c:	43d2      	mvns	r2, r2
 800e91e:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 800e922:	b2d2      	uxtb	r2, r2
 800e924:	fb1c fc0a 	smulbb	ip, ip, sl
 800e928:	ea4f 09d6 	mov.w	r9, r6, lsr #3
 800e92c:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 800e930:	fb07 c702 	mla	r7, r7, r2, ip
 800e934:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 800e938:	ea4f 0cee 	mov.w	ip, lr, asr #3
 800e93c:	fb19 f90a 	smulbb	r9, r9, sl
 800e940:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 800e944:	00f6      	lsls	r6, r6, #3
 800e946:	fb0c 9c02 	mla	ip, ip, r2, r9
 800e94a:	b2f6      	uxtb	r6, r6
 800e94c:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 800e950:	fa1f fc8c 	uxth.w	ip, ip
 800e954:	fa5f fe8e 	uxtb.w	lr, lr
 800e958:	fb16 f60a 	smulbb	r6, r6, sl
 800e95c:	b2bf      	uxth	r7, r7
 800e95e:	fb0e 6602 	mla	r6, lr, r2, r6
 800e962:	f10c 0901 	add.w	r9, ip, #1
 800e966:	b2b6      	uxth	r6, r6
 800e968:	eb09 2c1c 	add.w	ip, r9, ip, lsr #8
 800e96c:	f107 0b01 	add.w	fp, r7, #1
 800e970:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 800e974:	eb0b 2717 	add.w	r7, fp, r7, lsr #8
 800e978:	f106 0e01 	add.w	lr, r6, #1
 800e97c:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 800e980:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 800e984:	eb0e 2e16 	add.w	lr, lr, r6, lsr #8
 800e988:	ea4c 0c07 	orr.w	ip, ip, r7
 800e98c:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 800e990:	ea4c 0c0e 	orr.w	ip, ip, lr
 800e994:	f825 c018 	strh.w	ip, [r5, r8, lsl #1]
 800e998:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 800e99a:	4414      	add	r4, r2
 800e99c:	9a14      	ldr	r2, [sp, #80]	; 0x50
 800e99e:	f108 0801 	add.w	r8, r8, #1
 800e9a2:	4410      	add	r0, r2
 800e9a4:	e794      	b.n	800e8d0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x12c>
 800e9a6:	1422      	asrs	r2, r4, #16
 800e9a8:	d465      	bmi.n	800ea76 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2d2>
 800e9aa:	9e00      	ldr	r6, [sp, #0]
 800e9ac:	4296      	cmp	r6, r2
 800e9ae:	dd62      	ble.n	800ea76 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2d2>
 800e9b0:	1406      	asrs	r6, r0, #16
 800e9b2:	d460      	bmi.n	800ea76 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2d2>
 800e9b4:	9f01      	ldr	r7, [sp, #4]
 800e9b6:	42be      	cmp	r6, r7
 800e9b8:	da5d      	bge.n	800ea76 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2d2>
 800e9ba:	9f02      	ldr	r7, [sp, #8]
 800e9bc:	fb06 2607 	mla	r6, r6, r7, r2
 800e9c0:	0872      	lsrs	r2, r6, #1
 800e9c2:	9f03      	ldr	r7, [sp, #12]
 800e9c4:	5cba      	ldrb	r2, [r7, r2]
 800e9c6:	07f7      	lsls	r7, r6, #31
 800e9c8:	bf54      	ite	pl
 800e9ca:	f002 020f 	andpl.w	r2, r2, #15
 800e9ce:	1112      	asrmi	r2, r2, #4
 800e9d0:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 800e9d4:	b2d2      	uxtb	r2, r2
 800e9d6:	2a00      	cmp	r2, #0
 800e9d8:	d04d      	beq.n	800ea76 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2d2>
 800e9da:	9f05      	ldr	r7, [sp, #20]
 800e9dc:	4e2c      	ldr	r6, [pc, #176]	; (800ea90 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2ec>)
 800e9de:	f8b9 e000 	ldrh.w	lr, [r9]
 800e9e2:	6836      	ldr	r6, [r6, #0]
 800e9e4:	437a      	muls	r2, r7
 800e9e6:	1c57      	adds	r7, r2, #1
 800e9e8:	eb07 2222 	add.w	r2, r7, r2, asr #8
 800e9ec:	1212      	asrs	r2, r2, #8
 800e9ee:	ea4f 2c16 	mov.w	ip, r6, lsr #8
 800e9f2:	fa1f fb82 	uxth.w	fp, r2
 800e9f6:	ea4f 272e 	mov.w	r7, lr, asr #8
 800e9fa:	43d2      	mvns	r2, r2
 800e9fc:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 800ea00:	b2d2      	uxtb	r2, r2
 800ea02:	fb1c fc0b 	smulbb	ip, ip, fp
 800ea06:	ea4f 08d6 	mov.w	r8, r6, lsr #3
 800ea0a:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 800ea0e:	fb07 c702 	mla	r7, r7, r2, ip
 800ea12:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 800ea16:	ea4f 0cee 	mov.w	ip, lr, asr #3
 800ea1a:	fb18 f80b 	smulbb	r8, r8, fp
 800ea1e:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 800ea22:	00f6      	lsls	r6, r6, #3
 800ea24:	fb0c 8c02 	mla	ip, ip, r2, r8
 800ea28:	b2f6      	uxtb	r6, r6
 800ea2a:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 800ea2e:	fa1f fc8c 	uxth.w	ip, ip
 800ea32:	fa5f fe8e 	uxtb.w	lr, lr
 800ea36:	fb16 f60b 	smulbb	r6, r6, fp
 800ea3a:	b2bf      	uxth	r7, r7
 800ea3c:	fb0e 6602 	mla	r6, lr, r2, r6
 800ea40:	f10c 0801 	add.w	r8, ip, #1
 800ea44:	b2b6      	uxth	r6, r6
 800ea46:	eb08 2c1c 	add.w	ip, r8, ip, lsr #8
 800ea4a:	f107 0801 	add.w	r8, r7, #1
 800ea4e:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 800ea52:	eb08 2717 	add.w	r7, r8, r7, lsr #8
 800ea56:	f106 0e01 	add.w	lr, r6, #1
 800ea5a:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 800ea5e:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 800ea62:	eb0e 2e16 	add.w	lr, lr, r6, lsr #8
 800ea66:	ea4c 0c07 	orr.w	ip, ip, r7
 800ea6a:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 800ea6e:	ea4c 0c0e 	orr.w	ip, ip, lr
 800ea72:	f8a9 c000 	strh.w	ip, [r9]
 800ea76:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 800ea78:	4414      	add	r4, r2
 800ea7a:	9a14      	ldr	r2, [sp, #80]	; 0x50
 800ea7c:	f109 0902 	add.w	r9, r9, #2
 800ea80:	4410      	add	r0, r2
 800ea82:	f10a 3aff 	add.w	sl, sl, #4294967295
 800ea86:	e6d5      	b.n	800e834 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x90>
 800ea88:	b007      	add	sp, #28
 800ea8a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800ea8e:	bf00      	nop
 800ea90:	20012180 	.word	0x20012180

0800ea94 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 800ea94:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ea98:	b087      	sub	sp, #28
 800ea9a:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 800ea9e:	9c15      	ldr	r4, [sp, #84]	; 0x54
 800eaa0:	9205      	str	r2, [sp, #20]
 800eaa2:	f9bd 2064 	ldrsh.w	r2, [sp, #100]	; 0x64
 800eaa6:	9201      	str	r2, [sp, #4]
 800eaa8:	e9dd 2516 	ldrd	r2, r5, [sp, #88]	; 0x58
 800eaac:	6860      	ldr	r0, [r4, #4]
 800eaae:	f9bd b060 	ldrsh.w	fp, [sp, #96]	; 0x60
 800eab2:	9100      	str	r1, [sp, #0]
 800eab4:	fb00 2505 	mla	r5, r0, r5, r2
 800eab8:	6822      	ldr	r2, [r4, #0]
 800eaba:	eb02 0545 	add.w	r5, r2, r5, lsl #1
 800eabe:	f10b 0201 	add.w	r2, fp, #1
 800eac2:	f022 0201 	bic.w	r2, r2, #1
 800eac6:	9203      	str	r2, [sp, #12]
 800eac8:	9a1a      	ldr	r2, [sp, #104]	; 0x68
 800eaca:	6812      	ldr	r2, [r2, #0]
 800eacc:	9204      	str	r2, [sp, #16]
 800eace:	9a00      	ldr	r2, [sp, #0]
 800ead0:	2a00      	cmp	r2, #0
 800ead2:	dc03      	bgt.n	800eadc <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x48>
 800ead4:	9a05      	ldr	r2, [sp, #20]
 800ead6:	2a00      	cmp	r2, #0
 800ead8:	f340 8157 	ble.w	800ed8a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2f6>
 800eadc:	9a11      	ldr	r2, [sp, #68]	; 0x44
 800eade:	f502 4400 	add.w	r4, r2, #32768	; 0x8000
 800eae2:	9a12      	ldr	r2, [sp, #72]	; 0x48
 800eae4:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 800eae8:	2b00      	cmp	r3, #0
 800eaea:	dd0f      	ble.n	800eb0c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x78>
 800eaec:	1422      	asrs	r2, r4, #16
 800eaee:	d406      	bmi.n	800eafe <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6a>
 800eaf0:	4593      	cmp	fp, r2
 800eaf2:	dd04      	ble.n	800eafe <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6a>
 800eaf4:	1402      	asrs	r2, r0, #16
 800eaf6:	d402      	bmi.n	800eafe <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6a>
 800eaf8:	9e01      	ldr	r6, [sp, #4]
 800eafa:	42b2      	cmp	r2, r6
 800eafc:	db07      	blt.n	800eb0e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7a>
 800eafe:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 800eb00:	4414      	add	r4, r2
 800eb02:	9a14      	ldr	r2, [sp, #80]	; 0x50
 800eb04:	3b01      	subs	r3, #1
 800eb06:	4410      	add	r0, r2
 800eb08:	3502      	adds	r5, #2
 800eb0a:	e7ed      	b.n	800eae8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x54>
 800eb0c:	d018      	beq.n	800eb40 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xac>
 800eb0e:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 800eb10:	1e5a      	subs	r2, r3, #1
 800eb12:	fb06 4602 	mla	r6, r6, r2, r4
 800eb16:	1436      	asrs	r6, r6, #16
 800eb18:	d40a      	bmi.n	800eb30 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9c>
 800eb1a:	45b3      	cmp	fp, r6
 800eb1c:	dd08      	ble.n	800eb30 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9c>
 800eb1e:	9e14      	ldr	r6, [sp, #80]	; 0x50
 800eb20:	fb06 0202 	mla	r2, r6, r2, r0
 800eb24:	1412      	asrs	r2, r2, #16
 800eb26:	d403      	bmi.n	800eb30 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9c>
 800eb28:	9e01      	ldr	r6, [sp, #4]
 800eb2a:	42b2      	cmp	r2, r6
 800eb2c:	f2c0 80bf 	blt.w	800ecae <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x21a>
 800eb30:	2700      	movs	r7, #0
 800eb32:	19da      	adds	r2, r3, r7
 800eb34:	2a00      	cmp	r2, #0
 800eb36:	dc3f      	bgt.n	800ebb8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x124>
 800eb38:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 800eb3c:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 800eb40:	9b00      	ldr	r3, [sp, #0]
 800eb42:	2b00      	cmp	r3, #0
 800eb44:	f340 8121 	ble.w	800ed8a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2f6>
 800eb48:	ee30 0a04 	vadd.f32	s0, s0, s8
 800eb4c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 800eb50:	eec6 7a80 	vdiv.f32	s15, s13, s0
 800eb54:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800eb56:	ee31 1a05 	vadd.f32	s2, s2, s10
 800eb5a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 800eb5e:	eeb0 6a62 	vmov.f32	s12, s5
 800eb62:	ee61 7a27 	vmul.f32	s15, s2, s15
 800eb66:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 800eb6a:	ee77 2a62 	vsub.f32	s5, s14, s5
 800eb6e:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 800eb72:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 800eb76:	eeb0 6a43 	vmov.f32	s12, s6
 800eb7a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 800eb7e:	ee12 2a90 	vmov	r2, s5
 800eb82:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 800eb86:	fb92 f3f3 	sdiv	r3, r2, r3
 800eb8a:	ee13 2a10 	vmov	r2, s6
 800eb8e:	9313      	str	r3, [sp, #76]	; 0x4c
 800eb90:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800eb92:	fb92 f3f3 	sdiv	r3, r2, r3
 800eb96:	9314      	str	r3, [sp, #80]	; 0x50
 800eb98:	9b00      	ldr	r3, [sp, #0]
 800eb9a:	9a05      	ldr	r2, [sp, #20]
 800eb9c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 800eba0:	3b01      	subs	r3, #1
 800eba2:	9300      	str	r3, [sp, #0]
 800eba4:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 800eba8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800ebaa:	eeb0 3a67 	vmov.f32	s6, s15
 800ebae:	bf08      	it	eq
 800ebb0:	4613      	moveq	r3, r2
 800ebb2:	eef0 2a47 	vmov.f32	s5, s14
 800ebb6:	e78a      	b.n	800eace <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3a>
 800ebb8:	1422      	asrs	r2, r4, #16
 800ebba:	d466      	bmi.n	800ec8a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1f6>
 800ebbc:	4593      	cmp	fp, r2
 800ebbe:	dd64      	ble.n	800ec8a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1f6>
 800ebc0:	1406      	asrs	r6, r0, #16
 800ebc2:	d462      	bmi.n	800ec8a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1f6>
 800ebc4:	9901      	ldr	r1, [sp, #4]
 800ebc6:	428e      	cmp	r6, r1
 800ebc8:	da5f      	bge.n	800ec8a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1f6>
 800ebca:	9903      	ldr	r1, [sp, #12]
 800ebcc:	fb06 2601 	mla	r6, r6, r1, r2
 800ebd0:	0872      	lsrs	r2, r6, #1
 800ebd2:	9904      	ldr	r1, [sp, #16]
 800ebd4:	5c8a      	ldrb	r2, [r1, r2]
 800ebd6:	07f6      	lsls	r6, r6, #31
 800ebd8:	bf54      	ite	pl
 800ebda:	f002 020f 	andpl.w	r2, r2, #15
 800ebde:	1112      	asrmi	r2, r2, #4
 800ebe0:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 800ebe4:	b2d2      	uxtb	r2, r2
 800ebe6:	2a00      	cmp	r2, #0
 800ebe8:	d04f      	beq.n	800ec8a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1f6>
 800ebea:	4969      	ldr	r1, [pc, #420]	; (800ed90 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2fc>)
 800ebec:	f8d1 c000 	ldr.w	ip, [r1]
 800ebf0:	2aff      	cmp	r2, #255	; 0xff
 800ebf2:	ea4f 291c 	mov.w	r9, ip, lsr #8
 800ebf6:	ea4f 06dc 	mov.w	r6, ip, lsr #3
 800ebfa:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 800ebfe:	f009 09f8 	and.w	r9, r9, #248	; 0xf8
 800ec02:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 800ec06:	fa5f fc8c 	uxtb.w	ip, ip
 800ec0a:	d044      	beq.n	800ec96 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x202>
 800ec0c:	f06f 0101 	mvn.w	r1, #1
 800ec10:	4379      	muls	r1, r7
 800ec12:	fa1f fa82 	uxth.w	sl, r2
 800ec16:	f835 8001 	ldrh.w	r8, [r5, r1]
 800ec1a:	9102      	str	r1, [sp, #8]
 800ec1c:	ea4f 2e28 	mov.w	lr, r8, asr #8
 800ec20:	43d2      	mvns	r2, r2
 800ec22:	b2d2      	uxtb	r2, r2
 800ec24:	fb19 f90a 	smulbb	r9, r9, sl
 800ec28:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 800ec2c:	fb0e 9e02 	mla	lr, lr, r2, r9
 800ec30:	ea4f 09e8 	mov.w	r9, r8, asr #3
 800ec34:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 800ec38:	fb16 f60a 	smulbb	r6, r6, sl
 800ec3c:	fb09 6602 	mla	r6, r9, r2, r6
 800ec40:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 800ec44:	b2b6      	uxth	r6, r6
 800ec46:	fa5f f888 	uxtb.w	r8, r8
 800ec4a:	fb1c fc0a 	smulbb	ip, ip, sl
 800ec4e:	fa1f fe8e 	uxth.w	lr, lr
 800ec52:	fb08 cc02 	mla	ip, r8, r2, ip
 800ec56:	f106 0901 	add.w	r9, r6, #1
 800ec5a:	fa1f fc8c 	uxth.w	ip, ip
 800ec5e:	eb09 2616 	add.w	r6, r9, r6, lsr #8
 800ec62:	f10e 0901 	add.w	r9, lr, #1
 800ec66:	0976      	lsrs	r6, r6, #5
 800ec68:	eb09 2e1e 	add.w	lr, r9, lr, lsr #8
 800ec6c:	f10c 0201 	add.w	r2, ip, #1
 800ec70:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 800ec74:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 800ec78:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 800ec7c:	ea46 060e 	orr.w	r6, r6, lr
 800ec80:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 800ec84:	ea46 060c 	orr.w	r6, r6, ip
 800ec88:	526e      	strh	r6, [r5, r1]
 800ec8a:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 800ec8c:	4414      	add	r4, r2
 800ec8e:	9a14      	ldr	r2, [sp, #80]	; 0x50
 800ec90:	3f01      	subs	r7, #1
 800ec92:	4410      	add	r0, r2
 800ec94:	e74d      	b.n	800eb32 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9e>
 800ec96:	f06f 0201 	mvn.w	r2, #1
 800ec9a:	00f6      	lsls	r6, r6, #3
 800ec9c:	fb02 f807 	mul.w	r8, r2, r7
 800eca0:	ea46 2609 	orr.w	r6, r6, r9, lsl #8
 800eca4:	ea46 06dc 	orr.w	r6, r6, ip, lsr #3
 800eca8:	f825 6008 	strh.w	r6, [r5, r8]
 800ecac:	e7ed      	b.n	800ec8a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1f6>
 800ecae:	f04f 0800 	mov.w	r8, #0
 800ecb2:	eba3 0208 	sub.w	r2, r3, r8
 800ecb6:	2a00      	cmp	r2, #0
 800ecb8:	f77f af3e 	ble.w	800eb38 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xa4>
 800ecbc:	9903      	ldr	r1, [sp, #12]
 800ecbe:	1422      	asrs	r2, r4, #16
 800ecc0:	1406      	asrs	r6, r0, #16
 800ecc2:	fb01 2606 	mla	r6, r1, r6, r2
 800ecc6:	0872      	lsrs	r2, r6, #1
 800ecc8:	9904      	ldr	r1, [sp, #16]
 800ecca:	5c8a      	ldrb	r2, [r1, r2]
 800eccc:	07f1      	lsls	r1, r6, #31
 800ecce:	bf54      	ite	pl
 800ecd0:	f002 020f 	andpl.w	r2, r2, #15
 800ecd4:	1112      	asrmi	r2, r2, #4
 800ecd6:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 800ecda:	b2d2      	uxtb	r2, r2
 800ecdc:	2a00      	cmp	r2, #0
 800ecde:	d047      	beq.n	800ed70 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2dc>
 800ece0:	492b      	ldr	r1, [pc, #172]	; (800ed90 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2fc>)
 800ece2:	680f      	ldr	r7, [r1, #0]
 800ece4:	2aff      	cmp	r2, #255	; 0xff
 800ece6:	ea4f 2917 	mov.w	r9, r7, lsr #8
 800ecea:	ea4f 06d7 	mov.w	r6, r7, lsr #3
 800ecee:	ea4f 07c7 	mov.w	r7, r7, lsl #3
 800ecf2:	f009 09f8 	and.w	r9, r9, #248	; 0xf8
 800ecf6:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 800ecfa:	b2ff      	uxtb	r7, r7
 800ecfc:	d03f      	beq.n	800ed7e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2ea>
 800ecfe:	f835 e018 	ldrh.w	lr, [r5, r8, lsl #1]
 800ed02:	fa1f fa82 	uxth.w	sl, r2
 800ed06:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 800ed0a:	43d2      	mvns	r2, r2
 800ed0c:	b2d2      	uxtb	r2, r2
 800ed0e:	fb19 f90a 	smulbb	r9, r9, sl
 800ed12:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 800ed16:	fb0c 9c02 	mla	ip, ip, r2, r9
 800ed1a:	ea4f 09ee 	mov.w	r9, lr, asr #3
 800ed1e:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 800ed22:	fb16 f60a 	smulbb	r6, r6, sl
 800ed26:	fb09 6602 	mla	r6, r9, r2, r6
 800ed2a:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 800ed2e:	b2b6      	uxth	r6, r6
 800ed30:	fa5f fe8e 	uxtb.w	lr, lr
 800ed34:	fb17 f70a 	smulbb	r7, r7, sl
 800ed38:	fa1f fc8c 	uxth.w	ip, ip
 800ed3c:	fb0e 7702 	mla	r7, lr, r2, r7
 800ed40:	f106 0901 	add.w	r9, r6, #1
 800ed44:	b2bf      	uxth	r7, r7
 800ed46:	eb09 2616 	add.w	r6, r9, r6, lsr #8
 800ed4a:	f10c 0901 	add.w	r9, ip, #1
 800ed4e:	0976      	lsrs	r6, r6, #5
 800ed50:	eb09 2c1c 	add.w	ip, r9, ip, lsr #8
 800ed54:	1c7a      	adds	r2, r7, #1
 800ed56:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 800ed5a:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 800ed5e:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 800ed62:	ea46 060c 	orr.w	r6, r6, ip
 800ed66:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 800ed6a:	433e      	orrs	r6, r7
 800ed6c:	f825 6018 	strh.w	r6, [r5, r8, lsl #1]
 800ed70:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 800ed72:	4414      	add	r4, r2
 800ed74:	9a14      	ldr	r2, [sp, #80]	; 0x50
 800ed76:	f108 0801 	add.w	r8, r8, #1
 800ed7a:	4410      	add	r0, r2
 800ed7c:	e799      	b.n	800ecb2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x21e>
 800ed7e:	00f6      	lsls	r6, r6, #3
 800ed80:	ea46 2609 	orr.w	r6, r6, r9, lsl #8
 800ed84:	ea46 06d7 	orr.w	r6, r6, r7, lsr #3
 800ed88:	e7f0      	b.n	800ed6c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2d8>
 800ed8a:	b007      	add	sp, #28
 800ed8c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800ed90:	20012180 	.word	0x20012180

0800ed94 <_ZN8touchgfx8LCD16bppD1Ev>:
 800ed94:	4770      	bx	lr

0800ed96 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD1Ev>:
 800ed96:	4770      	bx	lr

0800ed98 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD1Ev>:
 800ed98:	4770      	bx	lr

0800ed9a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD1Ev>:
 800ed9a:	4770      	bx	lr

0800ed9c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD1Ev>:
 800ed9c:	4770      	bx	lr

0800ed9e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 800ed9e:	4770      	bx	lr

0800eda0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 800eda0:	4770      	bx	lr

0800eda2 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 800eda2:	4770      	bx	lr

0800eda4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 800eda4:	4770      	bx	lr

0800eda6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 800eda6:	4770      	bx	lr

0800eda8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 800eda8:	4770      	bx	lr

0800edaa <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 800edaa:	4770      	bx	lr

0800edac <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD1Ev>:
 800edac:	4770      	bx	lr

0800edae <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 800edae:	4770      	bx	lr

0800edb0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 800edb0:	4770      	bx	lr

0800edb2 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 800edb2:	4770      	bx	lr

0800edb4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD1Ev>:
 800edb4:	4770      	bx	lr

0800edb6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 800edb6:	4770      	bx	lr

0800edb8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 800edb8:	4770      	bx	lr

0800edba <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 800edba:	4770      	bx	lr

0800edbc <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 800edbc:	4770      	bx	lr

0800edbe <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD1Ev>:
 800edbe:	4770      	bx	lr

0800edc0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD1Ev>:
 800edc0:	4770      	bx	lr

0800edc2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD1Ev>:
 800edc2:	4770      	bx	lr

0800edc4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD1Ev>:
 800edc4:	4770      	bx	lr

0800edc6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 800edc6:	4770      	bx	lr

0800edc8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 800edc8:	4770      	bx	lr

0800edca <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 800edca:	4770      	bx	lr

0800edcc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 800edcc:	4770      	bx	lr
	...

0800edd0 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv>:
 800edd0:	b508      	push	{r3, lr}
 800edd2:	4b06      	ldr	r3, [pc, #24]	; (800edec <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0x1c>)
 800edd4:	8818      	ldrh	r0, [r3, #0]
 800edd6:	b928      	cbnz	r0, 800ede4 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0x14>
 800edd8:	4b05      	ldr	r3, [pc, #20]	; (800edf0 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0x20>)
 800edda:	4a06      	ldr	r2, [pc, #24]	; (800edf4 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0x24>)
 800eddc:	4806      	ldr	r0, [pc, #24]	; (800edf8 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0x28>)
 800edde:	2154      	movs	r1, #84	; 0x54
 800ede0:	f009 f8bc 	bl	8017f5c <__assert_func>
 800ede4:	0040      	lsls	r0, r0, #1
 800ede6:	b280      	uxth	r0, r0
 800ede8:	bd08      	pop	{r3, pc}
 800edea:	bf00      	nop
 800edec:	20012172 	.word	0x20012172
 800edf0:	0801bcc3 	.word	0x0801bcc3
 800edf4:	0801c243 	.word	0x0801c243
 800edf8:	0801bd05 	.word	0x0801bd05

0800edfc <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb>:
 800edfc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ee00:	b08d      	sub	sp, #52	; 0x34
 800ee02:	460f      	mov	r7, r1
 800ee04:	f89d 9058 	ldrb.w	r9, [sp, #88]	; 0x58
 800ee08:	f89d 405c 	ldrb.w	r4, [sp, #92]	; 0x5c
 800ee0c:	4616      	mov	r6, r2
 800ee0e:	f1b9 0f00 	cmp.w	r9, #0
 800ee12:	d046      	beq.n	800eea2 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xa6>
 800ee14:	6810      	ldr	r0, [r2, #0]
 800ee16:	6851      	ldr	r1, [r2, #4]
 800ee18:	f8df 81c4 	ldr.w	r8, [pc, #452]	; 800efe0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1e4>
 800ee1c:	ad08      	add	r5, sp, #32
 800ee1e:	c503      	stmia	r5!, {r0, r1}
 800ee20:	6818      	ldr	r0, [r3, #0]
 800ee22:	6859      	ldr	r1, [r3, #4]
 800ee24:	ad0a      	add	r5, sp, #40	; 0x28
 800ee26:	c503      	stmia	r5!, {r0, r1}
 800ee28:	a808      	add	r0, sp, #32
 800ee2a:	f7fb fa5f 	bl	800a2ec <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 800ee2e:	4631      	mov	r1, r6
 800ee30:	a80a      	add	r0, sp, #40	; 0x28
 800ee32:	f7fb fa43 	bl	800a2bc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 800ee36:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	; 0x28
 800ee3a:	f9bd 302a 	ldrsh.w	r3, [sp, #42]	; 0x2a
 800ee3e:	f8bd 6024 	ldrh.w	r6, [sp, #36]	; 0x24
 800ee42:	f8d8 0000 	ldr.w	r0, [r8]
 800ee46:	f9bd 502c 	ldrsh.w	r5, [sp, #44]	; 0x2c
 800ee4a:	fb16 2103 	smlabb	r1, r6, r3, r2
 800ee4e:	eb07 0641 	add.w	r6, r7, r1, lsl #1
 800ee52:	f8bd 1020 	ldrh.w	r1, [sp, #32]
 800ee56:	f9bd 702e 	ldrsh.w	r7, [sp, #46]	; 0x2e
 800ee5a:	440a      	add	r2, r1
 800ee5c:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 800ee60:	f8bd 2022 	ldrh.w	r2, [sp, #34]	; 0x22
 800ee64:	4413      	add	r3, r2
 800ee66:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 800ee6a:	6803      	ldr	r3, [r0, #0]
 800ee6c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800ee6e:	4798      	blx	r3
 800ee70:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 800ee74:	d018      	beq.n	800eea8 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xac>
 800ee76:	f010 0f04 	tst.w	r0, #4
 800ee7a:	d019      	beq.n	800eeb0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xb4>
 800ee7c:	f8d8 0000 	ldr.w	r0, [r8]
 800ee80:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 800ee84:	6801      	ldr	r1, [r0, #0]
 800ee86:	f8bd 2028 	ldrh.w	r2, [sp, #40]	; 0x28
 800ee8a:	e9cd 9403 	strd	r9, r4, [sp, #12]
 800ee8e:	b2bf      	uxth	r7, r7
 800ee90:	f8bd 4024 	ldrh.w	r4, [sp, #36]	; 0x24
 800ee94:	9402      	str	r4, [sp, #8]
 800ee96:	b2ad      	uxth	r5, r5
 800ee98:	9701      	str	r7, [sp, #4]
 800ee9a:	9500      	str	r5, [sp, #0]
 800ee9c:	6b8c      	ldr	r4, [r1, #56]	; 0x38
 800ee9e:	4631      	mov	r1, r6
 800eea0:	47a0      	blx	r4
 800eea2:	b00d      	add	sp, #52	; 0x34
 800eea4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800eea8:	b914      	cbnz	r4, 800eeb0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xb4>
 800eeaa:	f010 0f01 	tst.w	r0, #1
 800eeae:	e7e4      	b.n	800ee7a <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x7e>
 800eeb0:	f8d8 0000 	ldr.w	r0, [r8]
 800eeb4:	6803      	ldr	r3, [r0, #0]
 800eeb6:	6a1b      	ldr	r3, [r3, #32]
 800eeb8:	4798      	blx	r3
 800eeba:	4a48      	ldr	r2, [pc, #288]	; (800efdc <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1e0>)
 800eebc:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	; 0x2a
 800eec0:	8814      	ldrh	r4, [r2, #0]
 800eec2:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 800eec6:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 800eeca:	fb01 3404 	mla	r4, r1, r4, r3
 800eece:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 800eed2:	4692      	mov	sl, r2
 800eed4:	d118      	bne.n	800ef08 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x10c>
 800eed6:	ea4f 0b45 	mov.w	fp, r5, lsl #1
 800eeda:	f04f 0900 	mov.w	r9, #0
 800eede:	f8d8 0000 	ldr.w	r0, [r8]
 800eee2:	45b9      	cmp	r9, r7
 800eee4:	6803      	ldr	r3, [r0, #0]
 800eee6:	da73      	bge.n	800efd0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>
 800eee8:	6add      	ldr	r5, [r3, #44]	; 0x2c
 800eeea:	4632      	mov	r2, r6
 800eeec:	465b      	mov	r3, fp
 800eeee:	4621      	mov	r1, r4
 800eef0:	47a8      	blx	r5
 800eef2:	f8ba 3000 	ldrh.w	r3, [sl]
 800eef6:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 800eefa:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	; 0x24
 800eefe:	f109 0901 	add.w	r9, r9, #1
 800ef02:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 800ef06:	e7ea      	b.n	800eede <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xe2>
 800ef08:	f1c9 08ff 	rsb	r8, r9, #255	; 0xff
 800ef0c:	ea25 7ae5 	bic.w	sl, r5, r5, asr #31
 800ef10:	ea4f 0a4a 	mov.w	sl, sl, lsl #1
 800ef14:	f04f 0b00 	mov.w	fp, #0
 800ef18:	fa1f f389 	uxth.w	r3, r9
 800ef1c:	fa1f f888 	uxth.w	r8, r8
 800ef20:	9207      	str	r2, [sp, #28]
 800ef22:	45bb      	cmp	fp, r7
 800ef24:	da54      	bge.n	800efd0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>
 800ef26:	f04f 0e00 	mov.w	lr, #0
 800ef2a:	45ae      	cmp	lr, r5
 800ef2c:	da41      	bge.n	800efb2 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1b6>
 800ef2e:	f834 101e 	ldrh.w	r1, [r4, lr, lsl #1]
 800ef32:	f836 201e 	ldrh.w	r2, [r6, lr, lsl #1]
 800ef36:	1208      	asrs	r0, r1, #8
 800ef38:	ea4f 2c22 	mov.w	ip, r2, asr #8
 800ef3c:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 800ef40:	fb10 f008 	smulbb	r0, r0, r8
 800ef44:	ea4f 09e1 	mov.w	r9, r1, asr #3
 800ef48:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 800ef4c:	00c9      	lsls	r1, r1, #3
 800ef4e:	fb0c 0c03 	mla	ip, ip, r3, r0
 800ef52:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 800ef56:	10d0      	asrs	r0, r2, #3
 800ef58:	b2c9      	uxtb	r1, r1
 800ef5a:	00d2      	lsls	r2, r2, #3
 800ef5c:	fa1f fc8c 	uxth.w	ip, ip
 800ef60:	fb19 f908 	smulbb	r9, r9, r8
 800ef64:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 800ef68:	b2d2      	uxtb	r2, r2
 800ef6a:	fb11 f108 	smulbb	r1, r1, r8
 800ef6e:	fb00 9003 	mla	r0, r0, r3, r9
 800ef72:	fb02 1203 	mla	r2, r2, r3, r1
 800ef76:	f10c 0901 	add.w	r9, ip, #1
 800ef7a:	b292      	uxth	r2, r2
 800ef7c:	eb09 2c1c 	add.w	ip, r9, ip, lsr #8
 800ef80:	f40c 4978 	and.w	r9, ip, #63488	; 0xf800
 800ef84:	f102 0c01 	add.w	ip, r2, #1
 800ef88:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 800ef8c:	b280      	uxth	r0, r0
 800ef8e:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 800ef92:	ea49 0c02 	orr.w	ip, r9, r2
 800ef96:	f100 0901 	add.w	r9, r0, #1
 800ef9a:	eb09 2010 	add.w	r0, r9, r0, lsr #8
 800ef9e:	0940      	lsrs	r0, r0, #5
 800efa0:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 800efa4:	ea4c 0c00 	orr.w	ip, ip, r0
 800efa8:	f824 c01e 	strh.w	ip, [r4, lr, lsl #1]
 800efac:	f10e 0e01 	add.w	lr, lr, #1
 800efb0:	e7bb      	b.n	800ef2a <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x12e>
 800efb2:	9a07      	ldr	r2, [sp, #28]
 800efb4:	8812      	ldrh	r2, [r2, #0]
 800efb6:	1b52      	subs	r2, r2, r5
 800efb8:	eb0a 0242 	add.w	r2, sl, r2, lsl #1
 800efbc:	4414      	add	r4, r2
 800efbe:	f9bd 2024 	ldrsh.w	r2, [sp, #36]	; 0x24
 800efc2:	1b52      	subs	r2, r2, r5
 800efc4:	eb0a 0242 	add.w	r2, sl, r2, lsl #1
 800efc8:	4416      	add	r6, r2
 800efca:	f10b 0b01 	add.w	fp, fp, #1
 800efce:	e7a8      	b.n	800ef22 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x126>
 800efd0:	4b03      	ldr	r3, [pc, #12]	; (800efe0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1e4>)
 800efd2:	6818      	ldr	r0, [r3, #0]
 800efd4:	6803      	ldr	r3, [r0, #0]
 800efd6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800efd8:	4798      	blx	r3
 800efda:	e762      	b.n	800eea2 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xa6>
 800efdc:	20012172 	.word	0x20012172
 800efe0:	20012178 	.word	0x20012178

0800efe4 <_ZN8touchgfx8LCD16bppD0Ev>:
 800efe4:	b510      	push	{r4, lr}
 800efe6:	2178      	movs	r1, #120	; 0x78
 800efe8:	4604      	mov	r4, r0
 800efea:	f008 ff8b 	bl	8017f04 <_ZdlPvj>
 800efee:	4620      	mov	r0, r4
 800eff0:	bd10      	pop	{r4, pc}

0800eff2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 800eff2:	b510      	push	{r4, lr}
 800eff4:	2104      	movs	r1, #4
 800eff6:	4604      	mov	r4, r0
 800eff8:	f008 ff84 	bl	8017f04 <_ZdlPvj>
 800effc:	4620      	mov	r0, r4
 800effe:	bd10      	pop	{r4, pc}

0800f000 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 800f000:	b510      	push	{r4, lr}
 800f002:	2104      	movs	r1, #4
 800f004:	4604      	mov	r4, r0
 800f006:	f008 ff7d 	bl	8017f04 <_ZdlPvj>
 800f00a:	4620      	mov	r0, r4
 800f00c:	bd10      	pop	{r4, pc}

0800f00e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 800f00e:	b510      	push	{r4, lr}
 800f010:	2104      	movs	r1, #4
 800f012:	4604      	mov	r4, r0
 800f014:	f008 ff76 	bl	8017f04 <_ZdlPvj>
 800f018:	4620      	mov	r0, r4
 800f01a:	bd10      	pop	{r4, pc}

0800f01c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 800f01c:	b510      	push	{r4, lr}
 800f01e:	2104      	movs	r1, #4
 800f020:	4604      	mov	r4, r0
 800f022:	f008 ff6f 	bl	8017f04 <_ZdlPvj>
 800f026:	4620      	mov	r0, r4
 800f028:	bd10      	pop	{r4, pc}

0800f02a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD0Ev>:
 800f02a:	b510      	push	{r4, lr}
 800f02c:	2104      	movs	r1, #4
 800f02e:	4604      	mov	r4, r0
 800f030:	f008 ff68 	bl	8017f04 <_ZdlPvj>
 800f034:	4620      	mov	r0, r4
 800f036:	bd10      	pop	{r4, pc}

0800f038 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD0Ev>:
 800f038:	b510      	push	{r4, lr}
 800f03a:	2104      	movs	r1, #4
 800f03c:	4604      	mov	r4, r0
 800f03e:	f008 ff61 	bl	8017f04 <_ZdlPvj>
 800f042:	4620      	mov	r0, r4
 800f044:	bd10      	pop	{r4, pc}

0800f046 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD0Ev>:
 800f046:	b510      	push	{r4, lr}
 800f048:	2104      	movs	r1, #4
 800f04a:	4604      	mov	r4, r0
 800f04c:	f008 ff5a 	bl	8017f04 <_ZdlPvj>
 800f050:	4620      	mov	r0, r4
 800f052:	bd10      	pop	{r4, pc}

0800f054 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD0Ev>:
 800f054:	b510      	push	{r4, lr}
 800f056:	2104      	movs	r1, #4
 800f058:	4604      	mov	r4, r0
 800f05a:	f008 ff53 	bl	8017f04 <_ZdlPvj>
 800f05e:	4620      	mov	r0, r4
 800f060:	bd10      	pop	{r4, pc}

0800f062 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 800f062:	b510      	push	{r4, lr}
 800f064:	2104      	movs	r1, #4
 800f066:	4604      	mov	r4, r0
 800f068:	f008 ff4c 	bl	8017f04 <_ZdlPvj>
 800f06c:	4620      	mov	r0, r4
 800f06e:	bd10      	pop	{r4, pc}

0800f070 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 800f070:	b510      	push	{r4, lr}
 800f072:	2104      	movs	r1, #4
 800f074:	4604      	mov	r4, r0
 800f076:	f008 ff45 	bl	8017f04 <_ZdlPvj>
 800f07a:	4620      	mov	r0, r4
 800f07c:	bd10      	pop	{r4, pc}

0800f07e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 800f07e:	b510      	push	{r4, lr}
 800f080:	2104      	movs	r1, #4
 800f082:	4604      	mov	r4, r0
 800f084:	f008 ff3e 	bl	8017f04 <_ZdlPvj>
 800f088:	4620      	mov	r0, r4
 800f08a:	bd10      	pop	{r4, pc}

0800f08c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 800f08c:	b510      	push	{r4, lr}
 800f08e:	2104      	movs	r1, #4
 800f090:	4604      	mov	r4, r0
 800f092:	f008 ff37 	bl	8017f04 <_ZdlPvj>
 800f096:	4620      	mov	r0, r4
 800f098:	bd10      	pop	{r4, pc}

0800f09a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 800f09a:	b510      	push	{r4, lr}
 800f09c:	2104      	movs	r1, #4
 800f09e:	4604      	mov	r4, r0
 800f0a0:	f008 ff30 	bl	8017f04 <_ZdlPvj>
 800f0a4:	4620      	mov	r0, r4
 800f0a6:	bd10      	pop	{r4, pc}

0800f0a8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 800f0a8:	b510      	push	{r4, lr}
 800f0aa:	2104      	movs	r1, #4
 800f0ac:	4604      	mov	r4, r0
 800f0ae:	f008 ff29 	bl	8017f04 <_ZdlPvj>
 800f0b2:	4620      	mov	r0, r4
 800f0b4:	bd10      	pop	{r4, pc}

0800f0b6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 800f0b6:	b510      	push	{r4, lr}
 800f0b8:	2104      	movs	r1, #4
 800f0ba:	4604      	mov	r4, r0
 800f0bc:	f008 ff22 	bl	8017f04 <_ZdlPvj>
 800f0c0:	4620      	mov	r0, r4
 800f0c2:	bd10      	pop	{r4, pc}

0800f0c4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD0Ev>:
 800f0c4:	b510      	push	{r4, lr}
 800f0c6:	2104      	movs	r1, #4
 800f0c8:	4604      	mov	r4, r0
 800f0ca:	f008 ff1b 	bl	8017f04 <_ZdlPvj>
 800f0ce:	4620      	mov	r0, r4
 800f0d0:	bd10      	pop	{r4, pc}

0800f0d2 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 800f0d2:	b510      	push	{r4, lr}
 800f0d4:	2104      	movs	r1, #4
 800f0d6:	4604      	mov	r4, r0
 800f0d8:	f008 ff14 	bl	8017f04 <_ZdlPvj>
 800f0dc:	4620      	mov	r0, r4
 800f0de:	bd10      	pop	{r4, pc}

0800f0e0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 800f0e0:	b510      	push	{r4, lr}
 800f0e2:	2104      	movs	r1, #4
 800f0e4:	4604      	mov	r4, r0
 800f0e6:	f008 ff0d 	bl	8017f04 <_ZdlPvj>
 800f0ea:	4620      	mov	r0, r4
 800f0ec:	bd10      	pop	{r4, pc}

0800f0ee <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 800f0ee:	b510      	push	{r4, lr}
 800f0f0:	2104      	movs	r1, #4
 800f0f2:	4604      	mov	r4, r0
 800f0f4:	f008 ff06 	bl	8017f04 <_ZdlPvj>
 800f0f8:	4620      	mov	r0, r4
 800f0fa:	bd10      	pop	{r4, pc}

0800f0fc <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD0Ev>:
 800f0fc:	b510      	push	{r4, lr}
 800f0fe:	2104      	movs	r1, #4
 800f100:	4604      	mov	r4, r0
 800f102:	f008 feff 	bl	8017f04 <_ZdlPvj>
 800f106:	4620      	mov	r0, r4
 800f108:	bd10      	pop	{r4, pc}

0800f10a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 800f10a:	b510      	push	{r4, lr}
 800f10c:	2104      	movs	r1, #4
 800f10e:	4604      	mov	r4, r0
 800f110:	f008 fef8 	bl	8017f04 <_ZdlPvj>
 800f114:	4620      	mov	r0, r4
 800f116:	bd10      	pop	{r4, pc}

0800f118 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 800f118:	b510      	push	{r4, lr}
 800f11a:	2104      	movs	r1, #4
 800f11c:	4604      	mov	r4, r0
 800f11e:	f008 fef1 	bl	8017f04 <_ZdlPvj>
 800f122:	4620      	mov	r0, r4
 800f124:	bd10      	pop	{r4, pc}

0800f126 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 800f126:	b510      	push	{r4, lr}
 800f128:	2104      	movs	r1, #4
 800f12a:	4604      	mov	r4, r0
 800f12c:	f008 feea 	bl	8017f04 <_ZdlPvj>
 800f130:	4620      	mov	r0, r4
 800f132:	bd10      	pop	{r4, pc}

0800f134 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 800f134:	b510      	push	{r4, lr}
 800f136:	2104      	movs	r1, #4
 800f138:	4604      	mov	r4, r0
 800f13a:	f008 fee3 	bl	8017f04 <_ZdlPvj>
 800f13e:	4620      	mov	r0, r4
 800f140:	bd10      	pop	{r4, pc}

0800f142 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD0Ev>:
 800f142:	b510      	push	{r4, lr}
 800f144:	2104      	movs	r1, #4
 800f146:	4604      	mov	r4, r0
 800f148:	f008 fedc 	bl	8017f04 <_ZdlPvj>
 800f14c:	4620      	mov	r0, r4
 800f14e:	bd10      	pop	{r4, pc}

0800f150 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD0Ev>:
 800f150:	b510      	push	{r4, lr}
 800f152:	2104      	movs	r1, #4
 800f154:	4604      	mov	r4, r0
 800f156:	f008 fed5 	bl	8017f04 <_ZdlPvj>
 800f15a:	4620      	mov	r0, r4
 800f15c:	bd10      	pop	{r4, pc}

0800f15e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD0Ev>:
 800f15e:	b510      	push	{r4, lr}
 800f160:	2104      	movs	r1, #4
 800f162:	4604      	mov	r4, r0
 800f164:	f008 fece 	bl	8017f04 <_ZdlPvj>
 800f168:	4620      	mov	r0, r4
 800f16a:	bd10      	pop	{r4, pc}

0800f16c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD0Ev>:
 800f16c:	b510      	push	{r4, lr}
 800f16e:	2104      	movs	r1, #4
 800f170:	4604      	mov	r4, r0
 800f172:	f008 fec7 	bl	8017f04 <_ZdlPvj>
 800f176:	4620      	mov	r0, r4
 800f178:	bd10      	pop	{r4, pc}
	...

0800f17c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh>:
 800f17c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f180:	460e      	mov	r6, r1
 800f182:	b08b      	sub	sp, #44	; 0x2c
 800f184:	4615      	mov	r5, r2
 800f186:	461c      	mov	r4, r3
 800f188:	b323      	cbz	r3, 800f1d4 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x58>
 800f18a:	4608      	mov	r0, r1
 800f18c:	f7f8 fc55 	bl	8007a3a <_ZNK8touchgfx4Rect7isEmptyEv>
 800f190:	bb00      	cbnz	r0, 800f1d4 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x58>
 800f192:	6830      	ldr	r0, [r6, #0]
 800f194:	6871      	ldr	r1, [r6, #4]
 800f196:	4e55      	ldr	r6, [pc, #340]	; (800f2ec <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x170>)
 800f198:	ab08      	add	r3, sp, #32
 800f19a:	c303      	stmia	r3!, {r0, r1}
 800f19c:	a808      	add	r0, sp, #32
 800f19e:	f7fb f8a5 	bl	800a2ec <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 800f1a2:	6830      	ldr	r0, [r6, #0]
 800f1a4:	6803      	ldr	r3, [r0, #0]
 800f1a6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800f1a8:	4798      	blx	r3
 800f1aa:	2cff      	cmp	r4, #255	; 0xff
 800f1ac:	d015      	beq.n	800f1da <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5e>
 800f1ae:	f010 0f08 	tst.w	r0, #8
 800f1b2:	d015      	beq.n	800f1e0 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x64>
 800f1b4:	6830      	ldr	r0, [r6, #0]
 800f1b6:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
 800f1ba:	6801      	ldr	r1, [r0, #0]
 800f1bc:	9402      	str	r4, [sp, #8]
 800f1be:	f8bd 4026 	ldrh.w	r4, [sp, #38]	; 0x26
 800f1c2:	9401      	str	r4, [sp, #4]
 800f1c4:	f8bd 4024 	ldrh.w	r4, [sp, #36]	; 0x24
 800f1c8:	9400      	str	r4, [sp, #0]
 800f1ca:	6c8c      	ldr	r4, [r1, #72]	; 0x48
 800f1cc:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 800f1d0:	4629      	mov	r1, r5
 800f1d2:	47a0      	blx	r4
 800f1d4:	b00b      	add	sp, #44	; 0x2c
 800f1d6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800f1da:	f010 0f02 	tst.w	r0, #2
 800f1de:	e7e8      	b.n	800f1b2 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x36>
 800f1e0:	6830      	ldr	r0, [r6, #0]
 800f1e2:	f9bd 8024 	ldrsh.w	r8, [sp, #36]	; 0x24
 800f1e6:	6803      	ldr	r3, [r0, #0]
 800f1e8:	f9bd 9026 	ldrsh.w	r9, [sp, #38]	; 0x26
 800f1ec:	6a1b      	ldr	r3, [r3, #32]
 800f1ee:	4798      	blx	r3
 800f1f0:	4a3f      	ldr	r2, [pc, #252]	; (800f2f0 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x174>)
 800f1f2:	f9bd 1020 	ldrsh.w	r1, [sp, #32]
 800f1f6:	8816      	ldrh	r6, [r2, #0]
 800f1f8:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 800f1fc:	2cff      	cmp	r4, #255	; 0xff
 800f1fe:	fb06 1303 	mla	r3, r6, r3, r1
 800f202:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 800f206:	ea4f 0b48 	mov.w	fp, r8, lsl #1
 800f20a:	4616      	mov	r6, r2
 800f20c:	ea28 71e8 	bic.w	r1, r8, r8, asr #31
 800f210:	d10a      	bne.n	800f228 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0xac>
 800f212:	0049      	lsls	r1, r1, #1
 800f214:	2200      	movs	r2, #0
 800f216:	454a      	cmp	r2, r9
 800f218:	da61      	bge.n	800f2de <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x162>
 800f21a:	2300      	movs	r3, #0
 800f21c:	4543      	cmp	r3, r8
 800f21e:	da57      	bge.n	800f2d0 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x154>
 800f220:	f820 5013 	strh.w	r5, [r0, r3, lsl #1]
 800f224:	3301      	adds	r3, #1
 800f226:	e7f9      	b.n	800f21c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0xa0>
 800f228:	0a2b      	lsrs	r3, r5, #8
 800f22a:	f1c4 07ff 	rsb	r7, r4, #255	; 0xff
 800f22e:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 800f232:	b2a4      	uxth	r4, r4
 800f234:	4363      	muls	r3, r4
 800f236:	9305      	str	r3, [sp, #20]
 800f238:	08ee      	lsrs	r6, r5, #3
 800f23a:	00eb      	lsls	r3, r5, #3
 800f23c:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 800f240:	b2db      	uxtb	r3, r3
 800f242:	0049      	lsls	r1, r1, #1
 800f244:	4366      	muls	r6, r4
 800f246:	4363      	muls	r3, r4
 800f248:	9106      	str	r1, [sp, #24]
 800f24a:	f04f 0c00 	mov.w	ip, #0
 800f24e:	b2bf      	uxth	r7, r7
 800f250:	9207      	str	r2, [sp, #28]
 800f252:	45cc      	cmp	ip, r9
 800f254:	da43      	bge.n	800f2de <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x162>
 800f256:	4682      	mov	sl, r0
 800f258:	f04f 0e00 	mov.w	lr, #0
 800f25c:	45c6      	cmp	lr, r8
 800f25e:	da2d      	bge.n	800f2bc <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x140>
 800f260:	f8ba 2000 	ldrh.w	r2, [sl]
 800f264:	9905      	ldr	r1, [sp, #20]
 800f266:	1214      	asrs	r4, r2, #8
 800f268:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 800f26c:	fb14 f407 	smulbb	r4, r4, r7
 800f270:	440c      	add	r4, r1
 800f272:	10d1      	asrs	r1, r2, #3
 800f274:	00d2      	lsls	r2, r2, #3
 800f276:	b2d2      	uxtb	r2, r2
 800f278:	fb12 f207 	smulbb	r2, r2, r7
 800f27c:	b2a4      	uxth	r4, r4
 800f27e:	441a      	add	r2, r3
 800f280:	b292      	uxth	r2, r2
 800f282:	1c65      	adds	r5, r4, #1
 800f284:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 800f288:	eb05 2414 	add.w	r4, r5, r4, lsr #8
 800f28c:	fb11 f107 	smulbb	r1, r1, r7
 800f290:	1c55      	adds	r5, r2, #1
 800f292:	4431      	add	r1, r6
 800f294:	eb05 2212 	add.w	r2, r5, r2, lsr #8
 800f298:	b289      	uxth	r1, r1
 800f29a:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 800f29e:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 800f2a2:	4314      	orrs	r4, r2
 800f2a4:	1c4a      	adds	r2, r1, #1
 800f2a6:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 800f2aa:	0949      	lsrs	r1, r1, #5
 800f2ac:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 800f2b0:	430c      	orrs	r4, r1
 800f2b2:	f82a 4b02 	strh.w	r4, [sl], #2
 800f2b6:	f10e 0e01 	add.w	lr, lr, #1
 800f2ba:	e7cf      	b.n	800f25c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0xe0>
 800f2bc:	9a07      	ldr	r2, [sp, #28]
 800f2be:	9906      	ldr	r1, [sp, #24]
 800f2c0:	8812      	ldrh	r2, [r2, #0]
 800f2c2:	ebcb 0242 	rsb	r2, fp, r2, lsl #1
 800f2c6:	440a      	add	r2, r1
 800f2c8:	4410      	add	r0, r2
 800f2ca:	f10c 0c01 	add.w	ip, ip, #1
 800f2ce:	e7c0      	b.n	800f252 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0xd6>
 800f2d0:	8833      	ldrh	r3, [r6, #0]
 800f2d2:	ebcb 0343 	rsb	r3, fp, r3, lsl #1
 800f2d6:	440b      	add	r3, r1
 800f2d8:	4418      	add	r0, r3
 800f2da:	3201      	adds	r2, #1
 800f2dc:	e79b      	b.n	800f216 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x9a>
 800f2de:	4b03      	ldr	r3, [pc, #12]	; (800f2ec <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x170>)
 800f2e0:	6818      	ldr	r0, [r3, #0]
 800f2e2:	6803      	ldr	r3, [r0, #0]
 800f2e4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800f2e6:	4798      	blx	r3
 800f2e8:	e774      	b.n	800f1d4 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x58>
 800f2ea:	bf00      	nop
 800f2ec:	20012178 	.word	0x20012178
 800f2f0:	20012172 	.word	0x20012172

0800f2f4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t>:
 800f2f4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f2f8:	4d9b      	ldr	r5, [pc, #620]	; (800f568 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x274>)
 800f2fa:	4690      	mov	r8, r2
 800f2fc:	682a      	ldr	r2, [r5, #0]
 800f2fe:	f892 2048 	ldrb.w	r2, [r2, #72]	; 0x48
 800f302:	2a02      	cmp	r2, #2
 800f304:	b08f      	sub	sp, #60	; 0x3c
 800f306:	4604      	mov	r4, r0
 800f308:	4689      	mov	r9, r1
 800f30a:	d106      	bne.n	800f31a <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x26>
 800f30c:	4b97      	ldr	r3, [pc, #604]	; (800f56c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x278>)
 800f30e:	4a98      	ldr	r2, [pc, #608]	; (800f570 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x27c>)
 800f310:	f240 21be 	movw	r1, #702	; 0x2be
 800f314:	4897      	ldr	r0, [pc, #604]	; (800f574 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x280>)
 800f316:	f008 fe21 	bl	8017f5c <__assert_func>
 800f31a:	ae0e      	add	r6, sp, #56	; 0x38
 800f31c:	f826 3d24 	strh.w	r3, [r6, #-36]!
 800f320:	4630      	mov	r0, r6
 800f322:	f7fd fad9 	bl	800c8d8 <_ZNK8touchgfx6Bitmap9getFormatEv>
 800f326:	6823      	ldr	r3, [r4, #0]
 800f328:	4607      	mov	r7, r0
 800f32a:	6a1b      	ldr	r3, [r3, #32]
 800f32c:	4620      	mov	r0, r4
 800f32e:	4798      	blx	r3
 800f330:	4287      	cmp	r7, r0
 800f332:	d004      	beq.n	800f33e <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x4a>
 800f334:	4b90      	ldr	r3, [pc, #576]	; (800f578 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x284>)
 800f336:	4a8e      	ldr	r2, [pc, #568]	; (800f570 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x27c>)
 800f338:	f44f 7130 	mov.w	r1, #704	; 0x2c0
 800f33c:	e7ea      	b.n	800f314 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x20>
 800f33e:	4630      	mov	r0, r6
 800f340:	f7fd fa46 	bl	800c7d0 <_ZNK8touchgfx6Bitmap7getDataEv>
 800f344:	4607      	mov	r7, r0
 800f346:	b920      	cbnz	r0, 800f352 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x5e>
 800f348:	4b8c      	ldr	r3, [pc, #560]	; (800f57c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x288>)
 800f34a:	4a89      	ldr	r2, [pc, #548]	; (800f570 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x27c>)
 800f34c:	f240 21c2 	movw	r1, #706	; 0x2c2
 800f350:	e7e0      	b.n	800f314 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x20>
 800f352:	f8d8 0000 	ldr.w	r0, [r8]
 800f356:	f8d8 1004 	ldr.w	r1, [r8, #4]
 800f35a:	f9b8 a000 	ldrsh.w	sl, [r8]
 800f35e:	ab06      	add	r3, sp, #24
 800f360:	c303      	stmia	r3!, {r0, r1}
 800f362:	f8d9 1004 	ldr.w	r1, [r9, #4]
 800f366:	f8d9 0000 	ldr.w	r0, [r9]
 800f36a:	f9b8 9002 	ldrsh.w	r9, [r8, #2]
 800f36e:	ab08      	add	r3, sp, #32
 800f370:	c303      	stmia	r3!, {r0, r1}
 800f372:	4630      	mov	r0, r6
 800f374:	f7fd f924 	bl	800c5c0 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800f378:	4680      	mov	r8, r0
 800f37a:	4630      	mov	r0, r6
 800f37c:	f7fd f95a 	bl	800c634 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800f380:	f8ad 902a 	strh.w	r9, [sp, #42]	; 0x2a
 800f384:	f8ad 002e 	strh.w	r0, [sp, #46]	; 0x2e
 800f388:	f10d 0920 	add.w	r9, sp, #32
 800f38c:	a806      	add	r0, sp, #24
 800f38e:	f8ad a028 	strh.w	sl, [sp, #40]	; 0x28
 800f392:	f8ad 802c 	strh.w	r8, [sp, #44]	; 0x2c
 800f396:	f7fa ffa9 	bl	800a2ec <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 800f39a:	4648      	mov	r0, r9
 800f39c:	f7fa ffa6 	bl	800a2ec <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 800f3a0:	a80a      	add	r0, sp, #40	; 0x28
 800f3a2:	f7fa ffa3 	bl	800a2ec <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 800f3a6:	4e76      	ldr	r6, [pc, #472]	; (800f580 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x28c>)
 800f3a8:	4b76      	ldr	r3, [pc, #472]	; (800f584 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x290>)
 800f3aa:	f9b6 2000 	ldrsh.w	r2, [r6]
 800f3ae:	f9b3 3000 	ldrsh.w	r3, [r3]
 800f3b2:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
 800f3b6:	2100      	movs	r1, #0
 800f3b8:	910c      	str	r1, [sp, #48]	; 0x30
 800f3ba:	4648      	mov	r0, r9
 800f3bc:	a90c      	add	r1, sp, #48	; 0x30
 800f3be:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 800f3c2:	f7f8 faf7 	bl	80079b4 <_ZN8touchgfx4RectaNERKS0_>
 800f3c6:	4648      	mov	r0, r9
 800f3c8:	f7f8 fb37 	bl	8007a3a <_ZNK8touchgfx4Rect7isEmptyEv>
 800f3cc:	2800      	cmp	r0, #0
 800f3ce:	f040 80bd 	bne.w	800f54c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x258>
 800f3d2:	f9bd 0020 	ldrsh.w	r0, [sp, #32]
 800f3d6:	f9bd 1018 	ldrsh.w	r1, [sp, #24]
 800f3da:	4288      	cmp	r0, r1
 800f3dc:	db37      	blt.n	800f44e <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x15a>
 800f3de:	f9bd 2022 	ldrsh.w	r2, [sp, #34]	; 0x22
 800f3e2:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 800f3e6:	429a      	cmp	r2, r3
 800f3e8:	db31      	blt.n	800f44e <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x15a>
 800f3ea:	f8bd c024 	ldrh.w	ip, [sp, #36]	; 0x24
 800f3ee:	4460      	add	r0, ip
 800f3f0:	f8bd c01c 	ldrh.w	ip, [sp, #28]
 800f3f4:	4461      	add	r1, ip
 800f3f6:	b200      	sxth	r0, r0
 800f3f8:	b209      	sxth	r1, r1
 800f3fa:	4288      	cmp	r0, r1
 800f3fc:	dc27      	bgt.n	800f44e <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x15a>
 800f3fe:	f8bd 1026 	ldrh.w	r1, [sp, #38]	; 0x26
 800f402:	440a      	add	r2, r1
 800f404:	f8bd 101e 	ldrh.w	r1, [sp, #30]
 800f408:	440b      	add	r3, r1
 800f40a:	b212      	sxth	r2, r2
 800f40c:	b21b      	sxth	r3, r3
 800f40e:	429a      	cmp	r2, r3
 800f410:	dc1d      	bgt.n	800f44e <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x15a>
 800f412:	6823      	ldr	r3, [r4, #0]
 800f414:	4620      	mov	r0, r4
 800f416:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800f418:	4798      	blx	r3
 800f41a:	4682      	mov	sl, r0
 800f41c:	6828      	ldr	r0, [r5, #0]
 800f41e:	6803      	ldr	r3, [r0, #0]
 800f420:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800f422:	4798      	blx	r3
 800f424:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	; 0x28
 800f428:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 800f42c:	f9bd b02c 	ldrsh.w	fp, [sp, #44]	; 0x2c
 800f430:	1a9b      	subs	r3, r3, r2
 800f432:	b29b      	uxth	r3, r3
 800f434:	b21c      	sxth	r4, r3
 800f436:	2c00      	cmp	r4, #0
 800f438:	dc0e      	bgt.n	800f458 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x164>
 800f43a:	bf1f      	itttt	ne
 800f43c:	f8ad 2020 	strhne.w	r2, [sp, #32]
 800f440:	f8bd 2024 	ldrhne.w	r2, [sp, #36]	; 0x24
 800f444:	189b      	addne	r3, r3, r2
 800f446:	f8ad 3024 	strhne.w	r3, [sp, #36]	; 0x24
 800f44a:	463c      	mov	r4, r7
 800f44c:	e00a      	b.n	800f464 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x170>
 800f44e:	4b4e      	ldr	r3, [pc, #312]	; (800f588 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x294>)
 800f450:	4a47      	ldr	r2, [pc, #284]	; (800f570 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x27c>)
 800f452:	f44f 7134 	mov.w	r1, #720	; 0x2d0
 800f456:	e75d      	b.n	800f314 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x20>
 800f458:	ebab 0303 	sub.w	r3, fp, r3
 800f45c:	eb07 0444 	add.w	r4, r7, r4, lsl #1
 800f460:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800f464:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	; 0x2a
 800f468:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
 800f46c:	1a5b      	subs	r3, r3, r1
 800f46e:	b29b      	uxth	r3, r3
 800f470:	b21a      	sxth	r2, r3
 800f472:	2a00      	cmp	r2, #0
 800f474:	dd4a      	ble.n	800f50c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x218>
 800f476:	fb02 f20b 	mul.w	r2, r2, fp
 800f47a:	eb04 0442 	add.w	r4, r4, r2, lsl #1
 800f47e:	f8bd 202e 	ldrh.w	r2, [sp, #46]	; 0x2e
 800f482:	1ad3      	subs	r3, r2, r3
 800f484:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 800f488:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 800f48c:	2b00      	cmp	r3, #0
 800f48e:	dd5d      	ble.n	800f54c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x258>
 800f490:	f9bd c02e 	ldrsh.w	ip, [sp, #46]	; 0x2e
 800f494:	f1bc 0f00 	cmp.w	ip, #0
 800f498:	dd58      	ble.n	800f54c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x258>
 800f49a:	f9bd 1022 	ldrsh.w	r1, [sp, #34]	; 0x22
 800f49e:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 800f4a2:	fb0a f801 	mul.w	r8, sl, r1
 800f4a6:	eb08 0842 	add.w	r8, r8, r2, lsl #1
 800f4aa:	4480      	add	r8, r0
 800f4ac:	8830      	ldrh	r0, [r6, #0]
 800f4ae:	f9bd 6024 	ldrsh.w	r6, [sp, #36]	; 0x24
 800f4b2:	42b3      	cmp	r3, r6
 800f4b4:	bfa8      	it	ge
 800f4b6:	4633      	movge	r3, r6
 800f4b8:	1a82      	subs	r2, r0, r2
 800f4ba:	4293      	cmp	r3, r2
 800f4bc:	bfa8      	it	ge
 800f4be:	4613      	movge	r3, r2
 800f4c0:	4a30      	ldr	r2, [pc, #192]	; (800f584 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x290>)
 800f4c2:	f9bd 6026 	ldrsh.w	r6, [sp, #38]	; 0x26
 800f4c6:	8812      	ldrh	r2, [r2, #0]
 800f4c8:	4566      	cmp	r6, ip
 800f4ca:	eba2 0101 	sub.w	r1, r2, r1
 800f4ce:	bfa8      	it	ge
 800f4d0:	4666      	movge	r6, ip
 800f4d2:	428e      	cmp	r6, r1
 800f4d4:	4632      	mov	r2, r6
 800f4d6:	bfa8      	it	ge
 800f4d8:	460a      	movge	r2, r1
 800f4da:	4298      	cmp	r0, r3
 800f4dc:	9202      	str	r2, [sp, #8]
 800f4de:	d01e      	beq.n	800f51e <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x22a>
 800f4e0:	005b      	lsls	r3, r3, #1
 800f4e2:	9303      	str	r3, [sp, #12]
 800f4e4:	ea4f 0b4b 	mov.w	fp, fp, lsl #1
 800f4e8:	f04f 0900 	mov.w	r9, #0
 800f4ec:	9b02      	ldr	r3, [sp, #8]
 800f4ee:	454b      	cmp	r3, r9
 800f4f0:	dd2c      	ble.n	800f54c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x258>
 800f4f2:	6828      	ldr	r0, [r5, #0]
 800f4f4:	6803      	ldr	r3, [r0, #0]
 800f4f6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800f4f8:	4642      	mov	r2, r8
 800f4fa:	461e      	mov	r6, r3
 800f4fc:	4621      	mov	r1, r4
 800f4fe:	9b03      	ldr	r3, [sp, #12]
 800f500:	47b0      	blx	r6
 800f502:	44d0      	add	r8, sl
 800f504:	445c      	add	r4, fp
 800f506:	f109 0901 	add.w	r9, r9, #1
 800f50a:	e7ef      	b.n	800f4ec <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x1f8>
 800f50c:	bf1f      	itttt	ne
 800f50e:	f8bd 2026 	ldrhne.w	r2, [sp, #38]	; 0x26
 800f512:	f8ad 1022 	strhne.w	r1, [sp, #34]	; 0x22
 800f516:	189b      	addne	r3, r3, r2
 800f518:	f8ad 3026 	strhne.w	r3, [sp, #38]	; 0x26
 800f51c:	e7b4      	b.n	800f488 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x194>
 800f51e:	4558      	cmp	r0, fp
 800f520:	d1de      	bne.n	800f4e0 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x1ec>
 800f522:	6828      	ldr	r0, [r5, #0]
 800f524:	6803      	ldr	r3, [r0, #0]
 800f526:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800f528:	4798      	blx	r3
 800f52a:	07c3      	lsls	r3, r0, #31
 800f52c:	d512      	bpl.n	800f554 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x260>
 800f52e:	6828      	ldr	r0, [r5, #0]
 800f530:	9b02      	ldr	r3, [sp, #8]
 800f532:	f8ad b024 	strh.w	fp, [sp, #36]	; 0x24
 800f536:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 800f53a:	6803      	ldr	r3, [r0, #0]
 800f53c:	f8cd b000 	str.w	fp, [sp]
 800f540:	6d5d      	ldr	r5, [r3, #84]	; 0x54
 800f542:	e899 0006 	ldmia.w	r9, {r1, r2}
 800f546:	4623      	mov	r3, r4
 800f548:	47a8      	blx	r5
 800f54a:	4607      	mov	r7, r0
 800f54c:	4638      	mov	r0, r7
 800f54e:	b00f      	add	sp, #60	; 0x3c
 800f550:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800f554:	6828      	ldr	r0, [r5, #0]
 800f556:	6803      	ldr	r3, [r0, #0]
 800f558:	6add      	ldr	r5, [r3, #44]	; 0x2c
 800f55a:	9b02      	ldr	r3, [sp, #8]
 800f55c:	4642      	mov	r2, r8
 800f55e:	fb03 f30a 	mul.w	r3, r3, sl
 800f562:	4621      	mov	r1, r4
 800f564:	47a8      	blx	r5
 800f566:	e7f1      	b.n	800f54c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x258>
 800f568:	20012178 	.word	0x20012178
 800f56c:	0801bab7 	.word	0x0801bab7
 800f570:	0801c2f3 	.word	0x0801c2f3
 800f574:	0801bb69 	.word	0x0801bb69
 800f578:	0801bb9b 	.word	0x0801bb9b
 800f57c:	0801bbf0 	.word	0x0801bbf0
 800f580:	20012172 	.word	0x20012172
 800f584:	20012174 	.word	0x20012174
 800f588:	0801bc2e 	.word	0x0801bc2e

0800f58c <_ZN8touchgfx8LCD16bppC1Ev>:
 800f58c:	2200      	movs	r2, #0
 800f58e:	4910      	ldr	r1, [pc, #64]	; (800f5d0 <_ZN8touchgfx8LCD16bppC1Ev+0x44>)
 800f590:	6042      	str	r2, [r0, #4]
 800f592:	6001      	str	r1, [r0, #0]
 800f594:	e9c0 2202 	strd	r2, r2, [r0, #8]
 800f598:	e9c0 2204 	strd	r2, r2, [r0, #16]
 800f59c:	e9c0 2206 	strd	r2, r2, [r0, #24]
 800f5a0:	e9c0 2208 	strd	r2, r2, [r0, #32]
 800f5a4:	e9c0 220a 	strd	r2, r2, [r0, #40]	; 0x28
 800f5a8:	e9c0 220c 	strd	r2, r2, [r0, #48]	; 0x30
 800f5ac:	e9c0 220e 	strd	r2, r2, [r0, #56]	; 0x38
 800f5b0:	e9c0 2210 	strd	r2, r2, [r0, #64]	; 0x40
 800f5b4:	e9c0 2212 	strd	r2, r2, [r0, #72]	; 0x48
 800f5b8:	e9c0 2214 	strd	r2, r2, [r0, #80]	; 0x50
 800f5bc:	e9c0 2216 	strd	r2, r2, [r0, #88]	; 0x58
 800f5c0:	e9c0 2218 	strd	r2, r2, [r0, #96]	; 0x60
 800f5c4:	e9c0 221a 	strd	r2, r2, [r0, #104]	; 0x68
 800f5c8:	e9c0 221c 	strd	r2, r2, [r0, #112]	; 0x70
 800f5cc:	4770      	bx	lr
 800f5ce:	bf00      	nop
 800f5d0:	0801bf70 	.word	0x0801bf70

0800f5d4 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>:
 800f5d4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f5d8:	460c      	mov	r4, r1
 800f5da:	b08d      	sub	sp, #52	; 0x34
 800f5dc:	4682      	mov	sl, r0
 800f5de:	6808      	ldr	r0, [r1, #0]
 800f5e0:	6849      	ldr	r1, [r1, #4]
 800f5e2:	469b      	mov	fp, r3
 800f5e4:	ab08      	add	r3, sp, #32
 800f5e6:	c303      	stmia	r3!, {r0, r1}
 800f5e8:	6810      	ldr	r0, [r2, #0]
 800f5ea:	6851      	ldr	r1, [r2, #4]
 800f5ec:	ab0a      	add	r3, sp, #40	; 0x28
 800f5ee:	c303      	stmia	r3!, {r0, r1}
 800f5f0:	a808      	add	r0, sp, #32
 800f5f2:	f7fa fe7b 	bl	800a2ec <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 800f5f6:	4621      	mov	r1, r4
 800f5f8:	a80a      	add	r0, sp, #40	; 0x28
 800f5fa:	f7fa fe5f 	bl	800a2bc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 800f5fe:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	; 0x28
 800f602:	f9bd 302a 	ldrsh.w	r3, [sp, #42]	; 0x2a
 800f606:	f8bd 1024 	ldrh.w	r1, [sp, #36]	; 0x24
 800f60a:	4c60      	ldr	r4, [pc, #384]	; (800f78c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1b8>)
 800f60c:	f9bd 802c 	ldrsh.w	r8, [sp, #44]	; 0x2c
 800f610:	6820      	ldr	r0, [r4, #0]
 800f612:	f9bd 902e 	ldrsh.w	r9, [sp, #46]	; 0x2e
 800f616:	fb11 2103 	smlabb	r1, r1, r3, r2
 800f61a:	eb0a 0a81 	add.w	sl, sl, r1, lsl #2
 800f61e:	f8bd 1020 	ldrh.w	r1, [sp, #32]
 800f622:	440a      	add	r2, r1
 800f624:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 800f628:	f8bd 2022 	ldrh.w	r2, [sp, #34]	; 0x22
 800f62c:	4413      	add	r3, r2
 800f62e:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 800f632:	6803      	ldr	r3, [r0, #0]
 800f634:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800f636:	4798      	blx	r3
 800f638:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 800f63c:	d119      	bne.n	800f672 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x9e>
 800f63e:	f010 0f20 	tst.w	r0, #32
 800f642:	6820      	ldr	r0, [r4, #0]
 800f644:	d018      	beq.n	800f678 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xa4>
 800f646:	f8bd 4024 	ldrh.w	r4, [sp, #36]	; 0x24
 800f64a:	6801      	ldr	r1, [r0, #0]
 800f64c:	9402      	str	r4, [sp, #8]
 800f64e:	fa1f f489 	uxth.w	r4, r9
 800f652:	9401      	str	r4, [sp, #4]
 800f654:	fa1f f488 	uxth.w	r4, r8
 800f658:	f8cd b00c 	str.w	fp, [sp, #12]
 800f65c:	9400      	str	r4, [sp, #0]
 800f65e:	6bcc      	ldr	r4, [r1, #60]	; 0x3c
 800f660:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 800f664:	f8bd 2028 	ldrh.w	r2, [sp, #40]	; 0x28
 800f668:	4651      	mov	r1, sl
 800f66a:	47a0      	blx	r4
 800f66c:	b00d      	add	sp, #52	; 0x34
 800f66e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800f672:	f010 0f40 	tst.w	r0, #64	; 0x40
 800f676:	e7e4      	b.n	800f642 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x6e>
 800f678:	6803      	ldr	r3, [r0, #0]
 800f67a:	6a1b      	ldr	r3, [r3, #32]
 800f67c:	4798      	blx	r3
 800f67e:	4a44      	ldr	r2, [pc, #272]	; (800f790 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1bc>)
 800f680:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	; 0x28
 800f684:	8813      	ldrh	r3, [r2, #0]
 800f686:	f9bd 402a 	ldrsh.w	r4, [sp, #42]	; 0x2a
 800f68a:	9207      	str	r2, [sp, #28]
 800f68c:	fb04 1303 	mla	r3, r4, r3, r1
 800f690:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 800f694:	ea28 73e8 	bic.w	r3, r8, r8, asr #31
 800f698:	0099      	lsls	r1, r3, #2
 800f69a:	005b      	lsls	r3, r3, #1
 800f69c:	9106      	str	r1, [sp, #24]
 800f69e:	9305      	str	r3, [sp, #20]
 800f6a0:	f04f 0c00 	mov.w	ip, #0
 800f6a4:	45cc      	cmp	ip, r9
 800f6a6:	da6b      	bge.n	800f780 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1ac>
 800f6a8:	2300      	movs	r3, #0
 800f6aa:	4543      	cmp	r3, r8
 800f6ac:	da55      	bge.n	800f75a <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x186>
 800f6ae:	f85a 4023 	ldr.w	r4, [sl, r3, lsl #2]
 800f6b2:	0e25      	lsrs	r5, r4, #24
 800f6b4:	d013      	beq.n	800f6de <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x10a>
 800f6b6:	2dff      	cmp	r5, #255	; 0xff
 800f6b8:	ea4f 2714 	mov.w	r7, r4, lsr #8
 800f6bc:	d111      	bne.n	800f6e2 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x10e>
 800f6be:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 800f6c2:	d10e      	bne.n	800f6e2 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x10e>
 800f6c4:	0962      	lsrs	r2, r4, #5
 800f6c6:	f427 67ff 	bic.w	r7, r7, #2040	; 0x7f8
 800f6ca:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 800f6ce:	f027 0707 	bic.w	r7, r7, #7
 800f6d2:	4317      	orrs	r7, r2
 800f6d4:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 800f6d8:	433c      	orrs	r4, r7
 800f6da:	f820 4013 	strh.w	r4, [r0, r3, lsl #1]
 800f6de:	3301      	adds	r3, #1
 800f6e0:	e7e3      	b.n	800f6aa <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xd6>
 800f6e2:	fb0b f505 	mul.w	r5, fp, r5
 800f6e6:	1c6a      	adds	r2, r5, #1
 800f6e8:	f830 1013 	ldrh.w	r1, [r0, r3, lsl #1]
 800f6ec:	eb02 2225 	add.w	r2, r2, r5, asr #8
 800f6f0:	1212      	asrs	r2, r2, #8
 800f6f2:	fa1f fe82 	uxth.w	lr, r2
 800f6f6:	120e      	asrs	r6, r1, #8
 800f6f8:	f3c4 4507 	ubfx	r5, r4, #16, #8
 800f6fc:	43d2      	mvns	r2, r2
 800f6fe:	b2d2      	uxtb	r2, r2
 800f700:	fb15 f50e 	smulbb	r5, r5, lr
 800f704:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 800f708:	fb06 5602 	mla	r6, r6, r2, r5
 800f70c:	b2e4      	uxtb	r4, r4
 800f70e:	10cd      	asrs	r5, r1, #3
 800f710:	00c9      	lsls	r1, r1, #3
 800f712:	b2c9      	uxtb	r1, r1
 800f714:	fb14 f40e 	smulbb	r4, r4, lr
 800f718:	fb01 4402 	mla	r4, r1, r2, r4
 800f71c:	b2ff      	uxtb	r7, r7
 800f71e:	b2b6      	uxth	r6, r6
 800f720:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 800f724:	b2a4      	uxth	r4, r4
 800f726:	fb17 f70e 	smulbb	r7, r7, lr
 800f72a:	fb05 7702 	mla	r7, r5, r2, r7
 800f72e:	1c72      	adds	r2, r6, #1
 800f730:	1c65      	adds	r5, r4, #1
 800f732:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 800f736:	eb05 2514 	add.w	r5, r5, r4, lsr #8
 800f73a:	b2bf      	uxth	r7, r7
 800f73c:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 800f740:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 800f744:	432e      	orrs	r6, r5
 800f746:	1c7d      	adds	r5, r7, #1
 800f748:	eb05 2717 	add.w	r7, r5, r7, lsr #8
 800f74c:	097f      	lsrs	r7, r7, #5
 800f74e:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 800f752:	433e      	orrs	r6, r7
 800f754:	f820 6013 	strh.w	r6, [r0, r3, lsl #1]
 800f758:	e7c1      	b.n	800f6de <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x10a>
 800f75a:	9b07      	ldr	r3, [sp, #28]
 800f75c:	9a05      	ldr	r2, [sp, #20]
 800f75e:	881b      	ldrh	r3, [r3, #0]
 800f760:	eba3 0308 	sub.w	r3, r3, r8
 800f764:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 800f768:	4418      	add	r0, r3
 800f76a:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	; 0x24
 800f76e:	9a06      	ldr	r2, [sp, #24]
 800f770:	eba3 0308 	sub.w	r3, r3, r8
 800f774:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 800f778:	449a      	add	sl, r3
 800f77a:	f10c 0c01 	add.w	ip, ip, #1
 800f77e:	e791      	b.n	800f6a4 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xd0>
 800f780:	4b02      	ldr	r3, [pc, #8]	; (800f78c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1b8>)
 800f782:	6818      	ldr	r0, [r3, #0]
 800f784:	6803      	ldr	r3, [r0, #0]
 800f786:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800f788:	4798      	blx	r3
 800f78a:	e76f      	b.n	800f66c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x98>
 800f78c:	20012178 	.word	0x20012178
 800f790:	20012172 	.word	0x20012172

0800f794 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb>:
 800f794:	b570      	push	{r4, r5, r6, lr}
 800f796:	9d04      	ldr	r5, [sp, #16]
 800f798:	f89d 6018 	ldrb.w	r6, [sp, #24]
 800f79c:	460c      	mov	r4, r1
 800f79e:	4619      	mov	r1, r3
 800f7a0:	f89d 3014 	ldrb.w	r3, [sp, #20]
 800f7a4:	2a0c      	cmp	r2, #12
 800f7a6:	d820      	bhi.n	800f7ea <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x56>
 800f7a8:	e8df f002 	tbb	[pc, r2]
 800f7ac:	18121807 	.word	0x18121807
 800f7b0:	18181818 	.word	0x18181818
 800f7b4:	18181818 	.word	0x18181818
 800f7b8:	18          	.byte	0x18
 800f7b9:	00          	.byte	0x00
 800f7ba:	6802      	ldr	r2, [r0, #0]
 800f7bc:	e9cd 3604 	strd	r3, r6, [sp, #16]
 800f7c0:	68d6      	ldr	r6, [r2, #12]
 800f7c2:	462b      	mov	r3, r5
 800f7c4:	460a      	mov	r2, r1
 800f7c6:	46b4      	mov	ip, r6
 800f7c8:	4621      	mov	r1, r4
 800f7ca:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800f7ce:	4760      	bx	ip
 800f7d0:	462a      	mov	r2, r5
 800f7d2:	4620      	mov	r0, r4
 800f7d4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800f7d8:	f7ff befc 	b.w	800f5d4 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 800f7dc:	4b03      	ldr	r3, [pc, #12]	; (800f7ec <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x58>)
 800f7de:	4a04      	ldr	r2, [pc, #16]	; (800f7f0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x5c>)
 800f7e0:	4804      	ldr	r0, [pc, #16]	; (800f7f4 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x60>)
 800f7e2:	f240 21b7 	movw	r1, #695	; 0x2b7
 800f7e6:	f008 fbb9 	bl	8017f5c <__assert_func>
 800f7ea:	bd70      	pop	{r4, r5, r6, pc}
 800f7ec:	0801bc8e 	.word	0x0801bc8e
 800f7f0:	0801c379 	.word	0x0801c379
 800f7f4:	0801bb69 	.word	0x0801bb69

0800f7f8 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>:
 800f7f8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f7fc:	b093      	sub	sp, #76	; 0x4c
 800f7fe:	880f      	ldrh	r7, [r1, #0]
 800f800:	f89d a070 	ldrb.w	sl, [sp, #112]	; 0x70
 800f804:	4681      	mov	r9, r0
 800f806:	4688      	mov	r8, r1
 800f808:	4615      	mov	r5, r2
 800f80a:	b12f      	cbz	r7, 800f818 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x20>
 800f80c:	4b71      	ldr	r3, [pc, #452]	; (800f9d4 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1dc>)
 800f80e:	4a72      	ldr	r2, [pc, #456]	; (800f9d8 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1e0>)
 800f810:	4872      	ldr	r0, [pc, #456]	; (800f9dc <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1e4>)
 800f812:	21e8      	movs	r1, #232	; 0xe8
 800f814:	f008 fba2 	bl	8017f5c <__assert_func>
 800f818:	6810      	ldr	r0, [r2, #0]
 800f81a:	6851      	ldr	r1, [r2, #4]
 800f81c:	ac0e      	add	r4, sp, #56	; 0x38
 800f81e:	c403      	stmia	r4!, {r0, r1}
 800f820:	6818      	ldr	r0, [r3, #0]
 800f822:	6859      	ldr	r1, [r3, #4]
 800f824:	ac10      	add	r4, sp, #64	; 0x40
 800f826:	c403      	stmia	r4!, {r0, r1}
 800f828:	a80e      	add	r0, sp, #56	; 0x38
 800f82a:	f7fa fd5f 	bl	800a2ec <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 800f82e:	4629      	mov	r1, r5
 800f830:	a810      	add	r0, sp, #64	; 0x40
 800f832:	f7fa fd43 	bl	800a2bc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 800f836:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	; 0x40
 800f83a:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	; 0x42
 800f83e:	f8bd 103c 	ldrh.w	r1, [sp, #60]	; 0x3c
 800f842:	4d67      	ldr	r5, [pc, #412]	; (800f9e0 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1e8>)
 800f844:	f9bd b044 	ldrsh.w	fp, [sp, #68]	; 0x44
 800f848:	6828      	ldr	r0, [r5, #0]
 800f84a:	4c66      	ldr	r4, [pc, #408]	; (800f9e4 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1ec>)
 800f84c:	fb11 2103 	smlabb	r1, r1, r3, r2
 800f850:	4489      	add	r9, r1
 800f852:	f8bd 1038 	ldrh.w	r1, [sp, #56]	; 0x38
 800f856:	440a      	add	r2, r1
 800f858:	f8ad 2040 	strh.w	r2, [sp, #64]	; 0x40
 800f85c:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 800f860:	4413      	add	r3, r2
 800f862:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 800f866:	f9bd 3046 	ldrsh.w	r3, [sp, #70]	; 0x46
 800f86a:	930a      	str	r3, [sp, #40]	; 0x28
 800f86c:	6803      	ldr	r3, [r0, #0]
 800f86e:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 800f872:	4798      	blx	r3
 800f874:	2801      	cmp	r0, #1
 800f876:	d11d      	bne.n	800f8b4 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xbc>
 800f878:	220b      	movs	r2, #11
 800f87a:	9708      	str	r7, [sp, #32]
 800f87c:	9207      	str	r2, [sp, #28]
 800f87e:	8822      	ldrh	r2, [r4, #0]
 800f880:	f8cd a010 	str.w	sl, [sp, #16]
 800f884:	e9cd 0205 	strd	r0, r2, [sp, #20]
 800f888:	f8bd 203c 	ldrh.w	r2, [sp, #60]	; 0x3c
 800f88c:	9203      	str	r2, [sp, #12]
 800f88e:	f8bd 2028 	ldrh.w	r2, [sp, #40]	; 0x28
 800f892:	9202      	str	r2, [sp, #8]
 800f894:	fa1f f28b 	uxth.w	r2, fp
 800f898:	9201      	str	r2, [sp, #4]
 800f89a:	f8bd 2042 	ldrh.w	r2, [sp, #66]	; 0x42
 800f89e:	9200      	str	r2, [sp, #0]
 800f8a0:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 800f8a4:	6828      	ldr	r0, [r5, #0]
 800f8a6:	4642      	mov	r2, r8
 800f8a8:	4649      	mov	r1, r9
 800f8aa:	f7f8 ffd7 	bl	800885c <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_>
 800f8ae:	b013      	add	sp, #76	; 0x4c
 800f8b0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800f8b4:	6828      	ldr	r0, [r5, #0]
 800f8b6:	6803      	ldr	r3, [r0, #0]
 800f8b8:	6a1b      	ldr	r3, [r3, #32]
 800f8ba:	4798      	blx	r3
 800f8bc:	8823      	ldrh	r3, [r4, #0]
 800f8be:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	; 0x42
 800f8c2:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	; 0x40
 800f8c6:	fb01 2303 	mla	r3, r1, r3, r2
 800f8ca:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 800f8ce:	ea2b 73eb 	bic.w	r3, fp, fp, asr #31
 800f8d2:	930b      	str	r3, [sp, #44]	; 0x2c
 800f8d4:	005b      	lsls	r3, r3, #1
 800f8d6:	e9cd 340c 	strd	r3, r4, [sp, #48]	; 0x30
 800f8da:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800f8dc:	429f      	cmp	r7, r3
 800f8de:	da72      	bge.n	800f9c6 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1ce>
 800f8e0:	2100      	movs	r1, #0
 800f8e2:	4559      	cmp	r1, fp
 800f8e4:	da5e      	bge.n	800f9a4 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1ac>
 800f8e6:	f819 3001 	ldrb.w	r3, [r9, r1]
 800f8ea:	2204      	movs	r2, #4
 800f8ec:	fb12 2303 	smlabb	r3, r2, r3, r2
 800f8f0:	f858 2003 	ldr.w	r2, [r8, r3]
 800f8f4:	0e15      	lsrs	r5, r2, #24
 800f8f6:	d013      	beq.n	800f920 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 800f8f8:	2dff      	cmp	r5, #255	; 0xff
 800f8fa:	ea4f 2412 	mov.w	r4, r2, lsr #8
 800f8fe:	d111      	bne.n	800f924 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 800f900:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 800f904:	d10e      	bne.n	800f924 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 800f906:	0953      	lsrs	r3, r2, #5
 800f908:	f424 64ff 	bic.w	r4, r4, #2040	; 0x7f8
 800f90c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 800f910:	f024 0407 	bic.w	r4, r4, #7
 800f914:	431c      	orrs	r4, r3
 800f916:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 800f91a:	4314      	orrs	r4, r2
 800f91c:	f820 4011 	strh.w	r4, [r0, r1, lsl #1]
 800f920:	3101      	adds	r1, #1
 800f922:	e7de      	b.n	800f8e2 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xea>
 800f924:	fb0a f505 	mul.w	r5, sl, r5
 800f928:	1c6b      	adds	r3, r5, #1
 800f92a:	f830 c011 	ldrh.w	ip, [r0, r1, lsl #1]
 800f92e:	eb03 2325 	add.w	r3, r3, r5, asr #8
 800f932:	121b      	asrs	r3, r3, #8
 800f934:	fa1f fe83 	uxth.w	lr, r3
 800f938:	ea4f 262c 	mov.w	r6, ip, asr #8
 800f93c:	f3c2 4507 	ubfx	r5, r2, #16, #8
 800f940:	43db      	mvns	r3, r3
 800f942:	b2db      	uxtb	r3, r3
 800f944:	fb15 f50e 	smulbb	r5, r5, lr
 800f948:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 800f94c:	fb06 5603 	mla	r6, r6, r3, r5
 800f950:	b2d2      	uxtb	r2, r2
 800f952:	ea4f 05ec 	mov.w	r5, ip, asr #3
 800f956:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 800f95a:	fa5f fc8c 	uxtb.w	ip, ip
 800f95e:	fb12 f20e 	smulbb	r2, r2, lr
 800f962:	fb0c 2203 	mla	r2, ip, r3, r2
 800f966:	b2e4      	uxtb	r4, r4
 800f968:	b2b6      	uxth	r6, r6
 800f96a:	fb14 f40e 	smulbb	r4, r4, lr
 800f96e:	b292      	uxth	r2, r2
 800f970:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 800f974:	fb05 4503 	mla	r5, r5, r3, r4
 800f978:	1c73      	adds	r3, r6, #1
 800f97a:	1c54      	adds	r4, r2, #1
 800f97c:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 800f980:	eb04 2412 	add.w	r4, r4, r2, lsr #8
 800f984:	b2ad      	uxth	r5, r5
 800f986:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 800f98a:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 800f98e:	4326      	orrs	r6, r4
 800f990:	1c6c      	adds	r4, r5, #1
 800f992:	eb04 2415 	add.w	r4, r4, r5, lsr #8
 800f996:	0964      	lsrs	r4, r4, #5
 800f998:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 800f99c:	4326      	orrs	r6, r4
 800f99e:	f820 6011 	strh.w	r6, [r0, r1, lsl #1]
 800f9a2:	e7bd      	b.n	800f920 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 800f9a4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800f9a6:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 800f9a8:	881b      	ldrh	r3, [r3, #0]
 800f9aa:	eba3 030b 	sub.w	r3, r3, fp
 800f9ae:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 800f9b2:	4418      	add	r0, r3
 800f9b4:	f9bd 303c 	ldrsh.w	r3, [sp, #60]	; 0x3c
 800f9b8:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800f9ba:	eba3 030b 	sub.w	r3, r3, fp
 800f9be:	4413      	add	r3, r2
 800f9c0:	4499      	add	r9, r3
 800f9c2:	3701      	adds	r7, #1
 800f9c4:	e789      	b.n	800f8da <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xe2>
 800f9c6:	4b06      	ldr	r3, [pc, #24]	; (800f9e0 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1e8>)
 800f9c8:	6818      	ldr	r0, [r3, #0]
 800f9ca:	6803      	ldr	r3, [r0, #0]
 800f9cc:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800f9ce:	4798      	blx	r3
 800f9d0:	e76d      	b.n	800f8ae <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xb6>
 800f9d2:	bf00      	nop
 800f9d4:	0801ba67 	.word	0x0801ba67
 800f9d8:	0801c14a 	.word	0x0801c14a
 800f9dc:	0801bb69 	.word	0x0801bb69
 800f9e0:	20012178 	.word	0x20012178
 800f9e4:	20012172 	.word	0x20012172

0800f9e8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>:
 800f9e8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f9ec:	4614      	mov	r4, r2
 800f9ee:	880a      	ldrh	r2, [r1, #0]
 800f9f0:	b093      	sub	sp, #76	; 0x4c
 800f9f2:	2a02      	cmp	r2, #2
 800f9f4:	4606      	mov	r6, r0
 800f9f6:	4689      	mov	r9, r1
 800f9f8:	f89d 7070 	ldrb.w	r7, [sp, #112]	; 0x70
 800f9fc:	d006      	beq.n	800fa0c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x24>
 800f9fe:	4b7a      	ldr	r3, [pc, #488]	; (800fbe8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x200>)
 800fa00:	4a7a      	ldr	r2, [pc, #488]	; (800fbec <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x204>)
 800fa02:	487b      	ldr	r0, [pc, #492]	; (800fbf0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x208>)
 800fa04:	f44f 71a1 	mov.w	r1, #322	; 0x142
 800fa08:	f008 faa8 	bl	8017f5c <__assert_func>
 800fa0c:	2f00      	cmp	r7, #0
 800fa0e:	d04b      	beq.n	800faa8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xc0>
 800fa10:	6820      	ldr	r0, [r4, #0]
 800fa12:	6861      	ldr	r1, [r4, #4]
 800fa14:	f8df a1e0 	ldr.w	sl, [pc, #480]	; 800fbf8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x210>
 800fa18:	ad0e      	add	r5, sp, #56	; 0x38
 800fa1a:	c503      	stmia	r5!, {r0, r1}
 800fa1c:	6818      	ldr	r0, [r3, #0]
 800fa1e:	6859      	ldr	r1, [r3, #4]
 800fa20:	ad10      	add	r5, sp, #64	; 0x40
 800fa22:	c503      	stmia	r5!, {r0, r1}
 800fa24:	a80e      	add	r0, sp, #56	; 0x38
 800fa26:	f7fa fc61 	bl	800a2ec <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 800fa2a:	4621      	mov	r1, r4
 800fa2c:	a810      	add	r0, sp, #64	; 0x40
 800fa2e:	f7fa fc45 	bl	800a2bc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 800fa32:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	; 0x40
 800fa36:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	; 0x42
 800fa3a:	f8bd 103c 	ldrh.w	r1, [sp, #60]	; 0x3c
 800fa3e:	f8da 0000 	ldr.w	r0, [sl]
 800fa42:	f9bd 5044 	ldrsh.w	r5, [sp, #68]	; 0x44
 800fa46:	f9bd 8046 	ldrsh.w	r8, [sp, #70]	; 0x46
 800fa4a:	fb11 2103 	smlabb	r1, r1, r3, r2
 800fa4e:	1874      	adds	r4, r6, r1
 800fa50:	f8bd 1038 	ldrh.w	r1, [sp, #56]	; 0x38
 800fa54:	4e67      	ldr	r6, [pc, #412]	; (800fbf4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x20c>)
 800fa56:	440a      	add	r2, r1
 800fa58:	f8ad 2040 	strh.w	r2, [sp, #64]	; 0x40
 800fa5c:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 800fa60:	4413      	add	r3, r2
 800fa62:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 800fa66:	6803      	ldr	r3, [r0, #0]
 800fa68:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 800fa6c:	4798      	blx	r3
 800fa6e:	2801      	cmp	r0, #1
 800fa70:	d11d      	bne.n	800faae <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xc6>
 800fa72:	2200      	movs	r2, #0
 800fa74:	210b      	movs	r1, #11
 800fa76:	e9cd 1207 	strd	r1, r2, [sp, #28]
 800fa7a:	8831      	ldrh	r1, [r6, #0]
 800fa7c:	9704      	str	r7, [sp, #16]
 800fa7e:	e9cd 2105 	strd	r2, r1, [sp, #20]
 800fa82:	f8bd 203c 	ldrh.w	r2, [sp, #60]	; 0x3c
 800fa86:	9203      	str	r2, [sp, #12]
 800fa88:	fa1f f288 	uxth.w	r2, r8
 800fa8c:	9202      	str	r2, [sp, #8]
 800fa8e:	b2ad      	uxth	r5, r5
 800fa90:	f8bd 2042 	ldrh.w	r2, [sp, #66]	; 0x42
 800fa94:	9200      	str	r2, [sp, #0]
 800fa96:	9501      	str	r5, [sp, #4]
 800fa98:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 800fa9c:	f8da 0000 	ldr.w	r0, [sl]
 800faa0:	464a      	mov	r2, r9
 800faa2:	4621      	mov	r1, r4
 800faa4:	f7f8 feda 	bl	800885c <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_>
 800faa8:	b013      	add	sp, #76	; 0x4c
 800faaa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800faae:	f8da 0000 	ldr.w	r0, [sl]
 800fab2:	6803      	ldr	r3, [r0, #0]
 800fab4:	6a1b      	ldr	r3, [r3, #32]
 800fab6:	4798      	blx	r3
 800fab8:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	; 0x40
 800fabc:	8833      	ldrh	r3, [r6, #0]
 800fabe:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	; 0x42
 800fac2:	fb01 2303 	mla	r3, r1, r3, r2
 800fac6:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 800faca:	2fff      	cmp	r7, #255	; 0xff
 800facc:	f109 0304 	add.w	r3, r9, #4
 800fad0:	930a      	str	r3, [sp, #40]	; 0x28
 800fad2:	ea25 72e5 	bic.w	r2, r5, r5, asr #31
 800fad6:	d111      	bne.n	800fafc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x114>
 800fad8:	b212      	sxth	r2, r2
 800fada:	ea4f 0e42 	mov.w	lr, r2, lsl #1
 800fade:	2100      	movs	r1, #0
 800fae0:	4541      	cmp	r1, r8
 800fae2:	da7a      	bge.n	800fbda <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x1f2>
 800fae4:	2300      	movs	r3, #0
 800fae6:	42ab      	cmp	r3, r5
 800fae8:	da6b      	bge.n	800fbc2 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x1da>
 800faea:	f814 c003 	ldrb.w	ip, [r4, r3]
 800faee:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 800faf0:	f837 c01c 	ldrh.w	ip, [r7, ip, lsl #1]
 800faf4:	f820 c013 	strh.w	ip, [r0, r3, lsl #1]
 800faf8:	3301      	adds	r3, #1
 800fafa:	e7f4      	b.n	800fae6 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xfe>
 800fafc:	b213      	sxth	r3, r2
 800fafe:	f1c7 0cff 	rsb	ip, r7, #255	; 0xff
 800fb02:	930b      	str	r3, [sp, #44]	; 0x2c
 800fb04:	005b      	lsls	r3, r3, #1
 800fb06:	930c      	str	r3, [sp, #48]	; 0x30
 800fb08:	f04f 0900 	mov.w	r9, #0
 800fb0c:	b2ba      	uxth	r2, r7
 800fb0e:	fa1f fc8c 	uxth.w	ip, ip
 800fb12:	960d      	str	r6, [sp, #52]	; 0x34
 800fb14:	45c1      	cmp	r9, r8
 800fb16:	da60      	bge.n	800fbda <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x1f2>
 800fb18:	46a3      	mov	fp, r4
 800fb1a:	4682      	mov	sl, r0
 800fb1c:	ebab 0304 	sub.w	r3, fp, r4
 800fb20:	429d      	cmp	r5, r3
 800fb22:	dd3e      	ble.n	800fba2 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x1ba>
 800fb24:	f81b 3b01 	ldrb.w	r3, [fp], #1
 800fb28:	9e0a      	ldr	r6, [sp, #40]	; 0x28
 800fb2a:	f8ba 1000 	ldrh.w	r1, [sl]
 800fb2e:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 800fb32:	120e      	asrs	r6, r1, #8
 800fb34:	121f      	asrs	r7, r3, #8
 800fb36:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 800fb3a:	fb16 f60c 	smulbb	r6, r6, ip
 800fb3e:	ea4f 0ee1 	mov.w	lr, r1, asr #3
 800fb42:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 800fb46:	00c9      	lsls	r1, r1, #3
 800fb48:	fb07 6702 	mla	r7, r7, r2, r6
 800fb4c:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 800fb50:	10de      	asrs	r6, r3, #3
 800fb52:	b2c9      	uxtb	r1, r1
 800fb54:	00db      	lsls	r3, r3, #3
 800fb56:	fb1e fe0c 	smulbb	lr, lr, ip
 800fb5a:	fb11 f10c 	smulbb	r1, r1, ip
 800fb5e:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 800fb62:	b2db      	uxtb	r3, r3
 800fb64:	b2bf      	uxth	r7, r7
 800fb66:	fb06 e602 	mla	r6, r6, r2, lr
 800fb6a:	fb03 1302 	mla	r3, r3, r2, r1
 800fb6e:	b2b6      	uxth	r6, r6
 800fb70:	b29b      	uxth	r3, r3
 800fb72:	1c79      	adds	r1, r7, #1
 800fb74:	eb01 2717 	add.w	r7, r1, r7, lsr #8
 800fb78:	f106 0e01 	add.w	lr, r6, #1
 800fb7c:	1c59      	adds	r1, r3, #1
 800fb7e:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 800fb82:	eb0e 2e16 	add.w	lr, lr, r6, lsr #8
 800fb86:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 800fb8a:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 800fb8e:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 800fb92:	430f      	orrs	r7, r1
 800fb94:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 800fb98:	ea47 070e 	orr.w	r7, r7, lr
 800fb9c:	f82a 7b02 	strh.w	r7, [sl], #2
 800fba0:	e7bc      	b.n	800fb1c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x134>
 800fba2:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800fba4:	990c      	ldr	r1, [sp, #48]	; 0x30
 800fba6:	881b      	ldrh	r3, [r3, #0]
 800fba8:	1b5b      	subs	r3, r3, r5
 800fbaa:	eb01 0343 	add.w	r3, r1, r3, lsl #1
 800fbae:	4418      	add	r0, r3
 800fbb0:	f9bd 303c 	ldrsh.w	r3, [sp, #60]	; 0x3c
 800fbb4:	990b      	ldr	r1, [sp, #44]	; 0x2c
 800fbb6:	1b5b      	subs	r3, r3, r5
 800fbb8:	440b      	add	r3, r1
 800fbba:	441c      	add	r4, r3
 800fbbc:	f109 0901 	add.w	r9, r9, #1
 800fbc0:	e7a8      	b.n	800fb14 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x12c>
 800fbc2:	8833      	ldrh	r3, [r6, #0]
 800fbc4:	1b5b      	subs	r3, r3, r5
 800fbc6:	eb0e 0343 	add.w	r3, lr, r3, lsl #1
 800fbca:	4418      	add	r0, r3
 800fbcc:	f9bd 303c 	ldrsh.w	r3, [sp, #60]	; 0x3c
 800fbd0:	1b5b      	subs	r3, r3, r5
 800fbd2:	4413      	add	r3, r2
 800fbd4:	441c      	add	r4, r3
 800fbd6:	3101      	adds	r1, #1
 800fbd8:	e782      	b.n	800fae0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xf8>
 800fbda:	4b07      	ldr	r3, [pc, #28]	; (800fbf8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x210>)
 800fbdc:	6818      	ldr	r0, [r3, #0]
 800fbde:	6803      	ldr	r3, [r0, #0]
 800fbe0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800fbe2:	4798      	blx	r3
 800fbe4:	e760      	b.n	800faa8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xc0>
 800fbe6:	bf00      	nop
 800fbe8:	0801b925 	.word	0x0801b925
 800fbec:	0801bfb4 	.word	0x0801bfb4
 800fbf0:	0801bb69 	.word	0x0801bb69
 800fbf4:	20012172 	.word	0x20012172
 800fbf8:	20012178 	.word	0x20012178

0800fbfc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>:
 800fbfc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800fc00:	4616      	mov	r6, r2
 800fc02:	880a      	ldrh	r2, [r1, #0]
 800fc04:	b093      	sub	sp, #76	; 0x4c
 800fc06:	2a01      	cmp	r2, #1
 800fc08:	4681      	mov	r9, r0
 800fc0a:	4688      	mov	r8, r1
 800fc0c:	f89d a070 	ldrb.w	sl, [sp, #112]	; 0x70
 800fc10:	d006      	beq.n	800fc20 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x24>
 800fc12:	4b6c      	ldr	r3, [pc, #432]	; (800fdc4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1c8>)
 800fc14:	4a6c      	ldr	r2, [pc, #432]	; (800fdc8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1cc>)
 800fc16:	486d      	ldr	r0, [pc, #436]	; (800fdcc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1d0>)
 800fc18:	f240 119d 	movw	r1, #413	; 0x19d
 800fc1c:	f008 f99e 	bl	8017f5c <__assert_func>
 800fc20:	f1ba 0f00 	cmp.w	sl, #0
 800fc24:	d04a      	beq.n	800fcbc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xc0>
 800fc26:	6830      	ldr	r0, [r6, #0]
 800fc28:	6871      	ldr	r1, [r6, #4]
 800fc2a:	4d69      	ldr	r5, [pc, #420]	; (800fdd0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1d4>)
 800fc2c:	ac0e      	add	r4, sp, #56	; 0x38
 800fc2e:	c403      	stmia	r4!, {r0, r1}
 800fc30:	6818      	ldr	r0, [r3, #0]
 800fc32:	6859      	ldr	r1, [r3, #4]
 800fc34:	ac10      	add	r4, sp, #64	; 0x40
 800fc36:	c403      	stmia	r4!, {r0, r1}
 800fc38:	a80e      	add	r0, sp, #56	; 0x38
 800fc3a:	f7fa fb57 	bl	800a2ec <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 800fc3e:	4631      	mov	r1, r6
 800fc40:	a810      	add	r0, sp, #64	; 0x40
 800fc42:	f7fa fb3b 	bl	800a2bc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 800fc46:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	; 0x40
 800fc4a:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	; 0x42
 800fc4e:	f8bd 103c 	ldrh.w	r1, [sp, #60]	; 0x3c
 800fc52:	6828      	ldr	r0, [r5, #0]
 800fc54:	f9bd 6044 	ldrsh.w	r6, [sp, #68]	; 0x44
 800fc58:	4c5e      	ldr	r4, [pc, #376]	; (800fdd4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1d8>)
 800fc5a:	fb11 2103 	smlabb	r1, r1, r3, r2
 800fc5e:	4489      	add	r9, r1
 800fc60:	f8bd 1038 	ldrh.w	r1, [sp, #56]	; 0x38
 800fc64:	440a      	add	r2, r1
 800fc66:	f8ad 2040 	strh.w	r2, [sp, #64]	; 0x40
 800fc6a:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 800fc6e:	4413      	add	r3, r2
 800fc70:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 800fc74:	f9bd 3046 	ldrsh.w	r3, [sp, #70]	; 0x46
 800fc78:	930a      	str	r3, [sp, #40]	; 0x28
 800fc7a:	6803      	ldr	r3, [r0, #0]
 800fc7c:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 800fc80:	4798      	blx	r3
 800fc82:	2801      	cmp	r0, #1
 800fc84:	d11d      	bne.n	800fcc2 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xc6>
 800fc86:	220b      	movs	r2, #11
 800fc88:	2100      	movs	r1, #0
 800fc8a:	e9cd 2107 	strd	r2, r1, [sp, #28]
 800fc8e:	8822      	ldrh	r2, [r4, #0]
 800fc90:	f8cd a010 	str.w	sl, [sp, #16]
 800fc94:	e9cd 0205 	strd	r0, r2, [sp, #20]
 800fc98:	f8bd 203c 	ldrh.w	r2, [sp, #60]	; 0x3c
 800fc9c:	9203      	str	r2, [sp, #12]
 800fc9e:	f8bd 2028 	ldrh.w	r2, [sp, #40]	; 0x28
 800fca2:	9202      	str	r2, [sp, #8]
 800fca4:	b2b6      	uxth	r6, r6
 800fca6:	f8bd 2042 	ldrh.w	r2, [sp, #66]	; 0x42
 800fcaa:	9200      	str	r2, [sp, #0]
 800fcac:	9601      	str	r6, [sp, #4]
 800fcae:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 800fcb2:	6828      	ldr	r0, [r5, #0]
 800fcb4:	4642      	mov	r2, r8
 800fcb6:	4649      	mov	r1, r9
 800fcb8:	f7f8 fdd0 	bl	800885c <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_>
 800fcbc:	b013      	add	sp, #76	; 0x4c
 800fcbe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800fcc2:	6828      	ldr	r0, [r5, #0]
 800fcc4:	6803      	ldr	r3, [r0, #0]
 800fcc6:	6a1b      	ldr	r3, [r3, #32]
 800fcc8:	4798      	blx	r3
 800fcca:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	; 0x42
 800fcce:	8823      	ldrh	r3, [r4, #0]
 800fcd0:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	; 0x40
 800fcd4:	940d      	str	r4, [sp, #52]	; 0x34
 800fcd6:	fb01 2303 	mla	r3, r1, r3, r2
 800fcda:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 800fcde:	ea26 73e6 	bic.w	r3, r6, r6, asr #31
 800fce2:	930b      	str	r3, [sp, #44]	; 0x2c
 800fce4:	ea6f 010a 	mvn.w	r1, sl
 800fce8:	005b      	lsls	r3, r3, #1
 800fcea:	930c      	str	r3, [sp, #48]	; 0x30
 800fcec:	f04f 0e00 	mov.w	lr, #0
 800fcf0:	b2c9      	uxtb	r1, r1
 800fcf2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800fcf4:	459e      	cmp	lr, r3
 800fcf6:	da5f      	bge.n	800fdb8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1bc>
 800fcf8:	2700      	movs	r7, #0
 800fcfa:	fa1f fb8a 	uxth.w	fp, sl
 800fcfe:	42b7      	cmp	r7, r6
 800fd00:	da4a      	bge.n	800fd98 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x19c>
 800fd02:	f819 3007 	ldrb.w	r3, [r9, r7]
 800fd06:	2203      	movs	r2, #3
 800fd08:	2404      	movs	r4, #4
 800fd0a:	fb12 4303 	smlabb	r3, r2, r3, r4
 800fd0e:	eb08 0403 	add.w	r4, r8, r3
 800fd12:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 800fd16:	78a2      	ldrb	r2, [r4, #2]
 800fd18:	7865      	ldrb	r5, [r4, #1]
 800fd1a:	f818 c003 	ldrb.w	ip, [r8, r3]
 800fd1e:	d10c      	bne.n	800fd3a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x13e>
 800fd20:	4b2d      	ldr	r3, [pc, #180]	; (800fdd8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1dc>)
 800fd22:	00ed      	lsls	r5, r5, #3
 800fd24:	ea03 2202 	and.w	r2, r3, r2, lsl #8
 800fd28:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 800fd2c:	432a      	orrs	r2, r5
 800fd2e:	ea42 02dc 	orr.w	r2, r2, ip, lsr #3
 800fd32:	f820 2017 	strh.w	r2, [r0, r7, lsl #1]
 800fd36:	3701      	adds	r7, #1
 800fd38:	e7e1      	b.n	800fcfe <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x102>
 800fd3a:	f830 3017 	ldrh.w	r3, [r0, r7, lsl #1]
 800fd3e:	121c      	asrs	r4, r3, #8
 800fd40:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 800fd44:	fb12 f20b 	smulbb	r2, r2, fp
 800fd48:	fb04 2201 	mla	r2, r4, r1, r2
 800fd4c:	10dc      	asrs	r4, r3, #3
 800fd4e:	00db      	lsls	r3, r3, #3
 800fd50:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 800fd54:	b2db      	uxtb	r3, r3
 800fd56:	fb15 f50b 	smulbb	r5, r5, fp
 800fd5a:	fb1c fc0b 	smulbb	ip, ip, fp
 800fd5e:	b292      	uxth	r2, r2
 800fd60:	fb04 5501 	mla	r5, r4, r1, r5
 800fd64:	fb03 cc01 	mla	ip, r3, r1, ip
 800fd68:	b2ad      	uxth	r5, r5
 800fd6a:	fa1f fc8c 	uxth.w	ip, ip
 800fd6e:	1c53      	adds	r3, r2, #1
 800fd70:	eb03 2212 	add.w	r2, r3, r2, lsr #8
 800fd74:	1c6c      	adds	r4, r5, #1
 800fd76:	f10c 0301 	add.w	r3, ip, #1
 800fd7a:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 800fd7e:	eb04 2515 	add.w	r5, r4, r5, lsr #8
 800fd82:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 800fd86:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 800fd8a:	096d      	lsrs	r5, r5, #5
 800fd8c:	ea42 020c 	orr.w	r2, r2, ip
 800fd90:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 800fd94:	432a      	orrs	r2, r5
 800fd96:	e7cc      	b.n	800fd32 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x136>
 800fd98:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800fd9a:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 800fd9c:	881b      	ldrh	r3, [r3, #0]
 800fd9e:	1b9b      	subs	r3, r3, r6
 800fda0:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 800fda4:	4418      	add	r0, r3
 800fda6:	f9bd 303c 	ldrsh.w	r3, [sp, #60]	; 0x3c
 800fdaa:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800fdac:	1b9b      	subs	r3, r3, r6
 800fdae:	4413      	add	r3, r2
 800fdb0:	4499      	add	r9, r3
 800fdb2:	f10e 0e01 	add.w	lr, lr, #1
 800fdb6:	e79c      	b.n	800fcf2 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xf6>
 800fdb8:	4b05      	ldr	r3, [pc, #20]	; (800fdd0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1d4>)
 800fdba:	6818      	ldr	r0, [r3, #0]
 800fdbc:	6803      	ldr	r3, [r0, #0]
 800fdbe:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800fdc0:	4798      	blx	r3
 800fdc2:	e77b      	b.n	800fcbc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xc0>
 800fdc4:	0801b973 	.word	0x0801b973
 800fdc8:	0801c03d 	.word	0x0801c03d
 800fdcc:	0801bb69 	.word	0x0801bb69
 800fdd0:	20012178 	.word	0x20012178
 800fdd4:	20012172 	.word	0x20012172
 800fdd8:	fffff800 	.word	0xfffff800

0800fddc <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>:
 800fddc:	b430      	push	{r4, r5}
 800fdde:	780d      	ldrb	r5, [r1, #0]
 800fde0:	f89d 4008 	ldrb.w	r4, [sp, #8]
 800fde4:	2d01      	cmp	r5, #1
 800fde6:	d00a      	beq.n	800fdfe <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x22>
 800fde8:	d305      	bcc.n	800fdf6 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x1a>
 800fdea:	2d02      	cmp	r5, #2
 800fdec:	d10b      	bne.n	800fe06 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x2a>
 800fdee:	9402      	str	r4, [sp, #8]
 800fdf0:	bc30      	pop	{r4, r5}
 800fdf2:	f7ff bdf9 	b.w	800f9e8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>
 800fdf6:	9402      	str	r4, [sp, #8]
 800fdf8:	bc30      	pop	{r4, r5}
 800fdfa:	f7ff bcfd 	b.w	800f7f8 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>
 800fdfe:	9402      	str	r4, [sp, #8]
 800fe00:	bc30      	pop	{r4, r5}
 800fe02:	f7ff befb 	b.w	800fbfc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>
 800fe06:	bc30      	pop	{r4, r5}
 800fe08:	4770      	bx	lr
	...

0800fe0c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>:
 800fe0c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800fe10:	4605      	mov	r5, r0
 800fe12:	b089      	sub	sp, #36	; 0x24
 800fe14:	6810      	ldr	r0, [r2, #0]
 800fe16:	f89d 9048 	ldrb.w	r9, [sp, #72]	; 0x48
 800fe1a:	460c      	mov	r4, r1
 800fe1c:	6851      	ldr	r1, [r2, #4]
 800fe1e:	ae04      	add	r6, sp, #16
 800fe20:	c603      	stmia	r6!, {r0, r1}
 800fe22:	6818      	ldr	r0, [r3, #0]
 800fe24:	6859      	ldr	r1, [r3, #4]
 800fe26:	ae06      	add	r6, sp, #24
 800fe28:	4617      	mov	r7, r2
 800fe2a:	c603      	stmia	r6!, {r0, r1}
 800fe2c:	a804      	add	r0, sp, #16
 800fe2e:	f7fa fa5d 	bl	800a2ec <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 800fe32:	4639      	mov	r1, r7
 800fe34:	a806      	add	r0, sp, #24
 800fe36:	f7fa fa41 	bl	800a2bc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 800fe3a:	f9bd 2018 	ldrsh.w	r2, [sp, #24]
 800fe3e:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 800fe42:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 800fe46:	f9bd 801c 	ldrsh.w	r8, [sp, #28]
 800fe4a:	fb11 2103 	smlabb	r1, r1, r3, r2
 800fe4e:	eb05 0541 	add.w	r5, r5, r1, lsl #1
 800fe52:	440c      	add	r4, r1
 800fe54:	f8bd 1010 	ldrh.w	r1, [sp, #16]
 800fe58:	440a      	add	r2, r1
 800fe5a:	f8ad 2018 	strh.w	r2, [sp, #24]
 800fe5e:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800fe62:	4413      	add	r3, r2
 800fe64:	f8ad 301a 	strh.w	r3, [sp, #26]
 800fe68:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 800fe6c:	9300      	str	r3, [sp, #0]
 800fe6e:	4b80      	ldr	r3, [pc, #512]	; (8010070 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x264>)
 800fe70:	6818      	ldr	r0, [r3, #0]
 800fe72:	6803      	ldr	r3, [r0, #0]
 800fe74:	6a1b      	ldr	r3, [r3, #32]
 800fe76:	4798      	blx	r3
 800fe78:	4b7e      	ldr	r3, [pc, #504]	; (8010074 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x268>)
 800fe7a:	f9bd 601a 	ldrsh.w	r6, [sp, #26]
 800fe7e:	881a      	ldrh	r2, [r3, #0]
 800fe80:	f9bd 1018 	ldrsh.w	r1, [sp, #24]
 800fe84:	fb06 1202 	mla	r2, r6, r2, r1
 800fe88:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 800fe8c:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 800fe90:	ea28 72e8 	bic.w	r2, r8, r8, asr #31
 800fe94:	b212      	sxth	r2, r2
 800fe96:	d117      	bne.n	800fec8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0xbc>
 800fe98:	9201      	str	r2, [sp, #4]
 800fe9a:	ea4f 0b42 	mov.w	fp, r2, lsl #1
 800fe9e:	f04f 0a00 	mov.w	sl, #0
 800fea2:	9302      	str	r3, [sp, #8]
 800fea4:	9b00      	ldr	r3, [sp, #0]
 800fea6:	459a      	cmp	sl, r3
 800fea8:	f280 80d9 	bge.w	801005e <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x252>
 800feac:	2100      	movs	r1, #0
 800feae:	4541      	cmp	r1, r8
 800feb0:	f280 80c1 	bge.w	8010036 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x22a>
 800feb4:	5c63      	ldrb	r3, [r4, r1]
 800feb6:	b12b      	cbz	r3, 800fec4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0xb8>
 800feb8:	2bff      	cmp	r3, #255	; 0xff
 800feba:	f835 e011 	ldrh.w	lr, [r5, r1, lsl #1]
 800febe:	d176      	bne.n	800ffae <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x1a2>
 800fec0:	f820 e011 	strh.w	lr, [r0, r1, lsl #1]
 800fec4:	3101      	adds	r1, #1
 800fec6:	e7f2      	b.n	800feae <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0xa2>
 800fec8:	9202      	str	r2, [sp, #8]
 800feca:	0052      	lsls	r2, r2, #1
 800fecc:	9201      	str	r2, [sp, #4]
 800fece:	f04f 0b00 	mov.w	fp, #0
 800fed2:	9303      	str	r3, [sp, #12]
 800fed4:	9b00      	ldr	r3, [sp, #0]
 800fed6:	459b      	cmp	fp, r3
 800fed8:	f280 80c1 	bge.w	801005e <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x252>
 800fedc:	f04f 0c00 	mov.w	ip, #0
 800fee0:	45c4      	cmp	ip, r8
 800fee2:	da4f      	bge.n	800ff84 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x178>
 800fee4:	f814 300c 	ldrb.w	r3, [r4, ip]
 800fee8:	2b00      	cmp	r3, #0
 800feea:	d048      	beq.n	800ff7e <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x172>
 800feec:	fb09 f303 	mul.w	r3, r9, r3
 800fef0:	1c5a      	adds	r2, r3, #1
 800fef2:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 800fef6:	121b      	asrs	r3, r3, #8
 800fef8:	d041      	beq.n	800ff7e <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x172>
 800fefa:	f830 201c 	ldrh.w	r2, [r0, ip, lsl #1]
 800fefe:	f835 e01c 	ldrh.w	lr, [r5, ip, lsl #1]
 800ff02:	b29e      	uxth	r6, r3
 800ff04:	1211      	asrs	r1, r2, #8
 800ff06:	43db      	mvns	r3, r3
 800ff08:	b2db      	uxtb	r3, r3
 800ff0a:	ea4f 272e 	mov.w	r7, lr, asr #8
 800ff0e:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 800ff12:	fb11 f103 	smulbb	r1, r1, r3
 800ff16:	ea4f 0ae2 	mov.w	sl, r2, asr #3
 800ff1a:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 800ff1e:	00d2      	lsls	r2, r2, #3
 800ff20:	fb07 1706 	mla	r7, r7, r6, r1
 800ff24:	b2d2      	uxtb	r2, r2
 800ff26:	ea4f 01ee 	mov.w	r1, lr, asr #3
 800ff2a:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 800ff2e:	fb12 f203 	smulbb	r2, r2, r3
 800ff32:	fa5f fe8e 	uxtb.w	lr, lr
 800ff36:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 800ff3a:	fb0e 2206 	mla	r2, lr, r6, r2
 800ff3e:	fb1a fa03 	smulbb	sl, sl, r3
 800ff42:	b2bf      	uxth	r7, r7
 800ff44:	b292      	uxth	r2, r2
 800ff46:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 800ff4a:	fb01 a106 	mla	r1, r1, r6, sl
 800ff4e:	1c7b      	adds	r3, r7, #1
 800ff50:	f102 0a01 	add.w	sl, r2, #1
 800ff54:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 800ff58:	eb0a 2a12 	add.w	sl, sl, r2, lsr #8
 800ff5c:	b289      	uxth	r1, r1
 800ff5e:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 800ff62:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 800ff66:	ea47 070a 	orr.w	r7, r7, sl
 800ff6a:	f101 0a01 	add.w	sl, r1, #1
 800ff6e:	eb0a 2111 	add.w	r1, sl, r1, lsr #8
 800ff72:	0949      	lsrs	r1, r1, #5
 800ff74:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 800ff78:	430f      	orrs	r7, r1
 800ff7a:	f820 701c 	strh.w	r7, [r0, ip, lsl #1]
 800ff7e:	f10c 0c01 	add.w	ip, ip, #1
 800ff82:	e7ad      	b.n	800fee0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0xd4>
 800ff84:	9b03      	ldr	r3, [sp, #12]
 800ff86:	9a01      	ldr	r2, [sp, #4]
 800ff88:	881b      	ldrh	r3, [r3, #0]
 800ff8a:	eba3 0308 	sub.w	r3, r3, r8
 800ff8e:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 800ff92:	4418      	add	r0, r3
 800ff94:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 800ff98:	eba3 0308 	sub.w	r3, r3, r8
 800ff9c:	eb02 0243 	add.w	r2, r2, r3, lsl #1
 800ffa0:	4415      	add	r5, r2
 800ffa2:	9a02      	ldr	r2, [sp, #8]
 800ffa4:	4413      	add	r3, r2
 800ffa6:	441c      	add	r4, r3
 800ffa8:	f10b 0b01 	add.w	fp, fp, #1
 800ffac:	e792      	b.n	800fed4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0xc8>
 800ffae:	f830 2011 	ldrh.w	r2, [r0, r1, lsl #1]
 800ffb2:	b29f      	uxth	r7, r3
 800ffb4:	1216      	asrs	r6, r2, #8
 800ffb6:	43db      	mvns	r3, r3
 800ffb8:	b2db      	uxtb	r3, r3
 800ffba:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 800ffbe:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 800ffc2:	fb16 f603 	smulbb	r6, r6, r3
 800ffc6:	ea4f 09e2 	mov.w	r9, r2, asr #3
 800ffca:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 800ffce:	00d2      	lsls	r2, r2, #3
 800ffd0:	fb0c 6c07 	mla	ip, ip, r7, r6
 800ffd4:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 800ffd8:	ea4f 06ee 	mov.w	r6, lr, asr #3
 800ffdc:	b2d2      	uxtb	r2, r2
 800ffde:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 800ffe2:	fa1f fc8c 	uxth.w	ip, ip
 800ffe6:	fb19 f903 	smulbb	r9, r9, r3
 800ffea:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 800ffee:	fa5f fe8e 	uxtb.w	lr, lr
 800fff2:	fb12 f203 	smulbb	r2, r2, r3
 800fff6:	fb06 9607 	mla	r6, r6, r7, r9
 800fffa:	fb0e 2207 	mla	r2, lr, r7, r2
 800fffe:	f10c 0901 	add.w	r9, ip, #1
 8010002:	b292      	uxth	r2, r2
 8010004:	eb09 2c1c 	add.w	ip, r9, ip, lsr #8
 8010008:	f40c 4978 	and.w	r9, ip, #63488	; 0xf800
 801000c:	f102 0c01 	add.w	ip, r2, #1
 8010010:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 8010014:	b2b6      	uxth	r6, r6
 8010016:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801001a:	ea49 0c02 	orr.w	ip, r9, r2
 801001e:	f106 0901 	add.w	r9, r6, #1
 8010022:	eb09 2616 	add.w	r6, r9, r6, lsr #8
 8010026:	0976      	lsrs	r6, r6, #5
 8010028:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801002c:	ea4c 0c06 	orr.w	ip, ip, r6
 8010030:	f820 c011 	strh.w	ip, [r0, r1, lsl #1]
 8010034:	e746      	b.n	800fec4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0xb8>
 8010036:	9b02      	ldr	r3, [sp, #8]
 8010038:	881b      	ldrh	r3, [r3, #0]
 801003a:	eba3 0308 	sub.w	r3, r3, r8
 801003e:	eb0b 0343 	add.w	r3, fp, r3, lsl #1
 8010042:	4418      	add	r0, r3
 8010044:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 8010048:	eba3 0308 	sub.w	r3, r3, r8
 801004c:	eb0b 0243 	add.w	r2, fp, r3, lsl #1
 8010050:	4415      	add	r5, r2
 8010052:	9a01      	ldr	r2, [sp, #4]
 8010054:	4413      	add	r3, r2
 8010056:	441c      	add	r4, r3
 8010058:	f10a 0a01 	add.w	sl, sl, #1
 801005c:	e722      	b.n	800fea4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x98>
 801005e:	4b04      	ldr	r3, [pc, #16]	; (8010070 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x264>)
 8010060:	6818      	ldr	r0, [r3, #0]
 8010062:	6803      	ldr	r3, [r0, #0]
 8010064:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8010066:	4798      	blx	r3
 8010068:	b009      	add	sp, #36	; 0x24
 801006a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801006e:	bf00      	nop
 8010070:	20012178 	.word	0x20012178
 8010074:	20012172 	.word	0x20012172

08010078 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb>:
 8010078:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801007c:	b089      	sub	sp, #36	; 0x24
 801007e:	4682      	mov	sl, r0
 8010080:	f89d 604c 	ldrb.w	r6, [sp, #76]	; 0x4c
 8010084:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8010086:	460d      	mov	r5, r1
 8010088:	4691      	mov	r9, r2
 801008a:	4698      	mov	r8, r3
 801008c:	b3ae      	cbz	r6, 80100fa <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x82>
 801008e:	4608      	mov	r0, r1
 8010090:	f7fc fa96 	bl	800c5c0 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8010094:	4607      	mov	r7, r0
 8010096:	4628      	mov	r0, r5
 8010098:	f7fc facc 	bl	800c634 <_ZNK8touchgfx6Bitmap9getHeightEv>
 801009c:	f8ad 000e 	strh.w	r0, [sp, #14]
 80100a0:	4628      	mov	r0, r5
 80100a2:	f8ad 9008 	strh.w	r9, [sp, #8]
 80100a6:	f8ad 800a 	strh.w	r8, [sp, #10]
 80100aa:	f8ad 700c 	strh.w	r7, [sp, #12]
 80100ae:	f7fc fc13 	bl	800c8d8 <_ZNK8touchgfx6Bitmap9getFormatEv>
 80100b2:	b178      	cbz	r0, 80100d4 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x5c>
 80100b4:	4628      	mov	r0, r5
 80100b6:	f7fc fc0f 	bl	800c8d8 <_ZNK8touchgfx6Bitmap9getFormatEv>
 80100ba:	2802      	cmp	r0, #2
 80100bc:	d00a      	beq.n	80100d4 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x5c>
 80100be:	4628      	mov	r0, r5
 80100c0:	f7fc fc0a 	bl	800c8d8 <_ZNK8touchgfx6Bitmap9getFormatEv>
 80100c4:	280b      	cmp	r0, #11
 80100c6:	d005      	beq.n	80100d4 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x5c>
 80100c8:	4b69      	ldr	r3, [pc, #420]	; (8010270 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1f8>)
 80100ca:	4a6a      	ldr	r2, [pc, #424]	; (8010274 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1fc>)
 80100cc:	486a      	ldr	r0, [pc, #424]	; (8010278 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x200>)
 80100ce:	214b      	movs	r1, #75	; 0x4b
 80100d0:	f007 ff44 	bl	8017f5c <__assert_func>
 80100d4:	4628      	mov	r0, r5
 80100d6:	f7fc fb7b 	bl	800c7d0 <_ZNK8touchgfx6Bitmap7getDataEv>
 80100da:	4607      	mov	r7, r0
 80100dc:	4628      	mov	r0, r5
 80100de:	f7fc fba9 	bl	800c834 <_ZNK8touchgfx6Bitmap12getExtraDataEv>
 80100e2:	4681      	mov	r9, r0
 80100e4:	4628      	mov	r0, r5
 80100e6:	f7fc fbf7 	bl	800c8d8 <_ZNK8touchgfx6Bitmap9getFormatEv>
 80100ea:	2802      	cmp	r0, #2
 80100ec:	d108      	bne.n	8010100 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x88>
 80100ee:	4633      	mov	r3, r6
 80100f0:	4622      	mov	r2, r4
 80100f2:	a902      	add	r1, sp, #8
 80100f4:	4638      	mov	r0, r7
 80100f6:	f7ff fa6d 	bl	800f5d4 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 80100fa:	b009      	add	sp, #36	; 0x24
 80100fc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010100:	4628      	mov	r0, r5
 8010102:	f7fc fbe9 	bl	800c8d8 <_ZNK8touchgfx6Bitmap9getFormatEv>
 8010106:	280b      	cmp	r0, #11
 8010108:	d107      	bne.n	801011a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xa2>
 801010a:	9600      	str	r6, [sp, #0]
 801010c:	4623      	mov	r3, r4
 801010e:	aa02      	add	r2, sp, #8
 8010110:	4649      	mov	r1, r9
 8010112:	4638      	mov	r0, r7
 8010114:	f7ff fe62 	bl	800fddc <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>
 8010118:	e7ef      	b.n	80100fa <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x82>
 801011a:	4628      	mov	r0, r5
 801011c:	f7fc fb1e 	bl	800c75c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 8010120:	b950      	cbnz	r0, 8010138 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xc0>
 8010122:	e9cd 6000 	strd	r6, r0, [sp]
 8010126:	f8da 3000 	ldr.w	r3, [sl]
 801012a:	aa02      	add	r2, sp, #8
 801012c:	68dd      	ldr	r5, [r3, #12]
 801012e:	4639      	mov	r1, r7
 8010130:	4623      	mov	r3, r4
 8010132:	4650      	mov	r0, sl
 8010134:	47a8      	blx	r5
 8010136:	e7e0      	b.n	80100fa <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x82>
 8010138:	f10d 0818 	add.w	r8, sp, #24
 801013c:	4629      	mov	r1, r5
 801013e:	4640      	mov	r0, r8
 8010140:	f7fc fab2 	bl	800c6a8 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 8010144:	e898 0003 	ldmia.w	r8, {r0, r1}
 8010148:	ad04      	add	r5, sp, #16
 801014a:	e885 0003 	stmia.w	r5, {r0, r1}
 801014e:	4628      	mov	r0, r5
 8010150:	4621      	mov	r1, r4
 8010152:	f7f7 fc2f 	bl	80079b4 <_ZN8touchgfx4RectaNERKS0_>
 8010156:	4628      	mov	r0, r5
 8010158:	f7f7 fc6f 	bl	8007a3a <_ZNK8touchgfx4Rect7isEmptyEv>
 801015c:	b138      	cbz	r0, 801016e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xf6>
 801015e:	9600      	str	r6, [sp, #0]
 8010160:	4623      	mov	r3, r4
 8010162:	aa02      	add	r2, sp, #8
 8010164:	4649      	mov	r1, r9
 8010166:	4638      	mov	r0, r7
 8010168:	f7ff fe50 	bl	800fe0c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801016c:	e7c5      	b.n	80100fa <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x82>
 801016e:	e9cd 6000 	strd	r6, r0, [sp]
 8010172:	f8da 3000 	ldr.w	r3, [sl]
 8010176:	aa02      	add	r2, sp, #8
 8010178:	f8d3 b00c 	ldr.w	fp, [r3, #12]
 801017c:	4639      	mov	r1, r7
 801017e:	462b      	mov	r3, r5
 8010180:	4650      	mov	r0, sl
 8010182:	47d8      	blx	fp
 8010184:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8010188:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 801018c:	4293      	cmp	r3, r2
 801018e:	dd13      	ble.n	80101b8 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x140>
 8010190:	f9b4 0000 	ldrsh.w	r0, [r4]
 8010194:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8010198:	f8ad 0018 	strh.w	r0, [sp, #24]
 801019c:	1a9b      	subs	r3, r3, r2
 801019e:	f8ad 201a 	strh.w	r2, [sp, #26]
 80101a2:	f8ad 101c 	strh.w	r1, [sp, #28]
 80101a6:	f8ad 301e 	strh.w	r3, [sp, #30]
 80101aa:	9600      	str	r6, [sp, #0]
 80101ac:	4643      	mov	r3, r8
 80101ae:	aa02      	add	r2, sp, #8
 80101b0:	4649      	mov	r1, r9
 80101b2:	4638      	mov	r0, r7
 80101b4:	f7ff fe2a 	bl	800fe0c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 80101b8:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 80101bc:	f9b4 2000 	ldrsh.w	r2, [r4]
 80101c0:	4293      	cmp	r3, r2
 80101c2:	dd13      	ble.n	80101ec <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x174>
 80101c4:	1a9b      	subs	r3, r3, r2
 80101c6:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 80101ca:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 80101ce:	f8ad 2018 	strh.w	r2, [sp, #24]
 80101d2:	f8ad 001a 	strh.w	r0, [sp, #26]
 80101d6:	f8ad 301c 	strh.w	r3, [sp, #28]
 80101da:	f8ad 101e 	strh.w	r1, [sp, #30]
 80101de:	9600      	str	r6, [sp, #0]
 80101e0:	4643      	mov	r3, r8
 80101e2:	aa02      	add	r2, sp, #8
 80101e4:	4649      	mov	r1, r9
 80101e6:	4638      	mov	r0, r7
 80101e8:	f7ff fe10 	bl	800fe0c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 80101ec:	88a2      	ldrh	r2, [r4, #4]
 80101ee:	8823      	ldrh	r3, [r4, #0]
 80101f0:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 80101f4:	4413      	add	r3, r2
 80101f6:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 80101fa:	440a      	add	r2, r1
 80101fc:	b29b      	uxth	r3, r3
 80101fe:	b292      	uxth	r2, r2
 8010200:	b211      	sxth	r1, r2
 8010202:	b218      	sxth	r0, r3
 8010204:	4288      	cmp	r0, r1
 8010206:	dd13      	ble.n	8010230 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1b8>
 8010208:	1a9b      	subs	r3, r3, r2
 801020a:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 801020e:	f9bd 5012 	ldrsh.w	r5, [sp, #18]
 8010212:	f8ad 1018 	strh.w	r1, [sp, #24]
 8010216:	f8ad 301c 	strh.w	r3, [sp, #28]
 801021a:	f8ad 001e 	strh.w	r0, [sp, #30]
 801021e:	9600      	str	r6, [sp, #0]
 8010220:	4643      	mov	r3, r8
 8010222:	aa02      	add	r2, sp, #8
 8010224:	4649      	mov	r1, r9
 8010226:	4638      	mov	r0, r7
 8010228:	f8ad 501a 	strh.w	r5, [sp, #26]
 801022c:	f7ff fdee 	bl	800fe0c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 8010230:	88e2      	ldrh	r2, [r4, #6]
 8010232:	8863      	ldrh	r3, [r4, #2]
 8010234:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 8010238:	4413      	add	r3, r2
 801023a:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 801023e:	440a      	add	r2, r1
 8010240:	b29b      	uxth	r3, r3
 8010242:	b292      	uxth	r2, r2
 8010244:	b211      	sxth	r1, r2
 8010246:	b218      	sxth	r0, r3
 8010248:	4288      	cmp	r0, r1
 801024a:	f77f af56 	ble.w	80100fa <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x82>
 801024e:	f9b4 5000 	ldrsh.w	r5, [r4]
 8010252:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8010256:	f8ad 5018 	strh.w	r5, [sp, #24]
 801025a:	1a9b      	subs	r3, r3, r2
 801025c:	f8ad 301e 	strh.w	r3, [sp, #30]
 8010260:	f8ad 101a 	strh.w	r1, [sp, #26]
 8010264:	f8ad 001c 	strh.w	r0, [sp, #28]
 8010268:	9600      	str	r6, [sp, #0]
 801026a:	4643      	mov	r3, r8
 801026c:	e779      	b.n	8010162 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xea>
 801026e:	bf00      	nop
 8010270:	0801b9c1 	.word	0x0801b9c1
 8010274:	0801c0c6 	.word	0x0801c0c6
 8010278:	0801bb69 	.word	0x0801bb69

0801027c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>:
 801027c:	b508      	push	{r3, lr}
 801027e:	b180      	cbz	r0, 80102a2 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x26>
 8010280:	2902      	cmp	r1, #2
 8010282:	d014      	beq.n	80102ae <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x32>
 8010284:	2903      	cmp	r1, #3
 8010286:	d01d      	beq.n	80102c4 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x48>
 8010288:	2901      	cmp	r1, #1
 801028a:	d101      	bne.n	8010290 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x14>
 801028c:	2001      	movs	r0, #1
 801028e:	bd08      	pop	{r3, pc}
 8010290:	4b0e      	ldr	r3, [pc, #56]	; (80102cc <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 8010292:	8818      	ldrh	r0, [r3, #0]
 8010294:	b990      	cbnz	r0, 80102bc <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 8010296:	4b0e      	ldr	r3, [pc, #56]	; (80102d0 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x54>)
 8010298:	4a0e      	ldr	r2, [pc, #56]	; (80102d4 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x58>)
 801029a:	480f      	ldr	r0, [pc, #60]	; (80102d8 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x5c>)
 801029c:	2154      	movs	r1, #84	; 0x54
 801029e:	f007 fe5d 	bl	8017f5c <__assert_func>
 80102a2:	2902      	cmp	r1, #2
 80102a4:	d00e      	beq.n	80102c4 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x48>
 80102a6:	2903      	cmp	r1, #3
 80102a8:	d0f2      	beq.n	8010290 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x14>
 80102aa:	2901      	cmp	r1, #1
 80102ac:	d1ee      	bne.n	801028c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x10>
 80102ae:	4b07      	ldr	r3, [pc, #28]	; (80102cc <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 80102b0:	8818      	ldrh	r0, [r3, #0]
 80102b2:	2800      	cmp	r0, #0
 80102b4:	d0ef      	beq.n	8010296 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x1a>
 80102b6:	f3c0 000e 	ubfx	r0, r0, #0, #15
 80102ba:	e7e8      	b.n	801028e <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x12>
 80102bc:	f3c0 000e 	ubfx	r0, r0, #0, #15
 80102c0:	4240      	negs	r0, r0
 80102c2:	e7e4      	b.n	801028e <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x12>
 80102c4:	f04f 30ff 	mov.w	r0, #4294967295
 80102c8:	e7e1      	b.n	801028e <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x12>
 80102ca:	bf00      	nop
 80102cc:	20012172 	.word	0x20012172
 80102d0:	0801bcc3 	.word	0x0801bcc3
 80102d4:	0801c243 	.word	0x0801c243
 80102d8:	0801bd05 	.word	0x0801bd05

080102dc <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>:
 80102dc:	b508      	push	{r3, lr}
 80102de:	b180      	cbz	r0, 8010302 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x26>
 80102e0:	2902      	cmp	r1, #2
 80102e2:	d014      	beq.n	801030e <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x32>
 80102e4:	2903      	cmp	r1, #3
 80102e6:	d018      	beq.n	801031a <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x3e>
 80102e8:	2901      	cmp	r1, #1
 80102ea:	d001      	beq.n	80102f0 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x14>
 80102ec:	2001      	movs	r0, #1
 80102ee:	e013      	b.n	8010318 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x3c>
 80102f0:	4b0e      	ldr	r3, [pc, #56]	; (801032c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 80102f2:	8818      	ldrh	r0, [r3, #0]
 80102f4:	b970      	cbnz	r0, 8010314 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x38>
 80102f6:	4b0e      	ldr	r3, [pc, #56]	; (8010330 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x54>)
 80102f8:	4a0e      	ldr	r2, [pc, #56]	; (8010334 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x58>)
 80102fa:	480f      	ldr	r0, [pc, #60]	; (8010338 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x5c>)
 80102fc:	2154      	movs	r1, #84	; 0x54
 80102fe:	f007 fe2d 	bl	8017f5c <__assert_func>
 8010302:	2902      	cmp	r1, #2
 8010304:	d009      	beq.n	801031a <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x3e>
 8010306:	2903      	cmp	r1, #3
 8010308:	d0f0      	beq.n	80102ec <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x10>
 801030a:	2901      	cmp	r1, #1
 801030c:	d1f0      	bne.n	80102f0 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x14>
 801030e:	f04f 30ff 	mov.w	r0, #4294967295
 8010312:	e001      	b.n	8010318 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x3c>
 8010314:	f3c0 000e 	ubfx	r0, r0, #0, #15
 8010318:	bd08      	pop	{r3, pc}
 801031a:	4b04      	ldr	r3, [pc, #16]	; (801032c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 801031c:	8818      	ldrh	r0, [r3, #0]
 801031e:	2800      	cmp	r0, #0
 8010320:	d0e9      	beq.n	80102f6 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x1a>
 8010322:	f3c0 000e 	ubfx	r0, r0, #0, #15
 8010326:	4240      	negs	r0, r0
 8010328:	e7f6      	b.n	8010318 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x3c>
 801032a:	bf00      	nop
 801032c:	20012172 	.word	0x20012172
 8010330:	0801bcc3 	.word	0x0801bcc3
 8010334:	0801c243 	.word	0x0801c243
 8010338:	0801bd05 	.word	0x0801bd05

0801033c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE>:
 801033c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010340:	b097      	sub	sp, #92	; 0x5c
 8010342:	910a      	str	r1, [sp, #40]	; 0x28
 8010344:	a912      	add	r1, sp, #72	; 0x48
 8010346:	e881 000c 	stmia.w	r1, {r2, r3}
 801034a:	f9bd 3084 	ldrsh.w	r3, [sp, #132]	; 0x84
 801034e:	9307      	str	r3, [sp, #28]
 8010350:	e9dd 2124 	ldrd	r2, r1, [sp, #144]	; 0x90
 8010354:	f89d 309c 	ldrb.w	r3, [sp, #156]	; 0x9c
 8010358:	930f      	str	r3, [sp, #60]	; 0x3c
 801035a:	f89d 30a8 	ldrb.w	r3, [sp, #168]	; 0xa8
 801035e:	930b      	str	r3, [sp, #44]	; 0x2c
 8010360:	7b4b      	ldrb	r3, [r1, #13]
 8010362:	798d      	ldrb	r5, [r1, #6]
 8010364:	f9bd 6080 	ldrsh.w	r6, [sp, #128]	; 0x80
 8010368:	f8bd 7088 	ldrh.w	r7, [sp, #136]	; 0x88
 801036c:	f8bd 408c 	ldrh.w	r4, [sp, #140]	; 0x8c
 8010370:	f89d 80a4 	ldrb.w	r8, [sp, #164]	; 0xa4
 8010374:	f89d 90ac 	ldrb.w	r9, [sp, #172]	; 0xac
 8010378:	0158      	lsls	r0, r3, #5
 801037a:	f400 7080 	and.w	r0, r0, #256	; 0x100
 801037e:	4328      	orrs	r0, r5
 8010380:	9006      	str	r0, [sp, #24]
 8010382:	f000 8156 	beq.w	8010632 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2f6>
 8010386:	011b      	lsls	r3, r3, #4
 8010388:	79c8      	ldrb	r0, [r1, #7]
 801038a:	f403 7380 	and.w	r3, r3, #256	; 0x100
 801038e:	4303      	orrs	r3, r0
 8010390:	9308      	str	r3, [sp, #32]
 8010392:	f000 814e 	beq.w	8010632 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2f6>
 8010396:	f991 3009 	ldrsb.w	r3, [r1, #9]
 801039a:	b29b      	uxth	r3, r3
 801039c:	2f00      	cmp	r7, #0
 801039e:	f000 80f2 	beq.w	8010586 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x24a>
 80103a2:	1aff      	subs	r7, r7, r3
 80103a4:	b2bf      	uxth	r7, r7
 80103a6:	043b      	lsls	r3, r7, #16
 80103a8:	d502      	bpl.n	80103b0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x74>
 80103aa:	1bf6      	subs	r6, r6, r7
 80103ac:	b236      	sxth	r6, r6
 80103ae:	2700      	movs	r7, #0
 80103b0:	f9b2 1000 	ldrsh.w	r1, [r2]
 80103b4:	f8b2 a002 	ldrh.w	sl, [r2, #2]
 80103b8:	f8bd 5018 	ldrh.w	r5, [sp, #24]
 80103bc:	428e      	cmp	r6, r1
 80103be:	b28b      	uxth	r3, r1
 80103c0:	bfbf      	itttt	lt
 80103c2:	18ff      	addlt	r7, r7, r3
 80103c4:	1bbe      	sublt	r6, r7, r6
 80103c6:	b2b7      	uxthlt	r7, r6
 80103c8:	460e      	movlt	r6, r1
 80103ca:	8891      	ldrh	r1, [r2, #4]
 80103cc:	440b      	add	r3, r1
 80103ce:	b21b      	sxth	r3, r3
 80103d0:	930e      	str	r3, [sp, #56]	; 0x38
 80103d2:	88d3      	ldrh	r3, [r2, #6]
 80103d4:	9a07      	ldr	r2, [sp, #28]
 80103d6:	449a      	add	sl, r3
 80103d8:	fa0f f38a 	sxth.w	r3, sl
 80103dc:	930d      	str	r3, [sp, #52]	; 0x34
 80103de:	4bbc      	ldr	r3, [pc, #752]	; (80106d0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x394>)
 80103e0:	f8bd a020 	ldrh.w	sl, [sp, #32]
 80103e4:	f893 b000 	ldrb.w	fp, [r3]
 80103e8:	f10b 3cff 	add.w	ip, fp, #4294967295
 80103ec:	f1dc 0300 	rsbs	r3, ip, #0
 80103f0:	eb43 030c 	adc.w	r3, r3, ip
 80103f4:	930c      	str	r3, [sp, #48]	; 0x30
 80103f6:	4631      	mov	r1, r6
 80103f8:	464b      	mov	r3, r9
 80103fa:	a812      	add	r0, sp, #72	; 0x48
 80103fc:	f7f9 fe4e 	bl	800a09c <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>
 8010400:	4631      	mov	r1, r6
 8010402:	f8ad 0054 	strh.w	r0, [sp, #84]	; 0x54
 8010406:	464b      	mov	r3, r9
 8010408:	9a07      	ldr	r2, [sp, #28]
 801040a:	a812      	add	r0, sp, #72	; 0x48
 801040c:	f7f9 fe5e 	bl	800a0cc <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>
 8010410:	a916      	add	r1, sp, #88	; 0x58
 8010412:	f821 0d02 	strh.w	r0, [r1, #-2]!
 8010416:	a815      	add	r0, sp, #84	; 0x54
 8010418:	f7f9 ff3a 	bl	800a290 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>
 801041c:	f1b9 0f00 	cmp.w	r9, #0
 8010420:	f040 80b4 	bne.w	801058c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x250>
 8010424:	f1bb 0f01 	cmp.w	fp, #1
 8010428:	f040 80b8 	bne.w	801059c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x260>
 801042c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801042e:	2b00      	cmp	r3, #0
 8010430:	f040 8104 	bne.w	801063c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x300>
 8010434:	4ba7      	ldr	r3, [pc, #668]	; (80106d4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x398>)
 8010436:	6818      	ldr	r0, [r3, #0]
 8010438:	6803      	ldr	r3, [r0, #0]
 801043a:	6a1b      	ldr	r3, [r3, #32]
 801043c:	4798      	blx	r3
 801043e:	4aa6      	ldr	r2, [pc, #664]	; (80106d8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x39c>)
 8010440:	f9bd 3056 	ldrsh.w	r3, [sp, #86]	; 0x56
 8010444:	8811      	ldrh	r1, [r2, #0]
 8010446:	f9bd 2054 	ldrsh.w	r2, [sp, #84]	; 0x54
 801044a:	fb01 2303 	mla	r3, r1, r3, r2
 801044e:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8010452:	9308      	str	r3, [sp, #32]
 8010454:	2301      	movs	r3, #1
 8010456:	fa03 f308 	lsl.w	r3, r3, r8
 801045a:	3b01      	subs	r3, #1
 801045c:	b2db      	uxtb	r3, r3
 801045e:	f1b8 0f01 	cmp.w	r8, #1
 8010462:	9310      	str	r3, [sp, #64]	; 0x40
 8010464:	f000 80ec 	beq.w	8010640 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x304>
 8010468:	f1b8 0f02 	cmp.w	r8, #2
 801046c:	f000 80ea 	beq.w	8010644 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x308>
 8010470:	f1b8 0f04 	cmp.w	r8, #4
 8010474:	bf14      	ite	ne
 8010476:	2301      	movne	r3, #1
 8010478:	2311      	moveq	r3, #17
 801047a:	9309      	str	r3, [sp, #36]	; 0x24
 801047c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801047e:	b153      	cbz	r3, 8010496 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x15a>
 8010480:	9a06      	ldr	r2, [sp, #24]
 8010482:	2508      	movs	r5, #8
 8010484:	fb95 f3f8 	sdiv	r3, r5, r8
 8010488:	1e5d      	subs	r5, r3, #1
 801048a:	4415      	add	r5, r2
 801048c:	fb95 f5f3 	sdiv	r5, r5, r3
 8010490:	fb15 f503 	smulbb	r5, r5, r3
 8010494:	b2ad      	uxth	r5, r5
 8010496:	b907      	cbnz	r7, 801049a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x15e>
 8010498:	b16c      	cbz	r4, 80104b6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x17a>
 801049a:	fb04 7305 	mla	r3, r4, r5, r7
 801049e:	9a26      	ldr	r2, [sp, #152]	; 0x98
 80104a0:	fb08 f303 	mul.w	r3, r8, r3
 80104a4:	ebaa 0a04 	sub.w	sl, sl, r4
 80104a8:	eb02 02d3 	add.w	r2, r2, r3, lsr #3
 80104ac:	9226      	str	r2, [sp, #152]	; 0x98
 80104ae:	fa1f fa8a 	uxth.w	sl, sl
 80104b2:	f003 0407 	and.w	r4, r3, #7
 80104b6:	4649      	mov	r1, r9
 80104b8:	980c      	ldr	r0, [sp, #48]	; 0x30
 80104ba:	f7ff fedf 	bl	801027c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>
 80104be:	4649      	mov	r1, r9
 80104c0:	4683      	mov	fp, r0
 80104c2:	980c      	ldr	r0, [sp, #48]	; 0x30
 80104c4:	f7ff ff0a 	bl	80102dc <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>
 80104c8:	9a07      	ldr	r2, [sp, #28]
 80104ca:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80104cc:	1a9b      	subs	r3, r3, r2
 80104ce:	459a      	cmp	sl, r3
 80104d0:	bfa8      	it	ge
 80104d2:	469a      	movge	sl, r3
 80104d4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80104d6:	1bf6      	subs	r6, r6, r7
 80104d8:	1b9e      	subs	r6, r3, r6
 80104da:	9b06      	ldr	r3, [sp, #24]
 80104dc:	429e      	cmp	r6, r3
 80104de:	bfd4      	ite	le
 80104e0:	ebc7 0706 	rsble	r7, r7, r6
 80104e4:	ebc7 0703 	rsbgt	r7, r7, r3
 80104e8:	1bed      	subs	r5, r5, r7
 80104ea:	fb08 f305 	mul.w	r3, r8, r5
 80104ee:	9307      	str	r3, [sp, #28]
 80104f0:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80104f2:	781a      	ldrb	r2, [r3, #0]
 80104f4:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80104f6:	0a1b      	lsrs	r3, r3, #8
 80104f8:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 80104fc:	930d      	str	r3, [sp, #52]	; 0x34
 80104fe:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8010500:	08db      	lsrs	r3, r3, #3
 8010502:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 8010506:	930e      	str	r3, [sp, #56]	; 0x38
 8010508:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801050a:	00db      	lsls	r3, r3, #3
 801050c:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8010510:	930f      	str	r3, [sp, #60]	; 0x3c
 8010512:	ea4f 034b 	mov.w	r3, fp, lsl #1
 8010516:	fb0b 0b17 	mls	fp, fp, r7, r0
 801051a:	ea27 70e7 	bic.w	r0, r7, r7, asr #31
 801051e:	4358      	muls	r0, r3
 8010520:	9306      	str	r3, [sp, #24]
 8010522:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8010524:	4122      	asrs	r2, r4
 8010526:	b29b      	uxth	r3, r3
 8010528:	b2d2      	uxtb	r2, r2
 801052a:	9311      	str	r3, [sp, #68]	; 0x44
 801052c:	eb00 0b4b 	add.w	fp, r0, fp, lsl #1
 8010530:	f1ba 0f00 	cmp.w	sl, #0
 8010534:	f340 80e5 	ble.w	8010702 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3c6>
 8010538:	f8dd c020 	ldr.w	ip, [sp, #32]
 801053c:	46be      	mov	lr, r7
 801053e:	f1be 0f00 	cmp.w	lr, #0
 8010542:	f340 80cb 	ble.w	80106dc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a0>
 8010546:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8010548:	4013      	ands	r3, r2
 801054a:	d00a      	beq.n	8010562 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x226>
 801054c:	9909      	ldr	r1, [sp, #36]	; 0x24
 801054e:	fb13 f301 	smulbb	r3, r3, r1
 8010552:	2bfe      	cmp	r3, #254	; 0xfe
 8010554:	dd78      	ble.n	8010648 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x30c>
 8010556:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8010558:	29ff      	cmp	r1, #255	; 0xff
 801055a:	d175      	bne.n	8010648 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x30c>
 801055c:	9811      	ldr	r0, [sp, #68]	; 0x44
 801055e:	f8ac 0000 	strh.w	r0, [ip]
 8010562:	4444      	add	r4, r8
 8010564:	b2a4      	uxth	r4, r4
 8010566:	2c07      	cmp	r4, #7
 8010568:	bf81      	itttt	hi
 801056a:	9b26      	ldrhi	r3, [sp, #152]	; 0x98
 801056c:	785a      	ldrbhi	r2, [r3, #1]
 801056e:	3301      	addhi	r3, #1
 8010570:	9326      	strhi	r3, [sp, #152]	; 0x98
 8010572:	9b06      	ldr	r3, [sp, #24]
 8010574:	bf9a      	itte	ls
 8010576:	fa42 f208 	asrls.w	r2, r2, r8
 801057a:	b2d2      	uxtbls	r2, r2
 801057c:	2400      	movhi	r4, #0
 801057e:	449c      	add	ip, r3
 8010580:	f10e 3eff 	add.w	lr, lr, #4294967295
 8010584:	e7db      	b.n	801053e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x202>
 8010586:	441e      	add	r6, r3
 8010588:	b236      	sxth	r6, r6
 801058a:	e711      	b.n	80103b0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x74>
 801058c:	f1b9 0f01 	cmp.w	r9, #1
 8010590:	f47f af4c 	bne.w	801042c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf0>
 8010594:	f1bb 0f01 	cmp.w	fp, #1
 8010598:	f47f af48 	bne.w	801042c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf0>
 801059c:	f8df b134 	ldr.w	fp, [pc, #308]	; 80106d4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x398>
 80105a0:	f8db 0000 	ldr.w	r0, [fp]
 80105a4:	6803      	ldr	r3, [r0, #0]
 80105a6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80105a8:	4798      	blx	r3
 80105aa:	f010 0380 	ands.w	r3, r0, #128	; 0x80
 80105ae:	465a      	mov	r2, fp
 80105b0:	d006      	beq.n	80105c0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x284>
 80105b2:	f1b8 0f04 	cmp.w	r8, #4
 80105b6:	d13f      	bne.n	8010638 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2fc>
 80105b8:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80105ba:	3300      	adds	r3, #0
 80105bc:	bf18      	it	ne
 80105be:	2301      	movne	r3, #1
 80105c0:	05c0      	lsls	r0, r0, #23
 80105c2:	f140 80a7 	bpl.w	8010714 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3d8>
 80105c6:	f1b8 0f08 	cmp.w	r8, #8
 80105ca:	f040 80a3 	bne.w	8010714 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3d8>
 80105ce:	2b00      	cmp	r3, #0
 80105d0:	bf0c      	ite	eq
 80105d2:	f44f 7180 	moveq.w	r1, #256	; 0x100
 80105d6:	2180      	movne	r1, #128	; 0x80
 80105d8:	2f00      	cmp	r7, #0
 80105da:	f47f af27 	bne.w	801042c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf0>
 80105de:	2c00      	cmp	r4, #0
 80105e0:	f47f af24 	bne.w	801042c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf0>
 80105e4:	9b06      	ldr	r3, [sp, #24]
 80105e6:	980e      	ldr	r0, [sp, #56]	; 0x38
 80105e8:	18f3      	adds	r3, r6, r3
 80105ea:	4283      	cmp	r3, r0
 80105ec:	f73f af1e 	bgt.w	801042c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf0>
 80105f0:	e9dd 0307 	ldrd	r0, r3, [sp, #28]
 80105f4:	4403      	add	r3, r0
 80105f6:	980d      	ldr	r0, [sp, #52]	; 0x34
 80105f8:	4283      	cmp	r3, r0
 80105fa:	f73f af17 	bgt.w	801042c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf0>
 80105fe:	6810      	ldr	r0, [r2, #0]
 8010600:	f8bd 3056 	ldrh.w	r3, [sp, #86]	; 0x56
 8010604:	6804      	ldr	r4, [r0, #0]
 8010606:	9105      	str	r1, [sp, #20]
 8010608:	f1b8 0f08 	cmp.w	r8, #8
 801060c:	bf18      	it	ne
 801060e:	3501      	addne	r5, #1
 8010610:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8010612:	9104      	str	r1, [sp, #16]
 8010614:	bf18      	it	ne
 8010616:	f025 0501 	bicne.w	r5, r5, #1
 801061a:	9928      	ldr	r1, [sp, #160]	; 0xa0
 801061c:	f8bd 2054 	ldrh.w	r2, [sp, #84]	; 0x54
 8010620:	bf18      	it	ne
 8010622:	b2ad      	uxthne	r5, r5
 8010624:	e9cd 5102 	strd	r5, r1, [sp, #8]
 8010628:	e9cd 5a00 	strd	r5, sl, [sp]
 801062c:	9926      	ldr	r1, [sp, #152]	; 0x98
 801062e:	6c24      	ldr	r4, [r4, #64]	; 0x40
 8010630:	47a0      	blx	r4
 8010632:	b017      	add	sp, #92	; 0x5c
 8010634:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010638:	2300      	movs	r3, #0
 801063a:	e7c1      	b.n	80105c0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x284>
 801063c:	980a      	ldr	r0, [sp, #40]	; 0x28
 801063e:	e6fe      	b.n	801043e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x102>
 8010640:	23ff      	movs	r3, #255	; 0xff
 8010642:	e71a      	b.n	801047a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x13e>
 8010644:	2355      	movs	r3, #85	; 0x55
 8010646:	e718      	b.n	801047a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x13e>
 8010648:	990b      	ldr	r1, [sp, #44]	; 0x2c
 801064a:	f8bc 5000 	ldrh.w	r5, [ip]
 801064e:	fb11 f303 	smulbb	r3, r1, r3
 8010652:	b29b      	uxth	r3, r3
 8010654:	1c59      	adds	r1, r3, #1
 8010656:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 801065a:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801065e:	990d      	ldr	r1, [sp, #52]	; 0x34
 8010660:	b29e      	uxth	r6, r3
 8010662:	1228      	asrs	r0, r5, #8
 8010664:	43db      	mvns	r3, r3
 8010666:	b2db      	uxtb	r3, r3
 8010668:	fb11 f106 	smulbb	r1, r1, r6
 801066c:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8010670:	fb00 1003 	mla	r0, r0, r3, r1
 8010674:	b281      	uxth	r1, r0
 8010676:	980e      	ldr	r0, [sp, #56]	; 0x38
 8010678:	910c      	str	r1, [sp, #48]	; 0x30
 801067a:	fb16 f900 	smulbb	r9, r6, r0
 801067e:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8010680:	10e9      	asrs	r1, r5, #3
 8010682:	00ed      	lsls	r5, r5, #3
 8010684:	fb16 f600 	smulbb	r6, r6, r0
 8010688:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801068c:	b2ed      	uxtb	r5, r5
 801068e:	fb01 9103 	mla	r1, r1, r3, r9
 8010692:	fb05 6603 	mla	r6, r5, r3, r6
 8010696:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8010698:	980c      	ldr	r0, [sp, #48]	; 0x30
 801069a:	b2b6      	uxth	r6, r6
 801069c:	3301      	adds	r3, #1
 801069e:	f106 0901 	add.w	r9, r6, #1
 80106a2:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 80106a6:	eb09 2916 	add.w	r9, r9, r6, lsr #8
 80106aa:	b289      	uxth	r1, r1
 80106ac:	f3c9 29c4 	ubfx	r9, r9, #11, #5
 80106b0:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 80106b4:	ea40 0009 	orr.w	r0, r0, r9
 80106b8:	f101 0901 	add.w	r9, r1, #1
 80106bc:	eb09 2911 	add.w	r9, r9, r1, lsr #8
 80106c0:	ea4f 1959 	mov.w	r9, r9, lsr #5
 80106c4:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 80106c8:	ea40 0009 	orr.w	r0, r0, r9
 80106cc:	e747      	b.n	801055e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x222>
 80106ce:	bf00      	nop
 80106d0:	20012170 	.word	0x20012170
 80106d4:	20012178 	.word	0x20012178
 80106d8:	20012172 	.word	0x20012172
 80106dc:	9b07      	ldr	r3, [sp, #28]
 80106de:	b153      	cbz	r3, 80106f6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ba>
 80106e0:	441c      	add	r4, r3
 80106e2:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80106e4:	b2a4      	uxth	r4, r4
 80106e6:	eb03 03d4 	add.w	r3, r3, r4, lsr #3
 80106ea:	f004 0407 	and.w	r4, r4, #7
 80106ee:	781a      	ldrb	r2, [r3, #0]
 80106f0:	9326      	str	r3, [sp, #152]	; 0x98
 80106f2:	4122      	asrs	r2, r4
 80106f4:	b2d2      	uxtb	r2, r2
 80106f6:	9b08      	ldr	r3, [sp, #32]
 80106f8:	445b      	add	r3, fp
 80106fa:	9308      	str	r3, [sp, #32]
 80106fc:	f10a 3aff 	add.w	sl, sl, #4294967295
 8010700:	e716      	b.n	8010530 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1f4>
 8010702:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8010704:	2b00      	cmp	r3, #0
 8010706:	d194      	bne.n	8010632 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2f6>
 8010708:	4b05      	ldr	r3, [pc, #20]	; (8010720 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e4>)
 801070a:	6818      	ldr	r0, [r3, #0]
 801070c:	6803      	ldr	r3, [r0, #0]
 801070e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8010710:	4798      	blx	r3
 8010712:	e78e      	b.n	8010632 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2f6>
 8010714:	2b00      	cmp	r3, #0
 8010716:	f43f ae89 	beq.w	801042c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf0>
 801071a:	2180      	movs	r1, #128	; 0x80
 801071c:	e75c      	b.n	80105d8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x29c>
 801071e:	bf00      	nop
 8010720:	20012178 	.word	0x20012178

08010724 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>:
 8010724:	b538      	push	{r3, r4, r5, lr}
 8010726:	4c15      	ldr	r4, [pc, #84]	; (801077c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x58>)
 8010728:	7823      	ldrb	r3, [r4, #0]
 801072a:	f3bf 8f5b 	dmb	ish
 801072e:	07da      	lsls	r2, r3, #31
 8010730:	4605      	mov	r5, r0
 8010732:	d40b      	bmi.n	801074c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 8010734:	4620      	mov	r0, r4
 8010736:	f007 fbe7 	bl	8017f08 <__cxa_guard_acquire>
 801073a:	b138      	cbz	r0, 801074c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 801073c:	4620      	mov	r0, r4
 801073e:	f007 fbef 	bl	8017f20 <__cxa_guard_release>
 8010742:	4a0f      	ldr	r2, [pc, #60]	; (8010780 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 8010744:	490f      	ldr	r1, [pc, #60]	; (8010784 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x60>)
 8010746:	4810      	ldr	r0, [pc, #64]	; (8010788 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 8010748:	f007 fbd4 	bl	8017ef4 <__aeabi_atexit>
 801074c:	4c0f      	ldr	r4, [pc, #60]	; (801078c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x68>)
 801074e:	7823      	ldrb	r3, [r4, #0]
 8010750:	f3bf 8f5b 	dmb	ish
 8010754:	07db      	lsls	r3, r3, #31
 8010756:	d40b      	bmi.n	8010770 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 8010758:	4620      	mov	r0, r4
 801075a:	f007 fbd5 	bl	8017f08 <__cxa_guard_acquire>
 801075e:	b138      	cbz	r0, 8010770 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 8010760:	4620      	mov	r0, r4
 8010762:	f007 fbdd 	bl	8017f20 <__cxa_guard_release>
 8010766:	4a06      	ldr	r2, [pc, #24]	; (8010780 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 8010768:	4909      	ldr	r1, [pc, #36]	; (8010790 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x6c>)
 801076a:	480a      	ldr	r0, [pc, #40]	; (8010794 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 801076c:	f007 fbc2 	bl	8017ef4 <__aeabi_atexit>
 8010770:	4b05      	ldr	r3, [pc, #20]	; (8010788 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 8010772:	612b      	str	r3, [r5, #16]
 8010774:	4b07      	ldr	r3, [pc, #28]	; (8010794 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 8010776:	616b      	str	r3, [r5, #20]
 8010778:	bd38      	pop	{r3, r4, r5, pc}
 801077a:	bf00      	nop
 801077c:	20012264 	.word	0x20012264
 8010780:	20000000 	.word	0x20000000
 8010784:	0800edc9 	.word	0x0800edc9
 8010788:	200000c8 	.word	0x200000c8
 801078c:	20012268 	.word	0x20012268
 8010790:	0800edc7 	.word	0x0800edc7
 8010794:	200000cc 	.word	0x200000cc

08010798 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>:
 8010798:	b538      	push	{r3, r4, r5, lr}
 801079a:	4c15      	ldr	r4, [pc, #84]	; (80107f0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x58>)
 801079c:	7823      	ldrb	r3, [r4, #0]
 801079e:	f3bf 8f5b 	dmb	ish
 80107a2:	07da      	lsls	r2, r3, #31
 80107a4:	4605      	mov	r5, r0
 80107a6:	d40b      	bmi.n	80107c0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 80107a8:	4620      	mov	r0, r4
 80107aa:	f007 fbad 	bl	8017f08 <__cxa_guard_acquire>
 80107ae:	b138      	cbz	r0, 80107c0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 80107b0:	4620      	mov	r0, r4
 80107b2:	f007 fbb5 	bl	8017f20 <__cxa_guard_release>
 80107b6:	4a0f      	ldr	r2, [pc, #60]	; (80107f4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 80107b8:	490f      	ldr	r1, [pc, #60]	; (80107f8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x60>)
 80107ba:	4810      	ldr	r0, [pc, #64]	; (80107fc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 80107bc:	f007 fb9a 	bl	8017ef4 <__aeabi_atexit>
 80107c0:	4c0f      	ldr	r4, [pc, #60]	; (8010800 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x68>)
 80107c2:	7823      	ldrb	r3, [r4, #0]
 80107c4:	f3bf 8f5b 	dmb	ish
 80107c8:	07db      	lsls	r3, r3, #31
 80107ca:	d40b      	bmi.n	80107e4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 80107cc:	4620      	mov	r0, r4
 80107ce:	f007 fb9b 	bl	8017f08 <__cxa_guard_acquire>
 80107d2:	b138      	cbz	r0, 80107e4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 80107d4:	4620      	mov	r0, r4
 80107d6:	f007 fba3 	bl	8017f20 <__cxa_guard_release>
 80107da:	4a06      	ldr	r2, [pc, #24]	; (80107f4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 80107dc:	4909      	ldr	r1, [pc, #36]	; (8010804 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x6c>)
 80107de:	480a      	ldr	r0, [pc, #40]	; (8010808 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 80107e0:	f007 fb88 	bl	8017ef4 <__aeabi_atexit>
 80107e4:	4b05      	ldr	r3, [pc, #20]	; (80107fc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 80107e6:	60ab      	str	r3, [r5, #8]
 80107e8:	4b07      	ldr	r3, [pc, #28]	; (8010808 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 80107ea:	60eb      	str	r3, [r5, #12]
 80107ec:	bd38      	pop	{r3, r4, r5, pc}
 80107ee:	bf00      	nop
 80107f0:	2001223c 	.word	0x2001223c
 80107f4:	20000000 	.word	0x20000000
 80107f8:	0800edcd 	.word	0x0800edcd
 80107fc:	200000a0 	.word	0x200000a0
 8010800:	20012240 	.word	0x20012240
 8010804:	0800edcb 	.word	0x0800edcb
 8010808:	200000a4 	.word	0x200000a4

0801080c <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>:
 801080c:	b510      	push	{r4, lr}
 801080e:	4604      	mov	r4, r0
 8010810:	f7ff ff88 	bl	8010724 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>
 8010814:	4620      	mov	r0, r4
 8010816:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801081a:	f7ff bfbd 	b.w	8010798 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>
	...

08010820 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>:
 8010820:	b538      	push	{r3, r4, r5, lr}
 8010822:	4c15      	ldr	r4, [pc, #84]	; (8010878 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x58>)
 8010824:	7823      	ldrb	r3, [r4, #0]
 8010826:	f3bf 8f5b 	dmb	ish
 801082a:	07da      	lsls	r2, r3, #31
 801082c:	4605      	mov	r5, r0
 801082e:	d40b      	bmi.n	8010848 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 8010830:	4620      	mov	r0, r4
 8010832:	f007 fb69 	bl	8017f08 <__cxa_guard_acquire>
 8010836:	b138      	cbz	r0, 8010848 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 8010838:	4620      	mov	r0, r4
 801083a:	f007 fb71 	bl	8017f20 <__cxa_guard_release>
 801083e:	4a0f      	ldr	r2, [pc, #60]	; (801087c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 8010840:	490f      	ldr	r1, [pc, #60]	; (8010880 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x60>)
 8010842:	4810      	ldr	r0, [pc, #64]	; (8010884 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 8010844:	f007 fb56 	bl	8017ef4 <__aeabi_atexit>
 8010848:	4c0f      	ldr	r4, [pc, #60]	; (8010888 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x68>)
 801084a:	7823      	ldrb	r3, [r4, #0]
 801084c:	f3bf 8f5b 	dmb	ish
 8010850:	07db      	lsls	r3, r3, #31
 8010852:	d40b      	bmi.n	801086c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 8010854:	4620      	mov	r0, r4
 8010856:	f007 fb57 	bl	8017f08 <__cxa_guard_acquire>
 801085a:	b138      	cbz	r0, 801086c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 801085c:	4620      	mov	r0, r4
 801085e:	f007 fb5f 	bl	8017f20 <__cxa_guard_release>
 8010862:	4a06      	ldr	r2, [pc, #24]	; (801087c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 8010864:	4909      	ldr	r1, [pc, #36]	; (801088c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x6c>)
 8010866:	480a      	ldr	r0, [pc, #40]	; (8010890 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 8010868:	f007 fb44 	bl	8017ef4 <__aeabi_atexit>
 801086c:	4b05      	ldr	r3, [pc, #20]	; (8010884 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 801086e:	622b      	str	r3, [r5, #32]
 8010870:	4b07      	ldr	r3, [pc, #28]	; (8010890 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 8010872:	626b      	str	r3, [r5, #36]	; 0x24
 8010874:	bd38      	pop	{r3, r4, r5, pc}
 8010876:	bf00      	nop
 8010878:	2001226c 	.word	0x2001226c
 801087c:	20000000 	.word	0x20000000
 8010880:	0800edc1 	.word	0x0800edc1
 8010884:	200000d0 	.word	0x200000d0
 8010888:	20012270 	.word	0x20012270
 801088c:	0800edbf 	.word	0x0800edbf
 8010890:	200000d4 	.word	0x200000d4

08010894 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>:
 8010894:	b538      	push	{r3, r4, r5, lr}
 8010896:	4c15      	ldr	r4, [pc, #84]	; (80108ec <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x58>)
 8010898:	7823      	ldrb	r3, [r4, #0]
 801089a:	f3bf 8f5b 	dmb	ish
 801089e:	07da      	lsls	r2, r3, #31
 80108a0:	4605      	mov	r5, r0
 80108a2:	d40b      	bmi.n	80108bc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 80108a4:	4620      	mov	r0, r4
 80108a6:	f007 fb2f 	bl	8017f08 <__cxa_guard_acquire>
 80108aa:	b138      	cbz	r0, 80108bc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 80108ac:	4620      	mov	r0, r4
 80108ae:	f007 fb37 	bl	8017f20 <__cxa_guard_release>
 80108b2:	4a0f      	ldr	r2, [pc, #60]	; (80108f0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 80108b4:	490f      	ldr	r1, [pc, #60]	; (80108f4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x60>)
 80108b6:	4810      	ldr	r0, [pc, #64]	; (80108f8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 80108b8:	f007 fb1c 	bl	8017ef4 <__aeabi_atexit>
 80108bc:	4c0f      	ldr	r4, [pc, #60]	; (80108fc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x68>)
 80108be:	7823      	ldrb	r3, [r4, #0]
 80108c0:	f3bf 8f5b 	dmb	ish
 80108c4:	07db      	lsls	r3, r3, #31
 80108c6:	d40b      	bmi.n	80108e0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 80108c8:	4620      	mov	r0, r4
 80108ca:	f007 fb1d 	bl	8017f08 <__cxa_guard_acquire>
 80108ce:	b138      	cbz	r0, 80108e0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 80108d0:	4620      	mov	r0, r4
 80108d2:	f007 fb25 	bl	8017f20 <__cxa_guard_release>
 80108d6:	4a06      	ldr	r2, [pc, #24]	; (80108f0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 80108d8:	4909      	ldr	r1, [pc, #36]	; (8010900 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x6c>)
 80108da:	480a      	ldr	r0, [pc, #40]	; (8010904 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 80108dc:	f007 fb0a 	bl	8017ef4 <__aeabi_atexit>
 80108e0:	4b05      	ldr	r3, [pc, #20]	; (80108f8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 80108e2:	61ab      	str	r3, [r5, #24]
 80108e4:	4b07      	ldr	r3, [pc, #28]	; (8010904 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 80108e6:	61eb      	str	r3, [r5, #28]
 80108e8:	bd38      	pop	{r3, r4, r5, pc}
 80108ea:	bf00      	nop
 80108ec:	20012244 	.word	0x20012244
 80108f0:	20000000 	.word	0x20000000
 80108f4:	0800edc5 	.word	0x0800edc5
 80108f8:	200000a8 	.word	0x200000a8
 80108fc:	20012248 	.word	0x20012248
 8010900:	0800edc3 	.word	0x0800edc3
 8010904:	200000ac 	.word	0x200000ac

08010908 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>:
 8010908:	b510      	push	{r4, lr}
 801090a:	4604      	mov	r4, r0
 801090c:	f7ff ff88 	bl	8010820 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>
 8010910:	4620      	mov	r0, r4
 8010912:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8010916:	f7ff bfbd 	b.w	8010894 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>
	...

0801091c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>:
 801091c:	b538      	push	{r3, r4, r5, lr}
 801091e:	4c15      	ldr	r4, [pc, #84]	; (8010974 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x58>)
 8010920:	7823      	ldrb	r3, [r4, #0]
 8010922:	f3bf 8f5b 	dmb	ish
 8010926:	07da      	lsls	r2, r3, #31
 8010928:	4605      	mov	r5, r0
 801092a:	d40b      	bmi.n	8010944 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 801092c:	4620      	mov	r0, r4
 801092e:	f007 faeb 	bl	8017f08 <__cxa_guard_acquire>
 8010932:	b138      	cbz	r0, 8010944 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 8010934:	4620      	mov	r0, r4
 8010936:	f007 faf3 	bl	8017f20 <__cxa_guard_release>
 801093a:	4a0f      	ldr	r2, [pc, #60]	; (8010978 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 801093c:	490f      	ldr	r1, [pc, #60]	; (801097c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x60>)
 801093e:	4810      	ldr	r0, [pc, #64]	; (8010980 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 8010940:	f007 fad8 	bl	8017ef4 <__aeabi_atexit>
 8010944:	4c0f      	ldr	r4, [pc, #60]	; (8010984 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x68>)
 8010946:	7823      	ldrb	r3, [r4, #0]
 8010948:	f3bf 8f5b 	dmb	ish
 801094c:	07db      	lsls	r3, r3, #31
 801094e:	d40b      	bmi.n	8010968 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 8010950:	4620      	mov	r0, r4
 8010952:	f007 fad9 	bl	8017f08 <__cxa_guard_acquire>
 8010956:	b138      	cbz	r0, 8010968 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 8010958:	4620      	mov	r0, r4
 801095a:	f007 fae1 	bl	8017f20 <__cxa_guard_release>
 801095e:	4a06      	ldr	r2, [pc, #24]	; (8010978 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 8010960:	4909      	ldr	r1, [pc, #36]	; (8010988 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x6c>)
 8010962:	480a      	ldr	r0, [pc, #40]	; (801098c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 8010964:	f007 fac6 	bl	8017ef4 <__aeabi_atexit>
 8010968:	4b05      	ldr	r3, [pc, #20]	; (8010980 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 801096a:	632b      	str	r3, [r5, #48]	; 0x30
 801096c:	4b07      	ldr	r3, [pc, #28]	; (801098c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 801096e:	636b      	str	r3, [r5, #52]	; 0x34
 8010970:	bd38      	pop	{r3, r4, r5, pc}
 8010972:	bf00      	nop
 8010974:	2001227c 	.word	0x2001227c
 8010978:	20000000 	.word	0x20000000
 801097c:	0800edb9 	.word	0x0800edb9
 8010980:	200000e0 	.word	0x200000e0
 8010984:	20012280 	.word	0x20012280
 8010988:	0800edb7 	.word	0x0800edb7
 801098c:	200000e4 	.word	0x200000e4

08010990 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>:
 8010990:	b538      	push	{r3, r4, r5, lr}
 8010992:	4c15      	ldr	r4, [pc, #84]	; (80109e8 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x58>)
 8010994:	7823      	ldrb	r3, [r4, #0]
 8010996:	f3bf 8f5b 	dmb	ish
 801099a:	07da      	lsls	r2, r3, #31
 801099c:	4605      	mov	r5, r0
 801099e:	d40b      	bmi.n	80109b8 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 80109a0:	4620      	mov	r0, r4
 80109a2:	f007 fab1 	bl	8017f08 <__cxa_guard_acquire>
 80109a6:	b138      	cbz	r0, 80109b8 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 80109a8:	4620      	mov	r0, r4
 80109aa:	f007 fab9 	bl	8017f20 <__cxa_guard_release>
 80109ae:	4a0f      	ldr	r2, [pc, #60]	; (80109ec <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 80109b0:	490f      	ldr	r1, [pc, #60]	; (80109f0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x60>)
 80109b2:	4810      	ldr	r0, [pc, #64]	; (80109f4 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 80109b4:	f007 fa9e 	bl	8017ef4 <__aeabi_atexit>
 80109b8:	4c0f      	ldr	r4, [pc, #60]	; (80109f8 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x68>)
 80109ba:	7823      	ldrb	r3, [r4, #0]
 80109bc:	f3bf 8f5b 	dmb	ish
 80109c0:	07db      	lsls	r3, r3, #31
 80109c2:	d40b      	bmi.n	80109dc <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 80109c4:	4620      	mov	r0, r4
 80109c6:	f007 fa9f 	bl	8017f08 <__cxa_guard_acquire>
 80109ca:	b138      	cbz	r0, 80109dc <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 80109cc:	4620      	mov	r0, r4
 80109ce:	f007 faa7 	bl	8017f20 <__cxa_guard_release>
 80109d2:	4a06      	ldr	r2, [pc, #24]	; (80109ec <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 80109d4:	4909      	ldr	r1, [pc, #36]	; (80109fc <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x6c>)
 80109d6:	480a      	ldr	r0, [pc, #40]	; (8010a00 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 80109d8:	f007 fa8c 	bl	8017ef4 <__aeabi_atexit>
 80109dc:	4b05      	ldr	r3, [pc, #20]	; (80109f4 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 80109de:	62ab      	str	r3, [r5, #40]	; 0x28
 80109e0:	4b07      	ldr	r3, [pc, #28]	; (8010a00 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 80109e2:	62eb      	str	r3, [r5, #44]	; 0x2c
 80109e4:	bd38      	pop	{r3, r4, r5, pc}
 80109e6:	bf00      	nop
 80109e8:	2001224c 	.word	0x2001224c
 80109ec:	20000000 	.word	0x20000000
 80109f0:	0800edbd 	.word	0x0800edbd
 80109f4:	200000b0 	.word	0x200000b0
 80109f8:	20012250 	.word	0x20012250
 80109fc:	0800edbb 	.word	0x0800edbb
 8010a00:	200000b4 	.word	0x200000b4

08010a04 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>:
 8010a04:	b510      	push	{r4, lr}
 8010a06:	4604      	mov	r4, r0
 8010a08:	f7ff ff88 	bl	801091c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>
 8010a0c:	4620      	mov	r0, r4
 8010a0e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8010a12:	f7ff bfbd 	b.w	8010990 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>
	...

08010a18 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>:
 8010a18:	b538      	push	{r3, r4, r5, lr}
 8010a1a:	4c15      	ldr	r4, [pc, #84]	; (8010a70 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x58>)
 8010a1c:	7823      	ldrb	r3, [r4, #0]
 8010a1e:	f3bf 8f5b 	dmb	ish
 8010a22:	07da      	lsls	r2, r3, #31
 8010a24:	4605      	mov	r5, r0
 8010a26:	d40b      	bmi.n	8010a40 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 8010a28:	4620      	mov	r0, r4
 8010a2a:	f007 fa6d 	bl	8017f08 <__cxa_guard_acquire>
 8010a2e:	b138      	cbz	r0, 8010a40 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 8010a30:	4620      	mov	r0, r4
 8010a32:	f007 fa75 	bl	8017f20 <__cxa_guard_release>
 8010a36:	4a0f      	ldr	r2, [pc, #60]	; (8010a74 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 8010a38:	490f      	ldr	r1, [pc, #60]	; (8010a78 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x60>)
 8010a3a:	4810      	ldr	r0, [pc, #64]	; (8010a7c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 8010a3c:	f007 fa5a 	bl	8017ef4 <__aeabi_atexit>
 8010a40:	4c0f      	ldr	r4, [pc, #60]	; (8010a80 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x68>)
 8010a42:	7823      	ldrb	r3, [r4, #0]
 8010a44:	f3bf 8f5b 	dmb	ish
 8010a48:	07db      	lsls	r3, r3, #31
 8010a4a:	d40b      	bmi.n	8010a64 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 8010a4c:	4620      	mov	r0, r4
 8010a4e:	f007 fa5b 	bl	8017f08 <__cxa_guard_acquire>
 8010a52:	b138      	cbz	r0, 8010a64 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 8010a54:	4620      	mov	r0, r4
 8010a56:	f007 fa63 	bl	8017f20 <__cxa_guard_release>
 8010a5a:	4a06      	ldr	r2, [pc, #24]	; (8010a74 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 8010a5c:	4909      	ldr	r1, [pc, #36]	; (8010a84 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x6c>)
 8010a5e:	480a      	ldr	r0, [pc, #40]	; (8010a88 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 8010a60:	f007 fa48 	bl	8017ef4 <__aeabi_atexit>
 8010a64:	4b05      	ldr	r3, [pc, #20]	; (8010a7c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 8010a66:	652b      	str	r3, [r5, #80]	; 0x50
 8010a68:	4b07      	ldr	r3, [pc, #28]	; (8010a88 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 8010a6a:	656b      	str	r3, [r5, #84]	; 0x54
 8010a6c:	bd38      	pop	{r3, r4, r5, pc}
 8010a6e:	bf00      	nop
 8010a70:	20012284 	.word	0x20012284
 8010a74:	20000000 	.word	0x20000000
 8010a78:	0800eda9 	.word	0x0800eda9
 8010a7c:	200000e8 	.word	0x200000e8
 8010a80:	20012288 	.word	0x20012288
 8010a84:	0800eda7 	.word	0x0800eda7
 8010a88:	200000ec 	.word	0x200000ec

08010a8c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>:
 8010a8c:	b538      	push	{r3, r4, r5, lr}
 8010a8e:	4c15      	ldr	r4, [pc, #84]	; (8010ae4 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x58>)
 8010a90:	7823      	ldrb	r3, [r4, #0]
 8010a92:	f3bf 8f5b 	dmb	ish
 8010a96:	07da      	lsls	r2, r3, #31
 8010a98:	4605      	mov	r5, r0
 8010a9a:	d40b      	bmi.n	8010ab4 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 8010a9c:	4620      	mov	r0, r4
 8010a9e:	f007 fa33 	bl	8017f08 <__cxa_guard_acquire>
 8010aa2:	b138      	cbz	r0, 8010ab4 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 8010aa4:	4620      	mov	r0, r4
 8010aa6:	f007 fa3b 	bl	8017f20 <__cxa_guard_release>
 8010aaa:	4a0f      	ldr	r2, [pc, #60]	; (8010ae8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 8010aac:	490f      	ldr	r1, [pc, #60]	; (8010aec <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x60>)
 8010aae:	4810      	ldr	r0, [pc, #64]	; (8010af0 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 8010ab0:	f007 fa20 	bl	8017ef4 <__aeabi_atexit>
 8010ab4:	4c0f      	ldr	r4, [pc, #60]	; (8010af4 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x68>)
 8010ab6:	7823      	ldrb	r3, [r4, #0]
 8010ab8:	f3bf 8f5b 	dmb	ish
 8010abc:	07db      	lsls	r3, r3, #31
 8010abe:	d40b      	bmi.n	8010ad8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 8010ac0:	4620      	mov	r0, r4
 8010ac2:	f007 fa21 	bl	8017f08 <__cxa_guard_acquire>
 8010ac6:	b138      	cbz	r0, 8010ad8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 8010ac8:	4620      	mov	r0, r4
 8010aca:	f007 fa29 	bl	8017f20 <__cxa_guard_release>
 8010ace:	4a06      	ldr	r2, [pc, #24]	; (8010ae8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 8010ad0:	4909      	ldr	r1, [pc, #36]	; (8010af8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x6c>)
 8010ad2:	480a      	ldr	r0, [pc, #40]	; (8010afc <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 8010ad4:	f007 fa0e 	bl	8017ef4 <__aeabi_atexit>
 8010ad8:	4b05      	ldr	r3, [pc, #20]	; (8010af0 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 8010ada:	64ab      	str	r3, [r5, #72]	; 0x48
 8010adc:	4b07      	ldr	r3, [pc, #28]	; (8010afc <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 8010ade:	64eb      	str	r3, [r5, #76]	; 0x4c
 8010ae0:	bd38      	pop	{r3, r4, r5, pc}
 8010ae2:	bf00      	nop
 8010ae4:	2001228c 	.word	0x2001228c
 8010ae8:	20000000 	.word	0x20000000
 8010aec:	0800edad 	.word	0x0800edad
 8010af0:	200000f0 	.word	0x200000f0
 8010af4:	20012290 	.word	0x20012290
 8010af8:	0800edab 	.word	0x0800edab
 8010afc:	200000f4 	.word	0x200000f4

08010b00 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>:
 8010b00:	b538      	push	{r3, r4, r5, lr}
 8010b02:	4c15      	ldr	r4, [pc, #84]	; (8010b58 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x58>)
 8010b04:	7823      	ldrb	r3, [r4, #0]
 8010b06:	f3bf 8f5b 	dmb	ish
 8010b0a:	07da      	lsls	r2, r3, #31
 8010b0c:	4605      	mov	r5, r0
 8010b0e:	d40b      	bmi.n	8010b28 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 8010b10:	4620      	mov	r0, r4
 8010b12:	f007 f9f9 	bl	8017f08 <__cxa_guard_acquire>
 8010b16:	b138      	cbz	r0, 8010b28 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 8010b18:	4620      	mov	r0, r4
 8010b1a:	f007 fa01 	bl	8017f20 <__cxa_guard_release>
 8010b1e:	4a0f      	ldr	r2, [pc, #60]	; (8010b5c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 8010b20:	490f      	ldr	r1, [pc, #60]	; (8010b60 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x60>)
 8010b22:	4810      	ldr	r0, [pc, #64]	; (8010b64 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 8010b24:	f007 f9e6 	bl	8017ef4 <__aeabi_atexit>
 8010b28:	4c0f      	ldr	r4, [pc, #60]	; (8010b68 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x68>)
 8010b2a:	7823      	ldrb	r3, [r4, #0]
 8010b2c:	f3bf 8f5b 	dmb	ish
 8010b30:	07db      	lsls	r3, r3, #31
 8010b32:	d40b      	bmi.n	8010b4c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 8010b34:	4620      	mov	r0, r4
 8010b36:	f007 f9e7 	bl	8017f08 <__cxa_guard_acquire>
 8010b3a:	b138      	cbz	r0, 8010b4c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 8010b3c:	4620      	mov	r0, r4
 8010b3e:	f007 f9ef 	bl	8017f20 <__cxa_guard_release>
 8010b42:	4a06      	ldr	r2, [pc, #24]	; (8010b5c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 8010b44:	4909      	ldr	r1, [pc, #36]	; (8010b6c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x6c>)
 8010b46:	480a      	ldr	r0, [pc, #40]	; (8010b70 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 8010b48:	f007 f9d4 	bl	8017ef4 <__aeabi_atexit>
 8010b4c:	4b05      	ldr	r3, [pc, #20]	; (8010b64 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 8010b4e:	642b      	str	r3, [r5, #64]	; 0x40
 8010b50:	4b07      	ldr	r3, [pc, #28]	; (8010b70 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 8010b52:	646b      	str	r3, [r5, #68]	; 0x44
 8010b54:	bd38      	pop	{r3, r4, r5, pc}
 8010b56:	bf00      	nop
 8010b58:	20012254 	.word	0x20012254
 8010b5c:	20000000 	.word	0x20000000
 8010b60:	0800edb1 	.word	0x0800edb1
 8010b64:	200000b8 	.word	0x200000b8
 8010b68:	20012258 	.word	0x20012258
 8010b6c:	0800edaf 	.word	0x0800edaf
 8010b70:	200000bc 	.word	0x200000bc

08010b74 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>:
 8010b74:	b538      	push	{r3, r4, r5, lr}
 8010b76:	4c15      	ldr	r4, [pc, #84]	; (8010bcc <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x58>)
 8010b78:	7823      	ldrb	r3, [r4, #0]
 8010b7a:	f3bf 8f5b 	dmb	ish
 8010b7e:	07da      	lsls	r2, r3, #31
 8010b80:	4605      	mov	r5, r0
 8010b82:	d40b      	bmi.n	8010b9c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 8010b84:	4620      	mov	r0, r4
 8010b86:	f007 f9bf 	bl	8017f08 <__cxa_guard_acquire>
 8010b8a:	b138      	cbz	r0, 8010b9c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 8010b8c:	4620      	mov	r0, r4
 8010b8e:	f007 f9c7 	bl	8017f20 <__cxa_guard_release>
 8010b92:	4a0f      	ldr	r2, [pc, #60]	; (8010bd0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 8010b94:	490f      	ldr	r1, [pc, #60]	; (8010bd4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x60>)
 8010b96:	4810      	ldr	r0, [pc, #64]	; (8010bd8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 8010b98:	f007 f9ac 	bl	8017ef4 <__aeabi_atexit>
 8010b9c:	4c0f      	ldr	r4, [pc, #60]	; (8010bdc <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x68>)
 8010b9e:	7823      	ldrb	r3, [r4, #0]
 8010ba0:	f3bf 8f5b 	dmb	ish
 8010ba4:	07db      	lsls	r3, r3, #31
 8010ba6:	d40b      	bmi.n	8010bc0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 8010ba8:	4620      	mov	r0, r4
 8010baa:	f007 f9ad 	bl	8017f08 <__cxa_guard_acquire>
 8010bae:	b138      	cbz	r0, 8010bc0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 8010bb0:	4620      	mov	r0, r4
 8010bb2:	f007 f9b5 	bl	8017f20 <__cxa_guard_release>
 8010bb6:	4a06      	ldr	r2, [pc, #24]	; (8010bd0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 8010bb8:	4909      	ldr	r1, [pc, #36]	; (8010be0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x6c>)
 8010bba:	480a      	ldr	r0, [pc, #40]	; (8010be4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 8010bbc:	f007 f99a 	bl	8017ef4 <__aeabi_atexit>
 8010bc0:	4b05      	ldr	r3, [pc, #20]	; (8010bd8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 8010bc2:	63ab      	str	r3, [r5, #56]	; 0x38
 8010bc4:	4b07      	ldr	r3, [pc, #28]	; (8010be4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 8010bc6:	63eb      	str	r3, [r5, #60]	; 0x3c
 8010bc8:	bd38      	pop	{r3, r4, r5, pc}
 8010bca:	bf00      	nop
 8010bcc:	20012274 	.word	0x20012274
 8010bd0:	20000000 	.word	0x20000000
 8010bd4:	0800edb5 	.word	0x0800edb5
 8010bd8:	200000d8 	.word	0x200000d8
 8010bdc:	20012278 	.word	0x20012278
 8010be0:	0800edb3 	.word	0x0800edb3
 8010be4:	200000dc 	.word	0x200000dc

08010be8 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>:
 8010be8:	b510      	push	{r4, lr}
 8010bea:	4604      	mov	r4, r0
 8010bec:	f7ff ff14 	bl	8010a18 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>
 8010bf0:	4620      	mov	r0, r4
 8010bf2:	f7ff ff85 	bl	8010b00 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>
 8010bf6:	4620      	mov	r0, r4
 8010bf8:	f7ff ff48 	bl	8010a8c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>
 8010bfc:	4620      	mov	r0, r4
 8010bfe:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8010c02:	f7ff bfb7 	b.w	8010b74 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>
	...

08010c08 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>:
 8010c08:	b538      	push	{r3, r4, r5, lr}
 8010c0a:	4c15      	ldr	r4, [pc, #84]	; (8010c60 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x58>)
 8010c0c:	7823      	ldrb	r3, [r4, #0]
 8010c0e:	f3bf 8f5b 	dmb	ish
 8010c12:	07da      	lsls	r2, r3, #31
 8010c14:	4605      	mov	r5, r0
 8010c16:	d40b      	bmi.n	8010c30 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 8010c18:	4620      	mov	r0, r4
 8010c1a:	f007 f975 	bl	8017f08 <__cxa_guard_acquire>
 8010c1e:	b138      	cbz	r0, 8010c30 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 8010c20:	4620      	mov	r0, r4
 8010c22:	f007 f97d 	bl	8017f20 <__cxa_guard_release>
 8010c26:	4a0f      	ldr	r2, [pc, #60]	; (8010c64 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 8010c28:	490f      	ldr	r1, [pc, #60]	; (8010c68 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x60>)
 8010c2a:	4810      	ldr	r0, [pc, #64]	; (8010c6c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 8010c2c:	f007 f962 	bl	8017ef4 <__aeabi_atexit>
 8010c30:	4c0f      	ldr	r4, [pc, #60]	; (8010c70 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x68>)
 8010c32:	7823      	ldrb	r3, [r4, #0]
 8010c34:	f3bf 8f5b 	dmb	ish
 8010c38:	07db      	lsls	r3, r3, #31
 8010c3a:	d40b      	bmi.n	8010c54 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 8010c3c:	4620      	mov	r0, r4
 8010c3e:	f007 f963 	bl	8017f08 <__cxa_guard_acquire>
 8010c42:	b138      	cbz	r0, 8010c54 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 8010c44:	4620      	mov	r0, r4
 8010c46:	f007 f96b 	bl	8017f20 <__cxa_guard_release>
 8010c4a:	4a06      	ldr	r2, [pc, #24]	; (8010c64 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 8010c4c:	4909      	ldr	r1, [pc, #36]	; (8010c74 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x6c>)
 8010c4e:	480a      	ldr	r0, [pc, #40]	; (8010c78 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 8010c50:	f007 f950 	bl	8017ef4 <__aeabi_atexit>
 8010c54:	4b05      	ldr	r3, [pc, #20]	; (8010c6c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 8010c56:	662b      	str	r3, [r5, #96]	; 0x60
 8010c58:	4b07      	ldr	r3, [pc, #28]	; (8010c78 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 8010c5a:	666b      	str	r3, [r5, #100]	; 0x64
 8010c5c:	bd38      	pop	{r3, r4, r5, pc}
 8010c5e:	bf00      	nop
 8010c60:	2001225c 	.word	0x2001225c
 8010c64:	20000000 	.word	0x20000000
 8010c68:	0800eda1 	.word	0x0800eda1
 8010c6c:	200000c0 	.word	0x200000c0
 8010c70:	20012260 	.word	0x20012260
 8010c74:	0800ed9f 	.word	0x0800ed9f
 8010c78:	200000c4 	.word	0x200000c4

08010c7c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>:
 8010c7c:	b538      	push	{r3, r4, r5, lr}
 8010c7e:	4c15      	ldr	r4, [pc, #84]	; (8010cd4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x58>)
 8010c80:	7823      	ldrb	r3, [r4, #0]
 8010c82:	f3bf 8f5b 	dmb	ish
 8010c86:	07da      	lsls	r2, r3, #31
 8010c88:	4605      	mov	r5, r0
 8010c8a:	d40b      	bmi.n	8010ca4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 8010c8c:	4620      	mov	r0, r4
 8010c8e:	f007 f93b 	bl	8017f08 <__cxa_guard_acquire>
 8010c92:	b138      	cbz	r0, 8010ca4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 8010c94:	4620      	mov	r0, r4
 8010c96:	f007 f943 	bl	8017f20 <__cxa_guard_release>
 8010c9a:	4a0f      	ldr	r2, [pc, #60]	; (8010cd8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 8010c9c:	490f      	ldr	r1, [pc, #60]	; (8010cdc <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x60>)
 8010c9e:	4810      	ldr	r0, [pc, #64]	; (8010ce0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 8010ca0:	f007 f928 	bl	8017ef4 <__aeabi_atexit>
 8010ca4:	4c0f      	ldr	r4, [pc, #60]	; (8010ce4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x68>)
 8010ca6:	7823      	ldrb	r3, [r4, #0]
 8010ca8:	f3bf 8f5b 	dmb	ish
 8010cac:	07db      	lsls	r3, r3, #31
 8010cae:	d40b      	bmi.n	8010cc8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 8010cb0:	4620      	mov	r0, r4
 8010cb2:	f007 f929 	bl	8017f08 <__cxa_guard_acquire>
 8010cb6:	b138      	cbz	r0, 8010cc8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 8010cb8:	4620      	mov	r0, r4
 8010cba:	f007 f931 	bl	8017f20 <__cxa_guard_release>
 8010cbe:	4a06      	ldr	r2, [pc, #24]	; (8010cd8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 8010cc0:	4909      	ldr	r1, [pc, #36]	; (8010ce8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x6c>)
 8010cc2:	480a      	ldr	r0, [pc, #40]	; (8010cec <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 8010cc4:	f007 f916 	bl	8017ef4 <__aeabi_atexit>
 8010cc8:	4b05      	ldr	r3, [pc, #20]	; (8010ce0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 8010cca:	65ab      	str	r3, [r5, #88]	; 0x58
 8010ccc:	4b07      	ldr	r3, [pc, #28]	; (8010cec <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 8010cce:	65eb      	str	r3, [r5, #92]	; 0x5c
 8010cd0:	bd38      	pop	{r3, r4, r5, pc}
 8010cd2:	bf00      	nop
 8010cd4:	20012234 	.word	0x20012234
 8010cd8:	20000000 	.word	0x20000000
 8010cdc:	0800eda5 	.word	0x0800eda5
 8010ce0:	20000098 	.word	0x20000098
 8010ce4:	20012238 	.word	0x20012238
 8010ce8:	0800eda3 	.word	0x0800eda3
 8010cec:	2000009c 	.word	0x2000009c

08010cf0 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>:
 8010cf0:	b510      	push	{r4, lr}
 8010cf2:	4604      	mov	r4, r0
 8010cf4:	f7ff ff88 	bl	8010c08 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>
 8010cf8:	4620      	mov	r0, r4
 8010cfa:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8010cfe:	f7ff bfbd 	b.w	8010c7c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>
	...

08010d04 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>:
 8010d04:	b538      	push	{r3, r4, r5, lr}
 8010d06:	4c15      	ldr	r4, [pc, #84]	; (8010d5c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x58>)
 8010d08:	7823      	ldrb	r3, [r4, #0]
 8010d0a:	f3bf 8f5b 	dmb	ish
 8010d0e:	07da      	lsls	r2, r3, #31
 8010d10:	4605      	mov	r5, r0
 8010d12:	d40b      	bmi.n	8010d2c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 8010d14:	4620      	mov	r0, r4
 8010d16:	f007 f8f7 	bl	8017f08 <__cxa_guard_acquire>
 8010d1a:	b138      	cbz	r0, 8010d2c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 8010d1c:	4620      	mov	r0, r4
 8010d1e:	f007 f8ff 	bl	8017f20 <__cxa_guard_release>
 8010d22:	4a0f      	ldr	r2, [pc, #60]	; (8010d60 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 8010d24:	490f      	ldr	r1, [pc, #60]	; (8010d64 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x60>)
 8010d26:	4810      	ldr	r0, [pc, #64]	; (8010d68 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 8010d28:	f007 f8e4 	bl	8017ef4 <__aeabi_atexit>
 8010d2c:	4c0f      	ldr	r4, [pc, #60]	; (8010d6c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x68>)
 8010d2e:	7823      	ldrb	r3, [r4, #0]
 8010d30:	f3bf 8f5b 	dmb	ish
 8010d34:	07db      	lsls	r3, r3, #31
 8010d36:	d40b      	bmi.n	8010d50 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 8010d38:	4620      	mov	r0, r4
 8010d3a:	f007 f8e5 	bl	8017f08 <__cxa_guard_acquire>
 8010d3e:	b138      	cbz	r0, 8010d50 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 8010d40:	4620      	mov	r0, r4
 8010d42:	f007 f8ed 	bl	8017f20 <__cxa_guard_release>
 8010d46:	4a06      	ldr	r2, [pc, #24]	; (8010d60 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 8010d48:	4909      	ldr	r1, [pc, #36]	; (8010d70 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x6c>)
 8010d4a:	480a      	ldr	r0, [pc, #40]	; (8010d74 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 8010d4c:	f007 f8d2 	bl	8017ef4 <__aeabi_atexit>
 8010d50:	4b05      	ldr	r3, [pc, #20]	; (8010d68 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 8010d52:	672b      	str	r3, [r5, #112]	; 0x70
 8010d54:	4b07      	ldr	r3, [pc, #28]	; (8010d74 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 8010d56:	676b      	str	r3, [r5, #116]	; 0x74
 8010d58:	bd38      	pop	{r3, r4, r5, pc}
 8010d5a:	bf00      	nop
 8010d5c:	2001222c 	.word	0x2001222c
 8010d60:	20000000 	.word	0x20000000
 8010d64:	0800ed99 	.word	0x0800ed99
 8010d68:	20000090 	.word	0x20000090
 8010d6c:	20012230 	.word	0x20012230
 8010d70:	0800ed97 	.word	0x0800ed97
 8010d74:	20000094 	.word	0x20000094

08010d78 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>:
 8010d78:	b538      	push	{r3, r4, r5, lr}
 8010d7a:	4c15      	ldr	r4, [pc, #84]	; (8010dd0 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x58>)
 8010d7c:	7823      	ldrb	r3, [r4, #0]
 8010d7e:	f3bf 8f5b 	dmb	ish
 8010d82:	07da      	lsls	r2, r3, #31
 8010d84:	4605      	mov	r5, r0
 8010d86:	d40b      	bmi.n	8010da0 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 8010d88:	4620      	mov	r0, r4
 8010d8a:	f007 f8bd 	bl	8017f08 <__cxa_guard_acquire>
 8010d8e:	b138      	cbz	r0, 8010da0 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 8010d90:	4620      	mov	r0, r4
 8010d92:	f007 f8c5 	bl	8017f20 <__cxa_guard_release>
 8010d96:	4a0f      	ldr	r2, [pc, #60]	; (8010dd4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 8010d98:	490f      	ldr	r1, [pc, #60]	; (8010dd8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x60>)
 8010d9a:	4810      	ldr	r0, [pc, #64]	; (8010ddc <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 8010d9c:	f007 f8aa 	bl	8017ef4 <__aeabi_atexit>
 8010da0:	4c0f      	ldr	r4, [pc, #60]	; (8010de0 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x68>)
 8010da2:	7823      	ldrb	r3, [r4, #0]
 8010da4:	f3bf 8f5b 	dmb	ish
 8010da8:	07db      	lsls	r3, r3, #31
 8010daa:	d40b      	bmi.n	8010dc4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 8010dac:	4620      	mov	r0, r4
 8010dae:	f007 f8ab 	bl	8017f08 <__cxa_guard_acquire>
 8010db2:	b138      	cbz	r0, 8010dc4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 8010db4:	4620      	mov	r0, r4
 8010db6:	f007 f8b3 	bl	8017f20 <__cxa_guard_release>
 8010dba:	4a06      	ldr	r2, [pc, #24]	; (8010dd4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 8010dbc:	4909      	ldr	r1, [pc, #36]	; (8010de4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x6c>)
 8010dbe:	480a      	ldr	r0, [pc, #40]	; (8010de8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 8010dc0:	f007 f898 	bl	8017ef4 <__aeabi_atexit>
 8010dc4:	4b05      	ldr	r3, [pc, #20]	; (8010ddc <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 8010dc6:	66ab      	str	r3, [r5, #104]	; 0x68
 8010dc8:	4b07      	ldr	r3, [pc, #28]	; (8010de8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 8010dca:	66eb      	str	r3, [r5, #108]	; 0x6c
 8010dcc:	bd38      	pop	{r3, r4, r5, pc}
 8010dce:	bf00      	nop
 8010dd0:	20012224 	.word	0x20012224
 8010dd4:	20000000 	.word	0x20000000
 8010dd8:	0800ed9d 	.word	0x0800ed9d
 8010ddc:	20000088 	.word	0x20000088
 8010de0:	20012228 	.word	0x20012228
 8010de4:	0800ed9b 	.word	0x0800ed9b
 8010de8:	2000008c 	.word	0x2000008c

08010dec <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>:
 8010dec:	b510      	push	{r4, lr}
 8010dee:	4604      	mov	r4, r0
 8010df0:	f7ff ff88 	bl	8010d04 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>
 8010df4:	4620      	mov	r0, r4
 8010df6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8010dfa:	f7ff bfbd 	b.w	8010d78 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>

08010dfe <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>:
 8010dfe:	b510      	push	{r4, lr}
 8010e00:	4604      	mov	r4, r0
 8010e02:	f7ff fff3 	bl	8010dec <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>
 8010e06:	4620      	mov	r0, r4
 8010e08:	f7ff ff72 	bl	8010cf0 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>
 8010e0c:	4620      	mov	r0, r4
 8010e0e:	f7ff fdf9 	bl	8010a04 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>
 8010e12:	4620      	mov	r0, r4
 8010e14:	f7ff fcfa 	bl	801080c <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>
 8010e18:	4620      	mov	r0, r4
 8010e1a:	f7ff fd75 	bl	8010908 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>
 8010e1e:	4620      	mov	r0, r4
 8010e20:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8010e24:	f7ff bee0 	b.w	8010be8 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>

08010e28 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>:
 8010e28:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010e2c:	e9dd 4e0c 	ldrd	r4, lr, [sp, #48]	; 0x30
 8010e30:	f9bd 8028 	ldrsh.w	r8, [sp, #40]	; 0x28
 8010e34:	f9bd b02c 	ldrsh.w	fp, [sp, #44]	; 0x2c
 8010e38:	f89d 6038 	ldrb.w	r6, [sp, #56]	; 0x38
 8010e3c:	f89d c03c 	ldrb.w	ip, [sp, #60]	; 0x3c
 8010e40:	f89d 5040 	ldrb.w	r5, [sp, #64]	; 0x40
 8010e44:	8808      	ldrh	r0, [r1, #0]
 8010e46:	fb0e 4708 	mla	r7, lr, r8, r4
 8010e4a:	f1be 0f00 	cmp.w	lr, #0
 8010e4e:	eb02 0a07 	add.w	sl, r2, r7
 8010e52:	db37      	blt.n	8010ec4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x9c>
 8010e54:	45f3      	cmp	fp, lr
 8010e56:	dd35      	ble.n	8010ec4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x9c>
 8010e58:	2c00      	cmp	r4, #0
 8010e5a:	db31      	blt.n	8010ec0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x98>
 8010e5c:	45a0      	cmp	r8, r4
 8010e5e:	dd2f      	ble.n	8010ec0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x98>
 8010e60:	5dd2      	ldrb	r2, [r2, r7]
 8010e62:	f833 9012 	ldrh.w	r9, [r3, r2, lsl #1]
 8010e66:	1c62      	adds	r2, r4, #1
 8010e68:	d42f      	bmi.n	8010eca <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa2>
 8010e6a:	4590      	cmp	r8, r2
 8010e6c:	dd2d      	ble.n	8010eca <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa2>
 8010e6e:	b366      	cbz	r6, 8010eca <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa2>
 8010e70:	f89a 2001 	ldrb.w	r2, [sl, #1]
 8010e74:	f833 7012 	ldrh.w	r7, [r3, r2, lsl #1]
 8010e78:	f11e 0e01 	adds.w	lr, lr, #1
 8010e7c:	d429      	bmi.n	8010ed2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xaa>
 8010e7e:	45f3      	cmp	fp, lr
 8010e80:	dd27      	ble.n	8010ed2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xaa>
 8010e82:	f1bc 0f00 	cmp.w	ip, #0
 8010e86:	f000 80a0 	beq.w	8010fca <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a2>
 8010e8a:	2c00      	cmp	r4, #0
 8010e8c:	db1f      	blt.n	8010ece <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>
 8010e8e:	45a0      	cmp	r8, r4
 8010e90:	dd1d      	ble.n	8010ece <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>
 8010e92:	f81a 2008 	ldrb.w	r2, [sl, r8]
 8010e96:	f833 e012 	ldrh.w	lr, [r3, r2, lsl #1]
 8010e9a:	3401      	adds	r4, #1
 8010e9c:	d41c      	bmi.n	8010ed8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xb0>
 8010e9e:	45a0      	cmp	r8, r4
 8010ea0:	dd1a      	ble.n	8010ed8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xb0>
 8010ea2:	b1de      	cbz	r6, 8010edc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xb4>
 8010ea4:	44d0      	add	r8, sl
 8010ea6:	f898 2001 	ldrb.w	r2, [r8, #1]
 8010eaa:	f833 3012 	ldrh.w	r3, [r3, r2, lsl #1]
 8010eae:	2e0f      	cmp	r6, #15
 8010eb0:	d915      	bls.n	8010ede <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xb6>
 8010eb2:	4b49      	ldr	r3, [pc, #292]	; (8010fd8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1b0>)
 8010eb4:	4a49      	ldr	r2, [pc, #292]	; (8010fdc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1b4>)
 8010eb6:	484a      	ldr	r0, [pc, #296]	; (8010fe0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1b8>)
 8010eb8:	f240 11ef 	movw	r1, #495	; 0x1ef
 8010ebc:	f007 f84e 	bl	8017f5c <__assert_func>
 8010ec0:	4681      	mov	r9, r0
 8010ec2:	e7d0      	b.n	8010e66 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x3e>
 8010ec4:	4607      	mov	r7, r0
 8010ec6:	4681      	mov	r9, r0
 8010ec8:	e7d6      	b.n	8010e78 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x50>
 8010eca:	4607      	mov	r7, r0
 8010ecc:	e7d4      	b.n	8010e78 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x50>
 8010ece:	4686      	mov	lr, r0
 8010ed0:	e7e3      	b.n	8010e9a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x72>
 8010ed2:	4603      	mov	r3, r0
 8010ed4:	4686      	mov	lr, r0
 8010ed6:	e7ea      	b.n	8010eae <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x86>
 8010ed8:	4603      	mov	r3, r0
 8010eda:	e7e8      	b.n	8010eae <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x86>
 8010edc:	4603      	mov	r3, r0
 8010ede:	f1bc 0f0f 	cmp.w	ip, #15
 8010ee2:	d8e6      	bhi.n	8010eb2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x8a>
 8010ee4:	ea4f 4409 	mov.w	r4, r9, lsl #16
 8010ee8:	fb16 f80c 	smulbb	r8, r6, ip
 8010eec:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8010ef0:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 8010ef4:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8010ef8:	ea4f 08e8 	mov.w	r8, r8, asr #3
 8010efc:	ea44 0909 	orr.w	r9, r4, r9
 8010f00:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8010f04:	f1cc 0410 	rsb	r4, ip, #16
 8010f08:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8010f0c:	1ba4      	subs	r4, r4, r6
 8010f0e:	041a      	lsls	r2, r3, #16
 8010f10:	ebc8 0646 	rsb	r6, r8, r6, lsl #1
 8010f14:	ea4a 0707 	orr.w	r7, sl, r7
 8010f18:	4377      	muls	r7, r6
 8010f1a:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8010f1e:	eb08 0444 	add.w	r4, r8, r4, lsl #1
 8010f22:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8010f26:	fb04 7409 	mla	r4, r4, r9, r7
 8010f2a:	4313      	orrs	r3, r2
 8010f2c:	ea4f 420e 	mov.w	r2, lr, lsl #16
 8010f30:	fb08 4303 	mla	r3, r8, r3, r4
 8010f34:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8010f38:	f42e 64fc 	bic.w	r4, lr, #2016	; 0x7e0
 8010f3c:	4322      	orrs	r2, r4
 8010f3e:	ebc8 0c4c 	rsb	ip, r8, ip, lsl #1
 8010f42:	fb0c 3202 	mla	r2, ip, r2, r3
 8010f46:	0d53      	lsrs	r3, r2, #21
 8010f48:	0952      	lsrs	r2, r2, #5
 8010f4a:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8010f4e:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8010f52:	431a      	orrs	r2, r3
 8010f54:	b293      	uxth	r3, r2
 8010f56:	b2af      	uxth	r7, r5
 8010f58:	1202      	asrs	r2, r0, #8
 8010f5a:	43ed      	mvns	r5, r5
 8010f5c:	b2ed      	uxtb	r5, r5
 8010f5e:	ea4f 2c23 	mov.w	ip, r3, asr #8
 8010f62:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8010f66:	fb12 f205 	smulbb	r2, r2, r5
 8010f6a:	10c6      	asrs	r6, r0, #3
 8010f6c:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8010f70:	fb0c 2c07 	mla	ip, ip, r7, r2
 8010f74:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8010f78:	10da      	asrs	r2, r3, #3
 8010f7a:	fb16 f605 	smulbb	r6, r6, r5
 8010f7e:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8010f82:	fb02 6207 	mla	r2, r2, r7, r6
 8010f86:	b296      	uxth	r6, r2
 8010f88:	00c2      	lsls	r2, r0, #3
 8010f8a:	00dc      	lsls	r4, r3, #3
 8010f8c:	b2d2      	uxtb	r2, r2
 8010f8e:	b2e4      	uxtb	r4, r4
 8010f90:	fb12 f205 	smulbb	r2, r2, r5
 8010f94:	fb04 2207 	mla	r2, r4, r7, r2
 8010f98:	fa1f fc8c 	uxth.w	ip, ip
 8010f9c:	b292      	uxth	r2, r2
 8010f9e:	f10c 0301 	add.w	r3, ip, #1
 8010fa2:	1c50      	adds	r0, r2, #1
 8010fa4:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 8010fa8:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 8010fac:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8010fb0:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 8010fb4:	4313      	orrs	r3, r2
 8010fb6:	1c72      	adds	r2, r6, #1
 8010fb8:	eb02 2216 	add.w	r2, r2, r6, lsr #8
 8010fbc:	0952      	lsrs	r2, r2, #5
 8010fbe:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8010fc2:	4313      	orrs	r3, r2
 8010fc4:	800b      	strh	r3, [r1, #0]
 8010fc6:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010fca:	2e0f      	cmp	r6, #15
 8010fcc:	f63f af71 	bhi.w	8010eb2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x8a>
 8010fd0:	4603      	mov	r3, r0
 8010fd2:	4686      	mov	lr, r0
 8010fd4:	e786      	b.n	8010ee4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xbc>
 8010fd6:	bf00      	nop
 8010fd8:	0801bc7d 	.word	0x0801bc7d
 8010fdc:	0801c27e 	.word	0x0801c27e
 8010fe0:	0801bd05 	.word	0x0801bd05

08010fe4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 8010fe4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010fe8:	ed2d 8b08 	vpush	{d8-d11}
 8010fec:	b09b      	sub	sp, #108	; 0x6c
 8010fee:	e9dd 982d 	ldrd	r9, r8, [sp, #180]	; 0xb4
 8010ff2:	9309      	str	r3, [sp, #36]	; 0x24
 8010ff4:	f9bd 30d4 	ldrsh.w	r3, [sp, #212]	; 0xd4
 8010ff8:	9e31      	ldr	r6, [sp, #196]	; 0xc4
 8010ffa:	930a      	str	r3, [sp, #40]	; 0x28
 8010ffc:	f89d 30dc 	ldrb.w	r3, [sp, #220]	; 0xdc
 8011000:	930e      	str	r3, [sp, #56]	; 0x38
 8011002:	910d      	str	r1, [sp, #52]	; 0x34
 8011004:	e9dd 1332 	ldrd	r1, r3, [sp, #200]	; 0xc8
 8011008:	9018      	str	r0, [sp, #96]	; 0x60
 801100a:	6870      	ldr	r0, [r6, #4]
 801100c:	9217      	str	r2, [sp, #92]	; 0x5c
 801100e:	fb00 1303 	mla	r3, r0, r3, r1
 8011012:	9a36      	ldr	r2, [sp, #216]	; 0xd8
 8011014:	6831      	ldr	r1, [r6, #0]
 8011016:	6856      	ldr	r6, [r2, #4]
 8011018:	f9bd 40d0 	ldrsh.w	r4, [sp, #208]	; 0xd0
 801101c:	eb01 0a43 	add.w	sl, r1, r3, lsl #1
 8011020:	6813      	ldr	r3, [r2, #0]
 8011022:	930c      	str	r3, [sp, #48]	; 0x30
 8011024:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8011026:	43db      	mvns	r3, r3
 8011028:	b2db      	uxtb	r3, r3
 801102a:	eeb0 aa40 	vmov.f32	s20, s0
 801102e:	eef0 9a60 	vmov.f32	s19, s1
 8011032:	eeb0 9a41 	vmov.f32	s18, s2
 8011036:	eeb0 8a62 	vmov.f32	s16, s5
 801103a:	eef0 8a43 	vmov.f32	s17, s6
 801103e:	eef0 ba44 	vmov.f32	s23, s8
 8011042:	eeb0 ba64 	vmov.f32	s22, s9
 8011046:	eef0 aa45 	vmov.f32	s21, s10
 801104a:	3604      	adds	r6, #4
 801104c:	930b      	str	r3, [sp, #44]	; 0x2c
 801104e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8011050:	2b00      	cmp	r3, #0
 8011052:	dc03      	bgt.n	801105c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x78>
 8011054:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8011056:	2b00      	cmp	r3, #0
 8011058:	f340 8215 	ble.w	8011486 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4a2>
 801105c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801105e:	2b00      	cmp	r3, #0
 8011060:	f340 8102 	ble.w	8011268 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x284>
 8011064:	ea5f 4229 	movs.w	r2, r9, asr #16
 8011068:	ea4f 4328 	mov.w	r3, r8, asr #16
 801106c:	d42c      	bmi.n	80110c8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe4>
 801106e:	1c51      	adds	r1, r2, #1
 8011070:	428c      	cmp	r4, r1
 8011072:	dd2c      	ble.n	80110ce <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xea>
 8011074:	2b00      	cmp	r3, #0
 8011076:	db2a      	blt.n	80110ce <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xea>
 8011078:	980a      	ldr	r0, [sp, #40]	; 0x28
 801107a:	1c59      	adds	r1, r3, #1
 801107c:	4288      	cmp	r0, r1
 801107e:	dd26      	ble.n	80110ce <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xea>
 8011080:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8011082:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 8011084:	3b01      	subs	r3, #1
 8011086:	fb02 9203 	mla	r2, r2, r3, r9
 801108a:	1412      	asrs	r2, r2, #16
 801108c:	d429      	bmi.n	80110e2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfe>
 801108e:	3201      	adds	r2, #1
 8011090:	4294      	cmp	r4, r2
 8011092:	dd26      	ble.n	80110e2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfe>
 8011094:	9a30      	ldr	r2, [sp, #192]	; 0xc0
 8011096:	fb02 8303 	mla	r3, r2, r3, r8
 801109a:	141b      	asrs	r3, r3, #16
 801109c:	d421      	bmi.n	80110e2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfe>
 801109e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80110a0:	3301      	adds	r3, #1
 80110a2:	429a      	cmp	r2, r3
 80110a4:	dd1d      	ble.n	80110e2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfe>
 80110a6:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 80110aa:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
 80110ae:	f8cd a03c 	str.w	sl, [sp, #60]	; 0x3c
 80110b2:	9312      	str	r3, [sp, #72]	; 0x48
 80110b4:	f1be 0f00 	cmp.w	lr, #0
 80110b8:	f300 8138 	bgt.w	801132c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x348>
 80110bc:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80110be:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 80110c2:	eb0a 0a45 	add.w	sl, sl, r5, lsl #1
 80110c6:	e0d1      	b.n	801126c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x288>
 80110c8:	1c51      	adds	r1, r2, #1
 80110ca:	f040 80c3 	bne.w	8011254 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x270>
 80110ce:	42a2      	cmp	r2, r4
 80110d0:	f280 80c0 	bge.w	8011254 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x270>
 80110d4:	1c5f      	adds	r7, r3, #1
 80110d6:	f2c0 80bd 	blt.w	8011254 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x270>
 80110da:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80110dc:	4293      	cmp	r3, r2
 80110de:	f280 80b9 	bge.w	8011254 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x270>
 80110e2:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 80110e6:	4657      	mov	r7, sl
 80110e8:	f1bb 0f00 	cmp.w	fp, #0
 80110ec:	dde6      	ble.n	80110bc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xd8>
 80110ee:	ea5f 4229 	movs.w	r2, r9, asr #16
 80110f2:	ea4f 4328 	mov.w	r3, r8, asr #16
 80110f6:	f3c9 3003 	ubfx	r0, r9, #12, #4
 80110fa:	f3c8 3103 	ubfx	r1, r8, #12, #4
 80110fe:	f100 80fc 	bmi.w	80112fa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x316>
 8011102:	f102 0c01 	add.w	ip, r2, #1
 8011106:	4564      	cmp	r4, ip
 8011108:	f340 80f9 	ble.w	80112fe <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x31a>
 801110c:	2b00      	cmp	r3, #0
 801110e:	f2c0 80f6 	blt.w	80112fe <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x31a>
 8011112:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 8011114:	f103 0c01 	add.w	ip, r3, #1
 8011118:	4565      	cmp	r5, ip
 801111a:	f340 80f0 	ble.w	80112fe <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x31a>
 801111e:	fb03 2304 	mla	r3, r3, r4, r2
 8011122:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8011124:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8011126:	441a      	add	r2, r3
 8011128:	5ceb      	ldrb	r3, [r5, r3]
 801112a:	f836 e013 	ldrh.w	lr, [r6, r3, lsl #1]
 801112e:	2800      	cmp	r0, #0
 8011130:	f000 80db 	beq.w	80112ea <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x306>
 8011134:	7853      	ldrb	r3, [r2, #1]
 8011136:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801113a:	9313      	str	r3, [sp, #76]	; 0x4c
 801113c:	b141      	cbz	r1, 8011150 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x16c>
 801113e:	1913      	adds	r3, r2, r4
 8011140:	5d12      	ldrb	r2, [r2, r4]
 8011142:	785b      	ldrb	r3, [r3, #1]
 8011144:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 8011148:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801114c:	9210      	str	r2, [sp, #64]	; 0x40
 801114e:	9314      	str	r3, [sp, #80]	; 0x50
 8011150:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8011152:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8011154:	fb10 f201 	smulbb	r2, r0, r1
 8011158:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801115c:	10d2      	asrs	r2, r2, #3
 801115e:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8011162:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8011166:	ea4c 0c03 	orr.w	ip, ip, r3
 801116a:	ebc2 0340 	rsb	r3, r2, r0, lsl #1
 801116e:	930f      	str	r3, [sp, #60]	; 0x3c
 8011170:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8011172:	041b      	lsls	r3, r3, #16
 8011174:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 8011178:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801117c:	432b      	orrs	r3, r5
 801117e:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8011180:	4353      	muls	r3, r2
 8011182:	fb05 330c 	mla	r3, r5, ip, r3
 8011186:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 801118a:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801118e:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8011192:	ea4c 0e0e 	orr.w	lr, ip, lr
 8011196:	f1c1 0c10 	rsb	ip, r1, #16
 801119a:	ebac 0c00 	sub.w	ip, ip, r0
 801119e:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 80111a2:	fb0c 3c0e 	mla	ip, ip, lr, r3
 80111a6:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80111a8:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 80111aa:	0418      	lsls	r0, r3, #16
 80111ac:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 80111b0:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 80111b4:	4318      	orrs	r0, r3
 80111b6:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 80111ba:	fb02 c200 	mla	r2, r2, r0, ip
 80111be:	0d53      	lsrs	r3, r2, #21
 80111c0:	0952      	lsrs	r2, r2, #5
 80111c2:	f8b7 c000 	ldrh.w	ip, [r7]
 80111c6:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80111ca:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80111ce:	431a      	orrs	r2, r3
 80111d0:	b292      	uxth	r2, r2
 80111d2:	ea4f 212c 	mov.w	r1, ip, asr #8
 80111d6:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 80111da:	1210      	asrs	r0, r2, #8
 80111dc:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 80111e0:	fb11 f105 	smulbb	r1, r1, r5
 80111e4:	ea4f 0eec 	mov.w	lr, ip, asr #3
 80111e8:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 80111ec:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 80111f0:	fb00 1003 	mla	r0, r0, r3, r1
 80111f4:	fa5f fc8c 	uxtb.w	ip, ip
 80111f8:	10d1      	asrs	r1, r2, #3
 80111fa:	00d2      	lsls	r2, r2, #3
 80111fc:	fb1c fc05 	smulbb	ip, ip, r5
 8011200:	b2d2      	uxtb	r2, r2
 8011202:	fb02 c203 	mla	r2, r2, r3, ip
 8011206:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 801120a:	b280      	uxth	r0, r0
 801120c:	b292      	uxth	r2, r2
 801120e:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8011212:	fb1e fe05 	smulbb	lr, lr, r5
 8011216:	fb01 e103 	mla	r1, r1, r3, lr
 801121a:	f102 0c01 	add.w	ip, r2, #1
 801121e:	1c43      	adds	r3, r0, #1
 8011220:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8011224:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 8011228:	b289      	uxth	r1, r1
 801122a:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801122e:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 8011232:	4313      	orrs	r3, r2
 8011234:	1c4a      	adds	r2, r1, #1
 8011236:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801123a:	0949      	lsrs	r1, r1, #5
 801123c:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8011240:	430b      	orrs	r3, r1
 8011242:	803b      	strh	r3, [r7, #0]
 8011244:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
 8011246:	4499      	add	r9, r3
 8011248:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801124a:	3702      	adds	r7, #2
 801124c:	4498      	add	r8, r3
 801124e:	f10b 3bff 	add.w	fp, fp, #4294967295
 8011252:	e749      	b.n	80110e8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x104>
 8011254:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
 8011256:	4499      	add	r9, r3
 8011258:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801125a:	4498      	add	r8, r3
 801125c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801125e:	3b01      	subs	r3, #1
 8011260:	9309      	str	r3, [sp, #36]	; 0x24
 8011262:	f10a 0a02 	add.w	sl, sl, #2
 8011266:	e6f9      	b.n	801105c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x78>
 8011268:	f47f af0a 	bne.w	8011080 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9c>
 801126c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801126e:	2b00      	cmp	r3, #0
 8011270:	f340 8109 	ble.w	8011486 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4a2>
 8011274:	ee3a aa2b 	vadd.f32	s20, s20, s23
 8011278:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801127c:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 8011280:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8011282:	ee79 9a8b 	vadd.f32	s19, s19, s22
 8011286:	ee39 9a2a 	vadd.f32	s18, s18, s21
 801128a:	ee29 7aa7 	vmul.f32	s14, s19, s15
 801128e:	eef0 6a48 	vmov.f32	s13, s16
 8011292:	ee69 7a27 	vmul.f32	s15, s18, s15
 8011296:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801129a:	ee37 8a48 	vsub.f32	s16, s14, s16
 801129e:	ee16 9a90 	vmov	r9, s13
 80112a2:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 80112a6:	eef0 6a68 	vmov.f32	s13, s17
 80112aa:	ee77 8ae8 	vsub.f32	s17, s15, s17
 80112ae:	ee18 2a10 	vmov	r2, s16
 80112b2:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 80112b6:	fb92 f3f3 	sdiv	r3, r2, r3
 80112ba:	ee18 2a90 	vmov	r2, s17
 80112be:	932f      	str	r3, [sp, #188]	; 0xbc
 80112c0:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80112c2:	fb92 f3f3 	sdiv	r3, r2, r3
 80112c6:	9330      	str	r3, [sp, #192]	; 0xc0
 80112c8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80112ca:	9a17      	ldr	r2, [sp, #92]	; 0x5c
 80112cc:	3b01      	subs	r3, #1
 80112ce:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80112d2:	930d      	str	r3, [sp, #52]	; 0x34
 80112d4:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80112d6:	bf08      	it	eq
 80112d8:	4613      	moveq	r3, r2
 80112da:	ee16 8a90 	vmov	r8, s13
 80112de:	9309      	str	r3, [sp, #36]	; 0x24
 80112e0:	eef0 8a67 	vmov.f32	s17, s15
 80112e4:	eeb0 8a47 	vmov.f32	s16, s14
 80112e8:	e6b1      	b.n	801104e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6a>
 80112ea:	2900      	cmp	r1, #0
 80112ec:	f43f af30 	beq.w	8011150 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x16c>
 80112f0:	5d13      	ldrb	r3, [r2, r4]
 80112f2:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 80112f6:	9310      	str	r3, [sp, #64]	; 0x40
 80112f8:	e72a      	b.n	8011150 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x16c>
 80112fa:	1c55      	adds	r5, r2, #1
 80112fc:	d1a2      	bne.n	8011244 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x260>
 80112fe:	4294      	cmp	r4, r2
 8011300:	dda0      	ble.n	8011244 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x260>
 8011302:	1c5d      	adds	r5, r3, #1
 8011304:	db9e      	blt.n	8011244 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x260>
 8011306:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 8011308:	429d      	cmp	r5, r3
 801130a:	dd9b      	ble.n	8011244 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x260>
 801130c:	e9cd 3003 	strd	r3, r0, [sp, #12]
 8011310:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8011312:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8011314:	9202      	str	r2, [sp, #8]
 8011316:	e9cd 1505 	strd	r1, r5, [sp, #20]
 801131a:	e9cd 4300 	strd	r4, r3, [sp]
 801131e:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8011320:	9818      	ldr	r0, [sp, #96]	; 0x60
 8011322:	4633      	mov	r3, r6
 8011324:	4639      	mov	r1, r7
 8011326:	f7ff fd7f 	bl	8010e28 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>
 801132a:	e78b      	b.n	8011244 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x260>
 801132c:	ea4f 4329 	mov.w	r3, r9, asr #16
 8011330:	ea4f 4228 	mov.w	r2, r8, asr #16
 8011334:	fb04 3202 	mla	r2, r4, r2, r3
 8011338:	990c      	ldr	r1, [sp, #48]	; 0x30
 801133a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801133c:	4413      	add	r3, r2
 801133e:	5c8a      	ldrb	r2, [r1, r2]
 8011340:	f3c9 3c03 	ubfx	ip, r9, #12, #4
 8011344:	f3c8 3003 	ubfx	r0, r8, #12, #4
 8011348:	f836 1012 	ldrh.w	r1, [r6, r2, lsl #1]
 801134c:	f1bc 0f00 	cmp.w	ip, #0
 8011350:	f000 8091 	beq.w	8011476 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x492>
 8011354:	785a      	ldrb	r2, [r3, #1]
 8011356:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 801135a:	9215      	str	r2, [sp, #84]	; 0x54
 801135c:	b140      	cbz	r0, 8011370 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x38c>
 801135e:	191a      	adds	r2, r3, r4
 8011360:	5d1b      	ldrb	r3, [r3, r4]
 8011362:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8011366:	9311      	str	r3, [sp, #68]	; 0x44
 8011368:	7853      	ldrb	r3, [r2, #1]
 801136a:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801136e:	9316      	str	r3, [sp, #88]	; 0x58
 8011370:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8011372:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8011374:	fb1c f200 	smulbb	r2, ip, r0
 8011378:	041f      	lsls	r7, r3, #16
 801137a:	10d2      	asrs	r2, r2, #3
 801137c:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8011380:	f007 67fc 	and.w	r7, r7, #132120576	; 0x7e00000
 8011384:	431f      	orrs	r7, r3
 8011386:	ebc2 034c 	rsb	r3, r2, ip, lsl #1
 801138a:	9319      	str	r3, [sp, #100]	; 0x64
 801138c:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801138e:	041b      	lsls	r3, r3, #16
 8011390:	f425 6bfc 	bic.w	fp, r5, #2016	; 0x7e0
 8011394:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8011398:	ea43 030b 	orr.w	r3, r3, fp
 801139c:	9d19      	ldr	r5, [sp, #100]	; 0x64
 801139e:	4353      	muls	r3, r2
 80113a0:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 80113a4:	fb05 3707 	mla	r7, r5, r7, r3
 80113a8:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 80113ac:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
 80113b0:	ea43 0b01 	orr.w	fp, r3, r1
 80113b4:	f1c0 0110 	rsb	r1, r0, #16
 80113b8:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80113ba:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 80113bc:	eba1 0c0c 	sub.w	ip, r1, ip
 80113c0:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 80113c4:	fb0c 770b 	mla	r7, ip, fp, r7
 80113c8:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 80113cc:	f423 6bfc 	bic.w	fp, r3, #2016	; 0x7e0
 80113d0:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 80113d4:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 80113d8:	ea4c 0c0b 	orr.w	ip, ip, fp
 80113dc:	fb02 770c 	mla	r7, r2, ip, r7
 80113e0:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80113e2:	0d79      	lsrs	r1, r7, #21
 80113e4:	8812      	ldrh	r2, [r2, #0]
 80113e6:	097f      	lsrs	r7, r7, #5
 80113e8:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80113ec:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 80113f0:	430f      	orrs	r7, r1
 80113f2:	1211      	asrs	r1, r2, #8
 80113f4:	b2bb      	uxth	r3, r7
 80113f6:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 80113fa:	fb11 f105 	smulbb	r1, r1, r5
 80113fe:	1218      	asrs	r0, r3, #8
 8011400:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8011402:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8011406:	fb00 1005 	mla	r0, r0, r5, r1
 801140a:	10d7      	asrs	r7, r2, #3
 801140c:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 801140e:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8011412:	fb17 f705 	smulbb	r7, r7, r5
 8011416:	10d9      	asrs	r1, r3, #3
 8011418:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801141a:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801141e:	fb01 7105 	mla	r1, r1, r5, r7
 8011422:	00d2      	lsls	r2, r2, #3
 8011424:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8011426:	b2d2      	uxtb	r2, r2
 8011428:	fb12 f205 	smulbb	r2, r2, r5
 801142c:	00db      	lsls	r3, r3, #3
 801142e:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8011430:	b2db      	uxtb	r3, r3
 8011432:	b280      	uxth	r0, r0
 8011434:	fb03 2305 	mla	r3, r3, r5, r2
 8011438:	b29b      	uxth	r3, r3
 801143a:	b289      	uxth	r1, r1
 801143c:	1c42      	adds	r2, r0, #1
 801143e:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8011442:	1c4f      	adds	r7, r1, #1
 8011444:	1c5a      	adds	r2, r3, #1
 8011446:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 801144a:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 801144e:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 8011452:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8011456:	0949      	lsrs	r1, r1, #5
 8011458:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801145a:	4310      	orrs	r0, r2
 801145c:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8011460:	4308      	orrs	r0, r1
 8011462:	f823 0b02 	strh.w	r0, [r3], #2
 8011466:	930f      	str	r3, [sp, #60]	; 0x3c
 8011468:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
 801146a:	4499      	add	r9, r3
 801146c:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801146e:	f10e 3eff 	add.w	lr, lr, #4294967295
 8011472:	4498      	add	r8, r3
 8011474:	e61e      	b.n	80110b4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xd0>
 8011476:	2800      	cmp	r0, #0
 8011478:	f43f af7a 	beq.w	8011370 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x38c>
 801147c:	5d1b      	ldrb	r3, [r3, r4]
 801147e:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8011482:	9311      	str	r3, [sp, #68]	; 0x44
 8011484:	e774      	b.n	8011370 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x38c>
 8011486:	b01b      	add	sp, #108	; 0x6c
 8011488:	ecbd 8b08 	vpop	{d8-d11}
 801148c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08011490 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 8011490:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8011494:	e9dd 560a 	ldrd	r5, r6, [sp, #40]	; 0x28
 8011498:	f9bd e020 	ldrsh.w	lr, [sp, #32]
 801149c:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 80114a0:	f89d 4030 	ldrb.w	r4, [sp, #48]	; 0x30
 80114a4:	f89d c034 	ldrb.w	ip, [sp, #52]	; 0x34
 80114a8:	8808      	ldrh	r0, [r1, #0]
 80114aa:	fb06 570e 	mla	r7, r6, lr, r5
 80114ae:	2e00      	cmp	r6, #0
 80114b0:	eb02 0807 	add.w	r8, r2, r7
 80114b4:	db38      	blt.n	8011528 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x98>
 80114b6:	45b1      	cmp	r9, r6
 80114b8:	dd36      	ble.n	8011528 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x98>
 80114ba:	2d00      	cmp	r5, #0
 80114bc:	db32      	blt.n	8011524 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x94>
 80114be:	45ae      	cmp	lr, r5
 80114c0:	dd30      	ble.n	8011524 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x94>
 80114c2:	5dd2      	ldrb	r2, [r2, r7]
 80114c4:	f833 7012 	ldrh.w	r7, [r3, r2, lsl #1]
 80114c8:	1c6a      	adds	r2, r5, #1
 80114ca:	d430      	bmi.n	801152e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x9e>
 80114cc:	4596      	cmp	lr, r2
 80114ce:	dd2e      	ble.n	801152e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x9e>
 80114d0:	b36c      	cbz	r4, 801152e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x9e>
 80114d2:	f898 2001 	ldrb.w	r2, [r8, #1]
 80114d6:	f833 2012 	ldrh.w	r2, [r3, r2, lsl #1]
 80114da:	3601      	adds	r6, #1
 80114dc:	d42b      	bmi.n	8011536 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xa6>
 80114de:	45b1      	cmp	r9, r6
 80114e0:	dd29      	ble.n	8011536 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xa6>
 80114e2:	f1bc 0f00 	cmp.w	ip, #0
 80114e6:	d028      	beq.n	801153a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xaa>
 80114e8:	2d00      	cmp	r5, #0
 80114ea:	db22      	blt.n	8011532 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xa2>
 80114ec:	45ae      	cmp	lr, r5
 80114ee:	dd20      	ble.n	8011532 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xa2>
 80114f0:	f818 600e 	ldrb.w	r6, [r8, lr]
 80114f4:	f833 6016 	ldrh.w	r6, [r3, r6, lsl #1]
 80114f8:	3501      	adds	r5, #1
 80114fa:	d407      	bmi.n	801150c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7c>
 80114fc:	45ae      	cmp	lr, r5
 80114fe:	dd05      	ble.n	801150c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7c>
 8011500:	b134      	cbz	r4, 8011510 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 8011502:	44c6      	add	lr, r8
 8011504:	f89e 0001 	ldrb.w	r0, [lr, #1]
 8011508:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 801150c:	2c0f      	cmp	r4, #15
 801150e:	d802      	bhi.n	8011516 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x86>
 8011510:	f1bc 0f0f 	cmp.w	ip, #15
 8011514:	d914      	bls.n	8011540 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xb0>
 8011516:	4b26      	ldr	r3, [pc, #152]	; (80115b0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x120>)
 8011518:	4a26      	ldr	r2, [pc, #152]	; (80115b4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x124>)
 801151a:	4827      	ldr	r0, [pc, #156]	; (80115b8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x128>)
 801151c:	f240 11ef 	movw	r1, #495	; 0x1ef
 8011520:	f006 fd1c 	bl	8017f5c <__assert_func>
 8011524:	4607      	mov	r7, r0
 8011526:	e7cf      	b.n	80114c8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x38>
 8011528:	4602      	mov	r2, r0
 801152a:	4607      	mov	r7, r0
 801152c:	e7d5      	b.n	80114da <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4a>
 801152e:	4602      	mov	r2, r0
 8011530:	e7d3      	b.n	80114da <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4a>
 8011532:	4606      	mov	r6, r0
 8011534:	e7e0      	b.n	80114f8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x68>
 8011536:	4606      	mov	r6, r0
 8011538:	e7e8      	b.n	801150c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7c>
 801153a:	2c0f      	cmp	r4, #15
 801153c:	d8eb      	bhi.n	8011516 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x86>
 801153e:	4606      	mov	r6, r0
 8011540:	043d      	lsls	r5, r7, #16
 8011542:	fb14 f30c 	smulbb	r3, r4, ip
 8011546:	f005 65fc 	and.w	r5, r5, #132120576	; 0x7e00000
 801154a:	ea4f 4e02 	mov.w	lr, r2, lsl #16
 801154e:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8011552:	10db      	asrs	r3, r3, #3
 8011554:	432f      	orrs	r7, r5
 8011556:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 801155a:	f1cc 0510 	rsb	r5, ip, #16
 801155e:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8011562:	1b2d      	subs	r5, r5, r4
 8011564:	ea4e 0202 	orr.w	r2, lr, r2
 8011568:	ebc3 0444 	rsb	r4, r3, r4, lsl #1
 801156c:	eb03 0545 	add.w	r5, r3, r5, lsl #1
 8011570:	4354      	muls	r4, r2
 8011572:	fb05 4507 	mla	r5, r5, r7, r4
 8011576:	0404      	lsls	r4, r0, #16
 8011578:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 801157c:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8011580:	4320      	orrs	r0, r4
 8011582:	fb03 5400 	mla	r4, r3, r0, r5
 8011586:	0430      	lsls	r0, r6, #16
 8011588:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801158c:	f426 66fc 	bic.w	r6, r6, #2016	; 0x7e0
 8011590:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 8011594:	4330      	orrs	r0, r6
 8011596:	fb03 4000 	mla	r0, r3, r0, r4
 801159a:	0d43      	lsrs	r3, r0, #21
 801159c:	0940      	lsrs	r0, r0, #5
 801159e:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80115a2:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 80115a6:	4318      	orrs	r0, r3
 80115a8:	8008      	strh	r0, [r1, #0]
 80115aa:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80115ae:	bf00      	nop
 80115b0:	0801bc7d 	.word	0x0801bc7d
 80115b4:	0801c27e 	.word	0x0801c27e
 80115b8:	0801bd05 	.word	0x0801bd05

080115bc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 80115bc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80115c0:	ed2d 8b0a 	vpush	{d8-d12}
 80115c4:	b095      	sub	sp, #84	; 0x54
 80115c6:	e9dd 9629 	ldrd	r9, r6, [sp, #164]	; 0xa4
 80115ca:	9f2d      	ldr	r7, [sp, #180]	; 0xb4
 80115cc:	9306      	str	r3, [sp, #24]
 80115ce:	f9bd 30c4 	ldrsh.w	r3, [sp, #196]	; 0xc4
 80115d2:	9109      	str	r1, [sp, #36]	; 0x24
 80115d4:	9307      	str	r3, [sp, #28]
 80115d6:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	; 0xb8
 80115da:	9012      	str	r0, [sp, #72]	; 0x48
 80115dc:	6878      	ldr	r0, [r7, #4]
 80115de:	9211      	str	r2, [sp, #68]	; 0x44
 80115e0:	9a32      	ldr	r2, [sp, #200]	; 0xc8
 80115e2:	f9bd 40c0 	ldrsh.w	r4, [sp, #192]	; 0xc0
 80115e6:	fb00 1303 	mla	r3, r0, r3, r1
 80115ea:	6839      	ldr	r1, [r7, #0]
 80115ec:	6857      	ldr	r7, [r2, #4]
 80115ee:	eb01 0a43 	add.w	sl, r1, r3, lsl #1
 80115f2:	6813      	ldr	r3, [r2, #0]
 80115f4:	9308      	str	r3, [sp, #32]
 80115f6:	eeb0 aa40 	vmov.f32	s20, s0
 80115fa:	eef0 9a60 	vmov.f32	s19, s1
 80115fe:	eeb0 9a41 	vmov.f32	s18, s2
 8011602:	eeb0 8a62 	vmov.f32	s16, s5
 8011606:	eef0 8a43 	vmov.f32	s17, s6
 801160a:	eeb0 ca44 	vmov.f32	s24, s8
 801160e:	eef0 ba64 	vmov.f32	s23, s9
 8011612:	eeb0 ba45 	vmov.f32	s22, s10
 8011616:	3704      	adds	r7, #4
 8011618:	eef7 aa00 	vmov.f32	s21, #112	; 0x3f800000  1.0
 801161c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801161e:	2b00      	cmp	r3, #0
 8011620:	dc03      	bgt.n	801162a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6e>
 8011622:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8011624:	2b00      	cmp	r3, #0
 8011626:	f340 819a 	ble.w	801195e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3a2>
 801162a:	9b06      	ldr	r3, [sp, #24]
 801162c:	2b00      	cmp	r3, #0
 801162e:	f340 80c4 	ble.w	80117ba <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1fe>
 8011632:	ea5f 4229 	movs.w	r2, r9, asr #16
 8011636:	ea4f 4326 	mov.w	r3, r6, asr #16
 801163a:	d429      	bmi.n	8011690 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xd4>
 801163c:	1c51      	adds	r1, r2, #1
 801163e:	428c      	cmp	r4, r1
 8011640:	dd29      	ble.n	8011696 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xda>
 8011642:	2b00      	cmp	r3, #0
 8011644:	db27      	blt.n	8011696 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xda>
 8011646:	9807      	ldr	r0, [sp, #28]
 8011648:	1c59      	adds	r1, r3, #1
 801164a:	4288      	cmp	r0, r1
 801164c:	dd23      	ble.n	8011696 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xda>
 801164e:	9b06      	ldr	r3, [sp, #24]
 8011650:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 8011652:	3b01      	subs	r3, #1
 8011654:	fb02 9203 	mla	r2, r2, r3, r9
 8011658:	1412      	asrs	r2, r2, #16
 801165a:	d425      	bmi.n	80116a8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xec>
 801165c:	3201      	adds	r2, #1
 801165e:	4294      	cmp	r4, r2
 8011660:	dd22      	ble.n	80116a8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xec>
 8011662:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 8011664:	fb02 6303 	mla	r3, r2, r3, r6
 8011668:	141b      	asrs	r3, r3, #16
 801166a:	d41d      	bmi.n	80116a8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xec>
 801166c:	9a07      	ldr	r2, [sp, #28]
 801166e:	3301      	adds	r3, #1
 8011670:	429a      	cmp	r2, r3
 8011672:	dd19      	ble.n	80116a8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xec>
 8011674:	f8dd 8018 	ldr.w	r8, [sp, #24]
 8011678:	f8cd a030 	str.w	sl, [sp, #48]	; 0x30
 801167c:	f1b8 0f00 	cmp.w	r8, #0
 8011680:	f300 80f8 	bgt.w	8011874 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2b8>
 8011684:	9b06      	ldr	r3, [sp, #24]
 8011686:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 801168a:	eb0a 0a45 	add.w	sl, sl, r5, lsl #1
 801168e:	e096      	b.n	80117be <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x202>
 8011690:	1c51      	adds	r1, r2, #1
 8011692:	f040 8088 	bne.w	80117a6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1ea>
 8011696:	42a2      	cmp	r2, r4
 8011698:	f280 8085 	bge.w	80117a6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1ea>
 801169c:	1c5a      	adds	r2, r3, #1
 801169e:	f2c0 8082 	blt.w	80117a6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1ea>
 80116a2:	9a07      	ldr	r2, [sp, #28]
 80116a4:	4293      	cmp	r3, r2
 80116a6:	da7e      	bge.n	80117a6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1ea>
 80116a8:	f8dd b018 	ldr.w	fp, [sp, #24]
 80116ac:	46d0      	mov	r8, sl
 80116ae:	f1bb 0f00 	cmp.w	fp, #0
 80116b2:	dde7      	ble.n	8011684 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xc8>
 80116b4:	ea5f 4229 	movs.w	r2, r9, asr #16
 80116b8:	ea4f 4326 	mov.w	r3, r6, asr #16
 80116bc:	f3c9 3003 	ubfx	r0, r9, #12, #4
 80116c0:	f3c6 3103 	ubfx	r1, r6, #12, #4
 80116c4:	f100 80c0 	bmi.w	8011848 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x28c>
 80116c8:	f102 0c01 	add.w	ip, r2, #1
 80116cc:	4564      	cmp	r4, ip
 80116ce:	f340 80bd 	ble.w	801184c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x290>
 80116d2:	2b00      	cmp	r3, #0
 80116d4:	f2c0 80ba 	blt.w	801184c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x290>
 80116d8:	9d07      	ldr	r5, [sp, #28]
 80116da:	f103 0c01 	add.w	ip, r3, #1
 80116de:	4565      	cmp	r5, ip
 80116e0:	f340 80b4 	ble.w	801184c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x290>
 80116e4:	fb03 2304 	mla	r3, r3, r4, r2
 80116e8:	9d08      	ldr	r5, [sp, #32]
 80116ea:	9a08      	ldr	r2, [sp, #32]
 80116ec:	441a      	add	r2, r3
 80116ee:	5ceb      	ldrb	r3, [r5, r3]
 80116f0:	f837 e013 	ldrh.w	lr, [r7, r3, lsl #1]
 80116f4:	2800      	cmp	r0, #0
 80116f6:	f000 809f 	beq.w	8011838 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x27c>
 80116fa:	7853      	ldrb	r3, [r2, #1]
 80116fc:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8011700:	930d      	str	r3, [sp, #52]	; 0x34
 8011702:	b141      	cbz	r1, 8011716 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x15a>
 8011704:	1913      	adds	r3, r2, r4
 8011706:	5d12      	ldrb	r2, [r2, r4]
 8011708:	785b      	ldrb	r3, [r3, #1]
 801170a:	f837 2012 	ldrh.w	r2, [r7, r2, lsl #1]
 801170e:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8011712:	920a      	str	r2, [sp, #40]	; 0x28
 8011714:	930e      	str	r3, [sp, #56]	; 0x38
 8011716:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8011718:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801171a:	fb10 f201 	smulbb	r2, r0, r1
 801171e:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8011722:	10d2      	asrs	r2, r2, #3
 8011724:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8011728:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801172c:	ea4c 0c03 	orr.w	ip, ip, r3
 8011730:	ebc2 0340 	rsb	r3, r2, r0, lsl #1
 8011734:	930c      	str	r3, [sp, #48]	; 0x30
 8011736:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8011738:	041b      	lsls	r3, r3, #16
 801173a:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 801173e:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8011742:	432b      	orrs	r3, r5
 8011744:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8011746:	4353      	muls	r3, r2
 8011748:	fb05 330c 	mla	r3, r5, ip, r3
 801174c:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 8011750:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8011754:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8011758:	ea4c 0e0e 	orr.w	lr, ip, lr
 801175c:	f1c1 0c10 	rsb	ip, r1, #16
 8011760:	ebac 0c00 	sub.w	ip, ip, r0
 8011764:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 8011768:	fb0c 3c0e 	mla	ip, ip, lr, r3
 801176c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801176e:	0418      	lsls	r0, r3, #16
 8011770:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8011774:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8011778:	4318      	orrs	r0, r3
 801177a:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 801177e:	fb02 c200 	mla	r2, r2, r0, ip
 8011782:	0d53      	lsrs	r3, r2, #21
 8011784:	0952      	lsrs	r2, r2, #5
 8011786:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801178a:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801178e:	431a      	orrs	r2, r3
 8011790:	f8a8 2000 	strh.w	r2, [r8]
 8011794:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8011796:	4499      	add	r9, r3
 8011798:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801179a:	f108 0802 	add.w	r8, r8, #2
 801179e:	441e      	add	r6, r3
 80117a0:	f10b 3bff 	add.w	fp, fp, #4294967295
 80117a4:	e783      	b.n	80116ae <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf2>
 80117a6:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 80117a8:	4499      	add	r9, r3
 80117aa:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80117ac:	441e      	add	r6, r3
 80117ae:	9b06      	ldr	r3, [sp, #24]
 80117b0:	3b01      	subs	r3, #1
 80117b2:	9306      	str	r3, [sp, #24]
 80117b4:	f10a 0a02 	add.w	sl, sl, #2
 80117b8:	e737      	b.n	801162a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6e>
 80117ba:	f47f af48 	bne.w	801164e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x92>
 80117be:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80117c0:	2b00      	cmp	r3, #0
 80117c2:	f340 80cc 	ble.w	801195e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3a2>
 80117c6:	ee3a aa0c 	vadd.f32	s20, s20, s24
 80117ca:	ee79 9aab 	vadd.f32	s19, s19, s23
 80117ce:	eeca 7a8a 	vdiv.f32	s15, s21, s20
 80117d2:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80117d4:	ee39 9a0b 	vadd.f32	s18, s18, s22
 80117d8:	ee29 7aa7 	vmul.f32	s14, s19, s15
 80117dc:	eef0 6a48 	vmov.f32	s13, s16
 80117e0:	ee69 7a27 	vmul.f32	s15, s18, s15
 80117e4:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80117e8:	ee37 8a48 	vsub.f32	s16, s14, s16
 80117ec:	ee16 9a90 	vmov	r9, s13
 80117f0:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 80117f4:	eef0 6a68 	vmov.f32	s13, s17
 80117f8:	ee77 8ae8 	vsub.f32	s17, s15, s17
 80117fc:	ee18 2a10 	vmov	r2, s16
 8011800:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8011804:	fb92 f3f3 	sdiv	r3, r2, r3
 8011808:	ee18 2a90 	vmov	r2, s17
 801180c:	932b      	str	r3, [sp, #172]	; 0xac
 801180e:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8011810:	fb92 f3f3 	sdiv	r3, r2, r3
 8011814:	932c      	str	r3, [sp, #176]	; 0xb0
 8011816:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8011818:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801181a:	3b01      	subs	r3, #1
 801181c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8011820:	9309      	str	r3, [sp, #36]	; 0x24
 8011822:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8011824:	bf08      	it	eq
 8011826:	4613      	moveq	r3, r2
 8011828:	ee16 6a90 	vmov	r6, s13
 801182c:	9306      	str	r3, [sp, #24]
 801182e:	eef0 8a67 	vmov.f32	s17, s15
 8011832:	eeb0 8a47 	vmov.f32	s16, s14
 8011836:	e6f1      	b.n	801161c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x60>
 8011838:	2900      	cmp	r1, #0
 801183a:	f43f af6c 	beq.w	8011716 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x15a>
 801183e:	5d13      	ldrb	r3, [r2, r4]
 8011840:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8011844:	930a      	str	r3, [sp, #40]	; 0x28
 8011846:	e766      	b.n	8011716 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x15a>
 8011848:	1c55      	adds	r5, r2, #1
 801184a:	d1a3      	bne.n	8011794 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d8>
 801184c:	4294      	cmp	r4, r2
 801184e:	dda1      	ble.n	8011794 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d8>
 8011850:	1c5d      	adds	r5, r3, #1
 8011852:	db9f      	blt.n	8011794 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d8>
 8011854:	9d07      	ldr	r5, [sp, #28]
 8011856:	429d      	cmp	r5, r3
 8011858:	dd9c      	ble.n	8011794 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d8>
 801185a:	e9cd 0104 	strd	r0, r1, [sp, #16]
 801185e:	e9cd 2302 	strd	r2, r3, [sp, #8]
 8011862:	e9cd 4500 	strd	r4, r5, [sp]
 8011866:	463b      	mov	r3, r7
 8011868:	9a08      	ldr	r2, [sp, #32]
 801186a:	9812      	ldr	r0, [sp, #72]	; 0x48
 801186c:	4641      	mov	r1, r8
 801186e:	f7ff fe0f 	bl	8011490 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 8011872:	e78f      	b.n	8011794 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d8>
 8011874:	ea4f 4329 	mov.w	r3, r9, asr #16
 8011878:	1432      	asrs	r2, r6, #16
 801187a:	fb04 3202 	mla	r2, r4, r2, r3
 801187e:	9908      	ldr	r1, [sp, #32]
 8011880:	9b08      	ldr	r3, [sp, #32]
 8011882:	4413      	add	r3, r2
 8011884:	5c8a      	ldrb	r2, [r1, r2]
 8011886:	f3c9 3e03 	ubfx	lr, r9, #12, #4
 801188a:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801188e:	f837 1012 	ldrh.w	r1, [r7, r2, lsl #1]
 8011892:	f1be 0f00 	cmp.w	lr, #0
 8011896:	d05b      	beq.n	8011950 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x394>
 8011898:	785a      	ldrb	r2, [r3, #1]
 801189a:	f837 2012 	ldrh.w	r2, [r7, r2, lsl #1]
 801189e:	920f      	str	r2, [sp, #60]	; 0x3c
 80118a0:	b140      	cbz	r0, 80118b4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2f8>
 80118a2:	191a      	adds	r2, r3, r4
 80118a4:	5d1b      	ldrb	r3, [r3, r4]
 80118a6:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 80118aa:	930b      	str	r3, [sp, #44]	; 0x2c
 80118ac:	7853      	ldrb	r3, [r2, #1]
 80118ae:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 80118b2:	9310      	str	r3, [sp, #64]	; 0x40
 80118b4:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80118b6:	9d10      	ldr	r5, [sp, #64]	; 0x40
 80118b8:	fb1e f200 	smulbb	r2, lr, r0
 80118bc:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 80118c0:	10d2      	asrs	r2, r2, #3
 80118c2:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 80118c6:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 80118ca:	ea4c 0c03 	orr.w	ip, ip, r3
 80118ce:	ebc2 034e 	rsb	r3, r2, lr, lsl #1
 80118d2:	9313      	str	r3, [sp, #76]	; 0x4c
 80118d4:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80118d6:	041b      	lsls	r3, r3, #16
 80118d8:	f425 6bfc 	bic.w	fp, r5, #2016	; 0x7e0
 80118dc:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 80118e0:	ea43 030b 	orr.w	r3, r3, fp
 80118e4:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 80118e6:	4353      	muls	r3, r2
 80118e8:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 80118ec:	fb05 3c0c 	mla	ip, r5, ip, r3
 80118f0:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 80118f4:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
 80118f8:	ea43 0b01 	orr.w	fp, r3, r1
 80118fc:	f1c0 0110 	rsb	r1, r0, #16
 8011900:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8011902:	eba1 0e0e 	sub.w	lr, r1, lr
 8011906:	eb02 0e4e 	add.w	lr, r2, lr, lsl #1
 801190a:	fb0e cc0b 	mla	ip, lr, fp, ip
 801190e:	ea4f 4b03 	mov.w	fp, r3, lsl #16
 8011912:	f423 6efc 	bic.w	lr, r3, #2016	; 0x7e0
 8011916:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801191a:	ea4b 0e0e 	orr.w	lr, fp, lr
 801191e:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 8011922:	fb02 cc0e 	mla	ip, r2, lr, ip
 8011926:	ea4f 535c 	mov.w	r3, ip, lsr #21
 801192a:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 801192e:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8011932:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8011936:	ea43 0c0c 	orr.w	ip, r3, ip
 801193a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801193c:	f823 cb02 	strh.w	ip, [r3], #2
 8011940:	930c      	str	r3, [sp, #48]	; 0x30
 8011942:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8011944:	4499      	add	r9, r3
 8011946:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8011948:	f108 38ff 	add.w	r8, r8, #4294967295
 801194c:	441e      	add	r6, r3
 801194e:	e695      	b.n	801167c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xc0>
 8011950:	2800      	cmp	r0, #0
 8011952:	d0af      	beq.n	80118b4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2f8>
 8011954:	5d1b      	ldrb	r3, [r3, r4]
 8011956:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801195a:	930b      	str	r3, [sp, #44]	; 0x2c
 801195c:	e7aa      	b.n	80118b4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2f8>
 801195e:	b015      	add	sp, #84	; 0x54
 8011960:	ecbd 8b0a 	vpop	{d8-d12}
 8011964:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08011968 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>:
 8011968:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801196c:	468b      	mov	fp, r1
 801196e:	8809      	ldrh	r1, [r1, #0]
 8011970:	b089      	sub	sp, #36	; 0x24
 8011972:	10cd      	asrs	r5, r1, #3
 8011974:	e9dd 6414 	ldrd	r6, r4, [sp, #80]	; 0x50
 8011978:	ea4f 2921 	mov.w	r9, r1, asr #8
 801197c:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8011980:	00c9      	lsls	r1, r1, #3
 8011982:	9500      	str	r5, [sp, #0]
 8011984:	b2c9      	uxtb	r1, r1
 8011986:	f9bd e048 	ldrsh.w	lr, [sp, #72]	; 0x48
 801198a:	9101      	str	r1, [sp, #4]
 801198c:	9900      	ldr	r1, [sp, #0]
 801198e:	9202      	str	r2, [sp, #8]
 8011990:	fb04 650e 	mla	r5, r4, lr, r6
 8011994:	f009 09f8 	and.w	r9, r9, #248	; 0xf8
 8011998:	eb02 0805 	add.w	r8, r2, r5
 801199c:	0209      	lsls	r1, r1, #8
 801199e:	9a01      	ldr	r2, [sp, #4]
 80119a0:	f9bd a04c 	ldrsh.w	sl, [sp, #76]	; 0x4c
 80119a4:	f89d 7058 	ldrb.w	r7, [sp, #88]	; 0x58
 80119a8:	f89d 005c 	ldrb.w	r0, [sp, #92]	; 0x5c
 80119ac:	f89d c060 	ldrb.w	ip, [sp, #96]	; 0x60
 80119b0:	ea41 4109 	orr.w	r1, r1, r9, lsl #16
 80119b4:	4311      	orrs	r1, r2
 80119b6:	2c00      	cmp	r4, #0
 80119b8:	9107      	str	r1, [sp, #28]
 80119ba:	db43      	blt.n	8011a44 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xdc>
 80119bc:	45a2      	cmp	sl, r4
 80119be:	dd41      	ble.n	8011a44 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xdc>
 80119c0:	2e00      	cmp	r6, #0
 80119c2:	db3d      	blt.n	8011a40 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd8>
 80119c4:	45b6      	cmp	lr, r6
 80119c6:	dd3b      	ble.n	8011a40 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd8>
 80119c8:	9a02      	ldr	r2, [sp, #8]
 80119ca:	5d55      	ldrb	r5, [r2, r5]
 80119cc:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 80119d0:	441d      	add	r5, r3
 80119d2:	1c72      	adds	r2, r6, #1
 80119d4:	d439      	bmi.n	8011a4a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xe2>
 80119d6:	4596      	cmp	lr, r2
 80119d8:	dd37      	ble.n	8011a4a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xe2>
 80119da:	2f00      	cmp	r7, #0
 80119dc:	d035      	beq.n	8011a4a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xe2>
 80119de:	f898 1001 	ldrb.w	r1, [r8, #1]
 80119e2:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 80119e6:	4419      	add	r1, r3
 80119e8:	3401      	adds	r4, #1
 80119ea:	d432      	bmi.n	8011a52 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xea>
 80119ec:	45a2      	cmp	sl, r4
 80119ee:	dd30      	ble.n	8011a52 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xea>
 80119f0:	b378      	cbz	r0, 8011a52 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xea>
 80119f2:	2e00      	cmp	r6, #0
 80119f4:	db2b      	blt.n	8011a4e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xe6>
 80119f6:	45b6      	cmp	lr, r6
 80119f8:	dd29      	ble.n	8011a4e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xe6>
 80119fa:	f818 400e 	ldrb.w	r4, [r8, lr]
 80119fe:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 8011a02:	441c      	add	r4, r3
 8011a04:	3601      	adds	r6, #1
 8011a06:	d427      	bmi.n	8011a58 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xf0>
 8011a08:	45b6      	cmp	lr, r6
 8011a0a:	dd25      	ble.n	8011a58 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xf0>
 8011a0c:	b327      	cbz	r7, 8011a58 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xf0>
 8011a0e:	44c6      	add	lr, r8
 8011a10:	f89e 2001 	ldrb.w	r2, [lr, #1]
 8011a14:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8011a18:	4413      	add	r3, r2
 8011a1a:	782a      	ldrb	r2, [r5, #0]
 8011a1c:	9202      	str	r2, [sp, #8]
 8011a1e:	780a      	ldrb	r2, [r1, #0]
 8011a20:	9203      	str	r2, [sp, #12]
 8011a22:	7822      	ldrb	r2, [r4, #0]
 8011a24:	9204      	str	r2, [sp, #16]
 8011a26:	2f0f      	cmp	r7, #15
 8011a28:	781a      	ldrb	r2, [r3, #0]
 8011a2a:	9205      	str	r2, [sp, #20]
 8011a2c:	d801      	bhi.n	8011a32 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xca>
 8011a2e:	280f      	cmp	r0, #15
 8011a30:	d914      	bls.n	8011a5c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xf4>
 8011a32:	4b3f      	ldr	r3, [pc, #252]	; (8011b30 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c8>)
 8011a34:	4a3f      	ldr	r2, [pc, #252]	; (8011b34 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1cc>)
 8011a36:	4840      	ldr	r0, [pc, #256]	; (8011b38 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d0>)
 8011a38:	f240 210d 	movw	r1, #525	; 0x20d
 8011a3c:	f006 fa8e 	bl	8017f5c <__assert_func>
 8011a40:	ad07      	add	r5, sp, #28
 8011a42:	e7c6      	b.n	80119d2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x6a>
 8011a44:	a907      	add	r1, sp, #28
 8011a46:	460d      	mov	r5, r1
 8011a48:	e7ce      	b.n	80119e8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x80>
 8011a4a:	a907      	add	r1, sp, #28
 8011a4c:	e7cc      	b.n	80119e8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x80>
 8011a4e:	ac07      	add	r4, sp, #28
 8011a50:	e7d8      	b.n	8011a04 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x9c>
 8011a52:	ab07      	add	r3, sp, #28
 8011a54:	461c      	mov	r4, r3
 8011a56:	e7e0      	b.n	8011a1a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xb2>
 8011a58:	ab07      	add	r3, sp, #28
 8011a5a:	e7de      	b.n	8011a1a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xb2>
 8011a5c:	b2ba      	uxth	r2, r7
 8011a5e:	b280      	uxth	r0, r0
 8011a60:	fb02 fa00 	mul.w	sl, r2, r0
 8011a64:	ebca 1000 	rsb	r0, sl, r0, lsl #4
 8011a68:	0112      	lsls	r2, r2, #4
 8011a6a:	b280      	uxth	r0, r0
 8011a6c:	f891 8002 	ldrb.w	r8, [r1, #2]
 8011a70:	7849      	ldrb	r1, [r1, #1]
 8011a72:	78ae      	ldrb	r6, [r5, #2]
 8011a74:	786d      	ldrb	r5, [r5, #1]
 8011a76:	f5c2 7e80 	rsb	lr, r2, #256	; 0x100
 8011a7a:	eba2 020a 	sub.w	r2, r2, sl
 8011a7e:	b292      	uxth	r2, r2
 8011a80:	ebae 0e00 	sub.w	lr, lr, r0
 8011a84:	fa1f fe8e 	uxth.w	lr, lr
 8011a88:	4351      	muls	r1, r2
 8011a8a:	fb02 f808 	mul.w	r8, r2, r8
 8011a8e:	fb0e 8806 	mla	r8, lr, r6, r8
 8011a92:	fb0e 1505 	mla	r5, lr, r5, r1
 8011a96:	78a6      	ldrb	r6, [r4, #2]
 8011a98:	7861      	ldrb	r1, [r4, #1]
 8011a9a:	fa1f f78c 	uxth.w	r7, ip
 8011a9e:	fb00 8806 	mla	r8, r0, r6, r8
 8011aa2:	fb00 5501 	mla	r5, r0, r1, r5
 8011aa6:	789e      	ldrb	r6, [r3, #2]
 8011aa8:	7859      	ldrb	r1, [r3, #1]
 8011aaa:	9b00      	ldr	r3, [sp, #0]
 8011aac:	ea6f 0c0c 	mvn.w	ip, ip
 8011ab0:	fa5f fc8c 	uxtb.w	ip, ip
 8011ab4:	fb0a 5101 	mla	r1, sl, r1, r5
 8011ab8:	fb13 f50c 	smulbb	r5, r3, ip
 8011abc:	9b03      	ldr	r3, [sp, #12]
 8011abe:	435a      	muls	r2, r3
 8011ac0:	9b02      	ldr	r3, [sp, #8]
 8011ac2:	fb0e 2203 	mla	r2, lr, r3, r2
 8011ac6:	9b04      	ldr	r3, [sp, #16]
 8011ac8:	fb00 2003 	mla	r0, r0, r3, r2
 8011acc:	9b05      	ldr	r3, [sp, #20]
 8011ace:	fb0a 8606 	mla	r6, sl, r6, r8
 8011ad2:	fb0a 0a03 	mla	sl, sl, r3, r0
 8011ad6:	9b01      	ldr	r3, [sp, #4]
 8011ad8:	fb19 f90c 	smulbb	r9, r9, ip
 8011adc:	f3ca 2a07 	ubfx	sl, sl, #8, #8
 8011ae0:	fb13 fc0c 	smulbb	ip, r3, ip
 8011ae4:	f3c6 2607 	ubfx	r6, r6, #8, #8
 8011ae8:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8011aec:	fb06 9607 	mla	r6, r6, r7, r9
 8011af0:	fb01 5107 	mla	r1, r1, r7, r5
 8011af4:	fb0a c707 	mla	r7, sl, r7, ip
 8011af8:	b2b6      	uxth	r6, r6
 8011afa:	b289      	uxth	r1, r1
 8011afc:	b2bf      	uxth	r7, r7
 8011afe:	f106 0901 	add.w	r9, r6, #1
 8011b02:	f107 0c01 	add.w	ip, r7, #1
 8011b06:	1c4d      	adds	r5, r1, #1
 8011b08:	eb09 2616 	add.w	r6, r9, r6, lsr #8
 8011b0c:	eb0c 2717 	add.w	r7, ip, r7, lsr #8
 8011b10:	eb05 2111 	add.w	r1, r5, r1, lsr #8
 8011b14:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8011b18:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 8011b1c:	0949      	lsrs	r1, r1, #5
 8011b1e:	433e      	orrs	r6, r7
 8011b20:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8011b24:	430e      	orrs	r6, r1
 8011b26:	f8ab 6000 	strh.w	r6, [fp]
 8011b2a:	b009      	add	sp, #36	; 0x24
 8011b2c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011b30:	0801bc7d 	.word	0x0801bc7d
 8011b34:	0801c1d5 	.word	0x0801c1d5
 8011b38:	0801bd05 	.word	0x0801bd05

08011b3c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 8011b3c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011b40:	ed2d 8b08 	vpush	{d8-d11}
 8011b44:	b097      	sub	sp, #92	; 0x5c
 8011b46:	eeb0 aa40 	vmov.f32	s20, s0
 8011b4a:	9309      	str	r3, [sp, #36]	; 0x24
 8011b4c:	f9bd 30c4 	ldrsh.w	r3, [sp, #196]	; 0xc4
 8011b50:	9c2d      	ldr	r4, [sp, #180]	; 0xb4
 8011b52:	930b      	str	r3, [sp, #44]	; 0x2c
 8011b54:	f89d 30cc 	ldrb.w	r3, [sp, #204]	; 0xcc
 8011b58:	9310      	str	r3, [sp, #64]	; 0x40
 8011b5a:	910f      	str	r1, [sp, #60]	; 0x3c
 8011b5c:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	; 0xb8
 8011b60:	9015      	str	r0, [sp, #84]	; 0x54
 8011b62:	6860      	ldr	r0, [r4, #4]
 8011b64:	9213      	str	r2, [sp, #76]	; 0x4c
 8011b66:	fb00 1303 	mla	r3, r0, r3, r1
 8011b6a:	9a32      	ldr	r2, [sp, #200]	; 0xc8
 8011b6c:	6821      	ldr	r1, [r4, #0]
 8011b6e:	6854      	ldr	r4, [r2, #4]
 8011b70:	f9bd 50c0 	ldrsh.w	r5, [sp, #192]	; 0xc0
 8011b74:	eb01 0343 	add.w	r3, r1, r3, lsl #1
 8011b78:	930a      	str	r3, [sp, #40]	; 0x28
 8011b7a:	6813      	ldr	r3, [r2, #0]
 8011b7c:	930e      	str	r3, [sp, #56]	; 0x38
 8011b7e:	1d23      	adds	r3, r4, #4
 8011b80:	9308      	str	r3, [sp, #32]
 8011b82:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8011b84:	43db      	mvns	r3, r3
 8011b86:	b2db      	uxtb	r3, r3
 8011b88:	eef0 9a60 	vmov.f32	s19, s1
 8011b8c:	eeb0 9a41 	vmov.f32	s18, s2
 8011b90:	eeb0 8a62 	vmov.f32	s16, s5
 8011b94:	eef0 8a43 	vmov.f32	s17, s6
 8011b98:	eef0 ba44 	vmov.f32	s23, s8
 8011b9c:	eeb0 ba64 	vmov.f32	s22, s9
 8011ba0:	eef0 aa45 	vmov.f32	s21, s10
 8011ba4:	930c      	str	r3, [sp, #48]	; 0x30
 8011ba6:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8011ba8:	2b00      	cmp	r3, #0
 8011baa:	dc03      	bgt.n	8011bb4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x78>
 8011bac:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8011bae:	2b00      	cmp	r3, #0
 8011bb0:	f340 825c 	ble.w	801206c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x530>
 8011bb4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8011bb6:	2b00      	cmp	r3, #0
 8011bb8:	f340 8127 	ble.w	8011e0a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2ce>
 8011bbc:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8011bbe:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8011bc0:	1412      	asrs	r2, r2, #16
 8011bc2:	ea4f 4323 	mov.w	r3, r3, asr #16
 8011bc6:	d430      	bmi.n	8011c2a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xee>
 8011bc8:	1c51      	adds	r1, r2, #1
 8011bca:	428d      	cmp	r5, r1
 8011bcc:	dd30      	ble.n	8011c30 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf4>
 8011bce:	2b00      	cmp	r3, #0
 8011bd0:	db2e      	blt.n	8011c30 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf4>
 8011bd2:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8011bd4:	1c59      	adds	r1, r3, #1
 8011bd6:	4288      	cmp	r0, r1
 8011bd8:	dd2a      	ble.n	8011c30 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf4>
 8011bda:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8011bdc:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 8011bde:	9929      	ldr	r1, [sp, #164]	; 0xa4
 8011be0:	3b01      	subs	r3, #1
 8011be2:	fb02 1203 	mla	r2, r2, r3, r1
 8011be6:	1412      	asrs	r2, r2, #16
 8011be8:	d42c      	bmi.n	8011c44 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x108>
 8011bea:	3201      	adds	r2, #1
 8011bec:	4295      	cmp	r5, r2
 8011bee:	dd29      	ble.n	8011c44 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x108>
 8011bf0:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 8011bf2:	992a      	ldr	r1, [sp, #168]	; 0xa8
 8011bf4:	fb02 1303 	mla	r3, r2, r3, r1
 8011bf8:	141b      	asrs	r3, r3, #16
 8011bfa:	d423      	bmi.n	8011c44 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x108>
 8011bfc:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8011bfe:	3301      	adds	r3, #1
 8011c00:	429a      	cmp	r2, r3
 8011c02:	dd1f      	ble.n	8011c44 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x108>
 8011c04:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8011c06:	9311      	str	r3, [sp, #68]	; 0x44
 8011c08:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8011c0a:	930d      	str	r3, [sp, #52]	; 0x34
 8011c0c:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 8011c10:	9312      	str	r3, [sp, #72]	; 0x48
 8011c12:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8011c14:	2b00      	cmp	r3, #0
 8011c16:	f300 8161 	bgt.w	8011edc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3a0>
 8011c1a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8011c1c:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8011c1e:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8011c22:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8011c26:	930a      	str	r3, [sp, #40]	; 0x28
 8011c28:	e0f1      	b.n	8011e0e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2d2>
 8011c2a:	1c51      	adds	r1, r2, #1
 8011c2c:	f040 80de 	bne.w	8011dec <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2b0>
 8011c30:	42aa      	cmp	r2, r5
 8011c32:	f280 80db 	bge.w	8011dec <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2b0>
 8011c36:	1c5f      	adds	r7, r3, #1
 8011c38:	f2c0 80d8 	blt.w	8011dec <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2b0>
 8011c3c:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8011c3e:	4293      	cmp	r3, r2
 8011c40:	f280 80d4 	bge.w	8011dec <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2b0>
 8011c44:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8011c46:	9311      	str	r3, [sp, #68]	; 0x44
 8011c48:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8011c4a:	930d      	str	r3, [sp, #52]	; 0x34
 8011c4c:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8011c4e:	2b00      	cmp	r3, #0
 8011c50:	dde3      	ble.n	8011c1a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xde>
 8011c52:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8011c54:	9829      	ldr	r0, [sp, #164]	; 0xa4
 8011c56:	992a      	ldr	r1, [sp, #168]	; 0xa8
 8011c58:	141a      	asrs	r2, r3, #16
 8011c5a:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8011c5c:	1400      	asrs	r0, r0, #16
 8011c5e:	f3c3 3303 	ubfx	r3, r3, #12, #4
 8011c62:	f3c1 3103 	ubfx	r1, r1, #12, #4
 8011c66:	f100 8120 	bmi.w	8011eaa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x36e>
 8011c6a:	1c46      	adds	r6, r0, #1
 8011c6c:	42b5      	cmp	r5, r6
 8011c6e:	f340 811e 	ble.w	8011eae <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x372>
 8011c72:	2a00      	cmp	r2, #0
 8011c74:	f2c0 811b 	blt.w	8011eae <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x372>
 8011c78:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 8011c7a:	1c56      	adds	r6, r2, #1
 8011c7c:	42b7      	cmp	r7, r6
 8011c7e:	f340 8116 	ble.w	8011eae <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x372>
 8011c82:	fb02 0005 	mla	r0, r2, r5, r0
 8011c86:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 8011c88:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8011c8a:	9c08      	ldr	r4, [sp, #32]
 8011c8c:	4402      	add	r2, r0
 8011c8e:	5c30      	ldrb	r0, [r6, r0]
 8011c90:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8011c94:	9014      	str	r0, [sp, #80]	; 0x50
 8011c96:	1826      	adds	r6, r4, r0
 8011c98:	2b00      	cmp	r3, #0
 8011c9a:	f000 80f7 	beq.w	8011e8c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x350>
 8011c9e:	f892 e001 	ldrb.w	lr, [r2, #1]
 8011ca2:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 8011ca6:	44a6      	add	lr, r4
 8011ca8:	2900      	cmp	r1, #0
 8011caa:	f000 80f8 	beq.w	8011e9e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x362>
 8011cae:	1950      	adds	r0, r2, r5
 8011cb0:	5d52      	ldrb	r2, [r2, r5]
 8011cb2:	7840      	ldrb	r0, [r0, #1]
 8011cb4:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8011cb8:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8011cbc:	4422      	add	r2, r4
 8011cbe:	4420      	add	r0, r4
 8011cc0:	b29b      	uxth	r3, r3
 8011cc2:	b289      	uxth	r1, r1
 8011cc4:	fb03 fa01 	mul.w	sl, r3, r1
 8011cc8:	ebca 1101 	rsb	r1, sl, r1, lsl #4
 8011ccc:	011b      	lsls	r3, r3, #4
 8011cce:	b289      	uxth	r1, r1
 8011cd0:	f89e c002 	ldrb.w	ip, [lr, #2]
 8011cd4:	f896 b002 	ldrb.w	fp, [r6, #2]
 8011cd8:	9f0d      	ldr	r7, [sp, #52]	; 0x34
 8011cda:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8011cdc:	f8b7 8000 	ldrh.w	r8, [r7]
 8011ce0:	f8bd 7040 	ldrh.w	r7, [sp, #64]	; 0x40
 8011ce4:	f5c3 7980 	rsb	r9, r3, #256	; 0x100
 8011ce8:	eba3 030a 	sub.w	r3, r3, sl
 8011cec:	b29b      	uxth	r3, r3
 8011cee:	eba9 0901 	sub.w	r9, r9, r1
 8011cf2:	fa1f f989 	uxth.w	r9, r9
 8011cf6:	fb03 fc0c 	mul.w	ip, r3, ip
 8011cfa:	fb09 cc0b 	mla	ip, r9, fp, ip
 8011cfe:	f892 b002 	ldrb.w	fp, [r2, #2]
 8011d02:	fb01 cc0b 	mla	ip, r1, fp, ip
 8011d06:	f890 b002 	ldrb.w	fp, [r0, #2]
 8011d0a:	fb0a cc0b 	mla	ip, sl, fp, ip
 8011d0e:	ea4f 2b28 	mov.w	fp, r8, asr #8
 8011d12:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
 8011d16:	fb1b fb04 	smulbb	fp, fp, r4
 8011d1a:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 8011d1e:	fb0c bc07 	mla	ip, ip, r7, fp
 8011d22:	f896 b001 	ldrb.w	fp, [r6, #1]
 8011d26:	f89e 6001 	ldrb.w	r6, [lr, #1]
 8011d2a:	f89e e000 	ldrb.w	lr, [lr]
 8011d2e:	435e      	muls	r6, r3
 8011d30:	fb09 660b 	mla	r6, r9, fp, r6
 8011d34:	f892 b001 	ldrb.w	fp, [r2, #1]
 8011d38:	fb01 660b 	mla	r6, r1, fp, r6
 8011d3c:	f890 b001 	ldrb.w	fp, [r0, #1]
 8011d40:	fb0a 660b 	mla	r6, sl, fp, r6
 8011d44:	ea4f 0be8 	mov.w	fp, r8, asr #3
 8011d48:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 8011d4c:	fb1b fb04 	smulbb	fp, fp, r4
 8011d50:	f3c6 2607 	ubfx	r6, r6, #8, #8
 8011d54:	fb06 b607 	mla	r6, r6, r7, fp
 8011d58:	b2b4      	uxth	r4, r6
 8011d5a:	9412      	str	r4, [sp, #72]	; 0x48
 8011d5c:	9e08      	ldr	r6, [sp, #32]
 8011d5e:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8011d60:	f816 b004 	ldrb.w	fp, [r6, r4]
 8011d64:	fb03 f30e 	mul.w	r3, r3, lr
 8011d68:	f892 e000 	ldrb.w	lr, [r2]
 8011d6c:	fb09 330b 	mla	r3, r9, fp, r3
 8011d70:	fb01 330e 	mla	r3, r1, lr, r3
 8011d74:	f890 e000 	ldrb.w	lr, [r0]
 8011d78:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8011d7c:	fb0a 3e0e 	mla	lr, sl, lr, r3
 8011d80:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8011d82:	fa5f f888 	uxtb.w	r8, r8
 8011d86:	f3ce 2e07 	ubfx	lr, lr, #8, #8
 8011d8a:	fb18 f803 	smulbb	r8, r8, r3
 8011d8e:	fb0e 8807 	mla	r8, lr, r7, r8
 8011d92:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8011d94:	fa1f fc8c 	uxth.w	ip, ip
 8011d98:	fa1f f888 	uxth.w	r8, r8
 8011d9c:	f103 0b01 	add.w	fp, r3, #1
 8011da0:	f10c 0201 	add.w	r2, ip, #1
 8011da4:	f108 0e01 	add.w	lr, r8, #1
 8011da8:	eb0b 2613 	add.w	r6, fp, r3, lsr #8
 8011dac:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 8011db0:	eb0e 2818 	add.w	r8, lr, r8, lsr #8
 8011db4:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8011db8:	f3c8 28c4 	ubfx	r8, r8, #11, #5
 8011dbc:	0976      	lsrs	r6, r6, #5
 8011dbe:	ea4c 0c08 	orr.w	ip, ip, r8
 8011dc2:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8011dc6:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8011dc8:	ea4c 0606 	orr.w	r6, ip, r6
 8011dcc:	801e      	strh	r6, [r3, #0]
 8011dce:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8011dd0:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 8011dd2:	3302      	adds	r3, #2
 8011dd4:	930d      	str	r3, [sp, #52]	; 0x34
 8011dd6:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8011dd8:	4413      	add	r3, r2
 8011dda:	9329      	str	r3, [sp, #164]	; 0xa4
 8011ddc:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 8011dde:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8011de0:	4413      	add	r3, r2
 8011de2:	932a      	str	r3, [sp, #168]	; 0xa8
 8011de4:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8011de6:	3b01      	subs	r3, #1
 8011de8:	9311      	str	r3, [sp, #68]	; 0x44
 8011dea:	e72f      	b.n	8011c4c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x110>
 8011dec:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8011dee:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 8011df0:	4413      	add	r3, r2
 8011df2:	9329      	str	r3, [sp, #164]	; 0xa4
 8011df4:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 8011df6:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8011df8:	4413      	add	r3, r2
 8011dfa:	932a      	str	r3, [sp, #168]	; 0xa8
 8011dfc:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8011dfe:	3b01      	subs	r3, #1
 8011e00:	9309      	str	r3, [sp, #36]	; 0x24
 8011e02:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8011e04:	3302      	adds	r3, #2
 8011e06:	930a      	str	r3, [sp, #40]	; 0x28
 8011e08:	e6d4      	b.n	8011bb4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x78>
 8011e0a:	f47f aee6 	bne.w	8011bda <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9e>
 8011e0e:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8011e10:	2b00      	cmp	r3, #0
 8011e12:	f340 812b 	ble.w	801206c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x530>
 8011e16:	ee3a aa2b 	vadd.f32	s20, s20, s23
 8011e1a:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8011e1e:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 8011e22:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8011e24:	ee79 9a8b 	vadd.f32	s19, s19, s22
 8011e28:	ee39 9a2a 	vadd.f32	s18, s18, s21
 8011e2c:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8011e30:	eef0 6a48 	vmov.f32	s13, s16
 8011e34:	ee69 7a27 	vmul.f32	s15, s18, s15
 8011e38:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8011e3c:	ee37 8a48 	vsub.f32	s16, s14, s16
 8011e40:	edcd 6a29 	vstr	s13, [sp, #164]	; 0xa4
 8011e44:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8011e48:	eef0 6a68 	vmov.f32	s13, s17
 8011e4c:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8011e50:	ee18 2a10 	vmov	r2, s16
 8011e54:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8011e58:	fb92 f3f3 	sdiv	r3, r2, r3
 8011e5c:	ee18 2a90 	vmov	r2, s17
 8011e60:	932b      	str	r3, [sp, #172]	; 0xac
 8011e62:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8011e64:	fb92 f3f3 	sdiv	r3, r2, r3
 8011e68:	932c      	str	r3, [sp, #176]	; 0xb0
 8011e6a:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8011e6c:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8011e6e:	3b01      	subs	r3, #1
 8011e70:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8011e74:	930f      	str	r3, [sp, #60]	; 0x3c
 8011e76:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8011e78:	edcd 6a2a 	vstr	s13, [sp, #168]	; 0xa8
 8011e7c:	bf08      	it	eq
 8011e7e:	4613      	moveq	r3, r2
 8011e80:	9309      	str	r3, [sp, #36]	; 0x24
 8011e82:	eef0 8a67 	vmov.f32	s17, s15
 8011e86:	eeb0 8a47 	vmov.f32	s16, s14
 8011e8a:	e68c      	b.n	8011ba6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6a>
 8011e8c:	b151      	cbz	r1, 8011ea4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x368>
 8011e8e:	5d52      	ldrb	r2, [r2, r5]
 8011e90:	9808      	ldr	r0, [sp, #32]
 8011e92:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8011e96:	4402      	add	r2, r0
 8011e98:	4630      	mov	r0, r6
 8011e9a:	46b6      	mov	lr, r6
 8011e9c:	e710      	b.n	8011cc0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x184>
 8011e9e:	4630      	mov	r0, r6
 8011ea0:	4632      	mov	r2, r6
 8011ea2:	e70d      	b.n	8011cc0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x184>
 8011ea4:	4630      	mov	r0, r6
 8011ea6:	4632      	mov	r2, r6
 8011ea8:	e7f7      	b.n	8011e9a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x35e>
 8011eaa:	1c46      	adds	r6, r0, #1
 8011eac:	d18f      	bne.n	8011dce <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x292>
 8011eae:	4285      	cmp	r5, r0
 8011eb0:	dd8d      	ble.n	8011dce <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x292>
 8011eb2:	1c54      	adds	r4, r2, #1
 8011eb4:	db8b      	blt.n	8011dce <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x292>
 8011eb6:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8011eb8:	4294      	cmp	r4, r2
 8011eba:	dd88      	ble.n	8011dce <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x292>
 8011ebc:	e9cd 2303 	strd	r2, r3, [sp, #12]
 8011ec0:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8011ec2:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8011ec4:	9002      	str	r0, [sp, #8]
 8011ec6:	e9cd 1405 	strd	r1, r4, [sp, #20]
 8011eca:	e9cd 5300 	strd	r5, r3, [sp]
 8011ece:	e9dd 120d 	ldrd	r1, r2, [sp, #52]	; 0x34
 8011ed2:	9b08      	ldr	r3, [sp, #32]
 8011ed4:	9815      	ldr	r0, [sp, #84]	; 0x54
 8011ed6:	f7ff fd47 	bl	8011968 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>
 8011eda:	e778      	b.n	8011dce <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x292>
 8011edc:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 8011ede:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8011ee0:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8011ee2:	1410      	asrs	r0, r2, #16
 8011ee4:	f3c2 3103 	ubfx	r1, r2, #12, #4
 8011ee8:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8011eea:	1412      	asrs	r2, r2, #16
 8011eec:	fb05 2000 	mla	r0, r5, r0, r2
 8011ef0:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8011ef2:	f814 a000 	ldrb.w	sl, [r4, r0]
 8011ef6:	4402      	add	r2, r0
 8011ef8:	9808      	ldr	r0, [sp, #32]
 8011efa:	eb0a 0a4a 	add.w	sl, sl, sl, lsl #1
 8011efe:	f3c3 3303 	ubfx	r3, r3, #12, #4
 8011f02:	eb00 060a 	add.w	r6, r0, sl
 8011f06:	2b00      	cmp	r3, #0
 8011f08:	f000 80a1 	beq.w	801204e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x512>
 8011f0c:	f892 c001 	ldrb.w	ip, [r2, #1]
 8011f10:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 8011f14:	4484      	add	ip, r0
 8011f16:	2900      	cmp	r1, #0
 8011f18:	f000 80a2 	beq.w	8012060 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x524>
 8011f1c:	1950      	adds	r0, r2, r5
 8011f1e:	5d52      	ldrb	r2, [r2, r5]
 8011f20:	7840      	ldrb	r0, [r0, #1]
 8011f22:	9c08      	ldr	r4, [sp, #32]
 8011f24:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8011f28:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8011f2c:	4422      	add	r2, r4
 8011f2e:	4420      	add	r0, r4
 8011f30:	b29b      	uxth	r3, r3
 8011f32:	b289      	uxth	r1, r1
 8011f34:	fb03 f901 	mul.w	r9, r3, r1
 8011f38:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8011f3c:	011b      	lsls	r3, r3, #4
 8011f3e:	b289      	uxth	r1, r1
 8011f40:	f89c 7002 	ldrb.w	r7, [ip, #2]
 8011f44:	f896 b002 	ldrb.w	fp, [r6, #2]
 8011f48:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8011f4a:	f5c3 7880 	rsb	r8, r3, #256	; 0x100
 8011f4e:	eba3 0309 	sub.w	r3, r3, r9
 8011f52:	b29b      	uxth	r3, r3
 8011f54:	eba8 0801 	sub.w	r8, r8, r1
 8011f58:	fa1f f888 	uxth.w	r8, r8
 8011f5c:	435f      	muls	r7, r3
 8011f5e:	fb08 770b 	mla	r7, r8, fp, r7
 8011f62:	f892 b002 	ldrb.w	fp, [r2, #2]
 8011f66:	f8b4 e000 	ldrh.w	lr, [r4]
 8011f6a:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8011f6c:	fb01 770b 	mla	r7, r1, fp, r7
 8011f70:	f890 b002 	ldrb.w	fp, [r0, #2]
 8011f74:	fb09 770b 	mla	r7, r9, fp, r7
 8011f78:	ea4f 2b2e 	mov.w	fp, lr, asr #8
 8011f7c:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
 8011f80:	fb1b fb04 	smulbb	fp, fp, r4
 8011f84:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8011f86:	f3c7 2707 	ubfx	r7, r7, #8, #8
 8011f8a:	fb07 b704 	mla	r7, r7, r4, fp
 8011f8e:	f896 b001 	ldrb.w	fp, [r6, #1]
 8011f92:	f89c 6001 	ldrb.w	r6, [ip, #1]
 8011f96:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8011f98:	f89c c000 	ldrb.w	ip, [ip]
 8011f9c:	435e      	muls	r6, r3
 8011f9e:	fb08 660b 	mla	r6, r8, fp, r6
 8011fa2:	f892 b001 	ldrb.w	fp, [r2, #1]
 8011fa6:	fb01 660b 	mla	r6, r1, fp, r6
 8011faa:	f890 b001 	ldrb.w	fp, [r0, #1]
 8011fae:	fb09 660b 	mla	r6, r9, fp, r6
 8011fb2:	ea4f 0bee 	mov.w	fp, lr, asr #3
 8011fb6:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 8011fba:	fb1b fb04 	smulbb	fp, fp, r4
 8011fbe:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8011fc0:	f3c6 2607 	ubfx	r6, r6, #8, #8
 8011fc4:	fb06 b604 	mla	r6, r6, r4, fp
 8011fc8:	9c08      	ldr	r4, [sp, #32]
 8011fca:	f814 a00a 	ldrb.w	sl, [r4, sl]
 8011fce:	fb03 f30c 	mul.w	r3, r3, ip
 8011fd2:	f892 c000 	ldrb.w	ip, [r2]
 8011fd6:	fb08 330a 	mla	r3, r8, sl, r3
 8011fda:	fb01 330c 	mla	r3, r1, ip, r3
 8011fde:	f890 c000 	ldrb.w	ip, [r0]
 8011fe2:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8011fe6:	fb09 3c0c 	mla	ip, r9, ip, r3
 8011fea:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8011fec:	fa5f fe8e 	uxtb.w	lr, lr
 8011ff0:	fb1e fe03 	smulbb	lr, lr, r3
 8011ff4:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8011ff6:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 8011ffa:	fb0c ec03 	mla	ip, ip, r3, lr
 8011ffe:	b2bf      	uxth	r7, r7
 8012000:	b2b6      	uxth	r6, r6
 8012002:	fa1f fc8c 	uxth.w	ip, ip
 8012006:	1c7b      	adds	r3, r7, #1
 8012008:	f10c 0201 	add.w	r2, ip, #1
 801200c:	f106 0b01 	add.w	fp, r6, #1
 8012010:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 8012014:	eb02 221c 	add.w	r2, r2, ip, lsr #8
 8012018:	eb0b 2616 	add.w	r6, fp, r6, lsr #8
 801201c:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8012020:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8012024:	0976      	lsrs	r6, r6, #5
 8012026:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8012028:	4317      	orrs	r7, r2
 801202a:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801202e:	4337      	orrs	r7, r6
 8012030:	f823 7b02 	strh.w	r7, [r3], #2
 8012034:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 8012036:	930d      	str	r3, [sp, #52]	; 0x34
 8012038:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801203a:	4413      	add	r3, r2
 801203c:	9329      	str	r3, [sp, #164]	; 0xa4
 801203e:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 8012040:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8012042:	4413      	add	r3, r2
 8012044:	932a      	str	r3, [sp, #168]	; 0xa8
 8012046:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8012048:	3b01      	subs	r3, #1
 801204a:	9311      	str	r3, [sp, #68]	; 0x44
 801204c:	e5e1      	b.n	8011c12 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xd6>
 801204e:	b151      	cbz	r1, 8012066 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x52a>
 8012050:	5d52      	ldrb	r2, [r2, r5]
 8012052:	9808      	ldr	r0, [sp, #32]
 8012054:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8012058:	4402      	add	r2, r0
 801205a:	4630      	mov	r0, r6
 801205c:	46b4      	mov	ip, r6
 801205e:	e767      	b.n	8011f30 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3f4>
 8012060:	4630      	mov	r0, r6
 8012062:	4632      	mov	r2, r6
 8012064:	e764      	b.n	8011f30 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3f4>
 8012066:	4630      	mov	r0, r6
 8012068:	4632      	mov	r2, r6
 801206a:	e7f7      	b.n	801205c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x520>
 801206c:	b017      	add	sp, #92	; 0x5c
 801206e:	ecbd 8b08 	vpop	{d8-d11}
 8012072:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

08012078 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>:
 8012078:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801207c:	880e      	ldrh	r6, [r1, #0]
 801207e:	b085      	sub	sp, #20
 8012080:	0230      	lsls	r0, r6, #8
 8012082:	e9dd 7510 	ldrd	r7, r5, [sp, #64]	; 0x40
 8012086:	f400 0b78 	and.w	fp, r0, #16252928	; 0xf80000
 801208a:	0170      	lsls	r0, r6, #5
 801208c:	f9bd c038 	ldrsh.w	ip, [sp, #56]	; 0x38
 8012090:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	; 0x3c
 8012094:	f89d 404c 	ldrb.w	r4, [sp, #76]	; 0x4c
 8012098:	f400 407c 	and.w	r0, r0, #64512	; 0xfc00
 801209c:	00f6      	lsls	r6, r6, #3
 801209e:	ea4b 0000 	orr.w	r0, fp, r0
 80120a2:	b2f6      	uxtb	r6, r6
 80120a4:	4691      	mov	r9, r2
 80120a6:	fb05 7a0c 	mla	sl, r5, ip, r7
 80120aa:	4306      	orrs	r6, r0
 80120ac:	2d00      	cmp	r5, #0
 80120ae:	f89d 2048 	ldrb.w	r2, [sp, #72]	; 0x48
 80120b2:	9603      	str	r6, [sp, #12]
 80120b4:	eb09 0e0a 	add.w	lr, r9, sl
 80120b8:	db42      	blt.n	8012140 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xc8>
 80120ba:	45a8      	cmp	r8, r5
 80120bc:	dd40      	ble.n	8012140 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xc8>
 80120be:	2f00      	cmp	r7, #0
 80120c0:	db3c      	blt.n	801213c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xc4>
 80120c2:	45bc      	cmp	ip, r7
 80120c4:	dd3a      	ble.n	801213c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xc4>
 80120c6:	f819 600a 	ldrb.w	r6, [r9, sl]
 80120ca:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 80120ce:	441e      	add	r6, r3
 80120d0:	1c78      	adds	r0, r7, #1
 80120d2:	d438      	bmi.n	8012146 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xce>
 80120d4:	4584      	cmp	ip, r0
 80120d6:	dd36      	ble.n	8012146 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xce>
 80120d8:	b3aa      	cbz	r2, 8012146 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xce>
 80120da:	f89e 0001 	ldrb.w	r0, [lr, #1]
 80120de:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 80120e2:	4418      	add	r0, r3
 80120e4:	3501      	adds	r5, #1
 80120e6:	d432      	bmi.n	801214e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd6>
 80120e8:	45a8      	cmp	r8, r5
 80120ea:	dd30      	ble.n	801214e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd6>
 80120ec:	b37c      	cbz	r4, 801214e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd6>
 80120ee:	2f00      	cmp	r7, #0
 80120f0:	db2b      	blt.n	801214a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd2>
 80120f2:	45bc      	cmp	ip, r7
 80120f4:	dd29      	ble.n	801214a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd2>
 80120f6:	f81e 500c 	ldrb.w	r5, [lr, ip]
 80120fa:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 80120fe:	441d      	add	r5, r3
 8012100:	3701      	adds	r7, #1
 8012102:	d427      	bmi.n	8012154 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xdc>
 8012104:	45bc      	cmp	ip, r7
 8012106:	dd25      	ble.n	8012154 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xdc>
 8012108:	b322      	cbz	r2, 8012154 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xdc>
 801210a:	44f4      	add	ip, lr
 801210c:	f89c 7001 	ldrb.w	r7, [ip, #1]
 8012110:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 8012114:	443b      	add	r3, r7
 8012116:	781f      	ldrb	r7, [r3, #0]
 8012118:	f896 a000 	ldrb.w	sl, [r6]
 801211c:	f890 b000 	ldrb.w	fp, [r0]
 8012120:	f895 9000 	ldrb.w	r9, [r5]
 8012124:	9700      	str	r7, [sp, #0]
 8012126:	2a0f      	cmp	r2, #15
 8012128:	d801      	bhi.n	801212e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xb6>
 801212a:	2c0f      	cmp	r4, #15
 801212c:	d914      	bls.n	8012158 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xe0>
 801212e:	4b2c      	ldr	r3, [pc, #176]	; (80121e0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x168>)
 8012130:	4a2c      	ldr	r2, [pc, #176]	; (80121e4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x16c>)
 8012132:	482d      	ldr	r0, [pc, #180]	; (80121e8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x170>)
 8012134:	f240 210d 	movw	r1, #525	; 0x20d
 8012138:	f005 ff10 	bl	8017f5c <__assert_func>
 801213c:	ae03      	add	r6, sp, #12
 801213e:	e7c7      	b.n	80120d0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x58>
 8012140:	a803      	add	r0, sp, #12
 8012142:	4606      	mov	r6, r0
 8012144:	e7ce      	b.n	80120e4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6c>
 8012146:	a803      	add	r0, sp, #12
 8012148:	e7cc      	b.n	80120e4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6c>
 801214a:	ad03      	add	r5, sp, #12
 801214c:	e7d8      	b.n	8012100 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x88>
 801214e:	ab03      	add	r3, sp, #12
 8012150:	461d      	mov	r5, r3
 8012152:	e7e0      	b.n	8012116 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x9e>
 8012154:	ab03      	add	r3, sp, #12
 8012156:	e7de      	b.n	8012116 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x9e>
 8012158:	b292      	uxth	r2, r2
 801215a:	b2a4      	uxth	r4, r4
 801215c:	fb02 f804 	mul.w	r8, r2, r4
 8012160:	ebc8 1404 	rsb	r4, r8, r4, lsl #4
 8012164:	0112      	lsls	r2, r2, #4
 8012166:	b2a4      	uxth	r4, r4
 8012168:	f890 e002 	ldrb.w	lr, [r0, #2]
 801216c:	78b7      	ldrb	r7, [r6, #2]
 801216e:	7840      	ldrb	r0, [r0, #1]
 8012170:	7876      	ldrb	r6, [r6, #1]
 8012172:	f5c2 7c80 	rsb	ip, r2, #256	; 0x100
 8012176:	eba2 0208 	sub.w	r2, r2, r8
 801217a:	b292      	uxth	r2, r2
 801217c:	ebac 0c04 	sub.w	ip, ip, r4
 8012180:	fa1f fc8c 	uxth.w	ip, ip
 8012184:	fb02 fe0e 	mul.w	lr, r2, lr
 8012188:	fb0c ee07 	mla	lr, ip, r7, lr
 801218c:	78af      	ldrb	r7, [r5, #2]
 801218e:	fb04 ee07 	mla	lr, r4, r7, lr
 8012192:	789f      	ldrb	r7, [r3, #2]
 8012194:	785b      	ldrb	r3, [r3, #1]
 8012196:	fb08 e707 	mla	r7, r8, r7, lr
 801219a:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801219e:	fb02 fe0b 	mul.w	lr, r2, fp
 80121a2:	4342      	muls	r2, r0
 80121a4:	7868      	ldrb	r0, [r5, #1]
 80121a6:	9701      	str	r7, [sp, #4]
 80121a8:	fb0c ee0a 	mla	lr, ip, sl, lr
 80121ac:	9f00      	ldr	r7, [sp, #0]
 80121ae:	fb0c 2206 	mla	r2, ip, r6, r2
 80121b2:	fb04 ee09 	mla	lr, r4, r9, lr
 80121b6:	fb04 2400 	mla	r4, r4, r0, r2
 80121ba:	fb08 ee07 	mla	lr, r8, r7, lr
 80121be:	9f01      	ldr	r7, [sp, #4]
 80121c0:	fb08 4803 	mla	r8, r8, r3, r4
 80121c4:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 80121c8:	ea4f 1858 	mov.w	r8, r8, lsr #5
 80121cc:	ea47 070e 	orr.w	r7, r7, lr
 80121d0:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 80121d4:	ea47 0708 	orr.w	r7, r7, r8
 80121d8:	800f      	strh	r7, [r1, #0]
 80121da:	b005      	add	sp, #20
 80121dc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80121e0:	0801bc7d 	.word	0x0801bc7d
 80121e4:	0801c1d5 	.word	0x0801c1d5
 80121e8:	0801bd05 	.word	0x0801bd05

080121ec <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 80121ec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80121f0:	ed2d 8b0a 	vpush	{d8-d12}
 80121f4:	b091      	sub	sp, #68	; 0x44
 80121f6:	eeb0 aa40 	vmov.f32	s20, s0
 80121fa:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 80121fc:	9307      	str	r3, [sp, #28]
 80121fe:	f9bd 30b4 	ldrsh.w	r3, [sp, #180]	; 0xb4
 8012202:	910c      	str	r1, [sp, #48]	; 0x30
 8012204:	9309      	str	r3, [sp, #36]	; 0x24
 8012206:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
 801220a:	900f      	str	r0, [sp, #60]	; 0x3c
 801220c:	6860      	ldr	r0, [r4, #4]
 801220e:	920e      	str	r2, [sp, #56]	; 0x38
 8012210:	fb00 1303 	mla	r3, r0, r3, r1
 8012214:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
 8012216:	6821      	ldr	r1, [r4, #0]
 8012218:	6854      	ldr	r4, [r2, #4]
 801221a:	f8dd b098 	ldr.w	fp, [sp, #152]	; 0x98
 801221e:	f9bd 50b0 	ldrsh.w	r5, [sp, #176]	; 0xb0
 8012222:	eb01 0343 	add.w	r3, r1, r3, lsl #1
 8012226:	9308      	str	r3, [sp, #32]
 8012228:	6813      	ldr	r3, [r2, #0]
 801222a:	930a      	str	r3, [sp, #40]	; 0x28
 801222c:	eef0 9a60 	vmov.f32	s19, s1
 8012230:	eeb0 9a41 	vmov.f32	s18, s2
 8012234:	eeb0 8a62 	vmov.f32	s16, s5
 8012238:	eef0 8a43 	vmov.f32	s17, s6
 801223c:	eeb0 ca44 	vmov.f32	s24, s8
 8012240:	eef0 ba64 	vmov.f32	s23, s9
 8012244:	eeb0 ba45 	vmov.f32	s22, s10
 8012248:	3404      	adds	r4, #4
 801224a:	eef7 aa00 	vmov.f32	s21, #112	; 0x3f800000  1.0
 801224e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8012250:	2b00      	cmp	r3, #0
 8012252:	dc03      	bgt.n	801225c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x70>
 8012254:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8012256:	2b00      	cmp	r3, #0
 8012258:	f340 81cb 	ble.w	80125f2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x406>
 801225c:	9b07      	ldr	r3, [sp, #28]
 801225e:	2b00      	cmp	r3, #0
 8012260:	f340 80dd 	ble.w	801241e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x232>
 8012264:	9a25      	ldr	r2, [sp, #148]	; 0x94
 8012266:	1412      	asrs	r2, r2, #16
 8012268:	ea4f 432b 	mov.w	r3, fp, asr #16
 801226c:	d42c      	bmi.n	80122c8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xdc>
 801226e:	1c51      	adds	r1, r2, #1
 8012270:	428d      	cmp	r5, r1
 8012272:	dd2c      	ble.n	80122ce <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe2>
 8012274:	2b00      	cmp	r3, #0
 8012276:	db2a      	blt.n	80122ce <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe2>
 8012278:	9809      	ldr	r0, [sp, #36]	; 0x24
 801227a:	1c59      	adds	r1, r3, #1
 801227c:	4288      	cmp	r0, r1
 801227e:	dd26      	ble.n	80122ce <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe2>
 8012280:	9b07      	ldr	r3, [sp, #28]
 8012282:	9a27      	ldr	r2, [sp, #156]	; 0x9c
 8012284:	9925      	ldr	r1, [sp, #148]	; 0x94
 8012286:	3b01      	subs	r3, #1
 8012288:	fb02 1203 	mla	r2, r2, r3, r1
 801228c:	1412      	asrs	r2, r2, #16
 801228e:	d428      	bmi.n	80122e2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf6>
 8012290:	3201      	adds	r2, #1
 8012292:	4295      	cmp	r5, r2
 8012294:	dd25      	ble.n	80122e2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf6>
 8012296:	9a28      	ldr	r2, [sp, #160]	; 0xa0
 8012298:	fb02 b303 	mla	r3, r2, r3, fp
 801229c:	141b      	asrs	r3, r3, #16
 801229e:	d420      	bmi.n	80122e2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf6>
 80122a0:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80122a2:	3301      	adds	r3, #1
 80122a4:	429a      	cmp	r2, r3
 80122a6:	dd1c      	ble.n	80122e2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf6>
 80122a8:	9b07      	ldr	r3, [sp, #28]
 80122aa:	930b      	str	r3, [sp, #44]	; 0x2c
 80122ac:	9b08      	ldr	r3, [sp, #32]
 80122ae:	930d      	str	r3, [sp, #52]	; 0x34
 80122b0:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80122b2:	2b00      	cmp	r3, #0
 80122b4:	f300 8116 	bgt.w	80124e4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2f8>
 80122b8:	9b07      	ldr	r3, [sp, #28]
 80122ba:	9a08      	ldr	r2, [sp, #32]
 80122bc:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80122c0:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80122c4:	9308      	str	r3, [sp, #32]
 80122c6:	e0ac      	b.n	8012422 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x236>
 80122c8:	1c51      	adds	r1, r2, #1
 80122ca:	f040 809b 	bne.w	8012404 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x218>
 80122ce:	42aa      	cmp	r2, r5
 80122d0:	f280 8098 	bge.w	8012404 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x218>
 80122d4:	1c5a      	adds	r2, r3, #1
 80122d6:	f2c0 8095 	blt.w	8012404 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x218>
 80122da:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80122dc:	4293      	cmp	r3, r2
 80122de:	f280 8091 	bge.w	8012404 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x218>
 80122e2:	9b07      	ldr	r3, [sp, #28]
 80122e4:	930d      	str	r3, [sp, #52]	; 0x34
 80122e6:	9b08      	ldr	r3, [sp, #32]
 80122e8:	930b      	str	r3, [sp, #44]	; 0x2c
 80122ea:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80122ec:	2b00      	cmp	r3, #0
 80122ee:	dde3      	ble.n	80122b8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xcc>
 80122f0:	9825      	ldr	r0, [sp, #148]	; 0x94
 80122f2:	9b25      	ldr	r3, [sp, #148]	; 0x94
 80122f4:	1400      	asrs	r0, r0, #16
 80122f6:	ea4f 422b 	mov.w	r2, fp, asr #16
 80122fa:	f3c3 3303 	ubfx	r3, r3, #12, #4
 80122fe:	f3cb 3103 	ubfx	r1, fp, #12, #4
 8012302:	f100 80d9 	bmi.w	80124b8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2cc>
 8012306:	1c46      	adds	r6, r0, #1
 8012308:	42b5      	cmp	r5, r6
 801230a:	f340 80d7 	ble.w	80124bc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2d0>
 801230e:	2a00      	cmp	r2, #0
 8012310:	f2c0 80d4 	blt.w	80124bc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2d0>
 8012314:	9f09      	ldr	r7, [sp, #36]	; 0x24
 8012316:	1c56      	adds	r6, r2, #1
 8012318:	42b7      	cmp	r7, r6
 801231a:	f340 80cf 	ble.w	80124bc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2d0>
 801231e:	fb02 0005 	mla	r0, r2, r5, r0
 8012322:	9e0a      	ldr	r6, [sp, #40]	; 0x28
 8012324:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8012326:	4402      	add	r2, r0
 8012328:	5c30      	ldrb	r0, [r6, r0]
 801232a:	eb00 0840 	add.w	r8, r0, r0, lsl #1
 801232e:	eb04 0c08 	add.w	ip, r4, r8
 8012332:	2b00      	cmp	r3, #0
 8012334:	f000 80b2 	beq.w	801249c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2b0>
 8012338:	7856      	ldrb	r6, [r2, #1]
 801233a:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 801233e:	4426      	add	r6, r4
 8012340:	2900      	cmp	r1, #0
 8012342:	f000 80b3 	beq.w	80124ac <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2c0>
 8012346:	1950      	adds	r0, r2, r5
 8012348:	5d52      	ldrb	r2, [r2, r5]
 801234a:	7840      	ldrb	r0, [r0, #1]
 801234c:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8012350:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8012354:	4422      	add	r2, r4
 8012356:	4420      	add	r0, r4
 8012358:	b29b      	uxth	r3, r3
 801235a:	b289      	uxth	r1, r1
 801235c:	fb03 f901 	mul.w	r9, r3, r1
 8012360:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8012364:	011b      	lsls	r3, r3, #4
 8012366:	b289      	uxth	r1, r1
 8012368:	78b7      	ldrb	r7, [r6, #2]
 801236a:	f89c a002 	ldrb.w	sl, [ip, #2]
 801236e:	f89c c001 	ldrb.w	ip, [ip, #1]
 8012372:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 8012376:	eba3 0309 	sub.w	r3, r3, r9
 801237a:	b29b      	uxth	r3, r3
 801237c:	ebae 0e01 	sub.w	lr, lr, r1
 8012380:	fa1f fe8e 	uxth.w	lr, lr
 8012384:	435f      	muls	r7, r3
 8012386:	fb0e 770a 	mla	r7, lr, sl, r7
 801238a:	f892 a002 	ldrb.w	sl, [r2, #2]
 801238e:	fb01 770a 	mla	r7, r1, sl, r7
 8012392:	f890 a002 	ldrb.w	sl, [r0, #2]
 8012396:	fb09 7a0a 	mla	sl, r9, sl, r7
 801239a:	f814 7008 	ldrb.w	r7, [r4, r8]
 801239e:	f896 8000 	ldrb.w	r8, [r6]
 80123a2:	7876      	ldrb	r6, [r6, #1]
 80123a4:	fb03 f808 	mul.w	r8, r3, r8
 80123a8:	fb0e 8807 	mla	r8, lr, r7, r8
 80123ac:	7817      	ldrb	r7, [r2, #0]
 80123ae:	fb01 8807 	mla	r8, r1, r7, r8
 80123b2:	7807      	ldrb	r7, [r0, #0]
 80123b4:	fb09 8707 	mla	r7, r9, r7, r8
 80123b8:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
 80123bc:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 80123c0:	ea4a 0707 	orr.w	r7, sl, r7
 80123c4:	4373      	muls	r3, r6
 80123c6:	f892 a001 	ldrb.w	sl, [r2, #1]
 80123ca:	fb0e 330c 	mla	r3, lr, ip, r3
 80123ce:	fb01 310a 	mla	r1, r1, sl, r3
 80123d2:	f890 a001 	ldrb.w	sl, [r0, #1]
 80123d6:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80123d8:	fb09 1a0a 	mla	sl, r9, sl, r1
 80123dc:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80123e0:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 80123e4:	ea47 070a 	orr.w	r7, r7, sl
 80123e8:	801f      	strh	r7, [r3, #0]
 80123ea:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80123ec:	9a27      	ldr	r2, [sp, #156]	; 0x9c
 80123ee:	3302      	adds	r3, #2
 80123f0:	930b      	str	r3, [sp, #44]	; 0x2c
 80123f2:	9b25      	ldr	r3, [sp, #148]	; 0x94
 80123f4:	4413      	add	r3, r2
 80123f6:	9325      	str	r3, [sp, #148]	; 0x94
 80123f8:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80123fa:	449b      	add	fp, r3
 80123fc:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80123fe:	3b01      	subs	r3, #1
 8012400:	930d      	str	r3, [sp, #52]	; 0x34
 8012402:	e772      	b.n	80122ea <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfe>
 8012404:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8012406:	9a27      	ldr	r2, [sp, #156]	; 0x9c
 8012408:	4413      	add	r3, r2
 801240a:	9325      	str	r3, [sp, #148]	; 0x94
 801240c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801240e:	449b      	add	fp, r3
 8012410:	9b07      	ldr	r3, [sp, #28]
 8012412:	3b01      	subs	r3, #1
 8012414:	9307      	str	r3, [sp, #28]
 8012416:	9b08      	ldr	r3, [sp, #32]
 8012418:	3302      	adds	r3, #2
 801241a:	9308      	str	r3, [sp, #32]
 801241c:	e71e      	b.n	801225c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x70>
 801241e:	f47f af2f 	bne.w	8012280 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x94>
 8012422:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8012424:	2b00      	cmp	r3, #0
 8012426:	f340 80e4 	ble.w	80125f2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x406>
 801242a:	ee3a aa0c 	vadd.f32	s20, s20, s24
 801242e:	ee79 9aab 	vadd.f32	s19, s19, s23
 8012432:	eeca 7a8a 	vdiv.f32	s15, s21, s20
 8012436:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8012438:	ee39 9a0b 	vadd.f32	s18, s18, s22
 801243c:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8012440:	eef0 6a48 	vmov.f32	s13, s16
 8012444:	ee69 7a27 	vmul.f32	s15, s18, s15
 8012448:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801244c:	ee37 8a48 	vsub.f32	s16, s14, s16
 8012450:	edcd 6a25 	vstr	s13, [sp, #148]	; 0x94
 8012454:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8012458:	eef0 6a68 	vmov.f32	s13, s17
 801245c:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8012460:	ee18 2a10 	vmov	r2, s16
 8012464:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8012468:	fb92 f3f3 	sdiv	r3, r2, r3
 801246c:	ee18 2a90 	vmov	r2, s17
 8012470:	9327      	str	r3, [sp, #156]	; 0x9c
 8012472:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8012474:	fb92 f3f3 	sdiv	r3, r2, r3
 8012478:	9328      	str	r3, [sp, #160]	; 0xa0
 801247a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801247c:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801247e:	3b01      	subs	r3, #1
 8012480:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8012484:	930c      	str	r3, [sp, #48]	; 0x30
 8012486:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8012488:	bf08      	it	eq
 801248a:	4613      	moveq	r3, r2
 801248c:	ee16 ba90 	vmov	fp, s13
 8012490:	9307      	str	r3, [sp, #28]
 8012492:	eef0 8a67 	vmov.f32	s17, s15
 8012496:	eeb0 8a47 	vmov.f32	s16, s14
 801249a:	e6d8      	b.n	801224e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x62>
 801249c:	b149      	cbz	r1, 80124b2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2c6>
 801249e:	5d52      	ldrb	r2, [r2, r5]
 80124a0:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80124a4:	4422      	add	r2, r4
 80124a6:	4660      	mov	r0, ip
 80124a8:	4666      	mov	r6, ip
 80124aa:	e755      	b.n	8012358 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x16c>
 80124ac:	4660      	mov	r0, ip
 80124ae:	4662      	mov	r2, ip
 80124b0:	e752      	b.n	8012358 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x16c>
 80124b2:	4660      	mov	r0, ip
 80124b4:	4662      	mov	r2, ip
 80124b6:	e7f7      	b.n	80124a8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2bc>
 80124b8:	1c47      	adds	r7, r0, #1
 80124ba:	d196      	bne.n	80123ea <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1fe>
 80124bc:	4285      	cmp	r5, r0
 80124be:	dd94      	ble.n	80123ea <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1fe>
 80124c0:	1c56      	adds	r6, r2, #1
 80124c2:	db92      	blt.n	80123ea <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1fe>
 80124c4:	9e09      	ldr	r6, [sp, #36]	; 0x24
 80124c6:	4296      	cmp	r6, r2
 80124c8:	dd8f      	ble.n	80123ea <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1fe>
 80124ca:	e9cd 3104 	strd	r3, r1, [sp, #16]
 80124ce:	e9cd 0202 	strd	r0, r2, [sp, #8]
 80124d2:	e9cd 5600 	strd	r5, r6, [sp]
 80124d6:	4623      	mov	r3, r4
 80124d8:	e9dd 210a 	ldrd	r2, r1, [sp, #40]	; 0x28
 80124dc:	980f      	ldr	r0, [sp, #60]	; 0x3c
 80124de:	f7ff fdcb 	bl	8012078 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>
 80124e2:	e782      	b.n	80123ea <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1fe>
 80124e4:	9a25      	ldr	r2, [sp, #148]	; 0x94
 80124e6:	9e0a      	ldr	r6, [sp, #40]	; 0x28
 80124e8:	9b25      	ldr	r3, [sp, #148]	; 0x94
 80124ea:	1412      	asrs	r2, r2, #16
 80124ec:	ea4f 402b 	mov.w	r0, fp, asr #16
 80124f0:	fb05 2000 	mla	r0, r5, r0, r2
 80124f4:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80124f6:	f816 8000 	ldrb.w	r8, [r6, r0]
 80124fa:	f3c3 3303 	ubfx	r3, r3, #12, #4
 80124fe:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 8012502:	f3cb 3103 	ubfx	r1, fp, #12, #4
 8012506:	4402      	add	r2, r0
 8012508:	eb04 0c08 	add.w	ip, r4, r8
 801250c:	2b00      	cmp	r3, #0
 801250e:	d062      	beq.n	80125d6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3ea>
 8012510:	7856      	ldrb	r6, [r2, #1]
 8012512:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 8012516:	4426      	add	r6, r4
 8012518:	2900      	cmp	r1, #0
 801251a:	d064      	beq.n	80125e6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3fa>
 801251c:	1950      	adds	r0, r2, r5
 801251e:	5d52      	ldrb	r2, [r2, r5]
 8012520:	7840      	ldrb	r0, [r0, #1]
 8012522:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8012526:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801252a:	4422      	add	r2, r4
 801252c:	4420      	add	r0, r4
 801252e:	b29b      	uxth	r3, r3
 8012530:	b289      	uxth	r1, r1
 8012532:	fb03 f901 	mul.w	r9, r3, r1
 8012536:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801253a:	011b      	lsls	r3, r3, #4
 801253c:	b289      	uxth	r1, r1
 801253e:	78b7      	ldrb	r7, [r6, #2]
 8012540:	f89c a002 	ldrb.w	sl, [ip, #2]
 8012544:	f89c c001 	ldrb.w	ip, [ip, #1]
 8012548:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 801254c:	eba3 0309 	sub.w	r3, r3, r9
 8012550:	b29b      	uxth	r3, r3
 8012552:	ebae 0e01 	sub.w	lr, lr, r1
 8012556:	fa1f fe8e 	uxth.w	lr, lr
 801255a:	435f      	muls	r7, r3
 801255c:	fb0e 770a 	mla	r7, lr, sl, r7
 8012560:	f892 a002 	ldrb.w	sl, [r2, #2]
 8012564:	fb01 770a 	mla	r7, r1, sl, r7
 8012568:	f890 a002 	ldrb.w	sl, [r0, #2]
 801256c:	fb09 7a0a 	mla	sl, r9, sl, r7
 8012570:	f814 7008 	ldrb.w	r7, [r4, r8]
 8012574:	f896 8000 	ldrb.w	r8, [r6]
 8012578:	7876      	ldrb	r6, [r6, #1]
 801257a:	fb03 f808 	mul.w	r8, r3, r8
 801257e:	fb0e 8807 	mla	r8, lr, r7, r8
 8012582:	7817      	ldrb	r7, [r2, #0]
 8012584:	fb01 8807 	mla	r8, r1, r7, r8
 8012588:	7807      	ldrb	r7, [r0, #0]
 801258a:	fb09 8707 	mla	r7, r9, r7, r8
 801258e:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
 8012592:	4373      	muls	r3, r6
 8012594:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8012598:	7856      	ldrb	r6, [r2, #1]
 801259a:	9a27      	ldr	r2, [sp, #156]	; 0x9c
 801259c:	ea4a 0707 	orr.w	r7, sl, r7
 80125a0:	fb0e 330c 	mla	r3, lr, ip, r3
 80125a4:	f890 a001 	ldrb.w	sl, [r0, #1]
 80125a8:	fb01 3306 	mla	r3, r1, r6, r3
 80125ac:	fb09 3a0a 	mla	sl, r9, sl, r3
 80125b0:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80125b4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80125b6:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 80125ba:	ea47 070a 	orr.w	r7, r7, sl
 80125be:	f823 7b02 	strh.w	r7, [r3], #2
 80125c2:	930d      	str	r3, [sp, #52]	; 0x34
 80125c4:	9b25      	ldr	r3, [sp, #148]	; 0x94
 80125c6:	4413      	add	r3, r2
 80125c8:	9325      	str	r3, [sp, #148]	; 0x94
 80125ca:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80125cc:	449b      	add	fp, r3
 80125ce:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80125d0:	3b01      	subs	r3, #1
 80125d2:	930b      	str	r3, [sp, #44]	; 0x2c
 80125d4:	e66c      	b.n	80122b0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xc4>
 80125d6:	b149      	cbz	r1, 80125ec <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x400>
 80125d8:	5d52      	ldrb	r2, [r2, r5]
 80125da:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80125de:	4422      	add	r2, r4
 80125e0:	4660      	mov	r0, ip
 80125e2:	4666      	mov	r6, ip
 80125e4:	e7a3      	b.n	801252e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x342>
 80125e6:	4660      	mov	r0, ip
 80125e8:	4662      	mov	r2, ip
 80125ea:	e7a0      	b.n	801252e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x342>
 80125ec:	4660      	mov	r0, ip
 80125ee:	4662      	mov	r2, ip
 80125f0:	e7f7      	b.n	80125e2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3f6>
 80125f2:	b011      	add	sp, #68	; 0x44
 80125f4:	ecbd 8b0a 	vpop	{d8-d12}
 80125f8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080125fc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>:
 80125fc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012600:	8808      	ldrh	r0, [r1, #0]
 8012602:	b085      	sub	sp, #20
 8012604:	1206      	asrs	r6, r0, #8
 8012606:	e9dd 5410 	ldrd	r5, r4, [sp, #64]	; 0x40
 801260a:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801260e:	9600      	str	r6, [sp, #0]
 8012610:	f9bd c038 	ldrsh.w	ip, [sp, #56]	; 0x38
 8012614:	f9bd 903c 	ldrsh.w	r9, [sp, #60]	; 0x3c
 8012618:	f89d 704c 	ldrb.w	r7, [sp, #76]	; 0x4c
 801261c:	10c6      	asrs	r6, r0, #3
 801261e:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8012622:	9601      	str	r6, [sp, #4]
 8012624:	00c0      	lsls	r0, r0, #3
 8012626:	fb04 560c 	mla	r6, r4, ip, r5
 801262a:	b2c0      	uxtb	r0, r0
 801262c:	4692      	mov	sl, r2
 801262e:	eb02 0e06 	add.w	lr, r2, r6
 8012632:	9a00      	ldr	r2, [sp, #0]
 8012634:	9002      	str	r0, [sp, #8]
 8012636:	f040 407f 	orr.w	r0, r0, #4278190080	; 0xff000000
 801263a:	ea40 4002 	orr.w	r0, r0, r2, lsl #16
 801263e:	9a01      	ldr	r2, [sp, #4]
 8012640:	2c00      	cmp	r4, #0
 8012642:	4698      	mov	r8, r3
 8012644:	ea40 2002 	orr.w	r0, r0, r2, lsl #8
 8012648:	f89d 3048 	ldrb.w	r3, [sp, #72]	; 0x48
 801264c:	db3e      	blt.n	80126cc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xd0>
 801264e:	45a1      	cmp	r9, r4
 8012650:	dd3c      	ble.n	80126cc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xd0>
 8012652:	2d00      	cmp	r5, #0
 8012654:	db38      	blt.n	80126c8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xcc>
 8012656:	45ac      	cmp	ip, r5
 8012658:	dd36      	ble.n	80126c8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xcc>
 801265a:	f81a 2006 	ldrb.w	r2, [sl, r6]
 801265e:	f858 2022 	ldr.w	r2, [r8, r2, lsl #2]
 8012662:	1c6e      	adds	r6, r5, #1
 8012664:	d435      	bmi.n	80126d2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xd6>
 8012666:	45b4      	cmp	ip, r6
 8012668:	dd33      	ble.n	80126d2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xd6>
 801266a:	b393      	cbz	r3, 80126d2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xd6>
 801266c:	f89e 6001 	ldrb.w	r6, [lr, #1]
 8012670:	f858 6026 	ldr.w	r6, [r8, r6, lsl #2]
 8012674:	3401      	adds	r4, #1
 8012676:	d430      	bmi.n	80126da <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xde>
 8012678:	45a1      	cmp	r9, r4
 801267a:	dd2e      	ble.n	80126da <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xde>
 801267c:	b36f      	cbz	r7, 80126da <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xde>
 801267e:	2d00      	cmp	r5, #0
 8012680:	db29      	blt.n	80126d6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xda>
 8012682:	45ac      	cmp	ip, r5
 8012684:	dd27      	ble.n	80126d6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xda>
 8012686:	f81e 400c 	ldrb.w	r4, [lr, ip]
 801268a:	f858 4024 	ldr.w	r4, [r8, r4, lsl #2]
 801268e:	3501      	adds	r5, #1
 8012690:	d407      	bmi.n	80126a2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xa6>
 8012692:	45ac      	cmp	ip, r5
 8012694:	dd05      	ble.n	80126a2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xa6>
 8012696:	b123      	cbz	r3, 80126a2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xa6>
 8012698:	44f4      	add	ip, lr
 801269a:	f89c 0001 	ldrb.w	r0, [ip, #1]
 801269e:	f858 0020 	ldr.w	r0, [r8, r0, lsl #2]
 80126a2:	2b0f      	cmp	r3, #15
 80126a4:	ea4f 6b12 	mov.w	fp, r2, lsr #24
 80126a8:	ea4f 6a16 	mov.w	sl, r6, lsr #24
 80126ac:	ea4f 6914 	mov.w	r9, r4, lsr #24
 80126b0:	ea4f 6810 	mov.w	r8, r0, lsr #24
 80126b4:	d801      	bhi.n	80126ba <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xbe>
 80126b6:	2f0f      	cmp	r7, #15
 80126b8:	d911      	bls.n	80126de <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xe2>
 80126ba:	4b7f      	ldr	r3, [pc, #508]	; (80128b8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x2bc>)
 80126bc:	4a7f      	ldr	r2, [pc, #508]	; (80128bc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x2c0>)
 80126be:	4880      	ldr	r0, [pc, #512]	; (80128c0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x2c4>)
 80126c0:	f240 210d 	movw	r1, #525	; 0x20d
 80126c4:	f005 fc4a 	bl	8017f5c <__assert_func>
 80126c8:	4602      	mov	r2, r0
 80126ca:	e7ca      	b.n	8012662 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x66>
 80126cc:	4606      	mov	r6, r0
 80126ce:	4602      	mov	r2, r0
 80126d0:	e7d0      	b.n	8012674 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x78>
 80126d2:	4606      	mov	r6, r0
 80126d4:	e7ce      	b.n	8012674 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x78>
 80126d6:	4604      	mov	r4, r0
 80126d8:	e7d9      	b.n	801268e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x92>
 80126da:	4604      	mov	r4, r0
 80126dc:	e7e1      	b.n	80126a2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xa6>
 80126de:	b29b      	uxth	r3, r3
 80126e0:	b2bf      	uxth	r7, r7
 80126e2:	fb03 fe07 	mul.w	lr, r3, r7
 80126e6:	ebce 1707 	rsb	r7, lr, r7, lsl #4
 80126ea:	011b      	lsls	r3, r3, #4
 80126ec:	eba3 0c0e 	sub.w	ip, r3, lr
 80126f0:	b2bf      	uxth	r7, r7
 80126f2:	f5c3 7580 	rsb	r5, r3, #256	; 0x100
 80126f6:	fa1f fc8c 	uxth.w	ip, ip
 80126fa:	1bed      	subs	r5, r5, r7
 80126fc:	b2ad      	uxth	r5, r5
 80126fe:	fb0c f30a 	mul.w	r3, ip, sl
 8012702:	fb05 330b 	mla	r3, r5, fp, r3
 8012706:	fb07 3309 	mla	r3, r7, r9, r3
 801270a:	fb0e 3308 	mla	r3, lr, r8, r3
 801270e:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8012712:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 8012716:	9303      	str	r3, [sp, #12]
 8012718:	d018      	beq.n	801274c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x150>
 801271a:	f002 13ff 	and.w	r3, r2, #16711935	; 0xff00ff
 801271e:	fb0b f303 	mul.w	r3, fp, r3
 8012722:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8012726:	fb0b fb02 	mul.w	fp, fp, r2
 801272a:	0a1a      	lsrs	r2, r3, #8
 801272c:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8012730:	f103 1301 	add.w	r3, r3, #65537	; 0x10001
 8012734:	441a      	add	r2, r3
 8012736:	f50b 7380 	add.w	r3, fp, #256	; 0x100
 801273a:	eb03 231b 	add.w	r3, r3, fp, lsr #8
 801273e:	0a12      	lsrs	r2, r2, #8
 8012740:	0a1b      	lsrs	r3, r3, #8
 8012742:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8012746:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801274a:	431a      	orrs	r2, r3
 801274c:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 8012750:	d019      	beq.n	8012786 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x18a>
 8012752:	f006 1bff 	and.w	fp, r6, #16711935	; 0xff00ff
 8012756:	fb0a fb0b 	mul.w	fp, sl, fp
 801275a:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 801275e:	fb0a fa06 	mul.w	sl, sl, r6
 8012762:	ea4f 261b 	mov.w	r6, fp, lsr #8
 8012766:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 801276a:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801276e:	f50a 7380 	add.w	r3, sl, #256	; 0x100
 8012772:	445e      	add	r6, fp
 8012774:	eb03 231a 	add.w	r3, r3, sl, lsr #8
 8012778:	0a36      	lsrs	r6, r6, #8
 801277a:	0a1b      	lsrs	r3, r3, #8
 801277c:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8012780:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8012784:	431e      	orrs	r6, r3
 8012786:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801278a:	d019      	beq.n	80127c0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x1c4>
 801278c:	f004 1aff 	and.w	sl, r4, #16711935	; 0xff00ff
 8012790:	fb09 fa0a 	mul.w	sl, r9, sl
 8012794:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 8012798:	fb09 f904 	mul.w	r9, r9, r4
 801279c:	ea4f 241a 	mov.w	r4, sl, lsr #8
 80127a0:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 80127a4:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 80127a8:	f509 7380 	add.w	r3, r9, #256	; 0x100
 80127ac:	4454      	add	r4, sl
 80127ae:	eb03 2319 	add.w	r3, r3, r9, lsr #8
 80127b2:	0a24      	lsrs	r4, r4, #8
 80127b4:	0a1b      	lsrs	r3, r3, #8
 80127b6:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 80127ba:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80127be:	431c      	orrs	r4, r3
 80127c0:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 80127c4:	d019      	beq.n	80127fa <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x1fe>
 80127c6:	f000 19ff 	and.w	r9, r0, #16711935	; 0xff00ff
 80127ca:	fb08 f909 	mul.w	r9, r8, r9
 80127ce:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 80127d2:	fb08 f800 	mul.w	r8, r8, r0
 80127d6:	ea4f 2019 	mov.w	r0, r9, lsr #8
 80127da:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 80127de:	f109 1901 	add.w	r9, r9, #65537	; 0x10001
 80127e2:	f508 7380 	add.w	r3, r8, #256	; 0x100
 80127e6:	4448      	add	r0, r9
 80127e8:	eb03 2318 	add.w	r3, r3, r8, lsr #8
 80127ec:	0a00      	lsrs	r0, r0, #8
 80127ee:	0a1b      	lsrs	r3, r3, #8
 80127f0:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 80127f4:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80127f8:	4318      	orrs	r0, r3
 80127fa:	f006 18ff 	and.w	r8, r6, #16711935	; 0xff00ff
 80127fe:	f002 13ff 	and.w	r3, r2, #16711935	; 0xff00ff
 8012802:	fb0c f808 	mul.w	r8, ip, r8
 8012806:	fb05 8803 	mla	r8, r5, r3, r8
 801280a:	f004 13ff 	and.w	r3, r4, #16711935	; 0xff00ff
 801280e:	fb07 8803 	mla	r8, r7, r3, r8
 8012812:	f000 13ff 	and.w	r3, r0, #16711935	; 0xff00ff
 8012816:	fb0e 8303 	mla	r3, lr, r3, r8
 801281a:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 801281e:	fb0c f606 	mul.w	r6, ip, r6
 8012822:	0a1b      	lsrs	r3, r3, #8
 8012824:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8012828:	fb05 6202 	mla	r2, r5, r2, r6
 801282c:	f003 18ff 	and.w	r8, r3, #16711935	; 0xff00ff
 8012830:	f404 437f 	and.w	r3, r4, #65280	; 0xff00
 8012834:	fb07 2703 	mla	r7, r7, r3, r2
 8012838:	f89d 2050 	ldrb.w	r2, [sp, #80]	; 0x50
 801283c:	b295      	uxth	r5, r2
 801283e:	9a03      	ldr	r2, [sp, #12]
 8012840:	f400 437f 	and.w	r3, r0, #65280	; 0xff00
 8012844:	436a      	muls	r2, r5
 8012846:	fb0e 7303 	mla	r3, lr, r3, r7
 801284a:	1c50      	adds	r0, r2, #1
 801284c:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 8012850:	0a1b      	lsrs	r3, r3, #8
 8012852:	9a00      	ldr	r2, [sp, #0]
 8012854:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8012858:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 801285c:	ea48 0303 	orr.w	r3, r8, r3
 8012860:	b2c0      	uxtb	r0, r0
 8012862:	fb12 f200 	smulbb	r2, r2, r0
 8012866:	0c1e      	lsrs	r6, r3, #16
 8012868:	fb06 2605 	mla	r6, r6, r5, r2
 801286c:	9a01      	ldr	r2, [sp, #4]
 801286e:	f3c3 2407 	ubfx	r4, r3, #8, #8
 8012872:	fb12 f200 	smulbb	r2, r2, r0
 8012876:	fb04 2205 	mla	r2, r4, r5, r2
 801287a:	b294      	uxth	r4, r2
 801287c:	9a02      	ldr	r2, [sp, #8]
 801287e:	b2db      	uxtb	r3, r3
 8012880:	fb12 f200 	smulbb	r2, r2, r0
 8012884:	fb03 2205 	mla	r2, r3, r5, r2
 8012888:	b2b6      	uxth	r6, r6
 801288a:	b292      	uxth	r2, r2
 801288c:	1c73      	adds	r3, r6, #1
 801288e:	1c50      	adds	r0, r2, #1
 8012890:	eb03 2316 	add.w	r3, r3, r6, lsr #8
 8012894:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 8012898:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801289c:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 80128a0:	4313      	orrs	r3, r2
 80128a2:	1c62      	adds	r2, r4, #1
 80128a4:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 80128a8:	0952      	lsrs	r2, r2, #5
 80128aa:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80128ae:	4313      	orrs	r3, r2
 80128b0:	800b      	strh	r3, [r1, #0]
 80128b2:	b005      	add	sp, #20
 80128b4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80128b8:	0801bc7d 	.word	0x0801bc7d
 80128bc:	0801c1d5 	.word	0x0801c1d5
 80128c0:	0801bd05 	.word	0x0801bd05

080128c4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 80128c4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80128c8:	ed2d 8b08 	vpush	{d8-d11}
 80128cc:	b09b      	sub	sp, #108	; 0x6c
 80128ce:	eeb0 aa40 	vmov.f32	s20, s0
 80128d2:	9309      	str	r3, [sp, #36]	; 0x24
 80128d4:	f9bd 30d4 	ldrsh.w	r3, [sp, #212]	; 0xd4
 80128d8:	9d31      	ldr	r5, [sp, #196]	; 0xc4
 80128da:	9311      	str	r3, [sp, #68]	; 0x44
 80128dc:	f89d 30dc 	ldrb.w	r3, [sp, #220]	; 0xdc
 80128e0:	9114      	str	r1, [sp, #80]	; 0x50
 80128e2:	9317      	str	r3, [sp, #92]	; 0x5c
 80128e4:	e9dd 1332 	ldrd	r1, r3, [sp, #200]	; 0xc8
 80128e8:	9019      	str	r0, [sp, #100]	; 0x64
 80128ea:	6868      	ldr	r0, [r5, #4]
 80128ec:	9218      	str	r2, [sp, #96]	; 0x60
 80128ee:	fb00 1303 	mla	r3, r0, r3, r1
 80128f2:	6829      	ldr	r1, [r5, #0]
 80128f4:	9a36      	ldr	r2, [sp, #216]	; 0xd8
 80128f6:	f9bd 40d0 	ldrsh.w	r4, [sp, #208]	; 0xd0
 80128fa:	eb01 0343 	add.w	r3, r1, r3, lsl #1
 80128fe:	930c      	str	r3, [sp, #48]	; 0x30
 8012900:	6813      	ldr	r3, [r2, #0]
 8012902:	9313      	str	r3, [sp, #76]	; 0x4c
 8012904:	6853      	ldr	r3, [r2, #4]
 8012906:	3304      	adds	r3, #4
 8012908:	eef0 9a60 	vmov.f32	s19, s1
 801290c:	eeb0 9a41 	vmov.f32	s18, s2
 8012910:	eeb0 8a62 	vmov.f32	s16, s5
 8012914:	eef0 8a43 	vmov.f32	s17, s6
 8012918:	eef0 ba44 	vmov.f32	s23, s8
 801291c:	eeb0 ba64 	vmov.f32	s22, s9
 8012920:	eef0 aa45 	vmov.f32	s21, s10
 8012924:	9308      	str	r3, [sp, #32]
 8012926:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8012928:	2b00      	cmp	r3, #0
 801292a:	dc03      	bgt.n	8012934 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x70>
 801292c:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801292e:	2b00      	cmp	r3, #0
 8012930:	f340 8363 	ble.w	8012ffa <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x736>
 8012934:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8012936:	2b00      	cmp	r3, #0
 8012938:	f340 81ad 	ble.w	8012c96 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3d2>
 801293c:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 801293e:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8012940:	1412      	asrs	r2, r2, #16
 8012942:	ea4f 4323 	mov.w	r3, r3, asr #16
 8012946:	d42f      	bmi.n	80129a8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe4>
 8012948:	1c51      	adds	r1, r2, #1
 801294a:	428c      	cmp	r4, r1
 801294c:	dd2f      	ble.n	80129ae <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xea>
 801294e:	2b00      	cmp	r3, #0
 8012950:	db2d      	blt.n	80129ae <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xea>
 8012952:	9811      	ldr	r0, [sp, #68]	; 0x44
 8012954:	1c59      	adds	r1, r3, #1
 8012956:	4288      	cmp	r0, r1
 8012958:	dd29      	ble.n	80129ae <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xea>
 801295a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801295c:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 801295e:	992d      	ldr	r1, [sp, #180]	; 0xb4
 8012960:	3b01      	subs	r3, #1
 8012962:	fb02 1203 	mla	r2, r2, r3, r1
 8012966:	1412      	asrs	r2, r2, #16
 8012968:	d42b      	bmi.n	80129c2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfe>
 801296a:	3201      	adds	r2, #1
 801296c:	4294      	cmp	r4, r2
 801296e:	dd28      	ble.n	80129c2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfe>
 8012970:	9a30      	ldr	r2, [sp, #192]	; 0xc0
 8012972:	992e      	ldr	r1, [sp, #184]	; 0xb8
 8012974:	fb02 1303 	mla	r3, r2, r3, r1
 8012978:	141b      	asrs	r3, r3, #16
 801297a:	d422      	bmi.n	80129c2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfe>
 801297c:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801297e:	3301      	adds	r3, #1
 8012980:	429a      	cmp	r2, r3
 8012982:	dd1e      	ble.n	80129c2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfe>
 8012984:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8012986:	f8dd a030 	ldr.w	sl, [sp, #48]	; 0x30
 801298a:	f8bd b05c 	ldrh.w	fp, [sp, #92]	; 0x5c
 801298e:	9312      	str	r3, [sp, #72]	; 0x48
 8012990:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8012992:	2b00      	cmp	r3, #0
 8012994:	f300 81ea 	bgt.w	8012d6c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4a8>
 8012998:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801299a:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801299c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80129a0:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80129a4:	930c      	str	r3, [sp, #48]	; 0x30
 80129a6:	e178      	b.n	8012c9a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3d6>
 80129a8:	1c51      	adds	r1, r2, #1
 80129aa:	f040 8165 	bne.w	8012c78 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3b4>
 80129ae:	42a2      	cmp	r2, r4
 80129b0:	f280 8162 	bge.w	8012c78 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3b4>
 80129b4:	1c5f      	adds	r7, r3, #1
 80129b6:	f2c0 815f 	blt.w	8012c78 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3b4>
 80129ba:	9a11      	ldr	r2, [sp, #68]	; 0x44
 80129bc:	4293      	cmp	r3, r2
 80129be:	f280 815b 	bge.w	8012c78 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3b4>
 80129c2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80129c4:	9316      	str	r3, [sp, #88]	; 0x58
 80129c6:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80129c8:	9312      	str	r3, [sp, #72]	; 0x48
 80129ca:	f8bd 305c 	ldrh.w	r3, [sp, #92]	; 0x5c
 80129ce:	9315      	str	r3, [sp, #84]	; 0x54
 80129d0:	9b16      	ldr	r3, [sp, #88]	; 0x58
 80129d2:	2b00      	cmp	r3, #0
 80129d4:	dde0      	ble.n	8012998 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xd4>
 80129d6:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 80129d8:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 80129da:	f3c2 3003 	ubfx	r0, r2, #12, #4
 80129de:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
 80129e0:	f3c2 3103 	ubfx	r1, r2, #12, #4
 80129e4:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 80129e6:	1412      	asrs	r2, r2, #16
 80129e8:	ea4f 4323 	mov.w	r3, r3, asr #16
 80129ec:	f100 81a5 	bmi.w	8012d3a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x476>
 80129f0:	1c55      	adds	r5, r2, #1
 80129f2:	42ac      	cmp	r4, r5
 80129f4:	f340 81a3 	ble.w	8012d3e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x47a>
 80129f8:	2b00      	cmp	r3, #0
 80129fa:	f2c0 81a0 	blt.w	8012d3e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x47a>
 80129fe:	9f11      	ldr	r7, [sp, #68]	; 0x44
 8012a00:	1c5d      	adds	r5, r3, #1
 8012a02:	42af      	cmp	r7, r5
 8012a04:	f340 819b 	ble.w	8012d3e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x47a>
 8012a08:	fb03 2304 	mla	r3, r3, r4, r2
 8012a0c:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8012a0e:	18d5      	adds	r5, r2, r3
 8012a10:	5cd3      	ldrb	r3, [r2, r3]
 8012a12:	9a08      	ldr	r2, [sp, #32]
 8012a14:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8012a18:	0e1f      	lsrs	r7, r3, #24
 8012a1a:	2800      	cmp	r0, #0
 8012a1c:	f000 817c 	beq.w	8012d18 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x454>
 8012a20:	786a      	ldrb	r2, [r5, #1]
 8012a22:	9e08      	ldr	r6, [sp, #32]
 8012a24:	f856 2022 	ldr.w	r2, [r6, r2, lsl #2]
 8012a28:	920d      	str	r2, [sp, #52]	; 0x34
 8012a2a:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 8012a2e:	2900      	cmp	r1, #0
 8012a30:	f000 817d 	beq.w	8012d2e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x46a>
 8012a34:	192a      	adds	r2, r5, r4
 8012a36:	5d2d      	ldrb	r5, [r5, r4]
 8012a38:	7852      	ldrb	r2, [r2, #1]
 8012a3a:	f856 5025 	ldr.w	r5, [r6, r5, lsl #2]
 8012a3e:	f856 2022 	ldr.w	r2, [r6, r2, lsl #2]
 8012a42:	950a      	str	r5, [sp, #40]	; 0x28
 8012a44:	ea4f 6915 	mov.w	r9, r5, lsr #24
 8012a48:	920e      	str	r2, [sp, #56]	; 0x38
 8012a4a:	0e15      	lsrs	r5, r2, #24
 8012a4c:	b280      	uxth	r0, r0
 8012a4e:	b289      	uxth	r1, r1
 8012a50:	fb00 fa01 	mul.w	sl, r0, r1
 8012a54:	ebca 1101 	rsb	r1, sl, r1, lsl #4
 8012a58:	0100      	lsls	r0, r0, #4
 8012a5a:	eba0 080a 	sub.w	r8, r0, sl
 8012a5e:	b289      	uxth	r1, r1
 8012a60:	f5c0 7280 	rsb	r2, r0, #256	; 0x100
 8012a64:	fa1f f888 	uxth.w	r8, r8
 8012a68:	1a52      	subs	r2, r2, r1
 8012a6a:	b292      	uxth	r2, r2
 8012a6c:	fb08 f00e 	mul.w	r0, r8, lr
 8012a70:	fb02 0007 	mla	r0, r2, r7, r0
 8012a74:	fb01 0009 	mla	r0, r1, r9, r0
 8012a78:	fb0a 0005 	mla	r0, sl, r5, r0
 8012a7c:	f3c0 2007 	ubfx	r0, r0, #8, #8
 8012a80:	2800      	cmp	r0, #0
 8012a82:	f000 80ea 	beq.w	8012c5a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x396>
 8012a86:	2fff      	cmp	r7, #255	; 0xff
 8012a88:	d01a      	beq.n	8012ac0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1fc>
 8012a8a:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 8012a8e:	fb07 fc0c 	mul.w	ip, r7, ip
 8012a92:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8012a96:	435f      	muls	r7, r3
 8012a98:	ea4f 231c 	mov.w	r3, ip, lsr #8
 8012a9c:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8012aa0:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8012aa4:	f507 7b80 	add.w	fp, r7, #256	; 0x100
 8012aa8:	4463      	add	r3, ip
 8012aaa:	eb0b 2b17 	add.w	fp, fp, r7, lsr #8
 8012aae:	0a1b      	lsrs	r3, r3, #8
 8012ab0:	ea4f 2b1b 	mov.w	fp, fp, lsr #8
 8012ab4:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8012ab8:	f40b 4b7f 	and.w	fp, fp, #65280	; 0xff00
 8012abc:	ea43 030b 	orr.w	r3, r3, fp
 8012ac0:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 8012ac4:	d01e      	beq.n	8012b04 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x240>
 8012ac6:	9e0d      	ldr	r6, [sp, #52]	; 0x34
 8012ac8:	f006 1bff 	and.w	fp, r6, #16711935	; 0xff00ff
 8012acc:	fb0e fb0b 	mul.w	fp, lr, fp
 8012ad0:	f406 477f 	and.w	r7, r6, #65280	; 0xff00
 8012ad4:	fb0e fe07 	mul.w	lr, lr, r7
 8012ad8:	ea4f 2c1b 	mov.w	ip, fp, lsr #8
 8012adc:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8012ae0:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8012ae4:	f50e 7780 	add.w	r7, lr, #256	; 0x100
 8012ae8:	44dc      	add	ip, fp
 8012aea:	eb07 2e1e 	add.w	lr, r7, lr, lsr #8
 8012aee:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8012af2:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8012af6:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8012afa:	f40e 4e7f 	and.w	lr, lr, #65280	; 0xff00
 8012afe:	ea4c 060e 	orr.w	r6, ip, lr
 8012b02:	960d      	str	r6, [sp, #52]	; 0x34
 8012b04:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8012b08:	d01e      	beq.n	8012b48 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x284>
 8012b0a:	9e0a      	ldr	r6, [sp, #40]	; 0x28
 8012b0c:	f006 1eff 	and.w	lr, r6, #16711935	; 0xff00ff
 8012b10:	fb09 fe0e 	mul.w	lr, r9, lr
 8012b14:	f406 477f 	and.w	r7, r6, #65280	; 0xff00
 8012b18:	fb09 f907 	mul.w	r9, r9, r7
 8012b1c:	ea4f 2c1e 	mov.w	ip, lr, lsr #8
 8012b20:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8012b24:	f10e 1e01 	add.w	lr, lr, #65537	; 0x10001
 8012b28:	f509 7780 	add.w	r7, r9, #256	; 0x100
 8012b2c:	44f4      	add	ip, lr
 8012b2e:	eb07 2919 	add.w	r9, r7, r9, lsr #8
 8012b32:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8012b36:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8012b3a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8012b3e:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 8012b42:	ea4c 0609 	orr.w	r6, ip, r9
 8012b46:	960a      	str	r6, [sp, #40]	; 0x28
 8012b48:	2dff      	cmp	r5, #255	; 0xff
 8012b4a:	d01c      	beq.n	8012b86 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2c2>
 8012b4c:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 8012b4e:	f006 1eff 	and.w	lr, r6, #16711935	; 0xff00ff
 8012b52:	fb05 fe0e 	mul.w	lr, r5, lr
 8012b56:	f406 477f 	and.w	r7, r6, #65280	; 0xff00
 8012b5a:	437d      	muls	r5, r7
 8012b5c:	ea4f 2c1e 	mov.w	ip, lr, lsr #8
 8012b60:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8012b64:	f10e 1e01 	add.w	lr, lr, #65537	; 0x10001
 8012b68:	f505 7780 	add.w	r7, r5, #256	; 0x100
 8012b6c:	44f4      	add	ip, lr
 8012b6e:	eb07 2515 	add.w	r5, r7, r5, lsr #8
 8012b72:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8012b76:	0a2d      	lsrs	r5, r5, #8
 8012b78:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8012b7c:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 8012b80:	ea4c 0505 	orr.w	r5, ip, r5
 8012b84:	950e      	str	r5, [sp, #56]	; 0x38
 8012b86:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8012b88:	9e0a      	ldr	r6, [sp, #40]	; 0x28
 8012b8a:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8012b8e:	f003 17ff 	and.w	r7, r3, #16711935	; 0xff00ff
 8012b92:	fb08 f505 	mul.w	r5, r8, r5
 8012b96:	fb02 5507 	mla	r5, r2, r7, r5
 8012b9a:	f006 17ff 	and.w	r7, r6, #16711935	; 0xff00ff
 8012b9e:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 8012ba0:	fb01 5507 	mla	r5, r1, r7, r5
 8012ba4:	f006 17ff 	and.w	r7, r6, #16711935	; 0xff00ff
 8012ba8:	9e0d      	ldr	r6, [sp, #52]	; 0x34
 8012baa:	fb0a 5507 	mla	r5, sl, r7, r5
 8012bae:	f406 477f 	and.w	r7, r6, #65280	; 0xff00
 8012bb2:	fb08 f807 	mul.w	r8, r8, r7
 8012bb6:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8012bba:	fb02 8303 	mla	r3, r2, r3, r8
 8012bbe:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8012bc0:	9e15      	ldr	r6, [sp, #84]	; 0x54
 8012bc2:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 8012bc6:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8012bc8:	fb01 330c 	mla	r3, r1, ip, r3
 8012bcc:	f402 417f 	and.w	r1, r2, #65280	; 0xff00
 8012bd0:	fb0a 3a01 	mla	sl, sl, r1, r3
 8012bd4:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8012bd6:	9a15      	ldr	r2, [sp, #84]	; 0x54
 8012bd8:	881f      	ldrh	r7, [r3, #0]
 8012bda:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8012bdc:	0a2d      	lsrs	r5, r5, #8
 8012bde:	4343      	muls	r3, r0
 8012be0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8012be4:	1c58      	adds	r0, r3, #1
 8012be6:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8012bea:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8012bee:	ea45 050a 	orr.w	r5, r5, sl
 8012bf2:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8012bf6:	0c29      	lsrs	r1, r5, #16
 8012bf8:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 8012bfc:	123b      	asrs	r3, r7, #8
 8012bfe:	b2c0      	uxtb	r0, r0
 8012c00:	fb11 f102 	smulbb	r1, r1, r2
 8012c04:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8012c08:	fb03 1300 	mla	r3, r3, r0, r1
 8012c0c:	b299      	uxth	r1, r3
 8012c0e:	10fa      	asrs	r2, r7, #3
 8012c10:	f3c5 2307 	ubfx	r3, r5, #8, #8
 8012c14:	fb13 f306 	smulbb	r3, r3, r6
 8012c18:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8012c1c:	fb02 3200 	mla	r2, r2, r0, r3
 8012c20:	b2ed      	uxtb	r5, r5
 8012c22:	00fb      	lsls	r3, r7, #3
 8012c24:	b2db      	uxtb	r3, r3
 8012c26:	fb15 f506 	smulbb	r5, r5, r6
 8012c2a:	fb03 5500 	mla	r5, r3, r0, r5
 8012c2e:	b292      	uxth	r2, r2
 8012c30:	b2ad      	uxth	r5, r5
 8012c32:	1c4b      	adds	r3, r1, #1
 8012c34:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 8012c38:	1c68      	adds	r0, r5, #1
 8012c3a:	1c51      	adds	r1, r2, #1
 8012c3c:	eb00 2515 	add.w	r5, r0, r5, lsr #8
 8012c40:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8012c44:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 8012c48:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8012c4c:	0952      	lsrs	r2, r2, #5
 8012c4e:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8012c52:	432b      	orrs	r3, r5
 8012c54:	4313      	orrs	r3, r2
 8012c56:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8012c58:	8013      	strh	r3, [r2, #0]
 8012c5a:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8012c5c:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 8012c5e:	3302      	adds	r3, #2
 8012c60:	9312      	str	r3, [sp, #72]	; 0x48
 8012c62:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8012c64:	4413      	add	r3, r2
 8012c66:	932d      	str	r3, [sp, #180]	; 0xb4
 8012c68:	9a30      	ldr	r2, [sp, #192]	; 0xc0
 8012c6a:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8012c6c:	4413      	add	r3, r2
 8012c6e:	932e      	str	r3, [sp, #184]	; 0xb8
 8012c70:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8012c72:	3b01      	subs	r3, #1
 8012c74:	9316      	str	r3, [sp, #88]	; 0x58
 8012c76:	e6ab      	b.n	80129d0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x10c>
 8012c78:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8012c7a:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 8012c7c:	4413      	add	r3, r2
 8012c7e:	932d      	str	r3, [sp, #180]	; 0xb4
 8012c80:	9a30      	ldr	r2, [sp, #192]	; 0xc0
 8012c82:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8012c84:	4413      	add	r3, r2
 8012c86:	932e      	str	r3, [sp, #184]	; 0xb8
 8012c88:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8012c8a:	3b01      	subs	r3, #1
 8012c8c:	9309      	str	r3, [sp, #36]	; 0x24
 8012c8e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8012c90:	3302      	adds	r3, #2
 8012c92:	930c      	str	r3, [sp, #48]	; 0x30
 8012c94:	e64e      	b.n	8012934 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x70>
 8012c96:	f47f ae60 	bne.w	801295a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x96>
 8012c9a:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8012c9c:	2b00      	cmp	r3, #0
 8012c9e:	f340 81ac 	ble.w	8012ffa <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x736>
 8012ca2:	ee3a aa2b 	vadd.f32	s20, s20, s23
 8012ca6:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8012caa:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 8012cae:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8012cb0:	ee79 9a8b 	vadd.f32	s19, s19, s22
 8012cb4:	ee39 9a2a 	vadd.f32	s18, s18, s21
 8012cb8:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8012cbc:	eef0 6a48 	vmov.f32	s13, s16
 8012cc0:	ee69 7a27 	vmul.f32	s15, s18, s15
 8012cc4:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8012cc8:	ee37 8a48 	vsub.f32	s16, s14, s16
 8012ccc:	edcd 6a2d 	vstr	s13, [sp, #180]	; 0xb4
 8012cd0:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8012cd4:	eef0 6a68 	vmov.f32	s13, s17
 8012cd8:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8012cdc:	ee18 2a10 	vmov	r2, s16
 8012ce0:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8012ce4:	fb92 f3f3 	sdiv	r3, r2, r3
 8012ce8:	ee18 2a90 	vmov	r2, s17
 8012cec:	932f      	str	r3, [sp, #188]	; 0xbc
 8012cee:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8012cf0:	fb92 f3f3 	sdiv	r3, r2, r3
 8012cf4:	9330      	str	r3, [sp, #192]	; 0xc0
 8012cf6:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8012cf8:	9a18      	ldr	r2, [sp, #96]	; 0x60
 8012cfa:	3b01      	subs	r3, #1
 8012cfc:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8012d00:	9314      	str	r3, [sp, #80]	; 0x50
 8012d02:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8012d04:	edcd 6a2e 	vstr	s13, [sp, #184]	; 0xb8
 8012d08:	bf08      	it	eq
 8012d0a:	4613      	moveq	r3, r2
 8012d0c:	9309      	str	r3, [sp, #36]	; 0x24
 8012d0e:	eef0 8a67 	vmov.f32	s17, s15
 8012d12:	eeb0 8a47 	vmov.f32	s16, s14
 8012d16:	e606      	b.n	8012926 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x62>
 8012d18:	b161      	cbz	r1, 8012d34 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x470>
 8012d1a:	5d2a      	ldrb	r2, [r5, r4]
 8012d1c:	9d08      	ldr	r5, [sp, #32]
 8012d1e:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 8012d22:	920a      	str	r2, [sp, #40]	; 0x28
 8012d24:	ea4f 6912 	mov.w	r9, r2, lsr #24
 8012d28:	25ff      	movs	r5, #255	; 0xff
 8012d2a:	46ae      	mov	lr, r5
 8012d2c:	e68e      	b.n	8012a4c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x188>
 8012d2e:	25ff      	movs	r5, #255	; 0xff
 8012d30:	46a9      	mov	r9, r5
 8012d32:	e68b      	b.n	8012a4c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x188>
 8012d34:	25ff      	movs	r5, #255	; 0xff
 8012d36:	46a9      	mov	r9, r5
 8012d38:	e7f7      	b.n	8012d2a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x466>
 8012d3a:	1c56      	adds	r6, r2, #1
 8012d3c:	d18d      	bne.n	8012c5a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x396>
 8012d3e:	4294      	cmp	r4, r2
 8012d40:	dd8b      	ble.n	8012c5a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x396>
 8012d42:	1c5d      	adds	r5, r3, #1
 8012d44:	db89      	blt.n	8012c5a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x396>
 8012d46:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8012d48:	429d      	cmp	r5, r3
 8012d4a:	dd86      	ble.n	8012c5a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x396>
 8012d4c:	e9cd 3003 	strd	r3, r0, [sp, #12]
 8012d50:	9d17      	ldr	r5, [sp, #92]	; 0x5c
 8012d52:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8012d54:	9202      	str	r2, [sp, #8]
 8012d56:	e9cd 1505 	strd	r1, r5, [sp, #20]
 8012d5a:	e9cd 4300 	strd	r4, r3, [sp]
 8012d5e:	e9dd 1212 	ldrd	r1, r2, [sp, #72]	; 0x48
 8012d62:	9b08      	ldr	r3, [sp, #32]
 8012d64:	9819      	ldr	r0, [sp, #100]	; 0x64
 8012d66:	f7ff fc49 	bl	80125fc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>
 8012d6a:	e776      	b.n	8012c5a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x396>
 8012d6c:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8012d6e:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 8012d70:	f3c3 3103 	ubfx	r1, r3, #12, #4
 8012d74:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8012d76:	1412      	asrs	r2, r2, #16
 8012d78:	f3c3 3003 	ubfx	r0, r3, #12, #4
 8012d7c:	141b      	asrs	r3, r3, #16
 8012d7e:	fb04 2303 	mla	r3, r4, r3, r2
 8012d82:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8012d84:	18d5      	adds	r5, r2, r3
 8012d86:	5cd3      	ldrb	r3, [r2, r3]
 8012d88:	9a08      	ldr	r2, [sp, #32]
 8012d8a:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8012d8e:	0e1e      	lsrs	r6, r3, #24
 8012d90:	2900      	cmp	r1, #0
 8012d92:	f000 8121 	beq.w	8012fd8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x714>
 8012d96:	786a      	ldrb	r2, [r5, #1]
 8012d98:	9f08      	ldr	r7, [sp, #32]
 8012d9a:	f857 2022 	ldr.w	r2, [r7, r2, lsl #2]
 8012d9e:	920f      	str	r2, [sp, #60]	; 0x3c
 8012da0:	ea4f 6c12 	mov.w	ip, r2, lsr #24
 8012da4:	2800      	cmp	r0, #0
 8012da6:	f000 8122 	beq.w	8012fee <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x72a>
 8012daa:	192a      	adds	r2, r5, r4
 8012dac:	5d2d      	ldrb	r5, [r5, r4]
 8012dae:	7852      	ldrb	r2, [r2, #1]
 8012db0:	f857 5025 	ldr.w	r5, [r7, r5, lsl #2]
 8012db4:	f857 2022 	ldr.w	r2, [r7, r2, lsl #2]
 8012db8:	950b      	str	r5, [sp, #44]	; 0x2c
 8012dba:	ea4f 6815 	mov.w	r8, r5, lsr #24
 8012dbe:	9210      	str	r2, [sp, #64]	; 0x40
 8012dc0:	0e15      	lsrs	r5, r2, #24
 8012dc2:	b289      	uxth	r1, r1
 8012dc4:	b280      	uxth	r0, r0
 8012dc6:	fb01 f900 	mul.w	r9, r1, r0
 8012dca:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 8012dce:	0109      	lsls	r1, r1, #4
 8012dd0:	eba1 0e09 	sub.w	lr, r1, r9
 8012dd4:	b280      	uxth	r0, r0
 8012dd6:	f5c1 7280 	rsb	r2, r1, #256	; 0x100
 8012dda:	fa1f fe8e 	uxth.w	lr, lr
 8012dde:	1a12      	subs	r2, r2, r0
 8012de0:	b292      	uxth	r2, r2
 8012de2:	fb0e f10c 	mul.w	r1, lr, ip
 8012de6:	fb02 1106 	mla	r1, r2, r6, r1
 8012dea:	fb00 1108 	mla	r1, r0, r8, r1
 8012dee:	fb09 1105 	mla	r1, r9, r5, r1
 8012df2:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8012df6:	2900      	cmp	r1, #0
 8012df8:	f000 80e0 	beq.w	8012fbc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6f8>
 8012dfc:	2eff      	cmp	r6, #255	; 0xff
 8012dfe:	d016      	beq.n	8012e2e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x56a>
 8012e00:	f003 17ff 	and.w	r7, r3, #16711935	; 0xff00ff
 8012e04:	4377      	muls	r7, r6
 8012e06:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8012e0a:	435e      	muls	r6, r3
 8012e0c:	0a3b      	lsrs	r3, r7, #8
 8012e0e:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8012e12:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8012e16:	443b      	add	r3, r7
 8012e18:	f506 7780 	add.w	r7, r6, #256	; 0x100
 8012e1c:	eb07 2716 	add.w	r7, r7, r6, lsr #8
 8012e20:	0a1b      	lsrs	r3, r3, #8
 8012e22:	0a3f      	lsrs	r7, r7, #8
 8012e24:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8012e28:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 8012e2c:	433b      	orrs	r3, r7
 8012e2e:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8012e32:	d01d      	beq.n	8012e70 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x5ac>
 8012e34:	9e0f      	ldr	r6, [sp, #60]	; 0x3c
 8012e36:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 8012e38:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8012e3c:	fb0c f606 	mul.w	r6, ip, r6
 8012e40:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 8012e44:	fb0c fc07 	mul.w	ip, ip, r7
 8012e48:	0a37      	lsrs	r7, r6, #8
 8012e4a:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8012e4e:	f106 1601 	add.w	r6, r6, #65537	; 0x10001
 8012e52:	4437      	add	r7, r6
 8012e54:	f50c 7680 	add.w	r6, ip, #256	; 0x100
 8012e58:	eb06 2c1c 	add.w	ip, r6, ip, lsr #8
 8012e5c:	0a3f      	lsrs	r7, r7, #8
 8012e5e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8012e62:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8012e66:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8012e6a:	ea47 060c 	orr.w	r6, r7, ip
 8012e6e:	960f      	str	r6, [sp, #60]	; 0x3c
 8012e70:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8012e74:	d01d      	beq.n	8012eb2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x5ee>
 8012e76:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
 8012e78:	f006 1cff 	and.w	ip, r6, #16711935	; 0xff00ff
 8012e7c:	fb08 fc0c 	mul.w	ip, r8, ip
 8012e80:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8012e84:	fb08 f806 	mul.w	r8, r8, r6
 8012e88:	ea4f 271c 	mov.w	r7, ip, lsr #8
 8012e8c:	f508 7680 	add.w	r6, r8, #256	; 0x100
 8012e90:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8012e94:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8012e98:	eb06 2818 	add.w	r8, r6, r8, lsr #8
 8012e9c:	4467      	add	r7, ip
 8012e9e:	0a3f      	lsrs	r7, r7, #8
 8012ea0:	ea4f 2818 	mov.w	r8, r8, lsr #8
 8012ea4:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8012ea8:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 8012eac:	ea47 0608 	orr.w	r6, r7, r8
 8012eb0:	960b      	str	r6, [sp, #44]	; 0x2c
 8012eb2:	2dff      	cmp	r5, #255	; 0xff
 8012eb4:	d01a      	beq.n	8012eec <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x628>
 8012eb6:	9e10      	ldr	r6, [sp, #64]	; 0x40
 8012eb8:	f006 1cff 	and.w	ip, r6, #16711935	; 0xff00ff
 8012ebc:	fb05 fc0c 	mul.w	ip, r5, ip
 8012ec0:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8012ec4:	4375      	muls	r5, r6
 8012ec6:	ea4f 271c 	mov.w	r7, ip, lsr #8
 8012eca:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8012ece:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8012ed2:	f505 7680 	add.w	r6, r5, #256	; 0x100
 8012ed6:	4467      	add	r7, ip
 8012ed8:	eb06 2515 	add.w	r5, r6, r5, lsr #8
 8012edc:	0a3f      	lsrs	r7, r7, #8
 8012ede:	0a2d      	lsrs	r5, r5, #8
 8012ee0:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8012ee4:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 8012ee8:	433d      	orrs	r5, r7
 8012eea:	9510      	str	r5, [sp, #64]	; 0x40
 8012eec:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8012eee:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8012ef2:	f003 16ff 	and.w	r6, r3, #16711935	; 0xff00ff
 8012ef6:	fb0e f505 	mul.w	r5, lr, r5
 8012efa:	fb02 5506 	mla	r5, r2, r6, r5
 8012efe:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
 8012f00:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8012f04:	fb00 5506 	mla	r5, r0, r6, r5
 8012f08:	9e10      	ldr	r6, [sp, #64]	; 0x40
 8012f0a:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8012f0e:	fb09 5506 	mla	r5, r9, r6, r5
 8012f12:	9e0f      	ldr	r6, [sp, #60]	; 0x3c
 8012f14:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8012f18:	fb0e fe06 	mul.w	lr, lr, r6
 8012f1c:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8012f20:	fb02 e303 	mla	r3, r2, r3, lr
 8012f24:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8012f26:	f402 477f 	and.w	r7, r2, #65280	; 0xff00
 8012f2a:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8012f2c:	fb00 3307 	mla	r3, r0, r7, r3
 8012f30:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 8012f34:	fb09 3c0c 	mla	ip, r9, ip, r3
 8012f38:	fb01 f10b 	mul.w	r1, r1, fp
 8012f3c:	0a2d      	lsrs	r5, r5, #8
 8012f3e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8012f42:	f8ba 0000 	ldrh.w	r0, [sl]
 8012f46:	1c4b      	adds	r3, r1, #1
 8012f48:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8012f4c:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8012f50:	ea45 050c 	orr.w	r5, r5, ip
 8012f54:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8012f58:	1202      	asrs	r2, r0, #8
 8012f5a:	0c2b      	lsrs	r3, r5, #16
 8012f5c:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 8012f60:	b2c9      	uxtb	r1, r1
 8012f62:	fb13 f30b 	smulbb	r3, r3, fp
 8012f66:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8012f6a:	fb02 3201 	mla	r2, r2, r1, r3
 8012f6e:	f3c5 2607 	ubfx	r6, r5, #8, #8
 8012f72:	10c3      	asrs	r3, r0, #3
 8012f74:	b2ed      	uxtb	r5, r5
 8012f76:	00c0      	lsls	r0, r0, #3
 8012f78:	b2c0      	uxtb	r0, r0
 8012f7a:	fb15 f50b 	smulbb	r5, r5, fp
 8012f7e:	fb00 5001 	mla	r0, r0, r1, r5
 8012f82:	b292      	uxth	r2, r2
 8012f84:	fb16 f60b 	smulbb	r6, r6, fp
 8012f88:	b280      	uxth	r0, r0
 8012f8a:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 8012f8e:	fb03 6301 	mla	r3, r3, r1, r6
 8012f92:	1c51      	adds	r1, r2, #1
 8012f94:	1c46      	adds	r6, r0, #1
 8012f96:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8012f9a:	eb06 2610 	add.w	r6, r6, r0, lsr #8
 8012f9e:	b29b      	uxth	r3, r3
 8012fa0:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8012fa4:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 8012fa8:	4332      	orrs	r2, r6
 8012faa:	1c5e      	adds	r6, r3, #1
 8012fac:	eb06 2313 	add.w	r3, r6, r3, lsr #8
 8012fb0:	095b      	lsrs	r3, r3, #5
 8012fb2:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8012fb6:	431a      	orrs	r2, r3
 8012fb8:	f8aa 2000 	strh.w	r2, [sl]
 8012fbc:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8012fbe:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 8012fc0:	4413      	add	r3, r2
 8012fc2:	932d      	str	r3, [sp, #180]	; 0xb4
 8012fc4:	9a30      	ldr	r2, [sp, #192]	; 0xc0
 8012fc6:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8012fc8:	4413      	add	r3, r2
 8012fca:	932e      	str	r3, [sp, #184]	; 0xb8
 8012fcc:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8012fce:	3b01      	subs	r3, #1
 8012fd0:	f10a 0a02 	add.w	sl, sl, #2
 8012fd4:	9312      	str	r3, [sp, #72]	; 0x48
 8012fd6:	e4db      	b.n	8012990 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xcc>
 8012fd8:	b160      	cbz	r0, 8012ff4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x730>
 8012fda:	5d2a      	ldrb	r2, [r5, r4]
 8012fdc:	9d08      	ldr	r5, [sp, #32]
 8012fde:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 8012fe2:	920b      	str	r2, [sp, #44]	; 0x2c
 8012fe4:	ea4f 6812 	mov.w	r8, r2, lsr #24
 8012fe8:	25ff      	movs	r5, #255	; 0xff
 8012fea:	46ac      	mov	ip, r5
 8012fec:	e6e9      	b.n	8012dc2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4fe>
 8012fee:	25ff      	movs	r5, #255	; 0xff
 8012ff0:	46a8      	mov	r8, r5
 8012ff2:	e6e6      	b.n	8012dc2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4fe>
 8012ff4:	25ff      	movs	r5, #255	; 0xff
 8012ff6:	46a8      	mov	r8, r5
 8012ff8:	e7f7      	b.n	8012fea <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x726>
 8012ffa:	b01b      	add	sp, #108	; 0x6c
 8012ffc:	ecbd 8b08 	vpop	{d8-d11}
 8013000:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08013004 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>:
 8013004:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013008:	8808      	ldrh	r0, [r1, #0]
 801300a:	b085      	sub	sp, #20
 801300c:	1206      	asrs	r6, r0, #8
 801300e:	e9dd 5410 	ldrd	r5, r4, [sp, #64]	; 0x40
 8013012:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8013016:	9600      	str	r6, [sp, #0]
 8013018:	f9bd c038 	ldrsh.w	ip, [sp, #56]	; 0x38
 801301c:	f9bd 903c 	ldrsh.w	r9, [sp, #60]	; 0x3c
 8013020:	f89d 704c 	ldrb.w	r7, [sp, #76]	; 0x4c
 8013024:	10c6      	asrs	r6, r0, #3
 8013026:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801302a:	9601      	str	r6, [sp, #4]
 801302c:	00c0      	lsls	r0, r0, #3
 801302e:	fb04 560c 	mla	r6, r4, ip, r5
 8013032:	b2c0      	uxtb	r0, r0
 8013034:	4692      	mov	sl, r2
 8013036:	eb02 0e06 	add.w	lr, r2, r6
 801303a:	9a00      	ldr	r2, [sp, #0]
 801303c:	9002      	str	r0, [sp, #8]
 801303e:	f040 407f 	orr.w	r0, r0, #4278190080	; 0xff000000
 8013042:	ea40 4002 	orr.w	r0, r0, r2, lsl #16
 8013046:	9a01      	ldr	r2, [sp, #4]
 8013048:	2c00      	cmp	r4, #0
 801304a:	4698      	mov	r8, r3
 801304c:	ea40 2002 	orr.w	r0, r0, r2, lsl #8
 8013050:	f89d 3048 	ldrb.w	r3, [sp, #72]	; 0x48
 8013054:	db3e      	blt.n	80130d4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xd0>
 8013056:	45a1      	cmp	r9, r4
 8013058:	dd3c      	ble.n	80130d4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xd0>
 801305a:	2d00      	cmp	r5, #0
 801305c:	db38      	blt.n	80130d0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xcc>
 801305e:	45ac      	cmp	ip, r5
 8013060:	dd36      	ble.n	80130d0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xcc>
 8013062:	f81a 2006 	ldrb.w	r2, [sl, r6]
 8013066:	f858 2022 	ldr.w	r2, [r8, r2, lsl #2]
 801306a:	1c6e      	adds	r6, r5, #1
 801306c:	d435      	bmi.n	80130da <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xd6>
 801306e:	45b4      	cmp	ip, r6
 8013070:	dd33      	ble.n	80130da <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xd6>
 8013072:	b393      	cbz	r3, 80130da <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xd6>
 8013074:	f89e 6001 	ldrb.w	r6, [lr, #1]
 8013078:	f858 6026 	ldr.w	r6, [r8, r6, lsl #2]
 801307c:	3401      	adds	r4, #1
 801307e:	d430      	bmi.n	80130e2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xde>
 8013080:	45a1      	cmp	r9, r4
 8013082:	dd2e      	ble.n	80130e2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xde>
 8013084:	b36f      	cbz	r7, 80130e2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xde>
 8013086:	2d00      	cmp	r5, #0
 8013088:	db29      	blt.n	80130de <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xda>
 801308a:	45ac      	cmp	ip, r5
 801308c:	dd27      	ble.n	80130de <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xda>
 801308e:	f81e 400c 	ldrb.w	r4, [lr, ip]
 8013092:	f858 4024 	ldr.w	r4, [r8, r4, lsl #2]
 8013096:	3501      	adds	r5, #1
 8013098:	d407      	bmi.n	80130aa <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xa6>
 801309a:	45ac      	cmp	ip, r5
 801309c:	dd05      	ble.n	80130aa <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xa6>
 801309e:	b123      	cbz	r3, 80130aa <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xa6>
 80130a0:	44f4      	add	ip, lr
 80130a2:	f89c 0001 	ldrb.w	r0, [ip, #1]
 80130a6:	f858 0020 	ldr.w	r0, [r8, r0, lsl #2]
 80130aa:	2b0f      	cmp	r3, #15
 80130ac:	ea4f 6b12 	mov.w	fp, r2, lsr #24
 80130b0:	ea4f 6a16 	mov.w	sl, r6, lsr #24
 80130b4:	ea4f 6914 	mov.w	r9, r4, lsr #24
 80130b8:	ea4f 6810 	mov.w	r8, r0, lsr #24
 80130bc:	d801      	bhi.n	80130c2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xbe>
 80130be:	2f0f      	cmp	r7, #15
 80130c0:	d911      	bls.n	80130e6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xe2>
 80130c2:	4b79      	ldr	r3, [pc, #484]	; (80132a8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x2a4>)
 80130c4:	4a79      	ldr	r2, [pc, #484]	; (80132ac <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x2a8>)
 80130c6:	487a      	ldr	r0, [pc, #488]	; (80132b0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x2ac>)
 80130c8:	f240 210d 	movw	r1, #525	; 0x20d
 80130cc:	f004 ff46 	bl	8017f5c <__assert_func>
 80130d0:	4602      	mov	r2, r0
 80130d2:	e7ca      	b.n	801306a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x66>
 80130d4:	4606      	mov	r6, r0
 80130d6:	4602      	mov	r2, r0
 80130d8:	e7d0      	b.n	801307c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x78>
 80130da:	4606      	mov	r6, r0
 80130dc:	e7ce      	b.n	801307c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x78>
 80130de:	4604      	mov	r4, r0
 80130e0:	e7d9      	b.n	8013096 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x92>
 80130e2:	4604      	mov	r4, r0
 80130e4:	e7e1      	b.n	80130aa <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xa6>
 80130e6:	b29b      	uxth	r3, r3
 80130e8:	b2bf      	uxth	r7, r7
 80130ea:	fb03 fe07 	mul.w	lr, r3, r7
 80130ee:	ebce 1707 	rsb	r7, lr, r7, lsl #4
 80130f2:	011b      	lsls	r3, r3, #4
 80130f4:	eba3 0c0e 	sub.w	ip, r3, lr
 80130f8:	b2bf      	uxth	r7, r7
 80130fa:	f5c3 7580 	rsb	r5, r3, #256	; 0x100
 80130fe:	fa1f fc8c 	uxth.w	ip, ip
 8013102:	1bed      	subs	r5, r5, r7
 8013104:	b2ad      	uxth	r5, r5
 8013106:	fb0c f30a 	mul.w	r3, ip, sl
 801310a:	fb05 330b 	mla	r3, r5, fp, r3
 801310e:	fb07 3309 	mla	r3, r7, r9, r3
 8013112:	fb0e 3308 	mla	r3, lr, r8, r3
 8013116:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801311a:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 801311e:	9303      	str	r3, [sp, #12]
 8013120:	d018      	beq.n	8013154 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x150>
 8013122:	f002 13ff 	and.w	r3, r2, #16711935	; 0xff00ff
 8013126:	fb0b f303 	mul.w	r3, fp, r3
 801312a:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801312e:	fb0b fb02 	mul.w	fp, fp, r2
 8013132:	0a1a      	lsrs	r2, r3, #8
 8013134:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8013138:	f103 1301 	add.w	r3, r3, #65537	; 0x10001
 801313c:	441a      	add	r2, r3
 801313e:	f50b 7380 	add.w	r3, fp, #256	; 0x100
 8013142:	eb03 231b 	add.w	r3, r3, fp, lsr #8
 8013146:	0a12      	lsrs	r2, r2, #8
 8013148:	0a1b      	lsrs	r3, r3, #8
 801314a:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801314e:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8013152:	431a      	orrs	r2, r3
 8013154:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 8013158:	d019      	beq.n	801318e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x18a>
 801315a:	f006 1bff 	and.w	fp, r6, #16711935	; 0xff00ff
 801315e:	fb0a fb0b 	mul.w	fp, sl, fp
 8013162:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8013166:	fb0a fa06 	mul.w	sl, sl, r6
 801316a:	ea4f 261b 	mov.w	r6, fp, lsr #8
 801316e:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8013172:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8013176:	f50a 7380 	add.w	r3, sl, #256	; 0x100
 801317a:	445e      	add	r6, fp
 801317c:	eb03 231a 	add.w	r3, r3, sl, lsr #8
 8013180:	0a36      	lsrs	r6, r6, #8
 8013182:	0a1b      	lsrs	r3, r3, #8
 8013184:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8013188:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801318c:	431e      	orrs	r6, r3
 801318e:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8013192:	d019      	beq.n	80131c8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x1c4>
 8013194:	f004 1aff 	and.w	sl, r4, #16711935	; 0xff00ff
 8013198:	fb09 fa0a 	mul.w	sl, r9, sl
 801319c:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 80131a0:	fb09 f904 	mul.w	r9, r9, r4
 80131a4:	ea4f 241a 	mov.w	r4, sl, lsr #8
 80131a8:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 80131ac:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 80131b0:	f509 7380 	add.w	r3, r9, #256	; 0x100
 80131b4:	4454      	add	r4, sl
 80131b6:	eb03 2319 	add.w	r3, r3, r9, lsr #8
 80131ba:	0a24      	lsrs	r4, r4, #8
 80131bc:	0a1b      	lsrs	r3, r3, #8
 80131be:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 80131c2:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80131c6:	431c      	orrs	r4, r3
 80131c8:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 80131cc:	d019      	beq.n	8013202 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x1fe>
 80131ce:	f000 19ff 	and.w	r9, r0, #16711935	; 0xff00ff
 80131d2:	fb08 f909 	mul.w	r9, r8, r9
 80131d6:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 80131da:	fb08 f800 	mul.w	r8, r8, r0
 80131de:	ea4f 2019 	mov.w	r0, r9, lsr #8
 80131e2:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 80131e6:	f109 1901 	add.w	r9, r9, #65537	; 0x10001
 80131ea:	f508 7380 	add.w	r3, r8, #256	; 0x100
 80131ee:	4448      	add	r0, r9
 80131f0:	eb03 2318 	add.w	r3, r3, r8, lsr #8
 80131f4:	0a00      	lsrs	r0, r0, #8
 80131f6:	0a1b      	lsrs	r3, r3, #8
 80131f8:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 80131fc:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8013200:	4318      	orrs	r0, r3
 8013202:	f006 18ff 	and.w	r8, r6, #16711935	; 0xff00ff
 8013206:	f002 13ff 	and.w	r3, r2, #16711935	; 0xff00ff
 801320a:	fb0c f808 	mul.w	r8, ip, r8
 801320e:	fb05 8803 	mla	r8, r5, r3, r8
 8013212:	f004 13ff 	and.w	r3, r4, #16711935	; 0xff00ff
 8013216:	fb07 8803 	mla	r8, r7, r3, r8
 801321a:	f000 13ff 	and.w	r3, r0, #16711935	; 0xff00ff
 801321e:	fb0e 8303 	mla	r3, lr, r3, r8
 8013222:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8013226:	0a1b      	lsrs	r3, r3, #8
 8013228:	fb0c f606 	mul.w	r6, ip, r6
 801322c:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8013230:	fb05 6202 	mla	r2, r5, r2, r6
 8013234:	f003 18ff 	and.w	r8, r3, #16711935	; 0xff00ff
 8013238:	f404 437f 	and.w	r3, r4, #65280	; 0xff00
 801323c:	fb07 2703 	mla	r7, r7, r3, r2
 8013240:	9a03      	ldr	r2, [sp, #12]
 8013242:	9c02      	ldr	r4, [sp, #8]
 8013244:	9d01      	ldr	r5, [sp, #4]
 8013246:	f400 437f 	and.w	r3, r0, #65280	; 0xff00
 801324a:	fb0e 7303 	mla	r3, lr, r3, r7
 801324e:	43d0      	mvns	r0, r2
 8013250:	9a00      	ldr	r2, [sp, #0]
 8013252:	b2c0      	uxtb	r0, r0
 8013254:	0a1b      	lsrs	r3, r3, #8
 8013256:	4342      	muls	r2, r0
 8013258:	4344      	muls	r4, r0
 801325a:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801325e:	ea48 0303 	orr.w	r3, r8, r3
 8013262:	4345      	muls	r5, r0
 8013264:	4620      	mov	r0, r4
 8013266:	1c54      	adds	r4, r2, #1
 8013268:	eb04 2412 	add.w	r4, r4, r2, lsr #8
 801326c:	0c1a      	lsrs	r2, r3, #16
 801326e:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 8013272:	4a10      	ldr	r2, [pc, #64]	; (80132b4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x2b0>)
 8013274:	ea02 2204 	and.w	r2, r2, r4, lsl #8
 8013278:	1c44      	adds	r4, r0, #1
 801327a:	eb04 2410 	add.w	r4, r4, r0, lsr #8
 801327e:	b2d8      	uxtb	r0, r3
 8013280:	eb00 2014 	add.w	r0, r0, r4, lsr #8
 8013284:	ea42 02d0 	orr.w	r2, r2, r0, lsr #3
 8013288:	1c68      	adds	r0, r5, #1
 801328a:	eb00 2015 	add.w	r0, r0, r5, lsr #8
 801328e:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8013292:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8013296:	00db      	lsls	r3, r3, #3
 8013298:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801329c:	4313      	orrs	r3, r2
 801329e:	800b      	strh	r3, [r1, #0]
 80132a0:	b005      	add	sp, #20
 80132a2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80132a6:	bf00      	nop
 80132a8:	0801bc7d 	.word	0x0801bc7d
 80132ac:	0801c1d5 	.word	0x0801c1d5
 80132b0:	0801bd05 	.word	0x0801bd05
 80132b4:	fffff800 	.word	0xfffff800

080132b8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 80132b8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80132bc:	ed2d 8b08 	vpush	{d8-d11}
 80132c0:	b097      	sub	sp, #92	; 0x5c
 80132c2:	eeb0 aa40 	vmov.f32	s20, s0
 80132c6:	9d2d      	ldr	r5, [sp, #180]	; 0xb4
 80132c8:	9307      	str	r3, [sp, #28]
 80132ca:	f9bd 30c4 	ldrsh.w	r3, [sp, #196]	; 0xc4
 80132ce:	9112      	str	r1, [sp, #72]	; 0x48
 80132d0:	930f      	str	r3, [sp, #60]	; 0x3c
 80132d2:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	; 0xb8
 80132d6:	9015      	str	r0, [sp, #84]	; 0x54
 80132d8:	6868      	ldr	r0, [r5, #4]
 80132da:	9214      	str	r2, [sp, #80]	; 0x50
 80132dc:	fb00 1303 	mla	r3, r0, r3, r1
 80132e0:	9a32      	ldr	r2, [sp, #200]	; 0xc8
 80132e2:	6829      	ldr	r1, [r5, #0]
 80132e4:	6855      	ldr	r5, [r2, #4]
 80132e6:	f9bd 40c0 	ldrsh.w	r4, [sp, #192]	; 0xc0
 80132ea:	eb01 0343 	add.w	r3, r1, r3, lsl #1
 80132ee:	930a      	str	r3, [sp, #40]	; 0x28
 80132f0:	6813      	ldr	r3, [r2, #0]
 80132f2:	9311      	str	r3, [sp, #68]	; 0x44
 80132f4:	eef0 9a60 	vmov.f32	s19, s1
 80132f8:	eeb0 9a41 	vmov.f32	s18, s2
 80132fc:	eeb0 8a62 	vmov.f32	s16, s5
 8013300:	eef0 8a43 	vmov.f32	s17, s6
 8013304:	eef0 ba44 	vmov.f32	s23, s8
 8013308:	eeb0 ba64 	vmov.f32	s22, s9
 801330c:	eef0 aa45 	vmov.f32	s21, s10
 8013310:	3504      	adds	r5, #4
 8013312:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8013314:	2b00      	cmp	r3, #0
 8013316:	dc03      	bgt.n	8013320 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x68>
 8013318:	9b14      	ldr	r3, [sp, #80]	; 0x50
 801331a:	2b00      	cmp	r3, #0
 801331c:	f340 834d 	ble.w	80139ba <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x702>
 8013320:	9b07      	ldr	r3, [sp, #28]
 8013322:	2b00      	cmp	r3, #0
 8013324:	f340 819c 	ble.w	8013660 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3a8>
 8013328:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 801332a:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801332c:	1412      	asrs	r2, r2, #16
 801332e:	ea4f 4323 	mov.w	r3, r3, asr #16
 8013332:	d42d      	bmi.n	8013390 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xd8>
 8013334:	1c51      	adds	r1, r2, #1
 8013336:	428c      	cmp	r4, r1
 8013338:	dd2d      	ble.n	8013396 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xde>
 801333a:	2b00      	cmp	r3, #0
 801333c:	db2b      	blt.n	8013396 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xde>
 801333e:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8013340:	1c59      	adds	r1, r3, #1
 8013342:	4288      	cmp	r0, r1
 8013344:	dd27      	ble.n	8013396 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xde>
 8013346:	9b07      	ldr	r3, [sp, #28]
 8013348:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 801334a:	9929      	ldr	r1, [sp, #164]	; 0xa4
 801334c:	3b01      	subs	r3, #1
 801334e:	fb02 1203 	mla	r2, r2, r3, r1
 8013352:	1412      	asrs	r2, r2, #16
 8013354:	d429      	bmi.n	80133aa <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf2>
 8013356:	3201      	adds	r2, #1
 8013358:	4294      	cmp	r4, r2
 801335a:	dd26      	ble.n	80133aa <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf2>
 801335c:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 801335e:	992a      	ldr	r1, [sp, #168]	; 0xa8
 8013360:	fb02 1303 	mla	r3, r2, r3, r1
 8013364:	141b      	asrs	r3, r3, #16
 8013366:	d420      	bmi.n	80133aa <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf2>
 8013368:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801336a:	3301      	adds	r3, #1
 801336c:	429a      	cmp	r2, r3
 801336e:	dd1c      	ble.n	80133aa <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf2>
 8013370:	9b07      	ldr	r3, [sp, #28]
 8013372:	f8dd b028 	ldr.w	fp, [sp, #40]	; 0x28
 8013376:	9310      	str	r3, [sp, #64]	; 0x40
 8013378:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801337a:	2b00      	cmp	r3, #0
 801337c:	f300 81da 	bgt.w	8013734 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x47c>
 8013380:	9b07      	ldr	r3, [sp, #28]
 8013382:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8013384:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8013388:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801338c:	930a      	str	r3, [sp, #40]	; 0x28
 801338e:	e169      	b.n	8013664 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3ac>
 8013390:	1c51      	adds	r1, r2, #1
 8013392:	f040 8156 	bne.w	8013642 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x38a>
 8013396:	42a2      	cmp	r2, r4
 8013398:	f280 8153 	bge.w	8013642 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x38a>
 801339c:	1c5a      	adds	r2, r3, #1
 801339e:	f2c0 8150 	blt.w	8013642 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x38a>
 80133a2:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80133a4:	4293      	cmp	r3, r2
 80133a6:	f280 814c 	bge.w	8013642 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x38a>
 80133aa:	9b07      	ldr	r3, [sp, #28]
 80133ac:	9313      	str	r3, [sp, #76]	; 0x4c
 80133ae:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80133b0:	9310      	str	r3, [sp, #64]	; 0x40
 80133b2:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 80133b4:	2b00      	cmp	r3, #0
 80133b6:	dde3      	ble.n	8013380 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xc8>
 80133b8:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 80133ba:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80133bc:	f3c2 3103 	ubfx	r1, r2, #12, #4
 80133c0:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 80133c2:	f3c2 3003 	ubfx	r0, r2, #12, #4
 80133c6:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 80133c8:	1412      	asrs	r2, r2, #16
 80133ca:	ea4f 4323 	mov.w	r3, r3, asr #16
 80133ce:	f100 8198 	bmi.w	8013702 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x44a>
 80133d2:	1c56      	adds	r6, r2, #1
 80133d4:	42b4      	cmp	r4, r6
 80133d6:	f340 8196 	ble.w	8013706 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x44e>
 80133da:	2b00      	cmp	r3, #0
 80133dc:	f2c0 8193 	blt.w	8013706 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x44e>
 80133e0:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 80133e2:	1c5e      	adds	r6, r3, #1
 80133e4:	42b7      	cmp	r7, r6
 80133e6:	f340 818e 	ble.w	8013706 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x44e>
 80133ea:	fb03 2304 	mla	r3, r3, r4, r2
 80133ee:	9a11      	ldr	r2, [sp, #68]	; 0x44
 80133f0:	18d6      	adds	r6, r2, r3
 80133f2:	5cd3      	ldrb	r3, [r2, r3]
 80133f4:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 80133f8:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 80133fc:	2900      	cmp	r1, #0
 80133fe:	f000 8170 	beq.w	80136e2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x42a>
 8013402:	7872      	ldrb	r2, [r6, #1]
 8013404:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 8013408:	920b      	str	r2, [sp, #44]	; 0x2c
 801340a:	ea4f 6812 	mov.w	r8, r2, lsr #24
 801340e:	2800      	cmp	r0, #0
 8013410:	f000 8171 	beq.w	80136f6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x43e>
 8013414:	1932      	adds	r2, r6, r4
 8013416:	5d36      	ldrb	r6, [r6, r4]
 8013418:	7852      	ldrb	r2, [r2, #1]
 801341a:	f855 6026 	ldr.w	r6, [r5, r6, lsl #2]
 801341e:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 8013422:	9608      	str	r6, [sp, #32]
 8013424:	ea4f 6a16 	mov.w	sl, r6, lsr #24
 8013428:	920c      	str	r2, [sp, #48]	; 0x30
 801342a:	0e16      	lsrs	r6, r2, #24
 801342c:	b289      	uxth	r1, r1
 801342e:	b280      	uxth	r0, r0
 8013430:	fb01 fb00 	mul.w	fp, r1, r0
 8013434:	ebcb 1000 	rsb	r0, fp, r0, lsl #4
 8013438:	0109      	lsls	r1, r1, #4
 801343a:	eba1 090b 	sub.w	r9, r1, fp
 801343e:	b280      	uxth	r0, r0
 8013440:	f5c1 7280 	rsb	r2, r1, #256	; 0x100
 8013444:	fa1f f989 	uxth.w	r9, r9
 8013448:	1a12      	subs	r2, r2, r0
 801344a:	b292      	uxth	r2, r2
 801344c:	fb09 f108 	mul.w	r1, r9, r8
 8013450:	fb02 110c 	mla	r1, r2, ip, r1
 8013454:	fb00 110a 	mla	r1, r0, sl, r1
 8013458:	fb0b 1106 	mla	r1, fp, r6, r1
 801345c:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8013460:	2900      	cmp	r1, #0
 8013462:	f000 80df 	beq.w	8013624 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x36c>
 8013466:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 801346a:	d01b      	beq.n	80134a4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1ec>
 801346c:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 8013470:	fb0c fe0e 	mul.w	lr, ip, lr
 8013474:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8013478:	fb0c fc03 	mul.w	ip, ip, r3
 801347c:	ea4f 231e 	mov.w	r3, lr, lsr #8
 8013480:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8013484:	f10e 1e01 	add.w	lr, lr, #65537	; 0x10001
 8013488:	4473      	add	r3, lr
 801348a:	f50c 7e80 	add.w	lr, ip, #256	; 0x100
 801348e:	eb0e 2e1c 	add.w	lr, lr, ip, lsr #8
 8013492:	0a1b      	lsrs	r3, r3, #8
 8013494:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8013498:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801349c:	f40e 4e7f 	and.w	lr, lr, #65280	; 0xff00
 80134a0:	ea43 030e 	orr.w	r3, r3, lr
 80134a4:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 80134a8:	d01e      	beq.n	80134e8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x230>
 80134aa:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 80134ac:	f007 1cff 	and.w	ip, r7, #16711935	; 0xff00ff
 80134b0:	fb08 fc0c 	mul.w	ip, r8, ip
 80134b4:	f407 4e7f 	and.w	lr, r7, #65280	; 0xff00
 80134b8:	fb08 f80e 	mul.w	r8, r8, lr
 80134bc:	ea4f 2e1c 	mov.w	lr, ip, lsr #8
 80134c0:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80134c4:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 80134c8:	44e6      	add	lr, ip
 80134ca:	f508 7c80 	add.w	ip, r8, #256	; 0x100
 80134ce:	eb0c 2818 	add.w	r8, ip, r8, lsr #8
 80134d2:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80134d6:	ea4f 2818 	mov.w	r8, r8, lsr #8
 80134da:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80134de:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 80134e2:	ea4e 0708 	orr.w	r7, lr, r8
 80134e6:	970b      	str	r7, [sp, #44]	; 0x2c
 80134e8:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 80134ec:	d01e      	beq.n	801352c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x274>
 80134ee:	9f08      	ldr	r7, [sp, #32]
 80134f0:	f007 18ff 	and.w	r8, r7, #16711935	; 0xff00ff
 80134f4:	fb0a f808 	mul.w	r8, sl, r8
 80134f8:	f407 4c7f 	and.w	ip, r7, #65280	; 0xff00
 80134fc:	fb0a fa0c 	mul.w	sl, sl, ip
 8013500:	ea4f 2e18 	mov.w	lr, r8, lsr #8
 8013504:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8013508:	f108 1801 	add.w	r8, r8, #65537	; 0x10001
 801350c:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8013510:	44c6      	add	lr, r8
 8013512:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8013516:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801351a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801351e:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8013522:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8013526:	ea4e 070a 	orr.w	r7, lr, sl
 801352a:	9708      	str	r7, [sp, #32]
 801352c:	2eff      	cmp	r6, #255	; 0xff
 801352e:	d01d      	beq.n	801356c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2b4>
 8013530:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 8013532:	f007 18ff 	and.w	r8, r7, #16711935	; 0xff00ff
 8013536:	fb06 f808 	mul.w	r8, r6, r8
 801353a:	f407 4c7f 	and.w	ip, r7, #65280	; 0xff00
 801353e:	fb06 f60c 	mul.w	r6, r6, ip
 8013542:	ea4f 2e18 	mov.w	lr, r8, lsr #8
 8013546:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801354a:	f108 1801 	add.w	r8, r8, #65537	; 0x10001
 801354e:	f506 7c80 	add.w	ip, r6, #256	; 0x100
 8013552:	44c6      	add	lr, r8
 8013554:	eb0c 2616 	add.w	r6, ip, r6, lsr #8
 8013558:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801355c:	0a36      	lsrs	r6, r6, #8
 801355e:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8013562:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8013566:	ea4e 0606 	orr.w	r6, lr, r6
 801356a:	960c      	str	r6, [sp, #48]	; 0x30
 801356c:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
 801356e:	9f08      	ldr	r7, [sp, #32]
 8013570:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8013574:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 8013578:	fb09 f606 	mul.w	r6, r9, r6
 801357c:	fb02 660c 	mla	r6, r2, ip, r6
 8013580:	f007 1cff 	and.w	ip, r7, #16711935	; 0xff00ff
 8013584:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 8013586:	fb00 660c 	mla	r6, r0, ip, r6
 801358a:	f007 1cff 	and.w	ip, r7, #16711935	; 0xff00ff
 801358e:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 8013590:	fb0b 660c 	mla	r6, fp, ip, r6
 8013594:	f407 4c7f 	and.w	ip, r7, #65280	; 0xff00
 8013598:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801359c:	fb09 f90c 	mul.w	r9, r9, ip
 80135a0:	fb02 9303 	mla	r3, r2, r3, r9
 80135a4:	9a08      	ldr	r2, [sp, #32]
 80135a6:	f402 4e7f 	and.w	lr, r2, #65280	; 0xff00
 80135aa:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 80135ac:	fb00 330e 	mla	r3, r0, lr, r3
 80135b0:	f402 407f 	and.w	r0, r2, #65280	; 0xff00
 80135b4:	fb0b 3b00 	mla	fp, fp, r0, r3
 80135b8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80135ba:	881b      	ldrh	r3, [r3, #0]
 80135bc:	43c9      	mvns	r1, r1
 80135be:	1218      	asrs	r0, r3, #8
 80135c0:	b2c9      	uxtb	r1, r1
 80135c2:	10da      	asrs	r2, r3, #3
 80135c4:	0a36      	lsrs	r6, r6, #8
 80135c6:	ea4f 2b1b 	mov.w	fp, fp, lsr #8
 80135ca:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 80135ce:	00db      	lsls	r3, r3, #3
 80135d0:	4348      	muls	r0, r1
 80135d2:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 80135d6:	f40b 4b7f 	and.w	fp, fp, #65280	; 0xff00
 80135da:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 80135de:	b2db      	uxtb	r3, r3
 80135e0:	434b      	muls	r3, r1
 80135e2:	ea46 060b 	orr.w	r6, r6, fp
 80135e6:	434a      	muls	r2, r1
 80135e8:	1c41      	adds	r1, r0, #1
 80135ea:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 80135ee:	0c30      	lsrs	r0, r6, #16
 80135f0:	eb00 2011 	add.w	r0, r0, r1, lsr #8
 80135f4:	494e      	ldr	r1, [pc, #312]	; (8013730 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x478>)
 80135f6:	ea01 2000 	and.w	r0, r1, r0, lsl #8
 80135fa:	1c59      	adds	r1, r3, #1
 80135fc:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 8013600:	b2f3      	uxtb	r3, r6
 8013602:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 8013606:	1c51      	adds	r1, r2, #1
 8013608:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801360c:	f3c6 2607 	ubfx	r6, r6, #8, #8
 8013610:	eb06 2612 	add.w	r6, r6, r2, lsr #8
 8013614:	00f6      	lsls	r6, r6, #3
 8013616:	ea40 03d3 	orr.w	r3, r0, r3, lsr #3
 801361a:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801361e:	431e      	orrs	r6, r3
 8013620:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8013622:	801e      	strh	r6, [r3, #0]
 8013624:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8013626:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 8013628:	3302      	adds	r3, #2
 801362a:	9310      	str	r3, [sp, #64]	; 0x40
 801362c:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801362e:	4413      	add	r3, r2
 8013630:	9329      	str	r3, [sp, #164]	; 0xa4
 8013632:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 8013634:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8013636:	4413      	add	r3, r2
 8013638:	932a      	str	r3, [sp, #168]	; 0xa8
 801363a:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801363c:	3b01      	subs	r3, #1
 801363e:	9313      	str	r3, [sp, #76]	; 0x4c
 8013640:	e6b7      	b.n	80133b2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfa>
 8013642:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8013644:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 8013646:	4413      	add	r3, r2
 8013648:	9329      	str	r3, [sp, #164]	; 0xa4
 801364a:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 801364c:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801364e:	4413      	add	r3, r2
 8013650:	932a      	str	r3, [sp, #168]	; 0xa8
 8013652:	9b07      	ldr	r3, [sp, #28]
 8013654:	3b01      	subs	r3, #1
 8013656:	9307      	str	r3, [sp, #28]
 8013658:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801365a:	3302      	adds	r3, #2
 801365c:	930a      	str	r3, [sp, #40]	; 0x28
 801365e:	e65f      	b.n	8013320 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x68>
 8013660:	f47f ae71 	bne.w	8013346 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x8e>
 8013664:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8013666:	2b00      	cmp	r3, #0
 8013668:	f340 81a7 	ble.w	80139ba <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x702>
 801366c:	ee3a aa2b 	vadd.f32	s20, s20, s23
 8013670:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8013674:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 8013678:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801367a:	ee79 9a8b 	vadd.f32	s19, s19, s22
 801367e:	ee39 9a2a 	vadd.f32	s18, s18, s21
 8013682:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8013686:	eef0 6a48 	vmov.f32	s13, s16
 801368a:	ee69 7a27 	vmul.f32	s15, s18, s15
 801368e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8013692:	ee37 8a48 	vsub.f32	s16, s14, s16
 8013696:	edcd 6a29 	vstr	s13, [sp, #164]	; 0xa4
 801369a:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 801369e:	eef0 6a68 	vmov.f32	s13, s17
 80136a2:	ee77 8ae8 	vsub.f32	s17, s15, s17
 80136a6:	ee18 2a10 	vmov	r2, s16
 80136aa:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 80136ae:	fb92 f3f3 	sdiv	r3, r2, r3
 80136b2:	ee18 2a90 	vmov	r2, s17
 80136b6:	932b      	str	r3, [sp, #172]	; 0xac
 80136b8:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80136ba:	fb92 f3f3 	sdiv	r3, r2, r3
 80136be:	932c      	str	r3, [sp, #176]	; 0xb0
 80136c0:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80136c2:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80136c4:	3b01      	subs	r3, #1
 80136c6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80136ca:	9312      	str	r3, [sp, #72]	; 0x48
 80136cc:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80136ce:	edcd 6a2a 	vstr	s13, [sp, #168]	; 0xa8
 80136d2:	bf08      	it	eq
 80136d4:	4613      	moveq	r3, r2
 80136d6:	9307      	str	r3, [sp, #28]
 80136d8:	eef0 8a67 	vmov.f32	s17, s15
 80136dc:	eeb0 8a47 	vmov.f32	s16, s14
 80136e0:	e617      	b.n	8013312 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x5a>
 80136e2:	b158      	cbz	r0, 80136fc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x444>
 80136e4:	5d32      	ldrb	r2, [r6, r4]
 80136e6:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 80136ea:	9208      	str	r2, [sp, #32]
 80136ec:	ea4f 6a12 	mov.w	sl, r2, lsr #24
 80136f0:	26ff      	movs	r6, #255	; 0xff
 80136f2:	46b0      	mov	r8, r6
 80136f4:	e69a      	b.n	801342c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x174>
 80136f6:	26ff      	movs	r6, #255	; 0xff
 80136f8:	46b2      	mov	sl, r6
 80136fa:	e697      	b.n	801342c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x174>
 80136fc:	26ff      	movs	r6, #255	; 0xff
 80136fe:	46b2      	mov	sl, r6
 8013700:	e7f7      	b.n	80136f2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x43a>
 8013702:	1c57      	adds	r7, r2, #1
 8013704:	d18e      	bne.n	8013624 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x36c>
 8013706:	4294      	cmp	r4, r2
 8013708:	dd8c      	ble.n	8013624 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x36c>
 801370a:	1c5e      	adds	r6, r3, #1
 801370c:	db8a      	blt.n	8013624 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x36c>
 801370e:	9e0f      	ldr	r6, [sp, #60]	; 0x3c
 8013710:	429e      	cmp	r6, r3
 8013712:	dd87      	ble.n	8013624 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x36c>
 8013714:	e9cd 1004 	strd	r1, r0, [sp, #16]
 8013718:	e9cd 2302 	strd	r2, r3, [sp, #8]
 801371c:	e9cd 4600 	strd	r4, r6, [sp]
 8013720:	462b      	mov	r3, r5
 8013722:	e9dd 1210 	ldrd	r1, r2, [sp, #64]	; 0x40
 8013726:	9815      	ldr	r0, [sp, #84]	; 0x54
 8013728:	f7ff fc6c 	bl	8013004 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>
 801372c:	e77a      	b.n	8013624 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x36c>
 801372e:	bf00      	nop
 8013730:	fffff800 	.word	0xfffff800
 8013734:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8013736:	9929      	ldr	r1, [sp, #164]	; 0xa4
 8013738:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801373c:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801373e:	1409      	asrs	r1, r1, #16
 8013740:	f3c3 3003 	ubfx	r0, r3, #12, #4
 8013744:	141b      	asrs	r3, r3, #16
 8013746:	fb04 1303 	mla	r3, r4, r3, r1
 801374a:	9911      	ldr	r1, [sp, #68]	; 0x44
 801374c:	18ce      	adds	r6, r1, r3
 801374e:	5ccb      	ldrb	r3, [r1, r3]
 8013750:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 8013754:	0e1f      	lsrs	r7, r3, #24
 8013756:	2a00      	cmp	r2, #0
 8013758:	f000 811f 	beq.w	801399a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6e2>
 801375c:	7871      	ldrb	r1, [r6, #1]
 801375e:	f855 1021 	ldr.w	r1, [r5, r1, lsl #2]
 8013762:	910d      	str	r1, [sp, #52]	; 0x34
 8013764:	ea4f 6e11 	mov.w	lr, r1, lsr #24
 8013768:	2800      	cmp	r0, #0
 801376a:	f000 8120 	beq.w	80139ae <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6f6>
 801376e:	1931      	adds	r1, r6, r4
 8013770:	5d36      	ldrb	r6, [r6, r4]
 8013772:	7849      	ldrb	r1, [r1, #1]
 8013774:	f855 6026 	ldr.w	r6, [r5, r6, lsl #2]
 8013778:	f855 1021 	ldr.w	r1, [r5, r1, lsl #2]
 801377c:	9609      	str	r6, [sp, #36]	; 0x24
 801377e:	ea4f 6916 	mov.w	r9, r6, lsr #24
 8013782:	910e      	str	r1, [sp, #56]	; 0x38
 8013784:	0e0e      	lsrs	r6, r1, #24
 8013786:	b292      	uxth	r2, r2
 8013788:	b280      	uxth	r0, r0
 801378a:	fb02 fa00 	mul.w	sl, r2, r0
 801378e:	ebca 1000 	rsb	r0, sl, r0, lsl #4
 8013792:	0112      	lsls	r2, r2, #4
 8013794:	eba2 080a 	sub.w	r8, r2, sl
 8013798:	b280      	uxth	r0, r0
 801379a:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 801379e:	fa1f f888 	uxth.w	r8, r8
 80137a2:	1a09      	subs	r1, r1, r0
 80137a4:	b289      	uxth	r1, r1
 80137a6:	fb08 f20e 	mul.w	r2, r8, lr
 80137aa:	fb01 2207 	mla	r2, r1, r7, r2
 80137ae:	fb00 2209 	mla	r2, r0, r9, r2
 80137b2:	fb0a 2206 	mla	r2, sl, r6, r2
 80137b6:	f3c2 2207 	ubfx	r2, r2, #8, #8
 80137ba:	9213      	str	r2, [sp, #76]	; 0x4c
 80137bc:	2a00      	cmp	r2, #0
 80137be:	f000 80de 	beq.w	801397e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6c6>
 80137c2:	2fff      	cmp	r7, #255	; 0xff
 80137c4:	d01a      	beq.n	80137fc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x544>
 80137c6:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 80137ca:	fb07 fc0c 	mul.w	ip, r7, ip
 80137ce:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80137d2:	435f      	muls	r7, r3
 80137d4:	ea4f 231c 	mov.w	r3, ip, lsr #8
 80137d8:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80137dc:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 80137e0:	4463      	add	r3, ip
 80137e2:	f507 7c80 	add.w	ip, r7, #256	; 0x100
 80137e6:	eb0c 2c17 	add.w	ip, ip, r7, lsr #8
 80137ea:	0a1b      	lsrs	r3, r3, #8
 80137ec:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80137f0:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80137f4:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 80137f8:	ea43 030c 	orr.w	r3, r3, ip
 80137fc:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 8013800:	d01f      	beq.n	8013842 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x58a>
 8013802:	9f0d      	ldr	r7, [sp, #52]	; 0x34
 8013804:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8013806:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 801380a:	fb0e f707 	mul.w	r7, lr, r7
 801380e:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 8013812:	fb0e fe0c 	mul.w	lr, lr, ip
 8013816:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801381a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801381e:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8013822:	44bc      	add	ip, r7
 8013824:	f50e 7780 	add.w	r7, lr, #256	; 0x100
 8013828:	eb07 2e1e 	add.w	lr, r7, lr, lsr #8
 801382c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8013830:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8013834:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8013838:	f40e 4e7f 	and.w	lr, lr, #65280	; 0xff00
 801383c:	ea4c 020e 	orr.w	r2, ip, lr
 8013840:	920d      	str	r2, [sp, #52]	; 0x34
 8013842:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8013846:	d01e      	beq.n	8013886 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x5ce>
 8013848:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801384a:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
 801384e:	fb09 fe0e 	mul.w	lr, r9, lr
 8013852:	f402 477f 	and.w	r7, r2, #65280	; 0xff00
 8013856:	fb09 f907 	mul.w	r9, r9, r7
 801385a:	ea4f 2c1e 	mov.w	ip, lr, lsr #8
 801385e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8013862:	f10e 1e01 	add.w	lr, lr, #65537	; 0x10001
 8013866:	f509 7780 	add.w	r7, r9, #256	; 0x100
 801386a:	44f4      	add	ip, lr
 801386c:	eb07 2919 	add.w	r9, r7, r9, lsr #8
 8013870:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8013874:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8013878:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801387c:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 8013880:	ea4c 0209 	orr.w	r2, ip, r9
 8013884:	9209      	str	r2, [sp, #36]	; 0x24
 8013886:	2eff      	cmp	r6, #255	; 0xff
 8013888:	d01c      	beq.n	80138c4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x60c>
 801388a:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801388c:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
 8013890:	fb06 fe0e 	mul.w	lr, r6, lr
 8013894:	f402 477f 	and.w	r7, r2, #65280	; 0xff00
 8013898:	437e      	muls	r6, r7
 801389a:	ea4f 2c1e 	mov.w	ip, lr, lsr #8
 801389e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80138a2:	f10e 1e01 	add.w	lr, lr, #65537	; 0x10001
 80138a6:	f506 7780 	add.w	r7, r6, #256	; 0x100
 80138aa:	44f4      	add	ip, lr
 80138ac:	eb07 2616 	add.w	r6, r7, r6, lsr #8
 80138b0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80138b4:	0a36      	lsrs	r6, r6, #8
 80138b6:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80138ba:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 80138be:	ea4c 0206 	orr.w	r2, ip, r6
 80138c2:	920e      	str	r2, [sp, #56]	; 0x38
 80138c4:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 80138c6:	f002 16ff 	and.w	r6, r2, #16711935	; 0xff00ff
 80138ca:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80138cc:	f003 17ff 	and.w	r7, r3, #16711935	; 0xff00ff
 80138d0:	fb08 f606 	mul.w	r6, r8, r6
 80138d4:	fb01 6607 	mla	r6, r1, r7, r6
 80138d8:	f002 17ff 	and.w	r7, r2, #16711935	; 0xff00ff
 80138dc:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 80138de:	fb00 6607 	mla	r6, r0, r7, r6
 80138e2:	f002 17ff 	and.w	r7, r2, #16711935	; 0xff00ff
 80138e6:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 80138e8:	fb0a 6607 	mla	r6, sl, r7, r6
 80138ec:	f402 477f 	and.w	r7, r2, #65280	; 0xff00
 80138f0:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80138f2:	fb08 f807 	mul.w	r8, r8, r7
 80138f6:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 80138fa:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80138fe:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8013900:	fb01 8303 	mla	r3, r1, r3, r8
 8013904:	fb00 330c 	mla	r3, r0, ip, r3
 8013908:	f402 4e7f 	and.w	lr, r2, #65280	; 0xff00
 801390c:	fb0a 3e0e 	mla	lr, sl, lr, r3
 8013910:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8013912:	f8bb 3000 	ldrh.w	r3, [fp]
 8013916:	43d2      	mvns	r2, r2
 8013918:	1218      	asrs	r0, r3, #8
 801391a:	b2d2      	uxtb	r2, r2
 801391c:	0a36      	lsrs	r6, r6, #8
 801391e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8013922:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8013926:	4350      	muls	r0, r2
 8013928:	10d9      	asrs	r1, r3, #3
 801392a:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 801392e:	f40e 4e7f 	and.w	lr, lr, #65280	; 0xff00
 8013932:	00db      	lsls	r3, r3, #3
 8013934:	ea46 060e 	orr.w	r6, r6, lr
 8013938:	1c47      	adds	r7, r0, #1
 801393a:	b2db      	uxtb	r3, r3
 801393c:	4353      	muls	r3, r2
 801393e:	eb07 2010 	add.w	r0, r7, r0, lsr #8
 8013942:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8013946:	0c37      	lsrs	r7, r6, #16
 8013948:	4351      	muls	r1, r2
 801394a:	eb07 2010 	add.w	r0, r7, r0, lsr #8
 801394e:	4a1d      	ldr	r2, [pc, #116]	; (80139c4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x70c>)
 8013950:	1c5f      	adds	r7, r3, #1
 8013952:	eb07 2313 	add.w	r3, r7, r3, lsr #8
 8013956:	b2f7      	uxtb	r7, r6
 8013958:	eb07 2313 	add.w	r3, r7, r3, lsr #8
 801395c:	ea02 2000 	and.w	r0, r2, r0, lsl #8
 8013960:	ea40 00d3 	orr.w	r0, r0, r3, lsr #3
 8013964:	1c4b      	adds	r3, r1, #1
 8013966:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 801396a:	f3c6 2607 	ubfx	r6, r6, #8, #8
 801396e:	eb06 2611 	add.w	r6, r6, r1, lsr #8
 8013972:	00f6      	lsls	r6, r6, #3
 8013974:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8013978:	4330      	orrs	r0, r6
 801397a:	f8ab 0000 	strh.w	r0, [fp]
 801397e:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8013980:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 8013982:	4413      	add	r3, r2
 8013984:	9329      	str	r3, [sp, #164]	; 0xa4
 8013986:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 8013988:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801398a:	4413      	add	r3, r2
 801398c:	932a      	str	r3, [sp, #168]	; 0xa8
 801398e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8013990:	3b01      	subs	r3, #1
 8013992:	f10b 0b02 	add.w	fp, fp, #2
 8013996:	9310      	str	r3, [sp, #64]	; 0x40
 8013998:	e4ee      	b.n	8013378 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xc0>
 801399a:	b158      	cbz	r0, 80139b4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6fc>
 801399c:	5d31      	ldrb	r1, [r6, r4]
 801399e:	f855 1021 	ldr.w	r1, [r5, r1, lsl #2]
 80139a2:	9109      	str	r1, [sp, #36]	; 0x24
 80139a4:	ea4f 6911 	mov.w	r9, r1, lsr #24
 80139a8:	26ff      	movs	r6, #255	; 0xff
 80139aa:	46b6      	mov	lr, r6
 80139ac:	e6eb      	b.n	8013786 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4ce>
 80139ae:	26ff      	movs	r6, #255	; 0xff
 80139b0:	46b1      	mov	r9, r6
 80139b2:	e6e8      	b.n	8013786 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4ce>
 80139b4:	26ff      	movs	r6, #255	; 0xff
 80139b6:	46b1      	mov	r9, r6
 80139b8:	e7f7      	b.n	80139aa <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6f2>
 80139ba:	b017      	add	sp, #92	; 0x5c
 80139bc:	ecbd 8b08 	vpop	{d8-d11}
 80139c0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80139c4:	fffff800 	.word	0xfffff800

080139c8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>:
 80139c8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80139cc:	b087      	sub	sp, #28
 80139ce:	e9dd e012 	ldrd	lr, r0, [sp, #72]	; 0x48
 80139d2:	f9bd 4040 	ldrsh.w	r4, [sp, #64]	; 0x40
 80139d6:	9105      	str	r1, [sp, #20]
 80139d8:	fb00 e604 	mla	r6, r0, r4, lr
 80139dc:	f89d 1054 	ldrb.w	r1, [sp, #84]	; 0x54
 80139e0:	9102      	str	r1, [sp, #8]
 80139e2:	eb02 0146 	add.w	r1, r2, r6, lsl #1
 80139e6:	9103      	str	r1, [sp, #12]
 80139e8:	9905      	ldr	r1, [sp, #20]
 80139ea:	f9bd 7044 	ldrsh.w	r7, [sp, #68]	; 0x44
 80139ee:	f89d 5050 	ldrb.w	r5, [sp, #80]	; 0x50
 80139f2:	8809      	ldrh	r1, [r1, #0]
 80139f4:	2800      	cmp	r0, #0
 80139f6:	eb03 0a06 	add.w	sl, r3, r6
 80139fa:	f2c0 80ca 	blt.w	8013b92 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1ca>
 80139fe:	4287      	cmp	r7, r0
 8013a00:	f340 80c7 	ble.w	8013b92 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1ca>
 8013a04:	f1be 0f00 	cmp.w	lr, #0
 8013a08:	f2c0 80bf 	blt.w	8013b8a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1c2>
 8013a0c:	4574      	cmp	r4, lr
 8013a0e:	f340 80bc 	ble.w	8013b8a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1c2>
 8013a12:	f813 c006 	ldrb.w	ip, [r3, r6]
 8013a16:	f832 9016 	ldrh.w	r9, [r2, r6, lsl #1]
 8013a1a:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8013a1e:	d01c      	beq.n	8013a5a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x92>
 8013a20:	f429 66fc 	bic.w	r6, r9, #2016	; 0x7e0
 8013a24:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8013a28:	4372      	muls	r2, r6
 8013a2a:	f64f 081f 	movw	r8, #63519	; 0xf81f
 8013a2e:	ea08 1352 	and.w	r3, r8, r2, lsr #5
 8013a32:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8013a36:	f602 0201 	addw	r2, r2, #2049	; 0x801
 8013a3a:	fb0c f609 	mul.w	r6, ip, r9
 8013a3e:	eb03 0902 	add.w	r9, r3, r2
 8013a42:	ea08 1959 	and.w	r9, r8, r9, lsr #5
 8013a46:	f106 0820 	add.w	r8, r6, #32
 8013a4a:	eb08 2816 	add.w	r8, r8, r6, lsr #8
 8013a4e:	ea4f 2818 	mov.w	r8, r8, lsr #8
 8013a52:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 8013a56:	ea49 0908 	orr.w	r9, r9, r8
 8013a5a:	fa1f f989 	uxth.w	r9, r9
 8013a5e:	f11e 0301 	adds.w	r3, lr, #1
 8013a62:	f100 809b 	bmi.w	8013b9c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1d4>
 8013a66:	429c      	cmp	r4, r3
 8013a68:	f340 8098 	ble.w	8013b9c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1d4>
 8013a6c:	2d00      	cmp	r5, #0
 8013a6e:	f000 8095 	beq.w	8013b9c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1d4>
 8013a72:	f89a 6001 	ldrb.w	r6, [sl, #1]
 8013a76:	9b03      	ldr	r3, [sp, #12]
 8013a78:	2eff      	cmp	r6, #255	; 0xff
 8013a7a:	885b      	ldrh	r3, [r3, #2]
 8013a7c:	d01b      	beq.n	8013ab6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xee>
 8013a7e:	f423 62fc 	bic.w	r2, r3, #2016	; 0x7e0
 8013a82:	ea4f 08e6 	mov.w	r8, r6, asr #3
 8013a86:	fb08 f202 	mul.w	r2, r8, r2
 8013a8a:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8013a8e:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 8013a92:	fb06 f803 	mul.w	r8, r6, r3
 8013a96:	ea0b 1352 	and.w	r3, fp, r2, lsr #5
 8013a9a:	f602 0201 	addw	r2, r2, #2049	; 0x801
 8013a9e:	441a      	add	r2, r3
 8013aa0:	f108 0320 	add.w	r3, r8, #32
 8013aa4:	eb03 2318 	add.w	r3, r3, r8, lsr #8
 8013aa8:	0a1b      	lsrs	r3, r3, #8
 8013aaa:	ea0b 1b52 	and.w	fp, fp, r2, lsr #5
 8013aae:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8013ab2:	ea4b 0303 	orr.w	r3, fp, r3
 8013ab6:	b29b      	uxth	r3, r3
 8013ab8:	9301      	str	r3, [sp, #4]
 8013aba:	3001      	adds	r0, #1
 8013abc:	d474      	bmi.n	8013ba8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1e0>
 8013abe:	4287      	cmp	r7, r0
 8013ac0:	dd72      	ble.n	8013ba8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1e0>
 8013ac2:	9a02      	ldr	r2, [sp, #8]
 8013ac4:	2a00      	cmp	r2, #0
 8013ac6:	f000 8121 	beq.w	8013d0c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x344>
 8013aca:	f1be 0f00 	cmp.w	lr, #0
 8013ace:	db68      	blt.n	8013ba2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1da>
 8013ad0:	4574      	cmp	r4, lr
 8013ad2:	dd66      	ble.n	8013ba2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1da>
 8013ad4:	f81a 7004 	ldrb.w	r7, [sl, r4]
 8013ad8:	9a03      	ldr	r2, [sp, #12]
 8013ada:	2fff      	cmp	r7, #255	; 0xff
 8013adc:	f832 0014 	ldrh.w	r0, [r2, r4, lsl #1]
 8013ae0:	d01c      	beq.n	8013b1c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x154>
 8013ae2:	f420 62fc 	bic.w	r2, r0, #2016	; 0x7e0
 8013ae6:	ea4f 08e7 	mov.w	r8, r7, asr #3
 8013aea:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8013aee:	fb07 fb00 	mul.w	fp, r7, r0
 8013af2:	fb08 f802 	mul.w	r8, r8, r2
 8013af6:	f64f 001f 	movw	r0, #63519	; 0xf81f
 8013afa:	ea00 1258 	and.w	r2, r0, r8, lsr #5
 8013afe:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8013b02:	4490      	add	r8, r2
 8013b04:	f10b 0220 	add.w	r2, fp, #32
 8013b08:	eb02 2b1b 	add.w	fp, r2, fp, lsr #8
 8013b0c:	ea4f 2b1b 	mov.w	fp, fp, lsr #8
 8013b10:	ea00 1058 	and.w	r0, r0, r8, lsr #5
 8013b14:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 8013b18:	ea40 000b 	orr.w	r0, r0, fp
 8013b1c:	b280      	uxth	r0, r0
 8013b1e:	f11e 0e01 	adds.w	lr, lr, #1
 8013b22:	d446      	bmi.n	8013bb2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1ea>
 8013b24:	4574      	cmp	r4, lr
 8013b26:	dd44      	ble.n	8013bb2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1ea>
 8013b28:	2d00      	cmp	r5, #0
 8013b2a:	d045      	beq.n	8013bb8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1f0>
 8013b2c:	1c62      	adds	r2, r4, #1
 8013b2e:	9b03      	ldr	r3, [sp, #12]
 8013b30:	f81a 4002 	ldrb.w	r4, [sl, r2]
 8013b34:	f833 2012 	ldrh.w	r2, [r3, r2, lsl #1]
 8013b38:	2cff      	cmp	r4, #255	; 0xff
 8013b3a:	d01c      	beq.n	8013b76 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1ae>
 8013b3c:	f422 6efc 	bic.w	lr, r2, #2016	; 0x7e0
 8013b40:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8013b44:	fb08 fe0e 	mul.w	lr, r8, lr
 8013b48:	f64f 0a1f 	movw	sl, #63519	; 0xf81f
 8013b4c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8013b50:	fb04 f802 	mul.w	r8, r4, r2
 8013b54:	ea0a 125e 	and.w	r2, sl, lr, lsr #5
 8013b58:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 8013b5c:	4472      	add	r2, lr
 8013b5e:	ea0a 1252 	and.w	r2, sl, r2, lsr #5
 8013b62:	f108 0a20 	add.w	sl, r8, #32
 8013b66:	eb0a 2a18 	add.w	sl, sl, r8, lsr #8
 8013b6a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8013b6e:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8013b72:	ea42 020a 	orr.w	r2, r2, sl
 8013b76:	b292      	uxth	r2, r2
 8013b78:	2d0f      	cmp	r5, #15
 8013b7a:	d91f      	bls.n	8013bbc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1f4>
 8013b7c:	4b67      	ldr	r3, [pc, #412]	; (8013d1c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x354>)
 8013b7e:	4a68      	ldr	r2, [pc, #416]	; (8013d20 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x358>)
 8013b80:	4868      	ldr	r0, [pc, #416]	; (8013d24 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x35c>)
 8013b82:	f240 210d 	movw	r1, #525	; 0x20d
 8013b86:	f004 f9e9 	bl	8017f5c <__assert_func>
 8013b8a:	4689      	mov	r9, r1
 8013b8c:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8013b90:	e765      	b.n	8013a5e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x96>
 8013b92:	26ff      	movs	r6, #255	; 0xff
 8013b94:	9101      	str	r1, [sp, #4]
 8013b96:	4689      	mov	r9, r1
 8013b98:	46b4      	mov	ip, r6
 8013b9a:	e78e      	b.n	8013aba <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xf2>
 8013b9c:	9101      	str	r1, [sp, #4]
 8013b9e:	26ff      	movs	r6, #255	; 0xff
 8013ba0:	e78b      	b.n	8013aba <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xf2>
 8013ba2:	4608      	mov	r0, r1
 8013ba4:	27ff      	movs	r7, #255	; 0xff
 8013ba6:	e7ba      	b.n	8013b1e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x156>
 8013ba8:	24ff      	movs	r4, #255	; 0xff
 8013baa:	460a      	mov	r2, r1
 8013bac:	4608      	mov	r0, r1
 8013bae:	4627      	mov	r7, r4
 8013bb0:	e7e2      	b.n	8013b78 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1b0>
 8013bb2:	460a      	mov	r2, r1
 8013bb4:	24ff      	movs	r4, #255	; 0xff
 8013bb6:	e7df      	b.n	8013b78 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1b0>
 8013bb8:	460a      	mov	r2, r1
 8013bba:	24ff      	movs	r4, #255	; 0xff
 8013bbc:	9b02      	ldr	r3, [sp, #8]
 8013bbe:	2b0f      	cmp	r3, #15
 8013bc0:	d8dc      	bhi.n	8013b7c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1b4>
 8013bc2:	f8bd e008 	ldrh.w	lr, [sp, #8]
 8013bc6:	fa1f f885 	uxth.w	r8, r5
 8013bca:	fb08 fa0e 	mul.w	sl, r8, lr
 8013bce:	ea4f 1308 	mov.w	r3, r8, lsl #4
 8013bd2:	ebca 1e0e 	rsb	lr, sl, lr, lsl #4
 8013bd6:	9303      	str	r3, [sp, #12]
 8013bd8:	fa1f f38e 	uxth.w	r3, lr
 8013bdc:	9304      	str	r3, [sp, #16]
 8013bde:	ea4f 4809 	mov.w	r8, r9, lsl #16
 8013be2:	9b02      	ldr	r3, [sp, #8]
 8013be4:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8013be8:	f008 68fc 	and.w	r8, r8, #132120576	; 0x7e00000
 8013bec:	fb15 fe03 	smulbb	lr, r5, r3
 8013bf0:	ea48 0809 	orr.w	r8, r8, r9
 8013bf4:	f1c3 0910 	rsb	r9, r3, #16
 8013bf8:	9b01      	ldr	r3, [sp, #4]
 8013bfa:	ea4f 4b03 	mov.w	fp, r3, lsl #16
 8013bfe:	ea4f 0eee 	mov.w	lr, lr, asr #3
 8013c02:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8013c06:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8013c0a:	eba9 0905 	sub.w	r9, r9, r5
 8013c0e:	ea4b 0303 	orr.w	r3, fp, r3
 8013c12:	ebce 0545 	rsb	r5, lr, r5, lsl #1
 8013c16:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 8013c1a:	eb0e 0949 	add.w	r9, lr, r9, lsl #1
 8013c1e:	436b      	muls	r3, r5
 8013c20:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8013c24:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8013c28:	ea4b 0202 	orr.w	r2, fp, r2
 8013c2c:	fb09 3308 	mla	r3, r9, r8, r3
 8013c30:	fb0e 3302 	mla	r3, lr, r2, r3
 8013c34:	0402      	lsls	r2, r0, #16
 8013c36:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8013c3a:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8013c3e:	4310      	orrs	r0, r2
 8013c40:	9a02      	ldr	r2, [sp, #8]
 8013c42:	ebce 0e42 	rsb	lr, lr, r2, lsl #1
 8013c46:	fb0e 3e00 	mla	lr, lr, r0, r3
 8013c4a:	9803      	ldr	r0, [sp, #12]
 8013c4c:	f89d 2058 	ldrb.w	r2, [sp, #88]	; 0x58
 8013c50:	f5c0 7580 	rsb	r5, r0, #256	; 0x100
 8013c54:	9804      	ldr	r0, [sp, #16]
 8013c56:	1a2d      	subs	r5, r5, r0
 8013c58:	9803      	ldr	r0, [sp, #12]
 8013c5a:	eba0 000a 	sub.w	r0, r0, sl
 8013c5e:	b280      	uxth	r0, r0
 8013c60:	b2ad      	uxth	r5, r5
 8013c62:	4346      	muls	r6, r0
 8013c64:	9804      	ldr	r0, [sp, #16]
 8013c66:	fb0c 6605 	mla	r6, ip, r5, r6
 8013c6a:	fb00 6707 	mla	r7, r0, r7, r6
 8013c6e:	fb0a 7404 	mla	r4, sl, r4, r7
 8013c72:	b292      	uxth	r2, r2
 8013c74:	f3c4 2407 	ubfx	r4, r4, #8, #8
 8013c78:	4354      	muls	r4, r2
 8013c7a:	ea4f 535e 	mov.w	r3, lr, lsr #21
 8013c7e:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8013c82:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8013c86:	f104 0a01 	add.w	sl, r4, #1
 8013c8a:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8013c8e:	ea43 0e0e 	orr.w	lr, r3, lr
 8013c92:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 8013c96:	fa1f f38e 	uxth.w	r3, lr
 8013c9a:	1208      	asrs	r0, r1, #8
 8013c9c:	ea6f 2414 	mvn.w	r4, r4, lsr #8
 8013ca0:	b2e4      	uxtb	r4, r4
 8013ca2:	121d      	asrs	r5, r3, #8
 8013ca4:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8013ca8:	fb10 f004 	smulbb	r0, r0, r4
 8013cac:	10ce      	asrs	r6, r1, #3
 8013cae:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8013cb2:	00c9      	lsls	r1, r1, #3
 8013cb4:	fb05 0502 	mla	r5, r5, r2, r0
 8013cb8:	b2c9      	uxtb	r1, r1
 8013cba:	10d8      	asrs	r0, r3, #3
 8013cbc:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8013cc0:	00db      	lsls	r3, r3, #3
 8013cc2:	fb16 f604 	smulbb	r6, r6, r4
 8013cc6:	b2db      	uxtb	r3, r3
 8013cc8:	fb11 f404 	smulbb	r4, r1, r4
 8013ccc:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8013cd0:	fb00 6002 	mla	r0, r0, r2, r6
 8013cd4:	fb03 4202 	mla	r2, r3, r2, r4
 8013cd8:	b2ad      	uxth	r5, r5
 8013cda:	b292      	uxth	r2, r2
 8013cdc:	1c6b      	adds	r3, r5, #1
 8013cde:	1c51      	adds	r1, r2, #1
 8013ce0:	eb03 2315 	add.w	r3, r3, r5, lsr #8
 8013ce4:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8013ce8:	b280      	uxth	r0, r0
 8013cea:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8013cee:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 8013cf2:	4313      	orrs	r3, r2
 8013cf4:	1c42      	adds	r2, r0, #1
 8013cf6:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8013cfa:	0940      	lsrs	r0, r0, #5
 8013cfc:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8013d00:	9a05      	ldr	r2, [sp, #20]
 8013d02:	4303      	orrs	r3, r0
 8013d04:	8013      	strh	r3, [r2, #0]
 8013d06:	b007      	add	sp, #28
 8013d08:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013d0c:	2d0f      	cmp	r5, #15
 8013d0e:	f63f af35 	bhi.w	8013b7c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1b4>
 8013d12:	24ff      	movs	r4, #255	; 0xff
 8013d14:	460a      	mov	r2, r1
 8013d16:	4608      	mov	r0, r1
 8013d18:	4627      	mov	r7, r4
 8013d1a:	e752      	b.n	8013bc2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1fa>
 8013d1c:	0801bc7d 	.word	0x0801bc7d
 8013d20:	0801c1d5 	.word	0x0801c1d5
 8013d24:	0801bd05 	.word	0x0801bd05

08013d28 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 8013d28:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013d2c:	ed2d 8b08 	vpush	{d8-d11}
 8013d30:	b099      	sub	sp, #100	; 0x64
 8013d32:	eeb0 aa40 	vmov.f32	s20, s0
 8013d36:	9308      	str	r3, [sp, #32]
 8013d38:	f9bd 30cc 	ldrsh.w	r3, [sp, #204]	; 0xcc
 8013d3c:	9e2f      	ldr	r6, [sp, #188]	; 0xbc
 8013d3e:	930b      	str	r3, [sp, #44]	; 0x2c
 8013d40:	f89d 30d4 	ldrb.w	r3, [sp, #212]	; 0xd4
 8013d44:	9314      	str	r3, [sp, #80]	; 0x50
 8013d46:	9113      	str	r1, [sp, #76]	; 0x4c
 8013d48:	e9dd 1330 	ldrd	r1, r3, [sp, #192]	; 0xc0
 8013d4c:	9017      	str	r0, [sp, #92]	; 0x5c
 8013d4e:	6870      	ldr	r0, [r6, #4]
 8013d50:	9216      	str	r2, [sp, #88]	; 0x58
 8013d52:	fb00 1303 	mla	r3, r0, r3, r1
 8013d56:	6831      	ldr	r1, [r6, #0]
 8013d58:	9a34      	ldr	r2, [sp, #208]	; 0xd0
 8013d5a:	f9bd 50c8 	ldrsh.w	r5, [sp, #200]	; 0xc8
 8013d5e:	eb01 0343 	add.w	r3, r1, r3, lsl #1
 8013d62:	9309      	str	r3, [sp, #36]	; 0x24
 8013d64:	6813      	ldr	r3, [r2, #0]
 8013d66:	930c      	str	r3, [sp, #48]	; 0x30
 8013d68:	6853      	ldr	r3, [r2, #4]
 8013d6a:	930d      	str	r3, [sp, #52]	; 0x34
 8013d6c:	006b      	lsls	r3, r5, #1
 8013d6e:	9312      	str	r3, [sp, #72]	; 0x48
 8013d70:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 8013d74:	930a      	str	r3, [sp, #40]	; 0x28
 8013d76:	eef0 9a60 	vmov.f32	s19, s1
 8013d7a:	eeb0 9a41 	vmov.f32	s18, s2
 8013d7e:	eeb0 8a62 	vmov.f32	s16, s5
 8013d82:	eef0 8a43 	vmov.f32	s17, s6
 8013d86:	eef0 ba44 	vmov.f32	s23, s8
 8013d8a:	eeb0 ba64 	vmov.f32	s22, s9
 8013d8e:	eef0 aa45 	vmov.f32	s21, s10
 8013d92:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8013d94:	2b00      	cmp	r3, #0
 8013d96:	dc03      	bgt.n	8013da0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x78>
 8013d98:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8013d9a:	2b00      	cmp	r3, #0
 8013d9c:	f340 83bf 	ble.w	801451e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7f6>
 8013da0:	9b08      	ldr	r3, [sp, #32]
 8013da2:	2b00      	cmp	r3, #0
 8013da4:	f340 81cb 	ble.w	801413e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x416>
 8013da8:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 8013daa:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8013dac:	1412      	asrs	r2, r2, #16
 8013dae:	ea4f 4323 	mov.w	r3, r3, asr #16
 8013db2:	d42f      	bmi.n	8013e14 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xec>
 8013db4:	1c51      	adds	r1, r2, #1
 8013db6:	428d      	cmp	r5, r1
 8013db8:	dd2f      	ble.n	8013e1a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf2>
 8013dba:	2b00      	cmp	r3, #0
 8013dbc:	db2d      	blt.n	8013e1a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf2>
 8013dbe:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8013dc0:	1c59      	adds	r1, r3, #1
 8013dc2:	4288      	cmp	r0, r1
 8013dc4:	dd29      	ble.n	8013e1a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf2>
 8013dc6:	9b08      	ldr	r3, [sp, #32]
 8013dc8:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 8013dca:	992b      	ldr	r1, [sp, #172]	; 0xac
 8013dcc:	3b01      	subs	r3, #1
 8013dce:	fb02 1203 	mla	r2, r2, r3, r1
 8013dd2:	1412      	asrs	r2, r2, #16
 8013dd4:	d42b      	bmi.n	8013e2e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x106>
 8013dd6:	3201      	adds	r2, #1
 8013dd8:	4295      	cmp	r5, r2
 8013dda:	dd28      	ble.n	8013e2e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x106>
 8013ddc:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
 8013dde:	992c      	ldr	r1, [sp, #176]	; 0xb0
 8013de0:	fb02 1303 	mla	r3, r2, r3, r1
 8013de4:	141b      	asrs	r3, r3, #16
 8013de6:	d422      	bmi.n	8013e2e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x106>
 8013de8:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8013dea:	3301      	adds	r3, #1
 8013dec:	429a      	cmp	r2, r3
 8013dee:	dd1e      	ble.n	8013e2e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x106>
 8013df0:	9b08      	ldr	r3, [sp, #32]
 8013df2:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
 8013df6:	9315      	str	r3, [sp, #84]	; 0x54
 8013df8:	f64f 061f 	movw	r6, #63519	; 0xf81f
 8013dfc:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8013dfe:	2b00      	cmp	r3, #0
 8013e00:	f300 8217 	bgt.w	8014232 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x50a>
 8013e04:	9b08      	ldr	r3, [sp, #32]
 8013e06:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8013e0a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8013e0c:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 8013e10:	9309      	str	r3, [sp, #36]	; 0x24
 8013e12:	e196      	b.n	8014142 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x41a>
 8013e14:	1c57      	adds	r7, r2, #1
 8013e16:	f040 8183 	bne.w	8014120 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3f8>
 8013e1a:	42aa      	cmp	r2, r5
 8013e1c:	f280 8180 	bge.w	8014120 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3f8>
 8013e20:	1c5e      	adds	r6, r3, #1
 8013e22:	f2c0 817d 	blt.w	8014120 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3f8>
 8013e26:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8013e28:	4293      	cmp	r3, r2
 8013e2a:	f280 8179 	bge.w	8014120 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3f8>
 8013e2e:	9b08      	ldr	r3, [sp, #32]
 8013e30:	9f09      	ldr	r7, [sp, #36]	; 0x24
 8013e32:	9315      	str	r3, [sp, #84]	; 0x54
 8013e34:	f64f 061f 	movw	r6, #63519	; 0xf81f
 8013e38:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8013e3a:	2b00      	cmp	r3, #0
 8013e3c:	dde2      	ble.n	8013e04 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xdc>
 8013e3e:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8013e40:	1419      	asrs	r1, r3, #16
 8013e42:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8013e44:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8013e48:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8013e4a:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 8013e4e:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8013e50:	141b      	asrs	r3, r3, #16
 8013e52:	f100 81d3 	bmi.w	80141fc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4d4>
 8013e56:	1c58      	adds	r0, r3, #1
 8013e58:	4285      	cmp	r5, r0
 8013e5a:	f340 81d1 	ble.w	8014200 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4d8>
 8013e5e:	2900      	cmp	r1, #0
 8013e60:	f2c0 81ce 	blt.w	8014200 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4d8>
 8013e64:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8013e66:	1c48      	adds	r0, r1, #1
 8013e68:	4284      	cmp	r4, r0
 8013e6a:	f340 81c9 	ble.w	8014200 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4d8>
 8013e6e:	fb01 3105 	mla	r1, r1, r5, r3
 8013e72:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8013e74:	fa1f fe82 	uxth.w	lr, r2
 8013e78:	eb03 0a01 	add.w	sl, r3, r1
 8013e7c:	ea4f 100e 	mov.w	r0, lr, lsl #4
 8013e80:	f813 9001 	ldrb.w	r9, [r3, r1]
 8013e84:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8013e88:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 8013e8c:	b29b      	uxth	r3, r3
 8013e8e:	f1bc 0f00 	cmp.w	ip, #0
 8013e92:	f000 8195 	beq.w	80141c0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x498>
 8013e96:	f81a 4005 	ldrb.w	r4, [sl, r5]
 8013e9a:	940e      	str	r4, [sp, #56]	; 0x38
 8013e9c:	eb0a 0b05 	add.w	fp, sl, r5
 8013ea0:	fa1f fa8c 	uxth.w	sl, ip
 8013ea4:	fb0a fe0e 	mul.w	lr, sl, lr
 8013ea8:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 8013eac:	fa1f fa8a 	uxth.w	sl, sl
 8013eb0:	eba0 000e 	sub.w	r0, r0, lr
 8013eb4:	eba3 030a 	sub.w	r3, r3, sl
 8013eb8:	b280      	uxth	r0, r0
 8013eba:	fb08 f000 	mul.w	r0, r8, r0
 8013ebe:	b29b      	uxth	r3, r3
 8013ec0:	fb09 0303 	mla	r3, r9, r3, r0
 8013ec4:	980e      	ldr	r0, [sp, #56]	; 0x38
 8013ec6:	f89b 4001 	ldrb.w	r4, [fp, #1]
 8013eca:	940f      	str	r4, [sp, #60]	; 0x3c
 8013ecc:	fb0a 3300 	mla	r3, sl, r0, r3
 8013ed0:	fb0e 3304 	mla	r3, lr, r4, r3
 8013ed4:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8013ed8:	2b00      	cmp	r3, #0
 8013eda:	f000 8114 	beq.w	8014106 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3de>
 8013ede:	980c      	ldr	r0, [sp, #48]	; 0x30
 8013ee0:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8013ee2:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8013ee6:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 8013eea:	f834 1011 	ldrh.w	r1, [r4, r1, lsl #1]
 8013eee:	f000 816c 	beq.w	80141ca <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4a2>
 8013ef2:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 8013ef6:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 8013efa:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8013efe:	fb09 f101 	mul.w	r1, r9, r1
 8013f02:	fb0a fe0e 	mul.w	lr, sl, lr
 8013f06:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 8013f0a:	f101 0b20 	add.w	fp, r1, #32
 8013f0e:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 8013f12:	44ce      	add	lr, r9
 8013f14:	eb0b 2911 	add.w	r9, fp, r1, lsr #8
 8013f18:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8013f1c:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 8013f20:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8013f24:	ea4e 0909 	orr.w	r9, lr, r9
 8013f28:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8013f2c:	8841      	ldrh	r1, [r0, #2]
 8013f2e:	d019      	beq.n	8013f64 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x23c>
 8013f30:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 8013f34:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 8013f38:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8013f3c:	fb0a fe0e 	mul.w	lr, sl, lr
 8013f40:	fb08 f801 	mul.w	r8, r8, r1
 8013f44:	f108 0b20 	add.w	fp, r8, #32
 8013f48:	ea06 115e 	and.w	r1, r6, lr, lsr #5
 8013f4c:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 8013f50:	448e      	add	lr, r1
 8013f52:	eb0b 2118 	add.w	r1, fp, r8, lsr #8
 8013f56:	0a09      	lsrs	r1, r1, #8
 8013f58:	ea06 1a5e 	and.w	sl, r6, lr, lsr #5
 8013f5c:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8013f60:	ea4a 0101 	orr.w	r1, sl, r1
 8013f64:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 8013f68:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8013f6c:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8013f70:	ea4e 0909 	orr.w	r9, lr, r9
 8013f74:	ea4f 4e01 	mov.w	lr, r1, lsl #16
 8013f78:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8013f7c:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8013f80:	ea4e 0e01 	orr.w	lr, lr, r1
 8013f84:	f1bc 0f00 	cmp.w	ip, #0
 8013f88:	f000 8121 	beq.w	80141ce <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4a6>
 8013f8c:	9912      	ldr	r1, [sp, #72]	; 0x48
 8013f8e:	eb00 0801 	add.w	r8, r0, r1
 8013f92:	5a41      	ldrh	r1, [r0, r1]
 8013f94:	980e      	ldr	r0, [sp, #56]	; 0x38
 8013f96:	28ff      	cmp	r0, #255	; 0xff
 8013f98:	d019      	beq.n	8013fce <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2a6>
 8013f9a:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8013f9c:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
 8013fa0:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8013fa4:	fb04 fb01 	mul.w	fp, r4, r1
 8013fa8:	ea4f 0ae4 	mov.w	sl, r4, asr #3
 8013fac:	fb0a fa00 	mul.w	sl, sl, r0
 8013fb0:	f10b 0020 	add.w	r0, fp, #32
 8013fb4:	ea06 115a 	and.w	r1, r6, sl, lsr #5
 8013fb8:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 8013fbc:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 8013fc0:	4451      	add	r1, sl
 8013fc2:	0a00      	lsrs	r0, r0, #8
 8013fc4:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 8013fc8:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8013fcc:	4301      	orrs	r1, r0
 8013fce:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8013fd0:	f8b8 0002 	ldrh.w	r0, [r8, #2]
 8013fd4:	2cff      	cmp	r4, #255	; 0xff
 8013fd6:	d01a      	beq.n	801400e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2e6>
 8013fd8:	f420 68fc 	bic.w	r8, r0, #2016	; 0x7e0
 8013fdc:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8013fe0:	fb04 fb00 	mul.w	fp, r4, r0
 8013fe4:	ea4f 0ae4 	mov.w	sl, r4, asr #3
 8013fe8:	fb0a fa08 	mul.w	sl, sl, r8
 8013fec:	f10b 0820 	add.w	r8, fp, #32
 8013ff0:	ea06 105a 	and.w	r0, r6, sl, lsr #5
 8013ff4:	eb08 281b 	add.w	r8, r8, fp, lsr #8
 8013ff8:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 8013ffc:	4450      	add	r0, sl
 8013ffe:	ea4f 2818 	mov.w	r8, r8, lsr #8
 8014002:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 8014006:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 801400a:	ea40 0008 	orr.w	r0, r0, r8
 801400e:	fb1c f802 	smulbb	r8, ip, r2
 8014012:	ea4f 08e8 	mov.w	r8, r8, asr #3
 8014016:	f1cc 0a10 	rsb	sl, ip, #16
 801401a:	ebaa 0a02 	sub.w	sl, sl, r2
 801401e:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8014022:	ebc8 0242 	rsb	r2, r8, r2, lsl #1
 8014026:	eb08 0a4a 	add.w	sl, r8, sl, lsl #1
 801402a:	fb0e f202 	mul.w	r2, lr, r2
 801402e:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8014032:	ea4f 4e00 	mov.w	lr, r0, lsl #16
 8014036:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801403a:	ebc8 0c4c 	rsb	ip, r8, ip, lsl #1
 801403e:	fb09 220a 	mla	r2, r9, sl, r2
 8014042:	ea4b 0101 	orr.w	r1, fp, r1
 8014046:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 801404a:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801404e:	fb0c 2201 	mla	r2, ip, r1, r2
 8014052:	ea4e 0000 	orr.w	r0, lr, r0
 8014056:	fb08 2800 	mla	r8, r8, r0, r2
 801405a:	ea4f 5258 	mov.w	r2, r8, lsr #21
 801405e:	ea4f 1858 	mov.w	r8, r8, lsr #5
 8014062:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8014066:	f428 68fc 	bic.w	r8, r8, #2016	; 0x7e0
 801406a:	ea42 0808 	orr.w	r8, r2, r8
 801406e:	fa1f f288 	uxth.w	r2, r8
 8014072:	2bff      	cmp	r3, #255	; 0xff
 8014074:	d103      	bne.n	801407e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x356>
 8014076:	9914      	ldr	r1, [sp, #80]	; 0x50
 8014078:	29ff      	cmp	r1, #255	; 0xff
 801407a:	f000 80bd 	beq.w	80141f8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4d0>
 801407e:	990a      	ldr	r1, [sp, #40]	; 0x28
 8014080:	f8b7 c000 	ldrh.w	ip, [r7]
 8014084:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8014086:	434b      	muls	r3, r1
 8014088:	f103 0e01 	add.w	lr, r3, #1
 801408c:	eb0e 2323 	add.w	r3, lr, r3, asr #8
 8014090:	ea6f 2e23 	mvn.w	lr, r3, asr #8
 8014094:	ea4f 202c 	mov.w	r0, ip, asr #8
 8014098:	fa5f fe8e 	uxtb.w	lr, lr
 801409c:	1213      	asrs	r3, r2, #8
 801409e:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 80140a2:	fb10 f00e 	smulbb	r0, r0, lr
 80140a6:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 80140aa:	fb03 0301 	mla	r3, r3, r1, r0
 80140ae:	b298      	uxth	r0, r3
 80140b0:	ea4f 03ec 	mov.w	r3, ip, asr #3
 80140b4:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 80140b8:	10d1      	asrs	r1, r2, #3
 80140ba:	fa5f fc8c 	uxtb.w	ip, ip
 80140be:	00d2      	lsls	r2, r2, #3
 80140c0:	fb1c fc0e 	smulbb	ip, ip, lr
 80140c4:	b2d2      	uxtb	r2, r2
 80140c6:	fb02 c204 	mla	r2, r2, r4, ip
 80140ca:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 80140ce:	fb13 f30e 	smulbb	r3, r3, lr
 80140d2:	b292      	uxth	r2, r2
 80140d4:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 80140d8:	fb01 3104 	mla	r1, r1, r4, r3
 80140dc:	f102 0c01 	add.w	ip, r2, #1
 80140e0:	1c43      	adds	r3, r0, #1
 80140e2:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 80140e6:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 80140ea:	b289      	uxth	r1, r1
 80140ec:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 80140f0:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 80140f4:	4313      	orrs	r3, r2
 80140f6:	1c4a      	adds	r2, r1, #1
 80140f8:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 80140fc:	0949      	lsrs	r1, r1, #5
 80140fe:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8014102:	430b      	orrs	r3, r1
 8014104:	803b      	strh	r3, [r7, #0]
 8014106:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8014108:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 801410a:	4413      	add	r3, r2
 801410c:	932b      	str	r3, [sp, #172]	; 0xac
 801410e:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 8014110:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8014112:	441a      	add	r2, r3
 8014114:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8014116:	922c      	str	r2, [sp, #176]	; 0xb0
 8014118:	3b01      	subs	r3, #1
 801411a:	3702      	adds	r7, #2
 801411c:	9315      	str	r3, [sp, #84]	; 0x54
 801411e:	e68b      	b.n	8013e38 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x110>
 8014120:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8014122:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 8014124:	4413      	add	r3, r2
 8014126:	932b      	str	r3, [sp, #172]	; 0xac
 8014128:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 801412a:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 801412c:	441a      	add	r2, r3
 801412e:	9b08      	ldr	r3, [sp, #32]
 8014130:	922c      	str	r2, [sp, #176]	; 0xb0
 8014132:	3b01      	subs	r3, #1
 8014134:	9308      	str	r3, [sp, #32]
 8014136:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8014138:	3302      	adds	r3, #2
 801413a:	9309      	str	r3, [sp, #36]	; 0x24
 801413c:	e630      	b.n	8013da0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x78>
 801413e:	f47f ae42 	bne.w	8013dc6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9e>
 8014142:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8014144:	2b00      	cmp	r3, #0
 8014146:	f340 81ea 	ble.w	801451e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7f6>
 801414a:	ee3a aa2b 	vadd.f32	s20, s20, s23
 801414e:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8014152:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 8014156:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8014158:	ee79 9a8b 	vadd.f32	s19, s19, s22
 801415c:	ee39 9a2a 	vadd.f32	s18, s18, s21
 8014160:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8014164:	eef0 6a48 	vmov.f32	s13, s16
 8014168:	ee69 7a27 	vmul.f32	s15, s18, s15
 801416c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8014170:	ee37 8a48 	vsub.f32	s16, s14, s16
 8014174:	edcd 6a2b 	vstr	s13, [sp, #172]	; 0xac
 8014178:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 801417c:	eef0 6a68 	vmov.f32	s13, s17
 8014180:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8014184:	ee18 2a10 	vmov	r2, s16
 8014188:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 801418c:	fb92 f3f3 	sdiv	r3, r2, r3
 8014190:	ee18 2a90 	vmov	r2, s17
 8014194:	932d      	str	r3, [sp, #180]	; 0xb4
 8014196:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8014198:	fb92 f3f3 	sdiv	r3, r2, r3
 801419c:	932e      	str	r3, [sp, #184]	; 0xb8
 801419e:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 80141a0:	9a16      	ldr	r2, [sp, #88]	; 0x58
 80141a2:	3b01      	subs	r3, #1
 80141a4:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80141a8:	9313      	str	r3, [sp, #76]	; 0x4c
 80141aa:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80141ac:	edcd 6a2c 	vstr	s13, [sp, #176]	; 0xb0
 80141b0:	bf08      	it	eq
 80141b2:	4613      	moveq	r3, r2
 80141b4:	9308      	str	r3, [sp, #32]
 80141b6:	eef0 8a67 	vmov.f32	s17, s15
 80141ba:	eeb0 8a47 	vmov.f32	s16, s14
 80141be:	e5e8      	b.n	8013d92 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6a>
 80141c0:	fb08 f000 	mul.w	r0, r8, r0
 80141c4:	fb09 0303 	mla	r3, r9, r3, r0
 80141c8:	e684      	b.n	8013ed4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1ac>
 80141ca:	4689      	mov	r9, r1
 80141cc:	e6ac      	b.n	8013f28 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x200>
 80141ce:	f1c2 0010 	rsb	r0, r2, #16
 80141d2:	fb0e f202 	mul.w	r2, lr, r2
 80141d6:	fb09 2900 	mla	r9, r9, r0, r2
 80141da:	ea4f 0949 	mov.w	r9, r9, lsl #1
 80141de:	ea4f 5259 	mov.w	r2, r9, lsr #21
 80141e2:	ea4f 1959 	mov.w	r9, r9, lsr #5
 80141e6:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80141ea:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 80141ee:	ea42 0909 	orr.w	r9, r2, r9
 80141f2:	fa1f f289 	uxth.w	r2, r9
 80141f6:	e73c      	b.n	8014072 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x34a>
 80141f8:	803a      	strh	r2, [r7, #0]
 80141fa:	e784      	b.n	8014106 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3de>
 80141fc:	1c5c      	adds	r4, r3, #1
 80141fe:	d182      	bne.n	8014106 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3de>
 8014200:	429d      	cmp	r5, r3
 8014202:	dd80      	ble.n	8014106 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3de>
 8014204:	1c48      	adds	r0, r1, #1
 8014206:	f6ff af7e 	blt.w	8014106 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3de>
 801420a:	980b      	ldr	r0, [sp, #44]	; 0x2c
 801420c:	4288      	cmp	r0, r1
 801420e:	f77f af7a 	ble.w	8014106 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3de>
 8014212:	9814      	ldr	r0, [sp, #80]	; 0x50
 8014214:	9302      	str	r3, [sp, #8]
 8014216:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8014218:	e9cd 1203 	strd	r1, r2, [sp, #12]
 801421c:	e9cd c005 	strd	ip, r0, [sp, #20]
 8014220:	e9cd 5300 	strd	r5, r3, [sp]
 8014224:	4639      	mov	r1, r7
 8014226:	e9dd 230c 	ldrd	r2, r3, [sp, #48]	; 0x30
 801422a:	9817      	ldr	r0, [sp, #92]	; 0x5c
 801422c:	f7ff fbcc 	bl	80139c8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>
 8014230:	e769      	b.n	8014106 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3de>
 8014232:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8014234:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8014238:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801423a:	141f      	asrs	r7, r3, #16
 801423c:	f3c3 3003 	ubfx	r0, r3, #12, #4
 8014240:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8014242:	141b      	asrs	r3, r3, #16
 8014244:	fb05 3707 	mla	r7, r5, r7, r3
 8014248:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801424a:	fa1f fc82 	uxth.w	ip, r2
 801424e:	eb03 0a07 	add.w	sl, r3, r7
 8014252:	ea4f 110c 	mov.w	r1, ip, lsl #4
 8014256:	f813 9007 	ldrb.w	r9, [r3, r7]
 801425a:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801425e:	f5c1 7380 	rsb	r3, r1, #256	; 0x100
 8014262:	b29b      	uxth	r3, r3
 8014264:	2800      	cmp	r0, #0
 8014266:	f000 813f 	beq.w	80144e8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7c0>
 801426a:	f81a 4005 	ldrb.w	r4, [sl, r5]
 801426e:	9410      	str	r4, [sp, #64]	; 0x40
 8014270:	eb0a 0b05 	add.w	fp, sl, r5
 8014274:	fa1f fa80 	uxth.w	sl, r0
 8014278:	fb0a fc0c 	mul.w	ip, sl, ip
 801427c:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 8014280:	fa1f fa8a 	uxth.w	sl, sl
 8014284:	eba1 010c 	sub.w	r1, r1, ip
 8014288:	eba3 030a 	sub.w	r3, r3, sl
 801428c:	b289      	uxth	r1, r1
 801428e:	fb08 f101 	mul.w	r1, r8, r1
 8014292:	b29b      	uxth	r3, r3
 8014294:	fb09 1303 	mla	r3, r9, r3, r1
 8014298:	9910      	ldr	r1, [sp, #64]	; 0x40
 801429a:	f89b 4001 	ldrb.w	r4, [fp, #1]
 801429e:	9411      	str	r4, [sp, #68]	; 0x44
 80142a0:	fb0a 3301 	mla	r3, sl, r1, r3
 80142a4:	fb0c 3304 	mla	r3, ip, r4, r3
 80142a8:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80142ac:	2b00      	cmp	r3, #0
 80142ae:	f000 810d 	beq.w	80144cc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7a4>
 80142b2:	990c      	ldr	r1, [sp, #48]	; 0x30
 80142b4:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 80142b6:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 80142ba:	eb01 0147 	add.w	r1, r1, r7, lsl #1
 80142be:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 80142c2:	f000 8116 	beq.w	80144f2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7ca>
 80142c6:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 80142ca:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 80142ce:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 80142d2:	fb09 f707 	mul.w	r7, r9, r7
 80142d6:	fb0a fc0c 	mul.w	ip, sl, ip
 80142da:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 80142de:	f107 0b20 	add.w	fp, r7, #32
 80142e2:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 80142e6:	44cc      	add	ip, r9
 80142e8:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 80142ec:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80142f0:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 80142f4:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 80142f8:	ea4c 0909 	orr.w	r9, ip, r9
 80142fc:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8014300:	884f      	ldrh	r7, [r1, #2]
 8014302:	d019      	beq.n	8014338 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x610>
 8014304:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 8014308:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 801430c:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8014310:	fb08 f807 	mul.w	r8, r8, r7
 8014314:	fb0a fc0c 	mul.w	ip, sl, ip
 8014318:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 801431c:	f108 0b20 	add.w	fp, r8, #32
 8014320:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 8014324:	44bc      	add	ip, r7
 8014326:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 801432a:	0a3f      	lsrs	r7, r7, #8
 801432c:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8014330:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8014334:	ea4c 0707 	orr.w	r7, ip, r7
 8014338:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 801433c:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 8014340:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8014344:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8014348:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801434c:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8014350:	ea4c 0909 	orr.w	r9, ip, r9
 8014354:	ea4a 0707 	orr.w	r7, sl, r7
 8014358:	2800      	cmp	r0, #0
 801435a:	f000 80cc 	beq.w	80144f6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7ce>
 801435e:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8014360:	eb01 0c04 	add.w	ip, r1, r4
 8014364:	f831 8004 	ldrh.w	r8, [r1, r4]
 8014368:	9910      	ldr	r1, [sp, #64]	; 0x40
 801436a:	29ff      	cmp	r1, #255	; 0xff
 801436c:	d01a      	beq.n	80143a4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x67c>
 801436e:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8014370:	f428 61fc 	bic.w	r1, r8, #2016	; 0x7e0
 8014374:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 8014378:	fb04 fb08 	mul.w	fp, r4, r8
 801437c:	ea4f 0ae4 	mov.w	sl, r4, asr #3
 8014380:	fb0a fa01 	mul.w	sl, sl, r1
 8014384:	f10b 0120 	add.w	r1, fp, #32
 8014388:	ea06 185a 	and.w	r8, r6, sl, lsr #5
 801438c:	eb01 211b 	add.w	r1, r1, fp, lsr #8
 8014390:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 8014394:	44d0      	add	r8, sl
 8014396:	0a09      	lsrs	r1, r1, #8
 8014398:	ea06 1858 	and.w	r8, r6, r8, lsr #5
 801439c:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80143a0:	ea48 0801 	orr.w	r8, r8, r1
 80143a4:	9c11      	ldr	r4, [sp, #68]	; 0x44
 80143a6:	f8bc 1002 	ldrh.w	r1, [ip, #2]
 80143aa:	2cff      	cmp	r4, #255	; 0xff
 80143ac:	d01a      	beq.n	80143e4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6bc>
 80143ae:	f421 6cfc 	bic.w	ip, r1, #2016	; 0x7e0
 80143b2:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80143b6:	fb04 fb01 	mul.w	fp, r4, r1
 80143ba:	ea4f 0ae4 	mov.w	sl, r4, asr #3
 80143be:	fb0a fa0c 	mul.w	sl, sl, ip
 80143c2:	f10b 0c20 	add.w	ip, fp, #32
 80143c6:	ea06 115a 	and.w	r1, r6, sl, lsr #5
 80143ca:	eb0c 2c1b 	add.w	ip, ip, fp, lsr #8
 80143ce:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 80143d2:	4451      	add	r1, sl
 80143d4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80143d8:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 80143dc:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 80143e0:	ea41 010c 	orr.w	r1, r1, ip
 80143e4:	fb10 fc02 	smulbb	ip, r0, r2
 80143e8:	ea4f 0cec 	mov.w	ip, ip, asr #3
 80143ec:	f1c0 0a10 	rsb	sl, r0, #16
 80143f0:	ebaa 0a02 	sub.w	sl, sl, r2
 80143f4:	ea4f 4b08 	mov.w	fp, r8, lsl #16
 80143f8:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 80143fc:	437a      	muls	r2, r7
 80143fe:	eb0c 0a4a 	add.w	sl, ip, sl, lsl #1
 8014402:	040f      	lsls	r7, r1, #16
 8014404:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8014408:	f428 68fc 	bic.w	r8, r8, #2016	; 0x7e0
 801440c:	fb09 220a 	mla	r2, r9, sl, r2
 8014410:	ea4b 0808 	orr.w	r8, fp, r8
 8014414:	ebcc 0040 	rsb	r0, ip, r0, lsl #1
 8014418:	f007 67fc 	and.w	r7, r7, #132120576	; 0x7e00000
 801441c:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8014420:	fb00 2208 	mla	r2, r0, r8, r2
 8014424:	4339      	orrs	r1, r7
 8014426:	fb0c 2201 	mla	r2, ip, r1, r2
 801442a:	ea4f 5952 	mov.w	r9, r2, lsr #21
 801442e:	0952      	lsrs	r2, r2, #5
 8014430:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8014434:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8014438:	ea49 0202 	orr.w	r2, r9, r2
 801443c:	2bff      	cmp	r3, #255	; 0xff
 801443e:	b292      	uxth	r2, r2
 8014440:	d102      	bne.n	8014448 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x720>
 8014442:	9914      	ldr	r1, [sp, #80]	; 0x50
 8014444:	29ff      	cmp	r1, #255	; 0xff
 8014446:	d067      	beq.n	8014518 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7f0>
 8014448:	990a      	ldr	r1, [sp, #40]	; 0x28
 801444a:	f8be 0000 	ldrh.w	r0, [lr]
 801444e:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8014450:	434b      	muls	r3, r1
 8014452:	1c59      	adds	r1, r3, #1
 8014454:	eb01 2323 	add.w	r3, r1, r3, asr #8
 8014458:	ea6f 2323 	mvn.w	r3, r3, asr #8
 801445c:	1201      	asrs	r1, r0, #8
 801445e:	b2db      	uxtb	r3, r3
 8014460:	1217      	asrs	r7, r2, #8
 8014462:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8014466:	fb11 f103 	smulbb	r1, r1, r3
 801446a:	ea4f 0ce0 	mov.w	ip, r0, asr #3
 801446e:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8014472:	00c0      	lsls	r0, r0, #3
 8014474:	fb07 1704 	mla	r7, r7, r4, r1
 8014478:	b2c0      	uxtb	r0, r0
 801447a:	10d1      	asrs	r1, r2, #3
 801447c:	00d2      	lsls	r2, r2, #3
 801447e:	fb10 f003 	smulbb	r0, r0, r3
 8014482:	b2d2      	uxtb	r2, r2
 8014484:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 8014488:	fb02 0204 	mla	r2, r2, r4, r0
 801448c:	fb1c fc03 	smulbb	ip, ip, r3
 8014490:	b2bf      	uxth	r7, r7
 8014492:	b292      	uxth	r2, r2
 8014494:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8014498:	fb01 c104 	mla	r1, r1, r4, ip
 801449c:	1c7b      	adds	r3, r7, #1
 801449e:	f102 0c01 	add.w	ip, r2, #1
 80144a2:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 80144a6:	eb0c 2c12 	add.w	ip, ip, r2, lsr #8
 80144aa:	b289      	uxth	r1, r1
 80144ac:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 80144b0:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 80144b4:	ea47 070c 	orr.w	r7, r7, ip
 80144b8:	f101 0c01 	add.w	ip, r1, #1
 80144bc:	eb0c 2111 	add.w	r1, ip, r1, lsr #8
 80144c0:	0949      	lsrs	r1, r1, #5
 80144c2:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80144c6:	430f      	orrs	r7, r1
 80144c8:	f8ae 7000 	strh.w	r7, [lr]
 80144cc:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 80144ce:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 80144d0:	4413      	add	r3, r2
 80144d2:	932b      	str	r3, [sp, #172]	; 0xac
 80144d4:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 80144d6:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 80144d8:	441a      	add	r2, r3
 80144da:	9b15      	ldr	r3, [sp, #84]	; 0x54
 80144dc:	922c      	str	r2, [sp, #176]	; 0xb0
 80144de:	3b01      	subs	r3, #1
 80144e0:	f10e 0e02 	add.w	lr, lr, #2
 80144e4:	9315      	str	r3, [sp, #84]	; 0x54
 80144e6:	e489      	b.n	8013dfc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xd4>
 80144e8:	fb08 f101 	mul.w	r1, r8, r1
 80144ec:	fb09 1303 	mla	r3, r9, r3, r1
 80144f0:	e6da      	b.n	80142a8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x580>
 80144f2:	46b9      	mov	r9, r7
 80144f4:	e702      	b.n	80142fc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x5d4>
 80144f6:	f1c2 0110 	rsb	r1, r2, #16
 80144fa:	437a      	muls	r2, r7
 80144fc:	fb09 2901 	mla	r9, r9, r1, r2
 8014500:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8014504:	ea4f 5059 	mov.w	r0, r9, lsr #21
 8014508:	ea4f 1259 	mov.w	r2, r9, lsr #5
 801450c:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8014510:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8014514:	4302      	orrs	r2, r0
 8014516:	e791      	b.n	801443c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x714>
 8014518:	f8ae 2000 	strh.w	r2, [lr]
 801451c:	e7d6      	b.n	80144cc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7a4>
 801451e:	b019      	add	sp, #100	; 0x64
 8014520:	ecbd 8b08 	vpop	{d8-d11}
 8014524:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08014528 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 8014528:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801452c:	b087      	sub	sp, #28
 801452e:	e9dd e012 	ldrd	lr, r0, [sp, #72]	; 0x48
 8014532:	f9bd 4040 	ldrsh.w	r4, [sp, #64]	; 0x40
 8014536:	9105      	str	r1, [sp, #20]
 8014538:	fb00 e604 	mla	r6, r0, r4, lr
 801453c:	f89d 1054 	ldrb.w	r1, [sp, #84]	; 0x54
 8014540:	9102      	str	r1, [sp, #8]
 8014542:	eb03 0146 	add.w	r1, r3, r6, lsl #1
 8014546:	9103      	str	r1, [sp, #12]
 8014548:	9905      	ldr	r1, [sp, #20]
 801454a:	f9bd 7044 	ldrsh.w	r7, [sp, #68]	; 0x44
 801454e:	f89d 5050 	ldrb.w	r5, [sp, #80]	; 0x50
 8014552:	8809      	ldrh	r1, [r1, #0]
 8014554:	2800      	cmp	r0, #0
 8014556:	eb02 0a06 	add.w	sl, r2, r6
 801455a:	f2c0 80ca 	blt.w	80146f2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1ca>
 801455e:	4287      	cmp	r7, r0
 8014560:	f340 80c7 	ble.w	80146f2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1ca>
 8014564:	f1be 0f00 	cmp.w	lr, #0
 8014568:	f2c0 80bf 	blt.w	80146ea <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1c2>
 801456c:	4574      	cmp	r4, lr
 801456e:	f340 80bc 	ble.w	80146ea <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1c2>
 8014572:	f812 c006 	ldrb.w	ip, [r2, r6]
 8014576:	f833 9016 	ldrh.w	r9, [r3, r6, lsl #1]
 801457a:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 801457e:	d01c      	beq.n	80145ba <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x92>
 8014580:	f429 66fc 	bic.w	r6, r9, #2016	; 0x7e0
 8014584:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8014588:	4372      	muls	r2, r6
 801458a:	f64f 081f 	movw	r8, #63519	; 0xf81f
 801458e:	ea08 1352 	and.w	r3, r8, r2, lsr #5
 8014592:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8014596:	f602 0201 	addw	r2, r2, #2049	; 0x801
 801459a:	fb0c f609 	mul.w	r6, ip, r9
 801459e:	eb03 0902 	add.w	r9, r3, r2
 80145a2:	ea08 1959 	and.w	r9, r8, r9, lsr #5
 80145a6:	f106 0820 	add.w	r8, r6, #32
 80145aa:	eb08 2816 	add.w	r8, r8, r6, lsr #8
 80145ae:	ea4f 2818 	mov.w	r8, r8, lsr #8
 80145b2:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 80145b6:	ea49 0908 	orr.w	r9, r9, r8
 80145ba:	fa1f f989 	uxth.w	r9, r9
 80145be:	f11e 0301 	adds.w	r3, lr, #1
 80145c2:	f100 809b 	bmi.w	80146fc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1d4>
 80145c6:	429c      	cmp	r4, r3
 80145c8:	f340 8098 	ble.w	80146fc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1d4>
 80145cc:	2d00      	cmp	r5, #0
 80145ce:	f000 8095 	beq.w	80146fc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1d4>
 80145d2:	f89a 6001 	ldrb.w	r6, [sl, #1]
 80145d6:	9b03      	ldr	r3, [sp, #12]
 80145d8:	2eff      	cmp	r6, #255	; 0xff
 80145da:	885b      	ldrh	r3, [r3, #2]
 80145dc:	d01b      	beq.n	8014616 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xee>
 80145de:	f423 62fc 	bic.w	r2, r3, #2016	; 0x7e0
 80145e2:	ea4f 08e6 	mov.w	r8, r6, asr #3
 80145e6:	fb08 f202 	mul.w	r2, r8, r2
 80145ea:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80145ee:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 80145f2:	fb06 f803 	mul.w	r8, r6, r3
 80145f6:	ea0b 1352 	and.w	r3, fp, r2, lsr #5
 80145fa:	f602 0201 	addw	r2, r2, #2049	; 0x801
 80145fe:	441a      	add	r2, r3
 8014600:	f108 0320 	add.w	r3, r8, #32
 8014604:	eb03 2318 	add.w	r3, r3, r8, lsr #8
 8014608:	0a1b      	lsrs	r3, r3, #8
 801460a:	ea0b 1b52 	and.w	fp, fp, r2, lsr #5
 801460e:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8014612:	ea4b 0303 	orr.w	r3, fp, r3
 8014616:	b29b      	uxth	r3, r3
 8014618:	9301      	str	r3, [sp, #4]
 801461a:	3001      	adds	r0, #1
 801461c:	d474      	bmi.n	8014708 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1e0>
 801461e:	4287      	cmp	r7, r0
 8014620:	dd72      	ble.n	8014708 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1e0>
 8014622:	9a02      	ldr	r2, [sp, #8]
 8014624:	2a00      	cmp	r2, #0
 8014626:	f000 8111 	beq.w	801484c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x324>
 801462a:	f1be 0f00 	cmp.w	lr, #0
 801462e:	db68      	blt.n	8014702 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1da>
 8014630:	4574      	cmp	r4, lr
 8014632:	dd66      	ble.n	8014702 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1da>
 8014634:	f81a 7004 	ldrb.w	r7, [sl, r4]
 8014638:	9a03      	ldr	r2, [sp, #12]
 801463a:	2fff      	cmp	r7, #255	; 0xff
 801463c:	f832 0014 	ldrh.w	r0, [r2, r4, lsl #1]
 8014640:	d01c      	beq.n	801467c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x154>
 8014642:	f420 62fc 	bic.w	r2, r0, #2016	; 0x7e0
 8014646:	ea4f 08e7 	mov.w	r8, r7, asr #3
 801464a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801464e:	fb07 fb00 	mul.w	fp, r7, r0
 8014652:	fb08 f802 	mul.w	r8, r8, r2
 8014656:	f64f 001f 	movw	r0, #63519	; 0xf81f
 801465a:	ea00 1258 	and.w	r2, r0, r8, lsr #5
 801465e:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8014662:	4490      	add	r8, r2
 8014664:	f10b 0220 	add.w	r2, fp, #32
 8014668:	eb02 2b1b 	add.w	fp, r2, fp, lsr #8
 801466c:	ea4f 2b1b 	mov.w	fp, fp, lsr #8
 8014670:	ea00 1058 	and.w	r0, r0, r8, lsr #5
 8014674:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 8014678:	ea40 000b 	orr.w	r0, r0, fp
 801467c:	b280      	uxth	r0, r0
 801467e:	f11e 0e01 	adds.w	lr, lr, #1
 8014682:	d446      	bmi.n	8014712 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1ea>
 8014684:	4574      	cmp	r4, lr
 8014686:	dd44      	ble.n	8014712 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1ea>
 8014688:	2d00      	cmp	r5, #0
 801468a:	d045      	beq.n	8014718 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1f0>
 801468c:	1c62      	adds	r2, r4, #1
 801468e:	9b03      	ldr	r3, [sp, #12]
 8014690:	f81a 4002 	ldrb.w	r4, [sl, r2]
 8014694:	f833 2012 	ldrh.w	r2, [r3, r2, lsl #1]
 8014698:	2cff      	cmp	r4, #255	; 0xff
 801469a:	d01c      	beq.n	80146d6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1ae>
 801469c:	f422 6efc 	bic.w	lr, r2, #2016	; 0x7e0
 80146a0:	ea4f 08e4 	mov.w	r8, r4, asr #3
 80146a4:	fb08 fe0e 	mul.w	lr, r8, lr
 80146a8:	f64f 0a1f 	movw	sl, #63519	; 0xf81f
 80146ac:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80146b0:	fb04 f802 	mul.w	r8, r4, r2
 80146b4:	ea0a 125e 	and.w	r2, sl, lr, lsr #5
 80146b8:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 80146bc:	4472      	add	r2, lr
 80146be:	ea0a 1252 	and.w	r2, sl, r2, lsr #5
 80146c2:	f108 0a20 	add.w	sl, r8, #32
 80146c6:	eb0a 2a18 	add.w	sl, sl, r8, lsr #8
 80146ca:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80146ce:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 80146d2:	ea42 020a 	orr.w	r2, r2, sl
 80146d6:	b292      	uxth	r2, r2
 80146d8:	2d0f      	cmp	r5, #15
 80146da:	d91f      	bls.n	801471c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1f4>
 80146dc:	4b5f      	ldr	r3, [pc, #380]	; (801485c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x334>)
 80146de:	4a60      	ldr	r2, [pc, #384]	; (8014860 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x338>)
 80146e0:	4860      	ldr	r0, [pc, #384]	; (8014864 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x33c>)
 80146e2:	f240 210d 	movw	r1, #525	; 0x20d
 80146e6:	f003 fc39 	bl	8017f5c <__assert_func>
 80146ea:	4689      	mov	r9, r1
 80146ec:	f04f 0cff 	mov.w	ip, #255	; 0xff
 80146f0:	e765      	b.n	80145be <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x96>
 80146f2:	26ff      	movs	r6, #255	; 0xff
 80146f4:	9101      	str	r1, [sp, #4]
 80146f6:	4689      	mov	r9, r1
 80146f8:	46b4      	mov	ip, r6
 80146fa:	e78e      	b.n	801461a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf2>
 80146fc:	9101      	str	r1, [sp, #4]
 80146fe:	26ff      	movs	r6, #255	; 0xff
 8014700:	e78b      	b.n	801461a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf2>
 8014702:	4608      	mov	r0, r1
 8014704:	27ff      	movs	r7, #255	; 0xff
 8014706:	e7ba      	b.n	801467e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x156>
 8014708:	24ff      	movs	r4, #255	; 0xff
 801470a:	460a      	mov	r2, r1
 801470c:	4608      	mov	r0, r1
 801470e:	4627      	mov	r7, r4
 8014710:	e7e2      	b.n	80146d8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1b0>
 8014712:	460a      	mov	r2, r1
 8014714:	24ff      	movs	r4, #255	; 0xff
 8014716:	e7df      	b.n	80146d8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1b0>
 8014718:	460a      	mov	r2, r1
 801471a:	24ff      	movs	r4, #255	; 0xff
 801471c:	9b02      	ldr	r3, [sp, #8]
 801471e:	2b0f      	cmp	r3, #15
 8014720:	d8dc      	bhi.n	80146dc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1b4>
 8014722:	f8bd e008 	ldrh.w	lr, [sp, #8]
 8014726:	fa1f f885 	uxth.w	r8, r5
 801472a:	fb08 fa0e 	mul.w	sl, r8, lr
 801472e:	ea4f 1308 	mov.w	r3, r8, lsl #4
 8014732:	ebca 1e0e 	rsb	lr, sl, lr, lsl #4
 8014736:	9303      	str	r3, [sp, #12]
 8014738:	fa1f f38e 	uxth.w	r3, lr
 801473c:	9304      	str	r3, [sp, #16]
 801473e:	ea4f 4809 	mov.w	r8, r9, lsl #16
 8014742:	9b02      	ldr	r3, [sp, #8]
 8014744:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8014748:	f008 68fc 	and.w	r8, r8, #132120576	; 0x7e00000
 801474c:	fb15 fe03 	smulbb	lr, r5, r3
 8014750:	ea48 0809 	orr.w	r8, r8, r9
 8014754:	f1c3 0910 	rsb	r9, r3, #16
 8014758:	9b01      	ldr	r3, [sp, #4]
 801475a:	ea4f 4b03 	mov.w	fp, r3, lsl #16
 801475e:	ea4f 0eee 	mov.w	lr, lr, asr #3
 8014762:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8014766:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801476a:	eba9 0905 	sub.w	r9, r9, r5
 801476e:	ea4b 0303 	orr.w	r3, fp, r3
 8014772:	ebce 0545 	rsb	r5, lr, r5, lsl #1
 8014776:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 801477a:	eb0e 0949 	add.w	r9, lr, r9, lsl #1
 801477e:	436b      	muls	r3, r5
 8014780:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8014784:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8014788:	ea4b 0202 	orr.w	r2, fp, r2
 801478c:	fb09 3308 	mla	r3, r9, r8, r3
 8014790:	fb0e 3302 	mla	r3, lr, r2, r3
 8014794:	0402      	lsls	r2, r0, #16
 8014796:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801479a:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801479e:	4310      	orrs	r0, r2
 80147a0:	9a02      	ldr	r2, [sp, #8]
 80147a2:	ebce 0e42 	rsb	lr, lr, r2, lsl #1
 80147a6:	9a03      	ldr	r2, [sp, #12]
 80147a8:	fb0e 3e00 	mla	lr, lr, r0, r3
 80147ac:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
 80147b0:	9a04      	ldr	r2, [sp, #16]
 80147b2:	1a80      	subs	r0, r0, r2
 80147b4:	9a03      	ldr	r2, [sp, #12]
 80147b6:	eba2 020a 	sub.w	r2, r2, sl
 80147ba:	b292      	uxth	r2, r2
 80147bc:	b280      	uxth	r0, r0
 80147be:	4356      	muls	r6, r2
 80147c0:	9a04      	ldr	r2, [sp, #16]
 80147c2:	fb0c 6600 	mla	r6, ip, r0, r6
 80147c6:	fb02 6707 	mla	r7, r2, r7, r6
 80147ca:	fb0a 7404 	mla	r4, sl, r4, r7
 80147ce:	ea4f 535e 	mov.w	r3, lr, lsr #21
 80147d2:	1208      	asrs	r0, r1, #8
 80147d4:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 80147d8:	ea6f 2424 	mvn.w	r4, r4, asr #8
 80147dc:	b2e4      	uxtb	r4, r4
 80147de:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80147e2:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 80147e6:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 80147ea:	4360      	muls	r0, r4
 80147ec:	ea43 0e0e 	orr.w	lr, r3, lr
 80147f0:	fa1f f38e 	uxth.w	r3, lr
 80147f4:	1c42      	adds	r2, r0, #1
 80147f6:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 80147fa:	1218      	asrs	r0, r3, #8
 80147fc:	10cd      	asrs	r5, r1, #3
 80147fe:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8014802:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 8014806:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801480a:	4a17      	ldr	r2, [pc, #92]	; (8014868 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x340>)
 801480c:	4365      	muls	r5, r4
 801480e:	ea02 2000 	and.w	r0, r2, r0, lsl #8
 8014812:	1c6a      	adds	r2, r5, #1
 8014814:	eb02 2515 	add.w	r5, r2, r5, lsr #8
 8014818:	00c9      	lsls	r1, r1, #3
 801481a:	10da      	asrs	r2, r3, #3
 801481c:	b2c9      	uxtb	r1, r1
 801481e:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8014822:	434c      	muls	r4, r1
 8014824:	eb02 2215 	add.w	r2, r2, r5, lsr #8
 8014828:	1c61      	adds	r1, r4, #1
 801482a:	00d2      	lsls	r2, r2, #3
 801482c:	00db      	lsls	r3, r3, #3
 801482e:	eb01 2414 	add.w	r4, r1, r4, lsr #8
 8014832:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8014836:	b2db      	uxtb	r3, r3
 8014838:	4302      	orrs	r2, r0
 801483a:	eb03 2314 	add.w	r3, r3, r4, lsr #8
 801483e:	ea42 03d3 	orr.w	r3, r2, r3, lsr #3
 8014842:	9a05      	ldr	r2, [sp, #20]
 8014844:	8013      	strh	r3, [r2, #0]
 8014846:	b007      	add	sp, #28
 8014848:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801484c:	2d0f      	cmp	r5, #15
 801484e:	f63f af45 	bhi.w	80146dc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1b4>
 8014852:	24ff      	movs	r4, #255	; 0xff
 8014854:	460a      	mov	r2, r1
 8014856:	4608      	mov	r0, r1
 8014858:	4627      	mov	r7, r4
 801485a:	e762      	b.n	8014722 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1fa>
 801485c:	0801bc7d 	.word	0x0801bc7d
 8014860:	0801c1d5 	.word	0x0801c1d5
 8014864:	0801bd05 	.word	0x0801bd05
 8014868:	fffff800 	.word	0xfffff800

0801486c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 801486c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014870:	ed2d 8b08 	vpush	{d8-d11}
 8014874:	b095      	sub	sp, #84	; 0x54
 8014876:	eeb0 aa40 	vmov.f32	s20, s0
 801487a:	9e2b      	ldr	r6, [sp, #172]	; 0xac
 801487c:	9306      	str	r3, [sp, #24]
 801487e:	f9bd 30bc 	ldrsh.w	r3, [sp, #188]	; 0xbc
 8014882:	9110      	str	r1, [sp, #64]	; 0x40
 8014884:	9308      	str	r3, [sp, #32]
 8014886:	e9dd 132c 	ldrd	r1, r3, [sp, #176]	; 0xb0
 801488a:	9013      	str	r0, [sp, #76]	; 0x4c
 801488c:	6870      	ldr	r0, [r6, #4]
 801488e:	9212      	str	r2, [sp, #72]	; 0x48
 8014890:	fb00 1303 	mla	r3, r0, r3, r1
 8014894:	6831      	ldr	r1, [r6, #0]
 8014896:	9a30      	ldr	r2, [sp, #192]	; 0xc0
 8014898:	f9bd 50b8 	ldrsh.w	r5, [sp, #184]	; 0xb8
 801489c:	eb01 0343 	add.w	r3, r1, r3, lsl #1
 80148a0:	9307      	str	r3, [sp, #28]
 80148a2:	6813      	ldr	r3, [r2, #0]
 80148a4:	9309      	str	r3, [sp, #36]	; 0x24
 80148a6:	6853      	ldr	r3, [r2, #4]
 80148a8:	930a      	str	r3, [sp, #40]	; 0x28
 80148aa:	006b      	lsls	r3, r5, #1
 80148ac:	eef0 9a60 	vmov.f32	s19, s1
 80148b0:	eeb0 9a41 	vmov.f32	s18, s2
 80148b4:	eeb0 8a62 	vmov.f32	s16, s5
 80148b8:	eef0 8a43 	vmov.f32	s17, s6
 80148bc:	eef0 ba44 	vmov.f32	s23, s8
 80148c0:	eeb0 ba64 	vmov.f32	s22, s9
 80148c4:	eef0 aa45 	vmov.f32	s21, s10
 80148c8:	930f      	str	r3, [sp, #60]	; 0x3c
 80148ca:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80148cc:	2b00      	cmp	r3, #0
 80148ce:	dc03      	bgt.n	80148d8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6c>
 80148d0:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80148d2:	2b00      	cmp	r3, #0
 80148d4:	f340 83a3 	ble.w	801501e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7b2>
 80148d8:	9b06      	ldr	r3, [sp, #24]
 80148da:	2b00      	cmp	r3, #0
 80148dc:	f340 81bc 	ble.w	8014c58 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3ec>
 80148e0:	9a27      	ldr	r2, [sp, #156]	; 0x9c
 80148e2:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80148e4:	1412      	asrs	r2, r2, #16
 80148e6:	ea4f 4323 	mov.w	r3, r3, asr #16
 80148ea:	d42f      	bmi.n	801494c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe0>
 80148ec:	1c51      	adds	r1, r2, #1
 80148ee:	428d      	cmp	r5, r1
 80148f0:	dd2f      	ble.n	8014952 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe6>
 80148f2:	2b00      	cmp	r3, #0
 80148f4:	db2d      	blt.n	8014952 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe6>
 80148f6:	9808      	ldr	r0, [sp, #32]
 80148f8:	1c59      	adds	r1, r3, #1
 80148fa:	4288      	cmp	r0, r1
 80148fc:	dd29      	ble.n	8014952 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe6>
 80148fe:	9b06      	ldr	r3, [sp, #24]
 8014900:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8014902:	9927      	ldr	r1, [sp, #156]	; 0x9c
 8014904:	3b01      	subs	r3, #1
 8014906:	fb02 1203 	mla	r2, r2, r3, r1
 801490a:	1412      	asrs	r2, r2, #16
 801490c:	d42b      	bmi.n	8014966 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfa>
 801490e:	3201      	adds	r2, #1
 8014910:	4295      	cmp	r5, r2
 8014912:	dd28      	ble.n	8014966 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfa>
 8014914:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 8014916:	9928      	ldr	r1, [sp, #160]	; 0xa0
 8014918:	fb02 1303 	mla	r3, r2, r3, r1
 801491c:	141b      	asrs	r3, r3, #16
 801491e:	d422      	bmi.n	8014966 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfa>
 8014920:	9a08      	ldr	r2, [sp, #32]
 8014922:	3301      	adds	r3, #1
 8014924:	429a      	cmp	r2, r3
 8014926:	dd1e      	ble.n	8014966 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfa>
 8014928:	9b06      	ldr	r3, [sp, #24]
 801492a:	f8dd e01c 	ldr.w	lr, [sp, #28]
 801492e:	9311      	str	r3, [sp, #68]	; 0x44
 8014930:	f64f 061f 	movw	r6, #63519	; 0xf81f
 8014934:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8014936:	2b00      	cmp	r3, #0
 8014938:	f300 8208 	bgt.w	8014d4c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4e0>
 801493c:	9b06      	ldr	r3, [sp, #24]
 801493e:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8014942:	9b07      	ldr	r3, [sp, #28]
 8014944:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 8014948:	9307      	str	r3, [sp, #28]
 801494a:	e187      	b.n	8014c5c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3f0>
 801494c:	1c57      	adds	r7, r2, #1
 801494e:	f040 8174 	bne.w	8014c3a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3ce>
 8014952:	42aa      	cmp	r2, r5
 8014954:	f280 8171 	bge.w	8014c3a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3ce>
 8014958:	1c5e      	adds	r6, r3, #1
 801495a:	f2c0 816e 	blt.w	8014c3a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3ce>
 801495e:	9a08      	ldr	r2, [sp, #32]
 8014960:	4293      	cmp	r3, r2
 8014962:	f280 816a 	bge.w	8014c3a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3ce>
 8014966:	9b06      	ldr	r3, [sp, #24]
 8014968:	9f07      	ldr	r7, [sp, #28]
 801496a:	9311      	str	r3, [sp, #68]	; 0x44
 801496c:	f64f 061f 	movw	r6, #63519	; 0xf81f
 8014970:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8014972:	2b00      	cmp	r3, #0
 8014974:	dde2      	ble.n	801493c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xd0>
 8014976:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8014978:	1419      	asrs	r1, r3, #16
 801497a:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801497c:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8014980:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8014982:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 8014986:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8014988:	141b      	asrs	r3, r3, #16
 801498a:	f100 81c4 	bmi.w	8014d16 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4aa>
 801498e:	1c58      	adds	r0, r3, #1
 8014990:	4285      	cmp	r5, r0
 8014992:	f340 81c2 	ble.w	8014d1a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4ae>
 8014996:	2900      	cmp	r1, #0
 8014998:	f2c0 81bf 	blt.w	8014d1a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4ae>
 801499c:	9c08      	ldr	r4, [sp, #32]
 801499e:	1c48      	adds	r0, r1, #1
 80149a0:	4284      	cmp	r4, r0
 80149a2:	f340 81ba 	ble.w	8014d1a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4ae>
 80149a6:	fb01 3105 	mla	r1, r1, r5, r3
 80149aa:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80149ac:	fa1f fe82 	uxth.w	lr, r2
 80149b0:	eb03 0a01 	add.w	sl, r3, r1
 80149b4:	ea4f 100e 	mov.w	r0, lr, lsl #4
 80149b8:	f813 9001 	ldrb.w	r9, [r3, r1]
 80149bc:	f89a 8001 	ldrb.w	r8, [sl, #1]
 80149c0:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 80149c4:	b29b      	uxth	r3, r3
 80149c6:	f1bc 0f00 	cmp.w	ip, #0
 80149ca:	f000 8186 	beq.w	8014cda <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x46e>
 80149ce:	f81a 4005 	ldrb.w	r4, [sl, r5]
 80149d2:	940b      	str	r4, [sp, #44]	; 0x2c
 80149d4:	eb0a 0b05 	add.w	fp, sl, r5
 80149d8:	fa1f fa8c 	uxth.w	sl, ip
 80149dc:	fb0a fe0e 	mul.w	lr, sl, lr
 80149e0:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 80149e4:	fa1f fa8a 	uxth.w	sl, sl
 80149e8:	eba0 000e 	sub.w	r0, r0, lr
 80149ec:	eba3 030a 	sub.w	r3, r3, sl
 80149f0:	b280      	uxth	r0, r0
 80149f2:	fb08 f000 	mul.w	r0, r8, r0
 80149f6:	b29b      	uxth	r3, r3
 80149f8:	fb09 0303 	mla	r3, r9, r3, r0
 80149fc:	980b      	ldr	r0, [sp, #44]	; 0x2c
 80149fe:	f89b 4001 	ldrb.w	r4, [fp, #1]
 8014a02:	940c      	str	r4, [sp, #48]	; 0x30
 8014a04:	fb0a 3300 	mla	r3, sl, r0, r3
 8014a08:	fb0e 3304 	mla	r3, lr, r4, r3
 8014a0c:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8014a10:	2b00      	cmp	r3, #0
 8014a12:	f000 8105 	beq.w	8014c20 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3b4>
 8014a16:	9809      	ldr	r0, [sp, #36]	; 0x24
 8014a18:	9c09      	ldr	r4, [sp, #36]	; 0x24
 8014a1a:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8014a1e:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 8014a22:	f834 1011 	ldrh.w	r1, [r4, r1, lsl #1]
 8014a26:	f000 815d 	beq.w	8014ce4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x478>
 8014a2a:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 8014a2e:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 8014a32:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8014a36:	fb09 f101 	mul.w	r1, r9, r1
 8014a3a:	fb0a fe0e 	mul.w	lr, sl, lr
 8014a3e:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 8014a42:	f101 0b20 	add.w	fp, r1, #32
 8014a46:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 8014a4a:	44ce      	add	lr, r9
 8014a4c:	eb0b 2911 	add.w	r9, fp, r1, lsr #8
 8014a50:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8014a54:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 8014a58:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8014a5c:	ea4e 0909 	orr.w	r9, lr, r9
 8014a60:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8014a64:	8841      	ldrh	r1, [r0, #2]
 8014a66:	d019      	beq.n	8014a9c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x230>
 8014a68:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 8014a6c:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 8014a70:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8014a74:	fb0a fe0e 	mul.w	lr, sl, lr
 8014a78:	fb08 f801 	mul.w	r8, r8, r1
 8014a7c:	f108 0b20 	add.w	fp, r8, #32
 8014a80:	ea06 115e 	and.w	r1, r6, lr, lsr #5
 8014a84:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 8014a88:	448e      	add	lr, r1
 8014a8a:	eb0b 2118 	add.w	r1, fp, r8, lsr #8
 8014a8e:	0a09      	lsrs	r1, r1, #8
 8014a90:	ea06 1a5e 	and.w	sl, r6, lr, lsr #5
 8014a94:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8014a98:	ea4a 0101 	orr.w	r1, sl, r1
 8014a9c:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 8014aa0:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8014aa4:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8014aa8:	ea4e 0909 	orr.w	r9, lr, r9
 8014aac:	ea4f 4e01 	mov.w	lr, r1, lsl #16
 8014ab0:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8014ab4:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8014ab8:	ea4e 0e01 	orr.w	lr, lr, r1
 8014abc:	f1bc 0f00 	cmp.w	ip, #0
 8014ac0:	f000 8112 	beq.w	8014ce8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x47c>
 8014ac4:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8014ac6:	eb00 0801 	add.w	r8, r0, r1
 8014aca:	5a41      	ldrh	r1, [r0, r1]
 8014acc:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8014ace:	28ff      	cmp	r0, #255	; 0xff
 8014ad0:	d019      	beq.n	8014b06 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x29a>
 8014ad2:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8014ad4:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
 8014ad8:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8014adc:	fb04 fb01 	mul.w	fp, r4, r1
 8014ae0:	ea4f 0ae4 	mov.w	sl, r4, asr #3
 8014ae4:	fb0a fa00 	mul.w	sl, sl, r0
 8014ae8:	f10b 0020 	add.w	r0, fp, #32
 8014aec:	ea06 115a 	and.w	r1, r6, sl, lsr #5
 8014af0:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 8014af4:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 8014af8:	4451      	add	r1, sl
 8014afa:	0a00      	lsrs	r0, r0, #8
 8014afc:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 8014b00:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8014b04:	4301      	orrs	r1, r0
 8014b06:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8014b08:	f8b8 0002 	ldrh.w	r0, [r8, #2]
 8014b0c:	2cff      	cmp	r4, #255	; 0xff
 8014b0e:	d01a      	beq.n	8014b46 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2da>
 8014b10:	f420 68fc 	bic.w	r8, r0, #2016	; 0x7e0
 8014b14:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8014b18:	fb04 fb00 	mul.w	fp, r4, r0
 8014b1c:	ea4f 0ae4 	mov.w	sl, r4, asr #3
 8014b20:	fb0a fa08 	mul.w	sl, sl, r8
 8014b24:	f10b 0820 	add.w	r8, fp, #32
 8014b28:	ea06 105a 	and.w	r0, r6, sl, lsr #5
 8014b2c:	eb08 281b 	add.w	r8, r8, fp, lsr #8
 8014b30:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 8014b34:	4450      	add	r0, sl
 8014b36:	ea4f 2818 	mov.w	r8, r8, lsr #8
 8014b3a:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 8014b3e:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 8014b42:	ea40 0008 	orr.w	r0, r0, r8
 8014b46:	fb1c f802 	smulbb	r8, ip, r2
 8014b4a:	ea4f 08e8 	mov.w	r8, r8, asr #3
 8014b4e:	f1cc 0a10 	rsb	sl, ip, #16
 8014b52:	ebaa 0a02 	sub.w	sl, sl, r2
 8014b56:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8014b5a:	ebc8 0242 	rsb	r2, r8, r2, lsl #1
 8014b5e:	eb08 0a4a 	add.w	sl, r8, sl, lsl #1
 8014b62:	fb0e f202 	mul.w	r2, lr, r2
 8014b66:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8014b6a:	ea4f 4e00 	mov.w	lr, r0, lsl #16
 8014b6e:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8014b72:	ebc8 0c4c 	rsb	ip, r8, ip, lsl #1
 8014b76:	fb09 220a 	mla	r2, r9, sl, r2
 8014b7a:	ea4b 0101 	orr.w	r1, fp, r1
 8014b7e:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8014b82:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8014b86:	fb0c 2201 	mla	r2, ip, r1, r2
 8014b8a:	ea4e 0000 	orr.w	r0, lr, r0
 8014b8e:	fb08 2800 	mla	r8, r8, r0, r2
 8014b92:	ea4f 5258 	mov.w	r2, r8, lsr #21
 8014b96:	ea4f 1858 	mov.w	r8, r8, lsr #5
 8014b9a:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8014b9e:	f428 68fc 	bic.w	r8, r8, #2016	; 0x7e0
 8014ba2:	ea42 0808 	orr.w	r8, r2, r8
 8014ba6:	fa1f f288 	uxth.w	r2, r8
 8014baa:	2bff      	cmp	r3, #255	; 0xff
 8014bac:	f000 80b1 	beq.w	8014d12 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4a6>
 8014bb0:	f8b7 8000 	ldrh.w	r8, [r7]
 8014bb4:	43db      	mvns	r3, r3
 8014bb6:	ea4f 2028 	mov.w	r0, r8, asr #8
 8014bba:	fa5f fe83 	uxtb.w	lr, r3
 8014bbe:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8014bc2:	fb00 f00e 	mul.w	r0, r0, lr
 8014bc6:	1c41      	adds	r1, r0, #1
 8014bc8:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 8014bcc:	1210      	asrs	r0, r2, #8
 8014bce:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 8014bd2:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8014bd6:	eb00 2011 	add.w	r0, r0, r1, lsr #8
 8014bda:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 8014bde:	495a      	ldr	r1, [pc, #360]	; (8014d48 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4dc>)
 8014be0:	fb0c fc0e 	mul.w	ip, ip, lr
 8014be4:	ea01 2000 	and.w	r0, r1, r0, lsl #8
 8014be8:	f10c 0101 	add.w	r1, ip, #1
 8014bec:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 8014bf0:	10d1      	asrs	r1, r2, #3
 8014bf2:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8014bf6:	ea4f 03c8 	mov.w	r3, r8, lsl #3
 8014bfa:	eb01 211c 	add.w	r1, r1, ip, lsr #8
 8014bfe:	b2db      	uxtb	r3, r3
 8014c00:	00c9      	lsls	r1, r1, #3
 8014c02:	fb03 f30e 	mul.w	r3, r3, lr
 8014c06:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8014c0a:	4301      	orrs	r1, r0
 8014c0c:	1c58      	adds	r0, r3, #1
 8014c0e:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8014c12:	00d3      	lsls	r3, r2, #3
 8014c14:	b2db      	uxtb	r3, r3
 8014c16:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8014c1a:	ea41 03d3 	orr.w	r3, r1, r3, lsr #3
 8014c1e:	803b      	strh	r3, [r7, #0]
 8014c20:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8014c22:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8014c24:	4413      	add	r3, r2
 8014c26:	9327      	str	r3, [sp, #156]	; 0x9c
 8014c28:	9a28      	ldr	r2, [sp, #160]	; 0xa0
 8014c2a:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8014c2c:	441a      	add	r2, r3
 8014c2e:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8014c30:	9228      	str	r2, [sp, #160]	; 0xa0
 8014c32:	3b01      	subs	r3, #1
 8014c34:	3702      	adds	r7, #2
 8014c36:	9311      	str	r3, [sp, #68]	; 0x44
 8014c38:	e69a      	b.n	8014970 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x104>
 8014c3a:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8014c3c:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8014c3e:	4413      	add	r3, r2
 8014c40:	9327      	str	r3, [sp, #156]	; 0x9c
 8014c42:	9a28      	ldr	r2, [sp, #160]	; 0xa0
 8014c44:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8014c46:	441a      	add	r2, r3
 8014c48:	9b06      	ldr	r3, [sp, #24]
 8014c4a:	9228      	str	r2, [sp, #160]	; 0xa0
 8014c4c:	3b01      	subs	r3, #1
 8014c4e:	9306      	str	r3, [sp, #24]
 8014c50:	9b07      	ldr	r3, [sp, #28]
 8014c52:	3302      	adds	r3, #2
 8014c54:	9307      	str	r3, [sp, #28]
 8014c56:	e63f      	b.n	80148d8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6c>
 8014c58:	f47f ae51 	bne.w	80148fe <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x92>
 8014c5c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8014c5e:	2b00      	cmp	r3, #0
 8014c60:	f340 81dd 	ble.w	801501e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7b2>
 8014c64:	ee3a aa2b 	vadd.f32	s20, s20, s23
 8014c68:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8014c6c:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 8014c70:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8014c72:	ee79 9a8b 	vadd.f32	s19, s19, s22
 8014c76:	ee39 9a2a 	vadd.f32	s18, s18, s21
 8014c7a:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8014c7e:	eef0 6a48 	vmov.f32	s13, s16
 8014c82:	ee69 7a27 	vmul.f32	s15, s18, s15
 8014c86:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8014c8a:	ee37 8a48 	vsub.f32	s16, s14, s16
 8014c8e:	edcd 6a27 	vstr	s13, [sp, #156]	; 0x9c
 8014c92:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8014c96:	eef0 6a68 	vmov.f32	s13, s17
 8014c9a:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8014c9e:	ee18 2a10 	vmov	r2, s16
 8014ca2:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8014ca6:	fb92 f3f3 	sdiv	r3, r2, r3
 8014caa:	ee18 2a90 	vmov	r2, s17
 8014cae:	9329      	str	r3, [sp, #164]	; 0xa4
 8014cb0:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8014cb2:	fb92 f3f3 	sdiv	r3, r2, r3
 8014cb6:	932a      	str	r3, [sp, #168]	; 0xa8
 8014cb8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8014cba:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8014cbc:	3b01      	subs	r3, #1
 8014cbe:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8014cc2:	9310      	str	r3, [sp, #64]	; 0x40
 8014cc4:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8014cc6:	edcd 6a28 	vstr	s13, [sp, #160]	; 0xa0
 8014cca:	bf08      	it	eq
 8014ccc:	4613      	moveq	r3, r2
 8014cce:	9306      	str	r3, [sp, #24]
 8014cd0:	eef0 8a67 	vmov.f32	s17, s15
 8014cd4:	eeb0 8a47 	vmov.f32	s16, s14
 8014cd8:	e5f7      	b.n	80148ca <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x5e>
 8014cda:	fb08 f000 	mul.w	r0, r8, r0
 8014cde:	fb09 0303 	mla	r3, r9, r3, r0
 8014ce2:	e693      	b.n	8014a0c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1a0>
 8014ce4:	4689      	mov	r9, r1
 8014ce6:	e6bb      	b.n	8014a60 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1f4>
 8014ce8:	f1c2 0010 	rsb	r0, r2, #16
 8014cec:	fb0e f202 	mul.w	r2, lr, r2
 8014cf0:	fb09 2900 	mla	r9, r9, r0, r2
 8014cf4:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8014cf8:	ea4f 5259 	mov.w	r2, r9, lsr #21
 8014cfc:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8014d00:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8014d04:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8014d08:	ea42 0909 	orr.w	r9, r2, r9
 8014d0c:	fa1f f289 	uxth.w	r2, r9
 8014d10:	e74b      	b.n	8014baa <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x33e>
 8014d12:	803a      	strh	r2, [r7, #0]
 8014d14:	e784      	b.n	8014c20 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3b4>
 8014d16:	1c5c      	adds	r4, r3, #1
 8014d18:	d182      	bne.n	8014c20 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3b4>
 8014d1a:	429d      	cmp	r5, r3
 8014d1c:	dd80      	ble.n	8014c20 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3b4>
 8014d1e:	1c48      	adds	r0, r1, #1
 8014d20:	f6ff af7e 	blt.w	8014c20 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3b4>
 8014d24:	9808      	ldr	r0, [sp, #32]
 8014d26:	4288      	cmp	r0, r1
 8014d28:	f77f af7a 	ble.w	8014c20 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3b4>
 8014d2c:	e9cd 3102 	strd	r3, r1, [sp, #8]
 8014d30:	e9cd 2c04 	strd	r2, ip, [sp, #16]
 8014d34:	e9cd 5000 	strd	r5, r0, [sp]
 8014d38:	e9dd 3209 	ldrd	r3, r2, [sp, #36]	; 0x24
 8014d3c:	4639      	mov	r1, r7
 8014d3e:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8014d40:	f7ff fbf2 	bl	8014528 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 8014d44:	e76c      	b.n	8014c20 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3b4>
 8014d46:	bf00      	nop
 8014d48:	fffff800 	.word	0xfffff800
 8014d4c:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8014d4e:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8014d52:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8014d54:	141f      	asrs	r7, r3, #16
 8014d56:	f3c3 3003 	ubfx	r0, r3, #12, #4
 8014d5a:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8014d5c:	141b      	asrs	r3, r3, #16
 8014d5e:	fb05 3707 	mla	r7, r5, r7, r3
 8014d62:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8014d64:	fa1f fc82 	uxth.w	ip, r2
 8014d68:	eb03 0a07 	add.w	sl, r3, r7
 8014d6c:	ea4f 110c 	mov.w	r1, ip, lsl #4
 8014d70:	f813 9007 	ldrb.w	r9, [r3, r7]
 8014d74:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8014d78:	f5c1 7380 	rsb	r3, r1, #256	; 0x100
 8014d7c:	b29b      	uxth	r3, r3
 8014d7e:	2800      	cmp	r0, #0
 8014d80:	f000 8132 	beq.w	8014fe8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x77c>
 8014d84:	f81a 4005 	ldrb.w	r4, [sl, r5]
 8014d88:	940d      	str	r4, [sp, #52]	; 0x34
 8014d8a:	eb0a 0b05 	add.w	fp, sl, r5
 8014d8e:	fa1f fa80 	uxth.w	sl, r0
 8014d92:	fb0a fc0c 	mul.w	ip, sl, ip
 8014d96:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 8014d9a:	fa1f fa8a 	uxth.w	sl, sl
 8014d9e:	eba1 010c 	sub.w	r1, r1, ip
 8014da2:	eba3 030a 	sub.w	r3, r3, sl
 8014da6:	b289      	uxth	r1, r1
 8014da8:	fb08 f101 	mul.w	r1, r8, r1
 8014dac:	b29b      	uxth	r3, r3
 8014dae:	fb09 1303 	mla	r3, r9, r3, r1
 8014db2:	990d      	ldr	r1, [sp, #52]	; 0x34
 8014db4:	f89b 4001 	ldrb.w	r4, [fp, #1]
 8014db8:	940e      	str	r4, [sp, #56]	; 0x38
 8014dba:	fb0a 3301 	mla	r3, sl, r1, r3
 8014dbe:	fb0c 3304 	mla	r3, ip, r4, r3
 8014dc2:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8014dc6:	2b00      	cmp	r3, #0
 8014dc8:	f000 8100 	beq.w	8014fcc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x760>
 8014dcc:	9909      	ldr	r1, [sp, #36]	; 0x24
 8014dce:	9c09      	ldr	r4, [sp, #36]	; 0x24
 8014dd0:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8014dd4:	eb01 0147 	add.w	r1, r1, r7, lsl #1
 8014dd8:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 8014ddc:	f000 8109 	beq.w	8014ff2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x786>
 8014de0:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 8014de4:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 8014de8:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8014dec:	fb09 f707 	mul.w	r7, r9, r7
 8014df0:	fb0a fc0c 	mul.w	ip, sl, ip
 8014df4:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 8014df8:	f107 0b20 	add.w	fp, r7, #32
 8014dfc:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 8014e00:	44cc      	add	ip, r9
 8014e02:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 8014e06:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8014e0a:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8014e0e:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8014e12:	ea4c 0909 	orr.w	r9, ip, r9
 8014e16:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8014e1a:	884f      	ldrh	r7, [r1, #2]
 8014e1c:	d019      	beq.n	8014e52 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x5e6>
 8014e1e:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 8014e22:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 8014e26:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8014e2a:	fb08 f807 	mul.w	r8, r8, r7
 8014e2e:	fb0a fc0c 	mul.w	ip, sl, ip
 8014e32:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 8014e36:	f108 0b20 	add.w	fp, r8, #32
 8014e3a:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 8014e3e:	44bc      	add	ip, r7
 8014e40:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 8014e44:	0a3f      	lsrs	r7, r7, #8
 8014e46:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8014e4a:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8014e4e:	ea4c 0707 	orr.w	r7, ip, r7
 8014e52:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 8014e56:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 8014e5a:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8014e5e:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8014e62:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8014e66:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8014e6a:	ea4c 0909 	orr.w	r9, ip, r9
 8014e6e:	ea4a 0707 	orr.w	r7, sl, r7
 8014e72:	2800      	cmp	r0, #0
 8014e74:	f000 80bf 	beq.w	8014ff6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x78a>
 8014e78:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8014e7a:	eb01 0c04 	add.w	ip, r1, r4
 8014e7e:	f831 8004 	ldrh.w	r8, [r1, r4]
 8014e82:	990d      	ldr	r1, [sp, #52]	; 0x34
 8014e84:	29ff      	cmp	r1, #255	; 0xff
 8014e86:	d01a      	beq.n	8014ebe <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x652>
 8014e88:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8014e8a:	f428 61fc 	bic.w	r1, r8, #2016	; 0x7e0
 8014e8e:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 8014e92:	fb04 fb08 	mul.w	fp, r4, r8
 8014e96:	ea4f 0ae4 	mov.w	sl, r4, asr #3
 8014e9a:	fb0a fa01 	mul.w	sl, sl, r1
 8014e9e:	f10b 0120 	add.w	r1, fp, #32
 8014ea2:	ea06 185a 	and.w	r8, r6, sl, lsr #5
 8014ea6:	eb01 211b 	add.w	r1, r1, fp, lsr #8
 8014eaa:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 8014eae:	44d0      	add	r8, sl
 8014eb0:	0a09      	lsrs	r1, r1, #8
 8014eb2:	ea06 1858 	and.w	r8, r6, r8, lsr #5
 8014eb6:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8014eba:	ea48 0801 	orr.w	r8, r8, r1
 8014ebe:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8014ec0:	f8bc 1002 	ldrh.w	r1, [ip, #2]
 8014ec4:	2cff      	cmp	r4, #255	; 0xff
 8014ec6:	d01a      	beq.n	8014efe <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x692>
 8014ec8:	f421 6cfc 	bic.w	ip, r1, #2016	; 0x7e0
 8014ecc:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8014ed0:	fb04 fb01 	mul.w	fp, r4, r1
 8014ed4:	ea4f 0ae4 	mov.w	sl, r4, asr #3
 8014ed8:	fb0a fa0c 	mul.w	sl, sl, ip
 8014edc:	f10b 0c20 	add.w	ip, fp, #32
 8014ee0:	ea06 115a 	and.w	r1, r6, sl, lsr #5
 8014ee4:	eb0c 2c1b 	add.w	ip, ip, fp, lsr #8
 8014ee8:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 8014eec:	4451      	add	r1, sl
 8014eee:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8014ef2:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 8014ef6:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8014efa:	ea41 010c 	orr.w	r1, r1, ip
 8014efe:	fb10 fc02 	smulbb	ip, r0, r2
 8014f02:	ea4f 0cec 	mov.w	ip, ip, asr #3
 8014f06:	f1c0 0a10 	rsb	sl, r0, #16
 8014f0a:	ebaa 0a02 	sub.w	sl, sl, r2
 8014f0e:	ea4f 4b08 	mov.w	fp, r8, lsl #16
 8014f12:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 8014f16:	437a      	muls	r2, r7
 8014f18:	eb0c 0a4a 	add.w	sl, ip, sl, lsl #1
 8014f1c:	040f      	lsls	r7, r1, #16
 8014f1e:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8014f22:	f428 68fc 	bic.w	r8, r8, #2016	; 0x7e0
 8014f26:	fb09 220a 	mla	r2, r9, sl, r2
 8014f2a:	ea4b 0808 	orr.w	r8, fp, r8
 8014f2e:	ebcc 0040 	rsb	r0, ip, r0, lsl #1
 8014f32:	f007 67fc 	and.w	r7, r7, #132120576	; 0x7e00000
 8014f36:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8014f3a:	fb00 2208 	mla	r2, r0, r8, r2
 8014f3e:	4339      	orrs	r1, r7
 8014f40:	fb0c 2201 	mla	r2, ip, r1, r2
 8014f44:	ea4f 5952 	mov.w	r9, r2, lsr #21
 8014f48:	0952      	lsrs	r2, r2, #5
 8014f4a:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8014f4e:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8014f52:	ea49 0202 	orr.w	r2, r9, r2
 8014f56:	2bff      	cmp	r3, #255	; 0xff
 8014f58:	b292      	uxth	r2, r2
 8014f5a:	d05d      	beq.n	8015018 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7ac>
 8014f5c:	f8be 8000 	ldrh.w	r8, [lr]
 8014f60:	4c31      	ldr	r4, [pc, #196]	; (8015028 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7bc>)
 8014f62:	43db      	mvns	r3, r3
 8014f64:	ea4f 2028 	mov.w	r0, r8, asr #8
 8014f68:	fa5f fc83 	uxtb.w	ip, r3
 8014f6c:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8014f70:	ea4f 07e8 	mov.w	r7, r8, asr #3
 8014f74:	fb00 f00c 	mul.w	r0, r0, ip
 8014f78:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8014f7c:	fb07 f10c 	mul.w	r1, r7, ip
 8014f80:	1c47      	adds	r7, r0, #1
 8014f82:	eb07 2010 	add.w	r0, r7, r0, lsr #8
 8014f86:	1217      	asrs	r7, r2, #8
 8014f88:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8014f8c:	eb07 2010 	add.w	r0, r7, r0, lsr #8
 8014f90:	1c4f      	adds	r7, r1, #1
 8014f92:	eb07 2711 	add.w	r7, r7, r1, lsr #8
 8014f96:	10d1      	asrs	r1, r2, #3
 8014f98:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8014f9c:	ea4f 03c8 	mov.w	r3, r8, lsl #3
 8014fa0:	eb01 2117 	add.w	r1, r1, r7, lsr #8
 8014fa4:	b2db      	uxtb	r3, r3
 8014fa6:	00c9      	lsls	r1, r1, #3
 8014fa8:	fb03 f30c 	mul.w	r3, r3, ip
 8014fac:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8014fb0:	ea04 2000 	and.w	r0, r4, r0, lsl #8
 8014fb4:	4308      	orrs	r0, r1
 8014fb6:	00d2      	lsls	r2, r2, #3
 8014fb8:	1c59      	adds	r1, r3, #1
 8014fba:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 8014fbe:	b2d2      	uxtb	r2, r2
 8014fc0:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 8014fc4:	ea40 00d3 	orr.w	r0, r0, r3, lsr #3
 8014fc8:	f8ae 0000 	strh.w	r0, [lr]
 8014fcc:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8014fce:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8014fd0:	4413      	add	r3, r2
 8014fd2:	9327      	str	r3, [sp, #156]	; 0x9c
 8014fd4:	9a28      	ldr	r2, [sp, #160]	; 0xa0
 8014fd6:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8014fd8:	441a      	add	r2, r3
 8014fda:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8014fdc:	9228      	str	r2, [sp, #160]	; 0xa0
 8014fde:	3b01      	subs	r3, #1
 8014fe0:	f10e 0e02 	add.w	lr, lr, #2
 8014fe4:	9311      	str	r3, [sp, #68]	; 0x44
 8014fe6:	e4a5      	b.n	8014934 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xc8>
 8014fe8:	fb08 f101 	mul.w	r1, r8, r1
 8014fec:	fb09 1303 	mla	r3, r9, r3, r1
 8014ff0:	e6e7      	b.n	8014dc2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x556>
 8014ff2:	46b9      	mov	r9, r7
 8014ff4:	e70f      	b.n	8014e16 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x5aa>
 8014ff6:	f1c2 0110 	rsb	r1, r2, #16
 8014ffa:	437a      	muls	r2, r7
 8014ffc:	fb09 2901 	mla	r9, r9, r1, r2
 8015000:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8015004:	ea4f 5059 	mov.w	r0, r9, lsr #21
 8015008:	ea4f 1259 	mov.w	r2, r9, lsr #5
 801500c:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8015010:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8015014:	4302      	orrs	r2, r0
 8015016:	e79e      	b.n	8014f56 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6ea>
 8015018:	f8ae 2000 	strh.w	r2, [lr]
 801501c:	e7d6      	b.n	8014fcc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x760>
 801501e:	b015      	add	sp, #84	; 0x54
 8015020:	ecbd 8b08 	vpop	{d8-d11}
 8015024:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015028:	fffff800 	.word	0xfffff800

0801502c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>:
 801502c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8015030:	e9dd 4c09 	ldrd	r4, ip, [sp, #36]	; 0x24
 8015034:	fb0c 4e03 	mla	lr, ip, r3, r4
 8015038:	f1bc 0f00 	cmp.w	ip, #0
 801503c:	f9bd a020 	ldrsh.w	sl, [sp, #32]
 8015040:	f89d 702c 	ldrb.w	r7, [sp, #44]	; 0x2c
 8015044:	f89d 6030 	ldrb.w	r6, [sp, #48]	; 0x30
 8015048:	f89d 5034 	ldrb.w	r5, [sp, #52]	; 0x34
 801504c:	8808      	ldrh	r0, [r1, #0]
 801504e:	eb02 084e 	add.w	r8, r2, lr, lsl #1
 8015052:	db2f      	blt.n	80150b4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x88>
 8015054:	45e2      	cmp	sl, ip
 8015056:	dd2d      	ble.n	80150b4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x88>
 8015058:	2c00      	cmp	r4, #0
 801505a:	db29      	blt.n	80150b0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x84>
 801505c:	42a3      	cmp	r3, r4
 801505e:	dd27      	ble.n	80150b0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x84>
 8015060:	f832 901e 	ldrh.w	r9, [r2, lr, lsl #1]
 8015064:	1c62      	adds	r2, r4, #1
 8015066:	d428      	bmi.n	80150ba <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x8e>
 8015068:	4293      	cmp	r3, r2
 801506a:	dd26      	ble.n	80150ba <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x8e>
 801506c:	b32f      	cbz	r7, 80150ba <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x8e>
 801506e:	f8b8 e002 	ldrh.w	lr, [r8, #2]
 8015072:	f11c 0c01 	adds.w	ip, ip, #1
 8015076:	d424      	bmi.n	80150c2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x96>
 8015078:	45e2      	cmp	sl, ip
 801507a:	dd22      	ble.n	80150c2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x96>
 801507c:	2e00      	cmp	r6, #0
 801507e:	f000 809c 	beq.w	80151ba <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18e>
 8015082:	2c00      	cmp	r4, #0
 8015084:	db1b      	blt.n	80150be <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x92>
 8015086:	42a3      	cmp	r3, r4
 8015088:	dd19      	ble.n	80150be <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x92>
 801508a:	f838 c013 	ldrh.w	ip, [r8, r3, lsl #1]
 801508e:	3401      	adds	r4, #1
 8015090:	d41a      	bmi.n	80150c8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x9c>
 8015092:	42a3      	cmp	r3, r4
 8015094:	dd18      	ble.n	80150c8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x9c>
 8015096:	b1cf      	cbz	r7, 80150cc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0xa0>
 8015098:	3301      	adds	r3, #1
 801509a:	f838 3013 	ldrh.w	r3, [r8, r3, lsl #1]
 801509e:	2f0f      	cmp	r7, #15
 80150a0:	d915      	bls.n	80150ce <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0xa2>
 80150a2:	4b49      	ldr	r3, [pc, #292]	; (80151c8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x19c>)
 80150a4:	4a49      	ldr	r2, [pc, #292]	; (80151cc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x1a0>)
 80150a6:	484a      	ldr	r0, [pc, #296]	; (80151d0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x1a4>)
 80150a8:	f240 11ef 	movw	r1, #495	; 0x1ef
 80150ac:	f002 ff56 	bl	8017f5c <__assert_func>
 80150b0:	4681      	mov	r9, r0
 80150b2:	e7d7      	b.n	8015064 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x38>
 80150b4:	4686      	mov	lr, r0
 80150b6:	4681      	mov	r9, r0
 80150b8:	e7db      	b.n	8015072 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x46>
 80150ba:	4686      	mov	lr, r0
 80150bc:	e7d9      	b.n	8015072 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x46>
 80150be:	4684      	mov	ip, r0
 80150c0:	e7e5      	b.n	801508e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x62>
 80150c2:	4603      	mov	r3, r0
 80150c4:	4684      	mov	ip, r0
 80150c6:	e7ea      	b.n	801509e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x72>
 80150c8:	4603      	mov	r3, r0
 80150ca:	e7e8      	b.n	801509e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x72>
 80150cc:	4603      	mov	r3, r0
 80150ce:	2e0f      	cmp	r6, #15
 80150d0:	d8e7      	bhi.n	80150a2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x76>
 80150d2:	ea4f 4409 	mov.w	r4, r9, lsl #16
 80150d6:	fb17 f806 	smulbb	r8, r7, r6
 80150da:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 80150de:	ea4f 4a0e 	mov.w	sl, lr, lsl #16
 80150e2:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 80150e6:	ea4f 08e8 	mov.w	r8, r8, asr #3
 80150ea:	ea44 0909 	orr.w	r9, r4, r9
 80150ee:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80150f2:	f1c6 0410 	rsb	r4, r6, #16
 80150f6:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 80150fa:	1be4      	subs	r4, r4, r7
 80150fc:	041a      	lsls	r2, r3, #16
 80150fe:	ebc8 0747 	rsb	r7, r8, r7, lsl #1
 8015102:	ea4a 0e0e 	orr.w	lr, sl, lr
 8015106:	fb07 fe0e 	mul.w	lr, r7, lr
 801510a:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801510e:	eb08 0444 	add.w	r4, r8, r4, lsl #1
 8015112:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8015116:	fb04 e409 	mla	r4, r4, r9, lr
 801511a:	4313      	orrs	r3, r2
 801511c:	ea4f 420c 	mov.w	r2, ip, lsl #16
 8015120:	fb08 4303 	mla	r3, r8, r3, r4
 8015124:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8015128:	f42c 64fc 	bic.w	r4, ip, #2016	; 0x7e0
 801512c:	4322      	orrs	r2, r4
 801512e:	ebc8 0646 	rsb	r6, r8, r6, lsl #1
 8015132:	fb06 3202 	mla	r2, r6, r2, r3
 8015136:	0d53      	lsrs	r3, r2, #21
 8015138:	0952      	lsrs	r2, r2, #5
 801513a:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801513e:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8015142:	431a      	orrs	r2, r3
 8015144:	b293      	uxth	r3, r2
 8015146:	b2af      	uxth	r7, r5
 8015148:	1202      	asrs	r2, r0, #8
 801514a:	43ed      	mvns	r5, r5
 801514c:	b2ed      	uxtb	r5, r5
 801514e:	ea4f 2c23 	mov.w	ip, r3, asr #8
 8015152:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8015156:	fb12 f205 	smulbb	r2, r2, r5
 801515a:	10c6      	asrs	r6, r0, #3
 801515c:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8015160:	fb0c 2c07 	mla	ip, ip, r7, r2
 8015164:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8015168:	10da      	asrs	r2, r3, #3
 801516a:	fb16 f605 	smulbb	r6, r6, r5
 801516e:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8015172:	fb02 6207 	mla	r2, r2, r7, r6
 8015176:	b296      	uxth	r6, r2
 8015178:	00c2      	lsls	r2, r0, #3
 801517a:	00dc      	lsls	r4, r3, #3
 801517c:	b2d2      	uxtb	r2, r2
 801517e:	b2e4      	uxtb	r4, r4
 8015180:	fb12 f205 	smulbb	r2, r2, r5
 8015184:	fb04 2207 	mla	r2, r4, r7, r2
 8015188:	fa1f fc8c 	uxth.w	ip, ip
 801518c:	b292      	uxth	r2, r2
 801518e:	f10c 0301 	add.w	r3, ip, #1
 8015192:	1c50      	adds	r0, r2, #1
 8015194:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 8015198:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 801519c:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 80151a0:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 80151a4:	4313      	orrs	r3, r2
 80151a6:	1c72      	adds	r2, r6, #1
 80151a8:	eb02 2216 	add.w	r2, r2, r6, lsr #8
 80151ac:	0952      	lsrs	r2, r2, #5
 80151ae:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80151b2:	4313      	orrs	r3, r2
 80151b4:	800b      	strh	r3, [r1, #0]
 80151b6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80151ba:	2f0f      	cmp	r7, #15
 80151bc:	f63f af71 	bhi.w	80150a2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x76>
 80151c0:	4603      	mov	r3, r0
 80151c2:	4684      	mov	ip, r0
 80151c4:	e785      	b.n	80150d2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0xa6>
 80151c6:	bf00      	nop
 80151c8:	0801bc7d 	.word	0x0801bc7d
 80151cc:	0801c27e 	.word	0x0801c27e
 80151d0:	0801bd05 	.word	0x0801bd05

080151d4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 80151d4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80151d8:	ed2d 8b08 	vpush	{d8-d11}
 80151dc:	b095      	sub	sp, #84	; 0x54
 80151de:	e9dd 4627 	ldrd	r4, r6, [sp, #156]	; 0x9c
 80151e2:	9306      	str	r3, [sp, #24]
 80151e4:	f9bd 30bc 	ldrsh.w	r3, [sp, #188]	; 0xbc
 80151e8:	9212      	str	r2, [sp, #72]	; 0x48
 80151ea:	9307      	str	r3, [sp, #28]
 80151ec:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 80151ee:	f89d 30c4 	ldrb.w	r3, [sp, #196]	; 0xc4
 80151f2:	930c      	str	r3, [sp, #48]	; 0x30
 80151f4:	910b      	str	r1, [sp, #44]	; 0x2c
 80151f6:	e9dd 132c 	ldrd	r1, r3, [sp, #176]	; 0xb0
 80151fa:	9013      	str	r0, [sp, #76]	; 0x4c
 80151fc:	6850      	ldr	r0, [r2, #4]
 80151fe:	6812      	ldr	r2, [r2, #0]
 8015200:	f9bd 70b8 	ldrsh.w	r7, [sp, #184]	; 0xb8
 8015204:	fb00 1303 	mla	r3, r0, r3, r1
 8015208:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 801520c:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801520e:	681b      	ldr	r3, [r3, #0]
 8015210:	9309      	str	r3, [sp, #36]	; 0x24
 8015212:	007b      	lsls	r3, r7, #1
 8015214:	930a      	str	r3, [sp, #40]	; 0x28
 8015216:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8015218:	43db      	mvns	r3, r3
 801521a:	b2db      	uxtb	r3, r3
 801521c:	eeb0 aa40 	vmov.f32	s20, s0
 8015220:	eef0 9a60 	vmov.f32	s19, s1
 8015224:	eeb0 9a41 	vmov.f32	s18, s2
 8015228:	eeb0 8a62 	vmov.f32	s16, s5
 801522c:	eef0 8a43 	vmov.f32	s17, s6
 8015230:	eef0 ba44 	vmov.f32	s23, s8
 8015234:	eeb0 ba64 	vmov.f32	s22, s9
 8015238:	eef0 aa45 	vmov.f32	s21, s10
 801523c:	9308      	str	r3, [sp, #32]
 801523e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8015240:	2b00      	cmp	r3, #0
 8015242:	dc03      	bgt.n	801524c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x78>
 8015244:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8015246:	2b00      	cmp	r3, #0
 8015248:	f340 81f3 	ble.w	8015632 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x45e>
 801524c:	9b06      	ldr	r3, [sp, #24]
 801524e:	2b00      	cmp	r3, #0
 8015250:	f340 80fa 	ble.w	8015448 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x274>
 8015254:	1422      	asrs	r2, r4, #16
 8015256:	ea4f 4326 	mov.w	r3, r6, asr #16
 801525a:	d42b      	bmi.n	80152b4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe0>
 801525c:	1c51      	adds	r1, r2, #1
 801525e:	428f      	cmp	r7, r1
 8015260:	dd2b      	ble.n	80152ba <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe6>
 8015262:	2b00      	cmp	r3, #0
 8015264:	db29      	blt.n	80152ba <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe6>
 8015266:	9807      	ldr	r0, [sp, #28]
 8015268:	1c59      	adds	r1, r3, #1
 801526a:	4288      	cmp	r0, r1
 801526c:	dd25      	ble.n	80152ba <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe6>
 801526e:	9b06      	ldr	r3, [sp, #24]
 8015270:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8015272:	3b01      	subs	r3, #1
 8015274:	fb02 4203 	mla	r2, r2, r3, r4
 8015278:	1412      	asrs	r2, r2, #16
 801527a:	d428      	bmi.n	80152ce <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfa>
 801527c:	3201      	adds	r2, #1
 801527e:	4297      	cmp	r7, r2
 8015280:	dd25      	ble.n	80152ce <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfa>
 8015282:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 8015284:	fb02 6303 	mla	r3, r2, r3, r6
 8015288:	141b      	asrs	r3, r3, #16
 801528a:	d420      	bmi.n	80152ce <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfa>
 801528c:	9a07      	ldr	r2, [sp, #28]
 801528e:	3301      	adds	r3, #1
 8015290:	429a      	cmp	r2, r3
 8015292:	dd1c      	ble.n	80152ce <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfa>
 8015294:	f8dd 8018 	ldr.w	r8, [sp, #24]
 8015298:	f8bd a030 	ldrh.w	sl, [sp, #48]	; 0x30
 801529c:	f8cd 9034 	str.w	r9, [sp, #52]	; 0x34
 80152a0:	f1b8 0f00 	cmp.w	r8, #0
 80152a4:	f300 8129 	bgt.w	80154fa <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x326>
 80152a8:	9b06      	ldr	r3, [sp, #24]
 80152aa:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 80152ae:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 80152b2:	e0cb      	b.n	801544c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x278>
 80152b4:	1c51      	adds	r1, r2, #1
 80152b6:	f040 80bd 	bne.w	8015434 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x260>
 80152ba:	42ba      	cmp	r2, r7
 80152bc:	f280 80ba 	bge.w	8015434 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x260>
 80152c0:	1c5a      	adds	r2, r3, #1
 80152c2:	f2c0 80b7 	blt.w	8015434 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x260>
 80152c6:	9a07      	ldr	r2, [sp, #28]
 80152c8:	4293      	cmp	r3, r2
 80152ca:	f280 80b3 	bge.w	8015434 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x260>
 80152ce:	f8dd b018 	ldr.w	fp, [sp, #24]
 80152d2:	46c8      	mov	r8, r9
 80152d4:	f1bb 0f00 	cmp.w	fp, #0
 80152d8:	dde6      	ble.n	80152a8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xd4>
 80152da:	1421      	asrs	r1, r4, #16
 80152dc:	ea4f 4226 	mov.w	r2, r6, asr #16
 80152e0:	f3c4 3303 	ubfx	r3, r4, #12, #4
 80152e4:	f3c6 3003 	ubfx	r0, r6, #12, #4
 80152e8:	f100 80ef 	bmi.w	80154ca <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2f6>
 80152ec:	f101 0c01 	add.w	ip, r1, #1
 80152f0:	4567      	cmp	r7, ip
 80152f2:	f340 80ec 	ble.w	80154ce <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2fa>
 80152f6:	2a00      	cmp	r2, #0
 80152f8:	f2c0 80e9 	blt.w	80154ce <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2fa>
 80152fc:	9d07      	ldr	r5, [sp, #28]
 80152fe:	f102 0c01 	add.w	ip, r2, #1
 8015302:	4565      	cmp	r5, ip
 8015304:	f340 80e3 	ble.w	80154ce <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2fa>
 8015308:	fb02 1207 	mla	r2, r2, r7, r1
 801530c:	9909      	ldr	r1, [sp, #36]	; 0x24
 801530e:	eb01 0e42 	add.w	lr, r1, r2, lsl #1
 8015312:	f831 c012 	ldrh.w	ip, [r1, r2, lsl #1]
 8015316:	f8be 1002 	ldrh.w	r1, [lr, #2]
 801531a:	b138      	cbz	r0, 801532c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x158>
 801531c:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801531e:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 8015320:	4472      	add	r2, lr
 8015322:	f83e 5005 	ldrh.w	r5, [lr, r5]
 8015326:	8852      	ldrh	r2, [r2, #2]
 8015328:	950e      	str	r5, [sp, #56]	; 0x38
 801532a:	920f      	str	r2, [sp, #60]	; 0x3c
 801532c:	ea4f 4e0c 	mov.w	lr, ip, lsl #16
 8015330:	fb13 f200 	smulbb	r2, r3, r0
 8015334:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8015338:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 801533c:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8015340:	10d2      	asrs	r2, r2, #3
 8015342:	ea4e 0c0c 	orr.w	ip, lr, ip
 8015346:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801534a:	f1c0 0e10 	rsb	lr, r0, #16
 801534e:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8015352:	ebae 0e03 	sub.w	lr, lr, r3
 8015356:	ea4a 0101 	orr.w	r1, sl, r1
 801535a:	ebc2 0343 	rsb	r3, r2, r3, lsl #1
 801535e:	4359      	muls	r1, r3
 8015360:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8015362:	9d08      	ldr	r5, [sp, #32]
 8015364:	eb02 0e4e 	add.w	lr, r2, lr, lsl #1
 8015368:	fb0e 1e0c 	mla	lr, lr, ip, r1
 801536c:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8015370:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8015374:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8015378:	ea4c 0c03 	orr.w	ip, ip, r3
 801537c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801537e:	990e      	ldr	r1, [sp, #56]	; 0x38
 8015380:	041b      	lsls	r3, r3, #16
 8015382:	fb02 ec0c 	mla	ip, r2, ip, lr
 8015386:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801538a:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 801538e:	ea43 030e 	orr.w	r3, r3, lr
 8015392:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 8015396:	fb02 c203 	mla	r2, r2, r3, ip
 801539a:	0d53      	lsrs	r3, r2, #21
 801539c:	0952      	lsrs	r2, r2, #5
 801539e:	f8b8 c000 	ldrh.w	ip, [r8]
 80153a2:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80153a6:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80153aa:	431a      	orrs	r2, r3
 80153ac:	b292      	uxth	r2, r2
 80153ae:	ea4f 212c 	mov.w	r1, ip, asr #8
 80153b2:	f8bd 3030 	ldrh.w	r3, [sp, #48]	; 0x30
 80153b6:	1210      	asrs	r0, r2, #8
 80153b8:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 80153bc:	fb11 f105 	smulbb	r1, r1, r5
 80153c0:	ea4f 0eec 	mov.w	lr, ip, asr #3
 80153c4:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 80153c8:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 80153cc:	fb00 1003 	mla	r0, r0, r3, r1
 80153d0:	fa5f fc8c 	uxtb.w	ip, ip
 80153d4:	10d1      	asrs	r1, r2, #3
 80153d6:	00d2      	lsls	r2, r2, #3
 80153d8:	fb1c fc05 	smulbb	ip, ip, r5
 80153dc:	b2d2      	uxtb	r2, r2
 80153de:	fb02 c203 	mla	r2, r2, r3, ip
 80153e2:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 80153e6:	b280      	uxth	r0, r0
 80153e8:	b292      	uxth	r2, r2
 80153ea:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 80153ee:	fb1e fe05 	smulbb	lr, lr, r5
 80153f2:	fb01 e103 	mla	r1, r1, r3, lr
 80153f6:	f102 0c01 	add.w	ip, r2, #1
 80153fa:	1c43      	adds	r3, r0, #1
 80153fc:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8015400:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 8015404:	b289      	uxth	r1, r1
 8015406:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801540a:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 801540e:	4313      	orrs	r3, r2
 8015410:	1c4a      	adds	r2, r1, #1
 8015412:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8015416:	0949      	lsrs	r1, r1, #5
 8015418:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801541c:	430b      	orrs	r3, r1
 801541e:	f8a8 3000 	strh.w	r3, [r8]
 8015422:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8015424:	441c      	add	r4, r3
 8015426:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8015428:	f108 0802 	add.w	r8, r8, #2
 801542c:	441e      	add	r6, r3
 801542e:	f10b 3bff 	add.w	fp, fp, #4294967295
 8015432:	e74f      	b.n	80152d4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x100>
 8015434:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8015436:	441c      	add	r4, r3
 8015438:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801543a:	441e      	add	r6, r3
 801543c:	9b06      	ldr	r3, [sp, #24]
 801543e:	3b01      	subs	r3, #1
 8015440:	9306      	str	r3, [sp, #24]
 8015442:	f109 0902 	add.w	r9, r9, #2
 8015446:	e701      	b.n	801524c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x78>
 8015448:	f47f af11 	bne.w	801526e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9a>
 801544c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801544e:	2b00      	cmp	r3, #0
 8015450:	f340 80ef 	ble.w	8015632 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x45e>
 8015454:	ee3a aa2b 	vadd.f32	s20, s20, s23
 8015458:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801545c:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 8015460:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8015462:	ee79 9a8b 	vadd.f32	s19, s19, s22
 8015466:	ee39 9a2a 	vadd.f32	s18, s18, s21
 801546a:	ee29 7aa7 	vmul.f32	s14, s19, s15
 801546e:	eef0 6a48 	vmov.f32	s13, s16
 8015472:	ee69 7a27 	vmul.f32	s15, s18, s15
 8015476:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801547a:	ee37 8a48 	vsub.f32	s16, s14, s16
 801547e:	ee16 4a90 	vmov	r4, s13
 8015482:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8015486:	eef0 6a68 	vmov.f32	s13, s17
 801548a:	ee77 8ae8 	vsub.f32	s17, s15, s17
 801548e:	ee18 2a10 	vmov	r2, s16
 8015492:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8015496:	fb92 f3f3 	sdiv	r3, r2, r3
 801549a:	ee18 2a90 	vmov	r2, s17
 801549e:	9329      	str	r3, [sp, #164]	; 0xa4
 80154a0:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80154a2:	fb92 f3f3 	sdiv	r3, r2, r3
 80154a6:	932a      	str	r3, [sp, #168]	; 0xa8
 80154a8:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80154aa:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80154ac:	3b01      	subs	r3, #1
 80154ae:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80154b2:	930b      	str	r3, [sp, #44]	; 0x2c
 80154b4:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80154b6:	bf08      	it	eq
 80154b8:	4613      	moveq	r3, r2
 80154ba:	ee16 6a90 	vmov	r6, s13
 80154be:	9306      	str	r3, [sp, #24]
 80154c0:	eef0 8a67 	vmov.f32	s17, s15
 80154c4:	eeb0 8a47 	vmov.f32	s16, s14
 80154c8:	e6b9      	b.n	801523e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6a>
 80154ca:	1c4d      	adds	r5, r1, #1
 80154cc:	d1a9      	bne.n	8015422 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x24e>
 80154ce:	428f      	cmp	r7, r1
 80154d0:	dda7      	ble.n	8015422 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x24e>
 80154d2:	1c55      	adds	r5, r2, #1
 80154d4:	dba5      	blt.n	8015422 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x24e>
 80154d6:	9d07      	ldr	r5, [sp, #28]
 80154d8:	4295      	cmp	r5, r2
 80154da:	dda2      	ble.n	8015422 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x24e>
 80154dc:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 80154de:	9101      	str	r1, [sp, #4]
 80154e0:	e9cd 2302 	strd	r2, r3, [sp, #8]
 80154e4:	9b07      	ldr	r3, [sp, #28]
 80154e6:	9300      	str	r3, [sp, #0]
 80154e8:	e9cd 0504 	strd	r0, r5, [sp, #16]
 80154ec:	463b      	mov	r3, r7
 80154ee:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80154f0:	9813      	ldr	r0, [sp, #76]	; 0x4c
 80154f2:	4641      	mov	r1, r8
 80154f4:	f7ff fd9a 	bl	801502c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>
 80154f8:	e793      	b.n	8015422 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x24e>
 80154fa:	1422      	asrs	r2, r4, #16
 80154fc:	1431      	asrs	r1, r6, #16
 80154fe:	fb07 2101 	mla	r1, r7, r1, r2
 8015502:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8015504:	9809      	ldr	r0, [sp, #36]	; 0x24
 8015506:	eb02 0241 	add.w	r2, r2, r1, lsl #1
 801550a:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 801550e:	f830 c011 	ldrh.w	ip, [r0, r1, lsl #1]
 8015512:	8851      	ldrh	r1, [r2, #2]
 8015514:	f3c4 3303 	ubfx	r3, r4, #12, #4
 8015518:	f1be 0f00 	cmp.w	lr, #0
 801551c:	d006      	beq.n	801552c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x358>
 801551e:	980a      	ldr	r0, [sp, #40]	; 0x28
 8015520:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 8015522:	1810      	adds	r0, r2, r0
 8015524:	5b52      	ldrh	r2, [r2, r5]
 8015526:	9210      	str	r2, [sp, #64]	; 0x40
 8015528:	8842      	ldrh	r2, [r0, #2]
 801552a:	9211      	str	r2, [sp, #68]	; 0x44
 801552c:	ea4f 400c 	mov.w	r0, ip, lsl #16
 8015530:	fb13 f20e 	smulbb	r2, r3, lr
 8015534:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8015538:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 801553c:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8015540:	10d2      	asrs	r2, r2, #3
 8015542:	ea40 000c 	orr.w	r0, r0, ip
 8015546:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801554a:	f1ce 0c10 	rsb	ip, lr, #16
 801554e:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8015552:	ebac 0c03 	sub.w	ip, ip, r3
 8015556:	ea4b 0101 	orr.w	r1, fp, r1
 801555a:	ebc2 0343 	rsb	r3, r2, r3, lsl #1
 801555e:	4359      	muls	r1, r3
 8015560:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8015562:	9d08      	ldr	r5, [sp, #32]
 8015564:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 8015568:	fb0c 1c00 	mla	ip, ip, r0, r1
 801556c:	ea4f 4b03 	mov.w	fp, r3, lsl #16
 8015570:	f423 60fc 	bic.w	r0, r3, #2016	; 0x7e0
 8015574:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8015576:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801557a:	ea4b 0000 	orr.w	r0, fp, r0
 801557e:	ea4f 4b03 	mov.w	fp, r3, lsl #16
 8015582:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8015586:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801558a:	fb02 c000 	mla	r0, r2, r0, ip
 801558e:	ea4b 0b03 	orr.w	fp, fp, r3
 8015592:	ebc2 024e 	rsb	r2, r2, lr, lsl #1
 8015596:	fb02 0b0b 	mla	fp, r2, fp, r0
 801559a:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801559c:	ea4f 515b 	mov.w	r1, fp, lsr #21
 80155a0:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 80155a4:	8812      	ldrh	r2, [r2, #0]
 80155a6:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80155aa:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 80155ae:	ea41 0b0b 	orr.w	fp, r1, fp
 80155b2:	fa1f f38b 	uxth.w	r3, fp
 80155b6:	1211      	asrs	r1, r2, #8
 80155b8:	1218      	asrs	r0, r3, #8
 80155ba:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 80155be:	fb11 f105 	smulbb	r1, r1, r5
 80155c2:	ea4f 0ce2 	mov.w	ip, r2, asr #3
 80155c6:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 80155ca:	00d2      	lsls	r2, r2, #3
 80155cc:	fb00 100a 	mla	r0, r0, sl, r1
 80155d0:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 80155d4:	10d9      	asrs	r1, r3, #3
 80155d6:	b2d2      	uxtb	r2, r2
 80155d8:	00db      	lsls	r3, r3, #3
 80155da:	fb1c fc05 	smulbb	ip, ip, r5
 80155de:	fb12 f205 	smulbb	r2, r2, r5
 80155e2:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 80155e6:	b2db      	uxtb	r3, r3
 80155e8:	b280      	uxth	r0, r0
 80155ea:	fb01 c10a 	mla	r1, r1, sl, ip
 80155ee:	fb03 230a 	mla	r3, r3, sl, r2
 80155f2:	b29b      	uxth	r3, r3
 80155f4:	b289      	uxth	r1, r1
 80155f6:	1c42      	adds	r2, r0, #1
 80155f8:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 80155fc:	f101 0c01 	add.w	ip, r1, #1
 8015600:	1c5a      	adds	r2, r3, #1
 8015602:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8015606:	eb0c 2111 	add.w	r1, ip, r1, lsr #8
 801560a:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 801560e:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8015612:	0949      	lsrs	r1, r1, #5
 8015614:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8015616:	4310      	orrs	r0, r2
 8015618:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801561c:	4308      	orrs	r0, r1
 801561e:	f823 0b02 	strh.w	r0, [r3], #2
 8015622:	930d      	str	r3, [sp, #52]	; 0x34
 8015624:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8015626:	441c      	add	r4, r3
 8015628:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801562a:	f108 38ff 	add.w	r8, r8, #4294967295
 801562e:	441e      	add	r6, r3
 8015630:	e636      	b.n	80152a0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xcc>
 8015632:	b015      	add	sp, #84	; 0x54
 8015634:	ecbd 8b08 	vpop	{d8-d11}
 8015638:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801563c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>:
 801563c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8015640:	e9dd 5607 	ldrd	r5, r6, [sp, #28]
 8015644:	fb06 5c03 	mla	ip, r6, r3, r5
 8015648:	2e00      	cmp	r6, #0
 801564a:	f9bd 8018 	ldrsh.w	r8, [sp, #24]
 801564e:	f89d 4024 	ldrb.w	r4, [sp, #36]	; 0x24
 8015652:	f89d 7028 	ldrb.w	r7, [sp, #40]	; 0x28
 8015656:	8808      	ldrh	r0, [r1, #0]
 8015658:	eb02 0e4c 	add.w	lr, r2, ip, lsl #1
 801565c:	db2e      	blt.n	80156bc <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x80>
 801565e:	45b0      	cmp	r8, r6
 8015660:	dd2c      	ble.n	80156bc <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x80>
 8015662:	2d00      	cmp	r5, #0
 8015664:	db28      	blt.n	80156b8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x7c>
 8015666:	42ab      	cmp	r3, r5
 8015668:	dd26      	ble.n	80156b8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x7c>
 801566a:	f832 c01c 	ldrh.w	ip, [r2, ip, lsl #1]
 801566e:	1c6a      	adds	r2, r5, #1
 8015670:	d427      	bmi.n	80156c2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x86>
 8015672:	4293      	cmp	r3, r2
 8015674:	dd25      	ble.n	80156c2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x86>
 8015676:	b324      	cbz	r4, 80156c2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x86>
 8015678:	f8be 2002 	ldrh.w	r2, [lr, #2]
 801567c:	3601      	adds	r6, #1
 801567e:	d424      	bmi.n	80156ca <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x8e>
 8015680:	45b0      	cmp	r8, r6
 8015682:	dd22      	ble.n	80156ca <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x8e>
 8015684:	b31f      	cbz	r7, 80156ce <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x92>
 8015686:	2d00      	cmp	r5, #0
 8015688:	db1d      	blt.n	80156c6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x8a>
 801568a:	42ab      	cmp	r3, r5
 801568c:	dd1b      	ble.n	80156c6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x8a>
 801568e:	f83e 6013 	ldrh.w	r6, [lr, r3, lsl #1]
 8015692:	3501      	adds	r5, #1
 8015694:	d405      	bmi.n	80156a2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x66>
 8015696:	42ab      	cmp	r3, r5
 8015698:	dd03      	ble.n	80156a2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x66>
 801569a:	b124      	cbz	r4, 80156a6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6a>
 801569c:	3301      	adds	r3, #1
 801569e:	f83e 0013 	ldrh.w	r0, [lr, r3, lsl #1]
 80156a2:	2c0f      	cmp	r4, #15
 80156a4:	d801      	bhi.n	80156aa <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 80156a6:	2f0f      	cmp	r7, #15
 80156a8:	d914      	bls.n	80156d4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x98>
 80156aa:	4b27      	ldr	r3, [pc, #156]	; (8015748 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x10c>)
 80156ac:	4a27      	ldr	r2, [pc, #156]	; (801574c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x110>)
 80156ae:	4828      	ldr	r0, [pc, #160]	; (8015750 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x114>)
 80156b0:	f240 11ef 	movw	r1, #495	; 0x1ef
 80156b4:	f002 fc52 	bl	8017f5c <__assert_func>
 80156b8:	4684      	mov	ip, r0
 80156ba:	e7d8      	b.n	801566e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x32>
 80156bc:	4602      	mov	r2, r0
 80156be:	4684      	mov	ip, r0
 80156c0:	e7dc      	b.n	801567c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x40>
 80156c2:	4602      	mov	r2, r0
 80156c4:	e7da      	b.n	801567c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x40>
 80156c6:	4606      	mov	r6, r0
 80156c8:	e7e3      	b.n	8015692 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x56>
 80156ca:	4606      	mov	r6, r0
 80156cc:	e7e9      	b.n	80156a2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x66>
 80156ce:	2c0f      	cmp	r4, #15
 80156d0:	d8eb      	bhi.n	80156aa <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 80156d2:	4606      	mov	r6, r0
 80156d4:	ea4f 450c 	mov.w	r5, ip, lsl #16
 80156d8:	fb14 f307 	smulbb	r3, r4, r7
 80156dc:	f005 65fc 	and.w	r5, r5, #132120576	; 0x7e00000
 80156e0:	ea4f 4e02 	mov.w	lr, r2, lsl #16
 80156e4:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 80156e8:	10db      	asrs	r3, r3, #3
 80156ea:	ea45 0c0c 	orr.w	ip, r5, ip
 80156ee:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 80156f2:	f1c7 0510 	rsb	r5, r7, #16
 80156f6:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80156fa:	1b2d      	subs	r5, r5, r4
 80156fc:	ea4e 0202 	orr.w	r2, lr, r2
 8015700:	ebc3 0444 	rsb	r4, r3, r4, lsl #1
 8015704:	eb03 0545 	add.w	r5, r3, r5, lsl #1
 8015708:	4354      	muls	r4, r2
 801570a:	fb05 450c 	mla	r5, r5, ip, r4
 801570e:	0404      	lsls	r4, r0, #16
 8015710:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8015714:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8015718:	4320      	orrs	r0, r4
 801571a:	fb03 5400 	mla	r4, r3, r0, r5
 801571e:	0430      	lsls	r0, r6, #16
 8015720:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8015724:	f426 66fc 	bic.w	r6, r6, #2016	; 0x7e0
 8015728:	ebc3 0747 	rsb	r7, r3, r7, lsl #1
 801572c:	4330      	orrs	r0, r6
 801572e:	fb07 4000 	mla	r0, r7, r0, r4
 8015732:	0d43      	lsrs	r3, r0, #21
 8015734:	0940      	lsrs	r0, r0, #5
 8015736:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801573a:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801573e:	4318      	orrs	r0, r3
 8015740:	8008      	strh	r0, [r1, #0]
 8015742:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8015746:	bf00      	nop
 8015748:	0801bc7d 	.word	0x0801bc7d
 801574c:	0801c27e 	.word	0x0801c27e
 8015750:	0801bd05 	.word	0x0801bd05

08015754 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 8015754:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015758:	ed2d 8b0a 	vpush	{d8-d12}
 801575c:	b093      	sub	sp, #76	; 0x4c
 801575e:	461d      	mov	r5, r3
 8015760:	9210      	str	r2, [sp, #64]	; 0x40
 8015762:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8015764:	f9bd 20bc 	ldrsh.w	r2, [sp, #188]	; 0xbc
 8015768:	9208      	str	r2, [sp, #32]
 801576a:	e9dd 272c 	ldrd	r2, r7, [sp, #176]	; 0xb0
 801576e:	910b      	str	r1, [sp, #44]	; 0x2c
 8015770:	6859      	ldr	r1, [r3, #4]
 8015772:	681b      	ldr	r3, [r3, #0]
 8015774:	f9bd 80b8 	ldrsh.w	r8, [sp, #184]	; 0xb8
 8015778:	9011      	str	r0, [sp, #68]	; 0x44
 801577a:	fb01 2707 	mla	r7, r1, r7, r2
 801577e:	eb03 0347 	add.w	r3, r3, r7, lsl #1
 8015782:	9307      	str	r3, [sp, #28]
 8015784:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8015786:	e9dd 4627 	ldrd	r4, r6, [sp, #156]	; 0x9c
 801578a:	681b      	ldr	r3, [r3, #0]
 801578c:	9309      	str	r3, [sp, #36]	; 0x24
 801578e:	ea4f 0348 	mov.w	r3, r8, lsl #1
 8015792:	eeb0 aa40 	vmov.f32	s20, s0
 8015796:	eef0 9a60 	vmov.f32	s19, s1
 801579a:	eeb0 9a41 	vmov.f32	s18, s2
 801579e:	eeb0 8a62 	vmov.f32	s16, s5
 80157a2:	eef0 8a43 	vmov.f32	s17, s6
 80157a6:	eeb0 ca44 	vmov.f32	s24, s8
 80157aa:	eef0 ba64 	vmov.f32	s23, s9
 80157ae:	eeb0 ba45 	vmov.f32	s22, s10
 80157b2:	930a      	str	r3, [sp, #40]	; 0x28
 80157b4:	eef7 aa00 	vmov.f32	s21, #112	; 0x3f800000  1.0
 80157b8:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80157ba:	2b00      	cmp	r3, #0
 80157bc:	dc03      	bgt.n	80157c6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x72>
 80157be:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80157c0:	2b00      	cmp	r3, #0
 80157c2:	f340 816c 	ble.w	8015a9e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x34a>
 80157c6:	2d00      	cmp	r5, #0
 80157c8:	f340 80b6 	ble.w	8015938 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1e4>
 80157cc:	1422      	asrs	r2, r4, #16
 80157ce:	ea4f 4326 	mov.w	r3, r6, asr #16
 80157d2:	d428      	bmi.n	8015826 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xd2>
 80157d4:	1c51      	adds	r1, r2, #1
 80157d6:	4588      	cmp	r8, r1
 80157d8:	dd27      	ble.n	801582a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xd6>
 80157da:	2b00      	cmp	r3, #0
 80157dc:	db25      	blt.n	801582a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xd6>
 80157de:	9808      	ldr	r0, [sp, #32]
 80157e0:	1c59      	adds	r1, r3, #1
 80157e2:	4288      	cmp	r0, r1
 80157e4:	dd21      	ble.n	801582a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xd6>
 80157e6:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 80157e8:	1e6b      	subs	r3, r5, #1
 80157ea:	fb02 4203 	mla	r2, r2, r3, r4
 80157ee:	1412      	asrs	r2, r2, #16
 80157f0:	d422      	bmi.n	8015838 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe4>
 80157f2:	3201      	adds	r2, #1
 80157f4:	4590      	cmp	r8, r2
 80157f6:	dd1f      	ble.n	8015838 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe4>
 80157f8:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 80157fa:	fb02 6303 	mla	r3, r2, r3, r6
 80157fe:	141b      	asrs	r3, r3, #16
 8015800:	d41a      	bmi.n	8015838 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe4>
 8015802:	9a08      	ldr	r2, [sp, #32]
 8015804:	3301      	adds	r3, #1
 8015806:	429a      	cmp	r2, r3
 8015808:	dd16      	ble.n	8015838 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe4>
 801580a:	f8dd b01c 	ldr.w	fp, [sp, #28]
 801580e:	46a9      	mov	r9, r5
 8015810:	f1b9 0f00 	cmp.w	r9, #0
 8015814:	f300 80e4 	bgt.w	80159e0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x28c>
 8015818:	9b07      	ldr	r3, [sp, #28]
 801581a:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 801581e:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 8015822:	9307      	str	r3, [sp, #28]
 8015824:	e08a      	b.n	801593c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1e8>
 8015826:	1c51      	adds	r1, r2, #1
 8015828:	d17d      	bne.n	8015926 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d2>
 801582a:	4542      	cmp	r2, r8
 801582c:	da7b      	bge.n	8015926 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d2>
 801582e:	1c5a      	adds	r2, r3, #1
 8015830:	db79      	blt.n	8015926 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d2>
 8015832:	9a08      	ldr	r2, [sp, #32]
 8015834:	4293      	cmp	r3, r2
 8015836:	da76      	bge.n	8015926 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d2>
 8015838:	f8dd 901c 	ldr.w	r9, [sp, #28]
 801583c:	46aa      	mov	sl, r5
 801583e:	f1ba 0f00 	cmp.w	sl, #0
 8015842:	dde9      	ble.n	8015818 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xc4>
 8015844:	1421      	asrs	r1, r4, #16
 8015846:	ea4f 4226 	mov.w	r2, r6, asr #16
 801584a:	f3c4 3303 	ubfx	r3, r4, #12, #4
 801584e:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8015852:	f100 80b0 	bmi.w	80159b6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x262>
 8015856:	f101 0c01 	add.w	ip, r1, #1
 801585a:	45e0      	cmp	r8, ip
 801585c:	f340 80ad 	ble.w	80159ba <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x266>
 8015860:	2a00      	cmp	r2, #0
 8015862:	f2c0 80aa 	blt.w	80159ba <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x266>
 8015866:	9f08      	ldr	r7, [sp, #32]
 8015868:	f102 0c01 	add.w	ip, r2, #1
 801586c:	4567      	cmp	r7, ip
 801586e:	f340 80a4 	ble.w	80159ba <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x266>
 8015872:	fb02 1208 	mla	r2, r2, r8, r1
 8015876:	9909      	ldr	r1, [sp, #36]	; 0x24
 8015878:	eb01 0e42 	add.w	lr, r1, r2, lsl #1
 801587c:	f831 c012 	ldrh.w	ip, [r1, r2, lsl #1]
 8015880:	f8be 1002 	ldrh.w	r1, [lr, #2]
 8015884:	b138      	cbz	r0, 8015896 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x142>
 8015886:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8015888:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 801588a:	4472      	add	r2, lr
 801588c:	f83e 7007 	ldrh.w	r7, [lr, r7]
 8015890:	8852      	ldrh	r2, [r2, #2]
 8015892:	970c      	str	r7, [sp, #48]	; 0x30
 8015894:	920d      	str	r2, [sp, #52]	; 0x34
 8015896:	ea4f 4e0c 	mov.w	lr, ip, lsl #16
 801589a:	fb13 f200 	smulbb	r2, r3, r0
 801589e:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 80158a2:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 80158a6:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 80158aa:	10d2      	asrs	r2, r2, #3
 80158ac:	ea4e 0c0c 	orr.w	ip, lr, ip
 80158b0:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 80158b4:	f1c0 0e10 	rsb	lr, r0, #16
 80158b8:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 80158bc:	ebae 0e03 	sub.w	lr, lr, r3
 80158c0:	ea4b 0101 	orr.w	r1, fp, r1
 80158c4:	ebc2 0343 	rsb	r3, r2, r3, lsl #1
 80158c8:	4359      	muls	r1, r3
 80158ca:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80158cc:	eb02 0e4e 	add.w	lr, r2, lr, lsl #1
 80158d0:	fb0e 1e0c 	mla	lr, lr, ip, r1
 80158d4:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 80158d8:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 80158dc:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 80158e0:	ea4c 0c03 	orr.w	ip, ip, r3
 80158e4:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80158e6:	990c      	ldr	r1, [sp, #48]	; 0x30
 80158e8:	041b      	lsls	r3, r3, #16
 80158ea:	fb02 ec0c 	mla	ip, r2, ip, lr
 80158ee:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 80158f2:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 80158f6:	ea43 030e 	orr.w	r3, r3, lr
 80158fa:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 80158fe:	fb02 c203 	mla	r2, r2, r3, ip
 8015902:	0d53      	lsrs	r3, r2, #21
 8015904:	0952      	lsrs	r2, r2, #5
 8015906:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801590a:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801590e:	431a      	orrs	r2, r3
 8015910:	f8a9 2000 	strh.w	r2, [r9]
 8015914:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8015916:	441c      	add	r4, r3
 8015918:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801591a:	f109 0902 	add.w	r9, r9, #2
 801591e:	441e      	add	r6, r3
 8015920:	f10a 3aff 	add.w	sl, sl, #4294967295
 8015924:	e78b      	b.n	801583e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xea>
 8015926:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8015928:	441c      	add	r4, r3
 801592a:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801592c:	441e      	add	r6, r3
 801592e:	9b07      	ldr	r3, [sp, #28]
 8015930:	3302      	adds	r3, #2
 8015932:	3d01      	subs	r5, #1
 8015934:	9307      	str	r3, [sp, #28]
 8015936:	e746      	b.n	80157c6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x72>
 8015938:	f47f af55 	bne.w	80157e6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x92>
 801593c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801593e:	2b00      	cmp	r3, #0
 8015940:	f340 80ad 	ble.w	8015a9e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x34a>
 8015944:	ee3a aa0c 	vadd.f32	s20, s20, s24
 8015948:	ee79 9aab 	vadd.f32	s19, s19, s23
 801594c:	eeca 7a8a 	vdiv.f32	s15, s21, s20
 8015950:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8015952:	ee39 9a0b 	vadd.f32	s18, s18, s22
 8015956:	ee29 7aa7 	vmul.f32	s14, s19, s15
 801595a:	eef0 6a48 	vmov.f32	s13, s16
 801595e:	ee69 7a27 	vmul.f32	s15, s18, s15
 8015962:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8015966:	ee37 8a48 	vsub.f32	s16, s14, s16
 801596a:	ee16 4a90 	vmov	r4, s13
 801596e:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8015972:	eef0 6a68 	vmov.f32	s13, s17
 8015976:	ee77 8ae8 	vsub.f32	s17, s15, s17
 801597a:	ee18 2a10 	vmov	r2, s16
 801597e:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8015982:	fb92 f3f3 	sdiv	r3, r2, r3
 8015986:	ee18 2a90 	vmov	r2, s17
 801598a:	9329      	str	r3, [sp, #164]	; 0xa4
 801598c:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801598e:	fb92 f3f3 	sdiv	r3, r2, r3
 8015992:	932a      	str	r3, [sp, #168]	; 0xa8
 8015994:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8015996:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8015998:	3b01      	subs	r3, #1
 801599a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801599e:	930b      	str	r3, [sp, #44]	; 0x2c
 80159a0:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80159a2:	ee16 6a90 	vmov	r6, s13
 80159a6:	bf14      	ite	ne
 80159a8:	461d      	movne	r5, r3
 80159aa:	4615      	moveq	r5, r2
 80159ac:	eef0 8a67 	vmov.f32	s17, s15
 80159b0:	eeb0 8a47 	vmov.f32	s16, s14
 80159b4:	e700      	b.n	80157b8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x64>
 80159b6:	1c4f      	adds	r7, r1, #1
 80159b8:	d1ac      	bne.n	8015914 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1c0>
 80159ba:	4588      	cmp	r8, r1
 80159bc:	ddaa      	ble.n	8015914 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1c0>
 80159be:	1c57      	adds	r7, r2, #1
 80159c0:	dba8      	blt.n	8015914 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1c0>
 80159c2:	9f08      	ldr	r7, [sp, #32]
 80159c4:	4297      	cmp	r7, r2
 80159c6:	dda5      	ble.n	8015914 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1c0>
 80159c8:	e9cd 3003 	strd	r3, r0, [sp, #12]
 80159cc:	e9cd 1201 	strd	r1, r2, [sp, #4]
 80159d0:	9700      	str	r7, [sp, #0]
 80159d2:	4643      	mov	r3, r8
 80159d4:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80159d6:	9811      	ldr	r0, [sp, #68]	; 0x44
 80159d8:	4649      	mov	r1, r9
 80159da:	f7ff fe2f 	bl	801563c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>
 80159de:	e799      	b.n	8015914 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1c0>
 80159e0:	1422      	asrs	r2, r4, #16
 80159e2:	1431      	asrs	r1, r6, #16
 80159e4:	fb08 2101 	mla	r1, r8, r1, r2
 80159e8:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80159ea:	9809      	ldr	r0, [sp, #36]	; 0x24
 80159ec:	eb02 0241 	add.w	r2, r2, r1, lsl #1
 80159f0:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 80159f4:	f830 c011 	ldrh.w	ip, [r0, r1, lsl #1]
 80159f8:	8851      	ldrh	r1, [r2, #2]
 80159fa:	f3c4 3303 	ubfx	r3, r4, #12, #4
 80159fe:	f1be 0f00 	cmp.w	lr, #0
 8015a02:	d006      	beq.n	8015a12 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2be>
 8015a04:	980a      	ldr	r0, [sp, #40]	; 0x28
 8015a06:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8015a08:	1810      	adds	r0, r2, r0
 8015a0a:	5bd2      	ldrh	r2, [r2, r7]
 8015a0c:	920e      	str	r2, [sp, #56]	; 0x38
 8015a0e:	8842      	ldrh	r2, [r0, #2]
 8015a10:	920f      	str	r2, [sp, #60]	; 0x3c
 8015a12:	ea4f 400c 	mov.w	r0, ip, lsl #16
 8015a16:	fb13 f20e 	smulbb	r2, r3, lr
 8015a1a:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8015a1e:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 8015a22:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8015a26:	10d2      	asrs	r2, r2, #3
 8015a28:	ea40 000c 	orr.w	r0, r0, ip
 8015a2c:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8015a30:	f1ce 0c10 	rsb	ip, lr, #16
 8015a34:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8015a38:	ebac 0c03 	sub.w	ip, ip, r3
 8015a3c:	ea4a 0101 	orr.w	r1, sl, r1
 8015a40:	ebc2 0343 	rsb	r3, r2, r3, lsl #1
 8015a44:	4359      	muls	r1, r3
 8015a46:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8015a48:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 8015a4c:	fb0c 1c00 	mla	ip, ip, r0, r1
 8015a50:	ea4f 4a03 	mov.w	sl, r3, lsl #16
 8015a54:	f423 60fc 	bic.w	r0, r3, #2016	; 0x7e0
 8015a58:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8015a5a:	990e      	ldr	r1, [sp, #56]	; 0x38
 8015a5c:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8015a60:	041b      	lsls	r3, r3, #16
 8015a62:	ea4a 0000 	orr.w	r0, sl, r0
 8015a66:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8015a6a:	f421 6afc 	bic.w	sl, r1, #2016	; 0x7e0
 8015a6e:	fb02 c000 	mla	r0, r2, r0, ip
 8015a72:	ea43 0a0a 	orr.w	sl, r3, sl
 8015a76:	ebc2 024e 	rsb	r2, r2, lr, lsl #1
 8015a7a:	fb02 000a 	mla	r0, r2, sl, r0
 8015a7e:	0d43      	lsrs	r3, r0, #21
 8015a80:	0940      	lsrs	r0, r0, #5
 8015a82:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8015a86:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8015a8a:	4318      	orrs	r0, r3
 8015a8c:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8015a8e:	f82b 0b02 	strh.w	r0, [fp], #2
 8015a92:	441c      	add	r4, r3
 8015a94:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8015a96:	f109 39ff 	add.w	r9, r9, #4294967295
 8015a9a:	441e      	add	r6, r3
 8015a9c:	e6b8      	b.n	8015810 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xbc>
 8015a9e:	b013      	add	sp, #76	; 0x4c
 8015aa0:	ecbd 8b0a 	vpop	{d8-d12}
 8015aa4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08015aa8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>:
 8015aa8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015aac:	8808      	ldrh	r0, [r1, #0]
 8015aae:	b085      	sub	sp, #20
 8015ab0:	1206      	asrs	r6, r0, #8
 8015ab2:	e9dd c40f 	ldrd	ip, r4, [sp, #60]	; 0x3c
 8015ab6:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8015aba:	9600      	str	r6, [sp, #0]
 8015abc:	10c6      	asrs	r6, r0, #3
 8015abe:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8015ac2:	9601      	str	r6, [sp, #4]
 8015ac4:	00c0      	lsls	r0, r0, #3
 8015ac6:	fb04 c603 	mla	r6, r4, r3, ip
 8015aca:	b2c0      	uxtb	r0, r0
 8015acc:	4691      	mov	r9, r2
 8015ace:	eb02 0e86 	add.w	lr, r2, r6, lsl #2
 8015ad2:	9a00      	ldr	r2, [sp, #0]
 8015ad4:	9002      	str	r0, [sp, #8]
 8015ad6:	f040 407f 	orr.w	r0, r0, #4278190080	; 0xff000000
 8015ada:	ea40 4002 	orr.w	r0, r0, r2, lsl #16
 8015ade:	9a01      	ldr	r2, [sp, #4]
 8015ae0:	f9bd 8038 	ldrsh.w	r8, [sp, #56]	; 0x38
 8015ae4:	f89d 5044 	ldrb.w	r5, [sp, #68]	; 0x44
 8015ae8:	f89d 7048 	ldrb.w	r7, [sp, #72]	; 0x48
 8015aec:	2c00      	cmp	r4, #0
 8015aee:	ea40 2002 	orr.w	r0, r0, r2, lsl #8
 8015af2:	db3a      	blt.n	8015b6a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xc2>
 8015af4:	45a0      	cmp	r8, r4
 8015af6:	dd38      	ble.n	8015b6a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xc2>
 8015af8:	f1bc 0f00 	cmp.w	ip, #0
 8015afc:	db33      	blt.n	8015b66 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xbe>
 8015afe:	4563      	cmp	r3, ip
 8015b00:	dd31      	ble.n	8015b66 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xbe>
 8015b02:	f859 2026 	ldr.w	r2, [r9, r6, lsl #2]
 8015b06:	f11c 0601 	adds.w	r6, ip, #1
 8015b0a:	d431      	bmi.n	8015b70 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xc8>
 8015b0c:	42b3      	cmp	r3, r6
 8015b0e:	dd2f      	ble.n	8015b70 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xc8>
 8015b10:	b375      	cbz	r5, 8015b70 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xc8>
 8015b12:	f8de 6004 	ldr.w	r6, [lr, #4]
 8015b16:	3401      	adds	r4, #1
 8015b18:	d42e      	bmi.n	8015b78 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xd0>
 8015b1a:	45a0      	cmp	r8, r4
 8015b1c:	dd2c      	ble.n	8015b78 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xd0>
 8015b1e:	b35f      	cbz	r7, 8015b78 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xd0>
 8015b20:	f1bc 0f00 	cmp.w	ip, #0
 8015b24:	db26      	blt.n	8015b74 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xcc>
 8015b26:	4563      	cmp	r3, ip
 8015b28:	dd24      	ble.n	8015b74 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xcc>
 8015b2a:	f85e 4023 	ldr.w	r4, [lr, r3, lsl #2]
 8015b2e:	f11c 0c01 	adds.w	ip, ip, #1
 8015b32:	d405      	bmi.n	8015b40 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x98>
 8015b34:	4563      	cmp	r3, ip
 8015b36:	dd03      	ble.n	8015b40 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x98>
 8015b38:	b115      	cbz	r5, 8015b40 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x98>
 8015b3a:	3301      	adds	r3, #1
 8015b3c:	f85e 0023 	ldr.w	r0, [lr, r3, lsl #2]
 8015b40:	2d0f      	cmp	r5, #15
 8015b42:	ea4f 6b12 	mov.w	fp, r2, lsr #24
 8015b46:	ea4f 6a16 	mov.w	sl, r6, lsr #24
 8015b4a:	ea4f 6914 	mov.w	r9, r4, lsr #24
 8015b4e:	ea4f 6810 	mov.w	r8, r0, lsr #24
 8015b52:	d801      	bhi.n	8015b58 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xb0>
 8015b54:	2f0f      	cmp	r7, #15
 8015b56:	d911      	bls.n	8015b7c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xd4>
 8015b58:	4b82      	ldr	r3, [pc, #520]	; (8015d64 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x2bc>)
 8015b5a:	4a83      	ldr	r2, [pc, #524]	; (8015d68 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x2c0>)
 8015b5c:	4883      	ldr	r0, [pc, #524]	; (8015d6c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x2c4>)
 8015b5e:	f240 210d 	movw	r1, #525	; 0x20d
 8015b62:	f002 f9fb 	bl	8017f5c <__assert_func>
 8015b66:	4602      	mov	r2, r0
 8015b68:	e7cd      	b.n	8015b06 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x5e>
 8015b6a:	4606      	mov	r6, r0
 8015b6c:	4602      	mov	r2, r0
 8015b6e:	e7d2      	b.n	8015b16 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x6e>
 8015b70:	4606      	mov	r6, r0
 8015b72:	e7d0      	b.n	8015b16 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x6e>
 8015b74:	4604      	mov	r4, r0
 8015b76:	e7da      	b.n	8015b2e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x86>
 8015b78:	4604      	mov	r4, r0
 8015b7a:	e7e1      	b.n	8015b40 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x98>
 8015b7c:	b2ab      	uxth	r3, r5
 8015b7e:	b2bf      	uxth	r7, r7
 8015b80:	fb03 fe07 	mul.w	lr, r3, r7
 8015b84:	ebce 1707 	rsb	r7, lr, r7, lsl #4
 8015b88:	011b      	lsls	r3, r3, #4
 8015b8a:	eba3 0c0e 	sub.w	ip, r3, lr
 8015b8e:	b2bf      	uxth	r7, r7
 8015b90:	f5c3 7580 	rsb	r5, r3, #256	; 0x100
 8015b94:	fa1f fc8c 	uxth.w	ip, ip
 8015b98:	1bed      	subs	r5, r5, r7
 8015b9a:	b2ad      	uxth	r5, r5
 8015b9c:	fb0c f30a 	mul.w	r3, ip, sl
 8015ba0:	fb05 330b 	mla	r3, r5, fp, r3
 8015ba4:	fb07 3309 	mla	r3, r7, r9, r3
 8015ba8:	fb0e 3308 	mla	r3, lr, r8, r3
 8015bac:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8015bb0:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 8015bb4:	9303      	str	r3, [sp, #12]
 8015bb6:	d018      	beq.n	8015bea <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x142>
 8015bb8:	f002 13ff 	and.w	r3, r2, #16711935	; 0xff00ff
 8015bbc:	fb0b f303 	mul.w	r3, fp, r3
 8015bc0:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8015bc4:	fb0b fb02 	mul.w	fp, fp, r2
 8015bc8:	0a1a      	lsrs	r2, r3, #8
 8015bca:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8015bce:	f103 1301 	add.w	r3, r3, #65537	; 0x10001
 8015bd2:	441a      	add	r2, r3
 8015bd4:	f50b 7380 	add.w	r3, fp, #256	; 0x100
 8015bd8:	eb03 231b 	add.w	r3, r3, fp, lsr #8
 8015bdc:	0a12      	lsrs	r2, r2, #8
 8015bde:	0a1b      	lsrs	r3, r3, #8
 8015be0:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8015be4:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8015be8:	431a      	orrs	r2, r3
 8015bea:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 8015bee:	d019      	beq.n	8015c24 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x17c>
 8015bf0:	f006 1bff 	and.w	fp, r6, #16711935	; 0xff00ff
 8015bf4:	fb0a fb0b 	mul.w	fp, sl, fp
 8015bf8:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8015bfc:	fb0a fa06 	mul.w	sl, sl, r6
 8015c00:	ea4f 261b 	mov.w	r6, fp, lsr #8
 8015c04:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8015c08:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8015c0c:	f50a 7380 	add.w	r3, sl, #256	; 0x100
 8015c10:	445e      	add	r6, fp
 8015c12:	eb03 231a 	add.w	r3, r3, sl, lsr #8
 8015c16:	0a36      	lsrs	r6, r6, #8
 8015c18:	0a1b      	lsrs	r3, r3, #8
 8015c1a:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8015c1e:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8015c22:	431e      	orrs	r6, r3
 8015c24:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8015c28:	d019      	beq.n	8015c5e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x1b6>
 8015c2a:	f004 1aff 	and.w	sl, r4, #16711935	; 0xff00ff
 8015c2e:	fb09 fa0a 	mul.w	sl, r9, sl
 8015c32:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 8015c36:	fb09 f904 	mul.w	r9, r9, r4
 8015c3a:	ea4f 241a 	mov.w	r4, sl, lsr #8
 8015c3e:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8015c42:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8015c46:	f509 7380 	add.w	r3, r9, #256	; 0x100
 8015c4a:	4454      	add	r4, sl
 8015c4c:	eb03 2319 	add.w	r3, r3, r9, lsr #8
 8015c50:	0a24      	lsrs	r4, r4, #8
 8015c52:	0a1b      	lsrs	r3, r3, #8
 8015c54:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8015c58:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8015c5c:	431c      	orrs	r4, r3
 8015c5e:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8015c62:	d019      	beq.n	8015c98 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x1f0>
 8015c64:	f000 19ff 	and.w	r9, r0, #16711935	; 0xff00ff
 8015c68:	fb08 f909 	mul.w	r9, r8, r9
 8015c6c:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8015c70:	fb08 f800 	mul.w	r8, r8, r0
 8015c74:	ea4f 2019 	mov.w	r0, r9, lsr #8
 8015c78:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 8015c7c:	f109 1901 	add.w	r9, r9, #65537	; 0x10001
 8015c80:	f508 7380 	add.w	r3, r8, #256	; 0x100
 8015c84:	4448      	add	r0, r9
 8015c86:	eb03 2318 	add.w	r3, r3, r8, lsr #8
 8015c8a:	0a00      	lsrs	r0, r0, #8
 8015c8c:	0a1b      	lsrs	r3, r3, #8
 8015c8e:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 8015c92:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8015c96:	4318      	orrs	r0, r3
 8015c98:	f006 18ff 	and.w	r8, r6, #16711935	; 0xff00ff
 8015c9c:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8015ca0:	f002 13ff 	and.w	r3, r2, #16711935	; 0xff00ff
 8015ca4:	fb0c f808 	mul.w	r8, ip, r8
 8015ca8:	fb0c f606 	mul.w	r6, ip, r6
 8015cac:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8015cb0:	fb05 6202 	mla	r2, r5, r2, r6
 8015cb4:	fb05 8803 	mla	r8, r5, r3, r8
 8015cb8:	f004 13ff 	and.w	r3, r4, #16711935	; 0xff00ff
 8015cbc:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 8015cc0:	fb07 8803 	mla	r8, r7, r3, r8
 8015cc4:	fb07 2704 	mla	r7, r7, r4, r2
 8015cc8:	f000 13ff 	and.w	r3, r0, #16711935	; 0xff00ff
 8015ccc:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8015cd0:	fb0e 8303 	mla	r3, lr, r3, r8
 8015cd4:	fb0e 7e00 	mla	lr, lr, r0, r7
 8015cd8:	0a1b      	lsrs	r3, r3, #8
 8015cda:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8015cde:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8015ce2:	f89d 404c 	ldrb.w	r4, [sp, #76]	; 0x4c
 8015ce6:	f40e 4e7f 	and.w	lr, lr, #65280	; 0xff00
 8015cea:	ea43 0e0e 	orr.w	lr, r3, lr
 8015cee:	9b03      	ldr	r3, [sp, #12]
 8015cf0:	b2a4      	uxth	r4, r4
 8015cf2:	4363      	muls	r3, r4
 8015cf4:	1c5a      	adds	r2, r3, #1
 8015cf6:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8015cfa:	ea6f 2212 	mvn.w	r2, r2, lsr #8
 8015cfe:	9b00      	ldr	r3, [sp, #0]
 8015d00:	b2d2      	uxtb	r2, r2
 8015d02:	ea4f 451e 	mov.w	r5, lr, lsr #16
 8015d06:	fb13 f302 	smulbb	r3, r3, r2
 8015d0a:	fb05 3304 	mla	r3, r5, r4, r3
 8015d0e:	b29d      	uxth	r5, r3
 8015d10:	9b01      	ldr	r3, [sp, #4]
 8015d12:	f3ce 2007 	ubfx	r0, lr, #8, #8
 8015d16:	fb13 f302 	smulbb	r3, r3, r2
 8015d1a:	fb00 3004 	mla	r0, r0, r4, r3
 8015d1e:	9b02      	ldr	r3, [sp, #8]
 8015d20:	fa5f fe8e 	uxtb.w	lr, lr
 8015d24:	fb13 f202 	smulbb	r2, r3, r2
 8015d28:	fb0e 2e04 	mla	lr, lr, r4, r2
 8015d2c:	fa1f fe8e 	uxth.w	lr, lr
 8015d30:	b280      	uxth	r0, r0
 8015d32:	f10e 0201 	add.w	r2, lr, #1
 8015d36:	1c6b      	adds	r3, r5, #1
 8015d38:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 8015d3c:	1c42      	adds	r2, r0, #1
 8015d3e:	eb03 2315 	add.w	r3, r3, r5, lsr #8
 8015d42:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 8015d46:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 8015d4a:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 8015d4e:	0952      	lsrs	r2, r2, #5
 8015d50:	ea43 030e 	orr.w	r3, r3, lr
 8015d54:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8015d58:	4313      	orrs	r3, r2
 8015d5a:	800b      	strh	r3, [r1, #0]
 8015d5c:	b005      	add	sp, #20
 8015d5e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015d62:	bf00      	nop
 8015d64:	0801bc7d 	.word	0x0801bc7d
 8015d68:	0801c1d5 	.word	0x0801c1d5
 8015d6c:	0801bd05 	.word	0x0801bd05

08015d70 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 8015d70:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015d74:	ed2d 8b08 	vpush	{d8-d11}
 8015d78:	b099      	sub	sp, #100	; 0x64
 8015d7a:	eeb0 aa40 	vmov.f32	s20, s0
 8015d7e:	9306      	str	r3, [sp, #24]
 8015d80:	f9bd 30c8 	ldrsh.w	r3, [sp, #200]	; 0xc8
 8015d84:	9307      	str	r3, [sp, #28]
 8015d86:	f9bd 30cc 	ldrsh.w	r3, [sp, #204]	; 0xcc
 8015d8a:	9216      	str	r2, [sp, #88]	; 0x58
 8015d8c:	9310      	str	r3, [sp, #64]	; 0x40
 8015d8e:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 8015d90:	f89d 30d4 	ldrb.w	r3, [sp, #212]	; 0xd4
 8015d94:	9113      	str	r1, [sp, #76]	; 0x4c
 8015d96:	9315      	str	r3, [sp, #84]	; 0x54
 8015d98:	e9dd 1330 	ldrd	r1, r3, [sp, #192]	; 0xc0
 8015d9c:	9017      	str	r0, [sp, #92]	; 0x5c
 8015d9e:	6850      	ldr	r0, [r2, #4]
 8015da0:	6812      	ldr	r2, [r2, #0]
 8015da2:	9c2c      	ldr	r4, [sp, #176]	; 0xb0
 8015da4:	fb00 1303 	mla	r3, r0, r3, r1
 8015da8:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8015dac:	930a      	str	r3, [sp, #40]	; 0x28
 8015dae:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 8015db0:	681b      	ldr	r3, [r3, #0]
 8015db2:	9312      	str	r3, [sp, #72]	; 0x48
 8015db4:	9b07      	ldr	r3, [sp, #28]
 8015db6:	009b      	lsls	r3, r3, #2
 8015db8:	eef0 9a60 	vmov.f32	s19, s1
 8015dbc:	eeb0 9a41 	vmov.f32	s18, s2
 8015dc0:	eeb0 8a62 	vmov.f32	s16, s5
 8015dc4:	eef0 8a43 	vmov.f32	s17, s6
 8015dc8:	eef0 ba44 	vmov.f32	s23, s8
 8015dcc:	eeb0 ba64 	vmov.f32	s22, s9
 8015dd0:	eef0 aa45 	vmov.f32	s21, s10
 8015dd4:	930e      	str	r3, [sp, #56]	; 0x38
 8015dd6:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8015dd8:	2b00      	cmp	r3, #0
 8015dda:	dc03      	bgt.n	8015de4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x74>
 8015ddc:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8015dde:	2b00      	cmp	r3, #0
 8015de0:	f340 8352 	ble.w	8016488 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x718>
 8015de4:	9b06      	ldr	r3, [sp, #24]
 8015de6:	2b00      	cmp	r3, #0
 8015de8:	f340 81a8 	ble.w	801613c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3cc>
 8015dec:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 8015dee:	1412      	asrs	r2, r2, #16
 8015df0:	ea4f 4324 	mov.w	r3, r4, asr #16
 8015df4:	d430      	bmi.n	8015e58 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe8>
 8015df6:	9807      	ldr	r0, [sp, #28]
 8015df8:	1c51      	adds	r1, r2, #1
 8015dfa:	4288      	cmp	r0, r1
 8015dfc:	dd2f      	ble.n	8015e5e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xee>
 8015dfe:	2b00      	cmp	r3, #0
 8015e00:	db2d      	blt.n	8015e5e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xee>
 8015e02:	9810      	ldr	r0, [sp, #64]	; 0x40
 8015e04:	1c59      	adds	r1, r3, #1
 8015e06:	4288      	cmp	r0, r1
 8015e08:	dd29      	ble.n	8015e5e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xee>
 8015e0a:	9b06      	ldr	r3, [sp, #24]
 8015e0c:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 8015e0e:	992b      	ldr	r1, [sp, #172]	; 0xac
 8015e10:	3b01      	subs	r3, #1
 8015e12:	fb02 1203 	mla	r2, r2, r3, r1
 8015e16:	1412      	asrs	r2, r2, #16
 8015e18:	d42c      	bmi.n	8015e74 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x104>
 8015e1a:	9907      	ldr	r1, [sp, #28]
 8015e1c:	3201      	adds	r2, #1
 8015e1e:	4291      	cmp	r1, r2
 8015e20:	dd28      	ble.n	8015e74 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x104>
 8015e22:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
 8015e24:	fb02 4303 	mla	r3, r2, r3, r4
 8015e28:	141b      	asrs	r3, r3, #16
 8015e2a:	d423      	bmi.n	8015e74 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x104>
 8015e2c:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8015e2e:	3301      	adds	r3, #1
 8015e30:	429a      	cmp	r2, r3
 8015e32:	dd1f      	ble.n	8015e74 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x104>
 8015e34:	9b06      	ldr	r3, [sp, #24]
 8015e36:	f8dd a028 	ldr.w	sl, [sp, #40]	; 0x28
 8015e3a:	f8bd b054 	ldrh.w	fp, [sp, #84]	; 0x54
 8015e3e:	9311      	str	r3, [sp, #68]	; 0x44
 8015e40:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8015e42:	2b00      	cmp	r3, #0
 8015e44:	f300 81e3 	bgt.w	801620e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x49e>
 8015e48:	9b06      	ldr	r3, [sp, #24]
 8015e4a:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8015e4e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8015e50:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 8015e54:	930a      	str	r3, [sp, #40]	; 0x28
 8015e56:	e173      	b.n	8016140 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3d0>
 8015e58:	1c51      	adds	r1, r2, #1
 8015e5a:	f040 8162 	bne.w	8016122 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3b2>
 8015e5e:	9907      	ldr	r1, [sp, #28]
 8015e60:	428a      	cmp	r2, r1
 8015e62:	f280 815e 	bge.w	8016122 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3b2>
 8015e66:	1c5f      	adds	r7, r3, #1
 8015e68:	f2c0 815b 	blt.w	8016122 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3b2>
 8015e6c:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8015e6e:	4293      	cmp	r3, r2
 8015e70:	f280 8157 	bge.w	8016122 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3b2>
 8015e74:	9b06      	ldr	r3, [sp, #24]
 8015e76:	9314      	str	r3, [sp, #80]	; 0x50
 8015e78:	f8bd 7054 	ldrh.w	r7, [sp, #84]	; 0x54
 8015e7c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8015e7e:	9311      	str	r3, [sp, #68]	; 0x44
 8015e80:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8015e82:	2b00      	cmp	r3, #0
 8015e84:	dde0      	ble.n	8015e48 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xd8>
 8015e86:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 8015e88:	f3c2 3003 	ubfx	r0, r2, #12, #4
 8015e8c:	1412      	asrs	r2, r2, #16
 8015e8e:	ea4f 4324 	mov.w	r3, r4, asr #16
 8015e92:	f3c4 3103 	ubfx	r1, r4, #12, #4
 8015e96:	f100 81a1 	bmi.w	80161dc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x46c>
 8015e9a:	9e07      	ldr	r6, [sp, #28]
 8015e9c:	1c55      	adds	r5, r2, #1
 8015e9e:	42ae      	cmp	r6, r5
 8015ea0:	f340 819e 	ble.w	80161e0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x470>
 8015ea4:	2b00      	cmp	r3, #0
 8015ea6:	f2c0 819b 	blt.w	80161e0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x470>
 8015eaa:	9e10      	ldr	r6, [sp, #64]	; 0x40
 8015eac:	1c5d      	adds	r5, r3, #1
 8015eae:	42ae      	cmp	r6, r5
 8015eb0:	f340 8196 	ble.w	80161e0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x470>
 8015eb4:	9d07      	ldr	r5, [sp, #28]
 8015eb6:	fb03 2305 	mla	r3, r3, r5, r2
 8015eba:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8015ebc:	eb02 0583 	add.w	r5, r2, r3, lsl #2
 8015ec0:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8015ec4:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 8015ec8:	2800      	cmp	r0, #0
 8015eca:	f000 8178 	beq.w	80161be <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x44e>
 8015ece:	686a      	ldr	r2, [r5, #4]
 8015ed0:	920b      	str	r2, [sp, #44]	; 0x2c
 8015ed2:	ea4f 6812 	mov.w	r8, r2, lsr #24
 8015ed6:	2900      	cmp	r1, #0
 8015ed8:	f000 817a 	beq.w	80161d0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x460>
 8015edc:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8015ede:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 8015ee0:	18aa      	adds	r2, r5, r2
 8015ee2:	59ad      	ldr	r5, [r5, r6]
 8015ee4:	6852      	ldr	r2, [r2, #4]
 8015ee6:	9508      	str	r5, [sp, #32]
 8015ee8:	ea4f 6a15 	mov.w	sl, r5, lsr #24
 8015eec:	920c      	str	r2, [sp, #48]	; 0x30
 8015eee:	0e15      	lsrs	r5, r2, #24
 8015ef0:	b280      	uxth	r0, r0
 8015ef2:	b289      	uxth	r1, r1
 8015ef4:	fb00 fb01 	mul.w	fp, r0, r1
 8015ef8:	ebcb 1101 	rsb	r1, fp, r1, lsl #4
 8015efc:	0100      	lsls	r0, r0, #4
 8015efe:	eba0 090b 	sub.w	r9, r0, fp
 8015f02:	b289      	uxth	r1, r1
 8015f04:	f5c0 7280 	rsb	r2, r0, #256	; 0x100
 8015f08:	fa1f f989 	uxth.w	r9, r9
 8015f0c:	1a52      	subs	r2, r2, r1
 8015f0e:	b292      	uxth	r2, r2
 8015f10:	fb09 f008 	mul.w	r0, r9, r8
 8015f14:	fb02 000c 	mla	r0, r2, ip, r0
 8015f18:	fb01 000a 	mla	r0, r1, sl, r0
 8015f1c:	fb0b 0005 	mla	r0, fp, r5, r0
 8015f20:	f3c0 2007 	ubfx	r0, r0, #8, #8
 8015f24:	2800      	cmp	r0, #0
 8015f26:	f000 80ef 	beq.w	8016108 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x398>
 8015f2a:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8015f2e:	d01b      	beq.n	8015f68 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1f8>
 8015f30:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 8015f34:	fb0c fe0e 	mul.w	lr, ip, lr
 8015f38:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8015f3c:	fb0c fc03 	mul.w	ip, ip, r3
 8015f40:	ea4f 231e 	mov.w	r3, lr, lsr #8
 8015f44:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8015f48:	f10e 1e01 	add.w	lr, lr, #65537	; 0x10001
 8015f4c:	4473      	add	r3, lr
 8015f4e:	f50c 7e80 	add.w	lr, ip, #256	; 0x100
 8015f52:	eb0e 2e1c 	add.w	lr, lr, ip, lsr #8
 8015f56:	0a1b      	lsrs	r3, r3, #8
 8015f58:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8015f5c:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8015f60:	f40e 4e7f 	and.w	lr, lr, #65280	; 0xff00
 8015f64:	ea43 030e 	orr.w	r3, r3, lr
 8015f68:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8015f6c:	d01e      	beq.n	8015fac <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x23c>
 8015f6e:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
 8015f70:	f006 1cff 	and.w	ip, r6, #16711935	; 0xff00ff
 8015f74:	fb08 fc0c 	mul.w	ip, r8, ip
 8015f78:	f406 4e7f 	and.w	lr, r6, #65280	; 0xff00
 8015f7c:	fb08 f80e 	mul.w	r8, r8, lr
 8015f80:	ea4f 2e1c 	mov.w	lr, ip, lsr #8
 8015f84:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8015f88:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8015f8c:	44e6      	add	lr, ip
 8015f8e:	f508 7c80 	add.w	ip, r8, #256	; 0x100
 8015f92:	eb0c 2818 	add.w	r8, ip, r8, lsr #8
 8015f96:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8015f9a:	ea4f 2818 	mov.w	r8, r8, lsr #8
 8015f9e:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8015fa2:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 8015fa6:	ea4e 0608 	orr.w	r6, lr, r8
 8015faa:	960b      	str	r6, [sp, #44]	; 0x2c
 8015fac:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 8015fb0:	d01e      	beq.n	8015ff0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x280>
 8015fb2:	9e08      	ldr	r6, [sp, #32]
 8015fb4:	f006 18ff 	and.w	r8, r6, #16711935	; 0xff00ff
 8015fb8:	fb0a f808 	mul.w	r8, sl, r8
 8015fbc:	f406 4c7f 	and.w	ip, r6, #65280	; 0xff00
 8015fc0:	fb0a fa0c 	mul.w	sl, sl, ip
 8015fc4:	ea4f 2e18 	mov.w	lr, r8, lsr #8
 8015fc8:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8015fcc:	f108 1801 	add.w	r8, r8, #65537	; 0x10001
 8015fd0:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8015fd4:	44c6      	add	lr, r8
 8015fd6:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8015fda:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8015fde:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8015fe2:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8015fe6:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8015fea:	ea4e 060a 	orr.w	r6, lr, sl
 8015fee:	9608      	str	r6, [sp, #32]
 8015ff0:	2dff      	cmp	r5, #255	; 0xff
 8015ff2:	d01d      	beq.n	8016030 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2c0>
 8015ff4:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 8015ff6:	f006 18ff 	and.w	r8, r6, #16711935	; 0xff00ff
 8015ffa:	fb05 f808 	mul.w	r8, r5, r8
 8015ffe:	f406 4c7f 	and.w	ip, r6, #65280	; 0xff00
 8016002:	fb05 f50c 	mul.w	r5, r5, ip
 8016006:	ea4f 2e18 	mov.w	lr, r8, lsr #8
 801600a:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801600e:	f108 1801 	add.w	r8, r8, #65537	; 0x10001
 8016012:	f505 7c80 	add.w	ip, r5, #256	; 0x100
 8016016:	44c6      	add	lr, r8
 8016018:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801601c:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8016020:	0a2d      	lsrs	r5, r5, #8
 8016022:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8016026:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 801602a:	ea4e 0505 	orr.w	r5, lr, r5
 801602e:	950c      	str	r5, [sp, #48]	; 0x30
 8016030:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8016032:	9e08      	ldr	r6, [sp, #32]
 8016034:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8016038:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 801603c:	fb09 f505 	mul.w	r5, r9, r5
 8016040:	fb02 550c 	mla	r5, r2, ip, r5
 8016044:	f006 1cff 	and.w	ip, r6, #16711935	; 0xff00ff
 8016048:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 801604a:	fb01 550c 	mla	r5, r1, ip, r5
 801604e:	f006 1cff 	and.w	ip, r6, #16711935	; 0xff00ff
 8016052:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
 8016054:	fb0b 550c 	mla	r5, fp, ip, r5
 8016058:	f406 4c7f 	and.w	ip, r6, #65280	; 0xff00
 801605c:	fb09 f90c 	mul.w	r9, r9, ip
 8016060:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8016064:	fb02 9303 	mla	r3, r2, r3, r9
 8016068:	9a08      	ldr	r2, [sp, #32]
 801606a:	f402 4e7f 	and.w	lr, r2, #65280	; 0xff00
 801606e:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8016070:	fb01 330e 	mla	r3, r1, lr, r3
 8016074:	f402 417f 	and.w	r1, r2, #65280	; 0xff00
 8016078:	fb0b 3b01 	mla	fp, fp, r1, r3
 801607c:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801607e:	0a2d      	lsrs	r5, r5, #8
 8016080:	f8b3 c000 	ldrh.w	ip, [r3]
 8016084:	ea4f 2b1b 	mov.w	fp, fp, lsr #8
 8016088:	fb00 f307 	mul.w	r3, r0, r7
 801608c:	1c58      	adds	r0, r3, #1
 801608e:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8016092:	f40b 4b7f 	and.w	fp, fp, #65280	; 0xff00
 8016096:	ea45 050b 	orr.w	r5, r5, fp
 801609a:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 801609e:	0c29      	lsrs	r1, r5, #16
 80160a0:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 80160a4:	ea4f 232c 	mov.w	r3, ip, asr #8
 80160a8:	b2c0      	uxtb	r0, r0
 80160aa:	fb11 f107 	smulbb	r1, r1, r7
 80160ae:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 80160b2:	fb03 1300 	mla	r3, r3, r0, r1
 80160b6:	b299      	uxth	r1, r3
 80160b8:	ea4f 02ec 	mov.w	r2, ip, asr #3
 80160bc:	f3c5 2307 	ubfx	r3, r5, #8, #8
 80160c0:	fb13 f307 	smulbb	r3, r3, r7
 80160c4:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 80160c8:	fb02 3200 	mla	r2, r2, r0, r3
 80160cc:	b2ed      	uxtb	r5, r5
 80160ce:	ea4f 03cc 	mov.w	r3, ip, lsl #3
 80160d2:	b2db      	uxtb	r3, r3
 80160d4:	fb15 f507 	smulbb	r5, r5, r7
 80160d8:	fb03 5500 	mla	r5, r3, r0, r5
 80160dc:	b292      	uxth	r2, r2
 80160de:	b2ad      	uxth	r5, r5
 80160e0:	1c4b      	adds	r3, r1, #1
 80160e2:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 80160e6:	1c68      	adds	r0, r5, #1
 80160e8:	1c51      	adds	r1, r2, #1
 80160ea:	eb00 2515 	add.w	r5, r0, r5, lsr #8
 80160ee:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 80160f2:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 80160f6:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 80160fa:	0952      	lsrs	r2, r2, #5
 80160fc:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8016100:	432b      	orrs	r3, r5
 8016102:	4313      	orrs	r3, r2
 8016104:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8016106:	8013      	strh	r3, [r2, #0]
 8016108:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801610a:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 801610c:	3302      	adds	r3, #2
 801610e:	9311      	str	r3, [sp, #68]	; 0x44
 8016110:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8016112:	4413      	add	r3, r2
 8016114:	932b      	str	r3, [sp, #172]	; 0xac
 8016116:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8016118:	441c      	add	r4, r3
 801611a:	9b14      	ldr	r3, [sp, #80]	; 0x50
 801611c:	3b01      	subs	r3, #1
 801611e:	9314      	str	r3, [sp, #80]	; 0x50
 8016120:	e6ae      	b.n	8015e80 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x110>
 8016122:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8016124:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 8016126:	4413      	add	r3, r2
 8016128:	932b      	str	r3, [sp, #172]	; 0xac
 801612a:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 801612c:	441c      	add	r4, r3
 801612e:	9b06      	ldr	r3, [sp, #24]
 8016130:	3b01      	subs	r3, #1
 8016132:	9306      	str	r3, [sp, #24]
 8016134:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8016136:	3302      	adds	r3, #2
 8016138:	930a      	str	r3, [sp, #40]	; 0x28
 801613a:	e653      	b.n	8015de4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x74>
 801613c:	f47f ae65 	bne.w	8015e0a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9a>
 8016140:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8016142:	2b00      	cmp	r3, #0
 8016144:	f340 81a0 	ble.w	8016488 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x718>
 8016148:	ee3a aa2b 	vadd.f32	s20, s20, s23
 801614c:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8016150:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 8016154:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8016156:	ee79 9a8b 	vadd.f32	s19, s19, s22
 801615a:	ee39 9a2a 	vadd.f32	s18, s18, s21
 801615e:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8016162:	eef0 6a48 	vmov.f32	s13, s16
 8016166:	ee69 7a27 	vmul.f32	s15, s18, s15
 801616a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801616e:	ee37 8a48 	vsub.f32	s16, s14, s16
 8016172:	edcd 6a2b 	vstr	s13, [sp, #172]	; 0xac
 8016176:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 801617a:	eef0 6a68 	vmov.f32	s13, s17
 801617e:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8016182:	ee18 2a10 	vmov	r2, s16
 8016186:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 801618a:	fb92 f3f3 	sdiv	r3, r2, r3
 801618e:	ee18 2a90 	vmov	r2, s17
 8016192:	932d      	str	r3, [sp, #180]	; 0xb4
 8016194:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8016196:	fb92 f3f3 	sdiv	r3, r2, r3
 801619a:	932e      	str	r3, [sp, #184]	; 0xb8
 801619c:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801619e:	9a16      	ldr	r2, [sp, #88]	; 0x58
 80161a0:	3b01      	subs	r3, #1
 80161a2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80161a6:	9313      	str	r3, [sp, #76]	; 0x4c
 80161a8:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80161aa:	bf08      	it	eq
 80161ac:	4613      	moveq	r3, r2
 80161ae:	ee16 4a90 	vmov	r4, s13
 80161b2:	9306      	str	r3, [sp, #24]
 80161b4:	eef0 8a67 	vmov.f32	s17, s15
 80161b8:	eeb0 8a47 	vmov.f32	s16, s14
 80161bc:	e60b      	b.n	8015dd6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x66>
 80161be:	b151      	cbz	r1, 80161d6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x466>
 80161c0:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 80161c2:	58aa      	ldr	r2, [r5, r2]
 80161c4:	9208      	str	r2, [sp, #32]
 80161c6:	ea4f 6a12 	mov.w	sl, r2, lsr #24
 80161ca:	25ff      	movs	r5, #255	; 0xff
 80161cc:	46a8      	mov	r8, r5
 80161ce:	e68f      	b.n	8015ef0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x180>
 80161d0:	25ff      	movs	r5, #255	; 0xff
 80161d2:	46aa      	mov	sl, r5
 80161d4:	e68c      	b.n	8015ef0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x180>
 80161d6:	25ff      	movs	r5, #255	; 0xff
 80161d8:	46aa      	mov	sl, r5
 80161da:	e7f7      	b.n	80161cc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x45c>
 80161dc:	1c56      	adds	r6, r2, #1
 80161de:	d193      	bne.n	8016108 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x398>
 80161e0:	9d07      	ldr	r5, [sp, #28]
 80161e2:	4295      	cmp	r5, r2
 80161e4:	dd90      	ble.n	8016108 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x398>
 80161e6:	1c5d      	adds	r5, r3, #1
 80161e8:	db8e      	blt.n	8016108 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x398>
 80161ea:	9d10      	ldr	r5, [sp, #64]	; 0x40
 80161ec:	429d      	cmp	r5, r3
 80161ee:	dd8b      	ble.n	8016108 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x398>
 80161f0:	9d15      	ldr	r5, [sp, #84]	; 0x54
 80161f2:	9201      	str	r2, [sp, #4]
 80161f4:	e9cd 3002 	strd	r3, r0, [sp, #8]
 80161f8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80161fa:	9300      	str	r3, [sp, #0]
 80161fc:	e9cd 1504 	strd	r1, r5, [sp, #16]
 8016200:	9b07      	ldr	r3, [sp, #28]
 8016202:	9817      	ldr	r0, [sp, #92]	; 0x5c
 8016204:	e9dd 1211 	ldrd	r1, r2, [sp, #68]	; 0x44
 8016208:	f7ff fc4e 	bl	8015aa8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>
 801620c:	e77c      	b.n	8016108 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x398>
 801620e:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8016210:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 8016212:	9d07      	ldr	r5, [sp, #28]
 8016214:	1412      	asrs	r2, r2, #16
 8016216:	f3c3 3103 	ubfx	r1, r3, #12, #4
 801621a:	1423      	asrs	r3, r4, #16
 801621c:	fb05 2303 	mla	r3, r5, r3, r2
 8016220:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8016222:	eb02 0583 	add.w	r5, r2, r3, lsl #2
 8016226:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 801622a:	f3c4 3003 	ubfx	r0, r4, #12, #4
 801622e:	0e1e      	lsrs	r6, r3, #24
 8016230:	2900      	cmp	r1, #0
 8016232:	f000 811a 	beq.w	801646a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6fa>
 8016236:	686a      	ldr	r2, [r5, #4]
 8016238:	920d      	str	r2, [sp, #52]	; 0x34
 801623a:	ea4f 6c12 	mov.w	ip, r2, lsr #24
 801623e:	2800      	cmp	r0, #0
 8016240:	f000 811c 	beq.w	801647c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x70c>
 8016244:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8016246:	9f0e      	ldr	r7, [sp, #56]	; 0x38
 8016248:	18aa      	adds	r2, r5, r2
 801624a:	59ed      	ldr	r5, [r5, r7]
 801624c:	6852      	ldr	r2, [r2, #4]
 801624e:	9509      	str	r5, [sp, #36]	; 0x24
 8016250:	ea4f 6815 	mov.w	r8, r5, lsr #24
 8016254:	920f      	str	r2, [sp, #60]	; 0x3c
 8016256:	0e15      	lsrs	r5, r2, #24
 8016258:	b289      	uxth	r1, r1
 801625a:	b280      	uxth	r0, r0
 801625c:	fb01 f900 	mul.w	r9, r1, r0
 8016260:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 8016264:	0109      	lsls	r1, r1, #4
 8016266:	eba1 0e09 	sub.w	lr, r1, r9
 801626a:	b280      	uxth	r0, r0
 801626c:	f5c1 7280 	rsb	r2, r1, #256	; 0x100
 8016270:	fa1f fe8e 	uxth.w	lr, lr
 8016274:	1a12      	subs	r2, r2, r0
 8016276:	b292      	uxth	r2, r2
 8016278:	fb0e f10c 	mul.w	r1, lr, ip
 801627c:	fb02 1106 	mla	r1, r2, r6, r1
 8016280:	fb00 1108 	mla	r1, r0, r8, r1
 8016284:	fb09 1105 	mla	r1, r9, r5, r1
 8016288:	f3c1 2107 	ubfx	r1, r1, #8, #8
 801628c:	2900      	cmp	r1, #0
 801628e:	f000 80e0 	beq.w	8016452 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6e2>
 8016292:	2eff      	cmp	r6, #255	; 0xff
 8016294:	d016      	beq.n	80162c4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x554>
 8016296:	f003 17ff 	and.w	r7, r3, #16711935	; 0xff00ff
 801629a:	4377      	muls	r7, r6
 801629c:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80162a0:	435e      	muls	r6, r3
 80162a2:	0a3b      	lsrs	r3, r7, #8
 80162a4:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80162a8:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 80162ac:	443b      	add	r3, r7
 80162ae:	f506 7780 	add.w	r7, r6, #256	; 0x100
 80162b2:	eb07 2716 	add.w	r7, r7, r6, lsr #8
 80162b6:	0a1b      	lsrs	r3, r3, #8
 80162b8:	0a3f      	lsrs	r7, r7, #8
 80162ba:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80162be:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 80162c2:	433b      	orrs	r3, r7
 80162c4:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 80162c8:	d01d      	beq.n	8016306 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x596>
 80162ca:	9e0d      	ldr	r6, [sp, #52]	; 0x34
 80162cc:	9f0d      	ldr	r7, [sp, #52]	; 0x34
 80162ce:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 80162d2:	fb0c f606 	mul.w	r6, ip, r6
 80162d6:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 80162da:	fb0c fc07 	mul.w	ip, ip, r7
 80162de:	0a37      	lsrs	r7, r6, #8
 80162e0:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 80162e4:	f106 1601 	add.w	r6, r6, #65537	; 0x10001
 80162e8:	4437      	add	r7, r6
 80162ea:	f50c 7680 	add.w	r6, ip, #256	; 0x100
 80162ee:	eb06 2c1c 	add.w	ip, r6, ip, lsr #8
 80162f2:	0a3f      	lsrs	r7, r7, #8
 80162f4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80162f8:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 80162fc:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8016300:	ea47 060c 	orr.w	r6, r7, ip
 8016304:	960d      	str	r6, [sp, #52]	; 0x34
 8016306:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 801630a:	d01d      	beq.n	8016348 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x5d8>
 801630c:	9e09      	ldr	r6, [sp, #36]	; 0x24
 801630e:	f006 1cff 	and.w	ip, r6, #16711935	; 0xff00ff
 8016312:	fb08 fc0c 	mul.w	ip, r8, ip
 8016316:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 801631a:	fb08 f806 	mul.w	r8, r8, r6
 801631e:	ea4f 271c 	mov.w	r7, ip, lsr #8
 8016322:	f508 7680 	add.w	r6, r8, #256	; 0x100
 8016326:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 801632a:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801632e:	eb06 2818 	add.w	r8, r6, r8, lsr #8
 8016332:	4467      	add	r7, ip
 8016334:	0a3f      	lsrs	r7, r7, #8
 8016336:	ea4f 2818 	mov.w	r8, r8, lsr #8
 801633a:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 801633e:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 8016342:	ea47 0608 	orr.w	r6, r7, r8
 8016346:	9609      	str	r6, [sp, #36]	; 0x24
 8016348:	2dff      	cmp	r5, #255	; 0xff
 801634a:	d01a      	beq.n	8016382 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x612>
 801634c:	9e0f      	ldr	r6, [sp, #60]	; 0x3c
 801634e:	f006 1cff 	and.w	ip, r6, #16711935	; 0xff00ff
 8016352:	fb05 fc0c 	mul.w	ip, r5, ip
 8016356:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 801635a:	4375      	muls	r5, r6
 801635c:	ea4f 271c 	mov.w	r7, ip, lsr #8
 8016360:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8016364:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8016368:	f505 7680 	add.w	r6, r5, #256	; 0x100
 801636c:	4467      	add	r7, ip
 801636e:	eb06 2515 	add.w	r5, r6, r5, lsr #8
 8016372:	0a3f      	lsrs	r7, r7, #8
 8016374:	0a2d      	lsrs	r5, r5, #8
 8016376:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 801637a:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 801637e:	433d      	orrs	r5, r7
 8016380:	950f      	str	r5, [sp, #60]	; 0x3c
 8016382:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8016384:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8016388:	f003 16ff 	and.w	r6, r3, #16711935	; 0xff00ff
 801638c:	fb0e f505 	mul.w	r5, lr, r5
 8016390:	fb02 5506 	mla	r5, r2, r6, r5
 8016394:	9e09      	ldr	r6, [sp, #36]	; 0x24
 8016396:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 801639a:	fb00 5506 	mla	r5, r0, r6, r5
 801639e:	9e0f      	ldr	r6, [sp, #60]	; 0x3c
 80163a0:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 80163a4:	fb09 5506 	mla	r5, r9, r6, r5
 80163a8:	9e0d      	ldr	r6, [sp, #52]	; 0x34
 80163aa:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 80163ae:	fb0e fe06 	mul.w	lr, lr, r6
 80163b2:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80163b6:	fb02 e303 	mla	r3, r2, r3, lr
 80163ba:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80163bc:	f402 477f 	and.w	r7, r2, #65280	; 0xff00
 80163c0:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80163c2:	fb00 3307 	mla	r3, r0, r7, r3
 80163c6:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 80163ca:	fb09 3c0c 	mla	ip, r9, ip, r3
 80163ce:	fb01 f10b 	mul.w	r1, r1, fp
 80163d2:	0a2d      	lsrs	r5, r5, #8
 80163d4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80163d8:	f8ba 0000 	ldrh.w	r0, [sl]
 80163dc:	1c4b      	adds	r3, r1, #1
 80163de:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 80163e2:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 80163e6:	ea45 050c 	orr.w	r5, r5, ip
 80163ea:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 80163ee:	1202      	asrs	r2, r0, #8
 80163f0:	0c2b      	lsrs	r3, r5, #16
 80163f2:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 80163f6:	b2c9      	uxtb	r1, r1
 80163f8:	fb13 f30b 	smulbb	r3, r3, fp
 80163fc:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8016400:	fb02 3201 	mla	r2, r2, r1, r3
 8016404:	f3c5 2607 	ubfx	r6, r5, #8, #8
 8016408:	10c3      	asrs	r3, r0, #3
 801640a:	b2ed      	uxtb	r5, r5
 801640c:	00c0      	lsls	r0, r0, #3
 801640e:	b2c0      	uxtb	r0, r0
 8016410:	fb15 f50b 	smulbb	r5, r5, fp
 8016414:	fb00 5001 	mla	r0, r0, r1, r5
 8016418:	b292      	uxth	r2, r2
 801641a:	fb16 f60b 	smulbb	r6, r6, fp
 801641e:	b280      	uxth	r0, r0
 8016420:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 8016424:	fb03 6301 	mla	r3, r3, r1, r6
 8016428:	1c51      	adds	r1, r2, #1
 801642a:	1c46      	adds	r6, r0, #1
 801642c:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8016430:	eb06 2610 	add.w	r6, r6, r0, lsr #8
 8016434:	b29b      	uxth	r3, r3
 8016436:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801643a:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 801643e:	4332      	orrs	r2, r6
 8016440:	1c5e      	adds	r6, r3, #1
 8016442:	eb06 2313 	add.w	r3, r6, r3, lsr #8
 8016446:	095b      	lsrs	r3, r3, #5
 8016448:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801644c:	431a      	orrs	r2, r3
 801644e:	f8aa 2000 	strh.w	r2, [sl]
 8016452:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8016454:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 8016456:	4413      	add	r3, r2
 8016458:	932b      	str	r3, [sp, #172]	; 0xac
 801645a:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 801645c:	441c      	add	r4, r3
 801645e:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8016460:	3b01      	subs	r3, #1
 8016462:	f10a 0a02 	add.w	sl, sl, #2
 8016466:	9311      	str	r3, [sp, #68]	; 0x44
 8016468:	e4ea      	b.n	8015e40 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xd0>
 801646a:	b150      	cbz	r0, 8016482 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x712>
 801646c:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801646e:	58aa      	ldr	r2, [r5, r2]
 8016470:	9209      	str	r2, [sp, #36]	; 0x24
 8016472:	ea4f 6812 	mov.w	r8, r2, lsr #24
 8016476:	25ff      	movs	r5, #255	; 0xff
 8016478:	46ac      	mov	ip, r5
 801647a:	e6ed      	b.n	8016258 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4e8>
 801647c:	25ff      	movs	r5, #255	; 0xff
 801647e:	46a8      	mov	r8, r5
 8016480:	e6ea      	b.n	8016258 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4e8>
 8016482:	25ff      	movs	r5, #255	; 0xff
 8016484:	46a8      	mov	r8, r5
 8016486:	e7f7      	b.n	8016478 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x708>
 8016488:	b019      	add	sp, #100	; 0x64
 801648a:	ecbd 8b08 	vpop	{d8-d11}
 801648e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

08016494 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>:
 8016494:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016498:	8808      	ldrh	r0, [r1, #0]
 801649a:	b085      	sub	sp, #20
 801649c:	1206      	asrs	r6, r0, #8
 801649e:	e9dd c40f 	ldrd	ip, r4, [sp, #60]	; 0x3c
 80164a2:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 80164a6:	9600      	str	r6, [sp, #0]
 80164a8:	10c6      	asrs	r6, r0, #3
 80164aa:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80164ae:	9601      	str	r6, [sp, #4]
 80164b0:	00c0      	lsls	r0, r0, #3
 80164b2:	fb04 c603 	mla	r6, r4, r3, ip
 80164b6:	b2c0      	uxtb	r0, r0
 80164b8:	4691      	mov	r9, r2
 80164ba:	eb02 0e86 	add.w	lr, r2, r6, lsl #2
 80164be:	9a00      	ldr	r2, [sp, #0]
 80164c0:	9002      	str	r0, [sp, #8]
 80164c2:	f040 407f 	orr.w	r0, r0, #4278190080	; 0xff000000
 80164c6:	ea40 4002 	orr.w	r0, r0, r2, lsl #16
 80164ca:	9a01      	ldr	r2, [sp, #4]
 80164cc:	f9bd 8038 	ldrsh.w	r8, [sp, #56]	; 0x38
 80164d0:	f89d 5044 	ldrb.w	r5, [sp, #68]	; 0x44
 80164d4:	f89d 7048 	ldrb.w	r7, [sp, #72]	; 0x48
 80164d8:	2c00      	cmp	r4, #0
 80164da:	ea40 2002 	orr.w	r0, r0, r2, lsl #8
 80164de:	db3a      	blt.n	8016556 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xc2>
 80164e0:	45a0      	cmp	r8, r4
 80164e2:	dd38      	ble.n	8016556 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xc2>
 80164e4:	f1bc 0f00 	cmp.w	ip, #0
 80164e8:	db33      	blt.n	8016552 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xbe>
 80164ea:	4563      	cmp	r3, ip
 80164ec:	dd31      	ble.n	8016552 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xbe>
 80164ee:	f859 2026 	ldr.w	r2, [r9, r6, lsl #2]
 80164f2:	f11c 0601 	adds.w	r6, ip, #1
 80164f6:	d431      	bmi.n	801655c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xc8>
 80164f8:	42b3      	cmp	r3, r6
 80164fa:	dd2f      	ble.n	801655c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xc8>
 80164fc:	b375      	cbz	r5, 801655c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xc8>
 80164fe:	f8de 6004 	ldr.w	r6, [lr, #4]
 8016502:	3401      	adds	r4, #1
 8016504:	d42e      	bmi.n	8016564 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xd0>
 8016506:	45a0      	cmp	r8, r4
 8016508:	dd2c      	ble.n	8016564 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xd0>
 801650a:	b35f      	cbz	r7, 8016564 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xd0>
 801650c:	f1bc 0f00 	cmp.w	ip, #0
 8016510:	db26      	blt.n	8016560 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xcc>
 8016512:	4563      	cmp	r3, ip
 8016514:	dd24      	ble.n	8016560 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xcc>
 8016516:	f85e 4023 	ldr.w	r4, [lr, r3, lsl #2]
 801651a:	f11c 0c01 	adds.w	ip, ip, #1
 801651e:	d405      	bmi.n	801652c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x98>
 8016520:	4563      	cmp	r3, ip
 8016522:	dd03      	ble.n	801652c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x98>
 8016524:	b115      	cbz	r5, 801652c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x98>
 8016526:	3301      	adds	r3, #1
 8016528:	f85e 0023 	ldr.w	r0, [lr, r3, lsl #2]
 801652c:	2d0f      	cmp	r5, #15
 801652e:	ea4f 6b12 	mov.w	fp, r2, lsr #24
 8016532:	ea4f 6a16 	mov.w	sl, r6, lsr #24
 8016536:	ea4f 6914 	mov.w	r9, r4, lsr #24
 801653a:	ea4f 6810 	mov.w	r8, r0, lsr #24
 801653e:	d801      	bhi.n	8016544 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xb0>
 8016540:	2f0f      	cmp	r7, #15
 8016542:	d911      	bls.n	8016568 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xd4>
 8016544:	4b7b      	ldr	r3, [pc, #492]	; (8016734 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x2a0>)
 8016546:	4a7c      	ldr	r2, [pc, #496]	; (8016738 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x2a4>)
 8016548:	487c      	ldr	r0, [pc, #496]	; (801673c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x2a8>)
 801654a:	f240 210d 	movw	r1, #525	; 0x20d
 801654e:	f001 fd05 	bl	8017f5c <__assert_func>
 8016552:	4602      	mov	r2, r0
 8016554:	e7cd      	b.n	80164f2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x5e>
 8016556:	4606      	mov	r6, r0
 8016558:	4602      	mov	r2, r0
 801655a:	e7d2      	b.n	8016502 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x6e>
 801655c:	4606      	mov	r6, r0
 801655e:	e7d0      	b.n	8016502 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x6e>
 8016560:	4604      	mov	r4, r0
 8016562:	e7da      	b.n	801651a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x86>
 8016564:	4604      	mov	r4, r0
 8016566:	e7e1      	b.n	801652c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x98>
 8016568:	b2ab      	uxth	r3, r5
 801656a:	b2bf      	uxth	r7, r7
 801656c:	fb03 fe07 	mul.w	lr, r3, r7
 8016570:	ebce 1707 	rsb	r7, lr, r7, lsl #4
 8016574:	011b      	lsls	r3, r3, #4
 8016576:	eba3 0c0e 	sub.w	ip, r3, lr
 801657a:	b2bf      	uxth	r7, r7
 801657c:	f5c3 7580 	rsb	r5, r3, #256	; 0x100
 8016580:	fa1f fc8c 	uxth.w	ip, ip
 8016584:	1bed      	subs	r5, r5, r7
 8016586:	b2ad      	uxth	r5, r5
 8016588:	fb0c f30a 	mul.w	r3, ip, sl
 801658c:	fb05 330b 	mla	r3, r5, fp, r3
 8016590:	fb07 3309 	mla	r3, r7, r9, r3
 8016594:	fb0e 3308 	mla	r3, lr, r8, r3
 8016598:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801659c:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 80165a0:	9303      	str	r3, [sp, #12]
 80165a2:	d018      	beq.n	80165d6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x142>
 80165a4:	f002 13ff 	and.w	r3, r2, #16711935	; 0xff00ff
 80165a8:	fb0b f303 	mul.w	r3, fp, r3
 80165ac:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 80165b0:	fb0b fb02 	mul.w	fp, fp, r2
 80165b4:	0a1a      	lsrs	r2, r3, #8
 80165b6:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 80165ba:	f103 1301 	add.w	r3, r3, #65537	; 0x10001
 80165be:	441a      	add	r2, r3
 80165c0:	f50b 7380 	add.w	r3, fp, #256	; 0x100
 80165c4:	eb03 231b 	add.w	r3, r3, fp, lsr #8
 80165c8:	0a12      	lsrs	r2, r2, #8
 80165ca:	0a1b      	lsrs	r3, r3, #8
 80165cc:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 80165d0:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80165d4:	431a      	orrs	r2, r3
 80165d6:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 80165da:	d019      	beq.n	8016610 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x17c>
 80165dc:	f006 1bff 	and.w	fp, r6, #16711935	; 0xff00ff
 80165e0:	fb0a fb0b 	mul.w	fp, sl, fp
 80165e4:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 80165e8:	fb0a fa06 	mul.w	sl, sl, r6
 80165ec:	ea4f 261b 	mov.w	r6, fp, lsr #8
 80165f0:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 80165f4:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 80165f8:	f50a 7380 	add.w	r3, sl, #256	; 0x100
 80165fc:	445e      	add	r6, fp
 80165fe:	eb03 231a 	add.w	r3, r3, sl, lsr #8
 8016602:	0a36      	lsrs	r6, r6, #8
 8016604:	0a1b      	lsrs	r3, r3, #8
 8016606:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 801660a:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801660e:	431e      	orrs	r6, r3
 8016610:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8016614:	d019      	beq.n	801664a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x1b6>
 8016616:	f004 1aff 	and.w	sl, r4, #16711935	; 0xff00ff
 801661a:	fb09 fa0a 	mul.w	sl, r9, sl
 801661e:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 8016622:	fb09 f904 	mul.w	r9, r9, r4
 8016626:	ea4f 241a 	mov.w	r4, sl, lsr #8
 801662a:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 801662e:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8016632:	f509 7380 	add.w	r3, r9, #256	; 0x100
 8016636:	4454      	add	r4, sl
 8016638:	eb03 2319 	add.w	r3, r3, r9, lsr #8
 801663c:	0a24      	lsrs	r4, r4, #8
 801663e:	0a1b      	lsrs	r3, r3, #8
 8016640:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8016644:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8016648:	431c      	orrs	r4, r3
 801664a:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 801664e:	d019      	beq.n	8016684 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x1f0>
 8016650:	f000 19ff 	and.w	r9, r0, #16711935	; 0xff00ff
 8016654:	fb08 f909 	mul.w	r9, r8, r9
 8016658:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 801665c:	fb08 f800 	mul.w	r8, r8, r0
 8016660:	ea4f 2019 	mov.w	r0, r9, lsr #8
 8016664:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 8016668:	f109 1901 	add.w	r9, r9, #65537	; 0x10001
 801666c:	f508 7380 	add.w	r3, r8, #256	; 0x100
 8016670:	4448      	add	r0, r9
 8016672:	eb03 2318 	add.w	r3, r3, r8, lsr #8
 8016676:	0a00      	lsrs	r0, r0, #8
 8016678:	0a1b      	lsrs	r3, r3, #8
 801667a:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 801667e:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8016682:	4318      	orrs	r0, r3
 8016684:	f006 18ff 	and.w	r8, r6, #16711935	; 0xff00ff
 8016688:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 801668c:	f002 13ff 	and.w	r3, r2, #16711935	; 0xff00ff
 8016690:	fb0c f808 	mul.w	r8, ip, r8
 8016694:	fb0c f606 	mul.w	r6, ip, r6
 8016698:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801669c:	fb05 8803 	mla	r8, r5, r3, r8
 80166a0:	fb05 6202 	mla	r2, r5, r2, r6
 80166a4:	f004 13ff 	and.w	r3, r4, #16711935	; 0xff00ff
 80166a8:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 80166ac:	fb07 8803 	mla	r8, r7, r3, r8
 80166b0:	fb07 2704 	mla	r7, r7, r4, r2
 80166b4:	f000 13ff 	and.w	r3, r0, #16711935	; 0xff00ff
 80166b8:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 80166bc:	fb0e 8303 	mla	r3, lr, r3, r8
 80166c0:	fb0e 7e00 	mla	lr, lr, r0, r7
 80166c4:	0a1b      	lsrs	r3, r3, #8
 80166c6:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80166ca:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80166ce:	f40e 4e7f 	and.w	lr, lr, #65280	; 0xff00
 80166d2:	ea43 0e0e 	orr.w	lr, r3, lr
 80166d6:	9b03      	ldr	r3, [sp, #12]
 80166d8:	9800      	ldr	r0, [sp, #0]
 80166da:	9c01      	ldr	r4, [sp, #4]
 80166dc:	9a02      	ldr	r2, [sp, #8]
 80166de:	43db      	mvns	r3, r3
 80166e0:	b2db      	uxtb	r3, r3
 80166e2:	4358      	muls	r0, r3
 80166e4:	435c      	muls	r4, r3
 80166e6:	435a      	muls	r2, r3
 80166e8:	1c43      	adds	r3, r0, #1
 80166ea:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 80166ee:	ea4f 431e 	mov.w	r3, lr, lsr #16
 80166f2:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 80166f6:	4b12      	ldr	r3, [pc, #72]	; (8016740 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x2ac>)
 80166f8:	ea03 2300 	and.w	r3, r3, r0, lsl #8
 80166fc:	1c50      	adds	r0, r2, #1
 80166fe:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 8016702:	fa5f f28e 	uxtb.w	r2, lr
 8016706:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 801670a:	ea43 03d2 	orr.w	r3, r3, r2, lsr #3
 801670e:	1c62      	adds	r2, r4, #1
 8016710:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 8016714:	f3ce 2e07 	ubfx	lr, lr, #8, #8
 8016718:	eb0e 2e12 	add.w	lr, lr, r2, lsr #8
 801671c:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8016720:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 8016724:	ea43 0e0e 	orr.w	lr, r3, lr
 8016728:	f8a1 e000 	strh.w	lr, [r1]
 801672c:	b005      	add	sp, #20
 801672e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016732:	bf00      	nop
 8016734:	0801bc7d 	.word	0x0801bc7d
 8016738:	0801c1d5 	.word	0x0801c1d5
 801673c:	0801bd05 	.word	0x0801bd05
 8016740:	fffff800 	.word	0xfffff800

08016744 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 8016744:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016748:	ed2d 8b08 	vpush	{d8-d11}
 801674c:	b097      	sub	sp, #92	; 0x5c
 801674e:	eeb0 aa40 	vmov.f32	s20, s0
 8016752:	9306      	str	r3, [sp, #24]
 8016754:	f9bd 30c0 	ldrsh.w	r3, [sp, #192]	; 0xc0
 8016758:	9307      	str	r3, [sp, #28]
 801675a:	9214      	str	r2, [sp, #80]	; 0x50
 801675c:	f9bd 30c4 	ldrsh.w	r3, [sp, #196]	; 0xc4
 8016760:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 8016762:	9112      	str	r1, [sp, #72]	; 0x48
 8016764:	9310      	str	r3, [sp, #64]	; 0x40
 8016766:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	; 0xb8
 801676a:	9015      	str	r0, [sp, #84]	; 0x54
 801676c:	6850      	ldr	r0, [r2, #4]
 801676e:	6812      	ldr	r2, [r2, #0]
 8016770:	9d2a      	ldr	r5, [sp, #168]	; 0xa8
 8016772:	fb00 1303 	mla	r3, r0, r3, r1
 8016776:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801677a:	930a      	str	r3, [sp, #40]	; 0x28
 801677c:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 801677e:	681b      	ldr	r3, [r3, #0]
 8016780:	9311      	str	r3, [sp, #68]	; 0x44
 8016782:	9b07      	ldr	r3, [sp, #28]
 8016784:	009b      	lsls	r3, r3, #2
 8016786:	eef0 9a60 	vmov.f32	s19, s1
 801678a:	eeb0 9a41 	vmov.f32	s18, s2
 801678e:	eeb0 8a62 	vmov.f32	s16, s5
 8016792:	eef0 8a43 	vmov.f32	s17, s6
 8016796:	eef0 ba44 	vmov.f32	s23, s8
 801679a:	eeb0 ba64 	vmov.f32	s22, s9
 801679e:	eef0 aa45 	vmov.f32	s21, s10
 80167a2:	930e      	str	r3, [sp, #56]	; 0x38
 80167a4:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80167a6:	2b00      	cmp	r3, #0
 80167a8:	dc03      	bgt.n	80167b2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6e>
 80167aa:	9b14      	ldr	r3, [sp, #80]	; 0x50
 80167ac:	2b00      	cmp	r3, #0
 80167ae:	f340 8361 	ble.w	8016e74 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x730>
 80167b2:	9b06      	ldr	r3, [sp, #24]
 80167b4:	2b00      	cmp	r3, #0
 80167b6:	f340 819b 	ble.w	8016af0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3ac>
 80167ba:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 80167bc:	1412      	asrs	r2, r2, #16
 80167be:	ea4f 4325 	mov.w	r3, r5, asr #16
 80167c2:	d42e      	bmi.n	8016822 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xde>
 80167c4:	9807      	ldr	r0, [sp, #28]
 80167c6:	1c51      	adds	r1, r2, #1
 80167c8:	4288      	cmp	r0, r1
 80167ca:	dd2d      	ble.n	8016828 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe4>
 80167cc:	2b00      	cmp	r3, #0
 80167ce:	db2b      	blt.n	8016828 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe4>
 80167d0:	9810      	ldr	r0, [sp, #64]	; 0x40
 80167d2:	1c59      	adds	r1, r3, #1
 80167d4:	4288      	cmp	r0, r1
 80167d6:	dd27      	ble.n	8016828 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe4>
 80167d8:	9b06      	ldr	r3, [sp, #24]
 80167da:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 80167dc:	9929      	ldr	r1, [sp, #164]	; 0xa4
 80167de:	3b01      	subs	r3, #1
 80167e0:	fb02 1203 	mla	r2, r2, r3, r1
 80167e4:	1412      	asrs	r2, r2, #16
 80167e6:	d42a      	bmi.n	801683e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfa>
 80167e8:	9907      	ldr	r1, [sp, #28]
 80167ea:	3201      	adds	r2, #1
 80167ec:	4291      	cmp	r1, r2
 80167ee:	dd26      	ble.n	801683e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfa>
 80167f0:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 80167f2:	fb02 5303 	mla	r3, r2, r3, r5
 80167f6:	141b      	asrs	r3, r3, #16
 80167f8:	d421      	bmi.n	801683e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfa>
 80167fa:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80167fc:	3301      	adds	r3, #1
 80167fe:	429a      	cmp	r2, r3
 8016800:	dd1d      	ble.n	801683e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfa>
 8016802:	9b06      	ldr	r3, [sp, #24]
 8016804:	f8dd a028 	ldr.w	sl, [sp, #40]	; 0x28
 8016808:	9313      	str	r3, [sp, #76]	; 0x4c
 801680a:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801680c:	2b00      	cmp	r3, #0
 801680e:	f300 81e3 	bgt.w	8016bd8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x494>
 8016812:	9b06      	ldr	r3, [sp, #24]
 8016814:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8016818:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801681a:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 801681e:	930a      	str	r3, [sp, #40]	; 0x28
 8016820:	e168      	b.n	8016af4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3b0>
 8016822:	1c51      	adds	r1, r2, #1
 8016824:	f040 8157 	bne.w	8016ad6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x392>
 8016828:	9907      	ldr	r1, [sp, #28]
 801682a:	428a      	cmp	r2, r1
 801682c:	f280 8153 	bge.w	8016ad6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x392>
 8016830:	1c5f      	adds	r7, r3, #1
 8016832:	f2c0 8150 	blt.w	8016ad6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x392>
 8016836:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8016838:	4293      	cmp	r3, r2
 801683a:	f280 814c 	bge.w	8016ad6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x392>
 801683e:	9b06      	ldr	r3, [sp, #24]
 8016840:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8016842:	9313      	str	r3, [sp, #76]	; 0x4c
 8016844:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8016846:	2b00      	cmp	r3, #0
 8016848:	dde3      	ble.n	8016812 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xce>
 801684a:	9929      	ldr	r1, [sp, #164]	; 0xa4
 801684c:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 801684e:	1409      	asrs	r1, r1, #16
 8016850:	ea4f 4325 	mov.w	r3, r5, asr #16
 8016854:	f3c2 3203 	ubfx	r2, r2, #12, #4
 8016858:	f3c5 3003 	ubfx	r0, r5, #12, #4
 801685c:	f100 81a3 	bmi.w	8016ba6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x462>
 8016860:	9c07      	ldr	r4, [sp, #28]
 8016862:	1c4e      	adds	r6, r1, #1
 8016864:	42b4      	cmp	r4, r6
 8016866:	f340 81a0 	ble.w	8016baa <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x466>
 801686a:	2b00      	cmp	r3, #0
 801686c:	f2c0 819d 	blt.w	8016baa <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x466>
 8016870:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8016872:	1c5e      	adds	r6, r3, #1
 8016874:	42b4      	cmp	r4, r6
 8016876:	f340 8198 	ble.w	8016baa <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x466>
 801687a:	9c07      	ldr	r4, [sp, #28]
 801687c:	fb03 1304 	mla	r3, r3, r4, r1
 8016880:	9911      	ldr	r1, [sp, #68]	; 0x44
 8016882:	eb01 0683 	add.w	r6, r1, r3, lsl #2
 8016886:	f851 3023 	ldr.w	r3, [r1, r3, lsl #2]
 801688a:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 801688e:	2a00      	cmp	r2, #0
 8016890:	f000 816f 	beq.w	8016b72 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x42e>
 8016894:	6871      	ldr	r1, [r6, #4]
 8016896:	910b      	str	r1, [sp, #44]	; 0x2c
 8016898:	ea4f 6811 	mov.w	r8, r1, lsr #24
 801689c:	2800      	cmp	r0, #0
 801689e:	f000 8171 	beq.w	8016b84 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x440>
 80168a2:	990e      	ldr	r1, [sp, #56]	; 0x38
 80168a4:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 80168a6:	1871      	adds	r1, r6, r1
 80168a8:	5934      	ldr	r4, [r6, r4]
 80168aa:	6849      	ldr	r1, [r1, #4]
 80168ac:	9408      	str	r4, [sp, #32]
 80168ae:	ea4f 6a14 	mov.w	sl, r4, lsr #24
 80168b2:	910c      	str	r1, [sp, #48]	; 0x30
 80168b4:	0e0e      	lsrs	r6, r1, #24
 80168b6:	b292      	uxth	r2, r2
 80168b8:	b280      	uxth	r0, r0
 80168ba:	fb02 fb00 	mul.w	fp, r2, r0
 80168be:	ebcb 1000 	rsb	r0, fp, r0, lsl #4
 80168c2:	0112      	lsls	r2, r2, #4
 80168c4:	eba2 090b 	sub.w	r9, r2, fp
 80168c8:	b280      	uxth	r0, r0
 80168ca:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 80168ce:	fa1f f989 	uxth.w	r9, r9
 80168d2:	1a09      	subs	r1, r1, r0
 80168d4:	b289      	uxth	r1, r1
 80168d6:	fb09 f208 	mul.w	r2, r9, r8
 80168da:	fb01 220c 	mla	r2, r1, ip, r2
 80168de:	fb00 220a 	mla	r2, r0, sl, r2
 80168e2:	fb0b 2206 	mla	r2, fp, r6, r2
 80168e6:	f3c2 2207 	ubfx	r2, r2, #8, #8
 80168ea:	2a00      	cmp	r2, #0
 80168ec:	f000 80e8 	beq.w	8016ac0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x37c>
 80168f0:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 80168f4:	d01b      	beq.n	801692e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1ea>
 80168f6:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 80168fa:	fb0c fe0e 	mul.w	lr, ip, lr
 80168fe:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8016902:	fb0c fc03 	mul.w	ip, ip, r3
 8016906:	ea4f 231e 	mov.w	r3, lr, lsr #8
 801690a:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801690e:	f10e 1e01 	add.w	lr, lr, #65537	; 0x10001
 8016912:	4473      	add	r3, lr
 8016914:	f50c 7e80 	add.w	lr, ip, #256	; 0x100
 8016918:	eb0e 2e1c 	add.w	lr, lr, ip, lsr #8
 801691c:	0a1b      	lsrs	r3, r3, #8
 801691e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8016922:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8016926:	f40e 4e7f 	and.w	lr, lr, #65280	; 0xff00
 801692a:	ea43 030e 	orr.w	r3, r3, lr
 801692e:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8016932:	d01e      	beq.n	8016972 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x22e>
 8016934:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8016936:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801693a:	fb08 fc0c 	mul.w	ip, r8, ip
 801693e:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
 8016942:	fb08 f80e 	mul.w	r8, r8, lr
 8016946:	ea4f 2e1c 	mov.w	lr, ip, lsr #8
 801694a:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801694e:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8016952:	44e6      	add	lr, ip
 8016954:	f508 7c80 	add.w	ip, r8, #256	; 0x100
 8016958:	eb0c 2818 	add.w	r8, ip, r8, lsr #8
 801695c:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8016960:	ea4f 2818 	mov.w	r8, r8, lsr #8
 8016964:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8016968:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 801696c:	ea4e 0408 	orr.w	r4, lr, r8
 8016970:	940b      	str	r4, [sp, #44]	; 0x2c
 8016972:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 8016976:	d01e      	beq.n	80169b6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x272>
 8016978:	9c08      	ldr	r4, [sp, #32]
 801697a:	f004 18ff 	and.w	r8, r4, #16711935	; 0xff00ff
 801697e:	fb0a f808 	mul.w	r8, sl, r8
 8016982:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 8016986:	fb0a fa0c 	mul.w	sl, sl, ip
 801698a:	ea4f 2e18 	mov.w	lr, r8, lsr #8
 801698e:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8016992:	f108 1801 	add.w	r8, r8, #65537	; 0x10001
 8016996:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801699a:	44c6      	add	lr, r8
 801699c:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80169a0:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80169a4:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80169a8:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80169ac:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80169b0:	ea4e 040a 	orr.w	r4, lr, sl
 80169b4:	9408      	str	r4, [sp, #32]
 80169b6:	2eff      	cmp	r6, #255	; 0xff
 80169b8:	d01d      	beq.n	80169f6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2b2>
 80169ba:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 80169bc:	f004 18ff 	and.w	r8, r4, #16711935	; 0xff00ff
 80169c0:	fb06 f808 	mul.w	r8, r6, r8
 80169c4:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 80169c8:	fb06 f60c 	mul.w	r6, r6, ip
 80169cc:	ea4f 2e18 	mov.w	lr, r8, lsr #8
 80169d0:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80169d4:	f108 1801 	add.w	r8, r8, #65537	; 0x10001
 80169d8:	f506 7c80 	add.w	ip, r6, #256	; 0x100
 80169dc:	44c6      	add	lr, r8
 80169de:	eb0c 2616 	add.w	r6, ip, r6, lsr #8
 80169e2:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80169e6:	0a36      	lsrs	r6, r6, #8
 80169e8:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80169ec:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 80169f0:	ea4e 0406 	orr.w	r4, lr, r6
 80169f4:	940c      	str	r4, [sp, #48]	; 0x30
 80169f6:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 80169f8:	f004 16ff 	and.w	r6, r4, #16711935	; 0xff00ff
 80169fc:	9c08      	ldr	r4, [sp, #32]
 80169fe:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 8016a02:	fb09 f606 	mul.w	r6, r9, r6
 8016a06:	fb01 660c 	mla	r6, r1, ip, r6
 8016a0a:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8016a0e:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8016a10:	fb00 660c 	mla	r6, r0, ip, r6
 8016a14:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8016a18:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8016a1a:	fb0b 660c 	mla	r6, fp, ip, r6
 8016a1e:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 8016a22:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8016a26:	fb09 f90c 	mul.w	r9, r9, ip
 8016a2a:	fb01 9303 	mla	r3, r1, r3, r9
 8016a2e:	9908      	ldr	r1, [sp, #32]
 8016a30:	f401 4e7f 	and.w	lr, r1, #65280	; 0xff00
 8016a34:	990c      	ldr	r1, [sp, #48]	; 0x30
 8016a36:	fb00 330e 	mla	r3, r0, lr, r3
 8016a3a:	f401 407f 	and.w	r0, r1, #65280	; 0xff00
 8016a3e:	fb0b 3b00 	mla	fp, fp, r0, r3
 8016a42:	0a36      	lsrs	r6, r6, #8
 8016a44:	ea4f 2b1b 	mov.w	fp, fp, lsr #8
 8016a48:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8016a4c:	f40b 4b7f 	and.w	fp, fp, #65280	; 0xff00
 8016a50:	ea46 060b 	orr.w	r6, r6, fp
 8016a54:	2aff      	cmp	r2, #255	; 0xff
 8016a56:	ea4f 2316 	mov.w	r3, r6, lsr #8
 8016a5a:	f000 8099 	beq.w	8016b90 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x44c>
 8016a5e:	8839      	ldrh	r1, [r7, #0]
 8016a60:	43d2      	mvns	r2, r2
 8016a62:	ea4f 2c21 	mov.w	ip, r1, asr #8
 8016a66:	fa5f fe82 	uxtb.w	lr, r2
 8016a6a:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8016a6e:	fb0c fc0e 	mul.w	ip, ip, lr
 8016a72:	10c8      	asrs	r0, r1, #3
 8016a74:	00ca      	lsls	r2, r1, #3
 8016a76:	f10c 0101 	add.w	r1, ip, #1
 8016a7a:	eb01 211c 	add.w	r1, r1, ip, lsr #8
 8016a7e:	ea4f 4c16 	mov.w	ip, r6, lsr #16
 8016a82:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 8016a86:	b2d2      	uxtb	r2, r2
 8016a88:	4952      	ldr	r1, [pc, #328]	; (8016bd4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x490>)
 8016a8a:	fb02 f20e 	mul.w	r2, r2, lr
 8016a8e:	ea01 2c0c 	and.w	ip, r1, ip, lsl #8
 8016a92:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8016a96:	1c51      	adds	r1, r2, #1
 8016a98:	fb00 f00e 	mul.w	r0, r0, lr
 8016a9c:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8016aa0:	b2f6      	uxtb	r6, r6
 8016aa2:	eb06 2612 	add.w	r6, r6, r2, lsr #8
 8016aa6:	1c42      	adds	r2, r0, #1
 8016aa8:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8016aac:	b2db      	uxtb	r3, r3
 8016aae:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8016ab2:	00db      	lsls	r3, r3, #3
 8016ab4:	ea4c 06d6 	orr.w	r6, ip, r6, lsr #3
 8016ab8:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8016abc:	431e      	orrs	r6, r3
 8016abe:	803e      	strh	r6, [r7, #0]
 8016ac0:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8016ac2:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8016ac4:	441a      	add	r2, r3
 8016ac6:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8016ac8:	9229      	str	r2, [sp, #164]	; 0xa4
 8016aca:	441d      	add	r5, r3
 8016acc:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8016ace:	3b01      	subs	r3, #1
 8016ad0:	3702      	adds	r7, #2
 8016ad2:	9313      	str	r3, [sp, #76]	; 0x4c
 8016ad4:	e6b6      	b.n	8016844 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x100>
 8016ad6:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8016ad8:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8016ada:	441a      	add	r2, r3
 8016adc:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8016ade:	9229      	str	r2, [sp, #164]	; 0xa4
 8016ae0:	441d      	add	r5, r3
 8016ae2:	9b06      	ldr	r3, [sp, #24]
 8016ae4:	3b01      	subs	r3, #1
 8016ae6:	9306      	str	r3, [sp, #24]
 8016ae8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8016aea:	3302      	adds	r3, #2
 8016aec:	930a      	str	r3, [sp, #40]	; 0x28
 8016aee:	e660      	b.n	80167b2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6e>
 8016af0:	f47f ae72 	bne.w	80167d8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x94>
 8016af4:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8016af6:	2b00      	cmp	r3, #0
 8016af8:	f340 81bc 	ble.w	8016e74 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x730>
 8016afc:	ee3a aa2b 	vadd.f32	s20, s20, s23
 8016b00:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8016b04:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 8016b08:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8016b0a:	ee79 9a8b 	vadd.f32	s19, s19, s22
 8016b0e:	ee39 9a2a 	vadd.f32	s18, s18, s21
 8016b12:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8016b16:	eef0 6a48 	vmov.f32	s13, s16
 8016b1a:	ee69 7a27 	vmul.f32	s15, s18, s15
 8016b1e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8016b22:	ee37 8a48 	vsub.f32	s16, s14, s16
 8016b26:	edcd 6a29 	vstr	s13, [sp, #164]	; 0xa4
 8016b2a:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8016b2e:	eef0 6a68 	vmov.f32	s13, s17
 8016b32:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8016b36:	ee18 2a10 	vmov	r2, s16
 8016b3a:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8016b3e:	fb92 f3f3 	sdiv	r3, r2, r3
 8016b42:	ee18 2a90 	vmov	r2, s17
 8016b46:	932b      	str	r3, [sp, #172]	; 0xac
 8016b48:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8016b4a:	fb92 f3f3 	sdiv	r3, r2, r3
 8016b4e:	932c      	str	r3, [sp, #176]	; 0xb0
 8016b50:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8016b52:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8016b54:	3b01      	subs	r3, #1
 8016b56:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8016b5a:	9312      	str	r3, [sp, #72]	; 0x48
 8016b5c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8016b5e:	bf08      	it	eq
 8016b60:	4613      	moveq	r3, r2
 8016b62:	ee16 5a90 	vmov	r5, s13
 8016b66:	9306      	str	r3, [sp, #24]
 8016b68:	eef0 8a67 	vmov.f32	s17, s15
 8016b6c:	eeb0 8a47 	vmov.f32	s16, s14
 8016b70:	e618      	b.n	80167a4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x60>
 8016b72:	b150      	cbz	r0, 8016b8a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x446>
 8016b74:	990e      	ldr	r1, [sp, #56]	; 0x38
 8016b76:	5871      	ldr	r1, [r6, r1]
 8016b78:	9108      	str	r1, [sp, #32]
 8016b7a:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 8016b7e:	26ff      	movs	r6, #255	; 0xff
 8016b80:	46b0      	mov	r8, r6
 8016b82:	e698      	b.n	80168b6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x172>
 8016b84:	26ff      	movs	r6, #255	; 0xff
 8016b86:	46b2      	mov	sl, r6
 8016b88:	e695      	b.n	80168b6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x172>
 8016b8a:	26ff      	movs	r6, #255	; 0xff
 8016b8c:	46b2      	mov	sl, r6
 8016b8e:	e7f7      	b.n	8016b80 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x43c>
 8016b90:	0972      	lsrs	r2, r6, #5
 8016b92:	f423 63ff 	bic.w	r3, r3, #2040	; 0x7f8
 8016b96:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8016b9a:	f023 0307 	bic.w	r3, r3, #7
 8016b9e:	4313      	orrs	r3, r2
 8016ba0:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 8016ba4:	e78a      	b.n	8016abc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x378>
 8016ba6:	1c4e      	adds	r6, r1, #1
 8016ba8:	d18a      	bne.n	8016ac0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x37c>
 8016baa:	9c07      	ldr	r4, [sp, #28]
 8016bac:	428c      	cmp	r4, r1
 8016bae:	dd87      	ble.n	8016ac0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x37c>
 8016bb0:	1c5c      	adds	r4, r3, #1
 8016bb2:	db85      	blt.n	8016ac0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x37c>
 8016bb4:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8016bb6:	429c      	cmp	r4, r3
 8016bb8:	dd82      	ble.n	8016ac0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x37c>
 8016bba:	e9cd 2003 	strd	r2, r0, [sp, #12]
 8016bbe:	e9cd 1301 	strd	r1, r3, [sp, #4]
 8016bc2:	9400      	str	r4, [sp, #0]
 8016bc4:	9b07      	ldr	r3, [sp, #28]
 8016bc6:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8016bc8:	9815      	ldr	r0, [sp, #84]	; 0x54
 8016bca:	4639      	mov	r1, r7
 8016bcc:	f7ff fc62 	bl	8016494 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>
 8016bd0:	e776      	b.n	8016ac0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x37c>
 8016bd2:	bf00      	nop
 8016bd4:	fffff800 	.word	0xfffff800
 8016bd8:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8016bda:	9929      	ldr	r1, [sp, #164]	; 0xa4
 8016bdc:	9c07      	ldr	r4, [sp, #28]
 8016bde:	1409      	asrs	r1, r1, #16
 8016be0:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8016be4:	142b      	asrs	r3, r5, #16
 8016be6:	fb04 1303 	mla	r3, r4, r3, r1
 8016bea:	9911      	ldr	r1, [sp, #68]	; 0x44
 8016bec:	eb01 0683 	add.w	r6, r1, r3, lsl #2
 8016bf0:	f851 3023 	ldr.w	r3, [r1, r3, lsl #2]
 8016bf4:	f3c5 3003 	ubfx	r0, r5, #12, #4
 8016bf8:	0e1f      	lsrs	r7, r3, #24
 8016bfa:	2a00      	cmp	r2, #0
 8016bfc:	f000 811d 	beq.w	8016e3a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6f6>
 8016c00:	6871      	ldr	r1, [r6, #4]
 8016c02:	910d      	str	r1, [sp, #52]	; 0x34
 8016c04:	ea4f 6e11 	mov.w	lr, r1, lsr #24
 8016c08:	2800      	cmp	r0, #0
 8016c0a:	f000 811f 	beq.w	8016e4c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x708>
 8016c0e:	990e      	ldr	r1, [sp, #56]	; 0x38
 8016c10:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8016c12:	1871      	adds	r1, r6, r1
 8016c14:	5934      	ldr	r4, [r6, r4]
 8016c16:	6849      	ldr	r1, [r1, #4]
 8016c18:	9409      	str	r4, [sp, #36]	; 0x24
 8016c1a:	ea4f 6914 	mov.w	r9, r4, lsr #24
 8016c1e:	910f      	str	r1, [sp, #60]	; 0x3c
 8016c20:	0e0e      	lsrs	r6, r1, #24
 8016c22:	b292      	uxth	r2, r2
 8016c24:	b280      	uxth	r0, r0
 8016c26:	fb02 fb00 	mul.w	fp, r2, r0
 8016c2a:	ebcb 1000 	rsb	r0, fp, r0, lsl #4
 8016c2e:	0112      	lsls	r2, r2, #4
 8016c30:	eba2 080b 	sub.w	r8, r2, fp
 8016c34:	b280      	uxth	r0, r0
 8016c36:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 8016c3a:	fa1f f888 	uxth.w	r8, r8
 8016c3e:	1a09      	subs	r1, r1, r0
 8016c40:	b289      	uxth	r1, r1
 8016c42:	fb08 f20e 	mul.w	r2, r8, lr
 8016c46:	fb01 2207 	mla	r2, r1, r7, r2
 8016c4a:	fb00 2209 	mla	r2, r0, r9, r2
 8016c4e:	fb0b 2206 	mla	r2, fp, r6, r2
 8016c52:	f3c2 2207 	ubfx	r2, r2, #8, #8
 8016c56:	2a00      	cmp	r2, #0
 8016c58:	f000 80e3 	beq.w	8016e22 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6de>
 8016c5c:	2fff      	cmp	r7, #255	; 0xff
 8016c5e:	d01a      	beq.n	8016c96 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x552>
 8016c60:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 8016c64:	fb07 fc0c 	mul.w	ip, r7, ip
 8016c68:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8016c6c:	435f      	muls	r7, r3
 8016c6e:	ea4f 231c 	mov.w	r3, ip, lsr #8
 8016c72:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8016c76:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8016c7a:	4463      	add	r3, ip
 8016c7c:	f507 7c80 	add.w	ip, r7, #256	; 0x100
 8016c80:	eb0c 2c17 	add.w	ip, ip, r7, lsr #8
 8016c84:	0a1b      	lsrs	r3, r3, #8
 8016c86:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8016c8a:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8016c8e:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8016c92:	ea43 030c 	orr.w	r3, r3, ip
 8016c96:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 8016c9a:	d01e      	beq.n	8016cda <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x596>
 8016c9c:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8016c9e:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8016ca2:	fb0e f707 	mul.w	r7, lr, r7
 8016ca6:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 8016caa:	fb0e fe0c 	mul.w	lr, lr, ip
 8016cae:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8016cb2:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8016cb6:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8016cba:	44bc      	add	ip, r7
 8016cbc:	f50e 7780 	add.w	r7, lr, #256	; 0x100
 8016cc0:	eb07 2e1e 	add.w	lr, r7, lr, lsr #8
 8016cc4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8016cc8:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8016ccc:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8016cd0:	f40e 4e7f 	and.w	lr, lr, #65280	; 0xff00
 8016cd4:	ea4c 040e 	orr.w	r4, ip, lr
 8016cd8:	940d      	str	r4, [sp, #52]	; 0x34
 8016cda:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8016cde:	d01e      	beq.n	8016d1e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x5da>
 8016ce0:	9c09      	ldr	r4, [sp, #36]	; 0x24
 8016ce2:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 8016ce6:	fb09 fe0e 	mul.w	lr, r9, lr
 8016cea:	f404 477f 	and.w	r7, r4, #65280	; 0xff00
 8016cee:	fb09 f907 	mul.w	r9, r9, r7
 8016cf2:	ea4f 2c1e 	mov.w	ip, lr, lsr #8
 8016cf6:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8016cfa:	f10e 1e01 	add.w	lr, lr, #65537	; 0x10001
 8016cfe:	f509 7780 	add.w	r7, r9, #256	; 0x100
 8016d02:	44f4      	add	ip, lr
 8016d04:	eb07 2919 	add.w	r9, r7, r9, lsr #8
 8016d08:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8016d0c:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8016d10:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8016d14:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 8016d18:	ea4c 0409 	orr.w	r4, ip, r9
 8016d1c:	9409      	str	r4, [sp, #36]	; 0x24
 8016d1e:	2eff      	cmp	r6, #255	; 0xff
 8016d20:	d01c      	beq.n	8016d5c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x618>
 8016d22:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8016d24:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 8016d28:	fb06 fe0e 	mul.w	lr, r6, lr
 8016d2c:	f404 477f 	and.w	r7, r4, #65280	; 0xff00
 8016d30:	437e      	muls	r6, r7
 8016d32:	ea4f 2c1e 	mov.w	ip, lr, lsr #8
 8016d36:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8016d3a:	f10e 1e01 	add.w	lr, lr, #65537	; 0x10001
 8016d3e:	f506 7780 	add.w	r7, r6, #256	; 0x100
 8016d42:	44f4      	add	ip, lr
 8016d44:	eb07 2616 	add.w	r6, r7, r6, lsr #8
 8016d48:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8016d4c:	0a36      	lsrs	r6, r6, #8
 8016d4e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8016d52:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8016d56:	ea4c 0406 	orr.w	r4, ip, r6
 8016d5a:	940f      	str	r4, [sp, #60]	; 0x3c
 8016d5c:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8016d5e:	f004 16ff 	and.w	r6, r4, #16711935	; 0xff00ff
 8016d62:	9c09      	ldr	r4, [sp, #36]	; 0x24
 8016d64:	f003 17ff 	and.w	r7, r3, #16711935	; 0xff00ff
 8016d68:	fb08 f606 	mul.w	r6, r8, r6
 8016d6c:	fb01 6607 	mla	r6, r1, r7, r6
 8016d70:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8016d74:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8016d76:	fb00 6607 	mla	r6, r0, r7, r6
 8016d7a:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8016d7e:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8016d80:	fb0b 6607 	mla	r6, fp, r7, r6
 8016d84:	f404 477f 	and.w	r7, r4, #65280	; 0xff00
 8016d88:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8016d8c:	fb08 f807 	mul.w	r8, r8, r7
 8016d90:	fb01 8303 	mla	r3, r1, r3, r8
 8016d94:	9909      	ldr	r1, [sp, #36]	; 0x24
 8016d96:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
 8016d9a:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8016d9c:	fb00 330c 	mla	r3, r0, ip, r3
 8016da0:	f401 4e7f 	and.w	lr, r1, #65280	; 0xff00
 8016da4:	fb0b 3e0e 	mla	lr, fp, lr, r3
 8016da8:	0a36      	lsrs	r6, r6, #8
 8016daa:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8016dae:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8016db2:	f40e 4e7f 	and.w	lr, lr, #65280	; 0xff00
 8016db6:	ea46 060e 	orr.w	r6, r6, lr
 8016dba:	2aff      	cmp	r2, #255	; 0xff
 8016dbc:	ea4f 2316 	mov.w	r3, r6, lsr #8
 8016dc0:	d04a      	beq.n	8016e58 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x714>
 8016dc2:	f8ba 1000 	ldrh.w	r1, [sl]
 8016dc6:	43d2      	mvns	r2, r2
 8016dc8:	120f      	asrs	r7, r1, #8
 8016dca:	fa5f fc82 	uxtb.w	ip, r2
 8016dce:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8016dd2:	fb07 f70c 	mul.w	r7, r7, ip
 8016dd6:	10c8      	asrs	r0, r1, #3
 8016dd8:	00ca      	lsls	r2, r1, #3
 8016dda:	1c79      	adds	r1, r7, #1
 8016ddc:	eb01 2117 	add.w	r1, r1, r7, lsr #8
 8016de0:	0c37      	lsrs	r7, r6, #16
 8016de2:	eb07 2711 	add.w	r7, r7, r1, lsr #8
 8016de6:	b2d2      	uxtb	r2, r2
 8016de8:	4925      	ldr	r1, [pc, #148]	; (8016e80 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x73c>)
 8016dea:	fb02 f20c 	mul.w	r2, r2, ip
 8016dee:	ea01 2707 	and.w	r7, r1, r7, lsl #8
 8016df2:	1c51      	adds	r1, r2, #1
 8016df4:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8016df8:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8016dfc:	b2f6      	uxtb	r6, r6
 8016dfe:	fb00 f00c 	mul.w	r0, r0, ip
 8016e02:	eb06 2612 	add.w	r6, r6, r2, lsr #8
 8016e06:	ea47 07d6 	orr.w	r7, r7, r6, lsr #3
 8016e0a:	1c46      	adds	r6, r0, #1
 8016e0c:	eb06 2010 	add.w	r0, r6, r0, lsr #8
 8016e10:	b2de      	uxtb	r6, r3
 8016e12:	eb06 2610 	add.w	r6, r6, r0, lsr #8
 8016e16:	00f6      	lsls	r6, r6, #3
 8016e18:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8016e1c:	4337      	orrs	r7, r6
 8016e1e:	f8aa 7000 	strh.w	r7, [sl]
 8016e22:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8016e24:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8016e26:	441a      	add	r2, r3
 8016e28:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8016e2a:	9229      	str	r2, [sp, #164]	; 0xa4
 8016e2c:	441d      	add	r5, r3
 8016e2e:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8016e30:	3b01      	subs	r3, #1
 8016e32:	f10a 0a02 	add.w	sl, sl, #2
 8016e36:	9313      	str	r3, [sp, #76]	; 0x4c
 8016e38:	e4e7      	b.n	801680a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xc6>
 8016e3a:	b150      	cbz	r0, 8016e52 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x70e>
 8016e3c:	990e      	ldr	r1, [sp, #56]	; 0x38
 8016e3e:	5871      	ldr	r1, [r6, r1]
 8016e40:	9109      	str	r1, [sp, #36]	; 0x24
 8016e42:	ea4f 6911 	mov.w	r9, r1, lsr #24
 8016e46:	26ff      	movs	r6, #255	; 0xff
 8016e48:	46b6      	mov	lr, r6
 8016e4a:	e6ea      	b.n	8016c22 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4de>
 8016e4c:	26ff      	movs	r6, #255	; 0xff
 8016e4e:	46b1      	mov	r9, r6
 8016e50:	e6e7      	b.n	8016c22 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4de>
 8016e52:	26ff      	movs	r6, #255	; 0xff
 8016e54:	46b1      	mov	r9, r6
 8016e56:	e7f7      	b.n	8016e48 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x704>
 8016e58:	0972      	lsrs	r2, r6, #5
 8016e5a:	f423 63ff 	bic.w	r3, r3, #2040	; 0x7f8
 8016e5e:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8016e62:	f023 0307 	bic.w	r3, r3, #7
 8016e66:	4313      	orrs	r3, r2
 8016e68:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 8016e6c:	431e      	orrs	r6, r3
 8016e6e:	f8aa 6000 	strh.w	r6, [sl]
 8016e72:	e7d6      	b.n	8016e22 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6de>
 8016e74:	b017      	add	sp, #92	; 0x5c
 8016e76:	ecbd 8b08 	vpop	{d8-d11}
 8016e7a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016e7e:	bf00      	nop
 8016e80:	fffff800 	.word	0xfffff800

08016e84 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>:
 8016e84:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8016e88:	e9dd c40a 	ldrd	ip, r4, [sp, #40]	; 0x28
 8016e8c:	2c00      	cmp	r4, #0
 8016e8e:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 8016e92:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 8016e96:	f89d 5030 	ldrb.w	r5, [sp, #48]	; 0x30
 8016e9a:	f89d 7034 	ldrb.w	r7, [sp, #52]	; 0x34
 8016e9e:	fb04 ce03 	mla	lr, r4, r3, ip
 8016ea2:	db60      	blt.n	8016f66 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xe2>
 8016ea4:	45a1      	cmp	r9, r4
 8016ea6:	dd5e      	ble.n	8016f66 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xe2>
 8016ea8:	f1bc 0f00 	cmp.w	ip, #0
 8016eac:	db59      	blt.n	8016f62 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xde>
 8016eae:	45e0      	cmp	r8, ip
 8016eb0:	dd57      	ble.n	8016f62 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xde>
 8016eb2:	ea4f 005e 	mov.w	r0, lr, lsr #1
 8016eb6:	f01e 0f01 	tst.w	lr, #1
 8016eba:	5c16      	ldrb	r6, [r2, r0]
 8016ebc:	bf0c      	ite	eq
 8016ebe:	f006 060f 	andeq.w	r6, r6, #15
 8016ec2:	1136      	asrne	r6, r6, #4
 8016ec4:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 8016ec8:	b2f6      	uxtb	r6, r6
 8016eca:	f11c 0001 	adds.w	r0, ip, #1
 8016ece:	d44d      	bmi.n	8016f6c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xe8>
 8016ed0:	4580      	cmp	r8, r0
 8016ed2:	dd4b      	ble.n	8016f6c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xe8>
 8016ed4:	2d00      	cmp	r5, #0
 8016ed6:	d04b      	beq.n	8016f70 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xec>
 8016ed8:	f10e 0a01 	add.w	sl, lr, #1
 8016edc:	ea4f 005a 	mov.w	r0, sl, lsr #1
 8016ee0:	f01a 0f01 	tst.w	sl, #1
 8016ee4:	5c10      	ldrb	r0, [r2, r0]
 8016ee6:	bf0c      	ite	eq
 8016ee8:	f000 000f 	andeq.w	r0, r0, #15
 8016eec:	1100      	asrne	r0, r0, #4
 8016eee:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 8016ef2:	b2c0      	uxtb	r0, r0
 8016ef4:	3401      	adds	r4, #1
 8016ef6:	d43f      	bmi.n	8016f78 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xf4>
 8016ef8:	45a1      	cmp	r9, r4
 8016efa:	dd3d      	ble.n	8016f78 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xf4>
 8016efc:	2f00      	cmp	r7, #0
 8016efe:	f000 809e 	beq.w	801703e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1ba>
 8016f02:	f1bc 0f00 	cmp.w	ip, #0
 8016f06:	db35      	blt.n	8016f74 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xf0>
 8016f08:	45e0      	cmp	r8, ip
 8016f0a:	dd33      	ble.n	8016f74 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xf0>
 8016f0c:	eb03 090e 	add.w	r9, r3, lr
 8016f10:	ea4f 0459 	mov.w	r4, r9, lsr #1
 8016f14:	f019 0f01 	tst.w	r9, #1
 8016f18:	5d14      	ldrb	r4, [r2, r4]
 8016f1a:	bf0c      	ite	eq
 8016f1c:	f004 040f 	andeq.w	r4, r4, #15
 8016f20:	1124      	asrne	r4, r4, #4
 8016f22:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 8016f26:	b2e4      	uxtb	r4, r4
 8016f28:	f11c 0c01 	adds.w	ip, ip, #1
 8016f2c:	d427      	bmi.n	8016f7e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xfa>
 8016f2e:	45e0      	cmp	r8, ip
 8016f30:	dd25      	ble.n	8016f7e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xfa>
 8016f32:	b335      	cbz	r5, 8016f82 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xfe>
 8016f34:	3301      	adds	r3, #1
 8016f36:	449e      	add	lr, r3
 8016f38:	ea4f 035e 	mov.w	r3, lr, lsr #1
 8016f3c:	f01e 0f01 	tst.w	lr, #1
 8016f40:	5cd2      	ldrb	r2, [r2, r3]
 8016f42:	bf0c      	ite	eq
 8016f44:	f002 020f 	andeq.w	r2, r2, #15
 8016f48:	1112      	asrne	r2, r2, #4
 8016f4a:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8016f4e:	b2d3      	uxtb	r3, r2
 8016f50:	2d0f      	cmp	r5, #15
 8016f52:	d917      	bls.n	8016f84 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x100>
 8016f54:	4b3c      	ldr	r3, [pc, #240]	; (8017048 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1c4>)
 8016f56:	4a3d      	ldr	r2, [pc, #244]	; (801704c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1c8>)
 8016f58:	483d      	ldr	r0, [pc, #244]	; (8017050 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1cc>)
 8016f5a:	f240 210d 	movw	r1, #525	; 0x20d
 8016f5e:	f000 fffd 	bl	8017f5c <__assert_func>
 8016f62:	2600      	movs	r6, #0
 8016f64:	e7b1      	b.n	8016eca <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x46>
 8016f66:	2000      	movs	r0, #0
 8016f68:	4606      	mov	r6, r0
 8016f6a:	e7c3      	b.n	8016ef4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x70>
 8016f6c:	2000      	movs	r0, #0
 8016f6e:	e7c1      	b.n	8016ef4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x70>
 8016f70:	4628      	mov	r0, r5
 8016f72:	e7bf      	b.n	8016ef4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x70>
 8016f74:	2400      	movs	r4, #0
 8016f76:	e7d7      	b.n	8016f28 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xa4>
 8016f78:	2300      	movs	r3, #0
 8016f7a:	461c      	mov	r4, r3
 8016f7c:	e7e8      	b.n	8016f50 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xcc>
 8016f7e:	2300      	movs	r3, #0
 8016f80:	e7e6      	b.n	8016f50 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xcc>
 8016f82:	462b      	mov	r3, r5
 8016f84:	2f0f      	cmp	r7, #15
 8016f86:	d8e5      	bhi.n	8016f54 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xd0>
 8016f88:	b2ad      	uxth	r5, r5
 8016f8a:	b2bf      	uxth	r7, r7
 8016f8c:	fb05 fc07 	mul.w	ip, r5, r7
 8016f90:	ebcc 1707 	rsb	r7, ip, r7, lsl #4
 8016f94:	012d      	lsls	r5, r5, #4
 8016f96:	b2bf      	uxth	r7, r7
 8016f98:	f5c5 7280 	rsb	r2, r5, #256	; 0x100
 8016f9c:	eba5 050c 	sub.w	r5, r5, ip
 8016fa0:	1bd2      	subs	r2, r2, r7
 8016fa2:	b2ad      	uxth	r5, r5
 8016fa4:	b292      	uxth	r2, r2
 8016fa6:	4368      	muls	r0, r5
 8016fa8:	fb06 0002 	mla	r0, r6, r2, r0
 8016fac:	fb07 0404 	mla	r4, r7, r4, r0
 8016fb0:	fb0c 4303 	mla	r3, ip, r3, r4
 8016fb4:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8016fb8:	2b00      	cmp	r3, #0
 8016fba:	d03e      	beq.n	801703a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1b6>
 8016fbc:	f89d 0038 	ldrb.w	r0, [sp, #56]	; 0x38
 8016fc0:	4a24      	ldr	r2, [pc, #144]	; (8017054 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1d0>)
 8016fc2:	4343      	muls	r3, r0
 8016fc4:	1c58      	adds	r0, r3, #1
 8016fc6:	6816      	ldr	r6, [r2, #0]
 8016fc8:	880a      	ldrh	r2, [r1, #0]
 8016fca:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8016fce:	1200      	asrs	r0, r0, #8
 8016fd0:	b284      	uxth	r4, r0
 8016fd2:	1215      	asrs	r5, r2, #8
 8016fd4:	43c0      	mvns	r0, r0
 8016fd6:	b2c3      	uxtb	r3, r0
 8016fd8:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8016fdc:	0a30      	lsrs	r0, r6, #8
 8016fde:	fb15 f503 	smulbb	r5, r5, r3
 8016fe2:	10d7      	asrs	r7, r2, #3
 8016fe4:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8016fe8:	fb00 5004 	mla	r0, r0, r4, r5
 8016fec:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8016ff0:	08f5      	lsrs	r5, r6, #3
 8016ff2:	00d2      	lsls	r2, r2, #3
 8016ff4:	fb17 f703 	smulbb	r7, r7, r3
 8016ff8:	b2d2      	uxtb	r2, r2
 8016ffa:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8016ffe:	00f6      	lsls	r6, r6, #3
 8017000:	fb05 7504 	mla	r5, r5, r4, r7
 8017004:	fb12 f303 	smulbb	r3, r2, r3
 8017008:	b2f6      	uxtb	r6, r6
 801700a:	fb06 3304 	mla	r3, r6, r4, r3
 801700e:	b2ad      	uxth	r5, r5
 8017010:	b29a      	uxth	r2, r3
 8017012:	b280      	uxth	r0, r0
 8017014:	1c6b      	adds	r3, r5, #1
 8017016:	eb03 2315 	add.w	r3, r3, r5, lsr #8
 801701a:	1c44      	adds	r4, r0, #1
 801701c:	095b      	lsrs	r3, r3, #5
 801701e:	eb04 2010 	add.w	r0, r4, r0, lsr #8
 8017022:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 8017026:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801702a:	4303      	orrs	r3, r0
 801702c:	1c50      	adds	r0, r2, #1
 801702e:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 8017032:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8017036:	4313      	orrs	r3, r2
 8017038:	800b      	strh	r3, [r1, #0]
 801703a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801703e:	2d0f      	cmp	r5, #15
 8017040:	d888      	bhi.n	8016f54 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xd0>
 8017042:	463b      	mov	r3, r7
 8017044:	463c      	mov	r4, r7
 8017046:	e79f      	b.n	8016f88 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x104>
 8017048:	0801bc7d 	.word	0x0801bc7d
 801704c:	0801c1d5 	.word	0x0801c1d5
 8017050:	0801bd05 	.word	0x0801bd05
 8017054:	20012180 	.word	0x20012180

08017058 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 8017058:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801705c:	ed2d 8b08 	vpush	{d8-d11}
 8017060:	b099      	sub	sp, #100	; 0x64
 8017062:	e9dd 462b 	ldrd	r4, r6, [sp, #172]	; 0xac
 8017066:	9309      	str	r3, [sp, #36]	; 0x24
 8017068:	f9bd 30c8 	ldrsh.w	r3, [sp, #200]	; 0xc8
 801706c:	930a      	str	r3, [sp, #40]	; 0x28
 801706e:	f9bd 30cc 	ldrsh.w	r3, [sp, #204]	; 0xcc
 8017072:	9216      	str	r2, [sp, #88]	; 0x58
 8017074:	930b      	str	r3, [sp, #44]	; 0x2c
 8017076:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 8017078:	f89d 30d4 	ldrb.w	r3, [sp, #212]	; 0xd4
 801707c:	910f      	str	r1, [sp, #60]	; 0x3c
 801707e:	9310      	str	r3, [sp, #64]	; 0x40
 8017080:	e9dd 1330 	ldrd	r1, r3, [sp, #192]	; 0xc0
 8017084:	9017      	str	r0, [sp, #92]	; 0x5c
 8017086:	6850      	ldr	r0, [r2, #4]
 8017088:	6812      	ldr	r2, [r2, #0]
 801708a:	fb00 1303 	mla	r3, r0, r3, r1
 801708e:	eb02 0a43 	add.w	sl, r2, r3, lsl #1
 8017092:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8017094:	3301      	adds	r3, #1
 8017096:	f023 0301 	bic.w	r3, r3, #1
 801709a:	930c      	str	r3, [sp, #48]	; 0x30
 801709c:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 801709e:	681f      	ldr	r7, [r3, #0]
 80170a0:	eeb0 aa40 	vmov.f32	s20, s0
 80170a4:	eef0 9a60 	vmov.f32	s19, s1
 80170a8:	eeb0 9a41 	vmov.f32	s18, s2
 80170ac:	eeb0 8a62 	vmov.f32	s16, s5
 80170b0:	eef0 8a43 	vmov.f32	s17, s6
 80170b4:	eef0 ba44 	vmov.f32	s23, s8
 80170b8:	eeb0 ba64 	vmov.f32	s22, s9
 80170bc:	eef0 aa45 	vmov.f32	s21, s10
 80170c0:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80170c2:	2b00      	cmp	r3, #0
 80170c4:	dc03      	bgt.n	80170ce <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x76>
 80170c6:	9b16      	ldr	r3, [sp, #88]	; 0x58
 80170c8:	2b00      	cmp	r3, #0
 80170ca:	f340 8267 	ble.w	801759c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x544>
 80170ce:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80170d0:	2b00      	cmp	r3, #0
 80170d2:	f340 811e 	ble.w	8017312 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2ba>
 80170d6:	1422      	asrs	r2, r4, #16
 80170d8:	ea4f 4326 	mov.w	r3, r6, asr #16
 80170dc:	d42d      	bmi.n	801713a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe2>
 80170de:	980a      	ldr	r0, [sp, #40]	; 0x28
 80170e0:	1c51      	adds	r1, r2, #1
 80170e2:	4288      	cmp	r0, r1
 80170e4:	dd2c      	ble.n	8017140 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe8>
 80170e6:	2b00      	cmp	r3, #0
 80170e8:	db2a      	blt.n	8017140 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe8>
 80170ea:	980b      	ldr	r0, [sp, #44]	; 0x2c
 80170ec:	1c59      	adds	r1, r3, #1
 80170ee:	4288      	cmp	r0, r1
 80170f0:	dd26      	ble.n	8017140 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe8>
 80170f2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80170f4:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 80170f6:	3b01      	subs	r3, #1
 80170f8:	fb02 4203 	mla	r2, r2, r3, r4
 80170fc:	1412      	asrs	r2, r2, #16
 80170fe:	d42a      	bmi.n	8017156 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfe>
 8017100:	990a      	ldr	r1, [sp, #40]	; 0x28
 8017102:	3201      	adds	r2, #1
 8017104:	4291      	cmp	r1, r2
 8017106:	dd26      	ble.n	8017156 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfe>
 8017108:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
 801710a:	fb02 6303 	mla	r3, r2, r3, r6
 801710e:	141b      	asrs	r3, r3, #16
 8017110:	d421      	bmi.n	8017156 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfe>
 8017112:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8017114:	3301      	adds	r3, #1
 8017116:	429a      	cmp	r2, r3
 8017118:	dd1d      	ble.n	8017156 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfe>
 801711a:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	; 0x30
 801711e:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 8017122:	9311      	str	r3, [sp, #68]	; 0x44
 8017124:	46d1      	mov	r9, sl
 8017126:	f1bb 0f00 	cmp.w	fp, #0
 801712a:	f300 8162 	bgt.w	80173f2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x39a>
 801712e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8017130:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8017134:	eb0a 0a45 	add.w	sl, sl, r5, lsl #1
 8017138:	e0ed      	b.n	8017316 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2be>
 801713a:	1c51      	adds	r1, r2, #1
 801713c:	f040 80df 	bne.w	80172fe <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2a6>
 8017140:	990a      	ldr	r1, [sp, #40]	; 0x28
 8017142:	4291      	cmp	r1, r2
 8017144:	f340 80db 	ble.w	80172fe <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2a6>
 8017148:	1c5a      	adds	r2, r3, #1
 801714a:	f2c0 80d8 	blt.w	80172fe <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2a6>
 801714e:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8017150:	4293      	cmp	r3, r2
 8017152:	f280 80d4 	bge.w	80172fe <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2a6>
 8017156:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	; 0x30
 801715a:	f8dd 9024 	ldr.w	r9, [sp, #36]	; 0x24
 801715e:	9311      	str	r3, [sp, #68]	; 0x44
 8017160:	46d0      	mov	r8, sl
 8017162:	f1b9 0f00 	cmp.w	r9, #0
 8017166:	dde2      	ble.n	801712e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xd6>
 8017168:	1420      	asrs	r0, r4, #16
 801716a:	ea4f 4326 	mov.w	r3, r6, asr #16
 801716e:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8017172:	f3c6 3103 	ubfx	r1, r6, #12, #4
 8017176:	f100 8121 	bmi.w	80173bc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x364>
 801717a:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 801717c:	f100 0c01 	add.w	ip, r0, #1
 8017180:	4565      	cmp	r5, ip
 8017182:	f340 811d 	ble.w	80173c0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x368>
 8017186:	2b00      	cmp	r3, #0
 8017188:	f2c0 811a 	blt.w	80173c0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x368>
 801718c:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 801718e:	f103 0c01 	add.w	ip, r3, #1
 8017192:	4565      	cmp	r5, ip
 8017194:	f340 8114 	ble.w	80173c0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x368>
 8017198:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801719a:	fb03 0305 	mla	r3, r3, r5, r0
 801719e:	0858      	lsrs	r0, r3, #1
 80171a0:	07dd      	lsls	r5, r3, #31
 80171a2:	5c38      	ldrb	r0, [r7, r0]
 80171a4:	bf54      	ite	pl
 80171a6:	f000 000f 	andpl.w	r0, r0, #15
 80171aa:	1100      	asrmi	r0, r0, #4
 80171ac:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 80171b0:	b2c0      	uxtb	r0, r0
 80171b2:	2a00      	cmp	r2, #0
 80171b4:	f000 80ee 	beq.w	8017394 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x33c>
 80171b8:	f103 0e01 	add.w	lr, r3, #1
 80171bc:	ea4f 0c5e 	mov.w	ip, lr, lsr #1
 80171c0:	f01e 0f01 	tst.w	lr, #1
 80171c4:	f817 c00c 	ldrb.w	ip, [r7, ip]
 80171c8:	bf0c      	ite	eq
 80171ca:	f00c 0c0f 	andeq.w	ip, ip, #15
 80171ce:	ea4f 1c2c 	movne.w	ip, ip, asr #4
 80171d2:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 80171d6:	fa5f f58c 	uxtb.w	r5, ip
 80171da:	9512      	str	r5, [sp, #72]	; 0x48
 80171dc:	b1f9      	cbz	r1, 801721e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1c6>
 80171de:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80171e0:	442b      	add	r3, r5
 80171e2:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 80171e6:	07dd      	lsls	r5, r3, #31
 80171e8:	f817 c00c 	ldrb.w	ip, [r7, ip]
 80171ec:	bf54      	ite	pl
 80171ee:	f00c 0c0f 	andpl.w	ip, ip, #15
 80171f2:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 80171f6:	3301      	adds	r3, #1
 80171f8:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 80171fc:	fa5f f58c 	uxtb.w	r5, ip
 8017200:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 8017204:	950d      	str	r5, [sp, #52]	; 0x34
 8017206:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801720a:	07dd      	lsls	r5, r3, #31
 801720c:	bf54      	ite	pl
 801720e:	f00c 030f 	andpl.w	r3, ip, #15
 8017212:	ea4f 132c 	movmi.w	r3, ip, asr #4
 8017216:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 801721a:	b2db      	uxtb	r3, r3
 801721c:	9313      	str	r3, [sp, #76]	; 0x4c
 801721e:	b292      	uxth	r2, r2
 8017220:	b289      	uxth	r1, r1
 8017222:	fb02 f301 	mul.w	r3, r2, r1
 8017226:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 801722a:	0112      	lsls	r2, r2, #4
 801722c:	b289      	uxth	r1, r1
 801722e:	f5c2 7c80 	rsb	ip, r2, #256	; 0x100
 8017232:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8017234:	1ad2      	subs	r2, r2, r3
 8017236:	ebac 0c01 	sub.w	ip, ip, r1
 801723a:	b292      	uxth	r2, r2
 801723c:	436a      	muls	r2, r5
 801723e:	fa1f fc8c 	uxth.w	ip, ip
 8017242:	fb00 200c 	mla	r0, r0, ip, r2
 8017246:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8017248:	fb01 0102 	mla	r1, r1, r2, r0
 801724c:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801724e:	fb03 1302 	mla	r3, r3, r2, r1
 8017252:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8017256:	2b00      	cmp	r3, #0
 8017258:	d048      	beq.n	80172ec <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x294>
 801725a:	9910      	ldr	r1, [sp, #64]	; 0x40
 801725c:	4ace      	ldr	r2, [pc, #824]	; (8017598 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x540>)
 801725e:	434b      	muls	r3, r1
 8017260:	1c59      	adds	r1, r3, #1
 8017262:	f8d2 e000 	ldr.w	lr, [r2]
 8017266:	f8b8 2000 	ldrh.w	r2, [r8]
 801726a:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 801726e:	121b      	asrs	r3, r3, #8
 8017270:	b299      	uxth	r1, r3
 8017272:	ea4f 2c22 	mov.w	ip, r2, asr #8
 8017276:	43db      	mvns	r3, r3
 8017278:	b2db      	uxtb	r3, r3
 801727a:	ea4f 201e 	mov.w	r0, lr, lsr #8
 801727e:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8017282:	fb1c fc03 	smulbb	ip, ip, r3
 8017286:	ea4f 0be2 	mov.w	fp, r2, asr #3
 801728a:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801728e:	fb00 c001 	mla	r0, r0, r1, ip
 8017292:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 8017296:	ea4f 0cde 	mov.w	ip, lr, lsr #3
 801729a:	fb1b fb03 	smulbb	fp, fp, r3
 801729e:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 80172a2:	00d2      	lsls	r2, r2, #3
 80172a4:	fb0c bc01 	mla	ip, ip, r1, fp
 80172a8:	b2d2      	uxtb	r2, r2
 80172aa:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80172ae:	fb12 f303 	smulbb	r3, r2, r3
 80172b2:	fa1f fc8c 	uxth.w	ip, ip
 80172b6:	fa5f fe8e 	uxtb.w	lr, lr
 80172ba:	b280      	uxth	r0, r0
 80172bc:	fb0e 3101 	mla	r1, lr, r1, r3
 80172c0:	f10c 0201 	add.w	r2, ip, #1
 80172c4:	b289      	uxth	r1, r1
 80172c6:	1c43      	adds	r3, r0, #1
 80172c8:	eb02 221c 	add.w	r2, r2, ip, lsr #8
 80172cc:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 80172d0:	0952      	lsrs	r2, r2, #5
 80172d2:	1c4b      	adds	r3, r1, #1
 80172d4:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80172d8:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 80172dc:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 80172e0:	4310      	orrs	r0, r2
 80172e2:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 80172e6:	4308      	orrs	r0, r1
 80172e8:	f8a8 0000 	strh.w	r0, [r8]
 80172ec:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 80172ee:	441c      	add	r4, r3
 80172f0:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 80172f2:	f108 0802 	add.w	r8, r8, #2
 80172f6:	441e      	add	r6, r3
 80172f8:	f109 39ff 	add.w	r9, r9, #4294967295
 80172fc:	e731      	b.n	8017162 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x10a>
 80172fe:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8017300:	441c      	add	r4, r3
 8017302:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8017304:	441e      	add	r6, r3
 8017306:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8017308:	3b01      	subs	r3, #1
 801730a:	9309      	str	r3, [sp, #36]	; 0x24
 801730c:	f10a 0a02 	add.w	sl, sl, #2
 8017310:	e6dd      	b.n	80170ce <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x76>
 8017312:	f47f aeee 	bne.w	80170f2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9a>
 8017316:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8017318:	2b00      	cmp	r3, #0
 801731a:	f340 813f 	ble.w	801759c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x544>
 801731e:	ee3a aa2b 	vadd.f32	s20, s20, s23
 8017322:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8017326:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 801732a:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801732c:	ee79 9a8b 	vadd.f32	s19, s19, s22
 8017330:	ee39 9a2a 	vadd.f32	s18, s18, s21
 8017334:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8017338:	eef0 6a48 	vmov.f32	s13, s16
 801733c:	ee69 7a27 	vmul.f32	s15, s18, s15
 8017340:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8017344:	ee37 8a48 	vsub.f32	s16, s14, s16
 8017348:	ee16 4a90 	vmov	r4, s13
 801734c:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8017350:	eef0 6a68 	vmov.f32	s13, s17
 8017354:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8017358:	ee18 2a10 	vmov	r2, s16
 801735c:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8017360:	fb92 f3f3 	sdiv	r3, r2, r3
 8017364:	ee18 2a90 	vmov	r2, s17
 8017368:	932d      	str	r3, [sp, #180]	; 0xb4
 801736a:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801736c:	fb92 f3f3 	sdiv	r3, r2, r3
 8017370:	932e      	str	r3, [sp, #184]	; 0xb8
 8017372:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8017374:	9a16      	ldr	r2, [sp, #88]	; 0x58
 8017376:	3b01      	subs	r3, #1
 8017378:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801737c:	930f      	str	r3, [sp, #60]	; 0x3c
 801737e:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8017380:	bf08      	it	eq
 8017382:	4613      	moveq	r3, r2
 8017384:	ee16 6a90 	vmov	r6, s13
 8017388:	9309      	str	r3, [sp, #36]	; 0x24
 801738a:	eef0 8a67 	vmov.f32	s17, s15
 801738e:	eeb0 8a47 	vmov.f32	s16, s14
 8017392:	e695      	b.n	80170c0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x68>
 8017394:	2900      	cmp	r1, #0
 8017396:	f43f af42 	beq.w	801721e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1c6>
 801739a:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801739c:	442b      	add	r3, r5
 801739e:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 80173a2:	07db      	lsls	r3, r3, #31
 80173a4:	f817 c00c 	ldrb.w	ip, [r7, ip]
 80173a8:	bf54      	ite	pl
 80173aa:	f00c 030f 	andpl.w	r3, ip, #15
 80173ae:	ea4f 132c 	movmi.w	r3, ip, asr #4
 80173b2:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 80173b6:	b2db      	uxtb	r3, r3
 80173b8:	930d      	str	r3, [sp, #52]	; 0x34
 80173ba:	e730      	b.n	801721e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1c6>
 80173bc:	1c45      	adds	r5, r0, #1
 80173be:	d195      	bne.n	80172ec <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x294>
 80173c0:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 80173c2:	4285      	cmp	r5, r0
 80173c4:	dd92      	ble.n	80172ec <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x294>
 80173c6:	1c5d      	adds	r5, r3, #1
 80173c8:	db90      	blt.n	80172ec <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x294>
 80173ca:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 80173cc:	429d      	cmp	r5, r3
 80173ce:	dd8d      	ble.n	80172ec <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x294>
 80173d0:	e9cd 3203 	strd	r3, r2, [sp, #12]
 80173d4:	9d10      	ldr	r5, [sp, #64]	; 0x40
 80173d6:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80173d8:	9301      	str	r3, [sp, #4]
 80173da:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80173dc:	9002      	str	r0, [sp, #8]
 80173de:	e9cd 1505 	strd	r1, r5, [sp, #20]
 80173e2:	9300      	str	r3, [sp, #0]
 80173e4:	463a      	mov	r2, r7
 80173e6:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80173e8:	9817      	ldr	r0, [sp, #92]	; 0x5c
 80173ea:	4641      	mov	r1, r8
 80173ec:	f7ff fd4a 	bl	8016e84 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>
 80173f0:	e77c      	b.n	80172ec <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x294>
 80173f2:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 80173f4:	1422      	asrs	r2, r4, #16
 80173f6:	1433      	asrs	r3, r6, #16
 80173f8:	fb05 2303 	mla	r3, r5, r3, r2
 80173fc:	085a      	lsrs	r2, r3, #1
 80173fe:	07dd      	lsls	r5, r3, #31
 8017400:	5cba      	ldrb	r2, [r7, r2]
 8017402:	bf54      	ite	pl
 8017404:	f002 020f 	andpl.w	r2, r2, #15
 8017408:	1112      	asrmi	r2, r2, #4
 801740a:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801740e:	f3c4 3103 	ubfx	r1, r4, #12, #4
 8017412:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8017416:	b2d2      	uxtb	r2, r2
 8017418:	2900      	cmp	r1, #0
 801741a:	f000 80a8 	beq.w	801756e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x516>
 801741e:	f103 0e01 	add.w	lr, r3, #1
 8017422:	ea4f 0c5e 	mov.w	ip, lr, lsr #1
 8017426:	f01e 0f01 	tst.w	lr, #1
 801742a:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801742e:	bf0c      	ite	eq
 8017430:	f00c 0c0f 	andeq.w	ip, ip, #15
 8017434:	ea4f 1c2c 	movne.w	ip, ip, asr #4
 8017438:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801743c:	fa5f f58c 	uxtb.w	r5, ip
 8017440:	9514      	str	r5, [sp, #80]	; 0x50
 8017442:	b300      	cbz	r0, 8017486 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x42e>
 8017444:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8017446:	442b      	add	r3, r5
 8017448:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 801744c:	07dd      	lsls	r5, r3, #31
 801744e:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8017452:	bf54      	ite	pl
 8017454:	f00c 0c0f 	andpl.w	ip, ip, #15
 8017458:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801745c:	3301      	adds	r3, #1
 801745e:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8017462:	fa5f f58c 	uxtb.w	r5, ip
 8017466:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 801746a:	950e      	str	r5, [sp, #56]	; 0x38
 801746c:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8017470:	07dd      	lsls	r5, r3, #31
 8017472:	bf54      	ite	pl
 8017474:	f00c 0c0f 	andpl.w	ip, ip, #15
 8017478:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801747c:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8017480:	fa5f f38c 	uxtb.w	r3, ip
 8017484:	9315      	str	r3, [sp, #84]	; 0x54
 8017486:	b289      	uxth	r1, r1
 8017488:	b280      	uxth	r0, r0
 801748a:	fb01 f300 	mul.w	r3, r1, r0
 801748e:	ebc3 1000 	rsb	r0, r3, r0, lsl #4
 8017492:	0109      	lsls	r1, r1, #4
 8017494:	b280      	uxth	r0, r0
 8017496:	f5c1 7c80 	rsb	ip, r1, #256	; 0x100
 801749a:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801749c:	1ac9      	subs	r1, r1, r3
 801749e:	ebac 0c00 	sub.w	ip, ip, r0
 80174a2:	b289      	uxth	r1, r1
 80174a4:	4369      	muls	r1, r5
 80174a6:	fa1f fc8c 	uxth.w	ip, ip
 80174aa:	fb02 120c 	mla	r2, r2, ip, r1
 80174ae:	990e      	ldr	r1, [sp, #56]	; 0x38
 80174b0:	fb00 2001 	mla	r0, r0, r1, r2
 80174b4:	9a15      	ldr	r2, [sp, #84]	; 0x54
 80174b6:	fb03 0302 	mla	r3, r3, r2, r0
 80174ba:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80174be:	2b00      	cmp	r3, #0
 80174c0:	d04c      	beq.n	801755c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x504>
 80174c2:	9910      	ldr	r1, [sp, #64]	; 0x40
 80174c4:	4a34      	ldr	r2, [pc, #208]	; (8017598 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x540>)
 80174c6:	434b      	muls	r3, r1
 80174c8:	1c59      	adds	r1, r3, #1
 80174ca:	f8d2 e000 	ldr.w	lr, [r2]
 80174ce:	f8b9 2000 	ldrh.w	r2, [r9]
 80174d2:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 80174d6:	121b      	asrs	r3, r3, #8
 80174d8:	b299      	uxth	r1, r3
 80174da:	ea4f 2c22 	mov.w	ip, r2, asr #8
 80174de:	43db      	mvns	r3, r3
 80174e0:	b2db      	uxtb	r3, r3
 80174e2:	ea4f 201e 	mov.w	r0, lr, lsr #8
 80174e6:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80174ea:	fb1c fc03 	smulbb	ip, ip, r3
 80174ee:	ea4f 08e2 	mov.w	r8, r2, asr #3
 80174f2:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 80174f6:	fb00 c001 	mla	r0, r0, r1, ip
 80174fa:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 80174fe:	ea4f 0cde 	mov.w	ip, lr, lsr #3
 8017502:	fb18 f803 	smulbb	r8, r8, r3
 8017506:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 801750a:	00d2      	lsls	r2, r2, #3
 801750c:	fb0c 8c01 	mla	ip, ip, r1, r8
 8017510:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8017514:	b2d2      	uxtb	r2, r2
 8017516:	fa1f fc8c 	uxth.w	ip, ip
 801751a:	fa5f fe8e 	uxtb.w	lr, lr
 801751e:	fb12 f203 	smulbb	r2, r2, r3
 8017522:	b280      	uxth	r0, r0
 8017524:	fb0e 2201 	mla	r2, lr, r1, r2
 8017528:	f10c 0801 	add.w	r8, ip, #1
 801752c:	b292      	uxth	r2, r2
 801752e:	eb08 2c1c 	add.w	ip, r8, ip, lsr #8
 8017532:	f100 0801 	add.w	r8, r0, #1
 8017536:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 801753a:	eb08 2010 	add.w	r0, r8, r0, lsr #8
 801753e:	1c51      	adds	r1, r2, #1
 8017540:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8017544:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 8017548:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801754c:	ea4c 0c00 	orr.w	ip, ip, r0
 8017550:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8017554:	ea4c 0c02 	orr.w	ip, ip, r2
 8017558:	f8a9 c000 	strh.w	ip, [r9]
 801755c:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 801755e:	441c      	add	r4, r3
 8017560:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8017562:	f109 0902 	add.w	r9, r9, #2
 8017566:	441e      	add	r6, r3
 8017568:	f10b 3bff 	add.w	fp, fp, #4294967295
 801756c:	e5db      	b.n	8017126 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xce>
 801756e:	2800      	cmp	r0, #0
 8017570:	d089      	beq.n	8017486 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x42e>
 8017572:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8017574:	442b      	add	r3, r5
 8017576:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 801757a:	07db      	lsls	r3, r3, #31
 801757c:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8017580:	bf54      	ite	pl
 8017582:	f00c 0c0f 	andpl.w	ip, ip, #15
 8017586:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801758a:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801758e:	fa5f f38c 	uxtb.w	r3, ip
 8017592:	930e      	str	r3, [sp, #56]	; 0x38
 8017594:	e777      	b.n	8017486 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x42e>
 8017596:	bf00      	nop
 8017598:	20012180 	.word	0x20012180
 801759c:	b019      	add	sp, #100	; 0x64
 801759e:	ecbd 8b08 	vpop	{d8-d11}
 80175a2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80175a6:	bf00      	nop

080175a8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>:
 80175a8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80175ac:	e9dd c40a 	ldrd	ip, r4, [sp, #40]	; 0x28
 80175b0:	2c00      	cmp	r4, #0
 80175b2:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 80175b6:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 80175ba:	f89d 5030 	ldrb.w	r5, [sp, #48]	; 0x30
 80175be:	f89d 7034 	ldrb.w	r7, [sp, #52]	; 0x34
 80175c2:	fb04 ce03 	mla	lr, r4, r3, ip
 80175c6:	db60      	blt.n	801768a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xe2>
 80175c8:	45a1      	cmp	r9, r4
 80175ca:	dd5e      	ble.n	801768a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xe2>
 80175cc:	f1bc 0f00 	cmp.w	ip, #0
 80175d0:	db59      	blt.n	8017686 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xde>
 80175d2:	45e0      	cmp	r8, ip
 80175d4:	dd57      	ble.n	8017686 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xde>
 80175d6:	ea4f 005e 	mov.w	r0, lr, lsr #1
 80175da:	f01e 0f01 	tst.w	lr, #1
 80175de:	5c16      	ldrb	r6, [r2, r0]
 80175e0:	bf0c      	ite	eq
 80175e2:	f006 060f 	andeq.w	r6, r6, #15
 80175e6:	1136      	asrne	r6, r6, #4
 80175e8:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 80175ec:	b2f6      	uxtb	r6, r6
 80175ee:	f11c 0001 	adds.w	r0, ip, #1
 80175f2:	d44d      	bmi.n	8017690 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xe8>
 80175f4:	4580      	cmp	r8, r0
 80175f6:	dd4b      	ble.n	8017690 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xe8>
 80175f8:	2d00      	cmp	r5, #0
 80175fa:	d04b      	beq.n	8017694 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xec>
 80175fc:	f10e 0a01 	add.w	sl, lr, #1
 8017600:	ea4f 005a 	mov.w	r0, sl, lsr #1
 8017604:	f01a 0f01 	tst.w	sl, #1
 8017608:	5c10      	ldrb	r0, [r2, r0]
 801760a:	bf0c      	ite	eq
 801760c:	f000 000f 	andeq.w	r0, r0, #15
 8017610:	1100      	asrne	r0, r0, #4
 8017612:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 8017616:	b2c0      	uxtb	r0, r0
 8017618:	3401      	adds	r4, #1
 801761a:	d43f      	bmi.n	801769c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xf4>
 801761c:	45a1      	cmp	r9, r4
 801761e:	dd3d      	ble.n	801769c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xf4>
 8017620:	2f00      	cmp	r7, #0
 8017622:	f000 8097 	beq.w	8017754 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1ac>
 8017626:	f1bc 0f00 	cmp.w	ip, #0
 801762a:	db35      	blt.n	8017698 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xf0>
 801762c:	45e0      	cmp	r8, ip
 801762e:	dd33      	ble.n	8017698 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xf0>
 8017630:	eb03 090e 	add.w	r9, r3, lr
 8017634:	ea4f 0459 	mov.w	r4, r9, lsr #1
 8017638:	f019 0f01 	tst.w	r9, #1
 801763c:	5d14      	ldrb	r4, [r2, r4]
 801763e:	bf0c      	ite	eq
 8017640:	f004 040f 	andeq.w	r4, r4, #15
 8017644:	1124      	asrne	r4, r4, #4
 8017646:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 801764a:	b2e4      	uxtb	r4, r4
 801764c:	f11c 0c01 	adds.w	ip, ip, #1
 8017650:	d427      	bmi.n	80176a2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xfa>
 8017652:	45e0      	cmp	r8, ip
 8017654:	dd25      	ble.n	80176a2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xfa>
 8017656:	b335      	cbz	r5, 80176a6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xfe>
 8017658:	3301      	adds	r3, #1
 801765a:	449e      	add	lr, r3
 801765c:	ea4f 035e 	mov.w	r3, lr, lsr #1
 8017660:	f01e 0f01 	tst.w	lr, #1
 8017664:	5cd2      	ldrb	r2, [r2, r3]
 8017666:	bf0c      	ite	eq
 8017668:	f002 020f 	andeq.w	r2, r2, #15
 801766c:	1112      	asrne	r2, r2, #4
 801766e:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8017672:	b2d3      	uxtb	r3, r2
 8017674:	2d0f      	cmp	r5, #15
 8017676:	d917      	bls.n	80176a8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x100>
 8017678:	4b39      	ldr	r3, [pc, #228]	; (8017760 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1b8>)
 801767a:	4a3a      	ldr	r2, [pc, #232]	; (8017764 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1bc>)
 801767c:	483a      	ldr	r0, [pc, #232]	; (8017768 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1c0>)
 801767e:	f240 210d 	movw	r1, #525	; 0x20d
 8017682:	f000 fc6b 	bl	8017f5c <__assert_func>
 8017686:	2600      	movs	r6, #0
 8017688:	e7b1      	b.n	80175ee <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x46>
 801768a:	2000      	movs	r0, #0
 801768c:	4606      	mov	r6, r0
 801768e:	e7c3      	b.n	8017618 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x70>
 8017690:	2000      	movs	r0, #0
 8017692:	e7c1      	b.n	8017618 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x70>
 8017694:	4628      	mov	r0, r5
 8017696:	e7bf      	b.n	8017618 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x70>
 8017698:	2400      	movs	r4, #0
 801769a:	e7d7      	b.n	801764c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xa4>
 801769c:	2300      	movs	r3, #0
 801769e:	461c      	mov	r4, r3
 80176a0:	e7e8      	b.n	8017674 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xcc>
 80176a2:	2300      	movs	r3, #0
 80176a4:	e7e6      	b.n	8017674 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xcc>
 80176a6:	462b      	mov	r3, r5
 80176a8:	2f0f      	cmp	r7, #15
 80176aa:	d8e5      	bhi.n	8017678 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xd0>
 80176ac:	b2ad      	uxth	r5, r5
 80176ae:	b2bf      	uxth	r7, r7
 80176b0:	fb05 fc07 	mul.w	ip, r5, r7
 80176b4:	ebcc 1707 	rsb	r7, ip, r7, lsl #4
 80176b8:	012d      	lsls	r5, r5, #4
 80176ba:	b2bf      	uxth	r7, r7
 80176bc:	f5c5 7280 	rsb	r2, r5, #256	; 0x100
 80176c0:	eba5 050c 	sub.w	r5, r5, ip
 80176c4:	1bd2      	subs	r2, r2, r7
 80176c6:	b2ad      	uxth	r5, r5
 80176c8:	b292      	uxth	r2, r2
 80176ca:	4368      	muls	r0, r5
 80176cc:	fb06 0002 	mla	r0, r6, r2, r0
 80176d0:	fb07 0404 	mla	r4, r7, r4, r0
 80176d4:	fb0c 4303 	mla	r3, ip, r3, r4
 80176d8:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80176dc:	2b00      	cmp	r3, #0
 80176de:	d037      	beq.n	8017750 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a8>
 80176e0:	4a22      	ldr	r2, [pc, #136]	; (801776c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1c4>)
 80176e2:	6816      	ldr	r6, [r2, #0]
 80176e4:	880a      	ldrh	r2, [r1, #0]
 80176e6:	b298      	uxth	r0, r3
 80176e8:	1215      	asrs	r5, r2, #8
 80176ea:	43db      	mvns	r3, r3
 80176ec:	b2db      	uxtb	r3, r3
 80176ee:	0a34      	lsrs	r4, r6, #8
 80176f0:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 80176f4:	fb15 f503 	smulbb	r5, r5, r3
 80176f8:	10d7      	asrs	r7, r2, #3
 80176fa:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 80176fe:	fb04 5400 	mla	r4, r4, r0, r5
 8017702:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8017706:	08f5      	lsrs	r5, r6, #3
 8017708:	fb17 f703 	smulbb	r7, r7, r3
 801770c:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8017710:	00d2      	lsls	r2, r2, #3
 8017712:	fb05 7500 	mla	r5, r5, r0, r7
 8017716:	b2d2      	uxtb	r2, r2
 8017718:	00f6      	lsls	r6, r6, #3
 801771a:	fb12 f303 	smulbb	r3, r2, r3
 801771e:	b2ad      	uxth	r5, r5
 8017720:	b2f6      	uxtb	r6, r6
 8017722:	b2a4      	uxth	r4, r4
 8017724:	fb06 3000 	mla	r0, r6, r0, r3
 8017728:	1c6b      	adds	r3, r5, #1
 801772a:	b280      	uxth	r0, r0
 801772c:	1c62      	adds	r2, r4, #1
 801772e:	eb03 2315 	add.w	r3, r3, r5, lsr #8
 8017732:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 8017736:	095b      	lsrs	r3, r3, #5
 8017738:	1c42      	adds	r2, r0, #1
 801773a:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801773e:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 8017742:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8017746:	4323      	orrs	r3, r4
 8017748:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 801774c:	4303      	orrs	r3, r0
 801774e:	800b      	strh	r3, [r1, #0]
 8017750:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8017754:	2d0f      	cmp	r5, #15
 8017756:	d88f      	bhi.n	8017678 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xd0>
 8017758:	463b      	mov	r3, r7
 801775a:	463c      	mov	r4, r7
 801775c:	e7a6      	b.n	80176ac <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x104>
 801775e:	bf00      	nop
 8017760:	0801bc7d 	.word	0x0801bc7d
 8017764:	0801c1d5 	.word	0x0801c1d5
 8017768:	0801bd05 	.word	0x0801bd05
 801776c:	20012180 	.word	0x20012180

08017770 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 8017770:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017774:	ed2d 8b08 	vpush	{d8-d11}
 8017778:	b095      	sub	sp, #84	; 0x54
 801777a:	e9dd 4627 	ldrd	r4, r6, [sp, #156]	; 0x9c
 801777e:	9306      	str	r3, [sp, #24]
 8017780:	f9bd 30b8 	ldrsh.w	r3, [sp, #184]	; 0xb8
 8017784:	9307      	str	r3, [sp, #28]
 8017786:	920d      	str	r2, [sp, #52]	; 0x34
 8017788:	f9bd 30bc 	ldrsh.w	r3, [sp, #188]	; 0xbc
 801778c:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 801778e:	910a      	str	r1, [sp, #40]	; 0x28
 8017790:	9308      	str	r3, [sp, #32]
 8017792:	e9dd 132c 	ldrd	r1, r3, [sp, #176]	; 0xb0
 8017796:	9013      	str	r0, [sp, #76]	; 0x4c
 8017798:	6850      	ldr	r0, [r2, #4]
 801779a:	6812      	ldr	r2, [r2, #0]
 801779c:	fb00 1303 	mla	r3, r0, r3, r1
 80177a0:	eb02 0b43 	add.w	fp, r2, r3, lsl #1
 80177a4:	9b07      	ldr	r3, [sp, #28]
 80177a6:	3301      	adds	r3, #1
 80177a8:	f023 0301 	bic.w	r3, r3, #1
 80177ac:	9309      	str	r3, [sp, #36]	; 0x24
 80177ae:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 80177b0:	681f      	ldr	r7, [r3, #0]
 80177b2:	eeb0 aa40 	vmov.f32	s20, s0
 80177b6:	eef0 9a60 	vmov.f32	s19, s1
 80177ba:	eeb0 9a41 	vmov.f32	s18, s2
 80177be:	eeb0 8a62 	vmov.f32	s16, s5
 80177c2:	eef0 8a43 	vmov.f32	s17, s6
 80177c6:	eef0 ba44 	vmov.f32	s23, s8
 80177ca:	eeb0 ba64 	vmov.f32	s22, s9
 80177ce:	eef0 aa45 	vmov.f32	s21, s10
 80177d2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80177d4:	2b00      	cmp	r3, #0
 80177d6:	dc03      	bgt.n	80177e0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x70>
 80177d8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80177da:	2b00      	cmp	r3, #0
 80177dc:	f340 825c 	ble.w	8017c98 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x528>
 80177e0:	9b06      	ldr	r3, [sp, #24]
 80177e2:	2b00      	cmp	r3, #0
 80177e4:	f340 8119 	ble.w	8017a1a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2aa>
 80177e8:	1422      	asrs	r2, r4, #16
 80177ea:	ea4f 4326 	mov.w	r3, r6, asr #16
 80177ee:	d42d      	bmi.n	801784c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xdc>
 80177f0:	9807      	ldr	r0, [sp, #28]
 80177f2:	1c51      	adds	r1, r2, #1
 80177f4:	4288      	cmp	r0, r1
 80177f6:	dd2c      	ble.n	8017852 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe2>
 80177f8:	2b00      	cmp	r3, #0
 80177fa:	db2a      	blt.n	8017852 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe2>
 80177fc:	9808      	ldr	r0, [sp, #32]
 80177fe:	1c59      	adds	r1, r3, #1
 8017800:	4288      	cmp	r0, r1
 8017802:	dd26      	ble.n	8017852 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe2>
 8017804:	9b06      	ldr	r3, [sp, #24]
 8017806:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8017808:	3b01      	subs	r3, #1
 801780a:	fb02 4203 	mla	r2, r2, r3, r4
 801780e:	1412      	asrs	r2, r2, #16
 8017810:	d42a      	bmi.n	8017868 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf8>
 8017812:	9907      	ldr	r1, [sp, #28]
 8017814:	3201      	adds	r2, #1
 8017816:	4291      	cmp	r1, r2
 8017818:	dd26      	ble.n	8017868 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf8>
 801781a:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 801781c:	fb02 6303 	mla	r3, r2, r3, r6
 8017820:	141b      	asrs	r3, r3, #16
 8017822:	d421      	bmi.n	8017868 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf8>
 8017824:	9a08      	ldr	r2, [sp, #32]
 8017826:	3301      	adds	r3, #1
 8017828:	429a      	cmp	r2, r3
 801782a:	dd1d      	ble.n	8017868 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf8>
 801782c:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	; 0x24
 8017830:	f8dd a018 	ldr.w	sl, [sp, #24]
 8017834:	930e      	str	r3, [sp, #56]	; 0x38
 8017836:	46d8      	mov	r8, fp
 8017838:	f1ba 0f00 	cmp.w	sl, #0
 801783c:	f300 8161 	bgt.w	8017b02 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x392>
 8017840:	9b06      	ldr	r3, [sp, #24]
 8017842:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8017846:	eb0b 0b45 	add.w	fp, fp, r5, lsl #1
 801784a:	e0e8      	b.n	8017a1e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2ae>
 801784c:	1c51      	adds	r1, r2, #1
 801784e:	f040 80da 	bne.w	8017a06 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x296>
 8017852:	9907      	ldr	r1, [sp, #28]
 8017854:	4291      	cmp	r1, r2
 8017856:	f340 80d6 	ble.w	8017a06 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x296>
 801785a:	1c5a      	adds	r2, r3, #1
 801785c:	f2c0 80d3 	blt.w	8017a06 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x296>
 8017860:	9a08      	ldr	r2, [sp, #32]
 8017862:	4293      	cmp	r3, r2
 8017864:	f280 80cf 	bge.w	8017a06 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x296>
 8017868:	f8dd 9018 	ldr.w	r9, [sp, #24]
 801786c:	f9bd a024 	ldrsh.w	sl, [sp, #36]	; 0x24
 8017870:	46d8      	mov	r8, fp
 8017872:	f1b9 0f00 	cmp.w	r9, #0
 8017876:	dde3      	ble.n	8017840 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xd0>
 8017878:	1420      	asrs	r0, r4, #16
 801787a:	ea4f 4326 	mov.w	r3, r6, asr #16
 801787e:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8017882:	f3c6 3103 	ubfx	r1, r6, #12, #4
 8017886:	f100 8124 	bmi.w	8017ad2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x362>
 801788a:	9d07      	ldr	r5, [sp, #28]
 801788c:	f100 0c01 	add.w	ip, r0, #1
 8017890:	4565      	cmp	r5, ip
 8017892:	f340 8120 	ble.w	8017ad6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x366>
 8017896:	2b00      	cmp	r3, #0
 8017898:	f2c0 811d 	blt.w	8017ad6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x366>
 801789c:	9d08      	ldr	r5, [sp, #32]
 801789e:	f103 0c01 	add.w	ip, r3, #1
 80178a2:	4565      	cmp	r5, ip
 80178a4:	f340 8117 	ble.w	8017ad6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x366>
 80178a8:	9d09      	ldr	r5, [sp, #36]	; 0x24
 80178aa:	fb03 0305 	mla	r3, r3, r5, r0
 80178ae:	0858      	lsrs	r0, r3, #1
 80178b0:	07dd      	lsls	r5, r3, #31
 80178b2:	5c38      	ldrb	r0, [r7, r0]
 80178b4:	bf54      	ite	pl
 80178b6:	f000 000f 	andpl.w	r0, r0, #15
 80178ba:	1100      	asrmi	r0, r0, #4
 80178bc:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 80178c0:	b2c0      	uxtb	r0, r0
 80178c2:	2a00      	cmp	r2, #0
 80178c4:	f000 80ea 	beq.w	8017a9c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x32c>
 80178c8:	f103 0e01 	add.w	lr, r3, #1
 80178cc:	ea4f 0c5e 	mov.w	ip, lr, lsr #1
 80178d0:	f01e 0f01 	tst.w	lr, #1
 80178d4:	f817 c00c 	ldrb.w	ip, [r7, ip]
 80178d8:	bf0c      	ite	eq
 80178da:	f00c 0c0f 	andeq.w	ip, ip, #15
 80178de:	ea4f 1c2c 	movne.w	ip, ip, asr #4
 80178e2:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 80178e6:	fa5f fc8c 	uxtb.w	ip, ip
 80178ea:	f8cd c03c 	str.w	ip, [sp, #60]	; 0x3c
 80178ee:	b1f9      	cbz	r1, 8017930 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1c0>
 80178f0:	4453      	add	r3, sl
 80178f2:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 80178f6:	07dd      	lsls	r5, r3, #31
 80178f8:	f817 c00c 	ldrb.w	ip, [r7, ip]
 80178fc:	bf54      	ite	pl
 80178fe:	f00c 0c0f 	andpl.w	ip, ip, #15
 8017902:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8017906:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801790a:	3301      	adds	r3, #1
 801790c:	fa5f fc8c 	uxtb.w	ip, ip
 8017910:	f8cd c02c 	str.w	ip, [sp, #44]	; 0x2c
 8017914:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 8017918:	07dd      	lsls	r5, r3, #31
 801791a:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801791e:	bf54      	ite	pl
 8017920:	f00c 030f 	andpl.w	r3, ip, #15
 8017924:	ea4f 132c 	movmi.w	r3, ip, asr #4
 8017928:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 801792c:	b2db      	uxtb	r3, r3
 801792e:	9310      	str	r3, [sp, #64]	; 0x40
 8017930:	b292      	uxth	r2, r2
 8017932:	b289      	uxth	r1, r1
 8017934:	fb02 f301 	mul.w	r3, r2, r1
 8017938:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 801793c:	0112      	lsls	r2, r2, #4
 801793e:	b289      	uxth	r1, r1
 8017940:	f5c2 7c80 	rsb	ip, r2, #256	; 0x100
 8017944:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8017946:	1ad2      	subs	r2, r2, r3
 8017948:	ebac 0c01 	sub.w	ip, ip, r1
 801794c:	b292      	uxth	r2, r2
 801794e:	436a      	muls	r2, r5
 8017950:	fa1f fc8c 	uxth.w	ip, ip
 8017954:	fb00 200c 	mla	r0, r0, ip, r2
 8017958:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801795a:	fb01 0102 	mla	r1, r1, r2, r0
 801795e:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8017960:	fb03 1302 	mla	r3, r3, r2, r1
 8017964:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8017968:	2b00      	cmp	r3, #0
 801796a:	d043      	beq.n	80179f4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x284>
 801796c:	4ac9      	ldr	r2, [pc, #804]	; (8017c94 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x524>)
 801796e:	6811      	ldr	r1, [r2, #0]
 8017970:	ea4f 2e11 	mov.w	lr, r1, lsr #8
 8017974:	08ca      	lsrs	r2, r1, #3
 8017976:	00c9      	lsls	r1, r1, #3
 8017978:	b2c9      	uxtb	r1, r1
 801797a:	2bff      	cmp	r3, #255	; 0xff
 801797c:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 8017980:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8017984:	460d      	mov	r5, r1
 8017986:	f000 809c 	beq.w	8017ac2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x352>
 801798a:	f8b8 c000 	ldrh.w	ip, [r8]
 801798e:	b299      	uxth	r1, r3
 8017990:	ea4f 202c 	mov.w	r0, ip, asr #8
 8017994:	43db      	mvns	r3, r3
 8017996:	b2db      	uxtb	r3, r3
 8017998:	fb1e fe01 	smulbb	lr, lr, r1
 801799c:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 80179a0:	fb00 e003 	mla	r0, r0, r3, lr
 80179a4:	ea4f 0eec 	mov.w	lr, ip, asr #3
 80179a8:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 80179ac:	fb12 f201 	smulbb	r2, r2, r1
 80179b0:	fb0e 2203 	mla	r2, lr, r3, r2
 80179b4:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 80179b8:	b292      	uxth	r2, r2
 80179ba:	fb15 f101 	smulbb	r1, r5, r1
 80179be:	fa5f fc8c 	uxtb.w	ip, ip
 80179c2:	b280      	uxth	r0, r0
 80179c4:	fb0c 1303 	mla	r3, ip, r3, r1
 80179c8:	f102 0e01 	add.w	lr, r2, #1
 80179cc:	b29b      	uxth	r3, r3
 80179ce:	1c41      	adds	r1, r0, #1
 80179d0:	eb0e 2212 	add.w	r2, lr, r2, lsr #8
 80179d4:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 80179d8:	0952      	lsrs	r2, r2, #5
 80179da:	1c59      	adds	r1, r3, #1
 80179dc:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80179e0:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 80179e4:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 80179e8:	4310      	orrs	r0, r2
 80179ea:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80179ee:	4318      	orrs	r0, r3
 80179f0:	f8a8 0000 	strh.w	r0, [r8]
 80179f4:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80179f6:	441c      	add	r4, r3
 80179f8:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80179fa:	f108 0802 	add.w	r8, r8, #2
 80179fe:	441e      	add	r6, r3
 8017a00:	f109 39ff 	add.w	r9, r9, #4294967295
 8017a04:	e735      	b.n	8017872 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x102>
 8017a06:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8017a08:	441c      	add	r4, r3
 8017a0a:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8017a0c:	441e      	add	r6, r3
 8017a0e:	9b06      	ldr	r3, [sp, #24]
 8017a10:	3b01      	subs	r3, #1
 8017a12:	9306      	str	r3, [sp, #24]
 8017a14:	f10b 0b02 	add.w	fp, fp, #2
 8017a18:	e6e2      	b.n	80177e0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x70>
 8017a1a:	f47f aef3 	bne.w	8017804 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x94>
 8017a1e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8017a20:	2b00      	cmp	r3, #0
 8017a22:	f340 8139 	ble.w	8017c98 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x528>
 8017a26:	ee3a aa2b 	vadd.f32	s20, s20, s23
 8017a2a:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8017a2e:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 8017a32:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8017a34:	ee79 9a8b 	vadd.f32	s19, s19, s22
 8017a38:	ee39 9a2a 	vadd.f32	s18, s18, s21
 8017a3c:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8017a40:	eef0 6a48 	vmov.f32	s13, s16
 8017a44:	ee69 7a27 	vmul.f32	s15, s18, s15
 8017a48:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8017a4c:	ee37 8a48 	vsub.f32	s16, s14, s16
 8017a50:	ee16 4a90 	vmov	r4, s13
 8017a54:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8017a58:	eef0 6a68 	vmov.f32	s13, s17
 8017a5c:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8017a60:	ee18 2a10 	vmov	r2, s16
 8017a64:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8017a68:	fb92 f3f3 	sdiv	r3, r2, r3
 8017a6c:	ee18 2a90 	vmov	r2, s17
 8017a70:	9329      	str	r3, [sp, #164]	; 0xa4
 8017a72:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8017a74:	fb92 f3f3 	sdiv	r3, r2, r3
 8017a78:	932a      	str	r3, [sp, #168]	; 0xa8
 8017a7a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8017a7c:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8017a7e:	3b01      	subs	r3, #1
 8017a80:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8017a84:	930a      	str	r3, [sp, #40]	; 0x28
 8017a86:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8017a88:	bf08      	it	eq
 8017a8a:	4613      	moveq	r3, r2
 8017a8c:	ee16 6a90 	vmov	r6, s13
 8017a90:	9306      	str	r3, [sp, #24]
 8017a92:	eef0 8a67 	vmov.f32	s17, s15
 8017a96:	eeb0 8a47 	vmov.f32	s16, s14
 8017a9a:	e69a      	b.n	80177d2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x62>
 8017a9c:	2900      	cmp	r1, #0
 8017a9e:	f43f af47 	beq.w	8017930 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1c0>
 8017aa2:	4453      	add	r3, sl
 8017aa4:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 8017aa8:	07db      	lsls	r3, r3, #31
 8017aaa:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8017aae:	bf54      	ite	pl
 8017ab0:	f00c 030f 	andpl.w	r3, ip, #15
 8017ab4:	ea4f 132c 	movmi.w	r3, ip, asr #4
 8017ab8:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8017abc:	b2db      	uxtb	r3, r3
 8017abe:	930b      	str	r3, [sp, #44]	; 0x2c
 8017ac0:	e736      	b.n	8017930 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1c0>
 8017ac2:	00d2      	lsls	r2, r2, #3
 8017ac4:	ea42 2e0e 	orr.w	lr, r2, lr, lsl #8
 8017ac8:	ea4e 01d1 	orr.w	r1, lr, r1, lsr #3
 8017acc:	f8a8 1000 	strh.w	r1, [r8]
 8017ad0:	e790      	b.n	80179f4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x284>
 8017ad2:	1c45      	adds	r5, r0, #1
 8017ad4:	d18e      	bne.n	80179f4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x284>
 8017ad6:	9d07      	ldr	r5, [sp, #28]
 8017ad8:	4285      	cmp	r5, r0
 8017ada:	dd8b      	ble.n	80179f4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x284>
 8017adc:	1c5d      	adds	r5, r3, #1
 8017ade:	db89      	blt.n	80179f4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x284>
 8017ae0:	9d08      	ldr	r5, [sp, #32]
 8017ae2:	429d      	cmp	r5, r3
 8017ae4:	dd86      	ble.n	80179f4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x284>
 8017ae6:	e9cd 0302 	strd	r0, r3, [sp, #8]
 8017aea:	9b07      	ldr	r3, [sp, #28]
 8017aec:	9300      	str	r3, [sp, #0]
 8017aee:	e9cd 2104 	strd	r2, r1, [sp, #16]
 8017af2:	9501      	str	r5, [sp, #4]
 8017af4:	4653      	mov	r3, sl
 8017af6:	463a      	mov	r2, r7
 8017af8:	4641      	mov	r1, r8
 8017afa:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8017afc:	f7ff fd54 	bl	80175a8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>
 8017b00:	e778      	b.n	80179f4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x284>
 8017b02:	9909      	ldr	r1, [sp, #36]	; 0x24
 8017b04:	1422      	asrs	r2, r4, #16
 8017b06:	1433      	asrs	r3, r6, #16
 8017b08:	fb01 2303 	mla	r3, r1, r3, r2
 8017b0c:	085a      	lsrs	r2, r3, #1
 8017b0e:	07d9      	lsls	r1, r3, #31
 8017b10:	5cba      	ldrb	r2, [r7, r2]
 8017b12:	bf54      	ite	pl
 8017b14:	f002 020f 	andpl.w	r2, r2, #15
 8017b18:	1112      	asrmi	r2, r2, #4
 8017b1a:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8017b1e:	f3c4 3003 	ubfx	r0, r4, #12, #4
 8017b22:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 8017b26:	b2d2      	uxtb	r2, r2
 8017b28:	2800      	cmp	r0, #0
 8017b2a:	f000 8099 	beq.w	8017c60 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4f0>
 8017b2e:	f103 0e01 	add.w	lr, r3, #1
 8017b32:	ea4f 015e 	mov.w	r1, lr, lsr #1
 8017b36:	f01e 0f01 	tst.w	lr, #1
 8017b3a:	5c79      	ldrb	r1, [r7, r1]
 8017b3c:	bf0c      	ite	eq
 8017b3e:	f001 010f 	andeq.w	r1, r1, #15
 8017b42:	1109      	asrne	r1, r1, #4
 8017b44:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 8017b48:	b2c9      	uxtb	r1, r1
 8017b4a:	9111      	str	r1, [sp, #68]	; 0x44
 8017b4c:	f1bc 0f00 	cmp.w	ip, #0
 8017b50:	d018      	beq.n	8017b84 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x414>
 8017b52:	990e      	ldr	r1, [sp, #56]	; 0x38
 8017b54:	440b      	add	r3, r1
 8017b56:	0859      	lsrs	r1, r3, #1
 8017b58:	07dd      	lsls	r5, r3, #31
 8017b5a:	5c79      	ldrb	r1, [r7, r1]
 8017b5c:	bf54      	ite	pl
 8017b5e:	f001 010f 	andpl.w	r1, r1, #15
 8017b62:	1109      	asrmi	r1, r1, #4
 8017b64:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 8017b68:	b2c9      	uxtb	r1, r1
 8017b6a:	3301      	adds	r3, #1
 8017b6c:	910c      	str	r1, [sp, #48]	; 0x30
 8017b6e:	0859      	lsrs	r1, r3, #1
 8017b70:	07dd      	lsls	r5, r3, #31
 8017b72:	5c79      	ldrb	r1, [r7, r1]
 8017b74:	bf54      	ite	pl
 8017b76:	f001 010f 	andpl.w	r1, r1, #15
 8017b7a:	1109      	asrmi	r1, r1, #4
 8017b7c:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 8017b80:	b2c9      	uxtb	r1, r1
 8017b82:	9112      	str	r1, [sp, #72]	; 0x48
 8017b84:	b280      	uxth	r0, r0
 8017b86:	fa1f fc8c 	uxth.w	ip, ip
 8017b8a:	fb00 f30c 	mul.w	r3, r0, ip
 8017b8e:	ebc3 1c0c 	rsb	ip, r3, ip, lsl #4
 8017b92:	0100      	lsls	r0, r0, #4
 8017b94:	fa1f fc8c 	uxth.w	ip, ip
 8017b98:	f5c0 7180 	rsb	r1, r0, #256	; 0x100
 8017b9c:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8017b9e:	1ac0      	subs	r0, r0, r3
 8017ba0:	eba1 010c 	sub.w	r1, r1, ip
 8017ba4:	b280      	uxth	r0, r0
 8017ba6:	b289      	uxth	r1, r1
 8017ba8:	4368      	muls	r0, r5
 8017baa:	fb02 0201 	mla	r2, r2, r1, r0
 8017bae:	990c      	ldr	r1, [sp, #48]	; 0x30
 8017bb0:	fb0c 2c01 	mla	ip, ip, r1, r2
 8017bb4:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8017bb6:	fb03 c302 	mla	r3, r3, r2, ip
 8017bba:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8017bbe:	2b00      	cmp	r3, #0
 8017bc0:	d045      	beq.n	8017c4e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4de>
 8017bc2:	4a34      	ldr	r2, [pc, #208]	; (8017c94 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x524>)
 8017bc4:	6811      	ldr	r1, [r2, #0]
 8017bc6:	2bff      	cmp	r3, #255	; 0xff
 8017bc8:	ea4f 2e11 	mov.w	lr, r1, lsr #8
 8017bcc:	ea4f 02d1 	mov.w	r2, r1, lsr #3
 8017bd0:	ea4f 01c1 	mov.w	r1, r1, lsl #3
 8017bd4:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 8017bd8:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8017bdc:	b2c9      	uxtb	r1, r1
 8017bde:	d050      	beq.n	8017c82 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x512>
 8017be0:	f8b8 c000 	ldrh.w	ip, [r8]
 8017be4:	fa1f f983 	uxth.w	r9, r3
 8017be8:	ea4f 202c 	mov.w	r0, ip, asr #8
 8017bec:	43db      	mvns	r3, r3
 8017bee:	b2db      	uxtb	r3, r3
 8017bf0:	fb1e fe09 	smulbb	lr, lr, r9
 8017bf4:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8017bf8:	fb00 e003 	mla	r0, r0, r3, lr
 8017bfc:	ea4f 0eec 	mov.w	lr, ip, asr #3
 8017c00:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 8017c04:	fb12 f209 	smulbb	r2, r2, r9
 8017c08:	fb0e 2203 	mla	r2, lr, r3, r2
 8017c0c:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8017c10:	b292      	uxth	r2, r2
 8017c12:	fa5f fc8c 	uxtb.w	ip, ip
 8017c16:	fb11 f109 	smulbb	r1, r1, r9
 8017c1a:	b280      	uxth	r0, r0
 8017c1c:	fb0c 1103 	mla	r1, ip, r3, r1
 8017c20:	f102 0e01 	add.w	lr, r2, #1
 8017c24:	b289      	uxth	r1, r1
 8017c26:	eb0e 2212 	add.w	r2, lr, r2, lsr #8
 8017c2a:	f100 0e01 	add.w	lr, r0, #1
 8017c2e:	0952      	lsrs	r2, r2, #5
 8017c30:	eb0e 2010 	add.w	r0, lr, r0, lsr #8
 8017c34:	1c4b      	adds	r3, r1, #1
 8017c36:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8017c3a:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 8017c3e:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8017c42:	4302      	orrs	r2, r0
 8017c44:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 8017c48:	430a      	orrs	r2, r1
 8017c4a:	f8a8 2000 	strh.w	r2, [r8]
 8017c4e:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8017c50:	441c      	add	r4, r3
 8017c52:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8017c54:	f108 0802 	add.w	r8, r8, #2
 8017c58:	441e      	add	r6, r3
 8017c5a:	f10a 3aff 	add.w	sl, sl, #4294967295
 8017c5e:	e5eb      	b.n	8017838 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xc8>
 8017c60:	f1bc 0f00 	cmp.w	ip, #0
 8017c64:	d08e      	beq.n	8017b84 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x414>
 8017c66:	990e      	ldr	r1, [sp, #56]	; 0x38
 8017c68:	440b      	add	r3, r1
 8017c6a:	0859      	lsrs	r1, r3, #1
 8017c6c:	07db      	lsls	r3, r3, #31
 8017c6e:	5c79      	ldrb	r1, [r7, r1]
 8017c70:	bf54      	ite	pl
 8017c72:	f001 010f 	andpl.w	r1, r1, #15
 8017c76:	1109      	asrmi	r1, r1, #4
 8017c78:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 8017c7c:	b2c9      	uxtb	r1, r1
 8017c7e:	910c      	str	r1, [sp, #48]	; 0x30
 8017c80:	e780      	b.n	8017b84 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x414>
 8017c82:	00d2      	lsls	r2, r2, #3
 8017c84:	ea42 2e0e 	orr.w	lr, r2, lr, lsl #8
 8017c88:	ea4e 01d1 	orr.w	r1, lr, r1, lsr #3
 8017c8c:	f8a8 1000 	strh.w	r1, [r8]
 8017c90:	e7dd      	b.n	8017c4e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4de>
 8017c92:	bf00      	nop
 8017c94:	20012180 	.word	0x20012180
 8017c98:	b015      	add	sp, #84	; 0x54
 8017c9a:	ecbd 8b08 	vpop	{d8-d11}
 8017c9e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017ca2:	bf00      	nop

08017ca4 <CRC_Lock>:
 8017ca4:	b530      	push	{r4, r5, lr}
 8017ca6:	4a1d      	ldr	r2, [pc, #116]	; (8017d1c <CRC_Lock+0x78>)
 8017ca8:	6813      	ldr	r3, [r2, #0]
 8017caa:	f023 0301 	bic.w	r3, r3, #1
 8017cae:	6013      	str	r3, [r2, #0]
 8017cb0:	4b1b      	ldr	r3, [pc, #108]	; (8017d20 <CRC_Lock+0x7c>)
 8017cb2:	681a      	ldr	r2, [r3, #0]
 8017cb4:	f64f 74f0 	movw	r4, #65520	; 0xfff0
 8017cb8:	4022      	ands	r2, r4
 8017cba:	f24c 2540 	movw	r5, #49728	; 0xc240
 8017cbe:	42aa      	cmp	r2, r5
 8017cc0:	d005      	beq.n	8017cce <CRC_Lock+0x2a>
 8017cc2:	681b      	ldr	r3, [r3, #0]
 8017cc4:	f24c 2270 	movw	r2, #49776	; 0xc270
 8017cc8:	4023      	ands	r3, r4
 8017cca:	4293      	cmp	r3, r2
 8017ccc:	d11d      	bne.n	8017d0a <CRC_Lock+0x66>
 8017cce:	4b15      	ldr	r3, [pc, #84]	; (8017d24 <CRC_Lock+0x80>)
 8017cd0:	681b      	ldr	r3, [r3, #0]
 8017cd2:	b9d3      	cbnz	r3, 8017d0a <CRC_Lock+0x66>
 8017cd4:	4a14      	ldr	r2, [pc, #80]	; (8017d28 <CRC_Lock+0x84>)
 8017cd6:	6813      	ldr	r3, [r2, #0]
 8017cd8:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8017cdc:	f5b3 6f8a 	cmp.w	r3, #1104	; 0x450
 8017ce0:	d006      	beq.n	8017cf0 <CRC_Lock+0x4c>
 8017ce2:	6813      	ldr	r3, [r2, #0]
 8017ce4:	f240 4283 	movw	r2, #1155	; 0x483
 8017ce8:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8017cec:	4293      	cmp	r3, r2
 8017cee:	d10c      	bne.n	8017d0a <CRC_Lock+0x66>
 8017cf0:	4b0e      	ldr	r3, [pc, #56]	; (8017d2c <CRC_Lock+0x88>)
 8017cf2:	2201      	movs	r2, #1
 8017cf4:	601a      	str	r2, [r3, #0]
 8017cf6:	681a      	ldr	r2, [r3, #0]
 8017cf8:	2a00      	cmp	r2, #0
 8017cfa:	d1fc      	bne.n	8017cf6 <CRC_Lock+0x52>
 8017cfc:	4b0c      	ldr	r3, [pc, #48]	; (8017d30 <CRC_Lock+0x8c>)
 8017cfe:	6018      	str	r0, [r3, #0]
 8017d00:	6818      	ldr	r0, [r3, #0]
 8017d02:	1a43      	subs	r3, r0, r1
 8017d04:	4258      	negs	r0, r3
 8017d06:	4158      	adcs	r0, r3
 8017d08:	bd30      	pop	{r4, r5, pc}
 8017d0a:	4b0a      	ldr	r3, [pc, #40]	; (8017d34 <CRC_Lock+0x90>)
 8017d0c:	2201      	movs	r2, #1
 8017d0e:	601a      	str	r2, [r3, #0]
 8017d10:	681a      	ldr	r2, [r3, #0]
 8017d12:	2a00      	cmp	r2, #0
 8017d14:	d1fc      	bne.n	8017d10 <CRC_Lock+0x6c>
 8017d16:	4b08      	ldr	r3, [pc, #32]	; (8017d38 <CRC_Lock+0x94>)
 8017d18:	e7f1      	b.n	8017cfe <CRC_Lock+0x5a>
 8017d1a:	bf00      	nop
 8017d1c:	e0002000 	.word	0xe0002000
 8017d20:	e000ed00 	.word	0xe000ed00
 8017d24:	e0042000 	.word	0xe0042000
 8017d28:	5c001000 	.word	0x5c001000
 8017d2c:	58024c08 	.word	0x58024c08
 8017d30:	58024c00 	.word	0x58024c00
 8017d34:	40023008 	.word	0x40023008
 8017d38:	40023000 	.word	0x40023000

08017d3c <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>:
 8017d3c:	6101      	str	r1, [r0, #16]
 8017d3e:	4770      	bx	lr

08017d40 <_ZN8touchgfx8Gestures4tickEv>:
 8017d40:	7b83      	ldrb	r3, [r0, #14]
 8017d42:	b14b      	cbz	r3, 8017d58 <_ZN8touchgfx8Gestures4tickEv+0x18>
 8017d44:	8903      	ldrh	r3, [r0, #8]
 8017d46:	3301      	adds	r3, #1
 8017d48:	b29b      	uxth	r3, r3
 8017d4a:	2b07      	cmp	r3, #7
 8017d4c:	8103      	strh	r3, [r0, #8]
 8017d4e:	bf81      	itttt	hi
 8017d50:	2300      	movhi	r3, #0
 8017d52:	8143      	strhhi	r3, [r0, #10]
 8017d54:	8183      	strhhi	r3, [r0, #12]
 8017d56:	7383      	strbhi	r3, [r0, #14]
 8017d58:	4770      	bx	lr
	...

08017d5c <_ZN8touchgfx8Gestures17registerDragEventEtttt>:
 8017d5c:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8017d60:	4604      	mov	r4, r0
 8017d62:	8880      	ldrh	r0, [r0, #4]
 8017d64:	f8ad 0006 	strh.w	r0, [sp, #6]
 8017d68:	4698      	mov	r8, r3
 8017d6a:	eba8 0000 	sub.w	r0, r8, r0
 8017d6e:	4b1c      	ldr	r3, [pc, #112]	; (8017de0 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x84>)
 8017d70:	9300      	str	r3, [sp, #0]
 8017d72:	b280      	uxth	r0, r0
 8017d74:	2300      	movs	r3, #0
 8017d76:	f88d 3004 	strb.w	r3, [sp, #4]
 8017d7a:	b203      	sxth	r3, r0
 8017d7c:	2b00      	cmp	r3, #0
 8017d7e:	bfb8      	it	lt
 8017d80:	4240      	neglt	r0, r0
 8017d82:	4617      	mov	r7, r2
 8017d84:	8aa2      	ldrh	r2, [r4, #20]
 8017d86:	f8bd 5028 	ldrh.w	r5, [sp, #40]	; 0x28
 8017d8a:	f8ad 800a 	strh.w	r8, [sp, #10]
 8017d8e:	bfb8      	it	lt
 8017d90:	b203      	sxthlt	r3, r0
 8017d92:	460e      	mov	r6, r1
 8017d94:	4293      	cmp	r3, r2
 8017d96:	88e1      	ldrh	r1, [r4, #6]
 8017d98:	f8ad 1008 	strh.w	r1, [sp, #8]
 8017d9c:	f8ad 500c 	strh.w	r5, [sp, #12]
 8017da0:	dc08      	bgt.n	8017db4 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x58>
 8017da2:	1a69      	subs	r1, r5, r1
 8017da4:	b289      	uxth	r1, r1
 8017da6:	b20b      	sxth	r3, r1
 8017da8:	2b00      	cmp	r3, #0
 8017daa:	bfbc      	itt	lt
 8017dac:	4249      	neglt	r1, r1
 8017dae:	b20b      	sxthlt	r3, r1
 8017db0:	429a      	cmp	r2, r3
 8017db2:	da13      	bge.n	8017ddc <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x80>
 8017db4:	6920      	ldr	r0, [r4, #16]
 8017db6:	6803      	ldr	r3, [r0, #0]
 8017db8:	4669      	mov	r1, sp
 8017dba:	685b      	ldr	r3, [r3, #4]
 8017dbc:	4798      	blx	r3
 8017dbe:	eba8 0606 	sub.w	r6, r8, r6
 8017dc2:	2300      	movs	r3, #0
 8017dc4:	1bef      	subs	r7, r5, r7
 8017dc6:	2001      	movs	r0, #1
 8017dc8:	8123      	strh	r3, [r4, #8]
 8017dca:	8166      	strh	r6, [r4, #10]
 8017dcc:	81a7      	strh	r7, [r4, #12]
 8017dce:	f8a4 8004 	strh.w	r8, [r4, #4]
 8017dd2:	80e5      	strh	r5, [r4, #6]
 8017dd4:	73a0      	strb	r0, [r4, #14]
 8017dd6:	b004      	add	sp, #16
 8017dd8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8017ddc:	2000      	movs	r0, #0
 8017dde:	e7fa      	b.n	8017dd6 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x7a>
 8017de0:	0801b18c 	.word	0x0801b18c

08017de4 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>:
 8017de4:	b5f0      	push	{r4, r5, r6, r7, lr}
 8017de6:	461e      	mov	r6, r3
 8017de8:	1e4b      	subs	r3, r1, #1
 8017dea:	2b01      	cmp	r3, #1
 8017dec:	b085      	sub	sp, #20
 8017dee:	4604      	mov	r4, r0
 8017df0:	460d      	mov	r5, r1
 8017df2:	4617      	mov	r7, r2
 8017df4:	d84b      	bhi.n	8017e8e <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xaa>
 8017df6:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8017dfa:	1cd3      	adds	r3, r2, #3
 8017dfc:	b29b      	uxth	r3, r3
 8017dfe:	2b06      	cmp	r3, #6
 8017e00:	d916      	bls.n	8017e30 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x4c>
 8017e02:	f8df c0a0 	ldr.w	ip, [pc, #160]	; 8017ea4 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 8017e06:	f8cd c004 	str.w	ip, [sp, #4]
 8017e0a:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8017e0e:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8017e12:	6900      	ldr	r0, [r0, #16]
 8017e14:	f8ad 100c 	strh.w	r1, [sp, #12]
 8017e18:	f04f 0c00 	mov.w	ip, #0
 8017e1c:	f88d c008 	strb.w	ip, [sp, #8]
 8017e20:	f8ad 200a 	strh.w	r2, [sp, #10]
 8017e24:	f8ad 300e 	strh.w	r3, [sp, #14]
 8017e28:	6803      	ldr	r3, [r0, #0]
 8017e2a:	a901      	add	r1, sp, #4
 8017e2c:	689b      	ldr	r3, [r3, #8]
 8017e2e:	4798      	blx	r3
 8017e30:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8017e34:	1cd3      	adds	r3, r2, #3
 8017e36:	b29b      	uxth	r3, r3
 8017e38:	2b06      	cmp	r3, #6
 8017e3a:	d916      	bls.n	8017e6a <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 8017e3c:	f8df c064 	ldr.w	ip, [pc, #100]	; 8017ea4 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 8017e40:	f8cd c004 	str.w	ip, [sp, #4]
 8017e44:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8017e48:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8017e4c:	6920      	ldr	r0, [r4, #16]
 8017e4e:	f8ad 100c 	strh.w	r1, [sp, #12]
 8017e52:	f04f 0c01 	mov.w	ip, #1
 8017e56:	f88d c008 	strb.w	ip, [sp, #8]
 8017e5a:	f8ad 200a 	strh.w	r2, [sp, #10]
 8017e5e:	f8ad 300e 	strh.w	r3, [sp, #14]
 8017e62:	6803      	ldr	r3, [r0, #0]
 8017e64:	a901      	add	r1, sp, #4
 8017e66:	689b      	ldr	r3, [r3, #8]
 8017e68:	4798      	blx	r3
 8017e6a:	4b0d      	ldr	r3, [pc, #52]	; (8017ea0 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xbc>)
 8017e6c:	9301      	str	r3, [sp, #4]
 8017e6e:	6920      	ldr	r0, [r4, #16]
 8017e70:	f88d 5008 	strb.w	r5, [sp, #8]
 8017e74:	2300      	movs	r3, #0
 8017e76:	f8ad 700a 	strh.w	r7, [sp, #10]
 8017e7a:	f8ad 600c 	strh.w	r6, [sp, #12]
 8017e7e:	f8ad 300e 	strh.w	r3, [sp, #14]
 8017e82:	6803      	ldr	r3, [r0, #0]
 8017e84:	a901      	add	r1, sp, #4
 8017e86:	681b      	ldr	r3, [r3, #0]
 8017e88:	4798      	blx	r3
 8017e8a:	b005      	add	sp, #20
 8017e8c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8017e8e:	2900      	cmp	r1, #0
 8017e90:	d1eb      	bne.n	8017e6a <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 8017e92:	80a2      	strh	r2, [r4, #4]
 8017e94:	80c6      	strh	r6, [r0, #6]
 8017e96:	60a1      	str	r1, [r4, #8]
 8017e98:	81a1      	strh	r1, [r4, #12]
 8017e9a:	73a1      	strb	r1, [r4, #14]
 8017e9c:	e7e5      	b.n	8017e6a <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 8017e9e:	bf00      	nop
 8017ea0:	0801b178 	.word	0x0801b178
 8017ea4:	0801b1a0 	.word	0x0801b1a0

08017ea8 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE>:
 8017ea8:	b570      	push	{r4, r5, r6, lr}
 8017eaa:	790b      	ldrb	r3, [r1, #4]
 8017eac:	f890 502c 	ldrb.w	r5, [r0, #44]	; 0x2c
 8017eb0:	2b00      	cmp	r3, #0
 8017eb2:	bf0c      	ite	eq
 8017eb4:	2301      	moveq	r3, #1
 8017eb6:	2300      	movne	r3, #0
 8017eb8:	4604      	mov	r4, r0
 8017eba:	460e      	mov	r6, r1
 8017ebc:	f880 302c 	strb.w	r3, [r0, #44]	; 0x2c
 8017ec0:	d110      	bne.n	8017ee4 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
 8017ec2:	b185      	cbz	r5, 8017ee6 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3e>
 8017ec4:	7933      	ldrb	r3, [r6, #4]
 8017ec6:	2b01      	cmp	r3, #1
 8017ec8:	d113      	bne.n	8017ef2 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x4a>
 8017eca:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 8017ecc:	b188      	cbz	r0, 8017ef2 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x4a>
 8017ece:	6803      	ldr	r3, [r0, #0]
 8017ed0:	68db      	ldr	r3, [r3, #12]
 8017ed2:	4798      	blx	r3
 8017ed4:	b168      	cbz	r0, 8017ef2 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x4a>
 8017ed6:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 8017ed8:	6803      	ldr	r3, [r0, #0]
 8017eda:	4621      	mov	r1, r4
 8017edc:	689b      	ldr	r3, [r3, #8]
 8017ede:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8017ee2:	4718      	bx	r3
 8017ee4:	b12d      	cbz	r5, 8017ef2 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x4a>
 8017ee6:	6823      	ldr	r3, [r4, #0]
 8017ee8:	4620      	mov	r0, r4
 8017eea:	695b      	ldr	r3, [r3, #20]
 8017eec:	4798      	blx	r3
 8017eee:	2d00      	cmp	r5, #0
 8017ef0:	d1e8      	bne.n	8017ec4 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x1c>
 8017ef2:	bd70      	pop	{r4, r5, r6, pc}

08017ef4 <__aeabi_atexit>:
 8017ef4:	460b      	mov	r3, r1
 8017ef6:	4601      	mov	r1, r0
 8017ef8:	4618      	mov	r0, r3
 8017efa:	f000 b853 	b.w	8017fa4 <__cxa_atexit>

08017efe <__cxa_pure_virtual>:
 8017efe:	b508      	push	{r3, lr}
 8017f00:	f000 f820 	bl	8017f44 <_ZSt9terminatev>

08017f04 <_ZdlPvj>:
 8017f04:	f000 b80f 	b.w	8017f26 <_ZdlPv>

08017f08 <__cxa_guard_acquire>:
 8017f08:	6803      	ldr	r3, [r0, #0]
 8017f0a:	07db      	lsls	r3, r3, #31
 8017f0c:	d406      	bmi.n	8017f1c <__cxa_guard_acquire+0x14>
 8017f0e:	7843      	ldrb	r3, [r0, #1]
 8017f10:	b103      	cbz	r3, 8017f14 <__cxa_guard_acquire+0xc>
 8017f12:	deff      	udf	#255	; 0xff
 8017f14:	2301      	movs	r3, #1
 8017f16:	7043      	strb	r3, [r0, #1]
 8017f18:	4618      	mov	r0, r3
 8017f1a:	4770      	bx	lr
 8017f1c:	2000      	movs	r0, #0
 8017f1e:	4770      	bx	lr

08017f20 <__cxa_guard_release>:
 8017f20:	2301      	movs	r3, #1
 8017f22:	6003      	str	r3, [r0, #0]
 8017f24:	4770      	bx	lr

08017f26 <_ZdlPv>:
 8017f26:	f000 b88f 	b.w	8018048 <free>

08017f2a <_ZN10__cxxabiv111__terminateEPFvvE>:
 8017f2a:	b508      	push	{r3, lr}
 8017f2c:	4780      	blx	r0
 8017f2e:	f000 f80e 	bl	8017f4e <abort>
	...

08017f34 <_ZSt13get_terminatev>:
 8017f34:	4b02      	ldr	r3, [pc, #8]	; (8017f40 <_ZSt13get_terminatev+0xc>)
 8017f36:	6818      	ldr	r0, [r3, #0]
 8017f38:	f3bf 8f5b 	dmb	ish
 8017f3c:	4770      	bx	lr
 8017f3e:	bf00      	nop
 8017f40:	200000f8 	.word	0x200000f8

08017f44 <_ZSt9terminatev>:
 8017f44:	b508      	push	{r3, lr}
 8017f46:	f7ff fff5 	bl	8017f34 <_ZSt13get_terminatev>
 8017f4a:	f7ff ffee 	bl	8017f2a <_ZN10__cxxabiv111__terminateEPFvvE>

08017f4e <abort>:
 8017f4e:	b508      	push	{r3, lr}
 8017f50:	2006      	movs	r0, #6
 8017f52:	f000 fc3d 	bl	80187d0 <raise>
 8017f56:	2001      	movs	r0, #1
 8017f58:	f7e9 fece 	bl	8001cf8 <_exit>

08017f5c <__assert_func>:
 8017f5c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8017f5e:	461c      	mov	r4, r3
 8017f60:	4b09      	ldr	r3, [pc, #36]	; (8017f88 <__assert_func+0x2c>)
 8017f62:	681b      	ldr	r3, [r3, #0]
 8017f64:	4605      	mov	r5, r0
 8017f66:	68d8      	ldr	r0, [r3, #12]
 8017f68:	b152      	cbz	r2, 8017f80 <__assert_func+0x24>
 8017f6a:	4b08      	ldr	r3, [pc, #32]	; (8017f8c <__assert_func+0x30>)
 8017f6c:	9100      	str	r1, [sp, #0]
 8017f6e:	e9cd 3201 	strd	r3, r2, [sp, #4]
 8017f72:	4907      	ldr	r1, [pc, #28]	; (8017f90 <__assert_func+0x34>)
 8017f74:	462b      	mov	r3, r5
 8017f76:	4622      	mov	r2, r4
 8017f78:	f000 f828 	bl	8017fcc <fiprintf>
 8017f7c:	f7ff ffe7 	bl	8017f4e <abort>
 8017f80:	4b04      	ldr	r3, [pc, #16]	; (8017f94 <__assert_func+0x38>)
 8017f82:	461a      	mov	r2, r3
 8017f84:	e7f2      	b.n	8017f6c <__assert_func+0x10>
 8017f86:	bf00      	nop
 8017f88:	200000fc 	.word	0x200000fc
 8017f8c:	0801c410 	.word	0x0801c410
 8017f90:	0801c41d 	.word	0x0801c41d
 8017f94:	0801c44b 	.word	0x0801c44b

08017f98 <atexit>:
 8017f98:	2300      	movs	r3, #0
 8017f9a:	4601      	mov	r1, r0
 8017f9c:	461a      	mov	r2, r3
 8017f9e:	4618      	mov	r0, r3
 8017fa0:	f000 bcf2 	b.w	8018988 <__register_exitproc>

08017fa4 <__cxa_atexit>:
 8017fa4:	b510      	push	{r4, lr}
 8017fa6:	4c05      	ldr	r4, [pc, #20]	; (8017fbc <__cxa_atexit+0x18>)
 8017fa8:	4613      	mov	r3, r2
 8017faa:	b12c      	cbz	r4, 8017fb8 <__cxa_atexit+0x14>
 8017fac:	460a      	mov	r2, r1
 8017fae:	4601      	mov	r1, r0
 8017fb0:	2002      	movs	r0, #2
 8017fb2:	f000 fce9 	bl	8018988 <__register_exitproc>
 8017fb6:	bd10      	pop	{r4, pc}
 8017fb8:	4620      	mov	r0, r4
 8017fba:	e7fc      	b.n	8017fb6 <__cxa_atexit+0x12>
 8017fbc:	08018989 	.word	0x08018989

08017fc0 <__errno>:
 8017fc0:	4b01      	ldr	r3, [pc, #4]	; (8017fc8 <__errno+0x8>)
 8017fc2:	6818      	ldr	r0, [r3, #0]
 8017fc4:	4770      	bx	lr
 8017fc6:	bf00      	nop
 8017fc8:	200000fc 	.word	0x200000fc

08017fcc <fiprintf>:
 8017fcc:	b40e      	push	{r1, r2, r3}
 8017fce:	b503      	push	{r0, r1, lr}
 8017fd0:	4601      	mov	r1, r0
 8017fd2:	ab03      	add	r3, sp, #12
 8017fd4:	4805      	ldr	r0, [pc, #20]	; (8017fec <fiprintf+0x20>)
 8017fd6:	f853 2b04 	ldr.w	r2, [r3], #4
 8017fda:	6800      	ldr	r0, [r0, #0]
 8017fdc:	9301      	str	r3, [sp, #4]
 8017fde:	f000 f921 	bl	8018224 <_vfiprintf_r>
 8017fe2:	b002      	add	sp, #8
 8017fe4:	f85d eb04 	ldr.w	lr, [sp], #4
 8017fe8:	b003      	add	sp, #12
 8017fea:	4770      	bx	lr
 8017fec:	200000fc 	.word	0x200000fc

08017ff0 <__libc_init_array>:
 8017ff0:	b570      	push	{r4, r5, r6, lr}
 8017ff2:	4e0d      	ldr	r6, [pc, #52]	; (8018028 <__libc_init_array+0x38>)
 8017ff4:	4c0d      	ldr	r4, [pc, #52]	; (801802c <__libc_init_array+0x3c>)
 8017ff6:	1ba4      	subs	r4, r4, r6
 8017ff8:	10a4      	asrs	r4, r4, #2
 8017ffa:	2500      	movs	r5, #0
 8017ffc:	42a5      	cmp	r5, r4
 8017ffe:	d109      	bne.n	8018014 <__libc_init_array+0x24>
 8018000:	4e0b      	ldr	r6, [pc, #44]	; (8018030 <__libc_init_array+0x40>)
 8018002:	4c0c      	ldr	r4, [pc, #48]	; (8018034 <__libc_init_array+0x44>)
 8018004:	f000 ffb0 	bl	8018f68 <_init>
 8018008:	1ba4      	subs	r4, r4, r6
 801800a:	10a4      	asrs	r4, r4, #2
 801800c:	2500      	movs	r5, #0
 801800e:	42a5      	cmp	r5, r4
 8018010:	d105      	bne.n	801801e <__libc_init_array+0x2e>
 8018012:	bd70      	pop	{r4, r5, r6, pc}
 8018014:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 8018018:	4798      	blx	r3
 801801a:	3501      	adds	r5, #1
 801801c:	e7ee      	b.n	8017ffc <__libc_init_array+0xc>
 801801e:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 8018022:	4798      	blx	r3
 8018024:	3501      	adds	r5, #1
 8018026:	e7f2      	b.n	801800e <__libc_init_array+0x1e>
 8018028:	080561d4 	.word	0x080561d4
 801802c:	080561d4 	.word	0x080561d4
 8018030:	080561d4 	.word	0x080561d4
 8018034:	080561e8 	.word	0x080561e8

08018038 <malloc>:
 8018038:	4b02      	ldr	r3, [pc, #8]	; (8018044 <malloc+0xc>)
 801803a:	4601      	mov	r1, r0
 801803c:	6818      	ldr	r0, [r3, #0]
 801803e:	f000 b86d 	b.w	801811c <_malloc_r>
 8018042:	bf00      	nop
 8018044:	200000fc 	.word	0x200000fc

08018048 <free>:
 8018048:	4b02      	ldr	r3, [pc, #8]	; (8018054 <free+0xc>)
 801804a:	4601      	mov	r1, r0
 801804c:	6818      	ldr	r0, [r3, #0]
 801804e:	f000 b817 	b.w	8018080 <_free_r>
 8018052:	bf00      	nop
 8018054:	200000fc 	.word	0x200000fc

08018058 <memcpy>:
 8018058:	b510      	push	{r4, lr}
 801805a:	1e43      	subs	r3, r0, #1
 801805c:	440a      	add	r2, r1
 801805e:	4291      	cmp	r1, r2
 8018060:	d100      	bne.n	8018064 <memcpy+0xc>
 8018062:	bd10      	pop	{r4, pc}
 8018064:	f811 4b01 	ldrb.w	r4, [r1], #1
 8018068:	f803 4f01 	strb.w	r4, [r3, #1]!
 801806c:	e7f7      	b.n	801805e <memcpy+0x6>

0801806e <memset>:
 801806e:	4402      	add	r2, r0
 8018070:	4603      	mov	r3, r0
 8018072:	4293      	cmp	r3, r2
 8018074:	d100      	bne.n	8018078 <memset+0xa>
 8018076:	4770      	bx	lr
 8018078:	f803 1b01 	strb.w	r1, [r3], #1
 801807c:	e7f9      	b.n	8018072 <memset+0x4>
	...

08018080 <_free_r>:
 8018080:	b538      	push	{r3, r4, r5, lr}
 8018082:	4605      	mov	r5, r0
 8018084:	2900      	cmp	r1, #0
 8018086:	d045      	beq.n	8018114 <_free_r+0x94>
 8018088:	f851 3c04 	ldr.w	r3, [r1, #-4]
 801808c:	1f0c      	subs	r4, r1, #4
 801808e:	2b00      	cmp	r3, #0
 8018090:	bfb8      	it	lt
 8018092:	18e4      	addlt	r4, r4, r3
 8018094:	f000 feba 	bl	8018e0c <__malloc_lock>
 8018098:	4a1f      	ldr	r2, [pc, #124]	; (8018118 <_free_r+0x98>)
 801809a:	6813      	ldr	r3, [r2, #0]
 801809c:	4610      	mov	r0, r2
 801809e:	b933      	cbnz	r3, 80180ae <_free_r+0x2e>
 80180a0:	6063      	str	r3, [r4, #4]
 80180a2:	6014      	str	r4, [r2, #0]
 80180a4:	4628      	mov	r0, r5
 80180a6:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80180aa:	f000 beb0 	b.w	8018e0e <__malloc_unlock>
 80180ae:	42a3      	cmp	r3, r4
 80180b0:	d90c      	bls.n	80180cc <_free_r+0x4c>
 80180b2:	6821      	ldr	r1, [r4, #0]
 80180b4:	1862      	adds	r2, r4, r1
 80180b6:	4293      	cmp	r3, r2
 80180b8:	bf04      	itt	eq
 80180ba:	681a      	ldreq	r2, [r3, #0]
 80180bc:	685b      	ldreq	r3, [r3, #4]
 80180be:	6063      	str	r3, [r4, #4]
 80180c0:	bf04      	itt	eq
 80180c2:	1852      	addeq	r2, r2, r1
 80180c4:	6022      	streq	r2, [r4, #0]
 80180c6:	6004      	str	r4, [r0, #0]
 80180c8:	e7ec      	b.n	80180a4 <_free_r+0x24>
 80180ca:	4613      	mov	r3, r2
 80180cc:	685a      	ldr	r2, [r3, #4]
 80180ce:	b10a      	cbz	r2, 80180d4 <_free_r+0x54>
 80180d0:	42a2      	cmp	r2, r4
 80180d2:	d9fa      	bls.n	80180ca <_free_r+0x4a>
 80180d4:	6819      	ldr	r1, [r3, #0]
 80180d6:	1858      	adds	r0, r3, r1
 80180d8:	42a0      	cmp	r0, r4
 80180da:	d10b      	bne.n	80180f4 <_free_r+0x74>
 80180dc:	6820      	ldr	r0, [r4, #0]
 80180de:	4401      	add	r1, r0
 80180e0:	1858      	adds	r0, r3, r1
 80180e2:	4282      	cmp	r2, r0
 80180e4:	6019      	str	r1, [r3, #0]
 80180e6:	d1dd      	bne.n	80180a4 <_free_r+0x24>
 80180e8:	6810      	ldr	r0, [r2, #0]
 80180ea:	6852      	ldr	r2, [r2, #4]
 80180ec:	605a      	str	r2, [r3, #4]
 80180ee:	4401      	add	r1, r0
 80180f0:	6019      	str	r1, [r3, #0]
 80180f2:	e7d7      	b.n	80180a4 <_free_r+0x24>
 80180f4:	d902      	bls.n	80180fc <_free_r+0x7c>
 80180f6:	230c      	movs	r3, #12
 80180f8:	602b      	str	r3, [r5, #0]
 80180fa:	e7d3      	b.n	80180a4 <_free_r+0x24>
 80180fc:	6820      	ldr	r0, [r4, #0]
 80180fe:	1821      	adds	r1, r4, r0
 8018100:	428a      	cmp	r2, r1
 8018102:	bf04      	itt	eq
 8018104:	6811      	ldreq	r1, [r2, #0]
 8018106:	6852      	ldreq	r2, [r2, #4]
 8018108:	6062      	str	r2, [r4, #4]
 801810a:	bf04      	itt	eq
 801810c:	1809      	addeq	r1, r1, r0
 801810e:	6021      	streq	r1, [r4, #0]
 8018110:	605c      	str	r4, [r3, #4]
 8018112:	e7c7      	b.n	80180a4 <_free_r+0x24>
 8018114:	bd38      	pop	{r3, r4, r5, pc}
 8018116:	bf00      	nop
 8018118:	20012294 	.word	0x20012294

0801811c <_malloc_r>:
 801811c:	b570      	push	{r4, r5, r6, lr}
 801811e:	1ccd      	adds	r5, r1, #3
 8018120:	f025 0503 	bic.w	r5, r5, #3
 8018124:	3508      	adds	r5, #8
 8018126:	2d0c      	cmp	r5, #12
 8018128:	bf38      	it	cc
 801812a:	250c      	movcc	r5, #12
 801812c:	2d00      	cmp	r5, #0
 801812e:	4606      	mov	r6, r0
 8018130:	db01      	blt.n	8018136 <_malloc_r+0x1a>
 8018132:	42a9      	cmp	r1, r5
 8018134:	d903      	bls.n	801813e <_malloc_r+0x22>
 8018136:	230c      	movs	r3, #12
 8018138:	6033      	str	r3, [r6, #0]
 801813a:	2000      	movs	r0, #0
 801813c:	bd70      	pop	{r4, r5, r6, pc}
 801813e:	f000 fe65 	bl	8018e0c <__malloc_lock>
 8018142:	4a21      	ldr	r2, [pc, #132]	; (80181c8 <_malloc_r+0xac>)
 8018144:	6814      	ldr	r4, [r2, #0]
 8018146:	4621      	mov	r1, r4
 8018148:	b991      	cbnz	r1, 8018170 <_malloc_r+0x54>
 801814a:	4c20      	ldr	r4, [pc, #128]	; (80181cc <_malloc_r+0xb0>)
 801814c:	6823      	ldr	r3, [r4, #0]
 801814e:	b91b      	cbnz	r3, 8018158 <_malloc_r+0x3c>
 8018150:	4630      	mov	r0, r6
 8018152:	f000 fb05 	bl	8018760 <_sbrk_r>
 8018156:	6020      	str	r0, [r4, #0]
 8018158:	4629      	mov	r1, r5
 801815a:	4630      	mov	r0, r6
 801815c:	f000 fb00 	bl	8018760 <_sbrk_r>
 8018160:	1c43      	adds	r3, r0, #1
 8018162:	d124      	bne.n	80181ae <_malloc_r+0x92>
 8018164:	230c      	movs	r3, #12
 8018166:	6033      	str	r3, [r6, #0]
 8018168:	4630      	mov	r0, r6
 801816a:	f000 fe50 	bl	8018e0e <__malloc_unlock>
 801816e:	e7e4      	b.n	801813a <_malloc_r+0x1e>
 8018170:	680b      	ldr	r3, [r1, #0]
 8018172:	1b5b      	subs	r3, r3, r5
 8018174:	d418      	bmi.n	80181a8 <_malloc_r+0x8c>
 8018176:	2b0b      	cmp	r3, #11
 8018178:	d90f      	bls.n	801819a <_malloc_r+0x7e>
 801817a:	600b      	str	r3, [r1, #0]
 801817c:	50cd      	str	r5, [r1, r3]
 801817e:	18cc      	adds	r4, r1, r3
 8018180:	4630      	mov	r0, r6
 8018182:	f000 fe44 	bl	8018e0e <__malloc_unlock>
 8018186:	f104 000b 	add.w	r0, r4, #11
 801818a:	1d23      	adds	r3, r4, #4
 801818c:	f020 0007 	bic.w	r0, r0, #7
 8018190:	1ac3      	subs	r3, r0, r3
 8018192:	d0d3      	beq.n	801813c <_malloc_r+0x20>
 8018194:	425a      	negs	r2, r3
 8018196:	50e2      	str	r2, [r4, r3]
 8018198:	e7d0      	b.n	801813c <_malloc_r+0x20>
 801819a:	428c      	cmp	r4, r1
 801819c:	684b      	ldr	r3, [r1, #4]
 801819e:	bf16      	itet	ne
 80181a0:	6063      	strne	r3, [r4, #4]
 80181a2:	6013      	streq	r3, [r2, #0]
 80181a4:	460c      	movne	r4, r1
 80181a6:	e7eb      	b.n	8018180 <_malloc_r+0x64>
 80181a8:	460c      	mov	r4, r1
 80181aa:	6849      	ldr	r1, [r1, #4]
 80181ac:	e7cc      	b.n	8018148 <_malloc_r+0x2c>
 80181ae:	1cc4      	adds	r4, r0, #3
 80181b0:	f024 0403 	bic.w	r4, r4, #3
 80181b4:	42a0      	cmp	r0, r4
 80181b6:	d005      	beq.n	80181c4 <_malloc_r+0xa8>
 80181b8:	1a21      	subs	r1, r4, r0
 80181ba:	4630      	mov	r0, r6
 80181bc:	f000 fad0 	bl	8018760 <_sbrk_r>
 80181c0:	3001      	adds	r0, #1
 80181c2:	d0cf      	beq.n	8018164 <_malloc_r+0x48>
 80181c4:	6025      	str	r5, [r4, #0]
 80181c6:	e7db      	b.n	8018180 <_malloc_r+0x64>
 80181c8:	20012294 	.word	0x20012294
 80181cc:	20012298 	.word	0x20012298

080181d0 <__sfputc_r>:
 80181d0:	6893      	ldr	r3, [r2, #8]
 80181d2:	3b01      	subs	r3, #1
 80181d4:	2b00      	cmp	r3, #0
 80181d6:	b410      	push	{r4}
 80181d8:	6093      	str	r3, [r2, #8]
 80181da:	da08      	bge.n	80181ee <__sfputc_r+0x1e>
 80181dc:	6994      	ldr	r4, [r2, #24]
 80181de:	42a3      	cmp	r3, r4
 80181e0:	db01      	blt.n	80181e6 <__sfputc_r+0x16>
 80181e2:	290a      	cmp	r1, #10
 80181e4:	d103      	bne.n	80181ee <__sfputc_r+0x1e>
 80181e6:	f85d 4b04 	ldr.w	r4, [sp], #4
 80181ea:	f000 bb0d 	b.w	8018808 <__swbuf_r>
 80181ee:	6813      	ldr	r3, [r2, #0]
 80181f0:	1c58      	adds	r0, r3, #1
 80181f2:	6010      	str	r0, [r2, #0]
 80181f4:	7019      	strb	r1, [r3, #0]
 80181f6:	4608      	mov	r0, r1
 80181f8:	f85d 4b04 	ldr.w	r4, [sp], #4
 80181fc:	4770      	bx	lr

080181fe <__sfputs_r>:
 80181fe:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8018200:	4606      	mov	r6, r0
 8018202:	460f      	mov	r7, r1
 8018204:	4614      	mov	r4, r2
 8018206:	18d5      	adds	r5, r2, r3
 8018208:	42ac      	cmp	r4, r5
 801820a:	d101      	bne.n	8018210 <__sfputs_r+0x12>
 801820c:	2000      	movs	r0, #0
 801820e:	e007      	b.n	8018220 <__sfputs_r+0x22>
 8018210:	463a      	mov	r2, r7
 8018212:	f814 1b01 	ldrb.w	r1, [r4], #1
 8018216:	4630      	mov	r0, r6
 8018218:	f7ff ffda 	bl	80181d0 <__sfputc_r>
 801821c:	1c43      	adds	r3, r0, #1
 801821e:	d1f3      	bne.n	8018208 <__sfputs_r+0xa>
 8018220:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08018224 <_vfiprintf_r>:
 8018224:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018228:	460c      	mov	r4, r1
 801822a:	b09d      	sub	sp, #116	; 0x74
 801822c:	4617      	mov	r7, r2
 801822e:	461d      	mov	r5, r3
 8018230:	4606      	mov	r6, r0
 8018232:	b118      	cbz	r0, 801823c <_vfiprintf_r+0x18>
 8018234:	6983      	ldr	r3, [r0, #24]
 8018236:	b90b      	cbnz	r3, 801823c <_vfiprintf_r+0x18>
 8018238:	f000 fcfa 	bl	8018c30 <__sinit>
 801823c:	4b7c      	ldr	r3, [pc, #496]	; (8018430 <_vfiprintf_r+0x20c>)
 801823e:	429c      	cmp	r4, r3
 8018240:	d158      	bne.n	80182f4 <_vfiprintf_r+0xd0>
 8018242:	6874      	ldr	r4, [r6, #4]
 8018244:	89a3      	ldrh	r3, [r4, #12]
 8018246:	0718      	lsls	r0, r3, #28
 8018248:	d55e      	bpl.n	8018308 <_vfiprintf_r+0xe4>
 801824a:	6923      	ldr	r3, [r4, #16]
 801824c:	2b00      	cmp	r3, #0
 801824e:	d05b      	beq.n	8018308 <_vfiprintf_r+0xe4>
 8018250:	2300      	movs	r3, #0
 8018252:	9309      	str	r3, [sp, #36]	; 0x24
 8018254:	2320      	movs	r3, #32
 8018256:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 801825a:	2330      	movs	r3, #48	; 0x30
 801825c:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8018260:	9503      	str	r5, [sp, #12]
 8018262:	f04f 0b01 	mov.w	fp, #1
 8018266:	46b8      	mov	r8, r7
 8018268:	4645      	mov	r5, r8
 801826a:	f815 3b01 	ldrb.w	r3, [r5], #1
 801826e:	b10b      	cbz	r3, 8018274 <_vfiprintf_r+0x50>
 8018270:	2b25      	cmp	r3, #37	; 0x25
 8018272:	d154      	bne.n	801831e <_vfiprintf_r+0xfa>
 8018274:	ebb8 0a07 	subs.w	sl, r8, r7
 8018278:	d00b      	beq.n	8018292 <_vfiprintf_r+0x6e>
 801827a:	4653      	mov	r3, sl
 801827c:	463a      	mov	r2, r7
 801827e:	4621      	mov	r1, r4
 8018280:	4630      	mov	r0, r6
 8018282:	f7ff ffbc 	bl	80181fe <__sfputs_r>
 8018286:	3001      	adds	r0, #1
 8018288:	f000 80c2 	beq.w	8018410 <_vfiprintf_r+0x1ec>
 801828c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801828e:	4453      	add	r3, sl
 8018290:	9309      	str	r3, [sp, #36]	; 0x24
 8018292:	f898 3000 	ldrb.w	r3, [r8]
 8018296:	2b00      	cmp	r3, #0
 8018298:	f000 80ba 	beq.w	8018410 <_vfiprintf_r+0x1ec>
 801829c:	2300      	movs	r3, #0
 801829e:	f04f 32ff 	mov.w	r2, #4294967295
 80182a2:	e9cd 2305 	strd	r2, r3, [sp, #20]
 80182a6:	9304      	str	r3, [sp, #16]
 80182a8:	9307      	str	r3, [sp, #28]
 80182aa:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 80182ae:	931a      	str	r3, [sp, #104]	; 0x68
 80182b0:	46a8      	mov	r8, r5
 80182b2:	2205      	movs	r2, #5
 80182b4:	f818 1b01 	ldrb.w	r1, [r8], #1
 80182b8:	485e      	ldr	r0, [pc, #376]	; (8018434 <_vfiprintf_r+0x210>)
 80182ba:	f7e7 ff99 	bl	80001f0 <memchr>
 80182be:	9b04      	ldr	r3, [sp, #16]
 80182c0:	bb78      	cbnz	r0, 8018322 <_vfiprintf_r+0xfe>
 80182c2:	06d9      	lsls	r1, r3, #27
 80182c4:	bf44      	itt	mi
 80182c6:	2220      	movmi	r2, #32
 80182c8:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
 80182cc:	071a      	lsls	r2, r3, #28
 80182ce:	bf44      	itt	mi
 80182d0:	222b      	movmi	r2, #43	; 0x2b
 80182d2:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
 80182d6:	782a      	ldrb	r2, [r5, #0]
 80182d8:	2a2a      	cmp	r2, #42	; 0x2a
 80182da:	d02a      	beq.n	8018332 <_vfiprintf_r+0x10e>
 80182dc:	9a07      	ldr	r2, [sp, #28]
 80182de:	46a8      	mov	r8, r5
 80182e0:	2000      	movs	r0, #0
 80182e2:	250a      	movs	r5, #10
 80182e4:	4641      	mov	r1, r8
 80182e6:	f811 3b01 	ldrb.w	r3, [r1], #1
 80182ea:	3b30      	subs	r3, #48	; 0x30
 80182ec:	2b09      	cmp	r3, #9
 80182ee:	d969      	bls.n	80183c4 <_vfiprintf_r+0x1a0>
 80182f0:	b360      	cbz	r0, 801834c <_vfiprintf_r+0x128>
 80182f2:	e024      	b.n	801833e <_vfiprintf_r+0x11a>
 80182f4:	4b50      	ldr	r3, [pc, #320]	; (8018438 <_vfiprintf_r+0x214>)
 80182f6:	429c      	cmp	r4, r3
 80182f8:	d101      	bne.n	80182fe <_vfiprintf_r+0xda>
 80182fa:	68b4      	ldr	r4, [r6, #8]
 80182fc:	e7a2      	b.n	8018244 <_vfiprintf_r+0x20>
 80182fe:	4b4f      	ldr	r3, [pc, #316]	; (801843c <_vfiprintf_r+0x218>)
 8018300:	429c      	cmp	r4, r3
 8018302:	bf08      	it	eq
 8018304:	68f4      	ldreq	r4, [r6, #12]
 8018306:	e79d      	b.n	8018244 <_vfiprintf_r+0x20>
 8018308:	4621      	mov	r1, r4
 801830a:	4630      	mov	r0, r6
 801830c:	f000 face 	bl	80188ac <__swsetup_r>
 8018310:	2800      	cmp	r0, #0
 8018312:	d09d      	beq.n	8018250 <_vfiprintf_r+0x2c>
 8018314:	f04f 30ff 	mov.w	r0, #4294967295
 8018318:	b01d      	add	sp, #116	; 0x74
 801831a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801831e:	46a8      	mov	r8, r5
 8018320:	e7a2      	b.n	8018268 <_vfiprintf_r+0x44>
 8018322:	4a44      	ldr	r2, [pc, #272]	; (8018434 <_vfiprintf_r+0x210>)
 8018324:	1a80      	subs	r0, r0, r2
 8018326:	fa0b f000 	lsl.w	r0, fp, r0
 801832a:	4318      	orrs	r0, r3
 801832c:	9004      	str	r0, [sp, #16]
 801832e:	4645      	mov	r5, r8
 8018330:	e7be      	b.n	80182b0 <_vfiprintf_r+0x8c>
 8018332:	9a03      	ldr	r2, [sp, #12]
 8018334:	1d11      	adds	r1, r2, #4
 8018336:	6812      	ldr	r2, [r2, #0]
 8018338:	9103      	str	r1, [sp, #12]
 801833a:	2a00      	cmp	r2, #0
 801833c:	db01      	blt.n	8018342 <_vfiprintf_r+0x11e>
 801833e:	9207      	str	r2, [sp, #28]
 8018340:	e004      	b.n	801834c <_vfiprintf_r+0x128>
 8018342:	4252      	negs	r2, r2
 8018344:	f043 0302 	orr.w	r3, r3, #2
 8018348:	9207      	str	r2, [sp, #28]
 801834a:	9304      	str	r3, [sp, #16]
 801834c:	f898 3000 	ldrb.w	r3, [r8]
 8018350:	2b2e      	cmp	r3, #46	; 0x2e
 8018352:	d10e      	bne.n	8018372 <_vfiprintf_r+0x14e>
 8018354:	f898 3001 	ldrb.w	r3, [r8, #1]
 8018358:	2b2a      	cmp	r3, #42	; 0x2a
 801835a:	d138      	bne.n	80183ce <_vfiprintf_r+0x1aa>
 801835c:	9b03      	ldr	r3, [sp, #12]
 801835e:	1d1a      	adds	r2, r3, #4
 8018360:	681b      	ldr	r3, [r3, #0]
 8018362:	9203      	str	r2, [sp, #12]
 8018364:	2b00      	cmp	r3, #0
 8018366:	bfb8      	it	lt
 8018368:	f04f 33ff 	movlt.w	r3, #4294967295
 801836c:	f108 0802 	add.w	r8, r8, #2
 8018370:	9305      	str	r3, [sp, #20]
 8018372:	4d33      	ldr	r5, [pc, #204]	; (8018440 <_vfiprintf_r+0x21c>)
 8018374:	f898 1000 	ldrb.w	r1, [r8]
 8018378:	2203      	movs	r2, #3
 801837a:	4628      	mov	r0, r5
 801837c:	f7e7 ff38 	bl	80001f0 <memchr>
 8018380:	b140      	cbz	r0, 8018394 <_vfiprintf_r+0x170>
 8018382:	2340      	movs	r3, #64	; 0x40
 8018384:	1b40      	subs	r0, r0, r5
 8018386:	fa03 f000 	lsl.w	r0, r3, r0
 801838a:	9b04      	ldr	r3, [sp, #16]
 801838c:	4303      	orrs	r3, r0
 801838e:	f108 0801 	add.w	r8, r8, #1
 8018392:	9304      	str	r3, [sp, #16]
 8018394:	f898 1000 	ldrb.w	r1, [r8]
 8018398:	482a      	ldr	r0, [pc, #168]	; (8018444 <_vfiprintf_r+0x220>)
 801839a:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 801839e:	2206      	movs	r2, #6
 80183a0:	f108 0701 	add.w	r7, r8, #1
 80183a4:	f7e7 ff24 	bl	80001f0 <memchr>
 80183a8:	2800      	cmp	r0, #0
 80183aa:	d037      	beq.n	801841c <_vfiprintf_r+0x1f8>
 80183ac:	4b26      	ldr	r3, [pc, #152]	; (8018448 <_vfiprintf_r+0x224>)
 80183ae:	bb1b      	cbnz	r3, 80183f8 <_vfiprintf_r+0x1d4>
 80183b0:	9b03      	ldr	r3, [sp, #12]
 80183b2:	3307      	adds	r3, #7
 80183b4:	f023 0307 	bic.w	r3, r3, #7
 80183b8:	3308      	adds	r3, #8
 80183ba:	9303      	str	r3, [sp, #12]
 80183bc:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80183be:	444b      	add	r3, r9
 80183c0:	9309      	str	r3, [sp, #36]	; 0x24
 80183c2:	e750      	b.n	8018266 <_vfiprintf_r+0x42>
 80183c4:	fb05 3202 	mla	r2, r5, r2, r3
 80183c8:	2001      	movs	r0, #1
 80183ca:	4688      	mov	r8, r1
 80183cc:	e78a      	b.n	80182e4 <_vfiprintf_r+0xc0>
 80183ce:	2300      	movs	r3, #0
 80183d0:	f108 0801 	add.w	r8, r8, #1
 80183d4:	9305      	str	r3, [sp, #20]
 80183d6:	4619      	mov	r1, r3
 80183d8:	250a      	movs	r5, #10
 80183da:	4640      	mov	r0, r8
 80183dc:	f810 2b01 	ldrb.w	r2, [r0], #1
 80183e0:	3a30      	subs	r2, #48	; 0x30
 80183e2:	2a09      	cmp	r2, #9
 80183e4:	d903      	bls.n	80183ee <_vfiprintf_r+0x1ca>
 80183e6:	2b00      	cmp	r3, #0
 80183e8:	d0c3      	beq.n	8018372 <_vfiprintf_r+0x14e>
 80183ea:	9105      	str	r1, [sp, #20]
 80183ec:	e7c1      	b.n	8018372 <_vfiprintf_r+0x14e>
 80183ee:	fb05 2101 	mla	r1, r5, r1, r2
 80183f2:	2301      	movs	r3, #1
 80183f4:	4680      	mov	r8, r0
 80183f6:	e7f0      	b.n	80183da <_vfiprintf_r+0x1b6>
 80183f8:	ab03      	add	r3, sp, #12
 80183fa:	9300      	str	r3, [sp, #0]
 80183fc:	4622      	mov	r2, r4
 80183fe:	4b13      	ldr	r3, [pc, #76]	; (801844c <_vfiprintf_r+0x228>)
 8018400:	a904      	add	r1, sp, #16
 8018402:	4630      	mov	r0, r6
 8018404:	f3af 8000 	nop.w
 8018408:	f1b0 3fff 	cmp.w	r0, #4294967295
 801840c:	4681      	mov	r9, r0
 801840e:	d1d5      	bne.n	80183bc <_vfiprintf_r+0x198>
 8018410:	89a3      	ldrh	r3, [r4, #12]
 8018412:	065b      	lsls	r3, r3, #25
 8018414:	f53f af7e 	bmi.w	8018314 <_vfiprintf_r+0xf0>
 8018418:	9809      	ldr	r0, [sp, #36]	; 0x24
 801841a:	e77d      	b.n	8018318 <_vfiprintf_r+0xf4>
 801841c:	ab03      	add	r3, sp, #12
 801841e:	9300      	str	r3, [sp, #0]
 8018420:	4622      	mov	r2, r4
 8018422:	4b0a      	ldr	r3, [pc, #40]	; (801844c <_vfiprintf_r+0x228>)
 8018424:	a904      	add	r1, sp, #16
 8018426:	4630      	mov	r0, r6
 8018428:	f000 f888 	bl	801853c <_printf_i>
 801842c:	e7ec      	b.n	8018408 <_vfiprintf_r+0x1e4>
 801842e:	bf00      	nop
 8018430:	0801c4a8 	.word	0x0801c4a8
 8018434:	0801c450 	.word	0x0801c450
 8018438:	0801c4c8 	.word	0x0801c4c8
 801843c:	0801c488 	.word	0x0801c488
 8018440:	0801c456 	.word	0x0801c456
 8018444:	0801c45a 	.word	0x0801c45a
 8018448:	00000000 	.word	0x00000000
 801844c:	080181ff 	.word	0x080181ff

08018450 <_printf_common>:
 8018450:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8018454:	4691      	mov	r9, r2
 8018456:	461f      	mov	r7, r3
 8018458:	688a      	ldr	r2, [r1, #8]
 801845a:	690b      	ldr	r3, [r1, #16]
 801845c:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8018460:	4293      	cmp	r3, r2
 8018462:	bfb8      	it	lt
 8018464:	4613      	movlt	r3, r2
 8018466:	f8c9 3000 	str.w	r3, [r9]
 801846a:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 801846e:	4606      	mov	r6, r0
 8018470:	460c      	mov	r4, r1
 8018472:	b112      	cbz	r2, 801847a <_printf_common+0x2a>
 8018474:	3301      	adds	r3, #1
 8018476:	f8c9 3000 	str.w	r3, [r9]
 801847a:	6823      	ldr	r3, [r4, #0]
 801847c:	0699      	lsls	r1, r3, #26
 801847e:	bf42      	ittt	mi
 8018480:	f8d9 3000 	ldrmi.w	r3, [r9]
 8018484:	3302      	addmi	r3, #2
 8018486:	f8c9 3000 	strmi.w	r3, [r9]
 801848a:	6825      	ldr	r5, [r4, #0]
 801848c:	f015 0506 	ands.w	r5, r5, #6
 8018490:	d107      	bne.n	80184a2 <_printf_common+0x52>
 8018492:	f104 0a19 	add.w	sl, r4, #25
 8018496:	68e3      	ldr	r3, [r4, #12]
 8018498:	f8d9 2000 	ldr.w	r2, [r9]
 801849c:	1a9b      	subs	r3, r3, r2
 801849e:	42ab      	cmp	r3, r5
 80184a0:	dc28      	bgt.n	80184f4 <_printf_common+0xa4>
 80184a2:	f894 3043 	ldrb.w	r3, [r4, #67]	; 0x43
 80184a6:	6822      	ldr	r2, [r4, #0]
 80184a8:	3300      	adds	r3, #0
 80184aa:	bf18      	it	ne
 80184ac:	2301      	movne	r3, #1
 80184ae:	0692      	lsls	r2, r2, #26
 80184b0:	d42d      	bmi.n	801850e <_printf_common+0xbe>
 80184b2:	f104 0243 	add.w	r2, r4, #67	; 0x43
 80184b6:	4639      	mov	r1, r7
 80184b8:	4630      	mov	r0, r6
 80184ba:	47c0      	blx	r8
 80184bc:	3001      	adds	r0, #1
 80184be:	d020      	beq.n	8018502 <_printf_common+0xb2>
 80184c0:	6823      	ldr	r3, [r4, #0]
 80184c2:	68e5      	ldr	r5, [r4, #12]
 80184c4:	f8d9 2000 	ldr.w	r2, [r9]
 80184c8:	f003 0306 	and.w	r3, r3, #6
 80184cc:	2b04      	cmp	r3, #4
 80184ce:	bf08      	it	eq
 80184d0:	1aad      	subeq	r5, r5, r2
 80184d2:	68a3      	ldr	r3, [r4, #8]
 80184d4:	6922      	ldr	r2, [r4, #16]
 80184d6:	bf0c      	ite	eq
 80184d8:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 80184dc:	2500      	movne	r5, #0
 80184de:	4293      	cmp	r3, r2
 80184e0:	bfc4      	itt	gt
 80184e2:	1a9b      	subgt	r3, r3, r2
 80184e4:	18ed      	addgt	r5, r5, r3
 80184e6:	f04f 0900 	mov.w	r9, #0
 80184ea:	341a      	adds	r4, #26
 80184ec:	454d      	cmp	r5, r9
 80184ee:	d11a      	bne.n	8018526 <_printf_common+0xd6>
 80184f0:	2000      	movs	r0, #0
 80184f2:	e008      	b.n	8018506 <_printf_common+0xb6>
 80184f4:	2301      	movs	r3, #1
 80184f6:	4652      	mov	r2, sl
 80184f8:	4639      	mov	r1, r7
 80184fa:	4630      	mov	r0, r6
 80184fc:	47c0      	blx	r8
 80184fe:	3001      	adds	r0, #1
 8018500:	d103      	bne.n	801850a <_printf_common+0xba>
 8018502:	f04f 30ff 	mov.w	r0, #4294967295
 8018506:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801850a:	3501      	adds	r5, #1
 801850c:	e7c3      	b.n	8018496 <_printf_common+0x46>
 801850e:	18e1      	adds	r1, r4, r3
 8018510:	1c5a      	adds	r2, r3, #1
 8018512:	2030      	movs	r0, #48	; 0x30
 8018514:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 8018518:	4422      	add	r2, r4
 801851a:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 801851e:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 8018522:	3302      	adds	r3, #2
 8018524:	e7c5      	b.n	80184b2 <_printf_common+0x62>
 8018526:	2301      	movs	r3, #1
 8018528:	4622      	mov	r2, r4
 801852a:	4639      	mov	r1, r7
 801852c:	4630      	mov	r0, r6
 801852e:	47c0      	blx	r8
 8018530:	3001      	adds	r0, #1
 8018532:	d0e6      	beq.n	8018502 <_printf_common+0xb2>
 8018534:	f109 0901 	add.w	r9, r9, #1
 8018538:	e7d8      	b.n	80184ec <_printf_common+0x9c>
	...

0801853c <_printf_i>:
 801853c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8018540:	f101 0c43 	add.w	ip, r1, #67	; 0x43
 8018544:	460c      	mov	r4, r1
 8018546:	7e09      	ldrb	r1, [r1, #24]
 8018548:	b085      	sub	sp, #20
 801854a:	296e      	cmp	r1, #110	; 0x6e
 801854c:	4617      	mov	r7, r2
 801854e:	4606      	mov	r6, r0
 8018550:	4698      	mov	r8, r3
 8018552:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8018554:	f000 80b3 	beq.w	80186be <_printf_i+0x182>
 8018558:	d822      	bhi.n	80185a0 <_printf_i+0x64>
 801855a:	2963      	cmp	r1, #99	; 0x63
 801855c:	d036      	beq.n	80185cc <_printf_i+0x90>
 801855e:	d80a      	bhi.n	8018576 <_printf_i+0x3a>
 8018560:	2900      	cmp	r1, #0
 8018562:	f000 80b9 	beq.w	80186d8 <_printf_i+0x19c>
 8018566:	2958      	cmp	r1, #88	; 0x58
 8018568:	f000 8083 	beq.w	8018672 <_printf_i+0x136>
 801856c:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8018570:	f884 1042 	strb.w	r1, [r4, #66]	; 0x42
 8018574:	e032      	b.n	80185dc <_printf_i+0xa0>
 8018576:	2964      	cmp	r1, #100	; 0x64
 8018578:	d001      	beq.n	801857e <_printf_i+0x42>
 801857a:	2969      	cmp	r1, #105	; 0x69
 801857c:	d1f6      	bne.n	801856c <_printf_i+0x30>
 801857e:	6820      	ldr	r0, [r4, #0]
 8018580:	6813      	ldr	r3, [r2, #0]
 8018582:	0605      	lsls	r5, r0, #24
 8018584:	f103 0104 	add.w	r1, r3, #4
 8018588:	d52a      	bpl.n	80185e0 <_printf_i+0xa4>
 801858a:	681b      	ldr	r3, [r3, #0]
 801858c:	6011      	str	r1, [r2, #0]
 801858e:	2b00      	cmp	r3, #0
 8018590:	da03      	bge.n	801859a <_printf_i+0x5e>
 8018592:	222d      	movs	r2, #45	; 0x2d
 8018594:	425b      	negs	r3, r3
 8018596:	f884 2043 	strb.w	r2, [r4, #67]	; 0x43
 801859a:	486f      	ldr	r0, [pc, #444]	; (8018758 <_printf_i+0x21c>)
 801859c:	220a      	movs	r2, #10
 801859e:	e039      	b.n	8018614 <_printf_i+0xd8>
 80185a0:	2973      	cmp	r1, #115	; 0x73
 80185a2:	f000 809d 	beq.w	80186e0 <_printf_i+0x1a4>
 80185a6:	d808      	bhi.n	80185ba <_printf_i+0x7e>
 80185a8:	296f      	cmp	r1, #111	; 0x6f
 80185aa:	d020      	beq.n	80185ee <_printf_i+0xb2>
 80185ac:	2970      	cmp	r1, #112	; 0x70
 80185ae:	d1dd      	bne.n	801856c <_printf_i+0x30>
 80185b0:	6823      	ldr	r3, [r4, #0]
 80185b2:	f043 0320 	orr.w	r3, r3, #32
 80185b6:	6023      	str	r3, [r4, #0]
 80185b8:	e003      	b.n	80185c2 <_printf_i+0x86>
 80185ba:	2975      	cmp	r1, #117	; 0x75
 80185bc:	d017      	beq.n	80185ee <_printf_i+0xb2>
 80185be:	2978      	cmp	r1, #120	; 0x78
 80185c0:	d1d4      	bne.n	801856c <_printf_i+0x30>
 80185c2:	2378      	movs	r3, #120	; 0x78
 80185c4:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 80185c8:	4864      	ldr	r0, [pc, #400]	; (801875c <_printf_i+0x220>)
 80185ca:	e055      	b.n	8018678 <_printf_i+0x13c>
 80185cc:	6813      	ldr	r3, [r2, #0]
 80185ce:	1d19      	adds	r1, r3, #4
 80185d0:	681b      	ldr	r3, [r3, #0]
 80185d2:	6011      	str	r1, [r2, #0]
 80185d4:	f104 0542 	add.w	r5, r4, #66	; 0x42
 80185d8:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 80185dc:	2301      	movs	r3, #1
 80185de:	e08c      	b.n	80186fa <_printf_i+0x1be>
 80185e0:	681b      	ldr	r3, [r3, #0]
 80185e2:	6011      	str	r1, [r2, #0]
 80185e4:	f010 0f40 	tst.w	r0, #64	; 0x40
 80185e8:	bf18      	it	ne
 80185ea:	b21b      	sxthne	r3, r3
 80185ec:	e7cf      	b.n	801858e <_printf_i+0x52>
 80185ee:	6813      	ldr	r3, [r2, #0]
 80185f0:	6825      	ldr	r5, [r4, #0]
 80185f2:	1d18      	adds	r0, r3, #4
 80185f4:	6010      	str	r0, [r2, #0]
 80185f6:	0628      	lsls	r0, r5, #24
 80185f8:	d501      	bpl.n	80185fe <_printf_i+0xc2>
 80185fa:	681b      	ldr	r3, [r3, #0]
 80185fc:	e002      	b.n	8018604 <_printf_i+0xc8>
 80185fe:	0668      	lsls	r0, r5, #25
 8018600:	d5fb      	bpl.n	80185fa <_printf_i+0xbe>
 8018602:	881b      	ldrh	r3, [r3, #0]
 8018604:	4854      	ldr	r0, [pc, #336]	; (8018758 <_printf_i+0x21c>)
 8018606:	296f      	cmp	r1, #111	; 0x6f
 8018608:	bf14      	ite	ne
 801860a:	220a      	movne	r2, #10
 801860c:	2208      	moveq	r2, #8
 801860e:	2100      	movs	r1, #0
 8018610:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 8018614:	6865      	ldr	r5, [r4, #4]
 8018616:	60a5      	str	r5, [r4, #8]
 8018618:	2d00      	cmp	r5, #0
 801861a:	f2c0 8095 	blt.w	8018748 <_printf_i+0x20c>
 801861e:	6821      	ldr	r1, [r4, #0]
 8018620:	f021 0104 	bic.w	r1, r1, #4
 8018624:	6021      	str	r1, [r4, #0]
 8018626:	2b00      	cmp	r3, #0
 8018628:	d13d      	bne.n	80186a6 <_printf_i+0x16a>
 801862a:	2d00      	cmp	r5, #0
 801862c:	f040 808e 	bne.w	801874c <_printf_i+0x210>
 8018630:	4665      	mov	r5, ip
 8018632:	2a08      	cmp	r2, #8
 8018634:	d10b      	bne.n	801864e <_printf_i+0x112>
 8018636:	6823      	ldr	r3, [r4, #0]
 8018638:	07db      	lsls	r3, r3, #31
 801863a:	d508      	bpl.n	801864e <_printf_i+0x112>
 801863c:	6923      	ldr	r3, [r4, #16]
 801863e:	6862      	ldr	r2, [r4, #4]
 8018640:	429a      	cmp	r2, r3
 8018642:	bfde      	ittt	le
 8018644:	2330      	movle	r3, #48	; 0x30
 8018646:	f805 3c01 	strble.w	r3, [r5, #-1]
 801864a:	f105 35ff 	addle.w	r5, r5, #4294967295
 801864e:	ebac 0305 	sub.w	r3, ip, r5
 8018652:	6123      	str	r3, [r4, #16]
 8018654:	f8cd 8000 	str.w	r8, [sp]
 8018658:	463b      	mov	r3, r7
 801865a:	aa03      	add	r2, sp, #12
 801865c:	4621      	mov	r1, r4
 801865e:	4630      	mov	r0, r6
 8018660:	f7ff fef6 	bl	8018450 <_printf_common>
 8018664:	3001      	adds	r0, #1
 8018666:	d14d      	bne.n	8018704 <_printf_i+0x1c8>
 8018668:	f04f 30ff 	mov.w	r0, #4294967295
 801866c:	b005      	add	sp, #20
 801866e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8018672:	4839      	ldr	r0, [pc, #228]	; (8018758 <_printf_i+0x21c>)
 8018674:	f884 1045 	strb.w	r1, [r4, #69]	; 0x45
 8018678:	6813      	ldr	r3, [r2, #0]
 801867a:	6821      	ldr	r1, [r4, #0]
 801867c:	1d1d      	adds	r5, r3, #4
 801867e:	681b      	ldr	r3, [r3, #0]
 8018680:	6015      	str	r5, [r2, #0]
 8018682:	060a      	lsls	r2, r1, #24
 8018684:	d50b      	bpl.n	801869e <_printf_i+0x162>
 8018686:	07ca      	lsls	r2, r1, #31
 8018688:	bf44      	itt	mi
 801868a:	f041 0120 	orrmi.w	r1, r1, #32
 801868e:	6021      	strmi	r1, [r4, #0]
 8018690:	b91b      	cbnz	r3, 801869a <_printf_i+0x15e>
 8018692:	6822      	ldr	r2, [r4, #0]
 8018694:	f022 0220 	bic.w	r2, r2, #32
 8018698:	6022      	str	r2, [r4, #0]
 801869a:	2210      	movs	r2, #16
 801869c:	e7b7      	b.n	801860e <_printf_i+0xd2>
 801869e:	064d      	lsls	r5, r1, #25
 80186a0:	bf48      	it	mi
 80186a2:	b29b      	uxthmi	r3, r3
 80186a4:	e7ef      	b.n	8018686 <_printf_i+0x14a>
 80186a6:	4665      	mov	r5, ip
 80186a8:	fbb3 f1f2 	udiv	r1, r3, r2
 80186ac:	fb02 3311 	mls	r3, r2, r1, r3
 80186b0:	5cc3      	ldrb	r3, [r0, r3]
 80186b2:	f805 3d01 	strb.w	r3, [r5, #-1]!
 80186b6:	460b      	mov	r3, r1
 80186b8:	2900      	cmp	r1, #0
 80186ba:	d1f5      	bne.n	80186a8 <_printf_i+0x16c>
 80186bc:	e7b9      	b.n	8018632 <_printf_i+0xf6>
 80186be:	6813      	ldr	r3, [r2, #0]
 80186c0:	6825      	ldr	r5, [r4, #0]
 80186c2:	6961      	ldr	r1, [r4, #20]
 80186c4:	1d18      	adds	r0, r3, #4
 80186c6:	6010      	str	r0, [r2, #0]
 80186c8:	0628      	lsls	r0, r5, #24
 80186ca:	681b      	ldr	r3, [r3, #0]
 80186cc:	d501      	bpl.n	80186d2 <_printf_i+0x196>
 80186ce:	6019      	str	r1, [r3, #0]
 80186d0:	e002      	b.n	80186d8 <_printf_i+0x19c>
 80186d2:	066a      	lsls	r2, r5, #25
 80186d4:	d5fb      	bpl.n	80186ce <_printf_i+0x192>
 80186d6:	8019      	strh	r1, [r3, #0]
 80186d8:	2300      	movs	r3, #0
 80186da:	6123      	str	r3, [r4, #16]
 80186dc:	4665      	mov	r5, ip
 80186de:	e7b9      	b.n	8018654 <_printf_i+0x118>
 80186e0:	6813      	ldr	r3, [r2, #0]
 80186e2:	1d19      	adds	r1, r3, #4
 80186e4:	6011      	str	r1, [r2, #0]
 80186e6:	681d      	ldr	r5, [r3, #0]
 80186e8:	6862      	ldr	r2, [r4, #4]
 80186ea:	2100      	movs	r1, #0
 80186ec:	4628      	mov	r0, r5
 80186ee:	f7e7 fd7f 	bl	80001f0 <memchr>
 80186f2:	b108      	cbz	r0, 80186f8 <_printf_i+0x1bc>
 80186f4:	1b40      	subs	r0, r0, r5
 80186f6:	6060      	str	r0, [r4, #4]
 80186f8:	6863      	ldr	r3, [r4, #4]
 80186fa:	6123      	str	r3, [r4, #16]
 80186fc:	2300      	movs	r3, #0
 80186fe:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8018702:	e7a7      	b.n	8018654 <_printf_i+0x118>
 8018704:	6923      	ldr	r3, [r4, #16]
 8018706:	462a      	mov	r2, r5
 8018708:	4639      	mov	r1, r7
 801870a:	4630      	mov	r0, r6
 801870c:	47c0      	blx	r8
 801870e:	3001      	adds	r0, #1
 8018710:	d0aa      	beq.n	8018668 <_printf_i+0x12c>
 8018712:	6823      	ldr	r3, [r4, #0]
 8018714:	079b      	lsls	r3, r3, #30
 8018716:	d413      	bmi.n	8018740 <_printf_i+0x204>
 8018718:	68e0      	ldr	r0, [r4, #12]
 801871a:	9b03      	ldr	r3, [sp, #12]
 801871c:	4298      	cmp	r0, r3
 801871e:	bfb8      	it	lt
 8018720:	4618      	movlt	r0, r3
 8018722:	e7a3      	b.n	801866c <_printf_i+0x130>
 8018724:	2301      	movs	r3, #1
 8018726:	464a      	mov	r2, r9
 8018728:	4639      	mov	r1, r7
 801872a:	4630      	mov	r0, r6
 801872c:	47c0      	blx	r8
 801872e:	3001      	adds	r0, #1
 8018730:	d09a      	beq.n	8018668 <_printf_i+0x12c>
 8018732:	3501      	adds	r5, #1
 8018734:	68e3      	ldr	r3, [r4, #12]
 8018736:	9a03      	ldr	r2, [sp, #12]
 8018738:	1a9b      	subs	r3, r3, r2
 801873a:	42ab      	cmp	r3, r5
 801873c:	dcf2      	bgt.n	8018724 <_printf_i+0x1e8>
 801873e:	e7eb      	b.n	8018718 <_printf_i+0x1dc>
 8018740:	2500      	movs	r5, #0
 8018742:	f104 0919 	add.w	r9, r4, #25
 8018746:	e7f5      	b.n	8018734 <_printf_i+0x1f8>
 8018748:	2b00      	cmp	r3, #0
 801874a:	d1ac      	bne.n	80186a6 <_printf_i+0x16a>
 801874c:	7803      	ldrb	r3, [r0, #0]
 801874e:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8018752:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8018756:	e76c      	b.n	8018632 <_printf_i+0xf6>
 8018758:	0801c461 	.word	0x0801c461
 801875c:	0801c472 	.word	0x0801c472

08018760 <_sbrk_r>:
 8018760:	b538      	push	{r3, r4, r5, lr}
 8018762:	4c06      	ldr	r4, [pc, #24]	; (801877c <_sbrk_r+0x1c>)
 8018764:	2300      	movs	r3, #0
 8018766:	4605      	mov	r5, r0
 8018768:	4608      	mov	r0, r1
 801876a:	6023      	str	r3, [r4, #0]
 801876c:	f7e9 faf2 	bl	8001d54 <_sbrk>
 8018770:	1c43      	adds	r3, r0, #1
 8018772:	d102      	bne.n	801877a <_sbrk_r+0x1a>
 8018774:	6823      	ldr	r3, [r4, #0]
 8018776:	b103      	cbz	r3, 801877a <_sbrk_r+0x1a>
 8018778:	602b      	str	r3, [r5, #0]
 801877a:	bd38      	pop	{r3, r4, r5, pc}
 801877c:	2001268c 	.word	0x2001268c

08018780 <_raise_r>:
 8018780:	291f      	cmp	r1, #31
 8018782:	b538      	push	{r3, r4, r5, lr}
 8018784:	4604      	mov	r4, r0
 8018786:	460d      	mov	r5, r1
 8018788:	d904      	bls.n	8018794 <_raise_r+0x14>
 801878a:	2316      	movs	r3, #22
 801878c:	6003      	str	r3, [r0, #0]
 801878e:	f04f 30ff 	mov.w	r0, #4294967295
 8018792:	bd38      	pop	{r3, r4, r5, pc}
 8018794:	6c42      	ldr	r2, [r0, #68]	; 0x44
 8018796:	b112      	cbz	r2, 801879e <_raise_r+0x1e>
 8018798:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 801879c:	b94b      	cbnz	r3, 80187b2 <_raise_r+0x32>
 801879e:	4620      	mov	r0, r4
 80187a0:	f000 f830 	bl	8018804 <_getpid_r>
 80187a4:	462a      	mov	r2, r5
 80187a6:	4601      	mov	r1, r0
 80187a8:	4620      	mov	r0, r4
 80187aa:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80187ae:	f000 b817 	b.w	80187e0 <_kill_r>
 80187b2:	2b01      	cmp	r3, #1
 80187b4:	d00a      	beq.n	80187cc <_raise_r+0x4c>
 80187b6:	1c59      	adds	r1, r3, #1
 80187b8:	d103      	bne.n	80187c2 <_raise_r+0x42>
 80187ba:	2316      	movs	r3, #22
 80187bc:	6003      	str	r3, [r0, #0]
 80187be:	2001      	movs	r0, #1
 80187c0:	e7e7      	b.n	8018792 <_raise_r+0x12>
 80187c2:	2400      	movs	r4, #0
 80187c4:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
 80187c8:	4628      	mov	r0, r5
 80187ca:	4798      	blx	r3
 80187cc:	2000      	movs	r0, #0
 80187ce:	e7e0      	b.n	8018792 <_raise_r+0x12>

080187d0 <raise>:
 80187d0:	4b02      	ldr	r3, [pc, #8]	; (80187dc <raise+0xc>)
 80187d2:	4601      	mov	r1, r0
 80187d4:	6818      	ldr	r0, [r3, #0]
 80187d6:	f7ff bfd3 	b.w	8018780 <_raise_r>
 80187da:	bf00      	nop
 80187dc:	200000fc 	.word	0x200000fc

080187e0 <_kill_r>:
 80187e0:	b538      	push	{r3, r4, r5, lr}
 80187e2:	4c07      	ldr	r4, [pc, #28]	; (8018800 <_kill_r+0x20>)
 80187e4:	2300      	movs	r3, #0
 80187e6:	4605      	mov	r5, r0
 80187e8:	4608      	mov	r0, r1
 80187ea:	4611      	mov	r1, r2
 80187ec:	6023      	str	r3, [r4, #0]
 80187ee:	f7e9 fa7b 	bl	8001ce8 <_kill>
 80187f2:	1c43      	adds	r3, r0, #1
 80187f4:	d102      	bne.n	80187fc <_kill_r+0x1c>
 80187f6:	6823      	ldr	r3, [r4, #0]
 80187f8:	b103      	cbz	r3, 80187fc <_kill_r+0x1c>
 80187fa:	602b      	str	r3, [r5, #0]
 80187fc:	bd38      	pop	{r3, r4, r5, pc}
 80187fe:	bf00      	nop
 8018800:	2001268c 	.word	0x2001268c

08018804 <_getpid_r>:
 8018804:	f7e9 ba6e 	b.w	8001ce4 <_getpid>

08018808 <__swbuf_r>:
 8018808:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801880a:	460e      	mov	r6, r1
 801880c:	4614      	mov	r4, r2
 801880e:	4605      	mov	r5, r0
 8018810:	b118      	cbz	r0, 801881a <__swbuf_r+0x12>
 8018812:	6983      	ldr	r3, [r0, #24]
 8018814:	b90b      	cbnz	r3, 801881a <__swbuf_r+0x12>
 8018816:	f000 fa0b 	bl	8018c30 <__sinit>
 801881a:	4b21      	ldr	r3, [pc, #132]	; (80188a0 <__swbuf_r+0x98>)
 801881c:	429c      	cmp	r4, r3
 801881e:	d12a      	bne.n	8018876 <__swbuf_r+0x6e>
 8018820:	686c      	ldr	r4, [r5, #4]
 8018822:	69a3      	ldr	r3, [r4, #24]
 8018824:	60a3      	str	r3, [r4, #8]
 8018826:	89a3      	ldrh	r3, [r4, #12]
 8018828:	071a      	lsls	r2, r3, #28
 801882a:	d52e      	bpl.n	801888a <__swbuf_r+0x82>
 801882c:	6923      	ldr	r3, [r4, #16]
 801882e:	b363      	cbz	r3, 801888a <__swbuf_r+0x82>
 8018830:	6923      	ldr	r3, [r4, #16]
 8018832:	6820      	ldr	r0, [r4, #0]
 8018834:	1ac0      	subs	r0, r0, r3
 8018836:	6963      	ldr	r3, [r4, #20]
 8018838:	b2f6      	uxtb	r6, r6
 801883a:	4283      	cmp	r3, r0
 801883c:	4637      	mov	r7, r6
 801883e:	dc04      	bgt.n	801884a <__swbuf_r+0x42>
 8018840:	4621      	mov	r1, r4
 8018842:	4628      	mov	r0, r5
 8018844:	f000 f98a 	bl	8018b5c <_fflush_r>
 8018848:	bb28      	cbnz	r0, 8018896 <__swbuf_r+0x8e>
 801884a:	68a3      	ldr	r3, [r4, #8]
 801884c:	3b01      	subs	r3, #1
 801884e:	60a3      	str	r3, [r4, #8]
 8018850:	6823      	ldr	r3, [r4, #0]
 8018852:	1c5a      	adds	r2, r3, #1
 8018854:	6022      	str	r2, [r4, #0]
 8018856:	701e      	strb	r6, [r3, #0]
 8018858:	6963      	ldr	r3, [r4, #20]
 801885a:	3001      	adds	r0, #1
 801885c:	4283      	cmp	r3, r0
 801885e:	d004      	beq.n	801886a <__swbuf_r+0x62>
 8018860:	89a3      	ldrh	r3, [r4, #12]
 8018862:	07db      	lsls	r3, r3, #31
 8018864:	d519      	bpl.n	801889a <__swbuf_r+0x92>
 8018866:	2e0a      	cmp	r6, #10
 8018868:	d117      	bne.n	801889a <__swbuf_r+0x92>
 801886a:	4621      	mov	r1, r4
 801886c:	4628      	mov	r0, r5
 801886e:	f000 f975 	bl	8018b5c <_fflush_r>
 8018872:	b190      	cbz	r0, 801889a <__swbuf_r+0x92>
 8018874:	e00f      	b.n	8018896 <__swbuf_r+0x8e>
 8018876:	4b0b      	ldr	r3, [pc, #44]	; (80188a4 <__swbuf_r+0x9c>)
 8018878:	429c      	cmp	r4, r3
 801887a:	d101      	bne.n	8018880 <__swbuf_r+0x78>
 801887c:	68ac      	ldr	r4, [r5, #8]
 801887e:	e7d0      	b.n	8018822 <__swbuf_r+0x1a>
 8018880:	4b09      	ldr	r3, [pc, #36]	; (80188a8 <__swbuf_r+0xa0>)
 8018882:	429c      	cmp	r4, r3
 8018884:	bf08      	it	eq
 8018886:	68ec      	ldreq	r4, [r5, #12]
 8018888:	e7cb      	b.n	8018822 <__swbuf_r+0x1a>
 801888a:	4621      	mov	r1, r4
 801888c:	4628      	mov	r0, r5
 801888e:	f000 f80d 	bl	80188ac <__swsetup_r>
 8018892:	2800      	cmp	r0, #0
 8018894:	d0cc      	beq.n	8018830 <__swbuf_r+0x28>
 8018896:	f04f 37ff 	mov.w	r7, #4294967295
 801889a:	4638      	mov	r0, r7
 801889c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801889e:	bf00      	nop
 80188a0:	0801c4a8 	.word	0x0801c4a8
 80188a4:	0801c4c8 	.word	0x0801c4c8
 80188a8:	0801c488 	.word	0x0801c488

080188ac <__swsetup_r>:
 80188ac:	4b32      	ldr	r3, [pc, #200]	; (8018978 <__swsetup_r+0xcc>)
 80188ae:	b570      	push	{r4, r5, r6, lr}
 80188b0:	681d      	ldr	r5, [r3, #0]
 80188b2:	4606      	mov	r6, r0
 80188b4:	460c      	mov	r4, r1
 80188b6:	b125      	cbz	r5, 80188c2 <__swsetup_r+0x16>
 80188b8:	69ab      	ldr	r3, [r5, #24]
 80188ba:	b913      	cbnz	r3, 80188c2 <__swsetup_r+0x16>
 80188bc:	4628      	mov	r0, r5
 80188be:	f000 f9b7 	bl	8018c30 <__sinit>
 80188c2:	4b2e      	ldr	r3, [pc, #184]	; (801897c <__swsetup_r+0xd0>)
 80188c4:	429c      	cmp	r4, r3
 80188c6:	d10f      	bne.n	80188e8 <__swsetup_r+0x3c>
 80188c8:	686c      	ldr	r4, [r5, #4]
 80188ca:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80188ce:	b29a      	uxth	r2, r3
 80188d0:	0715      	lsls	r5, r2, #28
 80188d2:	d42c      	bmi.n	801892e <__swsetup_r+0x82>
 80188d4:	06d0      	lsls	r0, r2, #27
 80188d6:	d411      	bmi.n	80188fc <__swsetup_r+0x50>
 80188d8:	2209      	movs	r2, #9
 80188da:	6032      	str	r2, [r6, #0]
 80188dc:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80188e0:	81a3      	strh	r3, [r4, #12]
 80188e2:	f04f 30ff 	mov.w	r0, #4294967295
 80188e6:	e03e      	b.n	8018966 <__swsetup_r+0xba>
 80188e8:	4b25      	ldr	r3, [pc, #148]	; (8018980 <__swsetup_r+0xd4>)
 80188ea:	429c      	cmp	r4, r3
 80188ec:	d101      	bne.n	80188f2 <__swsetup_r+0x46>
 80188ee:	68ac      	ldr	r4, [r5, #8]
 80188f0:	e7eb      	b.n	80188ca <__swsetup_r+0x1e>
 80188f2:	4b24      	ldr	r3, [pc, #144]	; (8018984 <__swsetup_r+0xd8>)
 80188f4:	429c      	cmp	r4, r3
 80188f6:	bf08      	it	eq
 80188f8:	68ec      	ldreq	r4, [r5, #12]
 80188fa:	e7e6      	b.n	80188ca <__swsetup_r+0x1e>
 80188fc:	0751      	lsls	r1, r2, #29
 80188fe:	d512      	bpl.n	8018926 <__swsetup_r+0x7a>
 8018900:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8018902:	b141      	cbz	r1, 8018916 <__swsetup_r+0x6a>
 8018904:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8018908:	4299      	cmp	r1, r3
 801890a:	d002      	beq.n	8018912 <__swsetup_r+0x66>
 801890c:	4630      	mov	r0, r6
 801890e:	f7ff fbb7 	bl	8018080 <_free_r>
 8018912:	2300      	movs	r3, #0
 8018914:	6363      	str	r3, [r4, #52]	; 0x34
 8018916:	89a3      	ldrh	r3, [r4, #12]
 8018918:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 801891c:	81a3      	strh	r3, [r4, #12]
 801891e:	2300      	movs	r3, #0
 8018920:	6063      	str	r3, [r4, #4]
 8018922:	6923      	ldr	r3, [r4, #16]
 8018924:	6023      	str	r3, [r4, #0]
 8018926:	89a3      	ldrh	r3, [r4, #12]
 8018928:	f043 0308 	orr.w	r3, r3, #8
 801892c:	81a3      	strh	r3, [r4, #12]
 801892e:	6923      	ldr	r3, [r4, #16]
 8018930:	b94b      	cbnz	r3, 8018946 <__swsetup_r+0x9a>
 8018932:	89a3      	ldrh	r3, [r4, #12]
 8018934:	f403 7320 	and.w	r3, r3, #640	; 0x280
 8018938:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 801893c:	d003      	beq.n	8018946 <__swsetup_r+0x9a>
 801893e:	4621      	mov	r1, r4
 8018940:	4630      	mov	r0, r6
 8018942:	f000 fa23 	bl	8018d8c <__smakebuf_r>
 8018946:	89a2      	ldrh	r2, [r4, #12]
 8018948:	f012 0301 	ands.w	r3, r2, #1
 801894c:	d00c      	beq.n	8018968 <__swsetup_r+0xbc>
 801894e:	2300      	movs	r3, #0
 8018950:	60a3      	str	r3, [r4, #8]
 8018952:	6963      	ldr	r3, [r4, #20]
 8018954:	425b      	negs	r3, r3
 8018956:	61a3      	str	r3, [r4, #24]
 8018958:	6923      	ldr	r3, [r4, #16]
 801895a:	b953      	cbnz	r3, 8018972 <__swsetup_r+0xc6>
 801895c:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8018960:	f013 0080 	ands.w	r0, r3, #128	; 0x80
 8018964:	d1ba      	bne.n	80188dc <__swsetup_r+0x30>
 8018966:	bd70      	pop	{r4, r5, r6, pc}
 8018968:	0792      	lsls	r2, r2, #30
 801896a:	bf58      	it	pl
 801896c:	6963      	ldrpl	r3, [r4, #20]
 801896e:	60a3      	str	r3, [r4, #8]
 8018970:	e7f2      	b.n	8018958 <__swsetup_r+0xac>
 8018972:	2000      	movs	r0, #0
 8018974:	e7f7      	b.n	8018966 <__swsetup_r+0xba>
 8018976:	bf00      	nop
 8018978:	200000fc 	.word	0x200000fc
 801897c:	0801c4a8 	.word	0x0801c4a8
 8018980:	0801c4c8 	.word	0x0801c4c8
 8018984:	0801c488 	.word	0x0801c488

08018988 <__register_exitproc>:
 8018988:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 801898c:	4d2c      	ldr	r5, [pc, #176]	; (8018a40 <__register_exitproc+0xb8>)
 801898e:	682c      	ldr	r4, [r5, #0]
 8018990:	4607      	mov	r7, r0
 8018992:	460e      	mov	r6, r1
 8018994:	4691      	mov	r9, r2
 8018996:	4698      	mov	r8, r3
 8018998:	b934      	cbnz	r4, 80189a8 <__register_exitproc+0x20>
 801899a:	4b2a      	ldr	r3, [pc, #168]	; (8018a44 <__register_exitproc+0xbc>)
 801899c:	4c2a      	ldr	r4, [pc, #168]	; (8018a48 <__register_exitproc+0xc0>)
 801899e:	602c      	str	r4, [r5, #0]
 80189a0:	b113      	cbz	r3, 80189a8 <__register_exitproc+0x20>
 80189a2:	681b      	ldr	r3, [r3, #0]
 80189a4:	f8c4 3088 	str.w	r3, [r4, #136]	; 0x88
 80189a8:	6863      	ldr	r3, [r4, #4]
 80189aa:	2b1f      	cmp	r3, #31
 80189ac:	dd3d      	ble.n	8018a2a <__register_exitproc+0xa2>
 80189ae:	4b27      	ldr	r3, [pc, #156]	; (8018a4c <__register_exitproc+0xc4>)
 80189b0:	b91b      	cbnz	r3, 80189ba <__register_exitproc+0x32>
 80189b2:	f04f 30ff 	mov.w	r0, #4294967295
 80189b6:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80189ba:	208c      	movs	r0, #140	; 0x8c
 80189bc:	f7ff fb3c 	bl	8018038 <malloc>
 80189c0:	4604      	mov	r4, r0
 80189c2:	2800      	cmp	r0, #0
 80189c4:	d0f5      	beq.n	80189b2 <__register_exitproc+0x2a>
 80189c6:	2300      	movs	r3, #0
 80189c8:	682a      	ldr	r2, [r5, #0]
 80189ca:	6002      	str	r2, [r0, #0]
 80189cc:	6043      	str	r3, [r0, #4]
 80189ce:	6028      	str	r0, [r5, #0]
 80189d0:	f8c0 3088 	str.w	r3, [r0, #136]	; 0x88
 80189d4:	b30f      	cbz	r7, 8018a1a <__register_exitproc+0x92>
 80189d6:	f44f 7084 	mov.w	r0, #264	; 0x108
 80189da:	f7ff fb2d 	bl	8018038 <malloc>
 80189de:	2800      	cmp	r0, #0
 80189e0:	d0e7      	beq.n	80189b2 <__register_exitproc+0x2a>
 80189e2:	2300      	movs	r3, #0
 80189e4:	f8c0 3100 	str.w	r3, [r0, #256]	; 0x100
 80189e8:	f8c0 3104 	str.w	r3, [r0, #260]	; 0x104
 80189ec:	f8c4 0088 	str.w	r0, [r4, #136]	; 0x88
 80189f0:	6862      	ldr	r2, [r4, #4]
 80189f2:	f840 9022 	str.w	r9, [r0, r2, lsl #2]
 80189f6:	2301      	movs	r3, #1
 80189f8:	4093      	lsls	r3, r2
 80189fa:	eb00 0182 	add.w	r1, r0, r2, lsl #2
 80189fe:	f8d0 2100 	ldr.w	r2, [r0, #256]	; 0x100
 8018a02:	431a      	orrs	r2, r3
 8018a04:	2f02      	cmp	r7, #2
 8018a06:	f8c0 2100 	str.w	r2, [r0, #256]	; 0x100
 8018a0a:	f8c1 8080 	str.w	r8, [r1, #128]	; 0x80
 8018a0e:	bf02      	ittt	eq
 8018a10:	f8d0 2104 	ldreq.w	r2, [r0, #260]	; 0x104
 8018a14:	4313      	orreq	r3, r2
 8018a16:	f8c0 3104 	streq.w	r3, [r0, #260]	; 0x104
 8018a1a:	6863      	ldr	r3, [r4, #4]
 8018a1c:	1c5a      	adds	r2, r3, #1
 8018a1e:	3302      	adds	r3, #2
 8018a20:	6062      	str	r2, [r4, #4]
 8018a22:	2000      	movs	r0, #0
 8018a24:	f844 6023 	str.w	r6, [r4, r3, lsl #2]
 8018a28:	e7c5      	b.n	80189b6 <__register_exitproc+0x2e>
 8018a2a:	2f00      	cmp	r7, #0
 8018a2c:	d0f5      	beq.n	8018a1a <__register_exitproc+0x92>
 8018a2e:	f8d4 0088 	ldr.w	r0, [r4, #136]	; 0x88
 8018a32:	2800      	cmp	r0, #0
 8018a34:	d1dc      	bne.n	80189f0 <__register_exitproc+0x68>
 8018a36:	4b05      	ldr	r3, [pc, #20]	; (8018a4c <__register_exitproc+0xc4>)
 8018a38:	2b00      	cmp	r3, #0
 8018a3a:	d0ba      	beq.n	80189b2 <__register_exitproc+0x2a>
 8018a3c:	e7cb      	b.n	80189d6 <__register_exitproc+0x4e>
 8018a3e:	bf00      	nop
 8018a40:	20012430 	.word	0x20012430
 8018a44:	0801c484 	.word	0x0801c484
 8018a48:	200123a4 	.word	0x200123a4
 8018a4c:	08018039 	.word	0x08018039

08018a50 <__sflush_r>:
 8018a50:	898a      	ldrh	r2, [r1, #12]
 8018a52:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8018a56:	4605      	mov	r5, r0
 8018a58:	0710      	lsls	r0, r2, #28
 8018a5a:	460c      	mov	r4, r1
 8018a5c:	d458      	bmi.n	8018b10 <__sflush_r+0xc0>
 8018a5e:	684b      	ldr	r3, [r1, #4]
 8018a60:	2b00      	cmp	r3, #0
 8018a62:	dc05      	bgt.n	8018a70 <__sflush_r+0x20>
 8018a64:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 8018a66:	2b00      	cmp	r3, #0
 8018a68:	dc02      	bgt.n	8018a70 <__sflush_r+0x20>
 8018a6a:	2000      	movs	r0, #0
 8018a6c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8018a70:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8018a72:	2e00      	cmp	r6, #0
 8018a74:	d0f9      	beq.n	8018a6a <__sflush_r+0x1a>
 8018a76:	2300      	movs	r3, #0
 8018a78:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 8018a7c:	682f      	ldr	r7, [r5, #0]
 8018a7e:	6a21      	ldr	r1, [r4, #32]
 8018a80:	602b      	str	r3, [r5, #0]
 8018a82:	d032      	beq.n	8018aea <__sflush_r+0x9a>
 8018a84:	6d60      	ldr	r0, [r4, #84]	; 0x54
 8018a86:	89a3      	ldrh	r3, [r4, #12]
 8018a88:	075a      	lsls	r2, r3, #29
 8018a8a:	d505      	bpl.n	8018a98 <__sflush_r+0x48>
 8018a8c:	6863      	ldr	r3, [r4, #4]
 8018a8e:	1ac0      	subs	r0, r0, r3
 8018a90:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8018a92:	b10b      	cbz	r3, 8018a98 <__sflush_r+0x48>
 8018a94:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8018a96:	1ac0      	subs	r0, r0, r3
 8018a98:	2300      	movs	r3, #0
 8018a9a:	4602      	mov	r2, r0
 8018a9c:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8018a9e:	6a21      	ldr	r1, [r4, #32]
 8018aa0:	4628      	mov	r0, r5
 8018aa2:	47b0      	blx	r6
 8018aa4:	1c43      	adds	r3, r0, #1
 8018aa6:	89a3      	ldrh	r3, [r4, #12]
 8018aa8:	d106      	bne.n	8018ab8 <__sflush_r+0x68>
 8018aaa:	6829      	ldr	r1, [r5, #0]
 8018aac:	291d      	cmp	r1, #29
 8018aae:	d848      	bhi.n	8018b42 <__sflush_r+0xf2>
 8018ab0:	4a29      	ldr	r2, [pc, #164]	; (8018b58 <__sflush_r+0x108>)
 8018ab2:	40ca      	lsrs	r2, r1
 8018ab4:	07d6      	lsls	r6, r2, #31
 8018ab6:	d544      	bpl.n	8018b42 <__sflush_r+0xf2>
 8018ab8:	2200      	movs	r2, #0
 8018aba:	6062      	str	r2, [r4, #4]
 8018abc:	04d9      	lsls	r1, r3, #19
 8018abe:	6922      	ldr	r2, [r4, #16]
 8018ac0:	6022      	str	r2, [r4, #0]
 8018ac2:	d504      	bpl.n	8018ace <__sflush_r+0x7e>
 8018ac4:	1c42      	adds	r2, r0, #1
 8018ac6:	d101      	bne.n	8018acc <__sflush_r+0x7c>
 8018ac8:	682b      	ldr	r3, [r5, #0]
 8018aca:	b903      	cbnz	r3, 8018ace <__sflush_r+0x7e>
 8018acc:	6560      	str	r0, [r4, #84]	; 0x54
 8018ace:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8018ad0:	602f      	str	r7, [r5, #0]
 8018ad2:	2900      	cmp	r1, #0
 8018ad4:	d0c9      	beq.n	8018a6a <__sflush_r+0x1a>
 8018ad6:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8018ada:	4299      	cmp	r1, r3
 8018adc:	d002      	beq.n	8018ae4 <__sflush_r+0x94>
 8018ade:	4628      	mov	r0, r5
 8018ae0:	f7ff face 	bl	8018080 <_free_r>
 8018ae4:	2000      	movs	r0, #0
 8018ae6:	6360      	str	r0, [r4, #52]	; 0x34
 8018ae8:	e7c0      	b.n	8018a6c <__sflush_r+0x1c>
 8018aea:	2301      	movs	r3, #1
 8018aec:	4628      	mov	r0, r5
 8018aee:	47b0      	blx	r6
 8018af0:	1c41      	adds	r1, r0, #1
 8018af2:	d1c8      	bne.n	8018a86 <__sflush_r+0x36>
 8018af4:	682b      	ldr	r3, [r5, #0]
 8018af6:	2b00      	cmp	r3, #0
 8018af8:	d0c5      	beq.n	8018a86 <__sflush_r+0x36>
 8018afa:	2b1d      	cmp	r3, #29
 8018afc:	d001      	beq.n	8018b02 <__sflush_r+0xb2>
 8018afe:	2b16      	cmp	r3, #22
 8018b00:	d101      	bne.n	8018b06 <__sflush_r+0xb6>
 8018b02:	602f      	str	r7, [r5, #0]
 8018b04:	e7b1      	b.n	8018a6a <__sflush_r+0x1a>
 8018b06:	89a3      	ldrh	r3, [r4, #12]
 8018b08:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8018b0c:	81a3      	strh	r3, [r4, #12]
 8018b0e:	e7ad      	b.n	8018a6c <__sflush_r+0x1c>
 8018b10:	690f      	ldr	r7, [r1, #16]
 8018b12:	2f00      	cmp	r7, #0
 8018b14:	d0a9      	beq.n	8018a6a <__sflush_r+0x1a>
 8018b16:	0793      	lsls	r3, r2, #30
 8018b18:	680e      	ldr	r6, [r1, #0]
 8018b1a:	bf08      	it	eq
 8018b1c:	694b      	ldreq	r3, [r1, #20]
 8018b1e:	600f      	str	r7, [r1, #0]
 8018b20:	bf18      	it	ne
 8018b22:	2300      	movne	r3, #0
 8018b24:	eba6 0807 	sub.w	r8, r6, r7
 8018b28:	608b      	str	r3, [r1, #8]
 8018b2a:	f1b8 0f00 	cmp.w	r8, #0
 8018b2e:	dd9c      	ble.n	8018a6a <__sflush_r+0x1a>
 8018b30:	4643      	mov	r3, r8
 8018b32:	463a      	mov	r2, r7
 8018b34:	6a21      	ldr	r1, [r4, #32]
 8018b36:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 8018b38:	4628      	mov	r0, r5
 8018b3a:	47b0      	blx	r6
 8018b3c:	2800      	cmp	r0, #0
 8018b3e:	dc06      	bgt.n	8018b4e <__sflush_r+0xfe>
 8018b40:	89a3      	ldrh	r3, [r4, #12]
 8018b42:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8018b46:	81a3      	strh	r3, [r4, #12]
 8018b48:	f04f 30ff 	mov.w	r0, #4294967295
 8018b4c:	e78e      	b.n	8018a6c <__sflush_r+0x1c>
 8018b4e:	4407      	add	r7, r0
 8018b50:	eba8 0800 	sub.w	r8, r8, r0
 8018b54:	e7e9      	b.n	8018b2a <__sflush_r+0xda>
 8018b56:	bf00      	nop
 8018b58:	20400001 	.word	0x20400001

08018b5c <_fflush_r>:
 8018b5c:	b538      	push	{r3, r4, r5, lr}
 8018b5e:	690b      	ldr	r3, [r1, #16]
 8018b60:	4605      	mov	r5, r0
 8018b62:	460c      	mov	r4, r1
 8018b64:	b1db      	cbz	r3, 8018b9e <_fflush_r+0x42>
 8018b66:	b118      	cbz	r0, 8018b70 <_fflush_r+0x14>
 8018b68:	6983      	ldr	r3, [r0, #24]
 8018b6a:	b90b      	cbnz	r3, 8018b70 <_fflush_r+0x14>
 8018b6c:	f000 f860 	bl	8018c30 <__sinit>
 8018b70:	4b0c      	ldr	r3, [pc, #48]	; (8018ba4 <_fflush_r+0x48>)
 8018b72:	429c      	cmp	r4, r3
 8018b74:	d109      	bne.n	8018b8a <_fflush_r+0x2e>
 8018b76:	686c      	ldr	r4, [r5, #4]
 8018b78:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8018b7c:	b17b      	cbz	r3, 8018b9e <_fflush_r+0x42>
 8018b7e:	4621      	mov	r1, r4
 8018b80:	4628      	mov	r0, r5
 8018b82:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8018b86:	f7ff bf63 	b.w	8018a50 <__sflush_r>
 8018b8a:	4b07      	ldr	r3, [pc, #28]	; (8018ba8 <_fflush_r+0x4c>)
 8018b8c:	429c      	cmp	r4, r3
 8018b8e:	d101      	bne.n	8018b94 <_fflush_r+0x38>
 8018b90:	68ac      	ldr	r4, [r5, #8]
 8018b92:	e7f1      	b.n	8018b78 <_fflush_r+0x1c>
 8018b94:	4b05      	ldr	r3, [pc, #20]	; (8018bac <_fflush_r+0x50>)
 8018b96:	429c      	cmp	r4, r3
 8018b98:	bf08      	it	eq
 8018b9a:	68ec      	ldreq	r4, [r5, #12]
 8018b9c:	e7ec      	b.n	8018b78 <_fflush_r+0x1c>
 8018b9e:	2000      	movs	r0, #0
 8018ba0:	bd38      	pop	{r3, r4, r5, pc}
 8018ba2:	bf00      	nop
 8018ba4:	0801c4a8 	.word	0x0801c4a8
 8018ba8:	0801c4c8 	.word	0x0801c4c8
 8018bac:	0801c488 	.word	0x0801c488

08018bb0 <std>:
 8018bb0:	2300      	movs	r3, #0
 8018bb2:	b510      	push	{r4, lr}
 8018bb4:	4604      	mov	r4, r0
 8018bb6:	e9c0 3300 	strd	r3, r3, [r0]
 8018bba:	6083      	str	r3, [r0, #8]
 8018bbc:	8181      	strh	r1, [r0, #12]
 8018bbe:	6643      	str	r3, [r0, #100]	; 0x64
 8018bc0:	81c2      	strh	r2, [r0, #14]
 8018bc2:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8018bc6:	6183      	str	r3, [r0, #24]
 8018bc8:	4619      	mov	r1, r3
 8018bca:	2208      	movs	r2, #8
 8018bcc:	305c      	adds	r0, #92	; 0x5c
 8018bce:	f7ff fa4e 	bl	801806e <memset>
 8018bd2:	4b05      	ldr	r3, [pc, #20]	; (8018be8 <std+0x38>)
 8018bd4:	6263      	str	r3, [r4, #36]	; 0x24
 8018bd6:	4b05      	ldr	r3, [pc, #20]	; (8018bec <std+0x3c>)
 8018bd8:	62a3      	str	r3, [r4, #40]	; 0x28
 8018bda:	4b05      	ldr	r3, [pc, #20]	; (8018bf0 <std+0x40>)
 8018bdc:	62e3      	str	r3, [r4, #44]	; 0x2c
 8018bde:	4b05      	ldr	r3, [pc, #20]	; (8018bf4 <std+0x44>)
 8018be0:	6224      	str	r4, [r4, #32]
 8018be2:	6323      	str	r3, [r4, #48]	; 0x30
 8018be4:	bd10      	pop	{r4, pc}
 8018be6:	bf00      	nop
 8018be8:	08018e11 	.word	0x08018e11
 8018bec:	08018e33 	.word	0x08018e33
 8018bf0:	08018e6b 	.word	0x08018e6b
 8018bf4:	08018e8f 	.word	0x08018e8f

08018bf8 <_cleanup_r>:
 8018bf8:	4901      	ldr	r1, [pc, #4]	; (8018c00 <_cleanup_r+0x8>)
 8018bfa:	f000 b885 	b.w	8018d08 <_fwalk_reent>
 8018bfe:	bf00      	nop
 8018c00:	08018b5d 	.word	0x08018b5d

08018c04 <__sfmoreglue>:
 8018c04:	b570      	push	{r4, r5, r6, lr}
 8018c06:	1e4a      	subs	r2, r1, #1
 8018c08:	2568      	movs	r5, #104	; 0x68
 8018c0a:	4355      	muls	r5, r2
 8018c0c:	460e      	mov	r6, r1
 8018c0e:	f105 0174 	add.w	r1, r5, #116	; 0x74
 8018c12:	f7ff fa83 	bl	801811c <_malloc_r>
 8018c16:	4604      	mov	r4, r0
 8018c18:	b140      	cbz	r0, 8018c2c <__sfmoreglue+0x28>
 8018c1a:	2100      	movs	r1, #0
 8018c1c:	e9c0 1600 	strd	r1, r6, [r0]
 8018c20:	300c      	adds	r0, #12
 8018c22:	60a0      	str	r0, [r4, #8]
 8018c24:	f105 0268 	add.w	r2, r5, #104	; 0x68
 8018c28:	f7ff fa21 	bl	801806e <memset>
 8018c2c:	4620      	mov	r0, r4
 8018c2e:	bd70      	pop	{r4, r5, r6, pc}

08018c30 <__sinit>:
 8018c30:	6983      	ldr	r3, [r0, #24]
 8018c32:	b510      	push	{r4, lr}
 8018c34:	4604      	mov	r4, r0
 8018c36:	bb33      	cbnz	r3, 8018c86 <__sinit+0x56>
 8018c38:	e9c0 3312 	strd	r3, r3, [r0, #72]	; 0x48
 8018c3c:	6503      	str	r3, [r0, #80]	; 0x50
 8018c3e:	4b12      	ldr	r3, [pc, #72]	; (8018c88 <__sinit+0x58>)
 8018c40:	4a12      	ldr	r2, [pc, #72]	; (8018c8c <__sinit+0x5c>)
 8018c42:	681b      	ldr	r3, [r3, #0]
 8018c44:	6282      	str	r2, [r0, #40]	; 0x28
 8018c46:	4298      	cmp	r0, r3
 8018c48:	bf04      	itt	eq
 8018c4a:	2301      	moveq	r3, #1
 8018c4c:	6183      	streq	r3, [r0, #24]
 8018c4e:	f000 f81f 	bl	8018c90 <__sfp>
 8018c52:	6060      	str	r0, [r4, #4]
 8018c54:	4620      	mov	r0, r4
 8018c56:	f000 f81b 	bl	8018c90 <__sfp>
 8018c5a:	60a0      	str	r0, [r4, #8]
 8018c5c:	4620      	mov	r0, r4
 8018c5e:	f000 f817 	bl	8018c90 <__sfp>
 8018c62:	2200      	movs	r2, #0
 8018c64:	60e0      	str	r0, [r4, #12]
 8018c66:	2104      	movs	r1, #4
 8018c68:	6860      	ldr	r0, [r4, #4]
 8018c6a:	f7ff ffa1 	bl	8018bb0 <std>
 8018c6e:	2201      	movs	r2, #1
 8018c70:	2109      	movs	r1, #9
 8018c72:	68a0      	ldr	r0, [r4, #8]
 8018c74:	f7ff ff9c 	bl	8018bb0 <std>
 8018c78:	2202      	movs	r2, #2
 8018c7a:	2112      	movs	r1, #18
 8018c7c:	68e0      	ldr	r0, [r4, #12]
 8018c7e:	f7ff ff97 	bl	8018bb0 <std>
 8018c82:	2301      	movs	r3, #1
 8018c84:	61a3      	str	r3, [r4, #24]
 8018c86:	bd10      	pop	{r4, pc}
 8018c88:	0801c44c 	.word	0x0801c44c
 8018c8c:	08018bf9 	.word	0x08018bf9

08018c90 <__sfp>:
 8018c90:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8018c92:	4b1b      	ldr	r3, [pc, #108]	; (8018d00 <__sfp+0x70>)
 8018c94:	681e      	ldr	r6, [r3, #0]
 8018c96:	69b3      	ldr	r3, [r6, #24]
 8018c98:	4607      	mov	r7, r0
 8018c9a:	b913      	cbnz	r3, 8018ca2 <__sfp+0x12>
 8018c9c:	4630      	mov	r0, r6
 8018c9e:	f7ff ffc7 	bl	8018c30 <__sinit>
 8018ca2:	3648      	adds	r6, #72	; 0x48
 8018ca4:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 8018ca8:	3b01      	subs	r3, #1
 8018caa:	d503      	bpl.n	8018cb4 <__sfp+0x24>
 8018cac:	6833      	ldr	r3, [r6, #0]
 8018cae:	b133      	cbz	r3, 8018cbe <__sfp+0x2e>
 8018cb0:	6836      	ldr	r6, [r6, #0]
 8018cb2:	e7f7      	b.n	8018ca4 <__sfp+0x14>
 8018cb4:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 8018cb8:	b16d      	cbz	r5, 8018cd6 <__sfp+0x46>
 8018cba:	3468      	adds	r4, #104	; 0x68
 8018cbc:	e7f4      	b.n	8018ca8 <__sfp+0x18>
 8018cbe:	2104      	movs	r1, #4
 8018cc0:	4638      	mov	r0, r7
 8018cc2:	f7ff ff9f 	bl	8018c04 <__sfmoreglue>
 8018cc6:	6030      	str	r0, [r6, #0]
 8018cc8:	2800      	cmp	r0, #0
 8018cca:	d1f1      	bne.n	8018cb0 <__sfp+0x20>
 8018ccc:	230c      	movs	r3, #12
 8018cce:	603b      	str	r3, [r7, #0]
 8018cd0:	4604      	mov	r4, r0
 8018cd2:	4620      	mov	r0, r4
 8018cd4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8018cd6:	4b0b      	ldr	r3, [pc, #44]	; (8018d04 <__sfp+0x74>)
 8018cd8:	6665      	str	r5, [r4, #100]	; 0x64
 8018cda:	e9c4 5500 	strd	r5, r5, [r4]
 8018cde:	60a5      	str	r5, [r4, #8]
 8018ce0:	e9c4 3503 	strd	r3, r5, [r4, #12]
 8018ce4:	e9c4 5505 	strd	r5, r5, [r4, #20]
 8018ce8:	2208      	movs	r2, #8
 8018cea:	4629      	mov	r1, r5
 8018cec:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 8018cf0:	f7ff f9bd 	bl	801806e <memset>
 8018cf4:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 8018cf8:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 8018cfc:	e7e9      	b.n	8018cd2 <__sfp+0x42>
 8018cfe:	bf00      	nop
 8018d00:	0801c44c 	.word	0x0801c44c
 8018d04:	ffff0001 	.word	0xffff0001

08018d08 <_fwalk_reent>:
 8018d08:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8018d0c:	4680      	mov	r8, r0
 8018d0e:	4689      	mov	r9, r1
 8018d10:	f100 0448 	add.w	r4, r0, #72	; 0x48
 8018d14:	2600      	movs	r6, #0
 8018d16:	b914      	cbnz	r4, 8018d1e <_fwalk_reent+0x16>
 8018d18:	4630      	mov	r0, r6
 8018d1a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8018d1e:	e9d4 7501 	ldrd	r7, r5, [r4, #4]
 8018d22:	3f01      	subs	r7, #1
 8018d24:	d501      	bpl.n	8018d2a <_fwalk_reent+0x22>
 8018d26:	6824      	ldr	r4, [r4, #0]
 8018d28:	e7f5      	b.n	8018d16 <_fwalk_reent+0xe>
 8018d2a:	89ab      	ldrh	r3, [r5, #12]
 8018d2c:	2b01      	cmp	r3, #1
 8018d2e:	d907      	bls.n	8018d40 <_fwalk_reent+0x38>
 8018d30:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8018d34:	3301      	adds	r3, #1
 8018d36:	d003      	beq.n	8018d40 <_fwalk_reent+0x38>
 8018d38:	4629      	mov	r1, r5
 8018d3a:	4640      	mov	r0, r8
 8018d3c:	47c8      	blx	r9
 8018d3e:	4306      	orrs	r6, r0
 8018d40:	3568      	adds	r5, #104	; 0x68
 8018d42:	e7ee      	b.n	8018d22 <_fwalk_reent+0x1a>

08018d44 <__swhatbuf_r>:
 8018d44:	b570      	push	{r4, r5, r6, lr}
 8018d46:	460e      	mov	r6, r1
 8018d48:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8018d4c:	2900      	cmp	r1, #0
 8018d4e:	b096      	sub	sp, #88	; 0x58
 8018d50:	4614      	mov	r4, r2
 8018d52:	461d      	mov	r5, r3
 8018d54:	da07      	bge.n	8018d66 <__swhatbuf_r+0x22>
 8018d56:	2300      	movs	r3, #0
 8018d58:	602b      	str	r3, [r5, #0]
 8018d5a:	89b3      	ldrh	r3, [r6, #12]
 8018d5c:	061a      	lsls	r2, r3, #24
 8018d5e:	d410      	bmi.n	8018d82 <__swhatbuf_r+0x3e>
 8018d60:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8018d64:	e00e      	b.n	8018d84 <__swhatbuf_r+0x40>
 8018d66:	466a      	mov	r2, sp
 8018d68:	f000 f8b8 	bl	8018edc <_fstat_r>
 8018d6c:	2800      	cmp	r0, #0
 8018d6e:	dbf2      	blt.n	8018d56 <__swhatbuf_r+0x12>
 8018d70:	9a01      	ldr	r2, [sp, #4]
 8018d72:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 8018d76:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 8018d7a:	425a      	negs	r2, r3
 8018d7c:	415a      	adcs	r2, r3
 8018d7e:	602a      	str	r2, [r5, #0]
 8018d80:	e7ee      	b.n	8018d60 <__swhatbuf_r+0x1c>
 8018d82:	2340      	movs	r3, #64	; 0x40
 8018d84:	2000      	movs	r0, #0
 8018d86:	6023      	str	r3, [r4, #0]
 8018d88:	b016      	add	sp, #88	; 0x58
 8018d8a:	bd70      	pop	{r4, r5, r6, pc}

08018d8c <__smakebuf_r>:
 8018d8c:	898b      	ldrh	r3, [r1, #12]
 8018d8e:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8018d90:	079d      	lsls	r5, r3, #30
 8018d92:	4606      	mov	r6, r0
 8018d94:	460c      	mov	r4, r1
 8018d96:	d507      	bpl.n	8018da8 <__smakebuf_r+0x1c>
 8018d98:	f104 0347 	add.w	r3, r4, #71	; 0x47
 8018d9c:	6023      	str	r3, [r4, #0]
 8018d9e:	6123      	str	r3, [r4, #16]
 8018da0:	2301      	movs	r3, #1
 8018da2:	6163      	str	r3, [r4, #20]
 8018da4:	b002      	add	sp, #8
 8018da6:	bd70      	pop	{r4, r5, r6, pc}
 8018da8:	ab01      	add	r3, sp, #4
 8018daa:	466a      	mov	r2, sp
 8018dac:	f7ff ffca 	bl	8018d44 <__swhatbuf_r>
 8018db0:	9900      	ldr	r1, [sp, #0]
 8018db2:	4605      	mov	r5, r0
 8018db4:	4630      	mov	r0, r6
 8018db6:	f7ff f9b1 	bl	801811c <_malloc_r>
 8018dba:	b948      	cbnz	r0, 8018dd0 <__smakebuf_r+0x44>
 8018dbc:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8018dc0:	059a      	lsls	r2, r3, #22
 8018dc2:	d4ef      	bmi.n	8018da4 <__smakebuf_r+0x18>
 8018dc4:	f023 0303 	bic.w	r3, r3, #3
 8018dc8:	f043 0302 	orr.w	r3, r3, #2
 8018dcc:	81a3      	strh	r3, [r4, #12]
 8018dce:	e7e3      	b.n	8018d98 <__smakebuf_r+0xc>
 8018dd0:	4b0d      	ldr	r3, [pc, #52]	; (8018e08 <__smakebuf_r+0x7c>)
 8018dd2:	62b3      	str	r3, [r6, #40]	; 0x28
 8018dd4:	89a3      	ldrh	r3, [r4, #12]
 8018dd6:	6020      	str	r0, [r4, #0]
 8018dd8:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8018ddc:	81a3      	strh	r3, [r4, #12]
 8018dde:	9b00      	ldr	r3, [sp, #0]
 8018de0:	6163      	str	r3, [r4, #20]
 8018de2:	9b01      	ldr	r3, [sp, #4]
 8018de4:	6120      	str	r0, [r4, #16]
 8018de6:	b15b      	cbz	r3, 8018e00 <__smakebuf_r+0x74>
 8018de8:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8018dec:	4630      	mov	r0, r6
 8018dee:	f000 f887 	bl	8018f00 <_isatty_r>
 8018df2:	b128      	cbz	r0, 8018e00 <__smakebuf_r+0x74>
 8018df4:	89a3      	ldrh	r3, [r4, #12]
 8018df6:	f023 0303 	bic.w	r3, r3, #3
 8018dfa:	f043 0301 	orr.w	r3, r3, #1
 8018dfe:	81a3      	strh	r3, [r4, #12]
 8018e00:	89a3      	ldrh	r3, [r4, #12]
 8018e02:	431d      	orrs	r5, r3
 8018e04:	81a5      	strh	r5, [r4, #12]
 8018e06:	e7cd      	b.n	8018da4 <__smakebuf_r+0x18>
 8018e08:	08018bf9 	.word	0x08018bf9

08018e0c <__malloc_lock>:
 8018e0c:	4770      	bx	lr

08018e0e <__malloc_unlock>:
 8018e0e:	4770      	bx	lr

08018e10 <__sread>:
 8018e10:	b510      	push	{r4, lr}
 8018e12:	460c      	mov	r4, r1
 8018e14:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8018e18:	f000 f894 	bl	8018f44 <_read_r>
 8018e1c:	2800      	cmp	r0, #0
 8018e1e:	bfab      	itete	ge
 8018e20:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 8018e22:	89a3      	ldrhlt	r3, [r4, #12]
 8018e24:	181b      	addge	r3, r3, r0
 8018e26:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 8018e2a:	bfac      	ite	ge
 8018e2c:	6563      	strge	r3, [r4, #84]	; 0x54
 8018e2e:	81a3      	strhlt	r3, [r4, #12]
 8018e30:	bd10      	pop	{r4, pc}

08018e32 <__swrite>:
 8018e32:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8018e36:	461f      	mov	r7, r3
 8018e38:	898b      	ldrh	r3, [r1, #12]
 8018e3a:	05db      	lsls	r3, r3, #23
 8018e3c:	4605      	mov	r5, r0
 8018e3e:	460c      	mov	r4, r1
 8018e40:	4616      	mov	r6, r2
 8018e42:	d505      	bpl.n	8018e50 <__swrite+0x1e>
 8018e44:	2302      	movs	r3, #2
 8018e46:	2200      	movs	r2, #0
 8018e48:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8018e4c:	f000 f868 	bl	8018f20 <_lseek_r>
 8018e50:	89a3      	ldrh	r3, [r4, #12]
 8018e52:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8018e56:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8018e5a:	81a3      	strh	r3, [r4, #12]
 8018e5c:	4632      	mov	r2, r6
 8018e5e:	463b      	mov	r3, r7
 8018e60:	4628      	mov	r0, r5
 8018e62:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8018e66:	f000 b817 	b.w	8018e98 <_write_r>

08018e6a <__sseek>:
 8018e6a:	b510      	push	{r4, lr}
 8018e6c:	460c      	mov	r4, r1
 8018e6e:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8018e72:	f000 f855 	bl	8018f20 <_lseek_r>
 8018e76:	1c43      	adds	r3, r0, #1
 8018e78:	89a3      	ldrh	r3, [r4, #12]
 8018e7a:	bf15      	itete	ne
 8018e7c:	6560      	strne	r0, [r4, #84]	; 0x54
 8018e7e:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 8018e82:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 8018e86:	81a3      	strheq	r3, [r4, #12]
 8018e88:	bf18      	it	ne
 8018e8a:	81a3      	strhne	r3, [r4, #12]
 8018e8c:	bd10      	pop	{r4, pc}

08018e8e <__sclose>:
 8018e8e:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8018e92:	f000 b813 	b.w	8018ebc <_close_r>
	...

08018e98 <_write_r>:
 8018e98:	b538      	push	{r3, r4, r5, lr}
 8018e9a:	4c07      	ldr	r4, [pc, #28]	; (8018eb8 <_write_r+0x20>)
 8018e9c:	4605      	mov	r5, r0
 8018e9e:	4608      	mov	r0, r1
 8018ea0:	4611      	mov	r1, r2
 8018ea2:	2200      	movs	r2, #0
 8018ea4:	6022      	str	r2, [r4, #0]
 8018ea6:	461a      	mov	r2, r3
 8018ea8:	f7e8 ff3a 	bl	8001d20 <_write>
 8018eac:	1c43      	adds	r3, r0, #1
 8018eae:	d102      	bne.n	8018eb6 <_write_r+0x1e>
 8018eb0:	6823      	ldr	r3, [r4, #0]
 8018eb2:	b103      	cbz	r3, 8018eb6 <_write_r+0x1e>
 8018eb4:	602b      	str	r3, [r5, #0]
 8018eb6:	bd38      	pop	{r3, r4, r5, pc}
 8018eb8:	2001268c 	.word	0x2001268c

08018ebc <_close_r>:
 8018ebc:	b538      	push	{r3, r4, r5, lr}
 8018ebe:	4c06      	ldr	r4, [pc, #24]	; (8018ed8 <_close_r+0x1c>)
 8018ec0:	2300      	movs	r3, #0
 8018ec2:	4605      	mov	r5, r0
 8018ec4:	4608      	mov	r0, r1
 8018ec6:	6023      	str	r3, [r4, #0]
 8018ec8:	f7e8 ff38 	bl	8001d3c <_close>
 8018ecc:	1c43      	adds	r3, r0, #1
 8018ece:	d102      	bne.n	8018ed6 <_close_r+0x1a>
 8018ed0:	6823      	ldr	r3, [r4, #0]
 8018ed2:	b103      	cbz	r3, 8018ed6 <_close_r+0x1a>
 8018ed4:	602b      	str	r3, [r5, #0]
 8018ed6:	bd38      	pop	{r3, r4, r5, pc}
 8018ed8:	2001268c 	.word	0x2001268c

08018edc <_fstat_r>:
 8018edc:	b538      	push	{r3, r4, r5, lr}
 8018ede:	4c07      	ldr	r4, [pc, #28]	; (8018efc <_fstat_r+0x20>)
 8018ee0:	2300      	movs	r3, #0
 8018ee2:	4605      	mov	r5, r0
 8018ee4:	4608      	mov	r0, r1
 8018ee6:	4611      	mov	r1, r2
 8018ee8:	6023      	str	r3, [r4, #0]
 8018eea:	f7e8 ff2a 	bl	8001d42 <_fstat>
 8018eee:	1c43      	adds	r3, r0, #1
 8018ef0:	d102      	bne.n	8018ef8 <_fstat_r+0x1c>
 8018ef2:	6823      	ldr	r3, [r4, #0]
 8018ef4:	b103      	cbz	r3, 8018ef8 <_fstat_r+0x1c>
 8018ef6:	602b      	str	r3, [r5, #0]
 8018ef8:	bd38      	pop	{r3, r4, r5, pc}
 8018efa:	bf00      	nop
 8018efc:	2001268c 	.word	0x2001268c

08018f00 <_isatty_r>:
 8018f00:	b538      	push	{r3, r4, r5, lr}
 8018f02:	4c06      	ldr	r4, [pc, #24]	; (8018f1c <_isatty_r+0x1c>)
 8018f04:	2300      	movs	r3, #0
 8018f06:	4605      	mov	r5, r0
 8018f08:	4608      	mov	r0, r1
 8018f0a:	6023      	str	r3, [r4, #0]
 8018f0c:	f7e8 ff1e 	bl	8001d4c <_isatty>
 8018f10:	1c43      	adds	r3, r0, #1
 8018f12:	d102      	bne.n	8018f1a <_isatty_r+0x1a>
 8018f14:	6823      	ldr	r3, [r4, #0]
 8018f16:	b103      	cbz	r3, 8018f1a <_isatty_r+0x1a>
 8018f18:	602b      	str	r3, [r5, #0]
 8018f1a:	bd38      	pop	{r3, r4, r5, pc}
 8018f1c:	2001268c 	.word	0x2001268c

08018f20 <_lseek_r>:
 8018f20:	b538      	push	{r3, r4, r5, lr}
 8018f22:	4c07      	ldr	r4, [pc, #28]	; (8018f40 <_lseek_r+0x20>)
 8018f24:	4605      	mov	r5, r0
 8018f26:	4608      	mov	r0, r1
 8018f28:	4611      	mov	r1, r2
 8018f2a:	2200      	movs	r2, #0
 8018f2c:	6022      	str	r2, [r4, #0]
 8018f2e:	461a      	mov	r2, r3
 8018f30:	f7e8 ff0e 	bl	8001d50 <_lseek>
 8018f34:	1c43      	adds	r3, r0, #1
 8018f36:	d102      	bne.n	8018f3e <_lseek_r+0x1e>
 8018f38:	6823      	ldr	r3, [r4, #0]
 8018f3a:	b103      	cbz	r3, 8018f3e <_lseek_r+0x1e>
 8018f3c:	602b      	str	r3, [r5, #0]
 8018f3e:	bd38      	pop	{r3, r4, r5, pc}
 8018f40:	2001268c 	.word	0x2001268c

08018f44 <_read_r>:
 8018f44:	b538      	push	{r3, r4, r5, lr}
 8018f46:	4c07      	ldr	r4, [pc, #28]	; (8018f64 <_read_r+0x20>)
 8018f48:	4605      	mov	r5, r0
 8018f4a:	4608      	mov	r0, r1
 8018f4c:	4611      	mov	r1, r2
 8018f4e:	2200      	movs	r2, #0
 8018f50:	6022      	str	r2, [r4, #0]
 8018f52:	461a      	mov	r2, r3
 8018f54:	f7e8 fed6 	bl	8001d04 <_read>
 8018f58:	1c43      	adds	r3, r0, #1
 8018f5a:	d102      	bne.n	8018f62 <_read_r+0x1e>
 8018f5c:	6823      	ldr	r3, [r4, #0]
 8018f5e:	b103      	cbz	r3, 8018f62 <_read_r+0x1e>
 8018f60:	602b      	str	r3, [r5, #0]
 8018f62:	bd38      	pop	{r3, r4, r5, pc}
 8018f64:	2001268c 	.word	0x2001268c

08018f68 <_init>:
 8018f68:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8018f6a:	bf00      	nop
 8018f6c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8018f6e:	bc08      	pop	{r3}
 8018f70:	469e      	mov	lr, r3
 8018f72:	4770      	bx	lr

08018f74 <_fini>:
 8018f74:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8018f76:	bf00      	nop
 8018f78:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8018f7a:	bc08      	pop	{r3}
 8018f7c:	469e      	mov	lr, r3
 8018f7e:	4770      	bx	lr
