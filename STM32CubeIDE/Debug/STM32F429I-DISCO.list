
STM32F429I-DISCO.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001ac  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0001a280  080001b0  080001b0  000101b0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00003570  0801a430  0801a430  0002a430  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 FontFlashSection 0000079a  0801d9a0  0801d9a0  0002d9a0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 FontSearchFlashSection 0000000c  0801e13c  0801e13c  0002e13c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 TextFlashSection 0000005c  0801e148  0801e148  0002e148  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  6 ExtFlashSection 000394e0  0801e1a4  0801e1a4  0002e1a4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .ARM.extab    00000000  08057684  08057684  00070170  2**0
                  CONTENTS
  8 .ARM          00000008  08057684  08057684  00067684  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  9 .preinit_array 00000000  0805768c  0805768c  00070170  2**0
                  CONTENTS, ALLOC, LOAD, DATA
 10 .init_array   00000014  0805768c  0805768c  0006768c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 11 .fini_array   00000008  080576a0  080576a0  000676a0  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 12 .data         00000170  20000000  080576a8  00070000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 13 .bss          00012810  20000170  08057818  00070170  2**2
                  ALLOC
 14 ._user_heap_stack 00001400  20012980  08057818  00072980  2**0
                  ALLOC
 15 .ARM.attributes 00000030  00000000  00000000  00070170  2**0
                  CONTENTS, READONLY
 16 TouchGFX_Framebuffer 0004b000  d0000000  d0000000  00080000  2**2
                  ALLOC
 17 .debug_line   0002d7f0  00000000  00000000  000701a0  2**0
                  CONTENTS, READONLY, DEBUGGING
 18 .debug_info   0008b3f8  00000000  00000000  0009d990  2**0
                  CONTENTS, READONLY, DEBUGGING
 19 .debug_abbrev 000106e2  00000000  00000000  00128d88  2**0
                  CONTENTS, READONLY, DEBUGGING
 20 .debug_aranges 000025d8  00000000  00000000  00139470  2**3
                  CONTENTS, READONLY, DEBUGGING
 21 .debug_str    001054b0  00000000  00000000  0013ba48  2**0
                  CONTENTS, READONLY, DEBUGGING
 22 .debug_ranges 000032e8  00000000  00000000  00240ef8  2**3
                  CONTENTS, READONLY, DEBUGGING
 23 .debug_loc    0001ac0c  00000000  00000000  002441e0  2**0
                  CONTENTS, READONLY, DEBUGGING
 24 .debug_macro  0002ea4a  00000000  00000000  0025edec  2**0
                  CONTENTS, READONLY, DEBUGGING
 25 .comment      000000fa  00000000  00000000  0028d836  2**0
                  CONTENTS, READONLY
 26 .debug_frame  000072cc  00000000  00000000  0028d930  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

080001b0 <__do_global_dtors_aux>:
 80001b0:	b510      	push	{r4, lr}
 80001b2:	4c05      	ldr	r4, [pc, #20]	; (80001c8 <__do_global_dtors_aux+0x18>)
 80001b4:	7823      	ldrb	r3, [r4, #0]
 80001b6:	b933      	cbnz	r3, 80001c6 <__do_global_dtors_aux+0x16>
 80001b8:	4b04      	ldr	r3, [pc, #16]	; (80001cc <__do_global_dtors_aux+0x1c>)
 80001ba:	b113      	cbz	r3, 80001c2 <__do_global_dtors_aux+0x12>
 80001bc:	4804      	ldr	r0, [pc, #16]	; (80001d0 <__do_global_dtors_aux+0x20>)
 80001be:	f3af 8000 	nop.w
 80001c2:	2301      	movs	r3, #1
 80001c4:	7023      	strb	r3, [r4, #0]
 80001c6:	bd10      	pop	{r4, pc}
 80001c8:	20000170 	.word	0x20000170
 80001cc:	00000000 	.word	0x00000000
 80001d0:	0801a418 	.word	0x0801a418

080001d4 <frame_dummy>:
 80001d4:	b508      	push	{r3, lr}
 80001d6:	4b03      	ldr	r3, [pc, #12]	; (80001e4 <frame_dummy+0x10>)
 80001d8:	b11b      	cbz	r3, 80001e2 <frame_dummy+0xe>
 80001da:	4903      	ldr	r1, [pc, #12]	; (80001e8 <frame_dummy+0x14>)
 80001dc:	4803      	ldr	r0, [pc, #12]	; (80001ec <frame_dummy+0x18>)
 80001de:	f3af 8000 	nop.w
 80001e2:	bd08      	pop	{r3, pc}
 80001e4:	00000000 	.word	0x00000000
 80001e8:	20000174 	.word	0x20000174
 80001ec:	0801a418 	.word	0x0801a418

080001f0 <memchr>:
 80001f0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80001f4:	2a10      	cmp	r2, #16
 80001f6:	db2b      	blt.n	8000250 <memchr+0x60>
 80001f8:	f010 0f07 	tst.w	r0, #7
 80001fc:	d008      	beq.n	8000210 <memchr+0x20>
 80001fe:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000202:	3a01      	subs	r2, #1
 8000204:	428b      	cmp	r3, r1
 8000206:	d02d      	beq.n	8000264 <memchr+0x74>
 8000208:	f010 0f07 	tst.w	r0, #7
 800020c:	b342      	cbz	r2, 8000260 <memchr+0x70>
 800020e:	d1f6      	bne.n	80001fe <memchr+0xe>
 8000210:	b4f0      	push	{r4, r5, r6, r7}
 8000212:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000216:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800021a:	f022 0407 	bic.w	r4, r2, #7
 800021e:	f07f 0700 	mvns.w	r7, #0
 8000222:	2300      	movs	r3, #0
 8000224:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000228:	3c08      	subs	r4, #8
 800022a:	ea85 0501 	eor.w	r5, r5, r1
 800022e:	ea86 0601 	eor.w	r6, r6, r1
 8000232:	fa85 f547 	uadd8	r5, r5, r7
 8000236:	faa3 f587 	sel	r5, r3, r7
 800023a:	fa86 f647 	uadd8	r6, r6, r7
 800023e:	faa5 f687 	sel	r6, r5, r7
 8000242:	b98e      	cbnz	r6, 8000268 <memchr+0x78>
 8000244:	d1ee      	bne.n	8000224 <memchr+0x34>
 8000246:	bcf0      	pop	{r4, r5, r6, r7}
 8000248:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800024c:	f002 0207 	and.w	r2, r2, #7
 8000250:	b132      	cbz	r2, 8000260 <memchr+0x70>
 8000252:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000256:	3a01      	subs	r2, #1
 8000258:	ea83 0301 	eor.w	r3, r3, r1
 800025c:	b113      	cbz	r3, 8000264 <memchr+0x74>
 800025e:	d1f8      	bne.n	8000252 <memchr+0x62>
 8000260:	2000      	movs	r0, #0
 8000262:	4770      	bx	lr
 8000264:	3801      	subs	r0, #1
 8000266:	4770      	bx	lr
 8000268:	2d00      	cmp	r5, #0
 800026a:	bf06      	itte	eq
 800026c:	4635      	moveq	r5, r6
 800026e:	3803      	subeq	r0, #3
 8000270:	3807      	subne	r0, #7
 8000272:	f015 0f01 	tst.w	r5, #1
 8000276:	d107      	bne.n	8000288 <memchr+0x98>
 8000278:	3001      	adds	r0, #1
 800027a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800027e:	bf02      	ittt	eq
 8000280:	3001      	addeq	r0, #1
 8000282:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000286:	3001      	addeq	r0, #1
 8000288:	bcf0      	pop	{r4, r5, r6, r7}
 800028a:	3801      	subs	r0, #1
 800028c:	4770      	bx	lr
 800028e:	bf00      	nop

08000290 <__aeabi_drsub>:
 8000290:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
 8000294:	e002      	b.n	800029c <__adddf3>
 8000296:	bf00      	nop

08000298 <__aeabi_dsub>:
 8000298:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

0800029c <__adddf3>:
 800029c:	b530      	push	{r4, r5, lr}
 800029e:	ea4f 0441 	mov.w	r4, r1, lsl #1
 80002a2:	ea4f 0543 	mov.w	r5, r3, lsl #1
 80002a6:	ea94 0f05 	teq	r4, r5
 80002aa:	bf08      	it	eq
 80002ac:	ea90 0f02 	teqeq	r0, r2
 80002b0:	bf1f      	itttt	ne
 80002b2:	ea54 0c00 	orrsne.w	ip, r4, r0
 80002b6:	ea55 0c02 	orrsne.w	ip, r5, r2
 80002ba:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 80002be:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80002c2:	f000 80e2 	beq.w	800048a <__adddf3+0x1ee>
 80002c6:	ea4f 5454 	mov.w	r4, r4, lsr #21
 80002ca:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 80002ce:	bfb8      	it	lt
 80002d0:	426d      	neglt	r5, r5
 80002d2:	dd0c      	ble.n	80002ee <__adddf3+0x52>
 80002d4:	442c      	add	r4, r5
 80002d6:	ea80 0202 	eor.w	r2, r0, r2
 80002da:	ea81 0303 	eor.w	r3, r1, r3
 80002de:	ea82 0000 	eor.w	r0, r2, r0
 80002e2:	ea83 0101 	eor.w	r1, r3, r1
 80002e6:	ea80 0202 	eor.w	r2, r0, r2
 80002ea:	ea81 0303 	eor.w	r3, r1, r3
 80002ee:	2d36      	cmp	r5, #54	; 0x36
 80002f0:	bf88      	it	hi
 80002f2:	bd30      	pophi	{r4, r5, pc}
 80002f4:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 80002f8:	ea4f 3101 	mov.w	r1, r1, lsl #12
 80002fc:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
 8000300:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 8000304:	d002      	beq.n	800030c <__adddf3+0x70>
 8000306:	4240      	negs	r0, r0
 8000308:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 800030c:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
 8000310:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000314:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 8000318:	d002      	beq.n	8000320 <__adddf3+0x84>
 800031a:	4252      	negs	r2, r2
 800031c:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000320:	ea94 0f05 	teq	r4, r5
 8000324:	f000 80a7 	beq.w	8000476 <__adddf3+0x1da>
 8000328:	f1a4 0401 	sub.w	r4, r4, #1
 800032c:	f1d5 0e20 	rsbs	lr, r5, #32
 8000330:	db0d      	blt.n	800034e <__adddf3+0xb2>
 8000332:	fa02 fc0e 	lsl.w	ip, r2, lr
 8000336:	fa22 f205 	lsr.w	r2, r2, r5
 800033a:	1880      	adds	r0, r0, r2
 800033c:	f141 0100 	adc.w	r1, r1, #0
 8000340:	fa03 f20e 	lsl.w	r2, r3, lr
 8000344:	1880      	adds	r0, r0, r2
 8000346:	fa43 f305 	asr.w	r3, r3, r5
 800034a:	4159      	adcs	r1, r3
 800034c:	e00e      	b.n	800036c <__adddf3+0xd0>
 800034e:	f1a5 0520 	sub.w	r5, r5, #32
 8000352:	f10e 0e20 	add.w	lr, lr, #32
 8000356:	2a01      	cmp	r2, #1
 8000358:	fa03 fc0e 	lsl.w	ip, r3, lr
 800035c:	bf28      	it	cs
 800035e:	f04c 0c02 	orrcs.w	ip, ip, #2
 8000362:	fa43 f305 	asr.w	r3, r3, r5
 8000366:	18c0      	adds	r0, r0, r3
 8000368:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 800036c:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000370:	d507      	bpl.n	8000382 <__adddf3+0xe6>
 8000372:	f04f 0e00 	mov.w	lr, #0
 8000376:	f1dc 0c00 	rsbs	ip, ip, #0
 800037a:	eb7e 0000 	sbcs.w	r0, lr, r0
 800037e:	eb6e 0101 	sbc.w	r1, lr, r1
 8000382:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
 8000386:	d31b      	bcc.n	80003c0 <__adddf3+0x124>
 8000388:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
 800038c:	d30c      	bcc.n	80003a8 <__adddf3+0x10c>
 800038e:	0849      	lsrs	r1, r1, #1
 8000390:	ea5f 0030 	movs.w	r0, r0, rrx
 8000394:	ea4f 0c3c 	mov.w	ip, ip, rrx
 8000398:	f104 0401 	add.w	r4, r4, #1
 800039c:	ea4f 5244 	mov.w	r2, r4, lsl #21
 80003a0:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
 80003a4:	f080 809a 	bcs.w	80004dc <__adddf3+0x240>
 80003a8:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 80003ac:	bf08      	it	eq
 80003ae:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80003b2:	f150 0000 	adcs.w	r0, r0, #0
 80003b6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80003ba:	ea41 0105 	orr.w	r1, r1, r5
 80003be:	bd30      	pop	{r4, r5, pc}
 80003c0:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 80003c4:	4140      	adcs	r0, r0
 80003c6:	eb41 0101 	adc.w	r1, r1, r1
 80003ca:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 80003ce:	f1a4 0401 	sub.w	r4, r4, #1
 80003d2:	d1e9      	bne.n	80003a8 <__adddf3+0x10c>
 80003d4:	f091 0f00 	teq	r1, #0
 80003d8:	bf04      	itt	eq
 80003da:	4601      	moveq	r1, r0
 80003dc:	2000      	moveq	r0, #0
 80003de:	fab1 f381 	clz	r3, r1
 80003e2:	bf08      	it	eq
 80003e4:	3320      	addeq	r3, #32
 80003e6:	f1a3 030b 	sub.w	r3, r3, #11
 80003ea:	f1b3 0220 	subs.w	r2, r3, #32
 80003ee:	da0c      	bge.n	800040a <__adddf3+0x16e>
 80003f0:	320c      	adds	r2, #12
 80003f2:	dd08      	ble.n	8000406 <__adddf3+0x16a>
 80003f4:	f102 0c14 	add.w	ip, r2, #20
 80003f8:	f1c2 020c 	rsb	r2, r2, #12
 80003fc:	fa01 f00c 	lsl.w	r0, r1, ip
 8000400:	fa21 f102 	lsr.w	r1, r1, r2
 8000404:	e00c      	b.n	8000420 <__adddf3+0x184>
 8000406:	f102 0214 	add.w	r2, r2, #20
 800040a:	bfd8      	it	le
 800040c:	f1c2 0c20 	rsble	ip, r2, #32
 8000410:	fa01 f102 	lsl.w	r1, r1, r2
 8000414:	fa20 fc0c 	lsr.w	ip, r0, ip
 8000418:	bfdc      	itt	le
 800041a:	ea41 010c 	orrle.w	r1, r1, ip
 800041e:	4090      	lslle	r0, r2
 8000420:	1ae4      	subs	r4, r4, r3
 8000422:	bfa2      	ittt	ge
 8000424:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 8000428:	4329      	orrge	r1, r5
 800042a:	bd30      	popge	{r4, r5, pc}
 800042c:	ea6f 0404 	mvn.w	r4, r4
 8000430:	3c1f      	subs	r4, #31
 8000432:	da1c      	bge.n	800046e <__adddf3+0x1d2>
 8000434:	340c      	adds	r4, #12
 8000436:	dc0e      	bgt.n	8000456 <__adddf3+0x1ba>
 8000438:	f104 0414 	add.w	r4, r4, #20
 800043c:	f1c4 0220 	rsb	r2, r4, #32
 8000440:	fa20 f004 	lsr.w	r0, r0, r4
 8000444:	fa01 f302 	lsl.w	r3, r1, r2
 8000448:	ea40 0003 	orr.w	r0, r0, r3
 800044c:	fa21 f304 	lsr.w	r3, r1, r4
 8000450:	ea45 0103 	orr.w	r1, r5, r3
 8000454:	bd30      	pop	{r4, r5, pc}
 8000456:	f1c4 040c 	rsb	r4, r4, #12
 800045a:	f1c4 0220 	rsb	r2, r4, #32
 800045e:	fa20 f002 	lsr.w	r0, r0, r2
 8000462:	fa01 f304 	lsl.w	r3, r1, r4
 8000466:	ea40 0003 	orr.w	r0, r0, r3
 800046a:	4629      	mov	r1, r5
 800046c:	bd30      	pop	{r4, r5, pc}
 800046e:	fa21 f004 	lsr.w	r0, r1, r4
 8000472:	4629      	mov	r1, r5
 8000474:	bd30      	pop	{r4, r5, pc}
 8000476:	f094 0f00 	teq	r4, #0
 800047a:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
 800047e:	bf06      	itte	eq
 8000480:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
 8000484:	3401      	addeq	r4, #1
 8000486:	3d01      	subne	r5, #1
 8000488:	e74e      	b.n	8000328 <__adddf3+0x8c>
 800048a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800048e:	bf18      	it	ne
 8000490:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8000494:	d029      	beq.n	80004ea <__adddf3+0x24e>
 8000496:	ea94 0f05 	teq	r4, r5
 800049a:	bf08      	it	eq
 800049c:	ea90 0f02 	teqeq	r0, r2
 80004a0:	d005      	beq.n	80004ae <__adddf3+0x212>
 80004a2:	ea54 0c00 	orrs.w	ip, r4, r0
 80004a6:	bf04      	itt	eq
 80004a8:	4619      	moveq	r1, r3
 80004aa:	4610      	moveq	r0, r2
 80004ac:	bd30      	pop	{r4, r5, pc}
 80004ae:	ea91 0f03 	teq	r1, r3
 80004b2:	bf1e      	ittt	ne
 80004b4:	2100      	movne	r1, #0
 80004b6:	2000      	movne	r0, #0
 80004b8:	bd30      	popne	{r4, r5, pc}
 80004ba:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 80004be:	d105      	bne.n	80004cc <__adddf3+0x230>
 80004c0:	0040      	lsls	r0, r0, #1
 80004c2:	4149      	adcs	r1, r1
 80004c4:	bf28      	it	cs
 80004c6:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
 80004ca:	bd30      	pop	{r4, r5, pc}
 80004cc:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
 80004d0:	bf3c      	itt	cc
 80004d2:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
 80004d6:	bd30      	popcc	{r4, r5, pc}
 80004d8:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80004dc:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
 80004e0:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 80004e4:	f04f 0000 	mov.w	r0, #0
 80004e8:	bd30      	pop	{r4, r5, pc}
 80004ea:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80004ee:	bf1a      	itte	ne
 80004f0:	4619      	movne	r1, r3
 80004f2:	4610      	movne	r0, r2
 80004f4:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 80004f8:	bf1c      	itt	ne
 80004fa:	460b      	movne	r3, r1
 80004fc:	4602      	movne	r2, r0
 80004fe:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8000502:	bf06      	itte	eq
 8000504:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 8000508:	ea91 0f03 	teqeq	r1, r3
 800050c:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
 8000510:	bd30      	pop	{r4, r5, pc}
 8000512:	bf00      	nop

08000514 <__aeabi_ui2d>:
 8000514:	f090 0f00 	teq	r0, #0
 8000518:	bf04      	itt	eq
 800051a:	2100      	moveq	r1, #0
 800051c:	4770      	bxeq	lr
 800051e:	b530      	push	{r4, r5, lr}
 8000520:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000524:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000528:	f04f 0500 	mov.w	r5, #0
 800052c:	f04f 0100 	mov.w	r1, #0
 8000530:	e750      	b.n	80003d4 <__adddf3+0x138>
 8000532:	bf00      	nop

08000534 <__aeabi_i2d>:
 8000534:	f090 0f00 	teq	r0, #0
 8000538:	bf04      	itt	eq
 800053a:	2100      	moveq	r1, #0
 800053c:	4770      	bxeq	lr
 800053e:	b530      	push	{r4, r5, lr}
 8000540:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000544:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000548:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
 800054c:	bf48      	it	mi
 800054e:	4240      	negmi	r0, r0
 8000550:	f04f 0100 	mov.w	r1, #0
 8000554:	e73e      	b.n	80003d4 <__adddf3+0x138>
 8000556:	bf00      	nop

08000558 <__aeabi_f2d>:
 8000558:	0042      	lsls	r2, r0, #1
 800055a:	ea4f 01e2 	mov.w	r1, r2, asr #3
 800055e:	ea4f 0131 	mov.w	r1, r1, rrx
 8000562:	ea4f 7002 	mov.w	r0, r2, lsl #28
 8000566:	bf1f      	itttt	ne
 8000568:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
 800056c:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 8000570:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
 8000574:	4770      	bxne	lr
 8000576:	f032 427f 	bics.w	r2, r2, #4278190080	; 0xff000000
 800057a:	bf08      	it	eq
 800057c:	4770      	bxeq	lr
 800057e:	f093 4f7f 	teq	r3, #4278190080	; 0xff000000
 8000582:	bf04      	itt	eq
 8000584:	f441 2100 	orreq.w	r1, r1, #524288	; 0x80000
 8000588:	4770      	bxeq	lr
 800058a:	b530      	push	{r4, r5, lr}
 800058c:	f44f 7460 	mov.w	r4, #896	; 0x380
 8000590:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000594:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8000598:	e71c      	b.n	80003d4 <__adddf3+0x138>
 800059a:	bf00      	nop

0800059c <__aeabi_ul2d>:
 800059c:	ea50 0201 	orrs.w	r2, r0, r1
 80005a0:	bf08      	it	eq
 80005a2:	4770      	bxeq	lr
 80005a4:	b530      	push	{r4, r5, lr}
 80005a6:	f04f 0500 	mov.w	r5, #0
 80005aa:	e00a      	b.n	80005c2 <__aeabi_l2d+0x16>

080005ac <__aeabi_l2d>:
 80005ac:	ea50 0201 	orrs.w	r2, r0, r1
 80005b0:	bf08      	it	eq
 80005b2:	4770      	bxeq	lr
 80005b4:	b530      	push	{r4, r5, lr}
 80005b6:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
 80005ba:	d502      	bpl.n	80005c2 <__aeabi_l2d+0x16>
 80005bc:	4240      	negs	r0, r0
 80005be:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80005c2:	f44f 6480 	mov.w	r4, #1024	; 0x400
 80005c6:	f104 0432 	add.w	r4, r4, #50	; 0x32
 80005ca:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 80005ce:	f43f aed8 	beq.w	8000382 <__adddf3+0xe6>
 80005d2:	f04f 0203 	mov.w	r2, #3
 80005d6:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80005da:	bf18      	it	ne
 80005dc:	3203      	addne	r2, #3
 80005de:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80005e2:	bf18      	it	ne
 80005e4:	3203      	addne	r2, #3
 80005e6:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 80005ea:	f1c2 0320 	rsb	r3, r2, #32
 80005ee:	fa00 fc03 	lsl.w	ip, r0, r3
 80005f2:	fa20 f002 	lsr.w	r0, r0, r2
 80005f6:	fa01 fe03 	lsl.w	lr, r1, r3
 80005fa:	ea40 000e 	orr.w	r0, r0, lr
 80005fe:	fa21 f102 	lsr.w	r1, r1, r2
 8000602:	4414      	add	r4, r2
 8000604:	e6bd      	b.n	8000382 <__adddf3+0xe6>
 8000606:	bf00      	nop

08000608 <__aeabi_dmul>:
 8000608:	b570      	push	{r4, r5, r6, lr}
 800060a:	f04f 0cff 	mov.w	ip, #255	; 0xff
 800060e:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 8000612:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 8000616:	bf1d      	ittte	ne
 8000618:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 800061c:	ea94 0f0c 	teqne	r4, ip
 8000620:	ea95 0f0c 	teqne	r5, ip
 8000624:	f000 f8de 	bleq	80007e4 <__aeabi_dmul+0x1dc>
 8000628:	442c      	add	r4, r5
 800062a:	ea81 0603 	eor.w	r6, r1, r3
 800062e:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 8000632:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 8000636:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 800063a:	bf18      	it	ne
 800063c:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 8000640:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000644:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8000648:	d038      	beq.n	80006bc <__aeabi_dmul+0xb4>
 800064a:	fba0 ce02 	umull	ip, lr, r0, r2
 800064e:	f04f 0500 	mov.w	r5, #0
 8000652:	fbe1 e502 	umlal	lr, r5, r1, r2
 8000656:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
 800065a:	fbe0 e503 	umlal	lr, r5, r0, r3
 800065e:	f04f 0600 	mov.w	r6, #0
 8000662:	fbe1 5603 	umlal	r5, r6, r1, r3
 8000666:	f09c 0f00 	teq	ip, #0
 800066a:	bf18      	it	ne
 800066c:	f04e 0e01 	orrne.w	lr, lr, #1
 8000670:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
 8000674:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
 8000678:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
 800067c:	d204      	bcs.n	8000688 <__aeabi_dmul+0x80>
 800067e:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 8000682:	416d      	adcs	r5, r5
 8000684:	eb46 0606 	adc.w	r6, r6, r6
 8000688:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 800068c:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 8000690:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 8000694:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 8000698:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 800069c:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 80006a0:	bf88      	it	hi
 80006a2:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 80006a6:	d81e      	bhi.n	80006e6 <__aeabi_dmul+0xde>
 80006a8:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
 80006ac:	bf08      	it	eq
 80006ae:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 80006b2:	f150 0000 	adcs.w	r0, r0, #0
 80006b6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80006ba:	bd70      	pop	{r4, r5, r6, pc}
 80006bc:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
 80006c0:	ea46 0101 	orr.w	r1, r6, r1
 80006c4:	ea40 0002 	orr.w	r0, r0, r2
 80006c8:	ea81 0103 	eor.w	r1, r1, r3
 80006cc:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 80006d0:	bfc2      	ittt	gt
 80006d2:	ebd4 050c 	rsbsgt	r5, r4, ip
 80006d6:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80006da:	bd70      	popgt	{r4, r5, r6, pc}
 80006dc:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80006e0:	f04f 0e00 	mov.w	lr, #0
 80006e4:	3c01      	subs	r4, #1
 80006e6:	f300 80ab 	bgt.w	8000840 <__aeabi_dmul+0x238>
 80006ea:	f114 0f36 	cmn.w	r4, #54	; 0x36
 80006ee:	bfde      	ittt	le
 80006f0:	2000      	movle	r0, #0
 80006f2:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
 80006f6:	bd70      	pople	{r4, r5, r6, pc}
 80006f8:	f1c4 0400 	rsb	r4, r4, #0
 80006fc:	3c20      	subs	r4, #32
 80006fe:	da35      	bge.n	800076c <__aeabi_dmul+0x164>
 8000700:	340c      	adds	r4, #12
 8000702:	dc1b      	bgt.n	800073c <__aeabi_dmul+0x134>
 8000704:	f104 0414 	add.w	r4, r4, #20
 8000708:	f1c4 0520 	rsb	r5, r4, #32
 800070c:	fa00 f305 	lsl.w	r3, r0, r5
 8000710:	fa20 f004 	lsr.w	r0, r0, r4
 8000714:	fa01 f205 	lsl.w	r2, r1, r5
 8000718:	ea40 0002 	orr.w	r0, r0, r2
 800071c:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
 8000720:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8000724:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 8000728:	fa21 f604 	lsr.w	r6, r1, r4
 800072c:	eb42 0106 	adc.w	r1, r2, r6
 8000730:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000734:	bf08      	it	eq
 8000736:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800073a:	bd70      	pop	{r4, r5, r6, pc}
 800073c:	f1c4 040c 	rsb	r4, r4, #12
 8000740:	f1c4 0520 	rsb	r5, r4, #32
 8000744:	fa00 f304 	lsl.w	r3, r0, r4
 8000748:	fa20 f005 	lsr.w	r0, r0, r5
 800074c:	fa01 f204 	lsl.w	r2, r1, r4
 8000750:	ea40 0002 	orr.w	r0, r0, r2
 8000754:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000758:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 800075c:	f141 0100 	adc.w	r1, r1, #0
 8000760:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000764:	bf08      	it	eq
 8000766:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800076a:	bd70      	pop	{r4, r5, r6, pc}
 800076c:	f1c4 0520 	rsb	r5, r4, #32
 8000770:	fa00 f205 	lsl.w	r2, r0, r5
 8000774:	ea4e 0e02 	orr.w	lr, lr, r2
 8000778:	fa20 f304 	lsr.w	r3, r0, r4
 800077c:	fa01 f205 	lsl.w	r2, r1, r5
 8000780:	ea43 0302 	orr.w	r3, r3, r2
 8000784:	fa21 f004 	lsr.w	r0, r1, r4
 8000788:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 800078c:	fa21 f204 	lsr.w	r2, r1, r4
 8000790:	ea20 0002 	bic.w	r0, r0, r2
 8000794:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 8000798:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 800079c:	bf08      	it	eq
 800079e:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80007a2:	bd70      	pop	{r4, r5, r6, pc}
 80007a4:	f094 0f00 	teq	r4, #0
 80007a8:	d10f      	bne.n	80007ca <__aeabi_dmul+0x1c2>
 80007aa:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
 80007ae:	0040      	lsls	r0, r0, #1
 80007b0:	eb41 0101 	adc.w	r1, r1, r1
 80007b4:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 80007b8:	bf08      	it	eq
 80007ba:	3c01      	subeq	r4, #1
 80007bc:	d0f7      	beq.n	80007ae <__aeabi_dmul+0x1a6>
 80007be:	ea41 0106 	orr.w	r1, r1, r6
 80007c2:	f095 0f00 	teq	r5, #0
 80007c6:	bf18      	it	ne
 80007c8:	4770      	bxne	lr
 80007ca:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
 80007ce:	0052      	lsls	r2, r2, #1
 80007d0:	eb43 0303 	adc.w	r3, r3, r3
 80007d4:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
 80007d8:	bf08      	it	eq
 80007da:	3d01      	subeq	r5, #1
 80007dc:	d0f7      	beq.n	80007ce <__aeabi_dmul+0x1c6>
 80007de:	ea43 0306 	orr.w	r3, r3, r6
 80007e2:	4770      	bx	lr
 80007e4:	ea94 0f0c 	teq	r4, ip
 80007e8:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80007ec:	bf18      	it	ne
 80007ee:	ea95 0f0c 	teqne	r5, ip
 80007f2:	d00c      	beq.n	800080e <__aeabi_dmul+0x206>
 80007f4:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80007f8:	bf18      	it	ne
 80007fa:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80007fe:	d1d1      	bne.n	80007a4 <__aeabi_dmul+0x19c>
 8000800:	ea81 0103 	eor.w	r1, r1, r3
 8000804:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000808:	f04f 0000 	mov.w	r0, #0
 800080c:	bd70      	pop	{r4, r5, r6, pc}
 800080e:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000812:	bf06      	itte	eq
 8000814:	4610      	moveq	r0, r2
 8000816:	4619      	moveq	r1, r3
 8000818:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800081c:	d019      	beq.n	8000852 <__aeabi_dmul+0x24a>
 800081e:	ea94 0f0c 	teq	r4, ip
 8000822:	d102      	bne.n	800082a <__aeabi_dmul+0x222>
 8000824:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 8000828:	d113      	bne.n	8000852 <__aeabi_dmul+0x24a>
 800082a:	ea95 0f0c 	teq	r5, ip
 800082e:	d105      	bne.n	800083c <__aeabi_dmul+0x234>
 8000830:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 8000834:	bf1c      	itt	ne
 8000836:	4610      	movne	r0, r2
 8000838:	4619      	movne	r1, r3
 800083a:	d10a      	bne.n	8000852 <__aeabi_dmul+0x24a>
 800083c:	ea81 0103 	eor.w	r1, r1, r3
 8000840:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000844:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000848:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 800084c:	f04f 0000 	mov.w	r0, #0
 8000850:	bd70      	pop	{r4, r5, r6, pc}
 8000852:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000856:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
 800085a:	bd70      	pop	{r4, r5, r6, pc}

0800085c <__aeabi_ddiv>:
 800085c:	b570      	push	{r4, r5, r6, lr}
 800085e:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8000862:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 8000866:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800086a:	bf1d      	ittte	ne
 800086c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8000870:	ea94 0f0c 	teqne	r4, ip
 8000874:	ea95 0f0c 	teqne	r5, ip
 8000878:	f000 f8a7 	bleq	80009ca <__aeabi_ddiv+0x16e>
 800087c:	eba4 0405 	sub.w	r4, r4, r5
 8000880:	ea81 0e03 	eor.w	lr, r1, r3
 8000884:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000888:	ea4f 3101 	mov.w	r1, r1, lsl #12
 800088c:	f000 8088 	beq.w	80009a0 <__aeabi_ddiv+0x144>
 8000890:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000894:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
 8000898:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 800089c:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 80008a0:	ea4f 2202 	mov.w	r2, r2, lsl #8
 80008a4:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 80008a8:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 80008ac:	ea4f 2600 	mov.w	r6, r0, lsl #8
 80008b0:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
 80008b4:	429d      	cmp	r5, r3
 80008b6:	bf08      	it	eq
 80008b8:	4296      	cmpeq	r6, r2
 80008ba:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
 80008be:	f504 7440 	add.w	r4, r4, #768	; 0x300
 80008c2:	d202      	bcs.n	80008ca <__aeabi_ddiv+0x6e>
 80008c4:	085b      	lsrs	r3, r3, #1
 80008c6:	ea4f 0232 	mov.w	r2, r2, rrx
 80008ca:	1ab6      	subs	r6, r6, r2
 80008cc:	eb65 0503 	sbc.w	r5, r5, r3
 80008d0:	085b      	lsrs	r3, r3, #1
 80008d2:	ea4f 0232 	mov.w	r2, r2, rrx
 80008d6:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
 80008da:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
 80008de:	ebb6 0e02 	subs.w	lr, r6, r2
 80008e2:	eb75 0e03 	sbcs.w	lr, r5, r3
 80008e6:	bf22      	ittt	cs
 80008e8:	1ab6      	subcs	r6, r6, r2
 80008ea:	4675      	movcs	r5, lr
 80008ec:	ea40 000c 	orrcs.w	r0, r0, ip
 80008f0:	085b      	lsrs	r3, r3, #1
 80008f2:	ea4f 0232 	mov.w	r2, r2, rrx
 80008f6:	ebb6 0e02 	subs.w	lr, r6, r2
 80008fa:	eb75 0e03 	sbcs.w	lr, r5, r3
 80008fe:	bf22      	ittt	cs
 8000900:	1ab6      	subcs	r6, r6, r2
 8000902:	4675      	movcs	r5, lr
 8000904:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 8000908:	085b      	lsrs	r3, r3, #1
 800090a:	ea4f 0232 	mov.w	r2, r2, rrx
 800090e:	ebb6 0e02 	subs.w	lr, r6, r2
 8000912:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000916:	bf22      	ittt	cs
 8000918:	1ab6      	subcs	r6, r6, r2
 800091a:	4675      	movcs	r5, lr
 800091c:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8000920:	085b      	lsrs	r3, r3, #1
 8000922:	ea4f 0232 	mov.w	r2, r2, rrx
 8000926:	ebb6 0e02 	subs.w	lr, r6, r2
 800092a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800092e:	bf22      	ittt	cs
 8000930:	1ab6      	subcs	r6, r6, r2
 8000932:	4675      	movcs	r5, lr
 8000934:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8000938:	ea55 0e06 	orrs.w	lr, r5, r6
 800093c:	d018      	beq.n	8000970 <__aeabi_ddiv+0x114>
 800093e:	ea4f 1505 	mov.w	r5, r5, lsl #4
 8000942:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 8000946:	ea4f 1606 	mov.w	r6, r6, lsl #4
 800094a:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 800094e:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 8000952:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8000956:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 800095a:	d1c0      	bne.n	80008de <__aeabi_ddiv+0x82>
 800095c:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000960:	d10b      	bne.n	800097a <__aeabi_ddiv+0x11e>
 8000962:	ea41 0100 	orr.w	r1, r1, r0
 8000966:	f04f 0000 	mov.w	r0, #0
 800096a:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
 800096e:	e7b6      	b.n	80008de <__aeabi_ddiv+0x82>
 8000970:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000974:	bf04      	itt	eq
 8000976:	4301      	orreq	r1, r0
 8000978:	2000      	moveq	r0, #0
 800097a:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 800097e:	bf88      	it	hi
 8000980:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 8000984:	f63f aeaf 	bhi.w	80006e6 <__aeabi_dmul+0xde>
 8000988:	ebb5 0c03 	subs.w	ip, r5, r3
 800098c:	bf04      	itt	eq
 800098e:	ebb6 0c02 	subseq.w	ip, r6, r2
 8000992:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 8000996:	f150 0000 	adcs.w	r0, r0, #0
 800099a:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 800099e:	bd70      	pop	{r4, r5, r6, pc}
 80009a0:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
 80009a4:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 80009a8:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 80009ac:	bfc2      	ittt	gt
 80009ae:	ebd4 050c 	rsbsgt	r5, r4, ip
 80009b2:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80009b6:	bd70      	popgt	{r4, r5, r6, pc}
 80009b8:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80009bc:	f04f 0e00 	mov.w	lr, #0
 80009c0:	3c01      	subs	r4, #1
 80009c2:	e690      	b.n	80006e6 <__aeabi_dmul+0xde>
 80009c4:	ea45 0e06 	orr.w	lr, r5, r6
 80009c8:	e68d      	b.n	80006e6 <__aeabi_dmul+0xde>
 80009ca:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80009ce:	ea94 0f0c 	teq	r4, ip
 80009d2:	bf08      	it	eq
 80009d4:	ea95 0f0c 	teqeq	r5, ip
 80009d8:	f43f af3b 	beq.w	8000852 <__aeabi_dmul+0x24a>
 80009dc:	ea94 0f0c 	teq	r4, ip
 80009e0:	d10a      	bne.n	80009f8 <__aeabi_ddiv+0x19c>
 80009e2:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80009e6:	f47f af34 	bne.w	8000852 <__aeabi_dmul+0x24a>
 80009ea:	ea95 0f0c 	teq	r5, ip
 80009ee:	f47f af25 	bne.w	800083c <__aeabi_dmul+0x234>
 80009f2:	4610      	mov	r0, r2
 80009f4:	4619      	mov	r1, r3
 80009f6:	e72c      	b.n	8000852 <__aeabi_dmul+0x24a>
 80009f8:	ea95 0f0c 	teq	r5, ip
 80009fc:	d106      	bne.n	8000a0c <__aeabi_ddiv+0x1b0>
 80009fe:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000a02:	f43f aefd 	beq.w	8000800 <__aeabi_dmul+0x1f8>
 8000a06:	4610      	mov	r0, r2
 8000a08:	4619      	mov	r1, r3
 8000a0a:	e722      	b.n	8000852 <__aeabi_dmul+0x24a>
 8000a0c:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000a10:	bf18      	it	ne
 8000a12:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000a16:	f47f aec5 	bne.w	80007a4 <__aeabi_dmul+0x19c>
 8000a1a:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 8000a1e:	f47f af0d 	bne.w	800083c <__aeabi_dmul+0x234>
 8000a22:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 8000a26:	f47f aeeb 	bne.w	8000800 <__aeabi_dmul+0x1f8>
 8000a2a:	e712      	b.n	8000852 <__aeabi_dmul+0x24a>

08000a2c <__aeabi_d2iz>:
 8000a2c:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000a30:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
 8000a34:	d215      	bcs.n	8000a62 <__aeabi_d2iz+0x36>
 8000a36:	d511      	bpl.n	8000a5c <__aeabi_d2iz+0x30>
 8000a38:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
 8000a3c:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000a40:	d912      	bls.n	8000a68 <__aeabi_d2iz+0x3c>
 8000a42:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000a46:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8000a4a:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000a4e:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8000a52:	fa23 f002 	lsr.w	r0, r3, r2
 8000a56:	bf18      	it	ne
 8000a58:	4240      	negne	r0, r0
 8000a5a:	4770      	bx	lr
 8000a5c:	f04f 0000 	mov.w	r0, #0
 8000a60:	4770      	bx	lr
 8000a62:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000a66:	d105      	bne.n	8000a74 <__aeabi_d2iz+0x48>
 8000a68:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
 8000a6c:	bf08      	it	eq
 8000a6e:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
 8000a72:	4770      	bx	lr
 8000a74:	f04f 0000 	mov.w	r0, #0
 8000a78:	4770      	bx	lr
 8000a7a:	bf00      	nop

08000a7c <__aeabi_uldivmod>:
 8000a7c:	b953      	cbnz	r3, 8000a94 <__aeabi_uldivmod+0x18>
 8000a7e:	b94a      	cbnz	r2, 8000a94 <__aeabi_uldivmod+0x18>
 8000a80:	2900      	cmp	r1, #0
 8000a82:	bf08      	it	eq
 8000a84:	2800      	cmpeq	r0, #0
 8000a86:	bf1c      	itt	ne
 8000a88:	f04f 31ff 	movne.w	r1, #4294967295
 8000a8c:	f04f 30ff 	movne.w	r0, #4294967295
 8000a90:	f000 b972 	b.w	8000d78 <__aeabi_idiv0>
 8000a94:	f1ad 0c08 	sub.w	ip, sp, #8
 8000a98:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 8000a9c:	f000 f806 	bl	8000aac <__udivmoddi4>
 8000aa0:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000aa4:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8000aa8:	b004      	add	sp, #16
 8000aaa:	4770      	bx	lr

08000aac <__udivmoddi4>:
 8000aac:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000ab0:	9e08      	ldr	r6, [sp, #32]
 8000ab2:	4604      	mov	r4, r0
 8000ab4:	4688      	mov	r8, r1
 8000ab6:	2b00      	cmp	r3, #0
 8000ab8:	d14b      	bne.n	8000b52 <__udivmoddi4+0xa6>
 8000aba:	428a      	cmp	r2, r1
 8000abc:	4615      	mov	r5, r2
 8000abe:	d967      	bls.n	8000b90 <__udivmoddi4+0xe4>
 8000ac0:	fab2 f282 	clz	r2, r2
 8000ac4:	b14a      	cbz	r2, 8000ada <__udivmoddi4+0x2e>
 8000ac6:	f1c2 0720 	rsb	r7, r2, #32
 8000aca:	fa01 f302 	lsl.w	r3, r1, r2
 8000ace:	fa20 f707 	lsr.w	r7, r0, r7
 8000ad2:	4095      	lsls	r5, r2
 8000ad4:	ea47 0803 	orr.w	r8, r7, r3
 8000ad8:	4094      	lsls	r4, r2
 8000ada:	ea4f 4e15 	mov.w	lr, r5, lsr #16
 8000ade:	0c23      	lsrs	r3, r4, #16
 8000ae0:	fbb8 f7fe 	udiv	r7, r8, lr
 8000ae4:	fa1f fc85 	uxth.w	ip, r5
 8000ae8:	fb0e 8817 	mls	r8, lr, r7, r8
 8000aec:	ea43 4308 	orr.w	r3, r3, r8, lsl #16
 8000af0:	fb07 f10c 	mul.w	r1, r7, ip
 8000af4:	4299      	cmp	r1, r3
 8000af6:	d909      	bls.n	8000b0c <__udivmoddi4+0x60>
 8000af8:	18eb      	adds	r3, r5, r3
 8000afa:	f107 30ff 	add.w	r0, r7, #4294967295
 8000afe:	f080 811b 	bcs.w	8000d38 <__udivmoddi4+0x28c>
 8000b02:	4299      	cmp	r1, r3
 8000b04:	f240 8118 	bls.w	8000d38 <__udivmoddi4+0x28c>
 8000b08:	3f02      	subs	r7, #2
 8000b0a:	442b      	add	r3, r5
 8000b0c:	1a5b      	subs	r3, r3, r1
 8000b0e:	b2a4      	uxth	r4, r4
 8000b10:	fbb3 f0fe 	udiv	r0, r3, lr
 8000b14:	fb0e 3310 	mls	r3, lr, r0, r3
 8000b18:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
 8000b1c:	fb00 fc0c 	mul.w	ip, r0, ip
 8000b20:	45a4      	cmp	ip, r4
 8000b22:	d909      	bls.n	8000b38 <__udivmoddi4+0x8c>
 8000b24:	192c      	adds	r4, r5, r4
 8000b26:	f100 33ff 	add.w	r3, r0, #4294967295
 8000b2a:	f080 8107 	bcs.w	8000d3c <__udivmoddi4+0x290>
 8000b2e:	45a4      	cmp	ip, r4
 8000b30:	f240 8104 	bls.w	8000d3c <__udivmoddi4+0x290>
 8000b34:	3802      	subs	r0, #2
 8000b36:	442c      	add	r4, r5
 8000b38:	ea40 4007 	orr.w	r0, r0, r7, lsl #16
 8000b3c:	eba4 040c 	sub.w	r4, r4, ip
 8000b40:	2700      	movs	r7, #0
 8000b42:	b11e      	cbz	r6, 8000b4c <__udivmoddi4+0xa0>
 8000b44:	40d4      	lsrs	r4, r2
 8000b46:	2300      	movs	r3, #0
 8000b48:	e9c6 4300 	strd	r4, r3, [r6]
 8000b4c:	4639      	mov	r1, r7
 8000b4e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000b52:	428b      	cmp	r3, r1
 8000b54:	d909      	bls.n	8000b6a <__udivmoddi4+0xbe>
 8000b56:	2e00      	cmp	r6, #0
 8000b58:	f000 80eb 	beq.w	8000d32 <__udivmoddi4+0x286>
 8000b5c:	2700      	movs	r7, #0
 8000b5e:	e9c6 0100 	strd	r0, r1, [r6]
 8000b62:	4638      	mov	r0, r7
 8000b64:	4639      	mov	r1, r7
 8000b66:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000b6a:	fab3 f783 	clz	r7, r3
 8000b6e:	2f00      	cmp	r7, #0
 8000b70:	d147      	bne.n	8000c02 <__udivmoddi4+0x156>
 8000b72:	428b      	cmp	r3, r1
 8000b74:	d302      	bcc.n	8000b7c <__udivmoddi4+0xd0>
 8000b76:	4282      	cmp	r2, r0
 8000b78:	f200 80fa 	bhi.w	8000d70 <__udivmoddi4+0x2c4>
 8000b7c:	1a84      	subs	r4, r0, r2
 8000b7e:	eb61 0303 	sbc.w	r3, r1, r3
 8000b82:	2001      	movs	r0, #1
 8000b84:	4698      	mov	r8, r3
 8000b86:	2e00      	cmp	r6, #0
 8000b88:	d0e0      	beq.n	8000b4c <__udivmoddi4+0xa0>
 8000b8a:	e9c6 4800 	strd	r4, r8, [r6]
 8000b8e:	e7dd      	b.n	8000b4c <__udivmoddi4+0xa0>
 8000b90:	b902      	cbnz	r2, 8000b94 <__udivmoddi4+0xe8>
 8000b92:	deff      	udf	#255	; 0xff
 8000b94:	fab2 f282 	clz	r2, r2
 8000b98:	2a00      	cmp	r2, #0
 8000b9a:	f040 808f 	bne.w	8000cbc <__udivmoddi4+0x210>
 8000b9e:	1b49      	subs	r1, r1, r5
 8000ba0:	ea4f 4e15 	mov.w	lr, r5, lsr #16
 8000ba4:	fa1f f885 	uxth.w	r8, r5
 8000ba8:	2701      	movs	r7, #1
 8000baa:	fbb1 fcfe 	udiv	ip, r1, lr
 8000bae:	0c23      	lsrs	r3, r4, #16
 8000bb0:	fb0e 111c 	mls	r1, lr, ip, r1
 8000bb4:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8000bb8:	fb08 f10c 	mul.w	r1, r8, ip
 8000bbc:	4299      	cmp	r1, r3
 8000bbe:	d907      	bls.n	8000bd0 <__udivmoddi4+0x124>
 8000bc0:	18eb      	adds	r3, r5, r3
 8000bc2:	f10c 30ff 	add.w	r0, ip, #4294967295
 8000bc6:	d202      	bcs.n	8000bce <__udivmoddi4+0x122>
 8000bc8:	4299      	cmp	r1, r3
 8000bca:	f200 80cd 	bhi.w	8000d68 <__udivmoddi4+0x2bc>
 8000bce:	4684      	mov	ip, r0
 8000bd0:	1a59      	subs	r1, r3, r1
 8000bd2:	b2a3      	uxth	r3, r4
 8000bd4:	fbb1 f0fe 	udiv	r0, r1, lr
 8000bd8:	fb0e 1410 	mls	r4, lr, r0, r1
 8000bdc:	ea43 4404 	orr.w	r4, r3, r4, lsl #16
 8000be0:	fb08 f800 	mul.w	r8, r8, r0
 8000be4:	45a0      	cmp	r8, r4
 8000be6:	d907      	bls.n	8000bf8 <__udivmoddi4+0x14c>
 8000be8:	192c      	adds	r4, r5, r4
 8000bea:	f100 33ff 	add.w	r3, r0, #4294967295
 8000bee:	d202      	bcs.n	8000bf6 <__udivmoddi4+0x14a>
 8000bf0:	45a0      	cmp	r8, r4
 8000bf2:	f200 80b6 	bhi.w	8000d62 <__udivmoddi4+0x2b6>
 8000bf6:	4618      	mov	r0, r3
 8000bf8:	eba4 0408 	sub.w	r4, r4, r8
 8000bfc:	ea40 400c 	orr.w	r0, r0, ip, lsl #16
 8000c00:	e79f      	b.n	8000b42 <__udivmoddi4+0x96>
 8000c02:	f1c7 0c20 	rsb	ip, r7, #32
 8000c06:	40bb      	lsls	r3, r7
 8000c08:	fa22 fe0c 	lsr.w	lr, r2, ip
 8000c0c:	ea4e 0e03 	orr.w	lr, lr, r3
 8000c10:	fa01 f407 	lsl.w	r4, r1, r7
 8000c14:	fa20 f50c 	lsr.w	r5, r0, ip
 8000c18:	fa21 f30c 	lsr.w	r3, r1, ip
 8000c1c:	ea4f 481e 	mov.w	r8, lr, lsr #16
 8000c20:	4325      	orrs	r5, r4
 8000c22:	fbb3 f9f8 	udiv	r9, r3, r8
 8000c26:	0c2c      	lsrs	r4, r5, #16
 8000c28:	fb08 3319 	mls	r3, r8, r9, r3
 8000c2c:	fa1f fa8e 	uxth.w	sl, lr
 8000c30:	ea44 4303 	orr.w	r3, r4, r3, lsl #16
 8000c34:	fb09 f40a 	mul.w	r4, r9, sl
 8000c38:	429c      	cmp	r4, r3
 8000c3a:	fa02 f207 	lsl.w	r2, r2, r7
 8000c3e:	fa00 f107 	lsl.w	r1, r0, r7
 8000c42:	d90b      	bls.n	8000c5c <__udivmoddi4+0x1b0>
 8000c44:	eb1e 0303 	adds.w	r3, lr, r3
 8000c48:	f109 30ff 	add.w	r0, r9, #4294967295
 8000c4c:	f080 8087 	bcs.w	8000d5e <__udivmoddi4+0x2b2>
 8000c50:	429c      	cmp	r4, r3
 8000c52:	f240 8084 	bls.w	8000d5e <__udivmoddi4+0x2b2>
 8000c56:	f1a9 0902 	sub.w	r9, r9, #2
 8000c5a:	4473      	add	r3, lr
 8000c5c:	1b1b      	subs	r3, r3, r4
 8000c5e:	b2ad      	uxth	r5, r5
 8000c60:	fbb3 f0f8 	udiv	r0, r3, r8
 8000c64:	fb08 3310 	mls	r3, r8, r0, r3
 8000c68:	ea45 4403 	orr.w	r4, r5, r3, lsl #16
 8000c6c:	fb00 fa0a 	mul.w	sl, r0, sl
 8000c70:	45a2      	cmp	sl, r4
 8000c72:	d908      	bls.n	8000c86 <__udivmoddi4+0x1da>
 8000c74:	eb1e 0404 	adds.w	r4, lr, r4
 8000c78:	f100 33ff 	add.w	r3, r0, #4294967295
 8000c7c:	d26b      	bcs.n	8000d56 <__udivmoddi4+0x2aa>
 8000c7e:	45a2      	cmp	sl, r4
 8000c80:	d969      	bls.n	8000d56 <__udivmoddi4+0x2aa>
 8000c82:	3802      	subs	r0, #2
 8000c84:	4474      	add	r4, lr
 8000c86:	ea40 4009 	orr.w	r0, r0, r9, lsl #16
 8000c8a:	fba0 8902 	umull	r8, r9, r0, r2
 8000c8e:	eba4 040a 	sub.w	r4, r4, sl
 8000c92:	454c      	cmp	r4, r9
 8000c94:	46c2      	mov	sl, r8
 8000c96:	464b      	mov	r3, r9
 8000c98:	d354      	bcc.n	8000d44 <__udivmoddi4+0x298>
 8000c9a:	d051      	beq.n	8000d40 <__udivmoddi4+0x294>
 8000c9c:	2e00      	cmp	r6, #0
 8000c9e:	d069      	beq.n	8000d74 <__udivmoddi4+0x2c8>
 8000ca0:	ebb1 050a 	subs.w	r5, r1, sl
 8000ca4:	eb64 0403 	sbc.w	r4, r4, r3
 8000ca8:	fa04 fc0c 	lsl.w	ip, r4, ip
 8000cac:	40fd      	lsrs	r5, r7
 8000cae:	40fc      	lsrs	r4, r7
 8000cb0:	ea4c 0505 	orr.w	r5, ip, r5
 8000cb4:	e9c6 5400 	strd	r5, r4, [r6]
 8000cb8:	2700      	movs	r7, #0
 8000cba:	e747      	b.n	8000b4c <__udivmoddi4+0xa0>
 8000cbc:	f1c2 0320 	rsb	r3, r2, #32
 8000cc0:	fa20 f703 	lsr.w	r7, r0, r3
 8000cc4:	4095      	lsls	r5, r2
 8000cc6:	fa01 f002 	lsl.w	r0, r1, r2
 8000cca:	fa21 f303 	lsr.w	r3, r1, r3
 8000cce:	ea4f 4e15 	mov.w	lr, r5, lsr #16
 8000cd2:	4338      	orrs	r0, r7
 8000cd4:	0c01      	lsrs	r1, r0, #16
 8000cd6:	fbb3 f7fe 	udiv	r7, r3, lr
 8000cda:	fa1f f885 	uxth.w	r8, r5
 8000cde:	fb0e 3317 	mls	r3, lr, r7, r3
 8000ce2:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 8000ce6:	fb07 f308 	mul.w	r3, r7, r8
 8000cea:	428b      	cmp	r3, r1
 8000cec:	fa04 f402 	lsl.w	r4, r4, r2
 8000cf0:	d907      	bls.n	8000d02 <__udivmoddi4+0x256>
 8000cf2:	1869      	adds	r1, r5, r1
 8000cf4:	f107 3cff 	add.w	ip, r7, #4294967295
 8000cf8:	d22f      	bcs.n	8000d5a <__udivmoddi4+0x2ae>
 8000cfa:	428b      	cmp	r3, r1
 8000cfc:	d92d      	bls.n	8000d5a <__udivmoddi4+0x2ae>
 8000cfe:	3f02      	subs	r7, #2
 8000d00:	4429      	add	r1, r5
 8000d02:	1acb      	subs	r3, r1, r3
 8000d04:	b281      	uxth	r1, r0
 8000d06:	fbb3 f0fe 	udiv	r0, r3, lr
 8000d0a:	fb0e 3310 	mls	r3, lr, r0, r3
 8000d0e:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 8000d12:	fb00 f308 	mul.w	r3, r0, r8
 8000d16:	428b      	cmp	r3, r1
 8000d18:	d907      	bls.n	8000d2a <__udivmoddi4+0x27e>
 8000d1a:	1869      	adds	r1, r5, r1
 8000d1c:	f100 3cff 	add.w	ip, r0, #4294967295
 8000d20:	d217      	bcs.n	8000d52 <__udivmoddi4+0x2a6>
 8000d22:	428b      	cmp	r3, r1
 8000d24:	d915      	bls.n	8000d52 <__udivmoddi4+0x2a6>
 8000d26:	3802      	subs	r0, #2
 8000d28:	4429      	add	r1, r5
 8000d2a:	1ac9      	subs	r1, r1, r3
 8000d2c:	ea40 4707 	orr.w	r7, r0, r7, lsl #16
 8000d30:	e73b      	b.n	8000baa <__udivmoddi4+0xfe>
 8000d32:	4637      	mov	r7, r6
 8000d34:	4630      	mov	r0, r6
 8000d36:	e709      	b.n	8000b4c <__udivmoddi4+0xa0>
 8000d38:	4607      	mov	r7, r0
 8000d3a:	e6e7      	b.n	8000b0c <__udivmoddi4+0x60>
 8000d3c:	4618      	mov	r0, r3
 8000d3e:	e6fb      	b.n	8000b38 <__udivmoddi4+0x8c>
 8000d40:	4541      	cmp	r1, r8
 8000d42:	d2ab      	bcs.n	8000c9c <__udivmoddi4+0x1f0>
 8000d44:	ebb8 0a02 	subs.w	sl, r8, r2
 8000d48:	eb69 020e 	sbc.w	r2, r9, lr
 8000d4c:	3801      	subs	r0, #1
 8000d4e:	4613      	mov	r3, r2
 8000d50:	e7a4      	b.n	8000c9c <__udivmoddi4+0x1f0>
 8000d52:	4660      	mov	r0, ip
 8000d54:	e7e9      	b.n	8000d2a <__udivmoddi4+0x27e>
 8000d56:	4618      	mov	r0, r3
 8000d58:	e795      	b.n	8000c86 <__udivmoddi4+0x1da>
 8000d5a:	4667      	mov	r7, ip
 8000d5c:	e7d1      	b.n	8000d02 <__udivmoddi4+0x256>
 8000d5e:	4681      	mov	r9, r0
 8000d60:	e77c      	b.n	8000c5c <__udivmoddi4+0x1b0>
 8000d62:	3802      	subs	r0, #2
 8000d64:	442c      	add	r4, r5
 8000d66:	e747      	b.n	8000bf8 <__udivmoddi4+0x14c>
 8000d68:	f1ac 0c02 	sub.w	ip, ip, #2
 8000d6c:	442b      	add	r3, r5
 8000d6e:	e72f      	b.n	8000bd0 <__udivmoddi4+0x124>
 8000d70:	4638      	mov	r0, r7
 8000d72:	e708      	b.n	8000b86 <__udivmoddi4+0xda>
 8000d74:	4637      	mov	r7, r6
 8000d76:	e6e9      	b.n	8000b4c <__udivmoddi4+0xa0>

08000d78 <__aeabi_idiv0>:
 8000d78:	4770      	bx	lr
 8000d7a:	bf00      	nop

08000d7c <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler: 
  ldr   sp, =_estack       /* set stack pointer */
 8000d7c:	f8df d034 	ldr.w	sp, [pc, #52]	; 8000db4 <LoopFillZerobss+0x14>
 
/* Copy the data segment initializers from flash to SRAM */  
  movs  r1, #0
 8000d80:	2100      	movs	r1, #0
  b  LoopCopyDataInit
 8000d82:	e003      	b.n	8000d8c <LoopCopyDataInit>

08000d84 <CopyDataInit>:

CopyDataInit:
  ldr  r3, =_sidata
 8000d84:	4b0c      	ldr	r3, [pc, #48]	; (8000db8 <LoopFillZerobss+0x18>)
  ldr  r3, [r3, r1]
 8000d86:	585b      	ldr	r3, [r3, r1]
  str  r3, [r0, r1]
 8000d88:	5043      	str	r3, [r0, r1]
  adds  r1, r1, #4
 8000d8a:	3104      	adds	r1, #4

08000d8c <LoopCopyDataInit>:
    
LoopCopyDataInit:
  ldr  r0, =_sdata
 8000d8c:	480b      	ldr	r0, [pc, #44]	; (8000dbc <LoopFillZerobss+0x1c>)
  ldr  r3, =_edata
 8000d8e:	4b0c      	ldr	r3, [pc, #48]	; (8000dc0 <LoopFillZerobss+0x20>)
  adds  r2, r0, r1
 8000d90:	1842      	adds	r2, r0, r1
  cmp  r2, r3
 8000d92:	429a      	cmp	r2, r3
  bcc  CopyDataInit
 8000d94:	d3f6      	bcc.n	8000d84 <CopyDataInit>
  ldr  r2, =_sbss
 8000d96:	4a0b      	ldr	r2, [pc, #44]	; (8000dc4 <LoopFillZerobss+0x24>)
  b  LoopFillZerobss
 8000d98:	e002      	b.n	8000da0 <LoopFillZerobss>

08000d9a <FillZerobss>:
/* Zero fill the bss segment. */  
FillZerobss:
  movs  r3, #0
 8000d9a:	2300      	movs	r3, #0
  str  r3, [r2], #4
 8000d9c:	f842 3b04 	str.w	r3, [r2], #4

08000da0 <LoopFillZerobss>:
    
LoopFillZerobss:
  ldr  r3, = _ebss
 8000da0:	4b09      	ldr	r3, [pc, #36]	; (8000dc8 <LoopFillZerobss+0x28>)
  cmp  r2, r3
 8000da2:	429a      	cmp	r2, r3
  bcc  FillZerobss
 8000da4:	d3f9      	bcc.n	8000d9a <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit   
 8000da6:	f002 ff69 	bl	8003c7c <SystemInit>
/* Call static constructors */
    bl __libc_init_array
 8000daa:	f018 fb79 	bl	80194a0 <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 8000dae:	f000 fe95 	bl	8001adc <main>
  bx  lr    
 8000db2:	4770      	bx	lr
  ldr   sp, =_estack       /* set stack pointer */
 8000db4:	20030000 	.word	0x20030000
  ldr  r3, =_sidata
 8000db8:	080576a8 	.word	0x080576a8
  ldr  r0, =_sdata
 8000dbc:	20000000 	.word	0x20000000
  ldr  r3, =_edata
 8000dc0:	20000170 	.word	0x20000170
  ldr  r2, =_sbss
 8000dc4:	20000170 	.word	0x20000170
  ldr  r3, = _ebss
 8000dc8:	20012980 	.word	0x20012980

08000dcc <ADC_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 8000dcc:	e7fe      	b.n	8000dcc <ADC_IRQHandler>

08000dce <MX_TouchGFX_Init>:
 * Initialize TouchGFX application
 */
void MX_TouchGFX_Init(void)
{
  // Calling farward to touchgfx_init in C++ domain
  touchgfx_init();
 8000dce:	f000 bc93 	b.w	80016f8 <touchgfx_init>

08000dd2 <TouchGFX_Task>:
 * TouchGFX application thread
 */
void TouchGFX_Task(void *argument)
{
  // Calling farward to touchgfx_init in C++ domain
  touchgfx_taskEntry();
 8000dd2:	f000 bd01 	b.w	80017d8 <touchgfx_taskEntry>

08000dd6 <_ZN20STM32TouchControllerD1Ev>:
 * @brief This class specializes TouchController Interface.
 *
 * @sa touchgfx::TouchController
 */

class STM32TouchController : public touchgfx::TouchController
 8000dd6:	4770      	bx	lr

08000dd8 <_ZN20STM32TouchControllerD0Ev>:
 8000dd8:	b510      	push	{r4, lr}
 8000dda:	2104      	movs	r1, #4
 8000ddc:	4604      	mov	r4, r0
 8000dde:	f018 fae9 	bl	80193b4 <_ZdlPvj>
 8000de2:	4620      	mov	r0, r4
 8000de4:	bd10      	pop	{r4, pc}
	...

08000de8 <_Z11BSP_TS_Inittt>:
  * @param  XSize: The maximum X size of the TS area on LCD
  * @param  YSize: The maximum Y size of the TS area on LCD
  * @retval TS_OK: if all initializations are OK. Other value if error.
  */
uint8_t BSP_TS_Init(uint16_t XSize, uint16_t YSize)
{
 8000de8:	b538      	push	{r3, r4, r5, lr}
    uint8_t ret = TS_ERROR;

    /* Initialize x and y positions boundaries */
    TsXBoundary = XSize;
 8000dea:	4b0c      	ldr	r3, [pc, #48]	; (8000e1c <_Z11BSP_TS_Inittt+0x34>)
    TsYBoundary = YSize;

    /* Read ID and verify if the IO expander is ready */
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 8000dec:	4c0c      	ldr	r4, [pc, #48]	; (8000e20 <_Z11BSP_TS_Inittt+0x38>)
    TsXBoundary = XSize;
 8000dee:	8018      	strh	r0, [r3, #0]
    TsYBoundary = YSize;
 8000df0:	4b0c      	ldr	r3, [pc, #48]	; (8000e24 <_Z11BSP_TS_Inittt+0x3c>)
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 8000df2:	2082      	movs	r0, #130	; 0x82
    TsYBoundary = YSize;
 8000df4:	8019      	strh	r1, [r3, #0]
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 8000df6:	6863      	ldr	r3, [r4, #4]
 8000df8:	4798      	blx	r3
 8000dfa:	f640 0311 	movw	r3, #2065	; 0x811
 8000dfe:	4298      	cmp	r0, r3
 8000e00:	d10a      	bne.n	8000e18 <_Z11BSP_TS_Inittt+0x30>
    {
        /* Initialize the TS driver structure */
        TsDrv = &stmpe811_ts_drv;
 8000e02:	4d09      	ldr	r5, [pc, #36]	; (8000e28 <_Z11BSP_TS_Inittt+0x40>)
    }

    if (ret == TS_OK)
    {
        /* Initialize the LL TS Driver */
        TsDrv->Init(TS_I2C_ADDRESS);
 8000e04:	6823      	ldr	r3, [r4, #0]
        TsDrv = &stmpe811_ts_drv;
 8000e06:	602c      	str	r4, [r5, #0]
        TsDrv->Init(TS_I2C_ADDRESS);
 8000e08:	2082      	movs	r0, #130	; 0x82
 8000e0a:	4798      	blx	r3
        TsDrv->Start(TS_I2C_ADDRESS);
 8000e0c:	682b      	ldr	r3, [r5, #0]
 8000e0e:	2082      	movs	r0, #130	; 0x82
 8000e10:	68db      	ldr	r3, [r3, #12]
 8000e12:	4798      	blx	r3
        ret = TS_OK;
 8000e14:	2000      	movs	r0, #0
    }

    return ret;
}
 8000e16:	bd38      	pop	{r3, r4, r5, pc}
    uint8_t ret = TS_ERROR;
 8000e18:	2001      	movs	r0, #1
 8000e1a:	e7fc      	b.n	8000e16 <_Z11BSP_TS_Inittt+0x2e>
 8000e1c:	2000018c 	.word	0x2000018c
 8000e20:	2000005c 	.word	0x2000005c
 8000e24:	2000018e 	.word	0x2000018e
 8000e28:	20000190 	.word	0x20000190

08000e2c <_ZN20STM32TouchController4initEv>:
    BSP_TS_Init(240, 320);
 8000e2c:	f44f 71a0 	mov.w	r1, #320	; 0x140
 8000e30:	20f0      	movs	r0, #240	; 0xf0
 8000e32:	f7ff bfd9 	b.w	8000de8 <_Z11BSP_TS_Inittt>
	...

08000e38 <_Z15BSP_TS_GetStateP15TS_StateTypeDef>:
/**
  * @brief  Returns status and positions of the touch screen.
  * @param  TsState: Pointer to touch screen current state structure
  */
void BSP_TS_GetState(TS_StateTypeDef* TsState)
{
 8000e38:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    static uint32_t _x = 0, _y = 0;
    uint16_t xDiff, yDiff, x, y, xr, yr;

    TsState->TouchDetected = TsDrv->DetectTouch(TS_I2C_ADDRESS);
 8000e3a:	4d2c      	ldr	r5, [pc, #176]	; (8000eec <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xb4>)
 8000e3c:	682b      	ldr	r3, [r5, #0]
{
 8000e3e:	4604      	mov	r4, r0
    TsState->TouchDetected = TsDrv->DetectTouch(TS_I2C_ADDRESS);
 8000e40:	691b      	ldr	r3, [r3, #16]
 8000e42:	2082      	movs	r0, #130	; 0x82
 8000e44:	4798      	blx	r3
 8000e46:	b280      	uxth	r0, r0
 8000e48:	8020      	strh	r0, [r4, #0]

    if (TsState->TouchDetected)
 8000e4a:	2800      	cmp	r0, #0
 8000e4c:	d04b      	beq.n	8000ee6 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xae>
    {
        TsDrv->GetXY(TS_I2C_ADDRESS, &x, &y);
 8000e4e:	682b      	ldr	r3, [r5, #0]
 8000e50:	f10d 0206 	add.w	r2, sp, #6
 8000e54:	695b      	ldr	r3, [r3, #20]
 8000e56:	a901      	add	r1, sp, #4
 8000e58:	2082      	movs	r0, #130	; 0x82
 8000e5a:	4798      	blx	r3

        /* Y value first correction */
        y -= 360;
 8000e5c:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 8000e60:	f5a3 73b4 	sub.w	r3, r3, #360	; 0x168

        /* Y value second correction */
        yr = y / 11;
 8000e64:	b29b      	uxth	r3, r3
 8000e66:	220b      	movs	r2, #11
 8000e68:	fbb3 f3f2 	udiv	r3, r3, r2

        /* Return y position value */
        if (yr <= 0)
 8000e6c:	b133      	cbz	r3, 8000e7c <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x44>
        {
            yr = 0;
        }
        else if (yr > TsYBoundary)
 8000e6e:	4a20      	ldr	r2, [pc, #128]	; (8000ef0 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xb8>)
 8000e70:	8812      	ldrh	r2, [r2, #0]
 8000e72:	429a      	cmp	r2, r3
        {
            yr = TsYBoundary - 1;
 8000e74:	bf3c      	itt	cc
 8000e76:	f102 33ff 	addcc.w	r3, r2, #4294967295
 8000e7a:	b29b      	uxthcc	r3, r3
        else
        {}
        y = yr;

        /* X value first correction */
        if (x <= 3000)
 8000e7c:	f8bd 2004 	ldrh.w	r2, [sp, #4]
 8000e80:	f640 31b8 	movw	r1, #3000	; 0xbb8
 8000e84:	428a      	cmp	r2, r1
        {
            x = 3870 - x;
 8000e86:	bf95      	itete	ls
 8000e88:	f5c2 6271 	rsbls	r2, r2, #3856	; 0xf10
        }
        else
        {
            x = 3800 - x;
 8000e8c:	f5c2 626d 	rsbhi	r2, r2, #3792	; 0xed0
            x = 3870 - x;
 8000e90:	320e      	addls	r2, #14
            x = 3800 - x;
 8000e92:	3208      	addhi	r2, #8
 8000e94:	f8ad 2004 	strh.w	r2, [sp, #4]
        }

        /* X value second correction */
        xr = x / 15;
 8000e98:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 8000e9c:	220f      	movs	r2, #15
 8000e9e:	fbb1 f1f2 	udiv	r1, r1, r2

        /* Return X position value */
        if (xr <= 0)
 8000ea2:	b131      	cbz	r1, 8000eb2 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x7a>
        {
            xr = 0;
        }
        else if (xr > TsXBoundary)
 8000ea4:	4a13      	ldr	r2, [pc, #76]	; (8000ef4 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xbc>)
 8000ea6:	8812      	ldrh	r2, [r2, #0]
 8000ea8:	428a      	cmp	r2, r1
        {
            xr = TsXBoundary - 1;
 8000eaa:	bf3c      	itt	cc
 8000eac:	f102 31ff 	addcc.w	r1, r2, #4294967295
 8000eb0:	b289      	uxthcc	r1, r1
        }
        else
        {}

        x = xr;
        xDiff = x > _x ? (x - _x) : (_x - x);
 8000eb2:	4e11      	ldr	r6, [pc, #68]	; (8000ef8 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xc0>)
        yDiff = y > _y ? (y - _y) : (_y - y);
 8000eb4:	4d11      	ldr	r5, [pc, #68]	; (8000efc <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xc4>)
        xDiff = x > _x ? (x - _x) : (_x - x);
 8000eb6:	6830      	ldr	r0, [r6, #0]
        yDiff = y > _y ? (y - _y) : (_y - y);
 8000eb8:	682f      	ldr	r7, [r5, #0]
 8000eba:	b282      	uxth	r2, r0
        xDiff = x > _x ? (x - _x) : (_x - x);
 8000ebc:	4281      	cmp	r1, r0
 8000ebe:	bf88      	it	hi
 8000ec0:	1a8a      	subhi	r2, r1, r2
 8000ec2:	b2b8      	uxth	r0, r7
 8000ec4:	bf98      	it	ls
 8000ec6:	1a52      	subls	r2, r2, r1
        yDiff = y > _y ? (y - _y) : (_y - y);
 8000ec8:	42bb      	cmp	r3, r7
 8000eca:	bf8c      	ite	hi
 8000ecc:	1a18      	subhi	r0, r3, r0
 8000ece:	1ac0      	subls	r0, r0, r3
        xDiff = x > _x ? (x - _x) : (_x - x);
 8000ed0:	b292      	uxth	r2, r2
        yDiff = y > _y ? (y - _y) : (_y - y);
 8000ed2:	b280      	uxth	r0, r0

        if (xDiff + yDiff > 5)
 8000ed4:	4402      	add	r2, r0
 8000ed6:	2a05      	cmp	r2, #5
        {
            _x = x;
 8000ed8:	bfc4      	itt	gt
 8000eda:	6031      	strgt	r1, [r6, #0]
            _y = y;
 8000edc:	602b      	strgt	r3, [r5, #0]
        }

        /* Update the X position */
        TsState->X = _x;
 8000ede:	6833      	ldr	r3, [r6, #0]
 8000ee0:	8063      	strh	r3, [r4, #2]

        /* Update the Y position */
        TsState->Y = _y;
 8000ee2:	682b      	ldr	r3, [r5, #0]
 8000ee4:	80a3      	strh	r3, [r4, #4]
    }
}
 8000ee6:	b003      	add	sp, #12
 8000ee8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8000eea:	bf00      	nop
 8000eec:	20000190 	.word	0x20000190
 8000ef0:	2000018e 	.word	0x2000018e
 8000ef4:	2000018c 	.word	0x2000018c
 8000ef8:	20000194 	.word	0x20000194
 8000efc:	20000198 	.word	0x20000198

08000f00 <_ZN20STM32TouchController11sampleTouchERlS0_>:
{
 8000f00:	b537      	push	{r0, r1, r2, r4, r5, lr}
    BSP_TS_GetState(&state);
 8000f02:	4668      	mov	r0, sp
{
 8000f04:	460d      	mov	r5, r1
 8000f06:	4614      	mov	r4, r2
    BSP_TS_GetState(&state);
 8000f08:	f7ff ff96 	bl	8000e38 <_Z15BSP_TS_GetStateP15TS_StateTypeDef>
    if (state.TouchDetected)
 8000f0c:	f8bd 0000 	ldrh.w	r0, [sp]
 8000f10:	b130      	cbz	r0, 8000f20 <_ZN20STM32TouchController11sampleTouchERlS0_+0x20>
        x = state.X;
 8000f12:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8000f16:	602b      	str	r3, [r5, #0]
        y = state.Y;
 8000f18:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8000f1c:	6023      	str	r3, [r4, #0]
        return true;
 8000f1e:	2001      	movs	r0, #1
}
 8000f20:	b003      	add	sp, #12
 8000f22:	bd30      	pop	{r4, r5, pc}

08000f24 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>:
 * Sets a pin high.
 */
void GPIO::set(GPIO_ID id)
{

}
 8000f24:	4770      	bx	lr

08000f26 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>:
 8000f26:	4770      	bx	lr

08000f28 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>:
 8000f28:	4770      	bx	lr

08000f2a <_ZN8touchgfx3HAL21setDisplayOrientationENS_18DisplayOrientationE>:
     * @note A screen transition must occur before this takes effect!
     */
    virtual void setDisplayOrientation(DisplayOrientation orientation)
    {
        requestedOrientation = orientation;
        displayOrientationChangeRequested = true;
 8000f2a:	2301      	movs	r3, #1
        requestedOrientation = orientation;
 8000f2c:	f880 1074 	strb.w	r1, [r0, #116]	; 0x74
        displayOrientationChangeRequested = true;
 8000f30:	f880 3075 	strb.w	r3, [r0, #117]	; 0x75
    }
 8000f34:	4770      	bx	lr

08000f36 <_ZN8touchgfx3HAL9sampleKeyERh>:
     * @return True if a keypress was detected and the "key" parameter is set to a value.
     */
    virtual bool sampleKey(uint8_t& key)
    {
        return false;
    }
 8000f36:	2000      	movs	r0, #0
 8000f38:	4770      	bx	lr

08000f3a <_ZNK8touchgfx3HAL18getFlashDataReaderEv>:
     * @return the FlashDataReader.
     */
    virtual FlashDataReader* getFlashDataReader() const
    {
        return 0;
    }
 8000f3a:	2000      	movs	r0, #0
 8000f3c:	4770      	bx	lr

08000f3e <_ZN8touchgfx3HAL9taskDelayEt>:
     *
     * @see registerTaskDelayFunction
     */
    virtual void taskDelay(uint16_t ms)
    {
        if (taskDelayFunc)
 8000f3e:	6b83      	ldr	r3, [r0, #56]	; 0x38
 8000f40:	b10b      	cbz	r3, 8000f46 <_ZN8touchgfx3HAL9taskDelayEt+0x8>
        {
            taskDelayFunc(ms);
 8000f42:	4608      	mov	r0, r1
 8000f44:	4718      	bx	r3
        }
    }
 8000f46:	4770      	bx	lr

08000f48 <_ZN8touchgfx3HAL17getTFTCurrentLineEv>:
     *         implemented".
     */
    virtual uint16_t getTFTCurrentLine()
    {
        return 0xFFFFu;
    }
 8000f48:	f64f 70ff 	movw	r0, #65535	; 0xffff
 8000f4c:	4770      	bx	lr

08000f4e <_ZN8touchgfx3HAL10getDMATypeEv>:
     *
     * @return a DMAType value of the concrete DMA implementation.
     */
    virtual DMAType getDMAType()
    {
        return dma.getDMAType();
 8000f4e:	6840      	ldr	r0, [r0, #4]
 8000f50:	6803      	ldr	r3, [r0, #0]
 8000f52:	699b      	ldr	r3, [r3, #24]
 8000f54:	4718      	bx	r3

08000f56 <_ZN11TouchGFXHALD1Ev>:
 *
 * @brief HAL implementation for TouchGFX.
 *
 * @sa HAL
 */
class TouchGFXHAL : public TouchGFXGeneratedHAL
 8000f56:	4770      	bx	lr

08000f58 <_ZN11TouchGFXHAL9taskEntryEv>:

    TouchGFXGeneratedHAL::initialize();
}

void TouchGFXHAL::taskEntry()
{
 8000f58:	b508      	push	{r3, lr}
    enableLCDControllerInterrupt();
 8000f5a:	6803      	ldr	r3, [r0, #0]
{
 8000f5c:	4604      	mov	r4, r0
    enableLCDControllerInterrupt();
 8000f5e:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 8000f60:	4798      	blx	r3
    enableInterrupts();
 8000f62:	6823      	ldr	r3, [r4, #0]
 8000f64:	4620      	mov	r0, r4
 8000f66:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8000f68:	4798      	blx	r3

    OSWrappers::waitForVSync();
 8000f6a:	f000 f957 	bl	800121c <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
    backPorchExited();
 8000f6e:	6823      	ldr	r3, [r4, #0]
 8000f70:	4620      	mov	r0, r4
 8000f72:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8000f74:	4798      	blx	r3

    LCD_IO_WriteReg(0x29);
 8000f76:	2029      	movs	r0, #41	; 0x29
 8000f78:	f001 f8b2 	bl	80020e0 <LCD_IO_WriteReg>

    for (;;)
    {
        OSWrappers::waitForVSync();
 8000f7c:	f000 f94e 	bl	800121c <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
        backPorchExited();
 8000f80:	6823      	ldr	r3, [r4, #0]
 8000f82:	4620      	mov	r0, r4
 8000f84:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8000f86:	4798      	blx	r3
 8000f88:	e7f8      	b.n	8000f7c <_ZN11TouchGFXHAL9taskEntryEv+0x24>

08000f8a <_ZN8touchgfx3HAL15backPorchExitedEv>:
    virtual void backPorchExited()
 8000f8a:	b510      	push	{r4, lr}
 8000f8c:	4604      	mov	r4, r0
        swapFrameBuffers();
 8000f8e:	f009 f8ff 	bl	800a190 <_ZN8touchgfx3HAL16swapFrameBuffersEv>
        tick();
 8000f92:	6823      	ldr	r3, [r4, #0]
 8000f94:	4620      	mov	r0, r4
 8000f96:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
    }
 8000f9a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        tick();
 8000f9e:	4718      	bx	r3

08000fa0 <_ZNK11TouchGFXHAL17getTFTFrameBufferEv>:
    // Calling parent implementation of getTFTFrameBuffer().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    return TouchGFXGeneratedHAL::getTFTFrameBuffer();
 8000fa0:	f000 bcb6 	b.w	8001910 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>

08000fa4 <_ZN11TouchGFXHAL17setTFTFrameBufferEPt>:
    // Calling parent implementation of setTFTFrameBuffer(uint16_t* address).
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::setTFTFrameBuffer(address);
 8000fa4:	f000 bcba 	b.w	800191c <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>

08000fa8 <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE>:
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::flushFrameBuffer(const touchgfx::Rect& rect) must
    // be called to notify the touchgfx framework that flush has been performed.

    TouchGFXGeneratedHAL::flushFrameBuffer(rect);
 8000fa8:	f000 bcc0 	b.w	800192c <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>

08000fac <_ZN11TouchGFXHAL19configureInterruptsEv>:
    // Calling parent implementation of configureInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::configureInterrupts();
 8000fac:	f000 bc8c 	b.w	80018c8 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>

08000fb0 <_ZN11TouchGFXHAL16enableInterruptsEv>:
    // Calling parent implementation of enableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableInterrupts();
 8000fb0:	f000 bcbe 	b.w	8001930 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>

08000fb4 <_ZN11TouchGFXHAL17disableInterruptsEv>:
    // Calling parent implementation of disableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::disableInterrupts();
 8000fb4:	f000 bcc6 	b.w	8001944 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>

08000fb8 <_ZN11TouchGFXHAL28enableLCDControllerInterruptEv>:
    // Calling parent implementation of enableLCDControllerInterrupt().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableLCDControllerInterrupt();
 8000fb8:	f000 bc90 	b.w	80018dc <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>

08000fbc <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_>:
    virtual void setFrameBufferStartAddresses(void* frameBuffer, void* doubleBuffer, void* animationStorage)
 8000fbc:	b508      	push	{r3, lr}
        assert(frameBuffer != 0 && "A framebuffer address must be set");
 8000fbe:	b931      	cbnz	r1, 8000fce <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x12>
 8000fc0:	4b0a      	ldr	r3, [pc, #40]	; (8000fec <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x30>)
 8000fc2:	4a0b      	ldr	r2, [pc, #44]	; (8000ff0 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x34>)
 8000fc4:	480b      	ldr	r0, [pc, #44]	; (8000ff4 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x38>)
 8000fc6:	f44f 7127 	mov.w	r1, #668	; 0x29c
 8000fca:	f018 fa1f 	bl	801940c <__assert_func>
        frameBuffer1 = reinterpret_cast<uint16_t*>(doubleBuffer);
 8000fce:	e9c0 120f 	strd	r1, r2, [r0, #60]	; 0x3c
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
 8000fd2:	3200      	adds	r2, #0
 8000fd4:	4908      	ldr	r1, [pc, #32]	; (8000ff8 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x3c>)
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
 8000fd6:	6443      	str	r3, [r0, #68]	; 0x44
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
 8000fd8:	bf18      	it	ne
 8000fda:	2201      	movne	r2, #1
 8000fdc:	700a      	strb	r2, [r1, #0]
        USE_ANIMATION_STORAGE = animationStorage != 0;
 8000fde:	3300      	adds	r3, #0
 8000fe0:	4a06      	ldr	r2, [pc, #24]	; (8000ffc <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x40>)
 8000fe2:	bf18      	it	ne
 8000fe4:	2301      	movne	r3, #1
 8000fe6:	7013      	strb	r3, [r2, #0]
    }
 8000fe8:	bd08      	pop	{r3, pc}
 8000fea:	bf00      	nop
 8000fec:	0801a4ad 	.word	0x0801a4ad
 8000ff0:	0801a638 	.word	0x0801a638
 8000ff4:	0801a4e5 	.word	0x0801a4e5
 8000ff8:	20012186 	.word	0x20012186
 8000ffc:	20012187 	.word	0x20012187

08001000 <_ZN8touchgfx3HAL26setFrameBufferStartAddressEPvtbb>:
    TOUCHGFX_DEPRECATED(
 8001000:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8001004:	4699      	mov	r9, r3
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 8001006:	4b1c      	ldr	r3, [pc, #112]	; (8001078 <_ZN8touchgfx3HAL26setFrameBufferStartAddressEPvtbb+0x78>)
    TOUCHGFX_DEPRECATED(
 8001008:	f89d 5020 	ldrb.w	r5, [sp, #32]
 800100c:	4688      	mov	r8, r1
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 800100e:	6819      	ldr	r1, [r3, #0]
 8001010:	f891 3076 	ldrb.w	r3, [r1, #118]	; 0x76
    TOUCHGFX_DEPRECATED(
 8001014:	4607      	mov	r7, r0
 8001016:	4614      	mov	r4, r2
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 8001018:	b10b      	cbz	r3, 800101e <_ZN8touchgfx3HAL26setFrameBufferStartAddressEPvtbb+0x1e>
 800101a:	6cc8      	ldr	r0, [r1, #76]	; 0x4c
 800101c:	b900      	cbnz	r0, 8001020 <_ZN8touchgfx3HAL26setFrameBufferStartAddressEPvtbb+0x20>
            return instance->lcdRef;
 800101e:	6888      	ldr	r0, [r1, #8]
        uint16_t stride = lcd().framebufferStride();
 8001020:	6803      	ldr	r3, [r0, #0]
 8001022:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8001024:	4798      	blx	r3
        uint32_t bufferSizeInBytes = stride * FRAME_BUFFER_HEIGHT;
 8001026:	4b15      	ldr	r3, [pc, #84]	; (800107c <_ZN8touchgfx3HAL26setFrameBufferStartAddressEPvtbb+0x7c>)
 8001028:	881e      	ldrh	r6, [r3, #0]
 800102a:	4370      	muls	r0, r6
        if (useDoubleBuffering)
 800102c:	f1b9 0f00 	cmp.w	r9, #0
 8001030:	d016      	beq.n	8001060 <_ZN8touchgfx3HAL26setFrameBufferStartAddressEPvtbb+0x60>
            ptr += bufferSizeInBytes; // Move past used buffer (framebuffer)
 8001032:	eb08 0100 	add.w	r1, r8, r0
            double_buf = (void*)ptr;
 8001036:	460a      	mov	r2, r1
        if (useAnimationStorage)
 8001038:	b1ad      	cbz	r5, 8001066 <_ZN8touchgfx3HAL26setFrameBufferStartAddressEPvtbb+0x66>
            ptr += bufferSizeInBytes; // Move past used buffer (framebuffer and possibly double buffer)
 800103a:	180b      	adds	r3, r1, r0
 800103c:	3c01      	subs	r4, #1
 800103e:	b2a4      	uxth	r4, r4
 8001040:	2c1f      	cmp	r4, #31
 8001042:	d812      	bhi.n	800106a <_ZN8touchgfx3HAL26setFrameBufferStartAddressEPvtbb+0x6a>
 8001044:	2101      	movs	r1, #1
 8001046:	fa01 f404 	lsl.w	r4, r1, r4
 800104a:	490d      	ldr	r1, [pc, #52]	; (8001080 <_ZN8touchgfx3HAL26setFrameBufferStartAddressEPvtbb+0x80>)
 800104c:	4021      	ands	r1, r4
 800104e:	b161      	cbz	r1, 800106a <_ZN8touchgfx3HAL26setFrameBufferStartAddressEPvtbb+0x6a>
            setFrameBufferStartAddresses(adr, double_buf, anim_store);
 8001050:	6839      	ldr	r1, [r7, #0]
 8001052:	6f4c      	ldr	r4, [r1, #116]	; 0x74
 8001054:	4638      	mov	r0, r7
 8001056:	4641      	mov	r1, r8
 8001058:	46a4      	mov	ip, r4
    }
 800105a:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
            setFrameBufferStartAddresses(adr, double_buf, anim_store);
 800105e:	4760      	bx	ip
        uint8_t* ptr = (uint8_t*)adr;
 8001060:	4641      	mov	r1, r8
        void* double_buf = 0;
 8001062:	464a      	mov	r2, r9
 8001064:	e7e8      	b.n	8001038 <_ZN8touchgfx3HAL26setFrameBufferStartAddressEPvtbb+0x38>
        void* anim_store = 0;
 8001066:	462b      	mov	r3, r5
 8001068:	e7e8      	b.n	800103c <_ZN8touchgfx3HAL26setFrameBufferStartAddressEPvtbb+0x3c>
            assert(0 && "Unsupported bit depth");
 800106a:	4b06      	ldr	r3, [pc, #24]	; (8001084 <_ZN8touchgfx3HAL26setFrameBufferStartAddressEPvtbb+0x84>)
 800106c:	4a06      	ldr	r2, [pc, #24]	; (8001088 <_ZN8touchgfx3HAL26setFrameBufferStartAddressEPvtbb+0x88>)
 800106e:	4807      	ldr	r0, [pc, #28]	; (800108c <_ZN8touchgfx3HAL26setFrameBufferStartAddressEPvtbb+0x8c>)
 8001070:	f240 2189 	movw	r1, #649	; 0x289
 8001074:	f018 f9ca 	bl	801940c <__assert_func>
 8001078:	20012188 	.word	0x20012188
 800107c:	20012184 	.word	0x20012184
 8001080:	8080808b 	.word	0x8080808b
 8001084:	0801a490 	.word	0x0801a490
 8001088:	0801a5e4 	.word	0x0801a5e4
 800108c:	0801a4e5 	.word	0x0801a4e5

08001090 <_ZN11TouchGFXHAL16flushFrameBufferEv>:
     * Rect version.
     * @see HAL::flushFrameBuffer
     */
    virtual void flushFrameBuffer()
    {
        HAL::flushFrameBuffer();
 8001090:	f008 bb0f 	b.w	80096b2 <_ZN8touchgfx3HAL16flushFrameBufferEv>

08001094 <_ZN11TouchGFXHALD0Ev>:
 8001094:	b510      	push	{r4, lr}
 8001096:	2178      	movs	r1, #120	; 0x78
 8001098:	4604      	mov	r4, r0
 800109a:	f018 f98b 	bl	80193b4 <_ZdlPvj>
 800109e:	4620      	mov	r0, r4
 80010a0:	bd10      	pop	{r4, pc}

080010a2 <_ZN8touchgfx3HAL11getBlitCapsEv>:
        if (useDMAAcceleration)
 80010a2:	f890 3077 	ldrb.w	r3, [r0, #119]	; 0x77
 80010a6:	b11b      	cbz	r3, 80010b0 <_ZN8touchgfx3HAL11getBlitCapsEv+0xe>
            return dma.getBlitCaps();
 80010a8:	6840      	ldr	r0, [r0, #4]
 80010aa:	6803      	ldr	r3, [r0, #0]
 80010ac:	681b      	ldr	r3, [r3, #0]
 80010ae:	4718      	bx	r3
    }
 80010b0:	4618      	mov	r0, r3
 80010b2:	4770      	bx	lr

080010b4 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv>:

    /** Called by the touch driver to indicate that no touch is currently detected. */
    virtual void noTouch();

    /** Perform the actual display orientation change. */
    virtual void performDisplayOrientationChange()
 80010b4:	b530      	push	{r4, r5, lr}
    {
        if (requestedOrientation != nativeDisplayOrientation)
 80010b6:	f890 1034 	ldrb.w	r1, [r0, #52]	; 0x34
 80010ba:	f890 4074 	ldrb.w	r4, [r0, #116]	; 0x74
 80010be:	4b10      	ldr	r3, [pc, #64]	; (8001100 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x4c>)
 80010c0:	428c      	cmp	r4, r1
 80010c2:	781a      	ldrb	r2, [r3, #0]
 80010c4:	d00d      	beq.n	80010e2 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x2e>
        {
            if (DISPLAY_ROTATION == rotate0)
 80010c6:	b95a      	cbnz	r2, 80010e0 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x2c>
            {
                FRAME_BUFFER_WIDTH = DISPLAY_WIDTH;
 80010c8:	4a0e      	ldr	r2, [pc, #56]	; (8001104 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x50>)
 80010ca:	490f      	ldr	r1, [pc, #60]	; (8001108 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x54>)
                FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT;
 80010cc:	480f      	ldr	r0, [pc, #60]	; (800110c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x58>)
                FRAME_BUFFER_WIDTH = DISPLAY_WIDTH;
 80010ce:	8814      	ldrh	r4, [r2, #0]
                FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT;
 80010d0:	4d0f      	ldr	r5, [pc, #60]	; (8001110 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x5c>)
                FRAME_BUFFER_WIDTH = DISPLAY_WIDTH;
 80010d2:	800c      	strh	r4, [r1, #0]
                FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT;
 80010d4:	8801      	ldrh	r1, [r0, #0]
                DISPLAY_HEIGHT = FRAME_BUFFER_WIDTH;
                DISPLAY_WIDTH = FRAME_BUFFER_HEIGHT;
 80010d6:	8011      	strh	r1, [r2, #0]
                FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT;
 80010d8:	8029      	strh	r1, [r5, #0]
                DISPLAY_HEIGHT = FRAME_BUFFER_WIDTH;
 80010da:	8004      	strh	r4, [r0, #0]
                DISPLAY_ROTATION = rotate90;
 80010dc:	2201      	movs	r2, #1
        {
            FRAME_BUFFER_WIDTH = DISPLAY_HEIGHT;
            FRAME_BUFFER_HEIGHT = DISPLAY_WIDTH;
            DISPLAY_HEIGHT = FRAME_BUFFER_HEIGHT;
            DISPLAY_WIDTH = FRAME_BUFFER_WIDTH;
            DISPLAY_ROTATION = rotate0;
 80010de:	701a      	strb	r2, [r3, #0]
        }
    }
 80010e0:	bd30      	pop	{r4, r5, pc}
        else if (DISPLAY_ROTATION != rotate0)
 80010e2:	2a00      	cmp	r2, #0
 80010e4:	d0fc      	beq.n	80010e0 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x2c>
            FRAME_BUFFER_WIDTH = DISPLAY_HEIGHT;
 80010e6:	4809      	ldr	r0, [pc, #36]	; (800110c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x58>)
 80010e8:	4a07      	ldr	r2, [pc, #28]	; (8001108 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x54>)
 80010ea:	8801      	ldrh	r1, [r0, #0]
 80010ec:	8011      	strh	r1, [r2, #0]
            FRAME_BUFFER_HEIGHT = DISPLAY_WIDTH;
 80010ee:	4a05      	ldr	r2, [pc, #20]	; (8001104 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x50>)
 80010f0:	4d07      	ldr	r5, [pc, #28]	; (8001110 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x5c>)
 80010f2:	8814      	ldrh	r4, [r2, #0]
 80010f4:	802c      	strh	r4, [r5, #0]
            DISPLAY_WIDTH = FRAME_BUFFER_WIDTH;
 80010f6:	8011      	strh	r1, [r2, #0]
            DISPLAY_HEIGHT = FRAME_BUFFER_HEIGHT;
 80010f8:	8004      	strh	r4, [r0, #0]
            DISPLAY_ROTATION = rotate0;
 80010fa:	2200      	movs	r2, #0
 80010fc:	e7ef      	b.n	80010de <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x2a>
 80010fe:	bf00      	nop
 8001100:	20012180 	.word	0x20012180
 8001104:	2001217c 	.word	0x2001217c
 8001108:	20012182 	.word	0x20012182
 800110c:	2001217e 	.word	0x2001217e
 8001110:	20012184 	.word	0x20012184

08001114 <_ZN11TouchGFXHAL10initializeEv>:
    TouchGFXGeneratedHAL::initialize();
 8001114:	f000 bc2a 	b.w	800196c <_ZN20TouchGFXGeneratedHAL10initializeEv>

08001118 <_ZN8touchgfx10OSWrappers10initializeEv>:
 * Initialize frame buffer semaphore and queue/mutex for VSYNC signal.
 */
void OSWrappers::initialize()
{
    // Create a queue of length 1
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 8001118:	2101      	movs	r1, #1
{
 800111a:	b508      	push	{r3, lr}
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 800111c:	2200      	movs	r2, #0
 800111e:	4608      	mov	r0, r1
 8001120:	f005 fcaa 	bl	8006a78 <osSemaphoreNew>
 8001124:	4b06      	ldr	r3, [pc, #24]	; (8001140 <_ZN8touchgfx10OSWrappers10initializeEv+0x28>)
    osSemaphoreAcquire(frame_buffer_sem, osWaitForever); // take the lock
 8001126:	f04f 31ff 	mov.w	r1, #4294967295
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 800112a:	6018      	str	r0, [r3, #0]
    osSemaphoreAcquire(frame_buffer_sem, osWaitForever); // take the lock
 800112c:	f005 fcfa 	bl	8006b24 <osSemaphoreAcquire>

    // Create a queue of length 1
    vsync_queue = osMessageQueueNew(1, 4, NULL);
 8001130:	2200      	movs	r2, #0
 8001132:	2104      	movs	r1, #4
 8001134:	2001      	movs	r0, #1
 8001136:	f005 fd69 	bl	8006c0c <osMessageQueueNew>
 800113a:	4b02      	ldr	r3, [pc, #8]	; (8001144 <_ZN8touchgfx10OSWrappers10initializeEv+0x2c>)
 800113c:	6018      	str	r0, [r3, #0]
}
 800113e:	bd08      	pop	{r3, pc}
 8001140:	200001a0 	.word	0x200001a0
 8001144:	2000019c 	.word	0x2000019c

08001148 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>:

/*
 * Take the frame buffer semaphore. Blocks until semaphore is available.
 */
void OSWrappers::takeFrameBufferSemaphore()
{
 8001148:	b508      	push	{r3, lr}
    assert(frame_buffer_sem);
 800114a:	4b07      	ldr	r3, [pc, #28]	; (8001168 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0x20>)
 800114c:	6818      	ldr	r0, [r3, #0]
 800114e:	b928      	cbnz	r0, 800115c <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0x14>
 8001150:	4b06      	ldr	r3, [pc, #24]	; (800116c <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0x24>)
 8001152:	4a07      	ldr	r2, [pc, #28]	; (8001170 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0x28>)
 8001154:	4807      	ldr	r0, [pc, #28]	; (8001174 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0x2c>)
 8001156:	2131      	movs	r1, #49	; 0x31
 8001158:	f018 f958 	bl	801940c <__assert_func>
    osSemaphoreAcquire(frame_buffer_sem, osWaitForever);
 800115c:	f04f 31ff 	mov.w	r1, #4294967295
}
 8001160:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    osSemaphoreAcquire(frame_buffer_sem, osWaitForever);
 8001164:	f005 bcde 	b.w	8006b24 <osSemaphoreAcquire>
 8001168:	200001a0 	.word	0x200001a0
 800116c:	0801a686 	.word	0x0801a686
 8001170:	0801a722 	.word	0x0801a722
 8001174:	0801a697 	.word	0x0801a697

08001178 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>:

/*
 * Release the frame buffer semaphore.
 */
void OSWrappers::giveFrameBufferSemaphore()
{
 8001178:	b508      	push	{r3, lr}
    assert(frame_buffer_sem);
 800117a:	4b06      	ldr	r3, [pc, #24]	; (8001194 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv+0x1c>)
 800117c:	6818      	ldr	r0, [r3, #0]
 800117e:	b928      	cbnz	r0, 800118c <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv+0x14>
 8001180:	4b05      	ldr	r3, [pc, #20]	; (8001198 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv+0x20>)
 8001182:	4a06      	ldr	r2, [pc, #24]	; (800119c <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv+0x24>)
 8001184:	4806      	ldr	r0, [pc, #24]	; (80011a0 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv+0x28>)
 8001186:	213a      	movs	r1, #58	; 0x3a
 8001188:	f018 f940 	bl	801940c <__assert_func>
    osSemaphoreRelease(frame_buffer_sem);
}
 800118c:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    osSemaphoreRelease(frame_buffer_sem);
 8001190:	f005 bd04 	b.w	8006b9c <osSemaphoreRelease>
 8001194:	200001a0 	.word	0x200001a0
 8001198:	0801a686 	.word	0x0801a686
 800119c:	0801a6e5 	.word	0x0801a6e5
 80011a0:	0801a697 	.word	0x0801a697

080011a4 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>:
 *
 * Note must return immediately! This function does not care who has the taken the semaphore,
 * it only serves to make sure that the semaphore is taken by someone.
 */
void OSWrappers::tryTakeFrameBufferSemaphore()
{
 80011a4:	b508      	push	{r3, lr}
    assert(frame_buffer_sem);
 80011a6:	4b07      	ldr	r3, [pc, #28]	; (80011c4 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv+0x20>)
 80011a8:	6818      	ldr	r0, [r3, #0]
 80011aa:	b928      	cbnz	r0, 80011b8 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv+0x14>
 80011ac:	4b06      	ldr	r3, [pc, #24]	; (80011c8 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv+0x24>)
 80011ae:	4a07      	ldr	r2, [pc, #28]	; (80011cc <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv+0x28>)
 80011b0:	4807      	ldr	r0, [pc, #28]	; (80011d0 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv+0x2c>)
 80011b2:	2147      	movs	r1, #71	; 0x47
 80011b4:	f018 f92a 	bl	801940c <__assert_func>
    osSemaphoreAcquire(frame_buffer_sem, 0);
 80011b8:	2100      	movs	r1, #0
}
 80011ba:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    osSemaphoreAcquire(frame_buffer_sem, 0);
 80011be:	f005 bcb1 	b.w	8006b24 <osSemaphoreAcquire>
 80011c2:	bf00      	nop
 80011c4:	200001a0 	.word	0x200001a0
 80011c8:	0801a686 	.word	0x0801a686
 80011cc:	0801a75f 	.word	0x0801a75f
 80011d0:	0801a697 	.word	0x0801a697

080011d4 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>:
 *
 * Release the frame buffer semaphore in a way that is safe in interrupt context.
 * Called from ISR.
 */
void OSWrappers::giveFrameBufferSemaphoreFromISR()
{
 80011d4:	b508      	push	{r3, lr}
    assert(frame_buffer_sem);
 80011d6:	4b06      	ldr	r3, [pc, #24]	; (80011f0 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv+0x1c>)
 80011d8:	6818      	ldr	r0, [r3, #0]
 80011da:	b928      	cbnz	r0, 80011e8 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv+0x14>
 80011dc:	4b05      	ldr	r3, [pc, #20]	; (80011f4 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv+0x20>)
 80011de:	4a06      	ldr	r2, [pc, #24]	; (80011f8 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv+0x24>)
 80011e0:	4806      	ldr	r0, [pc, #24]	; (80011fc <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv+0x28>)
 80011e2:	2154      	movs	r1, #84	; 0x54
 80011e4:	f018 f912 	bl	801940c <__assert_func>
    osSemaphoreRelease(frame_buffer_sem);
}
 80011e8:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    osSemaphoreRelease(frame_buffer_sem);
 80011ec:	f005 bcd6 	b.w	8006b9c <osSemaphoreRelease>
 80011f0:	200001a0 	.word	0x200001a0
 80011f4:	0801a686 	.word	0x0801a686
 80011f8:	0801a79f 	.word	0x0801a79f
 80011fc:	0801a697 	.word	0x0801a697

08001200 <_ZN8touchgfx10OSWrappers11signalVSyncEv>:
 * Note This function is called from an ISR, and should (depending on OS) trigger a
 * scheduling.
 */
void OSWrappers::signalVSync()
{
    if (vsync_queue)
 8001200:	4b04      	ldr	r3, [pc, #16]	; (8001214 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x14>)
 8001202:	6818      	ldr	r0, [r3, #0]
 8001204:	b120      	cbz	r0, 8001210 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x10>
    {
        osMessageQueuePut(vsync_queue, &dummy, 0, 0);
 8001206:	2300      	movs	r3, #0
 8001208:	461a      	mov	r2, r3
 800120a:	4903      	ldr	r1, [pc, #12]	; (8001218 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x18>)
 800120c:	f005 bd44 	b.w	8006c98 <osMessageQueuePut>
    }
}
 8001210:	4770      	bx	lr
 8001212:	bf00      	nop
 8001214:	2000019c 	.word	0x2000019c
 8001218:	20000004 	.word	0x20000004

0800121c <_ZN8touchgfx10OSWrappers12waitForVSyncEv>:
 *
 * Note This function must first clear the mutex/queue and then wait for the next one to
 * occur.
 */
void OSWrappers::waitForVSync()
{
 800121c:	b513      	push	{r0, r1, r4, lr}
    if (vsync_queue)
 800121e:	4c08      	ldr	r4, [pc, #32]	; (8001240 <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x24>)
 8001220:	6820      	ldr	r0, [r4, #0]
 8001222:	b158      	cbz	r0, 800123c <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x20>
    {
        uint32_t dummyGet;
        // First make sure the queue is empty, by trying to remove an element with 0 timeout.
        osMessageQueueGet(vsync_queue, &dummyGet, 0, 0);
 8001224:	2300      	movs	r3, #0
 8001226:	461a      	mov	r2, r3
 8001228:	a901      	add	r1, sp, #4
 800122a:	f005 fd77 	bl	8006d1c <osMessageQueueGet>

        // Then, wait for next VSYNC to occur.
        osMessageQueueGet(vsync_queue, &dummyGet, 0, osWaitForever);
 800122e:	f04f 33ff 	mov.w	r3, #4294967295
 8001232:	2200      	movs	r2, #0
 8001234:	a901      	add	r1, sp, #4
 8001236:	6820      	ldr	r0, [r4, #0]
 8001238:	f005 fd70 	bl	8006d1c <osMessageQueueGet>
    }
}
 800123c:	b002      	add	sp, #8
 800123e:	bd10      	pop	{r4, pc}
 8001240:	2000019c 	.word	0x2000019c

08001244 <_ZN8touchgfx13DMA_Interface5flushEv>:
    virtual void addToQueue(const BlitOp& op);

    /** This function blocks until all DMA transfers in the queue have been completed. */
    virtual void flush()
    {
        waitForFrameBufferSemaphore();
 8001244:	6803      	ldr	r3, [r0, #0]
 8001246:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8001248:	4718      	bx	r3

0800124a <_ZN8touchgfx13DMA_Interface10getDMATypeEv>:
     * @return a DMAType value of the concrete DMA_Interface implementation.
     */
    virtual DMAType getDMAType(void)
    {
        return DMA_TYPE_GENERIC;
    }
 800124a:	2000      	movs	r0, #0
 800124c:	4770      	bx	lr

0800124e <_ZN10STM32F4DMA18signalDMAInterruptEv>:
     *
     *        Raises a DMA interrupt signal.
     */
    virtual void signalDMAInterrupt()
    {
        executeCompleted();
 800124e:	6803      	ldr	r3, [r0, #0]
 8001250:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8001252:	4718      	bx	r3

08001254 <_ZN10STM32F4DMA11getBlitCapsEv>:
                                       | BLIT_OP_COPY_WITH_ALPHA
                                       | BLIT_OP_COPY_ARGB8888
                                       | BLIT_OP_COPY_ARGB8888_WITH_ALPHA
                                       | BLIT_OP_COPY_A4
                                       | BLIT_OP_COPY_A8);
}
 8001254:	f240 10ef 	movw	r0, #495	; 0x1ef
 8001258:	4770      	bx	lr
	...

0800125c <_ZN10STM32F4DMA10initializeEv>:
{
 800125c:	b510      	push	{r4, lr}
    hdma2d.Instance = DMA2D;
 800125e:	4c07      	ldr	r4, [pc, #28]	; (800127c <_ZN10STM32F4DMA10initializeEv+0x20>)
 8001260:	4b07      	ldr	r3, [pc, #28]	; (8001280 <_ZN10STM32F4DMA10initializeEv+0x24>)
 8001262:	6023      	str	r3, [r4, #0]
    HAL_DMA2D_Init(&hdma2d);
 8001264:	4620      	mov	r0, r4
 8001266:	f002 fedf 	bl	8004028 <HAL_DMA2D_Init>
    hdma2d.XferCpltCallback = DMA2D_XferCpltCallback;
 800126a:	4b06      	ldr	r3, [pc, #24]	; (8001284 <_ZN10STM32F4DMA10initializeEv+0x28>)
 800126c:	6123      	str	r3, [r4, #16]
    hdma2d.XferErrorCallback = DMA2D_XferErrorCallback;
 800126e:	4b06      	ldr	r3, [pc, #24]	; (8001288 <_ZN10STM32F4DMA10initializeEv+0x2c>)
 8001270:	6163      	str	r3, [r4, #20]
 */
__STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8001272:	4b06      	ldr	r3, [pc, #24]	; (800128c <_ZN10STM32F4DMA10initializeEv+0x30>)
 8001274:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 8001278:	609a      	str	r2, [r3, #8]
}
 800127a:	bd10      	pop	{r4, pc}
 800127c:	200127e4 	.word	0x200127e4
 8001280:	4002b000 	.word	0x4002b000
 8001284:	080012ad 	.word	0x080012ad
 8001288:	08001291 	.word	0x08001291
 800128c:	e000e100 	.word	0xe000e100

08001290 <DMA2D_XferErrorCallback>:
    {
 8001290:	b508      	push	{r3, lr}
        assert(0);
 8001292:	4a03      	ldr	r2, [pc, #12]	; (80012a0 <DMA2D_XferErrorCallback+0x10>)
 8001294:	4b03      	ldr	r3, [pc, #12]	; (80012a4 <DMA2D_XferErrorCallback+0x14>)
 8001296:	4804      	ldr	r0, [pc, #16]	; (80012a8 <DMA2D_XferErrorCallback+0x18>)
 8001298:	2136      	movs	r1, #54	; 0x36
 800129a:	f018 f8b7 	bl	801940c <__assert_func>
 800129e:	bf00      	nop
 80012a0:	0801a880 	.word	0x0801a880
 80012a4:	0801ae53 	.word	0x0801ae53
 80012a8:	0801a7e3 	.word	0x0801a7e3

080012ac <DMA2D_XferCpltCallback>:
        touchgfx::HAL::getInstance()->signalDMAInterrupt();
 80012ac:	4b02      	ldr	r3, [pc, #8]	; (80012b8 <DMA2D_XferCpltCallback+0xc>)
 80012ae:	681b      	ldr	r3, [r3, #0]
 80012b0:	6858      	ldr	r0, [r3, #4]
        dma.signalDMAInterrupt();
 80012b2:	6803      	ldr	r3, [r0, #0]
 80012b4:	695b      	ldr	r3, [r3, #20]
 80012b6:	4718      	bx	r3
 80012b8:	20012188 	.word	0x20012188

080012bc <_ZN10STM32F4DMAD1Ev>:
STM32F4DMA::~STM32F4DMA()
 80012bc:	4b08      	ldr	r3, [pc, #32]	; (80012e0 <_ZN10STM32F4DMAD1Ev+0x24>)
 80012be:	b510      	push	{r4, lr}
 80012c0:	6003      	str	r3, [r0, #0]
 80012c2:	4604      	mov	r4, r0
    HAL_DMA2D_DeInit(&hdma2d);
 80012c4:	4807      	ldr	r0, [pc, #28]	; (80012e4 <_ZN10STM32F4DMAD1Ev+0x28>)
 80012c6:	f002 ff77 	bl	80041b8 <HAL_DMA2D_DeInit>
 */
__STATIC_INLINE void __NVIC_DisableIRQ(IRQn_Type IRQn)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80012ca:	4b07      	ldr	r3, [pc, #28]	; (80012e8 <_ZN10STM32F4DMAD1Ev+0x2c>)
 80012cc:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 80012d0:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  \details Acts as a special kind of Data Memory Barrier.
           It completes when all explicit memory accesses before this instruction complete.
 */
__STATIC_FORCEINLINE void __DSB(void)
{
  __ASM volatile ("dsb 0xF":::"memory");
 80012d4:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 80012d8:	f3bf 8f6f 	isb	sy
}
 80012dc:	4620      	mov	r0, r4
 80012de:	bd10      	pop	{r4, pc}
 80012e0:	0801a838 	.word	0x0801a838
 80012e4:	200127e4 	.word	0x200127e4
 80012e8:	e000e100 	.word	0xe000e100

080012ec <_ZN10STM32F4DMAD0Ev>:
STM32F4DMA::~STM32F4DMA()
 80012ec:	b510      	push	{r4, lr}
 80012ee:	4604      	mov	r4, r0
}
 80012f0:	f7ff ffe4 	bl	80012bc <_ZN10STM32F4DMAD1Ev>
 80012f4:	4620      	mov	r0, r4
 80012f6:	f44f 6142 	mov.w	r1, #3104	; 0xc20
 80012fa:	f018 f85b 	bl	80193b4 <_ZdlPvj>
 80012fe:	4620      	mov	r0, r4
 8001300:	bd10      	pop	{r4, pc}
	...

08001304 <_ZN8touchgfx3HAL3lcdEv>:
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 8001304:	4b04      	ldr	r3, [pc, #16]	; (8001318 <_ZN8touchgfx3HAL3lcdEv+0x14>)
 8001306:	681b      	ldr	r3, [r3, #0]
 8001308:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 800130c:	b10a      	cbz	r2, 8001312 <_ZN8touchgfx3HAL3lcdEv+0xe>
 800130e:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8001310:	b900      	cbnz	r0, 8001314 <_ZN8touchgfx3HAL3lcdEv+0x10>
            return instance->lcdRef;
 8001312:	6898      	ldr	r0, [r3, #8]
    }
 8001314:	4770      	bx	lr
 8001316:	bf00      	nop
 8001318:	20012188 	.word	0x20012188

0800131c <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE>:

void STM32F4DMA::setupDataCopy(const BlitOp& blitOp)
{
 800131c:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
    uint32_t dma2dTransferMode = DMA2D_M2M_BLEND;
    uint32_t dma2dColorMode = 0;

    bool blendingImage = (blitOp.operation == BLIT_OP_COPY_ARGB8888
 8001320:	680d      	ldr	r5, [r1, #0]
                          || blitOp.operation == BLIT_OP_COPY_ARGB8888_WITH_ALPHA
                          || blitOp.operation == BLIT_OP_COPY_WITH_ALPHA);
 8001322:	2d20      	cmp	r5, #32
{
 8001324:	460c      	mov	r4, r1
                          || blitOp.operation == BLIT_OP_COPY_WITH_ALPHA);
 8001326:	f000 8097 	beq.w	8001458 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x13c>
                          || blitOp.operation == BLIT_OP_COPY_ARGB8888_WITH_ALPHA
 800132a:	2d40      	cmp	r5, #64	; 0x40
 800132c:	f000 8094 	beq.w	8001458 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x13c>
                          || blitOp.operation == BLIT_OP_COPY_WITH_ALPHA);
 8001330:	1f2a      	subs	r2, r5, #4
 8001332:	4256      	negs	r6, r2
 8001334:	4156      	adcs	r6, r2

    bool blendingText = (blitOp.operation == BLIT_OP_COPY_A4
                         || blitOp.operation == BLIT_OP_COPY_A8);
 8001336:	2d80      	cmp	r5, #128	; 0x80
 8001338:	f000 8090 	beq.w	800145c <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x140>
 800133c:	f5a5 7380 	sub.w	r3, r5, #256	; 0x100
 8001340:	425d      	negs	r5, r3
 8001342:	415d      	adcs	r5, r3

    uint8_t bitDepth = HAL::lcd().bitDepth();
 8001344:	f7ff ffde 	bl	8001304 <_ZN8touchgfx3HAL3lcdEv>
 8001348:	6803      	ldr	r3, [r0, #0]
 800134a:	69db      	ldr	r3, [r3, #28]
 800134c:	4798      	blx	r3

    switch (blitOp.operation)
 800134e:	6823      	ldr	r3, [r4, #0]
 8001350:	2b40      	cmp	r3, #64	; 0x40
    uint8_t bitDepth = HAL::lcd().bitDepth();
 8001352:	4686      	mov	lr, r0
    switch (blitOp.operation)
 8001354:	f000 8099 	beq.w	800148a <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x16e>
 8001358:	f200 8082 	bhi.w	8001460 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x144>
 800135c:	2b04      	cmp	r3, #4
 800135e:	f000 808d 	beq.w	800147c <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x160>
 8001362:	2b20      	cmp	r3, #32
 8001364:	f000 8091 	beq.w	800148a <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x16e>
    case BLIT_OP_COPY_ARGB8888_WITH_ALPHA:
        dma2dColorMode = CM_ARGB8888;
        break;
    default:
        dma2dTransferMode = DMA2D_M2M;
        dma2dColorMode = (bitDepth == 16) ? CM_RGB565 : CM_RGB888;
 8001368:	f1be 0f10 	cmp.w	lr, #16
 800136c:	bf14      	ite	ne
 800136e:	f04f 0c01 	movne.w	ip, #1
 8001372:	f04f 0c02 	moveq.w	ip, #2
 8001376:	2200      	movs	r2, #0
        break;
    }

    /* HAL_DMA2D_ConfigLayer() depends on hdma2d.Init */
    hdma2d.Init.Mode = dma2dTransferMode;
 8001378:	4b4b      	ldr	r3, [pc, #300]	; (80014a8 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x18c>)
    hdma2d.Init.ColorMode = (bitDepth == 16) ? DMA2D_RGB565 : DMA2D_RGB888;
    hdma2d.Init.OutputOffset = blitOp.dstLoopStride - blitOp.nSteps;
 800137a:	f8b4 8010 	ldrh.w	r8, [r4, #16]
    MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, mode);
 800137e:	6819      	ldr	r1, [r3, #0]
    hdma2d.Init.OutputOffset = blitOp.dstLoopStride - blitOp.nSteps;
 8001380:	8ae7      	ldrh	r7, [r4, #22]
    MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, mode);
 8001382:	f8d1 9000 	ldr.w	r9, [r1]
    hdma2d.Init.Mode = dma2dTransferMode;
 8001386:	605a      	str	r2, [r3, #4]
    hdma2d.Init.ColorMode = (bitDepth == 16) ? DMA2D_RGB565 : DMA2D_RGB888;
 8001388:	f1be 0f10 	cmp.w	lr, #16
    MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, mode);
 800138c:	f429 3940 	bic.w	r9, r9, #196608	; 0x30000
    hdma2d.Init.ColorMode = (bitDepth == 16) ? DMA2D_RGB565 : DMA2D_RGB888;
 8001390:	bf14      	ite	ne
 8001392:	2001      	movne	r0, #1
 8001394:	2002      	moveq	r0, #2
    hdma2d.Init.OutputOffset = blitOp.dstLoopStride - blitOp.nSteps;
 8001396:	eba7 0708 	sub.w	r7, r7, r8
    MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, mode);
 800139a:	ea49 0202 	orr.w	r2, r9, r2
    hdma2d.Init.ColorMode = (bitDepth == 16) ? DMA2D_RGB565 : DMA2D_RGB888;
 800139e:	6098      	str	r0, [r3, #8]
    hdma2d.Init.OutputOffset = blitOp.dstLoopStride - blitOp.nSteps;
 80013a0:	60df      	str	r7, [r3, #12]
    MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, mode);
 80013a2:	600a      	str	r2, [r1, #0]
    MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM, color);
 80013a4:	6b4a      	ldr	r2, [r1, #52]	; 0x34

    HAL_DMA2D_SetMode(&hdma2d, dma2dTransferMode,
                      (bitDepth == 16) ? DMA2D_RGB565 : DMA2D_RGB888,
                      blitOp.dstLoopStride - blitOp.nSteps);

    hdma2d.LayerCfg[1].InputColorMode = dma2dColorMode;
 80013a6:	f8c3 c02c 	str.w	ip, [r3, #44]	; 0x2c
    MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM, color);
 80013aa:	f022 0207 	bic.w	r2, r2, #7
 80013ae:	4302      	orrs	r2, r0
 80013b0:	634a      	str	r2, [r1, #52]	; 0x34
    MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, offset);
 80013b2:	6c0a      	ldr	r2, [r1, #64]	; 0x40
 80013b4:	f422 527f 	bic.w	r2, r2, #16320	; 0x3fc0
 80013b8:	f022 023f 	bic.w	r2, r2, #63	; 0x3f
 80013bc:	433a      	orrs	r2, r7
 80013be:	640a      	str	r2, [r1, #64]	; 0x40
    hdma2d.LayerCfg[1].InputOffset = blitOp.srcLoopStride - blitOp.nSteps;
 80013c0:	8aa2      	ldrh	r2, [r4, #20]
 80013c2:	eba2 0208 	sub.w	r2, r2, r8
 80013c6:	629a      	str	r2, [r3, #40]	; 0x28

    if (blendingImage || blendingText)
 80013c8:	b906      	cbnz	r6, 80013cc <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xb0>
 80013ca:	b395      	cbz	r5, 8001432 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x116>
    {
        if (blitOp.alpha < 255)
 80013cc:	7f22      	ldrb	r2, [r4, #28]
 80013ce:	2aff      	cmp	r2, #255	; 0xff
        {
            hdma2d.LayerCfg[1].AlphaMode = DMA2D_COMBINE_ALPHA;
 80013d0:	bf15      	itete	ne
 80013d2:	2102      	movne	r1, #2
            hdma2d.LayerCfg[1].InputAlpha = blitOp.alpha;
        }
        else
        {
            hdma2d.LayerCfg[1].AlphaMode = DMA2D_NO_MODIF_ALPHA;
 80013d4:	2200      	moveq	r2, #0
            hdma2d.LayerCfg[1].InputAlpha = blitOp.alpha;
 80013d6:	e9c3 120c 	strdne	r1, r2, [r3, #48]	; 0x30
            hdma2d.LayerCfg[1].AlphaMode = DMA2D_NO_MODIF_ALPHA;
 80013da:	631a      	streq	r2, [r3, #48]	; 0x30
        }

        if (blendingText)
 80013dc:	b31d      	cbz	r5, 8001426 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x10a>
 80013de:	7f22      	ldrb	r2, [r4, #28]
 80013e0:	69a1      	ldr	r1, [r4, #24]
        {
            if (bitDepth == 16)
 80013e2:	f1be 0f10 	cmp.w	lr, #16
 80013e6:	ea4f 6c02 	mov.w	ip, r2, lsl #24
 80013ea:	d151      	bne.n	8001490 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x174>
            {
                uint32_t red = (((blitOp.color & 0xF800) >> 11) * 255) / 31;
 80013ec:	f04f 081f 	mov.w	r8, #31
 80013f0:	f3c1 22c4 	ubfx	r2, r1, #11, #5
 80013f4:	ebc2 2202 	rsb	r2, r2, r2, lsl #8
 80013f8:	fbb2 fef8 	udiv	lr, r2, r8
                uint32_t green = (((blitOp.color & 0x7E0) >> 5) * 255) / 63;
                uint32_t blue = (((blitOp.color & 0x1F)) * 255) / 31;
 80013fc:	ea01 0208 	and.w	r2, r1, r8
 8001400:	ebc2 2202 	rsb	r2, r2, r2, lsl #8
 8001404:	fbb2 f2f8 	udiv	r2, r2, r8
                uint32_t alpha = blitOp.alpha;
                hdma2d.LayerCfg[1].InputAlpha = (alpha << 24) | (red << 16) | (green << 8) | blue;
 8001408:	ea42 020c 	orr.w	r2, r2, ip
 800140c:	ea42 420e 	orr.w	r2, r2, lr, lsl #16
                uint32_t green = (((blitOp.color & 0x7E0) >> 5) * 255) / 63;
 8001410:	f3c1 1145 	ubfx	r1, r1, #5, #6
 8001414:	ebc1 2101 	rsb	r1, r1, r1, lsl #8
 8001418:	f04f 0c3f 	mov.w	ip, #63	; 0x3f
 800141c:	fbb1 f1fc 	udiv	r1, r1, ip
                hdma2d.LayerCfg[1].InputAlpha = (alpha << 24) | (red << 16) | (green << 8) | blue;
 8001420:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 8001424:	635a      	str	r2, [r3, #52]	; 0x34
                hdma2d.LayerCfg[1].InputAlpha = blitOp.color.getColor32() | (blitOp.alpha << 24);
            }
        }

        hdma2d.LayerCfg[0].InputOffset = blitOp.dstLoopStride - blitOp.nSteps;
        hdma2d.LayerCfg[0].InputColorMode = (bitDepth == 16) ? CM_RGB565 : CM_RGB888;
 8001426:	e9c3 7006 	strd	r7, r0, [r3, #24]

        HAL_DMA2D_ConfigLayer(&hdma2d, 0);
 800142a:	2100      	movs	r1, #0
 800142c:	481e      	ldr	r0, [pc, #120]	; (80014a8 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x18c>)
 800142e:	f002 ff83 	bl	8004338 <HAL_DMA2D_ConfigLayer>
    }

    HAL_DMA2D_ConfigLayer(&hdma2d, 1);
 8001432:	2101      	movs	r1, #1
 8001434:	481c      	ldr	r0, [pc, #112]	; (80014a8 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x18c>)
 8001436:	f002 ff7f 	bl	8004338 <HAL_DMA2D_ConfigLayer>
 800143a:	8a23      	ldrh	r3, [r4, #16]
 800143c:	8a62      	ldrh	r2, [r4, #18]

    if (blendingImage || blendingText)
 800143e:	b906      	cbnz	r6, 8001442 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x126>
 8001440:	b355      	cbz	r5, 8001498 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x17c>
    {
        HAL_DMA2D_BlendingStart_IT(&hdma2d,
 8001442:	e9cd 3200 	strd	r3, r2, [sp]
 8001446:	68e3      	ldr	r3, [r4, #12]
 8001448:	6861      	ldr	r1, [r4, #4]
 800144a:	4817      	ldr	r0, [pc, #92]	; (80014a8 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x18c>)
 800144c:	461a      	mov	r2, r3
 800144e:	f002 fe35 	bl	80040bc <HAL_DMA2D_BlendingStart_IT>
        HAL_DMA2D_Start_IT(&hdma2d,
                           (unsigned int)blitOp.pSrc,
                           (unsigned int)blitOp.pDst,
                           blitOp.nSteps, blitOp.nLoops);
    }
}
 8001452:	b003      	add	sp, #12
 8001454:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
                          || blitOp.operation == BLIT_OP_COPY_WITH_ALPHA);
 8001458:	2601      	movs	r6, #1
 800145a:	e76f      	b.n	800133c <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x20>
                         || blitOp.operation == BLIT_OP_COPY_A8);
 800145c:	2501      	movs	r5, #1
 800145e:	e771      	b.n	8001344 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x28>
    switch (blitOp.operation)
 8001460:	2b80      	cmp	r3, #128	; 0x80
 8001462:	d006      	beq.n	8001472 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x156>
 8001464:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8001468:	f47f af7e 	bne.w	8001368 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x4c>
        dma2dColorMode = CM_A8;
 800146c:	f04f 0c09 	mov.w	ip, #9
 8001470:	e001      	b.n	8001476 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x15a>
        dma2dColorMode = CM_A4;
 8001472:	f04f 0c0a 	mov.w	ip, #10
    uint32_t dma2dTransferMode = DMA2D_M2M_BLEND;
 8001476:	f44f 3200 	mov.w	r2, #131072	; 0x20000
 800147a:	e77d      	b.n	8001378 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x5c>
        dma2dColorMode = (bitDepth == 16) ? CM_RGB565 : CM_RGB888;
 800147c:	2810      	cmp	r0, #16
 800147e:	bf14      	ite	ne
 8001480:	f04f 0c01 	movne.w	ip, #1
 8001484:	f04f 0c02 	moveq.w	ip, #2
 8001488:	e7f5      	b.n	8001476 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x15a>
        dma2dColorMode = CM_ARGB8888;
 800148a:	f04f 0c00 	mov.w	ip, #0
 800148e:	e7f2      	b.n	8001476 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x15a>
                hdma2d.LayerCfg[1].InputAlpha = blitOp.color.getColor32() | (blitOp.alpha << 24);
 8001490:	ea4c 0101 	orr.w	r1, ip, r1
 8001494:	6359      	str	r1, [r3, #52]	; 0x34
 8001496:	e7c6      	b.n	8001426 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x10a>
        HAL_DMA2D_Start_IT(&hdma2d,
 8001498:	9200      	str	r2, [sp, #0]
 800149a:	6861      	ldr	r1, [r4, #4]
 800149c:	68e2      	ldr	r2, [r4, #12]
 800149e:	4802      	ldr	r0, [pc, #8]	; (80014a8 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x18c>)
 80014a0:	f002 fdee 	bl	8004080 <HAL_DMA2D_Start_IT>
}
 80014a4:	e7d5      	b.n	8001452 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x136>
 80014a6:	bf00      	nop
 80014a8:	200127e4 	.word	0x200127e4

080014ac <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE>:

void STM32F4DMA::setupDataFill(const BlitOp& blitOp)
{
 80014ac:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80014ae:	460d      	mov	r5, r1
    uint8_t bitDepth = HAL::lcd().bitDepth();
 80014b0:	f7ff ff28 	bl	8001304 <_ZN8touchgfx3HAL3lcdEv>
 80014b4:	6803      	ldr	r3, [r0, #0]
 80014b6:	69db      	ldr	r3, [r3, #28]
 80014b8:	4798      	blx	r3
    uint32_t dma2dTransferMode;
    uint32_t dma2dColorMode = (bitDepth == 16) ? CM_RGB565 : CM_RGB888;
 80014ba:	2810      	cmp	r0, #16
 80014bc:	69ab      	ldr	r3, [r5, #24]
 80014be:	7f29      	ldrb	r1, [r5, #28]
 80014c0:	d166      	bne.n	8001590 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0xe4>
    uint32_t color = 0;
    if (bitDepth == 16)
    {
        uint32_t red = (((blitOp.color & 0xF800) >> 11) * 255) / 31;
        uint32_t green = (((blitOp.color & 0x7E0) >> 5) * 255) / 63;
        uint32_t blue = (((blitOp.color & 0x1F)) * 255) / 31;
 80014c2:	f003 021f 	and.w	r2, r3, #31
 80014c6:	ebc2 2202 	rsb	r2, r2, r2, lsl #8
 80014ca:	201f      	movs	r0, #31
 80014cc:	fbb2 f4f0 	udiv	r4, r2, r0
        uint32_t red = (((blitOp.color & 0xF800) >> 11) * 255) / 31;
 80014d0:	f3c3 22c4 	ubfx	r2, r3, #11, #5
        uint32_t alpha = blitOp.alpha;
        color = (alpha << 24) | (red << 16) | (green << 8) | blue;
 80014d4:	ea44 6401 	orr.w	r4, r4, r1, lsl #24
        uint32_t red = (((blitOp.color & 0xF800) >> 11) * 255) / 31;
 80014d8:	ebc2 2202 	rsb	r2, r2, r2, lsl #8
        uint32_t green = (((blitOp.color & 0x7E0) >> 5) * 255) / 63;
 80014dc:	f3c3 1345 	ubfx	r3, r3, #5, #6
        uint32_t red = (((blitOp.color & 0xF800) >> 11) * 255) / 31;
 80014e0:	fbb2 f2f0 	udiv	r2, r2, r0
        color = (alpha << 24) | (red << 16) | (green << 8) | blue;
 80014e4:	ea44 4402 	orr.w	r4, r4, r2, lsl #16
        uint32_t green = (((blitOp.color & 0x7E0) >> 5) * 255) / 63;
 80014e8:	ebc3 2303 	rsb	r3, r3, r3, lsl #8
 80014ec:	223f      	movs	r2, #63	; 0x3f
    uint32_t dma2dColorMode = (bitDepth == 16) ? CM_RGB565 : CM_RGB888;
 80014ee:	2102      	movs	r1, #2
        uint32_t green = (((blitOp.color & 0x7E0) >> 5) * 255) / 63;
 80014f0:	fbb3 f3f2 	udiv	r3, r3, r2
        color = (alpha << 24) | (red << 16) | (green << 8) | blue;
 80014f4:	ea44 2403 	orr.w	r4, r4, r3, lsl #8
    else
    {
        color = (blitOp.alpha << 24) | blitOp.color.getColor32();
    }

    switch (blitOp.operation)
 80014f8:	682b      	ldr	r3, [r5, #0]
        dma2dTransferMode = DMA2D_R2M;
        break;
    };

    /* HAL_DMA2D_ConfigLayer() depends on hdma2d.Init */
    hdma2d.Init.Mode = dma2dTransferMode;
 80014fa:	4827      	ldr	r0, [pc, #156]	; (8001598 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0xec>)
    hdma2d.Init.ColorMode = (bitDepth == 16) ? DMA2D_RGB565 : DMA2D_RGB888;
    hdma2d.Init.OutputOffset = blitOp.dstLoopStride - blitOp.nSteps;
 80014fc:	8aee      	ldrh	r6, [r5, #22]
    MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, mode);
 80014fe:	6802      	ldr	r2, [r0, #0]
    switch (blitOp.operation)
 8001500:	2b08      	cmp	r3, #8
    hdma2d.Init.OutputOffset = blitOp.dstLoopStride - blitOp.nSteps;
 8001502:	8a2b      	ldrh	r3, [r5, #16]
 8001504:	eba6 0603 	sub.w	r6, r6, r3
    MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, mode);
 8001508:	6813      	ldr	r3, [r2, #0]
    hdma2d.Init.OutputOffset = blitOp.dstLoopStride - blitOp.nSteps;
 800150a:	60c6      	str	r6, [r0, #12]
        dma2dTransferMode = DMA2D_R2M;
 800150c:	bf0c      	ite	eq
 800150e:	f44f 3700 	moveq.w	r7, #131072	; 0x20000
 8001512:	f44f 3740 	movne.w	r7, #196608	; 0x30000
    MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, mode);
 8001516:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 800151a:	433b      	orrs	r3, r7
    hdma2d.Init.ColorMode = (bitDepth == 16) ? DMA2D_RGB565 : DMA2D_RGB888;
 800151c:	e9c0 7101 	strd	r7, r1, [r0, #4]
    MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, mode);
 8001520:	6013      	str	r3, [r2, #0]
    MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM, color);
 8001522:	6b53      	ldr	r3, [r2, #52]	; 0x34
 8001524:	f023 0307 	bic.w	r3, r3, #7
 8001528:	430b      	orrs	r3, r1
 800152a:	6353      	str	r3, [r2, #52]	; 0x34
    MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, offset);
 800152c:	6c13      	ldr	r3, [r2, #64]	; 0x40
 800152e:	f423 537f 	bic.w	r3, r3, #16320	; 0x3fc0
 8001532:	f023 033f 	bic.w	r3, r3, #63	; 0x3f
 8001536:	4333      	orrs	r3, r6

    HAL_DMA2D_SetMode(&hdma2d, dma2dTransferMode,
                      (bitDepth == 16) ? DMA2D_RGB565 : DMA2D_RGB888,
                      blitOp.dstLoopStride - blitOp.nSteps);

    if (dma2dTransferMode == DMA2D_M2M_BLEND)
 8001538:	f5b7 3f00 	cmp.w	r7, #131072	; 0x20000
    MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, offset);
 800153c:	6413      	str	r3, [r2, #64]	; 0x40
    if (dma2dTransferMode == DMA2D_M2M_BLEND)
 800153e:	d11c      	bne.n	800157a <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0xce>
    {
        hdma2d.LayerCfg[1].AlphaMode = DMA2D_REPLACE_ALPHA;
 8001540:	2301      	movs	r3, #1
        hdma2d.LayerCfg[1].InputAlpha = color;
 8001542:	e9c0 340c 	strd	r3, r4, [r0, #48]	; 0x30
        hdma2d.LayerCfg[1].InputColorMode = CM_A8;
 8001546:	2309      	movs	r3, #9
        hdma2d.LayerCfg[0].InputOffset = blitOp.dstLoopStride - blitOp.nSteps;
        hdma2d.LayerCfg[0].InputColorMode = (bitDepth == 16) ? CM_RGB565 : CM_RGB888;
 8001548:	e9c0 6106 	strd	r6, r1, [r0, #24]
        hdma2d.LayerCfg[1].InputColorMode = CM_A8;
 800154c:	62c3      	str	r3, [r0, #44]	; 0x2c
        HAL_DMA2D_ConfigLayer(&hdma2d, 0);
 800154e:	2100      	movs	r1, #0
 8001550:	f002 fef2 	bl	8004338 <HAL_DMA2D_ConfigLayer>
    {
        hdma2d.LayerCfg[1].InputColorMode = dma2dColorMode;
        hdma2d.LayerCfg[1].InputOffset = 0;
    }

    HAL_DMA2D_ConfigLayer(&hdma2d, 1);
 8001554:	2101      	movs	r1, #1
 8001556:	4810      	ldr	r0, [pc, #64]	; (8001598 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0xec>)
 8001558:	f002 feee 	bl	8004338 <HAL_DMA2D_ConfigLayer>

    if (dma2dTransferMode == DMA2D_M2M_BLEND)
 800155c:	f5b7 3f00 	cmp.w	r7, #131072	; 0x20000
 8001560:	8a2b      	ldrh	r3, [r5, #16]
 8001562:	8a6a      	ldrh	r2, [r5, #18]
 8001564:	d10d      	bne.n	8001582 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0xd6>
        HAL_DMA2D_BlendingStart_IT(&hdma2d,
 8001566:	68e9      	ldr	r1, [r5, #12]
 8001568:	480b      	ldr	r0, [pc, #44]	; (8001598 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0xec>)
 800156a:	e9cd 3200 	strd	r3, r2, [sp]
 800156e:	460b      	mov	r3, r1
 8001570:	460a      	mov	r2, r1
 8001572:	f002 fda3 	bl	80040bc <HAL_DMA2D_BlendingStart_IT>
                                   (unsigned int)blitOp.pDst,
                                   blitOp.nSteps, blitOp.nLoops);
    else
        HAL_DMA2D_Start_IT(&hdma2d, color, (unsigned int)blitOp.pDst,
                           blitOp.nSteps, blitOp.nLoops);
}
 8001576:	b003      	add	sp, #12
 8001578:	bdf0      	pop	{r4, r5, r6, r7, pc}
        hdma2d.LayerCfg[1].InputOffset = 0;
 800157a:	2300      	movs	r3, #0
        hdma2d.LayerCfg[1].InputColorMode = dma2dColorMode;
 800157c:	62c1      	str	r1, [r0, #44]	; 0x2c
        hdma2d.LayerCfg[1].InputOffset = 0;
 800157e:	6283      	str	r3, [r0, #40]	; 0x28
 8001580:	e7e8      	b.n	8001554 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0xa8>
        HAL_DMA2D_Start_IT(&hdma2d, color, (unsigned int)blitOp.pDst,
 8001582:	9200      	str	r2, [sp, #0]
 8001584:	4621      	mov	r1, r4
 8001586:	68ea      	ldr	r2, [r5, #12]
 8001588:	4803      	ldr	r0, [pc, #12]	; (8001598 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0xec>)
 800158a:	f002 fd79 	bl	8004080 <HAL_DMA2D_Start_IT>
}
 800158e:	e7f2      	b.n	8001576 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0xca>
        color = (blitOp.alpha << 24) | blitOp.color.getColor32();
 8001590:	ea43 6401 	orr.w	r4, r3, r1, lsl #24
    uint32_t dma2dColorMode = (bitDepth == 16) ? CM_RGB565 : CM_RGB888;
 8001594:	2101      	movs	r1, #1
 8001596:	e7af      	b.n	80014f8 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0x4c>
 8001598:	200127e4 	.word	0x200127e4

0800159c <_ZN10STM32F4DMAC1Ev>:
STM32F4DMA::STM32F4DMA()
 800159c:	b570      	push	{r4, r5, r6, lr}
 800159e:	4605      	mov	r5, r0
    : DMA_Interface(dma_queue), dma_queue(queue_storage, sizeof(queue_storage) / sizeof(queue_storage[0]))
 80015a0:	462c      	mov	r4, r5
 80015a2:	4b0a      	ldr	r3, [pc, #40]	; (80015cc <_ZN10STM32F4DMAC1Ev+0x30>)
 80015a4:	300c      	adds	r0, #12
     * Constructs a DMA Interface object.
     *
     * @param [in] dmaQueue Reference to the queue of DMA operations.
     */
    DMA_Interface(DMA_Queue& dmaQueue)
        : queue(dmaQueue), isRunning(false), isAllowed(false)
 80015a6:	2600      	movs	r6, #0
 80015a8:	6068      	str	r0, [r5, #4]
 80015aa:	722e      	strb	r6, [r5, #8]
 80015ac:	726e      	strb	r6, [r5, #9]
 80015ae:	f844 3b20 	str.w	r3, [r4], #32
 80015b2:	2260      	movs	r2, #96	; 0x60
 80015b4:	4621      	mov	r1, r4
 80015b6:	f008 ff17 	bl	800a3e8 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>
 80015ba:	f505 6342 	add.w	r3, r5, #3104	; 0xc20
 */
struct colortype
{
    /** Default constructor. Creates a black (0) color. */
    colortype()
        : color(0)
 80015be:	61a6      	str	r6, [r4, #24]
 80015c0:	3420      	adds	r4, #32
 80015c2:	42a3      	cmp	r3, r4
 80015c4:	d1fb      	bne.n	80015be <_ZN10STM32F4DMAC1Ev+0x22>
{}
 80015c6:	4628      	mov	r0, r5
 80015c8:	bd70      	pop	{r4, r5, r6, pc}
 80015ca:	bf00      	nop
 80015cc:	0801a838 	.word	0x0801a838

080015d0 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
     * @see touchgfx::AbstractPartition::capacity
     */
    virtual uint16_t capacity() const
    {
        return NUMBER_OF_ELEMENTS;
    }
 80015d0:	2001      	movs	r0, #1
 80015d2:	4770      	bx	lr

080015d4 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
     * @see touchgfx::AbstractPartition::element_size
     */
    virtual uint32_t element_size()
    {
        return sizeof(stBlocks[0]);
    }
 80015d4:	200c      	movs	r0, #12
 80015d6:	4770      	bx	lr

080015d8 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE7elementEt>:
     *
     * @see touchgfx::AbstractPartition::element
     */
    virtual void* element(uint16_t index)
    {
        return &stBlocks[index];
 80015d8:	230c      	movs	r3, #12
 80015da:	fb03 0001 	mla	r0, r3, r1, r0
    }
 80015de:	3008      	adds	r0, #8
 80015e0:	4770      	bx	lr

080015e2 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE7elementEt>:
     *
     * @see touchgfx::AbstractPartition::element
     */
    virtual const void* element(uint16_t index) const
    {
        return &stBlocks[index];
 80015e2:	230c      	movs	r3, #12
 80015e4:	fb03 0001 	mla	r0, r3, r1, r0
    }
 80015e8:	3008      	adds	r0, #8
 80015ea:	4770      	bx	lr

080015ec <_ZNK8touchgfx9PartitionINS_4meta8TypeListI14mainScreenViewNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 80015ec:	2001      	movs	r0, #1
 80015ee:	4770      	bx	lr

080015f0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI14mainScreenViewNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 80015f0:	f44f 7059 	mov.w	r0, #868	; 0x364
 80015f4:	4770      	bx	lr

080015f6 <_ZN8touchgfx9PartitionINS_4meta8TypeListI14mainScreenViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 80015f6:	f44f 7359 	mov.w	r3, #868	; 0x364
 80015fa:	fb03 0001 	mla	r0, r3, r1, r0
    }
 80015fe:	3008      	adds	r0, #8
 8001600:	4770      	bx	lr

08001602 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI14mainScreenViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8001602:	f44f 7359 	mov.w	r3, #868	; 0x364
 8001606:	fb03 0001 	mla	r0, r3, r1, r0
    }
 800160a:	3008      	adds	r0, #8
 800160c:	4770      	bx	lr

0800160e <_ZNK8touchgfx9PartitionINS_4meta8TypeListI19mainScreenPresenterNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 800160e:	2001      	movs	r0, #1
 8001610:	4770      	bx	lr

08001612 <_ZN8touchgfx9PartitionINS_4meta8TypeListI19mainScreenPresenterNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 8001612:	2010      	movs	r0, #16
 8001614:	4770      	bx	lr

08001616 <_ZN8touchgfx9PartitionINS_4meta8TypeListI19mainScreenPresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8001616:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 800161a:	3008      	adds	r0, #8
 800161c:	4770      	bx	lr

0800161e <_ZNK8touchgfx9PartitionINS_4meta8TypeListI19mainScreenPresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 800161e:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 8001622:	3008      	adds	r0, #8
 8001624:	4770      	bx	lr

08001626 <_ZN16FrontendHeapBase15gotoStartScreenER19FrontendApplication>:
     */
    typedef touchgfx::meta::select_type_maxsize< GeneratedTransitionTypes >::type MaxGeneratedTransitionType;

    virtual void gotoStartScreen(FrontendApplication& app)
    {
        app.gotomainScreenScreenNoTransition();
 8001626:	4608      	mov	r0, r1
 8001628:	f001 bab0 	b.w	8002b8c <_ZN23FrontendApplicationBase32gotomainScreenScreenNoTransitionEv>

0800162c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>:
class Partition : public AbstractPartition
 800162c:	b510      	push	{r4, lr}
 800162e:	4b03      	ldr	r3, [pc, #12]	; (800163c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 8001630:	6003      	str	r3, [r0, #0]
 8001632:	4604      	mov	r4, r0
 8001634:	f007 fb3c 	bl	8008cb0 <_ZN8touchgfx17AbstractPartitionD1Ev>
 8001638:	4620      	mov	r0, r4
 800163a:	bd10      	pop	{r4, pc}
 800163c:	0801a924 	.word	0x0801a924

08001640 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8001640:	b510      	push	{r4, lr}
 8001642:	4604      	mov	r4, r0
 8001644:	f7ff fff2 	bl	800162c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>
 8001648:	4620      	mov	r0, r4
 800164a:	2114      	movs	r1, #20
 800164c:	f017 feb2 	bl	80193b4 <_ZdlPvj>
 8001650:	4620      	mov	r0, r4
 8001652:	bd10      	pop	{r4, pc}

08001654 <_ZN8touchgfx9PartitionINS_4meta8TypeListI14mainScreenViewNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 8001654:	b510      	push	{r4, lr}
 8001656:	4b03      	ldr	r3, [pc, #12]	; (8001664 <_ZN8touchgfx9PartitionINS_4meta8TypeListI14mainScreenViewNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 8001658:	6003      	str	r3, [r0, #0]
 800165a:	4604      	mov	r4, r0
 800165c:	f007 fb28 	bl	8008cb0 <_ZN8touchgfx17AbstractPartitionD1Ev>
 8001660:	4620      	mov	r0, r4
 8001662:	bd10      	pop	{r4, pc}
 8001664:	0801a8f0 	.word	0x0801a8f0

08001668 <_ZN8touchgfx9PartitionINS_4meta8TypeListI14mainScreenViewNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8001668:	b510      	push	{r4, lr}
 800166a:	4604      	mov	r4, r0
 800166c:	f7ff fff2 	bl	8001654 <_ZN8touchgfx9PartitionINS_4meta8TypeListI14mainScreenViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8001670:	4620      	mov	r0, r4
 8001672:	f44f 715b 	mov.w	r1, #876	; 0x36c
 8001676:	f017 fe9d 	bl	80193b4 <_ZdlPvj>
 800167a:	4620      	mov	r0, r4
 800167c:	bd10      	pop	{r4, pc}
	...

08001680 <_ZN8touchgfx9PartitionINS_4meta8TypeListI19mainScreenPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 8001680:	b510      	push	{r4, lr}
 8001682:	4b03      	ldr	r3, [pc, #12]	; (8001690 <_ZN8touchgfx9PartitionINS_4meta8TypeListI19mainScreenPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 8001684:	6003      	str	r3, [r0, #0]
 8001686:	4604      	mov	r4, r0
 8001688:	f007 fb12 	bl	8008cb0 <_ZN8touchgfx17AbstractPartitionD1Ev>
 800168c:	4620      	mov	r0, r4
 800168e:	bd10      	pop	{r4, pc}
 8001690:	0801a8bc 	.word	0x0801a8bc

08001694 <_ZN8touchgfx9PartitionINS_4meta8TypeListI19mainScreenPresenterNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8001694:	b510      	push	{r4, lr}
 8001696:	4604      	mov	r4, r0
 8001698:	f7ff fff2 	bl	8001680 <_ZN8touchgfx9PartitionINS_4meta8TypeListI19mainScreenPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 800169c:	4620      	mov	r0, r4
 800169e:	2118      	movs	r1, #24
 80016a0:	f017 fe88 	bl	80193b4 <_ZdlPvj>
 80016a4:	4620      	mov	r0, r4
 80016a6:	bd10      	pop	{r4, pc}

080016a8 <_ZN12FrontendHeapD1Ev>:
#ifndef FRONTENDHEAP_HPP
#define FRONTENDHEAP_HPP

#include <gui_generated/common/FrontendHeapBase.hpp>

class FrontendHeap : public FrontendHeapBase
 80016a8:	b510      	push	{r4, lr}
 80016aa:	4b08      	ldr	r3, [pc, #32]	; (80016cc <_ZN12FrontendHeapD1Ev+0x24>)
 80016ac:	6003      	str	r3, [r0, #0]
 80016ae:	4604      	mov	r4, r0
 80016b0:	f500 7066 	add.w	r0, r0, #920	; 0x398
 80016b4:	f7ff ffba 	bl	800162c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>
 80016b8:	f104 002c 	add.w	r0, r4, #44	; 0x2c
 80016bc:	f7ff ffca 	bl	8001654 <_ZN8touchgfx9PartitionINS_4meta8TypeListI14mainScreenViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 80016c0:	f104 0014 	add.w	r0, r4, #20
 80016c4:	f7ff ffdc 	bl	8001680 <_ZN8touchgfx9PartitionINS_4meta8TypeListI19mainScreenPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 80016c8:	4620      	mov	r0, r4
 80016ca:	bd10      	pop	{r4, pc}
 80016cc:	0801a958 	.word	0x0801a958

080016d0 <__tcf_0>:
                            > > CombinedTransitionTypes;
    typedef touchgfx::meta::select_type_maxsize< CombinedTransitionTypes >::type MaxTransitionType;

    static FrontendHeap& getInstance()
    {
        static FrontendHeap instance;
 80016d0:	b508      	push	{r3, lr}
 80016d2:	4802      	ldr	r0, [pc, #8]	; (80016dc <__tcf_0+0xc>)
 80016d4:	f7ff ffe8 	bl	80016a8 <_ZN12FrontendHeapD1Ev>
 80016d8:	bd08      	pop	{r3, pc}
 80016da:	bf00      	nop
 80016dc:	200001a8 	.word	0x200001a8

080016e0 <_ZN12FrontendHeapD0Ev>:
class FrontendHeap : public FrontendHeapBase
 80016e0:	b510      	push	{r4, lr}
 80016e2:	4604      	mov	r4, r0
 80016e4:	f7ff ffe0 	bl	80016a8 <_ZN12FrontendHeapD1Ev>
 80016e8:	4620      	mov	r0, r4
 80016ea:	f44f 61a1 	mov.w	r1, #1288	; 0x508
 80016ee:	f017 fe61 	bl	80193b4 <_ZdlPvj>
 80016f2:	4620      	mov	r0, r4
 80016f4:	bd10      	pop	{r4, pc}
	...

080016f8 <touchgfx_init>:
static ApplicationFontProvider fontProvider;
static Texts texts;
static TouchGFXHAL hal(dma, display, tc, 240, 320);

void touchgfx_init()
{
 80016f8:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
    Bitmap::registerBitmapDatabase(BitmapDatabase::getInstance(), BitmapDatabase::getInstanceSize());
 80016fc:	f001 f982 	bl	8002a04 <_ZN14BitmapDatabase11getInstanceEv>
 8001700:	4605      	mov	r5, r0
 8001702:	f001 f983 	bl	8002a0c <_ZN14BitmapDatabase15getInstanceSizeEv>
 8001706:	2400      	movs	r4, #0
 8001708:	4601      	mov	r1, r0
 800170a:	4623      	mov	r3, r4
 800170c:	4628      	mov	r0, r5
 800170e:	4622      	mov	r2, r4
 8001710:	9400      	str	r4, [sp, #0]
 8001712:	f00c f999 	bl	800da48 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>
     *
     * @param  t The array of texts.
     */
    static void registerTexts(const Texts* t)
    {
        texts = t;
 8001716:	4b25      	ldr	r3, [pc, #148]	; (80017ac <touchgfx_init+0xb4>)
 8001718:	4a25      	ldr	r2, [pc, #148]	; (80017b0 <touchgfx_init+0xb8>)
        static FrontendHeap instance;
 800171a:	4d26      	ldr	r5, [pc, #152]	; (80017b4 <touchgfx_init+0xbc>)
 800171c:	601a      	str	r2, [r3, #0]
    TypedText::registerTexts(&texts);
    Texts::setLanguage(0);
 800171e:	4620      	mov	r0, r4
 8001720:	f001 fc6e 	bl	8003000 <_ZN8touchgfx5Texts11setLanguageEt>

    FontManager::setFontProvider(&fontProvider);
 8001724:	4824      	ldr	r0, [pc, #144]	; (80017b8 <touchgfx_init+0xc0>)
 8001726:	f00c f8d9 	bl	800d8dc <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>
 800172a:	782b      	ldrb	r3, [r5, #0]
 800172c:	f3bf 8f5b 	dmb	ish
 8001730:	07db      	lsls	r3, r3, #31
 8001732:	d435      	bmi.n	80017a0 <touchgfx_init+0xa8>
 8001734:	4628      	mov	r0, r5
 8001736:	f017 fe3f 	bl	80193b8 <__cxa_guard_acquire>
 800173a:	b388      	cbz	r0, 80017a0 <touchgfx_init+0xa8>
            AbstractPartition& tra,
            MVPApplication& app)
        : presenterStorage(pres),
          screenStorage(scr),
          transitionStorage(tra),
          frontendApplication(app)
 800173c:	4c1f      	ldr	r4, [pc, #124]	; (80017bc <touchgfx_init+0xc4>)
    Model model;
    FrontendApplication app;

private:
    FrontendHeap() : FrontendHeapBase(presenters, views, transitions, app),
                     app(model, *this)
 800173e:	4b20      	ldr	r3, [pc, #128]	; (80017c0 <touchgfx_init+0xc8>)
 8001740:	6023      	str	r3, [r4, #0]
 8001742:	f504 766c 	add.w	r6, r4, #944	; 0x3b0
 8001746:	f104 0014 	add.w	r0, r4, #20
 800174a:	f104 082c 	add.w	r8, r4, #44	; 0x2c
 800174e:	f504 7766 	add.w	r7, r4, #920	; 0x398
 8001752:	6060      	str	r0, [r4, #4]
 8001754:	f8c4 8008 	str.w	r8, [r4, #8]
 8001758:	60e7      	str	r7, [r4, #12]
 800175a:	6126      	str	r6, [r4, #16]
 800175c:	f007 faaa 	bl	8008cb4 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8001760:	4b18      	ldr	r3, [pc, #96]	; (80017c4 <touchgfx_init+0xcc>)
 8001762:	6163      	str	r3, [r4, #20]
 8001764:	4640      	mov	r0, r8
 8001766:	f007 faa5 	bl	8008cb4 <_ZN8touchgfx17AbstractPartitionC1Ev>
 800176a:	4b17      	ldr	r3, [pc, #92]	; (80017c8 <touchgfx_init+0xd0>)
 800176c:	62e3      	str	r3, [r4, #44]	; 0x2c
 800176e:	4638      	mov	r0, r7
 8001770:	f007 faa0 	bl	8008cb4 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8001774:	4b15      	ldr	r3, [pc, #84]	; (80017cc <touchgfx_init+0xd4>)
 8001776:	f8c4 3398 	str.w	r3, [r4, #920]	; 0x398
 800177a:	f504 706b 	add.w	r0, r4, #940	; 0x3ac
 800177e:	f001 ff39 	bl	80035f4 <_ZN5ModelC1Ev>
 8001782:	4622      	mov	r2, r4
 8001784:	f504 716b 	add.w	r1, r4, #940	; 0x3ac
 8001788:	4630      	mov	r0, r6
 800178a:	f001 ff29 	bl	80035e0 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>
 800178e:	4630      	mov	r0, r6
 8001790:	f001 f9fc 	bl	8002b8c <_ZN23FrontendApplicationBase32gotomainScreenScreenNoTransitionEv>
        static FrontendHeap instance;
 8001794:	4628      	mov	r0, r5
 8001796:	f017 fe1b 	bl	80193d0 <__cxa_guard_release>
 800179a:	480d      	ldr	r0, [pc, #52]	; (80017d0 <touchgfx_init+0xd8>)
 800179c:	f017 fe54 	bl	8019448 <atexit>

    FrontendHeap& heap = FrontendHeap::getInstance();
    (void)heap; // we need to obtain the reference above to initialize the frontend heap.

    hal.initialize();
 80017a0:	480c      	ldr	r0, [pc, #48]	; (80017d4 <touchgfx_init+0xdc>)
}
 80017a2:	b002      	add	sp, #8
 80017a4:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    hal.initialize();
 80017a8:	f7ff bcb4 	b.w	8001114 <_ZN11TouchGFXHAL10initializeEv>
 80017ac:	20012204 	.word	0x20012204
 80017b0:	2000134c 	.word	0x2000134c
 80017b4:	200001a4 	.word	0x200001a4
 80017b8:	20000008 	.word	0x20000008
 80017bc:	200001a8 	.word	0x200001a8
 80017c0:	0801a958 	.word	0x0801a958
 80017c4:	0801a8bc 	.word	0x0801a8bc
 80017c8:	0801a8f0 	.word	0x0801a8f0
 80017cc:	0801a924 	.word	0x0801a924
 80017d0:	080016d1 	.word	0x080016d1
 80017d4:	200012d4 	.word	0x200012d4

080017d8 <touchgfx_taskEntry>:
     * Main event loop. Will wait for VSYNC signal, and then process next frame. Call
     * this function from your GUI task.
     *
     * Note This function never returns
     */
    hal.taskEntry();
 80017d8:	4801      	ldr	r0, [pc, #4]	; (80017e0 <touchgfx_taskEntry+0x8>)
 80017da:	f7ff bbbd 	b.w	8000f58 <_ZN11TouchGFXHAL9taskEntryEv>
 80017de:	bf00      	nop
 80017e0:	200012d4 	.word	0x200012d4

080017e4 <_GLOBAL__sub_I_touchgfx_init>:
}
 80017e4:	b570      	push	{r4, r5, r6, lr}
static STM32F4DMA dma;
 80017e6:	4e28      	ldr	r6, [pc, #160]	; (8001888 <_GLOBAL__sub_I_touchgfx_init+0xa4>)
{
public:

    STM32TouchController() {}
 80017e8:	4c28      	ldr	r4, [pc, #160]	; (800188c <_GLOBAL__sub_I_touchgfx_init+0xa8>)
static LCD16bpp display;
 80017ea:	4d29      	ldr	r5, [pc, #164]	; (8001890 <_GLOBAL__sub_I_touchgfx_init+0xac>)
 80017ec:	4b29      	ldr	r3, [pc, #164]	; (8001894 <_GLOBAL__sub_I_touchgfx_init+0xb0>)
 80017ee:	6023      	str	r3, [r4, #0]
static STM32F4DMA dma;
 80017f0:	4630      	mov	r0, r6
 80017f2:	f7ff fed3 	bl	800159c <_ZN10STM32F4DMAC1Ev>
static LCD16bpp display;
 80017f6:	4628      	mov	r0, r5
 80017f8:	f00f f920 	bl	8010a3c <_ZN8touchgfx8LCD16bppC1Ev>
          useDMAAcceleration(true)
 80017fc:	4b26      	ldr	r3, [pc, #152]	; (8001898 <_GLOBAL__sub_I_touchgfx_init+0xb4>)
 80017fe:	4827      	ldr	r0, [pc, #156]	; (800189c <_GLOBAL__sub_I_touchgfx_init+0xb8>)
 8001800:	6658      	str	r0, [r3, #100]	; 0x64
        instance = this;
 8001802:	4827      	ldr	r0, [pc, #156]	; (80018a0 <_GLOBAL__sub_I_touchgfx_init+0xbc>)
          useDMAAcceleration(true)
 8001804:	60dc      	str	r4, [r3, #12]
 8001806:	2200      	movs	r2, #0
 8001808:	2101      	movs	r1, #1
 800180a:	e9c3 6501 	strd	r6, r5, [r3, #4]
 800180e:	e9c3 2204 	strd	r2, r2, [r3, #16]
              downX(0),
              downY(0),
              tickCount(0),
              velocityX(0),
              velocityY(0),
              inProgress(false)
 8001812:	e9c3 2206 	strd	r2, r2, [r3, #24]
 8001816:	e9c3 2208 	strd	r2, r2, [r3, #32]
 800181a:	851a      	strh	r2, [r3, #40]	; 0x28
 800181c:	f883 202a 	strb.w	r2, [r3, #42]	; 0x2a
    };

public:
    /** Default constructor. Does nothing. */
    Gestures()
        : listener(0), dragThresholdValue(0)
 8001820:	62da      	str	r2, [r3, #44]	; 0x2c
 8001822:	861a      	strh	r2, [r3, #48]	; 0x30
 8001824:	e9c3 220e 	strd	r2, r2, [r3, #56]	; 0x38
 8001828:	e9c3 2210 	strd	r2, r2, [r3, #64]	; 0x40
 800182c:	f883 2048 	strb.w	r2, [r3, #72]	; 0x48
 8001830:	f883 204a 	strb.w	r2, [r3, #74]	; 0x4a
{
public:
    /** Default constructor. Resulting in an empty Rect with coordinates 0,0. */
    Rect()
    {
        this->x = 0;
 8001834:	e9c3 2213 	strd	r2, r2, [r3, #76]	; 0x4c
        this->y = 0;
 8001838:	655a      	str	r2, [r3, #84]	; 0x54
 800183a:	f883 2068 	strb.w	r2, [r3, #104]	; 0x68
 800183e:	f883 2069 	strb.w	r2, [r3, #105]	; 0x69
 8001842:	f883 206a 	strb.w	r2, [r3, #106]	; 0x6a
 8001846:	f883 206b 	strb.w	r2, [r3, #107]	; 0x6b
 800184a:	f883 206c 	strb.w	r2, [r3, #108]	; 0x6c
 800184e:	671a      	str	r2, [r3, #112]	; 0x70
 8001850:	f883 2075 	strb.w	r2, [r3, #117]	; 0x75
 8001854:	f883 2076 	strb.w	r2, [r3, #118]	; 0x76
 8001858:	f883 1049 	strb.w	r1, [r3, #73]	; 0x49
 800185c:	f883 1077 	strb.w	r1, [r3, #119]	; 0x77
        instance = this;
 8001860:	6003      	str	r3, [r0, #0]
        DISPLAY_WIDTH = width;
 8001862:	4810      	ldr	r0, [pc, #64]	; (80018a4 <_GLOBAL__sub_I_touchgfx_init+0xc0>)
        DISPLAY_HEIGHT = height;
 8001864:	4d10      	ldr	r5, [pc, #64]	; (80018a8 <_GLOBAL__sub_I_touchgfx_init+0xc4>)
        nativeDisplayOrientation = ((width >= height) ? ORIENTATION_LANDSCAPE : ORIENTATION_PORTRAIT);
 8001866:	f883 1034 	strb.w	r1, [r3, #52]	; 0x34
        DISPLAY_WIDTH = width;
 800186a:	24f0      	movs	r4, #240	; 0xf0
 800186c:	8004      	strh	r4, [r0, #0]
        DISPLAY_HEIGHT = height;
 800186e:	f44f 70a0 	mov.w	r0, #320	; 0x140
 8001872:	8028      	strh	r0, [r5, #0]
        DISPLAY_ROTATION = rotate0;
 8001874:	4d0d      	ldr	r5, [pc, #52]	; (80018ac <_GLOBAL__sub_I_touchgfx_init+0xc8>)
 8001876:	702a      	strb	r2, [r5, #0]
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH;
 8001878:	4a0d      	ldr	r2, [pc, #52]	; (80018b0 <_GLOBAL__sub_I_touchgfx_init+0xcc>)
 800187a:	8014      	strh	r4, [r2, #0]
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT;
 800187c:	4a0d      	ldr	r2, [pc, #52]	; (80018b4 <_GLOBAL__sub_I_touchgfx_init+0xd0>)
 800187e:	8010      	strh	r0, [r2, #0]
     * @param [in,out] display Reference to LCD interface.
     * @param [in,out] tc      Reference to Touch Controller driver.
     * @param width            Width of the display.
     * @param height           Height of the display.
     */
    TouchGFXHAL(touchgfx::DMA_Interface& dma, touchgfx::LCD& display, touchgfx::TouchController& tc, uint16_t width, uint16_t height) : TouchGFXGeneratedHAL(dma, display, tc, width, height)
 8001880:	4a0d      	ldr	r2, [pc, #52]	; (80018b8 <_GLOBAL__sub_I_touchgfx_init+0xd4>)
 8001882:	601a      	str	r2, [r3, #0]
}
 8001884:	bd70      	pop	{r4, r5, r6, pc}
 8001886:	bf00      	nop
 8001888:	200006b4 	.word	0x200006b4
 800188c:	200006b0 	.word	0x200006b0
 8001890:	20001350 	.word	0x20001350
 8001894:	0801a480 	.word	0x0801a480
 8001898:	200012d4 	.word	0x200012d4
 800189c:	01000001 	.word	0x01000001
 80018a0:	20012188 	.word	0x20012188
 80018a4:	2001217c 	.word	0x2001217c
 80018a8:	2001217e 	.word	0x2001217e
 80018ac:	20012180 	.word	0x20012180
 80018b0:	20012182 	.word	0x20012182
 80018b4:	20012184 	.word	0x20012184
 80018b8:	0801a534 	.word	0x0801a534

080018bc <_GLOBAL__sub_D_touchgfx_init>:
static STM32F4DMA dma;
 80018bc:	4801      	ldr	r0, [pc, #4]	; (80018c4 <_GLOBAL__sub_D_touchgfx_init+0x8>)
 80018be:	f7ff bcfd 	b.w	80012bc <_ZN10STM32F4DMAD1Ev>
 80018c2:	bf00      	nop
 80018c4:	200006b4 	.word	0x200006b4

080018c8 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>:
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80018c8:	4b03      	ldr	r3, [pc, #12]	; (80018d8 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv+0x10>)
 80018ca:	2290      	movs	r2, #144	; 0x90
 80018cc:	f883 235a 	strb.w	r2, [r3, #858]	; 0x35a
 80018d0:	f883 2358 	strb.w	r2, [r3, #856]	; 0x358

void TouchGFXGeneratedHAL::configureInterrupts()
{
    NVIC_SetPriority(DMA2D_IRQn, 9);
    NVIC_SetPriority(LTDC_IRQn, 9);
}
 80018d4:	4770      	bx	lr
 80018d6:	bf00      	nop
 80018d8:	e000e100 	.word	0xe000e100

080018dc <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>:
    NVIC_DisableIRQ(LTDC_IRQn);
}

void TouchGFXGeneratedHAL::enableLCDControllerInterrupt()
{
    lcd_int_active_line = (LTDC->BPCR & 0x7FF) - 1;
 80018dc:	4a09      	ldr	r2, [pc, #36]	; (8001904 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x28>)
 80018de:	490a      	ldr	r1, [pc, #40]	; (8001908 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x2c>)
 80018e0:	68d3      	ldr	r3, [r2, #12]
    lcd_int_porch_line = (LTDC->AWCR & 0x7FF) - 1;
 80018e2:	480a      	ldr	r0, [pc, #40]	; (800190c <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x30>)
    lcd_int_active_line = (LTDC->BPCR & 0x7FF) - 1;
 80018e4:	f3c3 030a 	ubfx	r3, r3, #0, #11
 80018e8:	3b01      	subs	r3, #1
 80018ea:	b29b      	uxth	r3, r3
 80018ec:	800b      	strh	r3, [r1, #0]
    lcd_int_porch_line = (LTDC->AWCR & 0x7FF) - 1;
 80018ee:	6911      	ldr	r1, [r2, #16]
 80018f0:	f3c1 010a 	ubfx	r1, r1, #0, #11
 80018f4:	3901      	subs	r1, #1
 80018f6:	8001      	strh	r1, [r0, #0]

    /* Sets the Line Interrupt position */
    LTDC->LIPCR = lcd_int_active_line;
 80018f8:	6413      	str	r3, [r2, #64]	; 0x40
    /* Line Interrupt Enable            */
    LTDC->IER |= LTDC_IER_LIE;
 80018fa:	6b53      	ldr	r3, [r2, #52]	; 0x34
 80018fc:	f043 0301 	orr.w	r3, r3, #1
 8001900:	6353      	str	r3, [r2, #52]	; 0x34
}
 8001902:	4770      	bx	lr
 8001904:	40016800 	.word	0x40016800
 8001908:	200013ca 	.word	0x200013ca
 800190c:	200013c8 	.word	0x200013c8

08001910 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>:

uint16_t* TouchGFXGeneratedHAL::getTFTFrameBuffer() const
{
    return (uint16_t*)LTDC_Layer1->CFBAR;
 8001910:	4b01      	ldr	r3, [pc, #4]	; (8001918 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv+0x8>)
 8001912:	6a98      	ldr	r0, [r3, #40]	; 0x28
}
 8001914:	4770      	bx	lr
 8001916:	bf00      	nop
 8001918:	40016884 	.word	0x40016884

0800191c <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>:

void TouchGFXGeneratedHAL::setTFTFrameBuffer(uint16_t* adr)
{
    LTDC_Layer1->CFBAR = (uint32_t)adr;
 800191c:	4b02      	ldr	r3, [pc, #8]	; (8001928 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt+0xc>)

    /* Reload immediate */
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 800191e:	2201      	movs	r2, #1
    LTDC_Layer1->CFBAR = (uint32_t)adr;
 8001920:	6299      	str	r1, [r3, #40]	; 0x28
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 8001922:	f843 2c60 	str.w	r2, [r3, #-96]
}
 8001926:	4770      	bx	lr
 8001928:	40016884 	.word	0x40016884

0800192c <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>:

void TouchGFXGeneratedHAL::flushFrameBuffer(const touchgfx::Rect& rect)
{
    HAL::flushFrameBuffer(rect);
 800192c:	f007 bec7 	b.w	80096be <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>

08001930 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>:
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8001930:	4b03      	ldr	r3, [pc, #12]	; (8001940 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv+0x10>)
 8001932:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 8001936:	609a      	str	r2, [r3, #8]
 8001938:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 800193c:	609a      	str	r2, [r3, #8]
}
 800193e:	4770      	bx	lr
 8001940:	e000e100 	.word	0xe000e100

08001944 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>:
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8001944:	4b08      	ldr	r3, [pc, #32]	; (8001968 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv+0x24>)
 8001946:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 800194a:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  __ASM volatile ("dsb 0xF":::"memory");
 800194e:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 8001952:	f3bf 8f6f 	isb	sy
 8001956:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 800195a:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  __ASM volatile ("dsb 0xF":::"memory");
 800195e:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 8001962:	f3bf 8f6f 	isb	sy
}
 8001966:	4770      	bx	lr
 8001968:	e000e100 	.word	0xe000e100

0800196c <_ZN20TouchGFXGeneratedHAL10initializeEv>:
{
 800196c:	b538      	push	{r3, r4, r5, lr}
 800196e:	4604      	mov	r4, r0
    HAL::initialize();
 8001970:	f008 f986 	bl	8009c80 <_ZN8touchgfx3HAL10initializeEv>
    registerEventListener(*(touchgfx::Application::getInstance()));
 8001974:	6823      	ldr	r3, [r4, #0]
 8001976:	6cdd      	ldr	r5, [r3, #76]	; 0x4c
 8001978:	f00a f8a4 	bl	800bac4 <_ZN8touchgfx11Application11getInstanceEv>
 800197c:	4601      	mov	r1, r0
 800197e:	4620      	mov	r0, r4
 8001980:	47a8      	blx	r5
    setFrameBufferStartAddresses((void*)frameBuf, (void*)(frameBuf + sizeof(frameBuf) / (sizeof(uint32_t) * 2)), (void*)0);
 8001982:	6823      	ldr	r3, [r4, #0]
 8001984:	4a05      	ldr	r2, [pc, #20]	; (800199c <_ZN20TouchGFXGeneratedHAL10initializeEv+0x30>)
 8001986:	6f5d      	ldr	r5, [r3, #116]	; 0x74
 8001988:	f5a2 3116 	sub.w	r1, r2, #153600	; 0x25800
 800198c:	2300      	movs	r3, #0
 800198e:	4620      	mov	r0, r4
 8001990:	47a8      	blx	r5
        lockDMAToPorch = enableLock;
 8001992:	2300      	movs	r3, #0
 8001994:	f884 304a 	strb.w	r3, [r4, #74]	; 0x4a
}
 8001998:	bd38      	pop	{r3, r4, r5, pc}
 800199a:	bf00      	nop
 800199c:	d0025800 	.word	0xd0025800

080019a0 <HAL_LTDC_LineEventCallback>:

extern "C"
{
    void HAL_LTDC_LineEventCallback(LTDC_HandleTypeDef* hltdc)
    {
        if (LTDC->LIPCR == lcd_int_active_line)
 80019a0:	4b13      	ldr	r3, [pc, #76]	; (80019f0 <HAL_LTDC_LineEventCallback+0x50>)
 80019a2:	4a14      	ldr	r2, [pc, #80]	; (80019f4 <HAL_LTDC_LineEventCallback+0x54>)
 80019a4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80019a6:	8811      	ldrh	r1, [r2, #0]
 80019a8:	428b      	cmp	r3, r1
    {
 80019aa:	b510      	push	{r4, lr}
 80019ac:	4c12      	ldr	r4, [pc, #72]	; (80019f8 <HAL_LTDC_LineEventCallback+0x58>)
        if (LTDC->LIPCR == lcd_int_active_line)
 80019ae:	d113      	bne.n	80019d8 <HAL_LTDC_LineEventCallback+0x38>
        {
            //entering active area
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_porch_line);
 80019b0:	4b12      	ldr	r3, [pc, #72]	; (80019fc <HAL_LTDC_LineEventCallback+0x5c>)
 80019b2:	8819      	ldrh	r1, [r3, #0]
 80019b4:	f003 fbd0 	bl	8005158 <HAL_LTDC_ProgramLineEvent>
        return instance;
 80019b8:	6822      	ldr	r2, [r4, #0]
        vSyncCnt++;
 80019ba:	f892 3066 	ldrb.w	r3, [r2, #102]	; 0x66
 80019be:	3301      	adds	r3, #1
 80019c0:	f882 3066 	strb.w	r3, [r2, #102]	; 0x66
            HAL::getInstance()->vSync();
            OSWrappers::signalVSync();
 80019c4:	f7ff fc1c 	bl	8001200 <_ZN8touchgfx10OSWrappers11signalVSyncEv>
            // Swap frame buffers immediately instead of waiting for the task to be scheduled in.
            // Note: task will also swap when it wakes up, but that operation is guarded and will not have
            // any effect if already swapped.
            HAL::getInstance()->swapFrameBuffers();
 80019c8:	6820      	ldr	r0, [r4, #0]
 80019ca:	f008 fbe1 	bl	800a190 <_ZN8touchgfx3HAL16swapFrameBuffersEv>
            GPIO::set(GPIO::VSYNC_FREQ);
 80019ce:	2000      	movs	r0, #0
            //exiting active area
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_active_line);
            GPIO::clear(GPIO::VSYNC_FREQ);
            HAL::getInstance()->frontPorchEntered();
        }
    }
 80019d0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            GPIO::set(GPIO::VSYNC_FREQ);
 80019d4:	f7ff baa6 	b.w	8000f24 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_active_line);
 80019d8:	f003 fbbe 	bl	8005158 <HAL_LTDC_ProgramLineEvent>
            GPIO::clear(GPIO::VSYNC_FREQ);
 80019dc:	2000      	movs	r0, #0
 80019de:	f7ff faa2 	bl	8000f26 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
        return instance;
 80019e2:	6820      	ldr	r0, [r4, #0]
        allowDMATransfers();
 80019e4:	6803      	ldr	r3, [r0, #0]
    }
 80019e6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80019ea:	699b      	ldr	r3, [r3, #24]
 80019ec:	4718      	bx	r3
 80019ee:	bf00      	nop
 80019f0:	40016800 	.word	0x40016800
 80019f4:	200013ca 	.word	0x200013ca
 80019f8:	20012188 	.word	0x20012188
 80019fc:	200013c8 	.word	0x200013c8

08001a00 <SPI5_Write>:
/**
  * @brief  Writes a byte to device.
  * @param  Value: value to be written
  */
static void SPI5_Write(uint16_t Value)
{
 8001a00:	b507      	push	{r0, r1, r2, lr}
  HAL_StatusTypeDef status = HAL_OK;
  
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 8001a02:	4b06      	ldr	r3, [pc, #24]	; (8001a1c <SPI5_Write+0x1c>)
{
 8001a04:	a902      	add	r1, sp, #8
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 8001a06:	681b      	ldr	r3, [r3, #0]
{
 8001a08:	f821 0d02 	strh.w	r0, [r1, #-2]!
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 8001a0c:	2201      	movs	r2, #1
 8001a0e:	4804      	ldr	r0, [pc, #16]	; (8001a20 <SPI5_Write+0x20>)
 8001a10:	f004 f89d 	bl	8005b4e <HAL_SPI_Transmit>
  if(status != HAL_OK)
  {
    /* Re-Initialize the BUS */
    SPI5_Error();
  }
}
 8001a14:	b003      	add	sp, #12
 8001a16:	f85d fb04 	ldr.w	pc, [sp], #4
 8001a1a:	bf00      	nop
 8001a1c:	20000010 	.word	0x20000010
 8001a20:	200124f8 	.word	0x200124f8

08001a24 <SystemClock_Config>:
{
 8001a24:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001a26:	b0a1      	sub	sp, #132	; 0x84
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8001a28:	2210      	movs	r2, #16
 8001a2a:	2100      	movs	r1, #0
 8001a2c:	a80a      	add	r0, sp, #40	; 0x28
 8001a2e:	f017 fd76 	bl	801951e <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8001a32:	2214      	movs	r2, #20
 8001a34:	2100      	movs	r1, #0
 8001a36:	a803      	add	r0, sp, #12
 8001a38:	f017 fd71 	bl	801951e <memset>
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 8001a3c:	2100      	movs	r1, #0
 8001a3e:	2230      	movs	r2, #48	; 0x30
 8001a40:	a814      	add	r0, sp, #80	; 0x50
 8001a42:	f017 fd6c 	bl	801951e <memset>
  __HAL_RCC_PWR_CLK_ENABLE();
 8001a46:	2400      	movs	r4, #0
 8001a48:	4b22      	ldr	r3, [pc, #136]	; (8001ad4 <SystemClock_Config+0xb0>)
 8001a4a:	9401      	str	r4, [sp, #4]
 8001a4c:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8001a4e:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 8001a52:	641a      	str	r2, [r3, #64]	; 0x40
 8001a54:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001a56:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8001a5a:	9301      	str	r3, [sp, #4]
 8001a5c:	9b01      	ldr	r3, [sp, #4]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8001a5e:	4b1e      	ldr	r3, [pc, #120]	; (8001ad8 <SystemClock_Config+0xb4>)
 8001a60:	9402      	str	r4, [sp, #8]
 8001a62:	681a      	ldr	r2, [r3, #0]
 8001a64:	f442 4240 	orr.w	r2, r2, #49152	; 0xc000
 8001a68:	601a      	str	r2, [r3, #0]
 8001a6a:	681b      	ldr	r3, [r3, #0]
 8001a6c:	f403 4340 	and.w	r3, r3, #49152	; 0xc000
 8001a70:	9302      	str	r3, [sp, #8]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 8001a72:	2201      	movs	r2, #1
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8001a74:	9b02      	ldr	r3, [sp, #8]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 8001a76:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 8001a7a:	e9cd 2308 	strd	r2, r3, [sp, #32]
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 8001a7e:	2502      	movs	r5, #2
 8001a80:	f44f 0380 	mov.w	r3, #4194304	; 0x400000
 8001a84:	e9cd 530e 	strd	r5, r3, [sp, #56]	; 0x38
  RCC_OscInitStruct.PLL.PLLN = 336;
 8001a88:	2708      	movs	r7, #8
 8001a8a:	f44f 73a8 	mov.w	r3, #336	; 0x150
  RCC_OscInitStruct.PLL.PLLQ = 4;
 8001a8e:	2604      	movs	r6, #4
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8001a90:	a808      	add	r0, sp, #32
  RCC_OscInitStruct.PLL.PLLN = 336;
 8001a92:	e9cd 7310 	strd	r7, r3, [sp, #64]	; 0x40
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 8001a96:	9512      	str	r5, [sp, #72]	; 0x48
  RCC_OscInitStruct.PLL.PLLQ = 4;
 8001a98:	9613      	str	r6, [sp, #76]	; 0x4c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8001a9a:	f003 fb7b 	bl	8005194 <HAL_RCC_OscConfig>
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8001a9e:	230f      	movs	r3, #15
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 8001aa0:	e9cd 3503 	strd	r3, r5, [sp, #12]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 8001aa4:	f44f 51a0 	mov.w	r1, #5120	; 0x1400
 8001aa8:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8001aac:	e9cd 1306 	strd	r1, r3, [sp, #24]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 8001ab0:	a803      	add	r0, sp, #12
 8001ab2:	2105      	movs	r1, #5
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 8001ab4:	9405      	str	r4, [sp, #20]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 8001ab6:	f003 fd41 	bl	800553c <HAL_RCC_ClockConfig>
  PeriphClkInitStruct.PLLSAI.PLLSAIN = 192;
 8001aba:	23c0      	movs	r3, #192	; 0xc0
 8001abc:	9318      	str	r3, [sp, #96]	; 0x60
  if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8001abe:	a814      	add	r0, sp, #80	; 0x50
  PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_8;
 8001ac0:	f44f 3300 	mov.w	r3, #131072	; 0x20000
  PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
 8001ac4:	9714      	str	r7, [sp, #80]	; 0x50
  PeriphClkInitStruct.PLLSAI.PLLSAIR = 4;
 8001ac6:	961a      	str	r6, [sp, #104]	; 0x68
  PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_8;
 8001ac8:	931d      	str	r3, [sp, #116]	; 0x74
  if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8001aca:	f003 fdff 	bl	80056cc <HAL_RCCEx_PeriphCLKConfig>
}
 8001ace:	b021      	add	sp, #132	; 0x84
 8001ad0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001ad2:	bf00      	nop
 8001ad4:	40023800 	.word	0x40023800
 8001ad8:	40007000 	.word	0x40007000

08001adc <main>:
{
 8001adc:	e92d 4880 	stmdb	sp!, {r7, fp, lr}
 8001ae0:	b09f      	sub	sp, #124	; 0x7c
  __HAL_RCC_GPIOF_CLK_ENABLE();
 8001ae2:	2400      	movs	r4, #0
 8001ae4:	4dc7      	ldr	r5, [pc, #796]	; (8001e04 <main+0x328>)
  hi2c3.Instance = I2C3;
 8001ae6:	4ec8      	ldr	r6, [pc, #800]	; (8001e08 <main+0x32c>)
  hsdram1.Instance = FMC_SDRAM_DEVICE;
 8001ae8:	f8df b360 	ldr.w	fp, [pc, #864]	; 8001e4c <main+0x370>
  HAL_Init();
 8001aec:	f002 f8d4 	bl	8003c98 <HAL_Init>
  SystemClock_Config();
 8001af0:	f7ff ff98 	bl	8001a24 <SystemClock_Config>
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001af4:	2214      	movs	r2, #20
 8001af6:	2100      	movs	r1, #0
 8001af8:	a811      	add	r0, sp, #68	; 0x44
 8001afa:	f017 fd10 	bl	801951e <memset>
  __HAL_RCC_GPIOF_CLK_ENABLE();
 8001afe:	9402      	str	r4, [sp, #8]
 8001b00:	6b2b      	ldr	r3, [r5, #48]	; 0x30
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001b02:	48c2      	ldr	r0, [pc, #776]	; (8001e0c <main+0x330>)
  __HAL_RCC_GPIOF_CLK_ENABLE();
 8001b04:	f043 0320 	orr.w	r3, r3, #32
 8001b08:	632b      	str	r3, [r5, #48]	; 0x30
 8001b0a:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 8001b0c:	f003 0320 	and.w	r3, r3, #32
 8001b10:	9302      	str	r3, [sp, #8]
 8001b12:	9b02      	ldr	r3, [sp, #8]
  __HAL_RCC_GPIOH_CLK_ENABLE();
 8001b14:	9403      	str	r4, [sp, #12]
 8001b16:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 8001b18:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8001b1c:	632b      	str	r3, [r5, #48]	; 0x30
 8001b1e:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 8001b20:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8001b24:	9303      	str	r3, [sp, #12]
 8001b26:	9b03      	ldr	r3, [sp, #12]
  __HAL_RCC_GPIOC_CLK_ENABLE();
 8001b28:	9404      	str	r4, [sp, #16]
 8001b2a:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 8001b2c:	f043 0304 	orr.w	r3, r3, #4
 8001b30:	632b      	str	r3, [r5, #48]	; 0x30
 8001b32:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 8001b34:	f003 0304 	and.w	r3, r3, #4
 8001b38:	9304      	str	r3, [sp, #16]
 8001b3a:	9b04      	ldr	r3, [sp, #16]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 8001b3c:	9405      	str	r4, [sp, #20]
 8001b3e:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 8001b40:	f043 0301 	orr.w	r3, r3, #1
 8001b44:	632b      	str	r3, [r5, #48]	; 0x30
 8001b46:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 8001b48:	f003 0301 	and.w	r3, r3, #1
 8001b4c:	9305      	str	r3, [sp, #20]
 8001b4e:	9b05      	ldr	r3, [sp, #20]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 8001b50:	9406      	str	r4, [sp, #24]
 8001b52:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 8001b54:	f043 0302 	orr.w	r3, r3, #2
 8001b58:	632b      	str	r3, [r5, #48]	; 0x30
 8001b5a:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 8001b5c:	f003 0302 	and.w	r3, r3, #2
 8001b60:	9306      	str	r3, [sp, #24]
 8001b62:	9b06      	ldr	r3, [sp, #24]
  __HAL_RCC_GPIOG_CLK_ENABLE();
 8001b64:	9407      	str	r4, [sp, #28]
 8001b66:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 8001b68:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8001b6c:	632b      	str	r3, [r5, #48]	; 0x30
 8001b6e:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 8001b70:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8001b74:	9307      	str	r3, [sp, #28]
 8001b76:	9b07      	ldr	r3, [sp, #28]
  __HAL_RCC_GPIOE_CLK_ENABLE();
 8001b78:	9408      	str	r4, [sp, #32]
 8001b7a:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 8001b7c:	f043 0310 	orr.w	r3, r3, #16
 8001b80:	632b      	str	r3, [r5, #48]	; 0x30
 8001b82:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 8001b84:	f003 0310 	and.w	r3, r3, #16
 8001b88:	9308      	str	r3, [sp, #32]
 8001b8a:	9b08      	ldr	r3, [sp, #32]
  __HAL_RCC_GPIOD_CLK_ENABLE();
 8001b8c:	9409      	str	r4, [sp, #36]	; 0x24
 8001b8e:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 8001b90:	f043 0308 	orr.w	r3, r3, #8
 8001b94:	632b      	str	r3, [r5, #48]	; 0x30
 8001b96:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 8001b98:	f003 0308 	and.w	r3, r3, #8
 8001b9c:	9309      	str	r3, [sp, #36]	; 0x24
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001b9e:	4622      	mov	r2, r4
 8001ba0:	2104      	movs	r1, #4
  __HAL_RCC_GPIOD_CLK_ENABLE();
 8001ba2:	9b09      	ldr	r3, [sp, #36]	; 0x24
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001ba4:	f002 fcfe 	bl	80045a4 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_12|GPIO_PIN_13, GPIO_PIN_RESET);
 8001ba8:	4622      	mov	r2, r4
 8001baa:	f44f 5140 	mov.w	r1, #12288	; 0x3000
 8001bae:	4898      	ldr	r0, [pc, #608]	; (8001e10 <main+0x334>)
 8001bb0:	f002 fcf8 	bl	80045a4 <HAL_GPIO_WritePin>
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001bb4:	2701      	movs	r7, #1
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001bb6:	f04f 0802 	mov.w	r8, #2
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001bba:	f04f 0904 	mov.w	r9, #4
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001bbe:	a911      	add	r1, sp, #68	; 0x44
 8001bc0:	4892      	ldr	r0, [pc, #584]	; (8001e0c <main+0x330>)
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001bc2:	f8cd 8050 	str.w	r8, [sp, #80]	; 0x50
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001bc6:	e9cd 9711 	strd	r9, r7, [sp, #68]	; 0x44
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001bca:	9413      	str	r4, [sp, #76]	; 0x4c
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001bcc:	f002 fbfe 	bl	80043cc <HAL_GPIO_Init>
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001bd0:	a911      	add	r1, sp, #68	; 0x44
  GPIO_InitStruct.Pin = GPIO_PIN_12|GPIO_PIN_13;
 8001bd2:	f44f 5340 	mov.w	r3, #12288	; 0x3000
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001bd6:	488e      	ldr	r0, [pc, #568]	; (8001e10 <main+0x334>)
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001bd8:	e9cd 3711 	strd	r3, r7, [sp, #68]	; 0x44
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001bdc:	e9cd 4813 	strd	r4, r8, [sp, #76]	; 0x4c
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001be0:	f002 fbf4 	bl	80043cc <HAL_GPIO_Init>
  hcrc.Instance = CRC;
 8001be4:	488b      	ldr	r0, [pc, #556]	; (8001e14 <main+0x338>)
 8001be6:	4b8c      	ldr	r3, [pc, #560]	; (8001e18 <main+0x33c>)
 8001be8:	6003      	str	r3, [r0, #0]
  if (HAL_CRC_Init(&hcrc) != HAL_OK)
 8001bea:	f002 f8fd 	bl	8003de8 <HAL_CRC_Init>
  hi2c3.Init.ClockSpeed = 100000;
 8001bee:	4a8b      	ldr	r2, [pc, #556]	; (8001e1c <main+0x340>)
 8001bf0:	4b8b      	ldr	r3, [pc, #556]	; (8001e20 <main+0x344>)
  hi2c3.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 8001bf2:	6234      	str	r4, [r6, #32]
  hi2c3.Init.ClockSpeed = 100000;
 8001bf4:	e9c6 2300 	strd	r2, r3, [r6]
  if (HAL_I2C_Init(&hi2c3) != HAL_OK)
 8001bf8:	4630      	mov	r0, r6
  hi2c3.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 8001bfa:	f44f 4380 	mov.w	r3, #16384	; 0x4000
  hi2c3.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 8001bfe:	e9c6 3404 	strd	r3, r4, [r6, #16]
  hi2c3.Init.OwnAddress1 = 0;
 8001c02:	e9c6 4402 	strd	r4, r4, [r6, #8]
  hi2c3.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 8001c06:	e9c6 4406 	strd	r4, r4, [r6, #24]
  if (HAL_I2C_Init(&hi2c3) != HAL_OK)
 8001c0a:	f002 fea5 	bl	8004958 <HAL_I2C_Init>
  if (HAL_I2CEx_ConfigAnalogFilter(&hi2c3, I2C_ANALOGFILTER_DISABLE) != HAL_OK)
 8001c0e:	2110      	movs	r1, #16
 8001c10:	4630      	mov	r0, r6
 8001c12:	f003 f8e9 	bl	8004de8 <HAL_I2CEx_ConfigAnalogFilter>
  if (HAL_I2CEx_ConfigDigitalFilter(&hi2c3, 0) != HAL_OK)
 8001c16:	4621      	mov	r1, r4
 8001c18:	4630      	mov	r0, r6
 8001c1a:	f003 f904 	bl	8004e26 <HAL_I2CEx_ConfigDigitalFilter>
  hspi5.Instance = SPI5;
 8001c1e:	4881      	ldr	r0, [pc, #516]	; (8001e24 <main+0x348>)
  hspi5.Init.Mode = SPI_MODE_MASTER;
 8001c20:	4981      	ldr	r1, [pc, #516]	; (8001e28 <main+0x34c>)
  hspi5.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 8001c22:	6284      	str	r4, [r0, #40]	; 0x28
  hspi5.Init.Mode = SPI_MODE_MASTER;
 8001c24:	f44f 7382 	mov.w	r3, #260	; 0x104
 8001c28:	e9c0 1300 	strd	r1, r3, [r0]
  hspi5.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_16;
 8001c2c:	f44f 7600 	mov.w	r6, #512	; 0x200
 8001c30:	2318      	movs	r3, #24
 8001c32:	e9c0 6306 	strd	r6, r3, [r0, #24]
  hspi5.Init.CRCPolynomial = 10;
 8001c36:	230a      	movs	r3, #10
 8001c38:	62c3      	str	r3, [r0, #44]	; 0x2c
  hspi5.Init.DataSize = SPI_DATASIZE_8BIT;
 8001c3a:	e9c0 4402 	strd	r4, r4, [r0, #8]
  hspi5.Init.CLKPhase = SPI_PHASE_1EDGE;
 8001c3e:	e9c0 4404 	strd	r4, r4, [r0, #16]
  hspi5.Init.TIMode = SPI_TIMODE_DISABLE;
 8001c42:	e9c0 4408 	strd	r4, r4, [r0, #32]
  if (HAL_SPI_Init(&hspi5) != HAL_OK)
 8001c46:	f003 ff45 	bl	8005ad4 <HAL_SPI_Init>
  hsdram1.Instance = FMC_SDRAM_DEVICE;
 8001c4a:	4a78      	ldr	r2, [pc, #480]	; (8001e2c <main+0x350>)
  SdramTiming.LoadToActiveDelay = 2;
 8001c4c:	f8cd 8044 	str.w	r8, [sp, #68]	; 0x44
  hsdram1.Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
 8001c50:	f04f 0a10 	mov.w	sl, #16
  hsdram1.Init.SDBank = FMC_SDRAM_BANK2;
 8001c54:	e9cb 2700 	strd	r2, r7, [fp]
  hsdram1.Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
 8001c58:	2240      	movs	r2, #64	; 0x40
 8001c5a:	e9cb a204 	strd	sl, r2, [fp, #16]
  hsdram1.Init.CASLatency = FMC_SDRAM_CAS_LATENCY_3;
 8001c5e:	f44f 72c0 	mov.w	r2, #384	; 0x180
  hsdram1.Init.WriteProtection = FMC_SDRAM_WRITE_PROTECTION_DISABLE;
 8001c62:	e9cb 2406 	strd	r2, r4, [fp, #24]
  hsdram1.Init.SDClockPeriod = FMC_SDRAM_CLOCK_PERIOD_2;
 8001c66:	f44f 6200 	mov.w	r2, #2048	; 0x800
  hsdram1.Init.ReadBurst = FMC_SDRAM_RBURST_DISABLE;
 8001c6a:	e9cb 2408 	strd	r2, r4, [fp, #32]
  hsdram1.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_1;
 8001c6e:	f44f 5200 	mov.w	r2, #8192	; 0x2000
  SdramTiming.WriteRecoveryTime = 3;
 8001c72:	2303      	movs	r3, #3
  hsdram1.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_1;
 8001c74:	f8cb 2028 	str.w	r2, [fp, #40]	; 0x28
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 8001c78:	a911      	add	r1, sp, #68	; 0x44
  SdramTiming.ExitSelfRefreshDelay = 7;
 8001c7a:	2207      	movs	r2, #7
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 8001c7c:	4658      	mov	r0, fp
  SdramTiming.RPDelay = 2;
 8001c7e:	e9cd 3815 	strd	r3, r8, [sp, #84]	; 0x54
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 8001c82:	2608      	movs	r6, #8
  hsdram1.Init.RowBitsNumber = FMC_SDRAM_ROW_BITS_NUM_12;
 8001c84:	e9cb 4902 	strd	r4, r9, [fp, #8]
  SdramTiming.SelfRefreshTime = 4;
 8001c88:	e9cd 2912 	strd	r2, r9, [sp, #72]	; 0x48
  SdramTiming.RowCycleDelay = 7;
 8001c8c:	9214      	str	r2, [sp, #80]	; 0x50
  SdramTiming.RCDDelay = 2;
 8001c8e:	f8cd 805c 	str.w	r8, [sp, #92]	; 0x5c
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 8001c92:	f003 fe45 	bl	8005920 <HAL_SDRAM_Init>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001c96:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8001c9a:	a90d      	add	r1, sp, #52	; 0x34
 8001c9c:	4658      	mov	r0, fp
  Command->AutoRefreshNumber       = 1;
 8001c9e:	e9cd 670e 	strd	r6, r7, [sp, #56]	; 0x38
  Command->CommandMode             = FMC_SDRAM_CMD_CLK_ENABLE;
 8001ca2:	970d      	str	r7, [sp, #52]	; 0x34
 __IO uint32_t tmpmrd =0;
 8001ca4:	940a      	str	r4, [sp, #40]	; 0x28
  Command->ModeRegisterDefinition  = 0;
 8001ca6:	9410      	str	r4, [sp, #64]	; 0x40
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001ca8:	f003 fe5a 	bl	8005960 <HAL_SDRAM_SendCommand>
  HAL_Delay(1);
 8001cac:	4638      	mov	r0, r7
 8001cae:	f002 f81f 	bl	8003cf0 <HAL_Delay>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);  
 8001cb2:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8001cb6:	a90d      	add	r1, sp, #52	; 0x34
 8001cb8:	4658      	mov	r0, fp
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 8001cba:	e9cd 860d 	strd	r8, r6, [sp, #52]	; 0x34
  Command->ModeRegisterDefinition  = 0;
 8001cbe:	e9cd 740f 	strd	r7, r4, [sp, #60]	; 0x3c
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);  
 8001cc2:	f003 fe4d 	bl	8005960 <HAL_SDRAM_SendCommand>
  Command->CommandMode             = FMC_SDRAM_CMD_AUTOREFRESH_MODE;
 8001cc6:	2303      	movs	r3, #3
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001cc8:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8001ccc:	a90d      	add	r1, sp, #52	; 0x34
 8001cce:	4658      	mov	r0, fp
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 8001cd0:	e9cd 360d 	strd	r3, r6, [sp, #52]	; 0x34
  Command->ModeRegisterDefinition  = 0;
 8001cd4:	e9cd 940f 	strd	r9, r4, [sp, #60]	; 0x3c
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001cd8:	f003 fe42 	bl	8005960 <HAL_SDRAM_SendCommand>
  tmpmrd = (uint32_t)SDRAM_MODEREG_BURST_LENGTH_1          |
 8001cdc:	f44f 720c 	mov.w	r2, #560	; 0x230
 8001ce0:	920a      	str	r2, [sp, #40]	; 0x28
  Command->ModeRegisterDefinition  = tmpmrd;
 8001ce2:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8001ce4:	9210      	str	r2, [sp, #64]	; 0x40
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001ce6:	a90d      	add	r1, sp, #52	; 0x34
 8001ce8:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8001cec:	4658      	mov	r0, fp
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 8001cee:	e9cd 960d 	strd	r9, r6, [sp, #52]	; 0x34
  Command->AutoRefreshNumber       = 1;
 8001cf2:	970f      	str	r7, [sp, #60]	; 0x3c
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001cf4:	f003 fe34 	bl	8005960 <HAL_SDRAM_SendCommand>
  HAL_SDRAM_ProgramRefreshRate(hsdram, REFRESH_COUNT); 
 8001cf8:	f240 516a 	movw	r1, #1386	; 0x56a
 8001cfc:	4658      	mov	r0, fp
 8001cfe:	f003 fe46 	bl	800598e <HAL_SDRAM_ProgramRefreshRate>
  LTDC_LayerCfgTypeDef pLayerCfg = {0};
 8001d02:	2234      	movs	r2, #52	; 0x34
 8001d04:	4621      	mov	r1, r4
 8001d06:	a811      	add	r0, sp, #68	; 0x44
 8001d08:	f017 fc09 	bl	801951e <memset>
  hltdc.Instance = LTDC;
 8001d0c:	4e48      	ldr	r6, [pc, #288]	; (8001e30 <main+0x354>)
 8001d0e:	4b49      	ldr	r3, [pc, #292]	; (8001e34 <main+0x358>)
  hltdc.Init.DEPolarity = LTDC_DEPOLARITY_AL;
 8001d10:	6134      	str	r4, [r6, #16]
  hltdc.Instance = LTDC;
 8001d12:	e9c6 3400 	strd	r3, r4, [r6]
  hltdc.Init.PCPolarity = LTDC_PCPOLARITY_IPC;
 8001d16:	2309      	movs	r3, #9
  hltdc.Init.AccumulatedHBP = 29;
 8001d18:	f04f 0c1d 	mov.w	ip, #29
  hltdc.Init.HorizontalSync = 9;
 8001d1c:	e9c6 3705 	strd	r3, r7, [r6, #20]
  hltdc.Init.AccumulatedHBP = 29;
 8001d20:	2303      	movs	r3, #3
 8001d22:	e9c6 c307 	strd	ip, r3, [r6, #28]
  hltdc.Init.AccumulatedActiveW = 269;
 8001d26:	f240 1e0d 	movw	lr, #269	; 0x10d
 8001d2a:	f240 1343 	movw	r3, #323	; 0x143
 8001d2e:	e9c6 e309 	strd	lr, r3, [r6, #36]	; 0x24
  hltdc.Init.TotalWidth = 279;
 8001d32:	f240 1b17 	movw	fp, #279	; 0x117
 8001d36:	f240 1347 	movw	r3, #327	; 0x147
 8001d3a:	e9c6 b30b 	strd	fp, r3, [r6, #44]	; 0x2c
  hltdc.Init.VSPolarity = LTDC_VSPOLARITY_AL;
 8001d3e:	e9c6 4402 	strd	r4, r4, [r6, #8]
  hltdc.Init.TotalHeigh = 327;
 8001d42:	86b4      	strh	r4, [r6, #52]	; 0x34
  hltdc.Init.Backcolor.Green = 0;
 8001d44:	f886 4036 	strb.w	r4, [r6, #54]	; 0x36
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 8001d48:	4630      	mov	r0, r6
 8001d4a:	f003 f911 	bl	8004f70 <HAL_LTDC_Init>
  pLayerCfg.PixelFormat = LTDC_PIXEL_FORMAT_RGB565;
 8001d4e:	21ff      	movs	r1, #255	; 0xff
  pLayerCfg.WindowX0 = 0;
 8001d50:	22f0      	movs	r2, #240	; 0xf0
  pLayerCfg.Alpha = 255;
 8001d52:	e9cd 1416 	strd	r1, r4, [sp, #88]	; 0x58
  pLayerCfg.BlendingFactor1 = LTDC_BLENDING_FACTOR1_CA;
 8001d56:	f44f 6080 	mov.w	r0, #1024	; 0x400
 8001d5a:	2105      	movs	r1, #5
  pLayerCfg.WindowY0 = 0;
 8001d5c:	f44f 73a0 	mov.w	r3, #320	; 0x140
  pLayerCfg.BlendingFactor1 = LTDC_BLENDING_FACTOR1_CA;
 8001d60:	e9cd 0118 	strd	r0, r1, [sp, #96]	; 0x60
  pLayerCfg.WindowX1 = 240;
 8001d64:	e9cd 2412 	strd	r2, r4, [sp, #72]	; 0x48
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 8001d68:	a911      	add	r1, sp, #68	; 0x44
  pLayerCfg.FBStartAdress = 0;
 8001d6a:	e9cd 421a 	strd	r4, r2, [sp, #104]	; 0x68
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 8001d6e:	4630      	mov	r0, r6
 8001d70:	4622      	mov	r2, r4
  pLayerCfg.WindowY1 = 320;
 8001d72:	e9cd 3814 	strd	r3, r8, [sp, #80]	; 0x50
  LcdDrv = &ili9341_drv;
 8001d76:	4e30      	ldr	r6, [pc, #192]	; (8001e38 <main+0x35c>)
  pLayerCfg.ImageWidth = 240;
 8001d78:	931c      	str	r3, [sp, #112]	; 0x70
  pLayerCfg.WindowX0 = 0;
 8001d7a:	9411      	str	r4, [sp, #68]	; 0x44
  pLayerCfg.ImageHeight = 320;
 8001d7c:	f8ad 4074 	strh.w	r4, [sp, #116]	; 0x74
  pLayerCfg.Backcolor.Green = 0;
 8001d80:	f88d 4076 	strb.w	r4, [sp, #118]	; 0x76
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 8001d84:	f003 f9bf 	bl	8005106 <HAL_LTDC_ConfigLayer>
  LcdDrv = &ili9341_drv;
 8001d88:	4b2c      	ldr	r3, [pc, #176]	; (8001e3c <main+0x360>)
 8001d8a:	6033      	str	r3, [r6, #0]
  LcdDrv->Init();
 8001d8c:	681b      	ldr	r3, [r3, #0]
 8001d8e:	4798      	blx	r3
  LcdDrv->DisplayOff();
 8001d90:	6833      	ldr	r3, [r6, #0]
  hdma2d.Instance = DMA2D;
 8001d92:	4e2b      	ldr	r6, [pc, #172]	; (8001e40 <main+0x364>)
  LcdDrv->DisplayOff();
 8001d94:	68db      	ldr	r3, [r3, #12]
 8001d96:	4798      	blx	r3
  hdma2d.Instance = DMA2D;
 8001d98:	4b2a      	ldr	r3, [pc, #168]	; (8001e44 <main+0x368>)
  hdma2d.LayerCfg[1].InputColorMode = DMA2D_INPUT_RGB565;
 8001d9a:	e9c6 480a 	strd	r4, r8, [r6, #40]	; 0x28
  hdma2d.LayerCfg[1].InputAlpha = 0;
 8001d9e:	e9c6 440c 	strd	r4, r4, [r6, #48]	; 0x30
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
 8001da2:	4630      	mov	r0, r6
  hdma2d.Init.Mode = DMA2D_M2M;
 8001da4:	e9c6 3400 	strd	r3, r4, [r6]
  hdma2d.Init.OutputOffset = 0;
 8001da8:	e9c6 8402 	strd	r8, r4, [r6, #8]
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
 8001dac:	f002 f93c 	bl	8004028 <HAL_DMA2D_Init>
  if (HAL_DMA2D_ConfigLayer(&hdma2d, 1) != HAL_OK)
 8001db0:	4639      	mov	r1, r7
 8001db2:	4630      	mov	r0, r6
 8001db4:	f002 fac0 	bl	8004338 <HAL_DMA2D_ConfigLayer>
  MX_TouchGFX_Init();
 8001db8:	f7ff f809 	bl	8000dce <MX_TouchGFX_Init>
  */
static void MX_DMA_Init(void)
{

  /* DMA controller clock enable */
  __HAL_RCC_DMA1_CLK_ENABLE();
 8001dbc:	9401      	str	r4, [sp, #4]
 8001dbe:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 8001dc0:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 8001dc4:	632b      	str	r3, [r5, #48]	; 0x30
 8001dc6:	6b2b      	ldr	r3, [r5, #48]	; 0x30
  htim2.Instance = TIM2;
 8001dc8:	4d1f      	ldr	r5, [pc, #124]	; (8001e48 <main+0x36c>)
  __HAL_RCC_DMA1_CLK_ENABLE();
 8001dca:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 8001dce:	9301      	str	r3, [sp, #4]
  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 8001dd0:	4652      	mov	r2, sl
 8001dd2:	4621      	mov	r1, r4
 8001dd4:	a80d      	add	r0, sp, #52	; 0x34
  __HAL_RCC_DMA1_CLK_ENABLE();
 8001dd6:	9b01      	ldr	r3, [sp, #4]
  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 8001dd8:	f017 fba1 	bl	801951e <memset>
  TIM_OC_InitTypeDef sConfigOC = {0};
 8001ddc:	221c      	movs	r2, #28
 8001dde:	4621      	mov	r1, r4
 8001de0:	a811      	add	r0, sp, #68	; 0x44
  htim2.Init.Prescaler = 167;
 8001de2:	f04f 0ba7 	mov.w	fp, #167	; 0xa7
  htim2.Init.Period = 9999;
 8001de6:	f242 780f 	movw	r8, #9999	; 0x270f
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8001dea:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
  TIM_OC_InitTypeDef sConfigOC = {0};
 8001dee:	f017 fb96 	bl	801951e <memset>
  htim2.Init.Prescaler = 167;
 8001df2:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
  if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 8001df6:	4628      	mov	r0, r5
  htim2.Init.Prescaler = 167;
 8001df8:	e9c5 3b00 	strd	r3, fp, [r5]
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8001dfc:	f44f 5780 	mov.w	r7, #4096	; 0x1000
 8001e00:	e026      	b.n	8001e50 <main+0x374>
 8001e02:	bf00      	nop
 8001e04:	40023800 	.word	0x40023800
 8001e08:	200124a4 	.word	0x200124a4
 8001e0c:	40020800 	.word	0x40020800
 8001e10:	40020c00 	.word	0x40020c00
 8001e14:	20012590 	.word	0x20012590
 8001e18:	40023000 	.word	0x40023000
 8001e1c:	40005c00 	.word	0x40005c00
 8001e20:	000186a0 	.word	0x000186a0
 8001e24:	200124f8 	.word	0x200124f8
 8001e28:	40015000 	.word	0x40015000
 8001e2c:	a0000140 	.word	0xa0000140
 8001e30:	20012678 	.word	0x20012678
 8001e34:	40016800 	.word	0x40016800
 8001e38:	200013cc 	.word	0x200013cc
 8001e3c:	20000024 	.word	0x20000024
 8001e40:	200127e4 	.word	0x200127e4
 8001e44:	4002b000 	.word	0x4002b000
 8001e48:	20012824 	.word	0x20012824
 8001e4c:	200128c4 	.word	0x200128c4
  htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 8001e50:	60ac      	str	r4, [r5, #8]
  htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8001e52:	e9c5 8403 	strd	r8, r4, [r5, #12]
  htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8001e56:	61ac      	str	r4, [r5, #24]
  if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 8001e58:	f004 fa9a 	bl	8006390 <HAL_TIM_Base_Init>
  if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 8001e5c:	a90d      	add	r1, sp, #52	; 0x34
 8001e5e:	4628      	mov	r0, r5
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8001e60:	970d      	str	r7, [sp, #52]	; 0x34
  if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 8001e62:	f004 fb6b 	bl	800653c <HAL_TIM_ConfigClockSource>
  if (HAL_TIM_PWM_Init(&htim2) != HAL_OK)
 8001e66:	4628      	mov	r0, r5
 8001e68:	f004 faac 	bl	80063c4 <HAL_TIM_PWM_Init>
  if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 8001e6c:	a90b      	add	r1, sp, #44	; 0x2c
 8001e6e:	4628      	mov	r0, r5
  sConfigOC.OCMode = TIM_OCMODE_PWM1;
 8001e70:	2660      	movs	r6, #96	; 0x60
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8001e72:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
  if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 8001e76:	f004 fc8d 	bl	8006794 <HAL_TIMEx_MasterConfigSynchronization>
  if (HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_4) != HAL_OK)
 8001e7a:	220c      	movs	r2, #12
 8001e7c:	a911      	add	r1, sp, #68	; 0x44
 8001e7e:	4628      	mov	r0, r5
  sConfigOC.Pulse = 0;
 8001e80:	e9cd 6411 	strd	r6, r4, [sp, #68]	; 0x44
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 8001e84:	9413      	str	r4, [sp, #76]	; 0x4c
  sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 8001e86:	9415      	str	r4, [sp, #84]	; 0x54
  if (HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_4) != HAL_OK)
 8001e88:	f004 faec 	bl	8006464 <HAL_TIM_PWM_ConfigChannel>
  HAL_TIM_MspPostInit(&htim2);
 8001e8c:	4628      	mov	r0, r5
 8001e8e:	f000 fc87 	bl	80027a0 <HAL_TIM_MspPostInit>
  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 8001e92:	4652      	mov	r2, sl
 8001e94:	4621      	mov	r1, r4
 8001e96:	a80d      	add	r0, sp, #52	; 0x34
  htim3.Instance = TIM3;
 8001e98:	4d4d      	ldr	r5, [pc, #308]	; (8001fd0 <main+0x4f4>)
  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 8001e9a:	f017 fb40 	bl	801951e <memset>
  TIM_OC_InitTypeDef sConfigOC = {0};
 8001e9e:	221c      	movs	r2, #28
 8001ea0:	4621      	mov	r1, r4
 8001ea2:	a811      	add	r0, sp, #68	; 0x44
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8001ea4:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
  TIM_OC_InitTypeDef sConfigOC = {0};
 8001ea8:	f017 fb39 	bl	801951e <memset>
  htim3.Instance = TIM3;
 8001eac:	4b49      	ldr	r3, [pc, #292]	; (8001fd4 <main+0x4f8>)
  htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8001eae:	612c      	str	r4, [r5, #16]
  if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 8001eb0:	4628      	mov	r0, r5
  htim3.Init.Prescaler = 167;
 8001eb2:	e9c5 3b00 	strd	r3, fp, [r5]
  htim3.Init.Period = 9999;
 8001eb6:	e9c5 4802 	strd	r4, r8, [r5, #8]
  htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8001eba:	61ac      	str	r4, [r5, #24]
  if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 8001ebc:	f004 fa68 	bl	8006390 <HAL_TIM_Base_Init>
  if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 8001ec0:	a90d      	add	r1, sp, #52	; 0x34
 8001ec2:	4628      	mov	r0, r5
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8001ec4:	970d      	str	r7, [sp, #52]	; 0x34
  if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 8001ec6:	f004 fb39 	bl	800653c <HAL_TIM_ConfigClockSource>
  if (HAL_TIM_PWM_Init(&htim3) != HAL_OK)
 8001eca:	4628      	mov	r0, r5
 8001ecc:	f004 fa7a 	bl	80063c4 <HAL_TIM_PWM_Init>
  if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 8001ed0:	a90b      	add	r1, sp, #44	; 0x2c
 8001ed2:	4628      	mov	r0, r5
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8001ed4:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
  if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 8001ed8:	f004 fc5c 	bl	8006794 <HAL_TIMEx_MasterConfigSynchronization>
  if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_2) != HAL_OK)
 8001edc:	464a      	mov	r2, r9
 8001ede:	a911      	add	r1, sp, #68	; 0x44
 8001ee0:	4628      	mov	r0, r5
  sConfigOC.Pulse = 0;
 8001ee2:	e9cd 6411 	strd	r6, r4, [sp, #68]	; 0x44
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 8001ee6:	9413      	str	r4, [sp, #76]	; 0x4c
  sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 8001ee8:	9415      	str	r4, [sp, #84]	; 0x54
  if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_2) != HAL_OK)
 8001eea:	f004 fabb 	bl	8006464 <HAL_TIM_PWM_ConfigChannel>
  HAL_TIM_MspPostInit(&htim3);
 8001eee:	4628      	mov	r0, r5
 8001ef0:	f000 fc56 	bl	80027a0 <HAL_TIM_MspPostInit>
  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 8001ef4:	4652      	mov	r2, sl
 8001ef6:	4621      	mov	r1, r4
 8001ef8:	a80d      	add	r0, sp, #52	; 0x34
  htim4.Instance = TIM4;
 8001efa:	4d37      	ldr	r5, [pc, #220]	; (8001fd8 <main+0x4fc>)
  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 8001efc:	f017 fb0f 	bl	801951e <memset>
  TIM_OC_InitTypeDef sConfigOC = {0};
 8001f00:	221c      	movs	r2, #28
 8001f02:	4621      	mov	r1, r4
 8001f04:	a811      	add	r0, sp, #68	; 0x44
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8001f06:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
  TIM_OC_InitTypeDef sConfigOC = {0};
 8001f0a:	f017 fb08 	bl	801951e <memset>
  htim4.Instance = TIM4;
 8001f0e:	4b33      	ldr	r3, [pc, #204]	; (8001fdc <main+0x500>)
  htim4.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8001f10:	612c      	str	r4, [r5, #16]
  if (HAL_TIM_Base_Init(&htim4) != HAL_OK)
 8001f12:	4628      	mov	r0, r5
  htim4.Init.Prescaler = 167;
 8001f14:	e9c5 3b00 	strd	r3, fp, [r5]
  htim4.Init.Period = 9999;
 8001f18:	e9c5 4802 	strd	r4, r8, [r5, #8]
  htim4.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8001f1c:	61ac      	str	r4, [r5, #24]
  if (HAL_TIM_Base_Init(&htim4) != HAL_OK)
 8001f1e:	f004 fa37 	bl	8006390 <HAL_TIM_Base_Init>
  if (HAL_TIM_ConfigClockSource(&htim4, &sClockSourceConfig) != HAL_OK)
 8001f22:	a90d      	add	r1, sp, #52	; 0x34
 8001f24:	4628      	mov	r0, r5
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8001f26:	970d      	str	r7, [sp, #52]	; 0x34
  if (HAL_TIM_ConfigClockSource(&htim4, &sClockSourceConfig) != HAL_OK)
 8001f28:	f004 fb08 	bl	800653c <HAL_TIM_ConfigClockSource>
  if (HAL_TIM_PWM_Init(&htim4) != HAL_OK)
 8001f2c:	4628      	mov	r0, r5
 8001f2e:	f004 fa49 	bl	80063c4 <HAL_TIM_PWM_Init>
  if (HAL_TIMEx_MasterConfigSynchronization(&htim4, &sMasterConfig) != HAL_OK)
 8001f32:	a90b      	add	r1, sp, #44	; 0x2c
 8001f34:	4628      	mov	r0, r5
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8001f36:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
  if (HAL_TIMEx_MasterConfigSynchronization(&htim4, &sMasterConfig) != HAL_OK)
 8001f3a:	f004 fc2b 	bl	8006794 <HAL_TIMEx_MasterConfigSynchronization>
  if (HAL_TIM_PWM_ConfigChannel(&htim4, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 8001f3e:	4622      	mov	r2, r4
 8001f40:	a911      	add	r1, sp, #68	; 0x44
 8001f42:	4628      	mov	r0, r5
  sConfigOC.Pulse = 0;
 8001f44:	e9cd 6411 	strd	r6, r4, [sp, #68]	; 0x44
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 8001f48:	9413      	str	r4, [sp, #76]	; 0x4c
  sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 8001f4a:	9415      	str	r4, [sp, #84]	; 0x54
  if (HAL_TIM_PWM_ConfigChannel(&htim4, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 8001f4c:	f004 fa8a 	bl	8006464 <HAL_TIM_PWM_ConfigChannel>
  HAL_TIM_MspPostInit(&htim4);
 8001f50:	4628      	mov	r0, r5
 8001f52:	f000 fc25 	bl	80027a0 <HAL_TIM_MspPostInit>
  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 8001f56:	4652      	mov	r2, sl
 8001f58:	4621      	mov	r1, r4
 8001f5a:	a80d      	add	r0, sp, #52	; 0x34
  htim5.Instance = TIM5;
 8001f5c:	4d20      	ldr	r5, [pc, #128]	; (8001fe0 <main+0x504>)
  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 8001f5e:	f017 fade 	bl	801951e <memset>
  TIM_OC_InitTypeDef sConfigOC = {0};
 8001f62:	221c      	movs	r2, #28
 8001f64:	4621      	mov	r1, r4
 8001f66:	a811      	add	r0, sp, #68	; 0x44
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8001f68:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
  TIM_OC_InitTypeDef sConfigOC = {0};
 8001f6c:	f017 fad7 	bl	801951e <memset>
  htim5.Instance = TIM5;
 8001f70:	4b1c      	ldr	r3, [pc, #112]	; (8001fe4 <main+0x508>)
  htim5.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8001f72:	612c      	str	r4, [r5, #16]
  if (HAL_TIM_Base_Init(&htim5) != HAL_OK)
 8001f74:	4628      	mov	r0, r5
  htim5.Init.Prescaler = 167;
 8001f76:	e9c5 3b00 	strd	r3, fp, [r5]
  htim5.Init.Period = 9999;
 8001f7a:	e9c5 4802 	strd	r4, r8, [r5, #8]
  htim5.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8001f7e:	61ac      	str	r4, [r5, #24]
  if (HAL_TIM_Base_Init(&htim5) != HAL_OK)
 8001f80:	f004 fa06 	bl	8006390 <HAL_TIM_Base_Init>
  if (HAL_TIM_ConfigClockSource(&htim5, &sClockSourceConfig) != HAL_OK)
 8001f84:	a90d      	add	r1, sp, #52	; 0x34
 8001f86:	4628      	mov	r0, r5
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8001f88:	970d      	str	r7, [sp, #52]	; 0x34
  if (HAL_TIM_ConfigClockSource(&htim5, &sClockSourceConfig) != HAL_OK)
 8001f8a:	f004 fad7 	bl	800653c <HAL_TIM_ConfigClockSource>
  if (HAL_TIM_PWM_Init(&htim5) != HAL_OK)
 8001f8e:	4628      	mov	r0, r5
 8001f90:	f004 fa18 	bl	80063c4 <HAL_TIM_PWM_Init>
  if (HAL_TIMEx_MasterConfigSynchronization(&htim5, &sMasterConfig) != HAL_OK)
 8001f94:	a90b      	add	r1, sp, #44	; 0x2c
 8001f96:	4628      	mov	r0, r5
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8001f98:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
  if (HAL_TIMEx_MasterConfigSynchronization(&htim5, &sMasterConfig) != HAL_OK)
 8001f9c:	f004 fbfa 	bl	8006794 <HAL_TIMEx_MasterConfigSynchronization>
  if (HAL_TIM_PWM_ConfigChannel(&htim5, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 8001fa0:	4622      	mov	r2, r4
 8001fa2:	a911      	add	r1, sp, #68	; 0x44
 8001fa4:	4628      	mov	r0, r5
  sConfigOC.Pulse = 0;
 8001fa6:	e9cd 6411 	strd	r6, r4, [sp, #68]	; 0x44
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 8001faa:	9413      	str	r4, [sp, #76]	; 0x4c
  sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 8001fac:	9415      	str	r4, [sp, #84]	; 0x54
  if (HAL_TIM_PWM_ConfigChannel(&htim5, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 8001fae:	f004 fa59 	bl	8006464 <HAL_TIM_PWM_ConfigChannel>
  HAL_TIM_MspPostInit(&htim5);
 8001fb2:	4628      	mov	r0, r5
 8001fb4:	f000 fbf4 	bl	80027a0 <HAL_TIM_MspPostInit>
  osKernelInitialize();
 8001fb8:	f004 fcce 	bl	8006958 <osKernelInitialize>
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 8001fbc:	4a0a      	ldr	r2, [pc, #40]	; (8001fe8 <main+0x50c>)
 8001fbe:	480b      	ldr	r0, [pc, #44]	; (8001fec <main+0x510>)
 8001fc0:	4621      	mov	r1, r4
 8001fc2:	f004 fd03 	bl	80069cc <osThreadNew>
 8001fc6:	4b0a      	ldr	r3, [pc, #40]	; (8001ff0 <main+0x514>)
 8001fc8:	6018      	str	r0, [r3, #0]
  osKernelStart();
 8001fca:	f004 fcdf 	bl	800698c <osKernelStart>
 8001fce:	e7fe      	b.n	8001fce <main+0x4f2>
 8001fd0:	20012638 	.word	0x20012638
 8001fd4:	40000400 	.word	0x40000400
 8001fd8:	20012550 	.word	0x20012550
 8001fdc:	40000800 	.word	0x40000800
 8001fe0:	200125f8 	.word	0x200125f8
 8001fe4:	40000c00 	.word	0x40000c00
 8001fe8:	0801a964 	.word	0x0801a964
 8001fec:	08000dd3 	.word	0x08000dd3
 8001ff0:	200127e0 	.word	0x200127e0

08001ff4 <IOE_Init>:
 8001ff4:	4770      	bx	lr

08001ff6 <IOE_ITConfig>:
 8001ff6:	4770      	bx	lr

08001ff8 <IOE_Write>:
{
 8001ff8:	b510      	push	{r4, lr}
 8001ffa:	b086      	sub	sp, #24
 8001ffc:	ac06      	add	r4, sp, #24
  status = HAL_I2C_Mem_Write(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, &Value, 1, I2c3Timeout); 
 8001ffe:	4b07      	ldr	r3, [pc, #28]	; (800201c <IOE_Write+0x24>)
 8002000:	f804 2d01 	strb.w	r2, [r4, #-1]!
 8002004:	681b      	ldr	r3, [r3, #0]
 8002006:	9302      	str	r3, [sp, #8]
 8002008:	2301      	movs	r3, #1
 800200a:	460a      	mov	r2, r1
 800200c:	e9cd 4300 	strd	r4, r3, [sp]
 8002010:	4601      	mov	r1, r0
 8002012:	4803      	ldr	r0, [pc, #12]	; (8002020 <IOE_Write+0x28>)
 8002014:	f002 fd4c 	bl	8004ab0 <HAL_I2C_Mem_Write>
}
 8002018:	b006      	add	sp, #24
 800201a:	bd10      	pop	{r4, pc}
 800201c:	2000000c 	.word	0x2000000c
 8002020:	200124a4 	.word	0x200124a4

08002024 <IOE_Read>:
{
 8002024:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
  uint8_t value = 0;
 8002026:	aa06      	add	r2, sp, #24
 8002028:	2300      	movs	r3, #0
 800202a:	f802 3d01 	strb.w	r3, [r2, #-1]!
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 800202e:	4b08      	ldr	r3, [pc, #32]	; (8002050 <IOE_Read+0x2c>)
 8002030:	681b      	ldr	r3, [r3, #0]
 8002032:	9302      	str	r3, [sp, #8]
 8002034:	2301      	movs	r3, #1
 8002036:	e9cd 2300 	strd	r2, r3, [sp]
 800203a:	460a      	mov	r2, r1
 800203c:	4601      	mov	r1, r0
 800203e:	4805      	ldr	r0, [pc, #20]	; (8002054 <IOE_Read+0x30>)
 8002040:	f002 fdc6 	bl	8004bd0 <HAL_I2C_Mem_Read>
}
 8002044:	f89d 0017 	ldrb.w	r0, [sp, #23]
 8002048:	b007      	add	sp, #28
 800204a:	f85d fb04 	ldr.w	pc, [sp], #4
 800204e:	bf00      	nop
 8002050:	2000000c 	.word	0x2000000c
 8002054:	200124a4 	.word	0x200124a4

08002058 <IOE_ReadMultiple>:
{
 8002058:	b51f      	push	{r0, r1, r2, r3, r4, lr}
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, pBuffer, Length, I2c3Timeout);
 800205a:	4c08      	ldr	r4, [pc, #32]	; (800207c <IOE_ReadMultiple+0x24>)
 800205c:	6824      	ldr	r4, [r4, #0]
 800205e:	9200      	str	r2, [sp, #0]
 8002060:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8002064:	460a      	mov	r2, r1
 8002066:	2301      	movs	r3, #1
 8002068:	4601      	mov	r1, r0
 800206a:	4805      	ldr	r0, [pc, #20]	; (8002080 <IOE_ReadMultiple+0x28>)
 800206c:	f002 fdb0 	bl	8004bd0 <HAL_I2C_Mem_Read>
}
 8002070:	3000      	adds	r0, #0
 8002072:	bf18      	it	ne
 8002074:	2001      	movne	r0, #1
 8002076:	b004      	add	sp, #16
 8002078:	bd10      	pop	{r4, pc}
 800207a:	bf00      	nop
 800207c:	2000000c 	.word	0x2000000c
 8002080:	200124a4 	.word	0x200124a4

08002084 <IOE_Delay>:
 8002084:	f001 be34 	b.w	8003cf0 <HAL_Delay>

08002088 <LCD_IO_Init>:
{
 8002088:	b510      	push	{r4, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 800208a:	4c06      	ldr	r4, [pc, #24]	; (80020a4 <LCD_IO_Init+0x1c>)
 800208c:	2200      	movs	r2, #0
 800208e:	4620      	mov	r0, r4
 8002090:	2104      	movs	r1, #4
 8002092:	f002 fa87 	bl	80045a4 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8002096:	4620      	mov	r0, r4
 8002098:	2201      	movs	r2, #1
 800209a:	2104      	movs	r1, #4
}
 800209c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 80020a0:	f002 ba80 	b.w	80045a4 <HAL_GPIO_WritePin>
 80020a4:	40020800 	.word	0x40020800

080020a8 <LCD_IO_WriteData>:
{
 80020a8:	b538      	push	{r3, r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 80020aa:	4c0b      	ldr	r4, [pc, #44]	; (80020d8 <LCD_IO_WriteData+0x30>)
{
 80020ac:	4605      	mov	r5, r0
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 80020ae:	2201      	movs	r2, #1
 80020b0:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 80020b4:	4809      	ldr	r0, [pc, #36]	; (80020dc <LCD_IO_WriteData+0x34>)
 80020b6:	f002 fa75 	bl	80045a4 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 80020ba:	2200      	movs	r2, #0
 80020bc:	2104      	movs	r1, #4
 80020be:	4620      	mov	r0, r4
 80020c0:	f002 fa70 	bl	80045a4 <HAL_GPIO_WritePin>
  SPI5_Write(RegValue);
 80020c4:	4628      	mov	r0, r5
 80020c6:	f7ff fc9b 	bl	8001a00 <SPI5_Write>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 80020ca:	4620      	mov	r0, r4
 80020cc:	2201      	movs	r2, #1
 80020ce:	2104      	movs	r1, #4
}
 80020d0:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 80020d4:	f002 ba66 	b.w	80045a4 <HAL_GPIO_WritePin>
 80020d8:	40020800 	.word	0x40020800
 80020dc:	40020c00 	.word	0x40020c00

080020e0 <LCD_IO_WriteReg>:
{
 80020e0:	b538      	push	{r3, r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 80020e2:	4c0b      	ldr	r4, [pc, #44]	; (8002110 <LCD_IO_WriteReg+0x30>)
{
 80020e4:	4605      	mov	r5, r0
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 80020e6:	2200      	movs	r2, #0
 80020e8:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 80020ec:	4809      	ldr	r0, [pc, #36]	; (8002114 <LCD_IO_WriteReg+0x34>)
 80020ee:	f002 fa59 	bl	80045a4 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 80020f2:	2200      	movs	r2, #0
 80020f4:	2104      	movs	r1, #4
 80020f6:	4620      	mov	r0, r4
 80020f8:	f002 fa54 	bl	80045a4 <HAL_GPIO_WritePin>
  SPI5_Write(Reg);
 80020fc:	4628      	mov	r0, r5
 80020fe:	f7ff fc7f 	bl	8001a00 <SPI5_Write>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8002102:	4620      	mov	r0, r4
 8002104:	2201      	movs	r2, #1
 8002106:	2104      	movs	r1, #4
}
 8002108:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 800210c:	f002 ba4a 	b.w	80045a4 <HAL_GPIO_WritePin>
 8002110:	40020800 	.word	0x40020800
 8002114:	40020c00 	.word	0x40020c00

08002118 <LCD_IO_ReadData>:
{
 8002118:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 800211a:	4c14      	ldr	r4, [pc, #80]	; (800216c <LCD_IO_ReadData+0x54>)
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 800211c:	4d14      	ldr	r5, [pc, #80]	; (8002170 <LCD_IO_ReadData+0x58>)
{
 800211e:	4607      	mov	r7, r0
 8002120:	460e      	mov	r6, r1
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8002122:	4620      	mov	r0, r4
 8002124:	2200      	movs	r2, #0
 8002126:	2104      	movs	r1, #4
 8002128:	f002 fa3c 	bl	80045a4 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 800212c:	2200      	movs	r2, #0
 800212e:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8002132:	4628      	mov	r0, r5
 8002134:	f002 fa36 	bl	80045a4 <HAL_GPIO_WritePin>
  SPI5_Write(RegValue);
 8002138:	4638      	mov	r0, r7
 800213a:	f7ff fc61 	bl	8001a00 <SPI5_Write>
  status = HAL_SPI_Receive(&hspi5, (uint8_t*) &readvalue, ReadSize, Spi5Timeout);
 800213e:	4b0d      	ldr	r3, [pc, #52]	; (8002174 <LCD_IO_ReadData+0x5c>)
 8002140:	480d      	ldr	r0, [pc, #52]	; (8002178 <LCD_IO_ReadData+0x60>)
 8002142:	681b      	ldr	r3, [r3, #0]
 8002144:	4632      	mov	r2, r6
 8002146:	a901      	add	r1, sp, #4
 8002148:	f003 fe99 	bl	8005e7e <HAL_SPI_Receive>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 800214c:	4628      	mov	r0, r5
 800214e:	2201      	movs	r2, #1
 8002150:	f44f 5100 	mov.w	r1, #8192	; 0x2000
  return readvalue;
 8002154:	9e01      	ldr	r6, [sp, #4]
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 8002156:	f002 fa25 	bl	80045a4 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 800215a:	4620      	mov	r0, r4
 800215c:	2201      	movs	r2, #1
 800215e:	2104      	movs	r1, #4
 8002160:	f002 fa20 	bl	80045a4 <HAL_GPIO_WritePin>
}
 8002164:	4630      	mov	r0, r6
 8002166:	b003      	add	sp, #12
 8002168:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800216a:	bf00      	nop
 800216c:	40020800 	.word	0x40020800
 8002170:	40020c00 	.word	0x40020c00
 8002174:	20000010 	.word	0x20000010
 8002178:	200124f8 	.word	0x200124f8

0800217c <LCD_Delay>:
  HAL_Delay(Delay);
 800217c:	f001 bdb8 	b.w	8003cf0 <HAL_Delay>

08002180 <HAL_TIM_PeriodElapsedCallback>:
  if (htim->Instance == TIM6) {
 8002180:	6802      	ldr	r2, [r0, #0]
 8002182:	4b03      	ldr	r3, [pc, #12]	; (8002190 <HAL_TIM_PeriodElapsedCallback+0x10>)
 8002184:	429a      	cmp	r2, r3
 8002186:	d101      	bne.n	800218c <HAL_TIM_PeriodElapsedCallback+0xc>
    HAL_IncTick();
 8002188:	f001 bda0 	b.w	8003ccc <HAL_IncTick>
}
 800218c:	4770      	bx	lr
 800218e:	bf00      	nop
 8002190:	40001000 	.word	0x40001000

08002194 <Error_Handler>:
}
 8002194:	4770      	bx	lr
	...

08002198 <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 8002198:	b082      	sub	sp, #8
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 800219a:	4b0e      	ldr	r3, [pc, #56]	; (80021d4 <HAL_MspInit+0x3c>)
 800219c:	2200      	movs	r2, #0
 800219e:	9200      	str	r2, [sp, #0]
 80021a0:	6c59      	ldr	r1, [r3, #68]	; 0x44
 80021a2:	f441 4180 	orr.w	r1, r1, #16384	; 0x4000
 80021a6:	6459      	str	r1, [r3, #68]	; 0x44
 80021a8:	6c59      	ldr	r1, [r3, #68]	; 0x44
 80021aa:	f401 4180 	and.w	r1, r1, #16384	; 0x4000
 80021ae:	9100      	str	r1, [sp, #0]
 80021b0:	9900      	ldr	r1, [sp, #0]
  __HAL_RCC_PWR_CLK_ENABLE();
 80021b2:	9201      	str	r2, [sp, #4]
 80021b4:	6c19      	ldr	r1, [r3, #64]	; 0x40
 80021b6:	f041 5180 	orr.w	r1, r1, #268435456	; 0x10000000
 80021ba:	6419      	str	r1, [r3, #64]	; 0x40
 80021bc:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80021be:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80021c2:	9301      	str	r3, [sp, #4]
 80021c4:	9b01      	ldr	r3, [sp, #4]

  /* System interrupt init*/
  /* PendSV_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 80021c6:	210f      	movs	r1, #15
 80021c8:	f06f 0001 	mvn.w	r0, #1

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 80021cc:	b002      	add	sp, #8
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 80021ce:	f001 bdb5 	b.w	8003d3c <HAL_NVIC_SetPriority>
 80021d2:	bf00      	nop
 80021d4:	40023800 	.word	0x40023800

080021d8 <HAL_CRC_MspInit>:
* @param hcrc: CRC handle pointer
* @retval None
*/
void HAL_CRC_MspInit(CRC_HandleTypeDef* hcrc)
{
  if(hcrc->Instance==CRC)
 80021d8:	6802      	ldr	r2, [r0, #0]
 80021da:	4b09      	ldr	r3, [pc, #36]	; (8002200 <HAL_CRC_MspInit+0x28>)
 80021dc:	429a      	cmp	r2, r3
{
 80021de:	b082      	sub	sp, #8
  if(hcrc->Instance==CRC)
 80021e0:	d10b      	bne.n	80021fa <HAL_CRC_MspInit+0x22>
  {
  /* USER CODE BEGIN CRC_MspInit 0 */

  /* USER CODE END CRC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_CRC_CLK_ENABLE();
 80021e2:	2300      	movs	r3, #0
 80021e4:	9301      	str	r3, [sp, #4]
 80021e6:	4b07      	ldr	r3, [pc, #28]	; (8002204 <HAL_CRC_MspInit+0x2c>)
 80021e8:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80021ea:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 80021ee:	631a      	str	r2, [r3, #48]	; 0x30
 80021f0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80021f2:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 80021f6:	9301      	str	r3, [sp, #4]
 80021f8:	9b01      	ldr	r3, [sp, #4]
  /* USER CODE BEGIN CRC_MspInit 1 */

  /* USER CODE END CRC_MspInit 1 */
  }

}
 80021fa:	b002      	add	sp, #8
 80021fc:	4770      	bx	lr
 80021fe:	bf00      	nop
 8002200:	40023000 	.word	0x40023000
 8002204:	40023800 	.word	0x40023800

08002208 <HAL_DMA2D_MspInit>:
* This function configures the hardware resources used in this example
* @param hdma2d: DMA2D handle pointer
* @retval None
*/
void HAL_DMA2D_MspInit(DMA2D_HandleTypeDef* hdma2d)
{
 8002208:	b507      	push	{r0, r1, r2, lr}
  if(hdma2d->Instance==DMA2D)
 800220a:	4b0f      	ldr	r3, [pc, #60]	; (8002248 <HAL_DMA2D_MspInit+0x40>)
 800220c:	6802      	ldr	r2, [r0, #0]
 800220e:	429a      	cmp	r2, r3
 8002210:	d116      	bne.n	8002240 <HAL_DMA2D_MspInit+0x38>
  {
  /* USER CODE BEGIN DMA2D_MspInit 0 */

  /* USER CODE END DMA2D_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_DMA2D_CLK_ENABLE();
 8002212:	2200      	movs	r2, #0
 8002214:	f5a3 43f0 	sub.w	r3, r3, #30720	; 0x7800
 8002218:	9201      	str	r2, [sp, #4]
 800221a:	6b19      	ldr	r1, [r3, #48]	; 0x30
 800221c:	f441 0100 	orr.w	r1, r1, #8388608	; 0x800000
 8002220:	6319      	str	r1, [r3, #48]	; 0x30
 8002222:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002224:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
 8002228:	9301      	str	r3, [sp, #4]
    /* DMA2D interrupt Init */
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
 800222a:	2105      	movs	r1, #5
 800222c:	205a      	movs	r0, #90	; 0x5a
    __HAL_RCC_DMA2D_CLK_ENABLE();
 800222e:	9b01      	ldr	r3, [sp, #4]
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
 8002230:	f001 fd84 	bl	8003d3c <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
 8002234:	205a      	movs	r0, #90	; 0x5a
  /* USER CODE BEGIN DMA2D_MspInit 1 */

  /* USER CODE END DMA2D_MspInit 1 */
  }

}
 8002236:	b003      	add	sp, #12
 8002238:	f85d eb04 	ldr.w	lr, [sp], #4
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
 800223c:	f001 bdb2 	b.w	8003da4 <HAL_NVIC_EnableIRQ>
}
 8002240:	b003      	add	sp, #12
 8002242:	f85d fb04 	ldr.w	pc, [sp], #4
 8002246:	bf00      	nop
 8002248:	4002b000 	.word	0x4002b000

0800224c <HAL_DMA2D_MspDeInit>:
* @param hdma2d: DMA2D handle pointer
* @retval None
*/
void HAL_DMA2D_MspDeInit(DMA2D_HandleTypeDef* hdma2d)
{
  if(hdma2d->Instance==DMA2D)
 800224c:	6802      	ldr	r2, [r0, #0]
 800224e:	4b06      	ldr	r3, [pc, #24]	; (8002268 <HAL_DMA2D_MspDeInit+0x1c>)
 8002250:	429a      	cmp	r2, r3
 8002252:	d107      	bne.n	8002264 <HAL_DMA2D_MspDeInit+0x18>
  {
  /* USER CODE BEGIN DMA2D_MspDeInit 0 */

  /* USER CODE END DMA2D_MspDeInit 0 */
    /* Peripheral clock disable */
    __HAL_RCC_DMA2D_CLK_DISABLE();
 8002254:	4a05      	ldr	r2, [pc, #20]	; (800226c <HAL_DMA2D_MspDeInit+0x20>)
 8002256:	6b13      	ldr	r3, [r2, #48]	; 0x30
 8002258:	f423 0300 	bic.w	r3, r3, #8388608	; 0x800000
 800225c:	6313      	str	r3, [r2, #48]	; 0x30

    /* DMA2D interrupt DeInit */
    HAL_NVIC_DisableIRQ(DMA2D_IRQn);
 800225e:	205a      	movs	r0, #90	; 0x5a
 8002260:	f001 bdae 	b.w	8003dc0 <HAL_NVIC_DisableIRQ>
  /* USER CODE BEGIN DMA2D_MspDeInit 1 */

  /* USER CODE END DMA2D_MspDeInit 1 */
  }

}
 8002264:	4770      	bx	lr
 8002266:	bf00      	nop
 8002268:	4002b000 	.word	0x4002b000
 800226c:	40023800 	.word	0x40023800

08002270 <HAL_I2C_MspInit>:
* This function configures the hardware resources used in this example
* @param hi2c: I2C handle pointer
* @retval None
*/
void HAL_I2C_MspInit(I2C_HandleTypeDef* hi2c)
{
 8002270:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8002274:	4604      	mov	r4, r0
 8002276:	b089      	sub	sp, #36	; 0x24
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8002278:	2214      	movs	r2, #20
 800227a:	2100      	movs	r1, #0
 800227c:	a803      	add	r0, sp, #12
 800227e:	f017 f94e 	bl	801951e <memset>
  if(hi2c->Instance==I2C3)
 8002282:	6822      	ldr	r2, [r4, #0]
 8002284:	4b24      	ldr	r3, [pc, #144]	; (8002318 <HAL_I2C_MspInit+0xa8>)
 8002286:	429a      	cmp	r2, r3
 8002288:	d143      	bne.n	8002312 <HAL_I2C_MspInit+0xa2>
  {
  /* USER CODE BEGIN I2C3_MspInit 0 */

  /* USER CODE END I2C3_MspInit 0 */
  
    __HAL_RCC_GPIOC_CLK_ENABLE();
 800228a:	4c24      	ldr	r4, [pc, #144]	; (800231c <HAL_I2C_MspInit+0xac>)
    GPIO_InitStruct.Pin = GPIO_PIN_9;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
    GPIO_InitStruct.Pull = GPIO_PULLUP;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 800228c:	4824      	ldr	r0, [pc, #144]	; (8002320 <HAL_I2C_MspInit+0xb0>)
    __HAL_RCC_GPIOC_CLK_ENABLE();
 800228e:	2500      	movs	r5, #0
 8002290:	9500      	str	r5, [sp, #0]
 8002292:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8002294:	f043 0304 	orr.w	r3, r3, #4
 8002298:	6323      	str	r3, [r4, #48]	; 0x30
 800229a:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800229c:	f003 0304 	and.w	r3, r3, #4
 80022a0:	9300      	str	r3, [sp, #0]
 80022a2:	9b00      	ldr	r3, [sp, #0]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 80022a4:	9501      	str	r5, [sp, #4]
 80022a6:	6b23      	ldr	r3, [r4, #48]	; 0x30
 80022a8:	f043 0301 	orr.w	r3, r3, #1
 80022ac:	6323      	str	r3, [r4, #48]	; 0x30
 80022ae:	6b23      	ldr	r3, [r4, #48]	; 0x30
 80022b0:	f003 0301 	and.w	r3, r3, #1
 80022b4:	9301      	str	r3, [sp, #4]
 80022b6:	9b01      	ldr	r3, [sp, #4]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 80022b8:	f04f 0912 	mov.w	r9, #18
 80022bc:	f44f 7300 	mov.w	r3, #512	; 0x200
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80022c0:	f04f 0801 	mov.w	r8, #1
 80022c4:	2703      	movs	r7, #3
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 80022c6:	2604      	movs	r6, #4
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80022c8:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 80022ca:	e9cd 3903 	strd	r3, r9, [sp, #12]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80022ce:	e9cd 8705 	strd	r8, r7, [sp, #20]
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 80022d2:	9607      	str	r6, [sp, #28]
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80022d4:	f002 f87a 	bl	80043cc <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_8;
 80022d8:	f44f 7380 	mov.w	r3, #256	; 0x100
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
    GPIO_InitStruct.Pull = GPIO_PULLUP;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80022dc:	a903      	add	r1, sp, #12
 80022de:	4811      	ldr	r0, [pc, #68]	; (8002324 <HAL_I2C_MspInit+0xb4>)
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 80022e0:	9607      	str	r6, [sp, #28]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 80022e2:	e9cd 3903 	strd	r3, r9, [sp, #12]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80022e6:	e9cd 8705 	strd	r8, r7, [sp, #20]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80022ea:	f002 f86f 	bl	80043cc <HAL_GPIO_Init>

    /* Peripheral clock enable */
    __HAL_RCC_I2C3_CLK_ENABLE();
 80022ee:	9502      	str	r5, [sp, #8]
 80022f0:	6c23      	ldr	r3, [r4, #64]	; 0x40
 80022f2:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 80022f6:	6423      	str	r3, [r4, #64]	; 0x40
 80022f8:	6c23      	ldr	r3, [r4, #64]	; 0x40
 80022fa:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
 80022fe:	9302      	str	r3, [sp, #8]
 8002300:	9b02      	ldr	r3, [sp, #8]
  /* USER CODE BEGIN I2C3_MspInit 1 */
  /* Force the I2C Peripheral Clock Reset */  
    __HAL_RCC_I2C3_FORCE_RESET();
 8002302:	6a23      	ldr	r3, [r4, #32]
 8002304:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 8002308:	6223      	str	r3, [r4, #32]
      
    /* Release the I2C Peripheral Clock Reset */  
    __HAL_RCC_I2C3_RELEASE_RESET(); 
 800230a:	6a23      	ldr	r3, [r4, #32]
 800230c:	f423 0300 	bic.w	r3, r3, #8388608	; 0x800000
 8002310:	6223      	str	r3, [r4, #32]
  /* USER CODE END I2C3_MspInit 1 */
  }

}
 8002312:	b009      	add	sp, #36	; 0x24
 8002314:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8002318:	40005c00 	.word	0x40005c00
 800231c:	40023800 	.word	0x40023800
 8002320:	40020800 	.word	0x40020800
 8002324:	40020000 	.word	0x40020000

08002328 <HAL_LTDC_MspInit>:
* This function configures the hardware resources used in this example
* @param hltdc: LTDC handle pointer
* @retval None
*/
void HAL_LTDC_MspInit(LTDC_HandleTypeDef* hltdc)
{
 8002328:	b5f0      	push	{r4, r5, r6, r7, lr}
 800232a:	4604      	mov	r4, r0
 800232c:	b08d      	sub	sp, #52	; 0x34
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800232e:	2214      	movs	r2, #20
 8002330:	2100      	movs	r1, #0
 8002332:	a807      	add	r0, sp, #28
 8002334:	f017 f8f3 	bl	801951e <memset>
  if(hltdc->Instance==LTDC)
 8002338:	6822      	ldr	r2, [r4, #0]
 800233a:	4b57      	ldr	r3, [pc, #348]	; (8002498 <HAL_LTDC_MspInit+0x170>)
 800233c:	429a      	cmp	r2, r3
 800233e:	f040 80a8 	bne.w	8002492 <HAL_LTDC_MspInit+0x16a>
  {
  /* USER CODE BEGIN LTDC_MspInit 0 */

  /* USER CODE END LTDC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_LTDC_CLK_ENABLE();
 8002342:	f503 4350 	add.w	r3, r3, #53248	; 0xd000
 8002346:	2500      	movs	r5, #0
 8002348:	9500      	str	r5, [sp, #0]
 800234a:	6c5a      	ldr	r2, [r3, #68]	; 0x44
    GPIO_InitStruct.Pin = GPIO_PIN_10;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 800234c:	4853      	ldr	r0, [pc, #332]	; (800249c <HAL_LTDC_MspInit+0x174>)
    __HAL_RCC_LTDC_CLK_ENABLE();
 800234e:	f042 6280 	orr.w	r2, r2, #67108864	; 0x4000000
 8002352:	645a      	str	r2, [r3, #68]	; 0x44
 8002354:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8002356:	f002 6280 	and.w	r2, r2, #67108864	; 0x4000000
 800235a:	9200      	str	r2, [sp, #0]
 800235c:	9a00      	ldr	r2, [sp, #0]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 800235e:	9501      	str	r5, [sp, #4]
 8002360:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8002362:	f042 0220 	orr.w	r2, r2, #32
 8002366:	631a      	str	r2, [r3, #48]	; 0x30
 8002368:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800236a:	f002 0220 	and.w	r2, r2, #32
 800236e:	9201      	str	r2, [sp, #4]
 8002370:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8002372:	9502      	str	r5, [sp, #8]
 8002374:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8002376:	f042 0201 	orr.w	r2, r2, #1
 800237a:	631a      	str	r2, [r3, #48]	; 0x30
 800237c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800237e:	f002 0201 	and.w	r2, r2, #1
 8002382:	9202      	str	r2, [sp, #8]
 8002384:	9a02      	ldr	r2, [sp, #8]
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8002386:	9503      	str	r5, [sp, #12]
 8002388:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800238a:	f042 0202 	orr.w	r2, r2, #2
 800238e:	631a      	str	r2, [r3, #48]	; 0x30
 8002390:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8002392:	f002 0202 	and.w	r2, r2, #2
 8002396:	9203      	str	r2, [sp, #12]
 8002398:	9a03      	ldr	r2, [sp, #12]
    __HAL_RCC_GPIOG_CLK_ENABLE();
 800239a:	9504      	str	r5, [sp, #16]
 800239c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800239e:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 80023a2:	631a      	str	r2, [r3, #48]	; 0x30
 80023a4:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80023a6:	f002 0240 	and.w	r2, r2, #64	; 0x40
 80023aa:	9204      	str	r2, [sp, #16]
 80023ac:	9a04      	ldr	r2, [sp, #16]
    __HAL_RCC_GPIOC_CLK_ENABLE();
 80023ae:	9505      	str	r5, [sp, #20]
 80023b0:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80023b2:	f042 0204 	orr.w	r2, r2, #4
 80023b6:	631a      	str	r2, [r3, #48]	; 0x30
 80023b8:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80023ba:	f002 0204 	and.w	r2, r2, #4
 80023be:	9205      	str	r2, [sp, #20]
 80023c0:	9a05      	ldr	r2, [sp, #20]
    __HAL_RCC_GPIOD_CLK_ENABLE();
 80023c2:	9506      	str	r5, [sp, #24]
 80023c4:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80023c6:	f042 0208 	orr.w	r2, r2, #8
 80023ca:	631a      	str	r2, [r3, #48]	; 0x30
 80023cc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80023ce:	f003 0308 	and.w	r3, r3, #8
 80023d2:	9306      	str	r3, [sp, #24]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80023d4:	2402      	movs	r4, #2
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 80023d6:	260e      	movs	r6, #14
    __HAL_RCC_GPIOD_CLK_ENABLE();
 80023d8:	9b06      	ldr	r3, [sp, #24]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 80023da:	940a      	str	r4, [sp, #40]	; 0x28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80023dc:	f44f 6380 	mov.w	r3, #1024	; 0x400
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 80023e0:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80023e2:	e9cd 3407 	strd	r3, r4, [sp, #28]
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 80023e6:	960b      	str	r6, [sp, #44]	; 0x2c
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 80023e8:	f001 fff0 	bl	80043cc <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_3|GPIO_PIN_4|GPIO_PIN_6|GPIO_PIN_11 
 80023ec:	f641 0358 	movw	r3, #6232	; 0x1858
                          |GPIO_PIN_12;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80023f0:	a907      	add	r1, sp, #28
 80023f2:	482b      	ldr	r0, [pc, #172]	; (80024a0 <HAL_LTDC_MspInit+0x178>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 80023f4:	960b      	str	r6, [sp, #44]	; 0x2c
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80023f6:	e9cd 3407 	strd	r3, r4, [sp, #28]

    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 80023fa:	2709      	movs	r7, #9
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 80023fc:	e9cd 5409 	strd	r5, r4, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8002400:	f001 ffe4 	bl	80043cc <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
 8002404:	2303      	movs	r3, #3
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002406:	a907      	add	r1, sp, #28
 8002408:	4826      	ldr	r0, [pc, #152]	; (80024a4 <HAL_LTDC_MspInit+0x17c>)
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 800240a:	970b      	str	r7, [sp, #44]	; 0x2c
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800240c:	e9cd 3407 	strd	r3, r4, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8002410:	e9cd 5409 	strd	r5, r4, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002414:	f001 ffda 	bl	80043cc <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_11|GPIO_PIN_8|GPIO_PIN_9;
 8002418:	f44f 6370 	mov.w	r3, #3840	; 0xf00
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800241c:	a907      	add	r1, sp, #28
 800241e:	4821      	ldr	r0, [pc, #132]	; (80024a4 <HAL_LTDC_MspInit+0x17c>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8002420:	960b      	str	r6, [sp, #44]	; 0x2c
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002422:	e9cd 3407 	strd	r3, r4, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8002426:	e9cd 5409 	strd	r5, r4, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800242a:	f001 ffcf 	bl	80043cc <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7|GPIO_PIN_11;
 800242e:	f44f 630c 	mov.w	r3, #2240	; 0x8c0
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8002432:	a907      	add	r1, sp, #28
 8002434:	481c      	ldr	r0, [pc, #112]	; (80024a8 <HAL_LTDC_MspInit+0x180>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8002436:	960b      	str	r6, [sp, #44]	; 0x2c
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002438:	e9cd 3407 	strd	r3, r4, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 800243c:	e9cd 5409 	strd	r5, r4, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8002440:	f001 ffc4 	bl	80043cc <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7;
 8002444:	23c0      	movs	r3, #192	; 0xc0
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8002446:	a907      	add	r1, sp, #28
 8002448:	4818      	ldr	r0, [pc, #96]	; (80024ac <HAL_LTDC_MspInit+0x184>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 800244a:	960b      	str	r6, [sp, #44]	; 0x2c
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800244c:	e9cd 3407 	strd	r3, r4, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8002450:	e9cd 5409 	strd	r5, r4, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8002454:	f001 ffba 	bl	80043cc <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_3;
 8002458:	2308      	movs	r3, #8
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 800245a:	a907      	add	r1, sp, #28
 800245c:	4814      	ldr	r0, [pc, #80]	; (80024b0 <HAL_LTDC_MspInit+0x188>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 800245e:	960b      	str	r6, [sp, #44]	; 0x2c
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002460:	e9cd 3407 	strd	r3, r4, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8002464:	e9cd 5409 	strd	r5, r4, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8002468:	f001 ffb0 	bl	80043cc <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_12;
 800246c:	f44f 53a0 	mov.w	r3, #5120	; 0x1400
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8002470:	a907      	add	r1, sp, #28
 8002472:	480d      	ldr	r0, [pc, #52]	; (80024a8 <HAL_LTDC_MspInit+0x180>)
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 8002474:	970b      	str	r7, [sp, #44]	; 0x2c
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002476:	e9cd 3407 	strd	r3, r4, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 800247a:	e9cd 5409 	strd	r5, r4, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 800247e:	f001 ffa5 	bl	80043cc <HAL_GPIO_Init>

    /* LTDC interrupt Init */
    HAL_NVIC_SetPriority(LTDC_IRQn, 5, 0);
 8002482:	2058      	movs	r0, #88	; 0x58
 8002484:	462a      	mov	r2, r5
 8002486:	2105      	movs	r1, #5
 8002488:	f001 fc58 	bl	8003d3c <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(LTDC_IRQn);
 800248c:	2058      	movs	r0, #88	; 0x58
 800248e:	f001 fc89 	bl	8003da4 <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN LTDC_MspInit 1 */

  /* USER CODE END LTDC_MspInit 1 */
  }

}
 8002492:	b00d      	add	sp, #52	; 0x34
 8002494:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8002496:	bf00      	nop
 8002498:	40016800 	.word	0x40016800
 800249c:	40021400 	.word	0x40021400
 80024a0:	40020000 	.word	0x40020000
 80024a4:	40020400 	.word	0x40020400
 80024a8:	40021800 	.word	0x40021800
 80024ac:	40020800 	.word	0x40020800
 80024b0:	40020c00 	.word	0x40020c00

080024b4 <HAL_SPI_MspInit>:
* This function configures the hardware resources used in this example
* @param hspi: SPI handle pointer
* @retval None
*/
void HAL_SPI_MspInit(SPI_HandleTypeDef* hspi)
{
 80024b4:	b510      	push	{r4, lr}
 80024b6:	4604      	mov	r4, r0
 80024b8:	b088      	sub	sp, #32
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80024ba:	2214      	movs	r2, #20
 80024bc:	2100      	movs	r1, #0
 80024be:	a803      	add	r0, sp, #12
 80024c0:	f017 f82d 	bl	801951e <memset>
  if(hspi->Instance==SPI5)
 80024c4:	6822      	ldr	r2, [r4, #0]
 80024c6:	4b14      	ldr	r3, [pc, #80]	; (8002518 <HAL_SPI_MspInit+0x64>)
 80024c8:	429a      	cmp	r2, r3
 80024ca:	d123      	bne.n	8002514 <HAL_SPI_MspInit+0x60>
  {
  /* USER CODE BEGIN SPI5_MspInit 0 */

  /* USER CODE END SPI5_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_SPI5_CLK_ENABLE();
 80024cc:	f503 4368 	add.w	r3, r3, #59392	; 0xe800
 80024d0:	2100      	movs	r1, #0
 80024d2:	9101      	str	r1, [sp, #4]
 80024d4:	6c5a      	ldr	r2, [r3, #68]	; 0x44
    GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI5;
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 80024d6:	4811      	ldr	r0, [pc, #68]	; (800251c <HAL_SPI_MspInit+0x68>)
    __HAL_RCC_SPI5_CLK_ENABLE();
 80024d8:	f442 1280 	orr.w	r2, r2, #1048576	; 0x100000
 80024dc:	645a      	str	r2, [r3, #68]	; 0x44
 80024de:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 80024e0:	f402 1280 	and.w	r2, r2, #1048576	; 0x100000
 80024e4:	9201      	str	r2, [sp, #4]
 80024e6:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 80024e8:	9102      	str	r1, [sp, #8]
 80024ea:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80024ec:	f042 0220 	orr.w	r2, r2, #32
 80024f0:	631a      	str	r2, [r3, #48]	; 0x30
 80024f2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80024f4:	f003 0320 	and.w	r3, r3, #32
 80024f8:	9302      	str	r3, [sp, #8]
 80024fa:	9b02      	ldr	r3, [sp, #8]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80024fc:	f44f 7260 	mov.w	r2, #896	; 0x380
 8002500:	2302      	movs	r3, #2
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI5;
 8002502:	2103      	movs	r1, #3
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002504:	e9cd 2303 	strd	r2, r3, [sp, #12]
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI5;
 8002508:	2305      	movs	r3, #5
 800250a:	e9cd 1306 	strd	r1, r3, [sp, #24]
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 800250e:	a903      	add	r1, sp, #12
 8002510:	f001 ff5c 	bl	80043cc <HAL_GPIO_Init>
  /* USER CODE BEGIN SPI5_MspInit 1 */

  /* USER CODE END SPI5_MspInit 1 */
  }

}
 8002514:	b008      	add	sp, #32
 8002516:	bd10      	pop	{r4, pc}
 8002518:	40015000 	.word	0x40015000
 800251c:	40021400 	.word	0x40021400

08002520 <HAL_SDRAM_MspInit>:
  /* USER CODE BEGIN FMC_MspInit 1 */

  /* USER CODE END FMC_MspInit 1 */
}

void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef* hsdram){
 8002520:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8002524:	b086      	sub	sp, #24
  GPIO_InitTypeDef GPIO_InitStruct ={0};
 8002526:	2214      	movs	r2, #20
 8002528:	2100      	movs	r1, #0
 800252a:	a801      	add	r0, sp, #4
 800252c:	f016 fff7 	bl	801951e <memset>
  if (FMC_Initialized) {
 8002530:	4b2b      	ldr	r3, [pc, #172]	; (80025e0 <HAL_SDRAM_MspInit+0xc0>)
 8002532:	681c      	ldr	r4, [r3, #0]
 8002534:	2c00      	cmp	r4, #0
 8002536:	d14f      	bne.n	80025d8 <HAL_SDRAM_MspInit+0xb8>
  FMC_Initialized = 1;
 8002538:	f04f 0801 	mov.w	r8, #1
 800253c:	f8c3 8000 	str.w	r8, [r3]
  __HAL_RCC_FMC_CLK_ENABLE();
 8002540:	4b28      	ldr	r3, [pc, #160]	; (80025e4 <HAL_SDRAM_MspInit+0xc4>)
 8002542:	9400      	str	r4, [sp, #0]
 8002544:	6b9a      	ldr	r2, [r3, #56]	; 0x38
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8002546:	4828      	ldr	r0, [pc, #160]	; (80025e8 <HAL_SDRAM_MspInit+0xc8>)
  __HAL_RCC_FMC_CLK_ENABLE();
 8002548:	ea42 0208 	orr.w	r2, r2, r8
 800254c:	639a      	str	r2, [r3, #56]	; 0x38
 800254e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8002550:	ea03 0308 	and.w	r3, r3, r8
 8002554:	9300      	str	r3, [sp, #0]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002556:	2702      	movs	r7, #2
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8002558:	2603      	movs	r6, #3
 800255a:	250c      	movs	r5, #12
  __HAL_RCC_FMC_CLK_ENABLE();
 800255c:	9b00      	ldr	r3, [sp, #0]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 800255e:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002560:	f64f 033f 	movw	r3, #63551	; 0xf83f
 8002564:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8002568:	e9cd 6504 	strd	r6, r5, [sp, #16]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 800256c:	f001 ff2e 	bl	80043cc <HAL_GPIO_Init>
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8002570:	a901      	add	r1, sp, #4
 8002572:	481e      	ldr	r0, [pc, #120]	; (80025ec <HAL_SDRAM_MspInit+0xcc>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8002574:	9505      	str	r5, [sp, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002576:	e9cd 8701 	strd	r8, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800257a:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 800257e:	f001 ff25 	bl	80043cc <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_4|GPIO_PIN_5 
 8002582:	f248 1333 	movw	r3, #33075	; 0x8133
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8002586:	a901      	add	r1, sp, #4
 8002588:	4819      	ldr	r0, [pc, #100]	; (80025f0 <HAL_SDRAM_MspInit+0xd0>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 800258a:	9505      	str	r5, [sp, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800258c:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8002590:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8002594:	f001 ff1a 	bl	80043cc <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10 
 8002598:	f64f 7383 	movw	r3, #65411	; 0xff83
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 800259c:	a901      	add	r1, sp, #4
 800259e:	4815      	ldr	r0, [pc, #84]	; (80025f4 <HAL_SDRAM_MspInit+0xd4>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 80025a0:	9505      	str	r5, [sp, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80025a2:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80025a6:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 80025aa:	f001 ff0f 	bl	80043cc <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10|GPIO_PIN_14 
 80025ae:	f24c 7303 	movw	r3, #50947	; 0xc703
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80025b2:	a901      	add	r1, sp, #4
 80025b4:	4810      	ldr	r0, [pc, #64]	; (80025f8 <HAL_SDRAM_MspInit+0xd8>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 80025b6:	9505      	str	r5, [sp, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80025b8:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80025bc:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80025c0:	f001 ff04 	bl	80043cc <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_6;
 80025c4:	2360      	movs	r3, #96	; 0x60
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80025c6:	a901      	add	r1, sp, #4
 80025c8:	480c      	ldr	r0, [pc, #48]	; (80025fc <HAL_SDRAM_MspInit+0xdc>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 80025ca:	9505      	str	r5, [sp, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80025cc:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80025d0:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80025d4:	f001 fefa 	bl	80043cc <HAL_GPIO_Init>
  /* USER CODE END SDRAM_MspInit 0 */
  HAL_FMC_MspInit();
  /* USER CODE BEGIN SDRAM_MspInit 1 */

  /* USER CODE END SDRAM_MspInit 1 */
}
 80025d8:	b006      	add	sp, #24
 80025da:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80025de:	bf00      	nop
 80025e0:	200013d0 	.word	0x200013d0
 80025e4:	40023800 	.word	0x40023800
 80025e8:	40021400 	.word	0x40021400
 80025ec:	40020800 	.word	0x40020800
 80025f0:	40021800 	.word	0x40021800
 80025f4:	40021000 	.word	0x40021000
 80025f8:	40020c00 	.word	0x40020c00
 80025fc:	40020400 	.word	0x40020400

08002600 <HAL_TIM_Base_MspInit>:
* This function configures the hardware resources used in this example
* @param htim_base: TIM_Base handle pointer
* @retval None
*/
void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* htim_base)
{
 8002600:	b530      	push	{r4, r5, lr}
  if(htim_base->Instance==TIM2)
 8002602:	6803      	ldr	r3, [r0, #0]
 8002604:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
{
 8002608:	b085      	sub	sp, #20
 800260a:	4605      	mov	r5, r0
  if(htim_base->Instance==TIM2)
 800260c:	d12e      	bne.n	800266c <HAL_TIM_Base_MspInit+0x6c>
  {
  /* USER CODE BEGIN TIM2_MspInit 0 */

  /* USER CODE END TIM2_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_TIM2_CLK_ENABLE();
 800260e:	2300      	movs	r3, #0
 8002610:	4a57      	ldr	r2, [pc, #348]	; (8002770 <HAL_TIM_Base_MspInit+0x170>)
 8002612:	9300      	str	r3, [sp, #0]
 8002614:	6c11      	ldr	r1, [r2, #64]	; 0x40

    /* TIM2 DMA Init */
    /* TIM2_UP_CH4 Init */
    hdma_tim2_up_ch4.Instance = DMA1_Stream7;
 8002616:	4c57      	ldr	r4, [pc, #348]	; (8002774 <HAL_TIM_Base_MspInit+0x174>)
    hdma_tim2_up_ch4.Init.Channel = DMA_CHANNEL_3;
 8002618:	f8df e17c 	ldr.w	lr, [pc, #380]	; 8002798 <HAL_TIM_Base_MspInit+0x198>
    __HAL_RCC_TIM2_CLK_ENABLE();
 800261c:	f041 0101 	orr.w	r1, r1, #1
 8002620:	6411      	str	r1, [r2, #64]	; 0x40
 8002622:	6c12      	ldr	r2, [r2, #64]	; 0x40
 8002624:	f002 0201 	and.w	r2, r2, #1
 8002628:	9200      	str	r2, [sp, #0]
 800262a:	9a00      	ldr	r2, [sp, #0]
    hdma_tim2_up_ch4.Init.Channel = DMA_CHANNEL_3;
 800262c:	f04f 62c0 	mov.w	r2, #100663296	; 0x6000000
 8002630:	e9c4 e200 	strd	lr, r2, [r4]
    hdma_tim2_up_ch4.Init.Direction = DMA_MEMORY_TO_PERIPH;
 8002634:	2240      	movs	r2, #64	; 0x40
    hdma_tim2_up_ch4.Init.PeriphInc = DMA_PINC_DISABLE;
 8002636:	e9c4 2302 	strd	r2, r3, [r4, #8]
    hdma_tim2_up_ch4.Init.MemInc = DMA_MINC_ENABLE;
    hdma_tim2_up_ch4.Init.PeriphDataAlignment = DMA_PDATAALIGN_WORD;
 800263a:	f44f 6180 	mov.w	r1, #1024	; 0x400
 800263e:	f44f 5280 	mov.w	r2, #4096	; 0x1000
    hdma_tim2_up_ch4.Init.MemDataAlignment = DMA_MDATAALIGN_WORD;
    hdma_tim2_up_ch4.Init.Mode = DMA_CIRCULAR;
 8002642:	f44f 4080 	mov.w	r0, #16384	; 0x4000
    hdma_tim2_up_ch4.Init.PeriphDataAlignment = DMA_PDATAALIGN_WORD;
 8002646:	e9c4 1204 	strd	r1, r2, [r4, #16]
    hdma_tim2_up_ch4.Init.Mode = DMA_CIRCULAR;
 800264a:	f44f 7280 	mov.w	r2, #256	; 0x100
 800264e:	e9c4 0206 	strd	r0, r2, [r4, #24]
    hdma_tim2_up_ch4.Init.Priority = DMA_PRIORITY_LOW;
    hdma_tim2_up_ch4.Init.FIFOMode = DMA_FIFOMODE_DISABLE;
    if (HAL_DMA_Init(&hdma_tim2_up_ch4) != HAL_OK)
 8002652:	4620      	mov	r0, r4
    hdma_tim2_up_ch4.Init.FIFOMode = DMA_FIFOMODE_DISABLE;
 8002654:	e9c4 3308 	strd	r3, r3, [r4, #32]
    if (HAL_DMA_Init(&hdma_tim2_up_ch4) != HAL_OK)
 8002658:	f001 fbec 	bl	8003e34 <HAL_DMA_Init>
 800265c:	b108      	cbz	r0, 8002662 <HAL_TIM_Base_MspInit+0x62>
    {
      Error_Handler();
 800265e:	f7ff fd99 	bl	8002194 <Error_Handler>
    }

    /* Several peripheral DMA handle pointers point to the same DMA handle.
     Be aware that there is only one stream to perform all the requested DMAs. */
    __HAL_LINKDMA(htim_base,hdma[TIM_DMA_ID_UPDATE],hdma_tim2_up_ch4);
 8002662:	622c      	str	r4, [r5, #32]
    __HAL_LINKDMA(htim_base,hdma[TIM_DMA_ID_CC4],hdma_tim2_up_ch4);
 8002664:	632c      	str	r4, [r5, #48]	; 0x30
    if (HAL_DMA_Init(&hdma_tim5_ch1) != HAL_OK)
    {
      Error_Handler();
    }

    __HAL_LINKDMA(htim_base,hdma[TIM_DMA_ID_CC1],hdma_tim5_ch1);
 8002666:	63a5      	str	r5, [r4, #56]	; 0x38
  /* USER CODE BEGIN TIM5_MspInit 1 */

  /* USER CODE END TIM5_MspInit 1 */
  }

}
 8002668:	b005      	add	sp, #20
 800266a:	bd30      	pop	{r4, r5, pc}
  else if(htim_base->Instance==TIM3)
 800266c:	4a42      	ldr	r2, [pc, #264]	; (8002778 <HAL_TIM_Base_MspInit+0x178>)
 800266e:	4293      	cmp	r3, r2
 8002670:	d12b      	bne.n	80026ca <HAL_TIM_Base_MspInit+0xca>
    __HAL_RCC_TIM3_CLK_ENABLE();
 8002672:	2300      	movs	r3, #0
 8002674:	f502 320d 	add.w	r2, r2, #144384	; 0x23400
 8002678:	9301      	str	r3, [sp, #4]
 800267a:	6c11      	ldr	r1, [r2, #64]	; 0x40
    hdma_tim3_ch2.Instance = DMA1_Stream5;
 800267c:	4c3f      	ldr	r4, [pc, #252]	; (800277c <HAL_TIM_Base_MspInit+0x17c>)
    __HAL_RCC_TIM3_CLK_ENABLE();
 800267e:	f041 0102 	orr.w	r1, r1, #2
 8002682:	6411      	str	r1, [r2, #64]	; 0x40
 8002684:	6c12      	ldr	r2, [r2, #64]	; 0x40
    hdma_tim3_ch2.Init.Channel = DMA_CHANNEL_5;
 8002686:	493e      	ldr	r1, [pc, #248]	; (8002780 <HAL_TIM_Base_MspInit+0x180>)
    __HAL_RCC_TIM3_CLK_ENABLE();
 8002688:	f002 0202 	and.w	r2, r2, #2
 800268c:	9201      	str	r2, [sp, #4]
 800268e:	9a01      	ldr	r2, [sp, #4]
    hdma_tim3_ch2.Init.Channel = DMA_CHANNEL_5;
 8002690:	f04f 6220 	mov.w	r2, #167772160	; 0xa000000
 8002694:	e9c4 1200 	strd	r1, r2, [r4]
    hdma_tim3_ch2.Init.Direction = DMA_MEMORY_TO_PERIPH;
 8002698:	2240      	movs	r2, #64	; 0x40
    hdma_tim3_ch2.Init.PeriphDataAlignment = DMA_PDATAALIGN_HALFWORD;
 800269a:	f44f 6080 	mov.w	r0, #1024	; 0x400
    hdma_tim3_ch2.Init.PeriphInc = DMA_PINC_DISABLE;
 800269e:	e9c4 2302 	strd	r2, r3, [r4, #8]
    hdma_tim3_ch2.Init.PeriphDataAlignment = DMA_PDATAALIGN_HALFWORD;
 80026a2:	f44f 6200 	mov.w	r2, #2048	; 0x800
 80026a6:	e9c4 0204 	strd	r0, r2, [r4, #16]
    hdma_tim3_ch2.Init.Mode = DMA_CIRCULAR;
 80026aa:	f44f 5c00 	mov.w	ip, #8192	; 0x2000
 80026ae:	f44f 7280 	mov.w	r2, #256	; 0x100
    if (HAL_DMA_Init(&hdma_tim3_ch2) != HAL_OK)
 80026b2:	4620      	mov	r0, r4
    hdma_tim3_ch2.Init.Mode = DMA_CIRCULAR;
 80026b4:	e9c4 c206 	strd	ip, r2, [r4, #24]
    hdma_tim3_ch2.Init.FIFOMode = DMA_FIFOMODE_DISABLE;
 80026b8:	e9c4 3308 	strd	r3, r3, [r4, #32]
    if (HAL_DMA_Init(&hdma_tim3_ch2) != HAL_OK)
 80026bc:	f001 fbba 	bl	8003e34 <HAL_DMA_Init>
 80026c0:	b108      	cbz	r0, 80026c6 <HAL_TIM_Base_MspInit+0xc6>
      Error_Handler();
 80026c2:	f7ff fd67 	bl	8002194 <Error_Handler>
    __HAL_LINKDMA(htim_base,hdma[TIM_DMA_ID_CC2],hdma_tim3_ch2);
 80026c6:	62ac      	str	r4, [r5, #40]	; 0x28
 80026c8:	e7cd      	b.n	8002666 <HAL_TIM_Base_MspInit+0x66>
  else if(htim_base->Instance==TIM4)
 80026ca:	4a2e      	ldr	r2, [pc, #184]	; (8002784 <HAL_TIM_Base_MspInit+0x184>)
 80026cc:	4293      	cmp	r3, r2
 80026ce:	d12c      	bne.n	800272a <HAL_TIM_Base_MspInit+0x12a>
    __HAL_RCC_TIM4_CLK_ENABLE();
 80026d0:	f502 320c 	add.w	r2, r2, #143360	; 0x23000
 80026d4:	2300      	movs	r3, #0
 80026d6:	9302      	str	r3, [sp, #8]
 80026d8:	6c11      	ldr	r1, [r2, #64]	; 0x40
    hdma_tim4_ch1.Instance = DMA1_Stream0;
 80026da:	4c2b      	ldr	r4, [pc, #172]	; (8002788 <HAL_TIM_Base_MspInit+0x188>)
    hdma_tim4_ch1.Init.Channel = DMA_CHANNEL_2;
 80026dc:	f8df c0bc 	ldr.w	ip, [pc, #188]	; 800279c <HAL_TIM_Base_MspInit+0x19c>
    __HAL_RCC_TIM4_CLK_ENABLE();
 80026e0:	f041 0104 	orr.w	r1, r1, #4
 80026e4:	6411      	str	r1, [r2, #64]	; 0x40
 80026e6:	6c12      	ldr	r2, [r2, #64]	; 0x40
 80026e8:	f002 0204 	and.w	r2, r2, #4
 80026ec:	9202      	str	r2, [sp, #8]
 80026ee:	9a02      	ldr	r2, [sp, #8]
    hdma_tim4_ch1.Init.Channel = DMA_CHANNEL_2;
 80026f0:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 80026f4:	e9c4 c200 	strd	ip, r2, [r4]
    hdma_tim4_ch1.Init.Direction = DMA_MEMORY_TO_PERIPH;
 80026f8:	2240      	movs	r2, #64	; 0x40
    hdma_tim4_ch1.Init.PeriphInc = DMA_PINC_DISABLE;
 80026fa:	e9c4 2302 	strd	r2, r3, [r4, #8]
    hdma_tim4_ch1.Init.PeriphDataAlignment = DMA_PDATAALIGN_HALFWORD;
 80026fe:	f44f 6e80 	mov.w	lr, #1024	; 0x400
 8002702:	f44f 6200 	mov.w	r2, #2048	; 0x800
 8002706:	e9c4 e204 	strd	lr, r2, [r4, #16]
    hdma_tim4_ch1.Init.MemDataAlignment = DMA_MDATAALIGN_HALFWORD;
 800270a:	f44f 5200 	mov.w	r2, #8192	; 0x2000
    hdma_tim5_ch1.Init.MemDataAlignment = DMA_MDATAALIGN_WORD;
 800270e:	61a2      	str	r2, [r4, #24]
    hdma_tim5_ch1.Init.Mode = DMA_CIRCULAR;
 8002710:	f44f 7280 	mov.w	r2, #256	; 0x100
    hdma_tim5_ch1.Init.Priority = DMA_PRIORITY_LOW;
 8002714:	e9c4 2307 	strd	r2, r3, [r4, #28]
    hdma_tim5_ch1.Init.FIFOMode = DMA_FIFOMODE_DISABLE;
 8002718:	6263      	str	r3, [r4, #36]	; 0x24
    if (HAL_DMA_Init(&hdma_tim5_ch1) != HAL_OK)
 800271a:	4620      	mov	r0, r4
 800271c:	f001 fb8a 	bl	8003e34 <HAL_DMA_Init>
 8002720:	b108      	cbz	r0, 8002726 <HAL_TIM_Base_MspInit+0x126>
      Error_Handler();
 8002722:	f7ff fd37 	bl	8002194 <Error_Handler>
    __HAL_LINKDMA(htim_base,hdma[TIM_DMA_ID_CC1],hdma_tim5_ch1);
 8002726:	626c      	str	r4, [r5, #36]	; 0x24
 8002728:	e79d      	b.n	8002666 <HAL_TIM_Base_MspInit+0x66>
  else if(htim_base->Instance==TIM5)
 800272a:	4a18      	ldr	r2, [pc, #96]	; (800278c <HAL_TIM_Base_MspInit+0x18c>)
 800272c:	4293      	cmp	r3, r2
 800272e:	d19b      	bne.n	8002668 <HAL_TIM_Base_MspInit+0x68>
    __HAL_RCC_TIM5_CLK_ENABLE();
 8002730:	f502 320b 	add.w	r2, r2, #142336	; 0x22c00
 8002734:	2300      	movs	r3, #0
 8002736:	9303      	str	r3, [sp, #12]
 8002738:	6c11      	ldr	r1, [r2, #64]	; 0x40
    hdma_tim5_ch1.Instance = DMA1_Stream2;
 800273a:	4c15      	ldr	r4, [pc, #84]	; (8002790 <HAL_TIM_Base_MspInit+0x190>)
    __HAL_RCC_TIM5_CLK_ENABLE();
 800273c:	f041 0108 	orr.w	r1, r1, #8
 8002740:	6411      	str	r1, [r2, #64]	; 0x40
 8002742:	6c12      	ldr	r2, [r2, #64]	; 0x40
    hdma_tim5_ch1.Init.Channel = DMA_CHANNEL_6;
 8002744:	4913      	ldr	r1, [pc, #76]	; (8002794 <HAL_TIM_Base_MspInit+0x194>)
    __HAL_RCC_TIM5_CLK_ENABLE();
 8002746:	f002 0208 	and.w	r2, r2, #8
 800274a:	9203      	str	r2, [sp, #12]
 800274c:	9a03      	ldr	r2, [sp, #12]
    hdma_tim5_ch1.Init.Channel = DMA_CHANNEL_6;
 800274e:	f04f 6240 	mov.w	r2, #201326592	; 0xc000000
 8002752:	e9c4 1200 	strd	r1, r2, [r4]
    hdma_tim5_ch1.Init.Direction = DMA_MEMORY_TO_PERIPH;
 8002756:	2240      	movs	r2, #64	; 0x40
    hdma_tim5_ch1.Init.PeriphInc = DMA_PINC_DISABLE;
 8002758:	e9c4 2302 	strd	r2, r3, [r4, #8]
    hdma_tim5_ch1.Init.PeriphDataAlignment = DMA_PDATAALIGN_WORD;
 800275c:	f44f 6080 	mov.w	r0, #1024	; 0x400
 8002760:	f44f 5280 	mov.w	r2, #4096	; 0x1000
 8002764:	e9c4 0204 	strd	r0, r2, [r4, #16]
    hdma_tim5_ch1.Init.MemDataAlignment = DMA_MDATAALIGN_WORD;
 8002768:	f44f 4280 	mov.w	r2, #16384	; 0x4000
 800276c:	e7cf      	b.n	800270e <HAL_TIM_Base_MspInit+0x10e>
 800276e:	bf00      	nop
 8002770:	40023800 	.word	0x40023800
 8002774:	20012444 	.word	0x20012444
 8002778:	40000400 	.word	0x40000400
 800277c:	20012780 	.word	0x20012780
 8002780:	40026088 	.word	0x40026088
 8002784:	40000800 	.word	0x40000800
 8002788:	20012864 	.word	0x20012864
 800278c:	40000c00 	.word	0x40000c00
 8002790:	20012720 	.word	0x20012720
 8002794:	40026040 	.word	0x40026040
 8002798:	400260b8 	.word	0x400260b8
 800279c:	40026010 	.word	0x40026010

080027a0 <HAL_TIM_MspPostInit>:

void HAL_TIM_MspPostInit(TIM_HandleTypeDef* htim)
{
 80027a0:	b510      	push	{r4, lr}
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80027a2:	2214      	movs	r2, #20
{
 80027a4:	b08a      	sub	sp, #40	; 0x28
 80027a6:	4604      	mov	r4, r0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80027a8:	2100      	movs	r1, #0
 80027aa:	eb0d 0002 	add.w	r0, sp, r2
 80027ae:	f016 feb6 	bl	801951e <memset>
  if(htim->Instance==TIM2)
 80027b2:	6823      	ldr	r3, [r4, #0]
 80027b4:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 80027b8:	d114      	bne.n	80027e4 <HAL_TIM_MspPostInit+0x44>
  {
  /* USER CODE BEGIN TIM2_MspPostInit 0 */

  /* USER CODE END TIM2_MspPostInit 0 */
    __HAL_RCC_GPIOA_CLK_ENABLE();
 80027ba:	2300      	movs	r3, #0
 80027bc:	9301      	str	r3, [sp, #4]
 80027be:	4b29      	ldr	r3, [pc, #164]	; (8002864 <HAL_TIM_MspPostInit+0xc4>)
 80027c0:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80027c2:	f042 0201 	orr.w	r2, r2, #1
 80027c6:	631a      	str	r2, [r3, #48]	; 0x30
 80027c8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80027ca:	f003 0301 	and.w	r3, r3, #1
 80027ce:	9301      	str	r3, [sp, #4]
 80027d0:	9b01      	ldr	r3, [sp, #4]
    /**TIM2 GPIO Configuration
    PA3     ------> TIM2_CH4
    */
    GPIO_InitStruct.Pin = xAxisPWM_Pin;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80027d2:	2108      	movs	r1, #8
 80027d4:	2302      	movs	r3, #2
 80027d6:	e9cd 1305 	strd	r1, r3, [sp, #20]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
    GPIO_InitStruct.Alternate = GPIO_AF1_TIM2;
 80027da:	2301      	movs	r3, #1
    */
    GPIO_InitStruct.Pin = manipulatorPWM_Pin;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
    GPIO_InitStruct.Alternate = GPIO_AF2_TIM5;
 80027dc:	9309      	str	r3, [sp, #36]	; 0x24
    HAL_GPIO_Init(manipulatorPWM_GPIO_Port, &GPIO_InitStruct);
 80027de:	a905      	add	r1, sp, #20
 80027e0:	4821      	ldr	r0, [pc, #132]	; (8002868 <HAL_TIM_MspPostInit+0xc8>)
 80027e2:	e02a      	b.n	800283a <HAL_TIM_MspPostInit+0x9a>
  else if(htim->Instance==TIM3)
 80027e4:	4a21      	ldr	r2, [pc, #132]	; (800286c <HAL_TIM_MspPostInit+0xcc>)
 80027e6:	4293      	cmp	r3, r2
 80027e8:	d110      	bne.n	800280c <HAL_TIM_MspPostInit+0x6c>
    __HAL_RCC_GPIOA_CLK_ENABLE();
 80027ea:	2300      	movs	r3, #0
 80027ec:	9302      	str	r3, [sp, #8]
 80027ee:	4b1d      	ldr	r3, [pc, #116]	; (8002864 <HAL_TIM_MspPostInit+0xc4>)
 80027f0:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80027f2:	f042 0201 	orr.w	r2, r2, #1
 80027f6:	631a      	str	r2, [r3, #48]	; 0x30
 80027f8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80027fa:	f003 0301 	and.w	r3, r3, #1
 80027fe:	9302      	str	r3, [sp, #8]
 8002800:	9b02      	ldr	r3, [sp, #8]
    GPIO_InitStruct.Pin = yAxisPWM_L_Pin;
 8002802:	2380      	movs	r3, #128	; 0x80
    GPIO_InitStruct.Pin = manipulatorPWM_Pin;
 8002804:	9305      	str	r3, [sp, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002806:	2302      	movs	r3, #2
 8002808:	9306      	str	r3, [sp, #24]
 800280a:	e7e7      	b.n	80027dc <HAL_TIM_MspPostInit+0x3c>
  else if(htim->Instance==TIM4)
 800280c:	4a18      	ldr	r2, [pc, #96]	; (8002870 <HAL_TIM_MspPostInit+0xd0>)
 800280e:	4293      	cmp	r3, r2
 8002810:	d117      	bne.n	8002842 <HAL_TIM_MspPostInit+0xa2>
    __HAL_RCC_GPIOD_CLK_ENABLE();
 8002812:	2300      	movs	r3, #0
 8002814:	9303      	str	r3, [sp, #12]
 8002816:	4b13      	ldr	r3, [pc, #76]	; (8002864 <HAL_TIM_MspPostInit+0xc4>)
    HAL_GPIO_Init(yAxisPWM_R_GPIO_Port, &GPIO_InitStruct);
 8002818:	4816      	ldr	r0, [pc, #88]	; (8002874 <HAL_TIM_MspPostInit+0xd4>)
    __HAL_RCC_GPIOD_CLK_ENABLE();
 800281a:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800281c:	f042 0208 	orr.w	r2, r2, #8
 8002820:	631a      	str	r2, [r3, #48]	; 0x30
 8002822:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002824:	f003 0308 	and.w	r3, r3, #8
 8002828:	9303      	str	r3, [sp, #12]
 800282a:	9b03      	ldr	r3, [sp, #12]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800282c:	f44f 5280 	mov.w	r2, #4096	; 0x1000
 8002830:	2302      	movs	r3, #2
 8002832:	e9cd 2305 	strd	r2, r3, [sp, #20]
    GPIO_InitStruct.Alternate = GPIO_AF2_TIM4;
 8002836:	9309      	str	r3, [sp, #36]	; 0x24
    HAL_GPIO_Init(yAxisPWM_R_GPIO_Port, &GPIO_InitStruct);
 8002838:	a905      	add	r1, sp, #20
    HAL_GPIO_Init(manipulatorPWM_GPIO_Port, &GPIO_InitStruct);
 800283a:	f001 fdc7 	bl	80043cc <HAL_GPIO_Init>
  /* USER CODE BEGIN TIM5_MspPostInit 1 */

  /* USER CODE END TIM5_MspPostInit 1 */
  }

}
 800283e:	b00a      	add	sp, #40	; 0x28
 8002840:	bd10      	pop	{r4, pc}
  else if(htim->Instance==TIM5)
 8002842:	4a0d      	ldr	r2, [pc, #52]	; (8002878 <HAL_TIM_MspPostInit+0xd8>)
 8002844:	4293      	cmp	r3, r2
 8002846:	d1fa      	bne.n	800283e <HAL_TIM_MspPostInit+0x9e>
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8002848:	2300      	movs	r3, #0
 800284a:	9304      	str	r3, [sp, #16]
 800284c:	4b05      	ldr	r3, [pc, #20]	; (8002864 <HAL_TIM_MspPostInit+0xc4>)
 800284e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8002850:	f042 0201 	orr.w	r2, r2, #1
 8002854:	631a      	str	r2, [r3, #48]	; 0x30
 8002856:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002858:	f003 0301 	and.w	r3, r3, #1
 800285c:	9304      	str	r3, [sp, #16]
 800285e:	9b04      	ldr	r3, [sp, #16]
    GPIO_InitStruct.Pin = manipulatorPWM_Pin;
 8002860:	2301      	movs	r3, #1
 8002862:	e7cf      	b.n	8002804 <HAL_TIM_MspPostInit+0x64>
 8002864:	40023800 	.word	0x40023800
 8002868:	40020000 	.word	0x40020000
 800286c:	40000400 	.word	0x40000400
 8002870:	40000800 	.word	0x40000800
 8002874:	40020c00 	.word	0x40020c00
 8002878:	40000c00 	.word	0x40000c00

0800287c <HAL_InitTick>:
  *         reset by HAL_Init() or at any time when clock is configured, by HAL_RCC_ClockConfig(). 
  * @param  TickPriority: Tick interrupt priority.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 800287c:	b530      	push	{r4, r5, lr}
  uint32_t              uwTimclock = 0;
  uint32_t              uwPrescalerValue = 0;
  uint32_t              pFLatency;
  
  /*Configure the TIM6 IRQ priority */
  HAL_NVIC_SetPriority(TIM6_DAC_IRQn, TickPriority ,0); 
 800287e:	4601      	mov	r1, r0
{
 8002880:	b089      	sub	sp, #36	; 0x24
  HAL_NVIC_SetPriority(TIM6_DAC_IRQn, TickPriority ,0); 
 8002882:	2200      	movs	r2, #0
 8002884:	2036      	movs	r0, #54	; 0x36
 8002886:	f001 fa59 	bl	8003d3c <HAL_NVIC_SetPriority>
  
  /* Enable the TIM6 global Interrupt */
  HAL_NVIC_EnableIRQ(TIM6_DAC_IRQn); 
 800288a:	2036      	movs	r0, #54	; 0x36
 800288c:	f001 fa8a 	bl	8003da4 <HAL_NVIC_EnableIRQ>
  
  /* Enable TIM6 clock */
  __HAL_RCC_TIM6_CLK_ENABLE();
 8002890:	2500      	movs	r5, #0
 8002892:	4b15      	ldr	r3, [pc, #84]	; (80028e8 <HAL_InitTick+0x6c>)
 8002894:	9502      	str	r5, [sp, #8]
 8002896:	6c1a      	ldr	r2, [r3, #64]	; 0x40
   
  /* Compute the prescaler value to have TIM6 counter clock equal to 1MHz */
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000) - 1);
  
  /* Initialize TIM6 */
  htim6.Instance = TIM6;
 8002898:	4c14      	ldr	r4, [pc, #80]	; (80028ec <HAL_InitTick+0x70>)
  __HAL_RCC_TIM6_CLK_ENABLE();
 800289a:	f042 0210 	orr.w	r2, r2, #16
 800289e:	641a      	str	r2, [r3, #64]	; 0x40
 80028a0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80028a2:	f003 0310 	and.w	r3, r3, #16
 80028a6:	9302      	str	r3, [sp, #8]
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 80028a8:	a901      	add	r1, sp, #4
 80028aa:	a803      	add	r0, sp, #12
  __HAL_RCC_TIM6_CLK_ENABLE();
 80028ac:	9b02      	ldr	r3, [sp, #8]
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 80028ae:	f002 feef 	bl	8005690 <HAL_RCC_GetClockConfig>
  uwTimclock = 2*HAL_RCC_GetPCLK1Freq();
 80028b2:	f002 fedd 	bl	8005670 <HAL_RCC_GetPCLK1Freq>
  htim6.Instance = TIM6;
 80028b6:	4b0e      	ldr	r3, [pc, #56]	; (80028f0 <HAL_InitTick+0x74>)
 80028b8:	6023      	str	r3, [r4, #0]
  + Period = [(TIM6CLK/1000) - 1]. to have a (1/1000) s time base.
  + Prescaler = (uwTimclock/1000000 - 1) to have a 1MHz counter clock.
  + ClockDivision = 0
  + Counter direction = Up
  */
  htim6.Init.Period = (1000000 / 1000) - 1;
 80028ba:	f240 33e7 	movw	r3, #999	; 0x3e7
 80028be:	60e3      	str	r3, [r4, #12]
  uwTimclock = 2*HAL_RCC_GetPCLK1Freq();
 80028c0:	0040      	lsls	r0, r0, #1
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000) - 1);
 80028c2:	4b0c      	ldr	r3, [pc, #48]	; (80028f4 <HAL_InitTick+0x78>)
 80028c4:	fbb0 f0f3 	udiv	r0, r0, r3
 80028c8:	3801      	subs	r0, #1
  htim6.Init.Prescaler = uwPrescalerValue;
 80028ca:	6060      	str	r0, [r4, #4]
  htim6.Init.ClockDivision = 0;
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
  if(HAL_TIM_Base_Init(&htim6) == HAL_OK)
 80028cc:	4620      	mov	r0, r4
  htim6.Init.ClockDivision = 0;
 80028ce:	6125      	str	r5, [r4, #16]
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
 80028d0:	60a5      	str	r5, [r4, #8]
  if(HAL_TIM_Base_Init(&htim6) == HAL_OK)
 80028d2:	f003 fd5d 	bl	8006390 <HAL_TIM_Base_Init>
 80028d6:	b920      	cbnz	r0, 80028e2 <HAL_InitTick+0x66>
  {
    /* Start the TIM time Base generation in interrupt mode */
    return HAL_TIM_Base_Start_IT(&htim6);
 80028d8:	4620      	mov	r0, r4
 80028da:	f003 fbf5 	bl	80060c8 <HAL_TIM_Base_Start_IT>
  }
  
  /* Return function status */
  return HAL_ERROR;
}
 80028de:	b009      	add	sp, #36	; 0x24
 80028e0:	bd30      	pop	{r4, r5, pc}
  return HAL_ERROR;
 80028e2:	2001      	movs	r0, #1
 80028e4:	e7fb      	b.n	80028de <HAL_InitTick+0x62>
 80028e6:	bf00      	nop
 80028e8:	40023800 	.word	0x40023800
 80028ec:	200128f8 	.word	0x200128f8
 80028f0:	40001000 	.word	0x40001000
 80028f4:	000f4240 	.word	0x000f4240

080028f8 <NMI_Handler>:

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */

  /* USER CODE END NonMaskableInt_IRQn 1 */
}
 80028f8:	4770      	bx	lr

080028fa <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 80028fa:	e7fe      	b.n	80028fa <HardFault_Handler>

080028fc <MemManage_Handler>:

/**
  * @brief This function handles Memory management fault.
  */
void MemManage_Handler(void)
{
 80028fc:	e7fe      	b.n	80028fc <MemManage_Handler>

080028fe <BusFault_Handler>:

/**
  * @brief This function handles Pre-fetch fault, memory access fault.
  */
void BusFault_Handler(void)
{
 80028fe:	e7fe      	b.n	80028fe <BusFault_Handler>

08002900 <UsageFault_Handler>:

/**
  * @brief This function handles Undefined instruction or illegal state.
  */
void UsageFault_Handler(void)
{
 8002900:	e7fe      	b.n	8002900 <UsageFault_Handler>

08002902 <DebugMon_Handler>:
 8002902:	4770      	bx	lr

08002904 <TIM6_DAC_IRQHandler>:
void TIM6_DAC_IRQHandler(void)
{
  /* USER CODE BEGIN TIM6_DAC_IRQn 0 */

  /* USER CODE END TIM6_DAC_IRQn 0 */
  HAL_TIM_IRQHandler(&htim6);
 8002904:	4801      	ldr	r0, [pc, #4]	; (800290c <TIM6_DAC_IRQHandler+0x8>)
 8002906:	f003 bc31 	b.w	800616c <HAL_TIM_IRQHandler>
 800290a:	bf00      	nop
 800290c:	200128f8 	.word	0x200128f8

08002910 <LTDC_IRQHandler>:
void LTDC_IRQHandler(void)
{
  /* USER CODE BEGIN LTDC_IRQn 0 */

  /* USER CODE END LTDC_IRQn 0 */
  HAL_LTDC_IRQHandler(&hltdc);
 8002910:	4801      	ldr	r0, [pc, #4]	; (8002918 <LTDC_IRQHandler+0x8>)
 8002912:	f002 bb9b 	b.w	800504c <HAL_LTDC_IRQHandler>
 8002916:	bf00      	nop
 8002918:	20012678 	.word	0x20012678

0800291c <DMA2D_IRQHandler>:
void DMA2D_IRQHandler(void)
{
  /* USER CODE BEGIN DMA2D_IRQn 0 */

  /* USER CODE END DMA2D_IRQn 0 */
  HAL_DMA2D_IRQHandler(&hdma2d);
 800291c:	4801      	ldr	r0, [pc, #4]	; (8002924 <DMA2D_IRQHandler+0x8>)
 800291e:	f001 bc81 	b.w	8004224 <HAL_DMA2D_IRQHandler>
 8002922:	bf00      	nop
 8002924:	200127e4 	.word	0x200127e4

08002928 <_getpid>:
}

int _getpid(void)
{
	return 1;
}
 8002928:	2001      	movs	r0, #1
 800292a:	4770      	bx	lr

0800292c <_kill>:

int _kill(int pid, int sig)
{
 800292c:	b508      	push	{r3, lr}
	errno = EINVAL;
 800292e:	f016 fd9f 	bl	8019470 <__errno>
 8002932:	2316      	movs	r3, #22
 8002934:	6003      	str	r3, [r0, #0]
	return -1;
}
 8002936:	f04f 30ff 	mov.w	r0, #4294967295
 800293a:	bd08      	pop	{r3, pc}

0800293c <_exit>:

void _exit (int status)
{
 800293c:	b508      	push	{r3, lr}
	errno = EINVAL;
 800293e:	f016 fd97 	bl	8019470 <__errno>
 8002942:	2316      	movs	r3, #22
 8002944:	6003      	str	r3, [r0, #0]
 8002946:	e7fe      	b.n	8002946 <_exit+0xa>

08002948 <_read>:
	_kill(status, -1);
	while (1) {}		/* Make sure we hang here */
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8002948:	b570      	push	{r4, r5, r6, lr}
 800294a:	460e      	mov	r6, r1
 800294c:	4615      	mov	r5, r2
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800294e:	460c      	mov	r4, r1
 8002950:	1ba3      	subs	r3, r4, r6
 8002952:	429d      	cmp	r5, r3
 8002954:	dc01      	bgt.n	800295a <_read+0x12>
	{
		*ptr++ = __io_getchar();
	}

return len;
}
 8002956:	4628      	mov	r0, r5
 8002958:	bd70      	pop	{r4, r5, r6, pc}
		*ptr++ = __io_getchar();
 800295a:	f3af 8000 	nop.w
 800295e:	f804 0b01 	strb.w	r0, [r4], #1
 8002962:	e7f5      	b.n	8002950 <_read+0x8>

08002964 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8002964:	b570      	push	{r4, r5, r6, lr}
 8002966:	460e      	mov	r6, r1
 8002968:	4615      	mov	r5, r2
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800296a:	460c      	mov	r4, r1
 800296c:	1ba3      	subs	r3, r4, r6
 800296e:	429d      	cmp	r5, r3
 8002970:	dc01      	bgt.n	8002976 <_write+0x12>
	{
		__io_putchar(*ptr++);
	}
	return len;
}
 8002972:	4628      	mov	r0, r5
 8002974:	bd70      	pop	{r4, r5, r6, pc}
		__io_putchar(*ptr++);
 8002976:	f814 0b01 	ldrb.w	r0, [r4], #1
 800297a:	f3af 8000 	nop.w
 800297e:	e7f5      	b.n	800296c <_write+0x8>

08002980 <_close>:

int _close(int file)
{
	return -1;
}
 8002980:	f04f 30ff 	mov.w	r0, #4294967295
 8002984:	4770      	bx	lr

08002986 <_fstat>:


int _fstat(int file, struct stat *st)
{
	st->st_mode = S_IFCHR;
 8002986:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 800298a:	604b      	str	r3, [r1, #4]
	return 0;
}
 800298c:	2000      	movs	r0, #0
 800298e:	4770      	bx	lr

08002990 <_isatty>:

int _isatty(int file)
{
	return 1;
}
 8002990:	2001      	movs	r0, #1
 8002992:	4770      	bx	lr

08002994 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
	return 0;
}
 8002994:	2000      	movs	r0, #0
 8002996:	4770      	bx	lr

08002998 <_sbrk>:
/**
 _sbrk
 Increase program data space. Malloc and related functions depend on this
**/
caddr_t _sbrk(int incr)
{
 8002998:	b508      	push	{r3, lr}
	extern char end asm("end");
	static char *heap_end;
	char *prev_heap_end;

	if (heap_end == 0)
 800299a:	4b0a      	ldr	r3, [pc, #40]	; (80029c4 <_sbrk+0x2c>)
 800299c:	6819      	ldr	r1, [r3, #0]
{
 800299e:	4602      	mov	r2, r0
	if (heap_end == 0)
 80029a0:	b909      	cbnz	r1, 80029a6 <_sbrk+0xe>
		heap_end = &end;
 80029a2:	4909      	ldr	r1, [pc, #36]	; (80029c8 <_sbrk+0x30>)
 80029a4:	6019      	str	r1, [r3, #0]

	prev_heap_end = heap_end;
 80029a6:	6818      	ldr	r0, [r3, #0]
	if (heap_end + incr > stack_ptr)
 80029a8:	4669      	mov	r1, sp
 80029aa:	4402      	add	r2, r0
 80029ac:	428a      	cmp	r2, r1
 80029ae:	d906      	bls.n	80029be <_sbrk+0x26>
	{
		errno = ENOMEM;
 80029b0:	f016 fd5e 	bl	8019470 <__errno>
 80029b4:	230c      	movs	r3, #12
 80029b6:	6003      	str	r3, [r0, #0]
		return (caddr_t) -1;
 80029b8:	f04f 30ff 	mov.w	r0, #4294967295
	}

	heap_end += incr;

	return (caddr_t) prev_heap_end;
}
 80029bc:	bd08      	pop	{r3, pc}
	heap_end += incr;
 80029be:	601a      	str	r2, [r3, #0]
	return (caddr_t) prev_heap_end;
 80029c0:	e7fc      	b.n	80029bc <_sbrk+0x24>
 80029c2:	bf00      	nop
 80029c4:	200013d4 	.word	0x200013d4
 80029c8:	20012980 	.word	0x20012980

080029cc <_ZN23ApplicationFontProviderD1Ev>:
    static const touchgfx::FontId LARGE = 1;   // verdana_40_4bpp
    static const touchgfx::FontId SMALL = 2;   // verdana_10_4bpp
    static const uint16_t NUMBER_OF_FONTS = 3;
};

class ApplicationFontProvider : public touchgfx::FontProvider
 80029cc:	4770      	bx	lr

080029ce <_ZN23ApplicationFontProviderD0Ev>:
 80029ce:	b510      	push	{r4, lr}
 80029d0:	2104      	movs	r1, #4
 80029d2:	4604      	mov	r4, r0
 80029d4:	f016 fcee 	bl	80193b4 <_ZdlPvj>
 80029d8:	4620      	mov	r0, r4
 80029da:	bd10      	pop	{r4, pc}

080029dc <_ZN23ApplicationFontProvider7getFontEt>:
#include <fonts/GeneratedFont.hpp>
#include <texts/TypedTextDatabase.hpp>

touchgfx::Font* ApplicationFontProvider::getFont(touchgfx::FontId typography)
{
    switch (typography)
 80029dc:	2901      	cmp	r1, #1
{
 80029de:	b508      	push	{r3, lr}
    switch (typography)
 80029e0:	d008      	beq.n	80029f4 <_ZN23ApplicationFontProvider7getFontEt+0x18>
 80029e2:	d303      	bcc.n	80029ec <_ZN23ApplicationFontProvider7getFontEt+0x10>
 80029e4:	2902      	cmp	r1, #2
 80029e6:	d009      	beq.n	80029fc <_ZN23ApplicationFontProvider7getFontEt+0x20>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[1]);
    case Typography::SMALL:
        // verdana_10_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
    default:
        return 0;
 80029e8:	2000      	movs	r0, #0
 80029ea:	e002      	b.n	80029f2 <_ZN23ApplicationFontProvider7getFontEt+0x16>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[0]);
 80029ec:	f000 fb52 	bl	8003094 <_ZN17TypedTextDatabase8getFontsEv>
 80029f0:	6800      	ldr	r0, [r0, #0]
    }
}
 80029f2:	bd08      	pop	{r3, pc}
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[1]);
 80029f4:	f000 fb4e 	bl	8003094 <_ZN17TypedTextDatabase8getFontsEv>
 80029f8:	6840      	ldr	r0, [r0, #4]
 80029fa:	e7fa      	b.n	80029f2 <_ZN23ApplicationFontProvider7getFontEt+0x16>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
 80029fc:	f000 fb4a 	bl	8003094 <_ZN17TypedTextDatabase8getFontsEv>
 8002a00:	6880      	ldr	r0, [r0, #8]
 8002a02:	e7f6      	b.n	80029f2 <_ZN23ApplicationFontProvider7getFontEt+0x16>

08002a04 <_ZN14BitmapDatabase11getInstanceEv>:
namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance()
{
    return bitmap_database;
}
 8002a04:	4800      	ldr	r0, [pc, #0]	; (8002a08 <_ZN14BitmapDatabase11getInstanceEv+0x4>)
 8002a06:	4770      	bx	lr
 8002a08:	0801a9a8 	.word	0x0801a9a8

08002a0c <_ZN14BitmapDatabase15getInstanceSizeEv>:

uint16_t getInstanceSize()
{
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
}
 8002a0c:	2007      	movs	r0, #7
 8002a0e:	4770      	bx	lr

08002a10 <_ZNK8touchgfx4Font8getGlyphEt>:
     *
     * @return A pointer to the glyph node or null if the glyph was not found.
     *
     * @see TextProvider::getNextLigature
     */
    virtual const GlyphNode* getGlyph(Unicode::UnicodeChar unicode) const
 8002a10:	b513      	push	{r0, r1, r4, lr}
 8002a12:	2200      	movs	r2, #0
    {
        if (unicode == 0)
 8002a14:	b149      	cbz	r1, 8002a2a <_ZNK8touchgfx4Font8getGlyphEt+0x1a>
        {
            return 0;
        }
        const uint8_t* dummyPixelDataPointer = 0;
        uint8_t bitsPerPixelDummy = 0;
 8002a16:	ab02      	add	r3, sp, #8
        const uint8_t* dummyPixelDataPointer = 0;
 8002a18:	9201      	str	r2, [sp, #4]
        uint8_t bitsPerPixelDummy = 0;
 8002a1a:	f803 2d05 	strb.w	r2, [r3, #-5]!
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 8002a1e:	6802      	ldr	r2, [r0, #0]
 8002a20:	6894      	ldr	r4, [r2, #8]
 8002a22:	aa01      	add	r2, sp, #4
 8002a24:	47a0      	blx	r4
        return glyph;
    }
 8002a26:	b002      	add	sp, #8
 8002a28:	bd10      	pop	{r4, pc}
            return 0;
 8002a2a:	4608      	mov	r0, r1
 8002a2c:	e7fb      	b.n	8002a26 <_ZNK8touchgfx4Font8getGlyphEt+0x16>

08002a2e <_ZNK8touchgfx4Font15getFallbackCharEv>:
     * @return The default character for the typography in case no glyph is available.
     */
    virtual Unicode::UnicodeChar getFallbackChar() const
    {
        return fallbackCharacter;
    }
 8002a2e:	8940      	ldrh	r0, [r0, #10]
 8002a30:	4770      	bx	lr

08002a32 <_ZNK8touchgfx4Font15getEllipsisCharEv>:
     * @see TextArea::setWideTextAction
     */
    virtual Unicode::UnicodeChar getEllipsisChar() const
    {
        return ellipsisCharacter;
    }
 8002a32:	8980      	ldrh	r0, [r0, #12]
 8002a34:	4770      	bx	lr

08002a36 <_ZNK8touchgfx4Font13getFontHeightEv>:
     *       getMinimumTextHeight for this.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getFontHeight() const
    {
        return fontHeight;
    }
 8002a36:	8880      	ldrh	r0, [r0, #4]
 8002a38:	4770      	bx	lr

08002a3a <_ZNK8touchgfx4Font20getMinimumTextHeightEv>:
     *
     * @return The minimum height needed for a text field that uses this font.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getMinimumTextHeight() const
    {
        return fontHeight + pixelsBelowBaseline;
 8002a3a:	7983      	ldrb	r3, [r0, #6]
 8002a3c:	8880      	ldrh	r0, [r0, #4]
 8002a3e:	4418      	add	r0, r3
    }
 8002a40:	b280      	uxth	r0, r0
 8002a42:	4770      	bx	lr

08002a44 <_ZNK8touchgfx4Font15getBitsPerPixelEv>:
     *
     * @return The number of bits used per pixel in this font.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getBitsPerPixel() const
    {
        return bPerPixel;
 8002a44:	79c0      	ldrb	r0, [r0, #7]
    }
 8002a46:	f000 007f 	and.w	r0, r0, #127	; 0x7f
 8002a4a:	4770      	bx	lr

08002a4c <_ZNK8touchgfx4Font15getByteAlignRowEv>:
     *
     * @return True if each glyph row is stored byte aligned, false otherwise.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getByteAlignRow() const
    {
        return bAlignRow;
 8002a4c:	79c0      	ldrb	r0, [r0, #7]
    }
 8002a4e:	09c0      	lsrs	r0, r0, #7
 8002a50:	4770      	bx	lr

08002a52 <_ZN8touchgfx9TypedTextD1Ev>:
    }
 8002a52:	4770      	bx	lr

08002a54 <_ZN8touchgfx9TypedTextD0Ev>:
    virtual ~TypedText()
 8002a54:	b510      	push	{r4, lr}
    }
 8002a56:	2108      	movs	r1, #8
    virtual ~TypedText()
 8002a58:	4604      	mov	r4, r0
    }
 8002a5a:	f016 fcab 	bl	80193b4 <_ZdlPvj>
 8002a5e:	4620      	mov	r0, r4
 8002a60:	bd10      	pop	{r4, pc}

08002a62 <_ZN8touchgfx11Application15appSwitchScreenEh>:
     *
     * @param screenId An id that maps to the desired screen.
     */
    virtual void appSwitchScreen(uint8_t screenId)
    {
    }
 8002a62:	4770      	bx	lr

08002a64 <_ZN8touchgfx11Application13requestRedrawERNS_4RectE>:
     *
     * @param [in,out] rect The Rect that must be redrawn.
     */
    virtual void requestRedraw(Rect& rect)
    {
        redraw = rect;
 8002a64:	f500 7396 	add.w	r3, r0, #300	; 0x12c
 8002a68:	6808      	ldr	r0, [r1, #0]
 8002a6a:	6849      	ldr	r1, [r1, #4]
 8002a6c:	c303      	stmia	r3!, {r0, r1}
    };
 8002a6e:	4770      	bx	lr

08002a70 <_ZN8touchgfx10Transition8tearDownEv>:
     * Tears down the Animation. Called before the destructor is called, when the
     * application changes the transition.
     */
    virtual void tearDown()
    {
    }
 8002a70:	4770      	bx	lr

08002a72 <_ZN8touchgfx10Transition4initEv>:
     * Initializes the transition. Called after the constructor is called, when the
     * application changes the transition.
     */
    virtual void init()
    {
    }
 8002a72:	4770      	bx	lr

08002a74 <_ZN8touchgfx10Transition18setScreenContainerERNS_9ContainerE>:
     *
     * @param [in] cont The Container the transition should have access to.
     */
    virtual void setScreenContainer(Container& cont)
    {
        screenContainer = &cont;
 8002a74:	6041      	str	r1, [r0, #4]
    }
 8002a76:	4770      	bx	lr

08002a78 <_ZN23FrontendApplicationBaseD1Ev>:

class FrontendApplicationBase : public touchgfx::MVPApplication
{
public:
    FrontendApplicationBase(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplicationBase() { }
 8002a78:	4770      	bx	lr

08002a7a <_ZN8touchgfx12NoTransition15handleTickEventEv>:
{
public:
    /** Indicates that the transition is done after the first tick. */
    virtual void handleTickEvent()
    {
        done = true;
 8002a7a:	2301      	movs	r3, #1
 8002a7c:	7203      	strb	r3, [r0, #8]
    }
 8002a7e:	4770      	bx	lr

08002a80 <_ZN8touchgfx12NoTransitionD1Ev>:
class NoTransition : public Transition
 8002a80:	4770      	bx	lr

08002a82 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>:
 *
 * @note The member function to call must return void. The function can have zero, one, two or
 *       three arguments of any type.
 */
template <class dest_type>
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8002a82:	4770      	bx	lr

08002a84 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv>:

    /**
     * Calls the member function. Do not call execute unless isValid() returns true (ie. a
     * pointer to the object and the function has been set).
     */
    virtual void execute()
 8002a84:	b410      	push	{r4}
    {
        (pobject->*pmemfun_0)();
 8002a86:	68c4      	ldr	r4, [r0, #12]
 8002a88:	6841      	ldr	r1, [r0, #4]
 8002a8a:	1062      	asrs	r2, r4, #1
    virtual void execute()
 8002a8c:	4603      	mov	r3, r0
        (pobject->*pmemfun_0)();
 8002a8e:	07e4      	lsls	r4, r4, #31
 8002a90:	eb01 0002 	add.w	r0, r1, r2
 8002a94:	689b      	ldr	r3, [r3, #8]
 8002a96:	bf48      	it	mi
 8002a98:	588a      	ldrmi	r2, [r1, r2]
    }
 8002a9a:	f85d 4b04 	ldr.w	r4, [sp], #4
        (pobject->*pmemfun_0)();
 8002a9e:	bf48      	it	mi
 8002aa0:	58d3      	ldrmi	r3, [r2, r3]
 8002aa2:	4718      	bx	r3

08002aa4 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv>:
     *
     * @return true If the callback is valid (i.e. safe to call execute).
     */
    virtual bool isValid() const
    {
        return (pobject != 0) && (pmemfun_0 != 0);
 8002aa4:	6843      	ldr	r3, [r0, #4]
 8002aa6:	b12b      	cbz	r3, 8002ab4 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x10>
 8002aa8:	6883      	ldr	r3, [r0, #8]
 8002aaa:	b92b      	cbnz	r3, 8002ab8 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x14>
 8002aac:	68c0      	ldr	r0, [r0, #12]
 8002aae:	f000 0001 	and.w	r0, r0, #1
 8002ab2:	4770      	bx	lr
 8002ab4:	4618      	mov	r0, r3
 8002ab6:	4770      	bx	lr
 8002ab8:	2001      	movs	r0, #1
    }
 8002aba:	4770      	bx	lr

08002abc <_ZN8touchgfx12NoTransitionD0Ev>:
 8002abc:	b510      	push	{r4, lr}
 8002abe:	210c      	movs	r1, #12
 8002ac0:	4604      	mov	r4, r0
 8002ac2:	f016 fc77 	bl	80193b4 <_ZdlPvj>
 8002ac6:	4620      	mov	r0, r4
 8002ac8:	bd10      	pop	{r4, pc}

08002aca <_ZN23FrontendApplicationBaseD0Ev>:
 8002aca:	b510      	push	{r4, lr}
 8002acc:	f44f 71ac 	mov.w	r1, #344	; 0x158
 8002ad0:	4604      	mov	r4, r0
 8002ad2:	f016 fc6f 	bl	80193b4 <_ZdlPvj>
 8002ad6:	4620      	mov	r0, r4
 8002ad8:	bd10      	pop	{r4, pc}

08002ada <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED0Ev>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8002ada:	b510      	push	{r4, lr}
 8002adc:	2110      	movs	r1, #16
 8002ade:	4604      	mov	r4, r0
 8002ae0:	f016 fc68 	bl	80193b4 <_ZdlPvj>
 8002ae4:	4620      	mov	r0, r4
 8002ae6:	bd10      	pop	{r4, pc}

08002ae8 <_ZN8touchgfx10Transition10invalidateEv>:
    virtual void invalidate()
 8002ae8:	b510      	push	{r4, lr}
        Application::getInstance()->draw();
 8002aea:	f008 ffeb 	bl	800bac4 <_ZN8touchgfx11Application11getInstanceEv>
 8002aee:	6803      	ldr	r3, [r0, #0]
    }
 8002af0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        Application::getInstance()->draw();
 8002af4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002af6:	4718      	bx	r3

08002af8 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv>:
    /**
     * Handles the pending screen transition.
     *
     * Delegates the work to evaluatePendingScreenTransition()
     */
    virtual void handlePendingScreenTransition()
 8002af8:	b510      	push	{r4, lr}
 8002afa:	4604      	mov	r4, r0
     * Evaluates the pending Callback instances. If a callback is valid, it is executed and
     * a Screen transition is executed.
     */
    void evaluatePendingScreenTransition()
    {
        if (pendingScreenTransitionCallback && pendingScreenTransitionCallback->isValid())
 8002afc:	f8d0 013c 	ldr.w	r0, [r0, #316]	; 0x13c
 8002b00:	b158      	cbz	r0, 8002b1a <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
 8002b02:	6803      	ldr	r3, [r0, #0]
 8002b04:	68db      	ldr	r3, [r3, #12]
 8002b06:	4798      	blx	r3
 8002b08:	b138      	cbz	r0, 8002b1a <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
        {
            pendingScreenTransitionCallback->execute();
 8002b0a:	f8d4 013c 	ldr.w	r0, [r4, #316]	; 0x13c
 8002b0e:	6803      	ldr	r3, [r0, #0]
 8002b10:	689b      	ldr	r3, [r3, #8]
 8002b12:	4798      	blx	r3
            pendingScreenTransitionCallback = 0;
 8002b14:	2300      	movs	r3, #0
 8002b16:	f8c4 313c 	str.w	r3, [r4, #316]	; 0x13c
    }
 8002b1a:	bd10      	pop	{r4, pc}

08002b1c <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>:
#include <gui/mainscreen_screen/mainScreenView.hpp>
#include <gui/mainscreen_screen/mainScreenPresenter.hpp>

using namespace touchgfx;

FrontendApplicationBase::FrontendApplicationBase(Model& m, FrontendHeap& heap)
 8002b1c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8002b1e:	4604      	mov	r4, r0
 8002b20:	4617      	mov	r7, r2
 8002b22:	460e      	mov	r6, r1
          pendingScreenTransitionCallback(0)
 8002b24:	f008 ffee 	bl	800bb04 <_ZN8touchgfx11ApplicationC1Ev>
        instance = this;
 8002b28:	4b14      	ldr	r3, [pc, #80]	; (8002b7c <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x60>)
    : touchgfx::MVPApplication(),
      transitionCallback(),
      frontendHeap(heap),
      model(m)
 8002b2a:	f8c4 6154 	str.w	r6, [r4, #340]	; 0x154
 8002b2e:	601c      	str	r4, [r3, #0]
        return instance;
 8002b30:	4e13      	ldr	r6, [pc, #76]	; (8002b80 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x64>)
 8002b32:	4b14      	ldr	r3, [pc, #80]	; (8002b84 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x68>)
 8002b34:	6023      	str	r3, [r4, #0]
          pendingScreenTransitionCallback(0)
 8002b36:	2500      	movs	r5, #0
 8002b38:	6830      	ldr	r0, [r6, #0]
        : pobject(0), pmemfun_0(0)
 8002b3a:	f8c4 5148 	str.w	r5, [r4, #328]	; 0x148
 8002b3e:	f8c4 514c 	str.w	r5, [r4, #332]	; 0x14c
 8002b42:	4b11      	ldr	r3, [pc, #68]	; (8002b88 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x6c>)
 8002b44:	f8c4 3140 	str.w	r3, [r4, #320]	; 0x140
{
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_PORTRAIT);
 8002b48:	6803      	ldr	r3, [r0, #0]
 8002b4a:	f8c4 5138 	str.w	r5, [r4, #312]	; 0x138
 8002b4e:	689b      	ldr	r3, [r3, #8]
 8002b50:	f8c4 513c 	str.w	r5, [r4, #316]	; 0x13c
 8002b54:	2101      	movs	r1, #1
 8002b56:	f8c4 5144 	str.w	r5, [r4, #324]	; 0x144
      model(m)
 8002b5a:	f8c4 7150 	str.w	r7, [r4, #336]	; 0x150
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_PORTRAIT);
 8002b5e:	4798      	blx	r3
    touchgfx::Texts::setLanguage(GB);
 8002b60:	4628      	mov	r0, r5
 8002b62:	f000 fa4d 	bl	8003000 <_ZN8touchgfx5Texts11setLanguageEt>
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 8002b66:	6833      	ldr	r3, [r6, #0]
 8002b68:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 8002b6c:	b10a      	cbz	r2, 8002b72 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x56>
 8002b6e:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8002b70:	b900      	cbnz	r0, 8002b74 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x58>
            return instance->lcdRef;
 8002b72:	6898      	ldr	r0, [r3, #8]
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableTextureMapperAll();
 8002b74:	f00f fb9b 	bl	80122ae <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>
}
 8002b78:	4620      	mov	r0, r4
 8002b7a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8002b7c:	200121f4 	.word	0x200121f4
 8002b80:	20012188 	.word	0x20012188
 8002b84:	0801aa64 	.word	0x0801aa64
 8002b88:	0801aa4c 	.word	0x0801aa4c

08002b8c <_ZN23FrontendApplicationBase32gotomainScreenScreenNoTransitionEv>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8002b8c:	4b06      	ldr	r3, [pc, #24]	; (8002ba8 <_ZN23FrontendApplicationBase32gotomainScreenScreenNoTransitionEv+0x1c>)
 8002b8e:	f8c0 3148 	str.w	r3, [r0, #328]	; 0x148
 8002b92:	2300      	movs	r3, #0
 8002b94:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
// mainScreen

void FrontendApplicationBase::gotomainScreenScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplication::gotomainScreenScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 8002b98:	f500 73a0 	add.w	r3, r0, #320	; 0x140
 8002b9c:	f8c0 0144 	str.w	r0, [r0, #324]	; 0x144
 8002ba0:	f8c0 313c 	str.w	r3, [r0, #316]	; 0x13c
}
 8002ba4:	4770      	bx	lr
 8002ba6:	bf00      	nop
 8002ba8:	08002ced 	.word	0x08002ced

08002bac <_ZN8touchgfx14makeTransitionI14mainScreenView19mainScreenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_>:
 *
 * @return Pointer to the new Presenter of the requested type. Incidentally it will be the same
 *         value as the old presenter due to memory reuse.
 */
template <class ScreenType, class PresenterType, class TransType, class ModelType>
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
 8002bac:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8002bb0:	4607      	mov	r7, r0
{
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8002bb2:	6890      	ldr	r0, [r2, #8]
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
 8002bb4:	f8dd a020 	ldr.w	sl, [sp, #32]
 8002bb8:	4699      	mov	r9, r3
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8002bba:	6803      	ldr	r3, [r0, #0]
 8002bbc:	6a1b      	ldr	r3, [r3, #32]
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
 8002bbe:	4688      	mov	r8, r1
 8002bc0:	4615      	mov	r5, r2
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8002bc2:	4798      	blx	r3
 8002bc4:	f5b0 7f59 	cmp.w	r0, #868	; 0x364
 8002bc8:	d205      	bcs.n	8002bd6 <_ZN8touchgfx14makeTransitionI14mainScreenView19mainScreenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x2a>
 8002bca:	4b42      	ldr	r3, [pc, #264]	; (8002cd4 <_ZN8touchgfx14makeTransitionI14mainScreenView19mainScreenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x128>)
 8002bcc:	4a42      	ldr	r2, [pc, #264]	; (8002cd8 <_ZN8touchgfx14makeTransitionI14mainScreenView19mainScreenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x12c>)
 8002bce:	21a7      	movs	r1, #167	; 0xa7
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8002bd0:	4842      	ldr	r0, [pc, #264]	; (8002cdc <_ZN8touchgfx14makeTransitionI14mainScreenView19mainScreenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x130>)
 8002bd2:	f016 fc1b 	bl	801940c <__assert_func>
 8002bd6:	6868      	ldr	r0, [r5, #4]
 8002bd8:	6803      	ldr	r3, [r0, #0]
 8002bda:	6a1b      	ldr	r3, [r3, #32]
 8002bdc:	4798      	blx	r3
 8002bde:	280f      	cmp	r0, #15
 8002be0:	d803      	bhi.n	8002bea <_ZN8touchgfx14makeTransitionI14mainScreenView19mainScreenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x3e>
 8002be2:	4b3f      	ldr	r3, [pc, #252]	; (8002ce0 <_ZN8touchgfx14makeTransitionI14mainScreenView19mainScreenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x134>)
 8002be4:	4a3c      	ldr	r2, [pc, #240]	; (8002cd8 <_ZN8touchgfx14makeTransitionI14mainScreenView19mainScreenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x12c>)
 8002be6:	21a8      	movs	r1, #168	; 0xa8
 8002be8:	e7f2      	b.n	8002bd0 <_ZN8touchgfx14makeTransitionI14mainScreenView19mainScreenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x24>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8002bea:	68e8      	ldr	r0, [r5, #12]
 8002bec:	6803      	ldr	r3, [r0, #0]
 8002bee:	6a1b      	ldr	r3, [r3, #32]
 8002bf0:	4798      	blx	r3
 8002bf2:	280b      	cmp	r0, #11
 8002bf4:	d803      	bhi.n	8002bfe <_ZN8touchgfx14makeTransitionI14mainScreenView19mainScreenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x52>
 8002bf6:	4b3b      	ldr	r3, [pc, #236]	; (8002ce4 <_ZN8touchgfx14makeTransitionI14mainScreenView19mainScreenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x138>)
 8002bf8:	4a37      	ldr	r2, [pc, #220]	; (8002cd8 <_ZN8touchgfx14makeTransitionI14mainScreenView19mainScreenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x12c>)
 8002bfa:	21a9      	movs	r1, #169	; 0xa9
 8002bfc:	e7e8      	b.n	8002bd0 <_ZN8touchgfx14makeTransitionI14mainScreenView19mainScreenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x24>
    Application::getInstance()->clearAllTimerWidgets();
 8002bfe:	f008 ff61 	bl	800bac4 <_ZN8touchgfx11Application11getInstanceEv>
 8002c02:	f008 ff65 	bl	800bad0 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
    if (*currentTrans)
 8002c06:	f8d9 0000 	ldr.w	r0, [r9]
 8002c0a:	b110      	cbz	r0, 8002c12 <_ZN8touchgfx14makeTransitionI14mainScreenView19mainScreenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x66>
        (*currentTrans)->tearDown();
 8002c0c:	6803      	ldr	r3, [r0, #0]
 8002c0e:	68db      	ldr	r3, [r3, #12]
 8002c10:	4798      	blx	r3
    if (*currentTrans)
 8002c12:	f8d9 0000 	ldr.w	r0, [r9]
 8002c16:	b110      	cbz	r0, 8002c1e <_ZN8touchgfx14makeTransitionI14mainScreenView19mainScreenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x72>
        (*currentTrans)->~Transition();
 8002c18:	6803      	ldr	r3, [r0, #0]
 8002c1a:	681b      	ldr	r3, [r3, #0]
 8002c1c:	4798      	blx	r3
    if (*currentScreen)
 8002c1e:	6838      	ldr	r0, [r7, #0]
 8002c20:	b110      	cbz	r0, 8002c28 <_ZN8touchgfx14makeTransitionI14mainScreenView19mainScreenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x7c>
        (*currentScreen)->tearDownScreen();
 8002c22:	6803      	ldr	r3, [r0, #0]
 8002c24:	695b      	ldr	r3, [r3, #20]
 8002c26:	4798      	blx	r3
    if (*currentPresenter)
 8002c28:	f8d8 0000 	ldr.w	r0, [r8]
 8002c2c:	b110      	cbz	r0, 8002c34 <_ZN8touchgfx14makeTransitionI14mainScreenView19mainScreenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x88>
        (*currentPresenter)->deactivate();
 8002c2e:	6803      	ldr	r3, [r0, #0]
 8002c30:	685b      	ldr	r3, [r3, #4]
 8002c32:	4798      	blx	r3
    if (*currentScreen)
 8002c34:	6838      	ldr	r0, [r7, #0]
 8002c36:	b110      	cbz	r0, 8002c3e <_ZN8touchgfx14makeTransitionI14mainScreenView19mainScreenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x92>
        (*currentScreen)->~Screen();
 8002c38:	6803      	ldr	r3, [r0, #0]
 8002c3a:	681b      	ldr	r3, [r3, #0]
 8002c3c:	4798      	blx	r3
    if (*currentPresenter)
 8002c3e:	f8d8 0000 	ldr.w	r0, [r8]
 8002c42:	b110      	cbz	r0, 8002c4a <_ZN8touchgfx14makeTransitionI14mainScreenView19mainScreenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x9e>
        (*currentPresenter)->~Presenter();
 8002c44:	6803      	ldr	r3, [r0, #0]
 8002c46:	689b      	ldr	r3, [r3, #8]
 8002c48:	4798      	blx	r3

    prepareTransition(currentScreen, currentPresenter, currentTrans);

    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8002c4a:	68e8      	ldr	r0, [r5, #12]
     * @return A typed reference to the object at the specified index.
     */
    template <typename T>
    T& at(const uint16_t index)
    {
        return *static_cast<T*>(element(index));
 8002c4c:	6803      	ldr	r3, [r0, #0]
 8002c4e:	2100      	movs	r1, #0
 8002c50:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002c52:	4798      	blx	r3
 8002c54:	4604      	mov	r4, r0
 8002c56:	b120      	cbz	r0, 8002c62 <_ZN8touchgfx14makeTransitionI14mainScreenView19mainScreenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xb6>
        : screenContainer(0), done(false)
 8002c58:	2300      	movs	r3, #0
 8002c5a:	6043      	str	r3, [r0, #4]
 8002c5c:	7203      	strb	r3, [r0, #8]
 8002c5e:	4b22      	ldr	r3, [pc, #136]	; (8002ce8 <_ZN8touchgfx14makeTransitionI14mainScreenView19mainScreenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x13c>)
 8002c60:	6003      	str	r3, [r0, #0]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8002c62:	68a8      	ldr	r0, [r5, #8]
 8002c64:	6803      	ldr	r3, [r0, #0]
 8002c66:	2100      	movs	r1, #0
 8002c68:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002c6a:	4798      	blx	r3
 8002c6c:	4606      	mov	r6, r0
 8002c6e:	b108      	cbz	r0, 8002c74 <_ZN8touchgfx14makeTransitionI14mainScreenView19mainScreenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xc8>
 8002c70:	f000 fd32 	bl	80036d8 <_ZN14mainScreenViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8002c74:	6868      	ldr	r0, [r5, #4]
 8002c76:	6803      	ldr	r3, [r0, #0]
 8002c78:	2100      	movs	r1, #0
 8002c7a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002c7c:	4798      	blx	r3
 8002c7e:	4605      	mov	r5, r0
 8002c80:	b110      	cbz	r0, 8002c88 <_ZN8touchgfx14makeTransitionI14mainScreenView19mainScreenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xdc>
 8002c82:	4631      	mov	r1, r6
 8002c84:	f000 fcc8 	bl	8003618 <_ZN19mainScreenPresenterC1ER14mainScreenView>
    *currentTrans = newTransition;
 8002c88:	f8c9 4000 	str.w	r4, [r9]
    *currentPresenter = newPresenter;
 8002c8c:	f8c8 5000 	str.w	r5, [r8]
    *currentScreen = newScreen;
 8002c90:	603e      	str	r6, [r7, #0]
    model->bind(newPresenter);
 8002c92:	b1e5      	cbz	r5, 8002cce <_ZN8touchgfx14makeTransitionI14mainScreenView19mainScreenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x122>
 8002c94:	1d2b      	adds	r3, r5, #4
public:
    Model();

    void bind(ModelListener* listener)
    {
        modelListener = listener;
 8002c96:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8002c9a:	6833      	ldr	r3, [r6, #0]
    
    virtual ~ModelListener() {}

    void bind(Model* m)
    {
        model = m;
 8002c9c:	f8c5 a008 	str.w	sl, [r5, #8]
 8002ca0:	4630      	mov	r0, r6
     *
     * @param [in] presenter The specific Presenter to be associated with the View.
     */
    void bind(T& presenter)
    {
        this->presenter = &presenter;
 8002ca2:	63f5      	str	r5, [r6, #60]	; 0x3c
 8002ca4:	68db      	ldr	r3, [r3, #12]
 8002ca6:	4798      	blx	r3
    newPresenter->activate();
 8002ca8:	682b      	ldr	r3, [r5, #0]
 8002caa:	4628      	mov	r0, r5
 8002cac:	681b      	ldr	r3, [r3, #0]
 8002cae:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8002cb0:	4621      	mov	r1, r4
 8002cb2:	4630      	mov	r0, r6
 8002cb4:	f00a f88c 	bl	800cdd0 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8002cb8:	6823      	ldr	r3, [r4, #0]
 8002cba:	4620      	mov	r0, r4
 8002cbc:	691b      	ldr	r3, [r3, #16]
 8002cbe:	4798      	blx	r3
    newTransition->invalidate();
 8002cc0:	6823      	ldr	r3, [r4, #0]
 8002cc2:	4620      	mov	r0, r4
 8002cc4:	695b      	ldr	r3, [r3, #20]
 8002cc6:	4798      	blx	r3
    newScreen->bind(*newPresenter);

    finalizeTransition((Screen*)newScreen, (Presenter*)newPresenter, (Transition*)newTransition);

    return newPresenter;
}
 8002cc8:	4628      	mov	r0, r5
 8002cca:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    model->bind(newPresenter);
 8002cce:	462b      	mov	r3, r5
 8002cd0:	e7e1      	b.n	8002c96 <_ZN8touchgfx14makeTransitionI14mainScreenView19mainScreenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xea>
 8002cd2:	bf00      	nop
 8002cd4:	0801aac4 	.word	0x0801aac4
 8002cd8:	0801acdf 	.word	0x0801acdf
 8002cdc:	0801ab52 	.word	0x0801ab52
 8002ce0:	0801ab99 	.word	0x0801ab99
 8002ce4:	0801ac3c 	.word	0x0801ac3c
 8002ce8:	0801aaa8 	.word	0x0801aaa8

08002cec <_ZN23FrontendApplicationBase36gotomainScreenScreenNoTransitionImplEv>:

void FrontendApplicationBase::gotomainScreenScreenNoTransitionImpl()
{
 8002cec:	b507      	push	{r0, r1, r2, lr}
    touchgfx::makeTransition<mainScreenView, mainScreenPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8002cee:	f8d0 3154 	ldr.w	r3, [r0, #340]	; 0x154
 8002cf2:	9300      	str	r3, [sp, #0]
 8002cf4:	f8d0 2150 	ldr.w	r2, [r0, #336]	; 0x150
 8002cf8:	4b04      	ldr	r3, [pc, #16]	; (8002d0c <_ZN23FrontendApplicationBase36gotomainScreenScreenNoTransitionImplEv+0x20>)
 8002cfa:	f500 719c 	add.w	r1, r0, #312	; 0x138
 8002cfe:	4804      	ldr	r0, [pc, #16]	; (8002d10 <_ZN23FrontendApplicationBase36gotomainScreenScreenNoTransitionImplEv+0x24>)
 8002d00:	f7ff ff54 	bl	8002bac <_ZN8touchgfx14makeTransitionI14mainScreenView19mainScreenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_>
}
 8002d04:	b003      	add	sp, #12
 8002d06:	f85d fb04 	ldr.w	pc, [sp], #4
 8002d0a:	bf00      	nop
 8002d0c:	200121e8 	.word	0x200121e8
 8002d10:	200121e4 	.word	0x200121e4

08002d14 <_ZNK8touchgfx13GeneratedFont12getGSUBTableEv>:
     * @return The GSUB table or null if font has GSUB no table
     */
    virtual const uint16_t* getGSUBTable() const
    {
        return gsubTable;
    }
 8002d14:	6a00      	ldr	r0, [r0, #32]
 8002d16:	4770      	bx	lr

08002d18 <_ZN8touchgfx13GeneratedFontD1Ev>:
class GeneratedFont : public ConstFont
 8002d18:	4770      	bx	lr

08002d1a <_ZNK8touchgfx13GeneratedFont12getPixelDataEPKNS_9GlyphNodeE>:
}

const uint8_t* GeneratedFont::getPixelData(const GlyphNode* glyph) const
{
    const uint8_t* const* table = (const uint8_t* const*)glyphData;
    return &(table[glyph->unicode / 2048][glyph->dataOffset]);
 8002d1a:	888b      	ldrh	r3, [r1, #4]
 8002d1c:	6980      	ldr	r0, [r0, #24]
 8002d1e:	680a      	ldr	r2, [r1, #0]
 8002d20:	0adb      	lsrs	r3, r3, #11
 8002d22:	f850 0023 	ldr.w	r0, [r0, r3, lsl #2]
}
 8002d26:	4410      	add	r0, r2
 8002d28:	4770      	bx	lr

08002d2a <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE>:

int8_t GeneratedFont::getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const
{
 8002d2a:	b510      	push	{r4, lr}
    if (!glyph || glyph->kerningTableSize == 0)
 8002d2c:	b1c2      	cbz	r2, 8002d60 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
 8002d2e:	7b13      	ldrb	r3, [r2, #12]
 8002d30:	b1b3      	cbz	r3, 8002d60 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
        return ((flags & GLYPH_DATA_KERNINGTABLEPOS_BIT8_10) << 8) | _kerningTablePos;
 8002d32:	7b54      	ldrb	r4, [r2, #13]
 8002d34:	7ad2      	ldrb	r2, [r2, #11]
 8002d36:	0224      	lsls	r4, r4, #8
 8002d38:	f404 64e0 	and.w	r4, r4, #1792	; 0x700
    {
        return 0;
    }

    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 8002d3c:	4314      	orrs	r4, r2
 8002d3e:	69c2      	ldr	r2, [r0, #28]
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 8002d40:	b298      	uxth	r0, r3
    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 8002d42:	eb02 0284 	add.w	r2, r2, r4, lsl #2
    {
        if (prevChar == kerndata->unicodePrevChar)
 8002d46:	8813      	ldrh	r3, [r2, #0]
 8002d48:	428b      	cmp	r3, r1
 8002d4a:	d102      	bne.n	8002d52 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x28>
        {
            return kerndata->distance;
 8002d4c:	f992 0002 	ldrsb.w	r0, [r2, #2]
        {
            break;
        }
    }
    return 0;
}
 8002d50:	bd10      	pop	{r4, pc}
        if (prevChar < kerndata->unicodePrevChar)
 8002d52:	d805      	bhi.n	8002d60 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 8002d54:	3801      	subs	r0, #1
 8002d56:	b280      	uxth	r0, r0
 8002d58:	3204      	adds	r2, #4
 8002d5a:	2800      	cmp	r0, #0
 8002d5c:	d1f3      	bne.n	8002d46 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x1c>
 8002d5e:	e7f7      	b.n	8002d50 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>
        return 0;
 8002d60:	2000      	movs	r0, #0
 8002d62:	e7f5      	b.n	8002d50 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>

08002d64 <_ZN8touchgfx13GeneratedFontD0Ev>:
 8002d64:	b510      	push	{r4, lr}
 8002d66:	2124      	movs	r1, #36	; 0x24
 8002d68:	4604      	mov	r4, r0
 8002d6a:	f016 fb23 	bl	80193b4 <_ZdlPvj>
 8002d6e:	4620      	mov	r0, r4
 8002d70:	bd10      	pop	{r4, pc}
	...

08002d74 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKt>:
GeneratedFont::GeneratedFont(const GlyphNode* list, uint16_t size, uint16_t height, uint8_t pixBelowBase, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData) :
 8002d74:	b530      	push	{r4, r5, lr}
 8002d76:	b089      	sub	sp, #36	; 0x24
 8002d78:	4604      	mov	r4, r0
    gsubTable(gsubData)
 8002d7a:	f8bd 5050 	ldrh.w	r5, [sp, #80]	; 0x50
 8002d7e:	9506      	str	r5, [sp, #24]
 8002d80:	f8bd 504c 	ldrh.w	r5, [sp, #76]	; 0x4c
 8002d84:	9505      	str	r5, [sp, #20]
 8002d86:	f89d 5040 	ldrb.w	r5, [sp, #64]	; 0x40
 8002d8a:	9504      	str	r5, [sp, #16]
 8002d8c:	f89d 503c 	ldrb.w	r5, [sp, #60]	; 0x3c
 8002d90:	9503      	str	r5, [sp, #12]
 8002d92:	f89d 5038 	ldrb.w	r5, [sp, #56]	; 0x38
 8002d96:	9502      	str	r5, [sp, #8]
 8002d98:	f89d 5034 	ldrb.w	r5, [sp, #52]	; 0x34
 8002d9c:	9501      	str	r5, [sp, #4]
 8002d9e:	f89d 5030 	ldrb.w	r5, [sp, #48]	; 0x30
 8002da2:	9500      	str	r5, [sp, #0]
 8002da4:	f009 fc18 	bl	800c5d8 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEtthhhhhtt>
 8002da8:	4b05      	ldr	r3, [pc, #20]	; (8002dc0 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKt+0x4c>)
 8002daa:	6023      	str	r3, [r4, #0]
 8002dac:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8002dae:	61a3      	str	r3, [r4, #24]
 8002db0:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8002db2:	61e3      	str	r3, [r4, #28]
 8002db4:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8002db6:	6223      	str	r3, [r4, #32]
}
 8002db8:	4620      	mov	r0, r4
 8002dba:	b009      	add	sp, #36	; 0x24
 8002dbc:	bd30      	pop	{r4, r5, pc}
 8002dbe:	bf00      	nop
 8002dc0:	0801adf4 	.word	0x0801adf4

08002dc4 <__tcf_0>:

touchgfx::GeneratedFont& getFont_verdana_10_4bpp();

touchgfx::GeneratedFont& getFont_verdana_10_4bpp()
{
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0);
 8002dc4:	4770      	bx	lr
	...

08002dc8 <_Z23getFont_verdana_10_4bppv>:
{
 8002dc8:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0);
 8002dca:	4d14      	ldr	r5, [pc, #80]	; (8002e1c <_Z23getFont_verdana_10_4bppv+0x54>)
 8002dcc:	782c      	ldrb	r4, [r5, #0]
 8002dce:	f3bf 8f5b 	dmb	ish
 8002dd2:	f014 0401 	ands.w	r4, r4, #1
{
 8002dd6:	b08b      	sub	sp, #44	; 0x2c
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0);
 8002dd8:	d11d      	bne.n	8002e16 <_Z23getFont_verdana_10_4bppv+0x4e>
 8002dda:	4628      	mov	r0, r5
 8002ddc:	f016 faec 	bl	80193b8 <__cxa_guard_acquire>
 8002de0:	b1c8      	cbz	r0, 8002e16 <_Z23getFont_verdana_10_4bppv+0x4e>
 8002de2:	233f      	movs	r3, #63	; 0x3f
 8002de4:	9307      	str	r3, [sp, #28]
 8002de6:	4b0e      	ldr	r3, [pc, #56]	; (8002e20 <_Z23getFont_verdana_10_4bppv+0x58>)
 8002de8:	9306      	str	r3, [sp, #24]
 8002dea:	4b0e      	ldr	r3, [pc, #56]	; (8002e24 <_Z23getFont_verdana_10_4bppv+0x5c>)
 8002dec:	490e      	ldr	r1, [pc, #56]	; (8002e28 <_Z23getFont_verdana_10_4bppv+0x60>)
 8002dee:	9403      	str	r4, [sp, #12]
 8002df0:	2201      	movs	r2, #1
 8002df2:	e9cd 4304 	strd	r4, r3, [sp, #16]
 8002df6:	2304      	movs	r3, #4
 8002df8:	e9cd 3201 	strd	r3, r2, [sp, #4]
 8002dfc:	e9cd 4408 	strd	r4, r4, [sp, #32]
 8002e00:	230a      	movs	r3, #10
 8002e02:	9400      	str	r4, [sp, #0]
 8002e04:	4809      	ldr	r0, [pc, #36]	; (8002e2c <_Z23getFont_verdana_10_4bppv+0x64>)
 8002e06:	f7ff ffb5 	bl	8002d74 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKt>
 8002e0a:	4628      	mov	r0, r5
 8002e0c:	f016 fae0 	bl	80193d0 <__cxa_guard_release>
 8002e10:	4807      	ldr	r0, [pc, #28]	; (8002e30 <_Z23getFont_verdana_10_4bppv+0x68>)
 8002e12:	f016 fb19 	bl	8019448 <atexit>
    return verdana_10_4bpp;
}
 8002e16:	4805      	ldr	r0, [pc, #20]	; (8002e2c <_Z23getFont_verdana_10_4bppv+0x64>)
 8002e18:	b00b      	add	sp, #44	; 0x2c
 8002e1a:	bd30      	pop	{r4, r5, pc}
 8002e1c:	200013d8 	.word	0x200013d8
 8002e20:	0801e13c 	.word	0x0801e13c
 8002e24:	0801ae40 	.word	0x0801ae40
 8002e28:	0801dff4 	.word	0x0801dff4
 8002e2c:	200013dc 	.word	0x200013dc
 8002e30:	08002dc5 	.word	0x08002dc5

08002e34 <__tcf_0>:

touchgfx::GeneratedFont& getFont_verdana_20_4bpp();

touchgfx::GeneratedFont& getFont_verdana_20_4bpp()
{
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 21, 20, 4, 4, 1, 0, 1, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0);
 8002e34:	4770      	bx	lr
	...

08002e38 <_Z23getFont_verdana_20_4bppv>:
{
 8002e38:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 21, 20, 4, 4, 1, 0, 1, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0);
 8002e3a:	4d15      	ldr	r5, [pc, #84]	; (8002e90 <_Z23getFont_verdana_20_4bppv+0x58>)
 8002e3c:	782c      	ldrb	r4, [r5, #0]
 8002e3e:	f3bf 8f5b 	dmb	ish
 8002e42:	f014 0401 	ands.w	r4, r4, #1
{
 8002e46:	b08b      	sub	sp, #44	; 0x2c
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 21, 20, 4, 4, 1, 0, 1, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0);
 8002e48:	d11e      	bne.n	8002e88 <_Z23getFont_verdana_20_4bppv+0x50>
 8002e4a:	4628      	mov	r0, r5
 8002e4c:	f016 fab4 	bl	80193b8 <__cxa_guard_acquire>
 8002e50:	b1d0      	cbz	r0, 8002e88 <_Z23getFont_verdana_20_4bppv+0x50>
 8002e52:	233f      	movs	r3, #63	; 0x3f
 8002e54:	9307      	str	r3, [sp, #28]
 8002e56:	4b0f      	ldr	r3, [pc, #60]	; (8002e94 <_Z23getFont_verdana_20_4bppv+0x5c>)
 8002e58:	9306      	str	r3, [sp, #24]
 8002e5a:	4b0f      	ldr	r3, [pc, #60]	; (8002e98 <_Z23getFont_verdana_20_4bppv+0x60>)
 8002e5c:	9305      	str	r3, [sp, #20]
 8002e5e:	2301      	movs	r3, #1
 8002e60:	e9cd 4303 	strd	r4, r3, [sp, #12]
 8002e64:	9302      	str	r3, [sp, #8]
 8002e66:	2304      	movs	r3, #4
 8002e68:	e9cd 3300 	strd	r3, r3, [sp]
 8002e6c:	2215      	movs	r2, #21
 8002e6e:	2314      	movs	r3, #20
 8002e70:	490a      	ldr	r1, [pc, #40]	; (8002e9c <_Z23getFont_verdana_20_4bppv+0x64>)
 8002e72:	480b      	ldr	r0, [pc, #44]	; (8002ea0 <_Z23getFont_verdana_20_4bppv+0x68>)
 8002e74:	e9cd 4408 	strd	r4, r4, [sp, #32]
 8002e78:	f7ff ff7c 	bl	8002d74 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKt>
 8002e7c:	4628      	mov	r0, r5
 8002e7e:	f016 faa7 	bl	80193d0 <__cxa_guard_release>
 8002e82:	4808      	ldr	r0, [pc, #32]	; (8002ea4 <_Z23getFont_verdana_20_4bppv+0x6c>)
 8002e84:	f016 fae0 	bl	8019448 <atexit>
    return verdana_20_4bpp;
}
 8002e88:	4805      	ldr	r0, [pc, #20]	; (8002ea0 <_Z23getFont_verdana_20_4bppv+0x68>)
 8002e8a:	b00b      	add	sp, #44	; 0x2c
 8002e8c:	bd30      	pop	{r4, r5, pc}
 8002e8e:	bf00      	nop
 8002e90:	20001400 	.word	0x20001400
 8002e94:	0801e140 	.word	0x0801e140
 8002e98:	0801ae44 	.word	0x0801ae44
 8002e9c:	0801e004 	.word	0x0801e004
 8002ea0:	20001404 	.word	0x20001404
 8002ea4:	08002e35 	.word	0x08002e35

08002ea8 <__tcf_0>:

touchgfx::GeneratedFont& getFont_verdana_40_4bpp();

touchgfx::GeneratedFont& getFont_verdana_40_4bpp()
{
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0);
 8002ea8:	4770      	bx	lr
	...

08002eac <_Z23getFont_verdana_40_4bppv>:
{
 8002eac:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0);
 8002eae:	4d14      	ldr	r5, [pc, #80]	; (8002f00 <_Z23getFont_verdana_40_4bppv+0x54>)
 8002eb0:	782c      	ldrb	r4, [r5, #0]
 8002eb2:	f3bf 8f5b 	dmb	ish
 8002eb6:	f014 0401 	ands.w	r4, r4, #1
{
 8002eba:	b08b      	sub	sp, #44	; 0x2c
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0);
 8002ebc:	d11d      	bne.n	8002efa <_Z23getFont_verdana_40_4bppv+0x4e>
 8002ebe:	4628      	mov	r0, r5
 8002ec0:	f016 fa7a 	bl	80193b8 <__cxa_guard_acquire>
 8002ec4:	b1c8      	cbz	r0, 8002efa <_Z23getFont_verdana_40_4bppv+0x4e>
 8002ec6:	233f      	movs	r3, #63	; 0x3f
 8002ec8:	9307      	str	r3, [sp, #28]
 8002eca:	4b0e      	ldr	r3, [pc, #56]	; (8002f04 <_Z23getFont_verdana_40_4bppv+0x58>)
 8002ecc:	9306      	str	r3, [sp, #24]
 8002ece:	4b0e      	ldr	r3, [pc, #56]	; (8002f08 <_Z23getFont_verdana_40_4bppv+0x5c>)
 8002ed0:	490e      	ldr	r1, [pc, #56]	; (8002f0c <_Z23getFont_verdana_40_4bppv+0x60>)
 8002ed2:	9403      	str	r4, [sp, #12]
 8002ed4:	2201      	movs	r2, #1
 8002ed6:	e9cd 4304 	strd	r4, r3, [sp, #16]
 8002eda:	2304      	movs	r3, #4
 8002edc:	e9cd 3201 	strd	r3, r2, [sp, #4]
 8002ee0:	e9cd 4408 	strd	r4, r4, [sp, #32]
 8002ee4:	2328      	movs	r3, #40	; 0x28
 8002ee6:	9400      	str	r4, [sp, #0]
 8002ee8:	4809      	ldr	r0, [pc, #36]	; (8002f10 <_Z23getFont_verdana_40_4bppv+0x64>)
 8002eea:	f7ff ff43 	bl	8002d74 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKt>
 8002eee:	4628      	mov	r0, r5
 8002ef0:	f016 fa6e 	bl	80193d0 <__cxa_guard_release>
 8002ef4:	4807      	ldr	r0, [pc, #28]	; (8002f14 <_Z23getFont_verdana_40_4bppv+0x68>)
 8002ef6:	f016 faa7 	bl	8019448 <atexit>
    return verdana_40_4bpp;
}
 8002efa:	4805      	ldr	r0, [pc, #20]	; (8002f10 <_Z23getFont_verdana_40_4bppv+0x64>)
 8002efc:	b00b      	add	sp, #44	; 0x2c
 8002efe:	bd30      	pop	{r4, r5, pc}
 8002f00:	20001428 	.word	0x20001428
 8002f04:	0801e144 	.word	0x0801e144
 8002f08:	0801ae48 	.word	0x0801ae48
 8002f0c:	0801e12c 	.word	0x0801e12c
 8002f10:	2000142c 	.word	0x2000142c
 8002f14:	08002ea9 	.word	0x08002ea9

08002f18 <_ZNK8touchgfx4Font12getGSUBTableEv>:
     * @return The GSUB table or null if font has GSUB no table.
     */
    virtual const uint16_t* getGSUBTable() const
    {
        return 0;
    }
 8002f18:	2000      	movs	r0, #0
 8002f1a:	4770      	bx	lr

08002f1c <_ZNK8touchgfx4Font14getStringWidthEPKtz>:
#include <touchgfx/Unicode.hpp>
#include <touchgfx/hal/HAL.hpp>
#include <touchgfx/lcd/LCD.hpp>

uint16_t touchgfx::Font::getStringWidth(const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 8002f1c:	b40e      	push	{r1, r2, r3}
 8002f1e:	b503      	push	{r0, r1, lr}
 8002f20:	ab03      	add	r3, sp, #12
    va_list pArg;
    va_start(pArg, text);
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 8002f22:	2100      	movs	r1, #0
{
 8002f24:	f853 2b04 	ldr.w	r2, [r3], #4
    va_start(pArg, text);
 8002f28:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 8002f2a:	f009 f991 	bl	800c250 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 8002f2e:	b002      	add	sp, #8
 8002f30:	f85d eb04 	ldr.w	lr, [sp], #4
 8002f34:	b003      	add	sp, #12
 8002f36:	4770      	bx	lr

08002f38 <_ZNK8touchgfx4Font14getStringWidthEhPKtz>:

uint16_t touchgfx::Font::getStringWidth(touchgfx::TextDirection textDirection, const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 8002f38:	b40c      	push	{r2, r3}
 8002f3a:	b507      	push	{r0, r1, r2, lr}
 8002f3c:	ab04      	add	r3, sp, #16
 8002f3e:	f853 2b04 	ldr.w	r2, [r3], #4
    va_list pArg;
    va_start(pArg, text);
 8002f42:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(textDirection, text, pArg);
 8002f44:	f009 f984 	bl	800c250 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 8002f48:	b003      	add	sp, #12
 8002f4a:	f85d eb04 	ldr.w	lr, [sp], #4
 8002f4e:	b002      	add	sp, #8
 8002f50:	4770      	bx	lr
	...

08002f54 <_ZN8touchgfx12TextProvider15getNextLigatureEh>:

touchgfx::Unicode::UnicodeChar touchgfx::TextProvider::getNextLigature(TextDirection direction)
{
    if (fontGsubTable && nextCharacters.peekChar())
 8002f54:	6bc3      	ldr	r3, [r0, #60]	; 0x3c
{
 8002f56:	b510      	push	{r4, lr}
 8002f58:	4604      	mov	r4, r0
    if (fontGsubTable && nextCharacters.peekChar())
 8002f5a:	b373      	cbz	r3, 8002fba <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
        {
            return used == size;
        }
        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
        {
            assert(used > 0);
 8002f5c:	8e03      	ldrh	r3, [r0, #48]	; 0x30
 8002f5e:	b92b      	cbnz	r3, 8002f6c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x18>
 8002f60:	4b18      	ldr	r3, [pc, #96]	; (8002fc4 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x70>)
 8002f62:	4a19      	ldr	r2, [pc, #100]	; (8002fc8 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x74>)
 8002f64:	21c0      	movs	r1, #192	; 0xc0
            return buffer[pos];
        }
        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar(uint16_t offset)
        {
            assert(offset < used);
 8002f66:	4819      	ldr	r0, [pc, #100]	; (8002fcc <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x78>)
 8002f68:	f016 fa50 	bl	801940c <__assert_func>
            return buffer[pos];
 8002f6c:	8dc3      	ldrh	r3, [r0, #46]	; 0x2e
 8002f6e:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8002f72:	8b5b      	ldrh	r3, [r3, #26]
 8002f74:	b30b      	cbz	r3, 8002fba <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
    {
        substituteGlyphs();
 8002f76:	f00a fc83 	bl	800d880 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>
            assert(offset < used);
 8002f7a:	8e23      	ldrh	r3, [r4, #48]	; 0x30
 8002f7c:	2b01      	cmp	r3, #1
 8002f7e:	d803      	bhi.n	8002f88 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x34>
 8002f80:	4b13      	ldr	r3, [pc, #76]	; (8002fd0 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x7c>)
 8002f82:	4a14      	ldr	r2, [pc, #80]	; (8002fd4 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x80>)
 8002f84:	21c5      	movs	r1, #197	; 0xc5
 8002f86:	e7ee      	b.n	8002f66 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x12>
            const uint16_t index = pos + offset;
 8002f88:	8de2      	ldrh	r2, [r4, #46]	; 0x2e
 8002f8a:	1c53      	adds	r3, r2, #1
 8002f8c:	b29b      	uxth	r3, r3
            return buffer[index < size ? index : index - size];
 8002f8e:	2b09      	cmp	r3, #9
 8002f90:	4619      	mov	r1, r3
 8002f92:	bf88      	it	hi
 8002f94:	f1a3 010a 	subhi.w	r1, r3, #10
 8002f98:	eb04 0141 	add.w	r1, r4, r1, lsl #1
        if (nextCharacters.peekChar(1) == 0x093F) //Hindi I-matra
 8002f9c:	f640 103f 	movw	r0, #2367	; 0x93f
 8002fa0:	8b49      	ldrh	r1, [r1, #26]
 8002fa2:	4281      	cmp	r1, r0
 8002fa4:	d109      	bne.n	8002fba <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
        }
        FORCE_INLINE_FUNCTION void replaceAt1(Unicode::UnicodeChar newChar)
        {
            assert(used > 1);
            const uint16_t index = pos + 1;
            buffer[index < size ? index : 0] = newChar;
 8002fa6:	2b0a      	cmp	r3, #10
 8002fa8:	eb04 0242 	add.w	r2, r4, r2, lsl #1
 8002fac:	bf28      	it	cs
 8002fae:	2300      	movcs	r3, #0
 8002fb0:	eb04 0343 	add.w	r3, r4, r3, lsl #1
            return buffer[pos];
 8002fb4:	8b50      	ldrh	r0, [r2, #26]
            buffer[index < size ? index : 0] = newChar;
 8002fb6:	8358      	strh	r0, [r3, #26]
            buffer[pos] = newChar;
 8002fb8:	8351      	strh	r1, [r2, #26]
        {
            nextCharacters.replaceAt1(nextCharacters.peekChar());
            nextCharacters.replaceAt0(0x093F);
        }
    }
    return getNextChar();
 8002fba:	4620      	mov	r0, r4
}
 8002fbc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    return getNextChar();
 8002fc0:	f00a bb42 	b.w	800d648 <_ZN8touchgfx12TextProvider11getNextCharEv>
 8002fc4:	0801ae4c 	.word	0x0801ae4c
 8002fc8:	0801af7f 	.word	0x0801af7f
 8002fcc:	0801ae55 	.word	0x0801ae55
 8002fd0:	0801ae9f 	.word	0x0801ae9f
 8002fd4:	0801aead 	.word	0x0801aead

08002fd8 <_ZN8touchgfx12TextProvider18initializeInternalEv>:

void touchgfx::TextProvider::initializeInternal()
{
    fillInputBuffer();
 8002fd8:	f00a baf0 	b.w	800d5bc <_ZN8touchgfx12TextProvider15fillInputBufferEv>

08002fdc <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>:
}

void touchgfx::LCD::drawString(touchgfx::Rect widgetArea, const touchgfx::Rect& invalidatedArea, const touchgfx::LCD::StringVisuals& stringVisuals, const touchgfx::Unicode::UnicodeChar* format, ...)
{
 8002fdc:	b510      	push	{r4, lr}
 8002fde:	b086      	sub	sp, #24
 8002fe0:	ac02      	add	r4, sp, #8
 8002fe2:	e884 0006 	stmia.w	r4, {r1, r2}
 8002fe6:	461a      	mov	r2, r3
    va_list pArg;
    va_start(pArg, format);
 8002fe8:	ab0a      	add	r3, sp, #40	; 0x28
 8002fea:	9305      	str	r3, [sp, #20]
    drawStringLTR(widgetArea, invalidatedArea, stringVisuals, format, pArg);
 8002fec:	9301      	str	r3, [sp, #4]
 8002fee:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8002ff0:	9300      	str	r3, [sp, #0]
 8002ff2:	4621      	mov	r1, r4
 8002ff4:	9b08      	ldr	r3, [sp, #32]
 8002ff6:	f008 f974 	bl	800b2e2 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>
    va_end(pArg);
}
 8002ffa:	b006      	add	sp, #24
 8002ffc:	bd10      	pop	{r4, pc}
	...

08003000 <_ZN8touchgfx5Texts11setLanguageEt>:
touchgfx::LanguageId touchgfx::Texts::currentLanguage = static_cast<touchgfx::LanguageId>(0);
static const touchgfx::Unicode::UnicodeChar* currentLanguagePtr = 0;
static const uint32_t* currentLanguageIndices = 0;

void touchgfx::Texts::setLanguage(touchgfx::LanguageId id)
{
 8003000:	b538      	push	{r3, r4, r5, lr}
    const touchgfx::TypedText::TypedTextData* currentLanguageTypedText = 0;
    if (id < 1)
 8003002:	b9d8      	cbnz	r0, 800303c <_ZN8touchgfx5Texts11setLanguageEt+0x3c>
    {
        if (languagesArray[id] != 0)
 8003004:	4b11      	ldr	r3, [pc, #68]	; (800304c <_ZN8touchgfx5Texts11setLanguageEt+0x4c>)
 8003006:	4812      	ldr	r0, [pc, #72]	; (8003050 <_ZN8touchgfx5Texts11setLanguageEt+0x50>)
 8003008:	681b      	ldr	r3, [r3, #0]
 800300a:	4912      	ldr	r1, [pc, #72]	; (8003054 <_ZN8touchgfx5Texts11setLanguageEt+0x54>)
 800300c:	b1bb      	cbz	r3, 800303e <_ZN8touchgfx5Texts11setLanguageEt+0x3e>
        {
            //dynamic translation is added
            const TranslationHeader* translation = languagesArray[id];
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
 800300e:	681a      	ldr	r2, [r3, #0]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
 8003010:	689c      	ldr	r4, [r3, #8]
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
 8003012:	441a      	add	r2, r3
 8003014:	6002      	str	r2, [r0, #0]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
 8003016:	685a      	ldr	r2, [r3, #4]
 8003018:	441a      	add	r2, r3
 800301a:	600a      	str	r2, [r1, #0]
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
 800301c:	441c      	add	r4, r3
            currentLanguageIndices = staticLanguageIndices[id];
            currentLanguageTypedText = typedTextDatabaseArray[id];
        }
    }

    if (currentLanguageTypedText)
 800301e:	b16c      	cbz	r4, 800303c <_ZN8touchgfx5Texts11setLanguageEt+0x3c>
    {
        currentLanguage = id;
 8003020:	4b0d      	ldr	r3, [pc, #52]	; (8003058 <_ZN8touchgfx5Texts11setLanguageEt+0x58>)
 8003022:	2200      	movs	r2, #0
 8003024:	801a      	strh	r2, [r3, #0]
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
                                                       TypedTextDatabase::getFonts(), TypedTextDatabase::getInstanceSize());
 8003026:	f000 f835 	bl	8003094 <_ZN17TypedTextDatabase8getFontsEv>
 800302a:	4605      	mov	r5, r0
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
 800302c:	f000 f830 	bl	8003090 <_ZN17TypedTextDatabase15getInstanceSizeEv>
        typedTexts = data;
 8003030:	4b0a      	ldr	r3, [pc, #40]	; (800305c <_ZN8touchgfx5Texts11setLanguageEt+0x5c>)
 8003032:	601c      	str	r4, [r3, #0]
        fonts = f;
 8003034:	4b0a      	ldr	r3, [pc, #40]	; (8003060 <_ZN8touchgfx5Texts11setLanguageEt+0x60>)
 8003036:	601d      	str	r5, [r3, #0]
        numberOfTypedTexts = n;
 8003038:	4b0a      	ldr	r3, [pc, #40]	; (8003064 <_ZN8touchgfx5Texts11setLanguageEt+0x64>)
 800303a:	8018      	strh	r0, [r3, #0]
    }
}
 800303c:	bd38      	pop	{r3, r4, r5, pc}
            currentLanguagePtr = texts_all_languages;
 800303e:	4b0a      	ldr	r3, [pc, #40]	; (8003068 <_ZN8touchgfx5Texts11setLanguageEt+0x68>)
 8003040:	6003      	str	r3, [r0, #0]
            currentLanguageIndices = staticLanguageIndices[id];
 8003042:	4b0a      	ldr	r3, [pc, #40]	; (800306c <_ZN8touchgfx5Texts11setLanguageEt+0x6c>)
 8003044:	600b      	str	r3, [r1, #0]
            currentLanguageTypedText = typedTextDatabaseArray[id];
 8003046:	4b0a      	ldr	r3, [pc, #40]	; (8003070 <_ZN8touchgfx5Texts11setLanguageEt+0x70>)
 8003048:	681c      	ldr	r4, [r3, #0]
 800304a:	e7e8      	b.n	800301e <_ZN8touchgfx5Texts11setLanguageEt+0x1e>
 800304c:	20001450 	.word	0x20001450
 8003050:	20001454 	.word	0x20001454
 8003054:	20001458 	.word	0x20001458
 8003058:	2000145c 	.word	0x2000145c
 800305c:	200121f8 	.word	0x200121f8
 8003060:	20012200 	.word	0x20012200
 8003064:	200121fc 	.word	0x200121fc
 8003068:	0801e150 	.word	0x0801e150
 800306c:	0801e148 	.word	0x0801e148
 8003070:	0801e1a0 	.word	0x0801e1a0

08003074 <_ZNK8touchgfx5Texts7getTextEt>:
    languagesArray[id] = (const TranslationHeader*)translation;
}

const touchgfx::Unicode::UnicodeChar* touchgfx::Texts::getText(TypedTextId id) const
{
    return &currentLanguagePtr[currentLanguageIndices[id]];
 8003074:	4b04      	ldr	r3, [pc, #16]	; (8003088 <_ZNK8touchgfx5Texts7getTextEt+0x14>)
 8003076:	681b      	ldr	r3, [r3, #0]
 8003078:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 800307c:	4b03      	ldr	r3, [pc, #12]	; (800308c <_ZNK8touchgfx5Texts7getTextEt+0x18>)
 800307e:	681b      	ldr	r3, [r3, #0]
}
 8003080:	eb03 0040 	add.w	r0, r3, r0, lsl #1
 8003084:	4770      	bx	lr
 8003086:	bf00      	nop
 8003088:	20001458 	.word	0x20001458
 800308c:	20001454 	.word	0x20001454

08003090 <_ZN17TypedTextDatabase15getInstanceSizeEv>:
}

uint16_t getInstanceSize()
{
    return sizeof(typedText_database_DEFAULT) / sizeof(touchgfx::TypedText::TypedTextData);
}
 8003090:	2002      	movs	r0, #2
 8003092:	4770      	bx	lr

08003094 <_ZN17TypedTextDatabase8getFontsEv>:

const touchgfx::Font** getFonts()
{
    return touchgfx_fonts;
}
 8003094:	4800      	ldr	r0, [pc, #0]	; (8003098 <_ZN17TypedTextDatabase8getFontsEv+0x4>)
 8003096:	4770      	bx	lr
 8003098:	20001460 	.word	0x20001460

0800309c <_GLOBAL__sub_I_touchgfx_fonts>:
    case 2:
        touchgfx_fonts[2] = &(getFont_verdana_10_4bpp());
        break;
    }
}
}  // namespace TypedTextDatabase
 800309c:	b510      	push	{r4, lr}
    &(getFont_verdana_20_4bpp()),
 800309e:	f7ff fecb 	bl	8002e38 <_Z23getFont_verdana_20_4bppv>
};
 80030a2:	4c04      	ldr	r4, [pc, #16]	; (80030b4 <_GLOBAL__sub_I_touchgfx_fonts+0x18>)
 80030a4:	6020      	str	r0, [r4, #0]
    &(getFont_verdana_40_4bpp()),
 80030a6:	f7ff ff01 	bl	8002eac <_Z23getFont_verdana_40_4bppv>
};
 80030aa:	6060      	str	r0, [r4, #4]
    &(getFont_verdana_10_4bpp())
 80030ac:	f7ff fe8c 	bl	8002dc8 <_Z23getFont_verdana_10_4bppv>
};
 80030b0:	60a0      	str	r0, [r4, #8]
}  // namespace TypedTextDatabase
 80030b2:	bd10      	pop	{r4, pc}
 80030b4:	20001460 	.word	0x20001460

080030b8 <_ZN8touchgfx8Drawable11setPositionEssss>:
     * @param  width  The width of this Drawable.
     * @param  height The height of this Drawable.
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setPosition(int16_t x, int16_t y, int16_t width, int16_t height)
 80030b8:	b570      	push	{r4, r5, r6, lr}
 80030ba:	461e      	mov	r6, r3
    {
        setXY(x, y);
 80030bc:	6803      	ldr	r3, [r0, #0]
    virtual void setPosition(int16_t x, int16_t y, int16_t width, int16_t height)
 80030be:	f9bd 5010 	ldrsh.w	r5, [sp, #16]
        setXY(x, y);
 80030c2:	6b5b      	ldr	r3, [r3, #52]	; 0x34
    virtual void setPosition(int16_t x, int16_t y, int16_t width, int16_t height)
 80030c4:	4604      	mov	r4, r0
        setXY(x, y);
 80030c6:	4798      	blx	r3
        setWidth(width);
 80030c8:	6823      	ldr	r3, [r4, #0]
 80030ca:	4631      	mov	r1, r6
 80030cc:	4620      	mov	r0, r4
 80030ce:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 80030d0:	4790      	blx	r2
        setHeight(height);
 80030d2:	6823      	ldr	r3, [r4, #0]
 80030d4:	4629      	mov	r1, r5
 80030d6:	4620      	mov	r0, r4
 80030d8:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
    }
 80030da:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setHeight(height);
 80030de:	4718      	bx	r3

080030e0 <_ZN8touchgfx8Drawable4setXEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setX(int16_t x)
    {
        rect.x = x;
 80030e0:	8081      	strh	r1, [r0, #4]
    }
 80030e2:	4770      	bx	lr

080030e4 <_ZN8touchgfx8Drawable4setYEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setY(int16_t y)
    {
        rect.y = y;
 80030e4:	80c1      	strh	r1, [r0, #6]
    }
 80030e6:	4770      	bx	lr

080030e8 <_ZN8touchgfx8Drawable5setXYEss>:
     *
     * @see moveTo
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setXY(int16_t x, int16_t y)
 80030e8:	b570      	push	{r4, r5, r6, lr}
    {
        setX(x);
 80030ea:	6803      	ldr	r3, [r0, #0]
    virtual void setXY(int16_t x, int16_t y)
 80030ec:	4604      	mov	r4, r0
        setX(x);
 80030ee:	6adb      	ldr	r3, [r3, #44]	; 0x2c
    virtual void setXY(int16_t x, int16_t y)
 80030f0:	4615      	mov	r5, r2
        setX(x);
 80030f2:	4798      	blx	r3
        setY(y);
 80030f4:	6823      	ldr	r3, [r4, #0]
 80030f6:	4629      	mov	r1, r5
 80030f8:	4620      	mov	r0, r4
 80030fa:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    }
 80030fc:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setY(y);
 8003100:	4718      	bx	r3

08003102 <_ZN8touchgfx8Drawable8setWidthEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setWidth(int16_t width)
    {
        rect.width = width;
 8003102:	8101      	strh	r1, [r0, #8]
    }
 8003104:	4770      	bx	lr

08003106 <_ZN8touchgfx8Drawable9setHeightEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setHeight(int16_t height)
    {
        rect.height = height;
 8003106:	8141      	strh	r1, [r0, #10]
    }
 8003108:	4770      	bx	lr

0800310a <_ZN8touchgfx8Drawable20childGeometryChangedEv>:
     * one or more of its children has changed. Currently only used in ScrollableContainer
     * to redraw scrollbars when the size of the scrolling contents changes.
     */
    virtual void childGeometryChanged()
    {
    }
 800310a:	4770      	bx	lr

0800310c <_ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE>:
     *
     * @param  evt The ClickEvent received from the HAL.
     */
    virtual void handleClickEvent(const ClickEvent& evt)
    {
    }
 800310c:	4770      	bx	lr

0800310e <_ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE>:
     *
     * @param  evt The GestureEvent received from the HAL.
     */
    virtual void handleGestureEvent(const GestureEvent& evt)
    {
    }
 800310e:	4770      	bx	lr

08003110 <_ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE>:
     *
     * @param  evt The DragEvent received from the HAL.
     */
    virtual void handleDragEvent(const DragEvent& evt)
    {
    }
 8003110:	4770      	bx	lr

08003112 <_ZN8touchgfx8Drawable15handleTickEventEv>:
     *
     * @see Application::registerTimerWidget
     */
    virtual void handleTickEvent()
    {
    }
 8003112:	4770      	bx	lr

08003114 <_ZN8touchgfx8Drawable6moveToEss>:
     *
     * @note Will redraw the appropriate areas of the screen.
     */
    virtual void moveTo(int16_t x, int16_t y)
    {
        moveRelative(x - rect.x, y - rect.y);
 8003114:	88c3      	ldrh	r3, [r0, #6]
 8003116:	1ad2      	subs	r2, r2, r3
 8003118:	8883      	ldrh	r3, [r0, #4]
 800311a:	1ac9      	subs	r1, r1, r3
 800311c:	6803      	ldr	r3, [r0, #0]
    virtual void moveTo(int16_t x, int16_t y)
 800311e:	b410      	push	{r4}
        moveRelative(x - rect.x, y - rect.y);
 8003120:	6d5b      	ldr	r3, [r3, #84]	; 0x54
    }
 8003122:	f85d 4b04 	ldr.w	r4, [sp], #4
        moveRelative(x - rect.x, y - rect.y);
 8003126:	b212      	sxth	r2, r2
 8003128:	b209      	sxth	r1, r1
 800312a:	4718      	bx	r3

0800312c <_ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_>:
     * @note For TouchGFX internal use only.
     */
    void resetDrawChainCache()
    {
        // Resetting the cached indicators
        cachedVisibleRect.x = UNCACHED_INDICATOR;
 800312c:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8003130:	8183      	strh	r3, [r0, #12]
        cachedAbsX = UNCACHED_INDICATOR;
 8003132:	f04f 33ff 	mov.w	r3, #4294967295
 8003136:	6203      	str	r3, [r0, #32]
     * @note For TouchGFX internal use only.
     */
    virtual void setupDrawChain(const Rect& invalidatedArea, Drawable** nextPreviousElement)
    {
        resetDrawChainCache();
        nextDrawChainElement = *nextPreviousElement;
 8003138:	6813      	ldr	r3, [r2, #0]
 800313a:	61c3      	str	r3, [r0, #28]
        *nextPreviousElement = this;
 800313c:	6010      	str	r0, [r2, #0]
    }
 800313e:	4770      	bx	lr

08003140 <_ZN8touchgfx6Screen11setupScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void setupScreen()
    {
    }
 8003140:	4770      	bx	lr

08003142 <_ZN8touchgfx6Screen15afterTransitionEv>:
     *
     * @see Application::handleTickEvent
     */
    virtual void afterTransition()
    {
    }
 8003142:	4770      	bx	lr

08003144 <_ZN8touchgfx6Screen14tearDownScreenEv>:
     *
     * @see touchgfx::Application::switchScreen
     */
    virtual void tearDownScreen()
    {
    }
 8003144:	4770      	bx	lr

08003146 <_ZN8touchgfx6Screen15handleTickEventEv>:
     * Called by the Application on the current screen with a frequency of
     * Application::TICK_INTERVAL_MS.
     */
    virtual void handleTickEvent()
    {
    }
 8003146:	4770      	bx	lr

08003148 <_ZN8touchgfx6Screen14handleKeyEventEh>:
     *
     * @param  key The key to handle.
     */
    virtual void handleKeyEvent(uint8_t key)
    {
    }
 8003148:	4770      	bx	lr

0800314a <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE>:
     * @param       y    Not used since this Widget is the only "child".
     * @param [out] last Result, the address of the actual instance of the Widget.
     */
    virtual void getLastChild(int16_t x, int16_t y, Drawable** last)
    {
        if (isVisible() && isTouchable())
 800314a:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 800314e:	b11a      	cbz	r2, 8003158 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
 8003150:	f890 2024 	ldrb.w	r2, [r0, #36]	; 0x24
 8003154:	b102      	cbz	r2, 8003158 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
        {
            *last = this;
 8003156:	6018      	str	r0, [r3, #0]
        }
    }
 8003158:	4770      	bx	lr

0800315a <_ZN18mainScreenViewBaseD1Ev>:

class mainScreenViewBase : public touchgfx::View<mainScreenPresenter>
{
public:
    mainScreenViewBase();
    virtual ~mainScreenViewBase() {}
 800315a:	4770      	bx	lr

0800315c <_ZN18mainScreenViewBase24XAxisSliderValue_ChangedEi>:
     * Virtual Action Handlers
     */
    virtual void XAxisSliderValue_Changed(int value)
    {
        // Override and implement this function in mainScreen
    }
 800315c:	4770      	bx	lr

0800315e <_ZN18mainScreenViewBase24YAxisSliderValue_ChangedEi>:

    virtual void YAxisSliderValue_Changed(int value)
    {
        // Override and implement this function in mainScreen
    }
 800315e:	4770      	bx	lr

08003160 <_ZN18mainScreenViewBase38ManipulatorControlToggleButton_ClickedEv>:

    virtual void ManipulatorControlToggleButton_Clicked()
    {
        // Override and implement this function in mainScreen
    }
 8003160:	4770      	bx	lr

08003162 <_ZN18mainScreenViewBase11setupScreenEv>:
}

void mainScreenViewBase::setupScreen()
{

}
 8003162:	4770      	bx	lr

08003164 <_ZN8touchgfx8CallbackI18mainScreenViewBaseRKNS_6SliderEivED1Ev>:
struct Callback<dest_type, T1, T2, void> : public GenericCallback<T1, T2>
 8003164:	4770      	bx	lr

08003166 <_ZN8touchgfx8CallbackI18mainScreenViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8003166:	4770      	bx	lr

08003168 <_ZN8touchgfx8CallbackI18mainScreenViewBaseRKNS_6SliderEivE7executeES4_i>:
    virtual void execute(T1 t1, T2 t2)
 8003168:	b470      	push	{r4, r5, r6}
        (pobject->*pmemfun_2)(t1, t2);
 800316a:	68c6      	ldr	r6, [r0, #12]
 800316c:	6845      	ldr	r5, [r0, #4]
 800316e:	1074      	asrs	r4, r6, #1
    virtual void execute(T1 t1, T2 t2)
 8003170:	4603      	mov	r3, r0
        (pobject->*pmemfun_2)(t1, t2);
 8003172:	07f6      	lsls	r6, r6, #31
 8003174:	eb05 0004 	add.w	r0, r5, r4
 8003178:	689b      	ldr	r3, [r3, #8]
 800317a:	bf44      	itt	mi
 800317c:	592c      	ldrmi	r4, [r5, r4]
 800317e:	58e3      	ldrmi	r3, [r4, r3]
    }
 8003180:	bc70      	pop	{r4, r5, r6}
        (pobject->*pmemfun_2)(t1, t2);
 8003182:	4718      	bx	r3

08003184 <_ZNK8touchgfx8CallbackI18mainScreenViewBaseRKNS_6SliderEivE7isValidEv>:
        return (pobject != 0) && (pmemfun_2 != 0);
 8003184:	6843      	ldr	r3, [r0, #4]
 8003186:	b12b      	cbz	r3, 8003194 <_ZNK8touchgfx8CallbackI18mainScreenViewBaseRKNS_6SliderEivE7isValidEv+0x10>
 8003188:	6883      	ldr	r3, [r0, #8]
 800318a:	b92b      	cbnz	r3, 8003198 <_ZNK8touchgfx8CallbackI18mainScreenViewBaseRKNS_6SliderEivE7isValidEv+0x14>
 800318c:	68c0      	ldr	r0, [r0, #12]
 800318e:	f000 0001 	and.w	r0, r0, #1
 8003192:	4770      	bx	lr
 8003194:	4618      	mov	r0, r3
 8003196:	4770      	bx	lr
 8003198:	2001      	movs	r0, #1
    }
 800319a:	4770      	bx	lr

0800319c <_ZN8touchgfx8CallbackI18mainScreenViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 800319c:	b430      	push	{r4, r5}
        (pobject->*pmemfun_1)(t1);
 800319e:	68c5      	ldr	r5, [r0, #12]
 80031a0:	6844      	ldr	r4, [r0, #4]
 80031a2:	106a      	asrs	r2, r5, #1
    virtual void execute(T1 t1)
 80031a4:	4603      	mov	r3, r0
        (pobject->*pmemfun_1)(t1);
 80031a6:	07ed      	lsls	r5, r5, #31
 80031a8:	eb04 0002 	add.w	r0, r4, r2
 80031ac:	689b      	ldr	r3, [r3, #8]
 80031ae:	bf48      	it	mi
 80031b0:	58a2      	ldrmi	r2, [r4, r2]
    }
 80031b2:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun_1)(t1);
 80031b4:	bf48      	it	mi
 80031b6:	58d3      	ldrmi	r3, [r2, r3]
 80031b8:	4718      	bx	r3

080031ba <_ZNK8touchgfx8CallbackI18mainScreenViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun_1 != 0);
 80031ba:	6843      	ldr	r3, [r0, #4]
 80031bc:	b12b      	cbz	r3, 80031ca <_ZNK8touchgfx8CallbackI18mainScreenViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 80031be:	6883      	ldr	r3, [r0, #8]
 80031c0:	b92b      	cbnz	r3, 80031ce <_ZNK8touchgfx8CallbackI18mainScreenViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 80031c2:	68c0      	ldr	r0, [r0, #12]
 80031c4:	f000 0001 	and.w	r0, r0, #1
 80031c8:	4770      	bx	lr
 80031ca:	4618      	mov	r0, r3
 80031cc:	4770      	bx	lr
 80031ce:	2001      	movs	r0, #1
    }
 80031d0:	4770      	bx	lr

080031d2 <_ZN8touchgfx8CallbackI18mainScreenViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80031d2:	b510      	push	{r4, lr}
 80031d4:	2110      	movs	r1, #16
 80031d6:	4604      	mov	r4, r0
 80031d8:	f016 f8ec 	bl	80193b4 <_ZdlPvj>
 80031dc:	4620      	mov	r0, r4
 80031de:	bd10      	pop	{r4, pc}

080031e0 <_ZN8touchgfx8CallbackI18mainScreenViewBaseRKNS_6SliderEivED0Ev>:
struct Callback<dest_type, T1, T2, void> : public GenericCallback<T1, T2>
 80031e0:	b510      	push	{r4, lr}
 80031e2:	2110      	movs	r1, #16
 80031e4:	4604      	mov	r4, r0
 80031e6:	f016 f8e5 	bl	80193b4 <_ZdlPvj>
 80031ea:	4620      	mov	r0, r4
 80031ec:	bd10      	pop	{r4, pc}

080031ee <_ZN18mainScreenViewBaseD0Ev>:
    virtual ~mainScreenViewBase() {}
 80031ee:	b510      	push	{r4, lr}
 80031f0:	f44f 7159 	mov.w	r1, #868	; 0x364
 80031f4:	4604      	mov	r4, r0
 80031f6:	f016 f8dd 	bl	80193b4 <_ZdlPvj>
 80031fa:	4620      	mov	r0, r4
 80031fc:	bd10      	pop	{r4, pc}

080031fe <_ZN18mainScreenViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void mainScreenViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &manipulatorControlToggleButton)
 80031fe:	f100 029c 	add.w	r2, r0, #156	; 0x9c
 8003202:	428a      	cmp	r2, r1
 8003204:	d102      	bne.n	800320c <_ZN18mainScreenViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0xe>
    {
        //ManipulatorControlToggleButton_Clicked
        //When manipulatorControlToggleButton clicked call virtual function
        //Call ManipulatorControlToggleButton_Clicked
        ManipulatorControlToggleButton_Clicked();
 8003206:	6803      	ldr	r3, [r0, #0]
 8003208:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800320a:	4718      	bx	r3
    }
}
 800320c:	4770      	bx	lr

0800320e <_ZN18mainScreenViewBase33sliderValueChangedCallbackHandlerERKN8touchgfx6SliderEi>:

void mainScreenViewBase::sliderValueChangedCallbackHandler(const touchgfx::Slider& src, int value)
{
 800320e:	b410      	push	{r4}
    if (&src == &yAxisSlider)
 8003210:	f500 74a6 	add.w	r4, r0, #332	; 0x14c
 8003214:	42a1      	cmp	r1, r4
 8003216:	d105      	bne.n	8003224 <_ZN18mainScreenViewBase33sliderValueChangedCallbackHandlerERKN8touchgfx6SliderEi+0x16>
    {
        //YAxisSliderValue_Changed
        //When yAxisSlider value changed call virtual function
        //Call YAxisSliderValue_Changed
        YAxisSliderValue_Changed(value);
 8003218:	6803      	ldr	r3, [r0, #0]
 800321a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
        //XAxisSliderValue_Changed
        //When xAxisSlider value changed call virtual function
        //Call XAxisSliderValue_Changed
        XAxisSliderValue_Changed(value);
    }
}
 800321c:	f85d 4b04 	ldr.w	r4, [sp], #4
        XAxisSliderValue_Changed(value);
 8003220:	4611      	mov	r1, r2
 8003222:	4718      	bx	r3
    else if (&src == &xAxisSlider)
 8003224:	f500 7412 	add.w	r4, r0, #584	; 0x248
 8003228:	42a1      	cmp	r1, r4
 800322a:	d102      	bne.n	8003232 <_ZN18mainScreenViewBase33sliderValueChangedCallbackHandlerERKN8touchgfx6SliderEi+0x24>
        XAxisSliderValue_Changed(value);
 800322c:	6803      	ldr	r3, [r0, #0]
 800322e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8003230:	e7f4      	b.n	800321c <_ZN18mainScreenViewBase33sliderValueChangedCallbackHandlerERKN8touchgfx6SliderEi+0xe>
}
 8003232:	f85d 4b04 	ldr.w	r4, [sp], #4
 8003236:	4770      	bx	lr

08003238 <_ZN8touchgfx8DrawableC1Ev>:
          visible(true)
 8003238:	4a09      	ldr	r2, [pc, #36]	; (8003260 <_ZN8touchgfx8DrawableC1Ev+0x28>)
 800323a:	6002      	str	r2, [r0, #0]
     * @param  width  The width.
     * @param  height The height.
     */
    Rect(int16_t x, int16_t y, int16_t width, int16_t height)
    {
        this->x = x;
 800323c:	2200      	movs	r2, #0
 800323e:	8082      	strh	r2, [r0, #4]
        this->y = y;
 8003240:	80c2      	strh	r2, [r0, #6]
        this->width = width;
 8003242:	8102      	strh	r2, [r0, #8]
        this->height = height;
 8003244:	8142      	strh	r2, [r0, #10]
        this->x = 0;
 8003246:	8182      	strh	r2, [r0, #12]
        this->y = 0;
 8003248:	81c2      	strh	r2, [r0, #14]
        this->width = 0;
 800324a:	8202      	strh	r2, [r0, #16]
        this->height = 0;
 800324c:	8242      	strh	r2, [r0, #18]
 800324e:	e9c0 2205 	strd	r2, r2, [r0, #20]
 8003252:	61c2      	str	r2, [r0, #28]
 8003254:	f880 2024 	strb.w	r2, [r0, #36]	; 0x24
 8003258:	2201      	movs	r2, #1
 800325a:	f880 2025 	strb.w	r2, [r0, #37]	; 0x25
    }
 800325e:	4770      	bx	lr
 8003260:	0801c574 	.word	0x0801c574

08003264 <_ZN8touchgfx8TextAreaC1Ev>:
 *       the pointer remains valid when drawing.
 */
class TextArea : public Widget
{
public:
    TextArea()
 8003264:	b510      	push	{r4, lr}
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE)
 8003266:	2226      	movs	r2, #38	; 0x26
    TextArea()
 8003268:	4604      	mov	r4, r0
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE)
 800326a:	2100      	movs	r1, #0
 800326c:	f016 f957 	bl	801951e <memset>
class Widget : public Drawable
 8003270:	4620      	mov	r0, r4
 8003272:	f7ff ffe1 	bl	8003238 <_ZN8touchgfx8DrawableC1Ev>
 8003276:	4b09      	ldr	r3, [pc, #36]	; (800329c <_ZN8touchgfx8TextAreaC1Ev+0x38>)
 8003278:	6023      	str	r3, [r4, #0]
        : typedTextId(id)
 800327a:	4b09      	ldr	r3, [pc, #36]	; (80032a0 <_ZN8touchgfx8TextAreaC1Ev+0x3c>)
 800327c:	62a3      	str	r3, [r4, #40]	; 0x28
 800327e:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8003282:	85a3      	strh	r3, [r4, #44]	; 0x2c
        color = col;
 8003284:	f44f 027f 	mov.w	r2, #16711680	; 0xff0000
 8003288:	2300      	movs	r3, #0
 800328a:	e9c4 320c 	strd	r3, r2, [r4, #48]	; 0x30
 800328e:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38
 8003292:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
    {
    }
 8003296:	4620      	mov	r0, r4
 8003298:	bd10      	pop	{r4, pc}
 800329a:	bf00      	nop
 800329c:	0801c1e0 	.word	0x0801c1e0
 80032a0:	0801aa3c 	.word	0x0801aa3c

080032a4 <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh>:
     *
     * @note This function is not available to call before the LCD has been setup, because the
     *       color depth is required. Consider using the function getColorFromRGB for a
     *       specific class, e.g. LCD16::getColorFromRGB().
     */
    static colortype getColorFrom24BitRGB(uint8_t red, uint8_t green, uint8_t blue)
 80032a4:	4613      	mov	r3, r2
        return instance;
 80032a6:	4a0c      	ldr	r2, [pc, #48]	; (80032d8 <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh+0x34>)
 80032a8:	b570      	push	{r4, r5, r6, lr}
 80032aa:	6814      	ldr	r4, [r2, #0]
 80032ac:	4605      	mov	r5, r0
    {
        assert(HAL::getInstance() && "Cannot set color before HAL is initialized");
 80032ae:	b92c      	cbnz	r4, 80032bc <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh+0x18>
 80032b0:	4b0a      	ldr	r3, [pc, #40]	; (80032dc <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh+0x38>)
 80032b2:	4a0b      	ldr	r2, [pc, #44]	; (80032e0 <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh+0x3c>)
 80032b4:	480b      	ldr	r0, [pc, #44]	; (80032e4 <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh+0x40>)
 80032b6:	2135      	movs	r1, #53	; 0x35
 80032b8:	f016 f8a8 	bl	801940c <__assert_func>
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 80032bc:	f894 2076 	ldrb.w	r2, [r4, #118]	; 0x76
 80032c0:	b10a      	cbz	r2, 80032c6 <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh+0x22>
 80032c2:	6ce0      	ldr	r0, [r4, #76]	; 0x4c
 80032c4:	b900      	cbnz	r0, 80032c8 <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh+0x24>
            return instance->lcdRef;
 80032c6:	68a0      	ldr	r0, [r4, #8]
        return HAL::lcd().getColorFrom24BitRGB(red, green, blue);
 80032c8:	6802      	ldr	r2, [r0, #0]
 80032ca:	6a94      	ldr	r4, [r2, #40]	; 0x28
 80032cc:	460a      	mov	r2, r1
 80032ce:	46a4      	mov	ip, r4
 80032d0:	4629      	mov	r1, r5
    }
 80032d2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        return HAL::lcd().getColorFrom24BitRGB(red, green, blue);
 80032d6:	4760      	bx	ip
 80032d8:	20012188 	.word	0x20012188
 80032dc:	0801b05c 	.word	0x0801b05c
 80032e0:	0801b124 	.word	0x0801b124
 80032e4:	0801b09f 	.word	0x0801b09f

080032e8 <_ZN18mainScreenViewBaseC1Ev>:
mainScreenViewBase::mainScreenViewBase() :
 80032e8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80032ec:	4604      	mov	r4, r0
 80032ee:	b08b      	sub	sp, #44	; 0x2c
    sliderValueChangedCallback(this, &mainScreenViewBase::sliderValueChangedCallbackHandler)
 80032f0:	46a2      	mov	sl, r4
        : presenter(0)
 80032f2:	2500      	movs	r5, #0
 80032f4:	f009 fbf0 	bl	800cad8 <_ZN8touchgfx6ScreenC1Ev>
 80032f8:	4ba6      	ldr	r3, [pc, #664]	; (8003594 <_ZN18mainScreenViewBaseC1Ev+0x2ac>)
 80032fa:	63e5      	str	r5, [r4, #60]	; 0x3c
 80032fc:	f84a 3b40 	str.w	r3, [sl], #64
class Box : public Widget
{
public:
    /** Construct a new Box with a default alpha value of 255 (solid) */
    Box()
        : Widget(), alpha(255), color(0), reportAsSolid(false)
 8003300:	f04f 0b26 	mov.w	fp, #38	; 0x26
 8003304:	465a      	mov	r2, fp
 8003306:	4629      	mov	r1, r5
 8003308:	4650      	mov	r0, sl
 800330a:	f016 f908 	bl	801951e <memset>
 800330e:	4650      	mov	r0, sl
 8003310:	f7ff ff92 	bl	8003238 <_ZN8touchgfx8DrawableC1Ev>
     * array.
     *
     * @param  id (Optional) The unique bitmap identifier.
     */
    explicit Bitmap(const BitmapId id = BITMAP_INVALID)
        : bitmapId(id)
 8003314:	ae0a      	add	r6, sp, #40	; 0x28
 8003316:	f104 0970 	add.w	r9, r4, #112	; 0x70
 800331a:	4b9f      	ldr	r3, [pc, #636]	; (8003598 <_ZN18mainScreenViewBaseC1Ev+0x2b0>)
 800331c:	6423      	str	r3, [r4, #64]	; 0x40
 800331e:	f04f 08ff 	mov.w	r8, #255	; 0xff
 8003322:	f64f 77ff 	movw	r7, #65535	; 0xffff
     * @param  bmp (Optional) The bitmap to display.
     *
     * @see setBitmap
     */
    Image(const Bitmap& bmp = Bitmap())
        : Widget(), alpha(255)
 8003326:	465a      	mov	r2, fp
 8003328:	4629      	mov	r1, r5
 800332a:	f884 8066 	strb.w	r8, [r4, #102]	; 0x66
 800332e:	66a5      	str	r5, [r4, #104]	; 0x68
 8003330:	f884 506c 	strb.w	r5, [r4, #108]	; 0x6c
 8003334:	4648      	mov	r0, r9
 8003336:	f826 7d08 	strh.w	r7, [r6, #-8]!
 800333a:	f016 f8f0 	bl	801951e <memset>
 800333e:	4648      	mov	r0, r9
 8003340:	f7ff ff7a 	bl	8003238 <_ZN8touchgfx8DrawableC1Ev>
 8003344:	4b95      	ldr	r3, [pc, #596]	; (800359c <_ZN18mainScreenViewBaseC1Ev+0x2b4>)
 8003346:	6723      	str	r3, [r4, #112]	; 0x70
 8003348:	f8a4 7096 	strh.w	r7, [r4, #150]	; 0x96
 800334c:	f884 7098 	strb.w	r7, [r4, #152]	; 0x98
    {
        setBitmap(bmp);
 8003350:	4631      	mov	r1, r6
 8003352:	4648      	mov	r0, r9
 8003354:	f007 fb5d 	bl	800aa12 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8003358:	f104 039c 	add.w	r3, r4, #156	; 0x9c
class AbstractButton : public Widget
{
public:
    /** Sets this Widget touchable so the user can interact with buttons. */
    AbstractButton()
        : Widget(), action(), pressed(false)
 800335c:	465a      	mov	r2, fp
 800335e:	4629      	mov	r1, r5
 8003360:	4618      	mov	r0, r3
 8003362:	9302      	str	r3, [sp, #8]
 8003364:	f016 f8db 	bl	801951e <memset>
 8003368:	9802      	ldr	r0, [sp, #8]
 800336a:	f8df b248 	ldr.w	fp, [pc, #584]	; 80035b4 <_ZN18mainScreenViewBaseC1Ev+0x2cc>
 800336e:	f7ff ff63 	bl	8003238 <_ZN8touchgfx8DrawableC1Ev>
        touchable = touch;
 8003372:	f04f 0301 	mov.w	r3, #1
 8003376:	f884 30c0 	strb.w	r3, [r4, #192]	; 0xc0
 * A ToggleButton is a Button specialization that swaps the two bitmaps when clicked, such that
 * the previous "pressed" bitmap, now becomes the one displayed when button is not
 * pressed. This can by used to give the effect of a button that can be pressed in and
 * when it is subsequently pressed, it will pop back out.
 */
class ToggleButton : public Button
 800337a:	4b89      	ldr	r3, [pc, #548]	; (80035a0 <_ZN18mainScreenViewBaseC1Ev+0x2b8>)
 800337c:	f8c4 309c 	str.w	r3, [r4, #156]	; 0x9c
 8003380:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 8003384:	f8c4 50c4 	str.w	r5, [r4, #196]	; 0xc4
 8003388:	f884 50c8 	strb.w	r5, [r4, #200]	; 0xc8
 800338c:	f8a4 70ca 	strh.w	r7, [r4, #202]	; 0xca
 8003390:	f8a4 70cc 	strh.w	r7, [r4, #204]	; 0xcc
 */
class Button : public AbstractButton
{
public:
    Button()
        : AbstractButton(), up(), down(), alpha(255)
 8003394:	f884 80ce 	strb.w	r8, [r4, #206]	; 0xce
 8003398:	f8a4 70d0 	strh.w	r7, [r4, #208]	; 0xd0
 800339c:	4618      	mov	r0, r3
 800339e:	9303      	str	r3, [sp, #12]
 80033a0:	f7ff ff60 	bl	8003264 <_ZN8touchgfx8TextAreaC1Ev>
 80033a4:	f504 7388 	add.w	r3, r4, #272	; 0x110
 80033a8:	f504 78a6 	add.w	r8, r4, #332	; 0x14c
 80033ac:	4618      	mov	r0, r3
 80033ae:	f504 7712 	add.w	r7, r4, #584	; 0x248
 80033b2:	9304      	str	r3, [sp, #16]
 80033b4:	f7ff ff56 	bl	8003264 <_ZN8touchgfx8TextAreaC1Ev>
 80033b8:	4640      	mov	r0, r8
 80033ba:	f006 f8dd 	bl	8009578 <_ZN8touchgfx6SliderC1Ev>
 80033be:	4638      	mov	r0, r7
 80033c0:	f006 f8da 	bl	8009578 <_ZN8touchgfx6SliderC1Ev>
    {
 80033c4:	4b77      	ldr	r3, [pc, #476]	; (80035a4 <_ZN18mainScreenViewBaseC1Ev+0x2bc>)
 80033c6:	f8c4 3344 	str.w	r3, [r4, #836]	; 0x344
        this->pmemfun_1 = pmemfun_1;
 80033ca:	4b77      	ldr	r3, [pc, #476]	; (80035a8 <_ZN18mainScreenViewBaseC1Ev+0x2c0>)
 80033cc:	f8c4 334c 	str.w	r3, [r4, #844]	; 0x34c
    {
 80033d0:	4b76      	ldr	r3, [pc, #472]	; (80035ac <_ZN18mainScreenViewBaseC1Ev+0x2c4>)
 80033d2:	f8c4 3354 	str.w	r3, [r4, #852]	; 0x354
        this->pmemfun_2 = pmemfun_2;
 80033d6:	4b76      	ldr	r3, [pc, #472]	; (80035b0 <_ZN18mainScreenViewBaseC1Ev+0x2c8>)
 80033d8:	f8c4 335c 	str.w	r3, [r4, #860]	; 0x35c
    __background.setPosition(0, 0, 240, 320);
 80033dc:	f44f 73a0 	mov.w	r3, #320	; 0x140
        this->pmemfun_1 = pmemfun_1;
 80033e0:	f8c4 5350 	str.w	r5, [r4, #848]	; 0x350
        this->pmemfun_2 = pmemfun_2;
 80033e4:	f8c4 5360 	str.w	r5, [r4, #864]	; 0x360
 80033e8:	9300      	str	r3, [sp, #0]
 80033ea:	462a      	mov	r2, r5
 80033ec:	23f0      	movs	r3, #240	; 0xf0
 80033ee:	4629      	mov	r1, r5
 80033f0:	4650      	mov	r0, sl
        this->pobject = pobject;
 80033f2:	f8c4 4348 	str.w	r4, [r4, #840]	; 0x348
        this->pobject = pobject;
 80033f6:	f8c4 4358 	str.w	r4, [r4, #856]	; 0x358
 80033fa:	f7ff fe5d 	bl	80030b8 <_ZN8touchgfx8Drawable11setPositionEssss>
    __background.setColor(touchgfx::Color::getColorFrom24BitRGB(0, 0, 0));
 80033fe:	462a      	mov	r2, r5
 8003400:	4629      	mov	r1, r5
 8003402:	4628      	mov	r0, r5
 8003404:	f7ff ff4e 	bl	80032a4 <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh>
    backgroundImage.setXY(0, 0);
 8003408:	462a      	mov	r2, r5
     *
     * @see getColor, Color::getColorFrom24BitRGB
     */
    void setColor(colortype color)
    {
        this->color = color;
 800340a:	66a0      	str	r0, [r4, #104]	; 0x68
 800340c:	4629      	mov	r1, r5
 800340e:	4648      	mov	r0, r9
 8003410:	f7ff fe6a 	bl	80030e8 <_ZN8touchgfx8Drawable5setXYEss>
    backgroundImage.setBitmap(touchgfx::Bitmap(BITMAP_BLUE_BACKGROUNDS_MAIN_BG_PORTRAIT_240X320PX_ID));
 8003414:	4631      	mov	r1, r6
 8003416:	4648      	mov	r0, r9
 8003418:	f8ad 5020 	strh.w	r5, [sp, #32]
 800341c:	f007 faf9 	bl	800aa12 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    manipulatorControlToggleButton.setXY(95, 157);
 8003420:	9802      	ldr	r0, [sp, #8]
 8003422:	229d      	movs	r2, #157	; 0x9d
 8003424:	215f      	movs	r1, #95	; 0x5f
 8003426:	f7ff fe5f 	bl	80030e8 <_ZN8touchgfx8Drawable5setXYEss>
 800342a:	2305      	movs	r3, #5
 800342c:	f8ad 301c 	strh.w	r3, [sp, #28]
 8003430:	2306      	movs	r3, #6
{
public:

    virtual void setBitmaps(const Bitmap& bmpReleased, const Bitmap& bmpPressed)
    {
        originalPressed = bmpPressed;
 8003432:	f8a4 30d0 	strh.w	r3, [r4, #208]	; 0xd0
        Button::setBitmaps(bmpReleased, bmpPressed);
 8003436:	4632      	mov	r2, r6
 8003438:	a907      	add	r1, sp, #28
 800343a:	9802      	ldr	r0, [sp, #8]
 800343c:	f8ad 3020 	strh.w	r3, [sp, #32]
 8003440:	f007 fa30 	bl	800a8a4 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
    manipulatorControlToggleButton.setAction(buttonCallback);
 8003444:	f504 7351 	add.w	r3, r4, #836	; 0x344
     *
     * @see GenericCallback, handleClickEvent, ClickEvent
     */
    void setAction(GenericCallback<const AbstractButton&>& callback)
    {
        action = &callback;
 8003448:	f8c4 30c4 	str.w	r3, [r4, #196]	; 0xc4
    titleText.setXY(23, 15);
 800344c:	9803      	ldr	r0, [sp, #12]
 800344e:	220f      	movs	r2, #15
 8003450:	2117      	movs	r1, #23
 8003452:	f7ff fe49 	bl	80030e8 <_ZN8touchgfx8Drawable5setXYEss>
    titleText.setColor(touchgfx::Color::getColorFrom24BitRGB(0, 0, 0));
 8003456:	462a      	mov	r2, r5
 8003458:	4629      	mov	r1, r5
 800345a:	4628      	mov	r0, r5
 800345c:	f7ff ff22 	bl	80032a4 <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh>
     *
     * @see getLinespacing
     */
    FORCE_INLINE_FUNCTION void setLinespacing(int16_t space)
    {
        linespace = space;
 8003460:	f8a4 5108 	strh.w	r5, [r4, #264]	; 0x108
        this->color = color;
 8003464:	f8c4 0104 	str.w	r0, [r4, #260]	; 0x104
    titleText.setTypedText(touchgfx::TypedText(T_SINGLEUSEID1));
 8003468:	4631      	mov	r1, r6
 800346a:	9803      	ldr	r0, [sp, #12]
 800346c:	f8cd b020 	str.w	fp, [sp, #32]
 8003470:	f8ad 5024 	strh.w	r5, [sp, #36]	; 0x24
 8003474:	f007 f9d4 	bl	800a820 <_ZN8touchgfx8TextArea12setTypedTextENS_9TypedTextE>
    manipulatorText.setXY(100, 101);
 8003478:	9804      	ldr	r0, [sp, #16]
 800347a:	2265      	movs	r2, #101	; 0x65
 800347c:	2164      	movs	r1, #100	; 0x64
 800347e:	f7ff fe33 	bl	80030e8 <_ZN8touchgfx8Drawable5setXYEss>
    manipulatorText.setColor(touchgfx::Color::getColorFrom24BitRGB(0, 0, 0));
 8003482:	462a      	mov	r2, r5
 8003484:	4629      	mov	r1, r5
 8003486:	4628      	mov	r0, r5
 8003488:	f7ff ff0c 	bl	80032a4 <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh>
 800348c:	f04f 0301 	mov.w	r3, #1
 8003490:	f8c4 0140 	str.w	r0, [r4, #320]	; 0x140
        linespace = space;
 8003494:	f8a4 5144 	strh.w	r5, [r4, #324]	; 0x144
    manipulatorText.setTypedText(touchgfx::TypedText(T_SINGLEUSEID2));
 8003498:	4631      	mov	r1, r6
 800349a:	9804      	ldr	r0, [sp, #16]
 800349c:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 80034a0:	f8cd b020 	str.w	fp, [sp, #32]
 80034a4:	f007 f9bc 	bl	800a820 <_ZN8touchgfx8TextArea12setTypedTextENS_9TypedTextE>
    yAxisSlider.setXY(23, 71);
 80034a8:	4640      	mov	r0, r8
 80034aa:	2247      	movs	r2, #71	; 0x47
 80034ac:	2117      	movs	r1, #23
 80034ae:	f7ff fe1b 	bl	80030e8 <_ZN8touchgfx8Drawable5setXYEss>
 80034b2:	2304      	movs	r3, #4
 80034b4:	f04f 0b03 	mov.w	fp, #3
 80034b8:	f8ad 3018 	strh.w	r3, [sp, #24]
 80034bc:	f8ad 301c 	strh.w	r3, [sp, #28]
    yAxisSlider.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_SLIDER_VERTICAL_SMALL_SLIDER3_VERTICAL_ROUND_BACK_ID), touchgfx::Bitmap(BITMAP_BLUE_SLIDER_VERTICAL_SMALL_SLIDER3_VERTICAL_ROUND_BACK_ID), touchgfx::Bitmap(BITMAP_BLUE_SLIDER_VERTICAL_SMALL_INDICATORS_SLIDER3_VERTICAL_ROUND_NOB_ID));
 80034c0:	aa07      	add	r2, sp, #28
 80034c2:	4633      	mov	r3, r6
 80034c4:	a906      	add	r1, sp, #24
 80034c6:	4640      	mov	r0, r8
 80034c8:	f8ad b020 	strh.w	fp, [sp, #32]
 80034cc:	f006 f8a8 	bl	8009620 <_ZN8touchgfx6Slider10setBitmapsERKNS_6BitmapES3_S3_>
    yAxisSlider.setupVerticalSlider(7, 3, 0, 0, 125);
 80034d0:	227d      	movs	r2, #125	; 0x7d
 80034d2:	462b      	mov	r3, r5
 80034d4:	e9cd 5200 	strd	r5, r2, [sp]
 80034d8:	4640      	mov	r0, r8
 80034da:	465a      	mov	r2, fp
 80034dc:	2107      	movs	r1, #7
 80034de:	f005 ff45 	bl	800936c <_ZN8touchgfx6Slider19setupVerticalSliderEttttt>
    yAxisSlider.setValueRange(0, 100);
 80034e2:	2264      	movs	r2, #100	; 0x64
 80034e4:	4629      	mov	r1, r5
 80034e6:	4640      	mov	r0, r8
 80034e8:	f005 fe3f 	bl	800916a <_ZN8touchgfx6Slider13setValueRangeEii>
    yAxisSlider.setValue(50);
 80034ec:	4640      	mov	r0, r8
 80034ee:	2132      	movs	r1, #50	; 0x32
 80034f0:	f005 fdc7 	bl	8009082 <_ZN8touchgfx6Slider8setValueEi>
    yAxisSlider.setNewValueCallback(sliderValueChangedCallback);
 80034f4:	f504 7255 	add.w	r2, r4, #852	; 0x354
 80034f8:	9205      	str	r2, [sp, #20]
     *
     * @see GenericCallback
     */
    void setNewValueCallback(GenericCallback<const Slider&, int>& callback)
    {
        newValueCallback = &callback;
 80034fa:	f8c4 2244 	str.w	r2, [r4, #580]	; 0x244
    xAxisSlider.setXY(31, 266);
 80034fe:	4638      	mov	r0, r7
 8003500:	f44f 7285 	mov.w	r2, #266	; 0x10a
 8003504:	211f      	movs	r1, #31
 8003506:	f7ff fdef 	bl	80030e8 <_ZN8touchgfx8Drawable5setXYEss>
 800350a:	2302      	movs	r3, #2
 800350c:	f8ad 3018 	strh.w	r3, [sp, #24]
 8003510:	f8ad 301c 	strh.w	r3, [sp, #28]
 8003514:	f04f 0301 	mov.w	r3, #1
 8003518:	f8ad 3020 	strh.w	r3, [sp, #32]
    xAxisSlider.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_SLIDER_HORIZONTAL_SMALL_SLIDER_HORIZONTAL_SMALL_ROUND_BACK_ID), touchgfx::Bitmap(BITMAP_BLUE_SLIDER_HORIZONTAL_SMALL_SLIDER_HORIZONTAL_SMALL_ROUND_BACK_ID), touchgfx::Bitmap(BITMAP_BLUE_SLIDER_HORIZONTAL_SMALL_INDICATORS_SLIDER_HORIZONTAL_SMALL_ROUND_KNOB_ID));
 800351c:	aa07      	add	r2, sp, #28
 800351e:	4633      	mov	r3, r6
 8003520:	a906      	add	r1, sp, #24
 8003522:	4638      	mov	r0, r7
 8003524:	f006 f87c 	bl	8009620 <_ZN8touchgfx6Slider10setBitmapsERKNS_6BitmapES3_S3_>
    xAxisSlider.setupHorizontalSlider(3, 7, 0, 0, 125);
 8003528:	237d      	movs	r3, #125	; 0x7d
 800352a:	e9cd 5300 	strd	r5, r3, [sp]
 800352e:	4659      	mov	r1, fp
 8003530:	462b      	mov	r3, r5
 8003532:	4638      	mov	r0, r7
 8003534:	2207      	movs	r2, #7
 8003536:	f005 feb5 	bl	80092a4 <_ZN8touchgfx6Slider21setupHorizontalSliderEttttt>
    xAxisSlider.setValueRange(0, 100);
 800353a:	2264      	movs	r2, #100	; 0x64
 800353c:	4629      	mov	r1, r5
 800353e:	4638      	mov	r0, r7
 8003540:	f005 fe13 	bl	800916a <_ZN8touchgfx6Slider13setValueRangeEii>
    xAxisSlider.setValue(50);
 8003544:	4638      	mov	r0, r7
 8003546:	2132      	movs	r1, #50	; 0x32
     * @note Must not be called with a Drawable that was already added to the screen. If in doubt,
     *       call remove() first.
     */
    void add(Drawable& d)
    {
        container.add(d);
 8003548:	1d25      	adds	r5, r4, #4
 800354a:	f005 fd9a 	bl	8009082 <_ZN8touchgfx6Slider8setValueEi>
 800354e:	9b05      	ldr	r3, [sp, #20]
 8003550:	f8c4 3340 	str.w	r3, [r4, #832]	; 0x340
 8003554:	4651      	mov	r1, sl
 8003556:	4628      	mov	r0, r5
 8003558:	f005 fc54 	bl	8008e04 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800355c:	4649      	mov	r1, r9
 800355e:	4628      	mov	r0, r5
 8003560:	f005 fc50 	bl	8008e04 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8003564:	9902      	ldr	r1, [sp, #8]
 8003566:	4628      	mov	r0, r5
 8003568:	f005 fc4c 	bl	8008e04 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800356c:	9903      	ldr	r1, [sp, #12]
 800356e:	4628      	mov	r0, r5
 8003570:	f005 fc48 	bl	8008e04 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8003574:	9904      	ldr	r1, [sp, #16]
 8003576:	4628      	mov	r0, r5
 8003578:	f005 fc44 	bl	8008e04 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800357c:	4641      	mov	r1, r8
 800357e:	4628      	mov	r0, r5
 8003580:	f005 fc40 	bl	8008e04 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8003584:	4628      	mov	r0, r5
 8003586:	4639      	mov	r1, r7
 8003588:	f005 fc3c 	bl	8008e04 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 800358c:	4620      	mov	r0, r4
 800358e:	b00b      	add	sp, #44	; 0x2c
 8003590:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003594:	0801b0ec 	.word	0x0801b0ec
 8003598:	0801c28c 	.word	0x0801c28c
 800359c:	0801c38c 	.word	0x0801c38c
 80035a0:	0801c0b0 	.word	0x0801c0b0
 80035a4:	0801b034 	.word	0x0801b034
 80035a8:	080031ff 	.word	0x080031ff
 80035ac:	0801b04c 	.word	0x0801b04c
 80035b0:	0800320f 	.word	0x0800320f
 80035b4:	0801aa3c 	.word	0x0801aa3c

080035b8 <_ZN19FrontendApplicationD1Ev>:

class FrontendApplication : public FrontendApplicationBase
{
public:
    FrontendApplication(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplication() { }
 80035b8:	4770      	bx	lr

080035ba <_ZN19FrontendApplicationD0Ev>:
 80035ba:	b510      	push	{r4, lr}
 80035bc:	f44f 71ac 	mov.w	r1, #344	; 0x158
 80035c0:	4604      	mov	r4, r0
 80035c2:	f015 fef7 	bl	80193b4 <_ZdlPvj>
 80035c6:	4620      	mov	r0, r4
 80035c8:	bd10      	pop	{r4, pc}

080035ca <_ZN19FrontendApplication15handleTickEventEv>:

    virtual void handleTickEvent()
 80035ca:	b510      	push	{r4, lr}
 80035cc:	4604      	mov	r4, r0
    {
        model.tick();
 80035ce:	f8d0 0154 	ldr.w	r0, [r0, #340]	; 0x154
 80035d2:	f000 f812 	bl	80035fa <_ZN5Model4tickEv>
        FrontendApplicationBase::handleTickEvent();
 80035d6:	4620      	mov	r0, r4
    }
 80035d8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        FrontendApplicationBase::handleTickEvent();
 80035dc:	f008 b94a 	b.w	800b874 <_ZN8touchgfx11Application15handleTickEventEv>

080035e0 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>:
#include <gui/common/FrontendApplication.hpp>

FrontendApplication::FrontendApplication(Model& m, FrontendHeap& heap)
 80035e0:	b510      	push	{r4, lr}
 80035e2:	4604      	mov	r4, r0
    : FrontendApplicationBase(m, heap)
 80035e4:	f7ff fa9a 	bl	8002b1c <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>
 80035e8:	4b01      	ldr	r3, [pc, #4]	; (80035f0 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap+0x10>)
 80035ea:	6023      	str	r3, [r4, #0]
{

}
 80035ec:	4620      	mov	r0, r4
 80035ee:	bd10      	pop	{r4, pc}
 80035f0:	0801b188 	.word	0x0801b188

080035f4 <_ZN5ModelC1Ev>:
#include <gui/model/Model.hpp>
#include <gui/model/ModelListener.hpp>

Model::Model() : modelListener(0)
 80035f4:	2200      	movs	r2, #0
 80035f6:	6002      	str	r2, [r0, #0]
{

}
 80035f8:	4770      	bx	lr

080035fa <_ZN5Model4tickEv>:

void Model::tick()
{

}
 80035fa:	4770      	bx	lr

080035fc <_ZN19mainScreenPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~mainScreenPresenter() {};
 80035fc:	4770      	bx	lr

080035fe <_ZThn4_N19mainScreenPresenterD1Ev>:
 80035fe:	3804      	subs	r0, #4
 8003600:	4770      	bx	lr

08003602 <_ZN19mainScreenPresenter10deactivateEv>:
}

void mainScreenPresenter::activate()
{

}
 8003602:	4770      	bx	lr

08003604 <_ZN19mainScreenPresenterD0Ev>:
 8003604:	b510      	push	{r4, lr}
 8003606:	2110      	movs	r1, #16
 8003608:	4604      	mov	r4, r0
 800360a:	f015 fed3 	bl	80193b4 <_ZdlPvj>
 800360e:	4620      	mov	r0, r4
 8003610:	bd10      	pop	{r4, pc}

08003612 <_ZThn4_N19mainScreenPresenterD0Ev>:
 8003612:	f1a0 0004 	sub.w	r0, r0, #4
 8003616:	e7f5      	b.n	8003604 <_ZN19mainScreenPresenterD0Ev>

08003618 <_ZN19mainScreenPresenterC1ER14mainScreenView>:
mainScreenPresenter::mainScreenPresenter(mainScreenView& v)
 8003618:	b510      	push	{r4, lr}
    ModelListener() : model(0) {}
 800361a:	2200      	movs	r2, #0
 800361c:	6082      	str	r2, [r0, #8]
    : view(v)
 800361e:	4a04      	ldr	r2, [pc, #16]	; (8003630 <_ZN19mainScreenPresenterC1ER14mainScreenView+0x18>)
 8003620:	60c1      	str	r1, [r0, #12]
 8003622:	f102 0408 	add.w	r4, r2, #8
 8003626:	3220      	adds	r2, #32
 8003628:	6004      	str	r4, [r0, #0]
 800362a:	6042      	str	r2, [r0, #4]
}
 800362c:	bd10      	pop	{r4, pc}
 800362e:	bf00      	nop
 8003630:	0801b1c4 	.word	0x0801b1c4

08003634 <_ZN14mainScreenViewD1Ev>:

class mainScreenView : public mainScreenViewBase
{
public:
    mainScreenView();
    virtual ~mainScreenView() {}
 8003634:	4770      	bx	lr

08003636 <_ZN14mainScreenView14tearDownScreenEv>:
}

void mainScreenView::tearDownScreen()
{
    mainScreenViewBase::tearDownScreen();
}
 8003636:	4770      	bx	lr

08003638 <_ZN14mainScreenView24XAxisSliderValue_ChangedEi>:

void mainScreenView::XAxisSliderValue_Changed(int value)
{
	xAxisPWMDuty = 275 + 9 * value;
 8003638:	eb01 01c1 	add.w	r1, r1, r1, lsl #3
 800363c:	4b02      	ldr	r3, [pc, #8]	; (8003648 <_ZN14mainScreenView24XAxisSliderValue_ChangedEi+0x10>)
 800363e:	f201 1113 	addw	r1, r1, #275	; 0x113
 8003642:	6019      	str	r1, [r3, #0]
}
 8003644:	4770      	bx	lr
 8003646:	bf00      	nop
 8003648:	20000018 	.word	0x20000018
 800364c:	00000000 	.word	0x00000000

08003650 <_ZN14mainScreenView24YAxisSliderValue_ChangedEi>:

void mainScreenView::YAxisSliderValue_Changed(int value)
{
	yAxisPWMDuty_L = (int) (842.0 + 3.42 * (float)value);
 8003650:	ee07 1a90 	vmov	s15, r1
 8003654:	eef8 7ae7 	vcvt.f32.s32	s15, s15
{
 8003658:	b508      	push	{r3, lr}
	yAxisPWMDuty_L = (int) (842.0 + 3.42 * (float)value);
 800365a:	ee17 0a90 	vmov	r0, s15
 800365e:	f7fc ff7b 	bl	8000558 <__aeabi_f2d>
 8003662:	a30c      	add	r3, pc, #48	; (adr r3, 8003694 <_ZN14mainScreenView24YAxisSliderValue_ChangedEi+0x44>)
 8003664:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003668:	f7fc ffce 	bl	8000608 <__aeabi_dmul>
 800366c:	4b06      	ldr	r3, [pc, #24]	; (8003688 <_ZN14mainScreenView24YAxisSliderValue_ChangedEi+0x38>)
 800366e:	2200      	movs	r2, #0
 8003670:	f7fc fe14 	bl	800029c <__adddf3>
 8003674:	f7fd f9da 	bl	8000a2c <__aeabi_d2iz>
 8003678:	4b04      	ldr	r3, [pc, #16]	; (800368c <_ZN14mainScreenView24YAxisSliderValue_ChangedEi+0x3c>)
 800367a:	6018      	str	r0, [r3, #0]
	yAxisPWMDuty_R = (int) (842.0 + 3.42 * (float)value);
 800367c:	4b04      	ldr	r3, [pc, #16]	; (8003690 <_ZN14mainScreenView24YAxisSliderValue_ChangedEi+0x40>)
 800367e:	6018      	str	r0, [r3, #0]
}
 8003680:	bd08      	pop	{r3, pc}
 8003682:	bf00      	nop
 8003684:	f3af 8000 	nop.w
 8003688:	408a5000 	.word	0x408a5000
 800368c:	2000001c 	.word	0x2000001c
 8003690:	20000020 	.word	0x20000020
 8003694:	f5c28f5c 	.word	0xf5c28f5c
 8003698:	400b5c28 	.word	0x400b5c28

0800369c <_ZN14mainScreenView38ManipulatorControlToggleButton_ClickedEv>:

void mainScreenView::ManipulatorControlToggleButton_Clicked()
{
	static bool state = false;

	if (state)
 800369c:	4b07      	ldr	r3, [pc, #28]	; (80036bc <_ZN14mainScreenView38ManipulatorControlToggleButton_ClickedEv+0x20>)
 800369e:	4a08      	ldr	r2, [pc, #32]	; (80036c0 <_ZN14mainScreenView38ManipulatorControlToggleButton_ClickedEv+0x24>)
 80036a0:	7819      	ldrb	r1, [r3, #0]
 80036a2:	b129      	cbz	r1, 80036b0 <_ZN14mainScreenView38ManipulatorControlToggleButton_ClickedEv+0x14>
	{
		manipulatorPWMDuty = 275;
 80036a4:	f240 1113 	movw	r1, #275	; 0x113
 80036a8:	6011      	str	r1, [r2, #0]
		state = false;
 80036aa:	2200      	movs	r2, #0
	}
	else
	{
		manipulatorPWMDuty = 700;
		state = true;
 80036ac:	701a      	strb	r2, [r3, #0]
	}
}
 80036ae:	4770      	bx	lr
		manipulatorPWMDuty = 700;
 80036b0:	f44f 712f 	mov.w	r1, #700	; 0x2bc
 80036b4:	6011      	str	r1, [r2, #0]
		state = true;
 80036b6:	2201      	movs	r2, #1
 80036b8:	e7f8      	b.n	80036ac <_ZN14mainScreenView38ManipulatorControlToggleButton_ClickedEv+0x10>
 80036ba:	bf00      	nop
 80036bc:	2000146c 	.word	0x2000146c
 80036c0:	20000014 	.word	0x20000014

080036c4 <_ZN14mainScreenView11setupScreenEv>:
    mainScreenViewBase::setupScreen();
 80036c4:	f7ff bd4d 	b.w	8003162 <_ZN18mainScreenViewBase11setupScreenEv>

080036c8 <_ZN14mainScreenViewD0Ev>:
 80036c8:	b510      	push	{r4, lr}
 80036ca:	f44f 7159 	mov.w	r1, #868	; 0x364
 80036ce:	4604      	mov	r4, r0
 80036d0:	f015 fe70 	bl	80193b4 <_ZdlPvj>
 80036d4:	4620      	mov	r0, r4
 80036d6:	bd10      	pop	{r4, pc}

080036d8 <_ZN14mainScreenViewC1Ev>:
mainScreenView::mainScreenView()
 80036d8:	b510      	push	{r4, lr}
 80036da:	4604      	mov	r4, r0
 80036dc:	f7ff fe04 	bl	80032e8 <_ZN18mainScreenViewBaseC1Ev>
 80036e0:	4b0d      	ldr	r3, [pc, #52]	; (8003718 <_ZN14mainScreenViewC1Ev+0x40>)
 80036e2:	6023      	str	r3, [r4, #0]
	HAL_TIM_PWM_Start_DMA(&htim2, TIM_CHANNEL_4, &xAxisPWMDuty, 1);
 80036e4:	4a0d      	ldr	r2, [pc, #52]	; (800371c <_ZN14mainScreenViewC1Ev+0x44>)
 80036e6:	480e      	ldr	r0, [pc, #56]	; (8003720 <_ZN14mainScreenViewC1Ev+0x48>)
 80036e8:	2301      	movs	r3, #1
 80036ea:	210c      	movs	r1, #12
 80036ec:	f003 f850 	bl	8006790 <HAL_TIM_PWM_Start_DMA>
	HAL_TIM_PWM_Start_DMA(&htim3, TIM_CHANNEL_2, &yAxisPWMDuty_L, 1);
 80036f0:	2301      	movs	r3, #1
 80036f2:	4a0c      	ldr	r2, [pc, #48]	; (8003724 <_ZN14mainScreenViewC1Ev+0x4c>)
 80036f4:	480c      	ldr	r0, [pc, #48]	; (8003728 <_ZN14mainScreenViewC1Ev+0x50>)
 80036f6:	2104      	movs	r1, #4
 80036f8:	f003 f84a 	bl	8006790 <HAL_TIM_PWM_Start_DMA>
	HAL_TIM_PWM_Start_DMA(&htim4, TIM_CHANNEL_1, &yAxisPWMDuty_R, 1);
 80036fc:	2301      	movs	r3, #1
 80036fe:	4a0b      	ldr	r2, [pc, #44]	; (800372c <_ZN14mainScreenViewC1Ev+0x54>)
 8003700:	480b      	ldr	r0, [pc, #44]	; (8003730 <_ZN14mainScreenViewC1Ev+0x58>)
 8003702:	2100      	movs	r1, #0
 8003704:	f003 f844 	bl	8006790 <HAL_TIM_PWM_Start_DMA>
	HAL_TIM_PWM_Start_DMA(&htim5, TIM_CHANNEL_1, &manipulatorPWMDuty, 1);
 8003708:	2301      	movs	r3, #1
 800370a:	4a0a      	ldr	r2, [pc, #40]	; (8003734 <_ZN14mainScreenViewC1Ev+0x5c>)
 800370c:	480a      	ldr	r0, [pc, #40]	; (8003738 <_ZN14mainScreenViewC1Ev+0x60>)
 800370e:	2100      	movs	r1, #0
 8003710:	f003 f83e 	bl	8006790 <HAL_TIM_PWM_Start_DMA>
}
 8003714:	4620      	mov	r0, r4
 8003716:	bd10      	pop	{r4, pc}
 8003718:	0801b1f4 	.word	0x0801b1f4
 800371c:	20000018 	.word	0x20000018
 8003720:	20012824 	.word	0x20012824
 8003724:	2000001c 	.word	0x2000001c
 8003728:	20012638 	.word	0x20012638
 800372c:	20000020 	.word	0x20000020
 8003730:	20012550 	.word	0x20012550
 8003734:	20000014 	.word	0x20000014
 8003738:	200125f8 	.word	0x200125f8

0800373c <ili9341_GetLcdPixelWidth>:
  */
uint16_t ili9341_GetLcdPixelWidth(void)
{
  /* Return LCD PIXEL WIDTH */
  return ILI9341_LCD_PIXEL_WIDTH;
}
 800373c:	20f0      	movs	r0, #240	; 0xf0
 800373e:	4770      	bx	lr

08003740 <ili9341_GetLcdPixelHeight>:
  */
uint16_t ili9341_GetLcdPixelHeight(void)
{
  /* Return LCD PIXEL HEIGHT */
  return ILI9341_LCD_PIXEL_HEIGHT;
}
 8003740:	f44f 70a0 	mov.w	r0, #320	; 0x140
 8003744:	4770      	bx	lr

08003746 <ili9341_DisplayOn>:
  LCD_IO_WriteReg(LCD_Reg);
 8003746:	2029      	movs	r0, #41	; 0x29
 8003748:	f7fe bcca 	b.w	80020e0 <LCD_IO_WriteReg>

0800374c <ili9341_DisplayOff>:
 800374c:	2028      	movs	r0, #40	; 0x28
 800374e:	f7fe bcc7 	b.w	80020e0 <LCD_IO_WriteReg>

08003752 <ili9341_Init>:
{
 8003752:	b508      	push	{r3, lr}
  LCD_IO_Init();
 8003754:	f7fe fc98 	bl	8002088 <LCD_IO_Init>
  LCD_IO_WriteReg(LCD_Reg);
 8003758:	20ca      	movs	r0, #202	; 0xca
 800375a:	f7fe fcc1 	bl	80020e0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800375e:	20c3      	movs	r0, #195	; 0xc3
 8003760:	f7fe fca2 	bl	80020a8 <LCD_IO_WriteData>
 8003764:	2008      	movs	r0, #8
 8003766:	f7fe fc9f 	bl	80020a8 <LCD_IO_WriteData>
 800376a:	2050      	movs	r0, #80	; 0x50
 800376c:	f7fe fc9c 	bl	80020a8 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8003770:	20cf      	movs	r0, #207	; 0xcf
 8003772:	f7fe fcb5 	bl	80020e0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8003776:	2000      	movs	r0, #0
 8003778:	f7fe fc96 	bl	80020a8 <LCD_IO_WriteData>
 800377c:	20c1      	movs	r0, #193	; 0xc1
 800377e:	f7fe fc93 	bl	80020a8 <LCD_IO_WriteData>
 8003782:	2030      	movs	r0, #48	; 0x30
 8003784:	f7fe fc90 	bl	80020a8 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8003788:	20ed      	movs	r0, #237	; 0xed
 800378a:	f7fe fca9 	bl	80020e0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800378e:	2064      	movs	r0, #100	; 0x64
 8003790:	f7fe fc8a 	bl	80020a8 <LCD_IO_WriteData>
 8003794:	2003      	movs	r0, #3
 8003796:	f7fe fc87 	bl	80020a8 <LCD_IO_WriteData>
 800379a:	2012      	movs	r0, #18
 800379c:	f7fe fc84 	bl	80020a8 <LCD_IO_WriteData>
 80037a0:	2081      	movs	r0, #129	; 0x81
 80037a2:	f7fe fc81 	bl	80020a8 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80037a6:	20e8      	movs	r0, #232	; 0xe8
 80037a8:	f7fe fc9a 	bl	80020e0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80037ac:	2085      	movs	r0, #133	; 0x85
 80037ae:	f7fe fc7b 	bl	80020a8 <LCD_IO_WriteData>
 80037b2:	2000      	movs	r0, #0
 80037b4:	f7fe fc78 	bl	80020a8 <LCD_IO_WriteData>
 80037b8:	2078      	movs	r0, #120	; 0x78
 80037ba:	f7fe fc75 	bl	80020a8 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80037be:	20cb      	movs	r0, #203	; 0xcb
 80037c0:	f7fe fc8e 	bl	80020e0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80037c4:	2039      	movs	r0, #57	; 0x39
 80037c6:	f7fe fc6f 	bl	80020a8 <LCD_IO_WriteData>
 80037ca:	202c      	movs	r0, #44	; 0x2c
 80037cc:	f7fe fc6c 	bl	80020a8 <LCD_IO_WriteData>
 80037d0:	2000      	movs	r0, #0
 80037d2:	f7fe fc69 	bl	80020a8 <LCD_IO_WriteData>
 80037d6:	2034      	movs	r0, #52	; 0x34
 80037d8:	f7fe fc66 	bl	80020a8 <LCD_IO_WriteData>
 80037dc:	2002      	movs	r0, #2
 80037de:	f7fe fc63 	bl	80020a8 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80037e2:	20f7      	movs	r0, #247	; 0xf7
 80037e4:	f7fe fc7c 	bl	80020e0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80037e8:	2020      	movs	r0, #32
 80037ea:	f7fe fc5d 	bl	80020a8 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80037ee:	20ea      	movs	r0, #234	; 0xea
 80037f0:	f7fe fc76 	bl	80020e0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80037f4:	2000      	movs	r0, #0
 80037f6:	f7fe fc57 	bl	80020a8 <LCD_IO_WriteData>
 80037fa:	2000      	movs	r0, #0
 80037fc:	f7fe fc54 	bl	80020a8 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8003800:	20b1      	movs	r0, #177	; 0xb1
 8003802:	f7fe fc6d 	bl	80020e0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8003806:	2000      	movs	r0, #0
 8003808:	f7fe fc4e 	bl	80020a8 <LCD_IO_WriteData>
 800380c:	201b      	movs	r0, #27
 800380e:	f7fe fc4b 	bl	80020a8 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8003812:	20b6      	movs	r0, #182	; 0xb6
 8003814:	f7fe fc64 	bl	80020e0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8003818:	200a      	movs	r0, #10
 800381a:	f7fe fc45 	bl	80020a8 <LCD_IO_WriteData>
 800381e:	20a2      	movs	r0, #162	; 0xa2
 8003820:	f7fe fc42 	bl	80020a8 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8003824:	20c0      	movs	r0, #192	; 0xc0
 8003826:	f7fe fc5b 	bl	80020e0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800382a:	2010      	movs	r0, #16
 800382c:	f7fe fc3c 	bl	80020a8 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8003830:	20c1      	movs	r0, #193	; 0xc1
 8003832:	f7fe fc55 	bl	80020e0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8003836:	2010      	movs	r0, #16
 8003838:	f7fe fc36 	bl	80020a8 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800383c:	20c5      	movs	r0, #197	; 0xc5
 800383e:	f7fe fc4f 	bl	80020e0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8003842:	2045      	movs	r0, #69	; 0x45
 8003844:	f7fe fc30 	bl	80020a8 <LCD_IO_WriteData>
 8003848:	2015      	movs	r0, #21
 800384a:	f7fe fc2d 	bl	80020a8 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800384e:	20c7      	movs	r0, #199	; 0xc7
 8003850:	f7fe fc46 	bl	80020e0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8003854:	2090      	movs	r0, #144	; 0x90
 8003856:	f7fe fc27 	bl	80020a8 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800385a:	2036      	movs	r0, #54	; 0x36
 800385c:	f7fe fc40 	bl	80020e0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8003860:	20c8      	movs	r0, #200	; 0xc8
 8003862:	f7fe fc21 	bl	80020a8 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8003866:	20f2      	movs	r0, #242	; 0xf2
 8003868:	f7fe fc3a 	bl	80020e0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800386c:	2000      	movs	r0, #0
 800386e:	f7fe fc1b 	bl	80020a8 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8003872:	20b0      	movs	r0, #176	; 0xb0
 8003874:	f7fe fc34 	bl	80020e0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8003878:	20c2      	movs	r0, #194	; 0xc2
 800387a:	f7fe fc15 	bl	80020a8 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800387e:	20b6      	movs	r0, #182	; 0xb6
 8003880:	f7fe fc2e 	bl	80020e0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8003884:	200a      	movs	r0, #10
 8003886:	f7fe fc0f 	bl	80020a8 <LCD_IO_WriteData>
 800388a:	20a7      	movs	r0, #167	; 0xa7
 800388c:	f7fe fc0c 	bl	80020a8 <LCD_IO_WriteData>
 8003890:	2027      	movs	r0, #39	; 0x27
 8003892:	f7fe fc09 	bl	80020a8 <LCD_IO_WriteData>
 8003896:	2004      	movs	r0, #4
 8003898:	f7fe fc06 	bl	80020a8 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800389c:	202a      	movs	r0, #42	; 0x2a
 800389e:	f7fe fc1f 	bl	80020e0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80038a2:	2000      	movs	r0, #0
 80038a4:	f7fe fc00 	bl	80020a8 <LCD_IO_WriteData>
 80038a8:	2000      	movs	r0, #0
 80038aa:	f7fe fbfd 	bl	80020a8 <LCD_IO_WriteData>
 80038ae:	2000      	movs	r0, #0
 80038b0:	f7fe fbfa 	bl	80020a8 <LCD_IO_WriteData>
 80038b4:	20ef      	movs	r0, #239	; 0xef
 80038b6:	f7fe fbf7 	bl	80020a8 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80038ba:	202b      	movs	r0, #43	; 0x2b
 80038bc:	f7fe fc10 	bl	80020e0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80038c0:	2000      	movs	r0, #0
 80038c2:	f7fe fbf1 	bl	80020a8 <LCD_IO_WriteData>
 80038c6:	2000      	movs	r0, #0
 80038c8:	f7fe fbee 	bl	80020a8 <LCD_IO_WriteData>
 80038cc:	2001      	movs	r0, #1
 80038ce:	f7fe fbeb 	bl	80020a8 <LCD_IO_WriteData>
 80038d2:	203f      	movs	r0, #63	; 0x3f
 80038d4:	f7fe fbe8 	bl	80020a8 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80038d8:	20f6      	movs	r0, #246	; 0xf6
 80038da:	f7fe fc01 	bl	80020e0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80038de:	2001      	movs	r0, #1
 80038e0:	f7fe fbe2 	bl	80020a8 <LCD_IO_WriteData>
 80038e4:	2000      	movs	r0, #0
 80038e6:	f7fe fbdf 	bl	80020a8 <LCD_IO_WriteData>
 80038ea:	2006      	movs	r0, #6
 80038ec:	f7fe fbdc 	bl	80020a8 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80038f0:	202c      	movs	r0, #44	; 0x2c
 80038f2:	f7fe fbf5 	bl	80020e0 <LCD_IO_WriteReg>
  LCD_Delay(200);
 80038f6:	20c8      	movs	r0, #200	; 0xc8
 80038f8:	f7fe fc40 	bl	800217c <LCD_Delay>
  LCD_IO_WriteReg(LCD_Reg);
 80038fc:	2026      	movs	r0, #38	; 0x26
 80038fe:	f7fe fbef 	bl	80020e0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8003902:	2001      	movs	r0, #1
 8003904:	f7fe fbd0 	bl	80020a8 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8003908:	20e0      	movs	r0, #224	; 0xe0
 800390a:	f7fe fbe9 	bl	80020e0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800390e:	200f      	movs	r0, #15
 8003910:	f7fe fbca 	bl	80020a8 <LCD_IO_WriteData>
 8003914:	2029      	movs	r0, #41	; 0x29
 8003916:	f7fe fbc7 	bl	80020a8 <LCD_IO_WriteData>
 800391a:	2024      	movs	r0, #36	; 0x24
 800391c:	f7fe fbc4 	bl	80020a8 <LCD_IO_WriteData>
 8003920:	200c      	movs	r0, #12
 8003922:	f7fe fbc1 	bl	80020a8 <LCD_IO_WriteData>
 8003926:	200e      	movs	r0, #14
 8003928:	f7fe fbbe 	bl	80020a8 <LCD_IO_WriteData>
 800392c:	2009      	movs	r0, #9
 800392e:	f7fe fbbb 	bl	80020a8 <LCD_IO_WriteData>
 8003932:	204e      	movs	r0, #78	; 0x4e
 8003934:	f7fe fbb8 	bl	80020a8 <LCD_IO_WriteData>
 8003938:	2078      	movs	r0, #120	; 0x78
 800393a:	f7fe fbb5 	bl	80020a8 <LCD_IO_WriteData>
 800393e:	203c      	movs	r0, #60	; 0x3c
 8003940:	f7fe fbb2 	bl	80020a8 <LCD_IO_WriteData>
 8003944:	2009      	movs	r0, #9
 8003946:	f7fe fbaf 	bl	80020a8 <LCD_IO_WriteData>
 800394a:	2013      	movs	r0, #19
 800394c:	f7fe fbac 	bl	80020a8 <LCD_IO_WriteData>
 8003950:	2005      	movs	r0, #5
 8003952:	f7fe fba9 	bl	80020a8 <LCD_IO_WriteData>
 8003956:	2017      	movs	r0, #23
 8003958:	f7fe fba6 	bl	80020a8 <LCD_IO_WriteData>
 800395c:	2011      	movs	r0, #17
 800395e:	f7fe fba3 	bl	80020a8 <LCD_IO_WriteData>
 8003962:	2000      	movs	r0, #0
 8003964:	f7fe fba0 	bl	80020a8 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8003968:	20e1      	movs	r0, #225	; 0xe1
 800396a:	f7fe fbb9 	bl	80020e0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800396e:	2000      	movs	r0, #0
 8003970:	f7fe fb9a 	bl	80020a8 <LCD_IO_WriteData>
 8003974:	2016      	movs	r0, #22
 8003976:	f7fe fb97 	bl	80020a8 <LCD_IO_WriteData>
 800397a:	201b      	movs	r0, #27
 800397c:	f7fe fb94 	bl	80020a8 <LCD_IO_WriteData>
 8003980:	2004      	movs	r0, #4
 8003982:	f7fe fb91 	bl	80020a8 <LCD_IO_WriteData>
 8003986:	2011      	movs	r0, #17
 8003988:	f7fe fb8e 	bl	80020a8 <LCD_IO_WriteData>
 800398c:	2007      	movs	r0, #7
 800398e:	f7fe fb8b 	bl	80020a8 <LCD_IO_WriteData>
 8003992:	2031      	movs	r0, #49	; 0x31
 8003994:	f7fe fb88 	bl	80020a8 <LCD_IO_WriteData>
 8003998:	2033      	movs	r0, #51	; 0x33
 800399a:	f7fe fb85 	bl	80020a8 <LCD_IO_WriteData>
 800399e:	2042      	movs	r0, #66	; 0x42
 80039a0:	f7fe fb82 	bl	80020a8 <LCD_IO_WriteData>
 80039a4:	2005      	movs	r0, #5
 80039a6:	f7fe fb7f 	bl	80020a8 <LCD_IO_WriteData>
 80039aa:	200c      	movs	r0, #12
 80039ac:	f7fe fb7c 	bl	80020a8 <LCD_IO_WriteData>
 80039b0:	200a      	movs	r0, #10
 80039b2:	f7fe fb79 	bl	80020a8 <LCD_IO_WriteData>
 80039b6:	2028      	movs	r0, #40	; 0x28
 80039b8:	f7fe fb76 	bl	80020a8 <LCD_IO_WriteData>
 80039bc:	202f      	movs	r0, #47	; 0x2f
 80039be:	f7fe fb73 	bl	80020a8 <LCD_IO_WriteData>
 80039c2:	200f      	movs	r0, #15
 80039c4:	f7fe fb70 	bl	80020a8 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80039c8:	2011      	movs	r0, #17
 80039ca:	f7fe fb89 	bl	80020e0 <LCD_IO_WriteReg>
  LCD_Delay(200);
 80039ce:	20c8      	movs	r0, #200	; 0xc8
 80039d0:	f7fe fbd4 	bl	800217c <LCD_Delay>
  LCD_IO_WriteReg(LCD_Reg);
 80039d4:	2029      	movs	r0, #41	; 0x29
 80039d6:	f7fe fb83 	bl	80020e0 <LCD_IO_WriteReg>
 80039da:	202c      	movs	r0, #44	; 0x2c
}
 80039dc:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  LCD_IO_WriteReg(LCD_Reg);
 80039e0:	f7fe bb7e 	b.w	80020e0 <LCD_IO_WriteReg>

080039e4 <ili9341_ReadID>:
{
 80039e4:	b508      	push	{r3, lr}
  LCD_IO_Init();
 80039e6:	f7fe fb4f 	bl	8002088 <LCD_IO_Init>
  return (LCD_IO_ReadData(RegValue, ReadSize));
 80039ea:	2103      	movs	r1, #3
 80039ec:	20d3      	movs	r0, #211	; 0xd3
 80039ee:	f7fe fb93 	bl	8002118 <LCD_IO_ReadData>
}
 80039f2:	b280      	uxth	r0, r0
 80039f4:	bd08      	pop	{r3, pc}

080039f6 <stmpe811_Reset>:
  * @brief  Reset the stmpe811 by Software.
  * @param  DeviceAddr: Device address on communication Bus.  
  * @retval None
  */
void stmpe811_Reset(uint16_t DeviceAddr)
{
 80039f6:	b510      	push	{r4, lr}
  /* Power Down the stmpe811 */  
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 2);
 80039f8:	b2c4      	uxtb	r4, r0
 80039fa:	2202      	movs	r2, #2
 80039fc:	2103      	movs	r1, #3
 80039fe:	4620      	mov	r0, r4
 8003a00:	f7fe fafa 	bl	8001ff8 <IOE_Write>

  /* Wait for a delay to ensure registers erasing */
  IOE_Delay(10); 
 8003a04:	200a      	movs	r0, #10
 8003a06:	f7fe fb3d 	bl	8002084 <IOE_Delay>
  
  /* Power On the Codec after the power off => all registers are reinitialized */
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 0);
 8003a0a:	4620      	mov	r0, r4
 8003a0c:	2200      	movs	r2, #0
 8003a0e:	2103      	movs	r1, #3
 8003a10:	f7fe faf2 	bl	8001ff8 <IOE_Write>
  
  /* Wait for a delay to ensure registers erasing */
  IOE_Delay(2); 
 8003a14:	2002      	movs	r0, #2
}
 8003a16:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Delay(2); 
 8003a1a:	f7fe bb33 	b.w	8002084 <IOE_Delay>

08003a1e <stmpe811_ReadID>:
  * @brief  Read the stmpe811 IO Expander device ID.
  * @param  DeviceAddr: Device address on communication Bus.  
  * @retval The Device ID (two bytes).
  */
uint16_t stmpe811_ReadID(uint16_t DeviceAddr)
{
 8003a1e:	b538      	push	{r3, r4, r5, lr}
 8003a20:	4604      	mov	r4, r0
  /* Initialize IO BUS layer */
  IOE_Init(); 
  
  /* Return the device ID value */
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 8003a22:	b2e4      	uxtb	r4, r4
  IOE_Init(); 
 8003a24:	f7fe fae6 	bl	8001ff4 <IOE_Init>
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 8003a28:	2100      	movs	r1, #0
 8003a2a:	4620      	mov	r0, r4
 8003a2c:	f7fe fafa 	bl	8002024 <IOE_Read>
          (IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_MSB)));
 8003a30:	2101      	movs	r1, #1
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 8003a32:	4605      	mov	r5, r0
          (IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_MSB)));
 8003a34:	4620      	mov	r0, r4
 8003a36:	f7fe faf5 	bl	8002024 <IOE_Read>
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 8003a3a:	ea40 2005 	orr.w	r0, r0, r5, lsl #8
}
 8003a3e:	b280      	uxth	r0, r0
 8003a40:	bd38      	pop	{r3, r4, r5, pc}

08003a42 <stmpe811_TS_DetectTouch>:
  * @brief  Return if there is touch detected or not.
  * @param  DeviceAddr: Device address on communication Bus.
  * @retval Touch detected state.
  */
uint8_t stmpe811_TS_DetectTouch(uint16_t DeviceAddr)
{
 8003a42:	b510      	push	{r4, lr}
  uint8_t state;
  uint8_t ret = 0;
  
  state = ((IOE_Read(DeviceAddr, STMPE811_REG_TSC_CTRL) & (uint8_t)STMPE811_TS_CTRL_STATUS) == (uint8_t)0x80);
 8003a44:	b2c4      	uxtb	r4, r0
 8003a46:	2140      	movs	r1, #64	; 0x40
 8003a48:	4620      	mov	r0, r4
 8003a4a:	f7fe faeb 	bl	8002024 <IOE_Read>
  
  if(state > 0)
 8003a4e:	0603      	lsls	r3, r0, #24
 8003a50:	d507      	bpl.n	8003a62 <stmpe811_TS_DetectTouch+0x20>
  {
    if(IOE_Read(DeviceAddr, STMPE811_REG_FIFO_SIZE) > 0)
 8003a52:	214c      	movs	r1, #76	; 0x4c
 8003a54:	4620      	mov	r0, r4
 8003a56:	f7fe fae5 	bl	8002024 <IOE_Read>
    {
      ret = 1;
 8003a5a:	3000      	adds	r0, #0
 8003a5c:	bf18      	it	ne
 8003a5e:	2001      	movne	r0, #1
    /* Enable the FIFO again */
    IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
  }
  
  return ret;
}
 8003a60:	bd10      	pop	{r4, pc}
    IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 8003a62:	2201      	movs	r2, #1
 8003a64:	214b      	movs	r1, #75	; 0x4b
 8003a66:	4620      	mov	r0, r4
 8003a68:	f7fe fac6 	bl	8001ff8 <IOE_Write>
    IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 8003a6c:	4620      	mov	r0, r4
 8003a6e:	2200      	movs	r2, #0
 8003a70:	214b      	movs	r1, #75	; 0x4b
 8003a72:	f7fe fac1 	bl	8001ff8 <IOE_Write>
  uint8_t ret = 0;
 8003a76:	2000      	movs	r0, #0
 8003a78:	e7f2      	b.n	8003a60 <stmpe811_TS_DetectTouch+0x1e>

08003a7a <stmpe811_TS_GetXY>:
  * @param  X: Pointer to X position value
  * @param  Y: Pointer to Y position value   
  * @retval None.
  */
void stmpe811_TS_GetXY(uint16_t DeviceAddr, uint16_t *X, uint16_t *Y)
{
 8003a7a:	b573      	push	{r0, r1, r4, r5, r6, lr}
  uint8_t  dataXYZ[4];
  uint32_t uldataXYZ;
  
  IOE_ReadMultiple(DeviceAddr, STMPE811_REG_TSC_DATA_NON_INC, dataXYZ, sizeof(dataXYZ)) ;
 8003a7c:	2304      	movs	r3, #4
 8003a7e:	b2c4      	uxtb	r4, r0
{
 8003a80:	460e      	mov	r6, r1
 8003a82:	4615      	mov	r5, r2
  IOE_ReadMultiple(DeviceAddr, STMPE811_REG_TSC_DATA_NON_INC, dataXYZ, sizeof(dataXYZ)) ;
 8003a84:	21d7      	movs	r1, #215	; 0xd7
 8003a86:	eb0d 0203 	add.w	r2, sp, r3
 8003a8a:	4620      	mov	r0, r4
 8003a8c:	f7fe fae4 	bl	8002058 <IOE_ReadMultiple>
 8003a90:	9b01      	ldr	r3, [sp, #4]
 8003a92:	ba1b      	rev	r3, r3
  
  /* Calculate positions values */
  uldataXYZ = (dataXYZ[0] << 24)|(dataXYZ[1] << 16)|(dataXYZ[2] << 8)|(dataXYZ[3] << 0);     
  *X = (uldataXYZ >> 20) & 0x00000FFF;     
 8003a94:	0d1a      	lsrs	r2, r3, #20
  *Y = (uldataXYZ >>  8) & 0x00000FFF;     
 8003a96:	f3c3 230b 	ubfx	r3, r3, #8, #12
  *X = (uldataXYZ >> 20) & 0x00000FFF;     
 8003a9a:	8032      	strh	r2, [r6, #0]
  
  /* Reset FIFO */
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 8003a9c:	4620      	mov	r0, r4
  *Y = (uldataXYZ >>  8) & 0x00000FFF;     
 8003a9e:	802b      	strh	r3, [r5, #0]
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 8003aa0:	2201      	movs	r2, #1
 8003aa2:	214b      	movs	r1, #75	; 0x4b
 8003aa4:	f7fe faa8 	bl	8001ff8 <IOE_Write>
  /* Enable the FIFO again */
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 8003aa8:	2200      	movs	r2, #0
 8003aaa:	214b      	movs	r1, #75	; 0x4b
 8003aac:	4620      	mov	r0, r4
 8003aae:	f7fe faa3 	bl	8001ff8 <IOE_Write>
}
 8003ab2:	b002      	add	sp, #8
 8003ab4:	bd70      	pop	{r4, r5, r6, pc}
	...

08003ab8 <stmpe811_Init>:
{
 8003ab8:	b510      	push	{r4, lr}
  uint8_t idx = 0;
  
  /* Check all the registered instances */
  for(idx = 0; idx < STMPE811_MAX_INSTANCE ; idx ++)
  {
    if(stmpe811[idx] == DeviceAddr)
 8003aba:	4a0a      	ldr	r2, [pc, #40]	; (8003ae4 <stmpe811_Init+0x2c>)
 8003abc:	7813      	ldrb	r3, [r2, #0]
 8003abe:	4298      	cmp	r0, r3
{
 8003ac0:	4604      	mov	r4, r0
    if(stmpe811[idx] == DeviceAddr)
 8003ac2:	d00d      	beq.n	8003ae0 <stmpe811_Init+0x28>
 8003ac4:	7851      	ldrb	r1, [r2, #1]
 8003ac6:	4288      	cmp	r0, r1
 8003ac8:	d00a      	beq.n	8003ae0 <stmpe811_Init+0x28>
 8003aca:	b10b      	cbz	r3, 8003ad0 <stmpe811_Init+0x18>
 8003acc:	b941      	cbnz	r1, 8003ae0 <stmpe811_Init+0x28>
  for(idx = 0; idx < STMPE811_MAX_INSTANCE ; idx ++)
 8003ace:	2301      	movs	r3, #1
      stmpe811[empty] = DeviceAddr;
 8003ad0:	54d4      	strb	r4, [r2, r3]
      IOE_Init(); 
 8003ad2:	f7fe fa8f 	bl	8001ff4 <IOE_Init>
      stmpe811_Reset(DeviceAddr);
 8003ad6:	4620      	mov	r0, r4
}
 8003ad8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
      stmpe811_Reset(DeviceAddr);
 8003adc:	f7ff bf8b 	b.w	80039f6 <stmpe811_Reset>
}
 8003ae0:	bd10      	pop	{r4, pc}
 8003ae2:	bf00      	nop
 8003ae4:	2000146d 	.word	0x2000146d

08003ae8 <stmpe811_EnableGlobalIT>:
{
 8003ae8:	b510      	push	{r4, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_CTRL);
 8003aea:	b2c4      	uxtb	r4, r0
 8003aec:	2109      	movs	r1, #9
 8003aee:	4620      	mov	r0, r4
 8003af0:	f7fe fa98 	bl	8002024 <IOE_Read>
  tmp |= (uint8_t)STMPE811_GIT_EN;
 8003af4:	f040 0201 	orr.w	r2, r0, #1
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp); 
 8003af8:	b2d2      	uxtb	r2, r2
 8003afa:	4620      	mov	r0, r4
 8003afc:	2109      	movs	r1, #9
}
 8003afe:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp); 
 8003b02:	f7fe ba79 	b.w	8001ff8 <IOE_Write>

08003b06 <stmpe811_DisableGlobalIT>:
{
 8003b06:	b510      	push	{r4, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_CTRL);
 8003b08:	b2c4      	uxtb	r4, r0
 8003b0a:	2109      	movs	r1, #9
 8003b0c:	4620      	mov	r0, r4
 8003b0e:	f7fe fa89 	bl	8002024 <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp);
 8003b12:	2109      	movs	r1, #9
 8003b14:	f000 02fe 	and.w	r2, r0, #254	; 0xfe
 8003b18:	4620      	mov	r0, r4
}
 8003b1a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp);
 8003b1e:	f7fe ba6b 	b.w	8001ff8 <IOE_Write>

08003b22 <stmpe811_EnableITSource>:
{
 8003b22:	b538      	push	{r3, r4, r5, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 8003b24:	b2c5      	uxtb	r5, r0
{
 8003b26:	460c      	mov	r4, r1
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 8003b28:	4628      	mov	r0, r5
 8003b2a:	210a      	movs	r1, #10
 8003b2c:	f7fe fa7a 	bl	8002024 <IOE_Read>
  tmp |= Source; 
 8003b30:	ea40 0204 	orr.w	r2, r0, r4
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 8003b34:	b2d2      	uxtb	r2, r2
 8003b36:	4628      	mov	r0, r5
 8003b38:	210a      	movs	r1, #10
}
 8003b3a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 8003b3e:	f7fe ba5b 	b.w	8001ff8 <IOE_Write>

08003b42 <stmpe811_TS_EnableIT>:
{
 8003b42:	b510      	push	{r4, lr}
 8003b44:	4604      	mov	r4, r0
  IOE_ITConfig();
 8003b46:	f7fe fa56 	bl	8001ff6 <IOE_ITConfig>
  stmpe811_EnableITSource(DeviceAddr, STMPE811_TS_IT); 
 8003b4a:	4620      	mov	r0, r4
 8003b4c:	211f      	movs	r1, #31
 8003b4e:	f7ff ffe8 	bl	8003b22 <stmpe811_EnableITSource>
  stmpe811_EnableGlobalIT(DeviceAddr);
 8003b52:	4620      	mov	r0, r4
}
 8003b54:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  stmpe811_EnableGlobalIT(DeviceAddr);
 8003b58:	f7ff bfc6 	b.w	8003ae8 <stmpe811_EnableGlobalIT>

08003b5c <stmpe811_DisableITSource>:
{
 8003b5c:	b538      	push	{r3, r4, r5, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 8003b5e:	b2c5      	uxtb	r5, r0
{
 8003b60:	460c      	mov	r4, r1
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 8003b62:	4628      	mov	r0, r5
 8003b64:	210a      	movs	r1, #10
 8003b66:	f7fe fa5d 	bl	8002024 <IOE_Read>
  tmp &= ~Source; 
 8003b6a:	ea20 0204 	bic.w	r2, r0, r4
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 8003b6e:	b2d2      	uxtb	r2, r2
 8003b70:	4628      	mov	r0, r5
 8003b72:	210a      	movs	r1, #10
}
 8003b74:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 8003b78:	f7fe ba3e 	b.w	8001ff8 <IOE_Write>

08003b7c <stmpe811_TS_DisableIT>:
{
 8003b7c:	b510      	push	{r4, lr}
 8003b7e:	4604      	mov	r4, r0
  stmpe811_DisableGlobalIT(DeviceAddr);
 8003b80:	f7ff ffc1 	bl	8003b06 <stmpe811_DisableGlobalIT>
  stmpe811_DisableITSource(DeviceAddr, STMPE811_TS_IT); 
 8003b84:	4620      	mov	r0, r4
 8003b86:	211f      	movs	r1, #31
}
 8003b88:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  stmpe811_DisableITSource(DeviceAddr, STMPE811_TS_IT); 
 8003b8c:	f7ff bfe6 	b.w	8003b5c <stmpe811_DisableITSource>

08003b90 <stmpe811_ReadGITStatus>:
{
 8003b90:	b510      	push	{r4, lr}
  return((IOE_Read(DeviceAddr, STMPE811_REG_INT_STA) & Source));
 8003b92:	b2c0      	uxtb	r0, r0
{
 8003b94:	460c      	mov	r4, r1
  return((IOE_Read(DeviceAddr, STMPE811_REG_INT_STA) & Source));
 8003b96:	210b      	movs	r1, #11
 8003b98:	f7fe fa44 	bl	8002024 <IOE_Read>
}
 8003b9c:	4020      	ands	r0, r4
 8003b9e:	bd10      	pop	{r4, pc}

08003ba0 <stmpe811_TS_ITStatus>:
  return(stmpe811_ReadGITStatus(DeviceAddr, STMPE811_TS_IT));
 8003ba0:	211f      	movs	r1, #31
 8003ba2:	f7ff bff5 	b.w	8003b90 <stmpe811_ReadGITStatus>

08003ba6 <stmpe811_ClearGlobalIT>:
  IOE_Write(DeviceAddr, STMPE811_REG_INT_STA, Source);
 8003ba6:	460a      	mov	r2, r1
 8003ba8:	b2c0      	uxtb	r0, r0
 8003baa:	210b      	movs	r1, #11
 8003bac:	f7fe ba24 	b.w	8001ff8 <IOE_Write>

08003bb0 <stmpe811_TS_ClearIT>:
  stmpe811_ClearGlobalIT(DeviceAddr, STMPE811_TS_IT);
 8003bb0:	211f      	movs	r1, #31
 8003bb2:	f7ff bff8 	b.w	8003ba6 <stmpe811_ClearGlobalIT>

08003bb6 <stmpe811_IO_EnableAF>:
{
 8003bb6:	b538      	push	{r3, r4, r5, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_IO_AF);
 8003bb8:	b2c5      	uxtb	r5, r0
{
 8003bba:	460c      	mov	r4, r1
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_IO_AF);
 8003bbc:	4628      	mov	r0, r5
 8003bbe:	2117      	movs	r1, #23
 8003bc0:	f7fe fa30 	bl	8002024 <IOE_Read>
  tmp &= ~(uint8_t)IO_Pin;   
 8003bc4:	ea20 0204 	bic.w	r2, r0, r4
  IOE_Write(DeviceAddr, STMPE811_REG_IO_AF, tmp); 
 8003bc8:	b2d2      	uxtb	r2, r2
 8003bca:	4628      	mov	r0, r5
 8003bcc:	2117      	movs	r1, #23
}
 8003bce:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_IO_AF, tmp); 
 8003bd2:	f7fe ba11 	b.w	8001ff8 <IOE_Write>

08003bd6 <stmpe811_TS_Start>:
{
 8003bd6:	b570      	push	{r4, r5, r6, lr}
  mode = IOE_Read(DeviceAddr, STMPE811_REG_SYS_CTRL2);
 8003bd8:	b2c4      	uxtb	r4, r0
{
 8003bda:	4606      	mov	r6, r0
  mode = IOE_Read(DeviceAddr, STMPE811_REG_SYS_CTRL2);
 8003bdc:	2104      	movs	r1, #4
 8003bde:	4620      	mov	r0, r4
 8003be0:	f7fe fa20 	bl	8002024 <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 8003be4:	2104      	movs	r1, #4
 8003be6:	f000 02fb 	and.w	r2, r0, #251	; 0xfb
  mode = IOE_Read(DeviceAddr, STMPE811_REG_SYS_CTRL2);
 8003bea:	4605      	mov	r5, r0
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 8003bec:	4620      	mov	r0, r4
 8003bee:	f7fe fa03 	bl	8001ff8 <IOE_Write>
  stmpe811_IO_EnableAF(DeviceAddr, STMPE811_TOUCH_IO_ALL);
 8003bf2:	4630      	mov	r0, r6
 8003bf4:	21f0      	movs	r1, #240	; 0xf0
 8003bf6:	f7ff ffde 	bl	8003bb6 <stmpe811_IO_EnableAF>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 8003bfa:	f005 02f8 	and.w	r2, r5, #248	; 0xf8
 8003bfe:	4620      	mov	r0, r4
 8003c00:	2104      	movs	r1, #4
 8003c02:	f7fe f9f9 	bl	8001ff8 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_ADC_CTRL1, 0x49);
 8003c06:	2249      	movs	r2, #73	; 0x49
 8003c08:	2120      	movs	r1, #32
 8003c0a:	4620      	mov	r0, r4
 8003c0c:	f7fe f9f4 	bl	8001ff8 <IOE_Write>
  IOE_Delay(2); 
 8003c10:	2002      	movs	r0, #2
 8003c12:	f7fe fa37 	bl	8002084 <IOE_Delay>
  IOE_Write(DeviceAddr, STMPE811_REG_ADC_CTRL2, 0x01);
 8003c16:	4620      	mov	r0, r4
 8003c18:	2201      	movs	r2, #1
 8003c1a:	2121      	movs	r1, #33	; 0x21
 8003c1c:	f7fe f9ec 	bl	8001ff8 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_CFG, 0x9A); 
 8003c20:	4620      	mov	r0, r4
 8003c22:	229a      	movs	r2, #154	; 0x9a
 8003c24:	2141      	movs	r1, #65	; 0x41
 8003c26:	f7fe f9e7 	bl	8001ff8 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_TH, 0x01);
 8003c2a:	4620      	mov	r0, r4
 8003c2c:	2201      	movs	r2, #1
 8003c2e:	214a      	movs	r1, #74	; 0x4a
 8003c30:	f7fe f9e2 	bl	8001ff8 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 8003c34:	4620      	mov	r0, r4
 8003c36:	2201      	movs	r2, #1
 8003c38:	214b      	movs	r1, #75	; 0x4b
 8003c3a:	f7fe f9dd 	bl	8001ff8 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 8003c3e:	4620      	mov	r0, r4
 8003c40:	2200      	movs	r2, #0
 8003c42:	214b      	movs	r1, #75	; 0x4b
 8003c44:	f7fe f9d8 	bl	8001ff8 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_FRACT_XYZ, 0x01);
 8003c48:	4620      	mov	r0, r4
 8003c4a:	2201      	movs	r2, #1
 8003c4c:	2156      	movs	r1, #86	; 0x56
 8003c4e:	f7fe f9d3 	bl	8001ff8 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_I_DRIVE, 0x01);
 8003c52:	4620      	mov	r0, r4
 8003c54:	2201      	movs	r2, #1
 8003c56:	2158      	movs	r1, #88	; 0x58
 8003c58:	f7fe f9ce 	bl	8001ff8 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_CTRL, 0x01);
 8003c5c:	4620      	mov	r0, r4
 8003c5e:	2201      	movs	r2, #1
 8003c60:	2140      	movs	r1, #64	; 0x40
 8003c62:	f7fe f9c9 	bl	8001ff8 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_INT_STA, 0xFF);
 8003c66:	4620      	mov	r0, r4
 8003c68:	22ff      	movs	r2, #255	; 0xff
 8003c6a:	210b      	movs	r1, #11
 8003c6c:	f7fe f9c4 	bl	8001ff8 <IOE_Write>
  IOE_Delay(2); 
 8003c70:	2002      	movs	r0, #2
}
 8003c72:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
  IOE_Delay(2); 
 8003c76:	f7fe ba05 	b.w	8002084 <IOE_Delay>
	...

08003c7c <SystemInit>:
  */
void SystemInit(void)
{
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 8003c7c:	4b05      	ldr	r3, [pc, #20]	; (8003c94 <SystemInit+0x18>)
 8003c7e:	f8d3 2088 	ldr.w	r2, [r3, #136]	; 0x88
 8003c82:	f442 0270 	orr.w	r2, r2, #15728640	; 0xf00000
 8003c86:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88

  /* Configure the Vector Table location add offset address ------------------*/
#ifdef VECT_TAB_SRAM
  SCB->VTOR = SRAM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#else
  SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
 8003c8a:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
 8003c8e:	609a      	str	r2, [r3, #8]
#endif
}
 8003c90:	4770      	bx	lr
 8003c92:	bf00      	nop
 8003c94:	e000ed00 	.word	0xe000ed00

08003c98 <HAL_Init>:
  *         need to ensure that the SysTick time base is always set to 1 millisecond
  *         to have correct HAL operation.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_Init(void)
{
 8003c98:	b508      	push	{r3, lr}
  /* Configure Flash prefetch, Instruction cache, Data cache */ 
#if (INSTRUCTION_CACHE_ENABLE != 0U)
  __HAL_FLASH_INSTRUCTION_CACHE_ENABLE();
 8003c9a:	4b0b      	ldr	r3, [pc, #44]	; (8003cc8 <HAL_Init+0x30>)
 8003c9c:	681a      	ldr	r2, [r3, #0]
 8003c9e:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8003ca2:	601a      	str	r2, [r3, #0]
#endif /* INSTRUCTION_CACHE_ENABLE */

#if (DATA_CACHE_ENABLE != 0U)
  __HAL_FLASH_DATA_CACHE_ENABLE();
 8003ca4:	681a      	ldr	r2, [r3, #0]
 8003ca6:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8003caa:	601a      	str	r2, [r3, #0]
#endif /* DATA_CACHE_ENABLE */

#if (PREFETCH_ENABLE != 0U)
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 8003cac:	681a      	ldr	r2, [r3, #0]
 8003cae:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8003cb2:	601a      	str	r2, [r3, #0]
#endif /* PREFETCH_ENABLE */

  /* Set Interrupt Group Priority */
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 8003cb4:	2003      	movs	r0, #3
 8003cb6:	f000 f82f 	bl	8003d18 <HAL_NVIC_SetPriorityGrouping>

  /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
  HAL_InitTick(TICK_INT_PRIORITY);
 8003cba:	2000      	movs	r0, #0
 8003cbc:	f7fe fdde 	bl	800287c <HAL_InitTick>

  /* Init the low level hardware */
  HAL_MspInit();
 8003cc0:	f7fe fa6a 	bl	8002198 <HAL_MspInit>

  /* Return function status */
  return HAL_OK;
}
 8003cc4:	2000      	movs	r0, #0
 8003cc6:	bd08      	pop	{r3, pc}
 8003cc8:	40023c00 	.word	0x40023c00

08003ccc <HAL_IncTick>:
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
  uwTick += uwTickFreq;
 8003ccc:	4a03      	ldr	r2, [pc, #12]	; (8003cdc <HAL_IncTick+0x10>)
 8003cce:	4b04      	ldr	r3, [pc, #16]	; (8003ce0 <HAL_IncTick+0x14>)
 8003cd0:	6811      	ldr	r1, [r2, #0]
 8003cd2:	781b      	ldrb	r3, [r3, #0]
 8003cd4:	440b      	add	r3, r1
 8003cd6:	6013      	str	r3, [r2, #0]
}
 8003cd8:	4770      	bx	lr
 8003cda:	bf00      	nop
 8003cdc:	20012938 	.word	0x20012938
 8003ce0:	20000088 	.word	0x20000088

08003ce4 <HAL_GetTick>:
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
  return uwTick;
 8003ce4:	4b01      	ldr	r3, [pc, #4]	; (8003cec <HAL_GetTick+0x8>)
 8003ce6:	6818      	ldr	r0, [r3, #0]
}
 8003ce8:	4770      	bx	lr
 8003cea:	bf00      	nop
 8003cec:	20012938 	.word	0x20012938

08003cf0 <HAL_Delay>:
  *       implementations in user file.
  * @param Delay specifies the delay time length, in milliseconds.
  * @retval None
  */
__weak void HAL_Delay(uint32_t Delay)
{
 8003cf0:	b538      	push	{r3, r4, r5, lr}
 8003cf2:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 8003cf4:	f7ff fff6 	bl	8003ce4 <HAL_GetTick>
  uint32_t wait = Delay;

  /* Add a freq to guarantee minimum wait */
  if (wait < HAL_MAX_DELAY)
 8003cf8:	1c63      	adds	r3, r4, #1
  {
    wait += (uint32_t)(uwTickFreq);
 8003cfa:	bf1c      	itt	ne
 8003cfc:	4b05      	ldrne	r3, [pc, #20]	; (8003d14 <HAL_Delay+0x24>)
 8003cfe:	781b      	ldrbne	r3, [r3, #0]
  uint32_t tickstart = HAL_GetTick();
 8003d00:	4605      	mov	r5, r0
    wait += (uint32_t)(uwTickFreq);
 8003d02:	bf18      	it	ne
 8003d04:	18e4      	addne	r4, r4, r3
  }

  while((HAL_GetTick() - tickstart) < wait)
 8003d06:	f7ff ffed 	bl	8003ce4 <HAL_GetTick>
 8003d0a:	1b40      	subs	r0, r0, r5
 8003d0c:	42a0      	cmp	r0, r4
 8003d0e:	d3fa      	bcc.n	8003d06 <HAL_Delay+0x16>
  {
  }
}
 8003d10:	bd38      	pop	{r3, r4, r5, pc}
 8003d12:	bf00      	nop
 8003d14:	20000088 	.word	0x20000088

08003d18 <HAL_NVIC_SetPriorityGrouping>:
  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 8003d18:	4a07      	ldr	r2, [pc, #28]	; (8003d38 <HAL_NVIC_SetPriorityGrouping+0x20>)
 8003d1a:	68d3      	ldr	r3, [r2, #12]
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 8003d1c:	f423 63e0 	bic.w	r3, r3, #1792	; 0x700
 8003d20:	041b      	lsls	r3, r3, #16
 8003d22:	0c1b      	lsrs	r3, r3, #16
 8003d24:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 8003d28:	0200      	lsls	r0, r0, #8
 8003d2a:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8003d2e:	f400 60e0 	and.w	r0, r0, #1792	; 0x700
  reg_value  =  (reg_value                                   |
 8003d32:	4303      	orrs	r3, r0
  SCB->AIRCR =  reg_value;
 8003d34:	60d3      	str	r3, [r2, #12]
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));
  
  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
}
 8003d36:	4770      	bx	lr
 8003d38:	e000ed00 	.word	0xe000ed00

08003d3c <HAL_NVIC_SetPriority>:
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 8003d3c:	4b17      	ldr	r3, [pc, #92]	; (8003d9c <HAL_NVIC_SetPriority+0x60>)
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.          
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{ 
 8003d3e:	b570      	push	{r4, r5, r6, lr}
 8003d40:	68dc      	ldr	r4, [r3, #12]
 8003d42:	f3c4 2402 	ubfx	r4, r4, #8, #3
{
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used          */
  uint32_t PreemptPriorityBits;
  uint32_t SubPriorityBits;

  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 8003d46:	f1c4 0507 	rsb	r5, r4, #7
 8003d4a:	2d04      	cmp	r5, #4
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8003d4c:	f104 0304 	add.w	r3, r4, #4
  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 8003d50:	bf28      	it	cs
 8003d52:	2504      	movcs	r5, #4

  return (
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8003d54:	f04f 36ff 	mov.w	r6, #4294967295
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8003d58:	2b06      	cmp	r3, #6
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8003d5a:	fa06 f305 	lsl.w	r3, r6, r5
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8003d5e:	bf8c      	ite	hi
 8003d60:	3c03      	subhi	r4, #3
 8003d62:	2400      	movls	r4, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8003d64:	ea21 0303 	bic.w	r3, r1, r3
 8003d68:	40a3      	lsls	r3, r4
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 8003d6a:	fa06 f404 	lsl.w	r4, r6, r4
 8003d6e:	ea22 0404 	bic.w	r4, r2, r4
  if ((int32_t)(IRQn) >= 0)
 8003d72:	2800      	cmp	r0, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8003d74:	ea43 0304 	orr.w	r3, r3, r4
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8003d78:	bfa8      	it	ge
 8003d7a:	f100 4060 	addge.w	r0, r0, #3758096384	; 0xe0000000
 8003d7e:	ea4f 1303 	mov.w	r3, r3, lsl #4
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8003d82:	bfbc      	itt	lt
 8003d84:	f000 000f 	andlt.w	r0, r0, #15
 8003d88:	4a05      	ldrlt	r2, [pc, #20]	; (8003da0 <HAL_NVIC_SetPriority+0x64>)
 8003d8a:	b2db      	uxtb	r3, r3
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8003d8c:	bfaa      	itet	ge
 8003d8e:	f500 4061 	addge.w	r0, r0, #57600	; 0xe100
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8003d92:	5413      	strblt	r3, [r2, r0]
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8003d94:	f880 3300 	strbge.w	r3, [r0, #768]	; 0x300
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
  
  prioritygroup = NVIC_GetPriorityGrouping();
  
  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
}
 8003d98:	bd70      	pop	{r4, r5, r6, pc}
 8003d9a:	bf00      	nop
 8003d9c:	e000ed00 	.word	0xe000ed00
 8003da0:	e000ed14 	.word	0xe000ed14

08003da4 <HAL_NVIC_EnableIRQ>:
  if ((int32_t)(IRQn) >= 0)
 8003da4:	2800      	cmp	r0, #0
 8003da6:	db08      	blt.n	8003dba <HAL_NVIC_EnableIRQ+0x16>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8003da8:	0942      	lsrs	r2, r0, #5
 8003daa:	2301      	movs	r3, #1
 8003dac:	f000 001f 	and.w	r0, r0, #31
 8003db0:	fa03 f000 	lsl.w	r0, r3, r0
 8003db4:	4b01      	ldr	r3, [pc, #4]	; (8003dbc <HAL_NVIC_EnableIRQ+0x18>)
 8003db6:	f843 0022 	str.w	r0, [r3, r2, lsl #2]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
  
  /* Enable interrupt */
  NVIC_EnableIRQ(IRQn);
}
 8003dba:	4770      	bx	lr
 8003dbc:	e000e100 	.word	0xe000e100

08003dc0 <HAL_NVIC_DisableIRQ>:
  if ((int32_t)(IRQn) >= 0)
 8003dc0:	2800      	cmp	r0, #0
 8003dc2:	db0d      	blt.n	8003de0 <HAL_NVIC_DisableIRQ+0x20>
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8003dc4:	0943      	lsrs	r3, r0, #5
 8003dc6:	2201      	movs	r2, #1
 8003dc8:	f000 001f 	and.w	r0, r0, #31
 8003dcc:	fa02 f000 	lsl.w	r0, r2, r0
 8003dd0:	3320      	adds	r3, #32
 8003dd2:	4a04      	ldr	r2, [pc, #16]	; (8003de4 <HAL_NVIC_DisableIRQ+0x24>)
 8003dd4:	f842 0023 	str.w	r0, [r2, r3, lsl #2]
  __ASM volatile ("dsb 0xF":::"memory");
 8003dd8:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 8003ddc:	f3bf 8f6f 	isb	sy
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
  
  /* Disable interrupt */
  NVIC_DisableIRQ(IRQn);
}
 8003de0:	4770      	bx	lr
 8003de2:	bf00      	nop
 8003de4:	e000e100 	.word	0xe000e100

08003de8 <HAL_CRC_Init>:
  *         parameters in the CRC_InitTypeDef and create the associated handle.
  * @param  hcrc CRC handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_CRC_Init(CRC_HandleTypeDef *hcrc)
{
 8003de8:	b510      	push	{r4, lr}
  /* Check the CRC handle allocation */
  if (hcrc == NULL)
 8003dea:	4604      	mov	r4, r0
 8003dec:	b150      	cbz	r0, 8003e04 <HAL_CRC_Init+0x1c>
  }

  /* Check the parameters */
  assert_param(IS_CRC_ALL_INSTANCE(hcrc->Instance));

  if (hcrc->State == HAL_CRC_STATE_RESET)
 8003dee:	7943      	ldrb	r3, [r0, #5]
 8003df0:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8003df4:	b913      	cbnz	r3, 8003dfc <HAL_CRC_Init+0x14>
  {
    /* Allocate lock resource and initialize it */
    hcrc->Lock = HAL_UNLOCKED;
 8003df6:	7102      	strb	r2, [r0, #4]
    /* Init the low level hardware */
    HAL_CRC_MspInit(hcrc);
 8003df8:	f7fe f9ee 	bl	80021d8 <HAL_CRC_MspInit>
  }

  /* Change CRC peripheral state */
  hcrc->State = HAL_CRC_STATE_READY;
 8003dfc:	2301      	movs	r3, #1
 8003dfe:	7163      	strb	r3, [r4, #5]

  /* Return function status */
  return HAL_OK;
 8003e00:	2000      	movs	r0, #0
}
 8003e02:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 8003e04:	2001      	movs	r0, #1
 8003e06:	e7fc      	b.n	8003e02 <HAL_CRC_Init+0x1a>

08003e08 <DMA_CalcBaseAndBitshift>:
  *                     the configuration information for the specified DMA Stream. 
  * @retval Stream base address
  */
static uint32_t DMA_CalcBaseAndBitshift(DMA_HandleTypeDef *hdma)
{
  uint32_t stream_number = (((uint32_t)hdma->Instance & 0xFFU) - 16U) / 24U;
 8003e08:	6803      	ldr	r3, [r0, #0]
 8003e0a:	b2da      	uxtb	r2, r3
 8003e0c:	f423 737f 	bic.w	r3, r3, #1020	; 0x3fc
 8003e10:	f023 0303 	bic.w	r3, r3, #3
 8003e14:	2118      	movs	r1, #24
 8003e16:	3a10      	subs	r2, #16
 8003e18:	fbb2 f2f1 	udiv	r2, r2, r1
  
  /* lookup table for necessary bitshift of flags within status registers */
  static const uint8_t flagBitshiftOffset[8U] = {0U, 6U, 16U, 22U, 0U, 6U, 16U, 22U};
  hdma->StreamIndex = flagBitshiftOffset[stream_number];
 8003e1c:	4904      	ldr	r1, [pc, #16]	; (8003e30 <DMA_CalcBaseAndBitshift+0x28>)
  
  if (stream_number > 3U)
 8003e1e:	2a03      	cmp	r2, #3
  {
    /* return pointer to HISR and HIFCR */
    hdma->StreamBaseAddress = (((uint32_t)hdma->Instance & (uint32_t)(~0x3FFU)) + 4U);
 8003e20:	bf88      	it	hi
 8003e22:	3304      	addhi	r3, #4
  hdma->StreamIndex = flagBitshiftOffset[stream_number];
 8003e24:	5c89      	ldrb	r1, [r1, r2]
  }
  else
  {
    /* return pointer to LISR and LIFCR */
    hdma->StreamBaseAddress = ((uint32_t)hdma->Instance & (uint32_t)(~0x3FFU));
 8003e26:	6583      	str	r3, [r0, #88]	; 0x58
  hdma->StreamIndex = flagBitshiftOffset[stream_number];
 8003e28:	65c1      	str	r1, [r0, #92]	; 0x5c
  }
  
  return hdma->StreamBaseAddress;
}
 8003e2a:	6d80      	ldr	r0, [r0, #88]	; 0x58
 8003e2c:	4770      	bx	lr
 8003e2e:	bf00      	nop
 8003e30:	0801b244 	.word	0x0801b244

08003e34 <HAL_DMA_Init>:
{
 8003e34:	b570      	push	{r4, r5, r6, lr}
 8003e36:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 8003e38:	f7ff ff54 	bl	8003ce4 <HAL_GetTick>
 8003e3c:	4605      	mov	r5, r0
  if(hdma == NULL)
 8003e3e:	2c00      	cmp	r4, #0
 8003e40:	d071      	beq.n	8003f26 <HAL_DMA_Init+0xf2>
  __HAL_UNLOCK(hdma);
 8003e42:	2300      	movs	r3, #0
 8003e44:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34
  __HAL_DMA_DISABLE(hdma);
 8003e48:	6822      	ldr	r2, [r4, #0]
  hdma->State = HAL_DMA_STATE_BUSY;
 8003e4a:	2302      	movs	r3, #2
 8003e4c:	f884 3035 	strb.w	r3, [r4, #53]	; 0x35
  __HAL_DMA_DISABLE(hdma);
 8003e50:	6813      	ldr	r3, [r2, #0]
 8003e52:	f023 0301 	bic.w	r3, r3, #1
 8003e56:	6013      	str	r3, [r2, #0]
  while((hdma->Instance->CR & DMA_SxCR_EN) != RESET)
 8003e58:	6821      	ldr	r1, [r4, #0]
 8003e5a:	680b      	ldr	r3, [r1, #0]
 8003e5c:	07d8      	lsls	r0, r3, #31
 8003e5e:	d43c      	bmi.n	8003eda <HAL_DMA_Init+0xa6>
  tmp = hdma->Instance->CR;
 8003e60:	680b      	ldr	r3, [r1, #0]
  tmp &= ((uint32_t)~(DMA_SxCR_CHSEL | DMA_SxCR_MBURST | DMA_SxCR_PBURST | \
 8003e62:	4d32      	ldr	r5, [pc, #200]	; (8003f2c <HAL_DMA_Init+0xf8>)
          hdma->Init.PeriphDataAlignment | hdma->Init.MemDataAlignment |
 8003e64:	69a0      	ldr	r0, [r4, #24]
  tmp &= ((uint32_t)~(DMA_SxCR_CHSEL | DMA_SxCR_MBURST | DMA_SxCR_PBURST | \
 8003e66:	401d      	ands	r5, r3
  tmp |=  hdma->Init.Channel             | hdma->Init.Direction        |
 8003e68:	e9d4 2301 	ldrd	r2, r3, [r4, #4]
 8003e6c:	4313      	orrs	r3, r2
 8003e6e:	68e2      	ldr	r2, [r4, #12]
 8003e70:	4313      	orrs	r3, r2
          hdma->Init.PeriphInc           | hdma->Init.MemInc           |
 8003e72:	6922      	ldr	r2, [r4, #16]
 8003e74:	4313      	orrs	r3, r2
 8003e76:	6962      	ldr	r2, [r4, #20]
 8003e78:	4313      	orrs	r3, r2
          hdma->Init.PeriphDataAlignment | hdma->Init.MemDataAlignment |
 8003e7a:	69e2      	ldr	r2, [r4, #28]
 8003e7c:	4303      	orrs	r3, r0
 8003e7e:	4313      	orrs	r3, r2
          hdma->Init.Mode                | hdma->Init.Priority;
 8003e80:	6a22      	ldr	r2, [r4, #32]
 8003e82:	4313      	orrs	r3, r2
  if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
 8003e84:	6a62      	ldr	r2, [r4, #36]	; 0x24
 8003e86:	2a04      	cmp	r2, #4
  tmp |=  hdma->Init.Channel             | hdma->Init.Direction        |
 8003e88:	ea43 0305 	orr.w	r3, r3, r5
    tmp |=  hdma->Init.MemBurst | hdma->Init.PeriphBurst;
 8003e8c:	bf02      	ittt	eq
 8003e8e:	e9d4 560b 	ldrdeq	r5, r6, [r4, #44]	; 0x2c
 8003e92:	4335      	orreq	r5, r6
 8003e94:	432b      	orreq	r3, r5
  hdma->Instance->CR = tmp;  
 8003e96:	600b      	str	r3, [r1, #0]
  tmp = hdma->Instance->FCR;
 8003e98:	694b      	ldr	r3, [r1, #20]
  if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
 8003e9a:	2a04      	cmp	r2, #4
  tmp &= (uint32_t)~(DMA_SxFCR_DMDIS | DMA_SxFCR_FTH);
 8003e9c:	f023 0307 	bic.w	r3, r3, #7
  tmp |= hdma->Init.FIFOMode;
 8003ea0:	ea43 0302 	orr.w	r3, r3, r2
  if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
 8003ea4:	d10b      	bne.n	8003ebe <HAL_DMA_Init+0x8a>
    tmp |= hdma->Init.FIFOThreshold;
 8003ea6:	6aa2      	ldr	r2, [r4, #40]	; 0x28
    if (hdma->Init.MemBurst != DMA_MBURST_SINGLE)
 8003ea8:	6ae5      	ldr	r5, [r4, #44]	; 0x2c
    tmp |= hdma->Init.FIFOThreshold;
 8003eaa:	4313      	orrs	r3, r2
    if (hdma->Init.MemBurst != DMA_MBURST_SINGLE)
 8003eac:	b13d      	cbz	r5, 8003ebe <HAL_DMA_Init+0x8a>
{
  HAL_StatusTypeDef status = HAL_OK;
  uint32_t tmp = hdma->Init.FIFOThreshold;
  
  /* Memory Data size equal to Byte */
  if(hdma->Init.MemDataAlignment == DMA_MDATAALIGN_BYTE)
 8003eae:	b9f8      	cbnz	r0, 8003ef0 <HAL_DMA_Init+0xbc>
  {
    switch (tmp)
 8003eb0:	2a01      	cmp	r2, #1
 8003eb2:	d02d      	beq.n	8003f10 <HAL_DMA_Init+0xdc>
 8003eb4:	d301      	bcc.n	8003eba <HAL_DMA_Init+0x86>
 8003eb6:	2a02      	cmp	r2, #2
  }
  
  /* Memory Data size equal to Word */
  else
  {
    switch (tmp)
 8003eb8:	d101      	bne.n	8003ebe <HAL_DMA_Init+0x8a>
    case DMA_FIFO_THRESHOLD_HALFFULL:
    case DMA_FIFO_THRESHOLD_3QUARTERSFULL:
      status = HAL_ERROR;
      break;
    case DMA_FIFO_THRESHOLD_FULL:
      if ((hdma->Init.MemBurst & DMA_SxCR_MBURST_1) == DMA_SxCR_MBURST_1)
 8003eba:	01ea      	lsls	r2, r5, #7
 8003ebc:	d42b      	bmi.n	8003f16 <HAL_DMA_Init+0xe2>
  hdma->Instance->FCR = tmp;
 8003ebe:	614b      	str	r3, [r1, #20]
  regs = (DMA_Base_Registers *)DMA_CalcBaseAndBitshift(hdma);
 8003ec0:	4620      	mov	r0, r4
 8003ec2:	f7ff ffa1 	bl	8003e08 <DMA_CalcBaseAndBitshift>
  regs->IFCR = 0x3FU << hdma->StreamIndex;
 8003ec6:	6de2      	ldr	r2, [r4, #92]	; 0x5c
 8003ec8:	233f      	movs	r3, #63	; 0x3f
 8003eca:	4093      	lsls	r3, r2
 8003ecc:	6083      	str	r3, [r0, #8]
  hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 8003ece:	2000      	movs	r0, #0
  hdma->State = HAL_DMA_STATE_READY;
 8003ed0:	2301      	movs	r3, #1
  hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 8003ed2:	6560      	str	r0, [r4, #84]	; 0x54
  hdma->State = HAL_DMA_STATE_READY;
 8003ed4:	f884 3035 	strb.w	r3, [r4, #53]	; 0x35
  return HAL_OK;
 8003ed8:	e009      	b.n	8003eee <HAL_DMA_Init+0xba>
    if((HAL_GetTick() - tickstart ) > HAL_TIMEOUT_DMA_ABORT)
 8003eda:	f7ff ff03 	bl	8003ce4 <HAL_GetTick>
 8003ede:	1b40      	subs	r0, r0, r5
 8003ee0:	2805      	cmp	r0, #5
 8003ee2:	d9b9      	bls.n	8003e58 <HAL_DMA_Init+0x24>
      hdma->ErrorCode = HAL_DMA_ERROR_TIMEOUT;
 8003ee4:	2320      	movs	r3, #32
 8003ee6:	6563      	str	r3, [r4, #84]	; 0x54
      hdma->State = HAL_DMA_STATE_TIMEOUT;
 8003ee8:	2003      	movs	r0, #3
        hdma->State = HAL_DMA_STATE_READY;
 8003eea:	f884 0035 	strb.w	r0, [r4, #53]	; 0x35
}
 8003eee:	bd70      	pop	{r4, r5, r6, pc}
  else if (hdma->Init.MemDataAlignment == DMA_MDATAALIGN_HALFWORD)
 8003ef0:	f5b0 5f00 	cmp.w	r0, #8192	; 0x2000
 8003ef4:	d113      	bne.n	8003f1e <HAL_DMA_Init+0xea>
    switch (tmp)
 8003ef6:	2a03      	cmp	r2, #3
 8003ef8:	d8e1      	bhi.n	8003ebe <HAL_DMA_Init+0x8a>
 8003efa:	a001      	add	r0, pc, #4	; (adr r0, 8003f00 <HAL_DMA_Init+0xcc>)
 8003efc:	f850 f022 	ldr.w	pc, [r0, r2, lsl #2]
 8003f00:	08003f17 	.word	0x08003f17
 8003f04:	08003ebb 	.word	0x08003ebb
 8003f08:	08003f17 	.word	0x08003f17
 8003f0c:	08003f11 	.word	0x08003f11
      if (hdma->Init.MemBurst == DMA_MBURST_INC16)
 8003f10:	f1b5 7fc0 	cmp.w	r5, #25165824	; 0x1800000
 8003f14:	d1d3      	bne.n	8003ebe <HAL_DMA_Init+0x8a>
        hdma->ErrorCode = HAL_DMA_ERROR_PARAM;
 8003f16:	2340      	movs	r3, #64	; 0x40
 8003f18:	6563      	str	r3, [r4, #84]	; 0x54
        hdma->State = HAL_DMA_STATE_READY;
 8003f1a:	2001      	movs	r0, #1
 8003f1c:	e7e5      	b.n	8003eea <HAL_DMA_Init+0xb6>
    switch (tmp)
 8003f1e:	2a02      	cmp	r2, #2
 8003f20:	d9f9      	bls.n	8003f16 <HAL_DMA_Init+0xe2>
 8003f22:	2a03      	cmp	r2, #3
 8003f24:	e7c8      	b.n	8003eb8 <HAL_DMA_Init+0x84>
    return HAL_ERROR;
 8003f26:	2001      	movs	r0, #1
 8003f28:	e7e1      	b.n	8003eee <HAL_DMA_Init+0xba>
 8003f2a:	bf00      	nop
 8003f2c:	f010803f 	.word	0xf010803f

08003f30 <HAL_DMA_Start_IT>:
{
 8003f30:	b570      	push	{r4, r5, r6, lr}
  __HAL_LOCK(hdma);
 8003f32:	f890 4034 	ldrb.w	r4, [r0, #52]	; 0x34
 8003f36:	2c01      	cmp	r4, #1
 8003f38:	d032      	beq.n	8003fa0 <HAL_DMA_Start_IT+0x70>
 8003f3a:	2401      	movs	r4, #1
 8003f3c:	f880 4034 	strb.w	r4, [r0, #52]	; 0x34
  if(HAL_DMA_STATE_READY == hdma->State)
 8003f40:	f890 4035 	ldrb.w	r4, [r0, #53]	; 0x35
  DMA_Base_Registers *regs = (DMA_Base_Registers *)hdma->StreamBaseAddress;
 8003f44:	6d86      	ldr	r6, [r0, #88]	; 0x58
  if(HAL_DMA_STATE_READY == hdma->State)
 8003f46:	2c01      	cmp	r4, #1
 8003f48:	f04f 0500 	mov.w	r5, #0
 8003f4c:	f04f 0402 	mov.w	r4, #2
 8003f50:	d124      	bne.n	8003f9c <HAL_DMA_Start_IT+0x6c>
    hdma->State = HAL_DMA_STATE_BUSY;
 8003f52:	f880 4035 	strb.w	r4, [r0, #53]	; 0x35
  hdma->Instance->CR &= (uint32_t)(~DMA_SxCR_DBM);
 8003f56:	6804      	ldr	r4, [r0, #0]
    hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 8003f58:	6545      	str	r5, [r0, #84]	; 0x54
  hdma->Instance->CR &= (uint32_t)(~DMA_SxCR_DBM);
 8003f5a:	6825      	ldr	r5, [r4, #0]
 8003f5c:	f425 2580 	bic.w	r5, r5, #262144	; 0x40000
 8003f60:	6025      	str	r5, [r4, #0]
  hdma->Instance->NDTR = DataLength;
 8003f62:	6063      	str	r3, [r4, #4]
  if((hdma->Init.Direction) == DMA_MEMORY_TO_PERIPH)
 8003f64:	6883      	ldr	r3, [r0, #8]
 8003f66:	2b40      	cmp	r3, #64	; 0x40
    hdma->Instance->PAR = DstAddress;
 8003f68:	bf0e      	itee	eq
 8003f6a:	60a2      	streq	r2, [r4, #8]
    hdma->Instance->PAR = SrcAddress;
 8003f6c:	60a1      	strne	r1, [r4, #8]
    hdma->Instance->M0AR = DstAddress;
 8003f6e:	60e2      	strne	r2, [r4, #12]
    regs->IFCR = 0x3FU << hdma->StreamIndex;
 8003f70:	6dc2      	ldr	r2, [r0, #92]	; 0x5c
    hdma->Instance->M0AR = SrcAddress;
 8003f72:	bf08      	it	eq
 8003f74:	60e1      	streq	r1, [r4, #12]
    regs->IFCR = 0x3FU << hdma->StreamIndex;
 8003f76:	233f      	movs	r3, #63	; 0x3f
 8003f78:	4093      	lsls	r3, r2
 8003f7a:	60b3      	str	r3, [r6, #8]
    hdma->Instance->CR  |= DMA_IT_TC | DMA_IT_TE | DMA_IT_DME;
 8003f7c:	6823      	ldr	r3, [r4, #0]
 8003f7e:	f043 0316 	orr.w	r3, r3, #22
 8003f82:	6023      	str	r3, [r4, #0]
    if(hdma->XferHalfCpltCallback != NULL)
 8003f84:	6c03      	ldr	r3, [r0, #64]	; 0x40
 8003f86:	b11b      	cbz	r3, 8003f90 <HAL_DMA_Start_IT+0x60>
      hdma->Instance->CR  |= DMA_IT_HT;
 8003f88:	6823      	ldr	r3, [r4, #0]
 8003f8a:	f043 0308 	orr.w	r3, r3, #8
 8003f8e:	6023      	str	r3, [r4, #0]
    __HAL_DMA_ENABLE(hdma);
 8003f90:	6823      	ldr	r3, [r4, #0]
 8003f92:	f043 0301 	orr.w	r3, r3, #1
 8003f96:	6023      	str	r3, [r4, #0]
  HAL_StatusTypeDef status = HAL_OK;
 8003f98:	2000      	movs	r0, #0
}
 8003f9a:	bd70      	pop	{r4, r5, r6, pc}
    __HAL_UNLOCK(hdma);	  
 8003f9c:	f880 5034 	strb.w	r5, [r0, #52]	; 0x34
  __HAL_LOCK(hdma);
 8003fa0:	2002      	movs	r0, #2
 8003fa2:	e7fa      	b.n	8003f9a <HAL_DMA_Start_IT+0x6a>

08003fa4 <DMA2D_SetConfig>:
  * @param  Width      The width of data to be transferred from source to destination.
  * @param  Height     The height of data to be transferred from source to destination.
  * @retval HAL status
  */
static void DMA2D_SetConfig(DMA2D_HandleTypeDef *hdma2d, uint32_t pdata, uint32_t DstAddress, uint32_t Width, uint32_t Height)
{
 8003fa4:	b570      	push	{r4, r5, r6, lr}
  uint32_t tmp2;
  uint32_t tmp3;
  uint32_t tmp4;

  /* Configure DMA2D data size */
  MODIFY_REG(hdma2d->Instance->NLR, (DMA2D_NLR_NL|DMA2D_NLR_PL), (Height| (Width << DMA2D_NLR_PL_Pos)));
 8003fa6:	6804      	ldr	r4, [r0, #0]
 8003fa8:	9d04      	ldr	r5, [sp, #16]
 8003faa:	6c66      	ldr	r6, [r4, #68]	; 0x44
 8003fac:	ea45 4303 	orr.w	r3, r5, r3, lsl #16
 8003fb0:	f006 4640 	and.w	r6, r6, #3221225472	; 0xc0000000
 8003fb4:	4333      	orrs	r3, r6
 8003fb6:	6463      	str	r3, [r4, #68]	; 0x44

  /* Configure DMA2D destination address */
  WRITE_REG(hdma2d->Instance->OMAR, DstAddress);

  /* Register to memory DMA2D mode selected */
  if (hdma2d->Init.Mode == DMA2D_R2M)
 8003fb8:	6843      	ldr	r3, [r0, #4]
  WRITE_REG(hdma2d->Instance->OMAR, DstAddress);
 8003fba:	63e2      	str	r2, [r4, #60]	; 0x3c
  if (hdma2d->Init.Mode == DMA2D_R2M)
 8003fbc:	f5b3 3f40 	cmp.w	r3, #196608	; 0x30000
 8003fc0:	d130      	bne.n	8004024 <DMA2D_SetConfig+0x80>
    tmp2 = pdata & DMA2D_OCOLR_RED_1;
    tmp3 = pdata & DMA2D_OCOLR_GREEN_1;
    tmp4 = pdata & DMA2D_OCOLR_BLUE_1;

    /* Prepare the value to be written to the OCOLR register according to the color mode */
    if (hdma2d->Init.ColorMode == DMA2D_OUTPUT_ARGB8888)
 8003fc2:	6886      	ldr	r6, [r0, #8]
 8003fc4:	b11e      	cbz	r6, 8003fce <DMA2D_SetConfig+0x2a>
    {
      tmp = (tmp3 | tmp2 | tmp1| tmp4);
    }
    else if (hdma2d->Init.ColorMode == DMA2D_OUTPUT_RGB888)
 8003fc6:	2e01      	cmp	r6, #1
 8003fc8:	d103      	bne.n	8003fd2 <DMA2D_SetConfig+0x2e>
    {
      tmp = (tmp3 | tmp2 | tmp4);
 8003fca:	f021 417f 	bic.w	r1, r1, #4278190080	; 0xff000000
      tmp3 = (tmp3 >> 12U);
      tmp4 = (tmp4 >> 4U );
      tmp  = ((tmp3 << 4U) | (tmp2 << 8U) | (tmp1 << 12U) | tmp4);
    }
    /* Write to DMA2D OCOLR register */
    WRITE_REG(hdma2d->Instance->OCOLR, tmp);
 8003fce:	63a1      	str	r1, [r4, #56]	; 0x38
  else /* M2M, M2M_PFC or M2M_Blending DMA2D Mode */
  {
    /* Configure DMA2D source address */
    WRITE_REG(hdma2d->Instance->FGMAR, pdata);
  }
}
 8003fd0:	bd70      	pop	{r4, r5, r6, pc}
    else if (hdma2d->Init.ColorMode == DMA2D_OUTPUT_RGB565)
 8003fd2:	2e02      	cmp	r6, #2
    tmp2 = pdata & DMA2D_OCOLR_RED_1;
 8003fd4:	f401 037f 	and.w	r3, r1, #16711680	; 0xff0000
    tmp3 = pdata & DMA2D_OCOLR_GREEN_1;
 8003fd8:	f401 457f 	and.w	r5, r1, #65280	; 0xff00
    tmp4 = pdata & DMA2D_OCOLR_BLUE_1;
 8003fdc:	b2c8      	uxtb	r0, r1
    else if (hdma2d->Init.ColorMode == DMA2D_OUTPUT_RGB565)
 8003fde:	d107      	bne.n	8003ff0 <DMA2D_SetConfig+0x4c>
      tmp2 = (tmp2 >> 19U);
 8003fe0:	0cd9      	lsrs	r1, r3, #19
      tmp3 = (tmp3 >> 10U);
 8003fe2:	0aad      	lsrs	r5, r5, #10
      tmp  = ((tmp3 << 5U) | (tmp2 << 11U) | tmp4);
 8003fe4:	02c9      	lsls	r1, r1, #11
 8003fe6:	ea41 1145 	orr.w	r1, r1, r5, lsl #5
 8003fea:	ea41 01d0 	orr.w	r1, r1, r0, lsr #3
 8003fee:	e7ee      	b.n	8003fce <DMA2D_SetConfig+0x2a>
    else if (hdma2d->Init.ColorMode == DMA2D_OUTPUT_ARGB1555)
 8003ff0:	2e03      	cmp	r6, #3
    tmp1 = pdata & DMA2D_OCOLR_ALPHA_1;
 8003ff2:	f001 427f 	and.w	r2, r1, #4278190080	; 0xff000000
    else if (hdma2d->Init.ColorMode == DMA2D_OUTPUT_ARGB1555)
 8003ff6:	d10a      	bne.n	800400e <DMA2D_SetConfig+0x6a>
      tmp2 = (tmp2 >> 19U);
 8003ff8:	0cdb      	lsrs	r3, r3, #19
      tmp3 = (tmp3 >> 11U);
 8003ffa:	0aed      	lsrs	r5, r5, #11
      tmp  = ((tmp3 << 5U) | (tmp2 << 10U) | (tmp1 << 15U) | tmp4);
 8003ffc:	029b      	lsls	r3, r3, #10
 8003ffe:	ea43 1345 	orr.w	r3, r3, r5, lsl #5
 8004002:	ea43 03d0 	orr.w	r3, r3, r0, lsr #3
      tmp1 = (tmp1 >> 31U);
 8004006:	0fd1      	lsrs	r1, r2, #31
      tmp  = ((tmp3 << 5U) | (tmp2 << 10U) | (tmp1 << 15U) | tmp4);
 8004008:	ea43 31c1 	orr.w	r1, r3, r1, lsl #15
 800400c:	e7df      	b.n	8003fce <DMA2D_SetConfig+0x2a>
      tmp2 = (tmp2 >> 20U);
 800400e:	0d19      	lsrs	r1, r3, #20
      tmp3 = (tmp3 >> 12U);
 8004010:	0b2d      	lsrs	r5, r5, #12
      tmp  = ((tmp3 << 4U) | (tmp2 << 8U) | (tmp1 << 12U) | tmp4);
 8004012:	0209      	lsls	r1, r1, #8
 8004014:	ea41 1105 	orr.w	r1, r1, r5, lsl #4
 8004018:	ea41 1110 	orr.w	r1, r1, r0, lsr #4
      tmp1 = (tmp1 >> 28U);
 800401c:	0f13      	lsrs	r3, r2, #28
      tmp  = ((tmp3 << 4U) | (tmp2 << 8U) | (tmp1 << 12U) | tmp4);
 800401e:	ea41 3103 	orr.w	r1, r1, r3, lsl #12
 8004022:	e7d4      	b.n	8003fce <DMA2D_SetConfig+0x2a>
    WRITE_REG(hdma2d->Instance->FGMAR, pdata);
 8004024:	60e1      	str	r1, [r4, #12]
}
 8004026:	e7d3      	b.n	8003fd0 <DMA2D_SetConfig+0x2c>

08004028 <HAL_DMA2D_Init>:
{
 8004028:	b510      	push	{r4, lr}
  if(hdma2d == NULL)
 800402a:	4604      	mov	r4, r0
 800402c:	b330      	cbz	r0, 800407c <HAL_DMA2D_Init+0x54>
  if(hdma2d->State == HAL_DMA2D_STATE_RESET)
 800402e:	f890 3039 	ldrb.w	r3, [r0, #57]	; 0x39
 8004032:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8004036:	b91b      	cbnz	r3, 8004040 <HAL_DMA2D_Init+0x18>
    hdma2d->Lock = HAL_UNLOCKED;
 8004038:	f880 2038 	strb.w	r2, [r0, #56]	; 0x38
    HAL_DMA2D_MspInit(hdma2d);
 800403c:	f7fe f8e4 	bl	8002208 <HAL_DMA2D_MspInit>
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, hdma2d->Init.Mode);
 8004040:	6822      	ldr	r2, [r4, #0]
 8004042:	6861      	ldr	r1, [r4, #4]
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 8004044:	2302      	movs	r3, #2
 8004046:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, hdma2d->Init.Mode);
 800404a:	6813      	ldr	r3, [r2, #0]
 800404c:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 8004050:	430b      	orrs	r3, r1
 8004052:	6013      	str	r3, [r2, #0]
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM, hdma2d->Init.ColorMode);
 8004054:	6b53      	ldr	r3, [r2, #52]	; 0x34
 8004056:	68a1      	ldr	r1, [r4, #8]
 8004058:	f023 0307 	bic.w	r3, r3, #7
 800405c:	430b      	orrs	r3, r1
 800405e:	6353      	str	r3, [r2, #52]	; 0x34
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
 8004060:	6c13      	ldr	r3, [r2, #64]	; 0x40
 8004062:	68e1      	ldr	r1, [r4, #12]
 8004064:	f423 537f 	bic.w	r3, r3, #16320	; 0x3fc0
 8004068:	f023 033f 	bic.w	r3, r3, #63	; 0x3f
 800406c:	430b      	orrs	r3, r1
 800406e:	6413      	str	r3, [r2, #64]	; 0x40
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 8004070:	2000      	movs	r0, #0
  hdma2d->State  = HAL_DMA2D_STATE_READY;
 8004072:	2301      	movs	r3, #1
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 8004074:	63e0      	str	r0, [r4, #60]	; 0x3c
  hdma2d->State  = HAL_DMA2D_STATE_READY;
 8004076:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
}
 800407a:	bd10      	pop	{r4, pc}
     return HAL_ERROR;
 800407c:	2001      	movs	r0, #1
 800407e:	e7fc      	b.n	800407a <HAL_DMA2D_Init+0x52>

08004080 <HAL_DMA2D_Start_IT>:
{
 8004080:	b573      	push	{r0, r1, r4, r5, r6, lr}
  __HAL_LOCK(hdma2d);
 8004082:	f890 4038 	ldrb.w	r4, [r0, #56]	; 0x38
 8004086:	2c01      	cmp	r4, #1
{
 8004088:	4605      	mov	r5, r0
 800408a:	f04f 0402 	mov.w	r4, #2
  __HAL_LOCK(hdma2d);
 800408e:	d013      	beq.n	80040b8 <HAL_DMA2D_Start_IT+0x38>
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 8004090:	f880 4039 	strb.w	r4, [r0, #57]	; 0x39
  __HAL_LOCK(hdma2d);
 8004094:	2601      	movs	r6, #1
  DMA2D_SetConfig(hdma2d, pdata, DstAddress, Width, Height);
 8004096:	9c06      	ldr	r4, [sp, #24]
  __HAL_LOCK(hdma2d);
 8004098:	f880 6038 	strb.w	r6, [r0, #56]	; 0x38
  DMA2D_SetConfig(hdma2d, pdata, DstAddress, Width, Height);
 800409c:	9400      	str	r4, [sp, #0]
 800409e:	f7ff ff81 	bl	8003fa4 <DMA2D_SetConfig>
  __HAL_DMA2D_ENABLE_IT(hdma2d, DMA2D_IT_TC|DMA2D_IT_TE|DMA2D_IT_CE);
 80040a2:	682b      	ldr	r3, [r5, #0]
 80040a4:	681a      	ldr	r2, [r3, #0]
 80040a6:	f442 520c 	orr.w	r2, r2, #8960	; 0x2300
 80040aa:	601a      	str	r2, [r3, #0]
  __HAL_DMA2D_ENABLE(hdma2d);
 80040ac:	681a      	ldr	r2, [r3, #0]
 80040ae:	4332      	orrs	r2, r6
 80040b0:	601a      	str	r2, [r3, #0]
  return HAL_OK;
 80040b2:	2000      	movs	r0, #0
}
 80040b4:	b002      	add	sp, #8
 80040b6:	bd70      	pop	{r4, r5, r6, pc}
  __HAL_LOCK(hdma2d);
 80040b8:	4620      	mov	r0, r4
 80040ba:	e7fb      	b.n	80040b4 <HAL_DMA2D_Start_IT+0x34>

080040bc <HAL_DMA2D_BlendingStart_IT>:
{
 80040bc:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80040be:	4615      	mov	r5, r2
 80040c0:	461a      	mov	r2, r3
  __HAL_LOCK(hdma2d);
 80040c2:	f890 3038 	ldrb.w	r3, [r0, #56]	; 0x38
 80040c6:	2b01      	cmp	r3, #1
{
 80040c8:	4604      	mov	r4, r0
 80040ca:	f04f 0302 	mov.w	r3, #2
  __HAL_LOCK(hdma2d);
 80040ce:	d016      	beq.n	80040fe <HAL_DMA2D_BlendingStart_IT+0x42>
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 80040d0:	f880 3039 	strb.w	r3, [r0, #57]	; 0x39
  WRITE_REG(hdma2d->Instance->BGMAR, SrcAddress2);
 80040d4:	6803      	ldr	r3, [r0, #0]
  __HAL_LOCK(hdma2d);
 80040d6:	2601      	movs	r6, #1
 80040d8:	f880 6038 	strb.w	r6, [r0, #56]	; 0x38
  WRITE_REG(hdma2d->Instance->BGMAR, SrcAddress2);
 80040dc:	615d      	str	r5, [r3, #20]
  DMA2D_SetConfig(hdma2d, SrcAddress1, DstAddress, Width, Height);
 80040de:	9b07      	ldr	r3, [sp, #28]
 80040e0:	9300      	str	r3, [sp, #0]
 80040e2:	9b06      	ldr	r3, [sp, #24]
 80040e4:	f7ff ff5e 	bl	8003fa4 <DMA2D_SetConfig>
  __HAL_DMA2D_ENABLE_IT(hdma2d, DMA2D_IT_TC|DMA2D_IT_TE|DMA2D_IT_CE);
 80040e8:	6823      	ldr	r3, [r4, #0]
 80040ea:	681a      	ldr	r2, [r3, #0]
 80040ec:	f442 520c 	orr.w	r2, r2, #8960	; 0x2300
 80040f0:	601a      	str	r2, [r3, #0]
  __HAL_DMA2D_ENABLE(hdma2d);
 80040f2:	681a      	ldr	r2, [r3, #0]
 80040f4:	4332      	orrs	r2, r6
 80040f6:	601a      	str	r2, [r3, #0]
  return HAL_OK;
 80040f8:	2000      	movs	r0, #0
}
 80040fa:	b002      	add	sp, #8
 80040fc:	bd70      	pop	{r4, r5, r6, pc}
  __HAL_LOCK(hdma2d);
 80040fe:	4618      	mov	r0, r3
 8004100:	e7fb      	b.n	80040fa <HAL_DMA2D_BlendingStart_IT+0x3e>

08004102 <HAL_DMA2D_Abort>:
   MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_ABORT|DMA2D_CR_START, DMA2D_CR_ABORT);
 8004102:	6802      	ldr	r2, [r0, #0]
{
 8004104:	b538      	push	{r3, r4, r5, lr}
   MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_ABORT|DMA2D_CR_START, DMA2D_CR_ABORT);
 8004106:	6813      	ldr	r3, [r2, #0]
 8004108:	f023 0305 	bic.w	r3, r3, #5
 800410c:	f043 0304 	orr.w	r3, r3, #4
 8004110:	6013      	str	r3, [r2, #0]
{
 8004112:	4604      	mov	r4, r0
  tickstart = HAL_GetTick();
 8004114:	f7ff fde6 	bl	8003ce4 <HAL_GetTick>
 8004118:	4605      	mov	r5, r0
  while((hdma2d->Instance->CR & DMA2D_CR_START) != 0U)
 800411a:	6823      	ldr	r3, [r4, #0]
 800411c:	6818      	ldr	r0, [r3, #0]
 800411e:	f010 0001 	ands.w	r0, r0, #1
 8004122:	d109      	bne.n	8004138 <HAL_DMA2D_Abort+0x36>
  __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TC|DMA2D_IT_TE|DMA2D_IT_CE);
 8004124:	681a      	ldr	r2, [r3, #0]
 8004126:	f422 520c 	bic.w	r2, r2, #8960	; 0x2300
 800412a:	601a      	str	r2, [r3, #0]
  hdma2d->State = HAL_DMA2D_STATE_READY;
 800412c:	2301      	movs	r3, #1
 800412e:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
  __HAL_UNLOCK(hdma2d);
 8004132:	f884 0038 	strb.w	r0, [r4, #56]	; 0x38
  return HAL_OK;
 8004136:	e00f      	b.n	8004158 <HAL_DMA2D_Abort+0x56>
    if((HAL_GetTick() - tickstart ) > DMA2D_TIMEOUT_ABORT)
 8004138:	f7ff fdd4 	bl	8003ce4 <HAL_GetTick>
 800413c:	1b40      	subs	r0, r0, r5
 800413e:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
 8004142:	d9ea      	bls.n	800411a <HAL_DMA2D_Abort+0x18>
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_TIMEOUT;
 8004144:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8004146:	f043 0320 	orr.w	r3, r3, #32
 800414a:	63e3      	str	r3, [r4, #60]	; 0x3c
      hdma2d->State = HAL_DMA2D_STATE_TIMEOUT;
 800414c:	2003      	movs	r0, #3
      __HAL_UNLOCK(hdma2d);
 800414e:	2300      	movs	r3, #0
      hdma2d->State = HAL_DMA2D_STATE_TIMEOUT;
 8004150:	f884 0039 	strb.w	r0, [r4, #57]	; 0x39
      __HAL_UNLOCK(hdma2d);
 8004154:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38
}
 8004158:	bd38      	pop	{r3, r4, r5, pc}

0800415a <HAL_DMA2D_CLUTLoading_Abort>:
{
 800415a:	b570      	push	{r4, r5, r6, lr}
  const __IO uint32_t * reg =  &(hdma2d->Instance->BGPFCCR); /* by default, point at background register */
 800415c:	6805      	ldr	r5, [r0, #0]
  SET_BIT(hdma2d->Instance->CR, DMA2D_CR_ABORT);
 800415e:	682a      	ldr	r2, [r5, #0]
 8004160:	f042 0204 	orr.w	r2, r2, #4
 8004164:	602a      	str	r2, [r5, #0]
  if(LayerIdx == DMA2D_FOREGROUND_LAYER)
 8004166:	2901      	cmp	r1, #1
{
 8004168:	4604      	mov	r4, r0
  const __IO uint32_t * reg =  &(hdma2d->Instance->BGPFCCR); /* by default, point at background register */
 800416a:	bf14      	ite	ne
 800416c:	3524      	addne	r5, #36	; 0x24
    reg  = &(hdma2d->Instance->FGPFCCR);
 800416e:	351c      	addeq	r5, #28
  tickstart = HAL_GetTick();
 8004170:	f7ff fdb8 	bl	8003ce4 <HAL_GetTick>
 8004174:	4606      	mov	r6, r0
  while((*reg & DMA2D_BGPFCCR_START) != 0U)
 8004176:	6828      	ldr	r0, [r5, #0]
 8004178:	f010 0020 	ands.w	r0, r0, #32
 800417c:	d10a      	bne.n	8004194 <HAL_DMA2D_CLUTLoading_Abort+0x3a>
  __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CTC | DMA2D_IT_TE | DMA2D_IT_CE |DMA2D_IT_CAE);
 800417e:	6822      	ldr	r2, [r4, #0]
 8004180:	6813      	ldr	r3, [r2, #0]
 8004182:	f423 5364 	bic.w	r3, r3, #14592	; 0x3900
 8004186:	6013      	str	r3, [r2, #0]
  hdma2d->State = HAL_DMA2D_STATE_READY;
 8004188:	2301      	movs	r3, #1
 800418a:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
  __HAL_UNLOCK(hdma2d);
 800418e:	f884 0038 	strb.w	r0, [r4, #56]	; 0x38
  return HAL_OK;
 8004192:	e00f      	b.n	80041b4 <HAL_DMA2D_CLUTLoading_Abort+0x5a>
    if((HAL_GetTick() - tickstart ) > DMA2D_TIMEOUT_ABORT)
 8004194:	f7ff fda6 	bl	8003ce4 <HAL_GetTick>
 8004198:	1b80      	subs	r0, r0, r6
 800419a:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
 800419e:	d9ea      	bls.n	8004176 <HAL_DMA2D_CLUTLoading_Abort+0x1c>
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_TIMEOUT;
 80041a0:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 80041a2:	f043 0320 	orr.w	r3, r3, #32
 80041a6:	63e3      	str	r3, [r4, #60]	; 0x3c
      hdma2d->State = HAL_DMA2D_STATE_TIMEOUT;
 80041a8:	2003      	movs	r0, #3
      __HAL_UNLOCK(hdma2d);
 80041aa:	2300      	movs	r3, #0
      hdma2d->State = HAL_DMA2D_STATE_TIMEOUT;
 80041ac:	f884 0039 	strb.w	r0, [r4, #57]	; 0x39
      __HAL_UNLOCK(hdma2d);
 80041b0:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38
}
 80041b4:	bd70      	pop	{r4, r5, r6, pc}
	...

080041b8 <HAL_DMA2D_DeInit>:
{
 80041b8:	b538      	push	{r3, r4, r5, lr}
  if(hdma2d == NULL)
 80041ba:	4605      	mov	r5, r0
 80041bc:	b908      	cbnz	r0, 80041c2 <HAL_DMA2D_DeInit+0xa>
     return HAL_ERROR;
 80041be:	2001      	movs	r0, #1
}
 80041c0:	bd38      	pop	{r3, r4, r5, pc}
  if (__HAL_RCC_DMA2D_IS_CLK_ENABLED())
 80041c2:	4b16      	ldr	r3, [pc, #88]	; (800421c <HAL_DMA2D_DeInit+0x64>)
 80041c4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80041c6:	0219      	lsls	r1, r3, #8
 80041c8:	d413      	bmi.n	80041f2 <HAL_DMA2D_DeInit+0x3a>
  hdma2d->Instance->CR       =    0U;
 80041ca:	682b      	ldr	r3, [r5, #0]
 80041cc:	2400      	movs	r4, #0
  hdma2d->Instance->IFCR     = 0x3FU;
 80041ce:	223f      	movs	r2, #63	; 0x3f
  hdma2d->Instance->CR       =    0U;
 80041d0:	601c      	str	r4, [r3, #0]
  HAL_DMA2D_MspDeInit(hdma2d);
 80041d2:	4628      	mov	r0, r5
  hdma2d->Instance->IFCR     = 0x3FU;
 80041d4:	609a      	str	r2, [r3, #8]
  hdma2d->Instance->FGOR     =    0U;
 80041d6:	611c      	str	r4, [r3, #16]
  hdma2d->Instance->BGOR     =    0U;
 80041d8:	619c      	str	r4, [r3, #24]
  hdma2d->Instance->FGPFCCR  =    0U;
 80041da:	61dc      	str	r4, [r3, #28]
  hdma2d->Instance->BGPFCCR  =    0U;
 80041dc:	625c      	str	r4, [r3, #36]	; 0x24
  hdma2d->Instance->OPFCCR   =    0U;
 80041de:	635c      	str	r4, [r3, #52]	; 0x34
  HAL_DMA2D_MspDeInit(hdma2d);
 80041e0:	f7fe f834 	bl	800224c <HAL_DMA2D_MspDeInit>
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 80041e4:	63ec      	str	r4, [r5, #60]	; 0x3c
  __HAL_UNLOCK(hdma2d);
 80041e6:	f885 4038 	strb.w	r4, [r5, #56]	; 0x38
  hdma2d->State  = HAL_DMA2D_STATE_RESET;
 80041ea:	f885 4039 	strb.w	r4, [r5, #57]	; 0x39
  return HAL_OK;
 80041ee:	4620      	mov	r0, r4
 80041f0:	e7e6      	b.n	80041c0 <HAL_DMA2D_DeInit+0x8>
 80041f2:	6803      	ldr	r3, [r0, #0]
    if ((hdma2d->Instance->CR & DMA2D_CR_START) == DMA2D_CR_START)
 80041f4:	6819      	ldr	r1, [r3, #0]
 80041f6:	f011 0101 	ands.w	r1, r1, #1
 80041fa:	d004      	beq.n	8004206 <HAL_DMA2D_DeInit+0x4e>
      if (HAL_DMA2D_Abort(hdma2d) != HAL_OK)
 80041fc:	f7ff ff81 	bl	8004102 <HAL_DMA2D_Abort>
          if (HAL_DMA2D_CLUTLoading_Abort(hdma2d, 1U) != HAL_OK)
 8004200:	2800      	cmp	r0, #0
 8004202:	d0e2      	beq.n	80041ca <HAL_DMA2D_DeInit+0x12>
 8004204:	e7db      	b.n	80041be <HAL_DMA2D_DeInit+0x6>
      if ((hdma2d->Instance->BGPFCCR & DMA2D_BGPFCCR_START) == DMA2D_BGPFCCR_START)
 8004206:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8004208:	0692      	lsls	r2, r2, #26
 800420a:	d502      	bpl.n	8004212 <HAL_DMA2D_DeInit+0x5a>
          if (HAL_DMA2D_CLUTLoading_Abort(hdma2d, 1U) != HAL_OK)
 800420c:	f7ff ffa5 	bl	800415a <HAL_DMA2D_CLUTLoading_Abort>
 8004210:	e7f6      	b.n	8004200 <HAL_DMA2D_DeInit+0x48>
        if ((hdma2d->Instance->FGPFCCR & DMA2D_FGPFCCR_START) == DMA2D_FGPFCCR_START)
 8004212:	69db      	ldr	r3, [r3, #28]
 8004214:	069b      	lsls	r3, r3, #26
 8004216:	d5d8      	bpl.n	80041ca <HAL_DMA2D_DeInit+0x12>
          if (HAL_DMA2D_CLUTLoading_Abort(hdma2d, 1U) != HAL_OK)
 8004218:	2101      	movs	r1, #1
 800421a:	e7f7      	b.n	800420c <HAL_DMA2D_DeInit+0x54>
 800421c:	40023800 	.word	0x40023800

08004220 <HAL_DMA2D_LineEventCallback>:
 8004220:	4770      	bx	lr

08004222 <HAL_DMA2D_CLUTLoadingCpltCallback>:
 8004222:	4770      	bx	lr

08004224 <HAL_DMA2D_IRQHandler>:
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
 8004224:	6803      	ldr	r3, [r0, #0]
{
 8004226:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
 8004228:	685e      	ldr	r6, [r3, #4]
  uint32_t crflags = READ_REG(hdma2d->Instance->CR);
 800422a:	681d      	ldr	r5, [r3, #0]
  if ((isrflags & DMA2D_FLAG_TE) != 0U)
 800422c:	07f2      	lsls	r2, r6, #31
{
 800422e:	4604      	mov	r4, r0
  if ((isrflags & DMA2D_FLAG_TE) != 0U)
 8004230:	d514      	bpl.n	800425c <HAL_DMA2D_IRQHandler+0x38>
    if ((crflags & DMA2D_IT_TE) != 0U)
 8004232:	05e9      	lsls	r1, r5, #23
 8004234:	d512      	bpl.n	800425c <HAL_DMA2D_IRQHandler+0x38>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TE);
 8004236:	681a      	ldr	r2, [r3, #0]
 8004238:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 800423c:	601a      	str	r2, [r3, #0]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_TE;
 800423e:	6bc2      	ldr	r2, [r0, #60]	; 0x3c
 8004240:	f042 0201 	orr.w	r2, r2, #1
 8004244:	63c2      	str	r2, [r0, #60]	; 0x3c
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TE);
 8004246:	2201      	movs	r2, #1
 8004248:	609a      	str	r2, [r3, #8]
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 800424a:	2304      	movs	r3, #4
 800424c:	f880 3039 	strb.w	r3, [r0, #57]	; 0x39
      __HAL_UNLOCK(hdma2d);
 8004250:	2300      	movs	r3, #0
 8004252:	f880 3038 	strb.w	r3, [r0, #56]	; 0x38
      if(hdma2d->XferErrorCallback != NULL)
 8004256:	6943      	ldr	r3, [r0, #20]
 8004258:	b103      	cbz	r3, 800425c <HAL_DMA2D_IRQHandler+0x38>
        hdma2d->XferErrorCallback(hdma2d);
 800425a:	4798      	blx	r3
  if ((isrflags & DMA2D_FLAG_CE) != 0U)
 800425c:	06b2      	lsls	r2, r6, #26
 800425e:	d516      	bpl.n	800428e <HAL_DMA2D_IRQHandler+0x6a>
    if ((crflags & DMA2D_IT_CE) != 0U)
 8004260:	04ab      	lsls	r3, r5, #18
 8004262:	d514      	bpl.n	800428e <HAL_DMA2D_IRQHandler+0x6a>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CE);
 8004264:	6823      	ldr	r3, [r4, #0]
 8004266:	681a      	ldr	r2, [r3, #0]
 8004268:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 800426c:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CE);
 800426e:	2220      	movs	r2, #32
 8004270:	609a      	str	r2, [r3, #8]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CE;
 8004272:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8004274:	f043 0302 	orr.w	r3, r3, #2
 8004278:	63e3      	str	r3, [r4, #60]	; 0x3c
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 800427a:	2304      	movs	r3, #4
 800427c:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
      __HAL_UNLOCK(hdma2d);
 8004280:	2300      	movs	r3, #0
 8004282:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38
      if(hdma2d->XferErrorCallback != NULL)
 8004286:	6963      	ldr	r3, [r4, #20]
 8004288:	b10b      	cbz	r3, 800428e <HAL_DMA2D_IRQHandler+0x6a>
        hdma2d->XferErrorCallback(hdma2d);
 800428a:	4620      	mov	r0, r4
 800428c:	4798      	blx	r3
  if ((isrflags & DMA2D_FLAG_CAE) != 0U)
 800428e:	0730      	lsls	r0, r6, #28
 8004290:	d516      	bpl.n	80042c0 <HAL_DMA2D_IRQHandler+0x9c>
    if ((crflags & DMA2D_IT_CAE) != 0U)
 8004292:	0529      	lsls	r1, r5, #20
 8004294:	d514      	bpl.n	80042c0 <HAL_DMA2D_IRQHandler+0x9c>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CAE);
 8004296:	6823      	ldr	r3, [r4, #0]
 8004298:	681a      	ldr	r2, [r3, #0]
 800429a:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 800429e:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CAE);
 80042a0:	2208      	movs	r2, #8
 80042a2:	609a      	str	r2, [r3, #8]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CAE;
 80042a4:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 80042a6:	f043 0304 	orr.w	r3, r3, #4
 80042aa:	63e3      	str	r3, [r4, #60]	; 0x3c
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 80042ac:	2304      	movs	r3, #4
 80042ae:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
      __HAL_UNLOCK(hdma2d);
 80042b2:	2300      	movs	r3, #0
 80042b4:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38
      if(hdma2d->XferErrorCallback != NULL)
 80042b8:	6963      	ldr	r3, [r4, #20]
 80042ba:	b10b      	cbz	r3, 80042c0 <HAL_DMA2D_IRQHandler+0x9c>
        hdma2d->XferErrorCallback(hdma2d);
 80042bc:	4620      	mov	r0, r4
 80042be:	4798      	blx	r3
  if ((isrflags & DMA2D_FLAG_TW) != 0U)
 80042c0:	0772      	lsls	r2, r6, #29
 80042c2:	d50b      	bpl.n	80042dc <HAL_DMA2D_IRQHandler+0xb8>
    if ((crflags & DMA2D_IT_TW) != 0U)
 80042c4:	056b      	lsls	r3, r5, #21
 80042c6:	d509      	bpl.n	80042dc <HAL_DMA2D_IRQHandler+0xb8>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TW);
 80042c8:	6823      	ldr	r3, [r4, #0]
 80042ca:	681a      	ldr	r2, [r3, #0]
 80042cc:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 80042d0:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TW);
 80042d2:	2204      	movs	r2, #4
 80042d4:	609a      	str	r2, [r3, #8]
      HAL_DMA2D_LineEventCallback(hdma2d);
 80042d6:	4620      	mov	r0, r4
 80042d8:	f7ff ffa2 	bl	8004220 <HAL_DMA2D_LineEventCallback>
  if ((isrflags & DMA2D_FLAG_TC) != 0U)
 80042dc:	07b0      	lsls	r0, r6, #30
 80042de:	d514      	bpl.n	800430a <HAL_DMA2D_IRQHandler+0xe6>
    if ((crflags & DMA2D_IT_TC) != 0U)
 80042e0:	05a9      	lsls	r1, r5, #22
 80042e2:	d512      	bpl.n	800430a <HAL_DMA2D_IRQHandler+0xe6>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TC);
 80042e4:	6823      	ldr	r3, [r4, #0]
 80042e6:	681a      	ldr	r2, [r3, #0]
 80042e8:	f422 7200 	bic.w	r2, r2, #512	; 0x200
 80042ec:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TC);
 80042ee:	2202      	movs	r2, #2
 80042f0:	609a      	str	r2, [r3, #8]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
 80042f2:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 80042f4:	63e3      	str	r3, [r4, #60]	; 0x3c
      hdma2d->State = HAL_DMA2D_STATE_READY;
 80042f6:	2301      	movs	r3, #1
 80042f8:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
      __HAL_UNLOCK(hdma2d);
 80042fc:	2300      	movs	r3, #0
 80042fe:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38
      if(hdma2d->XferCpltCallback != NULL)
 8004302:	6923      	ldr	r3, [r4, #16]
 8004304:	b10b      	cbz	r3, 800430a <HAL_DMA2D_IRQHandler+0xe6>
        hdma2d->XferCpltCallback(hdma2d);
 8004306:	4620      	mov	r0, r4
 8004308:	4798      	blx	r3
  if ((isrflags & DMA2D_FLAG_CTC) != 0U)
 800430a:	06f2      	lsls	r2, r6, #27
 800430c:	d513      	bpl.n	8004336 <HAL_DMA2D_IRQHandler+0x112>
    if ((crflags & DMA2D_IT_CTC) != 0U)
 800430e:	04eb      	lsls	r3, r5, #19
 8004310:	d511      	bpl.n	8004336 <HAL_DMA2D_IRQHandler+0x112>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CTC);
 8004312:	6823      	ldr	r3, [r4, #0]
 8004314:	681a      	ldr	r2, [r3, #0]
 8004316:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
 800431a:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CTC);
 800431c:	2210      	movs	r2, #16
 800431e:	609a      	str	r2, [r3, #8]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
 8004320:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8004322:	63e3      	str	r3, [r4, #60]	; 0x3c
      hdma2d->State = HAL_DMA2D_STATE_READY;
 8004324:	2301      	movs	r3, #1
 8004326:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
      __HAL_UNLOCK(hdma2d);
 800432a:	2300      	movs	r3, #0
 800432c:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38
      HAL_DMA2D_CLUTLoadingCpltCallback(hdma2d);
 8004330:	4620      	mov	r0, r4
 8004332:	f7ff ff76 	bl	8004222 <HAL_DMA2D_CLUTLoadingCpltCallback>
}
 8004336:	bd70      	pop	{r4, r5, r6, pc}

08004338 <HAL_DMA2D_ConfigLayer>:
  __HAL_LOCK(hdma2d);
 8004338:	f890 3038 	ldrb.w	r3, [r0, #56]	; 0x38
 800433c:	2b01      	cmp	r3, #1
{
 800433e:	b5f0      	push	{r4, r5, r6, r7, lr}
 8004340:	f04f 0302 	mov.w	r3, #2
  __HAL_LOCK(hdma2d);
 8004344:	d036      	beq.n	80043b4 <HAL_DMA2D_ConfigLayer+0x7c>
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos);
 8004346:	010e      	lsls	r6, r1, #4
  __HAL_LOCK(hdma2d);
 8004348:	2201      	movs	r2, #1
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 800434a:	f880 3039 	strb.w	r3, [r0, #57]	; 0x39
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos);
 800434e:	1983      	adds	r3, r0, r6
  __HAL_LOCK(hdma2d);
 8004350:	f880 2038 	strb.w	r2, [r0, #56]	; 0x38
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos);
 8004354:	e9d3 5207 	ldrd	r5, r2, [r3, #28]
 8004358:	ea45 4202 	orr.w	r2, r5, r2, lsl #16
  if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 800435c:	3d09      	subs	r5, #9
 800435e:	2d01      	cmp	r5, #1
 8004360:	6a5c      	ldr	r4, [r3, #36]	; 0x24
 8004362:	4f19      	ldr	r7, [pc, #100]	; (80043c8 <HAL_DMA2D_ConfigLayer+0x90>)
 8004364:	6803      	ldr	r3, [r0, #0]
 8004366:	d80f      	bhi.n	8004388 <HAL_DMA2D_ConfigLayer+0x50>
    regValue |= (pLayerCfg->InputAlpha & DMA2D_BGPFCCR_ALPHA);
 8004368:	f004 4c7f 	and.w	ip, r4, #4278190080	; 0xff000000
 800436c:	ea4c 0202 	orr.w	r2, ip, r2
  if(LayerIdx == DMA2D_BACKGROUND_LAYER)
 8004370:	b969      	cbnz	r1, 800438e <HAL_DMA2D_ConfigLayer+0x56>
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
 8004372:	6a59      	ldr	r1, [r3, #36]	; 0x24
 8004374:	4039      	ands	r1, r7
 8004376:	430a      	orrs	r2, r1
 8004378:	625a      	str	r2, [r3, #36]	; 0x24
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
 800437a:	6982      	ldr	r2, [r0, #24]
 800437c:	619a      	str	r2, [r3, #24]
      WRITE_REG(hdma2d->Instance->BGCOLR, pLayerCfg->InputAlpha & (DMA2D_BGCOLR_BLUE|DMA2D_BGCOLR_GREEN|DMA2D_BGCOLR_RED));
 800437e:	6a42      	ldr	r2, [r0, #36]	; 0x24
 8004380:	f022 427f 	bic.w	r2, r2, #4278190080	; 0xff000000
 8004384:	629a      	str	r2, [r3, #40]	; 0x28
 8004386:	e00f      	b.n	80043a8 <HAL_DMA2D_ConfigLayer+0x70>
    regValue |=  (pLayerCfg->InputAlpha << DMA2D_BGPFCCR_ALPHA_Pos);
 8004388:	ea42 6204 	orr.w	r2, r2, r4, lsl #24
  if(LayerIdx == DMA2D_BACKGROUND_LAYER)
 800438c:	b1a1      	cbz	r1, 80043b8 <HAL_DMA2D_ConfigLayer+0x80>
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
 800438e:	69d9      	ldr	r1, [r3, #28]
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
 8004390:	4406      	add	r6, r0
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
 8004392:	4039      	ands	r1, r7
 8004394:	430a      	orrs	r2, r1
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 8004396:	2d01      	cmp	r5, #1
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
 8004398:	61da      	str	r2, [r3, #28]
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE|DMA2D_FGCOLR_GREEN|DMA2D_FGCOLR_RED));
 800439a:	bf98      	it	ls
 800439c:	f024 447f 	bicls.w	r4, r4, #4278190080	; 0xff000000
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
 80043a0:	69b2      	ldr	r2, [r6, #24]
 80043a2:	611a      	str	r2, [r3, #16]
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE|DMA2D_FGCOLR_GREEN|DMA2D_FGCOLR_RED));
 80043a4:	bf98      	it	ls
 80043a6:	621c      	strls	r4, [r3, #32]
  hdma2d->State = HAL_DMA2D_STATE_READY;
 80043a8:	2301      	movs	r3, #1
 80043aa:	f880 3039 	strb.w	r3, [r0, #57]	; 0x39
  __HAL_UNLOCK(hdma2d);
 80043ae:	2300      	movs	r3, #0
 80043b0:	f880 3038 	strb.w	r3, [r0, #56]	; 0x38
  __HAL_LOCK(hdma2d);
 80043b4:	4618      	mov	r0, r3
}
 80043b6:	bdf0      	pop	{r4, r5, r6, r7, pc}
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
 80043b8:	6a59      	ldr	r1, [r3, #36]	; 0x24
 80043ba:	4039      	ands	r1, r7
 80043bc:	430a      	orrs	r2, r1
 80043be:	625a      	str	r2, [r3, #36]	; 0x24
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
 80043c0:	6982      	ldr	r2, [r0, #24]
 80043c2:	619a      	str	r2, [r3, #24]
 80043c4:	e7f0      	b.n	80043a8 <HAL_DMA2D_ConfigLayer+0x70>
 80043c6:	bf00      	nop
 80043c8:	00fcfff0 	.word	0x00fcfff0

080043cc <HAL_GPIO_Init>:
  * @param  GPIO_Init pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
 80043cc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80043d0:	b085      	sub	sp, #20
  for(position = 0U; position < GPIO_NUMBER; position++)
  {
    /* Get the IO position */
    ioposition = 0x01U << position;
    /* Get the current IO position */
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 80043d2:	680b      	ldr	r3, [r1, #0]
      /*--------------------- EXTI Mode Configuration ------------------------*/
      /* Configure the External Interrupt or event for the current IO */
      if((GPIO_Init->Mode & EXTI_MODE) == EXTI_MODE)
      {
        /* Enable SYSCFG Clock */
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 80043d4:	f8df 81c4 	ldr.w	r8, [pc, #452]	; 800459c <HAL_GPIO_Init+0x1d0>
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
        SYSCFG->EXTICR[position >> 2U] = temp;

        /* Clear EXTI line configuration */
        temp = EXTI->IMR;
 80043d8:	4a6e      	ldr	r2, [pc, #440]	; (8004594 <HAL_GPIO_Init+0x1c8>)
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 80043da:	f8df 91c4 	ldr.w	r9, [pc, #452]	; 80045a0 <HAL_GPIO_Init+0x1d4>
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 80043de:	9301      	str	r3, [sp, #4]
  for(position = 0U; position < GPIO_NUMBER; position++)
 80043e0:	2300      	movs	r3, #0
    ioposition = 0x01U << position;
 80043e2:	2401      	movs	r4, #1
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 80043e4:	9d01      	ldr	r5, [sp, #4]
    ioposition = 0x01U << position;
 80043e6:	409c      	lsls	r4, r3
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 80043e8:	4025      	ands	r5, r4
    if(iocurrent == ioposition)
 80043ea:	42ac      	cmp	r4, r5
 80043ec:	f040 80b8 	bne.w	8004560 <HAL_GPIO_Init+0x194>
      if((GPIO_Init->Mode == GPIO_MODE_OUTPUT_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_PP) ||
 80043f0:	684c      	ldr	r4, [r1, #4]
 80043f2:	f024 0c10 	bic.w	ip, r4, #16
 80043f6:	ea4f 0e43 	mov.w	lr, r3, lsl #1
 80043fa:	2603      	movs	r6, #3
 80043fc:	f10c 37ff 	add.w	r7, ip, #4294967295
 8004400:	fa06 f60e 	lsl.w	r6, r6, lr
 8004404:	2f01      	cmp	r7, #1
 8004406:	ea6f 0606 	mvn.w	r6, r6
 800440a:	d811      	bhi.n	8004430 <HAL_GPIO_Init+0x64>
        temp = GPIOx->OSPEEDR; 
 800440c:	6887      	ldr	r7, [r0, #8]
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 800440e:	ea07 0a06 	and.w	sl, r7, r6
        temp |= (GPIO_Init->Speed << (position * 2U));
 8004412:	68cf      	ldr	r7, [r1, #12]
 8004414:	fa07 f70e 	lsl.w	r7, r7, lr
 8004418:	ea47 070a 	orr.w	r7, r7, sl
        GPIOx->OSPEEDR = temp;
 800441c:	6087      	str	r7, [r0, #8]
        temp = GPIOx->OTYPER;
 800441e:	6847      	ldr	r7, [r0, #4]
        temp &= ~(GPIO_OTYPER_OT_0 << position) ;
 8004420:	ea27 0a05 	bic.w	sl, r7, r5
        temp |= (((GPIO_Init->Mode & GPIO_OUTPUT_TYPE) >> 4U) << position);
 8004424:	f3c4 1700 	ubfx	r7, r4, #4, #1
 8004428:	409f      	lsls	r7, r3
 800442a:	ea47 070a 	orr.w	r7, r7, sl
        GPIOx->OTYPER = temp;
 800442e:	6047      	str	r7, [r0, #4]
      temp = GPIOx->PUPDR;
 8004430:	68c7      	ldr	r7, [r0, #12]
      temp &= ~(GPIO_PUPDR_PUPDR0 << (position * 2U));
 8004432:	ea07 0a06 	and.w	sl, r7, r6
      temp |= ((GPIO_Init->Pull) << (position * 2U));
 8004436:	688f      	ldr	r7, [r1, #8]
 8004438:	fa07 f70e 	lsl.w	r7, r7, lr
 800443c:	ea47 070a 	orr.w	r7, r7, sl
      if((GPIO_Init->Mode == GPIO_MODE_AF_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_OD))
 8004440:	f1bc 0f02 	cmp.w	ip, #2
      GPIOx->PUPDR = temp;
 8004444:	60c7      	str	r7, [r0, #12]
      if((GPIO_Init->Mode == GPIO_MODE_AF_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_OD))
 8004446:	d116      	bne.n	8004476 <HAL_GPIO_Init+0xaa>
        temp = GPIOx->AFR[position >> 3U];
 8004448:	ea4f 0ad3 	mov.w	sl, r3, lsr #3
 800444c:	eb00 0a8a 	add.w	sl, r0, sl, lsl #2
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 8004450:	f003 0b07 	and.w	fp, r3, #7
        temp = GPIOx->AFR[position >> 3U];
 8004454:	f8da 7020 	ldr.w	r7, [sl, #32]
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 8004458:	ea4f 0b8b 	mov.w	fp, fp, lsl #2
 800445c:	f04f 0c0f 	mov.w	ip, #15
 8004460:	fa0c fc0b 	lsl.w	ip, ip, fp
 8004464:	ea27 0c0c 	bic.w	ip, r7, ip
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 8004468:	690f      	ldr	r7, [r1, #16]
 800446a:	fa07 f70b 	lsl.w	r7, r7, fp
 800446e:	ea47 070c 	orr.w	r7, r7, ip
        GPIOx->AFR[position >> 3U] = temp;
 8004472:	f8ca 7020 	str.w	r7, [sl, #32]
      temp = GPIOx->MODER;
 8004476:	6807      	ldr	r7, [r0, #0]
      temp &= ~(GPIO_MODER_MODER0 << (position * 2U));
 8004478:	403e      	ands	r6, r7
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 800447a:	f004 0703 	and.w	r7, r4, #3
 800447e:	fa07 fe0e 	lsl.w	lr, r7, lr
 8004482:	ea4e 0606 	orr.w	r6, lr, r6
      GPIOx->MODER = temp;
 8004486:	6006      	str	r6, [r0, #0]
      if((GPIO_Init->Mode & EXTI_MODE) == EXTI_MODE)
 8004488:	00e6      	lsls	r6, r4, #3
 800448a:	d569      	bpl.n	8004560 <HAL_GPIO_Init+0x194>
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 800448c:	f04f 0b00 	mov.w	fp, #0
 8004490:	f8cd b00c 	str.w	fp, [sp, #12]
 8004494:	f8d8 7044 	ldr.w	r7, [r8, #68]	; 0x44
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 8004498:	4e3f      	ldr	r6, [pc, #252]	; (8004598 <HAL_GPIO_Init+0x1cc>)
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 800449a:	f447 4780 	orr.w	r7, r7, #16384	; 0x4000
 800449e:	f8c8 7044 	str.w	r7, [r8, #68]	; 0x44
 80044a2:	f8d8 7044 	ldr.w	r7, [r8, #68]	; 0x44
 80044a6:	f407 4780 	and.w	r7, r7, #16384	; 0x4000
 80044aa:	9703      	str	r7, [sp, #12]
 80044ac:	9f03      	ldr	r7, [sp, #12]
 80044ae:	f023 0703 	bic.w	r7, r3, #3
 80044b2:	f107 4780 	add.w	r7, r7, #1073741824	; 0x40000000
 80044b6:	f507 379c 	add.w	r7, r7, #79872	; 0x13800
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 80044ba:	f003 0e03 	and.w	lr, r3, #3
        temp = SYSCFG->EXTICR[position >> 2U];
 80044be:	f8d7 a008 	ldr.w	sl, [r7, #8]
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 80044c2:	ea4f 0e8e 	mov.w	lr, lr, lsl #2
 80044c6:	f04f 0c0f 	mov.w	ip, #15
 80044ca:	fa0c fc0e 	lsl.w	ip, ip, lr
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 80044ce:	42b0      	cmp	r0, r6
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 80044d0:	ea2a 0c0c 	bic.w	ip, sl, ip
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 80044d4:	d04b      	beq.n	800456e <HAL_GPIO_Init+0x1a2>
 80044d6:	f506 6680 	add.w	r6, r6, #1024	; 0x400
 80044da:	42b0      	cmp	r0, r6
 80044dc:	d049      	beq.n	8004572 <HAL_GPIO_Init+0x1a6>
 80044de:	f506 6680 	add.w	r6, r6, #1024	; 0x400
 80044e2:	42b0      	cmp	r0, r6
 80044e4:	d047      	beq.n	8004576 <HAL_GPIO_Init+0x1aa>
 80044e6:	f506 6680 	add.w	r6, r6, #1024	; 0x400
 80044ea:	42b0      	cmp	r0, r6
 80044ec:	d045      	beq.n	800457a <HAL_GPIO_Init+0x1ae>
 80044ee:	f506 6680 	add.w	r6, r6, #1024	; 0x400
 80044f2:	42b0      	cmp	r0, r6
 80044f4:	d043      	beq.n	800457e <HAL_GPIO_Init+0x1b2>
 80044f6:	4548      	cmp	r0, r9
 80044f8:	d043      	beq.n	8004582 <HAL_GPIO_Init+0x1b6>
 80044fa:	f506 6600 	add.w	r6, r6, #2048	; 0x800
 80044fe:	42b0      	cmp	r0, r6
 8004500:	d041      	beq.n	8004586 <HAL_GPIO_Init+0x1ba>
 8004502:	f506 6680 	add.w	r6, r6, #1024	; 0x400
 8004506:	42b0      	cmp	r0, r6
 8004508:	d03f      	beq.n	800458a <HAL_GPIO_Init+0x1be>
 800450a:	f506 6680 	add.w	r6, r6, #1024	; 0x400
 800450e:	42b0      	cmp	r0, r6
 8004510:	d03d      	beq.n	800458e <HAL_GPIO_Init+0x1c2>
 8004512:	f506 6680 	add.w	r6, r6, #1024	; 0x400
 8004516:	42b0      	cmp	r0, r6
 8004518:	bf14      	ite	ne
 800451a:	260a      	movne	r6, #10
 800451c:	2609      	moveq	r6, #9
 800451e:	fa06 f60e 	lsl.w	r6, r6, lr
 8004522:	ea46 060c 	orr.w	r6, r6, ip
        SYSCFG->EXTICR[position >> 2U] = temp;
 8004526:	60be      	str	r6, [r7, #8]
        temp = EXTI->IMR;
 8004528:	6816      	ldr	r6, [r2, #0]
        temp &= ~((uint32_t)iocurrent);
 800452a:	43ef      	mvns	r7, r5
        if((GPIO_Init->Mode & GPIO_MODE_IT) == GPIO_MODE_IT)
 800452c:	f414 3f80 	tst.w	r4, #65536	; 0x10000
        temp &= ~((uint32_t)iocurrent);
 8004530:	bf0c      	ite	eq
 8004532:	403e      	andeq	r6, r7
        {
          temp |= iocurrent;
 8004534:	432e      	orrne	r6, r5
        }
        EXTI->IMR = temp;
 8004536:	6016      	str	r6, [r2, #0]

        temp = EXTI->EMR;
 8004538:	6856      	ldr	r6, [r2, #4]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & GPIO_MODE_EVT) == GPIO_MODE_EVT)
 800453a:	f414 3f00 	tst.w	r4, #131072	; 0x20000
        temp &= ~((uint32_t)iocurrent);
 800453e:	bf0c      	ite	eq
 8004540:	403e      	andeq	r6, r7
        {
          temp |= iocurrent;
 8004542:	432e      	orrne	r6, r5
        }
        EXTI->EMR = temp;
 8004544:	6056      	str	r6, [r2, #4]

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR;
 8004546:	6896      	ldr	r6, [r2, #8]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & RISING_EDGE) == RISING_EDGE)
 8004548:	f414 1f80 	tst.w	r4, #1048576	; 0x100000
        temp &= ~((uint32_t)iocurrent);
 800454c:	bf0c      	ite	eq
 800454e:	403e      	andeq	r6, r7
        {
          temp |= iocurrent;
 8004550:	432e      	orrne	r6, r5
        }
        EXTI->RTSR = temp;
 8004552:	6096      	str	r6, [r2, #8]

        temp = EXTI->FTSR;
 8004554:	68d6      	ldr	r6, [r2, #12]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & FALLING_EDGE) == FALLING_EDGE)
 8004556:	02a4      	lsls	r4, r4, #10
        temp &= ~((uint32_t)iocurrent);
 8004558:	bf54      	ite	pl
 800455a:	403e      	andpl	r6, r7
        {
          temp |= iocurrent;
 800455c:	432e      	orrmi	r6, r5
        }
        EXTI->FTSR = temp;
 800455e:	60d6      	str	r6, [r2, #12]
  for(position = 0U; position < GPIO_NUMBER; position++)
 8004560:	3301      	adds	r3, #1
 8004562:	2b10      	cmp	r3, #16
 8004564:	f47f af3d 	bne.w	80043e2 <HAL_GPIO_Init+0x16>
      }
    }
  }
}
 8004568:	b005      	add	sp, #20
 800456a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 800456e:	465e      	mov	r6, fp
 8004570:	e7d5      	b.n	800451e <HAL_GPIO_Init+0x152>
 8004572:	2601      	movs	r6, #1
 8004574:	e7d3      	b.n	800451e <HAL_GPIO_Init+0x152>
 8004576:	2602      	movs	r6, #2
 8004578:	e7d1      	b.n	800451e <HAL_GPIO_Init+0x152>
 800457a:	2603      	movs	r6, #3
 800457c:	e7cf      	b.n	800451e <HAL_GPIO_Init+0x152>
 800457e:	2604      	movs	r6, #4
 8004580:	e7cd      	b.n	800451e <HAL_GPIO_Init+0x152>
 8004582:	2605      	movs	r6, #5
 8004584:	e7cb      	b.n	800451e <HAL_GPIO_Init+0x152>
 8004586:	2606      	movs	r6, #6
 8004588:	e7c9      	b.n	800451e <HAL_GPIO_Init+0x152>
 800458a:	2607      	movs	r6, #7
 800458c:	e7c7      	b.n	800451e <HAL_GPIO_Init+0x152>
 800458e:	2608      	movs	r6, #8
 8004590:	e7c5      	b.n	800451e <HAL_GPIO_Init+0x152>
 8004592:	bf00      	nop
 8004594:	40013c00 	.word	0x40013c00
 8004598:	40020000 	.word	0x40020000
 800459c:	40023800 	.word	0x40023800
 80045a0:	40021400 	.word	0x40021400

080045a4 <HAL_GPIO_WritePin>:
{
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if(PinState != GPIO_PIN_RESET)
 80045a4:	b10a      	cbz	r2, 80045aa <HAL_GPIO_WritePin+0x6>
  {
    GPIOx->BSRR = GPIO_Pin;
  }
  else
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
 80045a6:	6181      	str	r1, [r0, #24]
  }
}
 80045a8:	4770      	bx	lr
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
 80045aa:	0409      	lsls	r1, r1, #16
 80045ac:	e7fb      	b.n	80045a6 <HAL_GPIO_WritePin+0x2>

080045ae <I2C_IsAcknowledgeFailed>:
  *                the configuration information for the specified I2C.
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_IsAcknowledgeFailed(I2C_HandleTypeDef *hi2c)
{
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 80045ae:	6801      	ldr	r1, [r0, #0]
 80045b0:	694b      	ldr	r3, [r1, #20]
 80045b2:	f413 6380 	ands.w	r3, r3, #1024	; 0x400
 80045b6:	f04f 0200 	mov.w	r2, #0
 80045ba:	d010      	beq.n	80045de <I2C_IsAcknowledgeFailed+0x30>
  {
    /* Clear NACKF Flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 80045bc:	f46f 6380 	mvn.w	r3, #1024	; 0x400
 80045c0:	614b      	str	r3, [r1, #20]

    hi2c->PreviousState       = I2C_STATE_NONE;
    hi2c->State               = HAL_I2C_STATE_READY;
 80045c2:	2320      	movs	r3, #32
    hi2c->PreviousState       = I2C_STATE_NONE;
 80045c4:	6302      	str	r2, [r0, #48]	; 0x30
    hi2c->State               = HAL_I2C_STATE_READY;
 80045c6:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d
    hi2c->Mode                = HAL_I2C_MODE_NONE;
 80045ca:	f880 203e 	strb.w	r2, [r0, #62]	; 0x3e
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 80045ce:	6c03      	ldr	r3, [r0, #64]	; 0x40

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 80045d0:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 80045d4:	f043 0304 	orr.w	r3, r3, #4
 80045d8:	6403      	str	r3, [r0, #64]	; 0x40

    return HAL_ERROR;
 80045da:	2001      	movs	r0, #1
 80045dc:	4770      	bx	lr
  }
  return HAL_OK;
 80045de:	4618      	mov	r0, r3
}
 80045e0:	4770      	bx	lr

080045e2 <I2C_WaitOnMasterAddressFlagUntilTimeout>:
{
 80045e2:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80045e6:	4604      	mov	r4, r0
 80045e8:	4616      	mov	r6, r2
 80045ea:	4698      	mov	r8, r3
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 80045ec:	b28f      	uxth	r7, r1
 80045ee:	6825      	ldr	r5, [r4, #0]
 80045f0:	6968      	ldr	r0, [r5, #20]
 80045f2:	ea37 0000 	bics.w	r0, r7, r0
 80045f6:	d017      	beq.n	8004628 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x46>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 80045f8:	696b      	ldr	r3, [r5, #20]
 80045fa:	055a      	lsls	r2, r3, #21
 80045fc:	d516      	bpl.n	800462c <I2C_WaitOnMasterAddressFlagUntilTimeout+0x4a>
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 80045fe:	682b      	ldr	r3, [r5, #0]
 8004600:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8004604:	602b      	str	r3, [r5, #0]
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8004606:	f46f 6380 	mvn.w	r3, #1024	; 0x400
 800460a:	616b      	str	r3, [r5, #20]
      hi2c->State               = HAL_I2C_STATE_READY;
 800460c:	2220      	movs	r2, #32
      hi2c->PreviousState       = I2C_STATE_NONE;
 800460e:	2300      	movs	r3, #0
 8004610:	6323      	str	r3, [r4, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 8004612:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 8004616:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800461a:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800461c:	f042 0204 	orr.w	r2, r2, #4
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8004620:	6422      	str	r2, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 8004622:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
        return HAL_ERROR;
 8004626:	2001      	movs	r0, #1
}
 8004628:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    if (Timeout != HAL_MAX_DELAY)
 800462c:	1c73      	adds	r3, r6, #1
 800462e:	d0df      	beq.n	80045f0 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xe>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8004630:	f7ff fb58 	bl	8003ce4 <HAL_GetTick>
 8004634:	eba0 0008 	sub.w	r0, r0, r8
 8004638:	42b0      	cmp	r0, r6
 800463a:	d801      	bhi.n	8004640 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x5e>
 800463c:	2e00      	cmp	r6, #0
 800463e:	d1d6      	bne.n	80045ee <I2C_WaitOnMasterAddressFlagUntilTimeout+0xc>
        hi2c->PreviousState       = I2C_STATE_NONE;
 8004640:	2300      	movs	r3, #0
        hi2c->State               = HAL_I2C_STATE_READY;
 8004642:	2220      	movs	r2, #32
        hi2c->PreviousState       = I2C_STATE_NONE;
 8004644:	6323      	str	r3, [r4, #48]	; 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 8004646:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 800464a:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800464e:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8004650:	f042 0220 	orr.w	r2, r2, #32
 8004654:	e7e4      	b.n	8004620 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x3e>

08004656 <I2C_WaitOnBTFFlagUntilTimeout>:
{
 8004656:	b570      	push	{r4, r5, r6, lr}
 8004658:	4604      	mov	r4, r0
 800465a:	460d      	mov	r5, r1
 800465c:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 800465e:	6823      	ldr	r3, [r4, #0]
 8004660:	695b      	ldr	r3, [r3, #20]
 8004662:	075b      	lsls	r3, r3, #29
 8004664:	d501      	bpl.n	800466a <I2C_WaitOnBTFFlagUntilTimeout+0x14>
  return HAL_OK;
 8004666:	2000      	movs	r0, #0
}
 8004668:	bd70      	pop	{r4, r5, r6, pc}
    if (I2C_IsAcknowledgeFailed(hi2c) != HAL_OK)
 800466a:	4620      	mov	r0, r4
 800466c:	f7ff ff9f 	bl	80045ae <I2C_IsAcknowledgeFailed>
 8004670:	b9a8      	cbnz	r0, 800469e <I2C_WaitOnBTFFlagUntilTimeout+0x48>
    if (Timeout != HAL_MAX_DELAY)
 8004672:	1c6a      	adds	r2, r5, #1
 8004674:	d0f3      	beq.n	800465e <I2C_WaitOnBTFFlagUntilTimeout+0x8>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8004676:	f7ff fb35 	bl	8003ce4 <HAL_GetTick>
 800467a:	1b80      	subs	r0, r0, r6
 800467c:	42a8      	cmp	r0, r5
 800467e:	d801      	bhi.n	8004684 <I2C_WaitOnBTFFlagUntilTimeout+0x2e>
 8004680:	2d00      	cmp	r5, #0
 8004682:	d1ec      	bne.n	800465e <I2C_WaitOnBTFFlagUntilTimeout+0x8>
        hi2c->PreviousState     = I2C_STATE_NONE;
 8004684:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 8004686:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 8004688:	6323      	str	r3, [r4, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 800468a:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 800468e:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8004692:	6c22      	ldr	r2, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 8004694:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8004698:	f042 0220 	orr.w	r2, r2, #32
 800469c:	6422      	str	r2, [r4, #64]	; 0x40
      return HAL_ERROR;
 800469e:	2001      	movs	r0, #1
 80046a0:	e7e2      	b.n	8004668 <I2C_WaitOnBTFFlagUntilTimeout+0x12>

080046a2 <I2C_WaitOnRXNEFlagUntilTimeout>:
{
 80046a2:	b570      	push	{r4, r5, r6, lr}
 80046a4:	4604      	mov	r4, r0
 80046a6:	460d      	mov	r5, r1
 80046a8:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 80046aa:	6820      	ldr	r0, [r4, #0]
 80046ac:	6943      	ldr	r3, [r0, #20]
 80046ae:	f013 0340 	ands.w	r3, r3, #64	; 0x40
 80046b2:	d001      	beq.n	80046b8 <I2C_WaitOnRXNEFlagUntilTimeout+0x16>
  return HAL_OK;
 80046b4:	2000      	movs	r0, #0
 80046b6:	e010      	b.n	80046da <I2C_WaitOnRXNEFlagUntilTimeout+0x38>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == SET)
 80046b8:	6942      	ldr	r2, [r0, #20]
 80046ba:	06d2      	lsls	r2, r2, #27
 80046bc:	d50e      	bpl.n	80046dc <I2C_WaitOnRXNEFlagUntilTimeout+0x3a>
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 80046be:	f06f 0210 	mvn.w	r2, #16
 80046c2:	6142      	str	r2, [r0, #20]
      hi2c->State               = HAL_I2C_STATE_READY;
 80046c4:	2220      	movs	r2, #32
      hi2c->PreviousState       = I2C_STATE_NONE;
 80046c6:	6323      	str	r3, [r4, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 80046c8:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 80046cc:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_NONE;
 80046d0:	6c22      	ldr	r2, [r4, #64]	; 0x40
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 80046d2:	6422      	str	r2, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 80046d4:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
 80046d8:	2001      	movs	r0, #1
}
 80046da:	bd70      	pop	{r4, r5, r6, pc}
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 80046dc:	f7ff fb02 	bl	8003ce4 <HAL_GetTick>
 80046e0:	1b80      	subs	r0, r0, r6
 80046e2:	42a8      	cmp	r0, r5
 80046e4:	d801      	bhi.n	80046ea <I2C_WaitOnRXNEFlagUntilTimeout+0x48>
 80046e6:	2d00      	cmp	r5, #0
 80046e8:	d1df      	bne.n	80046aa <I2C_WaitOnRXNEFlagUntilTimeout+0x8>
        hi2c->PreviousState     = I2C_STATE_NONE;
 80046ea:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 80046ec:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 80046ee:	6323      	str	r3, [r4, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 80046f0:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 80046f4:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 80046f8:	6c22      	ldr	r2, [r4, #64]	; 0x40
 80046fa:	f042 0220 	orr.w	r2, r2, #32
 80046fe:	e7e8      	b.n	80046d2 <I2C_WaitOnRXNEFlagUntilTimeout+0x30>

08004700 <I2C_WaitOnFlagUntilTimeout>:
{
 8004700:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8004704:	9e08      	ldr	r6, [sp, #32]
 8004706:	4604      	mov	r4, r0
 8004708:	4690      	mov	r8, r2
 800470a:	461f      	mov	r7, r3
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800470c:	ea4f 4911 	mov.w	r9, r1, lsr #16
 8004710:	b28d      	uxth	r5, r1
 8004712:	6821      	ldr	r1, [r4, #0]
 8004714:	f1b9 0f01 	cmp.w	r9, #1
 8004718:	bf0c      	ite	eq
 800471a:	694b      	ldreq	r3, [r1, #20]
 800471c:	698b      	ldrne	r3, [r1, #24]
 800471e:	ea35 0303 	bics.w	r3, r5, r3
 8004722:	bf0c      	ite	eq
 8004724:	2301      	moveq	r3, #1
 8004726:	2300      	movne	r3, #0
 8004728:	4598      	cmp	r8, r3
 800472a:	d001      	beq.n	8004730 <I2C_WaitOnFlagUntilTimeout+0x30>
  return HAL_OK;
 800472c:	2000      	movs	r0, #0
 800472e:	e016      	b.n	800475e <I2C_WaitOnFlagUntilTimeout+0x5e>
    if (Timeout != HAL_MAX_DELAY)
 8004730:	1c7b      	adds	r3, r7, #1
 8004732:	d0ef      	beq.n	8004714 <I2C_WaitOnFlagUntilTimeout+0x14>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8004734:	f7ff fad6 	bl	8003ce4 <HAL_GetTick>
 8004738:	1b80      	subs	r0, r0, r6
 800473a:	42b8      	cmp	r0, r7
 800473c:	d801      	bhi.n	8004742 <I2C_WaitOnFlagUntilTimeout+0x42>
 800473e:	2f00      	cmp	r7, #0
 8004740:	d1e7      	bne.n	8004712 <I2C_WaitOnFlagUntilTimeout+0x12>
        hi2c->PreviousState     = I2C_STATE_NONE;
 8004742:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 8004744:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 8004746:	6323      	str	r3, [r4, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 8004748:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 800474c:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8004750:	6c22      	ldr	r2, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 8004752:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8004756:	f042 0220 	orr.w	r2, r2, #32
 800475a:	6422      	str	r2, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 800475c:	2001      	movs	r0, #1
}
 800475e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}

08004762 <I2C_WaitOnTXEFlagUntilTimeout>:
{
 8004762:	b570      	push	{r4, r5, r6, lr}
 8004764:	4604      	mov	r4, r0
 8004766:	460d      	mov	r5, r1
 8004768:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800476a:	6823      	ldr	r3, [r4, #0]
 800476c:	695b      	ldr	r3, [r3, #20]
 800476e:	061b      	lsls	r3, r3, #24
 8004770:	d501      	bpl.n	8004776 <I2C_WaitOnTXEFlagUntilTimeout+0x14>
  return HAL_OK;
 8004772:	2000      	movs	r0, #0
}
 8004774:	bd70      	pop	{r4, r5, r6, pc}
    if (I2C_IsAcknowledgeFailed(hi2c) != HAL_OK)
 8004776:	4620      	mov	r0, r4
 8004778:	f7ff ff19 	bl	80045ae <I2C_IsAcknowledgeFailed>
 800477c:	b9a8      	cbnz	r0, 80047aa <I2C_WaitOnTXEFlagUntilTimeout+0x48>
    if (Timeout != HAL_MAX_DELAY)
 800477e:	1c6a      	adds	r2, r5, #1
 8004780:	d0f3      	beq.n	800476a <I2C_WaitOnTXEFlagUntilTimeout+0x8>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8004782:	f7ff faaf 	bl	8003ce4 <HAL_GetTick>
 8004786:	1b80      	subs	r0, r0, r6
 8004788:	42a8      	cmp	r0, r5
 800478a:	d801      	bhi.n	8004790 <I2C_WaitOnTXEFlagUntilTimeout+0x2e>
 800478c:	2d00      	cmp	r5, #0
 800478e:	d1ec      	bne.n	800476a <I2C_WaitOnTXEFlagUntilTimeout+0x8>
        hi2c->PreviousState     = I2C_STATE_NONE;
 8004790:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 8004792:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 8004794:	6323      	str	r3, [r4, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 8004796:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 800479a:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800479e:	6c22      	ldr	r2, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 80047a0:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 80047a4:	f042 0220 	orr.w	r2, r2, #32
 80047a8:	6422      	str	r2, [r4, #64]	; 0x40
      return HAL_ERROR;
 80047aa:	2001      	movs	r0, #1
 80047ac:	e7e2      	b.n	8004774 <I2C_WaitOnTXEFlagUntilTimeout+0x12>
	...

080047b0 <I2C_RequestMemoryWrite>:
{
 80047b0:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 80047b4:	4615      	mov	r5, r2
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 80047b6:	6802      	ldr	r2, [r0, #0]
{
 80047b8:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
 80047ba:	4698      	mov	r8, r3
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 80047bc:	6813      	ldr	r3, [r2, #0]
 80047be:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80047c2:	6013      	str	r3, [r2, #0]
{
 80047c4:	460f      	mov	r7, r1
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 80047c6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80047c8:	9600      	str	r6, [sp, #0]
 80047ca:	2200      	movs	r2, #0
 80047cc:	f04f 1101 	mov.w	r1, #65537	; 0x10001
{
 80047d0:	4604      	mov	r4, r0
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 80047d2:	f7ff ff95 	bl	8004700 <I2C_WaitOnFlagUntilTimeout>
 80047d6:	6823      	ldr	r3, [r4, #0]
 80047d8:	b138      	cbz	r0, 80047ea <I2C_RequestMemoryWrite+0x3a>
    if (hi2c->Instance->CR1 & I2C_CR1_START)
 80047da:	681b      	ldr	r3, [r3, #0]
 80047dc:	05db      	lsls	r3, r3, #23
 80047de:	d502      	bpl.n	80047e6 <I2C_RequestMemoryWrite+0x36>
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 80047e0:	f44f 7300 	mov.w	r3, #512	; 0x200
 80047e4:	6423      	str	r3, [r4, #64]	; 0x40
    return HAL_TIMEOUT;
 80047e6:	2003      	movs	r0, #3
 80047e8:	e00a      	b.n	8004800 <I2C_RequestMemoryWrite+0x50>
  hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 80047ea:	f007 07fe 	and.w	r7, r7, #254	; 0xfe
 80047ee:	611f      	str	r7, [r3, #16]
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 80047f0:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80047f2:	4919      	ldr	r1, [pc, #100]	; (8004858 <I2C_RequestMemoryWrite+0xa8>)
 80047f4:	4633      	mov	r3, r6
 80047f6:	4620      	mov	r0, r4
 80047f8:	f7ff fef3 	bl	80045e2 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 80047fc:	b118      	cbz	r0, 8004806 <I2C_RequestMemoryWrite+0x56>
      return HAL_ERROR;
 80047fe:	2001      	movs	r0, #1
}
 8004800:	b004      	add	sp, #16
 8004802:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8004806:	6823      	ldr	r3, [r4, #0]
 8004808:	9003      	str	r0, [sp, #12]
 800480a:	695a      	ldr	r2, [r3, #20]
 800480c:	9203      	str	r2, [sp, #12]
 800480e:	699b      	ldr	r3, [r3, #24]
 8004810:	9303      	str	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8004812:	4632      	mov	r2, r6
 8004814:	990a      	ldr	r1, [sp, #40]	; 0x28
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8004816:	9b03      	ldr	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8004818:	4620      	mov	r0, r4
 800481a:	f7ff ffa2 	bl	8004762 <I2C_WaitOnTXEFlagUntilTimeout>
 800481e:	b140      	cbz	r0, 8004832 <I2C_RequestMemoryWrite+0x82>
      if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8004820:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8004822:	2b04      	cmp	r3, #4
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8004824:	bf01      	itttt	eq
 8004826:	6822      	ldreq	r2, [r4, #0]
 8004828:	6813      	ldreq	r3, [r2, #0]
 800482a:	f443 7300 	orreq.w	r3, r3, #512	; 0x200
 800482e:	6013      	streq	r3, [r2, #0]
 8004830:	e7e5      	b.n	80047fe <I2C_RequestMemoryWrite+0x4e>
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 8004832:	f1b8 0f01 	cmp.w	r8, #1
 8004836:	6823      	ldr	r3, [r4, #0]
 8004838:	d102      	bne.n	8004840 <I2C_RequestMemoryWrite+0x90>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 800483a:	b2ed      	uxtb	r5, r5
 800483c:	611d      	str	r5, [r3, #16]
 800483e:	e7df      	b.n	8004800 <I2C_RequestMemoryWrite+0x50>
    hi2c->Instance->DR = I2C_MEM_ADD_MSB(MemAddress);
 8004840:	0a2a      	lsrs	r2, r5, #8
 8004842:	611a      	str	r2, [r3, #16]
    if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8004844:	990a      	ldr	r1, [sp, #40]	; 0x28
 8004846:	4632      	mov	r2, r6
 8004848:	4620      	mov	r0, r4
 800484a:	f7ff ff8a 	bl	8004762 <I2C_WaitOnTXEFlagUntilTimeout>
 800484e:	2800      	cmp	r0, #0
 8004850:	d1e6      	bne.n	8004820 <I2C_RequestMemoryWrite+0x70>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 8004852:	6823      	ldr	r3, [r4, #0]
 8004854:	e7f1      	b.n	800483a <I2C_RequestMemoryWrite+0x8a>
 8004856:	bf00      	nop
 8004858:	00010002 	.word	0x00010002

0800485c <I2C_RequestMemoryRead>:
{
 800485c:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8004860:	4698      	mov	r8, r3
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8004862:	6803      	ldr	r3, [r0, #0]
{
 8004864:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8004866:	4616      	mov	r6, r2
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8004868:	681a      	ldr	r2, [r3, #0]
 800486a:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800486e:	601a      	str	r2, [r3, #0]
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8004870:	681a      	ldr	r2, [r3, #0]
 8004872:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8004876:	601a      	str	r2, [r3, #0]
{
 8004878:	460f      	mov	r7, r1
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 800487a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800487c:	9500      	str	r5, [sp, #0]
 800487e:	2200      	movs	r2, #0
 8004880:	f04f 1101 	mov.w	r1, #65537	; 0x10001
{
 8004884:	4604      	mov	r4, r0
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 8004886:	f7ff ff3b 	bl	8004700 <I2C_WaitOnFlagUntilTimeout>
 800488a:	6823      	ldr	r3, [r4, #0]
 800488c:	b148      	cbz	r0, 80048a2 <I2C_RequestMemoryRead+0x46>
    if (hi2c->Instance->CR1 & I2C_CR1_START)
 800488e:	681b      	ldr	r3, [r3, #0]
 8004890:	05db      	lsls	r3, r3, #23
 8004892:	d502      	bpl.n	800489a <I2C_RequestMemoryRead+0x3e>
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 8004894:	f44f 7300 	mov.w	r3, #512	; 0x200
 8004898:	6423      	str	r3, [r4, #64]	; 0x40
    return HAL_TIMEOUT;
 800489a:	2003      	movs	r0, #3
}
 800489c:	b004      	add	sp, #16
 800489e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 80048a2:	b2ff      	uxtb	r7, r7
 80048a4:	f007 02fe 	and.w	r2, r7, #254	; 0xfe
 80048a8:	611a      	str	r2, [r3, #16]
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 80048aa:	492a      	ldr	r1, [pc, #168]	; (8004954 <I2C_RequestMemoryRead+0xf8>)
 80048ac:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80048ae:	462b      	mov	r3, r5
 80048b0:	4620      	mov	r0, r4
 80048b2:	f7ff fe96 	bl	80045e2 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 80048b6:	b108      	cbz	r0, 80048bc <I2C_RequestMemoryRead+0x60>
    return HAL_ERROR;
 80048b8:	2001      	movs	r0, #1
 80048ba:	e7ef      	b.n	800489c <I2C_RequestMemoryRead+0x40>
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 80048bc:	6823      	ldr	r3, [r4, #0]
 80048be:	9003      	str	r0, [sp, #12]
 80048c0:	695a      	ldr	r2, [r3, #20]
 80048c2:	9203      	str	r2, [sp, #12]
 80048c4:	699b      	ldr	r3, [r3, #24]
 80048c6:	9303      	str	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 80048c8:	462a      	mov	r2, r5
 80048ca:	990a      	ldr	r1, [sp, #40]	; 0x28
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 80048cc:	9b03      	ldr	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 80048ce:	4620      	mov	r0, r4
 80048d0:	f7ff ff47 	bl	8004762 <I2C_WaitOnTXEFlagUntilTimeout>
 80048d4:	b140      	cbz	r0, 80048e8 <I2C_RequestMemoryRead+0x8c>
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 80048d6:	6c23      	ldr	r3, [r4, #64]	; 0x40
 80048d8:	2b04      	cmp	r3, #4
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 80048da:	bf01      	itttt	eq
 80048dc:	6822      	ldreq	r2, [r4, #0]
 80048de:	6813      	ldreq	r3, [r2, #0]
 80048e0:	f443 7300 	orreq.w	r3, r3, #512	; 0x200
 80048e4:	6013      	streq	r3, [r2, #0]
 80048e6:	e7e7      	b.n	80048b8 <I2C_RequestMemoryRead+0x5c>
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 80048e8:	f1b8 0f01 	cmp.w	r8, #1
 80048ec:	6823      	ldr	r3, [r4, #0]
 80048ee:	d125      	bne.n	800493c <I2C_RequestMemoryRead+0xe0>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 80048f0:	b2f6      	uxtb	r6, r6
 80048f2:	611e      	str	r6, [r3, #16]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 80048f4:	462a      	mov	r2, r5
 80048f6:	990a      	ldr	r1, [sp, #40]	; 0x28
 80048f8:	4620      	mov	r0, r4
 80048fa:	f7ff ff32 	bl	8004762 <I2C_WaitOnTXEFlagUntilTimeout>
 80048fe:	4602      	mov	r2, r0
 8004900:	2800      	cmp	r0, #0
 8004902:	d1e8      	bne.n	80048d6 <I2C_RequestMemoryRead+0x7a>
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8004904:	6821      	ldr	r1, [r4, #0]
 8004906:	680b      	ldr	r3, [r1, #0]
 8004908:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800490c:	600b      	str	r3, [r1, #0]
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 800490e:	4620      	mov	r0, r4
 8004910:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8004912:	9500      	str	r5, [sp, #0]
 8004914:	f04f 1101 	mov.w	r1, #65537	; 0x10001
 8004918:	f7ff fef2 	bl	8004700 <I2C_WaitOnFlagUntilTimeout>
 800491c:	6823      	ldr	r3, [r4, #0]
 800491e:	2800      	cmp	r0, #0
 8004920:	d1b5      	bne.n	800488e <I2C_RequestMemoryRead+0x32>
  hi2c->Instance->DR = I2C_7BIT_ADD_READ(DevAddress);
 8004922:	f047 0701 	orr.w	r7, r7, #1
 8004926:	611f      	str	r7, [r3, #16]
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 8004928:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800492a:	490a      	ldr	r1, [pc, #40]	; (8004954 <I2C_RequestMemoryRead+0xf8>)
 800492c:	462b      	mov	r3, r5
 800492e:	4620      	mov	r0, r4
 8004930:	f7ff fe57 	bl	80045e2 <I2C_WaitOnMasterAddressFlagUntilTimeout>
    return HAL_TIMEOUT;
 8004934:	3000      	adds	r0, #0
 8004936:	bf18      	it	ne
 8004938:	2001      	movne	r0, #1
 800493a:	e7af      	b.n	800489c <I2C_RequestMemoryRead+0x40>
    hi2c->Instance->DR = I2C_MEM_ADD_MSB(MemAddress);
 800493c:	0a32      	lsrs	r2, r6, #8
 800493e:	611a      	str	r2, [r3, #16]
    if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8004940:	990a      	ldr	r1, [sp, #40]	; 0x28
 8004942:	462a      	mov	r2, r5
 8004944:	4620      	mov	r0, r4
 8004946:	f7ff ff0c 	bl	8004762 <I2C_WaitOnTXEFlagUntilTimeout>
 800494a:	2800      	cmp	r0, #0
 800494c:	d1c3      	bne.n	80048d6 <I2C_RequestMemoryRead+0x7a>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 800494e:	6823      	ldr	r3, [r4, #0]
 8004950:	e7ce      	b.n	80048f0 <I2C_RequestMemoryRead+0x94>
 8004952:	bf00      	nop
 8004954:	00010002 	.word	0x00010002

08004958 <HAL_I2C_Init>:
{
 8004958:	b570      	push	{r4, r5, r6, lr}
  if (hi2c == NULL)
 800495a:	4604      	mov	r4, r0
 800495c:	b908      	cbnz	r0, 8004962 <HAL_I2C_Init+0xa>
    return HAL_ERROR;
 800495e:	2001      	movs	r0, #1
}
 8004960:	bd70      	pop	{r4, r5, r6, pc}
  if (hi2c->State == HAL_I2C_STATE_RESET)
 8004962:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 8004966:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800496a:	b91b      	cbnz	r3, 8004974 <HAL_I2C_Init+0x1c>
    hi2c->Lock = HAL_UNLOCKED;
 800496c:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    HAL_I2C_MspInit(hi2c);
 8004970:	f7fd fc7e 	bl	8002270 <HAL_I2C_MspInit>
  hi2c->State = HAL_I2C_STATE_BUSY;
 8004974:	2324      	movs	r3, #36	; 0x24
 8004976:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  __HAL_I2C_DISABLE(hi2c);
 800497a:	6823      	ldr	r3, [r4, #0]
 800497c:	681a      	ldr	r2, [r3, #0]
 800497e:	f022 0201 	bic.w	r2, r2, #1
 8004982:	601a      	str	r2, [r3, #0]
  hi2c->Instance->CR1 |= I2C_CR1_SWRST;
 8004984:	681a      	ldr	r2, [r3, #0]
 8004986:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 800498a:	601a      	str	r2, [r3, #0]
  hi2c->Instance->CR1 &= ~I2C_CR1_SWRST;
 800498c:	681a      	ldr	r2, [r3, #0]
 800498e:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
 8004992:	601a      	str	r2, [r3, #0]
  pclk1 = HAL_RCC_GetPCLK1Freq();
 8004994:	f000 fe6c 	bl	8005670 <HAL_RCC_GetPCLK1Freq>
  if (I2C_MIN_PCLK_FREQ(pclk1, hi2c->Init.ClockSpeed) == 1U)
 8004998:	6863      	ldr	r3, [r4, #4]
 800499a:	4a41      	ldr	r2, [pc, #260]	; (8004aa0 <HAL_I2C_Init+0x148>)
 800499c:	4293      	cmp	r3, r2
 800499e:	d84d      	bhi.n	8004a3c <HAL_I2C_Init+0xe4>
 80049a0:	4a40      	ldr	r2, [pc, #256]	; (8004aa4 <HAL_I2C_Init+0x14c>)
 80049a2:	4290      	cmp	r0, r2
 80049a4:	d9db      	bls.n	800495e <HAL_I2C_Init+0x6>
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 80049a6:	6822      	ldr	r2, [r4, #0]
  freqrange = I2C_FREQRANGE(pclk1);
 80049a8:	493f      	ldr	r1, [pc, #252]	; (8004aa8 <HAL_I2C_Init+0x150>)
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 80049aa:	6855      	ldr	r5, [r2, #4]
  freqrange = I2C_FREQRANGE(pclk1);
 80049ac:	fbb0 f1f1 	udiv	r1, r0, r1
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 80049b0:	f025 053f 	bic.w	r5, r5, #63	; 0x3f
 80049b4:	430d      	orrs	r5, r1
 80049b6:	6055      	str	r5, [r2, #4]
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 80049b8:	6a15      	ldr	r5, [r2, #32]
 80049ba:	f025 053f 	bic.w	r5, r5, #63	; 0x3f
 80049be:	3101      	adds	r1, #1
 80049c0:	4329      	orrs	r1, r5
 80049c2:	6211      	str	r1, [r2, #32]
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 80049c4:	69d1      	ldr	r1, [r2, #28]
 80049c6:	4d36      	ldr	r5, [pc, #216]	; (8004aa0 <HAL_I2C_Init+0x148>)
 80049c8:	f421 414f 	bic.w	r1, r1, #52992	; 0xcf00
 80049cc:	42ab      	cmp	r3, r5
 80049ce:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 80049d2:	f100 30ff 	add.w	r0, r0, #4294967295
 80049d6:	d848      	bhi.n	8004a6a <HAL_I2C_Init+0x112>
 80049d8:	005b      	lsls	r3, r3, #1
 80049da:	fbb0 f0f3 	udiv	r0, r0, r3
 80049de:	1c43      	adds	r3, r0, #1
 80049e0:	f3c3 030b 	ubfx	r3, r3, #0, #12
 80049e4:	2b04      	cmp	r3, #4
 80049e6:	bf38      	it	cc
 80049e8:	2304      	movcc	r3, #4
 80049ea:	430b      	orrs	r3, r1
 80049ec:	61d3      	str	r3, [r2, #28]
  MODIFY_REG(hi2c->Instance->CR1, (I2C_CR1_ENGC | I2C_CR1_NOSTRETCH), (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode));
 80049ee:	e9d4 3007 	ldrd	r3, r0, [r4, #28]
 80049f2:	6811      	ldr	r1, [r2, #0]
 80049f4:	4303      	orrs	r3, r0
 80049f6:	f021 01c0 	bic.w	r1, r1, #192	; 0xc0
 80049fa:	430b      	orrs	r3, r1
 80049fc:	6013      	str	r3, [r2, #0]
  MODIFY_REG(hi2c->Instance->OAR1, (I2C_OAR1_ADDMODE | I2C_OAR1_ADD8_9 | I2C_OAR1_ADD1_7 | I2C_OAR1_ADD0), (hi2c->Init.AddressingMode | hi2c->Init.OwnAddress1));
 80049fe:	6891      	ldr	r1, [r2, #8]
 8004a00:	e9d4 0303 	ldrd	r0, r3, [r4, #12]
 8004a04:	f421 4103 	bic.w	r1, r1, #33536	; 0x8300
 8004a08:	4303      	orrs	r3, r0
 8004a0a:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 8004a0e:	430b      	orrs	r3, r1
 8004a10:	6093      	str	r3, [r2, #8]
  MODIFY_REG(hi2c->Instance->OAR2, (I2C_OAR2_ENDUAL | I2C_OAR2_ADD2), (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2));
 8004a12:	e9d4 3005 	ldrd	r3, r0, [r4, #20]
 8004a16:	68d1      	ldr	r1, [r2, #12]
 8004a18:	4303      	orrs	r3, r0
 8004a1a:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 8004a1e:	430b      	orrs	r3, r1
 8004a20:	60d3      	str	r3, [r2, #12]
  __HAL_I2C_ENABLE(hi2c);
 8004a22:	6813      	ldr	r3, [r2, #0]
 8004a24:	f043 0301 	orr.w	r3, r3, #1
 8004a28:	6013      	str	r3, [r2, #0]
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8004a2a:	2000      	movs	r0, #0
  hi2c->State = HAL_I2C_STATE_READY;
 8004a2c:	2320      	movs	r3, #32
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8004a2e:	6420      	str	r0, [r4, #64]	; 0x40
  hi2c->State = HAL_I2C_STATE_READY;
 8004a30:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  hi2c->PreviousState = I2C_STATE_NONE;
 8004a34:	6320      	str	r0, [r4, #48]	; 0x30
  hi2c->Mode = HAL_I2C_MODE_NONE;
 8004a36:	f884 003e 	strb.w	r0, [r4, #62]	; 0x3e
  return HAL_OK;
 8004a3a:	e791      	b.n	8004960 <HAL_I2C_Init+0x8>
  if (I2C_MIN_PCLK_FREQ(pclk1, hi2c->Init.ClockSpeed) == 1U)
 8004a3c:	4a1b      	ldr	r2, [pc, #108]	; (8004aac <HAL_I2C_Init+0x154>)
 8004a3e:	4290      	cmp	r0, r2
 8004a40:	d98d      	bls.n	800495e <HAL_I2C_Init+0x6>
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 8004a42:	6822      	ldr	r2, [r4, #0]
  freqrange = I2C_FREQRANGE(pclk1);
 8004a44:	4e18      	ldr	r6, [pc, #96]	; (8004aa8 <HAL_I2C_Init+0x150>)
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 8004a46:	6855      	ldr	r5, [r2, #4]
  freqrange = I2C_FREQRANGE(pclk1);
 8004a48:	fbb0 f6f6 	udiv	r6, r0, r6
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 8004a4c:	f025 053f 	bic.w	r5, r5, #63	; 0x3f
 8004a50:	4335      	orrs	r5, r6
 8004a52:	6055      	str	r5, [r2, #4]
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 8004a54:	6a15      	ldr	r5, [r2, #32]
 8004a56:	f44f 7196 	mov.w	r1, #300	; 0x12c
 8004a5a:	4371      	muls	r1, r6
 8004a5c:	f025 053f 	bic.w	r5, r5, #63	; 0x3f
 8004a60:	f44f 767a 	mov.w	r6, #1000	; 0x3e8
 8004a64:	fbb1 f1f6 	udiv	r1, r1, r6
 8004a68:	e7a9      	b.n	80049be <HAL_I2C_Init+0x66>
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 8004a6a:	68a5      	ldr	r5, [r4, #8]
 8004a6c:	b955      	cbnz	r5, 8004a84 <HAL_I2C_Init+0x12c>
 8004a6e:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8004a72:	fbb0 f0f3 	udiv	r0, r0, r3
 8004a76:	1c43      	adds	r3, r0, #1
 8004a78:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8004a7c:	b16b      	cbz	r3, 8004a9a <HAL_I2C_Init+0x142>
 8004a7e:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8004a82:	e7b2      	b.n	80049ea <HAL_I2C_Init+0x92>
 8004a84:	2519      	movs	r5, #25
 8004a86:	436b      	muls	r3, r5
 8004a88:	fbb0 f0f3 	udiv	r0, r0, r3
 8004a8c:	1c43      	adds	r3, r0, #1
 8004a8e:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8004a92:	b113      	cbz	r3, 8004a9a <HAL_I2C_Init+0x142>
 8004a94:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 8004a98:	e7a7      	b.n	80049ea <HAL_I2C_Init+0x92>
 8004a9a:	2301      	movs	r3, #1
 8004a9c:	e7a5      	b.n	80049ea <HAL_I2C_Init+0x92>
 8004a9e:	bf00      	nop
 8004aa0:	000186a0 	.word	0x000186a0
 8004aa4:	001e847f 	.word	0x001e847f
 8004aa8:	000f4240 	.word	0x000f4240
 8004aac:	003d08ff 	.word	0x003d08ff

08004ab0 <HAL_I2C_Mem_Write>:
{
 8004ab0:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8004ab4:	4604      	mov	r4, r0
 8004ab6:	4699      	mov	r9, r3
 8004ab8:	460f      	mov	r7, r1
 8004aba:	4690      	mov	r8, r2
 8004abc:	9e0c      	ldr	r6, [sp, #48]	; 0x30
  uint32_t tickstart = HAL_GetTick();
 8004abe:	f7ff f911 	bl	8003ce4 <HAL_GetTick>
  if (hi2c->State == HAL_I2C_STATE_READY)
 8004ac2:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
 8004ac6:	2b20      	cmp	r3, #32
  uint32_t tickstart = HAL_GetTick();
 8004ac8:	4605      	mov	r5, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
 8004aca:	d003      	beq.n	8004ad4 <HAL_I2C_Mem_Write+0x24>
    return HAL_BUSY;
 8004acc:	2002      	movs	r0, #2
}
 8004ace:	b003      	add	sp, #12
 8004ad0:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY_FLAG, tickstart) != HAL_OK)
 8004ad4:	9000      	str	r0, [sp, #0]
 8004ad6:	2319      	movs	r3, #25
 8004ad8:	2201      	movs	r2, #1
 8004ada:	493b      	ldr	r1, [pc, #236]	; (8004bc8 <HAL_I2C_Mem_Write+0x118>)
 8004adc:	4620      	mov	r0, r4
 8004ade:	f7ff fe0f 	bl	8004700 <I2C_WaitOnFlagUntilTimeout>
 8004ae2:	2800      	cmp	r0, #0
 8004ae4:	d1f2      	bne.n	8004acc <HAL_I2C_Mem_Write+0x1c>
    __HAL_LOCK(hi2c);
 8004ae6:	f894 303c 	ldrb.w	r3, [r4, #60]	; 0x3c
 8004aea:	2b01      	cmp	r3, #1
 8004aec:	d0ee      	beq.n	8004acc <HAL_I2C_Mem_Write+0x1c>
 8004aee:	2301      	movs	r3, #1
 8004af0:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 8004af4:	6823      	ldr	r3, [r4, #0]
 8004af6:	681a      	ldr	r2, [r3, #0]
 8004af8:	07d1      	lsls	r1, r2, #31
      __HAL_I2C_ENABLE(hi2c);
 8004afa:	bf5e      	ittt	pl
 8004afc:	681a      	ldrpl	r2, [r3, #0]
 8004afe:	f042 0201 	orrpl.w	r2, r2, #1
 8004b02:	601a      	strpl	r2, [r3, #0]
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 8004b04:	681a      	ldr	r2, [r3, #0]
 8004b06:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 8004b0a:	601a      	str	r2, [r3, #0]
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
 8004b0c:	2321      	movs	r3, #33	; 0x21
 8004b0e:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 8004b12:	2340      	movs	r3, #64	; 0x40
 8004b14:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8004b18:	2300      	movs	r3, #0
 8004b1a:	6423      	str	r3, [r4, #64]	; 0x40
    hi2c->pBuffPtr    = pData;
 8004b1c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8004b1e:	6263      	str	r3, [r4, #36]	; 0x24
    hi2c->XferCount   = Size;
 8004b20:	f8bd 302c 	ldrh.w	r3, [sp, #44]	; 0x2c
 8004b24:	8563      	strh	r3, [r4, #42]	; 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 8004b26:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8004b28:	8523      	strh	r3, [r4, #40]	; 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 8004b2a:	4b28      	ldr	r3, [pc, #160]	; (8004bcc <HAL_I2C_Mem_Write+0x11c>)
 8004b2c:	62e3      	str	r3, [r4, #44]	; 0x2c
    if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 8004b2e:	e9cd 6500 	strd	r6, r5, [sp]
 8004b32:	464b      	mov	r3, r9
 8004b34:	4642      	mov	r2, r8
 8004b36:	4639      	mov	r1, r7
 8004b38:	4620      	mov	r0, r4
 8004b3a:	f7ff fe39 	bl	80047b0 <I2C_RequestMemoryWrite>
 8004b3e:	2800      	cmp	r0, #0
 8004b40:	d02a      	beq.n	8004b98 <HAL_I2C_Mem_Write+0xe8>
      return HAL_ERROR;
 8004b42:	2001      	movs	r0, #1
 8004b44:	e7c3      	b.n	8004ace <HAL_I2C_Mem_Write+0x1e>
      if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8004b46:	f7ff fe0c 	bl	8004762 <I2C_WaitOnTXEFlagUntilTimeout>
 8004b4a:	b140      	cbz	r0, 8004b5e <HAL_I2C_Mem_Write+0xae>
      if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8004b4c:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8004b4e:	2b04      	cmp	r3, #4
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8004b50:	bf01      	itttt	eq
 8004b52:	6822      	ldreq	r2, [r4, #0]
 8004b54:	6813      	ldreq	r3, [r2, #0]
 8004b56:	f443 7300 	orreq.w	r3, r3, #512	; 0x200
 8004b5a:	6013      	streq	r3, [r2, #0]
 8004b5c:	e7f1      	b.n	8004b42 <HAL_I2C_Mem_Write+0x92>
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 8004b5e:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8004b60:	6827      	ldr	r7, [r4, #0]
 8004b62:	461a      	mov	r2, r3
 8004b64:	f812 1b01 	ldrb.w	r1, [r2], #1
 8004b68:	6139      	str	r1, [r7, #16]
      hi2c->pBuffPtr++;
 8004b6a:	6262      	str	r2, [r4, #36]	; 0x24
      hi2c->XferCount--;
 8004b6c:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
      hi2c->XferSize--;
 8004b6e:	8d21      	ldrh	r1, [r4, #40]	; 0x28
      hi2c->XferCount--;
 8004b70:	3a01      	subs	r2, #1
 8004b72:	b292      	uxth	r2, r2
 8004b74:	8562      	strh	r2, [r4, #42]	; 0x2a
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 8004b76:	697a      	ldr	r2, [r7, #20]
      hi2c->XferSize--;
 8004b78:	1e48      	subs	r0, r1, #1
 8004b7a:	b280      	uxth	r0, r0
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 8004b7c:	0752      	lsls	r2, r2, #29
      hi2c->XferSize--;
 8004b7e:	8520      	strh	r0, [r4, #40]	; 0x28
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 8004b80:	d50a      	bpl.n	8004b98 <HAL_I2C_Mem_Write+0xe8>
 8004b82:	b148      	cbz	r0, 8004b98 <HAL_I2C_Mem_Write+0xe8>
        hi2c->Instance->DR = *hi2c->pBuffPtr;
 8004b84:	785a      	ldrb	r2, [r3, #1]
 8004b86:	613a      	str	r2, [r7, #16]
        hi2c->pBuffPtr++;
 8004b88:	3302      	adds	r3, #2
 8004b8a:	6263      	str	r3, [r4, #36]	; 0x24
        hi2c->XferCount--;
 8004b8c:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8004b8e:	3b01      	subs	r3, #1
        hi2c->XferSize--;
 8004b90:	3902      	subs	r1, #2
        hi2c->XferCount--;
 8004b92:	b29b      	uxth	r3, r3
        hi2c->XferSize--;
 8004b94:	8521      	strh	r1, [r4, #40]	; 0x28
        hi2c->XferCount--;
 8004b96:	8563      	strh	r3, [r4, #42]	; 0x2a
    while (hi2c->XferSize > 0U)
 8004b98:	8d23      	ldrh	r3, [r4, #40]	; 0x28
      if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8004b9a:	462a      	mov	r2, r5
 8004b9c:	4631      	mov	r1, r6
 8004b9e:	4620      	mov	r0, r4
    while (hi2c->XferSize > 0U)
 8004ba0:	2b00      	cmp	r3, #0
 8004ba2:	d1d0      	bne.n	8004b46 <HAL_I2C_Mem_Write+0x96>
    if (I2C_WaitOnBTFFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8004ba4:	f7ff fd57 	bl	8004656 <I2C_WaitOnBTFFlagUntilTimeout>
 8004ba8:	2800      	cmp	r0, #0
 8004baa:	d1cf      	bne.n	8004b4c <HAL_I2C_Mem_Write+0x9c>
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8004bac:	6822      	ldr	r2, [r4, #0]
 8004bae:	6813      	ldr	r3, [r2, #0]
 8004bb0:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8004bb4:	6013      	str	r3, [r2, #0]
    hi2c->State = HAL_I2C_STATE_READY;
 8004bb6:	2320      	movs	r3, #32
 8004bb8:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
    __HAL_UNLOCK(hi2c);
 8004bbc:	f884 003c 	strb.w	r0, [r4, #60]	; 0x3c
    hi2c->Mode = HAL_I2C_MODE_NONE;
 8004bc0:	f884 003e 	strb.w	r0, [r4, #62]	; 0x3e
    return HAL_OK;
 8004bc4:	e783      	b.n	8004ace <HAL_I2C_Mem_Write+0x1e>
 8004bc6:	bf00      	nop
 8004bc8:	00100002 	.word	0x00100002
 8004bcc:	ffff0000 	.word	0xffff0000

08004bd0 <HAL_I2C_Mem_Read>:
{
 8004bd0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8004bd4:	4604      	mov	r4, r0
 8004bd6:	b087      	sub	sp, #28
 8004bd8:	4699      	mov	r9, r3
 8004bda:	460d      	mov	r5, r1
 8004bdc:	4690      	mov	r8, r2
 8004bde:	9f10      	ldr	r7, [sp, #64]	; 0x40
  uint32_t tickstart = HAL_GetTick();
 8004be0:	f7ff f880 	bl	8003ce4 <HAL_GetTick>
  if (hi2c->State == HAL_I2C_STATE_READY)
 8004be4:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
 8004be8:	2b20      	cmp	r3, #32
  uint32_t tickstart = HAL_GetTick();
 8004bea:	4606      	mov	r6, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
 8004bec:	d004      	beq.n	8004bf8 <HAL_I2C_Mem_Read+0x28>
    return HAL_BUSY;
 8004bee:	2502      	movs	r5, #2
}
 8004bf0:	4628      	mov	r0, r5
 8004bf2:	b007      	add	sp, #28
 8004bf4:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY_FLAG, tickstart) != HAL_OK)
 8004bf8:	9000      	str	r0, [sp, #0]
 8004bfa:	2319      	movs	r3, #25
 8004bfc:	2201      	movs	r2, #1
 8004bfe:	4977      	ldr	r1, [pc, #476]	; (8004ddc <HAL_I2C_Mem_Read+0x20c>)
 8004c00:	4620      	mov	r0, r4
 8004c02:	f7ff fd7d 	bl	8004700 <I2C_WaitOnFlagUntilTimeout>
 8004c06:	2800      	cmp	r0, #0
 8004c08:	d1f1      	bne.n	8004bee <HAL_I2C_Mem_Read+0x1e>
    __HAL_LOCK(hi2c);
 8004c0a:	f894 303c 	ldrb.w	r3, [r4, #60]	; 0x3c
 8004c0e:	2b01      	cmp	r3, #1
 8004c10:	d0ed      	beq.n	8004bee <HAL_I2C_Mem_Read+0x1e>
 8004c12:	2301      	movs	r3, #1
 8004c14:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 8004c18:	6823      	ldr	r3, [r4, #0]
 8004c1a:	681a      	ldr	r2, [r3, #0]
 8004c1c:	07d0      	lsls	r0, r2, #31
      __HAL_I2C_ENABLE(hi2c);
 8004c1e:	bf5e      	ittt	pl
 8004c20:	681a      	ldrpl	r2, [r3, #0]
 8004c22:	f042 0201 	orrpl.w	r2, r2, #1
 8004c26:	601a      	strpl	r2, [r3, #0]
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 8004c28:	681a      	ldr	r2, [r3, #0]
 8004c2a:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 8004c2e:	601a      	str	r2, [r3, #0]
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
 8004c30:	2322      	movs	r3, #34	; 0x22
 8004c32:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 8004c36:	2340      	movs	r3, #64	; 0x40
 8004c38:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8004c3c:	2300      	movs	r3, #0
 8004c3e:	6423      	str	r3, [r4, #64]	; 0x40
    hi2c->pBuffPtr    = pData;
 8004c40:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8004c42:	6263      	str	r3, [r4, #36]	; 0x24
    hi2c->XferCount   = Size;
 8004c44:	f8bd 303c 	ldrh.w	r3, [sp, #60]	; 0x3c
 8004c48:	8563      	strh	r3, [r4, #42]	; 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 8004c4a:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8004c4c:	8523      	strh	r3, [r4, #40]	; 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 8004c4e:	4b64      	ldr	r3, [pc, #400]	; (8004de0 <HAL_I2C_Mem_Read+0x210>)
 8004c50:	62e3      	str	r3, [r4, #44]	; 0x2c
    if (I2C_RequestMemoryRead(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 8004c52:	4629      	mov	r1, r5
 8004c54:	e9cd 7600 	strd	r7, r6, [sp]
 8004c58:	464b      	mov	r3, r9
 8004c5a:	4642      	mov	r2, r8
 8004c5c:	4620      	mov	r0, r4
 8004c5e:	f7ff fdfd 	bl	800485c <I2C_RequestMemoryRead>
 8004c62:	4605      	mov	r5, r0
 8004c64:	b108      	cbz	r0, 8004c6a <HAL_I2C_Mem_Read+0x9a>
      return HAL_ERROR;
 8004c66:	2501      	movs	r5, #1
 8004c68:	e7c2      	b.n	8004bf0 <HAL_I2C_Mem_Read+0x20>
    if (hi2c->XferSize == 0U)
 8004c6a:	8d22      	ldrh	r2, [r4, #40]	; 0x28
 8004c6c:	6823      	ldr	r3, [r4, #0]
 8004c6e:	b992      	cbnz	r2, 8004c96 <HAL_I2C_Mem_Read+0xc6>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8004c70:	9002      	str	r0, [sp, #8]
 8004c72:	695a      	ldr	r2, [r3, #20]
 8004c74:	9202      	str	r2, [sp, #8]
 8004c76:	699a      	ldr	r2, [r3, #24]
 8004c78:	9202      	str	r2, [sp, #8]
 8004c7a:	9a02      	ldr	r2, [sp, #8]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8004c7c:	681a      	ldr	r2, [r3, #0]
 8004c7e:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8004c82:	601a      	str	r2, [r3, #0]
    hi2c->State = HAL_I2C_STATE_READY;
 8004c84:	2320      	movs	r3, #32
 8004c86:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
    hi2c->Mode = HAL_I2C_MODE_NONE;
 8004c8a:	2300      	movs	r3, #0
 8004c8c:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
    __HAL_UNLOCK(hi2c);
 8004c90:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    return HAL_OK;
 8004c94:	e7ac      	b.n	8004bf0 <HAL_I2C_Mem_Read+0x20>
    else if (hi2c->XferSize == 1U)
 8004c96:	2a01      	cmp	r2, #1
 8004c98:	d12c      	bne.n	8004cf4 <HAL_I2C_Mem_Read+0x124>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8004c9a:	681a      	ldr	r2, [r3, #0]
 8004c9c:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8004ca0:	601a      	str	r2, [r3, #0]
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8004ca2:	9003      	str	r0, [sp, #12]
 8004ca4:	695a      	ldr	r2, [r3, #20]
 8004ca6:	9203      	str	r2, [sp, #12]
 8004ca8:	699a      	ldr	r2, [r3, #24]
 8004caa:	9203      	str	r2, [sp, #12]
 8004cac:	9a03      	ldr	r2, [sp, #12]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8004cae:	681a      	ldr	r2, [r3, #0]
 8004cb0:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8004cb4:	601a      	str	r2, [r3, #0]
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8004cb6:	f8df 812c 	ldr.w	r8, [pc, #300]	; 8004de4 <HAL_I2C_Mem_Read+0x214>
    while (hi2c->XferSize > 0U)
 8004cba:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 8004cbc:	2b00      	cmp	r3, #0
 8004cbe:	d0e1      	beq.n	8004c84 <HAL_I2C_Mem_Read+0xb4>
      if (hi2c->XferSize <= 3U)
 8004cc0:	2b03      	cmp	r3, #3
 8004cc2:	d86e      	bhi.n	8004da2 <HAL_I2C_Mem_Read+0x1d2>
        if (hi2c->XferSize == 1U)
 8004cc4:	2b01      	cmp	r3, #1
 8004cc6:	d12d      	bne.n	8004d24 <HAL_I2C_Mem_Read+0x154>
          if (I2C_WaitOnRXNEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8004cc8:	4632      	mov	r2, r6
 8004cca:	4639      	mov	r1, r7
 8004ccc:	4620      	mov	r0, r4
 8004cce:	f7ff fce8 	bl	80046a2 <I2C_WaitOnRXNEFlagUntilTimeout>
 8004cd2:	2800      	cmp	r0, #0
 8004cd4:	d1c7      	bne.n	8004c66 <HAL_I2C_Mem_Read+0x96>
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8004cd6:	6823      	ldr	r3, [r4, #0]
 8004cd8:	691a      	ldr	r2, [r3, #16]
 8004cda:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8004cdc:	701a      	strb	r2, [r3, #0]
          hi2c->pBuffPtr++;
 8004cde:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8004ce0:	3301      	adds	r3, #1
 8004ce2:	6263      	str	r3, [r4, #36]	; 0x24
          hi2c->XferSize--;
 8004ce4:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 8004ce6:	3b01      	subs	r3, #1
 8004ce8:	8523      	strh	r3, [r4, #40]	; 0x28
          hi2c->XferCount--;
 8004cea:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8004cec:	3b01      	subs	r3, #1
 8004cee:	b29b      	uxth	r3, r3
 8004cf0:	8563      	strh	r3, [r4, #42]	; 0x2a
 8004cf2:	e7e2      	b.n	8004cba <HAL_I2C_Mem_Read+0xea>
    else if (hi2c->XferSize == 2U)
 8004cf4:	2a02      	cmp	r2, #2
 8004cf6:	d10e      	bne.n	8004d16 <HAL_I2C_Mem_Read+0x146>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8004cf8:	681a      	ldr	r2, [r3, #0]
 8004cfa:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8004cfe:	601a      	str	r2, [r3, #0]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 8004d00:	681a      	ldr	r2, [r3, #0]
 8004d02:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 8004d06:	601a      	str	r2, [r3, #0]
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8004d08:	9004      	str	r0, [sp, #16]
 8004d0a:	695a      	ldr	r2, [r3, #20]
 8004d0c:	9204      	str	r2, [sp, #16]
 8004d0e:	699b      	ldr	r3, [r3, #24]
 8004d10:	9304      	str	r3, [sp, #16]
 8004d12:	9b04      	ldr	r3, [sp, #16]
 8004d14:	e7cf      	b.n	8004cb6 <HAL_I2C_Mem_Read+0xe6>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8004d16:	9005      	str	r0, [sp, #20]
 8004d18:	695a      	ldr	r2, [r3, #20]
 8004d1a:	9205      	str	r2, [sp, #20]
 8004d1c:	699b      	ldr	r3, [r3, #24]
 8004d1e:	9305      	str	r3, [sp, #20]
 8004d20:	9b05      	ldr	r3, [sp, #20]
 8004d22:	e7c8      	b.n	8004cb6 <HAL_I2C_Mem_Read+0xe6>
        else if (hi2c->XferSize == 2U)
 8004d24:	2b02      	cmp	r3, #2
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8004d26:	9600      	str	r6, [sp, #0]
 8004d28:	463b      	mov	r3, r7
 8004d2a:	f04f 0200 	mov.w	r2, #0
 8004d2e:	4641      	mov	r1, r8
 8004d30:	4620      	mov	r0, r4
        else if (hi2c->XferSize == 2U)
 8004d32:	d119      	bne.n	8004d68 <HAL_I2C_Mem_Read+0x198>
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8004d34:	f7ff fce4 	bl	8004700 <I2C_WaitOnFlagUntilTimeout>
 8004d38:	2800      	cmp	r0, #0
 8004d3a:	d194      	bne.n	8004c66 <HAL_I2C_Mem_Read+0x96>
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8004d3c:	6823      	ldr	r3, [r4, #0]
 8004d3e:	681a      	ldr	r2, [r3, #0]
 8004d40:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8004d44:	601a      	str	r2, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8004d46:	691a      	ldr	r2, [r3, #16]
 8004d48:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8004d4a:	701a      	strb	r2, [r3, #0]
          hi2c->pBuffPtr++;
 8004d4c:	6a62      	ldr	r2, [r4, #36]	; 0x24
 8004d4e:	1c53      	adds	r3, r2, #1
 8004d50:	6263      	str	r3, [r4, #36]	; 0x24
          hi2c->XferSize--;
 8004d52:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 8004d54:	3b01      	subs	r3, #1
 8004d56:	8523      	strh	r3, [r4, #40]	; 0x28
          hi2c->XferCount--;
 8004d58:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8004d5a:	3b01      	subs	r3, #1
 8004d5c:	b29b      	uxth	r3, r3
 8004d5e:	8563      	strh	r3, [r4, #42]	; 0x2a
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8004d60:	6823      	ldr	r3, [r4, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8004d62:	691b      	ldr	r3, [r3, #16]
 8004d64:	7053      	strb	r3, [r2, #1]
 8004d66:	e7ba      	b.n	8004cde <HAL_I2C_Mem_Read+0x10e>
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8004d68:	f7ff fcca 	bl	8004700 <I2C_WaitOnFlagUntilTimeout>
 8004d6c:	4602      	mov	r2, r0
 8004d6e:	2800      	cmp	r0, #0
 8004d70:	f47f af79 	bne.w	8004c66 <HAL_I2C_Mem_Read+0x96>
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8004d74:	6823      	ldr	r3, [r4, #0]
 8004d76:	6819      	ldr	r1, [r3, #0]
 8004d78:	f421 6180 	bic.w	r1, r1, #1024	; 0x400
 8004d7c:	6019      	str	r1, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8004d7e:	6919      	ldr	r1, [r3, #16]
 8004d80:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8004d82:	7019      	strb	r1, [r3, #0]
          hi2c->pBuffPtr++;
 8004d84:	6a63      	ldr	r3, [r4, #36]	; 0x24
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8004d86:	9600      	str	r6, [sp, #0]
          hi2c->pBuffPtr++;
 8004d88:	3301      	adds	r3, #1
 8004d8a:	6263      	str	r3, [r4, #36]	; 0x24
          hi2c->XferSize--;
 8004d8c:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 8004d8e:	3b01      	subs	r3, #1
 8004d90:	8523      	strh	r3, [r4, #40]	; 0x28
          hi2c->XferCount--;
 8004d92:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8004d94:	3b01      	subs	r3, #1
 8004d96:	b29b      	uxth	r3, r3
 8004d98:	8563      	strh	r3, [r4, #42]	; 0x2a
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8004d9a:	4641      	mov	r1, r8
 8004d9c:	463b      	mov	r3, r7
 8004d9e:	4620      	mov	r0, r4
 8004da0:	e7c8      	b.n	8004d34 <HAL_I2C_Mem_Read+0x164>
        if (I2C_WaitOnRXNEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8004da2:	4632      	mov	r2, r6
 8004da4:	4639      	mov	r1, r7
 8004da6:	4620      	mov	r0, r4
 8004da8:	f7ff fc7b 	bl	80046a2 <I2C_WaitOnRXNEFlagUntilTimeout>
 8004dac:	2800      	cmp	r0, #0
 8004dae:	f47f af5a 	bne.w	8004c66 <HAL_I2C_Mem_Read+0x96>
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8004db2:	6823      	ldr	r3, [r4, #0]
 8004db4:	691a      	ldr	r2, [r3, #16]
 8004db6:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8004db8:	701a      	strb	r2, [r3, #0]
        hi2c->pBuffPtr++;
 8004dba:	6a62      	ldr	r2, [r4, #36]	; 0x24
 8004dbc:	1c53      	adds	r3, r2, #1
 8004dbe:	6263      	str	r3, [r4, #36]	; 0x24
        hi2c->XferSize--;
 8004dc0:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 8004dc2:	3b01      	subs	r3, #1
 8004dc4:	8523      	strh	r3, [r4, #40]	; 0x28
        hi2c->XferCount--;
 8004dc6:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8004dc8:	3b01      	subs	r3, #1
 8004dca:	b29b      	uxth	r3, r3
 8004dcc:	8563      	strh	r3, [r4, #42]	; 0x2a
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 8004dce:	6823      	ldr	r3, [r4, #0]
 8004dd0:	6959      	ldr	r1, [r3, #20]
 8004dd2:	0749      	lsls	r1, r1, #29
 8004dd4:	f57f af71 	bpl.w	8004cba <HAL_I2C_Mem_Read+0xea>
 8004dd8:	e7c3      	b.n	8004d62 <HAL_I2C_Mem_Read+0x192>
 8004dda:	bf00      	nop
 8004ddc:	00100002 	.word	0x00100002
 8004de0:	ffff0000 	.word	0xffff0000
 8004de4:	00010004 	.word	0x00010004

08004de8 <HAL_I2CEx_ConfigAnalogFilter>:
{
  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_ANALOG_FILTER(AnalogFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 8004de8:	f890 203d 	ldrb.w	r2, [r0, #61]	; 0x3d
 8004dec:	b2d2      	uxtb	r2, r2
 8004dee:	2a20      	cmp	r2, #32
{
 8004df0:	b510      	push	{r4, lr}
  if (hi2c->State == HAL_I2C_STATE_READY)
 8004df2:	d116      	bne.n	8004e22 <HAL_I2CEx_ConfigAnalogFilter+0x3a>
  {
    hi2c->State = HAL_I2C_STATE_BUSY;
 8004df4:	2324      	movs	r3, #36	; 0x24
 8004df6:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d

    /* Disable the selected I2C peripheral */
    __HAL_I2C_DISABLE(hi2c);
 8004dfa:	6803      	ldr	r3, [r0, #0]
 8004dfc:	681c      	ldr	r4, [r3, #0]
 8004dfe:	f024 0401 	bic.w	r4, r4, #1
 8004e02:	601c      	str	r4, [r3, #0]

    /* Reset I2Cx ANOFF bit */
    hi2c->Instance->FLTR &= ~(I2C_FLTR_ANOFF);
 8004e04:	6a5c      	ldr	r4, [r3, #36]	; 0x24
 8004e06:	f024 0410 	bic.w	r4, r4, #16
 8004e0a:	625c      	str	r4, [r3, #36]	; 0x24

    /* Disable the analog filter */
    hi2c->Instance->FLTR |= AnalogFilter;
 8004e0c:	6a5c      	ldr	r4, [r3, #36]	; 0x24
 8004e0e:	4321      	orrs	r1, r4
 8004e10:	6259      	str	r1, [r3, #36]	; 0x24

    __HAL_I2C_ENABLE(hi2c);
 8004e12:	6819      	ldr	r1, [r3, #0]
 8004e14:	f041 0101 	orr.w	r1, r1, #1
 8004e18:	6019      	str	r1, [r3, #0]

    hi2c->State = HAL_I2C_STATE_READY;
 8004e1a:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d

    return HAL_OK;
 8004e1e:	2000      	movs	r0, #0
  }
  else
  {
    return HAL_BUSY;
  }
}
 8004e20:	bd10      	pop	{r4, pc}
    return HAL_BUSY;
 8004e22:	2002      	movs	r0, #2
 8004e24:	e7fc      	b.n	8004e20 <HAL_I2CEx_ConfigAnalogFilter+0x38>

08004e26 <HAL_I2CEx_ConfigDigitalFilter>:
  *                the configuration information for the specified I2Cx peripheral.
  * @param  DigitalFilter Coefficient of digital noise filter between 0x00 and 0x0F.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2CEx_ConfigDigitalFilter(I2C_HandleTypeDef *hi2c, uint32_t DigitalFilter)
{
 8004e26:	b530      	push	{r4, r5, lr}

  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_DIGITAL_FILTER(DigitalFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 8004e28:	f890 403d 	ldrb.w	r4, [r0, #61]	; 0x3d
 8004e2c:	b2e4      	uxtb	r4, r4
 8004e2e:	2c20      	cmp	r4, #32
 8004e30:	d116      	bne.n	8004e60 <HAL_I2CEx_ConfigDigitalFilter+0x3a>
  {
    hi2c->State = HAL_I2C_STATE_BUSY;

    /* Disable the selected I2C peripheral */
    __HAL_I2C_DISABLE(hi2c);
 8004e32:	6802      	ldr	r2, [r0, #0]
    hi2c->State = HAL_I2C_STATE_BUSY;
 8004e34:	2324      	movs	r3, #36	; 0x24
 8004e36:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d
    __HAL_I2C_DISABLE(hi2c);
 8004e3a:	6815      	ldr	r5, [r2, #0]
 8004e3c:	f025 0501 	bic.w	r5, r5, #1
 8004e40:	6015      	str	r5, [r2, #0]

    /* Get the old register value */
    tmpreg = hi2c->Instance->FLTR;
 8004e42:	6a55      	ldr	r5, [r2, #36]	; 0x24

    /* Reset I2Cx DNF bit [3:0] */
    tmpreg &= ~(I2C_FLTR_DNF);
 8004e44:	f64f 73f0 	movw	r3, #65520	; 0xfff0
 8004e48:	402b      	ands	r3, r5

    /* Set I2Cx DNF coefficient */
    tmpreg |= DigitalFilter;
 8004e4a:	430b      	orrs	r3, r1

    /* Store the new register value */
    hi2c->Instance->FLTR = tmpreg;
 8004e4c:	b29b      	uxth	r3, r3
 8004e4e:	6253      	str	r3, [r2, #36]	; 0x24

    __HAL_I2C_ENABLE(hi2c);
 8004e50:	6813      	ldr	r3, [r2, #0]
 8004e52:	f043 0301 	orr.w	r3, r3, #1
 8004e56:	6013      	str	r3, [r2, #0]

    hi2c->State = HAL_I2C_STATE_READY;
 8004e58:	f880 403d 	strb.w	r4, [r0, #61]	; 0x3d

    return HAL_OK;
 8004e5c:	2000      	movs	r0, #0
  }
  else
  {
    return HAL_BUSY;
  }
}
 8004e5e:	bd30      	pop	{r4, r5, pc}
    return HAL_BUSY;
 8004e60:	2002      	movs	r0, #2
 8004e62:	e7fc      	b.n	8004e5e <HAL_I2CEx_ConfigDigitalFilter+0x38>

08004e64 <LTDC_SetConfig>:
  * @param  LayerIdx  LTDC Layer index.
  *                   This parameter can be one of the following values: LTDC_LAYER_1 (0) or LTDC_LAYER_2 (1)
  * @retval None
  */
static void LTDC_SetConfig(LTDC_HandleTypeDef *hltdc, LTDC_LayerCfgTypeDef *pLayerCfg, uint32_t LayerIdx)
{
 8004e64:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  uint32_t tmp1;
  uint32_t tmp2;

  /* Configure the horizontal start and stop position */
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 8004e68:	01d2      	lsls	r2, r2, #7
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8004e6a:	6804      	ldr	r4, [r0, #0]
 8004e6c:	684f      	ldr	r7, [r1, #4]
 8004e6e:	68e5      	ldr	r5, [r4, #12]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 8004e70:	f8d1 c000 	ldr.w	ip, [r1]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);

  /* Configure the default color values */
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
  tmp2 = (pLayerCfg->Alpha0 << 24U);
 8004e74:	f8d1 9018 	ldr.w	r9, [r1, #24]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 8004e78:	3284      	adds	r2, #132	; 0x84
 8004e7a:	18a3      	adds	r3, r4, r2
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 8004e7c:	f10c 0601 	add.w	r6, ip, #1
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 8004e80:	6858      	ldr	r0, [r3, #4]
 8004e82:	f400 4070 	and.w	r0, r0, #61440	; 0xf000
 8004e86:	6058      	str	r0, [r3, #4]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 8004e88:	68e0      	ldr	r0, [r4, #12]
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8004e8a:	f3c5 450b 	ubfx	r5, r5, #16, #12
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 8004e8e:	f3c0 400b 	ubfx	r0, r0, #16, #12
 8004e92:	4430      	add	r0, r6
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8004e94:	443d      	add	r5, r7
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 8004e96:	ea40 4005 	orr.w	r0, r0, r5, lsl #16
 8004e9a:	6058      	str	r0, [r3, #4]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 8004e9c:	68e0      	ldr	r0, [r4, #12]
 8004e9e:	68cd      	ldr	r5, [r1, #12]
 8004ea0:	f3c0 000a 	ubfx	r0, r0, #0, #11
 8004ea4:	4405      	add	r5, r0
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR &= ~(LTDC_LxWVPCR_WVSTPOS | LTDC_LxWVPCR_WVSPPOS);
 8004ea6:	6898      	ldr	r0, [r3, #8]
 8004ea8:	f400 4070 	and.w	r0, r0, #61440	; 0xf000
 8004eac:	6098      	str	r0, [r3, #8]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
 8004eae:	68e6      	ldr	r6, [r4, #12]
 8004eb0:	6888      	ldr	r0, [r1, #8]
 8004eb2:	f3c6 060a 	ubfx	r6, r6, #0, #11
 8004eb6:	3001      	adds	r0, #1
 8004eb8:	4430      	add	r0, r6
 8004eba:	ea40 4005 	orr.w	r0, r0, r5, lsl #16
 8004ebe:	6098      	str	r0, [r3, #8]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 8004ec0:	6918      	ldr	r0, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 8004ec2:	690e      	ldr	r6, [r1, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 8004ec4:	f020 0007 	bic.w	r0, r0, #7
 8004ec8:	6118      	str	r0, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED | LTDC_LxDCCR_DCALPHA);
 8004eca:	f04f 0e00 	mov.w	lr, #0
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 8004ece:	611e      	str	r6, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED | LTDC_LxDCCR_DCALPHA);
 8004ed0:	699d      	ldr	r5, [r3, #24]
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
 8004ed2:	f891 0032 	ldrb.w	r0, [r1, #50]	; 0x32
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
 8004ed6:	f891 8031 	ldrb.w	r8, [r1, #49]	; 0x31
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED | LTDC_LxDCCR_DCALPHA);
 8004eda:	f8c3 e018 	str.w	lr, [r3, #24]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR = (pLayerCfg->Backcolor.Blue | tmp | tmp1 | tmp2);
 8004ede:	f891 5030 	ldrb.w	r5, [r1, #48]	; 0x30
 8004ee2:	ea45 6509 	orr.w	r5, r5, r9, lsl #24
 8004ee6:	ea45 2508 	orr.w	r5, r5, r8, lsl #8
 8004eea:	ea45 4500 	orr.w	r5, r5, r0, lsl #16
 8004eee:	619d      	str	r5, [r3, #24]

  /* Specifies the constant alpha value */
  LTDC_LAYER(hltdc, LayerIdx)->CACR &= ~(LTDC_LxCACR_CONSTA);
 8004ef0:	6958      	ldr	r0, [r3, #20]
 8004ef2:	f020 00ff 	bic.w	r0, r0, #255	; 0xff
 8004ef6:	6158      	str	r0, [r3, #20]
  LTDC_LAYER(hltdc, LayerIdx)->CACR = (pLayerCfg->Alpha);
 8004ef8:	6948      	ldr	r0, [r1, #20]
 8004efa:	6158      	str	r0, [r3, #20]

  /* Specifies the blending factors */
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
 8004efc:	69d8      	ldr	r0, [r3, #28]
 8004efe:	f420 60e0 	bic.w	r0, r0, #1792	; 0x700
 8004f02:	f020 0007 	bic.w	r0, r0, #7
 8004f06:	61d8      	str	r0, [r3, #28]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR = (pLayerCfg->BlendingFactor1 | pLayerCfg->BlendingFactor2);
 8004f08:	e9d1 5007 	ldrd	r5, r0, [r1, #28]
 8004f0c:	4305      	orrs	r5, r0
 8004f0e:	61dd      	str	r5, [r3, #28]

  /* Configure the color frame buffer start address */
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 8004f10:	6a98      	ldr	r0, [r3, #40]	; 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 8004f12:	6a48      	ldr	r0, [r1, #36]	; 0x24
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 8004f14:	f8c3 e028 	str.w	lr, [r3, #40]	; 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 8004f18:	6298      	str	r0, [r3, #40]	; 0x28

  if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
 8004f1a:	b31e      	cbz	r6, 8004f64 <LTDC_SetConfig+0x100>
  {
    tmp = 4U;
  }
  else if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_RGB888)
 8004f1c:	2e01      	cmp	r6, #1
 8004f1e:	d023      	beq.n	8004f68 <LTDC_SetConfig+0x104>
  {
    tmp = 3U;
  }
  else if ((pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB4444) || \
 8004f20:	1eb0      	subs	r0, r6, #2
 8004f22:	2802      	cmp	r0, #2
 8004f24:	d922      	bls.n	8004f6c <LTDC_SetConfig+0x108>
           (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_RGB565)   || \
           (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB1555) || \
 8004f26:	2e07      	cmp	r6, #7
  {
    tmp = 2U;
  }
  else
  {
    tmp = 1U;
 8004f28:	bf0c      	ite	eq
 8004f2a:	2002      	moveq	r0, #2
 8004f2c:	2001      	movne	r0, #1
  }

  /* Configure the color frame buffer pitch in byte */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
 8004f2e:	6add      	ldr	r5, [r3, #44]	; 0x2c
 8004f30:	f005 25e0 	and.w	r5, r5, #3758153728	; 0xe000e000
 8004f34:	62dd      	str	r5, [r3, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 8004f36:	6a8d      	ldr	r5, [r1, #40]	; 0x28
  /* Configure the frame buffer line number */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 8004f38:	6ac9      	ldr	r1, [r1, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 8004f3a:	eba7 070c 	sub.w	r7, r7, ip
 8004f3e:	4345      	muls	r5, r0
 8004f40:	4378      	muls	r0, r7
 8004f42:	3003      	adds	r0, #3
 8004f44:	ea40 4005 	orr.w	r0, r0, r5, lsl #16
 8004f48:	62d8      	str	r0, [r3, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
 8004f4a:	6b18      	ldr	r0, [r3, #48]	; 0x30
 8004f4c:	f420 60ff 	bic.w	r0, r0, #2040	; 0x7f8
 8004f50:	f020 0007 	bic.w	r0, r0, #7
 8004f54:	6318      	str	r0, [r3, #48]	; 0x30
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 8004f56:	6319      	str	r1, [r3, #48]	; 0x30

  /* Enable LTDC_Layer by setting LEN bit */
  LTDC_LAYER(hltdc, LayerIdx)->CR |= (uint32_t)LTDC_LxCR_LEN;
 8004f58:	58a3      	ldr	r3, [r4, r2]
 8004f5a:	f043 0301 	orr.w	r3, r3, #1
 8004f5e:	50a3      	str	r3, [r4, r2]
}
 8004f60:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    tmp = 4U;
 8004f64:	2004      	movs	r0, #4
 8004f66:	e7e2      	b.n	8004f2e <LTDC_SetConfig+0xca>
    tmp = 3U;
 8004f68:	2003      	movs	r0, #3
 8004f6a:	e7e0      	b.n	8004f2e <LTDC_SetConfig+0xca>
    tmp = 2U;
 8004f6c:	2002      	movs	r0, #2
 8004f6e:	e7de      	b.n	8004f2e <LTDC_SetConfig+0xca>

08004f70 <HAL_LTDC_Init>:
{
 8004f70:	b538      	push	{r3, r4, r5, lr}
  if (hltdc == NULL)
 8004f72:	4604      	mov	r4, r0
 8004f74:	2800      	cmp	r0, #0
 8004f76:	d063      	beq.n	8005040 <HAL_LTDC_Init+0xd0>
  if (hltdc->State == HAL_LTDC_STATE_RESET)
 8004f78:	f890 30a1 	ldrb.w	r3, [r0, #161]	; 0xa1
 8004f7c:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8004f80:	b91b      	cbnz	r3, 8004f8a <HAL_LTDC_Init+0x1a>
    hltdc->Lock = HAL_UNLOCKED;
 8004f82:	f880 20a0 	strb.w	r2, [r0, #160]	; 0xa0
    HAL_LTDC_MspInit(hltdc);
 8004f86:	f7fd f9cf 	bl	8002328 <HAL_LTDC_MspInit>
  hltdc->State = HAL_LTDC_STATE_BUSY;
 8004f8a:	2302      	movs	r3, #2
 8004f8c:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
 8004f90:	6823      	ldr	r3, [r4, #0]
 8004f92:	699a      	ldr	r2, [r3, #24]
 8004f94:	f022 4270 	bic.w	r2, r2, #4026531840	; 0xf0000000
 8004f98:	619a      	str	r2, [r3, #24]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 8004f9a:	e9d4 2001 	ldrd	r2, r0, [r4, #4]
 8004f9e:	4302      	orrs	r2, r0
 8004fa0:	68e0      	ldr	r0, [r4, #12]
 8004fa2:	6999      	ldr	r1, [r3, #24]
 8004fa4:	4302      	orrs	r2, r0
                                     hltdc->Init.DEPolarity | hltdc->Init.PCPolarity);
 8004fa6:	6920      	ldr	r0, [r4, #16]
 8004fa8:	4302      	orrs	r2, r0
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 8004faa:	430a      	orrs	r2, r1
 8004fac:	619a      	str	r2, [r3, #24]
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 8004fae:	689a      	ldr	r2, [r3, #8]
 8004fb0:	4924      	ldr	r1, [pc, #144]	; (8005044 <HAL_LTDC_Init+0xd4>)
  tmp = (hltdc->Init.HorizontalSync << 16U);
 8004fb2:	6960      	ldr	r0, [r4, #20]
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 8004fb4:	400a      	ands	r2, r1
 8004fb6:	609a      	str	r2, [r3, #8]
  hltdc->Instance->SSCR |= (tmp | hltdc->Init.VerticalSync);
 8004fb8:	689a      	ldr	r2, [r3, #8]
 8004fba:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 8004fbe:	69a0      	ldr	r0, [r4, #24]
 8004fc0:	4302      	orrs	r2, r0
 8004fc2:	609a      	str	r2, [r3, #8]
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 8004fc4:	68da      	ldr	r2, [r3, #12]
  tmp = (hltdc->Init.AccumulatedHBP << 16U);
 8004fc6:	69e0      	ldr	r0, [r4, #28]
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 8004fc8:	400a      	ands	r2, r1
 8004fca:	60da      	str	r2, [r3, #12]
  hltdc->Instance->BPCR |= (tmp | hltdc->Init.AccumulatedVBP);
 8004fcc:	68da      	ldr	r2, [r3, #12]
 8004fce:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 8004fd2:	6a20      	ldr	r0, [r4, #32]
 8004fd4:	4302      	orrs	r2, r0
 8004fd6:	60da      	str	r2, [r3, #12]
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 8004fd8:	691a      	ldr	r2, [r3, #16]
  tmp = (hltdc->Init.AccumulatedActiveW << 16U);
 8004fda:	6a60      	ldr	r0, [r4, #36]	; 0x24
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 8004fdc:	400a      	ands	r2, r1
 8004fde:	611a      	str	r2, [r3, #16]
  hltdc->Instance->AWCR |= (tmp | hltdc->Init.AccumulatedActiveH);
 8004fe0:	691a      	ldr	r2, [r3, #16]
 8004fe2:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 8004fe6:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 8004fe8:	4302      	orrs	r2, r0
 8004fea:	611a      	str	r2, [r3, #16]
  hltdc->Instance->TWCR &= ~(LTDC_TWCR_TOTALH | LTDC_TWCR_TOTALW);
 8004fec:	695a      	ldr	r2, [r3, #20]
 8004fee:	4011      	ands	r1, r2
 8004ff0:	6159      	str	r1, [r3, #20]
  hltdc->Instance->TWCR |= (tmp | hltdc->Init.TotalHeigh);
 8004ff2:	695a      	ldr	r2, [r3, #20]
  tmp = (hltdc->Init.TotalWidth << 16U);
 8004ff4:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
  hltdc->Instance->TWCR |= (tmp | hltdc->Init.TotalHeigh);
 8004ff6:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 8004ffa:	6b21      	ldr	r1, [r4, #48]	; 0x30
 8004ffc:	430a      	orrs	r2, r1
 8004ffe:	615a      	str	r2, [r3, #20]
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 8005000:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
  tmp1 = ((uint32_t)(hltdc->Init.Backcolor.Red) << 16U);
 8005002:	f894 0036 	ldrb.w	r0, [r4, #54]	; 0x36
  tmp = ((uint32_t)(hltdc->Init.Backcolor.Green) << 8U);
 8005006:	f894 5035 	ldrb.w	r5, [r4, #53]	; 0x35
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 800500a:	f001 417f 	and.w	r1, r1, #4278190080	; 0xff000000
 800500e:	62d9      	str	r1, [r3, #44]	; 0x2c
  hltdc->Instance->BCCR |= (tmp1 | tmp | hltdc->Init.Backcolor.Blue);
 8005010:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 8005012:	f894 2034 	ldrb.w	r2, [r4, #52]	; 0x34
 8005016:	430a      	orrs	r2, r1
 8005018:	ea42 2205 	orr.w	r2, r2, r5, lsl #8
 800501c:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 8005020:	62da      	str	r2, [r3, #44]	; 0x2c
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_TE | LTDC_IT_FU);
 8005022:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8005024:	f042 0206 	orr.w	r2, r2, #6
 8005028:	635a      	str	r2, [r3, #52]	; 0x34
  __HAL_LTDC_ENABLE(hltdc);
 800502a:	699a      	ldr	r2, [r3, #24]
 800502c:	f042 0201 	orr.w	r2, r2, #1
 8005030:	619a      	str	r2, [r3, #24]
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 8005032:	2000      	movs	r0, #0
  hltdc->State = HAL_LTDC_STATE_READY;
 8005034:	2301      	movs	r3, #1
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 8005036:	f8c4 00a4 	str.w	r0, [r4, #164]	; 0xa4
  hltdc->State = HAL_LTDC_STATE_READY;
 800503a:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
}
 800503e:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 8005040:	2001      	movs	r0, #1
 8005042:	e7fc      	b.n	800503e <HAL_LTDC_Init+0xce>
 8005044:	f000f800 	.word	0xf000f800

08005048 <HAL_LTDC_ErrorCallback>:
 8005048:	4770      	bx	lr

0800504a <HAL_LTDC_ReloadEventCallback>:
 800504a:	4770      	bx	lr

0800504c <HAL_LTDC_IRQHandler>:
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 800504c:	6803      	ldr	r3, [r0, #0]
{
 800504e:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 8005050:	6b9e      	ldr	r6, [r3, #56]	; 0x38
  uint32_t itsources = READ_REG(hltdc->Instance->IER);
 8005052:	6b5d      	ldr	r5, [r3, #52]	; 0x34
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 8005054:	0772      	lsls	r2, r6, #29
{
 8005056:	4604      	mov	r4, r0
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 8005058:	d514      	bpl.n	8005084 <HAL_LTDC_IRQHandler+0x38>
 800505a:	0769      	lsls	r1, r5, #29
 800505c:	d512      	bpl.n	8005084 <HAL_LTDC_IRQHandler+0x38>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_TE);
 800505e:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8005060:	f022 0204 	bic.w	r2, r2, #4
 8005064:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_TE);
 8005066:	2204      	movs	r2, #4
 8005068:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_TE;
 800506a:	f8d0 30a4 	ldr.w	r3, [r0, #164]	; 0xa4
 800506e:	f043 0301 	orr.w	r3, r3, #1
 8005072:	f8c0 30a4 	str.w	r3, [r0, #164]	; 0xa4
    __HAL_UNLOCK(hltdc);
 8005076:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_ERROR;
 8005078:	f880 20a1 	strb.w	r2, [r0, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 800507c:	f880 30a0 	strb.w	r3, [r0, #160]	; 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 8005080:	f7ff ffe2 	bl	8005048 <HAL_LTDC_ErrorCallback>
  if (((isrflags & LTDC_ISR_FUIF) != 0U) && ((itsources & LTDC_IER_FUIE) != 0U))
 8005084:	07b2      	lsls	r2, r6, #30
 8005086:	d516      	bpl.n	80050b6 <HAL_LTDC_IRQHandler+0x6a>
 8005088:	07ab      	lsls	r3, r5, #30
 800508a:	d514      	bpl.n	80050b6 <HAL_LTDC_IRQHandler+0x6a>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_FU);
 800508c:	6823      	ldr	r3, [r4, #0]
 800508e:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8005090:	f022 0202 	bic.w	r2, r2, #2
 8005094:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_FU);
 8005096:	2202      	movs	r2, #2
 8005098:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_FU;
 800509a:	f8d4 30a4 	ldr.w	r3, [r4, #164]	; 0xa4
 800509e:	4313      	orrs	r3, r2
 80050a0:	f8c4 30a4 	str.w	r3, [r4, #164]	; 0xa4
    hltdc->State = HAL_LTDC_STATE_ERROR;
 80050a4:	2304      	movs	r3, #4
 80050a6:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 80050aa:	2300      	movs	r3, #0
 80050ac:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 80050b0:	4620      	mov	r0, r4
 80050b2:	f7ff ffc9 	bl	8005048 <HAL_LTDC_ErrorCallback>
  if (((isrflags & LTDC_ISR_LIF) != 0U) && ((itsources & LTDC_IER_LIE) != 0U))
 80050b6:	07f0      	lsls	r0, r6, #31
 80050b8:	d510      	bpl.n	80050dc <HAL_LTDC_IRQHandler+0x90>
 80050ba:	07e9      	lsls	r1, r5, #31
 80050bc:	d50e      	bpl.n	80050dc <HAL_LTDC_IRQHandler+0x90>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 80050be:	6823      	ldr	r3, [r4, #0]
 80050c0:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 80050c2:	f022 0201 	bic.w	r2, r2, #1
 80050c6:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_LI);
 80050c8:	2201      	movs	r2, #1
 80050ca:	63da      	str	r2, [r3, #60]	; 0x3c
    __HAL_UNLOCK(hltdc);
 80050cc:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_READY;
 80050ce:	f884 20a1 	strb.w	r2, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 80050d2:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_LineEventCallback(hltdc);
 80050d6:	4620      	mov	r0, r4
 80050d8:	f7fc fc62 	bl	80019a0 <HAL_LTDC_LineEventCallback>
  if (((isrflags & LTDC_ISR_RRIF) != 0U) && ((itsources & LTDC_IER_RRIE) != 0U))
 80050dc:	0732      	lsls	r2, r6, #28
 80050de:	d511      	bpl.n	8005104 <HAL_LTDC_IRQHandler+0xb8>
 80050e0:	072b      	lsls	r3, r5, #28
 80050e2:	d50f      	bpl.n	8005104 <HAL_LTDC_IRQHandler+0xb8>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
 80050e4:	6823      	ldr	r3, [r4, #0]
 80050e6:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 80050e8:	f022 0208 	bic.w	r2, r2, #8
 80050ec:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_RR);
 80050ee:	2208      	movs	r2, #8
 80050f0:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->State = HAL_LTDC_STATE_READY;
 80050f2:	2301      	movs	r3, #1
 80050f4:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 80050f8:	2300      	movs	r3, #0
 80050fa:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_ReloadEventCallback(hltdc);
 80050fe:	4620      	mov	r0, r4
 8005100:	f7ff ffa3 	bl	800504a <HAL_LTDC_ReloadEventCallback>
}
 8005104:	bd70      	pop	{r4, r5, r6, pc}

08005106 <HAL_LTDC_ConfigLayer>:
{
 8005106:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  __HAL_LOCK(hltdc);
 8005108:	f890 30a0 	ldrb.w	r3, [r0, #160]	; 0xa0
 800510c:	2b01      	cmp	r3, #1
{
 800510e:	4606      	mov	r6, r0
 8005110:	468c      	mov	ip, r1
 8005112:	4696      	mov	lr, r2
 8005114:	f04f 0002 	mov.w	r0, #2
  __HAL_LOCK(hltdc);
 8005118:	d01d      	beq.n	8005156 <HAL_LTDC_ConfigLayer+0x50>
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 800511a:	2434      	movs	r4, #52	; 0x34
 800511c:	460d      	mov	r5, r1
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800511e:	f886 00a1 	strb.w	r0, [r6, #161]	; 0xa1
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 8005122:	fb04 6402 	mla	r4, r4, r2, r6
 8005126:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
  __HAL_LOCK(hltdc);
 8005128:	2701      	movs	r7, #1
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 800512a:	3438      	adds	r4, #56	; 0x38
  __HAL_LOCK(hltdc);
 800512c:	f886 70a0 	strb.w	r7, [r6, #160]	; 0xa0
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 8005130:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8005132:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8005134:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8005136:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8005138:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800513a:	682b      	ldr	r3, [r5, #0]
 800513c:	6023      	str	r3, [r4, #0]
  LTDC_SetConfig(hltdc, pLayerCfg, LayerIdx);
 800513e:	4630      	mov	r0, r6
 8005140:	4672      	mov	r2, lr
 8005142:	4661      	mov	r1, ip
 8005144:	f7ff fe8e 	bl	8004e64 <LTDC_SetConfig>
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 8005148:	6833      	ldr	r3, [r6, #0]
  __HAL_UNLOCK(hltdc);
 800514a:	2000      	movs	r0, #0
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 800514c:	625f      	str	r7, [r3, #36]	; 0x24
  hltdc->State  = HAL_LTDC_STATE_READY;
 800514e:	f886 70a1 	strb.w	r7, [r6, #161]	; 0xa1
  __HAL_UNLOCK(hltdc);
 8005152:	f886 00a0 	strb.w	r0, [r6, #160]	; 0xa0
}
 8005156:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08005158 <HAL_LTDC_ProgramLineEvent>:
  __HAL_LOCK(hltdc);
 8005158:	f890 30a0 	ldrb.w	r3, [r0, #160]	; 0xa0
 800515c:	2b01      	cmp	r3, #1
 800515e:	f04f 0302 	mov.w	r3, #2
 8005162:	d012      	beq.n	800518a <HAL_LTDC_ProgramLineEvent+0x32>
  hltdc->State = HAL_LTDC_STATE_BUSY;
 8005164:	f880 30a1 	strb.w	r3, [r0, #161]	; 0xa1
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 8005168:	6803      	ldr	r3, [r0, #0]
 800516a:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800516c:	f022 0201 	bic.w	r2, r2, #1
 8005170:	635a      	str	r2, [r3, #52]	; 0x34
  LTDC->LIPCR = (uint32_t)Line;
 8005172:	4a07      	ldr	r2, [pc, #28]	; (8005190 <HAL_LTDC_ProgramLineEvent+0x38>)
 8005174:	6411      	str	r1, [r2, #64]	; 0x40
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_LI);
 8005176:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8005178:	f042 0201 	orr.w	r2, r2, #1
 800517c:	635a      	str	r2, [r3, #52]	; 0x34
  hltdc->State = HAL_LTDC_STATE_READY;
 800517e:	2301      	movs	r3, #1
 8005180:	f880 30a1 	strb.w	r3, [r0, #161]	; 0xa1
  __HAL_UNLOCK(hltdc);
 8005184:	2300      	movs	r3, #0
 8005186:	f880 30a0 	strb.w	r3, [r0, #160]	; 0xa0
  __HAL_LOCK(hltdc);
 800518a:	4618      	mov	r0, r3
}
 800518c:	4770      	bx	lr
 800518e:	bf00      	nop
 8005190:	40016800 	.word	0x40016800

08005194 <HAL_RCC_OscConfig>:
  *         supported by this API. User should request a transition to HSE Off
  *         first and then HSE On or HSE Bypass.
  * @retval HAL status
  */
__weak HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
{
 8005194:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
  uint32_t tickstart, pll_config;

  /* Check Null pointer */
  if(RCC_OscInitStruct == NULL)
 8005198:	4604      	mov	r4, r0
 800519a:	b908      	cbnz	r0, 80051a0 <HAL_RCC_OscConfig+0xc>
    else
    {
      /* Check if there is a request to disable the PLL used as System clock source */
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
      {
        return HAL_ERROR;
 800519c:	2001      	movs	r0, #1
 800519e:	e03f      	b.n	8005220 <HAL_RCC_OscConfig+0x8c>
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 80051a0:	6803      	ldr	r3, [r0, #0]
 80051a2:	07dd      	lsls	r5, r3, #31
 80051a4:	d410      	bmi.n	80051c8 <HAL_RCC_OscConfig+0x34>
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 80051a6:	6823      	ldr	r3, [r4, #0]
 80051a8:	0798      	lsls	r0, r3, #30
 80051aa:	d45a      	bmi.n	8005262 <HAL_RCC_OscConfig+0xce>
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 80051ac:	6823      	ldr	r3, [r4, #0]
 80051ae:	071a      	lsls	r2, r3, #28
 80051b0:	f100 809c 	bmi.w	80052ec <HAL_RCC_OscConfig+0x158>
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 80051b4:	6823      	ldr	r3, [r4, #0]
 80051b6:	075b      	lsls	r3, r3, #29
 80051b8:	f100 80ba 	bmi.w	8005330 <HAL_RCC_OscConfig+0x19c>
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 80051bc:	69a0      	ldr	r0, [r4, #24]
 80051be:	2800      	cmp	r0, #0
 80051c0:	f040 811b 	bne.w	80053fa <HAL_RCC_OscConfig+0x266>
          return HAL_ERROR;
        }
      }
    }
  }
  return HAL_OK;
 80051c4:	2000      	movs	r0, #0
 80051c6:	e02b      	b.n	8005220 <HAL_RCC_OscConfig+0x8c>
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) ||\
 80051c8:	4ba7      	ldr	r3, [pc, #668]	; (8005468 <HAL_RCC_OscConfig+0x2d4>)
 80051ca:	689a      	ldr	r2, [r3, #8]
 80051cc:	f002 020c 	and.w	r2, r2, #12
 80051d0:	2a04      	cmp	r2, #4
 80051d2:	d007      	beq.n	80051e4 <HAL_RCC_OscConfig+0x50>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 80051d4:	689a      	ldr	r2, [r3, #8]
 80051d6:	f002 020c 	and.w	r2, r2, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) ||\
 80051da:	2a08      	cmp	r2, #8
 80051dc:	d10a      	bne.n	80051f4 <HAL_RCC_OscConfig+0x60>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 80051de:	685b      	ldr	r3, [r3, #4]
 80051e0:	0259      	lsls	r1, r3, #9
 80051e2:	d507      	bpl.n	80051f4 <HAL_RCC_OscConfig+0x60>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 80051e4:	4ba0      	ldr	r3, [pc, #640]	; (8005468 <HAL_RCC_OscConfig+0x2d4>)
 80051e6:	681b      	ldr	r3, [r3, #0]
 80051e8:	039a      	lsls	r2, r3, #14
 80051ea:	d5dc      	bpl.n	80051a6 <HAL_RCC_OscConfig+0x12>
 80051ec:	6863      	ldr	r3, [r4, #4]
 80051ee:	2b00      	cmp	r3, #0
 80051f0:	d1d9      	bne.n	80051a6 <HAL_RCC_OscConfig+0x12>
 80051f2:	e7d3      	b.n	800519c <HAL_RCC_OscConfig+0x8>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 80051f4:	6863      	ldr	r3, [r4, #4]
 80051f6:	4d9c      	ldr	r5, [pc, #624]	; (8005468 <HAL_RCC_OscConfig+0x2d4>)
 80051f8:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 80051fc:	d113      	bne.n	8005226 <HAL_RCC_OscConfig+0x92>
 80051fe:	682b      	ldr	r3, [r5, #0]
 8005200:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8005204:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
 8005206:	f7fe fd6d 	bl	8003ce4 <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800520a:	4d97      	ldr	r5, [pc, #604]	; (8005468 <HAL_RCC_OscConfig+0x2d4>)
        tickstart = HAL_GetTick();
 800520c:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800520e:	682b      	ldr	r3, [r5, #0]
 8005210:	039b      	lsls	r3, r3, #14
 8005212:	d4c8      	bmi.n	80051a6 <HAL_RCC_OscConfig+0x12>
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 8005214:	f7fe fd66 	bl	8003ce4 <HAL_GetTick>
 8005218:	1b80      	subs	r0, r0, r6
 800521a:	2864      	cmp	r0, #100	; 0x64
 800521c:	d9f7      	bls.n	800520e <HAL_RCC_OscConfig+0x7a>
            return HAL_TIMEOUT;
 800521e:	2003      	movs	r0, #3
}
 8005220:	b002      	add	sp, #8
 8005222:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 8005226:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 800522a:	d104      	bne.n	8005236 <HAL_RCC_OscConfig+0xa2>
 800522c:	682b      	ldr	r3, [r5, #0]
 800522e:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 8005232:	602b      	str	r3, [r5, #0]
 8005234:	e7e3      	b.n	80051fe <HAL_RCC_OscConfig+0x6a>
 8005236:	682a      	ldr	r2, [r5, #0]
 8005238:	f422 3280 	bic.w	r2, r2, #65536	; 0x10000
 800523c:	602a      	str	r2, [r5, #0]
 800523e:	682a      	ldr	r2, [r5, #0]
 8005240:	f422 2280 	bic.w	r2, r2, #262144	; 0x40000
 8005244:	602a      	str	r2, [r5, #0]
      if((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 8005246:	2b00      	cmp	r3, #0
 8005248:	d1dd      	bne.n	8005206 <HAL_RCC_OscConfig+0x72>
        tickstart = HAL_GetTick();
 800524a:	f7fe fd4b 	bl	8003ce4 <HAL_GetTick>
 800524e:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 8005250:	682b      	ldr	r3, [r5, #0]
 8005252:	039f      	lsls	r7, r3, #14
 8005254:	d5a7      	bpl.n	80051a6 <HAL_RCC_OscConfig+0x12>
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 8005256:	f7fe fd45 	bl	8003ce4 <HAL_GetTick>
 800525a:	1b80      	subs	r0, r0, r6
 800525c:	2864      	cmp	r0, #100	; 0x64
 800525e:	d9f7      	bls.n	8005250 <HAL_RCC_OscConfig+0xbc>
 8005260:	e7dd      	b.n	800521e <HAL_RCC_OscConfig+0x8a>
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) ||\
 8005262:	4b81      	ldr	r3, [pc, #516]	; (8005468 <HAL_RCC_OscConfig+0x2d4>)
 8005264:	689a      	ldr	r2, [r3, #8]
 8005266:	f012 0f0c 	tst.w	r2, #12
 800526a:	d007      	beq.n	800527c <HAL_RCC_OscConfig+0xe8>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 800526c:	689a      	ldr	r2, [r3, #8]
 800526e:	f002 020c 	and.w	r2, r2, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) ||\
 8005272:	2a08      	cmp	r2, #8
 8005274:	d111      	bne.n	800529a <HAL_RCC_OscConfig+0x106>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 8005276:	685b      	ldr	r3, [r3, #4]
 8005278:	025e      	lsls	r6, r3, #9
 800527a:	d40e      	bmi.n	800529a <HAL_RCC_OscConfig+0x106>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 800527c:	4b7a      	ldr	r3, [pc, #488]	; (8005468 <HAL_RCC_OscConfig+0x2d4>)
 800527e:	681a      	ldr	r2, [r3, #0]
 8005280:	0795      	lsls	r5, r2, #30
 8005282:	d502      	bpl.n	800528a <HAL_RCC_OscConfig+0xf6>
 8005284:	68e2      	ldr	r2, [r4, #12]
 8005286:	2a01      	cmp	r2, #1
 8005288:	d188      	bne.n	800519c <HAL_RCC_OscConfig+0x8>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 800528a:	681a      	ldr	r2, [r3, #0]
 800528c:	6921      	ldr	r1, [r4, #16]
 800528e:	f022 02f8 	bic.w	r2, r2, #248	; 0xf8
 8005292:	ea42 02c1 	orr.w	r2, r2, r1, lsl #3
 8005296:	601a      	str	r2, [r3, #0]
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 8005298:	e788      	b.n	80051ac <HAL_RCC_OscConfig+0x18>
      if((RCC_OscInitStruct->HSIState)!= RCC_HSI_OFF)
 800529a:	68e2      	ldr	r2, [r4, #12]
 800529c:	4b73      	ldr	r3, [pc, #460]	; (800546c <HAL_RCC_OscConfig+0x2d8>)
 800529e:	b1b2      	cbz	r2, 80052ce <HAL_RCC_OscConfig+0x13a>
        __HAL_RCC_HSI_ENABLE();
 80052a0:	2201      	movs	r2, #1
 80052a2:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 80052a4:	f7fe fd1e 	bl	8003ce4 <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 80052a8:	4d6f      	ldr	r5, [pc, #444]	; (8005468 <HAL_RCC_OscConfig+0x2d4>)
        tickstart = HAL_GetTick();
 80052aa:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 80052ac:	682b      	ldr	r3, [r5, #0]
 80052ae:	0798      	lsls	r0, r3, #30
 80052b0:	d507      	bpl.n	80052c2 <HAL_RCC_OscConfig+0x12e>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 80052b2:	682b      	ldr	r3, [r5, #0]
 80052b4:	6922      	ldr	r2, [r4, #16]
 80052b6:	f023 03f8 	bic.w	r3, r3, #248	; 0xf8
 80052ba:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 80052be:	602b      	str	r3, [r5, #0]
 80052c0:	e774      	b.n	80051ac <HAL_RCC_OscConfig+0x18>
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 80052c2:	f7fe fd0f 	bl	8003ce4 <HAL_GetTick>
 80052c6:	1b80      	subs	r0, r0, r6
 80052c8:	2802      	cmp	r0, #2
 80052ca:	d9ef      	bls.n	80052ac <HAL_RCC_OscConfig+0x118>
 80052cc:	e7a7      	b.n	800521e <HAL_RCC_OscConfig+0x8a>
        __HAL_RCC_HSI_DISABLE();
 80052ce:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 80052d0:	f7fe fd08 	bl	8003ce4 <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 80052d4:	4d64      	ldr	r5, [pc, #400]	; (8005468 <HAL_RCC_OscConfig+0x2d4>)
        tickstart = HAL_GetTick();
 80052d6:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 80052d8:	682b      	ldr	r3, [r5, #0]
 80052da:	0799      	lsls	r1, r3, #30
 80052dc:	f57f af66 	bpl.w	80051ac <HAL_RCC_OscConfig+0x18>
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 80052e0:	f7fe fd00 	bl	8003ce4 <HAL_GetTick>
 80052e4:	1b80      	subs	r0, r0, r6
 80052e6:	2802      	cmp	r0, #2
 80052e8:	d9f6      	bls.n	80052d8 <HAL_RCC_OscConfig+0x144>
 80052ea:	e798      	b.n	800521e <HAL_RCC_OscConfig+0x8a>
    if((RCC_OscInitStruct->LSIState)!= RCC_LSI_OFF)
 80052ec:	6962      	ldr	r2, [r4, #20]
 80052ee:	4b60      	ldr	r3, [pc, #384]	; (8005470 <HAL_RCC_OscConfig+0x2dc>)
 80052f0:	b17a      	cbz	r2, 8005312 <HAL_RCC_OscConfig+0x17e>
      __HAL_RCC_LSI_ENABLE();
 80052f2:	2201      	movs	r2, #1
 80052f4:	601a      	str	r2, [r3, #0]
      tickstart = HAL_GetTick();
 80052f6:	f7fe fcf5 	bl	8003ce4 <HAL_GetTick>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 80052fa:	4d5b      	ldr	r5, [pc, #364]	; (8005468 <HAL_RCC_OscConfig+0x2d4>)
      tickstart = HAL_GetTick();
 80052fc:	4606      	mov	r6, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 80052fe:	6f6b      	ldr	r3, [r5, #116]	; 0x74
 8005300:	079f      	lsls	r7, r3, #30
 8005302:	f53f af57 	bmi.w	80051b4 <HAL_RCC_OscConfig+0x20>
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 8005306:	f7fe fced 	bl	8003ce4 <HAL_GetTick>
 800530a:	1b80      	subs	r0, r0, r6
 800530c:	2802      	cmp	r0, #2
 800530e:	d9f6      	bls.n	80052fe <HAL_RCC_OscConfig+0x16a>
 8005310:	e785      	b.n	800521e <HAL_RCC_OscConfig+0x8a>
      __HAL_RCC_LSI_DISABLE();
 8005312:	601a      	str	r2, [r3, #0]
      tickstart = HAL_GetTick();
 8005314:	f7fe fce6 	bl	8003ce4 <HAL_GetTick>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 8005318:	4d53      	ldr	r5, [pc, #332]	; (8005468 <HAL_RCC_OscConfig+0x2d4>)
      tickstart = HAL_GetTick();
 800531a:	4606      	mov	r6, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 800531c:	6f6b      	ldr	r3, [r5, #116]	; 0x74
 800531e:	0798      	lsls	r0, r3, #30
 8005320:	f57f af48 	bpl.w	80051b4 <HAL_RCC_OscConfig+0x20>
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 8005324:	f7fe fcde 	bl	8003ce4 <HAL_GetTick>
 8005328:	1b80      	subs	r0, r0, r6
 800532a:	2802      	cmp	r0, #2
 800532c:	d9f6      	bls.n	800531c <HAL_RCC_OscConfig+0x188>
 800532e:	e776      	b.n	800521e <HAL_RCC_OscConfig+0x8a>
    if(__HAL_RCC_PWR_IS_CLK_DISABLED())
 8005330:	4b4d      	ldr	r3, [pc, #308]	; (8005468 <HAL_RCC_OscConfig+0x2d4>)
 8005332:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8005334:	f012 5280 	ands.w	r2, r2, #268435456	; 0x10000000
 8005338:	d128      	bne.n	800538c <HAL_RCC_OscConfig+0x1f8>
      __HAL_RCC_PWR_CLK_ENABLE();
 800533a:	9201      	str	r2, [sp, #4]
 800533c:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 800533e:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 8005342:	641a      	str	r2, [r3, #64]	; 0x40
 8005344:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8005346:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800534a:	9301      	str	r3, [sp, #4]
 800534c:	9b01      	ldr	r3, [sp, #4]
      pwrclkchanged = SET;
 800534e:	2601      	movs	r6, #1
    if(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 8005350:	4d48      	ldr	r5, [pc, #288]	; (8005474 <HAL_RCC_OscConfig+0x2e0>)
 8005352:	682b      	ldr	r3, [r5, #0]
 8005354:	05d9      	lsls	r1, r3, #23
 8005356:	d51b      	bpl.n	8005390 <HAL_RCC_OscConfig+0x1fc>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 8005358:	68a3      	ldr	r3, [r4, #8]
 800535a:	4d43      	ldr	r5, [pc, #268]	; (8005468 <HAL_RCC_OscConfig+0x2d4>)
 800535c:	2b01      	cmp	r3, #1
 800535e:	d127      	bne.n	80053b0 <HAL_RCC_OscConfig+0x21c>
 8005360:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 8005362:	f043 0301 	orr.w	r3, r3, #1
 8005366:	672b      	str	r3, [r5, #112]	; 0x70
      tickstart = HAL_GetTick();
 8005368:	f7fe fcbc 	bl	8003ce4 <HAL_GetTick>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800536c:	4d3e      	ldr	r5, [pc, #248]	; (8005468 <HAL_RCC_OscConfig+0x2d4>)
      tickstart = HAL_GetTick();
 800536e:	4607      	mov	r7, r0
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8005370:	f241 3888 	movw	r8, #5000	; 0x1388
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8005374:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 8005376:	079b      	lsls	r3, r3, #30
 8005378:	d539      	bpl.n	80053ee <HAL_RCC_OscConfig+0x25a>
    if(pwrclkchanged == SET)
 800537a:	2e00      	cmp	r6, #0
 800537c:	f43f af1e 	beq.w	80051bc <HAL_RCC_OscConfig+0x28>
      __HAL_RCC_PWR_CLK_DISABLE();
 8005380:	4a39      	ldr	r2, [pc, #228]	; (8005468 <HAL_RCC_OscConfig+0x2d4>)
 8005382:	6c13      	ldr	r3, [r2, #64]	; 0x40
 8005384:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 8005388:	6413      	str	r3, [r2, #64]	; 0x40
 800538a:	e717      	b.n	80051bc <HAL_RCC_OscConfig+0x28>
    FlagStatus       pwrclkchanged = RESET;
 800538c:	2600      	movs	r6, #0
 800538e:	e7df      	b.n	8005350 <HAL_RCC_OscConfig+0x1bc>
      SET_BIT(PWR->CR, PWR_CR_DBP);
 8005390:	682b      	ldr	r3, [r5, #0]
 8005392:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8005396:	602b      	str	r3, [r5, #0]
      tickstart = HAL_GetTick();
 8005398:	f7fe fca4 	bl	8003ce4 <HAL_GetTick>
 800539c:	4607      	mov	r7, r0
      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 800539e:	682b      	ldr	r3, [r5, #0]
 80053a0:	05da      	lsls	r2, r3, #23
 80053a2:	d4d9      	bmi.n	8005358 <HAL_RCC_OscConfig+0x1c4>
        if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 80053a4:	f7fe fc9e 	bl	8003ce4 <HAL_GetTick>
 80053a8:	1bc0      	subs	r0, r0, r7
 80053aa:	2802      	cmp	r0, #2
 80053ac:	d9f7      	bls.n	800539e <HAL_RCC_OscConfig+0x20a>
 80053ae:	e736      	b.n	800521e <HAL_RCC_OscConfig+0x8a>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 80053b0:	2b05      	cmp	r3, #5
 80053b2:	d104      	bne.n	80053be <HAL_RCC_OscConfig+0x22a>
 80053b4:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 80053b6:	f043 0304 	orr.w	r3, r3, #4
 80053ba:	672b      	str	r3, [r5, #112]	; 0x70
 80053bc:	e7d0      	b.n	8005360 <HAL_RCC_OscConfig+0x1cc>
 80053be:	6f2a      	ldr	r2, [r5, #112]	; 0x70
 80053c0:	f022 0201 	bic.w	r2, r2, #1
 80053c4:	672a      	str	r2, [r5, #112]	; 0x70
 80053c6:	6f2a      	ldr	r2, [r5, #112]	; 0x70
 80053c8:	f022 0204 	bic.w	r2, r2, #4
 80053cc:	672a      	str	r2, [r5, #112]	; 0x70
    if((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
 80053ce:	2b00      	cmp	r3, #0
 80053d0:	d1ca      	bne.n	8005368 <HAL_RCC_OscConfig+0x1d4>
      tickstart = HAL_GetTick();
 80053d2:	f7fe fc87 	bl	8003ce4 <HAL_GetTick>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 80053d6:	f241 3888 	movw	r8, #5000	; 0x1388
      tickstart = HAL_GetTick();
 80053da:	4607      	mov	r7, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 80053dc:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 80053de:	0798      	lsls	r0, r3, #30
 80053e0:	d5cb      	bpl.n	800537a <HAL_RCC_OscConfig+0x1e6>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 80053e2:	f7fe fc7f 	bl	8003ce4 <HAL_GetTick>
 80053e6:	1bc0      	subs	r0, r0, r7
 80053e8:	4540      	cmp	r0, r8
 80053ea:	d9f7      	bls.n	80053dc <HAL_RCC_OscConfig+0x248>
 80053ec:	e717      	b.n	800521e <HAL_RCC_OscConfig+0x8a>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 80053ee:	f7fe fc79 	bl	8003ce4 <HAL_GetTick>
 80053f2:	1bc0      	subs	r0, r0, r7
 80053f4:	4540      	cmp	r0, r8
 80053f6:	d9bd      	bls.n	8005374 <HAL_RCC_OscConfig+0x1e0>
 80053f8:	e711      	b.n	800521e <HAL_RCC_OscConfig+0x8a>
    if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL)
 80053fa:	4d1b      	ldr	r5, [pc, #108]	; (8005468 <HAL_RCC_OscConfig+0x2d4>)
 80053fc:	68ab      	ldr	r3, [r5, #8]
 80053fe:	f003 030c 	and.w	r3, r3, #12
 8005402:	2b08      	cmp	r3, #8
 8005404:	d047      	beq.n	8005496 <HAL_RCC_OscConfig+0x302>
 8005406:	4e1c      	ldr	r6, [pc, #112]	; (8005478 <HAL_RCC_OscConfig+0x2e4>)
 8005408:	2300      	movs	r3, #0
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 800540a:	2802      	cmp	r0, #2
        __HAL_RCC_PLL_DISABLE();
 800540c:	6033      	str	r3, [r6, #0]
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 800540e:	d135      	bne.n	800547c <HAL_RCC_OscConfig+0x2e8>
        tickstart = HAL_GetTick();
 8005410:	f7fe fc68 	bl	8003ce4 <HAL_GetTick>
 8005414:	4607      	mov	r7, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 8005416:	682b      	ldr	r3, [r5, #0]
 8005418:	0199      	lsls	r1, r3, #6
 800541a:	d41e      	bmi.n	800545a <HAL_RCC_OscConfig+0x2c6>
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 800541c:	e9d4 3207 	ldrd	r3, r2, [r4, #28]
 8005420:	4313      	orrs	r3, r2
 8005422:	6a62      	ldr	r2, [r4, #36]	; 0x24
 8005424:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 8005428:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800542a:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 800542e:	6aa2      	ldr	r2, [r4, #40]	; 0x28
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8005430:	4c0d      	ldr	r4, [pc, #52]	; (8005468 <HAL_RCC_OscConfig+0x2d4>)
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 8005432:	0852      	lsrs	r2, r2, #1
 8005434:	3a01      	subs	r2, #1
 8005436:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 800543a:	606b      	str	r3, [r5, #4]
        __HAL_RCC_PLL_ENABLE();
 800543c:	2301      	movs	r3, #1
 800543e:	6033      	str	r3, [r6, #0]
        tickstart = HAL_GetTick();
 8005440:	f7fe fc50 	bl	8003ce4 <HAL_GetTick>
 8005444:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8005446:	6823      	ldr	r3, [r4, #0]
 8005448:	019a      	lsls	r2, r3, #6
 800544a:	f53f aebb 	bmi.w	80051c4 <HAL_RCC_OscConfig+0x30>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 800544e:	f7fe fc49 	bl	8003ce4 <HAL_GetTick>
 8005452:	1b40      	subs	r0, r0, r5
 8005454:	2802      	cmp	r0, #2
 8005456:	d9f6      	bls.n	8005446 <HAL_RCC_OscConfig+0x2b2>
 8005458:	e6e1      	b.n	800521e <HAL_RCC_OscConfig+0x8a>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 800545a:	f7fe fc43 	bl	8003ce4 <HAL_GetTick>
 800545e:	1bc0      	subs	r0, r0, r7
 8005460:	2802      	cmp	r0, #2
 8005462:	d9d8      	bls.n	8005416 <HAL_RCC_OscConfig+0x282>
 8005464:	e6db      	b.n	800521e <HAL_RCC_OscConfig+0x8a>
 8005466:	bf00      	nop
 8005468:	40023800 	.word	0x40023800
 800546c:	42470000 	.word	0x42470000
 8005470:	42470e80 	.word	0x42470e80
 8005474:	40007000 	.word	0x40007000
 8005478:	42470060 	.word	0x42470060
        tickstart = HAL_GetTick();
 800547c:	f7fe fc32 	bl	8003ce4 <HAL_GetTick>
 8005480:	4604      	mov	r4, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 8005482:	682b      	ldr	r3, [r5, #0]
 8005484:	019b      	lsls	r3, r3, #6
 8005486:	f57f ae9d 	bpl.w	80051c4 <HAL_RCC_OscConfig+0x30>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 800548a:	f7fe fc2b 	bl	8003ce4 <HAL_GetTick>
 800548e:	1b00      	subs	r0, r0, r4
 8005490:	2802      	cmp	r0, #2
 8005492:	d9f6      	bls.n	8005482 <HAL_RCC_OscConfig+0x2ee>
 8005494:	e6c3      	b.n	800521e <HAL_RCC_OscConfig+0x8a>
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
 8005496:	2801      	cmp	r0, #1
 8005498:	f43f aec2 	beq.w	8005220 <HAL_RCC_OscConfig+0x8c>
        pll_config = RCC->PLLCFGR;
 800549c:	6868      	ldr	r0, [r5, #4]
        if((READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 800549e:	69e3      	ldr	r3, [r4, #28]
 80054a0:	f400 0280 	and.w	r2, r0, #4194304	; 0x400000
 80054a4:	429a      	cmp	r2, r3
 80054a6:	f47f ae79 	bne.w	800519c <HAL_RCC_OscConfig+0x8>
 80054aa:	6a22      	ldr	r2, [r4, #32]
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != RCC_OscInitStruct->PLL.PLLM) ||
 80054ac:	f000 033f 	and.w	r3, r0, #63	; 0x3f
        if((READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 80054b0:	4293      	cmp	r3, r2
 80054b2:	f47f ae73 	bne.w	800519c <HAL_RCC_OscConfig+0x8>
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != RCC_OscInitStruct->PLL.PLLM) ||
 80054b6:	6a62      	ldr	r2, [r4, #36]	; 0x24
 80054b8:	f647 73c0 	movw	r3, #32704	; 0x7fc0
 80054bc:	4003      	ands	r3, r0
 80054be:	4293      	cmp	r3, r2
 80054c0:	f47f ae6c 	bne.w	800519c <HAL_RCC_OscConfig+0x8>
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != RCC_OscInitStruct->PLL.PLLN) ||
 80054c4:	6aa2      	ldr	r2, [r4, #40]	; 0x28
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != RCC_OscInitStruct->PLL.PLLP) ||
 80054c6:	f400 3340 	and.w	r3, r0, #196608	; 0x30000
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != RCC_OscInitStruct->PLL.PLLN) ||
 80054ca:	4293      	cmp	r3, r2
 80054cc:	f47f ae66 	bne.w	800519c <HAL_RCC_OscConfig+0x8>
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != RCC_OscInitStruct->PLL.PLLP) ||
 80054d0:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != RCC_OscInitStruct->PLL.PLLQ))
 80054d2:	f000 6070 	and.w	r0, r0, #251658240	; 0xf000000
    return HAL_ERROR;
 80054d6:	1ac0      	subs	r0, r0, r3
 80054d8:	bf18      	it	ne
 80054da:	2001      	movne	r0, #1
 80054dc:	e6a0      	b.n	8005220 <HAL_RCC_OscConfig+0x8c>
 80054de:	bf00      	nop

080054e0 <HAL_RCC_GetSysClockFreq>:
{
  uint32_t pllm = 0U, pllvco = 0U, pllp = 0U;
  uint32_t sysclockfreq = 0U;

  /* Get SYSCLK source -------------------------------------------------------*/
  switch (RCC->CFGR & RCC_CFGR_SWS)
 80054e0:	4913      	ldr	r1, [pc, #76]	; (8005530 <HAL_RCC_GetSysClockFreq+0x50>)
{
 80054e2:	b508      	push	{r3, lr}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 80054e4:	688b      	ldr	r3, [r1, #8]
 80054e6:	f003 030c 	and.w	r3, r3, #12
 80054ea:	2b04      	cmp	r3, #4
 80054ec:	d003      	beq.n	80054f6 <HAL_RCC_GetSysClockFreq+0x16>
 80054ee:	2b08      	cmp	r3, #8
 80054f0:	d003      	beq.n	80054fa <HAL_RCC_GetSysClockFreq+0x1a>
  {
    case RCC_CFGR_SWS_HSI:  /* HSI used as system clock source */
    {
      sysclockfreq = HSI_VALUE;
 80054f2:	4810      	ldr	r0, [pc, #64]	; (8005534 <HAL_RCC_GetSysClockFreq+0x54>)
    {
      sysclockfreq = HSI_VALUE;
      break;
    }
  }
  return sysclockfreq;
 80054f4:	e000      	b.n	80054f8 <HAL_RCC_GetSysClockFreq+0x18>
      sysclockfreq = HSE_VALUE;
 80054f6:	4810      	ldr	r0, [pc, #64]	; (8005538 <HAL_RCC_GetSysClockFreq+0x58>)
}
 80054f8:	bd08      	pop	{r3, pc}
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 80054fa:	684a      	ldr	r2, [r1, #4]
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 80054fc:	684b      	ldr	r3, [r1, #4]
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 80054fe:	6849      	ldr	r1, [r1, #4]
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 8005500:	f413 0380 	ands.w	r3, r3, #4194304	; 0x400000
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8005504:	bf14      	ite	ne
 8005506:	480c      	ldrne	r0, [pc, #48]	; (8005538 <HAL_RCC_GetSysClockFreq+0x58>)
        pllvco = (uint32_t) ((((uint64_t) HSI_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8005508:	480a      	ldreq	r0, [pc, #40]	; (8005534 <HAL_RCC_GetSysClockFreq+0x54>)
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800550a:	f3c1 1188 	ubfx	r1, r1, #6, #9
 800550e:	bf18      	it	ne
 8005510:	2300      	movne	r3, #0
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 8005512:	f002 023f 	and.w	r2, r2, #63	; 0x3f
        pllvco = (uint32_t) ((((uint64_t) HSI_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8005516:	fba1 0100 	umull	r0, r1, r1, r0
 800551a:	f7fb faaf 	bl	8000a7c <__aeabi_uldivmod>
      pllp = ((((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >> RCC_PLLCFGR_PLLP_Pos) + 1U) *2U);
 800551e:	4b04      	ldr	r3, [pc, #16]	; (8005530 <HAL_RCC_GetSysClockFreq+0x50>)
 8005520:	685b      	ldr	r3, [r3, #4]
 8005522:	f3c3 4301 	ubfx	r3, r3, #16, #2
 8005526:	3301      	adds	r3, #1
 8005528:	005b      	lsls	r3, r3, #1
      sysclockfreq = pllvco/pllp;
 800552a:	fbb0 f0f3 	udiv	r0, r0, r3
 800552e:	e7e3      	b.n	80054f8 <HAL_RCC_GetSysClockFreq+0x18>
 8005530:	40023800 	.word	0x40023800
 8005534:	00f42400 	.word	0x00f42400
 8005538:	007a1200 	.word	0x007a1200

0800553c <HAL_RCC_ClockConfig>:
{
 800553c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8005540:	460d      	mov	r5, r1
  if(RCC_ClkInitStruct == NULL)
 8005542:	4604      	mov	r4, r0
 8005544:	b910      	cbnz	r0, 800554c <HAL_RCC_ClockConfig+0x10>
    return HAL_ERROR;
 8005546:	2001      	movs	r0, #1
}
 8005548:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if(FLatency > __HAL_FLASH_GET_LATENCY())
 800554c:	4b43      	ldr	r3, [pc, #268]	; (800565c <HAL_RCC_ClockConfig+0x120>)
 800554e:	681a      	ldr	r2, [r3, #0]
 8005550:	f002 020f 	and.w	r2, r2, #15
 8005554:	428a      	cmp	r2, r1
 8005556:	d328      	bcc.n	80055aa <HAL_RCC_ClockConfig+0x6e>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 8005558:	6821      	ldr	r1, [r4, #0]
 800555a:	078f      	lsls	r7, r1, #30
 800555c:	d42d      	bmi.n	80055ba <HAL_RCC_ClockConfig+0x7e>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 800555e:	07c8      	lsls	r0, r1, #31
 8005560:	d440      	bmi.n	80055e4 <HAL_RCC_ClockConfig+0xa8>
  if(FLatency < __HAL_FLASH_GET_LATENCY())
 8005562:	4b3e      	ldr	r3, [pc, #248]	; (800565c <HAL_RCC_ClockConfig+0x120>)
 8005564:	681a      	ldr	r2, [r3, #0]
 8005566:	f002 020f 	and.w	r2, r2, #15
 800556a:	42aa      	cmp	r2, r5
 800556c:	d865      	bhi.n	800563a <HAL_RCC_ClockConfig+0xfe>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 800556e:	6822      	ldr	r2, [r4, #0]
 8005570:	0751      	lsls	r1, r2, #29
 8005572:	d46b      	bmi.n	800564c <HAL_RCC_ClockConfig+0x110>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 8005574:	0713      	lsls	r3, r2, #28
 8005576:	d507      	bpl.n	8005588 <HAL_RCC_ClockConfig+0x4c>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3U));
 8005578:	4a39      	ldr	r2, [pc, #228]	; (8005660 <HAL_RCC_ClockConfig+0x124>)
 800557a:	6921      	ldr	r1, [r4, #16]
 800557c:	6893      	ldr	r3, [r2, #8]
 800557e:	f423 4360 	bic.w	r3, r3, #57344	; 0xe000
 8005582:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
 8005586:	6093      	str	r3, [r2, #8]
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_Pos];
 8005588:	f7ff ffaa 	bl	80054e0 <HAL_RCC_GetSysClockFreq>
 800558c:	4b34      	ldr	r3, [pc, #208]	; (8005660 <HAL_RCC_ClockConfig+0x124>)
 800558e:	4a35      	ldr	r2, [pc, #212]	; (8005664 <HAL_RCC_ClockConfig+0x128>)
 8005590:	689b      	ldr	r3, [r3, #8]
 8005592:	f3c3 1303 	ubfx	r3, r3, #4, #4
 8005596:	5cd3      	ldrb	r3, [r2, r3]
 8005598:	40d8      	lsrs	r0, r3
 800559a:	4b33      	ldr	r3, [pc, #204]	; (8005668 <HAL_RCC_ClockConfig+0x12c>)
 800559c:	6018      	str	r0, [r3, #0]
  HAL_InitTick (uwTickPrio);
 800559e:	4b33      	ldr	r3, [pc, #204]	; (800566c <HAL_RCC_ClockConfig+0x130>)
 80055a0:	6818      	ldr	r0, [r3, #0]
 80055a2:	f7fd f96b 	bl	800287c <HAL_InitTick>
  return HAL_OK;
 80055a6:	2000      	movs	r0, #0
 80055a8:	e7ce      	b.n	8005548 <HAL_RCC_ClockConfig+0xc>
    __HAL_FLASH_SET_LATENCY(FLatency);
 80055aa:	b2ca      	uxtb	r2, r1
 80055ac:	701a      	strb	r2, [r3, #0]
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 80055ae:	681b      	ldr	r3, [r3, #0]
 80055b0:	f003 030f 	and.w	r3, r3, #15
 80055b4:	428b      	cmp	r3, r1
 80055b6:	d1c6      	bne.n	8005546 <HAL_RCC_ClockConfig+0xa>
 80055b8:	e7ce      	b.n	8005558 <HAL_RCC_ClockConfig+0x1c>
 80055ba:	4b29      	ldr	r3, [pc, #164]	; (8005660 <HAL_RCC_ClockConfig+0x124>)
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 80055bc:	f011 0f04 	tst.w	r1, #4
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_HCLK_DIV16);
 80055c0:	bf1e      	ittt	ne
 80055c2:	689a      	ldrne	r2, [r3, #8]
 80055c4:	f442 52e0 	orrne.w	r2, r2, #7168	; 0x1c00
 80055c8:	609a      	strne	r2, [r3, #8]
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 80055ca:	070e      	lsls	r6, r1, #28
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, (RCC_HCLK_DIV16 << 3));
 80055cc:	bf42      	ittt	mi
 80055ce:	689a      	ldrmi	r2, [r3, #8]
 80055d0:	f442 4260 	orrmi.w	r2, r2, #57344	; 0xe000
 80055d4:	609a      	strmi	r2, [r3, #8]
    MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 80055d6:	689a      	ldr	r2, [r3, #8]
 80055d8:	68a0      	ldr	r0, [r4, #8]
 80055da:	f022 02f0 	bic.w	r2, r2, #240	; 0xf0
 80055de:	4302      	orrs	r2, r0
 80055e0:	609a      	str	r2, [r3, #8]
 80055e2:	e7bc      	b.n	800555e <HAL_RCC_ClockConfig+0x22>
    if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 80055e4:	6862      	ldr	r2, [r4, #4]
 80055e6:	4b1e      	ldr	r3, [pc, #120]	; (8005660 <HAL_RCC_ClockConfig+0x124>)
 80055e8:	2a01      	cmp	r2, #1
 80055ea:	d11c      	bne.n	8005626 <HAL_RCC_ClockConfig+0xea>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 80055ec:	681b      	ldr	r3, [r3, #0]
 80055ee:	f413 3f00 	tst.w	r3, #131072	; 0x20000
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 80055f2:	d0a8      	beq.n	8005546 <HAL_RCC_ClockConfig+0xa>
    __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 80055f4:	4e1a      	ldr	r6, [pc, #104]	; (8005660 <HAL_RCC_ClockConfig+0x124>)
 80055f6:	68b3      	ldr	r3, [r6, #8]
 80055f8:	f023 0303 	bic.w	r3, r3, #3
 80055fc:	4313      	orrs	r3, r2
 80055fe:	60b3      	str	r3, [r6, #8]
    tickstart = HAL_GetTick();
 8005600:	f7fe fb70 	bl	8003ce4 <HAL_GetTick>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 8005604:	f241 3888 	movw	r8, #5000	; 0x1388
    tickstart = HAL_GetTick();
 8005608:	4607      	mov	r7, r0
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 800560a:	68b3      	ldr	r3, [r6, #8]
 800560c:	6862      	ldr	r2, [r4, #4]
 800560e:	f003 030c 	and.w	r3, r3, #12
 8005612:	ebb3 0f82 	cmp.w	r3, r2, lsl #2
 8005616:	d0a4      	beq.n	8005562 <HAL_RCC_ClockConfig+0x26>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 8005618:	f7fe fb64 	bl	8003ce4 <HAL_GetTick>
 800561c:	1bc0      	subs	r0, r0, r7
 800561e:	4540      	cmp	r0, r8
 8005620:	d9f3      	bls.n	800560a <HAL_RCC_ClockConfig+0xce>
        return HAL_TIMEOUT;
 8005622:	2003      	movs	r0, #3
 8005624:	e790      	b.n	8005548 <HAL_RCC_ClockConfig+0xc>
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 8005626:	1e91      	subs	r1, r2, #2
 8005628:	2901      	cmp	r1, #1
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800562a:	681b      	ldr	r3, [r3, #0]
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 800562c:	d802      	bhi.n	8005634 <HAL_RCC_ClockConfig+0xf8>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800562e:	f013 7f00 	tst.w	r3, #33554432	; 0x2000000
 8005632:	e7de      	b.n	80055f2 <HAL_RCC_ClockConfig+0xb6>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8005634:	f013 0f02 	tst.w	r3, #2
 8005638:	e7db      	b.n	80055f2 <HAL_RCC_ClockConfig+0xb6>
    __HAL_FLASH_SET_LATENCY(FLatency);
 800563a:	b2ea      	uxtb	r2, r5
 800563c:	701a      	strb	r2, [r3, #0]
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 800563e:	681b      	ldr	r3, [r3, #0]
 8005640:	f003 030f 	and.w	r3, r3, #15
 8005644:	42ab      	cmp	r3, r5
 8005646:	f47f af7e 	bne.w	8005546 <HAL_RCC_ClockConfig+0xa>
 800564a:	e790      	b.n	800556e <HAL_RCC_ClockConfig+0x32>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 800564c:	4904      	ldr	r1, [pc, #16]	; (8005660 <HAL_RCC_ClockConfig+0x124>)
 800564e:	68e0      	ldr	r0, [r4, #12]
 8005650:	688b      	ldr	r3, [r1, #8]
 8005652:	f423 53e0 	bic.w	r3, r3, #7168	; 0x1c00
 8005656:	4303      	orrs	r3, r0
 8005658:	608b      	str	r3, [r1, #8]
 800565a:	e78b      	b.n	8005574 <HAL_RCC_ClockConfig+0x38>
 800565c:	40023c00 	.word	0x40023c00
 8005660:	40023800 	.word	0x40023800
 8005664:	0801b22c 	.word	0x0801b22c
 8005668:	20000084 	.word	0x20000084
 800566c:	2000008c 	.word	0x2000008c

08005670 <HAL_RCC_GetPCLK1Freq>:
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK1Freq(void)
{
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1)>> RCC_CFGR_PPRE1_Pos]);
 8005670:	4b04      	ldr	r3, [pc, #16]	; (8005684 <HAL_RCC_GetPCLK1Freq+0x14>)
 8005672:	4a05      	ldr	r2, [pc, #20]	; (8005688 <HAL_RCC_GetPCLK1Freq+0x18>)
 8005674:	689b      	ldr	r3, [r3, #8]
 8005676:	f3c3 2382 	ubfx	r3, r3, #10, #3
 800567a:	5cd3      	ldrb	r3, [r2, r3]
 800567c:	4a03      	ldr	r2, [pc, #12]	; (800568c <HAL_RCC_GetPCLK1Freq+0x1c>)
 800567e:	6810      	ldr	r0, [r2, #0]
}
 8005680:	40d8      	lsrs	r0, r3
 8005682:	4770      	bx	lr
 8005684:	40023800 	.word	0x40023800
 8005688:	0801b23c 	.word	0x0801b23c
 800568c:	20000084 	.word	0x20000084

08005690 <HAL_RCC_GetClockConfig>:
  * @retval None
  */
void HAL_RCC_GetClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t *pFLatency)
{
  /* Set all possible values for the Clock type parameter --------------------*/
  RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2;
 8005690:	230f      	movs	r3, #15
 8005692:	6003      	str	r3, [r0, #0]

  /* Get the SYSCLK configuration --------------------------------------------*/
  RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
 8005694:	4b0b      	ldr	r3, [pc, #44]	; (80056c4 <HAL_RCC_GetClockConfig+0x34>)
 8005696:	689a      	ldr	r2, [r3, #8]
 8005698:	f002 0203 	and.w	r2, r2, #3
 800569c:	6042      	str	r2, [r0, #4]

  /* Get the HCLK configuration ----------------------------------------------*/
  RCC_ClkInitStruct->AHBCLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_HPRE);
 800569e:	689a      	ldr	r2, [r3, #8]
 80056a0:	f002 02f0 	and.w	r2, r2, #240	; 0xf0
 80056a4:	6082      	str	r2, [r0, #8]

  /* Get the APB1 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB1CLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_PPRE1);
 80056a6:	689a      	ldr	r2, [r3, #8]
 80056a8:	f402 52e0 	and.w	r2, r2, #7168	; 0x1c00
 80056ac:	60c2      	str	r2, [r0, #12]

  /* Get the APB2 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)((RCC->CFGR & RCC_CFGR_PPRE2) >> 3U);
 80056ae:	689b      	ldr	r3, [r3, #8]
 80056b0:	08db      	lsrs	r3, r3, #3
 80056b2:	f403 53e0 	and.w	r3, r3, #7168	; 0x1c00
 80056b6:	6103      	str	r3, [r0, #16]

  /* Get the Flash Wait State (Latency) configuration ------------------------*/
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
 80056b8:	4b03      	ldr	r3, [pc, #12]	; (80056c8 <HAL_RCC_GetClockConfig+0x38>)
 80056ba:	681b      	ldr	r3, [r3, #0]
 80056bc:	f003 030f 	and.w	r3, r3, #15
 80056c0:	600b      	str	r3, [r1, #0]
}
 80056c2:	4770      	bx	lr
 80056c4:	40023800 	.word	0x40023800
 80056c8:	40023c00 	.word	0x40023c00

080056cc <HAL_RCCEx_PeriphCLKConfig>:
  /*----------------------- SAI/I2S Configuration (PLLI2S) -------------------*/
  /*----------------------- Common configuration SAI/I2S ---------------------*/
  /* In Case of SAI or I2S Clock Configuration through PLLI2S, PLLI2SN division
     factor is common parameters for both peripherals */
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
     (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLI2S) == RCC_PERIPHCLK_SAI_PLLI2S) ||
 80056cc:	6803      	ldr	r3, [r0, #0]
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
 80056ce:	f013 0f43 	tst.w	r3, #67	; 0x43
{
 80056d2:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80056d4:	4604      	mov	r4, r0
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
 80056d6:	f040 808a 	bne.w	80057ee <HAL_RCCEx_PeriphCLKConfig+0x122>

  /*----------------------- SAI/LTDC Configuration (PLLSAI) ------------------*/
  /*----------------------- Common configuration SAI/LTDC --------------------*/
  /* In Case of SAI or LTDC Clock Configuration through PLLSAI, PLLSAIN division
     factor is common parameters for both peripherals */
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == RCC_PERIPHCLK_SAI_PLLSAI) ||
 80056da:	6823      	ldr	r3, [r4, #0]
 80056dc:	f013 0f0c 	tst.w	r3, #12
 80056e0:	d044      	beq.n	800576c <HAL_RCCEx_PeriphCLKConfig+0xa0>
  {
    /* Check the PLLSAI division factors */
    assert_param(IS_RCC_PLLSAIN_VALUE(PeriphClkInit->PLLSAI.PLLSAIN));

    /* Disable PLLSAI Clock */
    __HAL_RCC_PLLSAI_DISABLE();
 80056e2:	4d89      	ldr	r5, [pc, #548]	; (8005908 <HAL_RCCEx_PeriphCLKConfig+0x23c>)
    /* Get tick */
    tickstart = HAL_GetTick();
    /* Wait till PLLSAI is disabled */
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 80056e4:	4e89      	ldr	r6, [pc, #548]	; (800590c <HAL_RCCEx_PeriphCLKConfig+0x240>)
    __HAL_RCC_PLLSAI_DISABLE();
 80056e6:	2300      	movs	r3, #0
 80056e8:	602b      	str	r3, [r5, #0]
    tickstart = HAL_GetTick();
 80056ea:	f7fe fafb 	bl	8003ce4 <HAL_GetTick>
 80056ee:	4607      	mov	r7, r0
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 80056f0:	6833      	ldr	r3, [r6, #0]
 80056f2:	009b      	lsls	r3, r3, #2
 80056f4:	f100 80cc 	bmi.w	8005890 <HAL_RCCEx_PeriphCLKConfig+0x1c4>
    }

    /*---------------------------- SAI configuration -------------------------*/
    /* In Case of SAI Clock Configuration through PLLSAI, PLLSAIQ and PLLSAI_DIVQ must
       be added only for SAI configuration */
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == (RCC_PERIPHCLK_SAI_PLLSAI))
 80056f8:	6821      	ldr	r1, [r4, #0]
 80056fa:	074f      	lsls	r7, r1, #29
 80056fc:	d515      	bpl.n	800572a <HAL_RCCEx_PeriphCLKConfig+0x5e>
      /* Read PLLSAIR value from PLLSAICFGR register (this value is not need for SAI configuration) */
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIR) >> RCC_PLLSAICFGR_PLLSAIR_Pos);
      /* PLLSAI_VCO Input  = PLL_SOURCE/PLLM */
      /* PLLSAI_VCO Output = PLLSAI_VCO Input * PLLSAIN */
      /* SAI_CLK(first level) = PLLSAI_VCO Output/PLLSAIQ */
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , PeriphClkInit->PLLSAI.PLLSAIQ, tmpreg1);
 80056fe:	e9d4 0304 	ldrd	r0, r3, [r4, #16]
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIR) >> RCC_PLLSAICFGR_PLLSAIR_Pos);
 8005702:	f8d6 2088 	ldr.w	r2, [r6, #136]	; 0x88
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , PeriphClkInit->PLLSAI.PLLSAIQ, tmpreg1);
 8005706:	061b      	lsls	r3, r3, #24
 8005708:	f002 42e0 	and.w	r2, r2, #1879048192	; 0x70000000
 800570c:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 8005710:	4313      	orrs	r3, r2
 8005712:	f8c6 3088 	str.w	r3, [r6, #136]	; 0x88
      /* SAI_CLK_x = SAI_CLK(first level)/PLLSAIDIVQ */
      __HAL_RCC_PLLSAI_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLSAIDivQ);
 8005716:	f8d6 308c 	ldr.w	r3, [r6, #140]	; 0x8c
 800571a:	6a22      	ldr	r2, [r4, #32]
 800571c:	f423 53f8 	bic.w	r3, r3, #7936	; 0x1f00
 8005720:	3a01      	subs	r2, #1
 8005722:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8005726:	f8c6 308c 	str.w	r3, [r6, #140]	; 0x8c
    }

    /*---------------------------- LTDC configuration ------------------------*/
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == (RCC_PERIPHCLK_LTDC))
 800572a:	070e      	lsls	r6, r1, #28
 800572c:	d514      	bpl.n	8005758 <HAL_RCCEx_PeriphCLKConfig+0x8c>
    {
      assert_param(IS_RCC_PLLSAIR_VALUE(PeriphClkInit->PLLSAI.PLLSAIR));
      assert_param(IS_RCC_PLLSAI_DIVR_VALUE(PeriphClkInit->PLLSAIDivR));

      /* Read PLLSAIR value from PLLSAICFGR register (this value is not need for SAI configuration) */
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 800572e:	4a77      	ldr	r2, [pc, #476]	; (800590c <HAL_RCCEx_PeriphCLKConfig+0x240>)
      /* PLLSAI_VCO Input  = PLL_SOURCE/PLLM */
      /* PLLSAI_VCO Output = PLLSAI_VCO Input * PLLSAIN */
      /* LTDC_CLK(first level) = PLLSAI_VCO Output/PLLSAIR */
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , tmpreg1, PeriphClkInit->PLLSAI.PLLSAIR);
 8005730:	69a3      	ldr	r3, [r4, #24]
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 8005732:	f8d2 1088 	ldr.w	r1, [r2, #136]	; 0x88
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , tmpreg1, PeriphClkInit->PLLSAI.PLLSAIR);
 8005736:	6920      	ldr	r0, [r4, #16]
 8005738:	071b      	lsls	r3, r3, #28
 800573a:	f001 6170 	and.w	r1, r1, #251658240	; 0xf000000
 800573e:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 8005742:	430b      	orrs	r3, r1
 8005744:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
      /* LTDC_CLK = LTDC_CLK(first level)/PLLSAIDIVR */
      __HAL_RCC_PLLSAI_PLLSAICLKDIVR_CONFIG(PeriphClkInit->PLLSAIDivR);
 8005748:	f8d2 308c 	ldr.w	r3, [r2, #140]	; 0x8c
 800574c:	6a61      	ldr	r1, [r4, #36]	; 0x24
 800574e:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 8005752:	430b      	orrs	r3, r1
 8005754:	f8c2 308c 	str.w	r3, [r2, #140]	; 0x8c
    }
    /* Enable PLLSAI Clock */
    __HAL_RCC_PLLSAI_ENABLE();
 8005758:	2301      	movs	r3, #1
 800575a:	602b      	str	r3, [r5, #0]
    /* Get tick */
    tickstart = HAL_GetTick();
 800575c:	f7fe fac2 	bl	8003ce4 <HAL_GetTick>
    /* Wait till PLLSAI is ready */
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 8005760:	4d6a      	ldr	r5, [pc, #424]	; (800590c <HAL_RCCEx_PeriphCLKConfig+0x240>)
    tickstart = HAL_GetTick();
 8005762:	4606      	mov	r6, r0
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 8005764:	682b      	ldr	r3, [r5, #0]
 8005766:	0098      	lsls	r0, r3, #2
 8005768:	f140 8099 	bpl.w	800589e <HAL_RCCEx_PeriphCLKConfig+0x1d2>
    }
  }
  /*--------------------------------------------------------------------------*/

  /*---------------------------- RTC configuration ---------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == (RCC_PERIPHCLK_RTC))
 800576c:	6823      	ldr	r3, [r4, #0]
 800576e:	069a      	lsls	r2, r3, #26
 8005770:	d533      	bpl.n	80057da <HAL_RCCEx_PeriphCLKConfig+0x10e>
  {
    /* Check for RTC Parameters used to output RTCCLK */
    assert_param(IS_RCC_RTCCLKSOURCE(PeriphClkInit->RTCClockSelection));

    /* Enable Power Clock*/
    __HAL_RCC_PWR_CLK_ENABLE();
 8005772:	2300      	movs	r3, #0
 8005774:	9301      	str	r3, [sp, #4]
 8005776:	4b65      	ldr	r3, [pc, #404]	; (800590c <HAL_RCCEx_PeriphCLKConfig+0x240>)

    /* Enable write access to Backup domain */
    PWR->CR |= PWR_CR_DBP;
 8005778:	4d65      	ldr	r5, [pc, #404]	; (8005910 <HAL_RCCEx_PeriphCLKConfig+0x244>)
    __HAL_RCC_PWR_CLK_ENABLE();
 800577a:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 800577c:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 8005780:	641a      	str	r2, [r3, #64]	; 0x40
 8005782:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8005784:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8005788:	9301      	str	r3, [sp, #4]
 800578a:	9b01      	ldr	r3, [sp, #4]
    PWR->CR |= PWR_CR_DBP;
 800578c:	682b      	ldr	r3, [r5, #0]
 800578e:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8005792:	602b      	str	r3, [r5, #0]

    /* Get tick */
    tickstart = HAL_GetTick();
 8005794:	f7fe faa6 	bl	8003ce4 <HAL_GetTick>
 8005798:	4606      	mov	r6, r0

    while((PWR->CR & PWR_CR_DBP) == RESET)
 800579a:	682b      	ldr	r3, [r5, #0]
 800579c:	05d9      	lsls	r1, r3, #23
 800579e:	f140 8085 	bpl.w	80058ac <HAL_RCCEx_PeriphCLKConfig+0x1e0>
      {
        return HAL_TIMEOUT;
      }
    }
    /* Reset the Backup domain only if the RTC Clock source selection is modified from reset value */
    tmpreg1 = (RCC->BDCR & RCC_BDCR_RTCSEL);
 80057a2:	4d5a      	ldr	r5, [pc, #360]	; (800590c <HAL_RCCEx_PeriphCLKConfig+0x240>)
 80057a4:	6f2b      	ldr	r3, [r5, #112]	; 0x70
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 80057a6:	f413 7340 	ands.w	r3, r3, #768	; 0x300
 80057aa:	f040 8086 	bne.w	80058ba <HAL_RCCEx_PeriphCLKConfig+0x1ee>
            return HAL_TIMEOUT;
          }
        }
      }
    }
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 80057ae:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 80057b0:	f403 7240 	and.w	r2, r3, #768	; 0x300
 80057b4:	f5b2 7f40 	cmp.w	r2, #768	; 0x300
 80057b8:	4a54      	ldr	r2, [pc, #336]	; (800590c <HAL_RCCEx_PeriphCLKConfig+0x240>)
 80057ba:	f040 80a0 	bne.w	80058fe <HAL_RCCEx_PeriphCLKConfig+0x232>
 80057be:	6891      	ldr	r1, [r2, #8]
 80057c0:	f023 4070 	bic.w	r0, r3, #4026531840	; 0xf0000000
 80057c4:	f421 11f8 	bic.w	r1, r1, #2031616	; 0x1f0000
 80057c8:	f420 7040 	bic.w	r0, r0, #768	; 0x300
 80057cc:	4301      	orrs	r1, r0
 80057ce:	6091      	str	r1, [r2, #8]
 80057d0:	6f11      	ldr	r1, [r2, #112]	; 0x70
 80057d2:	f3c3 030b 	ubfx	r3, r3, #0, #12
 80057d6:	430b      	orrs	r3, r1
 80057d8:	6713      	str	r3, [r2, #112]	; 0x70
  }
  /*--------------------------------------------------------------------------*/

  /*---------------------------- TIM configuration ---------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == (RCC_PERIPHCLK_TIM))
 80057da:	6820      	ldr	r0, [r4, #0]
 80057dc:	f010 0010 	ands.w	r0, r0, #16
  {
    __HAL_RCC_TIMCLKPRESCALER(PeriphClkInit->TIMPresSelection);
 80057e0:	bf1f      	itttt	ne
 80057e2:	4b4c      	ldrne	r3, [pc, #304]	; (8005914 <HAL_RCCEx_PeriphCLKConfig+0x248>)
 80057e4:	f894 202c 	ldrbne.w	r2, [r4, #44]	; 0x2c
 80057e8:	601a      	strne	r2, [r3, #0]
  }
  return HAL_OK;
 80057ea:	2000      	movne	r0, #0
 80057ec:	e04e      	b.n	800588c <HAL_RCCEx_PeriphCLKConfig+0x1c0>
    __HAL_RCC_PLLI2S_DISABLE();
 80057ee:	4d4a      	ldr	r5, [pc, #296]	; (8005918 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 80057f0:	4e46      	ldr	r6, [pc, #280]	; (800590c <HAL_RCCEx_PeriphCLKConfig+0x240>)
    __HAL_RCC_PLLI2S_DISABLE();
 80057f2:	2300      	movs	r3, #0
 80057f4:	602b      	str	r3, [r5, #0]
    tickstart = HAL_GetTick();
 80057f6:	f7fe fa75 	bl	8003ce4 <HAL_GetTick>
 80057fa:	4607      	mov	r7, r0
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 80057fc:	6833      	ldr	r3, [r6, #0]
 80057fe:	011b      	lsls	r3, r3, #4
 8005800:	d43e      	bmi.n	8005880 <HAL_RCCEx_PeriphCLKConfig+0x1b4>
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == (RCC_PERIPHCLK_I2S))
 8005802:	6821      	ldr	r1, [r4, #0]
 8005804:	07cf      	lsls	r7, r1, #31
      __HAL_RCC_PLLI2S_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SR);
 8005806:	bf41      	itttt	mi
 8005808:	e9d4 2301 	ldrdmi	r2, r3, [r4, #4]
 800580c:	071b      	lslmi	r3, r3, #28
 800580e:	ea43 1382 	orrmi.w	r3, r3, r2, lsl #6
 8005812:	f8c6 3084 	strmi.w	r3, [r6, #132]	; 0x84
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLI2S) == (RCC_PERIPHCLK_SAI_PLLI2S))
 8005816:	078e      	lsls	r6, r1, #30
 8005818:	d515      	bpl.n	8005846 <HAL_RCCEx_PeriphCLKConfig+0x17a>
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 800581a:	4a3c      	ldr	r2, [pc, #240]	; (800590c <HAL_RCCEx_PeriphCLKConfig+0x240>)
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SQ , tmpreg1);
 800581c:	68e3      	ldr	r3, [r4, #12]
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 800581e:	f8d2 0084 	ldr.w	r0, [r2, #132]	; 0x84
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SQ , tmpreg1);
 8005822:	6866      	ldr	r6, [r4, #4]
 8005824:	061b      	lsls	r3, r3, #24
 8005826:	f000 40e0 	and.w	r0, r0, #1879048192	; 0x70000000
 800582a:	ea43 1386 	orr.w	r3, r3, r6, lsl #6
 800582e:	4303      	orrs	r3, r0
 8005830:	f8c2 3084 	str.w	r3, [r2, #132]	; 0x84
      __HAL_RCC_PLLI2S_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLI2SDivQ);
 8005834:	f8d2 008c 	ldr.w	r0, [r2, #140]	; 0x8c
 8005838:	69e3      	ldr	r3, [r4, #28]
 800583a:	f020 001f 	bic.w	r0, r0, #31
 800583e:	3b01      	subs	r3, #1
 8005840:	4303      	orrs	r3, r0
 8005842:	f8c2 308c 	str.w	r3, [r2, #140]	; 0x8c
    if((PeriphClkInit->PeriphClockSelection & RCC_PERIPHCLK_PLLI2S) == RCC_PERIPHCLK_PLLI2S)
 8005846:	0648      	lsls	r0, r1, #25
 8005848:	d50a      	bpl.n	8005860 <HAL_RCCEx_PeriphCLKConfig+0x194>
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN, PeriphClkInit->PLLI2S.PLLI2SQ, PeriphClkInit->PLLI2S.PLLI2SR);
 800584a:	68e3      	ldr	r3, [r4, #12]
 800584c:	6862      	ldr	r2, [r4, #4]
 800584e:	061b      	lsls	r3, r3, #24
 8005850:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 8005854:	68a2      	ldr	r2, [r4, #8]
 8005856:	ea43 7302 	orr.w	r3, r3, r2, lsl #28
 800585a:	4a2c      	ldr	r2, [pc, #176]	; (800590c <HAL_RCCEx_PeriphCLKConfig+0x240>)
 800585c:	f8c2 3084 	str.w	r3, [r2, #132]	; 0x84
    __HAL_RCC_PLLI2S_ENABLE();
 8005860:	2301      	movs	r3, #1
 8005862:	602b      	str	r3, [r5, #0]
    tickstart = HAL_GetTick();
 8005864:	f7fe fa3e 	bl	8003ce4 <HAL_GetTick>
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 8005868:	4d28      	ldr	r5, [pc, #160]	; (800590c <HAL_RCCEx_PeriphCLKConfig+0x240>)
    tickstart = HAL_GetTick();
 800586a:	4606      	mov	r6, r0
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 800586c:	682b      	ldr	r3, [r5, #0]
 800586e:	0119      	lsls	r1, r3, #4
 8005870:	f53f af33 	bmi.w	80056da <HAL_RCCEx_PeriphCLKConfig+0xe>
      if((HAL_GetTick() - tickstart ) > PLLI2S_TIMEOUT_VALUE)
 8005874:	f7fe fa36 	bl	8003ce4 <HAL_GetTick>
 8005878:	1b80      	subs	r0, r0, r6
 800587a:	2802      	cmp	r0, #2
 800587c:	d9f6      	bls.n	800586c <HAL_RCCEx_PeriphCLKConfig+0x1a0>
 800587e:	e004      	b.n	800588a <HAL_RCCEx_PeriphCLKConfig+0x1be>
      if((HAL_GetTick() - tickstart ) > PLLI2S_TIMEOUT_VALUE)
 8005880:	f7fe fa30 	bl	8003ce4 <HAL_GetTick>
 8005884:	1bc0      	subs	r0, r0, r7
 8005886:	2802      	cmp	r0, #2
 8005888:	d9b8      	bls.n	80057fc <HAL_RCCEx_PeriphCLKConfig+0x130>
        return HAL_TIMEOUT;
 800588a:	2003      	movs	r0, #3
}
 800588c:	b003      	add	sp, #12
 800588e:	bdf0      	pop	{r4, r5, r6, r7, pc}
      if((HAL_GetTick() - tickstart ) > PLLSAI_TIMEOUT_VALUE)
 8005890:	f7fe fa28 	bl	8003ce4 <HAL_GetTick>
 8005894:	1bc0      	subs	r0, r0, r7
 8005896:	2802      	cmp	r0, #2
 8005898:	f67f af2a 	bls.w	80056f0 <HAL_RCCEx_PeriphCLKConfig+0x24>
 800589c:	e7f5      	b.n	800588a <HAL_RCCEx_PeriphCLKConfig+0x1be>
      if((HAL_GetTick() - tickstart ) > PLLSAI_TIMEOUT_VALUE)
 800589e:	f7fe fa21 	bl	8003ce4 <HAL_GetTick>
 80058a2:	1b80      	subs	r0, r0, r6
 80058a4:	2802      	cmp	r0, #2
 80058a6:	f67f af5d 	bls.w	8005764 <HAL_RCCEx_PeriphCLKConfig+0x98>
 80058aa:	e7ee      	b.n	800588a <HAL_RCCEx_PeriphCLKConfig+0x1be>
      if((HAL_GetTick() - tickstart ) > RCC_DBP_TIMEOUT_VALUE)
 80058ac:	f7fe fa1a 	bl	8003ce4 <HAL_GetTick>
 80058b0:	1b80      	subs	r0, r0, r6
 80058b2:	2802      	cmp	r0, #2
 80058b4:	f67f af71 	bls.w	800579a <HAL_RCCEx_PeriphCLKConfig+0xce>
 80058b8:	e7e7      	b.n	800588a <HAL_RCCEx_PeriphCLKConfig+0x1be>
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 80058ba:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 80058bc:	f402 7240 	and.w	r2, r2, #768	; 0x300
 80058c0:	4293      	cmp	r3, r2
 80058c2:	f43f af74 	beq.w	80057ae <HAL_RCCEx_PeriphCLKConfig+0xe2>
      tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 80058c6:	6f2b      	ldr	r3, [r5, #112]	; 0x70
      __HAL_RCC_BACKUPRESET_FORCE();
 80058c8:	4a14      	ldr	r2, [pc, #80]	; (800591c <HAL_RCCEx_PeriphCLKConfig+0x250>)
 80058ca:	2101      	movs	r1, #1
 80058cc:	6011      	str	r1, [r2, #0]
      tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 80058ce:	f423 7340 	bic.w	r3, r3, #768	; 0x300
      __HAL_RCC_BACKUPRESET_RELEASE();
 80058d2:	2100      	movs	r1, #0
 80058d4:	6011      	str	r1, [r2, #0]
      RCC->BDCR = tmpreg1;
 80058d6:	672b      	str	r3, [r5, #112]	; 0x70
      if(HAL_IS_BIT_SET(RCC->BDCR, RCC_BDCR_LSEON))
 80058d8:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 80058da:	07da      	lsls	r2, r3, #31
 80058dc:	f57f af67 	bpl.w	80057ae <HAL_RCCEx_PeriphCLKConfig+0xe2>
        tickstart = HAL_GetTick();
 80058e0:	f7fe fa00 	bl	8003ce4 <HAL_GetTick>
          if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 80058e4:	f241 3788 	movw	r7, #5000	; 0x1388
        tickstart = HAL_GetTick();
 80058e8:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 80058ea:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 80058ec:	079b      	lsls	r3, r3, #30
 80058ee:	f53f af5e 	bmi.w	80057ae <HAL_RCCEx_PeriphCLKConfig+0xe2>
          if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 80058f2:	f7fe f9f7 	bl	8003ce4 <HAL_GetTick>
 80058f6:	1b80      	subs	r0, r0, r6
 80058f8:	42b8      	cmp	r0, r7
 80058fa:	d9f6      	bls.n	80058ea <HAL_RCCEx_PeriphCLKConfig+0x21e>
 80058fc:	e7c5      	b.n	800588a <HAL_RCCEx_PeriphCLKConfig+0x1be>
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 80058fe:	6891      	ldr	r1, [r2, #8]
 8005900:	f421 11f8 	bic.w	r1, r1, #2031616	; 0x1f0000
 8005904:	e763      	b.n	80057ce <HAL_RCCEx_PeriphCLKConfig+0x102>
 8005906:	bf00      	nop
 8005908:	42470070 	.word	0x42470070
 800590c:	40023800 	.word	0x40023800
 8005910:	40007000 	.word	0x40007000
 8005914:	424711e0 	.word	0x424711e0
 8005918:	42470068 	.word	0x42470068
 800591c:	42470e40 	.word	0x42470e40

08005920 <HAL_SDRAM_Init>:
  *                the configuration information for SDRAM module.
  * @param  Timing Pointer to SDRAM control timing structure 
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_Init(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_TimingTypeDef *Timing)
{   
 8005920:	b538      	push	{r3, r4, r5, lr}
 8005922:	460d      	mov	r5, r1
  /* Check the SDRAM handle parameter */
  if(hsdram == NULL)
 8005924:	4604      	mov	r4, r0
 8005926:	b1c8      	cbz	r0, 800595c <HAL_SDRAM_Init+0x3c>
  {
    return HAL_ERROR;
  }
  
  if(hsdram->State == HAL_SDRAM_STATE_RESET)
 8005928:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 800592c:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8005930:	b91b      	cbnz	r3, 800593a <HAL_SDRAM_Init+0x1a>
  {  
    /* Allocate lock resource and initialize it */
    hsdram->Lock = HAL_UNLOCKED;
 8005932:	f880 202d 	strb.w	r2, [r0, #45]	; 0x2d

    /* Init the low level hardware */
    hsdram->MspInitCallback(hsdram);
#else
    /* Initialize the low level hardware (MSP) */
    HAL_SDRAM_MspInit(hsdram);
 8005936:	f7fc fdf3 	bl	8002520 <HAL_SDRAM_MspInit>
#endif
  }
  
  /* Initialize the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;
 800593a:	2302      	movs	r3, #2
 800593c:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  
  /* Initialize SDRAM control Interface */
  FMC_SDRAM_Init(hsdram->Instance, &(hsdram->Init));
 8005940:	1d21      	adds	r1, r4, #4
 8005942:	6820      	ldr	r0, [r4, #0]
 8005944:	f000 ff6a 	bl	800681c <FMC_SDRAM_Init>
  
  /* Initialize SDRAM timing Interface */
  FMC_SDRAM_Timing_Init(hsdram->Instance, Timing, hsdram->Init.SDBank); 
 8005948:	6862      	ldr	r2, [r4, #4]
 800594a:	6820      	ldr	r0, [r4, #0]
 800594c:	4629      	mov	r1, r5
 800594e:	f000 ff9b 	bl	8006888 <FMC_SDRAM_Timing_Init>
  
  /* Update the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_READY;
 8005952:	2301      	movs	r3, #1
 8005954:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  
  return HAL_OK;
 8005958:	2000      	movs	r0, #0
}
 800595a:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 800595c:	2001      	movs	r0, #1
 800595e:	e7fc      	b.n	800595a <HAL_SDRAM_Init+0x3a>

08005960 <HAL_SDRAM_SendCommand>:
  * @param  Command SDRAM command structure
  * @param  Timeout Timeout duration
  * @retval HAL status
  */  
HAL_StatusTypeDef HAL_SDRAM_SendCommand(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_CommandTypeDef *Command, uint32_t Timeout)
{
 8005960:	b538      	push	{r3, r4, r5, lr}
 8005962:	4604      	mov	r4, r0
  /* Check the SDRAM controller state */
  if(hsdram->State == HAL_SDRAM_STATE_BUSY)
 8005964:	f890 002c 	ldrb.w	r0, [r0, #44]	; 0x2c
 8005968:	b2c0      	uxtb	r0, r0
 800596a:	2802      	cmp	r0, #2
{
 800596c:	460d      	mov	r5, r1
  if(hsdram->State == HAL_SDRAM_STATE_BUSY)
 800596e:	d00d      	beq.n	800598c <HAL_SDRAM_SendCommand+0x2c>
  {
    return HAL_BUSY;
  }
  
  /* Update the SDRAM state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;
 8005970:	2302      	movs	r3, #2
 8005972:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  
  /* Send SDRAM command */
  FMC_SDRAM_SendCommand(hsdram->Instance, Command, Timeout);
 8005976:	6820      	ldr	r0, [r4, #0]
 8005978:	f000 ffc3 	bl	8006902 <FMC_SDRAM_SendCommand>
  
  /* Update the SDRAM controller state */
  if(Command->CommandMode == FMC_SDRAM_CMD_PALL)
 800597c:	682b      	ldr	r3, [r5, #0]
 800597e:	2b02      	cmp	r3, #2
  {
    hsdram->State = HAL_SDRAM_STATE_PRECHARGED;
 8005980:	bf0c      	ite	eq
 8005982:	2305      	moveq	r3, #5
  }
  else
  {
    hsdram->State = HAL_SDRAM_STATE_READY;
 8005984:	2301      	movne	r3, #1
 8005986:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  }
  
  return HAL_OK;  
 800598a:	2000      	movs	r0, #0
}
 800598c:	bd38      	pop	{r3, r4, r5, pc}

0800598e <HAL_SDRAM_ProgramRefreshRate>:
  *                the configuration information for SDRAM module.  
  * @param  RefreshRate The SDRAM refresh rate value       
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_ProgramRefreshRate(SDRAM_HandleTypeDef *hsdram, uint32_t RefreshRate)
{
 800598e:	b510      	push	{r4, lr}
 8005990:	4604      	mov	r4, r0
  /* Check the SDRAM controller state */
  if(hsdram->State == HAL_SDRAM_STATE_BUSY)
 8005992:	f890 002c 	ldrb.w	r0, [r0, #44]	; 0x2c
 8005996:	b2c0      	uxtb	r0, r0
 8005998:	2802      	cmp	r0, #2
 800599a:	d009      	beq.n	80059b0 <HAL_SDRAM_ProgramRefreshRate+0x22>
  {
    return HAL_BUSY;
  } 
  
  /* Update the SDRAM state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;
 800599c:	2302      	movs	r3, #2
 800599e:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  
  /* Program the refresh rate */
  FMC_SDRAM_ProgramRefreshRate(hsdram->Instance ,RefreshRate);
 80059a2:	6820      	ldr	r0, [r4, #0]
 80059a4:	f000 ffd2 	bl	800694c <FMC_SDRAM_ProgramRefreshRate>
  
  /* Update the SDRAM state */
  hsdram->State = HAL_SDRAM_STATE_READY;
 80059a8:	2301      	movs	r3, #1
 80059aa:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  
  return HAL_OK;   
 80059ae:	2000      	movs	r0, #0
}
 80059b0:	bd10      	pop	{r4, pc}

080059b2 <SPI_WaitFlagStateUntilTimeout.constprop.7>:
  * @param  State flag state to check
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_WaitFlagStateUntilTimeout(SPI_HandleTypeDef *hspi, uint32_t Flag, FlagStatus State,
 80059b2:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80059b4:	4604      	mov	r4, r0
 80059b6:	460e      	mov	r6, r1
 80059b8:	4615      	mov	r5, r2
 80059ba:	461f      	mov	r7, r3
                                                       uint32_t Timeout, uint32_t Tickstart)
{
  while ((__HAL_SPI_GET_FLAG(hspi, Flag) ? SET : RESET) != State)
 80059bc:	6821      	ldr	r1, [r4, #0]
 80059be:	688a      	ldr	r2, [r1, #8]
 80059c0:	ea36 0302 	bics.w	r3, r6, r2
 80059c4:	d001      	beq.n	80059ca <SPI_WaitFlagStateUntilTimeout.constprop.7+0x18>
        return HAL_TIMEOUT;
      }
    }
  }

  return HAL_OK;
 80059c6:	2000      	movs	r0, #0
 80059c8:	e02d      	b.n	8005a26 <SPI_WaitFlagStateUntilTimeout.constprop.7+0x74>
    if (Timeout != HAL_MAX_DELAY)
 80059ca:	1c6b      	adds	r3, r5, #1
 80059cc:	d0f7      	beq.n	80059be <SPI_WaitFlagStateUntilTimeout.constprop.7+0xc>
      if (((HAL_GetTick() - Tickstart) >= Timeout) || (Timeout == 0U))
 80059ce:	f7fe f989 	bl	8003ce4 <HAL_GetTick>
 80059d2:	1bc0      	subs	r0, r0, r7
 80059d4:	4285      	cmp	r5, r0
 80059d6:	d8f1      	bhi.n	80059bc <SPI_WaitFlagStateUntilTimeout.constprop.7+0xa>
        __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_TXE | SPI_IT_RXNE | SPI_IT_ERR));
 80059d8:	6823      	ldr	r3, [r4, #0]
 80059da:	685a      	ldr	r2, [r3, #4]
 80059dc:	f022 02e0 	bic.w	r2, r2, #224	; 0xe0
 80059e0:	605a      	str	r2, [r3, #4]
        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 80059e2:	6862      	ldr	r2, [r4, #4]
 80059e4:	f5b2 7f82 	cmp.w	r2, #260	; 0x104
 80059e8:	d10a      	bne.n	8005a00 <SPI_WaitFlagStateUntilTimeout.constprop.7+0x4e>
 80059ea:	68a2      	ldr	r2, [r4, #8]
 80059ec:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
 80059f0:	d002      	beq.n	80059f8 <SPI_WaitFlagStateUntilTimeout.constprop.7+0x46>
                                                     || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXONLY)))
 80059f2:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
 80059f6:	d103      	bne.n	8005a00 <SPI_WaitFlagStateUntilTimeout.constprop.7+0x4e>
          __HAL_SPI_DISABLE(hspi);
 80059f8:	681a      	ldr	r2, [r3, #0]
 80059fa:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 80059fe:	601a      	str	r2, [r3, #0]
        if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
 8005a00:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 8005a02:	f5b2 5f00 	cmp.w	r2, #8192	; 0x2000
 8005a06:	d107      	bne.n	8005a18 <SPI_WaitFlagStateUntilTimeout.constprop.7+0x66>
          SPI_RESET_CRC(hspi);
 8005a08:	681a      	ldr	r2, [r3, #0]
 8005a0a:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 8005a0e:	601a      	str	r2, [r3, #0]
 8005a10:	681a      	ldr	r2, [r3, #0]
 8005a12:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 8005a16:	601a      	str	r2, [r3, #0]
        hspi->State = HAL_SPI_STATE_READY;
 8005a18:	2301      	movs	r3, #1
 8005a1a:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
        __HAL_UNLOCK(hspi);
 8005a1e:	2300      	movs	r3, #0
 8005a20:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
 8005a24:	2003      	movs	r0, #3
}
 8005a26:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08005a28 <SPI_EndRxTransaction>:
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_EndRxTransaction(SPI_HandleTypeDef *hspi,  uint32_t Timeout, uint32_t Tickstart)
{
 8005a28:	b538      	push	{r3, r4, r5, lr}
 8005a2a:	4613      	mov	r3, r2
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8005a2c:	6842      	ldr	r2, [r0, #4]
 8005a2e:	f5b2 7f82 	cmp.w	r2, #260	; 0x104
{
 8005a32:	4604      	mov	r4, r0
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8005a34:	d11f      	bne.n	8005a76 <SPI_EndRxTransaction+0x4e>
 8005a36:	6882      	ldr	r2, [r0, #8]
 8005a38:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
 8005a3c:	d002      	beq.n	8005a44 <SPI_EndRxTransaction+0x1c>
                                               || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXONLY)))
 8005a3e:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
 8005a42:	d107      	bne.n	8005a54 <SPI_EndRxTransaction+0x2c>
  {
    /* Disable SPI peripheral */
    __HAL_SPI_DISABLE(hspi);
 8005a44:	6825      	ldr	r5, [r4, #0]
 8005a46:	6828      	ldr	r0, [r5, #0]
  }

  /* Erratasheet: BSY bit may stay high at the end of a data transfer in Slave mode */
  if (hspi->Init.Mode == SPI_MODE_MASTER)
  {
    if (hspi->Init.Direction != SPI_DIRECTION_2LINES_RXONLY)
 8005a48:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
    __HAL_SPI_DISABLE(hspi);
 8005a4c:	f020 0040 	bic.w	r0, r0, #64	; 0x40
 8005a50:	6028      	str	r0, [r5, #0]
    if (hspi->Init.Direction != SPI_DIRECTION_2LINES_RXONLY)
 8005a52:	d007      	beq.n	8005a64 <SPI_EndRxTransaction+0x3c>
    {
      /* Control the BSY flag */
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 8005a54:	460a      	mov	r2, r1
 8005a56:	2180      	movs	r1, #128	; 0x80
 8005a58:	4620      	mov	r0, r4
 8005a5a:	f7ff ffaa 	bl	80059b2 <SPI_WaitFlagStateUntilTimeout.constprop.7>
 8005a5e:	b920      	cbnz	r0, 8005a6a <SPI_EndRxTransaction+0x42>
    {
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
      return HAL_TIMEOUT;
    }
  }
  return HAL_OK;
 8005a60:	2000      	movs	r0, #0
}
 8005a62:	bd38      	pop	{r3, r4, r5, pc}
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 8005a64:	460a      	mov	r2, r1
 8005a66:	2101      	movs	r1, #1
 8005a68:	e7f6      	b.n	8005a58 <SPI_EndRxTransaction+0x30>
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 8005a6a:	6d63      	ldr	r3, [r4, #84]	; 0x54
 8005a6c:	f043 0320 	orr.w	r3, r3, #32
 8005a70:	6563      	str	r3, [r4, #84]	; 0x54
      return HAL_TIMEOUT;
 8005a72:	2003      	movs	r0, #3
 8005a74:	e7f5      	b.n	8005a62 <SPI_EndRxTransaction+0x3a>
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 8005a76:	460a      	mov	r2, r1
 8005a78:	2101      	movs	r1, #1
 8005a7a:	e7ee      	b.n	8005a5a <SPI_EndRxTransaction+0x32>

08005a7c <SPI_EndRxTxTransaction>:
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_EndRxTxTransaction(SPI_HandleTypeDef *hspi, uint32_t Timeout, uint32_t Tickstart)
{
 8005a7c:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8005a7e:	4613      	mov	r3, r2
  /* Timeout in µs */
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 8005a80:	4a12      	ldr	r2, [pc, #72]	; (8005acc <SPI_EndRxTxTransaction+0x50>)
 8005a82:	4e13      	ldr	r6, [pc, #76]	; (8005ad0 <SPI_EndRxTxTransaction+0x54>)
 8005a84:	6815      	ldr	r5, [r2, #0]
  /* Erratasheet: BSY bit may stay high at the end of a data transfer in Slave mode */
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 8005a86:	6842      	ldr	r2, [r0, #4]
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 8005a88:	fbb5 f6f6 	udiv	r6, r5, r6
 8005a8c:	f44f 757a 	mov.w	r5, #1000	; 0x3e8
 8005a90:	4375      	muls	r5, r6
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 8005a92:	f5b2 7f82 	cmp.w	r2, #260	; 0x104
{
 8005a96:	4604      	mov	r4, r0
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 8005a98:	9501      	str	r5, [sp, #4]
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 8005a9a:	d10b      	bne.n	8005ab4 <SPI_EndRxTxTransaction+0x38>
  {
    /* Control the BSY flag */
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 8005a9c:	460a      	mov	r2, r1
 8005a9e:	2180      	movs	r1, #128	; 0x80
 8005aa0:	f7ff ff87 	bl	80059b2 <SPI_WaitFlagStateUntilTimeout.constprop.7>
 8005aa4:	b178      	cbz	r0, 8005ac6 <SPI_EndRxTxTransaction+0x4a>
    {
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 8005aa6:	6d63      	ldr	r3, [r4, #84]	; 0x54
 8005aa8:	f043 0320 	orr.w	r3, r3, #32
 8005aac:	6563      	str	r3, [r4, #84]	; 0x54
      return HAL_TIMEOUT;
 8005aae:	2003      	movs	r0, #3
      count--;
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
  }

  return HAL_OK;
}
 8005ab0:	b002      	add	sp, #8
 8005ab2:	bd70      	pop	{r4, r5, r6, pc}
      if (count == 0U)
 8005ab4:	9b01      	ldr	r3, [sp, #4]
 8005ab6:	b133      	cbz	r3, 8005ac6 <SPI_EndRxTxTransaction+0x4a>
      count--;
 8005ab8:	9b01      	ldr	r3, [sp, #4]
 8005aba:	3b01      	subs	r3, #1
 8005abc:	9301      	str	r3, [sp, #4]
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
 8005abe:	6823      	ldr	r3, [r4, #0]
 8005ac0:	689b      	ldr	r3, [r3, #8]
 8005ac2:	061b      	lsls	r3, r3, #24
 8005ac4:	d4f6      	bmi.n	8005ab4 <SPI_EndRxTxTransaction+0x38>
  return HAL_OK;
 8005ac6:	2000      	movs	r0, #0
 8005ac8:	e7f2      	b.n	8005ab0 <SPI_EndRxTxTransaction+0x34>
 8005aca:	bf00      	nop
 8005acc:	20000084 	.word	0x20000084
 8005ad0:	016e3600 	.word	0x016e3600

08005ad4 <HAL_SPI_Init>:
{
 8005ad4:	b510      	push	{r4, lr}
  if (hspi == NULL)
 8005ad6:	4604      	mov	r4, r0
 8005ad8:	2800      	cmp	r0, #0
 8005ada:	d036      	beq.n	8005b4a <HAL_SPI_Init+0x76>
  hspi->Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 8005adc:	2300      	movs	r3, #0
 8005ade:	6283      	str	r3, [r0, #40]	; 0x28
  if (hspi->State == HAL_SPI_STATE_RESET)
 8005ae0:	f890 3051 	ldrb.w	r3, [r0, #81]	; 0x51
 8005ae4:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8005ae8:	b91b      	cbnz	r3, 8005af2 <HAL_SPI_Init+0x1e>
    hspi->Lock = HAL_UNLOCKED;
 8005aea:	f880 2050 	strb.w	r2, [r0, #80]	; 0x50
    HAL_SPI_MspInit(hspi);
 8005aee:	f7fc fce1 	bl	80024b4 <HAL_SPI_MspInit>
  __HAL_SPI_DISABLE(hspi);
 8005af2:	6821      	ldr	r1, [r4, #0]
  WRITE_REG(hspi->Instance->CR1, (hspi->Init.Mode | hspi->Init.Direction | hspi->Init.DataSize |
 8005af4:	69a2      	ldr	r2, [r4, #24]
  hspi->State = HAL_SPI_STATE_BUSY;
 8005af6:	2302      	movs	r3, #2
 8005af8:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
  __HAL_SPI_DISABLE(hspi);
 8005afc:	680b      	ldr	r3, [r1, #0]
 8005afe:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 8005b02:	600b      	str	r3, [r1, #0]
  WRITE_REG(hspi->Instance->CR1, (hspi->Init.Mode | hspi->Init.Direction | hspi->Init.DataSize |
 8005b04:	e9d4 3001 	ldrd	r3, r0, [r4, #4]
 8005b08:	4303      	orrs	r3, r0
 8005b0a:	68e0      	ldr	r0, [r4, #12]
 8005b0c:	4303      	orrs	r3, r0
 8005b0e:	6920      	ldr	r0, [r4, #16]
 8005b10:	4303      	orrs	r3, r0
 8005b12:	6960      	ldr	r0, [r4, #20]
 8005b14:	4303      	orrs	r3, r0
 8005b16:	69e0      	ldr	r0, [r4, #28]
 8005b18:	4303      	orrs	r3, r0
 8005b1a:	6a20      	ldr	r0, [r4, #32]
 8005b1c:	4303      	orrs	r3, r0
 8005b1e:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 8005b20:	4303      	orrs	r3, r0
 8005b22:	f402 7000 	and.w	r0, r2, #512	; 0x200
 8005b26:	4303      	orrs	r3, r0
 8005b28:	600b      	str	r3, [r1, #0]
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | hspi->Init.TIMode));
 8005b2a:	0c12      	lsrs	r2, r2, #16
 8005b2c:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8005b2e:	f002 0204 	and.w	r2, r2, #4
 8005b32:	431a      	orrs	r2, r3
 8005b34:	604a      	str	r2, [r1, #4]
  CLEAR_BIT(hspi->Instance->I2SCFGR, SPI_I2SCFGR_I2SMOD);
 8005b36:	69cb      	ldr	r3, [r1, #28]
 8005b38:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 8005b3c:	61cb      	str	r3, [r1, #28]
  hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 8005b3e:	2000      	movs	r0, #0
  hspi->State     = HAL_SPI_STATE_READY;
 8005b40:	2301      	movs	r3, #1
  hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 8005b42:	6560      	str	r0, [r4, #84]	; 0x54
  hspi->State     = HAL_SPI_STATE_READY;
 8005b44:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
}
 8005b48:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 8005b4a:	2001      	movs	r0, #1
 8005b4c:	e7fc      	b.n	8005b48 <HAL_SPI_Init+0x74>

08005b4e <HAL_SPI_Transmit>:
{
 8005b4e:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8005b52:	461e      	mov	r6, r3
  __HAL_LOCK(hspi);
 8005b54:	f890 3050 	ldrb.w	r3, [r0, #80]	; 0x50
 8005b58:	2b01      	cmp	r3, #1
{
 8005b5a:	4604      	mov	r4, r0
 8005b5c:	460d      	mov	r5, r1
 8005b5e:	4690      	mov	r8, r2
  __HAL_LOCK(hspi);
 8005b60:	f000 809b 	beq.w	8005c9a <HAL_SPI_Transmit+0x14c>
 8005b64:	2301      	movs	r3, #1
 8005b66:	f880 3050 	strb.w	r3, [r0, #80]	; 0x50
  tickstart = HAL_GetTick();
 8005b6a:	f7fe f8bb 	bl	8003ce4 <HAL_GetTick>
 8005b6e:	4607      	mov	r7, r0
  if (hspi->State != HAL_SPI_STATE_READY)
 8005b70:	f894 0051 	ldrb.w	r0, [r4, #81]	; 0x51
 8005b74:	b2c0      	uxtb	r0, r0
 8005b76:	2801      	cmp	r0, #1
 8005b78:	f040 808d 	bne.w	8005c96 <HAL_SPI_Transmit+0x148>
  if ((pData == NULL) || (Size == 0U))
 8005b7c:	2d00      	cmp	r5, #0
 8005b7e:	d05d      	beq.n	8005c3c <HAL_SPI_Transmit+0xee>
 8005b80:	f1b8 0f00 	cmp.w	r8, #0
 8005b84:	d05a      	beq.n	8005c3c <HAL_SPI_Transmit+0xee>
  hspi->State       = HAL_SPI_STATE_BUSY_TX;
 8005b86:	2303      	movs	r3, #3
 8005b88:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 8005b8c:	2000      	movs	r0, #0
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8005b8e:	68a3      	ldr	r3, [r4, #8]
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 8005b90:	6560      	str	r0, [r4, #84]	; 0x54
  hspi->pRxBuffPtr  = (uint8_t *)NULL;
 8005b92:	63a0      	str	r0, [r4, #56]	; 0x38
  hspi->TxXferCount = Size;
 8005b94:	f8a4 8036 	strh.w	r8, [r4, #54]	; 0x36
  hspi->RxXferSize  = 0U;
 8005b98:	87a0      	strh	r0, [r4, #60]	; 0x3c
  hspi->RxXferCount = 0U;
 8005b9a:	87e0      	strh	r0, [r4, #62]	; 0x3e
  hspi->RxISR       = NULL;
 8005b9c:	e9c4 0010 	strd	r0, r0, [r4, #64]	; 0x40
 8005ba0:	6820      	ldr	r0, [r4, #0]
  hspi->pTxBuffPtr  = (uint8_t *)pData;
 8005ba2:	6325      	str	r5, [r4, #48]	; 0x30
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8005ba4:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
    SPI_1LINE_TX(hspi);
 8005ba8:	bf08      	it	eq
 8005baa:	6803      	ldreq	r3, [r0, #0]
  hspi->TxXferSize  = Size;
 8005bac:	f8a4 8034 	strh.w	r8, [r4, #52]	; 0x34
    SPI_1LINE_TX(hspi);
 8005bb0:	bf04      	itt	eq
 8005bb2:	f443 4380 	orreq.w	r3, r3, #16384	; 0x4000
 8005bb6:	6003      	streq	r3, [r0, #0]
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 8005bb8:	6803      	ldr	r3, [r0, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 8005bba:	68e2      	ldr	r2, [r4, #12]
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 8005bbc:	065b      	lsls	r3, r3, #25
    __HAL_SPI_ENABLE(hspi);
 8005bbe:	bf5e      	ittt	pl
 8005bc0:	6803      	ldrpl	r3, [r0, #0]
 8005bc2:	f043 0340 	orrpl.w	r3, r3, #64	; 0x40
 8005bc6:	6003      	strpl	r3, [r0, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 8005bc8:	f5b2 6f00 	cmp.w	r2, #2048	; 0x800
 8005bcc:	6863      	ldr	r3, [r4, #4]
 8005bce:	d13e      	bne.n	8005c4e <HAL_SPI_Transmit+0x100>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 8005bd0:	b113      	cbz	r3, 8005bd8 <HAL_SPI_Transmit+0x8a>
 8005bd2:	f1b8 0f01 	cmp.w	r8, #1
 8005bd6:	d107      	bne.n	8005be8 <HAL_SPI_Transmit+0x9a>
      hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 8005bd8:	f835 3b02 	ldrh.w	r3, [r5], #2
 8005bdc:	60c3      	str	r3, [r0, #12]
      hspi->pTxBuffPtr += sizeof(uint16_t);
 8005bde:	6325      	str	r5, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 8005be0:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8005be2:	3b01      	subs	r3, #1
 8005be4:	b29b      	uxth	r3, r3
 8005be6:	86e3      	strh	r3, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 8005be8:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8005bea:	b29b      	uxth	r3, r3
 8005bec:	b9a3      	cbnz	r3, 8005c18 <HAL_SPI_Transmit+0xca>
  if (SPI_EndRxTxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 8005bee:	463a      	mov	r2, r7
 8005bf0:	4631      	mov	r1, r6
 8005bf2:	4620      	mov	r0, r4
 8005bf4:	f7ff ff42 	bl	8005a7c <SPI_EndRxTxTransaction>
 8005bf8:	2800      	cmp	r0, #0
 8005bfa:	d149      	bne.n	8005c90 <HAL_SPI_Transmit+0x142>
  if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 8005bfc:	68a3      	ldr	r3, [r4, #8]
 8005bfe:	b933      	cbnz	r3, 8005c0e <HAL_SPI_Transmit+0xc0>
    __HAL_SPI_CLEAR_OVRFLAG(hspi);
 8005c00:	9301      	str	r3, [sp, #4]
 8005c02:	6823      	ldr	r3, [r4, #0]
 8005c04:	68da      	ldr	r2, [r3, #12]
 8005c06:	9201      	str	r2, [sp, #4]
 8005c08:	689b      	ldr	r3, [r3, #8]
 8005c0a:	9301      	str	r3, [sp, #4]
 8005c0c:	9b01      	ldr	r3, [sp, #4]
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 8005c0e:	6d60      	ldr	r0, [r4, #84]	; 0x54
    errorcode = HAL_BUSY;
 8005c10:	3000      	adds	r0, #0
 8005c12:	bf18      	it	ne
 8005c14:	2001      	movne	r0, #1
error:
 8005c16:	e011      	b.n	8005c3c <HAL_SPI_Transmit+0xee>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 8005c18:	6822      	ldr	r2, [r4, #0]
 8005c1a:	6893      	ldr	r3, [r2, #8]
 8005c1c:	0798      	lsls	r0, r3, #30
 8005c1e:	d505      	bpl.n	8005c2c <HAL_SPI_Transmit+0xde>
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 8005c20:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8005c22:	f833 1b02 	ldrh.w	r1, [r3], #2
 8005c26:	60d1      	str	r1, [r2, #12]
        hspi->pTxBuffPtr += sizeof(uint16_t);
 8005c28:	6323      	str	r3, [r4, #48]	; 0x30
 8005c2a:	e7d9      	b.n	8005be0 <HAL_SPI_Transmit+0x92>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 8005c2c:	f7fe f85a 	bl	8003ce4 <HAL_GetTick>
 8005c30:	1bc0      	subs	r0, r0, r7
 8005c32:	42b0      	cmp	r0, r6
 8005c34:	d3d8      	bcc.n	8005be8 <HAL_SPI_Transmit+0x9a>
 8005c36:	1c71      	adds	r1, r6, #1
 8005c38:	d0d6      	beq.n	8005be8 <HAL_SPI_Transmit+0x9a>
          errorcode = HAL_TIMEOUT;
 8005c3a:	2003      	movs	r0, #3
  hspi->State = HAL_SPI_STATE_READY;
 8005c3c:	2301      	movs	r3, #1
 8005c3e:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
  __HAL_UNLOCK(hspi);
 8005c42:	2300      	movs	r3, #0
 8005c44:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
}
 8005c48:	b002      	add	sp, #8
 8005c4a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 8005c4e:	b113      	cbz	r3, 8005c56 <HAL_SPI_Transmit+0x108>
 8005c50:	f1b8 0f01 	cmp.w	r8, #1
 8005c54:	d108      	bne.n	8005c68 <HAL_SPI_Transmit+0x11a>
      *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 8005c56:	782b      	ldrb	r3, [r5, #0]
 8005c58:	7303      	strb	r3, [r0, #12]
        hspi->pTxBuffPtr += sizeof(uint8_t);
 8005c5a:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8005c5c:	3301      	adds	r3, #1
 8005c5e:	6323      	str	r3, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 8005c60:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8005c62:	3b01      	subs	r3, #1
 8005c64:	b29b      	uxth	r3, r3
 8005c66:	86e3      	strh	r3, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 8005c68:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8005c6a:	b29b      	uxth	r3, r3
 8005c6c:	2b00      	cmp	r3, #0
 8005c6e:	d0be      	beq.n	8005bee <HAL_SPI_Transmit+0xa0>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 8005c70:	6823      	ldr	r3, [r4, #0]
 8005c72:	689a      	ldr	r2, [r3, #8]
 8005c74:	0792      	lsls	r2, r2, #30
 8005c76:	d503      	bpl.n	8005c80 <HAL_SPI_Transmit+0x132>
        *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 8005c78:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8005c7a:	7812      	ldrb	r2, [r2, #0]
 8005c7c:	731a      	strb	r2, [r3, #12]
 8005c7e:	e7ec      	b.n	8005c5a <HAL_SPI_Transmit+0x10c>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 8005c80:	f7fe f830 	bl	8003ce4 <HAL_GetTick>
 8005c84:	1bc0      	subs	r0, r0, r7
 8005c86:	42b0      	cmp	r0, r6
 8005c88:	d3ee      	bcc.n	8005c68 <HAL_SPI_Transmit+0x11a>
 8005c8a:	1c73      	adds	r3, r6, #1
 8005c8c:	d0ec      	beq.n	8005c68 <HAL_SPI_Transmit+0x11a>
 8005c8e:	e7d4      	b.n	8005c3a <HAL_SPI_Transmit+0xec>
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 8005c90:	2320      	movs	r3, #32
 8005c92:	6563      	str	r3, [r4, #84]	; 0x54
 8005c94:	e7b2      	b.n	8005bfc <HAL_SPI_Transmit+0xae>
    errorcode = HAL_BUSY;
 8005c96:	2002      	movs	r0, #2
 8005c98:	e7d0      	b.n	8005c3c <HAL_SPI_Transmit+0xee>
  __HAL_LOCK(hspi);
 8005c9a:	2002      	movs	r0, #2
 8005c9c:	e7d4      	b.n	8005c48 <HAL_SPI_Transmit+0xfa>

08005c9e <HAL_SPI_TransmitReceive>:
{
 8005c9e:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8005ca2:	461e      	mov	r6, r3
  __HAL_LOCK(hspi);
 8005ca4:	f890 3050 	ldrb.w	r3, [r0, #80]	; 0x50
{
 8005ca8:	9f0a      	ldr	r7, [sp, #40]	; 0x28
  __HAL_LOCK(hspi);
 8005caa:	2b01      	cmp	r3, #1
{
 8005cac:	4604      	mov	r4, r0
 8005cae:	460d      	mov	r5, r1
 8005cb0:	4691      	mov	r9, r2
  __HAL_LOCK(hspi);
 8005cb2:	f000 80e2 	beq.w	8005e7a <HAL_SPI_TransmitReceive+0x1dc>
 8005cb6:	2301      	movs	r3, #1
 8005cb8:	f880 3050 	strb.w	r3, [r0, #80]	; 0x50
  tickstart = HAL_GetTick();
 8005cbc:	f7fe f812 	bl	8003ce4 <HAL_GetTick>
  tmp_state           = hspi->State;
 8005cc0:	f894 3051 	ldrb.w	r3, [r4, #81]	; 0x51
  tmp_mode            = hspi->Init.Mode;
 8005cc4:	6861      	ldr	r1, [r4, #4]
  tmp_state           = hspi->State;
 8005cc6:	b2db      	uxtb	r3, r3
  if (!((tmp_state == HAL_SPI_STATE_READY) || \
 8005cc8:	2b01      	cmp	r3, #1
  tickstart = HAL_GetTick();
 8005cca:	4680      	mov	r8, r0
  if (!((tmp_state == HAL_SPI_STATE_READY) || \
 8005ccc:	d00a      	beq.n	8005ce4 <HAL_SPI_TransmitReceive+0x46>
 8005cce:	f5b1 7f82 	cmp.w	r1, #260	; 0x104
 8005cd2:	f040 80d0 	bne.w	8005e76 <HAL_SPI_TransmitReceive+0x1d8>
        ((tmp_mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES) && (tmp_state == HAL_SPI_STATE_BUSY_RX))))
 8005cd6:	68a0      	ldr	r0, [r4, #8]
 8005cd8:	2800      	cmp	r0, #0
 8005cda:	f040 80cc 	bne.w	8005e76 <HAL_SPI_TransmitReceive+0x1d8>
 8005cde:	2b04      	cmp	r3, #4
 8005ce0:	f040 80c9 	bne.w	8005e76 <HAL_SPI_TransmitReceive+0x1d8>
  if ((pTxData == NULL) || (pRxData == NULL) || (Size == 0U))
 8005ce4:	2d00      	cmp	r5, #0
 8005ce6:	f000 80c4 	beq.w	8005e72 <HAL_SPI_TransmitReceive+0x1d4>
 8005cea:	f1b9 0f00 	cmp.w	r9, #0
 8005cee:	f000 80c0 	beq.w	8005e72 <HAL_SPI_TransmitReceive+0x1d4>
 8005cf2:	2e00      	cmp	r6, #0
 8005cf4:	f000 80bd 	beq.w	8005e72 <HAL_SPI_TransmitReceive+0x1d4>
  if (hspi->State != HAL_SPI_STATE_BUSY_RX)
 8005cf8:	f894 3051 	ldrb.w	r3, [r4, #81]	; 0x51
  hspi->pRxBuffPtr  = (uint8_t *)pRxData;
 8005cfc:	f8c4 9038 	str.w	r9, [r4, #56]	; 0x38
  if (hspi->State != HAL_SPI_STATE_BUSY_RX)
 8005d00:	2b04      	cmp	r3, #4
    hspi->State = HAL_SPI_STATE_BUSY_TX_RX;
 8005d02:	bf1c      	itt	ne
 8005d04:	2305      	movne	r3, #5
 8005d06:	f884 3051 	strbne.w	r3, [r4, #81]	; 0x51
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 8005d0a:	2300      	movs	r3, #0
 8005d0c:	6563      	str	r3, [r4, #84]	; 0x54
  hspi->TxISR       = NULL;
 8005d0e:	e9c4 3310 	strd	r3, r3, [r4, #64]	; 0x40
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 8005d12:	6823      	ldr	r3, [r4, #0]
  hspi->RxXferCount = Size;
 8005d14:	87e6      	strh	r6, [r4, #62]	; 0x3e
  hspi->TxXferCount = Size;
 8005d16:	86e6      	strh	r6, [r4, #54]	; 0x36
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 8005d18:	681a      	ldr	r2, [r3, #0]
  hspi->RxXferSize  = Size;
 8005d1a:	87a6      	strh	r6, [r4, #60]	; 0x3c
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 8005d1c:	0650      	lsls	r0, r2, #25
    __HAL_SPI_ENABLE(hspi);
 8005d1e:	bf58      	it	pl
 8005d20:	681a      	ldrpl	r2, [r3, #0]
  hspi->pTxBuffPtr  = (uint8_t *)pTxData;
 8005d22:	6325      	str	r5, [r4, #48]	; 0x30
    __HAL_SPI_ENABLE(hspi);
 8005d24:	bf58      	it	pl
 8005d26:	f042 0240 	orrpl.w	r2, r2, #64	; 0x40
  hspi->TxXferSize  = Size;
 8005d2a:	86a6      	strh	r6, [r4, #52]	; 0x34
    __HAL_SPI_ENABLE(hspi);
 8005d2c:	bf58      	it	pl
 8005d2e:	601a      	strpl	r2, [r3, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 8005d30:	68e2      	ldr	r2, [r4, #12]
 8005d32:	f5b2 6f00 	cmp.w	r2, #2048	; 0x800
 8005d36:	d158      	bne.n	8005dea <HAL_SPI_TransmitReceive+0x14c>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 8005d38:	b109      	cbz	r1, 8005d3e <HAL_SPI_TransmitReceive+0xa0>
 8005d3a:	2e01      	cmp	r6, #1
 8005d3c:	d107      	bne.n	8005d4e <HAL_SPI_TransmitReceive+0xb0>
      hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 8005d3e:	f835 2b02 	ldrh.w	r2, [r5], #2
 8005d42:	60da      	str	r2, [r3, #12]
      hspi->TxXferCount--;
 8005d44:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
      hspi->pTxBuffPtr += sizeof(uint16_t);
 8005d46:	6325      	str	r5, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 8005d48:	3b01      	subs	r3, #1
 8005d4a:	b29b      	uxth	r3, r3
 8005d4c:	86e3      	strh	r3, [r4, #54]	; 0x36
        txallowed = 1U;
 8005d4e:	2501      	movs	r5, #1
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 8005d50:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8005d52:	b29b      	uxth	r3, r3
 8005d54:	b9ab      	cbnz	r3, 8005d82 <HAL_SPI_TransmitReceive+0xe4>
 8005d56:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8005d58:	b29b      	uxth	r3, r3
 8005d5a:	b993      	cbnz	r3, 8005d82 <HAL_SPI_TransmitReceive+0xe4>
  if (SPI_EndRxTxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 8005d5c:	4642      	mov	r2, r8
 8005d5e:	4639      	mov	r1, r7
 8005d60:	4620      	mov	r0, r4
 8005d62:	f7ff fe8b 	bl	8005a7c <SPI_EndRxTxTransaction>
 8005d66:	2800      	cmp	r0, #0
 8005d68:	f040 8081 	bne.w	8005e6e <HAL_SPI_TransmitReceive+0x1d0>
  if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 8005d6c:	68a3      	ldr	r3, [r4, #8]
 8005d6e:	2b00      	cmp	r3, #0
 8005d70:	d132      	bne.n	8005dd8 <HAL_SPI_TransmitReceive+0x13a>
    __HAL_SPI_CLEAR_OVRFLAG(hspi);
 8005d72:	6823      	ldr	r3, [r4, #0]
 8005d74:	9001      	str	r0, [sp, #4]
 8005d76:	68da      	ldr	r2, [r3, #12]
 8005d78:	9201      	str	r2, [sp, #4]
 8005d7a:	689b      	ldr	r3, [r3, #8]
 8005d7c:	9301      	str	r3, [sp, #4]
 8005d7e:	9b01      	ldr	r3, [sp, #4]
 8005d80:	e02a      	b.n	8005dd8 <HAL_SPI_TransmitReceive+0x13a>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 8005d82:	6822      	ldr	r2, [r4, #0]
 8005d84:	6893      	ldr	r3, [r2, #8]
 8005d86:	0799      	lsls	r1, r3, #30
 8005d88:	d50d      	bpl.n	8005da6 <HAL_SPI_TransmitReceive+0x108>
 8005d8a:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8005d8c:	b29b      	uxth	r3, r3
 8005d8e:	b153      	cbz	r3, 8005da6 <HAL_SPI_TransmitReceive+0x108>
 8005d90:	b14d      	cbz	r5, 8005da6 <HAL_SPI_TransmitReceive+0x108>
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 8005d92:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8005d94:	f833 1b02 	ldrh.w	r1, [r3], #2
 8005d98:	60d1      	str	r1, [r2, #12]
        hspi->pTxBuffPtr += sizeof(uint16_t);
 8005d9a:	6323      	str	r3, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 8005d9c:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8005d9e:	3b01      	subs	r3, #1
 8005da0:	b29b      	uxth	r3, r3
 8005da2:	86e3      	strh	r3, [r4, #54]	; 0x36
        txallowed = 0U;
 8005da4:	2500      	movs	r5, #0
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 8005da6:	6893      	ldr	r3, [r2, #8]
 8005da8:	07db      	lsls	r3, r3, #31
 8005daa:	d50c      	bpl.n	8005dc6 <HAL_SPI_TransmitReceive+0x128>
 8005dac:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8005dae:	b29b      	uxth	r3, r3
 8005db0:	b14b      	cbz	r3, 8005dc6 <HAL_SPI_TransmitReceive+0x128>
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 8005db2:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8005db4:	68d2      	ldr	r2, [r2, #12]
 8005db6:	f823 2b02 	strh.w	r2, [r3], #2
        hspi->pRxBuffPtr += sizeof(uint16_t);
 8005dba:	63a3      	str	r3, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 8005dbc:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8005dbe:	3b01      	subs	r3, #1
 8005dc0:	b29b      	uxth	r3, r3
 8005dc2:	87e3      	strh	r3, [r4, #62]	; 0x3e
        txallowed = 1U;
 8005dc4:	2501      	movs	r5, #1
      if (((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY))
 8005dc6:	f7fd ff8d 	bl	8003ce4 <HAL_GetTick>
 8005dca:	eba0 0008 	sub.w	r0, r0, r8
 8005dce:	4287      	cmp	r7, r0
 8005dd0:	d8be      	bhi.n	8005d50 <HAL_SPI_TransmitReceive+0xb2>
 8005dd2:	1c7e      	adds	r6, r7, #1
 8005dd4:	d0bc      	beq.n	8005d50 <HAL_SPI_TransmitReceive+0xb2>
        errorcode = HAL_TIMEOUT;
 8005dd6:	2003      	movs	r0, #3
  hspi->State = HAL_SPI_STATE_READY;
 8005dd8:	2301      	movs	r3, #1
 8005dda:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
  __HAL_UNLOCK(hspi);
 8005dde:	2300      	movs	r3, #0
 8005de0:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
}
 8005de4:	b003      	add	sp, #12
 8005de6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 8005dea:	b109      	cbz	r1, 8005df0 <HAL_SPI_TransmitReceive+0x152>
 8005dec:	2e01      	cmp	r6, #1
 8005dee:	d108      	bne.n	8005e02 <HAL_SPI_TransmitReceive+0x164>
      *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 8005df0:	782a      	ldrb	r2, [r5, #0]
 8005df2:	731a      	strb	r2, [r3, #12]
      hspi->pTxBuffPtr += sizeof(uint8_t);
 8005df4:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8005df6:	3301      	adds	r3, #1
 8005df8:	6323      	str	r3, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 8005dfa:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8005dfc:	3b01      	subs	r3, #1
 8005dfe:	b29b      	uxth	r3, r3
 8005e00:	86e3      	strh	r3, [r4, #54]	; 0x36
        txallowed = 1U;
 8005e02:	2501      	movs	r5, #1
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 8005e04:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8005e06:	b29b      	uxth	r3, r3
 8005e08:	b91b      	cbnz	r3, 8005e12 <HAL_SPI_TransmitReceive+0x174>
 8005e0a:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8005e0c:	b29b      	uxth	r3, r3
 8005e0e:	2b00      	cmp	r3, #0
 8005e10:	d0a4      	beq.n	8005d5c <HAL_SPI_TransmitReceive+0xbe>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 8005e12:	6822      	ldr	r2, [r4, #0]
 8005e14:	6893      	ldr	r3, [r2, #8]
 8005e16:	0798      	lsls	r0, r3, #30
 8005e18:	d50e      	bpl.n	8005e38 <HAL_SPI_TransmitReceive+0x19a>
 8005e1a:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8005e1c:	b29b      	uxth	r3, r3
 8005e1e:	b15b      	cbz	r3, 8005e38 <HAL_SPI_TransmitReceive+0x19a>
 8005e20:	b155      	cbz	r5, 8005e38 <HAL_SPI_TransmitReceive+0x19a>
        *(__IO uint8_t *)&hspi->Instance->DR = (*hspi->pTxBuffPtr);
 8005e22:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8005e24:	781b      	ldrb	r3, [r3, #0]
 8005e26:	7313      	strb	r3, [r2, #12]
        hspi->pTxBuffPtr++;
 8005e28:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8005e2a:	3301      	adds	r3, #1
 8005e2c:	6323      	str	r3, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 8005e2e:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8005e30:	3b01      	subs	r3, #1
 8005e32:	b29b      	uxth	r3, r3
 8005e34:	86e3      	strh	r3, [r4, #54]	; 0x36
        txallowed = 0U;
 8005e36:	2500      	movs	r5, #0
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 8005e38:	6822      	ldr	r2, [r4, #0]
 8005e3a:	6893      	ldr	r3, [r2, #8]
 8005e3c:	07d9      	lsls	r1, r3, #31
 8005e3e:	d50d      	bpl.n	8005e5c <HAL_SPI_TransmitReceive+0x1be>
 8005e40:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8005e42:	b29b      	uxth	r3, r3
 8005e44:	b153      	cbz	r3, 8005e5c <HAL_SPI_TransmitReceive+0x1be>
        (*(uint8_t *)hspi->pRxBuffPtr) = hspi->Instance->DR;
 8005e46:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8005e48:	68d2      	ldr	r2, [r2, #12]
 8005e4a:	701a      	strb	r2, [r3, #0]
        hspi->pRxBuffPtr++;
 8005e4c:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8005e4e:	3301      	adds	r3, #1
 8005e50:	63a3      	str	r3, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 8005e52:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8005e54:	3b01      	subs	r3, #1
 8005e56:	b29b      	uxth	r3, r3
 8005e58:	87e3      	strh	r3, [r4, #62]	; 0x3e
        txallowed = 1U;
 8005e5a:	2501      	movs	r5, #1
      if ((((HAL_GetTick() - tickstart) >=  Timeout) && ((Timeout != HAL_MAX_DELAY))) || (Timeout == 0U))
 8005e5c:	f7fd ff42 	bl	8003ce4 <HAL_GetTick>
 8005e60:	eba0 0008 	sub.w	r0, r0, r8
 8005e64:	4287      	cmp	r7, r0
 8005e66:	d8cd      	bhi.n	8005e04 <HAL_SPI_TransmitReceive+0x166>
 8005e68:	1c7b      	adds	r3, r7, #1
 8005e6a:	d0cb      	beq.n	8005e04 <HAL_SPI_TransmitReceive+0x166>
 8005e6c:	e7b3      	b.n	8005dd6 <HAL_SPI_TransmitReceive+0x138>
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 8005e6e:	2320      	movs	r3, #32
 8005e70:	6563      	str	r3, [r4, #84]	; 0x54
    errorcode = HAL_ERROR;
 8005e72:	2001      	movs	r0, #1
 8005e74:	e7b0      	b.n	8005dd8 <HAL_SPI_TransmitReceive+0x13a>
    errorcode = HAL_BUSY;
 8005e76:	2002      	movs	r0, #2
 8005e78:	e7ae      	b.n	8005dd8 <HAL_SPI_TransmitReceive+0x13a>
  __HAL_LOCK(hspi);
 8005e7a:	2002      	movs	r0, #2
 8005e7c:	e7b2      	b.n	8005de4 <HAL_SPI_TransmitReceive+0x146>

08005e7e <HAL_SPI_Receive>:
{
 8005e7e:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8005e82:	461d      	mov	r5, r3
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES))
 8005e84:	6843      	ldr	r3, [r0, #4]
 8005e86:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
{
 8005e8a:	4604      	mov	r4, r0
 8005e8c:	4688      	mov	r8, r1
 8005e8e:	4617      	mov	r7, r2
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES))
 8005e90:	d10c      	bne.n	8005eac <HAL_SPI_Receive+0x2e>
 8005e92:	6883      	ldr	r3, [r0, #8]
 8005e94:	b953      	cbnz	r3, 8005eac <HAL_SPI_Receive+0x2e>
    hspi->State = HAL_SPI_STATE_BUSY_RX;
 8005e96:	2304      	movs	r3, #4
 8005e98:	f880 3051 	strb.w	r3, [r0, #81]	; 0x51
    return HAL_SPI_TransmitReceive(hspi, pData, pData, Size, Timeout);
 8005e9c:	4613      	mov	r3, r2
 8005e9e:	9500      	str	r5, [sp, #0]
 8005ea0:	460a      	mov	r2, r1
 8005ea2:	f7ff fefc 	bl	8005c9e <HAL_SPI_TransmitReceive>
}
 8005ea6:	b002      	add	sp, #8
 8005ea8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  __HAL_LOCK(hspi);
 8005eac:	f894 3050 	ldrb.w	r3, [r4, #80]	; 0x50
 8005eb0:	2b01      	cmp	r3, #1
 8005eb2:	d079      	beq.n	8005fa8 <HAL_SPI_Receive+0x12a>
 8005eb4:	2301      	movs	r3, #1
 8005eb6:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
  tickstart = HAL_GetTick();
 8005eba:	f7fd ff13 	bl	8003ce4 <HAL_GetTick>
 8005ebe:	4606      	mov	r6, r0
  if (hspi->State != HAL_SPI_STATE_READY)
 8005ec0:	f894 0051 	ldrb.w	r0, [r4, #81]	; 0x51
 8005ec4:	b2c0      	uxtb	r0, r0
 8005ec6:	2801      	cmp	r0, #1
 8005ec8:	d16c      	bne.n	8005fa4 <HAL_SPI_Receive+0x126>
  if ((pData == NULL) || (Size == 0U))
 8005eca:	f1b8 0f00 	cmp.w	r8, #0
 8005ece:	d057      	beq.n	8005f80 <HAL_SPI_Receive+0x102>
 8005ed0:	2f00      	cmp	r7, #0
 8005ed2:	d055      	beq.n	8005f80 <HAL_SPI_Receive+0x102>
  hspi->State       = HAL_SPI_STATE_BUSY_RX;
 8005ed4:	2304      	movs	r3, #4
 8005ed6:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8005eda:	68a2      	ldr	r2, [r4, #8]
  hspi->RxXferSize  = Size;
 8005edc:	87a7      	strh	r7, [r4, #60]	; 0x3c
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 8005ede:	2300      	movs	r3, #0
 8005ee0:	6563      	str	r3, [r4, #84]	; 0x54
  hspi->pTxBuffPtr  = (uint8_t *)NULL;
 8005ee2:	6323      	str	r3, [r4, #48]	; 0x30
  hspi->RxXferCount = Size;
 8005ee4:	87e7      	strh	r7, [r4, #62]	; 0x3e
  hspi->TxXferSize  = 0U;
 8005ee6:	86a3      	strh	r3, [r4, #52]	; 0x34
  hspi->TxXferCount = 0U;
 8005ee8:	86e3      	strh	r3, [r4, #54]	; 0x36
  hspi->TxISR       = NULL;
 8005eea:	e9c4 3310 	strd	r3, r3, [r4, #64]	; 0x40
 8005eee:	6823      	ldr	r3, [r4, #0]
  hspi->pRxBuffPtr  = (uint8_t *)pData;
 8005ef0:	f8c4 8038 	str.w	r8, [r4, #56]	; 0x38
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8005ef4:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
    SPI_1LINE_RX(hspi);
 8005ef8:	bf02      	ittt	eq
 8005efa:	681a      	ldreq	r2, [r3, #0]
 8005efc:	f422 4280 	biceq.w	r2, r2, #16384	; 0x4000
 8005f00:	601a      	streq	r2, [r3, #0]
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 8005f02:	681a      	ldr	r2, [r3, #0]
 8005f04:	0657      	lsls	r7, r2, #25
    __HAL_SPI_ENABLE(hspi);
 8005f06:	bf5e      	ittt	pl
 8005f08:	681a      	ldrpl	r2, [r3, #0]
 8005f0a:	f042 0240 	orrpl.w	r2, r2, #64	; 0x40
 8005f0e:	601a      	strpl	r2, [r3, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_8BIT)
 8005f10:	68e3      	ldr	r3, [r4, #12]
 8005f12:	b1f3      	cbz	r3, 8005f52 <HAL_SPI_Receive+0xd4>
    while (hspi->RxXferCount > 0U)
 8005f14:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8005f16:	b29b      	uxth	r3, r3
 8005f18:	b1fb      	cbz	r3, 8005f5a <HAL_SPI_Receive+0xdc>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 8005f1a:	6823      	ldr	r3, [r4, #0]
 8005f1c:	689a      	ldr	r2, [r3, #8]
 8005f1e:	07d2      	lsls	r2, r2, #31
 8005f20:	d535      	bpl.n	8005f8e <HAL_SPI_Receive+0x110>
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 8005f22:	68da      	ldr	r2, [r3, #12]
 8005f24:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8005f26:	f823 2b02 	strh.w	r2, [r3], #2
        hspi->pRxBuffPtr += sizeof(uint16_t);
 8005f2a:	63a3      	str	r3, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 8005f2c:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8005f2e:	3b01      	subs	r3, #1
 8005f30:	b29b      	uxth	r3, r3
 8005f32:	87e3      	strh	r3, [r4, #62]	; 0x3e
 8005f34:	e7ee      	b.n	8005f14 <HAL_SPI_Receive+0x96>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 8005f36:	6823      	ldr	r3, [r4, #0]
 8005f38:	689a      	ldr	r2, [r3, #8]
 8005f3a:	07d0      	lsls	r0, r2, #31
 8005f3c:	d518      	bpl.n	8005f70 <HAL_SPI_Receive+0xf2>
        (* (uint8_t *)hspi->pRxBuffPtr) = *(__IO uint8_t *)&hspi->Instance->DR;
 8005f3e:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8005f40:	7b1b      	ldrb	r3, [r3, #12]
 8005f42:	7013      	strb	r3, [r2, #0]
        hspi->pRxBuffPtr += sizeof(uint8_t);
 8005f44:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8005f46:	3301      	adds	r3, #1
 8005f48:	63a3      	str	r3, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 8005f4a:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8005f4c:	3b01      	subs	r3, #1
 8005f4e:	b29b      	uxth	r3, r3
 8005f50:	87e3      	strh	r3, [r4, #62]	; 0x3e
    while (hspi->RxXferCount > 0U)
 8005f52:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8005f54:	b29b      	uxth	r3, r3
 8005f56:	2b00      	cmp	r3, #0
 8005f58:	d1ed      	bne.n	8005f36 <HAL_SPI_Receive+0xb8>
  if (SPI_EndRxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 8005f5a:	4632      	mov	r2, r6
 8005f5c:	4629      	mov	r1, r5
 8005f5e:	4620      	mov	r0, r4
 8005f60:	f7ff fd62 	bl	8005a28 <SPI_EndRxTransaction>
 8005f64:	b9d8      	cbnz	r0, 8005f9e <HAL_SPI_Receive+0x120>
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 8005f66:	6d60      	ldr	r0, [r4, #84]	; 0x54
    errorcode = HAL_BUSY;
 8005f68:	3000      	adds	r0, #0
 8005f6a:	bf18      	it	ne
 8005f6c:	2001      	movne	r0, #1
error :
 8005f6e:	e007      	b.n	8005f80 <HAL_SPI_Receive+0x102>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 8005f70:	f7fd feb8 	bl	8003ce4 <HAL_GetTick>
 8005f74:	1b80      	subs	r0, r0, r6
 8005f76:	42a8      	cmp	r0, r5
 8005f78:	d3eb      	bcc.n	8005f52 <HAL_SPI_Receive+0xd4>
 8005f7a:	1c69      	adds	r1, r5, #1
 8005f7c:	d0e9      	beq.n	8005f52 <HAL_SPI_Receive+0xd4>
          errorcode = HAL_TIMEOUT;
 8005f7e:	2003      	movs	r0, #3
  hspi->State = HAL_SPI_STATE_READY;
 8005f80:	2301      	movs	r3, #1
 8005f82:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
  __HAL_UNLOCK(hspi);
 8005f86:	2300      	movs	r3, #0
 8005f88:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
  return errorcode;
 8005f8c:	e78b      	b.n	8005ea6 <HAL_SPI_Receive+0x28>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 8005f8e:	f7fd fea9 	bl	8003ce4 <HAL_GetTick>
 8005f92:	1b80      	subs	r0, r0, r6
 8005f94:	42a8      	cmp	r0, r5
 8005f96:	d3bd      	bcc.n	8005f14 <HAL_SPI_Receive+0x96>
 8005f98:	1c6b      	adds	r3, r5, #1
 8005f9a:	d0bb      	beq.n	8005f14 <HAL_SPI_Receive+0x96>
 8005f9c:	e7ef      	b.n	8005f7e <HAL_SPI_Receive+0x100>
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 8005f9e:	2320      	movs	r3, #32
 8005fa0:	6563      	str	r3, [r4, #84]	; 0x54
 8005fa2:	e7e0      	b.n	8005f66 <HAL_SPI_Receive+0xe8>
    errorcode = HAL_BUSY;
 8005fa4:	2002      	movs	r0, #2
 8005fa6:	e7eb      	b.n	8005f80 <HAL_SPI_Receive+0x102>
  __HAL_LOCK(hspi);
 8005fa8:	2002      	movs	r0, #2
 8005faa:	e77c      	b.n	8005ea6 <HAL_SPI_Receive+0x28>

08005fac <TIM_OC1_SetConfig>:
  uint32_t tmpccmrx;
  uint32_t tmpccer;
  uint32_t tmpcr2;

  /* Disable the Channel 1: Reset the CC1E Bit */
  TIMx->CCER &= ~TIM_CCER_CC1E;
 8005fac:	6a03      	ldr	r3, [r0, #32]
 8005fae:	f023 0301 	bic.w	r3, r3, #1
 8005fb2:	6203      	str	r3, [r0, #32]

  /* Get the TIMx CCER register value */
  tmpccer = TIMx->CCER;
 8005fb4:	6a03      	ldr	r3, [r0, #32]
{
 8005fb6:	b570      	push	{r4, r5, r6, lr}
  /* Get the TIMx CR2 register value */
  tmpcr2 =  TIMx->CR2;
 8005fb8:	6844      	ldr	r4, [r0, #4]

  /* Get the TIMx CCMR1 register value */
  tmpccmrx = TIMx->CCMR1;
 8005fba:	6982      	ldr	r2, [r0, #24]

  /* Reset the Output Compare Mode Bits */
  tmpccmrx &= ~TIM_CCMR1_OC1M;
  tmpccmrx &= ~TIM_CCMR1_CC1S;
  /* Select the Output Compare Mode */
  tmpccmrx |= OC_Config->OCMode;
 8005fbc:	680d      	ldr	r5, [r1, #0]
  tmpccmrx &= ~TIM_CCMR1_CC1S;
 8005fbe:	f022 0273 	bic.w	r2, r2, #115	; 0x73
  tmpccmrx |= OC_Config->OCMode;
 8005fc2:	432a      	orrs	r2, r5

  /* Reset the Output Polarity level */
  tmpccer &= ~TIM_CCER_CC1P;
  /* Set the Output Compare Polarity */
  tmpccer |= OC_Config->OCPolarity;
 8005fc4:	688d      	ldr	r5, [r1, #8]
  tmpccer &= ~TIM_CCER_CC1P;
 8005fc6:	f023 0302 	bic.w	r3, r3, #2
  tmpccer |= OC_Config->OCPolarity;
 8005fca:	432b      	orrs	r3, r5

  if (IS_TIM_CCXN_INSTANCE(TIMx, TIM_CHANNEL_1))
 8005fcc:	4d0e      	ldr	r5, [pc, #56]	; (8006008 <TIM_OC1_SetConfig+0x5c>)
 8005fce:	42a8      	cmp	r0, r5
 8005fd0:	d002      	beq.n	8005fd8 <TIM_OC1_SetConfig+0x2c>
 8005fd2:	4e0e      	ldr	r6, [pc, #56]	; (800600c <TIM_OC1_SetConfig+0x60>)
 8005fd4:	42b0      	cmp	r0, r6
 8005fd6:	d110      	bne.n	8005ffa <TIM_OC1_SetConfig+0x4e>
    assert_param(IS_TIM_OCN_POLARITY(OC_Config->OCNPolarity));

    /* Reset the Output N Polarity level */
    tmpccer &= ~TIM_CCER_CC1NP;
    /* Set the Output N Polarity */
    tmpccer |= OC_Config->OCNPolarity;
 8005fd8:	68ce      	ldr	r6, [r1, #12]
    tmpccer &= ~TIM_CCER_CC1NP;
 8005fda:	f023 0308 	bic.w	r3, r3, #8
    tmpccer |= OC_Config->OCNPolarity;
 8005fde:	4333      	orrs	r3, r6
    /* Reset the Output N State */
    tmpccer &= ~TIM_CCER_CC1NE;
  }

  if (IS_TIM_BREAK_INSTANCE(TIMx))
 8005fe0:	42a8      	cmp	r0, r5
    tmpccer &= ~TIM_CCER_CC1NE;
 8005fe2:	f023 0304 	bic.w	r3, r3, #4
  if (IS_TIM_BREAK_INSTANCE(TIMx))
 8005fe6:	d002      	beq.n	8005fee <TIM_OC1_SetConfig+0x42>
 8005fe8:	4d08      	ldr	r5, [pc, #32]	; (800600c <TIM_OC1_SetConfig+0x60>)
 8005fea:	42a8      	cmp	r0, r5
 8005fec:	d105      	bne.n	8005ffa <TIM_OC1_SetConfig+0x4e>
    tmpcr2 &= ~TIM_CR2_OIS1;
    tmpcr2 &= ~TIM_CR2_OIS1N;
    /* Set the Output Idle state */
    tmpcr2 |= OC_Config->OCIdleState;
    /* Set the Output N Idle state */
    tmpcr2 |= OC_Config->OCNIdleState;
 8005fee:	e9d1 5605 	ldrd	r5, r6, [r1, #20]
    tmpcr2 &= ~TIM_CR2_OIS1N;
 8005ff2:	f424 7440 	bic.w	r4, r4, #768	; 0x300
    tmpcr2 |= OC_Config->OCNIdleState;
 8005ff6:	4335      	orrs	r5, r6
 8005ff8:	432c      	orrs	r4, r5
  }

  /* Write to TIMx CR2 */
  TIMx->CR2 = tmpcr2;
 8005ffa:	6044      	str	r4, [r0, #4]

  /* Write to TIMx CCMR1 */
  TIMx->CCMR1 = tmpccmrx;
 8005ffc:	6182      	str	r2, [r0, #24]

  /* Set the Capture Compare Register value */
  TIMx->CCR1 = OC_Config->Pulse;
 8005ffe:	684a      	ldr	r2, [r1, #4]
 8006000:	6342      	str	r2, [r0, #52]	; 0x34

  /* Write to TIMx CCER */
  TIMx->CCER = tmpccer;
 8006002:	6203      	str	r3, [r0, #32]
}
 8006004:	bd70      	pop	{r4, r5, r6, pc}
 8006006:	bf00      	nop
 8006008:	40010000 	.word	0x40010000
 800600c:	40010400 	.word	0x40010400

08006010 <TIM_OC3_SetConfig>:
  uint32_t tmpccmrx;
  uint32_t tmpccer;
  uint32_t tmpcr2;

  /* Disable the Channel 3: Reset the CC2E Bit */
  TIMx->CCER &= ~TIM_CCER_CC3E;
 8006010:	6a03      	ldr	r3, [r0, #32]
 8006012:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 8006016:	6203      	str	r3, [r0, #32]

  /* Get the TIMx CCER register value */
  tmpccer = TIMx->CCER;
 8006018:	6a03      	ldr	r3, [r0, #32]
{
 800601a:	b570      	push	{r4, r5, r6, lr}
  /* Get the TIMx CR2 register value */
  tmpcr2 =  TIMx->CR2;
 800601c:	6844      	ldr	r4, [r0, #4]

  /* Get the TIMx CCMR2 register value */
  tmpccmrx = TIMx->CCMR2;
 800601e:	69c2      	ldr	r2, [r0, #28]

  /* Reset the Output Compare mode and Capture/Compare selection Bits */
  tmpccmrx &= ~TIM_CCMR2_OC3M;
  tmpccmrx &= ~TIM_CCMR2_CC3S;
  /* Select the Output Compare Mode */
  tmpccmrx |= OC_Config->OCMode;
 8006020:	680d      	ldr	r5, [r1, #0]
  tmpccmrx &= ~TIM_CCMR2_CC3S;
 8006022:	f022 0273 	bic.w	r2, r2, #115	; 0x73
  tmpccmrx |= OC_Config->OCMode;
 8006026:	432a      	orrs	r2, r5

  /* Reset the Output Polarity level */
  tmpccer &= ~TIM_CCER_CC3P;
  /* Set the Output Compare Polarity */
  tmpccer |= (OC_Config->OCPolarity << 8U);
 8006028:	688d      	ldr	r5, [r1, #8]
  tmpccer &= ~TIM_CCER_CC3P;
 800602a:	f423 7300 	bic.w	r3, r3, #512	; 0x200
  tmpccer |= (OC_Config->OCPolarity << 8U);
 800602e:	ea43 2305 	orr.w	r3, r3, r5, lsl #8

  if (IS_TIM_CCXN_INSTANCE(TIMx, TIM_CHANNEL_3))
 8006032:	4d11      	ldr	r5, [pc, #68]	; (8006078 <TIM_OC3_SetConfig+0x68>)
 8006034:	42a8      	cmp	r0, r5
 8006036:	d003      	beq.n	8006040 <TIM_OC3_SetConfig+0x30>
 8006038:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 800603c:	42a8      	cmp	r0, r5
 800603e:	d114      	bne.n	800606a <TIM_OC3_SetConfig+0x5a>
    assert_param(IS_TIM_OCN_POLARITY(OC_Config->OCNPolarity));

    /* Reset the Output N Polarity level */
    tmpccer &= ~TIM_CCER_CC3NP;
    /* Set the Output N Polarity */
    tmpccer |= (OC_Config->OCNPolarity << 8U);
 8006040:	68cd      	ldr	r5, [r1, #12]
    tmpccer &= ~TIM_CCER_CC3NP;
 8006042:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
    tmpccer |= (OC_Config->OCNPolarity << 8U);
 8006046:	ea43 2305 	orr.w	r3, r3, r5, lsl #8
    /* Reset the Output N State */
    tmpccer &= ~TIM_CCER_CC3NE;
  }

  if (IS_TIM_BREAK_INSTANCE(TIMx))
 800604a:	4d0b      	ldr	r5, [pc, #44]	; (8006078 <TIM_OC3_SetConfig+0x68>)
 800604c:	42a8      	cmp	r0, r5
    tmpccer &= ~TIM_CCER_CC3NE;
 800604e:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
  if (IS_TIM_BREAK_INSTANCE(TIMx))
 8006052:	d003      	beq.n	800605c <TIM_OC3_SetConfig+0x4c>
 8006054:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 8006058:	42a8      	cmp	r0, r5
 800605a:	d106      	bne.n	800606a <TIM_OC3_SetConfig+0x5a>
    tmpcr2 &= ~TIM_CR2_OIS3;
    tmpcr2 &= ~TIM_CR2_OIS3N;
    /* Set the Output Idle state */
    tmpcr2 |= (OC_Config->OCIdleState << 4U);
    /* Set the Output N Idle state */
    tmpcr2 |= (OC_Config->OCNIdleState << 4U);
 800605c:	e9d1 5605 	ldrd	r5, r6, [r1, #20]
    tmpcr2 &= ~TIM_CR2_OIS3N;
 8006060:	f424 5440 	bic.w	r4, r4, #12288	; 0x3000
    tmpcr2 |= (OC_Config->OCNIdleState << 4U);
 8006064:	4335      	orrs	r5, r6
 8006066:	ea44 1405 	orr.w	r4, r4, r5, lsl #4
  }

  /* Write to TIMx CR2 */
  TIMx->CR2 = tmpcr2;
 800606a:	6044      	str	r4, [r0, #4]

  /* Write to TIMx CCMR2 */
  TIMx->CCMR2 = tmpccmrx;
 800606c:	61c2      	str	r2, [r0, #28]

  /* Set the Capture Compare Register value */
  TIMx->CCR3 = OC_Config->Pulse;
 800606e:	684a      	ldr	r2, [r1, #4]
 8006070:	63c2      	str	r2, [r0, #60]	; 0x3c

  /* Write to TIMx CCER */
  TIMx->CCER = tmpccer;
 8006072:	6203      	str	r3, [r0, #32]
}
 8006074:	bd70      	pop	{r4, r5, r6, pc}
 8006076:	bf00      	nop
 8006078:	40010000 	.word	0x40010000

0800607c <TIM_OC4_SetConfig>:
  uint32_t tmpccmrx;
  uint32_t tmpccer;
  uint32_t tmpcr2;

  /* Disable the Channel 4: Reset the CC4E Bit */
  TIMx->CCER &= ~TIM_CCER_CC4E;
 800607c:	6a03      	ldr	r3, [r0, #32]
 800607e:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8006082:	6203      	str	r3, [r0, #32]

  /* Get the TIMx CCER register value */
  tmpccer = TIMx->CCER;
 8006084:	6a03      	ldr	r3, [r0, #32]
{
 8006086:	b530      	push	{r4, r5, lr}
  /* Get the TIMx CR2 register value */
  tmpcr2 =  TIMx->CR2;
 8006088:	6844      	ldr	r4, [r0, #4]

  /* Get the TIMx CCMR2 register value */
  tmpccmrx = TIMx->CCMR2;
 800608a:	69c2      	ldr	r2, [r0, #28]
  /* Reset the Output Compare mode and Capture/Compare selection Bits */
  tmpccmrx &= ~TIM_CCMR2_OC4M;
  tmpccmrx &= ~TIM_CCMR2_CC4S;

  /* Select the Output Compare Mode */
  tmpccmrx |= (OC_Config->OCMode << 8U);
 800608c:	680d      	ldr	r5, [r1, #0]
  tmpccmrx &= ~TIM_CCMR2_CC4S;
 800608e:	f422 42e6 	bic.w	r2, r2, #29440	; 0x7300
  tmpccmrx |= (OC_Config->OCMode << 8U);
 8006092:	ea42 2205 	orr.w	r2, r2, r5, lsl #8

  /* Reset the Output Polarity level */
  tmpccer &= ~TIM_CCER_CC4P;
  /* Set the Output Compare Polarity */
  tmpccer |= (OC_Config->OCPolarity << 12U);
 8006096:	688d      	ldr	r5, [r1, #8]
  tmpccer &= ~TIM_CCER_CC4P;
 8006098:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
  tmpccer |= (OC_Config->OCPolarity << 12U);
 800609c:	ea43 3305 	orr.w	r3, r3, r5, lsl #12

  if (IS_TIM_BREAK_INSTANCE(TIMx))
 80060a0:	4d08      	ldr	r5, [pc, #32]	; (80060c4 <TIM_OC4_SetConfig+0x48>)
 80060a2:	42a8      	cmp	r0, r5
 80060a4:	d003      	beq.n	80060ae <TIM_OC4_SetConfig+0x32>
 80060a6:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 80060aa:	42a8      	cmp	r0, r5
 80060ac:	d104      	bne.n	80060b8 <TIM_OC4_SetConfig+0x3c>

    /* Reset the Output Compare IDLE State */
    tmpcr2 &= ~TIM_CR2_OIS4;

    /* Set the Output Idle state */
    tmpcr2 |= (OC_Config->OCIdleState << 6U);
 80060ae:	694d      	ldr	r5, [r1, #20]
    tmpcr2 &= ~TIM_CR2_OIS4;
 80060b0:	f424 4480 	bic.w	r4, r4, #16384	; 0x4000
    tmpcr2 |= (OC_Config->OCIdleState << 6U);
 80060b4:	ea44 1485 	orr.w	r4, r4, r5, lsl #6
  }

  /* Write to TIMx CR2 */
  TIMx->CR2 = tmpcr2;
 80060b8:	6044      	str	r4, [r0, #4]

  /* Write to TIMx CCMR2 */
  TIMx->CCMR2 = tmpccmrx;
 80060ba:	61c2      	str	r2, [r0, #28]

  /* Set the Capture Compare Register value */
  TIMx->CCR4 = OC_Config->Pulse;
 80060bc:	684a      	ldr	r2, [r1, #4]
 80060be:	6402      	str	r2, [r0, #64]	; 0x40

  /* Write to TIMx CCER */
  TIMx->CCER = tmpccer;
 80060c0:	6203      	str	r3, [r0, #32]
}
 80060c2:	bd30      	pop	{r4, r5, pc}
 80060c4:	40010000 	.word	0x40010000

080060c8 <HAL_TIM_Base_Start_IT>:
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
 80060c8:	6803      	ldr	r3, [r0, #0]
 80060ca:	68da      	ldr	r2, [r3, #12]
 80060cc:	f042 0201 	orr.w	r2, r2, #1
 80060d0:	60da      	str	r2, [r3, #12]
  tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
 80060d2:	689a      	ldr	r2, [r3, #8]
 80060d4:	f002 0207 	and.w	r2, r2, #7
  if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 80060d8:	2a06      	cmp	r2, #6
    __HAL_TIM_ENABLE(htim);
 80060da:	bf1e      	ittt	ne
 80060dc:	681a      	ldrne	r2, [r3, #0]
 80060de:	f042 0201 	orrne.w	r2, r2, #1
 80060e2:	601a      	strne	r2, [r3, #0]
}
 80060e4:	2000      	movs	r0, #0
 80060e6:	4770      	bx	lr

080060e8 <HAL_TIM_PWM_MspInit>:
 80060e8:	4770      	bx	lr

080060ea <HAL_TIM_OC_DelayElapsedCallback>:
 80060ea:	4770      	bx	lr

080060ec <HAL_TIM_IC_CaptureCallback>:
 80060ec:	4770      	bx	lr

080060ee <HAL_TIM_PWM_PulseFinishedCallback>:
 80060ee:	4770      	bx	lr

080060f0 <TIM_DMADelayPulseCplt>:
{
 80060f0:	b510      	push	{r4, lr}
  TIM_HandleTypeDef *htim = (TIM_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 80060f2:	6b84      	ldr	r4, [r0, #56]	; 0x38
  if (hdma == htim->hdma[TIM_DMA_ID_CC1])
 80060f4:	6a62      	ldr	r2, [r4, #36]	; 0x24
  htim->State = HAL_TIM_STATE_READY;
 80060f6:	2301      	movs	r3, #1
  if (hdma == htim->hdma[TIM_DMA_ID_CC1])
 80060f8:	4282      	cmp	r2, r0
  htim->State = HAL_TIM_STATE_READY;
 80060fa:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  if (hdma == htim->hdma[TIM_DMA_ID_CC1])
 80060fe:	d106      	bne.n	800610e <TIM_DMADelayPulseCplt+0x1e>
    htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
 8006100:	7723      	strb	r3, [r4, #28]
  HAL_TIM_PWM_PulseFinishedCallback(htim);
 8006102:	4620      	mov	r0, r4
 8006104:	f7ff fff3 	bl	80060ee <HAL_TIM_PWM_PulseFinishedCallback>
  htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 8006108:	2300      	movs	r3, #0
 800610a:	7723      	strb	r3, [r4, #28]
}
 800610c:	bd10      	pop	{r4, pc}
  else if (hdma == htim->hdma[TIM_DMA_ID_CC2])
 800610e:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 8006110:	4283      	cmp	r3, r0
 8006112:	d101      	bne.n	8006118 <TIM_DMADelayPulseCplt+0x28>
    htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
 8006114:	2302      	movs	r3, #2
 8006116:	e7f3      	b.n	8006100 <TIM_DMADelayPulseCplt+0x10>
  else if (hdma == htim->hdma[TIM_DMA_ID_CC3])
 8006118:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800611a:	4283      	cmp	r3, r0
 800611c:	d101      	bne.n	8006122 <TIM_DMADelayPulseCplt+0x32>
    htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
 800611e:	2304      	movs	r3, #4
 8006120:	e7ee      	b.n	8006100 <TIM_DMADelayPulseCplt+0x10>
  else if (hdma == htim->hdma[TIM_DMA_ID_CC4])
 8006122:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8006124:	4283      	cmp	r3, r0
 8006126:	d1ec      	bne.n	8006102 <TIM_DMADelayPulseCplt+0x12>
    htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
 8006128:	2308      	movs	r3, #8
 800612a:	e7e9      	b.n	8006100 <TIM_DMADelayPulseCplt+0x10>

0800612c <HAL_TIM_PWM_PulseFinishedHalfCpltCallback>:
 800612c:	4770      	bx	lr

0800612e <TIM_DMADelayPulseHalfCplt>:
{
 800612e:	b510      	push	{r4, lr}
  TIM_HandleTypeDef *htim = (TIM_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 8006130:	6b84      	ldr	r4, [r0, #56]	; 0x38
  if (hdma == htim->hdma[TIM_DMA_ID_CC1])
 8006132:	6a62      	ldr	r2, [r4, #36]	; 0x24
  htim->State = HAL_TIM_STATE_READY;
 8006134:	2301      	movs	r3, #1
  if (hdma == htim->hdma[TIM_DMA_ID_CC1])
 8006136:	4282      	cmp	r2, r0
  htim->State = HAL_TIM_STATE_READY;
 8006138:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  if (hdma == htim->hdma[TIM_DMA_ID_CC1])
 800613c:	d106      	bne.n	800614c <TIM_DMADelayPulseHalfCplt+0x1e>
    htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
 800613e:	7723      	strb	r3, [r4, #28]
  HAL_TIM_PWM_PulseFinishedHalfCpltCallback(htim);
 8006140:	4620      	mov	r0, r4
 8006142:	f7ff fff3 	bl	800612c <HAL_TIM_PWM_PulseFinishedHalfCpltCallback>
  htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 8006146:	2300      	movs	r3, #0
 8006148:	7723      	strb	r3, [r4, #28]
}
 800614a:	bd10      	pop	{r4, pc}
  else if (hdma == htim->hdma[TIM_DMA_ID_CC2])
 800614c:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 800614e:	4283      	cmp	r3, r0
 8006150:	d101      	bne.n	8006156 <TIM_DMADelayPulseHalfCplt+0x28>
    htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
 8006152:	2302      	movs	r3, #2
 8006154:	e7f3      	b.n	800613e <TIM_DMADelayPulseHalfCplt+0x10>
  else if (hdma == htim->hdma[TIM_DMA_ID_CC3])
 8006156:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8006158:	4283      	cmp	r3, r0
 800615a:	d101      	bne.n	8006160 <TIM_DMADelayPulseHalfCplt+0x32>
    htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
 800615c:	2304      	movs	r3, #4
 800615e:	e7ee      	b.n	800613e <TIM_DMADelayPulseHalfCplt+0x10>
  else if (hdma == htim->hdma[TIM_DMA_ID_CC4])
 8006160:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8006162:	4283      	cmp	r3, r0
 8006164:	d1ec      	bne.n	8006140 <TIM_DMADelayPulseHalfCplt+0x12>
    htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
 8006166:	2308      	movs	r3, #8
 8006168:	e7e9      	b.n	800613e <TIM_DMADelayPulseHalfCplt+0x10>

0800616a <HAL_TIM_TriggerCallback>:
 800616a:	4770      	bx	lr

0800616c <HAL_TIM_IRQHandler>:
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
 800616c:	6803      	ldr	r3, [r0, #0]
 800616e:	691a      	ldr	r2, [r3, #16]
 8006170:	0791      	lsls	r1, r2, #30
{
 8006172:	b510      	push	{r4, lr}
 8006174:	4604      	mov	r4, r0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
 8006176:	d50e      	bpl.n	8006196 <HAL_TIM_IRQHandler+0x2a>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC1) != RESET)
 8006178:	68da      	ldr	r2, [r3, #12]
 800617a:	0792      	lsls	r2, r2, #30
 800617c:	d50b      	bpl.n	8006196 <HAL_TIM_IRQHandler+0x2a>
        __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC1);
 800617e:	f06f 0202 	mvn.w	r2, #2
 8006182:	611a      	str	r2, [r3, #16]
        if ((htim->Instance->CCMR1 & TIM_CCMR1_CC1S) != 0x00U)
 8006184:	699b      	ldr	r3, [r3, #24]
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
 8006186:	2201      	movs	r2, #1
        if ((htim->Instance->CCMR1 & TIM_CCMR1_CC1S) != 0x00U)
 8006188:	079b      	lsls	r3, r3, #30
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
 800618a:	7702      	strb	r2, [r0, #28]
        if ((htim->Instance->CCMR1 & TIM_CCMR1_CC1S) != 0x00U)
 800618c:	d077      	beq.n	800627e <HAL_TIM_IRQHandler+0x112>
          HAL_TIM_IC_CaptureCallback(htim);
 800618e:	f7ff ffad 	bl	80060ec <HAL_TIM_IC_CaptureCallback>
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 8006192:	2300      	movs	r3, #0
 8006194:	7723      	strb	r3, [r4, #28]
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC2) != RESET)
 8006196:	6823      	ldr	r3, [r4, #0]
 8006198:	691a      	ldr	r2, [r3, #16]
 800619a:	0750      	lsls	r0, r2, #29
 800619c:	d510      	bpl.n	80061c0 <HAL_TIM_IRQHandler+0x54>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC2) != RESET)
 800619e:	68da      	ldr	r2, [r3, #12]
 80061a0:	0751      	lsls	r1, r2, #29
 80061a2:	d50d      	bpl.n	80061c0 <HAL_TIM_IRQHandler+0x54>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC2);
 80061a4:	f06f 0204 	mvn.w	r2, #4
 80061a8:	611a      	str	r2, [r3, #16]
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 80061aa:	699b      	ldr	r3, [r3, #24]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
 80061ac:	2202      	movs	r2, #2
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 80061ae:	f413 7f40 	tst.w	r3, #768	; 0x300
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
 80061b2:	7722      	strb	r2, [r4, #28]
        HAL_TIM_IC_CaptureCallback(htim);
 80061b4:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 80061b6:	d068      	beq.n	800628a <HAL_TIM_IRQHandler+0x11e>
        HAL_TIM_IC_CaptureCallback(htim);
 80061b8:	f7ff ff98 	bl	80060ec <HAL_TIM_IC_CaptureCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 80061bc:	2300      	movs	r3, #0
 80061be:	7723      	strb	r3, [r4, #28]
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC3) != RESET)
 80061c0:	6823      	ldr	r3, [r4, #0]
 80061c2:	691a      	ldr	r2, [r3, #16]
 80061c4:	0712      	lsls	r2, r2, #28
 80061c6:	d50f      	bpl.n	80061e8 <HAL_TIM_IRQHandler+0x7c>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC3) != RESET)
 80061c8:	68da      	ldr	r2, [r3, #12]
 80061ca:	0710      	lsls	r0, r2, #28
 80061cc:	d50c      	bpl.n	80061e8 <HAL_TIM_IRQHandler+0x7c>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC3);
 80061ce:	f06f 0208 	mvn.w	r2, #8
 80061d2:	611a      	str	r2, [r3, #16]
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 80061d4:	69db      	ldr	r3, [r3, #28]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
 80061d6:	2204      	movs	r2, #4
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 80061d8:	0799      	lsls	r1, r3, #30
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
 80061da:	7722      	strb	r2, [r4, #28]
        HAL_TIM_IC_CaptureCallback(htim);
 80061dc:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 80061de:	d05a      	beq.n	8006296 <HAL_TIM_IRQHandler+0x12a>
        HAL_TIM_IC_CaptureCallback(htim);
 80061e0:	f7ff ff84 	bl	80060ec <HAL_TIM_IC_CaptureCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 80061e4:	2300      	movs	r3, #0
 80061e6:	7723      	strb	r3, [r4, #28]
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC4) != RESET)
 80061e8:	6823      	ldr	r3, [r4, #0]
 80061ea:	691a      	ldr	r2, [r3, #16]
 80061ec:	06d2      	lsls	r2, r2, #27
 80061ee:	d510      	bpl.n	8006212 <HAL_TIM_IRQHandler+0xa6>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC4) != RESET)
 80061f0:	68da      	ldr	r2, [r3, #12]
 80061f2:	06d0      	lsls	r0, r2, #27
 80061f4:	d50d      	bpl.n	8006212 <HAL_TIM_IRQHandler+0xa6>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC4);
 80061f6:	f06f 0210 	mvn.w	r2, #16
 80061fa:	611a      	str	r2, [r3, #16]
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 80061fc:	69db      	ldr	r3, [r3, #28]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
 80061fe:	2208      	movs	r2, #8
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 8006200:	f413 7f40 	tst.w	r3, #768	; 0x300
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
 8006204:	7722      	strb	r2, [r4, #28]
        HAL_TIM_IC_CaptureCallback(htim);
 8006206:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 8006208:	d04b      	beq.n	80062a2 <HAL_TIM_IRQHandler+0x136>
        HAL_TIM_IC_CaptureCallback(htim);
 800620a:	f7ff ff6f 	bl	80060ec <HAL_TIM_IC_CaptureCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800620e:	2300      	movs	r3, #0
 8006210:	7723      	strb	r3, [r4, #28]
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_UPDATE) != RESET)
 8006212:	6823      	ldr	r3, [r4, #0]
 8006214:	691a      	ldr	r2, [r3, #16]
 8006216:	07d1      	lsls	r1, r2, #31
 8006218:	d508      	bpl.n	800622c <HAL_TIM_IRQHandler+0xc0>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_UPDATE) != RESET)
 800621a:	68da      	ldr	r2, [r3, #12]
 800621c:	07d2      	lsls	r2, r2, #31
 800621e:	d505      	bpl.n	800622c <HAL_TIM_IRQHandler+0xc0>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_UPDATE);
 8006220:	f06f 0201 	mvn.w	r2, #1
 8006224:	611a      	str	r2, [r3, #16]
      HAL_TIM_PeriodElapsedCallback(htim);
 8006226:	4620      	mov	r0, r4
 8006228:	f7fb ffaa 	bl	8002180 <HAL_TIM_PeriodElapsedCallback>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_BREAK) != RESET)
 800622c:	6823      	ldr	r3, [r4, #0]
 800622e:	691a      	ldr	r2, [r3, #16]
 8006230:	0610      	lsls	r0, r2, #24
 8006232:	d508      	bpl.n	8006246 <HAL_TIM_IRQHandler+0xda>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_BREAK) != RESET)
 8006234:	68da      	ldr	r2, [r3, #12]
 8006236:	0611      	lsls	r1, r2, #24
 8006238:	d505      	bpl.n	8006246 <HAL_TIM_IRQHandler+0xda>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_BREAK);
 800623a:	f06f 0280 	mvn.w	r2, #128	; 0x80
 800623e:	611a      	str	r2, [r3, #16]
      HAL_TIMEx_BreakCallback(htim);
 8006240:	4620      	mov	r0, r4
 8006242:	f000 faea 	bl	800681a <HAL_TIMEx_BreakCallback>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_TRIGGER) != RESET)
 8006246:	6823      	ldr	r3, [r4, #0]
 8006248:	691a      	ldr	r2, [r3, #16]
 800624a:	0652      	lsls	r2, r2, #25
 800624c:	d508      	bpl.n	8006260 <HAL_TIM_IRQHandler+0xf4>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_TRIGGER) != RESET)
 800624e:	68da      	ldr	r2, [r3, #12]
 8006250:	0650      	lsls	r0, r2, #25
 8006252:	d505      	bpl.n	8006260 <HAL_TIM_IRQHandler+0xf4>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_TRIGGER);
 8006254:	f06f 0240 	mvn.w	r2, #64	; 0x40
 8006258:	611a      	str	r2, [r3, #16]
      HAL_TIM_TriggerCallback(htim);
 800625a:	4620      	mov	r0, r4
 800625c:	f7ff ff85 	bl	800616a <HAL_TIM_TriggerCallback>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_COM) != RESET)
 8006260:	6823      	ldr	r3, [r4, #0]
 8006262:	691a      	ldr	r2, [r3, #16]
 8006264:	0691      	lsls	r1, r2, #26
 8006266:	d522      	bpl.n	80062ae <HAL_TIM_IRQHandler+0x142>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_COM) != RESET)
 8006268:	68da      	ldr	r2, [r3, #12]
 800626a:	0692      	lsls	r2, r2, #26
 800626c:	d51f      	bpl.n	80062ae <HAL_TIM_IRQHandler+0x142>
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
 800626e:	f06f 0220 	mvn.w	r2, #32
      HAL_TIMEx_CommutCallback(htim);
 8006272:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
 8006274:	611a      	str	r2, [r3, #16]
}
 8006276:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
      HAL_TIMEx_CommutCallback(htim);
 800627a:	f000 bacd 	b.w	8006818 <HAL_TIMEx_CommutCallback>
          HAL_TIM_OC_DelayElapsedCallback(htim);
 800627e:	f7ff ff34 	bl	80060ea <HAL_TIM_OC_DelayElapsedCallback>
          HAL_TIM_PWM_PulseFinishedCallback(htim);
 8006282:	4620      	mov	r0, r4
 8006284:	f7ff ff33 	bl	80060ee <HAL_TIM_PWM_PulseFinishedCallback>
 8006288:	e783      	b.n	8006192 <HAL_TIM_IRQHandler+0x26>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 800628a:	f7ff ff2e 	bl	80060ea <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 800628e:	4620      	mov	r0, r4
 8006290:	f7ff ff2d 	bl	80060ee <HAL_TIM_PWM_PulseFinishedCallback>
 8006294:	e792      	b.n	80061bc <HAL_TIM_IRQHandler+0x50>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 8006296:	f7ff ff28 	bl	80060ea <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 800629a:	4620      	mov	r0, r4
 800629c:	f7ff ff27 	bl	80060ee <HAL_TIM_PWM_PulseFinishedCallback>
 80062a0:	e7a0      	b.n	80061e4 <HAL_TIM_IRQHandler+0x78>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 80062a2:	f7ff ff22 	bl	80060ea <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 80062a6:	4620      	mov	r0, r4
 80062a8:	f7ff ff21 	bl	80060ee <HAL_TIM_PWM_PulseFinishedCallback>
 80062ac:	e7af      	b.n	800620e <HAL_TIM_IRQHandler+0xa2>
}
 80062ae:	bd10      	pop	{r4, pc}

080062b0 <HAL_TIM_ErrorCallback>:
 80062b0:	4770      	bx	lr

080062b2 <TIM_DMAError>:
{
 80062b2:	b508      	push	{r3, lr}
  TIM_HandleTypeDef *htim = (TIM_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 80062b4:	6b80      	ldr	r0, [r0, #56]	; 0x38
  htim->State = HAL_TIM_STATE_READY;
 80062b6:	2301      	movs	r3, #1
 80062b8:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d
  HAL_TIM_ErrorCallback(htim);
 80062bc:	f7ff fff8 	bl	80062b0 <HAL_TIM_ErrorCallback>
}
 80062c0:	bd08      	pop	{r3, pc}
	...

080062c4 <TIM_Base_SetConfig>:
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 80062c4:	4a30      	ldr	r2, [pc, #192]	; (8006388 <TIM_Base_SetConfig+0xc4>)
  tmpcr1 = TIMx->CR1;
 80062c6:	6803      	ldr	r3, [r0, #0]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 80062c8:	4290      	cmp	r0, r2
 80062ca:	d012      	beq.n	80062f2 <TIM_Base_SetConfig+0x2e>
 80062cc:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
 80062d0:	d00f      	beq.n	80062f2 <TIM_Base_SetConfig+0x2e>
 80062d2:	f5a2 427c 	sub.w	r2, r2, #64512	; 0xfc00
 80062d6:	4290      	cmp	r0, r2
 80062d8:	d00b      	beq.n	80062f2 <TIM_Base_SetConfig+0x2e>
 80062da:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 80062de:	4290      	cmp	r0, r2
 80062e0:	d007      	beq.n	80062f2 <TIM_Base_SetConfig+0x2e>
 80062e2:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 80062e6:	4290      	cmp	r0, r2
 80062e8:	d003      	beq.n	80062f2 <TIM_Base_SetConfig+0x2e>
 80062ea:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
 80062ee:	4290      	cmp	r0, r2
 80062f0:	d119      	bne.n	8006326 <TIM_Base_SetConfig+0x62>
    tmpcr1 |= Structure->CounterMode;
 80062f2:	684a      	ldr	r2, [r1, #4]
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 80062f4:	f023 0370 	bic.w	r3, r3, #112	; 0x70
    tmpcr1 |= Structure->CounterMode;
 80062f8:	4313      	orrs	r3, r2
  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
 80062fa:	4a23      	ldr	r2, [pc, #140]	; (8006388 <TIM_Base_SetConfig+0xc4>)
 80062fc:	4290      	cmp	r0, r2
 80062fe:	d029      	beq.n	8006354 <TIM_Base_SetConfig+0x90>
 8006300:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
 8006304:	d026      	beq.n	8006354 <TIM_Base_SetConfig+0x90>
 8006306:	f5a2 427c 	sub.w	r2, r2, #64512	; 0xfc00
 800630a:	4290      	cmp	r0, r2
 800630c:	d022      	beq.n	8006354 <TIM_Base_SetConfig+0x90>
 800630e:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8006312:	4290      	cmp	r0, r2
 8006314:	d01e      	beq.n	8006354 <TIM_Base_SetConfig+0x90>
 8006316:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800631a:	4290      	cmp	r0, r2
 800631c:	d01a      	beq.n	8006354 <TIM_Base_SetConfig+0x90>
 800631e:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
 8006322:	4290      	cmp	r0, r2
 8006324:	d016      	beq.n	8006354 <TIM_Base_SetConfig+0x90>
 8006326:	4a19      	ldr	r2, [pc, #100]	; (800638c <TIM_Base_SetConfig+0xc8>)
 8006328:	4290      	cmp	r0, r2
 800632a:	d013      	beq.n	8006354 <TIM_Base_SetConfig+0x90>
 800632c:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8006330:	4290      	cmp	r0, r2
 8006332:	d00f      	beq.n	8006354 <TIM_Base_SetConfig+0x90>
 8006334:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8006338:	4290      	cmp	r0, r2
 800633a:	d00b      	beq.n	8006354 <TIM_Base_SetConfig+0x90>
 800633c:	f5a2 3298 	sub.w	r2, r2, #77824	; 0x13000
 8006340:	4290      	cmp	r0, r2
 8006342:	d007      	beq.n	8006354 <TIM_Base_SetConfig+0x90>
 8006344:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8006348:	4290      	cmp	r0, r2
 800634a:	d003      	beq.n	8006354 <TIM_Base_SetConfig+0x90>
 800634c:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8006350:	4290      	cmp	r0, r2
 8006352:	d103      	bne.n	800635c <TIM_Base_SetConfig+0x98>
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 8006354:	68ca      	ldr	r2, [r1, #12]
    tmpcr1 &= ~TIM_CR1_CKD;
 8006356:	f423 7340 	bic.w	r3, r3, #768	; 0x300
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800635a:	4313      	orrs	r3, r2
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800635c:	694a      	ldr	r2, [r1, #20]
 800635e:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8006362:	4313      	orrs	r3, r2
  TIMx->CR1 = tmpcr1;
 8006364:	6003      	str	r3, [r0, #0]
  TIMx->ARR = (uint32_t)Structure->Period ;
 8006366:	688b      	ldr	r3, [r1, #8]
 8006368:	62c3      	str	r3, [r0, #44]	; 0x2c
  TIMx->PSC = Structure->Prescaler;
 800636a:	680b      	ldr	r3, [r1, #0]
 800636c:	6283      	str	r3, [r0, #40]	; 0x28
  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
 800636e:	4b06      	ldr	r3, [pc, #24]	; (8006388 <TIM_Base_SetConfig+0xc4>)
 8006370:	4298      	cmp	r0, r3
 8006372:	d003      	beq.n	800637c <TIM_Base_SetConfig+0xb8>
 8006374:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8006378:	4298      	cmp	r0, r3
 800637a:	d101      	bne.n	8006380 <TIM_Base_SetConfig+0xbc>
    TIMx->RCR = Structure->RepetitionCounter;
 800637c:	690b      	ldr	r3, [r1, #16]
 800637e:	6303      	str	r3, [r0, #48]	; 0x30
  TIMx->EGR = TIM_EGR_UG;
 8006380:	2301      	movs	r3, #1
 8006382:	6143      	str	r3, [r0, #20]
}
 8006384:	4770      	bx	lr
 8006386:	bf00      	nop
 8006388:	40010000 	.word	0x40010000
 800638c:	40014000 	.word	0x40014000

08006390 <HAL_TIM_Base_Init>:
{
 8006390:	b510      	push	{r4, lr}
  if (htim == NULL)
 8006392:	4604      	mov	r4, r0
 8006394:	b1a0      	cbz	r0, 80063c0 <HAL_TIM_Base_Init+0x30>
  if (htim->State == HAL_TIM_STATE_RESET)
 8006396:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 800639a:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800639e:	b91b      	cbnz	r3, 80063a8 <HAL_TIM_Base_Init+0x18>
    htim->Lock = HAL_UNLOCKED;
 80063a0:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    HAL_TIM_Base_MspInit(htim);
 80063a4:	f7fc f92c 	bl	8002600 <HAL_TIM_Base_MspInit>
  htim->State = HAL_TIM_STATE_BUSY;
 80063a8:	2302      	movs	r3, #2
 80063aa:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 80063ae:	6820      	ldr	r0, [r4, #0]
 80063b0:	1d21      	adds	r1, r4, #4
 80063b2:	f7ff ff87 	bl	80062c4 <TIM_Base_SetConfig>
  htim->State = HAL_TIM_STATE_READY;
 80063b6:	2301      	movs	r3, #1
 80063b8:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  return HAL_OK;
 80063bc:	2000      	movs	r0, #0
}
 80063be:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 80063c0:	2001      	movs	r0, #1
 80063c2:	e7fc      	b.n	80063be <HAL_TIM_Base_Init+0x2e>

080063c4 <HAL_TIM_PWM_Init>:
{
 80063c4:	b510      	push	{r4, lr}
  if (htim == NULL)
 80063c6:	4604      	mov	r4, r0
 80063c8:	b1a0      	cbz	r0, 80063f4 <HAL_TIM_PWM_Init+0x30>
  if (htim->State == HAL_TIM_STATE_RESET)
 80063ca:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 80063ce:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 80063d2:	b91b      	cbnz	r3, 80063dc <HAL_TIM_PWM_Init+0x18>
    htim->Lock = HAL_UNLOCKED;
 80063d4:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    HAL_TIM_PWM_MspInit(htim);
 80063d8:	f7ff fe86 	bl	80060e8 <HAL_TIM_PWM_MspInit>
  htim->State = HAL_TIM_STATE_BUSY;
 80063dc:	2302      	movs	r3, #2
 80063de:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 80063e2:	6820      	ldr	r0, [r4, #0]
 80063e4:	1d21      	adds	r1, r4, #4
 80063e6:	f7ff ff6d 	bl	80062c4 <TIM_Base_SetConfig>
  htim->State = HAL_TIM_STATE_READY;
 80063ea:	2301      	movs	r3, #1
 80063ec:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  return HAL_OK;
 80063f0:	2000      	movs	r0, #0
}
 80063f2:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 80063f4:	2001      	movs	r0, #1
 80063f6:	e7fc      	b.n	80063f2 <HAL_TIM_PWM_Init+0x2e>

080063f8 <TIM_OC2_SetConfig>:
  TIMx->CCER &= ~TIM_CCER_CC2E;
 80063f8:	6a03      	ldr	r3, [r0, #32]
 80063fa:	f023 0310 	bic.w	r3, r3, #16
 80063fe:	6203      	str	r3, [r0, #32]
  tmpccer = TIMx->CCER;
 8006400:	6a03      	ldr	r3, [r0, #32]
{
 8006402:	b570      	push	{r4, r5, r6, lr}
  tmpcr2 =  TIMx->CR2;
 8006404:	6844      	ldr	r4, [r0, #4]
  tmpccmrx = TIMx->CCMR1;
 8006406:	6982      	ldr	r2, [r0, #24]
  tmpccmrx |= (OC_Config->OCMode << 8U);
 8006408:	680d      	ldr	r5, [r1, #0]
  tmpccmrx &= ~TIM_CCMR1_CC2S;
 800640a:	f422 42e6 	bic.w	r2, r2, #29440	; 0x7300
  tmpccmrx |= (OC_Config->OCMode << 8U);
 800640e:	ea42 2205 	orr.w	r2, r2, r5, lsl #8
  tmpccer |= (OC_Config->OCPolarity << 4U);
 8006412:	688d      	ldr	r5, [r1, #8]
  tmpccer &= ~TIM_CCER_CC2P;
 8006414:	f023 0320 	bic.w	r3, r3, #32
  tmpccer |= (OC_Config->OCPolarity << 4U);
 8006418:	ea43 1305 	orr.w	r3, r3, r5, lsl #4
  if (IS_TIM_CCXN_INSTANCE(TIMx, TIM_CHANNEL_2))
 800641c:	4d10      	ldr	r5, [pc, #64]	; (8006460 <TIM_OC2_SetConfig+0x68>)
 800641e:	42a8      	cmp	r0, r5
 8006420:	d003      	beq.n	800642a <TIM_OC2_SetConfig+0x32>
 8006422:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 8006426:	42a8      	cmp	r0, r5
 8006428:	d114      	bne.n	8006454 <TIM_OC2_SetConfig+0x5c>
    tmpccer |= (OC_Config->OCNPolarity << 4U);
 800642a:	68cd      	ldr	r5, [r1, #12]
    tmpccer &= ~TIM_CCER_CC2NP;
 800642c:	f023 0380 	bic.w	r3, r3, #128	; 0x80
    tmpccer |= (OC_Config->OCNPolarity << 4U);
 8006430:	ea43 1305 	orr.w	r3, r3, r5, lsl #4
  if (IS_TIM_BREAK_INSTANCE(TIMx))
 8006434:	4d0a      	ldr	r5, [pc, #40]	; (8006460 <TIM_OC2_SetConfig+0x68>)
 8006436:	42a8      	cmp	r0, r5
    tmpccer &= ~TIM_CCER_CC2NE;
 8006438:	f023 0340 	bic.w	r3, r3, #64	; 0x40
  if (IS_TIM_BREAK_INSTANCE(TIMx))
 800643c:	d003      	beq.n	8006446 <TIM_OC2_SetConfig+0x4e>
 800643e:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 8006442:	42a8      	cmp	r0, r5
 8006444:	d106      	bne.n	8006454 <TIM_OC2_SetConfig+0x5c>
    tmpcr2 |= (OC_Config->OCNIdleState << 2U);
 8006446:	e9d1 5605 	ldrd	r5, r6, [r1, #20]
    tmpcr2 &= ~TIM_CR2_OIS2N;
 800644a:	f424 6440 	bic.w	r4, r4, #3072	; 0xc00
    tmpcr2 |= (OC_Config->OCNIdleState << 2U);
 800644e:	4335      	orrs	r5, r6
 8006450:	ea44 0485 	orr.w	r4, r4, r5, lsl #2
  TIMx->CR2 = tmpcr2;
 8006454:	6044      	str	r4, [r0, #4]
  TIMx->CCMR1 = tmpccmrx;
 8006456:	6182      	str	r2, [r0, #24]
  TIMx->CCR2 = OC_Config->Pulse;
 8006458:	684a      	ldr	r2, [r1, #4]
 800645a:	6382      	str	r2, [r0, #56]	; 0x38
  TIMx->CCER = tmpccer;
 800645c:	6203      	str	r3, [r0, #32]
}
 800645e:	bd70      	pop	{r4, r5, r6, pc}
 8006460:	40010000 	.word	0x40010000

08006464 <HAL_TIM_PWM_ConfigChannel>:
{
 8006464:	b538      	push	{r3, r4, r5, lr}
  __HAL_LOCK(htim);
 8006466:	f890 303c 	ldrb.w	r3, [r0, #60]	; 0x3c
 800646a:	2b01      	cmp	r3, #1
{
 800646c:	4604      	mov	r4, r0
 800646e:	f04f 0002 	mov.w	r0, #2
  __HAL_LOCK(htim);
 8006472:	d025      	beq.n	80064c0 <HAL_TIM_PWM_ConfigChannel+0x5c>
 8006474:	2301      	movs	r3, #1
 8006476:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
  htim->State = HAL_TIM_STATE_BUSY;
 800647a:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
  switch (Channel)
 800647e:	2a0c      	cmp	r2, #12
 8006480:	d818      	bhi.n	80064b4 <HAL_TIM_PWM_ConfigChannel+0x50>
 8006482:	e8df f002 	tbb	[pc, r2]
 8006486:	1707      	.short	0x1707
 8006488:	171e1717 	.word	0x171e1717
 800648c:	172f1717 	.word	0x172f1717
 8006490:	1717      	.short	0x1717
 8006492:	40          	.byte	0x40
 8006493:	00          	.byte	0x00
      TIM_OC1_SetConfig(htim->Instance, sConfig);
 8006494:	6820      	ldr	r0, [r4, #0]
 8006496:	f7ff fd89 	bl	8005fac <TIM_OC1_SetConfig>
      htim->Instance->CCMR1 |= TIM_CCMR1_OC1PE;
 800649a:	6823      	ldr	r3, [r4, #0]
      htim->Instance->CCMR1 |= sConfig->OCFastMode;
 800649c:	6909      	ldr	r1, [r1, #16]
      htim->Instance->CCMR1 |= TIM_CCMR1_OC1PE;
 800649e:	699a      	ldr	r2, [r3, #24]
 80064a0:	f042 0208 	orr.w	r2, r2, #8
 80064a4:	619a      	str	r2, [r3, #24]
      htim->Instance->CCMR1 &= ~TIM_CCMR1_OC1FE;
 80064a6:	699a      	ldr	r2, [r3, #24]
 80064a8:	f022 0204 	bic.w	r2, r2, #4
 80064ac:	619a      	str	r2, [r3, #24]
      htim->Instance->CCMR1 |= sConfig->OCFastMode;
 80064ae:	699a      	ldr	r2, [r3, #24]
 80064b0:	430a      	orrs	r2, r1
      htim->Instance->CCMR1 |= sConfig->OCFastMode << 8U;
 80064b2:	619a      	str	r2, [r3, #24]
  htim->State = HAL_TIM_STATE_READY;
 80064b4:	2301      	movs	r3, #1
  __HAL_UNLOCK(htim);
 80064b6:	2000      	movs	r0, #0
  htim->State = HAL_TIM_STATE_READY;
 80064b8:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  __HAL_UNLOCK(htim);
 80064bc:	f884 003c 	strb.w	r0, [r4, #60]	; 0x3c
}
 80064c0:	bd38      	pop	{r3, r4, r5, pc}
      TIM_OC2_SetConfig(htim->Instance, sConfig);
 80064c2:	6820      	ldr	r0, [r4, #0]
 80064c4:	f7ff ff98 	bl	80063f8 <TIM_OC2_SetConfig>
      htim->Instance->CCMR1 |= TIM_CCMR1_OC2PE;
 80064c8:	6823      	ldr	r3, [r4, #0]
      htim->Instance->CCMR1 |= sConfig->OCFastMode << 8U;
 80064ca:	6909      	ldr	r1, [r1, #16]
      htim->Instance->CCMR1 |= TIM_CCMR1_OC2PE;
 80064cc:	699a      	ldr	r2, [r3, #24]
 80064ce:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 80064d2:	619a      	str	r2, [r3, #24]
      htim->Instance->CCMR1 &= ~TIM_CCMR1_OC2FE;
 80064d4:	699a      	ldr	r2, [r3, #24]
 80064d6:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 80064da:	619a      	str	r2, [r3, #24]
      htim->Instance->CCMR1 |= sConfig->OCFastMode << 8U;
 80064dc:	699a      	ldr	r2, [r3, #24]
 80064de:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 80064e2:	e7e6      	b.n	80064b2 <HAL_TIM_PWM_ConfigChannel+0x4e>
      TIM_OC3_SetConfig(htim->Instance, sConfig);
 80064e4:	6820      	ldr	r0, [r4, #0]
 80064e6:	f7ff fd93 	bl	8006010 <TIM_OC3_SetConfig>
      htim->Instance->CCMR2 |= TIM_CCMR2_OC3PE;
 80064ea:	6823      	ldr	r3, [r4, #0]
      htim->Instance->CCMR2 |= sConfig->OCFastMode;
 80064ec:	6909      	ldr	r1, [r1, #16]
      htim->Instance->CCMR2 |= TIM_CCMR2_OC3PE;
 80064ee:	69da      	ldr	r2, [r3, #28]
 80064f0:	f042 0208 	orr.w	r2, r2, #8
 80064f4:	61da      	str	r2, [r3, #28]
      htim->Instance->CCMR2 &= ~TIM_CCMR2_OC3FE;
 80064f6:	69da      	ldr	r2, [r3, #28]
 80064f8:	f022 0204 	bic.w	r2, r2, #4
 80064fc:	61da      	str	r2, [r3, #28]
      htim->Instance->CCMR2 |= sConfig->OCFastMode;
 80064fe:	69da      	ldr	r2, [r3, #28]
 8006500:	430a      	orrs	r2, r1
      htim->Instance->CCMR2 |= sConfig->OCFastMode << 8U;
 8006502:	61da      	str	r2, [r3, #28]
      break;
 8006504:	e7d6      	b.n	80064b4 <HAL_TIM_PWM_ConfigChannel+0x50>
      TIM_OC4_SetConfig(htim->Instance, sConfig);
 8006506:	6820      	ldr	r0, [r4, #0]
 8006508:	f7ff fdb8 	bl	800607c <TIM_OC4_SetConfig>
      htim->Instance->CCMR2 |= TIM_CCMR2_OC4PE;
 800650c:	6823      	ldr	r3, [r4, #0]
      htim->Instance->CCMR2 |= sConfig->OCFastMode << 8U;
 800650e:	6909      	ldr	r1, [r1, #16]
      htim->Instance->CCMR2 |= TIM_CCMR2_OC4PE;
 8006510:	69da      	ldr	r2, [r3, #28]
 8006512:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 8006516:	61da      	str	r2, [r3, #28]
      htim->Instance->CCMR2 &= ~TIM_CCMR2_OC4FE;
 8006518:	69da      	ldr	r2, [r3, #28]
 800651a:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800651e:	61da      	str	r2, [r3, #28]
      htim->Instance->CCMR2 |= sConfig->OCFastMode << 8U;
 8006520:	69da      	ldr	r2, [r3, #28]
 8006522:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 8006526:	e7ec      	b.n	8006502 <HAL_TIM_PWM_ConfigChannel+0x9e>

08006528 <TIM_ETR_SetConfig>:
  *          This parameter must be a value between 0x00 and 0x0F
  * @retval None
  */
void TIM_ETR_SetConfig(TIM_TypeDef *TIMx, uint32_t TIM_ExtTRGPrescaler,
                       uint32_t TIM_ExtTRGPolarity, uint32_t ExtTRGFilter)
{
 8006528:	b510      	push	{r4, lr}
  uint32_t tmpsmcr;

  tmpsmcr = TIMx->SMCR;
 800652a:	6884      	ldr	r4, [r0, #8]

  /* Reset the ETR Bits */
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);

  /* Set the Prescaler, the Filter value and the Polarity */
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800652c:	430a      	orrs	r2, r1
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
 800652e:	f424 447f 	bic.w	r4, r4, #65280	; 0xff00
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 8006532:	ea42 2303 	orr.w	r3, r2, r3, lsl #8
 8006536:	4323      	orrs	r3, r4

  /* Write to TIMx SMCR */
  TIMx->SMCR = tmpsmcr;
 8006538:	6083      	str	r3, [r0, #8]
}
 800653a:	bd10      	pop	{r4, pc}

0800653c <HAL_TIM_ConfigClockSource>:
  __HAL_LOCK(htim);
 800653c:	f890 303c 	ldrb.w	r3, [r0, #60]	; 0x3c
 8006540:	2b01      	cmp	r3, #1
{
 8006542:	b570      	push	{r4, r5, r6, lr}
 8006544:	4604      	mov	r4, r0
 8006546:	f04f 0002 	mov.w	r0, #2
  __HAL_LOCK(htim);
 800654a:	d019      	beq.n	8006580 <HAL_TIM_ConfigClockSource+0x44>
  htim->State = HAL_TIM_STATE_BUSY;
 800654c:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
  tmpsmcr = htim->Instance->SMCR;
 8006550:	6820      	ldr	r0, [r4, #0]
  __HAL_LOCK(htim);
 8006552:	2301      	movs	r3, #1
 8006554:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
  tmpsmcr = htim->Instance->SMCR;
 8006558:	6883      	ldr	r3, [r0, #8]
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
 800655a:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 800655e:	f023 0377 	bic.w	r3, r3, #119	; 0x77
  htim->Instance->SMCR = tmpsmcr;
 8006562:	6083      	str	r3, [r0, #8]
  switch (sClockSourceConfig->ClockSource)
 8006564:	680b      	ldr	r3, [r1, #0]
 8006566:	2b40      	cmp	r3, #64	; 0x40
 8006568:	d065      	beq.n	8006636 <HAL_TIM_ConfigClockSource+0xfa>
 800656a:	d815      	bhi.n	8006598 <HAL_TIM_ConfigClockSource+0x5c>
 800656c:	2b10      	cmp	r3, #16
 800656e:	d00c      	beq.n	800658a <HAL_TIM_ConfigClockSource+0x4e>
 8006570:	d807      	bhi.n	8006582 <HAL_TIM_ConfigClockSource+0x46>
 8006572:	b153      	cbz	r3, 800658a <HAL_TIM_ConfigClockSource+0x4e>
  htim->State = HAL_TIM_STATE_READY;
 8006574:	2301      	movs	r3, #1
  __HAL_UNLOCK(htim);
 8006576:	2000      	movs	r0, #0
  htim->State = HAL_TIM_STATE_READY;
 8006578:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  __HAL_UNLOCK(htim);
 800657c:	f884 003c 	strb.w	r0, [r4, #60]	; 0x3c
}
 8006580:	bd70      	pop	{r4, r5, r6, pc}
  switch (sClockSourceConfig->ClockSource)
 8006582:	2b20      	cmp	r3, #32
 8006584:	d001      	beq.n	800658a <HAL_TIM_ConfigClockSource+0x4e>
 8006586:	2b30      	cmp	r3, #48	; 0x30
 8006588:	d1f4      	bne.n	8006574 <HAL_TIM_ConfigClockSource+0x38>
  tmpsmcr = TIMx->SMCR;
 800658a:	6882      	ldr	r2, [r0, #8]
  tmpsmcr |= (InputTriggerSource | TIM_SLAVEMODE_EXTERNAL1);
 800658c:	f043 0307 	orr.w	r3, r3, #7
  tmpsmcr &= ~TIM_SMCR_TS;
 8006590:	f022 0270 	bic.w	r2, r2, #112	; 0x70
  tmpsmcr |= (InputTriggerSource | TIM_SLAVEMODE_EXTERNAL1);
 8006594:	4313      	orrs	r3, r2
 8006596:	e01a      	b.n	80065ce <HAL_TIM_ConfigClockSource+0x92>
  switch (sClockSourceConfig->ClockSource)
 8006598:	2b60      	cmp	r3, #96	; 0x60
 800659a:	d034      	beq.n	8006606 <HAL_TIM_ConfigClockSource+0xca>
 800659c:	d819      	bhi.n	80065d2 <HAL_TIM_ConfigClockSource+0x96>
 800659e:	2b50      	cmp	r3, #80	; 0x50
 80065a0:	d1e8      	bne.n	8006574 <HAL_TIM_ConfigClockSource+0x38>
      TIM_TI1_ConfigInputStage(htim->Instance,
 80065a2:	684a      	ldr	r2, [r1, #4]
 80065a4:	68ce      	ldr	r6, [r1, #12]
  tmpccer = TIMx->CCER;
 80065a6:	6a01      	ldr	r1, [r0, #32]
  TIMx->CCER &= ~TIM_CCER_CC1E;
 80065a8:	6a05      	ldr	r5, [r0, #32]
 80065aa:	f025 0501 	bic.w	r5, r5, #1
 80065ae:	6205      	str	r5, [r0, #32]
  tmpccmr1 = TIMx->CCMR1;
 80065b0:	6983      	ldr	r3, [r0, #24]
  tmpccer &= ~(TIM_CCER_CC1P | TIM_CCER_CC1NP);
 80065b2:	f021 010a 	bic.w	r1, r1, #10
  tmpccmr1 &= ~TIM_CCMR1_IC1F;
 80065b6:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
  tmpccmr1 |= (TIM_ICFilter << 4U);
 80065ba:	ea43 1306 	orr.w	r3, r3, r6, lsl #4
  tmpccer |= TIM_ICPolarity;
 80065be:	430a      	orrs	r2, r1
  TIMx->CCMR1 = tmpccmr1;
 80065c0:	6183      	str	r3, [r0, #24]
  TIMx->CCER = tmpccer;
 80065c2:	6202      	str	r2, [r0, #32]
  tmpsmcr = TIMx->SMCR;
 80065c4:	6883      	ldr	r3, [r0, #8]
  tmpsmcr &= ~TIM_SMCR_TS;
 80065c6:	f023 0370 	bic.w	r3, r3, #112	; 0x70
  tmpsmcr |= (InputTriggerSource | TIM_SLAVEMODE_EXTERNAL1);
 80065ca:	f043 0357 	orr.w	r3, r3, #87	; 0x57
  TIMx->SMCR = tmpsmcr;
 80065ce:	6083      	str	r3, [r0, #8]
 80065d0:	e7d0      	b.n	8006574 <HAL_TIM_ConfigClockSource+0x38>
  switch (sClockSourceConfig->ClockSource)
 80065d2:	2b70      	cmp	r3, #112	; 0x70
 80065d4:	d00c      	beq.n	80065f0 <HAL_TIM_ConfigClockSource+0xb4>
 80065d6:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 80065da:	d1cb      	bne.n	8006574 <HAL_TIM_ConfigClockSource+0x38>
      TIM_ETR_SetConfig(htim->Instance,
 80065dc:	68cb      	ldr	r3, [r1, #12]
 80065de:	e9d1 2101 	ldrd	r2, r1, [r1, #4]
 80065e2:	f7ff ffa1 	bl	8006528 <TIM_ETR_SetConfig>
      htim->Instance->SMCR |= TIM_SMCR_ECE;
 80065e6:	6822      	ldr	r2, [r4, #0]
 80065e8:	6893      	ldr	r3, [r2, #8]
 80065ea:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 80065ee:	e008      	b.n	8006602 <HAL_TIM_ConfigClockSource+0xc6>
      TIM_ETR_SetConfig(htim->Instance,
 80065f0:	68cb      	ldr	r3, [r1, #12]
 80065f2:	e9d1 2101 	ldrd	r2, r1, [r1, #4]
 80065f6:	f7ff ff97 	bl	8006528 <TIM_ETR_SetConfig>
      tmpsmcr = htim->Instance->SMCR;
 80065fa:	6822      	ldr	r2, [r4, #0]
 80065fc:	6893      	ldr	r3, [r2, #8]
      tmpsmcr |= (TIM_SLAVEMODE_EXTERNAL1 | TIM_CLOCKSOURCE_ETRMODE1);
 80065fe:	f043 0377 	orr.w	r3, r3, #119	; 0x77
      htim->Instance->SMCR |= TIM_SMCR_ECE;
 8006602:	6093      	str	r3, [r2, #8]
      break;
 8006604:	e7b6      	b.n	8006574 <HAL_TIM_ConfigClockSource+0x38>
      TIM_TI2_ConfigInputStage(htim->Instance,
 8006606:	684d      	ldr	r5, [r1, #4]
 8006608:	68ce      	ldr	r6, [r1, #12]
  TIMx->CCER &= ~TIM_CCER_CC2E;
 800660a:	6a01      	ldr	r1, [r0, #32]
 800660c:	f021 0110 	bic.w	r1, r1, #16
 8006610:	6201      	str	r1, [r0, #32]
  tmpccmr1 = TIMx->CCMR1;
 8006612:	6982      	ldr	r2, [r0, #24]
  tmpccer = TIMx->CCER;
 8006614:	6a03      	ldr	r3, [r0, #32]
  tmpccmr1 &= ~TIM_CCMR1_IC2F;
 8006616:	f422 4270 	bic.w	r2, r2, #61440	; 0xf000
  tmpccer &= ~(TIM_CCER_CC2P | TIM_CCER_CC2NP);
 800661a:	f023 03a0 	bic.w	r3, r3, #160	; 0xa0
  tmpccer |= (TIM_ICPolarity << 4U);
 800661e:	ea43 1305 	orr.w	r3, r3, r5, lsl #4
  tmpccmr1 |= (TIM_ICFilter << 12U);
 8006622:	ea42 3206 	orr.w	r2, r2, r6, lsl #12
  TIMx->CCMR1 = tmpccmr1 ;
 8006626:	6182      	str	r2, [r0, #24]
  TIMx->CCER = tmpccer;
 8006628:	6203      	str	r3, [r0, #32]
  tmpsmcr = TIMx->SMCR;
 800662a:	6883      	ldr	r3, [r0, #8]
  tmpsmcr &= ~TIM_SMCR_TS;
 800662c:	f023 0370 	bic.w	r3, r3, #112	; 0x70
  tmpsmcr |= (InputTriggerSource | TIM_SLAVEMODE_EXTERNAL1);
 8006630:	f043 0367 	orr.w	r3, r3, #103	; 0x67
 8006634:	e7cb      	b.n	80065ce <HAL_TIM_ConfigClockSource+0x92>
      TIM_TI1_ConfigInputStage(htim->Instance,
 8006636:	684a      	ldr	r2, [r1, #4]
 8006638:	68ce      	ldr	r6, [r1, #12]
  tmpccer = TIMx->CCER;
 800663a:	6a01      	ldr	r1, [r0, #32]
  TIMx->CCER &= ~TIM_CCER_CC1E;
 800663c:	6a05      	ldr	r5, [r0, #32]
 800663e:	f025 0501 	bic.w	r5, r5, #1
 8006642:	6205      	str	r5, [r0, #32]
  tmpccmr1 = TIMx->CCMR1;
 8006644:	6983      	ldr	r3, [r0, #24]
  tmpccer &= ~(TIM_CCER_CC1P | TIM_CCER_CC1NP);
 8006646:	f021 010a 	bic.w	r1, r1, #10
  tmpccmr1 &= ~TIM_CCMR1_IC1F;
 800664a:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
  tmpccmr1 |= (TIM_ICFilter << 4U);
 800664e:	ea43 1306 	orr.w	r3, r3, r6, lsl #4
  tmpccer |= TIM_ICPolarity;
 8006652:	430a      	orrs	r2, r1
  TIMx->CCMR1 = tmpccmr1;
 8006654:	6183      	str	r3, [r0, #24]
  TIMx->CCER = tmpccer;
 8006656:	6202      	str	r2, [r0, #32]
  tmpsmcr = TIMx->SMCR;
 8006658:	6883      	ldr	r3, [r0, #8]
  tmpsmcr &= ~TIM_SMCR_TS;
 800665a:	f023 0370 	bic.w	r3, r3, #112	; 0x70
  tmpsmcr |= (InputTriggerSource | TIM_SLAVEMODE_EXTERNAL1);
 800665e:	f043 0347 	orr.w	r3, r3, #71	; 0x47
 8006662:	e7b4      	b.n	80065ce <HAL_TIM_ConfigClockSource+0x92>

08006664 <TIM_CCxChannelCmd>:
  assert_param(IS_TIM_CHANNELS(Channel));

  tmp = TIM_CCER_CC1E << (Channel & 0x1FU); /* 0x1FU = 31 bits max shift */

  /* Reset the CCxE Bit */
  TIMx->CCER &= ~tmp;
 8006664:	6a03      	ldr	r3, [r0, #32]
  tmp = TIM_CCER_CC1E << (Channel & 0x1FU); /* 0x1FU = 31 bits max shift */
 8006666:	f001 011f 	and.w	r1, r1, #31
{
 800666a:	b510      	push	{r4, lr}
  tmp = TIM_CCER_CC1E << (Channel & 0x1FU); /* 0x1FU = 31 bits max shift */
 800666c:	2401      	movs	r4, #1
 800666e:	408c      	lsls	r4, r1
  TIMx->CCER &= ~tmp;
 8006670:	ea23 0304 	bic.w	r3, r3, r4
 8006674:	6203      	str	r3, [r0, #32]

  /* Set or reset the CCxE Bit */
  TIMx->CCER |= (uint32_t)(ChannelState << (Channel & 0x1FU)); /* 0x1FU = 31 bits max shift */
 8006676:	6a03      	ldr	r3, [r0, #32]
 8006678:	408a      	lsls	r2, r1
 800667a:	431a      	orrs	r2, r3
 800667c:	6202      	str	r2, [r0, #32]
}
 800667e:	bd10      	pop	{r4, pc}

08006680 <HAL_TIM_OC_Start_DMA>:
{
 8006680:	b570      	push	{r4, r5, r6, lr}
 8006682:	4604      	mov	r4, r0
  if (htim->State == HAL_TIM_STATE_BUSY)
 8006684:	f890 003d 	ldrb.w	r0, [r0, #61]	; 0x3d
 8006688:	b2c0      	uxtb	r0, r0
 800668a:	2802      	cmp	r0, #2
{
 800668c:	460d      	mov	r5, r1
 800668e:	4611      	mov	r1, r2
  if (htim->State == HAL_TIM_STATE_BUSY)
 8006690:	d006      	beq.n	80066a0 <HAL_TIM_OC_Start_DMA+0x20>
  else if (htim->State == HAL_TIM_STATE_READY)
 8006692:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
 8006696:	2a01      	cmp	r2, #1
 8006698:	d106      	bne.n	80066a8 <HAL_TIM_OC_Start_DMA+0x28>
    if ((pData == NULL) && (Length > 0U))
 800669a:	b911      	cbnz	r1, 80066a2 <HAL_TIM_OC_Start_DMA+0x22>
 800669c:	b10b      	cbz	r3, 80066a2 <HAL_TIM_OC_Start_DMA+0x22>
      return HAL_ERROR;
 800669e:	2001      	movs	r0, #1
}
 80066a0:	bd70      	pop	{r4, r5, r6, pc}
      htim->State = HAL_TIM_STATE_BUSY;
 80066a2:	2202      	movs	r2, #2
 80066a4:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
 80066a8:	6822      	ldr	r2, [r4, #0]
  switch (Channel)
 80066aa:	2d0c      	cmp	r5, #12
 80066ac:	d819      	bhi.n	80066e2 <HAL_TIM_OC_Start_DMA+0x62>
 80066ae:	e8df f005 	tbb	[pc, r5]
 80066b2:	1807      	.short	0x1807
 80066b4:	18341818 	.word	0x18341818
 80066b8:	18451818 	.word	0x18451818
 80066bc:	1818      	.short	0x1818
 80066be:	56          	.byte	0x56
 80066bf:	00          	.byte	0x00
      htim->hdma[TIM_DMA_ID_CC1]->XferCpltCallback = TIM_DMADelayPulseCplt;
 80066c0:	6a60      	ldr	r0, [r4, #36]	; 0x24
 80066c2:	4e2f      	ldr	r6, [pc, #188]	; (8006780 <HAL_TIM_OC_Start_DMA+0x100>)
 80066c4:	63c6      	str	r6, [r0, #60]	; 0x3c
      htim->hdma[TIM_DMA_ID_CC1]->XferHalfCpltCallback = TIM_DMADelayPulseHalfCplt;
 80066c6:	4e2f      	ldr	r6, [pc, #188]	; (8006784 <HAL_TIM_OC_Start_DMA+0x104>)
 80066c8:	6406      	str	r6, [r0, #64]	; 0x40
      htim->hdma[TIM_DMA_ID_CC1]->XferErrorCallback = TIM_DMAError ;
 80066ca:	4e2f      	ldr	r6, [pc, #188]	; (8006788 <HAL_TIM_OC_Start_DMA+0x108>)
 80066cc:	64c6      	str	r6, [r0, #76]	; 0x4c
      if (HAL_DMA_Start_IT(htim->hdma[TIM_DMA_ID_CC1], (uint32_t)pData, (uint32_t)&htim->Instance->CCR1, Length) != HAL_OK)
 80066ce:	3234      	adds	r2, #52	; 0x34
 80066d0:	f7fd fc2e 	bl	8003f30 <HAL_DMA_Start_IT>
 80066d4:	2800      	cmp	r0, #0
 80066d6:	d1e2      	bne.n	800669e <HAL_TIM_OC_Start_DMA+0x1e>
      __HAL_TIM_ENABLE_DMA(htim, TIM_DMA_CC1);
 80066d8:	6822      	ldr	r2, [r4, #0]
 80066da:	68d3      	ldr	r3, [r2, #12]
 80066dc:	f443 7300 	orr.w	r3, r3, #512	; 0x200
      __HAL_TIM_ENABLE_DMA(htim, TIM_DMA_CC4);
 80066e0:	60d3      	str	r3, [r2, #12]
  TIM_CCxChannelCmd(htim->Instance, Channel, TIM_CCx_ENABLE);
 80066e2:	2201      	movs	r2, #1
 80066e4:	4629      	mov	r1, r5
 80066e6:	6820      	ldr	r0, [r4, #0]
 80066e8:	f7ff ffbc 	bl	8006664 <TIM_CCxChannelCmd>
  if (IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)
 80066ec:	6823      	ldr	r3, [r4, #0]
 80066ee:	4a27      	ldr	r2, [pc, #156]	; (800678c <HAL_TIM_OC_Start_DMA+0x10c>)
 80066f0:	4293      	cmp	r3, r2
 80066f2:	d003      	beq.n	80066fc <HAL_TIM_OC_Start_DMA+0x7c>
 80066f4:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 80066f8:	4293      	cmp	r3, r2
 80066fa:	d103      	bne.n	8006704 <HAL_TIM_OC_Start_DMA+0x84>
    __HAL_TIM_MOE_ENABLE(htim);
 80066fc:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 80066fe:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 8006702:	645a      	str	r2, [r3, #68]	; 0x44
  tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
 8006704:	689a      	ldr	r2, [r3, #8]
 8006706:	f002 0207 	and.w	r2, r2, #7
  if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 800670a:	2a06      	cmp	r2, #6
    __HAL_TIM_ENABLE(htim);
 800670c:	bf1e      	ittt	ne
 800670e:	681a      	ldrne	r2, [r3, #0]
 8006710:	f042 0201 	orrne.w	r2, r2, #1
 8006714:	601a      	strne	r2, [r3, #0]
  return HAL_OK;
 8006716:	2000      	movs	r0, #0
 8006718:	e7c2      	b.n	80066a0 <HAL_TIM_OC_Start_DMA+0x20>
      htim->hdma[TIM_DMA_ID_CC2]->XferCpltCallback = TIM_DMADelayPulseCplt;
 800671a:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 800671c:	4e18      	ldr	r6, [pc, #96]	; (8006780 <HAL_TIM_OC_Start_DMA+0x100>)
 800671e:	63c6      	str	r6, [r0, #60]	; 0x3c
      htim->hdma[TIM_DMA_ID_CC2]->XferHalfCpltCallback = TIM_DMADelayPulseHalfCplt;
 8006720:	4e18      	ldr	r6, [pc, #96]	; (8006784 <HAL_TIM_OC_Start_DMA+0x104>)
 8006722:	6406      	str	r6, [r0, #64]	; 0x40
      htim->hdma[TIM_DMA_ID_CC2]->XferErrorCallback = TIM_DMAError ;
 8006724:	4e18      	ldr	r6, [pc, #96]	; (8006788 <HAL_TIM_OC_Start_DMA+0x108>)
 8006726:	64c6      	str	r6, [r0, #76]	; 0x4c
      if (HAL_DMA_Start_IT(htim->hdma[TIM_DMA_ID_CC2], (uint32_t)pData, (uint32_t)&htim->Instance->CCR2, Length) != HAL_OK)
 8006728:	3238      	adds	r2, #56	; 0x38
 800672a:	f7fd fc01 	bl	8003f30 <HAL_DMA_Start_IT>
 800672e:	2800      	cmp	r0, #0
 8006730:	d1b5      	bne.n	800669e <HAL_TIM_OC_Start_DMA+0x1e>
      __HAL_TIM_ENABLE_DMA(htim, TIM_DMA_CC2);
 8006732:	6822      	ldr	r2, [r4, #0]
 8006734:	68d3      	ldr	r3, [r2, #12]
 8006736:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 800673a:	e7d1      	b.n	80066e0 <HAL_TIM_OC_Start_DMA+0x60>
      htim->hdma[TIM_DMA_ID_CC3]->XferCpltCallback = TIM_DMADelayPulseCplt;
 800673c:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
 800673e:	4e10      	ldr	r6, [pc, #64]	; (8006780 <HAL_TIM_OC_Start_DMA+0x100>)
 8006740:	63c6      	str	r6, [r0, #60]	; 0x3c
      htim->hdma[TIM_DMA_ID_CC3]->XferHalfCpltCallback = TIM_DMADelayPulseHalfCplt;
 8006742:	4e10      	ldr	r6, [pc, #64]	; (8006784 <HAL_TIM_OC_Start_DMA+0x104>)
 8006744:	6406      	str	r6, [r0, #64]	; 0x40
      htim->hdma[TIM_DMA_ID_CC3]->XferErrorCallback = TIM_DMAError ;
 8006746:	4e10      	ldr	r6, [pc, #64]	; (8006788 <HAL_TIM_OC_Start_DMA+0x108>)
 8006748:	64c6      	str	r6, [r0, #76]	; 0x4c
      if (HAL_DMA_Start_IT(htim->hdma[TIM_DMA_ID_CC3], (uint32_t)pData, (uint32_t)&htim->Instance->CCR3, Length) != HAL_OK)
 800674a:	323c      	adds	r2, #60	; 0x3c
 800674c:	f7fd fbf0 	bl	8003f30 <HAL_DMA_Start_IT>
 8006750:	2800      	cmp	r0, #0
 8006752:	d1a4      	bne.n	800669e <HAL_TIM_OC_Start_DMA+0x1e>
      __HAL_TIM_ENABLE_DMA(htim, TIM_DMA_CC3);
 8006754:	6822      	ldr	r2, [r4, #0]
 8006756:	68d3      	ldr	r3, [r2, #12]
 8006758:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
 800675c:	e7c0      	b.n	80066e0 <HAL_TIM_OC_Start_DMA+0x60>
      htim->hdma[TIM_DMA_ID_CC4]->XferCpltCallback = TIM_DMADelayPulseCplt;
 800675e:	6b20      	ldr	r0, [r4, #48]	; 0x30
 8006760:	4e07      	ldr	r6, [pc, #28]	; (8006780 <HAL_TIM_OC_Start_DMA+0x100>)
 8006762:	63c6      	str	r6, [r0, #60]	; 0x3c
      htim->hdma[TIM_DMA_ID_CC4]->XferHalfCpltCallback = TIM_DMADelayPulseHalfCplt;
 8006764:	4e07      	ldr	r6, [pc, #28]	; (8006784 <HAL_TIM_OC_Start_DMA+0x104>)
 8006766:	6406      	str	r6, [r0, #64]	; 0x40
      htim->hdma[TIM_DMA_ID_CC4]->XferErrorCallback = TIM_DMAError ;
 8006768:	4e07      	ldr	r6, [pc, #28]	; (8006788 <HAL_TIM_OC_Start_DMA+0x108>)
 800676a:	64c6      	str	r6, [r0, #76]	; 0x4c
      if (HAL_DMA_Start_IT(htim->hdma[TIM_DMA_ID_CC4], (uint32_t)pData, (uint32_t)&htim->Instance->CCR4, Length) != HAL_OK)
 800676c:	3240      	adds	r2, #64	; 0x40
 800676e:	f7fd fbdf 	bl	8003f30 <HAL_DMA_Start_IT>
 8006772:	2800      	cmp	r0, #0
 8006774:	d193      	bne.n	800669e <HAL_TIM_OC_Start_DMA+0x1e>
      __HAL_TIM_ENABLE_DMA(htim, TIM_DMA_CC4);
 8006776:	6822      	ldr	r2, [r4, #0]
 8006778:	68d3      	ldr	r3, [r2, #12]
 800677a:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
 800677e:	e7af      	b.n	80066e0 <HAL_TIM_OC_Start_DMA+0x60>
 8006780:	080060f1 	.word	0x080060f1
 8006784:	0800612f 	.word	0x0800612f
 8006788:	080062b3 	.word	0x080062b3
 800678c:	40010000 	.word	0x40010000

08006790 <HAL_TIM_PWM_Start_DMA>:
 8006790:	f7ff bf76 	b.w	8006680 <HAL_TIM_OC_Start_DMA>

08006794 <HAL_TIMEx_MasterConfigSynchronization>:
  assert_param(IS_TIM_MASTER_INSTANCE(htim->Instance));
  assert_param(IS_TIM_TRGO_SOURCE(sMasterConfig->MasterOutputTrigger));
  assert_param(IS_TIM_MSM_STATE(sMasterConfig->MasterSlaveMode));

  /* Check input state */
  __HAL_LOCK(htim);
 8006794:	f890 303c 	ldrb.w	r3, [r0, #60]	; 0x3c
 8006798:	2b01      	cmp	r3, #1
{
 800679a:	b530      	push	{r4, r5, lr}
 800679c:	f04f 0302 	mov.w	r3, #2
  __HAL_LOCK(htim);
 80067a0:	d035      	beq.n	800680e <HAL_TIMEx_MasterConfigSynchronization+0x7a>

  /* Change the handler state */
  htim->State = HAL_TIM_STATE_BUSY;
 80067a2:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d

  /* Get the TIMx CR2 register value */
  tmpcr2 = htim->Instance->CR2;
 80067a6:	6803      	ldr	r3, [r0, #0]
  tmpsmcr = htim->Instance->SMCR;

  /* Reset the MMS Bits */
  tmpcr2 &= ~TIM_CR2_MMS;
  /* Select the TRGO source */
  tmpcr2 |=  sMasterConfig->MasterOutputTrigger;
 80067a8:	680d      	ldr	r5, [r1, #0]
  tmpcr2 = htim->Instance->CR2;
 80067aa:	685c      	ldr	r4, [r3, #4]
  tmpcr2 &= ~TIM_CR2_MMS;
 80067ac:	f024 0470 	bic.w	r4, r4, #112	; 0x70
  __HAL_LOCK(htim);
 80067b0:	2201      	movs	r2, #1
  tmpcr2 |=  sMasterConfig->MasterOutputTrigger;
 80067b2:	432c      	orrs	r4, r5
  __HAL_LOCK(htim);
 80067b4:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
  tmpsmcr = htim->Instance->SMCR;
 80067b8:	689a      	ldr	r2, [r3, #8]

  /* Update TIMx CR2 */
  htim->Instance->CR2 = tmpcr2;
 80067ba:	605c      	str	r4, [r3, #4]

  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 80067bc:	4c15      	ldr	r4, [pc, #84]	; (8006814 <HAL_TIMEx_MasterConfigSynchronization+0x80>)
 80067be:	42a3      	cmp	r3, r4
 80067c0:	d01a      	beq.n	80067f8 <HAL_TIMEx_MasterConfigSynchronization+0x64>
 80067c2:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 80067c6:	d017      	beq.n	80067f8 <HAL_TIMEx_MasterConfigSynchronization+0x64>
 80067c8:	f5a4 447c 	sub.w	r4, r4, #64512	; 0xfc00
 80067cc:	42a3      	cmp	r3, r4
 80067ce:	d013      	beq.n	80067f8 <HAL_TIMEx_MasterConfigSynchronization+0x64>
 80067d0:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 80067d4:	42a3      	cmp	r3, r4
 80067d6:	d00f      	beq.n	80067f8 <HAL_TIMEx_MasterConfigSynchronization+0x64>
 80067d8:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 80067dc:	42a3      	cmp	r3, r4
 80067de:	d00b      	beq.n	80067f8 <HAL_TIMEx_MasterConfigSynchronization+0x64>
 80067e0:	f504 4478 	add.w	r4, r4, #63488	; 0xf800
 80067e4:	42a3      	cmp	r3, r4
 80067e6:	d007      	beq.n	80067f8 <HAL_TIMEx_MasterConfigSynchronization+0x64>
 80067e8:	f504 5470 	add.w	r4, r4, #15360	; 0x3c00
 80067ec:	42a3      	cmp	r3, r4
 80067ee:	d003      	beq.n	80067f8 <HAL_TIMEx_MasterConfigSynchronization+0x64>
 80067f0:	f5a4 3494 	sub.w	r4, r4, #75776	; 0x12800
 80067f4:	42a3      	cmp	r3, r4
 80067f6:	d104      	bne.n	8006802 <HAL_TIMEx_MasterConfigSynchronization+0x6e>
  {
    /* Reset the MSM Bit */
    tmpsmcr &= ~TIM_SMCR_MSM;
    /* Set master mode */
    tmpsmcr |= sMasterConfig->MasterSlaveMode;
 80067f8:	6849      	ldr	r1, [r1, #4]
    tmpsmcr &= ~TIM_SMCR_MSM;
 80067fa:	f022 0280 	bic.w	r2, r2, #128	; 0x80
    tmpsmcr |= sMasterConfig->MasterSlaveMode;
 80067fe:	430a      	orrs	r2, r1

    /* Update TIMx SMCR */
    htim->Instance->SMCR = tmpsmcr;
 8006800:	609a      	str	r2, [r3, #8]
  }

  /* Change the htim state */
  htim->State = HAL_TIM_STATE_READY;
 8006802:	2301      	movs	r3, #1
 8006804:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d

  __HAL_UNLOCK(htim);
 8006808:	2300      	movs	r3, #0
 800680a:	f880 303c 	strb.w	r3, [r0, #60]	; 0x3c
  __HAL_LOCK(htim);
 800680e:	4618      	mov	r0, r3

  return HAL_OK;
}
 8006810:	bd30      	pop	{r4, r5, pc}
 8006812:	bf00      	nop
 8006814:	40010000 	.word	0x40010000

08006818 <HAL_TIMEx_CommutCallback>:
 8006818:	4770      	bx	lr

0800681a <HAL_TIMEx_BreakCallback>:
 800681a:	4770      	bx	lr

0800681c <FMC_SDRAM_Init>:
  * @param  Device Pointer to SDRAM device instance
  * @param  Init Pointer to SDRAM Initialization structure   
  * @retval HAL status
  */
HAL_StatusTypeDef FMC_SDRAM_Init(FMC_SDRAM_TypeDef *Device, FMC_SDRAM_InitTypeDef *Init)
{
 800681c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8006820:	6a4a      	ldr	r2, [r1, #36]	; 0x24
 8006822:	e9d1 4307 	ldrd	r4, r3, [r1, #28]
 8006826:	e9d1 5801 	ldrd	r5, r8, [r1, #4]
 800682a:	e9d1 ec03 	ldrd	lr, ip, [r1, #12]
 800682e:	e9d1 7605 	ldrd	r7, r6, [r1, #20]
  assert_param(IS_FMC_SDCLOCK_PERIOD(Init->SDClockPeriod));
  assert_param(IS_FMC_READ_BURST(Init->ReadBurst));
  assert_param(IS_FMC_READPIPE_DELAY(Init->ReadPipeDelay));   

  /* Set SDRAM bank configuration parameters */
  if (Init->SDBank != FMC_SDRAM_BANK2) 
 8006832:	6809      	ldr	r1, [r1, #0]
 8006834:	2901      	cmp	r1, #1
 8006836:	ea43 0304 	orr.w	r3, r3, r4
 800683a:	4912      	ldr	r1, [pc, #72]	; (8006884 <FMC_SDRAM_Init+0x68>)
  {    
    tmpr1 = Device->SDCR[FMC_SDRAM_BANK1];
 800683c:	6804      	ldr	r4, [r0, #0]
  if (Init->SDBank != FMC_SDRAM_BANK2) 
 800683e:	d00f      	beq.n	8006860 <FMC_SDRAM_Init+0x44>
    tmpr1 &= ((uint32_t)~(FMC_SDCR1_NC  | FMC_SDCR1_NR | FMC_SDCR1_MWID | \
                         FMC_SDCR1_NB  | FMC_SDCR1_CAS | FMC_SDCR1_WP | \
                         FMC_SDCR1_SDCLK | FMC_SDCR1_RBURST | FMC_SDCR1_RPIPE));
  
  
    tmpr1 |= (uint32_t)(Init->ColumnBitsNumber   |\
 8006840:	431a      	orrs	r2, r3
 8006842:	432a      	orrs	r2, r5
 8006844:	ea42 0308 	orr.w	r3, r2, r8
 8006848:	ea43 030e 	orr.w	r3, r3, lr
 800684c:	ea43 030c 	orr.w	r3, r3, ip
 8006850:	433b      	orrs	r3, r7
    tmpr1 &= ((uint32_t)~(FMC_SDCR1_NC  | FMC_SDCR1_NR | FMC_SDCR1_MWID | \
 8006852:	4021      	ands	r1, r4
    tmpr1 |= (uint32_t)(Init->ColumnBitsNumber   |\
 8006854:	4333      	orrs	r3, r6
 8006856:	430b      	orrs	r3, r1
                                               Init->WriteProtection    |\
                                               Init->SDClockPeriod      |\
                                               Init->ReadBurst          |\
                                               Init->ReadPipeDelay
                                               );
    Device->SDCR[FMC_SDRAM_BANK1] = tmpr1;
 8006858:	6003      	str	r3, [r0, #0]
    Device->SDCR[FMC_SDRAM_BANK1] = tmpr1;
    Device->SDCR[FMC_SDRAM_BANK2] = tmpr2;
  }  
  
  return HAL_OK;
}
 800685a:	2000      	movs	r0, #0
 800685c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    tmpr1 |= (uint32_t)(Init->SDClockPeriod      |\
 8006860:	4313      	orrs	r3, r2
    tmpr2 = Device->SDCR[FMC_SDRAM_BANK2];
 8006862:	6842      	ldr	r2, [r0, #4]
    tmpr2 &= ((uint32_t)~(FMC_SDCR1_NC  | FMC_SDCR1_NR | FMC_SDCR1_MWID | \
 8006864:	4011      	ands	r1, r2
    tmpr2 |= (uint32_t)(Init->ColumnBitsNumber   |\
 8006866:	ea45 0208 	orr.w	r2, r5, r8
 800686a:	ea42 020e 	orr.w	r2, r2, lr
 800686e:	ea42 020c 	orr.w	r2, r2, ip
 8006872:	433a      	orrs	r2, r7
    tmpr1 &= ((uint32_t)~(FMC_SDCR1_SDCLK | FMC_SDCR1_RBURST | FMC_SDCR1_RPIPE));
 8006874:	f424 44f8 	bic.w	r4, r4, #31744	; 0x7c00
    tmpr2 |= (uint32_t)(Init->ColumnBitsNumber   |\
 8006878:	4332      	orrs	r2, r6
    tmpr1 |= (uint32_t)(Init->SDClockPeriod      |\
 800687a:	4323      	orrs	r3, r4
    tmpr2 |= (uint32_t)(Init->ColumnBitsNumber   |\
 800687c:	430a      	orrs	r2, r1
    Device->SDCR[FMC_SDRAM_BANK1] = tmpr1;
 800687e:	6003      	str	r3, [r0, #0]
    Device->SDCR[FMC_SDRAM_BANK2] = tmpr2;
 8006880:	6042      	str	r2, [r0, #4]
 8006882:	e7ea      	b.n	800685a <FMC_SDRAM_Init+0x3e>
 8006884:	ffff8000 	.word	0xffff8000

08006888 <FMC_SDRAM_Timing_Init>:
  * @param  Timing Pointer to SDRAM Timing structure
  * @param  Bank SDRAM bank number   
  * @retval HAL status
  */
HAL_StatusTypeDef FMC_SDRAM_Timing_Init(FMC_SDRAM_TypeDef *Device, FMC_SDRAM_TimingTypeDef *Timing, uint32_t Bank)
{
 8006888:	68cb      	ldr	r3, [r1, #12]
 800688a:	b5f0      	push	{r4, r5, r6, r7, lr}
 800688c:	680c      	ldr	r4, [r1, #0]
 800688e:	688e      	ldr	r6, [r1, #8]
 8006890:	690d      	ldr	r5, [r1, #16]
 8006892:	1e5f      	subs	r7, r3, #1
 8006894:	694b      	ldr	r3, [r1, #20]
 8006896:	f104 3cff 	add.w	ip, r4, #4294967295
 800689a:	684c      	ldr	r4, [r1, #4]
 800689c:	6989      	ldr	r1, [r1, #24]
 800689e:	3b01      	subs	r3, #1
 80068a0:	051b      	lsls	r3, r3, #20
 80068a2:	3c01      	subs	r4, #1
 80068a4:	3e01      	subs	r6, #1
 80068a6:	3d01      	subs	r5, #1
 80068a8:	3901      	subs	r1, #1
  assert_param(IS_FMC_RP_DELAY(Timing->RPDelay));
  assert_param(IS_FMC_RCD_DELAY(Timing->RCDDelay));
  assert_param(IS_FMC_SDRAM_BANK(Bank));
  
  /* Set SDRAM device timing parameters */ 
  if (Bank != FMC_SDRAM_BANK2) 
 80068aa:	2a01      	cmp	r2, #1
 80068ac:	ea4f 1404 	mov.w	r4, r4, lsl #4
 80068b0:	ea4f 2606 	mov.w	r6, r6, lsl #8
 80068b4:	ea4f 4505 	mov.w	r5, r5, lsl #16
 80068b8:	ea4f 6101 	mov.w	r1, r1, lsl #24
 80068bc:	ea43 3307 	orr.w	r3, r3, r7, lsl #12
 80068c0:	d00c      	beq.n	80068dc <FMC_SDRAM_Timing_Init+0x54>
    /* Clear TMRD, TXSR, TRAS, TRC, TWR, TRP and TRCD bits */
    tmpr1 &= ((uint32_t)~(FMC_SDTR1_TMRD  | FMC_SDTR1_TXSR | FMC_SDTR1_TRAS | \
                          FMC_SDTR1_TRC  | FMC_SDTR1_TWR | FMC_SDTR1_TRP | \
                          FMC_SDTR1_TRCD));
    
    tmpr1 |= (uint32_t)(((Timing->LoadToActiveDelay)-1U)           |\
 80068c2:	ea43 030c 	orr.w	r3, r3, ip
 80068c6:	4323      	orrs	r3, r4
    tmpr1 = Device->SDTR[FMC_SDRAM_BANK1];
 80068c8:	6882      	ldr	r2, [r0, #8]
    tmpr1 |= (uint32_t)(((Timing->LoadToActiveDelay)-1U)           |\
 80068ca:	4333      	orrs	r3, r6
 80068cc:	432b      	orrs	r3, r5
    tmpr1 &= ((uint32_t)~(FMC_SDTR1_TMRD  | FMC_SDTR1_TXSR | FMC_SDTR1_TRAS | \
 80068ce:	f002 4270 	and.w	r2, r2, #4026531840	; 0xf0000000
    tmpr1 |= (uint32_t)(((Timing->LoadToActiveDelay)-1U)           |\
 80068d2:	430b      	orrs	r3, r1
 80068d4:	4313      	orrs	r3, r2
                       (((Timing->SelfRefreshTime)-1U) << 8U)      |\
                       (((Timing->RowCycleDelay)-1U) << 12U)       |\
                       (((Timing->WriteRecoveryTime)-1U) <<16U)    |\
                       (((Timing->RPDelay)-1U) << 20U)             |\
                       (((Timing->RCDDelay)-1U) << 24U));
    Device->SDTR[FMC_SDRAM_BANK1] = tmpr1;
 80068d6:	6083      	str	r3, [r0, #8]

    Device->SDTR[FMC_SDRAM_BANK1] = tmpr1;
    Device->SDTR[FMC_SDRAM_BANK2] = tmpr2;
  }
  return HAL_OK;
}
 80068d8:	2000      	movs	r0, #0
 80068da:	bdf0      	pop	{r4, r5, r6, r7, pc}
    tmpr1 = Device->SDTR[FMC_SDRAM_BANK1];
 80068dc:	6887      	ldr	r7, [r0, #8]
    tmpr1 &= ((uint32_t)~(FMC_SDTR1_TRC | FMC_SDTR1_TRP));
 80068de:	f427 0770 	bic.w	r7, r7, #15728640	; 0xf00000
 80068e2:	f427 4770 	bic.w	r7, r7, #61440	; 0xf000
    tmpr2 |= (uint32_t)((((Timing->LoadToActiveDelay)-1U)           |\
 80068e6:	ea44 0206 	orr.w	r2, r4, r6
    tmpr1 |= (uint32_t)((((Timing->RowCycleDelay)-1U) << 12U)       |\
 80068ea:	433b      	orrs	r3, r7
    tmpr2 |= (uint32_t)((((Timing->LoadToActiveDelay)-1U)           |\
 80068ec:	ea42 020c 	orr.w	r2, r2, ip
    tmpr2 = Device->SDTR[FMC_SDRAM_BANK2];
 80068f0:	68c7      	ldr	r7, [r0, #12]
    Device->SDTR[FMC_SDRAM_BANK1] = tmpr1;
 80068f2:	6083      	str	r3, [r0, #8]
    tmpr2 |= (uint32_t)((((Timing->LoadToActiveDelay)-1U)           |\
 80068f4:	432a      	orrs	r2, r5
    tmpr2 &= ((uint32_t)~(FMC_SDTR1_TMRD  | FMC_SDTR1_TXSR | FMC_SDTR1_TRAS | \
 80068f6:	f007 4770 	and.w	r7, r7, #4026531840	; 0xf0000000
    tmpr2 |= (uint32_t)((((Timing->LoadToActiveDelay)-1U)           |\
 80068fa:	430a      	orrs	r2, r1
 80068fc:	433a      	orrs	r2, r7
    Device->SDTR[FMC_SDRAM_BANK2] = tmpr2;
 80068fe:	60c2      	str	r2, [r0, #12]
 8006900:	e7ea      	b.n	80068d8 <FMC_SDRAM_Timing_Init+0x50>

08006902 <FMC_SDRAM_SendCommand>:
  * @param  Timing Pointer to SDRAM Timing structure
  * @param  Timeout Timeout wait value
  * @retval HAL state
  */  
HAL_StatusTypeDef FMC_SDRAM_SendCommand(FMC_SDRAM_TypeDef *Device, FMC_SDRAM_CommandTypeDef *Command, uint32_t Timeout)
{
 8006902:	b573      	push	{r0, r1, r4, r5, r6, lr}
  __IO uint32_t tmpr = 0U;
 8006904:	2300      	movs	r3, #0
 8006906:	9301      	str	r3, [sp, #4]
{
 8006908:	4615      	mov	r5, r2
  assert_param(IS_FMC_COMMAND_TARGET(Command->CommandTarget));
  assert_param(IS_FMC_AUTOREFRESH_NUMBER(Command->AutoRefreshNumber));
  assert_param(IS_FMC_MODE_REGISTER(Command->ModeRegisterDefinition));  

  /* Set command register */
  tmpr = (uint32_t)((Command->CommandMode)                  |\
 800690a:	e9d1 3200 	ldrd	r3, r2, [r1]
 800690e:	4313      	orrs	r3, r2
                    (Command->CommandTarget)                |\
                    (((Command->AutoRefreshNumber)-1U) << 5U) |\
                    ((Command->ModeRegisterDefinition) << 9U)
 8006910:	68ca      	ldr	r2, [r1, #12]
  tmpr = (uint32_t)((Command->CommandMode)                  |\
 8006912:	ea43 2342 	orr.w	r3, r3, r2, lsl #9
                    (((Command->AutoRefreshNumber)-1U) << 5U) |\
 8006916:	688a      	ldr	r2, [r1, #8]
 8006918:	3a01      	subs	r2, #1
  tmpr = (uint32_t)((Command->CommandMode)                  |\
 800691a:	ea43 1342 	orr.w	r3, r3, r2, lsl #5
 800691e:	9301      	str	r3, [sp, #4]
                    );
    
  Device->SDCMR = tmpr;
 8006920:	9b01      	ldr	r3, [sp, #4]
 8006922:	6103      	str	r3, [r0, #16]
{
 8006924:	4604      	mov	r4, r0

  /* Get tick */ 
  tickstart = HAL_GetTick();
 8006926:	f7fd f9dd 	bl	8003ce4 <HAL_GetTick>
 800692a:	4606      	mov	r6, r0

  /* Wait until command is send */
  while(HAL_IS_BIT_SET(Device->SDSR, FMC_SDSR_BUSY))
 800692c:	69a0      	ldr	r0, [r4, #24]
 800692e:	f010 0020 	ands.w	r0, r0, #32
 8006932:	d003      	beq.n	800693c <FMC_SDRAM_SendCommand+0x3a>
  {
    /* Check for the Timeout */
    if(Timeout != HAL_MAX_DELAY)
 8006934:	1c6b      	adds	r3, r5, #1
 8006936:	d0f9      	beq.n	800692c <FMC_SDRAM_SendCommand+0x2a>
    {
      if((Timeout == 0U)||((HAL_GetTick() - tickstart ) > Timeout))
 8006938:	b915      	cbnz	r5, 8006940 <FMC_SDRAM_SendCommand+0x3e>
      {
        return HAL_TIMEOUT;
 800693a:	2003      	movs	r0, #3
      }
    }
  }

  return HAL_OK;
}
 800693c:	b002      	add	sp, #8
 800693e:	bd70      	pop	{r4, r5, r6, pc}
      if((Timeout == 0U)||((HAL_GetTick() - tickstart ) > Timeout))
 8006940:	f7fd f9d0 	bl	8003ce4 <HAL_GetTick>
 8006944:	1b80      	subs	r0, r0, r6
 8006946:	42a8      	cmp	r0, r5
 8006948:	d9f0      	bls.n	800692c <FMC_SDRAM_SendCommand+0x2a>
 800694a:	e7f6      	b.n	800693a <FMC_SDRAM_SendCommand+0x38>

0800694c <FMC_SDRAM_ProgramRefreshRate>:
  /* Check the parameters */
  assert_param(IS_FMC_SDRAM_DEVICE(Device));
  assert_param(IS_FMC_REFRESH_RATE(RefreshRate));
  
  /* Set the refresh rate in command register */
  Device->SDRTR |= (RefreshRate<<1U);
 800694c:	6943      	ldr	r3, [r0, #20]
 800694e:	ea43 0141 	orr.w	r1, r3, r1, lsl #1
 8006952:	6141      	str	r1, [r0, #20]
  
  return HAL_OK;   
}
 8006954:	2000      	movs	r0, #0
 8006956:	4770      	bx	lr

08006958 <osKernelInitialize>:
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 8006958:	f3ef 8305 	mrs	r3, IPSR
/*---------------------------------------------------------------------------*/

osStatus_t osKernelInitialize (void) {
  osStatus_t stat;

  if (IS_IRQ()) {
 800695c:	b113      	cbz	r3, 8006964 <osKernelInitialize+0xc>
    stat = osErrorISR;
 800695e:	f06f 0005 	mvn.w	r0, #5
 8006962:	4770      	bx	lr
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8006964:	f3ef 8210 	mrs	r2, PRIMASK
 8006968:	4b07      	ldr	r3, [pc, #28]	; (8006988 <osKernelInitialize+0x30>)
  if (IS_IRQ()) {
 800696a:	b912      	cbnz	r2, 8006972 <osKernelInitialize+0x1a>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 800696c:	f3ef 8211 	mrs	r2, BASEPRI
 8006970:	b112      	cbz	r2, 8006978 <osKernelInitialize+0x20>
 8006972:	681a      	ldr	r2, [r3, #0]
 8006974:	2a02      	cmp	r2, #2
 8006976:	d0f2      	beq.n	800695e <osKernelInitialize+0x6>
  }
  else {
    if (KernelState == osKernelInactive) {
 8006978:	6818      	ldr	r0, [r3, #0]
 800697a:	b910      	cbnz	r0, 8006982 <osKernelInitialize+0x2a>
      #if defined(USE_FREERTOS_HEAP_5) && (HEAP_5_REGION_SETUP == 1)
        vPortDefineHeapRegions (configHEAP_5_REGIONS);
      #endif
      KernelState = osKernelReady;
 800697c:	2201      	movs	r2, #1
 800697e:	601a      	str	r2, [r3, #0]
 8006980:	4770      	bx	lr
      stat = osOK;
    } else {
      stat = osError;
 8006982:	f04f 30ff 	mov.w	r0, #4294967295
    }
  }

  return (stat);
}
 8006986:	4770      	bx	lr
 8006988:	200016d0 	.word	0x200016d0

0800698c <osKernelStart>:
  }

  return (state);
}

osStatus_t osKernelStart (void) {
 800698c:	b508      	push	{r3, lr}
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 800698e:	f3ef 8305 	mrs	r3, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
 8006992:	b113      	cbz	r3, 800699a <osKernelStart+0xe>
    stat = osErrorISR;
 8006994:	f06f 0005 	mvn.w	r0, #5
      stat = osError;
    }
  }

  return (stat);
}
 8006998:	bd08      	pop	{r3, pc}
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 800699a:	f3ef 8210 	mrs	r2, PRIMASK
 800699e:	4b0a      	ldr	r3, [pc, #40]	; (80069c8 <osKernelStart+0x3c>)
  if (IS_IRQ()) {
 80069a0:	b912      	cbnz	r2, 80069a8 <osKernelStart+0x1c>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 80069a2:	f3ef 8211 	mrs	r2, BASEPRI
 80069a6:	b112      	cbz	r2, 80069ae <osKernelStart+0x22>
 80069a8:	681a      	ldr	r2, [r3, #0]
 80069aa:	2a02      	cmp	r2, #2
 80069ac:	d0f2      	beq.n	8006994 <osKernelStart+0x8>
    if (KernelState == osKernelReady) {
 80069ae:	681a      	ldr	r2, [r3, #0]
 80069b0:	2a01      	cmp	r2, #1
 80069b2:	d105      	bne.n	80069c0 <osKernelStart+0x34>
      KernelState = osKernelRunning;
 80069b4:	2202      	movs	r2, #2
 80069b6:	601a      	str	r2, [r3, #0]
      vTaskStartScheduler();
 80069b8:	f001 fbb2 	bl	8008120 <vTaskStartScheduler>
      stat = osOK;
 80069bc:	2000      	movs	r0, #0
 80069be:	e7eb      	b.n	8006998 <osKernelStart+0xc>
      stat = osError;
 80069c0:	f04f 30ff 	mov.w	r0, #4294967295
  return (stat);
 80069c4:	e7e8      	b.n	8006998 <osKernelStart+0xc>
 80069c6:	bf00      	nop
 80069c8:	200016d0 	.word	0x200016d0

080069cc <osThreadNew>:
  return (configCPU_CLOCK_HZ);
}

/*---------------------------------------------------------------------------*/

osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 80069cc:	b5f0      	push	{r4, r5, r6, r7, lr}
 80069ce:	b087      	sub	sp, #28
 80069d0:	4614      	mov	r4, r2
  uint32_t stack;
  TaskHandle_t hTask;
  UBaseType_t prio;
  int32_t mem;

  hTask = NULL;
 80069d2:	2200      	movs	r2, #0
osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 80069d4:	460b      	mov	r3, r1
  hTask = NULL;
 80069d6:	9205      	str	r2, [sp, #20]
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 80069d8:	f3ef 8205 	mrs	r2, IPSR

  if (!IS_IRQ() && (func != NULL)) {
 80069dc:	bb32      	cbnz	r2, 8006a2c <osThreadNew+0x60>
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 80069de:	f3ef 8210 	mrs	r2, PRIMASK
 80069e2:	b912      	cbnz	r2, 80069ea <osThreadNew+0x1e>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 80069e4:	f3ef 8211 	mrs	r2, BASEPRI
 80069e8:	b11a      	cbz	r2, 80069f2 <osThreadNew+0x26>
 80069ea:	4a22      	ldr	r2, [pc, #136]	; (8006a74 <osThreadNew+0xa8>)
 80069ec:	6812      	ldr	r2, [r2, #0]
 80069ee:	2a02      	cmp	r2, #2
 80069f0:	d01c      	beq.n	8006a2c <osThreadNew+0x60>
 80069f2:	b1d8      	cbz	r0, 8006a2c <osThreadNew+0x60>
    prio  = (UBaseType_t)osPriorityNormal;

    name = NULL;
    mem  = -1;

    if (attr != NULL) {
 80069f4:	2c00      	cmp	r4, #0
 80069f6:	d036      	beq.n	8006a66 <osThreadNew+0x9a>
      if (attr->name != NULL) {
        name = attr->name;
      }
      if (attr->priority != osPriorityNone) {
 80069f8:	69a5      	ldr	r5, [r4, #24]
      if (attr->name != NULL) {
 80069fa:	6821      	ldr	r1, [r4, #0]
 80069fc:	2d00      	cmp	r5, #0
 80069fe:	bf08      	it	eq
 8006a00:	2518      	moveq	r5, #24
        prio = (UBaseType_t)attr->priority;
      }

      if ((prio < osPriorityIdle) || (prio > osPriorityISR) || ((attr->attr_bits & osThreadJoinable) == osThreadJoinable)) {
 8006a02:	1e6a      	subs	r2, r5, #1
 8006a04:	2a37      	cmp	r2, #55	; 0x37
 8006a06:	462f      	mov	r7, r5
 8006a08:	d831      	bhi.n	8006a6e <osThreadNew+0xa2>
 8006a0a:	6862      	ldr	r2, [r4, #4]
 8006a0c:	07d2      	lsls	r2, r2, #31
 8006a0e:	d42e      	bmi.n	8006a6e <osThreadNew+0xa2>
        return (NULL);
      }

      if (attr->stack_size > 0U) {
 8006a10:	6966      	ldr	r6, [r4, #20]
 8006a12:	b176      	cbz	r6, 8006a32 <osThreadNew+0x66>
        /* In FreeRTOS stack is not in bytes, but in sizeof(StackType_t) which is 4 on ARM ports.       */
        /* Stack size should be therefore 4 byte aligned in order to avoid division caused side effects */
        stack = attr->stack_size / sizeof(StackType_t);
 8006a14:	08b2      	lsrs	r2, r6, #2
 8006a16:	e9d4 ce02 	ldrd	ip, lr, [r4, #8]
      }

      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 8006a1a:	f1bc 0f00 	cmp.w	ip, #0
 8006a1e:	d00a      	beq.n	8006a36 <osThreadNew+0x6a>
 8006a20:	f1be 0f5f 	cmp.w	lr, #95	; 0x5f
 8006a24:	d902      	bls.n	8006a2c <osThreadNew+0x60>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 8006a26:	6924      	ldr	r4, [r4, #16]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 8006a28:	b104      	cbz	r4, 8006a2c <osThreadNew+0x60>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 8006a2a:	b9ae      	cbnz	r6, 8006a58 <osThreadNew+0x8c>
        }
      }
    }
  }

  return ((osThreadId_t)hTask);
 8006a2c:	9805      	ldr	r0, [sp, #20]
}
 8006a2e:	b007      	add	sp, #28
 8006a30:	bdf0      	pop	{r4, r5, r6, r7, pc}
    stack = configMINIMAL_STACK_SIZE;
 8006a32:	2280      	movs	r2, #128	; 0x80
 8006a34:	e7ef      	b.n	8006a16 <osThreadNew+0x4a>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) && (attr->stack_mem == NULL)) {
 8006a36:	f1be 0f00 	cmp.w	lr, #0
 8006a3a:	d1f7      	bne.n	8006a2c <osThreadNew+0x60>
      if (mem == 0) {
 8006a3c:	6924      	ldr	r4, [r4, #16]
 8006a3e:	2c00      	cmp	r4, #0
 8006a40:	d1f4      	bne.n	8006a2c <osThreadNew+0x60>
        if (xTaskCreate ((TaskFunction_t)func, name, (uint16_t)stack, argument, prio, &hTask) != pdPASS) {
 8006a42:	ac05      	add	r4, sp, #20
 8006a44:	e9cd 7400 	strd	r7, r4, [sp]
 8006a48:	b292      	uxth	r2, r2
 8006a4a:	f001 fb3b 	bl	80080c4 <xTaskCreate>
 8006a4e:	2801      	cmp	r0, #1
          hTask = NULL;
 8006a50:	bf1c      	itt	ne
 8006a52:	2300      	movne	r3, #0
 8006a54:	9305      	strne	r3, [sp, #20]
 8006a56:	e7e9      	b.n	8006a2c <osThreadNew+0x60>
      hTask = xTaskCreateStatic ((TaskFunction_t)func, name, stack, argument, prio, (StackType_t  *)attr->stack_mem,
 8006a58:	e9cd 4c01 	strd	r4, ip, [sp, #4]
 8006a5c:	9500      	str	r5, [sp, #0]
 8006a5e:	f001 faf9 	bl	8008054 <xTaskCreateStatic>
 8006a62:	9005      	str	r0, [sp, #20]
 8006a64:	e7e2      	b.n	8006a2c <osThreadNew+0x60>
    prio  = (UBaseType_t)osPriorityNormal;
 8006a66:	2718      	movs	r7, #24
    stack = configMINIMAL_STACK_SIZE;
 8006a68:	2280      	movs	r2, #128	; 0x80
    name = NULL;
 8006a6a:	4621      	mov	r1, r4
 8006a6c:	e7e9      	b.n	8006a42 <osThreadNew+0x76>
        return (NULL);
 8006a6e:	2000      	movs	r0, #0
 8006a70:	e7dd      	b.n	8006a2e <osThreadNew+0x62>
 8006a72:	bf00      	nop
 8006a74:	200016d0 	.word	0x200016d0

08006a78 <osSemaphoreNew>:
  return (stat);
}

/*---------------------------------------------------------------------------*/

osSemaphoreId_t osSemaphoreNew (uint32_t max_count, uint32_t initial_count, const osSemaphoreAttr_t *attr) {
 8006a78:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8006a7a:	460e      	mov	r6, r1
 8006a7c:	4615      	mov	r5, r2
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 8006a7e:	f3ef 8305 	mrs	r3, IPSR
  const char *name;
  #endif

  hSemaphore = NULL;

  if (!IS_IRQ() && (max_count > 0U) && (initial_count <= max_count)) {
 8006a82:	b11b      	cbz	r3, 8006a8c <osSemaphoreNew+0x14>
        }

        if ((hSemaphore != NULL) && (initial_count != 0U)) {
          if (xSemaphoreGive (hSemaphore) != pdPASS) {
            vSemaphoreDelete (hSemaphore);
            hSemaphore = NULL;
 8006a84:	2400      	movs	r4, #0
      #endif
    }
  }

  return ((osSemaphoreId_t)hSemaphore);
}
 8006a86:	4620      	mov	r0, r4
 8006a88:	b002      	add	sp, #8
 8006a8a:	bd70      	pop	{r4, r5, r6, pc}
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8006a8c:	f3ef 8310 	mrs	r3, PRIMASK
  if (!IS_IRQ() && (max_count > 0U) && (initial_count <= max_count)) {
 8006a90:	b913      	cbnz	r3, 8006a98 <osSemaphoreNew+0x20>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 8006a92:	f3ef 8311 	mrs	r3, BASEPRI
 8006a96:	b11b      	cbz	r3, 8006aa0 <osSemaphoreNew+0x28>
 8006a98:	4b21      	ldr	r3, [pc, #132]	; (8006b20 <osSemaphoreNew+0xa8>)
 8006a9a:	681b      	ldr	r3, [r3, #0]
 8006a9c:	2b02      	cmp	r3, #2
 8006a9e:	d0f1      	beq.n	8006a84 <osSemaphoreNew+0xc>
 8006aa0:	2800      	cmp	r0, #0
 8006aa2:	d0ef      	beq.n	8006a84 <osSemaphoreNew+0xc>
 8006aa4:	42b0      	cmp	r0, r6
 8006aa6:	d3ed      	bcc.n	8006a84 <osSemaphoreNew+0xc>
    if (attr != NULL) {
 8006aa8:	b1ed      	cbz	r5, 8006ae6 <osSemaphoreNew+0x6e>
 8006aaa:	e9d5 3202 	ldrd	r3, r2, [r5, #8]
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticSemaphore_t))) {
 8006aae:	b1c3      	cbz	r3, 8006ae2 <osSemaphoreNew+0x6a>
 8006ab0:	2a4f      	cmp	r2, #79	; 0x4f
 8006ab2:	d9e7      	bls.n	8006a84 <osSemaphoreNew+0xc>
      if (max_count == 1U) {
 8006ab4:	2801      	cmp	r0, #1
 8006ab6:	d126      	bne.n	8006b06 <osSemaphoreNew+0x8e>
          hSemaphore = xSemaphoreCreateBinaryStatic ((StaticSemaphore_t *)attr->cb_mem);
 8006ab8:	2203      	movs	r2, #3
 8006aba:	9200      	str	r2, [sp, #0]
 8006abc:	2200      	movs	r2, #0
 8006abe:	4611      	mov	r1, r2
 8006ac0:	f000 fd30 	bl	8007524 <xQueueGenericCreateStatic>
          hSemaphore = xSemaphoreCreateBinary();
 8006ac4:	4604      	mov	r4, r0
        if ((hSemaphore != NULL) && (initial_count != 0U)) {
 8006ac6:	2800      	cmp	r0, #0
 8006ac8:	d0dc      	beq.n	8006a84 <osSemaphoreNew+0xc>
 8006aca:	b1ce      	cbz	r6, 8006b00 <osSemaphoreNew+0x88>
          if (xSemaphoreGive (hSemaphore) != pdPASS) {
 8006acc:	2300      	movs	r3, #0
 8006ace:	461a      	mov	r2, r3
 8006ad0:	4619      	mov	r1, r3
 8006ad2:	f000 fddd 	bl	8007690 <xQueueGenericSend>
 8006ad6:	2801      	cmp	r0, #1
 8006ad8:	d012      	beq.n	8006b00 <osSemaphoreNew+0x88>
            vSemaphoreDelete (hSemaphore);
 8006ada:	4620      	mov	r0, r4
 8006adc:	f001 f918 	bl	8007d10 <vQueueDelete>
 8006ae0:	e7d0      	b.n	8006a84 <osSemaphoreNew+0xc>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U)) {
 8006ae2:	2a00      	cmp	r2, #0
 8006ae4:	d1ce      	bne.n	8006a84 <osSemaphoreNew+0xc>
      if (max_count == 1U) {
 8006ae6:	2801      	cmp	r0, #1
 8006ae8:	d104      	bne.n	8006af4 <osSemaphoreNew+0x7c>
          hSemaphore = xSemaphoreCreateBinary();
 8006aea:	2203      	movs	r2, #3
 8006aec:	2100      	movs	r1, #0
 8006aee:	f000 fd67 	bl	80075c0 <xQueueGenericCreate>
 8006af2:	e7e7      	b.n	8006ac4 <osSemaphoreNew+0x4c>
          hSemaphore = xSemaphoreCreateCounting (max_count, initial_count);
 8006af4:	4631      	mov	r1, r6
 8006af6:	f000 fdac 	bl	8007652 <xQueueCreateCountingSemaphore>
      if (hSemaphore != NULL) {
 8006afa:	4604      	mov	r4, r0
 8006afc:	2800      	cmp	r0, #0
 8006afe:	d0c1      	beq.n	8006a84 <osSemaphoreNew+0xc>
        if (attr != NULL) {
 8006b00:	b945      	cbnz	r5, 8006b14 <osSemaphoreNew+0x9c>
          name = NULL;
 8006b02:	4629      	mov	r1, r5
 8006b04:	e007      	b.n	8006b16 <osSemaphoreNew+0x9e>
          hSemaphore = xSemaphoreCreateCountingStatic (max_count, initial_count, (StaticSemaphore_t *)attr->cb_mem);
 8006b06:	461a      	mov	r2, r3
 8006b08:	4631      	mov	r1, r6
 8006b0a:	f000 fd80 	bl	800760e <xQueueCreateCountingSemaphoreStatic>
      if (hSemaphore != NULL) {
 8006b0e:	4604      	mov	r4, r0
 8006b10:	2800      	cmp	r0, #0
 8006b12:	d0b7      	beq.n	8006a84 <osSemaphoreNew+0xc>
          name = attr->name;
 8006b14:	6829      	ldr	r1, [r5, #0]
        vQueueAddToRegistry (hSemaphore, name);
 8006b16:	4620      	mov	r0, r4
 8006b18:	f001 f8d4 	bl	8007cc4 <vQueueAddToRegistry>
  return ((osSemaphoreId_t)hSemaphore);
 8006b1c:	e7b3      	b.n	8006a86 <osSemaphoreNew+0xe>
 8006b1e:	bf00      	nop
 8006b20:	200016d0 	.word	0x200016d0

08006b24 <osSemaphoreAcquire>:

osStatus_t osSemaphoreAcquire (osSemaphoreId_t semaphore_id, uint32_t timeout) {
 8006b24:	b513      	push	{r0, r1, r4, lr}
 8006b26:	460c      	mov	r4, r1
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 8006b28:	b918      	cbnz	r0, 8006b32 <osSemaphoreAcquire+0xe>
    stat = osErrorParameter;
 8006b2a:	f06f 0003 	mvn.w	r0, #3
      }
    }
  }

  return (stat);
}
 8006b2e:	b002      	add	sp, #8
 8006b30:	bd10      	pop	{r4, pc}
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 8006b32:	f3ef 8305 	mrs	r3, IPSR
  else if (IS_IRQ()) {
 8006b36:	b16b      	cbz	r3, 8006b54 <osSemaphoreAcquire+0x30>
    if (timeout != 0U) {
 8006b38:	2c00      	cmp	r4, #0
 8006b3a:	d1f6      	bne.n	8006b2a <osSemaphoreAcquire+0x6>
      yield = pdFALSE;
 8006b3c:	aa02      	add	r2, sp, #8
      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 8006b3e:	4621      	mov	r1, r4
      yield = pdFALSE;
 8006b40:	f842 4d04 	str.w	r4, [r2, #-4]!
      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 8006b44:	f001 f86e 	bl	8007c24 <xQueueReceiveFromISR>
 8006b48:	2801      	cmp	r0, #1
 8006b4a:	d113      	bne.n	8006b74 <osSemaphoreAcquire+0x50>
        portYIELD_FROM_ISR (yield);
 8006b4c:	9b01      	ldr	r3, [sp, #4]
 8006b4e:	b9a3      	cbnz	r3, 8006b7a <osSemaphoreAcquire+0x56>
  stat = osOK;
 8006b50:	2000      	movs	r0, #0
 8006b52:	e7ec      	b.n	8006b2e <osSemaphoreAcquire+0xa>
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8006b54:	f3ef 8310 	mrs	r3, PRIMASK
  else if (IS_IRQ()) {
 8006b58:	b913      	cbnz	r3, 8006b60 <osSemaphoreAcquire+0x3c>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 8006b5a:	f3ef 8311 	mrs	r3, BASEPRI
 8006b5e:	b11b      	cbz	r3, 8006b68 <osSemaphoreAcquire+0x44>
 8006b60:	4b0c      	ldr	r3, [pc, #48]	; (8006b94 <osSemaphoreAcquire+0x70>)
 8006b62:	681b      	ldr	r3, [r3, #0]
 8006b64:	2b02      	cmp	r3, #2
 8006b66:	d0e7      	beq.n	8006b38 <osSemaphoreAcquire+0x14>
    if (xSemaphoreTake (hSemaphore, (TickType_t)timeout) != pdPASS) {
 8006b68:	4621      	mov	r1, r4
 8006b6a:	f000 ff99 	bl	8007aa0 <xQueueSemaphoreTake>
 8006b6e:	2801      	cmp	r0, #1
 8006b70:	d0ee      	beq.n	8006b50 <osSemaphoreAcquire+0x2c>
      if (timeout != 0U) {
 8006b72:	b95c      	cbnz	r4, 8006b8c <osSemaphoreAcquire+0x68>
        stat = osErrorResource;
 8006b74:	f06f 0002 	mvn.w	r0, #2
 8006b78:	e7d9      	b.n	8006b2e <osSemaphoreAcquire+0xa>
        portYIELD_FROM_ISR (yield);
 8006b7a:	4b07      	ldr	r3, [pc, #28]	; (8006b98 <osSemaphoreAcquire+0x74>)
 8006b7c:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8006b80:	601a      	str	r2, [r3, #0]
 8006b82:	f3bf 8f4f 	dsb	sy
 8006b86:	f3bf 8f6f 	isb	sy
 8006b8a:	e7e1      	b.n	8006b50 <osSemaphoreAcquire+0x2c>
        stat = osErrorTimeout;
 8006b8c:	f06f 0001 	mvn.w	r0, #1
  return (stat);
 8006b90:	e7cd      	b.n	8006b2e <osSemaphoreAcquire+0xa>
 8006b92:	bf00      	nop
 8006b94:	200016d0 	.word	0x200016d0
 8006b98:	e000ed04 	.word	0xe000ed04

08006b9c <osSemaphoreRelease>:

osStatus_t osSemaphoreRelease (osSemaphoreId_t semaphore_id) {
 8006b9c:	b513      	push	{r0, r1, r4, lr}
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 8006b9e:	b368      	cbz	r0, 8006bfc <osSemaphoreRelease+0x60>
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 8006ba0:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
 8006ba4:	b153      	cbz	r3, 8006bbc <osSemaphoreRelease+0x20>
    yield = pdFALSE;
 8006ba6:	a902      	add	r1, sp, #8
 8006ba8:	2400      	movs	r4, #0
 8006baa:	f841 4d04 	str.w	r4, [r1, #-4]!

    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 8006bae:	f000 fe82 	bl	80078b6 <xQueueGiveFromISR>
 8006bb2:	2801      	cmp	r0, #1
 8006bb4:	d014      	beq.n	8006be0 <osSemaphoreRelease+0x44>
      portYIELD_FROM_ISR (yield);
    }
  }
  else {
    if (xSemaphoreGive (hSemaphore) != pdPASS) {
      stat = osErrorResource;
 8006bb6:	f06f 0002 	mvn.w	r0, #2
 8006bba:	e014      	b.n	8006be6 <osSemaphoreRelease+0x4a>
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8006bbc:	f3ef 8310 	mrs	r3, PRIMASK
  else if (IS_IRQ()) {
 8006bc0:	b913      	cbnz	r3, 8006bc8 <osSemaphoreRelease+0x2c>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 8006bc2:	f3ef 8311 	mrs	r3, BASEPRI
 8006bc6:	b11b      	cbz	r3, 8006bd0 <osSemaphoreRelease+0x34>
 8006bc8:	4b0e      	ldr	r3, [pc, #56]	; (8006c04 <osSemaphoreRelease+0x68>)
 8006bca:	681b      	ldr	r3, [r3, #0]
 8006bcc:	2b02      	cmp	r3, #2
 8006bce:	d0ea      	beq.n	8006ba6 <osSemaphoreRelease+0xa>
    if (xSemaphoreGive (hSemaphore) != pdPASS) {
 8006bd0:	2300      	movs	r3, #0
 8006bd2:	461a      	mov	r2, r3
 8006bd4:	4619      	mov	r1, r3
 8006bd6:	f000 fd5b 	bl	8007690 <xQueueGenericSend>
 8006bda:	2801      	cmp	r0, #1
 8006bdc:	d002      	beq.n	8006be4 <osSemaphoreRelease+0x48>
 8006bde:	e7ea      	b.n	8006bb6 <osSemaphoreRelease+0x1a>
      portYIELD_FROM_ISR (yield);
 8006be0:	9b01      	ldr	r3, [sp, #4]
 8006be2:	b913      	cbnz	r3, 8006bea <osSemaphoreRelease+0x4e>
  stat = osOK;
 8006be4:	2000      	movs	r0, #0
    }
  }

  return (stat);
}
 8006be6:	b002      	add	sp, #8
 8006be8:	bd10      	pop	{r4, pc}
      portYIELD_FROM_ISR (yield);
 8006bea:	4b07      	ldr	r3, [pc, #28]	; (8006c08 <osSemaphoreRelease+0x6c>)
 8006bec:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8006bf0:	601a      	str	r2, [r3, #0]
 8006bf2:	f3bf 8f4f 	dsb	sy
 8006bf6:	f3bf 8f6f 	isb	sy
 8006bfa:	e7f3      	b.n	8006be4 <osSemaphoreRelease+0x48>
    stat = osErrorParameter;
 8006bfc:	f06f 0003 	mvn.w	r0, #3
  return (stat);
 8006c00:	e7f1      	b.n	8006be6 <osSemaphoreRelease+0x4a>
 8006c02:	bf00      	nop
 8006c04:	200016d0 	.word	0x200016d0
 8006c08:	e000ed04 	.word	0xe000ed04

08006c0c <osMessageQueueNew>:
  return (stat);
}

/*---------------------------------------------------------------------------*/

osMessageQueueId_t osMessageQueueNew (uint32_t msg_count, uint32_t msg_size, const osMessageQueueAttr_t *attr) {
 8006c0c:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8006c0e:	4614      	mov	r4, r2
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 8006c10:	f3ef 8305 	mrs	r3, IPSR
  const char *name;
  #endif

  hQueue = NULL;

  if (!IS_IRQ() && (msg_count > 0U) && (msg_size > 0U)) {
 8006c14:	b11b      	cbz	r3, 8006c1e <osMessageQueueNew+0x12>
  hQueue = NULL;
 8006c16:	2500      	movs	r5, #0
    #endif

  }

  return ((osMessageQueueId_t)hQueue);
}
 8006c18:	4628      	mov	r0, r5
 8006c1a:	b002      	add	sp, #8
 8006c1c:	bd70      	pop	{r4, r5, r6, pc}
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8006c1e:	f3ef 8310 	mrs	r3, PRIMASK
  if (!IS_IRQ() && (msg_count > 0U) && (msg_size > 0U)) {
 8006c22:	b913      	cbnz	r3, 8006c2a <osMessageQueueNew+0x1e>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 8006c24:	f3ef 8311 	mrs	r3, BASEPRI
 8006c28:	b11b      	cbz	r3, 8006c32 <osMessageQueueNew+0x26>
 8006c2a:	4b1a      	ldr	r3, [pc, #104]	; (8006c94 <osMessageQueueNew+0x88>)
 8006c2c:	681b      	ldr	r3, [r3, #0]
 8006c2e:	2b02      	cmp	r3, #2
 8006c30:	d0f1      	beq.n	8006c16 <osMessageQueueNew+0xa>
 8006c32:	2800      	cmp	r0, #0
 8006c34:	d0ef      	beq.n	8006c16 <osMessageQueueNew+0xa>
 8006c36:	2900      	cmp	r1, #0
 8006c38:	d0ed      	beq.n	8006c16 <osMessageQueueNew+0xa>
    if (attr != NULL) {
 8006c3a:	b304      	cbz	r4, 8006c7e <osMessageQueueNew+0x72>
 8006c3c:	e9d4 3202 	ldrd	r3, r2, [r4, #8]
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 8006c40:	b1ab      	cbz	r3, 8006c6e <osMessageQueueNew+0x62>
 8006c42:	2a4f      	cmp	r2, #79	; 0x4f
 8006c44:	d9e7      	bls.n	8006c16 <osMessageQueueNew+0xa>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 8006c46:	6922      	ldr	r2, [r4, #16]
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 8006c48:	2a00      	cmp	r2, #0
 8006c4a:	d0e4      	beq.n	8006c16 <osMessageQueueNew+0xa>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 8006c4c:	6966      	ldr	r6, [r4, #20]
 8006c4e:	fb01 f500 	mul.w	r5, r1, r0
 8006c52:	42ae      	cmp	r6, r5
 8006c54:	d3df      	bcc.n	8006c16 <osMessageQueueNew+0xa>
      hQueue = xQueueCreateStatic (msg_count, msg_size, attr->mq_mem, attr->cb_mem);
 8006c56:	2500      	movs	r5, #0
 8006c58:	9500      	str	r5, [sp, #0]
 8006c5a:	f000 fc63 	bl	8007524 <xQueueGenericCreateStatic>
    if (hQueue != NULL) {
 8006c5e:	4605      	mov	r5, r0
 8006c60:	2800      	cmp	r0, #0
 8006c62:	d0d8      	beq.n	8006c16 <osMessageQueueNew+0xa>
        name = attr->name;
 8006c64:	6821      	ldr	r1, [r4, #0]
      vQueueAddToRegistry (hQueue, name);
 8006c66:	4628      	mov	r0, r5
 8006c68:	f001 f82c 	bl	8007cc4 <vQueueAddToRegistry>
  return ((osMessageQueueId_t)hQueue);
 8006c6c:	e7d4      	b.n	8006c18 <osMessageQueueNew+0xc>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) &&
 8006c6e:	2a00      	cmp	r2, #0
 8006c70:	d1d1      	bne.n	8006c16 <osMessageQueueNew+0xa>
 8006c72:	6923      	ldr	r3, [r4, #16]
 8006c74:	2b00      	cmp	r3, #0
 8006c76:	d1ce      	bne.n	8006c16 <osMessageQueueNew+0xa>
            (attr->mq_mem == NULL) && (attr->mq_size == 0U)) {
 8006c78:	6963      	ldr	r3, [r4, #20]
 8006c7a:	2b00      	cmp	r3, #0
 8006c7c:	d1cb      	bne.n	8006c16 <osMessageQueueNew+0xa>
        hQueue = xQueueCreate (msg_count, msg_size);
 8006c7e:	2200      	movs	r2, #0
 8006c80:	f000 fc9e 	bl	80075c0 <xQueueGenericCreate>
    if (hQueue != NULL) {
 8006c84:	4605      	mov	r5, r0
 8006c86:	2800      	cmp	r0, #0
 8006c88:	d0c5      	beq.n	8006c16 <osMessageQueueNew+0xa>
      if (attr != NULL) {
 8006c8a:	2c00      	cmp	r4, #0
 8006c8c:	d1ea      	bne.n	8006c64 <osMessageQueueNew+0x58>
        name = NULL;
 8006c8e:	4621      	mov	r1, r4
 8006c90:	e7e9      	b.n	8006c66 <osMessageQueueNew+0x5a>
 8006c92:	bf00      	nop
 8006c94:	200016d0 	.word	0x200016d0

08006c98 <osMessageQueuePut>:

osStatus_t osMessageQueuePut (osMessageQueueId_t mq_id, const void *msg_ptr, uint8_t msg_prio, uint32_t timeout) {
 8006c98:	b513      	push	{r0, r1, r4, lr}
 8006c9a:	461c      	mov	r4, r3
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 8006c9c:	f3ef 8305 	mrs	r3, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 8006ca0:	b123      	cbz	r3, 8006cac <osMessageQueuePut+0x14>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 8006ca2:	b9d8      	cbnz	r0, 8006cdc <osMessageQueuePut+0x44>
      stat = osErrorParameter;
 8006ca4:	f06f 0003 	mvn.w	r0, #3
      }
    }
  }

  return (stat);
}
 8006ca8:	b002      	add	sp, #8
 8006caa:	bd10      	pop	{r4, pc}
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8006cac:	f3ef 8310 	mrs	r3, PRIMASK
  if (IS_IRQ()) {
 8006cb0:	b913      	cbnz	r3, 8006cb8 <osMessageQueuePut+0x20>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 8006cb2:	f3ef 8311 	mrs	r3, BASEPRI
 8006cb6:	b11b      	cbz	r3, 8006cc0 <osMessageQueuePut+0x28>
 8006cb8:	4b16      	ldr	r3, [pc, #88]	; (8006d14 <osMessageQueuePut+0x7c>)
 8006cba:	681b      	ldr	r3, [r3, #0]
 8006cbc:	2b02      	cmp	r3, #2
 8006cbe:	d0f0      	beq.n	8006ca2 <osMessageQueuePut+0xa>
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 8006cc0:	2800      	cmp	r0, #0
 8006cc2:	d0ef      	beq.n	8006ca4 <osMessageQueuePut+0xc>
 8006cc4:	2900      	cmp	r1, #0
 8006cc6:	d0ed      	beq.n	8006ca4 <osMessageQueuePut+0xc>
      if (xQueueSendToBack (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 8006cc8:	2300      	movs	r3, #0
 8006cca:	4622      	mov	r2, r4
 8006ccc:	f000 fce0 	bl	8007690 <xQueueGenericSend>
 8006cd0:	2801      	cmp	r0, #1
 8006cd2:	d011      	beq.n	8006cf8 <osMessageQueuePut+0x60>
        if (timeout != 0U) {
 8006cd4:	b9dc      	cbnz	r4, 8006d0e <osMessageQueuePut+0x76>
          stat = osErrorResource;
 8006cd6:	f06f 0002 	mvn.w	r0, #2
 8006cda:	e7e5      	b.n	8006ca8 <osMessageQueuePut+0x10>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 8006cdc:	2900      	cmp	r1, #0
 8006cde:	d0e1      	beq.n	8006ca4 <osMessageQueuePut+0xc>
 8006ce0:	2c00      	cmp	r4, #0
 8006ce2:	d1df      	bne.n	8006ca4 <osMessageQueuePut+0xc>
      yield = pdFALSE;
 8006ce4:	aa02      	add	r2, sp, #8
      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 8006ce6:	4623      	mov	r3, r4
      yield = pdFALSE;
 8006ce8:	f842 4d04 	str.w	r4, [r2, #-4]!
      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 8006cec:	f000 fd82 	bl	80077f4 <xQueueGenericSendFromISR>
 8006cf0:	2801      	cmp	r0, #1
 8006cf2:	d1f0      	bne.n	8006cd6 <osMessageQueuePut+0x3e>
        portYIELD_FROM_ISR (yield);
 8006cf4:	9b01      	ldr	r3, [sp, #4]
 8006cf6:	b90b      	cbnz	r3, 8006cfc <osMessageQueuePut+0x64>
  stat = osOK;
 8006cf8:	2000      	movs	r0, #0
 8006cfa:	e7d5      	b.n	8006ca8 <osMessageQueuePut+0x10>
        portYIELD_FROM_ISR (yield);
 8006cfc:	4b06      	ldr	r3, [pc, #24]	; (8006d18 <osMessageQueuePut+0x80>)
 8006cfe:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8006d02:	601a      	str	r2, [r3, #0]
 8006d04:	f3bf 8f4f 	dsb	sy
 8006d08:	f3bf 8f6f 	isb	sy
 8006d0c:	e7f4      	b.n	8006cf8 <osMessageQueuePut+0x60>
          stat = osErrorTimeout;
 8006d0e:	f06f 0001 	mvn.w	r0, #1
  return (stat);
 8006d12:	e7c9      	b.n	8006ca8 <osMessageQueuePut+0x10>
 8006d14:	200016d0 	.word	0x200016d0
 8006d18:	e000ed04 	.word	0xe000ed04

08006d1c <osMessageQueueGet>:

osStatus_t osMessageQueueGet (osMessageQueueId_t mq_id, void *msg_ptr, uint8_t *msg_prio, uint32_t timeout) {
 8006d1c:	b513      	push	{r0, r1, r4, lr}
 8006d1e:	461c      	mov	r4, r3
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 8006d20:	f3ef 8305 	mrs	r3, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 8006d24:	b123      	cbz	r3, 8006d30 <osMessageQueueGet+0x14>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 8006d26:	b9d0      	cbnz	r0, 8006d5e <osMessageQueueGet+0x42>
      stat = osErrorParameter;
 8006d28:	f06f 0003 	mvn.w	r0, #3
      }
    }
  }

  return (stat);
}
 8006d2c:	b002      	add	sp, #8
 8006d2e:	bd10      	pop	{r4, pc}
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8006d30:	f3ef 8310 	mrs	r3, PRIMASK
  if (IS_IRQ()) {
 8006d34:	b913      	cbnz	r3, 8006d3c <osMessageQueueGet+0x20>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 8006d36:	f3ef 8311 	mrs	r3, BASEPRI
 8006d3a:	b11b      	cbz	r3, 8006d44 <osMessageQueueGet+0x28>
 8006d3c:	4b15      	ldr	r3, [pc, #84]	; (8006d94 <osMessageQueueGet+0x78>)
 8006d3e:	681b      	ldr	r3, [r3, #0]
 8006d40:	2b02      	cmp	r3, #2
 8006d42:	d0f0      	beq.n	8006d26 <osMessageQueueGet+0xa>
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 8006d44:	2800      	cmp	r0, #0
 8006d46:	d0ef      	beq.n	8006d28 <osMessageQueueGet+0xc>
 8006d48:	2900      	cmp	r1, #0
 8006d4a:	d0ed      	beq.n	8006d28 <osMessageQueueGet+0xc>
      if (xQueueReceive (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 8006d4c:	4622      	mov	r2, r4
 8006d4e:	f000 fe07 	bl	8007960 <xQueueReceive>
 8006d52:	2801      	cmp	r0, #1
 8006d54:	d010      	beq.n	8006d78 <osMessageQueueGet+0x5c>
        if (timeout != 0U) {
 8006d56:	b9d4      	cbnz	r4, 8006d8e <osMessageQueueGet+0x72>
          stat = osErrorResource;
 8006d58:	f06f 0002 	mvn.w	r0, #2
 8006d5c:	e7e6      	b.n	8006d2c <osMessageQueueGet+0x10>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 8006d5e:	2900      	cmp	r1, #0
 8006d60:	d0e2      	beq.n	8006d28 <osMessageQueueGet+0xc>
 8006d62:	2c00      	cmp	r4, #0
 8006d64:	d1e0      	bne.n	8006d28 <osMessageQueueGet+0xc>
      yield = pdFALSE;
 8006d66:	aa02      	add	r2, sp, #8
 8006d68:	f842 4d04 	str.w	r4, [r2, #-4]!
      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 8006d6c:	f000 ff5a 	bl	8007c24 <xQueueReceiveFromISR>
 8006d70:	2801      	cmp	r0, #1
 8006d72:	d1f1      	bne.n	8006d58 <osMessageQueueGet+0x3c>
        portYIELD_FROM_ISR (yield);
 8006d74:	9b01      	ldr	r3, [sp, #4]
 8006d76:	b90b      	cbnz	r3, 8006d7c <osMessageQueueGet+0x60>
  stat = osOK;
 8006d78:	2000      	movs	r0, #0
 8006d7a:	e7d7      	b.n	8006d2c <osMessageQueueGet+0x10>
        portYIELD_FROM_ISR (yield);
 8006d7c:	4b06      	ldr	r3, [pc, #24]	; (8006d98 <osMessageQueueGet+0x7c>)
 8006d7e:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8006d82:	601a      	str	r2, [r3, #0]
 8006d84:	f3bf 8f4f 	dsb	sy
 8006d88:	f3bf 8f6f 	isb	sy
 8006d8c:	e7f4      	b.n	8006d78 <osMessageQueueGet+0x5c>
          stat = osErrorTimeout;
 8006d8e:	f06f 0001 	mvn.w	r0, #1
  return (stat);
 8006d92:	e7cb      	b.n	8006d2c <osMessageQueueGet+0x10>
 8006d94:	200016d0 	.word	0x200016d0
 8006d98:	e000ed04 	.word	0xe000ed04

08006d9c <vApplicationGetIdleTaskMemory>:
/*
  vApplicationGetIdleTaskMemory gets called when configSUPPORT_STATIC_ALLOCATION
  equals to 1 and is required for static memory allocation support.
*/
void vApplicationGetIdleTaskMemory (StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskStackBuffer, uint32_t *pulIdleTaskStackSize) {
  *ppxIdleTaskTCBBuffer   = &Idle_TCB;
 8006d9c:	4b03      	ldr	r3, [pc, #12]	; (8006dac <vApplicationGetIdleTaskMemory+0x10>)
 8006d9e:	6003      	str	r3, [r0, #0]
  *ppxIdleTaskStackBuffer = &Idle_Stack[0];
 8006da0:	4b03      	ldr	r3, [pc, #12]	; (8006db0 <vApplicationGetIdleTaskMemory+0x14>)
 8006da2:	600b      	str	r3, [r1, #0]
  *pulIdleTaskStackSize   = (uint32_t)configMINIMAL_STACK_SIZE;
 8006da4:	2380      	movs	r3, #128	; 0x80
 8006da6:	6013      	str	r3, [r2, #0]
}
 8006da8:	4770      	bx	lr
 8006daa:	bf00      	nop
 8006dac:	20001670 	.word	0x20001670
 8006db0:	20001470 	.word	0x20001470

08006db4 <vApplicationGetTimerTaskMemory>:
/*
  vApplicationGetTimerTaskMemory gets called when configSUPPORT_STATIC_ALLOCATION
  equals to 1 and is required for static memory allocation support.
*/
void vApplicationGetTimerTaskMemory (StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **ppxTimerTaskStackBuffer, uint32_t *pulTimerTaskStackSize) {
  *ppxTimerTaskTCBBuffer   = &Timer_TCB;
 8006db4:	4b03      	ldr	r3, [pc, #12]	; (8006dc4 <vApplicationGetTimerTaskMemory+0x10>)
 8006db6:	6003      	str	r3, [r0, #0]
  *ppxTimerTaskStackBuffer = &Timer_Stack[0];
 8006db8:	4b03      	ldr	r3, [pc, #12]	; (8006dc8 <vApplicationGetTimerTaskMemory+0x14>)
 8006dba:	600b      	str	r3, [r1, #0]
  *pulTimerTaskStackSize   = (uint32_t)configTIMER_TASK_STACK_DEPTH;
 8006dbc:	f44f 7380 	mov.w	r3, #256	; 0x100
 8006dc0:	6013      	str	r3, [r2, #0]
}
 8006dc2:	4770      	bx	lr
 8006dc4:	20001ad4 	.word	0x20001ad4
 8006dc8:	200016d4 	.word	0x200016d4

08006dcc <prvInsertBlockIntoFreeList>:
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
}
/*-----------------------------------------------------------*/

static void prvInsertBlockIntoFreeList( BlockLink_t *pxBlockToInsert )
{
 8006dcc:	b510      	push	{r4, lr}
BlockLink_t *pxIterator;
uint8_t *puc;

	/* Iterate through the list until a block is found that has a higher address
	than the block being inserted. */
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 8006dce:	4b0f      	ldr	r3, [pc, #60]	; (8006e0c <prvInsertBlockIntoFreeList+0x40>)
 8006dd0:	681a      	ldr	r2, [r3, #0]
 8006dd2:	4282      	cmp	r2, r0
 8006dd4:	d318      	bcc.n	8006e08 <prvInsertBlockIntoFreeList+0x3c>
	}

	/* Do the block being inserted, and the block it is being inserted after
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxIterator;
	if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
 8006dd6:	685c      	ldr	r4, [r3, #4]
 8006dd8:	1919      	adds	r1, r3, r4
 8006dda:	4288      	cmp	r0, r1
	{
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 8006ddc:	bf01      	itttt	eq
 8006dde:	6841      	ldreq	r1, [r0, #4]
 8006de0:	4618      	moveq	r0, r3
 8006de2:	1909      	addeq	r1, r1, r4
 8006de4:	6059      	streq	r1, [r3, #4]
	}

	/* Do the block being inserted, and the block it is being inserted before
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxBlockToInsert;
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 8006de6:	6844      	ldr	r4, [r0, #4]
 8006de8:	1901      	adds	r1, r0, r4
 8006dea:	428a      	cmp	r2, r1
 8006dec:	d107      	bne.n	8006dfe <prvInsertBlockIntoFreeList+0x32>
	{
		if( pxIterator->pxNextFreeBlock != pxEnd )
 8006dee:	4908      	ldr	r1, [pc, #32]	; (8006e10 <prvInsertBlockIntoFreeList+0x44>)
 8006df0:	6809      	ldr	r1, [r1, #0]
 8006df2:	428a      	cmp	r2, r1
		{
			/* Form one big block from the two blocks. */
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 8006df4:	bf1f      	itttt	ne
 8006df6:	6851      	ldrne	r1, [r2, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 8006df8:	6812      	ldrne	r2, [r2, #0]
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 8006dfa:	1909      	addne	r1, r1, r4
 8006dfc:	6041      	strne	r1, [r0, #4]

	/* If the block being inserted plugged a gab, so was merged with the block
	before and the block after, then it's pxNextFreeBlock pointer will have
	already been set, and should not be set here as that would make it point
	to itself. */
	if( pxIterator != pxBlockToInsert )
 8006dfe:	4298      	cmp	r0, r3
		pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock;
 8006e00:	6002      	str	r2, [r0, #0]
	{
		pxIterator->pxNextFreeBlock = pxBlockToInsert;
 8006e02:	bf18      	it	ne
 8006e04:	6018      	strne	r0, [r3, #0]
	}
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}
}
 8006e06:	bd10      	pop	{r4, pc}
 8006e08:	4613      	mov	r3, r2
 8006e0a:	e7e1      	b.n	8006dd0 <prvInsertBlockIntoFreeList+0x4>
 8006e0c:	20011b44 	.word	0x20011b44
 8006e10:	20001b34 	.word	0x20001b34

08006e14 <pvPortMalloc>:
{
 8006e14:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8006e18:	4604      	mov	r4, r0
	vTaskSuspendAll();
 8006e1a:	f001 f9c5 	bl	80081a8 <vTaskSuspendAll>
		if( pxEnd == NULL )
 8006e1e:	493d      	ldr	r1, [pc, #244]	; (8006f14 <pvPortMalloc+0x100>)
 8006e20:	4d3d      	ldr	r5, [pc, #244]	; (8006f18 <pvPortMalloc+0x104>)
 8006e22:	680b      	ldr	r3, [r1, #0]
 8006e24:	b9fb      	cbnz	r3, 8006e66 <pvPortMalloc+0x52>
	uxAddress = ( size_t ) ucHeap;
 8006e26:	4a3d      	ldr	r2, [pc, #244]	; (8006f1c <pvPortMalloc+0x108>)
	if( ( uxAddress & portBYTE_ALIGNMENT_MASK ) != 0 )
 8006e28:	0756      	lsls	r6, r2, #29
 8006e2a:	f502 3380 	add.w	r3, r2, #65536	; 0x10000
		uxAddress += ( portBYTE_ALIGNMENT - 1 );
 8006e2e:	bf1d      	ittte	ne
 8006e30:	3207      	addne	r2, #7
		uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 8006e32:	f022 0207 	bicne.w	r2, r2, #7
		xTotalHeapSize -= uxAddress - ( size_t ) ucHeap;
 8006e36:	1a9b      	subne	r3, r3, r2
size_t xTotalHeapSize = configTOTAL_HEAP_SIZE;
 8006e38:	f44f 3380 	moveq.w	r3, #65536	; 0x10000
	uxAddress = ( ( size_t ) pucAlignedHeap ) + xTotalHeapSize;
 8006e3c:	4413      	add	r3, r2
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 8006e3e:	4e38      	ldr	r6, [pc, #224]	; (8006f20 <pvPortMalloc+0x10c>)
	uxAddress -= xHeapStructSize;
 8006e40:	3b08      	subs	r3, #8
	uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 8006e42:	f023 0307 	bic.w	r3, r3, #7
	xStart.xBlockSize = ( size_t ) 0;
 8006e46:	2000      	movs	r0, #0
 8006e48:	6070      	str	r0, [r6, #4]
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 8006e4a:	6032      	str	r2, [r6, #0]
	pxEnd->pxNextFreeBlock = NULL;
 8006e4c:	e9c3 0000 	strd	r0, r0, [r3]
	pxFirstFreeBlock->xBlockSize = uxAddress - ( size_t ) pxFirstFreeBlock;
 8006e50:	1a98      	subs	r0, r3, r2
	pxEnd = ( void * ) uxAddress;
 8006e52:	600b      	str	r3, [r1, #0]
	pxFirstFreeBlock->pxNextFreeBlock = pxEnd;
 8006e54:	e9c2 3000 	strd	r3, r0, [r2]
	xMinimumEverFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 8006e58:	4b32      	ldr	r3, [pc, #200]	; (8006f24 <pvPortMalloc+0x110>)
 8006e5a:	6018      	str	r0, [r3, #0]
	xFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 8006e5c:	4b32      	ldr	r3, [pc, #200]	; (8006f28 <pvPortMalloc+0x114>)
 8006e5e:	6018      	str	r0, [r3, #0]
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
 8006e60:	f04f 4300 	mov.w	r3, #2147483648	; 0x80000000
 8006e64:	602b      	str	r3, [r5, #0]
		if( ( xWantedSize & xBlockAllocatedBit ) == 0 )
 8006e66:	682f      	ldr	r7, [r5, #0]
 8006e68:	4227      	tst	r7, r4
 8006e6a:	d14e      	bne.n	8006f0a <pvPortMalloc+0xf6>
			if( xWantedSize > 0 )
 8006e6c:	2c00      	cmp	r4, #0
 8006e6e:	d03f      	beq.n	8006ef0 <pvPortMalloc+0xdc>
				xWantedSize += xHeapStructSize;
 8006e70:	f104 0308 	add.w	r3, r4, #8
				if( ( xWantedSize & portBYTE_ALIGNMENT_MASK ) != 0x00 )
 8006e74:	0758      	lsls	r0, r3, #29
					xWantedSize += ( portBYTE_ALIGNMENT - ( xWantedSize & portBYTE_ALIGNMENT_MASK ) );
 8006e76:	bf1c      	itt	ne
 8006e78:	f023 0307 	bicne.w	r3, r3, #7
 8006e7c:	3308      	addne	r3, #8
			if( ( xWantedSize > 0 ) && ( xWantedSize <= xFreeBytesRemaining ) )
 8006e7e:	2b00      	cmp	r3, #0
 8006e80:	d043      	beq.n	8006f0a <pvPortMalloc+0xf6>
 8006e82:	4a29      	ldr	r2, [pc, #164]	; (8006f28 <pvPortMalloc+0x114>)
 8006e84:	6816      	ldr	r6, [r2, #0]
 8006e86:	429e      	cmp	r6, r3
 8006e88:	4690      	mov	r8, r2
 8006e8a:	d33e      	bcc.n	8006f0a <pvPortMalloc+0xf6>
				pxBlock = xStart.pxNextFreeBlock;
 8006e8c:	4a24      	ldr	r2, [pc, #144]	; (8006f20 <pvPortMalloc+0x10c>)
 8006e8e:	6815      	ldr	r5, [r2, #0]
				while( ( pxBlock->xBlockSize < xWantedSize ) && ( pxBlock->pxNextFreeBlock != NULL ) )
 8006e90:	6868      	ldr	r0, [r5, #4]
 8006e92:	4298      	cmp	r0, r3
 8006e94:	d201      	bcs.n	8006e9a <pvPortMalloc+0x86>
 8006e96:	682c      	ldr	r4, [r5, #0]
 8006e98:	b9a4      	cbnz	r4, 8006ec4 <pvPortMalloc+0xb0>
				if( pxBlock != pxEnd )
 8006e9a:	6809      	ldr	r1, [r1, #0]
 8006e9c:	42a9      	cmp	r1, r5
 8006e9e:	d034      	beq.n	8006f0a <pvPortMalloc+0xf6>
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
 8006ea0:	6829      	ldr	r1, [r5, #0]
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
 8006ea2:	6814      	ldr	r4, [r2, #0]
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
 8006ea4:	6011      	str	r1, [r2, #0]
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
 8006ea6:	1ac2      	subs	r2, r0, r3
 8006ea8:	2a10      	cmp	r2, #16
 8006eaa:	d912      	bls.n	8006ed2 <pvPortMalloc+0xbe>
						pxNewBlockLink = ( void * ) ( ( ( uint8_t * ) pxBlock ) + xWantedSize );
 8006eac:	18e8      	adds	r0, r5, r3
						configASSERT( ( ( ( size_t ) pxNewBlockLink ) & portBYTE_ALIGNMENT_MASK ) == 0 );
 8006eae:	0741      	lsls	r1, r0, #29
 8006eb0:	d00b      	beq.n	8006eca <pvPortMalloc+0xb6>

portFORCE_INLINE static void vPortRaiseBASEPRI( void )
{
uint32_t ulNewBASEPRI;

	__asm volatile
 8006eb2:	f04f 0350 	mov.w	r3, #80	; 0x50
 8006eb6:	f383 8811 	msr	BASEPRI, r3
 8006eba:	f3bf 8f6f 	isb	sy
 8006ebe:	f3bf 8f4f 	dsb	sy
 8006ec2:	e7fe      	b.n	8006ec2 <pvPortMalloc+0xae>
 8006ec4:	462a      	mov	r2, r5
 8006ec6:	4625      	mov	r5, r4
 8006ec8:	e7e2      	b.n	8006e90 <pvPortMalloc+0x7c>
						pxNewBlockLink->xBlockSize = pxBlock->xBlockSize - xWantedSize;
 8006eca:	6042      	str	r2, [r0, #4]
						pxBlock->xBlockSize = xWantedSize;
 8006ecc:	606b      	str	r3, [r5, #4]
						prvInsertBlockIntoFreeList( pxNewBlockLink );
 8006ece:	f7ff ff7d 	bl	8006dcc <prvInsertBlockIntoFreeList>
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 8006ed2:	4914      	ldr	r1, [pc, #80]	; (8006f24 <pvPortMalloc+0x110>)
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 8006ed4:	686b      	ldr	r3, [r5, #4]
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 8006ed6:	6808      	ldr	r0, [r1, #0]
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 8006ed8:	1af6      	subs	r6, r6, r3
					pxBlock->xBlockSize |= xBlockAllocatedBit;
 8006eda:	431f      	orrs	r7, r3
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 8006edc:	4286      	cmp	r6, r0
					pxBlock->pxNextFreeBlock = NULL;
 8006ede:	f04f 0300 	mov.w	r3, #0
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 8006ee2:	f8c8 6000 	str.w	r6, [r8]
						xMinimumEverFreeBytesRemaining = xFreeBytesRemaining;
 8006ee6:	bf38      	it	cc
 8006ee8:	600e      	strcc	r6, [r1, #0]
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
 8006eea:	3408      	adds	r4, #8
					pxBlock->xBlockSize |= xBlockAllocatedBit;
 8006eec:	606f      	str	r7, [r5, #4]
					pxBlock->pxNextFreeBlock = NULL;
 8006eee:	602b      	str	r3, [r5, #0]
	( void ) xTaskResumeAll();
 8006ef0:	f001 f9f8 	bl	80082e4 <xTaskResumeAll>
	configASSERT( ( ( ( size_t ) pvReturn ) & ( size_t ) portBYTE_ALIGNMENT_MASK ) == 0 );
 8006ef4:	0763      	lsls	r3, r4, #29
 8006ef6:	d00a      	beq.n	8006f0e <pvPortMalloc+0xfa>
 8006ef8:	f04f 0350 	mov.w	r3, #80	; 0x50
 8006efc:	f383 8811 	msr	BASEPRI, r3
 8006f00:	f3bf 8f6f 	isb	sy
 8006f04:	f3bf 8f4f 	dsb	sy
 8006f08:	e7fe      	b.n	8006f08 <pvPortMalloc+0xf4>
void *pvReturn = NULL;
 8006f0a:	2400      	movs	r4, #0
 8006f0c:	e7f0      	b.n	8006ef0 <pvPortMalloc+0xdc>
}
 8006f0e:	4620      	mov	r0, r4
 8006f10:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8006f14:	20001b34 	.word	0x20001b34
 8006f18:	20011b38 	.word	0x20011b38
 8006f1c:	20001b38 	.word	0x20001b38
 8006f20:	20011b44 	.word	0x20011b44
 8006f24:	20011b40 	.word	0x20011b40
 8006f28:	20011b3c 	.word	0x20011b3c

08006f2c <vPortFree>:
{
 8006f2c:	b510      	push	{r4, lr}
	if( pv != NULL )
 8006f2e:	4604      	mov	r4, r0
 8006f30:	b370      	cbz	r0, 8006f90 <vPortFree+0x64>
		configASSERT( ( pxLink->xBlockSize & xBlockAllocatedBit ) != 0 );
 8006f32:	4a18      	ldr	r2, [pc, #96]	; (8006f94 <vPortFree+0x68>)
 8006f34:	f850 3c04 	ldr.w	r3, [r0, #-4]
 8006f38:	6812      	ldr	r2, [r2, #0]
 8006f3a:	4213      	tst	r3, r2
 8006f3c:	d108      	bne.n	8006f50 <vPortFree+0x24>
 8006f3e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8006f42:	f383 8811 	msr	BASEPRI, r3
 8006f46:	f3bf 8f6f 	isb	sy
 8006f4a:	f3bf 8f4f 	dsb	sy
 8006f4e:	e7fe      	b.n	8006f4e <vPortFree+0x22>
		configASSERT( pxLink->pxNextFreeBlock == NULL );
 8006f50:	f850 1c08 	ldr.w	r1, [r0, #-8]
 8006f54:	b141      	cbz	r1, 8006f68 <vPortFree+0x3c>
 8006f56:	f04f 0350 	mov.w	r3, #80	; 0x50
 8006f5a:	f383 8811 	msr	BASEPRI, r3
 8006f5e:	f3bf 8f6f 	isb	sy
 8006f62:	f3bf 8f4f 	dsb	sy
 8006f66:	e7fe      	b.n	8006f66 <vPortFree+0x3a>
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
 8006f68:	ea23 0302 	bic.w	r3, r3, r2
 8006f6c:	f840 3c04 	str.w	r3, [r0, #-4]
				vTaskSuspendAll();
 8006f70:	f001 f91a 	bl	80081a8 <vTaskSuspendAll>
					xFreeBytesRemaining += pxLink->xBlockSize;
 8006f74:	4a08      	ldr	r2, [pc, #32]	; (8006f98 <vPortFree+0x6c>)
 8006f76:	f854 3c04 	ldr.w	r3, [r4, #-4]
 8006f7a:	6811      	ldr	r1, [r2, #0]
					prvInsertBlockIntoFreeList( ( ( BlockLink_t * ) pxLink ) );
 8006f7c:	f1a4 0008 	sub.w	r0, r4, #8
					xFreeBytesRemaining += pxLink->xBlockSize;
 8006f80:	440b      	add	r3, r1
 8006f82:	6013      	str	r3, [r2, #0]
					prvInsertBlockIntoFreeList( ( ( BlockLink_t * ) pxLink ) );
 8006f84:	f7ff ff22 	bl	8006dcc <prvInsertBlockIntoFreeList>
}
 8006f88:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
				( void ) xTaskResumeAll();
 8006f8c:	f001 b9aa 	b.w	80082e4 <xTaskResumeAll>
}
 8006f90:	bd10      	pop	{r4, pc}
 8006f92:	bf00      	nop
 8006f94:	20011b38 	.word	0x20011b38
 8006f98:	20011b3c 	.word	0x20011b3c

08006f9c <vListInitialise>:
void vListInitialise( List_t * const pxList )
{
	/* The list structure contains a list item which is used to mark the
	end of the list.  To initialise the list the list end is inserted
	as the only list entry. */
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 8006f9c:	f100 0308 	add.w	r3, r0, #8

	/* The list end value is the highest possible value in the list to
	ensure it remains at the end of the list. */
	pxList->xListEnd.xItemValue = portMAX_DELAY;
 8006fa0:	f04f 32ff 	mov.w	r2, #4294967295
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 8006fa4:	6043      	str	r3, [r0, #4]

	/* The list end next and previous pointers point to itself so we know
	when the list is empty. */
	pxList->xListEnd.pxNext = ( ListItem_t * ) &( pxList->xListEnd );	/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 8006fa6:	e9c0 2302 	strd	r2, r3, [r0, #8]
	pxList->xListEnd.pxPrevious = ( ListItem_t * ) &( pxList->xListEnd );/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 8006faa:	6103      	str	r3, [r0, #16]

	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
 8006fac:	2300      	movs	r3, #0
 8006fae:	6003      	str	r3, [r0, #0]

	/* Write known values into the list if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_LIST_INTEGRITY_CHECK_1_VALUE( pxList );
	listSET_LIST_INTEGRITY_CHECK_2_VALUE( pxList );
}
 8006fb0:	4770      	bx	lr

08006fb2 <vListInitialiseItem>:
/*-----------------------------------------------------------*/

void vListInitialiseItem( ListItem_t * const pxItem )
{
	/* Make sure the list item is not recorded as being on a list. */
	pxItem->pxContainer = NULL;
 8006fb2:	2300      	movs	r3, #0
 8006fb4:	6103      	str	r3, [r0, #16]

	/* Write known values into the list item if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_FIRST_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
	listSET_SECOND_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
}
 8006fb6:	4770      	bx	lr

08006fb8 <vListInsertEnd>:
/*-----------------------------------------------------------*/

void vListInsertEnd( List_t * const pxList, ListItem_t * const pxNewListItem )
{
ListItem_t * const pxIndex = pxList->pxIndex;
 8006fb8:	6843      	ldr	r3, [r0, #4]
	listTEST_LIST_ITEM_INTEGRITY( pxNewListItem );

	/* Insert a new list item into pxList, but rather than sort the list,
	makes the new list item the last item to be removed by a call to
	listGET_OWNER_OF_NEXT_ENTRY(). */
	pxNewListItem->pxNext = pxIndex;
 8006fba:	604b      	str	r3, [r1, #4]
	pxNewListItem->pxPrevious = pxIndex->pxPrevious;
 8006fbc:	689a      	ldr	r2, [r3, #8]
 8006fbe:	608a      	str	r2, [r1, #8]

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	pxIndex->pxPrevious->pxNext = pxNewListItem;
 8006fc0:	689a      	ldr	r2, [r3, #8]
 8006fc2:	6051      	str	r1, [r2, #4]
	pxIndex->pxPrevious = pxNewListItem;
 8006fc4:	6099      	str	r1, [r3, #8]

	/* Remember which list the item is in. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 8006fc6:	6803      	ldr	r3, [r0, #0]
	pxNewListItem->pxContainer = pxList;
 8006fc8:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
 8006fca:	3301      	adds	r3, #1
 8006fcc:	6003      	str	r3, [r0, #0]
}
 8006fce:	4770      	bx	lr

08006fd0 <vListInsert>:
/*-----------------------------------------------------------*/

void vListInsert( List_t * const pxList, ListItem_t * const pxNewListItem )
{
ListItem_t *pxIterator;
const TickType_t xValueOfInsertion = pxNewListItem->xItemValue;
 8006fd0:	680a      	ldr	r2, [r1, #0]
	new list item should be placed after it.  This ensures that TCBs which are
	stored in ready lists (all of which have the same xItemValue value) get a
	share of the CPU.  However, if the xItemValue is the same as the back marker
	the iteration loop below will not end.  Therefore the value is checked
	first, and the algorithm slightly modified if necessary. */
	if( xValueOfInsertion == portMAX_DELAY )
 8006fd2:	1c53      	adds	r3, r2, #1
{
 8006fd4:	b530      	push	{r4, r5, lr}
	if( xValueOfInsertion == portMAX_DELAY )
 8006fd6:	d10a      	bne.n	8006fee <vListInsert+0x1e>
	{
		pxIterator = pxList->xListEnd.pxPrevious;
 8006fd8:	6903      	ldr	r3, [r0, #16]
			/* There is nothing to do here, just iterating to the wanted
			insertion position. */
		}
	}

	pxNewListItem->pxNext = pxIterator->pxNext;
 8006fda:	685a      	ldr	r2, [r3, #4]
 8006fdc:	604a      	str	r2, [r1, #4]
	pxNewListItem->pxNext->pxPrevious = pxNewListItem;
 8006fde:	6091      	str	r1, [r2, #8]
	pxNewListItem->pxPrevious = pxIterator;
 8006fe0:	608b      	str	r3, [r1, #8]
	pxIterator->pxNext = pxNewListItem;
 8006fe2:	6059      	str	r1, [r3, #4]

	/* Remember which list the item is in.  This allows fast removal of the
	item later. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 8006fe4:	6803      	ldr	r3, [r0, #0]
	pxNewListItem->pxContainer = pxList;
 8006fe6:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
 8006fe8:	3301      	adds	r3, #1
 8006fea:	6003      	str	r3, [r0, #0]
}
 8006fec:	bd30      	pop	{r4, r5, pc}
		for( pxIterator = ( ListItem_t * ) &( pxList->xListEnd ); pxIterator->pxNext->xItemValue <= xValueOfInsertion; pxIterator = pxIterator->pxNext ) /*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. *//*lint !e440 The iterator moves to a different value, not xValueOfInsertion. */
 8006fee:	f100 0308 	add.w	r3, r0, #8
 8006ff2:	685c      	ldr	r4, [r3, #4]
 8006ff4:	6825      	ldr	r5, [r4, #0]
 8006ff6:	4295      	cmp	r5, r2
 8006ff8:	d8ef      	bhi.n	8006fda <vListInsert+0xa>
 8006ffa:	4623      	mov	r3, r4
 8006ffc:	e7f9      	b.n	8006ff2 <vListInsert+0x22>

08006ffe <uxListRemove>:
{
/* The list item knows which list it is in.  Obtain the list from the list
item. */
List_t * const pxList = pxItemToRemove->pxContainer;

	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 8006ffe:	e9d0 1201 	ldrd	r1, r2, [r0, #4]
List_t * const pxList = pxItemToRemove->pxContainer;
 8007002:	6903      	ldr	r3, [r0, #16]
	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 8007004:	608a      	str	r2, [r1, #8]
	pxItemToRemove->pxPrevious->pxNext = pxItemToRemove->pxNext;
 8007006:	6882      	ldr	r2, [r0, #8]
 8007008:	6051      	str	r1, [r2, #4]

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	/* Make sure the index is left pointing to a valid item. */
	if( pxList->pxIndex == pxItemToRemove )
 800700a:	6859      	ldr	r1, [r3, #4]
 800700c:	4281      	cmp	r1, r0
	{
		pxList->pxIndex = pxItemToRemove->pxPrevious;
 800700e:	bf08      	it	eq
 8007010:	605a      	streq	r2, [r3, #4]
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}

	pxItemToRemove->pxContainer = NULL;
 8007012:	2200      	movs	r2, #0
 8007014:	6102      	str	r2, [r0, #16]
	( pxList->uxNumberOfItems )--;
 8007016:	681a      	ldr	r2, [r3, #0]
 8007018:	3a01      	subs	r2, #1
 800701a:	601a      	str	r2, [r3, #0]

	return pxList->uxNumberOfItems;
 800701c:	6818      	ldr	r0, [r3, #0]
}
 800701e:	4770      	bx	lr

08007020 <prvTaskExitError>:
	return pxTopOfStack;
}
/*-----------------------------------------------------------*/

static void prvTaskExitError( void )
{
 8007020:	b082      	sub	sp, #8
volatile uint32_t ulDummy = 0;
 8007022:	2300      	movs	r3, #0
 8007024:	9301      	str	r3, [sp, #4]
	its caller as there is nothing to return to.  If a task wants to exit it
	should instead call vTaskDelete( NULL ).

	Artificially force an assert() to be triggered if configASSERT() is
	defined, then stop here so application writers can catch the error. */
	configASSERT( uxCriticalNesting == ~0UL );
 8007026:	4b0d      	ldr	r3, [pc, #52]	; (800705c <prvTaskExitError+0x3c>)
 8007028:	681b      	ldr	r3, [r3, #0]
 800702a:	3301      	adds	r3, #1
 800702c:	d008      	beq.n	8007040 <prvTaskExitError+0x20>
 800702e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007032:	f383 8811 	msr	BASEPRI, r3
 8007036:	f3bf 8f6f 	isb	sy
 800703a:	f3bf 8f4f 	dsb	sy
 800703e:	e7fe      	b.n	800703e <prvTaskExitError+0x1e>
 8007040:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007044:	f383 8811 	msr	BASEPRI, r3
 8007048:	f3bf 8f6f 	isb	sy
 800704c:	f3bf 8f4f 	dsb	sy
	portDISABLE_INTERRUPTS();
	while( ulDummy == 0 )
 8007050:	9b01      	ldr	r3, [sp, #4]
 8007052:	2b00      	cmp	r3, #0
 8007054:	d0fc      	beq.n	8007050 <prvTaskExitError+0x30>
		about code appearing after this function is called - making ulDummy
		volatile makes the compiler think the function could return and
		therefore not output an 'unreachable code' warning for code that appears
		after it. */
	}
}
 8007056:	b002      	add	sp, #8
 8007058:	4770      	bx	lr
 800705a:	bf00      	nop
 800705c:	20000090 	.word	0x20000090

08007060 <prvPortStartFirstTask>:
{
	/* Start the first task.  This also clears the bit that indicates the FPU is
	in use in case the FPU was used before the scheduler was started - which
	would otherwise result in the unnecessary leaving of space in the SVC stack
	for lazy saving of FPU registers. */
	__asm volatile(
 8007060:	4808      	ldr	r0, [pc, #32]	; (8007084 <prvPortStartFirstTask+0x24>)
 8007062:	6800      	ldr	r0, [r0, #0]
 8007064:	6800      	ldr	r0, [r0, #0]
 8007066:	f380 8808 	msr	MSP, r0
 800706a:	f04f 0000 	mov.w	r0, #0
 800706e:	f380 8814 	msr	CONTROL, r0
 8007072:	b662      	cpsie	i
 8007074:	b661      	cpsie	f
 8007076:	f3bf 8f4f 	dsb	sy
 800707a:	f3bf 8f6f 	isb	sy
 800707e:	df00      	svc	0
 8007080:	bf00      	nop
 8007082:	0000      	.short	0x0000
 8007084:	e000ed08 	.word	0xe000ed08

08007088 <vPortEnableVFP>:
/*-----------------------------------------------------------*/

/* This is a naked function. */
static void vPortEnableVFP( void )
{
	__asm volatile
 8007088:	f8df 000c 	ldr.w	r0, [pc, #12]	; 8007098 <vPortEnableVFP+0x10>
 800708c:	6801      	ldr	r1, [r0, #0]
 800708e:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 8007092:	6001      	str	r1, [r0, #0]
 8007094:	4770      	bx	lr
 8007096:	0000      	.short	0x0000
 8007098:	e000ed88 	.word	0xe000ed88

0800709c <pxPortInitialiseStack>:
	*pxTopOfStack = portINITIAL_XPSR;	/* xPSR */
 800709c:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
 80070a0:	f840 3c04 	str.w	r3, [r0, #-4]
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
 80070a4:	4b07      	ldr	r3, [pc, #28]	; (80070c4 <pxPortInitialiseStack+0x28>)
 80070a6:	f840 3c0c 	str.w	r3, [r0, #-12]
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
 80070aa:	f021 0101 	bic.w	r1, r1, #1
	*pxTopOfStack = portINITIAL_EXC_RETURN;
 80070ae:	f06f 0302 	mvn.w	r3, #2
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
 80070b2:	f840 1c08 	str.w	r1, [r0, #-8]
	*pxTopOfStack = ( StackType_t ) pvParameters;	/* R0 */
 80070b6:	f840 2c20 	str.w	r2, [r0, #-32]
	*pxTopOfStack = portINITIAL_EXC_RETURN;
 80070ba:	f840 3c24 	str.w	r3, [r0, #-36]
}
 80070be:	3844      	subs	r0, #68	; 0x44
 80070c0:	4770      	bx	lr
 80070c2:	bf00      	nop
 80070c4:	08007021 	.word	0x08007021
	...

080070d0 <SVC_Handler>:
	__asm volatile (
 80070d0:	4b07      	ldr	r3, [pc, #28]	; (80070f0 <pxCurrentTCBConst2>)
 80070d2:	6819      	ldr	r1, [r3, #0]
 80070d4:	6808      	ldr	r0, [r1, #0]
 80070d6:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80070da:	f380 8809 	msr	PSP, r0
 80070de:	f3bf 8f6f 	isb	sy
 80070e2:	f04f 0000 	mov.w	r0, #0
 80070e6:	f380 8811 	msr	BASEPRI, r0
 80070ea:	4770      	bx	lr
 80070ec:	f3af 8000 	nop.w

080070f0 <pxCurrentTCBConst2>:
 80070f0:	20011b54 	.word	0x20011b54

080070f4 <vPortEnterCritical>:
 80070f4:	f04f 0350 	mov.w	r3, #80	; 0x50
 80070f8:	f383 8811 	msr	BASEPRI, r3
 80070fc:	f3bf 8f6f 	isb	sy
 8007100:	f3bf 8f4f 	dsb	sy
	uxCriticalNesting++;
 8007104:	4a0a      	ldr	r2, [pc, #40]	; (8007130 <vPortEnterCritical+0x3c>)
 8007106:	6813      	ldr	r3, [r2, #0]
 8007108:	3301      	adds	r3, #1
	if( uxCriticalNesting == 1 )
 800710a:	2b01      	cmp	r3, #1
	uxCriticalNesting++;
 800710c:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 1 )
 800710e:	d10d      	bne.n	800712c <vPortEnterCritical+0x38>
		configASSERT( ( portNVIC_INT_CTRL_REG & portVECTACTIVE_MASK ) == 0 );
 8007110:	4b08      	ldr	r3, [pc, #32]	; (8007134 <vPortEnterCritical+0x40>)
 8007112:	681b      	ldr	r3, [r3, #0]
 8007114:	f013 0fff 	tst.w	r3, #255	; 0xff
 8007118:	d008      	beq.n	800712c <vPortEnterCritical+0x38>
 800711a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800711e:	f383 8811 	msr	BASEPRI, r3
 8007122:	f3bf 8f6f 	isb	sy
 8007126:	f3bf 8f4f 	dsb	sy
 800712a:	e7fe      	b.n	800712a <vPortEnterCritical+0x36>
}
 800712c:	4770      	bx	lr
 800712e:	bf00      	nop
 8007130:	20000090 	.word	0x20000090
 8007134:	e000ed04 	.word	0xe000ed04

08007138 <vPortExitCritical>:
	configASSERT( uxCriticalNesting );
 8007138:	4a08      	ldr	r2, [pc, #32]	; (800715c <vPortExitCritical+0x24>)
 800713a:	6813      	ldr	r3, [r2, #0]
 800713c:	b943      	cbnz	r3, 8007150 <vPortExitCritical+0x18>
 800713e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007142:	f383 8811 	msr	BASEPRI, r3
 8007146:	f3bf 8f6f 	isb	sy
 800714a:	f3bf 8f4f 	dsb	sy
 800714e:	e7fe      	b.n	800714e <vPortExitCritical+0x16>
	uxCriticalNesting--;
 8007150:	3b01      	subs	r3, #1
 8007152:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 0 )
 8007154:	b90b      	cbnz	r3, 800715a <vPortExitCritical+0x22>
}
/*-----------------------------------------------------------*/

portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
{
	__asm volatile
 8007156:	f383 8811 	msr	BASEPRI, r3
}
 800715a:	4770      	bx	lr
 800715c:	20000090 	.word	0x20000090

08007160 <PendSV_Handler>:
	__asm volatile
 8007160:	f3ef 8009 	mrs	r0, PSP
 8007164:	f3bf 8f6f 	isb	sy
 8007168:	4b15      	ldr	r3, [pc, #84]	; (80071c0 <pxCurrentTCBConst>)
 800716a:	681a      	ldr	r2, [r3, #0]
 800716c:	f01e 0f10 	tst.w	lr, #16
 8007170:	bf08      	it	eq
 8007172:	ed20 8a10 	vstmdbeq	r0!, {s16-s31}
 8007176:	e920 4ff0 	stmdb	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800717a:	6010      	str	r0, [r2, #0]
 800717c:	e92d 0009 	stmdb	sp!, {r0, r3}
 8007180:	f04f 0050 	mov.w	r0, #80	; 0x50
 8007184:	f380 8811 	msr	BASEPRI, r0
 8007188:	f3bf 8f4f 	dsb	sy
 800718c:	f3bf 8f6f 	isb	sy
 8007190:	f001 f91c 	bl	80083cc <vTaskSwitchContext>
 8007194:	f04f 0000 	mov.w	r0, #0
 8007198:	f380 8811 	msr	BASEPRI, r0
 800719c:	bc09      	pop	{r0, r3}
 800719e:	6819      	ldr	r1, [r3, #0]
 80071a0:	6808      	ldr	r0, [r1, #0]
 80071a2:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80071a6:	f01e 0f10 	tst.w	lr, #16
 80071aa:	bf08      	it	eq
 80071ac:	ecb0 8a10 	vldmiaeq	r0!, {s16-s31}
 80071b0:	f380 8809 	msr	PSP, r0
 80071b4:	f3bf 8f6f 	isb	sy
 80071b8:	4770      	bx	lr
 80071ba:	bf00      	nop
 80071bc:	f3af 8000 	nop.w

080071c0 <pxCurrentTCBConst>:
 80071c0:	20011b54 	.word	0x20011b54

080071c4 <SysTick_Handler>:
{
 80071c4:	b508      	push	{r3, lr}
	__asm volatile
 80071c6:	f04f 0350 	mov.w	r3, #80	; 0x50
 80071ca:	f383 8811 	msr	BASEPRI, r3
 80071ce:	f3bf 8f6f 	isb	sy
 80071d2:	f3bf 8f4f 	dsb	sy
		if( xTaskIncrementTick() != pdFALSE )
 80071d6:	f000 fff5 	bl	80081c4 <xTaskIncrementTick>
 80071da:	b118      	cbz	r0, 80071e4 <SysTick_Handler+0x20>
			portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;
 80071dc:	4b03      	ldr	r3, [pc, #12]	; (80071ec <SysTick_Handler+0x28>)
 80071de:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 80071e2:	601a      	str	r2, [r3, #0]
	__asm volatile
 80071e4:	2300      	movs	r3, #0
 80071e6:	f383 8811 	msr	BASEPRI, r3
}
 80071ea:	bd08      	pop	{r3, pc}
 80071ec:	e000ed04 	.word	0xe000ed04

080071f0 <vPortSetupTimerInterrupt>:
	portNVIC_SYSTICK_CTRL_REG = 0UL;
 80071f0:	4a08      	ldr	r2, [pc, #32]	; (8007214 <vPortSetupTimerInterrupt+0x24>)
	portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
 80071f2:	4909      	ldr	r1, [pc, #36]	; (8007218 <vPortSetupTimerInterrupt+0x28>)
	portNVIC_SYSTICK_CTRL_REG = 0UL;
 80071f4:	2300      	movs	r3, #0
 80071f6:	6013      	str	r3, [r2, #0]
	portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
 80071f8:	600b      	str	r3, [r1, #0]
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
 80071fa:	4b08      	ldr	r3, [pc, #32]	; (800721c <vPortSetupTimerInterrupt+0x2c>)
 80071fc:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 8007200:	681b      	ldr	r3, [r3, #0]
 8007202:	fbb3 f3f1 	udiv	r3, r3, r1
 8007206:	4906      	ldr	r1, [pc, #24]	; (8007220 <vPortSetupTimerInterrupt+0x30>)
 8007208:	3b01      	subs	r3, #1
 800720a:	600b      	str	r3, [r1, #0]
	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT );
 800720c:	2307      	movs	r3, #7
 800720e:	6013      	str	r3, [r2, #0]
}
 8007210:	4770      	bx	lr
 8007212:	bf00      	nop
 8007214:	e000e010 	.word	0xe000e010
 8007218:	e000e018 	.word	0xe000e018
 800721c:	20000084 	.word	0x20000084
 8007220:	e000e014 	.word	0xe000e014

08007224 <xPortStartScheduler>:
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
 8007224:	4b39      	ldr	r3, [pc, #228]	; (800730c <xPortStartScheduler+0xe8>)
 8007226:	4a3a      	ldr	r2, [pc, #232]	; (8007310 <xPortStartScheduler+0xec>)
{
 8007228:	b513      	push	{r0, r1, r4, lr}
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
 800722a:	6819      	ldr	r1, [r3, #0]
 800722c:	4291      	cmp	r1, r2
 800722e:	d108      	bne.n	8007242 <xPortStartScheduler+0x1e>
	__asm volatile
 8007230:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007234:	f383 8811 	msr	BASEPRI, r3
 8007238:	f3bf 8f6f 	isb	sy
 800723c:	f3bf 8f4f 	dsb	sy
 8007240:	e7fe      	b.n	8007240 <xPortStartScheduler+0x1c>
	configASSERT( portCPUID != portCORTEX_M7_r0p0_ID );
 8007242:	681a      	ldr	r2, [r3, #0]
 8007244:	4b33      	ldr	r3, [pc, #204]	; (8007314 <xPortStartScheduler+0xf0>)
 8007246:	429a      	cmp	r2, r3
 8007248:	d108      	bne.n	800725c <xPortStartScheduler+0x38>
 800724a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800724e:	f383 8811 	msr	BASEPRI, r3
 8007252:	f3bf 8f6f 	isb	sy
 8007256:	f3bf 8f4f 	dsb	sy
 800725a:	e7fe      	b.n	800725a <xPortStartScheduler+0x36>
		ulOriginalPriority = *pucFirstUserPriorityRegister;
 800725c:	4b2e      	ldr	r3, [pc, #184]	; (8007318 <xPortStartScheduler+0xf4>)
 800725e:	781a      	ldrb	r2, [r3, #0]
 8007260:	b2d2      	uxtb	r2, r2
 8007262:	9201      	str	r2, [sp, #4]
		*pucFirstUserPriorityRegister = portMAX_8_BIT_VALUE;
 8007264:	22ff      	movs	r2, #255	; 0xff
 8007266:	701a      	strb	r2, [r3, #0]
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
 8007268:	781b      	ldrb	r3, [r3, #0]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 800726a:	4a2c      	ldr	r2, [pc, #176]	; (800731c <xPortStartScheduler+0xf8>)
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
 800726c:	b2db      	uxtb	r3, r3
 800726e:	f88d 3003 	strb.w	r3, [sp, #3]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 8007272:	f89d 3003 	ldrb.w	r3, [sp, #3]
 8007276:	f003 0350 	and.w	r3, r3, #80	; 0x50
 800727a:	7013      	strb	r3, [r2, #0]
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
 800727c:	4b28      	ldr	r3, [pc, #160]	; (8007320 <xPortStartScheduler+0xfc>)
 800727e:	2207      	movs	r2, #7
 8007280:	601a      	str	r2, [r3, #0]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 8007282:	2100      	movs	r1, #0
 8007284:	f89d 0003 	ldrb.w	r0, [sp, #3]
 8007288:	0600      	lsls	r0, r0, #24
 800728a:	f102 34ff 	add.w	r4, r2, #4294967295
 800728e:	d40d      	bmi.n	80072ac <xPortStartScheduler+0x88>
 8007290:	b101      	cbz	r1, 8007294 <xPortStartScheduler+0x70>
 8007292:	601a      	str	r2, [r3, #0]
			configASSERT( ( portMAX_PRIGROUP_BITS - ulMaxPRIGROUPValue ) == configPRIO_BITS );
 8007294:	681a      	ldr	r2, [r3, #0]
 8007296:	2a03      	cmp	r2, #3
 8007298:	d011      	beq.n	80072be <xPortStartScheduler+0x9a>
 800729a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800729e:	f383 8811 	msr	BASEPRI, r3
 80072a2:	f3bf 8f6f 	isb	sy
 80072a6:	f3bf 8f4f 	dsb	sy
 80072aa:	e7fe      	b.n	80072aa <xPortStartScheduler+0x86>
			ucMaxPriorityValue <<= ( uint8_t ) 0x01;
 80072ac:	f89d 2003 	ldrb.w	r2, [sp, #3]
 80072b0:	0052      	lsls	r2, r2, #1
 80072b2:	b2d2      	uxtb	r2, r2
 80072b4:	f88d 2003 	strb.w	r2, [sp, #3]
 80072b8:	2101      	movs	r1, #1
 80072ba:	4622      	mov	r2, r4
 80072bc:	e7e2      	b.n	8007284 <xPortStartScheduler+0x60>
		ulMaxPRIGROUPValue <<= portPRIGROUP_SHIFT;
 80072be:	0212      	lsls	r2, r2, #8
		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
 80072c0:	f402 62e0 	and.w	r2, r2, #1792	; 0x700
 80072c4:	601a      	str	r2, [r3, #0]
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 80072c6:	9b01      	ldr	r3, [sp, #4]
 80072c8:	4a13      	ldr	r2, [pc, #76]	; (8007318 <xPortStartScheduler+0xf4>)
 80072ca:	b2db      	uxtb	r3, r3
 80072cc:	7013      	strb	r3, [r2, #0]
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 80072ce:	4b15      	ldr	r3, [pc, #84]	; (8007324 <xPortStartScheduler+0x100>)
 80072d0:	681a      	ldr	r2, [r3, #0]
 80072d2:	f442 0270 	orr.w	r2, r2, #15728640	; 0xf00000
 80072d6:	601a      	str	r2, [r3, #0]
	portNVIC_SYSPRI2_REG |= portNVIC_SYSTICK_PRI;
 80072d8:	681a      	ldr	r2, [r3, #0]
 80072da:	f042 4270 	orr.w	r2, r2, #4026531840	; 0xf0000000
 80072de:	601a      	str	r2, [r3, #0]
	vPortSetupTimerInterrupt();
 80072e0:	f7ff ff86 	bl	80071f0 <vPortSetupTimerInterrupt>
	uxCriticalNesting = 0;
 80072e4:	4b10      	ldr	r3, [pc, #64]	; (8007328 <xPortStartScheduler+0x104>)
 80072e6:	2400      	movs	r4, #0
 80072e8:	601c      	str	r4, [r3, #0]
	vPortEnableVFP();
 80072ea:	f7ff fecd 	bl	8007088 <vPortEnableVFP>
	*( portFPCCR ) |= portASPEN_AND_LSPEN_BITS;
 80072ee:	4a0f      	ldr	r2, [pc, #60]	; (800732c <xPortStartScheduler+0x108>)
 80072f0:	6813      	ldr	r3, [r2, #0]
 80072f2:	f043 4340 	orr.w	r3, r3, #3221225472	; 0xc0000000
 80072f6:	6013      	str	r3, [r2, #0]
	prvPortStartFirstTask();
 80072f8:	f7ff feb2 	bl	8007060 <prvPortStartFirstTask>
	vTaskSwitchContext();
 80072fc:	f001 f866 	bl	80083cc <vTaskSwitchContext>
	prvTaskExitError();
 8007300:	f7ff fe8e 	bl	8007020 <prvTaskExitError>
}
 8007304:	4620      	mov	r0, r4
 8007306:	b002      	add	sp, #8
 8007308:	bd10      	pop	{r4, pc}
 800730a:	bf00      	nop
 800730c:	e000ed00 	.word	0xe000ed00
 8007310:	410fc271 	.word	0x410fc271
 8007314:	410fc270 	.word	0x410fc270
 8007318:	e000e400 	.word	0xe000e400
 800731c:	20011b4c 	.word	0x20011b4c
 8007320:	20011b50 	.word	0x20011b50
 8007324:	e000ed20 	.word	0xe000ed20
 8007328:	20000090 	.word	0x20000090
 800732c:	e000ef34 	.word	0xe000ef34

08007330 <vPortValidateInterruptPriority>:
	{
	uint32_t ulCurrentInterrupt;
	uint8_t ucCurrentPriority;

		/* Obtain the number of the currently executing interrupt. */
		__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
 8007330:	f3ef 8305 	mrs	r3, IPSR

		/* Is the interrupt number a user defined interrupt? */
		if( ulCurrentInterrupt >= portFIRST_USER_INTERRUPT_NUMBER )
 8007334:	2b0f      	cmp	r3, #15
 8007336:	d90e      	bls.n	8007356 <vPortValidateInterruptPriority+0x26>
		{
			/* Look up the interrupt's priority. */
			ucCurrentPriority = pcInterruptPriorityRegisters[ ulCurrentInterrupt ];
 8007338:	4a10      	ldr	r2, [pc, #64]	; (800737c <vPortValidateInterruptPriority+0x4c>)
 800733a:	5c9b      	ldrb	r3, [r3, r2]
			interrupt entry is as fast and simple as possible.

			The following links provide detailed information:
			http://www.freertos.org/RTOS-Cortex-M3-M4.html
			http://www.freertos.org/FAQHelp.html */
			configASSERT( ucCurrentPriority >= ucMaxSysCallPriority );
 800733c:	4a10      	ldr	r2, [pc, #64]	; (8007380 <vPortValidateInterruptPriority+0x50>)
 800733e:	7812      	ldrb	r2, [r2, #0]
 8007340:	429a      	cmp	r2, r3
 8007342:	d908      	bls.n	8007356 <vPortValidateInterruptPriority+0x26>
 8007344:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007348:	f383 8811 	msr	BASEPRI, r3
 800734c:	f3bf 8f6f 	isb	sy
 8007350:	f3bf 8f4f 	dsb	sy
 8007354:	e7fe      	b.n	8007354 <vPortValidateInterruptPriority+0x24>
		configuration then the correct setting can be achieved on all Cortex-M
		devices by calling NVIC_SetPriorityGrouping( 0 ); before starting the
		scheduler.  Note however that some vendor specific peripheral libraries
		assume a non-zero priority group setting, in which cases using a value
		of zero will result in unpredictable behaviour. */
		configASSERT( ( portAIRCR_REG & portPRIORITY_GROUP_MASK ) <= ulMaxPRIGROUPValue );
 8007356:	4b0b      	ldr	r3, [pc, #44]	; (8007384 <vPortValidateInterruptPriority+0x54>)
 8007358:	4a0b      	ldr	r2, [pc, #44]	; (8007388 <vPortValidateInterruptPriority+0x58>)
 800735a:	681b      	ldr	r3, [r3, #0]
 800735c:	6812      	ldr	r2, [r2, #0]
 800735e:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
 8007362:	4293      	cmp	r3, r2
 8007364:	d908      	bls.n	8007378 <vPortValidateInterruptPriority+0x48>
 8007366:	f04f 0350 	mov.w	r3, #80	; 0x50
 800736a:	f383 8811 	msr	BASEPRI, r3
 800736e:	f3bf 8f6f 	isb	sy
 8007372:	f3bf 8f4f 	dsb	sy
 8007376:	e7fe      	b.n	8007376 <vPortValidateInterruptPriority+0x46>
	}
 8007378:	4770      	bx	lr
 800737a:	bf00      	nop
 800737c:	e000e3f0 	.word	0xe000e3f0
 8007380:	20011b4c 	.word	0x20011b4c
 8007384:	e000ed0c 	.word	0xe000ed0c
 8007388:	20011b50 	.word	0x20011b50

0800738c <prvIsQueueEmpty>:
	taskEXIT_CRITICAL();
}
/*-----------------------------------------------------------*/

static BaseType_t prvIsQueueEmpty( const Queue_t *pxQueue )
{
 800738c:	b510      	push	{r4, lr}
 800738e:	4604      	mov	r4, r0
BaseType_t xReturn;

	taskENTER_CRITICAL();
 8007390:	f7ff feb0 	bl	80070f4 <vPortEnterCritical>
	{
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
 8007394:	6ba4      	ldr	r4, [r4, #56]	; 0x38
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
 8007396:	f7ff fecf 	bl	8007138 <vPortExitCritical>

	return xReturn;
}
 800739a:	fab4 f084 	clz	r0, r4
 800739e:	0940      	lsrs	r0, r0, #5
 80073a0:	bd10      	pop	{r4, pc}

080073a2 <prvCopyDataToQueue>:
{
 80073a2:	b570      	push	{r4, r5, r6, lr}
 80073a4:	4615      	mov	r5, r2
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 80073a6:	6c02      	ldr	r2, [r0, #64]	; 0x40
	uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 80073a8:	6b86      	ldr	r6, [r0, #56]	; 0x38
{
 80073aa:	4604      	mov	r4, r0
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 80073ac:	b942      	cbnz	r2, 80073c0 <prvCopyDataToQueue+0x1e>
			if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 80073ae:	6805      	ldr	r5, [r0, #0]
 80073b0:	b99d      	cbnz	r5, 80073da <prvCopyDataToQueue+0x38>
				xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
 80073b2:	6880      	ldr	r0, [r0, #8]
 80073b4:	f001 f95c 	bl	8008670 <xTaskPriorityDisinherit>
				pxQueue->u.xSemaphore.xMutexHolder = NULL;
 80073b8:	60a5      	str	r5, [r4, #8]
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 80073ba:	3601      	adds	r6, #1
 80073bc:	63a6      	str	r6, [r4, #56]	; 0x38
}
 80073be:	bd70      	pop	{r4, r5, r6, pc}
	else if( xPosition == queueSEND_TO_BACK )
 80073c0:	b96d      	cbnz	r5, 80073de <prvCopyDataToQueue+0x3c>
		( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports, plus previous logic ensures a null pointer can only be passed to memcpy() if the copy size is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 80073c2:	6840      	ldr	r0, [r0, #4]
 80073c4:	f012 f8a0 	bl	8019508 <memcpy>
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 80073c8:	6863      	ldr	r3, [r4, #4]
 80073ca:	6c22      	ldr	r2, [r4, #64]	; 0x40
 80073cc:	4413      	add	r3, r2
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 80073ce:	68a2      	ldr	r2, [r4, #8]
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 80073d0:	6063      	str	r3, [r4, #4]
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 80073d2:	4293      	cmp	r3, r2
 80073d4:	d301      	bcc.n	80073da <prvCopyDataToQueue+0x38>
			pxQueue->pcWriteTo = pxQueue->pcHead;
 80073d6:	6823      	ldr	r3, [r4, #0]
 80073d8:	6063      	str	r3, [r4, #4]
BaseType_t xReturn = pdFALSE;
 80073da:	2000      	movs	r0, #0
 80073dc:	e7ed      	b.n	80073ba <prvCopyDataToQueue+0x18>
		( void ) memcpy( ( void * ) pxQueue->u.xQueue.pcReadFrom, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e9087 !e418 MISRA exception as the casts are only redundant for some ports.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes.  Assert checks null pointer only used when length is 0. */
 80073de:	68c0      	ldr	r0, [r0, #12]
 80073e0:	f012 f892 	bl	8019508 <memcpy>
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 80073e4:	6c23      	ldr	r3, [r4, #64]	; 0x40
 80073e6:	68e2      	ldr	r2, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 80073e8:	6821      	ldr	r1, [r4, #0]
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 80073ea:	425b      	negs	r3, r3
 80073ec:	441a      	add	r2, r3
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 80073ee:	428a      	cmp	r2, r1
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 80073f0:	60e2      	str	r2, [r4, #12]
			pxQueue->u.xQueue.pcReadFrom = ( pxQueue->u.xQueue.pcTail - pxQueue->uxItemSize );
 80073f2:	bf3e      	ittt	cc
 80073f4:	68a2      	ldrcc	r2, [r4, #8]
 80073f6:	189b      	addcc	r3, r3, r2
 80073f8:	60e3      	strcc	r3, [r4, #12]
		if( xPosition == queueOVERWRITE )
 80073fa:	2d02      	cmp	r5, #2
 80073fc:	d1ed      	bne.n	80073da <prvCopyDataToQueue+0x38>
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 80073fe:	b10e      	cbz	r6, 8007404 <prvCopyDataToQueue+0x62>
				--uxMessagesWaiting;
 8007400:	3e01      	subs	r6, #1
 8007402:	e7ea      	b.n	80073da <prvCopyDataToQueue+0x38>
BaseType_t xReturn = pdFALSE;
 8007404:	4630      	mov	r0, r6
 8007406:	e7d8      	b.n	80073ba <prvCopyDataToQueue+0x18>

08007408 <prvCopyDataFromQueue>:
{
 8007408:	4603      	mov	r3, r0
 800740a:	b410      	push	{r4}
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 800740c:	6c1a      	ldr	r2, [r3, #64]	; 0x40
{
 800740e:	4608      	mov	r0, r1
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 8007410:	b162      	cbz	r2, 800742c <prvCopyDataFromQueue+0x24>
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8007412:	68d9      	ldr	r1, [r3, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 8007414:	689c      	ldr	r4, [r3, #8]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8007416:	4411      	add	r1, r2
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 8007418:	42a1      	cmp	r1, r4
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800741a:	60d9      	str	r1, [r3, #12]
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
 800741c:	bf24      	itt	cs
 800741e:	6819      	ldrcs	r1, [r3, #0]
 8007420:	60d9      	strcs	r1, [r3, #12]
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 8007422:	68d9      	ldr	r1, [r3, #12]
}
 8007424:	f85d 4b04 	ldr.w	r4, [sp], #4
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 8007428:	f012 b86e 	b.w	8019508 <memcpy>
}
 800742c:	f85d 4b04 	ldr.w	r4, [sp], #4
 8007430:	4770      	bx	lr

08007432 <prvUnlockQueue>:
{
 8007432:	b570      	push	{r4, r5, r6, lr}
 8007434:	4604      	mov	r4, r0
	taskENTER_CRITICAL();
 8007436:	f7ff fe5d 	bl	80070f4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800743a:	f894 5045 	ldrb.w	r5, [r4, #69]	; 0x45
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800743e:	f104 0624 	add.w	r6, r4, #36	; 0x24
		int8_t cTxLock = pxQueue->cTxLock;
 8007442:	b26d      	sxtb	r5, r5
		while( cTxLock > queueLOCKED_UNMODIFIED )
 8007444:	2d00      	cmp	r5, #0
 8007446:	dc14      	bgt.n	8007472 <prvUnlockQueue+0x40>
		pxQueue->cTxLock = queueUNLOCKED;
 8007448:	23ff      	movs	r3, #255	; 0xff
 800744a:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800744e:	f7ff fe73 	bl	8007138 <vPortExitCritical>
	taskENTER_CRITICAL();
 8007452:	f7ff fe4f 	bl	80070f4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 8007456:	f894 5044 	ldrb.w	r5, [r4, #68]	; 0x44
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800745a:	f104 0610 	add.w	r6, r4, #16
		int8_t cRxLock = pxQueue->cRxLock;
 800745e:	b26d      	sxtb	r5, r5
		while( cRxLock > queueLOCKED_UNMODIFIED )
 8007460:	2d00      	cmp	r5, #0
 8007462:	dc12      	bgt.n	800748a <prvUnlockQueue+0x58>
		pxQueue->cRxLock = queueUNLOCKED;
 8007464:	23ff      	movs	r3, #255	; 0xff
 8007466:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
}
 800746a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
	taskEXIT_CRITICAL();
 800746e:	f7ff be63 	b.w	8007138 <vPortExitCritical>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8007472:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8007474:	2b00      	cmp	r3, #0
 8007476:	d0e7      	beq.n	8007448 <prvUnlockQueue+0x16>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8007478:	4630      	mov	r0, r6
 800747a:	f001 f81b 	bl	80084b4 <xTaskRemoveFromEventList>
 800747e:	b108      	cbz	r0, 8007484 <prvUnlockQueue+0x52>
						vTaskMissedYield();
 8007480:	f001 f8a0 	bl	80085c4 <vTaskMissedYield>
 8007484:	3d01      	subs	r5, #1
 8007486:	b26d      	sxtb	r5, r5
 8007488:	e7dc      	b.n	8007444 <prvUnlockQueue+0x12>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800748a:	6923      	ldr	r3, [r4, #16]
 800748c:	2b00      	cmp	r3, #0
 800748e:	d0e9      	beq.n	8007464 <prvUnlockQueue+0x32>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8007490:	4630      	mov	r0, r6
 8007492:	f001 f80f 	bl	80084b4 <xTaskRemoveFromEventList>
 8007496:	b108      	cbz	r0, 800749c <prvUnlockQueue+0x6a>
					vTaskMissedYield();
 8007498:	f001 f894 	bl	80085c4 <vTaskMissedYield>
 800749c:	3d01      	subs	r5, #1
 800749e:	b26d      	sxtb	r5, r5
 80074a0:	e7de      	b.n	8007460 <prvUnlockQueue+0x2e>
	...

080074a4 <xQueueGenericReset>:
{
 80074a4:	b538      	push	{r3, r4, r5, lr}
 80074a6:	460d      	mov	r5, r1
	configASSERT( pxQueue );
 80074a8:	4604      	mov	r4, r0
 80074aa:	b940      	cbnz	r0, 80074be <xQueueGenericReset+0x1a>
 80074ac:	f04f 0350 	mov.w	r3, #80	; 0x50
 80074b0:	f383 8811 	msr	BASEPRI, r3
 80074b4:	f3bf 8f6f 	isb	sy
 80074b8:	f3bf 8f4f 	dsb	sy
 80074bc:	e7fe      	b.n	80074bc <xQueueGenericReset+0x18>
	taskENTER_CRITICAL();
 80074be:	f7ff fe19 	bl	80070f4 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 80074c2:	e9d4 300f 	ldrd	r3, r0, [r4, #60]	; 0x3c
 80074c6:	6822      	ldr	r2, [r4, #0]
		pxQueue->pcWriteTo = pxQueue->pcHead;
 80074c8:	6062      	str	r2, [r4, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 80074ca:	4343      	muls	r3, r0
 80074cc:	18d1      	adds	r1, r2, r3
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 80074ce:	1a1b      	subs	r3, r3, r0
 80074d0:	4413      	add	r3, r2
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 80074d2:	60a1      	str	r1, [r4, #8]
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 80074d4:	60e3      	str	r3, [r4, #12]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 80074d6:	2100      	movs	r1, #0
		pxQueue->cRxLock = queueUNLOCKED;
 80074d8:	23ff      	movs	r3, #255	; 0xff
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 80074da:	63a1      	str	r1, [r4, #56]	; 0x38
		pxQueue->cRxLock = queueUNLOCKED;
 80074dc:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
		pxQueue->cTxLock = queueUNLOCKED;
 80074e0:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
		if( xNewQueue == pdFALSE )
 80074e4:	b995      	cbnz	r5, 800750c <xQueueGenericReset+0x68>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 80074e6:	6923      	ldr	r3, [r4, #16]
 80074e8:	b163      	cbz	r3, 8007504 <xQueueGenericReset+0x60>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 80074ea:	f104 0010 	add.w	r0, r4, #16
 80074ee:	f000 ffe1 	bl	80084b4 <xTaskRemoveFromEventList>
 80074f2:	b138      	cbz	r0, 8007504 <xQueueGenericReset+0x60>
					queueYIELD_IF_USING_PREEMPTION();
 80074f4:	4b0a      	ldr	r3, [pc, #40]	; (8007520 <xQueueGenericReset+0x7c>)
 80074f6:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 80074fa:	601a      	str	r2, [r3, #0]
 80074fc:	f3bf 8f4f 	dsb	sy
 8007500:	f3bf 8f6f 	isb	sy
	taskEXIT_CRITICAL();
 8007504:	f7ff fe18 	bl	8007138 <vPortExitCritical>
}
 8007508:	2001      	movs	r0, #1
 800750a:	bd38      	pop	{r3, r4, r5, pc}
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 800750c:	f104 0010 	add.w	r0, r4, #16
 8007510:	f7ff fd44 	bl	8006f9c <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 8007514:	f104 0024 	add.w	r0, r4, #36	; 0x24
 8007518:	f7ff fd40 	bl	8006f9c <vListInitialise>
 800751c:	e7f2      	b.n	8007504 <xQueueGenericReset+0x60>
 800751e:	bf00      	nop
 8007520:	e000ed04 	.word	0xe000ed04

08007524 <xQueueGenericCreateStatic>:
	{
 8007524:	b513      	push	{r0, r1, r4, lr}
 8007526:	461c      	mov	r4, r3
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 8007528:	b940      	cbnz	r0, 800753c <xQueueGenericCreateStatic+0x18>
 800752a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800752e:	f383 8811 	msr	BASEPRI, r3
 8007532:	f3bf 8f6f 	isb	sy
 8007536:	f3bf 8f4f 	dsb	sy
 800753a:	e7fe      	b.n	800753a <xQueueGenericCreateStatic+0x16>
		configASSERT( pxStaticQueue != NULL );
 800753c:	b943      	cbnz	r3, 8007550 <xQueueGenericCreateStatic+0x2c>
 800753e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007542:	f383 8811 	msr	BASEPRI, r3
 8007546:	f3bf 8f6f 	isb	sy
 800754a:	f3bf 8f4f 	dsb	sy
 800754e:	e7fe      	b.n	800754e <xQueueGenericCreateStatic+0x2a>
		configASSERT( !( ( pucQueueStorage != NULL ) && ( uxItemSize == 0 ) ) );
 8007550:	b14a      	cbz	r2, 8007566 <xQueueGenericCreateStatic+0x42>
 8007552:	b991      	cbnz	r1, 800757a <xQueueGenericCreateStatic+0x56>
 8007554:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007558:	f383 8811 	msr	BASEPRI, r3
 800755c:	f3bf 8f6f 	isb	sy
 8007560:	f3bf 8f4f 	dsb	sy
 8007564:	e7fe      	b.n	8007564 <xQueueGenericCreateStatic+0x40>
		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
 8007566:	b141      	cbz	r1, 800757a <xQueueGenericCreateStatic+0x56>
 8007568:	f04f 0350 	mov.w	r3, #80	; 0x50
 800756c:	f383 8811 	msr	BASEPRI, r3
 8007570:	f3bf 8f6f 	isb	sy
 8007574:	f3bf 8f4f 	dsb	sy
 8007578:	e7fe      	b.n	8007578 <xQueueGenericCreateStatic+0x54>
			volatile size_t xSize = sizeof( StaticQueue_t );
 800757a:	2350      	movs	r3, #80	; 0x50
 800757c:	9301      	str	r3, [sp, #4]
			configASSERT( xSize == sizeof( Queue_t ) );
 800757e:	9b01      	ldr	r3, [sp, #4]
 8007580:	2b50      	cmp	r3, #80	; 0x50
 8007582:	d008      	beq.n	8007596 <xQueueGenericCreateStatic+0x72>
 8007584:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007588:	f383 8811 	msr	BASEPRI, r3
 800758c:	f3bf 8f6f 	isb	sy
 8007590:	f3bf 8f4f 	dsb	sy
 8007594:	e7fe      	b.n	8007594 <xQueueGenericCreateStatic+0x70>
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
 8007596:	2900      	cmp	r1, #0
 8007598:	bf08      	it	eq
 800759a:	4622      	moveq	r2, r4
			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
 800759c:	9b01      	ldr	r3, [sp, #4]
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
 800759e:	6022      	str	r2, [r4, #0]
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 80075a0:	2301      	movs	r3, #1
	pxNewQueue->uxItemSize = uxItemSize;
 80075a2:	e9c4 010f 	strd	r0, r1, [r4, #60]	; 0x3c
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 80075a6:	f884 3046 	strb.w	r3, [r4, #70]	; 0x46
	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 80075aa:	4619      	mov	r1, r3
 80075ac:	4620      	mov	r0, r4
 80075ae:	f7ff ff79 	bl	80074a4 <xQueueGenericReset>
		pxNewQueue->ucQueueType = ucQueueType;
 80075b2:	f89d 3010 	ldrb.w	r3, [sp, #16]
 80075b6:	f884 304c 	strb.w	r3, [r4, #76]	; 0x4c
	}
 80075ba:	4620      	mov	r0, r4
 80075bc:	b002      	add	sp, #8
 80075be:	bd10      	pop	{r4, pc}

080075c0 <xQueueGenericCreate>:
	{
 80075c0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80075c2:	460d      	mov	r5, r1
 80075c4:	4617      	mov	r7, r2
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 80075c6:	4606      	mov	r6, r0
 80075c8:	b940      	cbnz	r0, 80075dc <xQueueGenericCreate+0x1c>
 80075ca:	f04f 0350 	mov.w	r3, #80	; 0x50
 80075ce:	f383 8811 	msr	BASEPRI, r3
 80075d2:	f3bf 8f6f 	isb	sy
 80075d6:	f3bf 8f4f 	dsb	sy
 80075da:	e7fe      	b.n	80075da <xQueueGenericCreate+0x1a>
			xQueueSizeInBytes = ( size_t ) ( uxQueueLength * uxItemSize ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 80075dc:	4348      	muls	r0, r1
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !e9079 see comment above. */
 80075de:	3050      	adds	r0, #80	; 0x50
 80075e0:	f7ff fc18 	bl	8006e14 <pvPortMalloc>
		if( pxNewQueue != NULL )
 80075e4:	4604      	mov	r4, r0
 80075e6:	b160      	cbz	r0, 8007602 <xQueueGenericCreate+0x42>
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
 80075e8:	2300      	movs	r3, #0
 80075ea:	f880 3046 	strb.w	r3, [r0, #70]	; 0x46
	if( uxItemSize == ( UBaseType_t ) 0 )
 80075ee:	b955      	cbnz	r5, 8007606 <xQueueGenericCreate+0x46>
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
 80075f0:	6020      	str	r0, [r4, #0]
	pxNewQueue->uxItemSize = uxItemSize;
 80075f2:	e9c4 650f 	strd	r6, r5, [r4, #60]	; 0x3c
	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 80075f6:	2101      	movs	r1, #1
 80075f8:	4620      	mov	r0, r4
 80075fa:	f7ff ff53 	bl	80074a4 <xQueueGenericReset>
		pxNewQueue->ucQueueType = ucQueueType;
 80075fe:	f884 704c 	strb.w	r7, [r4, #76]	; 0x4c
	}
 8007602:	4620      	mov	r0, r4
 8007604:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
			pucQueueStorage += sizeof( Queue_t ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8007606:	f100 0350 	add.w	r3, r0, #80	; 0x50
		pxNewQueue->pcHead = ( int8_t * ) pucQueueStorage;
 800760a:	6003      	str	r3, [r0, #0]
 800760c:	e7f1      	b.n	80075f2 <xQueueGenericCreate+0x32>

0800760e <xQueueCreateCountingSemaphoreStatic>:
	{
 800760e:	b513      	push	{r0, r1, r4, lr}
 8007610:	4613      	mov	r3, r2
 8007612:	460c      	mov	r4, r1
		configASSERT( uxMaxCount != 0 );
 8007614:	b940      	cbnz	r0, 8007628 <xQueueCreateCountingSemaphoreStatic+0x1a>
 8007616:	f04f 0350 	mov.w	r3, #80	; 0x50
 800761a:	f383 8811 	msr	BASEPRI, r3
 800761e:	f3bf 8f6f 	isb	sy
 8007622:	f3bf 8f4f 	dsb	sy
 8007626:	e7fe      	b.n	8007626 <xQueueCreateCountingSemaphoreStatic+0x18>
		configASSERT( uxInitialCount <= uxMaxCount );
 8007628:	4288      	cmp	r0, r1
 800762a:	d208      	bcs.n	800763e <xQueueCreateCountingSemaphoreStatic+0x30>
 800762c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007630:	f383 8811 	msr	BASEPRI, r3
 8007634:	f3bf 8f6f 	isb	sy
 8007638:	f3bf 8f4f 	dsb	sy
 800763c:	e7fe      	b.n	800763c <xQueueCreateCountingSemaphoreStatic+0x2e>
		xHandle = xQueueGenericCreateStatic( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, NULL, pxStaticQueue, queueQUEUE_TYPE_COUNTING_SEMAPHORE );
 800763e:	2202      	movs	r2, #2
 8007640:	9200      	str	r2, [sp, #0]
 8007642:	2200      	movs	r2, #0
 8007644:	4611      	mov	r1, r2
 8007646:	f7ff ff6d 	bl	8007524 <xQueueGenericCreateStatic>
		if( xHandle != NULL )
 800764a:	b100      	cbz	r0, 800764e <xQueueCreateCountingSemaphoreStatic+0x40>
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 800764c:	6384      	str	r4, [r0, #56]	; 0x38
	}
 800764e:	b002      	add	sp, #8
 8007650:	bd10      	pop	{r4, pc}

08007652 <xQueueCreateCountingSemaphore>:
	{
 8007652:	b510      	push	{r4, lr}
 8007654:	460c      	mov	r4, r1
		configASSERT( uxMaxCount != 0 );
 8007656:	b940      	cbnz	r0, 800766a <xQueueCreateCountingSemaphore+0x18>
 8007658:	f04f 0350 	mov.w	r3, #80	; 0x50
 800765c:	f383 8811 	msr	BASEPRI, r3
 8007660:	f3bf 8f6f 	isb	sy
 8007664:	f3bf 8f4f 	dsb	sy
 8007668:	e7fe      	b.n	8007668 <xQueueCreateCountingSemaphore+0x16>
		configASSERT( uxInitialCount <= uxMaxCount );
 800766a:	4288      	cmp	r0, r1
 800766c:	d208      	bcs.n	8007680 <xQueueCreateCountingSemaphore+0x2e>
 800766e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007672:	f383 8811 	msr	BASEPRI, r3
 8007676:	f3bf 8f6f 	isb	sy
 800767a:	f3bf 8f4f 	dsb	sy
 800767e:	e7fe      	b.n	800767e <xQueueCreateCountingSemaphore+0x2c>
		xHandle = xQueueGenericCreate( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, queueQUEUE_TYPE_COUNTING_SEMAPHORE );
 8007680:	2202      	movs	r2, #2
 8007682:	2100      	movs	r1, #0
 8007684:	f7ff ff9c 	bl	80075c0 <xQueueGenericCreate>
		if( xHandle != NULL )
 8007688:	b100      	cbz	r0, 800768c <xQueueCreateCountingSemaphore+0x3a>
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 800768a:	6384      	str	r4, [r0, #56]	; 0x38
	}
 800768c:	bd10      	pop	{r4, pc}
	...

08007690 <xQueueGenericSend>:
{
 8007690:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8007694:	4688      	mov	r8, r1
 8007696:	9201      	str	r2, [sp, #4]
 8007698:	461f      	mov	r7, r3
	configASSERT( pxQueue );
 800769a:	4604      	mov	r4, r0
 800769c:	b940      	cbnz	r0, 80076b0 <xQueueGenericSend+0x20>
 800769e:	f04f 0350 	mov.w	r3, #80	; 0x50
 80076a2:	f383 8811 	msr	BASEPRI, r3
 80076a6:	f3bf 8f6f 	isb	sy
 80076aa:	f3bf 8f4f 	dsb	sy
 80076ae:	e7fe      	b.n	80076ae <xQueueGenericSend+0x1e>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 80076b0:	b951      	cbnz	r1, 80076c8 <xQueueGenericSend+0x38>
 80076b2:	6c03      	ldr	r3, [r0, #64]	; 0x40
 80076b4:	b143      	cbz	r3, 80076c8 <xQueueGenericSend+0x38>
 80076b6:	f04f 0350 	mov.w	r3, #80	; 0x50
 80076ba:	f383 8811 	msr	BASEPRI, r3
 80076be:	f3bf 8f6f 	isb	sy
 80076c2:	f3bf 8f4f 	dsb	sy
 80076c6:	e7fe      	b.n	80076c6 <xQueueGenericSend+0x36>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 80076c8:	2f02      	cmp	r7, #2
 80076ca:	d10b      	bne.n	80076e4 <xQueueGenericSend+0x54>
 80076cc:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 80076ce:	2b01      	cmp	r3, #1
 80076d0:	d008      	beq.n	80076e4 <xQueueGenericSend+0x54>
 80076d2:	f04f 0350 	mov.w	r3, #80	; 0x50
 80076d6:	f383 8811 	msr	BASEPRI, r3
 80076da:	f3bf 8f6f 	isb	sy
 80076de:	f3bf 8f4f 	dsb	sy
 80076e2:	e7fe      	b.n	80076e2 <xQueueGenericSend+0x52>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 80076e4:	f000 ff74 	bl	80085d0 <xTaskGetSchedulerState>
 80076e8:	b950      	cbnz	r0, 8007700 <xQueueGenericSend+0x70>
 80076ea:	9e01      	ldr	r6, [sp, #4]
 80076ec:	b14e      	cbz	r6, 8007702 <xQueueGenericSend+0x72>
 80076ee:	f04f 0350 	mov.w	r3, #80	; 0x50
 80076f2:	f383 8811 	msr	BASEPRI, r3
 80076f6:	f3bf 8f6f 	isb	sy
 80076fa:	f3bf 8f4f 	dsb	sy
 80076fe:	e7fe      	b.n	80076fe <xQueueGenericSend+0x6e>
 8007700:	2600      	movs	r6, #0
		prvLockQueue( pxQueue );
 8007702:	f04f 0900 	mov.w	r9, #0
					portYIELD_WITHIN_API();
 8007706:	f8df a0e8 	ldr.w	sl, [pc, #232]	; 80077f0 <xQueueGenericSend+0x160>
 800770a:	e037      	b.n	800777c <xQueueGenericSend+0xec>
				if( xTicksToWait == ( TickType_t ) 0 )
 800770c:	9d01      	ldr	r5, [sp, #4]
 800770e:	b91d      	cbnz	r5, 8007718 <xQueueGenericSend+0x88>
					taskEXIT_CRITICAL();
 8007710:	f7ff fd12 	bl	8007138 <vPortExitCritical>
			return errQUEUE_FULL;
 8007714:	2000      	movs	r0, #0
 8007716:	e050      	b.n	80077ba <xQueueGenericSend+0x12a>
				else if( xEntryTimeSet == pdFALSE )
 8007718:	b916      	cbnz	r6, 8007720 <xQueueGenericSend+0x90>
					vTaskInternalSetTimeOutState( &xTimeOut );
 800771a:	a802      	add	r0, sp, #8
 800771c:	f000 ff0a 	bl	8008534 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 8007720:	f7ff fd0a 	bl	8007138 <vPortExitCritical>
		vTaskSuspendAll();
 8007724:	f000 fd40 	bl	80081a8 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 8007728:	f7ff fce4 	bl	80070f4 <vPortEnterCritical>
 800772c:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 8007730:	2bff      	cmp	r3, #255	; 0xff
 8007732:	bf08      	it	eq
 8007734:	f884 9044 	strbeq.w	r9, [r4, #68]	; 0x44
 8007738:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800773c:	2bff      	cmp	r3, #255	; 0xff
 800773e:	bf08      	it	eq
 8007740:	f884 9045 	strbeq.w	r9, [r4, #69]	; 0x45
 8007744:	f7ff fcf8 	bl	8007138 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 8007748:	a901      	add	r1, sp, #4
 800774a:	a802      	add	r0, sp, #8
 800774c:	f000 fefe 	bl	800854c <xTaskCheckForTimeOut>
 8007750:	2800      	cmp	r0, #0
 8007752:	d146      	bne.n	80077e2 <xQueueGenericSend+0x152>

static BaseType_t prvIsQueueFull( const Queue_t *pxQueue )
{
BaseType_t xReturn;

	taskENTER_CRITICAL();
 8007754:	f7ff fcce 	bl	80070f4 <vPortEnterCritical>
	{
		if( pxQueue->uxMessagesWaiting == pxQueue->uxLength )
 8007758:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800775a:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800775c:	429a      	cmp	r2, r3
 800775e:	d12f      	bne.n	80077c0 <xQueueGenericSend+0x130>
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
 8007760:	f7ff fcea 	bl	8007138 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
 8007764:	9901      	ldr	r1, [sp, #4]
 8007766:	f104 0010 	add.w	r0, r4, #16
 800776a:	f000 fe6b 	bl	8008444 <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 800776e:	4620      	mov	r0, r4
 8007770:	f7ff fe5f 	bl	8007432 <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 8007774:	f000 fdb6 	bl	80082e4 <xTaskResumeAll>
 8007778:	b350      	cbz	r0, 80077d0 <xQueueGenericSend+0x140>
 800777a:	2601      	movs	r6, #1
		taskENTER_CRITICAL();
 800777c:	f7ff fcba 	bl	80070f4 <vPortEnterCritical>
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 8007780:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8007782:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8007784:	429a      	cmp	r2, r3
 8007786:	d301      	bcc.n	800778c <xQueueGenericSend+0xfc>
 8007788:	2f02      	cmp	r7, #2
 800778a:	d1bf      	bne.n	800770c <xQueueGenericSend+0x7c>
					xYieldRequired = prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 800778c:	463a      	mov	r2, r7
 800778e:	4641      	mov	r1, r8
 8007790:	4620      	mov	r0, r4
 8007792:	f7ff fe06 	bl	80073a2 <prvCopyDataToQueue>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8007796:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8007798:	b11b      	cbz	r3, 80077a2 <xQueueGenericSend+0x112>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800779a:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800779e:	f000 fe89 	bl	80084b4 <xTaskRemoveFromEventList>
					else if( xYieldRequired != pdFALSE )
 80077a2:	b138      	cbz	r0, 80077b4 <xQueueGenericSend+0x124>
						queueYIELD_IF_USING_PREEMPTION();
 80077a4:	4b12      	ldr	r3, [pc, #72]	; (80077f0 <xQueueGenericSend+0x160>)
 80077a6:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 80077aa:	601a      	str	r2, [r3, #0]
 80077ac:	f3bf 8f4f 	dsb	sy
 80077b0:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 80077b4:	f7ff fcc0 	bl	8007138 <vPortExitCritical>
				return pdPASS;
 80077b8:	2001      	movs	r0, #1
}
 80077ba:	b004      	add	sp, #16
 80077bc:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
	taskEXIT_CRITICAL();
 80077c0:	f7ff fcba 	bl	8007138 <vPortExitCritical>
				prvUnlockQueue( pxQueue );
 80077c4:	4620      	mov	r0, r4
 80077c6:	f7ff fe34 	bl	8007432 <prvUnlockQueue>
				( void ) xTaskResumeAll();
 80077ca:	f000 fd8b 	bl	80082e4 <xTaskResumeAll>
 80077ce:	e7d4      	b.n	800777a <xQueueGenericSend+0xea>
					portYIELD_WITHIN_API();
 80077d0:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
 80077d4:	f8ca 3000 	str.w	r3, [sl]
 80077d8:	f3bf 8f4f 	dsb	sy
 80077dc:	f3bf 8f6f 	isb	sy
 80077e0:	e7cb      	b.n	800777a <xQueueGenericSend+0xea>
			prvUnlockQueue( pxQueue );
 80077e2:	4620      	mov	r0, r4
 80077e4:	f7ff fe25 	bl	8007432 <prvUnlockQueue>
			( void ) xTaskResumeAll();
 80077e8:	f000 fd7c 	bl	80082e4 <xTaskResumeAll>
 80077ec:	e792      	b.n	8007714 <xQueueGenericSend+0x84>
 80077ee:	bf00      	nop
 80077f0:	e000ed04 	.word	0xe000ed04

080077f4 <xQueueGenericSendFromISR>:
{
 80077f4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80077f8:	4689      	mov	r9, r1
 80077fa:	4690      	mov	r8, r2
 80077fc:	461f      	mov	r7, r3
	configASSERT( pxQueue );
 80077fe:	4604      	mov	r4, r0
 8007800:	b940      	cbnz	r0, 8007814 <xQueueGenericSendFromISR+0x20>
 8007802:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007806:	f383 8811 	msr	BASEPRI, r3
 800780a:	f3bf 8f6f 	isb	sy
 800780e:	f3bf 8f4f 	dsb	sy
 8007812:	e7fe      	b.n	8007812 <xQueueGenericSendFromISR+0x1e>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 8007814:	b951      	cbnz	r1, 800782c <xQueueGenericSendFromISR+0x38>
 8007816:	6c03      	ldr	r3, [r0, #64]	; 0x40
 8007818:	b143      	cbz	r3, 800782c <xQueueGenericSendFromISR+0x38>
 800781a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800781e:	f383 8811 	msr	BASEPRI, r3
 8007822:	f3bf 8f6f 	isb	sy
 8007826:	f3bf 8f4f 	dsb	sy
 800782a:	e7fe      	b.n	800782a <xQueueGenericSendFromISR+0x36>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 800782c:	2f02      	cmp	r7, #2
 800782e:	d10b      	bne.n	8007848 <xQueueGenericSendFromISR+0x54>
 8007830:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8007832:	2b01      	cmp	r3, #1
 8007834:	d008      	beq.n	8007848 <xQueueGenericSendFromISR+0x54>
 8007836:	f04f 0350 	mov.w	r3, #80	; 0x50
 800783a:	f383 8811 	msr	BASEPRI, r3
 800783e:	f3bf 8f6f 	isb	sy
 8007842:	f3bf 8f4f 	dsb	sy
 8007846:	e7fe      	b.n	8007846 <xQueueGenericSendFromISR+0x52>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 8007848:	f7ff fd72 	bl	8007330 <vPortValidateInterruptPriority>
	__asm volatile
 800784c:	f3ef 8611 	mrs	r6, BASEPRI
 8007850:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007854:	f383 8811 	msr	BASEPRI, r3
 8007858:	f3bf 8f6f 	isb	sy
 800785c:	f3bf 8f4f 	dsb	sy
		if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 8007860:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8007862:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8007864:	429a      	cmp	r2, r3
 8007866:	d301      	bcc.n	800786c <xQueueGenericSendFromISR+0x78>
 8007868:	2f02      	cmp	r7, #2
 800786a:	d122      	bne.n	80078b2 <xQueueGenericSendFromISR+0xbe>
			const int8_t cTxLock = pxQueue->cTxLock;
 800786c:	f894 5045 	ldrb.w	r5, [r4, #69]	; 0x45
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 8007870:	463a      	mov	r2, r7
			const int8_t cTxLock = pxQueue->cTxLock;
 8007872:	b26d      	sxtb	r5, r5
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 8007874:	4649      	mov	r1, r9
 8007876:	4620      	mov	r0, r4
 8007878:	f7ff fd93 	bl	80073a2 <prvCopyDataToQueue>
			if( cTxLock == queueUNLOCKED )
 800787c:	1c6b      	adds	r3, r5, #1
 800787e:	d113      	bne.n	80078a8 <xQueueGenericSendFromISR+0xb4>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8007880:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8007882:	b90b      	cbnz	r3, 8007888 <xQueueGenericSendFromISR+0x94>
			xReturn = pdPASS;
 8007884:	2001      	movs	r0, #1
 8007886:	e00b      	b.n	80078a0 <xQueueGenericSendFromISR+0xac>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8007888:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800788c:	f000 fe12 	bl	80084b4 <xTaskRemoveFromEventList>
 8007890:	2800      	cmp	r0, #0
 8007892:	d0f7      	beq.n	8007884 <xQueueGenericSendFromISR+0x90>
							if( pxHigherPriorityTaskWoken != NULL )
 8007894:	f1b8 0f00 	cmp.w	r8, #0
 8007898:	d0f4      	beq.n	8007884 <xQueueGenericSendFromISR+0x90>
								*pxHigherPriorityTaskWoken = pdTRUE;
 800789a:	2001      	movs	r0, #1
 800789c:	f8c8 0000 	str.w	r0, [r8]
	__asm volatile
 80078a0:	f386 8811 	msr	BASEPRI, r6
}
 80078a4:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 80078a8:	3501      	adds	r5, #1
 80078aa:	b26d      	sxtb	r5, r5
 80078ac:	f884 5045 	strb.w	r5, [r4, #69]	; 0x45
 80078b0:	e7e8      	b.n	8007884 <xQueueGenericSendFromISR+0x90>
			xReturn = errQUEUE_FULL;
 80078b2:	2000      	movs	r0, #0
 80078b4:	e7f4      	b.n	80078a0 <xQueueGenericSendFromISR+0xac>

080078b6 <xQueueGiveFromISR>:
{
 80078b6:	b570      	push	{r4, r5, r6, lr}
 80078b8:	460d      	mov	r5, r1
	configASSERT( pxQueue );
 80078ba:	4604      	mov	r4, r0
 80078bc:	b940      	cbnz	r0, 80078d0 <xQueueGiveFromISR+0x1a>
	__asm volatile
 80078be:	f04f 0350 	mov.w	r3, #80	; 0x50
 80078c2:	f383 8811 	msr	BASEPRI, r3
 80078c6:	f3bf 8f6f 	isb	sy
 80078ca:	f3bf 8f4f 	dsb	sy
 80078ce:	e7fe      	b.n	80078ce <xQueueGiveFromISR+0x18>
	configASSERT( pxQueue->uxItemSize == 0 );
 80078d0:	6c03      	ldr	r3, [r0, #64]	; 0x40
 80078d2:	b143      	cbz	r3, 80078e6 <xQueueGiveFromISR+0x30>
 80078d4:	f04f 0350 	mov.w	r3, #80	; 0x50
 80078d8:	f383 8811 	msr	BASEPRI, r3
 80078dc:	f3bf 8f6f 	isb	sy
 80078e0:	f3bf 8f4f 	dsb	sy
 80078e4:	e7fe      	b.n	80078e4 <xQueueGiveFromISR+0x2e>
	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->u.xSemaphore.xMutexHolder != NULL ) ) );
 80078e6:	6803      	ldr	r3, [r0, #0]
 80078e8:	b953      	cbnz	r3, 8007900 <xQueueGiveFromISR+0x4a>
 80078ea:	6883      	ldr	r3, [r0, #8]
 80078ec:	b143      	cbz	r3, 8007900 <xQueueGiveFromISR+0x4a>
 80078ee:	f04f 0350 	mov.w	r3, #80	; 0x50
 80078f2:	f383 8811 	msr	BASEPRI, r3
 80078f6:	f3bf 8f6f 	isb	sy
 80078fa:	f3bf 8f4f 	dsb	sy
 80078fe:	e7fe      	b.n	80078fe <xQueueGiveFromISR+0x48>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 8007900:	f7ff fd16 	bl	8007330 <vPortValidateInterruptPriority>
	__asm volatile
 8007904:	f3ef 8611 	mrs	r6, BASEPRI
 8007908:	f04f 0350 	mov.w	r3, #80	; 0x50
 800790c:	f383 8811 	msr	BASEPRI, r3
 8007910:	f3bf 8f6f 	isb	sy
 8007914:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 8007918:	6ba2      	ldr	r2, [r4, #56]	; 0x38
		if( uxMessagesWaiting < pxQueue->uxLength )
 800791a:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800791c:	4293      	cmp	r3, r2
 800791e:	d91c      	bls.n	800795a <xQueueGiveFromISR+0xa4>
			const int8_t cTxLock = pxQueue->cTxLock;
 8007920:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 8007924:	3201      	adds	r2, #1
			const int8_t cTxLock = pxQueue->cTxLock;
 8007926:	b25b      	sxtb	r3, r3
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 8007928:	63a2      	str	r2, [r4, #56]	; 0x38
			if( cTxLock == queueUNLOCKED )
 800792a:	1c5a      	adds	r2, r3, #1
 800792c:	d110      	bne.n	8007950 <xQueueGiveFromISR+0x9a>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800792e:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8007930:	b90b      	cbnz	r3, 8007936 <xQueueGiveFromISR+0x80>
			xReturn = pdPASS;
 8007932:	2001      	movs	r0, #1
 8007934:	e009      	b.n	800794a <xQueueGiveFromISR+0x94>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8007936:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800793a:	f000 fdbb 	bl	80084b4 <xTaskRemoveFromEventList>
 800793e:	2800      	cmp	r0, #0
 8007940:	d0f7      	beq.n	8007932 <xQueueGiveFromISR+0x7c>
							if( pxHigherPriorityTaskWoken != NULL )
 8007942:	2d00      	cmp	r5, #0
 8007944:	d0f5      	beq.n	8007932 <xQueueGiveFromISR+0x7c>
								*pxHigherPriorityTaskWoken = pdTRUE;
 8007946:	2001      	movs	r0, #1
 8007948:	6028      	str	r0, [r5, #0]
	__asm volatile
 800794a:	f386 8811 	msr	BASEPRI, r6
}
 800794e:	bd70      	pop	{r4, r5, r6, pc}
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 8007950:	3301      	adds	r3, #1
 8007952:	b25b      	sxtb	r3, r3
 8007954:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 8007958:	e7eb      	b.n	8007932 <xQueueGiveFromISR+0x7c>
			xReturn = errQUEUE_FULL;
 800795a:	2000      	movs	r0, #0
 800795c:	e7f5      	b.n	800794a <xQueueGiveFromISR+0x94>
	...

08007960 <xQueueReceive>:
{
 8007960:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8007964:	b085      	sub	sp, #20
 8007966:	460f      	mov	r7, r1
 8007968:	9201      	str	r2, [sp, #4]
	configASSERT( ( pxQueue ) );
 800796a:	4604      	mov	r4, r0
 800796c:	b940      	cbnz	r0, 8007980 <xQueueReceive+0x20>
	__asm volatile
 800796e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007972:	f383 8811 	msr	BASEPRI, r3
 8007976:	f3bf 8f6f 	isb	sy
 800797a:	f3bf 8f4f 	dsb	sy
 800797e:	e7fe      	b.n	800797e <xQueueReceive+0x1e>
	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) );
 8007980:	b951      	cbnz	r1, 8007998 <xQueueReceive+0x38>
 8007982:	6c03      	ldr	r3, [r0, #64]	; 0x40
 8007984:	b143      	cbz	r3, 8007998 <xQueueReceive+0x38>
 8007986:	f04f 0350 	mov.w	r3, #80	; 0x50
 800798a:	f383 8811 	msr	BASEPRI, r3
 800798e:	f3bf 8f6f 	isb	sy
 8007992:	f3bf 8f4f 	dsb	sy
 8007996:	e7fe      	b.n	8007996 <xQueueReceive+0x36>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 8007998:	f000 fe1a 	bl	80085d0 <xTaskGetSchedulerState>
 800799c:	b950      	cbnz	r0, 80079b4 <xQueueReceive+0x54>
 800799e:	9e01      	ldr	r6, [sp, #4]
 80079a0:	b14e      	cbz	r6, 80079b6 <xQueueReceive+0x56>
 80079a2:	f04f 0350 	mov.w	r3, #80	; 0x50
 80079a6:	f383 8811 	msr	BASEPRI, r3
 80079aa:	f3bf 8f6f 	isb	sy
 80079ae:	f3bf 8f4f 	dsb	sy
 80079b2:	e7fe      	b.n	80079b2 <xQueueReceive+0x52>
 80079b4:	2600      	movs	r6, #0
		prvLockQueue( pxQueue );
 80079b6:	f04f 0800 	mov.w	r8, #0
					portYIELD_WITHIN_API();
 80079ba:	f8df 90e0 	ldr.w	r9, [pc, #224]	; 8007a9c <xQueueReceive+0x13c>
 80079be:	e03b      	b.n	8007a38 <xQueueReceive+0xd8>
				if( xTicksToWait == ( TickType_t ) 0 )
 80079c0:	9d01      	ldr	r5, [sp, #4]
 80079c2:	b91d      	cbnz	r5, 80079cc <xQueueReceive+0x6c>
					taskEXIT_CRITICAL();
 80079c4:	f7ff fbb8 	bl	8007138 <vPortExitCritical>
				return errQUEUE_EMPTY;
 80079c8:	2000      	movs	r0, #0
 80079ca:	e052      	b.n	8007a72 <xQueueReceive+0x112>
				else if( xEntryTimeSet == pdFALSE )
 80079cc:	b916      	cbnz	r6, 80079d4 <xQueueReceive+0x74>
					vTaskInternalSetTimeOutState( &xTimeOut );
 80079ce:	a802      	add	r0, sp, #8
 80079d0:	f000 fdb0 	bl	8008534 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 80079d4:	f7ff fbb0 	bl	8007138 <vPortExitCritical>
		vTaskSuspendAll();
 80079d8:	f000 fbe6 	bl	80081a8 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 80079dc:	f7ff fb8a 	bl	80070f4 <vPortEnterCritical>
 80079e0:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 80079e4:	2bff      	cmp	r3, #255	; 0xff
 80079e6:	bf08      	it	eq
 80079e8:	f884 8044 	strbeq.w	r8, [r4, #68]	; 0x44
 80079ec:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 80079f0:	2bff      	cmp	r3, #255	; 0xff
 80079f2:	bf08      	it	eq
 80079f4:	f884 8045 	strbeq.w	r8, [r4, #69]	; 0x45
 80079f8:	f7ff fb9e 	bl	8007138 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 80079fc:	a901      	add	r1, sp, #4
 80079fe:	a802      	add	r0, sp, #8
 8007a00:	f000 fda4 	bl	800854c <xTaskCheckForTimeOut>
 8007a04:	2800      	cmp	r0, #0
 8007a06:	d13d      	bne.n	8007a84 <xQueueReceive+0x124>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 8007a08:	4620      	mov	r0, r4
 8007a0a:	f7ff fcbf 	bl	800738c <prvIsQueueEmpty>
 8007a0e:	b398      	cbz	r0, 8007a78 <xQueueReceive+0x118>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 8007a10:	9901      	ldr	r1, [sp, #4]
 8007a12:	f104 0024 	add.w	r0, r4, #36	; 0x24
 8007a16:	f000 fd15 	bl	8008444 <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 8007a1a:	4620      	mov	r0, r4
 8007a1c:	f7ff fd09 	bl	8007432 <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 8007a20:	f000 fc60 	bl	80082e4 <xTaskResumeAll>
 8007a24:	b938      	cbnz	r0, 8007a36 <xQueueReceive+0xd6>
					portYIELD_WITHIN_API();
 8007a26:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
 8007a2a:	f8c9 3000 	str.w	r3, [r9]
 8007a2e:	f3bf 8f4f 	dsb	sy
 8007a32:	f3bf 8f6f 	isb	sy
 8007a36:	2601      	movs	r6, #1
		taskENTER_CRITICAL();
 8007a38:	f7ff fb5c 	bl	80070f4 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 8007a3c:	6ba5      	ldr	r5, [r4, #56]	; 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 8007a3e:	2d00      	cmp	r5, #0
 8007a40:	d0be      	beq.n	80079c0 <xQueueReceive+0x60>
				prvCopyDataFromQueue( pxQueue, pvBuffer );
 8007a42:	4639      	mov	r1, r7
 8007a44:	4620      	mov	r0, r4
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 8007a46:	3d01      	subs	r5, #1
				prvCopyDataFromQueue( pxQueue, pvBuffer );
 8007a48:	f7ff fcde 	bl	8007408 <prvCopyDataFromQueue>
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 8007a4c:	63a5      	str	r5, [r4, #56]	; 0x38
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8007a4e:	6923      	ldr	r3, [r4, #16]
 8007a50:	b163      	cbz	r3, 8007a6c <xQueueReceive+0x10c>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8007a52:	f104 0010 	add.w	r0, r4, #16
 8007a56:	f000 fd2d 	bl	80084b4 <xTaskRemoveFromEventList>
 8007a5a:	b138      	cbz	r0, 8007a6c <xQueueReceive+0x10c>
						queueYIELD_IF_USING_PREEMPTION();
 8007a5c:	4b0f      	ldr	r3, [pc, #60]	; (8007a9c <xQueueReceive+0x13c>)
 8007a5e:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8007a62:	601a      	str	r2, [r3, #0]
 8007a64:	f3bf 8f4f 	dsb	sy
 8007a68:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 8007a6c:	f7ff fb64 	bl	8007138 <vPortExitCritical>
				return pdPASS;
 8007a70:	2001      	movs	r0, #1
}
 8007a72:	b005      	add	sp, #20
 8007a74:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
				prvUnlockQueue( pxQueue );
 8007a78:	4620      	mov	r0, r4
 8007a7a:	f7ff fcda 	bl	8007432 <prvUnlockQueue>
				( void ) xTaskResumeAll();
 8007a7e:	f000 fc31 	bl	80082e4 <xTaskResumeAll>
 8007a82:	e7d8      	b.n	8007a36 <xQueueReceive+0xd6>
			prvUnlockQueue( pxQueue );
 8007a84:	4620      	mov	r0, r4
 8007a86:	f7ff fcd4 	bl	8007432 <prvUnlockQueue>
			( void ) xTaskResumeAll();
 8007a8a:	f000 fc2b 	bl	80082e4 <xTaskResumeAll>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 8007a8e:	4620      	mov	r0, r4
 8007a90:	f7ff fc7c 	bl	800738c <prvIsQueueEmpty>
 8007a94:	2800      	cmp	r0, #0
 8007a96:	d0ce      	beq.n	8007a36 <xQueueReceive+0xd6>
 8007a98:	e796      	b.n	80079c8 <xQueueReceive+0x68>
 8007a9a:	bf00      	nop
 8007a9c:	e000ed04 	.word	0xe000ed04

08007aa0 <xQueueSemaphoreTake>:
{
 8007aa0:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
	configASSERT( ( pxQueue ) );
 8007aa4:	4604      	mov	r4, r0
{
 8007aa6:	9101      	str	r1, [sp, #4]
	configASSERT( ( pxQueue ) );
 8007aa8:	b940      	cbnz	r0, 8007abc <xQueueSemaphoreTake+0x1c>
 8007aaa:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007aae:	f383 8811 	msr	BASEPRI, r3
 8007ab2:	f3bf 8f6f 	isb	sy
 8007ab6:	f3bf 8f4f 	dsb	sy
 8007aba:	e7fe      	b.n	8007aba <xQueueSemaphoreTake+0x1a>
	configASSERT( pxQueue->uxItemSize == 0 );
 8007abc:	6c05      	ldr	r5, [r0, #64]	; 0x40
 8007abe:	b145      	cbz	r5, 8007ad2 <xQueueSemaphoreTake+0x32>
 8007ac0:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007ac4:	f383 8811 	msr	BASEPRI, r3
 8007ac8:	f3bf 8f6f 	isb	sy
 8007acc:	f3bf 8f4f 	dsb	sy
 8007ad0:	e7fe      	b.n	8007ad0 <xQueueSemaphoreTake+0x30>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 8007ad2:	f000 fd7d 	bl	80085d0 <xTaskGetSchedulerState>
 8007ad6:	b950      	cbnz	r0, 8007aee <xQueueSemaphoreTake+0x4e>
 8007ad8:	9d01      	ldr	r5, [sp, #4]
 8007ada:	b145      	cbz	r5, 8007aee <xQueueSemaphoreTake+0x4e>
 8007adc:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007ae0:	f383 8811 	msr	BASEPRI, r3
 8007ae4:	f3bf 8f6f 	isb	sy
 8007ae8:	f3bf 8f4f 	dsb	sy
 8007aec:	e7fe      	b.n	8007aec <xQueueSemaphoreTake+0x4c>
 8007aee:	462e      	mov	r6, r5
		prvLockQueue( pxQueue );
 8007af0:	2700      	movs	r7, #0
					portYIELD_WITHIN_API();
 8007af2:	f8df 812c 	ldr.w	r8, [pc, #300]	; 8007c20 <xQueueSemaphoreTake+0x180>
 8007af6:	e04f      	b.n	8007b98 <xQueueSemaphoreTake+0xf8>
				if( xTicksToWait == ( TickType_t ) 0 )
 8007af8:	9b01      	ldr	r3, [sp, #4]
 8007afa:	b963      	cbnz	r3, 8007b16 <xQueueSemaphoreTake+0x76>
						configASSERT( xInheritanceOccurred == pdFALSE );
 8007afc:	b145      	cbz	r5, 8007b10 <xQueueSemaphoreTake+0x70>
 8007afe:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007b02:	f383 8811 	msr	BASEPRI, r3
 8007b06:	f3bf 8f6f 	isb	sy
 8007b0a:	f3bf 8f4f 	dsb	sy
 8007b0e:	e7fe      	b.n	8007b0e <xQueueSemaphoreTake+0x6e>
					taskEXIT_CRITICAL();
 8007b10:	f7ff fb12 	bl	8007138 <vPortExitCritical>
					return errQUEUE_EMPTY;
 8007b14:	e05e      	b.n	8007bd4 <xQueueSemaphoreTake+0x134>
				else if( xEntryTimeSet == pdFALSE )
 8007b16:	b916      	cbnz	r6, 8007b1e <xQueueSemaphoreTake+0x7e>
					vTaskInternalSetTimeOutState( &xTimeOut );
 8007b18:	a802      	add	r0, sp, #8
 8007b1a:	f000 fd0b 	bl	8008534 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 8007b1e:	f7ff fb0b 	bl	8007138 <vPortExitCritical>
		vTaskSuspendAll();
 8007b22:	f000 fb41 	bl	80081a8 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 8007b26:	f7ff fae5 	bl	80070f4 <vPortEnterCritical>
 8007b2a:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 8007b2e:	2bff      	cmp	r3, #255	; 0xff
 8007b30:	bf08      	it	eq
 8007b32:	f884 7044 	strbeq.w	r7, [r4, #68]	; 0x44
 8007b36:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 8007b3a:	2bff      	cmp	r3, #255	; 0xff
 8007b3c:	bf08      	it	eq
 8007b3e:	f884 7045 	strbeq.w	r7, [r4, #69]	; 0x45
 8007b42:	f7ff faf9 	bl	8007138 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 8007b46:	a901      	add	r1, sp, #4
 8007b48:	a802      	add	r0, sp, #8
 8007b4a:	f000 fcff 	bl	800854c <xTaskCheckForTimeOut>
 8007b4e:	2800      	cmp	r0, #0
 8007b50:	d14a      	bne.n	8007be8 <xQueueSemaphoreTake+0x148>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 8007b52:	4620      	mov	r0, r4
 8007b54:	f7ff fc1a 	bl	800738c <prvIsQueueEmpty>
 8007b58:	2800      	cmp	r0, #0
 8007b5a:	d03f      	beq.n	8007bdc <xQueueSemaphoreTake+0x13c>
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 8007b5c:	6823      	ldr	r3, [r4, #0]
 8007b5e:	b93b      	cbnz	r3, 8007b70 <xQueueSemaphoreTake+0xd0>
						taskENTER_CRITICAL();
 8007b60:	f7ff fac8 	bl	80070f4 <vPortEnterCritical>
							xInheritanceOccurred = xTaskPriorityInherit( pxQueue->u.xSemaphore.xMutexHolder );
 8007b64:	68a0      	ldr	r0, [r4, #8]
 8007b66:	f000 fd43 	bl	80085f0 <xTaskPriorityInherit>
 8007b6a:	4605      	mov	r5, r0
						taskEXIT_CRITICAL();
 8007b6c:	f7ff fae4 	bl	8007138 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 8007b70:	9901      	ldr	r1, [sp, #4]
 8007b72:	f104 0024 	add.w	r0, r4, #36	; 0x24
 8007b76:	f000 fc65 	bl	8008444 <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 8007b7a:	4620      	mov	r0, r4
 8007b7c:	f7ff fc59 	bl	8007432 <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 8007b80:	f000 fbb0 	bl	80082e4 <xTaskResumeAll>
 8007b84:	b938      	cbnz	r0, 8007b96 <xQueueSemaphoreTake+0xf6>
					portYIELD_WITHIN_API();
 8007b86:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
 8007b8a:	f8c8 3000 	str.w	r3, [r8]
 8007b8e:	f3bf 8f4f 	dsb	sy
 8007b92:	f3bf 8f6f 	isb	sy
 8007b96:	2601      	movs	r6, #1
		taskENTER_CRITICAL();
 8007b98:	f7ff faac 	bl	80070f4 <vPortEnterCritical>
			const UBaseType_t uxSemaphoreCount = pxQueue->uxMessagesWaiting;
 8007b9c:	6ba3      	ldr	r3, [r4, #56]	; 0x38
			if( uxSemaphoreCount > ( UBaseType_t ) 0 )
 8007b9e:	2b00      	cmp	r3, #0
 8007ba0:	d0aa      	beq.n	8007af8 <xQueueSemaphoreTake+0x58>
				pxQueue->uxMessagesWaiting = uxSemaphoreCount - ( UBaseType_t ) 1;
 8007ba2:	3b01      	subs	r3, #1
 8007ba4:	63a3      	str	r3, [r4, #56]	; 0x38
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 8007ba6:	6823      	ldr	r3, [r4, #0]
 8007ba8:	b913      	cbnz	r3, 8007bb0 <xQueueSemaphoreTake+0x110>
						pxQueue->u.xSemaphore.xMutexHolder = pvTaskIncrementMutexHeldCount();
 8007baa:	f000 fdf1 	bl	8008790 <pvTaskIncrementMutexHeldCount>
 8007bae:	60a0      	str	r0, [r4, #8]
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8007bb0:	6923      	ldr	r3, [r4, #16]
 8007bb2:	b163      	cbz	r3, 8007bce <xQueueSemaphoreTake+0x12e>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8007bb4:	f104 0010 	add.w	r0, r4, #16
 8007bb8:	f000 fc7c 	bl	80084b4 <xTaskRemoveFromEventList>
 8007bbc:	b138      	cbz	r0, 8007bce <xQueueSemaphoreTake+0x12e>
						queueYIELD_IF_USING_PREEMPTION();
 8007bbe:	4b18      	ldr	r3, [pc, #96]	; (8007c20 <xQueueSemaphoreTake+0x180>)
 8007bc0:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8007bc4:	601a      	str	r2, [r3, #0]
 8007bc6:	f3bf 8f4f 	dsb	sy
 8007bca:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 8007bce:	f7ff fab3 	bl	8007138 <vPortExitCritical>
				return pdPASS;
 8007bd2:	2501      	movs	r5, #1
}
 8007bd4:	4628      	mov	r0, r5
 8007bd6:	b004      	add	sp, #16
 8007bd8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
				prvUnlockQueue( pxQueue );
 8007bdc:	4620      	mov	r0, r4
 8007bde:	f7ff fc28 	bl	8007432 <prvUnlockQueue>
				( void ) xTaskResumeAll();
 8007be2:	f000 fb7f 	bl	80082e4 <xTaskResumeAll>
 8007be6:	e7d6      	b.n	8007b96 <xQueueSemaphoreTake+0xf6>
			prvUnlockQueue( pxQueue );
 8007be8:	4620      	mov	r0, r4
 8007bea:	f7ff fc22 	bl	8007432 <prvUnlockQueue>
			( void ) xTaskResumeAll();
 8007bee:	f000 fb79 	bl	80082e4 <xTaskResumeAll>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 8007bf2:	4620      	mov	r0, r4
 8007bf4:	f7ff fbca 	bl	800738c <prvIsQueueEmpty>
 8007bf8:	2800      	cmp	r0, #0
 8007bfa:	d0cc      	beq.n	8007b96 <xQueueSemaphoreTake+0xf6>
					if( xInheritanceOccurred != pdFALSE )
 8007bfc:	2d00      	cmp	r5, #0
 8007bfe:	d0e9      	beq.n	8007bd4 <xQueueSemaphoreTake+0x134>
						taskENTER_CRITICAL();
 8007c00:	f7ff fa78 	bl	80070f4 <vPortEnterCritical>
		if( listCURRENT_LIST_LENGTH( &( pxQueue->xTasksWaitingToReceive ) ) > 0U )
 8007c04:	6a61      	ldr	r1, [r4, #36]	; 0x24
 8007c06:	b119      	cbz	r1, 8007c10 <xQueueSemaphoreTake+0x170>
			uxHighestPriorityOfWaitingTasks = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) listGET_ITEM_VALUE_OF_HEAD_ENTRY( &( pxQueue->xTasksWaitingToReceive ) );
 8007c08:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8007c0a:	6819      	ldr	r1, [r3, #0]
 8007c0c:	f1c1 0138 	rsb	r1, r1, #56	; 0x38
							vTaskPriorityDisinheritAfterTimeout( pxQueue->u.xSemaphore.xMutexHolder, uxHighestWaitingPriority );
 8007c10:	68a0      	ldr	r0, [r4, #8]
 8007c12:	f000 fd6f 	bl	80086f4 <vTaskPriorityDisinheritAfterTimeout>
				return errQUEUE_EMPTY;
 8007c16:	2500      	movs	r5, #0
						taskEXIT_CRITICAL();
 8007c18:	f7ff fa8e 	bl	8007138 <vPortExitCritical>
 8007c1c:	e7da      	b.n	8007bd4 <xQueueSemaphoreTake+0x134>
 8007c1e:	bf00      	nop
 8007c20:	e000ed04 	.word	0xe000ed04

08007c24 <xQueueReceiveFromISR>:
{
 8007c24:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8007c28:	4689      	mov	r9, r1
 8007c2a:	4690      	mov	r8, r2
	configASSERT( pxQueue );
 8007c2c:	4605      	mov	r5, r0
 8007c2e:	b940      	cbnz	r0, 8007c42 <xQueueReceiveFromISR+0x1e>
 8007c30:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007c34:	f383 8811 	msr	BASEPRI, r3
 8007c38:	f3bf 8f6f 	isb	sy
 8007c3c:	f3bf 8f4f 	dsb	sy
 8007c40:	e7fe      	b.n	8007c40 <xQueueReceiveFromISR+0x1c>
	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 8007c42:	b951      	cbnz	r1, 8007c5a <xQueueReceiveFromISR+0x36>
 8007c44:	6c03      	ldr	r3, [r0, #64]	; 0x40
 8007c46:	b143      	cbz	r3, 8007c5a <xQueueReceiveFromISR+0x36>
 8007c48:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007c4c:	f383 8811 	msr	BASEPRI, r3
 8007c50:	f3bf 8f6f 	isb	sy
 8007c54:	f3bf 8f4f 	dsb	sy
 8007c58:	e7fe      	b.n	8007c58 <xQueueReceiveFromISR+0x34>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 8007c5a:	f7ff fb69 	bl	8007330 <vPortValidateInterruptPriority>
	__asm volatile
 8007c5e:	f3ef 8711 	mrs	r7, BASEPRI
 8007c62:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007c66:	f383 8811 	msr	BASEPRI, r3
 8007c6a:	f3bf 8f6f 	isb	sy
 8007c6e:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 8007c72:	6bac      	ldr	r4, [r5, #56]	; 0x38
		if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 8007c74:	b31c      	cbz	r4, 8007cbe <xQueueReceiveFromISR+0x9a>
			const int8_t cRxLock = pxQueue->cRxLock;
 8007c76:	f895 6044 	ldrb.w	r6, [r5, #68]	; 0x44
			prvCopyDataFromQueue( pxQueue, pvBuffer );
 8007c7a:	4649      	mov	r1, r9
			const int8_t cRxLock = pxQueue->cRxLock;
 8007c7c:	b276      	sxtb	r6, r6
			prvCopyDataFromQueue( pxQueue, pvBuffer );
 8007c7e:	4628      	mov	r0, r5
 8007c80:	f7ff fbc2 	bl	8007408 <prvCopyDataFromQueue>
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 8007c84:	3c01      	subs	r4, #1
			if( cRxLock == queueUNLOCKED )
 8007c86:	1c73      	adds	r3, r6, #1
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 8007c88:	63ac      	str	r4, [r5, #56]	; 0x38
			if( cRxLock == queueUNLOCKED )
 8007c8a:	d113      	bne.n	8007cb4 <xQueueReceiveFromISR+0x90>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8007c8c:	692b      	ldr	r3, [r5, #16]
 8007c8e:	b90b      	cbnz	r3, 8007c94 <xQueueReceiveFromISR+0x70>
			xReturn = pdPASS;
 8007c90:	2001      	movs	r0, #1
 8007c92:	e00b      	b.n	8007cac <xQueueReceiveFromISR+0x88>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8007c94:	f105 0010 	add.w	r0, r5, #16
 8007c98:	f000 fc0c 	bl	80084b4 <xTaskRemoveFromEventList>
 8007c9c:	2800      	cmp	r0, #0
 8007c9e:	d0f7      	beq.n	8007c90 <xQueueReceiveFromISR+0x6c>
						if( pxHigherPriorityTaskWoken != NULL )
 8007ca0:	f1b8 0f00 	cmp.w	r8, #0
 8007ca4:	d0f4      	beq.n	8007c90 <xQueueReceiveFromISR+0x6c>
							*pxHigherPriorityTaskWoken = pdTRUE;
 8007ca6:	2001      	movs	r0, #1
 8007ca8:	f8c8 0000 	str.w	r0, [r8]
	__asm volatile
 8007cac:	f387 8811 	msr	BASEPRI, r7
}
 8007cb0:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				pxQueue->cRxLock = ( int8_t ) ( cRxLock + 1 );
 8007cb4:	3601      	adds	r6, #1
 8007cb6:	b276      	sxtb	r6, r6
 8007cb8:	f885 6044 	strb.w	r6, [r5, #68]	; 0x44
 8007cbc:	e7e8      	b.n	8007c90 <xQueueReceiveFromISR+0x6c>
			xReturn = pdFAIL;
 8007cbe:	4620      	mov	r0, r4
 8007cc0:	e7f4      	b.n	8007cac <xQueueReceiveFromISR+0x88>
	...

08007cc4 <vQueueAddToRegistry>:
/*-----------------------------------------------------------*/

#if ( configQUEUE_REGISTRY_SIZE > 0 )

	void vQueueAddToRegistry( QueueHandle_t xQueue, const char *pcQueueName ) /*lint !e971 Unqualified char types are allowed for strings and single characters only. */
	{
 8007cc4:	b530      	push	{r4, r5, lr}

		/* See if there is an empty space in the registry.  A NULL name denotes
		a free slot. */
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
		{
			if( xQueueRegistry[ ux ].pcQueueName == NULL )
 8007cc6:	4a07      	ldr	r2, [pc, #28]	; (8007ce4 <vQueueAddToRegistry+0x20>)
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 8007cc8:	2300      	movs	r3, #0
			if( xQueueRegistry[ ux ].pcQueueName == NULL )
 8007cca:	f852 5033 	ldr.w	r5, [r2, r3, lsl #3]
 8007cce:	eb02 04c3 	add.w	r4, r2, r3, lsl #3
 8007cd2:	b91d      	cbnz	r5, 8007cdc <vQueueAddToRegistry+0x18>
			{
				/* Store the information on this queue. */
				xQueueRegistry[ ux ].pcQueueName = pcQueueName;
 8007cd4:	f842 1033 	str.w	r1, [r2, r3, lsl #3]
				xQueueRegistry[ ux ].xHandle = xQueue;
 8007cd8:	6060      	str	r0, [r4, #4]
			else
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}
	}
 8007cda:	bd30      	pop	{r4, r5, pc}
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 8007cdc:	3301      	adds	r3, #1
 8007cde:	2b08      	cmp	r3, #8
 8007ce0:	d1f3      	bne.n	8007cca <vQueueAddToRegistry+0x6>
 8007ce2:	e7fa      	b.n	8007cda <vQueueAddToRegistry+0x16>
 8007ce4:	2001293c 	.word	0x2001293c

08007ce8 <vQueueUnregisterQueue>:
/*-----------------------------------------------------------*/

#if ( configQUEUE_REGISTRY_SIZE > 0 )

	void vQueueUnregisterQueue( QueueHandle_t xQueue )
	{
 8007ce8:	b510      	push	{r4, lr}

		/* See if the handle of the queue being unregistered in actually in the
		registry. */
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
		{
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 8007cea:	4a08      	ldr	r2, [pc, #32]	; (8007d0c <vQueueUnregisterQueue+0x24>)
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 8007cec:	2300      	movs	r3, #0
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 8007cee:	eb02 01c3 	add.w	r1, r2, r3, lsl #3
 8007cf2:	684c      	ldr	r4, [r1, #4]
 8007cf4:	4284      	cmp	r4, r0
 8007cf6:	d104      	bne.n	8007d02 <vQueueUnregisterQueue+0x1a>
			{
				/* Set the name to NULL to show that this slot if free again. */
				xQueueRegistry[ ux ].pcQueueName = NULL;
 8007cf8:	2000      	movs	r0, #0
 8007cfa:	f842 0033 	str.w	r0, [r2, r3, lsl #3]

				/* Set the handle to NULL to ensure the same queue handle cannot
				appear in the registry twice if it is added, removed, then
				added again. */
				xQueueRegistry[ ux ].xHandle = ( QueueHandle_t ) 0;
 8007cfe:	6048      	str	r0, [r1, #4]
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}

	} /*lint !e818 xQueue could not be pointer to const because it is a typedef. */
 8007d00:	bd10      	pop	{r4, pc}
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 8007d02:	3301      	adds	r3, #1
 8007d04:	2b08      	cmp	r3, #8
 8007d06:	d1f2      	bne.n	8007cee <vQueueUnregisterQueue+0x6>
 8007d08:	e7fa      	b.n	8007d00 <vQueueUnregisterQueue+0x18>
 8007d0a:	bf00      	nop
 8007d0c:	2001293c 	.word	0x2001293c

08007d10 <vQueueDelete>:
{
 8007d10:	b510      	push	{r4, lr}
	configASSERT( pxQueue );
 8007d12:	4604      	mov	r4, r0
 8007d14:	b940      	cbnz	r0, 8007d28 <vQueueDelete+0x18>
	__asm volatile
 8007d16:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007d1a:	f383 8811 	msr	BASEPRI, r3
 8007d1e:	f3bf 8f6f 	isb	sy
 8007d22:	f3bf 8f4f 	dsb	sy
 8007d26:	e7fe      	b.n	8007d26 <vQueueDelete+0x16>
		vQueueUnregisterQueue( pxQueue );
 8007d28:	f7ff ffde 	bl	8007ce8 <vQueueUnregisterQueue>
		if( pxQueue->ucStaticallyAllocated == ( uint8_t ) pdFALSE )
 8007d2c:	f894 3046 	ldrb.w	r3, [r4, #70]	; 0x46
 8007d30:	b923      	cbnz	r3, 8007d3c <vQueueDelete+0x2c>
			vPortFree( pxQueue );
 8007d32:	4620      	mov	r0, r4
}
 8007d34:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
			vPortFree( pxQueue );
 8007d38:	f7ff b8f8 	b.w	8006f2c <vPortFree>
}
 8007d3c:	bd10      	pop	{r4, pc}

08007d3e <vQueueWaitForMessageRestricted>:
/*-----------------------------------------------------------*/

#if ( configUSE_TIMERS == 1 )

	void vQueueWaitForMessageRestricted( QueueHandle_t xQueue, TickType_t xTicksToWait, const BaseType_t xWaitIndefinitely )
	{
 8007d3e:	b570      	push	{r4, r5, r6, lr}
 8007d40:	4604      	mov	r4, r0
 8007d42:	460d      	mov	r5, r1
 8007d44:	4616      	mov	r6, r2
		will not actually cause the task to block, just place it on a blocked
		list.  It will not block until the scheduler is unlocked - at which
		time a yield will be performed.  If an item is added to the queue while
		the queue is locked, and the calling task blocks on the queue, then the
		calling task will be immediately unblocked when the queue is unlocked. */
		prvLockQueue( pxQueue );
 8007d46:	f7ff f9d5 	bl	80070f4 <vPortEnterCritical>
 8007d4a:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 8007d4e:	2bff      	cmp	r3, #255	; 0xff
 8007d50:	bf04      	itt	eq
 8007d52:	2300      	moveq	r3, #0
 8007d54:	f884 3044 	strbeq.w	r3, [r4, #68]	; 0x44
 8007d58:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 8007d5c:	2bff      	cmp	r3, #255	; 0xff
 8007d5e:	bf04      	itt	eq
 8007d60:	2300      	moveq	r3, #0
 8007d62:	f884 3045 	strbeq.w	r3, [r4, #69]	; 0x45
 8007d66:	f7ff f9e7 	bl	8007138 <vPortExitCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0U )
 8007d6a:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8007d6c:	b92b      	cbnz	r3, 8007d7a <vQueueWaitForMessageRestricted+0x3c>
		{
			/* There is nothing in the queue, block for the specified period. */
			vTaskPlaceOnEventListRestricted( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait, xWaitIndefinitely );
 8007d6e:	4632      	mov	r2, r6
 8007d70:	4629      	mov	r1, r5
 8007d72:	f104 0024 	add.w	r0, r4, #36	; 0x24
 8007d76:	f000 fb7f 	bl	8008478 <vTaskPlaceOnEventListRestricted>
		}
		else
		{
			mtCOVERAGE_TEST_MARKER();
		}
		prvUnlockQueue( pxQueue );
 8007d7a:	4620      	mov	r0, r4
	}
 8007d7c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
		prvUnlockQueue( pxQueue );
 8007d80:	f7ff bb57 	b.w	8007432 <prvUnlockQueue>

08007d84 <prvAddNewTaskToReadyList>:
	}
}
/*-----------------------------------------------------------*/

static void prvAddNewTaskToReadyList( TCB_t *pxNewTCB )
{
 8007d84:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8007d88:	4604      	mov	r4, r0
	/* Ensure interrupts don't access the task lists while the lists are being
	updated. */
	taskENTER_CRITICAL();
 8007d8a:	f7ff f9b3 	bl	80070f4 <vPortEnterCritical>
	{
		uxCurrentNumberOfTasks++;
 8007d8e:	4b2f      	ldr	r3, [pc, #188]	; (8007e4c <prvAddNewTaskToReadyList+0xc8>)
		if( pxCurrentTCB == NULL )
 8007d90:	4d2f      	ldr	r5, [pc, #188]	; (8007e50 <prvAddNewTaskToReadyList+0xcc>)
		uxCurrentNumberOfTasks++;
 8007d92:	681a      	ldr	r2, [r3, #0]
 8007d94:	4f2f      	ldr	r7, [pc, #188]	; (8007e54 <prvAddNewTaskToReadyList+0xd0>)
 8007d96:	3201      	adds	r2, #1
 8007d98:	601a      	str	r2, [r3, #0]
		if( pxCurrentTCB == NULL )
 8007d9a:	682e      	ldr	r6, [r5, #0]
 8007d9c:	2e00      	cmp	r6, #0
 8007d9e:	d149      	bne.n	8007e34 <prvAddNewTaskToReadyList+0xb0>
		{
			/* There are no other tasks, or all the other tasks are in
			the suspended state - make this the current task. */
			pxCurrentTCB = pxNewTCB;
 8007da0:	602c      	str	r4, [r5, #0]

			if( uxCurrentNumberOfTasks == ( UBaseType_t ) 1 )
 8007da2:	681b      	ldr	r3, [r3, #0]
 8007da4:	2b01      	cmp	r3, #1
 8007da6:	d11f      	bne.n	8007de8 <prvAddNewTaskToReadyList+0x64>
{
UBaseType_t uxPriority;

	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
	{
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 8007da8:	f04f 0814 	mov.w	r8, #20
 8007dac:	fb08 7006 	mla	r0, r8, r6, r7
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 8007db0:	3601      	adds	r6, #1
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 8007db2:	f7ff f8f3 	bl	8006f9c <vListInitialise>
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 8007db6:	2e38      	cmp	r6, #56	; 0x38
 8007db8:	d1f8      	bne.n	8007dac <prvAddNewTaskToReadyList+0x28>
	}

	vListInitialise( &xDelayedTaskList1 );
 8007dba:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 8007e80 <prvAddNewTaskToReadyList+0xfc>
	vListInitialise( &xDelayedTaskList2 );
 8007dbe:	4e26      	ldr	r6, [pc, #152]	; (8007e58 <prvAddNewTaskToReadyList+0xd4>)
	vListInitialise( &xDelayedTaskList1 );
 8007dc0:	4640      	mov	r0, r8
 8007dc2:	f7ff f8eb 	bl	8006f9c <vListInitialise>
	vListInitialise( &xDelayedTaskList2 );
 8007dc6:	4630      	mov	r0, r6
 8007dc8:	f7ff f8e8 	bl	8006f9c <vListInitialise>
	vListInitialise( &xPendingReadyList );
 8007dcc:	4823      	ldr	r0, [pc, #140]	; (8007e5c <prvAddNewTaskToReadyList+0xd8>)
 8007dce:	f7ff f8e5 	bl	8006f9c <vListInitialise>

	#if ( INCLUDE_vTaskDelete == 1 )
	{
		vListInitialise( &xTasksWaitingTermination );
 8007dd2:	4823      	ldr	r0, [pc, #140]	; (8007e60 <prvAddNewTaskToReadyList+0xdc>)
 8007dd4:	f7ff f8e2 	bl	8006f9c <vListInitialise>
	}
	#endif /* INCLUDE_vTaskDelete */

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		vListInitialise( &xSuspendedTaskList );
 8007dd8:	4822      	ldr	r0, [pc, #136]	; (8007e64 <prvAddNewTaskToReadyList+0xe0>)
 8007dda:	f7ff f8df 	bl	8006f9c <vListInitialise>
	}
	#endif /* INCLUDE_vTaskSuspend */

	/* Start with pxDelayedTaskList using list1 and the pxOverflowDelayedTaskList
	using list2. */
	pxDelayedTaskList = &xDelayedTaskList1;
 8007dde:	4b22      	ldr	r3, [pc, #136]	; (8007e68 <prvAddNewTaskToReadyList+0xe4>)
 8007de0:	f8c3 8000 	str.w	r8, [r3]
	pxOverflowDelayedTaskList = &xDelayedTaskList2;
 8007de4:	4b21      	ldr	r3, [pc, #132]	; (8007e6c <prvAddNewTaskToReadyList+0xe8>)
 8007de6:	601e      	str	r6, [r3, #0]
		uxTaskNumber++;
 8007de8:	4a21      	ldr	r2, [pc, #132]	; (8007e70 <prvAddNewTaskToReadyList+0xec>)
 8007dea:	6813      	ldr	r3, [r2, #0]
 8007dec:	3301      	adds	r3, #1
 8007dee:	6013      	str	r3, [r2, #0]
		prvAddTaskToReadyList( pxNewTCB );
 8007df0:	4a20      	ldr	r2, [pc, #128]	; (8007e74 <prvAddNewTaskToReadyList+0xf0>)
			pxNewTCB->uxTCBNumber = uxTaskNumber;
 8007df2:	6463      	str	r3, [r4, #68]	; 0x44
		prvAddTaskToReadyList( pxNewTCB );
 8007df4:	6811      	ldr	r1, [r2, #0]
 8007df6:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8007df8:	2014      	movs	r0, #20
 8007dfa:	428b      	cmp	r3, r1
 8007dfc:	fb00 7003 	mla	r0, r0, r3, r7
 8007e00:	f104 0104 	add.w	r1, r4, #4
 8007e04:	bf88      	it	hi
 8007e06:	6013      	strhi	r3, [r2, #0]
 8007e08:	f7ff f8d6 	bl	8006fb8 <vListInsertEnd>
	taskEXIT_CRITICAL();
 8007e0c:	f7ff f994 	bl	8007138 <vPortExitCritical>
	if( xSchedulerRunning != pdFALSE )
 8007e10:	4b19      	ldr	r3, [pc, #100]	; (8007e78 <prvAddNewTaskToReadyList+0xf4>)
 8007e12:	681b      	ldr	r3, [r3, #0]
 8007e14:	b163      	cbz	r3, 8007e30 <prvAddNewTaskToReadyList+0xac>
		if( pxCurrentTCB->uxPriority < pxNewTCB->uxPriority )
 8007e16:	682b      	ldr	r3, [r5, #0]
 8007e18:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8007e1a:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8007e1c:	429a      	cmp	r2, r3
 8007e1e:	d207      	bcs.n	8007e30 <prvAddNewTaskToReadyList+0xac>
			taskYIELD_IF_USING_PREEMPTION();
 8007e20:	4b16      	ldr	r3, [pc, #88]	; (8007e7c <prvAddNewTaskToReadyList+0xf8>)
 8007e22:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8007e26:	601a      	str	r2, [r3, #0]
 8007e28:	f3bf 8f4f 	dsb	sy
 8007e2c:	f3bf 8f6f 	isb	sy
}
 8007e30:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
			if( xSchedulerRunning == pdFALSE )
 8007e34:	4b10      	ldr	r3, [pc, #64]	; (8007e78 <prvAddNewTaskToReadyList+0xf4>)
 8007e36:	681b      	ldr	r3, [r3, #0]
 8007e38:	2b00      	cmp	r3, #0
 8007e3a:	d1d5      	bne.n	8007de8 <prvAddNewTaskToReadyList+0x64>
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 8007e3c:	682b      	ldr	r3, [r5, #0]
 8007e3e:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8007e40:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8007e42:	429a      	cmp	r2, r3
					pxCurrentTCB = pxNewTCB;
 8007e44:	bf98      	it	ls
 8007e46:	602c      	strls	r4, [r5, #0]
 8007e48:	e7ce      	b.n	8007de8 <prvAddNewTaskToReadyList+0x64>
 8007e4a:	bf00      	nop
 8007e4c:	20011fc0 	.word	0x20011fc0
 8007e50:	20011b54 	.word	0x20011b54
 8007e54:	20011b60 	.word	0x20011b60
 8007e58:	20011fec 	.word	0x20011fec
 8007e5c:	20012008 	.word	0x20012008
 8007e60:	20012034 	.word	0x20012034
 8007e64:	20012020 	.word	0x20012020
 8007e68:	20011b58 	.word	0x20011b58
 8007e6c:	20011b5c 	.word	0x20011b5c
 8007e70:	20011fd0 	.word	0x20011fd0
 8007e74:	20011fd4 	.word	0x20011fd4
 8007e78:	2001201c 	.word	0x2001201c
 8007e7c:	e000ed04 	.word	0xe000ed04
 8007e80:	20011fd8 	.word	0x20011fd8

08007e84 <prvDeleteTCB>:
/*-----------------------------------------------------------*/

#if ( INCLUDE_vTaskDelete == 1 )

	static void prvDeleteTCB( TCB_t *pxTCB )
	{
 8007e84:	b510      	push	{r4, lr}
		#elif( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 ) /*lint !e731 !e9029 Macro has been consolidated for readability reasons. */
		{
			/* The task could have been allocated statically or dynamically, so
			check what was statically allocated before trying to free the
			memory. */
			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
 8007e86:	f890 305d 	ldrb.w	r3, [r0, #93]	; 0x5d
	{
 8007e8a:	4604      	mov	r4, r0
			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
 8007e8c:	b93b      	cbnz	r3, 8007e9e <prvDeleteTCB+0x1a>
			{
				/* Both the stack and TCB were allocated dynamically, so both
				must be freed. */
				vPortFree( pxTCB->pxStack );
 8007e8e:	6b00      	ldr	r0, [r0, #48]	; 0x30
 8007e90:	f7ff f84c 	bl	8006f2c <vPortFree>
				vPortFree( pxTCB );
 8007e94:	4620      	mov	r0, r4
				configASSERT( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_AND_TCB	);
				mtCOVERAGE_TEST_MARKER();
			}
		}
		#endif /* configSUPPORT_DYNAMIC_ALLOCATION */
	}
 8007e96:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
				vPortFree( pxTCB );
 8007e9a:	f7ff b847 	b.w	8006f2c <vPortFree>
			else if( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_ONLY )
 8007e9e:	2b01      	cmp	r3, #1
 8007ea0:	d0f9      	beq.n	8007e96 <prvDeleteTCB+0x12>
				configASSERT( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_AND_TCB	);
 8007ea2:	2b02      	cmp	r3, #2
 8007ea4:	d008      	beq.n	8007eb8 <prvDeleteTCB+0x34>
 8007ea6:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007eaa:	f383 8811 	msr	BASEPRI, r3
 8007eae:	f3bf 8f6f 	isb	sy
 8007eb2:	f3bf 8f4f 	dsb	sy
 8007eb6:	e7fe      	b.n	8007eb6 <prvDeleteTCB+0x32>
	}
 8007eb8:	bd10      	pop	{r4, pc}
	...

08007ebc <prvIdleTask>:
{
 8007ebc:	b580      	push	{r7, lr}
				taskYIELD();
 8007ebe:	f8df 805c 	ldr.w	r8, [pc, #92]	; 8007f1c <prvIdleTask+0x60>
				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8007ec2:	4f12      	ldr	r7, [pc, #72]	; (8007f0c <prvIdleTask+0x50>)
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 8007ec4:	4c12      	ldr	r4, [pc, #72]	; (8007f10 <prvIdleTask+0x54>)
				--uxCurrentNumberOfTasks;
 8007ec6:	4d13      	ldr	r5, [pc, #76]	; (8007f14 <prvIdleTask+0x58>)
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 8007ec8:	6823      	ldr	r3, [r4, #0]
 8007eca:	b963      	cbnz	r3, 8007ee6 <prvIdleTask+0x2a>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > ( UBaseType_t ) 1 )
 8007ecc:	4b12      	ldr	r3, [pc, #72]	; (8007f18 <prvIdleTask+0x5c>)
 8007ece:	681b      	ldr	r3, [r3, #0]
 8007ed0:	2b01      	cmp	r3, #1
 8007ed2:	d9f8      	bls.n	8007ec6 <prvIdleTask+0xa>
				taskYIELD();
 8007ed4:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
 8007ed8:	f8c8 3000 	str.w	r3, [r8]
 8007edc:	f3bf 8f4f 	dsb	sy
 8007ee0:	f3bf 8f6f 	isb	sy
 8007ee4:	e7ee      	b.n	8007ec4 <prvIdleTask+0x8>
			taskENTER_CRITICAL();
 8007ee6:	f7ff f905 	bl	80070f4 <vPortEnterCritical>
				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8007eea:	68fb      	ldr	r3, [r7, #12]
 8007eec:	68de      	ldr	r6, [r3, #12]
				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 8007eee:	1d30      	adds	r0, r6, #4
 8007ef0:	f7ff f885 	bl	8006ffe <uxListRemove>
				--uxCurrentNumberOfTasks;
 8007ef4:	682b      	ldr	r3, [r5, #0]
 8007ef6:	3b01      	subs	r3, #1
 8007ef8:	602b      	str	r3, [r5, #0]
				--uxDeletedTasksWaitingCleanUp;
 8007efa:	6823      	ldr	r3, [r4, #0]
 8007efc:	3b01      	subs	r3, #1
 8007efe:	6023      	str	r3, [r4, #0]
			taskEXIT_CRITICAL();
 8007f00:	f7ff f91a 	bl	8007138 <vPortExitCritical>
			prvDeleteTCB( pxTCB );
 8007f04:	4630      	mov	r0, r6
 8007f06:	f7ff ffbd 	bl	8007e84 <prvDeleteTCB>
 8007f0a:	e7dd      	b.n	8007ec8 <prvIdleTask+0xc>
 8007f0c:	20012034 	.word	0x20012034
 8007f10:	20011fc4 	.word	0x20011fc4
 8007f14:	20011fc0 	.word	0x20011fc0
 8007f18:	20011b60 	.word	0x20011b60
 8007f1c:	e000ed04 	.word	0xe000ed04

08007f20 <prvResetNextTaskUnblockTime>:

static void prvResetNextTaskUnblockTime( void )
{
TCB_t *pxTCB;

	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 8007f20:	4a06      	ldr	r2, [pc, #24]	; (8007f3c <prvResetNextTaskUnblockTime+0x1c>)
 8007f22:	6813      	ldr	r3, [r2, #0]
 8007f24:	6819      	ldr	r1, [r3, #0]
 8007f26:	4b06      	ldr	r3, [pc, #24]	; (8007f40 <prvResetNextTaskUnblockTime+0x20>)
 8007f28:	b919      	cbnz	r1, 8007f32 <prvResetNextTaskUnblockTime+0x12>
	{
		/* The new current delayed list is empty.  Set xNextTaskUnblockTime to
		the maximum possible value so it is	extremely unlikely that the
		if( xTickCount >= xNextTaskUnblockTime ) test will pass until
		there is an item in the delayed list. */
		xNextTaskUnblockTime = portMAX_DELAY;
 8007f2a:	f04f 32ff 	mov.w	r2, #4294967295
		/* The new current delayed list is not empty, get the value of
		the item at the head of the delayed list.  This is the time at
		which the task at the head of the delayed list should be removed
		from the Blocked state. */
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 8007f2e:	601a      	str	r2, [r3, #0]
	}
}
 8007f30:	4770      	bx	lr
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8007f32:	6812      	ldr	r2, [r2, #0]
 8007f34:	68d2      	ldr	r2, [r2, #12]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 8007f36:	68d2      	ldr	r2, [r2, #12]
 8007f38:	6852      	ldr	r2, [r2, #4]
 8007f3a:	e7f8      	b.n	8007f2e <prvResetNextTaskUnblockTime+0xe>
 8007f3c:	20011b58 	.word	0x20011b58
 8007f40:	20012000 	.word	0x20012000

08007f44 <prvInitialiseNewTask.isra.2>:
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 8007f44:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8007f48:	e9dd 6409 	ldrd	r6, r4, [sp, #36]	; 0x24
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 8007f4c:	ea4f 0982 	mov.w	r9, r2, lsl #2
 8007f50:	464a      	mov	r2, r9
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 8007f52:	4607      	mov	r7, r0
 8007f54:	460d      	mov	r5, r1
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 8007f56:	6b20      	ldr	r0, [r4, #48]	; 0x30
 8007f58:	21a5      	movs	r1, #165	; 0xa5
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 8007f5a:	4698      	mov	r8, r3
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 8007f5c:	f011 fadf 	bl	801951e <memset>
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
 8007f60:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8007f62:	f1a9 0904 	sub.w	r9, r9, #4
 8007f66:	4499      	add	r9, r3
		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTER_SIZE_TYPE ) portBYTE_ALIGNMENT_MASK ) ) ); /*lint !e923 !e9033 !e9078 MISRA exception.  Avoiding casts between pointers and integers is not practical.  Size differences accounted for using portPOINTER_SIZE_TYPE type.  Checked by assert(). */
 8007f68:	f029 0907 	bic.w	r9, r9, #7
	if( pcName != NULL )
 8007f6c:	b3a5      	cbz	r5, 8007fd8 <prvInitialiseNewTask.isra.2+0x94>
 8007f6e:	1e6b      	subs	r3, r5, #1
 8007f70:	f104 0234 	add.w	r2, r4, #52	; 0x34
 8007f74:	350f      	adds	r5, #15
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 8007f76:	f813 1f01 	ldrb.w	r1, [r3, #1]!
 8007f7a:	f802 1b01 	strb.w	r1, [r2], #1
			if( pcName[ x ] == ( char ) 0x00 )
 8007f7e:	7819      	ldrb	r1, [r3, #0]
 8007f80:	b109      	cbz	r1, 8007f86 <prvInitialiseNewTask.isra.2+0x42>
		for( x = ( UBaseType_t ) 0; x < ( UBaseType_t ) configMAX_TASK_NAME_LEN; x++ )
 8007f82:	42ab      	cmp	r3, r5
 8007f84:	d1f7      	bne.n	8007f76 <prvInitialiseNewTask.isra.2+0x32>
		pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
 8007f86:	2300      	movs	r3, #0
 8007f88:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8007f8c:	9d08      	ldr	r5, [sp, #32]
 8007f8e:	2d37      	cmp	r5, #55	; 0x37
 8007f90:	bf28      	it	cs
 8007f92:	2537      	movcs	r5, #55	; 0x37
		pxNewTCB->uxMutexesHeld = 0;
 8007f94:	f04f 0a00 	mov.w	sl, #0
	pxNewTCB->uxPriority = uxPriority;
 8007f98:	62e5      	str	r5, [r4, #44]	; 0x2c
		pxNewTCB->uxBasePriority = uxPriority;
 8007f9a:	64e5      	str	r5, [r4, #76]	; 0x4c
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 8007f9c:	1d20      	adds	r0, r4, #4
		pxNewTCB->uxMutexesHeld = 0;
 8007f9e:	f8c4 a050 	str.w	sl, [r4, #80]	; 0x50
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 8007fa2:	f7ff f806 	bl	8006fb2 <vListInitialiseItem>
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8007fa6:	f1c5 0538 	rsb	r5, r5, #56	; 0x38
	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
 8007faa:	f104 0018 	add.w	r0, r4, #24
 8007fae:	f7ff f800 	bl	8006fb2 <vListInitialiseItem>
		pxNewTCB->ulNotifiedValue = 0;
 8007fb2:	f8c4 a058 	str.w	sl, [r4, #88]	; 0x58
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
 8007fb6:	6124      	str	r4, [r4, #16]
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8007fb8:	61a5      	str	r5, [r4, #24]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
 8007fba:	6264      	str	r4, [r4, #36]	; 0x24
		pxNewTCB->pxTaskTag = NULL;
 8007fbc:	f8c4 a054 	str.w	sl, [r4, #84]	; 0x54
		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
 8007fc0:	f884 a05c 	strb.w	sl, [r4, #92]	; 0x5c
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
 8007fc4:	4642      	mov	r2, r8
 8007fc6:	4639      	mov	r1, r7
 8007fc8:	4648      	mov	r0, r9
 8007fca:	f7ff f867 	bl	800709c <pxPortInitialiseStack>
 8007fce:	6020      	str	r0, [r4, #0]
	if( pxCreatedTask != NULL )
 8007fd0:	b106      	cbz	r6, 8007fd4 <prvInitialiseNewTask.isra.2+0x90>
		*pxCreatedTask = ( TaskHandle_t ) pxNewTCB;
 8007fd2:	6034      	str	r4, [r6, #0]
}
 8007fd4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
		pxNewTCB->pcTaskName[ 0 ] = 0x00;
 8007fd8:	f884 5034 	strb.w	r5, [r4, #52]	; 0x34
 8007fdc:	e7d6      	b.n	8007f8c <prvInitialiseNewTask.isra.2+0x48>
	...

08007fe0 <prvAddCurrentTaskToDelayedList>:
	}
#endif
/*-----------------------------------------------------------*/

static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait, const BaseType_t xCanBlockIndefinitely )
{
 8007fe0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
TickType_t xTimeToWake;
const TickType_t xConstTickCount = xTickCount;
 8007fe2:	4b16      	ldr	r3, [pc, #88]	; (800803c <prvAddCurrentTaskToDelayedList+0x5c>)
	}
	#endif

	/* Remove the task from the ready list before adding it to the blocked list
	as the same list item is used for both lists. */
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8007fe4:	4e16      	ldr	r6, [pc, #88]	; (8008040 <prvAddCurrentTaskToDelayedList+0x60>)
const TickType_t xConstTickCount = xTickCount;
 8007fe6:	681c      	ldr	r4, [r3, #0]
{
 8007fe8:	4605      	mov	r5, r0
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8007fea:	6830      	ldr	r0, [r6, #0]
 8007fec:	3004      	adds	r0, #4
{
 8007fee:	460f      	mov	r7, r1
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8007ff0:	f7ff f805 	bl	8006ffe <uxListRemove>
		mtCOVERAGE_TEST_MARKER();
	}

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		if( ( xTicksToWait == portMAX_DELAY ) && ( xCanBlockIndefinitely != pdFALSE ) )
 8007ff4:	1c6b      	adds	r3, r5, #1
 8007ff6:	4633      	mov	r3, r6
 8007ff8:	d107      	bne.n	800800a <prvAddCurrentTaskToDelayedList+0x2a>
 8007ffa:	b137      	cbz	r7, 800800a <prvAddCurrentTaskToDelayedList+0x2a>
		{
			/* Add the task to the suspended task list instead of a delayed task
			list to ensure it is not woken by a timing event.  It will block
			indefinitely. */
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8007ffc:	6831      	ldr	r1, [r6, #0]
 8007ffe:	4811      	ldr	r0, [pc, #68]	; (8008044 <prvAddCurrentTaskToDelayedList+0x64>)
 8008000:	3104      	adds	r1, #4

		/* Avoid compiler warning when INCLUDE_vTaskSuspend is not 1. */
		( void ) xCanBlockIndefinitely;
	}
	#endif /* INCLUDE_vTaskSuspend */
}
 8008002:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8008006:	f7fe bfd7 	b.w	8006fb8 <vListInsertEnd>
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
 800800a:	681a      	ldr	r2, [r3, #0]
 800800c:	1964      	adds	r4, r4, r5
 800800e:	6054      	str	r4, [r2, #4]
			if( xTimeToWake < xConstTickCount )
 8008010:	d307      	bcc.n	8008022 <prvAddCurrentTaskToDelayedList+0x42>
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8008012:	4a0d      	ldr	r2, [pc, #52]	; (8008048 <prvAddCurrentTaskToDelayedList+0x68>)
 8008014:	6810      	ldr	r0, [r2, #0]
 8008016:	6819      	ldr	r1, [r3, #0]
}
 8008018:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800801c:	3104      	adds	r1, #4
 800801e:	f7fe bfd7 	b.w	8006fd0 <vListInsert>
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8008022:	4a0a      	ldr	r2, [pc, #40]	; (800804c <prvAddCurrentTaskToDelayedList+0x6c>)
 8008024:	6810      	ldr	r0, [r2, #0]
 8008026:	6819      	ldr	r1, [r3, #0]
 8008028:	3104      	adds	r1, #4
 800802a:	f7fe ffd1 	bl	8006fd0 <vListInsert>
				if( xTimeToWake < xNextTaskUnblockTime )
 800802e:	4b08      	ldr	r3, [pc, #32]	; (8008050 <prvAddCurrentTaskToDelayedList+0x70>)
 8008030:	681a      	ldr	r2, [r3, #0]
 8008032:	42a2      	cmp	r2, r4
					xNextTaskUnblockTime = xTimeToWake;
 8008034:	bf88      	it	hi
 8008036:	601c      	strhi	r4, [r3, #0]
}
 8008038:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800803a:	bf00      	nop
 800803c:	20012048 	.word	0x20012048
 8008040:	20011b54 	.word	0x20011b54
 8008044:	20012020 	.word	0x20012020
 8008048:	20011b5c 	.word	0x20011b5c
 800804c:	20011b58 	.word	0x20011b58
 8008050:	20012000 	.word	0x20012000

08008054 <xTaskCreateStatic>:
	{
 8008054:	b570      	push	{r4, r5, r6, lr}
 8008056:	b086      	sub	sp, #24
 8008058:	e9dd 540b 	ldrd	r5, r4, [sp, #44]	; 0x2c
		configASSERT( puxStackBuffer != NULL );
 800805c:	b945      	cbnz	r5, 8008070 <xTaskCreateStatic+0x1c>
 800805e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008062:	f383 8811 	msr	BASEPRI, r3
 8008066:	f3bf 8f6f 	isb	sy
 800806a:	f3bf 8f4f 	dsb	sy
 800806e:	e7fe      	b.n	800806e <xTaskCreateStatic+0x1a>
		configASSERT( pxTaskBuffer != NULL );
 8008070:	b944      	cbnz	r4, 8008084 <xTaskCreateStatic+0x30>
 8008072:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008076:	f383 8811 	msr	BASEPRI, r3
 800807a:	f3bf 8f6f 	isb	sy
 800807e:	f3bf 8f4f 	dsb	sy
 8008082:	e7fe      	b.n	8008082 <xTaskCreateStatic+0x2e>
			volatile size_t xSize = sizeof( StaticTask_t );
 8008084:	2660      	movs	r6, #96	; 0x60
 8008086:	9605      	str	r6, [sp, #20]
			configASSERT( xSize == sizeof( TCB_t ) );
 8008088:	9e05      	ldr	r6, [sp, #20]
 800808a:	2e60      	cmp	r6, #96	; 0x60
 800808c:	d008      	beq.n	80080a0 <xTaskCreateStatic+0x4c>
 800808e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008092:	f383 8811 	msr	BASEPRI, r3
 8008096:	f3bf 8f6f 	isb	sy
 800809a:	f3bf 8f4f 	dsb	sy
 800809e:	e7fe      	b.n	800809e <xTaskCreateStatic+0x4a>
			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
 80080a0:	6325      	str	r5, [r4, #48]	; 0x30
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 80080a2:	2502      	movs	r5, #2
 80080a4:	f884 505d 	strb.w	r5, [r4, #93]	; 0x5d
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 80080a8:	ad04      	add	r5, sp, #16
 80080aa:	9501      	str	r5, [sp, #4]
 80080ac:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 80080ae:	9402      	str	r4, [sp, #8]
 80080b0:	9500      	str	r5, [sp, #0]
			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
 80080b2:	9e05      	ldr	r6, [sp, #20]
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 80080b4:	f7ff ff46 	bl	8007f44 <prvInitialiseNewTask.isra.2>
			prvAddNewTaskToReadyList( pxNewTCB );
 80080b8:	4620      	mov	r0, r4
 80080ba:	f7ff fe63 	bl	8007d84 <prvAddNewTaskToReadyList>
	}
 80080be:	9804      	ldr	r0, [sp, #16]
 80080c0:	b006      	add	sp, #24
 80080c2:	bd70      	pop	{r4, r5, r6, pc}

080080c4 <xTaskCreate>:
	{
 80080c4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80080c8:	4607      	mov	r7, r0
 80080ca:	b085      	sub	sp, #20
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 80080cc:	0090      	lsls	r0, r2, #2
	{
 80080ce:	4688      	mov	r8, r1
 80080d0:	4616      	mov	r6, r2
 80080d2:	4699      	mov	r9, r3
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 80080d4:	f7fe fe9e 	bl	8006e14 <pvPortMalloc>
			if( pxStack != NULL )
 80080d8:	4605      	mov	r5, r0
 80080da:	b1e8      	cbz	r0, 8008118 <xTaskCreate+0x54>
				pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) ); /*lint !e9087 !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack, and the first member of TCB_t is always a pointer to the task's stack. */
 80080dc:	2060      	movs	r0, #96	; 0x60
 80080de:	f7fe fe99 	bl	8006e14 <pvPortMalloc>
				if( pxNewTCB != NULL )
 80080e2:	4604      	mov	r4, r0
 80080e4:	b1a8      	cbz	r0, 8008112 <xTaskCreate+0x4e>
				pxNewTCB->ucStaticallyAllocated = tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB;
 80080e6:	2300      	movs	r3, #0
 80080e8:	f880 305d 	strb.w	r3, [r0, #93]	; 0x5d
			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
 80080ec:	9b0d      	ldr	r3, [sp, #52]	; 0x34
					pxNewTCB->pxStack = pxStack;
 80080ee:	6305      	str	r5, [r0, #48]	; 0x30
			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
 80080f0:	9301      	str	r3, [sp, #4]
 80080f2:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80080f4:	9002      	str	r0, [sp, #8]
 80080f6:	9300      	str	r3, [sp, #0]
 80080f8:	4632      	mov	r2, r6
 80080fa:	464b      	mov	r3, r9
 80080fc:	4641      	mov	r1, r8
 80080fe:	4638      	mov	r0, r7
 8008100:	f7ff ff20 	bl	8007f44 <prvInitialiseNewTask.isra.2>
			prvAddNewTaskToReadyList( pxNewTCB );
 8008104:	4620      	mov	r0, r4
 8008106:	f7ff fe3d 	bl	8007d84 <prvAddNewTaskToReadyList>
			xReturn = pdPASS;
 800810a:	2001      	movs	r0, #1
	}
 800810c:	b005      	add	sp, #20
 800810e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
					vPortFree( pxStack );
 8008112:	4628      	mov	r0, r5
 8008114:	f7fe ff0a 	bl	8006f2c <vPortFree>
			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 8008118:	f04f 30ff 	mov.w	r0, #4294967295
		return xReturn;
 800811c:	e7f6      	b.n	800810c <xTaskCreate+0x48>
	...

08008120 <vTaskStartScheduler>:
{
 8008120:	b510      	push	{r4, lr}
 8008122:	b088      	sub	sp, #32
		StaticTask_t *pxIdleTaskTCBBuffer = NULL;
 8008124:	2400      	movs	r4, #0
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 8008126:	aa07      	add	r2, sp, #28
 8008128:	a906      	add	r1, sp, #24
 800812a:	a805      	add	r0, sp, #20
		StackType_t *pxIdleTaskStackBuffer = NULL;
 800812c:	e9cd 4405 	strd	r4, r4, [sp, #20]
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 8008130:	f7fe fe34 	bl	8006d9c <vApplicationGetIdleTaskMemory>
		xIdleTaskHandle = xTaskCreateStatic(	prvIdleTask,
 8008134:	9b05      	ldr	r3, [sp, #20]
 8008136:	9302      	str	r3, [sp, #8]
 8008138:	9b06      	ldr	r3, [sp, #24]
 800813a:	9a07      	ldr	r2, [sp, #28]
 800813c:	4915      	ldr	r1, [pc, #84]	; (8008194 <vTaskStartScheduler+0x74>)
 800813e:	4816      	ldr	r0, [pc, #88]	; (8008198 <vTaskStartScheduler+0x78>)
 8008140:	e9cd 4300 	strd	r4, r3, [sp]
 8008144:	4623      	mov	r3, r4
 8008146:	f7ff ff85 	bl	8008054 <xTaskCreateStatic>
		if( xIdleTaskHandle != NULL )
 800814a:	b1a8      	cbz	r0, 8008178 <vTaskStartScheduler+0x58>
			xReturn = xTimerCreateTimerTask();
 800814c:	f000 fb7e 	bl	800884c <xTimerCreateTimerTask>
	if( xReturn == pdPASS )
 8008150:	2801      	cmp	r0, #1
 8008152:	d113      	bne.n	800817c <vTaskStartScheduler+0x5c>
 8008154:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008158:	f383 8811 	msr	BASEPRI, r3
 800815c:	f3bf 8f6f 	isb	sy
 8008160:	f3bf 8f4f 	dsb	sy
		xNextTaskUnblockTime = portMAX_DELAY;
 8008164:	4b0d      	ldr	r3, [pc, #52]	; (800819c <vTaskStartScheduler+0x7c>)
 8008166:	f04f 32ff 	mov.w	r2, #4294967295
 800816a:	601a      	str	r2, [r3, #0]
		xSchedulerRunning = pdTRUE;
 800816c:	4b0c      	ldr	r3, [pc, #48]	; (80081a0 <vTaskStartScheduler+0x80>)
 800816e:	6018      	str	r0, [r3, #0]
		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
 8008170:	4b0c      	ldr	r3, [pc, #48]	; (80081a4 <vTaskStartScheduler+0x84>)
 8008172:	601c      	str	r4, [r3, #0]
		if( xPortStartScheduler() != pdFALSE )
 8008174:	f7ff f856 	bl	8007224 <xPortStartScheduler>
}
 8008178:	b008      	add	sp, #32
 800817a:	bd10      	pop	{r4, pc}
		configASSERT( xReturn != errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY );
 800817c:	3001      	adds	r0, #1
 800817e:	d1fb      	bne.n	8008178 <vTaskStartScheduler+0x58>
 8008180:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008184:	f383 8811 	msr	BASEPRI, r3
 8008188:	f3bf 8f6f 	isb	sy
 800818c:	f3bf 8f4f 	dsb	sy
 8008190:	e7fe      	b.n	8008190 <vTaskStartScheduler+0x70>
 8008192:	bf00      	nop
 8008194:	0801b24c 	.word	0x0801b24c
 8008198:	08007ebd 	.word	0x08007ebd
 800819c:	20012000 	.word	0x20012000
 80081a0:	2001201c 	.word	0x2001201c
 80081a4:	20012048 	.word	0x20012048

080081a8 <vTaskSuspendAll>:
	++uxSchedulerSuspended;
 80081a8:	4a02      	ldr	r2, [pc, #8]	; (80081b4 <vTaskSuspendAll+0xc>)
 80081aa:	6813      	ldr	r3, [r2, #0]
 80081ac:	3301      	adds	r3, #1
 80081ae:	6013      	str	r3, [r2, #0]
}
 80081b0:	4770      	bx	lr
 80081b2:	bf00      	nop
 80081b4:	20011fcc 	.word	0x20011fcc

080081b8 <xTaskGetTickCount>:
		xTicks = xTickCount;
 80081b8:	4b01      	ldr	r3, [pc, #4]	; (80081c0 <xTaskGetTickCount+0x8>)
 80081ba:	6818      	ldr	r0, [r3, #0]
}
 80081bc:	4770      	bx	lr
 80081be:	bf00      	nop
 80081c0:	20012048 	.word	0x20012048

080081c4 <xTaskIncrementTick>:
{
 80081c4:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 80081c8:	4b3b      	ldr	r3, [pc, #236]	; (80082b8 <xTaskIncrementTick+0xf4>)
 80081ca:	681b      	ldr	r3, [r3, #0]
 80081cc:	2b00      	cmp	r3, #0
 80081ce:	d16c      	bne.n	80082aa <xTaskIncrementTick+0xe6>
		const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
 80081d0:	4b3a      	ldr	r3, [pc, #232]	; (80082bc <xTaskIncrementTick+0xf8>)
 80081d2:	681c      	ldr	r4, [r3, #0]
 80081d4:	3401      	adds	r4, #1
		xTickCount = xConstTickCount;
 80081d6:	601c      	str	r4, [r3, #0]
		if( xConstTickCount == ( TickType_t ) 0U ) /*lint !e774 'if' does not always evaluate to false as it is looking for an overflow. */
 80081d8:	b9bc      	cbnz	r4, 800820a <xTaskIncrementTick+0x46>
			taskSWITCH_DELAYED_LISTS();
 80081da:	4b39      	ldr	r3, [pc, #228]	; (80082c0 <xTaskIncrementTick+0xfc>)
 80081dc:	681a      	ldr	r2, [r3, #0]
 80081de:	6812      	ldr	r2, [r2, #0]
 80081e0:	b142      	cbz	r2, 80081f4 <xTaskIncrementTick+0x30>
 80081e2:	f04f 0350 	mov.w	r3, #80	; 0x50
 80081e6:	f383 8811 	msr	BASEPRI, r3
 80081ea:	f3bf 8f6f 	isb	sy
 80081ee:	f3bf 8f4f 	dsb	sy
 80081f2:	e7fe      	b.n	80081f2 <xTaskIncrementTick+0x2e>
 80081f4:	4a33      	ldr	r2, [pc, #204]	; (80082c4 <xTaskIncrementTick+0x100>)
 80081f6:	6819      	ldr	r1, [r3, #0]
 80081f8:	6810      	ldr	r0, [r2, #0]
 80081fa:	6018      	str	r0, [r3, #0]
 80081fc:	6011      	str	r1, [r2, #0]
 80081fe:	4a32      	ldr	r2, [pc, #200]	; (80082c8 <xTaskIncrementTick+0x104>)
 8008200:	6813      	ldr	r3, [r2, #0]
 8008202:	3301      	adds	r3, #1
 8008204:	6013      	str	r3, [r2, #0]
 8008206:	f7ff fe8b 	bl	8007f20 <prvResetNextTaskUnblockTime>
		if( xConstTickCount >= xNextTaskUnblockTime )
 800820a:	4d30      	ldr	r5, [pc, #192]	; (80082cc <xTaskIncrementTick+0x108>)
 800820c:	4f30      	ldr	r7, [pc, #192]	; (80082d0 <xTaskIncrementTick+0x10c>)
 800820e:	682b      	ldr	r3, [r5, #0]
 8008210:	42a3      	cmp	r3, r4
BaseType_t xSwitchRequired = pdFALSE;
 8008212:	f04f 0b00 	mov.w	fp, #0
		if( xConstTickCount >= xNextTaskUnblockTime )
 8008216:	d911      	bls.n	800823c <xTaskIncrementTick+0x78>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_t ) 1 )
 8008218:	683a      	ldr	r2, [r7, #0]
 800821a:	4b2e      	ldr	r3, [pc, #184]	; (80082d4 <xTaskIncrementTick+0x110>)
 800821c:	6ad1      	ldr	r1, [r2, #44]	; 0x2c
 800821e:	2214      	movs	r2, #20
 8008220:	434a      	muls	r2, r1
 8008222:	589a      	ldr	r2, [r3, r2]
				xSwitchRequired = pdTRUE;
 8008224:	2a02      	cmp	r2, #2
 8008226:	bf28      	it	cs
 8008228:	f04f 0b01 	movcs.w	fp, #1
		if( xYieldPending != pdFALSE )
 800822c:	4a2a      	ldr	r2, [pc, #168]	; (80082d8 <xTaskIncrementTick+0x114>)
 800822e:	6812      	ldr	r2, [r2, #0]
			xSwitchRequired = pdTRUE;
 8008230:	2a00      	cmp	r2, #0
}
 8008232:	bf0c      	ite	eq
 8008234:	4658      	moveq	r0, fp
 8008236:	2001      	movne	r0, #1
 8008238:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800823c:	f8df 9080 	ldr.w	r9, [pc, #128]	; 80082c0 <xTaskIncrementTick+0xfc>
					prvAddTaskToReadyList( pxTCB );
 8008240:	f8df a09c 	ldr.w	sl, [pc, #156]	; 80082e0 <xTaskIncrementTick+0x11c>
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 8008244:	f8d9 2000 	ldr.w	r2, [r9]
 8008248:	6812      	ldr	r2, [r2, #0]
 800824a:	b91a      	cbnz	r2, 8008254 <xTaskIncrementTick+0x90>
					xNextTaskUnblockTime = portMAX_DELAY; /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800824c:	f04f 32ff 	mov.w	r2, #4294967295
 8008250:	602a      	str	r2, [r5, #0]
					break;
 8008252:	e7e1      	b.n	8008218 <xTaskIncrementTick+0x54>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8008254:	f8d9 2000 	ldr.w	r2, [r9]
 8008258:	68d2      	ldr	r2, [r2, #12]
 800825a:	68d6      	ldr	r6, [r2, #12]
					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
 800825c:	6871      	ldr	r1, [r6, #4]
					if( xConstTickCount < xItemValue )
 800825e:	428c      	cmp	r4, r1
 8008260:	d201      	bcs.n	8008266 <xTaskIncrementTick+0xa2>
						xNextTaskUnblockTime = xItemValue;
 8008262:	6029      	str	r1, [r5, #0]
						break; /*lint !e9011 Code structure here is deedmed easier to understand with multiple breaks. */
 8008264:	e7d8      	b.n	8008218 <xTaskIncrementTick+0x54>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 8008266:	f106 0804 	add.w	r8, r6, #4
 800826a:	4640      	mov	r0, r8
 800826c:	f7fe fec7 	bl	8006ffe <uxListRemove>
					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
 8008270:	6ab1      	ldr	r1, [r6, #40]	; 0x28
 8008272:	b119      	cbz	r1, 800827c <xTaskIncrementTick+0xb8>
						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 8008274:	f106 0018 	add.w	r0, r6, #24
 8008278:	f7fe fec1 	bl	8006ffe <uxListRemove>
					prvAddTaskToReadyList( pxTCB );
 800827c:	6af0      	ldr	r0, [r6, #44]	; 0x2c
 800827e:	f8da 1000 	ldr.w	r1, [sl]
 8008282:	4b14      	ldr	r3, [pc, #80]	; (80082d4 <xTaskIncrementTick+0x110>)
 8008284:	4288      	cmp	r0, r1
 8008286:	f04f 0214 	mov.w	r2, #20
 800828a:	bf88      	it	hi
 800828c:	f8ca 0000 	strhi.w	r0, [sl]
 8008290:	4641      	mov	r1, r8
 8008292:	fb02 3000 	mla	r0, r2, r0, r3
 8008296:	f7fe fe8f 	bl	8006fb8 <vListInsertEnd>
						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 800829a:	6838      	ldr	r0, [r7, #0]
 800829c:	6af1      	ldr	r1, [r6, #44]	; 0x2c
 800829e:	6ac2      	ldr	r2, [r0, #44]	; 0x2c
							xSwitchRequired = pdTRUE;
 80082a0:	4291      	cmp	r1, r2
 80082a2:	bf28      	it	cs
 80082a4:	f04f 0b01 	movcs.w	fp, #1
 80082a8:	e7cc      	b.n	8008244 <xTaskIncrementTick+0x80>
		++uxPendedTicks;
 80082aa:	4a0c      	ldr	r2, [pc, #48]	; (80082dc <xTaskIncrementTick+0x118>)
 80082ac:	6813      	ldr	r3, [r2, #0]
 80082ae:	3301      	adds	r3, #1
 80082b0:	6013      	str	r3, [r2, #0]
BaseType_t xSwitchRequired = pdFALSE;
 80082b2:	f04f 0b00 	mov.w	fp, #0
 80082b6:	e7b9      	b.n	800822c <xTaskIncrementTick+0x68>
 80082b8:	20011fcc 	.word	0x20011fcc
 80082bc:	20012048 	.word	0x20012048
 80082c0:	20011b58 	.word	0x20011b58
 80082c4:	20011b5c 	.word	0x20011b5c
 80082c8:	20012004 	.word	0x20012004
 80082cc:	20012000 	.word	0x20012000
 80082d0:	20011b54 	.word	0x20011b54
 80082d4:	20011b60 	.word	0x20011b60
 80082d8:	2001204c 	.word	0x2001204c
 80082dc:	20011fc8 	.word	0x20011fc8
 80082e0:	20011fd4 	.word	0x20011fd4

080082e4 <xTaskResumeAll>:
{
 80082e4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
	configASSERT( uxSchedulerSuspended );
 80082e8:	4c2f      	ldr	r4, [pc, #188]	; (80083a8 <xTaskResumeAll+0xc4>)
 80082ea:	6823      	ldr	r3, [r4, #0]
 80082ec:	b943      	cbnz	r3, 8008300 <xTaskResumeAll+0x1c>
 80082ee:	f04f 0350 	mov.w	r3, #80	; 0x50
 80082f2:	f383 8811 	msr	BASEPRI, r3
 80082f6:	f3bf 8f6f 	isb	sy
 80082fa:	f3bf 8f4f 	dsb	sy
 80082fe:	e7fe      	b.n	80082fe <xTaskResumeAll+0x1a>
	taskENTER_CRITICAL();
 8008300:	f7fe fef8 	bl	80070f4 <vPortEnterCritical>
		--uxSchedulerSuspended;
 8008304:	6823      	ldr	r3, [r4, #0]
 8008306:	3b01      	subs	r3, #1
 8008308:	6023      	str	r3, [r4, #0]
		if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800830a:	6824      	ldr	r4, [r4, #0]
 800830c:	b12c      	cbz	r4, 800831a <xTaskResumeAll+0x36>
BaseType_t xAlreadyYielded = pdFALSE;
 800830e:	2400      	movs	r4, #0
	taskEXIT_CRITICAL();
 8008310:	f7fe ff12 	bl	8007138 <vPortExitCritical>
}
 8008314:	4620      	mov	r0, r4
 8008316:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
			if( uxCurrentNumberOfTasks > ( UBaseType_t ) 0U )
 800831a:	4b24      	ldr	r3, [pc, #144]	; (80083ac <xTaskResumeAll+0xc8>)
 800831c:	681b      	ldr	r3, [r3, #0]
 800831e:	2b00      	cmp	r3, #0
 8008320:	d0f5      	beq.n	800830e <xTaskResumeAll+0x2a>
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 8008322:	4d23      	ldr	r5, [pc, #140]	; (80083b0 <xTaskResumeAll+0xcc>)
					prvAddTaskToReadyList( pxTCB );
 8008324:	4e23      	ldr	r6, [pc, #140]	; (80083b4 <xTaskResumeAll+0xd0>)
 8008326:	f8df 80a0 	ldr.w	r8, [pc, #160]	; 80083c8 <xTaskResumeAll+0xe4>
 800832a:	e01d      	b.n	8008368 <xTaskResumeAll+0x84>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xPendingReadyList ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800832c:	68eb      	ldr	r3, [r5, #12]
 800832e:	68dc      	ldr	r4, [r3, #12]
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 8008330:	1d27      	adds	r7, r4, #4
					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 8008332:	f104 0018 	add.w	r0, r4, #24
 8008336:	f7fe fe62 	bl	8006ffe <uxListRemove>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800833a:	4638      	mov	r0, r7
 800833c:	f7fe fe5f 	bl	8006ffe <uxListRemove>
					prvAddTaskToReadyList( pxTCB );
 8008340:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8008342:	6832      	ldr	r2, [r6, #0]
 8008344:	2014      	movs	r0, #20
 8008346:	4293      	cmp	r3, r2
 8008348:	fb00 8003 	mla	r0, r0, r3, r8
 800834c:	4639      	mov	r1, r7
 800834e:	bf88      	it	hi
 8008350:	6033      	strhi	r3, [r6, #0]
 8008352:	f7fe fe31 	bl	8006fb8 <vListInsertEnd>
					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 8008356:	4b18      	ldr	r3, [pc, #96]	; (80083b8 <xTaskResumeAll+0xd4>)
 8008358:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800835a:	681b      	ldr	r3, [r3, #0]
 800835c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800835e:	429a      	cmp	r2, r3
 8008360:	d302      	bcc.n	8008368 <xTaskResumeAll+0x84>
						xYieldPending = pdTRUE;
 8008362:	4b16      	ldr	r3, [pc, #88]	; (80083bc <xTaskResumeAll+0xd8>)
 8008364:	2201      	movs	r2, #1
 8008366:	601a      	str	r2, [r3, #0]
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 8008368:	682b      	ldr	r3, [r5, #0]
 800836a:	2b00      	cmp	r3, #0
 800836c:	d1de      	bne.n	800832c <xTaskResumeAll+0x48>
				if( pxTCB != NULL )
 800836e:	b10c      	cbz	r4, 8008374 <xTaskResumeAll+0x90>
					prvResetNextTaskUnblockTime();
 8008370:	f7ff fdd6 	bl	8007f20 <prvResetNextTaskUnblockTime>
					UBaseType_t uxPendedCounts = uxPendedTicks; /* Non-volatile copy. */
 8008374:	4d12      	ldr	r5, [pc, #72]	; (80083c0 <xTaskResumeAll+0xdc>)
 8008376:	682c      	ldr	r4, [r5, #0]
					if( uxPendedCounts > ( UBaseType_t ) 0U )
 8008378:	b144      	cbz	r4, 800838c <xTaskResumeAll+0xa8>
								xYieldPending = pdTRUE;
 800837a:	4e10      	ldr	r6, [pc, #64]	; (80083bc <xTaskResumeAll+0xd8>)
 800837c:	2701      	movs	r7, #1
							if( xTaskIncrementTick() != pdFALSE )
 800837e:	f7ff ff21 	bl	80081c4 <xTaskIncrementTick>
 8008382:	b100      	cbz	r0, 8008386 <xTaskResumeAll+0xa2>
								xYieldPending = pdTRUE;
 8008384:	6037      	str	r7, [r6, #0]
						} while( uxPendedCounts > ( UBaseType_t ) 0U );
 8008386:	3c01      	subs	r4, #1
 8008388:	d1f9      	bne.n	800837e <xTaskResumeAll+0x9a>
						uxPendedTicks = 0;
 800838a:	602c      	str	r4, [r5, #0]
				if( xYieldPending != pdFALSE )
 800838c:	4b0b      	ldr	r3, [pc, #44]	; (80083bc <xTaskResumeAll+0xd8>)
 800838e:	681b      	ldr	r3, [r3, #0]
 8008390:	2b00      	cmp	r3, #0
 8008392:	d0bc      	beq.n	800830e <xTaskResumeAll+0x2a>
					taskYIELD_IF_USING_PREEMPTION();
 8008394:	4b0b      	ldr	r3, [pc, #44]	; (80083c4 <xTaskResumeAll+0xe0>)
 8008396:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800839a:	601a      	str	r2, [r3, #0]
 800839c:	f3bf 8f4f 	dsb	sy
 80083a0:	f3bf 8f6f 	isb	sy
						xAlreadyYielded = pdTRUE;
 80083a4:	2401      	movs	r4, #1
 80083a6:	e7b3      	b.n	8008310 <xTaskResumeAll+0x2c>
 80083a8:	20011fcc 	.word	0x20011fcc
 80083ac:	20011fc0 	.word	0x20011fc0
 80083b0:	20012008 	.word	0x20012008
 80083b4:	20011fd4 	.word	0x20011fd4
 80083b8:	20011b54 	.word	0x20011b54
 80083bc:	2001204c 	.word	0x2001204c
 80083c0:	20011fc8 	.word	0x20011fc8
 80083c4:	e000ed04 	.word	0xe000ed04
 80083c8:	20011b60 	.word	0x20011b60

080083cc <vTaskSwitchContext>:
	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
 80083cc:	4b18      	ldr	r3, [pc, #96]	; (8008430 <vTaskSwitchContext+0x64>)
 80083ce:	681a      	ldr	r2, [r3, #0]
 80083d0:	4b18      	ldr	r3, [pc, #96]	; (8008434 <vTaskSwitchContext+0x68>)
{
 80083d2:	b5f0      	push	{r4, r5, r6, r7, lr}
	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
 80083d4:	b112      	cbz	r2, 80083dc <vTaskSwitchContext+0x10>
		xYieldPending = pdTRUE;
 80083d6:	2201      	movs	r2, #1
 80083d8:	601a      	str	r2, [r3, #0]
}
 80083da:	bdf0      	pop	{r4, r5, r6, r7, pc}
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 80083dc:	4d16      	ldr	r5, [pc, #88]	; (8008438 <vTaskSwitchContext+0x6c>)
		xYieldPending = pdFALSE;
 80083de:	601a      	str	r2, [r3, #0]
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 80083e0:	4a16      	ldr	r2, [pc, #88]	; (800843c <vTaskSwitchContext+0x70>)
 80083e2:	682b      	ldr	r3, [r5, #0]
 80083e4:	2714      	movs	r7, #20
 80083e6:	4616      	mov	r6, r2
 80083e8:	fb07 f103 	mul.w	r1, r7, r3
 80083ec:	1850      	adds	r0, r2, r1
 80083ee:	5854      	ldr	r4, [r2, r1]
 80083f0:	b18c      	cbz	r4, 8008416 <vTaskSwitchContext+0x4a>
 80083f2:	6844      	ldr	r4, [r0, #4]
 80083f4:	3108      	adds	r1, #8
 80083f6:	6864      	ldr	r4, [r4, #4]
 80083f8:	6044      	str	r4, [r0, #4]
 80083fa:	440a      	add	r2, r1
 80083fc:	4294      	cmp	r4, r2
 80083fe:	bf04      	itt	eq
 8008400:	6862      	ldreq	r2, [r4, #4]
 8008402:	6042      	streq	r2, [r0, #4]
 8008404:	2214      	movs	r2, #20
 8008406:	fb02 6203 	mla	r2, r2, r3, r6
 800840a:	6852      	ldr	r2, [r2, #4]
 800840c:	68d1      	ldr	r1, [r2, #12]
 800840e:	4a0c      	ldr	r2, [pc, #48]	; (8008440 <vTaskSwitchContext+0x74>)
 8008410:	6011      	str	r1, [r2, #0]
 8008412:	602b      	str	r3, [r5, #0]
}
 8008414:	e7e1      	b.n	80083da <vTaskSwitchContext+0xe>
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8008416:	b943      	cbnz	r3, 800842a <vTaskSwitchContext+0x5e>
 8008418:	f04f 0350 	mov.w	r3, #80	; 0x50
 800841c:	f383 8811 	msr	BASEPRI, r3
 8008420:	f3bf 8f6f 	isb	sy
 8008424:	f3bf 8f4f 	dsb	sy
 8008428:	e7fe      	b.n	8008428 <vTaskSwitchContext+0x5c>
 800842a:	3b01      	subs	r3, #1
 800842c:	e7dc      	b.n	80083e8 <vTaskSwitchContext+0x1c>
 800842e:	bf00      	nop
 8008430:	20011fcc 	.word	0x20011fcc
 8008434:	2001204c 	.word	0x2001204c
 8008438:	20011fd4 	.word	0x20011fd4
 800843c:	20011b60 	.word	0x20011b60
 8008440:	20011b54 	.word	0x20011b54

08008444 <vTaskPlaceOnEventList>:
{
 8008444:	b510      	push	{r4, lr}
 8008446:	460c      	mov	r4, r1
	configASSERT( pxEventList );
 8008448:	b940      	cbnz	r0, 800845c <vTaskPlaceOnEventList+0x18>
 800844a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800844e:	f383 8811 	msr	BASEPRI, r3
 8008452:	f3bf 8f6f 	isb	sy
 8008456:	f3bf 8f4f 	dsb	sy
 800845a:	e7fe      	b.n	800845a <vTaskPlaceOnEventList+0x16>
	vListInsert( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 800845c:	4b05      	ldr	r3, [pc, #20]	; (8008474 <vTaskPlaceOnEventList+0x30>)
 800845e:	6819      	ldr	r1, [r3, #0]
 8008460:	3118      	adds	r1, #24
 8008462:	f7fe fdb5 	bl	8006fd0 <vListInsert>
	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
 8008466:	4620      	mov	r0, r4
 8008468:	2101      	movs	r1, #1
}
 800846a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
 800846e:	f7ff bdb7 	b.w	8007fe0 <prvAddCurrentTaskToDelayedList>
 8008472:	bf00      	nop
 8008474:	20011b54 	.word	0x20011b54

08008478 <vTaskPlaceOnEventListRestricted>:
	{
 8008478:	b538      	push	{r3, r4, r5, lr}
 800847a:	460d      	mov	r5, r1
 800847c:	4614      	mov	r4, r2
		configASSERT( pxEventList );
 800847e:	b940      	cbnz	r0, 8008492 <vTaskPlaceOnEventListRestricted+0x1a>
 8008480:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008484:	f383 8811 	msr	BASEPRI, r3
 8008488:	f3bf 8f6f 	isb	sy
 800848c:	f3bf 8f4f 	dsb	sy
 8008490:	e7fe      	b.n	8008490 <vTaskPlaceOnEventListRestricted+0x18>
		vListInsertEnd( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 8008492:	4b07      	ldr	r3, [pc, #28]	; (80084b0 <vTaskPlaceOnEventListRestricted+0x38>)
 8008494:	6819      	ldr	r1, [r3, #0]
 8008496:	3118      	adds	r1, #24
 8008498:	f7fe fd8e 	bl	8006fb8 <vListInsertEnd>
			xTicksToWait = portMAX_DELAY;
 800849c:	2c00      	cmp	r4, #0
		prvAddCurrentTaskToDelayedList( xTicksToWait, xWaitIndefinitely );
 800849e:	4621      	mov	r1, r4
 80084a0:	bf0c      	ite	eq
 80084a2:	4628      	moveq	r0, r5
 80084a4:	f04f 30ff 	movne.w	r0, #4294967295
	}
 80084a8:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		prvAddCurrentTaskToDelayedList( xTicksToWait, xWaitIndefinitely );
 80084ac:	f7ff bd98 	b.w	8007fe0 <prvAddCurrentTaskToDelayedList>
 80084b0:	20011b54 	.word	0x20011b54

080084b4 <xTaskRemoveFromEventList>:
{
 80084b4:	b538      	push	{r3, r4, r5, lr}
	pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 80084b6:	68c3      	ldr	r3, [r0, #12]
 80084b8:	68dc      	ldr	r4, [r3, #12]
	configASSERT( pxUnblockedTCB );
 80084ba:	b944      	cbnz	r4, 80084ce <xTaskRemoveFromEventList+0x1a>
 80084bc:	f04f 0350 	mov.w	r3, #80	; 0x50
 80084c0:	f383 8811 	msr	BASEPRI, r3
 80084c4:	f3bf 8f6f 	isb	sy
 80084c8:	f3bf 8f4f 	dsb	sy
 80084cc:	e7fe      	b.n	80084cc <xTaskRemoveFromEventList+0x18>
	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
 80084ce:	f104 0518 	add.w	r5, r4, #24
 80084d2:	4628      	mov	r0, r5
 80084d4:	f7fe fd93 	bl	8006ffe <uxListRemove>
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 80084d8:	4b10      	ldr	r3, [pc, #64]	; (800851c <xTaskRemoveFromEventList+0x68>)
 80084da:	681b      	ldr	r3, [r3, #0]
 80084dc:	b9db      	cbnz	r3, 8008516 <xTaskRemoveFromEventList+0x62>
		( void ) uxListRemove( &( pxUnblockedTCB->xStateListItem ) );
 80084de:	1d25      	adds	r5, r4, #4
 80084e0:	4628      	mov	r0, r5
 80084e2:	f7fe fd8c 	bl	8006ffe <uxListRemove>
		prvAddTaskToReadyList( pxUnblockedTCB );
 80084e6:	4a0e      	ldr	r2, [pc, #56]	; (8008520 <xTaskRemoveFromEventList+0x6c>)
 80084e8:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 80084ea:	6811      	ldr	r1, [r2, #0]
 80084ec:	428b      	cmp	r3, r1
 80084ee:	bf88      	it	hi
 80084f0:	6013      	strhi	r3, [r2, #0]
 80084f2:	4a0c      	ldr	r2, [pc, #48]	; (8008524 <xTaskRemoveFromEventList+0x70>)
 80084f4:	2014      	movs	r0, #20
 80084f6:	4629      	mov	r1, r5
 80084f8:	fb00 2003 	mla	r0, r0, r3, r2
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
 80084fc:	f7fe fd5c 	bl	8006fb8 <vListInsertEnd>
	if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
 8008500:	4b09      	ldr	r3, [pc, #36]	; (8008528 <xTaskRemoveFromEventList+0x74>)
 8008502:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8008504:	681b      	ldr	r3, [r3, #0]
 8008506:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8008508:	429a      	cmp	r2, r3
		xYieldPending = pdTRUE;
 800850a:	bf83      	ittte	hi
 800850c:	4b07      	ldrhi	r3, [pc, #28]	; (800852c <xTaskRemoveFromEventList+0x78>)
 800850e:	2001      	movhi	r0, #1
 8008510:	6018      	strhi	r0, [r3, #0]
		xReturn = pdFALSE;
 8008512:	2000      	movls	r0, #0
}
 8008514:	bd38      	pop	{r3, r4, r5, pc}
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
 8008516:	4629      	mov	r1, r5
 8008518:	4805      	ldr	r0, [pc, #20]	; (8008530 <xTaskRemoveFromEventList+0x7c>)
 800851a:	e7ef      	b.n	80084fc <xTaskRemoveFromEventList+0x48>
 800851c:	20011fcc 	.word	0x20011fcc
 8008520:	20011fd4 	.word	0x20011fd4
 8008524:	20011b60 	.word	0x20011b60
 8008528:	20011b54 	.word	0x20011b54
 800852c:	2001204c 	.word	0x2001204c
 8008530:	20012008 	.word	0x20012008

08008534 <vTaskInternalSetTimeOutState>:
	pxTimeOut->xOverflowCount = xNumOfOverflows;
 8008534:	4b03      	ldr	r3, [pc, #12]	; (8008544 <vTaskInternalSetTimeOutState+0x10>)
 8008536:	681b      	ldr	r3, [r3, #0]
 8008538:	6003      	str	r3, [r0, #0]
	pxTimeOut->xTimeOnEntering = xTickCount;
 800853a:	4b03      	ldr	r3, [pc, #12]	; (8008548 <vTaskInternalSetTimeOutState+0x14>)
 800853c:	681b      	ldr	r3, [r3, #0]
 800853e:	6043      	str	r3, [r0, #4]
}
 8008540:	4770      	bx	lr
 8008542:	bf00      	nop
 8008544:	20012004 	.word	0x20012004
 8008548:	20012048 	.word	0x20012048

0800854c <xTaskCheckForTimeOut>:
{
 800854c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800854e:	460c      	mov	r4, r1
	configASSERT( pxTimeOut );
 8008550:	4605      	mov	r5, r0
 8008552:	b940      	cbnz	r0, 8008566 <xTaskCheckForTimeOut+0x1a>
 8008554:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008558:	f383 8811 	msr	BASEPRI, r3
 800855c:	f3bf 8f6f 	isb	sy
 8008560:	f3bf 8f4f 	dsb	sy
 8008564:	e7fe      	b.n	8008564 <xTaskCheckForTimeOut+0x18>
	configASSERT( pxTicksToWait );
 8008566:	b941      	cbnz	r1, 800857a <xTaskCheckForTimeOut+0x2e>
 8008568:	f04f 0350 	mov.w	r3, #80	; 0x50
 800856c:	f383 8811 	msr	BASEPRI, r3
 8008570:	f3bf 8f6f 	isb	sy
 8008574:	f3bf 8f4f 	dsb	sy
 8008578:	e7fe      	b.n	8008578 <xTaskCheckForTimeOut+0x2c>
	taskENTER_CRITICAL();
 800857a:	f7fe fdbb 	bl	80070f4 <vPortEnterCritical>
		const TickType_t xConstTickCount = xTickCount;
 800857e:	4b0f      	ldr	r3, [pc, #60]	; (80085bc <xTaskCheckForTimeOut+0x70>)
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 8008580:	6868      	ldr	r0, [r5, #4]
		const TickType_t xConstTickCount = xTickCount;
 8008582:	6819      	ldr	r1, [r3, #0]
			if( *pxTicksToWait == portMAX_DELAY )
 8008584:	6823      	ldr	r3, [r4, #0]
 8008586:	1c5e      	adds	r6, r3, #1
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 8008588:	eba1 0200 	sub.w	r2, r1, r0
			if( *pxTicksToWait == portMAX_DELAY )
 800858c:	d00d      	beq.n	80085aa <xTaskCheckForTimeOut+0x5e>
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
 800858e:	4e0c      	ldr	r6, [pc, #48]	; (80085c0 <xTaskCheckForTimeOut+0x74>)
 8008590:	682f      	ldr	r7, [r5, #0]
 8008592:	6836      	ldr	r6, [r6, #0]
 8008594:	42b7      	cmp	r7, r6
 8008596:	d001      	beq.n	800859c <xTaskCheckForTimeOut+0x50>
 8008598:	4288      	cmp	r0, r1
 800859a:	d90d      	bls.n	80085b8 <xTaskCheckForTimeOut+0x6c>
		else if( xElapsedTime < *pxTicksToWait ) /*lint !e961 Explicit casting is only redundant with some compilers, whereas others require it to prevent integer conversion errors. */
 800859c:	4293      	cmp	r3, r2
 800859e:	d909      	bls.n	80085b4 <xTaskCheckForTimeOut+0x68>
			*pxTicksToWait -= xElapsedTime;
 80085a0:	1a9b      	subs	r3, r3, r2
 80085a2:	6023      	str	r3, [r4, #0]
			vTaskInternalSetTimeOutState( pxTimeOut );
 80085a4:	4628      	mov	r0, r5
 80085a6:	f7ff ffc5 	bl	8008534 <vTaskInternalSetTimeOutState>
				xReturn = pdFALSE;
 80085aa:	2400      	movs	r4, #0
	taskEXIT_CRITICAL();
 80085ac:	f7fe fdc4 	bl	8007138 <vPortExitCritical>
}
 80085b0:	4620      	mov	r0, r4
 80085b2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
			*pxTicksToWait = 0;
 80085b4:	2300      	movs	r3, #0
 80085b6:	6023      	str	r3, [r4, #0]
			xReturn = pdTRUE;
 80085b8:	2401      	movs	r4, #1
 80085ba:	e7f7      	b.n	80085ac <xTaskCheckForTimeOut+0x60>
 80085bc:	20012048 	.word	0x20012048
 80085c0:	20012004 	.word	0x20012004

080085c4 <vTaskMissedYield>:
	xYieldPending = pdTRUE;
 80085c4:	4b01      	ldr	r3, [pc, #4]	; (80085cc <vTaskMissedYield+0x8>)
 80085c6:	2201      	movs	r2, #1
 80085c8:	601a      	str	r2, [r3, #0]
}
 80085ca:	4770      	bx	lr
 80085cc:	2001204c 	.word	0x2001204c

080085d0 <xTaskGetSchedulerState>:
		if( xSchedulerRunning == pdFALSE )
 80085d0:	4b05      	ldr	r3, [pc, #20]	; (80085e8 <xTaskGetSchedulerState+0x18>)
 80085d2:	681b      	ldr	r3, [r3, #0]
 80085d4:	b133      	cbz	r3, 80085e4 <xTaskGetSchedulerState+0x14>
			if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 80085d6:	4b05      	ldr	r3, [pc, #20]	; (80085ec <xTaskGetSchedulerState+0x1c>)
 80085d8:	681b      	ldr	r3, [r3, #0]
 80085da:	2b00      	cmp	r3, #0
				xReturn = taskSCHEDULER_SUSPENDED;
 80085dc:	bf0c      	ite	eq
 80085de:	2002      	moveq	r0, #2
 80085e0:	2000      	movne	r0, #0
 80085e2:	4770      	bx	lr
			xReturn = taskSCHEDULER_NOT_STARTED;
 80085e4:	2001      	movs	r0, #1
	}
 80085e6:	4770      	bx	lr
 80085e8:	2001201c 	.word	0x2001201c
 80085ec:	20011fcc 	.word	0x20011fcc

080085f0 <xTaskPriorityInherit>:
	{
 80085f0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
		if( pxMutexHolder != NULL )
 80085f2:	4604      	mov	r4, r0
 80085f4:	b340      	cbz	r0, 8008648 <xTaskPriorityInherit+0x58>
			if( pxMutexHolderTCB->uxPriority < pxCurrentTCB->uxPriority )
 80085f6:	4a1b      	ldr	r2, [pc, #108]	; (8008664 <xTaskPriorityInherit+0x74>)
 80085f8:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 80085fa:	6811      	ldr	r1, [r2, #0]
 80085fc:	6ac9      	ldr	r1, [r1, #44]	; 0x2c
 80085fe:	428b      	cmp	r3, r1
 8008600:	4616      	mov	r6, r2
 8008602:	d226      	bcs.n	8008652 <xTaskPriorityInherit+0x62>
				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 8008604:	6982      	ldr	r2, [r0, #24]
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
 8008606:	4d18      	ldr	r5, [pc, #96]	; (8008668 <xTaskPriorityInherit+0x78>)
				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 8008608:	2a00      	cmp	r2, #0
					listSET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxCurrentTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800860a:	bfa1      	itttt	ge
 800860c:	6832      	ldrge	r2, [r6, #0]
 800860e:	6ad2      	ldrge	r2, [r2, #44]	; 0x2c
 8008610:	f1c2 0238 	rsbge	r2, r2, #56	; 0x38
 8008614:	6182      	strge	r2, [r0, #24]
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
 8008616:	2214      	movs	r2, #20
 8008618:	fb02 5303 	mla	r3, r2, r3, r5
 800861c:	6942      	ldr	r2, [r0, #20]
 800861e:	429a      	cmp	r2, r3
 8008620:	d113      	bne.n	800864a <xTaskPriorityInherit+0x5a>
					if( uxListRemove( &( pxMutexHolderTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8008622:	1d07      	adds	r7, r0, #4
 8008624:	4638      	mov	r0, r7
 8008626:	f7fe fcea 	bl	8006ffe <uxListRemove>
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800862a:	6833      	ldr	r3, [r6, #0]
					prvAddTaskToReadyList( pxMutexHolderTCB );
 800862c:	4a0f      	ldr	r2, [pc, #60]	; (800866c <xTaskPriorityInherit+0x7c>)
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800862e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 8008630:	6811      	ldr	r1, [r2, #0]
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 8008632:	62e3      	str	r3, [r4, #44]	; 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 8008634:	2014      	movs	r0, #20
 8008636:	428b      	cmp	r3, r1
 8008638:	fb00 5003 	mla	r0, r0, r3, r5
 800863c:	4639      	mov	r1, r7
 800863e:	bf88      	it	hi
 8008640:	6013      	strhi	r3, [r2, #0]
 8008642:	f7fe fcb9 	bl	8006fb8 <vListInsertEnd>
				xReturn = pdTRUE;
 8008646:	2001      	movs	r0, #1
	}
 8008648:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800864a:	6833      	ldr	r3, [r6, #0]
 800864c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800864e:	62c3      	str	r3, [r0, #44]	; 0x2c
 8008650:	e7f9      	b.n	8008646 <xTaskPriorityInherit+0x56>
				if( pxMutexHolderTCB->uxBasePriority < pxCurrentTCB->uxPriority )
 8008652:	6813      	ldr	r3, [r2, #0]
 8008654:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 8008656:	6adc      	ldr	r4, [r3, #44]	; 0x2c
 8008658:	42a0      	cmp	r0, r4
 800865a:	bf2c      	ite	cs
 800865c:	2000      	movcs	r0, #0
 800865e:	2001      	movcc	r0, #1
 8008660:	e7f2      	b.n	8008648 <xTaskPriorityInherit+0x58>
 8008662:	bf00      	nop
 8008664:	20011b54 	.word	0x20011b54
 8008668:	20011b60 	.word	0x20011b60
 800866c:	20011fd4 	.word	0x20011fd4

08008670 <xTaskPriorityDisinherit>:
	{
 8008670:	b538      	push	{r3, r4, r5, lr}
		if( pxMutexHolder != NULL )
 8008672:	b908      	cbnz	r0, 8008678 <xTaskPriorityDisinherit+0x8>
	BaseType_t xReturn = pdFALSE;
 8008674:	2000      	movs	r0, #0
	}
 8008676:	bd38      	pop	{r3, r4, r5, pc}
			configASSERT( pxTCB == pxCurrentTCB );
 8008678:	4b1b      	ldr	r3, [pc, #108]	; (80086e8 <xTaskPriorityDisinherit+0x78>)
 800867a:	681c      	ldr	r4, [r3, #0]
 800867c:	4284      	cmp	r4, r0
 800867e:	d008      	beq.n	8008692 <xTaskPriorityDisinherit+0x22>
 8008680:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008684:	f383 8811 	msr	BASEPRI, r3
 8008688:	f3bf 8f6f 	isb	sy
 800868c:	f3bf 8f4f 	dsb	sy
 8008690:	e7fe      	b.n	8008690 <xTaskPriorityDisinherit+0x20>
			configASSERT( pxTCB->uxMutexesHeld );
 8008692:	6d23      	ldr	r3, [r4, #80]	; 0x50
 8008694:	b943      	cbnz	r3, 80086a8 <xTaskPriorityDisinherit+0x38>
 8008696:	f04f 0350 	mov.w	r3, #80	; 0x50
 800869a:	f383 8811 	msr	BASEPRI, r3
 800869e:	f3bf 8f6f 	isb	sy
 80086a2:	f3bf 8f4f 	dsb	sy
 80086a6:	e7fe      	b.n	80086a6 <xTaskPriorityDisinherit+0x36>
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 80086a8:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 80086aa:	6ce2      	ldr	r2, [r4, #76]	; 0x4c
			( pxTCB->uxMutexesHeld )--;
 80086ac:	3b01      	subs	r3, #1
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 80086ae:	4291      	cmp	r1, r2
			( pxTCB->uxMutexesHeld )--;
 80086b0:	6523      	str	r3, [r4, #80]	; 0x50
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 80086b2:	d0df      	beq.n	8008674 <xTaskPriorityDisinherit+0x4>
				if( pxTCB->uxMutexesHeld == ( UBaseType_t ) 0 )
 80086b4:	2b00      	cmp	r3, #0
 80086b6:	d1dd      	bne.n	8008674 <xTaskPriorityDisinherit+0x4>
					if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 80086b8:	1d25      	adds	r5, r4, #4
 80086ba:	4628      	mov	r0, r5
 80086bc:	f7fe fc9f 	bl	8006ffe <uxListRemove>
					pxTCB->uxPriority = pxTCB->uxBasePriority;
 80086c0:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
 80086c2:	62e3      	str	r3, [r4, #44]	; 0x2c
					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 80086c4:	f1c3 0238 	rsb	r2, r3, #56	; 0x38
 80086c8:	61a2      	str	r2, [r4, #24]
					prvAddTaskToReadyList( pxTCB );
 80086ca:	4a08      	ldr	r2, [pc, #32]	; (80086ec <xTaskPriorityDisinherit+0x7c>)
 80086cc:	6811      	ldr	r1, [r2, #0]
 80086ce:	428b      	cmp	r3, r1
 80086d0:	bf88      	it	hi
 80086d2:	6013      	strhi	r3, [r2, #0]
 80086d4:	4a06      	ldr	r2, [pc, #24]	; (80086f0 <xTaskPriorityDisinherit+0x80>)
 80086d6:	2014      	movs	r0, #20
 80086d8:	fb00 2003 	mla	r0, r0, r3, r2
 80086dc:	4629      	mov	r1, r5
 80086de:	f7fe fc6b 	bl	8006fb8 <vListInsertEnd>
					xReturn = pdTRUE;
 80086e2:	2001      	movs	r0, #1
		return xReturn;
 80086e4:	e7c7      	b.n	8008676 <xTaskPriorityDisinherit+0x6>
 80086e6:	bf00      	nop
 80086e8:	20011b54 	.word	0x20011b54
 80086ec:	20011fd4 	.word	0x20011fd4
 80086f0:	20011b60 	.word	0x20011b60

080086f4 <vTaskPriorityDisinheritAfterTimeout>:
	{
 80086f4:	b570      	push	{r4, r5, r6, lr}
		if( pxMutexHolder != NULL )
 80086f6:	4604      	mov	r4, r0
 80086f8:	2800      	cmp	r0, #0
 80086fa:	d041      	beq.n	8008780 <vTaskPriorityDisinheritAfterTimeout+0x8c>
			configASSERT( pxTCB->uxMutexesHeld );
 80086fc:	6d02      	ldr	r2, [r0, #80]	; 0x50
 80086fe:	b942      	cbnz	r2, 8008712 <vTaskPriorityDisinheritAfterTimeout+0x1e>
 8008700:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008704:	f383 8811 	msr	BASEPRI, r3
 8008708:	f3bf 8f6f 	isb	sy
 800870c:	f3bf 8f4f 	dsb	sy
 8008710:	e7fe      	b.n	8008710 <vTaskPriorityDisinheritAfterTimeout+0x1c>
 8008712:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
 8008714:	4299      	cmp	r1, r3
 8008716:	bf38      	it	cc
 8008718:	4619      	movcc	r1, r3
			if( pxTCB->uxPriority != uxPriorityToUse )
 800871a:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 800871c:	428b      	cmp	r3, r1
 800871e:	d02f      	beq.n	8008780 <vTaskPriorityDisinheritAfterTimeout+0x8c>
				if( pxTCB->uxMutexesHeld == uxOnlyOneMutexHeld )
 8008720:	2a01      	cmp	r2, #1
 8008722:	d12d      	bne.n	8008780 <vTaskPriorityDisinheritAfterTimeout+0x8c>
					configASSERT( pxTCB != pxCurrentTCB );
 8008724:	4a17      	ldr	r2, [pc, #92]	; (8008784 <vTaskPriorityDisinheritAfterTimeout+0x90>)
 8008726:	6812      	ldr	r2, [r2, #0]
 8008728:	4282      	cmp	r2, r0
 800872a:	d108      	bne.n	800873e <vTaskPriorityDisinheritAfterTimeout+0x4a>
 800872c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008730:	f383 8811 	msr	BASEPRI, r3
 8008734:	f3bf 8f6f 	isb	sy
 8008738:	f3bf 8f4f 	dsb	sy
 800873c:	e7fe      	b.n	800873c <vTaskPriorityDisinheritAfterTimeout+0x48>
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800873e:	6982      	ldr	r2, [r0, #24]
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 8008740:	4d11      	ldr	r5, [pc, #68]	; (8008788 <vTaskPriorityDisinheritAfterTimeout+0x94>)
					pxTCB->uxPriority = uxPriorityToUse;
 8008742:	62c1      	str	r1, [r0, #44]	; 0x2c
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 8008744:	2a00      	cmp	r2, #0
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 8008746:	f04f 0214 	mov.w	r2, #20
 800874a:	fb02 5303 	mla	r3, r2, r3, r5
 800874e:	6942      	ldr	r2, [r0, #20]
						listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriorityToUse ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8008750:	bfa4      	itt	ge
 8008752:	f1c1 0138 	rsbge	r1, r1, #56	; 0x38
 8008756:	6181      	strge	r1, [r0, #24]
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 8008758:	429a      	cmp	r2, r3
 800875a:	d111      	bne.n	8008780 <vTaskPriorityDisinheritAfterTimeout+0x8c>
						if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800875c:	1d06      	adds	r6, r0, #4
 800875e:	4630      	mov	r0, r6
 8008760:	f7fe fc4d 	bl	8006ffe <uxListRemove>
						prvAddTaskToReadyList( pxTCB );
 8008764:	4a09      	ldr	r2, [pc, #36]	; (800878c <vTaskPriorityDisinheritAfterTimeout+0x98>)
 8008766:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8008768:	6811      	ldr	r1, [r2, #0]
 800876a:	2014      	movs	r0, #20
 800876c:	428b      	cmp	r3, r1
 800876e:	fb00 5003 	mla	r0, r0, r3, r5
 8008772:	4631      	mov	r1, r6
	}
 8008774:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
						prvAddTaskToReadyList( pxTCB );
 8008778:	bf88      	it	hi
 800877a:	6013      	strhi	r3, [r2, #0]
 800877c:	f7fe bc1c 	b.w	8006fb8 <vListInsertEnd>
	}
 8008780:	bd70      	pop	{r4, r5, r6, pc}
 8008782:	bf00      	nop
 8008784:	20011b54 	.word	0x20011b54
 8008788:	20011b60 	.word	0x20011b60
 800878c:	20011fd4 	.word	0x20011fd4

08008790 <pvTaskIncrementMutexHeldCount>:
		if( pxCurrentTCB != NULL )
 8008790:	4b04      	ldr	r3, [pc, #16]	; (80087a4 <pvTaskIncrementMutexHeldCount+0x14>)
 8008792:	681a      	ldr	r2, [r3, #0]
 8008794:	b11a      	cbz	r2, 800879e <pvTaskIncrementMutexHeldCount+0xe>
			( pxCurrentTCB->uxMutexesHeld )++;
 8008796:	6819      	ldr	r1, [r3, #0]
 8008798:	6d0a      	ldr	r2, [r1, #80]	; 0x50
 800879a:	3201      	adds	r2, #1
 800879c:	650a      	str	r2, [r1, #80]	; 0x50
		return pxCurrentTCB;
 800879e:	6818      	ldr	r0, [r3, #0]
	}
 80087a0:	4770      	bx	lr
 80087a2:	bf00      	nop
 80087a4:	20011b54 	.word	0x20011b54

080087a8 <prvCheckForValidListAndQueue>:
	pxOverflowTimerList = pxTemp;
}
/*-----------------------------------------------------------*/

static void prvCheckForValidListAndQueue( void )
{
 80087a8:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
	/* Check that the list from which active timers are referenced, and the
	queue used to communicate with the timer service, have been
	initialised. */
	taskENTER_CRITICAL();
	{
		if( xTimerQueue == NULL )
 80087aa:	4c11      	ldr	r4, [pc, #68]	; (80087f0 <prvCheckForValidListAndQueue+0x48>)
	taskENTER_CRITICAL();
 80087ac:	f7fe fca2 	bl	80070f4 <vPortEnterCritical>
		if( xTimerQueue == NULL )
 80087b0:	6825      	ldr	r5, [r4, #0]
 80087b2:	b9bd      	cbnz	r5, 80087e4 <prvCheckForValidListAndQueue+0x3c>
		{
			vListInitialise( &xActiveTimerList1 );
 80087b4:	4f0f      	ldr	r7, [pc, #60]	; (80087f4 <prvCheckForValidListAndQueue+0x4c>)
			vListInitialise( &xActiveTimerList2 );
 80087b6:	4e10      	ldr	r6, [pc, #64]	; (80087f8 <prvCheckForValidListAndQueue+0x50>)
			vListInitialise( &xActiveTimerList1 );
 80087b8:	4638      	mov	r0, r7
 80087ba:	f7fe fbef 	bl	8006f9c <vListInitialise>
			vListInitialise( &xActiveTimerList2 );
 80087be:	4630      	mov	r0, r6
 80087c0:	f7fe fbec 	bl	8006f9c <vListInitialise>
			pxCurrentTimerList = &xActiveTimerList1;
 80087c4:	4b0d      	ldr	r3, [pc, #52]	; (80087fc <prvCheckForValidListAndQueue+0x54>)
				/* The timer queue is allocated statically in case
				configSUPPORT_DYNAMIC_ALLOCATION is 0. */
				static StaticQueue_t xStaticTimerQueue; /*lint !e956 Ok to declare in this manner to prevent additional conditional compilation guards in other locations. */
				static uint8_t ucStaticTimerQueueStorage[ ( size_t ) configTIMER_QUEUE_LENGTH * sizeof( DaemonTaskMessage_t ) ]; /*lint !e956 Ok to declare in this manner to prevent additional conditional compilation guards in other locations. */

				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 80087c6:	4a0e      	ldr	r2, [pc, #56]	; (8008800 <prvCheckForValidListAndQueue+0x58>)
			pxCurrentTimerList = &xActiveTimerList1;
 80087c8:	601f      	str	r7, [r3, #0]
			pxOverflowTimerList = &xActiveTimerList2;
 80087ca:	4b0e      	ldr	r3, [pc, #56]	; (8008804 <prvCheckForValidListAndQueue+0x5c>)
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 80087cc:	2110      	movs	r1, #16
			pxOverflowTimerList = &xActiveTimerList2;
 80087ce:	601e      	str	r6, [r3, #0]
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 80087d0:	200a      	movs	r0, #10
 80087d2:	9500      	str	r5, [sp, #0]
 80087d4:	4b0c      	ldr	r3, [pc, #48]	; (8008808 <prvCheckForValidListAndQueue+0x60>)
 80087d6:	f7fe fea5 	bl	8007524 <xQueueGenericCreateStatic>
 80087da:	6020      	str	r0, [r4, #0]
			}
			#endif

			#if ( configQUEUE_REGISTRY_SIZE > 0 )
			{
				if( xTimerQueue != NULL )
 80087dc:	b110      	cbz	r0, 80087e4 <prvCheckForValidListAndQueue+0x3c>
				{
					vQueueAddToRegistry( xTimerQueue, "TmrQ" );
 80087de:	490b      	ldr	r1, [pc, #44]	; (800880c <prvCheckForValidListAndQueue+0x64>)
 80087e0:	f7ff fa70 	bl	8007cc4 <vQueueAddToRegistry>
		{
			mtCOVERAGE_TEST_MARKER();
		}
	}
	taskEXIT_CRITICAL();
}
 80087e4:	b003      	add	sp, #12
 80087e6:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
	taskEXIT_CRITICAL();
 80087ea:	f7fe bca5 	b.w	8007138 <vPortExitCritical>
 80087ee:	bf00      	nop
 80087f0:	20012174 	.word	0x20012174
 80087f4:	200120f8 	.word	0x200120f8
 80087f8:	2001210c 	.word	0x2001210c
 80087fc:	20012050 	.word	0x20012050
 8008800:	20012058 	.word	0x20012058
 8008804:	20012054 	.word	0x20012054
 8008808:	20012124 	.word	0x20012124
 800880c:	0801b251 	.word	0x0801b251

08008810 <prvInsertTimerInActiveList>:
	if( xNextExpiryTime <= xTimeNow )
 8008810:	4291      	cmp	r1, r2
{
 8008812:	b508      	push	{r3, lr}
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
 8008814:	6041      	str	r1, [r0, #4]
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 8008816:	6100      	str	r0, [r0, #16]
	if( xNextExpiryTime <= xTimeNow )
 8008818:	d80a      	bhi.n	8008830 <prvInsertTimerInActiveList+0x20>
		if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks ) /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800881a:	1ad2      	subs	r2, r2, r3
 800881c:	6983      	ldr	r3, [r0, #24]
 800881e:	429a      	cmp	r2, r3
 8008820:	d20d      	bcs.n	800883e <prvInsertTimerInActiveList+0x2e>
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
 8008822:	4b08      	ldr	r3, [pc, #32]	; (8008844 <prvInsertTimerInActiveList+0x34>)
 8008824:	1d01      	adds	r1, r0, #4
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 8008826:	6818      	ldr	r0, [r3, #0]
 8008828:	f7fe fbd2 	bl	8006fd0 <vListInsert>
BaseType_t xProcessTimerNow = pdFALSE;
 800882c:	2000      	movs	r0, #0
}
 800882e:	bd08      	pop	{r3, pc}
		if( ( xTimeNow < xCommandTime ) && ( xNextExpiryTime >= xCommandTime ) )
 8008830:	429a      	cmp	r2, r3
 8008832:	d201      	bcs.n	8008838 <prvInsertTimerInActiveList+0x28>
 8008834:	4299      	cmp	r1, r3
 8008836:	d202      	bcs.n	800883e <prvInsertTimerInActiveList+0x2e>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 8008838:	1d01      	adds	r1, r0, #4
 800883a:	4b03      	ldr	r3, [pc, #12]	; (8008848 <prvInsertTimerInActiveList+0x38>)
 800883c:	e7f3      	b.n	8008826 <prvInsertTimerInActiveList+0x16>
			xProcessTimerNow = pdTRUE;
 800883e:	2001      	movs	r0, #1
	return xProcessTimerNow;
 8008840:	e7f5      	b.n	800882e <prvInsertTimerInActiveList+0x1e>
 8008842:	bf00      	nop
 8008844:	20012054 	.word	0x20012054
 8008848:	20012050 	.word	0x20012050

0800884c <xTimerCreateTimerTask>:
{
 800884c:	b510      	push	{r4, lr}
 800884e:	b088      	sub	sp, #32
	prvCheckForValidListAndQueue();
 8008850:	f7ff ffaa 	bl	80087a8 <prvCheckForValidListAndQueue>
	if( xTimerQueue != NULL )
 8008854:	4b12      	ldr	r3, [pc, #72]	; (80088a0 <xTimerCreateTimerTask+0x54>)
 8008856:	681b      	ldr	r3, [r3, #0]
 8008858:	b1b3      	cbz	r3, 8008888 <xTimerCreateTimerTask+0x3c>
			StaticTask_t *pxTimerTaskTCBBuffer = NULL;
 800885a:	2400      	movs	r4, #0
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 800885c:	aa07      	add	r2, sp, #28
 800885e:	a906      	add	r1, sp, #24
 8008860:	a805      	add	r0, sp, #20
			StackType_t *pxTimerTaskStackBuffer = NULL;
 8008862:	e9cd 4405 	strd	r4, r4, [sp, #20]
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 8008866:	f7fe faa5 	bl	8006db4 <vApplicationGetTimerTaskMemory>
			xTimerTaskHandle = xTaskCreateStatic(	prvTimerTask,
 800886a:	9b05      	ldr	r3, [sp, #20]
 800886c:	9302      	str	r3, [sp, #8]
 800886e:	9b06      	ldr	r3, [sp, #24]
 8008870:	9301      	str	r3, [sp, #4]
 8008872:	2302      	movs	r3, #2
 8008874:	9300      	str	r3, [sp, #0]
 8008876:	9a07      	ldr	r2, [sp, #28]
 8008878:	490a      	ldr	r1, [pc, #40]	; (80088a4 <xTimerCreateTimerTask+0x58>)
 800887a:	480b      	ldr	r0, [pc, #44]	; (80088a8 <xTimerCreateTimerTask+0x5c>)
 800887c:	4623      	mov	r3, r4
 800887e:	f7ff fbe9 	bl	8008054 <xTaskCreateStatic>
 8008882:	4b0a      	ldr	r3, [pc, #40]	; (80088ac <xTimerCreateTimerTask+0x60>)
 8008884:	6018      	str	r0, [r3, #0]
			if( xTimerTaskHandle != NULL )
 8008886:	b940      	cbnz	r0, 800889a <xTimerCreateTimerTask+0x4e>
 8008888:	f04f 0350 	mov.w	r3, #80	; 0x50
 800888c:	f383 8811 	msr	BASEPRI, r3
 8008890:	f3bf 8f6f 	isb	sy
 8008894:	f3bf 8f4f 	dsb	sy
 8008898:	e7fe      	b.n	8008898 <xTimerCreateTimerTask+0x4c>
}
 800889a:	2001      	movs	r0, #1
 800889c:	b008      	add	sp, #32
 800889e:	bd10      	pop	{r4, pc}
 80088a0:	20012174 	.word	0x20012174
 80088a4:	0801b256 	.word	0x0801b256
 80088a8:	08008989 	.word	0x08008989
 80088ac:	20012178 	.word	0x20012178

080088b0 <xTimerGenericCommand>:
{
 80088b0:	b530      	push	{r4, r5, lr}
 80088b2:	4615      	mov	r5, r2
 80088b4:	b085      	sub	sp, #20
 80088b6:	461a      	mov	r2, r3
	configASSERT( xTimer );
 80088b8:	4603      	mov	r3, r0
 80088ba:	b940      	cbnz	r0, 80088ce <xTimerGenericCommand+0x1e>
 80088bc:	f04f 0350 	mov.w	r3, #80	; 0x50
 80088c0:	f383 8811 	msr	BASEPRI, r3
 80088c4:	f3bf 8f6f 	isb	sy
 80088c8:	f3bf 8f4f 	dsb	sy
 80088cc:	e7fe      	b.n	80088cc <xTimerGenericCommand+0x1c>
	if( xTimerQueue != NULL )
 80088ce:	4c0d      	ldr	r4, [pc, #52]	; (8008904 <xTimerGenericCommand+0x54>)
 80088d0:	6820      	ldr	r0, [r4, #0]
 80088d2:	b180      	cbz	r0, 80088f6 <xTimerGenericCommand+0x46>
		if( xCommandID < tmrFIRST_FROM_ISR_COMMAND )
 80088d4:	2905      	cmp	r1, #5
		xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
 80088d6:	e9cd 1500 	strd	r1, r5, [sp]
		xMessage.u.xTimerParameters.pxTimer = xTimer;
 80088da:	9302      	str	r3, [sp, #8]
		if( xCommandID < tmrFIRST_FROM_ISR_COMMAND )
 80088dc:	dc0d      	bgt.n	80088fa <xTimerGenericCommand+0x4a>
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 80088de:	f7ff fe77 	bl	80085d0 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 80088e2:	2300      	movs	r3, #0
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 80088e4:	2802      	cmp	r0, #2
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 80088e6:	bf08      	it	eq
 80088e8:	9a08      	ldreq	r2, [sp, #32]
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, tmrNO_DELAY );
 80088ea:	6820      	ldr	r0, [r4, #0]
 80088ec:	bf18      	it	ne
 80088ee:	461a      	movne	r2, r3
 80088f0:	4669      	mov	r1, sp
 80088f2:	f7fe fecd 	bl	8007690 <xQueueGenericSend>
}
 80088f6:	b005      	add	sp, #20
 80088f8:	bd30      	pop	{r4, r5, pc}
			xReturn = xQueueSendToBackFromISR( xTimerQueue, &xMessage, pxHigherPriorityTaskWoken );
 80088fa:	2300      	movs	r3, #0
 80088fc:	4669      	mov	r1, sp
 80088fe:	f7fe ff79 	bl	80077f4 <xQueueGenericSendFromISR>
 8008902:	e7f8      	b.n	80088f6 <xTimerGenericCommand+0x46>
 8008904:	20012174 	.word	0x20012174

08008908 <prvSwitchTimerLists>:
{
 8008908:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 800890c:	4d1c      	ldr	r5, [pc, #112]	; (8008980 <prvSwitchTimerLists+0x78>)
				xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
 800890e:	f04f 0800 	mov.w	r8, #0
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 8008912:	682b      	ldr	r3, [r5, #0]
 8008914:	681a      	ldr	r2, [r3, #0]
 8008916:	b932      	cbnz	r2, 8008926 <prvSwitchTimerLists+0x1e>
	pxCurrentTimerList = pxOverflowTimerList;
 8008918:	4a1a      	ldr	r2, [pc, #104]	; (8008984 <prvSwitchTimerLists+0x7c>)
 800891a:	6811      	ldr	r1, [r2, #0]
 800891c:	6029      	str	r1, [r5, #0]
	pxOverflowTimerList = pxTemp;
 800891e:	6013      	str	r3, [r2, #0]
}
 8008920:	b002      	add	sp, #8
 8008922:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 8008926:	68db      	ldr	r3, [r3, #12]
		pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8008928:	68dc      	ldr	r4, [r3, #12]
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 800892a:	681e      	ldr	r6, [r3, #0]
		( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 800892c:	1d27      	adds	r7, r4, #4
 800892e:	4638      	mov	r0, r7
 8008930:	f7fe fb65 	bl	8006ffe <uxListRemove>
		pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 8008934:	6a23      	ldr	r3, [r4, #32]
 8008936:	4620      	mov	r0, r4
 8008938:	4798      	blx	r3
		if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 800893a:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 800893e:	075b      	lsls	r3, r3, #29
 8008940:	d5e7      	bpl.n	8008912 <prvSwitchTimerLists+0xa>
			xReloadTime = ( xNextExpireTime + pxTimer->xTimerPeriodInTicks );
 8008942:	69a3      	ldr	r3, [r4, #24]
 8008944:	4433      	add	r3, r6
			if( xReloadTime > xNextExpireTime )
 8008946:	429e      	cmp	r6, r3
 8008948:	d206      	bcs.n	8008958 <prvSwitchTimerLists+0x50>
				listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xReloadTime );
 800894a:	6063      	str	r3, [r4, #4]
				listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 800894c:	6124      	str	r4, [r4, #16]
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800894e:	4639      	mov	r1, r7
 8008950:	6828      	ldr	r0, [r5, #0]
 8008952:	f7fe fb3d 	bl	8006fd0 <vListInsert>
 8008956:	e7dc      	b.n	8008912 <prvSwitchTimerLists+0xa>
				xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
 8008958:	2300      	movs	r3, #0
 800895a:	f8cd 8000 	str.w	r8, [sp]
 800895e:	4632      	mov	r2, r6
 8008960:	4619      	mov	r1, r3
 8008962:	4620      	mov	r0, r4
 8008964:	f7ff ffa4 	bl	80088b0 <xTimerGenericCommand>
				configASSERT( xResult );
 8008968:	2800      	cmp	r0, #0
 800896a:	d1d2      	bne.n	8008912 <prvSwitchTimerLists+0xa>
 800896c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008970:	f383 8811 	msr	BASEPRI, r3
 8008974:	f3bf 8f6f 	isb	sy
 8008978:	f3bf 8f4f 	dsb	sy
 800897c:	e7fe      	b.n	800897c <prvSwitchTimerLists+0x74>
 800897e:	bf00      	nop
 8008980:	20012050 	.word	0x20012050
 8008984:	20012054 	.word	0x20012054

08008988 <prvTimerTask>:
{
 8008988:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 800898c:	4d81      	ldr	r5, [pc, #516]	; (8008b94 <prvTimerTask+0x20c>)
					portYIELD_WITHIN_API();
 800898e:	f8df 8210 	ldr.w	r8, [pc, #528]	; 8008ba0 <prvTimerTask+0x218>
{
 8008992:	b087      	sub	sp, #28
 8008994:	462f      	mov	r7, r5
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 8008996:	682a      	ldr	r2, [r5, #0]
 8008998:	6813      	ldr	r3, [r2, #0]
 800899a:	b353      	cbz	r3, 80089f2 <prvTimerTask+0x6a>
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 800899c:	68d3      	ldr	r3, [r2, #12]
 800899e:	f8d3 9000 	ldr.w	r9, [r3]
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 80089a2:	2400      	movs	r4, #0
	if( xTimeNow < xLastTime )
 80089a4:	f8df b1fc 	ldr.w	fp, [pc, #508]	; 8008ba4 <prvTimerTask+0x21c>
	vTaskSuspendAll();
 80089a8:	f7ff fbfe 	bl	80081a8 <vTaskSuspendAll>
	xTimeNow = xTaskGetTickCount();
 80089ac:	f7ff fc04 	bl	80081b8 <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
 80089b0:	f8db 3000 	ldr.w	r3, [fp]
 80089b4:	4298      	cmp	r0, r3
	xTimeNow = xTaskGetTickCount();
 80089b6:	4682      	mov	sl, r0
 80089b8:	465e      	mov	r6, fp
	if( xTimeNow < xLastTime )
 80089ba:	d31d      	bcc.n	80089f8 <prvTimerTask+0x70>
	xLastTime = xTimeNow;
 80089bc:	f8cb 0000 	str.w	r0, [fp]
			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
 80089c0:	b32c      	cbz	r4, 8008a0e <prvTimerTask+0x86>
					xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
 80089c2:	4b75      	ldr	r3, [pc, #468]	; (8008b98 <prvTimerTask+0x210>)
 80089c4:	681b      	ldr	r3, [r3, #0]
 80089c6:	681a      	ldr	r2, [r3, #0]
 80089c8:	fab2 f282 	clz	r2, r2
 80089cc:	0952      	lsrs	r2, r2, #5
				vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
 80089ce:	4b73      	ldr	r3, [pc, #460]	; (8008b9c <prvTimerTask+0x214>)
 80089d0:	eba9 010a 	sub.w	r1, r9, sl
 80089d4:	6818      	ldr	r0, [r3, #0]
 80089d6:	f7ff f9b2 	bl	8007d3e <vQueueWaitForMessageRestricted>
				if( xTaskResumeAll() == pdFALSE )
 80089da:	f7ff fc83 	bl	80082e4 <xTaskResumeAll>
 80089de:	b988      	cbnz	r0, 8008a04 <prvTimerTask+0x7c>
					portYIELD_WITHIN_API();
 80089e0:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
 80089e4:	f8c8 3000 	str.w	r3, [r8]
 80089e8:	f3bf 8f4f 	dsb	sy
 80089ec:	f3bf 8f6f 	isb	sy
 80089f0:	e008      	b.n	8008a04 <prvTimerTask+0x7c>
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 80089f2:	2401      	movs	r4, #1
		xNextExpireTime = ( TickType_t ) 0U;
 80089f4:	4699      	mov	r9, r3
 80089f6:	e7d5      	b.n	80089a4 <prvTimerTask+0x1c>
		prvSwitchTimerLists();
 80089f8:	f7ff ff86 	bl	8008908 <prvSwitchTimerLists>
	xLastTime = xTimeNow;
 80089fc:	f8cb a000 	str.w	sl, [fp]
			( void ) xTaskResumeAll();
 8008a00:	f7ff fc70 	bl	80082e4 <xTaskResumeAll>
	while( xQueueReceive( xTimerQueue, &xMessage, tmrNO_DELAY ) != pdFAIL ) /*lint !e603 xMessage does not have to be initialised as it is passed out, not in, and it is not used unless xQueueReceive() returns pdTRUE. */
 8008a04:	f8df 9194 	ldr.w	r9, [pc, #404]	; 8008b9c <prvTimerTask+0x214>
 8008a08:	f04f 0a00 	mov.w	sl, #0
 8008a0c:	e07d      	b.n	8008b0a <prvTimerTask+0x182>
			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
 8008a0e:	4581      	cmp	r9, r0
 8008a10:	d830      	bhi.n	8008a74 <prvTimerTask+0xec>
				( void ) xTaskResumeAll();
 8008a12:	f7ff fc67 	bl	80082e4 <xTaskResumeAll>
Timer_t * const pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8008a16:	683b      	ldr	r3, [r7, #0]
 8008a18:	68db      	ldr	r3, [r3, #12]
 8008a1a:	f8d3 b00c 	ldr.w	fp, [r3, #12]
	( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 8008a1e:	f10b 0004 	add.w	r0, fp, #4
 8008a22:	f7fe faec 	bl	8006ffe <uxListRemove>
	if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 8008a26:	f89b 3028 	ldrb.w	r3, [fp, #40]	; 0x28
 8008a2a:	0758      	lsls	r0, r3, #29
 8008a2c:	d519      	bpl.n	8008a62 <prvTimerTask+0xda>
		if( prvInsertTimerInActiveList( pxTimer, ( xNextExpireTime + pxTimer->xTimerPeriodInTicks ), xTimeNow, xNextExpireTime ) != pdFALSE )
 8008a2e:	f8db 1018 	ldr.w	r1, [fp, #24]
 8008a32:	464b      	mov	r3, r9
 8008a34:	4652      	mov	r2, sl
 8008a36:	4449      	add	r1, r9
 8008a38:	4658      	mov	r0, fp
 8008a3a:	f7ff fee9 	bl	8008810 <prvInsertTimerInActiveList>
 8008a3e:	b1a0      	cbz	r0, 8008a6a <prvTimerTask+0xe2>
			xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
 8008a40:	9400      	str	r4, [sp, #0]
 8008a42:	4623      	mov	r3, r4
 8008a44:	464a      	mov	r2, r9
 8008a46:	4621      	mov	r1, r4
 8008a48:	4658      	mov	r0, fp
 8008a4a:	f7ff ff31 	bl	80088b0 <xTimerGenericCommand>
			configASSERT( xResult );
 8008a4e:	b960      	cbnz	r0, 8008a6a <prvTimerTask+0xe2>
 8008a50:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008a54:	f383 8811 	msr	BASEPRI, r3
 8008a58:	f3bf 8f6f 	isb	sy
 8008a5c:	f3bf 8f4f 	dsb	sy
 8008a60:	e7fe      	b.n	8008a60 <prvTimerTask+0xd8>
		pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 8008a62:	f023 0301 	bic.w	r3, r3, #1
 8008a66:	f88b 3028 	strb.w	r3, [fp, #40]	; 0x28
	pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 8008a6a:	f8db 3020 	ldr.w	r3, [fp, #32]
 8008a6e:	4658      	mov	r0, fp
 8008a70:	4798      	blx	r3
 8008a72:	e7c7      	b.n	8008a04 <prvTimerTask+0x7c>
			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
 8008a74:	4622      	mov	r2, r4
 8008a76:	e7aa      	b.n	80089ce <prvTimerTask+0x46>
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 8008a78:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 8008a7c:	69a1      	ldr	r1, [r4, #24]
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 8008a7e:	f043 0301 	orr.w	r3, r3, #1
 8008a82:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 8008a86:	9b03      	ldr	r3, [sp, #12]
 8008a88:	465a      	mov	r2, fp
 8008a8a:	4419      	add	r1, r3
 8008a8c:	4620      	mov	r0, r4
 8008a8e:	f7ff febf 	bl	8008810 <prvInsertTimerInActiveList>
 8008a92:	2800      	cmp	r0, #0
 8008a94:	d039      	beq.n	8008b0a <prvTimerTask+0x182>
						pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 8008a96:	6a23      	ldr	r3, [r4, #32]
 8008a98:	4620      	mov	r0, r4
 8008a9a:	4798      	blx	r3
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 8008a9c:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 8008aa0:	0759      	lsls	r1, r3, #29
 8008aa2:	d532      	bpl.n	8008b0a <prvTimerTask+0x182>
							xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, NULL, tmrNO_DELAY );
 8008aa4:	69a2      	ldr	r2, [r4, #24]
 8008aa6:	9903      	ldr	r1, [sp, #12]
 8008aa8:	f8cd a000 	str.w	sl, [sp]
 8008aac:	2300      	movs	r3, #0
 8008aae:	440a      	add	r2, r1
 8008ab0:	4620      	mov	r0, r4
 8008ab2:	4619      	mov	r1, r3
 8008ab4:	f7ff fefc 	bl	80088b0 <xTimerGenericCommand>
							configASSERT( xResult );
 8008ab8:	bb38      	cbnz	r0, 8008b0a <prvTimerTask+0x182>
 8008aba:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008abe:	f383 8811 	msr	BASEPRI, r3
 8008ac2:	f3bf 8f6f 	isb	sy
 8008ac6:	f3bf 8f4f 	dsb	sy
 8008aca:	e7fe      	b.n	8008aca <prvTimerTask+0x142>
					pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 8008acc:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
							pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 8008ad0:	f023 0301 	bic.w	r3, r3, #1
 8008ad4:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
 8008ad8:	e017      	b.n	8008b0a <prvTimerTask+0x182>
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 8008ada:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
					pxTimer->xTimerPeriodInTicks = xMessage.u.xTimerParameters.xMessageValue;
 8008ade:	9903      	ldr	r1, [sp, #12]
 8008ae0:	61a1      	str	r1, [r4, #24]
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 8008ae2:	f043 0301 	orr.w	r3, r3, #1
 8008ae6:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
 8008aea:	b941      	cbnz	r1, 8008afe <prvTimerTask+0x176>
 8008aec:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008af0:	f383 8811 	msr	BASEPRI, r3
 8008af4:	f3bf 8f6f 	isb	sy
 8008af8:	f3bf 8f4f 	dsb	sy
 8008afc:	e7fe      	b.n	8008afc <prvTimerTask+0x174>
					( void ) prvInsertTimerInActiveList( pxTimer, ( xTimeNow + pxTimer->xTimerPeriodInTicks ), xTimeNow, xTimeNow );
 8008afe:	465b      	mov	r3, fp
 8008b00:	465a      	mov	r2, fp
 8008b02:	4459      	add	r1, fp
 8008b04:	4620      	mov	r0, r4
 8008b06:	f7ff fe83 	bl	8008810 <prvInsertTimerInActiveList>
	while( xQueueReceive( xTimerQueue, &xMessage, tmrNO_DELAY ) != pdFAIL ) /*lint !e603 xMessage does not have to be initialised as it is passed out, not in, and it is not used unless xQueueReceive() returns pdTRUE. */
 8008b0a:	2200      	movs	r2, #0
 8008b0c:	a902      	add	r1, sp, #8
 8008b0e:	f8d9 0000 	ldr.w	r0, [r9]
 8008b12:	f7fe ff25 	bl	8007960 <xQueueReceive>
 8008b16:	2800      	cmp	r0, #0
 8008b18:	f43f af3d 	beq.w	8008996 <prvTimerTask+0xe>
			if( xMessage.xMessageID < ( BaseType_t ) 0 )
 8008b1c:	9b02      	ldr	r3, [sp, #8]
 8008b1e:	2b00      	cmp	r3, #0
 8008b20:	da03      	bge.n	8008b2a <prvTimerTask+0x1a2>
				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
 8008b22:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8008b26:	9b03      	ldr	r3, [sp, #12]
 8008b28:	4798      	blx	r3
		if( xMessage.xMessageID >= ( BaseType_t ) 0 )
 8008b2a:	9b02      	ldr	r3, [sp, #8]
 8008b2c:	2b00      	cmp	r3, #0
 8008b2e:	dbec      	blt.n	8008b0a <prvTimerTask+0x182>
			pxTimer = xMessage.u.xTimerParameters.pxTimer;
 8008b30:	9c04      	ldr	r4, [sp, #16]
			if( listIS_CONTAINED_WITHIN( NULL, &( pxTimer->xTimerListItem ) ) == pdFALSE ) /*lint !e961. The cast is only redundant when NULL is passed into the macro. */
 8008b32:	6963      	ldr	r3, [r4, #20]
 8008b34:	b113      	cbz	r3, 8008b3c <prvTimerTask+0x1b4>
				( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 8008b36:	1d20      	adds	r0, r4, #4
 8008b38:	f7fe fa61 	bl	8006ffe <uxListRemove>
	xTimeNow = xTaskGetTickCount();
 8008b3c:	f7ff fb3c 	bl	80081b8 <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
 8008b40:	6833      	ldr	r3, [r6, #0]
 8008b42:	4298      	cmp	r0, r3
	xTimeNow = xTaskGetTickCount();
 8008b44:	4683      	mov	fp, r0
	if( xTimeNow < xLastTime )
 8008b46:	d201      	bcs.n	8008b4c <prvTimerTask+0x1c4>
		prvSwitchTimerLists();
 8008b48:	f7ff fede 	bl	8008908 <prvSwitchTimerLists>
			switch( xMessage.xMessageID )
 8008b4c:	9b02      	ldr	r3, [sp, #8]
	xLastTime = xTimeNow;
 8008b4e:	f8c6 b000 	str.w	fp, [r6]
			switch( xMessage.xMessageID )
 8008b52:	2b09      	cmp	r3, #9
 8008b54:	d8d9      	bhi.n	8008b0a <prvTimerTask+0x182>
 8008b56:	a201      	add	r2, pc, #4	; (adr r2, 8008b5c <prvTimerTask+0x1d4>)
 8008b58:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8008b5c:	08008a79 	.word	0x08008a79
 8008b60:	08008a79 	.word	0x08008a79
 8008b64:	08008a79 	.word	0x08008a79
 8008b68:	08008acd 	.word	0x08008acd
 8008b6c:	08008adb 	.word	0x08008adb
 8008b70:	08008b85 	.word	0x08008b85
 8008b74:	08008a79 	.word	0x08008a79
 8008b78:	08008a79 	.word	0x08008a79
 8008b7c:	08008acd 	.word	0x08008acd
 8008b80:	08008adb 	.word	0x08008adb
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_STATICALLY_ALLOCATED ) == ( uint8_t ) 0 )
 8008b84:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 8008b88:	079a      	lsls	r2, r3, #30
 8008b8a:	d4a1      	bmi.n	8008ad0 <prvTimerTask+0x148>
							vPortFree( pxTimer );
 8008b8c:	4620      	mov	r0, r4
 8008b8e:	f7fe f9cd 	bl	8006f2c <vPortFree>
 8008b92:	e7ba      	b.n	8008b0a <prvTimerTask+0x182>
 8008b94:	20012050 	.word	0x20012050
 8008b98:	20012054 	.word	0x20012054
 8008b9c:	20012174 	.word	0x20012174
 8008ba0:	e000ed04 	.word	0xe000ed04
 8008ba4:	20012120 	.word	0x20012120

08008ba8 <_ZNK8touchgfx17AbstractPartition18getAllocationCountEv>:
 8008ba8:	8880      	ldrh	r0, [r0, #4]
 8008baa:	4770      	bx	lr

08008bac <_ZN8touchgfx17AbstractPartition5clearEv>:
 8008bac:	2300      	movs	r3, #0
 8008bae:	8083      	strh	r3, [r0, #4]
 8008bb0:	4770      	bx	lr
	...

08008bb4 <_ZN8touchgfx17AbstractPartition7indexOfEPKv>:
 8008bb4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8008bb6:	6803      	ldr	r3, [r0, #0]
 8008bb8:	4605      	mov	r5, r0
 8008bba:	460e      	mov	r6, r1
 8008bbc:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8008bbe:	2100      	movs	r1, #0
 8008bc0:	4798      	blx	r3
 8008bc2:	682b      	ldr	r3, [r5, #0]
 8008bc4:	4604      	mov	r4, r0
 8008bc6:	6a1b      	ldr	r3, [r3, #32]
 8008bc8:	4628      	mov	r0, r5
 8008bca:	4798      	blx	r3
 8008bcc:	88ab      	ldrh	r3, [r5, #4]
 8008bce:	1b34      	subs	r4, r6, r4
 8008bd0:	b2a4      	uxth	r4, r4
 8008bd2:	fbb4 f4f0 	udiv	r4, r4, r0
 8008bd6:	42a3      	cmp	r3, r4
 8008bd8:	d805      	bhi.n	8008be6 <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x32>
 8008bda:	4b0e      	ldr	r3, [pc, #56]	; (8008c14 <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x60>)
 8008bdc:	4a0e      	ldr	r2, [pc, #56]	; (8008c18 <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x64>)
 8008bde:	2120      	movs	r1, #32
 8008be0:	480e      	ldr	r0, [pc, #56]	; (8008c1c <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x68>)
 8008be2:	f010 fc13 	bl	801940c <__assert_func>
 8008be6:	682b      	ldr	r3, [r5, #0]
 8008be8:	2100      	movs	r1, #0
 8008bea:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8008bec:	4628      	mov	r0, r5
 8008bee:	4798      	blx	r3
 8008bf0:	682b      	ldr	r3, [r5, #0]
 8008bf2:	4607      	mov	r7, r0
 8008bf4:	6a1b      	ldr	r3, [r3, #32]
 8008bf6:	4628      	mov	r0, r5
 8008bf8:	4798      	blx	r3
 8008bfa:	1bf3      	subs	r3, r6, r7
 8008bfc:	b29b      	uxth	r3, r3
 8008bfe:	fbb3 f2f0 	udiv	r2, r3, r0
 8008c02:	fb02 3010 	mls	r0, r2, r0, r3
 8008c06:	b118      	cbz	r0, 8008c10 <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x5c>
 8008c08:	4b05      	ldr	r3, [pc, #20]	; (8008c20 <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x6c>)
 8008c0a:	4a03      	ldr	r2, [pc, #12]	; (8008c18 <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x64>)
 8008c0c:	2121      	movs	r1, #33	; 0x21
 8008c0e:	e7e7      	b.n	8008be0 <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x2c>
 8008c10:	4620      	mov	r0, r4
 8008c12:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8008c14:	0801b25e 	.word	0x0801b25e
 8008c18:	0801b3ca 	.word	0x0801b3ca
 8008c1c:	0801b273 	.word	0x0801b273
 8008c20:	0801b2a1 	.word	0x0801b2a1

08008c24 <_ZN8touchgfx17AbstractPartition8allocateEt>:
 8008c24:	b538      	push	{r3, r4, r5, lr}
 8008c26:	6803      	ldr	r3, [r0, #0]
 8008c28:	6a1b      	ldr	r3, [r3, #32]
 8008c2a:	460d      	mov	r5, r1
 8008c2c:	4604      	mov	r4, r0
 8008c2e:	4798      	blx	r3
 8008c30:	4285      	cmp	r5, r0
 8008c32:	d905      	bls.n	8008c40 <_ZN8touchgfx17AbstractPartition8allocateEt+0x1c>
 8008c34:	4b0c      	ldr	r3, [pc, #48]	; (8008c68 <_ZN8touchgfx17AbstractPartition8allocateEt+0x44>)
 8008c36:	4a0d      	ldr	r2, [pc, #52]	; (8008c6c <_ZN8touchgfx17AbstractPartition8allocateEt+0x48>)
 8008c38:	2132      	movs	r1, #50	; 0x32
 8008c3a:	480d      	ldr	r0, [pc, #52]	; (8008c70 <_ZN8touchgfx17AbstractPartition8allocateEt+0x4c>)
 8008c3c:	f010 fbe6 	bl	801940c <__assert_func>
 8008c40:	6823      	ldr	r3, [r4, #0]
 8008c42:	88a5      	ldrh	r5, [r4, #4]
 8008c44:	69db      	ldr	r3, [r3, #28]
 8008c46:	4620      	mov	r0, r4
 8008c48:	4798      	blx	r3
 8008c4a:	4285      	cmp	r5, r0
 8008c4c:	d303      	bcc.n	8008c56 <_ZN8touchgfx17AbstractPartition8allocateEt+0x32>
 8008c4e:	4b09      	ldr	r3, [pc, #36]	; (8008c74 <_ZN8touchgfx17AbstractPartition8allocateEt+0x50>)
 8008c50:	4a06      	ldr	r2, [pc, #24]	; (8008c6c <_ZN8touchgfx17AbstractPartition8allocateEt+0x48>)
 8008c52:	2133      	movs	r1, #51	; 0x33
 8008c54:	e7f1      	b.n	8008c3a <_ZN8touchgfx17AbstractPartition8allocateEt+0x16>
 8008c56:	6823      	ldr	r3, [r4, #0]
 8008c58:	88a1      	ldrh	r1, [r4, #4]
 8008c5a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8008c5c:	4620      	mov	r0, r4
 8008c5e:	4798      	blx	r3
 8008c60:	88a3      	ldrh	r3, [r4, #4]
 8008c62:	3301      	adds	r3, #1
 8008c64:	80a3      	strh	r3, [r4, #4]
 8008c66:	bd38      	pop	{r3, r4, r5, pc}
 8008c68:	0801b31b 	.word	0x0801b31b
 8008c6c:	0801b40d 	.word	0x0801b40d
 8008c70:	0801b273 	.word	0x0801b273
 8008c74:	0801b332 	.word	0x0801b332

08008c78 <_ZN8touchgfx17AbstractPartition10allocateAtEtt>:
 8008c78:	b570      	push	{r4, r5, r6, lr}
 8008c7a:	6803      	ldr	r3, [r0, #0]
 8008c7c:	6a1b      	ldr	r3, [r3, #32]
 8008c7e:	4616      	mov	r6, r2
 8008c80:	4604      	mov	r4, r0
 8008c82:	460d      	mov	r5, r1
 8008c84:	4798      	blx	r3
 8008c86:	4286      	cmp	r6, r0
 8008c88:	d905      	bls.n	8008c96 <_ZN8touchgfx17AbstractPartition10allocateAtEtt+0x1e>
 8008c8a:	4b06      	ldr	r3, [pc, #24]	; (8008ca4 <_ZN8touchgfx17AbstractPartition10allocateAtEtt+0x2c>)
 8008c8c:	4a06      	ldr	r2, [pc, #24]	; (8008ca8 <_ZN8touchgfx17AbstractPartition10allocateAtEtt+0x30>)
 8008c8e:	4807      	ldr	r0, [pc, #28]	; (8008cac <_ZN8touchgfx17AbstractPartition10allocateAtEtt+0x34>)
 8008c90:	213c      	movs	r1, #60	; 0x3c
 8008c92:	f010 fbbb 	bl	801940c <__assert_func>
 8008c96:	6823      	ldr	r3, [r4, #0]
 8008c98:	4629      	mov	r1, r5
 8008c9a:	4620      	mov	r0, r4
 8008c9c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8008c9e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8008ca2:	4718      	bx	r3
 8008ca4:	0801b31b 	.word	0x0801b31b
 8008ca8:	0801b380 	.word	0x0801b380
 8008cac:	0801b273 	.word	0x0801b273

08008cb0 <_ZN8touchgfx17AbstractPartitionD1Ev>:
 8008cb0:	4770      	bx	lr
	...

08008cb4 <_ZN8touchgfx17AbstractPartitionC1Ev>:
 8008cb4:	4a02      	ldr	r2, [pc, #8]	; (8008cc0 <_ZN8touchgfx17AbstractPartitionC1Ev+0xc>)
 8008cb6:	6002      	str	r2, [r0, #0]
 8008cb8:	2200      	movs	r2, #0
 8008cba:	8082      	strh	r2, [r0, #4]
 8008cbc:	4770      	bx	lr
 8008cbe:	bf00      	nop
 8008cc0:	0801b354 	.word	0x0801b354

08008cc4 <_ZN8touchgfx9Container8containsERKNS_8DrawableE>:
 8008cc4:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8008cc6:	2000      	movs	r0, #0
 8008cc8:	b12b      	cbz	r3, 8008cd6 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 8008cca:	b920      	cbnz	r0, 8008cd6 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 8008ccc:	1a5a      	subs	r2, r3, r1
 8008cce:	4250      	negs	r0, r2
 8008cd0:	4150      	adcs	r0, r2
 8008cd2:	699b      	ldr	r3, [r3, #24]
 8008cd4:	e7f8      	b.n	8008cc8 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x4>
 8008cd6:	4770      	bx	lr

08008cd8 <_ZN8touchgfx9Container9removeAllEv>:
 8008cd8:	2200      	movs	r2, #0
 8008cda:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8008cdc:	b123      	cbz	r3, 8008ce8 <_ZN8touchgfx9Container9removeAllEv+0x10>
 8008cde:	6999      	ldr	r1, [r3, #24]
 8008ce0:	6281      	str	r1, [r0, #40]	; 0x28
 8008ce2:	e9c3 2205 	strd	r2, r2, [r3, #20]
 8008ce6:	e7f8      	b.n	8008cda <_ZN8touchgfx9Container9removeAllEv+0x2>
 8008ce8:	4770      	bx	lr

08008cea <_ZN8touchgfx9Container6unlinkEv>:
 8008cea:	2300      	movs	r3, #0
 8008cec:	6283      	str	r3, [r0, #40]	; 0x28
 8008cee:	4770      	bx	lr

08008cf0 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>:
 8008cf0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8008cf4:	461f      	mov	r7, r3
 8008cf6:	f890 3024 	ldrb.w	r3, [r0, #36]	; 0x24
 8008cfa:	460d      	mov	r5, r1
 8008cfc:	4616      	mov	r6, r2
 8008cfe:	b103      	cbz	r3, 8008d02 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x12>
 8008d00:	6038      	str	r0, [r7, #0]
 8008d02:	6a84      	ldr	r4, [r0, #40]	; 0x28
 8008d04:	b314      	cbz	r4, 8008d4c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x5c>
 8008d06:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 8008d0a:	b1eb      	cbz	r3, 8008d48 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 8008d0c:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8008d10:	428d      	cmp	r5, r1
 8008d12:	db19      	blt.n	8008d48 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 8008d14:	8923      	ldrh	r3, [r4, #8]
 8008d16:	b289      	uxth	r1, r1
 8008d18:	440b      	add	r3, r1
 8008d1a:	b21b      	sxth	r3, r3
 8008d1c:	429d      	cmp	r5, r3
 8008d1e:	da13      	bge.n	8008d48 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 8008d20:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 8008d24:	4296      	cmp	r6, r2
 8008d26:	db0f      	blt.n	8008d48 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 8008d28:	8963      	ldrh	r3, [r4, #10]
 8008d2a:	b292      	uxth	r2, r2
 8008d2c:	4413      	add	r3, r2
 8008d2e:	b21b      	sxth	r3, r3
 8008d30:	429e      	cmp	r6, r3
 8008d32:	da09      	bge.n	8008d48 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 8008d34:	6823      	ldr	r3, [r4, #0]
 8008d36:	1ab2      	subs	r2, r6, r2
 8008d38:	1a69      	subs	r1, r5, r1
 8008d3a:	f8d3 801c 	ldr.w	r8, [r3, #28]
 8008d3e:	b212      	sxth	r2, r2
 8008d40:	463b      	mov	r3, r7
 8008d42:	b209      	sxth	r1, r1
 8008d44:	4620      	mov	r0, r4
 8008d46:	47c0      	blx	r8
 8008d48:	69a4      	ldr	r4, [r4, #24]
 8008d4a:	e7db      	b.n	8008d04 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x14>
 8008d4c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08008d50 <_ZNK8touchgfx9Container12getSolidRectEv>:
 8008d50:	2200      	movs	r2, #0
 8008d52:	8002      	strh	r2, [r0, #0]
 8008d54:	8042      	strh	r2, [r0, #2]
 8008d56:	8082      	strh	r2, [r0, #4]
 8008d58:	80c2      	strh	r2, [r0, #6]
 8008d5a:	4770      	bx	lr

08008d5c <_ZN8touchgfx9Container20moveChildrenRelativeEss>:
 8008d5c:	b570      	push	{r4, r5, r6, lr}
 8008d5e:	6a84      	ldr	r4, [r0, #40]	; 0x28
 8008d60:	460d      	mov	r5, r1
 8008d62:	4616      	mov	r6, r2
 8008d64:	b13c      	cbz	r4, 8008d76 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x1a>
 8008d66:	6823      	ldr	r3, [r4, #0]
 8008d68:	4620      	mov	r0, r4
 8008d6a:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8008d6c:	4632      	mov	r2, r6
 8008d6e:	4629      	mov	r1, r5
 8008d70:	4798      	blx	r3
 8008d72:	69a4      	ldr	r4, [r4, #24]
 8008d74:	e7f6      	b.n	8008d64 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x8>
 8008d76:	bd70      	pop	{r4, r5, r6, pc}

08008d78 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE>:
 8008d78:	b538      	push	{r3, r4, r5, lr}
 8008d7a:	6a84      	ldr	r4, [r0, #40]	; 0x28
 8008d7c:	460d      	mov	r5, r1
 8008d7e:	b134      	cbz	r4, 8008d8e <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x16>
 8008d80:	682b      	ldr	r3, [r5, #0]
 8008d82:	4621      	mov	r1, r4
 8008d84:	689b      	ldr	r3, [r3, #8]
 8008d86:	4628      	mov	r0, r5
 8008d88:	4798      	blx	r3
 8008d8a:	69a4      	ldr	r4, [r4, #24]
 8008d8c:	e7f7      	b.n	8008d7e <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x6>
 8008d8e:	bd38      	pop	{r3, r4, r5, pc}

08008d90 <_ZN8touchgfx9ContainerD1Ev>:
 8008d90:	4770      	bx	lr

08008d92 <_ZN8touchgfx9ContainerD0Ev>:
 8008d92:	b510      	push	{r4, lr}
 8008d94:	212c      	movs	r1, #44	; 0x2c
 8008d96:	4604      	mov	r4, r0
 8008d98:	f010 fb0c 	bl	80193b4 <_ZdlPvj>
 8008d9c:	4620      	mov	r0, r4
 8008d9e:	bd10      	pop	{r4, pc}

08008da0 <_ZN8touchgfx9Container6removeERNS_8DrawableE>:
 8008da0:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8008da2:	b19b      	cbz	r3, 8008dcc <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 8008da4:	428b      	cmp	r3, r1
 8008da6:	d109      	bne.n	8008dbc <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x1c>
 8008da8:	699a      	ldr	r2, [r3, #24]
 8008daa:	2100      	movs	r1, #0
 8008dac:	6159      	str	r1, [r3, #20]
 8008dae:	6282      	str	r2, [r0, #40]	; 0x28
 8008db0:	b902      	cbnz	r2, 8008db4 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x14>
 8008db2:	4770      	bx	lr
 8008db4:	6199      	str	r1, [r3, #24]
 8008db6:	4770      	bx	lr
 8008db8:	4613      	mov	r3, r2
 8008dba:	b13a      	cbz	r2, 8008dcc <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 8008dbc:	699a      	ldr	r2, [r3, #24]
 8008dbe:	428a      	cmp	r2, r1
 8008dc0:	d1fa      	bne.n	8008db8 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x18>
 8008dc2:	698a      	ldr	r2, [r1, #24]
 8008dc4:	619a      	str	r2, [r3, #24]
 8008dc6:	2300      	movs	r3, #0
 8008dc8:	e9c1 3305 	strd	r3, r3, [r1, #20]
 8008dcc:	4770      	bx	lr

08008dce <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_>:
 8008dce:	b410      	push	{r4}
 8008dd0:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8008dd2:	4604      	mov	r4, r0
 8008dd4:	b92b      	cbnz	r3, 8008de2 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x14>
 8008dd6:	6803      	ldr	r3, [r0, #0]
 8008dd8:	f85d 4b04 	ldr.w	r4, [sp], #4
 8008ddc:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8008dde:	4611      	mov	r1, r2
 8008de0:	4718      	bx	r3
 8008de2:	b941      	cbnz	r1, 8008df6 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x28>
 8008de4:	6193      	str	r3, [r2, #24]
 8008de6:	6282      	str	r2, [r0, #40]	; 0x28
 8008de8:	6154      	str	r4, [r2, #20]
 8008dea:	f85d 4b04 	ldr.w	r4, [sp], #4
 8008dee:	4770      	bx	lr
 8008df0:	4603      	mov	r3, r0
 8008df2:	2800      	cmp	r0, #0
 8008df4:	d0f9      	beq.n	8008dea <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1c>
 8008df6:	4299      	cmp	r1, r3
 8008df8:	6998      	ldr	r0, [r3, #24]
 8008dfa:	d1f9      	bne.n	8008df0 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x22>
 8008dfc:	6190      	str	r0, [r2, #24]
 8008dfe:	618a      	str	r2, [r1, #24]
 8008e00:	e7f2      	b.n	8008de8 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1a>
	...

08008e04 <_ZN8touchgfx9Container3addERNS_8DrawableE>:
 8008e04:	4288      	cmp	r0, r1
 8008e06:	b508      	push	{r3, lr}
 8008e08:	d105      	bne.n	8008e16 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x12>
 8008e0a:	4b11      	ldr	r3, [pc, #68]	; (8008e50 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x4c>)
 8008e0c:	4a11      	ldr	r2, [pc, #68]	; (8008e54 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x50>)
 8008e0e:	2123      	movs	r1, #35	; 0x23
 8008e10:	4811      	ldr	r0, [pc, #68]	; (8008e58 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x54>)
 8008e12:	f010 fafb 	bl	801940c <__assert_func>
 8008e16:	694b      	ldr	r3, [r1, #20]
 8008e18:	b11b      	cbz	r3, 8008e22 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x1e>
 8008e1a:	4b10      	ldr	r3, [pc, #64]	; (8008e5c <_ZN8touchgfx9Container3addERNS_8DrawableE+0x58>)
 8008e1c:	4a0d      	ldr	r2, [pc, #52]	; (8008e54 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x50>)
 8008e1e:	2124      	movs	r1, #36	; 0x24
 8008e20:	e7f6      	b.n	8008e10 <_ZN8touchgfx9Container3addERNS_8DrawableE+0xc>
 8008e22:	e9c1 0305 	strd	r0, r3, [r1, #20]
 8008e26:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8008e28:	b913      	cbnz	r3, 8008e30 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x2c>
 8008e2a:	6281      	str	r1, [r0, #40]	; 0x28
 8008e2c:	bd08      	pop	{r3, pc}
 8008e2e:	4613      	mov	r3, r2
 8008e30:	699a      	ldr	r2, [r3, #24]
 8008e32:	b12a      	cbz	r2, 8008e40 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x3c>
 8008e34:	428b      	cmp	r3, r1
 8008e36:	d1fa      	bne.n	8008e2e <_ZN8touchgfx9Container3addERNS_8DrawableE+0x2a>
 8008e38:	4b09      	ldr	r3, [pc, #36]	; (8008e60 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x5c>)
 8008e3a:	4a06      	ldr	r2, [pc, #24]	; (8008e54 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x50>)
 8008e3c:	2135      	movs	r1, #53	; 0x35
 8008e3e:	e7e7      	b.n	8008e10 <_ZN8touchgfx9Container3addERNS_8DrawableE+0xc>
 8008e40:	428b      	cmp	r3, r1
 8008e42:	d103      	bne.n	8008e4c <_ZN8touchgfx9Container3addERNS_8DrawableE+0x48>
 8008e44:	4b06      	ldr	r3, [pc, #24]	; (8008e60 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x5c>)
 8008e46:	4a03      	ldr	r2, [pc, #12]	; (8008e54 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x50>)
 8008e48:	2138      	movs	r1, #56	; 0x38
 8008e4a:	e7e1      	b.n	8008e10 <_ZN8touchgfx9Container3addERNS_8DrawableE+0xc>
 8008e4c:	6199      	str	r1, [r3, #24]
 8008e4e:	e7ed      	b.n	8008e2c <_ZN8touchgfx9Container3addERNS_8DrawableE+0x28>
 8008e50:	0801b44b 	.word	0x0801b44b
 8008e54:	0801b5a0 	.word	0x0801b5a0
 8008e58:	0801b477 	.word	0x0801b477
 8008e5c:	0801b4aa 	.word	0x0801b4aa
 8008e60:	0801b4e0 	.word	0x0801b4e0

08008e64 <_ZN8touchgfx4RectaNERKS0_>:
 8008e64:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8008e68:	f9b1 7000 	ldrsh.w	r7, [r1]
 8008e6c:	888c      	ldrh	r4, [r1, #4]
 8008e6e:	f9b0 9000 	ldrsh.w	r9, [r0]
 8008e72:	443c      	add	r4, r7
 8008e74:	b2a4      	uxth	r4, r4
 8008e76:	fa0f f884 	sxth.w	r8, r4
 8008e7a:	45c1      	cmp	r9, r8
 8008e7c:	da2f      	bge.n	8008ede <_ZN8touchgfx4RectaNERKS0_+0x7a>
 8008e7e:	8882      	ldrh	r2, [r0, #4]
 8008e80:	444a      	add	r2, r9
 8008e82:	b292      	uxth	r2, r2
 8008e84:	fa0f fe82 	sxth.w	lr, r2
 8008e88:	4577      	cmp	r7, lr
 8008e8a:	da28      	bge.n	8008ede <_ZN8touchgfx4RectaNERKS0_+0x7a>
 8008e8c:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
 8008e90:	88cb      	ldrh	r3, [r1, #6]
 8008e92:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 8008e96:	442b      	add	r3, r5
 8008e98:	b21b      	sxth	r3, r3
 8008e9a:	429e      	cmp	r6, r3
 8008e9c:	da1f      	bge.n	8008ede <_ZN8touchgfx4RectaNERKS0_+0x7a>
 8008e9e:	88c3      	ldrh	r3, [r0, #6]
 8008ea0:	4433      	add	r3, r6
 8008ea2:	b29b      	uxth	r3, r3
 8008ea4:	fa0f fc83 	sxth.w	ip, r3
 8008ea8:	4565      	cmp	r5, ip
 8008eaa:	da18      	bge.n	8008ede <_ZN8touchgfx4RectaNERKS0_+0x7a>
 8008eac:	454f      	cmp	r7, r9
 8008eae:	bfb8      	it	lt
 8008eb0:	464f      	movlt	r7, r9
 8008eb2:	42b5      	cmp	r5, r6
 8008eb4:	bfb8      	it	lt
 8008eb6:	4635      	movlt	r5, r6
 8008eb8:	45f0      	cmp	r8, lr
 8008eba:	bfd8      	it	le
 8008ebc:	4622      	movle	r2, r4
 8008ebe:	1bd2      	subs	r2, r2, r7
 8008ec0:	8082      	strh	r2, [r0, #4]
 8008ec2:	884a      	ldrh	r2, [r1, #2]
 8008ec4:	88c9      	ldrh	r1, [r1, #6]
 8008ec6:	8007      	strh	r7, [r0, #0]
 8008ec8:	440a      	add	r2, r1
 8008eca:	b292      	uxth	r2, r2
 8008ecc:	b211      	sxth	r1, r2
 8008ece:	458c      	cmp	ip, r1
 8008ed0:	bfa8      	it	ge
 8008ed2:	4613      	movge	r3, r2
 8008ed4:	1b5b      	subs	r3, r3, r5
 8008ed6:	80c3      	strh	r3, [r0, #6]
 8008ed8:	8045      	strh	r5, [r0, #2]
 8008eda:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8008ede:	2300      	movs	r3, #0
 8008ee0:	8003      	strh	r3, [r0, #0]
 8008ee2:	8043      	strh	r3, [r0, #2]
 8008ee4:	8083      	strh	r3, [r0, #4]
 8008ee6:	80c3      	strh	r3, [r0, #6]
 8008ee8:	e7f7      	b.n	8008eda <_ZN8touchgfx4RectaNERKS0_+0x76>

08008eea <_ZNK8touchgfx4Rect7isEmptyEv>:
 8008eea:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8008eee:	2b00      	cmp	r3, #0
 8008ef0:	dd06      	ble.n	8008f00 <_ZNK8touchgfx4Rect7isEmptyEv+0x16>
 8008ef2:	f9b0 0006 	ldrsh.w	r0, [r0, #6]
 8008ef6:	2800      	cmp	r0, #0
 8008ef8:	bfcc      	ite	gt
 8008efa:	2000      	movgt	r0, #0
 8008efc:	2001      	movle	r0, #1
 8008efe:	4770      	bx	lr
 8008f00:	2001      	movs	r0, #1
 8008f02:	4770      	bx	lr

08008f04 <_ZNK8touchgfx9Container16getContainedAreaEv>:
 8008f04:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8008f08:	2300      	movs	r3, #0
 8008f0a:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 8008f0c:	8003      	strh	r3, [r0, #0]
 8008f0e:	4604      	mov	r4, r0
 8008f10:	8043      	strh	r3, [r0, #2]
 8008f12:	8083      	strh	r3, [r0, #4]
 8008f14:	80c3      	strh	r3, [r0, #6]
 8008f16:	2d00      	cmp	r5, #0
 8008f18:	d040      	beq.n	8008f9c <_ZNK8touchgfx9Container16getContainedAreaEv+0x98>
 8008f1a:	1d28      	adds	r0, r5, #4
 8008f1c:	f7ff ffe5 	bl	8008eea <_ZNK8touchgfx4Rect7isEmptyEv>
 8008f20:	b988      	cbnz	r0, 8008f46 <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 8008f22:	4620      	mov	r0, r4
 8008f24:	f7ff ffe1 	bl	8008eea <_ZNK8touchgfx4Rect7isEmptyEv>
 8008f28:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 8008f2c:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 8008f30:	f9b5 e008 	ldrsh.w	lr, [r5, #8]
 8008f34:	f9b5 c00a 	ldrsh.w	ip, [r5, #10]
 8008f38:	b138      	cbz	r0, 8008f4a <_ZNK8touchgfx9Container16getContainedAreaEv+0x46>
 8008f3a:	8022      	strh	r2, [r4, #0]
 8008f3c:	8063      	strh	r3, [r4, #2]
 8008f3e:	f8a4 e004 	strh.w	lr, [r4, #4]
 8008f42:	f8a4 c006 	strh.w	ip, [r4, #6]
 8008f46:	69ad      	ldr	r5, [r5, #24]
 8008f48:	e7e5      	b.n	8008f16 <_ZNK8touchgfx9Container16getContainedAreaEv+0x12>
 8008f4a:	f9b4 0000 	ldrsh.w	r0, [r4]
 8008f4e:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 8008f52:	f8b4 8004 	ldrh.w	r8, [r4, #4]
 8008f56:	4290      	cmp	r0, r2
 8008f58:	4607      	mov	r7, r0
 8008f5a:	bfa8      	it	ge
 8008f5c:	4617      	movge	r7, r2
 8008f5e:	4472      	add	r2, lr
 8008f60:	f8b4 e006 	ldrh.w	lr, [r4, #6]
 8008f64:	8027      	strh	r7, [r4, #0]
 8008f66:	4299      	cmp	r1, r3
 8008f68:	460e      	mov	r6, r1
 8008f6a:	4440      	add	r0, r8
 8008f6c:	bfa8      	it	ge
 8008f6e:	461e      	movge	r6, r3
 8008f70:	4471      	add	r1, lr
 8008f72:	4463      	add	r3, ip
 8008f74:	b200      	sxth	r0, r0
 8008f76:	b212      	sxth	r2, r2
 8008f78:	b209      	sxth	r1, r1
 8008f7a:	b21b      	sxth	r3, r3
 8008f7c:	4290      	cmp	r0, r2
 8008f7e:	bfac      	ite	ge
 8008f80:	ebc7 0200 	rsbge	r2, r7, r0
 8008f84:	ebc7 0202 	rsblt	r2, r7, r2
 8008f88:	4299      	cmp	r1, r3
 8008f8a:	bfac      	ite	ge
 8008f8c:	ebc6 0301 	rsbge	r3, r6, r1
 8008f90:	ebc6 0303 	rsblt	r3, r6, r3
 8008f94:	8066      	strh	r6, [r4, #2]
 8008f96:	80a2      	strh	r2, [r4, #4]
 8008f98:	80e3      	strh	r3, [r4, #6]
 8008f9a:	e7d4      	b.n	8008f46 <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 8008f9c:	4620      	mov	r0, r4
 8008f9e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08008fa2 <_ZNK8touchgfx9Container4drawERKNS_4RectE>:
 8008fa2:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8008fa6:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 8008faa:	b383      	cbz	r3, 800900e <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 8008fac:	6a84      	ldr	r4, [r0, #40]	; 0x28
 8008fae:	b374      	cbz	r4, 800900e <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 8008fb0:	f9b1 5000 	ldrsh.w	r5, [r1]
 8008fb4:	f9b1 6002 	ldrsh.w	r6, [r1, #2]
 8008fb8:	f9b1 7004 	ldrsh.w	r7, [r1, #4]
 8008fbc:	f9b1 8006 	ldrsh.w	r8, [r1, #6]
 8008fc0:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 8008fc4:	b303      	cbz	r3, 8009008 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 8008fc6:	4668      	mov	r0, sp
 8008fc8:	1d21      	adds	r1, r4, #4
 8008fca:	f8ad 5000 	strh.w	r5, [sp]
 8008fce:	f8ad 6002 	strh.w	r6, [sp, #2]
 8008fd2:	f8ad 7004 	strh.w	r7, [sp, #4]
 8008fd6:	f8ad 8006 	strh.w	r8, [sp, #6]
 8008fda:	f7ff ff43 	bl	8008e64 <_ZN8touchgfx4RectaNERKS0_>
 8008fde:	4668      	mov	r0, sp
 8008fe0:	f7ff ff83 	bl	8008eea <_ZNK8touchgfx4Rect7isEmptyEv>
 8008fe4:	b980      	cbnz	r0, 8009008 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 8008fe6:	f8bd 3000 	ldrh.w	r3, [sp]
 8008fea:	88a2      	ldrh	r2, [r4, #4]
 8008fec:	1a9b      	subs	r3, r3, r2
 8008fee:	f8ad 3000 	strh.w	r3, [sp]
 8008ff2:	88e2      	ldrh	r2, [r4, #6]
 8008ff4:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8008ff8:	1a9b      	subs	r3, r3, r2
 8008ffa:	f8ad 3002 	strh.w	r3, [sp, #2]
 8008ffe:	6823      	ldr	r3, [r4, #0]
 8009000:	4669      	mov	r1, sp
 8009002:	689b      	ldr	r3, [r3, #8]
 8009004:	4620      	mov	r0, r4
 8009006:	4798      	blx	r3
 8009008:	69a4      	ldr	r4, [r4, #24]
 800900a:	2c00      	cmp	r4, #0
 800900c:	d1d8      	bne.n	8008fc0 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x1e>
 800900e:	b002      	add	sp, #8
 8009010:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08009014 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>:
 8009014:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8009016:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 800901a:	460d      	mov	r5, r1
 800901c:	4616      	mov	r6, r2
 800901e:	b323      	cbz	r3, 800906a <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 8009020:	6a84      	ldr	r4, [r0, #40]	; 0x28
 8009022:	b314      	cbz	r4, 800906a <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 8009024:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 8009028:	b1eb      	cbz	r3, 8009066 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 800902a:	6828      	ldr	r0, [r5, #0]
 800902c:	6869      	ldr	r1, [r5, #4]
 800902e:	466b      	mov	r3, sp
 8009030:	c303      	stmia	r3!, {r0, r1}
 8009032:	4668      	mov	r0, sp
 8009034:	1d21      	adds	r1, r4, #4
 8009036:	f7ff ff15 	bl	8008e64 <_ZN8touchgfx4RectaNERKS0_>
 800903a:	4668      	mov	r0, sp
 800903c:	f7ff ff55 	bl	8008eea <_ZNK8touchgfx4Rect7isEmptyEv>
 8009040:	b988      	cbnz	r0, 8009066 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 8009042:	f8bd 3000 	ldrh.w	r3, [sp]
 8009046:	88a2      	ldrh	r2, [r4, #4]
 8009048:	1a9b      	subs	r3, r3, r2
 800904a:	f8ad 3000 	strh.w	r3, [sp]
 800904e:	88e2      	ldrh	r2, [r4, #6]
 8009050:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8009054:	1a9b      	subs	r3, r3, r2
 8009056:	f8ad 3002 	strh.w	r3, [sp, #2]
 800905a:	6823      	ldr	r3, [r4, #0]
 800905c:	4632      	mov	r2, r6
 800905e:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8009060:	4669      	mov	r1, sp
 8009062:	4620      	mov	r0, r4
 8009064:	4798      	blx	r3
 8009066:	69a4      	ldr	r4, [r4, #24]
 8009068:	e7db      	b.n	8009022 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0xe>
 800906a:	b002      	add	sp, #8
 800906c:	bd70      	pop	{r4, r5, r6, pc}

0800906e <_ZNK8touchgfx6Slider15getIndicatorMinEv>:
 800906e:	f8b0 00ee 	ldrh.w	r0, [r0, #238]	; 0xee
 8009072:	4770      	bx	lr

08009074 <_ZNK8touchgfx6Slider15getIndicatorMaxEv>:
 8009074:	f8b0 00ee 	ldrh.w	r0, [r0, #238]	; 0xee
 8009078:	4770      	bx	lr

0800907a <_ZNK8touchgfx6Slider11getMinValueEv>:
 800907a:	8e80      	ldrh	r0, [r0, #52]	; 0x34
 800907c:	4770      	bx	lr

0800907e <_ZNK8touchgfx6Slider11getMaxValueEv>:
 800907e:	8f00      	ldrh	r0, [r0, #56]	; 0x38
 8009080:	4770      	bx	lr

08009082 <_ZN8touchgfx6Slider8setValueEi>:
 8009082:	b570      	push	{r4, r5, r6, lr}
 8009084:	6803      	ldr	r3, [r0, #0]
 8009086:	e9d3 532a 	ldrd	r5, r3, [r3, #168]	; 0xa8
 800908a:	4604      	mov	r4, r0
 800908c:	4798      	blx	r3
 800908e:	462b      	mov	r3, r5
 8009090:	4601      	mov	r1, r0
 8009092:	4620      	mov	r0, r4
 8009094:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8009098:	4718      	bx	r3

0800909a <_ZNK8touchgfx6Slider15valueToPositionEi>:
 800909a:	b538      	push	{r3, r4, r5, lr}
 800909c:	e9d0 340d 	ldrd	r3, r4, [r0, #52]	; 0x34
 80090a0:	428c      	cmp	r4, r1
 80090a2:	bfa8      	it	ge
 80090a4:	460c      	movge	r4, r1
 80090a6:	429c      	cmp	r4, r3
 80090a8:	bfac      	ite	ge
 80090aa:	ebc3 0404 	rsbge	r4, r3, r4
 80090ae:	ebc3 0403 	rsblt	r4, r3, r3
 80090b2:	6803      	ldr	r3, [r0, #0]
 80090b4:	4605      	mov	r5, r0
 80090b6:	f8d3 30b8 	ldr.w	r3, [r3, #184]	; 0xb8
 80090ba:	4798      	blx	r3
 80090bc:	682b      	ldr	r3, [r5, #0]
 80090be:	fb00 4404 	mla	r4, r0, r4, r4
 80090c2:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 80090c6:	4628      	mov	r0, r5
 80090c8:	4798      	blx	r3
 80090ca:	f895 202c 	ldrb.w	r2, [r5, #44]	; 0x2c
 80090ce:	f9b5 30ec 	ldrsh.w	r3, [r5, #236]	; 0xec
 80090d2:	fb94 f0f0 	sdiv	r0, r4, r0
 80090d6:	2a01      	cmp	r2, #1
 80090d8:	bf08      	it	eq
 80090da:	f9b5 20ee 	ldrsheq.w	r2, [r5, #238]	; 0xee
 80090de:	4418      	add	r0, r3
 80090e0:	bf04      	itt	eq
 80090e2:	1a10      	subeq	r0, r2, r0
 80090e4:	18c0      	addeq	r0, r0, r3
 80090e6:	b200      	sxth	r0, r0
 80090e8:	bd38      	pop	{r3, r4, r5, pc}

080090ea <_ZNK8touchgfx6Slider15positionToValueEs>:
 80090ea:	b570      	push	{r4, r5, r6, lr}
 80090ec:	f9b0 30ec 	ldrsh.w	r3, [r0, #236]	; 0xec
 80090f0:	428b      	cmp	r3, r1
 80090f2:	4605      	mov	r5, r0
 80090f4:	460c      	mov	r4, r1
 80090f6:	d109      	bne.n	800910c <_ZNK8touchgfx6Slider15positionToValueEs+0x22>
 80090f8:	6b40      	ldr	r0, [r0, #52]	; 0x34
 80090fa:	f895 302c 	ldrb.w	r3, [r5, #44]	; 0x2c
 80090fe:	2b01      	cmp	r3, #1
 8009100:	bf01      	itttt	eq
 8009102:	6bab      	ldreq	r3, [r5, #56]	; 0x38
 8009104:	1a18      	subeq	r0, r3, r0
 8009106:	6b6b      	ldreq	r3, [r5, #52]	; 0x34
 8009108:	18c0      	addeq	r0, r0, r3
 800910a:	bd70      	pop	{r4, r5, r6, pc}
 800910c:	f9b0 30ee 	ldrsh.w	r3, [r0, #238]	; 0xee
 8009110:	428b      	cmp	r3, r1
 8009112:	d101      	bne.n	8009118 <_ZNK8touchgfx6Slider15positionToValueEs+0x2e>
 8009114:	6b80      	ldr	r0, [r0, #56]	; 0x38
 8009116:	e7f0      	b.n	80090fa <_ZNK8touchgfx6Slider15positionToValueEs+0x10>
 8009118:	6803      	ldr	r3, [r0, #0]
 800911a:	f8d3 30b8 	ldr.w	r3, [r3, #184]	; 0xb8
 800911e:	4798      	blx	r3
 8009120:	682b      	ldr	r3, [r5, #0]
 8009122:	f9b5 10ec 	ldrsh.w	r1, [r5, #236]	; 0xec
 8009126:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 800912a:	4606      	mov	r6, r0
 800912c:	4628      	mov	r0, r5
 800912e:	1a64      	subs	r4, r4, r1
 8009130:	4798      	blx	r3
 8009132:	682b      	ldr	r3, [r5, #0]
 8009134:	2102      	movs	r1, #2
 8009136:	f8d3 30b8 	ldr.w	r3, [r3, #184]	; 0xb8
 800913a:	fb96 f6f1 	sdiv	r6, r6, r1
 800913e:	fb00 6404 	mla	r4, r0, r4, r6
 8009142:	4628      	mov	r0, r5
 8009144:	4798      	blx	r3
 8009146:	6b6b      	ldr	r3, [r5, #52]	; 0x34
 8009148:	fb94 f0f0 	sdiv	r0, r4, r0
 800914c:	4418      	add	r0, r3
 800914e:	e7d4      	b.n	80090fa <_ZNK8touchgfx6Slider15positionToValueEs+0x10>

08009150 <_ZNK8touchgfx6Slider18getIndicatorRadiusEv>:
 8009150:	f890 202c 	ldrb.w	r2, [r0, #44]	; 0x2c
 8009154:	2302      	movs	r3, #2
 8009156:	b92a      	cbnz	r2, 8009164 <_ZNK8touchgfx6Slider18getIndicatorRadiusEv+0x14>
 8009158:	f9b0 009c 	ldrsh.w	r0, [r0, #156]	; 0x9c
 800915c:	fb90 f0f3 	sdiv	r0, r0, r3
 8009160:	b280      	uxth	r0, r0
 8009162:	4770      	bx	lr
 8009164:	f9b0 009e 	ldrsh.w	r0, [r0, #158]	; 0x9e
 8009168:	e7f8      	b.n	800915c <_ZNK8touchgfx6Slider18getIndicatorRadiusEv+0xc>

0800916a <_ZN8touchgfx6Slider13setValueRangeEii>:
 800916a:	6b03      	ldr	r3, [r0, #48]	; 0x30
 800916c:	428b      	cmp	r3, r1
 800916e:	b410      	push	{r4}
 8009170:	db09      	blt.n	8009186 <_ZN8touchgfx6Slider13setValueRangeEii+0x1c>
 8009172:	4293      	cmp	r3, r2
 8009174:	bfa8      	it	ge
 8009176:	4613      	movge	r3, r2
 8009178:	6804      	ldr	r4, [r0, #0]
 800917a:	f8d4 4094 	ldr.w	r4, [r4, #148]	; 0x94
 800917e:	46a4      	mov	ip, r4
 8009180:	f85d 4b04 	ldr.w	r4, [sp], #4
 8009184:	4760      	bx	ip
 8009186:	460b      	mov	r3, r1
 8009188:	e7f6      	b.n	8009178 <_ZN8touchgfx6Slider13setValueRangeEii+0xe>

0800918a <_ZNK8touchgfx6Slider29getIndicatorPositionRangeSizeEv>:
 800918a:	f9b0 20ee 	ldrsh.w	r2, [r0, #238]	; 0xee
 800918e:	f9b0 00ec 	ldrsh.w	r0, [r0, #236]	; 0xec
 8009192:	1a10      	subs	r0, r2, r0
 8009194:	4770      	bx	lr

08009196 <_ZNK8touchgfx6Slider17getValueRangeSizeEv>:
 8009196:	e9d0 020d 	ldrd	r0, r2, [r0, #52]	; 0x34
 800919a:	1a10      	subs	r0, r2, r0
 800919c:	4770      	bx	lr

0800919e <_ZN8touchgfx6SliderD1Ev>:
 800919e:	4770      	bx	lr

080091a0 <_ZN8touchgfx6Slider23updateIndicatorPositionEs>:
 80091a0:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 80091a4:	f9b0 60ec 	ldrsh.w	r6, [r0, #236]	; 0xec
 80091a8:	428e      	cmp	r6, r1
 80091aa:	4604      	mov	r4, r0
 80091ac:	bfb8      	it	lt
 80091ae:	460e      	movlt	r6, r1
 80091b0:	f9b0 10ee 	ldrsh.w	r1, [r0, #238]	; 0xee
 80091b4:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
 80091b8:	428e      	cmp	r6, r1
 80091ba:	bfa8      	it	ge
 80091bc:	460e      	movge	r6, r1
 80091be:	3094      	adds	r0, #148	; 0x94
 80091c0:	f104 07c0 	add.w	r7, r4, #192	; 0xc0
 80091c4:	fa1f f886 	uxth.w	r8, r6
 80091c8:	2b00      	cmp	r3, #0
 80091ca:	d132      	bne.n	8009232 <_ZN8touchgfx6Slider23updateIndicatorPositionEs+0x92>
 80091cc:	f9b4 209a 	ldrsh.w	r2, [r4, #154]	; 0x9a
 80091d0:	4631      	mov	r1, r6
 80091d2:	f7f9 ff9f 	bl	8003114 <_ZN8touchgfx8Drawable6moveToEss>
 80091d6:	4638      	mov	r0, r7
 80091d8:	f003 f943 	bl	800c462 <_ZNK8touchgfx8Drawable10invalidateEv>
 80091dc:	6823      	ldr	r3, [r4, #0]
 80091de:	f8b4 20c4 	ldrh.w	r2, [r4, #196]	; 0xc4
 80091e2:	f8d3 30b4 	ldr.w	r3, [r3, #180]	; 0xb4
 80091e6:	4620      	mov	r0, r4
 80091e8:	eba8 0802 	sub.w	r8, r8, r2
 80091ec:	4798      	blx	r3
 80091ee:	fa1f f888 	uxth.w	r8, r8
 80091f2:	4480      	add	r8, r0
 80091f4:	f8a4 80c8 	strh.w	r8, [r4, #200]	; 0xc8
 80091f8:	4638      	mov	r0, r7
 80091fa:	f003 f932 	bl	800c462 <_ZNK8touchgfx8Drawable10invalidateEv>
 80091fe:	6823      	ldr	r3, [r4, #0]
 8009200:	4631      	mov	r1, r6
 8009202:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 8009206:	4620      	mov	r0, r4
 8009208:	4798      	blx	r3
 800920a:	6320      	str	r0, [r4, #48]	; 0x30
 800920c:	f8d4 00f8 	ldr.w	r0, [r4, #248]	; 0xf8
 8009210:	2800      	cmp	r0, #0
 8009212:	d03c      	beq.n	800928e <_ZN8touchgfx6Slider23updateIndicatorPositionEs+0xee>
 8009214:	6803      	ldr	r3, [r0, #0]
 8009216:	68db      	ldr	r3, [r3, #12]
 8009218:	4798      	blx	r3
 800921a:	2800      	cmp	r0, #0
 800921c:	d037      	beq.n	800928e <_ZN8touchgfx6Slider23updateIndicatorPositionEs+0xee>
 800921e:	f8d4 00f8 	ldr.w	r0, [r4, #248]	; 0xf8
 8009222:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8009224:	6803      	ldr	r3, [r0, #0]
 8009226:	689b      	ldr	r3, [r3, #8]
 8009228:	4621      	mov	r1, r4
 800922a:	b003      	add	sp, #12
 800922c:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8009230:	4718      	bx	r3
 8009232:	4632      	mov	r2, r6
 8009234:	f9b4 1098 	ldrsh.w	r1, [r4, #152]	; 0x98
 8009238:	f7f9 ff6c 	bl	8003114 <_ZN8touchgfx8Drawable6moveToEss>
 800923c:	4638      	mov	r0, r7
 800923e:	f003 f910 	bl	800c462 <_ZNK8touchgfx8Drawable10invalidateEv>
 8009242:	f8b4 0042 	ldrh.w	r0, [r4, #66]	; 0x42
 8009246:	f8b4 5046 	ldrh.w	r5, [r4, #70]	; 0x46
 800924a:	6823      	ldr	r3, [r4, #0]
 800924c:	4405      	add	r5, r0
 800924e:	f8d3 30b4 	ldr.w	r3, [r3, #180]	; 0xb4
 8009252:	4620      	mov	r0, r4
 8009254:	4798      	blx	r3
 8009256:	b2ad      	uxth	r5, r5
 8009258:	6823      	ldr	r3, [r4, #0]
 800925a:	f9b4 90c4 	ldrsh.w	r9, [r4, #196]	; 0xc4
 800925e:	f8d3 30b4 	ldr.w	r3, [r3, #180]	; 0xb4
 8009262:	eba5 0508 	sub.w	r5, r5, r8
 8009266:	1a2d      	subs	r5, r5, r0
 8009268:	4620      	mov	r0, r4
 800926a:	4798      	blx	r3
 800926c:	b2ad      	uxth	r5, r5
 800926e:	b22a      	sxth	r2, r5
 8009270:	4440      	add	r0, r8
 8009272:	9200      	str	r2, [sp, #0]
 8009274:	f9b4 30c8 	ldrsh.w	r3, [r4, #200]	; 0xc8
 8009278:	b202      	sxth	r2, r0
 800927a:	4649      	mov	r1, r9
 800927c:	4638      	mov	r0, r7
 800927e:	f7f9 ff1b 	bl	80030b8 <_ZN8touchgfx8Drawable11setPositionEssss>
 8009282:	f8b4 0072 	ldrh.w	r0, [r4, #114]	; 0x72
 8009286:	1a2d      	subs	r5, r5, r0
 8009288:	f8a4 506e 	strh.w	r5, [r4, #110]	; 0x6e
 800928c:	e7b4      	b.n	80091f8 <_ZN8touchgfx6Slider23updateIndicatorPositionEs+0x58>
 800928e:	b003      	add	sp, #12
 8009290:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

08009294 <_ZN8touchgfx6SliderD0Ev>:
 8009294:	b510      	push	{r4, lr}
 8009296:	21fc      	movs	r1, #252	; 0xfc
 8009298:	4604      	mov	r4, r0
 800929a:	f010 f88b 	bl	80193b4 <_ZdlPvj>
 800929e:	4620      	mov	r0, r4
 80092a0:	bd10      	pop	{r4, pc}
	...

080092a4 <_ZN8touchgfx6Slider21setupHorizontalSliderEttttt>:
 80092a4:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80092a8:	f8bd 8030 	ldrh.w	r8, [sp, #48]	; 0x30
 80092ac:	f8bd 7034 	ldrh.w	r7, [sp, #52]	; 0x34
 80092b0:	45b8      	cmp	r8, r7
 80092b2:	4604      	mov	r4, r0
 80092b4:	4689      	mov	r9, r1
 80092b6:	4616      	mov	r6, r2
 80092b8:	461d      	mov	r5, r3
 80092ba:	d305      	bcc.n	80092c8 <_ZN8touchgfx6Slider21setupHorizontalSliderEttttt+0x24>
 80092bc:	4b28      	ldr	r3, [pc, #160]	; (8009360 <_ZN8touchgfx6Slider21setupHorizontalSliderEttttt+0xbc>)
 80092be:	4a29      	ldr	r2, [pc, #164]	; (8009364 <_ZN8touchgfx6Slider21setupHorizontalSliderEttttt+0xc0>)
 80092c0:	4829      	ldr	r0, [pc, #164]	; (8009368 <_ZN8touchgfx6Slider21setupHorizontalSliderEttttt+0xc4>)
 80092c2:	2143      	movs	r1, #67	; 0x43
 80092c4:	f010 f8a2 	bl	801940c <__assert_func>
 80092c8:	f04f 0a00 	mov.w	sl, #0
 80092cc:	b213      	sxth	r3, r2
 80092ce:	fa0f fb81 	sxth.w	fp, r1
 80092d2:	f880 a02c 	strb.w	sl, [r0, #44]	; 0x2c
 80092d6:	461a      	mov	r2, r3
 80092d8:	4659      	mov	r1, fp
 80092da:	303c      	adds	r0, #60	; 0x3c
 80092dc:	9301      	str	r3, [sp, #4]
 80092de:	f7f9 ff03 	bl	80030e8 <_ZN8touchgfx8Drawable5setXYEss>
 80092e2:	9b01      	ldr	r3, [sp, #4]
 80092e4:	4659      	mov	r1, fp
 80092e6:	461a      	mov	r2, r3
 80092e8:	f104 00c0 	add.w	r0, r4, #192	; 0xc0
 80092ec:	f7f9 fefc 	bl	80030e8 <_ZN8touchgfx8Drawable5setXYEss>
 80092f0:	4652      	mov	r2, sl
 80092f2:	4651      	mov	r1, sl
 80092f4:	f104 0068 	add.w	r0, r4, #104	; 0x68
 80092f8:	f7f9 fef6 	bl	80030e8 <_ZN8touchgfx8Drawable5setXYEss>
 80092fc:	f8b4 1044 	ldrh.w	r1, [r4, #68]	; 0x44
 8009300:	f8a4 509a 	strh.w	r5, [r4, #154]	; 0x9a
 8009304:	4449      	add	r1, r9
 8009306:	b28b      	uxth	r3, r1
 8009308:	f8b4 109c 	ldrh.w	r1, [r4, #156]	; 0x9c
 800930c:	f8a4 80ec 	strh.w	r8, [r4, #236]	; 0xec
 8009310:	4439      	add	r1, r7
 8009312:	b289      	uxth	r1, r1
 8009314:	428b      	cmp	r3, r1
 8009316:	bf88      	it	hi
 8009318:	b219      	sxthhi	r1, r3
 800931a:	f8b4 3046 	ldrh.w	r3, [r4, #70]	; 0x46
 800931e:	f8a4 70ee 	strh.w	r7, [r4, #238]	; 0xee
 8009322:	441e      	add	r6, r3
 8009324:	f8b4 309e 	ldrh.w	r3, [r4, #158]	; 0x9e
 8009328:	441d      	add	r5, r3
 800932a:	6823      	ldr	r3, [r4, #0]
 800932c:	b2ad      	uxth	r5, r5
 800932e:	b2b6      	uxth	r6, r6
 8009330:	bf98      	it	ls
 8009332:	b209      	sxthls	r1, r1
 8009334:	4620      	mov	r0, r4
 8009336:	42ae      	cmp	r6, r5
 8009338:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800933a:	bf8c      	ite	hi
 800933c:	b235      	sxthhi	r5, r6
 800933e:	b22d      	sxthls	r5, r5
 8009340:	4798      	blx	r3
 8009342:	6823      	ldr	r3, [r4, #0]
 8009344:	4629      	mov	r1, r5
 8009346:	4620      	mov	r0, r4
 8009348:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800934a:	4798      	blx	r3
 800934c:	6823      	ldr	r3, [r4, #0]
 800934e:	6b21      	ldr	r1, [r4, #48]	; 0x30
 8009350:	f8d3 30a4 	ldr.w	r3, [r3, #164]	; 0xa4
 8009354:	4620      	mov	r0, r4
 8009356:	b003      	add	sp, #12
 8009358:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800935c:	4718      	bx	r3
 800935e:	bf00      	nop
 8009360:	0801b784 	.word	0x0801b784
 8009364:	0801b9fe 	.word	0x0801b9fe
 8009368:	0801b7f8 	.word	0x0801b7f8

0800936c <_ZN8touchgfx6Slider19setupVerticalSliderEttttt>:
 800936c:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8009370:	f8bd 7028 	ldrh.w	r7, [sp, #40]	; 0x28
 8009374:	f8bd 602c 	ldrh.w	r6, [sp, #44]	; 0x2c
 8009378:	42b7      	cmp	r7, r6
 800937a:	4604      	mov	r4, r0
 800937c:	4689      	mov	r9, r1
 800937e:	4690      	mov	r8, r2
 8009380:	461d      	mov	r5, r3
 8009382:	d305      	bcc.n	8009390 <_ZN8touchgfx6Slider19setupVerticalSliderEttttt+0x24>
 8009384:	4b25      	ldr	r3, [pc, #148]	; (800941c <_ZN8touchgfx6Slider19setupVerticalSliderEttttt+0xb0>)
 8009386:	4a26      	ldr	r2, [pc, #152]	; (8009420 <_ZN8touchgfx6Slider19setupVerticalSliderEttttt+0xb4>)
 8009388:	4826      	ldr	r0, [pc, #152]	; (8009424 <_ZN8touchgfx6Slider19setupVerticalSliderEttttt+0xb8>)
 800938a:	215f      	movs	r1, #95	; 0x5f
 800938c:	f010 f83e 	bl	801940c <__assert_func>
 8009390:	2301      	movs	r3, #1
 8009392:	fa0f fa81 	sxth.w	sl, r1
 8009396:	fa0f fb82 	sxth.w	fp, r2
 800939a:	f880 302c 	strb.w	r3, [r0, #44]	; 0x2c
 800939e:	465a      	mov	r2, fp
 80093a0:	4651      	mov	r1, sl
 80093a2:	303c      	adds	r0, #60	; 0x3c
 80093a4:	f7f9 fea0 	bl	80030e8 <_ZN8touchgfx8Drawable5setXYEss>
 80093a8:	465a      	mov	r2, fp
 80093aa:	4651      	mov	r1, sl
 80093ac:	f104 00c0 	add.w	r0, r4, #192	; 0xc0
 80093b0:	f7f9 fe9a 	bl	80030e8 <_ZN8touchgfx8Drawable5setXYEss>
 80093b4:	f8b4 1044 	ldrh.w	r1, [r4, #68]	; 0x44
 80093b8:	f8a4 5098 	strh.w	r5, [r4, #152]	; 0x98
 80093bc:	4489      	add	r9, r1
 80093be:	f8b4 109c 	ldrh.w	r1, [r4, #156]	; 0x9c
 80093c2:	6823      	ldr	r3, [r4, #0]
 80093c4:	f8a4 70ec 	strh.w	r7, [r4, #236]	; 0xec
 80093c8:	4429      	add	r1, r5
 80093ca:	f8b4 5046 	ldrh.w	r5, [r4, #70]	; 0x46
 80093ce:	f8a4 60ee 	strh.w	r6, [r4, #238]	; 0xee
 80093d2:	44a8      	add	r8, r5
 80093d4:	f8b4 509e 	ldrh.w	r5, [r4, #158]	; 0x9e
 80093d8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80093da:	b289      	uxth	r1, r1
 80093dc:	fa1f f989 	uxth.w	r9, r9
 80093e0:	4435      	add	r5, r6
 80093e2:	4589      	cmp	r9, r1
 80093e4:	b2ad      	uxth	r5, r5
 80093e6:	fa1f f888 	uxth.w	r8, r8
 80093ea:	bf8c      	ite	hi
 80093ec:	fa0f f189 	sxthhi.w	r1, r9
 80093f0:	b209      	sxthls	r1, r1
 80093f2:	4620      	mov	r0, r4
 80093f4:	45a8      	cmp	r8, r5
 80093f6:	bf8c      	ite	hi
 80093f8:	fa0f f588 	sxthhi.w	r5, r8
 80093fc:	b22d      	sxthls	r5, r5
 80093fe:	4798      	blx	r3
 8009400:	6823      	ldr	r3, [r4, #0]
 8009402:	4629      	mov	r1, r5
 8009404:	4620      	mov	r0, r4
 8009406:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8009408:	4798      	blx	r3
 800940a:	6823      	ldr	r3, [r4, #0]
 800940c:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800940e:	f8d3 30a4 	ldr.w	r3, [r3, #164]	; 0xa4
 8009412:	4620      	mov	r0, r4
 8009414:	b001      	add	sp, #4
 8009416:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800941a:	4718      	bx	r3
 800941c:	0801b712 	.word	0x0801b712
 8009420:	0801b999 	.word	0x0801b999
 8009424:	0801b7f8 	.word	0x0801b7f8

08009428 <_ZN8touchgfx6Slider13setValueRangeEiii>:
 8009428:	4291      	cmp	r1, r2
 800942a:	b510      	push	{r4, lr}
 800942c:	db06      	blt.n	800943c <_ZN8touchgfx6Slider13setValueRangeEiii+0x14>
 800942e:	4b08      	ldr	r3, [pc, #32]	; (8009450 <_ZN8touchgfx6Slider13setValueRangeEiii+0x28>)
 8009430:	4a08      	ldr	r2, [pc, #32]	; (8009454 <_ZN8touchgfx6Slider13setValueRangeEiii+0x2c>)
 8009432:	4809      	ldr	r0, [pc, #36]	; (8009458 <_ZN8touchgfx6Slider13setValueRangeEiii+0x30>)
 8009434:	f240 1107 	movw	r1, #263	; 0x107
 8009438:	f00f ffe8 	bl	801940c <__assert_func>
 800943c:	e9c0 120d 	strd	r1, r2, [r0, #52]	; 0x34
 8009440:	6802      	ldr	r2, [r0, #0]
 8009442:	4619      	mov	r1, r3
 8009444:	f8d2 20a4 	ldr.w	r2, [r2, #164]	; 0xa4
 8009448:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800944c:	4710      	bx	r2
 800944e:	bf00      	nop
 8009450:	0801b6ba 	.word	0x0801b6ba
 8009454:	0801b95d 	.word	0x0801b95d
 8009458:	0801b7f8 	.word	0x0801b7f8

0800945c <_ZN8touchgfx6Slider16handleClickEventERKNS_10ClickEventE>:
 800945c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8009460:	790b      	ldrb	r3, [r1, #4]
 8009462:	4604      	mov	r4, r0
 8009464:	460d      	mov	r5, r1
 8009466:	b323      	cbz	r3, 80094b2 <_ZN8touchgfx6Slider16handleClickEventERKNS_10ClickEventE+0x56>
 8009468:	2b01      	cmp	r3, #1
 800946a:	d135      	bne.n	80094d8 <_ZN8touchgfx6Slider16handleClickEventERKNS_10ClickEventE+0x7c>
 800946c:	6823      	ldr	r3, [r4, #0]
 800946e:	f894 202c 	ldrb.w	r2, [r4, #44]	; 0x2c
 8009472:	f8d3 70a8 	ldr.w	r7, [r3, #168]	; 0xa8
 8009476:	f8d3 30b4 	ldr.w	r3, [r3, #180]	; 0xb4
 800947a:	2a00      	cmp	r2, #0
 800947c:	d12a      	bne.n	80094d4 <_ZN8touchgfx6Slider16handleClickEventERKNS_10ClickEventE+0x78>
 800947e:	88ee      	ldrh	r6, [r5, #6]
 8009480:	4620      	mov	r0, r4
 8009482:	4798      	blx	r3
 8009484:	1a31      	subs	r1, r6, r0
 8009486:	b209      	sxth	r1, r1
 8009488:	4620      	mov	r0, r4
 800948a:	47b8      	blx	r7
 800948c:	792b      	ldrb	r3, [r5, #4]
 800948e:	2b01      	cmp	r3, #1
 8009490:	d122      	bne.n	80094d8 <_ZN8touchgfx6Slider16handleClickEventERKNS_10ClickEventE+0x7c>
 8009492:	f8d4 00f4 	ldr.w	r0, [r4, #244]	; 0xf4
 8009496:	b1f8      	cbz	r0, 80094d8 <_ZN8touchgfx6Slider16handleClickEventERKNS_10ClickEventE+0x7c>
 8009498:	6803      	ldr	r3, [r0, #0]
 800949a:	68db      	ldr	r3, [r3, #12]
 800949c:	4798      	blx	r3
 800949e:	b1d8      	cbz	r0, 80094d8 <_ZN8touchgfx6Slider16handleClickEventERKNS_10ClickEventE+0x7c>
 80094a0:	f8d4 00f4 	ldr.w	r0, [r4, #244]	; 0xf4
 80094a4:	6b22      	ldr	r2, [r4, #48]	; 0x30
 80094a6:	6803      	ldr	r3, [r0, #0]
 80094a8:	4621      	mov	r1, r4
 80094aa:	689b      	ldr	r3, [r3, #8]
 80094ac:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80094b0:	4718      	bx	r3
 80094b2:	f8d0 00f0 	ldr.w	r0, [r0, #240]	; 0xf0
 80094b6:	2800      	cmp	r0, #0
 80094b8:	d0d8      	beq.n	800946c <_ZN8touchgfx6Slider16handleClickEventERKNS_10ClickEventE+0x10>
 80094ba:	6803      	ldr	r3, [r0, #0]
 80094bc:	68db      	ldr	r3, [r3, #12]
 80094be:	4798      	blx	r3
 80094c0:	2800      	cmp	r0, #0
 80094c2:	d0d3      	beq.n	800946c <_ZN8touchgfx6Slider16handleClickEventERKNS_10ClickEventE+0x10>
 80094c4:	f8d4 00f0 	ldr.w	r0, [r4, #240]	; 0xf0
 80094c8:	6b22      	ldr	r2, [r4, #48]	; 0x30
 80094ca:	6803      	ldr	r3, [r0, #0]
 80094cc:	4621      	mov	r1, r4
 80094ce:	689b      	ldr	r3, [r3, #8]
 80094d0:	4798      	blx	r3
 80094d2:	e7cb      	b.n	800946c <_ZN8touchgfx6Slider16handleClickEventERKNS_10ClickEventE+0x10>
 80094d4:	892e      	ldrh	r6, [r5, #8]
 80094d6:	e7d3      	b.n	8009480 <_ZN8touchgfx6Slider16handleClickEventERKNS_10ClickEventE+0x24>
 80094d8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080094dc <_ZN8touchgfx6Slider15handleDragEventERKNS_9DragEventE>:
 80094dc:	b570      	push	{r4, r5, r6, lr}
 80094de:	6803      	ldr	r3, [r0, #0]
 80094e0:	f890 202c 	ldrb.w	r2, [r0, #44]	; 0x2c
 80094e4:	f8d3 60a8 	ldr.w	r6, [r3, #168]	; 0xa8
 80094e8:	f8d3 30b4 	ldr.w	r3, [r3, #180]	; 0xb4
 80094ec:	4604      	mov	r4, r0
 80094ee:	b942      	cbnz	r2, 8009502 <_ZN8touchgfx6Slider15handleDragEventERKNS_9DragEventE+0x26>
 80094f0:	894d      	ldrh	r5, [r1, #10]
 80094f2:	4798      	blx	r3
 80094f4:	1a29      	subs	r1, r5, r0
 80094f6:	4633      	mov	r3, r6
 80094f8:	4620      	mov	r0, r4
 80094fa:	b209      	sxth	r1, r1
 80094fc:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8009500:	4718      	bx	r3
 8009502:	898d      	ldrh	r5, [r1, #12]
 8009504:	e7f5      	b.n	80094f2 <_ZN8touchgfx6Slider15handleDragEventERKNS_9DragEventE+0x16>
	...

08009508 <_ZN8touchgfx9ContainerC1Ev>:
 8009508:	2101      	movs	r1, #1
 800950a:	2200      	movs	r2, #0
 800950c:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
 8009510:	4908      	ldr	r1, [pc, #32]	; (8009534 <_ZN8touchgfx9ContainerC1Ev+0x2c>)
 8009512:	8082      	strh	r2, [r0, #4]
 8009514:	80c2      	strh	r2, [r0, #6]
 8009516:	8102      	strh	r2, [r0, #8]
 8009518:	8142      	strh	r2, [r0, #10]
 800951a:	8182      	strh	r2, [r0, #12]
 800951c:	81c2      	strh	r2, [r0, #14]
 800951e:	8202      	strh	r2, [r0, #16]
 8009520:	8242      	strh	r2, [r0, #18]
 8009522:	e9c0 2205 	strd	r2, r2, [r0, #20]
 8009526:	61c2      	str	r2, [r0, #28]
 8009528:	f880 2024 	strb.w	r2, [r0, #36]	; 0x24
 800952c:	6001      	str	r1, [r0, #0]
 800952e:	6282      	str	r2, [r0, #40]	; 0x28
 8009530:	4770      	bx	lr
 8009532:	bf00      	nop
 8009534:	0801b51c 	.word	0x0801b51c

08009538 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>:
 8009538:	b510      	push	{r4, lr}
 800953a:	2300      	movs	r3, #0
 800953c:	8083      	strh	r3, [r0, #4]
 800953e:	80c3      	strh	r3, [r0, #6]
 8009540:	8103      	strh	r3, [r0, #8]
 8009542:	8143      	strh	r3, [r0, #10]
 8009544:	8183      	strh	r3, [r0, #12]
 8009546:	81c3      	strh	r3, [r0, #14]
 8009548:	8203      	strh	r3, [r0, #16]
 800954a:	8243      	strh	r3, [r0, #18]
 800954c:	e9c0 3305 	strd	r3, r3, [r0, #20]
 8009550:	61c3      	str	r3, [r0, #28]
 8009552:	f880 3024 	strb.w	r3, [r0, #36]	; 0x24
 8009556:	2301      	movs	r3, #1
 8009558:	f880 3025 	strb.w	r3, [r0, #37]	; 0x25
 800955c:	4b05      	ldr	r3, [pc, #20]	; (8009574 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE+0x3c>)
 800955e:	6003      	str	r3, [r0, #0]
 8009560:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8009564:	4604      	mov	r4, r0
 8009566:	84c3      	strh	r3, [r0, #38]	; 0x26
 8009568:	f880 3028 	strb.w	r3, [r0, #40]	; 0x28
 800956c:	f001 fa51 	bl	800aa12 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8009570:	4620      	mov	r0, r4
 8009572:	bd10      	pop	{r4, pc}
 8009574:	0801c38c 	.word	0x0801c38c

08009578 <_ZN8touchgfx6SliderC1Ev>:
 8009578:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800957c:	ae02      	add	r6, sp, #8
 800957e:	f64f 77ff 	movw	r7, #65535	; 0xffff
 8009582:	4604      	mov	r4, r0
 8009584:	f7ff ffc0 	bl	8009508 <_ZN8touchgfx9ContainerC1Ev>
 8009588:	f826 7d04 	strh.w	r7, [r6, #-4]!
 800958c:	4b23      	ldr	r3, [pc, #140]	; (800961c <_ZN8touchgfx6SliderC1Ev+0xa4>)
 800958e:	6023      	str	r3, [r4, #0]
 8009590:	2500      	movs	r5, #0
 8009592:	f04f 0b01 	mov.w	fp, #1
 8009596:	f104 093c 	add.w	r9, r4, #60	; 0x3c
 800959a:	4631      	mov	r1, r6
 800959c:	f104 0a68 	add.w	sl, r4, #104	; 0x68
 80095a0:	f884 502c 	strb.w	r5, [r4, #44]	; 0x2c
 80095a4:	e9c4 550c 	strd	r5, r5, [r4, #48]	; 0x30
 80095a8:	f8c4 b038 	str.w	fp, [r4, #56]	; 0x38
 80095ac:	4648      	mov	r0, r9
 80095ae:	f7ff ffc3 	bl	8009538 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 80095b2:	f104 0894 	add.w	r8, r4, #148	; 0x94
 80095b6:	4631      	mov	r1, r6
 80095b8:	4650      	mov	r0, sl
 80095ba:	f8ad 7004 	strh.w	r7, [sp, #4]
 80095be:	f7ff ffbb 	bl	8009538 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 80095c2:	4631      	mov	r1, r6
 80095c4:	4640      	mov	r0, r8
 80095c6:	f104 06c0 	add.w	r6, r4, #192	; 0xc0
 80095ca:	f8ad 7004 	strh.w	r7, [sp, #4]
 80095ce:	f7ff ffb3 	bl	8009538 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 80095d2:	4630      	mov	r0, r6
 80095d4:	f7ff ff98 	bl	8009508 <_ZN8touchgfx9ContainerC1Ev>
 80095d8:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 80095dc:	e9c4 353b 	strd	r3, r5, [r4, #236]	; 0xec
 80095e0:	4651      	mov	r1, sl
 80095e2:	4630      	mov	r0, r6
 80095e4:	e9c4 553d 	strd	r5, r5, [r4, #244]	; 0xf4
 80095e8:	f884 b024 	strb.w	fp, [r4, #36]	; 0x24
 80095ec:	f7ff fc0a 	bl	8008e04 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80095f0:	4649      	mov	r1, r9
 80095f2:	4620      	mov	r0, r4
 80095f4:	f7ff fc06 	bl	8008e04 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80095f8:	4631      	mov	r1, r6
 80095fa:	4620      	mov	r0, r4
 80095fc:	f7ff fc02 	bl	8008e04 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8009600:	4641      	mov	r1, r8
 8009602:	4620      	mov	r0, r4
 8009604:	f7ff fbfe 	bl	8008e04 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8009608:	4620      	mov	r0, r4
 800960a:	2264      	movs	r2, #100	; 0x64
 800960c:	4629      	mov	r1, r5
 800960e:	f7ff fdac 	bl	800916a <_ZN8touchgfx6Slider13setValueRangeEii>
 8009612:	4620      	mov	r0, r4
 8009614:	b003      	add	sp, #12
 8009616:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800961a:	bf00      	nop
 800961c:	0801b830 	.word	0x0801b830

08009620 <_ZN8touchgfx6Slider10setBitmapsERKNS_6BitmapES3_S3_>:
 8009620:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8009624:	4604      	mov	r4, r0
 8009626:	4608      	mov	r0, r1
 8009628:	4615      	mov	r5, r2
 800962a:	460e      	mov	r6, r1
 800962c:	461f      	mov	r7, r3
 800962e:	f004 fa1f 	bl	800da70 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8009632:	4680      	mov	r8, r0
 8009634:	4628      	mov	r0, r5
 8009636:	f004 fa1b 	bl	800da70 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800963a:	4580      	cmp	r8, r0
 800963c:	d005      	beq.n	800964a <_ZN8touchgfx6Slider10setBitmapsERKNS_6BitmapES3_S3_+0x2a>
 800963e:	4b14      	ldr	r3, [pc, #80]	; (8009690 <_ZN8touchgfx6Slider10setBitmapsERKNS_6BitmapES3_S3_+0x70>)
 8009640:	4a14      	ldr	r2, [pc, #80]	; (8009694 <_ZN8touchgfx6Slider10setBitmapsERKNS_6BitmapES3_S3_+0x74>)
 8009642:	4815      	ldr	r0, [pc, #84]	; (8009698 <_ZN8touchgfx6Slider10setBitmapsERKNS_6BitmapES3_S3_+0x78>)
 8009644:	2133      	movs	r1, #51	; 0x33
 8009646:	f00f fee1 	bl	801940c <__assert_func>
 800964a:	4630      	mov	r0, r6
 800964c:	f004 fa4a 	bl	800dae4 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8009650:	4680      	mov	r8, r0
 8009652:	4628      	mov	r0, r5
 8009654:	f004 fa46 	bl	800dae4 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8009658:	4580      	cmp	r8, r0
 800965a:	d1f0      	bne.n	800963e <_ZN8touchgfx6Slider10setBitmapsERKNS_6BitmapES3_S3_+0x1e>
 800965c:	4631      	mov	r1, r6
 800965e:	f104 003c 	add.w	r0, r4, #60	; 0x3c
 8009662:	f001 f9d6 	bl	800aa12 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8009666:	4629      	mov	r1, r5
 8009668:	f104 0068 	add.w	r0, r4, #104	; 0x68
 800966c:	f001 f9d1 	bl	800aa12 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8009670:	4639      	mov	r1, r7
 8009672:	f104 0094 	add.w	r0, r4, #148	; 0x94
 8009676:	f001 f9cc 	bl	800aa12 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800967a:	f8b4 3070 	ldrh.w	r3, [r4, #112]	; 0x70
 800967e:	f8a4 30c8 	strh.w	r3, [r4, #200]	; 0xc8
 8009682:	f8b4 3072 	ldrh.w	r3, [r4, #114]	; 0x72
 8009686:	f8a4 30ca 	strh.w	r3, [r4, #202]	; 0xca
 800968a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800968e:	bf00      	nop
 8009690:	0801b5db 	.word	0x0801b5db
 8009694:	0801b8f0 	.word	0x0801b8f0
 8009698:	0801b7f8 	.word	0x0801b7f8

0800969c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEt>:
 800969c:	b513      	push	{r0, r1, r4, lr}
 800969e:	6803      	ldr	r3, [r0, #0]
 80096a0:	f8d3 4090 	ldr.w	r4, [r3, #144]	; 0x90
 80096a4:	2300      	movs	r3, #0
 80096a6:	e9cd 3300 	strd	r3, r3, [sp]
 80096aa:	466b      	mov	r3, sp
 80096ac:	47a0      	blx	r4
 80096ae:	b002      	add	sp, #8
 80096b0:	bd10      	pop	{r4, pc}

080096b2 <_ZN8touchgfx3HAL16flushFrameBufferEv>:
 80096b2:	2301      	movs	r3, #1
 80096b4:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
 80096b8:	f880 3069 	strb.w	r3, [r0, #105]	; 0x69
 80096bc:	4770      	bx	lr

080096be <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>:
 80096be:	2301      	movs	r3, #1
 80096c0:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
 80096c4:	f880 3069 	strb.w	r3, [r0, #105]	; 0x69
 80096c8:	4770      	bx	lr

080096ca <_ZN8touchgfx3HAL17allowDMATransfersEv>:
 80096ca:	6843      	ldr	r3, [r0, #4]
 80096cc:	2201      	movs	r2, #1
 80096ce:	725a      	strb	r2, [r3, #9]
 80096d0:	6840      	ldr	r0, [r0, #4]
 80096d2:	6803      	ldr	r3, [r0, #0]
 80096d4:	691b      	ldr	r3, [r3, #16]
 80096d6:	4718      	bx	r3

080096d8 <_ZN8touchgfx3HAL8flushDMAEv>:
 80096d8:	6840      	ldr	r0, [r0, #4]
 80096da:	6803      	ldr	r3, [r0, #0]
 80096dc:	689b      	ldr	r3, [r3, #8]
 80096de:	4718      	bx	r3

080096e0 <_ZN8touchgfx3HAL10beginFrameEv>:
 80096e0:	4b04      	ldr	r3, [pc, #16]	; (80096f4 <_ZN8touchgfx3HAL10beginFrameEv+0x14>)
 80096e2:	781b      	ldrb	r3, [r3, #0]
 80096e4:	b123      	cbz	r3, 80096f0 <_ZN8touchgfx3HAL10beginFrameEv+0x10>
 80096e6:	f890 006a 	ldrb.w	r0, [r0, #106]	; 0x6a
 80096ea:	f080 0001 	eor.w	r0, r0, #1
 80096ee:	4770      	bx	lr
 80096f0:	2001      	movs	r0, #1
 80096f2:	4770      	bx	lr
 80096f4:	20012186 	.word	0x20012186

080096f8 <_ZN8touchgfx3HAL8endFrameEv>:
 80096f8:	b510      	push	{r4, lr}
 80096fa:	4604      	mov	r4, r0
 80096fc:	6840      	ldr	r0, [r0, #4]
 80096fe:	6803      	ldr	r3, [r0, #0]
 8009700:	689b      	ldr	r3, [r3, #8]
 8009702:	4798      	blx	r3
 8009704:	f894 3069 	ldrb.w	r3, [r4, #105]	; 0x69
 8009708:	b113      	cbz	r3, 8009710 <_ZN8touchgfx3HAL8endFrameEv+0x18>
 800970a:	2301      	movs	r3, #1
 800970c:	f884 306a 	strb.w	r3, [r4, #106]	; 0x6a
 8009710:	bd10      	pop	{r4, pc}
	...

08009714 <_ZN8touchgfx3HAL4tickEv>:
 8009714:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8009716:	6803      	ldr	r3, [r0, #0]
 8009718:	4d5c      	ldr	r5, [pc, #368]	; (800988c <_ZN8touchgfx3HAL4tickEv+0x178>)
 800971a:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
 800971e:	4604      	mov	r4, r0
 8009720:	4798      	blx	r3
 8009722:	2800      	cmp	r0, #0
 8009724:	f000 8097 	beq.w	8009856 <_ZN8touchgfx3HAL4tickEv+0x142>
 8009728:	2001      	movs	r0, #1
 800972a:	f7f7 fbfb 	bl	8000f24 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 800972e:	f894 3066 	ldrb.w	r3, [r4, #102]	; 0x66
 8009732:	f884 3067 	strb.w	r3, [r4, #103]	; 0x67
 8009736:	f894 3075 	ldrb.w	r3, [r4, #117]	; 0x75
 800973a:	2600      	movs	r6, #0
 800973c:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 8009740:	f884 604b 	strb.w	r6, [r4, #75]	; 0x4b
 8009744:	b133      	cbz	r3, 8009754 <_ZN8touchgfx3HAL4tickEv+0x40>
 8009746:	6823      	ldr	r3, [r4, #0]
 8009748:	4620      	mov	r0, r4
 800974a:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
 800974e:	4798      	blx	r3
 8009750:	f884 6075 	strb.w	r6, [r4, #117]	; 0x75
 8009754:	f894 304a 	ldrb.w	r3, [r4, #74]	; 0x4a
 8009758:	6862      	ldr	r2, [r4, #4]
 800975a:	f083 0301 	eor.w	r3, r3, #1
 800975e:	7253      	strb	r3, [r2, #9]
 8009760:	2601      	movs	r6, #1
 8009762:	702e      	strb	r6, [r5, #0]
 8009764:	f002 f9ae 	bl	800bac4 <_ZN8touchgfx11Application11getInstanceEv>
 8009768:	6803      	ldr	r3, [r0, #0]
 800976a:	4631      	mov	r1, r6
 800976c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800976e:	4798      	blx	r3
 8009770:	f894 3067 	ldrb.w	r3, [r4, #103]	; 0x67
 8009774:	b90b      	cbnz	r3, 800977a <_ZN8touchgfx3HAL4tickEv+0x66>
 8009776:	f884 6067 	strb.w	r6, [r4, #103]	; 0x67
 800977a:	f002 f9a3 	bl	800bac4 <_ZN8touchgfx11Application11getInstanceEv>
 800977e:	6803      	ldr	r3, [r0, #0]
 8009780:	695b      	ldr	r3, [r3, #20]
 8009782:	4798      	blx	r3
 8009784:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8009786:	6803      	ldr	r3, [r0, #0]
 8009788:	691b      	ldr	r3, [r3, #16]
 800978a:	4798      	blx	r3
 800978c:	f894 3067 	ldrb.w	r3, [r4, #103]	; 0x67
 8009790:	f894 2068 	ldrb.w	r2, [r4, #104]	; 0x68
 8009794:	3b01      	subs	r3, #1
 8009796:	b2db      	uxtb	r3, r3
 8009798:	f884 3067 	strb.w	r3, [r4, #103]	; 0x67
 800979c:	b10a      	cbz	r2, 80097a2 <_ZN8touchgfx3HAL4tickEv+0x8e>
 800979e:	2b00      	cmp	r3, #0
 80097a0:	d1eb      	bne.n	800977a <_ZN8touchgfx3HAL4tickEv+0x66>
 80097a2:	4a3b      	ldr	r2, [pc, #236]	; (8009890 <_ZN8touchgfx3HAL4tickEv+0x17c>)
 80097a4:	f994 1064 	ldrsb.w	r1, [r4, #100]	; 0x64
 80097a8:	7813      	ldrb	r3, [r2, #0]
 80097aa:	3301      	adds	r3, #1
 80097ac:	b25b      	sxtb	r3, r3
 80097ae:	4299      	cmp	r1, r3
 80097b0:	7013      	strb	r3, [r2, #0]
 80097b2:	dc10      	bgt.n	80097d6 <_ZN8touchgfx3HAL4tickEv+0xc2>
 80097b4:	68e0      	ldr	r0, [r4, #12]
 80097b6:	2300      	movs	r3, #0
 80097b8:	7013      	strb	r3, [r2, #0]
 80097ba:	6803      	ldr	r3, [r0, #0]
 80097bc:	aa03      	add	r2, sp, #12
 80097be:	68db      	ldr	r3, [r3, #12]
 80097c0:	a902      	add	r1, sp, #8
 80097c2:	4798      	blx	r3
 80097c4:	6823      	ldr	r3, [r4, #0]
 80097c6:	2800      	cmp	r0, #0
 80097c8:	d051      	beq.n	800986e <_ZN8touchgfx3HAL4tickEv+0x15a>
 80097ca:	f8d3 30a4 	ldr.w	r3, [r3, #164]	; 0xa4
 80097ce:	e9dd 1202 	ldrd	r1, r2, [sp, #8]
 80097d2:	4620      	mov	r0, r4
 80097d4:	4798      	blx	r3
 80097d6:	6960      	ldr	r0, [r4, #20]
 80097d8:	2300      	movs	r3, #0
 80097da:	f88d 3007 	strb.w	r3, [sp, #7]
 80097de:	b158      	cbz	r0, 80097f8 <_ZN8touchgfx3HAL4tickEv+0xe4>
 80097e0:	6803      	ldr	r3, [r0, #0]
 80097e2:	f10d 0107 	add.w	r1, sp, #7
 80097e6:	68db      	ldr	r3, [r3, #12]
 80097e8:	4798      	blx	r3
 80097ea:	b128      	cbz	r0, 80097f8 <_ZN8touchgfx3HAL4tickEv+0xe4>
 80097ec:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80097ee:	f89d 1007 	ldrb.w	r1, [sp, #7]
 80097f2:	6803      	ldr	r3, [r0, #0]
 80097f4:	68db      	ldr	r3, [r3, #12]
 80097f6:	4798      	blx	r3
 80097f8:	f104 001c 	add.w	r0, r4, #28
 80097fc:	f00f fcf8 	bl	80191f0 <_ZN8touchgfx8Gestures4tickEv>
 8009800:	f894 306c 	ldrb.w	r3, [r4, #108]	; 0x6c
 8009804:	b30b      	cbz	r3, 800984a <_ZN8touchgfx3HAL4tickEv+0x136>
 8009806:	6920      	ldr	r0, [r4, #16]
 8009808:	6803      	ldr	r3, [r0, #0]
 800980a:	691b      	ldr	r3, [r3, #16]
 800980c:	4798      	blx	r3
 800980e:	6f23      	ldr	r3, [r4, #112]	; 0x70
 8009810:	4606      	mov	r6, r0
 8009812:	b903      	cbnz	r3, 8009816 <_ZN8touchgfx3HAL4tickEv+0x102>
 8009814:	6720      	str	r0, [r4, #112]	; 0x70
 8009816:	6f23      	ldr	r3, [r4, #112]	; 0x70
 8009818:	4a1e      	ldr	r2, [pc, #120]	; (8009894 <_ZN8touchgfx3HAL4tickEv+0x180>)
 800981a:	1af3      	subs	r3, r6, r3
 800981c:	4293      	cmp	r3, r2
 800981e:	d914      	bls.n	800984a <_ZN8touchgfx3HAL4tickEv+0x136>
 8009820:	6920      	ldr	r0, [r4, #16]
 8009822:	6803      	ldr	r3, [r0, #0]
 8009824:	699b      	ldr	r3, [r3, #24]
 8009826:	4798      	blx	r3
 8009828:	6f23      	ldr	r3, [r4, #112]	; 0x70
 800982a:	2264      	movs	r2, #100	; 0x64
 800982c:	1af3      	subs	r3, r6, r3
 800982e:	fbb3 f3f2 	udiv	r3, r3, r2
 8009832:	fbb0 f0f3 	udiv	r0, r0, r3
 8009836:	2800      	cmp	r0, #0
 8009838:	dc1e      	bgt.n	8009878 <_ZN8touchgfx3HAL4tickEv+0x164>
 800983a:	f884 2065 	strb.w	r2, [r4, #101]	; 0x65
 800983e:	6920      	ldr	r0, [r4, #16]
 8009840:	6803      	ldr	r3, [r0, #0]
 8009842:	2100      	movs	r1, #0
 8009844:	69db      	ldr	r3, [r3, #28]
 8009846:	4798      	blx	r3
 8009848:	6726      	str	r6, [r4, #112]	; 0x70
 800984a:	f002 f93b 	bl	800bac4 <_ZN8touchgfx11Application11getInstanceEv>
 800984e:	6803      	ldr	r3, [r0, #0]
 8009850:	2100      	movs	r1, #0
 8009852:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8009854:	4798      	blx	r3
 8009856:	6823      	ldr	r3, [r4, #0]
 8009858:	4620      	mov	r0, r4
 800985a:	f8d3 309c 	ldr.w	r3, [r3, #156]	; 0x9c
 800985e:	4798      	blx	r3
 8009860:	2001      	movs	r0, #1
 8009862:	f7f7 fb60 	bl	8000f26 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
 8009866:	2300      	movs	r3, #0
 8009868:	702b      	strb	r3, [r5, #0]
 800986a:	b004      	add	sp, #16
 800986c:	bd70      	pop	{r4, r5, r6, pc}
 800986e:	f8d3 30a8 	ldr.w	r3, [r3, #168]	; 0xa8
 8009872:	4620      	mov	r0, r4
 8009874:	4798      	blx	r3
 8009876:	e7ae      	b.n	80097d6 <_ZN8touchgfx3HAL4tickEv+0xc2>
 8009878:	2863      	cmp	r0, #99	; 0x63
 800987a:	bfcb      	itete	gt
 800987c:	2300      	movgt	r3, #0
 800987e:	f1c0 0064 	rsble	r0, r0, #100	; 0x64
 8009882:	f884 3065 	strbgt.w	r3, [r4, #101]	; 0x65
 8009886:	f884 0065 	strble.w	r0, [r4, #101]	; 0x65
 800988a:	e7d8      	b.n	800983e <_ZN8touchgfx3HAL4tickEv+0x12a>
 800988c:	2001218c 	.word	0x2001218c
 8009890:	2001218d 	.word	0x2001218d
 8009894:	05f5e100 	.word	0x05f5e100

08009898 <_ZN8touchgfx3HAL17unlockFrameBufferEv>:
 8009898:	f7f7 bc6e 	b.w	8001178 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

0800989c <_ZN8touchgfx3HAL21registerEventListenerERNS_15UIEventListenerE>:
 800989c:	6581      	str	r1, [r0, #88]	; 0x58
 800989e:	301c      	adds	r0, #28
 80098a0:	f00f bca4 	b.w	80191ec <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>

080098a4 <_ZN8touchgfx3HAL5touchEll>:
 80098a4:	b530      	push	{r4, r5, lr}
 80098a6:	b087      	sub	sp, #28
 80098a8:	4604      	mov	r4, r0
 80098aa:	a804      	add	r0, sp, #16
 80098ac:	e9cd 1204 	strd	r1, r2, [sp, #16]
 80098b0:	f001 feb8 	bl	800b624 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>
 80098b4:	9b04      	ldr	r3, [sp, #16]
 80098b6:	f8ad 300c 	strh.w	r3, [sp, #12]
 80098ba:	a906      	add	r1, sp, #24
 80098bc:	9b05      	ldr	r3, [sp, #20]
 80098be:	f821 3d0a 	strh.w	r3, [r1, #-10]!
 80098c2:	a803      	add	r0, sp, #12
 80098c4:	f001 fefc 	bl	800b6c0 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>
 80098c8:	f894 106b 	ldrb.w	r1, [r4, #107]	; 0x6b
 80098cc:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 80098d0:	f8bd 300e 	ldrh.w	r3, [sp, #14]
 80098d4:	f104 001c 	add.w	r0, r4, #28
 80098d8:	b189      	cbz	r1, 80098fe <_ZN8touchgfx3HAL5touchEll+0x5a>
 80098da:	f8b4 5060 	ldrh.w	r5, [r4, #96]	; 0x60
 80098de:	9300      	str	r3, [sp, #0]
 80098e0:	f8b4 105c 	ldrh.w	r1, [r4, #92]	; 0x5c
 80098e4:	4613      	mov	r3, r2
 80098e6:	462a      	mov	r2, r5
 80098e8:	f00f fc90 	bl	801920c <_ZN8touchgfx8Gestures17registerDragEventEtttt>
 80098ec:	b128      	cbz	r0, 80098fa <_ZN8touchgfx3HAL5touchEll+0x56>
 80098ee:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 80098f2:	65e3      	str	r3, [r4, #92]	; 0x5c
 80098f4:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 80098f8:	6623      	str	r3, [r4, #96]	; 0x60
 80098fa:	b007      	add	sp, #28
 80098fc:	bd30      	pop	{r4, r5, pc}
 80098fe:	f00f fcc9 	bl	8019294 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 8009902:	2301      	movs	r3, #1
 8009904:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
 8009908:	e7f1      	b.n	80098ee <_ZN8touchgfx3HAL5touchEll+0x4a>

0800990a <_ZN8touchgfx3HAL9blockCopyEPvPKvm>:
 800990a:	b570      	push	{r4, r5, r6, lr}
 800990c:	2b00      	cmp	r3, #0
 800990e:	d050      	beq.n	80099b2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0xa8>
 8009910:	ea81 0002 	eor.w	r0, r1, r2
 8009914:	07c6      	lsls	r6, r0, #31
 8009916:	d508      	bpl.n	800992a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x20>
 8009918:	3a01      	subs	r2, #1
 800991a:	18cc      	adds	r4, r1, r3
 800991c:	42a1      	cmp	r1, r4
 800991e:	d048      	beq.n	80099b2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0xa8>
 8009920:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 8009924:	f801 0b01 	strb.w	r0, [r1], #1
 8009928:	e7f8      	b.n	800991c <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x12>
 800992a:	07d5      	lsls	r5, r2, #31
 800992c:	bf42      	ittt	mi
 800992e:	f812 0b01 	ldrbmi.w	r0, [r2], #1
 8009932:	f801 0b01 	strbmi.w	r0, [r1], #1
 8009936:	f103 33ff 	addmi.w	r3, r3, #4294967295
 800993a:	2b01      	cmp	r3, #1
 800993c:	d915      	bls.n	800996a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x60>
 800993e:	ea82 0001 	eor.w	r0, r2, r1
 8009942:	0784      	lsls	r4, r0, #30
 8009944:	d02d      	beq.n	80099a2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x98>
 8009946:	1e94      	subs	r4, r2, #2
 8009948:	4608      	mov	r0, r1
 800994a:	18ce      	adds	r6, r1, r3
 800994c:	f834 5f02 	ldrh.w	r5, [r4, #2]!
 8009950:	f820 5b02 	strh.w	r5, [r0], #2
 8009954:	1a35      	subs	r5, r6, r0
 8009956:	2d01      	cmp	r5, #1
 8009958:	d8f8      	bhi.n	800994c <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x42>
 800995a:	1e98      	subs	r0, r3, #2
 800995c:	f020 0001 	bic.w	r0, r0, #1
 8009960:	3002      	adds	r0, #2
 8009962:	4401      	add	r1, r0
 8009964:	4402      	add	r2, r0
 8009966:	f003 0301 	and.w	r3, r3, #1
 800996a:	1f14      	subs	r4, r2, #4
 800996c:	4608      	mov	r0, r1
 800996e:	18ce      	adds	r6, r1, r3
 8009970:	1a35      	subs	r5, r6, r0
 8009972:	2d03      	cmp	r5, #3
 8009974:	d810      	bhi.n	8009998 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x8e>
 8009976:	089c      	lsrs	r4, r3, #2
 8009978:	00a0      	lsls	r0, r4, #2
 800997a:	4401      	add	r1, r0
 800997c:	3801      	subs	r0, #1
 800997e:	4402      	add	r2, r0
 8009980:	f06f 0003 	mvn.w	r0, #3
 8009984:	fb00 3404 	mla	r4, r0, r4, r3
 8009988:	440c      	add	r4, r1
 800998a:	42a1      	cmp	r1, r4
 800998c:	d011      	beq.n	80099b2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0xa8>
 800998e:	f812 3f01 	ldrb.w	r3, [r2, #1]!
 8009992:	f801 3b01 	strb.w	r3, [r1], #1
 8009996:	e7f8      	b.n	800998a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x80>
 8009998:	f854 5f04 	ldr.w	r5, [r4, #4]!
 800999c:	f840 5b04 	str.w	r5, [r0], #4
 80099a0:	e7e6      	b.n	8009970 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x66>
 80099a2:	0790      	lsls	r0, r2, #30
 80099a4:	d0e1      	beq.n	800996a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x60>
 80099a6:	f832 0b02 	ldrh.w	r0, [r2], #2
 80099aa:	f821 0b02 	strh.w	r0, [r1], #2
 80099ae:	3b02      	subs	r3, #2
 80099b0:	e7db      	b.n	800996a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x60>
 80099b2:	2001      	movs	r0, #1
 80099b4:	bd70      	pop	{r4, r5, r6, pc}

080099b6 <_ZN8touchgfx3HAL7noTouchEv>:
 80099b6:	b510      	push	{r4, lr}
 80099b8:	f890 306b 	ldrb.w	r3, [r0, #107]	; 0x6b
 80099bc:	4604      	mov	r4, r0
 80099be:	b153      	cbz	r3, 80099d6 <_ZN8touchgfx3HAL7noTouchEv+0x20>
 80099c0:	f8b0 3060 	ldrh.w	r3, [r0, #96]	; 0x60
 80099c4:	f8b0 205c 	ldrh.w	r2, [r0, #92]	; 0x5c
 80099c8:	2101      	movs	r1, #1
 80099ca:	301c      	adds	r0, #28
 80099cc:	f00f fc62 	bl	8019294 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 80099d0:	2300      	movs	r3, #0
 80099d2:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
 80099d6:	bd10      	pop	{r4, pc}

080099d8 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt>:
 80099d8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80099dc:	4605      	mov	r5, r0
 80099de:	6980      	ldr	r0, [r0, #24]
 80099e0:	b085      	sub	sp, #20
 80099e2:	460f      	mov	r7, r1
 80099e4:	4690      	mov	r8, r2
 80099e6:	4699      	mov	r9, r3
 80099e8:	b930      	cbnz	r0, 80099f8 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x20>
 80099ea:	4b1f      	ldr	r3, [pc, #124]	; (8009a68 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x90>)
 80099ec:	4a1f      	ldr	r2, [pc, #124]	; (8009a6c <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x94>)
 80099ee:	f240 112f 	movw	r1, #303	; 0x12f
 80099f2:	481f      	ldr	r0, [pc, #124]	; (8009a70 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x98>)
 80099f4:	f00f fd0a 	bl	801940c <__assert_func>
 80099f8:	ac04      	add	r4, sp, #16
 80099fa:	2600      	movs	r6, #0
 80099fc:	f844 6d04 	str.w	r6, [r4, #-4]!
 8009a00:	6806      	ldr	r6, [r0, #0]
 8009a02:	9401      	str	r4, [sp, #4]
 8009a04:	f8bd 4030 	ldrh.w	r4, [sp, #48]	; 0x30
 8009a08:	9400      	str	r4, [sp, #0]
 8009a0a:	6834      	ldr	r4, [r6, #0]
 8009a0c:	47a0      	blx	r4
 8009a0e:	4c19      	ldr	r4, [pc, #100]	; (8009a74 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x9c>)
 8009a10:	4606      	mov	r6, r0
 8009a12:	f8a4 9000 	strh.w	r9, [r4]
 8009a16:	f7f7 fc75 	bl	8001304 <_ZN8touchgfx3HAL3lcdEv>
 8009a1a:	6803      	ldr	r3, [r0, #0]
 8009a1c:	6a1b      	ldr	r3, [r3, #32]
 8009a1e:	4798      	blx	r3
 8009a20:	280c      	cmp	r0, #12
 8009a22:	d80f      	bhi.n	8009a44 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x6c>
 8009a24:	e8df f000 	tbb	[pc, r0]
 8009a28:	1b1b1207 	.word	0x1b1b1207
 8009a2c:	1b1b1b1b 	.word	0x1b1b1b1b
 8009a30:	1b1b1b1b 	.word	0x1b1b1b1b
 8009a34:	1b          	.byte	0x1b
 8009a35:	00          	.byte	0x00
 8009a36:	8823      	ldrh	r3, [r4, #0]
 8009a38:	fb08 7203 	mla	r2, r8, r3, r7
 8009a3c:	9b03      	ldr	r3, [sp, #12]
 8009a3e:	eba3 0342 	sub.w	r3, r3, r2, lsl #1
 8009a42:	63eb      	str	r3, [r5, #60]	; 0x3c
 8009a44:	4630      	mov	r0, r6
 8009a46:	b005      	add	sp, #20
 8009a48:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8009a4c:	8822      	ldrh	r2, [r4, #0]
 8009a4e:	9b03      	ldr	r3, [sp, #12]
 8009a50:	fb08 7202 	mla	r2, r8, r2, r7
 8009a54:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8009a58:	1a9a      	subs	r2, r3, r2
 8009a5a:	63ea      	str	r2, [r5, #60]	; 0x3c
 8009a5c:	e7f2      	b.n	8009a44 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x6c>
 8009a5e:	4b06      	ldr	r3, [pc, #24]	; (8009a78 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0xa0>)
 8009a60:	4a02      	ldr	r2, [pc, #8]	; (8009a6c <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x94>)
 8009a62:	f44f 71a6 	mov.w	r1, #332	; 0x14c
 8009a66:	e7c4      	b.n	80099f2 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x1a>
 8009a68:	0801bad3 	.word	0x0801bad3
 8009a6c:	0801bd2d 	.word	0x0801bd2d
 8009a70:	0801bb18 	.word	0x0801bb18
 8009a74:	20012182 	.word	0x20012182
 8009a78:	0801bb3e 	.word	0x0801bb3e

08009a7c <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttth>:
 8009a7c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8009a80:	4698      	mov	r8, r3
 8009a82:	6803      	ldr	r3, [r0, #0]
 8009a84:	6c5d      	ldr	r5, [r3, #68]	; 0x44
 8009a86:	4b0f      	ldr	r3, [pc, #60]	; (8009ac4 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttth+0x48>)
 8009a88:	b087      	sub	sp, #28
 8009a8a:	f8b3 9000 	ldrh.w	r9, [r3]
 8009a8e:	460e      	mov	r6, r1
 8009a90:	4617      	mov	r7, r2
 8009a92:	4604      	mov	r4, r0
 8009a94:	f7f7 fc36 	bl	8001304 <_ZN8touchgfx3HAL3lcdEv>
 8009a98:	6803      	ldr	r3, [r0, #0]
 8009a9a:	6a1b      	ldr	r3, [r3, #32]
 8009a9c:	4798      	blx	r3
 8009a9e:	f89d 3040 	ldrb.w	r3, [sp, #64]	; 0x40
 8009aa2:	9302      	str	r3, [sp, #8]
 8009aa4:	f8bd 303c 	ldrh.w	r3, [sp, #60]	; 0x3c
 8009aa8:	9301      	str	r3, [sp, #4]
 8009aaa:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 8009aae:	9300      	str	r3, [sp, #0]
 8009ab0:	e9cd 9003 	strd	r9, r0, [sp, #12]
 8009ab4:	4643      	mov	r3, r8
 8009ab6:	463a      	mov	r2, r7
 8009ab8:	4631      	mov	r1, r6
 8009aba:	4620      	mov	r0, r4
 8009abc:	47a8      	blx	r5
 8009abe:	b007      	add	sp, #28
 8009ac0:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8009ac4:	20012182 	.word	0x20012182

08009ac8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE>:
 8009ac8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8009acc:	4606      	mov	r6, r0
 8009ace:	b089      	sub	sp, #36	; 0x24
 8009ad0:	4610      	mov	r0, r2
 8009ad2:	460c      	mov	r4, r1
 8009ad4:	4691      	mov	r9, r2
 8009ad6:	4698      	mov	r8, r3
 8009ad8:	f003 ff06 	bl	800d8e8 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 8009adc:	2800      	cmp	r0, #0
 8009ade:	f000 8093 	beq.w	8009c08 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x140>
 8009ae2:	f8df a13c 	ldr.w	sl, [pc, #316]	; 8009c20 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x158>
 8009ae6:	f8df b13c 	ldr.w	fp, [pc, #316]	; 8009c24 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x15c>
 8009aea:	f8da 0000 	ldr.w	r0, [sl]
 8009aee:	4f4b      	ldr	r7, [pc, #300]	; (8009c1c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x154>)
 8009af0:	6802      	ldr	r2, [r0, #0]
 8009af2:	6a12      	ldr	r2, [r2, #32]
 8009af4:	4790      	blx	r2
 8009af6:	f8da 0000 	ldr.w	r0, [sl]
 8009afa:	6802      	ldr	r2, [r0, #0]
 8009afc:	ad08      	add	r5, sp, #32
 8009afe:	6a52      	ldr	r2, [r2, #36]	; 0x24
 8009b00:	4790      	blx	r2
 8009b02:	f825 9d0c 	strh.w	r9, [r5, #-12]!
 8009b06:	f8bb 3000 	ldrh.w	r3, [fp]
 8009b0a:	9300      	str	r3, [sp, #0]
 8009b0c:	4628      	mov	r0, r5
 8009b0e:	883b      	ldrh	r3, [r7, #0]
 8009b10:	9301      	str	r3, [sp, #4]
 8009b12:	f003 ffad 	bl	800da70 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8009b16:	f8ab 0000 	strh.w	r0, [fp]
 8009b1a:	4628      	mov	r0, r5
 8009b1c:	f003 ffe2 	bl	800dae4 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8009b20:	f8da b000 	ldr.w	fp, [sl]
 8009b24:	8038      	strh	r0, [r7, #0]
 8009b26:	f8db 303c 	ldr.w	r3, [fp, #60]	; 0x3c
 8009b2a:	9302      	str	r3, [sp, #8]
 8009b2c:	4648      	mov	r0, r9
 8009b2e:	f8db 7040 	ldr.w	r7, [fp, #64]	; 0x40
 8009b32:	f003 fed9 	bl	800d8e8 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 8009b36:	f8da 2000 	ldr.w	r2, [sl]
 8009b3a:	f8cb 0040 	str.w	r0, [fp, #64]	; 0x40
 8009b3e:	63d0      	str	r0, [r2, #60]	; 0x3c
 8009b40:	6822      	ldr	r2, [r4, #0]
 8009b42:	f9b4 9004 	ldrsh.w	r9, [r4, #4]
 8009b46:	6b53      	ldr	r3, [r2, #52]	; 0x34
 8009b48:	f9b4 a006 	ldrsh.w	sl, [r4, #6]
 8009b4c:	2200      	movs	r2, #0
 8009b4e:	4611      	mov	r1, r2
 8009b50:	4620      	mov	r0, r4
 8009b52:	4798      	blx	r3
 8009b54:	2201      	movs	r2, #1
 8009b56:	f894 b025 	ldrb.w	fp, [r4, #37]	; 0x25
 8009b5a:	f884 2025 	strb.w	r2, [r4, #37]	; 0x25
 8009b5e:	f9b8 2004 	ldrsh.w	r2, [r8, #4]
 8009b62:	2a00      	cmp	r2, #0
 8009b64:	f104 0204 	add.w	r2, r4, #4
 8009b68:	dd51      	ble.n	8009c0e <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x146>
 8009b6a:	f9b8 1006 	ldrsh.w	r1, [r8, #6]
 8009b6e:	2900      	cmp	r1, #0
 8009b70:	dd4d      	ble.n	8009c0e <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x146>
 8009b72:	6810      	ldr	r0, [r2, #0]
 8009b74:	6851      	ldr	r1, [r2, #4]
 8009b76:	f10d 0c18 	add.w	ip, sp, #24
 8009b7a:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 8009b7e:	4641      	mov	r1, r8
 8009b80:	a806      	add	r0, sp, #24
 8009b82:	f7ff f96f 	bl	8008e64 <_ZN8touchgfx4RectaNERKS0_>
 8009b86:	4628      	mov	r0, r5
 8009b88:	f004 f8fe 	bl	800dd88 <_ZNK8touchgfx6Bitmap9getFormatEv>
 8009b8c:	4680      	mov	r8, r0
 8009b8e:	f7f7 fbb9 	bl	8001304 <_ZN8touchgfx3HAL3lcdEv>
 8009b92:	6802      	ldr	r2, [r0, #0]
 8009b94:	6a12      	ldr	r2, [r2, #32]
 8009b96:	4790      	blx	r2
 8009b98:	4580      	cmp	r8, r0
 8009b9a:	d03d      	beq.n	8009c18 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x150>
 8009b9c:	6cf0      	ldr	r0, [r6, #76]	; 0x4c
 8009b9e:	b150      	cbz	r0, 8009bb6 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xee>
 8009ba0:	4628      	mov	r0, r5
 8009ba2:	f004 f8f1 	bl	800dd88 <_ZNK8touchgfx6Bitmap9getFormatEv>
 8009ba6:	4605      	mov	r5, r0
 8009ba8:	6cf0      	ldr	r0, [r6, #76]	; 0x4c
 8009baa:	6803      	ldr	r3, [r0, #0]
 8009bac:	6a1b      	ldr	r3, [r3, #32]
 8009bae:	4798      	blx	r3
 8009bb0:	1a2b      	subs	r3, r5, r0
 8009bb2:	4258      	negs	r0, r3
 8009bb4:	4158      	adcs	r0, r3
 8009bb6:	f886 0076 	strb.w	r0, [r6, #118]	; 0x76
 8009bba:	6822      	ldr	r2, [r4, #0]
 8009bbc:	6963      	ldr	r3, [r4, #20]
 8009bbe:	9303      	str	r3, [sp, #12]
 8009bc0:	2500      	movs	r5, #0
 8009bc2:	6165      	str	r5, [r4, #20]
 8009bc4:	4620      	mov	r0, r4
 8009bc6:	6892      	ldr	r2, [r2, #8]
 8009bc8:	a906      	add	r1, sp, #24
 8009bca:	4790      	blx	r2
 8009bcc:	9b03      	ldr	r3, [sp, #12]
 8009bce:	6163      	str	r3, [r4, #20]
 8009bd0:	f886 5076 	strb.w	r5, [r6, #118]	; 0x76
 8009bd4:	6823      	ldr	r3, [r4, #0]
 8009bd6:	f884 b025 	strb.w	fp, [r4, #37]	; 0x25
 8009bda:	4620      	mov	r0, r4
 8009bdc:	4c10      	ldr	r4, [pc, #64]	; (8009c20 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x158>)
 8009bde:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8009be0:	4652      	mov	r2, sl
 8009be2:	4649      	mov	r1, r9
 8009be4:	4798      	blx	r3
 8009be6:	6820      	ldr	r0, [r4, #0]
 8009be8:	9b02      	ldr	r3, [sp, #8]
 8009bea:	9a00      	ldr	r2, [sp, #0]
 8009bec:	e9c0 370f 	strd	r3, r7, [r0, #60]	; 0x3c
 8009bf0:	4b0c      	ldr	r3, [pc, #48]	; (8009c24 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x15c>)
 8009bf2:	801a      	strh	r2, [r3, #0]
 8009bf4:	4b09      	ldr	r3, [pc, #36]	; (8009c1c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x154>)
 8009bf6:	9a01      	ldr	r2, [sp, #4]
 8009bf8:	801a      	strh	r2, [r3, #0]
 8009bfa:	6803      	ldr	r3, [r0, #0]
 8009bfc:	6a1b      	ldr	r3, [r3, #32]
 8009bfe:	4798      	blx	r3
 8009c00:	6820      	ldr	r0, [r4, #0]
 8009c02:	6803      	ldr	r3, [r0, #0]
 8009c04:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8009c06:	4798      	blx	r3
 8009c08:	b009      	add	sp, #36	; 0x24
 8009c0a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8009c0e:	6810      	ldr	r0, [r2, #0]
 8009c10:	6851      	ldr	r1, [r2, #4]
 8009c12:	ab06      	add	r3, sp, #24
 8009c14:	c303      	stmia	r3!, {r0, r1}
 8009c16:	e7b6      	b.n	8009b86 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xbe>
 8009c18:	2000      	movs	r0, #0
 8009c1a:	e7cc      	b.n	8009bb6 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xee>
 8009c1c:	20012184 	.word	0x20012184
 8009c20:	20012188 	.word	0x20012188
 8009c24:	20012182 	.word	0x20012182

08009c28 <_ZN8touchgfx3HAL20getClientFrameBufferEv>:
 8009c28:	b510      	push	{r4, lr}
 8009c2a:	4b07      	ldr	r3, [pc, #28]	; (8009c48 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x20>)
 8009c2c:	781b      	ldrb	r3, [r3, #0]
 8009c2e:	4604      	mov	r4, r0
 8009c30:	b13b      	cbz	r3, 8009c42 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 8009c32:	6803      	ldr	r3, [r0, #0]
 8009c34:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8009c36:	4798      	blx	r3
 8009c38:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8009c3a:	4283      	cmp	r3, r0
 8009c3c:	d101      	bne.n	8009c42 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 8009c3e:	6c20      	ldr	r0, [r4, #64]	; 0x40
 8009c40:	bd10      	pop	{r4, pc}
 8009c42:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 8009c44:	e7fc      	b.n	8009c40 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x18>
 8009c46:	bf00      	nop
 8009c48:	20012186 	.word	0x20012186

08009c4c <_ZN8touchgfx3HAL15lockFrameBufferEv>:
 8009c4c:	b510      	push	{r4, lr}
 8009c4e:	4b0b      	ldr	r3, [pc, #44]	; (8009c7c <_ZN8touchgfx3HAL15lockFrameBufferEv+0x30>)
 8009c50:	781b      	ldrb	r3, [r3, #0]
 8009c52:	4604      	mov	r4, r0
 8009c54:	b95b      	cbnz	r3, 8009c6e <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 8009c56:	f890 3048 	ldrb.w	r3, [r0, #72]	; 0x48
 8009c5a:	2b02      	cmp	r3, #2
 8009c5c:	d007      	beq.n	8009c6e <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 8009c5e:	6840      	ldr	r0, [r0, #4]
 8009c60:	f000 fbce 	bl	800a400 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>
 8009c64:	b118      	cbz	r0, 8009c6e <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 8009c66:	6862      	ldr	r2, [r4, #4]
 8009c68:	7a53      	ldrb	r3, [r2, #9]
 8009c6a:	2b00      	cmp	r3, #0
 8009c6c:	d0fc      	beq.n	8009c68 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x1c>
 8009c6e:	f7f7 fa6b 	bl	8001148 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 8009c72:	4620      	mov	r0, r4
 8009c74:	f7ff ffd8 	bl	8009c28 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8009c78:	bd10      	pop	{r4, pc}
 8009c7a:	bf00      	nop
 8009c7c:	20012186 	.word	0x20012186

08009c80 <_ZN8touchgfx3HAL10initializeEv>:
 8009c80:	b510      	push	{r4, lr}
 8009c82:	4604      	mov	r4, r0
 8009c84:	f7f7 fa48 	bl	8001118 <_ZN8touchgfx10OSWrappers10initializeEv>
 8009c88:	6860      	ldr	r0, [r4, #4]
 8009c8a:	6803      	ldr	r3, [r0, #0]
 8009c8c:	68db      	ldr	r3, [r3, #12]
 8009c8e:	4798      	blx	r3
 8009c90:	68e0      	ldr	r0, [r4, #12]
 8009c92:	6803      	ldr	r3, [r0, #0]
 8009c94:	689b      	ldr	r3, [r3, #8]
 8009c96:	4798      	blx	r3
 8009c98:	6823      	ldr	r3, [r4, #0]
 8009c9a:	4620      	mov	r0, r4
 8009c9c:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8009c9e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8009ca2:	4718      	bx	r3

08009ca4 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE>:
 8009ca4:	b508      	push	{r3, lr}
 8009ca6:	290c      	cmp	r1, #12
 8009ca8:	d817      	bhi.n	8009cda <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x36>
 8009caa:	e8df f001 	tbb	[pc, r1]
 8009cae:	090b      	.short	0x090b
 8009cb0:	0d0d0d07 	.word	0x0d0d0d07
 8009cb4:	1414140d 	.word	0x1414140d
 8009cb8:	1414      	.short	0x1414
 8009cba:	0d          	.byte	0x0d
 8009cbb:	00          	.byte	0x00
 8009cbc:	2020      	movs	r0, #32
 8009cbe:	bd08      	pop	{r3, pc}
 8009cc0:	2018      	movs	r0, #24
 8009cc2:	e7fc      	b.n	8009cbe <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x1a>
 8009cc4:	2010      	movs	r0, #16
 8009cc6:	e7fa      	b.n	8009cbe <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x1a>
 8009cc8:	4b05      	ldr	r3, [pc, #20]	; (8009ce0 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x3c>)
 8009cca:	4a06      	ldr	r2, [pc, #24]	; (8009ce4 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x40>)
 8009ccc:	4806      	ldr	r0, [pc, #24]	; (8009ce8 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x44>)
 8009cce:	f240 212f 	movw	r1, #559	; 0x22f
 8009cd2:	f00f fb9b 	bl	801940c <__assert_func>
 8009cd6:	2008      	movs	r0, #8
 8009cd8:	e7f1      	b.n	8009cbe <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x1a>
 8009cda:	2000      	movs	r0, #0
 8009cdc:	e7ef      	b.n	8009cbe <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x1a>
 8009cde:	bf00      	nop
 8009ce0:	0801bc11 	.word	0x0801bc11
 8009ce4:	0801beef 	.word	0x0801beef
 8009ce8:	0801bb18 	.word	0x0801bb18

08009cec <_ZNK8touchgfx3HAL13getDstAddressEttPttNS_6Bitmap12BitmapFormatE>:
 8009cec:	b570      	push	{r4, r5, r6, lr}
 8009cee:	460d      	mov	r5, r1
 8009cf0:	f89d 1014 	ldrb.w	r1, [sp, #20]
 8009cf4:	4616      	mov	r6, r2
 8009cf6:	461c      	mov	r4, r3
 8009cf8:	f7ff ffd4 	bl	8009ca4 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE>
 8009cfc:	f8bd 1010 	ldrh.w	r1, [sp, #16]
 8009d00:	10c0      	asrs	r0, r0, #3
 8009d02:	fb06 5101 	mla	r1, r6, r1, r5
 8009d06:	fb00 4001 	mla	r0, r0, r1, r4
 8009d0a:	bd70      	pop	{r4, r5, r6, pc}

08009d0c <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_>:
 8009d0c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8009d10:	b08a      	sub	sp, #40	; 0x28
 8009d12:	f04f 0c00 	mov.w	ip, #0
 8009d16:	f89d 8064 	ldrb.w	r8, [sp, #100]	; 0x64
 8009d1a:	f8bd 604c 	ldrh.w	r6, [sp, #76]	; 0x4c
 8009d1e:	f8bd 5050 	ldrh.w	r5, [sp, #80]	; 0x50
 8009d22:	f8bd 9060 	ldrh.w	r9, [sp, #96]	; 0x60
 8009d26:	f89d 7068 	ldrb.w	r7, [sp, #104]	; 0x68
 8009d2a:	f8cd c020 	str.w	ip, [sp, #32]
 8009d2e:	f1b8 0f02 	cmp.w	r8, #2
 8009d32:	4604      	mov	r4, r0
 8009d34:	469a      	mov	sl, r3
 8009d36:	f89d 005c 	ldrb.w	r0, [sp, #92]	; 0x5c
 8009d3a:	f89d 3058 	ldrb.w	r3, [sp, #88]	; 0x58
 8009d3e:	d030      	beq.n	8009da2 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0x96>
 8009d40:	2bff      	cmp	r3, #255	; 0xff
 8009d42:	d12c      	bne.n	8009d9e <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0x92>
 8009d44:	4560      	cmp	r0, ip
 8009d46:	bf14      	ite	ne
 8009d48:	2004      	movne	r0, #4
 8009d4a:	2001      	moveq	r0, #1
 8009d4c:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8009d50:	9204      	str	r2, [sp, #16]
 8009d52:	4620      	mov	r0, r4
 8009d54:	f8bd 2054 	ldrh.w	r2, [sp, #84]	; 0x54
 8009d58:	f8ad 201c 	strh.w	r2, [sp, #28]
 8009d5c:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 8009d60:	f8ad 6018 	strh.w	r6, [sp, #24]
 8009d64:	f8ad 501a 	strh.w	r5, [sp, #26]
 8009d68:	f7ff ff5e 	bl	8009c28 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8009d6c:	e9cd 9700 	strd	r9, r7, [sp]
 8009d70:	4603      	mov	r3, r0
 8009d72:	f8bd 2048 	ldrh.w	r2, [sp, #72]	; 0x48
 8009d76:	4651      	mov	r1, sl
 8009d78:	4620      	mov	r0, r4
 8009d7a:	f7ff ffb7 	bl	8009cec <_ZNK8touchgfx3HAL13getDstAddressEttPttNS_6Bitmap12BitmapFormatE>
 8009d7e:	f8ad 901e 	strh.w	r9, [sp, #30]
 8009d82:	9005      	str	r0, [sp, #20]
 8009d84:	f88d 8025 	strb.w	r8, [sp, #37]	; 0x25
 8009d88:	f88d 7026 	strb.w	r7, [sp, #38]	; 0x26
 8009d8c:	b106      	cbz	r6, 8009d90 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0x84>
 8009d8e:	b98d      	cbnz	r5, 8009db4 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0xa8>
 8009d90:	4b12      	ldr	r3, [pc, #72]	; (8009ddc <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0xd0>)
 8009d92:	4a13      	ldr	r2, [pc, #76]	; (8009de0 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0xd4>)
 8009d94:	f240 11af 	movw	r1, #431	; 0x1af
 8009d98:	4812      	ldr	r0, [pc, #72]	; (8009de4 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0xd8>)
 8009d9a:	f00f fb37 	bl	801940c <__assert_func>
 8009d9e:	2004      	movs	r0, #4
 8009da0:	e7d4      	b.n	8009d4c <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0x40>
 8009da2:	2bff      	cmp	r3, #255	; 0xff
 8009da4:	d104      	bne.n	8009db0 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0xa4>
 8009da6:	2800      	cmp	r0, #0
 8009da8:	bf14      	ite	ne
 8009daa:	2040      	movne	r0, #64	; 0x40
 8009dac:	2020      	moveq	r0, #32
 8009dae:	e7cd      	b.n	8009d4c <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0x40>
 8009db0:	2040      	movs	r0, #64	; 0x40
 8009db2:	e7cb      	b.n	8009d4c <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0x40>
 8009db4:	6823      	ldr	r3, [r4, #0]
 8009db6:	9d02      	ldr	r5, [sp, #8]
 8009db8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8009dba:	4620      	mov	r0, r4
 8009dbc:	4798      	blx	r3
 8009dbe:	4228      	tst	r0, r5
 8009dc0:	d104      	bne.n	8009dcc <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0xc0>
 8009dc2:	4b09      	ldr	r3, [pc, #36]	; (8009de8 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0xdc>)
 8009dc4:	4a06      	ldr	r2, [pc, #24]	; (8009de0 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0xd4>)
 8009dc6:	f44f 71d8 	mov.w	r1, #432	; 0x1b0
 8009dca:	e7e5      	b.n	8009d98 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0x8c>
 8009dcc:	6860      	ldr	r0, [r4, #4]
 8009dce:	6803      	ldr	r3, [r0, #0]
 8009dd0:	a902      	add	r1, sp, #8
 8009dd2:	685b      	ldr	r3, [r3, #4]
 8009dd4:	4798      	blx	r3
 8009dd6:	b00a      	add	sp, #40	; 0x28
 8009dd8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8009ddc:	0801bb94 	.word	0x0801bb94
 8009de0:	0801bd91 	.word	0x0801bd91
 8009de4:	0801bb18 	.word	0x0801bb18
 8009de8:	0801bbcc 	.word	0x0801bbcc

08009dec <_ZN8touchgfx3HAL8blitCopyEPKtttttthbtNS_6Bitmap12BitmapFormatES4_>:
 8009dec:	b510      	push	{r4, lr}
 8009dee:	b08a      	sub	sp, #40	; 0x28
 8009df0:	f89d 404c 	ldrb.w	r4, [sp, #76]	; 0x4c
 8009df4:	9408      	str	r4, [sp, #32]
 8009df6:	f89d 4048 	ldrb.w	r4, [sp, #72]	; 0x48
 8009dfa:	9407      	str	r4, [sp, #28]
 8009dfc:	f8bd 4044 	ldrh.w	r4, [sp, #68]	; 0x44
 8009e00:	9406      	str	r4, [sp, #24]
 8009e02:	f89d 4040 	ldrb.w	r4, [sp, #64]	; 0x40
 8009e06:	9405      	str	r4, [sp, #20]
 8009e08:	f89d 403c 	ldrb.w	r4, [sp, #60]	; 0x3c
 8009e0c:	9404      	str	r4, [sp, #16]
 8009e0e:	f8bd 4038 	ldrh.w	r4, [sp, #56]	; 0x38
 8009e12:	9403      	str	r4, [sp, #12]
 8009e14:	f8bd 4034 	ldrh.w	r4, [sp, #52]	; 0x34
 8009e18:	9402      	str	r4, [sp, #8]
 8009e1a:	f8bd 4030 	ldrh.w	r4, [sp, #48]	; 0x30
 8009e1e:	e9cd 3400 	strd	r3, r4, [sp]
 8009e22:	4613      	mov	r3, r2
 8009e24:	2200      	movs	r2, #0
 8009e26:	f7ff ff71 	bl	8009d0c <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_>
 8009e2a:	b00a      	add	sp, #40	; 0x28
 8009e2c:	bd10      	pop	{r4, pc}
	...

08009e30 <_ZN8touchgfx3HAL8blitCopyEPKtttttthb>:
 8009e30:	b5f0      	push	{r4, r5, r6, r7, lr}
 8009e32:	b08b      	sub	sp, #44	; 0x2c
 8009e34:	4616      	mov	r6, r2
 8009e36:	460d      	mov	r5, r1
 8009e38:	461f      	mov	r7, r3
 8009e3a:	4604      	mov	r4, r0
 8009e3c:	f7f7 fa62 	bl	8001304 <_ZN8touchgfx3HAL3lcdEv>
 8009e40:	6803      	ldr	r3, [r0, #0]
 8009e42:	6a1b      	ldr	r3, [r3, #32]
 8009e44:	4798      	blx	r3
 8009e46:	e9cd 0007 	strd	r0, r0, [sp, #28]
 8009e4a:	4b0d      	ldr	r3, [pc, #52]	; (8009e80 <_ZN8touchgfx3HAL8blitCopyEPKtttttthb+0x50>)
 8009e4c:	881b      	ldrh	r3, [r3, #0]
 8009e4e:	9306      	str	r3, [sp, #24]
 8009e50:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 8009e54:	9305      	str	r3, [sp, #20]
 8009e56:	f89d 304c 	ldrb.w	r3, [sp, #76]	; 0x4c
 8009e5a:	9304      	str	r3, [sp, #16]
 8009e5c:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8009e60:	9303      	str	r3, [sp, #12]
 8009e62:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 8009e66:	9302      	str	r3, [sp, #8]
 8009e68:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 8009e6c:	2200      	movs	r2, #0
 8009e6e:	e9cd 7300 	strd	r7, r3, [sp]
 8009e72:	4629      	mov	r1, r5
 8009e74:	4633      	mov	r3, r6
 8009e76:	4620      	mov	r0, r4
 8009e78:	f7ff ff48 	bl	8009d0c <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_>
 8009e7c:	b00b      	add	sp, #44	; 0x2c
 8009e7e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8009e80:	20012182 	.word	0x20012182

08009e84 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttth>:
 8009e84:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8009e88:	461f      	mov	r7, r3
 8009e8a:	4b14      	ldr	r3, [pc, #80]	; (8009edc <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttth+0x58>)
 8009e8c:	b08a      	sub	sp, #40	; 0x28
 8009e8e:	4616      	mov	r6, r2
 8009e90:	f8b3 8000 	ldrh.w	r8, [r3]
 8009e94:	460d      	mov	r5, r1
 8009e96:	4604      	mov	r4, r0
 8009e98:	f7f7 fa34 	bl	8001304 <_ZN8touchgfx3HAL3lcdEv>
 8009e9c:	6803      	ldr	r3, [r0, #0]
 8009e9e:	6a1b      	ldr	r3, [r3, #32]
 8009ea0:	4798      	blx	r3
 8009ea2:	2302      	movs	r3, #2
 8009ea4:	e9cd 8306 	strd	r8, r3, [sp, #24]
 8009ea8:	2301      	movs	r3, #1
 8009eaa:	9305      	str	r3, [sp, #20]
 8009eac:	f89d 304c 	ldrb.w	r3, [sp, #76]	; 0x4c
 8009eb0:	9304      	str	r3, [sp, #16]
 8009eb2:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8009eb6:	9303      	str	r3, [sp, #12]
 8009eb8:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 8009ebc:	9302      	str	r3, [sp, #8]
 8009ebe:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 8009ec2:	9008      	str	r0, [sp, #32]
 8009ec4:	e9cd 7300 	strd	r7, r3, [sp]
 8009ec8:	2200      	movs	r2, #0
 8009eca:	4633      	mov	r3, r6
 8009ecc:	4629      	mov	r1, r5
 8009ece:	4620      	mov	r0, r4
 8009ed0:	f7ff ff1c 	bl	8009d0c <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_>
 8009ed4:	b00a      	add	sp, #40	; 0x28
 8009ed6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8009eda:	bf00      	nop
 8009edc:	20012182 	.word	0x20012182

08009ee0 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatE>:
 8009ee0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8009ee4:	b08b      	sub	sp, #44	; 0x2c
 8009ee6:	469b      	mov	fp, r3
 8009ee8:	f89d 7058 	ldrb.w	r7, [sp, #88]	; 0x58
 8009eec:	f89d 5060 	ldrb.w	r5, [sp, #96]	; 0x60
 8009ef0:	f8bd 805c 	ldrh.w	r8, [sp, #92]	; 0x5c
 8009ef4:	2fff      	cmp	r7, #255	; 0xff
 8009ef6:	bf14      	ite	ne
 8009ef8:	2308      	movne	r3, #8
 8009efa:	2302      	moveq	r3, #2
 8009efc:	2600      	movs	r6, #0
 8009efe:	4604      	mov	r4, r0
 8009f00:	4689      	mov	r9, r1
 8009f02:	4692      	mov	sl, r2
 8009f04:	e9cd 3602 	strd	r3, r6, [sp, #8]
 8009f08:	9608      	str	r6, [sp, #32]
 8009f0a:	f7ff fe8d 	bl	8009c28 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8009f0e:	e9cd 8500 	strd	r8, r5, [sp]
 8009f12:	4603      	mov	r3, r0
 8009f14:	465a      	mov	r2, fp
 8009f16:	4651      	mov	r1, sl
 8009f18:	4620      	mov	r0, r4
 8009f1a:	f7ff fee7 	bl	8009cec <_ZNK8touchgfx3HAL13getDstAddressEttPttNS_6Bitmap12BitmapFormatE>
 8009f1e:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 8009f22:	f8ad 3018 	strh.w	r3, [sp, #24]
 8009f26:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 8009f2a:	f8ad 301a 	strh.w	r3, [sp, #26]
 8009f2e:	6823      	ldr	r3, [r4, #0]
 8009f30:	9005      	str	r0, [sp, #20]
 8009f32:	f88d 5025 	strb.w	r5, [sp, #37]	; 0x25
 8009f36:	f88d 5026 	strb.w	r5, [sp, #38]	; 0x26
 8009f3a:	f8ad 601c 	strh.w	r6, [sp, #28]
 8009f3e:	f8ad 801e 	strh.w	r8, [sp, #30]
 8009f42:	f8cd 9020 	str.w	r9, [sp, #32]
 8009f46:	f88d 7024 	strb.w	r7, [sp, #36]	; 0x24
 8009f4a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8009f4c:	9d02      	ldr	r5, [sp, #8]
 8009f4e:	4620      	mov	r0, r4
 8009f50:	4798      	blx	r3
 8009f52:	4228      	tst	r0, r5
 8009f54:	d106      	bne.n	8009f64 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatE+0x84>
 8009f56:	4b07      	ldr	r3, [pc, #28]	; (8009f74 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatE+0x94>)
 8009f58:	4a07      	ldr	r2, [pc, #28]	; (8009f78 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatE+0x98>)
 8009f5a:	4808      	ldr	r0, [pc, #32]	; (8009f7c <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatE+0x9c>)
 8009f5c:	f240 11e7 	movw	r1, #487	; 0x1e7
 8009f60:	f00f fa54 	bl	801940c <__assert_func>
 8009f64:	6860      	ldr	r0, [r4, #4]
 8009f66:	6803      	ldr	r3, [r0, #0]
 8009f68:	a902      	add	r1, sp, #8
 8009f6a:	685b      	ldr	r3, [r3, #4]
 8009f6c:	4798      	blx	r3
 8009f6e:	b00b      	add	sp, #44	; 0x2c
 8009f70:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8009f74:	0801bbcc 	.word	0x0801bbcc
 8009f78:	0801be5a 	.word	0x0801be5a
 8009f7c:	0801bb18 	.word	0x0801bb18

08009f80 <_ZNK8touchgfx3HAL13getDstAddressEttPt>:
 8009f80:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8009f84:	461f      	mov	r7, r3
 8009f86:	4b0b      	ldr	r3, [pc, #44]	; (8009fb4 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x34>)
 8009f88:	460d      	mov	r5, r1
 8009f8a:	f8b3 8000 	ldrh.w	r8, [r3]
 8009f8e:	4616      	mov	r6, r2
 8009f90:	4604      	mov	r4, r0
 8009f92:	f7f7 f9b7 	bl	8001304 <_ZN8touchgfx3HAL3lcdEv>
 8009f96:	6803      	ldr	r3, [r0, #0]
 8009f98:	6a1b      	ldr	r3, [r3, #32]
 8009f9a:	4798      	blx	r3
 8009f9c:	463b      	mov	r3, r7
 8009f9e:	e9cd 8000 	strd	r8, r0, [sp]
 8009fa2:	4632      	mov	r2, r6
 8009fa4:	4629      	mov	r1, r5
 8009fa6:	4620      	mov	r0, r4
 8009fa8:	f7ff fea0 	bl	8009cec <_ZNK8touchgfx3HAL13getDstAddressEttPttNS_6Bitmap12BitmapFormatE>
 8009fac:	b002      	add	sp, #8
 8009fae:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8009fb2:	bf00      	nop
 8009fb4:	20012182 	.word	0x20012182

08009fb8 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE>:
 8009fb8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8009fbc:	b088      	sub	sp, #32
 8009fbe:	4698      	mov	r8, r3
 8009fc0:	2300      	movs	r3, #0
 8009fc2:	9306      	str	r3, [sp, #24]
 8009fc4:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 8009fc8:	f8bd 6038 	ldrh.w	r6, [sp, #56]	; 0x38
 8009fcc:	f8bd 503c 	ldrh.w	r5, [sp, #60]	; 0x3c
 8009fd0:	f8ad 6010 	strh.w	r6, [sp, #16]
 8009fd4:	e9cd 3100 	strd	r3, r1, [sp]
 8009fd8:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 8009fdc:	f8ad 3014 	strh.w	r3, [sp, #20]
 8009fe0:	f89d 3048 	ldrb.w	r3, [sp, #72]	; 0x48
 8009fe4:	f88d 301c 	strb.w	r3, [sp, #28]
 8009fe8:	4617      	mov	r7, r2
 8009fea:	4604      	mov	r4, r0
 8009fec:	f8ad 5012 	strh.w	r5, [sp, #18]
 8009ff0:	f7ff fe1a 	bl	8009c28 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8009ff4:	4642      	mov	r2, r8
 8009ff6:	4603      	mov	r3, r0
 8009ff8:	4639      	mov	r1, r7
 8009ffa:	4620      	mov	r0, r4
 8009ffc:	f7ff ffc0 	bl	8009f80 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800a000:	4b16      	ldr	r3, [pc, #88]	; (800a05c <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0xa4>)
 800a002:	9003      	str	r0, [sp, #12]
 800a004:	881b      	ldrh	r3, [r3, #0]
 800a006:	f8ad 3016 	strh.w	r3, [sp, #22]
 800a00a:	f7f7 f97b 	bl	8001304 <_ZN8touchgfx3HAL3lcdEv>
 800a00e:	6803      	ldr	r3, [r0, #0]
 800a010:	6a1b      	ldr	r3, [r3, #32]
 800a012:	4798      	blx	r3
 800a014:	f88d 001e 	strb.w	r0, [sp, #30]
 800a018:	f88d 001d 	strb.w	r0, [sp, #29]
 800a01c:	b106      	cbz	r6, 800a020 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0x68>
 800a01e:	b935      	cbnz	r5, 800a02e <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0x76>
 800a020:	4b0f      	ldr	r3, [pc, #60]	; (800a060 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0xa8>)
 800a022:	4a10      	ldr	r2, [pc, #64]	; (800a064 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0xac>)
 800a024:	f44f 71e6 	mov.w	r1, #460	; 0x1cc
 800a028:	480f      	ldr	r0, [pc, #60]	; (800a068 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0xb0>)
 800a02a:	f00f f9ef 	bl	801940c <__assert_func>
 800a02e:	6823      	ldr	r3, [r4, #0]
 800a030:	9d00      	ldr	r5, [sp, #0]
 800a032:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800a034:	4620      	mov	r0, r4
 800a036:	4798      	blx	r3
 800a038:	4228      	tst	r0, r5
 800a03a:	d104      	bne.n	800a046 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0x8e>
 800a03c:	4b0b      	ldr	r3, [pc, #44]	; (800a06c <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0xb4>)
 800a03e:	4a09      	ldr	r2, [pc, #36]	; (800a064 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0xac>)
 800a040:	f240 11cd 	movw	r1, #461	; 0x1cd
 800a044:	e7f0      	b.n	800a028 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0x70>
 800a046:	9b11      	ldr	r3, [sp, #68]	; 0x44
 800a048:	6860      	ldr	r0, [r4, #4]
 800a04a:	9306      	str	r3, [sp, #24]
 800a04c:	6803      	ldr	r3, [r0, #0]
 800a04e:	4669      	mov	r1, sp
 800a050:	685b      	ldr	r3, [r3, #4]
 800a052:	4798      	blx	r3
 800a054:	b008      	add	sp, #32
 800a056:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800a05a:	bf00      	nop
 800a05c:	20012182 	.word	0x20012182
 800a060:	0801bb94 	.word	0x0801bb94
 800a064:	0801bc43 	.word	0x0801bc43
 800a068:	0801bb18 	.word	0x0801bb18
 800a06c:	0801bbcc 	.word	0x0801bbcc

0800a070 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE>:
 800a070:	b570      	push	{r4, r5, r6, lr}
 800a072:	b08a      	sub	sp, #40	; 0x28
 800a074:	466b      	mov	r3, sp
 800a076:	e883 0006 	stmia.w	r3, {r1, r2}
 800a07a:	4b20      	ldr	r3, [pc, #128]	; (800a0fc <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x8c>)
 800a07c:	781b      	ldrb	r3, [r3, #0]
 800a07e:	4604      	mov	r4, r0
 800a080:	b933      	cbnz	r3, 800a090 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x20>
 800a082:	4b1f      	ldr	r3, [pc, #124]	; (800a100 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x90>)
 800a084:	4a1f      	ldr	r2, [pc, #124]	; (800a104 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x94>)
 800a086:	4820      	ldr	r0, [pc, #128]	; (800a108 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x98>)
 800a088:	f44f 71fc 	mov.w	r1, #504	; 0x1f8
 800a08c:	f00f f9be 	bl	801940c <__assert_func>
 800a090:	2300      	movs	r3, #0
 800a092:	9308      	str	r3, [sp, #32]
 800a094:	2301      	movs	r3, #1
 800a096:	9302      	str	r3, [sp, #8]
 800a098:	6803      	ldr	r3, [r0, #0]
 800a09a:	f8bd 5000 	ldrh.w	r5, [sp]
 800a09e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800a0a0:	f8bd 6002 	ldrh.w	r6, [sp, #2]
 800a0a4:	4798      	blx	r3
 800a0a6:	4632      	mov	r2, r6
 800a0a8:	4629      	mov	r1, r5
 800a0aa:	4603      	mov	r3, r0
 800a0ac:	4620      	mov	r0, r4
 800a0ae:	f7ff ff67 	bl	8009f80 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800a0b2:	6c63      	ldr	r3, [r4, #68]	; 0x44
 800a0b4:	9305      	str	r3, [sp, #20]
 800a0b6:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800a0ba:	f8ad 3018 	strh.w	r3, [sp, #24]
 800a0be:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 800a0c2:	f8ad 301a 	strh.w	r3, [sp, #26]
 800a0c6:	4b11      	ldr	r3, [pc, #68]	; (800a10c <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x9c>)
 800a0c8:	9003      	str	r0, [sp, #12]
 800a0ca:	881b      	ldrh	r3, [r3, #0]
 800a0cc:	f8ad 301c 	strh.w	r3, [sp, #28]
 800a0d0:	f8ad 301e 	strh.w	r3, [sp, #30]
 800a0d4:	f7f7 f916 	bl	8001304 <_ZN8touchgfx3HAL3lcdEv>
 800a0d8:	6803      	ldr	r3, [r0, #0]
 800a0da:	6a1b      	ldr	r3, [r3, #32]
 800a0dc:	4798      	blx	r3
 800a0de:	23ff      	movs	r3, #255	; 0xff
 800a0e0:	f88d 0025 	strb.w	r0, [sp, #37]	; 0x25
 800a0e4:	f88d 0026 	strb.w	r0, [sp, #38]	; 0x26
 800a0e8:	6860      	ldr	r0, [r4, #4]
 800a0ea:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 800a0ee:	6803      	ldr	r3, [r0, #0]
 800a0f0:	a902      	add	r1, sp, #8
 800a0f2:	685b      	ldr	r3, [r3, #4]
 800a0f4:	4798      	blx	r3
 800a0f6:	6c60      	ldr	r0, [r4, #68]	; 0x44
 800a0f8:	b00a      	add	sp, #40	; 0x28
 800a0fa:	bd70      	pop	{r4, r5, r6, pc}
 800a0fc:	20012187 	.word	0x20012187
 800a100:	0801ba65 	.word	0x0801ba65
 800a104:	0801bce7 	.word	0x0801bce7
 800a108:	0801bb18 	.word	0x0801bb18
 800a10c:	20012182 	.word	0x20012182

0800a110 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm>:
 800a110:	b5f0      	push	{r4, r5, r6, r7, lr}
 800a112:	b08b      	sub	sp, #44	; 0x2c
 800a114:	466d      	mov	r5, sp
 800a116:	e885 0006 	stmia.w	r5, {r1, r2}
 800a11a:	461d      	mov	r5, r3
 800a11c:	2300      	movs	r3, #0
 800a11e:	9308      	str	r3, [sp, #32]
 800a120:	2301      	movs	r3, #1
 800a122:	9302      	str	r3, [sp, #8]
 800a124:	6803      	ldr	r3, [r0, #0]
 800a126:	f8bd 6000 	ldrh.w	r6, [sp]
 800a12a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800a12c:	f8bd 7002 	ldrh.w	r7, [sp, #2]
 800a130:	4604      	mov	r4, r0
 800a132:	4798      	blx	r3
 800a134:	463a      	mov	r2, r7
 800a136:	4631      	mov	r1, r6
 800a138:	4603      	mov	r3, r0
 800a13a:	4620      	mov	r0, r4
 800a13c:	f7ff ff20 	bl	8009f80 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800a140:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800a144:	f8ad 3018 	strh.w	r3, [sp, #24]
 800a148:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 800a14c:	f8ad 301a 	strh.w	r3, [sp, #26]
 800a150:	4b0e      	ldr	r3, [pc, #56]	; (800a18c <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm+0x7c>)
 800a152:	9003      	str	r0, [sp, #12]
 800a154:	881b      	ldrh	r3, [r3, #0]
 800a156:	f8ad 301c 	strh.w	r3, [sp, #28]
 800a15a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800a15c:	f8ad 301e 	strh.w	r3, [sp, #30]
 800a160:	9505      	str	r5, [sp, #20]
 800a162:	f7f7 f8cf 	bl	8001304 <_ZN8touchgfx3HAL3lcdEv>
 800a166:	6803      	ldr	r3, [r0, #0]
 800a168:	6a1b      	ldr	r3, [r3, #32]
 800a16a:	4798      	blx	r3
 800a16c:	23ff      	movs	r3, #255	; 0xff
 800a16e:	f88d 0025 	strb.w	r0, [sp, #37]	; 0x25
 800a172:	f88d 0026 	strb.w	r0, [sp, #38]	; 0x26
 800a176:	6860      	ldr	r0, [r4, #4]
 800a178:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 800a17c:	6803      	ldr	r3, [r0, #0]
 800a17e:	a902      	add	r1, sp, #8
 800a180:	685b      	ldr	r3, [r3, #4]
 800a182:	4798      	blx	r3
 800a184:	4628      	mov	r0, r5
 800a186:	b00b      	add	sp, #44	; 0x2c
 800a188:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800a18a:	bf00      	nop
 800a18c:	20012182 	.word	0x20012182

0800a190 <_ZN8touchgfx3HAL16swapFrameBuffersEv>:
 800a190:	b570      	push	{r4, r5, r6, lr}
 800a192:	f890 306a 	ldrb.w	r3, [r0, #106]	; 0x6a
 800a196:	4604      	mov	r4, r0
 800a198:	b19b      	cbz	r3, 800a1c2 <_ZN8touchgfx3HAL16swapFrameBuffersEv+0x32>
 800a19a:	2002      	movs	r0, #2
 800a19c:	f7f6 fec4 	bl	8000f28 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>
 800a1a0:	2300      	movs	r3, #0
 800a1a2:	f884 306a 	strb.w	r3, [r4, #106]	; 0x6a
 800a1a6:	f884 3069 	strb.w	r3, [r4, #105]	; 0x69
 800a1aa:	6823      	ldr	r3, [r4, #0]
 800a1ac:	4620      	mov	r0, r4
 800a1ae:	f8d3 50a0 	ldr.w	r5, [r3, #160]	; 0xa0
 800a1b2:	f7ff fd39 	bl	8009c28 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800a1b6:	462b      	mov	r3, r5
 800a1b8:	4601      	mov	r1, r0
 800a1ba:	4620      	mov	r0, r4
 800a1bc:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800a1c0:	4718      	bx	r3
 800a1c2:	bd70      	pop	{r4, r5, r6, pc}

0800a1c4 <_ZN8touchgfx17LockFreeDMA_Queue7isEmptyEv>:
 800a1c4:	e9d0 2003 	ldrd	r2, r0, [r0, #12]
 800a1c8:	1a13      	subs	r3, r2, r0
 800a1ca:	4258      	negs	r0, r3
 800a1cc:	4158      	adcs	r0, r3
 800a1ce:	4770      	bx	lr

0800a1d0 <_ZN8touchgfx17LockFreeDMA_Queue6isFullEv>:
 800a1d0:	e9d0 2303 	ldrd	r2, r3, [r0, #12]
 800a1d4:	1a9b      	subs	r3, r3, r2
 800a1d6:	2b00      	cmp	r3, #0
 800a1d8:	bfdc      	itt	le
 800a1da:	6882      	ldrle	r2, [r0, #8]
 800a1dc:	189b      	addle	r3, r3, r2
 800a1de:	2b01      	cmp	r3, #1
 800a1e0:	bfcc      	ite	gt
 800a1e2:	2000      	movgt	r0, #0
 800a1e4:	2001      	movle	r0, #1
 800a1e6:	4770      	bx	lr

0800a1e8 <_ZN8touchgfx17LockFreeDMA_Queue5firstEv>:
 800a1e8:	6902      	ldr	r2, [r0, #16]
 800a1ea:	6840      	ldr	r0, [r0, #4]
 800a1ec:	eb00 1042 	add.w	r0, r0, r2, lsl #5
 800a1f0:	4770      	bx	lr

0800a1f2 <_ZN8touchgfx13DMA_Interface13seedExecutionEv>:
 800a1f2:	6803      	ldr	r3, [r0, #0]
 800a1f4:	691b      	ldr	r3, [r3, #16]
 800a1f6:	4718      	bx	r3

0800a1f8 <_ZN8touchgfx13DMA_Interface11enableAlphaEh>:
 800a1f8:	4770      	bx	lr

0800a1fa <_ZN8touchgfx13DMA_Interface12disableAlphaEv>:
 800a1fa:	4770      	bx	lr

0800a1fc <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>:
 800a1fc:	4770      	bx	lr
	...

0800a200 <_ZN8touchgfx13DMA_Interface7executeEv>:
 800a200:	b570      	push	{r4, r5, r6, lr}
 800a202:	2301      	movs	r3, #1
 800a204:	7203      	strb	r3, [r0, #8]
 800a206:	4604      	mov	r4, r0
 800a208:	6840      	ldr	r0, [r0, #4]
 800a20a:	6803      	ldr	r3, [r0, #0]
 800a20c:	699b      	ldr	r3, [r3, #24]
 800a20e:	4798      	blx	r3
 800a210:	6803      	ldr	r3, [r0, #0]
 800a212:	2b08      	cmp	r3, #8
 800a214:	4605      	mov	r5, r0
 800a216:	d01e      	beq.n	800a256 <_ZN8touchgfx13DMA_Interface7executeEv+0x56>
 800a218:	d80b      	bhi.n	800a232 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800a21a:	2b02      	cmp	r3, #2
 800a21c:	d027      	beq.n	800a26e <_ZN8touchgfx13DMA_Interface7executeEv+0x6e>
 800a21e:	2b04      	cmp	r3, #4
 800a220:	d011      	beq.n	800a246 <_ZN8touchgfx13DMA_Interface7executeEv+0x46>
 800a222:	2b01      	cmp	r3, #1
 800a224:	d028      	beq.n	800a278 <_ZN8touchgfx13DMA_Interface7executeEv+0x78>
 800a226:	4b17      	ldr	r3, [pc, #92]	; (800a284 <_ZN8touchgfx13DMA_Interface7executeEv+0x84>)
 800a228:	4a17      	ldr	r2, [pc, #92]	; (800a288 <_ZN8touchgfx13DMA_Interface7executeEv+0x88>)
 800a22a:	4818      	ldr	r0, [pc, #96]	; (800a28c <_ZN8touchgfx13DMA_Interface7executeEv+0x8c>)
 800a22c:	218b      	movs	r1, #139	; 0x8b
 800a22e:	f00f f8ed 	bl	801940c <__assert_func>
 800a232:	2b40      	cmp	r3, #64	; 0x40
 800a234:	d020      	beq.n	800a278 <_ZN8touchgfx13DMA_Interface7executeEv+0x78>
 800a236:	d801      	bhi.n	800a23c <_ZN8touchgfx13DMA_Interface7executeEv+0x3c>
 800a238:	2b20      	cmp	r3, #32
 800a23a:	e7f3      	b.n	800a224 <_ZN8touchgfx13DMA_Interface7executeEv+0x24>
 800a23c:	2b80      	cmp	r3, #128	; 0x80
 800a23e:	d01b      	beq.n	800a278 <_ZN8touchgfx13DMA_Interface7executeEv+0x78>
 800a240:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 800a244:	e7ee      	b.n	800a224 <_ZN8touchgfx13DMA_Interface7executeEv+0x24>
 800a246:	6823      	ldr	r3, [r4, #0]
 800a248:	7f01      	ldrb	r1, [r0, #28]
 800a24a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800a24c:	4620      	mov	r0, r4
 800a24e:	4798      	blx	r3
 800a250:	6823      	ldr	r3, [r4, #0]
 800a252:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800a254:	e006      	b.n	800a264 <_ZN8touchgfx13DMA_Interface7executeEv+0x64>
 800a256:	6823      	ldr	r3, [r4, #0]
 800a258:	7f01      	ldrb	r1, [r0, #28]
 800a25a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800a25c:	4620      	mov	r0, r4
 800a25e:	4798      	blx	r3
 800a260:	6823      	ldr	r3, [r4, #0]
 800a262:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800a264:	4629      	mov	r1, r5
 800a266:	4620      	mov	r0, r4
 800a268:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800a26c:	4718      	bx	r3
 800a26e:	6823      	ldr	r3, [r4, #0]
 800a270:	4620      	mov	r0, r4
 800a272:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800a274:	4798      	blx	r3
 800a276:	e7f3      	b.n	800a260 <_ZN8touchgfx13DMA_Interface7executeEv+0x60>
 800a278:	6823      	ldr	r3, [r4, #0]
 800a27a:	4620      	mov	r0, r4
 800a27c:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800a27e:	4798      	blx	r3
 800a280:	e7e6      	b.n	800a250 <_ZN8touchgfx13DMA_Interface7executeEv+0x50>
 800a282:	bf00      	nop
 800a284:	0801bf38 	.word	0x0801bf38
 800a288:	0801bff8 	.word	0x0801bff8
 800a28c:	0801bf5d 	.word	0x0801bf5d

0800a290 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE>:
 800a290:	b570      	push	{r4, r5, r6, lr}
 800a292:	4604      	mov	r4, r0
 800a294:	460e      	mov	r6, r1
 800a296:	6860      	ldr	r0, [r4, #4]
 800a298:	6803      	ldr	r3, [r0, #0]
 800a29a:	685b      	ldr	r3, [r3, #4]
 800a29c:	4798      	blx	r3
 800a29e:	2800      	cmp	r0, #0
 800a2a0:	d1f9      	bne.n	800a296 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x6>
 800a2a2:	4d0b      	ldr	r5, [pc, #44]	; (800a2d0 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x40>)
 800a2a4:	6828      	ldr	r0, [r5, #0]
 800a2a6:	6803      	ldr	r3, [r0, #0]
 800a2a8:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 800a2aa:	4798      	blx	r3
 800a2ac:	f7f6 ff7a 	bl	80011a4 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>
 800a2b0:	6860      	ldr	r0, [r4, #4]
 800a2b2:	6803      	ldr	r3, [r0, #0]
 800a2b4:	4631      	mov	r1, r6
 800a2b6:	689b      	ldr	r3, [r3, #8]
 800a2b8:	4798      	blx	r3
 800a2ba:	6823      	ldr	r3, [r4, #0]
 800a2bc:	4620      	mov	r0, r4
 800a2be:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a2c0:	4798      	blx	r3
 800a2c2:	6828      	ldr	r0, [r5, #0]
 800a2c4:	6803      	ldr	r3, [r0, #0]
 800a2c6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800a2ca:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 800a2cc:	4718      	bx	r3
 800a2ce:	bf00      	nop
 800a2d0:	20012188 	.word	0x20012188

0800a2d4 <_ZN8touchgfx13DMA_Interface27waitForFrameBufferSemaphoreEv>:
 800a2d4:	b508      	push	{r3, lr}
 800a2d6:	f7f6 ff37 	bl	8001148 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 800a2da:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800a2de:	f7f6 bf4b 	b.w	8001178 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

0800a2e2 <_ZN8touchgfx17LockFreeDMA_QueueD0Ev>:
 800a2e2:	b510      	push	{r4, lr}
 800a2e4:	2114      	movs	r1, #20
 800a2e6:	4604      	mov	r4, r0
 800a2e8:	f00f f864 	bl	80193b4 <_ZdlPvj>
 800a2ec:	4620      	mov	r0, r4
 800a2ee:	bd10      	pop	{r4, pc}

0800a2f0 <_ZN8touchgfx13DMA_Interface5startEv>:
 800a2f0:	b510      	push	{r4, lr}
 800a2f2:	4604      	mov	r4, r0
 800a2f4:	6840      	ldr	r0, [r0, #4]
 800a2f6:	6803      	ldr	r3, [r0, #0]
 800a2f8:	681b      	ldr	r3, [r3, #0]
 800a2fa:	4798      	blx	r3
 800a2fc:	b948      	cbnz	r0, 800a312 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800a2fe:	7a63      	ldrb	r3, [r4, #9]
 800a300:	b13b      	cbz	r3, 800a312 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800a302:	7a23      	ldrb	r3, [r4, #8]
 800a304:	b92b      	cbnz	r3, 800a312 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800a306:	6823      	ldr	r3, [r4, #0]
 800a308:	4620      	mov	r0, r4
 800a30a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800a30c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800a310:	4718      	bx	r3
 800a312:	bd10      	pop	{r4, pc}

0800a314 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE>:
 800a314:	b510      	push	{r4, lr}
 800a316:	e9d0 4203 	ldrd	r4, r2, [r0, #12]
 800a31a:	1b12      	subs	r2, r2, r4
 800a31c:	2a00      	cmp	r2, #0
 800a31e:	bfdc      	itt	le
 800a320:	6883      	ldrle	r3, [r0, #8]
 800a322:	18d2      	addle	r2, r2, r3
 800a324:	2a01      	cmp	r2, #1
 800a326:	dd18      	ble.n	800a35a <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x46>
 800a328:	6843      	ldr	r3, [r0, #4]
 800a32a:	f101 021c 	add.w	r2, r1, #28
 800a32e:	eb03 1344 	add.w	r3, r3, r4, lsl #5
 800a332:	f851 4b04 	ldr.w	r4, [r1], #4
 800a336:	f843 4b04 	str.w	r4, [r3], #4
 800a33a:	4291      	cmp	r1, r2
 800a33c:	d1f9      	bne.n	800a332 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x1e>
 800a33e:	880a      	ldrh	r2, [r1, #0]
 800a340:	801a      	strh	r2, [r3, #0]
 800a342:	788a      	ldrb	r2, [r1, #2]
 800a344:	709a      	strb	r2, [r3, #2]
 800a346:	68c3      	ldr	r3, [r0, #12]
 800a348:	6882      	ldr	r2, [r0, #8]
 800a34a:	f3bf 8f5b 	dmb	ish
 800a34e:	3301      	adds	r3, #1
 800a350:	429a      	cmp	r2, r3
 800a352:	bfd8      	it	le
 800a354:	1a9b      	suble	r3, r3, r2
 800a356:	60c3      	str	r3, [r0, #12]
 800a358:	bd10      	pop	{r4, pc}
 800a35a:	4b03      	ldr	r3, [pc, #12]	; (800a368 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x54>)
 800a35c:	4a03      	ldr	r2, [pc, #12]	; (800a36c <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x58>)
 800a35e:	4804      	ldr	r0, [pc, #16]	; (800a370 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x5c>)
 800a360:	2139      	movs	r1, #57	; 0x39
 800a362:	f00f f853 	bl	801940c <__assert_func>
 800a366:	bf00      	nop
 800a368:	0801bf83 	.word	0x0801bf83
 800a36c:	0801c028 	.word	0x0801c028
 800a370:	0801bf5d 	.word	0x0801bf5d

0800a374 <_ZN8touchgfx17LockFreeDMA_Queue3popEv>:
 800a374:	b510      	push	{r4, lr}
 800a376:	6803      	ldr	r3, [r0, #0]
 800a378:	681b      	ldr	r3, [r3, #0]
 800a37a:	4604      	mov	r4, r0
 800a37c:	4798      	blx	r3
 800a37e:	b128      	cbz	r0, 800a38c <_ZN8touchgfx17LockFreeDMA_Queue3popEv+0x18>
 800a380:	4b07      	ldr	r3, [pc, #28]	; (800a3a0 <_ZN8touchgfx17LockFreeDMA_Queue3popEv+0x2c>)
 800a382:	4a08      	ldr	r2, [pc, #32]	; (800a3a4 <_ZN8touchgfx17LockFreeDMA_Queue3popEv+0x30>)
 800a384:	4808      	ldr	r0, [pc, #32]	; (800a3a8 <_ZN8touchgfx17LockFreeDMA_Queue3popEv+0x34>)
 800a386:	213f      	movs	r1, #63	; 0x3f
 800a388:	f00f f840 	bl	801940c <__assert_func>
 800a38c:	6923      	ldr	r3, [r4, #16]
 800a38e:	68a2      	ldr	r2, [r4, #8]
 800a390:	f3bf 8f5b 	dmb	ish
 800a394:	3301      	adds	r3, #1
 800a396:	429a      	cmp	r2, r3
 800a398:	bfd8      	it	le
 800a39a:	1a9b      	suble	r3, r3, r2
 800a39c:	6123      	str	r3, [r4, #16]
 800a39e:	bd10      	pop	{r4, pc}
 800a3a0:	0801bfa6 	.word	0x0801bfa6
 800a3a4:	0801c076 	.word	0x0801c076
 800a3a8:	0801bf5d 	.word	0x0801bf5d

0800a3ac <_ZN8touchgfx13DMA_Interface16executeCompletedEv>:
 800a3ac:	b570      	push	{r4, r5, r6, lr}
 800a3ae:	4604      	mov	r4, r0
 800a3b0:	6840      	ldr	r0, [r0, #4]
 800a3b2:	6803      	ldr	r3, [r0, #0]
 800a3b4:	681b      	ldr	r3, [r3, #0]
 800a3b6:	4798      	blx	r3
 800a3b8:	4605      	mov	r5, r0
 800a3ba:	b930      	cbnz	r0, 800a3ca <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 800a3bc:	7a23      	ldrb	r3, [r4, #8]
 800a3be:	b123      	cbz	r3, 800a3ca <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 800a3c0:	6860      	ldr	r0, [r4, #4]
 800a3c2:	6803      	ldr	r3, [r0, #0]
 800a3c4:	695b      	ldr	r3, [r3, #20]
 800a3c6:	4798      	blx	r3
 800a3c8:	7225      	strb	r5, [r4, #8]
 800a3ca:	6860      	ldr	r0, [r4, #4]
 800a3cc:	6803      	ldr	r3, [r0, #0]
 800a3ce:	681b      	ldr	r3, [r3, #0]
 800a3d0:	4798      	blx	r3
 800a3d2:	b928      	cbnz	r0, 800a3e0 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x34>
 800a3d4:	6823      	ldr	r3, [r4, #0]
 800a3d6:	4620      	mov	r0, r4
 800a3d8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800a3da:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800a3de:	4718      	bx	r3
 800a3e0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800a3e4:	f7f6 bef6 	b.w	80011d4 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>

0800a3e8 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>:
 800a3e8:	b510      	push	{r4, lr}
 800a3ea:	4c04      	ldr	r4, [pc, #16]	; (800a3fc <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi+0x14>)
 800a3ec:	6082      	str	r2, [r0, #8]
 800a3ee:	2200      	movs	r2, #0
 800a3f0:	e9c0 4100 	strd	r4, r1, [r0]
 800a3f4:	e9c0 2203 	strd	r2, r2, [r0, #12]
 800a3f8:	bd10      	pop	{r4, pc}
 800a3fa:	bf00      	nop
 800a3fc:	0801bfdc 	.word	0x0801bfdc

0800a400 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>:
 800a400:	6840      	ldr	r0, [r0, #4]
 800a402:	6803      	ldr	r3, [r0, #0]
 800a404:	681b      	ldr	r3, [r3, #0]
 800a406:	4718      	bx	r3

0800a408 <_ZNK8touchgfx14AbstractButton15getPressedStateEv>:
 800a408:	f890 002c 	ldrb.w	r0, [r0, #44]	; 0x2c
 800a40c:	4770      	bx	lr

0800a40e <_ZN8touchgfx12ToggleButtonD1Ev>:
 800a40e:	4770      	bx	lr

0800a410 <_ZN8touchgfx12ToggleButton16handleClickEventERKNS_10ClickEventE>:
 800a410:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 800a414:	b133      	cbz	r3, 800a424 <_ZN8touchgfx12ToggleButton16handleClickEventERKNS_10ClickEventE+0x14>
 800a416:	790b      	ldrb	r3, [r1, #4]
 800a418:	2b01      	cmp	r3, #1
 800a41a:	bf01      	itttt	eq
 800a41c:	8dc3      	ldrheq	r3, [r0, #46]	; 0x2e
 800a41e:	8e02      	ldrheq	r2, [r0, #48]	; 0x30
 800a420:	85c2      	strheq	r2, [r0, #46]	; 0x2e
 800a422:	8603      	strheq	r3, [r0, #48]	; 0x30
 800a424:	f00e bf98 	b.w	8019358 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE>

0800a428 <_ZN8touchgfx12ToggleButton10setBitmapsERKNS_6BitmapES3_>:
 800a428:	8813      	ldrh	r3, [r2, #0]
 800a42a:	8683      	strh	r3, [r0, #52]	; 0x34
 800a42c:	f000 ba3a 	b.w	800a8a4 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>

0800a430 <_ZN8touchgfx12ToggleButtonD0Ev>:
 800a430:	b510      	push	{r4, lr}
 800a432:	2138      	movs	r1, #56	; 0x38
 800a434:	4604      	mov	r4, r0
 800a436:	f00e ffbd 	bl	80193b4 <_ZdlPvj>
 800a43a:	4620      	mov	r0, r4
 800a43c:	bd10      	pop	{r4, pc}

0800a43e <_ZNK8touchgfx8TextArea12getSolidRectEv>:
 800a43e:	2200      	movs	r2, #0
 800a440:	8002      	strh	r2, [r0, #0]
 800a442:	8042      	strh	r2, [r0, #2]
 800a444:	8082      	strh	r2, [r0, #4]
 800a446:	80c2      	strh	r2, [r0, #6]
 800a448:	4770      	bx	lr

0800a44a <_ZN8touchgfx8TextArea13setXBaselineYEss>:
 800a44a:	b570      	push	{r4, r5, r6, lr}
 800a44c:	6803      	ldr	r3, [r0, #0]
 800a44e:	4604      	mov	r4, r0
 800a450:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a452:	4615      	mov	r5, r2
 800a454:	4798      	blx	r3
 800a456:	6823      	ldr	r3, [r4, #0]
 800a458:	4629      	mov	r1, r5
 800a45a:	4620      	mov	r0, r4
 800a45c:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 800a45e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800a462:	4718      	bx	r3

0800a464 <_ZN8touchgfx8TextAreaD1Ev>:
 800a464:	4770      	bx	lr
	...

0800a468 <_ZNK8touchgfx8TextArea12getTextWidthEv>:
 800a468:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800a46a:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 800a46c:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800a470:	4299      	cmp	r1, r3
 800a472:	d029      	beq.n	800a4c8 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x60>
 800a474:	4b15      	ldr	r3, [pc, #84]	; (800a4cc <_ZNK8touchgfx8TextArea12getTextWidthEv+0x64>)
 800a476:	681b      	ldr	r3, [r3, #0]
 800a478:	b92b      	cbnz	r3, 800a486 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x1e>
 800a47a:	4b15      	ldr	r3, [pc, #84]	; (800a4d0 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x68>)
 800a47c:	4a15      	ldr	r2, [pc, #84]	; (800a4d4 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x6c>)
 800a47e:	21b1      	movs	r1, #177	; 0xb1
 800a480:	4815      	ldr	r0, [pc, #84]	; (800a4d8 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x70>)
 800a482:	f00e ffc3 	bl	801940c <__assert_func>
 800a486:	4a15      	ldr	r2, [pc, #84]	; (800a4dc <_ZNK8touchgfx8TextArea12getTextWidthEv+0x74>)
 800a488:	8812      	ldrh	r2, [r2, #0]
 800a48a:	428a      	cmp	r2, r1
 800a48c:	d803      	bhi.n	800a496 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x2e>
 800a48e:	4b14      	ldr	r3, [pc, #80]	; (800a4e0 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x78>)
 800a490:	4a10      	ldr	r2, [pc, #64]	; (800a4d4 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x6c>)
 800a492:	21b2      	movs	r1, #178	; 0xb2
 800a494:	e7f4      	b.n	800a480 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x18>
 800a496:	eb03 0241 	add.w	r2, r3, r1, lsl #1
 800a49a:	f813 0011 	ldrb.w	r0, [r3, r1, lsl #1]
 800a49e:	4b11      	ldr	r3, [pc, #68]	; (800a4e4 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x7c>)
 800a4a0:	7854      	ldrb	r4, [r2, #1]
 800a4a2:	681b      	ldr	r3, [r3, #0]
 800a4a4:	f853 5020 	ldr.w	r5, [r3, r0, lsl #2]
 800a4a8:	682b      	ldr	r3, [r5, #0]
 800a4aa:	69de      	ldr	r6, [r3, #28]
 800a4ac:	4b0e      	ldr	r3, [pc, #56]	; (800a4e8 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x80>)
 800a4ae:	6818      	ldr	r0, [r3, #0]
 800a4b0:	f7f8 fde0 	bl	8003074 <_ZNK8touchgfx5Texts7getTextEt>
 800a4b4:	f3c4 0481 	ubfx	r4, r4, #2, #2
 800a4b8:	2300      	movs	r3, #0
 800a4ba:	4602      	mov	r2, r0
 800a4bc:	9300      	str	r3, [sp, #0]
 800a4be:	4621      	mov	r1, r4
 800a4c0:	4628      	mov	r0, r5
 800a4c2:	47b0      	blx	r6
 800a4c4:	b002      	add	sp, #8
 800a4c6:	bd70      	pop	{r4, r5, r6, pc}
 800a4c8:	2000      	movs	r0, #0
 800a4ca:	e7fb      	b.n	800a4c4 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x5c>
 800a4cc:	200121f8 	.word	0x200121f8
 800a4d0:	0801c118 	.word	0x0801c118
 800a4d4:	0801c254 	.word	0x0801c254
 800a4d8:	0801c15a 	.word	0x0801c15a
 800a4dc:	200121fc 	.word	0x200121fc
 800a4e0:	0801c183 	.word	0x0801c183
 800a4e4:	20012200 	.word	0x20012200
 800a4e8:	20012204 	.word	0x20012204

0800a4ec <_ZN8touchgfx8TextArea12setBaselineYEs>:
 800a4ec:	b570      	push	{r4, r5, r6, lr}
 800a4ee:	6803      	ldr	r3, [r0, #0]
 800a4f0:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 800a4f2:	6b1e      	ldr	r6, [r3, #48]	; 0x30
 800a4f4:	4b11      	ldr	r3, [pc, #68]	; (800a53c <_ZN8touchgfx8TextArea12setBaselineYEs+0x50>)
 800a4f6:	681b      	ldr	r3, [r3, #0]
 800a4f8:	4604      	mov	r4, r0
 800a4fa:	b28d      	uxth	r5, r1
 800a4fc:	b92b      	cbnz	r3, 800a50a <_ZN8touchgfx8TextArea12setBaselineYEs+0x1e>
 800a4fe:	4b10      	ldr	r3, [pc, #64]	; (800a540 <_ZN8touchgfx8TextArea12setBaselineYEs+0x54>)
 800a500:	4a10      	ldr	r2, [pc, #64]	; (800a544 <_ZN8touchgfx8TextArea12setBaselineYEs+0x58>)
 800a502:	21b1      	movs	r1, #177	; 0xb1
 800a504:	4810      	ldr	r0, [pc, #64]	; (800a548 <_ZN8touchgfx8TextArea12setBaselineYEs+0x5c>)
 800a506:	f00e ff81 	bl	801940c <__assert_func>
 800a50a:	4910      	ldr	r1, [pc, #64]	; (800a54c <_ZN8touchgfx8TextArea12setBaselineYEs+0x60>)
 800a50c:	8809      	ldrh	r1, [r1, #0]
 800a50e:	4291      	cmp	r1, r2
 800a510:	d803      	bhi.n	800a51a <_ZN8touchgfx8TextArea12setBaselineYEs+0x2e>
 800a512:	4b0f      	ldr	r3, [pc, #60]	; (800a550 <_ZN8touchgfx8TextArea12setBaselineYEs+0x64>)
 800a514:	4a0b      	ldr	r2, [pc, #44]	; (800a544 <_ZN8touchgfx8TextArea12setBaselineYEs+0x58>)
 800a516:	21b2      	movs	r1, #178	; 0xb2
 800a518:	e7f4      	b.n	800a504 <_ZN8touchgfx8TextArea12setBaselineYEs+0x18>
 800a51a:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
 800a51e:	4b0d      	ldr	r3, [pc, #52]	; (800a554 <_ZN8touchgfx8TextArea12setBaselineYEs+0x68>)
 800a520:	681b      	ldr	r3, [r3, #0]
 800a522:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 800a526:	6803      	ldr	r3, [r0, #0]
 800a528:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a52a:	4798      	blx	r3
 800a52c:	1a29      	subs	r1, r5, r0
 800a52e:	4633      	mov	r3, r6
 800a530:	4620      	mov	r0, r4
 800a532:	b209      	sxth	r1, r1
 800a534:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800a538:	4718      	bx	r3
 800a53a:	bf00      	nop
 800a53c:	200121f8 	.word	0x200121f8
 800a540:	0801c118 	.word	0x0801c118
 800a544:	0801c254 	.word	0x0801c254
 800a548:	0801c15a 	.word	0x0801c15a
 800a54c:	200121fc 	.word	0x200121fc
 800a550:	0801c183 	.word	0x0801c183
 800a554:	20012200 	.word	0x20012200

0800a558 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE>:
 800a558:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800a55c:	8d83      	ldrh	r3, [r0, #44]	; 0x2c
 800a55e:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800a562:	4293      	cmp	r3, r2
 800a564:	b08c      	sub	sp, #48	; 0x30
 800a566:	4604      	mov	r4, r0
 800a568:	4688      	mov	r8, r1
 800a56a:	d05f      	beq.n	800a62c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd4>
 800a56c:	4e31      	ldr	r6, [pc, #196]	; (800a634 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xdc>)
 800a56e:	6832      	ldr	r2, [r6, #0]
 800a570:	b92a      	cbnz	r2, 800a57e <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x26>
 800a572:	4b31      	ldr	r3, [pc, #196]	; (800a638 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xe0>)
 800a574:	4a31      	ldr	r2, [pc, #196]	; (800a63c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xe4>)
 800a576:	21b1      	movs	r1, #177	; 0xb1
 800a578:	4831      	ldr	r0, [pc, #196]	; (800a640 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xe8>)
 800a57a:	f00e ff47 	bl	801940c <__assert_func>
 800a57e:	4d31      	ldr	r5, [pc, #196]	; (800a644 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xec>)
 800a580:	8829      	ldrh	r1, [r5, #0]
 800a582:	4299      	cmp	r1, r3
 800a584:	d803      	bhi.n	800a58e <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x36>
 800a586:	4b30      	ldr	r3, [pc, #192]	; (800a648 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xf0>)
 800a588:	4a2c      	ldr	r2, [pc, #176]	; (800a63c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xe4>)
 800a58a:	21b2      	movs	r1, #178	; 0xb2
 800a58c:	e7f4      	b.n	800a578 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x20>
 800a58e:	eb02 0143 	add.w	r1, r2, r3, lsl #1
 800a592:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 800a596:	4b2d      	ldr	r3, [pc, #180]	; (800a64c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xf4>)
 800a598:	681b      	ldr	r3, [r3, #0]
 800a59a:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 800a59e:	2a00      	cmp	r2, #0
 800a5a0:	d044      	beq.n	800a62c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd4>
 800a5a2:	784b      	ldrb	r3, [r1, #1]
 800a5a4:	9207      	str	r2, [sp, #28]
 800a5a6:	f3c3 0901 	ubfx	r9, r3, #0, #2
 800a5aa:	f3c3 0381 	ubfx	r3, r3, #2, #2
 800a5ae:	f88d 3021 	strb.w	r3, [sp, #33]	; 0x21
 800a5b2:	4b27      	ldr	r3, [pc, #156]	; (800a650 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xf8>)
 800a5b4:	f890 a036 	ldrb.w	sl, [r0, #54]	; 0x36
 800a5b8:	681b      	ldr	r3, [r3, #0]
 800a5ba:	f9b0 c034 	ldrsh.w	ip, [r0, #52]	; 0x34
 800a5be:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 800a5c2:	f890 e038 	ldrb.w	lr, [r0, #56]	; 0x38
 800a5c6:	f890 7037 	ldrb.w	r7, [r0, #55]	; 0x37
 800a5ca:	f890 1039 	ldrb.w	r1, [r0, #57]	; 0x39
 800a5ce:	6b00      	ldr	r0, [r0, #48]	; 0x30
 800a5d0:	9009      	str	r0, [sp, #36]	; 0x24
 800a5d2:	f88d a02a 	strb.w	sl, [sp, #42]	; 0x2a
 800a5d6:	f88d 9020 	strb.w	r9, [sp, #32]
 800a5da:	f88d e022 	strb.w	lr, [sp, #34]	; 0x22
 800a5de:	f8ad c028 	strh.w	ip, [sp, #40]	; 0x28
 800a5e2:	f88d 702b 	strb.w	r7, [sp, #43]	; 0x2b
 800a5e6:	f88d 102c 	strb.w	r1, [sp, #44]	; 0x2c
 800a5ea:	b10a      	cbz	r2, 800a5f0 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x98>
 800a5ec:	6cdf      	ldr	r7, [r3, #76]	; 0x4c
 800a5ee:	b907      	cbnz	r7, 800a5f2 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x9a>
 800a5f0:	689f      	ldr	r7, [r3, #8]
 800a5f2:	f10d 0914 	add.w	r9, sp, #20
 800a5f6:	4621      	mov	r1, r4
 800a5f8:	4648      	mov	r0, r9
 800a5fa:	f001 ffdb 	bl	800c5b4 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800a5fe:	6833      	ldr	r3, [r6, #0]
 800a600:	2b00      	cmp	r3, #0
 800a602:	d0b6      	beq.n	800a572 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x1a>
 800a604:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 800a606:	882b      	ldrh	r3, [r5, #0]
 800a608:	428b      	cmp	r3, r1
 800a60a:	d9bc      	bls.n	800a586 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x2e>
 800a60c:	4b11      	ldr	r3, [pc, #68]	; (800a654 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xfc>)
 800a60e:	6818      	ldr	r0, [r3, #0]
 800a610:	f7f8 fd30 	bl	8003074 <_ZNK8touchgfx5Texts7getTextEt>
 800a614:	2300      	movs	r3, #0
 800a616:	e9cd 3302 	strd	r3, r3, [sp, #8]
 800a61a:	ab07      	add	r3, sp, #28
 800a61c:	9001      	str	r0, [sp, #4]
 800a61e:	9300      	str	r3, [sp, #0]
 800a620:	e899 0006 	ldmia.w	r9, {r1, r2}
 800a624:	4643      	mov	r3, r8
 800a626:	4638      	mov	r0, r7
 800a628:	f7f8 fcd8 	bl	8002fdc <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 800a62c:	b00c      	add	sp, #48	; 0x30
 800a62e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800a632:	bf00      	nop
 800a634:	200121f8 	.word	0x200121f8
 800a638:	0801c118 	.word	0x0801c118
 800a63c:	0801c254 	.word	0x0801c254
 800a640:	0801c15a 	.word	0x0801c15a
 800a644:	200121fc 	.word	0x200121fc
 800a648:	0801c183 	.word	0x0801c183
 800a64c:	20012200 	.word	0x20012200
 800a650:	20012188 	.word	0x20012188
 800a654:	20012204 	.word	0x20012204

0800a658 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz>:
 800a658:	b40e      	push	{r1, r2, r3}
 800a65a:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800a65e:	8d83      	ldrh	r3, [r0, #44]	; 0x2c
 800a660:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800a664:	4293      	cmp	r3, r2
 800a666:	b09b      	sub	sp, #108	; 0x6c
 800a668:	4604      	mov	r4, r0
 800a66a:	d061      	beq.n	800a730 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xd8>
 800a66c:	f8df a0d4 	ldr.w	sl, [pc, #212]	; 800a744 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xec>
 800a670:	aa24      	add	r2, sp, #144	; 0x90
 800a672:	9203      	str	r2, [sp, #12]
 800a674:	f8da 2000 	ldr.w	r2, [sl]
 800a678:	b92a      	cbnz	r2, 800a686 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0x2e>
 800a67a:	4b2e      	ldr	r3, [pc, #184]	; (800a734 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xdc>)
 800a67c:	4a2e      	ldr	r2, [pc, #184]	; (800a738 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xe0>)
 800a67e:	21b1      	movs	r1, #177	; 0xb1
 800a680:	482e      	ldr	r0, [pc, #184]	; (800a73c <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xe4>)
 800a682:	f00e fec3 	bl	801940c <__assert_func>
 800a686:	f8df 80c0 	ldr.w	r8, [pc, #192]	; 800a748 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xf0>
 800a68a:	f8b8 1000 	ldrh.w	r1, [r8]
 800a68e:	4299      	cmp	r1, r3
 800a690:	d803      	bhi.n	800a69a <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0x42>
 800a692:	4b2b      	ldr	r3, [pc, #172]	; (800a740 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xe8>)
 800a694:	4a28      	ldr	r2, [pc, #160]	; (800a738 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xe0>)
 800a696:	21b2      	movs	r1, #178	; 0xb2
 800a698:	e7f2      	b.n	800a680 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0x28>
 800a69a:	f8df 90b0 	ldr.w	r9, [pc, #176]	; 800a74c <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xf4>
 800a69e:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 800a6a2:	f8d9 3000 	ldr.w	r3, [r9]
 800a6a6:	f853 7022 	ldr.w	r7, [r3, r2, lsl #2]
 800a6aa:	683b      	ldr	r3, [r7, #0]
 800a6ac:	4638      	mov	r0, r7
 800a6ae:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800a6b0:	4798      	blx	r3
 800a6b2:	4606      	mov	r6, r0
 800a6b4:	b205      	sxth	r5, r0
 800a6b6:	a804      	add	r0, sp, #16
 800a6b8:	f002 fb90 	bl	800cddc <_ZN8touchgfx12TextProviderC1Ev>
 800a6bc:	683b      	ldr	r3, [r7, #0]
 800a6be:	4638      	mov	r0, r7
 800a6c0:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800a6c2:	4798      	blx	r3
 800a6c4:	9923      	ldr	r1, [sp, #140]	; 0x8c
 800a6c6:	9a03      	ldr	r2, [sp, #12]
 800a6c8:	4603      	mov	r3, r0
 800a6ca:	a804      	add	r0, sp, #16
 800a6cc:	f002 fbcb 	bl	800ce66 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_>
 800a6d0:	f8da 3000 	ldr.w	r3, [sl]
 800a6d4:	f894 1039 	ldrb.w	r1, [r4, #57]	; 0x39
 800a6d8:	2b00      	cmp	r3, #0
 800a6da:	d0ce      	beq.n	800a67a <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0x22>
 800a6dc:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 800a6de:	f8b8 0000 	ldrh.w	r0, [r8]
 800a6e2:	4290      	cmp	r0, r2
 800a6e4:	d9d5      	bls.n	800a692 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0x3a>
 800a6e6:	eb03 0742 	add.w	r7, r3, r2, lsl #1
 800a6ea:	f813 0012 	ldrb.w	r0, [r3, r2, lsl #1]
 800a6ee:	787a      	ldrb	r2, [r7, #1]
 800a6f0:	f8d9 3000 	ldr.w	r3, [r9]
 800a6f4:	f9b4 7008 	ldrsh.w	r7, [r4, #8]
 800a6f8:	9700      	str	r7, [sp, #0]
 800a6fa:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
 800a6fe:	f3c2 0281 	ubfx	r2, r2, #2, #2
 800a702:	a804      	add	r0, sp, #16
 800a704:	f000 fdc8 	bl	800b298 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>
 800a708:	f9b4 2034 	ldrsh.w	r2, [r4, #52]	; 0x34
 800a70c:	18a9      	adds	r1, r5, r2
 800a70e:	2900      	cmp	r1, #0
 800a710:	b203      	sxth	r3, r0
 800a712:	dd0b      	ble.n	800a72c <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xd4>
 800a714:	3b01      	subs	r3, #1
 800a716:	fb13 f302 	smulbb	r3, r3, r2
 800a71a:	fb16 3300 	smlabb	r3, r6, r0, r3
 800a71e:	b21d      	sxth	r5, r3
 800a720:	4628      	mov	r0, r5
 800a722:	b01b      	add	sp, #108	; 0x6c
 800a724:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800a728:	b003      	add	sp, #12
 800a72a:	4770      	bx	lr
 800a72c:	2b00      	cmp	r3, #0
 800a72e:	dcf7      	bgt.n	800a720 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc8>
 800a730:	2500      	movs	r5, #0
 800a732:	e7f5      	b.n	800a720 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc8>
 800a734:	0801c118 	.word	0x0801c118
 800a738:	0801c254 	.word	0x0801c254
 800a73c:	0801c15a 	.word	0x0801c15a
 800a740:	0801c183 	.word	0x0801c183
 800a744:	200121f8 	.word	0x200121f8
 800a748:	200121fc 	.word	0x200121fc
 800a74c:	20012200 	.word	0x20012200

0800a750 <_ZN8touchgfx8TextAreaD0Ev>:
 800a750:	b510      	push	{r4, lr}
 800a752:	213c      	movs	r1, #60	; 0x3c
 800a754:	4604      	mov	r4, r0
 800a756:	f00e fe2d 	bl	80193b4 <_ZdlPvj>
 800a75a:	4620      	mov	r0, r4
 800a75c:	bd10      	pop	{r4, pc}
	...

0800a760 <_ZN8touchgfx8TextArea13getTextHeightEv>:
 800a760:	b570      	push	{r4, r5, r6, lr}
 800a762:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 800a764:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800a768:	4299      	cmp	r1, r3
 800a76a:	4604      	mov	r4, r0
 800a76c:	d01e      	beq.n	800a7ac <_ZN8touchgfx8TextArea13getTextHeightEv+0x4c>
 800a76e:	6803      	ldr	r3, [r0, #0]
 800a770:	6f1d      	ldr	r5, [r3, #112]	; 0x70
 800a772:	4b0f      	ldr	r3, [pc, #60]	; (800a7b0 <_ZN8touchgfx8TextArea13getTextHeightEv+0x50>)
 800a774:	681b      	ldr	r3, [r3, #0]
 800a776:	b92b      	cbnz	r3, 800a784 <_ZN8touchgfx8TextArea13getTextHeightEv+0x24>
 800a778:	4b0e      	ldr	r3, [pc, #56]	; (800a7b4 <_ZN8touchgfx8TextArea13getTextHeightEv+0x54>)
 800a77a:	4a0f      	ldr	r2, [pc, #60]	; (800a7b8 <_ZN8touchgfx8TextArea13getTextHeightEv+0x58>)
 800a77c:	21b1      	movs	r1, #177	; 0xb1
 800a77e:	480f      	ldr	r0, [pc, #60]	; (800a7bc <_ZN8touchgfx8TextArea13getTextHeightEv+0x5c>)
 800a780:	f00e fe44 	bl	801940c <__assert_func>
 800a784:	4b0e      	ldr	r3, [pc, #56]	; (800a7c0 <_ZN8touchgfx8TextArea13getTextHeightEv+0x60>)
 800a786:	881b      	ldrh	r3, [r3, #0]
 800a788:	428b      	cmp	r3, r1
 800a78a:	d803      	bhi.n	800a794 <_ZN8touchgfx8TextArea13getTextHeightEv+0x34>
 800a78c:	4b0d      	ldr	r3, [pc, #52]	; (800a7c4 <_ZN8touchgfx8TextArea13getTextHeightEv+0x64>)
 800a78e:	4a0a      	ldr	r2, [pc, #40]	; (800a7b8 <_ZN8touchgfx8TextArea13getTextHeightEv+0x58>)
 800a790:	21b2      	movs	r1, #178	; 0xb2
 800a792:	e7f4      	b.n	800a77e <_ZN8touchgfx8TextArea13getTextHeightEv+0x1e>
 800a794:	4b0c      	ldr	r3, [pc, #48]	; (800a7c8 <_ZN8touchgfx8TextArea13getTextHeightEv+0x68>)
 800a796:	6818      	ldr	r0, [r3, #0]
 800a798:	f7f8 fc6c 	bl	8003074 <_ZNK8touchgfx5Texts7getTextEt>
 800a79c:	2300      	movs	r3, #0
 800a79e:	4601      	mov	r1, r0
 800a7a0:	46ac      	mov	ip, r5
 800a7a2:	4620      	mov	r0, r4
 800a7a4:	461a      	mov	r2, r3
 800a7a6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800a7aa:	4760      	bx	ip
 800a7ac:	2000      	movs	r0, #0
 800a7ae:	bd70      	pop	{r4, r5, r6, pc}
 800a7b0:	200121f8 	.word	0x200121f8
 800a7b4:	0801c118 	.word	0x0801c118
 800a7b8:	0801c254 	.word	0x0801c254
 800a7bc:	0801c15a 	.word	0x0801c15a
 800a7c0:	200121fc 	.word	0x200121fc
 800a7c4:	0801c183 	.word	0x0801c183
 800a7c8:	20012204 	.word	0x20012204

0800a7cc <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>:
 800a7cc:	b570      	push	{r4, r5, r6, lr}
 800a7ce:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 800a7d0:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800a7d4:	429a      	cmp	r2, r3
 800a7d6:	4604      	mov	r4, r0
 800a7d8:	d021      	beq.n	800a81e <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x52>
 800a7da:	6803      	ldr	r3, [r0, #0]
 800a7dc:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 800a7de:	4798      	blx	r3
 800a7e0:	6823      	ldr	r3, [r4, #0]
 800a7e2:	4605      	mov	r5, r0
 800a7e4:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 800a7e6:	4620      	mov	r0, r4
 800a7e8:	4798      	blx	r3
 800a7ea:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 800a7ee:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 800a7f2:	6823      	ldr	r3, [r4, #0]
 800a7f4:	4606      	mov	r6, r0
 800a7f6:	b22d      	sxth	r5, r5
 800a7f8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800a7fa:	d109      	bne.n	800a810 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x44>
 800a7fc:	4629      	mov	r1, r5
 800a7fe:	4620      	mov	r0, r4
 800a800:	4798      	blx	r3
 800a802:	6823      	ldr	r3, [r4, #0]
 800a804:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800a806:	4631      	mov	r1, r6
 800a808:	4620      	mov	r0, r4
 800a80a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800a80e:	4718      	bx	r3
 800a810:	4601      	mov	r1, r0
 800a812:	4620      	mov	r0, r4
 800a814:	4798      	blx	r3
 800a816:	6823      	ldr	r3, [r4, #0]
 800a818:	4629      	mov	r1, r5
 800a81a:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800a81c:	e7f4      	b.n	800a808 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x3c>
 800a81e:	bd70      	pop	{r4, r5, r6, pc}

0800a820 <_ZN8touchgfx8TextArea12setTypedTextENS_9TypedTextE>:
 800a820:	888a      	ldrh	r2, [r1, #4]
 800a822:	8582      	strh	r2, [r0, #44]	; 0x2c
 800a824:	f9b0 2008 	ldrsh.w	r2, [r0, #8]
 800a828:	b922      	cbnz	r2, 800a834 <_ZN8touchgfx8TextArea12setTypedTextENS_9TypedTextE+0x14>
 800a82a:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 800a82e:	b90b      	cbnz	r3, 800a834 <_ZN8touchgfx8TextArea12setTypedTextENS_9TypedTextE+0x14>
 800a830:	f7ff bfcc 	b.w	800a7cc <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
 800a834:	4770      	bx	lr

0800a836 <_ZNK8touchgfx3Box12getSolidRectEv>:
 800a836:	2300      	movs	r3, #0
 800a838:	8003      	strh	r3, [r0, #0]
 800a83a:	8043      	strh	r3, [r0, #2]
 800a83c:	8083      	strh	r3, [r0, #4]
 800a83e:	80c3      	strh	r3, [r0, #6]
 800a840:	f891 302c 	ldrb.w	r3, [r1, #44]	; 0x2c
 800a844:	b91b      	cbnz	r3, 800a84e <_ZNK8touchgfx3Box12getSolidRectEv+0x18>
 800a846:	f891 3026 	ldrb.w	r3, [r1, #38]	; 0x26
 800a84a:	2bff      	cmp	r3, #255	; 0xff
 800a84c:	d103      	bne.n	800a856 <_ZNK8touchgfx3Box12getSolidRectEv+0x20>
 800a84e:	890b      	ldrh	r3, [r1, #8]
 800a850:	8083      	strh	r3, [r0, #4]
 800a852:	894b      	ldrh	r3, [r1, #10]
 800a854:	80c3      	strh	r3, [r0, #6]
 800a856:	4770      	bx	lr

0800a858 <_ZNK8touchgfx3Box4drawERKNS_4RectE>:
 800a858:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800a85a:	4604      	mov	r4, r0
 800a85c:	6808      	ldr	r0, [r1, #0]
 800a85e:	6849      	ldr	r1, [r1, #4]
 800a860:	466b      	mov	r3, sp
 800a862:	c303      	stmia	r3!, {r0, r1}
 800a864:	6823      	ldr	r3, [r4, #0]
 800a866:	4669      	mov	r1, sp
 800a868:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800a86a:	4620      	mov	r0, r4
 800a86c:	4798      	blx	r3
 800a86e:	4b08      	ldr	r3, [pc, #32]	; (800a890 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x38>)
 800a870:	681b      	ldr	r3, [r3, #0]
 800a872:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 800a876:	b10a      	cbz	r2, 800a87c <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x24>
 800a878:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 800a87a:	b900      	cbnz	r0, 800a87e <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x26>
 800a87c:	6898      	ldr	r0, [r3, #8]
 800a87e:	6803      	ldr	r3, [r0, #0]
 800a880:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 800a882:	699d      	ldr	r5, [r3, #24]
 800a884:	f894 3026 	ldrb.w	r3, [r4, #38]	; 0x26
 800a888:	4669      	mov	r1, sp
 800a88a:	47a8      	blx	r5
 800a88c:	b003      	add	sp, #12
 800a88e:	bd30      	pop	{r4, r5, pc}
 800a890:	20012188 	.word	0x20012188

0800a894 <_ZN8touchgfx3BoxD1Ev>:
 800a894:	4770      	bx	lr

0800a896 <_ZN8touchgfx3BoxD0Ev>:
 800a896:	b510      	push	{r4, lr}
 800a898:	2130      	movs	r1, #48	; 0x30
 800a89a:	4604      	mov	r4, r0
 800a89c:	f00e fd8a 	bl	80193b4 <_ZdlPvj>
 800a8a0:	4620      	mov	r0, r4
 800a8a2:	bd10      	pop	{r4, pc}

0800a8a4 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>:
 800a8a4:	b538      	push	{r3, r4, r5, lr}
 800a8a6:	880b      	ldrh	r3, [r1, #0]
 800a8a8:	85c3      	strh	r3, [r0, #46]	; 0x2e
 800a8aa:	4605      	mov	r5, r0
 800a8ac:	8813      	ldrh	r3, [r2, #0]
 800a8ae:	f825 3f30 	strh.w	r3, [r5, #48]!
 800a8b2:	4604      	mov	r4, r0
 800a8b4:	4628      	mov	r0, r5
 800a8b6:	f003 f8db 	bl	800da70 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800a8ba:	8120      	strh	r0, [r4, #8]
 800a8bc:	4628      	mov	r0, r5
 800a8be:	f003 f911 	bl	800dae4 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800a8c2:	8160      	strh	r0, [r4, #10]
 800a8c4:	bd38      	pop	{r3, r4, r5, pc}

0800a8c6 <_ZNK8touchgfx6Button12getSolidRectEv>:
 800a8c6:	b510      	push	{r4, lr}
 800a8c8:	f891 3032 	ldrb.w	r3, [r1, #50]	; 0x32
 800a8cc:	2bff      	cmp	r3, #255	; 0xff
 800a8ce:	4604      	mov	r4, r0
 800a8d0:	d006      	beq.n	800a8e0 <_ZNK8touchgfx6Button12getSolidRectEv+0x1a>
 800a8d2:	2300      	movs	r3, #0
 800a8d4:	8003      	strh	r3, [r0, #0]
 800a8d6:	8043      	strh	r3, [r0, #2]
 800a8d8:	8083      	strh	r3, [r0, #4]
 800a8da:	80c3      	strh	r3, [r0, #6]
 800a8dc:	4620      	mov	r0, r4
 800a8de:	bd10      	pop	{r4, pc}
 800a8e0:	f891 302c 	ldrb.w	r3, [r1, #44]	; 0x2c
 800a8e4:	b11b      	cbz	r3, 800a8ee <_ZNK8touchgfx6Button12getSolidRectEv+0x28>
 800a8e6:	3130      	adds	r1, #48	; 0x30
 800a8e8:	f003 f936 	bl	800db58 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 800a8ec:	e7f6      	b.n	800a8dc <_ZNK8touchgfx6Button12getSolidRectEv+0x16>
 800a8ee:	312e      	adds	r1, #46	; 0x2e
 800a8f0:	e7fa      	b.n	800a8e8 <_ZNK8touchgfx6Button12getSolidRectEv+0x22>
	...

0800a8f4 <_ZNK8touchgfx6Button4drawERKNS_4RectE>:
 800a8f4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800a8f8:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 800a8fc:	b08a      	sub	sp, #40	; 0x28
 800a8fe:	4604      	mov	r4, r0
 800a900:	4688      	mov	r8, r1
 800a902:	2b00      	cmp	r3, #0
 800a904:	d044      	beq.n	800a990 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x9c>
 800a906:	8e03      	ldrh	r3, [r0, #48]	; 0x30
 800a908:	f8ad 3014 	strh.w	r3, [sp, #20]
 800a90c:	a805      	add	r0, sp, #20
 800a90e:	f003 f8af 	bl	800da70 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800a912:	4605      	mov	r5, r0
 800a914:	b206      	sxth	r6, r0
 800a916:	a805      	add	r0, sp, #20
 800a918:	f003 f8e4 	bl	800dae4 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800a91c:	f9b8 2000 	ldrsh.w	r2, [r8]
 800a920:	f8b8 7004 	ldrh.w	r7, [r8, #4]
 800a924:	4417      	add	r7, r2
 800a926:	b2bf      	uxth	r7, r7
 800a928:	2300      	movs	r3, #0
 800a92a:	fa0f fe87 	sxth.w	lr, r7
 800a92e:	459e      	cmp	lr, r3
 800a930:	fa0f fc80 	sxth.w	ip, r0
 800a934:	9306      	str	r3, [sp, #24]
 800a936:	dd2d      	ble.n	800a994 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xa0>
 800a938:	4296      	cmp	r6, r2
 800a93a:	dd2b      	ble.n	800a994 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xa0>
 800a93c:	f9b8 3002 	ldrsh.w	r3, [r8, #2]
 800a940:	f8b8 1006 	ldrh.w	r1, [r8, #6]
 800a944:	4419      	add	r1, r3
 800a946:	b289      	uxth	r1, r1
 800a948:	fa0f f881 	sxth.w	r8, r1
 800a94c:	f1b8 0f00 	cmp.w	r8, #0
 800a950:	dd20      	ble.n	800a994 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xa0>
 800a952:	459c      	cmp	ip, r3
 800a954:	dd1e      	ble.n	800a994 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xa0>
 800a956:	ea22 72e2 	bic.w	r2, r2, r2, asr #31
 800a95a:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 800a95e:	4576      	cmp	r6, lr
 800a960:	bfa8      	it	ge
 800a962:	463d      	movge	r5, r7
 800a964:	45c4      	cmp	ip, r8
 800a966:	bfa8      	it	ge
 800a968:	4608      	movge	r0, r1
 800a96a:	1aad      	subs	r5, r5, r2
 800a96c:	1ac0      	subs	r0, r0, r3
 800a96e:	f8ad 501c 	strh.w	r5, [sp, #28]
 800a972:	f8ad 001e 	strh.w	r0, [sp, #30]
 800a976:	f8ad 2018 	strh.w	r2, [sp, #24]
 800a97a:	f8ad 301a 	strh.w	r3, [sp, #26]
 800a97e:	4b1f      	ldr	r3, [pc, #124]	; (800a9fc <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x108>)
 800a980:	681b      	ldr	r3, [r3, #0]
 800a982:	b953      	cbnz	r3, 800a99a <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xa6>
 800a984:	4b1e      	ldr	r3, [pc, #120]	; (800aa00 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x10c>)
 800a986:	4a1f      	ldr	r2, [pc, #124]	; (800aa04 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x110>)
 800a988:	481f      	ldr	r0, [pc, #124]	; (800aa08 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x114>)
 800a98a:	2189      	movs	r1, #137	; 0x89
 800a98c:	f00e fd3e 	bl	801940c <__assert_func>
 800a990:	8dc3      	ldrh	r3, [r0, #46]	; 0x2e
 800a992:	e7b9      	b.n	800a908 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x14>
 800a994:	2300      	movs	r3, #0
 800a996:	9307      	str	r3, [sp, #28]
 800a998:	e7f1      	b.n	800a97e <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x8a>
 800a99a:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 800a99e:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800a9a2:	429a      	cmp	r2, r3
 800a9a4:	d026      	beq.n	800a9f4 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x100>
 800a9a6:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 800a9aa:	2b00      	cmp	r3, #0
 800a9ac:	dd22      	ble.n	800a9f4 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x100>
 800a9ae:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 800a9b2:	2b00      	cmp	r3, #0
 800a9b4:	dd1e      	ble.n	800a9f4 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x100>
 800a9b6:	2300      	movs	r3, #0
 800a9b8:	e9cd 3308 	strd	r3, r3, [sp, #32]
 800a9bc:	6823      	ldr	r3, [r4, #0]
 800a9be:	a908      	add	r1, sp, #32
 800a9c0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800a9c2:	4620      	mov	r0, r4
 800a9c4:	4798      	blx	r3
 800a9c6:	4b11      	ldr	r3, [pc, #68]	; (800aa0c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x118>)
 800a9c8:	681b      	ldr	r3, [r3, #0]
 800a9ca:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 800a9ce:	b10a      	cbz	r2, 800a9d4 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe0>
 800a9d0:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 800a9d2:	b900      	cbnz	r0, 800a9d6 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe2>
 800a9d4:	6898      	ldr	r0, [r3, #8]
 800a9d6:	6801      	ldr	r1, [r0, #0]
 800a9d8:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 800a9dc:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 800a9e0:	2501      	movs	r5, #1
 800a9e2:	9502      	str	r5, [sp, #8]
 800a9e4:	f894 4032 	ldrb.w	r4, [r4, #50]	; 0x32
 800a9e8:	9401      	str	r4, [sp, #4]
 800a9ea:	ac06      	add	r4, sp, #24
 800a9ec:	9400      	str	r4, [sp, #0]
 800a9ee:	688c      	ldr	r4, [r1, #8]
 800a9f0:	a905      	add	r1, sp, #20
 800a9f2:	47a0      	blx	r4
 800a9f4:	b00a      	add	sp, #40	; 0x28
 800a9f6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800a9fa:	bf00      	nop
 800a9fc:	20012230 	.word	0x20012230
 800aa00:	0801c2ec 	.word	0x0801c2ec
 800aa04:	0801c34e 	.word	0x0801c34e
 800aa08:	0801c328 	.word	0x0801c328
 800aa0c:	20012188 	.word	0x20012188

0800aa10 <_ZN8touchgfx5ImageD1Ev>:
 800aa10:	4770      	bx	lr

0800aa12 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>:
 800aa12:	b570      	push	{r4, r5, r6, lr}
 800aa14:	4605      	mov	r5, r0
 800aa16:	880b      	ldrh	r3, [r1, #0]
 800aa18:	84c3      	strh	r3, [r0, #38]	; 0x26
 800aa1a:	f855 3b26 	ldr.w	r3, [r5], #38
 800aa1e:	4604      	mov	r4, r0
 800aa20:	4628      	mov	r0, r5
 800aa22:	6b9e      	ldr	r6, [r3, #56]	; 0x38
 800aa24:	f003 f824 	bl	800da70 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800aa28:	b201      	sxth	r1, r0
 800aa2a:	4620      	mov	r0, r4
 800aa2c:	47b0      	blx	r6
 800aa2e:	6823      	ldr	r3, [r4, #0]
 800aa30:	4628      	mov	r0, r5
 800aa32:	6bde      	ldr	r6, [r3, #60]	; 0x3c
 800aa34:	f003 f856 	bl	800dae4 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800aa38:	4633      	mov	r3, r6
 800aa3a:	b201      	sxth	r1, r0
 800aa3c:	4620      	mov	r0, r4
 800aa3e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800aa42:	4718      	bx	r3

0800aa44 <_ZN8touchgfx5ImageD0Ev>:
 800aa44:	b510      	push	{r4, lr}
 800aa46:	212c      	movs	r1, #44	; 0x2c
 800aa48:	4604      	mov	r4, r0
 800aa4a:	f00e fcb3 	bl	80193b4 <_ZdlPvj>
 800aa4e:	4620      	mov	r0, r4
 800aa50:	bd10      	pop	{r4, pc}

0800aa52 <_ZNK8touchgfx5Image12getSolidRectEv>:
 800aa52:	b510      	push	{r4, lr}
 800aa54:	f891 3028 	ldrb.w	r3, [r1, #40]	; 0x28
 800aa58:	2bff      	cmp	r3, #255	; 0xff
 800aa5a:	4604      	mov	r4, r0
 800aa5c:	d006      	beq.n	800aa6c <_ZNK8touchgfx5Image12getSolidRectEv+0x1a>
 800aa5e:	2300      	movs	r3, #0
 800aa60:	8003      	strh	r3, [r0, #0]
 800aa62:	8043      	strh	r3, [r0, #2]
 800aa64:	8083      	strh	r3, [r0, #4]
 800aa66:	80c3      	strh	r3, [r0, #6]
 800aa68:	4620      	mov	r0, r4
 800aa6a:	bd10      	pop	{r4, pc}
 800aa6c:	3126      	adds	r1, #38	; 0x26
 800aa6e:	f003 f873 	bl	800db58 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 800aa72:	e7f9      	b.n	800aa68 <_ZNK8touchgfx5Image12getSolidRectEv+0x16>

0800aa74 <_ZNK8touchgfx5Image4drawERKNS_4RectE>:
 800aa74:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800aa78:	4604      	mov	r4, r0
 800aa7a:	b088      	sub	sp, #32
 800aa7c:	f854 3b26 	ldr.w	r3, [r4], #38
 800aa80:	2500      	movs	r5, #0
 800aa82:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800aa84:	460f      	mov	r7, r1
 800aa86:	e9cd 5504 	strd	r5, r5, [sp, #16]
 800aa8a:	a904      	add	r1, sp, #16
 800aa8c:	4606      	mov	r6, r0
 800aa8e:	4798      	blx	r3
 800aa90:	4620      	mov	r0, r4
 800aa92:	f002 ffed 	bl	800da70 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800aa96:	4680      	mov	r8, r0
 800aa98:	4620      	mov	r0, r4
 800aa9a:	f003 f823 	bl	800dae4 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800aa9e:	9506      	str	r5, [sp, #24]
 800aaa0:	ad06      	add	r5, sp, #24
 800aaa2:	f8ad 001e 	strh.w	r0, [sp, #30]
 800aaa6:	4639      	mov	r1, r7
 800aaa8:	4628      	mov	r0, r5
 800aaaa:	f8ad 801c 	strh.w	r8, [sp, #28]
 800aaae:	f7fe f9d9 	bl	8008e64 <_ZN8touchgfx4RectaNERKS0_>
 800aab2:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 800aab6:	2b00      	cmp	r3, #0
 800aab8:	dd19      	ble.n	800aaee <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
 800aaba:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 800aabe:	2b00      	cmp	r3, #0
 800aac0:	dd15      	ble.n	800aaee <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
 800aac2:	4b0c      	ldr	r3, [pc, #48]	; (800aaf4 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x80>)
 800aac4:	681b      	ldr	r3, [r3, #0]
 800aac6:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 800aaca:	b10a      	cbz	r2, 800aad0 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5c>
 800aacc:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 800aace:	b900      	cbnz	r0, 800aad2 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5e>
 800aad0:	6898      	ldr	r0, [r3, #8]
 800aad2:	6801      	ldr	r1, [r0, #0]
 800aad4:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 800aad8:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 800aadc:	2701      	movs	r7, #1
 800aade:	9702      	str	r7, [sp, #8]
 800aae0:	f896 6028 	ldrb.w	r6, [r6, #40]	; 0x28
 800aae4:	e9cd 5600 	strd	r5, r6, [sp]
 800aae8:	688d      	ldr	r5, [r1, #8]
 800aaea:	4621      	mov	r1, r4
 800aaec:	47a8      	blx	r5
 800aaee:	b008      	add	sp, #32
 800aaf0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800aaf4:	20012188 	.word	0x20012188

0800aaf8 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht>:
 800aaf8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800aafc:	b091      	sub	sp, #68	; 0x44
 800aafe:	4699      	mov	r9, r3
 800ab00:	f8dd a06c 	ldr.w	sl, [sp, #108]	; 0x6c
 800ab04:	9c1d      	ldr	r4, [sp, #116]	; 0x74
 800ab06:	f9ba 300c 	ldrsh.w	r3, [sl, #12]
 800ab0a:	f8ad 303e 	strh.w	r3, [sp, #62]	; 0x3e
 800ab0e:	4680      	mov	r8, r0
 800ab10:	4617      	mov	r7, r2
 800ab12:	a80e      	add	r0, sp, #56	; 0x38
 800ab14:	f9ba 2008 	ldrsh.w	r2, [sl, #8]
 800ab18:	f8ad 203c 	strh.w	r2, [sp, #60]	; 0x3c
 800ab1c:	2500      	movs	r5, #0
 800ab1e:	910d      	str	r1, [sp, #52]	; 0x34
 800ab20:	950e      	str	r5, [sp, #56]	; 0x38
 800ab22:	f000 fe3b 	bl	800b79c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 800ab26:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 800ab28:	f8d9 6000 	ldr.w	r6, [r9]
 800ab2c:	6818      	ldr	r0, [r3, #0]
 800ab2e:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 800ab30:	f9b4 b000 	ldrsh.w	fp, [r4]
 800ab34:	f9b3 2000 	ldrsh.w	r2, [r3]
 800ab38:	eb02 0c06 	add.w	ip, r2, r6
 800ab3c:	1b80      	subs	r0, r0, r6
 800ab3e:	ebab 0e0c 	sub.w	lr, fp, ip
 800ab42:	4570      	cmp	r0, lr
 800ab44:	f340 80bd 	ble.w	800acc2 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x1ca>
 800ab48:	88a1      	ldrh	r1, [r4, #4]
 800ab4a:	4459      	add	r1, fp
 800ab4c:	b209      	sxth	r1, r1
 800ab4e:	458c      	cmp	ip, r1
 800ab50:	f300 80b7 	bgt.w	800acc2 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x1ca>
 800ab54:	f8bd 3080 	ldrh.w	r3, [sp, #128]	; 0x80
 800ab58:	ed97 4a09 	vldr	s8, [r7, #36]	; 0x24
 800ab5c:	edd7 4a0b 	vldr	s9, [r7, #44]	; 0x2c
 800ab60:	edd9 6a07 	vldr	s13, [r9, #28]
 800ab64:	edd9 1a0a 	vldr	s3, [r9, #40]	; 0x28
 800ab68:	ed99 2a0d 	vldr	s4, [r9, #52]	; 0x34
 800ab6c:	4283      	cmp	r3, r0
 800ab6e:	bfa8      	it	ge
 800ab70:	4603      	movge	r3, r0
 800ab72:	ee07 3a90 	vmov	s15, r3
 800ab76:	eeb8 5ae7 	vcvt.f32.s32	s10, s15
 800ab7a:	edd7 7a0d 	vldr	s15, [r7, #52]	; 0x34
 800ab7e:	ee25 4a04 	vmul.f32	s8, s10, s8
 800ab82:	ee65 4a24 	vmul.f32	s9, s10, s9
 800ab86:	ee25 5a27 	vmul.f32	s10, s10, s15
 800ab8a:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 800ab8e:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 800ab92:	45e3      	cmp	fp, ip
 800ab94:	ee71 0aa4 	vadd.f32	s1, s3, s9
 800ab98:	ee32 1a05 	vadd.f32	s2, s4, s10
 800ab9c:	ee36 0a84 	vadd.f32	s0, s13, s8
 800aba0:	ee61 1a87 	vmul.f32	s3, s3, s14
 800aba4:	ee22 2a07 	vmul.f32	s4, s4, s14
 800aba8:	f340 808e 	ble.w	800acc8 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x1d0>
 800abac:	fb9e f5f3 	sdiv	r5, lr, r3
 800abb0:	ee07 5a10 	vmov	s14, r5
 800abb4:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800abb8:	2d00      	cmp	r5, #0
 800abba:	fb03 e415 	mls	r4, r3, r5, lr
 800abbe:	eea7 0a04 	vfma.f32	s0, s14, s8
 800abc2:	eee7 0a24 	vfma.f32	s1, s14, s9
 800abc6:	eea7 1a05 	vfma.f32	s2, s14, s10
 800abca:	dd13      	ble.n	800abf4 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xfc>
 800abcc:	ee70 6a44 	vsub.f32	s13, s0, s8
 800abd0:	ee70 1ae4 	vsub.f32	s3, s1, s9
 800abd4:	eef5 6a40 	vcmp.f32	s13, #0.0
 800abd8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800abdc:	bf18      	it	ne
 800abde:	ee87 7aa6 	vdivne.f32	s14, s15, s13
 800abe2:	ee31 2a45 	vsub.f32	s4, s2, s10
 800abe6:	bf08      	it	eq
 800abe8:	eeb0 7a67 	vmoveq.f32	s14, s15
 800abec:	ee61 1a87 	vmul.f32	s3, s3, s14
 800abf0:	ee22 2a07 	vmul.f32	s4, s4, s14
 800abf4:	fb05 f703 	mul.w	r7, r5, r3
 800abf8:	1bc0      	subs	r0, r0, r7
 800abfa:	443e      	add	r6, r7
 800abfc:	1997      	adds	r7, r2, r6
 800abfe:	4407      	add	r7, r0
 800ac00:	42b9      	cmp	r1, r7
 800ac02:	bfbc      	itt	lt
 800ac04:	1a88      	sublt	r0, r1, r2
 800ac06:	1b80      	sublt	r0, r0, r6
 800ac08:	2800      	cmp	r0, #0
 800ac0a:	dd5a      	ble.n	800acc2 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x1ca>
 800ac0c:	fb90 f1f3 	sdiv	r1, r0, r3
 800ac10:	fb03 0211 	mls	r2, r3, r1, r0
 800ac14:	b90a      	cbnz	r2, 800ac1a <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x122>
 800ac16:	3901      	subs	r1, #1
 800ac18:	461a      	mov	r2, r3
 800ac1a:	eec7 3a80 	vdiv.f32	s7, s15, s0
 800ac1e:	f89d b07c 	ldrb.w	fp, [sp, #124]	; 0x7c
 800ac22:	44a4      	add	ip, r4
 800ac24:	fb03 c505 	mla	r5, r3, r5, ip
 800ac28:	2900      	cmp	r1, #0
 800ac2a:	bfcc      	ite	gt
 800ac2c:	469e      	movgt	lr, r3
 800ac2e:	4696      	movle	lr, r2
 800ac30:	eef0 6a42 	vmov.f32	s13, s4
 800ac34:	ee60 2aa3 	vmul.f32	s5, s1, s7
 800ac38:	ee21 3a23 	vmul.f32	s6, s2, s7
 800ac3c:	ee72 7ae1 	vsub.f32	s15, s5, s3
 800ac40:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 800ac44:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 800ac48:	eeb0 7a61 	vmov.f32	s14, s3
 800ac4c:	ee17 0a90 	vmov	r0, s15
 800ac50:	ee73 7a42 	vsub.f32	s15, s6, s4
 800ac54:	fb90 f6f3 	sdiv	r6, r0, r3
 800ac58:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 800ac5c:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 800ac60:	ee17 0a90 	vmov	r0, s15
 800ac64:	fb90 f7f3 	sdiv	r7, r0, r3
 800ac68:	f8d8 0004 	ldr.w	r0, [r8, #4]
 800ac6c:	900c      	str	r0, [sp, #48]	; 0x30
 800ac6e:	f8d0 8000 	ldr.w	r8, [r0]
 800ac72:	981c      	ldr	r0, [sp, #112]	; 0x70
 800ac74:	e9cd ab0a 	strd	sl, fp, [sp, #40]	; 0x28
 800ac78:	f9bd a03e 	ldrsh.w	sl, [sp, #62]	; 0x3e
 800ac7c:	f8cd a024 	str.w	sl, [sp, #36]	; 0x24
 800ac80:	f9bd a03c 	ldrsh.w	sl, [sp, #60]	; 0x3c
 800ac84:	f8cd a020 	str.w	sl, [sp, #32]
 800ac88:	f9b0 a002 	ldrsh.w	sl, [r0, #2]
 800ac8c:	980d      	ldr	r0, [sp, #52]	; 0x34
 800ac8e:	f8d9 9014 	ldr.w	r9, [r9, #20]
 800ac92:	9603      	str	r6, [sp, #12]
 800ac94:	e9cd 7004 	strd	r7, r0, [sp, #16]
 800ac98:	ee16 0a90 	vmov	r0, s13
 800ac9c:	fb07 0704 	mla	r7, r7, r4, r0
 800aca0:	ee17 0a10 	vmov	r0, s14
 800aca4:	fb06 0604 	mla	r6, r6, r4, r0
 800aca8:	e9cd 3600 	strd	r3, r6, [sp]
 800acac:	44ca      	add	sl, r9
 800acae:	f8cd a01c 	str.w	sl, [sp, #28]
 800acb2:	9506      	str	r5, [sp, #24]
 800acb4:	9702      	str	r7, [sp, #8]
 800acb6:	f8d8 5008 	ldr.w	r5, [r8, #8]
 800acba:	980c      	ldr	r0, [sp, #48]	; 0x30
 800acbc:	ebae 0304 	sub.w	r3, lr, r4
 800acc0:	47a8      	blx	r5
 800acc2:	b011      	add	sp, #68	; 0x44
 800acc4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800acc8:	462c      	mov	r4, r5
 800acca:	e797      	b.n	800abfc <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x104>

0800accc <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE>:
 800accc:	b570      	push	{r4, r5, r6, lr}
 800acce:	4604      	mov	r4, r0
 800acd0:	2500      	movs	r5, #0
 800acd2:	7223      	strb	r3, [r4, #8]
 800acd4:	9804      	ldr	r0, [sp, #16]
 800acd6:	f89d 3014 	ldrb.w	r3, [sp, #20]
 800acda:	8025      	strh	r5, [r4, #0]
 800acdc:	6061      	str	r1, [r4, #4]
 800acde:	7263      	strb	r3, [r4, #9]
 800ace0:	60e0      	str	r0, [r4, #12]
 800ace2:	8222      	strh	r2, [r4, #16]
 800ace4:	8265      	strh	r5, [r4, #18]
 800ace6:	82a5      	strh	r5, [r4, #20]
 800ace8:	82e5      	strh	r5, [r4, #22]
 800acea:	8325      	strh	r5, [r4, #24]
 800acec:	8365      	strh	r5, [r4, #26]
 800acee:	83a5      	strh	r5, [r4, #28]
 800acf0:	77a5      	strb	r5, [r4, #30]
 800acf2:	6803      	ldr	r3, [r0, #0]
 800acf4:	695b      	ldr	r3, [r3, #20]
 800acf6:	4798      	blx	r3
 800acf8:	4606      	mov	r6, r0
 800acfa:	b1f8      	cbz	r0, 800ad3c <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE+0x70>
 800acfc:	68e0      	ldr	r0, [r4, #12]
 800acfe:	6803      	ldr	r3, [r0, #0]
 800ad00:	4631      	mov	r1, r6
 800ad02:	68db      	ldr	r3, [r3, #12]
 800ad04:	4798      	blx	r3
 800ad06:	7b43      	ldrb	r3, [r0, #13]
 800ad08:	7a82      	ldrb	r2, [r0, #10]
 800ad0a:	005b      	lsls	r3, r3, #1
 800ad0c:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800ad10:	4313      	orrs	r3, r2
 800ad12:	83a3      	strh	r3, [r4, #28]
 800ad14:	7a63      	ldrb	r3, [r4, #9]
 800ad16:	2b04      	cmp	r3, #4
 800ad18:	4605      	mov	r5, r0
 800ad1a:	d10f      	bne.n	800ad3c <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE+0x70>
 800ad1c:	68e0      	ldr	r0, [r4, #12]
 800ad1e:	6803      	ldr	r3, [r0, #0]
 800ad20:	462a      	mov	r2, r5
 800ad22:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800ad24:	4631      	mov	r1, r6
 800ad26:	4798      	blx	r3
 800ad28:	7b6b      	ldrb	r3, [r5, #13]
 800ad2a:	005b      	lsls	r3, r3, #1
 800ad2c:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800ad30:	7aab      	ldrb	r3, [r5, #10]
 800ad32:	4313      	orrs	r3, r2
 800ad34:	4418      	add	r0, r3
 800ad36:	8ba3      	ldrh	r3, [r4, #28]
 800ad38:	4418      	add	r0, r3
 800ad3a:	83a0      	strh	r0, [r4, #28]
 800ad3c:	4620      	mov	r0, r4
 800ad3e:	bd70      	pop	{r4, r5, r6, pc}

0800ad40 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>:
 800ad40:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ad44:	2400      	movs	r4, #0
 800ad46:	b085      	sub	sp, #20
 800ad48:	4681      	mov	r9, r0
 800ad4a:	4688      	mov	r8, r1
 800ad4c:	4692      	mov	sl, r2
 800ad4e:	469b      	mov	fp, r3
 800ad50:	4627      	mov	r7, r4
 800ad52:	4625      	mov	r5, r4
 800ad54:	4626      	mov	r6, r4
 800ad56:	4554      	cmp	r4, sl
 800ad58:	da2a      	bge.n	800adb0 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 800ad5a:	2300      	movs	r3, #0
 800ad5c:	9303      	str	r3, [sp, #12]
 800ad5e:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 800ad62:	429d      	cmp	r5, r3
 800ad64:	d004      	beq.n	800ad70 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x30>
 800ad66:	f242 030b 	movw	r3, #8203	; 0x200b
 800ad6a:	429d      	cmp	r5, r3
 800ad6c:	bf18      	it	ne
 800ad6e:	462f      	movne	r7, r5
 800ad70:	ab03      	add	r3, sp, #12
 800ad72:	4642      	mov	r2, r8
 800ad74:	4659      	mov	r1, fp
 800ad76:	4648      	mov	r0, r9
 800ad78:	f002 fb6e 	bl	800d458 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800ad7c:	4605      	mov	r5, r0
 800ad7e:	b1b8      	cbz	r0, 800adb0 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 800ad80:	280a      	cmp	r0, #10
 800ad82:	d015      	beq.n	800adb0 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 800ad84:	9a03      	ldr	r2, [sp, #12]
 800ad86:	b18a      	cbz	r2, 800adac <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x6c>
 800ad88:	7b50      	ldrb	r0, [r2, #13]
 800ad8a:	7a93      	ldrb	r3, [r2, #10]
 800ad8c:	8895      	ldrh	r5, [r2, #4]
 800ad8e:	0040      	lsls	r0, r0, #1
 800ad90:	f400 7080 	and.w	r0, r0, #256	; 0x100
 800ad94:	4303      	orrs	r3, r0
 800ad96:	9301      	str	r3, [sp, #4]
 800ad98:	f8d8 3000 	ldr.w	r3, [r8]
 800ad9c:	4639      	mov	r1, r7
 800ad9e:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800ada0:	4640      	mov	r0, r8
 800ada2:	4798      	blx	r3
 800ada4:	9b01      	ldr	r3, [sp, #4]
 800ada6:	4418      	add	r0, r3
 800ada8:	4406      	add	r6, r0
 800adaa:	b2b6      	uxth	r6, r6
 800adac:	3401      	adds	r4, #1
 800adae:	e7d2      	b.n	800ad56 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x16>
 800adb0:	4630      	mov	r0, r6
 800adb2:	b005      	add	sp, #20
 800adb4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800adb8 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>:
 800adb8:	2a02      	cmp	r2, #2
 800adba:	b530      	push	{r4, r5, lr}
 800adbc:	d011      	beq.n	800ade2 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x2a>
 800adbe:	2a03      	cmp	r2, #3
 800adc0:	d01c      	beq.n	800adfc <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x44>
 800adc2:	2a01      	cmp	r2, #1
 800adc4:	d10c      	bne.n	800ade0 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 800adc6:	888b      	ldrh	r3, [r1, #4]
 800adc8:	f9b0 2004 	ldrsh.w	r2, [r0, #4]
 800adcc:	8801      	ldrh	r1, [r0, #0]
 800adce:	8844      	ldrh	r4, [r0, #2]
 800add0:	8004      	strh	r4, [r0, #0]
 800add2:	1a9b      	subs	r3, r3, r2
 800add4:	1a5b      	subs	r3, r3, r1
 800add6:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 800adda:	8043      	strh	r3, [r0, #2]
 800addc:	8081      	strh	r1, [r0, #4]
 800adde:	80c2      	strh	r2, [r0, #6]
 800ade0:	bd30      	pop	{r4, r5, pc}
 800ade2:	88cb      	ldrh	r3, [r1, #6]
 800ade4:	88c2      	ldrh	r2, [r0, #6]
 800ade6:	1a9b      	subs	r3, r3, r2
 800ade8:	8842      	ldrh	r2, [r0, #2]
 800adea:	1a9b      	subs	r3, r3, r2
 800adec:	888a      	ldrh	r2, [r1, #4]
 800adee:	8881      	ldrh	r1, [r0, #4]
 800adf0:	8043      	strh	r3, [r0, #2]
 800adf2:	1a52      	subs	r2, r2, r1
 800adf4:	8801      	ldrh	r1, [r0, #0]
 800adf6:	1a52      	subs	r2, r2, r1
 800adf8:	8002      	strh	r2, [r0, #0]
 800adfa:	e7f1      	b.n	800ade0 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 800adfc:	88cb      	ldrh	r3, [r1, #6]
 800adfe:	f9b0 2006 	ldrsh.w	r2, [r0, #6]
 800ae02:	8841      	ldrh	r1, [r0, #2]
 800ae04:	f9b0 5000 	ldrsh.w	r5, [r0]
 800ae08:	f9b0 4004 	ldrsh.w	r4, [r0, #4]
 800ae0c:	8045      	strh	r5, [r0, #2]
 800ae0e:	1a9b      	subs	r3, r3, r2
 800ae10:	1a5b      	subs	r3, r3, r1
 800ae12:	8003      	strh	r3, [r0, #0]
 800ae14:	8082      	strh	r2, [r0, #4]
 800ae16:	80c4      	strh	r4, [r0, #6]
 800ae18:	e7e2      	b.n	800ade0 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>

0800ae1a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>:
 800ae1a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ae1e:	b09f      	sub	sp, #124	; 0x7c
 800ae20:	9116      	str	r1, [sp, #88]	; 0x58
 800ae22:	9317      	str	r3, [sp, #92]	; 0x5c
 800ae24:	9929      	ldr	r1, [sp, #164]	; 0xa4
 800ae26:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 800ae28:	8809      	ldrh	r1, [r1, #0]
 800ae2a:	889b      	ldrh	r3, [r3, #4]
 800ae2c:	f8dd 80a8 	ldr.w	r8, [sp, #168]	; 0xa8
 800ae30:	9212      	str	r2, [sp, #72]	; 0x48
 800ae32:	440b      	add	r3, r1
 800ae34:	b21b      	sxth	r3, r3
 800ae36:	9310      	str	r3, [sp, #64]	; 0x40
 800ae38:	f8d8 3000 	ldr.w	r3, [r8]
 800ae3c:	f89d 20b8 	ldrb.w	r2, [sp, #184]	; 0xb8
 800ae40:	7a59      	ldrb	r1, [r3, #9]
 800ae42:	7a1b      	ldrb	r3, [r3, #8]
 800ae44:	9315      	str	r3, [sp, #84]	; 0x54
 800ae46:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 800ae48:	9011      	str	r0, [sp, #68]	; 0x44
 800ae4a:	f89d b0ac 	ldrb.w	fp, [sp, #172]	; 0xac
 800ae4e:	9114      	str	r1, [sp, #80]	; 0x50
 800ae50:	f9b3 5000 	ldrsh.w	r5, [r3]
 800ae54:	2a00      	cmp	r2, #0
 800ae56:	d067      	beq.n	800af28 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x10e>
 800ae58:	f898 3010 	ldrb.w	r3, [r8, #16]
 800ae5c:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 800ae5e:	2b04      	cmp	r3, #4
 800ae60:	bf14      	ite	ne
 800ae62:	2301      	movne	r3, #1
 800ae64:	2302      	moveq	r3, #2
 800ae66:	4413      	add	r3, r2
 800ae68:	f04f 0900 	mov.w	r9, #0
 800ae6c:	930f      	str	r3, [sp, #60]	; 0x3c
 800ae6e:	f8cd 9038 	str.w	r9, [sp, #56]	; 0x38
 800ae72:	464c      	mov	r4, r9
 800ae74:	f8cd 9034 	str.w	r9, [sp, #52]	; 0x34
 800ae78:	e9dd 320e 	ldrd	r3, r2, [sp, #56]	; 0x38
 800ae7c:	4293      	cmp	r3, r2
 800ae7e:	f280 808c 	bge.w	800af9a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x180>
 800ae82:	2300      	movs	r3, #0
 800ae84:	931c      	str	r3, [sp, #112]	; 0x70
 800ae86:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 800ae8a:	429c      	cmp	r4, r3
 800ae8c:	d006      	beq.n	800ae9c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x82>
 800ae8e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800ae90:	f242 020b 	movw	r2, #8203	; 0x200b
 800ae94:	4294      	cmp	r4, r2
 800ae96:	bf18      	it	ne
 800ae98:	4623      	movne	r3, r4
 800ae9a:	930d      	str	r3, [sp, #52]	; 0x34
 800ae9c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800ae9e:	992d      	ldr	r1, [sp, #180]	; 0xb4
 800aea0:	f8d8 2000 	ldr.w	r2, [r8]
 800aea4:	428b      	cmp	r3, r1
 800aea6:	db41      	blt.n	800af2c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x112>
 800aea8:	6813      	ldr	r3, [r2, #0]
 800aeaa:	4610      	mov	r0, r2
 800aeac:	695b      	ldr	r3, [r3, #20]
 800aeae:	4798      	blx	r3
 800aeb0:	4604      	mov	r4, r0
 800aeb2:	f8d8 0000 	ldr.w	r0, [r8]
 800aeb6:	6803      	ldr	r3, [r0, #0]
 800aeb8:	aa1d      	add	r2, sp, #116	; 0x74
 800aeba:	689e      	ldr	r6, [r3, #8]
 800aebc:	4621      	mov	r1, r4
 800aebe:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
 800aec2:	47b0      	blx	r6
 800aec4:	901c      	str	r0, [sp, #112]	; 0x70
 800aec6:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 800aeca:	429c      	cmp	r4, r3
 800aecc:	f000 80e9 	beq.w	800b0a2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x288>
 800aed0:	f242 030b 	movw	r3, #8203	; 0x200b
 800aed4:	429c      	cmp	r4, r3
 800aed6:	f000 80e4 	beq.w	800b0a2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x288>
 800aeda:	2c00      	cmp	r4, #0
 800aedc:	f000 80f6 	beq.w	800b0cc <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2b2>
 800aee0:	2c0a      	cmp	r4, #10
 800aee2:	d060      	beq.n	800afa6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18c>
 800aee4:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 800aee6:	b36a      	cbz	r2, 800af44 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x12a>
 800aee8:	8894      	ldrh	r4, [r2, #4]
 800aeea:	f1bb 0f00 	cmp.w	fp, #0
 800aeee:	d03b      	beq.n	800af68 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x14e>
 800aef0:	f892 900d 	ldrb.w	r9, [r2, #13]
 800aef4:	ea4f 0949 	mov.w	r9, r9, lsl #1
 800aef8:	f409 7380 	and.w	r3, r9, #256	; 0x100
 800aefc:	f892 900a 	ldrb.w	r9, [r2, #10]
 800af00:	f1bb 0f01 	cmp.w	fp, #1
 800af04:	ea49 0903 	orr.w	r9, r9, r3
 800af08:	d134      	bne.n	800af74 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x15a>
 800af0a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800af0c:	eba5 0509 	sub.w	r5, r5, r9
 800af10:	2b00      	cmp	r3, #0
 800af12:	d14f      	bne.n	800afb4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19a>
 800af14:	9a14      	ldr	r2, [sp, #80]	; 0x50
 800af16:	eb09 0305 	add.w	r3, r9, r5
 800af1a:	4413      	add	r3, r2
 800af1c:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 800af1e:	f9b2 2000 	ldrsh.w	r2, [r2]
 800af22:	4293      	cmp	r3, r2
 800af24:	da51      	bge.n	800afca <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b0>
 800af26:	e038      	b.n	800af9a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x180>
 800af28:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 800af2a:	e79d      	b.n	800ae68 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x4e>
 800af2c:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
 800af30:	9301      	str	r3, [sp, #4]
 800af32:	ab1d      	add	r3, sp, #116	; 0x74
 800af34:	9300      	str	r3, [sp, #0]
 800af36:	4659      	mov	r1, fp
 800af38:	ab1c      	add	r3, sp, #112	; 0x70
 800af3a:	982c      	ldr	r0, [sp, #176]	; 0xb0
 800af3c:	f002 fae4 	bl	800d508 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>
 800af40:	4604      	mov	r4, r0
 800af42:	e7c0      	b.n	800aec6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xac>
 800af44:	f8d8 0000 	ldr.w	r0, [r8]
 800af48:	6803      	ldr	r3, [r0, #0]
 800af4a:	691b      	ldr	r3, [r3, #16]
 800af4c:	4798      	blx	r3
 800af4e:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 800af52:	4298      	cmp	r0, r3
 800af54:	f000 80a5 	beq.w	800b0a2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x288>
 800af58:	f242 030b 	movw	r3, #8203	; 0x200b
 800af5c:	4298      	cmp	r0, r3
 800af5e:	f000 80a0 	beq.w	800b0a2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x288>
 800af62:	f1bb 0f00 	cmp.w	fp, #0
 800af66:	d100      	bne.n	800af6a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x150>
 800af68:	444d      	add	r5, r9
 800af6a:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 800af6c:	2a00      	cmp	r2, #0
 800af6e:	d1bf      	bne.n	800aef0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xd6>
 800af70:	4691      	mov	r9, r2
 800af72:	e096      	b.n	800b0a2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x288>
 800af74:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800af76:	2b00      	cmp	r3, #0
 800af78:	f000 80aa 	beq.w	800b0d0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2b6>
 800af7c:	f1bb 0f00 	cmp.w	fp, #0
 800af80:	d118      	bne.n	800afb4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19a>
 800af82:	f8d8 0000 	ldr.w	r0, [r8]
 800af86:	990d      	ldr	r1, [sp, #52]	; 0x34
 800af88:	6803      	ldr	r3, [r0, #0]
 800af8a:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800af8c:	4798      	blx	r3
 800af8e:	4405      	add	r5, r0
 800af90:	9b15      	ldr	r3, [sp, #84]	; 0x54
 800af92:	9a10      	ldr	r2, [sp, #64]	; 0x40
 800af94:	1aeb      	subs	r3, r5, r3
 800af96:	4293      	cmp	r3, r2
 800af98:	dd17      	ble.n	800afca <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b0>
 800af9a:	2c00      	cmp	r4, #0
 800af9c:	f000 8096 	beq.w	800b0cc <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2b2>
 800afa0:	2c0a      	cmp	r4, #10
 800afa2:	f040 8084 	bne.w	800b0ae <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x294>
 800afa6:	240a      	movs	r4, #10
 800afa8:	fab4 f084 	clz	r0, r4
 800afac:	0940      	lsrs	r0, r0, #5
 800afae:	b01f      	add	sp, #124	; 0x7c
 800afb0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800afb4:	f8d8 0000 	ldr.w	r0, [r8]
 800afb8:	990d      	ldr	r1, [sp, #52]	; 0x34
 800afba:	6803      	ldr	r3, [r0, #0]
 800afbc:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800afbe:	4798      	blx	r3
 800afc0:	f1bb 0f01 	cmp.w	fp, #1
 800afc4:	eba5 0500 	sub.w	r5, r5, r0
 800afc8:	d0a4      	beq.n	800af14 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xfa>
 800afca:	981c      	ldr	r0, [sp, #112]	; 0x70
 800afcc:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 800afce:	f990 1009 	ldrsb.w	r1, [r0, #9]
 800afd2:	f9b3 6000 	ldrsh.w	r6, [r3]
 800afd6:	7b43      	ldrb	r3, [r0, #13]
 800afd8:	015b      	lsls	r3, r3, #5
 800afda:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800afde:	7983      	ldrb	r3, [r0, #6]
 800afe0:	4429      	add	r1, r5
 800afe2:	4313      	orrs	r3, r2
 800afe4:	440b      	add	r3, r1
 800afe6:	42b3      	cmp	r3, r6
 800afe8:	db5b      	blt.n	800b0a2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x288>
 800afea:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800afec:	4299      	cmp	r1, r3
 800afee:	da58      	bge.n	800b0a2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x288>
 800aff0:	f8d8 0000 	ldr.w	r0, [r8]
 800aff4:	6803      	ldr	r3, [r0, #0]
 800aff6:	42ae      	cmp	r6, r5
 800aff8:	bfc8      	it	gt
 800affa:	1b76      	subgt	r6, r6, r5
 800affc:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800affe:	bfcc      	ite	gt
 800b000:	b2b6      	uxthgt	r6, r6
 800b002:	2600      	movle	r6, #0
 800b004:	4798      	blx	r3
 800b006:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 800b008:	7b5a      	ldrb	r2, [r3, #13]
 800b00a:	00d1      	lsls	r1, r2, #3
 800b00c:	f401 7780 	and.w	r7, r1, #256	; 0x100
 800b010:	7a19      	ldrb	r1, [r3, #8]
 800b012:	4339      	orrs	r1, r7
 800b014:	0657      	lsls	r7, r2, #25
 800b016:	9f17      	ldr	r7, [sp, #92]	; 0x5c
 800b018:	bf44      	itt	mi
 800b01a:	f5a1 7100 	submi.w	r1, r1, #512	; 0x200
 800b01e:	b209      	sxthmi	r1, r1
 800b020:	19c7      	adds	r7, r0, r7
 800b022:	1a7f      	subs	r7, r7, r1
 800b024:	9929      	ldr	r1, [sp, #164]	; 0xa4
 800b026:	b2bf      	uxth	r7, r7
 800b028:	f9b1 1002 	ldrsh.w	r1, [r1, #2]
 800b02c:	fa0f fa87 	sxth.w	sl, r7
 800b030:	4551      	cmp	r1, sl
 800b032:	dd3a      	ble.n	800b0aa <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 800b034:	0112      	lsls	r2, r2, #4
 800b036:	79d8      	ldrb	r0, [r3, #7]
 800b038:	f402 7280 	and.w	r2, r2, #256	; 0x100
 800b03c:	4302      	orrs	r2, r0
 800b03e:	4492      	add	sl, r2
 800b040:	4551      	cmp	r1, sl
 800b042:	dc2e      	bgt.n	800b0a2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x288>
 800b044:	1bcf      	subs	r7, r1, r7
 800b046:	b2bf      	uxth	r7, r7
 800b048:	468a      	mov	sl, r1
 800b04a:	9319      	str	r3, [sp, #100]	; 0x64
 800b04c:	9b11      	ldr	r3, [sp, #68]	; 0x44
 800b04e:	f8d8 0000 	ldr.w	r0, [r8]
 800b052:	681a      	ldr	r2, [r3, #0]
 800b054:	6801      	ldr	r1, [r0, #0]
 800b056:	6c13      	ldr	r3, [r2, #64]	; 0x40
 800b058:	9a1d      	ldr	r2, [sp, #116]	; 0x74
 800b05a:	9313      	str	r3, [sp, #76]	; 0x4c
 800b05c:	9218      	str	r2, [sp, #96]	; 0x60
 800b05e:	6b89      	ldr	r1, [r1, #56]	; 0x38
 800b060:	4788      	blx	r1
 800b062:	f898 1006 	ldrb.w	r1, [r8, #6]
 800b066:	910b      	str	r1, [sp, #44]	; 0x2c
 800b068:	f898 100e 	ldrb.w	r1, [r8, #14]
 800b06c:	910a      	str	r1, [sp, #40]	; 0x28
 800b06e:	f89d 106f 	ldrb.w	r1, [sp, #111]	; 0x6f
 800b072:	9109      	str	r1, [sp, #36]	; 0x24
 800b074:	9b19      	ldr	r3, [sp, #100]	; 0x64
 800b076:	f8d8 1008 	ldr.w	r1, [r8, #8]
 800b07a:	9305      	str	r3, [sp, #20]
 800b07c:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 800b07e:	9a18      	ldr	r2, [sp, #96]	; 0x60
 800b080:	9206      	str	r2, [sp, #24]
 800b082:	e9cd 0107 	strd	r0, r1, [sp, #28]
 800b086:	e9cd 7303 	strd	r7, r3, [sp, #12]
 800b08a:	e9cd a601 	strd	sl, r6, [sp, #4]
 800b08e:	442e      	add	r6, r5
 800b090:	b236      	sxth	r6, r6
 800b092:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800b094:	9600      	str	r6, [sp, #0]
 800b096:	681a      	ldr	r2, [r3, #0]
 800b098:	9916      	ldr	r1, [sp, #88]	; 0x58
 800b09a:	685b      	ldr	r3, [r3, #4]
 800b09c:	9811      	ldr	r0, [sp, #68]	; 0x44
 800b09e:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 800b0a0:	47b0      	blx	r6
 800b0a2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800b0a4:	3301      	adds	r3, #1
 800b0a6:	930e      	str	r3, [sp, #56]	; 0x38
 800b0a8:	e6e6      	b.n	800ae78 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x5e>
 800b0aa:	2700      	movs	r7, #0
 800b0ac:	e7cd      	b.n	800b04a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x230>
 800b0ae:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 800b0b0:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 800b0b2:	3501      	adds	r5, #1
 800b0b4:	429d      	cmp	r5, r3
 800b0b6:	f6bf af77 	bge.w	800afa8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18e>
 800b0ba:	4659      	mov	r1, fp
 800b0bc:	982c      	ldr	r0, [sp, #176]	; 0xb0
 800b0be:	f7f7 ff49 	bl	8002f54 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 800b0c2:	4604      	mov	r4, r0
 800b0c4:	b110      	cbz	r0, 800b0cc <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2b2>
 800b0c6:	280a      	cmp	r0, #10
 800b0c8:	d1f2      	bne.n	800b0b0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x296>
 800b0ca:	e76c      	b.n	800afa6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18c>
 800b0cc:	2400      	movs	r4, #0
 800b0ce:	e76b      	b.n	800afa8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18e>
 800b0d0:	f1bb 0f00 	cmp.w	fp, #0
 800b0d4:	f43f af5c 	beq.w	800af90 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x176>
 800b0d8:	e777      	b.n	800afca <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b0>

0800b0da <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>:
 800b0da:	b530      	push	{r4, r5, lr}
 800b0dc:	8a44      	ldrh	r4, [r0, #18]
 800b0de:	8ac5      	ldrh	r5, [r0, #22]
 800b0e0:	82c3      	strh	r3, [r0, #22]
 800b0e2:	442c      	add	r4, r5
 800b0e4:	1ae4      	subs	r4, r4, r3
 800b0e6:	8244      	strh	r4, [r0, #18]
 800b0e8:	8b03      	ldrh	r3, [r0, #24]
 800b0ea:	8a84      	ldrh	r4, [r0, #20]
 800b0ec:	4422      	add	r2, r4
 800b0ee:	440c      	add	r4, r1
 800b0f0:	1a59      	subs	r1, r3, r1
 800b0f2:	8342      	strh	r2, [r0, #26]
 800b0f4:	8284      	strh	r4, [r0, #20]
 800b0f6:	8301      	strh	r1, [r0, #24]
 800b0f8:	bd30      	pop	{r4, r5, pc}

0800b0fa <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb>:
 800b0fa:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b0fe:	7a43      	ldrb	r3, [r0, #9]
 800b100:	1eda      	subs	r2, r3, #3
 800b102:	b087      	sub	sp, #28
 800b104:	4604      	mov	r4, r0
 800b106:	b2d2      	uxtb	r2, r2
 800b108:	460f      	mov	r7, r1
 800b10a:	2900      	cmp	r1, #0
 800b10c:	d036      	beq.n	800b17c <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x82>
 800b10e:	2a01      	cmp	r2, #1
 800b110:	d932      	bls.n	800b178 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x7e>
 800b112:	1e58      	subs	r0, r3, #1
 800b114:	f1d0 0b00 	rsbs	fp, r0, #0
 800b118:	eb4b 0b00 	adc.w	fp, fp, r0
 800b11c:	1e99      	subs	r1, r3, #2
 800b11e:	424b      	negs	r3, r1
 800b120:	414b      	adcs	r3, r1
 800b122:	9303      	str	r3, [sp, #12]
 800b124:	2300      	movs	r3, #0
 800b126:	e9cd 3301 	strd	r3, r3, [sp, #4]
 800b12a:	2500      	movs	r5, #0
 800b12c:	8265      	strh	r5, [r4, #18]
 800b12e:	82a5      	strh	r5, [r4, #20]
 800b130:	46a9      	mov	r9, r5
 800b132:	f242 0a0b 	movw	sl, #8203	; 0x200b
 800b136:	2300      	movs	r3, #0
 800b138:	9305      	str	r3, [sp, #20]
 800b13a:	8823      	ldrh	r3, [r4, #0]
 800b13c:	2b20      	cmp	r3, #32
 800b13e:	d02b      	beq.n	800b198 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x9e>
 800b140:	eba3 020a 	sub.w	r2, r3, sl
 800b144:	4256      	negs	r6, r2
 800b146:	4156      	adcs	r6, r2
 800b148:	f64f 62ff 	movw	r2, #65279	; 0xfeff
 800b14c:	4293      	cmp	r3, r2
 800b14e:	d004      	beq.n	800b15a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x60>
 800b150:	4553      	cmp	r3, sl
 800b152:	bf16      	itet	ne
 800b154:	4699      	movne	r9, r3
 800b156:	2601      	moveq	r6, #1
 800b158:	2600      	movne	r6, #0
 800b15a:	ab05      	add	r3, sp, #20
 800b15c:	68e2      	ldr	r2, [r4, #12]
 800b15e:	7a21      	ldrb	r1, [r4, #8]
 800b160:	6860      	ldr	r0, [r4, #4]
 800b162:	f002 f979 	bl	800d458 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800b166:	8020      	strh	r0, [r4, #0]
 800b168:	b9c8      	cbnz	r0, 800b19e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xa4>
 800b16a:	8b22      	ldrh	r2, [r4, #24]
 800b16c:	2300      	movs	r3, #0
 800b16e:	4611      	mov	r1, r2
 800b170:	4620      	mov	r0, r4
 800b172:	f7ff ffb2 	bl	800b0da <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 800b176:	e066      	b.n	800b246 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x14c>
 800b178:	468b      	mov	fp, r1
 800b17a:	e7cf      	b.n	800b11c <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x22>
 800b17c:	3b01      	subs	r3, #1
 800b17e:	2a01      	cmp	r2, #1
 800b180:	bf8c      	ite	hi
 800b182:	2200      	movhi	r2, #0
 800b184:	2201      	movls	r2, #1
 800b186:	2b01      	cmp	r3, #1
 800b188:	bf8c      	ite	hi
 800b18a:	2300      	movhi	r3, #0
 800b18c:	2301      	movls	r3, #1
 800b18e:	9202      	str	r2, [sp, #8]
 800b190:	9301      	str	r3, [sp, #4]
 800b192:	9103      	str	r1, [sp, #12]
 800b194:	468b      	mov	fp, r1
 800b196:	e7c8      	b.n	800b12a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x30>
 800b198:	4699      	mov	r9, r3
 800b19a:	2601      	movs	r6, #1
 800b19c:	e7dd      	b.n	800b15a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x60>
 800b19e:	8ae3      	ldrh	r3, [r4, #22]
 800b1a0:	280a      	cmp	r0, #10
 800b1a2:	f103 0301 	add.w	r3, r3, #1
 800b1a6:	82e3      	strh	r3, [r4, #22]
 800b1a8:	d0df      	beq.n	800b16a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x70>
 800b1aa:	9a05      	ldr	r2, [sp, #20]
 800b1ac:	bb42      	cbnz	r2, 800b200 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x106>
 800b1ae:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 800b1b2:	4298      	cmp	r0, r3
 800b1b4:	d001      	beq.n	800b1ba <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xc0>
 800b1b6:	4550      	cmp	r0, sl
 800b1b8:	d1bd      	bne.n	800b136 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800b1ba:	8823      	ldrh	r3, [r4, #0]
 800b1bc:	8b21      	ldrh	r1, [r4, #24]
 800b1be:	2b20      	cmp	r3, #32
 800b1c0:	d001      	beq.n	800b1c6 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xcc>
 800b1c2:	4553      	cmp	r3, sl
 800b1c4:	d131      	bne.n	800b22a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x130>
 800b1c6:	2e00      	cmp	r6, #0
 800b1c8:	bf0a      	itet	eq
 800b1ca:	460d      	moveq	r5, r1
 800b1cc:	4630      	movne	r0, r6
 800b1ce:	2001      	moveq	r0, #1
 800b1d0:	440a      	add	r2, r1
 800b1d2:	8aa3      	ldrh	r3, [r4, #20]
 800b1d4:	f8b4 c010 	ldrh.w	ip, [r4, #16]
 800b1d8:	b292      	uxth	r2, r2
 800b1da:	8322      	strh	r2, [r4, #24]
 800b1dc:	4413      	add	r3, r2
 800b1de:	2f00      	cmp	r7, #0
 800b1e0:	d03a      	beq.n	800b258 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x15e>
 800b1e2:	f1bb 0f00 	cmp.w	fp, #0
 800b1e6:	d102      	bne.n	800b1ee <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xf4>
 800b1e8:	9903      	ldr	r1, [sp, #12]
 800b1ea:	b301      	cbz	r1, 800b22e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x134>
 800b1ec:	b1f8      	cbz	r0, 800b22e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x134>
 800b1ee:	8ba1      	ldrh	r1, [r4, #28]
 800b1f0:	4419      	add	r1, r3
 800b1f2:	458c      	cmp	ip, r1
 800b1f4:	da2a      	bge.n	800b24c <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x152>
 800b1f6:	8a61      	ldrh	r1, [r4, #18]
 800b1f8:	b341      	cbz	r1, 800b24c <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x152>
 800b1fa:	4563      	cmp	r3, ip
 800b1fc:	dd9b      	ble.n	800b136 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800b1fe:	e01c      	b.n	800b23a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x140>
 800b200:	8893      	ldrh	r3, [r2, #4]
 800b202:	8023      	strh	r3, [r4, #0]
 800b204:	f892 800d 	ldrb.w	r8, [r2, #13]
 800b208:	ea4f 0848 	mov.w	r8, r8, lsl #1
 800b20c:	f408 7080 	and.w	r0, r8, #256	; 0x100
 800b210:	f892 800a 	ldrb.w	r8, [r2, #10]
 800b214:	ea48 0800 	orr.w	r8, r8, r0
 800b218:	68e0      	ldr	r0, [r4, #12]
 800b21a:	6803      	ldr	r3, [r0, #0]
 800b21c:	4649      	mov	r1, r9
 800b21e:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800b220:	4798      	blx	r3
 800b222:	eb08 0200 	add.w	r2, r8, r0
 800b226:	b292      	uxth	r2, r2
 800b228:	e7c7      	b.n	800b1ba <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xc0>
 800b22a:	2000      	movs	r0, #0
 800b22c:	e7d0      	b.n	800b1d0 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xd6>
 800b22e:	4563      	cmp	r3, ip
 800b230:	dd81      	ble.n	800b136 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800b232:	8a63      	ldrh	r3, [r4, #18]
 800b234:	2b00      	cmp	r3, #0
 800b236:	f43f af7e 	beq.w	800b136 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800b23a:	2301      	movs	r3, #1
 800b23c:	77a3      	strb	r3, [r4, #30]
 800b23e:	8ba2      	ldrh	r2, [r4, #28]
 800b240:	8b63      	ldrh	r3, [r4, #26]
 800b242:	4413      	add	r3, r2
 800b244:	8363      	strh	r3, [r4, #26]
 800b246:	b007      	add	sp, #28
 800b248:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800b24c:	2300      	movs	r3, #0
 800b24e:	4611      	mov	r1, r2
 800b250:	4620      	mov	r0, r4
 800b252:	f7ff ff42 	bl	800b0da <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 800b256:	e76e      	b.n	800b136 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800b258:	4563      	cmp	r3, ip
 800b25a:	dd14      	ble.n	800b286 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x18c>
 800b25c:	9b02      	ldr	r3, [sp, #8]
 800b25e:	b113      	cbz	r3, 800b266 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x16c>
 800b260:	2301      	movs	r3, #1
 800b262:	460a      	mov	r2, r1
 800b264:	e783      	b.n	800b16e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x74>
 800b266:	9b01      	ldr	r3, [sp, #4]
 800b268:	2b00      	cmp	r3, #0
 800b26a:	f43f af64 	beq.w	800b136 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800b26e:	2800      	cmp	r0, #0
 800b270:	f47f af61 	bne.w	800b136 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800b274:	b116      	cbz	r6, 800b27c <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x182>
 800b276:	2301      	movs	r3, #1
 800b278:	462a      	mov	r2, r5
 800b27a:	e779      	b.n	800b170 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x76>
 800b27c:	8a63      	ldrh	r3, [r4, #18]
 800b27e:	2b00      	cmp	r3, #0
 800b280:	f43f af59 	beq.w	800b136 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800b284:	e7df      	b.n	800b246 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x14c>
 800b286:	2800      	cmp	r0, #0
 800b288:	f47f af55 	bne.w	800b136 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800b28c:	2e00      	cmp	r6, #0
 800b28e:	f43f af52 	beq.w	800b136 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800b292:	2301      	movs	r3, #1
 800b294:	462a      	mov	r2, r5
 800b296:	e7db      	b.n	800b250 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x156>

0800b298 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>:
 800b298:	b530      	push	{r4, r5, lr}
 800b29a:	4605      	mov	r5, r0
 800b29c:	b08b      	sub	sp, #44	; 0x2c
 800b29e:	b191      	cbz	r1, 800b2c6 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x2e>
 800b2a0:	e9cd 3100 	strd	r3, r1, [sp]
 800b2a4:	4613      	mov	r3, r2
 800b2a6:	4601      	mov	r1, r0
 800b2a8:	f8bd 2038 	ldrh.w	r2, [sp, #56]	; 0x38
 800b2ac:	a802      	add	r0, sp, #8
 800b2ae:	f7ff fd0d 	bl	800accc <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE>
 800b2b2:	2401      	movs	r4, #1
 800b2b4:	2100      	movs	r1, #0
 800b2b6:	a802      	add	r0, sp, #8
 800b2b8:	f7ff ff1f 	bl	800b0fa <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb>
 800b2bc:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 800b2c0:	b163      	cbz	r3, 800b2dc <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x44>
 800b2c2:	3401      	adds	r4, #1
 800b2c4:	e7f6      	b.n	800b2b4 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x1c>
 800b2c6:	f002 f9bf 	bl	800d648 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800b2ca:	2401      	movs	r4, #1
 800b2cc:	280a      	cmp	r0, #10
 800b2ce:	4628      	mov	r0, r5
 800b2d0:	bf08      	it	eq
 800b2d2:	3401      	addeq	r4, #1
 800b2d4:	f002 f9b8 	bl	800d648 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800b2d8:	2800      	cmp	r0, #0
 800b2da:	d1f7      	bne.n	800b2cc <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x34>
 800b2dc:	b2a0      	uxth	r0, r4
 800b2de:	b00b      	add	sp, #44	; 0x2c
 800b2e0:	bd30      	pop	{r4, r5, pc}

0800b2e2 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>:
 800b2e2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b2e6:	b0db      	sub	sp, #364	; 0x16c
 800b2e8:	4689      	mov	r9, r1
 800b2ea:	f8dd a190 	ldr.w	sl, [sp, #400]	; 0x190
 800b2ee:	900a      	str	r0, [sp, #40]	; 0x28
 800b2f0:	461c      	mov	r4, r3
 800b2f2:	f1ba 0f00 	cmp.w	sl, #0
 800b2f6:	f000 80a5 	beq.w	800b444 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x162>
 800b2fa:	681b      	ldr	r3, [r3, #0]
 800b2fc:	2b00      	cmp	r3, #0
 800b2fe:	f000 80a1 	beq.w	800b444 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x162>
 800b302:	7ba3      	ldrb	r3, [r4, #14]
 800b304:	2b00      	cmp	r3, #0
 800b306:	f000 809d 	beq.w	800b444 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x162>
 800b30a:	6810      	ldr	r0, [r2, #0]
 800b30c:	6851      	ldr	r1, [r2, #4]
 800b30e:	f9b9 2004 	ldrsh.w	r2, [r9, #4]
 800b312:	f8ad 203c 	strh.w	r2, [sp, #60]	; 0x3c
 800b316:	f10d 0830 	add.w	r8, sp, #48	; 0x30
 800b31a:	4643      	mov	r3, r8
 800b31c:	c303      	stmia	r3!, {r0, r1}
 800b31e:	2500      	movs	r5, #0
 800b320:	f9b9 3006 	ldrsh.w	r3, [r9, #6]
 800b324:	79a2      	ldrb	r2, [r4, #6]
 800b326:	f8ad 303e 	strh.w	r3, [sp, #62]	; 0x3e
 800b32a:	a90e      	add	r1, sp, #56	; 0x38
 800b32c:	4640      	mov	r0, r8
 800b32e:	950e      	str	r5, [sp, #56]	; 0x38
 800b330:	f7ff fd42 	bl	800adb8 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 800b334:	a90e      	add	r1, sp, #56	; 0x38
 800b336:	4608      	mov	r0, r1
 800b338:	79a2      	ldrb	r2, [r4, #6]
 800b33a:	af18      	add	r7, sp, #96	; 0x60
 800b33c:	f7ff fd3c 	bl	800adb8 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 800b340:	4638      	mov	r0, r7
 800b342:	f001 fd4b 	bl	800cddc <_ZN8touchgfx12TextProviderC1Ev>
 800b346:	6820      	ldr	r0, [r4, #0]
 800b348:	6803      	ldr	r3, [r0, #0]
 800b34a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800b34c:	4798      	blx	r3
 800b34e:	9a65      	ldr	r2, [sp, #404]	; 0x194
 800b350:	4603      	mov	r3, r0
 800b352:	4651      	mov	r1, sl
 800b354:	4638      	mov	r0, r7
 800b356:	f001 fd86 	bl	800ce66 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_>
 800b35a:	6820      	ldr	r0, [r4, #0]
 800b35c:	7923      	ldrb	r3, [r4, #4]
 800b35e:	9308      	str	r3, [sp, #32]
 800b360:	6803      	ldr	r3, [r0, #0]
 800b362:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800b364:	4798      	blx	r3
 800b366:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800b36a:	181e      	adds	r6, r3, r0
 800b36c:	42ae      	cmp	r6, r5
 800b36e:	dd06      	ble.n	800b37e <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x9c>
 800b370:	f9b8 2002 	ldrsh.w	r2, [r8, #2]
 800b374:	4282      	cmp	r2, r0
 800b376:	bfa4      	itt	ge
 800b378:	189d      	addge	r5, r3, r2
 800b37a:	fb95 f5f6 	sdivge	r5, r5, r6
 800b37e:	a82e      	add	r0, sp, #184	; 0xb8
 800b380:	f001 fd2c 	bl	800cddc <_ZN8touchgfx12TextProviderC1Ev>
 800b384:	7c23      	ldrb	r3, [r4, #16]
 800b386:	b14b      	cbz	r3, 800b39c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xba>
 800b388:	6820      	ldr	r0, [r4, #0]
 800b38a:	6803      	ldr	r3, [r0, #0]
 800b38c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800b38e:	4798      	blx	r3
 800b390:	9a65      	ldr	r2, [sp, #404]	; 0x194
 800b392:	4603      	mov	r3, r0
 800b394:	4651      	mov	r1, sl
 800b396:	a82e      	add	r0, sp, #184	; 0xb8
 800b398:	f001 fd65 	bl	800ce66 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_>
 800b39c:	7c21      	ldrb	r1, [r4, #16]
 800b39e:	9101      	str	r1, [sp, #4]
 800b3a0:	6821      	ldr	r1, [r4, #0]
 800b3a2:	7963      	ldrb	r3, [r4, #5]
 800b3a4:	9100      	str	r1, [sp, #0]
 800b3a6:	f8bd 203c 	ldrh.w	r2, [sp, #60]	; 0x3c
 800b3aa:	a92e      	add	r1, sp, #184	; 0xb8
 800b3ac:	a810      	add	r0, sp, #64	; 0x40
 800b3ae:	f7ff fc8d 	bl	800accc <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE>
 800b3b2:	7c23      	ldrb	r3, [r4, #16]
 800b3b4:	b9bb      	cbnz	r3, 800b3e6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x104>
 800b3b6:	fa1f fa86 	uxth.w	sl, r6
 800b3ba:	2d00      	cmp	r5, #0
 800b3bc:	dd45      	ble.n	800b44a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x168>
 800b3be:	4638      	mov	r0, r7
 800b3c0:	f002 f942 	bl	800d648 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800b3c4:	2800      	cmp	r0, #0
 800b3c6:	d03d      	beq.n	800b444 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x162>
 800b3c8:	280a      	cmp	r0, #10
 800b3ca:	d1f6      	bne.n	800b3ba <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xd8>
 800b3cc:	f8bd 303a 	ldrh.w	r3, [sp, #58]	; 0x3a
 800b3d0:	4453      	add	r3, sl
 800b3d2:	f8ad 303a 	strh.w	r3, [sp, #58]	; 0x3a
 800b3d6:	f8bd 303e 	ldrh.w	r3, [sp, #62]	; 0x3e
 800b3da:	eba3 030a 	sub.w	r3, r3, sl
 800b3de:	3d01      	subs	r5, #1
 800b3e0:	f8ad 303e 	strh.w	r3, [sp, #62]	; 0x3e
 800b3e4:	e7e9      	b.n	800b3ba <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xd8>
 800b3e6:	0073      	lsls	r3, r6, #1
 800b3e8:	9309      	str	r3, [sp, #36]	; 0x24
 800b3ea:	f64f 7bff 	movw	fp, #65535	; 0xffff
 800b3ee:	fa1f fa86 	uxth.w	sl, r6
 800b3f2:	2d00      	cmp	r5, #0
 800b3f4:	dd29      	ble.n	800b44a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x168>
 800b3f6:	f9bd 103e 	ldrsh.w	r1, [sp, #62]	; 0x3e
 800b3fa:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800b3fc:	428b      	cmp	r3, r1
 800b3fe:	bfd4      	ite	le
 800b400:	2100      	movle	r1, #0
 800b402:	2101      	movgt	r1, #1
 800b404:	a810      	add	r0, sp, #64	; 0x40
 800b406:	f7ff fe78 	bl	800b0fa <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb>
 800b40a:	f8bd 3052 	ldrh.w	r3, [sp, #82]	; 0x52
 800b40e:	3b01      	subs	r3, #1
 800b410:	b29b      	uxth	r3, r3
 800b412:	455b      	cmp	r3, fp
 800b414:	930b      	str	r3, [sp, #44]	; 0x2c
 800b416:	d005      	beq.n	800b424 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x142>
 800b418:	7961      	ldrb	r1, [r4, #5]
 800b41a:	4638      	mov	r0, r7
 800b41c:	f7f7 fd9a 	bl	8002f54 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 800b420:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800b422:	e7f4      	b.n	800b40e <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x12c>
 800b424:	f8bd 303a 	ldrh.w	r3, [sp, #58]	; 0x3a
 800b428:	4453      	add	r3, sl
 800b42a:	f8ad 303a 	strh.w	r3, [sp, #58]	; 0x3a
 800b42e:	f8bd 303e 	ldrh.w	r3, [sp, #62]	; 0x3e
 800b432:	eba3 030a 	sub.w	r3, r3, sl
 800b436:	f8ad 303e 	strh.w	r3, [sp, #62]	; 0x3e
 800b43a:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 800b43e:	3d01      	subs	r5, #1
 800b440:	2b00      	cmp	r3, #0
 800b442:	d1d6      	bne.n	800b3f2 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x110>
 800b444:	b05b      	add	sp, #364	; 0x16c
 800b446:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800b44a:	ea4f 0a46 	mov.w	sl, r6, lsl #1
 800b44e:	ad44      	add	r5, sp, #272	; 0x110
 800b450:	f04f 0b00 	mov.w	fp, #0
 800b454:	7c23      	ldrb	r3, [r4, #16]
 800b456:	2b00      	cmp	r3, #0
 800b458:	d067      	beq.n	800b52a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x248>
 800b45a:	f9bd 103e 	ldrsh.w	r1, [sp, #62]	; 0x3e
 800b45e:	458a      	cmp	sl, r1
 800b460:	bfd4      	ite	le
 800b462:	2100      	movle	r1, #0
 800b464:	2101      	movgt	r1, #1
 800b466:	a810      	add	r0, sp, #64	; 0x40
 800b468:	f7ff fe47 	bl	800b0fa <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb>
 800b46c:	9b08      	ldr	r3, [sp, #32]
 800b46e:	2b00      	cmp	r3, #0
 800b470:	d056      	beq.n	800b520 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x23e>
 800b472:	7c23      	ldrb	r3, [r4, #16]
 800b474:	9309      	str	r3, [sp, #36]	; 0x24
 800b476:	2258      	movs	r2, #88	; 0x58
 800b478:	4639      	mov	r1, r7
 800b47a:	4628      	mov	r0, r5
 800b47c:	f00e f844 	bl	8019508 <memcpy>
 800b480:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800b482:	2b00      	cmp	r3, #0
 800b484:	d059      	beq.n	800b53a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x258>
 800b486:	f9bd 305a 	ldrsh.w	r3, [sp, #90]	; 0x5a
 800b48a:	7922      	ldrb	r2, [r4, #4]
 800b48c:	2a01      	cmp	r2, #1
 800b48e:	d13d      	bne.n	800b50c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x22a>
 800b490:	f9bd 003c 	ldrsh.w	r0, [sp, #60]	; 0x3c
 800b494:	1ac0      	subs	r0, r0, r3
 800b496:	2302      	movs	r3, #2
 800b498:	fb90 f0f3 	sdiv	r0, r0, r3
 800b49c:	b200      	sxth	r0, r0
 800b49e:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 800b4a2:	4418      	add	r0, r3
 800b4a4:	7c23      	ldrb	r3, [r4, #16]
 800b4a6:	f8ad 0110 	strh.w	r0, [sp, #272]	; 0x110
 800b4aa:	2b00      	cmp	r3, #0
 800b4ac:	d03a      	beq.n	800b524 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x242>
 800b4ae:	f8bd 2052 	ldrh.w	r2, [sp, #82]	; 0x52
 800b4b2:	f89d 105e 	ldrb.w	r1, [sp, #94]	; 0x5e
 800b4b6:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 800b4ba:	9500      	str	r5, [sp, #0]
 800b4bc:	e9cd 2105 	strd	r2, r1, [sp, #20]
 800b4c0:	e9cd b703 	strd	fp, r7, [sp, #12]
 800b4c4:	e9cd 8401 	strd	r8, r4, [sp, #4]
 800b4c8:	464a      	mov	r2, r9
 800b4ca:	2100      	movs	r1, #0
 800b4cc:	980a      	ldr	r0, [sp, #40]	; 0x28
 800b4ce:	f7ff fca4 	bl	800ae1a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>
 800b4d2:	2800      	cmp	r0, #0
 800b4d4:	d1b6      	bne.n	800b444 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x162>
 800b4d6:	f8bd 303a 	ldrh.w	r3, [sp, #58]	; 0x3a
 800b4da:	b2b2      	uxth	r2, r6
 800b4dc:	4611      	mov	r1, r2
 800b4de:	4413      	add	r3, r2
 800b4e0:	f8bd 203e 	ldrh.w	r2, [sp, #62]	; 0x3e
 800b4e4:	1a52      	subs	r2, r2, r1
 800b4e6:	7c21      	ldrb	r1, [r4, #16]
 800b4e8:	b21b      	sxth	r3, r3
 800b4ea:	b212      	sxth	r2, r2
 800b4ec:	f8ad 303a 	strh.w	r3, [sp, #58]	; 0x3a
 800b4f0:	f8ad 203e 	strh.w	r2, [sp, #62]	; 0x3e
 800b4f4:	b109      	cbz	r1, 800b4fa <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x218>
 800b4f6:	42b2      	cmp	r2, r6
 800b4f8:	dba4      	blt.n	800b444 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x162>
 800b4fa:	f8b8 2006 	ldrh.w	r2, [r8, #6]
 800b4fe:	f8b8 1002 	ldrh.w	r1, [r8, #2]
 800b502:	440a      	add	r2, r1
 800b504:	b212      	sxth	r2, r2
 800b506:	4293      	cmp	r3, r2
 800b508:	dda4      	ble.n	800b454 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x172>
 800b50a:	e79b      	b.n	800b444 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x162>
 800b50c:	2a02      	cmp	r2, #2
 800b50e:	d105      	bne.n	800b51c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x23a>
 800b510:	7be2      	ldrb	r2, [r4, #15]
 800b512:	f8bd 003c 	ldrh.w	r0, [sp, #60]	; 0x3c
 800b516:	1a80      	subs	r0, r0, r2
 800b518:	1ac0      	subs	r0, r0, r3
 800b51a:	e7bf      	b.n	800b49c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1ba>
 800b51c:	2000      	movs	r0, #0
 800b51e:	e7be      	b.n	800b49e <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1bc>
 800b520:	7be0      	ldrb	r0, [r4, #15]
 800b522:	e7bc      	b.n	800b49e <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1bc>
 800b524:	f647 72ff 	movw	r2, #32767	; 0x7fff
 800b528:	e7c3      	b.n	800b4b2 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1d0>
 800b52a:	9b08      	ldr	r3, [sp, #32]
 800b52c:	2b00      	cmp	r3, #0
 800b52e:	d0f7      	beq.n	800b520 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x23e>
 800b530:	2258      	movs	r2, #88	; 0x58
 800b532:	4639      	mov	r1, r7
 800b534:	4628      	mov	r0, r5
 800b536:	f00d ffe7 	bl	8019508 <memcpy>
 800b53a:	2300      	movs	r3, #0
 800b53c:	f647 72ff 	movw	r2, #32767	; 0x7fff
 800b540:	6821      	ldr	r1, [r4, #0]
 800b542:	4628      	mov	r0, r5
 800b544:	f7ff fbfc 	bl	800ad40 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 800b548:	b203      	sxth	r3, r0
 800b54a:	e79e      	b.n	800b48a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1a8>

0800b54c <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>:
 800b54c:	b510      	push	{r4, lr}
 800b54e:	2b02      	cmp	r3, #2
 800b550:	f9b0 4000 	ldrsh.w	r4, [r0]
 800b554:	d00b      	beq.n	800b56e <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x22>
 800b556:	2b03      	cmp	r3, #3
 800b558:	d00e      	beq.n	800b578 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x2c>
 800b55a:	2b01      	cmp	r3, #1
 800b55c:	d001      	beq.n	800b562 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x16>
 800b55e:	1860      	adds	r0, r4, r1
 800b560:	bd10      	pop	{r4, pc}
 800b562:	8880      	ldrh	r0, [r0, #4]
 800b564:	4420      	add	r0, r4
 800b566:	b200      	sxth	r0, r0
 800b568:	1a80      	subs	r0, r0, r2
 800b56a:	3801      	subs	r0, #1
 800b56c:	e7f8      	b.n	800b560 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x14>
 800b56e:	8880      	ldrh	r0, [r0, #4]
 800b570:	4420      	add	r0, r4
 800b572:	b200      	sxth	r0, r0
 800b574:	1a40      	subs	r0, r0, r1
 800b576:	e7f8      	b.n	800b56a <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x1e>
 800b578:	18a0      	adds	r0, r4, r2
 800b57a:	e7f1      	b.n	800b560 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x14>

0800b57c <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>:
 800b57c:	b510      	push	{r4, lr}
 800b57e:	2b02      	cmp	r3, #2
 800b580:	f9b0 4002 	ldrsh.w	r4, [r0, #2]
 800b584:	d006      	beq.n	800b594 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x18>
 800b586:	2b03      	cmp	r3, #3
 800b588:	d00a      	beq.n	800b5a0 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x24>
 800b58a:	2b01      	cmp	r3, #1
 800b58c:	bf14      	ite	ne
 800b58e:	18a0      	addne	r0, r4, r2
 800b590:	1860      	addeq	r0, r4, r1
 800b592:	bd10      	pop	{r4, pc}
 800b594:	88c0      	ldrh	r0, [r0, #6]
 800b596:	4420      	add	r0, r4
 800b598:	b200      	sxth	r0, r0
 800b59a:	1a80      	subs	r0, r0, r2
 800b59c:	3801      	subs	r0, #1
 800b59e:	e7f8      	b.n	800b592 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x16>
 800b5a0:	88c0      	ldrh	r0, [r0, #6]
 800b5a2:	4420      	add	r0, r4
 800b5a4:	b200      	sxth	r0, r0
 800b5a6:	1a40      	subs	r0, r0, r1
 800b5a8:	e7f8      	b.n	800b59c <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x20>
	...

0800b5ac <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE>:
 800b5ac:	4b01      	ldr	r3, [pc, #4]	; (800b5b4 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE+0x8>)
 800b5ae:	2200      	movs	r2, #0
 800b5b0:	601a      	str	r2, [r3, #0]
 800b5b2:	4770      	bx	lr
 800b5b4:	20012190 	.word	0x20012190

0800b5b8 <_ZN8touchgfx16TouchCalibration6muldivEllllllRl>:
 800b5b8:	b5f0      	push	{r4, r5, r6, r7, lr}
 800b5ba:	e9dd e405 	ldrd	lr, r4, [sp, #20]
 800b5be:	1e05      	subs	r5, r0, #0
 800b5c0:	bfba      	itte	lt
 800b5c2:	f04f 37ff 	movlt.w	r7, #4294967295
 800b5c6:	426d      	neglt	r5, r5
 800b5c8:	2701      	movge	r7, #1
 800b5ca:	f1be 0f00 	cmp.w	lr, #0
 800b5ce:	bfb8      	it	lt
 800b5d0:	f1ce 0e00 	rsblt	lr, lr, #0
 800b5d4:	f04f 0601 	mov.w	r6, #1
 800b5d8:	fa4e f001 	asr.w	r0, lr, r1
 800b5dc:	fa06 f101 	lsl.w	r1, r6, r1
 800b5e0:	f8dd c01c 	ldr.w	ip, [sp, #28]
 800b5e4:	f101 31ff 	add.w	r1, r1, #4294967295
 800b5e8:	ea01 010e 	and.w	r1, r1, lr
 800b5ec:	bfb8      	it	lt
 800b5ee:	427f      	neglt	r7, r7
 800b5f0:	434d      	muls	r5, r1
 800b5f2:	2c00      	cmp	r4, #0
 800b5f4:	f8dc 1000 	ldr.w	r1, [ip]
 800b5f8:	bfb8      	it	lt
 800b5fa:	4264      	neglt	r4, r4
 800b5fc:	fb03 1300 	mla	r3, r3, r0, r1
 800b600:	fb95 f1f4 	sdiv	r1, r5, r4
 800b604:	fb04 5511 	mls	r5, r4, r1, r5
 800b608:	441d      	add	r5, r3
 800b60a:	fb95 f3f4 	sdiv	r3, r5, r4
 800b60e:	fb04 5413 	mls	r4, r4, r3, r5
 800b612:	4419      	add	r1, r3
 800b614:	bfb8      	it	lt
 800b616:	427f      	neglt	r7, r7
 800b618:	fb02 1000 	mla	r0, r2, r0, r1
 800b61c:	f8cc 4000 	str.w	r4, [ip]
 800b620:	4378      	muls	r0, r7
 800b622:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800b624 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>:
 800b624:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b628:	4c24      	ldr	r4, [pc, #144]	; (800b6bc <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x98>)
 800b62a:	6807      	ldr	r7, [r0, #0]
 800b62c:	69a3      	ldr	r3, [r4, #24]
 800b62e:	b086      	sub	sp, #24
 800b630:	4605      	mov	r5, r0
 800b632:	b92b      	cbnz	r3, 800b640 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x1c>
 800b634:	6840      	ldr	r0, [r0, #4]
 800b636:	e9c5 7000 	strd	r7, r0, [r5]
 800b63a:	b006      	add	sp, #24
 800b63c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800b640:	68a2      	ldr	r2, [r4, #8]
 800b642:	6820      	ldr	r0, [r4, #0]
 800b644:	ae06      	add	r6, sp, #24
 800b646:	f04f 0802 	mov.w	r8, #2
 800b64a:	fb93 f1f8 	sdiv	r1, r3, r8
 800b64e:	440a      	add	r2, r1
 800b650:	f846 2d04 	str.w	r2, [r6, #-4]!
 800b654:	69e1      	ldr	r1, [r4, #28]
 800b656:	9700      	str	r7, [sp, #0]
 800b658:	e9cd 3601 	strd	r3, r6, [sp, #4]
 800b65c:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800b65e:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800b660:	f7ff ffaa 	bl	800b5b8 <_ZN8touchgfx16TouchCalibration6muldivEllllllRl>
 800b664:	69a3      	ldr	r3, [r4, #24]
 800b666:	9301      	str	r3, [sp, #4]
 800b668:	686b      	ldr	r3, [r5, #4]
 800b66a:	9300      	str	r3, [sp, #0]
 800b66c:	4607      	mov	r7, r0
 800b66e:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800b670:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800b672:	6a21      	ldr	r1, [r4, #32]
 800b674:	9602      	str	r6, [sp, #8]
 800b676:	6860      	ldr	r0, [r4, #4]
 800b678:	f7ff ff9e 	bl	800b5b8 <_ZN8touchgfx16TouchCalibration6muldivEllllllRl>
 800b67c:	6963      	ldr	r3, [r4, #20]
 800b67e:	69a2      	ldr	r2, [r4, #24]
 800b680:	fb92 f8f8 	sdiv	r8, r2, r8
 800b684:	4443      	add	r3, r8
 800b686:	9305      	str	r3, [sp, #20]
 800b688:	682b      	ldr	r3, [r5, #0]
 800b68a:	9300      	str	r3, [sp, #0]
 800b68c:	e9cd 2601 	strd	r2, r6, [sp, #4]
 800b690:	6c63      	ldr	r3, [r4, #68]	; 0x44
 800b692:	6b62      	ldr	r2, [r4, #52]	; 0x34
 800b694:	6a61      	ldr	r1, [r4, #36]	; 0x24
 800b696:	4407      	add	r7, r0
 800b698:	68e0      	ldr	r0, [r4, #12]
 800b69a:	f7ff ff8d 	bl	800b5b8 <_ZN8touchgfx16TouchCalibration6muldivEllllllRl>
 800b69e:	69a3      	ldr	r3, [r4, #24]
 800b6a0:	9301      	str	r3, [sp, #4]
 800b6a2:	686b      	ldr	r3, [r5, #4]
 800b6a4:	9300      	str	r3, [sp, #0]
 800b6a6:	4680      	mov	r8, r0
 800b6a8:	9602      	str	r6, [sp, #8]
 800b6aa:	6ca3      	ldr	r3, [r4, #72]	; 0x48
 800b6ac:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800b6ae:	6aa1      	ldr	r1, [r4, #40]	; 0x28
 800b6b0:	6920      	ldr	r0, [r4, #16]
 800b6b2:	f7ff ff81 	bl	800b5b8 <_ZN8touchgfx16TouchCalibration6muldivEllllllRl>
 800b6b6:	4440      	add	r0, r8
 800b6b8:	e7bd      	b.n	800b636 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x12>
 800b6ba:	bf00      	nop
 800b6bc:	20012194 	.word	0x20012194

0800b6c0 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>:
 800b6c0:	b510      	push	{r4, lr}
 800b6c2:	4b07      	ldr	r3, [pc, #28]	; (800b6e0 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x20>)
 800b6c4:	781b      	ldrb	r3, [r3, #0]
 800b6c6:	2b01      	cmp	r3, #1
 800b6c8:	d108      	bne.n	800b6dc <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x1c>
 800b6ca:	4b06      	ldr	r3, [pc, #24]	; (800b6e4 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x24>)
 800b6cc:	880c      	ldrh	r4, [r1, #0]
 800b6ce:	881b      	ldrh	r3, [r3, #0]
 800b6d0:	f9b0 2000 	ldrsh.w	r2, [r0]
 800b6d4:	3b01      	subs	r3, #1
 800b6d6:	1b1b      	subs	r3, r3, r4
 800b6d8:	8003      	strh	r3, [r0, #0]
 800b6da:	800a      	strh	r2, [r1, #0]
 800b6dc:	bd10      	pop	{r4, pc}
 800b6de:	bf00      	nop
 800b6e0:	20012180 	.word	0x20012180
 800b6e4:	20012184 	.word	0x20012184

0800b6e8 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>:
 800b6e8:	b510      	push	{r4, lr}
 800b6ea:	4b0a      	ldr	r3, [pc, #40]	; (800b714 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x2c>)
 800b6ec:	781b      	ldrb	r3, [r3, #0]
 800b6ee:	2b01      	cmp	r3, #1
 800b6f0:	d10e      	bne.n	800b710 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x28>
 800b6f2:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 800b6f6:	8843      	ldrh	r3, [r0, #2]
 800b6f8:	f9b0 4000 	ldrsh.w	r4, [r0]
 800b6fc:	8044      	strh	r4, [r0, #2]
 800b6fe:	18ca      	adds	r2, r1, r3
 800b700:	4b05      	ldr	r3, [pc, #20]	; (800b718 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x30>)
 800b702:	881b      	ldrh	r3, [r3, #0]
 800b704:	1a9b      	subs	r3, r3, r2
 800b706:	8003      	strh	r3, [r0, #0]
 800b708:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800b70c:	80c3      	strh	r3, [r0, #6]
 800b70e:	8081      	strh	r1, [r0, #4]
 800b710:	bd10      	pop	{r4, pc}
 800b712:	bf00      	nop
 800b714:	20012180 	.word	0x20012180
 800b718:	2001217c 	.word	0x2001217c

0800b71c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>:
 800b71c:	b510      	push	{r4, lr}
 800b71e:	4b07      	ldr	r3, [pc, #28]	; (800b73c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x20>)
 800b720:	781b      	ldrb	r3, [r3, #0]
 800b722:	2b01      	cmp	r3, #1
 800b724:	d108      	bne.n	800b738 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x1c>
 800b726:	f9b1 3000 	ldrsh.w	r3, [r1]
 800b72a:	f9b0 4000 	ldrsh.w	r4, [r0]
 800b72e:	8003      	strh	r3, [r0, #0]
 800b730:	8893      	ldrh	r3, [r2, #4]
 800b732:	3b01      	subs	r3, #1
 800b734:	1b1b      	subs	r3, r3, r4
 800b736:	800b      	strh	r3, [r1, #0]
 800b738:	bd10      	pop	{r4, pc}
 800b73a:	bf00      	nop
 800b73c:	20012180 	.word	0x20012180

0800b740 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>:
 800b740:	b513      	push	{r0, r1, r4, lr}
 800b742:	4b08      	ldr	r3, [pc, #32]	; (800b764 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x24>)
 800b744:	f9b3 2000 	ldrsh.w	r2, [r3]
 800b748:	4b07      	ldr	r3, [pc, #28]	; (800b768 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x28>)
 800b74a:	f8ad 2004 	strh.w	r2, [sp, #4]
 800b74e:	f9b3 3000 	ldrsh.w	r3, [r3]
 800b752:	f8ad 3006 	strh.w	r3, [sp, #6]
 800b756:	2400      	movs	r4, #0
 800b758:	466a      	mov	r2, sp
 800b75a:	9400      	str	r4, [sp, #0]
 800b75c:	f7ff ffde 	bl	800b71c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>
 800b760:	b002      	add	sp, #8
 800b762:	bd10      	pop	{r4, pc}
 800b764:	2001217c 	.word	0x2001217c
 800b768:	2001217e 	.word	0x2001217e

0800b76c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>:
 800b76c:	b510      	push	{r4, lr}
 800b76e:	4b0a      	ldr	r3, [pc, #40]	; (800b798 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x2c>)
 800b770:	781b      	ldrb	r3, [r3, #0]
 800b772:	2b01      	cmp	r3, #1
 800b774:	460a      	mov	r2, r1
 800b776:	d10d      	bne.n	800b794 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x28>
 800b778:	8881      	ldrh	r1, [r0, #4]
 800b77a:	8803      	ldrh	r3, [r0, #0]
 800b77c:	440b      	add	r3, r1
 800b77e:	4601      	mov	r1, r0
 800b780:	3b01      	subs	r3, #1
 800b782:	f821 3b02 	strh.w	r3, [r1], #2
 800b786:	f7ff ffc9 	bl	800b71c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>
 800b78a:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800b78e:	88c2      	ldrh	r2, [r0, #6]
 800b790:	8082      	strh	r2, [r0, #4]
 800b792:	80c3      	strh	r3, [r0, #6]
 800b794:	bd10      	pop	{r4, pc}
 800b796:	bf00      	nop
 800b798:	20012180 	.word	0x20012180

0800b79c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>:
 800b79c:	b507      	push	{r0, r1, r2, lr}
 800b79e:	4b09      	ldr	r3, [pc, #36]	; (800b7c4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x28>)
 800b7a0:	f9b3 2000 	ldrsh.w	r2, [r3]
 800b7a4:	4b08      	ldr	r3, [pc, #32]	; (800b7c8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x2c>)
 800b7a6:	f8ad 2004 	strh.w	r2, [sp, #4]
 800b7aa:	2100      	movs	r1, #0
 800b7ac:	f9b3 3000 	ldrsh.w	r3, [r3]
 800b7b0:	9100      	str	r1, [sp, #0]
 800b7b2:	4669      	mov	r1, sp
 800b7b4:	f8ad 3006 	strh.w	r3, [sp, #6]
 800b7b8:	f7ff ffd8 	bl	800b76c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 800b7bc:	b003      	add	sp, #12
 800b7be:	f85d fb04 	ldr.w	pc, [sp], #4
 800b7c2:	bf00      	nop
 800b7c4:	2001217c 	.word	0x2001217c
 800b7c8:	2001217e 	.word	0x2001217e

0800b7cc <_ZN8touchgfx11Application13requestRedrawEv>:
 800b7cc:	4b06      	ldr	r3, [pc, #24]	; (800b7e8 <_ZN8touchgfx11Application13requestRedrawEv+0x1c>)
 800b7ce:	f9b3 2000 	ldrsh.w	r2, [r3]
 800b7d2:	4b06      	ldr	r3, [pc, #24]	; (800b7ec <_ZN8touchgfx11Application13requestRedrawEv+0x20>)
 800b7d4:	f8a0 2130 	strh.w	r2, [r0, #304]	; 0x130
 800b7d8:	f9b3 3000 	ldrsh.w	r3, [r3]
 800b7dc:	f8a0 3132 	strh.w	r3, [r0, #306]	; 0x132
 800b7e0:	2100      	movs	r1, #0
 800b7e2:	f8c0 112c 	str.w	r1, [r0, #300]	; 0x12c
 800b7e6:	4770      	bx	lr
 800b7e8:	2001217c 	.word	0x2001217c
 800b7ec:	2001217e 	.word	0x2001217e

0800b7f0 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE>:
 800b7f0:	4b03      	ldr	r3, [pc, #12]	; (800b800 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0x10>)
 800b7f2:	6818      	ldr	r0, [r3, #0]
 800b7f4:	b110      	cbz	r0, 800b7fc <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0xc>
 800b7f6:	6803      	ldr	r3, [r0, #0]
 800b7f8:	699b      	ldr	r3, [r3, #24]
 800b7fa:	4718      	bx	r3
 800b7fc:	4770      	bx	lr
 800b7fe:	bf00      	nop
 800b800:	200121e4 	.word	0x200121e4

0800b804 <_ZN8touchgfx11Application29handlePendingScreenTransitionEv>:
 800b804:	4770      	bx	lr
	...

0800b808 <_ZN8touchgfx11Application4drawEv>:
 800b808:	b507      	push	{r0, r1, r2, lr}
 800b80a:	4b09      	ldr	r3, [pc, #36]	; (800b830 <_ZN8touchgfx11Application4drawEv+0x28>)
 800b80c:	f9b3 2000 	ldrsh.w	r2, [r3]
 800b810:	4b08      	ldr	r3, [pc, #32]	; (800b834 <_ZN8touchgfx11Application4drawEv+0x2c>)
 800b812:	f8ad 2004 	strh.w	r2, [sp, #4]
 800b816:	f9b3 3000 	ldrsh.w	r3, [r3]
 800b81a:	f8ad 3006 	strh.w	r3, [sp, #6]
 800b81e:	6803      	ldr	r3, [r0, #0]
 800b820:	2100      	movs	r1, #0
 800b822:	9100      	str	r1, [sp, #0]
 800b824:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800b826:	4669      	mov	r1, sp
 800b828:	4798      	blx	r3
 800b82a:	b003      	add	sp, #12
 800b82c:	f85d fb04 	ldr.w	pc, [sp], #4
 800b830:	2001217c 	.word	0x2001217c
 800b834:	2001217e 	.word	0x2001217e

0800b838 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE>:
 800b838:	4b03      	ldr	r3, [pc, #12]	; (800b848 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0x10>)
 800b83a:	6818      	ldr	r0, [r3, #0]
 800b83c:	b110      	cbz	r0, 800b844 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0xc>
 800b83e:	6803      	ldr	r3, [r0, #0]
 800b840:	69db      	ldr	r3, [r3, #28]
 800b842:	4718      	bx	r3
 800b844:	4770      	bx	lr
 800b846:	bf00      	nop
 800b848:	200121e4 	.word	0x200121e4

0800b84c <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE>:
 800b84c:	4b03      	ldr	r3, [pc, #12]	; (800b85c <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0x10>)
 800b84e:	6818      	ldr	r0, [r3, #0]
 800b850:	b110      	cbz	r0, 800b858 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0xc>
 800b852:	6803      	ldr	r3, [r0, #0]
 800b854:	6a1b      	ldr	r3, [r3, #32]
 800b856:	4718      	bx	r3
 800b858:	4770      	bx	lr
 800b85a:	bf00      	nop
 800b85c:	200121e4 	.word	0x200121e4

0800b860 <_ZN8touchgfx11Application14handleKeyEventEh>:
 800b860:	4b03      	ldr	r3, [pc, #12]	; (800b870 <_ZN8touchgfx11Application14handleKeyEventEh+0x10>)
 800b862:	6818      	ldr	r0, [r3, #0]
 800b864:	b110      	cbz	r0, 800b86c <_ZN8touchgfx11Application14handleKeyEventEh+0xc>
 800b866:	6803      	ldr	r3, [r0, #0]
 800b868:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800b86a:	4718      	bx	r3
 800b86c:	4770      	bx	lr
 800b86e:	bf00      	nop
 800b870:	200121e4 	.word	0x200121e4

0800b874 <_ZN8touchgfx11Application15handleTickEventEv>:
 800b874:	b570      	push	{r4, r5, r6, lr}
 800b876:	4d34      	ldr	r5, [pc, #208]	; (800b948 <_ZN8touchgfx11Application15handleTickEventEv+0xd4>)
 800b878:	4604      	mov	r4, r0
 800b87a:	6828      	ldr	r0, [r5, #0]
 800b87c:	b140      	cbz	r0, 800b890 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 800b87e:	7a03      	ldrb	r3, [r0, #8]
 800b880:	b933      	cbnz	r3, 800b890 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 800b882:	f884 3135 	strb.w	r3, [r4, #309]	; 0x135
 800b886:	6803      	ldr	r3, [r0, #0]
 800b888:	689b      	ldr	r3, [r3, #8]
 800b88a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800b88e:	4718      	bx	r3
 800b890:	f894 3135 	ldrb.w	r3, [r4, #309]	; 0x135
 800b894:	b97b      	cbnz	r3, 800b8b6 <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 800b896:	b170      	cbz	r0, 800b8b6 <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 800b898:	7a03      	ldrb	r3, [r0, #8]
 800b89a:	b163      	cbz	r3, 800b8b6 <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 800b89c:	4b2b      	ldr	r3, [pc, #172]	; (800b94c <_ZN8touchgfx11Application15handleTickEventEv+0xd8>)
 800b89e:	6818      	ldr	r0, [r3, #0]
 800b8a0:	b110      	cbz	r0, 800b8a8 <_ZN8touchgfx11Application15handleTickEventEv+0x34>
 800b8a2:	6803      	ldr	r3, [r0, #0]
 800b8a4:	691b      	ldr	r3, [r3, #16]
 800b8a6:	4798      	blx	r3
 800b8a8:	6828      	ldr	r0, [r5, #0]
 800b8aa:	6803      	ldr	r3, [r0, #0]
 800b8ac:	68db      	ldr	r3, [r3, #12]
 800b8ae:	4798      	blx	r3
 800b8b0:	2301      	movs	r3, #1
 800b8b2:	f884 3135 	strb.w	r3, [r4, #309]	; 0x135
 800b8b6:	2500      	movs	r5, #0
 800b8b8:	f8b4 0084 	ldrh.w	r0, [r4, #132]	; 0x84
 800b8bc:	42a8      	cmp	r0, r5
 800b8be:	dd0c      	ble.n	800b8da <_ZN8touchgfx11Application15handleTickEventEv+0x66>
 800b8c0:	1963      	adds	r3, r4, r5
 800b8c2:	f893 2088 	ldrb.w	r2, [r3, #136]	; 0x88
 800b8c6:	b132      	cbz	r2, 800b8d6 <_ZN8touchgfx11Application15handleTickEventEv+0x62>
 800b8c8:	eb05 0245 	add.w	r2, r5, r5, lsl #1
 800b8cc:	4413      	add	r3, r2
 800b8ce:	6858      	ldr	r0, [r3, #4]
 800b8d0:	6803      	ldr	r3, [r0, #0]
 800b8d2:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 800b8d4:	4798      	blx	r3
 800b8d6:	3501      	adds	r5, #1
 800b8d8:	e7ee      	b.n	800b8b8 <_ZN8touchgfx11Application15handleTickEventEv+0x44>
 800b8da:	2300      	movs	r3, #0
 800b8dc:	461a      	mov	r2, r3
 800b8de:	4298      	cmp	r0, r3
 800b8e0:	d114      	bne.n	800b90c <_ZN8touchgfx11Application15handleTickEventEv+0x98>
 800b8e2:	1d25      	adds	r5, r4, #4
 800b8e4:	f8b4 1084 	ldrh.w	r1, [r4, #132]	; 0x84
 800b8e8:	1e48      	subs	r0, r1, #1
 800b8ea:	b280      	uxth	r0, r0
 800b8ec:	4291      	cmp	r1, r2
 800b8ee:	dd24      	ble.n	800b93a <_ZN8touchgfx11Application15handleTickEventEv+0xc6>
 800b8f0:	4288      	cmp	r0, r1
 800b8f2:	d2fb      	bcs.n	800b8ec <_ZN8touchgfx11Application15handleTickEventEv+0x78>
 800b8f4:	eb04 0380 	add.w	r3, r4, r0, lsl #2
 800b8f8:	3304      	adds	r3, #4
 800b8fa:	eb05 0181 	add.w	r1, r5, r1, lsl #2
 800b8fe:	428b      	cmp	r3, r1
 800b900:	d018      	beq.n	800b934 <_ZN8touchgfx11Application15handleTickEventEv+0xc0>
 800b902:	f853 6f04 	ldr.w	r6, [r3, #4]!
 800b906:	f843 6c04 	str.w	r6, [r3, #-4]
 800b90a:	e7f8      	b.n	800b8fe <_ZN8touchgfx11Application15handleTickEventEv+0x8a>
 800b90c:	18e1      	adds	r1, r4, r3
 800b90e:	f891 5088 	ldrb.w	r5, [r1, #136]	; 0x88
 800b912:	b16d      	cbz	r5, 800b930 <_ZN8touchgfx11Application15handleTickEventEv+0xbc>
 800b914:	429a      	cmp	r2, r3
 800b916:	d00a      	beq.n	800b92e <_ZN8touchgfx11Application15handleTickEventEv+0xba>
 800b918:	eb03 0643 	add.w	r6, r3, r3, lsl #1
 800b91c:	4431      	add	r1, r6
 800b91e:	684e      	ldr	r6, [r1, #4]
 800b920:	b291      	uxth	r1, r2
 800b922:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 800b926:	604e      	str	r6, [r1, #4]
 800b928:	18a1      	adds	r1, r4, r2
 800b92a:	f881 5088 	strb.w	r5, [r1, #136]	; 0x88
 800b92e:	3201      	adds	r2, #1
 800b930:	3301      	adds	r3, #1
 800b932:	e7d4      	b.n	800b8de <_ZN8touchgfx11Application15handleTickEventEv+0x6a>
 800b934:	f8a4 0084 	strh.w	r0, [r4, #132]	; 0x84
 800b938:	e7d4      	b.n	800b8e4 <_ZN8touchgfx11Application15handleTickEventEv+0x70>
 800b93a:	4b04      	ldr	r3, [pc, #16]	; (800b94c <_ZN8touchgfx11Application15handleTickEventEv+0xd8>)
 800b93c:	6818      	ldr	r0, [r3, #0]
 800b93e:	b110      	cbz	r0, 800b946 <_ZN8touchgfx11Application15handleTickEventEv+0xd2>
 800b940:	6803      	ldr	r3, [r0, #0]
 800b942:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800b944:	e7a1      	b.n	800b88a <_ZN8touchgfx11Application15handleTickEventEv+0x16>
 800b946:	bd70      	pop	{r4, r5, r6, pc}
 800b948:	200121e8 	.word	0x200121e8
 800b94c:	200121e4 	.word	0x200121e4

0800b950 <_ZN8touchgfx11ApplicationD1Ev>:
 800b950:	4770      	bx	lr

0800b952 <_ZN8touchgfx11ApplicationD0Ev>:
 800b952:	b510      	push	{r4, lr}
 800b954:	f44f 719c 	mov.w	r1, #312	; 0x138
 800b958:	4604      	mov	r4, r0
 800b95a:	f00d fd2b 	bl	80193b4 <_ZdlPvj>
 800b95e:	4620      	mov	r0, r4
 800b960:	bd10      	pop	{r4, pc}
	...

0800b964 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE>:
 800b964:	b570      	push	{r4, r5, r6, lr}
 800b966:	4606      	mov	r6, r0
 800b968:	460c      	mov	r4, r1
 800b96a:	b929      	cbnz	r1, 800b978 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x14>
 800b96c:	4b0c      	ldr	r3, [pc, #48]	; (800b9a0 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x3c>)
 800b96e:	4a0d      	ldr	r2, [pc, #52]	; (800b9a4 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x40>)
 800b970:	480d      	ldr	r0, [pc, #52]	; (800b9a8 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x44>)
 800b972:	2166      	movs	r1, #102	; 0x66
 800b974:	f00d fd4a 	bl	801940c <__assert_func>
 800b978:	4d0c      	ldr	r5, [pc, #48]	; (800b9ac <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x48>)
 800b97a:	2300      	movs	r3, #0
 800b97c:	f8a0 3084 	strh.w	r3, [r0, #132]	; 0x84
 800b980:	6828      	ldr	r0, [r5, #0]
 800b982:	b110      	cbz	r0, 800b98a <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x26>
 800b984:	6803      	ldr	r3, [r0, #0]
 800b986:	695b      	ldr	r3, [r3, #20]
 800b988:	4798      	blx	r3
 800b98a:	602c      	str	r4, [r5, #0]
 800b98c:	6823      	ldr	r3, [r4, #0]
 800b98e:	4620      	mov	r0, r4
 800b990:	68db      	ldr	r3, [r3, #12]
 800b992:	4798      	blx	r3
 800b994:	6833      	ldr	r3, [r6, #0]
 800b996:	4630      	mov	r0, r6
 800b998:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800b99a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800b99e:	4718      	bx	r3
 800b9a0:	0801c3f0 	.word	0x0801c3f0
 800b9a4:	0801c4c0 	.word	0x0801c4c0
 800b9a8:	0801c3fa 	.word	0x0801c3fa
 800b9ac:	200121e4 	.word	0x200121e4

0800b9b0 <_ZNK8touchgfx4Rect9intersectERKS0_>:
 800b9b0:	b510      	push	{r4, lr}
 800b9b2:	f9b1 4000 	ldrsh.w	r4, [r1]
 800b9b6:	888a      	ldrh	r2, [r1, #4]
 800b9b8:	f9b0 3000 	ldrsh.w	r3, [r0]
 800b9bc:	4422      	add	r2, r4
 800b9be:	b212      	sxth	r2, r2
 800b9c0:	4293      	cmp	r3, r2
 800b9c2:	da15      	bge.n	800b9f0 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 800b9c4:	8882      	ldrh	r2, [r0, #4]
 800b9c6:	4413      	add	r3, r2
 800b9c8:	b21b      	sxth	r3, r3
 800b9ca:	429c      	cmp	r4, r3
 800b9cc:	da10      	bge.n	800b9f0 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 800b9ce:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 800b9d2:	88c9      	ldrh	r1, [r1, #6]
 800b9d4:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 800b9d8:	4419      	add	r1, r3
 800b9da:	b209      	sxth	r1, r1
 800b9dc:	428a      	cmp	r2, r1
 800b9de:	da07      	bge.n	800b9f0 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 800b9e0:	88c0      	ldrh	r0, [r0, #6]
 800b9e2:	4410      	add	r0, r2
 800b9e4:	b200      	sxth	r0, r0
 800b9e6:	4283      	cmp	r3, r0
 800b9e8:	bfac      	ite	ge
 800b9ea:	2000      	movge	r0, #0
 800b9ec:	2001      	movlt	r0, #1
 800b9ee:	bd10      	pop	{r4, pc}
 800b9f0:	2000      	movs	r0, #0
 800b9f2:	e7fc      	b.n	800b9ee <_ZNK8touchgfx4Rect9intersectERKS0_+0x3e>

0800b9f4 <_ZNK8touchgfx4Rect8includesERKS0_>:
 800b9f4:	b570      	push	{r4, r5, r6, lr}
 800b9f6:	f9b1 4000 	ldrsh.w	r4, [r1]
 800b9fa:	f9b0 5000 	ldrsh.w	r5, [r0]
 800b9fe:	42ac      	cmp	r4, r5
 800ba00:	db18      	blt.n	800ba34 <_ZNK8touchgfx4Rect8includesERKS0_+0x40>
 800ba02:	f9b1 2002 	ldrsh.w	r2, [r1, #2]
 800ba06:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 800ba0a:	429a      	cmp	r2, r3
 800ba0c:	db12      	blt.n	800ba34 <_ZNK8touchgfx4Rect8includesERKS0_+0x40>
 800ba0e:	8886      	ldrh	r6, [r0, #4]
 800ba10:	4435      	add	r5, r6
 800ba12:	888e      	ldrh	r6, [r1, #4]
 800ba14:	4434      	add	r4, r6
 800ba16:	b22d      	sxth	r5, r5
 800ba18:	b224      	sxth	r4, r4
 800ba1a:	42a5      	cmp	r5, r4
 800ba1c:	db0a      	blt.n	800ba34 <_ZNK8touchgfx4Rect8includesERKS0_+0x40>
 800ba1e:	88c0      	ldrh	r0, [r0, #6]
 800ba20:	4418      	add	r0, r3
 800ba22:	88cb      	ldrh	r3, [r1, #6]
 800ba24:	441a      	add	r2, r3
 800ba26:	b200      	sxth	r0, r0
 800ba28:	b212      	sxth	r2, r2
 800ba2a:	4290      	cmp	r0, r2
 800ba2c:	bfb4      	ite	lt
 800ba2e:	2000      	movlt	r0, #0
 800ba30:	2001      	movge	r0, #1
 800ba32:	bd70      	pop	{r4, r5, r6, pc}
 800ba34:	2000      	movs	r0, #0
 800ba36:	e7fc      	b.n	800ba32 <_ZNK8touchgfx4Rect8includesERKS0_+0x3e>

0800ba38 <_ZN8touchgfx4Rect11expandToFitERKS0_>:
 800ba38:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800ba3a:	4604      	mov	r4, r0
 800ba3c:	4608      	mov	r0, r1
 800ba3e:	460d      	mov	r5, r1
 800ba40:	f7fd fa53 	bl	8008eea <_ZNK8touchgfx4Rect7isEmptyEv>
 800ba44:	b978      	cbnz	r0, 800ba66 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
 800ba46:	4620      	mov	r0, r4
 800ba48:	f7fd fa4f 	bl	8008eea <_ZNK8touchgfx4Rect7isEmptyEv>
 800ba4c:	f9b5 6000 	ldrsh.w	r6, [r5]
 800ba50:	b150      	cbz	r0, 800ba68 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x30>
 800ba52:	8026      	strh	r6, [r4, #0]
 800ba54:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 800ba58:	8063      	strh	r3, [r4, #2]
 800ba5a:	f9b5 3004 	ldrsh.w	r3, [r5, #4]
 800ba5e:	80a3      	strh	r3, [r4, #4]
 800ba60:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 800ba64:	80e3      	strh	r3, [r4, #6]
 800ba66:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800ba68:	f9b4 1000 	ldrsh.w	r1, [r4]
 800ba6c:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 800ba70:	f9b4 3002 	ldrsh.w	r3, [r4, #2]
 800ba74:	f8b5 c004 	ldrh.w	ip, [r5, #4]
 800ba78:	88ed      	ldrh	r5, [r5, #6]
 800ba7a:	42b1      	cmp	r1, r6
 800ba7c:	460f      	mov	r7, r1
 800ba7e:	bfa8      	it	ge
 800ba80:	4637      	movge	r7, r6
 800ba82:	4293      	cmp	r3, r2
 800ba84:	4618      	mov	r0, r3
 800ba86:	4466      	add	r6, ip
 800ba88:	bfa8      	it	ge
 800ba8a:	4610      	movge	r0, r2
 800ba8c:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 800ba90:	8027      	strh	r7, [r4, #0]
 800ba92:	442a      	add	r2, r5
 800ba94:	88e5      	ldrh	r5, [r4, #6]
 800ba96:	8060      	strh	r0, [r4, #2]
 800ba98:	4461      	add	r1, ip
 800ba9a:	442b      	add	r3, r5
 800ba9c:	b236      	sxth	r6, r6
 800ba9e:	b209      	sxth	r1, r1
 800baa0:	b212      	sxth	r2, r2
 800baa2:	b21b      	sxth	r3, r3
 800baa4:	428e      	cmp	r6, r1
 800baa6:	bfac      	ite	ge
 800baa8:	ebc7 0106 	rsbge	r1, r7, r6
 800baac:	ebc7 0101 	rsblt	r1, r7, r1
 800bab0:	429a      	cmp	r2, r3
 800bab2:	bfac      	ite	ge
 800bab4:	ebc0 0202 	rsbge	r2, r0, r2
 800bab8:	ebc0 0203 	rsblt	r2, r0, r3
 800babc:	80a1      	strh	r1, [r4, #4]
 800babe:	80e2      	strh	r2, [r4, #6]
 800bac0:	e7d1      	b.n	800ba66 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
	...

0800bac4 <_ZN8touchgfx11Application11getInstanceEv>:
 800bac4:	4b01      	ldr	r3, [pc, #4]	; (800bacc <_ZN8touchgfx11Application11getInstanceEv+0x8>)
 800bac6:	6818      	ldr	r0, [r3, #0]
 800bac8:	4770      	bx	lr
 800baca:	bf00      	nop
 800bacc:	200121f4 	.word	0x200121f4

0800bad0 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>:
 800bad0:	2300      	movs	r3, #0
 800bad2:	f8a0 3084 	strh.w	r3, [r0, #132]	; 0x84
 800bad6:	f100 0288 	add.w	r2, r0, #136	; 0x88
 800bada:	30a8      	adds	r0, #168	; 0xa8
 800badc:	f802 3b01 	strb.w	r3, [r2], #1
 800bae0:	4282      	cmp	r2, r0
 800bae2:	d1fb      	bne.n	800badc <_ZN8touchgfx11Application20clearAllTimerWidgetsEv+0xc>
 800bae4:	4770      	bx	lr

0800bae6 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>:
 800bae6:	4603      	mov	r3, r0
 800bae8:	f100 0140 	add.w	r1, r0, #64	; 0x40
 800baec:	2200      	movs	r2, #0
 800baee:	801a      	strh	r2, [r3, #0]
 800baf0:	805a      	strh	r2, [r3, #2]
 800baf2:	809a      	strh	r2, [r3, #4]
 800baf4:	80da      	strh	r2, [r3, #6]
 800baf6:	3308      	adds	r3, #8
 800baf8:	428b      	cmp	r3, r1
 800bafa:	d1f8      	bne.n	800baee <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev+0x8>
 800bafc:	f8a0 2040 	strh.w	r2, [r0, #64]	; 0x40
 800bb00:	4770      	bx	lr
	...

0800bb04 <_ZN8touchgfx11ApplicationC1Ev>:
 800bb04:	b570      	push	{r4, r5, r6, lr}
 800bb06:	4b1a      	ldr	r3, [pc, #104]	; (800bb70 <_ZN8touchgfx11ApplicationC1Ev+0x6c>)
 800bb08:	6003      	str	r3, [r0, #0]
 800bb0a:	2500      	movs	r5, #0
 800bb0c:	4604      	mov	r4, r0
 800bb0e:	f8a0 5084 	strh.w	r5, [r0, #132]	; 0x84
 800bb12:	30a8      	adds	r0, #168	; 0xa8
 800bb14:	f7ff ffe7 	bl	800bae6 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 800bb18:	f104 00ea 	add.w	r0, r4, #234	; 0xea
 800bb1c:	f7ff ffe3 	bl	800bae6 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 800bb20:	f8a4 512c 	strh.w	r5, [r4, #300]	; 0x12c
 800bb24:	f8a4 512e 	strh.w	r5, [r4, #302]	; 0x12e
 800bb28:	f8a4 5130 	strh.w	r5, [r4, #304]	; 0x130
 800bb2c:	f8a4 5132 	strh.w	r5, [r4, #306]	; 0x132
 800bb30:	f884 5134 	strb.w	r5, [r4, #308]	; 0x134
 800bb34:	f884 5135 	strb.w	r5, [r4, #309]	; 0x135
 800bb38:	490e      	ldr	r1, [pc, #56]	; (800bb74 <_ZN8touchgfx11ApplicationC1Ev+0x70>)
 800bb3a:	480f      	ldr	r0, [pc, #60]	; (800bb78 <_ZN8touchgfx11ApplicationC1Ev+0x74>)
 800bb3c:	4e0f      	ldr	r6, [pc, #60]	; (800bb7c <_ZN8touchgfx11ApplicationC1Ev+0x78>)
 800bb3e:	f00d fb09 	bl	8019154 <CRC_Lock>
 800bb42:	4b0f      	ldr	r3, [pc, #60]	; (800bb80 <_ZN8touchgfx11ApplicationC1Ev+0x7c>)
 800bb44:	b158      	cbz	r0, 800bb5e <_ZN8touchgfx11ApplicationC1Ev+0x5a>
 800bb46:	801d      	strh	r5, [r3, #0]
 800bb48:	4a0e      	ldr	r2, [pc, #56]	; (800bb84 <_ZN8touchgfx11ApplicationC1Ev+0x80>)
 800bb4a:	2300      	movs	r3, #0
 800bb4c:	6013      	str	r3, [r2, #0]
 800bb4e:	4a0e      	ldr	r2, [pc, #56]	; (800bb88 <_ZN8touchgfx11ApplicationC1Ev+0x84>)
 800bb50:	6033      	str	r3, [r6, #0]
 800bb52:	4620      	mov	r0, r4
 800bb54:	6013      	str	r3, [r2, #0]
 800bb56:	f7ff ffbb 	bl	800bad0 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
 800bb5a:	4620      	mov	r0, r4
 800bb5c:	bd70      	pop	{r4, r5, r6, pc}
 800bb5e:	f44f 6280 	mov.w	r2, #1024	; 0x400
 800bb62:	2002      	movs	r0, #2
 800bb64:	801a      	strh	r2, [r3, #0]
 800bb66:	6030      	str	r0, [r6, #0]
 800bb68:	f000 fff0 	bl	800cb4c <_ZN8touchgfx6Screen4drawEv>
 800bb6c:	e7ec      	b.n	800bb48 <_ZN8touchgfx11ApplicationC1Ev+0x44>
 800bb6e:	bf00      	nop
 800bb70:	0801c484 	.word	0x0801c484
 800bb74:	b5e8b5cd 	.word	0xb5e8b5cd
 800bb78:	f407a5c2 	.word	0xf407a5c2
 800bb7c:	200121e4 	.word	0x200121e4
 800bb80:	20000094 	.word	0x20000094
 800bb84:	200121f4 	.word	0x200121f4
 800bb88:	200121e8 	.word	0x200121e8

0800bb8c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>:
 800bb8c:	2300      	movs	r3, #0
 800bb8e:	8003      	strh	r3, [r0, #0]
 800bb90:	8043      	strh	r3, [r0, #2]
 800bb92:	8083      	strh	r3, [r0, #4]
 800bb94:	80c3      	strh	r3, [r0, #6]
 800bb96:	f8b1 3040 	ldrh.w	r3, [r1, #64]	; 0x40
 800bb9a:	4293      	cmp	r3, r2
 800bb9c:	b530      	push	{r4, r5, lr}
 800bb9e:	d912      	bls.n	800bbc6 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x3a>
 800bba0:	eb01 04c2 	add.w	r4, r1, r2, lsl #3
 800bba4:	3b01      	subs	r3, #1
 800bba6:	6825      	ldr	r5, [r4, #0]
 800bba8:	6005      	str	r5, [r0, #0]
 800bbaa:	b29b      	uxth	r3, r3
 800bbac:	6865      	ldr	r5, [r4, #4]
 800bbae:	6045      	str	r5, [r0, #4]
 800bbb0:	4293      	cmp	r3, r2
 800bbb2:	f8a1 3040 	strh.w	r3, [r1, #64]	; 0x40
 800bbb6:	d906      	bls.n	800bbc6 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x3a>
 800bbb8:	eb01 03c3 	add.w	r3, r1, r3, lsl #3
 800bbbc:	681d      	ldr	r5, [r3, #0]
 800bbbe:	f841 5032 	str.w	r5, [r1, r2, lsl #3]
 800bbc2:	685d      	ldr	r5, [r3, #4]
 800bbc4:	6065      	str	r5, [r4, #4]
 800bbc6:	bd30      	pop	{r4, r5, pc}

0800bbc8 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_>:
 800bbc8:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800bbca:	466b      	mov	r3, sp
 800bbcc:	e883 0006 	stmia.w	r3, {r1, r2}
 800bbd0:	f8b0 2040 	ldrh.w	r2, [r0, #64]	; 0x40
 800bbd4:	2a07      	cmp	r2, #7
 800bbd6:	4604      	mov	r4, r0
 800bbd8:	d906      	bls.n	800bbe8 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_+0x20>
 800bbda:	4b09      	ldr	r3, [pc, #36]	; (800bc00 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_+0x38>)
 800bbdc:	4a09      	ldr	r2, [pc, #36]	; (800bc04 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_+0x3c>)
 800bbde:	480a      	ldr	r0, [pc, #40]	; (800bc08 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_+0x40>)
 800bbe0:	f240 118f 	movw	r1, #399	; 0x18f
 800bbe4:	f00d fc12 	bl	801940c <__assert_func>
 800bbe8:	1c51      	adds	r1, r2, #1
 800bbea:	f8a0 1040 	strh.w	r1, [r0, #64]	; 0x40
 800bbee:	eb00 05c2 	add.w	r5, r0, r2, lsl #3
 800bbf2:	cb03      	ldmia	r3!, {r0, r1}
 800bbf4:	f844 0032 	str.w	r0, [r4, r2, lsl #3]
 800bbf8:	6069      	str	r1, [r5, #4]
 800bbfa:	b003      	add	sp, #12
 800bbfc:	bd30      	pop	{r4, r5, pc}
 800bbfe:	bf00      	nop
 800bc00:	0801c424 	.word	0x0801c424
 800bc04:	0801c504 	.word	0x0801c504
 800bc08:	0801c453 	.word	0x0801c453

0800bc0c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>:
 800bc0c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800bc10:	b089      	sub	sp, #36	; 0x24
 800bc12:	466c      	mov	r4, sp
 800bc14:	4606      	mov	r6, r0
 800bc16:	4620      	mov	r0, r4
 800bc18:	e884 0006 	stmia.w	r4, {r1, r2}
 800bc1c:	f7fd f965 	bl	8008eea <_ZNK8touchgfx4Rect7isEmptyEv>
 800bc20:	bbb0      	cbnz	r0, 800bc90 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x84>
 800bc22:	f8b6 50e8 	ldrh.w	r5, [r6, #232]	; 0xe8
 800bc26:	b1fd      	cbz	r5, 800bc68 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5c>
 800bc28:	3d01      	subs	r5, #1
 800bc2a:	af04      	add	r7, sp, #16
 800bc2c:	f04f 090a 	mov.w	r9, #10
 800bc30:	eb06 02c5 	add.w	r2, r6, r5, lsl #3
 800bc34:	ab02      	add	r3, sp, #8
 800bc36:	f852 0fa8 	ldr.w	r0, [r2, #168]!
 800bc3a:	6851      	ldr	r1, [r2, #4]
 800bc3c:	c303      	stmia	r3!, {r0, r1}
 800bc3e:	4621      	mov	r1, r4
 800bc40:	a802      	add	r0, sp, #8
 800bc42:	fa1f f885 	uxth.w	r8, r5
 800bc46:	f7ff fed5 	bl	800b9f4 <_ZNK8touchgfx4Rect8includesERKS0_>
 800bc4a:	bb08      	cbnz	r0, 800bc90 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x84>
 800bc4c:	a902      	add	r1, sp, #8
 800bc4e:	4620      	mov	r0, r4
 800bc50:	f7ff fed0 	bl	800b9f4 <_ZNK8touchgfx4Rect8includesERKS0_>
 800bc54:	b1f8      	cbz	r0, 800bc96 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x8a>
 800bc56:	4642      	mov	r2, r8
 800bc58:	f106 01a8 	add.w	r1, r6, #168	; 0xa8
 800bc5c:	a806      	add	r0, sp, #24
 800bc5e:	f7ff ff95 	bl	800bb8c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800bc62:	f115 35ff 	adds.w	r5, r5, #4294967295
 800bc66:	d2e3      	bcs.n	800bc30 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x24>
 800bc68:	f8b6 30e8 	ldrh.w	r3, [r6, #232]	; 0xe8
 800bc6c:	2b08      	cmp	r3, #8
 800bc6e:	f106 05a8 	add.w	r5, r6, #168	; 0xa8
 800bc72:	d108      	bne.n	800bc86 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x7a>
 800bc74:	4629      	mov	r1, r5
 800bc76:	a806      	add	r0, sp, #24
 800bc78:	2207      	movs	r2, #7
 800bc7a:	f7ff ff87 	bl	800bb8c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800bc7e:	a906      	add	r1, sp, #24
 800bc80:	4620      	mov	r0, r4
 800bc82:	f7ff fed9 	bl	800ba38 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 800bc86:	e894 0006 	ldmia.w	r4, {r1, r2}
 800bc8a:	4628      	mov	r0, r5
 800bc8c:	f7ff ff9c 	bl	800bbc8 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_>
 800bc90:	b009      	add	sp, #36	; 0x24
 800bc92:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800bc96:	4621      	mov	r1, r4
 800bc98:	a802      	add	r0, sp, #8
 800bc9a:	f7ff fe89 	bl	800b9b0 <_ZNK8touchgfx4Rect9intersectERKS0_>
 800bc9e:	b150      	cbz	r0, 800bcb6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xaa>
 800bca0:	f106 01a8 	add.w	r1, r6, #168	; 0xa8
 800bca4:	a806      	add	r0, sp, #24
 800bca6:	4642      	mov	r2, r8
 800bca8:	f7ff ff70 	bl	800bb8c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800bcac:	a902      	add	r1, sp, #8
 800bcae:	4620      	mov	r0, r4
 800bcb0:	f7ff fec2 	bl	800ba38 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 800bcb4:	e7d5      	b.n	800bc62 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x56>
 800bcb6:	e894 0003 	ldmia.w	r4, {r0, r1}
 800bcba:	e887 0003 	stmia.w	r7, {r0, r1}
 800bcbe:	a902      	add	r1, sp, #8
 800bcc0:	4638      	mov	r0, r7
 800bcc2:	f7ff feb9 	bl	800ba38 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 800bcc6:	f8bd 2016 	ldrh.w	r2, [sp, #22]
 800bcca:	f8bd 3014 	ldrh.w	r3, [sp, #20]
 800bcce:	f8bd 100c 	ldrh.w	r1, [sp, #12]
 800bcd2:	f8bd 0006 	ldrh.w	r0, [sp, #6]
 800bcd6:	fb13 f302 	smulbb	r3, r3, r2
 800bcda:	f8bd 200e 	ldrh.w	r2, [sp, #14]
 800bcde:	fb11 f102 	smulbb	r1, r1, r2
 800bce2:	f8bd 2004 	ldrh.w	r2, [sp, #4]
 800bce6:	fb12 1100 	smlabb	r1, r2, r0, r1
 800bcea:	220b      	movs	r2, #11
 800bcec:	fb09 f303 	mul.w	r3, r9, r3
 800bcf0:	434a      	muls	r2, r1
 800bcf2:	4293      	cmp	r3, r2
 800bcf4:	dab5      	bge.n	800bc62 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x56>
 800bcf6:	f106 01a8 	add.w	r1, r6, #168	; 0xa8
 800bcfa:	a806      	add	r0, sp, #24
 800bcfc:	4642      	mov	r2, r8
 800bcfe:	f7ff ff45 	bl	800bb8c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800bd02:	e897 0003 	ldmia.w	r7, {r0, r1}
 800bd06:	e884 0003 	stmia.w	r4, {r0, r1}
 800bd0a:	e7aa      	b.n	800bc62 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x56>

0800bd0c <_ZN8touchgfx11Application4drawERNS_4RectE>:
 800bd0c:	b530      	push	{r4, r5, lr}
 800bd0e:	4b1d      	ldr	r3, [pc, #116]	; (800bd84 <_ZN8touchgfx11Application4drawERNS_4RectE+0x78>)
 800bd10:	b085      	sub	sp, #20
 800bd12:	460c      	mov	r4, r1
 800bd14:	f9b3 2000 	ldrsh.w	r2, [r3]
 800bd18:	4b1b      	ldr	r3, [pc, #108]	; (800bd88 <_ZN8touchgfx11Application4drawERNS_4RectE+0x7c>)
 800bd1a:	f8ad 2004 	strh.w	r2, [sp, #4]
 800bd1e:	2100      	movs	r1, #0
 800bd20:	f9b3 3000 	ldrsh.w	r3, [r3]
 800bd24:	9100      	str	r1, [sp, #0]
 800bd26:	4605      	mov	r5, r0
 800bd28:	6861      	ldr	r1, [r4, #4]
 800bd2a:	6820      	ldr	r0, [r4, #0]
 800bd2c:	f8ad 3006 	strh.w	r3, [sp, #6]
 800bd30:	ab02      	add	r3, sp, #8
 800bd32:	c303      	stmia	r3!, {r0, r1}
 800bd34:	4669      	mov	r1, sp
 800bd36:	a802      	add	r0, sp, #8
 800bd38:	f7fd f894 	bl	8008e64 <_ZN8touchgfx4RectaNERKS0_>
 800bd3c:	ab02      	add	r3, sp, #8
 800bd3e:	cb03      	ldmia	r3!, {r0, r1}
 800bd40:	4b12      	ldr	r3, [pc, #72]	; (800bd8c <_ZN8touchgfx11Application4drawERNS_4RectE+0x80>)
 800bd42:	6020      	str	r0, [r4, #0]
 800bd44:	6818      	ldr	r0, [r3, #0]
 800bd46:	6061      	str	r1, [r4, #4]
 800bd48:	b138      	cbz	r0, 800bd5a <_ZN8touchgfx11Application4drawERNS_4RectE+0x4e>
 800bd4a:	f895 3134 	ldrb.w	r3, [r5, #308]	; 0x134
 800bd4e:	b133      	cbz	r3, 800bd5e <_ZN8touchgfx11Application4drawERNS_4RectE+0x52>
 800bd50:	6821      	ldr	r1, [r4, #0]
 800bd52:	6862      	ldr	r2, [r4, #4]
 800bd54:	4628      	mov	r0, r5
 800bd56:	f7ff ff59 	bl	800bc0c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 800bd5a:	b005      	add	sp, #20
 800bd5c:	bd30      	pop	{r4, r5, pc}
 800bd5e:	6803      	ldr	r3, [r0, #0]
 800bd60:	4621      	mov	r1, r4
 800bd62:	689b      	ldr	r3, [r3, #8]
 800bd64:	4798      	blx	r3
 800bd66:	4b0a      	ldr	r3, [pc, #40]	; (800bd90 <_ZN8touchgfx11Application4drawERNS_4RectE+0x84>)
 800bd68:	6818      	ldr	r0, [r3, #0]
 800bd6a:	b118      	cbz	r0, 800bd74 <_ZN8touchgfx11Application4drawERNS_4RectE+0x68>
 800bd6c:	6803      	ldr	r3, [r0, #0]
 800bd6e:	4621      	mov	r1, r4
 800bd70:	689b      	ldr	r3, [r3, #8]
 800bd72:	4798      	blx	r3
 800bd74:	4b07      	ldr	r3, [pc, #28]	; (800bd94 <_ZN8touchgfx11Application4drawERNS_4RectE+0x88>)
 800bd76:	6818      	ldr	r0, [r3, #0]
 800bd78:	6803      	ldr	r3, [r0, #0]
 800bd7a:	4621      	mov	r1, r4
 800bd7c:	695b      	ldr	r3, [r3, #20]
 800bd7e:	4798      	blx	r3
 800bd80:	e7eb      	b.n	800bd5a <_ZN8touchgfx11Application4drawERNS_4RectE+0x4e>
 800bd82:	bf00      	nop
 800bd84:	2001217c 	.word	0x2001217c
 800bd88:	2001217e 	.word	0x2001217e
 800bd8c:	200121e4 	.word	0x200121e4
 800bd90:	200121e0 	.word	0x200121e0
 800bd94:	20012188 	.word	0x20012188

0800bd98 <_ZN8touchgfx11Application19cacheDrawOperationsEb>:
 800bd98:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800bd9c:	4604      	mov	r4, r0
 800bd9e:	b09b      	sub	sp, #108	; 0x6c
 800bda0:	f880 1134 	strb.w	r1, [r0, #308]	; 0x134
 800bda4:	b129      	cbz	r1, 800bdb2 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1a>
 800bda6:	2300      	movs	r3, #0
 800bda8:	f8a0 30e8 	strh.w	r3, [r0, #232]	; 0xe8
 800bdac:	b01b      	add	sp, #108	; 0x6c
 800bdae:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800bdb2:	f500 7696 	add.w	r6, r0, #300	; 0x12c
 800bdb6:	4630      	mov	r0, r6
 800bdb8:	f7fd f897 	bl	8008eea <_ZNK8touchgfx4Rect7isEmptyEv>
 800bdbc:	4605      	mov	r5, r0
 800bdbe:	b940      	cbnz	r0, 800bdd2 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x3a>
 800bdc0:	e896 0006 	ldmia.w	r6, {r1, r2}
 800bdc4:	4620      	mov	r0, r4
 800bdc6:	f7ff ff21 	bl	800bc0c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 800bdca:	f8c4 512c 	str.w	r5, [r4, #300]	; 0x12c
 800bdce:	f8c4 5130 	str.w	r5, [r4, #304]	; 0x130
 800bdd2:	4b92      	ldr	r3, [pc, #584]	; (800c01c <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x284>)
 800bdd4:	681b      	ldr	r3, [r3, #0]
 800bdd6:	b33b      	cbz	r3, 800be28 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x90>
 800bdd8:	4d91      	ldr	r5, [pc, #580]	; (800c020 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x288>)
 800bdda:	4628      	mov	r0, r5
 800bddc:	f7fd f885 	bl	8008eea <_ZNK8touchgfx4Rect7isEmptyEv>
 800bde0:	4606      	mov	r6, r0
 800bde2:	bb08      	cbnz	r0, 800be28 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x90>
 800bde4:	4628      	mov	r0, r5
 800bde6:	f7ff fc7f 	bl	800b6e8 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 800bdea:	6829      	ldr	r1, [r5, #0]
 800bdec:	686a      	ldr	r2, [r5, #4]
 800bdee:	4620      	mov	r0, r4
 800bdf0:	f7ff ff0c 	bl	800bc0c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 800bdf4:	802e      	strh	r6, [r5, #0]
 800bdf6:	806e      	strh	r6, [r5, #2]
 800bdf8:	80ae      	strh	r6, [r5, #4]
 800bdfa:	80ee      	strh	r6, [r5, #6]
 800bdfc:	4f89      	ldr	r7, [pc, #548]	; (800c024 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x28c>)
 800bdfe:	a809      	add	r0, sp, #36	; 0x24
 800be00:	f7ff fe71 	bl	800bae6 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 800be04:	883d      	ldrh	r5, [r7, #0]
 800be06:	462e      	mov	r6, r5
 800be08:	f8b4 30e8 	ldrh.w	r3, [r4, #232]	; 0xe8
 800be0c:	42b3      	cmp	r3, r6
 800be0e:	d910      	bls.n	800be32 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x9a>
 800be10:	eb04 03c6 	add.w	r3, r4, r6, lsl #3
 800be14:	a809      	add	r0, sp, #36	; 0x24
 800be16:	f8d3 10a8 	ldr.w	r1, [r3, #168]	; 0xa8
 800be1a:	f8d3 20ac 	ldr.w	r2, [r3, #172]	; 0xac
 800be1e:	3601      	adds	r6, #1
 800be20:	f7ff fed2 	bl	800bbc8 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_>
 800be24:	b2b6      	uxth	r6, r6
 800be26:	e7ef      	b.n	800be08 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x70>
 800be28:	f8b4 30e8 	ldrh.w	r3, [r4, #232]	; 0xe8
 800be2c:	2b00      	cmp	r3, #0
 800be2e:	d1e5      	bne.n	800bdfc <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x64>
 800be30:	e7bc      	b.n	800bdac <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x14>
 800be32:	462e      	mov	r6, r5
 800be34:	f8b4 312a 	ldrh.w	r3, [r4, #298]	; 0x12a
 800be38:	42b3      	cmp	r3, r6
 800be3a:	d90b      	bls.n	800be54 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0xbc>
 800be3c:	eb04 03c6 	add.w	r3, r4, r6, lsl #3
 800be40:	4620      	mov	r0, r4
 800be42:	f8d3 10ea 	ldr.w	r1, [r3, #234]	; 0xea
 800be46:	f8d3 20ee 	ldr.w	r2, [r3, #238]	; 0xee
 800be4a:	3601      	adds	r6, #1
 800be4c:	f7ff fede 	bl	800bc0c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 800be50:	b2b6      	uxth	r6, r6
 800be52:	e7ef      	b.n	800be34 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x9c>
 800be54:	4a74      	ldr	r2, [pc, #464]	; (800c028 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x290>)
 800be56:	6813      	ldr	r3, [r2, #0]
 800be58:	f893 3048 	ldrb.w	r3, [r3, #72]	; 0x48
 800be5c:	2b01      	cmp	r3, #1
 800be5e:	4690      	mov	r8, r2
 800be60:	f040 8094 	bne.w	800bf8c <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1f4>
 800be64:	eb04 03c5 	add.w	r3, r4, r5, lsl #3
 800be68:	f8b4 00e8 	ldrh.w	r0, [r4, #232]	; 0xe8
 800be6c:	33aa      	adds	r3, #170	; 0xaa
 800be6e:	f04f 0900 	mov.w	r9, #0
 800be72:	42a8      	cmp	r0, r5
 800be74:	f103 0308 	add.w	r3, r3, #8
 800be78:	dd0a      	ble.n	800be90 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0xf8>
 800be7a:	f833 2c08 	ldrh.w	r2, [r3, #-8]
 800be7e:	f833 1c04 	ldrh.w	r1, [r3, #-4]
 800be82:	440a      	add	r2, r1
 800be84:	b212      	sxth	r2, r2
 800be86:	4591      	cmp	r9, r2
 800be88:	bfb8      	it	lt
 800be8a:	4691      	movlt	r9, r2
 800be8c:	3501      	adds	r5, #1
 800be8e:	e7f0      	b.n	800be72 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0xda>
 800be90:	4b66      	ldr	r3, [pc, #408]	; (800c02c <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x294>)
 800be92:	4e67      	ldr	r6, [pc, #412]	; (800c030 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x298>)
 800be94:	881d      	ldrh	r5, [r3, #0]
 800be96:	2300      	movs	r3, #0
 800be98:	e9cd 3305 	strd	r3, r3, [sp, #20]
 800be9c:	2d0f      	cmp	r5, #15
 800be9e:	bf8c      	ite	hi
 800bea0:	08ed      	lsrhi	r5, r5, #3
 800bea2:	2501      	movls	r5, #1
 800bea4:	f8bd 3016 	ldrh.w	r3, [sp, #22]
 800bea8:	f8bd 101a 	ldrh.w	r1, [sp, #26]
 800beac:	f8d8 0000 	ldr.w	r0, [r8]
 800beb0:	440b      	add	r3, r1
 800beb2:	b21b      	sxth	r3, r3
 800beb4:	4599      	cmp	r9, r3
 800beb6:	6802      	ldr	r2, [r0, #0]
 800beb8:	dd4b      	ble.n	800bf52 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1ba>
 800beba:	f8d2 3084 	ldr.w	r3, [r2, #132]	; 0x84
 800bebe:	4798      	blx	r3
 800bec0:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 800bec4:	f8bd 3016 	ldrh.w	r3, [sp, #22]
 800bec8:	4413      	add	r3, r2
 800beca:	b21b      	sxth	r3, r3
 800becc:	195a      	adds	r2, r3, r5
 800bece:	4290      	cmp	r0, r2
 800bed0:	da07      	bge.n	800bee2 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x14a>
 800bed2:	4581      	cmp	r9, r0
 800bed4:	dd05      	ble.n	800bee2 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x14a>
 800bed6:	4298      	cmp	r0, r3
 800bed8:	da33      	bge.n	800bf42 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1aa>
 800beda:	2b00      	cmp	r3, #0
 800bedc:	dd31      	ble.n	800bf42 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1aa>
 800bede:	4648      	mov	r0, r9
 800bee0:	e004      	b.n	800beec <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x154>
 800bee2:	4298      	cmp	r0, r3
 800bee4:	dbfb      	blt.n	800bede <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x146>
 800bee6:	4548      	cmp	r0, r9
 800bee8:	bfa8      	it	ge
 800beea:	4648      	movge	r0, r9
 800beec:	f9b6 2000 	ldrsh.w	r2, [r6]
 800bef0:	f8b7 a000 	ldrh.w	sl, [r7]
 800bef4:	f8ad 3016 	strh.w	r3, [sp, #22]
 800bef8:	2100      	movs	r1, #0
 800befa:	1ac0      	subs	r0, r0, r3
 800befc:	f8ad 1014 	strh.w	r1, [sp, #20]
 800bf00:	f8ad 2018 	strh.w	r2, [sp, #24]
 800bf04:	f8ad 001a 	strh.w	r0, [sp, #26]
 800bf08:	f8b4 30e8 	ldrh.w	r3, [r4, #232]	; 0xe8
 800bf0c:	4553      	cmp	r3, sl
 800bf0e:	d9c9      	bls.n	800bea4 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x10c>
 800bf10:	eb04 02ca 	add.w	r2, r4, sl, lsl #3
 800bf14:	ab07      	add	r3, sp, #28
 800bf16:	f852 0fa8 	ldr.w	r0, [r2, #168]!
 800bf1a:	6851      	ldr	r1, [r2, #4]
 800bf1c:	c303      	stmia	r3!, {r0, r1}
 800bf1e:	a807      	add	r0, sp, #28
 800bf20:	a905      	add	r1, sp, #20
 800bf22:	f7fc ff9f 	bl	8008e64 <_ZN8touchgfx4RectaNERKS0_>
 800bf26:	a807      	add	r0, sp, #28
 800bf28:	f7fc ffdf 	bl	8008eea <_ZNK8touchgfx4Rect7isEmptyEv>
 800bf2c:	b920      	cbnz	r0, 800bf38 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1a0>
 800bf2e:	6823      	ldr	r3, [r4, #0]
 800bf30:	a907      	add	r1, sp, #28
 800bf32:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800bf34:	4620      	mov	r0, r4
 800bf36:	4798      	blx	r3
 800bf38:	f10a 0a01 	add.w	sl, sl, #1
 800bf3c:	fa1f fa8a 	uxth.w	sl, sl
 800bf40:	e7e2      	b.n	800bf08 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x170>
 800bf42:	f8d8 0000 	ldr.w	r0, [r8]
 800bf46:	6803      	ldr	r3, [r0, #0]
 800bf48:	2101      	movs	r1, #1
 800bf4a:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800bf4e:	4798      	blx	r3
 800bf50:	e7a8      	b.n	800bea4 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x10c>
 800bf52:	69d3      	ldr	r3, [r2, #28]
 800bf54:	4798      	blx	r3
 800bf56:	4b37      	ldr	r3, [pc, #220]	; (800c034 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x29c>)
 800bf58:	781b      	ldrb	r3, [r3, #0]
 800bf5a:	2b00      	cmp	r3, #0
 800bf5c:	f43f af26 	beq.w	800bdac <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x14>
 800bf60:	2300      	movs	r3, #0
 800bf62:	883d      	ldrh	r5, [r7, #0]
 800bf64:	f8a4 312a 	strh.w	r3, [r4, #298]	; 0x12a
 800bf68:	34ea      	adds	r4, #234	; 0xea
 800bf6a:	f8bd 3064 	ldrh.w	r3, [sp, #100]	; 0x64
 800bf6e:	42ab      	cmp	r3, r5
 800bf70:	f67f af1c 	bls.w	800bdac <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x14>
 800bf74:	ab1a      	add	r3, sp, #104	; 0x68
 800bf76:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 800bf7a:	3b44      	subs	r3, #68	; 0x44
 800bf7c:	e893 0006 	ldmia.w	r3, {r1, r2}
 800bf80:	4620      	mov	r0, r4
 800bf82:	3501      	adds	r5, #1
 800bf84:	f7ff fe20 	bl	800bbc8 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_>
 800bf88:	b2ad      	uxth	r5, r5
 800bf8a:	e7ee      	b.n	800bf6a <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1d2>
 800bf8c:	2b02      	cmp	r3, #2
 800bf8e:	f040 813d 	bne.w	800c20c <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x474>
 800bf92:	4b29      	ldr	r3, [pc, #164]	; (800c038 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2a0>)
 800bf94:	781b      	ldrb	r3, [r3, #0]
 800bf96:	2b01      	cmp	r3, #1
 800bf98:	f000 809d 	beq.w	800c0d6 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x33e>
 800bf9c:	f104 0ba8 	add.w	fp, r4, #168	; 0xa8
 800bfa0:	883a      	ldrh	r2, [r7, #0]
 800bfa2:	f8b4 10e8 	ldrh.w	r1, [r4, #232]	; 0xe8
 800bfa6:	3201      	adds	r2, #1
 800bfa8:	b292      	uxth	r2, r2
 800bfaa:	2900      	cmp	r1, #0
 800bfac:	d0d3      	beq.n	800bf56 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1be>
 800bfae:	f8b4 50aa 	ldrh.w	r5, [r4, #170]	; 0xaa
 800bfb2:	f8b4 30ae 	ldrh.w	r3, [r4, #174]	; 0xae
 800bfb6:	441d      	add	r5, r3
 800bfb8:	b22d      	sxth	r5, r5
 800bfba:	4610      	mov	r0, r2
 800bfbc:	f04f 0a00 	mov.w	sl, #0
 800bfc0:	b283      	uxth	r3, r0
 800bfc2:	4299      	cmp	r1, r3
 800bfc4:	ea4f 06ca 	mov.w	r6, sl, lsl #3
 800bfc8:	f240 80c3 	bls.w	800c152 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x3ba>
 800bfcc:	4426      	add	r6, r4
 800bfce:	eb04 09c0 	add.w	r9, r4, r0, lsl #3
 800bfd2:	f9b6 30aa 	ldrsh.w	r3, [r6, #170]	; 0xaa
 800bfd6:	f9b9 e0aa 	ldrsh.w	lr, [r9, #170]	; 0xaa
 800bfda:	4573      	cmp	r3, lr
 800bfdc:	4684      	mov	ip, r0
 800bfde:	f340 80a5 	ble.w	800c12c <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x394>
 800bfe2:	f8b9 50ae 	ldrh.w	r5, [r9, #174]	; 0xae
 800bfe6:	4475      	add	r5, lr
 800bfe8:	b22d      	sxth	r5, r5
 800bfea:	429d      	cmp	r5, r3
 800bfec:	bfa8      	it	ge
 800bfee:	461d      	movge	r5, r3
 800bff0:	3001      	adds	r0, #1
 800bff2:	46e2      	mov	sl, ip
 800bff4:	e7e4      	b.n	800bfc0 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x228>
 800bff6:	d10b      	bne.n	800c010 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x278>
 800bff8:	f9b5 c0ae 	ldrsh.w	ip, [r5, #174]	; 0xae
 800bffc:	f9b9 10ae 	ldrsh.w	r1, [r9, #174]	; 0xae
 800c000:	458c      	cmp	ip, r1
 800c002:	bfb4      	ite	lt
 800c004:	469c      	movlt	ip, r3
 800c006:	46b4      	movge	ip, r6
 800c008:	4572      	cmp	r2, lr
 800c00a:	bfb8      	it	lt
 800c00c:	4672      	movlt	r2, lr
 800c00e:	e08a      	b.n	800c126 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x38e>
 800c010:	428a      	cmp	r2, r1
 800c012:	bfb8      	it	lt
 800c014:	460a      	movlt	r2, r1
 800c016:	46b4      	mov	ip, r6
 800c018:	e085      	b.n	800c126 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x38e>
 800c01a:	bf00      	nop
 800c01c:	200121e0 	.word	0x200121e0
 800c020:	200121ec 	.word	0x200121ec
 800c024:	20000094 	.word	0x20000094
 800c028:	20012188 	.word	0x20012188
 800c02c:	2001217e 	.word	0x2001217e
 800c030:	2001217c 	.word	0x2001217c
 800c034:	20012186 	.word	0x20012186
 800c038:	20012180 	.word	0x20012180
 800c03c:	1961      	adds	r1, r4, r5
 800c03e:	ab05      	add	r3, sp, #20
 800c040:	f851 0fa8 	ldr.w	r0, [r1, #168]!
 800c044:	6849      	ldr	r1, [r1, #4]
 800c046:	c303      	stmia	r3!, {r0, r1}
 800c048:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 800c04c:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 800c050:	2b13      	cmp	r3, #19
 800c052:	bfd8      	it	le
 800c054:	f9bd 2014 	ldrshle.w	r2, [sp, #20]
 800c058:	f8ad 2014 	strh.w	r2, [sp, #20]
 800c05c:	440b      	add	r3, r1
 800c05e:	1a9b      	subs	r3, r3, r2
 800c060:	a805      	add	r0, sp, #20
 800c062:	f8ad 3018 	strh.w	r3, [sp, #24]
 800c066:	f7ff fb99 	bl	800b79c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 800c06a:	a805      	add	r0, sp, #20
 800c06c:	f7fc ff3d 	bl	8008eea <_ZNK8touchgfx4Rect7isEmptyEv>
 800c070:	bb88      	cbnz	r0, 800c0d6 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x33e>
 800c072:	f9bd c01a 	ldrsh.w	ip, [sp, #26]
 800c076:	f8d8 0000 	ldr.w	r0, [r8]
 800c07a:	f8bd 3018 	ldrh.w	r3, [sp, #24]
 800c07e:	f8d0 e000 	ldr.w	lr, [r0]
 800c082:	f8bd 2016 	ldrh.w	r2, [sp, #22]
 800c086:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 800c08a:	f1bc 0f14 	cmp.w	ip, #20
 800c08e:	bfa8      	it	ge
 800c090:	f04f 0c14 	movge.w	ip, #20
 800c094:	fa1f fc8c 	uxth.w	ip, ip
 800c098:	f8cd c000 	str.w	ip, [sp]
 800c09c:	f8de 9078 	ldr.w	r9, [lr, #120]	; 0x78
 800c0a0:	47c8      	blx	r9
 800c0a2:	4681      	mov	r9, r0
 800c0a4:	f8ad 001a 	strh.w	r0, [sp, #26]
 800c0a8:	a805      	add	r0, sp, #20
 800c0aa:	f7ff fb1d 	bl	800b6e8 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 800c0ae:	6823      	ldr	r3, [r4, #0]
 800c0b0:	4425      	add	r5, r4
 800c0b2:	4620      	mov	r0, r4
 800c0b4:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800c0b6:	a905      	add	r1, sp, #20
 800c0b8:	4798      	blx	r3
 800c0ba:	f8b5 00ac 	ldrh.w	r0, [r5, #172]	; 0xac
 800c0be:	eba0 0009 	sub.w	r0, r0, r9
 800c0c2:	b200      	sxth	r0, r0
 800c0c4:	f8a5 00ac 	strh.w	r0, [r5, #172]	; 0xac
 800c0c8:	b928      	cbnz	r0, 800c0d6 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x33e>
 800c0ca:	b2b2      	uxth	r2, r6
 800c0cc:	f104 01a8 	add.w	r1, r4, #168	; 0xa8
 800c0d0:	a807      	add	r0, sp, #28
 800c0d2:	f7ff fd5b 	bl	800bb8c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800c0d6:	f8b4 a0e8 	ldrh.w	sl, [r4, #232]	; 0xe8
 800c0da:	f1ba 0f00 	cmp.w	sl, #0
 800c0de:	f43f af3a 	beq.w	800bf56 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1be>
 800c0e2:	883b      	ldrh	r3, [r7, #0]
 800c0e4:	f9b4 20a8 	ldrsh.w	r2, [r4, #168]	; 0xa8
 800c0e8:	3301      	adds	r3, #1
 800c0ea:	b29b      	uxth	r3, r3
 800c0ec:	2600      	movs	r6, #0
 800c0ee:	b299      	uxth	r1, r3
 800c0f0:	458a      	cmp	sl, r1
 800c0f2:	ea4f 05c6 	mov.w	r5, r6, lsl #3
 800c0f6:	d9a1      	bls.n	800c03c <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2a4>
 800c0f8:	4425      	add	r5, r4
 800c0fa:	eb04 09c3 	add.w	r9, r4, r3, lsl #3
 800c0fe:	f8b5 10ac 	ldrh.w	r1, [r5, #172]	; 0xac
 800c102:	f8b5 00a8 	ldrh.w	r0, [r5, #168]	; 0xa8
 800c106:	f9b9 e0a8 	ldrsh.w	lr, [r9, #168]	; 0xa8
 800c10a:	4408      	add	r0, r1
 800c10c:	f8b9 10ac 	ldrh.w	r1, [r9, #172]	; 0xac
 800c110:	4471      	add	r1, lr
 800c112:	b200      	sxth	r0, r0
 800c114:	b209      	sxth	r1, r1
 800c116:	4288      	cmp	r0, r1
 800c118:	469c      	mov	ip, r3
 800c11a:	f6bf af6c 	bge.w	800bff6 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x25e>
 800c11e:	4586      	cmp	lr, r0
 800c120:	4672      	mov	r2, lr
 800c122:	bfb8      	it	lt
 800c124:	4602      	movlt	r2, r0
 800c126:	3301      	adds	r3, #1
 800c128:	4666      	mov	r6, ip
 800c12a:	e7e0      	b.n	800c0ee <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x356>
 800c12c:	d10c      	bne.n	800c148 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x3b0>
 800c12e:	f9b6 c0ac 	ldrsh.w	ip, [r6, #172]	; 0xac
 800c132:	f9b9 60ac 	ldrsh.w	r6, [r9, #172]	; 0xac
 800c136:	45b4      	cmp	ip, r6
 800c138:	bfb4      	ite	lt
 800c13a:	4684      	movlt	ip, r0
 800c13c:	46d4      	movge	ip, sl
 800c13e:	f8b9 60ae 	ldrh.w	r6, [r9, #174]	; 0xae
 800c142:	4433      	add	r3, r6
 800c144:	b21b      	sxth	r3, r3
 800c146:	e750      	b.n	800bfea <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x252>
 800c148:	4575      	cmp	r5, lr
 800c14a:	bfa8      	it	ge
 800c14c:	4675      	movge	r5, lr
 800c14e:	46d4      	mov	ip, sl
 800c150:	e74e      	b.n	800bff0 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x258>
 800c152:	eb0b 0006 	add.w	r0, fp, r6
 800c156:	4426      	add	r6, r4
 800c158:	e9cd 1202 	strd	r1, r2, [sp, #8]
 800c15c:	f9b6 90ae 	ldrsh.w	r9, [r6, #174]	; 0xae
 800c160:	f1b9 0f13 	cmp.w	r9, #19
 800c164:	bfde      	ittt	le
 800c166:	f8b6 50aa 	ldrhle.w	r5, [r6, #170]	; 0xaa
 800c16a:	444d      	addle	r5, r9
 800c16c:	b22d      	sxthle	r5, r5
 800c16e:	f7fc febc 	bl	8008eea <_ZNK8touchgfx4Rect7isEmptyEv>
 800c172:	e9dd 1202 	ldrd	r1, r2, [sp, #8]
 800c176:	2800      	cmp	r0, #0
 800c178:	f47f af17 	bne.w	800bfaa <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x212>
 800c17c:	f9b6 c0aa 	ldrsh.w	ip, [r6, #170]	; 0xaa
 800c180:	f8ad 001a 	strh.w	r0, [sp, #26]
 800c184:	eba5 050c 	sub.w	r5, r5, ip
 800c188:	fa1f f28c 	uxth.w	r2, ip
 800c18c:	fa1f f989 	uxth.w	r9, r9
 800c190:	eb02 0009 	add.w	r0, r2, r9
 800c194:	2d14      	cmp	r5, #20
 800c196:	bfa8      	it	ge
 800c198:	2514      	movge	r5, #20
 800c19a:	b200      	sxth	r0, r0
 800c19c:	fa1f fe85 	uxth.w	lr, r5
 800c1a0:	eba0 000c 	sub.w	r0, r0, ip
 800c1a4:	f9b6 10a8 	ldrsh.w	r1, [r6, #168]	; 0xa8
 800c1a8:	f9b6 30ac 	ldrsh.w	r3, [r6, #172]	; 0xac
 800c1ac:	f8ad 1014 	strh.w	r1, [sp, #20]
 800c1b0:	4586      	cmp	lr, r0
 800c1b2:	f8d8 0000 	ldr.w	r0, [r8]
 800c1b6:	f8ad c016 	strh.w	ip, [sp, #22]
 800c1ba:	f8ad 3018 	strh.w	r3, [sp, #24]
 800c1be:	bfb8      	it	lt
 800c1c0:	46f1      	movlt	r9, lr
 800c1c2:	6805      	ldr	r5, [r0, #0]
 800c1c4:	f8cd 9000 	str.w	r9, [sp]
 800c1c8:	b29b      	uxth	r3, r3
 800c1ca:	b289      	uxth	r1, r1
 800c1cc:	6fad      	ldr	r5, [r5, #120]	; 0x78
 800c1ce:	47a8      	blx	r5
 800c1d0:	6823      	ldr	r3, [r4, #0]
 800c1d2:	f8ad 001a 	strh.w	r0, [sp, #26]
 800c1d6:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800c1d8:	a905      	add	r1, sp, #20
 800c1da:	4620      	mov	r0, r4
 800c1dc:	4798      	blx	r3
 800c1de:	f8bd 101a 	ldrh.w	r1, [sp, #26]
 800c1e2:	f8b6 30ae 	ldrh.w	r3, [r6, #174]	; 0xae
 800c1e6:	f8b6 20aa 	ldrh.w	r2, [r6, #170]	; 0xaa
 800c1ea:	1a5b      	subs	r3, r3, r1
 800c1ec:	440a      	add	r2, r1
 800c1ee:	b21b      	sxth	r3, r3
 800c1f0:	f8a6 20aa 	strh.w	r2, [r6, #170]	; 0xaa
 800c1f4:	f8a6 30ae 	strh.w	r3, [r6, #174]	; 0xae
 800c1f8:	2b00      	cmp	r3, #0
 800c1fa:	f47f aed1 	bne.w	800bfa0 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x208>
 800c1fe:	fa1f f28a 	uxth.w	r2, sl
 800c202:	4659      	mov	r1, fp
 800c204:	a807      	add	r0, sp, #28
 800c206:	f7ff fcc1 	bl	800bb8c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800c20a:	e6c9      	b.n	800bfa0 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x208>
 800c20c:	f8b4 30e8 	ldrh.w	r3, [r4, #232]	; 0xe8
 800c210:	42ab      	cmp	r3, r5
 800c212:	f67f aea0 	bls.w	800bf56 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1be>
 800c216:	eb04 02c5 	add.w	r2, r4, r5, lsl #3
 800c21a:	ab07      	add	r3, sp, #28
 800c21c:	f852 0fa8 	ldr.w	r0, [r2, #168]!
 800c220:	6851      	ldr	r1, [r2, #4]
 800c222:	c303      	stmia	r3!, {r0, r1}
 800c224:	a807      	add	r0, sp, #28
 800c226:	f7fc fe60 	bl	8008eea <_ZNK8touchgfx4Rect7isEmptyEv>
 800c22a:	b920      	cbnz	r0, 800c236 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x49e>
 800c22c:	6823      	ldr	r3, [r4, #0]
 800c22e:	a907      	add	r1, sp, #28
 800c230:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800c232:	4620      	mov	r0, r4
 800c234:	4798      	blx	r3
 800c236:	3501      	adds	r5, #1
 800c238:	b2ad      	uxth	r5, r5
 800c23a:	e7e7      	b.n	800c20c <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x474>

0800c23c <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE>:
 800c23c:	4b03      	ldr	r3, [pc, #12]	; (800c24c <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE+0x10>)
 800c23e:	2200      	movs	r2, #0
 800c240:	801a      	strh	r2, [r3, #0]
 800c242:	805a      	strh	r2, [r3, #2]
 800c244:	809a      	strh	r2, [r3, #4]
 800c246:	80da      	strh	r2, [r3, #6]
 800c248:	4770      	bx	lr
 800c24a:	bf00      	nop
 800c24c:	200121ec 	.word	0x200121ec

0800c250 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>:
 800c250:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c254:	4607      	mov	r7, r0
 800c256:	b099      	sub	sp, #100	; 0x64
 800c258:	a802      	add	r0, sp, #8
 800c25a:	4614      	mov	r4, r2
 800c25c:	461d      	mov	r5, r3
 800c25e:	468a      	mov	sl, r1
 800c260:	f000 fdbc 	bl	800cddc <_ZN8touchgfx12TextProviderC1Ev>
 800c264:	683b      	ldr	r3, [r7, #0]
 800c266:	4638      	mov	r0, r7
 800c268:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800c26a:	4798      	blx	r3
 800c26c:	462a      	mov	r2, r5
 800c26e:	4603      	mov	r3, r0
 800c270:	4621      	mov	r1, r4
 800c272:	a802      	add	r0, sp, #8
 800c274:	f000 fdf7 	bl	800ce66 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_>
 800c278:	2500      	movs	r5, #0
 800c27a:	462c      	mov	r4, r5
 800c27c:	46a9      	mov	r9, r5
 800c27e:	46a8      	mov	r8, r5
 800c280:	f242 0b0b 	movw	fp, #8203	; 0x200b
 800c284:	2300      	movs	r3, #0
 800c286:	9301      	str	r3, [sp, #4]
 800c288:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 800c28c:	429c      	cmp	r4, r3
 800c28e:	d002      	beq.n	800c296 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x46>
 800c290:	455c      	cmp	r4, fp
 800c292:	bf18      	it	ne
 800c294:	4625      	movne	r5, r4
 800c296:	ab01      	add	r3, sp, #4
 800c298:	463a      	mov	r2, r7
 800c29a:	4651      	mov	r1, sl
 800c29c:	a802      	add	r0, sp, #8
 800c29e:	f001 f8db 	bl	800d458 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800c2a2:	4604      	mov	r4, r0
 800c2a4:	b108      	cbz	r0, 800c2aa <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x5a>
 800c2a6:	280a      	cmp	r0, #10
 800c2a8:	d10a      	bne.n	800c2c0 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x70>
 800c2aa:	45c1      	cmp	r9, r8
 800c2ac:	bf38      	it	cc
 800c2ae:	46c1      	movcc	r9, r8
 800c2b0:	f04f 0800 	mov.w	r8, #0
 800c2b4:	2c00      	cmp	r4, #0
 800c2b6:	d1e5      	bne.n	800c284 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x34>
 800c2b8:	4648      	mov	r0, r9
 800c2ba:	b019      	add	sp, #100	; 0x64
 800c2bc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c2c0:	9a01      	ldr	r2, [sp, #4]
 800c2c2:	2a00      	cmp	r2, #0
 800c2c4:	d0de      	beq.n	800c284 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x34>
 800c2c6:	7b56      	ldrb	r6, [r2, #13]
 800c2c8:	683b      	ldr	r3, [r7, #0]
 800c2ca:	8894      	ldrh	r4, [r2, #4]
 800c2cc:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800c2ce:	0076      	lsls	r6, r6, #1
 800c2d0:	f406 7080 	and.w	r0, r6, #256	; 0x100
 800c2d4:	7a96      	ldrb	r6, [r2, #10]
 800c2d6:	4629      	mov	r1, r5
 800c2d8:	4306      	orrs	r6, r0
 800c2da:	4638      	mov	r0, r7
 800c2dc:	4798      	blx	r3
 800c2de:	4430      	add	r0, r6
 800c2e0:	4480      	add	r8, r0
 800c2e2:	fa1f f888 	uxth.w	r8, r8
 800c2e6:	e7e5      	b.n	800c2b4 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x64>

0800c2e8 <_ZNK8touchgfx4Font12getCharWidthEt>:
 800c2e8:	b508      	push	{r3, lr}
 800c2ea:	6803      	ldr	r3, [r0, #0]
 800c2ec:	68db      	ldr	r3, [r3, #12]
 800c2ee:	4798      	blx	r3
 800c2f0:	b128      	cbz	r0, 800c2fe <_ZNK8touchgfx4Font12getCharWidthEt+0x16>
 800c2f2:	7b43      	ldrb	r3, [r0, #13]
 800c2f4:	7a80      	ldrb	r0, [r0, #10]
 800c2f6:	005b      	lsls	r3, r3, #1
 800c2f8:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800c2fc:	4318      	orrs	r0, r3
 800c2fe:	bd08      	pop	{r3, pc}

0800c300 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz>:
 800c300:	b40e      	push	{r1, r2, r3}
 800c302:	b5f0      	push	{r4, r5, r6, r7, lr}
 800c304:	b098      	sub	sp, #96	; 0x60
 800c306:	ab1d      	add	r3, sp, #116	; 0x74
 800c308:	4605      	mov	r5, r0
 800c30a:	f853 4b04 	ldr.w	r4, [r3], #4
 800c30e:	9300      	str	r3, [sp, #0]
 800c310:	a802      	add	r0, sp, #8
 800c312:	f000 fd63 	bl	800cddc <_ZN8touchgfx12TextProviderC1Ev>
 800c316:	682b      	ldr	r3, [r5, #0]
 800c318:	4628      	mov	r0, r5
 800c31a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800c31c:	4798      	blx	r3
 800c31e:	ae18      	add	r6, sp, #96	; 0x60
 800c320:	4603      	mov	r3, r0
 800c322:	4621      	mov	r1, r4
 800c324:	9a00      	ldr	r2, [sp, #0]
 800c326:	2400      	movs	r4, #0
 800c328:	a802      	add	r0, sp, #8
 800c32a:	f000 fd9c 	bl	800ce66 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_>
 800c32e:	f846 4d5c 	str.w	r4, [r6, #-92]!
 800c332:	462a      	mov	r2, r5
 800c334:	4633      	mov	r3, r6
 800c336:	4621      	mov	r1, r4
 800c338:	a802      	add	r0, sp, #8
 800c33a:	f001 f88d 	bl	800d458 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800c33e:	b1f0      	cbz	r0, 800c37e <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x7e>
 800c340:	280a      	cmp	r0, #10
 800c342:	d018      	beq.n	800c376 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x76>
 800c344:	9f01      	ldr	r7, [sp, #4]
 800c346:	b1b7      	cbz	r7, 800c376 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x76>
 800c348:	7b78      	ldrb	r0, [r7, #13]
 800c34a:	7a3b      	ldrb	r3, [r7, #8]
 800c34c:	88aa      	ldrh	r2, [r5, #4]
 800c34e:	00c1      	lsls	r1, r0, #3
 800c350:	f401 7180 	and.w	r1, r1, #256	; 0x100
 800c354:	4319      	orrs	r1, r3
 800c356:	0643      	lsls	r3, r0, #25
 800c358:	bf44      	itt	mi
 800c35a:	f5a1 7300 	submi.w	r3, r1, #512	; 0x200
 800c35e:	b219      	sxthmi	r1, r3
 800c360:	0100      	lsls	r0, r0, #4
 800c362:	79fb      	ldrb	r3, [r7, #7]
 800c364:	f400 7080 	and.w	r0, r0, #256	; 0x100
 800c368:	4303      	orrs	r3, r0
 800c36a:	4413      	add	r3, r2
 800c36c:	1a5b      	subs	r3, r3, r1
 800c36e:	b29b      	uxth	r3, r3
 800c370:	42a3      	cmp	r3, r4
 800c372:	bfc8      	it	gt
 800c374:	b21c      	sxthgt	r4, r3
 800c376:	4633      	mov	r3, r6
 800c378:	462a      	mov	r2, r5
 800c37a:	2100      	movs	r1, #0
 800c37c:	e7dc      	b.n	800c338 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x38>
 800c37e:	b2a0      	uxth	r0, r4
 800c380:	b018      	add	sp, #96	; 0x60
 800c382:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 800c386:	b003      	add	sp, #12
 800c388:	4770      	bx	lr

0800c38a <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz>:
 800c38a:	b40e      	push	{r1, r2, r3}
 800c38c:	b530      	push	{r4, r5, lr}
 800c38e:	b098      	sub	sp, #96	; 0x60
 800c390:	ab1b      	add	r3, sp, #108	; 0x6c
 800c392:	4604      	mov	r4, r0
 800c394:	f853 5b04 	ldr.w	r5, [r3], #4
 800c398:	9301      	str	r3, [sp, #4]
 800c39a:	a802      	add	r0, sp, #8
 800c39c:	f000 fd1e 	bl	800cddc <_ZN8touchgfx12TextProviderC1Ev>
 800c3a0:	6823      	ldr	r3, [r4, #0]
 800c3a2:	4620      	mov	r0, r4
 800c3a4:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800c3a6:	4798      	blx	r3
 800c3a8:	9a01      	ldr	r2, [sp, #4]
 800c3aa:	4603      	mov	r3, r0
 800c3ac:	4629      	mov	r1, r5
 800c3ae:	a802      	add	r0, sp, #8
 800c3b0:	f000 fd59 	bl	800ce66 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_>
 800c3b4:	a802      	add	r0, sp, #8
 800c3b6:	f001 f947 	bl	800d648 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800c3ba:	2401      	movs	r4, #1
 800c3bc:	b2a3      	uxth	r3, r4
 800c3be:	b140      	cbz	r0, 800c3d2 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x48>
 800c3c0:	280a      	cmp	r0, #10
 800c3c2:	bf08      	it	eq
 800c3c4:	3301      	addeq	r3, #1
 800c3c6:	a802      	add	r0, sp, #8
 800c3c8:	bf08      	it	eq
 800c3ca:	b21c      	sxtheq	r4, r3
 800c3cc:	f001 f93c 	bl	800d648 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800c3d0:	e7f4      	b.n	800c3bc <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x32>
 800c3d2:	4618      	mov	r0, r3
 800c3d4:	b018      	add	sp, #96	; 0x60
 800c3d6:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 800c3da:	b003      	add	sp, #12
 800c3dc:	4770      	bx	lr

0800c3de <_ZNK8touchgfx4Font15getSpacingAboveEPKtz>:
 800c3de:	b40e      	push	{r1, r2, r3}
 800c3e0:	b5f0      	push	{r4, r5, r6, r7, lr}
 800c3e2:	b098      	sub	sp, #96	; 0x60
 800c3e4:	ab1d      	add	r3, sp, #116	; 0x74
 800c3e6:	4604      	mov	r4, r0
 800c3e8:	f853 5b04 	ldr.w	r5, [r3], #4
 800c3ec:	9300      	str	r3, [sp, #0]
 800c3ee:	a802      	add	r0, sp, #8
 800c3f0:	f000 fcf4 	bl	800cddc <_ZN8touchgfx12TextProviderC1Ev>
 800c3f4:	6823      	ldr	r3, [r4, #0]
 800c3f6:	4620      	mov	r0, r4
 800c3f8:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800c3fa:	4798      	blx	r3
 800c3fc:	4629      	mov	r1, r5
 800c3fe:	4603      	mov	r3, r0
 800c400:	9a00      	ldr	r2, [sp, #0]
 800c402:	a802      	add	r0, sp, #8
 800c404:	ad18      	add	r5, sp, #96	; 0x60
 800c406:	f000 fd2e 	bl	800ce66 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_>
 800c40a:	2100      	movs	r1, #0
 800c40c:	f845 1d5c 	str.w	r1, [r5, #-92]!
 800c410:	4622      	mov	r2, r4
 800c412:	462b      	mov	r3, r5
 800c414:	a802      	add	r0, sp, #8
 800c416:	f001 f81f 	bl	800d458 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800c41a:	26ff      	movs	r6, #255	; 0xff
 800c41c:	b1d8      	cbz	r0, 800c456 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
 800c41e:	280a      	cmp	r0, #10
 800c420:	d012      	beq.n	800c448 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x6a>
 800c422:	9801      	ldr	r0, [sp, #4]
 800c424:	b180      	cbz	r0, 800c448 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x6a>
 800c426:	7b47      	ldrb	r7, [r0, #13]
 800c428:	7922      	ldrb	r2, [r4, #4]
 800c42a:	00fb      	lsls	r3, r7, #3
 800c42c:	f403 7180 	and.w	r1, r3, #256	; 0x100
 800c430:	7a03      	ldrb	r3, [r0, #8]
 800c432:	430b      	orrs	r3, r1
 800c434:	0679      	lsls	r1, r7, #25
 800c436:	bf44      	itt	mi
 800c438:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 800c43c:	b21b      	sxthmi	r3, r3
 800c43e:	1ad3      	subs	r3, r2, r3
 800c440:	b2db      	uxtb	r3, r3
 800c442:	429e      	cmp	r6, r3
 800c444:	bf28      	it	cs
 800c446:	461e      	movcs	r6, r3
 800c448:	462b      	mov	r3, r5
 800c44a:	4622      	mov	r2, r4
 800c44c:	2100      	movs	r1, #0
 800c44e:	a802      	add	r0, sp, #8
 800c450:	f001 f802 	bl	800d458 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800c454:	e7e2      	b.n	800c41c <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x3e>
 800c456:	4630      	mov	r0, r6
 800c458:	b018      	add	sp, #96	; 0x60
 800c45a:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 800c45e:	b003      	add	sp, #12
 800c460:	4770      	bx	lr

0800c462 <_ZNK8touchgfx8Drawable10invalidateEv>:
 800c462:	b513      	push	{r0, r1, r4, lr}
 800c464:	1d01      	adds	r1, r0, #4
 800c466:	4603      	mov	r3, r0
 800c468:	c903      	ldmia	r1, {r0, r1}
 800c46a:	466a      	mov	r2, sp
 800c46c:	e882 0003 	stmia.w	r2, {r0, r1}
 800c470:	2100      	movs	r1, #0
 800c472:	9100      	str	r1, [sp, #0]
 800c474:	6819      	ldr	r1, [r3, #0]
 800c476:	4618      	mov	r0, r3
 800c478:	690c      	ldr	r4, [r1, #16]
 800c47a:	4611      	mov	r1, r2
 800c47c:	47a0      	blx	r4
 800c47e:	b002      	add	sp, #8
 800c480:	bd10      	pop	{r4, pc}

0800c482 <_ZN8touchgfx8Drawable20getSolidRectAbsoluteEv>:
 800c482:	b538      	push	{r3, r4, r5, lr}
 800c484:	680b      	ldr	r3, [r1, #0]
 800c486:	460c      	mov	r4, r1
 800c488:	68db      	ldr	r3, [r3, #12]
 800c48a:	4605      	mov	r5, r0
 800c48c:	4798      	blx	r3
 800c48e:	6823      	ldr	r3, [r4, #0]
 800c490:	4620      	mov	r0, r4
 800c492:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800c494:	4629      	mov	r1, r5
 800c496:	4798      	blx	r3
 800c498:	4628      	mov	r0, r5
 800c49a:	bd38      	pop	{r3, r4, r5, pc}

0800c49c <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE>:
 800c49c:	b410      	push	{r4}
 800c49e:	880a      	ldrh	r2, [r1, #0]
 800c4a0:	8884      	ldrh	r4, [r0, #4]
 800c4a2:	4422      	add	r2, r4
 800c4a4:	800a      	strh	r2, [r1, #0]
 800c4a6:	88c4      	ldrh	r4, [r0, #6]
 800c4a8:	884a      	ldrh	r2, [r1, #2]
 800c4aa:	4422      	add	r2, r4
 800c4ac:	804a      	strh	r2, [r1, #2]
 800c4ae:	6940      	ldr	r0, [r0, #20]
 800c4b0:	b120      	cbz	r0, 800c4bc <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE+0x20>
 800c4b2:	6803      	ldr	r3, [r0, #0]
 800c4b4:	f85d 4b04 	ldr.w	r4, [sp], #4
 800c4b8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800c4ba:	4718      	bx	r3
 800c4bc:	f85d 4b04 	ldr.w	r4, [sp], #4
 800c4c0:	4770      	bx	lr

0800c4c2 <_ZN8touchgfx8Drawable12moveRelativeEss>:
 800c4c2:	b5f0      	push	{r4, r5, r6, r7, lr}
 800c4c4:	460b      	mov	r3, r1
 800c4c6:	b085      	sub	sp, #20
 800c4c8:	4604      	mov	r4, r0
 800c4ca:	b901      	cbnz	r1, 800c4ce <_ZN8touchgfx8Drawable12moveRelativeEss+0xc>
 800c4cc:	b1fa      	cbz	r2, 800c50e <_ZN8touchgfx8Drawable12moveRelativeEss+0x4c>
 800c4ce:	1d27      	adds	r7, r4, #4
 800c4d0:	e897 0003 	ldmia.w	r7, {r0, r1}
 800c4d4:	466e      	mov	r6, sp
 800c4d6:	e886 0003 	stmia.w	r6, {r0, r1}
 800c4da:	88e1      	ldrh	r1, [r4, #6]
 800c4dc:	440a      	add	r2, r1
 800c4de:	88a1      	ldrh	r1, [r4, #4]
 800c4e0:	4419      	add	r1, r3
 800c4e2:	6823      	ldr	r3, [r4, #0]
 800c4e4:	b209      	sxth	r1, r1
 800c4e6:	4620      	mov	r0, r4
 800c4e8:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800c4ea:	b212      	sxth	r2, r2
 800c4ec:	4798      	blx	r3
 800c4ee:	e897 0003 	ldmia.w	r7, {r0, r1}
 800c4f2:	ad02      	add	r5, sp, #8
 800c4f4:	e885 0003 	stmia.w	r5, {r0, r1}
 800c4f8:	6960      	ldr	r0, [r4, #20]
 800c4fa:	b150      	cbz	r0, 800c512 <_ZN8touchgfx8Drawable12moveRelativeEss+0x50>
 800c4fc:	6803      	ldr	r3, [r0, #0]
 800c4fe:	4631      	mov	r1, r6
 800c500:	691b      	ldr	r3, [r3, #16]
 800c502:	4798      	blx	r3
 800c504:	6960      	ldr	r0, [r4, #20]
 800c506:	6803      	ldr	r3, [r0, #0]
 800c508:	691b      	ldr	r3, [r3, #16]
 800c50a:	4629      	mov	r1, r5
 800c50c:	4798      	blx	r3
 800c50e:	b005      	add	sp, #20
 800c510:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800c512:	f7ff fad7 	bl	800bac4 <_ZN8touchgfx11Application11getInstanceEv>
 800c516:	6803      	ldr	r3, [r0, #0]
 800c518:	4631      	mov	r1, r6
 800c51a:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800c51c:	4798      	blx	r3
 800c51e:	f7ff fad1 	bl	800bac4 <_ZN8touchgfx11Application11getInstanceEv>
 800c522:	6803      	ldr	r3, [r0, #0]
 800c524:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800c526:	e7f0      	b.n	800c50a <_ZN8touchgfx8Drawable12moveRelativeEss+0x48>

0800c528 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE>:
 800c528:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800c52a:	8882      	ldrh	r2, [r0, #4]
 800c52c:	880b      	ldrh	r3, [r1, #0]
 800c52e:	4413      	add	r3, r2
 800c530:	800b      	strh	r3, [r1, #0]
 800c532:	88c2      	ldrh	r2, [r0, #6]
 800c534:	884b      	ldrh	r3, [r1, #2]
 800c536:	4413      	add	r3, r2
 800c538:	4602      	mov	r2, r0
 800c53a:	804b      	strh	r3, [r1, #2]
 800c53c:	4605      	mov	r5, r0
 800c53e:	f852 0f04 	ldr.w	r0, [r2, #4]!
 800c542:	460c      	mov	r4, r1
 800c544:	6851      	ldr	r1, [r2, #4]
 800c546:	466b      	mov	r3, sp
 800c548:	c303      	stmia	r3!, {r0, r1}
 800c54a:	4621      	mov	r1, r4
 800c54c:	4668      	mov	r0, sp
 800c54e:	f7fc fc89 	bl	8008e64 <_ZN8touchgfx4RectaNERKS0_>
 800c552:	466b      	mov	r3, sp
 800c554:	cb03      	ldmia	r3!, {r0, r1}
 800c556:	6020      	str	r0, [r4, #0]
 800c558:	6061      	str	r1, [r4, #4]
 800c55a:	6968      	ldr	r0, [r5, #20]
 800c55c:	b128      	cbz	r0, 800c56a <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x42>
 800c55e:	6803      	ldr	r3, [r0, #0]
 800c560:	691b      	ldr	r3, [r3, #16]
 800c562:	4621      	mov	r1, r4
 800c564:	4798      	blx	r3
 800c566:	b003      	add	sp, #12
 800c568:	bd30      	pop	{r4, r5, pc}
 800c56a:	f7ff faab 	bl	800bac4 <_ZN8touchgfx11Application11getInstanceEv>
 800c56e:	6803      	ldr	r3, [r0, #0]
 800c570:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800c572:	e7f6      	b.n	800c562 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x3a>

0800c574 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE>:
 800c574:	b570      	push	{r4, r5, r6, lr}
 800c576:	8882      	ldrh	r2, [r0, #4]
 800c578:	880b      	ldrh	r3, [r1, #0]
 800c57a:	4413      	add	r3, r2
 800c57c:	800b      	strh	r3, [r1, #0]
 800c57e:	88c2      	ldrh	r2, [r0, #6]
 800c580:	884b      	ldrh	r3, [r1, #2]
 800c582:	460c      	mov	r4, r1
 800c584:	4413      	add	r3, r2
 800c586:	804b      	strh	r3, [r1, #2]
 800c588:	4605      	mov	r5, r0
 800c58a:	1d01      	adds	r1, r0, #4
 800c58c:	4620      	mov	r0, r4
 800c58e:	f7fc fc69 	bl	8008e64 <_ZN8touchgfx4RectaNERKS0_>
 800c592:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 800c596:	2b00      	cmp	r3, #0
 800c598:	dd0b      	ble.n	800c5b2 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 800c59a:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 800c59e:	2b00      	cmp	r3, #0
 800c5a0:	dd07      	ble.n	800c5b2 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 800c5a2:	6968      	ldr	r0, [r5, #20]
 800c5a4:	b128      	cbz	r0, 800c5b2 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 800c5a6:	6803      	ldr	r3, [r0, #0]
 800c5a8:	4621      	mov	r1, r4
 800c5aa:	6a1b      	ldr	r3, [r3, #32]
 800c5ac:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800c5b0:	4718      	bx	r3
 800c5b2:	bd70      	pop	{r4, r5, r6, pc}

0800c5b4 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>:
 800c5b4:	b510      	push	{r4, lr}
 800c5b6:	4604      	mov	r4, r0
 800c5b8:	4608      	mov	r0, r1
 800c5ba:	2300      	movs	r3, #0
 800c5bc:	8023      	strh	r3, [r4, #0]
 800c5be:	8063      	strh	r3, [r4, #2]
 800c5c0:	6803      	ldr	r3, [r0, #0]
 800c5c2:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 800c5c6:	f9b1 1008 	ldrsh.w	r1, [r1, #8]
 800c5ca:	80a1      	strh	r1, [r4, #4]
 800c5cc:	80e2      	strh	r2, [r4, #6]
 800c5ce:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800c5d0:	4621      	mov	r1, r4
 800c5d2:	4798      	blx	r3
 800c5d4:	4620      	mov	r0, r4
 800c5d6:	bd10      	pop	{r4, pc}

0800c5d8 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEtthhhhhtt>:
 800c5d8:	b530      	push	{r4, r5, lr}
 800c5da:	8083      	strh	r3, [r0, #4]
 800c5dc:	f89d 300c 	ldrb.w	r3, [sp, #12]
 800c5e0:	f89d 5010 	ldrb.w	r5, [sp, #16]
 800c5e4:	7183      	strb	r3, [r0, #6]
 800c5e6:	79c3      	ldrb	r3, [r0, #7]
 800c5e8:	6101      	str	r1, [r0, #16]
 800c5ea:	f365 0306 	bfi	r3, r5, #0, #7
 800c5ee:	f89d 5014 	ldrb.w	r5, [sp, #20]
 800c5f2:	8282      	strh	r2, [r0, #20]
 800c5f4:	f365 13c7 	bfi	r3, r5, #7, #1
 800c5f8:	71c3      	strb	r3, [r0, #7]
 800c5fa:	f89d 3018 	ldrb.w	r3, [sp, #24]
 800c5fe:	7203      	strb	r3, [r0, #8]
 800c600:	f89d 301c 	ldrb.w	r3, [sp, #28]
 800c604:	7243      	strb	r3, [r0, #9]
 800c606:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 800c60a:	8143      	strh	r3, [r0, #10]
 800c60c:	f8bd 3024 	ldrh.w	r3, [sp, #36]	; 0x24
 800c610:	8183      	strh	r3, [r0, #12]
 800c612:	4b01      	ldr	r3, [pc, #4]	; (800c618 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEtthhhhhtt+0x40>)
 800c614:	6003      	str	r3, [r0, #0]
 800c616:	bd30      	pop	{r4, r5, pc}
 800c618:	0801c5dc 	.word	0x0801c5dc

0800c61c <_ZNK8touchgfx9ConstFont4findEt>:
 800c61c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800c61e:	6904      	ldr	r4, [r0, #16]
 800c620:	8a82      	ldrh	r2, [r0, #20]
 800c622:	88a3      	ldrh	r3, [r4, #4]
 800c624:	1acb      	subs	r3, r1, r3
 800c626:	f102 32ff 	add.w	r2, r2, #4294967295
 800c62a:	d431      	bmi.n	800c690 <_ZNK8touchgfx9ConstFont4findEt+0x74>
 800c62c:	4293      	cmp	r3, r2
 800c62e:	dd0c      	ble.n	800c64a <_ZNK8touchgfx9ConstFont4findEt+0x2e>
 800c630:	230e      	movs	r3, #14
 800c632:	fb03 4302 	mla	r3, r3, r2, r4
 800c636:	889b      	ldrh	r3, [r3, #4]
 800c638:	1a5b      	subs	r3, r3, r1
 800c63a:	1ad3      	subs	r3, r2, r3
 800c63c:	429a      	cmp	r2, r3
 800c63e:	db27      	blt.n	800c690 <_ZNK8touchgfx9ConstFont4findEt+0x74>
 800c640:	2b00      	cmp	r3, #0
 800c642:	bfbc      	itt	lt
 800c644:	2302      	movlt	r3, #2
 800c646:	fb92 f3f3 	sdivlt	r3, r2, r3
 800c64a:	2500      	movs	r5, #0
 800c64c:	260e      	movs	r6, #14
 800c64e:	4295      	cmp	r5, r2
 800c650:	dc1e      	bgt.n	800c690 <_ZNK8touchgfx9ConstFont4findEt+0x74>
 800c652:	fb06 4003 	mla	r0, r6, r3, r4
 800c656:	8887      	ldrh	r7, [r0, #4]
 800c658:	42b9      	cmp	r1, r7
 800c65a:	d01a      	beq.n	800c692 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800c65c:	d20d      	bcs.n	800c67a <_ZNK8touchgfx9ConstFont4findEt+0x5e>
 800c65e:	1e5a      	subs	r2, r3, #1
 800c660:	4295      	cmp	r5, r2
 800c662:	dc15      	bgt.n	800c690 <_ZNK8touchgfx9ConstFont4findEt+0x74>
 800c664:	f830 3c0a 	ldrh.w	r3, [r0, #-10]
 800c668:	1a5b      	subs	r3, r3, r1
 800c66a:	1ad3      	subs	r3, r2, r3
 800c66c:	429a      	cmp	r2, r3
 800c66e:	db0f      	blt.n	800c690 <_ZNK8touchgfx9ConstFont4findEt+0x74>
 800c670:	429d      	cmp	r5, r3
 800c672:	ddec      	ble.n	800c64e <_ZNK8touchgfx9ConstFont4findEt+0x32>
 800c674:	1953      	adds	r3, r2, r5
 800c676:	105b      	asrs	r3, r3, #1
 800c678:	e7e9      	b.n	800c64e <_ZNK8touchgfx9ConstFont4findEt+0x32>
 800c67a:	1c5d      	adds	r5, r3, #1
 800c67c:	42aa      	cmp	r2, r5
 800c67e:	db07      	blt.n	800c690 <_ZNK8touchgfx9ConstFont4findEt+0x74>
 800c680:	8a43      	ldrh	r3, [r0, #18]
 800c682:	1acb      	subs	r3, r1, r3
 800c684:	442b      	add	r3, r5
 800c686:	429d      	cmp	r5, r3
 800c688:	dc02      	bgt.n	800c690 <_ZNK8touchgfx9ConstFont4findEt+0x74>
 800c68a:	429a      	cmp	r2, r3
 800c68c:	dadf      	bge.n	800c64e <_ZNK8touchgfx9ConstFont4findEt+0x32>
 800c68e:	e7f1      	b.n	800c674 <_ZNK8touchgfx9ConstFont4findEt+0x58>
 800c690:	2000      	movs	r0, #0
 800c692:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800c694 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh>:
 800c694:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800c696:	4604      	mov	r4, r0
 800c698:	4617      	mov	r7, r2
 800c69a:	461e      	mov	r6, r3
 800c69c:	b911      	cbnz	r1, 800c6a4 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x10>
 800c69e:	2500      	movs	r5, #0
 800c6a0:	4628      	mov	r0, r5
 800c6a2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800c6a4:	290a      	cmp	r1, #10
 800c6a6:	d0fa      	beq.n	800c69e <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 800c6a8:	f64f 62ff 	movw	r2, #65279	; 0xfeff
 800c6ac:	4291      	cmp	r1, r2
 800c6ae:	d0f6      	beq.n	800c69e <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 800c6b0:	f242 020b 	movw	r2, #8203	; 0x200b
 800c6b4:	4291      	cmp	r1, r2
 800c6b6:	d0f2      	beq.n	800c69e <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 800c6b8:	f7ff ffb0 	bl	800c61c <_ZNK8touchgfx9ConstFont4findEt>
 800c6bc:	4605      	mov	r5, r0
 800c6be:	b950      	cbnz	r0, 800c6d6 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x42>
 800c6c0:	6823      	ldr	r3, [r4, #0]
 800c6c2:	4620      	mov	r0, r4
 800c6c4:	691b      	ldr	r3, [r3, #16]
 800c6c6:	4798      	blx	r3
 800c6c8:	4601      	mov	r1, r0
 800c6ca:	4620      	mov	r0, r4
 800c6cc:	f7ff ffa6 	bl	800c61c <_ZNK8touchgfx9ConstFont4findEt>
 800c6d0:	4605      	mov	r5, r0
 800c6d2:	2800      	cmp	r0, #0
 800c6d4:	d0e3      	beq.n	800c69e <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 800c6d6:	6823      	ldr	r3, [r4, #0]
 800c6d8:	4629      	mov	r1, r5
 800c6da:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800c6dc:	4620      	mov	r0, r4
 800c6de:	4798      	blx	r3
 800c6e0:	6038      	str	r0, [r7, #0]
 800c6e2:	6823      	ldr	r3, [r4, #0]
 800c6e4:	4620      	mov	r0, r4
 800c6e6:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800c6e8:	4798      	blx	r3
 800c6ea:	7030      	strb	r0, [r6, #0]
 800c6ec:	e7d8      	b.n	800c6a0 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xc>

0800c6ee <_ZN8touchgfx10ClickEvent12getEventTypeEv>:
 800c6ee:	2000      	movs	r0, #0
 800c6f0:	4770      	bx	lr

0800c6f2 <_ZN8touchgfx9DragEvent12getEventTypeEv>:
 800c6f2:	2001      	movs	r0, #1
 800c6f4:	4770      	bx	lr

0800c6f6 <_ZN8touchgfx12GestureEvent12getEventTypeEv>:
 800c6f6:	2002      	movs	r0, #2
 800c6f8:	4770      	bx	lr

0800c6fa <_ZN8touchgfx6ScreenD1Ev>:
 800c6fa:	4770      	bx	lr

0800c6fc <_ZN8touchgfx12GestureEventD1Ev>:
 800c6fc:	4770      	bx	lr

0800c6fe <_ZN8touchgfx9DragEventD1Ev>:
 800c6fe:	4770      	bx	lr

0800c700 <_ZN8touchgfx10ClickEventD1Ev>:
 800c700:	4770      	bx	lr

0800c702 <_ZN8touchgfx10ClickEventD0Ev>:
 800c702:	b510      	push	{r4, lr}
 800c704:	210c      	movs	r1, #12
 800c706:	4604      	mov	r4, r0
 800c708:	f00c fe54 	bl	80193b4 <_ZdlPvj>
 800c70c:	4620      	mov	r0, r4
 800c70e:	bd10      	pop	{r4, pc}

0800c710 <_ZN8touchgfx9DragEventD0Ev>:
 800c710:	b510      	push	{r4, lr}
 800c712:	2110      	movs	r1, #16
 800c714:	4604      	mov	r4, r0
 800c716:	f00c fe4d 	bl	80193b4 <_ZdlPvj>
 800c71a:	4620      	mov	r0, r4
 800c71c:	bd10      	pop	{r4, pc}

0800c71e <_ZN8touchgfx12GestureEventD0Ev>:
 800c71e:	b510      	push	{r4, lr}
 800c720:	210c      	movs	r1, #12
 800c722:	4604      	mov	r4, r0
 800c724:	f00c fe46 	bl	80193b4 <_ZdlPvj>
 800c728:	4620      	mov	r0, r4
 800c72a:	bd10      	pop	{r4, pc}

0800c72c <_ZN8touchgfx6ScreenD0Ev>:
 800c72c:	b510      	push	{r4, lr}
 800c72e:	213c      	movs	r1, #60	; 0x3c
 800c730:	4604      	mov	r4, r0
 800c732:	f00c fe3f 	bl	80193b4 <_ZdlPvj>
 800c736:	4620      	mov	r0, r4
 800c738:	bd10      	pop	{r4, pc}
	...

0800c73c <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE>:
 800c73c:	b530      	push	{r4, r5, lr}
 800c73e:	460d      	mov	r5, r1
 800c740:	6b01      	ldr	r1, [r0, #48]	; 0x30
 800c742:	b087      	sub	sp, #28
 800c744:	4604      	mov	r4, r0
 800c746:	b301      	cbz	r1, 800c78a <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x4e>
 800c748:	a801      	add	r0, sp, #4
 800c74a:	f7ff ff33 	bl	800c5b4 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800c74e:	892a      	ldrh	r2, [r5, #8]
 800c750:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800c754:	7928      	ldrb	r0, [r5, #4]
 800c756:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 800c75a:	f88d 0010 	strb.w	r0, [sp, #16]
 800c75e:	1ad2      	subs	r2, r2, r3
 800c760:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 800c762:	6b20      	ldr	r0, [r4, #48]	; 0x30
 800c764:	f8ad 1012 	strh.w	r1, [sp, #18]
 800c768:	441a      	add	r2, r3
 800c76a:	896b      	ldrh	r3, [r5, #10]
 800c76c:	f8bd 5006 	ldrh.w	r5, [sp, #6]
 800c770:	f8ad 2014 	strh.w	r2, [sp, #20]
 800c774:	1b5b      	subs	r3, r3, r5
 800c776:	8ee5      	ldrh	r5, [r4, #54]	; 0x36
 800c778:	442b      	add	r3, r5
 800c77a:	4d05      	ldr	r5, [pc, #20]	; (800c790 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x54>)
 800c77c:	9503      	str	r5, [sp, #12]
 800c77e:	f8ad 3016 	strh.w	r3, [sp, #22]
 800c782:	6803      	ldr	r3, [r0, #0]
 800c784:	a903      	add	r1, sp, #12
 800c786:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800c788:	4798      	blx	r3
 800c78a:	b007      	add	sp, #28
 800c78c:	bd30      	pop	{r4, r5, pc}
 800c78e:	bf00      	nop
 800c790:	0801c658 	.word	0x0801c658

0800c794 <_ZNK8touchgfx4Rect9intersectEss>:
 800c794:	b510      	push	{r4, lr}
 800c796:	f9b0 3000 	ldrsh.w	r3, [r0]
 800c79a:	428b      	cmp	r3, r1
 800c79c:	dc10      	bgt.n	800c7c0 <_ZNK8touchgfx4Rect9intersectEss+0x2c>
 800c79e:	8884      	ldrh	r4, [r0, #4]
 800c7a0:	4423      	add	r3, r4
 800c7a2:	b21b      	sxth	r3, r3
 800c7a4:	4299      	cmp	r1, r3
 800c7a6:	da0b      	bge.n	800c7c0 <_ZNK8touchgfx4Rect9intersectEss+0x2c>
 800c7a8:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 800c7ac:	4293      	cmp	r3, r2
 800c7ae:	dc07      	bgt.n	800c7c0 <_ZNK8touchgfx4Rect9intersectEss+0x2c>
 800c7b0:	88c0      	ldrh	r0, [r0, #6]
 800c7b2:	4418      	add	r0, r3
 800c7b4:	b200      	sxth	r0, r0
 800c7b6:	4282      	cmp	r2, r0
 800c7b8:	bfac      	ite	ge
 800c7ba:	2000      	movge	r0, #0
 800c7bc:	2001      	movlt	r0, #1
 800c7be:	bd10      	pop	{r4, pc}
 800c7c0:	2000      	movs	r0, #0
 800c7c2:	e7fc      	b.n	800c7be <_ZNK8touchgfx4Rect9intersectEss+0x2a>

0800c7c4 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE>:
 800c7c4:	b5f0      	push	{r4, r5, r6, r7, lr}
 800c7c6:	460c      	mov	r4, r1
 800c7c8:	6b01      	ldr	r1, [r0, #48]	; 0x30
 800c7ca:	b089      	sub	sp, #36	; 0x24
 800c7cc:	4605      	mov	r5, r0
 800c7ce:	2900      	cmp	r1, #0
 800c7d0:	d054      	beq.n	800c87c <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xb8>
 800c7d2:	4668      	mov	r0, sp
 800c7d4:	f7ff feee 	bl	800c5b4 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800c7d8:	8eae      	ldrh	r6, [r5, #52]	; 0x34
 800c7da:	8eef      	ldrh	r7, [r5, #54]	; 0x36
 800c7dc:	8922      	ldrh	r2, [r4, #8]
 800c7de:	88e1      	ldrh	r1, [r4, #6]
 800c7e0:	443a      	add	r2, r7
 800c7e2:	4431      	add	r1, r6
 800c7e4:	b212      	sxth	r2, r2
 800c7e6:	b209      	sxth	r1, r1
 800c7e8:	4668      	mov	r0, sp
 800c7ea:	f7ff ffd3 	bl	800c794 <_ZNK8touchgfx4Rect9intersectEss>
 800c7ee:	b1d0      	cbz	r0, 800c826 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x62>
 800c7f0:	89a2      	ldrh	r2, [r4, #12]
 800c7f2:	8961      	ldrh	r1, [r4, #10]
 800c7f4:	443a      	add	r2, r7
 800c7f6:	4431      	add	r1, r6
 800c7f8:	b212      	sxth	r2, r2
 800c7fa:	b209      	sxth	r1, r1
 800c7fc:	4668      	mov	r0, sp
 800c7fe:	f7ff ffc9 	bl	800c794 <_ZNK8touchgfx4Rect9intersectEss>
 800c802:	4603      	mov	r3, r0
 800c804:	b978      	cbnz	r0, 800c826 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x62>
 800c806:	4a1e      	ldr	r2, [pc, #120]	; (800c880 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xbc>)
 800c808:	9204      	str	r2, [sp, #16]
 800c80a:	6b28      	ldr	r0, [r5, #48]	; 0x30
 800c80c:	f8ad 3016 	strh.w	r3, [sp, #22]
 800c810:	2202      	movs	r2, #2
 800c812:	f88d 2014 	strb.w	r2, [sp, #20]
 800c816:	f8ad 3018 	strh.w	r3, [sp, #24]
 800c81a:	f8ad 301a 	strh.w	r3, [sp, #26]
 800c81e:	6803      	ldr	r3, [r0, #0]
 800c820:	a904      	add	r1, sp, #16
 800c822:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800c824:	4798      	blx	r3
 800c826:	6b29      	ldr	r1, [r5, #48]	; 0x30
 800c828:	a802      	add	r0, sp, #8
 800c82a:	f7ff fec3 	bl	800c5b4 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800c82e:	f8bd 2008 	ldrh.w	r2, [sp, #8]
 800c832:	88e0      	ldrh	r0, [r4, #6]
 800c834:	8961      	ldrh	r1, [r4, #10]
 800c836:	f8b5 c034 	ldrh.w	ip, [r5, #52]	; 0x34
 800c83a:	f8bd e00a 	ldrh.w	lr, [sp, #10]
 800c83e:	8923      	ldrh	r3, [r4, #8]
 800c840:	8eee      	ldrh	r6, [r5, #54]	; 0x36
 800c842:	7927      	ldrb	r7, [r4, #4]
 800c844:	f88d 7014 	strb.w	r7, [sp, #20]
 800c848:	1a80      	subs	r0, r0, r2
 800c84a:	1a89      	subs	r1, r1, r2
 800c84c:	89a2      	ldrh	r2, [r4, #12]
 800c84e:	4c0d      	ldr	r4, [pc, #52]	; (800c884 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xc0>)
 800c850:	9404      	str	r4, [sp, #16]
 800c852:	4460      	add	r0, ip
 800c854:	eba3 030e 	sub.w	r3, r3, lr
 800c858:	eba2 020e 	sub.w	r2, r2, lr
 800c85c:	f8ad 0016 	strh.w	r0, [sp, #22]
 800c860:	4433      	add	r3, r6
 800c862:	4461      	add	r1, ip
 800c864:	4432      	add	r2, r6
 800c866:	6b28      	ldr	r0, [r5, #48]	; 0x30
 800c868:	f8ad 101a 	strh.w	r1, [sp, #26]
 800c86c:	f8ad 3018 	strh.w	r3, [sp, #24]
 800c870:	f8ad 201c 	strh.w	r2, [sp, #28]
 800c874:	6803      	ldr	r3, [r0, #0]
 800c876:	a904      	add	r1, sp, #16
 800c878:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800c87a:	4798      	blx	r3
 800c87c:	b009      	add	sp, #36	; 0x24
 800c87e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800c880:	0801c630 	.word	0x0801c630
 800c884:	0801c644 	.word	0x0801c644

0800c888 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE>:
 800c888:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c88c:	f8d0 9030 	ldr.w	r9, [r0, #48]	; 0x30
 800c890:	790b      	ldrb	r3, [r1, #4]
 800c892:	b0a1      	sub	sp, #132	; 0x84
 800c894:	4604      	mov	r4, r0
 800c896:	460d      	mov	r5, r1
 800c898:	f1b9 0f00 	cmp.w	r9, #0
 800c89c:	d00f      	beq.n	800c8be <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x36>
 800c89e:	2b00      	cmp	r3, #0
 800c8a0:	f040 80a0 	bne.w	800c9e4 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x15c>
 800c8a4:	b021      	add	sp, #132	; 0x84
 800c8a6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c8aa:	f104 0330 	add.w	r3, r4, #48	; 0x30
 800c8ae:	f9b5 2008 	ldrsh.w	r2, [r5, #8]
 800c8b2:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 800c8b6:	1d20      	adds	r0, r4, #4
 800c8b8:	f7fc fa1a 	bl	8008cf0 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 800c8bc:	e092      	b.n	800c9e4 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x15c>
 800c8be:	2b00      	cmp	r3, #0
 800c8c0:	d1f0      	bne.n	800c8a4 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x1c>
 800c8c2:	4b5e      	ldr	r3, [pc, #376]	; (800ca3c <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x1b4>)
 800c8c4:	681b      	ldr	r3, [r3, #0]
 800c8c6:	f893 a049 	ldrb.w	sl, [r3, #73]	; 0x49
 800c8ca:	f8c4 9034 	str.w	r9, [r4, #52]	; 0x34
 800c8ce:	f1ba 0f03 	cmp.w	sl, #3
 800c8d2:	ddea      	ble.n	800c8aa <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x22>
 800c8d4:	f1ba 0f0c 	cmp.w	sl, #12
 800c8d8:	f04f 0303 	mov.w	r3, #3
 800c8dc:	bfdc      	itt	le
 800c8de:	f10a 32ff 	addle.w	r2, sl, #4294967295
 800c8e2:	fb92 f3f3 	sdivle	r3, r2, r3
 800c8e6:	9301      	str	r3, [sp, #4]
 800c8e8:	4b55      	ldr	r3, [pc, #340]	; (800ca40 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x1b8>)
 800c8ea:	4956      	ldr	r1, [pc, #344]	; (800ca44 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x1bc>)
 800c8ec:	f9b3 2000 	ldrsh.w	r2, [r3]
 800c8f0:	4b55      	ldr	r3, [pc, #340]	; (800ca48 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x1c0>)
 800c8f2:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
 800c8f6:	f9b3 3000 	ldrsh.w	r3, [r3]
 800c8fa:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 800c8fe:	ab0e      	add	r3, sp, #56	; 0x38
 800c900:	2248      	movs	r2, #72	; 0x48
 800c902:	2600      	movs	r6, #0
 800c904:	4618      	mov	r0, r3
 800c906:	960a      	str	r6, [sp, #40]	; 0x28
 800c908:	f00c fdfe 	bl	8019508 <memcpy>
 800c90c:	f04f 32ff 	mov.w	r2, #4294967295
 800c910:	e9cd 2006 	strd	r2, r0, [sp, #24]
 800c914:	f8cd a008 	str.w	sl, [sp, #8]
 800c918:	e9dd 2301 	ldrd	r2, r3, [sp, #4]
 800c91c:	fb93 f3f2 	sdiv	r3, r3, r2
 800c920:	b29b      	uxth	r3, r3
 800c922:	46b3      	mov	fp, r6
 800c924:	9303      	str	r3, [sp, #12]
 800c926:	2300      	movs	r3, #0
 800c928:	9309      	str	r3, [sp, #36]	; 0x24
 800c92a:	9b07      	ldr	r3, [sp, #28]
 800c92c:	9a03      	ldr	r2, [sp, #12]
 800c92e:	f853 303b 	ldr.w	r3, [r3, fp, lsl #3]
 800c932:	88ef      	ldrh	r7, [r5, #6]
 800c934:	f8b5 8008 	ldrh.w	r8, [r5, #8]
 800c938:	fb13 f302 	smulbb	r3, r3, r2
 800c93c:	b29b      	uxth	r3, r3
 800c93e:	9304      	str	r3, [sp, #16]
 800c940:	9b07      	ldr	r3, [sp, #28]
 800c942:	eb03 03cb 	add.w	r3, r3, fp, lsl #3
 800c946:	a80a      	add	r0, sp, #40	; 0x28
 800c948:	685b      	ldr	r3, [r3, #4]
 800c94a:	fb13 f302 	smulbb	r3, r3, r2
 800c94e:	b29b      	uxth	r3, r3
 800c950:	9305      	str	r3, [sp, #20]
 800c952:	9b04      	ldr	r3, [sp, #16]
 800c954:	441f      	add	r7, r3
 800c956:	9b05      	ldr	r3, [sp, #20]
 800c958:	4498      	add	r8, r3
 800c95a:	b23f      	sxth	r7, r7
 800c95c:	fa0f f888 	sxth.w	r8, r8
 800c960:	4642      	mov	r2, r8
 800c962:	4639      	mov	r1, r7
 800c964:	f7ff ff16 	bl	800c794 <_ZNK8touchgfx4Rect9intersectEss>
 800c968:	b380      	cbz	r0, 800c9cc <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x144>
 800c96a:	4639      	mov	r1, r7
 800c96c:	ab09      	add	r3, sp, #36	; 0x24
 800c96e:	4642      	mov	r2, r8
 800c970:	1d20      	adds	r0, r4, #4
 800c972:	f7fc f9bd 	bl	8008cf0 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 800c976:	9909      	ldr	r1, [sp, #36]	; 0x24
 800c978:	b341      	cbz	r1, 800c9cc <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x144>
 800c97a:	4549      	cmp	r1, r9
 800c97c:	d026      	beq.n	800c9cc <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x144>
 800c97e:	a80c      	add	r0, sp, #48	; 0x30
 800c980:	f7ff fe18 	bl	800c5b4 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800c984:	f9bd 1030 	ldrsh.w	r1, [sp, #48]	; 0x30
 800c988:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 800c98c:	f9bd 2034 	ldrsh.w	r2, [sp, #52]	; 0x34
 800c990:	2002      	movs	r0, #2
 800c992:	fb92 f2f0 	sdiv	r2, r2, r0
 800c996:	440a      	add	r2, r1
 800c998:	1a99      	subs	r1, r3, r2
 800c99a:	f9bd 3036 	ldrsh.w	r3, [sp, #54]	; 0x36
 800c99e:	fb93 f3f0 	sdiv	r3, r3, r0
 800c9a2:	f9bd 0032 	ldrsh.w	r0, [sp, #50]	; 0x32
 800c9a6:	f9b5 2008 	ldrsh.w	r2, [r5, #8]
 800c9aa:	4403      	add	r3, r0
 800c9ac:	1ad3      	subs	r3, r2, r3
 800c9ae:	435b      	muls	r3, r3
 800c9b0:	9a06      	ldr	r2, [sp, #24]
 800c9b2:	fb01 3301 	mla	r3, r1, r1, r3
 800c9b6:	4293      	cmp	r3, r2
 800c9b8:	d208      	bcs.n	800c9cc <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x144>
 800c9ba:	9a04      	ldr	r2, [sp, #16]
 800c9bc:	f8dd 9024 	ldr.w	r9, [sp, #36]	; 0x24
 800c9c0:	86a2      	strh	r2, [r4, #52]	; 0x34
 800c9c2:	9a05      	ldr	r2, [sp, #20]
 800c9c4:	f8c4 9030 	str.w	r9, [r4, #48]	; 0x30
 800c9c8:	86e2      	strh	r2, [r4, #54]	; 0x36
 800c9ca:	9306      	str	r3, [sp, #24]
 800c9cc:	f10b 0b02 	add.w	fp, fp, #2
 800c9d0:	f1bb 0f08 	cmp.w	fp, #8
 800c9d4:	dda7      	ble.n	800c926 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 800c9d6:	9b02      	ldr	r3, [sp, #8]
 800c9d8:	4453      	add	r3, sl
 800c9da:	9302      	str	r3, [sp, #8]
 800c9dc:	9b01      	ldr	r3, [sp, #4]
 800c9de:	3601      	adds	r6, #1
 800c9e0:	42b3      	cmp	r3, r6
 800c9e2:	d199      	bne.n	800c918 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x90>
 800c9e4:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800c9e6:	2900      	cmp	r1, #0
 800c9e8:	f43f af5c 	beq.w	800c8a4 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x1c>
 800c9ec:	a80c      	add	r0, sp, #48	; 0x30
 800c9ee:	f7ff fde1 	bl	800c5b4 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800c9f2:	f8bd 3030 	ldrh.w	r3, [sp, #48]	; 0x30
 800c9f6:	88ea      	ldrh	r2, [r5, #6]
 800c9f8:	f8bd 0032 	ldrh.w	r0, [sp, #50]	; 0x32
 800c9fc:	7929      	ldrb	r1, [r5, #4]
 800c9fe:	f88d 103c 	strb.w	r1, [sp, #60]	; 0x3c
 800ca02:	1ad2      	subs	r2, r2, r3
 800ca04:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 800ca06:	441a      	add	r2, r3
 800ca08:	892b      	ldrh	r3, [r5, #8]
 800ca0a:	f8ad 203e 	strh.w	r2, [sp, #62]	; 0x3e
 800ca0e:	1a1b      	subs	r3, r3, r0
 800ca10:	8ee0      	ldrh	r0, [r4, #54]	; 0x36
 800ca12:	4403      	add	r3, r0
 800ca14:	480d      	ldr	r0, [pc, #52]	; (800ca4c <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x1c4>)
 800ca16:	900e      	str	r0, [sp, #56]	; 0x38
 800ca18:	2600      	movs	r6, #0
 800ca1a:	6b20      	ldr	r0, [r4, #48]	; 0x30
 800ca1c:	f8ad 3040 	strh.w	r3, [sp, #64]	; 0x40
 800ca20:	f8ad 6042 	strh.w	r6, [sp, #66]	; 0x42
 800ca24:	6803      	ldr	r3, [r0, #0]
 800ca26:	a90e      	add	r1, sp, #56	; 0x38
 800ca28:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800ca2a:	4798      	blx	r3
 800ca2c:	792b      	ldrb	r3, [r5, #4]
 800ca2e:	2b00      	cmp	r3, #0
 800ca30:	f43f af38 	beq.w	800c8a4 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x1c>
 800ca34:	e9c4 660c 	strd	r6, r6, [r4, #48]	; 0x30
 800ca38:	e734      	b.n	800c8a4 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x1c>
 800ca3a:	bf00      	nop
 800ca3c:	20012188 	.word	0x20012188
 800ca40:	2001217c 	.word	0x2001217c
 800ca44:	0801a430 	.word	0x0801a430
 800ca48:	2001217e 	.word	0x2001217e
 800ca4c:	0801c630 	.word	0x0801c630

0800ca50 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>:
 800ca50:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800ca52:	4604      	mov	r4, r0
 800ca54:	f934 2f0c 	ldrsh.w	r2, [r4, #12]!
 800ca58:	3201      	adds	r2, #1
 800ca5a:	d112      	bne.n	800ca82 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv+0x32>
 800ca5c:	6803      	ldr	r3, [r0, #0]
 800ca5e:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 800ca62:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 800ca66:	f8ad 1004 	strh.w	r1, [sp, #4]
 800ca6a:	2500      	movs	r5, #0
 800ca6c:	9500      	str	r5, [sp, #0]
 800ca6e:	466d      	mov	r5, sp
 800ca70:	4629      	mov	r1, r5
 800ca72:	f8ad 2006 	strh.w	r2, [sp, #6]
 800ca76:	6a1b      	ldr	r3, [r3, #32]
 800ca78:	4798      	blx	r3
 800ca7a:	e895 0003 	ldmia.w	r5, {r0, r1}
 800ca7e:	e884 0003 	stmia.w	r4, {r0, r1}
 800ca82:	4620      	mov	r0, r4
 800ca84:	b003      	add	sp, #12
 800ca86:	bd30      	pop	{r4, r5, pc}

0800ca88 <_ZN8touchgfx8Drawable13getCachedAbsXEv>:
 800ca88:	b513      	push	{r0, r1, r4, lr}
 800ca8a:	f9b0 3020 	ldrsh.w	r3, [r0, #32]
 800ca8e:	3301      	adds	r3, #1
 800ca90:	4604      	mov	r4, r0
 800ca92:	d109      	bne.n	800caa8 <_ZN8touchgfx8Drawable13getCachedAbsXEv+0x20>
 800ca94:	4601      	mov	r1, r0
 800ca96:	4668      	mov	r0, sp
 800ca98:	f7ff fd8c 	bl	800c5b4 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800ca9c:	f8bd 3000 	ldrh.w	r3, [sp]
 800caa0:	8423      	strh	r3, [r4, #32]
 800caa2:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800caa6:	8463      	strh	r3, [r4, #34]	; 0x22
 800caa8:	f9b4 0020 	ldrsh.w	r0, [r4, #32]
 800caac:	b002      	add	sp, #8
 800caae:	bd10      	pop	{r4, pc}

0800cab0 <_ZN8touchgfx8Drawable13getCachedAbsYEv>:
 800cab0:	b513      	push	{r0, r1, r4, lr}
 800cab2:	f9b0 3022 	ldrsh.w	r3, [r0, #34]	; 0x22
 800cab6:	3301      	adds	r3, #1
 800cab8:	4604      	mov	r4, r0
 800caba:	d109      	bne.n	800cad0 <_ZN8touchgfx8Drawable13getCachedAbsYEv+0x20>
 800cabc:	4601      	mov	r1, r0
 800cabe:	4668      	mov	r0, sp
 800cac0:	f7ff fd78 	bl	800c5b4 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800cac4:	f8bd 3000 	ldrh.w	r3, [sp]
 800cac8:	8423      	strh	r3, [r4, #32]
 800caca:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800cace:	8463      	strh	r3, [r4, #34]	; 0x22
 800cad0:	f9b4 0022 	ldrsh.w	r0, [r4, #34]	; 0x22
 800cad4:	b002      	add	sp, #8
 800cad6:	bd10      	pop	{r4, pc}

0800cad8 <_ZN8touchgfx6ScreenC1Ev>:
 800cad8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800cada:	4605      	mov	r5, r0
 800cadc:	4b17      	ldr	r3, [pc, #92]	; (800cb3c <_ZN8touchgfx6ScreenC1Ev+0x64>)
 800cade:	f845 3b04 	str.w	r3, [r5], #4
 800cae2:	2301      	movs	r3, #1
 800cae4:	f880 3029 	strb.w	r3, [r0, #41]	; 0x29
 800cae8:	f880 3038 	strb.w	r3, [r0, #56]	; 0x38
 800caec:	4b14      	ldr	r3, [pc, #80]	; (800cb40 <_ZN8touchgfx6ScreenC1Ev+0x68>)
 800caee:	4915      	ldr	r1, [pc, #84]	; (800cb44 <_ZN8touchgfx6ScreenC1Ev+0x6c>)
 800caf0:	f9b3 7000 	ldrsh.w	r7, [r3]
 800caf4:	4b14      	ldr	r3, [pc, #80]	; (800cb48 <_ZN8touchgfx6ScreenC1Ev+0x70>)
 800caf6:	6041      	str	r1, [r0, #4]
 800caf8:	2200      	movs	r2, #0
 800cafa:	8102      	strh	r2, [r0, #8]
 800cafc:	8142      	strh	r2, [r0, #10]
 800cafe:	8182      	strh	r2, [r0, #12]
 800cb00:	81c2      	strh	r2, [r0, #14]
 800cb02:	8202      	strh	r2, [r0, #16]
 800cb04:	8242      	strh	r2, [r0, #18]
 800cb06:	8282      	strh	r2, [r0, #20]
 800cb08:	82c2      	strh	r2, [r0, #22]
 800cb0a:	e9c0 2206 	strd	r2, r2, [r0, #24]
 800cb0e:	6202      	str	r2, [r0, #32]
 800cb10:	f880 2028 	strb.w	r2, [r0, #40]	; 0x28
 800cb14:	e9c0 220b 	strd	r2, r2, [r0, #44]	; 0x2c
 800cb18:	6342      	str	r2, [r0, #52]	; 0x34
 800cb1a:	f9b3 6000 	ldrsh.w	r6, [r3]
 800cb1e:	4611      	mov	r1, r2
 800cb20:	4604      	mov	r4, r0
 800cb22:	4628      	mov	r0, r5
 800cb24:	f7f6 fae0 	bl	80030e8 <_ZN8touchgfx8Drawable5setXYEss>
 800cb28:	4639      	mov	r1, r7
 800cb2a:	4628      	mov	r0, r5
 800cb2c:	f7f6 fae9 	bl	8003102 <_ZN8touchgfx8Drawable8setWidthEs>
 800cb30:	4628      	mov	r0, r5
 800cb32:	4631      	mov	r1, r6
 800cb34:	f7f6 fae7 	bl	8003106 <_ZN8touchgfx8Drawable9setHeightEs>
 800cb38:	4620      	mov	r0, r4
 800cb3a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800cb3c:	0801c66c 	.word	0x0801c66c
 800cb40:	2001217c 	.word	0x2001217c
 800cb44:	0801b51c 	.word	0x0801b51c
 800cb48:	2001217e 	.word	0x2001217e

0800cb4c <_ZN8touchgfx6Screen4drawEv>:
 800cb4c:	b507      	push	{r0, r1, r2, lr}
 800cb4e:	4b09      	ldr	r3, [pc, #36]	; (800cb74 <_ZN8touchgfx6Screen4drawEv+0x28>)
 800cb50:	f9b3 2000 	ldrsh.w	r2, [r3]
 800cb54:	4b08      	ldr	r3, [pc, #32]	; (800cb78 <_ZN8touchgfx6Screen4drawEv+0x2c>)
 800cb56:	f8ad 2004 	strh.w	r2, [sp, #4]
 800cb5a:	f9b3 3000 	ldrsh.w	r3, [r3]
 800cb5e:	f8ad 3006 	strh.w	r3, [sp, #6]
 800cb62:	6803      	ldr	r3, [r0, #0]
 800cb64:	2100      	movs	r1, #0
 800cb66:	9100      	str	r1, [sp, #0]
 800cb68:	689b      	ldr	r3, [r3, #8]
 800cb6a:	4669      	mov	r1, sp
 800cb6c:	4798      	blx	r3
 800cb6e:	b003      	add	sp, #12
 800cb70:	f85d fb04 	ldr.w	pc, [sp], #4
 800cb74:	2001217c 	.word	0x2001217c
 800cb78:	2001217e 	.word	0x2001217e

0800cb7c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>:
 800cb7c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800cb80:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
 800cb84:	2b00      	cmp	r3, #0
 800cb86:	b089      	sub	sp, #36	; 0x24
 800cb88:	4680      	mov	r8, r0
 800cb8a:	460c      	mov	r4, r1
 800cb8c:	4615      	mov	r5, r2
 800cb8e:	dd0e      	ble.n	800cbae <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 800cb90:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
 800cb94:	2b00      	cmp	r3, #0
 800cb96:	dd0a      	ble.n	800cbae <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 800cb98:	4628      	mov	r0, r5
 800cb9a:	f7ff ff59 	bl	800ca50 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 800cb9e:	4621      	mov	r1, r4
 800cba0:	f7fe ff06 	bl	800b9b0 <_ZNK8touchgfx4Rect9intersectERKS0_>
 800cba4:	69eb      	ldr	r3, [r5, #28]
 800cba6:	b928      	cbnz	r0, 800cbb4 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x38>
 800cba8:	461d      	mov	r5, r3
 800cbaa:	2b00      	cmp	r3, #0
 800cbac:	d1f4      	bne.n	800cb98 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1c>
 800cbae:	b009      	add	sp, #36	; 0x24
 800cbb0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800cbb4:	ae04      	add	r6, sp, #16
 800cbb6:	2b00      	cmp	r3, #0
 800cbb8:	d051      	beq.n	800cc5e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xe2>
 800cbba:	682b      	ldr	r3, [r5, #0]
 800cbbc:	4629      	mov	r1, r5
 800cbbe:	68db      	ldr	r3, [r3, #12]
 800cbc0:	a802      	add	r0, sp, #8
 800cbc2:	4798      	blx	r3
 800cbc4:	4628      	mov	r0, r5
 800cbc6:	f7ff ff5f 	bl	800ca88 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 800cbca:	f8bd 7008 	ldrh.w	r7, [sp, #8]
 800cbce:	4407      	add	r7, r0
 800cbd0:	4628      	mov	r0, r5
 800cbd2:	f7ff ff6d 	bl	800cab0 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 800cbd6:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 800cbda:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 800cbde:	f8ad 2014 	strh.w	r2, [sp, #20]
 800cbe2:	4418      	add	r0, r3
 800cbe4:	4621      	mov	r1, r4
 800cbe6:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 800cbea:	f8ad 0012 	strh.w	r0, [sp, #18]
 800cbee:	b23f      	sxth	r7, r7
 800cbf0:	4630      	mov	r0, r6
 800cbf2:	f8ad 3016 	strh.w	r3, [sp, #22]
 800cbf6:	f8ad 7010 	strh.w	r7, [sp, #16]
 800cbfa:	f7fc f933 	bl	8008e64 <_ZN8touchgfx4RectaNERKS0_>
 800cbfe:	4628      	mov	r0, r5
 800cc00:	f7ff ff26 	bl	800ca50 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 800cc04:	4602      	mov	r2, r0
 800cc06:	e896 0003 	ldmia.w	r6, {r0, r1}
 800cc0a:	ab06      	add	r3, sp, #24
 800cc0c:	e883 0003 	stmia.w	r3, {r0, r1}
 800cc10:	4611      	mov	r1, r2
 800cc12:	4618      	mov	r0, r3
 800cc14:	f7fc f926 	bl	8008e64 <_ZN8touchgfx4RectaNERKS0_>
 800cc18:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 800cc1c:	f9b4 1000 	ldrsh.w	r1, [r4]
 800cc20:	f9bd a01a 	ldrsh.w	sl, [sp, #26]
 800cc24:	f9bd b01c 	ldrsh.w	fp, [sp, #28]
 800cc28:	f9bd 901e 	ldrsh.w	r9, [sp, #30]
 800cc2c:	4299      	cmp	r1, r3
 800cc2e:	d10b      	bne.n	800cc48 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xcc>
 800cc30:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 800cc34:	4552      	cmp	r2, sl
 800cc36:	d107      	bne.n	800cc48 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xcc>
 800cc38:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 800cc3c:	455a      	cmp	r2, fp
 800cc3e:	d103      	bne.n	800cc48 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xcc>
 800cc40:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 800cc44:	454a      	cmp	r2, r9
 800cc46:	d00a      	beq.n	800cc5e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xe2>
 800cc48:	f1bb 0f00 	cmp.w	fp, #0
 800cc4c:	d002      	beq.n	800cc54 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xd8>
 800cc4e:	f1b9 0f00 	cmp.w	r9, #0
 800cc52:	d12e      	bne.n	800ccb2 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x136>
 800cc54:	69ea      	ldr	r2, [r5, #28]
 800cc56:	4621      	mov	r1, r4
 800cc58:	4640      	mov	r0, r8
 800cc5a:	f7ff ff8f 	bl	800cb7c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 800cc5e:	4628      	mov	r0, r5
 800cc60:	f7ff fef6 	bl	800ca50 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 800cc64:	6861      	ldr	r1, [r4, #4]
 800cc66:	4602      	mov	r2, r0
 800cc68:	6820      	ldr	r0, [r4, #0]
 800cc6a:	4633      	mov	r3, r6
 800cc6c:	c303      	stmia	r3!, {r0, r1}
 800cc6e:	4611      	mov	r1, r2
 800cc70:	4630      	mov	r0, r6
 800cc72:	f7fc f8f7 	bl	8008e64 <_ZN8touchgfx4RectaNERKS0_>
 800cc76:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 800cc7a:	2b00      	cmp	r3, #0
 800cc7c:	dd97      	ble.n	800cbae <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 800cc7e:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 800cc82:	2b00      	cmp	r3, #0
 800cc84:	dd93      	ble.n	800cbae <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 800cc86:	4628      	mov	r0, r5
 800cc88:	f7ff fefe 	bl	800ca88 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 800cc8c:	f8bd 3010 	ldrh.w	r3, [sp, #16]
 800cc90:	1a18      	subs	r0, r3, r0
 800cc92:	f8ad 0010 	strh.w	r0, [sp, #16]
 800cc96:	4628      	mov	r0, r5
 800cc98:	f7ff ff0a 	bl	800cab0 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 800cc9c:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800cca0:	1a18      	subs	r0, r3, r0
 800cca2:	f8ad 0012 	strh.w	r0, [sp, #18]
 800cca6:	682b      	ldr	r3, [r5, #0]
 800cca8:	4631      	mov	r1, r6
 800ccaa:	689b      	ldr	r3, [r3, #8]
 800ccac:	4628      	mov	r0, r5
 800ccae:	4798      	blx	r3
 800ccb0:	e77d      	b.n	800cbae <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 800ccb2:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 800ccb6:	fa1f f08a 	uxth.w	r0, sl
 800ccba:	4552      	cmp	r2, sl
 800ccbc:	9000      	str	r0, [sp, #0]
 800ccbe:	da12      	bge.n	800cce6 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x16a>
 800ccc0:	9301      	str	r3, [sp, #4]
 800ccc2:	9b00      	ldr	r3, [sp, #0]
 800ccc4:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 800ccc8:	f8ad 2012 	strh.w	r2, [sp, #18]
 800cccc:	1a9a      	subs	r2, r3, r2
 800ccce:	f8ad 1010 	strh.w	r1, [sp, #16]
 800ccd2:	f8ad 0014 	strh.w	r0, [sp, #20]
 800ccd6:	f8ad 2016 	strh.w	r2, [sp, #22]
 800ccda:	69ea      	ldr	r2, [r5, #28]
 800ccdc:	4631      	mov	r1, r6
 800ccde:	4640      	mov	r0, r8
 800cce0:	f7ff ff4c 	bl	800cb7c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 800cce4:	9b01      	ldr	r3, [sp, #4]
 800cce6:	f9b4 2000 	ldrsh.w	r2, [r4]
 800ccea:	429a      	cmp	r2, r3
 800ccec:	b29f      	uxth	r7, r3
 800ccee:	da0d      	bge.n	800cd0c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x190>
 800ccf0:	f8ad 2010 	strh.w	r2, [sp, #16]
 800ccf4:	1aba      	subs	r2, r7, r2
 800ccf6:	f8ad a012 	strh.w	sl, [sp, #18]
 800ccfa:	f8ad 2014 	strh.w	r2, [sp, #20]
 800ccfe:	f8ad 9016 	strh.w	r9, [sp, #22]
 800cd02:	69ea      	ldr	r2, [r5, #28]
 800cd04:	4631      	mov	r1, r6
 800cd06:	4640      	mov	r0, r8
 800cd08:	f7ff ff38 	bl	800cb7c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 800cd0c:	8822      	ldrh	r2, [r4, #0]
 800cd0e:	88a3      	ldrh	r3, [r4, #4]
 800cd10:	445f      	add	r7, fp
 800cd12:	4413      	add	r3, r2
 800cd14:	b29b      	uxth	r3, r3
 800cd16:	b2bf      	uxth	r7, r7
 800cd18:	b23a      	sxth	r2, r7
 800cd1a:	b219      	sxth	r1, r3
 800cd1c:	4291      	cmp	r1, r2
 800cd1e:	dd0d      	ble.n	800cd3c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1c0>
 800cd20:	1bdb      	subs	r3, r3, r7
 800cd22:	f8ad 2010 	strh.w	r2, [sp, #16]
 800cd26:	f8ad a012 	strh.w	sl, [sp, #18]
 800cd2a:	f8ad 3014 	strh.w	r3, [sp, #20]
 800cd2e:	f8ad 9016 	strh.w	r9, [sp, #22]
 800cd32:	69ea      	ldr	r2, [r5, #28]
 800cd34:	4631      	mov	r1, r6
 800cd36:	4640      	mov	r0, r8
 800cd38:	f7ff ff20 	bl	800cb7c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 800cd3c:	88e2      	ldrh	r2, [r4, #6]
 800cd3e:	8863      	ldrh	r3, [r4, #2]
 800cd40:	4413      	add	r3, r2
 800cd42:	9a00      	ldr	r2, [sp, #0]
 800cd44:	444a      	add	r2, r9
 800cd46:	b29b      	uxth	r3, r3
 800cd48:	fa1f f982 	uxth.w	r9, r2
 800cd4c:	fa0f f289 	sxth.w	r2, r9
 800cd50:	b219      	sxth	r1, r3
 800cd52:	428a      	cmp	r2, r1
 800cd54:	da83      	bge.n	800cc5e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xe2>
 800cd56:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 800cd5a:	f9b4 0000 	ldrsh.w	r0, [r4]
 800cd5e:	f8ad 1014 	strh.w	r1, [sp, #20]
 800cd62:	eba3 0309 	sub.w	r3, r3, r9
 800cd66:	f8ad 0010 	strh.w	r0, [sp, #16]
 800cd6a:	f8ad 2012 	strh.w	r2, [sp, #18]
 800cd6e:	f8ad 3016 	strh.w	r3, [sp, #22]
 800cd72:	69ea      	ldr	r2, [r5, #28]
 800cd74:	4631      	mov	r1, r6
 800cd76:	e76f      	b.n	800cc58 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xdc>

0800cd78 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>:
 800cd78:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800cd7a:	aa02      	add	r2, sp, #8
 800cd7c:	2300      	movs	r3, #0
 800cd7e:	f842 3d04 	str.w	r3, [r2, #-4]!
 800cd82:	4604      	mov	r4, r0
 800cd84:	3004      	adds	r0, #4
 800cd86:	460d      	mov	r5, r1
 800cd88:	f7fc f944 	bl	8009014 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>
 800cd8c:	9a01      	ldr	r2, [sp, #4]
 800cd8e:	b11a      	cbz	r2, 800cd98 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE+0x20>
 800cd90:	4629      	mov	r1, r5
 800cd92:	4620      	mov	r0, r4
 800cd94:	f7ff fef2 	bl	800cb7c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 800cd98:	b003      	add	sp, #12
 800cd9a:	bd30      	pop	{r4, r5, pc}

0800cd9c <_ZN8touchgfx6Screen4drawERNS_4RectE>:
 800cd9c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800cd9e:	4602      	mov	r2, r0
 800cda0:	4604      	mov	r4, r0
 800cda2:	f852 0f08 	ldr.w	r0, [r2, #8]!
 800cda6:	460d      	mov	r5, r1
 800cda8:	6851      	ldr	r1, [r2, #4]
 800cdaa:	466b      	mov	r3, sp
 800cdac:	c303      	stmia	r3!, {r0, r1}
 800cdae:	4629      	mov	r1, r5
 800cdb0:	4668      	mov	r0, sp
 800cdb2:	f7fc f857 	bl	8008e64 <_ZN8touchgfx4RectaNERKS0_>
 800cdb6:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 800cdba:	4669      	mov	r1, sp
 800cdbc:	b123      	cbz	r3, 800cdc8 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2c>
 800cdbe:	4620      	mov	r0, r4
 800cdc0:	f7ff ffda 	bl	800cd78 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>
 800cdc4:	b003      	add	sp, #12
 800cdc6:	bd30      	pop	{r4, r5, pc}
 800cdc8:	1d20      	adds	r0, r4, #4
 800cdca:	f7fc f8ea 	bl	8008fa2 <_ZNK8touchgfx9Container4drawERKNS_4RectE>
 800cdce:	e7f9      	b.n	800cdc4 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x28>

0800cdd0 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>:
 800cdd0:	680a      	ldr	r2, [r1, #0]
 800cdd2:	460b      	mov	r3, r1
 800cdd4:	6992      	ldr	r2, [r2, #24]
 800cdd6:	1d01      	adds	r1, r0, #4
 800cdd8:	4618      	mov	r0, r3
 800cdda:	4710      	bx	r2

0800cddc <_ZN8touchgfx12TextProviderC1Ev>:
 800cddc:	b510      	push	{r4, lr}
 800cdde:	2300      	movs	r3, #0
 800cde0:	2201      	movs	r2, #1
 800cde2:	4604      	mov	r4, r0
 800cde4:	e9c0 3300 	strd	r3, r3, [r0]
 800cde8:	60c3      	str	r3, [r0, #12]
 800cdea:	7403      	strb	r3, [r0, #16]
 800cdec:	82c3      	strh	r3, [r0, #22]
 800cdee:	8303      	strh	r3, [r0, #24]
 800cdf0:	85c3      	strh	r3, [r0, #46]	; 0x2e
 800cdf2:	8603      	strh	r3, [r0, #48]	; 0x30
 800cdf4:	86c3      	strh	r3, [r0, #54]	; 0x36
 800cdf6:	8703      	strh	r3, [r0, #56]	; 0x38
 800cdf8:	63c3      	str	r3, [r0, #60]	; 0x3c
 800cdfa:	f8a0 304e 	strh.w	r3, [r0, #78]	; 0x4e
 800cdfe:	f8a0 3050 	strh.w	r3, [r0, #80]	; 0x50
 800ce02:	f8a0 3052 	strh.w	r3, [r0, #82]	; 0x52
 800ce06:	f880 2054 	strb.w	r2, [r0, #84]	; 0x54
 800ce0a:	f880 3055 	strb.w	r3, [r0, #85]	; 0x55
 800ce0e:	f7f6 f8e3 	bl	8002fd8 <_ZN8touchgfx12TextProvider18initializeInternalEv>
 800ce12:	4620      	mov	r0, r4
 800ce14:	bd10      	pop	{r4, pc}

0800ce16 <_ZN8touchgfx12TextProvider19getNextCharInternalEv>:
 800ce16:	b530      	push	{r4, r5, lr}
 800ce18:	2500      	movs	r5, #0
 800ce1a:	2401      	movs	r4, #1
 800ce1c:	6843      	ldr	r3, [r0, #4]
 800ce1e:	b913      	cbnz	r3, 800ce26 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x10>
 800ce20:	6803      	ldr	r3, [r0, #0]
 800ce22:	b1f3      	cbz	r3, 800ce62 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x4c>
 800ce24:	6043      	str	r3, [r0, #4]
 800ce26:	7c03      	ldrb	r3, [r0, #16]
 800ce28:	b143      	cbz	r3, 800ce3c <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x26>
 800ce2a:	68c3      	ldr	r3, [r0, #12]
 800ce2c:	b12b      	cbz	r3, 800ce3a <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 800ce2e:	881a      	ldrh	r2, [r3, #0]
 800ce30:	b11a      	cbz	r2, 800ce3a <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 800ce32:	1c9a      	adds	r2, r3, #2
 800ce34:	60c2      	str	r2, [r0, #12]
 800ce36:	8818      	ldrh	r0, [r3, #0]
 800ce38:	bd30      	pop	{r4, r5, pc}
 800ce3a:	7405      	strb	r5, [r0, #16]
 800ce3c:	6843      	ldr	r3, [r0, #4]
 800ce3e:	8819      	ldrh	r1, [r3, #0]
 800ce40:	b179      	cbz	r1, 800ce62 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x4c>
 800ce42:	1c9a      	adds	r2, r3, #2
 800ce44:	2902      	cmp	r1, #2
 800ce46:	6042      	str	r2, [r0, #4]
 800ce48:	d1f5      	bne.n	800ce36 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x20>
 800ce4a:	6883      	ldr	r3, [r0, #8]
 800ce4c:	1d1a      	adds	r2, r3, #4
 800ce4e:	6082      	str	r2, [r0, #8]
 800ce50:	681b      	ldr	r3, [r3, #0]
 800ce52:	60c3      	str	r3, [r0, #12]
 800ce54:	2b00      	cmp	r3, #0
 800ce56:	d0e1      	beq.n	800ce1c <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 800ce58:	881b      	ldrh	r3, [r3, #0]
 800ce5a:	2b00      	cmp	r3, #0
 800ce5c:	d0de      	beq.n	800ce1c <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 800ce5e:	7404      	strb	r4, [r0, #16]
 800ce60:	e7dc      	b.n	800ce1c <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 800ce62:	2000      	movs	r0, #0
 800ce64:	e7e8      	b.n	800ce38 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x22>

0800ce66 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_>:
 800ce66:	b410      	push	{r4}
 800ce68:	63c3      	str	r3, [r0, #60]	; 0x3c
 800ce6a:	2300      	movs	r3, #0
 800ce6c:	6082      	str	r2, [r0, #8]
 800ce6e:	6001      	str	r1, [r0, #0]
 800ce70:	6043      	str	r3, [r0, #4]
 800ce72:	60c3      	str	r3, [r0, #12]
 800ce74:	7403      	strb	r3, [r0, #16]
 800ce76:	8603      	strh	r3, [r0, #48]	; 0x30
 800ce78:	8303      	strh	r3, [r0, #24]
 800ce7a:	8703      	strh	r3, [r0, #56]	; 0x38
 800ce7c:	f85d 4b04 	ldr.w	r4, [sp], #4
 800ce80:	f7f6 b8aa 	b.w	8002fd8 <_ZN8touchgfx12TextProvider18initializeInternalEv>

0800ce84 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>:
 800ce84:	b5f0      	push	{r4, r5, r6, r7, lr}
 800ce86:	4605      	mov	r5, r0
 800ce88:	4608      	mov	r0, r1
 800ce8a:	b1e9      	cbz	r1, 800cec8 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x44>
 800ce8c:	f105 0440 	add.w	r4, r5, #64	; 0x40
 800ce90:	460b      	mov	r3, r1
 800ce92:	f101 0708 	add.w	r7, r1, #8
 800ce96:	4622      	mov	r2, r4
 800ce98:	6818      	ldr	r0, [r3, #0]
 800ce9a:	6859      	ldr	r1, [r3, #4]
 800ce9c:	4626      	mov	r6, r4
 800ce9e:	c603      	stmia	r6!, {r0, r1}
 800cea0:	3308      	adds	r3, #8
 800cea2:	42bb      	cmp	r3, r7
 800cea4:	4634      	mov	r4, r6
 800cea6:	d1f7      	bne.n	800ce98 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x14>
 800cea8:	6818      	ldr	r0, [r3, #0]
 800ceaa:	6030      	str	r0, [r6, #0]
 800ceac:	889b      	ldrh	r3, [r3, #4]
 800ceae:	80b3      	strh	r3, [r6, #4]
 800ceb0:	f895 304d 	ldrb.w	r3, [r5, #77]	; 0x4d
 800ceb4:	015b      	lsls	r3, r3, #5
 800ceb6:	f403 7180 	and.w	r1, r3, #256	; 0x100
 800ceba:	f895 3046 	ldrb.w	r3, [r5, #70]	; 0x46
 800cebe:	430b      	orrs	r3, r1
 800cec0:	425b      	negs	r3, r3
 800cec2:	f885 3049 	strb.w	r3, [r5, #73]	; 0x49
 800cec6:	4610      	mov	r0, r2
 800cec8:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800ceca <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>:
 800ceca:	b538      	push	{r3, r4, r5, lr}
 800cecc:	460c      	mov	r4, r1
 800cece:	6811      	ldr	r1, [r2, #0]
 800ced0:	4610      	mov	r0, r2
 800ced2:	68cd      	ldr	r5, [r1, #12]
 800ced4:	4619      	mov	r1, r3
 800ced6:	47a8      	blx	r5
 800ced8:	2800      	cmp	r0, #0
 800ceda:	bf08      	it	eq
 800cedc:	4620      	moveq	r0, r4
 800cede:	bd38      	pop	{r3, r4, r5, pc}

0800cee0 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>:
 800cee0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800cee2:	4604      	mov	r4, r0
 800cee4:	4615      	mov	r5, r2
 800cee6:	4608      	mov	r0, r1
 800cee8:	b93a      	cbnz	r2, 800cefa <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1a>
 800ceea:	f8a4 204e 	strh.w	r2, [r4, #78]	; 0x4e
 800ceee:	f8a4 2050 	strh.w	r2, [r4, #80]	; 0x50
 800cef2:	f8a4 2052 	strh.w	r2, [r4, #82]	; 0x52
 800cef6:	4628      	mov	r0, r5
 800cef8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800cefa:	f892 c00d 	ldrb.w	ip, [r2, #13]
 800cefe:	8893      	ldrh	r3, [r2, #4]
 800cf00:	ea4f 160c 	mov.w	r6, ip, lsl #4
 800cf04:	f406 7280 	and.w	r2, r6, #256	; 0x100
 800cf08:	79ee      	ldrb	r6, [r5, #7]
 800cf0a:	4316      	orrs	r6, r2
 800cf0c:	f46f 6263 	mvn.w	r2, #3632	; 0xe30
 800cf10:	189a      	adds	r2, r3, r2
 800cf12:	b291      	uxth	r1, r2
 800cf14:	291d      	cmp	r1, #29
 800cf16:	b2b7      	uxth	r7, r6
 800cf18:	f200 8083 	bhi.w	800d022 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x142>
 800cf1c:	2201      	movs	r2, #1
 800cf1e:	408a      	lsls	r2, r1
 800cf20:	4978      	ldr	r1, [pc, #480]	; (800d104 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x224>)
 800cf22:	420a      	tst	r2, r1
 800cf24:	ea4f 06e6 	mov.w	r6, r6, asr #3
 800cf28:	d12d      	bne.n	800cf86 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xa6>
 800cf2a:	f412 7f60 	tst.w	r2, #896	; 0x380
 800cf2e:	d078      	beq.n	800d022 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x142>
 800cf30:	f104 0240 	add.w	r2, r4, #64	; 0x40
 800cf34:	462b      	mov	r3, r5
 800cf36:	f105 0e08 	add.w	lr, r5, #8
 800cf3a:	4615      	mov	r5, r2
 800cf3c:	6818      	ldr	r0, [r3, #0]
 800cf3e:	6859      	ldr	r1, [r3, #4]
 800cf40:	4694      	mov	ip, r2
 800cf42:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 800cf46:	3308      	adds	r3, #8
 800cf48:	4573      	cmp	r3, lr
 800cf4a:	4662      	mov	r2, ip
 800cf4c:	d1f6      	bne.n	800cf3c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x5c>
 800cf4e:	6818      	ldr	r0, [r3, #0]
 800cf50:	f8cc 0000 	str.w	r0, [ip]
 800cf54:	889b      	ldrh	r3, [r3, #4]
 800cf56:	f8ac 3004 	strh.w	r3, [ip, #4]
 800cf5a:	f8b4 1050 	ldrh.w	r1, [r4, #80]	; 0x50
 800cf5e:	f894 004d 	ldrb.w	r0, [r4, #77]	; 0x4d
 800cf62:	b2b3      	uxth	r3, r6
 800cf64:	1aca      	subs	r2, r1, r3
 800cf66:	b292      	uxth	r2, r2
 800cf68:	f884 2048 	strb.w	r2, [r4, #72]	; 0x48
 800cf6c:	10d2      	asrs	r2, r2, #3
 800cf6e:	f020 0060 	bic.w	r0, r0, #96	; 0x60
 800cf72:	f002 0260 	and.w	r2, r2, #96	; 0x60
 800cf76:	4302      	orrs	r2, r0
 800cf78:	1bcf      	subs	r7, r1, r7
 800cf7a:	f884 204d 	strb.w	r2, [r4, #77]	; 0x4d
 800cf7e:	1afb      	subs	r3, r7, r3
 800cf80:	f8a4 3050 	strh.w	r3, [r4, #80]	; 0x50
 800cf84:	e7b7      	b.n	800cef6 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 800cf86:	8e23      	ldrh	r3, [r4, #48]	; 0x30
 800cf88:	b92b      	cbnz	r3, 800cf96 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xb6>
 800cf8a:	4b5f      	ldr	r3, [pc, #380]	; (800d108 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x228>)
 800cf8c:	4a5f      	ldr	r2, [pc, #380]	; (800d10c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x22c>)
 800cf8e:	4860      	ldr	r0, [pc, #384]	; (800d110 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x230>)
 800cf90:	21c0      	movs	r1, #192	; 0xc0
 800cf92:	f00c fa3b 	bl	801940c <__assert_func>
 800cf96:	8de3      	ldrh	r3, [r4, #46]	; 0x2e
 800cf98:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 800cf9c:	8b59      	ldrh	r1, [r3, #26]
 800cf9e:	f640 6333 	movw	r3, #3635	; 0xe33
 800cfa2:	4299      	cmp	r1, r3
 800cfa4:	d110      	bne.n	800cfc8 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xe8>
 800cfa6:	6803      	ldr	r3, [r0, #0]
 800cfa8:	68db      	ldr	r3, [r3, #12]
 800cfaa:	4798      	blx	r3
 800cfac:	7b41      	ldrb	r1, [r0, #13]
 800cfae:	00cb      	lsls	r3, r1, #3
 800cfb0:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800cfb4:	7a03      	ldrb	r3, [r0, #8]
 800cfb6:	0648      	lsls	r0, r1, #25
 800cfb8:	ea43 0302 	orr.w	r3, r3, r2
 800cfbc:	bf44      	itt	mi
 800cfbe:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 800cfc2:	b21b      	sxthmi	r3, r3
 800cfc4:	f8a4 304e 	strh.w	r3, [r4, #78]	; 0x4e
 800cfc8:	f8b4 304e 	ldrh.w	r3, [r4, #78]	; 0x4e
 800cfcc:	443b      	add	r3, r7
 800cfce:	4433      	add	r3, r6
 800cfd0:	b29b      	uxth	r3, r3
 800cfd2:	f104 0640 	add.w	r6, r4, #64	; 0x40
 800cfd6:	462a      	mov	r2, r5
 800cfd8:	f105 0c08 	add.w	ip, r5, #8
 800cfdc:	f8a4 304e 	strh.w	r3, [r4, #78]	; 0x4e
 800cfe0:	4635      	mov	r5, r6
 800cfe2:	6810      	ldr	r0, [r2, #0]
 800cfe4:	6851      	ldr	r1, [r2, #4]
 800cfe6:	4637      	mov	r7, r6
 800cfe8:	c703      	stmia	r7!, {r0, r1}
 800cfea:	3208      	adds	r2, #8
 800cfec:	4562      	cmp	r2, ip
 800cfee:	463e      	mov	r6, r7
 800cff0:	d1f7      	bne.n	800cfe2 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x102>
 800cff2:	6810      	ldr	r0, [r2, #0]
 800cff4:	6038      	str	r0, [r7, #0]
 800cff6:	8892      	ldrh	r2, [r2, #4]
 800cff8:	80ba      	strh	r2, [r7, #4]
 800cffa:	f894 204d 	ldrb.w	r2, [r4, #77]	; 0x4d
 800cffe:	f884 3048 	strb.w	r3, [r4, #72]	; 0x48
 800d002:	10db      	asrs	r3, r3, #3
 800d004:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 800d008:	f003 0360 	and.w	r3, r3, #96	; 0x60
 800d00c:	4313      	orrs	r3, r2
 800d00e:	f884 304d 	strb.w	r3, [r4, #77]	; 0x4d
 800d012:	f894 2052 	ldrb.w	r2, [r4, #82]	; 0x52
 800d016:	f894 3049 	ldrb.w	r3, [r4, #73]	; 0x49
 800d01a:	1a9b      	subs	r3, r3, r2
 800d01c:	f884 3049 	strb.w	r3, [r4, #73]	; 0x49
 800d020:	e769      	b.n	800cef6 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 800d022:	f023 0204 	bic.w	r2, r3, #4
 800d026:	f640 611b 	movw	r1, #3611	; 0xe1b
 800d02a:	428a      	cmp	r2, r1
 800d02c:	d003      	beq.n	800d036 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x156>
 800d02e:	f640 621d 	movw	r2, #3613	; 0xe1d
 800d032:	4293      	cmp	r3, r2
 800d034:	d120      	bne.n	800d078 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x198>
 800d036:	3b01      	subs	r3, #1
 800d038:	4602      	mov	r2, r0
 800d03a:	b29b      	uxth	r3, r3
 800d03c:	4629      	mov	r1, r5
 800d03e:	4620      	mov	r0, r4
 800d040:	f7ff ff43 	bl	800ceca <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 800d044:	7b41      	ldrb	r1, [r0, #13]
 800d046:	00cb      	lsls	r3, r1, #3
 800d048:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800d04c:	7a03      	ldrb	r3, [r0, #8]
 800d04e:	0649      	lsls	r1, r1, #25
 800d050:	ea43 0302 	orr.w	r3, r3, r2
 800d054:	bf44      	itt	mi
 800d056:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 800d05a:	b21b      	sxthmi	r3, r3
 800d05c:	f8a4 304e 	strh.w	r3, [r4, #78]	; 0x4e
 800d060:	7b6b      	ldrb	r3, [r5, #13]
 800d062:	7aaa      	ldrb	r2, [r5, #10]
 800d064:	005b      	lsls	r3, r3, #1
 800d066:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800d06a:	4313      	orrs	r3, r2
 800d06c:	115a      	asrs	r2, r3, #5
 800d06e:	eb02 0393 	add.w	r3, r2, r3, lsr #2
 800d072:	f8a4 3052 	strh.w	r3, [r4, #82]	; 0x52
 800d076:	e036      	b.n	800d0e6 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x206>
 800d078:	ea4f 02cc 	mov.w	r2, ip, lsl #3
 800d07c:	f402 7180 	and.w	r1, r2, #256	; 0x100
 800d080:	7a2a      	ldrb	r2, [r5, #8]
 800d082:	f01c 0f40 	tst.w	ip, #64	; 0x40
 800d086:	ea42 0201 	orr.w	r2, r2, r1
 800d08a:	bf1c      	itt	ne
 800d08c:	f5a2 7200 	subne.w	r2, r2, #512	; 0x200
 800d090:	b212      	sxthne	r2, r2
 800d092:	f8a4 204e 	strh.w	r2, [r4, #78]	; 0x4e
 800d096:	f640 6109 	movw	r1, #3593	; 0xe09
 800d09a:	f023 0210 	bic.w	r2, r3, #16
 800d09e:	428a      	cmp	r2, r1
 800d0a0:	d003      	beq.n	800d0aa <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1ca>
 800d0a2:	f640 6213 	movw	r2, #3603	; 0xe13
 800d0a6:	4293      	cmp	r3, r2
 800d0a8:	d12a      	bne.n	800d100 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x220>
 800d0aa:	7b6e      	ldrb	r6, [r5, #13]
 800d0ac:	0076      	lsls	r6, r6, #1
 800d0ae:	f406 7280 	and.w	r2, r6, #256	; 0x100
 800d0b2:	7aae      	ldrb	r6, [r5, #10]
 800d0b4:	4316      	orrs	r6, r2
 800d0b6:	f640 6213 	movw	r2, #3603	; 0xe13
 800d0ba:	4293      	cmp	r3, r2
 800d0bc:	bf18      	it	ne
 800d0be:	f103 33ff 	addne.w	r3, r3, #4294967295
 800d0c2:	4602      	mov	r2, r0
 800d0c4:	bf14      	ite	ne
 800d0c6:	b29b      	uxthne	r3, r3
 800d0c8:	f640 630c 	movweq	r3, #3596	; 0xe0c
 800d0cc:	4629      	mov	r1, r5
 800d0ce:	4620      	mov	r0, r4
 800d0d0:	f7ff fefb 	bl	800ceca <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 800d0d4:	7b43      	ldrb	r3, [r0, #13]
 800d0d6:	7a82      	ldrb	r2, [r0, #10]
 800d0d8:	005b      	lsls	r3, r3, #1
 800d0da:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800d0de:	4313      	orrs	r3, r2
 800d0e0:	1af6      	subs	r6, r6, r3
 800d0e2:	f8a4 6052 	strh.w	r6, [r4, #82]	; 0x52
 800d0e6:	7b69      	ldrb	r1, [r5, #13]
 800d0e8:	00cb      	lsls	r3, r1, #3
 800d0ea:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800d0ee:	7a2b      	ldrb	r3, [r5, #8]
 800d0f0:	4313      	orrs	r3, r2
 800d0f2:	064a      	lsls	r2, r1, #25
 800d0f4:	bf44      	itt	mi
 800d0f6:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 800d0fa:	b21b      	sxthmi	r3, r3
 800d0fc:	1bdb      	subs	r3, r3, r7
 800d0fe:	e73f      	b.n	800cf80 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xa0>
 800d100:	2300      	movs	r3, #0
 800d102:	e7b6      	b.n	800d072 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x192>
 800d104:	3fc00079 	.word	0x3fc00079
 800d108:	0801ae4c 	.word	0x0801ae4c
 800d10c:	0801c8c7 	.word	0x0801c8c7
 800d110:	0801ae73 	.word	0x0801ae73

0800d114 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>:
 800d114:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800d118:	4604      	mov	r4, r0
 800d11a:	b942      	cbnz	r2, 800d12e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1a>
 800d11c:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 800d120:	f8a0 304e 	strh.w	r3, [r0, #78]	; 0x4e
 800d124:	f8a0 3050 	strh.w	r3, [r0, #80]	; 0x50
 800d128:	f8a4 3052 	strh.w	r3, [r4, #82]	; 0x52
 800d12c:	e046      	b.n	800d1bc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa8>
 800d12e:	7b51      	ldrb	r1, [r2, #13]
 800d130:	8893      	ldrh	r3, [r2, #4]
 800d132:	010f      	lsls	r7, r1, #4
 800d134:	f407 7080 	and.w	r0, r7, #256	; 0x100
 800d138:	79d7      	ldrb	r7, [r2, #7]
 800d13a:	4307      	orrs	r7, r0
 800d13c:	2f04      	cmp	r7, #4
 800d13e:	b2bd      	uxth	r5, r7
 800d140:	bfcc      	ite	gt
 800d142:	08bf      	lsrgt	r7, r7, #2
 800d144:	2701      	movle	r7, #1
 800d146:	f5b3 6fdd 	cmp.w	r3, #1768	; 0x6e8
 800d14a:	f200 80ab 	bhi.w	800d2a4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x190>
 800d14e:	f240 60e7 	movw	r0, #1767	; 0x6e7
 800d152:	4283      	cmp	r3, r0
 800d154:	d216      	bcs.n	800d184 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800d156:	f240 605b 	movw	r0, #1627	; 0x65b
 800d15a:	4283      	cmp	r3, r0
 800d15c:	d859      	bhi.n	800d212 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xfe>
 800d15e:	f240 6057 	movw	r0, #1623	; 0x657
 800d162:	4283      	cmp	r3, r0
 800d164:	d20e      	bcs.n	800d184 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800d166:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
 800d16a:	d24a      	bcs.n	800d202 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xee>
 800d16c:	f240 604e 	movw	r0, #1614	; 0x64e
 800d170:	4283      	cmp	r3, r0
 800d172:	d207      	bcs.n	800d184 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800d174:	f240 601a 	movw	r0, #1562	; 0x61a
 800d178:	4283      	cmp	r3, r0
 800d17a:	d02a      	beq.n	800d1d2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 800d17c:	d821      	bhi.n	800d1c2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xae>
 800d17e:	f5b3 6fc2 	cmp.w	r3, #1552	; 0x610
 800d182:	d35b      	bcc.n	800d23c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 800d184:	f9b4 304e 	ldrsh.w	r3, [r4, #78]	; 0x4e
 800d188:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 800d18c:	f040 80d0 	bne.w	800d330 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21c>
 800d190:	f9b4 0050 	ldrsh.w	r0, [r4, #80]	; 0x50
 800d194:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 800d198:	f040 80ca 	bne.w	800d330 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21c>
 800d19c:	00cb      	lsls	r3, r1, #3
 800d19e:	f403 7080 	and.w	r0, r3, #256	; 0x100
 800d1a2:	7a13      	ldrb	r3, [r2, #8]
 800d1a4:	0649      	lsls	r1, r1, #25
 800d1a6:	ea43 0300 	orr.w	r3, r3, r0
 800d1aa:	bf44      	itt	mi
 800d1ac:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 800d1b0:	b21b      	sxthmi	r3, r3
 800d1b2:	f8a4 304e 	strh.w	r3, [r4, #78]	; 0x4e
 800d1b6:	1b5d      	subs	r5, r3, r5
 800d1b8:	f8a4 5050 	strh.w	r5, [r4, #80]	; 0x50
 800d1bc:	4610      	mov	r0, r2
 800d1be:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800d1c2:	f240 604b 	movw	r0, #1611	; 0x64b
 800d1c6:	4283      	cmp	r3, r0
 800d1c8:	d338      	bcc.n	800d23c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 800d1ca:	f240 604c 	movw	r0, #1612	; 0x64c
 800d1ce:	4283      	cmp	r3, r0
 800d1d0:	d9d8      	bls.n	800d184 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800d1d2:	f9b4 004e 	ldrsh.w	r0, [r4, #78]	; 0x4e
 800d1d6:	f9b4 3050 	ldrsh.w	r3, [r4, #80]	; 0x50
 800d1da:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 800d1de:	f040 80f1 	bne.w	800d3c4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b0>
 800d1e2:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 800d1e6:	f040 80ed 	bne.w	800d3c4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b0>
 800d1ea:	00cb      	lsls	r3, r1, #3
 800d1ec:	f403 7080 	and.w	r0, r3, #256	; 0x100
 800d1f0:	7a13      	ldrb	r3, [r2, #8]
 800d1f2:	064e      	lsls	r6, r1, #25
 800d1f4:	ea43 0300 	orr.w	r3, r3, r0
 800d1f8:	bf44      	itt	mi
 800d1fa:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 800d1fe:	b21b      	sxthmi	r3, r3
 800d200:	e7d9      	b.n	800d1b6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa2>
 800d202:	f240 6054 	movw	r0, #1620	; 0x654
 800d206:	4283      	cmp	r3, r0
 800d208:	d8e3      	bhi.n	800d1d2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 800d20a:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
 800d20e:	d9e0      	bls.n	800d1d2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 800d210:	e7b8      	b.n	800d184 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800d212:	f240 6074 	movw	r0, #1652	; 0x674
 800d216:	4283      	cmp	r3, r0
 800d218:	d0b4      	beq.n	800d184 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800d21a:	d82d      	bhi.n	800d278 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x164>
 800d21c:	f240 605e 	movw	r0, #1630	; 0x65e
 800d220:	4283      	cmp	r3, r0
 800d222:	d804      	bhi.n	800d22e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x11a>
 800d224:	f240 605d 	movw	r0, #1629	; 0x65d
 800d228:	4283      	cmp	r3, r0
 800d22a:	d3d2      	bcc.n	800d1d2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 800d22c:	e7aa      	b.n	800d184 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800d22e:	f240 605f 	movw	r0, #1631	; 0x65f
 800d232:	4283      	cmp	r3, r0
 800d234:	d0cd      	beq.n	800d1d2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 800d236:	f5b3 6fce 	cmp.w	r3, #1648	; 0x670
 800d23a:	d0a3      	beq.n	800d184 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800d23c:	00cb      	lsls	r3, r1, #3
 800d23e:	f403 7080 	and.w	r0, r3, #256	; 0x100
 800d242:	7a13      	ldrb	r3, [r2, #8]
 800d244:	0649      	lsls	r1, r1, #25
 800d246:	ea43 0300 	orr.w	r3, r3, r0
 800d24a:	bf44      	itt	mi
 800d24c:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 800d250:	b21b      	sxthmi	r3, r3
 800d252:	1b5d      	subs	r5, r3, r5
 800d254:	f8a4 304e 	strh.w	r3, [r4, #78]	; 0x4e
 800d258:	f8a4 5050 	strh.w	r5, [r4, #80]	; 0x50
 800d25c:	7b53      	ldrb	r3, [r2, #13]
 800d25e:	015b      	lsls	r3, r3, #5
 800d260:	f403 7180 	and.w	r1, r3, #256	; 0x100
 800d264:	7993      	ldrb	r3, [r2, #6]
 800d266:	430b      	orrs	r3, r1
 800d268:	005b      	lsls	r3, r3, #1
 800d26a:	2105      	movs	r1, #5
 800d26c:	fb93 f3f1 	sdiv	r3, r3, r1
 800d270:	f992 1009 	ldrsb.w	r1, [r2, #9]
 800d274:	440b      	add	r3, r1
 800d276:	e757      	b.n	800d128 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x14>
 800d278:	f240 60e2 	movw	r0, #1762	; 0x6e2
 800d27c:	4283      	cmp	r3, r0
 800d27e:	d809      	bhi.n	800d294 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x180>
 800d280:	f240 60df 	movw	r0, #1759	; 0x6df
 800d284:	4283      	cmp	r3, r0
 800d286:	f4bf af7d 	bcs.w	800d184 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800d28a:	f2a3 63d6 	subw	r3, r3, #1750	; 0x6d6
 800d28e:	2b05      	cmp	r3, #5
 800d290:	d8d4      	bhi.n	800d23c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 800d292:	e777      	b.n	800d184 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800d294:	f240 60e3 	movw	r0, #1763	; 0x6e3
 800d298:	4283      	cmp	r3, r0
 800d29a:	d09a      	beq.n	800d1d2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 800d29c:	f240 60e4 	movw	r0, #1764	; 0x6e4
 800d2a0:	4283      	cmp	r3, r0
 800d2a2:	e7ca      	b.n	800d23a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x126>
 800d2a4:	f5b3 6f0f 	cmp.w	r3, #2288	; 0x8f0
 800d2a8:	d22b      	bcs.n	800d302 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1ee>
 800d2aa:	f640 00ed 	movw	r0, #2285	; 0x8ed
 800d2ae:	4283      	cmp	r3, r0
 800d2b0:	d28f      	bcs.n	800d1d2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 800d2b2:	f640 00e5 	movw	r0, #2277	; 0x8e5
 800d2b6:	4283      	cmp	r3, r0
 800d2b8:	d816      	bhi.n	800d2e8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d4>
 800d2ba:	f640 00e4 	movw	r0, #2276	; 0x8e4
 800d2be:	4283      	cmp	r3, r0
 800d2c0:	f4bf af60 	bcs.w	800d184 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800d2c4:	f240 60ec 	movw	r0, #1772	; 0x6ec
 800d2c8:	4283      	cmp	r3, r0
 800d2ca:	d80a      	bhi.n	800d2e2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1ce>
 800d2cc:	f240 60eb 	movw	r0, #1771	; 0x6eb
 800d2d0:	4283      	cmp	r3, r0
 800d2d2:	f4bf af57 	bcs.w	800d184 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800d2d6:	f240 60ea 	movw	r0, #1770	; 0x6ea
 800d2da:	4283      	cmp	r3, r0
 800d2dc:	f43f af79 	beq.w	800d1d2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 800d2e0:	e7ac      	b.n	800d23c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 800d2e2:	f240 60ed 	movw	r0, #1773	; 0x6ed
 800d2e6:	e7f8      	b.n	800d2da <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1c6>
 800d2e8:	f640 00e8 	movw	r0, #2280	; 0x8e8
 800d2ec:	4283      	cmp	r3, r0
 800d2ee:	d802      	bhi.n	800d2f6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e2>
 800d2f0:	f640 00e7 	movw	r0, #2279	; 0x8e7
 800d2f4:	e798      	b.n	800d228 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x114>
 800d2f6:	f640 00e9 	movw	r0, #2281	; 0x8e9
 800d2fa:	4283      	cmp	r3, r0
 800d2fc:	f47f af42 	bne.w	800d184 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800d300:	e767      	b.n	800d1d2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 800d302:	f640 00f6 	movw	r0, #2294	; 0x8f6
 800d306:	4283      	cmp	r3, r0
 800d308:	f43f af63 	beq.w	800d1d2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 800d30c:	d802      	bhi.n	800d314 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x200>
 800d30e:	f640 00f2 	movw	r0, #2290	; 0x8f2
 800d312:	e7f2      	b.n	800d2fa <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e6>
 800d314:	f640 00fa 	movw	r0, #2298	; 0x8fa
 800d318:	4283      	cmp	r3, r0
 800d31a:	d805      	bhi.n	800d328 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x214>
 800d31c:	f640 00f9 	movw	r0, #2297	; 0x8f9
 800d320:	4283      	cmp	r3, r0
 800d322:	f4ff af2f 	bcc.w	800d184 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800d326:	e754      	b.n	800d1d2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 800d328:	f640 00fe 	movw	r0, #2302	; 0x8fe
 800d32c:	4283      	cmp	r3, r0
 800d32e:	e7af      	b.n	800d290 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x17c>
 800d330:	f104 0c40 	add.w	ip, r4, #64	; 0x40
 800d334:	4617      	mov	r7, r2
 800d336:	f102 0808 	add.w	r8, r2, #8
 800d33a:	4666      	mov	r6, ip
 800d33c:	6838      	ldr	r0, [r7, #0]
 800d33e:	6879      	ldr	r1, [r7, #4]
 800d340:	46e6      	mov	lr, ip
 800d342:	e8ae 0003 	stmia.w	lr!, {r0, r1}
 800d346:	3708      	adds	r7, #8
 800d348:	4547      	cmp	r7, r8
 800d34a:	46f4      	mov	ip, lr
 800d34c:	d1f6      	bne.n	800d33c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x228>
 800d34e:	6838      	ldr	r0, [r7, #0]
 800d350:	f8ce 0000 	str.w	r0, [lr]
 800d354:	88b9      	ldrh	r1, [r7, #4]
 800d356:	f8ae 1004 	strh.w	r1, [lr, #4]
 800d35a:	f9b4 0052 	ldrsh.w	r0, [r4, #82]	; 0x52
 800d35e:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 800d362:	d009      	beq.n	800d378 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x264>
 800d364:	7b51      	ldrb	r1, [r2, #13]
 800d366:	7992      	ldrb	r2, [r2, #6]
 800d368:	0149      	lsls	r1, r1, #5
 800d36a:	f401 7180 	and.w	r1, r1, #256	; 0x100
 800d36e:	4311      	orrs	r1, r2
 800d370:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 800d374:	f884 0049 	strb.w	r0, [r4, #73]	; 0x49
 800d378:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 800d37c:	d00d      	beq.n	800d39a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x286>
 800d37e:	442b      	add	r3, r5
 800d380:	b29b      	uxth	r3, r3
 800d382:	f894 204d 	ldrb.w	r2, [r4, #77]	; 0x4d
 800d386:	f884 3048 	strb.w	r3, [r4, #72]	; 0x48
 800d38a:	10db      	asrs	r3, r3, #3
 800d38c:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 800d390:	f003 0360 	and.w	r3, r3, #96	; 0x60
 800d394:	4313      	orrs	r3, r2
 800d396:	f884 304d 	strb.w	r3, [r4, #77]	; 0x4d
 800d39a:	f894 104d 	ldrb.w	r1, [r4, #77]	; 0x4d
 800d39e:	00cb      	lsls	r3, r1, #3
 800d3a0:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800d3a4:	f894 3048 	ldrb.w	r3, [r4, #72]	; 0x48
 800d3a8:	064f      	lsls	r7, r1, #25
 800d3aa:	ea43 0302 	orr.w	r3, r3, r2
 800d3ae:	bf44      	itt	mi
 800d3b0:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 800d3b4:	b21b      	sxthmi	r3, r3
 800d3b6:	f8a4 304e 	strh.w	r3, [r4, #78]	; 0x4e
 800d3ba:	1b5d      	subs	r5, r3, r5
 800d3bc:	f8a4 5050 	strh.w	r5, [r4, #80]	; 0x50
 800d3c0:	4632      	mov	r2, r6
 800d3c2:	e6fb      	b.n	800d1bc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa8>
 800d3c4:	f104 0e40 	add.w	lr, r4, #64	; 0x40
 800d3c8:	4694      	mov	ip, r2
 800d3ca:	f102 0908 	add.w	r9, r2, #8
 800d3ce:	4676      	mov	r6, lr
 800d3d0:	f8dc 0000 	ldr.w	r0, [ip]
 800d3d4:	f8dc 1004 	ldr.w	r1, [ip, #4]
 800d3d8:	46f0      	mov	r8, lr
 800d3da:	e8a8 0003 	stmia.w	r8!, {r0, r1}
 800d3de:	f10c 0c08 	add.w	ip, ip, #8
 800d3e2:	45cc      	cmp	ip, r9
 800d3e4:	46c6      	mov	lr, r8
 800d3e6:	d1f3      	bne.n	800d3d0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2bc>
 800d3e8:	f8dc 0000 	ldr.w	r0, [ip]
 800d3ec:	f8c8 0000 	str.w	r0, [r8]
 800d3f0:	f8bc 1004 	ldrh.w	r1, [ip, #4]
 800d3f4:	f8a8 1004 	strh.w	r1, [r8, #4]
 800d3f8:	f9b4 0052 	ldrsh.w	r0, [r4, #82]	; 0x52
 800d3fc:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 800d400:	d009      	beq.n	800d416 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x302>
 800d402:	7b51      	ldrb	r1, [r2, #13]
 800d404:	7992      	ldrb	r2, [r2, #6]
 800d406:	0149      	lsls	r1, r1, #5
 800d408:	f401 7180 	and.w	r1, r1, #256	; 0x100
 800d40c:	4311      	orrs	r1, r2
 800d40e:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 800d412:	f884 0049 	strb.w	r0, [r4, #73]	; 0x49
 800d416:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 800d41a:	d00d      	beq.n	800d438 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x324>
 800d41c:	1bdb      	subs	r3, r3, r7
 800d41e:	f894 204d 	ldrb.w	r2, [r4, #77]	; 0x4d
 800d422:	b29b      	uxth	r3, r3
 800d424:	f884 3048 	strb.w	r3, [r4, #72]	; 0x48
 800d428:	10db      	asrs	r3, r3, #3
 800d42a:	f003 0360 	and.w	r3, r3, #96	; 0x60
 800d42e:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 800d432:	4313      	orrs	r3, r2
 800d434:	f884 304d 	strb.w	r3, [r4, #77]	; 0x4d
 800d438:	f894 104d 	ldrb.w	r1, [r4, #77]	; 0x4d
 800d43c:	00cb      	lsls	r3, r1, #3
 800d43e:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800d442:	f894 3048 	ldrb.w	r3, [r4, #72]	; 0x48
 800d446:	0648      	lsls	r0, r1, #25
 800d448:	ea43 0302 	orr.w	r3, r3, r2
 800d44c:	bf44      	itt	mi
 800d44e:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 800d452:	b21b      	sxthmi	r3, r3
 800d454:	e7b1      	b.n	800d3ba <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2a6>
	...

0800d458 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>:
 800d458:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800d45c:	461e      	mov	r6, r3
 800d45e:	8e03      	ldrh	r3, [r0, #48]	; 0x30
 800d460:	4604      	mov	r4, r0
 800d462:	4617      	mov	r7, r2
 800d464:	b92b      	cbnz	r3, 800d472 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x1a>
 800d466:	4b25      	ldr	r3, [pc, #148]	; (800d4fc <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0xa4>)
 800d468:	4a25      	ldr	r2, [pc, #148]	; (800d500 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0xa8>)
 800d46a:	4826      	ldr	r0, [pc, #152]	; (800d504 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0xac>)
 800d46c:	21c0      	movs	r1, #192	; 0xc0
 800d46e:	f00b ffcd 	bl	801940c <__assert_func>
 800d472:	8dc3      	ldrh	r3, [r0, #46]	; 0x2e
 800d474:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 800d478:	f8b3 801a 	ldrh.w	r8, [r3, #26]
 800d47c:	f7f5 fd6a 	bl	8002f54 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 800d480:	4605      	mov	r5, r0
 800d482:	b918      	cbnz	r0, 800d48c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x34>
 800d484:	6030      	str	r0, [r6, #0]
 800d486:	4628      	mov	r0, r5
 800d488:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800d48c:	683b      	ldr	r3, [r7, #0]
 800d48e:	4601      	mov	r1, r0
 800d490:	68db      	ldr	r3, [r3, #12]
 800d492:	4638      	mov	r0, r7
 800d494:	4798      	blx	r3
 800d496:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
 800d49a:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 800d49e:	4602      	mov	r2, r0
 800d4a0:	6030      	str	r0, [r6, #0]
 800d4a2:	d213      	bcs.n	800d4cc <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x74>
 800d4a4:	4643      	mov	r3, r8
 800d4a6:	4639      	mov	r1, r7
 800d4a8:	4620      	mov	r0, r4
 800d4aa:	f7ff fe33 	bl	800d114 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 800d4ae:	6030      	str	r0, [r6, #0]
 800d4b0:	6833      	ldr	r3, [r6, #0]
 800d4b2:	b143      	cbz	r3, 800d4c6 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x6e>
 800d4b4:	7b5a      	ldrb	r2, [r3, #13]
 800d4b6:	7a9b      	ldrb	r3, [r3, #10]
 800d4b8:	0052      	lsls	r2, r2, #1
 800d4ba:	f402 7280 	and.w	r2, r2, #256	; 0x100
 800d4be:	4313      	orrs	r3, r2
 800d4c0:	bf0c      	ite	eq
 800d4c2:	2301      	moveq	r3, #1
 800d4c4:	2300      	movne	r3, #0
 800d4c6:	f884 3055 	strb.w	r3, [r4, #85]	; 0x55
 800d4ca:	e7dc      	b.n	800d486 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x2e>
 800d4cc:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
 800d4d0:	b29b      	uxth	r3, r3
 800d4d2:	2b7f      	cmp	r3, #127	; 0x7f
 800d4d4:	d804      	bhi.n	800d4e0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x88>
 800d4d6:	4639      	mov	r1, r7
 800d4d8:	4620      	mov	r0, r4
 800d4da:	f7ff fd01 	bl	800cee0 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 800d4de:	e7e6      	b.n	800d4ae <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x56>
 800d4e0:	f894 3055 	ldrb.w	r3, [r4, #85]	; 0x55
 800d4e4:	2b00      	cmp	r3, #0
 800d4e6:	d0e3      	beq.n	800d4b0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x58>
 800d4e8:	f640 1302 	movw	r3, #2306	; 0x902
 800d4ec:	429d      	cmp	r5, r3
 800d4ee:	d1df      	bne.n	800d4b0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x58>
 800d4f0:	4601      	mov	r1, r0
 800d4f2:	4620      	mov	r0, r4
 800d4f4:	f7ff fcc6 	bl	800ce84 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 800d4f8:	e7d9      	b.n	800d4ae <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x56>
 800d4fa:	bf00      	nop
 800d4fc:	0801ae4c 	.word	0x0801ae4c
 800d500:	0801c8c7 	.word	0x0801c8c7
 800d504:	0801ae73 	.word	0x0801ae73

0800d508 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>:
 800d508:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800d50c:	461e      	mov	r6, r3
 800d50e:	8e03      	ldrh	r3, [r0, #48]	; 0x30
 800d510:	4604      	mov	r4, r0
 800d512:	4617      	mov	r7, r2
 800d514:	b92b      	cbnz	r3, 800d522 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x1a>
 800d516:	4b26      	ldr	r3, [pc, #152]	; (800d5b0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0xa8>)
 800d518:	4a26      	ldr	r2, [pc, #152]	; (800d5b4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0xac>)
 800d51a:	4827      	ldr	r0, [pc, #156]	; (800d5b8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0xb0>)
 800d51c:	21c0      	movs	r1, #192	; 0xc0
 800d51e:	f00b ff75 	bl	801940c <__assert_func>
 800d522:	8dc3      	ldrh	r3, [r0, #46]	; 0x2e
 800d524:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 800d528:	f8b3 801a 	ldrh.w	r8, [r3, #26]
 800d52c:	f7f5 fd12 	bl	8002f54 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 800d530:	4605      	mov	r5, r0
 800d532:	b918      	cbnz	r0, 800d53c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x34>
 800d534:	6030      	str	r0, [r6, #0]
 800d536:	4628      	mov	r0, r5
 800d538:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800d53c:	683b      	ldr	r3, [r7, #0]
 800d53e:	4601      	mov	r1, r0
 800d540:	f8d3 9008 	ldr.w	r9, [r3, #8]
 800d544:	4638      	mov	r0, r7
 800d546:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 800d54a:	47c8      	blx	r9
 800d54c:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
 800d550:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 800d554:	4602      	mov	r2, r0
 800d556:	6030      	str	r0, [r6, #0]
 800d558:	d213      	bcs.n	800d582 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x7a>
 800d55a:	4643      	mov	r3, r8
 800d55c:	4639      	mov	r1, r7
 800d55e:	4620      	mov	r0, r4
 800d560:	f7ff fdd8 	bl	800d114 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 800d564:	6030      	str	r0, [r6, #0]
 800d566:	6833      	ldr	r3, [r6, #0]
 800d568:	b143      	cbz	r3, 800d57c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x74>
 800d56a:	7b5a      	ldrb	r2, [r3, #13]
 800d56c:	7a9b      	ldrb	r3, [r3, #10]
 800d56e:	0052      	lsls	r2, r2, #1
 800d570:	f402 7280 	and.w	r2, r2, #256	; 0x100
 800d574:	4313      	orrs	r3, r2
 800d576:	bf0c      	ite	eq
 800d578:	2301      	moveq	r3, #1
 800d57a:	2300      	movne	r3, #0
 800d57c:	f884 3055 	strb.w	r3, [r4, #85]	; 0x55
 800d580:	e7d9      	b.n	800d536 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x2e>
 800d582:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
 800d586:	b29b      	uxth	r3, r3
 800d588:	2b7f      	cmp	r3, #127	; 0x7f
 800d58a:	d804      	bhi.n	800d596 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x8e>
 800d58c:	4639      	mov	r1, r7
 800d58e:	4620      	mov	r0, r4
 800d590:	f7ff fca6 	bl	800cee0 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 800d594:	e7e6      	b.n	800d564 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x5c>
 800d596:	f894 3055 	ldrb.w	r3, [r4, #85]	; 0x55
 800d59a:	2b00      	cmp	r3, #0
 800d59c:	d0e3      	beq.n	800d566 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x5e>
 800d59e:	f640 1302 	movw	r3, #2306	; 0x902
 800d5a2:	429d      	cmp	r5, r3
 800d5a4:	d1df      	bne.n	800d566 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x5e>
 800d5a6:	4601      	mov	r1, r0
 800d5a8:	4620      	mov	r0, r4
 800d5aa:	f7ff fc6b 	bl	800ce84 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 800d5ae:	e7d9      	b.n	800d564 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x5c>
 800d5b0:	0801ae4c 	.word	0x0801ae4c
 800d5b4:	0801c8c7 	.word	0x0801c8c7
 800d5b8:	0801ae73 	.word	0x0801ae73

0800d5bc <_ZN8touchgfx12TextProvider15fillInputBufferEv>:
 800d5bc:	b510      	push	{r4, lr}
 800d5be:	4604      	mov	r4, r0
 800d5c0:	8f21      	ldrh	r1, [r4, #56]	; 0x38
 800d5c2:	8e23      	ldrh	r3, [r4, #48]	; 0x30
 800d5c4:	b9d9      	cbnz	r1, 800d5fe <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x42>
 800d5c6:	8e23      	ldrh	r3, [r4, #48]	; 0x30
 800d5c8:	2b0a      	cmp	r3, #10
 800d5ca:	d036      	beq.n	800d63a <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x7e>
 800d5cc:	4620      	mov	r0, r4
 800d5ce:	f7ff fc22 	bl	800ce16 <_ZN8touchgfx12TextProvider19getNextCharInternalEv>
 800d5d2:	8e23      	ldrh	r3, [r4, #48]	; 0x30
 800d5d4:	2b09      	cmp	r3, #9
 800d5d6:	d906      	bls.n	800d5e6 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x2a>
 800d5d8:	4b18      	ldr	r3, [pc, #96]	; (800d63c <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x80>)
 800d5da:	4a19      	ldr	r2, [pc, #100]	; (800d640 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x84>)
 800d5dc:	4819      	ldr	r0, [pc, #100]	; (800d644 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x88>)
 800d5de:	f44f 7182 	mov.w	r1, #260	; 0x104
 800d5e2:	f00b ff13 	bl	801940c <__assert_func>
 800d5e6:	1c5a      	adds	r2, r3, #1
 800d5e8:	8622      	strh	r2, [r4, #48]	; 0x30
 800d5ea:	8de2      	ldrh	r2, [r4, #46]	; 0x2e
 800d5ec:	4413      	add	r3, r2
 800d5ee:	b29b      	uxth	r3, r3
 800d5f0:	2b09      	cmp	r3, #9
 800d5f2:	bf88      	it	hi
 800d5f4:	3b0a      	subhi	r3, #10
 800d5f6:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 800d5fa:	8358      	strh	r0, [r3, #26]
 800d5fc:	e7e3      	b.n	800d5c6 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0xa>
 800d5fe:	2b0a      	cmp	r3, #10
 800d600:	d01b      	beq.n	800d63a <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x7e>
 800d602:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 800d604:	eb04 0042 	add.w	r0, r4, r2, lsl #1
 800d608:	3901      	subs	r1, #1
 800d60a:	8e40      	ldrh	r0, [r0, #50]	; 0x32
 800d60c:	8721      	strh	r1, [r4, #56]	; 0x38
 800d60e:	1c51      	adds	r1, r2, #1
 800d610:	b289      	uxth	r1, r1
 800d612:	2901      	cmp	r1, #1
 800d614:	bf8a      	itet	hi
 800d616:	f102 32ff 	addhi.w	r2, r2, #4294967295
 800d61a:	86e1      	strhls	r1, [r4, #54]	; 0x36
 800d61c:	86e2      	strhhi	r2, [r4, #54]	; 0x36
 800d61e:	2b09      	cmp	r3, #9
 800d620:	d8da      	bhi.n	800d5d8 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x1c>
 800d622:	1c5a      	adds	r2, r3, #1
 800d624:	8622      	strh	r2, [r4, #48]	; 0x30
 800d626:	8de2      	ldrh	r2, [r4, #46]	; 0x2e
 800d628:	4413      	add	r3, r2
 800d62a:	b29b      	uxth	r3, r3
 800d62c:	2b09      	cmp	r3, #9
 800d62e:	bf88      	it	hi
 800d630:	3b0a      	subhi	r3, #10
 800d632:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 800d636:	8358      	strh	r0, [r3, #26]
 800d638:	e7c2      	b.n	800d5c0 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4>
 800d63a:	bd10      	pop	{r4, pc}
 800d63c:	0801c698 	.word	0x0801c698
 800d640:	0801ca1d 	.word	0x0801ca1d
 800d644:	0801ae73 	.word	0x0801ae73

0800d648 <_ZN8touchgfx12TextProvider11getNextCharEv>:
 800d648:	b538      	push	{r3, r4, r5, lr}
 800d64a:	8e02      	ldrh	r2, [r0, #48]	; 0x30
 800d64c:	4604      	mov	r4, r0
 800d64e:	b92a      	cbnz	r2, 800d65c <_ZN8touchgfx12TextProvider11getNextCharEv+0x14>
 800d650:	4b13      	ldr	r3, [pc, #76]	; (800d6a0 <_ZN8touchgfx12TextProvider11getNextCharEv+0x58>)
 800d652:	4a14      	ldr	r2, [pc, #80]	; (800d6a4 <_ZN8touchgfx12TextProvider11getNextCharEv+0x5c>)
 800d654:	4814      	ldr	r0, [pc, #80]	; (800d6a8 <_ZN8touchgfx12TextProvider11getNextCharEv+0x60>)
 800d656:	21d5      	movs	r1, #213	; 0xd5
 800d658:	f00b fed8 	bl	801940c <__assert_func>
 800d65c:	8dc3      	ldrh	r3, [r0, #46]	; 0x2e
 800d65e:	eb00 0143 	add.w	r1, r0, r3, lsl #1
 800d662:	3a01      	subs	r2, #1
 800d664:	8b4d      	ldrh	r5, [r1, #26]
 800d666:	8602      	strh	r2, [r0, #48]	; 0x30
 800d668:	1c5a      	adds	r2, r3, #1
 800d66a:	b292      	uxth	r2, r2
 800d66c:	2a09      	cmp	r2, #9
 800d66e:	bf86      	itte	hi
 800d670:	3b09      	subhi	r3, #9
 800d672:	85c3      	strhhi	r3, [r0, #46]	; 0x2e
 800d674:	85c2      	strhls	r2, [r0, #46]	; 0x2e
 800d676:	f7ff ffa1 	bl	800d5bc <_ZN8touchgfx12TextProvider15fillInputBufferEv>
 800d67a:	8b23      	ldrh	r3, [r4, #24]
 800d67c:	2b01      	cmp	r3, #1
 800d67e:	bf9c      	itt	ls
 800d680:	3301      	addls	r3, #1
 800d682:	8323      	strhls	r3, [r4, #24]
 800d684:	8ae3      	ldrh	r3, [r4, #22]
 800d686:	b90b      	cbnz	r3, 800d68c <_ZN8touchgfx12TextProvider11getNextCharEv+0x44>
 800d688:	2302      	movs	r3, #2
 800d68a:	82e3      	strh	r3, [r4, #22]
 800d68c:	8ae3      	ldrh	r3, [r4, #22]
 800d68e:	3b01      	subs	r3, #1
 800d690:	b29b      	uxth	r3, r3
 800d692:	82e3      	strh	r3, [r4, #22]
 800d694:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 800d698:	4628      	mov	r0, r5
 800d69a:	8265      	strh	r5, [r4, #18]
 800d69c:	bd38      	pop	{r3, r4, r5, pc}
 800d69e:	bf00      	nop
 800d6a0:	0801ae4c 	.word	0x0801ae4c
 800d6a4:	0801c972 	.word	0x0801c972
 800d6a8:	0801ae73 	.word	0x0801ae73

0800d6ac <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>:
 800d6ac:	b538      	push	{r3, r4, r5, lr}
 800d6ae:	428a      	cmp	r2, r1
 800d6b0:	8e04      	ldrh	r4, [r0, #48]	; 0x30
 800d6b2:	d90c      	bls.n	800d6ce <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x22>
 800d6b4:	b92c      	cbnz	r4, 800d6c2 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x16>
 800d6b6:	4b1c      	ldr	r3, [pc, #112]	; (800d728 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x7c>)
 800d6b8:	4a1c      	ldr	r2, [pc, #112]	; (800d72c <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x80>)
 800d6ba:	21e1      	movs	r1, #225	; 0xe1
 800d6bc:	481c      	ldr	r0, [pc, #112]	; (800d730 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x84>)
 800d6be:	f00b fea5 	bl	801940c <__assert_func>
 800d6c2:	3c01      	subs	r4, #1
 800d6c4:	8604      	strh	r4, [r0, #48]	; 0x30
 800d6c6:	4b1b      	ldr	r3, [pc, #108]	; (800d734 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x88>)
 800d6c8:	4a1b      	ldr	r2, [pc, #108]	; (800d738 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x8c>)
 800d6ca:	21c5      	movs	r1, #197	; 0xc5
 800d6cc:	e7f6      	b.n	800d6bc <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x10>
 800d6ce:	428c      	cmp	r4, r1
 800d6d0:	d203      	bcs.n	800d6da <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x2e>
 800d6d2:	4b1a      	ldr	r3, [pc, #104]	; (800d73c <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x90>)
 800d6d4:	4a1a      	ldr	r2, [pc, #104]	; (800d740 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x94>)
 800d6d6:	21cb      	movs	r1, #203	; 0xcb
 800d6d8:	e7f0      	b.n	800d6bc <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x10>
 800d6da:	1a64      	subs	r4, r4, r1
 800d6dc:	8604      	strh	r4, [r0, #48]	; 0x30
 800d6de:	8dc4      	ldrh	r4, [r0, #46]	; 0x2e
 800d6e0:	4421      	add	r1, r4
 800d6e2:	b289      	uxth	r1, r1
 800d6e4:	2909      	cmp	r1, #9
 800d6e6:	bf88      	it	hi
 800d6e8:	390a      	subhi	r1, #10
 800d6ea:	85c1      	strh	r1, [r0, #46]	; 0x2e
 800d6ec:	250a      	movs	r5, #10
 800d6ee:	b1ba      	cbz	r2, 800d720 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x74>
 800d6f0:	3a01      	subs	r2, #1
 800d6f2:	8e01      	ldrh	r1, [r0, #48]	; 0x30
 800d6f4:	b292      	uxth	r2, r2
 800d6f6:	2909      	cmp	r1, #9
 800d6f8:	f833 4012 	ldrh.w	r4, [r3, r2, lsl #1]
 800d6fc:	d903      	bls.n	800d706 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x5a>
 800d6fe:	4b11      	ldr	r3, [pc, #68]	; (800d744 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x98>)
 800d700:	4a11      	ldr	r2, [pc, #68]	; (800d748 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x9c>)
 800d702:	21e6      	movs	r1, #230	; 0xe6
 800d704:	e7da      	b.n	800d6bc <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x10>
 800d706:	3101      	adds	r1, #1
 800d708:	8601      	strh	r1, [r0, #48]	; 0x30
 800d70a:	8dc1      	ldrh	r1, [r0, #46]	; 0x2e
 800d70c:	b901      	cbnz	r1, 800d710 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x64>
 800d70e:	85c5      	strh	r5, [r0, #46]	; 0x2e
 800d710:	8dc1      	ldrh	r1, [r0, #46]	; 0x2e
 800d712:	3901      	subs	r1, #1
 800d714:	b289      	uxth	r1, r1
 800d716:	85c1      	strh	r1, [r0, #46]	; 0x2e
 800d718:	eb00 0141 	add.w	r1, r0, r1, lsl #1
 800d71c:	834c      	strh	r4, [r1, #26]
 800d71e:	e7e6      	b.n	800d6ee <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x42>
 800d720:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800d724:	f7ff bf4a 	b.w	800d5bc <_ZN8touchgfx12TextProvider15fillInputBufferEv>
 800d728:	0801ae4c 	.word	0x0801ae4c
 800d72c:	0801c74b 	.word	0x0801c74b
 800d730:	0801ae73 	.word	0x0801ae73
 800d734:	0801ae9f 	.word	0x0801ae9f
 800d738:	0801c7f5 	.word	0x0801c7f5
 800d73c:	0801c6a4 	.word	0x0801c6a4
 800d740:	0801cacc 	.word	0x0801cacc
 800d744:	0801c6b0 	.word	0x0801c6b0
 800d748:	0801c6c3 	.word	0x0801c6c3

0800d74c <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>:
 800d74c:	3a01      	subs	r2, #1
 800d74e:	b570      	push	{r4, r5, r6, lr}
 800d750:	b292      	uxth	r2, r2
 800d752:	f64f 76ff 	movw	r6, #65535	; 0xffff
 800d756:	42b2      	cmp	r2, r6
 800d758:	d019      	beq.n	800d78e <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x42>
 800d75a:	8b04      	ldrh	r4, [r0, #24]
 800d75c:	f831 5b02 	ldrh.w	r5, [r1], #2
 800d760:	4294      	cmp	r4, r2
 800d762:	d805      	bhi.n	800d770 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x24>
 800d764:	4b19      	ldr	r3, [pc, #100]	; (800d7cc <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x80>)
 800d766:	4a1a      	ldr	r2, [pc, #104]	; (800d7d0 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x84>)
 800d768:	481a      	ldr	r0, [pc, #104]	; (800d7d4 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x88>)
 800d76a:	21c5      	movs	r1, #197	; 0xc5
 800d76c:	f00b fe4e 	bl	801940c <__assert_func>
 800d770:	8ac4      	ldrh	r4, [r0, #22]
 800d772:	4414      	add	r4, r2
 800d774:	b2a4      	uxth	r4, r4
 800d776:	2c01      	cmp	r4, #1
 800d778:	bf88      	it	hi
 800d77a:	3c02      	subhi	r4, #2
 800d77c:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 800d780:	3a01      	subs	r2, #1
 800d782:	8a64      	ldrh	r4, [r4, #18]
 800d784:	42ac      	cmp	r4, r5
 800d786:	b292      	uxth	r2, r2
 800d788:	d0e5      	beq.n	800d756 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0xa>
 800d78a:	2000      	movs	r0, #0
 800d78c:	bd70      	pop	{r4, r5, r6, pc}
 800d78e:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 800d792:	2400      	movs	r4, #0
 800d794:	4413      	add	r3, r2
 800d796:	b2a2      	uxth	r2, r4
 800d798:	429a      	cmp	r2, r3
 800d79a:	da14      	bge.n	800d7c6 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x7a>
 800d79c:	8e06      	ldrh	r6, [r0, #48]	; 0x30
 800d79e:	f831 5014 	ldrh.w	r5, [r1, r4, lsl #1]
 800d7a2:	4296      	cmp	r6, r2
 800d7a4:	d802      	bhi.n	800d7ac <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x60>
 800d7a6:	4b09      	ldr	r3, [pc, #36]	; (800d7cc <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x80>)
 800d7a8:	4a0b      	ldr	r2, [pc, #44]	; (800d7d8 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x8c>)
 800d7aa:	e7dd      	b.n	800d768 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x1c>
 800d7ac:	8dc6      	ldrh	r6, [r0, #46]	; 0x2e
 800d7ae:	4432      	add	r2, r6
 800d7b0:	b292      	uxth	r2, r2
 800d7b2:	2a09      	cmp	r2, #9
 800d7b4:	bf88      	it	hi
 800d7b6:	3a0a      	subhi	r2, #10
 800d7b8:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 800d7bc:	3401      	adds	r4, #1
 800d7be:	8b52      	ldrh	r2, [r2, #26]
 800d7c0:	42aa      	cmp	r2, r5
 800d7c2:	d0e8      	beq.n	800d796 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x4a>
 800d7c4:	e7e1      	b.n	800d78a <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x3e>
 800d7c6:	2001      	movs	r0, #1
 800d7c8:	e7e0      	b.n	800d78c <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x40>
 800d7ca:	bf00      	nop
 800d7cc:	0801ae9f 	.word	0x0801ae9f
 800d7d0:	0801cb50 	.word	0x0801cb50
 800d7d4:	0801ae73 	.word	0x0801ae73
 800d7d8:	0801c7f5 	.word	0x0801c7f5

0800d7dc <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>:
 800d7dc:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d7e0:	4605      	mov	r5, r0
 800d7e2:	4616      	mov	r6, r2
 800d7e4:	1c8c      	adds	r4, r1, #2
 800d7e6:	8809      	ldrh	r1, [r1, #0]
 800d7e8:	ea4f 3a11 	mov.w	sl, r1, lsr #12
 800d7ec:	f834 301a 	ldrh.w	r3, [r4, sl, lsl #1]
 800d7f0:	42b3      	cmp	r3, r6
 800d7f2:	d124      	bne.n	800d83e <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x62>
 800d7f4:	f3c1 2903 	ubfx	r9, r1, #8, #4
 800d7f8:	f3c1 1803 	ubfx	r8, r1, #4, #4
 800d7fc:	f001 070f 	and.w	r7, r1, #15
 800d800:	f8cd 8000 	str.w	r8, [sp]
 800d804:	464b      	mov	r3, r9
 800d806:	4652      	mov	r2, sl
 800d808:	4621      	mov	r1, r4
 800d80a:	4628      	mov	r0, r5
 800d80c:	f7ff ff9e 	bl	800d74c <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>
 800d810:	4683      	mov	fp, r0
 800d812:	b168      	cbz	r0, 800d830 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x54>
 800d814:	eb0a 0109 	add.w	r1, sl, r9
 800d818:	4441      	add	r1, r8
 800d81a:	eb04 0341 	add.w	r3, r4, r1, lsl #1
 800d81e:	463a      	mov	r2, r7
 800d820:	4649      	mov	r1, r9
 800d822:	4628      	mov	r0, r5
 800d824:	f7ff ff42 	bl	800d6ac <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>
 800d828:	4658      	mov	r0, fp
 800d82a:	b003      	add	sp, #12
 800d82c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d830:	eb07 010a 	add.w	r1, r7, sl
 800d834:	4449      	add	r1, r9
 800d836:	4441      	add	r1, r8
 800d838:	eb04 0141 	add.w	r1, r4, r1, lsl #1
 800d83c:	e7d2      	b.n	800d7e4 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x8>
 800d83e:	f04f 0b00 	mov.w	fp, #0
 800d842:	e7f1      	b.n	800d828 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x4c>

0800d844 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>:
 800d844:	b570      	push	{r4, r5, r6, lr}
 800d846:	8810      	ldrh	r0, [r2, #0]
 800d848:	4298      	cmp	r0, r3
 800d84a:	d817      	bhi.n	800d87c <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 800d84c:	1e48      	subs	r0, r1, #1
 800d84e:	f832 0020 	ldrh.w	r0, [r2, r0, lsl #2]
 800d852:	4298      	cmp	r0, r3
 800d854:	d312      	bcc.n	800d87c <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 800d856:	2400      	movs	r4, #0
 800d858:	428c      	cmp	r4, r1
 800d85a:	d20f      	bcs.n	800d87c <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 800d85c:	1860      	adds	r0, r4, r1
 800d85e:	1040      	asrs	r0, r0, #1
 800d860:	0085      	lsls	r5, r0, #2
 800d862:	f832 6020 	ldrh.w	r6, [r2, r0, lsl #2]
 800d866:	42b3      	cmp	r3, r6
 800d868:	d902      	bls.n	800d870 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x2c>
 800d86a:	3001      	adds	r0, #1
 800d86c:	b284      	uxth	r4, r0
 800d86e:	e7f3      	b.n	800d858 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 800d870:	d201      	bcs.n	800d876 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x32>
 800d872:	b281      	uxth	r1, r0
 800d874:	e7f0      	b.n	800d858 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 800d876:	442a      	add	r2, r5
 800d878:	8850      	ldrh	r0, [r2, #2]
 800d87a:	bd70      	pop	{r4, r5, r6, pc}
 800d87c:	2000      	movs	r0, #0
 800d87e:	e7fc      	b.n	800d87a <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x36>

0800d880 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>:
 800d880:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800d884:	6bc5      	ldr	r5, [r0, #60]	; 0x3c
 800d886:	886f      	ldrh	r7, [r5, #2]
 800d888:	4604      	mov	r4, r0
 800d88a:	087f      	lsrs	r7, r7, #1
 800d88c:	260b      	movs	r6, #11
 800d88e:	3e01      	subs	r6, #1
 800d890:	d01b      	beq.n	800d8ca <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x4a>
 800d892:	8e23      	ldrh	r3, [r4, #48]	; 0x30
 800d894:	b92b      	cbnz	r3, 800d8a2 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x22>
 800d896:	4b0e      	ldr	r3, [pc, #56]	; (800d8d0 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x50>)
 800d898:	4a0e      	ldr	r2, [pc, #56]	; (800d8d4 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x54>)
 800d89a:	480f      	ldr	r0, [pc, #60]	; (800d8d8 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x58>)
 800d89c:	21c0      	movs	r1, #192	; 0xc0
 800d89e:	f00b fdb5 	bl	801940c <__assert_func>
 800d8a2:	8de3      	ldrh	r3, [r4, #46]	; 0x2e
 800d8a4:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 800d8a8:	462a      	mov	r2, r5
 800d8aa:	f8b3 801a 	ldrh.w	r8, [r3, #26]
 800d8ae:	4639      	mov	r1, r7
 800d8b0:	4643      	mov	r3, r8
 800d8b2:	4620      	mov	r0, r4
 800d8b4:	f7ff ffc6 	bl	800d844 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>
 800d8b8:	b138      	cbz	r0, 800d8ca <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x4a>
 800d8ba:	eb05 0140 	add.w	r1, r5, r0, lsl #1
 800d8be:	4642      	mov	r2, r8
 800d8c0:	4620      	mov	r0, r4
 800d8c2:	f7ff ff8b 	bl	800d7dc <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>
 800d8c6:	2800      	cmp	r0, #0
 800d8c8:	d1e1      	bne.n	800d88e <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0xe>
 800d8ca:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800d8ce:	bf00      	nop
 800d8d0:	0801ae4c 	.word	0x0801ae4c
 800d8d4:	0801c8c7 	.word	0x0801c8c7
 800d8d8:	0801ae73 	.word	0x0801ae73

0800d8dc <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>:
 800d8dc:	4b01      	ldr	r3, [pc, #4]	; (800d8e4 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE+0x8>)
 800d8de:	6018      	str	r0, [r3, #0]
 800d8e0:	4770      	bx	lr
 800d8e2:	bf00      	nop
 800d8e4:	20012208 	.word	0x20012208

0800d8e8 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>:
 800d8e8:	4b07      	ldr	r3, [pc, #28]	; (800d908 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x20>)
 800d8ea:	881a      	ldrh	r2, [r3, #0]
 800d8ec:	4282      	cmp	r2, r0
 800d8ee:	d809      	bhi.n	800d904 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x1c>
 800d8f0:	4b06      	ldr	r3, [pc, #24]	; (800d90c <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x24>)
 800d8f2:	881b      	ldrh	r3, [r3, #0]
 800d8f4:	4413      	add	r3, r2
 800d8f6:	4298      	cmp	r0, r3
 800d8f8:	da04      	bge.n	800d904 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x1c>
 800d8fa:	4b05      	ldr	r3, [pc, #20]	; (800d910 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x28>)
 800d8fc:	681b      	ldr	r3, [r3, #0]
 800d8fe:	f853 0020 	ldr.w	r0, [r3, r0, lsl #2]
 800d902:	4770      	bx	lr
 800d904:	2000      	movs	r0, #0
 800d906:	4770      	bx	lr
 800d908:	20012228 	.word	0x20012228
 800d90c:	2001222c 	.word	0x2001222c
 800d910:	2001220c 	.word	0x2001220c

0800d914 <_ZN8touchgfx6Bitmap10clearCacheEv>:
 800d914:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800d918:	4d28      	ldr	r5, [pc, #160]	; (800d9bc <_ZN8touchgfx6Bitmap10clearCacheEv+0xa8>)
 800d91a:	682b      	ldr	r3, [r5, #0]
 800d91c:	2b00      	cmp	r3, #0
 800d91e:	d04a      	beq.n	800d9b6 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa2>
 800d920:	4a27      	ldr	r2, [pc, #156]	; (800d9c0 <_ZN8touchgfx6Bitmap10clearCacheEv+0xac>)
 800d922:	4e28      	ldr	r6, [pc, #160]	; (800d9c4 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb0>)
 800d924:	8810      	ldrh	r0, [r2, #0]
 800d926:	f8b6 8000 	ldrh.w	r8, [r6]
 800d92a:	4c27      	ldr	r4, [pc, #156]	; (800d9c8 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb4>)
 800d92c:	4f27      	ldr	r7, [pc, #156]	; (800d9cc <_ZN8touchgfx6Bitmap10clearCacheEv+0xb8>)
 800d92e:	4440      	add	r0, r8
 800d930:	1c41      	adds	r1, r0, #1
 800d932:	f021 0101 	bic.w	r1, r1, #1
 800d936:	0409      	lsls	r1, r1, #16
 800d938:	0c09      	lsrs	r1, r1, #16
 800d93a:	ea4f 0e80 	mov.w	lr, r0, lsl #2
 800d93e:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 800d942:	eb03 020e 	add.w	r2, r3, lr
 800d946:	eb0e 010c 	add.w	r1, lr, ip
 800d94a:	6022      	str	r2, [r4, #0]
 800d94c:	185a      	adds	r2, r3, r1
 800d94e:	603a      	str	r2, [r7, #0]
 800d950:	220e      	movs	r2, #14
 800d952:	fb02 f208 	mul.w	r2, r2, r8
 800d956:	3203      	adds	r2, #3
 800d958:	f022 0203 	bic.w	r2, r2, #3
 800d95c:	4411      	add	r1, r2
 800d95e:	440b      	add	r3, r1
 800d960:	491b      	ldr	r1, [pc, #108]	; (800d9d0 <_ZN8touchgfx6Bitmap10clearCacheEv+0xbc>)
 800d962:	600b      	str	r3, [r1, #0]
 800d964:	491b      	ldr	r1, [pc, #108]	; (800d9d4 <_ZN8touchgfx6Bitmap10clearCacheEv+0xc0>)
 800d966:	2300      	movs	r3, #0
 800d968:	800b      	strh	r3, [r1, #0]
 800d96a:	491b      	ldr	r1, [pc, #108]	; (800d9d8 <_ZN8touchgfx6Bitmap10clearCacheEv+0xc4>)
 800d96c:	6809      	ldr	r1, [r1, #0]
 800d96e:	eba1 010e 	sub.w	r1, r1, lr
 800d972:	eba1 010c 	sub.w	r1, r1, ip
 800d976:	1a8a      	subs	r2, r1, r2
 800d978:	4918      	ldr	r1, [pc, #96]	; (800d9dc <_ZN8touchgfx6Bitmap10clearCacheEv+0xc8>)
 800d97a:	600a      	str	r2, [r1, #0]
 800d97c:	4a18      	ldr	r2, [pc, #96]	; (800d9e0 <_ZN8touchgfx6Bitmap10clearCacheEv+0xcc>)
 800d97e:	469c      	mov	ip, r3
 800d980:	8013      	strh	r3, [r2, #0]
 800d982:	f64f 71ff 	movw	r1, #65535	; 0xffff
 800d986:	4283      	cmp	r3, r0
 800d988:	d10d      	bne.n	800d9a6 <_ZN8touchgfx6Bitmap10clearCacheEv+0x92>
 800d98a:	8835      	ldrh	r5, [r6, #0]
 800d98c:	6838      	ldr	r0, [r7, #0]
 800d98e:	2300      	movs	r3, #0
 800d990:	240e      	movs	r4, #14
 800d992:	429d      	cmp	r5, r3
 800d994:	d90f      	bls.n	800d9b6 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa2>
 800d996:	fb04 0203 	mla	r2, r4, r3, r0
 800d99a:	3301      	adds	r3, #1
 800d99c:	7b11      	ldrb	r1, [r2, #12]
 800d99e:	f36f 1145 	bfc	r1, #5, #1
 800d9a2:	7311      	strb	r1, [r2, #12]
 800d9a4:	e7f5      	b.n	800d992 <_ZN8touchgfx6Bitmap10clearCacheEv+0x7e>
 800d9a6:	682a      	ldr	r2, [r5, #0]
 800d9a8:	f842 c023 	str.w	ip, [r2, r3, lsl #2]
 800d9ac:	6822      	ldr	r2, [r4, #0]
 800d9ae:	f822 1013 	strh.w	r1, [r2, r3, lsl #1]
 800d9b2:	3301      	adds	r3, #1
 800d9b4:	e7e7      	b.n	800d986 <_ZN8touchgfx6Bitmap10clearCacheEv+0x72>
 800d9b6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800d9ba:	bf00      	nop
 800d9bc:	2001220c 	.word	0x2001220c
 800d9c0:	20012228 	.word	0x20012228
 800d9c4:	2001222c 	.word	0x2001222c
 800d9c8:	20012220 	.word	0x20012220
 800d9cc:	20012210 	.word	0x20012210
 800d9d0:	20012218 	.word	0x20012218
 800d9d4:	2001222a 	.word	0x2001222a
 800d9d8:	20012214 	.word	0x20012214
 800d9dc:	20012224 	.word	0x20012224
 800d9e0:	2001221c 	.word	0x2001221c

0800d9e4 <_ZN8touchgfx6Bitmap8setCacheEPtmm>:
 800d9e4:	b510      	push	{r4, lr}
 800d9e6:	4b10      	ldr	r3, [pc, #64]	; (800da28 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x44>)
 800d9e8:	681b      	ldr	r3, [r3, #0]
 800d9ea:	b9db      	cbnz	r3, 800da24 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x40>
 800d9ec:	b1d1      	cbz	r1, 800da24 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x40>
 800d9ee:	4b0f      	ldr	r3, [pc, #60]	; (800da2c <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x48>)
 800d9f0:	801a      	strh	r2, [r3, #0]
 800d9f2:	4b0f      	ldr	r3, [pc, #60]	; (800da30 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x4c>)
 800d9f4:	881b      	ldrh	r3, [r3, #0]
 800d9f6:	b292      	uxth	r2, r2
 800d9f8:	240e      	movs	r4, #14
 800d9fa:	4413      	add	r3, r2
 800d9fc:	4362      	muls	r2, r4
 800d9fe:	2406      	movs	r4, #6
 800da00:	fb04 2203 	mla	r2, r4, r3, r2
 800da04:	428a      	cmp	r2, r1
 800da06:	d305      	bcc.n	800da14 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x30>
 800da08:	4b0a      	ldr	r3, [pc, #40]	; (800da34 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x50>)
 800da0a:	4a0b      	ldr	r2, [pc, #44]	; (800da38 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x54>)
 800da0c:	480b      	ldr	r0, [pc, #44]	; (800da3c <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x58>)
 800da0e:	2137      	movs	r1, #55	; 0x37
 800da10:	f00b fcfc 	bl	801940c <__assert_func>
 800da14:	4b0a      	ldr	r3, [pc, #40]	; (800da40 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x5c>)
 800da16:	6019      	str	r1, [r3, #0]
 800da18:	4b0a      	ldr	r3, [pc, #40]	; (800da44 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x60>)
 800da1a:	6018      	str	r0, [r3, #0]
 800da1c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800da20:	f7ff bf78 	b.w	800d914 <_ZN8touchgfx6Bitmap10clearCacheEv>
 800da24:	bd10      	pop	{r4, pc}
 800da26:	bf00      	nop
 800da28:	20012218 	.word	0x20012218
 800da2c:	2001222c 	.word	0x2001222c
 800da30:	20012228 	.word	0x20012228
 800da34:	0801cc7e 	.word	0x0801cc7e
 800da38:	0801ccd7 	.word	0x0801ccd7
 800da3c:	0801cc59 	.word	0x0801cc59
 800da40:	20012214 	.word	0x20012214
 800da44:	2001220c 	.word	0x2001220c

0800da48 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>:
 800da48:	b470      	push	{r4, r5, r6}
 800da4a:	4c07      	ldr	r4, [pc, #28]	; (800da68 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x20>)
 800da4c:	6826      	ldr	r6, [r4, #0]
 800da4e:	4605      	mov	r5, r0
 800da50:	4610      	mov	r0, r2
 800da52:	9a03      	ldr	r2, [sp, #12]
 800da54:	b936      	cbnz	r6, 800da64 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x1c>
 800da56:	6025      	str	r5, [r4, #0]
 800da58:	4c04      	ldr	r4, [pc, #16]	; (800da6c <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x24>)
 800da5a:	8021      	strh	r1, [r4, #0]
 800da5c:	bc70      	pop	{r4, r5, r6}
 800da5e:	4619      	mov	r1, r3
 800da60:	f7ff bfc0 	b.w	800d9e4 <_ZN8touchgfx6Bitmap8setCacheEPtmm>
 800da64:	bc70      	pop	{r4, r5, r6}
 800da66:	4770      	bx	lr
 800da68:	20012230 	.word	0x20012230
 800da6c:	20012228 	.word	0x20012228

0800da70 <_ZNK8touchgfx6Bitmap8getWidthEv>:
 800da70:	b508      	push	{r3, lr}
 800da72:	4b14      	ldr	r3, [pc, #80]	; (800dac4 <_ZNK8touchgfx6Bitmap8getWidthEv+0x54>)
 800da74:	6819      	ldr	r1, [r3, #0]
 800da76:	b931      	cbnz	r1, 800da86 <_ZNK8touchgfx6Bitmap8getWidthEv+0x16>
 800da78:	4b13      	ldr	r3, [pc, #76]	; (800dac8 <_ZNK8touchgfx6Bitmap8getWidthEv+0x58>)
 800da7a:	4a14      	ldr	r2, [pc, #80]	; (800dacc <_ZNK8touchgfx6Bitmap8getWidthEv+0x5c>)
 800da7c:	4814      	ldr	r0, [pc, #80]	; (800dad0 <_ZNK8touchgfx6Bitmap8getWidthEv+0x60>)
 800da7e:	f44f 713e 	mov.w	r1, #760	; 0x2f8
 800da82:	f00b fcc3 	bl	801940c <__assert_func>
 800da86:	4a13      	ldr	r2, [pc, #76]	; (800dad4 <_ZNK8touchgfx6Bitmap8getWidthEv+0x64>)
 800da88:	8803      	ldrh	r3, [r0, #0]
 800da8a:	8812      	ldrh	r2, [r2, #0]
 800da8c:	4293      	cmp	r3, r2
 800da8e:	d204      	bcs.n	800da9a <_ZNK8touchgfx6Bitmap8getWidthEv+0x2a>
 800da90:	2214      	movs	r2, #20
 800da92:	fb02 1303 	mla	r3, r2, r3, r1
 800da96:	8918      	ldrh	r0, [r3, #8]
 800da98:	bd08      	pop	{r3, pc}
 800da9a:	490f      	ldr	r1, [pc, #60]	; (800dad8 <_ZNK8touchgfx6Bitmap8getWidthEv+0x68>)
 800da9c:	8809      	ldrh	r1, [r1, #0]
 800da9e:	4411      	add	r1, r2
 800daa0:	428b      	cmp	r3, r1
 800daa2:	da06      	bge.n	800dab2 <_ZNK8touchgfx6Bitmap8getWidthEv+0x42>
 800daa4:	1a9b      	subs	r3, r3, r2
 800daa6:	4a0d      	ldr	r2, [pc, #52]	; (800dadc <_ZNK8touchgfx6Bitmap8getWidthEv+0x6c>)
 800daa8:	6812      	ldr	r2, [r2, #0]
 800daaa:	210e      	movs	r1, #14
 800daac:	fb01 2303 	mla	r3, r1, r3, r2
 800dab0:	e7f1      	b.n	800da96 <_ZNK8touchgfx6Bitmap8getWidthEv+0x26>
 800dab2:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 800dab6:	4293      	cmp	r3, r2
 800dab8:	bf0a      	itet	eq
 800daba:	4b09      	ldreq	r3, [pc, #36]	; (800dae0 <_ZNK8touchgfx6Bitmap8getWidthEv+0x70>)
 800dabc:	2000      	movne	r0, #0
 800dabe:	8818      	ldrheq	r0, [r3, #0]
 800dac0:	e7ea      	b.n	800da98 <_ZNK8touchgfx6Bitmap8getWidthEv+0x28>
 800dac2:	bf00      	nop
 800dac4:	20012230 	.word	0x20012230
 800dac8:	0801c2ec 	.word	0x0801c2ec
 800dacc:	0801cd84 	.word	0x0801cd84
 800dad0:	0801cc59 	.word	0x0801cc59
 800dad4:	20012228 	.word	0x20012228
 800dad8:	2001222c 	.word	0x2001222c
 800dadc:	20012210 	.word	0x20012210
 800dae0:	2001217c 	.word	0x2001217c

0800dae4 <_ZNK8touchgfx6Bitmap9getHeightEv>:
 800dae4:	b508      	push	{r3, lr}
 800dae6:	4b14      	ldr	r3, [pc, #80]	; (800db38 <_ZNK8touchgfx6Bitmap9getHeightEv+0x54>)
 800dae8:	6819      	ldr	r1, [r3, #0]
 800daea:	b931      	cbnz	r1, 800dafa <_ZNK8touchgfx6Bitmap9getHeightEv+0x16>
 800daec:	4b13      	ldr	r3, [pc, #76]	; (800db3c <_ZNK8touchgfx6Bitmap9getHeightEv+0x58>)
 800daee:	4a14      	ldr	r2, [pc, #80]	; (800db40 <_ZNK8touchgfx6Bitmap9getHeightEv+0x5c>)
 800daf0:	4814      	ldr	r0, [pc, #80]	; (800db44 <_ZNK8touchgfx6Bitmap9getHeightEv+0x60>)
 800daf2:	f44f 7143 	mov.w	r1, #780	; 0x30c
 800daf6:	f00b fc89 	bl	801940c <__assert_func>
 800dafa:	4a13      	ldr	r2, [pc, #76]	; (800db48 <_ZNK8touchgfx6Bitmap9getHeightEv+0x64>)
 800dafc:	8803      	ldrh	r3, [r0, #0]
 800dafe:	8812      	ldrh	r2, [r2, #0]
 800db00:	4293      	cmp	r3, r2
 800db02:	d204      	bcs.n	800db0e <_ZNK8touchgfx6Bitmap9getHeightEv+0x2a>
 800db04:	2214      	movs	r2, #20
 800db06:	fb02 1303 	mla	r3, r2, r3, r1
 800db0a:	8958      	ldrh	r0, [r3, #10]
 800db0c:	bd08      	pop	{r3, pc}
 800db0e:	490f      	ldr	r1, [pc, #60]	; (800db4c <_ZNK8touchgfx6Bitmap9getHeightEv+0x68>)
 800db10:	8809      	ldrh	r1, [r1, #0]
 800db12:	4411      	add	r1, r2
 800db14:	428b      	cmp	r3, r1
 800db16:	da06      	bge.n	800db26 <_ZNK8touchgfx6Bitmap9getHeightEv+0x42>
 800db18:	1a9b      	subs	r3, r3, r2
 800db1a:	4a0d      	ldr	r2, [pc, #52]	; (800db50 <_ZNK8touchgfx6Bitmap9getHeightEv+0x6c>)
 800db1c:	6812      	ldr	r2, [r2, #0]
 800db1e:	210e      	movs	r1, #14
 800db20:	fb01 2303 	mla	r3, r1, r3, r2
 800db24:	e7f1      	b.n	800db0a <_ZNK8touchgfx6Bitmap9getHeightEv+0x26>
 800db26:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 800db2a:	4293      	cmp	r3, r2
 800db2c:	bf0a      	itet	eq
 800db2e:	4b09      	ldreq	r3, [pc, #36]	; (800db54 <_ZNK8touchgfx6Bitmap9getHeightEv+0x70>)
 800db30:	2000      	movne	r0, #0
 800db32:	8818      	ldrheq	r0, [r3, #0]
 800db34:	e7ea      	b.n	800db0c <_ZNK8touchgfx6Bitmap9getHeightEv+0x28>
 800db36:	bf00      	nop
 800db38:	20012230 	.word	0x20012230
 800db3c:	0801c2ec 	.word	0x0801c2ec
 800db40:	0801cdb0 	.word	0x0801cdb0
 800db44:	0801cc59 	.word	0x0801cc59
 800db48:	20012228 	.word	0x20012228
 800db4c:	2001222c 	.word	0x2001222c
 800db50:	20012210 	.word	0x20012210
 800db54:	2001217e 	.word	0x2001217e

0800db58 <_ZNK8touchgfx6Bitmap12getSolidRectEv>:
 800db58:	b510      	push	{r4, lr}
 800db5a:	4b23      	ldr	r3, [pc, #140]	; (800dbe8 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x90>)
 800db5c:	681c      	ldr	r4, [r3, #0]
 800db5e:	b934      	cbnz	r4, 800db6e <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x16>
 800db60:	4b22      	ldr	r3, [pc, #136]	; (800dbec <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x94>)
 800db62:	4a23      	ldr	r2, [pc, #140]	; (800dbf0 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x98>)
 800db64:	4823      	ldr	r0, [pc, #140]	; (800dbf4 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x9c>)
 800db66:	f44f 7148 	mov.w	r1, #800	; 0x320
 800db6a:	f00b fc4f 	bl	801940c <__assert_func>
 800db6e:	4a22      	ldr	r2, [pc, #136]	; (800dbf8 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xa0>)
 800db70:	880b      	ldrh	r3, [r1, #0]
 800db72:	8812      	ldrh	r2, [r2, #0]
 800db74:	4293      	cmp	r3, r2
 800db76:	d211      	bcs.n	800db9c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x44>
 800db78:	2214      	movs	r2, #20
 800db7a:	fb02 4303 	mla	r3, r2, r3, r4
 800db7e:	8a1a      	ldrh	r2, [r3, #16]
 800db80:	f9b3 400c 	ldrsh.w	r4, [r3, #12]
 800db84:	f9b3 100e 	ldrsh.w	r1, [r3, #14]
 800db88:	8a5b      	ldrh	r3, [r3, #18]
 800db8a:	8004      	strh	r4, [r0, #0]
 800db8c:	f3c2 020c 	ubfx	r2, r2, #0, #13
 800db90:	f3c3 030c 	ubfx	r3, r3, #0, #13
 800db94:	8041      	strh	r1, [r0, #2]
 800db96:	8082      	strh	r2, [r0, #4]
 800db98:	80c3      	strh	r3, [r0, #6]
 800db9a:	e00e      	b.n	800dbba <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x62>
 800db9c:	4917      	ldr	r1, [pc, #92]	; (800dbfc <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xa4>)
 800db9e:	8809      	ldrh	r1, [r1, #0]
 800dba0:	4411      	add	r1, r2
 800dba2:	428b      	cmp	r3, r1
 800dba4:	da0a      	bge.n	800dbbc <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x64>
 800dba6:	1a9b      	subs	r3, r3, r2
 800dba8:	4a15      	ldr	r2, [pc, #84]	; (800dc00 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xa8>)
 800dbaa:	6812      	ldr	r2, [r2, #0]
 800dbac:	210e      	movs	r1, #14
 800dbae:	fb01 2303 	mla	r3, r1, r3, r2
 800dbb2:	681a      	ldr	r2, [r3, #0]
 800dbb4:	6002      	str	r2, [r0, #0]
 800dbb6:	685a      	ldr	r2, [r3, #4]
 800dbb8:	6042      	str	r2, [r0, #4]
 800dbba:	bd10      	pop	{r4, pc}
 800dbbc:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 800dbc0:	4293      	cmp	r3, r2
 800dbc2:	d10b      	bne.n	800dbdc <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x84>
 800dbc4:	4b0f      	ldr	r3, [pc, #60]	; (800dc04 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xac>)
 800dbc6:	f9b3 1000 	ldrsh.w	r1, [r3]
 800dbca:	4b0f      	ldr	r3, [pc, #60]	; (800dc08 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xb0>)
 800dbcc:	8081      	strh	r1, [r0, #4]
 800dbce:	f9b3 2000 	ldrsh.w	r2, [r3]
 800dbd2:	80c2      	strh	r2, [r0, #6]
 800dbd4:	2300      	movs	r3, #0
 800dbd6:	8003      	strh	r3, [r0, #0]
 800dbd8:	8043      	strh	r3, [r0, #2]
 800dbda:	e7ee      	b.n	800dbba <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x62>
 800dbdc:	2300      	movs	r3, #0
 800dbde:	8003      	strh	r3, [r0, #0]
 800dbe0:	8043      	strh	r3, [r0, #2]
 800dbe2:	8083      	strh	r3, [r0, #4]
 800dbe4:	e7d8      	b.n	800db98 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x40>
 800dbe6:	bf00      	nop
 800dbe8:	20012230 	.word	0x20012230
 800dbec:	0801c2ec 	.word	0x0801c2ec
 800dbf0:	0801cd1d 	.word	0x0801cd1d
 800dbf4:	0801cc59 	.word	0x0801cc59
 800dbf8:	20012228 	.word	0x20012228
 800dbfc:	2001222c 	.word	0x2001222c
 800dc00:	20012210 	.word	0x20012210
 800dc04:	2001217c 	.word	0x2001217c
 800dc08:	2001217e 	.word	0x2001217e

0800dc0c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>:
 800dc0c:	4b18      	ldr	r3, [pc, #96]	; (800dc70 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x64>)
 800dc0e:	681b      	ldr	r3, [r3, #0]
 800dc10:	b34b      	cbz	r3, 800dc66 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5a>
 800dc12:	4a18      	ldr	r2, [pc, #96]	; (800dc74 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x68>)
 800dc14:	8800      	ldrh	r0, [r0, #0]
 800dc16:	8812      	ldrh	r2, [r2, #0]
 800dc18:	4290      	cmp	r0, r2
 800dc1a:	d211      	bcs.n	800dc40 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x34>
 800dc1c:	2214      	movs	r2, #20
 800dc1e:	fb02 3300 	mla	r3, r2, r0, r3
 800dc22:	8a1a      	ldrh	r2, [r3, #16]
 800dc24:	8919      	ldrh	r1, [r3, #8]
 800dc26:	f3c2 020c 	ubfx	r2, r2, #0, #13
 800dc2a:	428a      	cmp	r2, r1
 800dc2c:	db1d      	blt.n	800dc6a <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5e>
 800dc2e:	8a58      	ldrh	r0, [r3, #18]
 800dc30:	f3c0 000c 	ubfx	r0, r0, #0, #13
 800dc34:	895b      	ldrh	r3, [r3, #10]
 800dc36:	4298      	cmp	r0, r3
 800dc38:	bfac      	ite	ge
 800dc3a:	2000      	movge	r0, #0
 800dc3c:	2001      	movlt	r0, #1
 800dc3e:	4770      	bx	lr
 800dc40:	4b0d      	ldr	r3, [pc, #52]	; (800dc78 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x6c>)
 800dc42:	881b      	ldrh	r3, [r3, #0]
 800dc44:	4413      	add	r3, r2
 800dc46:	4298      	cmp	r0, r3
 800dc48:	da0d      	bge.n	800dc66 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5a>
 800dc4a:	4b0c      	ldr	r3, [pc, #48]	; (800dc7c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x70>)
 800dc4c:	681b      	ldr	r3, [r3, #0]
 800dc4e:	1a80      	subs	r0, r0, r2
 800dc50:	220e      	movs	r2, #14
 800dc52:	fb02 3300 	mla	r3, r2, r0, r3
 800dc56:	f9b3 1004 	ldrsh.w	r1, [r3, #4]
 800dc5a:	891a      	ldrh	r2, [r3, #8]
 800dc5c:	4291      	cmp	r1, r2
 800dc5e:	db04      	blt.n	800dc6a <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5e>
 800dc60:	f9b3 0006 	ldrsh.w	r0, [r3, #6]
 800dc64:	e7e6      	b.n	800dc34 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x28>
 800dc66:	2000      	movs	r0, #0
 800dc68:	4770      	bx	lr
 800dc6a:	2001      	movs	r0, #1
 800dc6c:	4770      	bx	lr
 800dc6e:	bf00      	nop
 800dc70:	20012230 	.word	0x20012230
 800dc74:	20012228 	.word	0x20012228
 800dc78:	2001222c 	.word	0x2001222c
 800dc7c:	20012210 	.word	0x20012210

0800dc80 <_ZNK8touchgfx6Bitmap7getDataEv>:
 800dc80:	b508      	push	{r3, lr}
 800dc82:	4b12      	ldr	r3, [pc, #72]	; (800dccc <_ZNK8touchgfx6Bitmap7getDataEv+0x4c>)
 800dc84:	6819      	ldr	r1, [r3, #0]
 800dc86:	b931      	cbnz	r1, 800dc96 <_ZNK8touchgfx6Bitmap7getDataEv+0x16>
 800dc88:	4b11      	ldr	r3, [pc, #68]	; (800dcd0 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 800dc8a:	4a12      	ldr	r2, [pc, #72]	; (800dcd4 <_ZNK8touchgfx6Bitmap7getDataEv+0x54>)
 800dc8c:	4812      	ldr	r0, [pc, #72]	; (800dcd8 <_ZNK8touchgfx6Bitmap7getDataEv+0x58>)
 800dc8e:	f44f 7151 	mov.w	r1, #836	; 0x344
 800dc92:	f00b fbbb 	bl	801940c <__assert_func>
 800dc96:	8803      	ldrh	r3, [r0, #0]
 800dc98:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800dc9c:	4293      	cmp	r3, r2
 800dc9e:	d012      	beq.n	800dcc6 <_ZNK8touchgfx6Bitmap7getDataEv+0x46>
 800dca0:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 800dca4:	4293      	cmp	r3, r2
 800dca6:	d103      	bne.n	800dcb0 <_ZNK8touchgfx6Bitmap7getDataEv+0x30>
 800dca8:	4b0c      	ldr	r3, [pc, #48]	; (800dcdc <_ZNK8touchgfx6Bitmap7getDataEv+0x5c>)
 800dcaa:	681b      	ldr	r3, [r3, #0]
 800dcac:	6c58      	ldr	r0, [r3, #68]	; 0x44
 800dcae:	bd08      	pop	{r3, pc}
 800dcb0:	4a0b      	ldr	r2, [pc, #44]	; (800dce0 <_ZNK8touchgfx6Bitmap7getDataEv+0x60>)
 800dcb2:	6812      	ldr	r2, [r2, #0]
 800dcb4:	b11a      	cbz	r2, 800dcbe <_ZNK8touchgfx6Bitmap7getDataEv+0x3e>
 800dcb6:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 800dcba:	2800      	cmp	r0, #0
 800dcbc:	d1f7      	bne.n	800dcae <_ZNK8touchgfx6Bitmap7getDataEv+0x2e>
 800dcbe:	2214      	movs	r2, #20
 800dcc0:	4353      	muls	r3, r2
 800dcc2:	58c8      	ldr	r0, [r1, r3]
 800dcc4:	e7f3      	b.n	800dcae <_ZNK8touchgfx6Bitmap7getDataEv+0x2e>
 800dcc6:	2000      	movs	r0, #0
 800dcc8:	e7f1      	b.n	800dcae <_ZNK8touchgfx6Bitmap7getDataEv+0x2e>
 800dcca:	bf00      	nop
 800dccc:	20012230 	.word	0x20012230
 800dcd0:	0801c2ec 	.word	0x0801c2ec
 800dcd4:	0801cd53 	.word	0x0801cd53
 800dcd8:	0801cc59 	.word	0x0801cc59
 800dcdc:	20012188 	.word	0x20012188
 800dce0:	2001220c 	.word	0x2001220c

0800dce4 <_ZNK8touchgfx6Bitmap12getExtraDataEv>:
 800dce4:	8802      	ldrh	r2, [r0, #0]
 800dce6:	f64f 73fd 	movw	r3, #65533	; 0xfffd
 800dcea:	429a      	cmp	r2, r3
 800dcec:	d840      	bhi.n	800dd70 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8c>
 800dcee:	4b21      	ldr	r3, [pc, #132]	; (800dd74 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>)
 800dcf0:	881b      	ldrh	r3, [r3, #0]
 800dcf2:	429a      	cmp	r2, r3
 800dcf4:	d220      	bcs.n	800dd38 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x54>
 800dcf6:	4b20      	ldr	r3, [pc, #128]	; (800dd78 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x94>)
 800dcf8:	6819      	ldr	r1, [r3, #0]
 800dcfa:	2314      	movs	r3, #20
 800dcfc:	fb03 1302 	mla	r3, r3, r2, r1
 800dd00:	6858      	ldr	r0, [r3, #4]
 800dd02:	2800      	cmp	r0, #0
 800dd04:	d035      	beq.n	800dd72 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 800dd06:	491d      	ldr	r1, [pc, #116]	; (800dd7c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>)
 800dd08:	6809      	ldr	r1, [r1, #0]
 800dd0a:	2900      	cmp	r1, #0
 800dd0c:	d031      	beq.n	800dd72 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 800dd0e:	f851 1022 	ldr.w	r1, [r1, r2, lsl #2]
 800dd12:	b371      	cbz	r1, 800dd72 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 800dd14:	895a      	ldrh	r2, [r3, #10]
 800dd16:	8918      	ldrh	r0, [r3, #8]
 800dd18:	4350      	muls	r0, r2
 800dd1a:	7c5a      	ldrb	r2, [r3, #17]
 800dd1c:	7cdb      	ldrb	r3, [r3, #19]
 800dd1e:	0952      	lsrs	r2, r2, #5
 800dd20:	f3c3 1342 	ubfx	r3, r3, #5, #3
 800dd24:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 800dd28:	2b0b      	cmp	r3, #11
 800dd2a:	bf18      	it	ne
 800dd2c:	0040      	lslne	r0, r0, #1
 800dd2e:	3003      	adds	r0, #3
 800dd30:	f020 0003 	bic.w	r0, r0, #3
 800dd34:	4408      	add	r0, r1
 800dd36:	4770      	bx	lr
 800dd38:	4911      	ldr	r1, [pc, #68]	; (800dd80 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 800dd3a:	8809      	ldrh	r1, [r1, #0]
 800dd3c:	4419      	add	r1, r3
 800dd3e:	428a      	cmp	r2, r1
 800dd40:	da16      	bge.n	800dd70 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8c>
 800dd42:	4910      	ldr	r1, [pc, #64]	; (800dd84 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa0>)
 800dd44:	6809      	ldr	r1, [r1, #0]
 800dd46:	1ad3      	subs	r3, r2, r3
 800dd48:	200e      	movs	r0, #14
 800dd4a:	fb00 1303 	mla	r3, r0, r3, r1
 800dd4e:	7b19      	ldrb	r1, [r3, #12]
 800dd50:	f001 011f 	and.w	r1, r1, #31
 800dd54:	290b      	cmp	r1, #11
 800dd56:	d10b      	bne.n	800dd70 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8c>
 800dd58:	8919      	ldrh	r1, [r3, #8]
 800dd5a:	8958      	ldrh	r0, [r3, #10]
 800dd5c:	4b07      	ldr	r3, [pc, #28]	; (800dd7c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>)
 800dd5e:	4348      	muls	r0, r1
 800dd60:	6819      	ldr	r1, [r3, #0]
 800dd62:	3003      	adds	r0, #3
 800dd64:	f020 0303 	bic.w	r3, r0, #3
 800dd68:	f851 0022 	ldr.w	r0, [r1, r2, lsl #2]
 800dd6c:	4418      	add	r0, r3
 800dd6e:	4770      	bx	lr
 800dd70:	2000      	movs	r0, #0
 800dd72:	4770      	bx	lr
 800dd74:	20012228 	.word	0x20012228
 800dd78:	20012230 	.word	0x20012230
 800dd7c:	2001220c 	.word	0x2001220c
 800dd80:	2001222c 	.word	0x2001222c
 800dd84:	20012210 	.word	0x20012210

0800dd88 <_ZNK8touchgfx6Bitmap9getFormatEv>:
 800dd88:	4b19      	ldr	r3, [pc, #100]	; (800ddf0 <_ZNK8touchgfx6Bitmap9getFormatEv+0x68>)
 800dd8a:	6819      	ldr	r1, [r3, #0]
 800dd8c:	8803      	ldrh	r3, [r0, #0]
 800dd8e:	b1e9      	cbz	r1, 800ddcc <_ZNK8touchgfx6Bitmap9getFormatEv+0x44>
 800dd90:	4a18      	ldr	r2, [pc, #96]	; (800ddf4 <_ZNK8touchgfx6Bitmap9getFormatEv+0x6c>)
 800dd92:	8812      	ldrh	r2, [r2, #0]
 800dd94:	429a      	cmp	r2, r3
 800dd96:	d90a      	bls.n	800ddae <_ZNK8touchgfx6Bitmap9getFormatEv+0x26>
 800dd98:	2214      	movs	r2, #20
 800dd9a:	fb02 1303 	mla	r3, r2, r3, r1
 800dd9e:	7c58      	ldrb	r0, [r3, #17]
 800dda0:	0942      	lsrs	r2, r0, #5
 800dda2:	7cd8      	ldrb	r0, [r3, #19]
 800dda4:	f3c0 1042 	ubfx	r0, r0, #5, #3
 800dda8:	ea40 00c2 	orr.w	r0, r0, r2, lsl #3
 800ddac:	4770      	bx	lr
 800ddae:	4912      	ldr	r1, [pc, #72]	; (800ddf8 <_ZNK8touchgfx6Bitmap9getFormatEv+0x70>)
 800ddb0:	8809      	ldrh	r1, [r1, #0]
 800ddb2:	4411      	add	r1, r2
 800ddb4:	428b      	cmp	r3, r1
 800ddb6:	da09      	bge.n	800ddcc <_ZNK8touchgfx6Bitmap9getFormatEv+0x44>
 800ddb8:	1a9b      	subs	r3, r3, r2
 800ddba:	4a10      	ldr	r2, [pc, #64]	; (800ddfc <_ZNK8touchgfx6Bitmap9getFormatEv+0x74>)
 800ddbc:	6812      	ldr	r2, [r2, #0]
 800ddbe:	210e      	movs	r1, #14
 800ddc0:	fb01 2303 	mla	r3, r1, r3, r2
 800ddc4:	7b18      	ldrb	r0, [r3, #12]
 800ddc6:	f000 001f 	and.w	r0, r0, #31
 800ddca:	4770      	bx	lr
 800ddcc:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 800ddd0:	4293      	cmp	r3, r2
 800ddd2:	d10a      	bne.n	800ddea <_ZNK8touchgfx6Bitmap9getFormatEv+0x62>
 800ddd4:	4b0a      	ldr	r3, [pc, #40]	; (800de00 <_ZNK8touchgfx6Bitmap9getFormatEv+0x78>)
 800ddd6:	681b      	ldr	r3, [r3, #0]
 800ddd8:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 800dddc:	b10a      	cbz	r2, 800dde2 <_ZNK8touchgfx6Bitmap9getFormatEv+0x5a>
 800ddde:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 800dde0:	b900      	cbnz	r0, 800dde4 <_ZNK8touchgfx6Bitmap9getFormatEv+0x5c>
 800dde2:	6898      	ldr	r0, [r3, #8]
 800dde4:	6803      	ldr	r3, [r0, #0]
 800dde6:	6a1b      	ldr	r3, [r3, #32]
 800dde8:	4718      	bx	r3
 800ddea:	2000      	movs	r0, #0
 800ddec:	4770      	bx	lr
 800ddee:	bf00      	nop
 800ddf0:	20012230 	.word	0x20012230
 800ddf4:	20012228 	.word	0x20012228
 800ddf8:	2001222c 	.word	0x2001222c
 800ddfc:	20012210 	.word	0x20012210
 800de00:	20012188 	.word	0x20012188

0800de04 <_ZNK8touchgfx8LCD16bpp8bitDepthEv>:
 800de04:	2010      	movs	r0, #16
 800de06:	4770      	bx	lr

0800de08 <_ZNK8touchgfx8LCD16bpp17framebufferFormatEv>:
 800de08:	2000      	movs	r0, #0
 800de0a:	4770      	bx	lr

0800de0c <_ZNK8touchgfx8LCD16bpp20getColorFrom24BitRGBEhhh>:
 800de0c:	00d2      	lsls	r2, r2, #3
 800de0e:	0209      	lsls	r1, r1, #8
 800de10:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 800de14:	ea42 02d3 	orr.w	r2, r2, r3, lsr #3
 800de18:	f401 4078 	and.w	r0, r1, #63488	; 0xf800
 800de1c:	4310      	orrs	r0, r2
 800de1e:	4770      	bx	lr

0800de20 <_ZNK8touchgfx8LCD16bpp11getRedColorENS_9colortypeE>:
 800de20:	0a09      	lsrs	r1, r1, #8
 800de22:	f001 00f8 	and.w	r0, r1, #248	; 0xf8
 800de26:	4770      	bx	lr

0800de28 <_ZNK8touchgfx8LCD16bpp13getGreenColorENS_9colortypeE>:
 800de28:	08c9      	lsrs	r1, r1, #3
 800de2a:	f001 00fc 	and.w	r0, r1, #252	; 0xfc
 800de2e:	4770      	bx	lr

0800de30 <_ZNK8touchgfx8LCD16bpp12getBlueColorENS_9colortypeE>:
 800de30:	00c9      	lsls	r1, r1, #3
 800de32:	f001 00f8 	and.w	r0, r1, #248	; 0xf8
 800de36:	4770      	bx	lr

0800de38 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth>:
 800de38:	2bff      	cmp	r3, #255	; 0xff
 800de3a:	d050      	beq.n	800dede <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa6>
 800de3c:	2a0b      	cmp	r2, #11
 800de3e:	d04a      	beq.n	800ded6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 800de40:	d80e      	bhi.n	800de60 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x28>
 800de42:	2a03      	cmp	r2, #3
 800de44:	d03f      	beq.n	800dec6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8e>
 800de46:	d804      	bhi.n	800de52 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x1a>
 800de48:	2a01      	cmp	r2, #1
 800de4a:	d03e      	beq.n	800deca <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x92>
 800de4c:	d93f      	bls.n	800dece <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x96>
 800de4e:	6b80      	ldr	r0, [r0, #56]	; 0x38
 800de50:	4770      	bx	lr
 800de52:	2a09      	cmp	r2, #9
 800de54:	d03f      	beq.n	800ded6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 800de56:	d83c      	bhi.n	800ded2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 800de58:	2a08      	cmp	r2, #8
 800de5a:	d03a      	beq.n	800ded2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 800de5c:	2000      	movs	r0, #0
 800de5e:	4770      	bx	lr
 800de60:	2a2f      	cmp	r2, #47	; 0x2f
 800de62:	d024      	beq.n	800deae <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x76>
 800de64:	d80d      	bhi.n	800de82 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x4a>
 800de66:	2a2d      	cmp	r2, #45	; 0x2d
 800de68:	d014      	beq.n	800de94 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x5c>
 800de6a:	d826      	bhi.n	800deba <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x82>
 800de6c:	2a2c      	cmp	r2, #44	; 0x2c
 800de6e:	d1f5      	bne.n	800de5c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800de70:	684b      	ldr	r3, [r1, #4]
 800de72:	781b      	ldrb	r3, [r3, #0]
 800de74:	2b01      	cmp	r3, #1
 800de76:	d018      	beq.n	800deaa <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x72>
 800de78:	d323      	bcc.n	800dec2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8a>
 800de7a:	2b02      	cmp	r3, #2
 800de7c:	d1ee      	bne.n	800de5c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800de7e:	6880      	ldr	r0, [r0, #8]
 800de80:	4770      	bx	lr
 800de82:	2a31      	cmp	r2, #49	; 0x31
 800de84:	d004      	beq.n	800de90 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x58>
 800de86:	d328      	bcc.n	800deda <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 800de88:	2a32      	cmp	r2, #50	; 0x32
 800de8a:	d026      	beq.n	800deda <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 800de8c:	2a33      	cmp	r2, #51	; 0x33
 800de8e:	d1e5      	bne.n	800de5c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800de90:	6f00      	ldr	r0, [r0, #112]	; 0x70
 800de92:	4770      	bx	lr
 800de94:	684b      	ldr	r3, [r1, #4]
 800de96:	781b      	ldrb	r3, [r3, #0]
 800de98:	2b01      	cmp	r3, #1
 800de9a:	d004      	beq.n	800dea6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6e>
 800de9c:	d30b      	bcc.n	800deb6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 800de9e:	2b02      	cmp	r3, #2
 800dea0:	d1dc      	bne.n	800de5c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800dea2:	6900      	ldr	r0, [r0, #16]
 800dea4:	4770      	bx	lr
 800dea6:	6a00      	ldr	r0, [r0, #32]
 800dea8:	4770      	bx	lr
 800deaa:	6980      	ldr	r0, [r0, #24]
 800deac:	4770      	bx	lr
 800deae:	684b      	ldr	r3, [r1, #4]
 800deb0:	781b      	ldrb	r3, [r3, #0]
 800deb2:	2b00      	cmp	r3, #0
 800deb4:	d1d2      	bne.n	800de5c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800deb6:	6b00      	ldr	r0, [r0, #48]	; 0x30
 800deb8:	4770      	bx	lr
 800deba:	684b      	ldr	r3, [r1, #4]
 800debc:	781b      	ldrb	r3, [r3, #0]
 800debe:	2b00      	cmp	r3, #0
 800dec0:	d1cc      	bne.n	800de5c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800dec2:	6a80      	ldr	r0, [r0, #40]	; 0x28
 800dec4:	4770      	bx	lr
 800dec6:	6c80      	ldr	r0, [r0, #72]	; 0x48
 800dec8:	4770      	bx	lr
 800deca:	6d00      	ldr	r0, [r0, #80]	; 0x50
 800decc:	4770      	bx	lr
 800dece:	6c00      	ldr	r0, [r0, #64]	; 0x40
 800ded0:	4770      	bx	lr
 800ded2:	6d80      	ldr	r0, [r0, #88]	; 0x58
 800ded4:	4770      	bx	lr
 800ded6:	6e00      	ldr	r0, [r0, #96]	; 0x60
 800ded8:	4770      	bx	lr
 800deda:	6e80      	ldr	r0, [r0, #104]	; 0x68
 800dedc:	4770      	bx	lr
 800dede:	2a0b      	cmp	r2, #11
 800dee0:	d049      	beq.n	800df76 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 800dee2:	d80e      	bhi.n	800df02 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xca>
 800dee4:	2a03      	cmp	r2, #3
 800dee6:	d040      	beq.n	800df6a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x132>
 800dee8:	d804      	bhi.n	800def4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xbc>
 800deea:	2a01      	cmp	r2, #1
 800deec:	d03f      	beq.n	800df6e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x136>
 800deee:	d940      	bls.n	800df72 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13a>
 800def0:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
 800def2:	4770      	bx	lr
 800def4:	2a09      	cmp	r2, #9
 800def6:	d03e      	beq.n	800df76 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 800def8:	d801      	bhi.n	800defe <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xc6>
 800defa:	2a08      	cmp	r2, #8
 800defc:	d1ae      	bne.n	800de5c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800defe:	6dc0      	ldr	r0, [r0, #92]	; 0x5c
 800df00:	4770      	bx	lr
 800df02:	2a2f      	cmp	r2, #47	; 0x2f
 800df04:	d024      	beq.n	800df50 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x118>
 800df06:	d80d      	bhi.n	800df24 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xec>
 800df08:	2a2d      	cmp	r2, #45	; 0x2d
 800df0a:	d014      	beq.n	800df36 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfe>
 800df0c:	d826      	bhi.n	800df5c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x124>
 800df0e:	2a2c      	cmp	r2, #44	; 0x2c
 800df10:	d1a4      	bne.n	800de5c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800df12:	684b      	ldr	r3, [r1, #4]
 800df14:	781b      	ldrb	r3, [r3, #0]
 800df16:	2b01      	cmp	r3, #1
 800df18:	d018      	beq.n	800df4c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x114>
 800df1a:	d324      	bcc.n	800df66 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x12e>
 800df1c:	2b02      	cmp	r3, #2
 800df1e:	d19d      	bne.n	800de5c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800df20:	68c0      	ldr	r0, [r0, #12]
 800df22:	4770      	bx	lr
 800df24:	2a31      	cmp	r2, #49	; 0x31
 800df26:	d004      	beq.n	800df32 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfa>
 800df28:	d327      	bcc.n	800df7a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 800df2a:	2a32      	cmp	r2, #50	; 0x32
 800df2c:	d025      	beq.n	800df7a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 800df2e:	2a33      	cmp	r2, #51	; 0x33
 800df30:	d194      	bne.n	800de5c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800df32:	6f40      	ldr	r0, [r0, #116]	; 0x74
 800df34:	4770      	bx	lr
 800df36:	684b      	ldr	r3, [r1, #4]
 800df38:	781b      	ldrb	r3, [r3, #0]
 800df3a:	2b01      	cmp	r3, #1
 800df3c:	d004      	beq.n	800df48 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x110>
 800df3e:	d30b      	bcc.n	800df58 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x120>
 800df40:	2b02      	cmp	r3, #2
 800df42:	d18b      	bne.n	800de5c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800df44:	6940      	ldr	r0, [r0, #20]
 800df46:	4770      	bx	lr
 800df48:	6a40      	ldr	r0, [r0, #36]	; 0x24
 800df4a:	4770      	bx	lr
 800df4c:	69c0      	ldr	r0, [r0, #28]
 800df4e:	4770      	bx	lr
 800df50:	684b      	ldr	r3, [r1, #4]
 800df52:	781b      	ldrb	r3, [r3, #0]
 800df54:	2b00      	cmp	r3, #0
 800df56:	d181      	bne.n	800de5c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800df58:	6b40      	ldr	r0, [r0, #52]	; 0x34
 800df5a:	4770      	bx	lr
 800df5c:	684b      	ldr	r3, [r1, #4]
 800df5e:	781b      	ldrb	r3, [r3, #0]
 800df60:	2b00      	cmp	r3, #0
 800df62:	f47f af7b 	bne.w	800de5c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800df66:	6ac0      	ldr	r0, [r0, #44]	; 0x2c
 800df68:	4770      	bx	lr
 800df6a:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 800df6c:	4770      	bx	lr
 800df6e:	6d40      	ldr	r0, [r0, #84]	; 0x54
 800df70:	4770      	bx	lr
 800df72:	6c40      	ldr	r0, [r0, #68]	; 0x44
 800df74:	4770      	bx	lr
 800df76:	6e40      	ldr	r0, [r0, #100]	; 0x64
 800df78:	4770      	bx	lr
 800df7a:	6ec0      	ldr	r0, [r0, #108]	; 0x6c
 800df7c:	4770      	bx	lr

0800df7e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 800df7e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800df82:	b087      	sub	sp, #28
 800df84:	9e15      	ldr	r6, [sp, #84]	; 0x54
 800df86:	9205      	str	r2, [sp, #20]
 800df88:	f9bd 2064 	ldrsh.w	r2, [sp, #100]	; 0x64
 800df8c:	9202      	str	r2, [sp, #8]
 800df8e:	e9dd 2516 	ldrd	r2, r5, [sp, #88]	; 0x58
 800df92:	9101      	str	r1, [sp, #4]
 800df94:	6871      	ldr	r1, [r6, #4]
 800df96:	981a      	ldr	r0, [sp, #104]	; 0x68
 800df98:	f89d 406c 	ldrb.w	r4, [sp, #108]	; 0x6c
 800df9c:	f9bd 8060 	ldrsh.w	r8, [sp, #96]	; 0x60
 800dfa0:	fb01 2505 	mla	r5, r1, r5, r2
 800dfa4:	6832      	ldr	r2, [r6, #0]
 800dfa6:	eb02 0545 	add.w	r5, r2, r5, lsl #1
 800dfaa:	6802      	ldr	r2, [r0, #0]
 800dfac:	9203      	str	r2, [sp, #12]
 800dfae:	6842      	ldr	r2, [r0, #4]
 800dfb0:	fa1f fe84 	uxth.w	lr, r4
 800dfb4:	3204      	adds	r2, #4
 800dfb6:	43e4      	mvns	r4, r4
 800dfb8:	9204      	str	r2, [sp, #16]
 800dfba:	b2e4      	uxtb	r4, r4
 800dfbc:	9a01      	ldr	r2, [sp, #4]
 800dfbe:	2a00      	cmp	r2, #0
 800dfc0:	dc03      	bgt.n	800dfca <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4c>
 800dfc2:	9a05      	ldr	r2, [sp, #20]
 800dfc4:	2a00      	cmp	r2, #0
 800dfc6:	f340 8119 	ble.w	800e1fc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x27e>
 800dfca:	9a11      	ldr	r2, [sp, #68]	; 0x44
 800dfcc:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 800dfd0:	9a12      	ldr	r2, [sp, #72]	; 0x48
 800dfd2:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 800dfd6:	2b00      	cmp	r3, #0
 800dfd8:	dd0f      	ble.n	800dffa <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7c>
 800dfda:	1408      	asrs	r0, r1, #16
 800dfdc:	d406      	bmi.n	800dfec <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6e>
 800dfde:	4540      	cmp	r0, r8
 800dfe0:	da04      	bge.n	800dfec <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6e>
 800dfe2:	1410      	asrs	r0, r2, #16
 800dfe4:	d402      	bmi.n	800dfec <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6e>
 800dfe6:	9e02      	ldr	r6, [sp, #8]
 800dfe8:	42b0      	cmp	r0, r6
 800dfea:	db07      	blt.n	800dffc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7e>
 800dfec:	9813      	ldr	r0, [sp, #76]	; 0x4c
 800dfee:	4401      	add	r1, r0
 800dff0:	9814      	ldr	r0, [sp, #80]	; 0x50
 800dff2:	3b01      	subs	r3, #1
 800dff4:	4402      	add	r2, r0
 800dff6:	3502      	adds	r5, #2
 800dff8:	e7ed      	b.n	800dfd6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x58>
 800dffa:	d00f      	beq.n	800e01c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9e>
 800dffc:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 800dffe:	1e58      	subs	r0, r3, #1
 800e000:	fb06 1600 	mla	r6, r6, r0, r1
 800e004:	1436      	asrs	r6, r6, #16
 800e006:	d547      	bpl.n	800e098 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x11a>
 800e008:	469b      	mov	fp, r3
 800e00a:	46aa      	mov	sl, r5
 800e00c:	f1bb 0f00 	cmp.w	fp, #0
 800e010:	f300 809e 	bgt.w	800e150 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d2>
 800e014:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 800e018:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 800e01c:	9b01      	ldr	r3, [sp, #4]
 800e01e:	2b00      	cmp	r3, #0
 800e020:	f340 80ec 	ble.w	800e1fc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x27e>
 800e024:	ee30 0a04 	vadd.f32	s0, s0, s8
 800e028:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 800e02c:	eec7 7a00 	vdiv.f32	s15, s14, s0
 800e030:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800e032:	ee70 0aa4 	vadd.f32	s1, s1, s9
 800e036:	ee31 1a05 	vadd.f32	s2, s2, s10
 800e03a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 800e03e:	eef0 6a62 	vmov.f32	s13, s5
 800e042:	ee61 7a27 	vmul.f32	s15, s2, s15
 800e046:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 800e04a:	ee77 2a62 	vsub.f32	s5, s14, s5
 800e04e:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
 800e052:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 800e056:	eef0 6a43 	vmov.f32	s13, s6
 800e05a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 800e05e:	ee12 2a90 	vmov	r2, s5
 800e062:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 800e066:	fb92 f3f3 	sdiv	r3, r2, r3
 800e06a:	ee13 2a10 	vmov	r2, s6
 800e06e:	9313      	str	r3, [sp, #76]	; 0x4c
 800e070:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800e072:	fb92 f3f3 	sdiv	r3, r2, r3
 800e076:	9314      	str	r3, [sp, #80]	; 0x50
 800e078:	9b01      	ldr	r3, [sp, #4]
 800e07a:	9a05      	ldr	r2, [sp, #20]
 800e07c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 800e080:	3b01      	subs	r3, #1
 800e082:	9301      	str	r3, [sp, #4]
 800e084:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
 800e088:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800e08a:	eeb0 3a67 	vmov.f32	s6, s15
 800e08e:	bf08      	it	eq
 800e090:	4613      	moveq	r3, r2
 800e092:	eef0 2a47 	vmov.f32	s5, s14
 800e096:	e791      	b.n	800dfbc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3e>
 800e098:	4546      	cmp	r6, r8
 800e09a:	dab5      	bge.n	800e008 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x8a>
 800e09c:	9e14      	ldr	r6, [sp, #80]	; 0x50
 800e09e:	fb06 2000 	mla	r0, r6, r0, r2
 800e0a2:	1400      	asrs	r0, r0, #16
 800e0a4:	d4b0      	bmi.n	800e008 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x8a>
 800e0a6:	9e02      	ldr	r6, [sp, #8]
 800e0a8:	42b0      	cmp	r0, r6
 800e0aa:	daad      	bge.n	800e008 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x8a>
 800e0ac:	469a      	mov	sl, r3
 800e0ae:	46ab      	mov	fp, r5
 800e0b0:	f1ba 0f00 	cmp.w	sl, #0
 800e0b4:	ddae      	ble.n	800e014 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x96>
 800e0b6:	9f03      	ldr	r7, [sp, #12]
 800e0b8:	1410      	asrs	r0, r2, #16
 800e0ba:	140e      	asrs	r6, r1, #16
 800e0bc:	fb08 7000 	mla	r0, r8, r0, r7
 800e0c0:	f10a 3aff 	add.w	sl, sl, #4294967295
 800e0c4:	5d80      	ldrb	r0, [r0, r6]
 800e0c6:	9e04      	ldr	r6, [sp, #16]
 800e0c8:	f836 0010 	ldrh.w	r0, [r6, r0, lsl #1]
 800e0cc:	f8bb 6000 	ldrh.w	r6, [fp]
 800e0d0:	1237      	asrs	r7, r6, #8
 800e0d2:	ea4f 2c20 	mov.w	ip, r0, asr #8
 800e0d6:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 800e0da:	fb17 f704 	smulbb	r7, r7, r4
 800e0de:	ea4f 09e6 	mov.w	r9, r6, asr #3
 800e0e2:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 800e0e6:	00f6      	lsls	r6, r6, #3
 800e0e8:	fb0c 7c0e 	mla	ip, ip, lr, r7
 800e0ec:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 800e0f0:	10c7      	asrs	r7, r0, #3
 800e0f2:	b2f6      	uxtb	r6, r6
 800e0f4:	00c0      	lsls	r0, r0, #3
 800e0f6:	fb19 f904 	smulbb	r9, r9, r4
 800e0fa:	fb16 f604 	smulbb	r6, r6, r4
 800e0fe:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 800e102:	b2c0      	uxtb	r0, r0
 800e104:	fa1f fc8c 	uxth.w	ip, ip
 800e108:	fb07 970e 	mla	r7, r7, lr, r9
 800e10c:	fb00 600e 	mla	r0, r0, lr, r6
 800e110:	b280      	uxth	r0, r0
 800e112:	b2bf      	uxth	r7, r7
 800e114:	f10c 0601 	add.w	r6, ip, #1
 800e118:	eb06 2c1c 	add.w	ip, r6, ip, lsr #8
 800e11c:	f107 0901 	add.w	r9, r7, #1
 800e120:	1c46      	adds	r6, r0, #1
 800e122:	eb06 2610 	add.w	r6, r6, r0, lsr #8
 800e126:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 800e12a:	9813      	ldr	r0, [sp, #76]	; 0x4c
 800e12c:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 800e130:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 800e134:	ea4f 1959 	mov.w	r9, r9, lsr #5
 800e138:	ea4c 0c06 	orr.w	ip, ip, r6
 800e13c:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 800e140:	4401      	add	r1, r0
 800e142:	9814      	ldr	r0, [sp, #80]	; 0x50
 800e144:	ea4c 0c09 	orr.w	ip, ip, r9
 800e148:	f82b cb02 	strh.w	ip, [fp], #2
 800e14c:	4402      	add	r2, r0
 800e14e:	e7af      	b.n	800e0b0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x132>
 800e150:	140e      	asrs	r6, r1, #16
 800e152:	d44a      	bmi.n	800e1ea <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x26c>
 800e154:	4546      	cmp	r6, r8
 800e156:	da48      	bge.n	800e1ea <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x26c>
 800e158:	1410      	asrs	r0, r2, #16
 800e15a:	d446      	bmi.n	800e1ea <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x26c>
 800e15c:	9f02      	ldr	r7, [sp, #8]
 800e15e:	42b8      	cmp	r0, r7
 800e160:	da43      	bge.n	800e1ea <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x26c>
 800e162:	9f03      	ldr	r7, [sp, #12]
 800e164:	fb08 7000 	mla	r0, r8, r0, r7
 800e168:	5d80      	ldrb	r0, [r0, r6]
 800e16a:	9e04      	ldr	r6, [sp, #16]
 800e16c:	f836 0010 	ldrh.w	r0, [r6, r0, lsl #1]
 800e170:	f8ba 6000 	ldrh.w	r6, [sl]
 800e174:	1237      	asrs	r7, r6, #8
 800e176:	ea4f 2c20 	mov.w	ip, r0, asr #8
 800e17a:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 800e17e:	fb17 f704 	smulbb	r7, r7, r4
 800e182:	ea4f 09e6 	mov.w	r9, r6, asr #3
 800e186:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 800e18a:	00f6      	lsls	r6, r6, #3
 800e18c:	fb0c 7c0e 	mla	ip, ip, lr, r7
 800e190:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 800e194:	10c7      	asrs	r7, r0, #3
 800e196:	b2f6      	uxtb	r6, r6
 800e198:	00c0      	lsls	r0, r0, #3
 800e19a:	fb19 f904 	smulbb	r9, r9, r4
 800e19e:	fb16 f604 	smulbb	r6, r6, r4
 800e1a2:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 800e1a6:	b2c0      	uxtb	r0, r0
 800e1a8:	fa1f fc8c 	uxth.w	ip, ip
 800e1ac:	fb07 970e 	mla	r7, r7, lr, r9
 800e1b0:	fb00 600e 	mla	r0, r0, lr, r6
 800e1b4:	b2bf      	uxth	r7, r7
 800e1b6:	b280      	uxth	r0, r0
 800e1b8:	f10c 0601 	add.w	r6, ip, #1
 800e1bc:	eb06 2c1c 	add.w	ip, r6, ip, lsr #8
 800e1c0:	f107 0901 	add.w	r9, r7, #1
 800e1c4:	1c46      	adds	r6, r0, #1
 800e1c6:	eb06 2610 	add.w	r6, r6, r0, lsr #8
 800e1ca:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 800e1ce:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 800e1d2:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 800e1d6:	ea4f 1959 	mov.w	r9, r9, lsr #5
 800e1da:	ea4c 0c06 	orr.w	ip, ip, r6
 800e1de:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 800e1e2:	ea4c 0c09 	orr.w	ip, ip, r9
 800e1e6:	f8aa c000 	strh.w	ip, [sl]
 800e1ea:	9813      	ldr	r0, [sp, #76]	; 0x4c
 800e1ec:	4401      	add	r1, r0
 800e1ee:	9814      	ldr	r0, [sp, #80]	; 0x50
 800e1f0:	f10a 0a02 	add.w	sl, sl, #2
 800e1f4:	4402      	add	r2, r0
 800e1f6:	f10b 3bff 	add.w	fp, fp, #4294967295
 800e1fa:	e707      	b.n	800e00c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x8e>
 800e1fc:	b007      	add	sp, #28
 800e1fe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800e202 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 800e202:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e206:	b085      	sub	sp, #20
 800e208:	e9dd 7611 	ldrd	r7, r6, [sp, #68]	; 0x44
 800e20c:	9813      	ldr	r0, [sp, #76]	; 0x4c
 800e20e:	9203      	str	r2, [sp, #12]
 800e210:	6842      	ldr	r2, [r0, #4]
 800e212:	9d15      	ldr	r5, [sp, #84]	; 0x54
 800e214:	9c18      	ldr	r4, [sp, #96]	; 0x60
 800e216:	6800      	ldr	r0, [r0, #0]
 800e218:	f9bd c058 	ldrsh.w	ip, [sp, #88]	; 0x58
 800e21c:	f9bd 805c 	ldrsh.w	r8, [sp, #92]	; 0x5c
 800e220:	4696      	mov	lr, r2
 800e222:	9a14      	ldr	r2, [sp, #80]	; 0x50
 800e224:	fb0e 2505 	mla	r5, lr, r5, r2
 800e228:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 800e22c:	6860      	ldr	r0, [r4, #4]
 800e22e:	6822      	ldr	r2, [r4, #0]
 800e230:	9201      	str	r2, [sp, #4]
 800e232:	1d02      	adds	r2, r0, #4
 800e234:	9202      	str	r2, [sp, #8]
 800e236:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 800e23a:	2900      	cmp	r1, #0
 800e23c:	dc03      	bgt.n	800e246 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x44>
 800e23e:	9a03      	ldr	r2, [sp, #12]
 800e240:	2a00      	cmp	r2, #0
 800e242:	f340 809b 	ble.w	800e37c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x17a>
 800e246:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 800e248:	f502 4400 	add.w	r4, r2, #32768	; 0x8000
 800e24c:	9a10      	ldr	r2, [sp, #64]	; 0x40
 800e24e:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 800e252:	2b00      	cmp	r3, #0
 800e254:	dd0e      	ble.n	800e274 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x72>
 800e256:	ea5f 4e24 	movs.w	lr, r4, asr #16
 800e25a:	d406      	bmi.n	800e26a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x68>
 800e25c:	45e6      	cmp	lr, ip
 800e25e:	da04      	bge.n	800e26a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x68>
 800e260:	ea5f 4e20 	movs.w	lr, r0, asr #16
 800e264:	d401      	bmi.n	800e26a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x68>
 800e266:	45c6      	cmp	lr, r8
 800e268:	db05      	blt.n	800e276 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x74>
 800e26a:	443c      	add	r4, r7
 800e26c:	4430      	add	r0, r6
 800e26e:	3b01      	subs	r3, #1
 800e270:	3502      	adds	r5, #2
 800e272:	e7ee      	b.n	800e252 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x50>
 800e274:	d010      	beq.n	800e298 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x96>
 800e276:	f103 3eff 	add.w	lr, r3, #4294967295
 800e27a:	fb07 490e 	mla	r9, r7, lr, r4
 800e27e:	ea5f 4929 	movs.w	r9, r9, asr #16
 800e282:	d53d      	bpl.n	800e300 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfe>
 800e284:	469e      	mov	lr, r3
 800e286:	eb05 0b43 	add.w	fp, r5, r3, lsl #1
 800e28a:	f1be 0f00 	cmp.w	lr, #0
 800e28e:	dc58      	bgt.n	800e342 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x140>
 800e290:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 800e294:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 800e298:	2900      	cmp	r1, #0
 800e29a:	dd6f      	ble.n	800e37c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x17a>
 800e29c:	ee30 0a04 	vadd.f32	s0, s0, s8
 800e2a0:	ee70 0aa4 	vadd.f32	s1, s1, s9
 800e2a4:	eec6 7a80 	vdiv.f32	s15, s13, s0
 800e2a8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800e2aa:	3901      	subs	r1, #1
 800e2ac:	ee31 1a05 	vadd.f32	s2, s2, s10
 800e2b0:	ee20 7aa7 	vmul.f32	s14, s1, s15
 800e2b4:	eeb0 6a62 	vmov.f32	s12, s5
 800e2b8:	ee61 7a27 	vmul.f32	s15, s2, s15
 800e2bc:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 800e2c0:	ee77 2a62 	vsub.f32	s5, s14, s5
 800e2c4:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 800e2c8:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 800e2cc:	eeb0 6a43 	vmov.f32	s12, s6
 800e2d0:	ee37 3ac3 	vsub.f32	s6, s15, s6
 800e2d4:	ee12 2a90 	vmov	r2, s5
 800e2d8:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 800e2dc:	fb92 f7f3 	sdiv	r7, r2, r3
 800e2e0:	ee13 2a10 	vmov	r2, s6
 800e2e4:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 800e2e8:	fb92 f6f3 	sdiv	r6, r2, r3
 800e2ec:	9a03      	ldr	r2, [sp, #12]
 800e2ee:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 800e2f2:	bf08      	it	eq
 800e2f4:	4613      	moveq	r3, r2
 800e2f6:	eeb0 3a67 	vmov.f32	s6, s15
 800e2fa:	eef0 2a47 	vmov.f32	s5, s14
 800e2fe:	e79c      	b.n	800e23a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x38>
 800e300:	45e1      	cmp	r9, ip
 800e302:	dabf      	bge.n	800e284 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x82>
 800e304:	fb06 0e0e 	mla	lr, r6, lr, r0
 800e308:	ea5f 4e2e 	movs.w	lr, lr, asr #16
 800e30c:	d4ba      	bmi.n	800e284 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x82>
 800e30e:	45c6      	cmp	lr, r8
 800e310:	dab8      	bge.n	800e284 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x82>
 800e312:	469e      	mov	lr, r3
 800e314:	46aa      	mov	sl, r5
 800e316:	f1be 0f00 	cmp.w	lr, #0
 800e31a:	ddb9      	ble.n	800e290 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x8e>
 800e31c:	9a01      	ldr	r2, [sp, #4]
 800e31e:	ea4f 4920 	mov.w	r9, r0, asr #16
 800e322:	ea4f 4b24 	mov.w	fp, r4, asr #16
 800e326:	fb0c 2909 	mla	r9, ip, r9, r2
 800e32a:	9a02      	ldr	r2, [sp, #8]
 800e32c:	f819 900b 	ldrb.w	r9, [r9, fp]
 800e330:	f832 9019 	ldrh.w	r9, [r2, r9, lsl #1]
 800e334:	f82a 9b02 	strh.w	r9, [sl], #2
 800e338:	443c      	add	r4, r7
 800e33a:	4430      	add	r0, r6
 800e33c:	f10e 3eff 	add.w	lr, lr, #4294967295
 800e340:	e7e9      	b.n	800e316 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x114>
 800e342:	ea5f 4a24 	movs.w	sl, r4, asr #16
 800e346:	d414      	bmi.n	800e372 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x170>
 800e348:	45e2      	cmp	sl, ip
 800e34a:	da12      	bge.n	800e372 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x170>
 800e34c:	ea5f 4920 	movs.w	r9, r0, asr #16
 800e350:	d40f      	bmi.n	800e372 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x170>
 800e352:	45c1      	cmp	r9, r8
 800e354:	da0d      	bge.n	800e372 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x170>
 800e356:	9a01      	ldr	r2, [sp, #4]
 800e358:	fb0c 2909 	mla	r9, ip, r9, r2
 800e35c:	9a02      	ldr	r2, [sp, #8]
 800e35e:	f819 900a 	ldrb.w	r9, [r9, sl]
 800e362:	f832 a019 	ldrh.w	sl, [r2, r9, lsl #1]
 800e366:	f06f 0201 	mvn.w	r2, #1
 800e36a:	fb02 f90e 	mul.w	r9, r2, lr
 800e36e:	f82b a009 	strh.w	sl, [fp, r9]
 800e372:	443c      	add	r4, r7
 800e374:	4430      	add	r0, r6
 800e376:	f10e 3eff 	add.w	lr, lr, #4294967295
 800e37a:	e786      	b.n	800e28a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x88>
 800e37c:	b005      	add	sp, #20
 800e37e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800e382 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 800e382:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e386:	b087      	sub	sp, #28
 800e388:	9e15      	ldr	r6, [sp, #84]	; 0x54
 800e38a:	9205      	str	r2, [sp, #20]
 800e38c:	f9bd 2064 	ldrsh.w	r2, [sp, #100]	; 0x64
 800e390:	9202      	str	r2, [sp, #8]
 800e392:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 800e396:	9101      	str	r1, [sp, #4]
 800e398:	6871      	ldr	r1, [r6, #4]
 800e39a:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 800e39c:	f89d 006c 	ldrb.w	r0, [sp, #108]	; 0x6c
 800e3a0:	f9bd e060 	ldrsh.w	lr, [sp, #96]	; 0x60
 800e3a4:	fb01 2404 	mla	r4, r1, r4, r2
 800e3a8:	6832      	ldr	r2, [r6, #0]
 800e3aa:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 800e3ae:	682a      	ldr	r2, [r5, #0]
 800e3b0:	9203      	str	r2, [sp, #12]
 800e3b2:	686a      	ldr	r2, [r5, #4]
 800e3b4:	fa1f fc80 	uxth.w	ip, r0
 800e3b8:	3204      	adds	r2, #4
 800e3ba:	43c0      	mvns	r0, r0
 800e3bc:	9200      	str	r2, [sp, #0]
 800e3be:	b2c0      	uxtb	r0, r0
 800e3c0:	9a01      	ldr	r2, [sp, #4]
 800e3c2:	2a00      	cmp	r2, #0
 800e3c4:	dc03      	bgt.n	800e3ce <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4c>
 800e3c6:	9a05      	ldr	r2, [sp, #20]
 800e3c8:	2a00      	cmp	r2, #0
 800e3ca:	f340 811b 	ble.w	800e604 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x282>
 800e3ce:	9a11      	ldr	r2, [sp, #68]	; 0x44
 800e3d0:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 800e3d4:	9a12      	ldr	r2, [sp, #72]	; 0x48
 800e3d6:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 800e3da:	2b00      	cmp	r3, #0
 800e3dc:	dd0f      	ble.n	800e3fe <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7c>
 800e3de:	140d      	asrs	r5, r1, #16
 800e3e0:	d406      	bmi.n	800e3f0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6e>
 800e3e2:	4575      	cmp	r5, lr
 800e3e4:	da04      	bge.n	800e3f0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6e>
 800e3e6:	1415      	asrs	r5, r2, #16
 800e3e8:	d402      	bmi.n	800e3f0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6e>
 800e3ea:	9e02      	ldr	r6, [sp, #8]
 800e3ec:	42b5      	cmp	r5, r6
 800e3ee:	db07      	blt.n	800e400 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7e>
 800e3f0:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 800e3f2:	4429      	add	r1, r5
 800e3f4:	9d14      	ldr	r5, [sp, #80]	; 0x50
 800e3f6:	3b01      	subs	r3, #1
 800e3f8:	442a      	add	r2, r5
 800e3fa:	3402      	adds	r4, #2
 800e3fc:	e7ed      	b.n	800e3da <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x58>
 800e3fe:	d00f      	beq.n	800e420 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9e>
 800e400:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 800e402:	1e5d      	subs	r5, r3, #1
 800e404:	fb06 1605 	mla	r6, r6, r5, r1
 800e408:	1436      	asrs	r6, r6, #16
 800e40a:	d547      	bpl.n	800e49c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x11a>
 800e40c:	469a      	mov	sl, r3
 800e40e:	46a1      	mov	r9, r4
 800e410:	f1ba 0f00 	cmp.w	sl, #0
 800e414:	f300 809f 	bgt.w	800e556 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d4>
 800e418:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 800e41c:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 800e420:	9b01      	ldr	r3, [sp, #4]
 800e422:	2b00      	cmp	r3, #0
 800e424:	f340 80ee 	ble.w	800e604 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x282>
 800e428:	ee30 0a04 	vadd.f32	s0, s0, s8
 800e42c:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 800e430:	eec7 7a00 	vdiv.f32	s15, s14, s0
 800e434:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800e436:	ee70 0aa4 	vadd.f32	s1, s1, s9
 800e43a:	ee31 1a05 	vadd.f32	s2, s2, s10
 800e43e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 800e442:	eef0 6a62 	vmov.f32	s13, s5
 800e446:	ee61 7a27 	vmul.f32	s15, s2, s15
 800e44a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 800e44e:	ee77 2a62 	vsub.f32	s5, s14, s5
 800e452:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
 800e456:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 800e45a:	eef0 6a43 	vmov.f32	s13, s6
 800e45e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 800e462:	ee12 2a90 	vmov	r2, s5
 800e466:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 800e46a:	fb92 f3f3 	sdiv	r3, r2, r3
 800e46e:	ee13 2a10 	vmov	r2, s6
 800e472:	9313      	str	r3, [sp, #76]	; 0x4c
 800e474:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800e476:	fb92 f3f3 	sdiv	r3, r2, r3
 800e47a:	9314      	str	r3, [sp, #80]	; 0x50
 800e47c:	9b01      	ldr	r3, [sp, #4]
 800e47e:	9a05      	ldr	r2, [sp, #20]
 800e480:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 800e484:	3b01      	subs	r3, #1
 800e486:	9301      	str	r3, [sp, #4]
 800e488:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
 800e48c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800e48e:	eeb0 3a67 	vmov.f32	s6, s15
 800e492:	bf08      	it	eq
 800e494:	4613      	moveq	r3, r2
 800e496:	eef0 2a47 	vmov.f32	s5, s14
 800e49a:	e791      	b.n	800e3c0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3e>
 800e49c:	4576      	cmp	r6, lr
 800e49e:	dab5      	bge.n	800e40c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x8a>
 800e4a0:	9e14      	ldr	r6, [sp, #80]	; 0x50
 800e4a2:	fb06 2505 	mla	r5, r6, r5, r2
 800e4a6:	142d      	asrs	r5, r5, #16
 800e4a8:	d4b0      	bmi.n	800e40c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x8a>
 800e4aa:	9e02      	ldr	r6, [sp, #8]
 800e4ac:	42b5      	cmp	r5, r6
 800e4ae:	daad      	bge.n	800e40c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x8a>
 800e4b0:	4699      	mov	r9, r3
 800e4b2:	46a2      	mov	sl, r4
 800e4b4:	f1b9 0f00 	cmp.w	r9, #0
 800e4b8:	ddae      	ble.n	800e418 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x96>
 800e4ba:	9f03      	ldr	r7, [sp, #12]
 800e4bc:	1415      	asrs	r5, r2, #16
 800e4be:	140e      	asrs	r6, r1, #16
 800e4c0:	fb0e 7505 	mla	r5, lr, r5, r7
 800e4c4:	f109 39ff 	add.w	r9, r9, #4294967295
 800e4c8:	f815 8006 	ldrb.w	r8, [r5, r6]
 800e4cc:	9d00      	ldr	r5, [sp, #0]
 800e4ce:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 800e4d2:	eb05 0b08 	add.w	fp, r5, r8
 800e4d6:	f8ba 5000 	ldrh.w	r5, [sl]
 800e4da:	f89b 6002 	ldrb.w	r6, [fp, #2]
 800e4de:	f89b b001 	ldrb.w	fp, [fp, #1]
 800e4e2:	122f      	asrs	r7, r5, #8
 800e4e4:	fb16 f60c 	smulbb	r6, r6, ip
 800e4e8:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 800e4ec:	fb07 6700 	mla	r7, r7, r0, r6
 800e4f0:	10ee      	asrs	r6, r5, #3
 800e4f2:	fb1b fb0c 	smulbb	fp, fp, ip
 800e4f6:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 800e4fa:	fb06 b600 	mla	r6, r6, r0, fp
 800e4fe:	b2b6      	uxth	r6, r6
 800e500:	9604      	str	r6, [sp, #16]
 800e502:	9e00      	ldr	r6, [sp, #0]
 800e504:	00ed      	lsls	r5, r5, #3
 800e506:	f816 8008 	ldrb.w	r8, [r6, r8]
 800e50a:	b2ed      	uxtb	r5, r5
 800e50c:	fb15 f500 	smulbb	r5, r5, r0
 800e510:	b2bf      	uxth	r7, r7
 800e512:	fb08 580c 	mla	r8, r8, ip, r5
 800e516:	fa1f f888 	uxth.w	r8, r8
 800e51a:	1c7d      	adds	r5, r7, #1
 800e51c:	eb05 2717 	add.w	r7, r5, r7, lsr #8
 800e520:	f108 0501 	add.w	r5, r8, #1
 800e524:	eb05 2518 	add.w	r5, r5, r8, lsr #8
 800e528:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 800e52c:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 800e530:	432f      	orrs	r7, r5
 800e532:	9d04      	ldr	r5, [sp, #16]
 800e534:	f105 0b01 	add.w	fp, r5, #1
 800e538:	eb0b 2b15 	add.w	fp, fp, r5, lsr #8
 800e53c:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 800e53e:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 800e542:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 800e546:	4429      	add	r1, r5
 800e548:	9d14      	ldr	r5, [sp, #80]	; 0x50
 800e54a:	ea47 070b 	orr.w	r7, r7, fp
 800e54e:	f82a 7b02 	strh.w	r7, [sl], #2
 800e552:	442a      	add	r2, r5
 800e554:	e7ae      	b.n	800e4b4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x132>
 800e556:	140e      	asrs	r6, r1, #16
 800e558:	d44b      	bmi.n	800e5f2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x270>
 800e55a:	4576      	cmp	r6, lr
 800e55c:	da49      	bge.n	800e5f2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x270>
 800e55e:	1415      	asrs	r5, r2, #16
 800e560:	d447      	bmi.n	800e5f2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x270>
 800e562:	9f02      	ldr	r7, [sp, #8]
 800e564:	42bd      	cmp	r5, r7
 800e566:	da44      	bge.n	800e5f2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x270>
 800e568:	9f03      	ldr	r7, [sp, #12]
 800e56a:	fb0e 7505 	mla	r5, lr, r5, r7
 800e56e:	f815 8006 	ldrb.w	r8, [r5, r6]
 800e572:	9d00      	ldr	r5, [sp, #0]
 800e574:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 800e578:	eb05 0b08 	add.w	fp, r5, r8
 800e57c:	f8b9 5000 	ldrh.w	r5, [r9]
 800e580:	f89b 6002 	ldrb.w	r6, [fp, #2]
 800e584:	f89b b001 	ldrb.w	fp, [fp, #1]
 800e588:	122f      	asrs	r7, r5, #8
 800e58a:	fb16 f60c 	smulbb	r6, r6, ip
 800e58e:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 800e592:	fb07 6700 	mla	r7, r7, r0, r6
 800e596:	10ee      	asrs	r6, r5, #3
 800e598:	fb1b fb0c 	smulbb	fp, fp, ip
 800e59c:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 800e5a0:	fb06 b600 	mla	r6, r6, r0, fp
 800e5a4:	b2b6      	uxth	r6, r6
 800e5a6:	9604      	str	r6, [sp, #16]
 800e5a8:	9e00      	ldr	r6, [sp, #0]
 800e5aa:	00ed      	lsls	r5, r5, #3
 800e5ac:	f816 8008 	ldrb.w	r8, [r6, r8]
 800e5b0:	b2ed      	uxtb	r5, r5
 800e5b2:	fb15 f500 	smulbb	r5, r5, r0
 800e5b6:	b2bf      	uxth	r7, r7
 800e5b8:	fb08 580c 	mla	r8, r8, ip, r5
 800e5bc:	fa1f f888 	uxth.w	r8, r8
 800e5c0:	1c7d      	adds	r5, r7, #1
 800e5c2:	eb05 2717 	add.w	r7, r5, r7, lsr #8
 800e5c6:	f108 0501 	add.w	r5, r8, #1
 800e5ca:	eb05 2518 	add.w	r5, r5, r8, lsr #8
 800e5ce:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 800e5d2:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 800e5d6:	432f      	orrs	r7, r5
 800e5d8:	9d04      	ldr	r5, [sp, #16]
 800e5da:	f105 0b01 	add.w	fp, r5, #1
 800e5de:	eb0b 2b15 	add.w	fp, fp, r5, lsr #8
 800e5e2:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 800e5e6:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 800e5ea:	ea47 070b 	orr.w	r7, r7, fp
 800e5ee:	f8a9 7000 	strh.w	r7, [r9]
 800e5f2:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 800e5f4:	4429      	add	r1, r5
 800e5f6:	9d14      	ldr	r5, [sp, #80]	; 0x50
 800e5f8:	f109 0902 	add.w	r9, r9, #2
 800e5fc:	442a      	add	r2, r5
 800e5fe:	f10a 3aff 	add.w	sl, sl, #4294967295
 800e602:	e705      	b.n	800e410 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x8e>
 800e604:	b007      	add	sp, #28
 800e606:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

0800e60c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 800e60c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e610:	b085      	sub	sp, #20
 800e612:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 800e616:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 800e618:	9203      	str	r2, [sp, #12]
 800e61a:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 800e61e:	6870      	ldr	r0, [r6, #4]
 800e620:	9d18      	ldr	r5, [sp, #96]	; 0x60
 800e622:	f9bd 7058 	ldrsh.w	r7, [sp, #88]	; 0x58
 800e626:	f9bd 805c 	ldrsh.w	r8, [sp, #92]	; 0x5c
 800e62a:	9101      	str	r1, [sp, #4]
 800e62c:	fb00 2404 	mla	r4, r0, r4, r2
 800e630:	6832      	ldr	r2, [r6, #0]
 800e632:	686e      	ldr	r6, [r5, #4]
 800e634:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 800e638:	682a      	ldr	r2, [r5, #0]
 800e63a:	9202      	str	r2, [sp, #8]
 800e63c:	3604      	adds	r6, #4
 800e63e:	9a01      	ldr	r2, [sp, #4]
 800e640:	2a00      	cmp	r2, #0
 800e642:	dc03      	bgt.n	800e64c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x40>
 800e644:	9a03      	ldr	r2, [sp, #12]
 800e646:	2a00      	cmp	r2, #0
 800e648:	f340 80c7 	ble.w	800e7da <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1ce>
 800e64c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 800e64e:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 800e652:	9a10      	ldr	r2, [sp, #64]	; 0x40
 800e654:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 800e658:	2b00      	cmp	r3, #0
 800e65a:	dd0e      	ble.n	800e67a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6e>
 800e65c:	1405      	asrs	r5, r0, #16
 800e65e:	d405      	bmi.n	800e66c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x60>
 800e660:	42bd      	cmp	r5, r7
 800e662:	da03      	bge.n	800e66c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x60>
 800e664:	1415      	asrs	r5, r2, #16
 800e666:	d401      	bmi.n	800e66c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x60>
 800e668:	4545      	cmp	r5, r8
 800e66a:	db07      	blt.n	800e67c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x70>
 800e66c:	9d11      	ldr	r5, [sp, #68]	; 0x44
 800e66e:	4428      	add	r0, r5
 800e670:	9d12      	ldr	r5, [sp, #72]	; 0x48
 800e672:	3b01      	subs	r3, #1
 800e674:	442a      	add	r2, r5
 800e676:	3402      	adds	r4, #2
 800e678:	e7ee      	b.n	800e658 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4c>
 800e67a:	d010      	beq.n	800e69e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x92>
 800e67c:	9911      	ldr	r1, [sp, #68]	; 0x44
 800e67e:	1e5d      	subs	r5, r3, #1
 800e680:	fb01 0c05 	mla	ip, r1, r5, r0
 800e684:	ea5f 4c2c 	movs.w	ip, ip, asr #16
 800e688:	d545      	bpl.n	800e716 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x10a>
 800e68a:	469e      	mov	lr, r3
 800e68c:	eb04 0b43 	add.w	fp, r4, r3, lsl #1
 800e690:	f1be 0f00 	cmp.w	lr, #0
 800e694:	dc72      	bgt.n	800e77c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x170>
 800e696:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 800e69a:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 800e69e:	9b01      	ldr	r3, [sp, #4]
 800e6a0:	2b00      	cmp	r3, #0
 800e6a2:	f340 809a 	ble.w	800e7da <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1ce>
 800e6a6:	ee30 0a04 	vadd.f32	s0, s0, s8
 800e6aa:	ee70 0aa4 	vadd.f32	s1, s1, s9
 800e6ae:	eec6 7a80 	vdiv.f32	s15, s13, s0
 800e6b2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800e6b4:	ee31 1a05 	vadd.f32	s2, s2, s10
 800e6b8:	ee20 7aa7 	vmul.f32	s14, s1, s15
 800e6bc:	eeb0 6a62 	vmov.f32	s12, s5
 800e6c0:	ee61 7a27 	vmul.f32	s15, s2, s15
 800e6c4:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 800e6c8:	ee77 2a62 	vsub.f32	s5, s14, s5
 800e6cc:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 800e6d0:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 800e6d4:	eeb0 6a43 	vmov.f32	s12, s6
 800e6d8:	ee37 3ac3 	vsub.f32	s6, s15, s6
 800e6dc:	ee12 2a90 	vmov	r2, s5
 800e6e0:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 800e6e4:	fb92 f3f3 	sdiv	r3, r2, r3
 800e6e8:	ee13 2a10 	vmov	r2, s6
 800e6ec:	9311      	str	r3, [sp, #68]	; 0x44
 800e6ee:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800e6f0:	fb92 f3f3 	sdiv	r3, r2, r3
 800e6f4:	9312      	str	r3, [sp, #72]	; 0x48
 800e6f6:	9b01      	ldr	r3, [sp, #4]
 800e6f8:	9a03      	ldr	r2, [sp, #12]
 800e6fa:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 800e6fe:	3b01      	subs	r3, #1
 800e700:	9301      	str	r3, [sp, #4]
 800e702:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 800e706:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800e708:	eeb0 3a67 	vmov.f32	s6, s15
 800e70c:	bf08      	it	eq
 800e70e:	4613      	moveq	r3, r2
 800e710:	eef0 2a47 	vmov.f32	s5, s14
 800e714:	e793      	b.n	800e63e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x32>
 800e716:	45bc      	cmp	ip, r7
 800e718:	dab7      	bge.n	800e68a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7e>
 800e71a:	9912      	ldr	r1, [sp, #72]	; 0x48
 800e71c:	fb01 2505 	mla	r5, r1, r5, r2
 800e720:	142d      	asrs	r5, r5, #16
 800e722:	d4b2      	bmi.n	800e68a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7e>
 800e724:	4545      	cmp	r5, r8
 800e726:	dab0      	bge.n	800e68a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7e>
 800e728:	469e      	mov	lr, r3
 800e72a:	46a2      	mov	sl, r4
 800e72c:	f1be 0f00 	cmp.w	lr, #0
 800e730:	ddb1      	ble.n	800e696 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x8a>
 800e732:	9902      	ldr	r1, [sp, #8]
 800e734:	1415      	asrs	r5, r2, #16
 800e736:	fb07 1505 	mla	r5, r7, r5, r1
 800e73a:	ea4f 4c20 	mov.w	ip, r0, asr #16
 800e73e:	4928      	ldr	r1, [pc, #160]	; (800e7e0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d4>)
 800e740:	f815 c00c 	ldrb.w	ip, [r5, ip]
 800e744:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 800e748:	eb06 0b0c 	add.w	fp, r6, ip
 800e74c:	f10e 3eff 	add.w	lr, lr, #4294967295
 800e750:	f89b 5001 	ldrb.w	r5, [fp, #1]
 800e754:	f89b 9002 	ldrb.w	r9, [fp, #2]
 800e758:	00ed      	lsls	r5, r5, #3
 800e75a:	ea01 2909 	and.w	r9, r1, r9, lsl #8
 800e75e:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 800e762:	9911      	ldr	r1, [sp, #68]	; 0x44
 800e764:	ea49 0505 	orr.w	r5, r9, r5
 800e768:	f816 900c 	ldrb.w	r9, [r6, ip]
 800e76c:	4408      	add	r0, r1
 800e76e:	9912      	ldr	r1, [sp, #72]	; 0x48
 800e770:	ea45 05d9 	orr.w	r5, r5, r9, lsr #3
 800e774:	f82a 5b02 	strh.w	r5, [sl], #2
 800e778:	440a      	add	r2, r1
 800e77a:	e7d7      	b.n	800e72c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x120>
 800e77c:	ea5f 4c20 	movs.w	ip, r0, asr #16
 800e780:	d424      	bmi.n	800e7cc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1c0>
 800e782:	45bc      	cmp	ip, r7
 800e784:	da22      	bge.n	800e7cc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1c0>
 800e786:	1415      	asrs	r5, r2, #16
 800e788:	d420      	bmi.n	800e7cc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1c0>
 800e78a:	4545      	cmp	r5, r8
 800e78c:	da1e      	bge.n	800e7cc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1c0>
 800e78e:	9902      	ldr	r1, [sp, #8]
 800e790:	fb07 1505 	mla	r5, r7, r5, r1
 800e794:	f06f 0101 	mvn.w	r1, #1
 800e798:	f815 c00c 	ldrb.w	ip, [r5, ip]
 800e79c:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 800e7a0:	eb06 050c 	add.w	r5, r6, ip
 800e7a4:	fb01 f90e 	mul.w	r9, r1, lr
 800e7a8:	f895 a002 	ldrb.w	sl, [r5, #2]
 800e7ac:	786d      	ldrb	r5, [r5, #1]
 800e7ae:	f2a1 71fe 	subw	r1, r1, #2046	; 0x7fe
 800e7b2:	00ed      	lsls	r5, r5, #3
 800e7b4:	ea01 2a0a 	and.w	sl, r1, sl, lsl #8
 800e7b8:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 800e7bc:	ea4a 0505 	orr.w	r5, sl, r5
 800e7c0:	f816 a00c 	ldrb.w	sl, [r6, ip]
 800e7c4:	ea45 05da 	orr.w	r5, r5, sl, lsr #3
 800e7c8:	f82b 5009 	strh.w	r5, [fp, r9]
 800e7cc:	9911      	ldr	r1, [sp, #68]	; 0x44
 800e7ce:	4408      	add	r0, r1
 800e7d0:	9912      	ldr	r1, [sp, #72]	; 0x48
 800e7d2:	f10e 3eff 	add.w	lr, lr, #4294967295
 800e7d6:	440a      	add	r2, r1
 800e7d8:	e75a      	b.n	800e690 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x84>
 800e7da:	b005      	add	sp, #20
 800e7dc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800e7e0:	fffff800 	.word	0xfffff800

0800e7e4 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 800e7e4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e7e8:	b087      	sub	sp, #28
 800e7ea:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 800e7ee:	9204      	str	r2, [sp, #16]
 800e7f0:	f9bd 2064 	ldrsh.w	r2, [sp, #100]	; 0x64
 800e7f4:	9d15      	ldr	r5, [sp, #84]	; 0x54
 800e7f6:	9201      	str	r2, [sp, #4]
 800e7f8:	f89d 206c 	ldrb.w	r2, [sp, #108]	; 0x6c
 800e7fc:	9205      	str	r2, [sp, #20]
 800e7fe:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 800e802:	9100      	str	r1, [sp, #0]
 800e804:	6869      	ldr	r1, [r5, #4]
 800e806:	981a      	ldr	r0, [sp, #104]	; 0x68
 800e808:	f9bd e060 	ldrsh.w	lr, [sp, #96]	; 0x60
 800e80c:	fb01 2404 	mla	r4, r1, r4, r2
 800e810:	682a      	ldr	r2, [r5, #0]
 800e812:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 800e816:	6802      	ldr	r2, [r0, #0]
 800e818:	9202      	str	r2, [sp, #8]
 800e81a:	6842      	ldr	r2, [r0, #4]
 800e81c:	3204      	adds	r2, #4
 800e81e:	9203      	str	r2, [sp, #12]
 800e820:	9a00      	ldr	r2, [sp, #0]
 800e822:	2a00      	cmp	r2, #0
 800e824:	dc03      	bgt.n	800e82e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4a>
 800e826:	9a04      	ldr	r2, [sp, #16]
 800e828:	2a00      	cmp	r2, #0
 800e82a:	f340 812c 	ble.w	800ea86 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2a2>
 800e82e:	9a11      	ldr	r2, [sp, #68]	; 0x44
 800e830:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 800e834:	9a12      	ldr	r2, [sp, #72]	; 0x48
 800e836:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 800e83a:	2b00      	cmp	r3, #0
 800e83c:	dd0f      	ble.n	800e85e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7a>
 800e83e:	1402      	asrs	r2, r0, #16
 800e840:	d406      	bmi.n	800e850 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6c>
 800e842:	4572      	cmp	r2, lr
 800e844:	da04      	bge.n	800e850 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6c>
 800e846:	140a      	asrs	r2, r1, #16
 800e848:	d402      	bmi.n	800e850 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6c>
 800e84a:	9d01      	ldr	r5, [sp, #4]
 800e84c:	42aa      	cmp	r2, r5
 800e84e:	db07      	blt.n	800e860 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7c>
 800e850:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 800e852:	4410      	add	r0, r2
 800e854:	9a14      	ldr	r2, [sp, #80]	; 0x50
 800e856:	3b01      	subs	r3, #1
 800e858:	4411      	add	r1, r2
 800e85a:	3402      	adds	r4, #2
 800e85c:	e7ed      	b.n	800e83a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x56>
 800e85e:	d00f      	beq.n	800e880 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9c>
 800e860:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 800e862:	1e5a      	subs	r2, r3, #1
 800e864:	fb05 0502 	mla	r5, r5, r2, r0
 800e868:	142d      	asrs	r5, r5, #16
 800e86a:	d545      	bpl.n	800e8f8 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x114>
 800e86c:	4699      	mov	r9, r3
 800e86e:	46a0      	mov	r8, r4
 800e870:	f1b9 0f00 	cmp.w	r9, #0
 800e874:	f300 80a7 	bgt.w	800e9c6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1e2>
 800e878:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 800e87c:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 800e880:	9b00      	ldr	r3, [sp, #0]
 800e882:	2b00      	cmp	r3, #0
 800e884:	f340 80ff 	ble.w	800ea86 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2a2>
 800e888:	ee30 0a04 	vadd.f32	s0, s0, s8
 800e88c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 800e890:	eec6 7a80 	vdiv.f32	s15, s13, s0
 800e894:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800e896:	ee31 1a05 	vadd.f32	s2, s2, s10
 800e89a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 800e89e:	eeb0 6a62 	vmov.f32	s12, s5
 800e8a2:	ee61 7a27 	vmul.f32	s15, s2, s15
 800e8a6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 800e8aa:	ee77 2a62 	vsub.f32	s5, s14, s5
 800e8ae:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 800e8b2:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 800e8b6:	eeb0 6a43 	vmov.f32	s12, s6
 800e8ba:	ee37 3ac3 	vsub.f32	s6, s15, s6
 800e8be:	ee12 2a90 	vmov	r2, s5
 800e8c2:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 800e8c6:	fb92 f3f3 	sdiv	r3, r2, r3
 800e8ca:	ee13 2a10 	vmov	r2, s6
 800e8ce:	9313      	str	r3, [sp, #76]	; 0x4c
 800e8d0:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800e8d2:	fb92 f3f3 	sdiv	r3, r2, r3
 800e8d6:	9314      	str	r3, [sp, #80]	; 0x50
 800e8d8:	9b00      	ldr	r3, [sp, #0]
 800e8da:	9a04      	ldr	r2, [sp, #16]
 800e8dc:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 800e8e0:	3b01      	subs	r3, #1
 800e8e2:	9300      	str	r3, [sp, #0]
 800e8e4:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 800e8e8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800e8ea:	eeb0 3a67 	vmov.f32	s6, s15
 800e8ee:	bf08      	it	eq
 800e8f0:	4613      	moveq	r3, r2
 800e8f2:	eef0 2a47 	vmov.f32	s5, s14
 800e8f6:	e793      	b.n	800e820 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3c>
 800e8f8:	4575      	cmp	r5, lr
 800e8fa:	dab7      	bge.n	800e86c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x88>
 800e8fc:	9d14      	ldr	r5, [sp, #80]	; 0x50
 800e8fe:	fb05 1202 	mla	r2, r5, r2, r1
 800e902:	1412      	asrs	r2, r2, #16
 800e904:	d4b2      	bmi.n	800e86c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x88>
 800e906:	9d01      	ldr	r5, [sp, #4]
 800e908:	42aa      	cmp	r2, r5
 800e90a:	daaf      	bge.n	800e86c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x88>
 800e90c:	f04f 0800 	mov.w	r8, #0
 800e910:	eba3 0208 	sub.w	r2, r3, r8
 800e914:	2a00      	cmp	r2, #0
 800e916:	ddaf      	ble.n	800e878 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x94>
 800e918:	9e02      	ldr	r6, [sp, #8]
 800e91a:	140a      	asrs	r2, r1, #16
 800e91c:	1405      	asrs	r5, r0, #16
 800e91e:	fb0e 6202 	mla	r2, lr, r2, r6
 800e922:	5d52      	ldrb	r2, [r2, r5]
 800e924:	9d03      	ldr	r5, [sp, #12]
 800e926:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 800e92a:	0e2e      	lsrs	r6, r5, #24
 800e92c:	d044      	beq.n	800e9b8 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d4>
 800e92e:	9a05      	ldr	r2, [sp, #20]
 800e930:	f834 c018 	ldrh.w	ip, [r4, r8, lsl #1]
 800e934:	4356      	muls	r6, r2
 800e936:	1c72      	adds	r2, r6, #1
 800e938:	eb02 2226 	add.w	r2, r2, r6, asr #8
 800e93c:	1212      	asrs	r2, r2, #8
 800e93e:	fa1f f982 	uxth.w	r9, r2
 800e942:	ea4f 272c 	mov.w	r7, ip, asr #8
 800e946:	f3c5 4607 	ubfx	r6, r5, #16, #8
 800e94a:	43d2      	mvns	r2, r2
 800e94c:	b2d2      	uxtb	r2, r2
 800e94e:	fb16 f609 	smulbb	r6, r6, r9
 800e952:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 800e956:	fb07 6702 	mla	r7, r7, r2, r6
 800e95a:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 800e95e:	ea4f 06ec 	mov.w	r6, ip, asr #3
 800e962:	b2ed      	uxtb	r5, r5
 800e964:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 800e968:	fa5f fc8c 	uxtb.w	ip, ip
 800e96c:	fb15 f509 	smulbb	r5, r5, r9
 800e970:	fb0c 5502 	mla	r5, ip, r2, r5
 800e974:	b2bf      	uxth	r7, r7
 800e976:	fb1a fa09 	smulbb	sl, sl, r9
 800e97a:	b2ad      	uxth	r5, r5
 800e97c:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 800e980:	fb06 a602 	mla	r6, r6, r2, sl
 800e984:	1c7a      	adds	r2, r7, #1
 800e986:	f105 0a01 	add.w	sl, r5, #1
 800e98a:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 800e98e:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 800e992:	b2b6      	uxth	r6, r6
 800e994:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 800e998:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 800e99c:	ea47 070a 	orr.w	r7, r7, sl
 800e9a0:	f106 0a01 	add.w	sl, r6, #1
 800e9a4:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 800e9a8:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 800e9ac:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 800e9b0:	ea47 070a 	orr.w	r7, r7, sl
 800e9b4:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 800e9b8:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 800e9ba:	4410      	add	r0, r2
 800e9bc:	9a14      	ldr	r2, [sp, #80]	; 0x50
 800e9be:	f108 0801 	add.w	r8, r8, #1
 800e9c2:	4411      	add	r1, r2
 800e9c4:	e7a4      	b.n	800e910 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x12c>
 800e9c6:	1405      	asrs	r5, r0, #16
 800e9c8:	d454      	bmi.n	800ea74 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x290>
 800e9ca:	4575      	cmp	r5, lr
 800e9cc:	da52      	bge.n	800ea74 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x290>
 800e9ce:	140a      	asrs	r2, r1, #16
 800e9d0:	d450      	bmi.n	800ea74 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x290>
 800e9d2:	9e01      	ldr	r6, [sp, #4]
 800e9d4:	42b2      	cmp	r2, r6
 800e9d6:	da4d      	bge.n	800ea74 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x290>
 800e9d8:	9e02      	ldr	r6, [sp, #8]
 800e9da:	fb0e 6202 	mla	r2, lr, r2, r6
 800e9de:	5d52      	ldrb	r2, [r2, r5]
 800e9e0:	9d03      	ldr	r5, [sp, #12]
 800e9e2:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 800e9e6:	0e2e      	lsrs	r6, r5, #24
 800e9e8:	d044      	beq.n	800ea74 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x290>
 800e9ea:	9a05      	ldr	r2, [sp, #20]
 800e9ec:	f8b8 c000 	ldrh.w	ip, [r8]
 800e9f0:	4356      	muls	r6, r2
 800e9f2:	1c72      	adds	r2, r6, #1
 800e9f4:	eb02 2226 	add.w	r2, r2, r6, asr #8
 800e9f8:	1212      	asrs	r2, r2, #8
 800e9fa:	fa1f fa82 	uxth.w	sl, r2
 800e9fe:	ea4f 272c 	mov.w	r7, ip, asr #8
 800ea02:	f3c5 4607 	ubfx	r6, r5, #16, #8
 800ea06:	43d2      	mvns	r2, r2
 800ea08:	b2d2      	uxtb	r2, r2
 800ea0a:	fb16 f60a 	smulbb	r6, r6, sl
 800ea0e:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 800ea12:	fb07 6702 	mla	r7, r7, r2, r6
 800ea16:	f3c5 2b07 	ubfx	fp, r5, #8, #8
 800ea1a:	ea4f 06ec 	mov.w	r6, ip, asr #3
 800ea1e:	b2ed      	uxtb	r5, r5
 800ea20:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 800ea24:	fa5f fc8c 	uxtb.w	ip, ip
 800ea28:	fb15 f50a 	smulbb	r5, r5, sl
 800ea2c:	fb0c 5502 	mla	r5, ip, r2, r5
 800ea30:	b2bf      	uxth	r7, r7
 800ea32:	fb1b fb0a 	smulbb	fp, fp, sl
 800ea36:	b2ad      	uxth	r5, r5
 800ea38:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 800ea3c:	fb06 b602 	mla	r6, r6, r2, fp
 800ea40:	1c7a      	adds	r2, r7, #1
 800ea42:	f105 0b01 	add.w	fp, r5, #1
 800ea46:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 800ea4a:	eb0b 2b15 	add.w	fp, fp, r5, lsr #8
 800ea4e:	b2b6      	uxth	r6, r6
 800ea50:	f3cb 2bc4 	ubfx	fp, fp, #11, #5
 800ea54:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 800ea58:	ea47 070b 	orr.w	r7, r7, fp
 800ea5c:	f106 0b01 	add.w	fp, r6, #1
 800ea60:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 800ea64:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 800ea68:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 800ea6c:	ea47 070b 	orr.w	r7, r7, fp
 800ea70:	f8a8 7000 	strh.w	r7, [r8]
 800ea74:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 800ea76:	4410      	add	r0, r2
 800ea78:	9a14      	ldr	r2, [sp, #80]	; 0x50
 800ea7a:	f108 0802 	add.w	r8, r8, #2
 800ea7e:	4411      	add	r1, r2
 800ea80:	f109 39ff 	add.w	r9, r9, #4294967295
 800ea84:	e6f4      	b.n	800e870 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x8c>
 800ea86:	b007      	add	sp, #28
 800ea88:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800ea8c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 800ea8c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ea90:	b087      	sub	sp, #28
 800ea92:	468b      	mov	fp, r1
 800ea94:	9d15      	ldr	r5, [sp, #84]	; 0x54
 800ea96:	9205      	str	r2, [sp, #20]
 800ea98:	f9bd 2064 	ldrsh.w	r2, [sp, #100]	; 0x64
 800ea9c:	9201      	str	r2, [sp, #4]
 800ea9e:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 800eaa2:	6869      	ldr	r1, [r5, #4]
 800eaa4:	981a      	ldr	r0, [sp, #104]	; 0x68
 800eaa6:	f9bd 8060 	ldrsh.w	r8, [sp, #96]	; 0x60
 800eaaa:	fb01 2404 	mla	r4, r1, r4, r2
 800eaae:	682a      	ldr	r2, [r5, #0]
 800eab0:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 800eab4:	6802      	ldr	r2, [r0, #0]
 800eab6:	9203      	str	r2, [sp, #12]
 800eab8:	6842      	ldr	r2, [r0, #4]
 800eaba:	3204      	adds	r2, #4
 800eabc:	9204      	str	r2, [sp, #16]
 800eabe:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 800eac2:	f1bb 0f00 	cmp.w	fp, #0
 800eac6:	dc03      	bgt.n	800ead0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x44>
 800eac8:	9a05      	ldr	r2, [sp, #20]
 800eaca:	2a00      	cmp	r2, #0
 800eacc:	f340 814a 	ble.w	800ed64 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2d8>
 800ead0:	9a11      	ldr	r2, [sp, #68]	; 0x44
 800ead2:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 800ead6:	9a12      	ldr	r2, [sp, #72]	; 0x48
 800ead8:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 800eadc:	2b00      	cmp	r3, #0
 800eade:	dd0f      	ble.n	800eb00 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x74>
 800eae0:	1408      	asrs	r0, r1, #16
 800eae2:	d406      	bmi.n	800eaf2 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x66>
 800eae4:	4540      	cmp	r0, r8
 800eae6:	da04      	bge.n	800eaf2 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x66>
 800eae8:	1410      	asrs	r0, r2, #16
 800eaea:	d402      	bmi.n	800eaf2 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x66>
 800eaec:	9d01      	ldr	r5, [sp, #4]
 800eaee:	42a8      	cmp	r0, r5
 800eaf0:	db07      	blt.n	800eb02 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x76>
 800eaf2:	9813      	ldr	r0, [sp, #76]	; 0x4c
 800eaf4:	4401      	add	r1, r0
 800eaf6:	9814      	ldr	r0, [sp, #80]	; 0x50
 800eaf8:	3b01      	subs	r3, #1
 800eafa:	4402      	add	r2, r0
 800eafc:	3402      	adds	r4, #2
 800eafe:	e7ed      	b.n	800eadc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x50>
 800eb00:	d018      	beq.n	800eb34 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xa8>
 800eb02:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 800eb04:	1e58      	subs	r0, r3, #1
 800eb06:	fb05 1500 	mla	r5, r5, r0, r1
 800eb0a:	142d      	asrs	r5, r5, #16
 800eb0c:	d40a      	bmi.n	800eb24 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x98>
 800eb0e:	4545      	cmp	r5, r8
 800eb10:	da08      	bge.n	800eb24 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x98>
 800eb12:	9d14      	ldr	r5, [sp, #80]	; 0x50
 800eb14:	fb05 2000 	mla	r0, r5, r0, r2
 800eb18:	1400      	asrs	r0, r0, #16
 800eb1a:	d403      	bmi.n	800eb24 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x98>
 800eb1c:	9d01      	ldr	r5, [sp, #4]
 800eb1e:	42a8      	cmp	r0, r5
 800eb20:	f2c0 80b7 	blt.w	800ec92 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x206>
 800eb24:	2600      	movs	r6, #0
 800eb26:	1998      	adds	r0, r3, r6
 800eb28:	2800      	cmp	r0, #0
 800eb2a:	dc3e      	bgt.n	800ebaa <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x11e>
 800eb2c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 800eb30:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 800eb34:	f1bb 0f00 	cmp.w	fp, #0
 800eb38:	f340 8114 	ble.w	800ed64 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2d8>
 800eb3c:	ee30 0a04 	vadd.f32	s0, s0, s8
 800eb40:	ee70 0aa4 	vadd.f32	s1, s1, s9
 800eb44:	eec6 7a80 	vdiv.f32	s15, s13, s0
 800eb48:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800eb4a:	f1bb 0b01 	subs.w	fp, fp, #1
 800eb4e:	ee31 1a05 	vadd.f32	s2, s2, s10
 800eb52:	ee20 7aa7 	vmul.f32	s14, s1, s15
 800eb56:	eeb0 6a62 	vmov.f32	s12, s5
 800eb5a:	ee61 7a27 	vmul.f32	s15, s2, s15
 800eb5e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 800eb62:	ee77 2a62 	vsub.f32	s5, s14, s5
 800eb66:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 800eb6a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 800eb6e:	eeb0 6a43 	vmov.f32	s12, s6
 800eb72:	ee37 3ac3 	vsub.f32	s6, s15, s6
 800eb76:	ee12 2a90 	vmov	r2, s5
 800eb7a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 800eb7e:	fb92 f3f3 	sdiv	r3, r2, r3
 800eb82:	ee13 2a10 	vmov	r2, s6
 800eb86:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 800eb8a:	9313      	str	r3, [sp, #76]	; 0x4c
 800eb8c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800eb8e:	fb92 f3f3 	sdiv	r3, r2, r3
 800eb92:	9a05      	ldr	r2, [sp, #20]
 800eb94:	9314      	str	r3, [sp, #80]	; 0x50
 800eb96:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 800eb9a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800eb9c:	eeb0 3a67 	vmov.f32	s6, s15
 800eba0:	bf08      	it	eq
 800eba2:	4613      	moveq	r3, r2
 800eba4:	eef0 2a47 	vmov.f32	s5, s14
 800eba8:	e78b      	b.n	800eac2 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x36>
 800ebaa:	140d      	asrs	r5, r1, #16
 800ebac:	d459      	bmi.n	800ec62 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 800ebae:	4545      	cmp	r5, r8
 800ebb0:	da57      	bge.n	800ec62 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 800ebb2:	1410      	asrs	r0, r2, #16
 800ebb4:	d455      	bmi.n	800ec62 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 800ebb6:	9f01      	ldr	r7, [sp, #4]
 800ebb8:	42b8      	cmp	r0, r7
 800ebba:	da52      	bge.n	800ec62 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 800ebbc:	9f03      	ldr	r7, [sp, #12]
 800ebbe:	fb08 7000 	mla	r0, r8, r0, r7
 800ebc2:	5d40      	ldrb	r0, [r0, r5]
 800ebc4:	9d04      	ldr	r5, [sp, #16]
 800ebc6:	f855 0020 	ldr.w	r0, [r5, r0, lsl #2]
 800ebca:	0e07      	lsrs	r7, r0, #24
 800ebcc:	2fff      	cmp	r7, #255	; 0xff
 800ebce:	d04e      	beq.n	800ec6e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1e2>
 800ebd0:	b2fd      	uxtb	r5, r7
 800ebd2:	2f00      	cmp	r7, #0
 800ebd4:	d045      	beq.n	800ec62 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 800ebd6:	f06f 0701 	mvn.w	r7, #1
 800ebda:	4377      	muls	r7, r6
 800ebdc:	fa1f f985 	uxth.w	r9, r5
 800ebe0:	f834 e007 	ldrh.w	lr, [r4, r7]
 800ebe4:	9702      	str	r7, [sp, #8]
 800ebe6:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 800ebea:	f3c0 4707 	ubfx	r7, r0, #16, #8
 800ebee:	43ed      	mvns	r5, r5
 800ebf0:	b2ed      	uxtb	r5, r5
 800ebf2:	fb17 f709 	smulbb	r7, r7, r9
 800ebf6:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 800ebfa:	fb0c 7c05 	mla	ip, ip, r5, r7
 800ebfe:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 800ec02:	ea4f 07ee 	mov.w	r7, lr, asr #3
 800ec06:	b2c0      	uxtb	r0, r0
 800ec08:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 800ec0c:	fa5f fe8e 	uxtb.w	lr, lr
 800ec10:	fb10 f009 	smulbb	r0, r0, r9
 800ec14:	fb0e 0005 	mla	r0, lr, r5, r0
 800ec18:	b280      	uxth	r0, r0
 800ec1a:	fa1f fc8c 	uxth.w	ip, ip
 800ec1e:	fb1a fa09 	smulbb	sl, sl, r9
 800ec22:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 800ec26:	fb07 a705 	mla	r7, r7, r5, sl
 800ec2a:	f100 0a01 	add.w	sl, r0, #1
 800ec2e:	f10c 0501 	add.w	r5, ip, #1
 800ec32:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 800ec36:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 800ec3a:	b2bf      	uxth	r7, r7
 800ec3c:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 800ec40:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 800ec44:	ea4c 0c0a 	orr.w	ip, ip, sl
 800ec48:	f107 0a01 	add.w	sl, r7, #1
 800ec4c:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 800ec50:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 800ec54:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 800ec58:	9802      	ldr	r0, [sp, #8]
 800ec5a:	ea4c 0c0a 	orr.w	ip, ip, sl
 800ec5e:	f824 c000 	strh.w	ip, [r4, r0]
 800ec62:	9813      	ldr	r0, [sp, #76]	; 0x4c
 800ec64:	4401      	add	r1, r0
 800ec66:	9814      	ldr	r0, [sp, #80]	; 0x50
 800ec68:	3e01      	subs	r6, #1
 800ec6a:	4402      	add	r2, r0
 800ec6c:	e75b      	b.n	800eb26 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9a>
 800ec6e:	f06f 0501 	mvn.w	r5, #1
 800ec72:	fb05 f706 	mul.w	r7, r5, r6
 800ec76:	f2a5 75fe 	subw	r5, r5, #2046	; 0x7fe
 800ec7a:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 800ec7e:	0945      	lsrs	r5, r0, #5
 800ec80:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 800ec84:	ea4c 0505 	orr.w	r5, ip, r5
 800ec88:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 800ec8c:	4305      	orrs	r5, r0
 800ec8e:	53e5      	strh	r5, [r4, r7]
 800ec90:	e7e7      	b.n	800ec62 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 800ec92:	f04f 0e00 	mov.w	lr, #0
 800ec96:	eba3 000e 	sub.w	r0, r3, lr
 800ec9a:	2800      	cmp	r0, #0
 800ec9c:	f77f af46 	ble.w	800eb2c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xa0>
 800eca0:	9e03      	ldr	r6, [sp, #12]
 800eca2:	1410      	asrs	r0, r2, #16
 800eca4:	140d      	asrs	r5, r1, #16
 800eca6:	fb08 6000 	mla	r0, r8, r0, r6
 800ecaa:	5d40      	ldrb	r0, [r0, r5]
 800ecac:	9d04      	ldr	r5, [sp, #16]
 800ecae:	f855 0020 	ldr.w	r0, [r5, r0, lsl #2]
 800ecb2:	0e06      	lsrs	r6, r0, #24
 800ecb4:	2eff      	cmp	r6, #255	; 0xff
 800ecb6:	d048      	beq.n	800ed4a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2be>
 800ecb8:	b2f5      	uxtb	r5, r6
 800ecba:	2e00      	cmp	r6, #0
 800ecbc:	d03e      	beq.n	800ed3c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2b0>
 800ecbe:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 800ecc2:	fa1f f985 	uxth.w	r9, r5
 800ecc6:	ea4f 272c 	mov.w	r7, ip, asr #8
 800ecca:	f3c0 4607 	ubfx	r6, r0, #16, #8
 800ecce:	43ed      	mvns	r5, r5
 800ecd0:	b2ed      	uxtb	r5, r5
 800ecd2:	fb16 f609 	smulbb	r6, r6, r9
 800ecd6:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 800ecda:	fb07 6705 	mla	r7, r7, r5, r6
 800ecde:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 800ece2:	ea4f 06ec 	mov.w	r6, ip, asr #3
 800ece6:	b2c0      	uxtb	r0, r0
 800ece8:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 800ecec:	fa5f fc8c 	uxtb.w	ip, ip
 800ecf0:	fb10 f009 	smulbb	r0, r0, r9
 800ecf4:	fb0c 0005 	mla	r0, ip, r5, r0
 800ecf8:	b2bf      	uxth	r7, r7
 800ecfa:	fb1a fa09 	smulbb	sl, sl, r9
 800ecfe:	b280      	uxth	r0, r0
 800ed00:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 800ed04:	fb06 a605 	mla	r6, r6, r5, sl
 800ed08:	1c7d      	adds	r5, r7, #1
 800ed0a:	f100 0a01 	add.w	sl, r0, #1
 800ed0e:	eb05 2717 	add.w	r7, r5, r7, lsr #8
 800ed12:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 800ed16:	b2b6      	uxth	r6, r6
 800ed18:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 800ed1c:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 800ed20:	ea47 070a 	orr.w	r7, r7, sl
 800ed24:	f106 0a01 	add.w	sl, r6, #1
 800ed28:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 800ed2c:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 800ed30:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 800ed34:	ea47 070a 	orr.w	r7, r7, sl
 800ed38:	f824 701e 	strh.w	r7, [r4, lr, lsl #1]
 800ed3c:	9813      	ldr	r0, [sp, #76]	; 0x4c
 800ed3e:	4401      	add	r1, r0
 800ed40:	9814      	ldr	r0, [sp, #80]	; 0x50
 800ed42:	f10e 0e01 	add.w	lr, lr, #1
 800ed46:	4402      	add	r2, r0
 800ed48:	e7a5      	b.n	800ec96 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x20a>
 800ed4a:	4d08      	ldr	r5, [pc, #32]	; (800ed6c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2e0>)
 800ed4c:	ea05 2610 	and.w	r6, r5, r0, lsr #8
 800ed50:	0945      	lsrs	r5, r0, #5
 800ed52:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 800ed56:	4335      	orrs	r5, r6
 800ed58:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 800ed5c:	4305      	orrs	r5, r0
 800ed5e:	f824 501e 	strh.w	r5, [r4, lr, lsl #1]
 800ed62:	e7eb      	b.n	800ed3c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2b0>
 800ed64:	b007      	add	sp, #28
 800ed66:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800ed6a:	bf00      	nop
 800ed6c:	fffff800 	.word	0xfffff800

0800ed70 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 800ed70:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ed74:	b087      	sub	sp, #28
 800ed76:	468b      	mov	fp, r1
 800ed78:	9204      	str	r2, [sp, #16]
 800ed7a:	f9bd 2064 	ldrsh.w	r2, [sp, #100]	; 0x64
 800ed7e:	9d15      	ldr	r5, [sp, #84]	; 0x54
 800ed80:	9201      	str	r2, [sp, #4]
 800ed82:	f89d 206c 	ldrb.w	r2, [sp, #108]	; 0x6c
 800ed86:	9205      	str	r2, [sp, #20]
 800ed88:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 800ed8c:	6869      	ldr	r1, [r5, #4]
 800ed8e:	981a      	ldr	r0, [sp, #104]	; 0x68
 800ed90:	f9bd 8060 	ldrsh.w	r8, [sp, #96]	; 0x60
 800ed94:	fb01 2404 	mla	r4, r1, r4, r2
 800ed98:	682a      	ldr	r2, [r5, #0]
 800ed9a:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 800ed9e:	6802      	ldr	r2, [r0, #0]
 800eda0:	9202      	str	r2, [sp, #8]
 800eda2:	6842      	ldr	r2, [r0, #4]
 800eda4:	9203      	str	r2, [sp, #12]
 800eda6:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 800edaa:	f1bb 0f00 	cmp.w	fp, #0
 800edae:	dc03      	bgt.n	800edb8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x48>
 800edb0:	9a04      	ldr	r2, [sp, #16]
 800edb2:	2a00      	cmp	r2, #0
 800edb4:	f340 8136 	ble.w	800f024 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2b4>
 800edb8:	9a11      	ldr	r2, [sp, #68]	; 0x44
 800edba:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 800edbe:	9a12      	ldr	r2, [sp, #72]	; 0x48
 800edc0:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 800edc4:	2b00      	cmp	r3, #0
 800edc6:	dd0f      	ble.n	800ede8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x78>
 800edc8:	1408      	asrs	r0, r1, #16
 800edca:	d406      	bmi.n	800edda <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6a>
 800edcc:	4540      	cmp	r0, r8
 800edce:	da04      	bge.n	800edda <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6a>
 800edd0:	1410      	asrs	r0, r2, #16
 800edd2:	d402      	bmi.n	800edda <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6a>
 800edd4:	9d01      	ldr	r5, [sp, #4]
 800edd6:	42a8      	cmp	r0, r5
 800edd8:	db07      	blt.n	800edea <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7a>
 800edda:	9813      	ldr	r0, [sp, #76]	; 0x4c
 800eddc:	4401      	add	r1, r0
 800edde:	9814      	ldr	r0, [sp, #80]	; 0x50
 800ede0:	3b01      	subs	r3, #1
 800ede2:	4402      	add	r2, r0
 800ede4:	3402      	adds	r4, #2
 800ede6:	e7ed      	b.n	800edc4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x54>
 800ede8:	d00f      	beq.n	800ee0a <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9a>
 800edea:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 800edec:	1e58      	subs	r0, r3, #1
 800edee:	fb05 1500 	mla	r5, r5, r0, r1
 800edf2:	142d      	asrs	r5, r5, #16
 800edf4:	d544      	bpl.n	800ee80 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x110>
 800edf6:	9300      	str	r3, [sp, #0]
 800edf8:	46a2      	mov	sl, r4
 800edfa:	9800      	ldr	r0, [sp, #0]
 800edfc:	2800      	cmp	r0, #0
 800edfe:	f300 80ab 	bgt.w	800ef58 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1e8>
 800ee02:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 800ee06:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 800ee0a:	f1bb 0f00 	cmp.w	fp, #0
 800ee0e:	f340 8109 	ble.w	800f024 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2b4>
 800ee12:	ee30 0a04 	vadd.f32	s0, s0, s8
 800ee16:	ee70 0aa4 	vadd.f32	s1, s1, s9
 800ee1a:	eec6 7a80 	vdiv.f32	s15, s13, s0
 800ee1e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800ee20:	f1bb 0b01 	subs.w	fp, fp, #1
 800ee24:	ee31 1a05 	vadd.f32	s2, s2, s10
 800ee28:	ee20 7aa7 	vmul.f32	s14, s1, s15
 800ee2c:	eeb0 6a62 	vmov.f32	s12, s5
 800ee30:	ee61 7a27 	vmul.f32	s15, s2, s15
 800ee34:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 800ee38:	ee77 2a62 	vsub.f32	s5, s14, s5
 800ee3c:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 800ee40:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 800ee44:	eeb0 6a43 	vmov.f32	s12, s6
 800ee48:	ee37 3ac3 	vsub.f32	s6, s15, s6
 800ee4c:	ee12 2a90 	vmov	r2, s5
 800ee50:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 800ee54:	fb92 f3f3 	sdiv	r3, r2, r3
 800ee58:	ee13 2a10 	vmov	r2, s6
 800ee5c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 800ee60:	9313      	str	r3, [sp, #76]	; 0x4c
 800ee62:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800ee64:	fb92 f3f3 	sdiv	r3, r2, r3
 800ee68:	9a04      	ldr	r2, [sp, #16]
 800ee6a:	9314      	str	r3, [sp, #80]	; 0x50
 800ee6c:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 800ee70:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800ee72:	eeb0 3a67 	vmov.f32	s6, s15
 800ee76:	bf08      	it	eq
 800ee78:	4613      	moveq	r3, r2
 800ee7a:	eef0 2a47 	vmov.f32	s5, s14
 800ee7e:	e794      	b.n	800edaa <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3a>
 800ee80:	4545      	cmp	r5, r8
 800ee82:	dab8      	bge.n	800edf6 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x86>
 800ee84:	9d14      	ldr	r5, [sp, #80]	; 0x50
 800ee86:	fb05 2000 	mla	r0, r5, r0, r2
 800ee8a:	1400      	asrs	r0, r0, #16
 800ee8c:	d4b3      	bmi.n	800edf6 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x86>
 800ee8e:	9d01      	ldr	r5, [sp, #4]
 800ee90:	42a8      	cmp	r0, r5
 800ee92:	dab0      	bge.n	800edf6 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x86>
 800ee94:	f04f 0900 	mov.w	r9, #0
 800ee98:	eba3 0009 	sub.w	r0, r3, r9
 800ee9c:	2800      	cmp	r0, #0
 800ee9e:	ddb0      	ble.n	800ee02 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x92>
 800eea0:	140d      	asrs	r5, r1, #16
 800eea2:	1410      	asrs	r0, r2, #16
 800eea4:	fb08 5000 	mla	r0, r8, r0, r5
 800eea8:	9d03      	ldr	r5, [sp, #12]
 800eeaa:	5c2e      	ldrb	r6, [r5, r0]
 800eeac:	2e00      	cmp	r6, #0
 800eeae:	d04c      	beq.n	800ef4a <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1da>
 800eeb0:	9d02      	ldr	r5, [sp, #8]
 800eeb2:	f835 e010 	ldrh.w	lr, [r5, r0, lsl #1]
 800eeb6:	9805      	ldr	r0, [sp, #20]
 800eeb8:	f834 5019 	ldrh.w	r5, [r4, r9, lsl #1]
 800eebc:	4346      	muls	r6, r0
 800eebe:	1c70      	adds	r0, r6, #1
 800eec0:	eb00 2016 	add.w	r0, r0, r6, lsr #8
 800eec4:	1200      	asrs	r0, r0, #8
 800eec6:	b287      	uxth	r7, r0
 800eec8:	122e      	asrs	r6, r5, #8
 800eeca:	43c0      	mvns	r0, r0
 800eecc:	b2c0      	uxtb	r0, r0
 800eece:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 800eed2:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 800eed6:	fb16 f600 	smulbb	r6, r6, r0
 800eeda:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 800eede:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 800eee2:	00ed      	lsls	r5, r5, #3
 800eee4:	fb0c 6c07 	mla	ip, ip, r7, r6
 800eee8:	b2ed      	uxtb	r5, r5
 800eeea:	ea4f 06ee 	mov.w	r6, lr, asr #3
 800eeee:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 800eef2:	fb15 f500 	smulbb	r5, r5, r0
 800eef6:	fa5f fe8e 	uxtb.w	lr, lr
 800eefa:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 800eefe:	fb0e 5507 	mla	r5, lr, r7, r5
 800ef02:	fb1a fa00 	smulbb	sl, sl, r0
 800ef06:	fa1f fc8c 	uxth.w	ip, ip
 800ef0a:	b2ad      	uxth	r5, r5
 800ef0c:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 800ef10:	fb06 a607 	mla	r6, r6, r7, sl
 800ef14:	f10c 0001 	add.w	r0, ip, #1
 800ef18:	f105 0a01 	add.w	sl, r5, #1
 800ef1c:	eb00 2c1c 	add.w	ip, r0, ip, lsr #8
 800ef20:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 800ef24:	b2b6      	uxth	r6, r6
 800ef26:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 800ef2a:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 800ef2e:	ea4c 0c0a 	orr.w	ip, ip, sl
 800ef32:	f106 0a01 	add.w	sl, r6, #1
 800ef36:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 800ef3a:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 800ef3e:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 800ef42:	ea4c 0c0a 	orr.w	ip, ip, sl
 800ef46:	f824 c019 	strh.w	ip, [r4, r9, lsl #1]
 800ef4a:	9813      	ldr	r0, [sp, #76]	; 0x4c
 800ef4c:	4401      	add	r1, r0
 800ef4e:	9814      	ldr	r0, [sp, #80]	; 0x50
 800ef50:	f109 0901 	add.w	r9, r9, #1
 800ef54:	4402      	add	r2, r0
 800ef56:	e79f      	b.n	800ee98 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x128>
 800ef58:	1408      	asrs	r0, r1, #16
 800ef5a:	d459      	bmi.n	800f010 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2a0>
 800ef5c:	4540      	cmp	r0, r8
 800ef5e:	da57      	bge.n	800f010 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2a0>
 800ef60:	1415      	asrs	r5, r2, #16
 800ef62:	d455      	bmi.n	800f010 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2a0>
 800ef64:	9e01      	ldr	r6, [sp, #4]
 800ef66:	42b5      	cmp	r5, r6
 800ef68:	da52      	bge.n	800f010 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2a0>
 800ef6a:	fb08 0005 	mla	r0, r8, r5, r0
 800ef6e:	9d03      	ldr	r5, [sp, #12]
 800ef70:	5c2e      	ldrb	r6, [r5, r0]
 800ef72:	2e00      	cmp	r6, #0
 800ef74:	d04c      	beq.n	800f010 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2a0>
 800ef76:	9d02      	ldr	r5, [sp, #8]
 800ef78:	f835 e010 	ldrh.w	lr, [r5, r0, lsl #1]
 800ef7c:	9805      	ldr	r0, [sp, #20]
 800ef7e:	f8ba 5000 	ldrh.w	r5, [sl]
 800ef82:	4346      	muls	r6, r0
 800ef84:	1c70      	adds	r0, r6, #1
 800ef86:	eb00 2016 	add.w	r0, r0, r6, lsr #8
 800ef8a:	1200      	asrs	r0, r0, #8
 800ef8c:	b287      	uxth	r7, r0
 800ef8e:	122e      	asrs	r6, r5, #8
 800ef90:	43c0      	mvns	r0, r0
 800ef92:	b2c0      	uxtb	r0, r0
 800ef94:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 800ef98:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 800ef9c:	fb16 f600 	smulbb	r6, r6, r0
 800efa0:	ea4f 09e5 	mov.w	r9, r5, asr #3
 800efa4:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 800efa8:	00ed      	lsls	r5, r5, #3
 800efaa:	fb0c 6c07 	mla	ip, ip, r7, r6
 800efae:	b2ed      	uxtb	r5, r5
 800efb0:	ea4f 06ee 	mov.w	r6, lr, asr #3
 800efb4:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 800efb8:	fb15 f500 	smulbb	r5, r5, r0
 800efbc:	fa5f fe8e 	uxtb.w	lr, lr
 800efc0:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 800efc4:	fb0e 5507 	mla	r5, lr, r7, r5
 800efc8:	fb19 f900 	smulbb	r9, r9, r0
 800efcc:	fa1f fc8c 	uxth.w	ip, ip
 800efd0:	b2ad      	uxth	r5, r5
 800efd2:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 800efd6:	fb06 9607 	mla	r6, r6, r7, r9
 800efda:	f10c 0001 	add.w	r0, ip, #1
 800efde:	f105 0901 	add.w	r9, r5, #1
 800efe2:	eb00 2c1c 	add.w	ip, r0, ip, lsr #8
 800efe6:	eb09 2915 	add.w	r9, r9, r5, lsr #8
 800efea:	b2b6      	uxth	r6, r6
 800efec:	f3c9 29c4 	ubfx	r9, r9, #11, #5
 800eff0:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 800eff4:	ea4c 0c09 	orr.w	ip, ip, r9
 800eff8:	f106 0901 	add.w	r9, r6, #1
 800effc:	eb09 2916 	add.w	r9, r9, r6, lsr #8
 800f000:	ea4f 1959 	mov.w	r9, r9, lsr #5
 800f004:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 800f008:	ea4c 0c09 	orr.w	ip, ip, r9
 800f00c:	f8aa c000 	strh.w	ip, [sl]
 800f010:	9813      	ldr	r0, [sp, #76]	; 0x4c
 800f012:	4401      	add	r1, r0
 800f014:	9814      	ldr	r0, [sp, #80]	; 0x50
 800f016:	4402      	add	r2, r0
 800f018:	9800      	ldr	r0, [sp, #0]
 800f01a:	3801      	subs	r0, #1
 800f01c:	f10a 0a02 	add.w	sl, sl, #2
 800f020:	9000      	str	r0, [sp, #0]
 800f022:	e6ea      	b.n	800edfa <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x8a>
 800f024:	b007      	add	sp, #28
 800f026:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800f02a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 800f02a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f02e:	b087      	sub	sp, #28
 800f030:	468b      	mov	fp, r1
 800f032:	9d15      	ldr	r5, [sp, #84]	; 0x54
 800f034:	9205      	str	r2, [sp, #20]
 800f036:	f9bd 2064 	ldrsh.w	r2, [sp, #100]	; 0x64
 800f03a:	9202      	str	r2, [sp, #8]
 800f03c:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
 800f040:	6869      	ldr	r1, [r5, #4]
 800f042:	9c1a      	ldr	r4, [sp, #104]	; 0x68
 800f044:	f9bd 9060 	ldrsh.w	r9, [sp, #96]	; 0x60
 800f048:	fb01 2000 	mla	r0, r1, r0, r2
 800f04c:	682a      	ldr	r2, [r5, #0]
 800f04e:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 800f052:	6822      	ldr	r2, [r4, #0]
 800f054:	9201      	str	r2, [sp, #4]
 800f056:	6862      	ldr	r2, [r4, #4]
 800f058:	9204      	str	r2, [sp, #16]
 800f05a:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 800f05e:	f1bb 0f00 	cmp.w	fp, #0
 800f062:	dc03      	bgt.n	800f06c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x42>
 800f064:	9a05      	ldr	r2, [sp, #20]
 800f066:	2a00      	cmp	r2, #0
 800f068:	f340 813d 	ble.w	800f2e6 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2bc>
 800f06c:	9a11      	ldr	r2, [sp, #68]	; 0x44
 800f06e:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 800f072:	9a12      	ldr	r2, [sp, #72]	; 0x48
 800f074:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 800f078:	2b00      	cmp	r3, #0
 800f07a:	dd0f      	ble.n	800f09c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x72>
 800f07c:	140c      	asrs	r4, r1, #16
 800f07e:	d406      	bmi.n	800f08e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x64>
 800f080:	454c      	cmp	r4, r9
 800f082:	da04      	bge.n	800f08e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x64>
 800f084:	1414      	asrs	r4, r2, #16
 800f086:	d402      	bmi.n	800f08e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x64>
 800f088:	9d02      	ldr	r5, [sp, #8]
 800f08a:	42ac      	cmp	r4, r5
 800f08c:	db07      	blt.n	800f09e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x74>
 800f08e:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 800f090:	4421      	add	r1, r4
 800f092:	9c14      	ldr	r4, [sp, #80]	; 0x50
 800f094:	3b01      	subs	r3, #1
 800f096:	4422      	add	r2, r4
 800f098:	3002      	adds	r0, #2
 800f09a:	e7ed      	b.n	800f078 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4e>
 800f09c:	d018      	beq.n	800f0d0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xa6>
 800f09e:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 800f0a0:	1e5c      	subs	r4, r3, #1
 800f0a2:	fb05 1504 	mla	r5, r5, r4, r1
 800f0a6:	142d      	asrs	r5, r5, #16
 800f0a8:	d40a      	bmi.n	800f0c0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x96>
 800f0aa:	454d      	cmp	r5, r9
 800f0ac:	da08      	bge.n	800f0c0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x96>
 800f0ae:	9d14      	ldr	r5, [sp, #80]	; 0x50
 800f0b0:	fb05 2404 	mla	r4, r5, r4, r2
 800f0b4:	1424      	asrs	r4, r4, #16
 800f0b6:	d403      	bmi.n	800f0c0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x96>
 800f0b8:	9d02      	ldr	r5, [sp, #8]
 800f0ba:	42ac      	cmp	r4, r5
 800f0bc:	f2c0 80ae 	blt.w	800f21c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1f2>
 800f0c0:	2600      	movs	r6, #0
 800f0c2:	199c      	adds	r4, r3, r6
 800f0c4:	2c00      	cmp	r4, #0
 800f0c6:	dc3e      	bgt.n	800f146 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x11c>
 800f0c8:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 800f0cc:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 800f0d0:	f1bb 0f00 	cmp.w	fp, #0
 800f0d4:	f340 8107 	ble.w	800f2e6 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2bc>
 800f0d8:	ee30 0a04 	vadd.f32	s0, s0, s8
 800f0dc:	ee70 0aa4 	vadd.f32	s1, s1, s9
 800f0e0:	eec6 7a80 	vdiv.f32	s15, s13, s0
 800f0e4:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800f0e6:	f1bb 0b01 	subs.w	fp, fp, #1
 800f0ea:	ee31 1a05 	vadd.f32	s2, s2, s10
 800f0ee:	ee20 7aa7 	vmul.f32	s14, s1, s15
 800f0f2:	eeb0 6a62 	vmov.f32	s12, s5
 800f0f6:	ee61 7a27 	vmul.f32	s15, s2, s15
 800f0fa:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 800f0fe:	ee77 2a62 	vsub.f32	s5, s14, s5
 800f102:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 800f106:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 800f10a:	eeb0 6a43 	vmov.f32	s12, s6
 800f10e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 800f112:	ee12 2a90 	vmov	r2, s5
 800f116:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 800f11a:	fb92 f3f3 	sdiv	r3, r2, r3
 800f11e:	ee13 2a10 	vmov	r2, s6
 800f122:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 800f126:	9313      	str	r3, [sp, #76]	; 0x4c
 800f128:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800f12a:	fb92 f3f3 	sdiv	r3, r2, r3
 800f12e:	9a05      	ldr	r2, [sp, #20]
 800f130:	9314      	str	r3, [sp, #80]	; 0x50
 800f132:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 800f136:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800f138:	eeb0 3a67 	vmov.f32	s6, s15
 800f13c:	bf08      	it	eq
 800f13e:	4613      	moveq	r3, r2
 800f140:	eef0 2a47 	vmov.f32	s5, s14
 800f144:	e78b      	b.n	800f05e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x34>
 800f146:	140c      	asrs	r4, r1, #16
 800f148:	d45a      	bmi.n	800f200 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 800f14a:	454c      	cmp	r4, r9
 800f14c:	da58      	bge.n	800f200 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 800f14e:	1415      	asrs	r5, r2, #16
 800f150:	d456      	bmi.n	800f200 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 800f152:	9f02      	ldr	r7, [sp, #8]
 800f154:	42bd      	cmp	r5, r7
 800f156:	da53      	bge.n	800f200 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 800f158:	fb09 4505 	mla	r5, r9, r5, r4
 800f15c:	9c04      	ldr	r4, [sp, #16]
 800f15e:	5d64      	ldrb	r4, [r4, r5]
 800f160:	2cff      	cmp	r4, #255	; 0xff
 800f162:	d053      	beq.n	800f20c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1e2>
 800f164:	2c00      	cmp	r4, #0
 800f166:	d04b      	beq.n	800f200 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 800f168:	9f01      	ldr	r7, [sp, #4]
 800f16a:	f837 8015 	ldrh.w	r8, [r7, r5, lsl #1]
 800f16e:	f06f 0501 	mvn.w	r5, #1
 800f172:	4375      	muls	r5, r6
 800f174:	9503      	str	r5, [sp, #12]
 800f176:	5b45      	ldrh	r5, [r0, r5]
 800f178:	fa1f fc84 	uxth.w	ip, r4
 800f17c:	122f      	asrs	r7, r5, #8
 800f17e:	43e4      	mvns	r4, r4
 800f180:	b2e4      	uxtb	r4, r4
 800f182:	ea4f 2e28 	mov.w	lr, r8, asr #8
 800f186:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 800f18a:	fb17 f704 	smulbb	r7, r7, r4
 800f18e:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 800f192:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 800f196:	00ed      	lsls	r5, r5, #3
 800f198:	fb0e 7e0c 	mla	lr, lr, ip, r7
 800f19c:	b2ed      	uxtb	r5, r5
 800f19e:	ea4f 07e8 	mov.w	r7, r8, asr #3
 800f1a2:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 800f1a6:	fb15 f504 	smulbb	r5, r5, r4
 800f1aa:	fa5f f888 	uxtb.w	r8, r8
 800f1ae:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 800f1b2:	fb08 550c 	mla	r5, r8, ip, r5
 800f1b6:	fb1a fa04 	smulbb	sl, sl, r4
 800f1ba:	fa1f fe8e 	uxth.w	lr, lr
 800f1be:	b2ad      	uxth	r5, r5
 800f1c0:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 800f1c4:	fb07 a70c 	mla	r7, r7, ip, sl
 800f1c8:	f10e 0401 	add.w	r4, lr, #1
 800f1cc:	f105 0a01 	add.w	sl, r5, #1
 800f1d0:	eb04 2e1e 	add.w	lr, r4, lr, lsr #8
 800f1d4:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 800f1d8:	b2bf      	uxth	r7, r7
 800f1da:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 800f1de:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 800f1e2:	ea4e 0e0a 	orr.w	lr, lr, sl
 800f1e6:	f107 0a01 	add.w	sl, r7, #1
 800f1ea:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 800f1ee:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 800f1f2:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 800f1f6:	9c03      	ldr	r4, [sp, #12]
 800f1f8:	ea4e 0e0a 	orr.w	lr, lr, sl
 800f1fc:	f820 e004 	strh.w	lr, [r0, r4]
 800f200:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 800f202:	4421      	add	r1, r4
 800f204:	9c14      	ldr	r4, [sp, #80]	; 0x50
 800f206:	3e01      	subs	r6, #1
 800f208:	4422      	add	r2, r4
 800f20a:	e75a      	b.n	800f0c2 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x98>
 800f20c:	9c01      	ldr	r4, [sp, #4]
 800f20e:	f834 5015 	ldrh.w	r5, [r4, r5, lsl #1]
 800f212:	f06f 0401 	mvn.w	r4, #1
 800f216:	4374      	muls	r4, r6
 800f218:	5305      	strh	r5, [r0, r4]
 800f21a:	e7f1      	b.n	800f200 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 800f21c:	f04f 0800 	mov.w	r8, #0
 800f220:	eba3 0408 	sub.w	r4, r3, r8
 800f224:	2c00      	cmp	r4, #0
 800f226:	f77f af4f 	ble.w	800f0c8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9e>
 800f22a:	140c      	asrs	r4, r1, #16
 800f22c:	1415      	asrs	r5, r2, #16
 800f22e:	fb09 4505 	mla	r5, r9, r5, r4
 800f232:	9c04      	ldr	r4, [sp, #16]
 800f234:	5d64      	ldrb	r4, [r4, r5]
 800f236:	2cff      	cmp	r4, #255	; 0xff
 800f238:	d04f      	beq.n	800f2da <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2b0>
 800f23a:	2c00      	cmp	r4, #0
 800f23c:	d046      	beq.n	800f2cc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2a2>
 800f23e:	9e01      	ldr	r6, [sp, #4]
 800f240:	f836 e015 	ldrh.w	lr, [r6, r5, lsl #1]
 800f244:	f830 5018 	ldrh.w	r5, [r0, r8, lsl #1]
 800f248:	b2a7      	uxth	r7, r4
 800f24a:	122e      	asrs	r6, r5, #8
 800f24c:	43e4      	mvns	r4, r4
 800f24e:	b2e4      	uxtb	r4, r4
 800f250:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 800f254:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 800f258:	fb16 f604 	smulbb	r6, r6, r4
 800f25c:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 800f260:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 800f264:	00ed      	lsls	r5, r5, #3
 800f266:	fb0c 6c07 	mla	ip, ip, r7, r6
 800f26a:	b2ed      	uxtb	r5, r5
 800f26c:	ea4f 06ee 	mov.w	r6, lr, asr #3
 800f270:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 800f274:	fb15 f504 	smulbb	r5, r5, r4
 800f278:	fa5f fe8e 	uxtb.w	lr, lr
 800f27c:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 800f280:	fb0e 5507 	mla	r5, lr, r7, r5
 800f284:	fb1a fa04 	smulbb	sl, sl, r4
 800f288:	fa1f fc8c 	uxth.w	ip, ip
 800f28c:	b2ad      	uxth	r5, r5
 800f28e:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 800f292:	fb06 a607 	mla	r6, r6, r7, sl
 800f296:	f10c 0401 	add.w	r4, ip, #1
 800f29a:	f105 0a01 	add.w	sl, r5, #1
 800f29e:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 800f2a2:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 800f2a6:	b2b6      	uxth	r6, r6
 800f2a8:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 800f2ac:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 800f2b0:	ea4c 0c0a 	orr.w	ip, ip, sl
 800f2b4:	f106 0a01 	add.w	sl, r6, #1
 800f2b8:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 800f2bc:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 800f2c0:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 800f2c4:	ea4c 0c0a 	orr.w	ip, ip, sl
 800f2c8:	f820 c018 	strh.w	ip, [r0, r8, lsl #1]
 800f2cc:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 800f2ce:	4421      	add	r1, r4
 800f2d0:	9c14      	ldr	r4, [sp, #80]	; 0x50
 800f2d2:	f108 0801 	add.w	r8, r8, #1
 800f2d6:	4422      	add	r2, r4
 800f2d8:	e7a2      	b.n	800f220 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1f6>
 800f2da:	9c01      	ldr	r4, [sp, #4]
 800f2dc:	f834 4015 	ldrh.w	r4, [r4, r5, lsl #1]
 800f2e0:	f820 4018 	strh.w	r4, [r0, r8, lsl #1]
 800f2e4:	e7f2      	b.n	800f2cc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2a2>
 800f2e6:	b007      	add	sp, #28
 800f2e8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800f2ec <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 800f2ec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f2f0:	b085      	sub	sp, #20
 800f2f2:	9813      	ldr	r0, [sp, #76]	; 0x4c
 800f2f4:	9203      	str	r2, [sp, #12]
 800f2f6:	f9bd 205c 	ldrsh.w	r2, [sp, #92]	; 0x5c
 800f2fa:	9201      	str	r2, [sp, #4]
 800f2fc:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 800f300:	9100      	str	r1, [sp, #0]
 800f302:	6841      	ldr	r1, [r0, #4]
 800f304:	f89d 5064 	ldrb.w	r5, [sp, #100]	; 0x64
 800f308:	f9bd 8058 	ldrsh.w	r8, [sp, #88]	; 0x58
 800f30c:	fb01 2404 	mla	r4, r1, r4, r2
 800f310:	6802      	ldr	r2, [r0, #0]
 800f312:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 800f316:	9a18      	ldr	r2, [sp, #96]	; 0x60
 800f318:	fa1f fe85 	uxth.w	lr, r5
 800f31c:	6812      	ldr	r2, [r2, #0]
 800f31e:	9202      	str	r2, [sp, #8]
 800f320:	43ed      	mvns	r5, r5
 800f322:	b2ed      	uxtb	r5, r5
 800f324:	9a00      	ldr	r2, [sp, #0]
 800f326:	2a00      	cmp	r2, #0
 800f328:	dc03      	bgt.n	800f332 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x46>
 800f32a:	9a03      	ldr	r2, [sp, #12]
 800f32c:	2a00      	cmp	r2, #0
 800f32e:	f340 8117 	ble.w	800f560 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x274>
 800f332:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 800f334:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 800f338:	9a10      	ldr	r2, [sp, #64]	; 0x40
 800f33a:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 800f33e:	2b00      	cmp	r3, #0
 800f340:	dd0f      	ble.n	800f362 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x76>
 800f342:	1408      	asrs	r0, r1, #16
 800f344:	d406      	bmi.n	800f354 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x68>
 800f346:	4540      	cmp	r0, r8
 800f348:	da04      	bge.n	800f354 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x68>
 800f34a:	1410      	asrs	r0, r2, #16
 800f34c:	d402      	bmi.n	800f354 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x68>
 800f34e:	9e01      	ldr	r6, [sp, #4]
 800f350:	42b0      	cmp	r0, r6
 800f352:	db07      	blt.n	800f364 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x78>
 800f354:	9811      	ldr	r0, [sp, #68]	; 0x44
 800f356:	4401      	add	r1, r0
 800f358:	9812      	ldr	r0, [sp, #72]	; 0x48
 800f35a:	3b01      	subs	r3, #1
 800f35c:	4402      	add	r2, r0
 800f35e:	3402      	adds	r4, #2
 800f360:	e7ed      	b.n	800f33e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x52>
 800f362:	d069      	beq.n	800f438 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x14c>
 800f364:	9e11      	ldr	r6, [sp, #68]	; 0x44
 800f366:	1e58      	subs	r0, r3, #1
 800f368:	fb06 1600 	mla	r6, r6, r0, r1
 800f36c:	1436      	asrs	r6, r6, #16
 800f36e:	d459      	bmi.n	800f424 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x138>
 800f370:	4546      	cmp	r6, r8
 800f372:	da57      	bge.n	800f424 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x138>
 800f374:	9e12      	ldr	r6, [sp, #72]	; 0x48
 800f376:	fb06 2000 	mla	r0, r6, r0, r2
 800f37a:	1400      	asrs	r0, r0, #16
 800f37c:	d452      	bmi.n	800f424 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x138>
 800f37e:	9e01      	ldr	r6, [sp, #4]
 800f380:	42b0      	cmp	r0, r6
 800f382:	da4f      	bge.n	800f424 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x138>
 800f384:	469a      	mov	sl, r3
 800f386:	46a3      	mov	fp, r4
 800f388:	f1ba 0f00 	cmp.w	sl, #0
 800f38c:	dd50      	ble.n	800f430 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x144>
 800f38e:	140e      	asrs	r6, r1, #16
 800f390:	1410      	asrs	r0, r2, #16
 800f392:	fb08 6000 	mla	r0, r8, r0, r6
 800f396:	9e02      	ldr	r6, [sp, #8]
 800f398:	f836 0010 	ldrh.w	r0, [r6, r0, lsl #1]
 800f39c:	f8bb 6000 	ldrh.w	r6, [fp]
 800f3a0:	1237      	asrs	r7, r6, #8
 800f3a2:	ea4f 2c20 	mov.w	ip, r0, asr #8
 800f3a6:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 800f3aa:	fb17 f705 	smulbb	r7, r7, r5
 800f3ae:	ea4f 09e6 	mov.w	r9, r6, asr #3
 800f3b2:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 800f3b6:	00f6      	lsls	r6, r6, #3
 800f3b8:	fb0c 7c0e 	mla	ip, ip, lr, r7
 800f3bc:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 800f3c0:	10c7      	asrs	r7, r0, #3
 800f3c2:	b2f6      	uxtb	r6, r6
 800f3c4:	00c0      	lsls	r0, r0, #3
 800f3c6:	fb19 f905 	smulbb	r9, r9, r5
 800f3ca:	fb16 f605 	smulbb	r6, r6, r5
 800f3ce:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 800f3d2:	b2c0      	uxtb	r0, r0
 800f3d4:	fa1f fc8c 	uxth.w	ip, ip
 800f3d8:	fb07 970e 	mla	r7, r7, lr, r9
 800f3dc:	fb00 600e 	mla	r0, r0, lr, r6
 800f3e0:	b280      	uxth	r0, r0
 800f3e2:	b2bf      	uxth	r7, r7
 800f3e4:	f10c 0601 	add.w	r6, ip, #1
 800f3e8:	eb06 2c1c 	add.w	ip, r6, ip, lsr #8
 800f3ec:	f107 0901 	add.w	r9, r7, #1
 800f3f0:	1c46      	adds	r6, r0, #1
 800f3f2:	eb06 2610 	add.w	r6, r6, r0, lsr #8
 800f3f6:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 800f3fa:	9811      	ldr	r0, [sp, #68]	; 0x44
 800f3fc:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 800f400:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 800f404:	ea4f 1959 	mov.w	r9, r9, lsr #5
 800f408:	ea4c 0c06 	orr.w	ip, ip, r6
 800f40c:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 800f410:	4401      	add	r1, r0
 800f412:	9812      	ldr	r0, [sp, #72]	; 0x48
 800f414:	ea4c 0c09 	orr.w	ip, ip, r9
 800f418:	f82b cb02 	strh.w	ip, [fp], #2
 800f41c:	4402      	add	r2, r0
 800f41e:	f10a 3aff 	add.w	sl, sl, #4294967295
 800f422:	e7b1      	b.n	800f388 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9c>
 800f424:	f04f 0900 	mov.w	r9, #0
 800f428:	eb03 0009 	add.w	r0, r3, r9
 800f42c:	2800      	cmp	r0, #0
 800f42e:	dc41      	bgt.n	800f4b4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1c8>
 800f430:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 800f434:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 800f438:	9b00      	ldr	r3, [sp, #0]
 800f43a:	2b00      	cmp	r3, #0
 800f43c:	f340 8090 	ble.w	800f560 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x274>
 800f440:	ee30 0a04 	vadd.f32	s0, s0, s8
 800f444:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 800f448:	eec7 7a00 	vdiv.f32	s15, s14, s0
 800f44c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800f44e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 800f452:	ee31 1a05 	vadd.f32	s2, s2, s10
 800f456:	ee20 7aa7 	vmul.f32	s14, s1, s15
 800f45a:	eef0 6a62 	vmov.f32	s13, s5
 800f45e:	ee61 7a27 	vmul.f32	s15, s2, s15
 800f462:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 800f466:	ee77 2a62 	vsub.f32	s5, s14, s5
 800f46a:	edcd 6a0f 	vstr	s13, [sp, #60]	; 0x3c
 800f46e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 800f472:	eef0 6a43 	vmov.f32	s13, s6
 800f476:	ee37 3ac3 	vsub.f32	s6, s15, s6
 800f47a:	ee12 2a90 	vmov	r2, s5
 800f47e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 800f482:	fb92 f3f3 	sdiv	r3, r2, r3
 800f486:	ee13 2a10 	vmov	r2, s6
 800f48a:	9311      	str	r3, [sp, #68]	; 0x44
 800f48c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800f48e:	fb92 f3f3 	sdiv	r3, r2, r3
 800f492:	9312      	str	r3, [sp, #72]	; 0x48
 800f494:	9b00      	ldr	r3, [sp, #0]
 800f496:	9a03      	ldr	r2, [sp, #12]
 800f498:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 800f49c:	3b01      	subs	r3, #1
 800f49e:	9300      	str	r3, [sp, #0]
 800f4a0:	edcd 6a10 	vstr	s13, [sp, #64]	; 0x40
 800f4a4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800f4a6:	eeb0 3a67 	vmov.f32	s6, s15
 800f4aa:	bf08      	it	eq
 800f4ac:	4613      	moveq	r3, r2
 800f4ae:	eef0 2a47 	vmov.f32	s5, s14
 800f4b2:	e737      	b.n	800f324 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x38>
 800f4b4:	140e      	asrs	r6, r1, #16
 800f4b6:	d44c      	bmi.n	800f552 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x266>
 800f4b8:	4546      	cmp	r6, r8
 800f4ba:	da4a      	bge.n	800f552 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x266>
 800f4bc:	1410      	asrs	r0, r2, #16
 800f4be:	d448      	bmi.n	800f552 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x266>
 800f4c0:	9f01      	ldr	r7, [sp, #4]
 800f4c2:	42b8      	cmp	r0, r7
 800f4c4:	da45      	bge.n	800f552 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x266>
 800f4c6:	fb08 6000 	mla	r0, r8, r0, r6
 800f4ca:	9e02      	ldr	r6, [sp, #8]
 800f4cc:	f836 0010 	ldrh.w	r0, [r6, r0, lsl #1]
 800f4d0:	f06f 0601 	mvn.w	r6, #1
 800f4d4:	fb06 fb09 	mul.w	fp, r6, r9
 800f4d8:	ea4f 2c20 	mov.w	ip, r0, asr #8
 800f4dc:	f834 600b 	ldrh.w	r6, [r4, fp]
 800f4e0:	1237      	asrs	r7, r6, #8
 800f4e2:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 800f4e6:	fb17 f705 	smulbb	r7, r7, r5
 800f4ea:	ea4f 0ae6 	mov.w	sl, r6, asr #3
 800f4ee:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 800f4f2:	00f6      	lsls	r6, r6, #3
 800f4f4:	fb0c 7c0e 	mla	ip, ip, lr, r7
 800f4f8:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 800f4fc:	10c7      	asrs	r7, r0, #3
 800f4fe:	b2f6      	uxtb	r6, r6
 800f500:	00c0      	lsls	r0, r0, #3
 800f502:	fb1a fa05 	smulbb	sl, sl, r5
 800f506:	fb16 f605 	smulbb	r6, r6, r5
 800f50a:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 800f50e:	b2c0      	uxtb	r0, r0
 800f510:	fa1f fc8c 	uxth.w	ip, ip
 800f514:	fb07 a70e 	mla	r7, r7, lr, sl
 800f518:	fb00 600e 	mla	r0, r0, lr, r6
 800f51c:	b2bf      	uxth	r7, r7
 800f51e:	b280      	uxth	r0, r0
 800f520:	f10c 0601 	add.w	r6, ip, #1
 800f524:	eb06 2c1c 	add.w	ip, r6, ip, lsr #8
 800f528:	f107 0a01 	add.w	sl, r7, #1
 800f52c:	1c46      	adds	r6, r0, #1
 800f52e:	eb06 2610 	add.w	r6, r6, r0, lsr #8
 800f532:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 800f536:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 800f53a:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 800f53e:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 800f542:	ea4c 0c06 	orr.w	ip, ip, r6
 800f546:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 800f54a:	ea4c 0c0a 	orr.w	ip, ip, sl
 800f54e:	f824 c00b 	strh.w	ip, [r4, fp]
 800f552:	9811      	ldr	r0, [sp, #68]	; 0x44
 800f554:	4401      	add	r1, r0
 800f556:	9812      	ldr	r0, [sp, #72]	; 0x48
 800f558:	f109 39ff 	add.w	r9, r9, #4294967295
 800f55c:	4402      	add	r2, r0
 800f55e:	e763      	b.n	800f428 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x13c>
 800f560:	b005      	add	sp, #20
 800f562:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800f566 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 800f566:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f56a:	9811      	ldr	r0, [sp, #68]	; 0x44
 800f56c:	9201      	str	r2, [sp, #4]
 800f56e:	e9dd 2512 	ldrd	r2, r5, [sp, #72]	; 0x48
 800f572:	6844      	ldr	r4, [r0, #4]
 800f574:	6800      	ldr	r0, [r0, #0]
 800f576:	f9bd c050 	ldrsh.w	ip, [sp, #80]	; 0x50
 800f57a:	f9bd e054 	ldrsh.w	lr, [sp, #84]	; 0x54
 800f57e:	fb04 2505 	mla	r5, r4, r5, r2
 800f582:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 800f586:	9816      	ldr	r0, [sp, #88]	; 0x58
 800f588:	e9dd 760f 	ldrd	r7, r6, [sp, #60]	; 0x3c
 800f58c:	6802      	ldr	r2, [r0, #0]
 800f58e:	9200      	str	r2, [sp, #0]
 800f590:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 800f594:	2900      	cmp	r1, #0
 800f596:	dc03      	bgt.n	800f5a0 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3a>
 800f598:	9a01      	ldr	r2, [sp, #4]
 800f59a:	2a00      	cmp	r2, #0
 800f59c:	f340 8095 	ble.w	800f6ca <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x164>
 800f5a0:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 800f5a2:	f502 4400 	add.w	r4, r2, #32768	; 0x8000
 800f5a6:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 800f5a8:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 800f5ac:	2b00      	cmp	r3, #0
 800f5ae:	dd0e      	ble.n	800f5ce <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x68>
 800f5b0:	ea5f 4824 	movs.w	r8, r4, asr #16
 800f5b4:	d406      	bmi.n	800f5c4 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x5e>
 800f5b6:	45e0      	cmp	r8, ip
 800f5b8:	da04      	bge.n	800f5c4 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x5e>
 800f5ba:	ea5f 4820 	movs.w	r8, r0, asr #16
 800f5be:	d401      	bmi.n	800f5c4 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x5e>
 800f5c0:	45f0      	cmp	r8, lr
 800f5c2:	db05      	blt.n	800f5d0 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6a>
 800f5c4:	443c      	add	r4, r7
 800f5c6:	4430      	add	r0, r6
 800f5c8:	3b01      	subs	r3, #1
 800f5ca:	3502      	adds	r5, #2
 800f5cc:	e7ee      	b.n	800f5ac <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x46>
 800f5ce:	d010      	beq.n	800f5f2 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x8c>
 800f5d0:	f103 38ff 	add.w	r8, r3, #4294967295
 800f5d4:	fb07 4908 	mla	r9, r7, r8, r4
 800f5d8:	ea5f 4929 	movs.w	r9, r9, asr #16
 800f5dc:	d53d      	bpl.n	800f65a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf4>
 800f5de:	4698      	mov	r8, r3
 800f5e0:	eb05 0b43 	add.w	fp, r5, r3, lsl #1
 800f5e4:	f1b8 0f00 	cmp.w	r8, #0
 800f5e8:	dc55      	bgt.n	800f696 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x130>
 800f5ea:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 800f5ee:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 800f5f2:	2900      	cmp	r1, #0
 800f5f4:	dd69      	ble.n	800f6ca <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x164>
 800f5f6:	ee30 0a04 	vadd.f32	s0, s0, s8
 800f5fa:	ee70 0aa4 	vadd.f32	s1, s1, s9
 800f5fe:	eec6 7a80 	vdiv.f32	s15, s13, s0
 800f602:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800f604:	3901      	subs	r1, #1
 800f606:	ee31 1a05 	vadd.f32	s2, s2, s10
 800f60a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 800f60e:	eeb0 6a62 	vmov.f32	s12, s5
 800f612:	ee61 7a27 	vmul.f32	s15, s2, s15
 800f616:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 800f61a:	ee77 2a62 	vsub.f32	s5, s14, s5
 800f61e:	ed8d 6a0d 	vstr	s12, [sp, #52]	; 0x34
 800f622:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 800f626:	eeb0 6a43 	vmov.f32	s12, s6
 800f62a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 800f62e:	ee12 2a90 	vmov	r2, s5
 800f632:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 800f636:	fb92 f7f3 	sdiv	r7, r2, r3
 800f63a:	ee13 2a10 	vmov	r2, s6
 800f63e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 800f642:	fb92 f6f3 	sdiv	r6, r2, r3
 800f646:	9a01      	ldr	r2, [sp, #4]
 800f648:	ed8d 6a0e 	vstr	s12, [sp, #56]	; 0x38
 800f64c:	bf08      	it	eq
 800f64e:	4613      	moveq	r3, r2
 800f650:	eeb0 3a67 	vmov.f32	s6, s15
 800f654:	eef0 2a47 	vmov.f32	s5, s14
 800f658:	e79c      	b.n	800f594 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2e>
 800f65a:	45e1      	cmp	r9, ip
 800f65c:	dabf      	bge.n	800f5de <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x78>
 800f65e:	fb06 0808 	mla	r8, r6, r8, r0
 800f662:	ea5f 4828 	movs.w	r8, r8, asr #16
 800f666:	d4ba      	bmi.n	800f5de <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x78>
 800f668:	45f0      	cmp	r8, lr
 800f66a:	dab8      	bge.n	800f5de <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x78>
 800f66c:	4698      	mov	r8, r3
 800f66e:	46aa      	mov	sl, r5
 800f670:	f1b8 0f00 	cmp.w	r8, #0
 800f674:	ddb9      	ble.n	800f5ea <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x84>
 800f676:	ea4f 4920 	mov.w	r9, r0, asr #16
 800f67a:	ea4f 4b24 	mov.w	fp, r4, asr #16
 800f67e:	fb0c b909 	mla	r9, ip, r9, fp
 800f682:	9a00      	ldr	r2, [sp, #0]
 800f684:	f832 9019 	ldrh.w	r9, [r2, r9, lsl #1]
 800f688:	f82a 9b02 	strh.w	r9, [sl], #2
 800f68c:	443c      	add	r4, r7
 800f68e:	4430      	add	r0, r6
 800f690:	f108 38ff 	add.w	r8, r8, #4294967295
 800f694:	e7ec      	b.n	800f670 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x10a>
 800f696:	ea5f 4a24 	movs.w	sl, r4, asr #16
 800f69a:	d411      	bmi.n	800f6c0 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x15a>
 800f69c:	45e2      	cmp	sl, ip
 800f69e:	da0f      	bge.n	800f6c0 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x15a>
 800f6a0:	ea5f 4920 	movs.w	r9, r0, asr #16
 800f6a4:	d40c      	bmi.n	800f6c0 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x15a>
 800f6a6:	45f1      	cmp	r9, lr
 800f6a8:	da0a      	bge.n	800f6c0 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x15a>
 800f6aa:	fb0c a909 	mla	r9, ip, r9, sl
 800f6ae:	9a00      	ldr	r2, [sp, #0]
 800f6b0:	f832 a019 	ldrh.w	sl, [r2, r9, lsl #1]
 800f6b4:	f06f 0201 	mvn.w	r2, #1
 800f6b8:	fb02 f908 	mul.w	r9, r2, r8
 800f6bc:	f82b a009 	strh.w	sl, [fp, r9]
 800f6c0:	443c      	add	r4, r7
 800f6c2:	4430      	add	r0, r6
 800f6c4:	f108 38ff 	add.w	r8, r8, #4294967295
 800f6c8:	e78c      	b.n	800f5e4 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7e>
 800f6ca:	b003      	add	sp, #12
 800f6cc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800f6d0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 800f6d0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f6d4:	b087      	sub	sp, #28
 800f6d6:	468b      	mov	fp, r1
 800f6d8:	9204      	str	r2, [sp, #16]
 800f6da:	f9bd 2064 	ldrsh.w	r2, [sp, #100]	; 0x64
 800f6de:	9815      	ldr	r0, [sp, #84]	; 0x54
 800f6e0:	9201      	str	r2, [sp, #4]
 800f6e2:	f89d 206c 	ldrb.w	r2, [sp, #108]	; 0x6c
 800f6e6:	9205      	str	r2, [sp, #20]
 800f6e8:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 800f6ec:	6841      	ldr	r1, [r0, #4]
 800f6ee:	f9bd 8060 	ldrsh.w	r8, [sp, #96]	; 0x60
 800f6f2:	fb01 2404 	mla	r4, r1, r4, r2
 800f6f6:	6802      	ldr	r2, [r0, #0]
 800f6f8:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 800f6fc:	9a1a      	ldr	r2, [sp, #104]	; 0x68
 800f6fe:	6812      	ldr	r2, [r2, #0]
 800f700:	9203      	str	r2, [sp, #12]
 800f702:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 800f706:	f1bb 0f00 	cmp.w	fp, #0
 800f70a:	dc03      	bgt.n	800f714 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x44>
 800f70c:	9a04      	ldr	r2, [sp, #16]
 800f70e:	2a00      	cmp	r2, #0
 800f710:	f340 812c 	ble.w	800f96c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x29c>
 800f714:	9a11      	ldr	r2, [sp, #68]	; 0x44
 800f716:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 800f71a:	9a12      	ldr	r2, [sp, #72]	; 0x48
 800f71c:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 800f720:	2b00      	cmp	r3, #0
 800f722:	dd0f      	ble.n	800f744 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x74>
 800f724:	1402      	asrs	r2, r0, #16
 800f726:	d406      	bmi.n	800f736 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x66>
 800f728:	4542      	cmp	r2, r8
 800f72a:	da04      	bge.n	800f736 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x66>
 800f72c:	140a      	asrs	r2, r1, #16
 800f72e:	d402      	bmi.n	800f736 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x66>
 800f730:	9d01      	ldr	r5, [sp, #4]
 800f732:	42aa      	cmp	r2, r5
 800f734:	db07      	blt.n	800f746 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x76>
 800f736:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 800f738:	4410      	add	r0, r2
 800f73a:	9a14      	ldr	r2, [sp, #80]	; 0x50
 800f73c:	3b01      	subs	r3, #1
 800f73e:	4411      	add	r1, r2
 800f740:	3402      	adds	r4, #2
 800f742:	e7ed      	b.n	800f720 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x50>
 800f744:	d01a      	beq.n	800f77c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xac>
 800f746:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 800f748:	1e5a      	subs	r2, r3, #1
 800f74a:	fb05 0502 	mla	r5, r5, r2, r0
 800f74e:	142d      	asrs	r5, r5, #16
 800f750:	d40a      	bmi.n	800f768 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x98>
 800f752:	4545      	cmp	r5, r8
 800f754:	da08      	bge.n	800f768 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x98>
 800f756:	9d14      	ldr	r5, [sp, #80]	; 0x50
 800f758:	fb05 1202 	mla	r2, r5, r2, r1
 800f75c:	1412      	asrs	r2, r2, #16
 800f75e:	d403      	bmi.n	800f768 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x98>
 800f760:	9d01      	ldr	r5, [sp, #4]
 800f762:	42aa      	cmp	r2, r5
 800f764:	f2c0 80a6 	blt.w	800f8b4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1e4>
 800f768:	f04f 0c00 	mov.w	ip, #0
 800f76c:	eb03 020c 	add.w	r2, r3, ip
 800f770:	2a00      	cmp	r2, #0
 800f772:	dc3e      	bgt.n	800f7f2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x122>
 800f774:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 800f778:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 800f77c:	f1bb 0f00 	cmp.w	fp, #0
 800f780:	f340 80f4 	ble.w	800f96c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x29c>
 800f784:	ee30 0a04 	vadd.f32	s0, s0, s8
 800f788:	ee70 0aa4 	vadd.f32	s1, s1, s9
 800f78c:	eec6 7a80 	vdiv.f32	s15, s13, s0
 800f790:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800f792:	f1bb 0b01 	subs.w	fp, fp, #1
 800f796:	ee31 1a05 	vadd.f32	s2, s2, s10
 800f79a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 800f79e:	eeb0 6a62 	vmov.f32	s12, s5
 800f7a2:	ee61 7a27 	vmul.f32	s15, s2, s15
 800f7a6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 800f7aa:	ee77 2a62 	vsub.f32	s5, s14, s5
 800f7ae:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 800f7b2:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 800f7b6:	eeb0 6a43 	vmov.f32	s12, s6
 800f7ba:	ee37 3ac3 	vsub.f32	s6, s15, s6
 800f7be:	ee12 2a90 	vmov	r2, s5
 800f7c2:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 800f7c6:	fb92 f3f3 	sdiv	r3, r2, r3
 800f7ca:	ee13 2a10 	vmov	r2, s6
 800f7ce:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 800f7d2:	9313      	str	r3, [sp, #76]	; 0x4c
 800f7d4:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800f7d6:	fb92 f3f3 	sdiv	r3, r2, r3
 800f7da:	9a04      	ldr	r2, [sp, #16]
 800f7dc:	9314      	str	r3, [sp, #80]	; 0x50
 800f7de:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 800f7e2:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800f7e4:	eeb0 3a67 	vmov.f32	s6, s15
 800f7e8:	bf08      	it	eq
 800f7ea:	4613      	moveq	r3, r2
 800f7ec:	eef0 2a47 	vmov.f32	s5, s14
 800f7f0:	e789      	b.n	800f706 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x36>
 800f7f2:	1405      	asrs	r5, r0, #16
 800f7f4:	d457      	bmi.n	800f8a6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 800f7f6:	4545      	cmp	r5, r8
 800f7f8:	da55      	bge.n	800f8a6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 800f7fa:	140a      	asrs	r2, r1, #16
 800f7fc:	d453      	bmi.n	800f8a6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 800f7fe:	9e01      	ldr	r6, [sp, #4]
 800f800:	42b2      	cmp	r2, r6
 800f802:	da50      	bge.n	800f8a6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 800f804:	fb08 5202 	mla	r2, r8, r2, r5
 800f808:	9d03      	ldr	r5, [sp, #12]
 800f80a:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 800f80e:	0e2e      	lsrs	r6, r5, #24
 800f810:	d049      	beq.n	800f8a6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 800f812:	f06f 0201 	mvn.w	r2, #1
 800f816:	fb02 f20c 	mul.w	r2, r2, ip
 800f81a:	9202      	str	r2, [sp, #8]
 800f81c:	f834 e002 	ldrh.w	lr, [r4, r2]
 800f820:	9a05      	ldr	r2, [sp, #20]
 800f822:	4356      	muls	r6, r2
 800f824:	1c72      	adds	r2, r6, #1
 800f826:	eb02 2226 	add.w	r2, r2, r6, asr #8
 800f82a:	1212      	asrs	r2, r2, #8
 800f82c:	fa1f f982 	uxth.w	r9, r2
 800f830:	ea4f 272e 	mov.w	r7, lr, asr #8
 800f834:	f3c5 4607 	ubfx	r6, r5, #16, #8
 800f838:	43d2      	mvns	r2, r2
 800f83a:	b2d2      	uxtb	r2, r2
 800f83c:	fb16 f609 	smulbb	r6, r6, r9
 800f840:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 800f844:	fb07 6702 	mla	r7, r7, r2, r6
 800f848:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 800f84c:	ea4f 06ee 	mov.w	r6, lr, asr #3
 800f850:	b2ed      	uxtb	r5, r5
 800f852:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 800f856:	fa5f fe8e 	uxtb.w	lr, lr
 800f85a:	fb15 f509 	smulbb	r5, r5, r9
 800f85e:	fb0e 5502 	mla	r5, lr, r2, r5
 800f862:	b2bf      	uxth	r7, r7
 800f864:	fb1a fa09 	smulbb	sl, sl, r9
 800f868:	b2ad      	uxth	r5, r5
 800f86a:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 800f86e:	fb06 a602 	mla	r6, r6, r2, sl
 800f872:	1c7a      	adds	r2, r7, #1
 800f874:	f105 0a01 	add.w	sl, r5, #1
 800f878:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 800f87c:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 800f880:	b2b6      	uxth	r6, r6
 800f882:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 800f886:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 800f88a:	ea47 070a 	orr.w	r7, r7, sl
 800f88e:	f106 0a01 	add.w	sl, r6, #1
 800f892:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 800f896:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 800f89a:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 800f89e:	9a02      	ldr	r2, [sp, #8]
 800f8a0:	ea47 070a 	orr.w	r7, r7, sl
 800f8a4:	52a7      	strh	r7, [r4, r2]
 800f8a6:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 800f8a8:	4410      	add	r0, r2
 800f8aa:	9a14      	ldr	r2, [sp, #80]	; 0x50
 800f8ac:	f10c 3cff 	add.w	ip, ip, #4294967295
 800f8b0:	4411      	add	r1, r2
 800f8b2:	e75b      	b.n	800f76c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9c>
 800f8b4:	f04f 0e00 	mov.w	lr, #0
 800f8b8:	eba3 020e 	sub.w	r2, r3, lr
 800f8bc:	2a00      	cmp	r2, #0
 800f8be:	f77f af59 	ble.w	800f774 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xa4>
 800f8c2:	1405      	asrs	r5, r0, #16
 800f8c4:	140a      	asrs	r2, r1, #16
 800f8c6:	fb08 5202 	mla	r2, r8, r2, r5
 800f8ca:	9d03      	ldr	r5, [sp, #12]
 800f8cc:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 800f8d0:	0e2e      	lsrs	r6, r5, #24
 800f8d2:	d044      	beq.n	800f95e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x28e>
 800f8d4:	9a05      	ldr	r2, [sp, #20]
 800f8d6:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 800f8da:	4356      	muls	r6, r2
 800f8dc:	1c72      	adds	r2, r6, #1
 800f8de:	eb02 2226 	add.w	r2, r2, r6, asr #8
 800f8e2:	1212      	asrs	r2, r2, #8
 800f8e4:	fa1f f982 	uxth.w	r9, r2
 800f8e8:	ea4f 272c 	mov.w	r7, ip, asr #8
 800f8ec:	f3c5 4607 	ubfx	r6, r5, #16, #8
 800f8f0:	43d2      	mvns	r2, r2
 800f8f2:	b2d2      	uxtb	r2, r2
 800f8f4:	fb16 f609 	smulbb	r6, r6, r9
 800f8f8:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 800f8fc:	fb07 6702 	mla	r7, r7, r2, r6
 800f900:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 800f904:	ea4f 06ec 	mov.w	r6, ip, asr #3
 800f908:	b2ed      	uxtb	r5, r5
 800f90a:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 800f90e:	fa5f fc8c 	uxtb.w	ip, ip
 800f912:	fb15 f509 	smulbb	r5, r5, r9
 800f916:	fb0c 5502 	mla	r5, ip, r2, r5
 800f91a:	b2bf      	uxth	r7, r7
 800f91c:	fb1a fa09 	smulbb	sl, sl, r9
 800f920:	b2ad      	uxth	r5, r5
 800f922:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 800f926:	fb06 a602 	mla	r6, r6, r2, sl
 800f92a:	1c7a      	adds	r2, r7, #1
 800f92c:	f105 0a01 	add.w	sl, r5, #1
 800f930:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 800f934:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 800f938:	b2b6      	uxth	r6, r6
 800f93a:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 800f93e:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 800f942:	ea47 070a 	orr.w	r7, r7, sl
 800f946:	f106 0a01 	add.w	sl, r6, #1
 800f94a:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 800f94e:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 800f952:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 800f956:	ea47 070a 	orr.w	r7, r7, sl
 800f95a:	f824 701e 	strh.w	r7, [r4, lr, lsl #1]
 800f95e:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 800f960:	4410      	add	r0, r2
 800f962:	9a14      	ldr	r2, [sp, #80]	; 0x50
 800f964:	f10e 0e01 	add.w	lr, lr, #1
 800f968:	4411      	add	r1, r2
 800f96a:	e7a5      	b.n	800f8b8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1e8>
 800f96c:	b007      	add	sp, #28
 800f96e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

0800f974 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 800f974:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f978:	b087      	sub	sp, #28
 800f97a:	468b      	mov	fp, r1
 800f97c:	9c15      	ldr	r4, [sp, #84]	; 0x54
 800f97e:	9205      	str	r2, [sp, #20]
 800f980:	f9bd 2064 	ldrsh.w	r2, [sp, #100]	; 0x64
 800f984:	9201      	str	r2, [sp, #4]
 800f986:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
 800f98a:	6861      	ldr	r1, [r4, #4]
 800f98c:	f9bd 9060 	ldrsh.w	r9, [sp, #96]	; 0x60
 800f990:	fb01 2000 	mla	r0, r1, r0, r2
 800f994:	6822      	ldr	r2, [r4, #0]
 800f996:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 800f99a:	9a1a      	ldr	r2, [sp, #104]	; 0x68
 800f99c:	6812      	ldr	r2, [r2, #0]
 800f99e:	9203      	str	r2, [sp, #12]
 800f9a0:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 800f9a4:	f1bb 0f00 	cmp.w	fp, #0
 800f9a8:	dc03      	bgt.n	800f9b2 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3e>
 800f9aa:	9a05      	ldr	r2, [sp, #20]
 800f9ac:	2a00      	cmp	r2, #0
 800f9ae:	f340 814b 	ble.w	800fc48 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2d4>
 800f9b2:	9a11      	ldr	r2, [sp, #68]	; 0x44
 800f9b4:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 800f9b8:	9a12      	ldr	r2, [sp, #72]	; 0x48
 800f9ba:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 800f9be:	2b00      	cmp	r3, #0
 800f9c0:	dd0f      	ble.n	800f9e2 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6e>
 800f9c2:	140c      	asrs	r4, r1, #16
 800f9c4:	d406      	bmi.n	800f9d4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x60>
 800f9c6:	454c      	cmp	r4, r9
 800f9c8:	da04      	bge.n	800f9d4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x60>
 800f9ca:	1414      	asrs	r4, r2, #16
 800f9cc:	d402      	bmi.n	800f9d4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x60>
 800f9ce:	9d01      	ldr	r5, [sp, #4]
 800f9d0:	42ac      	cmp	r4, r5
 800f9d2:	db07      	blt.n	800f9e4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x70>
 800f9d4:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 800f9d6:	4421      	add	r1, r4
 800f9d8:	9c14      	ldr	r4, [sp, #80]	; 0x50
 800f9da:	3b01      	subs	r3, #1
 800f9dc:	4422      	add	r2, r4
 800f9de:	3002      	adds	r0, #2
 800f9e0:	e7ed      	b.n	800f9be <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4a>
 800f9e2:	d018      	beq.n	800fa16 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xa2>
 800f9e4:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 800f9e6:	1e5c      	subs	r4, r3, #1
 800f9e8:	fb05 1504 	mla	r5, r5, r4, r1
 800f9ec:	142d      	asrs	r5, r5, #16
 800f9ee:	d40a      	bmi.n	800fa06 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x92>
 800f9f0:	454d      	cmp	r5, r9
 800f9f2:	da08      	bge.n	800fa06 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x92>
 800f9f4:	9d14      	ldr	r5, [sp, #80]	; 0x50
 800f9f6:	fb05 2404 	mla	r4, r5, r4, r2
 800f9fa:	1424      	asrs	r4, r4, #16
 800f9fc:	d403      	bmi.n	800fa06 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x92>
 800f9fe:	9d01      	ldr	r5, [sp, #4]
 800fa00:	42ac      	cmp	r4, r5
 800fa02:	f2c0 80bb 	blt.w	800fb7c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x208>
 800fa06:	2700      	movs	r7, #0
 800fa08:	19dc      	adds	r4, r3, r7
 800fa0a:	2c00      	cmp	r4, #0
 800fa0c:	dc3e      	bgt.n	800fa8c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x118>
 800fa0e:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 800fa12:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 800fa16:	f1bb 0f00 	cmp.w	fp, #0
 800fa1a:	f340 8115 	ble.w	800fc48 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2d4>
 800fa1e:	ee30 0a04 	vadd.f32	s0, s0, s8
 800fa22:	ee70 0aa4 	vadd.f32	s1, s1, s9
 800fa26:	eec6 7a80 	vdiv.f32	s15, s13, s0
 800fa2a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800fa2c:	f1bb 0b01 	subs.w	fp, fp, #1
 800fa30:	ee31 1a05 	vadd.f32	s2, s2, s10
 800fa34:	ee20 7aa7 	vmul.f32	s14, s1, s15
 800fa38:	eeb0 6a62 	vmov.f32	s12, s5
 800fa3c:	ee61 7a27 	vmul.f32	s15, s2, s15
 800fa40:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 800fa44:	ee77 2a62 	vsub.f32	s5, s14, s5
 800fa48:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 800fa4c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 800fa50:	eeb0 6a43 	vmov.f32	s12, s6
 800fa54:	ee37 3ac3 	vsub.f32	s6, s15, s6
 800fa58:	ee12 2a90 	vmov	r2, s5
 800fa5c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 800fa60:	fb92 f3f3 	sdiv	r3, r2, r3
 800fa64:	ee13 2a10 	vmov	r2, s6
 800fa68:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 800fa6c:	9313      	str	r3, [sp, #76]	; 0x4c
 800fa6e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800fa70:	fb92 f3f3 	sdiv	r3, r2, r3
 800fa74:	9a05      	ldr	r2, [sp, #20]
 800fa76:	9314      	str	r3, [sp, #80]	; 0x50
 800fa78:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 800fa7c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800fa7e:	eeb0 3a67 	vmov.f32	s6, s15
 800fa82:	bf08      	it	eq
 800fa84:	4613      	moveq	r3, r2
 800fa86:	eef0 2a47 	vmov.f32	s5, s14
 800fa8a:	e78b      	b.n	800f9a4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x30>
 800fa8c:	140d      	asrs	r5, r1, #16
 800fa8e:	d45c      	bmi.n	800fb4a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 800fa90:	454d      	cmp	r5, r9
 800fa92:	da5a      	bge.n	800fb4a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 800fa94:	1414      	asrs	r4, r2, #16
 800fa96:	d458      	bmi.n	800fb4a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 800fa98:	9e01      	ldr	r6, [sp, #4]
 800fa9a:	42b4      	cmp	r4, r6
 800fa9c:	da55      	bge.n	800fb4a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 800fa9e:	fb09 5404 	mla	r4, r9, r4, r5
 800faa2:	9d03      	ldr	r5, [sp, #12]
 800faa4:	f855 4024 	ldr.w	r4, [r5, r4, lsl #2]
 800faa8:	ea5f 6e14 	movs.w	lr, r4, lsr #24
 800faac:	d04d      	beq.n	800fb4a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 800faae:	0a26      	lsrs	r6, r4, #8
 800fab0:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 800fab4:	fa5f f58e 	uxtb.w	r5, lr
 800fab8:	ea4f 4c14 	mov.w	ip, r4, lsr #16
 800fabc:	9604      	str	r6, [sp, #16]
 800fabe:	d04a      	beq.n	800fb56 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1e2>
 800fac0:	f06f 0601 	mvn.w	r6, #1
 800fac4:	437e      	muls	r6, r7
 800fac6:	fa1f fa85 	uxth.w	sl, r5
 800faca:	f830 8006 	ldrh.w	r8, [r0, r6]
 800face:	9602      	str	r6, [sp, #8]
 800fad0:	ea4f 2e28 	mov.w	lr, r8, asr #8
 800fad4:	43ed      	mvns	r5, r5
 800fad6:	fa5f fc8c 	uxtb.w	ip, ip
 800fada:	b2ed      	uxtb	r5, r5
 800fadc:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 800fae0:	fb1c fc0a 	smulbb	ip, ip, sl
 800fae4:	fb0e cc05 	mla	ip, lr, r5, ip
 800fae8:	b2e4      	uxtb	r4, r4
 800faea:	ea4f 0ee8 	mov.w	lr, r8, asr #3
 800faee:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 800faf2:	f89d 6010 	ldrb.w	r6, [sp, #16]
 800faf6:	fa5f f888 	uxtb.w	r8, r8
 800fafa:	fb14 f40a 	smulbb	r4, r4, sl
 800fafe:	fb08 4405 	mla	r4, r8, r5, r4
 800fb02:	b2a4      	uxth	r4, r4
 800fb04:	fa1f fc8c 	uxth.w	ip, ip
 800fb08:	fb16 f60a 	smulbb	r6, r6, sl
 800fb0c:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 800fb10:	fb0e 6e05 	mla	lr, lr, r5, r6
 800fb14:	1c66      	adds	r6, r4, #1
 800fb16:	f10c 0501 	add.w	r5, ip, #1
 800fb1a:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 800fb1e:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 800fb22:	fa1f fe8e 	uxth.w	lr, lr
 800fb26:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 800fb2a:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 800fb2e:	ea4c 0c06 	orr.w	ip, ip, r6
 800fb32:	f10e 0601 	add.w	r6, lr, #1
 800fb36:	eb06 261e 	add.w	r6, r6, lr, lsr #8
 800fb3a:	0976      	lsrs	r6, r6, #5
 800fb3c:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 800fb40:	9c02      	ldr	r4, [sp, #8]
 800fb42:	ea4c 0c06 	orr.w	ip, ip, r6
 800fb46:	f820 c004 	strh.w	ip, [r0, r4]
 800fb4a:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 800fb4c:	4421      	add	r1, r4
 800fb4e:	9c14      	ldr	r4, [sp, #80]	; 0x50
 800fb50:	3f01      	subs	r7, #1
 800fb52:	4422      	add	r2, r4
 800fb54:	e758      	b.n	800fa08 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x94>
 800fb56:	4e3e      	ldr	r6, [pc, #248]	; (800fc50 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2dc>)
 800fb58:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 800fb5c:	ea06 2c0c 	and.w	ip, r6, ip, lsl #8
 800fb60:	ea4c 0c04 	orr.w	ip, ip, r4
 800fb64:	9c04      	ldr	r4, [sp, #16]
 800fb66:	f06f 0501 	mvn.w	r5, #1
 800fb6a:	00e6      	lsls	r6, r4, #3
 800fb6c:	437d      	muls	r5, r7
 800fb6e:	f406 64fc 	and.w	r4, r6, #2016	; 0x7e0
 800fb72:	ea4c 0c04 	orr.w	ip, ip, r4
 800fb76:	f820 c005 	strh.w	ip, [r0, r5]
 800fb7a:	e7e6      	b.n	800fb4a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 800fb7c:	f04f 0800 	mov.w	r8, #0
 800fb80:	eba3 0408 	sub.w	r4, r3, r8
 800fb84:	2c00      	cmp	r4, #0
 800fb86:	f77f af42 	ble.w	800fa0e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9a>
 800fb8a:	140d      	asrs	r5, r1, #16
 800fb8c:	1414      	asrs	r4, r2, #16
 800fb8e:	fb09 5404 	mla	r4, r9, r4, r5
 800fb92:	9d03      	ldr	r5, [sp, #12]
 800fb94:	f855 4024 	ldr.w	r4, [r5, r4, lsl #2]
 800fb98:	ea5f 6c14 	movs.w	ip, r4, lsr #24
 800fb9c:	d042      	beq.n	800fc24 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2b0>
 800fb9e:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 800fba2:	fa5f f58c 	uxtb.w	r5, ip
 800fba6:	ea4f 4714 	mov.w	r7, r4, lsr #16
 800fbaa:	ea4f 2614 	mov.w	r6, r4, lsr #8
 800fbae:	d040      	beq.n	800fc32 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2be>
 800fbb0:	f830 e018 	ldrh.w	lr, [r0, r8, lsl #1]
 800fbb4:	fa1f fa85 	uxth.w	sl, r5
 800fbb8:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 800fbbc:	43ed      	mvns	r5, r5
 800fbbe:	b2ff      	uxtb	r7, r7
 800fbc0:	b2ed      	uxtb	r5, r5
 800fbc2:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 800fbc6:	fb17 f70a 	smulbb	r7, r7, sl
 800fbca:	fb0c 7705 	mla	r7, ip, r5, r7
 800fbce:	b2e4      	uxtb	r4, r4
 800fbd0:	ea4f 0cee 	mov.w	ip, lr, asr #3
 800fbd4:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 800fbd8:	fa5f fe8e 	uxtb.w	lr, lr
 800fbdc:	fb14 f40a 	smulbb	r4, r4, sl
 800fbe0:	fb0e 4405 	mla	r4, lr, r5, r4
 800fbe4:	b2f6      	uxtb	r6, r6
 800fbe6:	b2bf      	uxth	r7, r7
 800fbe8:	fb16 f60a 	smulbb	r6, r6, sl
 800fbec:	b2a4      	uxth	r4, r4
 800fbee:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 800fbf2:	fb0c 6c05 	mla	ip, ip, r5, r6
 800fbf6:	1c7d      	adds	r5, r7, #1
 800fbf8:	1c66      	adds	r6, r4, #1
 800fbfa:	eb05 2717 	add.w	r7, r5, r7, lsr #8
 800fbfe:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 800fc02:	fa1f fc8c 	uxth.w	ip, ip
 800fc06:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 800fc0a:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 800fc0e:	4337      	orrs	r7, r6
 800fc10:	f10c 0601 	add.w	r6, ip, #1
 800fc14:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 800fc18:	0976      	lsrs	r6, r6, #5
 800fc1a:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 800fc1e:	4337      	orrs	r7, r6
 800fc20:	f820 7018 	strh.w	r7, [r0, r8, lsl #1]
 800fc24:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 800fc26:	4421      	add	r1, r4
 800fc28:	9c14      	ldr	r4, [sp, #80]	; 0x50
 800fc2a:	f108 0801 	add.w	r8, r8, #1
 800fc2e:	4422      	add	r2, r4
 800fc30:	e7a6      	b.n	800fb80 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x20c>
 800fc32:	4d07      	ldr	r5, [pc, #28]	; (800fc50 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2dc>)
 800fc34:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 800fc38:	ea05 2707 	and.w	r7, r5, r7, lsl #8
 800fc3c:	00f6      	lsls	r6, r6, #3
 800fc3e:	4327      	orrs	r7, r4
 800fc40:	f406 64fc 	and.w	r4, r6, #2016	; 0x7e0
 800fc44:	4327      	orrs	r7, r4
 800fc46:	e7eb      	b.n	800fc20 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2ac>
 800fc48:	b007      	add	sp, #28
 800fc4a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800fc4e:	bf00      	nop
 800fc50:	fffff800 	.word	0xfffff800

0800fc54 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 800fc54:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800fc58:	b087      	sub	sp, #28
 800fc5a:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 800fc5e:	9204      	str	r2, [sp, #16]
 800fc60:	f9bd 2060 	ldrsh.w	r2, [sp, #96]	; 0x60
 800fc64:	9200      	str	r2, [sp, #0]
 800fc66:	f9bd 2064 	ldrsh.w	r2, [sp, #100]	; 0x64
 800fc6a:	9c15      	ldr	r4, [sp, #84]	; 0x54
 800fc6c:	9201      	str	r2, [sp, #4]
 800fc6e:	f89d 206c 	ldrb.w	r2, [sp, #108]	; 0x6c
 800fc72:	9205      	str	r2, [sp, #20]
 800fc74:	e9dd 2516 	ldrd	r2, r5, [sp, #88]	; 0x58
 800fc78:	6860      	ldr	r0, [r4, #4]
 800fc7a:	fb00 2505 	mla	r5, r0, r5, r2
 800fc7e:	6822      	ldr	r2, [r4, #0]
 800fc80:	eb02 0545 	add.w	r5, r2, r5, lsl #1
 800fc84:	9a00      	ldr	r2, [sp, #0]
 800fc86:	3201      	adds	r2, #1
 800fc88:	f022 0201 	bic.w	r2, r2, #1
 800fc8c:	9202      	str	r2, [sp, #8]
 800fc8e:	9a1a      	ldr	r2, [sp, #104]	; 0x68
 800fc90:	6812      	ldr	r2, [r2, #0]
 800fc92:	9203      	str	r2, [sp, #12]
 800fc94:	2900      	cmp	r1, #0
 800fc96:	dc03      	bgt.n	800fca0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4c>
 800fc98:	9a04      	ldr	r2, [sp, #16]
 800fc9a:	2a00      	cmp	r2, #0
 800fc9c:	f340 814c 	ble.w	800ff38 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2e4>
 800fca0:	9a11      	ldr	r2, [sp, #68]	; 0x44
 800fca2:	f502 4400 	add.w	r4, r2, #32768	; 0x8000
 800fca6:	9a12      	ldr	r2, [sp, #72]	; 0x48
 800fca8:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 800fcac:	2b00      	cmp	r3, #0
 800fcae:	dd10      	ble.n	800fcd2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7e>
 800fcb0:	1422      	asrs	r2, r4, #16
 800fcb2:	d407      	bmi.n	800fcc4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x70>
 800fcb4:	9e00      	ldr	r6, [sp, #0]
 800fcb6:	4296      	cmp	r6, r2
 800fcb8:	dd04      	ble.n	800fcc4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x70>
 800fcba:	1402      	asrs	r2, r0, #16
 800fcbc:	d402      	bmi.n	800fcc4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x70>
 800fcbe:	9e01      	ldr	r6, [sp, #4]
 800fcc0:	42b2      	cmp	r2, r6
 800fcc2:	db07      	blt.n	800fcd4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x80>
 800fcc4:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 800fcc6:	4414      	add	r4, r2
 800fcc8:	9a14      	ldr	r2, [sp, #80]	; 0x50
 800fcca:	3b01      	subs	r3, #1
 800fccc:	4410      	add	r0, r2
 800fcce:	3502      	adds	r5, #2
 800fcd0:	e7ec      	b.n	800fcac <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x58>
 800fcd2:	d00f      	beq.n	800fcf4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xa0>
 800fcd4:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 800fcd6:	1e5a      	subs	r2, r3, #1
 800fcd8:	fb06 4602 	mla	r6, r6, r2, r4
 800fcdc:	1436      	asrs	r6, r6, #16
 800fcde:	d542      	bpl.n	800fd66 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x112>
 800fce0:	469a      	mov	sl, r3
 800fce2:	46a9      	mov	r9, r5
 800fce4:	f1ba 0f00 	cmp.w	sl, #0
 800fce8:	f300 80b5 	bgt.w	800fe56 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x202>
 800fcec:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 800fcf0:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 800fcf4:	2900      	cmp	r1, #0
 800fcf6:	f340 811f 	ble.w	800ff38 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2e4>
 800fcfa:	ee30 0a04 	vadd.f32	s0, s0, s8
 800fcfe:	ee70 0aa4 	vadd.f32	s1, s1, s9
 800fd02:	eec6 7a80 	vdiv.f32	s15, s13, s0
 800fd06:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800fd08:	3901      	subs	r1, #1
 800fd0a:	ee31 1a05 	vadd.f32	s2, s2, s10
 800fd0e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 800fd12:	eeb0 6a62 	vmov.f32	s12, s5
 800fd16:	ee61 7a27 	vmul.f32	s15, s2, s15
 800fd1a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 800fd1e:	ee77 2a62 	vsub.f32	s5, s14, s5
 800fd22:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 800fd26:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 800fd2a:	eeb0 6a43 	vmov.f32	s12, s6
 800fd2e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 800fd32:	ee12 2a90 	vmov	r2, s5
 800fd36:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 800fd3a:	fb92 f3f3 	sdiv	r3, r2, r3
 800fd3e:	ee13 2a10 	vmov	r2, s6
 800fd42:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 800fd46:	9313      	str	r3, [sp, #76]	; 0x4c
 800fd48:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800fd4a:	fb92 f3f3 	sdiv	r3, r2, r3
 800fd4e:	9a04      	ldr	r2, [sp, #16]
 800fd50:	9314      	str	r3, [sp, #80]	; 0x50
 800fd52:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 800fd56:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800fd58:	eeb0 3a67 	vmov.f32	s6, s15
 800fd5c:	bf08      	it	eq
 800fd5e:	4613      	moveq	r3, r2
 800fd60:	eef0 2a47 	vmov.f32	s5, s14
 800fd64:	e796      	b.n	800fc94 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x40>
 800fd66:	9f00      	ldr	r7, [sp, #0]
 800fd68:	42b7      	cmp	r7, r6
 800fd6a:	ddb9      	ble.n	800fce0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x8c>
 800fd6c:	9e14      	ldr	r6, [sp, #80]	; 0x50
 800fd6e:	fb06 0202 	mla	r2, r6, r2, r0
 800fd72:	1412      	asrs	r2, r2, #16
 800fd74:	d4b4      	bmi.n	800fce0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x8c>
 800fd76:	9e01      	ldr	r6, [sp, #4]
 800fd78:	42b2      	cmp	r2, r6
 800fd7a:	dab1      	bge.n	800fce0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x8c>
 800fd7c:	f04f 0800 	mov.w	r8, #0
 800fd80:	eba3 0208 	sub.w	r2, r3, r8
 800fd84:	2a00      	cmp	r2, #0
 800fd86:	ddb1      	ble.n	800fcec <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x98>
 800fd88:	9f02      	ldr	r7, [sp, #8]
 800fd8a:	1422      	asrs	r2, r4, #16
 800fd8c:	1406      	asrs	r6, r0, #16
 800fd8e:	fb07 2606 	mla	r6, r7, r6, r2
 800fd92:	0872      	lsrs	r2, r6, #1
 800fd94:	9f03      	ldr	r7, [sp, #12]
 800fd96:	5cba      	ldrb	r2, [r7, r2]
 800fd98:	07f6      	lsls	r6, r6, #31
 800fd9a:	bf54      	ite	pl
 800fd9c:	f002 020f 	andpl.w	r2, r2, #15
 800fda0:	1112      	asrmi	r2, r2, #4
 800fda2:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 800fda6:	b2d2      	uxtb	r2, r2
 800fda8:	2a00      	cmp	r2, #0
 800fdaa:	d04d      	beq.n	800fe48 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1f4>
 800fdac:	9f05      	ldr	r7, [sp, #20]
 800fdae:	4e64      	ldr	r6, [pc, #400]	; (800ff40 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2ec>)
 800fdb0:	f835 e018 	ldrh.w	lr, [r5, r8, lsl #1]
 800fdb4:	6836      	ldr	r6, [r6, #0]
 800fdb6:	437a      	muls	r2, r7
 800fdb8:	1c57      	adds	r7, r2, #1
 800fdba:	eb07 2222 	add.w	r2, r7, r2, asr #8
 800fdbe:	1212      	asrs	r2, r2, #8
 800fdc0:	ea4f 2c16 	mov.w	ip, r6, lsr #8
 800fdc4:	fa1f fa82 	uxth.w	sl, r2
 800fdc8:	ea4f 272e 	mov.w	r7, lr, asr #8
 800fdcc:	43d2      	mvns	r2, r2
 800fdce:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 800fdd2:	b2d2      	uxtb	r2, r2
 800fdd4:	fb1c fc0a 	smulbb	ip, ip, sl
 800fdd8:	ea4f 09d6 	mov.w	r9, r6, lsr #3
 800fddc:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 800fde0:	fb07 c702 	mla	r7, r7, r2, ip
 800fde4:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 800fde8:	ea4f 0cee 	mov.w	ip, lr, asr #3
 800fdec:	fb19 f90a 	smulbb	r9, r9, sl
 800fdf0:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 800fdf4:	00f6      	lsls	r6, r6, #3
 800fdf6:	fb0c 9c02 	mla	ip, ip, r2, r9
 800fdfa:	b2f6      	uxtb	r6, r6
 800fdfc:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 800fe00:	fa1f fc8c 	uxth.w	ip, ip
 800fe04:	fa5f fe8e 	uxtb.w	lr, lr
 800fe08:	fb16 f60a 	smulbb	r6, r6, sl
 800fe0c:	b2bf      	uxth	r7, r7
 800fe0e:	fb0e 6602 	mla	r6, lr, r2, r6
 800fe12:	f10c 0901 	add.w	r9, ip, #1
 800fe16:	b2b6      	uxth	r6, r6
 800fe18:	eb09 2c1c 	add.w	ip, r9, ip, lsr #8
 800fe1c:	f107 0b01 	add.w	fp, r7, #1
 800fe20:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 800fe24:	eb0b 2717 	add.w	r7, fp, r7, lsr #8
 800fe28:	f106 0e01 	add.w	lr, r6, #1
 800fe2c:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 800fe30:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 800fe34:	eb0e 2e16 	add.w	lr, lr, r6, lsr #8
 800fe38:	ea4c 0c07 	orr.w	ip, ip, r7
 800fe3c:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 800fe40:	ea4c 0c0e 	orr.w	ip, ip, lr
 800fe44:	f825 c018 	strh.w	ip, [r5, r8, lsl #1]
 800fe48:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 800fe4a:	4414      	add	r4, r2
 800fe4c:	9a14      	ldr	r2, [sp, #80]	; 0x50
 800fe4e:	f108 0801 	add.w	r8, r8, #1
 800fe52:	4410      	add	r0, r2
 800fe54:	e794      	b.n	800fd80 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x12c>
 800fe56:	1422      	asrs	r2, r4, #16
 800fe58:	d465      	bmi.n	800ff26 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2d2>
 800fe5a:	9e00      	ldr	r6, [sp, #0]
 800fe5c:	4296      	cmp	r6, r2
 800fe5e:	dd62      	ble.n	800ff26 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2d2>
 800fe60:	1406      	asrs	r6, r0, #16
 800fe62:	d460      	bmi.n	800ff26 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2d2>
 800fe64:	9f01      	ldr	r7, [sp, #4]
 800fe66:	42be      	cmp	r6, r7
 800fe68:	da5d      	bge.n	800ff26 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2d2>
 800fe6a:	9f02      	ldr	r7, [sp, #8]
 800fe6c:	fb06 2607 	mla	r6, r6, r7, r2
 800fe70:	0872      	lsrs	r2, r6, #1
 800fe72:	9f03      	ldr	r7, [sp, #12]
 800fe74:	5cba      	ldrb	r2, [r7, r2]
 800fe76:	07f7      	lsls	r7, r6, #31
 800fe78:	bf54      	ite	pl
 800fe7a:	f002 020f 	andpl.w	r2, r2, #15
 800fe7e:	1112      	asrmi	r2, r2, #4
 800fe80:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 800fe84:	b2d2      	uxtb	r2, r2
 800fe86:	2a00      	cmp	r2, #0
 800fe88:	d04d      	beq.n	800ff26 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2d2>
 800fe8a:	9f05      	ldr	r7, [sp, #20]
 800fe8c:	4e2c      	ldr	r6, [pc, #176]	; (800ff40 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2ec>)
 800fe8e:	f8b9 e000 	ldrh.w	lr, [r9]
 800fe92:	6836      	ldr	r6, [r6, #0]
 800fe94:	437a      	muls	r2, r7
 800fe96:	1c57      	adds	r7, r2, #1
 800fe98:	eb07 2222 	add.w	r2, r7, r2, asr #8
 800fe9c:	1212      	asrs	r2, r2, #8
 800fe9e:	ea4f 2c16 	mov.w	ip, r6, lsr #8
 800fea2:	fa1f fb82 	uxth.w	fp, r2
 800fea6:	ea4f 272e 	mov.w	r7, lr, asr #8
 800feaa:	43d2      	mvns	r2, r2
 800feac:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 800feb0:	b2d2      	uxtb	r2, r2
 800feb2:	fb1c fc0b 	smulbb	ip, ip, fp
 800feb6:	ea4f 08d6 	mov.w	r8, r6, lsr #3
 800feba:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 800febe:	fb07 c702 	mla	r7, r7, r2, ip
 800fec2:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 800fec6:	ea4f 0cee 	mov.w	ip, lr, asr #3
 800feca:	fb18 f80b 	smulbb	r8, r8, fp
 800fece:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 800fed2:	00f6      	lsls	r6, r6, #3
 800fed4:	fb0c 8c02 	mla	ip, ip, r2, r8
 800fed8:	b2f6      	uxtb	r6, r6
 800feda:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 800fede:	fa1f fc8c 	uxth.w	ip, ip
 800fee2:	fa5f fe8e 	uxtb.w	lr, lr
 800fee6:	fb16 f60b 	smulbb	r6, r6, fp
 800feea:	b2bf      	uxth	r7, r7
 800feec:	fb0e 6602 	mla	r6, lr, r2, r6
 800fef0:	f10c 0801 	add.w	r8, ip, #1
 800fef4:	b2b6      	uxth	r6, r6
 800fef6:	eb08 2c1c 	add.w	ip, r8, ip, lsr #8
 800fefa:	f107 0801 	add.w	r8, r7, #1
 800fefe:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 800ff02:	eb08 2717 	add.w	r7, r8, r7, lsr #8
 800ff06:	f106 0e01 	add.w	lr, r6, #1
 800ff0a:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 800ff0e:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 800ff12:	eb0e 2e16 	add.w	lr, lr, r6, lsr #8
 800ff16:	ea4c 0c07 	orr.w	ip, ip, r7
 800ff1a:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 800ff1e:	ea4c 0c0e 	orr.w	ip, ip, lr
 800ff22:	f8a9 c000 	strh.w	ip, [r9]
 800ff26:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 800ff28:	4414      	add	r4, r2
 800ff2a:	9a14      	ldr	r2, [sp, #80]	; 0x50
 800ff2c:	f109 0902 	add.w	r9, r9, #2
 800ff30:	4410      	add	r0, r2
 800ff32:	f10a 3aff 	add.w	sl, sl, #4294967295
 800ff36:	e6d5      	b.n	800fce4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x90>
 800ff38:	b007      	add	sp, #28
 800ff3a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800ff3e:	bf00      	nop
 800ff40:	20012190 	.word	0x20012190

0800ff44 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 800ff44:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ff48:	b087      	sub	sp, #28
 800ff4a:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 800ff4e:	9c15      	ldr	r4, [sp, #84]	; 0x54
 800ff50:	9205      	str	r2, [sp, #20]
 800ff52:	f9bd 2064 	ldrsh.w	r2, [sp, #100]	; 0x64
 800ff56:	9201      	str	r2, [sp, #4]
 800ff58:	e9dd 2516 	ldrd	r2, r5, [sp, #88]	; 0x58
 800ff5c:	6860      	ldr	r0, [r4, #4]
 800ff5e:	f9bd b060 	ldrsh.w	fp, [sp, #96]	; 0x60
 800ff62:	9100      	str	r1, [sp, #0]
 800ff64:	fb00 2505 	mla	r5, r0, r5, r2
 800ff68:	6822      	ldr	r2, [r4, #0]
 800ff6a:	eb02 0545 	add.w	r5, r2, r5, lsl #1
 800ff6e:	f10b 0201 	add.w	r2, fp, #1
 800ff72:	f022 0201 	bic.w	r2, r2, #1
 800ff76:	9203      	str	r2, [sp, #12]
 800ff78:	9a1a      	ldr	r2, [sp, #104]	; 0x68
 800ff7a:	6812      	ldr	r2, [r2, #0]
 800ff7c:	9204      	str	r2, [sp, #16]
 800ff7e:	9a00      	ldr	r2, [sp, #0]
 800ff80:	2a00      	cmp	r2, #0
 800ff82:	dc03      	bgt.n	800ff8c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x48>
 800ff84:	9a05      	ldr	r2, [sp, #20]
 800ff86:	2a00      	cmp	r2, #0
 800ff88:	f340 8157 	ble.w	801023a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2f6>
 800ff8c:	9a11      	ldr	r2, [sp, #68]	; 0x44
 800ff8e:	f502 4400 	add.w	r4, r2, #32768	; 0x8000
 800ff92:	9a12      	ldr	r2, [sp, #72]	; 0x48
 800ff94:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 800ff98:	2b00      	cmp	r3, #0
 800ff9a:	dd0f      	ble.n	800ffbc <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x78>
 800ff9c:	1422      	asrs	r2, r4, #16
 800ff9e:	d406      	bmi.n	800ffae <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6a>
 800ffa0:	4593      	cmp	fp, r2
 800ffa2:	dd04      	ble.n	800ffae <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6a>
 800ffa4:	1402      	asrs	r2, r0, #16
 800ffa6:	d402      	bmi.n	800ffae <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6a>
 800ffa8:	9e01      	ldr	r6, [sp, #4]
 800ffaa:	42b2      	cmp	r2, r6
 800ffac:	db07      	blt.n	800ffbe <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7a>
 800ffae:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 800ffb0:	4414      	add	r4, r2
 800ffb2:	9a14      	ldr	r2, [sp, #80]	; 0x50
 800ffb4:	3b01      	subs	r3, #1
 800ffb6:	4410      	add	r0, r2
 800ffb8:	3502      	adds	r5, #2
 800ffba:	e7ed      	b.n	800ff98 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x54>
 800ffbc:	d018      	beq.n	800fff0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xac>
 800ffbe:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 800ffc0:	1e5a      	subs	r2, r3, #1
 800ffc2:	fb06 4602 	mla	r6, r6, r2, r4
 800ffc6:	1436      	asrs	r6, r6, #16
 800ffc8:	d40a      	bmi.n	800ffe0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9c>
 800ffca:	45b3      	cmp	fp, r6
 800ffcc:	dd08      	ble.n	800ffe0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9c>
 800ffce:	9e14      	ldr	r6, [sp, #80]	; 0x50
 800ffd0:	fb06 0202 	mla	r2, r6, r2, r0
 800ffd4:	1412      	asrs	r2, r2, #16
 800ffd6:	d403      	bmi.n	800ffe0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9c>
 800ffd8:	9e01      	ldr	r6, [sp, #4]
 800ffda:	42b2      	cmp	r2, r6
 800ffdc:	f2c0 80bf 	blt.w	801015e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x21a>
 800ffe0:	2700      	movs	r7, #0
 800ffe2:	19da      	adds	r2, r3, r7
 800ffe4:	2a00      	cmp	r2, #0
 800ffe6:	dc3f      	bgt.n	8010068 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x124>
 800ffe8:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 800ffec:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 800fff0:	9b00      	ldr	r3, [sp, #0]
 800fff2:	2b00      	cmp	r3, #0
 800fff4:	f340 8121 	ble.w	801023a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2f6>
 800fff8:	ee30 0a04 	vadd.f32	s0, s0, s8
 800fffc:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8010000:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8010004:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8010006:	ee31 1a05 	vadd.f32	s2, s2, s10
 801000a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801000e:	eeb0 6a62 	vmov.f32	s12, s5
 8010012:	ee61 7a27 	vmul.f32	s15, s2, s15
 8010016:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801001a:	ee77 2a62 	vsub.f32	s5, s14, s5
 801001e:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 8010022:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8010026:	eeb0 6a43 	vmov.f32	s12, s6
 801002a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801002e:	ee12 2a90 	vmov	r2, s5
 8010032:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8010036:	fb92 f3f3 	sdiv	r3, r2, r3
 801003a:	ee13 2a10 	vmov	r2, s6
 801003e:	9313      	str	r3, [sp, #76]	; 0x4c
 8010040:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8010042:	fb92 f3f3 	sdiv	r3, r2, r3
 8010046:	9314      	str	r3, [sp, #80]	; 0x50
 8010048:	9b00      	ldr	r3, [sp, #0]
 801004a:	9a05      	ldr	r2, [sp, #20]
 801004c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8010050:	3b01      	subs	r3, #1
 8010052:	9300      	str	r3, [sp, #0]
 8010054:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 8010058:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801005a:	eeb0 3a67 	vmov.f32	s6, s15
 801005e:	bf08      	it	eq
 8010060:	4613      	moveq	r3, r2
 8010062:	eef0 2a47 	vmov.f32	s5, s14
 8010066:	e78a      	b.n	800ff7e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3a>
 8010068:	1422      	asrs	r2, r4, #16
 801006a:	d466      	bmi.n	801013a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1f6>
 801006c:	4593      	cmp	fp, r2
 801006e:	dd64      	ble.n	801013a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1f6>
 8010070:	1406      	asrs	r6, r0, #16
 8010072:	d462      	bmi.n	801013a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1f6>
 8010074:	9901      	ldr	r1, [sp, #4]
 8010076:	428e      	cmp	r6, r1
 8010078:	da5f      	bge.n	801013a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1f6>
 801007a:	9903      	ldr	r1, [sp, #12]
 801007c:	fb06 2601 	mla	r6, r6, r1, r2
 8010080:	0872      	lsrs	r2, r6, #1
 8010082:	9904      	ldr	r1, [sp, #16]
 8010084:	5c8a      	ldrb	r2, [r1, r2]
 8010086:	07f6      	lsls	r6, r6, #31
 8010088:	bf54      	ite	pl
 801008a:	f002 020f 	andpl.w	r2, r2, #15
 801008e:	1112      	asrmi	r2, r2, #4
 8010090:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8010094:	b2d2      	uxtb	r2, r2
 8010096:	2a00      	cmp	r2, #0
 8010098:	d04f      	beq.n	801013a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1f6>
 801009a:	4969      	ldr	r1, [pc, #420]	; (8010240 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2fc>)
 801009c:	f8d1 c000 	ldr.w	ip, [r1]
 80100a0:	2aff      	cmp	r2, #255	; 0xff
 80100a2:	ea4f 291c 	mov.w	r9, ip, lsr #8
 80100a6:	ea4f 06dc 	mov.w	r6, ip, lsr #3
 80100aa:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 80100ae:	f009 09f8 	and.w	r9, r9, #248	; 0xf8
 80100b2:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80100b6:	fa5f fc8c 	uxtb.w	ip, ip
 80100ba:	d044      	beq.n	8010146 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x202>
 80100bc:	f06f 0101 	mvn.w	r1, #1
 80100c0:	4379      	muls	r1, r7
 80100c2:	fa1f fa82 	uxth.w	sl, r2
 80100c6:	f835 8001 	ldrh.w	r8, [r5, r1]
 80100ca:	9102      	str	r1, [sp, #8]
 80100cc:	ea4f 2e28 	mov.w	lr, r8, asr #8
 80100d0:	43d2      	mvns	r2, r2
 80100d2:	b2d2      	uxtb	r2, r2
 80100d4:	fb19 f90a 	smulbb	r9, r9, sl
 80100d8:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 80100dc:	fb0e 9e02 	mla	lr, lr, r2, r9
 80100e0:	ea4f 09e8 	mov.w	r9, r8, asr #3
 80100e4:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 80100e8:	fb16 f60a 	smulbb	r6, r6, sl
 80100ec:	fb09 6602 	mla	r6, r9, r2, r6
 80100f0:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 80100f4:	b2b6      	uxth	r6, r6
 80100f6:	fa5f f888 	uxtb.w	r8, r8
 80100fa:	fb1c fc0a 	smulbb	ip, ip, sl
 80100fe:	fa1f fe8e 	uxth.w	lr, lr
 8010102:	fb08 cc02 	mla	ip, r8, r2, ip
 8010106:	f106 0901 	add.w	r9, r6, #1
 801010a:	fa1f fc8c 	uxth.w	ip, ip
 801010e:	eb09 2616 	add.w	r6, r9, r6, lsr #8
 8010112:	f10e 0901 	add.w	r9, lr, #1
 8010116:	0976      	lsrs	r6, r6, #5
 8010118:	eb09 2e1e 	add.w	lr, r9, lr, lsr #8
 801011c:	f10c 0201 	add.w	r2, ip, #1
 8010120:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8010124:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 8010128:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 801012c:	ea46 060e 	orr.w	r6, r6, lr
 8010130:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8010134:	ea46 060c 	orr.w	r6, r6, ip
 8010138:	526e      	strh	r6, [r5, r1]
 801013a:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801013c:	4414      	add	r4, r2
 801013e:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8010140:	3f01      	subs	r7, #1
 8010142:	4410      	add	r0, r2
 8010144:	e74d      	b.n	800ffe2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9e>
 8010146:	f06f 0201 	mvn.w	r2, #1
 801014a:	00f6      	lsls	r6, r6, #3
 801014c:	fb02 f807 	mul.w	r8, r2, r7
 8010150:	ea46 2609 	orr.w	r6, r6, r9, lsl #8
 8010154:	ea46 06dc 	orr.w	r6, r6, ip, lsr #3
 8010158:	f825 6008 	strh.w	r6, [r5, r8]
 801015c:	e7ed      	b.n	801013a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1f6>
 801015e:	f04f 0800 	mov.w	r8, #0
 8010162:	eba3 0208 	sub.w	r2, r3, r8
 8010166:	2a00      	cmp	r2, #0
 8010168:	f77f af3e 	ble.w	800ffe8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xa4>
 801016c:	9903      	ldr	r1, [sp, #12]
 801016e:	1422      	asrs	r2, r4, #16
 8010170:	1406      	asrs	r6, r0, #16
 8010172:	fb01 2606 	mla	r6, r1, r6, r2
 8010176:	0872      	lsrs	r2, r6, #1
 8010178:	9904      	ldr	r1, [sp, #16]
 801017a:	5c8a      	ldrb	r2, [r1, r2]
 801017c:	07f1      	lsls	r1, r6, #31
 801017e:	bf54      	ite	pl
 8010180:	f002 020f 	andpl.w	r2, r2, #15
 8010184:	1112      	asrmi	r2, r2, #4
 8010186:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801018a:	b2d2      	uxtb	r2, r2
 801018c:	2a00      	cmp	r2, #0
 801018e:	d047      	beq.n	8010220 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2dc>
 8010190:	492b      	ldr	r1, [pc, #172]	; (8010240 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2fc>)
 8010192:	680f      	ldr	r7, [r1, #0]
 8010194:	2aff      	cmp	r2, #255	; 0xff
 8010196:	ea4f 2917 	mov.w	r9, r7, lsr #8
 801019a:	ea4f 06d7 	mov.w	r6, r7, lsr #3
 801019e:	ea4f 07c7 	mov.w	r7, r7, lsl #3
 80101a2:	f009 09f8 	and.w	r9, r9, #248	; 0xf8
 80101a6:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80101aa:	b2ff      	uxtb	r7, r7
 80101ac:	d03f      	beq.n	801022e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2ea>
 80101ae:	f835 e018 	ldrh.w	lr, [r5, r8, lsl #1]
 80101b2:	fa1f fa82 	uxth.w	sl, r2
 80101b6:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 80101ba:	43d2      	mvns	r2, r2
 80101bc:	b2d2      	uxtb	r2, r2
 80101be:	fb19 f90a 	smulbb	r9, r9, sl
 80101c2:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80101c6:	fb0c 9c02 	mla	ip, ip, r2, r9
 80101ca:	ea4f 09ee 	mov.w	r9, lr, asr #3
 80101ce:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 80101d2:	fb16 f60a 	smulbb	r6, r6, sl
 80101d6:	fb09 6602 	mla	r6, r9, r2, r6
 80101da:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80101de:	b2b6      	uxth	r6, r6
 80101e0:	fa5f fe8e 	uxtb.w	lr, lr
 80101e4:	fb17 f70a 	smulbb	r7, r7, sl
 80101e8:	fa1f fc8c 	uxth.w	ip, ip
 80101ec:	fb0e 7702 	mla	r7, lr, r2, r7
 80101f0:	f106 0901 	add.w	r9, r6, #1
 80101f4:	b2bf      	uxth	r7, r7
 80101f6:	eb09 2616 	add.w	r6, r9, r6, lsr #8
 80101fa:	f10c 0901 	add.w	r9, ip, #1
 80101fe:	0976      	lsrs	r6, r6, #5
 8010200:	eb09 2c1c 	add.w	ip, r9, ip, lsr #8
 8010204:	1c7a      	adds	r2, r7, #1
 8010206:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801020a:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801020e:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 8010212:	ea46 060c 	orr.w	r6, r6, ip
 8010216:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801021a:	433e      	orrs	r6, r7
 801021c:	f825 6018 	strh.w	r6, [r5, r8, lsl #1]
 8010220:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8010222:	4414      	add	r4, r2
 8010224:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8010226:	f108 0801 	add.w	r8, r8, #1
 801022a:	4410      	add	r0, r2
 801022c:	e799      	b.n	8010162 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x21e>
 801022e:	00f6      	lsls	r6, r6, #3
 8010230:	ea46 2609 	orr.w	r6, r6, r9, lsl #8
 8010234:	ea46 06d7 	orr.w	r6, r6, r7, lsr #3
 8010238:	e7f0      	b.n	801021c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2d8>
 801023a:	b007      	add	sp, #28
 801023c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010240:	20012190 	.word	0x20012190

08010244 <_ZN8touchgfx8LCD16bppD1Ev>:
 8010244:	4770      	bx	lr

08010246 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD1Ev>:
 8010246:	4770      	bx	lr

08010248 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD1Ev>:
 8010248:	4770      	bx	lr

0801024a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD1Ev>:
 801024a:	4770      	bx	lr

0801024c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD1Ev>:
 801024c:	4770      	bx	lr

0801024e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 801024e:	4770      	bx	lr

08010250 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 8010250:	4770      	bx	lr

08010252 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 8010252:	4770      	bx	lr

08010254 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 8010254:	4770      	bx	lr

08010256 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 8010256:	4770      	bx	lr

08010258 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 8010258:	4770      	bx	lr

0801025a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 801025a:	4770      	bx	lr

0801025c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD1Ev>:
 801025c:	4770      	bx	lr

0801025e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 801025e:	4770      	bx	lr

08010260 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 8010260:	4770      	bx	lr

08010262 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 8010262:	4770      	bx	lr

08010264 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD1Ev>:
 8010264:	4770      	bx	lr

08010266 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 8010266:	4770      	bx	lr

08010268 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 8010268:	4770      	bx	lr

0801026a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 801026a:	4770      	bx	lr

0801026c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 801026c:	4770      	bx	lr

0801026e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD1Ev>:
 801026e:	4770      	bx	lr

08010270 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD1Ev>:
 8010270:	4770      	bx	lr

08010272 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD1Ev>:
 8010272:	4770      	bx	lr

08010274 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD1Ev>:
 8010274:	4770      	bx	lr

08010276 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 8010276:	4770      	bx	lr

08010278 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 8010278:	4770      	bx	lr

0801027a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 801027a:	4770      	bx	lr

0801027c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 801027c:	4770      	bx	lr
	...

08010280 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv>:
 8010280:	b508      	push	{r3, lr}
 8010282:	4b06      	ldr	r3, [pc, #24]	; (801029c <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0x1c>)
 8010284:	8818      	ldrh	r0, [r3, #0]
 8010286:	b928      	cbnz	r0, 8010294 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0x14>
 8010288:	4b05      	ldr	r3, [pc, #20]	; (80102a0 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0x20>)
 801028a:	4a06      	ldr	r2, [pc, #24]	; (80102a4 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0x24>)
 801028c:	4806      	ldr	r0, [pc, #24]	; (80102a8 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0x28>)
 801028e:	2154      	movs	r1, #84	; 0x54
 8010290:	f009 f8bc 	bl	801940c <__assert_func>
 8010294:	0040      	lsls	r0, r0, #1
 8010296:	b280      	uxth	r0, r0
 8010298:	bd08      	pop	{r3, pc}
 801029a:	bf00      	nop
 801029c:	20012182 	.word	0x20012182
 80102a0:	0801d17b 	.word	0x0801d17b
 80102a4:	0801d6fb 	.word	0x0801d6fb
 80102a8:	0801d1bd 	.word	0x0801d1bd

080102ac <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb>:
 80102ac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80102b0:	b08d      	sub	sp, #52	; 0x34
 80102b2:	460f      	mov	r7, r1
 80102b4:	f89d 9058 	ldrb.w	r9, [sp, #88]	; 0x58
 80102b8:	f89d 405c 	ldrb.w	r4, [sp, #92]	; 0x5c
 80102bc:	4616      	mov	r6, r2
 80102be:	f1b9 0f00 	cmp.w	r9, #0
 80102c2:	d046      	beq.n	8010352 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xa6>
 80102c4:	6810      	ldr	r0, [r2, #0]
 80102c6:	6851      	ldr	r1, [r2, #4]
 80102c8:	f8df 81c4 	ldr.w	r8, [pc, #452]	; 8010490 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1e4>
 80102cc:	ad08      	add	r5, sp, #32
 80102ce:	c503      	stmia	r5!, {r0, r1}
 80102d0:	6818      	ldr	r0, [r3, #0]
 80102d2:	6859      	ldr	r1, [r3, #4]
 80102d4:	ad0a      	add	r5, sp, #40	; 0x28
 80102d6:	c503      	stmia	r5!, {r0, r1}
 80102d8:	a808      	add	r0, sp, #32
 80102da:	f7fb fa5f 	bl	800b79c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80102de:	4631      	mov	r1, r6
 80102e0:	a80a      	add	r0, sp, #40	; 0x28
 80102e2:	f7fb fa43 	bl	800b76c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80102e6:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	; 0x28
 80102ea:	f9bd 302a 	ldrsh.w	r3, [sp, #42]	; 0x2a
 80102ee:	f8bd 6024 	ldrh.w	r6, [sp, #36]	; 0x24
 80102f2:	f8d8 0000 	ldr.w	r0, [r8]
 80102f6:	f9bd 502c 	ldrsh.w	r5, [sp, #44]	; 0x2c
 80102fa:	fb16 2103 	smlabb	r1, r6, r3, r2
 80102fe:	eb07 0641 	add.w	r6, r7, r1, lsl #1
 8010302:	f8bd 1020 	ldrh.w	r1, [sp, #32]
 8010306:	f9bd 702e 	ldrsh.w	r7, [sp, #46]	; 0x2e
 801030a:	440a      	add	r2, r1
 801030c:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 8010310:	f8bd 2022 	ldrh.w	r2, [sp, #34]	; 0x22
 8010314:	4413      	add	r3, r2
 8010316:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 801031a:	6803      	ldr	r3, [r0, #0]
 801031c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801031e:	4798      	blx	r3
 8010320:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8010324:	d018      	beq.n	8010358 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xac>
 8010326:	f010 0f04 	tst.w	r0, #4
 801032a:	d019      	beq.n	8010360 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xb4>
 801032c:	f8d8 0000 	ldr.w	r0, [r8]
 8010330:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 8010334:	6801      	ldr	r1, [r0, #0]
 8010336:	f8bd 2028 	ldrh.w	r2, [sp, #40]	; 0x28
 801033a:	e9cd 9403 	strd	r9, r4, [sp, #12]
 801033e:	b2bf      	uxth	r7, r7
 8010340:	f8bd 4024 	ldrh.w	r4, [sp, #36]	; 0x24
 8010344:	9402      	str	r4, [sp, #8]
 8010346:	b2ad      	uxth	r5, r5
 8010348:	9701      	str	r7, [sp, #4]
 801034a:	9500      	str	r5, [sp, #0]
 801034c:	6b8c      	ldr	r4, [r1, #56]	; 0x38
 801034e:	4631      	mov	r1, r6
 8010350:	47a0      	blx	r4
 8010352:	b00d      	add	sp, #52	; 0x34
 8010354:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010358:	b914      	cbnz	r4, 8010360 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xb4>
 801035a:	f010 0f01 	tst.w	r0, #1
 801035e:	e7e4      	b.n	801032a <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x7e>
 8010360:	f8d8 0000 	ldr.w	r0, [r8]
 8010364:	6803      	ldr	r3, [r0, #0]
 8010366:	6a1b      	ldr	r3, [r3, #32]
 8010368:	4798      	blx	r3
 801036a:	4a48      	ldr	r2, [pc, #288]	; (801048c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1e0>)
 801036c:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	; 0x2a
 8010370:	8814      	ldrh	r4, [r2, #0]
 8010372:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 8010376:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801037a:	fb01 3404 	mla	r4, r1, r4, r3
 801037e:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8010382:	4692      	mov	sl, r2
 8010384:	d118      	bne.n	80103b8 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x10c>
 8010386:	ea4f 0b45 	mov.w	fp, r5, lsl #1
 801038a:	f04f 0900 	mov.w	r9, #0
 801038e:	f8d8 0000 	ldr.w	r0, [r8]
 8010392:	45b9      	cmp	r9, r7
 8010394:	6803      	ldr	r3, [r0, #0]
 8010396:	da73      	bge.n	8010480 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>
 8010398:	6add      	ldr	r5, [r3, #44]	; 0x2c
 801039a:	4632      	mov	r2, r6
 801039c:	465b      	mov	r3, fp
 801039e:	4621      	mov	r1, r4
 80103a0:	47a8      	blx	r5
 80103a2:	f8ba 3000 	ldrh.w	r3, [sl]
 80103a6:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80103aa:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	; 0x24
 80103ae:	f109 0901 	add.w	r9, r9, #1
 80103b2:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 80103b6:	e7ea      	b.n	801038e <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xe2>
 80103b8:	f1c9 08ff 	rsb	r8, r9, #255	; 0xff
 80103bc:	ea25 7ae5 	bic.w	sl, r5, r5, asr #31
 80103c0:	ea4f 0a4a 	mov.w	sl, sl, lsl #1
 80103c4:	f04f 0b00 	mov.w	fp, #0
 80103c8:	fa1f f389 	uxth.w	r3, r9
 80103cc:	fa1f f888 	uxth.w	r8, r8
 80103d0:	9207      	str	r2, [sp, #28]
 80103d2:	45bb      	cmp	fp, r7
 80103d4:	da54      	bge.n	8010480 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>
 80103d6:	f04f 0e00 	mov.w	lr, #0
 80103da:	45ae      	cmp	lr, r5
 80103dc:	da41      	bge.n	8010462 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1b6>
 80103de:	f834 101e 	ldrh.w	r1, [r4, lr, lsl #1]
 80103e2:	f836 201e 	ldrh.w	r2, [r6, lr, lsl #1]
 80103e6:	1208      	asrs	r0, r1, #8
 80103e8:	ea4f 2c22 	mov.w	ip, r2, asr #8
 80103ec:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 80103f0:	fb10 f008 	smulbb	r0, r0, r8
 80103f4:	ea4f 09e1 	mov.w	r9, r1, asr #3
 80103f8:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80103fc:	00c9      	lsls	r1, r1, #3
 80103fe:	fb0c 0c03 	mla	ip, ip, r3, r0
 8010402:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 8010406:	10d0      	asrs	r0, r2, #3
 8010408:	b2c9      	uxtb	r1, r1
 801040a:	00d2      	lsls	r2, r2, #3
 801040c:	fa1f fc8c 	uxth.w	ip, ip
 8010410:	fb19 f908 	smulbb	r9, r9, r8
 8010414:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8010418:	b2d2      	uxtb	r2, r2
 801041a:	fb11 f108 	smulbb	r1, r1, r8
 801041e:	fb00 9003 	mla	r0, r0, r3, r9
 8010422:	fb02 1203 	mla	r2, r2, r3, r1
 8010426:	f10c 0901 	add.w	r9, ip, #1
 801042a:	b292      	uxth	r2, r2
 801042c:	eb09 2c1c 	add.w	ip, r9, ip, lsr #8
 8010430:	f40c 4978 	and.w	r9, ip, #63488	; 0xf800
 8010434:	f102 0c01 	add.w	ip, r2, #1
 8010438:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 801043c:	b280      	uxth	r0, r0
 801043e:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8010442:	ea49 0c02 	orr.w	ip, r9, r2
 8010446:	f100 0901 	add.w	r9, r0, #1
 801044a:	eb09 2010 	add.w	r0, r9, r0, lsr #8
 801044e:	0940      	lsrs	r0, r0, #5
 8010450:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8010454:	ea4c 0c00 	orr.w	ip, ip, r0
 8010458:	f824 c01e 	strh.w	ip, [r4, lr, lsl #1]
 801045c:	f10e 0e01 	add.w	lr, lr, #1
 8010460:	e7bb      	b.n	80103da <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x12e>
 8010462:	9a07      	ldr	r2, [sp, #28]
 8010464:	8812      	ldrh	r2, [r2, #0]
 8010466:	1b52      	subs	r2, r2, r5
 8010468:	eb0a 0242 	add.w	r2, sl, r2, lsl #1
 801046c:	4414      	add	r4, r2
 801046e:	f9bd 2024 	ldrsh.w	r2, [sp, #36]	; 0x24
 8010472:	1b52      	subs	r2, r2, r5
 8010474:	eb0a 0242 	add.w	r2, sl, r2, lsl #1
 8010478:	4416      	add	r6, r2
 801047a:	f10b 0b01 	add.w	fp, fp, #1
 801047e:	e7a8      	b.n	80103d2 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x126>
 8010480:	4b03      	ldr	r3, [pc, #12]	; (8010490 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1e4>)
 8010482:	6818      	ldr	r0, [r3, #0]
 8010484:	6803      	ldr	r3, [r0, #0]
 8010486:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8010488:	4798      	blx	r3
 801048a:	e762      	b.n	8010352 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xa6>
 801048c:	20012182 	.word	0x20012182
 8010490:	20012188 	.word	0x20012188

08010494 <_ZN8touchgfx8LCD16bppD0Ev>:
 8010494:	b510      	push	{r4, lr}
 8010496:	2178      	movs	r1, #120	; 0x78
 8010498:	4604      	mov	r4, r0
 801049a:	f008 ff8b 	bl	80193b4 <_ZdlPvj>
 801049e:	4620      	mov	r0, r4
 80104a0:	bd10      	pop	{r4, pc}

080104a2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 80104a2:	b510      	push	{r4, lr}
 80104a4:	2104      	movs	r1, #4
 80104a6:	4604      	mov	r4, r0
 80104a8:	f008 ff84 	bl	80193b4 <_ZdlPvj>
 80104ac:	4620      	mov	r0, r4
 80104ae:	bd10      	pop	{r4, pc}

080104b0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 80104b0:	b510      	push	{r4, lr}
 80104b2:	2104      	movs	r1, #4
 80104b4:	4604      	mov	r4, r0
 80104b6:	f008 ff7d 	bl	80193b4 <_ZdlPvj>
 80104ba:	4620      	mov	r0, r4
 80104bc:	bd10      	pop	{r4, pc}

080104be <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 80104be:	b510      	push	{r4, lr}
 80104c0:	2104      	movs	r1, #4
 80104c2:	4604      	mov	r4, r0
 80104c4:	f008 ff76 	bl	80193b4 <_ZdlPvj>
 80104c8:	4620      	mov	r0, r4
 80104ca:	bd10      	pop	{r4, pc}

080104cc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 80104cc:	b510      	push	{r4, lr}
 80104ce:	2104      	movs	r1, #4
 80104d0:	4604      	mov	r4, r0
 80104d2:	f008 ff6f 	bl	80193b4 <_ZdlPvj>
 80104d6:	4620      	mov	r0, r4
 80104d8:	bd10      	pop	{r4, pc}

080104da <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD0Ev>:
 80104da:	b510      	push	{r4, lr}
 80104dc:	2104      	movs	r1, #4
 80104de:	4604      	mov	r4, r0
 80104e0:	f008 ff68 	bl	80193b4 <_ZdlPvj>
 80104e4:	4620      	mov	r0, r4
 80104e6:	bd10      	pop	{r4, pc}

080104e8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD0Ev>:
 80104e8:	b510      	push	{r4, lr}
 80104ea:	2104      	movs	r1, #4
 80104ec:	4604      	mov	r4, r0
 80104ee:	f008 ff61 	bl	80193b4 <_ZdlPvj>
 80104f2:	4620      	mov	r0, r4
 80104f4:	bd10      	pop	{r4, pc}

080104f6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD0Ev>:
 80104f6:	b510      	push	{r4, lr}
 80104f8:	2104      	movs	r1, #4
 80104fa:	4604      	mov	r4, r0
 80104fc:	f008 ff5a 	bl	80193b4 <_ZdlPvj>
 8010500:	4620      	mov	r0, r4
 8010502:	bd10      	pop	{r4, pc}

08010504 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD0Ev>:
 8010504:	b510      	push	{r4, lr}
 8010506:	2104      	movs	r1, #4
 8010508:	4604      	mov	r4, r0
 801050a:	f008 ff53 	bl	80193b4 <_ZdlPvj>
 801050e:	4620      	mov	r0, r4
 8010510:	bd10      	pop	{r4, pc}

08010512 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 8010512:	b510      	push	{r4, lr}
 8010514:	2104      	movs	r1, #4
 8010516:	4604      	mov	r4, r0
 8010518:	f008 ff4c 	bl	80193b4 <_ZdlPvj>
 801051c:	4620      	mov	r0, r4
 801051e:	bd10      	pop	{r4, pc}

08010520 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 8010520:	b510      	push	{r4, lr}
 8010522:	2104      	movs	r1, #4
 8010524:	4604      	mov	r4, r0
 8010526:	f008 ff45 	bl	80193b4 <_ZdlPvj>
 801052a:	4620      	mov	r0, r4
 801052c:	bd10      	pop	{r4, pc}

0801052e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 801052e:	b510      	push	{r4, lr}
 8010530:	2104      	movs	r1, #4
 8010532:	4604      	mov	r4, r0
 8010534:	f008 ff3e 	bl	80193b4 <_ZdlPvj>
 8010538:	4620      	mov	r0, r4
 801053a:	bd10      	pop	{r4, pc}

0801053c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 801053c:	b510      	push	{r4, lr}
 801053e:	2104      	movs	r1, #4
 8010540:	4604      	mov	r4, r0
 8010542:	f008 ff37 	bl	80193b4 <_ZdlPvj>
 8010546:	4620      	mov	r0, r4
 8010548:	bd10      	pop	{r4, pc}

0801054a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 801054a:	b510      	push	{r4, lr}
 801054c:	2104      	movs	r1, #4
 801054e:	4604      	mov	r4, r0
 8010550:	f008 ff30 	bl	80193b4 <_ZdlPvj>
 8010554:	4620      	mov	r0, r4
 8010556:	bd10      	pop	{r4, pc}

08010558 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 8010558:	b510      	push	{r4, lr}
 801055a:	2104      	movs	r1, #4
 801055c:	4604      	mov	r4, r0
 801055e:	f008 ff29 	bl	80193b4 <_ZdlPvj>
 8010562:	4620      	mov	r0, r4
 8010564:	bd10      	pop	{r4, pc}

08010566 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 8010566:	b510      	push	{r4, lr}
 8010568:	2104      	movs	r1, #4
 801056a:	4604      	mov	r4, r0
 801056c:	f008 ff22 	bl	80193b4 <_ZdlPvj>
 8010570:	4620      	mov	r0, r4
 8010572:	bd10      	pop	{r4, pc}

08010574 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD0Ev>:
 8010574:	b510      	push	{r4, lr}
 8010576:	2104      	movs	r1, #4
 8010578:	4604      	mov	r4, r0
 801057a:	f008 ff1b 	bl	80193b4 <_ZdlPvj>
 801057e:	4620      	mov	r0, r4
 8010580:	bd10      	pop	{r4, pc}

08010582 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 8010582:	b510      	push	{r4, lr}
 8010584:	2104      	movs	r1, #4
 8010586:	4604      	mov	r4, r0
 8010588:	f008 ff14 	bl	80193b4 <_ZdlPvj>
 801058c:	4620      	mov	r0, r4
 801058e:	bd10      	pop	{r4, pc}

08010590 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 8010590:	b510      	push	{r4, lr}
 8010592:	2104      	movs	r1, #4
 8010594:	4604      	mov	r4, r0
 8010596:	f008 ff0d 	bl	80193b4 <_ZdlPvj>
 801059a:	4620      	mov	r0, r4
 801059c:	bd10      	pop	{r4, pc}

0801059e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 801059e:	b510      	push	{r4, lr}
 80105a0:	2104      	movs	r1, #4
 80105a2:	4604      	mov	r4, r0
 80105a4:	f008 ff06 	bl	80193b4 <_ZdlPvj>
 80105a8:	4620      	mov	r0, r4
 80105aa:	bd10      	pop	{r4, pc}

080105ac <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD0Ev>:
 80105ac:	b510      	push	{r4, lr}
 80105ae:	2104      	movs	r1, #4
 80105b0:	4604      	mov	r4, r0
 80105b2:	f008 feff 	bl	80193b4 <_ZdlPvj>
 80105b6:	4620      	mov	r0, r4
 80105b8:	bd10      	pop	{r4, pc}

080105ba <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 80105ba:	b510      	push	{r4, lr}
 80105bc:	2104      	movs	r1, #4
 80105be:	4604      	mov	r4, r0
 80105c0:	f008 fef8 	bl	80193b4 <_ZdlPvj>
 80105c4:	4620      	mov	r0, r4
 80105c6:	bd10      	pop	{r4, pc}

080105c8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 80105c8:	b510      	push	{r4, lr}
 80105ca:	2104      	movs	r1, #4
 80105cc:	4604      	mov	r4, r0
 80105ce:	f008 fef1 	bl	80193b4 <_ZdlPvj>
 80105d2:	4620      	mov	r0, r4
 80105d4:	bd10      	pop	{r4, pc}

080105d6 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 80105d6:	b510      	push	{r4, lr}
 80105d8:	2104      	movs	r1, #4
 80105da:	4604      	mov	r4, r0
 80105dc:	f008 feea 	bl	80193b4 <_ZdlPvj>
 80105e0:	4620      	mov	r0, r4
 80105e2:	bd10      	pop	{r4, pc}

080105e4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 80105e4:	b510      	push	{r4, lr}
 80105e6:	2104      	movs	r1, #4
 80105e8:	4604      	mov	r4, r0
 80105ea:	f008 fee3 	bl	80193b4 <_ZdlPvj>
 80105ee:	4620      	mov	r0, r4
 80105f0:	bd10      	pop	{r4, pc}

080105f2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD0Ev>:
 80105f2:	b510      	push	{r4, lr}
 80105f4:	2104      	movs	r1, #4
 80105f6:	4604      	mov	r4, r0
 80105f8:	f008 fedc 	bl	80193b4 <_ZdlPvj>
 80105fc:	4620      	mov	r0, r4
 80105fe:	bd10      	pop	{r4, pc}

08010600 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD0Ev>:
 8010600:	b510      	push	{r4, lr}
 8010602:	2104      	movs	r1, #4
 8010604:	4604      	mov	r4, r0
 8010606:	f008 fed5 	bl	80193b4 <_ZdlPvj>
 801060a:	4620      	mov	r0, r4
 801060c:	bd10      	pop	{r4, pc}

0801060e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD0Ev>:
 801060e:	b510      	push	{r4, lr}
 8010610:	2104      	movs	r1, #4
 8010612:	4604      	mov	r4, r0
 8010614:	f008 fece 	bl	80193b4 <_ZdlPvj>
 8010618:	4620      	mov	r0, r4
 801061a:	bd10      	pop	{r4, pc}

0801061c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD0Ev>:
 801061c:	b510      	push	{r4, lr}
 801061e:	2104      	movs	r1, #4
 8010620:	4604      	mov	r4, r0
 8010622:	f008 fec7 	bl	80193b4 <_ZdlPvj>
 8010626:	4620      	mov	r0, r4
 8010628:	bd10      	pop	{r4, pc}
	...

0801062c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh>:
 801062c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010630:	460e      	mov	r6, r1
 8010632:	b08b      	sub	sp, #44	; 0x2c
 8010634:	4615      	mov	r5, r2
 8010636:	461c      	mov	r4, r3
 8010638:	b323      	cbz	r3, 8010684 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x58>
 801063a:	4608      	mov	r0, r1
 801063c:	f7f8 fc55 	bl	8008eea <_ZNK8touchgfx4Rect7isEmptyEv>
 8010640:	bb00      	cbnz	r0, 8010684 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x58>
 8010642:	6830      	ldr	r0, [r6, #0]
 8010644:	6871      	ldr	r1, [r6, #4]
 8010646:	4e55      	ldr	r6, [pc, #340]	; (801079c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x170>)
 8010648:	ab08      	add	r3, sp, #32
 801064a:	c303      	stmia	r3!, {r0, r1}
 801064c:	a808      	add	r0, sp, #32
 801064e:	f7fb f8a5 	bl	800b79c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8010652:	6830      	ldr	r0, [r6, #0]
 8010654:	6803      	ldr	r3, [r0, #0]
 8010656:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8010658:	4798      	blx	r3
 801065a:	2cff      	cmp	r4, #255	; 0xff
 801065c:	d015      	beq.n	801068a <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5e>
 801065e:	f010 0f08 	tst.w	r0, #8
 8010662:	d015      	beq.n	8010690 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x64>
 8010664:	6830      	ldr	r0, [r6, #0]
 8010666:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
 801066a:	6801      	ldr	r1, [r0, #0]
 801066c:	9402      	str	r4, [sp, #8]
 801066e:	f8bd 4026 	ldrh.w	r4, [sp, #38]	; 0x26
 8010672:	9401      	str	r4, [sp, #4]
 8010674:	f8bd 4024 	ldrh.w	r4, [sp, #36]	; 0x24
 8010678:	9400      	str	r4, [sp, #0]
 801067a:	6c8c      	ldr	r4, [r1, #72]	; 0x48
 801067c:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 8010680:	4629      	mov	r1, r5
 8010682:	47a0      	blx	r4
 8010684:	b00b      	add	sp, #44	; 0x2c
 8010686:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801068a:	f010 0f02 	tst.w	r0, #2
 801068e:	e7e8      	b.n	8010662 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x36>
 8010690:	6830      	ldr	r0, [r6, #0]
 8010692:	f9bd 8024 	ldrsh.w	r8, [sp, #36]	; 0x24
 8010696:	6803      	ldr	r3, [r0, #0]
 8010698:	f9bd 9026 	ldrsh.w	r9, [sp, #38]	; 0x26
 801069c:	6a1b      	ldr	r3, [r3, #32]
 801069e:	4798      	blx	r3
 80106a0:	4a3f      	ldr	r2, [pc, #252]	; (80107a0 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x174>)
 80106a2:	f9bd 1020 	ldrsh.w	r1, [sp, #32]
 80106a6:	8816      	ldrh	r6, [r2, #0]
 80106a8:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 80106ac:	2cff      	cmp	r4, #255	; 0xff
 80106ae:	fb06 1303 	mla	r3, r6, r3, r1
 80106b2:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80106b6:	ea4f 0b48 	mov.w	fp, r8, lsl #1
 80106ba:	4616      	mov	r6, r2
 80106bc:	ea28 71e8 	bic.w	r1, r8, r8, asr #31
 80106c0:	d10a      	bne.n	80106d8 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0xac>
 80106c2:	0049      	lsls	r1, r1, #1
 80106c4:	2200      	movs	r2, #0
 80106c6:	454a      	cmp	r2, r9
 80106c8:	da61      	bge.n	801078e <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x162>
 80106ca:	2300      	movs	r3, #0
 80106cc:	4543      	cmp	r3, r8
 80106ce:	da57      	bge.n	8010780 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x154>
 80106d0:	f820 5013 	strh.w	r5, [r0, r3, lsl #1]
 80106d4:	3301      	adds	r3, #1
 80106d6:	e7f9      	b.n	80106cc <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0xa0>
 80106d8:	0a2b      	lsrs	r3, r5, #8
 80106da:	f1c4 07ff 	rsb	r7, r4, #255	; 0xff
 80106de:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 80106e2:	b2a4      	uxth	r4, r4
 80106e4:	4363      	muls	r3, r4
 80106e6:	9305      	str	r3, [sp, #20]
 80106e8:	08ee      	lsrs	r6, r5, #3
 80106ea:	00eb      	lsls	r3, r5, #3
 80106ec:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80106f0:	b2db      	uxtb	r3, r3
 80106f2:	0049      	lsls	r1, r1, #1
 80106f4:	4366      	muls	r6, r4
 80106f6:	4363      	muls	r3, r4
 80106f8:	9106      	str	r1, [sp, #24]
 80106fa:	f04f 0c00 	mov.w	ip, #0
 80106fe:	b2bf      	uxth	r7, r7
 8010700:	9207      	str	r2, [sp, #28]
 8010702:	45cc      	cmp	ip, r9
 8010704:	da43      	bge.n	801078e <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x162>
 8010706:	4682      	mov	sl, r0
 8010708:	f04f 0e00 	mov.w	lr, #0
 801070c:	45c6      	cmp	lr, r8
 801070e:	da2d      	bge.n	801076c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x140>
 8010710:	f8ba 2000 	ldrh.w	r2, [sl]
 8010714:	9905      	ldr	r1, [sp, #20]
 8010716:	1214      	asrs	r4, r2, #8
 8010718:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 801071c:	fb14 f407 	smulbb	r4, r4, r7
 8010720:	440c      	add	r4, r1
 8010722:	10d1      	asrs	r1, r2, #3
 8010724:	00d2      	lsls	r2, r2, #3
 8010726:	b2d2      	uxtb	r2, r2
 8010728:	fb12 f207 	smulbb	r2, r2, r7
 801072c:	b2a4      	uxth	r4, r4
 801072e:	441a      	add	r2, r3
 8010730:	b292      	uxth	r2, r2
 8010732:	1c65      	adds	r5, r4, #1
 8010734:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8010738:	eb05 2414 	add.w	r4, r5, r4, lsr #8
 801073c:	fb11 f107 	smulbb	r1, r1, r7
 8010740:	1c55      	adds	r5, r2, #1
 8010742:	4431      	add	r1, r6
 8010744:	eb05 2212 	add.w	r2, r5, r2, lsr #8
 8010748:	b289      	uxth	r1, r1
 801074a:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801074e:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 8010752:	4314      	orrs	r4, r2
 8010754:	1c4a      	adds	r2, r1, #1
 8010756:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801075a:	0949      	lsrs	r1, r1, #5
 801075c:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8010760:	430c      	orrs	r4, r1
 8010762:	f82a 4b02 	strh.w	r4, [sl], #2
 8010766:	f10e 0e01 	add.w	lr, lr, #1
 801076a:	e7cf      	b.n	801070c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0xe0>
 801076c:	9a07      	ldr	r2, [sp, #28]
 801076e:	9906      	ldr	r1, [sp, #24]
 8010770:	8812      	ldrh	r2, [r2, #0]
 8010772:	ebcb 0242 	rsb	r2, fp, r2, lsl #1
 8010776:	440a      	add	r2, r1
 8010778:	4410      	add	r0, r2
 801077a:	f10c 0c01 	add.w	ip, ip, #1
 801077e:	e7c0      	b.n	8010702 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0xd6>
 8010780:	8833      	ldrh	r3, [r6, #0]
 8010782:	ebcb 0343 	rsb	r3, fp, r3, lsl #1
 8010786:	440b      	add	r3, r1
 8010788:	4418      	add	r0, r3
 801078a:	3201      	adds	r2, #1
 801078c:	e79b      	b.n	80106c6 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x9a>
 801078e:	4b03      	ldr	r3, [pc, #12]	; (801079c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x170>)
 8010790:	6818      	ldr	r0, [r3, #0]
 8010792:	6803      	ldr	r3, [r0, #0]
 8010794:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8010796:	4798      	blx	r3
 8010798:	e774      	b.n	8010684 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x58>
 801079a:	bf00      	nop
 801079c:	20012188 	.word	0x20012188
 80107a0:	20012182 	.word	0x20012182

080107a4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t>:
 80107a4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80107a8:	4d9b      	ldr	r5, [pc, #620]	; (8010a18 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x274>)
 80107aa:	4690      	mov	r8, r2
 80107ac:	682a      	ldr	r2, [r5, #0]
 80107ae:	f892 2048 	ldrb.w	r2, [r2, #72]	; 0x48
 80107b2:	2a02      	cmp	r2, #2
 80107b4:	b08f      	sub	sp, #60	; 0x3c
 80107b6:	4604      	mov	r4, r0
 80107b8:	4689      	mov	r9, r1
 80107ba:	d106      	bne.n	80107ca <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x26>
 80107bc:	4b97      	ldr	r3, [pc, #604]	; (8010a1c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x278>)
 80107be:	4a98      	ldr	r2, [pc, #608]	; (8010a20 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x27c>)
 80107c0:	f240 21be 	movw	r1, #702	; 0x2be
 80107c4:	4897      	ldr	r0, [pc, #604]	; (8010a24 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x280>)
 80107c6:	f008 fe21 	bl	801940c <__assert_func>
 80107ca:	ae0e      	add	r6, sp, #56	; 0x38
 80107cc:	f826 3d24 	strh.w	r3, [r6, #-36]!
 80107d0:	4630      	mov	r0, r6
 80107d2:	f7fd fad9 	bl	800dd88 <_ZNK8touchgfx6Bitmap9getFormatEv>
 80107d6:	6823      	ldr	r3, [r4, #0]
 80107d8:	4607      	mov	r7, r0
 80107da:	6a1b      	ldr	r3, [r3, #32]
 80107dc:	4620      	mov	r0, r4
 80107de:	4798      	blx	r3
 80107e0:	4287      	cmp	r7, r0
 80107e2:	d004      	beq.n	80107ee <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x4a>
 80107e4:	4b90      	ldr	r3, [pc, #576]	; (8010a28 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x284>)
 80107e6:	4a8e      	ldr	r2, [pc, #568]	; (8010a20 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x27c>)
 80107e8:	f44f 7130 	mov.w	r1, #704	; 0x2c0
 80107ec:	e7ea      	b.n	80107c4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x20>
 80107ee:	4630      	mov	r0, r6
 80107f0:	f7fd fa46 	bl	800dc80 <_ZNK8touchgfx6Bitmap7getDataEv>
 80107f4:	4607      	mov	r7, r0
 80107f6:	b920      	cbnz	r0, 8010802 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x5e>
 80107f8:	4b8c      	ldr	r3, [pc, #560]	; (8010a2c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x288>)
 80107fa:	4a89      	ldr	r2, [pc, #548]	; (8010a20 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x27c>)
 80107fc:	f240 21c2 	movw	r1, #706	; 0x2c2
 8010800:	e7e0      	b.n	80107c4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x20>
 8010802:	f8d8 0000 	ldr.w	r0, [r8]
 8010806:	f8d8 1004 	ldr.w	r1, [r8, #4]
 801080a:	f9b8 a000 	ldrsh.w	sl, [r8]
 801080e:	ab06      	add	r3, sp, #24
 8010810:	c303      	stmia	r3!, {r0, r1}
 8010812:	f8d9 1004 	ldr.w	r1, [r9, #4]
 8010816:	f8d9 0000 	ldr.w	r0, [r9]
 801081a:	f9b8 9002 	ldrsh.w	r9, [r8, #2]
 801081e:	ab08      	add	r3, sp, #32
 8010820:	c303      	stmia	r3!, {r0, r1}
 8010822:	4630      	mov	r0, r6
 8010824:	f7fd f924 	bl	800da70 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8010828:	4680      	mov	r8, r0
 801082a:	4630      	mov	r0, r6
 801082c:	f7fd f95a 	bl	800dae4 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8010830:	f8ad 902a 	strh.w	r9, [sp, #42]	; 0x2a
 8010834:	f8ad 002e 	strh.w	r0, [sp, #46]	; 0x2e
 8010838:	f10d 0920 	add.w	r9, sp, #32
 801083c:	a806      	add	r0, sp, #24
 801083e:	f8ad a028 	strh.w	sl, [sp, #40]	; 0x28
 8010842:	f8ad 802c 	strh.w	r8, [sp, #44]	; 0x2c
 8010846:	f7fa ffa9 	bl	800b79c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801084a:	4648      	mov	r0, r9
 801084c:	f7fa ffa6 	bl	800b79c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8010850:	a80a      	add	r0, sp, #40	; 0x28
 8010852:	f7fa ffa3 	bl	800b79c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8010856:	4e76      	ldr	r6, [pc, #472]	; (8010a30 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x28c>)
 8010858:	4b76      	ldr	r3, [pc, #472]	; (8010a34 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x290>)
 801085a:	f9b6 2000 	ldrsh.w	r2, [r6]
 801085e:	f9b3 3000 	ldrsh.w	r3, [r3]
 8010862:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
 8010866:	2100      	movs	r1, #0
 8010868:	910c      	str	r1, [sp, #48]	; 0x30
 801086a:	4648      	mov	r0, r9
 801086c:	a90c      	add	r1, sp, #48	; 0x30
 801086e:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 8010872:	f7f8 faf7 	bl	8008e64 <_ZN8touchgfx4RectaNERKS0_>
 8010876:	4648      	mov	r0, r9
 8010878:	f7f8 fb37 	bl	8008eea <_ZNK8touchgfx4Rect7isEmptyEv>
 801087c:	2800      	cmp	r0, #0
 801087e:	f040 80bd 	bne.w	80109fc <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x258>
 8010882:	f9bd 0020 	ldrsh.w	r0, [sp, #32]
 8010886:	f9bd 1018 	ldrsh.w	r1, [sp, #24]
 801088a:	4288      	cmp	r0, r1
 801088c:	db37      	blt.n	80108fe <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x15a>
 801088e:	f9bd 2022 	ldrsh.w	r2, [sp, #34]	; 0x22
 8010892:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 8010896:	429a      	cmp	r2, r3
 8010898:	db31      	blt.n	80108fe <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x15a>
 801089a:	f8bd c024 	ldrh.w	ip, [sp, #36]	; 0x24
 801089e:	4460      	add	r0, ip
 80108a0:	f8bd c01c 	ldrh.w	ip, [sp, #28]
 80108a4:	4461      	add	r1, ip
 80108a6:	b200      	sxth	r0, r0
 80108a8:	b209      	sxth	r1, r1
 80108aa:	4288      	cmp	r0, r1
 80108ac:	dc27      	bgt.n	80108fe <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x15a>
 80108ae:	f8bd 1026 	ldrh.w	r1, [sp, #38]	; 0x26
 80108b2:	440a      	add	r2, r1
 80108b4:	f8bd 101e 	ldrh.w	r1, [sp, #30]
 80108b8:	440b      	add	r3, r1
 80108ba:	b212      	sxth	r2, r2
 80108bc:	b21b      	sxth	r3, r3
 80108be:	429a      	cmp	r2, r3
 80108c0:	dc1d      	bgt.n	80108fe <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x15a>
 80108c2:	6823      	ldr	r3, [r4, #0]
 80108c4:	4620      	mov	r0, r4
 80108c6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80108c8:	4798      	blx	r3
 80108ca:	4682      	mov	sl, r0
 80108cc:	6828      	ldr	r0, [r5, #0]
 80108ce:	6803      	ldr	r3, [r0, #0]
 80108d0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80108d2:	4798      	blx	r3
 80108d4:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	; 0x28
 80108d8:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 80108dc:	f9bd b02c 	ldrsh.w	fp, [sp, #44]	; 0x2c
 80108e0:	1a9b      	subs	r3, r3, r2
 80108e2:	b29b      	uxth	r3, r3
 80108e4:	b21c      	sxth	r4, r3
 80108e6:	2c00      	cmp	r4, #0
 80108e8:	dc0e      	bgt.n	8010908 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x164>
 80108ea:	bf1f      	itttt	ne
 80108ec:	f8ad 2020 	strhne.w	r2, [sp, #32]
 80108f0:	f8bd 2024 	ldrhne.w	r2, [sp, #36]	; 0x24
 80108f4:	189b      	addne	r3, r3, r2
 80108f6:	f8ad 3024 	strhne.w	r3, [sp, #36]	; 0x24
 80108fa:	463c      	mov	r4, r7
 80108fc:	e00a      	b.n	8010914 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x170>
 80108fe:	4b4e      	ldr	r3, [pc, #312]	; (8010a38 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x294>)
 8010900:	4a47      	ldr	r2, [pc, #284]	; (8010a20 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x27c>)
 8010902:	f44f 7134 	mov.w	r1, #720	; 0x2d0
 8010906:	e75d      	b.n	80107c4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x20>
 8010908:	ebab 0303 	sub.w	r3, fp, r3
 801090c:	eb07 0444 	add.w	r4, r7, r4, lsl #1
 8010910:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8010914:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	; 0x2a
 8010918:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
 801091c:	1a5b      	subs	r3, r3, r1
 801091e:	b29b      	uxth	r3, r3
 8010920:	b21a      	sxth	r2, r3
 8010922:	2a00      	cmp	r2, #0
 8010924:	dd4a      	ble.n	80109bc <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x218>
 8010926:	fb02 f20b 	mul.w	r2, r2, fp
 801092a:	eb04 0442 	add.w	r4, r4, r2, lsl #1
 801092e:	f8bd 202e 	ldrh.w	r2, [sp, #46]	; 0x2e
 8010932:	1ad3      	subs	r3, r2, r3
 8010934:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 8010938:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 801093c:	2b00      	cmp	r3, #0
 801093e:	dd5d      	ble.n	80109fc <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x258>
 8010940:	f9bd c02e 	ldrsh.w	ip, [sp, #46]	; 0x2e
 8010944:	f1bc 0f00 	cmp.w	ip, #0
 8010948:	dd58      	ble.n	80109fc <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x258>
 801094a:	f9bd 1022 	ldrsh.w	r1, [sp, #34]	; 0x22
 801094e:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 8010952:	fb0a f801 	mul.w	r8, sl, r1
 8010956:	eb08 0842 	add.w	r8, r8, r2, lsl #1
 801095a:	4480      	add	r8, r0
 801095c:	8830      	ldrh	r0, [r6, #0]
 801095e:	f9bd 6024 	ldrsh.w	r6, [sp, #36]	; 0x24
 8010962:	42b3      	cmp	r3, r6
 8010964:	bfa8      	it	ge
 8010966:	4633      	movge	r3, r6
 8010968:	1a82      	subs	r2, r0, r2
 801096a:	4293      	cmp	r3, r2
 801096c:	bfa8      	it	ge
 801096e:	4613      	movge	r3, r2
 8010970:	4a30      	ldr	r2, [pc, #192]	; (8010a34 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x290>)
 8010972:	f9bd 6026 	ldrsh.w	r6, [sp, #38]	; 0x26
 8010976:	8812      	ldrh	r2, [r2, #0]
 8010978:	4566      	cmp	r6, ip
 801097a:	eba2 0101 	sub.w	r1, r2, r1
 801097e:	bfa8      	it	ge
 8010980:	4666      	movge	r6, ip
 8010982:	428e      	cmp	r6, r1
 8010984:	4632      	mov	r2, r6
 8010986:	bfa8      	it	ge
 8010988:	460a      	movge	r2, r1
 801098a:	4298      	cmp	r0, r3
 801098c:	9202      	str	r2, [sp, #8]
 801098e:	d01e      	beq.n	80109ce <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x22a>
 8010990:	005b      	lsls	r3, r3, #1
 8010992:	9303      	str	r3, [sp, #12]
 8010994:	ea4f 0b4b 	mov.w	fp, fp, lsl #1
 8010998:	f04f 0900 	mov.w	r9, #0
 801099c:	9b02      	ldr	r3, [sp, #8]
 801099e:	454b      	cmp	r3, r9
 80109a0:	dd2c      	ble.n	80109fc <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x258>
 80109a2:	6828      	ldr	r0, [r5, #0]
 80109a4:	6803      	ldr	r3, [r0, #0]
 80109a6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80109a8:	4642      	mov	r2, r8
 80109aa:	461e      	mov	r6, r3
 80109ac:	4621      	mov	r1, r4
 80109ae:	9b03      	ldr	r3, [sp, #12]
 80109b0:	47b0      	blx	r6
 80109b2:	44d0      	add	r8, sl
 80109b4:	445c      	add	r4, fp
 80109b6:	f109 0901 	add.w	r9, r9, #1
 80109ba:	e7ef      	b.n	801099c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x1f8>
 80109bc:	bf1f      	itttt	ne
 80109be:	f8bd 2026 	ldrhne.w	r2, [sp, #38]	; 0x26
 80109c2:	f8ad 1022 	strhne.w	r1, [sp, #34]	; 0x22
 80109c6:	189b      	addne	r3, r3, r2
 80109c8:	f8ad 3026 	strhne.w	r3, [sp, #38]	; 0x26
 80109cc:	e7b4      	b.n	8010938 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x194>
 80109ce:	4558      	cmp	r0, fp
 80109d0:	d1de      	bne.n	8010990 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x1ec>
 80109d2:	6828      	ldr	r0, [r5, #0]
 80109d4:	6803      	ldr	r3, [r0, #0]
 80109d6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80109d8:	4798      	blx	r3
 80109da:	07c3      	lsls	r3, r0, #31
 80109dc:	d512      	bpl.n	8010a04 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x260>
 80109de:	6828      	ldr	r0, [r5, #0]
 80109e0:	9b02      	ldr	r3, [sp, #8]
 80109e2:	f8ad b024 	strh.w	fp, [sp, #36]	; 0x24
 80109e6:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 80109ea:	6803      	ldr	r3, [r0, #0]
 80109ec:	f8cd b000 	str.w	fp, [sp]
 80109f0:	6d5d      	ldr	r5, [r3, #84]	; 0x54
 80109f2:	e899 0006 	ldmia.w	r9, {r1, r2}
 80109f6:	4623      	mov	r3, r4
 80109f8:	47a8      	blx	r5
 80109fa:	4607      	mov	r7, r0
 80109fc:	4638      	mov	r0, r7
 80109fe:	b00f      	add	sp, #60	; 0x3c
 8010a00:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010a04:	6828      	ldr	r0, [r5, #0]
 8010a06:	6803      	ldr	r3, [r0, #0]
 8010a08:	6add      	ldr	r5, [r3, #44]	; 0x2c
 8010a0a:	9b02      	ldr	r3, [sp, #8]
 8010a0c:	4642      	mov	r2, r8
 8010a0e:	fb03 f30a 	mul.w	r3, r3, sl
 8010a12:	4621      	mov	r1, r4
 8010a14:	47a8      	blx	r5
 8010a16:	e7f1      	b.n	80109fc <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x258>
 8010a18:	20012188 	.word	0x20012188
 8010a1c:	0801cf6f 	.word	0x0801cf6f
 8010a20:	0801d7ab 	.word	0x0801d7ab
 8010a24:	0801d021 	.word	0x0801d021
 8010a28:	0801d053 	.word	0x0801d053
 8010a2c:	0801d0a8 	.word	0x0801d0a8
 8010a30:	20012182 	.word	0x20012182
 8010a34:	20012184 	.word	0x20012184
 8010a38:	0801d0e6 	.word	0x0801d0e6

08010a3c <_ZN8touchgfx8LCD16bppC1Ev>:
 8010a3c:	2200      	movs	r2, #0
 8010a3e:	4910      	ldr	r1, [pc, #64]	; (8010a80 <_ZN8touchgfx8LCD16bppC1Ev+0x44>)
 8010a40:	6042      	str	r2, [r0, #4]
 8010a42:	6001      	str	r1, [r0, #0]
 8010a44:	e9c0 2202 	strd	r2, r2, [r0, #8]
 8010a48:	e9c0 2204 	strd	r2, r2, [r0, #16]
 8010a4c:	e9c0 2206 	strd	r2, r2, [r0, #24]
 8010a50:	e9c0 2208 	strd	r2, r2, [r0, #32]
 8010a54:	e9c0 220a 	strd	r2, r2, [r0, #40]	; 0x28
 8010a58:	e9c0 220c 	strd	r2, r2, [r0, #48]	; 0x30
 8010a5c:	e9c0 220e 	strd	r2, r2, [r0, #56]	; 0x38
 8010a60:	e9c0 2210 	strd	r2, r2, [r0, #64]	; 0x40
 8010a64:	e9c0 2212 	strd	r2, r2, [r0, #72]	; 0x48
 8010a68:	e9c0 2214 	strd	r2, r2, [r0, #80]	; 0x50
 8010a6c:	e9c0 2216 	strd	r2, r2, [r0, #88]	; 0x58
 8010a70:	e9c0 2218 	strd	r2, r2, [r0, #96]	; 0x60
 8010a74:	e9c0 221a 	strd	r2, r2, [r0, #104]	; 0x68
 8010a78:	e9c0 221c 	strd	r2, r2, [r0, #112]	; 0x70
 8010a7c:	4770      	bx	lr
 8010a7e:	bf00      	nop
 8010a80:	0801d428 	.word	0x0801d428

08010a84 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>:
 8010a84:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010a88:	460c      	mov	r4, r1
 8010a8a:	b08d      	sub	sp, #52	; 0x34
 8010a8c:	4682      	mov	sl, r0
 8010a8e:	6808      	ldr	r0, [r1, #0]
 8010a90:	6849      	ldr	r1, [r1, #4]
 8010a92:	469b      	mov	fp, r3
 8010a94:	ab08      	add	r3, sp, #32
 8010a96:	c303      	stmia	r3!, {r0, r1}
 8010a98:	6810      	ldr	r0, [r2, #0]
 8010a9a:	6851      	ldr	r1, [r2, #4]
 8010a9c:	ab0a      	add	r3, sp, #40	; 0x28
 8010a9e:	c303      	stmia	r3!, {r0, r1}
 8010aa0:	a808      	add	r0, sp, #32
 8010aa2:	f7fa fe7b 	bl	800b79c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8010aa6:	4621      	mov	r1, r4
 8010aa8:	a80a      	add	r0, sp, #40	; 0x28
 8010aaa:	f7fa fe5f 	bl	800b76c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8010aae:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	; 0x28
 8010ab2:	f9bd 302a 	ldrsh.w	r3, [sp, #42]	; 0x2a
 8010ab6:	f8bd 1024 	ldrh.w	r1, [sp, #36]	; 0x24
 8010aba:	4c60      	ldr	r4, [pc, #384]	; (8010c3c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1b8>)
 8010abc:	f9bd 802c 	ldrsh.w	r8, [sp, #44]	; 0x2c
 8010ac0:	6820      	ldr	r0, [r4, #0]
 8010ac2:	f9bd 902e 	ldrsh.w	r9, [sp, #46]	; 0x2e
 8010ac6:	fb11 2103 	smlabb	r1, r1, r3, r2
 8010aca:	eb0a 0a81 	add.w	sl, sl, r1, lsl #2
 8010ace:	f8bd 1020 	ldrh.w	r1, [sp, #32]
 8010ad2:	440a      	add	r2, r1
 8010ad4:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 8010ad8:	f8bd 2022 	ldrh.w	r2, [sp, #34]	; 0x22
 8010adc:	4413      	add	r3, r2
 8010ade:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 8010ae2:	6803      	ldr	r3, [r0, #0]
 8010ae4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8010ae6:	4798      	blx	r3
 8010ae8:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 8010aec:	d119      	bne.n	8010b22 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x9e>
 8010aee:	f010 0f20 	tst.w	r0, #32
 8010af2:	6820      	ldr	r0, [r4, #0]
 8010af4:	d018      	beq.n	8010b28 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xa4>
 8010af6:	f8bd 4024 	ldrh.w	r4, [sp, #36]	; 0x24
 8010afa:	6801      	ldr	r1, [r0, #0]
 8010afc:	9402      	str	r4, [sp, #8]
 8010afe:	fa1f f489 	uxth.w	r4, r9
 8010b02:	9401      	str	r4, [sp, #4]
 8010b04:	fa1f f488 	uxth.w	r4, r8
 8010b08:	f8cd b00c 	str.w	fp, [sp, #12]
 8010b0c:	9400      	str	r4, [sp, #0]
 8010b0e:	6bcc      	ldr	r4, [r1, #60]	; 0x3c
 8010b10:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 8010b14:	f8bd 2028 	ldrh.w	r2, [sp, #40]	; 0x28
 8010b18:	4651      	mov	r1, sl
 8010b1a:	47a0      	blx	r4
 8010b1c:	b00d      	add	sp, #52	; 0x34
 8010b1e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010b22:	f010 0f40 	tst.w	r0, #64	; 0x40
 8010b26:	e7e4      	b.n	8010af2 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x6e>
 8010b28:	6803      	ldr	r3, [r0, #0]
 8010b2a:	6a1b      	ldr	r3, [r3, #32]
 8010b2c:	4798      	blx	r3
 8010b2e:	4a44      	ldr	r2, [pc, #272]	; (8010c40 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1bc>)
 8010b30:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	; 0x28
 8010b34:	8813      	ldrh	r3, [r2, #0]
 8010b36:	f9bd 402a 	ldrsh.w	r4, [sp, #42]	; 0x2a
 8010b3a:	9207      	str	r2, [sp, #28]
 8010b3c:	fb04 1303 	mla	r3, r4, r3, r1
 8010b40:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8010b44:	ea28 73e8 	bic.w	r3, r8, r8, asr #31
 8010b48:	0099      	lsls	r1, r3, #2
 8010b4a:	005b      	lsls	r3, r3, #1
 8010b4c:	9106      	str	r1, [sp, #24]
 8010b4e:	9305      	str	r3, [sp, #20]
 8010b50:	f04f 0c00 	mov.w	ip, #0
 8010b54:	45cc      	cmp	ip, r9
 8010b56:	da6b      	bge.n	8010c30 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1ac>
 8010b58:	2300      	movs	r3, #0
 8010b5a:	4543      	cmp	r3, r8
 8010b5c:	da55      	bge.n	8010c0a <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x186>
 8010b5e:	f85a 4023 	ldr.w	r4, [sl, r3, lsl #2]
 8010b62:	0e25      	lsrs	r5, r4, #24
 8010b64:	d013      	beq.n	8010b8e <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x10a>
 8010b66:	2dff      	cmp	r5, #255	; 0xff
 8010b68:	ea4f 2714 	mov.w	r7, r4, lsr #8
 8010b6c:	d111      	bne.n	8010b92 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x10e>
 8010b6e:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 8010b72:	d10e      	bne.n	8010b92 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x10e>
 8010b74:	0962      	lsrs	r2, r4, #5
 8010b76:	f427 67ff 	bic.w	r7, r7, #2040	; 0x7f8
 8010b7a:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8010b7e:	f027 0707 	bic.w	r7, r7, #7
 8010b82:	4317      	orrs	r7, r2
 8010b84:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 8010b88:	433c      	orrs	r4, r7
 8010b8a:	f820 4013 	strh.w	r4, [r0, r3, lsl #1]
 8010b8e:	3301      	adds	r3, #1
 8010b90:	e7e3      	b.n	8010b5a <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xd6>
 8010b92:	fb0b f505 	mul.w	r5, fp, r5
 8010b96:	1c6a      	adds	r2, r5, #1
 8010b98:	f830 1013 	ldrh.w	r1, [r0, r3, lsl #1]
 8010b9c:	eb02 2225 	add.w	r2, r2, r5, asr #8
 8010ba0:	1212      	asrs	r2, r2, #8
 8010ba2:	fa1f fe82 	uxth.w	lr, r2
 8010ba6:	120e      	asrs	r6, r1, #8
 8010ba8:	f3c4 4507 	ubfx	r5, r4, #16, #8
 8010bac:	43d2      	mvns	r2, r2
 8010bae:	b2d2      	uxtb	r2, r2
 8010bb0:	fb15 f50e 	smulbb	r5, r5, lr
 8010bb4:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8010bb8:	fb06 5602 	mla	r6, r6, r2, r5
 8010bbc:	b2e4      	uxtb	r4, r4
 8010bbe:	10cd      	asrs	r5, r1, #3
 8010bc0:	00c9      	lsls	r1, r1, #3
 8010bc2:	b2c9      	uxtb	r1, r1
 8010bc4:	fb14 f40e 	smulbb	r4, r4, lr
 8010bc8:	fb01 4402 	mla	r4, r1, r2, r4
 8010bcc:	b2ff      	uxtb	r7, r7
 8010bce:	b2b6      	uxth	r6, r6
 8010bd0:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8010bd4:	b2a4      	uxth	r4, r4
 8010bd6:	fb17 f70e 	smulbb	r7, r7, lr
 8010bda:	fb05 7702 	mla	r7, r5, r2, r7
 8010bde:	1c72      	adds	r2, r6, #1
 8010be0:	1c65      	adds	r5, r4, #1
 8010be2:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 8010be6:	eb05 2514 	add.w	r5, r5, r4, lsr #8
 8010bea:	b2bf      	uxth	r7, r7
 8010bec:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8010bf0:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 8010bf4:	432e      	orrs	r6, r5
 8010bf6:	1c7d      	adds	r5, r7, #1
 8010bf8:	eb05 2717 	add.w	r7, r5, r7, lsr #8
 8010bfc:	097f      	lsrs	r7, r7, #5
 8010bfe:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8010c02:	433e      	orrs	r6, r7
 8010c04:	f820 6013 	strh.w	r6, [r0, r3, lsl #1]
 8010c08:	e7c1      	b.n	8010b8e <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x10a>
 8010c0a:	9b07      	ldr	r3, [sp, #28]
 8010c0c:	9a05      	ldr	r2, [sp, #20]
 8010c0e:	881b      	ldrh	r3, [r3, #0]
 8010c10:	eba3 0308 	sub.w	r3, r3, r8
 8010c14:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8010c18:	4418      	add	r0, r3
 8010c1a:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	; 0x24
 8010c1e:	9a06      	ldr	r2, [sp, #24]
 8010c20:	eba3 0308 	sub.w	r3, r3, r8
 8010c24:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 8010c28:	449a      	add	sl, r3
 8010c2a:	f10c 0c01 	add.w	ip, ip, #1
 8010c2e:	e791      	b.n	8010b54 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xd0>
 8010c30:	4b02      	ldr	r3, [pc, #8]	; (8010c3c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1b8>)
 8010c32:	6818      	ldr	r0, [r3, #0]
 8010c34:	6803      	ldr	r3, [r0, #0]
 8010c36:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8010c38:	4798      	blx	r3
 8010c3a:	e76f      	b.n	8010b1c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x98>
 8010c3c:	20012188 	.word	0x20012188
 8010c40:	20012182 	.word	0x20012182

08010c44 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb>:
 8010c44:	b570      	push	{r4, r5, r6, lr}
 8010c46:	9d04      	ldr	r5, [sp, #16]
 8010c48:	f89d 6018 	ldrb.w	r6, [sp, #24]
 8010c4c:	460c      	mov	r4, r1
 8010c4e:	4619      	mov	r1, r3
 8010c50:	f89d 3014 	ldrb.w	r3, [sp, #20]
 8010c54:	2a0c      	cmp	r2, #12
 8010c56:	d820      	bhi.n	8010c9a <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x56>
 8010c58:	e8df f002 	tbb	[pc, r2]
 8010c5c:	18121807 	.word	0x18121807
 8010c60:	18181818 	.word	0x18181818
 8010c64:	18181818 	.word	0x18181818
 8010c68:	18          	.byte	0x18
 8010c69:	00          	.byte	0x00
 8010c6a:	6802      	ldr	r2, [r0, #0]
 8010c6c:	e9cd 3604 	strd	r3, r6, [sp, #16]
 8010c70:	68d6      	ldr	r6, [r2, #12]
 8010c72:	462b      	mov	r3, r5
 8010c74:	460a      	mov	r2, r1
 8010c76:	46b4      	mov	ip, r6
 8010c78:	4621      	mov	r1, r4
 8010c7a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8010c7e:	4760      	bx	ip
 8010c80:	462a      	mov	r2, r5
 8010c82:	4620      	mov	r0, r4
 8010c84:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8010c88:	f7ff befc 	b.w	8010a84 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 8010c8c:	4b03      	ldr	r3, [pc, #12]	; (8010c9c <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x58>)
 8010c8e:	4a04      	ldr	r2, [pc, #16]	; (8010ca0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x5c>)
 8010c90:	4804      	ldr	r0, [pc, #16]	; (8010ca4 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x60>)
 8010c92:	f240 21b7 	movw	r1, #695	; 0x2b7
 8010c96:	f008 fbb9 	bl	801940c <__assert_func>
 8010c9a:	bd70      	pop	{r4, r5, r6, pc}
 8010c9c:	0801d146 	.word	0x0801d146
 8010ca0:	0801d831 	.word	0x0801d831
 8010ca4:	0801d021 	.word	0x0801d021

08010ca8 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>:
 8010ca8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010cac:	b093      	sub	sp, #76	; 0x4c
 8010cae:	880f      	ldrh	r7, [r1, #0]
 8010cb0:	f89d a070 	ldrb.w	sl, [sp, #112]	; 0x70
 8010cb4:	4681      	mov	r9, r0
 8010cb6:	4688      	mov	r8, r1
 8010cb8:	4615      	mov	r5, r2
 8010cba:	b12f      	cbz	r7, 8010cc8 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x20>
 8010cbc:	4b71      	ldr	r3, [pc, #452]	; (8010e84 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1dc>)
 8010cbe:	4a72      	ldr	r2, [pc, #456]	; (8010e88 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1e0>)
 8010cc0:	4872      	ldr	r0, [pc, #456]	; (8010e8c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1e4>)
 8010cc2:	21e8      	movs	r1, #232	; 0xe8
 8010cc4:	f008 fba2 	bl	801940c <__assert_func>
 8010cc8:	6810      	ldr	r0, [r2, #0]
 8010cca:	6851      	ldr	r1, [r2, #4]
 8010ccc:	ac0e      	add	r4, sp, #56	; 0x38
 8010cce:	c403      	stmia	r4!, {r0, r1}
 8010cd0:	6818      	ldr	r0, [r3, #0]
 8010cd2:	6859      	ldr	r1, [r3, #4]
 8010cd4:	ac10      	add	r4, sp, #64	; 0x40
 8010cd6:	c403      	stmia	r4!, {r0, r1}
 8010cd8:	a80e      	add	r0, sp, #56	; 0x38
 8010cda:	f7fa fd5f 	bl	800b79c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8010cde:	4629      	mov	r1, r5
 8010ce0:	a810      	add	r0, sp, #64	; 0x40
 8010ce2:	f7fa fd43 	bl	800b76c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8010ce6:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	; 0x40
 8010cea:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	; 0x42
 8010cee:	f8bd 103c 	ldrh.w	r1, [sp, #60]	; 0x3c
 8010cf2:	4d67      	ldr	r5, [pc, #412]	; (8010e90 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1e8>)
 8010cf4:	f9bd b044 	ldrsh.w	fp, [sp, #68]	; 0x44
 8010cf8:	6828      	ldr	r0, [r5, #0]
 8010cfa:	4c66      	ldr	r4, [pc, #408]	; (8010e94 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1ec>)
 8010cfc:	fb11 2103 	smlabb	r1, r1, r3, r2
 8010d00:	4489      	add	r9, r1
 8010d02:	f8bd 1038 	ldrh.w	r1, [sp, #56]	; 0x38
 8010d06:	440a      	add	r2, r1
 8010d08:	f8ad 2040 	strh.w	r2, [sp, #64]	; 0x40
 8010d0c:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 8010d10:	4413      	add	r3, r2
 8010d12:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 8010d16:	f9bd 3046 	ldrsh.w	r3, [sp, #70]	; 0x46
 8010d1a:	930a      	str	r3, [sp, #40]	; 0x28
 8010d1c:	6803      	ldr	r3, [r0, #0]
 8010d1e:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8010d22:	4798      	blx	r3
 8010d24:	2801      	cmp	r0, #1
 8010d26:	d11d      	bne.n	8010d64 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xbc>
 8010d28:	220b      	movs	r2, #11
 8010d2a:	9708      	str	r7, [sp, #32]
 8010d2c:	9207      	str	r2, [sp, #28]
 8010d2e:	8822      	ldrh	r2, [r4, #0]
 8010d30:	f8cd a010 	str.w	sl, [sp, #16]
 8010d34:	e9cd 0205 	strd	r0, r2, [sp, #20]
 8010d38:	f8bd 203c 	ldrh.w	r2, [sp, #60]	; 0x3c
 8010d3c:	9203      	str	r2, [sp, #12]
 8010d3e:	f8bd 2028 	ldrh.w	r2, [sp, #40]	; 0x28
 8010d42:	9202      	str	r2, [sp, #8]
 8010d44:	fa1f f28b 	uxth.w	r2, fp
 8010d48:	9201      	str	r2, [sp, #4]
 8010d4a:	f8bd 2042 	ldrh.w	r2, [sp, #66]	; 0x42
 8010d4e:	9200      	str	r2, [sp, #0]
 8010d50:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 8010d54:	6828      	ldr	r0, [r5, #0]
 8010d56:	4642      	mov	r2, r8
 8010d58:	4649      	mov	r1, r9
 8010d5a:	f7f8 ffd7 	bl	8009d0c <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_>
 8010d5e:	b013      	add	sp, #76	; 0x4c
 8010d60:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010d64:	6828      	ldr	r0, [r5, #0]
 8010d66:	6803      	ldr	r3, [r0, #0]
 8010d68:	6a1b      	ldr	r3, [r3, #32]
 8010d6a:	4798      	blx	r3
 8010d6c:	8823      	ldrh	r3, [r4, #0]
 8010d6e:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	; 0x42
 8010d72:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	; 0x40
 8010d76:	fb01 2303 	mla	r3, r1, r3, r2
 8010d7a:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8010d7e:	ea2b 73eb 	bic.w	r3, fp, fp, asr #31
 8010d82:	930b      	str	r3, [sp, #44]	; 0x2c
 8010d84:	005b      	lsls	r3, r3, #1
 8010d86:	e9cd 340c 	strd	r3, r4, [sp, #48]	; 0x30
 8010d8a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8010d8c:	429f      	cmp	r7, r3
 8010d8e:	da72      	bge.n	8010e76 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1ce>
 8010d90:	2100      	movs	r1, #0
 8010d92:	4559      	cmp	r1, fp
 8010d94:	da5e      	bge.n	8010e54 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1ac>
 8010d96:	f819 3001 	ldrb.w	r3, [r9, r1]
 8010d9a:	2204      	movs	r2, #4
 8010d9c:	fb12 2303 	smlabb	r3, r2, r3, r2
 8010da0:	f858 2003 	ldr.w	r2, [r8, r3]
 8010da4:	0e15      	lsrs	r5, r2, #24
 8010da6:	d013      	beq.n	8010dd0 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 8010da8:	2dff      	cmp	r5, #255	; 0xff
 8010daa:	ea4f 2412 	mov.w	r4, r2, lsr #8
 8010dae:	d111      	bne.n	8010dd4 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 8010db0:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 8010db4:	d10e      	bne.n	8010dd4 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 8010db6:	0953      	lsrs	r3, r2, #5
 8010db8:	f424 64ff 	bic.w	r4, r4, #2040	; 0x7f8
 8010dbc:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8010dc0:	f024 0407 	bic.w	r4, r4, #7
 8010dc4:	431c      	orrs	r4, r3
 8010dc6:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8010dca:	4314      	orrs	r4, r2
 8010dcc:	f820 4011 	strh.w	r4, [r0, r1, lsl #1]
 8010dd0:	3101      	adds	r1, #1
 8010dd2:	e7de      	b.n	8010d92 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xea>
 8010dd4:	fb0a f505 	mul.w	r5, sl, r5
 8010dd8:	1c6b      	adds	r3, r5, #1
 8010dda:	f830 c011 	ldrh.w	ip, [r0, r1, lsl #1]
 8010dde:	eb03 2325 	add.w	r3, r3, r5, asr #8
 8010de2:	121b      	asrs	r3, r3, #8
 8010de4:	fa1f fe83 	uxth.w	lr, r3
 8010de8:	ea4f 262c 	mov.w	r6, ip, asr #8
 8010dec:	f3c2 4507 	ubfx	r5, r2, #16, #8
 8010df0:	43db      	mvns	r3, r3
 8010df2:	b2db      	uxtb	r3, r3
 8010df4:	fb15 f50e 	smulbb	r5, r5, lr
 8010df8:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8010dfc:	fb06 5603 	mla	r6, r6, r3, r5
 8010e00:	b2d2      	uxtb	r2, r2
 8010e02:	ea4f 05ec 	mov.w	r5, ip, asr #3
 8010e06:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8010e0a:	fa5f fc8c 	uxtb.w	ip, ip
 8010e0e:	fb12 f20e 	smulbb	r2, r2, lr
 8010e12:	fb0c 2203 	mla	r2, ip, r3, r2
 8010e16:	b2e4      	uxtb	r4, r4
 8010e18:	b2b6      	uxth	r6, r6
 8010e1a:	fb14 f40e 	smulbb	r4, r4, lr
 8010e1e:	b292      	uxth	r2, r2
 8010e20:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8010e24:	fb05 4503 	mla	r5, r5, r3, r4
 8010e28:	1c73      	adds	r3, r6, #1
 8010e2a:	1c54      	adds	r4, r2, #1
 8010e2c:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 8010e30:	eb04 2412 	add.w	r4, r4, r2, lsr #8
 8010e34:	b2ad      	uxth	r5, r5
 8010e36:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 8010e3a:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 8010e3e:	4326      	orrs	r6, r4
 8010e40:	1c6c      	adds	r4, r5, #1
 8010e42:	eb04 2415 	add.w	r4, r4, r5, lsr #8
 8010e46:	0964      	lsrs	r4, r4, #5
 8010e48:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 8010e4c:	4326      	orrs	r6, r4
 8010e4e:	f820 6011 	strh.w	r6, [r0, r1, lsl #1]
 8010e52:	e7bd      	b.n	8010dd0 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 8010e54:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8010e56:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8010e58:	881b      	ldrh	r3, [r3, #0]
 8010e5a:	eba3 030b 	sub.w	r3, r3, fp
 8010e5e:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8010e62:	4418      	add	r0, r3
 8010e64:	f9bd 303c 	ldrsh.w	r3, [sp, #60]	; 0x3c
 8010e68:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8010e6a:	eba3 030b 	sub.w	r3, r3, fp
 8010e6e:	4413      	add	r3, r2
 8010e70:	4499      	add	r9, r3
 8010e72:	3701      	adds	r7, #1
 8010e74:	e789      	b.n	8010d8a <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xe2>
 8010e76:	4b06      	ldr	r3, [pc, #24]	; (8010e90 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1e8>)
 8010e78:	6818      	ldr	r0, [r3, #0]
 8010e7a:	6803      	ldr	r3, [r0, #0]
 8010e7c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8010e7e:	4798      	blx	r3
 8010e80:	e76d      	b.n	8010d5e <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xb6>
 8010e82:	bf00      	nop
 8010e84:	0801cf1f 	.word	0x0801cf1f
 8010e88:	0801d602 	.word	0x0801d602
 8010e8c:	0801d021 	.word	0x0801d021
 8010e90:	20012188 	.word	0x20012188
 8010e94:	20012182 	.word	0x20012182

08010e98 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>:
 8010e98:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010e9c:	4614      	mov	r4, r2
 8010e9e:	880a      	ldrh	r2, [r1, #0]
 8010ea0:	b093      	sub	sp, #76	; 0x4c
 8010ea2:	2a02      	cmp	r2, #2
 8010ea4:	4606      	mov	r6, r0
 8010ea6:	4689      	mov	r9, r1
 8010ea8:	f89d 7070 	ldrb.w	r7, [sp, #112]	; 0x70
 8010eac:	d006      	beq.n	8010ebc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x24>
 8010eae:	4b7a      	ldr	r3, [pc, #488]	; (8011098 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x200>)
 8010eb0:	4a7a      	ldr	r2, [pc, #488]	; (801109c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x204>)
 8010eb2:	487b      	ldr	r0, [pc, #492]	; (80110a0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x208>)
 8010eb4:	f44f 71a1 	mov.w	r1, #322	; 0x142
 8010eb8:	f008 faa8 	bl	801940c <__assert_func>
 8010ebc:	2f00      	cmp	r7, #0
 8010ebe:	d04b      	beq.n	8010f58 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xc0>
 8010ec0:	6820      	ldr	r0, [r4, #0]
 8010ec2:	6861      	ldr	r1, [r4, #4]
 8010ec4:	f8df a1e0 	ldr.w	sl, [pc, #480]	; 80110a8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x210>
 8010ec8:	ad0e      	add	r5, sp, #56	; 0x38
 8010eca:	c503      	stmia	r5!, {r0, r1}
 8010ecc:	6818      	ldr	r0, [r3, #0]
 8010ece:	6859      	ldr	r1, [r3, #4]
 8010ed0:	ad10      	add	r5, sp, #64	; 0x40
 8010ed2:	c503      	stmia	r5!, {r0, r1}
 8010ed4:	a80e      	add	r0, sp, #56	; 0x38
 8010ed6:	f7fa fc61 	bl	800b79c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8010eda:	4621      	mov	r1, r4
 8010edc:	a810      	add	r0, sp, #64	; 0x40
 8010ede:	f7fa fc45 	bl	800b76c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8010ee2:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	; 0x40
 8010ee6:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	; 0x42
 8010eea:	f8bd 103c 	ldrh.w	r1, [sp, #60]	; 0x3c
 8010eee:	f8da 0000 	ldr.w	r0, [sl]
 8010ef2:	f9bd 5044 	ldrsh.w	r5, [sp, #68]	; 0x44
 8010ef6:	f9bd 8046 	ldrsh.w	r8, [sp, #70]	; 0x46
 8010efa:	fb11 2103 	smlabb	r1, r1, r3, r2
 8010efe:	1874      	adds	r4, r6, r1
 8010f00:	f8bd 1038 	ldrh.w	r1, [sp, #56]	; 0x38
 8010f04:	4e67      	ldr	r6, [pc, #412]	; (80110a4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x20c>)
 8010f06:	440a      	add	r2, r1
 8010f08:	f8ad 2040 	strh.w	r2, [sp, #64]	; 0x40
 8010f0c:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 8010f10:	4413      	add	r3, r2
 8010f12:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 8010f16:	6803      	ldr	r3, [r0, #0]
 8010f18:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8010f1c:	4798      	blx	r3
 8010f1e:	2801      	cmp	r0, #1
 8010f20:	d11d      	bne.n	8010f5e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xc6>
 8010f22:	2200      	movs	r2, #0
 8010f24:	210b      	movs	r1, #11
 8010f26:	e9cd 1207 	strd	r1, r2, [sp, #28]
 8010f2a:	8831      	ldrh	r1, [r6, #0]
 8010f2c:	9704      	str	r7, [sp, #16]
 8010f2e:	e9cd 2105 	strd	r2, r1, [sp, #20]
 8010f32:	f8bd 203c 	ldrh.w	r2, [sp, #60]	; 0x3c
 8010f36:	9203      	str	r2, [sp, #12]
 8010f38:	fa1f f288 	uxth.w	r2, r8
 8010f3c:	9202      	str	r2, [sp, #8]
 8010f3e:	b2ad      	uxth	r5, r5
 8010f40:	f8bd 2042 	ldrh.w	r2, [sp, #66]	; 0x42
 8010f44:	9200      	str	r2, [sp, #0]
 8010f46:	9501      	str	r5, [sp, #4]
 8010f48:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 8010f4c:	f8da 0000 	ldr.w	r0, [sl]
 8010f50:	464a      	mov	r2, r9
 8010f52:	4621      	mov	r1, r4
 8010f54:	f7f8 feda 	bl	8009d0c <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_>
 8010f58:	b013      	add	sp, #76	; 0x4c
 8010f5a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010f5e:	f8da 0000 	ldr.w	r0, [sl]
 8010f62:	6803      	ldr	r3, [r0, #0]
 8010f64:	6a1b      	ldr	r3, [r3, #32]
 8010f66:	4798      	blx	r3
 8010f68:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	; 0x40
 8010f6c:	8833      	ldrh	r3, [r6, #0]
 8010f6e:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	; 0x42
 8010f72:	fb01 2303 	mla	r3, r1, r3, r2
 8010f76:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8010f7a:	2fff      	cmp	r7, #255	; 0xff
 8010f7c:	f109 0304 	add.w	r3, r9, #4
 8010f80:	930a      	str	r3, [sp, #40]	; 0x28
 8010f82:	ea25 72e5 	bic.w	r2, r5, r5, asr #31
 8010f86:	d111      	bne.n	8010fac <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x114>
 8010f88:	b212      	sxth	r2, r2
 8010f8a:	ea4f 0e42 	mov.w	lr, r2, lsl #1
 8010f8e:	2100      	movs	r1, #0
 8010f90:	4541      	cmp	r1, r8
 8010f92:	da7a      	bge.n	801108a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x1f2>
 8010f94:	2300      	movs	r3, #0
 8010f96:	42ab      	cmp	r3, r5
 8010f98:	da6b      	bge.n	8011072 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x1da>
 8010f9a:	f814 c003 	ldrb.w	ip, [r4, r3]
 8010f9e:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8010fa0:	f837 c01c 	ldrh.w	ip, [r7, ip, lsl #1]
 8010fa4:	f820 c013 	strh.w	ip, [r0, r3, lsl #1]
 8010fa8:	3301      	adds	r3, #1
 8010faa:	e7f4      	b.n	8010f96 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xfe>
 8010fac:	b213      	sxth	r3, r2
 8010fae:	f1c7 0cff 	rsb	ip, r7, #255	; 0xff
 8010fb2:	930b      	str	r3, [sp, #44]	; 0x2c
 8010fb4:	005b      	lsls	r3, r3, #1
 8010fb6:	930c      	str	r3, [sp, #48]	; 0x30
 8010fb8:	f04f 0900 	mov.w	r9, #0
 8010fbc:	b2ba      	uxth	r2, r7
 8010fbe:	fa1f fc8c 	uxth.w	ip, ip
 8010fc2:	960d      	str	r6, [sp, #52]	; 0x34
 8010fc4:	45c1      	cmp	r9, r8
 8010fc6:	da60      	bge.n	801108a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x1f2>
 8010fc8:	46a3      	mov	fp, r4
 8010fca:	4682      	mov	sl, r0
 8010fcc:	ebab 0304 	sub.w	r3, fp, r4
 8010fd0:	429d      	cmp	r5, r3
 8010fd2:	dd3e      	ble.n	8011052 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x1ba>
 8010fd4:	f81b 3b01 	ldrb.w	r3, [fp], #1
 8010fd8:	9e0a      	ldr	r6, [sp, #40]	; 0x28
 8010fda:	f8ba 1000 	ldrh.w	r1, [sl]
 8010fde:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8010fe2:	120e      	asrs	r6, r1, #8
 8010fe4:	121f      	asrs	r7, r3, #8
 8010fe6:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8010fea:	fb16 f60c 	smulbb	r6, r6, ip
 8010fee:	ea4f 0ee1 	mov.w	lr, r1, asr #3
 8010ff2:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8010ff6:	00c9      	lsls	r1, r1, #3
 8010ff8:	fb07 6702 	mla	r7, r7, r2, r6
 8010ffc:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 8011000:	10de      	asrs	r6, r3, #3
 8011002:	b2c9      	uxtb	r1, r1
 8011004:	00db      	lsls	r3, r3, #3
 8011006:	fb1e fe0c 	smulbb	lr, lr, ip
 801100a:	fb11 f10c 	smulbb	r1, r1, ip
 801100e:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8011012:	b2db      	uxtb	r3, r3
 8011014:	b2bf      	uxth	r7, r7
 8011016:	fb06 e602 	mla	r6, r6, r2, lr
 801101a:	fb03 1302 	mla	r3, r3, r2, r1
 801101e:	b2b6      	uxth	r6, r6
 8011020:	b29b      	uxth	r3, r3
 8011022:	1c79      	adds	r1, r7, #1
 8011024:	eb01 2717 	add.w	r7, r1, r7, lsr #8
 8011028:	f106 0e01 	add.w	lr, r6, #1
 801102c:	1c59      	adds	r1, r3, #1
 801102e:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 8011032:	eb0e 2e16 	add.w	lr, lr, r6, lsr #8
 8011036:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801103a:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 801103e:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8011042:	430f      	orrs	r7, r1
 8011044:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 8011048:	ea47 070e 	orr.w	r7, r7, lr
 801104c:	f82a 7b02 	strh.w	r7, [sl], #2
 8011050:	e7bc      	b.n	8010fcc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x134>
 8011052:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8011054:	990c      	ldr	r1, [sp, #48]	; 0x30
 8011056:	881b      	ldrh	r3, [r3, #0]
 8011058:	1b5b      	subs	r3, r3, r5
 801105a:	eb01 0343 	add.w	r3, r1, r3, lsl #1
 801105e:	4418      	add	r0, r3
 8011060:	f9bd 303c 	ldrsh.w	r3, [sp, #60]	; 0x3c
 8011064:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8011066:	1b5b      	subs	r3, r3, r5
 8011068:	440b      	add	r3, r1
 801106a:	441c      	add	r4, r3
 801106c:	f109 0901 	add.w	r9, r9, #1
 8011070:	e7a8      	b.n	8010fc4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x12c>
 8011072:	8833      	ldrh	r3, [r6, #0]
 8011074:	1b5b      	subs	r3, r3, r5
 8011076:	eb0e 0343 	add.w	r3, lr, r3, lsl #1
 801107a:	4418      	add	r0, r3
 801107c:	f9bd 303c 	ldrsh.w	r3, [sp, #60]	; 0x3c
 8011080:	1b5b      	subs	r3, r3, r5
 8011082:	4413      	add	r3, r2
 8011084:	441c      	add	r4, r3
 8011086:	3101      	adds	r1, #1
 8011088:	e782      	b.n	8010f90 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xf8>
 801108a:	4b07      	ldr	r3, [pc, #28]	; (80110a8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x210>)
 801108c:	6818      	ldr	r0, [r3, #0]
 801108e:	6803      	ldr	r3, [r0, #0]
 8011090:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8011092:	4798      	blx	r3
 8011094:	e760      	b.n	8010f58 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xc0>
 8011096:	bf00      	nop
 8011098:	0801cddd 	.word	0x0801cddd
 801109c:	0801d46c 	.word	0x0801d46c
 80110a0:	0801d021 	.word	0x0801d021
 80110a4:	20012182 	.word	0x20012182
 80110a8:	20012188 	.word	0x20012188

080110ac <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>:
 80110ac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80110b0:	4616      	mov	r6, r2
 80110b2:	880a      	ldrh	r2, [r1, #0]
 80110b4:	b093      	sub	sp, #76	; 0x4c
 80110b6:	2a01      	cmp	r2, #1
 80110b8:	4681      	mov	r9, r0
 80110ba:	4688      	mov	r8, r1
 80110bc:	f89d a070 	ldrb.w	sl, [sp, #112]	; 0x70
 80110c0:	d006      	beq.n	80110d0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x24>
 80110c2:	4b6c      	ldr	r3, [pc, #432]	; (8011274 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1c8>)
 80110c4:	4a6c      	ldr	r2, [pc, #432]	; (8011278 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1cc>)
 80110c6:	486d      	ldr	r0, [pc, #436]	; (801127c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1d0>)
 80110c8:	f240 119d 	movw	r1, #413	; 0x19d
 80110cc:	f008 f99e 	bl	801940c <__assert_func>
 80110d0:	f1ba 0f00 	cmp.w	sl, #0
 80110d4:	d04a      	beq.n	801116c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xc0>
 80110d6:	6830      	ldr	r0, [r6, #0]
 80110d8:	6871      	ldr	r1, [r6, #4]
 80110da:	4d69      	ldr	r5, [pc, #420]	; (8011280 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1d4>)
 80110dc:	ac0e      	add	r4, sp, #56	; 0x38
 80110de:	c403      	stmia	r4!, {r0, r1}
 80110e0:	6818      	ldr	r0, [r3, #0]
 80110e2:	6859      	ldr	r1, [r3, #4]
 80110e4:	ac10      	add	r4, sp, #64	; 0x40
 80110e6:	c403      	stmia	r4!, {r0, r1}
 80110e8:	a80e      	add	r0, sp, #56	; 0x38
 80110ea:	f7fa fb57 	bl	800b79c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80110ee:	4631      	mov	r1, r6
 80110f0:	a810      	add	r0, sp, #64	; 0x40
 80110f2:	f7fa fb3b 	bl	800b76c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80110f6:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	; 0x40
 80110fa:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	; 0x42
 80110fe:	f8bd 103c 	ldrh.w	r1, [sp, #60]	; 0x3c
 8011102:	6828      	ldr	r0, [r5, #0]
 8011104:	f9bd 6044 	ldrsh.w	r6, [sp, #68]	; 0x44
 8011108:	4c5e      	ldr	r4, [pc, #376]	; (8011284 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1d8>)
 801110a:	fb11 2103 	smlabb	r1, r1, r3, r2
 801110e:	4489      	add	r9, r1
 8011110:	f8bd 1038 	ldrh.w	r1, [sp, #56]	; 0x38
 8011114:	440a      	add	r2, r1
 8011116:	f8ad 2040 	strh.w	r2, [sp, #64]	; 0x40
 801111a:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 801111e:	4413      	add	r3, r2
 8011120:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 8011124:	f9bd 3046 	ldrsh.w	r3, [sp, #70]	; 0x46
 8011128:	930a      	str	r3, [sp, #40]	; 0x28
 801112a:	6803      	ldr	r3, [r0, #0]
 801112c:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8011130:	4798      	blx	r3
 8011132:	2801      	cmp	r0, #1
 8011134:	d11d      	bne.n	8011172 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xc6>
 8011136:	220b      	movs	r2, #11
 8011138:	2100      	movs	r1, #0
 801113a:	e9cd 2107 	strd	r2, r1, [sp, #28]
 801113e:	8822      	ldrh	r2, [r4, #0]
 8011140:	f8cd a010 	str.w	sl, [sp, #16]
 8011144:	e9cd 0205 	strd	r0, r2, [sp, #20]
 8011148:	f8bd 203c 	ldrh.w	r2, [sp, #60]	; 0x3c
 801114c:	9203      	str	r2, [sp, #12]
 801114e:	f8bd 2028 	ldrh.w	r2, [sp, #40]	; 0x28
 8011152:	9202      	str	r2, [sp, #8]
 8011154:	b2b6      	uxth	r6, r6
 8011156:	f8bd 2042 	ldrh.w	r2, [sp, #66]	; 0x42
 801115a:	9200      	str	r2, [sp, #0]
 801115c:	9601      	str	r6, [sp, #4]
 801115e:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 8011162:	6828      	ldr	r0, [r5, #0]
 8011164:	4642      	mov	r2, r8
 8011166:	4649      	mov	r1, r9
 8011168:	f7f8 fdd0 	bl	8009d0c <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_>
 801116c:	b013      	add	sp, #76	; 0x4c
 801116e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011172:	6828      	ldr	r0, [r5, #0]
 8011174:	6803      	ldr	r3, [r0, #0]
 8011176:	6a1b      	ldr	r3, [r3, #32]
 8011178:	4798      	blx	r3
 801117a:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	; 0x42
 801117e:	8823      	ldrh	r3, [r4, #0]
 8011180:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	; 0x40
 8011184:	940d      	str	r4, [sp, #52]	; 0x34
 8011186:	fb01 2303 	mla	r3, r1, r3, r2
 801118a:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801118e:	ea26 73e6 	bic.w	r3, r6, r6, asr #31
 8011192:	930b      	str	r3, [sp, #44]	; 0x2c
 8011194:	ea6f 010a 	mvn.w	r1, sl
 8011198:	005b      	lsls	r3, r3, #1
 801119a:	930c      	str	r3, [sp, #48]	; 0x30
 801119c:	f04f 0e00 	mov.w	lr, #0
 80111a0:	b2c9      	uxtb	r1, r1
 80111a2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80111a4:	459e      	cmp	lr, r3
 80111a6:	da5f      	bge.n	8011268 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1bc>
 80111a8:	2700      	movs	r7, #0
 80111aa:	fa1f fb8a 	uxth.w	fp, sl
 80111ae:	42b7      	cmp	r7, r6
 80111b0:	da4a      	bge.n	8011248 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x19c>
 80111b2:	f819 3007 	ldrb.w	r3, [r9, r7]
 80111b6:	2203      	movs	r2, #3
 80111b8:	2404      	movs	r4, #4
 80111ba:	fb12 4303 	smlabb	r3, r2, r3, r4
 80111be:	eb08 0403 	add.w	r4, r8, r3
 80111c2:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 80111c6:	78a2      	ldrb	r2, [r4, #2]
 80111c8:	7865      	ldrb	r5, [r4, #1]
 80111ca:	f818 c003 	ldrb.w	ip, [r8, r3]
 80111ce:	d10c      	bne.n	80111ea <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x13e>
 80111d0:	4b2d      	ldr	r3, [pc, #180]	; (8011288 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1dc>)
 80111d2:	00ed      	lsls	r5, r5, #3
 80111d4:	ea03 2202 	and.w	r2, r3, r2, lsl #8
 80111d8:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80111dc:	432a      	orrs	r2, r5
 80111de:	ea42 02dc 	orr.w	r2, r2, ip, lsr #3
 80111e2:	f820 2017 	strh.w	r2, [r0, r7, lsl #1]
 80111e6:	3701      	adds	r7, #1
 80111e8:	e7e1      	b.n	80111ae <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x102>
 80111ea:	f830 3017 	ldrh.w	r3, [r0, r7, lsl #1]
 80111ee:	121c      	asrs	r4, r3, #8
 80111f0:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 80111f4:	fb12 f20b 	smulbb	r2, r2, fp
 80111f8:	fb04 2201 	mla	r2, r4, r1, r2
 80111fc:	10dc      	asrs	r4, r3, #3
 80111fe:	00db      	lsls	r3, r3, #3
 8011200:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 8011204:	b2db      	uxtb	r3, r3
 8011206:	fb15 f50b 	smulbb	r5, r5, fp
 801120a:	fb1c fc0b 	smulbb	ip, ip, fp
 801120e:	b292      	uxth	r2, r2
 8011210:	fb04 5501 	mla	r5, r4, r1, r5
 8011214:	fb03 cc01 	mla	ip, r3, r1, ip
 8011218:	b2ad      	uxth	r5, r5
 801121a:	fa1f fc8c 	uxth.w	ip, ip
 801121e:	1c53      	adds	r3, r2, #1
 8011220:	eb03 2212 	add.w	r2, r3, r2, lsr #8
 8011224:	1c6c      	adds	r4, r5, #1
 8011226:	f10c 0301 	add.w	r3, ip, #1
 801122a:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 801122e:	eb04 2515 	add.w	r5, r4, r5, lsr #8
 8011232:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 8011236:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801123a:	096d      	lsrs	r5, r5, #5
 801123c:	ea42 020c 	orr.w	r2, r2, ip
 8011240:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8011244:	432a      	orrs	r2, r5
 8011246:	e7cc      	b.n	80111e2 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x136>
 8011248:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801124a:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801124c:	881b      	ldrh	r3, [r3, #0]
 801124e:	1b9b      	subs	r3, r3, r6
 8011250:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8011254:	4418      	add	r0, r3
 8011256:	f9bd 303c 	ldrsh.w	r3, [sp, #60]	; 0x3c
 801125a:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801125c:	1b9b      	subs	r3, r3, r6
 801125e:	4413      	add	r3, r2
 8011260:	4499      	add	r9, r3
 8011262:	f10e 0e01 	add.w	lr, lr, #1
 8011266:	e79c      	b.n	80111a2 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xf6>
 8011268:	4b05      	ldr	r3, [pc, #20]	; (8011280 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1d4>)
 801126a:	6818      	ldr	r0, [r3, #0]
 801126c:	6803      	ldr	r3, [r0, #0]
 801126e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8011270:	4798      	blx	r3
 8011272:	e77b      	b.n	801116c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xc0>
 8011274:	0801ce2b 	.word	0x0801ce2b
 8011278:	0801d4f5 	.word	0x0801d4f5
 801127c:	0801d021 	.word	0x0801d021
 8011280:	20012188 	.word	0x20012188
 8011284:	20012182 	.word	0x20012182
 8011288:	fffff800 	.word	0xfffff800

0801128c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>:
 801128c:	b430      	push	{r4, r5}
 801128e:	780d      	ldrb	r5, [r1, #0]
 8011290:	f89d 4008 	ldrb.w	r4, [sp, #8]
 8011294:	2d01      	cmp	r5, #1
 8011296:	d00a      	beq.n	80112ae <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x22>
 8011298:	d305      	bcc.n	80112a6 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x1a>
 801129a:	2d02      	cmp	r5, #2
 801129c:	d10b      	bne.n	80112b6 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x2a>
 801129e:	9402      	str	r4, [sp, #8]
 80112a0:	bc30      	pop	{r4, r5}
 80112a2:	f7ff bdf9 	b.w	8010e98 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>
 80112a6:	9402      	str	r4, [sp, #8]
 80112a8:	bc30      	pop	{r4, r5}
 80112aa:	f7ff bcfd 	b.w	8010ca8 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>
 80112ae:	9402      	str	r4, [sp, #8]
 80112b0:	bc30      	pop	{r4, r5}
 80112b2:	f7ff befb 	b.w	80110ac <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>
 80112b6:	bc30      	pop	{r4, r5}
 80112b8:	4770      	bx	lr
	...

080112bc <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>:
 80112bc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80112c0:	4605      	mov	r5, r0
 80112c2:	b089      	sub	sp, #36	; 0x24
 80112c4:	6810      	ldr	r0, [r2, #0]
 80112c6:	f89d 9048 	ldrb.w	r9, [sp, #72]	; 0x48
 80112ca:	460c      	mov	r4, r1
 80112cc:	6851      	ldr	r1, [r2, #4]
 80112ce:	ae04      	add	r6, sp, #16
 80112d0:	c603      	stmia	r6!, {r0, r1}
 80112d2:	6818      	ldr	r0, [r3, #0]
 80112d4:	6859      	ldr	r1, [r3, #4]
 80112d6:	ae06      	add	r6, sp, #24
 80112d8:	4617      	mov	r7, r2
 80112da:	c603      	stmia	r6!, {r0, r1}
 80112dc:	a804      	add	r0, sp, #16
 80112de:	f7fa fa5d 	bl	800b79c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80112e2:	4639      	mov	r1, r7
 80112e4:	a806      	add	r0, sp, #24
 80112e6:	f7fa fa41 	bl	800b76c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80112ea:	f9bd 2018 	ldrsh.w	r2, [sp, #24]
 80112ee:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 80112f2:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 80112f6:	f9bd 801c 	ldrsh.w	r8, [sp, #28]
 80112fa:	fb11 2103 	smlabb	r1, r1, r3, r2
 80112fe:	eb05 0541 	add.w	r5, r5, r1, lsl #1
 8011302:	440c      	add	r4, r1
 8011304:	f8bd 1010 	ldrh.w	r1, [sp, #16]
 8011308:	440a      	add	r2, r1
 801130a:	f8ad 2018 	strh.w	r2, [sp, #24]
 801130e:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 8011312:	4413      	add	r3, r2
 8011314:	f8ad 301a 	strh.w	r3, [sp, #26]
 8011318:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 801131c:	9300      	str	r3, [sp, #0]
 801131e:	4b80      	ldr	r3, [pc, #512]	; (8011520 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x264>)
 8011320:	6818      	ldr	r0, [r3, #0]
 8011322:	6803      	ldr	r3, [r0, #0]
 8011324:	6a1b      	ldr	r3, [r3, #32]
 8011326:	4798      	blx	r3
 8011328:	4b7e      	ldr	r3, [pc, #504]	; (8011524 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x268>)
 801132a:	f9bd 601a 	ldrsh.w	r6, [sp, #26]
 801132e:	881a      	ldrh	r2, [r3, #0]
 8011330:	f9bd 1018 	ldrsh.w	r1, [sp, #24]
 8011334:	fb06 1202 	mla	r2, r6, r2, r1
 8011338:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801133c:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8011340:	ea28 72e8 	bic.w	r2, r8, r8, asr #31
 8011344:	b212      	sxth	r2, r2
 8011346:	d117      	bne.n	8011378 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0xbc>
 8011348:	9201      	str	r2, [sp, #4]
 801134a:	ea4f 0b42 	mov.w	fp, r2, lsl #1
 801134e:	f04f 0a00 	mov.w	sl, #0
 8011352:	9302      	str	r3, [sp, #8]
 8011354:	9b00      	ldr	r3, [sp, #0]
 8011356:	459a      	cmp	sl, r3
 8011358:	f280 80d9 	bge.w	801150e <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x252>
 801135c:	2100      	movs	r1, #0
 801135e:	4541      	cmp	r1, r8
 8011360:	f280 80c1 	bge.w	80114e6 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x22a>
 8011364:	5c63      	ldrb	r3, [r4, r1]
 8011366:	b12b      	cbz	r3, 8011374 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0xb8>
 8011368:	2bff      	cmp	r3, #255	; 0xff
 801136a:	f835 e011 	ldrh.w	lr, [r5, r1, lsl #1]
 801136e:	d176      	bne.n	801145e <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x1a2>
 8011370:	f820 e011 	strh.w	lr, [r0, r1, lsl #1]
 8011374:	3101      	adds	r1, #1
 8011376:	e7f2      	b.n	801135e <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0xa2>
 8011378:	9202      	str	r2, [sp, #8]
 801137a:	0052      	lsls	r2, r2, #1
 801137c:	9201      	str	r2, [sp, #4]
 801137e:	f04f 0b00 	mov.w	fp, #0
 8011382:	9303      	str	r3, [sp, #12]
 8011384:	9b00      	ldr	r3, [sp, #0]
 8011386:	459b      	cmp	fp, r3
 8011388:	f280 80c1 	bge.w	801150e <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x252>
 801138c:	f04f 0c00 	mov.w	ip, #0
 8011390:	45c4      	cmp	ip, r8
 8011392:	da4f      	bge.n	8011434 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x178>
 8011394:	f814 300c 	ldrb.w	r3, [r4, ip]
 8011398:	2b00      	cmp	r3, #0
 801139a:	d048      	beq.n	801142e <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x172>
 801139c:	fb09 f303 	mul.w	r3, r9, r3
 80113a0:	1c5a      	adds	r2, r3, #1
 80113a2:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 80113a6:	121b      	asrs	r3, r3, #8
 80113a8:	d041      	beq.n	801142e <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x172>
 80113aa:	f830 201c 	ldrh.w	r2, [r0, ip, lsl #1]
 80113ae:	f835 e01c 	ldrh.w	lr, [r5, ip, lsl #1]
 80113b2:	b29e      	uxth	r6, r3
 80113b4:	1211      	asrs	r1, r2, #8
 80113b6:	43db      	mvns	r3, r3
 80113b8:	b2db      	uxtb	r3, r3
 80113ba:	ea4f 272e 	mov.w	r7, lr, asr #8
 80113be:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 80113c2:	fb11 f103 	smulbb	r1, r1, r3
 80113c6:	ea4f 0ae2 	mov.w	sl, r2, asr #3
 80113ca:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 80113ce:	00d2      	lsls	r2, r2, #3
 80113d0:	fb07 1706 	mla	r7, r7, r6, r1
 80113d4:	b2d2      	uxtb	r2, r2
 80113d6:	ea4f 01ee 	mov.w	r1, lr, asr #3
 80113da:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80113de:	fb12 f203 	smulbb	r2, r2, r3
 80113e2:	fa5f fe8e 	uxtb.w	lr, lr
 80113e6:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 80113ea:	fb0e 2206 	mla	r2, lr, r6, r2
 80113ee:	fb1a fa03 	smulbb	sl, sl, r3
 80113f2:	b2bf      	uxth	r7, r7
 80113f4:	b292      	uxth	r2, r2
 80113f6:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 80113fa:	fb01 a106 	mla	r1, r1, r6, sl
 80113fe:	1c7b      	adds	r3, r7, #1
 8011400:	f102 0a01 	add.w	sl, r2, #1
 8011404:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 8011408:	eb0a 2a12 	add.w	sl, sl, r2, lsr #8
 801140c:	b289      	uxth	r1, r1
 801140e:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8011412:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8011416:	ea47 070a 	orr.w	r7, r7, sl
 801141a:	f101 0a01 	add.w	sl, r1, #1
 801141e:	eb0a 2111 	add.w	r1, sl, r1, lsr #8
 8011422:	0949      	lsrs	r1, r1, #5
 8011424:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8011428:	430f      	orrs	r7, r1
 801142a:	f820 701c 	strh.w	r7, [r0, ip, lsl #1]
 801142e:	f10c 0c01 	add.w	ip, ip, #1
 8011432:	e7ad      	b.n	8011390 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0xd4>
 8011434:	9b03      	ldr	r3, [sp, #12]
 8011436:	9a01      	ldr	r2, [sp, #4]
 8011438:	881b      	ldrh	r3, [r3, #0]
 801143a:	eba3 0308 	sub.w	r3, r3, r8
 801143e:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8011442:	4418      	add	r0, r3
 8011444:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 8011448:	eba3 0308 	sub.w	r3, r3, r8
 801144c:	eb02 0243 	add.w	r2, r2, r3, lsl #1
 8011450:	4415      	add	r5, r2
 8011452:	9a02      	ldr	r2, [sp, #8]
 8011454:	4413      	add	r3, r2
 8011456:	441c      	add	r4, r3
 8011458:	f10b 0b01 	add.w	fp, fp, #1
 801145c:	e792      	b.n	8011384 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0xc8>
 801145e:	f830 2011 	ldrh.w	r2, [r0, r1, lsl #1]
 8011462:	b29f      	uxth	r7, r3
 8011464:	1216      	asrs	r6, r2, #8
 8011466:	43db      	mvns	r3, r3
 8011468:	b2db      	uxtb	r3, r3
 801146a:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801146e:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8011472:	fb16 f603 	smulbb	r6, r6, r3
 8011476:	ea4f 09e2 	mov.w	r9, r2, asr #3
 801147a:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801147e:	00d2      	lsls	r2, r2, #3
 8011480:	fb0c 6c07 	mla	ip, ip, r7, r6
 8011484:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 8011488:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801148c:	b2d2      	uxtb	r2, r2
 801148e:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8011492:	fa1f fc8c 	uxth.w	ip, ip
 8011496:	fb19 f903 	smulbb	r9, r9, r3
 801149a:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801149e:	fa5f fe8e 	uxtb.w	lr, lr
 80114a2:	fb12 f203 	smulbb	r2, r2, r3
 80114a6:	fb06 9607 	mla	r6, r6, r7, r9
 80114aa:	fb0e 2207 	mla	r2, lr, r7, r2
 80114ae:	f10c 0901 	add.w	r9, ip, #1
 80114b2:	b292      	uxth	r2, r2
 80114b4:	eb09 2c1c 	add.w	ip, r9, ip, lsr #8
 80114b8:	f40c 4978 	and.w	r9, ip, #63488	; 0xf800
 80114bc:	f102 0c01 	add.w	ip, r2, #1
 80114c0:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 80114c4:	b2b6      	uxth	r6, r6
 80114c6:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 80114ca:	ea49 0c02 	orr.w	ip, r9, r2
 80114ce:	f106 0901 	add.w	r9, r6, #1
 80114d2:	eb09 2616 	add.w	r6, r9, r6, lsr #8
 80114d6:	0976      	lsrs	r6, r6, #5
 80114d8:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 80114dc:	ea4c 0c06 	orr.w	ip, ip, r6
 80114e0:	f820 c011 	strh.w	ip, [r0, r1, lsl #1]
 80114e4:	e746      	b.n	8011374 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0xb8>
 80114e6:	9b02      	ldr	r3, [sp, #8]
 80114e8:	881b      	ldrh	r3, [r3, #0]
 80114ea:	eba3 0308 	sub.w	r3, r3, r8
 80114ee:	eb0b 0343 	add.w	r3, fp, r3, lsl #1
 80114f2:	4418      	add	r0, r3
 80114f4:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 80114f8:	eba3 0308 	sub.w	r3, r3, r8
 80114fc:	eb0b 0243 	add.w	r2, fp, r3, lsl #1
 8011500:	4415      	add	r5, r2
 8011502:	9a01      	ldr	r2, [sp, #4]
 8011504:	4413      	add	r3, r2
 8011506:	441c      	add	r4, r3
 8011508:	f10a 0a01 	add.w	sl, sl, #1
 801150c:	e722      	b.n	8011354 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x98>
 801150e:	4b04      	ldr	r3, [pc, #16]	; (8011520 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x264>)
 8011510:	6818      	ldr	r0, [r3, #0]
 8011512:	6803      	ldr	r3, [r0, #0]
 8011514:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8011516:	4798      	blx	r3
 8011518:	b009      	add	sp, #36	; 0x24
 801151a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801151e:	bf00      	nop
 8011520:	20012188 	.word	0x20012188
 8011524:	20012182 	.word	0x20012182

08011528 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb>:
 8011528:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801152c:	b089      	sub	sp, #36	; 0x24
 801152e:	4682      	mov	sl, r0
 8011530:	f89d 604c 	ldrb.w	r6, [sp, #76]	; 0x4c
 8011534:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8011536:	460d      	mov	r5, r1
 8011538:	4691      	mov	r9, r2
 801153a:	4698      	mov	r8, r3
 801153c:	b3ae      	cbz	r6, 80115aa <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x82>
 801153e:	4608      	mov	r0, r1
 8011540:	f7fc fa96 	bl	800da70 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8011544:	4607      	mov	r7, r0
 8011546:	4628      	mov	r0, r5
 8011548:	f7fc facc 	bl	800dae4 <_ZNK8touchgfx6Bitmap9getHeightEv>
 801154c:	f8ad 000e 	strh.w	r0, [sp, #14]
 8011550:	4628      	mov	r0, r5
 8011552:	f8ad 9008 	strh.w	r9, [sp, #8]
 8011556:	f8ad 800a 	strh.w	r8, [sp, #10]
 801155a:	f8ad 700c 	strh.w	r7, [sp, #12]
 801155e:	f7fc fc13 	bl	800dd88 <_ZNK8touchgfx6Bitmap9getFormatEv>
 8011562:	b178      	cbz	r0, 8011584 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x5c>
 8011564:	4628      	mov	r0, r5
 8011566:	f7fc fc0f 	bl	800dd88 <_ZNK8touchgfx6Bitmap9getFormatEv>
 801156a:	2802      	cmp	r0, #2
 801156c:	d00a      	beq.n	8011584 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x5c>
 801156e:	4628      	mov	r0, r5
 8011570:	f7fc fc0a 	bl	800dd88 <_ZNK8touchgfx6Bitmap9getFormatEv>
 8011574:	280b      	cmp	r0, #11
 8011576:	d005      	beq.n	8011584 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x5c>
 8011578:	4b69      	ldr	r3, [pc, #420]	; (8011720 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1f8>)
 801157a:	4a6a      	ldr	r2, [pc, #424]	; (8011724 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1fc>)
 801157c:	486a      	ldr	r0, [pc, #424]	; (8011728 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x200>)
 801157e:	214b      	movs	r1, #75	; 0x4b
 8011580:	f007 ff44 	bl	801940c <__assert_func>
 8011584:	4628      	mov	r0, r5
 8011586:	f7fc fb7b 	bl	800dc80 <_ZNK8touchgfx6Bitmap7getDataEv>
 801158a:	4607      	mov	r7, r0
 801158c:	4628      	mov	r0, r5
 801158e:	f7fc fba9 	bl	800dce4 <_ZNK8touchgfx6Bitmap12getExtraDataEv>
 8011592:	4681      	mov	r9, r0
 8011594:	4628      	mov	r0, r5
 8011596:	f7fc fbf7 	bl	800dd88 <_ZNK8touchgfx6Bitmap9getFormatEv>
 801159a:	2802      	cmp	r0, #2
 801159c:	d108      	bne.n	80115b0 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x88>
 801159e:	4633      	mov	r3, r6
 80115a0:	4622      	mov	r2, r4
 80115a2:	a902      	add	r1, sp, #8
 80115a4:	4638      	mov	r0, r7
 80115a6:	f7ff fa6d 	bl	8010a84 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 80115aa:	b009      	add	sp, #36	; 0x24
 80115ac:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80115b0:	4628      	mov	r0, r5
 80115b2:	f7fc fbe9 	bl	800dd88 <_ZNK8touchgfx6Bitmap9getFormatEv>
 80115b6:	280b      	cmp	r0, #11
 80115b8:	d107      	bne.n	80115ca <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xa2>
 80115ba:	9600      	str	r6, [sp, #0]
 80115bc:	4623      	mov	r3, r4
 80115be:	aa02      	add	r2, sp, #8
 80115c0:	4649      	mov	r1, r9
 80115c2:	4638      	mov	r0, r7
 80115c4:	f7ff fe62 	bl	801128c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>
 80115c8:	e7ef      	b.n	80115aa <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x82>
 80115ca:	4628      	mov	r0, r5
 80115cc:	f7fc fb1e 	bl	800dc0c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 80115d0:	b950      	cbnz	r0, 80115e8 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xc0>
 80115d2:	e9cd 6000 	strd	r6, r0, [sp]
 80115d6:	f8da 3000 	ldr.w	r3, [sl]
 80115da:	aa02      	add	r2, sp, #8
 80115dc:	68dd      	ldr	r5, [r3, #12]
 80115de:	4639      	mov	r1, r7
 80115e0:	4623      	mov	r3, r4
 80115e2:	4650      	mov	r0, sl
 80115e4:	47a8      	blx	r5
 80115e6:	e7e0      	b.n	80115aa <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x82>
 80115e8:	f10d 0818 	add.w	r8, sp, #24
 80115ec:	4629      	mov	r1, r5
 80115ee:	4640      	mov	r0, r8
 80115f0:	f7fc fab2 	bl	800db58 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 80115f4:	e898 0003 	ldmia.w	r8, {r0, r1}
 80115f8:	ad04      	add	r5, sp, #16
 80115fa:	e885 0003 	stmia.w	r5, {r0, r1}
 80115fe:	4628      	mov	r0, r5
 8011600:	4621      	mov	r1, r4
 8011602:	f7f7 fc2f 	bl	8008e64 <_ZN8touchgfx4RectaNERKS0_>
 8011606:	4628      	mov	r0, r5
 8011608:	f7f7 fc6f 	bl	8008eea <_ZNK8touchgfx4Rect7isEmptyEv>
 801160c:	b138      	cbz	r0, 801161e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xf6>
 801160e:	9600      	str	r6, [sp, #0]
 8011610:	4623      	mov	r3, r4
 8011612:	aa02      	add	r2, sp, #8
 8011614:	4649      	mov	r1, r9
 8011616:	4638      	mov	r0, r7
 8011618:	f7ff fe50 	bl	80112bc <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801161c:	e7c5      	b.n	80115aa <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x82>
 801161e:	e9cd 6000 	strd	r6, r0, [sp]
 8011622:	f8da 3000 	ldr.w	r3, [sl]
 8011626:	aa02      	add	r2, sp, #8
 8011628:	f8d3 b00c 	ldr.w	fp, [r3, #12]
 801162c:	4639      	mov	r1, r7
 801162e:	462b      	mov	r3, r5
 8011630:	4650      	mov	r0, sl
 8011632:	47d8      	blx	fp
 8011634:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8011638:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 801163c:	4293      	cmp	r3, r2
 801163e:	dd13      	ble.n	8011668 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x140>
 8011640:	f9b4 0000 	ldrsh.w	r0, [r4]
 8011644:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8011648:	f8ad 0018 	strh.w	r0, [sp, #24]
 801164c:	1a9b      	subs	r3, r3, r2
 801164e:	f8ad 201a 	strh.w	r2, [sp, #26]
 8011652:	f8ad 101c 	strh.w	r1, [sp, #28]
 8011656:	f8ad 301e 	strh.w	r3, [sp, #30]
 801165a:	9600      	str	r6, [sp, #0]
 801165c:	4643      	mov	r3, r8
 801165e:	aa02      	add	r2, sp, #8
 8011660:	4649      	mov	r1, r9
 8011662:	4638      	mov	r0, r7
 8011664:	f7ff fe2a 	bl	80112bc <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 8011668:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 801166c:	f9b4 2000 	ldrsh.w	r2, [r4]
 8011670:	4293      	cmp	r3, r2
 8011672:	dd13      	ble.n	801169c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x174>
 8011674:	1a9b      	subs	r3, r3, r2
 8011676:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 801167a:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 801167e:	f8ad 2018 	strh.w	r2, [sp, #24]
 8011682:	f8ad 001a 	strh.w	r0, [sp, #26]
 8011686:	f8ad 301c 	strh.w	r3, [sp, #28]
 801168a:	f8ad 101e 	strh.w	r1, [sp, #30]
 801168e:	9600      	str	r6, [sp, #0]
 8011690:	4643      	mov	r3, r8
 8011692:	aa02      	add	r2, sp, #8
 8011694:	4649      	mov	r1, r9
 8011696:	4638      	mov	r0, r7
 8011698:	f7ff fe10 	bl	80112bc <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801169c:	88a2      	ldrh	r2, [r4, #4]
 801169e:	8823      	ldrh	r3, [r4, #0]
 80116a0:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 80116a4:	4413      	add	r3, r2
 80116a6:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 80116aa:	440a      	add	r2, r1
 80116ac:	b29b      	uxth	r3, r3
 80116ae:	b292      	uxth	r2, r2
 80116b0:	b211      	sxth	r1, r2
 80116b2:	b218      	sxth	r0, r3
 80116b4:	4288      	cmp	r0, r1
 80116b6:	dd13      	ble.n	80116e0 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1b8>
 80116b8:	1a9b      	subs	r3, r3, r2
 80116ba:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 80116be:	f9bd 5012 	ldrsh.w	r5, [sp, #18]
 80116c2:	f8ad 1018 	strh.w	r1, [sp, #24]
 80116c6:	f8ad 301c 	strh.w	r3, [sp, #28]
 80116ca:	f8ad 001e 	strh.w	r0, [sp, #30]
 80116ce:	9600      	str	r6, [sp, #0]
 80116d0:	4643      	mov	r3, r8
 80116d2:	aa02      	add	r2, sp, #8
 80116d4:	4649      	mov	r1, r9
 80116d6:	4638      	mov	r0, r7
 80116d8:	f8ad 501a 	strh.w	r5, [sp, #26]
 80116dc:	f7ff fdee 	bl	80112bc <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 80116e0:	88e2      	ldrh	r2, [r4, #6]
 80116e2:	8863      	ldrh	r3, [r4, #2]
 80116e4:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 80116e8:	4413      	add	r3, r2
 80116ea:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 80116ee:	440a      	add	r2, r1
 80116f0:	b29b      	uxth	r3, r3
 80116f2:	b292      	uxth	r2, r2
 80116f4:	b211      	sxth	r1, r2
 80116f6:	b218      	sxth	r0, r3
 80116f8:	4288      	cmp	r0, r1
 80116fa:	f77f af56 	ble.w	80115aa <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x82>
 80116fe:	f9b4 5000 	ldrsh.w	r5, [r4]
 8011702:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8011706:	f8ad 5018 	strh.w	r5, [sp, #24]
 801170a:	1a9b      	subs	r3, r3, r2
 801170c:	f8ad 301e 	strh.w	r3, [sp, #30]
 8011710:	f8ad 101a 	strh.w	r1, [sp, #26]
 8011714:	f8ad 001c 	strh.w	r0, [sp, #28]
 8011718:	9600      	str	r6, [sp, #0]
 801171a:	4643      	mov	r3, r8
 801171c:	e779      	b.n	8011612 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xea>
 801171e:	bf00      	nop
 8011720:	0801ce79 	.word	0x0801ce79
 8011724:	0801d57e 	.word	0x0801d57e
 8011728:	0801d021 	.word	0x0801d021

0801172c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>:
 801172c:	b508      	push	{r3, lr}
 801172e:	b180      	cbz	r0, 8011752 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x26>
 8011730:	2902      	cmp	r1, #2
 8011732:	d014      	beq.n	801175e <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x32>
 8011734:	2903      	cmp	r1, #3
 8011736:	d01d      	beq.n	8011774 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x48>
 8011738:	2901      	cmp	r1, #1
 801173a:	d101      	bne.n	8011740 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x14>
 801173c:	2001      	movs	r0, #1
 801173e:	bd08      	pop	{r3, pc}
 8011740:	4b0e      	ldr	r3, [pc, #56]	; (801177c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 8011742:	8818      	ldrh	r0, [r3, #0]
 8011744:	b990      	cbnz	r0, 801176c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 8011746:	4b0e      	ldr	r3, [pc, #56]	; (8011780 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x54>)
 8011748:	4a0e      	ldr	r2, [pc, #56]	; (8011784 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x58>)
 801174a:	480f      	ldr	r0, [pc, #60]	; (8011788 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x5c>)
 801174c:	2154      	movs	r1, #84	; 0x54
 801174e:	f007 fe5d 	bl	801940c <__assert_func>
 8011752:	2902      	cmp	r1, #2
 8011754:	d00e      	beq.n	8011774 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x48>
 8011756:	2903      	cmp	r1, #3
 8011758:	d0f2      	beq.n	8011740 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x14>
 801175a:	2901      	cmp	r1, #1
 801175c:	d1ee      	bne.n	801173c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x10>
 801175e:	4b07      	ldr	r3, [pc, #28]	; (801177c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 8011760:	8818      	ldrh	r0, [r3, #0]
 8011762:	2800      	cmp	r0, #0
 8011764:	d0ef      	beq.n	8011746 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x1a>
 8011766:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801176a:	e7e8      	b.n	801173e <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x12>
 801176c:	f3c0 000e 	ubfx	r0, r0, #0, #15
 8011770:	4240      	negs	r0, r0
 8011772:	e7e4      	b.n	801173e <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x12>
 8011774:	f04f 30ff 	mov.w	r0, #4294967295
 8011778:	e7e1      	b.n	801173e <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x12>
 801177a:	bf00      	nop
 801177c:	20012182 	.word	0x20012182
 8011780:	0801d17b 	.word	0x0801d17b
 8011784:	0801d6fb 	.word	0x0801d6fb
 8011788:	0801d1bd 	.word	0x0801d1bd

0801178c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>:
 801178c:	b508      	push	{r3, lr}
 801178e:	b180      	cbz	r0, 80117b2 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x26>
 8011790:	2902      	cmp	r1, #2
 8011792:	d014      	beq.n	80117be <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x32>
 8011794:	2903      	cmp	r1, #3
 8011796:	d018      	beq.n	80117ca <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x3e>
 8011798:	2901      	cmp	r1, #1
 801179a:	d001      	beq.n	80117a0 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x14>
 801179c:	2001      	movs	r0, #1
 801179e:	e013      	b.n	80117c8 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x3c>
 80117a0:	4b0e      	ldr	r3, [pc, #56]	; (80117dc <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 80117a2:	8818      	ldrh	r0, [r3, #0]
 80117a4:	b970      	cbnz	r0, 80117c4 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x38>
 80117a6:	4b0e      	ldr	r3, [pc, #56]	; (80117e0 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x54>)
 80117a8:	4a0e      	ldr	r2, [pc, #56]	; (80117e4 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x58>)
 80117aa:	480f      	ldr	r0, [pc, #60]	; (80117e8 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x5c>)
 80117ac:	2154      	movs	r1, #84	; 0x54
 80117ae:	f007 fe2d 	bl	801940c <__assert_func>
 80117b2:	2902      	cmp	r1, #2
 80117b4:	d009      	beq.n	80117ca <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x3e>
 80117b6:	2903      	cmp	r1, #3
 80117b8:	d0f0      	beq.n	801179c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x10>
 80117ba:	2901      	cmp	r1, #1
 80117bc:	d1f0      	bne.n	80117a0 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x14>
 80117be:	f04f 30ff 	mov.w	r0, #4294967295
 80117c2:	e001      	b.n	80117c8 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x3c>
 80117c4:	f3c0 000e 	ubfx	r0, r0, #0, #15
 80117c8:	bd08      	pop	{r3, pc}
 80117ca:	4b04      	ldr	r3, [pc, #16]	; (80117dc <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 80117cc:	8818      	ldrh	r0, [r3, #0]
 80117ce:	2800      	cmp	r0, #0
 80117d0:	d0e9      	beq.n	80117a6 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x1a>
 80117d2:	f3c0 000e 	ubfx	r0, r0, #0, #15
 80117d6:	4240      	negs	r0, r0
 80117d8:	e7f6      	b.n	80117c8 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x3c>
 80117da:	bf00      	nop
 80117dc:	20012182 	.word	0x20012182
 80117e0:	0801d17b 	.word	0x0801d17b
 80117e4:	0801d6fb 	.word	0x0801d6fb
 80117e8:	0801d1bd 	.word	0x0801d1bd

080117ec <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE>:
 80117ec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80117f0:	b097      	sub	sp, #92	; 0x5c
 80117f2:	910a      	str	r1, [sp, #40]	; 0x28
 80117f4:	a912      	add	r1, sp, #72	; 0x48
 80117f6:	e881 000c 	stmia.w	r1, {r2, r3}
 80117fa:	f9bd 3084 	ldrsh.w	r3, [sp, #132]	; 0x84
 80117fe:	9307      	str	r3, [sp, #28]
 8011800:	e9dd 2124 	ldrd	r2, r1, [sp, #144]	; 0x90
 8011804:	f89d 309c 	ldrb.w	r3, [sp, #156]	; 0x9c
 8011808:	930f      	str	r3, [sp, #60]	; 0x3c
 801180a:	f89d 30a8 	ldrb.w	r3, [sp, #168]	; 0xa8
 801180e:	930b      	str	r3, [sp, #44]	; 0x2c
 8011810:	7b4b      	ldrb	r3, [r1, #13]
 8011812:	798d      	ldrb	r5, [r1, #6]
 8011814:	f9bd 6080 	ldrsh.w	r6, [sp, #128]	; 0x80
 8011818:	f8bd 7088 	ldrh.w	r7, [sp, #136]	; 0x88
 801181c:	f8bd 408c 	ldrh.w	r4, [sp, #140]	; 0x8c
 8011820:	f89d 80a4 	ldrb.w	r8, [sp, #164]	; 0xa4
 8011824:	f89d 90ac 	ldrb.w	r9, [sp, #172]	; 0xac
 8011828:	0158      	lsls	r0, r3, #5
 801182a:	f400 7080 	and.w	r0, r0, #256	; 0x100
 801182e:	4328      	orrs	r0, r5
 8011830:	9006      	str	r0, [sp, #24]
 8011832:	f000 8156 	beq.w	8011ae2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2f6>
 8011836:	011b      	lsls	r3, r3, #4
 8011838:	79c8      	ldrb	r0, [r1, #7]
 801183a:	f403 7380 	and.w	r3, r3, #256	; 0x100
 801183e:	4303      	orrs	r3, r0
 8011840:	9308      	str	r3, [sp, #32]
 8011842:	f000 814e 	beq.w	8011ae2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2f6>
 8011846:	f991 3009 	ldrsb.w	r3, [r1, #9]
 801184a:	b29b      	uxth	r3, r3
 801184c:	2f00      	cmp	r7, #0
 801184e:	f000 80f2 	beq.w	8011a36 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x24a>
 8011852:	1aff      	subs	r7, r7, r3
 8011854:	b2bf      	uxth	r7, r7
 8011856:	043b      	lsls	r3, r7, #16
 8011858:	d502      	bpl.n	8011860 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x74>
 801185a:	1bf6      	subs	r6, r6, r7
 801185c:	b236      	sxth	r6, r6
 801185e:	2700      	movs	r7, #0
 8011860:	f9b2 1000 	ldrsh.w	r1, [r2]
 8011864:	f8b2 a002 	ldrh.w	sl, [r2, #2]
 8011868:	f8bd 5018 	ldrh.w	r5, [sp, #24]
 801186c:	428e      	cmp	r6, r1
 801186e:	b28b      	uxth	r3, r1
 8011870:	bfbf      	itttt	lt
 8011872:	18ff      	addlt	r7, r7, r3
 8011874:	1bbe      	sublt	r6, r7, r6
 8011876:	b2b7      	uxthlt	r7, r6
 8011878:	460e      	movlt	r6, r1
 801187a:	8891      	ldrh	r1, [r2, #4]
 801187c:	440b      	add	r3, r1
 801187e:	b21b      	sxth	r3, r3
 8011880:	930e      	str	r3, [sp, #56]	; 0x38
 8011882:	88d3      	ldrh	r3, [r2, #6]
 8011884:	9a07      	ldr	r2, [sp, #28]
 8011886:	449a      	add	sl, r3
 8011888:	fa0f f38a 	sxth.w	r3, sl
 801188c:	930d      	str	r3, [sp, #52]	; 0x34
 801188e:	4bbc      	ldr	r3, [pc, #752]	; (8011b80 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x394>)
 8011890:	f8bd a020 	ldrh.w	sl, [sp, #32]
 8011894:	f893 b000 	ldrb.w	fp, [r3]
 8011898:	f10b 3cff 	add.w	ip, fp, #4294967295
 801189c:	f1dc 0300 	rsbs	r3, ip, #0
 80118a0:	eb43 030c 	adc.w	r3, r3, ip
 80118a4:	930c      	str	r3, [sp, #48]	; 0x30
 80118a6:	4631      	mov	r1, r6
 80118a8:	464b      	mov	r3, r9
 80118aa:	a812      	add	r0, sp, #72	; 0x48
 80118ac:	f7f9 fe4e 	bl	800b54c <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>
 80118b0:	4631      	mov	r1, r6
 80118b2:	f8ad 0054 	strh.w	r0, [sp, #84]	; 0x54
 80118b6:	464b      	mov	r3, r9
 80118b8:	9a07      	ldr	r2, [sp, #28]
 80118ba:	a812      	add	r0, sp, #72	; 0x48
 80118bc:	f7f9 fe5e 	bl	800b57c <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>
 80118c0:	a916      	add	r1, sp, #88	; 0x58
 80118c2:	f821 0d02 	strh.w	r0, [r1, #-2]!
 80118c6:	a815      	add	r0, sp, #84	; 0x54
 80118c8:	f7f9 ff3a 	bl	800b740 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>
 80118cc:	f1b9 0f00 	cmp.w	r9, #0
 80118d0:	f040 80b4 	bne.w	8011a3c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x250>
 80118d4:	f1bb 0f01 	cmp.w	fp, #1
 80118d8:	f040 80b8 	bne.w	8011a4c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x260>
 80118dc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80118de:	2b00      	cmp	r3, #0
 80118e0:	f040 8104 	bne.w	8011aec <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x300>
 80118e4:	4ba7      	ldr	r3, [pc, #668]	; (8011b84 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x398>)
 80118e6:	6818      	ldr	r0, [r3, #0]
 80118e8:	6803      	ldr	r3, [r0, #0]
 80118ea:	6a1b      	ldr	r3, [r3, #32]
 80118ec:	4798      	blx	r3
 80118ee:	4aa6      	ldr	r2, [pc, #664]	; (8011b88 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x39c>)
 80118f0:	f9bd 3056 	ldrsh.w	r3, [sp, #86]	; 0x56
 80118f4:	8811      	ldrh	r1, [r2, #0]
 80118f6:	f9bd 2054 	ldrsh.w	r2, [sp, #84]	; 0x54
 80118fa:	fb01 2303 	mla	r3, r1, r3, r2
 80118fe:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8011902:	9308      	str	r3, [sp, #32]
 8011904:	2301      	movs	r3, #1
 8011906:	fa03 f308 	lsl.w	r3, r3, r8
 801190a:	3b01      	subs	r3, #1
 801190c:	b2db      	uxtb	r3, r3
 801190e:	f1b8 0f01 	cmp.w	r8, #1
 8011912:	9310      	str	r3, [sp, #64]	; 0x40
 8011914:	f000 80ec 	beq.w	8011af0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x304>
 8011918:	f1b8 0f02 	cmp.w	r8, #2
 801191c:	f000 80ea 	beq.w	8011af4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x308>
 8011920:	f1b8 0f04 	cmp.w	r8, #4
 8011924:	bf14      	ite	ne
 8011926:	2301      	movne	r3, #1
 8011928:	2311      	moveq	r3, #17
 801192a:	9309      	str	r3, [sp, #36]	; 0x24
 801192c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801192e:	b153      	cbz	r3, 8011946 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x15a>
 8011930:	9a06      	ldr	r2, [sp, #24]
 8011932:	2508      	movs	r5, #8
 8011934:	fb95 f3f8 	sdiv	r3, r5, r8
 8011938:	1e5d      	subs	r5, r3, #1
 801193a:	4415      	add	r5, r2
 801193c:	fb95 f5f3 	sdiv	r5, r5, r3
 8011940:	fb15 f503 	smulbb	r5, r5, r3
 8011944:	b2ad      	uxth	r5, r5
 8011946:	b907      	cbnz	r7, 801194a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x15e>
 8011948:	b16c      	cbz	r4, 8011966 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x17a>
 801194a:	fb04 7305 	mla	r3, r4, r5, r7
 801194e:	9a26      	ldr	r2, [sp, #152]	; 0x98
 8011950:	fb08 f303 	mul.w	r3, r8, r3
 8011954:	ebaa 0a04 	sub.w	sl, sl, r4
 8011958:	eb02 02d3 	add.w	r2, r2, r3, lsr #3
 801195c:	9226      	str	r2, [sp, #152]	; 0x98
 801195e:	fa1f fa8a 	uxth.w	sl, sl
 8011962:	f003 0407 	and.w	r4, r3, #7
 8011966:	4649      	mov	r1, r9
 8011968:	980c      	ldr	r0, [sp, #48]	; 0x30
 801196a:	f7ff fedf 	bl	801172c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>
 801196e:	4649      	mov	r1, r9
 8011970:	4683      	mov	fp, r0
 8011972:	980c      	ldr	r0, [sp, #48]	; 0x30
 8011974:	f7ff ff0a 	bl	801178c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>
 8011978:	9a07      	ldr	r2, [sp, #28]
 801197a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801197c:	1a9b      	subs	r3, r3, r2
 801197e:	459a      	cmp	sl, r3
 8011980:	bfa8      	it	ge
 8011982:	469a      	movge	sl, r3
 8011984:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8011986:	1bf6      	subs	r6, r6, r7
 8011988:	1b9e      	subs	r6, r3, r6
 801198a:	9b06      	ldr	r3, [sp, #24]
 801198c:	429e      	cmp	r6, r3
 801198e:	bfd4      	ite	le
 8011990:	ebc7 0706 	rsble	r7, r7, r6
 8011994:	ebc7 0703 	rsbgt	r7, r7, r3
 8011998:	1bed      	subs	r5, r5, r7
 801199a:	fb08 f305 	mul.w	r3, r8, r5
 801199e:	9307      	str	r3, [sp, #28]
 80119a0:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80119a2:	781a      	ldrb	r2, [r3, #0]
 80119a4:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80119a6:	0a1b      	lsrs	r3, r3, #8
 80119a8:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 80119ac:	930d      	str	r3, [sp, #52]	; 0x34
 80119ae:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80119b0:	08db      	lsrs	r3, r3, #3
 80119b2:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 80119b6:	930e      	str	r3, [sp, #56]	; 0x38
 80119b8:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80119ba:	00db      	lsls	r3, r3, #3
 80119bc:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 80119c0:	930f      	str	r3, [sp, #60]	; 0x3c
 80119c2:	ea4f 034b 	mov.w	r3, fp, lsl #1
 80119c6:	fb0b 0b17 	mls	fp, fp, r7, r0
 80119ca:	ea27 70e7 	bic.w	r0, r7, r7, asr #31
 80119ce:	4358      	muls	r0, r3
 80119d0:	9306      	str	r3, [sp, #24]
 80119d2:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80119d4:	4122      	asrs	r2, r4
 80119d6:	b29b      	uxth	r3, r3
 80119d8:	b2d2      	uxtb	r2, r2
 80119da:	9311      	str	r3, [sp, #68]	; 0x44
 80119dc:	eb00 0b4b 	add.w	fp, r0, fp, lsl #1
 80119e0:	f1ba 0f00 	cmp.w	sl, #0
 80119e4:	f340 80e5 	ble.w	8011bb2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3c6>
 80119e8:	f8dd c020 	ldr.w	ip, [sp, #32]
 80119ec:	46be      	mov	lr, r7
 80119ee:	f1be 0f00 	cmp.w	lr, #0
 80119f2:	f340 80cb 	ble.w	8011b8c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a0>
 80119f6:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80119f8:	4013      	ands	r3, r2
 80119fa:	d00a      	beq.n	8011a12 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x226>
 80119fc:	9909      	ldr	r1, [sp, #36]	; 0x24
 80119fe:	fb13 f301 	smulbb	r3, r3, r1
 8011a02:	2bfe      	cmp	r3, #254	; 0xfe
 8011a04:	dd78      	ble.n	8011af8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x30c>
 8011a06:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8011a08:	29ff      	cmp	r1, #255	; 0xff
 8011a0a:	d175      	bne.n	8011af8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x30c>
 8011a0c:	9811      	ldr	r0, [sp, #68]	; 0x44
 8011a0e:	f8ac 0000 	strh.w	r0, [ip]
 8011a12:	4444      	add	r4, r8
 8011a14:	b2a4      	uxth	r4, r4
 8011a16:	2c07      	cmp	r4, #7
 8011a18:	bf81      	itttt	hi
 8011a1a:	9b26      	ldrhi	r3, [sp, #152]	; 0x98
 8011a1c:	785a      	ldrbhi	r2, [r3, #1]
 8011a1e:	3301      	addhi	r3, #1
 8011a20:	9326      	strhi	r3, [sp, #152]	; 0x98
 8011a22:	9b06      	ldr	r3, [sp, #24]
 8011a24:	bf9a      	itte	ls
 8011a26:	fa42 f208 	asrls.w	r2, r2, r8
 8011a2a:	b2d2      	uxtbls	r2, r2
 8011a2c:	2400      	movhi	r4, #0
 8011a2e:	449c      	add	ip, r3
 8011a30:	f10e 3eff 	add.w	lr, lr, #4294967295
 8011a34:	e7db      	b.n	80119ee <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x202>
 8011a36:	441e      	add	r6, r3
 8011a38:	b236      	sxth	r6, r6
 8011a3a:	e711      	b.n	8011860 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x74>
 8011a3c:	f1b9 0f01 	cmp.w	r9, #1
 8011a40:	f47f af4c 	bne.w	80118dc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf0>
 8011a44:	f1bb 0f01 	cmp.w	fp, #1
 8011a48:	f47f af48 	bne.w	80118dc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf0>
 8011a4c:	f8df b134 	ldr.w	fp, [pc, #308]	; 8011b84 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x398>
 8011a50:	f8db 0000 	ldr.w	r0, [fp]
 8011a54:	6803      	ldr	r3, [r0, #0]
 8011a56:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8011a58:	4798      	blx	r3
 8011a5a:	f010 0380 	ands.w	r3, r0, #128	; 0x80
 8011a5e:	465a      	mov	r2, fp
 8011a60:	d006      	beq.n	8011a70 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x284>
 8011a62:	f1b8 0f04 	cmp.w	r8, #4
 8011a66:	d13f      	bne.n	8011ae8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2fc>
 8011a68:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8011a6a:	3300      	adds	r3, #0
 8011a6c:	bf18      	it	ne
 8011a6e:	2301      	movne	r3, #1
 8011a70:	05c0      	lsls	r0, r0, #23
 8011a72:	f140 80a7 	bpl.w	8011bc4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3d8>
 8011a76:	f1b8 0f08 	cmp.w	r8, #8
 8011a7a:	f040 80a3 	bne.w	8011bc4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3d8>
 8011a7e:	2b00      	cmp	r3, #0
 8011a80:	bf0c      	ite	eq
 8011a82:	f44f 7180 	moveq.w	r1, #256	; 0x100
 8011a86:	2180      	movne	r1, #128	; 0x80
 8011a88:	2f00      	cmp	r7, #0
 8011a8a:	f47f af27 	bne.w	80118dc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf0>
 8011a8e:	2c00      	cmp	r4, #0
 8011a90:	f47f af24 	bne.w	80118dc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf0>
 8011a94:	9b06      	ldr	r3, [sp, #24]
 8011a96:	980e      	ldr	r0, [sp, #56]	; 0x38
 8011a98:	18f3      	adds	r3, r6, r3
 8011a9a:	4283      	cmp	r3, r0
 8011a9c:	f73f af1e 	bgt.w	80118dc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf0>
 8011aa0:	e9dd 0307 	ldrd	r0, r3, [sp, #28]
 8011aa4:	4403      	add	r3, r0
 8011aa6:	980d      	ldr	r0, [sp, #52]	; 0x34
 8011aa8:	4283      	cmp	r3, r0
 8011aaa:	f73f af17 	bgt.w	80118dc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf0>
 8011aae:	6810      	ldr	r0, [r2, #0]
 8011ab0:	f8bd 3056 	ldrh.w	r3, [sp, #86]	; 0x56
 8011ab4:	6804      	ldr	r4, [r0, #0]
 8011ab6:	9105      	str	r1, [sp, #20]
 8011ab8:	f1b8 0f08 	cmp.w	r8, #8
 8011abc:	bf18      	it	ne
 8011abe:	3501      	addne	r5, #1
 8011ac0:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8011ac2:	9104      	str	r1, [sp, #16]
 8011ac4:	bf18      	it	ne
 8011ac6:	f025 0501 	bicne.w	r5, r5, #1
 8011aca:	9928      	ldr	r1, [sp, #160]	; 0xa0
 8011acc:	f8bd 2054 	ldrh.w	r2, [sp, #84]	; 0x54
 8011ad0:	bf18      	it	ne
 8011ad2:	b2ad      	uxthne	r5, r5
 8011ad4:	e9cd 5102 	strd	r5, r1, [sp, #8]
 8011ad8:	e9cd 5a00 	strd	r5, sl, [sp]
 8011adc:	9926      	ldr	r1, [sp, #152]	; 0x98
 8011ade:	6c24      	ldr	r4, [r4, #64]	; 0x40
 8011ae0:	47a0      	blx	r4
 8011ae2:	b017      	add	sp, #92	; 0x5c
 8011ae4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011ae8:	2300      	movs	r3, #0
 8011aea:	e7c1      	b.n	8011a70 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x284>
 8011aec:	980a      	ldr	r0, [sp, #40]	; 0x28
 8011aee:	e6fe      	b.n	80118ee <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x102>
 8011af0:	23ff      	movs	r3, #255	; 0xff
 8011af2:	e71a      	b.n	801192a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x13e>
 8011af4:	2355      	movs	r3, #85	; 0x55
 8011af6:	e718      	b.n	801192a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x13e>
 8011af8:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8011afa:	f8bc 5000 	ldrh.w	r5, [ip]
 8011afe:	fb11 f303 	smulbb	r3, r1, r3
 8011b02:	b29b      	uxth	r3, r3
 8011b04:	1c59      	adds	r1, r3, #1
 8011b06:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 8011b0a:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8011b0e:	990d      	ldr	r1, [sp, #52]	; 0x34
 8011b10:	b29e      	uxth	r6, r3
 8011b12:	1228      	asrs	r0, r5, #8
 8011b14:	43db      	mvns	r3, r3
 8011b16:	b2db      	uxtb	r3, r3
 8011b18:	fb11 f106 	smulbb	r1, r1, r6
 8011b1c:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8011b20:	fb00 1003 	mla	r0, r0, r3, r1
 8011b24:	b281      	uxth	r1, r0
 8011b26:	980e      	ldr	r0, [sp, #56]	; 0x38
 8011b28:	910c      	str	r1, [sp, #48]	; 0x30
 8011b2a:	fb16 f900 	smulbb	r9, r6, r0
 8011b2e:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8011b30:	10e9      	asrs	r1, r5, #3
 8011b32:	00ed      	lsls	r5, r5, #3
 8011b34:	fb16 f600 	smulbb	r6, r6, r0
 8011b38:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8011b3c:	b2ed      	uxtb	r5, r5
 8011b3e:	fb01 9103 	mla	r1, r1, r3, r9
 8011b42:	fb05 6603 	mla	r6, r5, r3, r6
 8011b46:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8011b48:	980c      	ldr	r0, [sp, #48]	; 0x30
 8011b4a:	b2b6      	uxth	r6, r6
 8011b4c:	3301      	adds	r3, #1
 8011b4e:	f106 0901 	add.w	r9, r6, #1
 8011b52:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8011b56:	eb09 2916 	add.w	r9, r9, r6, lsr #8
 8011b5a:	b289      	uxth	r1, r1
 8011b5c:	f3c9 29c4 	ubfx	r9, r9, #11, #5
 8011b60:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 8011b64:	ea40 0009 	orr.w	r0, r0, r9
 8011b68:	f101 0901 	add.w	r9, r1, #1
 8011b6c:	eb09 2911 	add.w	r9, r9, r1, lsr #8
 8011b70:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8011b74:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8011b78:	ea40 0009 	orr.w	r0, r0, r9
 8011b7c:	e747      	b.n	8011a0e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x222>
 8011b7e:	bf00      	nop
 8011b80:	20012180 	.word	0x20012180
 8011b84:	20012188 	.word	0x20012188
 8011b88:	20012182 	.word	0x20012182
 8011b8c:	9b07      	ldr	r3, [sp, #28]
 8011b8e:	b153      	cbz	r3, 8011ba6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ba>
 8011b90:	441c      	add	r4, r3
 8011b92:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8011b94:	b2a4      	uxth	r4, r4
 8011b96:	eb03 03d4 	add.w	r3, r3, r4, lsr #3
 8011b9a:	f004 0407 	and.w	r4, r4, #7
 8011b9e:	781a      	ldrb	r2, [r3, #0]
 8011ba0:	9326      	str	r3, [sp, #152]	; 0x98
 8011ba2:	4122      	asrs	r2, r4
 8011ba4:	b2d2      	uxtb	r2, r2
 8011ba6:	9b08      	ldr	r3, [sp, #32]
 8011ba8:	445b      	add	r3, fp
 8011baa:	9308      	str	r3, [sp, #32]
 8011bac:	f10a 3aff 	add.w	sl, sl, #4294967295
 8011bb0:	e716      	b.n	80119e0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1f4>
 8011bb2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8011bb4:	2b00      	cmp	r3, #0
 8011bb6:	d194      	bne.n	8011ae2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2f6>
 8011bb8:	4b05      	ldr	r3, [pc, #20]	; (8011bd0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e4>)
 8011bba:	6818      	ldr	r0, [r3, #0]
 8011bbc:	6803      	ldr	r3, [r0, #0]
 8011bbe:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8011bc0:	4798      	blx	r3
 8011bc2:	e78e      	b.n	8011ae2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2f6>
 8011bc4:	2b00      	cmp	r3, #0
 8011bc6:	f43f ae89 	beq.w	80118dc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf0>
 8011bca:	2180      	movs	r1, #128	; 0x80
 8011bcc:	e75c      	b.n	8011a88 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x29c>
 8011bce:	bf00      	nop
 8011bd0:	20012188 	.word	0x20012188

08011bd4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>:
 8011bd4:	b538      	push	{r3, r4, r5, lr}
 8011bd6:	4c15      	ldr	r4, [pc, #84]	; (8011c2c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x58>)
 8011bd8:	7823      	ldrb	r3, [r4, #0]
 8011bda:	f3bf 8f5b 	dmb	ish
 8011bde:	07da      	lsls	r2, r3, #31
 8011be0:	4605      	mov	r5, r0
 8011be2:	d40b      	bmi.n	8011bfc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 8011be4:	4620      	mov	r0, r4
 8011be6:	f007 fbe7 	bl	80193b8 <__cxa_guard_acquire>
 8011bea:	b138      	cbz	r0, 8011bfc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 8011bec:	4620      	mov	r0, r4
 8011bee:	f007 fbef 	bl	80193d0 <__cxa_guard_release>
 8011bf2:	4a0f      	ldr	r2, [pc, #60]	; (8011c30 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 8011bf4:	490f      	ldr	r1, [pc, #60]	; (8011c34 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x60>)
 8011bf6:	4810      	ldr	r0, [pc, #64]	; (8011c38 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 8011bf8:	f007 fbd4 	bl	80193a4 <__aeabi_atexit>
 8011bfc:	4c0f      	ldr	r4, [pc, #60]	; (8011c3c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x68>)
 8011bfe:	7823      	ldrb	r3, [r4, #0]
 8011c00:	f3bf 8f5b 	dmb	ish
 8011c04:	07db      	lsls	r3, r3, #31
 8011c06:	d40b      	bmi.n	8011c20 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 8011c08:	4620      	mov	r0, r4
 8011c0a:	f007 fbd5 	bl	80193b8 <__cxa_guard_acquire>
 8011c0e:	b138      	cbz	r0, 8011c20 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 8011c10:	4620      	mov	r0, r4
 8011c12:	f007 fbdd 	bl	80193d0 <__cxa_guard_release>
 8011c16:	4a06      	ldr	r2, [pc, #24]	; (8011c30 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 8011c18:	4909      	ldr	r1, [pc, #36]	; (8011c40 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x6c>)
 8011c1a:	480a      	ldr	r0, [pc, #40]	; (8011c44 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 8011c1c:	f007 fbc2 	bl	80193a4 <__aeabi_atexit>
 8011c20:	4b05      	ldr	r3, [pc, #20]	; (8011c38 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 8011c22:	612b      	str	r3, [r5, #16]
 8011c24:	4b07      	ldr	r3, [pc, #28]	; (8011c44 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 8011c26:	616b      	str	r3, [r5, #20]
 8011c28:	bd38      	pop	{r3, r4, r5, pc}
 8011c2a:	bf00      	nop
 8011c2c:	20012274 	.word	0x20012274
 8011c30:	20000000 	.word	0x20000000
 8011c34:	08010279 	.word	0x08010279
 8011c38:	200000d8 	.word	0x200000d8
 8011c3c:	20012278 	.word	0x20012278
 8011c40:	08010277 	.word	0x08010277
 8011c44:	200000dc 	.word	0x200000dc

08011c48 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>:
 8011c48:	b538      	push	{r3, r4, r5, lr}
 8011c4a:	4c15      	ldr	r4, [pc, #84]	; (8011ca0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x58>)
 8011c4c:	7823      	ldrb	r3, [r4, #0]
 8011c4e:	f3bf 8f5b 	dmb	ish
 8011c52:	07da      	lsls	r2, r3, #31
 8011c54:	4605      	mov	r5, r0
 8011c56:	d40b      	bmi.n	8011c70 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 8011c58:	4620      	mov	r0, r4
 8011c5a:	f007 fbad 	bl	80193b8 <__cxa_guard_acquire>
 8011c5e:	b138      	cbz	r0, 8011c70 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 8011c60:	4620      	mov	r0, r4
 8011c62:	f007 fbb5 	bl	80193d0 <__cxa_guard_release>
 8011c66:	4a0f      	ldr	r2, [pc, #60]	; (8011ca4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 8011c68:	490f      	ldr	r1, [pc, #60]	; (8011ca8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x60>)
 8011c6a:	4810      	ldr	r0, [pc, #64]	; (8011cac <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 8011c6c:	f007 fb9a 	bl	80193a4 <__aeabi_atexit>
 8011c70:	4c0f      	ldr	r4, [pc, #60]	; (8011cb0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x68>)
 8011c72:	7823      	ldrb	r3, [r4, #0]
 8011c74:	f3bf 8f5b 	dmb	ish
 8011c78:	07db      	lsls	r3, r3, #31
 8011c7a:	d40b      	bmi.n	8011c94 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 8011c7c:	4620      	mov	r0, r4
 8011c7e:	f007 fb9b 	bl	80193b8 <__cxa_guard_acquire>
 8011c82:	b138      	cbz	r0, 8011c94 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 8011c84:	4620      	mov	r0, r4
 8011c86:	f007 fba3 	bl	80193d0 <__cxa_guard_release>
 8011c8a:	4a06      	ldr	r2, [pc, #24]	; (8011ca4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 8011c8c:	4909      	ldr	r1, [pc, #36]	; (8011cb4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x6c>)
 8011c8e:	480a      	ldr	r0, [pc, #40]	; (8011cb8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 8011c90:	f007 fb88 	bl	80193a4 <__aeabi_atexit>
 8011c94:	4b05      	ldr	r3, [pc, #20]	; (8011cac <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 8011c96:	60ab      	str	r3, [r5, #8]
 8011c98:	4b07      	ldr	r3, [pc, #28]	; (8011cb8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 8011c9a:	60eb      	str	r3, [r5, #12]
 8011c9c:	bd38      	pop	{r3, r4, r5, pc}
 8011c9e:	bf00      	nop
 8011ca0:	2001224c 	.word	0x2001224c
 8011ca4:	20000000 	.word	0x20000000
 8011ca8:	0801027d 	.word	0x0801027d
 8011cac:	200000b0 	.word	0x200000b0
 8011cb0:	20012250 	.word	0x20012250
 8011cb4:	0801027b 	.word	0x0801027b
 8011cb8:	200000b4 	.word	0x200000b4

08011cbc <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>:
 8011cbc:	b510      	push	{r4, lr}
 8011cbe:	4604      	mov	r4, r0
 8011cc0:	f7ff ff88 	bl	8011bd4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>
 8011cc4:	4620      	mov	r0, r4
 8011cc6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8011cca:	f7ff bfbd 	b.w	8011c48 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>
	...

08011cd0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>:
 8011cd0:	b538      	push	{r3, r4, r5, lr}
 8011cd2:	4c15      	ldr	r4, [pc, #84]	; (8011d28 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x58>)
 8011cd4:	7823      	ldrb	r3, [r4, #0]
 8011cd6:	f3bf 8f5b 	dmb	ish
 8011cda:	07da      	lsls	r2, r3, #31
 8011cdc:	4605      	mov	r5, r0
 8011cde:	d40b      	bmi.n	8011cf8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 8011ce0:	4620      	mov	r0, r4
 8011ce2:	f007 fb69 	bl	80193b8 <__cxa_guard_acquire>
 8011ce6:	b138      	cbz	r0, 8011cf8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 8011ce8:	4620      	mov	r0, r4
 8011cea:	f007 fb71 	bl	80193d0 <__cxa_guard_release>
 8011cee:	4a0f      	ldr	r2, [pc, #60]	; (8011d2c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 8011cf0:	490f      	ldr	r1, [pc, #60]	; (8011d30 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x60>)
 8011cf2:	4810      	ldr	r0, [pc, #64]	; (8011d34 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 8011cf4:	f007 fb56 	bl	80193a4 <__aeabi_atexit>
 8011cf8:	4c0f      	ldr	r4, [pc, #60]	; (8011d38 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x68>)
 8011cfa:	7823      	ldrb	r3, [r4, #0]
 8011cfc:	f3bf 8f5b 	dmb	ish
 8011d00:	07db      	lsls	r3, r3, #31
 8011d02:	d40b      	bmi.n	8011d1c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 8011d04:	4620      	mov	r0, r4
 8011d06:	f007 fb57 	bl	80193b8 <__cxa_guard_acquire>
 8011d0a:	b138      	cbz	r0, 8011d1c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 8011d0c:	4620      	mov	r0, r4
 8011d0e:	f007 fb5f 	bl	80193d0 <__cxa_guard_release>
 8011d12:	4a06      	ldr	r2, [pc, #24]	; (8011d2c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 8011d14:	4909      	ldr	r1, [pc, #36]	; (8011d3c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x6c>)
 8011d16:	480a      	ldr	r0, [pc, #40]	; (8011d40 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 8011d18:	f007 fb44 	bl	80193a4 <__aeabi_atexit>
 8011d1c:	4b05      	ldr	r3, [pc, #20]	; (8011d34 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 8011d1e:	622b      	str	r3, [r5, #32]
 8011d20:	4b07      	ldr	r3, [pc, #28]	; (8011d40 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 8011d22:	626b      	str	r3, [r5, #36]	; 0x24
 8011d24:	bd38      	pop	{r3, r4, r5, pc}
 8011d26:	bf00      	nop
 8011d28:	2001227c 	.word	0x2001227c
 8011d2c:	20000000 	.word	0x20000000
 8011d30:	08010271 	.word	0x08010271
 8011d34:	200000e0 	.word	0x200000e0
 8011d38:	20012280 	.word	0x20012280
 8011d3c:	0801026f 	.word	0x0801026f
 8011d40:	200000e4 	.word	0x200000e4

08011d44 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>:
 8011d44:	b538      	push	{r3, r4, r5, lr}
 8011d46:	4c15      	ldr	r4, [pc, #84]	; (8011d9c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x58>)
 8011d48:	7823      	ldrb	r3, [r4, #0]
 8011d4a:	f3bf 8f5b 	dmb	ish
 8011d4e:	07da      	lsls	r2, r3, #31
 8011d50:	4605      	mov	r5, r0
 8011d52:	d40b      	bmi.n	8011d6c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 8011d54:	4620      	mov	r0, r4
 8011d56:	f007 fb2f 	bl	80193b8 <__cxa_guard_acquire>
 8011d5a:	b138      	cbz	r0, 8011d6c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 8011d5c:	4620      	mov	r0, r4
 8011d5e:	f007 fb37 	bl	80193d0 <__cxa_guard_release>
 8011d62:	4a0f      	ldr	r2, [pc, #60]	; (8011da0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 8011d64:	490f      	ldr	r1, [pc, #60]	; (8011da4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x60>)
 8011d66:	4810      	ldr	r0, [pc, #64]	; (8011da8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 8011d68:	f007 fb1c 	bl	80193a4 <__aeabi_atexit>
 8011d6c:	4c0f      	ldr	r4, [pc, #60]	; (8011dac <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x68>)
 8011d6e:	7823      	ldrb	r3, [r4, #0]
 8011d70:	f3bf 8f5b 	dmb	ish
 8011d74:	07db      	lsls	r3, r3, #31
 8011d76:	d40b      	bmi.n	8011d90 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 8011d78:	4620      	mov	r0, r4
 8011d7a:	f007 fb1d 	bl	80193b8 <__cxa_guard_acquire>
 8011d7e:	b138      	cbz	r0, 8011d90 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 8011d80:	4620      	mov	r0, r4
 8011d82:	f007 fb25 	bl	80193d0 <__cxa_guard_release>
 8011d86:	4a06      	ldr	r2, [pc, #24]	; (8011da0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 8011d88:	4909      	ldr	r1, [pc, #36]	; (8011db0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x6c>)
 8011d8a:	480a      	ldr	r0, [pc, #40]	; (8011db4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 8011d8c:	f007 fb0a 	bl	80193a4 <__aeabi_atexit>
 8011d90:	4b05      	ldr	r3, [pc, #20]	; (8011da8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 8011d92:	61ab      	str	r3, [r5, #24]
 8011d94:	4b07      	ldr	r3, [pc, #28]	; (8011db4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 8011d96:	61eb      	str	r3, [r5, #28]
 8011d98:	bd38      	pop	{r3, r4, r5, pc}
 8011d9a:	bf00      	nop
 8011d9c:	20012254 	.word	0x20012254
 8011da0:	20000000 	.word	0x20000000
 8011da4:	08010275 	.word	0x08010275
 8011da8:	200000b8 	.word	0x200000b8
 8011dac:	20012258 	.word	0x20012258
 8011db0:	08010273 	.word	0x08010273
 8011db4:	200000bc 	.word	0x200000bc

08011db8 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>:
 8011db8:	b510      	push	{r4, lr}
 8011dba:	4604      	mov	r4, r0
 8011dbc:	f7ff ff88 	bl	8011cd0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>
 8011dc0:	4620      	mov	r0, r4
 8011dc2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8011dc6:	f7ff bfbd 	b.w	8011d44 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>
	...

08011dcc <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>:
 8011dcc:	b538      	push	{r3, r4, r5, lr}
 8011dce:	4c15      	ldr	r4, [pc, #84]	; (8011e24 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x58>)
 8011dd0:	7823      	ldrb	r3, [r4, #0]
 8011dd2:	f3bf 8f5b 	dmb	ish
 8011dd6:	07da      	lsls	r2, r3, #31
 8011dd8:	4605      	mov	r5, r0
 8011dda:	d40b      	bmi.n	8011df4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 8011ddc:	4620      	mov	r0, r4
 8011dde:	f007 faeb 	bl	80193b8 <__cxa_guard_acquire>
 8011de2:	b138      	cbz	r0, 8011df4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 8011de4:	4620      	mov	r0, r4
 8011de6:	f007 faf3 	bl	80193d0 <__cxa_guard_release>
 8011dea:	4a0f      	ldr	r2, [pc, #60]	; (8011e28 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 8011dec:	490f      	ldr	r1, [pc, #60]	; (8011e2c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x60>)
 8011dee:	4810      	ldr	r0, [pc, #64]	; (8011e30 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 8011df0:	f007 fad8 	bl	80193a4 <__aeabi_atexit>
 8011df4:	4c0f      	ldr	r4, [pc, #60]	; (8011e34 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x68>)
 8011df6:	7823      	ldrb	r3, [r4, #0]
 8011df8:	f3bf 8f5b 	dmb	ish
 8011dfc:	07db      	lsls	r3, r3, #31
 8011dfe:	d40b      	bmi.n	8011e18 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 8011e00:	4620      	mov	r0, r4
 8011e02:	f007 fad9 	bl	80193b8 <__cxa_guard_acquire>
 8011e06:	b138      	cbz	r0, 8011e18 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 8011e08:	4620      	mov	r0, r4
 8011e0a:	f007 fae1 	bl	80193d0 <__cxa_guard_release>
 8011e0e:	4a06      	ldr	r2, [pc, #24]	; (8011e28 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 8011e10:	4909      	ldr	r1, [pc, #36]	; (8011e38 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x6c>)
 8011e12:	480a      	ldr	r0, [pc, #40]	; (8011e3c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 8011e14:	f007 fac6 	bl	80193a4 <__aeabi_atexit>
 8011e18:	4b05      	ldr	r3, [pc, #20]	; (8011e30 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 8011e1a:	632b      	str	r3, [r5, #48]	; 0x30
 8011e1c:	4b07      	ldr	r3, [pc, #28]	; (8011e3c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 8011e1e:	636b      	str	r3, [r5, #52]	; 0x34
 8011e20:	bd38      	pop	{r3, r4, r5, pc}
 8011e22:	bf00      	nop
 8011e24:	2001228c 	.word	0x2001228c
 8011e28:	20000000 	.word	0x20000000
 8011e2c:	08010269 	.word	0x08010269
 8011e30:	200000f0 	.word	0x200000f0
 8011e34:	20012290 	.word	0x20012290
 8011e38:	08010267 	.word	0x08010267
 8011e3c:	200000f4 	.word	0x200000f4

08011e40 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>:
 8011e40:	b538      	push	{r3, r4, r5, lr}
 8011e42:	4c15      	ldr	r4, [pc, #84]	; (8011e98 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x58>)
 8011e44:	7823      	ldrb	r3, [r4, #0]
 8011e46:	f3bf 8f5b 	dmb	ish
 8011e4a:	07da      	lsls	r2, r3, #31
 8011e4c:	4605      	mov	r5, r0
 8011e4e:	d40b      	bmi.n	8011e68 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 8011e50:	4620      	mov	r0, r4
 8011e52:	f007 fab1 	bl	80193b8 <__cxa_guard_acquire>
 8011e56:	b138      	cbz	r0, 8011e68 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 8011e58:	4620      	mov	r0, r4
 8011e5a:	f007 fab9 	bl	80193d0 <__cxa_guard_release>
 8011e5e:	4a0f      	ldr	r2, [pc, #60]	; (8011e9c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 8011e60:	490f      	ldr	r1, [pc, #60]	; (8011ea0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x60>)
 8011e62:	4810      	ldr	r0, [pc, #64]	; (8011ea4 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 8011e64:	f007 fa9e 	bl	80193a4 <__aeabi_atexit>
 8011e68:	4c0f      	ldr	r4, [pc, #60]	; (8011ea8 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x68>)
 8011e6a:	7823      	ldrb	r3, [r4, #0]
 8011e6c:	f3bf 8f5b 	dmb	ish
 8011e70:	07db      	lsls	r3, r3, #31
 8011e72:	d40b      	bmi.n	8011e8c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 8011e74:	4620      	mov	r0, r4
 8011e76:	f007 fa9f 	bl	80193b8 <__cxa_guard_acquire>
 8011e7a:	b138      	cbz	r0, 8011e8c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 8011e7c:	4620      	mov	r0, r4
 8011e7e:	f007 faa7 	bl	80193d0 <__cxa_guard_release>
 8011e82:	4a06      	ldr	r2, [pc, #24]	; (8011e9c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 8011e84:	4909      	ldr	r1, [pc, #36]	; (8011eac <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x6c>)
 8011e86:	480a      	ldr	r0, [pc, #40]	; (8011eb0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 8011e88:	f007 fa8c 	bl	80193a4 <__aeabi_atexit>
 8011e8c:	4b05      	ldr	r3, [pc, #20]	; (8011ea4 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 8011e8e:	62ab      	str	r3, [r5, #40]	; 0x28
 8011e90:	4b07      	ldr	r3, [pc, #28]	; (8011eb0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 8011e92:	62eb      	str	r3, [r5, #44]	; 0x2c
 8011e94:	bd38      	pop	{r3, r4, r5, pc}
 8011e96:	bf00      	nop
 8011e98:	2001225c 	.word	0x2001225c
 8011e9c:	20000000 	.word	0x20000000
 8011ea0:	0801026d 	.word	0x0801026d
 8011ea4:	200000c0 	.word	0x200000c0
 8011ea8:	20012260 	.word	0x20012260
 8011eac:	0801026b 	.word	0x0801026b
 8011eb0:	200000c4 	.word	0x200000c4

08011eb4 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>:
 8011eb4:	b510      	push	{r4, lr}
 8011eb6:	4604      	mov	r4, r0
 8011eb8:	f7ff ff88 	bl	8011dcc <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>
 8011ebc:	4620      	mov	r0, r4
 8011ebe:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8011ec2:	f7ff bfbd 	b.w	8011e40 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>
	...

08011ec8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>:
 8011ec8:	b538      	push	{r3, r4, r5, lr}
 8011eca:	4c15      	ldr	r4, [pc, #84]	; (8011f20 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x58>)
 8011ecc:	7823      	ldrb	r3, [r4, #0]
 8011ece:	f3bf 8f5b 	dmb	ish
 8011ed2:	07da      	lsls	r2, r3, #31
 8011ed4:	4605      	mov	r5, r0
 8011ed6:	d40b      	bmi.n	8011ef0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 8011ed8:	4620      	mov	r0, r4
 8011eda:	f007 fa6d 	bl	80193b8 <__cxa_guard_acquire>
 8011ede:	b138      	cbz	r0, 8011ef0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 8011ee0:	4620      	mov	r0, r4
 8011ee2:	f007 fa75 	bl	80193d0 <__cxa_guard_release>
 8011ee6:	4a0f      	ldr	r2, [pc, #60]	; (8011f24 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 8011ee8:	490f      	ldr	r1, [pc, #60]	; (8011f28 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x60>)
 8011eea:	4810      	ldr	r0, [pc, #64]	; (8011f2c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 8011eec:	f007 fa5a 	bl	80193a4 <__aeabi_atexit>
 8011ef0:	4c0f      	ldr	r4, [pc, #60]	; (8011f30 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x68>)
 8011ef2:	7823      	ldrb	r3, [r4, #0]
 8011ef4:	f3bf 8f5b 	dmb	ish
 8011ef8:	07db      	lsls	r3, r3, #31
 8011efa:	d40b      	bmi.n	8011f14 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 8011efc:	4620      	mov	r0, r4
 8011efe:	f007 fa5b 	bl	80193b8 <__cxa_guard_acquire>
 8011f02:	b138      	cbz	r0, 8011f14 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 8011f04:	4620      	mov	r0, r4
 8011f06:	f007 fa63 	bl	80193d0 <__cxa_guard_release>
 8011f0a:	4a06      	ldr	r2, [pc, #24]	; (8011f24 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 8011f0c:	4909      	ldr	r1, [pc, #36]	; (8011f34 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x6c>)
 8011f0e:	480a      	ldr	r0, [pc, #40]	; (8011f38 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 8011f10:	f007 fa48 	bl	80193a4 <__aeabi_atexit>
 8011f14:	4b05      	ldr	r3, [pc, #20]	; (8011f2c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 8011f16:	652b      	str	r3, [r5, #80]	; 0x50
 8011f18:	4b07      	ldr	r3, [pc, #28]	; (8011f38 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 8011f1a:	656b      	str	r3, [r5, #84]	; 0x54
 8011f1c:	bd38      	pop	{r3, r4, r5, pc}
 8011f1e:	bf00      	nop
 8011f20:	20012294 	.word	0x20012294
 8011f24:	20000000 	.word	0x20000000
 8011f28:	08010259 	.word	0x08010259
 8011f2c:	200000f8 	.word	0x200000f8
 8011f30:	20012298 	.word	0x20012298
 8011f34:	08010257 	.word	0x08010257
 8011f38:	200000fc 	.word	0x200000fc

08011f3c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>:
 8011f3c:	b538      	push	{r3, r4, r5, lr}
 8011f3e:	4c15      	ldr	r4, [pc, #84]	; (8011f94 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x58>)
 8011f40:	7823      	ldrb	r3, [r4, #0]
 8011f42:	f3bf 8f5b 	dmb	ish
 8011f46:	07da      	lsls	r2, r3, #31
 8011f48:	4605      	mov	r5, r0
 8011f4a:	d40b      	bmi.n	8011f64 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 8011f4c:	4620      	mov	r0, r4
 8011f4e:	f007 fa33 	bl	80193b8 <__cxa_guard_acquire>
 8011f52:	b138      	cbz	r0, 8011f64 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 8011f54:	4620      	mov	r0, r4
 8011f56:	f007 fa3b 	bl	80193d0 <__cxa_guard_release>
 8011f5a:	4a0f      	ldr	r2, [pc, #60]	; (8011f98 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 8011f5c:	490f      	ldr	r1, [pc, #60]	; (8011f9c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x60>)
 8011f5e:	4810      	ldr	r0, [pc, #64]	; (8011fa0 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 8011f60:	f007 fa20 	bl	80193a4 <__aeabi_atexit>
 8011f64:	4c0f      	ldr	r4, [pc, #60]	; (8011fa4 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x68>)
 8011f66:	7823      	ldrb	r3, [r4, #0]
 8011f68:	f3bf 8f5b 	dmb	ish
 8011f6c:	07db      	lsls	r3, r3, #31
 8011f6e:	d40b      	bmi.n	8011f88 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 8011f70:	4620      	mov	r0, r4
 8011f72:	f007 fa21 	bl	80193b8 <__cxa_guard_acquire>
 8011f76:	b138      	cbz	r0, 8011f88 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 8011f78:	4620      	mov	r0, r4
 8011f7a:	f007 fa29 	bl	80193d0 <__cxa_guard_release>
 8011f7e:	4a06      	ldr	r2, [pc, #24]	; (8011f98 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 8011f80:	4909      	ldr	r1, [pc, #36]	; (8011fa8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x6c>)
 8011f82:	480a      	ldr	r0, [pc, #40]	; (8011fac <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 8011f84:	f007 fa0e 	bl	80193a4 <__aeabi_atexit>
 8011f88:	4b05      	ldr	r3, [pc, #20]	; (8011fa0 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 8011f8a:	64ab      	str	r3, [r5, #72]	; 0x48
 8011f8c:	4b07      	ldr	r3, [pc, #28]	; (8011fac <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 8011f8e:	64eb      	str	r3, [r5, #76]	; 0x4c
 8011f90:	bd38      	pop	{r3, r4, r5, pc}
 8011f92:	bf00      	nop
 8011f94:	2001229c 	.word	0x2001229c
 8011f98:	20000000 	.word	0x20000000
 8011f9c:	0801025d 	.word	0x0801025d
 8011fa0:	20000100 	.word	0x20000100
 8011fa4:	200122a0 	.word	0x200122a0
 8011fa8:	0801025b 	.word	0x0801025b
 8011fac:	20000104 	.word	0x20000104

08011fb0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>:
 8011fb0:	b538      	push	{r3, r4, r5, lr}
 8011fb2:	4c15      	ldr	r4, [pc, #84]	; (8012008 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x58>)
 8011fb4:	7823      	ldrb	r3, [r4, #0]
 8011fb6:	f3bf 8f5b 	dmb	ish
 8011fba:	07da      	lsls	r2, r3, #31
 8011fbc:	4605      	mov	r5, r0
 8011fbe:	d40b      	bmi.n	8011fd8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 8011fc0:	4620      	mov	r0, r4
 8011fc2:	f007 f9f9 	bl	80193b8 <__cxa_guard_acquire>
 8011fc6:	b138      	cbz	r0, 8011fd8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 8011fc8:	4620      	mov	r0, r4
 8011fca:	f007 fa01 	bl	80193d0 <__cxa_guard_release>
 8011fce:	4a0f      	ldr	r2, [pc, #60]	; (801200c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 8011fd0:	490f      	ldr	r1, [pc, #60]	; (8012010 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x60>)
 8011fd2:	4810      	ldr	r0, [pc, #64]	; (8012014 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 8011fd4:	f007 f9e6 	bl	80193a4 <__aeabi_atexit>
 8011fd8:	4c0f      	ldr	r4, [pc, #60]	; (8012018 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x68>)
 8011fda:	7823      	ldrb	r3, [r4, #0]
 8011fdc:	f3bf 8f5b 	dmb	ish
 8011fe0:	07db      	lsls	r3, r3, #31
 8011fe2:	d40b      	bmi.n	8011ffc <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 8011fe4:	4620      	mov	r0, r4
 8011fe6:	f007 f9e7 	bl	80193b8 <__cxa_guard_acquire>
 8011fea:	b138      	cbz	r0, 8011ffc <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 8011fec:	4620      	mov	r0, r4
 8011fee:	f007 f9ef 	bl	80193d0 <__cxa_guard_release>
 8011ff2:	4a06      	ldr	r2, [pc, #24]	; (801200c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 8011ff4:	4909      	ldr	r1, [pc, #36]	; (801201c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x6c>)
 8011ff6:	480a      	ldr	r0, [pc, #40]	; (8012020 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 8011ff8:	f007 f9d4 	bl	80193a4 <__aeabi_atexit>
 8011ffc:	4b05      	ldr	r3, [pc, #20]	; (8012014 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 8011ffe:	642b      	str	r3, [r5, #64]	; 0x40
 8012000:	4b07      	ldr	r3, [pc, #28]	; (8012020 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 8012002:	646b      	str	r3, [r5, #68]	; 0x44
 8012004:	bd38      	pop	{r3, r4, r5, pc}
 8012006:	bf00      	nop
 8012008:	20012264 	.word	0x20012264
 801200c:	20000000 	.word	0x20000000
 8012010:	08010261 	.word	0x08010261
 8012014:	200000c8 	.word	0x200000c8
 8012018:	20012268 	.word	0x20012268
 801201c:	0801025f 	.word	0x0801025f
 8012020:	200000cc 	.word	0x200000cc

08012024 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>:
 8012024:	b538      	push	{r3, r4, r5, lr}
 8012026:	4c15      	ldr	r4, [pc, #84]	; (801207c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x58>)
 8012028:	7823      	ldrb	r3, [r4, #0]
 801202a:	f3bf 8f5b 	dmb	ish
 801202e:	07da      	lsls	r2, r3, #31
 8012030:	4605      	mov	r5, r0
 8012032:	d40b      	bmi.n	801204c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 8012034:	4620      	mov	r0, r4
 8012036:	f007 f9bf 	bl	80193b8 <__cxa_guard_acquire>
 801203a:	b138      	cbz	r0, 801204c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 801203c:	4620      	mov	r0, r4
 801203e:	f007 f9c7 	bl	80193d0 <__cxa_guard_release>
 8012042:	4a0f      	ldr	r2, [pc, #60]	; (8012080 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 8012044:	490f      	ldr	r1, [pc, #60]	; (8012084 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x60>)
 8012046:	4810      	ldr	r0, [pc, #64]	; (8012088 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 8012048:	f007 f9ac 	bl	80193a4 <__aeabi_atexit>
 801204c:	4c0f      	ldr	r4, [pc, #60]	; (801208c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x68>)
 801204e:	7823      	ldrb	r3, [r4, #0]
 8012050:	f3bf 8f5b 	dmb	ish
 8012054:	07db      	lsls	r3, r3, #31
 8012056:	d40b      	bmi.n	8012070 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 8012058:	4620      	mov	r0, r4
 801205a:	f007 f9ad 	bl	80193b8 <__cxa_guard_acquire>
 801205e:	b138      	cbz	r0, 8012070 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 8012060:	4620      	mov	r0, r4
 8012062:	f007 f9b5 	bl	80193d0 <__cxa_guard_release>
 8012066:	4a06      	ldr	r2, [pc, #24]	; (8012080 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 8012068:	4909      	ldr	r1, [pc, #36]	; (8012090 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x6c>)
 801206a:	480a      	ldr	r0, [pc, #40]	; (8012094 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 801206c:	f007 f99a 	bl	80193a4 <__aeabi_atexit>
 8012070:	4b05      	ldr	r3, [pc, #20]	; (8012088 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 8012072:	63ab      	str	r3, [r5, #56]	; 0x38
 8012074:	4b07      	ldr	r3, [pc, #28]	; (8012094 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 8012076:	63eb      	str	r3, [r5, #60]	; 0x3c
 8012078:	bd38      	pop	{r3, r4, r5, pc}
 801207a:	bf00      	nop
 801207c:	20012284 	.word	0x20012284
 8012080:	20000000 	.word	0x20000000
 8012084:	08010265 	.word	0x08010265
 8012088:	200000e8 	.word	0x200000e8
 801208c:	20012288 	.word	0x20012288
 8012090:	08010263 	.word	0x08010263
 8012094:	200000ec 	.word	0x200000ec

08012098 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>:
 8012098:	b510      	push	{r4, lr}
 801209a:	4604      	mov	r4, r0
 801209c:	f7ff ff14 	bl	8011ec8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>
 80120a0:	4620      	mov	r0, r4
 80120a2:	f7ff ff85 	bl	8011fb0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>
 80120a6:	4620      	mov	r0, r4
 80120a8:	f7ff ff48 	bl	8011f3c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>
 80120ac:	4620      	mov	r0, r4
 80120ae:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80120b2:	f7ff bfb7 	b.w	8012024 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>
	...

080120b8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>:
 80120b8:	b538      	push	{r3, r4, r5, lr}
 80120ba:	4c15      	ldr	r4, [pc, #84]	; (8012110 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x58>)
 80120bc:	7823      	ldrb	r3, [r4, #0]
 80120be:	f3bf 8f5b 	dmb	ish
 80120c2:	07da      	lsls	r2, r3, #31
 80120c4:	4605      	mov	r5, r0
 80120c6:	d40b      	bmi.n	80120e0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 80120c8:	4620      	mov	r0, r4
 80120ca:	f007 f975 	bl	80193b8 <__cxa_guard_acquire>
 80120ce:	b138      	cbz	r0, 80120e0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 80120d0:	4620      	mov	r0, r4
 80120d2:	f007 f97d 	bl	80193d0 <__cxa_guard_release>
 80120d6:	4a0f      	ldr	r2, [pc, #60]	; (8012114 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 80120d8:	490f      	ldr	r1, [pc, #60]	; (8012118 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x60>)
 80120da:	4810      	ldr	r0, [pc, #64]	; (801211c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 80120dc:	f007 f962 	bl	80193a4 <__aeabi_atexit>
 80120e0:	4c0f      	ldr	r4, [pc, #60]	; (8012120 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x68>)
 80120e2:	7823      	ldrb	r3, [r4, #0]
 80120e4:	f3bf 8f5b 	dmb	ish
 80120e8:	07db      	lsls	r3, r3, #31
 80120ea:	d40b      	bmi.n	8012104 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 80120ec:	4620      	mov	r0, r4
 80120ee:	f007 f963 	bl	80193b8 <__cxa_guard_acquire>
 80120f2:	b138      	cbz	r0, 8012104 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 80120f4:	4620      	mov	r0, r4
 80120f6:	f007 f96b 	bl	80193d0 <__cxa_guard_release>
 80120fa:	4a06      	ldr	r2, [pc, #24]	; (8012114 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 80120fc:	4909      	ldr	r1, [pc, #36]	; (8012124 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x6c>)
 80120fe:	480a      	ldr	r0, [pc, #40]	; (8012128 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 8012100:	f007 f950 	bl	80193a4 <__aeabi_atexit>
 8012104:	4b05      	ldr	r3, [pc, #20]	; (801211c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 8012106:	662b      	str	r3, [r5, #96]	; 0x60
 8012108:	4b07      	ldr	r3, [pc, #28]	; (8012128 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 801210a:	666b      	str	r3, [r5, #100]	; 0x64
 801210c:	bd38      	pop	{r3, r4, r5, pc}
 801210e:	bf00      	nop
 8012110:	2001226c 	.word	0x2001226c
 8012114:	20000000 	.word	0x20000000
 8012118:	08010251 	.word	0x08010251
 801211c:	200000d0 	.word	0x200000d0
 8012120:	20012270 	.word	0x20012270
 8012124:	0801024f 	.word	0x0801024f
 8012128:	200000d4 	.word	0x200000d4

0801212c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>:
 801212c:	b538      	push	{r3, r4, r5, lr}
 801212e:	4c15      	ldr	r4, [pc, #84]	; (8012184 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x58>)
 8012130:	7823      	ldrb	r3, [r4, #0]
 8012132:	f3bf 8f5b 	dmb	ish
 8012136:	07da      	lsls	r2, r3, #31
 8012138:	4605      	mov	r5, r0
 801213a:	d40b      	bmi.n	8012154 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 801213c:	4620      	mov	r0, r4
 801213e:	f007 f93b 	bl	80193b8 <__cxa_guard_acquire>
 8012142:	b138      	cbz	r0, 8012154 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 8012144:	4620      	mov	r0, r4
 8012146:	f007 f943 	bl	80193d0 <__cxa_guard_release>
 801214a:	4a0f      	ldr	r2, [pc, #60]	; (8012188 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 801214c:	490f      	ldr	r1, [pc, #60]	; (801218c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x60>)
 801214e:	4810      	ldr	r0, [pc, #64]	; (8012190 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 8012150:	f007 f928 	bl	80193a4 <__aeabi_atexit>
 8012154:	4c0f      	ldr	r4, [pc, #60]	; (8012194 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x68>)
 8012156:	7823      	ldrb	r3, [r4, #0]
 8012158:	f3bf 8f5b 	dmb	ish
 801215c:	07db      	lsls	r3, r3, #31
 801215e:	d40b      	bmi.n	8012178 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 8012160:	4620      	mov	r0, r4
 8012162:	f007 f929 	bl	80193b8 <__cxa_guard_acquire>
 8012166:	b138      	cbz	r0, 8012178 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 8012168:	4620      	mov	r0, r4
 801216a:	f007 f931 	bl	80193d0 <__cxa_guard_release>
 801216e:	4a06      	ldr	r2, [pc, #24]	; (8012188 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 8012170:	4909      	ldr	r1, [pc, #36]	; (8012198 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x6c>)
 8012172:	480a      	ldr	r0, [pc, #40]	; (801219c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 8012174:	f007 f916 	bl	80193a4 <__aeabi_atexit>
 8012178:	4b05      	ldr	r3, [pc, #20]	; (8012190 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 801217a:	65ab      	str	r3, [r5, #88]	; 0x58
 801217c:	4b07      	ldr	r3, [pc, #28]	; (801219c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 801217e:	65eb      	str	r3, [r5, #92]	; 0x5c
 8012180:	bd38      	pop	{r3, r4, r5, pc}
 8012182:	bf00      	nop
 8012184:	20012244 	.word	0x20012244
 8012188:	20000000 	.word	0x20000000
 801218c:	08010255 	.word	0x08010255
 8012190:	200000a8 	.word	0x200000a8
 8012194:	20012248 	.word	0x20012248
 8012198:	08010253 	.word	0x08010253
 801219c:	200000ac 	.word	0x200000ac

080121a0 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>:
 80121a0:	b510      	push	{r4, lr}
 80121a2:	4604      	mov	r4, r0
 80121a4:	f7ff ff88 	bl	80120b8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>
 80121a8:	4620      	mov	r0, r4
 80121aa:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80121ae:	f7ff bfbd 	b.w	801212c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>
	...

080121b4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>:
 80121b4:	b538      	push	{r3, r4, r5, lr}
 80121b6:	4c15      	ldr	r4, [pc, #84]	; (801220c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x58>)
 80121b8:	7823      	ldrb	r3, [r4, #0]
 80121ba:	f3bf 8f5b 	dmb	ish
 80121be:	07da      	lsls	r2, r3, #31
 80121c0:	4605      	mov	r5, r0
 80121c2:	d40b      	bmi.n	80121dc <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 80121c4:	4620      	mov	r0, r4
 80121c6:	f007 f8f7 	bl	80193b8 <__cxa_guard_acquire>
 80121ca:	b138      	cbz	r0, 80121dc <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 80121cc:	4620      	mov	r0, r4
 80121ce:	f007 f8ff 	bl	80193d0 <__cxa_guard_release>
 80121d2:	4a0f      	ldr	r2, [pc, #60]	; (8012210 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 80121d4:	490f      	ldr	r1, [pc, #60]	; (8012214 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x60>)
 80121d6:	4810      	ldr	r0, [pc, #64]	; (8012218 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 80121d8:	f007 f8e4 	bl	80193a4 <__aeabi_atexit>
 80121dc:	4c0f      	ldr	r4, [pc, #60]	; (801221c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x68>)
 80121de:	7823      	ldrb	r3, [r4, #0]
 80121e0:	f3bf 8f5b 	dmb	ish
 80121e4:	07db      	lsls	r3, r3, #31
 80121e6:	d40b      	bmi.n	8012200 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 80121e8:	4620      	mov	r0, r4
 80121ea:	f007 f8e5 	bl	80193b8 <__cxa_guard_acquire>
 80121ee:	b138      	cbz	r0, 8012200 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 80121f0:	4620      	mov	r0, r4
 80121f2:	f007 f8ed 	bl	80193d0 <__cxa_guard_release>
 80121f6:	4a06      	ldr	r2, [pc, #24]	; (8012210 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 80121f8:	4909      	ldr	r1, [pc, #36]	; (8012220 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x6c>)
 80121fa:	480a      	ldr	r0, [pc, #40]	; (8012224 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 80121fc:	f007 f8d2 	bl	80193a4 <__aeabi_atexit>
 8012200:	4b05      	ldr	r3, [pc, #20]	; (8012218 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 8012202:	672b      	str	r3, [r5, #112]	; 0x70
 8012204:	4b07      	ldr	r3, [pc, #28]	; (8012224 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 8012206:	676b      	str	r3, [r5, #116]	; 0x74
 8012208:	bd38      	pop	{r3, r4, r5, pc}
 801220a:	bf00      	nop
 801220c:	2001223c 	.word	0x2001223c
 8012210:	20000000 	.word	0x20000000
 8012214:	08010249 	.word	0x08010249
 8012218:	200000a0 	.word	0x200000a0
 801221c:	20012240 	.word	0x20012240
 8012220:	08010247 	.word	0x08010247
 8012224:	200000a4 	.word	0x200000a4

08012228 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>:
 8012228:	b538      	push	{r3, r4, r5, lr}
 801222a:	4c15      	ldr	r4, [pc, #84]	; (8012280 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x58>)
 801222c:	7823      	ldrb	r3, [r4, #0]
 801222e:	f3bf 8f5b 	dmb	ish
 8012232:	07da      	lsls	r2, r3, #31
 8012234:	4605      	mov	r5, r0
 8012236:	d40b      	bmi.n	8012250 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 8012238:	4620      	mov	r0, r4
 801223a:	f007 f8bd 	bl	80193b8 <__cxa_guard_acquire>
 801223e:	b138      	cbz	r0, 8012250 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 8012240:	4620      	mov	r0, r4
 8012242:	f007 f8c5 	bl	80193d0 <__cxa_guard_release>
 8012246:	4a0f      	ldr	r2, [pc, #60]	; (8012284 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 8012248:	490f      	ldr	r1, [pc, #60]	; (8012288 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x60>)
 801224a:	4810      	ldr	r0, [pc, #64]	; (801228c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 801224c:	f007 f8aa 	bl	80193a4 <__aeabi_atexit>
 8012250:	4c0f      	ldr	r4, [pc, #60]	; (8012290 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x68>)
 8012252:	7823      	ldrb	r3, [r4, #0]
 8012254:	f3bf 8f5b 	dmb	ish
 8012258:	07db      	lsls	r3, r3, #31
 801225a:	d40b      	bmi.n	8012274 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 801225c:	4620      	mov	r0, r4
 801225e:	f007 f8ab 	bl	80193b8 <__cxa_guard_acquire>
 8012262:	b138      	cbz	r0, 8012274 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 8012264:	4620      	mov	r0, r4
 8012266:	f007 f8b3 	bl	80193d0 <__cxa_guard_release>
 801226a:	4a06      	ldr	r2, [pc, #24]	; (8012284 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 801226c:	4909      	ldr	r1, [pc, #36]	; (8012294 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x6c>)
 801226e:	480a      	ldr	r0, [pc, #40]	; (8012298 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 8012270:	f007 f898 	bl	80193a4 <__aeabi_atexit>
 8012274:	4b05      	ldr	r3, [pc, #20]	; (801228c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 8012276:	66ab      	str	r3, [r5, #104]	; 0x68
 8012278:	4b07      	ldr	r3, [pc, #28]	; (8012298 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 801227a:	66eb      	str	r3, [r5, #108]	; 0x6c
 801227c:	bd38      	pop	{r3, r4, r5, pc}
 801227e:	bf00      	nop
 8012280:	20012234 	.word	0x20012234
 8012284:	20000000 	.word	0x20000000
 8012288:	0801024d 	.word	0x0801024d
 801228c:	20000098 	.word	0x20000098
 8012290:	20012238 	.word	0x20012238
 8012294:	0801024b 	.word	0x0801024b
 8012298:	2000009c 	.word	0x2000009c

0801229c <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>:
 801229c:	b510      	push	{r4, lr}
 801229e:	4604      	mov	r4, r0
 80122a0:	f7ff ff88 	bl	80121b4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>
 80122a4:	4620      	mov	r0, r4
 80122a6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80122aa:	f7ff bfbd 	b.w	8012228 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>

080122ae <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>:
 80122ae:	b510      	push	{r4, lr}
 80122b0:	4604      	mov	r4, r0
 80122b2:	f7ff fff3 	bl	801229c <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>
 80122b6:	4620      	mov	r0, r4
 80122b8:	f7ff ff72 	bl	80121a0 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>
 80122bc:	4620      	mov	r0, r4
 80122be:	f7ff fdf9 	bl	8011eb4 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>
 80122c2:	4620      	mov	r0, r4
 80122c4:	f7ff fcfa 	bl	8011cbc <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>
 80122c8:	4620      	mov	r0, r4
 80122ca:	f7ff fd75 	bl	8011db8 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>
 80122ce:	4620      	mov	r0, r4
 80122d0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80122d4:	f7ff bee0 	b.w	8012098 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>

080122d8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>:
 80122d8:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80122dc:	e9dd 4e0c 	ldrd	r4, lr, [sp, #48]	; 0x30
 80122e0:	f9bd 8028 	ldrsh.w	r8, [sp, #40]	; 0x28
 80122e4:	f9bd b02c 	ldrsh.w	fp, [sp, #44]	; 0x2c
 80122e8:	f89d 6038 	ldrb.w	r6, [sp, #56]	; 0x38
 80122ec:	f89d c03c 	ldrb.w	ip, [sp, #60]	; 0x3c
 80122f0:	f89d 5040 	ldrb.w	r5, [sp, #64]	; 0x40
 80122f4:	8808      	ldrh	r0, [r1, #0]
 80122f6:	fb0e 4708 	mla	r7, lr, r8, r4
 80122fa:	f1be 0f00 	cmp.w	lr, #0
 80122fe:	eb02 0a07 	add.w	sl, r2, r7
 8012302:	db37      	blt.n	8012374 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x9c>
 8012304:	45f3      	cmp	fp, lr
 8012306:	dd35      	ble.n	8012374 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x9c>
 8012308:	2c00      	cmp	r4, #0
 801230a:	db31      	blt.n	8012370 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x98>
 801230c:	45a0      	cmp	r8, r4
 801230e:	dd2f      	ble.n	8012370 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x98>
 8012310:	5dd2      	ldrb	r2, [r2, r7]
 8012312:	f833 9012 	ldrh.w	r9, [r3, r2, lsl #1]
 8012316:	1c62      	adds	r2, r4, #1
 8012318:	d42f      	bmi.n	801237a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa2>
 801231a:	4590      	cmp	r8, r2
 801231c:	dd2d      	ble.n	801237a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa2>
 801231e:	b366      	cbz	r6, 801237a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa2>
 8012320:	f89a 2001 	ldrb.w	r2, [sl, #1]
 8012324:	f833 7012 	ldrh.w	r7, [r3, r2, lsl #1]
 8012328:	f11e 0e01 	adds.w	lr, lr, #1
 801232c:	d429      	bmi.n	8012382 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xaa>
 801232e:	45f3      	cmp	fp, lr
 8012330:	dd27      	ble.n	8012382 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xaa>
 8012332:	f1bc 0f00 	cmp.w	ip, #0
 8012336:	f000 80a0 	beq.w	801247a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a2>
 801233a:	2c00      	cmp	r4, #0
 801233c:	db1f      	blt.n	801237e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>
 801233e:	45a0      	cmp	r8, r4
 8012340:	dd1d      	ble.n	801237e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>
 8012342:	f81a 2008 	ldrb.w	r2, [sl, r8]
 8012346:	f833 e012 	ldrh.w	lr, [r3, r2, lsl #1]
 801234a:	3401      	adds	r4, #1
 801234c:	d41c      	bmi.n	8012388 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xb0>
 801234e:	45a0      	cmp	r8, r4
 8012350:	dd1a      	ble.n	8012388 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xb0>
 8012352:	b1de      	cbz	r6, 801238c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xb4>
 8012354:	44d0      	add	r8, sl
 8012356:	f898 2001 	ldrb.w	r2, [r8, #1]
 801235a:	f833 3012 	ldrh.w	r3, [r3, r2, lsl #1]
 801235e:	2e0f      	cmp	r6, #15
 8012360:	d915      	bls.n	801238e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xb6>
 8012362:	4b49      	ldr	r3, [pc, #292]	; (8012488 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1b0>)
 8012364:	4a49      	ldr	r2, [pc, #292]	; (801248c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1b4>)
 8012366:	484a      	ldr	r0, [pc, #296]	; (8012490 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1b8>)
 8012368:	f240 11ef 	movw	r1, #495	; 0x1ef
 801236c:	f007 f84e 	bl	801940c <__assert_func>
 8012370:	4681      	mov	r9, r0
 8012372:	e7d0      	b.n	8012316 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x3e>
 8012374:	4607      	mov	r7, r0
 8012376:	4681      	mov	r9, r0
 8012378:	e7d6      	b.n	8012328 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x50>
 801237a:	4607      	mov	r7, r0
 801237c:	e7d4      	b.n	8012328 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x50>
 801237e:	4686      	mov	lr, r0
 8012380:	e7e3      	b.n	801234a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x72>
 8012382:	4603      	mov	r3, r0
 8012384:	4686      	mov	lr, r0
 8012386:	e7ea      	b.n	801235e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x86>
 8012388:	4603      	mov	r3, r0
 801238a:	e7e8      	b.n	801235e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x86>
 801238c:	4603      	mov	r3, r0
 801238e:	f1bc 0f0f 	cmp.w	ip, #15
 8012392:	d8e6      	bhi.n	8012362 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x8a>
 8012394:	ea4f 4409 	mov.w	r4, r9, lsl #16
 8012398:	fb16 f80c 	smulbb	r8, r6, ip
 801239c:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 80123a0:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 80123a4:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 80123a8:	ea4f 08e8 	mov.w	r8, r8, asr #3
 80123ac:	ea44 0909 	orr.w	r9, r4, r9
 80123b0:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80123b4:	f1cc 0410 	rsb	r4, ip, #16
 80123b8:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 80123bc:	1ba4      	subs	r4, r4, r6
 80123be:	041a      	lsls	r2, r3, #16
 80123c0:	ebc8 0646 	rsb	r6, r8, r6, lsl #1
 80123c4:	ea4a 0707 	orr.w	r7, sl, r7
 80123c8:	4377      	muls	r7, r6
 80123ca:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 80123ce:	eb08 0444 	add.w	r4, r8, r4, lsl #1
 80123d2:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 80123d6:	fb04 7409 	mla	r4, r4, r9, r7
 80123da:	4313      	orrs	r3, r2
 80123dc:	ea4f 420e 	mov.w	r2, lr, lsl #16
 80123e0:	fb08 4303 	mla	r3, r8, r3, r4
 80123e4:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 80123e8:	f42e 64fc 	bic.w	r4, lr, #2016	; 0x7e0
 80123ec:	4322      	orrs	r2, r4
 80123ee:	ebc8 0c4c 	rsb	ip, r8, ip, lsl #1
 80123f2:	fb0c 3202 	mla	r2, ip, r2, r3
 80123f6:	0d53      	lsrs	r3, r2, #21
 80123f8:	0952      	lsrs	r2, r2, #5
 80123fa:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80123fe:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8012402:	431a      	orrs	r2, r3
 8012404:	b293      	uxth	r3, r2
 8012406:	b2af      	uxth	r7, r5
 8012408:	1202      	asrs	r2, r0, #8
 801240a:	43ed      	mvns	r5, r5
 801240c:	b2ed      	uxtb	r5, r5
 801240e:	ea4f 2c23 	mov.w	ip, r3, asr #8
 8012412:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8012416:	fb12 f205 	smulbb	r2, r2, r5
 801241a:	10c6      	asrs	r6, r0, #3
 801241c:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8012420:	fb0c 2c07 	mla	ip, ip, r7, r2
 8012424:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8012428:	10da      	asrs	r2, r3, #3
 801242a:	fb16 f605 	smulbb	r6, r6, r5
 801242e:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8012432:	fb02 6207 	mla	r2, r2, r7, r6
 8012436:	b296      	uxth	r6, r2
 8012438:	00c2      	lsls	r2, r0, #3
 801243a:	00dc      	lsls	r4, r3, #3
 801243c:	b2d2      	uxtb	r2, r2
 801243e:	b2e4      	uxtb	r4, r4
 8012440:	fb12 f205 	smulbb	r2, r2, r5
 8012444:	fb04 2207 	mla	r2, r4, r7, r2
 8012448:	fa1f fc8c 	uxth.w	ip, ip
 801244c:	b292      	uxth	r2, r2
 801244e:	f10c 0301 	add.w	r3, ip, #1
 8012452:	1c50      	adds	r0, r2, #1
 8012454:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 8012458:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 801245c:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8012460:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 8012464:	4313      	orrs	r3, r2
 8012466:	1c72      	adds	r2, r6, #1
 8012468:	eb02 2216 	add.w	r2, r2, r6, lsr #8
 801246c:	0952      	lsrs	r2, r2, #5
 801246e:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8012472:	4313      	orrs	r3, r2
 8012474:	800b      	strh	r3, [r1, #0]
 8012476:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801247a:	2e0f      	cmp	r6, #15
 801247c:	f63f af71 	bhi.w	8012362 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x8a>
 8012480:	4603      	mov	r3, r0
 8012482:	4686      	mov	lr, r0
 8012484:	e786      	b.n	8012394 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xbc>
 8012486:	bf00      	nop
 8012488:	0801d135 	.word	0x0801d135
 801248c:	0801d736 	.word	0x0801d736
 8012490:	0801d1bd 	.word	0x0801d1bd

08012494 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 8012494:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012498:	ed2d 8b08 	vpush	{d8-d11}
 801249c:	b09b      	sub	sp, #108	; 0x6c
 801249e:	e9dd 982d 	ldrd	r9, r8, [sp, #180]	; 0xb4
 80124a2:	9309      	str	r3, [sp, #36]	; 0x24
 80124a4:	f9bd 30d4 	ldrsh.w	r3, [sp, #212]	; 0xd4
 80124a8:	9e31      	ldr	r6, [sp, #196]	; 0xc4
 80124aa:	930a      	str	r3, [sp, #40]	; 0x28
 80124ac:	f89d 30dc 	ldrb.w	r3, [sp, #220]	; 0xdc
 80124b0:	930e      	str	r3, [sp, #56]	; 0x38
 80124b2:	910d      	str	r1, [sp, #52]	; 0x34
 80124b4:	e9dd 1332 	ldrd	r1, r3, [sp, #200]	; 0xc8
 80124b8:	9018      	str	r0, [sp, #96]	; 0x60
 80124ba:	6870      	ldr	r0, [r6, #4]
 80124bc:	9217      	str	r2, [sp, #92]	; 0x5c
 80124be:	fb00 1303 	mla	r3, r0, r3, r1
 80124c2:	9a36      	ldr	r2, [sp, #216]	; 0xd8
 80124c4:	6831      	ldr	r1, [r6, #0]
 80124c6:	6856      	ldr	r6, [r2, #4]
 80124c8:	f9bd 40d0 	ldrsh.w	r4, [sp, #208]	; 0xd0
 80124cc:	eb01 0a43 	add.w	sl, r1, r3, lsl #1
 80124d0:	6813      	ldr	r3, [r2, #0]
 80124d2:	930c      	str	r3, [sp, #48]	; 0x30
 80124d4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80124d6:	43db      	mvns	r3, r3
 80124d8:	b2db      	uxtb	r3, r3
 80124da:	eeb0 aa40 	vmov.f32	s20, s0
 80124de:	eef0 9a60 	vmov.f32	s19, s1
 80124e2:	eeb0 9a41 	vmov.f32	s18, s2
 80124e6:	eeb0 8a62 	vmov.f32	s16, s5
 80124ea:	eef0 8a43 	vmov.f32	s17, s6
 80124ee:	eef0 ba44 	vmov.f32	s23, s8
 80124f2:	eeb0 ba64 	vmov.f32	s22, s9
 80124f6:	eef0 aa45 	vmov.f32	s21, s10
 80124fa:	3604      	adds	r6, #4
 80124fc:	930b      	str	r3, [sp, #44]	; 0x2c
 80124fe:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8012500:	2b00      	cmp	r3, #0
 8012502:	dc03      	bgt.n	801250c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x78>
 8012504:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8012506:	2b00      	cmp	r3, #0
 8012508:	f340 8215 	ble.w	8012936 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4a2>
 801250c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801250e:	2b00      	cmp	r3, #0
 8012510:	f340 8102 	ble.w	8012718 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x284>
 8012514:	ea5f 4229 	movs.w	r2, r9, asr #16
 8012518:	ea4f 4328 	mov.w	r3, r8, asr #16
 801251c:	d42c      	bmi.n	8012578 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe4>
 801251e:	1c51      	adds	r1, r2, #1
 8012520:	428c      	cmp	r4, r1
 8012522:	dd2c      	ble.n	801257e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xea>
 8012524:	2b00      	cmp	r3, #0
 8012526:	db2a      	blt.n	801257e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xea>
 8012528:	980a      	ldr	r0, [sp, #40]	; 0x28
 801252a:	1c59      	adds	r1, r3, #1
 801252c:	4288      	cmp	r0, r1
 801252e:	dd26      	ble.n	801257e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xea>
 8012530:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8012532:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 8012534:	3b01      	subs	r3, #1
 8012536:	fb02 9203 	mla	r2, r2, r3, r9
 801253a:	1412      	asrs	r2, r2, #16
 801253c:	d429      	bmi.n	8012592 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfe>
 801253e:	3201      	adds	r2, #1
 8012540:	4294      	cmp	r4, r2
 8012542:	dd26      	ble.n	8012592 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfe>
 8012544:	9a30      	ldr	r2, [sp, #192]	; 0xc0
 8012546:	fb02 8303 	mla	r3, r2, r3, r8
 801254a:	141b      	asrs	r3, r3, #16
 801254c:	d421      	bmi.n	8012592 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfe>
 801254e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8012550:	3301      	adds	r3, #1
 8012552:	429a      	cmp	r2, r3
 8012554:	dd1d      	ble.n	8012592 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfe>
 8012556:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 801255a:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
 801255e:	f8cd a03c 	str.w	sl, [sp, #60]	; 0x3c
 8012562:	9312      	str	r3, [sp, #72]	; 0x48
 8012564:	f1be 0f00 	cmp.w	lr, #0
 8012568:	f300 8138 	bgt.w	80127dc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x348>
 801256c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801256e:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8012572:	eb0a 0a45 	add.w	sl, sl, r5, lsl #1
 8012576:	e0d1      	b.n	801271c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x288>
 8012578:	1c51      	adds	r1, r2, #1
 801257a:	f040 80c3 	bne.w	8012704 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x270>
 801257e:	42a2      	cmp	r2, r4
 8012580:	f280 80c0 	bge.w	8012704 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x270>
 8012584:	1c5f      	adds	r7, r3, #1
 8012586:	f2c0 80bd 	blt.w	8012704 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x270>
 801258a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801258c:	4293      	cmp	r3, r2
 801258e:	f280 80b9 	bge.w	8012704 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x270>
 8012592:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 8012596:	4657      	mov	r7, sl
 8012598:	f1bb 0f00 	cmp.w	fp, #0
 801259c:	dde6      	ble.n	801256c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xd8>
 801259e:	ea5f 4229 	movs.w	r2, r9, asr #16
 80125a2:	ea4f 4328 	mov.w	r3, r8, asr #16
 80125a6:	f3c9 3003 	ubfx	r0, r9, #12, #4
 80125aa:	f3c8 3103 	ubfx	r1, r8, #12, #4
 80125ae:	f100 80fc 	bmi.w	80127aa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x316>
 80125b2:	f102 0c01 	add.w	ip, r2, #1
 80125b6:	4564      	cmp	r4, ip
 80125b8:	f340 80f9 	ble.w	80127ae <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x31a>
 80125bc:	2b00      	cmp	r3, #0
 80125be:	f2c0 80f6 	blt.w	80127ae <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x31a>
 80125c2:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 80125c4:	f103 0c01 	add.w	ip, r3, #1
 80125c8:	4565      	cmp	r5, ip
 80125ca:	f340 80f0 	ble.w	80127ae <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x31a>
 80125ce:	fb03 2304 	mla	r3, r3, r4, r2
 80125d2:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 80125d4:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 80125d6:	441a      	add	r2, r3
 80125d8:	5ceb      	ldrb	r3, [r5, r3]
 80125da:	f836 e013 	ldrh.w	lr, [r6, r3, lsl #1]
 80125de:	2800      	cmp	r0, #0
 80125e0:	f000 80db 	beq.w	801279a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x306>
 80125e4:	7853      	ldrb	r3, [r2, #1]
 80125e6:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 80125ea:	9313      	str	r3, [sp, #76]	; 0x4c
 80125ec:	b141      	cbz	r1, 8012600 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x16c>
 80125ee:	1913      	adds	r3, r2, r4
 80125f0:	5d12      	ldrb	r2, [r2, r4]
 80125f2:	785b      	ldrb	r3, [r3, #1]
 80125f4:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 80125f8:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 80125fc:	9210      	str	r2, [sp, #64]	; 0x40
 80125fe:	9314      	str	r3, [sp, #80]	; 0x50
 8012600:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8012602:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8012604:	fb10 f201 	smulbb	r2, r0, r1
 8012608:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801260c:	10d2      	asrs	r2, r2, #3
 801260e:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8012612:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8012616:	ea4c 0c03 	orr.w	ip, ip, r3
 801261a:	ebc2 0340 	rsb	r3, r2, r0, lsl #1
 801261e:	930f      	str	r3, [sp, #60]	; 0x3c
 8012620:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8012622:	041b      	lsls	r3, r3, #16
 8012624:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 8012628:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801262c:	432b      	orrs	r3, r5
 801262e:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8012630:	4353      	muls	r3, r2
 8012632:	fb05 330c 	mla	r3, r5, ip, r3
 8012636:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 801263a:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801263e:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8012642:	ea4c 0e0e 	orr.w	lr, ip, lr
 8012646:	f1c1 0c10 	rsb	ip, r1, #16
 801264a:	ebac 0c00 	sub.w	ip, ip, r0
 801264e:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 8012652:	fb0c 3c0e 	mla	ip, ip, lr, r3
 8012656:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8012658:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 801265a:	0418      	lsls	r0, r3, #16
 801265c:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8012660:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8012664:	4318      	orrs	r0, r3
 8012666:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 801266a:	fb02 c200 	mla	r2, r2, r0, ip
 801266e:	0d53      	lsrs	r3, r2, #21
 8012670:	0952      	lsrs	r2, r2, #5
 8012672:	f8b7 c000 	ldrh.w	ip, [r7]
 8012676:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801267a:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801267e:	431a      	orrs	r2, r3
 8012680:	b292      	uxth	r2, r2
 8012682:	ea4f 212c 	mov.w	r1, ip, asr #8
 8012686:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 801268a:	1210      	asrs	r0, r2, #8
 801268c:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8012690:	fb11 f105 	smulbb	r1, r1, r5
 8012694:	ea4f 0eec 	mov.w	lr, ip, asr #3
 8012698:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801269c:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 80126a0:	fb00 1003 	mla	r0, r0, r3, r1
 80126a4:	fa5f fc8c 	uxtb.w	ip, ip
 80126a8:	10d1      	asrs	r1, r2, #3
 80126aa:	00d2      	lsls	r2, r2, #3
 80126ac:	fb1c fc05 	smulbb	ip, ip, r5
 80126b0:	b2d2      	uxtb	r2, r2
 80126b2:	fb02 c203 	mla	r2, r2, r3, ip
 80126b6:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 80126ba:	b280      	uxth	r0, r0
 80126bc:	b292      	uxth	r2, r2
 80126be:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 80126c2:	fb1e fe05 	smulbb	lr, lr, r5
 80126c6:	fb01 e103 	mla	r1, r1, r3, lr
 80126ca:	f102 0c01 	add.w	ip, r2, #1
 80126ce:	1c43      	adds	r3, r0, #1
 80126d0:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 80126d4:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 80126d8:	b289      	uxth	r1, r1
 80126da:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 80126de:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 80126e2:	4313      	orrs	r3, r2
 80126e4:	1c4a      	adds	r2, r1, #1
 80126e6:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 80126ea:	0949      	lsrs	r1, r1, #5
 80126ec:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80126f0:	430b      	orrs	r3, r1
 80126f2:	803b      	strh	r3, [r7, #0]
 80126f4:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
 80126f6:	4499      	add	r9, r3
 80126f8:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 80126fa:	3702      	adds	r7, #2
 80126fc:	4498      	add	r8, r3
 80126fe:	f10b 3bff 	add.w	fp, fp, #4294967295
 8012702:	e749      	b.n	8012598 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x104>
 8012704:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
 8012706:	4499      	add	r9, r3
 8012708:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801270a:	4498      	add	r8, r3
 801270c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801270e:	3b01      	subs	r3, #1
 8012710:	9309      	str	r3, [sp, #36]	; 0x24
 8012712:	f10a 0a02 	add.w	sl, sl, #2
 8012716:	e6f9      	b.n	801250c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x78>
 8012718:	f47f af0a 	bne.w	8012530 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9c>
 801271c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801271e:	2b00      	cmp	r3, #0
 8012720:	f340 8109 	ble.w	8012936 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4a2>
 8012724:	ee3a aa2b 	vadd.f32	s20, s20, s23
 8012728:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801272c:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 8012730:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8012732:	ee79 9a8b 	vadd.f32	s19, s19, s22
 8012736:	ee39 9a2a 	vadd.f32	s18, s18, s21
 801273a:	ee29 7aa7 	vmul.f32	s14, s19, s15
 801273e:	eef0 6a48 	vmov.f32	s13, s16
 8012742:	ee69 7a27 	vmul.f32	s15, s18, s15
 8012746:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801274a:	ee37 8a48 	vsub.f32	s16, s14, s16
 801274e:	ee16 9a90 	vmov	r9, s13
 8012752:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8012756:	eef0 6a68 	vmov.f32	s13, s17
 801275a:	ee77 8ae8 	vsub.f32	s17, s15, s17
 801275e:	ee18 2a10 	vmov	r2, s16
 8012762:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8012766:	fb92 f3f3 	sdiv	r3, r2, r3
 801276a:	ee18 2a90 	vmov	r2, s17
 801276e:	932f      	str	r3, [sp, #188]	; 0xbc
 8012770:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8012772:	fb92 f3f3 	sdiv	r3, r2, r3
 8012776:	9330      	str	r3, [sp, #192]	; 0xc0
 8012778:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801277a:	9a17      	ldr	r2, [sp, #92]	; 0x5c
 801277c:	3b01      	subs	r3, #1
 801277e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8012782:	930d      	str	r3, [sp, #52]	; 0x34
 8012784:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8012786:	bf08      	it	eq
 8012788:	4613      	moveq	r3, r2
 801278a:	ee16 8a90 	vmov	r8, s13
 801278e:	9309      	str	r3, [sp, #36]	; 0x24
 8012790:	eef0 8a67 	vmov.f32	s17, s15
 8012794:	eeb0 8a47 	vmov.f32	s16, s14
 8012798:	e6b1      	b.n	80124fe <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6a>
 801279a:	2900      	cmp	r1, #0
 801279c:	f43f af30 	beq.w	8012600 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x16c>
 80127a0:	5d13      	ldrb	r3, [r2, r4]
 80127a2:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 80127a6:	9310      	str	r3, [sp, #64]	; 0x40
 80127a8:	e72a      	b.n	8012600 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x16c>
 80127aa:	1c55      	adds	r5, r2, #1
 80127ac:	d1a2      	bne.n	80126f4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x260>
 80127ae:	4294      	cmp	r4, r2
 80127b0:	dda0      	ble.n	80126f4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x260>
 80127b2:	1c5d      	adds	r5, r3, #1
 80127b4:	db9e      	blt.n	80126f4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x260>
 80127b6:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 80127b8:	429d      	cmp	r5, r3
 80127ba:	dd9b      	ble.n	80126f4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x260>
 80127bc:	e9cd 3003 	strd	r3, r0, [sp, #12]
 80127c0:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 80127c2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80127c4:	9202      	str	r2, [sp, #8]
 80127c6:	e9cd 1505 	strd	r1, r5, [sp, #20]
 80127ca:	e9cd 4300 	strd	r4, r3, [sp]
 80127ce:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 80127d0:	9818      	ldr	r0, [sp, #96]	; 0x60
 80127d2:	4633      	mov	r3, r6
 80127d4:	4639      	mov	r1, r7
 80127d6:	f7ff fd7f 	bl	80122d8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>
 80127da:	e78b      	b.n	80126f4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x260>
 80127dc:	ea4f 4329 	mov.w	r3, r9, asr #16
 80127e0:	ea4f 4228 	mov.w	r2, r8, asr #16
 80127e4:	fb04 3202 	mla	r2, r4, r2, r3
 80127e8:	990c      	ldr	r1, [sp, #48]	; 0x30
 80127ea:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80127ec:	4413      	add	r3, r2
 80127ee:	5c8a      	ldrb	r2, [r1, r2]
 80127f0:	f3c9 3c03 	ubfx	ip, r9, #12, #4
 80127f4:	f3c8 3003 	ubfx	r0, r8, #12, #4
 80127f8:	f836 1012 	ldrh.w	r1, [r6, r2, lsl #1]
 80127fc:	f1bc 0f00 	cmp.w	ip, #0
 8012800:	f000 8091 	beq.w	8012926 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x492>
 8012804:	785a      	ldrb	r2, [r3, #1]
 8012806:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 801280a:	9215      	str	r2, [sp, #84]	; 0x54
 801280c:	b140      	cbz	r0, 8012820 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x38c>
 801280e:	191a      	adds	r2, r3, r4
 8012810:	5d1b      	ldrb	r3, [r3, r4]
 8012812:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8012816:	9311      	str	r3, [sp, #68]	; 0x44
 8012818:	7853      	ldrb	r3, [r2, #1]
 801281a:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801281e:	9316      	str	r3, [sp, #88]	; 0x58
 8012820:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8012822:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8012824:	fb1c f200 	smulbb	r2, ip, r0
 8012828:	041f      	lsls	r7, r3, #16
 801282a:	10d2      	asrs	r2, r2, #3
 801282c:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8012830:	f007 67fc 	and.w	r7, r7, #132120576	; 0x7e00000
 8012834:	431f      	orrs	r7, r3
 8012836:	ebc2 034c 	rsb	r3, r2, ip, lsl #1
 801283a:	9319      	str	r3, [sp, #100]	; 0x64
 801283c:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801283e:	041b      	lsls	r3, r3, #16
 8012840:	f425 6bfc 	bic.w	fp, r5, #2016	; 0x7e0
 8012844:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8012848:	ea43 030b 	orr.w	r3, r3, fp
 801284c:	9d19      	ldr	r5, [sp, #100]	; 0x64
 801284e:	4353      	muls	r3, r2
 8012850:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8012854:	fb05 3707 	mla	r7, r5, r7, r3
 8012858:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801285c:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
 8012860:	ea43 0b01 	orr.w	fp, r3, r1
 8012864:	f1c0 0110 	rsb	r1, r0, #16
 8012868:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801286a:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 801286c:	eba1 0c0c 	sub.w	ip, r1, ip
 8012870:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 8012874:	fb0c 770b 	mla	r7, ip, fp, r7
 8012878:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801287c:	f423 6bfc 	bic.w	fp, r3, #2016	; 0x7e0
 8012880:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8012884:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 8012888:	ea4c 0c0b 	orr.w	ip, ip, fp
 801288c:	fb02 770c 	mla	r7, r2, ip, r7
 8012890:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8012892:	0d79      	lsrs	r1, r7, #21
 8012894:	8812      	ldrh	r2, [r2, #0]
 8012896:	097f      	lsrs	r7, r7, #5
 8012898:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801289c:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 80128a0:	430f      	orrs	r7, r1
 80128a2:	1211      	asrs	r1, r2, #8
 80128a4:	b2bb      	uxth	r3, r7
 80128a6:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 80128aa:	fb11 f105 	smulbb	r1, r1, r5
 80128ae:	1218      	asrs	r0, r3, #8
 80128b0:	9d12      	ldr	r5, [sp, #72]	; 0x48
 80128b2:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 80128b6:	fb00 1005 	mla	r0, r0, r5, r1
 80128ba:	10d7      	asrs	r7, r2, #3
 80128bc:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 80128be:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 80128c2:	fb17 f705 	smulbb	r7, r7, r5
 80128c6:	10d9      	asrs	r1, r3, #3
 80128c8:	9d12      	ldr	r5, [sp, #72]	; 0x48
 80128ca:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 80128ce:	fb01 7105 	mla	r1, r1, r5, r7
 80128d2:	00d2      	lsls	r2, r2, #3
 80128d4:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 80128d6:	b2d2      	uxtb	r2, r2
 80128d8:	fb12 f205 	smulbb	r2, r2, r5
 80128dc:	00db      	lsls	r3, r3, #3
 80128de:	9d12      	ldr	r5, [sp, #72]	; 0x48
 80128e0:	b2db      	uxtb	r3, r3
 80128e2:	b280      	uxth	r0, r0
 80128e4:	fb03 2305 	mla	r3, r3, r5, r2
 80128e8:	b29b      	uxth	r3, r3
 80128ea:	b289      	uxth	r1, r1
 80128ec:	1c42      	adds	r2, r0, #1
 80128ee:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 80128f2:	1c4f      	adds	r7, r1, #1
 80128f4:	1c5a      	adds	r2, r3, #1
 80128f6:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 80128fa:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 80128fe:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 8012902:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8012906:	0949      	lsrs	r1, r1, #5
 8012908:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801290a:	4310      	orrs	r0, r2
 801290c:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8012910:	4308      	orrs	r0, r1
 8012912:	f823 0b02 	strh.w	r0, [r3], #2
 8012916:	930f      	str	r3, [sp, #60]	; 0x3c
 8012918:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
 801291a:	4499      	add	r9, r3
 801291c:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801291e:	f10e 3eff 	add.w	lr, lr, #4294967295
 8012922:	4498      	add	r8, r3
 8012924:	e61e      	b.n	8012564 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xd0>
 8012926:	2800      	cmp	r0, #0
 8012928:	f43f af7a 	beq.w	8012820 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x38c>
 801292c:	5d1b      	ldrb	r3, [r3, r4]
 801292e:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8012932:	9311      	str	r3, [sp, #68]	; 0x44
 8012934:	e774      	b.n	8012820 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x38c>
 8012936:	b01b      	add	sp, #108	; 0x6c
 8012938:	ecbd 8b08 	vpop	{d8-d11}
 801293c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08012940 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 8012940:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8012944:	e9dd 560a 	ldrd	r5, r6, [sp, #40]	; 0x28
 8012948:	f9bd e020 	ldrsh.w	lr, [sp, #32]
 801294c:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 8012950:	f89d 4030 	ldrb.w	r4, [sp, #48]	; 0x30
 8012954:	f89d c034 	ldrb.w	ip, [sp, #52]	; 0x34
 8012958:	8808      	ldrh	r0, [r1, #0]
 801295a:	fb06 570e 	mla	r7, r6, lr, r5
 801295e:	2e00      	cmp	r6, #0
 8012960:	eb02 0807 	add.w	r8, r2, r7
 8012964:	db38      	blt.n	80129d8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x98>
 8012966:	45b1      	cmp	r9, r6
 8012968:	dd36      	ble.n	80129d8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x98>
 801296a:	2d00      	cmp	r5, #0
 801296c:	db32      	blt.n	80129d4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x94>
 801296e:	45ae      	cmp	lr, r5
 8012970:	dd30      	ble.n	80129d4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x94>
 8012972:	5dd2      	ldrb	r2, [r2, r7]
 8012974:	f833 7012 	ldrh.w	r7, [r3, r2, lsl #1]
 8012978:	1c6a      	adds	r2, r5, #1
 801297a:	d430      	bmi.n	80129de <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x9e>
 801297c:	4596      	cmp	lr, r2
 801297e:	dd2e      	ble.n	80129de <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x9e>
 8012980:	b36c      	cbz	r4, 80129de <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x9e>
 8012982:	f898 2001 	ldrb.w	r2, [r8, #1]
 8012986:	f833 2012 	ldrh.w	r2, [r3, r2, lsl #1]
 801298a:	3601      	adds	r6, #1
 801298c:	d42b      	bmi.n	80129e6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xa6>
 801298e:	45b1      	cmp	r9, r6
 8012990:	dd29      	ble.n	80129e6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xa6>
 8012992:	f1bc 0f00 	cmp.w	ip, #0
 8012996:	d028      	beq.n	80129ea <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xaa>
 8012998:	2d00      	cmp	r5, #0
 801299a:	db22      	blt.n	80129e2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xa2>
 801299c:	45ae      	cmp	lr, r5
 801299e:	dd20      	ble.n	80129e2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xa2>
 80129a0:	f818 600e 	ldrb.w	r6, [r8, lr]
 80129a4:	f833 6016 	ldrh.w	r6, [r3, r6, lsl #1]
 80129a8:	3501      	adds	r5, #1
 80129aa:	d407      	bmi.n	80129bc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7c>
 80129ac:	45ae      	cmp	lr, r5
 80129ae:	dd05      	ble.n	80129bc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7c>
 80129b0:	b134      	cbz	r4, 80129c0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 80129b2:	44c6      	add	lr, r8
 80129b4:	f89e 0001 	ldrb.w	r0, [lr, #1]
 80129b8:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 80129bc:	2c0f      	cmp	r4, #15
 80129be:	d802      	bhi.n	80129c6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x86>
 80129c0:	f1bc 0f0f 	cmp.w	ip, #15
 80129c4:	d914      	bls.n	80129f0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xb0>
 80129c6:	4b26      	ldr	r3, [pc, #152]	; (8012a60 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x120>)
 80129c8:	4a26      	ldr	r2, [pc, #152]	; (8012a64 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x124>)
 80129ca:	4827      	ldr	r0, [pc, #156]	; (8012a68 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x128>)
 80129cc:	f240 11ef 	movw	r1, #495	; 0x1ef
 80129d0:	f006 fd1c 	bl	801940c <__assert_func>
 80129d4:	4607      	mov	r7, r0
 80129d6:	e7cf      	b.n	8012978 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x38>
 80129d8:	4602      	mov	r2, r0
 80129da:	4607      	mov	r7, r0
 80129dc:	e7d5      	b.n	801298a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4a>
 80129de:	4602      	mov	r2, r0
 80129e0:	e7d3      	b.n	801298a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4a>
 80129e2:	4606      	mov	r6, r0
 80129e4:	e7e0      	b.n	80129a8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x68>
 80129e6:	4606      	mov	r6, r0
 80129e8:	e7e8      	b.n	80129bc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7c>
 80129ea:	2c0f      	cmp	r4, #15
 80129ec:	d8eb      	bhi.n	80129c6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x86>
 80129ee:	4606      	mov	r6, r0
 80129f0:	043d      	lsls	r5, r7, #16
 80129f2:	fb14 f30c 	smulbb	r3, r4, ip
 80129f6:	f005 65fc 	and.w	r5, r5, #132120576	; 0x7e00000
 80129fa:	ea4f 4e02 	mov.w	lr, r2, lsl #16
 80129fe:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8012a02:	10db      	asrs	r3, r3, #3
 8012a04:	432f      	orrs	r7, r5
 8012a06:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8012a0a:	f1cc 0510 	rsb	r5, ip, #16
 8012a0e:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8012a12:	1b2d      	subs	r5, r5, r4
 8012a14:	ea4e 0202 	orr.w	r2, lr, r2
 8012a18:	ebc3 0444 	rsb	r4, r3, r4, lsl #1
 8012a1c:	eb03 0545 	add.w	r5, r3, r5, lsl #1
 8012a20:	4354      	muls	r4, r2
 8012a22:	fb05 4507 	mla	r5, r5, r7, r4
 8012a26:	0404      	lsls	r4, r0, #16
 8012a28:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8012a2c:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8012a30:	4320      	orrs	r0, r4
 8012a32:	fb03 5400 	mla	r4, r3, r0, r5
 8012a36:	0430      	lsls	r0, r6, #16
 8012a38:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8012a3c:	f426 66fc 	bic.w	r6, r6, #2016	; 0x7e0
 8012a40:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 8012a44:	4330      	orrs	r0, r6
 8012a46:	fb03 4000 	mla	r0, r3, r0, r4
 8012a4a:	0d43      	lsrs	r3, r0, #21
 8012a4c:	0940      	lsrs	r0, r0, #5
 8012a4e:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8012a52:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8012a56:	4318      	orrs	r0, r3
 8012a58:	8008      	strh	r0, [r1, #0]
 8012a5a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8012a5e:	bf00      	nop
 8012a60:	0801d135 	.word	0x0801d135
 8012a64:	0801d736 	.word	0x0801d736
 8012a68:	0801d1bd 	.word	0x0801d1bd

08012a6c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 8012a6c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012a70:	ed2d 8b0a 	vpush	{d8-d12}
 8012a74:	b095      	sub	sp, #84	; 0x54
 8012a76:	e9dd 9629 	ldrd	r9, r6, [sp, #164]	; 0xa4
 8012a7a:	9f2d      	ldr	r7, [sp, #180]	; 0xb4
 8012a7c:	9306      	str	r3, [sp, #24]
 8012a7e:	f9bd 30c4 	ldrsh.w	r3, [sp, #196]	; 0xc4
 8012a82:	9109      	str	r1, [sp, #36]	; 0x24
 8012a84:	9307      	str	r3, [sp, #28]
 8012a86:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	; 0xb8
 8012a8a:	9012      	str	r0, [sp, #72]	; 0x48
 8012a8c:	6878      	ldr	r0, [r7, #4]
 8012a8e:	9211      	str	r2, [sp, #68]	; 0x44
 8012a90:	9a32      	ldr	r2, [sp, #200]	; 0xc8
 8012a92:	f9bd 40c0 	ldrsh.w	r4, [sp, #192]	; 0xc0
 8012a96:	fb00 1303 	mla	r3, r0, r3, r1
 8012a9a:	6839      	ldr	r1, [r7, #0]
 8012a9c:	6857      	ldr	r7, [r2, #4]
 8012a9e:	eb01 0a43 	add.w	sl, r1, r3, lsl #1
 8012aa2:	6813      	ldr	r3, [r2, #0]
 8012aa4:	9308      	str	r3, [sp, #32]
 8012aa6:	eeb0 aa40 	vmov.f32	s20, s0
 8012aaa:	eef0 9a60 	vmov.f32	s19, s1
 8012aae:	eeb0 9a41 	vmov.f32	s18, s2
 8012ab2:	eeb0 8a62 	vmov.f32	s16, s5
 8012ab6:	eef0 8a43 	vmov.f32	s17, s6
 8012aba:	eeb0 ca44 	vmov.f32	s24, s8
 8012abe:	eef0 ba64 	vmov.f32	s23, s9
 8012ac2:	eeb0 ba45 	vmov.f32	s22, s10
 8012ac6:	3704      	adds	r7, #4
 8012ac8:	eef7 aa00 	vmov.f32	s21, #112	; 0x3f800000  1.0
 8012acc:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8012ace:	2b00      	cmp	r3, #0
 8012ad0:	dc03      	bgt.n	8012ada <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6e>
 8012ad2:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8012ad4:	2b00      	cmp	r3, #0
 8012ad6:	f340 819a 	ble.w	8012e0e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3a2>
 8012ada:	9b06      	ldr	r3, [sp, #24]
 8012adc:	2b00      	cmp	r3, #0
 8012ade:	f340 80c4 	ble.w	8012c6a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1fe>
 8012ae2:	ea5f 4229 	movs.w	r2, r9, asr #16
 8012ae6:	ea4f 4326 	mov.w	r3, r6, asr #16
 8012aea:	d429      	bmi.n	8012b40 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xd4>
 8012aec:	1c51      	adds	r1, r2, #1
 8012aee:	428c      	cmp	r4, r1
 8012af0:	dd29      	ble.n	8012b46 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xda>
 8012af2:	2b00      	cmp	r3, #0
 8012af4:	db27      	blt.n	8012b46 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xda>
 8012af6:	9807      	ldr	r0, [sp, #28]
 8012af8:	1c59      	adds	r1, r3, #1
 8012afa:	4288      	cmp	r0, r1
 8012afc:	dd23      	ble.n	8012b46 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xda>
 8012afe:	9b06      	ldr	r3, [sp, #24]
 8012b00:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 8012b02:	3b01      	subs	r3, #1
 8012b04:	fb02 9203 	mla	r2, r2, r3, r9
 8012b08:	1412      	asrs	r2, r2, #16
 8012b0a:	d425      	bmi.n	8012b58 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xec>
 8012b0c:	3201      	adds	r2, #1
 8012b0e:	4294      	cmp	r4, r2
 8012b10:	dd22      	ble.n	8012b58 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xec>
 8012b12:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 8012b14:	fb02 6303 	mla	r3, r2, r3, r6
 8012b18:	141b      	asrs	r3, r3, #16
 8012b1a:	d41d      	bmi.n	8012b58 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xec>
 8012b1c:	9a07      	ldr	r2, [sp, #28]
 8012b1e:	3301      	adds	r3, #1
 8012b20:	429a      	cmp	r2, r3
 8012b22:	dd19      	ble.n	8012b58 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xec>
 8012b24:	f8dd 8018 	ldr.w	r8, [sp, #24]
 8012b28:	f8cd a030 	str.w	sl, [sp, #48]	; 0x30
 8012b2c:	f1b8 0f00 	cmp.w	r8, #0
 8012b30:	f300 80f8 	bgt.w	8012d24 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2b8>
 8012b34:	9b06      	ldr	r3, [sp, #24]
 8012b36:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8012b3a:	eb0a 0a45 	add.w	sl, sl, r5, lsl #1
 8012b3e:	e096      	b.n	8012c6e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x202>
 8012b40:	1c51      	adds	r1, r2, #1
 8012b42:	f040 8088 	bne.w	8012c56 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1ea>
 8012b46:	42a2      	cmp	r2, r4
 8012b48:	f280 8085 	bge.w	8012c56 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1ea>
 8012b4c:	1c5a      	adds	r2, r3, #1
 8012b4e:	f2c0 8082 	blt.w	8012c56 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1ea>
 8012b52:	9a07      	ldr	r2, [sp, #28]
 8012b54:	4293      	cmp	r3, r2
 8012b56:	da7e      	bge.n	8012c56 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1ea>
 8012b58:	f8dd b018 	ldr.w	fp, [sp, #24]
 8012b5c:	46d0      	mov	r8, sl
 8012b5e:	f1bb 0f00 	cmp.w	fp, #0
 8012b62:	dde7      	ble.n	8012b34 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xc8>
 8012b64:	ea5f 4229 	movs.w	r2, r9, asr #16
 8012b68:	ea4f 4326 	mov.w	r3, r6, asr #16
 8012b6c:	f3c9 3003 	ubfx	r0, r9, #12, #4
 8012b70:	f3c6 3103 	ubfx	r1, r6, #12, #4
 8012b74:	f100 80c0 	bmi.w	8012cf8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x28c>
 8012b78:	f102 0c01 	add.w	ip, r2, #1
 8012b7c:	4564      	cmp	r4, ip
 8012b7e:	f340 80bd 	ble.w	8012cfc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x290>
 8012b82:	2b00      	cmp	r3, #0
 8012b84:	f2c0 80ba 	blt.w	8012cfc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x290>
 8012b88:	9d07      	ldr	r5, [sp, #28]
 8012b8a:	f103 0c01 	add.w	ip, r3, #1
 8012b8e:	4565      	cmp	r5, ip
 8012b90:	f340 80b4 	ble.w	8012cfc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x290>
 8012b94:	fb03 2304 	mla	r3, r3, r4, r2
 8012b98:	9d08      	ldr	r5, [sp, #32]
 8012b9a:	9a08      	ldr	r2, [sp, #32]
 8012b9c:	441a      	add	r2, r3
 8012b9e:	5ceb      	ldrb	r3, [r5, r3]
 8012ba0:	f837 e013 	ldrh.w	lr, [r7, r3, lsl #1]
 8012ba4:	2800      	cmp	r0, #0
 8012ba6:	f000 809f 	beq.w	8012ce8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x27c>
 8012baa:	7853      	ldrb	r3, [r2, #1]
 8012bac:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8012bb0:	930d      	str	r3, [sp, #52]	; 0x34
 8012bb2:	b141      	cbz	r1, 8012bc6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x15a>
 8012bb4:	1913      	adds	r3, r2, r4
 8012bb6:	5d12      	ldrb	r2, [r2, r4]
 8012bb8:	785b      	ldrb	r3, [r3, #1]
 8012bba:	f837 2012 	ldrh.w	r2, [r7, r2, lsl #1]
 8012bbe:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8012bc2:	920a      	str	r2, [sp, #40]	; 0x28
 8012bc4:	930e      	str	r3, [sp, #56]	; 0x38
 8012bc6:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8012bc8:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8012bca:	fb10 f201 	smulbb	r2, r0, r1
 8012bce:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8012bd2:	10d2      	asrs	r2, r2, #3
 8012bd4:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8012bd8:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8012bdc:	ea4c 0c03 	orr.w	ip, ip, r3
 8012be0:	ebc2 0340 	rsb	r3, r2, r0, lsl #1
 8012be4:	930c      	str	r3, [sp, #48]	; 0x30
 8012be6:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8012be8:	041b      	lsls	r3, r3, #16
 8012bea:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 8012bee:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8012bf2:	432b      	orrs	r3, r5
 8012bf4:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8012bf6:	4353      	muls	r3, r2
 8012bf8:	fb05 330c 	mla	r3, r5, ip, r3
 8012bfc:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 8012c00:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8012c04:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8012c08:	ea4c 0e0e 	orr.w	lr, ip, lr
 8012c0c:	f1c1 0c10 	rsb	ip, r1, #16
 8012c10:	ebac 0c00 	sub.w	ip, ip, r0
 8012c14:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 8012c18:	fb0c 3c0e 	mla	ip, ip, lr, r3
 8012c1c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8012c1e:	0418      	lsls	r0, r3, #16
 8012c20:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8012c24:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8012c28:	4318      	orrs	r0, r3
 8012c2a:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 8012c2e:	fb02 c200 	mla	r2, r2, r0, ip
 8012c32:	0d53      	lsrs	r3, r2, #21
 8012c34:	0952      	lsrs	r2, r2, #5
 8012c36:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8012c3a:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8012c3e:	431a      	orrs	r2, r3
 8012c40:	f8a8 2000 	strh.w	r2, [r8]
 8012c44:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8012c46:	4499      	add	r9, r3
 8012c48:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8012c4a:	f108 0802 	add.w	r8, r8, #2
 8012c4e:	441e      	add	r6, r3
 8012c50:	f10b 3bff 	add.w	fp, fp, #4294967295
 8012c54:	e783      	b.n	8012b5e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf2>
 8012c56:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8012c58:	4499      	add	r9, r3
 8012c5a:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8012c5c:	441e      	add	r6, r3
 8012c5e:	9b06      	ldr	r3, [sp, #24]
 8012c60:	3b01      	subs	r3, #1
 8012c62:	9306      	str	r3, [sp, #24]
 8012c64:	f10a 0a02 	add.w	sl, sl, #2
 8012c68:	e737      	b.n	8012ada <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6e>
 8012c6a:	f47f af48 	bne.w	8012afe <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x92>
 8012c6e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8012c70:	2b00      	cmp	r3, #0
 8012c72:	f340 80cc 	ble.w	8012e0e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3a2>
 8012c76:	ee3a aa0c 	vadd.f32	s20, s20, s24
 8012c7a:	ee79 9aab 	vadd.f32	s19, s19, s23
 8012c7e:	eeca 7a8a 	vdiv.f32	s15, s21, s20
 8012c82:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8012c84:	ee39 9a0b 	vadd.f32	s18, s18, s22
 8012c88:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8012c8c:	eef0 6a48 	vmov.f32	s13, s16
 8012c90:	ee69 7a27 	vmul.f32	s15, s18, s15
 8012c94:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8012c98:	ee37 8a48 	vsub.f32	s16, s14, s16
 8012c9c:	ee16 9a90 	vmov	r9, s13
 8012ca0:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8012ca4:	eef0 6a68 	vmov.f32	s13, s17
 8012ca8:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8012cac:	ee18 2a10 	vmov	r2, s16
 8012cb0:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8012cb4:	fb92 f3f3 	sdiv	r3, r2, r3
 8012cb8:	ee18 2a90 	vmov	r2, s17
 8012cbc:	932b      	str	r3, [sp, #172]	; 0xac
 8012cbe:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8012cc0:	fb92 f3f3 	sdiv	r3, r2, r3
 8012cc4:	932c      	str	r3, [sp, #176]	; 0xb0
 8012cc6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8012cc8:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8012cca:	3b01      	subs	r3, #1
 8012ccc:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8012cd0:	9309      	str	r3, [sp, #36]	; 0x24
 8012cd2:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8012cd4:	bf08      	it	eq
 8012cd6:	4613      	moveq	r3, r2
 8012cd8:	ee16 6a90 	vmov	r6, s13
 8012cdc:	9306      	str	r3, [sp, #24]
 8012cde:	eef0 8a67 	vmov.f32	s17, s15
 8012ce2:	eeb0 8a47 	vmov.f32	s16, s14
 8012ce6:	e6f1      	b.n	8012acc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x60>
 8012ce8:	2900      	cmp	r1, #0
 8012cea:	f43f af6c 	beq.w	8012bc6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x15a>
 8012cee:	5d13      	ldrb	r3, [r2, r4]
 8012cf0:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8012cf4:	930a      	str	r3, [sp, #40]	; 0x28
 8012cf6:	e766      	b.n	8012bc6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x15a>
 8012cf8:	1c55      	adds	r5, r2, #1
 8012cfa:	d1a3      	bne.n	8012c44 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d8>
 8012cfc:	4294      	cmp	r4, r2
 8012cfe:	dda1      	ble.n	8012c44 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d8>
 8012d00:	1c5d      	adds	r5, r3, #1
 8012d02:	db9f      	blt.n	8012c44 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d8>
 8012d04:	9d07      	ldr	r5, [sp, #28]
 8012d06:	429d      	cmp	r5, r3
 8012d08:	dd9c      	ble.n	8012c44 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d8>
 8012d0a:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8012d0e:	e9cd 2302 	strd	r2, r3, [sp, #8]
 8012d12:	e9cd 4500 	strd	r4, r5, [sp]
 8012d16:	463b      	mov	r3, r7
 8012d18:	9a08      	ldr	r2, [sp, #32]
 8012d1a:	9812      	ldr	r0, [sp, #72]	; 0x48
 8012d1c:	4641      	mov	r1, r8
 8012d1e:	f7ff fe0f 	bl	8012940 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 8012d22:	e78f      	b.n	8012c44 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d8>
 8012d24:	ea4f 4329 	mov.w	r3, r9, asr #16
 8012d28:	1432      	asrs	r2, r6, #16
 8012d2a:	fb04 3202 	mla	r2, r4, r2, r3
 8012d2e:	9908      	ldr	r1, [sp, #32]
 8012d30:	9b08      	ldr	r3, [sp, #32]
 8012d32:	4413      	add	r3, r2
 8012d34:	5c8a      	ldrb	r2, [r1, r2]
 8012d36:	f3c9 3e03 	ubfx	lr, r9, #12, #4
 8012d3a:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8012d3e:	f837 1012 	ldrh.w	r1, [r7, r2, lsl #1]
 8012d42:	f1be 0f00 	cmp.w	lr, #0
 8012d46:	d05b      	beq.n	8012e00 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x394>
 8012d48:	785a      	ldrb	r2, [r3, #1]
 8012d4a:	f837 2012 	ldrh.w	r2, [r7, r2, lsl #1]
 8012d4e:	920f      	str	r2, [sp, #60]	; 0x3c
 8012d50:	b140      	cbz	r0, 8012d64 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2f8>
 8012d52:	191a      	adds	r2, r3, r4
 8012d54:	5d1b      	ldrb	r3, [r3, r4]
 8012d56:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8012d5a:	930b      	str	r3, [sp, #44]	; 0x2c
 8012d5c:	7853      	ldrb	r3, [r2, #1]
 8012d5e:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8012d62:	9310      	str	r3, [sp, #64]	; 0x40
 8012d64:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8012d66:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8012d68:	fb1e f200 	smulbb	r2, lr, r0
 8012d6c:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8012d70:	10d2      	asrs	r2, r2, #3
 8012d72:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8012d76:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8012d7a:	ea4c 0c03 	orr.w	ip, ip, r3
 8012d7e:	ebc2 034e 	rsb	r3, r2, lr, lsl #1
 8012d82:	9313      	str	r3, [sp, #76]	; 0x4c
 8012d84:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8012d86:	041b      	lsls	r3, r3, #16
 8012d88:	f425 6bfc 	bic.w	fp, r5, #2016	; 0x7e0
 8012d8c:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8012d90:	ea43 030b 	orr.w	r3, r3, fp
 8012d94:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8012d96:	4353      	muls	r3, r2
 8012d98:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8012d9c:	fb05 3c0c 	mla	ip, r5, ip, r3
 8012da0:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8012da4:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
 8012da8:	ea43 0b01 	orr.w	fp, r3, r1
 8012dac:	f1c0 0110 	rsb	r1, r0, #16
 8012db0:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8012db2:	eba1 0e0e 	sub.w	lr, r1, lr
 8012db6:	eb02 0e4e 	add.w	lr, r2, lr, lsl #1
 8012dba:	fb0e cc0b 	mla	ip, lr, fp, ip
 8012dbe:	ea4f 4b03 	mov.w	fp, r3, lsl #16
 8012dc2:	f423 6efc 	bic.w	lr, r3, #2016	; 0x7e0
 8012dc6:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8012dca:	ea4b 0e0e 	orr.w	lr, fp, lr
 8012dce:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 8012dd2:	fb02 cc0e 	mla	ip, r2, lr, ip
 8012dd6:	ea4f 535c 	mov.w	r3, ip, lsr #21
 8012dda:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8012dde:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8012de2:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8012de6:	ea43 0c0c 	orr.w	ip, r3, ip
 8012dea:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8012dec:	f823 cb02 	strh.w	ip, [r3], #2
 8012df0:	930c      	str	r3, [sp, #48]	; 0x30
 8012df2:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8012df4:	4499      	add	r9, r3
 8012df6:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8012df8:	f108 38ff 	add.w	r8, r8, #4294967295
 8012dfc:	441e      	add	r6, r3
 8012dfe:	e695      	b.n	8012b2c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xc0>
 8012e00:	2800      	cmp	r0, #0
 8012e02:	d0af      	beq.n	8012d64 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2f8>
 8012e04:	5d1b      	ldrb	r3, [r3, r4]
 8012e06:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8012e0a:	930b      	str	r3, [sp, #44]	; 0x2c
 8012e0c:	e7aa      	b.n	8012d64 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2f8>
 8012e0e:	b015      	add	sp, #84	; 0x54
 8012e10:	ecbd 8b0a 	vpop	{d8-d12}
 8012e14:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08012e18 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>:
 8012e18:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012e1c:	468b      	mov	fp, r1
 8012e1e:	8809      	ldrh	r1, [r1, #0]
 8012e20:	b089      	sub	sp, #36	; 0x24
 8012e22:	10cd      	asrs	r5, r1, #3
 8012e24:	e9dd 6414 	ldrd	r6, r4, [sp, #80]	; 0x50
 8012e28:	ea4f 2921 	mov.w	r9, r1, asr #8
 8012e2c:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8012e30:	00c9      	lsls	r1, r1, #3
 8012e32:	9500      	str	r5, [sp, #0]
 8012e34:	b2c9      	uxtb	r1, r1
 8012e36:	f9bd e048 	ldrsh.w	lr, [sp, #72]	; 0x48
 8012e3a:	9101      	str	r1, [sp, #4]
 8012e3c:	9900      	ldr	r1, [sp, #0]
 8012e3e:	9202      	str	r2, [sp, #8]
 8012e40:	fb04 650e 	mla	r5, r4, lr, r6
 8012e44:	f009 09f8 	and.w	r9, r9, #248	; 0xf8
 8012e48:	eb02 0805 	add.w	r8, r2, r5
 8012e4c:	0209      	lsls	r1, r1, #8
 8012e4e:	9a01      	ldr	r2, [sp, #4]
 8012e50:	f9bd a04c 	ldrsh.w	sl, [sp, #76]	; 0x4c
 8012e54:	f89d 7058 	ldrb.w	r7, [sp, #88]	; 0x58
 8012e58:	f89d 005c 	ldrb.w	r0, [sp, #92]	; 0x5c
 8012e5c:	f89d c060 	ldrb.w	ip, [sp, #96]	; 0x60
 8012e60:	ea41 4109 	orr.w	r1, r1, r9, lsl #16
 8012e64:	4311      	orrs	r1, r2
 8012e66:	2c00      	cmp	r4, #0
 8012e68:	9107      	str	r1, [sp, #28]
 8012e6a:	db43      	blt.n	8012ef4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xdc>
 8012e6c:	45a2      	cmp	sl, r4
 8012e6e:	dd41      	ble.n	8012ef4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xdc>
 8012e70:	2e00      	cmp	r6, #0
 8012e72:	db3d      	blt.n	8012ef0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd8>
 8012e74:	45b6      	cmp	lr, r6
 8012e76:	dd3b      	ble.n	8012ef0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd8>
 8012e78:	9a02      	ldr	r2, [sp, #8]
 8012e7a:	5d55      	ldrb	r5, [r2, r5]
 8012e7c:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8012e80:	441d      	add	r5, r3
 8012e82:	1c72      	adds	r2, r6, #1
 8012e84:	d439      	bmi.n	8012efa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xe2>
 8012e86:	4596      	cmp	lr, r2
 8012e88:	dd37      	ble.n	8012efa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xe2>
 8012e8a:	2f00      	cmp	r7, #0
 8012e8c:	d035      	beq.n	8012efa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xe2>
 8012e8e:	f898 1001 	ldrb.w	r1, [r8, #1]
 8012e92:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8012e96:	4419      	add	r1, r3
 8012e98:	3401      	adds	r4, #1
 8012e9a:	d432      	bmi.n	8012f02 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xea>
 8012e9c:	45a2      	cmp	sl, r4
 8012e9e:	dd30      	ble.n	8012f02 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xea>
 8012ea0:	b378      	cbz	r0, 8012f02 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xea>
 8012ea2:	2e00      	cmp	r6, #0
 8012ea4:	db2b      	blt.n	8012efe <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xe6>
 8012ea6:	45b6      	cmp	lr, r6
 8012ea8:	dd29      	ble.n	8012efe <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xe6>
 8012eaa:	f818 400e 	ldrb.w	r4, [r8, lr]
 8012eae:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 8012eb2:	441c      	add	r4, r3
 8012eb4:	3601      	adds	r6, #1
 8012eb6:	d427      	bmi.n	8012f08 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xf0>
 8012eb8:	45b6      	cmp	lr, r6
 8012eba:	dd25      	ble.n	8012f08 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xf0>
 8012ebc:	b327      	cbz	r7, 8012f08 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xf0>
 8012ebe:	44c6      	add	lr, r8
 8012ec0:	f89e 2001 	ldrb.w	r2, [lr, #1]
 8012ec4:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8012ec8:	4413      	add	r3, r2
 8012eca:	782a      	ldrb	r2, [r5, #0]
 8012ecc:	9202      	str	r2, [sp, #8]
 8012ece:	780a      	ldrb	r2, [r1, #0]
 8012ed0:	9203      	str	r2, [sp, #12]
 8012ed2:	7822      	ldrb	r2, [r4, #0]
 8012ed4:	9204      	str	r2, [sp, #16]
 8012ed6:	2f0f      	cmp	r7, #15
 8012ed8:	781a      	ldrb	r2, [r3, #0]
 8012eda:	9205      	str	r2, [sp, #20]
 8012edc:	d801      	bhi.n	8012ee2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xca>
 8012ede:	280f      	cmp	r0, #15
 8012ee0:	d914      	bls.n	8012f0c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xf4>
 8012ee2:	4b3f      	ldr	r3, [pc, #252]	; (8012fe0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c8>)
 8012ee4:	4a3f      	ldr	r2, [pc, #252]	; (8012fe4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1cc>)
 8012ee6:	4840      	ldr	r0, [pc, #256]	; (8012fe8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d0>)
 8012ee8:	f240 210d 	movw	r1, #525	; 0x20d
 8012eec:	f006 fa8e 	bl	801940c <__assert_func>
 8012ef0:	ad07      	add	r5, sp, #28
 8012ef2:	e7c6      	b.n	8012e82 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x6a>
 8012ef4:	a907      	add	r1, sp, #28
 8012ef6:	460d      	mov	r5, r1
 8012ef8:	e7ce      	b.n	8012e98 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x80>
 8012efa:	a907      	add	r1, sp, #28
 8012efc:	e7cc      	b.n	8012e98 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x80>
 8012efe:	ac07      	add	r4, sp, #28
 8012f00:	e7d8      	b.n	8012eb4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x9c>
 8012f02:	ab07      	add	r3, sp, #28
 8012f04:	461c      	mov	r4, r3
 8012f06:	e7e0      	b.n	8012eca <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xb2>
 8012f08:	ab07      	add	r3, sp, #28
 8012f0a:	e7de      	b.n	8012eca <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xb2>
 8012f0c:	b2ba      	uxth	r2, r7
 8012f0e:	b280      	uxth	r0, r0
 8012f10:	fb02 fa00 	mul.w	sl, r2, r0
 8012f14:	ebca 1000 	rsb	r0, sl, r0, lsl #4
 8012f18:	0112      	lsls	r2, r2, #4
 8012f1a:	b280      	uxth	r0, r0
 8012f1c:	f891 8002 	ldrb.w	r8, [r1, #2]
 8012f20:	7849      	ldrb	r1, [r1, #1]
 8012f22:	78ae      	ldrb	r6, [r5, #2]
 8012f24:	786d      	ldrb	r5, [r5, #1]
 8012f26:	f5c2 7e80 	rsb	lr, r2, #256	; 0x100
 8012f2a:	eba2 020a 	sub.w	r2, r2, sl
 8012f2e:	b292      	uxth	r2, r2
 8012f30:	ebae 0e00 	sub.w	lr, lr, r0
 8012f34:	fa1f fe8e 	uxth.w	lr, lr
 8012f38:	4351      	muls	r1, r2
 8012f3a:	fb02 f808 	mul.w	r8, r2, r8
 8012f3e:	fb0e 8806 	mla	r8, lr, r6, r8
 8012f42:	fb0e 1505 	mla	r5, lr, r5, r1
 8012f46:	78a6      	ldrb	r6, [r4, #2]
 8012f48:	7861      	ldrb	r1, [r4, #1]
 8012f4a:	fa1f f78c 	uxth.w	r7, ip
 8012f4e:	fb00 8806 	mla	r8, r0, r6, r8
 8012f52:	fb00 5501 	mla	r5, r0, r1, r5
 8012f56:	789e      	ldrb	r6, [r3, #2]
 8012f58:	7859      	ldrb	r1, [r3, #1]
 8012f5a:	9b00      	ldr	r3, [sp, #0]
 8012f5c:	ea6f 0c0c 	mvn.w	ip, ip
 8012f60:	fa5f fc8c 	uxtb.w	ip, ip
 8012f64:	fb0a 5101 	mla	r1, sl, r1, r5
 8012f68:	fb13 f50c 	smulbb	r5, r3, ip
 8012f6c:	9b03      	ldr	r3, [sp, #12]
 8012f6e:	435a      	muls	r2, r3
 8012f70:	9b02      	ldr	r3, [sp, #8]
 8012f72:	fb0e 2203 	mla	r2, lr, r3, r2
 8012f76:	9b04      	ldr	r3, [sp, #16]
 8012f78:	fb00 2003 	mla	r0, r0, r3, r2
 8012f7c:	9b05      	ldr	r3, [sp, #20]
 8012f7e:	fb0a 8606 	mla	r6, sl, r6, r8
 8012f82:	fb0a 0a03 	mla	sl, sl, r3, r0
 8012f86:	9b01      	ldr	r3, [sp, #4]
 8012f88:	fb19 f90c 	smulbb	r9, r9, ip
 8012f8c:	f3ca 2a07 	ubfx	sl, sl, #8, #8
 8012f90:	fb13 fc0c 	smulbb	ip, r3, ip
 8012f94:	f3c6 2607 	ubfx	r6, r6, #8, #8
 8012f98:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8012f9c:	fb06 9607 	mla	r6, r6, r7, r9
 8012fa0:	fb01 5107 	mla	r1, r1, r7, r5
 8012fa4:	fb0a c707 	mla	r7, sl, r7, ip
 8012fa8:	b2b6      	uxth	r6, r6
 8012faa:	b289      	uxth	r1, r1
 8012fac:	b2bf      	uxth	r7, r7
 8012fae:	f106 0901 	add.w	r9, r6, #1
 8012fb2:	f107 0c01 	add.w	ip, r7, #1
 8012fb6:	1c4d      	adds	r5, r1, #1
 8012fb8:	eb09 2616 	add.w	r6, r9, r6, lsr #8
 8012fbc:	eb0c 2717 	add.w	r7, ip, r7, lsr #8
 8012fc0:	eb05 2111 	add.w	r1, r5, r1, lsr #8
 8012fc4:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8012fc8:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 8012fcc:	0949      	lsrs	r1, r1, #5
 8012fce:	433e      	orrs	r6, r7
 8012fd0:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8012fd4:	430e      	orrs	r6, r1
 8012fd6:	f8ab 6000 	strh.w	r6, [fp]
 8012fda:	b009      	add	sp, #36	; 0x24
 8012fdc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8012fe0:	0801d135 	.word	0x0801d135
 8012fe4:	0801d68d 	.word	0x0801d68d
 8012fe8:	0801d1bd 	.word	0x0801d1bd

08012fec <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 8012fec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012ff0:	ed2d 8b08 	vpush	{d8-d11}
 8012ff4:	b097      	sub	sp, #92	; 0x5c
 8012ff6:	eeb0 aa40 	vmov.f32	s20, s0
 8012ffa:	9309      	str	r3, [sp, #36]	; 0x24
 8012ffc:	f9bd 30c4 	ldrsh.w	r3, [sp, #196]	; 0xc4
 8013000:	9c2d      	ldr	r4, [sp, #180]	; 0xb4
 8013002:	930b      	str	r3, [sp, #44]	; 0x2c
 8013004:	f89d 30cc 	ldrb.w	r3, [sp, #204]	; 0xcc
 8013008:	9310      	str	r3, [sp, #64]	; 0x40
 801300a:	910f      	str	r1, [sp, #60]	; 0x3c
 801300c:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	; 0xb8
 8013010:	9015      	str	r0, [sp, #84]	; 0x54
 8013012:	6860      	ldr	r0, [r4, #4]
 8013014:	9213      	str	r2, [sp, #76]	; 0x4c
 8013016:	fb00 1303 	mla	r3, r0, r3, r1
 801301a:	9a32      	ldr	r2, [sp, #200]	; 0xc8
 801301c:	6821      	ldr	r1, [r4, #0]
 801301e:	6854      	ldr	r4, [r2, #4]
 8013020:	f9bd 50c0 	ldrsh.w	r5, [sp, #192]	; 0xc0
 8013024:	eb01 0343 	add.w	r3, r1, r3, lsl #1
 8013028:	930a      	str	r3, [sp, #40]	; 0x28
 801302a:	6813      	ldr	r3, [r2, #0]
 801302c:	930e      	str	r3, [sp, #56]	; 0x38
 801302e:	1d23      	adds	r3, r4, #4
 8013030:	9308      	str	r3, [sp, #32]
 8013032:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8013034:	43db      	mvns	r3, r3
 8013036:	b2db      	uxtb	r3, r3
 8013038:	eef0 9a60 	vmov.f32	s19, s1
 801303c:	eeb0 9a41 	vmov.f32	s18, s2
 8013040:	eeb0 8a62 	vmov.f32	s16, s5
 8013044:	eef0 8a43 	vmov.f32	s17, s6
 8013048:	eef0 ba44 	vmov.f32	s23, s8
 801304c:	eeb0 ba64 	vmov.f32	s22, s9
 8013050:	eef0 aa45 	vmov.f32	s21, s10
 8013054:	930c      	str	r3, [sp, #48]	; 0x30
 8013056:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8013058:	2b00      	cmp	r3, #0
 801305a:	dc03      	bgt.n	8013064 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x78>
 801305c:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801305e:	2b00      	cmp	r3, #0
 8013060:	f340 825c 	ble.w	801351c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x530>
 8013064:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8013066:	2b00      	cmp	r3, #0
 8013068:	f340 8127 	ble.w	80132ba <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2ce>
 801306c:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 801306e:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8013070:	1412      	asrs	r2, r2, #16
 8013072:	ea4f 4323 	mov.w	r3, r3, asr #16
 8013076:	d430      	bmi.n	80130da <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xee>
 8013078:	1c51      	adds	r1, r2, #1
 801307a:	428d      	cmp	r5, r1
 801307c:	dd30      	ble.n	80130e0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf4>
 801307e:	2b00      	cmp	r3, #0
 8013080:	db2e      	blt.n	80130e0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf4>
 8013082:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8013084:	1c59      	adds	r1, r3, #1
 8013086:	4288      	cmp	r0, r1
 8013088:	dd2a      	ble.n	80130e0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf4>
 801308a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801308c:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 801308e:	9929      	ldr	r1, [sp, #164]	; 0xa4
 8013090:	3b01      	subs	r3, #1
 8013092:	fb02 1203 	mla	r2, r2, r3, r1
 8013096:	1412      	asrs	r2, r2, #16
 8013098:	d42c      	bmi.n	80130f4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x108>
 801309a:	3201      	adds	r2, #1
 801309c:	4295      	cmp	r5, r2
 801309e:	dd29      	ble.n	80130f4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x108>
 80130a0:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 80130a2:	992a      	ldr	r1, [sp, #168]	; 0xa8
 80130a4:	fb02 1303 	mla	r3, r2, r3, r1
 80130a8:	141b      	asrs	r3, r3, #16
 80130aa:	d423      	bmi.n	80130f4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x108>
 80130ac:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80130ae:	3301      	adds	r3, #1
 80130b0:	429a      	cmp	r2, r3
 80130b2:	dd1f      	ble.n	80130f4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x108>
 80130b4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80130b6:	9311      	str	r3, [sp, #68]	; 0x44
 80130b8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80130ba:	930d      	str	r3, [sp, #52]	; 0x34
 80130bc:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 80130c0:	9312      	str	r3, [sp, #72]	; 0x48
 80130c2:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80130c4:	2b00      	cmp	r3, #0
 80130c6:	f300 8161 	bgt.w	801338c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3a0>
 80130ca:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80130cc:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80130ce:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80130d2:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80130d6:	930a      	str	r3, [sp, #40]	; 0x28
 80130d8:	e0f1      	b.n	80132be <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2d2>
 80130da:	1c51      	adds	r1, r2, #1
 80130dc:	f040 80de 	bne.w	801329c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2b0>
 80130e0:	42aa      	cmp	r2, r5
 80130e2:	f280 80db 	bge.w	801329c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2b0>
 80130e6:	1c5f      	adds	r7, r3, #1
 80130e8:	f2c0 80d8 	blt.w	801329c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2b0>
 80130ec:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80130ee:	4293      	cmp	r3, r2
 80130f0:	f280 80d4 	bge.w	801329c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2b0>
 80130f4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80130f6:	9311      	str	r3, [sp, #68]	; 0x44
 80130f8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80130fa:	930d      	str	r3, [sp, #52]	; 0x34
 80130fc:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80130fe:	2b00      	cmp	r3, #0
 8013100:	dde3      	ble.n	80130ca <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xde>
 8013102:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8013104:	9829      	ldr	r0, [sp, #164]	; 0xa4
 8013106:	992a      	ldr	r1, [sp, #168]	; 0xa8
 8013108:	141a      	asrs	r2, r3, #16
 801310a:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801310c:	1400      	asrs	r0, r0, #16
 801310e:	f3c3 3303 	ubfx	r3, r3, #12, #4
 8013112:	f3c1 3103 	ubfx	r1, r1, #12, #4
 8013116:	f100 8120 	bmi.w	801335a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x36e>
 801311a:	1c46      	adds	r6, r0, #1
 801311c:	42b5      	cmp	r5, r6
 801311e:	f340 811e 	ble.w	801335e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x372>
 8013122:	2a00      	cmp	r2, #0
 8013124:	f2c0 811b 	blt.w	801335e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x372>
 8013128:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 801312a:	1c56      	adds	r6, r2, #1
 801312c:	42b7      	cmp	r7, r6
 801312e:	f340 8116 	ble.w	801335e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x372>
 8013132:	fb02 0005 	mla	r0, r2, r5, r0
 8013136:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 8013138:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801313a:	9c08      	ldr	r4, [sp, #32]
 801313c:	4402      	add	r2, r0
 801313e:	5c30      	ldrb	r0, [r6, r0]
 8013140:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8013144:	9014      	str	r0, [sp, #80]	; 0x50
 8013146:	1826      	adds	r6, r4, r0
 8013148:	2b00      	cmp	r3, #0
 801314a:	f000 80f7 	beq.w	801333c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x350>
 801314e:	f892 e001 	ldrb.w	lr, [r2, #1]
 8013152:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 8013156:	44a6      	add	lr, r4
 8013158:	2900      	cmp	r1, #0
 801315a:	f000 80f8 	beq.w	801334e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x362>
 801315e:	1950      	adds	r0, r2, r5
 8013160:	5d52      	ldrb	r2, [r2, r5]
 8013162:	7840      	ldrb	r0, [r0, #1]
 8013164:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8013168:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801316c:	4422      	add	r2, r4
 801316e:	4420      	add	r0, r4
 8013170:	b29b      	uxth	r3, r3
 8013172:	b289      	uxth	r1, r1
 8013174:	fb03 fa01 	mul.w	sl, r3, r1
 8013178:	ebca 1101 	rsb	r1, sl, r1, lsl #4
 801317c:	011b      	lsls	r3, r3, #4
 801317e:	b289      	uxth	r1, r1
 8013180:	f89e c002 	ldrb.w	ip, [lr, #2]
 8013184:	f896 b002 	ldrb.w	fp, [r6, #2]
 8013188:	9f0d      	ldr	r7, [sp, #52]	; 0x34
 801318a:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 801318c:	f8b7 8000 	ldrh.w	r8, [r7]
 8013190:	f8bd 7040 	ldrh.w	r7, [sp, #64]	; 0x40
 8013194:	f5c3 7980 	rsb	r9, r3, #256	; 0x100
 8013198:	eba3 030a 	sub.w	r3, r3, sl
 801319c:	b29b      	uxth	r3, r3
 801319e:	eba9 0901 	sub.w	r9, r9, r1
 80131a2:	fa1f f989 	uxth.w	r9, r9
 80131a6:	fb03 fc0c 	mul.w	ip, r3, ip
 80131aa:	fb09 cc0b 	mla	ip, r9, fp, ip
 80131ae:	f892 b002 	ldrb.w	fp, [r2, #2]
 80131b2:	fb01 cc0b 	mla	ip, r1, fp, ip
 80131b6:	f890 b002 	ldrb.w	fp, [r0, #2]
 80131ba:	fb0a cc0b 	mla	ip, sl, fp, ip
 80131be:	ea4f 2b28 	mov.w	fp, r8, asr #8
 80131c2:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
 80131c6:	fb1b fb04 	smulbb	fp, fp, r4
 80131ca:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 80131ce:	fb0c bc07 	mla	ip, ip, r7, fp
 80131d2:	f896 b001 	ldrb.w	fp, [r6, #1]
 80131d6:	f89e 6001 	ldrb.w	r6, [lr, #1]
 80131da:	f89e e000 	ldrb.w	lr, [lr]
 80131de:	435e      	muls	r6, r3
 80131e0:	fb09 660b 	mla	r6, r9, fp, r6
 80131e4:	f892 b001 	ldrb.w	fp, [r2, #1]
 80131e8:	fb01 660b 	mla	r6, r1, fp, r6
 80131ec:	f890 b001 	ldrb.w	fp, [r0, #1]
 80131f0:	fb0a 660b 	mla	r6, sl, fp, r6
 80131f4:	ea4f 0be8 	mov.w	fp, r8, asr #3
 80131f8:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 80131fc:	fb1b fb04 	smulbb	fp, fp, r4
 8013200:	f3c6 2607 	ubfx	r6, r6, #8, #8
 8013204:	fb06 b607 	mla	r6, r6, r7, fp
 8013208:	b2b4      	uxth	r4, r6
 801320a:	9412      	str	r4, [sp, #72]	; 0x48
 801320c:	9e08      	ldr	r6, [sp, #32]
 801320e:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8013210:	f816 b004 	ldrb.w	fp, [r6, r4]
 8013214:	fb03 f30e 	mul.w	r3, r3, lr
 8013218:	f892 e000 	ldrb.w	lr, [r2]
 801321c:	fb09 330b 	mla	r3, r9, fp, r3
 8013220:	fb01 330e 	mla	r3, r1, lr, r3
 8013224:	f890 e000 	ldrb.w	lr, [r0]
 8013228:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801322c:	fb0a 3e0e 	mla	lr, sl, lr, r3
 8013230:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8013232:	fa5f f888 	uxtb.w	r8, r8
 8013236:	f3ce 2e07 	ubfx	lr, lr, #8, #8
 801323a:	fb18 f803 	smulbb	r8, r8, r3
 801323e:	fb0e 8807 	mla	r8, lr, r7, r8
 8013242:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8013244:	fa1f fc8c 	uxth.w	ip, ip
 8013248:	fa1f f888 	uxth.w	r8, r8
 801324c:	f103 0b01 	add.w	fp, r3, #1
 8013250:	f10c 0201 	add.w	r2, ip, #1
 8013254:	f108 0e01 	add.w	lr, r8, #1
 8013258:	eb0b 2613 	add.w	r6, fp, r3, lsr #8
 801325c:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 8013260:	eb0e 2818 	add.w	r8, lr, r8, lsr #8
 8013264:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8013268:	f3c8 28c4 	ubfx	r8, r8, #11, #5
 801326c:	0976      	lsrs	r6, r6, #5
 801326e:	ea4c 0c08 	orr.w	ip, ip, r8
 8013272:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8013276:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8013278:	ea4c 0606 	orr.w	r6, ip, r6
 801327c:	801e      	strh	r6, [r3, #0]
 801327e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8013280:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 8013282:	3302      	adds	r3, #2
 8013284:	930d      	str	r3, [sp, #52]	; 0x34
 8013286:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8013288:	4413      	add	r3, r2
 801328a:	9329      	str	r3, [sp, #164]	; 0xa4
 801328c:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 801328e:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8013290:	4413      	add	r3, r2
 8013292:	932a      	str	r3, [sp, #168]	; 0xa8
 8013294:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8013296:	3b01      	subs	r3, #1
 8013298:	9311      	str	r3, [sp, #68]	; 0x44
 801329a:	e72f      	b.n	80130fc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x110>
 801329c:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801329e:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 80132a0:	4413      	add	r3, r2
 80132a2:	9329      	str	r3, [sp, #164]	; 0xa4
 80132a4:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 80132a6:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80132a8:	4413      	add	r3, r2
 80132aa:	932a      	str	r3, [sp, #168]	; 0xa8
 80132ac:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80132ae:	3b01      	subs	r3, #1
 80132b0:	9309      	str	r3, [sp, #36]	; 0x24
 80132b2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80132b4:	3302      	adds	r3, #2
 80132b6:	930a      	str	r3, [sp, #40]	; 0x28
 80132b8:	e6d4      	b.n	8013064 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x78>
 80132ba:	f47f aee6 	bne.w	801308a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9e>
 80132be:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80132c0:	2b00      	cmp	r3, #0
 80132c2:	f340 812b 	ble.w	801351c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x530>
 80132c6:	ee3a aa2b 	vadd.f32	s20, s20, s23
 80132ca:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80132ce:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 80132d2:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80132d4:	ee79 9a8b 	vadd.f32	s19, s19, s22
 80132d8:	ee39 9a2a 	vadd.f32	s18, s18, s21
 80132dc:	ee29 7aa7 	vmul.f32	s14, s19, s15
 80132e0:	eef0 6a48 	vmov.f32	s13, s16
 80132e4:	ee69 7a27 	vmul.f32	s15, s18, s15
 80132e8:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80132ec:	ee37 8a48 	vsub.f32	s16, s14, s16
 80132f0:	edcd 6a29 	vstr	s13, [sp, #164]	; 0xa4
 80132f4:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 80132f8:	eef0 6a68 	vmov.f32	s13, s17
 80132fc:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8013300:	ee18 2a10 	vmov	r2, s16
 8013304:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8013308:	fb92 f3f3 	sdiv	r3, r2, r3
 801330c:	ee18 2a90 	vmov	r2, s17
 8013310:	932b      	str	r3, [sp, #172]	; 0xac
 8013312:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8013314:	fb92 f3f3 	sdiv	r3, r2, r3
 8013318:	932c      	str	r3, [sp, #176]	; 0xb0
 801331a:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801331c:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801331e:	3b01      	subs	r3, #1
 8013320:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8013324:	930f      	str	r3, [sp, #60]	; 0x3c
 8013326:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8013328:	edcd 6a2a 	vstr	s13, [sp, #168]	; 0xa8
 801332c:	bf08      	it	eq
 801332e:	4613      	moveq	r3, r2
 8013330:	9309      	str	r3, [sp, #36]	; 0x24
 8013332:	eef0 8a67 	vmov.f32	s17, s15
 8013336:	eeb0 8a47 	vmov.f32	s16, s14
 801333a:	e68c      	b.n	8013056 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6a>
 801333c:	b151      	cbz	r1, 8013354 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x368>
 801333e:	5d52      	ldrb	r2, [r2, r5]
 8013340:	9808      	ldr	r0, [sp, #32]
 8013342:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8013346:	4402      	add	r2, r0
 8013348:	4630      	mov	r0, r6
 801334a:	46b6      	mov	lr, r6
 801334c:	e710      	b.n	8013170 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x184>
 801334e:	4630      	mov	r0, r6
 8013350:	4632      	mov	r2, r6
 8013352:	e70d      	b.n	8013170 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x184>
 8013354:	4630      	mov	r0, r6
 8013356:	4632      	mov	r2, r6
 8013358:	e7f7      	b.n	801334a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x35e>
 801335a:	1c46      	adds	r6, r0, #1
 801335c:	d18f      	bne.n	801327e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x292>
 801335e:	4285      	cmp	r5, r0
 8013360:	dd8d      	ble.n	801327e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x292>
 8013362:	1c54      	adds	r4, r2, #1
 8013364:	db8b      	blt.n	801327e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x292>
 8013366:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8013368:	4294      	cmp	r4, r2
 801336a:	dd88      	ble.n	801327e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x292>
 801336c:	e9cd 2303 	strd	r2, r3, [sp, #12]
 8013370:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8013372:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8013374:	9002      	str	r0, [sp, #8]
 8013376:	e9cd 1405 	strd	r1, r4, [sp, #20]
 801337a:	e9cd 5300 	strd	r5, r3, [sp]
 801337e:	e9dd 120d 	ldrd	r1, r2, [sp, #52]	; 0x34
 8013382:	9b08      	ldr	r3, [sp, #32]
 8013384:	9815      	ldr	r0, [sp, #84]	; 0x54
 8013386:	f7ff fd47 	bl	8012e18 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>
 801338a:	e778      	b.n	801327e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x292>
 801338c:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 801338e:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8013390:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8013392:	1410      	asrs	r0, r2, #16
 8013394:	f3c2 3103 	ubfx	r1, r2, #12, #4
 8013398:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 801339a:	1412      	asrs	r2, r2, #16
 801339c:	fb05 2000 	mla	r0, r5, r0, r2
 80133a0:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 80133a2:	f814 a000 	ldrb.w	sl, [r4, r0]
 80133a6:	4402      	add	r2, r0
 80133a8:	9808      	ldr	r0, [sp, #32]
 80133aa:	eb0a 0a4a 	add.w	sl, sl, sl, lsl #1
 80133ae:	f3c3 3303 	ubfx	r3, r3, #12, #4
 80133b2:	eb00 060a 	add.w	r6, r0, sl
 80133b6:	2b00      	cmp	r3, #0
 80133b8:	f000 80a1 	beq.w	80134fe <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x512>
 80133bc:	f892 c001 	ldrb.w	ip, [r2, #1]
 80133c0:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 80133c4:	4484      	add	ip, r0
 80133c6:	2900      	cmp	r1, #0
 80133c8:	f000 80a2 	beq.w	8013510 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x524>
 80133cc:	1950      	adds	r0, r2, r5
 80133ce:	5d52      	ldrb	r2, [r2, r5]
 80133d0:	7840      	ldrb	r0, [r0, #1]
 80133d2:	9c08      	ldr	r4, [sp, #32]
 80133d4:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80133d8:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 80133dc:	4422      	add	r2, r4
 80133de:	4420      	add	r0, r4
 80133e0:	b29b      	uxth	r3, r3
 80133e2:	b289      	uxth	r1, r1
 80133e4:	fb03 f901 	mul.w	r9, r3, r1
 80133e8:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 80133ec:	011b      	lsls	r3, r3, #4
 80133ee:	b289      	uxth	r1, r1
 80133f0:	f89c 7002 	ldrb.w	r7, [ip, #2]
 80133f4:	f896 b002 	ldrb.w	fp, [r6, #2]
 80133f8:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 80133fa:	f5c3 7880 	rsb	r8, r3, #256	; 0x100
 80133fe:	eba3 0309 	sub.w	r3, r3, r9
 8013402:	b29b      	uxth	r3, r3
 8013404:	eba8 0801 	sub.w	r8, r8, r1
 8013408:	fa1f f888 	uxth.w	r8, r8
 801340c:	435f      	muls	r7, r3
 801340e:	fb08 770b 	mla	r7, r8, fp, r7
 8013412:	f892 b002 	ldrb.w	fp, [r2, #2]
 8013416:	f8b4 e000 	ldrh.w	lr, [r4]
 801341a:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 801341c:	fb01 770b 	mla	r7, r1, fp, r7
 8013420:	f890 b002 	ldrb.w	fp, [r0, #2]
 8013424:	fb09 770b 	mla	r7, r9, fp, r7
 8013428:	ea4f 2b2e 	mov.w	fp, lr, asr #8
 801342c:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
 8013430:	fb1b fb04 	smulbb	fp, fp, r4
 8013434:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8013436:	f3c7 2707 	ubfx	r7, r7, #8, #8
 801343a:	fb07 b704 	mla	r7, r7, r4, fp
 801343e:	f896 b001 	ldrb.w	fp, [r6, #1]
 8013442:	f89c 6001 	ldrb.w	r6, [ip, #1]
 8013446:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8013448:	f89c c000 	ldrb.w	ip, [ip]
 801344c:	435e      	muls	r6, r3
 801344e:	fb08 660b 	mla	r6, r8, fp, r6
 8013452:	f892 b001 	ldrb.w	fp, [r2, #1]
 8013456:	fb01 660b 	mla	r6, r1, fp, r6
 801345a:	f890 b001 	ldrb.w	fp, [r0, #1]
 801345e:	fb09 660b 	mla	r6, r9, fp, r6
 8013462:	ea4f 0bee 	mov.w	fp, lr, asr #3
 8013466:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 801346a:	fb1b fb04 	smulbb	fp, fp, r4
 801346e:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8013470:	f3c6 2607 	ubfx	r6, r6, #8, #8
 8013474:	fb06 b604 	mla	r6, r6, r4, fp
 8013478:	9c08      	ldr	r4, [sp, #32]
 801347a:	f814 a00a 	ldrb.w	sl, [r4, sl]
 801347e:	fb03 f30c 	mul.w	r3, r3, ip
 8013482:	f892 c000 	ldrb.w	ip, [r2]
 8013486:	fb08 330a 	mla	r3, r8, sl, r3
 801348a:	fb01 330c 	mla	r3, r1, ip, r3
 801348e:	f890 c000 	ldrb.w	ip, [r0]
 8013492:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8013496:	fb09 3c0c 	mla	ip, r9, ip, r3
 801349a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801349c:	fa5f fe8e 	uxtb.w	lr, lr
 80134a0:	fb1e fe03 	smulbb	lr, lr, r3
 80134a4:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80134a6:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 80134aa:	fb0c ec03 	mla	ip, ip, r3, lr
 80134ae:	b2bf      	uxth	r7, r7
 80134b0:	b2b6      	uxth	r6, r6
 80134b2:	fa1f fc8c 	uxth.w	ip, ip
 80134b6:	1c7b      	adds	r3, r7, #1
 80134b8:	f10c 0201 	add.w	r2, ip, #1
 80134bc:	f106 0b01 	add.w	fp, r6, #1
 80134c0:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 80134c4:	eb02 221c 	add.w	r2, r2, ip, lsr #8
 80134c8:	eb0b 2616 	add.w	r6, fp, r6, lsr #8
 80134cc:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 80134d0:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 80134d4:	0976      	lsrs	r6, r6, #5
 80134d6:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80134d8:	4317      	orrs	r7, r2
 80134da:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 80134de:	4337      	orrs	r7, r6
 80134e0:	f823 7b02 	strh.w	r7, [r3], #2
 80134e4:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 80134e6:	930d      	str	r3, [sp, #52]	; 0x34
 80134e8:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80134ea:	4413      	add	r3, r2
 80134ec:	9329      	str	r3, [sp, #164]	; 0xa4
 80134ee:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 80134f0:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80134f2:	4413      	add	r3, r2
 80134f4:	932a      	str	r3, [sp, #168]	; 0xa8
 80134f6:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80134f8:	3b01      	subs	r3, #1
 80134fa:	9311      	str	r3, [sp, #68]	; 0x44
 80134fc:	e5e1      	b.n	80130c2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xd6>
 80134fe:	b151      	cbz	r1, 8013516 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x52a>
 8013500:	5d52      	ldrb	r2, [r2, r5]
 8013502:	9808      	ldr	r0, [sp, #32]
 8013504:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8013508:	4402      	add	r2, r0
 801350a:	4630      	mov	r0, r6
 801350c:	46b4      	mov	ip, r6
 801350e:	e767      	b.n	80133e0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3f4>
 8013510:	4630      	mov	r0, r6
 8013512:	4632      	mov	r2, r6
 8013514:	e764      	b.n	80133e0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3f4>
 8013516:	4630      	mov	r0, r6
 8013518:	4632      	mov	r2, r6
 801351a:	e7f7      	b.n	801350c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x520>
 801351c:	b017      	add	sp, #92	; 0x5c
 801351e:	ecbd 8b08 	vpop	{d8-d11}
 8013522:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

08013528 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>:
 8013528:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801352c:	880e      	ldrh	r6, [r1, #0]
 801352e:	b085      	sub	sp, #20
 8013530:	0230      	lsls	r0, r6, #8
 8013532:	e9dd 7510 	ldrd	r7, r5, [sp, #64]	; 0x40
 8013536:	f400 0b78 	and.w	fp, r0, #16252928	; 0xf80000
 801353a:	0170      	lsls	r0, r6, #5
 801353c:	f9bd c038 	ldrsh.w	ip, [sp, #56]	; 0x38
 8013540:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	; 0x3c
 8013544:	f89d 404c 	ldrb.w	r4, [sp, #76]	; 0x4c
 8013548:	f400 407c 	and.w	r0, r0, #64512	; 0xfc00
 801354c:	00f6      	lsls	r6, r6, #3
 801354e:	ea4b 0000 	orr.w	r0, fp, r0
 8013552:	b2f6      	uxtb	r6, r6
 8013554:	4691      	mov	r9, r2
 8013556:	fb05 7a0c 	mla	sl, r5, ip, r7
 801355a:	4306      	orrs	r6, r0
 801355c:	2d00      	cmp	r5, #0
 801355e:	f89d 2048 	ldrb.w	r2, [sp, #72]	; 0x48
 8013562:	9603      	str	r6, [sp, #12]
 8013564:	eb09 0e0a 	add.w	lr, r9, sl
 8013568:	db42      	blt.n	80135f0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xc8>
 801356a:	45a8      	cmp	r8, r5
 801356c:	dd40      	ble.n	80135f0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xc8>
 801356e:	2f00      	cmp	r7, #0
 8013570:	db3c      	blt.n	80135ec <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xc4>
 8013572:	45bc      	cmp	ip, r7
 8013574:	dd3a      	ble.n	80135ec <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xc4>
 8013576:	f819 600a 	ldrb.w	r6, [r9, sl]
 801357a:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 801357e:	441e      	add	r6, r3
 8013580:	1c78      	adds	r0, r7, #1
 8013582:	d438      	bmi.n	80135f6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xce>
 8013584:	4584      	cmp	ip, r0
 8013586:	dd36      	ble.n	80135f6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xce>
 8013588:	b3aa      	cbz	r2, 80135f6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xce>
 801358a:	f89e 0001 	ldrb.w	r0, [lr, #1]
 801358e:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8013592:	4418      	add	r0, r3
 8013594:	3501      	adds	r5, #1
 8013596:	d432      	bmi.n	80135fe <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd6>
 8013598:	45a8      	cmp	r8, r5
 801359a:	dd30      	ble.n	80135fe <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd6>
 801359c:	b37c      	cbz	r4, 80135fe <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd6>
 801359e:	2f00      	cmp	r7, #0
 80135a0:	db2b      	blt.n	80135fa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd2>
 80135a2:	45bc      	cmp	ip, r7
 80135a4:	dd29      	ble.n	80135fa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd2>
 80135a6:	f81e 500c 	ldrb.w	r5, [lr, ip]
 80135aa:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 80135ae:	441d      	add	r5, r3
 80135b0:	3701      	adds	r7, #1
 80135b2:	d427      	bmi.n	8013604 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xdc>
 80135b4:	45bc      	cmp	ip, r7
 80135b6:	dd25      	ble.n	8013604 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xdc>
 80135b8:	b322      	cbz	r2, 8013604 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xdc>
 80135ba:	44f4      	add	ip, lr
 80135bc:	f89c 7001 	ldrb.w	r7, [ip, #1]
 80135c0:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 80135c4:	443b      	add	r3, r7
 80135c6:	781f      	ldrb	r7, [r3, #0]
 80135c8:	f896 a000 	ldrb.w	sl, [r6]
 80135cc:	f890 b000 	ldrb.w	fp, [r0]
 80135d0:	f895 9000 	ldrb.w	r9, [r5]
 80135d4:	9700      	str	r7, [sp, #0]
 80135d6:	2a0f      	cmp	r2, #15
 80135d8:	d801      	bhi.n	80135de <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xb6>
 80135da:	2c0f      	cmp	r4, #15
 80135dc:	d914      	bls.n	8013608 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xe0>
 80135de:	4b2c      	ldr	r3, [pc, #176]	; (8013690 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x168>)
 80135e0:	4a2c      	ldr	r2, [pc, #176]	; (8013694 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x16c>)
 80135e2:	482d      	ldr	r0, [pc, #180]	; (8013698 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x170>)
 80135e4:	f240 210d 	movw	r1, #525	; 0x20d
 80135e8:	f005 ff10 	bl	801940c <__assert_func>
 80135ec:	ae03      	add	r6, sp, #12
 80135ee:	e7c7      	b.n	8013580 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x58>
 80135f0:	a803      	add	r0, sp, #12
 80135f2:	4606      	mov	r6, r0
 80135f4:	e7ce      	b.n	8013594 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6c>
 80135f6:	a803      	add	r0, sp, #12
 80135f8:	e7cc      	b.n	8013594 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6c>
 80135fa:	ad03      	add	r5, sp, #12
 80135fc:	e7d8      	b.n	80135b0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x88>
 80135fe:	ab03      	add	r3, sp, #12
 8013600:	461d      	mov	r5, r3
 8013602:	e7e0      	b.n	80135c6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x9e>
 8013604:	ab03      	add	r3, sp, #12
 8013606:	e7de      	b.n	80135c6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x9e>
 8013608:	b292      	uxth	r2, r2
 801360a:	b2a4      	uxth	r4, r4
 801360c:	fb02 f804 	mul.w	r8, r2, r4
 8013610:	ebc8 1404 	rsb	r4, r8, r4, lsl #4
 8013614:	0112      	lsls	r2, r2, #4
 8013616:	b2a4      	uxth	r4, r4
 8013618:	f890 e002 	ldrb.w	lr, [r0, #2]
 801361c:	78b7      	ldrb	r7, [r6, #2]
 801361e:	7840      	ldrb	r0, [r0, #1]
 8013620:	7876      	ldrb	r6, [r6, #1]
 8013622:	f5c2 7c80 	rsb	ip, r2, #256	; 0x100
 8013626:	eba2 0208 	sub.w	r2, r2, r8
 801362a:	b292      	uxth	r2, r2
 801362c:	ebac 0c04 	sub.w	ip, ip, r4
 8013630:	fa1f fc8c 	uxth.w	ip, ip
 8013634:	fb02 fe0e 	mul.w	lr, r2, lr
 8013638:	fb0c ee07 	mla	lr, ip, r7, lr
 801363c:	78af      	ldrb	r7, [r5, #2]
 801363e:	fb04 ee07 	mla	lr, r4, r7, lr
 8013642:	789f      	ldrb	r7, [r3, #2]
 8013644:	785b      	ldrb	r3, [r3, #1]
 8013646:	fb08 e707 	mla	r7, r8, r7, lr
 801364a:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801364e:	fb02 fe0b 	mul.w	lr, r2, fp
 8013652:	4342      	muls	r2, r0
 8013654:	7868      	ldrb	r0, [r5, #1]
 8013656:	9701      	str	r7, [sp, #4]
 8013658:	fb0c ee0a 	mla	lr, ip, sl, lr
 801365c:	9f00      	ldr	r7, [sp, #0]
 801365e:	fb0c 2206 	mla	r2, ip, r6, r2
 8013662:	fb04 ee09 	mla	lr, r4, r9, lr
 8013666:	fb04 2400 	mla	r4, r4, r0, r2
 801366a:	fb08 ee07 	mla	lr, r8, r7, lr
 801366e:	9f01      	ldr	r7, [sp, #4]
 8013670:	fb08 4803 	mla	r8, r8, r3, r4
 8013674:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 8013678:	ea4f 1858 	mov.w	r8, r8, lsr #5
 801367c:	ea47 070e 	orr.w	r7, r7, lr
 8013680:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 8013684:	ea47 0708 	orr.w	r7, r7, r8
 8013688:	800f      	strh	r7, [r1, #0]
 801368a:	b005      	add	sp, #20
 801368c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013690:	0801d135 	.word	0x0801d135
 8013694:	0801d68d 	.word	0x0801d68d
 8013698:	0801d1bd 	.word	0x0801d1bd

0801369c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 801369c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80136a0:	ed2d 8b0a 	vpush	{d8-d12}
 80136a4:	b091      	sub	sp, #68	; 0x44
 80136a6:	eeb0 aa40 	vmov.f32	s20, s0
 80136aa:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 80136ac:	9307      	str	r3, [sp, #28]
 80136ae:	f9bd 30b4 	ldrsh.w	r3, [sp, #180]	; 0xb4
 80136b2:	910c      	str	r1, [sp, #48]	; 0x30
 80136b4:	9309      	str	r3, [sp, #36]	; 0x24
 80136b6:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
 80136ba:	900f      	str	r0, [sp, #60]	; 0x3c
 80136bc:	6860      	ldr	r0, [r4, #4]
 80136be:	920e      	str	r2, [sp, #56]	; 0x38
 80136c0:	fb00 1303 	mla	r3, r0, r3, r1
 80136c4:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
 80136c6:	6821      	ldr	r1, [r4, #0]
 80136c8:	6854      	ldr	r4, [r2, #4]
 80136ca:	f8dd b098 	ldr.w	fp, [sp, #152]	; 0x98
 80136ce:	f9bd 50b0 	ldrsh.w	r5, [sp, #176]	; 0xb0
 80136d2:	eb01 0343 	add.w	r3, r1, r3, lsl #1
 80136d6:	9308      	str	r3, [sp, #32]
 80136d8:	6813      	ldr	r3, [r2, #0]
 80136da:	930a      	str	r3, [sp, #40]	; 0x28
 80136dc:	eef0 9a60 	vmov.f32	s19, s1
 80136e0:	eeb0 9a41 	vmov.f32	s18, s2
 80136e4:	eeb0 8a62 	vmov.f32	s16, s5
 80136e8:	eef0 8a43 	vmov.f32	s17, s6
 80136ec:	eeb0 ca44 	vmov.f32	s24, s8
 80136f0:	eef0 ba64 	vmov.f32	s23, s9
 80136f4:	eeb0 ba45 	vmov.f32	s22, s10
 80136f8:	3404      	adds	r4, #4
 80136fa:	eef7 aa00 	vmov.f32	s21, #112	; 0x3f800000  1.0
 80136fe:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8013700:	2b00      	cmp	r3, #0
 8013702:	dc03      	bgt.n	801370c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x70>
 8013704:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8013706:	2b00      	cmp	r3, #0
 8013708:	f340 81cb 	ble.w	8013aa2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x406>
 801370c:	9b07      	ldr	r3, [sp, #28]
 801370e:	2b00      	cmp	r3, #0
 8013710:	f340 80dd 	ble.w	80138ce <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x232>
 8013714:	9a25      	ldr	r2, [sp, #148]	; 0x94
 8013716:	1412      	asrs	r2, r2, #16
 8013718:	ea4f 432b 	mov.w	r3, fp, asr #16
 801371c:	d42c      	bmi.n	8013778 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xdc>
 801371e:	1c51      	adds	r1, r2, #1
 8013720:	428d      	cmp	r5, r1
 8013722:	dd2c      	ble.n	801377e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe2>
 8013724:	2b00      	cmp	r3, #0
 8013726:	db2a      	blt.n	801377e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe2>
 8013728:	9809      	ldr	r0, [sp, #36]	; 0x24
 801372a:	1c59      	adds	r1, r3, #1
 801372c:	4288      	cmp	r0, r1
 801372e:	dd26      	ble.n	801377e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe2>
 8013730:	9b07      	ldr	r3, [sp, #28]
 8013732:	9a27      	ldr	r2, [sp, #156]	; 0x9c
 8013734:	9925      	ldr	r1, [sp, #148]	; 0x94
 8013736:	3b01      	subs	r3, #1
 8013738:	fb02 1203 	mla	r2, r2, r3, r1
 801373c:	1412      	asrs	r2, r2, #16
 801373e:	d428      	bmi.n	8013792 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf6>
 8013740:	3201      	adds	r2, #1
 8013742:	4295      	cmp	r5, r2
 8013744:	dd25      	ble.n	8013792 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf6>
 8013746:	9a28      	ldr	r2, [sp, #160]	; 0xa0
 8013748:	fb02 b303 	mla	r3, r2, r3, fp
 801374c:	141b      	asrs	r3, r3, #16
 801374e:	d420      	bmi.n	8013792 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf6>
 8013750:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8013752:	3301      	adds	r3, #1
 8013754:	429a      	cmp	r2, r3
 8013756:	dd1c      	ble.n	8013792 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf6>
 8013758:	9b07      	ldr	r3, [sp, #28]
 801375a:	930b      	str	r3, [sp, #44]	; 0x2c
 801375c:	9b08      	ldr	r3, [sp, #32]
 801375e:	930d      	str	r3, [sp, #52]	; 0x34
 8013760:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8013762:	2b00      	cmp	r3, #0
 8013764:	f300 8116 	bgt.w	8013994 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2f8>
 8013768:	9b07      	ldr	r3, [sp, #28]
 801376a:	9a08      	ldr	r2, [sp, #32]
 801376c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8013770:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8013774:	9308      	str	r3, [sp, #32]
 8013776:	e0ac      	b.n	80138d2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x236>
 8013778:	1c51      	adds	r1, r2, #1
 801377a:	f040 809b 	bne.w	80138b4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x218>
 801377e:	42aa      	cmp	r2, r5
 8013780:	f280 8098 	bge.w	80138b4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x218>
 8013784:	1c5a      	adds	r2, r3, #1
 8013786:	f2c0 8095 	blt.w	80138b4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x218>
 801378a:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801378c:	4293      	cmp	r3, r2
 801378e:	f280 8091 	bge.w	80138b4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x218>
 8013792:	9b07      	ldr	r3, [sp, #28]
 8013794:	930d      	str	r3, [sp, #52]	; 0x34
 8013796:	9b08      	ldr	r3, [sp, #32]
 8013798:	930b      	str	r3, [sp, #44]	; 0x2c
 801379a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801379c:	2b00      	cmp	r3, #0
 801379e:	dde3      	ble.n	8013768 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xcc>
 80137a0:	9825      	ldr	r0, [sp, #148]	; 0x94
 80137a2:	9b25      	ldr	r3, [sp, #148]	; 0x94
 80137a4:	1400      	asrs	r0, r0, #16
 80137a6:	ea4f 422b 	mov.w	r2, fp, asr #16
 80137aa:	f3c3 3303 	ubfx	r3, r3, #12, #4
 80137ae:	f3cb 3103 	ubfx	r1, fp, #12, #4
 80137b2:	f100 80d9 	bmi.w	8013968 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2cc>
 80137b6:	1c46      	adds	r6, r0, #1
 80137b8:	42b5      	cmp	r5, r6
 80137ba:	f340 80d7 	ble.w	801396c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2d0>
 80137be:	2a00      	cmp	r2, #0
 80137c0:	f2c0 80d4 	blt.w	801396c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2d0>
 80137c4:	9f09      	ldr	r7, [sp, #36]	; 0x24
 80137c6:	1c56      	adds	r6, r2, #1
 80137c8:	42b7      	cmp	r7, r6
 80137ca:	f340 80cf 	ble.w	801396c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2d0>
 80137ce:	fb02 0005 	mla	r0, r2, r5, r0
 80137d2:	9e0a      	ldr	r6, [sp, #40]	; 0x28
 80137d4:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80137d6:	4402      	add	r2, r0
 80137d8:	5c30      	ldrb	r0, [r6, r0]
 80137da:	eb00 0840 	add.w	r8, r0, r0, lsl #1
 80137de:	eb04 0c08 	add.w	ip, r4, r8
 80137e2:	2b00      	cmp	r3, #0
 80137e4:	f000 80b2 	beq.w	801394c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2b0>
 80137e8:	7856      	ldrb	r6, [r2, #1]
 80137ea:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 80137ee:	4426      	add	r6, r4
 80137f0:	2900      	cmp	r1, #0
 80137f2:	f000 80b3 	beq.w	801395c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2c0>
 80137f6:	1950      	adds	r0, r2, r5
 80137f8:	5d52      	ldrb	r2, [r2, r5]
 80137fa:	7840      	ldrb	r0, [r0, #1]
 80137fc:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8013800:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8013804:	4422      	add	r2, r4
 8013806:	4420      	add	r0, r4
 8013808:	b29b      	uxth	r3, r3
 801380a:	b289      	uxth	r1, r1
 801380c:	fb03 f901 	mul.w	r9, r3, r1
 8013810:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8013814:	011b      	lsls	r3, r3, #4
 8013816:	b289      	uxth	r1, r1
 8013818:	78b7      	ldrb	r7, [r6, #2]
 801381a:	f89c a002 	ldrb.w	sl, [ip, #2]
 801381e:	f89c c001 	ldrb.w	ip, [ip, #1]
 8013822:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 8013826:	eba3 0309 	sub.w	r3, r3, r9
 801382a:	b29b      	uxth	r3, r3
 801382c:	ebae 0e01 	sub.w	lr, lr, r1
 8013830:	fa1f fe8e 	uxth.w	lr, lr
 8013834:	435f      	muls	r7, r3
 8013836:	fb0e 770a 	mla	r7, lr, sl, r7
 801383a:	f892 a002 	ldrb.w	sl, [r2, #2]
 801383e:	fb01 770a 	mla	r7, r1, sl, r7
 8013842:	f890 a002 	ldrb.w	sl, [r0, #2]
 8013846:	fb09 7a0a 	mla	sl, r9, sl, r7
 801384a:	f814 7008 	ldrb.w	r7, [r4, r8]
 801384e:	f896 8000 	ldrb.w	r8, [r6]
 8013852:	7876      	ldrb	r6, [r6, #1]
 8013854:	fb03 f808 	mul.w	r8, r3, r8
 8013858:	fb0e 8807 	mla	r8, lr, r7, r8
 801385c:	7817      	ldrb	r7, [r2, #0]
 801385e:	fb01 8807 	mla	r8, r1, r7, r8
 8013862:	7807      	ldrb	r7, [r0, #0]
 8013864:	fb09 8707 	mla	r7, r9, r7, r8
 8013868:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
 801386c:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8013870:	ea4a 0707 	orr.w	r7, sl, r7
 8013874:	4373      	muls	r3, r6
 8013876:	f892 a001 	ldrb.w	sl, [r2, #1]
 801387a:	fb0e 330c 	mla	r3, lr, ip, r3
 801387e:	fb01 310a 	mla	r1, r1, sl, r3
 8013882:	f890 a001 	ldrb.w	sl, [r0, #1]
 8013886:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8013888:	fb09 1a0a 	mla	sl, r9, sl, r1
 801388c:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8013890:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8013894:	ea47 070a 	orr.w	r7, r7, sl
 8013898:	801f      	strh	r7, [r3, #0]
 801389a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801389c:	9a27      	ldr	r2, [sp, #156]	; 0x9c
 801389e:	3302      	adds	r3, #2
 80138a0:	930b      	str	r3, [sp, #44]	; 0x2c
 80138a2:	9b25      	ldr	r3, [sp, #148]	; 0x94
 80138a4:	4413      	add	r3, r2
 80138a6:	9325      	str	r3, [sp, #148]	; 0x94
 80138a8:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80138aa:	449b      	add	fp, r3
 80138ac:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80138ae:	3b01      	subs	r3, #1
 80138b0:	930d      	str	r3, [sp, #52]	; 0x34
 80138b2:	e772      	b.n	801379a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfe>
 80138b4:	9b25      	ldr	r3, [sp, #148]	; 0x94
 80138b6:	9a27      	ldr	r2, [sp, #156]	; 0x9c
 80138b8:	4413      	add	r3, r2
 80138ba:	9325      	str	r3, [sp, #148]	; 0x94
 80138bc:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80138be:	449b      	add	fp, r3
 80138c0:	9b07      	ldr	r3, [sp, #28]
 80138c2:	3b01      	subs	r3, #1
 80138c4:	9307      	str	r3, [sp, #28]
 80138c6:	9b08      	ldr	r3, [sp, #32]
 80138c8:	3302      	adds	r3, #2
 80138ca:	9308      	str	r3, [sp, #32]
 80138cc:	e71e      	b.n	801370c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x70>
 80138ce:	f47f af2f 	bne.w	8013730 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x94>
 80138d2:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80138d4:	2b00      	cmp	r3, #0
 80138d6:	f340 80e4 	ble.w	8013aa2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x406>
 80138da:	ee3a aa0c 	vadd.f32	s20, s20, s24
 80138de:	ee79 9aab 	vadd.f32	s19, s19, s23
 80138e2:	eeca 7a8a 	vdiv.f32	s15, s21, s20
 80138e6:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80138e8:	ee39 9a0b 	vadd.f32	s18, s18, s22
 80138ec:	ee29 7aa7 	vmul.f32	s14, s19, s15
 80138f0:	eef0 6a48 	vmov.f32	s13, s16
 80138f4:	ee69 7a27 	vmul.f32	s15, s18, s15
 80138f8:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80138fc:	ee37 8a48 	vsub.f32	s16, s14, s16
 8013900:	edcd 6a25 	vstr	s13, [sp, #148]	; 0x94
 8013904:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8013908:	eef0 6a68 	vmov.f32	s13, s17
 801390c:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8013910:	ee18 2a10 	vmov	r2, s16
 8013914:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8013918:	fb92 f3f3 	sdiv	r3, r2, r3
 801391c:	ee18 2a90 	vmov	r2, s17
 8013920:	9327      	str	r3, [sp, #156]	; 0x9c
 8013922:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8013924:	fb92 f3f3 	sdiv	r3, r2, r3
 8013928:	9328      	str	r3, [sp, #160]	; 0xa0
 801392a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801392c:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801392e:	3b01      	subs	r3, #1
 8013930:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8013934:	930c      	str	r3, [sp, #48]	; 0x30
 8013936:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8013938:	bf08      	it	eq
 801393a:	4613      	moveq	r3, r2
 801393c:	ee16 ba90 	vmov	fp, s13
 8013940:	9307      	str	r3, [sp, #28]
 8013942:	eef0 8a67 	vmov.f32	s17, s15
 8013946:	eeb0 8a47 	vmov.f32	s16, s14
 801394a:	e6d8      	b.n	80136fe <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x62>
 801394c:	b149      	cbz	r1, 8013962 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2c6>
 801394e:	5d52      	ldrb	r2, [r2, r5]
 8013950:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8013954:	4422      	add	r2, r4
 8013956:	4660      	mov	r0, ip
 8013958:	4666      	mov	r6, ip
 801395a:	e755      	b.n	8013808 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x16c>
 801395c:	4660      	mov	r0, ip
 801395e:	4662      	mov	r2, ip
 8013960:	e752      	b.n	8013808 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x16c>
 8013962:	4660      	mov	r0, ip
 8013964:	4662      	mov	r2, ip
 8013966:	e7f7      	b.n	8013958 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2bc>
 8013968:	1c47      	adds	r7, r0, #1
 801396a:	d196      	bne.n	801389a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1fe>
 801396c:	4285      	cmp	r5, r0
 801396e:	dd94      	ble.n	801389a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1fe>
 8013970:	1c56      	adds	r6, r2, #1
 8013972:	db92      	blt.n	801389a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1fe>
 8013974:	9e09      	ldr	r6, [sp, #36]	; 0x24
 8013976:	4296      	cmp	r6, r2
 8013978:	dd8f      	ble.n	801389a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1fe>
 801397a:	e9cd 3104 	strd	r3, r1, [sp, #16]
 801397e:	e9cd 0202 	strd	r0, r2, [sp, #8]
 8013982:	e9cd 5600 	strd	r5, r6, [sp]
 8013986:	4623      	mov	r3, r4
 8013988:	e9dd 210a 	ldrd	r2, r1, [sp, #40]	; 0x28
 801398c:	980f      	ldr	r0, [sp, #60]	; 0x3c
 801398e:	f7ff fdcb 	bl	8013528 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>
 8013992:	e782      	b.n	801389a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1fe>
 8013994:	9a25      	ldr	r2, [sp, #148]	; 0x94
 8013996:	9e0a      	ldr	r6, [sp, #40]	; 0x28
 8013998:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801399a:	1412      	asrs	r2, r2, #16
 801399c:	ea4f 402b 	mov.w	r0, fp, asr #16
 80139a0:	fb05 2000 	mla	r0, r5, r0, r2
 80139a4:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80139a6:	f816 8000 	ldrb.w	r8, [r6, r0]
 80139aa:	f3c3 3303 	ubfx	r3, r3, #12, #4
 80139ae:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 80139b2:	f3cb 3103 	ubfx	r1, fp, #12, #4
 80139b6:	4402      	add	r2, r0
 80139b8:	eb04 0c08 	add.w	ip, r4, r8
 80139bc:	2b00      	cmp	r3, #0
 80139be:	d062      	beq.n	8013a86 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3ea>
 80139c0:	7856      	ldrb	r6, [r2, #1]
 80139c2:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 80139c6:	4426      	add	r6, r4
 80139c8:	2900      	cmp	r1, #0
 80139ca:	d064      	beq.n	8013a96 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3fa>
 80139cc:	1950      	adds	r0, r2, r5
 80139ce:	5d52      	ldrb	r2, [r2, r5]
 80139d0:	7840      	ldrb	r0, [r0, #1]
 80139d2:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80139d6:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 80139da:	4422      	add	r2, r4
 80139dc:	4420      	add	r0, r4
 80139de:	b29b      	uxth	r3, r3
 80139e0:	b289      	uxth	r1, r1
 80139e2:	fb03 f901 	mul.w	r9, r3, r1
 80139e6:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 80139ea:	011b      	lsls	r3, r3, #4
 80139ec:	b289      	uxth	r1, r1
 80139ee:	78b7      	ldrb	r7, [r6, #2]
 80139f0:	f89c a002 	ldrb.w	sl, [ip, #2]
 80139f4:	f89c c001 	ldrb.w	ip, [ip, #1]
 80139f8:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 80139fc:	eba3 0309 	sub.w	r3, r3, r9
 8013a00:	b29b      	uxth	r3, r3
 8013a02:	ebae 0e01 	sub.w	lr, lr, r1
 8013a06:	fa1f fe8e 	uxth.w	lr, lr
 8013a0a:	435f      	muls	r7, r3
 8013a0c:	fb0e 770a 	mla	r7, lr, sl, r7
 8013a10:	f892 a002 	ldrb.w	sl, [r2, #2]
 8013a14:	fb01 770a 	mla	r7, r1, sl, r7
 8013a18:	f890 a002 	ldrb.w	sl, [r0, #2]
 8013a1c:	fb09 7a0a 	mla	sl, r9, sl, r7
 8013a20:	f814 7008 	ldrb.w	r7, [r4, r8]
 8013a24:	f896 8000 	ldrb.w	r8, [r6]
 8013a28:	7876      	ldrb	r6, [r6, #1]
 8013a2a:	fb03 f808 	mul.w	r8, r3, r8
 8013a2e:	fb0e 8807 	mla	r8, lr, r7, r8
 8013a32:	7817      	ldrb	r7, [r2, #0]
 8013a34:	fb01 8807 	mla	r8, r1, r7, r8
 8013a38:	7807      	ldrb	r7, [r0, #0]
 8013a3a:	fb09 8707 	mla	r7, r9, r7, r8
 8013a3e:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
 8013a42:	4373      	muls	r3, r6
 8013a44:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8013a48:	7856      	ldrb	r6, [r2, #1]
 8013a4a:	9a27      	ldr	r2, [sp, #156]	; 0x9c
 8013a4c:	ea4a 0707 	orr.w	r7, sl, r7
 8013a50:	fb0e 330c 	mla	r3, lr, ip, r3
 8013a54:	f890 a001 	ldrb.w	sl, [r0, #1]
 8013a58:	fb01 3306 	mla	r3, r1, r6, r3
 8013a5c:	fb09 3a0a 	mla	sl, r9, sl, r3
 8013a60:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8013a64:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8013a66:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8013a6a:	ea47 070a 	orr.w	r7, r7, sl
 8013a6e:	f823 7b02 	strh.w	r7, [r3], #2
 8013a72:	930d      	str	r3, [sp, #52]	; 0x34
 8013a74:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8013a76:	4413      	add	r3, r2
 8013a78:	9325      	str	r3, [sp, #148]	; 0x94
 8013a7a:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8013a7c:	449b      	add	fp, r3
 8013a7e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8013a80:	3b01      	subs	r3, #1
 8013a82:	930b      	str	r3, [sp, #44]	; 0x2c
 8013a84:	e66c      	b.n	8013760 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xc4>
 8013a86:	b149      	cbz	r1, 8013a9c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x400>
 8013a88:	5d52      	ldrb	r2, [r2, r5]
 8013a8a:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8013a8e:	4422      	add	r2, r4
 8013a90:	4660      	mov	r0, ip
 8013a92:	4666      	mov	r6, ip
 8013a94:	e7a3      	b.n	80139de <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x342>
 8013a96:	4660      	mov	r0, ip
 8013a98:	4662      	mov	r2, ip
 8013a9a:	e7a0      	b.n	80139de <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x342>
 8013a9c:	4660      	mov	r0, ip
 8013a9e:	4662      	mov	r2, ip
 8013aa0:	e7f7      	b.n	8013a92 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3f6>
 8013aa2:	b011      	add	sp, #68	; 0x44
 8013aa4:	ecbd 8b0a 	vpop	{d8-d12}
 8013aa8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08013aac <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>:
 8013aac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013ab0:	8808      	ldrh	r0, [r1, #0]
 8013ab2:	b085      	sub	sp, #20
 8013ab4:	1206      	asrs	r6, r0, #8
 8013ab6:	e9dd 5410 	ldrd	r5, r4, [sp, #64]	; 0x40
 8013aba:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8013abe:	9600      	str	r6, [sp, #0]
 8013ac0:	f9bd c038 	ldrsh.w	ip, [sp, #56]	; 0x38
 8013ac4:	f9bd 903c 	ldrsh.w	r9, [sp, #60]	; 0x3c
 8013ac8:	f89d 704c 	ldrb.w	r7, [sp, #76]	; 0x4c
 8013acc:	10c6      	asrs	r6, r0, #3
 8013ace:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8013ad2:	9601      	str	r6, [sp, #4]
 8013ad4:	00c0      	lsls	r0, r0, #3
 8013ad6:	fb04 560c 	mla	r6, r4, ip, r5
 8013ada:	b2c0      	uxtb	r0, r0
 8013adc:	4692      	mov	sl, r2
 8013ade:	eb02 0e06 	add.w	lr, r2, r6
 8013ae2:	9a00      	ldr	r2, [sp, #0]
 8013ae4:	9002      	str	r0, [sp, #8]
 8013ae6:	f040 407f 	orr.w	r0, r0, #4278190080	; 0xff000000
 8013aea:	ea40 4002 	orr.w	r0, r0, r2, lsl #16
 8013aee:	9a01      	ldr	r2, [sp, #4]
 8013af0:	2c00      	cmp	r4, #0
 8013af2:	4698      	mov	r8, r3
 8013af4:	ea40 2002 	orr.w	r0, r0, r2, lsl #8
 8013af8:	f89d 3048 	ldrb.w	r3, [sp, #72]	; 0x48
 8013afc:	db3e      	blt.n	8013b7c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xd0>
 8013afe:	45a1      	cmp	r9, r4
 8013b00:	dd3c      	ble.n	8013b7c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xd0>
 8013b02:	2d00      	cmp	r5, #0
 8013b04:	db38      	blt.n	8013b78 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xcc>
 8013b06:	45ac      	cmp	ip, r5
 8013b08:	dd36      	ble.n	8013b78 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xcc>
 8013b0a:	f81a 2006 	ldrb.w	r2, [sl, r6]
 8013b0e:	f858 2022 	ldr.w	r2, [r8, r2, lsl #2]
 8013b12:	1c6e      	adds	r6, r5, #1
 8013b14:	d435      	bmi.n	8013b82 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xd6>
 8013b16:	45b4      	cmp	ip, r6
 8013b18:	dd33      	ble.n	8013b82 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xd6>
 8013b1a:	b393      	cbz	r3, 8013b82 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xd6>
 8013b1c:	f89e 6001 	ldrb.w	r6, [lr, #1]
 8013b20:	f858 6026 	ldr.w	r6, [r8, r6, lsl #2]
 8013b24:	3401      	adds	r4, #1
 8013b26:	d430      	bmi.n	8013b8a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xde>
 8013b28:	45a1      	cmp	r9, r4
 8013b2a:	dd2e      	ble.n	8013b8a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xde>
 8013b2c:	b36f      	cbz	r7, 8013b8a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xde>
 8013b2e:	2d00      	cmp	r5, #0
 8013b30:	db29      	blt.n	8013b86 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xda>
 8013b32:	45ac      	cmp	ip, r5
 8013b34:	dd27      	ble.n	8013b86 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xda>
 8013b36:	f81e 400c 	ldrb.w	r4, [lr, ip]
 8013b3a:	f858 4024 	ldr.w	r4, [r8, r4, lsl #2]
 8013b3e:	3501      	adds	r5, #1
 8013b40:	d407      	bmi.n	8013b52 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xa6>
 8013b42:	45ac      	cmp	ip, r5
 8013b44:	dd05      	ble.n	8013b52 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xa6>
 8013b46:	b123      	cbz	r3, 8013b52 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xa6>
 8013b48:	44f4      	add	ip, lr
 8013b4a:	f89c 0001 	ldrb.w	r0, [ip, #1]
 8013b4e:	f858 0020 	ldr.w	r0, [r8, r0, lsl #2]
 8013b52:	2b0f      	cmp	r3, #15
 8013b54:	ea4f 6b12 	mov.w	fp, r2, lsr #24
 8013b58:	ea4f 6a16 	mov.w	sl, r6, lsr #24
 8013b5c:	ea4f 6914 	mov.w	r9, r4, lsr #24
 8013b60:	ea4f 6810 	mov.w	r8, r0, lsr #24
 8013b64:	d801      	bhi.n	8013b6a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xbe>
 8013b66:	2f0f      	cmp	r7, #15
 8013b68:	d911      	bls.n	8013b8e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xe2>
 8013b6a:	4b7f      	ldr	r3, [pc, #508]	; (8013d68 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x2bc>)
 8013b6c:	4a7f      	ldr	r2, [pc, #508]	; (8013d6c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x2c0>)
 8013b6e:	4880      	ldr	r0, [pc, #512]	; (8013d70 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x2c4>)
 8013b70:	f240 210d 	movw	r1, #525	; 0x20d
 8013b74:	f005 fc4a 	bl	801940c <__assert_func>
 8013b78:	4602      	mov	r2, r0
 8013b7a:	e7ca      	b.n	8013b12 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x66>
 8013b7c:	4606      	mov	r6, r0
 8013b7e:	4602      	mov	r2, r0
 8013b80:	e7d0      	b.n	8013b24 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x78>
 8013b82:	4606      	mov	r6, r0
 8013b84:	e7ce      	b.n	8013b24 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x78>
 8013b86:	4604      	mov	r4, r0
 8013b88:	e7d9      	b.n	8013b3e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x92>
 8013b8a:	4604      	mov	r4, r0
 8013b8c:	e7e1      	b.n	8013b52 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xa6>
 8013b8e:	b29b      	uxth	r3, r3
 8013b90:	b2bf      	uxth	r7, r7
 8013b92:	fb03 fe07 	mul.w	lr, r3, r7
 8013b96:	ebce 1707 	rsb	r7, lr, r7, lsl #4
 8013b9a:	011b      	lsls	r3, r3, #4
 8013b9c:	eba3 0c0e 	sub.w	ip, r3, lr
 8013ba0:	b2bf      	uxth	r7, r7
 8013ba2:	f5c3 7580 	rsb	r5, r3, #256	; 0x100
 8013ba6:	fa1f fc8c 	uxth.w	ip, ip
 8013baa:	1bed      	subs	r5, r5, r7
 8013bac:	b2ad      	uxth	r5, r5
 8013bae:	fb0c f30a 	mul.w	r3, ip, sl
 8013bb2:	fb05 330b 	mla	r3, r5, fp, r3
 8013bb6:	fb07 3309 	mla	r3, r7, r9, r3
 8013bba:	fb0e 3308 	mla	r3, lr, r8, r3
 8013bbe:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8013bc2:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 8013bc6:	9303      	str	r3, [sp, #12]
 8013bc8:	d018      	beq.n	8013bfc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x150>
 8013bca:	f002 13ff 	and.w	r3, r2, #16711935	; 0xff00ff
 8013bce:	fb0b f303 	mul.w	r3, fp, r3
 8013bd2:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8013bd6:	fb0b fb02 	mul.w	fp, fp, r2
 8013bda:	0a1a      	lsrs	r2, r3, #8
 8013bdc:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8013be0:	f103 1301 	add.w	r3, r3, #65537	; 0x10001
 8013be4:	441a      	add	r2, r3
 8013be6:	f50b 7380 	add.w	r3, fp, #256	; 0x100
 8013bea:	eb03 231b 	add.w	r3, r3, fp, lsr #8
 8013bee:	0a12      	lsrs	r2, r2, #8
 8013bf0:	0a1b      	lsrs	r3, r3, #8
 8013bf2:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8013bf6:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8013bfa:	431a      	orrs	r2, r3
 8013bfc:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 8013c00:	d019      	beq.n	8013c36 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x18a>
 8013c02:	f006 1bff 	and.w	fp, r6, #16711935	; 0xff00ff
 8013c06:	fb0a fb0b 	mul.w	fp, sl, fp
 8013c0a:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8013c0e:	fb0a fa06 	mul.w	sl, sl, r6
 8013c12:	ea4f 261b 	mov.w	r6, fp, lsr #8
 8013c16:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8013c1a:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8013c1e:	f50a 7380 	add.w	r3, sl, #256	; 0x100
 8013c22:	445e      	add	r6, fp
 8013c24:	eb03 231a 	add.w	r3, r3, sl, lsr #8
 8013c28:	0a36      	lsrs	r6, r6, #8
 8013c2a:	0a1b      	lsrs	r3, r3, #8
 8013c2c:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8013c30:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8013c34:	431e      	orrs	r6, r3
 8013c36:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8013c3a:	d019      	beq.n	8013c70 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x1c4>
 8013c3c:	f004 1aff 	and.w	sl, r4, #16711935	; 0xff00ff
 8013c40:	fb09 fa0a 	mul.w	sl, r9, sl
 8013c44:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 8013c48:	fb09 f904 	mul.w	r9, r9, r4
 8013c4c:	ea4f 241a 	mov.w	r4, sl, lsr #8
 8013c50:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8013c54:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8013c58:	f509 7380 	add.w	r3, r9, #256	; 0x100
 8013c5c:	4454      	add	r4, sl
 8013c5e:	eb03 2319 	add.w	r3, r3, r9, lsr #8
 8013c62:	0a24      	lsrs	r4, r4, #8
 8013c64:	0a1b      	lsrs	r3, r3, #8
 8013c66:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8013c6a:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8013c6e:	431c      	orrs	r4, r3
 8013c70:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8013c74:	d019      	beq.n	8013caa <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x1fe>
 8013c76:	f000 19ff 	and.w	r9, r0, #16711935	; 0xff00ff
 8013c7a:	fb08 f909 	mul.w	r9, r8, r9
 8013c7e:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8013c82:	fb08 f800 	mul.w	r8, r8, r0
 8013c86:	ea4f 2019 	mov.w	r0, r9, lsr #8
 8013c8a:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 8013c8e:	f109 1901 	add.w	r9, r9, #65537	; 0x10001
 8013c92:	f508 7380 	add.w	r3, r8, #256	; 0x100
 8013c96:	4448      	add	r0, r9
 8013c98:	eb03 2318 	add.w	r3, r3, r8, lsr #8
 8013c9c:	0a00      	lsrs	r0, r0, #8
 8013c9e:	0a1b      	lsrs	r3, r3, #8
 8013ca0:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 8013ca4:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8013ca8:	4318      	orrs	r0, r3
 8013caa:	f006 18ff 	and.w	r8, r6, #16711935	; 0xff00ff
 8013cae:	f002 13ff 	and.w	r3, r2, #16711935	; 0xff00ff
 8013cb2:	fb0c f808 	mul.w	r8, ip, r8
 8013cb6:	fb05 8803 	mla	r8, r5, r3, r8
 8013cba:	f004 13ff 	and.w	r3, r4, #16711935	; 0xff00ff
 8013cbe:	fb07 8803 	mla	r8, r7, r3, r8
 8013cc2:	f000 13ff 	and.w	r3, r0, #16711935	; 0xff00ff
 8013cc6:	fb0e 8303 	mla	r3, lr, r3, r8
 8013cca:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8013cce:	fb0c f606 	mul.w	r6, ip, r6
 8013cd2:	0a1b      	lsrs	r3, r3, #8
 8013cd4:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8013cd8:	fb05 6202 	mla	r2, r5, r2, r6
 8013cdc:	f003 18ff 	and.w	r8, r3, #16711935	; 0xff00ff
 8013ce0:	f404 437f 	and.w	r3, r4, #65280	; 0xff00
 8013ce4:	fb07 2703 	mla	r7, r7, r3, r2
 8013ce8:	f89d 2050 	ldrb.w	r2, [sp, #80]	; 0x50
 8013cec:	b295      	uxth	r5, r2
 8013cee:	9a03      	ldr	r2, [sp, #12]
 8013cf0:	f400 437f 	and.w	r3, r0, #65280	; 0xff00
 8013cf4:	436a      	muls	r2, r5
 8013cf6:	fb0e 7303 	mla	r3, lr, r3, r7
 8013cfa:	1c50      	adds	r0, r2, #1
 8013cfc:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 8013d00:	0a1b      	lsrs	r3, r3, #8
 8013d02:	9a00      	ldr	r2, [sp, #0]
 8013d04:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8013d08:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 8013d0c:	ea48 0303 	orr.w	r3, r8, r3
 8013d10:	b2c0      	uxtb	r0, r0
 8013d12:	fb12 f200 	smulbb	r2, r2, r0
 8013d16:	0c1e      	lsrs	r6, r3, #16
 8013d18:	fb06 2605 	mla	r6, r6, r5, r2
 8013d1c:	9a01      	ldr	r2, [sp, #4]
 8013d1e:	f3c3 2407 	ubfx	r4, r3, #8, #8
 8013d22:	fb12 f200 	smulbb	r2, r2, r0
 8013d26:	fb04 2205 	mla	r2, r4, r5, r2
 8013d2a:	b294      	uxth	r4, r2
 8013d2c:	9a02      	ldr	r2, [sp, #8]
 8013d2e:	b2db      	uxtb	r3, r3
 8013d30:	fb12 f200 	smulbb	r2, r2, r0
 8013d34:	fb03 2205 	mla	r2, r3, r5, r2
 8013d38:	b2b6      	uxth	r6, r6
 8013d3a:	b292      	uxth	r2, r2
 8013d3c:	1c73      	adds	r3, r6, #1
 8013d3e:	1c50      	adds	r0, r2, #1
 8013d40:	eb03 2316 	add.w	r3, r3, r6, lsr #8
 8013d44:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 8013d48:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8013d4c:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 8013d50:	4313      	orrs	r3, r2
 8013d52:	1c62      	adds	r2, r4, #1
 8013d54:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 8013d58:	0952      	lsrs	r2, r2, #5
 8013d5a:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8013d5e:	4313      	orrs	r3, r2
 8013d60:	800b      	strh	r3, [r1, #0]
 8013d62:	b005      	add	sp, #20
 8013d64:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013d68:	0801d135 	.word	0x0801d135
 8013d6c:	0801d68d 	.word	0x0801d68d
 8013d70:	0801d1bd 	.word	0x0801d1bd

08013d74 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 8013d74:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013d78:	ed2d 8b08 	vpush	{d8-d11}
 8013d7c:	b09b      	sub	sp, #108	; 0x6c
 8013d7e:	eeb0 aa40 	vmov.f32	s20, s0
 8013d82:	9309      	str	r3, [sp, #36]	; 0x24
 8013d84:	f9bd 30d4 	ldrsh.w	r3, [sp, #212]	; 0xd4
 8013d88:	9d31      	ldr	r5, [sp, #196]	; 0xc4
 8013d8a:	9311      	str	r3, [sp, #68]	; 0x44
 8013d8c:	f89d 30dc 	ldrb.w	r3, [sp, #220]	; 0xdc
 8013d90:	9114      	str	r1, [sp, #80]	; 0x50
 8013d92:	9317      	str	r3, [sp, #92]	; 0x5c
 8013d94:	e9dd 1332 	ldrd	r1, r3, [sp, #200]	; 0xc8
 8013d98:	9019      	str	r0, [sp, #100]	; 0x64
 8013d9a:	6868      	ldr	r0, [r5, #4]
 8013d9c:	9218      	str	r2, [sp, #96]	; 0x60
 8013d9e:	fb00 1303 	mla	r3, r0, r3, r1
 8013da2:	6829      	ldr	r1, [r5, #0]
 8013da4:	9a36      	ldr	r2, [sp, #216]	; 0xd8
 8013da6:	f9bd 40d0 	ldrsh.w	r4, [sp, #208]	; 0xd0
 8013daa:	eb01 0343 	add.w	r3, r1, r3, lsl #1
 8013dae:	930c      	str	r3, [sp, #48]	; 0x30
 8013db0:	6813      	ldr	r3, [r2, #0]
 8013db2:	9313      	str	r3, [sp, #76]	; 0x4c
 8013db4:	6853      	ldr	r3, [r2, #4]
 8013db6:	3304      	adds	r3, #4
 8013db8:	eef0 9a60 	vmov.f32	s19, s1
 8013dbc:	eeb0 9a41 	vmov.f32	s18, s2
 8013dc0:	eeb0 8a62 	vmov.f32	s16, s5
 8013dc4:	eef0 8a43 	vmov.f32	s17, s6
 8013dc8:	eef0 ba44 	vmov.f32	s23, s8
 8013dcc:	eeb0 ba64 	vmov.f32	s22, s9
 8013dd0:	eef0 aa45 	vmov.f32	s21, s10
 8013dd4:	9308      	str	r3, [sp, #32]
 8013dd6:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8013dd8:	2b00      	cmp	r3, #0
 8013dda:	dc03      	bgt.n	8013de4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x70>
 8013ddc:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8013dde:	2b00      	cmp	r3, #0
 8013de0:	f340 8363 	ble.w	80144aa <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x736>
 8013de4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8013de6:	2b00      	cmp	r3, #0
 8013de8:	f340 81ad 	ble.w	8014146 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3d2>
 8013dec:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 8013dee:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8013df0:	1412      	asrs	r2, r2, #16
 8013df2:	ea4f 4323 	mov.w	r3, r3, asr #16
 8013df6:	d42f      	bmi.n	8013e58 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe4>
 8013df8:	1c51      	adds	r1, r2, #1
 8013dfa:	428c      	cmp	r4, r1
 8013dfc:	dd2f      	ble.n	8013e5e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xea>
 8013dfe:	2b00      	cmp	r3, #0
 8013e00:	db2d      	blt.n	8013e5e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xea>
 8013e02:	9811      	ldr	r0, [sp, #68]	; 0x44
 8013e04:	1c59      	adds	r1, r3, #1
 8013e06:	4288      	cmp	r0, r1
 8013e08:	dd29      	ble.n	8013e5e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xea>
 8013e0a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8013e0c:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 8013e0e:	992d      	ldr	r1, [sp, #180]	; 0xb4
 8013e10:	3b01      	subs	r3, #1
 8013e12:	fb02 1203 	mla	r2, r2, r3, r1
 8013e16:	1412      	asrs	r2, r2, #16
 8013e18:	d42b      	bmi.n	8013e72 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfe>
 8013e1a:	3201      	adds	r2, #1
 8013e1c:	4294      	cmp	r4, r2
 8013e1e:	dd28      	ble.n	8013e72 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfe>
 8013e20:	9a30      	ldr	r2, [sp, #192]	; 0xc0
 8013e22:	992e      	ldr	r1, [sp, #184]	; 0xb8
 8013e24:	fb02 1303 	mla	r3, r2, r3, r1
 8013e28:	141b      	asrs	r3, r3, #16
 8013e2a:	d422      	bmi.n	8013e72 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfe>
 8013e2c:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8013e2e:	3301      	adds	r3, #1
 8013e30:	429a      	cmp	r2, r3
 8013e32:	dd1e      	ble.n	8013e72 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfe>
 8013e34:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8013e36:	f8dd a030 	ldr.w	sl, [sp, #48]	; 0x30
 8013e3a:	f8bd b05c 	ldrh.w	fp, [sp, #92]	; 0x5c
 8013e3e:	9312      	str	r3, [sp, #72]	; 0x48
 8013e40:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8013e42:	2b00      	cmp	r3, #0
 8013e44:	f300 81ea 	bgt.w	801421c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4a8>
 8013e48:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8013e4a:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8013e4c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8013e50:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8013e54:	930c      	str	r3, [sp, #48]	; 0x30
 8013e56:	e178      	b.n	801414a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3d6>
 8013e58:	1c51      	adds	r1, r2, #1
 8013e5a:	f040 8165 	bne.w	8014128 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3b4>
 8013e5e:	42a2      	cmp	r2, r4
 8013e60:	f280 8162 	bge.w	8014128 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3b4>
 8013e64:	1c5f      	adds	r7, r3, #1
 8013e66:	f2c0 815f 	blt.w	8014128 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3b4>
 8013e6a:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8013e6c:	4293      	cmp	r3, r2
 8013e6e:	f280 815b 	bge.w	8014128 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3b4>
 8013e72:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8013e74:	9316      	str	r3, [sp, #88]	; 0x58
 8013e76:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8013e78:	9312      	str	r3, [sp, #72]	; 0x48
 8013e7a:	f8bd 305c 	ldrh.w	r3, [sp, #92]	; 0x5c
 8013e7e:	9315      	str	r3, [sp, #84]	; 0x54
 8013e80:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8013e82:	2b00      	cmp	r3, #0
 8013e84:	dde0      	ble.n	8013e48 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xd4>
 8013e86:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 8013e88:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8013e8a:	f3c2 3003 	ubfx	r0, r2, #12, #4
 8013e8e:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
 8013e90:	f3c2 3103 	ubfx	r1, r2, #12, #4
 8013e94:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 8013e96:	1412      	asrs	r2, r2, #16
 8013e98:	ea4f 4323 	mov.w	r3, r3, asr #16
 8013e9c:	f100 81a5 	bmi.w	80141ea <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x476>
 8013ea0:	1c55      	adds	r5, r2, #1
 8013ea2:	42ac      	cmp	r4, r5
 8013ea4:	f340 81a3 	ble.w	80141ee <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x47a>
 8013ea8:	2b00      	cmp	r3, #0
 8013eaa:	f2c0 81a0 	blt.w	80141ee <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x47a>
 8013eae:	9f11      	ldr	r7, [sp, #68]	; 0x44
 8013eb0:	1c5d      	adds	r5, r3, #1
 8013eb2:	42af      	cmp	r7, r5
 8013eb4:	f340 819b 	ble.w	80141ee <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x47a>
 8013eb8:	fb03 2304 	mla	r3, r3, r4, r2
 8013ebc:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8013ebe:	18d5      	adds	r5, r2, r3
 8013ec0:	5cd3      	ldrb	r3, [r2, r3]
 8013ec2:	9a08      	ldr	r2, [sp, #32]
 8013ec4:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8013ec8:	0e1f      	lsrs	r7, r3, #24
 8013eca:	2800      	cmp	r0, #0
 8013ecc:	f000 817c 	beq.w	80141c8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x454>
 8013ed0:	786a      	ldrb	r2, [r5, #1]
 8013ed2:	9e08      	ldr	r6, [sp, #32]
 8013ed4:	f856 2022 	ldr.w	r2, [r6, r2, lsl #2]
 8013ed8:	920d      	str	r2, [sp, #52]	; 0x34
 8013eda:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 8013ede:	2900      	cmp	r1, #0
 8013ee0:	f000 817d 	beq.w	80141de <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x46a>
 8013ee4:	192a      	adds	r2, r5, r4
 8013ee6:	5d2d      	ldrb	r5, [r5, r4]
 8013ee8:	7852      	ldrb	r2, [r2, #1]
 8013eea:	f856 5025 	ldr.w	r5, [r6, r5, lsl #2]
 8013eee:	f856 2022 	ldr.w	r2, [r6, r2, lsl #2]
 8013ef2:	950a      	str	r5, [sp, #40]	; 0x28
 8013ef4:	ea4f 6915 	mov.w	r9, r5, lsr #24
 8013ef8:	920e      	str	r2, [sp, #56]	; 0x38
 8013efa:	0e15      	lsrs	r5, r2, #24
 8013efc:	b280      	uxth	r0, r0
 8013efe:	b289      	uxth	r1, r1
 8013f00:	fb00 fa01 	mul.w	sl, r0, r1
 8013f04:	ebca 1101 	rsb	r1, sl, r1, lsl #4
 8013f08:	0100      	lsls	r0, r0, #4
 8013f0a:	eba0 080a 	sub.w	r8, r0, sl
 8013f0e:	b289      	uxth	r1, r1
 8013f10:	f5c0 7280 	rsb	r2, r0, #256	; 0x100
 8013f14:	fa1f f888 	uxth.w	r8, r8
 8013f18:	1a52      	subs	r2, r2, r1
 8013f1a:	b292      	uxth	r2, r2
 8013f1c:	fb08 f00e 	mul.w	r0, r8, lr
 8013f20:	fb02 0007 	mla	r0, r2, r7, r0
 8013f24:	fb01 0009 	mla	r0, r1, r9, r0
 8013f28:	fb0a 0005 	mla	r0, sl, r5, r0
 8013f2c:	f3c0 2007 	ubfx	r0, r0, #8, #8
 8013f30:	2800      	cmp	r0, #0
 8013f32:	f000 80ea 	beq.w	801410a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x396>
 8013f36:	2fff      	cmp	r7, #255	; 0xff
 8013f38:	d01a      	beq.n	8013f70 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1fc>
 8013f3a:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 8013f3e:	fb07 fc0c 	mul.w	ip, r7, ip
 8013f42:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8013f46:	435f      	muls	r7, r3
 8013f48:	ea4f 231c 	mov.w	r3, ip, lsr #8
 8013f4c:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8013f50:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8013f54:	f507 7b80 	add.w	fp, r7, #256	; 0x100
 8013f58:	4463      	add	r3, ip
 8013f5a:	eb0b 2b17 	add.w	fp, fp, r7, lsr #8
 8013f5e:	0a1b      	lsrs	r3, r3, #8
 8013f60:	ea4f 2b1b 	mov.w	fp, fp, lsr #8
 8013f64:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8013f68:	f40b 4b7f 	and.w	fp, fp, #65280	; 0xff00
 8013f6c:	ea43 030b 	orr.w	r3, r3, fp
 8013f70:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 8013f74:	d01e      	beq.n	8013fb4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x240>
 8013f76:	9e0d      	ldr	r6, [sp, #52]	; 0x34
 8013f78:	f006 1bff 	and.w	fp, r6, #16711935	; 0xff00ff
 8013f7c:	fb0e fb0b 	mul.w	fp, lr, fp
 8013f80:	f406 477f 	and.w	r7, r6, #65280	; 0xff00
 8013f84:	fb0e fe07 	mul.w	lr, lr, r7
 8013f88:	ea4f 2c1b 	mov.w	ip, fp, lsr #8
 8013f8c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8013f90:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8013f94:	f50e 7780 	add.w	r7, lr, #256	; 0x100
 8013f98:	44dc      	add	ip, fp
 8013f9a:	eb07 2e1e 	add.w	lr, r7, lr, lsr #8
 8013f9e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8013fa2:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8013fa6:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8013faa:	f40e 4e7f 	and.w	lr, lr, #65280	; 0xff00
 8013fae:	ea4c 060e 	orr.w	r6, ip, lr
 8013fb2:	960d      	str	r6, [sp, #52]	; 0x34
 8013fb4:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8013fb8:	d01e      	beq.n	8013ff8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x284>
 8013fba:	9e0a      	ldr	r6, [sp, #40]	; 0x28
 8013fbc:	f006 1eff 	and.w	lr, r6, #16711935	; 0xff00ff
 8013fc0:	fb09 fe0e 	mul.w	lr, r9, lr
 8013fc4:	f406 477f 	and.w	r7, r6, #65280	; 0xff00
 8013fc8:	fb09 f907 	mul.w	r9, r9, r7
 8013fcc:	ea4f 2c1e 	mov.w	ip, lr, lsr #8
 8013fd0:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8013fd4:	f10e 1e01 	add.w	lr, lr, #65537	; 0x10001
 8013fd8:	f509 7780 	add.w	r7, r9, #256	; 0x100
 8013fdc:	44f4      	add	ip, lr
 8013fde:	eb07 2919 	add.w	r9, r7, r9, lsr #8
 8013fe2:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8013fe6:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8013fea:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8013fee:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 8013ff2:	ea4c 0609 	orr.w	r6, ip, r9
 8013ff6:	960a      	str	r6, [sp, #40]	; 0x28
 8013ff8:	2dff      	cmp	r5, #255	; 0xff
 8013ffa:	d01c      	beq.n	8014036 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2c2>
 8013ffc:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 8013ffe:	f006 1eff 	and.w	lr, r6, #16711935	; 0xff00ff
 8014002:	fb05 fe0e 	mul.w	lr, r5, lr
 8014006:	f406 477f 	and.w	r7, r6, #65280	; 0xff00
 801400a:	437d      	muls	r5, r7
 801400c:	ea4f 2c1e 	mov.w	ip, lr, lsr #8
 8014010:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8014014:	f10e 1e01 	add.w	lr, lr, #65537	; 0x10001
 8014018:	f505 7780 	add.w	r7, r5, #256	; 0x100
 801401c:	44f4      	add	ip, lr
 801401e:	eb07 2515 	add.w	r5, r7, r5, lsr #8
 8014022:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8014026:	0a2d      	lsrs	r5, r5, #8
 8014028:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801402c:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 8014030:	ea4c 0505 	orr.w	r5, ip, r5
 8014034:	950e      	str	r5, [sp, #56]	; 0x38
 8014036:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8014038:	9e0a      	ldr	r6, [sp, #40]	; 0x28
 801403a:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801403e:	f003 17ff 	and.w	r7, r3, #16711935	; 0xff00ff
 8014042:	fb08 f505 	mul.w	r5, r8, r5
 8014046:	fb02 5507 	mla	r5, r2, r7, r5
 801404a:	f006 17ff 	and.w	r7, r6, #16711935	; 0xff00ff
 801404e:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 8014050:	fb01 5507 	mla	r5, r1, r7, r5
 8014054:	f006 17ff 	and.w	r7, r6, #16711935	; 0xff00ff
 8014058:	9e0d      	ldr	r6, [sp, #52]	; 0x34
 801405a:	fb0a 5507 	mla	r5, sl, r7, r5
 801405e:	f406 477f 	and.w	r7, r6, #65280	; 0xff00
 8014062:	fb08 f807 	mul.w	r8, r8, r7
 8014066:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801406a:	fb02 8303 	mla	r3, r2, r3, r8
 801406e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8014070:	9e15      	ldr	r6, [sp, #84]	; 0x54
 8014072:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 8014076:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8014078:	fb01 330c 	mla	r3, r1, ip, r3
 801407c:	f402 417f 	and.w	r1, r2, #65280	; 0xff00
 8014080:	fb0a 3a01 	mla	sl, sl, r1, r3
 8014084:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8014086:	9a15      	ldr	r2, [sp, #84]	; 0x54
 8014088:	881f      	ldrh	r7, [r3, #0]
 801408a:	9b15      	ldr	r3, [sp, #84]	; 0x54
 801408c:	0a2d      	lsrs	r5, r5, #8
 801408e:	4343      	muls	r3, r0
 8014090:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8014094:	1c58      	adds	r0, r3, #1
 8014096:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801409a:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801409e:	ea45 050a 	orr.w	r5, r5, sl
 80140a2:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 80140a6:	0c29      	lsrs	r1, r5, #16
 80140a8:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 80140ac:	123b      	asrs	r3, r7, #8
 80140ae:	b2c0      	uxtb	r0, r0
 80140b0:	fb11 f102 	smulbb	r1, r1, r2
 80140b4:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 80140b8:	fb03 1300 	mla	r3, r3, r0, r1
 80140bc:	b299      	uxth	r1, r3
 80140be:	10fa      	asrs	r2, r7, #3
 80140c0:	f3c5 2307 	ubfx	r3, r5, #8, #8
 80140c4:	fb13 f306 	smulbb	r3, r3, r6
 80140c8:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 80140cc:	fb02 3200 	mla	r2, r2, r0, r3
 80140d0:	b2ed      	uxtb	r5, r5
 80140d2:	00fb      	lsls	r3, r7, #3
 80140d4:	b2db      	uxtb	r3, r3
 80140d6:	fb15 f506 	smulbb	r5, r5, r6
 80140da:	fb03 5500 	mla	r5, r3, r0, r5
 80140de:	b292      	uxth	r2, r2
 80140e0:	b2ad      	uxth	r5, r5
 80140e2:	1c4b      	adds	r3, r1, #1
 80140e4:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 80140e8:	1c68      	adds	r0, r5, #1
 80140ea:	1c51      	adds	r1, r2, #1
 80140ec:	eb00 2515 	add.w	r5, r0, r5, lsr #8
 80140f0:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 80140f4:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 80140f8:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 80140fc:	0952      	lsrs	r2, r2, #5
 80140fe:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8014102:	432b      	orrs	r3, r5
 8014104:	4313      	orrs	r3, r2
 8014106:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8014108:	8013      	strh	r3, [r2, #0]
 801410a:	9b12      	ldr	r3, [sp, #72]	; 0x48
 801410c:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 801410e:	3302      	adds	r3, #2
 8014110:	9312      	str	r3, [sp, #72]	; 0x48
 8014112:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8014114:	4413      	add	r3, r2
 8014116:	932d      	str	r3, [sp, #180]	; 0xb4
 8014118:	9a30      	ldr	r2, [sp, #192]	; 0xc0
 801411a:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 801411c:	4413      	add	r3, r2
 801411e:	932e      	str	r3, [sp, #184]	; 0xb8
 8014120:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8014122:	3b01      	subs	r3, #1
 8014124:	9316      	str	r3, [sp, #88]	; 0x58
 8014126:	e6ab      	b.n	8013e80 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x10c>
 8014128:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 801412a:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 801412c:	4413      	add	r3, r2
 801412e:	932d      	str	r3, [sp, #180]	; 0xb4
 8014130:	9a30      	ldr	r2, [sp, #192]	; 0xc0
 8014132:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8014134:	4413      	add	r3, r2
 8014136:	932e      	str	r3, [sp, #184]	; 0xb8
 8014138:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801413a:	3b01      	subs	r3, #1
 801413c:	9309      	str	r3, [sp, #36]	; 0x24
 801413e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8014140:	3302      	adds	r3, #2
 8014142:	930c      	str	r3, [sp, #48]	; 0x30
 8014144:	e64e      	b.n	8013de4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x70>
 8014146:	f47f ae60 	bne.w	8013e0a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x96>
 801414a:	9b14      	ldr	r3, [sp, #80]	; 0x50
 801414c:	2b00      	cmp	r3, #0
 801414e:	f340 81ac 	ble.w	80144aa <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x736>
 8014152:	ee3a aa2b 	vadd.f32	s20, s20, s23
 8014156:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801415a:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 801415e:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8014160:	ee79 9a8b 	vadd.f32	s19, s19, s22
 8014164:	ee39 9a2a 	vadd.f32	s18, s18, s21
 8014168:	ee29 7aa7 	vmul.f32	s14, s19, s15
 801416c:	eef0 6a48 	vmov.f32	s13, s16
 8014170:	ee69 7a27 	vmul.f32	s15, s18, s15
 8014174:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8014178:	ee37 8a48 	vsub.f32	s16, s14, s16
 801417c:	edcd 6a2d 	vstr	s13, [sp, #180]	; 0xb4
 8014180:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8014184:	eef0 6a68 	vmov.f32	s13, s17
 8014188:	ee77 8ae8 	vsub.f32	s17, s15, s17
 801418c:	ee18 2a10 	vmov	r2, s16
 8014190:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8014194:	fb92 f3f3 	sdiv	r3, r2, r3
 8014198:	ee18 2a90 	vmov	r2, s17
 801419c:	932f      	str	r3, [sp, #188]	; 0xbc
 801419e:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80141a0:	fb92 f3f3 	sdiv	r3, r2, r3
 80141a4:	9330      	str	r3, [sp, #192]	; 0xc0
 80141a6:	9b14      	ldr	r3, [sp, #80]	; 0x50
 80141a8:	9a18      	ldr	r2, [sp, #96]	; 0x60
 80141aa:	3b01      	subs	r3, #1
 80141ac:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80141b0:	9314      	str	r3, [sp, #80]	; 0x50
 80141b2:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80141b4:	edcd 6a2e 	vstr	s13, [sp, #184]	; 0xb8
 80141b8:	bf08      	it	eq
 80141ba:	4613      	moveq	r3, r2
 80141bc:	9309      	str	r3, [sp, #36]	; 0x24
 80141be:	eef0 8a67 	vmov.f32	s17, s15
 80141c2:	eeb0 8a47 	vmov.f32	s16, s14
 80141c6:	e606      	b.n	8013dd6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x62>
 80141c8:	b161      	cbz	r1, 80141e4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x470>
 80141ca:	5d2a      	ldrb	r2, [r5, r4]
 80141cc:	9d08      	ldr	r5, [sp, #32]
 80141ce:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 80141d2:	920a      	str	r2, [sp, #40]	; 0x28
 80141d4:	ea4f 6912 	mov.w	r9, r2, lsr #24
 80141d8:	25ff      	movs	r5, #255	; 0xff
 80141da:	46ae      	mov	lr, r5
 80141dc:	e68e      	b.n	8013efc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x188>
 80141de:	25ff      	movs	r5, #255	; 0xff
 80141e0:	46a9      	mov	r9, r5
 80141e2:	e68b      	b.n	8013efc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x188>
 80141e4:	25ff      	movs	r5, #255	; 0xff
 80141e6:	46a9      	mov	r9, r5
 80141e8:	e7f7      	b.n	80141da <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x466>
 80141ea:	1c56      	adds	r6, r2, #1
 80141ec:	d18d      	bne.n	801410a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x396>
 80141ee:	4294      	cmp	r4, r2
 80141f0:	dd8b      	ble.n	801410a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x396>
 80141f2:	1c5d      	adds	r5, r3, #1
 80141f4:	db89      	blt.n	801410a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x396>
 80141f6:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80141f8:	429d      	cmp	r5, r3
 80141fa:	dd86      	ble.n	801410a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x396>
 80141fc:	e9cd 3003 	strd	r3, r0, [sp, #12]
 8014200:	9d17      	ldr	r5, [sp, #92]	; 0x5c
 8014202:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8014204:	9202      	str	r2, [sp, #8]
 8014206:	e9cd 1505 	strd	r1, r5, [sp, #20]
 801420a:	e9cd 4300 	strd	r4, r3, [sp]
 801420e:	e9dd 1212 	ldrd	r1, r2, [sp, #72]	; 0x48
 8014212:	9b08      	ldr	r3, [sp, #32]
 8014214:	9819      	ldr	r0, [sp, #100]	; 0x64
 8014216:	f7ff fc49 	bl	8013aac <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>
 801421a:	e776      	b.n	801410a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x396>
 801421c:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 801421e:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 8014220:	f3c3 3103 	ubfx	r1, r3, #12, #4
 8014224:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8014226:	1412      	asrs	r2, r2, #16
 8014228:	f3c3 3003 	ubfx	r0, r3, #12, #4
 801422c:	141b      	asrs	r3, r3, #16
 801422e:	fb04 2303 	mla	r3, r4, r3, r2
 8014232:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8014234:	18d5      	adds	r5, r2, r3
 8014236:	5cd3      	ldrb	r3, [r2, r3]
 8014238:	9a08      	ldr	r2, [sp, #32]
 801423a:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 801423e:	0e1e      	lsrs	r6, r3, #24
 8014240:	2900      	cmp	r1, #0
 8014242:	f000 8121 	beq.w	8014488 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x714>
 8014246:	786a      	ldrb	r2, [r5, #1]
 8014248:	9f08      	ldr	r7, [sp, #32]
 801424a:	f857 2022 	ldr.w	r2, [r7, r2, lsl #2]
 801424e:	920f      	str	r2, [sp, #60]	; 0x3c
 8014250:	ea4f 6c12 	mov.w	ip, r2, lsr #24
 8014254:	2800      	cmp	r0, #0
 8014256:	f000 8122 	beq.w	801449e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x72a>
 801425a:	192a      	adds	r2, r5, r4
 801425c:	5d2d      	ldrb	r5, [r5, r4]
 801425e:	7852      	ldrb	r2, [r2, #1]
 8014260:	f857 5025 	ldr.w	r5, [r7, r5, lsl #2]
 8014264:	f857 2022 	ldr.w	r2, [r7, r2, lsl #2]
 8014268:	950b      	str	r5, [sp, #44]	; 0x2c
 801426a:	ea4f 6815 	mov.w	r8, r5, lsr #24
 801426e:	9210      	str	r2, [sp, #64]	; 0x40
 8014270:	0e15      	lsrs	r5, r2, #24
 8014272:	b289      	uxth	r1, r1
 8014274:	b280      	uxth	r0, r0
 8014276:	fb01 f900 	mul.w	r9, r1, r0
 801427a:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 801427e:	0109      	lsls	r1, r1, #4
 8014280:	eba1 0e09 	sub.w	lr, r1, r9
 8014284:	b280      	uxth	r0, r0
 8014286:	f5c1 7280 	rsb	r2, r1, #256	; 0x100
 801428a:	fa1f fe8e 	uxth.w	lr, lr
 801428e:	1a12      	subs	r2, r2, r0
 8014290:	b292      	uxth	r2, r2
 8014292:	fb0e f10c 	mul.w	r1, lr, ip
 8014296:	fb02 1106 	mla	r1, r2, r6, r1
 801429a:	fb00 1108 	mla	r1, r0, r8, r1
 801429e:	fb09 1105 	mla	r1, r9, r5, r1
 80142a2:	f3c1 2107 	ubfx	r1, r1, #8, #8
 80142a6:	2900      	cmp	r1, #0
 80142a8:	f000 80e0 	beq.w	801446c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6f8>
 80142ac:	2eff      	cmp	r6, #255	; 0xff
 80142ae:	d016      	beq.n	80142de <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x56a>
 80142b0:	f003 17ff 	and.w	r7, r3, #16711935	; 0xff00ff
 80142b4:	4377      	muls	r7, r6
 80142b6:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80142ba:	435e      	muls	r6, r3
 80142bc:	0a3b      	lsrs	r3, r7, #8
 80142be:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80142c2:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 80142c6:	443b      	add	r3, r7
 80142c8:	f506 7780 	add.w	r7, r6, #256	; 0x100
 80142cc:	eb07 2716 	add.w	r7, r7, r6, lsr #8
 80142d0:	0a1b      	lsrs	r3, r3, #8
 80142d2:	0a3f      	lsrs	r7, r7, #8
 80142d4:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80142d8:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 80142dc:	433b      	orrs	r3, r7
 80142de:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 80142e2:	d01d      	beq.n	8014320 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x5ac>
 80142e4:	9e0f      	ldr	r6, [sp, #60]	; 0x3c
 80142e6:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 80142e8:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 80142ec:	fb0c f606 	mul.w	r6, ip, r6
 80142f0:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 80142f4:	fb0c fc07 	mul.w	ip, ip, r7
 80142f8:	0a37      	lsrs	r7, r6, #8
 80142fa:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 80142fe:	f106 1601 	add.w	r6, r6, #65537	; 0x10001
 8014302:	4437      	add	r7, r6
 8014304:	f50c 7680 	add.w	r6, ip, #256	; 0x100
 8014308:	eb06 2c1c 	add.w	ip, r6, ip, lsr #8
 801430c:	0a3f      	lsrs	r7, r7, #8
 801430e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8014312:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8014316:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801431a:	ea47 060c 	orr.w	r6, r7, ip
 801431e:	960f      	str	r6, [sp, #60]	; 0x3c
 8014320:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8014324:	d01d      	beq.n	8014362 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x5ee>
 8014326:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
 8014328:	f006 1cff 	and.w	ip, r6, #16711935	; 0xff00ff
 801432c:	fb08 fc0c 	mul.w	ip, r8, ip
 8014330:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8014334:	fb08 f806 	mul.w	r8, r8, r6
 8014338:	ea4f 271c 	mov.w	r7, ip, lsr #8
 801433c:	f508 7680 	add.w	r6, r8, #256	; 0x100
 8014340:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8014344:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8014348:	eb06 2818 	add.w	r8, r6, r8, lsr #8
 801434c:	4467      	add	r7, ip
 801434e:	0a3f      	lsrs	r7, r7, #8
 8014350:	ea4f 2818 	mov.w	r8, r8, lsr #8
 8014354:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8014358:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 801435c:	ea47 0608 	orr.w	r6, r7, r8
 8014360:	960b      	str	r6, [sp, #44]	; 0x2c
 8014362:	2dff      	cmp	r5, #255	; 0xff
 8014364:	d01a      	beq.n	801439c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x628>
 8014366:	9e10      	ldr	r6, [sp, #64]	; 0x40
 8014368:	f006 1cff 	and.w	ip, r6, #16711935	; 0xff00ff
 801436c:	fb05 fc0c 	mul.w	ip, r5, ip
 8014370:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8014374:	4375      	muls	r5, r6
 8014376:	ea4f 271c 	mov.w	r7, ip, lsr #8
 801437a:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 801437e:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8014382:	f505 7680 	add.w	r6, r5, #256	; 0x100
 8014386:	4467      	add	r7, ip
 8014388:	eb06 2515 	add.w	r5, r6, r5, lsr #8
 801438c:	0a3f      	lsrs	r7, r7, #8
 801438e:	0a2d      	lsrs	r5, r5, #8
 8014390:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8014394:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 8014398:	433d      	orrs	r5, r7
 801439a:	9510      	str	r5, [sp, #64]	; 0x40
 801439c:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801439e:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 80143a2:	f003 16ff 	and.w	r6, r3, #16711935	; 0xff00ff
 80143a6:	fb0e f505 	mul.w	r5, lr, r5
 80143aa:	fb02 5506 	mla	r5, r2, r6, r5
 80143ae:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
 80143b0:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 80143b4:	fb00 5506 	mla	r5, r0, r6, r5
 80143b8:	9e10      	ldr	r6, [sp, #64]	; 0x40
 80143ba:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 80143be:	fb09 5506 	mla	r5, r9, r6, r5
 80143c2:	9e0f      	ldr	r6, [sp, #60]	; 0x3c
 80143c4:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 80143c8:	fb0e fe06 	mul.w	lr, lr, r6
 80143cc:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80143d0:	fb02 e303 	mla	r3, r2, r3, lr
 80143d4:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80143d6:	f402 477f 	and.w	r7, r2, #65280	; 0xff00
 80143da:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80143dc:	fb00 3307 	mla	r3, r0, r7, r3
 80143e0:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 80143e4:	fb09 3c0c 	mla	ip, r9, ip, r3
 80143e8:	fb01 f10b 	mul.w	r1, r1, fp
 80143ec:	0a2d      	lsrs	r5, r5, #8
 80143ee:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80143f2:	f8ba 0000 	ldrh.w	r0, [sl]
 80143f6:	1c4b      	adds	r3, r1, #1
 80143f8:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 80143fc:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8014400:	ea45 050c 	orr.w	r5, r5, ip
 8014404:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8014408:	1202      	asrs	r2, r0, #8
 801440a:	0c2b      	lsrs	r3, r5, #16
 801440c:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 8014410:	b2c9      	uxtb	r1, r1
 8014412:	fb13 f30b 	smulbb	r3, r3, fp
 8014416:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 801441a:	fb02 3201 	mla	r2, r2, r1, r3
 801441e:	f3c5 2607 	ubfx	r6, r5, #8, #8
 8014422:	10c3      	asrs	r3, r0, #3
 8014424:	b2ed      	uxtb	r5, r5
 8014426:	00c0      	lsls	r0, r0, #3
 8014428:	b2c0      	uxtb	r0, r0
 801442a:	fb15 f50b 	smulbb	r5, r5, fp
 801442e:	fb00 5001 	mla	r0, r0, r1, r5
 8014432:	b292      	uxth	r2, r2
 8014434:	fb16 f60b 	smulbb	r6, r6, fp
 8014438:	b280      	uxth	r0, r0
 801443a:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 801443e:	fb03 6301 	mla	r3, r3, r1, r6
 8014442:	1c51      	adds	r1, r2, #1
 8014444:	1c46      	adds	r6, r0, #1
 8014446:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801444a:	eb06 2610 	add.w	r6, r6, r0, lsr #8
 801444e:	b29b      	uxth	r3, r3
 8014450:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8014454:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 8014458:	4332      	orrs	r2, r6
 801445a:	1c5e      	adds	r6, r3, #1
 801445c:	eb06 2313 	add.w	r3, r6, r3, lsr #8
 8014460:	095b      	lsrs	r3, r3, #5
 8014462:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8014466:	431a      	orrs	r2, r3
 8014468:	f8aa 2000 	strh.w	r2, [sl]
 801446c:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 801446e:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 8014470:	4413      	add	r3, r2
 8014472:	932d      	str	r3, [sp, #180]	; 0xb4
 8014474:	9a30      	ldr	r2, [sp, #192]	; 0xc0
 8014476:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8014478:	4413      	add	r3, r2
 801447a:	932e      	str	r3, [sp, #184]	; 0xb8
 801447c:	9b12      	ldr	r3, [sp, #72]	; 0x48
 801447e:	3b01      	subs	r3, #1
 8014480:	f10a 0a02 	add.w	sl, sl, #2
 8014484:	9312      	str	r3, [sp, #72]	; 0x48
 8014486:	e4db      	b.n	8013e40 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xcc>
 8014488:	b160      	cbz	r0, 80144a4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x730>
 801448a:	5d2a      	ldrb	r2, [r5, r4]
 801448c:	9d08      	ldr	r5, [sp, #32]
 801448e:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 8014492:	920b      	str	r2, [sp, #44]	; 0x2c
 8014494:	ea4f 6812 	mov.w	r8, r2, lsr #24
 8014498:	25ff      	movs	r5, #255	; 0xff
 801449a:	46ac      	mov	ip, r5
 801449c:	e6e9      	b.n	8014272 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4fe>
 801449e:	25ff      	movs	r5, #255	; 0xff
 80144a0:	46a8      	mov	r8, r5
 80144a2:	e6e6      	b.n	8014272 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4fe>
 80144a4:	25ff      	movs	r5, #255	; 0xff
 80144a6:	46a8      	mov	r8, r5
 80144a8:	e7f7      	b.n	801449a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x726>
 80144aa:	b01b      	add	sp, #108	; 0x6c
 80144ac:	ecbd 8b08 	vpop	{d8-d11}
 80144b0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080144b4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>:
 80144b4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80144b8:	8808      	ldrh	r0, [r1, #0]
 80144ba:	b085      	sub	sp, #20
 80144bc:	1206      	asrs	r6, r0, #8
 80144be:	e9dd 5410 	ldrd	r5, r4, [sp, #64]	; 0x40
 80144c2:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 80144c6:	9600      	str	r6, [sp, #0]
 80144c8:	f9bd c038 	ldrsh.w	ip, [sp, #56]	; 0x38
 80144cc:	f9bd 903c 	ldrsh.w	r9, [sp, #60]	; 0x3c
 80144d0:	f89d 704c 	ldrb.w	r7, [sp, #76]	; 0x4c
 80144d4:	10c6      	asrs	r6, r0, #3
 80144d6:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80144da:	9601      	str	r6, [sp, #4]
 80144dc:	00c0      	lsls	r0, r0, #3
 80144de:	fb04 560c 	mla	r6, r4, ip, r5
 80144e2:	b2c0      	uxtb	r0, r0
 80144e4:	4692      	mov	sl, r2
 80144e6:	eb02 0e06 	add.w	lr, r2, r6
 80144ea:	9a00      	ldr	r2, [sp, #0]
 80144ec:	9002      	str	r0, [sp, #8]
 80144ee:	f040 407f 	orr.w	r0, r0, #4278190080	; 0xff000000
 80144f2:	ea40 4002 	orr.w	r0, r0, r2, lsl #16
 80144f6:	9a01      	ldr	r2, [sp, #4]
 80144f8:	2c00      	cmp	r4, #0
 80144fa:	4698      	mov	r8, r3
 80144fc:	ea40 2002 	orr.w	r0, r0, r2, lsl #8
 8014500:	f89d 3048 	ldrb.w	r3, [sp, #72]	; 0x48
 8014504:	db3e      	blt.n	8014584 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xd0>
 8014506:	45a1      	cmp	r9, r4
 8014508:	dd3c      	ble.n	8014584 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xd0>
 801450a:	2d00      	cmp	r5, #0
 801450c:	db38      	blt.n	8014580 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xcc>
 801450e:	45ac      	cmp	ip, r5
 8014510:	dd36      	ble.n	8014580 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xcc>
 8014512:	f81a 2006 	ldrb.w	r2, [sl, r6]
 8014516:	f858 2022 	ldr.w	r2, [r8, r2, lsl #2]
 801451a:	1c6e      	adds	r6, r5, #1
 801451c:	d435      	bmi.n	801458a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xd6>
 801451e:	45b4      	cmp	ip, r6
 8014520:	dd33      	ble.n	801458a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xd6>
 8014522:	b393      	cbz	r3, 801458a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xd6>
 8014524:	f89e 6001 	ldrb.w	r6, [lr, #1]
 8014528:	f858 6026 	ldr.w	r6, [r8, r6, lsl #2]
 801452c:	3401      	adds	r4, #1
 801452e:	d430      	bmi.n	8014592 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xde>
 8014530:	45a1      	cmp	r9, r4
 8014532:	dd2e      	ble.n	8014592 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xde>
 8014534:	b36f      	cbz	r7, 8014592 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xde>
 8014536:	2d00      	cmp	r5, #0
 8014538:	db29      	blt.n	801458e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xda>
 801453a:	45ac      	cmp	ip, r5
 801453c:	dd27      	ble.n	801458e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xda>
 801453e:	f81e 400c 	ldrb.w	r4, [lr, ip]
 8014542:	f858 4024 	ldr.w	r4, [r8, r4, lsl #2]
 8014546:	3501      	adds	r5, #1
 8014548:	d407      	bmi.n	801455a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xa6>
 801454a:	45ac      	cmp	ip, r5
 801454c:	dd05      	ble.n	801455a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xa6>
 801454e:	b123      	cbz	r3, 801455a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xa6>
 8014550:	44f4      	add	ip, lr
 8014552:	f89c 0001 	ldrb.w	r0, [ip, #1]
 8014556:	f858 0020 	ldr.w	r0, [r8, r0, lsl #2]
 801455a:	2b0f      	cmp	r3, #15
 801455c:	ea4f 6b12 	mov.w	fp, r2, lsr #24
 8014560:	ea4f 6a16 	mov.w	sl, r6, lsr #24
 8014564:	ea4f 6914 	mov.w	r9, r4, lsr #24
 8014568:	ea4f 6810 	mov.w	r8, r0, lsr #24
 801456c:	d801      	bhi.n	8014572 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xbe>
 801456e:	2f0f      	cmp	r7, #15
 8014570:	d911      	bls.n	8014596 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xe2>
 8014572:	4b79      	ldr	r3, [pc, #484]	; (8014758 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x2a4>)
 8014574:	4a79      	ldr	r2, [pc, #484]	; (801475c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x2a8>)
 8014576:	487a      	ldr	r0, [pc, #488]	; (8014760 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x2ac>)
 8014578:	f240 210d 	movw	r1, #525	; 0x20d
 801457c:	f004 ff46 	bl	801940c <__assert_func>
 8014580:	4602      	mov	r2, r0
 8014582:	e7ca      	b.n	801451a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x66>
 8014584:	4606      	mov	r6, r0
 8014586:	4602      	mov	r2, r0
 8014588:	e7d0      	b.n	801452c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x78>
 801458a:	4606      	mov	r6, r0
 801458c:	e7ce      	b.n	801452c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x78>
 801458e:	4604      	mov	r4, r0
 8014590:	e7d9      	b.n	8014546 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x92>
 8014592:	4604      	mov	r4, r0
 8014594:	e7e1      	b.n	801455a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xa6>
 8014596:	b29b      	uxth	r3, r3
 8014598:	b2bf      	uxth	r7, r7
 801459a:	fb03 fe07 	mul.w	lr, r3, r7
 801459e:	ebce 1707 	rsb	r7, lr, r7, lsl #4
 80145a2:	011b      	lsls	r3, r3, #4
 80145a4:	eba3 0c0e 	sub.w	ip, r3, lr
 80145a8:	b2bf      	uxth	r7, r7
 80145aa:	f5c3 7580 	rsb	r5, r3, #256	; 0x100
 80145ae:	fa1f fc8c 	uxth.w	ip, ip
 80145b2:	1bed      	subs	r5, r5, r7
 80145b4:	b2ad      	uxth	r5, r5
 80145b6:	fb0c f30a 	mul.w	r3, ip, sl
 80145ba:	fb05 330b 	mla	r3, r5, fp, r3
 80145be:	fb07 3309 	mla	r3, r7, r9, r3
 80145c2:	fb0e 3308 	mla	r3, lr, r8, r3
 80145c6:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80145ca:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 80145ce:	9303      	str	r3, [sp, #12]
 80145d0:	d018      	beq.n	8014604 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x150>
 80145d2:	f002 13ff 	and.w	r3, r2, #16711935	; 0xff00ff
 80145d6:	fb0b f303 	mul.w	r3, fp, r3
 80145da:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 80145de:	fb0b fb02 	mul.w	fp, fp, r2
 80145e2:	0a1a      	lsrs	r2, r3, #8
 80145e4:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 80145e8:	f103 1301 	add.w	r3, r3, #65537	; 0x10001
 80145ec:	441a      	add	r2, r3
 80145ee:	f50b 7380 	add.w	r3, fp, #256	; 0x100
 80145f2:	eb03 231b 	add.w	r3, r3, fp, lsr #8
 80145f6:	0a12      	lsrs	r2, r2, #8
 80145f8:	0a1b      	lsrs	r3, r3, #8
 80145fa:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 80145fe:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8014602:	431a      	orrs	r2, r3
 8014604:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 8014608:	d019      	beq.n	801463e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x18a>
 801460a:	f006 1bff 	and.w	fp, r6, #16711935	; 0xff00ff
 801460e:	fb0a fb0b 	mul.w	fp, sl, fp
 8014612:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8014616:	fb0a fa06 	mul.w	sl, sl, r6
 801461a:	ea4f 261b 	mov.w	r6, fp, lsr #8
 801461e:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8014622:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8014626:	f50a 7380 	add.w	r3, sl, #256	; 0x100
 801462a:	445e      	add	r6, fp
 801462c:	eb03 231a 	add.w	r3, r3, sl, lsr #8
 8014630:	0a36      	lsrs	r6, r6, #8
 8014632:	0a1b      	lsrs	r3, r3, #8
 8014634:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8014638:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801463c:	431e      	orrs	r6, r3
 801463e:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8014642:	d019      	beq.n	8014678 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x1c4>
 8014644:	f004 1aff 	and.w	sl, r4, #16711935	; 0xff00ff
 8014648:	fb09 fa0a 	mul.w	sl, r9, sl
 801464c:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 8014650:	fb09 f904 	mul.w	r9, r9, r4
 8014654:	ea4f 241a 	mov.w	r4, sl, lsr #8
 8014658:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 801465c:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8014660:	f509 7380 	add.w	r3, r9, #256	; 0x100
 8014664:	4454      	add	r4, sl
 8014666:	eb03 2319 	add.w	r3, r3, r9, lsr #8
 801466a:	0a24      	lsrs	r4, r4, #8
 801466c:	0a1b      	lsrs	r3, r3, #8
 801466e:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8014672:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8014676:	431c      	orrs	r4, r3
 8014678:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 801467c:	d019      	beq.n	80146b2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x1fe>
 801467e:	f000 19ff 	and.w	r9, r0, #16711935	; 0xff00ff
 8014682:	fb08 f909 	mul.w	r9, r8, r9
 8014686:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 801468a:	fb08 f800 	mul.w	r8, r8, r0
 801468e:	ea4f 2019 	mov.w	r0, r9, lsr #8
 8014692:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 8014696:	f109 1901 	add.w	r9, r9, #65537	; 0x10001
 801469a:	f508 7380 	add.w	r3, r8, #256	; 0x100
 801469e:	4448      	add	r0, r9
 80146a0:	eb03 2318 	add.w	r3, r3, r8, lsr #8
 80146a4:	0a00      	lsrs	r0, r0, #8
 80146a6:	0a1b      	lsrs	r3, r3, #8
 80146a8:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 80146ac:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80146b0:	4318      	orrs	r0, r3
 80146b2:	f006 18ff 	and.w	r8, r6, #16711935	; 0xff00ff
 80146b6:	f002 13ff 	and.w	r3, r2, #16711935	; 0xff00ff
 80146ba:	fb0c f808 	mul.w	r8, ip, r8
 80146be:	fb05 8803 	mla	r8, r5, r3, r8
 80146c2:	f004 13ff 	and.w	r3, r4, #16711935	; 0xff00ff
 80146c6:	fb07 8803 	mla	r8, r7, r3, r8
 80146ca:	f000 13ff 	and.w	r3, r0, #16711935	; 0xff00ff
 80146ce:	fb0e 8303 	mla	r3, lr, r3, r8
 80146d2:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 80146d6:	0a1b      	lsrs	r3, r3, #8
 80146d8:	fb0c f606 	mul.w	r6, ip, r6
 80146dc:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 80146e0:	fb05 6202 	mla	r2, r5, r2, r6
 80146e4:	f003 18ff 	and.w	r8, r3, #16711935	; 0xff00ff
 80146e8:	f404 437f 	and.w	r3, r4, #65280	; 0xff00
 80146ec:	fb07 2703 	mla	r7, r7, r3, r2
 80146f0:	9a03      	ldr	r2, [sp, #12]
 80146f2:	9c02      	ldr	r4, [sp, #8]
 80146f4:	9d01      	ldr	r5, [sp, #4]
 80146f6:	f400 437f 	and.w	r3, r0, #65280	; 0xff00
 80146fa:	fb0e 7303 	mla	r3, lr, r3, r7
 80146fe:	43d0      	mvns	r0, r2
 8014700:	9a00      	ldr	r2, [sp, #0]
 8014702:	b2c0      	uxtb	r0, r0
 8014704:	0a1b      	lsrs	r3, r3, #8
 8014706:	4342      	muls	r2, r0
 8014708:	4344      	muls	r4, r0
 801470a:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801470e:	ea48 0303 	orr.w	r3, r8, r3
 8014712:	4345      	muls	r5, r0
 8014714:	4620      	mov	r0, r4
 8014716:	1c54      	adds	r4, r2, #1
 8014718:	eb04 2412 	add.w	r4, r4, r2, lsr #8
 801471c:	0c1a      	lsrs	r2, r3, #16
 801471e:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 8014722:	4a10      	ldr	r2, [pc, #64]	; (8014764 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x2b0>)
 8014724:	ea02 2204 	and.w	r2, r2, r4, lsl #8
 8014728:	1c44      	adds	r4, r0, #1
 801472a:	eb04 2410 	add.w	r4, r4, r0, lsr #8
 801472e:	b2d8      	uxtb	r0, r3
 8014730:	eb00 2014 	add.w	r0, r0, r4, lsr #8
 8014734:	ea42 02d0 	orr.w	r2, r2, r0, lsr #3
 8014738:	1c68      	adds	r0, r5, #1
 801473a:	eb00 2015 	add.w	r0, r0, r5, lsr #8
 801473e:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8014742:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8014746:	00db      	lsls	r3, r3, #3
 8014748:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801474c:	4313      	orrs	r3, r2
 801474e:	800b      	strh	r3, [r1, #0]
 8014750:	b005      	add	sp, #20
 8014752:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8014756:	bf00      	nop
 8014758:	0801d135 	.word	0x0801d135
 801475c:	0801d68d 	.word	0x0801d68d
 8014760:	0801d1bd 	.word	0x0801d1bd
 8014764:	fffff800 	.word	0xfffff800

08014768 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 8014768:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801476c:	ed2d 8b08 	vpush	{d8-d11}
 8014770:	b097      	sub	sp, #92	; 0x5c
 8014772:	eeb0 aa40 	vmov.f32	s20, s0
 8014776:	9d2d      	ldr	r5, [sp, #180]	; 0xb4
 8014778:	9307      	str	r3, [sp, #28]
 801477a:	f9bd 30c4 	ldrsh.w	r3, [sp, #196]	; 0xc4
 801477e:	9112      	str	r1, [sp, #72]	; 0x48
 8014780:	930f      	str	r3, [sp, #60]	; 0x3c
 8014782:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	; 0xb8
 8014786:	9015      	str	r0, [sp, #84]	; 0x54
 8014788:	6868      	ldr	r0, [r5, #4]
 801478a:	9214      	str	r2, [sp, #80]	; 0x50
 801478c:	fb00 1303 	mla	r3, r0, r3, r1
 8014790:	9a32      	ldr	r2, [sp, #200]	; 0xc8
 8014792:	6829      	ldr	r1, [r5, #0]
 8014794:	6855      	ldr	r5, [r2, #4]
 8014796:	f9bd 40c0 	ldrsh.w	r4, [sp, #192]	; 0xc0
 801479a:	eb01 0343 	add.w	r3, r1, r3, lsl #1
 801479e:	930a      	str	r3, [sp, #40]	; 0x28
 80147a0:	6813      	ldr	r3, [r2, #0]
 80147a2:	9311      	str	r3, [sp, #68]	; 0x44
 80147a4:	eef0 9a60 	vmov.f32	s19, s1
 80147a8:	eeb0 9a41 	vmov.f32	s18, s2
 80147ac:	eeb0 8a62 	vmov.f32	s16, s5
 80147b0:	eef0 8a43 	vmov.f32	s17, s6
 80147b4:	eef0 ba44 	vmov.f32	s23, s8
 80147b8:	eeb0 ba64 	vmov.f32	s22, s9
 80147bc:	eef0 aa45 	vmov.f32	s21, s10
 80147c0:	3504      	adds	r5, #4
 80147c2:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80147c4:	2b00      	cmp	r3, #0
 80147c6:	dc03      	bgt.n	80147d0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x68>
 80147c8:	9b14      	ldr	r3, [sp, #80]	; 0x50
 80147ca:	2b00      	cmp	r3, #0
 80147cc:	f340 834d 	ble.w	8014e6a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x702>
 80147d0:	9b07      	ldr	r3, [sp, #28]
 80147d2:	2b00      	cmp	r3, #0
 80147d4:	f340 819c 	ble.w	8014b10 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3a8>
 80147d8:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 80147da:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80147dc:	1412      	asrs	r2, r2, #16
 80147de:	ea4f 4323 	mov.w	r3, r3, asr #16
 80147e2:	d42d      	bmi.n	8014840 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xd8>
 80147e4:	1c51      	adds	r1, r2, #1
 80147e6:	428c      	cmp	r4, r1
 80147e8:	dd2d      	ble.n	8014846 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xde>
 80147ea:	2b00      	cmp	r3, #0
 80147ec:	db2b      	blt.n	8014846 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xde>
 80147ee:	980f      	ldr	r0, [sp, #60]	; 0x3c
 80147f0:	1c59      	adds	r1, r3, #1
 80147f2:	4288      	cmp	r0, r1
 80147f4:	dd27      	ble.n	8014846 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xde>
 80147f6:	9b07      	ldr	r3, [sp, #28]
 80147f8:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 80147fa:	9929      	ldr	r1, [sp, #164]	; 0xa4
 80147fc:	3b01      	subs	r3, #1
 80147fe:	fb02 1203 	mla	r2, r2, r3, r1
 8014802:	1412      	asrs	r2, r2, #16
 8014804:	d429      	bmi.n	801485a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf2>
 8014806:	3201      	adds	r2, #1
 8014808:	4294      	cmp	r4, r2
 801480a:	dd26      	ble.n	801485a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf2>
 801480c:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 801480e:	992a      	ldr	r1, [sp, #168]	; 0xa8
 8014810:	fb02 1303 	mla	r3, r2, r3, r1
 8014814:	141b      	asrs	r3, r3, #16
 8014816:	d420      	bmi.n	801485a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf2>
 8014818:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801481a:	3301      	adds	r3, #1
 801481c:	429a      	cmp	r2, r3
 801481e:	dd1c      	ble.n	801485a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf2>
 8014820:	9b07      	ldr	r3, [sp, #28]
 8014822:	f8dd b028 	ldr.w	fp, [sp, #40]	; 0x28
 8014826:	9310      	str	r3, [sp, #64]	; 0x40
 8014828:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801482a:	2b00      	cmp	r3, #0
 801482c:	f300 81da 	bgt.w	8014be4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x47c>
 8014830:	9b07      	ldr	r3, [sp, #28]
 8014832:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8014834:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8014838:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801483c:	930a      	str	r3, [sp, #40]	; 0x28
 801483e:	e169      	b.n	8014b14 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3ac>
 8014840:	1c51      	adds	r1, r2, #1
 8014842:	f040 8156 	bne.w	8014af2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x38a>
 8014846:	42a2      	cmp	r2, r4
 8014848:	f280 8153 	bge.w	8014af2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x38a>
 801484c:	1c5a      	adds	r2, r3, #1
 801484e:	f2c0 8150 	blt.w	8014af2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x38a>
 8014852:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8014854:	4293      	cmp	r3, r2
 8014856:	f280 814c 	bge.w	8014af2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x38a>
 801485a:	9b07      	ldr	r3, [sp, #28]
 801485c:	9313      	str	r3, [sp, #76]	; 0x4c
 801485e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8014860:	9310      	str	r3, [sp, #64]	; 0x40
 8014862:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8014864:	2b00      	cmp	r3, #0
 8014866:	dde3      	ble.n	8014830 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xc8>
 8014868:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 801486a:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801486c:	f3c2 3103 	ubfx	r1, r2, #12, #4
 8014870:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 8014872:	f3c2 3003 	ubfx	r0, r2, #12, #4
 8014876:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8014878:	1412      	asrs	r2, r2, #16
 801487a:	ea4f 4323 	mov.w	r3, r3, asr #16
 801487e:	f100 8198 	bmi.w	8014bb2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x44a>
 8014882:	1c56      	adds	r6, r2, #1
 8014884:	42b4      	cmp	r4, r6
 8014886:	f340 8196 	ble.w	8014bb6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x44e>
 801488a:	2b00      	cmp	r3, #0
 801488c:	f2c0 8193 	blt.w	8014bb6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x44e>
 8014890:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 8014892:	1c5e      	adds	r6, r3, #1
 8014894:	42b7      	cmp	r7, r6
 8014896:	f340 818e 	ble.w	8014bb6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x44e>
 801489a:	fb03 2304 	mla	r3, r3, r4, r2
 801489e:	9a11      	ldr	r2, [sp, #68]	; 0x44
 80148a0:	18d6      	adds	r6, r2, r3
 80148a2:	5cd3      	ldrb	r3, [r2, r3]
 80148a4:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 80148a8:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 80148ac:	2900      	cmp	r1, #0
 80148ae:	f000 8170 	beq.w	8014b92 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x42a>
 80148b2:	7872      	ldrb	r2, [r6, #1]
 80148b4:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 80148b8:	920b      	str	r2, [sp, #44]	; 0x2c
 80148ba:	ea4f 6812 	mov.w	r8, r2, lsr #24
 80148be:	2800      	cmp	r0, #0
 80148c0:	f000 8171 	beq.w	8014ba6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x43e>
 80148c4:	1932      	adds	r2, r6, r4
 80148c6:	5d36      	ldrb	r6, [r6, r4]
 80148c8:	7852      	ldrb	r2, [r2, #1]
 80148ca:	f855 6026 	ldr.w	r6, [r5, r6, lsl #2]
 80148ce:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 80148d2:	9608      	str	r6, [sp, #32]
 80148d4:	ea4f 6a16 	mov.w	sl, r6, lsr #24
 80148d8:	920c      	str	r2, [sp, #48]	; 0x30
 80148da:	0e16      	lsrs	r6, r2, #24
 80148dc:	b289      	uxth	r1, r1
 80148de:	b280      	uxth	r0, r0
 80148e0:	fb01 fb00 	mul.w	fp, r1, r0
 80148e4:	ebcb 1000 	rsb	r0, fp, r0, lsl #4
 80148e8:	0109      	lsls	r1, r1, #4
 80148ea:	eba1 090b 	sub.w	r9, r1, fp
 80148ee:	b280      	uxth	r0, r0
 80148f0:	f5c1 7280 	rsb	r2, r1, #256	; 0x100
 80148f4:	fa1f f989 	uxth.w	r9, r9
 80148f8:	1a12      	subs	r2, r2, r0
 80148fa:	b292      	uxth	r2, r2
 80148fc:	fb09 f108 	mul.w	r1, r9, r8
 8014900:	fb02 110c 	mla	r1, r2, ip, r1
 8014904:	fb00 110a 	mla	r1, r0, sl, r1
 8014908:	fb0b 1106 	mla	r1, fp, r6, r1
 801490c:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8014910:	2900      	cmp	r1, #0
 8014912:	f000 80df 	beq.w	8014ad4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x36c>
 8014916:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 801491a:	d01b      	beq.n	8014954 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1ec>
 801491c:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 8014920:	fb0c fe0e 	mul.w	lr, ip, lr
 8014924:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8014928:	fb0c fc03 	mul.w	ip, ip, r3
 801492c:	ea4f 231e 	mov.w	r3, lr, lsr #8
 8014930:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8014934:	f10e 1e01 	add.w	lr, lr, #65537	; 0x10001
 8014938:	4473      	add	r3, lr
 801493a:	f50c 7e80 	add.w	lr, ip, #256	; 0x100
 801493e:	eb0e 2e1c 	add.w	lr, lr, ip, lsr #8
 8014942:	0a1b      	lsrs	r3, r3, #8
 8014944:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8014948:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801494c:	f40e 4e7f 	and.w	lr, lr, #65280	; 0xff00
 8014950:	ea43 030e 	orr.w	r3, r3, lr
 8014954:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8014958:	d01e      	beq.n	8014998 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x230>
 801495a:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 801495c:	f007 1cff 	and.w	ip, r7, #16711935	; 0xff00ff
 8014960:	fb08 fc0c 	mul.w	ip, r8, ip
 8014964:	f407 4e7f 	and.w	lr, r7, #65280	; 0xff00
 8014968:	fb08 f80e 	mul.w	r8, r8, lr
 801496c:	ea4f 2e1c 	mov.w	lr, ip, lsr #8
 8014970:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8014974:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8014978:	44e6      	add	lr, ip
 801497a:	f508 7c80 	add.w	ip, r8, #256	; 0x100
 801497e:	eb0c 2818 	add.w	r8, ip, r8, lsr #8
 8014982:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8014986:	ea4f 2818 	mov.w	r8, r8, lsr #8
 801498a:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801498e:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 8014992:	ea4e 0708 	orr.w	r7, lr, r8
 8014996:	970b      	str	r7, [sp, #44]	; 0x2c
 8014998:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 801499c:	d01e      	beq.n	80149dc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x274>
 801499e:	9f08      	ldr	r7, [sp, #32]
 80149a0:	f007 18ff 	and.w	r8, r7, #16711935	; 0xff00ff
 80149a4:	fb0a f808 	mul.w	r8, sl, r8
 80149a8:	f407 4c7f 	and.w	ip, r7, #65280	; 0xff00
 80149ac:	fb0a fa0c 	mul.w	sl, sl, ip
 80149b0:	ea4f 2e18 	mov.w	lr, r8, lsr #8
 80149b4:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80149b8:	f108 1801 	add.w	r8, r8, #65537	; 0x10001
 80149bc:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 80149c0:	44c6      	add	lr, r8
 80149c2:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80149c6:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80149ca:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80149ce:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80149d2:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80149d6:	ea4e 070a 	orr.w	r7, lr, sl
 80149da:	9708      	str	r7, [sp, #32]
 80149dc:	2eff      	cmp	r6, #255	; 0xff
 80149de:	d01d      	beq.n	8014a1c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2b4>
 80149e0:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 80149e2:	f007 18ff 	and.w	r8, r7, #16711935	; 0xff00ff
 80149e6:	fb06 f808 	mul.w	r8, r6, r8
 80149ea:	f407 4c7f 	and.w	ip, r7, #65280	; 0xff00
 80149ee:	fb06 f60c 	mul.w	r6, r6, ip
 80149f2:	ea4f 2e18 	mov.w	lr, r8, lsr #8
 80149f6:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80149fa:	f108 1801 	add.w	r8, r8, #65537	; 0x10001
 80149fe:	f506 7c80 	add.w	ip, r6, #256	; 0x100
 8014a02:	44c6      	add	lr, r8
 8014a04:	eb0c 2616 	add.w	r6, ip, r6, lsr #8
 8014a08:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8014a0c:	0a36      	lsrs	r6, r6, #8
 8014a0e:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8014a12:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8014a16:	ea4e 0606 	orr.w	r6, lr, r6
 8014a1a:	960c      	str	r6, [sp, #48]	; 0x30
 8014a1c:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
 8014a1e:	9f08      	ldr	r7, [sp, #32]
 8014a20:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8014a24:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 8014a28:	fb09 f606 	mul.w	r6, r9, r6
 8014a2c:	fb02 660c 	mla	r6, r2, ip, r6
 8014a30:	f007 1cff 	and.w	ip, r7, #16711935	; 0xff00ff
 8014a34:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 8014a36:	fb00 660c 	mla	r6, r0, ip, r6
 8014a3a:	f007 1cff 	and.w	ip, r7, #16711935	; 0xff00ff
 8014a3e:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 8014a40:	fb0b 660c 	mla	r6, fp, ip, r6
 8014a44:	f407 4c7f 	and.w	ip, r7, #65280	; 0xff00
 8014a48:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8014a4c:	fb09 f90c 	mul.w	r9, r9, ip
 8014a50:	fb02 9303 	mla	r3, r2, r3, r9
 8014a54:	9a08      	ldr	r2, [sp, #32]
 8014a56:	f402 4e7f 	and.w	lr, r2, #65280	; 0xff00
 8014a5a:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8014a5c:	fb00 330e 	mla	r3, r0, lr, r3
 8014a60:	f402 407f 	and.w	r0, r2, #65280	; 0xff00
 8014a64:	fb0b 3b00 	mla	fp, fp, r0, r3
 8014a68:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8014a6a:	881b      	ldrh	r3, [r3, #0]
 8014a6c:	43c9      	mvns	r1, r1
 8014a6e:	1218      	asrs	r0, r3, #8
 8014a70:	b2c9      	uxtb	r1, r1
 8014a72:	10da      	asrs	r2, r3, #3
 8014a74:	0a36      	lsrs	r6, r6, #8
 8014a76:	ea4f 2b1b 	mov.w	fp, fp, lsr #8
 8014a7a:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8014a7e:	00db      	lsls	r3, r3, #3
 8014a80:	4348      	muls	r0, r1
 8014a82:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8014a86:	f40b 4b7f 	and.w	fp, fp, #65280	; 0xff00
 8014a8a:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8014a8e:	b2db      	uxtb	r3, r3
 8014a90:	434b      	muls	r3, r1
 8014a92:	ea46 060b 	orr.w	r6, r6, fp
 8014a96:	434a      	muls	r2, r1
 8014a98:	1c41      	adds	r1, r0, #1
 8014a9a:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 8014a9e:	0c30      	lsrs	r0, r6, #16
 8014aa0:	eb00 2011 	add.w	r0, r0, r1, lsr #8
 8014aa4:	494e      	ldr	r1, [pc, #312]	; (8014be0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x478>)
 8014aa6:	ea01 2000 	and.w	r0, r1, r0, lsl #8
 8014aaa:	1c59      	adds	r1, r3, #1
 8014aac:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 8014ab0:	b2f3      	uxtb	r3, r6
 8014ab2:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 8014ab6:	1c51      	adds	r1, r2, #1
 8014ab8:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8014abc:	f3c6 2607 	ubfx	r6, r6, #8, #8
 8014ac0:	eb06 2612 	add.w	r6, r6, r2, lsr #8
 8014ac4:	00f6      	lsls	r6, r6, #3
 8014ac6:	ea40 03d3 	orr.w	r3, r0, r3, lsr #3
 8014aca:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8014ace:	431e      	orrs	r6, r3
 8014ad0:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8014ad2:	801e      	strh	r6, [r3, #0]
 8014ad4:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8014ad6:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 8014ad8:	3302      	adds	r3, #2
 8014ada:	9310      	str	r3, [sp, #64]	; 0x40
 8014adc:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8014ade:	4413      	add	r3, r2
 8014ae0:	9329      	str	r3, [sp, #164]	; 0xa4
 8014ae2:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 8014ae4:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8014ae6:	4413      	add	r3, r2
 8014ae8:	932a      	str	r3, [sp, #168]	; 0xa8
 8014aea:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8014aec:	3b01      	subs	r3, #1
 8014aee:	9313      	str	r3, [sp, #76]	; 0x4c
 8014af0:	e6b7      	b.n	8014862 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfa>
 8014af2:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8014af4:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 8014af6:	4413      	add	r3, r2
 8014af8:	9329      	str	r3, [sp, #164]	; 0xa4
 8014afa:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 8014afc:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8014afe:	4413      	add	r3, r2
 8014b00:	932a      	str	r3, [sp, #168]	; 0xa8
 8014b02:	9b07      	ldr	r3, [sp, #28]
 8014b04:	3b01      	subs	r3, #1
 8014b06:	9307      	str	r3, [sp, #28]
 8014b08:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8014b0a:	3302      	adds	r3, #2
 8014b0c:	930a      	str	r3, [sp, #40]	; 0x28
 8014b0e:	e65f      	b.n	80147d0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x68>
 8014b10:	f47f ae71 	bne.w	80147f6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x8e>
 8014b14:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8014b16:	2b00      	cmp	r3, #0
 8014b18:	f340 81a7 	ble.w	8014e6a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x702>
 8014b1c:	ee3a aa2b 	vadd.f32	s20, s20, s23
 8014b20:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8014b24:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 8014b28:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8014b2a:	ee79 9a8b 	vadd.f32	s19, s19, s22
 8014b2e:	ee39 9a2a 	vadd.f32	s18, s18, s21
 8014b32:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8014b36:	eef0 6a48 	vmov.f32	s13, s16
 8014b3a:	ee69 7a27 	vmul.f32	s15, s18, s15
 8014b3e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8014b42:	ee37 8a48 	vsub.f32	s16, s14, s16
 8014b46:	edcd 6a29 	vstr	s13, [sp, #164]	; 0xa4
 8014b4a:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8014b4e:	eef0 6a68 	vmov.f32	s13, s17
 8014b52:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8014b56:	ee18 2a10 	vmov	r2, s16
 8014b5a:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8014b5e:	fb92 f3f3 	sdiv	r3, r2, r3
 8014b62:	ee18 2a90 	vmov	r2, s17
 8014b66:	932b      	str	r3, [sp, #172]	; 0xac
 8014b68:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8014b6a:	fb92 f3f3 	sdiv	r3, r2, r3
 8014b6e:	932c      	str	r3, [sp, #176]	; 0xb0
 8014b70:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8014b72:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8014b74:	3b01      	subs	r3, #1
 8014b76:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8014b7a:	9312      	str	r3, [sp, #72]	; 0x48
 8014b7c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8014b7e:	edcd 6a2a 	vstr	s13, [sp, #168]	; 0xa8
 8014b82:	bf08      	it	eq
 8014b84:	4613      	moveq	r3, r2
 8014b86:	9307      	str	r3, [sp, #28]
 8014b88:	eef0 8a67 	vmov.f32	s17, s15
 8014b8c:	eeb0 8a47 	vmov.f32	s16, s14
 8014b90:	e617      	b.n	80147c2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x5a>
 8014b92:	b158      	cbz	r0, 8014bac <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x444>
 8014b94:	5d32      	ldrb	r2, [r6, r4]
 8014b96:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 8014b9a:	9208      	str	r2, [sp, #32]
 8014b9c:	ea4f 6a12 	mov.w	sl, r2, lsr #24
 8014ba0:	26ff      	movs	r6, #255	; 0xff
 8014ba2:	46b0      	mov	r8, r6
 8014ba4:	e69a      	b.n	80148dc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x174>
 8014ba6:	26ff      	movs	r6, #255	; 0xff
 8014ba8:	46b2      	mov	sl, r6
 8014baa:	e697      	b.n	80148dc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x174>
 8014bac:	26ff      	movs	r6, #255	; 0xff
 8014bae:	46b2      	mov	sl, r6
 8014bb0:	e7f7      	b.n	8014ba2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x43a>
 8014bb2:	1c57      	adds	r7, r2, #1
 8014bb4:	d18e      	bne.n	8014ad4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x36c>
 8014bb6:	4294      	cmp	r4, r2
 8014bb8:	dd8c      	ble.n	8014ad4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x36c>
 8014bba:	1c5e      	adds	r6, r3, #1
 8014bbc:	db8a      	blt.n	8014ad4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x36c>
 8014bbe:	9e0f      	ldr	r6, [sp, #60]	; 0x3c
 8014bc0:	429e      	cmp	r6, r3
 8014bc2:	dd87      	ble.n	8014ad4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x36c>
 8014bc4:	e9cd 1004 	strd	r1, r0, [sp, #16]
 8014bc8:	e9cd 2302 	strd	r2, r3, [sp, #8]
 8014bcc:	e9cd 4600 	strd	r4, r6, [sp]
 8014bd0:	462b      	mov	r3, r5
 8014bd2:	e9dd 1210 	ldrd	r1, r2, [sp, #64]	; 0x40
 8014bd6:	9815      	ldr	r0, [sp, #84]	; 0x54
 8014bd8:	f7ff fc6c 	bl	80144b4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>
 8014bdc:	e77a      	b.n	8014ad4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x36c>
 8014bde:	bf00      	nop
 8014be0:	fffff800 	.word	0xfffff800
 8014be4:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8014be6:	9929      	ldr	r1, [sp, #164]	; 0xa4
 8014be8:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8014bec:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8014bee:	1409      	asrs	r1, r1, #16
 8014bf0:	f3c3 3003 	ubfx	r0, r3, #12, #4
 8014bf4:	141b      	asrs	r3, r3, #16
 8014bf6:	fb04 1303 	mla	r3, r4, r3, r1
 8014bfa:	9911      	ldr	r1, [sp, #68]	; 0x44
 8014bfc:	18ce      	adds	r6, r1, r3
 8014bfe:	5ccb      	ldrb	r3, [r1, r3]
 8014c00:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 8014c04:	0e1f      	lsrs	r7, r3, #24
 8014c06:	2a00      	cmp	r2, #0
 8014c08:	f000 811f 	beq.w	8014e4a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6e2>
 8014c0c:	7871      	ldrb	r1, [r6, #1]
 8014c0e:	f855 1021 	ldr.w	r1, [r5, r1, lsl #2]
 8014c12:	910d      	str	r1, [sp, #52]	; 0x34
 8014c14:	ea4f 6e11 	mov.w	lr, r1, lsr #24
 8014c18:	2800      	cmp	r0, #0
 8014c1a:	f000 8120 	beq.w	8014e5e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6f6>
 8014c1e:	1931      	adds	r1, r6, r4
 8014c20:	5d36      	ldrb	r6, [r6, r4]
 8014c22:	7849      	ldrb	r1, [r1, #1]
 8014c24:	f855 6026 	ldr.w	r6, [r5, r6, lsl #2]
 8014c28:	f855 1021 	ldr.w	r1, [r5, r1, lsl #2]
 8014c2c:	9609      	str	r6, [sp, #36]	; 0x24
 8014c2e:	ea4f 6916 	mov.w	r9, r6, lsr #24
 8014c32:	910e      	str	r1, [sp, #56]	; 0x38
 8014c34:	0e0e      	lsrs	r6, r1, #24
 8014c36:	b292      	uxth	r2, r2
 8014c38:	b280      	uxth	r0, r0
 8014c3a:	fb02 fa00 	mul.w	sl, r2, r0
 8014c3e:	ebca 1000 	rsb	r0, sl, r0, lsl #4
 8014c42:	0112      	lsls	r2, r2, #4
 8014c44:	eba2 080a 	sub.w	r8, r2, sl
 8014c48:	b280      	uxth	r0, r0
 8014c4a:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 8014c4e:	fa1f f888 	uxth.w	r8, r8
 8014c52:	1a09      	subs	r1, r1, r0
 8014c54:	b289      	uxth	r1, r1
 8014c56:	fb08 f20e 	mul.w	r2, r8, lr
 8014c5a:	fb01 2207 	mla	r2, r1, r7, r2
 8014c5e:	fb00 2209 	mla	r2, r0, r9, r2
 8014c62:	fb0a 2206 	mla	r2, sl, r6, r2
 8014c66:	f3c2 2207 	ubfx	r2, r2, #8, #8
 8014c6a:	9213      	str	r2, [sp, #76]	; 0x4c
 8014c6c:	2a00      	cmp	r2, #0
 8014c6e:	f000 80de 	beq.w	8014e2e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6c6>
 8014c72:	2fff      	cmp	r7, #255	; 0xff
 8014c74:	d01a      	beq.n	8014cac <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x544>
 8014c76:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 8014c7a:	fb07 fc0c 	mul.w	ip, r7, ip
 8014c7e:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8014c82:	435f      	muls	r7, r3
 8014c84:	ea4f 231c 	mov.w	r3, ip, lsr #8
 8014c88:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8014c8c:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8014c90:	4463      	add	r3, ip
 8014c92:	f507 7c80 	add.w	ip, r7, #256	; 0x100
 8014c96:	eb0c 2c17 	add.w	ip, ip, r7, lsr #8
 8014c9a:	0a1b      	lsrs	r3, r3, #8
 8014c9c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8014ca0:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8014ca4:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8014ca8:	ea43 030c 	orr.w	r3, r3, ip
 8014cac:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 8014cb0:	d01f      	beq.n	8014cf2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x58a>
 8014cb2:	9f0d      	ldr	r7, [sp, #52]	; 0x34
 8014cb4:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8014cb6:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8014cba:	fb0e f707 	mul.w	r7, lr, r7
 8014cbe:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 8014cc2:	fb0e fe0c 	mul.w	lr, lr, ip
 8014cc6:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8014cca:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8014cce:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8014cd2:	44bc      	add	ip, r7
 8014cd4:	f50e 7780 	add.w	r7, lr, #256	; 0x100
 8014cd8:	eb07 2e1e 	add.w	lr, r7, lr, lsr #8
 8014cdc:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8014ce0:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8014ce4:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8014ce8:	f40e 4e7f 	and.w	lr, lr, #65280	; 0xff00
 8014cec:	ea4c 020e 	orr.w	r2, ip, lr
 8014cf0:	920d      	str	r2, [sp, #52]	; 0x34
 8014cf2:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8014cf6:	d01e      	beq.n	8014d36 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x5ce>
 8014cf8:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8014cfa:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
 8014cfe:	fb09 fe0e 	mul.w	lr, r9, lr
 8014d02:	f402 477f 	and.w	r7, r2, #65280	; 0xff00
 8014d06:	fb09 f907 	mul.w	r9, r9, r7
 8014d0a:	ea4f 2c1e 	mov.w	ip, lr, lsr #8
 8014d0e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8014d12:	f10e 1e01 	add.w	lr, lr, #65537	; 0x10001
 8014d16:	f509 7780 	add.w	r7, r9, #256	; 0x100
 8014d1a:	44f4      	add	ip, lr
 8014d1c:	eb07 2919 	add.w	r9, r7, r9, lsr #8
 8014d20:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8014d24:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8014d28:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8014d2c:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 8014d30:	ea4c 0209 	orr.w	r2, ip, r9
 8014d34:	9209      	str	r2, [sp, #36]	; 0x24
 8014d36:	2eff      	cmp	r6, #255	; 0xff
 8014d38:	d01c      	beq.n	8014d74 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x60c>
 8014d3a:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8014d3c:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
 8014d40:	fb06 fe0e 	mul.w	lr, r6, lr
 8014d44:	f402 477f 	and.w	r7, r2, #65280	; 0xff00
 8014d48:	437e      	muls	r6, r7
 8014d4a:	ea4f 2c1e 	mov.w	ip, lr, lsr #8
 8014d4e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8014d52:	f10e 1e01 	add.w	lr, lr, #65537	; 0x10001
 8014d56:	f506 7780 	add.w	r7, r6, #256	; 0x100
 8014d5a:	44f4      	add	ip, lr
 8014d5c:	eb07 2616 	add.w	r6, r7, r6, lsr #8
 8014d60:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8014d64:	0a36      	lsrs	r6, r6, #8
 8014d66:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8014d6a:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8014d6e:	ea4c 0206 	orr.w	r2, ip, r6
 8014d72:	920e      	str	r2, [sp, #56]	; 0x38
 8014d74:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8014d76:	f002 16ff 	and.w	r6, r2, #16711935	; 0xff00ff
 8014d7a:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8014d7c:	f003 17ff 	and.w	r7, r3, #16711935	; 0xff00ff
 8014d80:	fb08 f606 	mul.w	r6, r8, r6
 8014d84:	fb01 6607 	mla	r6, r1, r7, r6
 8014d88:	f002 17ff 	and.w	r7, r2, #16711935	; 0xff00ff
 8014d8c:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8014d8e:	fb00 6607 	mla	r6, r0, r7, r6
 8014d92:	f002 17ff 	and.w	r7, r2, #16711935	; 0xff00ff
 8014d96:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8014d98:	fb0a 6607 	mla	r6, sl, r7, r6
 8014d9c:	f402 477f 	and.w	r7, r2, #65280	; 0xff00
 8014da0:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8014da2:	fb08 f807 	mul.w	r8, r8, r7
 8014da6:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 8014daa:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8014dae:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8014db0:	fb01 8303 	mla	r3, r1, r3, r8
 8014db4:	fb00 330c 	mla	r3, r0, ip, r3
 8014db8:	f402 4e7f 	and.w	lr, r2, #65280	; 0xff00
 8014dbc:	fb0a 3e0e 	mla	lr, sl, lr, r3
 8014dc0:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8014dc2:	f8bb 3000 	ldrh.w	r3, [fp]
 8014dc6:	43d2      	mvns	r2, r2
 8014dc8:	1218      	asrs	r0, r3, #8
 8014dca:	b2d2      	uxtb	r2, r2
 8014dcc:	0a36      	lsrs	r6, r6, #8
 8014dce:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8014dd2:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8014dd6:	4350      	muls	r0, r2
 8014dd8:	10d9      	asrs	r1, r3, #3
 8014dda:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8014dde:	f40e 4e7f 	and.w	lr, lr, #65280	; 0xff00
 8014de2:	00db      	lsls	r3, r3, #3
 8014de4:	ea46 060e 	orr.w	r6, r6, lr
 8014de8:	1c47      	adds	r7, r0, #1
 8014dea:	b2db      	uxtb	r3, r3
 8014dec:	4353      	muls	r3, r2
 8014dee:	eb07 2010 	add.w	r0, r7, r0, lsr #8
 8014df2:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8014df6:	0c37      	lsrs	r7, r6, #16
 8014df8:	4351      	muls	r1, r2
 8014dfa:	eb07 2010 	add.w	r0, r7, r0, lsr #8
 8014dfe:	4a1d      	ldr	r2, [pc, #116]	; (8014e74 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x70c>)
 8014e00:	1c5f      	adds	r7, r3, #1
 8014e02:	eb07 2313 	add.w	r3, r7, r3, lsr #8
 8014e06:	b2f7      	uxtb	r7, r6
 8014e08:	eb07 2313 	add.w	r3, r7, r3, lsr #8
 8014e0c:	ea02 2000 	and.w	r0, r2, r0, lsl #8
 8014e10:	ea40 00d3 	orr.w	r0, r0, r3, lsr #3
 8014e14:	1c4b      	adds	r3, r1, #1
 8014e16:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8014e1a:	f3c6 2607 	ubfx	r6, r6, #8, #8
 8014e1e:	eb06 2611 	add.w	r6, r6, r1, lsr #8
 8014e22:	00f6      	lsls	r6, r6, #3
 8014e24:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8014e28:	4330      	orrs	r0, r6
 8014e2a:	f8ab 0000 	strh.w	r0, [fp]
 8014e2e:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8014e30:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 8014e32:	4413      	add	r3, r2
 8014e34:	9329      	str	r3, [sp, #164]	; 0xa4
 8014e36:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 8014e38:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8014e3a:	4413      	add	r3, r2
 8014e3c:	932a      	str	r3, [sp, #168]	; 0xa8
 8014e3e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8014e40:	3b01      	subs	r3, #1
 8014e42:	f10b 0b02 	add.w	fp, fp, #2
 8014e46:	9310      	str	r3, [sp, #64]	; 0x40
 8014e48:	e4ee      	b.n	8014828 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xc0>
 8014e4a:	b158      	cbz	r0, 8014e64 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6fc>
 8014e4c:	5d31      	ldrb	r1, [r6, r4]
 8014e4e:	f855 1021 	ldr.w	r1, [r5, r1, lsl #2]
 8014e52:	9109      	str	r1, [sp, #36]	; 0x24
 8014e54:	ea4f 6911 	mov.w	r9, r1, lsr #24
 8014e58:	26ff      	movs	r6, #255	; 0xff
 8014e5a:	46b6      	mov	lr, r6
 8014e5c:	e6eb      	b.n	8014c36 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4ce>
 8014e5e:	26ff      	movs	r6, #255	; 0xff
 8014e60:	46b1      	mov	r9, r6
 8014e62:	e6e8      	b.n	8014c36 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4ce>
 8014e64:	26ff      	movs	r6, #255	; 0xff
 8014e66:	46b1      	mov	r9, r6
 8014e68:	e7f7      	b.n	8014e5a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6f2>
 8014e6a:	b017      	add	sp, #92	; 0x5c
 8014e6c:	ecbd 8b08 	vpop	{d8-d11}
 8014e70:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8014e74:	fffff800 	.word	0xfffff800

08014e78 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>:
 8014e78:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014e7c:	b087      	sub	sp, #28
 8014e7e:	e9dd e012 	ldrd	lr, r0, [sp, #72]	; 0x48
 8014e82:	f9bd 4040 	ldrsh.w	r4, [sp, #64]	; 0x40
 8014e86:	9105      	str	r1, [sp, #20]
 8014e88:	fb00 e604 	mla	r6, r0, r4, lr
 8014e8c:	f89d 1054 	ldrb.w	r1, [sp, #84]	; 0x54
 8014e90:	9102      	str	r1, [sp, #8]
 8014e92:	eb02 0146 	add.w	r1, r2, r6, lsl #1
 8014e96:	9103      	str	r1, [sp, #12]
 8014e98:	9905      	ldr	r1, [sp, #20]
 8014e9a:	f9bd 7044 	ldrsh.w	r7, [sp, #68]	; 0x44
 8014e9e:	f89d 5050 	ldrb.w	r5, [sp, #80]	; 0x50
 8014ea2:	8809      	ldrh	r1, [r1, #0]
 8014ea4:	2800      	cmp	r0, #0
 8014ea6:	eb03 0a06 	add.w	sl, r3, r6
 8014eaa:	f2c0 80ca 	blt.w	8015042 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1ca>
 8014eae:	4287      	cmp	r7, r0
 8014eb0:	f340 80c7 	ble.w	8015042 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1ca>
 8014eb4:	f1be 0f00 	cmp.w	lr, #0
 8014eb8:	f2c0 80bf 	blt.w	801503a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1c2>
 8014ebc:	4574      	cmp	r4, lr
 8014ebe:	f340 80bc 	ble.w	801503a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1c2>
 8014ec2:	f813 c006 	ldrb.w	ip, [r3, r6]
 8014ec6:	f832 9016 	ldrh.w	r9, [r2, r6, lsl #1]
 8014eca:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8014ece:	d01c      	beq.n	8014f0a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x92>
 8014ed0:	f429 66fc 	bic.w	r6, r9, #2016	; 0x7e0
 8014ed4:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8014ed8:	4372      	muls	r2, r6
 8014eda:	f64f 081f 	movw	r8, #63519	; 0xf81f
 8014ede:	ea08 1352 	and.w	r3, r8, r2, lsr #5
 8014ee2:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8014ee6:	f602 0201 	addw	r2, r2, #2049	; 0x801
 8014eea:	fb0c f609 	mul.w	r6, ip, r9
 8014eee:	eb03 0902 	add.w	r9, r3, r2
 8014ef2:	ea08 1959 	and.w	r9, r8, r9, lsr #5
 8014ef6:	f106 0820 	add.w	r8, r6, #32
 8014efa:	eb08 2816 	add.w	r8, r8, r6, lsr #8
 8014efe:	ea4f 2818 	mov.w	r8, r8, lsr #8
 8014f02:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 8014f06:	ea49 0908 	orr.w	r9, r9, r8
 8014f0a:	fa1f f989 	uxth.w	r9, r9
 8014f0e:	f11e 0301 	adds.w	r3, lr, #1
 8014f12:	f100 809b 	bmi.w	801504c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1d4>
 8014f16:	429c      	cmp	r4, r3
 8014f18:	f340 8098 	ble.w	801504c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1d4>
 8014f1c:	2d00      	cmp	r5, #0
 8014f1e:	f000 8095 	beq.w	801504c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1d4>
 8014f22:	f89a 6001 	ldrb.w	r6, [sl, #1]
 8014f26:	9b03      	ldr	r3, [sp, #12]
 8014f28:	2eff      	cmp	r6, #255	; 0xff
 8014f2a:	885b      	ldrh	r3, [r3, #2]
 8014f2c:	d01b      	beq.n	8014f66 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xee>
 8014f2e:	f423 62fc 	bic.w	r2, r3, #2016	; 0x7e0
 8014f32:	ea4f 08e6 	mov.w	r8, r6, asr #3
 8014f36:	fb08 f202 	mul.w	r2, r8, r2
 8014f3a:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8014f3e:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 8014f42:	fb06 f803 	mul.w	r8, r6, r3
 8014f46:	ea0b 1352 	and.w	r3, fp, r2, lsr #5
 8014f4a:	f602 0201 	addw	r2, r2, #2049	; 0x801
 8014f4e:	441a      	add	r2, r3
 8014f50:	f108 0320 	add.w	r3, r8, #32
 8014f54:	eb03 2318 	add.w	r3, r3, r8, lsr #8
 8014f58:	0a1b      	lsrs	r3, r3, #8
 8014f5a:	ea0b 1b52 	and.w	fp, fp, r2, lsr #5
 8014f5e:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8014f62:	ea4b 0303 	orr.w	r3, fp, r3
 8014f66:	b29b      	uxth	r3, r3
 8014f68:	9301      	str	r3, [sp, #4]
 8014f6a:	3001      	adds	r0, #1
 8014f6c:	d474      	bmi.n	8015058 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1e0>
 8014f6e:	4287      	cmp	r7, r0
 8014f70:	dd72      	ble.n	8015058 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1e0>
 8014f72:	9a02      	ldr	r2, [sp, #8]
 8014f74:	2a00      	cmp	r2, #0
 8014f76:	f000 8121 	beq.w	80151bc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x344>
 8014f7a:	f1be 0f00 	cmp.w	lr, #0
 8014f7e:	db68      	blt.n	8015052 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1da>
 8014f80:	4574      	cmp	r4, lr
 8014f82:	dd66      	ble.n	8015052 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1da>
 8014f84:	f81a 7004 	ldrb.w	r7, [sl, r4]
 8014f88:	9a03      	ldr	r2, [sp, #12]
 8014f8a:	2fff      	cmp	r7, #255	; 0xff
 8014f8c:	f832 0014 	ldrh.w	r0, [r2, r4, lsl #1]
 8014f90:	d01c      	beq.n	8014fcc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x154>
 8014f92:	f420 62fc 	bic.w	r2, r0, #2016	; 0x7e0
 8014f96:	ea4f 08e7 	mov.w	r8, r7, asr #3
 8014f9a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8014f9e:	fb07 fb00 	mul.w	fp, r7, r0
 8014fa2:	fb08 f802 	mul.w	r8, r8, r2
 8014fa6:	f64f 001f 	movw	r0, #63519	; 0xf81f
 8014faa:	ea00 1258 	and.w	r2, r0, r8, lsr #5
 8014fae:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8014fb2:	4490      	add	r8, r2
 8014fb4:	f10b 0220 	add.w	r2, fp, #32
 8014fb8:	eb02 2b1b 	add.w	fp, r2, fp, lsr #8
 8014fbc:	ea4f 2b1b 	mov.w	fp, fp, lsr #8
 8014fc0:	ea00 1058 	and.w	r0, r0, r8, lsr #5
 8014fc4:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 8014fc8:	ea40 000b 	orr.w	r0, r0, fp
 8014fcc:	b280      	uxth	r0, r0
 8014fce:	f11e 0e01 	adds.w	lr, lr, #1
 8014fd2:	d446      	bmi.n	8015062 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1ea>
 8014fd4:	4574      	cmp	r4, lr
 8014fd6:	dd44      	ble.n	8015062 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1ea>
 8014fd8:	2d00      	cmp	r5, #0
 8014fda:	d045      	beq.n	8015068 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1f0>
 8014fdc:	1c62      	adds	r2, r4, #1
 8014fde:	9b03      	ldr	r3, [sp, #12]
 8014fe0:	f81a 4002 	ldrb.w	r4, [sl, r2]
 8014fe4:	f833 2012 	ldrh.w	r2, [r3, r2, lsl #1]
 8014fe8:	2cff      	cmp	r4, #255	; 0xff
 8014fea:	d01c      	beq.n	8015026 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1ae>
 8014fec:	f422 6efc 	bic.w	lr, r2, #2016	; 0x7e0
 8014ff0:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8014ff4:	fb08 fe0e 	mul.w	lr, r8, lr
 8014ff8:	f64f 0a1f 	movw	sl, #63519	; 0xf81f
 8014ffc:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8015000:	fb04 f802 	mul.w	r8, r4, r2
 8015004:	ea0a 125e 	and.w	r2, sl, lr, lsr #5
 8015008:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 801500c:	4472      	add	r2, lr
 801500e:	ea0a 1252 	and.w	r2, sl, r2, lsr #5
 8015012:	f108 0a20 	add.w	sl, r8, #32
 8015016:	eb0a 2a18 	add.w	sl, sl, r8, lsr #8
 801501a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801501e:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8015022:	ea42 020a 	orr.w	r2, r2, sl
 8015026:	b292      	uxth	r2, r2
 8015028:	2d0f      	cmp	r5, #15
 801502a:	d91f      	bls.n	801506c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1f4>
 801502c:	4b67      	ldr	r3, [pc, #412]	; (80151cc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x354>)
 801502e:	4a68      	ldr	r2, [pc, #416]	; (80151d0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x358>)
 8015030:	4868      	ldr	r0, [pc, #416]	; (80151d4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x35c>)
 8015032:	f240 210d 	movw	r1, #525	; 0x20d
 8015036:	f004 f9e9 	bl	801940c <__assert_func>
 801503a:	4689      	mov	r9, r1
 801503c:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8015040:	e765      	b.n	8014f0e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x96>
 8015042:	26ff      	movs	r6, #255	; 0xff
 8015044:	9101      	str	r1, [sp, #4]
 8015046:	4689      	mov	r9, r1
 8015048:	46b4      	mov	ip, r6
 801504a:	e78e      	b.n	8014f6a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xf2>
 801504c:	9101      	str	r1, [sp, #4]
 801504e:	26ff      	movs	r6, #255	; 0xff
 8015050:	e78b      	b.n	8014f6a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xf2>
 8015052:	4608      	mov	r0, r1
 8015054:	27ff      	movs	r7, #255	; 0xff
 8015056:	e7ba      	b.n	8014fce <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x156>
 8015058:	24ff      	movs	r4, #255	; 0xff
 801505a:	460a      	mov	r2, r1
 801505c:	4608      	mov	r0, r1
 801505e:	4627      	mov	r7, r4
 8015060:	e7e2      	b.n	8015028 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1b0>
 8015062:	460a      	mov	r2, r1
 8015064:	24ff      	movs	r4, #255	; 0xff
 8015066:	e7df      	b.n	8015028 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1b0>
 8015068:	460a      	mov	r2, r1
 801506a:	24ff      	movs	r4, #255	; 0xff
 801506c:	9b02      	ldr	r3, [sp, #8]
 801506e:	2b0f      	cmp	r3, #15
 8015070:	d8dc      	bhi.n	801502c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1b4>
 8015072:	f8bd e008 	ldrh.w	lr, [sp, #8]
 8015076:	fa1f f885 	uxth.w	r8, r5
 801507a:	fb08 fa0e 	mul.w	sl, r8, lr
 801507e:	ea4f 1308 	mov.w	r3, r8, lsl #4
 8015082:	ebca 1e0e 	rsb	lr, sl, lr, lsl #4
 8015086:	9303      	str	r3, [sp, #12]
 8015088:	fa1f f38e 	uxth.w	r3, lr
 801508c:	9304      	str	r3, [sp, #16]
 801508e:	ea4f 4809 	mov.w	r8, r9, lsl #16
 8015092:	9b02      	ldr	r3, [sp, #8]
 8015094:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8015098:	f008 68fc 	and.w	r8, r8, #132120576	; 0x7e00000
 801509c:	fb15 fe03 	smulbb	lr, r5, r3
 80150a0:	ea48 0809 	orr.w	r8, r8, r9
 80150a4:	f1c3 0910 	rsb	r9, r3, #16
 80150a8:	9b01      	ldr	r3, [sp, #4]
 80150aa:	ea4f 4b03 	mov.w	fp, r3, lsl #16
 80150ae:	ea4f 0eee 	mov.w	lr, lr, asr #3
 80150b2:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 80150b6:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 80150ba:	eba9 0905 	sub.w	r9, r9, r5
 80150be:	ea4b 0303 	orr.w	r3, fp, r3
 80150c2:	ebce 0545 	rsb	r5, lr, r5, lsl #1
 80150c6:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 80150ca:	eb0e 0949 	add.w	r9, lr, r9, lsl #1
 80150ce:	436b      	muls	r3, r5
 80150d0:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 80150d4:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80150d8:	ea4b 0202 	orr.w	r2, fp, r2
 80150dc:	fb09 3308 	mla	r3, r9, r8, r3
 80150e0:	fb0e 3302 	mla	r3, lr, r2, r3
 80150e4:	0402      	lsls	r2, r0, #16
 80150e6:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 80150ea:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 80150ee:	4310      	orrs	r0, r2
 80150f0:	9a02      	ldr	r2, [sp, #8]
 80150f2:	ebce 0e42 	rsb	lr, lr, r2, lsl #1
 80150f6:	fb0e 3e00 	mla	lr, lr, r0, r3
 80150fa:	9803      	ldr	r0, [sp, #12]
 80150fc:	f89d 2058 	ldrb.w	r2, [sp, #88]	; 0x58
 8015100:	f5c0 7580 	rsb	r5, r0, #256	; 0x100
 8015104:	9804      	ldr	r0, [sp, #16]
 8015106:	1a2d      	subs	r5, r5, r0
 8015108:	9803      	ldr	r0, [sp, #12]
 801510a:	eba0 000a 	sub.w	r0, r0, sl
 801510e:	b280      	uxth	r0, r0
 8015110:	b2ad      	uxth	r5, r5
 8015112:	4346      	muls	r6, r0
 8015114:	9804      	ldr	r0, [sp, #16]
 8015116:	fb0c 6605 	mla	r6, ip, r5, r6
 801511a:	fb00 6707 	mla	r7, r0, r7, r6
 801511e:	fb0a 7404 	mla	r4, sl, r4, r7
 8015122:	b292      	uxth	r2, r2
 8015124:	f3c4 2407 	ubfx	r4, r4, #8, #8
 8015128:	4354      	muls	r4, r2
 801512a:	ea4f 535e 	mov.w	r3, lr, lsr #21
 801512e:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8015132:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8015136:	f104 0a01 	add.w	sl, r4, #1
 801513a:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801513e:	ea43 0e0e 	orr.w	lr, r3, lr
 8015142:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 8015146:	fa1f f38e 	uxth.w	r3, lr
 801514a:	1208      	asrs	r0, r1, #8
 801514c:	ea6f 2414 	mvn.w	r4, r4, lsr #8
 8015150:	b2e4      	uxtb	r4, r4
 8015152:	121d      	asrs	r5, r3, #8
 8015154:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8015158:	fb10 f004 	smulbb	r0, r0, r4
 801515c:	10ce      	asrs	r6, r1, #3
 801515e:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8015162:	00c9      	lsls	r1, r1, #3
 8015164:	fb05 0502 	mla	r5, r5, r2, r0
 8015168:	b2c9      	uxtb	r1, r1
 801516a:	10d8      	asrs	r0, r3, #3
 801516c:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8015170:	00db      	lsls	r3, r3, #3
 8015172:	fb16 f604 	smulbb	r6, r6, r4
 8015176:	b2db      	uxtb	r3, r3
 8015178:	fb11 f404 	smulbb	r4, r1, r4
 801517c:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8015180:	fb00 6002 	mla	r0, r0, r2, r6
 8015184:	fb03 4202 	mla	r2, r3, r2, r4
 8015188:	b2ad      	uxth	r5, r5
 801518a:	b292      	uxth	r2, r2
 801518c:	1c6b      	adds	r3, r5, #1
 801518e:	1c51      	adds	r1, r2, #1
 8015190:	eb03 2315 	add.w	r3, r3, r5, lsr #8
 8015194:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8015198:	b280      	uxth	r0, r0
 801519a:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801519e:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 80151a2:	4313      	orrs	r3, r2
 80151a4:	1c42      	adds	r2, r0, #1
 80151a6:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 80151aa:	0940      	lsrs	r0, r0, #5
 80151ac:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80151b0:	9a05      	ldr	r2, [sp, #20]
 80151b2:	4303      	orrs	r3, r0
 80151b4:	8013      	strh	r3, [r2, #0]
 80151b6:	b007      	add	sp, #28
 80151b8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80151bc:	2d0f      	cmp	r5, #15
 80151be:	f63f af35 	bhi.w	801502c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1b4>
 80151c2:	24ff      	movs	r4, #255	; 0xff
 80151c4:	460a      	mov	r2, r1
 80151c6:	4608      	mov	r0, r1
 80151c8:	4627      	mov	r7, r4
 80151ca:	e752      	b.n	8015072 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1fa>
 80151cc:	0801d135 	.word	0x0801d135
 80151d0:	0801d68d 	.word	0x0801d68d
 80151d4:	0801d1bd 	.word	0x0801d1bd

080151d8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 80151d8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80151dc:	ed2d 8b08 	vpush	{d8-d11}
 80151e0:	b099      	sub	sp, #100	; 0x64
 80151e2:	eeb0 aa40 	vmov.f32	s20, s0
 80151e6:	9308      	str	r3, [sp, #32]
 80151e8:	f9bd 30cc 	ldrsh.w	r3, [sp, #204]	; 0xcc
 80151ec:	9e2f      	ldr	r6, [sp, #188]	; 0xbc
 80151ee:	930b      	str	r3, [sp, #44]	; 0x2c
 80151f0:	f89d 30d4 	ldrb.w	r3, [sp, #212]	; 0xd4
 80151f4:	9314      	str	r3, [sp, #80]	; 0x50
 80151f6:	9113      	str	r1, [sp, #76]	; 0x4c
 80151f8:	e9dd 1330 	ldrd	r1, r3, [sp, #192]	; 0xc0
 80151fc:	9017      	str	r0, [sp, #92]	; 0x5c
 80151fe:	6870      	ldr	r0, [r6, #4]
 8015200:	9216      	str	r2, [sp, #88]	; 0x58
 8015202:	fb00 1303 	mla	r3, r0, r3, r1
 8015206:	6831      	ldr	r1, [r6, #0]
 8015208:	9a34      	ldr	r2, [sp, #208]	; 0xd0
 801520a:	f9bd 50c8 	ldrsh.w	r5, [sp, #200]	; 0xc8
 801520e:	eb01 0343 	add.w	r3, r1, r3, lsl #1
 8015212:	9309      	str	r3, [sp, #36]	; 0x24
 8015214:	6813      	ldr	r3, [r2, #0]
 8015216:	930c      	str	r3, [sp, #48]	; 0x30
 8015218:	6853      	ldr	r3, [r2, #4]
 801521a:	930d      	str	r3, [sp, #52]	; 0x34
 801521c:	006b      	lsls	r3, r5, #1
 801521e:	9312      	str	r3, [sp, #72]	; 0x48
 8015220:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 8015224:	930a      	str	r3, [sp, #40]	; 0x28
 8015226:	eef0 9a60 	vmov.f32	s19, s1
 801522a:	eeb0 9a41 	vmov.f32	s18, s2
 801522e:	eeb0 8a62 	vmov.f32	s16, s5
 8015232:	eef0 8a43 	vmov.f32	s17, s6
 8015236:	eef0 ba44 	vmov.f32	s23, s8
 801523a:	eeb0 ba64 	vmov.f32	s22, s9
 801523e:	eef0 aa45 	vmov.f32	s21, s10
 8015242:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8015244:	2b00      	cmp	r3, #0
 8015246:	dc03      	bgt.n	8015250 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x78>
 8015248:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801524a:	2b00      	cmp	r3, #0
 801524c:	f340 83bf 	ble.w	80159ce <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7f6>
 8015250:	9b08      	ldr	r3, [sp, #32]
 8015252:	2b00      	cmp	r3, #0
 8015254:	f340 81cb 	ble.w	80155ee <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x416>
 8015258:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 801525a:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801525c:	1412      	asrs	r2, r2, #16
 801525e:	ea4f 4323 	mov.w	r3, r3, asr #16
 8015262:	d42f      	bmi.n	80152c4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xec>
 8015264:	1c51      	adds	r1, r2, #1
 8015266:	428d      	cmp	r5, r1
 8015268:	dd2f      	ble.n	80152ca <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf2>
 801526a:	2b00      	cmp	r3, #0
 801526c:	db2d      	blt.n	80152ca <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf2>
 801526e:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8015270:	1c59      	adds	r1, r3, #1
 8015272:	4288      	cmp	r0, r1
 8015274:	dd29      	ble.n	80152ca <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf2>
 8015276:	9b08      	ldr	r3, [sp, #32]
 8015278:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 801527a:	992b      	ldr	r1, [sp, #172]	; 0xac
 801527c:	3b01      	subs	r3, #1
 801527e:	fb02 1203 	mla	r2, r2, r3, r1
 8015282:	1412      	asrs	r2, r2, #16
 8015284:	d42b      	bmi.n	80152de <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x106>
 8015286:	3201      	adds	r2, #1
 8015288:	4295      	cmp	r5, r2
 801528a:	dd28      	ble.n	80152de <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x106>
 801528c:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
 801528e:	992c      	ldr	r1, [sp, #176]	; 0xb0
 8015290:	fb02 1303 	mla	r3, r2, r3, r1
 8015294:	141b      	asrs	r3, r3, #16
 8015296:	d422      	bmi.n	80152de <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x106>
 8015298:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801529a:	3301      	adds	r3, #1
 801529c:	429a      	cmp	r2, r3
 801529e:	dd1e      	ble.n	80152de <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x106>
 80152a0:	9b08      	ldr	r3, [sp, #32]
 80152a2:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
 80152a6:	9315      	str	r3, [sp, #84]	; 0x54
 80152a8:	f64f 061f 	movw	r6, #63519	; 0xf81f
 80152ac:	9b15      	ldr	r3, [sp, #84]	; 0x54
 80152ae:	2b00      	cmp	r3, #0
 80152b0:	f300 8217 	bgt.w	80156e2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x50a>
 80152b4:	9b08      	ldr	r3, [sp, #32]
 80152b6:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 80152ba:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80152bc:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 80152c0:	9309      	str	r3, [sp, #36]	; 0x24
 80152c2:	e196      	b.n	80155f2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x41a>
 80152c4:	1c57      	adds	r7, r2, #1
 80152c6:	f040 8183 	bne.w	80155d0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3f8>
 80152ca:	42aa      	cmp	r2, r5
 80152cc:	f280 8180 	bge.w	80155d0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3f8>
 80152d0:	1c5e      	adds	r6, r3, #1
 80152d2:	f2c0 817d 	blt.w	80155d0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3f8>
 80152d6:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80152d8:	4293      	cmp	r3, r2
 80152da:	f280 8179 	bge.w	80155d0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3f8>
 80152de:	9b08      	ldr	r3, [sp, #32]
 80152e0:	9f09      	ldr	r7, [sp, #36]	; 0x24
 80152e2:	9315      	str	r3, [sp, #84]	; 0x54
 80152e4:	f64f 061f 	movw	r6, #63519	; 0xf81f
 80152e8:	9b15      	ldr	r3, [sp, #84]	; 0x54
 80152ea:	2b00      	cmp	r3, #0
 80152ec:	dde2      	ble.n	80152b4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xdc>
 80152ee:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80152f0:	1419      	asrs	r1, r3, #16
 80152f2:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 80152f4:	f3c3 3203 	ubfx	r2, r3, #12, #4
 80152f8:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80152fa:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 80152fe:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8015300:	141b      	asrs	r3, r3, #16
 8015302:	f100 81d3 	bmi.w	80156ac <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4d4>
 8015306:	1c58      	adds	r0, r3, #1
 8015308:	4285      	cmp	r5, r0
 801530a:	f340 81d1 	ble.w	80156b0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4d8>
 801530e:	2900      	cmp	r1, #0
 8015310:	f2c0 81ce 	blt.w	80156b0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4d8>
 8015314:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8015316:	1c48      	adds	r0, r1, #1
 8015318:	4284      	cmp	r4, r0
 801531a:	f340 81c9 	ble.w	80156b0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4d8>
 801531e:	fb01 3105 	mla	r1, r1, r5, r3
 8015322:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8015324:	fa1f fe82 	uxth.w	lr, r2
 8015328:	eb03 0a01 	add.w	sl, r3, r1
 801532c:	ea4f 100e 	mov.w	r0, lr, lsl #4
 8015330:	f813 9001 	ldrb.w	r9, [r3, r1]
 8015334:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8015338:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 801533c:	b29b      	uxth	r3, r3
 801533e:	f1bc 0f00 	cmp.w	ip, #0
 8015342:	f000 8195 	beq.w	8015670 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x498>
 8015346:	f81a 4005 	ldrb.w	r4, [sl, r5]
 801534a:	940e      	str	r4, [sp, #56]	; 0x38
 801534c:	eb0a 0b05 	add.w	fp, sl, r5
 8015350:	fa1f fa8c 	uxth.w	sl, ip
 8015354:	fb0a fe0e 	mul.w	lr, sl, lr
 8015358:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 801535c:	fa1f fa8a 	uxth.w	sl, sl
 8015360:	eba0 000e 	sub.w	r0, r0, lr
 8015364:	eba3 030a 	sub.w	r3, r3, sl
 8015368:	b280      	uxth	r0, r0
 801536a:	fb08 f000 	mul.w	r0, r8, r0
 801536e:	b29b      	uxth	r3, r3
 8015370:	fb09 0303 	mla	r3, r9, r3, r0
 8015374:	980e      	ldr	r0, [sp, #56]	; 0x38
 8015376:	f89b 4001 	ldrb.w	r4, [fp, #1]
 801537a:	940f      	str	r4, [sp, #60]	; 0x3c
 801537c:	fb0a 3300 	mla	r3, sl, r0, r3
 8015380:	fb0e 3304 	mla	r3, lr, r4, r3
 8015384:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8015388:	2b00      	cmp	r3, #0
 801538a:	f000 8114 	beq.w	80155b6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3de>
 801538e:	980c      	ldr	r0, [sp, #48]	; 0x30
 8015390:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8015392:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8015396:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 801539a:	f834 1011 	ldrh.w	r1, [r4, r1, lsl #1]
 801539e:	f000 816c 	beq.w	801567a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4a2>
 80153a2:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 80153a6:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 80153aa:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80153ae:	fb09 f101 	mul.w	r1, r9, r1
 80153b2:	fb0a fe0e 	mul.w	lr, sl, lr
 80153b6:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 80153ba:	f101 0b20 	add.w	fp, r1, #32
 80153be:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 80153c2:	44ce      	add	lr, r9
 80153c4:	eb0b 2911 	add.w	r9, fp, r1, lsr #8
 80153c8:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80153cc:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 80153d0:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 80153d4:	ea4e 0909 	orr.w	r9, lr, r9
 80153d8:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 80153dc:	8841      	ldrh	r1, [r0, #2]
 80153de:	d019      	beq.n	8015414 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x23c>
 80153e0:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 80153e4:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 80153e8:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80153ec:	fb0a fe0e 	mul.w	lr, sl, lr
 80153f0:	fb08 f801 	mul.w	r8, r8, r1
 80153f4:	f108 0b20 	add.w	fp, r8, #32
 80153f8:	ea06 115e 	and.w	r1, r6, lr, lsr #5
 80153fc:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 8015400:	448e      	add	lr, r1
 8015402:	eb0b 2118 	add.w	r1, fp, r8, lsr #8
 8015406:	0a09      	lsrs	r1, r1, #8
 8015408:	ea06 1a5e 	and.w	sl, r6, lr, lsr #5
 801540c:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8015410:	ea4a 0101 	orr.w	r1, sl, r1
 8015414:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 8015418:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 801541c:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8015420:	ea4e 0909 	orr.w	r9, lr, r9
 8015424:	ea4f 4e01 	mov.w	lr, r1, lsl #16
 8015428:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 801542c:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8015430:	ea4e 0e01 	orr.w	lr, lr, r1
 8015434:	f1bc 0f00 	cmp.w	ip, #0
 8015438:	f000 8121 	beq.w	801567e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4a6>
 801543c:	9912      	ldr	r1, [sp, #72]	; 0x48
 801543e:	eb00 0801 	add.w	r8, r0, r1
 8015442:	5a41      	ldrh	r1, [r0, r1]
 8015444:	980e      	ldr	r0, [sp, #56]	; 0x38
 8015446:	28ff      	cmp	r0, #255	; 0xff
 8015448:	d019      	beq.n	801547e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2a6>
 801544a:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801544c:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
 8015450:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8015454:	fb04 fb01 	mul.w	fp, r4, r1
 8015458:	ea4f 0ae4 	mov.w	sl, r4, asr #3
 801545c:	fb0a fa00 	mul.w	sl, sl, r0
 8015460:	f10b 0020 	add.w	r0, fp, #32
 8015464:	ea06 115a 	and.w	r1, r6, sl, lsr #5
 8015468:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 801546c:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 8015470:	4451      	add	r1, sl
 8015472:	0a00      	lsrs	r0, r0, #8
 8015474:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 8015478:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801547c:	4301      	orrs	r1, r0
 801547e:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8015480:	f8b8 0002 	ldrh.w	r0, [r8, #2]
 8015484:	2cff      	cmp	r4, #255	; 0xff
 8015486:	d01a      	beq.n	80154be <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2e6>
 8015488:	f420 68fc 	bic.w	r8, r0, #2016	; 0x7e0
 801548c:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8015490:	fb04 fb00 	mul.w	fp, r4, r0
 8015494:	ea4f 0ae4 	mov.w	sl, r4, asr #3
 8015498:	fb0a fa08 	mul.w	sl, sl, r8
 801549c:	f10b 0820 	add.w	r8, fp, #32
 80154a0:	ea06 105a 	and.w	r0, r6, sl, lsr #5
 80154a4:	eb08 281b 	add.w	r8, r8, fp, lsr #8
 80154a8:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 80154ac:	4450      	add	r0, sl
 80154ae:	ea4f 2818 	mov.w	r8, r8, lsr #8
 80154b2:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 80154b6:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 80154ba:	ea40 0008 	orr.w	r0, r0, r8
 80154be:	fb1c f802 	smulbb	r8, ip, r2
 80154c2:	ea4f 08e8 	mov.w	r8, r8, asr #3
 80154c6:	f1cc 0a10 	rsb	sl, ip, #16
 80154ca:	ebaa 0a02 	sub.w	sl, sl, r2
 80154ce:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 80154d2:	ebc8 0242 	rsb	r2, r8, r2, lsl #1
 80154d6:	eb08 0a4a 	add.w	sl, r8, sl, lsl #1
 80154da:	fb0e f202 	mul.w	r2, lr, r2
 80154de:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 80154e2:	ea4f 4e00 	mov.w	lr, r0, lsl #16
 80154e6:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 80154ea:	ebc8 0c4c 	rsb	ip, r8, ip, lsl #1
 80154ee:	fb09 220a 	mla	r2, r9, sl, r2
 80154f2:	ea4b 0101 	orr.w	r1, fp, r1
 80154f6:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 80154fa:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 80154fe:	fb0c 2201 	mla	r2, ip, r1, r2
 8015502:	ea4e 0000 	orr.w	r0, lr, r0
 8015506:	fb08 2800 	mla	r8, r8, r0, r2
 801550a:	ea4f 5258 	mov.w	r2, r8, lsr #21
 801550e:	ea4f 1858 	mov.w	r8, r8, lsr #5
 8015512:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8015516:	f428 68fc 	bic.w	r8, r8, #2016	; 0x7e0
 801551a:	ea42 0808 	orr.w	r8, r2, r8
 801551e:	fa1f f288 	uxth.w	r2, r8
 8015522:	2bff      	cmp	r3, #255	; 0xff
 8015524:	d103      	bne.n	801552e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x356>
 8015526:	9914      	ldr	r1, [sp, #80]	; 0x50
 8015528:	29ff      	cmp	r1, #255	; 0xff
 801552a:	f000 80bd 	beq.w	80156a8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4d0>
 801552e:	990a      	ldr	r1, [sp, #40]	; 0x28
 8015530:	f8b7 c000 	ldrh.w	ip, [r7]
 8015534:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8015536:	434b      	muls	r3, r1
 8015538:	f103 0e01 	add.w	lr, r3, #1
 801553c:	eb0e 2323 	add.w	r3, lr, r3, asr #8
 8015540:	ea6f 2e23 	mvn.w	lr, r3, asr #8
 8015544:	ea4f 202c 	mov.w	r0, ip, asr #8
 8015548:	fa5f fe8e 	uxtb.w	lr, lr
 801554c:	1213      	asrs	r3, r2, #8
 801554e:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8015552:	fb10 f00e 	smulbb	r0, r0, lr
 8015556:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 801555a:	fb03 0301 	mla	r3, r3, r1, r0
 801555e:	b298      	uxth	r0, r3
 8015560:	ea4f 03ec 	mov.w	r3, ip, asr #3
 8015564:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8015568:	10d1      	asrs	r1, r2, #3
 801556a:	fa5f fc8c 	uxtb.w	ip, ip
 801556e:	00d2      	lsls	r2, r2, #3
 8015570:	fb1c fc0e 	smulbb	ip, ip, lr
 8015574:	b2d2      	uxtb	r2, r2
 8015576:	fb02 c204 	mla	r2, r2, r4, ip
 801557a:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 801557e:	fb13 f30e 	smulbb	r3, r3, lr
 8015582:	b292      	uxth	r2, r2
 8015584:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8015588:	fb01 3104 	mla	r1, r1, r4, r3
 801558c:	f102 0c01 	add.w	ip, r2, #1
 8015590:	1c43      	adds	r3, r0, #1
 8015592:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8015596:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 801559a:	b289      	uxth	r1, r1
 801559c:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 80155a0:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 80155a4:	4313      	orrs	r3, r2
 80155a6:	1c4a      	adds	r2, r1, #1
 80155a8:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 80155ac:	0949      	lsrs	r1, r1, #5
 80155ae:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80155b2:	430b      	orrs	r3, r1
 80155b4:	803b      	strh	r3, [r7, #0]
 80155b6:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 80155b8:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 80155ba:	4413      	add	r3, r2
 80155bc:	932b      	str	r3, [sp, #172]	; 0xac
 80155be:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 80155c0:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 80155c2:	441a      	add	r2, r3
 80155c4:	9b15      	ldr	r3, [sp, #84]	; 0x54
 80155c6:	922c      	str	r2, [sp, #176]	; 0xb0
 80155c8:	3b01      	subs	r3, #1
 80155ca:	3702      	adds	r7, #2
 80155cc:	9315      	str	r3, [sp, #84]	; 0x54
 80155ce:	e68b      	b.n	80152e8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x110>
 80155d0:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 80155d2:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 80155d4:	4413      	add	r3, r2
 80155d6:	932b      	str	r3, [sp, #172]	; 0xac
 80155d8:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 80155da:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 80155dc:	441a      	add	r2, r3
 80155de:	9b08      	ldr	r3, [sp, #32]
 80155e0:	922c      	str	r2, [sp, #176]	; 0xb0
 80155e2:	3b01      	subs	r3, #1
 80155e4:	9308      	str	r3, [sp, #32]
 80155e6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80155e8:	3302      	adds	r3, #2
 80155ea:	9309      	str	r3, [sp, #36]	; 0x24
 80155ec:	e630      	b.n	8015250 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x78>
 80155ee:	f47f ae42 	bne.w	8015276 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9e>
 80155f2:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 80155f4:	2b00      	cmp	r3, #0
 80155f6:	f340 81ea 	ble.w	80159ce <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7f6>
 80155fa:	ee3a aa2b 	vadd.f32	s20, s20, s23
 80155fe:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8015602:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 8015606:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8015608:	ee79 9a8b 	vadd.f32	s19, s19, s22
 801560c:	ee39 9a2a 	vadd.f32	s18, s18, s21
 8015610:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8015614:	eef0 6a48 	vmov.f32	s13, s16
 8015618:	ee69 7a27 	vmul.f32	s15, s18, s15
 801561c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8015620:	ee37 8a48 	vsub.f32	s16, s14, s16
 8015624:	edcd 6a2b 	vstr	s13, [sp, #172]	; 0xac
 8015628:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 801562c:	eef0 6a68 	vmov.f32	s13, s17
 8015630:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8015634:	ee18 2a10 	vmov	r2, s16
 8015638:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 801563c:	fb92 f3f3 	sdiv	r3, r2, r3
 8015640:	ee18 2a90 	vmov	r2, s17
 8015644:	932d      	str	r3, [sp, #180]	; 0xb4
 8015646:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8015648:	fb92 f3f3 	sdiv	r3, r2, r3
 801564c:	932e      	str	r3, [sp, #184]	; 0xb8
 801564e:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8015650:	9a16      	ldr	r2, [sp, #88]	; 0x58
 8015652:	3b01      	subs	r3, #1
 8015654:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8015658:	9313      	str	r3, [sp, #76]	; 0x4c
 801565a:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801565c:	edcd 6a2c 	vstr	s13, [sp, #176]	; 0xb0
 8015660:	bf08      	it	eq
 8015662:	4613      	moveq	r3, r2
 8015664:	9308      	str	r3, [sp, #32]
 8015666:	eef0 8a67 	vmov.f32	s17, s15
 801566a:	eeb0 8a47 	vmov.f32	s16, s14
 801566e:	e5e8      	b.n	8015242 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6a>
 8015670:	fb08 f000 	mul.w	r0, r8, r0
 8015674:	fb09 0303 	mla	r3, r9, r3, r0
 8015678:	e684      	b.n	8015384 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1ac>
 801567a:	4689      	mov	r9, r1
 801567c:	e6ac      	b.n	80153d8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x200>
 801567e:	f1c2 0010 	rsb	r0, r2, #16
 8015682:	fb0e f202 	mul.w	r2, lr, r2
 8015686:	fb09 2900 	mla	r9, r9, r0, r2
 801568a:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801568e:	ea4f 5259 	mov.w	r2, r9, lsr #21
 8015692:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8015696:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801569a:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 801569e:	ea42 0909 	orr.w	r9, r2, r9
 80156a2:	fa1f f289 	uxth.w	r2, r9
 80156a6:	e73c      	b.n	8015522 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x34a>
 80156a8:	803a      	strh	r2, [r7, #0]
 80156aa:	e784      	b.n	80155b6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3de>
 80156ac:	1c5c      	adds	r4, r3, #1
 80156ae:	d182      	bne.n	80155b6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3de>
 80156b0:	429d      	cmp	r5, r3
 80156b2:	dd80      	ble.n	80155b6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3de>
 80156b4:	1c48      	adds	r0, r1, #1
 80156b6:	f6ff af7e 	blt.w	80155b6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3de>
 80156ba:	980b      	ldr	r0, [sp, #44]	; 0x2c
 80156bc:	4288      	cmp	r0, r1
 80156be:	f77f af7a 	ble.w	80155b6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3de>
 80156c2:	9814      	ldr	r0, [sp, #80]	; 0x50
 80156c4:	9302      	str	r3, [sp, #8]
 80156c6:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80156c8:	e9cd 1203 	strd	r1, r2, [sp, #12]
 80156cc:	e9cd c005 	strd	ip, r0, [sp, #20]
 80156d0:	e9cd 5300 	strd	r5, r3, [sp]
 80156d4:	4639      	mov	r1, r7
 80156d6:	e9dd 230c 	ldrd	r2, r3, [sp, #48]	; 0x30
 80156da:	9817      	ldr	r0, [sp, #92]	; 0x5c
 80156dc:	f7ff fbcc 	bl	8014e78 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>
 80156e0:	e769      	b.n	80155b6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3de>
 80156e2:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 80156e4:	f3c3 3203 	ubfx	r2, r3, #12, #4
 80156e8:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80156ea:	141f      	asrs	r7, r3, #16
 80156ec:	f3c3 3003 	ubfx	r0, r3, #12, #4
 80156f0:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 80156f2:	141b      	asrs	r3, r3, #16
 80156f4:	fb05 3707 	mla	r7, r5, r7, r3
 80156f8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80156fa:	fa1f fc82 	uxth.w	ip, r2
 80156fe:	eb03 0a07 	add.w	sl, r3, r7
 8015702:	ea4f 110c 	mov.w	r1, ip, lsl #4
 8015706:	f813 9007 	ldrb.w	r9, [r3, r7]
 801570a:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801570e:	f5c1 7380 	rsb	r3, r1, #256	; 0x100
 8015712:	b29b      	uxth	r3, r3
 8015714:	2800      	cmp	r0, #0
 8015716:	f000 813f 	beq.w	8015998 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7c0>
 801571a:	f81a 4005 	ldrb.w	r4, [sl, r5]
 801571e:	9410      	str	r4, [sp, #64]	; 0x40
 8015720:	eb0a 0b05 	add.w	fp, sl, r5
 8015724:	fa1f fa80 	uxth.w	sl, r0
 8015728:	fb0a fc0c 	mul.w	ip, sl, ip
 801572c:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 8015730:	fa1f fa8a 	uxth.w	sl, sl
 8015734:	eba1 010c 	sub.w	r1, r1, ip
 8015738:	eba3 030a 	sub.w	r3, r3, sl
 801573c:	b289      	uxth	r1, r1
 801573e:	fb08 f101 	mul.w	r1, r8, r1
 8015742:	b29b      	uxth	r3, r3
 8015744:	fb09 1303 	mla	r3, r9, r3, r1
 8015748:	9910      	ldr	r1, [sp, #64]	; 0x40
 801574a:	f89b 4001 	ldrb.w	r4, [fp, #1]
 801574e:	9411      	str	r4, [sp, #68]	; 0x44
 8015750:	fb0a 3301 	mla	r3, sl, r1, r3
 8015754:	fb0c 3304 	mla	r3, ip, r4, r3
 8015758:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801575c:	2b00      	cmp	r3, #0
 801575e:	f000 810d 	beq.w	801597c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7a4>
 8015762:	990c      	ldr	r1, [sp, #48]	; 0x30
 8015764:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8015766:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801576a:	eb01 0147 	add.w	r1, r1, r7, lsl #1
 801576e:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 8015772:	f000 8116 	beq.w	80159a2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7ca>
 8015776:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 801577a:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 801577e:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8015782:	fb09 f707 	mul.w	r7, r9, r7
 8015786:	fb0a fc0c 	mul.w	ip, sl, ip
 801578a:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 801578e:	f107 0b20 	add.w	fp, r7, #32
 8015792:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 8015796:	44cc      	add	ip, r9
 8015798:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 801579c:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80157a0:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 80157a4:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 80157a8:	ea4c 0909 	orr.w	r9, ip, r9
 80157ac:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 80157b0:	884f      	ldrh	r7, [r1, #2]
 80157b2:	d019      	beq.n	80157e8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x610>
 80157b4:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 80157b8:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 80157bc:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 80157c0:	fb08 f807 	mul.w	r8, r8, r7
 80157c4:	fb0a fc0c 	mul.w	ip, sl, ip
 80157c8:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 80157cc:	f108 0b20 	add.w	fp, r8, #32
 80157d0:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 80157d4:	44bc      	add	ip, r7
 80157d6:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 80157da:	0a3f      	lsrs	r7, r7, #8
 80157dc:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 80157e0:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 80157e4:	ea4c 0707 	orr.w	r7, ip, r7
 80157e8:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 80157ec:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 80157f0:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 80157f4:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 80157f8:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80157fc:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8015800:	ea4c 0909 	orr.w	r9, ip, r9
 8015804:	ea4a 0707 	orr.w	r7, sl, r7
 8015808:	2800      	cmp	r0, #0
 801580a:	f000 80cc 	beq.w	80159a6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7ce>
 801580e:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8015810:	eb01 0c04 	add.w	ip, r1, r4
 8015814:	f831 8004 	ldrh.w	r8, [r1, r4]
 8015818:	9910      	ldr	r1, [sp, #64]	; 0x40
 801581a:	29ff      	cmp	r1, #255	; 0xff
 801581c:	d01a      	beq.n	8015854 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x67c>
 801581e:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8015820:	f428 61fc 	bic.w	r1, r8, #2016	; 0x7e0
 8015824:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 8015828:	fb04 fb08 	mul.w	fp, r4, r8
 801582c:	ea4f 0ae4 	mov.w	sl, r4, asr #3
 8015830:	fb0a fa01 	mul.w	sl, sl, r1
 8015834:	f10b 0120 	add.w	r1, fp, #32
 8015838:	ea06 185a 	and.w	r8, r6, sl, lsr #5
 801583c:	eb01 211b 	add.w	r1, r1, fp, lsr #8
 8015840:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 8015844:	44d0      	add	r8, sl
 8015846:	0a09      	lsrs	r1, r1, #8
 8015848:	ea06 1858 	and.w	r8, r6, r8, lsr #5
 801584c:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8015850:	ea48 0801 	orr.w	r8, r8, r1
 8015854:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8015856:	f8bc 1002 	ldrh.w	r1, [ip, #2]
 801585a:	2cff      	cmp	r4, #255	; 0xff
 801585c:	d01a      	beq.n	8015894 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6bc>
 801585e:	f421 6cfc 	bic.w	ip, r1, #2016	; 0x7e0
 8015862:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8015866:	fb04 fb01 	mul.w	fp, r4, r1
 801586a:	ea4f 0ae4 	mov.w	sl, r4, asr #3
 801586e:	fb0a fa0c 	mul.w	sl, sl, ip
 8015872:	f10b 0c20 	add.w	ip, fp, #32
 8015876:	ea06 115a 	and.w	r1, r6, sl, lsr #5
 801587a:	eb0c 2c1b 	add.w	ip, ip, fp, lsr #8
 801587e:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 8015882:	4451      	add	r1, sl
 8015884:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8015888:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 801588c:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8015890:	ea41 010c 	orr.w	r1, r1, ip
 8015894:	fb10 fc02 	smulbb	ip, r0, r2
 8015898:	ea4f 0cec 	mov.w	ip, ip, asr #3
 801589c:	f1c0 0a10 	rsb	sl, r0, #16
 80158a0:	ebaa 0a02 	sub.w	sl, sl, r2
 80158a4:	ea4f 4b08 	mov.w	fp, r8, lsl #16
 80158a8:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 80158ac:	437a      	muls	r2, r7
 80158ae:	eb0c 0a4a 	add.w	sl, ip, sl, lsl #1
 80158b2:	040f      	lsls	r7, r1, #16
 80158b4:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 80158b8:	f428 68fc 	bic.w	r8, r8, #2016	; 0x7e0
 80158bc:	fb09 220a 	mla	r2, r9, sl, r2
 80158c0:	ea4b 0808 	orr.w	r8, fp, r8
 80158c4:	ebcc 0040 	rsb	r0, ip, r0, lsl #1
 80158c8:	f007 67fc 	and.w	r7, r7, #132120576	; 0x7e00000
 80158cc:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 80158d0:	fb00 2208 	mla	r2, r0, r8, r2
 80158d4:	4339      	orrs	r1, r7
 80158d6:	fb0c 2201 	mla	r2, ip, r1, r2
 80158da:	ea4f 5952 	mov.w	r9, r2, lsr #21
 80158de:	0952      	lsrs	r2, r2, #5
 80158e0:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 80158e4:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80158e8:	ea49 0202 	orr.w	r2, r9, r2
 80158ec:	2bff      	cmp	r3, #255	; 0xff
 80158ee:	b292      	uxth	r2, r2
 80158f0:	d102      	bne.n	80158f8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x720>
 80158f2:	9914      	ldr	r1, [sp, #80]	; 0x50
 80158f4:	29ff      	cmp	r1, #255	; 0xff
 80158f6:	d067      	beq.n	80159c8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7f0>
 80158f8:	990a      	ldr	r1, [sp, #40]	; 0x28
 80158fa:	f8be 0000 	ldrh.w	r0, [lr]
 80158fe:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8015900:	434b      	muls	r3, r1
 8015902:	1c59      	adds	r1, r3, #1
 8015904:	eb01 2323 	add.w	r3, r1, r3, asr #8
 8015908:	ea6f 2323 	mvn.w	r3, r3, asr #8
 801590c:	1201      	asrs	r1, r0, #8
 801590e:	b2db      	uxtb	r3, r3
 8015910:	1217      	asrs	r7, r2, #8
 8015912:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8015916:	fb11 f103 	smulbb	r1, r1, r3
 801591a:	ea4f 0ce0 	mov.w	ip, r0, asr #3
 801591e:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8015922:	00c0      	lsls	r0, r0, #3
 8015924:	fb07 1704 	mla	r7, r7, r4, r1
 8015928:	b2c0      	uxtb	r0, r0
 801592a:	10d1      	asrs	r1, r2, #3
 801592c:	00d2      	lsls	r2, r2, #3
 801592e:	fb10 f003 	smulbb	r0, r0, r3
 8015932:	b2d2      	uxtb	r2, r2
 8015934:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 8015938:	fb02 0204 	mla	r2, r2, r4, r0
 801593c:	fb1c fc03 	smulbb	ip, ip, r3
 8015940:	b2bf      	uxth	r7, r7
 8015942:	b292      	uxth	r2, r2
 8015944:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8015948:	fb01 c104 	mla	r1, r1, r4, ip
 801594c:	1c7b      	adds	r3, r7, #1
 801594e:	f102 0c01 	add.w	ip, r2, #1
 8015952:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 8015956:	eb0c 2c12 	add.w	ip, ip, r2, lsr #8
 801595a:	b289      	uxth	r1, r1
 801595c:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8015960:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8015964:	ea47 070c 	orr.w	r7, r7, ip
 8015968:	f101 0c01 	add.w	ip, r1, #1
 801596c:	eb0c 2111 	add.w	r1, ip, r1, lsr #8
 8015970:	0949      	lsrs	r1, r1, #5
 8015972:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8015976:	430f      	orrs	r7, r1
 8015978:	f8ae 7000 	strh.w	r7, [lr]
 801597c:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 801597e:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 8015980:	4413      	add	r3, r2
 8015982:	932b      	str	r3, [sp, #172]	; 0xac
 8015984:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 8015986:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8015988:	441a      	add	r2, r3
 801598a:	9b15      	ldr	r3, [sp, #84]	; 0x54
 801598c:	922c      	str	r2, [sp, #176]	; 0xb0
 801598e:	3b01      	subs	r3, #1
 8015990:	f10e 0e02 	add.w	lr, lr, #2
 8015994:	9315      	str	r3, [sp, #84]	; 0x54
 8015996:	e489      	b.n	80152ac <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xd4>
 8015998:	fb08 f101 	mul.w	r1, r8, r1
 801599c:	fb09 1303 	mla	r3, r9, r3, r1
 80159a0:	e6da      	b.n	8015758 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x580>
 80159a2:	46b9      	mov	r9, r7
 80159a4:	e702      	b.n	80157ac <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x5d4>
 80159a6:	f1c2 0110 	rsb	r1, r2, #16
 80159aa:	437a      	muls	r2, r7
 80159ac:	fb09 2901 	mla	r9, r9, r1, r2
 80159b0:	ea4f 0949 	mov.w	r9, r9, lsl #1
 80159b4:	ea4f 5059 	mov.w	r0, r9, lsr #21
 80159b8:	ea4f 1259 	mov.w	r2, r9, lsr #5
 80159bc:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80159c0:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80159c4:	4302      	orrs	r2, r0
 80159c6:	e791      	b.n	80158ec <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x714>
 80159c8:	f8ae 2000 	strh.w	r2, [lr]
 80159cc:	e7d6      	b.n	801597c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7a4>
 80159ce:	b019      	add	sp, #100	; 0x64
 80159d0:	ecbd 8b08 	vpop	{d8-d11}
 80159d4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080159d8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 80159d8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80159dc:	b087      	sub	sp, #28
 80159de:	e9dd e012 	ldrd	lr, r0, [sp, #72]	; 0x48
 80159e2:	f9bd 4040 	ldrsh.w	r4, [sp, #64]	; 0x40
 80159e6:	9105      	str	r1, [sp, #20]
 80159e8:	fb00 e604 	mla	r6, r0, r4, lr
 80159ec:	f89d 1054 	ldrb.w	r1, [sp, #84]	; 0x54
 80159f0:	9102      	str	r1, [sp, #8]
 80159f2:	eb03 0146 	add.w	r1, r3, r6, lsl #1
 80159f6:	9103      	str	r1, [sp, #12]
 80159f8:	9905      	ldr	r1, [sp, #20]
 80159fa:	f9bd 7044 	ldrsh.w	r7, [sp, #68]	; 0x44
 80159fe:	f89d 5050 	ldrb.w	r5, [sp, #80]	; 0x50
 8015a02:	8809      	ldrh	r1, [r1, #0]
 8015a04:	2800      	cmp	r0, #0
 8015a06:	eb02 0a06 	add.w	sl, r2, r6
 8015a0a:	f2c0 80ca 	blt.w	8015ba2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1ca>
 8015a0e:	4287      	cmp	r7, r0
 8015a10:	f340 80c7 	ble.w	8015ba2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1ca>
 8015a14:	f1be 0f00 	cmp.w	lr, #0
 8015a18:	f2c0 80bf 	blt.w	8015b9a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1c2>
 8015a1c:	4574      	cmp	r4, lr
 8015a1e:	f340 80bc 	ble.w	8015b9a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1c2>
 8015a22:	f812 c006 	ldrb.w	ip, [r2, r6]
 8015a26:	f833 9016 	ldrh.w	r9, [r3, r6, lsl #1]
 8015a2a:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8015a2e:	d01c      	beq.n	8015a6a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x92>
 8015a30:	f429 66fc 	bic.w	r6, r9, #2016	; 0x7e0
 8015a34:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8015a38:	4372      	muls	r2, r6
 8015a3a:	f64f 081f 	movw	r8, #63519	; 0xf81f
 8015a3e:	ea08 1352 	and.w	r3, r8, r2, lsr #5
 8015a42:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8015a46:	f602 0201 	addw	r2, r2, #2049	; 0x801
 8015a4a:	fb0c f609 	mul.w	r6, ip, r9
 8015a4e:	eb03 0902 	add.w	r9, r3, r2
 8015a52:	ea08 1959 	and.w	r9, r8, r9, lsr #5
 8015a56:	f106 0820 	add.w	r8, r6, #32
 8015a5a:	eb08 2816 	add.w	r8, r8, r6, lsr #8
 8015a5e:	ea4f 2818 	mov.w	r8, r8, lsr #8
 8015a62:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 8015a66:	ea49 0908 	orr.w	r9, r9, r8
 8015a6a:	fa1f f989 	uxth.w	r9, r9
 8015a6e:	f11e 0301 	adds.w	r3, lr, #1
 8015a72:	f100 809b 	bmi.w	8015bac <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1d4>
 8015a76:	429c      	cmp	r4, r3
 8015a78:	f340 8098 	ble.w	8015bac <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1d4>
 8015a7c:	2d00      	cmp	r5, #0
 8015a7e:	f000 8095 	beq.w	8015bac <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1d4>
 8015a82:	f89a 6001 	ldrb.w	r6, [sl, #1]
 8015a86:	9b03      	ldr	r3, [sp, #12]
 8015a88:	2eff      	cmp	r6, #255	; 0xff
 8015a8a:	885b      	ldrh	r3, [r3, #2]
 8015a8c:	d01b      	beq.n	8015ac6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xee>
 8015a8e:	f423 62fc 	bic.w	r2, r3, #2016	; 0x7e0
 8015a92:	ea4f 08e6 	mov.w	r8, r6, asr #3
 8015a96:	fb08 f202 	mul.w	r2, r8, r2
 8015a9a:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8015a9e:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 8015aa2:	fb06 f803 	mul.w	r8, r6, r3
 8015aa6:	ea0b 1352 	and.w	r3, fp, r2, lsr #5
 8015aaa:	f602 0201 	addw	r2, r2, #2049	; 0x801
 8015aae:	441a      	add	r2, r3
 8015ab0:	f108 0320 	add.w	r3, r8, #32
 8015ab4:	eb03 2318 	add.w	r3, r3, r8, lsr #8
 8015ab8:	0a1b      	lsrs	r3, r3, #8
 8015aba:	ea0b 1b52 	and.w	fp, fp, r2, lsr #5
 8015abe:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8015ac2:	ea4b 0303 	orr.w	r3, fp, r3
 8015ac6:	b29b      	uxth	r3, r3
 8015ac8:	9301      	str	r3, [sp, #4]
 8015aca:	3001      	adds	r0, #1
 8015acc:	d474      	bmi.n	8015bb8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1e0>
 8015ace:	4287      	cmp	r7, r0
 8015ad0:	dd72      	ble.n	8015bb8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1e0>
 8015ad2:	9a02      	ldr	r2, [sp, #8]
 8015ad4:	2a00      	cmp	r2, #0
 8015ad6:	f000 8111 	beq.w	8015cfc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x324>
 8015ada:	f1be 0f00 	cmp.w	lr, #0
 8015ade:	db68      	blt.n	8015bb2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1da>
 8015ae0:	4574      	cmp	r4, lr
 8015ae2:	dd66      	ble.n	8015bb2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1da>
 8015ae4:	f81a 7004 	ldrb.w	r7, [sl, r4]
 8015ae8:	9a03      	ldr	r2, [sp, #12]
 8015aea:	2fff      	cmp	r7, #255	; 0xff
 8015aec:	f832 0014 	ldrh.w	r0, [r2, r4, lsl #1]
 8015af0:	d01c      	beq.n	8015b2c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x154>
 8015af2:	f420 62fc 	bic.w	r2, r0, #2016	; 0x7e0
 8015af6:	ea4f 08e7 	mov.w	r8, r7, asr #3
 8015afa:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8015afe:	fb07 fb00 	mul.w	fp, r7, r0
 8015b02:	fb08 f802 	mul.w	r8, r8, r2
 8015b06:	f64f 001f 	movw	r0, #63519	; 0xf81f
 8015b0a:	ea00 1258 	and.w	r2, r0, r8, lsr #5
 8015b0e:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8015b12:	4490      	add	r8, r2
 8015b14:	f10b 0220 	add.w	r2, fp, #32
 8015b18:	eb02 2b1b 	add.w	fp, r2, fp, lsr #8
 8015b1c:	ea4f 2b1b 	mov.w	fp, fp, lsr #8
 8015b20:	ea00 1058 	and.w	r0, r0, r8, lsr #5
 8015b24:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 8015b28:	ea40 000b 	orr.w	r0, r0, fp
 8015b2c:	b280      	uxth	r0, r0
 8015b2e:	f11e 0e01 	adds.w	lr, lr, #1
 8015b32:	d446      	bmi.n	8015bc2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1ea>
 8015b34:	4574      	cmp	r4, lr
 8015b36:	dd44      	ble.n	8015bc2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1ea>
 8015b38:	2d00      	cmp	r5, #0
 8015b3a:	d045      	beq.n	8015bc8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1f0>
 8015b3c:	1c62      	adds	r2, r4, #1
 8015b3e:	9b03      	ldr	r3, [sp, #12]
 8015b40:	f81a 4002 	ldrb.w	r4, [sl, r2]
 8015b44:	f833 2012 	ldrh.w	r2, [r3, r2, lsl #1]
 8015b48:	2cff      	cmp	r4, #255	; 0xff
 8015b4a:	d01c      	beq.n	8015b86 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1ae>
 8015b4c:	f422 6efc 	bic.w	lr, r2, #2016	; 0x7e0
 8015b50:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8015b54:	fb08 fe0e 	mul.w	lr, r8, lr
 8015b58:	f64f 0a1f 	movw	sl, #63519	; 0xf81f
 8015b5c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8015b60:	fb04 f802 	mul.w	r8, r4, r2
 8015b64:	ea0a 125e 	and.w	r2, sl, lr, lsr #5
 8015b68:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 8015b6c:	4472      	add	r2, lr
 8015b6e:	ea0a 1252 	and.w	r2, sl, r2, lsr #5
 8015b72:	f108 0a20 	add.w	sl, r8, #32
 8015b76:	eb0a 2a18 	add.w	sl, sl, r8, lsr #8
 8015b7a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8015b7e:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8015b82:	ea42 020a 	orr.w	r2, r2, sl
 8015b86:	b292      	uxth	r2, r2
 8015b88:	2d0f      	cmp	r5, #15
 8015b8a:	d91f      	bls.n	8015bcc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1f4>
 8015b8c:	4b5f      	ldr	r3, [pc, #380]	; (8015d0c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x334>)
 8015b8e:	4a60      	ldr	r2, [pc, #384]	; (8015d10 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x338>)
 8015b90:	4860      	ldr	r0, [pc, #384]	; (8015d14 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x33c>)
 8015b92:	f240 210d 	movw	r1, #525	; 0x20d
 8015b96:	f003 fc39 	bl	801940c <__assert_func>
 8015b9a:	4689      	mov	r9, r1
 8015b9c:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8015ba0:	e765      	b.n	8015a6e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x96>
 8015ba2:	26ff      	movs	r6, #255	; 0xff
 8015ba4:	9101      	str	r1, [sp, #4]
 8015ba6:	4689      	mov	r9, r1
 8015ba8:	46b4      	mov	ip, r6
 8015baa:	e78e      	b.n	8015aca <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf2>
 8015bac:	9101      	str	r1, [sp, #4]
 8015bae:	26ff      	movs	r6, #255	; 0xff
 8015bb0:	e78b      	b.n	8015aca <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf2>
 8015bb2:	4608      	mov	r0, r1
 8015bb4:	27ff      	movs	r7, #255	; 0xff
 8015bb6:	e7ba      	b.n	8015b2e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x156>
 8015bb8:	24ff      	movs	r4, #255	; 0xff
 8015bba:	460a      	mov	r2, r1
 8015bbc:	4608      	mov	r0, r1
 8015bbe:	4627      	mov	r7, r4
 8015bc0:	e7e2      	b.n	8015b88 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1b0>
 8015bc2:	460a      	mov	r2, r1
 8015bc4:	24ff      	movs	r4, #255	; 0xff
 8015bc6:	e7df      	b.n	8015b88 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1b0>
 8015bc8:	460a      	mov	r2, r1
 8015bca:	24ff      	movs	r4, #255	; 0xff
 8015bcc:	9b02      	ldr	r3, [sp, #8]
 8015bce:	2b0f      	cmp	r3, #15
 8015bd0:	d8dc      	bhi.n	8015b8c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1b4>
 8015bd2:	f8bd e008 	ldrh.w	lr, [sp, #8]
 8015bd6:	fa1f f885 	uxth.w	r8, r5
 8015bda:	fb08 fa0e 	mul.w	sl, r8, lr
 8015bde:	ea4f 1308 	mov.w	r3, r8, lsl #4
 8015be2:	ebca 1e0e 	rsb	lr, sl, lr, lsl #4
 8015be6:	9303      	str	r3, [sp, #12]
 8015be8:	fa1f f38e 	uxth.w	r3, lr
 8015bec:	9304      	str	r3, [sp, #16]
 8015bee:	ea4f 4809 	mov.w	r8, r9, lsl #16
 8015bf2:	9b02      	ldr	r3, [sp, #8]
 8015bf4:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8015bf8:	f008 68fc 	and.w	r8, r8, #132120576	; 0x7e00000
 8015bfc:	fb15 fe03 	smulbb	lr, r5, r3
 8015c00:	ea48 0809 	orr.w	r8, r8, r9
 8015c04:	f1c3 0910 	rsb	r9, r3, #16
 8015c08:	9b01      	ldr	r3, [sp, #4]
 8015c0a:	ea4f 4b03 	mov.w	fp, r3, lsl #16
 8015c0e:	ea4f 0eee 	mov.w	lr, lr, asr #3
 8015c12:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8015c16:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8015c1a:	eba9 0905 	sub.w	r9, r9, r5
 8015c1e:	ea4b 0303 	orr.w	r3, fp, r3
 8015c22:	ebce 0545 	rsb	r5, lr, r5, lsl #1
 8015c26:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 8015c2a:	eb0e 0949 	add.w	r9, lr, r9, lsl #1
 8015c2e:	436b      	muls	r3, r5
 8015c30:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8015c34:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8015c38:	ea4b 0202 	orr.w	r2, fp, r2
 8015c3c:	fb09 3308 	mla	r3, r9, r8, r3
 8015c40:	fb0e 3302 	mla	r3, lr, r2, r3
 8015c44:	0402      	lsls	r2, r0, #16
 8015c46:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8015c4a:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8015c4e:	4310      	orrs	r0, r2
 8015c50:	9a02      	ldr	r2, [sp, #8]
 8015c52:	ebce 0e42 	rsb	lr, lr, r2, lsl #1
 8015c56:	9a03      	ldr	r2, [sp, #12]
 8015c58:	fb0e 3e00 	mla	lr, lr, r0, r3
 8015c5c:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
 8015c60:	9a04      	ldr	r2, [sp, #16]
 8015c62:	1a80      	subs	r0, r0, r2
 8015c64:	9a03      	ldr	r2, [sp, #12]
 8015c66:	eba2 020a 	sub.w	r2, r2, sl
 8015c6a:	b292      	uxth	r2, r2
 8015c6c:	b280      	uxth	r0, r0
 8015c6e:	4356      	muls	r6, r2
 8015c70:	9a04      	ldr	r2, [sp, #16]
 8015c72:	fb0c 6600 	mla	r6, ip, r0, r6
 8015c76:	fb02 6707 	mla	r7, r2, r7, r6
 8015c7a:	fb0a 7404 	mla	r4, sl, r4, r7
 8015c7e:	ea4f 535e 	mov.w	r3, lr, lsr #21
 8015c82:	1208      	asrs	r0, r1, #8
 8015c84:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8015c88:	ea6f 2424 	mvn.w	r4, r4, asr #8
 8015c8c:	b2e4      	uxtb	r4, r4
 8015c8e:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8015c92:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8015c96:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8015c9a:	4360      	muls	r0, r4
 8015c9c:	ea43 0e0e 	orr.w	lr, r3, lr
 8015ca0:	fa1f f38e 	uxth.w	r3, lr
 8015ca4:	1c42      	adds	r2, r0, #1
 8015ca6:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 8015caa:	1218      	asrs	r0, r3, #8
 8015cac:	10cd      	asrs	r5, r1, #3
 8015cae:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8015cb2:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 8015cb6:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8015cba:	4a17      	ldr	r2, [pc, #92]	; (8015d18 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x340>)
 8015cbc:	4365      	muls	r5, r4
 8015cbe:	ea02 2000 	and.w	r0, r2, r0, lsl #8
 8015cc2:	1c6a      	adds	r2, r5, #1
 8015cc4:	eb02 2515 	add.w	r5, r2, r5, lsr #8
 8015cc8:	00c9      	lsls	r1, r1, #3
 8015cca:	10da      	asrs	r2, r3, #3
 8015ccc:	b2c9      	uxtb	r1, r1
 8015cce:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8015cd2:	434c      	muls	r4, r1
 8015cd4:	eb02 2215 	add.w	r2, r2, r5, lsr #8
 8015cd8:	1c61      	adds	r1, r4, #1
 8015cda:	00d2      	lsls	r2, r2, #3
 8015cdc:	00db      	lsls	r3, r3, #3
 8015cde:	eb01 2414 	add.w	r4, r1, r4, lsr #8
 8015ce2:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8015ce6:	b2db      	uxtb	r3, r3
 8015ce8:	4302      	orrs	r2, r0
 8015cea:	eb03 2314 	add.w	r3, r3, r4, lsr #8
 8015cee:	ea42 03d3 	orr.w	r3, r2, r3, lsr #3
 8015cf2:	9a05      	ldr	r2, [sp, #20]
 8015cf4:	8013      	strh	r3, [r2, #0]
 8015cf6:	b007      	add	sp, #28
 8015cf8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015cfc:	2d0f      	cmp	r5, #15
 8015cfe:	f63f af45 	bhi.w	8015b8c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1b4>
 8015d02:	24ff      	movs	r4, #255	; 0xff
 8015d04:	460a      	mov	r2, r1
 8015d06:	4608      	mov	r0, r1
 8015d08:	4627      	mov	r7, r4
 8015d0a:	e762      	b.n	8015bd2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1fa>
 8015d0c:	0801d135 	.word	0x0801d135
 8015d10:	0801d68d 	.word	0x0801d68d
 8015d14:	0801d1bd 	.word	0x0801d1bd
 8015d18:	fffff800 	.word	0xfffff800

08015d1c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 8015d1c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015d20:	ed2d 8b08 	vpush	{d8-d11}
 8015d24:	b095      	sub	sp, #84	; 0x54
 8015d26:	eeb0 aa40 	vmov.f32	s20, s0
 8015d2a:	9e2b      	ldr	r6, [sp, #172]	; 0xac
 8015d2c:	9306      	str	r3, [sp, #24]
 8015d2e:	f9bd 30bc 	ldrsh.w	r3, [sp, #188]	; 0xbc
 8015d32:	9110      	str	r1, [sp, #64]	; 0x40
 8015d34:	9308      	str	r3, [sp, #32]
 8015d36:	e9dd 132c 	ldrd	r1, r3, [sp, #176]	; 0xb0
 8015d3a:	9013      	str	r0, [sp, #76]	; 0x4c
 8015d3c:	6870      	ldr	r0, [r6, #4]
 8015d3e:	9212      	str	r2, [sp, #72]	; 0x48
 8015d40:	fb00 1303 	mla	r3, r0, r3, r1
 8015d44:	6831      	ldr	r1, [r6, #0]
 8015d46:	9a30      	ldr	r2, [sp, #192]	; 0xc0
 8015d48:	f9bd 50b8 	ldrsh.w	r5, [sp, #184]	; 0xb8
 8015d4c:	eb01 0343 	add.w	r3, r1, r3, lsl #1
 8015d50:	9307      	str	r3, [sp, #28]
 8015d52:	6813      	ldr	r3, [r2, #0]
 8015d54:	9309      	str	r3, [sp, #36]	; 0x24
 8015d56:	6853      	ldr	r3, [r2, #4]
 8015d58:	930a      	str	r3, [sp, #40]	; 0x28
 8015d5a:	006b      	lsls	r3, r5, #1
 8015d5c:	eef0 9a60 	vmov.f32	s19, s1
 8015d60:	eeb0 9a41 	vmov.f32	s18, s2
 8015d64:	eeb0 8a62 	vmov.f32	s16, s5
 8015d68:	eef0 8a43 	vmov.f32	s17, s6
 8015d6c:	eef0 ba44 	vmov.f32	s23, s8
 8015d70:	eeb0 ba64 	vmov.f32	s22, s9
 8015d74:	eef0 aa45 	vmov.f32	s21, s10
 8015d78:	930f      	str	r3, [sp, #60]	; 0x3c
 8015d7a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8015d7c:	2b00      	cmp	r3, #0
 8015d7e:	dc03      	bgt.n	8015d88 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6c>
 8015d80:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8015d82:	2b00      	cmp	r3, #0
 8015d84:	f340 83a3 	ble.w	80164ce <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7b2>
 8015d88:	9b06      	ldr	r3, [sp, #24]
 8015d8a:	2b00      	cmp	r3, #0
 8015d8c:	f340 81bc 	ble.w	8016108 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3ec>
 8015d90:	9a27      	ldr	r2, [sp, #156]	; 0x9c
 8015d92:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8015d94:	1412      	asrs	r2, r2, #16
 8015d96:	ea4f 4323 	mov.w	r3, r3, asr #16
 8015d9a:	d42f      	bmi.n	8015dfc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe0>
 8015d9c:	1c51      	adds	r1, r2, #1
 8015d9e:	428d      	cmp	r5, r1
 8015da0:	dd2f      	ble.n	8015e02 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe6>
 8015da2:	2b00      	cmp	r3, #0
 8015da4:	db2d      	blt.n	8015e02 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe6>
 8015da6:	9808      	ldr	r0, [sp, #32]
 8015da8:	1c59      	adds	r1, r3, #1
 8015daa:	4288      	cmp	r0, r1
 8015dac:	dd29      	ble.n	8015e02 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe6>
 8015dae:	9b06      	ldr	r3, [sp, #24]
 8015db0:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8015db2:	9927      	ldr	r1, [sp, #156]	; 0x9c
 8015db4:	3b01      	subs	r3, #1
 8015db6:	fb02 1203 	mla	r2, r2, r3, r1
 8015dba:	1412      	asrs	r2, r2, #16
 8015dbc:	d42b      	bmi.n	8015e16 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfa>
 8015dbe:	3201      	adds	r2, #1
 8015dc0:	4295      	cmp	r5, r2
 8015dc2:	dd28      	ble.n	8015e16 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfa>
 8015dc4:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 8015dc6:	9928      	ldr	r1, [sp, #160]	; 0xa0
 8015dc8:	fb02 1303 	mla	r3, r2, r3, r1
 8015dcc:	141b      	asrs	r3, r3, #16
 8015dce:	d422      	bmi.n	8015e16 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfa>
 8015dd0:	9a08      	ldr	r2, [sp, #32]
 8015dd2:	3301      	adds	r3, #1
 8015dd4:	429a      	cmp	r2, r3
 8015dd6:	dd1e      	ble.n	8015e16 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfa>
 8015dd8:	9b06      	ldr	r3, [sp, #24]
 8015dda:	f8dd e01c 	ldr.w	lr, [sp, #28]
 8015dde:	9311      	str	r3, [sp, #68]	; 0x44
 8015de0:	f64f 061f 	movw	r6, #63519	; 0xf81f
 8015de4:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8015de6:	2b00      	cmp	r3, #0
 8015de8:	f300 8208 	bgt.w	80161fc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4e0>
 8015dec:	9b06      	ldr	r3, [sp, #24]
 8015dee:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8015df2:	9b07      	ldr	r3, [sp, #28]
 8015df4:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 8015df8:	9307      	str	r3, [sp, #28]
 8015dfa:	e187      	b.n	801610c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3f0>
 8015dfc:	1c57      	adds	r7, r2, #1
 8015dfe:	f040 8174 	bne.w	80160ea <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3ce>
 8015e02:	42aa      	cmp	r2, r5
 8015e04:	f280 8171 	bge.w	80160ea <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3ce>
 8015e08:	1c5e      	adds	r6, r3, #1
 8015e0a:	f2c0 816e 	blt.w	80160ea <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3ce>
 8015e0e:	9a08      	ldr	r2, [sp, #32]
 8015e10:	4293      	cmp	r3, r2
 8015e12:	f280 816a 	bge.w	80160ea <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3ce>
 8015e16:	9b06      	ldr	r3, [sp, #24]
 8015e18:	9f07      	ldr	r7, [sp, #28]
 8015e1a:	9311      	str	r3, [sp, #68]	; 0x44
 8015e1c:	f64f 061f 	movw	r6, #63519	; 0xf81f
 8015e20:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8015e22:	2b00      	cmp	r3, #0
 8015e24:	dde2      	ble.n	8015dec <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xd0>
 8015e26:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8015e28:	1419      	asrs	r1, r3, #16
 8015e2a:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8015e2c:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8015e30:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8015e32:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 8015e36:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8015e38:	141b      	asrs	r3, r3, #16
 8015e3a:	f100 81c4 	bmi.w	80161c6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4aa>
 8015e3e:	1c58      	adds	r0, r3, #1
 8015e40:	4285      	cmp	r5, r0
 8015e42:	f340 81c2 	ble.w	80161ca <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4ae>
 8015e46:	2900      	cmp	r1, #0
 8015e48:	f2c0 81bf 	blt.w	80161ca <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4ae>
 8015e4c:	9c08      	ldr	r4, [sp, #32]
 8015e4e:	1c48      	adds	r0, r1, #1
 8015e50:	4284      	cmp	r4, r0
 8015e52:	f340 81ba 	ble.w	80161ca <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4ae>
 8015e56:	fb01 3105 	mla	r1, r1, r5, r3
 8015e5a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8015e5c:	fa1f fe82 	uxth.w	lr, r2
 8015e60:	eb03 0a01 	add.w	sl, r3, r1
 8015e64:	ea4f 100e 	mov.w	r0, lr, lsl #4
 8015e68:	f813 9001 	ldrb.w	r9, [r3, r1]
 8015e6c:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8015e70:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 8015e74:	b29b      	uxth	r3, r3
 8015e76:	f1bc 0f00 	cmp.w	ip, #0
 8015e7a:	f000 8186 	beq.w	801618a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x46e>
 8015e7e:	f81a 4005 	ldrb.w	r4, [sl, r5]
 8015e82:	940b      	str	r4, [sp, #44]	; 0x2c
 8015e84:	eb0a 0b05 	add.w	fp, sl, r5
 8015e88:	fa1f fa8c 	uxth.w	sl, ip
 8015e8c:	fb0a fe0e 	mul.w	lr, sl, lr
 8015e90:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 8015e94:	fa1f fa8a 	uxth.w	sl, sl
 8015e98:	eba0 000e 	sub.w	r0, r0, lr
 8015e9c:	eba3 030a 	sub.w	r3, r3, sl
 8015ea0:	b280      	uxth	r0, r0
 8015ea2:	fb08 f000 	mul.w	r0, r8, r0
 8015ea6:	b29b      	uxth	r3, r3
 8015ea8:	fb09 0303 	mla	r3, r9, r3, r0
 8015eac:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8015eae:	f89b 4001 	ldrb.w	r4, [fp, #1]
 8015eb2:	940c      	str	r4, [sp, #48]	; 0x30
 8015eb4:	fb0a 3300 	mla	r3, sl, r0, r3
 8015eb8:	fb0e 3304 	mla	r3, lr, r4, r3
 8015ebc:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8015ec0:	2b00      	cmp	r3, #0
 8015ec2:	f000 8105 	beq.w	80160d0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3b4>
 8015ec6:	9809      	ldr	r0, [sp, #36]	; 0x24
 8015ec8:	9c09      	ldr	r4, [sp, #36]	; 0x24
 8015eca:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8015ece:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 8015ed2:	f834 1011 	ldrh.w	r1, [r4, r1, lsl #1]
 8015ed6:	f000 815d 	beq.w	8016194 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x478>
 8015eda:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 8015ede:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 8015ee2:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8015ee6:	fb09 f101 	mul.w	r1, r9, r1
 8015eea:	fb0a fe0e 	mul.w	lr, sl, lr
 8015eee:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 8015ef2:	f101 0b20 	add.w	fp, r1, #32
 8015ef6:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 8015efa:	44ce      	add	lr, r9
 8015efc:	eb0b 2911 	add.w	r9, fp, r1, lsr #8
 8015f00:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8015f04:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 8015f08:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8015f0c:	ea4e 0909 	orr.w	r9, lr, r9
 8015f10:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8015f14:	8841      	ldrh	r1, [r0, #2]
 8015f16:	d019      	beq.n	8015f4c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x230>
 8015f18:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 8015f1c:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 8015f20:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8015f24:	fb0a fe0e 	mul.w	lr, sl, lr
 8015f28:	fb08 f801 	mul.w	r8, r8, r1
 8015f2c:	f108 0b20 	add.w	fp, r8, #32
 8015f30:	ea06 115e 	and.w	r1, r6, lr, lsr #5
 8015f34:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 8015f38:	448e      	add	lr, r1
 8015f3a:	eb0b 2118 	add.w	r1, fp, r8, lsr #8
 8015f3e:	0a09      	lsrs	r1, r1, #8
 8015f40:	ea06 1a5e 	and.w	sl, r6, lr, lsr #5
 8015f44:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8015f48:	ea4a 0101 	orr.w	r1, sl, r1
 8015f4c:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 8015f50:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8015f54:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8015f58:	ea4e 0909 	orr.w	r9, lr, r9
 8015f5c:	ea4f 4e01 	mov.w	lr, r1, lsl #16
 8015f60:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8015f64:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8015f68:	ea4e 0e01 	orr.w	lr, lr, r1
 8015f6c:	f1bc 0f00 	cmp.w	ip, #0
 8015f70:	f000 8112 	beq.w	8016198 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x47c>
 8015f74:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8015f76:	eb00 0801 	add.w	r8, r0, r1
 8015f7a:	5a41      	ldrh	r1, [r0, r1]
 8015f7c:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8015f7e:	28ff      	cmp	r0, #255	; 0xff
 8015f80:	d019      	beq.n	8015fb6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x29a>
 8015f82:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8015f84:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
 8015f88:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8015f8c:	fb04 fb01 	mul.w	fp, r4, r1
 8015f90:	ea4f 0ae4 	mov.w	sl, r4, asr #3
 8015f94:	fb0a fa00 	mul.w	sl, sl, r0
 8015f98:	f10b 0020 	add.w	r0, fp, #32
 8015f9c:	ea06 115a 	and.w	r1, r6, sl, lsr #5
 8015fa0:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 8015fa4:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 8015fa8:	4451      	add	r1, sl
 8015faa:	0a00      	lsrs	r0, r0, #8
 8015fac:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 8015fb0:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8015fb4:	4301      	orrs	r1, r0
 8015fb6:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8015fb8:	f8b8 0002 	ldrh.w	r0, [r8, #2]
 8015fbc:	2cff      	cmp	r4, #255	; 0xff
 8015fbe:	d01a      	beq.n	8015ff6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2da>
 8015fc0:	f420 68fc 	bic.w	r8, r0, #2016	; 0x7e0
 8015fc4:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8015fc8:	fb04 fb00 	mul.w	fp, r4, r0
 8015fcc:	ea4f 0ae4 	mov.w	sl, r4, asr #3
 8015fd0:	fb0a fa08 	mul.w	sl, sl, r8
 8015fd4:	f10b 0820 	add.w	r8, fp, #32
 8015fd8:	ea06 105a 	and.w	r0, r6, sl, lsr #5
 8015fdc:	eb08 281b 	add.w	r8, r8, fp, lsr #8
 8015fe0:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 8015fe4:	4450      	add	r0, sl
 8015fe6:	ea4f 2818 	mov.w	r8, r8, lsr #8
 8015fea:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 8015fee:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 8015ff2:	ea40 0008 	orr.w	r0, r0, r8
 8015ff6:	fb1c f802 	smulbb	r8, ip, r2
 8015ffa:	ea4f 08e8 	mov.w	r8, r8, asr #3
 8015ffe:	f1cc 0a10 	rsb	sl, ip, #16
 8016002:	ebaa 0a02 	sub.w	sl, sl, r2
 8016006:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 801600a:	ebc8 0242 	rsb	r2, r8, r2, lsl #1
 801600e:	eb08 0a4a 	add.w	sl, r8, sl, lsl #1
 8016012:	fb0e f202 	mul.w	r2, lr, r2
 8016016:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801601a:	ea4f 4e00 	mov.w	lr, r0, lsl #16
 801601e:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8016022:	ebc8 0c4c 	rsb	ip, r8, ip, lsl #1
 8016026:	fb09 220a 	mla	r2, r9, sl, r2
 801602a:	ea4b 0101 	orr.w	r1, fp, r1
 801602e:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8016032:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8016036:	fb0c 2201 	mla	r2, ip, r1, r2
 801603a:	ea4e 0000 	orr.w	r0, lr, r0
 801603e:	fb08 2800 	mla	r8, r8, r0, r2
 8016042:	ea4f 5258 	mov.w	r2, r8, lsr #21
 8016046:	ea4f 1858 	mov.w	r8, r8, lsr #5
 801604a:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801604e:	f428 68fc 	bic.w	r8, r8, #2016	; 0x7e0
 8016052:	ea42 0808 	orr.w	r8, r2, r8
 8016056:	fa1f f288 	uxth.w	r2, r8
 801605a:	2bff      	cmp	r3, #255	; 0xff
 801605c:	f000 80b1 	beq.w	80161c2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4a6>
 8016060:	f8b7 8000 	ldrh.w	r8, [r7]
 8016064:	43db      	mvns	r3, r3
 8016066:	ea4f 2028 	mov.w	r0, r8, asr #8
 801606a:	fa5f fe83 	uxtb.w	lr, r3
 801606e:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8016072:	fb00 f00e 	mul.w	r0, r0, lr
 8016076:	1c41      	adds	r1, r0, #1
 8016078:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 801607c:	1210      	asrs	r0, r2, #8
 801607e:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 8016082:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8016086:	eb00 2011 	add.w	r0, r0, r1, lsr #8
 801608a:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 801608e:	495a      	ldr	r1, [pc, #360]	; (80161f8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4dc>)
 8016090:	fb0c fc0e 	mul.w	ip, ip, lr
 8016094:	ea01 2000 	and.w	r0, r1, r0, lsl #8
 8016098:	f10c 0101 	add.w	r1, ip, #1
 801609c:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 80160a0:	10d1      	asrs	r1, r2, #3
 80160a2:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 80160a6:	ea4f 03c8 	mov.w	r3, r8, lsl #3
 80160aa:	eb01 211c 	add.w	r1, r1, ip, lsr #8
 80160ae:	b2db      	uxtb	r3, r3
 80160b0:	00c9      	lsls	r1, r1, #3
 80160b2:	fb03 f30e 	mul.w	r3, r3, lr
 80160b6:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80160ba:	4301      	orrs	r1, r0
 80160bc:	1c58      	adds	r0, r3, #1
 80160be:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 80160c2:	00d3      	lsls	r3, r2, #3
 80160c4:	b2db      	uxtb	r3, r3
 80160c6:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 80160ca:	ea41 03d3 	orr.w	r3, r1, r3, lsr #3
 80160ce:	803b      	strh	r3, [r7, #0]
 80160d0:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 80160d2:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 80160d4:	4413      	add	r3, r2
 80160d6:	9327      	str	r3, [sp, #156]	; 0x9c
 80160d8:	9a28      	ldr	r2, [sp, #160]	; 0xa0
 80160da:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80160dc:	441a      	add	r2, r3
 80160de:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80160e0:	9228      	str	r2, [sp, #160]	; 0xa0
 80160e2:	3b01      	subs	r3, #1
 80160e4:	3702      	adds	r7, #2
 80160e6:	9311      	str	r3, [sp, #68]	; 0x44
 80160e8:	e69a      	b.n	8015e20 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x104>
 80160ea:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 80160ec:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 80160ee:	4413      	add	r3, r2
 80160f0:	9327      	str	r3, [sp, #156]	; 0x9c
 80160f2:	9a28      	ldr	r2, [sp, #160]	; 0xa0
 80160f4:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80160f6:	441a      	add	r2, r3
 80160f8:	9b06      	ldr	r3, [sp, #24]
 80160fa:	9228      	str	r2, [sp, #160]	; 0xa0
 80160fc:	3b01      	subs	r3, #1
 80160fe:	9306      	str	r3, [sp, #24]
 8016100:	9b07      	ldr	r3, [sp, #28]
 8016102:	3302      	adds	r3, #2
 8016104:	9307      	str	r3, [sp, #28]
 8016106:	e63f      	b.n	8015d88 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6c>
 8016108:	f47f ae51 	bne.w	8015dae <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x92>
 801610c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801610e:	2b00      	cmp	r3, #0
 8016110:	f340 81dd 	ble.w	80164ce <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7b2>
 8016114:	ee3a aa2b 	vadd.f32	s20, s20, s23
 8016118:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801611c:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 8016120:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8016122:	ee79 9a8b 	vadd.f32	s19, s19, s22
 8016126:	ee39 9a2a 	vadd.f32	s18, s18, s21
 801612a:	ee29 7aa7 	vmul.f32	s14, s19, s15
 801612e:	eef0 6a48 	vmov.f32	s13, s16
 8016132:	ee69 7a27 	vmul.f32	s15, s18, s15
 8016136:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801613a:	ee37 8a48 	vsub.f32	s16, s14, s16
 801613e:	edcd 6a27 	vstr	s13, [sp, #156]	; 0x9c
 8016142:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8016146:	eef0 6a68 	vmov.f32	s13, s17
 801614a:	ee77 8ae8 	vsub.f32	s17, s15, s17
 801614e:	ee18 2a10 	vmov	r2, s16
 8016152:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8016156:	fb92 f3f3 	sdiv	r3, r2, r3
 801615a:	ee18 2a90 	vmov	r2, s17
 801615e:	9329      	str	r3, [sp, #164]	; 0xa4
 8016160:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8016162:	fb92 f3f3 	sdiv	r3, r2, r3
 8016166:	932a      	str	r3, [sp, #168]	; 0xa8
 8016168:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801616a:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801616c:	3b01      	subs	r3, #1
 801616e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8016172:	9310      	str	r3, [sp, #64]	; 0x40
 8016174:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8016176:	edcd 6a28 	vstr	s13, [sp, #160]	; 0xa0
 801617a:	bf08      	it	eq
 801617c:	4613      	moveq	r3, r2
 801617e:	9306      	str	r3, [sp, #24]
 8016180:	eef0 8a67 	vmov.f32	s17, s15
 8016184:	eeb0 8a47 	vmov.f32	s16, s14
 8016188:	e5f7      	b.n	8015d7a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x5e>
 801618a:	fb08 f000 	mul.w	r0, r8, r0
 801618e:	fb09 0303 	mla	r3, r9, r3, r0
 8016192:	e693      	b.n	8015ebc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1a0>
 8016194:	4689      	mov	r9, r1
 8016196:	e6bb      	b.n	8015f10 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1f4>
 8016198:	f1c2 0010 	rsb	r0, r2, #16
 801619c:	fb0e f202 	mul.w	r2, lr, r2
 80161a0:	fb09 2900 	mla	r9, r9, r0, r2
 80161a4:	ea4f 0949 	mov.w	r9, r9, lsl #1
 80161a8:	ea4f 5259 	mov.w	r2, r9, lsr #21
 80161ac:	ea4f 1959 	mov.w	r9, r9, lsr #5
 80161b0:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80161b4:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 80161b8:	ea42 0909 	orr.w	r9, r2, r9
 80161bc:	fa1f f289 	uxth.w	r2, r9
 80161c0:	e74b      	b.n	801605a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x33e>
 80161c2:	803a      	strh	r2, [r7, #0]
 80161c4:	e784      	b.n	80160d0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3b4>
 80161c6:	1c5c      	adds	r4, r3, #1
 80161c8:	d182      	bne.n	80160d0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3b4>
 80161ca:	429d      	cmp	r5, r3
 80161cc:	dd80      	ble.n	80160d0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3b4>
 80161ce:	1c48      	adds	r0, r1, #1
 80161d0:	f6ff af7e 	blt.w	80160d0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3b4>
 80161d4:	9808      	ldr	r0, [sp, #32]
 80161d6:	4288      	cmp	r0, r1
 80161d8:	f77f af7a 	ble.w	80160d0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3b4>
 80161dc:	e9cd 3102 	strd	r3, r1, [sp, #8]
 80161e0:	e9cd 2c04 	strd	r2, ip, [sp, #16]
 80161e4:	e9cd 5000 	strd	r5, r0, [sp]
 80161e8:	e9dd 3209 	ldrd	r3, r2, [sp, #36]	; 0x24
 80161ec:	4639      	mov	r1, r7
 80161ee:	9813      	ldr	r0, [sp, #76]	; 0x4c
 80161f0:	f7ff fbf2 	bl	80159d8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 80161f4:	e76c      	b.n	80160d0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3b4>
 80161f6:	bf00      	nop
 80161f8:	fffff800 	.word	0xfffff800
 80161fc:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 80161fe:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8016202:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8016204:	141f      	asrs	r7, r3, #16
 8016206:	f3c3 3003 	ubfx	r0, r3, #12, #4
 801620a:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801620c:	141b      	asrs	r3, r3, #16
 801620e:	fb05 3707 	mla	r7, r5, r7, r3
 8016212:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8016214:	fa1f fc82 	uxth.w	ip, r2
 8016218:	eb03 0a07 	add.w	sl, r3, r7
 801621c:	ea4f 110c 	mov.w	r1, ip, lsl #4
 8016220:	f813 9007 	ldrb.w	r9, [r3, r7]
 8016224:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8016228:	f5c1 7380 	rsb	r3, r1, #256	; 0x100
 801622c:	b29b      	uxth	r3, r3
 801622e:	2800      	cmp	r0, #0
 8016230:	f000 8132 	beq.w	8016498 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x77c>
 8016234:	f81a 4005 	ldrb.w	r4, [sl, r5]
 8016238:	940d      	str	r4, [sp, #52]	; 0x34
 801623a:	eb0a 0b05 	add.w	fp, sl, r5
 801623e:	fa1f fa80 	uxth.w	sl, r0
 8016242:	fb0a fc0c 	mul.w	ip, sl, ip
 8016246:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 801624a:	fa1f fa8a 	uxth.w	sl, sl
 801624e:	eba1 010c 	sub.w	r1, r1, ip
 8016252:	eba3 030a 	sub.w	r3, r3, sl
 8016256:	b289      	uxth	r1, r1
 8016258:	fb08 f101 	mul.w	r1, r8, r1
 801625c:	b29b      	uxth	r3, r3
 801625e:	fb09 1303 	mla	r3, r9, r3, r1
 8016262:	990d      	ldr	r1, [sp, #52]	; 0x34
 8016264:	f89b 4001 	ldrb.w	r4, [fp, #1]
 8016268:	940e      	str	r4, [sp, #56]	; 0x38
 801626a:	fb0a 3301 	mla	r3, sl, r1, r3
 801626e:	fb0c 3304 	mla	r3, ip, r4, r3
 8016272:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8016276:	2b00      	cmp	r3, #0
 8016278:	f000 8100 	beq.w	801647c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x760>
 801627c:	9909      	ldr	r1, [sp, #36]	; 0x24
 801627e:	9c09      	ldr	r4, [sp, #36]	; 0x24
 8016280:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8016284:	eb01 0147 	add.w	r1, r1, r7, lsl #1
 8016288:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 801628c:	f000 8109 	beq.w	80164a2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x786>
 8016290:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 8016294:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 8016298:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801629c:	fb09 f707 	mul.w	r7, r9, r7
 80162a0:	fb0a fc0c 	mul.w	ip, sl, ip
 80162a4:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 80162a8:	f107 0b20 	add.w	fp, r7, #32
 80162ac:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 80162b0:	44cc      	add	ip, r9
 80162b2:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 80162b6:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80162ba:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 80162be:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 80162c2:	ea4c 0909 	orr.w	r9, ip, r9
 80162c6:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 80162ca:	884f      	ldrh	r7, [r1, #2]
 80162cc:	d019      	beq.n	8016302 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x5e6>
 80162ce:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 80162d2:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 80162d6:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 80162da:	fb08 f807 	mul.w	r8, r8, r7
 80162de:	fb0a fc0c 	mul.w	ip, sl, ip
 80162e2:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 80162e6:	f108 0b20 	add.w	fp, r8, #32
 80162ea:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 80162ee:	44bc      	add	ip, r7
 80162f0:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 80162f4:	0a3f      	lsrs	r7, r7, #8
 80162f6:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 80162fa:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 80162fe:	ea4c 0707 	orr.w	r7, ip, r7
 8016302:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 8016306:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 801630a:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801630e:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8016312:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8016316:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 801631a:	ea4c 0909 	orr.w	r9, ip, r9
 801631e:	ea4a 0707 	orr.w	r7, sl, r7
 8016322:	2800      	cmp	r0, #0
 8016324:	f000 80bf 	beq.w	80164a6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x78a>
 8016328:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 801632a:	eb01 0c04 	add.w	ip, r1, r4
 801632e:	f831 8004 	ldrh.w	r8, [r1, r4]
 8016332:	990d      	ldr	r1, [sp, #52]	; 0x34
 8016334:	29ff      	cmp	r1, #255	; 0xff
 8016336:	d01a      	beq.n	801636e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x652>
 8016338:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801633a:	f428 61fc 	bic.w	r1, r8, #2016	; 0x7e0
 801633e:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 8016342:	fb04 fb08 	mul.w	fp, r4, r8
 8016346:	ea4f 0ae4 	mov.w	sl, r4, asr #3
 801634a:	fb0a fa01 	mul.w	sl, sl, r1
 801634e:	f10b 0120 	add.w	r1, fp, #32
 8016352:	ea06 185a 	and.w	r8, r6, sl, lsr #5
 8016356:	eb01 211b 	add.w	r1, r1, fp, lsr #8
 801635a:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 801635e:	44d0      	add	r8, sl
 8016360:	0a09      	lsrs	r1, r1, #8
 8016362:	ea06 1858 	and.w	r8, r6, r8, lsr #5
 8016366:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801636a:	ea48 0801 	orr.w	r8, r8, r1
 801636e:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8016370:	f8bc 1002 	ldrh.w	r1, [ip, #2]
 8016374:	2cff      	cmp	r4, #255	; 0xff
 8016376:	d01a      	beq.n	80163ae <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x692>
 8016378:	f421 6cfc 	bic.w	ip, r1, #2016	; 0x7e0
 801637c:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8016380:	fb04 fb01 	mul.w	fp, r4, r1
 8016384:	ea4f 0ae4 	mov.w	sl, r4, asr #3
 8016388:	fb0a fa0c 	mul.w	sl, sl, ip
 801638c:	f10b 0c20 	add.w	ip, fp, #32
 8016390:	ea06 115a 	and.w	r1, r6, sl, lsr #5
 8016394:	eb0c 2c1b 	add.w	ip, ip, fp, lsr #8
 8016398:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 801639c:	4451      	add	r1, sl
 801639e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80163a2:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 80163a6:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 80163aa:	ea41 010c 	orr.w	r1, r1, ip
 80163ae:	fb10 fc02 	smulbb	ip, r0, r2
 80163b2:	ea4f 0cec 	mov.w	ip, ip, asr #3
 80163b6:	f1c0 0a10 	rsb	sl, r0, #16
 80163ba:	ebaa 0a02 	sub.w	sl, sl, r2
 80163be:	ea4f 4b08 	mov.w	fp, r8, lsl #16
 80163c2:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 80163c6:	437a      	muls	r2, r7
 80163c8:	eb0c 0a4a 	add.w	sl, ip, sl, lsl #1
 80163cc:	040f      	lsls	r7, r1, #16
 80163ce:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 80163d2:	f428 68fc 	bic.w	r8, r8, #2016	; 0x7e0
 80163d6:	fb09 220a 	mla	r2, r9, sl, r2
 80163da:	ea4b 0808 	orr.w	r8, fp, r8
 80163de:	ebcc 0040 	rsb	r0, ip, r0, lsl #1
 80163e2:	f007 67fc 	and.w	r7, r7, #132120576	; 0x7e00000
 80163e6:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 80163ea:	fb00 2208 	mla	r2, r0, r8, r2
 80163ee:	4339      	orrs	r1, r7
 80163f0:	fb0c 2201 	mla	r2, ip, r1, r2
 80163f4:	ea4f 5952 	mov.w	r9, r2, lsr #21
 80163f8:	0952      	lsrs	r2, r2, #5
 80163fa:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 80163fe:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8016402:	ea49 0202 	orr.w	r2, r9, r2
 8016406:	2bff      	cmp	r3, #255	; 0xff
 8016408:	b292      	uxth	r2, r2
 801640a:	d05d      	beq.n	80164c8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7ac>
 801640c:	f8be 8000 	ldrh.w	r8, [lr]
 8016410:	4c31      	ldr	r4, [pc, #196]	; (80164d8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7bc>)
 8016412:	43db      	mvns	r3, r3
 8016414:	ea4f 2028 	mov.w	r0, r8, asr #8
 8016418:	fa5f fc83 	uxtb.w	ip, r3
 801641c:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8016420:	ea4f 07e8 	mov.w	r7, r8, asr #3
 8016424:	fb00 f00c 	mul.w	r0, r0, ip
 8016428:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801642c:	fb07 f10c 	mul.w	r1, r7, ip
 8016430:	1c47      	adds	r7, r0, #1
 8016432:	eb07 2010 	add.w	r0, r7, r0, lsr #8
 8016436:	1217      	asrs	r7, r2, #8
 8016438:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801643c:	eb07 2010 	add.w	r0, r7, r0, lsr #8
 8016440:	1c4f      	adds	r7, r1, #1
 8016442:	eb07 2711 	add.w	r7, r7, r1, lsr #8
 8016446:	10d1      	asrs	r1, r2, #3
 8016448:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801644c:	ea4f 03c8 	mov.w	r3, r8, lsl #3
 8016450:	eb01 2117 	add.w	r1, r1, r7, lsr #8
 8016454:	b2db      	uxtb	r3, r3
 8016456:	00c9      	lsls	r1, r1, #3
 8016458:	fb03 f30c 	mul.w	r3, r3, ip
 801645c:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8016460:	ea04 2000 	and.w	r0, r4, r0, lsl #8
 8016464:	4308      	orrs	r0, r1
 8016466:	00d2      	lsls	r2, r2, #3
 8016468:	1c59      	adds	r1, r3, #1
 801646a:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 801646e:	b2d2      	uxtb	r2, r2
 8016470:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 8016474:	ea40 00d3 	orr.w	r0, r0, r3, lsr #3
 8016478:	f8ae 0000 	strh.w	r0, [lr]
 801647c:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801647e:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8016480:	4413      	add	r3, r2
 8016482:	9327      	str	r3, [sp, #156]	; 0x9c
 8016484:	9a28      	ldr	r2, [sp, #160]	; 0xa0
 8016486:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8016488:	441a      	add	r2, r3
 801648a:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801648c:	9228      	str	r2, [sp, #160]	; 0xa0
 801648e:	3b01      	subs	r3, #1
 8016490:	f10e 0e02 	add.w	lr, lr, #2
 8016494:	9311      	str	r3, [sp, #68]	; 0x44
 8016496:	e4a5      	b.n	8015de4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xc8>
 8016498:	fb08 f101 	mul.w	r1, r8, r1
 801649c:	fb09 1303 	mla	r3, r9, r3, r1
 80164a0:	e6e7      	b.n	8016272 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x556>
 80164a2:	46b9      	mov	r9, r7
 80164a4:	e70f      	b.n	80162c6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x5aa>
 80164a6:	f1c2 0110 	rsb	r1, r2, #16
 80164aa:	437a      	muls	r2, r7
 80164ac:	fb09 2901 	mla	r9, r9, r1, r2
 80164b0:	ea4f 0949 	mov.w	r9, r9, lsl #1
 80164b4:	ea4f 5059 	mov.w	r0, r9, lsr #21
 80164b8:	ea4f 1259 	mov.w	r2, r9, lsr #5
 80164bc:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80164c0:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80164c4:	4302      	orrs	r2, r0
 80164c6:	e79e      	b.n	8016406 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6ea>
 80164c8:	f8ae 2000 	strh.w	r2, [lr]
 80164cc:	e7d6      	b.n	801647c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x760>
 80164ce:	b015      	add	sp, #84	; 0x54
 80164d0:	ecbd 8b08 	vpop	{d8-d11}
 80164d4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80164d8:	fffff800 	.word	0xfffff800

080164dc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>:
 80164dc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80164e0:	e9dd 4c09 	ldrd	r4, ip, [sp, #36]	; 0x24
 80164e4:	fb0c 4e03 	mla	lr, ip, r3, r4
 80164e8:	f1bc 0f00 	cmp.w	ip, #0
 80164ec:	f9bd a020 	ldrsh.w	sl, [sp, #32]
 80164f0:	f89d 702c 	ldrb.w	r7, [sp, #44]	; 0x2c
 80164f4:	f89d 6030 	ldrb.w	r6, [sp, #48]	; 0x30
 80164f8:	f89d 5034 	ldrb.w	r5, [sp, #52]	; 0x34
 80164fc:	8808      	ldrh	r0, [r1, #0]
 80164fe:	eb02 084e 	add.w	r8, r2, lr, lsl #1
 8016502:	db2f      	blt.n	8016564 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x88>
 8016504:	45e2      	cmp	sl, ip
 8016506:	dd2d      	ble.n	8016564 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x88>
 8016508:	2c00      	cmp	r4, #0
 801650a:	db29      	blt.n	8016560 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x84>
 801650c:	42a3      	cmp	r3, r4
 801650e:	dd27      	ble.n	8016560 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x84>
 8016510:	f832 901e 	ldrh.w	r9, [r2, lr, lsl #1]
 8016514:	1c62      	adds	r2, r4, #1
 8016516:	d428      	bmi.n	801656a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x8e>
 8016518:	4293      	cmp	r3, r2
 801651a:	dd26      	ble.n	801656a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x8e>
 801651c:	b32f      	cbz	r7, 801656a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x8e>
 801651e:	f8b8 e002 	ldrh.w	lr, [r8, #2]
 8016522:	f11c 0c01 	adds.w	ip, ip, #1
 8016526:	d424      	bmi.n	8016572 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x96>
 8016528:	45e2      	cmp	sl, ip
 801652a:	dd22      	ble.n	8016572 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x96>
 801652c:	2e00      	cmp	r6, #0
 801652e:	f000 809c 	beq.w	801666a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18e>
 8016532:	2c00      	cmp	r4, #0
 8016534:	db1b      	blt.n	801656e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x92>
 8016536:	42a3      	cmp	r3, r4
 8016538:	dd19      	ble.n	801656e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x92>
 801653a:	f838 c013 	ldrh.w	ip, [r8, r3, lsl #1]
 801653e:	3401      	adds	r4, #1
 8016540:	d41a      	bmi.n	8016578 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x9c>
 8016542:	42a3      	cmp	r3, r4
 8016544:	dd18      	ble.n	8016578 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x9c>
 8016546:	b1cf      	cbz	r7, 801657c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0xa0>
 8016548:	3301      	adds	r3, #1
 801654a:	f838 3013 	ldrh.w	r3, [r8, r3, lsl #1]
 801654e:	2f0f      	cmp	r7, #15
 8016550:	d915      	bls.n	801657e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0xa2>
 8016552:	4b49      	ldr	r3, [pc, #292]	; (8016678 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x19c>)
 8016554:	4a49      	ldr	r2, [pc, #292]	; (801667c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x1a0>)
 8016556:	484a      	ldr	r0, [pc, #296]	; (8016680 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x1a4>)
 8016558:	f240 11ef 	movw	r1, #495	; 0x1ef
 801655c:	f002 ff56 	bl	801940c <__assert_func>
 8016560:	4681      	mov	r9, r0
 8016562:	e7d7      	b.n	8016514 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x38>
 8016564:	4686      	mov	lr, r0
 8016566:	4681      	mov	r9, r0
 8016568:	e7db      	b.n	8016522 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x46>
 801656a:	4686      	mov	lr, r0
 801656c:	e7d9      	b.n	8016522 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x46>
 801656e:	4684      	mov	ip, r0
 8016570:	e7e5      	b.n	801653e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x62>
 8016572:	4603      	mov	r3, r0
 8016574:	4684      	mov	ip, r0
 8016576:	e7ea      	b.n	801654e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x72>
 8016578:	4603      	mov	r3, r0
 801657a:	e7e8      	b.n	801654e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x72>
 801657c:	4603      	mov	r3, r0
 801657e:	2e0f      	cmp	r6, #15
 8016580:	d8e7      	bhi.n	8016552 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x76>
 8016582:	ea4f 4409 	mov.w	r4, r9, lsl #16
 8016586:	fb17 f806 	smulbb	r8, r7, r6
 801658a:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 801658e:	ea4f 4a0e 	mov.w	sl, lr, lsl #16
 8016592:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8016596:	ea4f 08e8 	mov.w	r8, r8, asr #3
 801659a:	ea44 0909 	orr.w	r9, r4, r9
 801659e:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80165a2:	f1c6 0410 	rsb	r4, r6, #16
 80165a6:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 80165aa:	1be4      	subs	r4, r4, r7
 80165ac:	041a      	lsls	r2, r3, #16
 80165ae:	ebc8 0747 	rsb	r7, r8, r7, lsl #1
 80165b2:	ea4a 0e0e 	orr.w	lr, sl, lr
 80165b6:	fb07 fe0e 	mul.w	lr, r7, lr
 80165ba:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 80165be:	eb08 0444 	add.w	r4, r8, r4, lsl #1
 80165c2:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 80165c6:	fb04 e409 	mla	r4, r4, r9, lr
 80165ca:	4313      	orrs	r3, r2
 80165cc:	ea4f 420c 	mov.w	r2, ip, lsl #16
 80165d0:	fb08 4303 	mla	r3, r8, r3, r4
 80165d4:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 80165d8:	f42c 64fc 	bic.w	r4, ip, #2016	; 0x7e0
 80165dc:	4322      	orrs	r2, r4
 80165de:	ebc8 0646 	rsb	r6, r8, r6, lsl #1
 80165e2:	fb06 3202 	mla	r2, r6, r2, r3
 80165e6:	0d53      	lsrs	r3, r2, #21
 80165e8:	0952      	lsrs	r2, r2, #5
 80165ea:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80165ee:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80165f2:	431a      	orrs	r2, r3
 80165f4:	b293      	uxth	r3, r2
 80165f6:	b2af      	uxth	r7, r5
 80165f8:	1202      	asrs	r2, r0, #8
 80165fa:	43ed      	mvns	r5, r5
 80165fc:	b2ed      	uxtb	r5, r5
 80165fe:	ea4f 2c23 	mov.w	ip, r3, asr #8
 8016602:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8016606:	fb12 f205 	smulbb	r2, r2, r5
 801660a:	10c6      	asrs	r6, r0, #3
 801660c:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8016610:	fb0c 2c07 	mla	ip, ip, r7, r2
 8016614:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8016618:	10da      	asrs	r2, r3, #3
 801661a:	fb16 f605 	smulbb	r6, r6, r5
 801661e:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8016622:	fb02 6207 	mla	r2, r2, r7, r6
 8016626:	b296      	uxth	r6, r2
 8016628:	00c2      	lsls	r2, r0, #3
 801662a:	00dc      	lsls	r4, r3, #3
 801662c:	b2d2      	uxtb	r2, r2
 801662e:	b2e4      	uxtb	r4, r4
 8016630:	fb12 f205 	smulbb	r2, r2, r5
 8016634:	fb04 2207 	mla	r2, r4, r7, r2
 8016638:	fa1f fc8c 	uxth.w	ip, ip
 801663c:	b292      	uxth	r2, r2
 801663e:	f10c 0301 	add.w	r3, ip, #1
 8016642:	1c50      	adds	r0, r2, #1
 8016644:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 8016648:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 801664c:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8016650:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 8016654:	4313      	orrs	r3, r2
 8016656:	1c72      	adds	r2, r6, #1
 8016658:	eb02 2216 	add.w	r2, r2, r6, lsr #8
 801665c:	0952      	lsrs	r2, r2, #5
 801665e:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8016662:	4313      	orrs	r3, r2
 8016664:	800b      	strh	r3, [r1, #0]
 8016666:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801666a:	2f0f      	cmp	r7, #15
 801666c:	f63f af71 	bhi.w	8016552 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x76>
 8016670:	4603      	mov	r3, r0
 8016672:	4684      	mov	ip, r0
 8016674:	e785      	b.n	8016582 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0xa6>
 8016676:	bf00      	nop
 8016678:	0801d135 	.word	0x0801d135
 801667c:	0801d736 	.word	0x0801d736
 8016680:	0801d1bd 	.word	0x0801d1bd

08016684 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 8016684:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016688:	ed2d 8b08 	vpush	{d8-d11}
 801668c:	b095      	sub	sp, #84	; 0x54
 801668e:	e9dd 4627 	ldrd	r4, r6, [sp, #156]	; 0x9c
 8016692:	9306      	str	r3, [sp, #24]
 8016694:	f9bd 30bc 	ldrsh.w	r3, [sp, #188]	; 0xbc
 8016698:	9212      	str	r2, [sp, #72]	; 0x48
 801669a:	9307      	str	r3, [sp, #28]
 801669c:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 801669e:	f89d 30c4 	ldrb.w	r3, [sp, #196]	; 0xc4
 80166a2:	930c      	str	r3, [sp, #48]	; 0x30
 80166a4:	910b      	str	r1, [sp, #44]	; 0x2c
 80166a6:	e9dd 132c 	ldrd	r1, r3, [sp, #176]	; 0xb0
 80166aa:	9013      	str	r0, [sp, #76]	; 0x4c
 80166ac:	6850      	ldr	r0, [r2, #4]
 80166ae:	6812      	ldr	r2, [r2, #0]
 80166b0:	f9bd 70b8 	ldrsh.w	r7, [sp, #184]	; 0xb8
 80166b4:	fb00 1303 	mla	r3, r0, r3, r1
 80166b8:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 80166bc:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 80166be:	681b      	ldr	r3, [r3, #0]
 80166c0:	9309      	str	r3, [sp, #36]	; 0x24
 80166c2:	007b      	lsls	r3, r7, #1
 80166c4:	930a      	str	r3, [sp, #40]	; 0x28
 80166c6:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80166c8:	43db      	mvns	r3, r3
 80166ca:	b2db      	uxtb	r3, r3
 80166cc:	eeb0 aa40 	vmov.f32	s20, s0
 80166d0:	eef0 9a60 	vmov.f32	s19, s1
 80166d4:	eeb0 9a41 	vmov.f32	s18, s2
 80166d8:	eeb0 8a62 	vmov.f32	s16, s5
 80166dc:	eef0 8a43 	vmov.f32	s17, s6
 80166e0:	eef0 ba44 	vmov.f32	s23, s8
 80166e4:	eeb0 ba64 	vmov.f32	s22, s9
 80166e8:	eef0 aa45 	vmov.f32	s21, s10
 80166ec:	9308      	str	r3, [sp, #32]
 80166ee:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80166f0:	2b00      	cmp	r3, #0
 80166f2:	dc03      	bgt.n	80166fc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x78>
 80166f4:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80166f6:	2b00      	cmp	r3, #0
 80166f8:	f340 81f3 	ble.w	8016ae2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x45e>
 80166fc:	9b06      	ldr	r3, [sp, #24]
 80166fe:	2b00      	cmp	r3, #0
 8016700:	f340 80fa 	ble.w	80168f8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x274>
 8016704:	1422      	asrs	r2, r4, #16
 8016706:	ea4f 4326 	mov.w	r3, r6, asr #16
 801670a:	d42b      	bmi.n	8016764 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe0>
 801670c:	1c51      	adds	r1, r2, #1
 801670e:	428f      	cmp	r7, r1
 8016710:	dd2b      	ble.n	801676a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe6>
 8016712:	2b00      	cmp	r3, #0
 8016714:	db29      	blt.n	801676a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe6>
 8016716:	9807      	ldr	r0, [sp, #28]
 8016718:	1c59      	adds	r1, r3, #1
 801671a:	4288      	cmp	r0, r1
 801671c:	dd25      	ble.n	801676a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe6>
 801671e:	9b06      	ldr	r3, [sp, #24]
 8016720:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8016722:	3b01      	subs	r3, #1
 8016724:	fb02 4203 	mla	r2, r2, r3, r4
 8016728:	1412      	asrs	r2, r2, #16
 801672a:	d428      	bmi.n	801677e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfa>
 801672c:	3201      	adds	r2, #1
 801672e:	4297      	cmp	r7, r2
 8016730:	dd25      	ble.n	801677e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfa>
 8016732:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 8016734:	fb02 6303 	mla	r3, r2, r3, r6
 8016738:	141b      	asrs	r3, r3, #16
 801673a:	d420      	bmi.n	801677e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfa>
 801673c:	9a07      	ldr	r2, [sp, #28]
 801673e:	3301      	adds	r3, #1
 8016740:	429a      	cmp	r2, r3
 8016742:	dd1c      	ble.n	801677e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfa>
 8016744:	f8dd 8018 	ldr.w	r8, [sp, #24]
 8016748:	f8bd a030 	ldrh.w	sl, [sp, #48]	; 0x30
 801674c:	f8cd 9034 	str.w	r9, [sp, #52]	; 0x34
 8016750:	f1b8 0f00 	cmp.w	r8, #0
 8016754:	f300 8129 	bgt.w	80169aa <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x326>
 8016758:	9b06      	ldr	r3, [sp, #24]
 801675a:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 801675e:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 8016762:	e0cb      	b.n	80168fc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x278>
 8016764:	1c51      	adds	r1, r2, #1
 8016766:	f040 80bd 	bne.w	80168e4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x260>
 801676a:	42ba      	cmp	r2, r7
 801676c:	f280 80ba 	bge.w	80168e4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x260>
 8016770:	1c5a      	adds	r2, r3, #1
 8016772:	f2c0 80b7 	blt.w	80168e4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x260>
 8016776:	9a07      	ldr	r2, [sp, #28]
 8016778:	4293      	cmp	r3, r2
 801677a:	f280 80b3 	bge.w	80168e4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x260>
 801677e:	f8dd b018 	ldr.w	fp, [sp, #24]
 8016782:	46c8      	mov	r8, r9
 8016784:	f1bb 0f00 	cmp.w	fp, #0
 8016788:	dde6      	ble.n	8016758 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xd4>
 801678a:	1421      	asrs	r1, r4, #16
 801678c:	ea4f 4226 	mov.w	r2, r6, asr #16
 8016790:	f3c4 3303 	ubfx	r3, r4, #12, #4
 8016794:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8016798:	f100 80ef 	bmi.w	801697a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2f6>
 801679c:	f101 0c01 	add.w	ip, r1, #1
 80167a0:	4567      	cmp	r7, ip
 80167a2:	f340 80ec 	ble.w	801697e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2fa>
 80167a6:	2a00      	cmp	r2, #0
 80167a8:	f2c0 80e9 	blt.w	801697e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2fa>
 80167ac:	9d07      	ldr	r5, [sp, #28]
 80167ae:	f102 0c01 	add.w	ip, r2, #1
 80167b2:	4565      	cmp	r5, ip
 80167b4:	f340 80e3 	ble.w	801697e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2fa>
 80167b8:	fb02 1207 	mla	r2, r2, r7, r1
 80167bc:	9909      	ldr	r1, [sp, #36]	; 0x24
 80167be:	eb01 0e42 	add.w	lr, r1, r2, lsl #1
 80167c2:	f831 c012 	ldrh.w	ip, [r1, r2, lsl #1]
 80167c6:	f8be 1002 	ldrh.w	r1, [lr, #2]
 80167ca:	b138      	cbz	r0, 80167dc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x158>
 80167cc:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80167ce:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 80167d0:	4472      	add	r2, lr
 80167d2:	f83e 5005 	ldrh.w	r5, [lr, r5]
 80167d6:	8852      	ldrh	r2, [r2, #2]
 80167d8:	950e      	str	r5, [sp, #56]	; 0x38
 80167da:	920f      	str	r2, [sp, #60]	; 0x3c
 80167dc:	ea4f 4e0c 	mov.w	lr, ip, lsl #16
 80167e0:	fb13 f200 	smulbb	r2, r3, r0
 80167e4:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 80167e8:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 80167ec:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 80167f0:	10d2      	asrs	r2, r2, #3
 80167f2:	ea4e 0c0c 	orr.w	ip, lr, ip
 80167f6:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80167fa:	f1c0 0e10 	rsb	lr, r0, #16
 80167fe:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8016802:	ebae 0e03 	sub.w	lr, lr, r3
 8016806:	ea4a 0101 	orr.w	r1, sl, r1
 801680a:	ebc2 0343 	rsb	r3, r2, r3, lsl #1
 801680e:	4359      	muls	r1, r3
 8016810:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8016812:	9d08      	ldr	r5, [sp, #32]
 8016814:	eb02 0e4e 	add.w	lr, r2, lr, lsl #1
 8016818:	fb0e 1e0c 	mla	lr, lr, ip, r1
 801681c:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8016820:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8016824:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8016828:	ea4c 0c03 	orr.w	ip, ip, r3
 801682c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801682e:	990e      	ldr	r1, [sp, #56]	; 0x38
 8016830:	041b      	lsls	r3, r3, #16
 8016832:	fb02 ec0c 	mla	ip, r2, ip, lr
 8016836:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801683a:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 801683e:	ea43 030e 	orr.w	r3, r3, lr
 8016842:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 8016846:	fb02 c203 	mla	r2, r2, r3, ip
 801684a:	0d53      	lsrs	r3, r2, #21
 801684c:	0952      	lsrs	r2, r2, #5
 801684e:	f8b8 c000 	ldrh.w	ip, [r8]
 8016852:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8016856:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801685a:	431a      	orrs	r2, r3
 801685c:	b292      	uxth	r2, r2
 801685e:	ea4f 212c 	mov.w	r1, ip, asr #8
 8016862:	f8bd 3030 	ldrh.w	r3, [sp, #48]	; 0x30
 8016866:	1210      	asrs	r0, r2, #8
 8016868:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801686c:	fb11 f105 	smulbb	r1, r1, r5
 8016870:	ea4f 0eec 	mov.w	lr, ip, asr #3
 8016874:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8016878:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801687c:	fb00 1003 	mla	r0, r0, r3, r1
 8016880:	fa5f fc8c 	uxtb.w	ip, ip
 8016884:	10d1      	asrs	r1, r2, #3
 8016886:	00d2      	lsls	r2, r2, #3
 8016888:	fb1c fc05 	smulbb	ip, ip, r5
 801688c:	b2d2      	uxtb	r2, r2
 801688e:	fb02 c203 	mla	r2, r2, r3, ip
 8016892:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 8016896:	b280      	uxth	r0, r0
 8016898:	b292      	uxth	r2, r2
 801689a:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801689e:	fb1e fe05 	smulbb	lr, lr, r5
 80168a2:	fb01 e103 	mla	r1, r1, r3, lr
 80168a6:	f102 0c01 	add.w	ip, r2, #1
 80168aa:	1c43      	adds	r3, r0, #1
 80168ac:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 80168b0:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 80168b4:	b289      	uxth	r1, r1
 80168b6:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 80168ba:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 80168be:	4313      	orrs	r3, r2
 80168c0:	1c4a      	adds	r2, r1, #1
 80168c2:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 80168c6:	0949      	lsrs	r1, r1, #5
 80168c8:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80168cc:	430b      	orrs	r3, r1
 80168ce:	f8a8 3000 	strh.w	r3, [r8]
 80168d2:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80168d4:	441c      	add	r4, r3
 80168d6:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80168d8:	f108 0802 	add.w	r8, r8, #2
 80168dc:	441e      	add	r6, r3
 80168de:	f10b 3bff 	add.w	fp, fp, #4294967295
 80168e2:	e74f      	b.n	8016784 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x100>
 80168e4:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80168e6:	441c      	add	r4, r3
 80168e8:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80168ea:	441e      	add	r6, r3
 80168ec:	9b06      	ldr	r3, [sp, #24]
 80168ee:	3b01      	subs	r3, #1
 80168f0:	9306      	str	r3, [sp, #24]
 80168f2:	f109 0902 	add.w	r9, r9, #2
 80168f6:	e701      	b.n	80166fc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x78>
 80168f8:	f47f af11 	bne.w	801671e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9a>
 80168fc:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80168fe:	2b00      	cmp	r3, #0
 8016900:	f340 80ef 	ble.w	8016ae2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x45e>
 8016904:	ee3a aa2b 	vadd.f32	s20, s20, s23
 8016908:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801690c:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 8016910:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8016912:	ee79 9a8b 	vadd.f32	s19, s19, s22
 8016916:	ee39 9a2a 	vadd.f32	s18, s18, s21
 801691a:	ee29 7aa7 	vmul.f32	s14, s19, s15
 801691e:	eef0 6a48 	vmov.f32	s13, s16
 8016922:	ee69 7a27 	vmul.f32	s15, s18, s15
 8016926:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801692a:	ee37 8a48 	vsub.f32	s16, s14, s16
 801692e:	ee16 4a90 	vmov	r4, s13
 8016932:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8016936:	eef0 6a68 	vmov.f32	s13, s17
 801693a:	ee77 8ae8 	vsub.f32	s17, s15, s17
 801693e:	ee18 2a10 	vmov	r2, s16
 8016942:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8016946:	fb92 f3f3 	sdiv	r3, r2, r3
 801694a:	ee18 2a90 	vmov	r2, s17
 801694e:	9329      	str	r3, [sp, #164]	; 0xa4
 8016950:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8016952:	fb92 f3f3 	sdiv	r3, r2, r3
 8016956:	932a      	str	r3, [sp, #168]	; 0xa8
 8016958:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801695a:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801695c:	3b01      	subs	r3, #1
 801695e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8016962:	930b      	str	r3, [sp, #44]	; 0x2c
 8016964:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8016966:	bf08      	it	eq
 8016968:	4613      	moveq	r3, r2
 801696a:	ee16 6a90 	vmov	r6, s13
 801696e:	9306      	str	r3, [sp, #24]
 8016970:	eef0 8a67 	vmov.f32	s17, s15
 8016974:	eeb0 8a47 	vmov.f32	s16, s14
 8016978:	e6b9      	b.n	80166ee <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6a>
 801697a:	1c4d      	adds	r5, r1, #1
 801697c:	d1a9      	bne.n	80168d2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x24e>
 801697e:	428f      	cmp	r7, r1
 8016980:	dda7      	ble.n	80168d2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x24e>
 8016982:	1c55      	adds	r5, r2, #1
 8016984:	dba5      	blt.n	80168d2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x24e>
 8016986:	9d07      	ldr	r5, [sp, #28]
 8016988:	4295      	cmp	r5, r2
 801698a:	dda2      	ble.n	80168d2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x24e>
 801698c:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801698e:	9101      	str	r1, [sp, #4]
 8016990:	e9cd 2302 	strd	r2, r3, [sp, #8]
 8016994:	9b07      	ldr	r3, [sp, #28]
 8016996:	9300      	str	r3, [sp, #0]
 8016998:	e9cd 0504 	strd	r0, r5, [sp, #16]
 801699c:	463b      	mov	r3, r7
 801699e:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80169a0:	9813      	ldr	r0, [sp, #76]	; 0x4c
 80169a2:	4641      	mov	r1, r8
 80169a4:	f7ff fd9a 	bl	80164dc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>
 80169a8:	e793      	b.n	80168d2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x24e>
 80169aa:	1422      	asrs	r2, r4, #16
 80169ac:	1431      	asrs	r1, r6, #16
 80169ae:	fb07 2101 	mla	r1, r7, r1, r2
 80169b2:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80169b4:	9809      	ldr	r0, [sp, #36]	; 0x24
 80169b6:	eb02 0241 	add.w	r2, r2, r1, lsl #1
 80169ba:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 80169be:	f830 c011 	ldrh.w	ip, [r0, r1, lsl #1]
 80169c2:	8851      	ldrh	r1, [r2, #2]
 80169c4:	f3c4 3303 	ubfx	r3, r4, #12, #4
 80169c8:	f1be 0f00 	cmp.w	lr, #0
 80169cc:	d006      	beq.n	80169dc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x358>
 80169ce:	980a      	ldr	r0, [sp, #40]	; 0x28
 80169d0:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 80169d2:	1810      	adds	r0, r2, r0
 80169d4:	5b52      	ldrh	r2, [r2, r5]
 80169d6:	9210      	str	r2, [sp, #64]	; 0x40
 80169d8:	8842      	ldrh	r2, [r0, #2]
 80169da:	9211      	str	r2, [sp, #68]	; 0x44
 80169dc:	ea4f 400c 	mov.w	r0, ip, lsl #16
 80169e0:	fb13 f20e 	smulbb	r2, r3, lr
 80169e4:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 80169e8:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 80169ec:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 80169f0:	10d2      	asrs	r2, r2, #3
 80169f2:	ea40 000c 	orr.w	r0, r0, ip
 80169f6:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 80169fa:	f1ce 0c10 	rsb	ip, lr, #16
 80169fe:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8016a02:	ebac 0c03 	sub.w	ip, ip, r3
 8016a06:	ea4b 0101 	orr.w	r1, fp, r1
 8016a0a:	ebc2 0343 	rsb	r3, r2, r3, lsl #1
 8016a0e:	4359      	muls	r1, r3
 8016a10:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8016a12:	9d08      	ldr	r5, [sp, #32]
 8016a14:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 8016a18:	fb0c 1c00 	mla	ip, ip, r0, r1
 8016a1c:	ea4f 4b03 	mov.w	fp, r3, lsl #16
 8016a20:	f423 60fc 	bic.w	r0, r3, #2016	; 0x7e0
 8016a24:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8016a26:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8016a2a:	ea4b 0000 	orr.w	r0, fp, r0
 8016a2e:	ea4f 4b03 	mov.w	fp, r3, lsl #16
 8016a32:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8016a36:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8016a3a:	fb02 c000 	mla	r0, r2, r0, ip
 8016a3e:	ea4b 0b03 	orr.w	fp, fp, r3
 8016a42:	ebc2 024e 	rsb	r2, r2, lr, lsl #1
 8016a46:	fb02 0b0b 	mla	fp, r2, fp, r0
 8016a4a:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8016a4c:	ea4f 515b 	mov.w	r1, fp, lsr #21
 8016a50:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 8016a54:	8812      	ldrh	r2, [r2, #0]
 8016a56:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8016a5a:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 8016a5e:	ea41 0b0b 	orr.w	fp, r1, fp
 8016a62:	fa1f f38b 	uxth.w	r3, fp
 8016a66:	1211      	asrs	r1, r2, #8
 8016a68:	1218      	asrs	r0, r3, #8
 8016a6a:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8016a6e:	fb11 f105 	smulbb	r1, r1, r5
 8016a72:	ea4f 0ce2 	mov.w	ip, r2, asr #3
 8016a76:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8016a7a:	00d2      	lsls	r2, r2, #3
 8016a7c:	fb00 100a 	mla	r0, r0, sl, r1
 8016a80:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 8016a84:	10d9      	asrs	r1, r3, #3
 8016a86:	b2d2      	uxtb	r2, r2
 8016a88:	00db      	lsls	r3, r3, #3
 8016a8a:	fb1c fc05 	smulbb	ip, ip, r5
 8016a8e:	fb12 f205 	smulbb	r2, r2, r5
 8016a92:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8016a96:	b2db      	uxtb	r3, r3
 8016a98:	b280      	uxth	r0, r0
 8016a9a:	fb01 c10a 	mla	r1, r1, sl, ip
 8016a9e:	fb03 230a 	mla	r3, r3, sl, r2
 8016aa2:	b29b      	uxth	r3, r3
 8016aa4:	b289      	uxth	r1, r1
 8016aa6:	1c42      	adds	r2, r0, #1
 8016aa8:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8016aac:	f101 0c01 	add.w	ip, r1, #1
 8016ab0:	1c5a      	adds	r2, r3, #1
 8016ab2:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8016ab6:	eb0c 2111 	add.w	r1, ip, r1, lsr #8
 8016aba:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 8016abe:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8016ac2:	0949      	lsrs	r1, r1, #5
 8016ac4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8016ac6:	4310      	orrs	r0, r2
 8016ac8:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8016acc:	4308      	orrs	r0, r1
 8016ace:	f823 0b02 	strh.w	r0, [r3], #2
 8016ad2:	930d      	str	r3, [sp, #52]	; 0x34
 8016ad4:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8016ad6:	441c      	add	r4, r3
 8016ad8:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8016ada:	f108 38ff 	add.w	r8, r8, #4294967295
 8016ade:	441e      	add	r6, r3
 8016ae0:	e636      	b.n	8016750 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xcc>
 8016ae2:	b015      	add	sp, #84	; 0x54
 8016ae4:	ecbd 8b08 	vpop	{d8-d11}
 8016ae8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08016aec <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>:
 8016aec:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8016af0:	e9dd 5607 	ldrd	r5, r6, [sp, #28]
 8016af4:	fb06 5c03 	mla	ip, r6, r3, r5
 8016af8:	2e00      	cmp	r6, #0
 8016afa:	f9bd 8018 	ldrsh.w	r8, [sp, #24]
 8016afe:	f89d 4024 	ldrb.w	r4, [sp, #36]	; 0x24
 8016b02:	f89d 7028 	ldrb.w	r7, [sp, #40]	; 0x28
 8016b06:	8808      	ldrh	r0, [r1, #0]
 8016b08:	eb02 0e4c 	add.w	lr, r2, ip, lsl #1
 8016b0c:	db2e      	blt.n	8016b6c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x80>
 8016b0e:	45b0      	cmp	r8, r6
 8016b10:	dd2c      	ble.n	8016b6c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x80>
 8016b12:	2d00      	cmp	r5, #0
 8016b14:	db28      	blt.n	8016b68 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x7c>
 8016b16:	42ab      	cmp	r3, r5
 8016b18:	dd26      	ble.n	8016b68 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x7c>
 8016b1a:	f832 c01c 	ldrh.w	ip, [r2, ip, lsl #1]
 8016b1e:	1c6a      	adds	r2, r5, #1
 8016b20:	d427      	bmi.n	8016b72 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x86>
 8016b22:	4293      	cmp	r3, r2
 8016b24:	dd25      	ble.n	8016b72 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x86>
 8016b26:	b324      	cbz	r4, 8016b72 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x86>
 8016b28:	f8be 2002 	ldrh.w	r2, [lr, #2]
 8016b2c:	3601      	adds	r6, #1
 8016b2e:	d424      	bmi.n	8016b7a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x8e>
 8016b30:	45b0      	cmp	r8, r6
 8016b32:	dd22      	ble.n	8016b7a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x8e>
 8016b34:	b31f      	cbz	r7, 8016b7e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x92>
 8016b36:	2d00      	cmp	r5, #0
 8016b38:	db1d      	blt.n	8016b76 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x8a>
 8016b3a:	42ab      	cmp	r3, r5
 8016b3c:	dd1b      	ble.n	8016b76 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x8a>
 8016b3e:	f83e 6013 	ldrh.w	r6, [lr, r3, lsl #1]
 8016b42:	3501      	adds	r5, #1
 8016b44:	d405      	bmi.n	8016b52 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x66>
 8016b46:	42ab      	cmp	r3, r5
 8016b48:	dd03      	ble.n	8016b52 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x66>
 8016b4a:	b124      	cbz	r4, 8016b56 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6a>
 8016b4c:	3301      	adds	r3, #1
 8016b4e:	f83e 0013 	ldrh.w	r0, [lr, r3, lsl #1]
 8016b52:	2c0f      	cmp	r4, #15
 8016b54:	d801      	bhi.n	8016b5a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 8016b56:	2f0f      	cmp	r7, #15
 8016b58:	d914      	bls.n	8016b84 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x98>
 8016b5a:	4b27      	ldr	r3, [pc, #156]	; (8016bf8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x10c>)
 8016b5c:	4a27      	ldr	r2, [pc, #156]	; (8016bfc <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x110>)
 8016b5e:	4828      	ldr	r0, [pc, #160]	; (8016c00 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x114>)
 8016b60:	f240 11ef 	movw	r1, #495	; 0x1ef
 8016b64:	f002 fc52 	bl	801940c <__assert_func>
 8016b68:	4684      	mov	ip, r0
 8016b6a:	e7d8      	b.n	8016b1e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x32>
 8016b6c:	4602      	mov	r2, r0
 8016b6e:	4684      	mov	ip, r0
 8016b70:	e7dc      	b.n	8016b2c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x40>
 8016b72:	4602      	mov	r2, r0
 8016b74:	e7da      	b.n	8016b2c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x40>
 8016b76:	4606      	mov	r6, r0
 8016b78:	e7e3      	b.n	8016b42 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x56>
 8016b7a:	4606      	mov	r6, r0
 8016b7c:	e7e9      	b.n	8016b52 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x66>
 8016b7e:	2c0f      	cmp	r4, #15
 8016b80:	d8eb      	bhi.n	8016b5a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 8016b82:	4606      	mov	r6, r0
 8016b84:	ea4f 450c 	mov.w	r5, ip, lsl #16
 8016b88:	fb14 f307 	smulbb	r3, r4, r7
 8016b8c:	f005 65fc 	and.w	r5, r5, #132120576	; 0x7e00000
 8016b90:	ea4f 4e02 	mov.w	lr, r2, lsl #16
 8016b94:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8016b98:	10db      	asrs	r3, r3, #3
 8016b9a:	ea45 0c0c 	orr.w	ip, r5, ip
 8016b9e:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8016ba2:	f1c7 0510 	rsb	r5, r7, #16
 8016ba6:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8016baa:	1b2d      	subs	r5, r5, r4
 8016bac:	ea4e 0202 	orr.w	r2, lr, r2
 8016bb0:	ebc3 0444 	rsb	r4, r3, r4, lsl #1
 8016bb4:	eb03 0545 	add.w	r5, r3, r5, lsl #1
 8016bb8:	4354      	muls	r4, r2
 8016bba:	fb05 450c 	mla	r5, r5, ip, r4
 8016bbe:	0404      	lsls	r4, r0, #16
 8016bc0:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8016bc4:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8016bc8:	4320      	orrs	r0, r4
 8016bca:	fb03 5400 	mla	r4, r3, r0, r5
 8016bce:	0430      	lsls	r0, r6, #16
 8016bd0:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8016bd4:	f426 66fc 	bic.w	r6, r6, #2016	; 0x7e0
 8016bd8:	ebc3 0747 	rsb	r7, r3, r7, lsl #1
 8016bdc:	4330      	orrs	r0, r6
 8016bde:	fb07 4000 	mla	r0, r7, r0, r4
 8016be2:	0d43      	lsrs	r3, r0, #21
 8016be4:	0940      	lsrs	r0, r0, #5
 8016be6:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8016bea:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8016bee:	4318      	orrs	r0, r3
 8016bf0:	8008      	strh	r0, [r1, #0]
 8016bf2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8016bf6:	bf00      	nop
 8016bf8:	0801d135 	.word	0x0801d135
 8016bfc:	0801d736 	.word	0x0801d736
 8016c00:	0801d1bd 	.word	0x0801d1bd

08016c04 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 8016c04:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016c08:	ed2d 8b0a 	vpush	{d8-d12}
 8016c0c:	b093      	sub	sp, #76	; 0x4c
 8016c0e:	461d      	mov	r5, r3
 8016c10:	9210      	str	r2, [sp, #64]	; 0x40
 8016c12:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8016c14:	f9bd 20bc 	ldrsh.w	r2, [sp, #188]	; 0xbc
 8016c18:	9208      	str	r2, [sp, #32]
 8016c1a:	e9dd 272c 	ldrd	r2, r7, [sp, #176]	; 0xb0
 8016c1e:	910b      	str	r1, [sp, #44]	; 0x2c
 8016c20:	6859      	ldr	r1, [r3, #4]
 8016c22:	681b      	ldr	r3, [r3, #0]
 8016c24:	f9bd 80b8 	ldrsh.w	r8, [sp, #184]	; 0xb8
 8016c28:	9011      	str	r0, [sp, #68]	; 0x44
 8016c2a:	fb01 2707 	mla	r7, r1, r7, r2
 8016c2e:	eb03 0347 	add.w	r3, r3, r7, lsl #1
 8016c32:	9307      	str	r3, [sp, #28]
 8016c34:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8016c36:	e9dd 4627 	ldrd	r4, r6, [sp, #156]	; 0x9c
 8016c3a:	681b      	ldr	r3, [r3, #0]
 8016c3c:	9309      	str	r3, [sp, #36]	; 0x24
 8016c3e:	ea4f 0348 	mov.w	r3, r8, lsl #1
 8016c42:	eeb0 aa40 	vmov.f32	s20, s0
 8016c46:	eef0 9a60 	vmov.f32	s19, s1
 8016c4a:	eeb0 9a41 	vmov.f32	s18, s2
 8016c4e:	eeb0 8a62 	vmov.f32	s16, s5
 8016c52:	eef0 8a43 	vmov.f32	s17, s6
 8016c56:	eeb0 ca44 	vmov.f32	s24, s8
 8016c5a:	eef0 ba64 	vmov.f32	s23, s9
 8016c5e:	eeb0 ba45 	vmov.f32	s22, s10
 8016c62:	930a      	str	r3, [sp, #40]	; 0x28
 8016c64:	eef7 aa00 	vmov.f32	s21, #112	; 0x3f800000  1.0
 8016c68:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8016c6a:	2b00      	cmp	r3, #0
 8016c6c:	dc03      	bgt.n	8016c76 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x72>
 8016c6e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8016c70:	2b00      	cmp	r3, #0
 8016c72:	f340 816c 	ble.w	8016f4e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x34a>
 8016c76:	2d00      	cmp	r5, #0
 8016c78:	f340 80b6 	ble.w	8016de8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1e4>
 8016c7c:	1422      	asrs	r2, r4, #16
 8016c7e:	ea4f 4326 	mov.w	r3, r6, asr #16
 8016c82:	d428      	bmi.n	8016cd6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xd2>
 8016c84:	1c51      	adds	r1, r2, #1
 8016c86:	4588      	cmp	r8, r1
 8016c88:	dd27      	ble.n	8016cda <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xd6>
 8016c8a:	2b00      	cmp	r3, #0
 8016c8c:	db25      	blt.n	8016cda <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xd6>
 8016c8e:	9808      	ldr	r0, [sp, #32]
 8016c90:	1c59      	adds	r1, r3, #1
 8016c92:	4288      	cmp	r0, r1
 8016c94:	dd21      	ble.n	8016cda <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xd6>
 8016c96:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8016c98:	1e6b      	subs	r3, r5, #1
 8016c9a:	fb02 4203 	mla	r2, r2, r3, r4
 8016c9e:	1412      	asrs	r2, r2, #16
 8016ca0:	d422      	bmi.n	8016ce8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe4>
 8016ca2:	3201      	adds	r2, #1
 8016ca4:	4590      	cmp	r8, r2
 8016ca6:	dd1f      	ble.n	8016ce8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe4>
 8016ca8:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 8016caa:	fb02 6303 	mla	r3, r2, r3, r6
 8016cae:	141b      	asrs	r3, r3, #16
 8016cb0:	d41a      	bmi.n	8016ce8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe4>
 8016cb2:	9a08      	ldr	r2, [sp, #32]
 8016cb4:	3301      	adds	r3, #1
 8016cb6:	429a      	cmp	r2, r3
 8016cb8:	dd16      	ble.n	8016ce8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe4>
 8016cba:	f8dd b01c 	ldr.w	fp, [sp, #28]
 8016cbe:	46a9      	mov	r9, r5
 8016cc0:	f1b9 0f00 	cmp.w	r9, #0
 8016cc4:	f300 80e4 	bgt.w	8016e90 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x28c>
 8016cc8:	9b07      	ldr	r3, [sp, #28]
 8016cca:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8016cce:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 8016cd2:	9307      	str	r3, [sp, #28]
 8016cd4:	e08a      	b.n	8016dec <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1e8>
 8016cd6:	1c51      	adds	r1, r2, #1
 8016cd8:	d17d      	bne.n	8016dd6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d2>
 8016cda:	4542      	cmp	r2, r8
 8016cdc:	da7b      	bge.n	8016dd6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d2>
 8016cde:	1c5a      	adds	r2, r3, #1
 8016ce0:	db79      	blt.n	8016dd6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d2>
 8016ce2:	9a08      	ldr	r2, [sp, #32]
 8016ce4:	4293      	cmp	r3, r2
 8016ce6:	da76      	bge.n	8016dd6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d2>
 8016ce8:	f8dd 901c 	ldr.w	r9, [sp, #28]
 8016cec:	46aa      	mov	sl, r5
 8016cee:	f1ba 0f00 	cmp.w	sl, #0
 8016cf2:	dde9      	ble.n	8016cc8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xc4>
 8016cf4:	1421      	asrs	r1, r4, #16
 8016cf6:	ea4f 4226 	mov.w	r2, r6, asr #16
 8016cfa:	f3c4 3303 	ubfx	r3, r4, #12, #4
 8016cfe:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8016d02:	f100 80b0 	bmi.w	8016e66 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x262>
 8016d06:	f101 0c01 	add.w	ip, r1, #1
 8016d0a:	45e0      	cmp	r8, ip
 8016d0c:	f340 80ad 	ble.w	8016e6a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x266>
 8016d10:	2a00      	cmp	r2, #0
 8016d12:	f2c0 80aa 	blt.w	8016e6a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x266>
 8016d16:	9f08      	ldr	r7, [sp, #32]
 8016d18:	f102 0c01 	add.w	ip, r2, #1
 8016d1c:	4567      	cmp	r7, ip
 8016d1e:	f340 80a4 	ble.w	8016e6a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x266>
 8016d22:	fb02 1208 	mla	r2, r2, r8, r1
 8016d26:	9909      	ldr	r1, [sp, #36]	; 0x24
 8016d28:	eb01 0e42 	add.w	lr, r1, r2, lsl #1
 8016d2c:	f831 c012 	ldrh.w	ip, [r1, r2, lsl #1]
 8016d30:	f8be 1002 	ldrh.w	r1, [lr, #2]
 8016d34:	b138      	cbz	r0, 8016d46 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x142>
 8016d36:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8016d38:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8016d3a:	4472      	add	r2, lr
 8016d3c:	f83e 7007 	ldrh.w	r7, [lr, r7]
 8016d40:	8852      	ldrh	r2, [r2, #2]
 8016d42:	970c      	str	r7, [sp, #48]	; 0x30
 8016d44:	920d      	str	r2, [sp, #52]	; 0x34
 8016d46:	ea4f 4e0c 	mov.w	lr, ip, lsl #16
 8016d4a:	fb13 f200 	smulbb	r2, r3, r0
 8016d4e:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8016d52:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8016d56:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8016d5a:	10d2      	asrs	r2, r2, #3
 8016d5c:	ea4e 0c0c 	orr.w	ip, lr, ip
 8016d60:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8016d64:	f1c0 0e10 	rsb	lr, r0, #16
 8016d68:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8016d6c:	ebae 0e03 	sub.w	lr, lr, r3
 8016d70:	ea4b 0101 	orr.w	r1, fp, r1
 8016d74:	ebc2 0343 	rsb	r3, r2, r3, lsl #1
 8016d78:	4359      	muls	r1, r3
 8016d7a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8016d7c:	eb02 0e4e 	add.w	lr, r2, lr, lsl #1
 8016d80:	fb0e 1e0c 	mla	lr, lr, ip, r1
 8016d84:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8016d88:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8016d8c:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8016d90:	ea4c 0c03 	orr.w	ip, ip, r3
 8016d94:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8016d96:	990c      	ldr	r1, [sp, #48]	; 0x30
 8016d98:	041b      	lsls	r3, r3, #16
 8016d9a:	fb02 ec0c 	mla	ip, r2, ip, lr
 8016d9e:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8016da2:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 8016da6:	ea43 030e 	orr.w	r3, r3, lr
 8016daa:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 8016dae:	fb02 c203 	mla	r2, r2, r3, ip
 8016db2:	0d53      	lsrs	r3, r2, #21
 8016db4:	0952      	lsrs	r2, r2, #5
 8016db6:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8016dba:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8016dbe:	431a      	orrs	r2, r3
 8016dc0:	f8a9 2000 	strh.w	r2, [r9]
 8016dc4:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8016dc6:	441c      	add	r4, r3
 8016dc8:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8016dca:	f109 0902 	add.w	r9, r9, #2
 8016dce:	441e      	add	r6, r3
 8016dd0:	f10a 3aff 	add.w	sl, sl, #4294967295
 8016dd4:	e78b      	b.n	8016cee <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xea>
 8016dd6:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8016dd8:	441c      	add	r4, r3
 8016dda:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8016ddc:	441e      	add	r6, r3
 8016dde:	9b07      	ldr	r3, [sp, #28]
 8016de0:	3302      	adds	r3, #2
 8016de2:	3d01      	subs	r5, #1
 8016de4:	9307      	str	r3, [sp, #28]
 8016de6:	e746      	b.n	8016c76 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x72>
 8016de8:	f47f af55 	bne.w	8016c96 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x92>
 8016dec:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8016dee:	2b00      	cmp	r3, #0
 8016df0:	f340 80ad 	ble.w	8016f4e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x34a>
 8016df4:	ee3a aa0c 	vadd.f32	s20, s20, s24
 8016df8:	ee79 9aab 	vadd.f32	s19, s19, s23
 8016dfc:	eeca 7a8a 	vdiv.f32	s15, s21, s20
 8016e00:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8016e02:	ee39 9a0b 	vadd.f32	s18, s18, s22
 8016e06:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8016e0a:	eef0 6a48 	vmov.f32	s13, s16
 8016e0e:	ee69 7a27 	vmul.f32	s15, s18, s15
 8016e12:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8016e16:	ee37 8a48 	vsub.f32	s16, s14, s16
 8016e1a:	ee16 4a90 	vmov	r4, s13
 8016e1e:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8016e22:	eef0 6a68 	vmov.f32	s13, s17
 8016e26:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8016e2a:	ee18 2a10 	vmov	r2, s16
 8016e2e:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8016e32:	fb92 f3f3 	sdiv	r3, r2, r3
 8016e36:	ee18 2a90 	vmov	r2, s17
 8016e3a:	9329      	str	r3, [sp, #164]	; 0xa4
 8016e3c:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8016e3e:	fb92 f3f3 	sdiv	r3, r2, r3
 8016e42:	932a      	str	r3, [sp, #168]	; 0xa8
 8016e44:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8016e46:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8016e48:	3b01      	subs	r3, #1
 8016e4a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8016e4e:	930b      	str	r3, [sp, #44]	; 0x2c
 8016e50:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8016e52:	ee16 6a90 	vmov	r6, s13
 8016e56:	bf14      	ite	ne
 8016e58:	461d      	movne	r5, r3
 8016e5a:	4615      	moveq	r5, r2
 8016e5c:	eef0 8a67 	vmov.f32	s17, s15
 8016e60:	eeb0 8a47 	vmov.f32	s16, s14
 8016e64:	e700      	b.n	8016c68 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x64>
 8016e66:	1c4f      	adds	r7, r1, #1
 8016e68:	d1ac      	bne.n	8016dc4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1c0>
 8016e6a:	4588      	cmp	r8, r1
 8016e6c:	ddaa      	ble.n	8016dc4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1c0>
 8016e6e:	1c57      	adds	r7, r2, #1
 8016e70:	dba8      	blt.n	8016dc4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1c0>
 8016e72:	9f08      	ldr	r7, [sp, #32]
 8016e74:	4297      	cmp	r7, r2
 8016e76:	dda5      	ble.n	8016dc4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1c0>
 8016e78:	e9cd 3003 	strd	r3, r0, [sp, #12]
 8016e7c:	e9cd 1201 	strd	r1, r2, [sp, #4]
 8016e80:	9700      	str	r7, [sp, #0]
 8016e82:	4643      	mov	r3, r8
 8016e84:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8016e86:	9811      	ldr	r0, [sp, #68]	; 0x44
 8016e88:	4649      	mov	r1, r9
 8016e8a:	f7ff fe2f 	bl	8016aec <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>
 8016e8e:	e799      	b.n	8016dc4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1c0>
 8016e90:	1422      	asrs	r2, r4, #16
 8016e92:	1431      	asrs	r1, r6, #16
 8016e94:	fb08 2101 	mla	r1, r8, r1, r2
 8016e98:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8016e9a:	9809      	ldr	r0, [sp, #36]	; 0x24
 8016e9c:	eb02 0241 	add.w	r2, r2, r1, lsl #1
 8016ea0:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 8016ea4:	f830 c011 	ldrh.w	ip, [r0, r1, lsl #1]
 8016ea8:	8851      	ldrh	r1, [r2, #2]
 8016eaa:	f3c4 3303 	ubfx	r3, r4, #12, #4
 8016eae:	f1be 0f00 	cmp.w	lr, #0
 8016eb2:	d006      	beq.n	8016ec2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2be>
 8016eb4:	980a      	ldr	r0, [sp, #40]	; 0x28
 8016eb6:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8016eb8:	1810      	adds	r0, r2, r0
 8016eba:	5bd2      	ldrh	r2, [r2, r7]
 8016ebc:	920e      	str	r2, [sp, #56]	; 0x38
 8016ebe:	8842      	ldrh	r2, [r0, #2]
 8016ec0:	920f      	str	r2, [sp, #60]	; 0x3c
 8016ec2:	ea4f 400c 	mov.w	r0, ip, lsl #16
 8016ec6:	fb13 f20e 	smulbb	r2, r3, lr
 8016eca:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8016ece:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 8016ed2:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8016ed6:	10d2      	asrs	r2, r2, #3
 8016ed8:	ea40 000c 	orr.w	r0, r0, ip
 8016edc:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8016ee0:	f1ce 0c10 	rsb	ip, lr, #16
 8016ee4:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8016ee8:	ebac 0c03 	sub.w	ip, ip, r3
 8016eec:	ea4a 0101 	orr.w	r1, sl, r1
 8016ef0:	ebc2 0343 	rsb	r3, r2, r3, lsl #1
 8016ef4:	4359      	muls	r1, r3
 8016ef6:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8016ef8:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 8016efc:	fb0c 1c00 	mla	ip, ip, r0, r1
 8016f00:	ea4f 4a03 	mov.w	sl, r3, lsl #16
 8016f04:	f423 60fc 	bic.w	r0, r3, #2016	; 0x7e0
 8016f08:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8016f0a:	990e      	ldr	r1, [sp, #56]	; 0x38
 8016f0c:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8016f10:	041b      	lsls	r3, r3, #16
 8016f12:	ea4a 0000 	orr.w	r0, sl, r0
 8016f16:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8016f1a:	f421 6afc 	bic.w	sl, r1, #2016	; 0x7e0
 8016f1e:	fb02 c000 	mla	r0, r2, r0, ip
 8016f22:	ea43 0a0a 	orr.w	sl, r3, sl
 8016f26:	ebc2 024e 	rsb	r2, r2, lr, lsl #1
 8016f2a:	fb02 000a 	mla	r0, r2, sl, r0
 8016f2e:	0d43      	lsrs	r3, r0, #21
 8016f30:	0940      	lsrs	r0, r0, #5
 8016f32:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8016f36:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8016f3a:	4318      	orrs	r0, r3
 8016f3c:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8016f3e:	f82b 0b02 	strh.w	r0, [fp], #2
 8016f42:	441c      	add	r4, r3
 8016f44:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8016f46:	f109 39ff 	add.w	r9, r9, #4294967295
 8016f4a:	441e      	add	r6, r3
 8016f4c:	e6b8      	b.n	8016cc0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xbc>
 8016f4e:	b013      	add	sp, #76	; 0x4c
 8016f50:	ecbd 8b0a 	vpop	{d8-d12}
 8016f54:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08016f58 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>:
 8016f58:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016f5c:	8808      	ldrh	r0, [r1, #0]
 8016f5e:	b085      	sub	sp, #20
 8016f60:	1206      	asrs	r6, r0, #8
 8016f62:	e9dd c40f 	ldrd	ip, r4, [sp, #60]	; 0x3c
 8016f66:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8016f6a:	9600      	str	r6, [sp, #0]
 8016f6c:	10c6      	asrs	r6, r0, #3
 8016f6e:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8016f72:	9601      	str	r6, [sp, #4]
 8016f74:	00c0      	lsls	r0, r0, #3
 8016f76:	fb04 c603 	mla	r6, r4, r3, ip
 8016f7a:	b2c0      	uxtb	r0, r0
 8016f7c:	4691      	mov	r9, r2
 8016f7e:	eb02 0e86 	add.w	lr, r2, r6, lsl #2
 8016f82:	9a00      	ldr	r2, [sp, #0]
 8016f84:	9002      	str	r0, [sp, #8]
 8016f86:	f040 407f 	orr.w	r0, r0, #4278190080	; 0xff000000
 8016f8a:	ea40 4002 	orr.w	r0, r0, r2, lsl #16
 8016f8e:	9a01      	ldr	r2, [sp, #4]
 8016f90:	f9bd 8038 	ldrsh.w	r8, [sp, #56]	; 0x38
 8016f94:	f89d 5044 	ldrb.w	r5, [sp, #68]	; 0x44
 8016f98:	f89d 7048 	ldrb.w	r7, [sp, #72]	; 0x48
 8016f9c:	2c00      	cmp	r4, #0
 8016f9e:	ea40 2002 	orr.w	r0, r0, r2, lsl #8
 8016fa2:	db3a      	blt.n	801701a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xc2>
 8016fa4:	45a0      	cmp	r8, r4
 8016fa6:	dd38      	ble.n	801701a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xc2>
 8016fa8:	f1bc 0f00 	cmp.w	ip, #0
 8016fac:	db33      	blt.n	8017016 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xbe>
 8016fae:	4563      	cmp	r3, ip
 8016fb0:	dd31      	ble.n	8017016 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xbe>
 8016fb2:	f859 2026 	ldr.w	r2, [r9, r6, lsl #2]
 8016fb6:	f11c 0601 	adds.w	r6, ip, #1
 8016fba:	d431      	bmi.n	8017020 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xc8>
 8016fbc:	42b3      	cmp	r3, r6
 8016fbe:	dd2f      	ble.n	8017020 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xc8>
 8016fc0:	b375      	cbz	r5, 8017020 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xc8>
 8016fc2:	f8de 6004 	ldr.w	r6, [lr, #4]
 8016fc6:	3401      	adds	r4, #1
 8016fc8:	d42e      	bmi.n	8017028 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xd0>
 8016fca:	45a0      	cmp	r8, r4
 8016fcc:	dd2c      	ble.n	8017028 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xd0>
 8016fce:	b35f      	cbz	r7, 8017028 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xd0>
 8016fd0:	f1bc 0f00 	cmp.w	ip, #0
 8016fd4:	db26      	blt.n	8017024 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xcc>
 8016fd6:	4563      	cmp	r3, ip
 8016fd8:	dd24      	ble.n	8017024 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xcc>
 8016fda:	f85e 4023 	ldr.w	r4, [lr, r3, lsl #2]
 8016fde:	f11c 0c01 	adds.w	ip, ip, #1
 8016fe2:	d405      	bmi.n	8016ff0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x98>
 8016fe4:	4563      	cmp	r3, ip
 8016fe6:	dd03      	ble.n	8016ff0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x98>
 8016fe8:	b115      	cbz	r5, 8016ff0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x98>
 8016fea:	3301      	adds	r3, #1
 8016fec:	f85e 0023 	ldr.w	r0, [lr, r3, lsl #2]
 8016ff0:	2d0f      	cmp	r5, #15
 8016ff2:	ea4f 6b12 	mov.w	fp, r2, lsr #24
 8016ff6:	ea4f 6a16 	mov.w	sl, r6, lsr #24
 8016ffa:	ea4f 6914 	mov.w	r9, r4, lsr #24
 8016ffe:	ea4f 6810 	mov.w	r8, r0, lsr #24
 8017002:	d801      	bhi.n	8017008 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xb0>
 8017004:	2f0f      	cmp	r7, #15
 8017006:	d911      	bls.n	801702c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xd4>
 8017008:	4b82      	ldr	r3, [pc, #520]	; (8017214 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x2bc>)
 801700a:	4a83      	ldr	r2, [pc, #524]	; (8017218 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x2c0>)
 801700c:	4883      	ldr	r0, [pc, #524]	; (801721c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x2c4>)
 801700e:	f240 210d 	movw	r1, #525	; 0x20d
 8017012:	f002 f9fb 	bl	801940c <__assert_func>
 8017016:	4602      	mov	r2, r0
 8017018:	e7cd      	b.n	8016fb6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x5e>
 801701a:	4606      	mov	r6, r0
 801701c:	4602      	mov	r2, r0
 801701e:	e7d2      	b.n	8016fc6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x6e>
 8017020:	4606      	mov	r6, r0
 8017022:	e7d0      	b.n	8016fc6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x6e>
 8017024:	4604      	mov	r4, r0
 8017026:	e7da      	b.n	8016fde <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x86>
 8017028:	4604      	mov	r4, r0
 801702a:	e7e1      	b.n	8016ff0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x98>
 801702c:	b2ab      	uxth	r3, r5
 801702e:	b2bf      	uxth	r7, r7
 8017030:	fb03 fe07 	mul.w	lr, r3, r7
 8017034:	ebce 1707 	rsb	r7, lr, r7, lsl #4
 8017038:	011b      	lsls	r3, r3, #4
 801703a:	eba3 0c0e 	sub.w	ip, r3, lr
 801703e:	b2bf      	uxth	r7, r7
 8017040:	f5c3 7580 	rsb	r5, r3, #256	; 0x100
 8017044:	fa1f fc8c 	uxth.w	ip, ip
 8017048:	1bed      	subs	r5, r5, r7
 801704a:	b2ad      	uxth	r5, r5
 801704c:	fb0c f30a 	mul.w	r3, ip, sl
 8017050:	fb05 330b 	mla	r3, r5, fp, r3
 8017054:	fb07 3309 	mla	r3, r7, r9, r3
 8017058:	fb0e 3308 	mla	r3, lr, r8, r3
 801705c:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8017060:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 8017064:	9303      	str	r3, [sp, #12]
 8017066:	d018      	beq.n	801709a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x142>
 8017068:	f002 13ff 	and.w	r3, r2, #16711935	; 0xff00ff
 801706c:	fb0b f303 	mul.w	r3, fp, r3
 8017070:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8017074:	fb0b fb02 	mul.w	fp, fp, r2
 8017078:	0a1a      	lsrs	r2, r3, #8
 801707a:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801707e:	f103 1301 	add.w	r3, r3, #65537	; 0x10001
 8017082:	441a      	add	r2, r3
 8017084:	f50b 7380 	add.w	r3, fp, #256	; 0x100
 8017088:	eb03 231b 	add.w	r3, r3, fp, lsr #8
 801708c:	0a12      	lsrs	r2, r2, #8
 801708e:	0a1b      	lsrs	r3, r3, #8
 8017090:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8017094:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8017098:	431a      	orrs	r2, r3
 801709a:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 801709e:	d019      	beq.n	80170d4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x17c>
 80170a0:	f006 1bff 	and.w	fp, r6, #16711935	; 0xff00ff
 80170a4:	fb0a fb0b 	mul.w	fp, sl, fp
 80170a8:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 80170ac:	fb0a fa06 	mul.w	sl, sl, r6
 80170b0:	ea4f 261b 	mov.w	r6, fp, lsr #8
 80170b4:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 80170b8:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 80170bc:	f50a 7380 	add.w	r3, sl, #256	; 0x100
 80170c0:	445e      	add	r6, fp
 80170c2:	eb03 231a 	add.w	r3, r3, sl, lsr #8
 80170c6:	0a36      	lsrs	r6, r6, #8
 80170c8:	0a1b      	lsrs	r3, r3, #8
 80170ca:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 80170ce:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80170d2:	431e      	orrs	r6, r3
 80170d4:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 80170d8:	d019      	beq.n	801710e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x1b6>
 80170da:	f004 1aff 	and.w	sl, r4, #16711935	; 0xff00ff
 80170de:	fb09 fa0a 	mul.w	sl, r9, sl
 80170e2:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 80170e6:	fb09 f904 	mul.w	r9, r9, r4
 80170ea:	ea4f 241a 	mov.w	r4, sl, lsr #8
 80170ee:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 80170f2:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 80170f6:	f509 7380 	add.w	r3, r9, #256	; 0x100
 80170fa:	4454      	add	r4, sl
 80170fc:	eb03 2319 	add.w	r3, r3, r9, lsr #8
 8017100:	0a24      	lsrs	r4, r4, #8
 8017102:	0a1b      	lsrs	r3, r3, #8
 8017104:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8017108:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801710c:	431c      	orrs	r4, r3
 801710e:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8017112:	d019      	beq.n	8017148 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x1f0>
 8017114:	f000 19ff 	and.w	r9, r0, #16711935	; 0xff00ff
 8017118:	fb08 f909 	mul.w	r9, r8, r9
 801711c:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8017120:	fb08 f800 	mul.w	r8, r8, r0
 8017124:	ea4f 2019 	mov.w	r0, r9, lsr #8
 8017128:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 801712c:	f109 1901 	add.w	r9, r9, #65537	; 0x10001
 8017130:	f508 7380 	add.w	r3, r8, #256	; 0x100
 8017134:	4448      	add	r0, r9
 8017136:	eb03 2318 	add.w	r3, r3, r8, lsr #8
 801713a:	0a00      	lsrs	r0, r0, #8
 801713c:	0a1b      	lsrs	r3, r3, #8
 801713e:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 8017142:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8017146:	4318      	orrs	r0, r3
 8017148:	f006 18ff 	and.w	r8, r6, #16711935	; 0xff00ff
 801714c:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8017150:	f002 13ff 	and.w	r3, r2, #16711935	; 0xff00ff
 8017154:	fb0c f808 	mul.w	r8, ip, r8
 8017158:	fb0c f606 	mul.w	r6, ip, r6
 801715c:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8017160:	fb05 6202 	mla	r2, r5, r2, r6
 8017164:	fb05 8803 	mla	r8, r5, r3, r8
 8017168:	f004 13ff 	and.w	r3, r4, #16711935	; 0xff00ff
 801716c:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 8017170:	fb07 8803 	mla	r8, r7, r3, r8
 8017174:	fb07 2704 	mla	r7, r7, r4, r2
 8017178:	f000 13ff 	and.w	r3, r0, #16711935	; 0xff00ff
 801717c:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8017180:	fb0e 8303 	mla	r3, lr, r3, r8
 8017184:	fb0e 7e00 	mla	lr, lr, r0, r7
 8017188:	0a1b      	lsrs	r3, r3, #8
 801718a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801718e:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8017192:	f89d 404c 	ldrb.w	r4, [sp, #76]	; 0x4c
 8017196:	f40e 4e7f 	and.w	lr, lr, #65280	; 0xff00
 801719a:	ea43 0e0e 	orr.w	lr, r3, lr
 801719e:	9b03      	ldr	r3, [sp, #12]
 80171a0:	b2a4      	uxth	r4, r4
 80171a2:	4363      	muls	r3, r4
 80171a4:	1c5a      	adds	r2, r3, #1
 80171a6:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 80171aa:	ea6f 2212 	mvn.w	r2, r2, lsr #8
 80171ae:	9b00      	ldr	r3, [sp, #0]
 80171b0:	b2d2      	uxtb	r2, r2
 80171b2:	ea4f 451e 	mov.w	r5, lr, lsr #16
 80171b6:	fb13 f302 	smulbb	r3, r3, r2
 80171ba:	fb05 3304 	mla	r3, r5, r4, r3
 80171be:	b29d      	uxth	r5, r3
 80171c0:	9b01      	ldr	r3, [sp, #4]
 80171c2:	f3ce 2007 	ubfx	r0, lr, #8, #8
 80171c6:	fb13 f302 	smulbb	r3, r3, r2
 80171ca:	fb00 3004 	mla	r0, r0, r4, r3
 80171ce:	9b02      	ldr	r3, [sp, #8]
 80171d0:	fa5f fe8e 	uxtb.w	lr, lr
 80171d4:	fb13 f202 	smulbb	r2, r3, r2
 80171d8:	fb0e 2e04 	mla	lr, lr, r4, r2
 80171dc:	fa1f fe8e 	uxth.w	lr, lr
 80171e0:	b280      	uxth	r0, r0
 80171e2:	f10e 0201 	add.w	r2, lr, #1
 80171e6:	1c6b      	adds	r3, r5, #1
 80171e8:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 80171ec:	1c42      	adds	r2, r0, #1
 80171ee:	eb03 2315 	add.w	r3, r3, r5, lsr #8
 80171f2:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 80171f6:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 80171fa:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 80171fe:	0952      	lsrs	r2, r2, #5
 8017200:	ea43 030e 	orr.w	r3, r3, lr
 8017204:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8017208:	4313      	orrs	r3, r2
 801720a:	800b      	strh	r3, [r1, #0]
 801720c:	b005      	add	sp, #20
 801720e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017212:	bf00      	nop
 8017214:	0801d135 	.word	0x0801d135
 8017218:	0801d68d 	.word	0x0801d68d
 801721c:	0801d1bd 	.word	0x0801d1bd

08017220 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 8017220:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017224:	ed2d 8b08 	vpush	{d8-d11}
 8017228:	b099      	sub	sp, #100	; 0x64
 801722a:	eeb0 aa40 	vmov.f32	s20, s0
 801722e:	9306      	str	r3, [sp, #24]
 8017230:	f9bd 30c8 	ldrsh.w	r3, [sp, #200]	; 0xc8
 8017234:	9307      	str	r3, [sp, #28]
 8017236:	f9bd 30cc 	ldrsh.w	r3, [sp, #204]	; 0xcc
 801723a:	9216      	str	r2, [sp, #88]	; 0x58
 801723c:	9310      	str	r3, [sp, #64]	; 0x40
 801723e:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 8017240:	f89d 30d4 	ldrb.w	r3, [sp, #212]	; 0xd4
 8017244:	9113      	str	r1, [sp, #76]	; 0x4c
 8017246:	9315      	str	r3, [sp, #84]	; 0x54
 8017248:	e9dd 1330 	ldrd	r1, r3, [sp, #192]	; 0xc0
 801724c:	9017      	str	r0, [sp, #92]	; 0x5c
 801724e:	6850      	ldr	r0, [r2, #4]
 8017250:	6812      	ldr	r2, [r2, #0]
 8017252:	9c2c      	ldr	r4, [sp, #176]	; 0xb0
 8017254:	fb00 1303 	mla	r3, r0, r3, r1
 8017258:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801725c:	930a      	str	r3, [sp, #40]	; 0x28
 801725e:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 8017260:	681b      	ldr	r3, [r3, #0]
 8017262:	9312      	str	r3, [sp, #72]	; 0x48
 8017264:	9b07      	ldr	r3, [sp, #28]
 8017266:	009b      	lsls	r3, r3, #2
 8017268:	eef0 9a60 	vmov.f32	s19, s1
 801726c:	eeb0 9a41 	vmov.f32	s18, s2
 8017270:	eeb0 8a62 	vmov.f32	s16, s5
 8017274:	eef0 8a43 	vmov.f32	s17, s6
 8017278:	eef0 ba44 	vmov.f32	s23, s8
 801727c:	eeb0 ba64 	vmov.f32	s22, s9
 8017280:	eef0 aa45 	vmov.f32	s21, s10
 8017284:	930e      	str	r3, [sp, #56]	; 0x38
 8017286:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8017288:	2b00      	cmp	r3, #0
 801728a:	dc03      	bgt.n	8017294 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x74>
 801728c:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801728e:	2b00      	cmp	r3, #0
 8017290:	f340 8352 	ble.w	8017938 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x718>
 8017294:	9b06      	ldr	r3, [sp, #24]
 8017296:	2b00      	cmp	r3, #0
 8017298:	f340 81a8 	ble.w	80175ec <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3cc>
 801729c:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 801729e:	1412      	asrs	r2, r2, #16
 80172a0:	ea4f 4324 	mov.w	r3, r4, asr #16
 80172a4:	d430      	bmi.n	8017308 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe8>
 80172a6:	9807      	ldr	r0, [sp, #28]
 80172a8:	1c51      	adds	r1, r2, #1
 80172aa:	4288      	cmp	r0, r1
 80172ac:	dd2f      	ble.n	801730e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xee>
 80172ae:	2b00      	cmp	r3, #0
 80172b0:	db2d      	blt.n	801730e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xee>
 80172b2:	9810      	ldr	r0, [sp, #64]	; 0x40
 80172b4:	1c59      	adds	r1, r3, #1
 80172b6:	4288      	cmp	r0, r1
 80172b8:	dd29      	ble.n	801730e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xee>
 80172ba:	9b06      	ldr	r3, [sp, #24]
 80172bc:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 80172be:	992b      	ldr	r1, [sp, #172]	; 0xac
 80172c0:	3b01      	subs	r3, #1
 80172c2:	fb02 1203 	mla	r2, r2, r3, r1
 80172c6:	1412      	asrs	r2, r2, #16
 80172c8:	d42c      	bmi.n	8017324 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x104>
 80172ca:	9907      	ldr	r1, [sp, #28]
 80172cc:	3201      	adds	r2, #1
 80172ce:	4291      	cmp	r1, r2
 80172d0:	dd28      	ble.n	8017324 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x104>
 80172d2:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
 80172d4:	fb02 4303 	mla	r3, r2, r3, r4
 80172d8:	141b      	asrs	r3, r3, #16
 80172da:	d423      	bmi.n	8017324 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x104>
 80172dc:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80172de:	3301      	adds	r3, #1
 80172e0:	429a      	cmp	r2, r3
 80172e2:	dd1f      	ble.n	8017324 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x104>
 80172e4:	9b06      	ldr	r3, [sp, #24]
 80172e6:	f8dd a028 	ldr.w	sl, [sp, #40]	; 0x28
 80172ea:	f8bd b054 	ldrh.w	fp, [sp, #84]	; 0x54
 80172ee:	9311      	str	r3, [sp, #68]	; 0x44
 80172f0:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80172f2:	2b00      	cmp	r3, #0
 80172f4:	f300 81e3 	bgt.w	80176be <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x49e>
 80172f8:	9b06      	ldr	r3, [sp, #24]
 80172fa:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 80172fe:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8017300:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 8017304:	930a      	str	r3, [sp, #40]	; 0x28
 8017306:	e173      	b.n	80175f0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3d0>
 8017308:	1c51      	adds	r1, r2, #1
 801730a:	f040 8162 	bne.w	80175d2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3b2>
 801730e:	9907      	ldr	r1, [sp, #28]
 8017310:	428a      	cmp	r2, r1
 8017312:	f280 815e 	bge.w	80175d2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3b2>
 8017316:	1c5f      	adds	r7, r3, #1
 8017318:	f2c0 815b 	blt.w	80175d2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3b2>
 801731c:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801731e:	4293      	cmp	r3, r2
 8017320:	f280 8157 	bge.w	80175d2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3b2>
 8017324:	9b06      	ldr	r3, [sp, #24]
 8017326:	9314      	str	r3, [sp, #80]	; 0x50
 8017328:	f8bd 7054 	ldrh.w	r7, [sp, #84]	; 0x54
 801732c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801732e:	9311      	str	r3, [sp, #68]	; 0x44
 8017330:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8017332:	2b00      	cmp	r3, #0
 8017334:	dde0      	ble.n	80172f8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xd8>
 8017336:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 8017338:	f3c2 3003 	ubfx	r0, r2, #12, #4
 801733c:	1412      	asrs	r2, r2, #16
 801733e:	ea4f 4324 	mov.w	r3, r4, asr #16
 8017342:	f3c4 3103 	ubfx	r1, r4, #12, #4
 8017346:	f100 81a1 	bmi.w	801768c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x46c>
 801734a:	9e07      	ldr	r6, [sp, #28]
 801734c:	1c55      	adds	r5, r2, #1
 801734e:	42ae      	cmp	r6, r5
 8017350:	f340 819e 	ble.w	8017690 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x470>
 8017354:	2b00      	cmp	r3, #0
 8017356:	f2c0 819b 	blt.w	8017690 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x470>
 801735a:	9e10      	ldr	r6, [sp, #64]	; 0x40
 801735c:	1c5d      	adds	r5, r3, #1
 801735e:	42ae      	cmp	r6, r5
 8017360:	f340 8196 	ble.w	8017690 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x470>
 8017364:	9d07      	ldr	r5, [sp, #28]
 8017366:	fb03 2305 	mla	r3, r3, r5, r2
 801736a:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801736c:	eb02 0583 	add.w	r5, r2, r3, lsl #2
 8017370:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8017374:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 8017378:	2800      	cmp	r0, #0
 801737a:	f000 8178 	beq.w	801766e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x44e>
 801737e:	686a      	ldr	r2, [r5, #4]
 8017380:	920b      	str	r2, [sp, #44]	; 0x2c
 8017382:	ea4f 6812 	mov.w	r8, r2, lsr #24
 8017386:	2900      	cmp	r1, #0
 8017388:	f000 817a 	beq.w	8017680 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x460>
 801738c:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801738e:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 8017390:	18aa      	adds	r2, r5, r2
 8017392:	59ad      	ldr	r5, [r5, r6]
 8017394:	6852      	ldr	r2, [r2, #4]
 8017396:	9508      	str	r5, [sp, #32]
 8017398:	ea4f 6a15 	mov.w	sl, r5, lsr #24
 801739c:	920c      	str	r2, [sp, #48]	; 0x30
 801739e:	0e15      	lsrs	r5, r2, #24
 80173a0:	b280      	uxth	r0, r0
 80173a2:	b289      	uxth	r1, r1
 80173a4:	fb00 fb01 	mul.w	fp, r0, r1
 80173a8:	ebcb 1101 	rsb	r1, fp, r1, lsl #4
 80173ac:	0100      	lsls	r0, r0, #4
 80173ae:	eba0 090b 	sub.w	r9, r0, fp
 80173b2:	b289      	uxth	r1, r1
 80173b4:	f5c0 7280 	rsb	r2, r0, #256	; 0x100
 80173b8:	fa1f f989 	uxth.w	r9, r9
 80173bc:	1a52      	subs	r2, r2, r1
 80173be:	b292      	uxth	r2, r2
 80173c0:	fb09 f008 	mul.w	r0, r9, r8
 80173c4:	fb02 000c 	mla	r0, r2, ip, r0
 80173c8:	fb01 000a 	mla	r0, r1, sl, r0
 80173cc:	fb0b 0005 	mla	r0, fp, r5, r0
 80173d0:	f3c0 2007 	ubfx	r0, r0, #8, #8
 80173d4:	2800      	cmp	r0, #0
 80173d6:	f000 80ef 	beq.w	80175b8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x398>
 80173da:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 80173de:	d01b      	beq.n	8017418 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1f8>
 80173e0:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 80173e4:	fb0c fe0e 	mul.w	lr, ip, lr
 80173e8:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80173ec:	fb0c fc03 	mul.w	ip, ip, r3
 80173f0:	ea4f 231e 	mov.w	r3, lr, lsr #8
 80173f4:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80173f8:	f10e 1e01 	add.w	lr, lr, #65537	; 0x10001
 80173fc:	4473      	add	r3, lr
 80173fe:	f50c 7e80 	add.w	lr, ip, #256	; 0x100
 8017402:	eb0e 2e1c 	add.w	lr, lr, ip, lsr #8
 8017406:	0a1b      	lsrs	r3, r3, #8
 8017408:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801740c:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8017410:	f40e 4e7f 	and.w	lr, lr, #65280	; 0xff00
 8017414:	ea43 030e 	orr.w	r3, r3, lr
 8017418:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 801741c:	d01e      	beq.n	801745c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x23c>
 801741e:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
 8017420:	f006 1cff 	and.w	ip, r6, #16711935	; 0xff00ff
 8017424:	fb08 fc0c 	mul.w	ip, r8, ip
 8017428:	f406 4e7f 	and.w	lr, r6, #65280	; 0xff00
 801742c:	fb08 f80e 	mul.w	r8, r8, lr
 8017430:	ea4f 2e1c 	mov.w	lr, ip, lsr #8
 8017434:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8017438:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801743c:	44e6      	add	lr, ip
 801743e:	f508 7c80 	add.w	ip, r8, #256	; 0x100
 8017442:	eb0c 2818 	add.w	r8, ip, r8, lsr #8
 8017446:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801744a:	ea4f 2818 	mov.w	r8, r8, lsr #8
 801744e:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8017452:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 8017456:	ea4e 0608 	orr.w	r6, lr, r8
 801745a:	960b      	str	r6, [sp, #44]	; 0x2c
 801745c:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 8017460:	d01e      	beq.n	80174a0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x280>
 8017462:	9e08      	ldr	r6, [sp, #32]
 8017464:	f006 18ff 	and.w	r8, r6, #16711935	; 0xff00ff
 8017468:	fb0a f808 	mul.w	r8, sl, r8
 801746c:	f406 4c7f 	and.w	ip, r6, #65280	; 0xff00
 8017470:	fb0a fa0c 	mul.w	sl, sl, ip
 8017474:	ea4f 2e18 	mov.w	lr, r8, lsr #8
 8017478:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801747c:	f108 1801 	add.w	r8, r8, #65537	; 0x10001
 8017480:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8017484:	44c6      	add	lr, r8
 8017486:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801748a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801748e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8017492:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8017496:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801749a:	ea4e 060a 	orr.w	r6, lr, sl
 801749e:	9608      	str	r6, [sp, #32]
 80174a0:	2dff      	cmp	r5, #255	; 0xff
 80174a2:	d01d      	beq.n	80174e0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2c0>
 80174a4:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 80174a6:	f006 18ff 	and.w	r8, r6, #16711935	; 0xff00ff
 80174aa:	fb05 f808 	mul.w	r8, r5, r8
 80174ae:	f406 4c7f 	and.w	ip, r6, #65280	; 0xff00
 80174b2:	fb05 f50c 	mul.w	r5, r5, ip
 80174b6:	ea4f 2e18 	mov.w	lr, r8, lsr #8
 80174ba:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80174be:	f108 1801 	add.w	r8, r8, #65537	; 0x10001
 80174c2:	f505 7c80 	add.w	ip, r5, #256	; 0x100
 80174c6:	44c6      	add	lr, r8
 80174c8:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 80174cc:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80174d0:	0a2d      	lsrs	r5, r5, #8
 80174d2:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80174d6:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 80174da:	ea4e 0505 	orr.w	r5, lr, r5
 80174de:	950c      	str	r5, [sp, #48]	; 0x30
 80174e0:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 80174e2:	9e08      	ldr	r6, [sp, #32]
 80174e4:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 80174e8:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 80174ec:	fb09 f505 	mul.w	r5, r9, r5
 80174f0:	fb02 550c 	mla	r5, r2, ip, r5
 80174f4:	f006 1cff 	and.w	ip, r6, #16711935	; 0xff00ff
 80174f8:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 80174fa:	fb01 550c 	mla	r5, r1, ip, r5
 80174fe:	f006 1cff 	and.w	ip, r6, #16711935	; 0xff00ff
 8017502:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
 8017504:	fb0b 550c 	mla	r5, fp, ip, r5
 8017508:	f406 4c7f 	and.w	ip, r6, #65280	; 0xff00
 801750c:	fb09 f90c 	mul.w	r9, r9, ip
 8017510:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8017514:	fb02 9303 	mla	r3, r2, r3, r9
 8017518:	9a08      	ldr	r2, [sp, #32]
 801751a:	f402 4e7f 	and.w	lr, r2, #65280	; 0xff00
 801751e:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8017520:	fb01 330e 	mla	r3, r1, lr, r3
 8017524:	f402 417f 	and.w	r1, r2, #65280	; 0xff00
 8017528:	fb0b 3b01 	mla	fp, fp, r1, r3
 801752c:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801752e:	0a2d      	lsrs	r5, r5, #8
 8017530:	f8b3 c000 	ldrh.w	ip, [r3]
 8017534:	ea4f 2b1b 	mov.w	fp, fp, lsr #8
 8017538:	fb00 f307 	mul.w	r3, r0, r7
 801753c:	1c58      	adds	r0, r3, #1
 801753e:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8017542:	f40b 4b7f 	and.w	fp, fp, #65280	; 0xff00
 8017546:	ea45 050b 	orr.w	r5, r5, fp
 801754a:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 801754e:	0c29      	lsrs	r1, r5, #16
 8017550:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 8017554:	ea4f 232c 	mov.w	r3, ip, asr #8
 8017558:	b2c0      	uxtb	r0, r0
 801755a:	fb11 f107 	smulbb	r1, r1, r7
 801755e:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8017562:	fb03 1300 	mla	r3, r3, r0, r1
 8017566:	b299      	uxth	r1, r3
 8017568:	ea4f 02ec 	mov.w	r2, ip, asr #3
 801756c:	f3c5 2307 	ubfx	r3, r5, #8, #8
 8017570:	fb13 f307 	smulbb	r3, r3, r7
 8017574:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8017578:	fb02 3200 	mla	r2, r2, r0, r3
 801757c:	b2ed      	uxtb	r5, r5
 801757e:	ea4f 03cc 	mov.w	r3, ip, lsl #3
 8017582:	b2db      	uxtb	r3, r3
 8017584:	fb15 f507 	smulbb	r5, r5, r7
 8017588:	fb03 5500 	mla	r5, r3, r0, r5
 801758c:	b292      	uxth	r2, r2
 801758e:	b2ad      	uxth	r5, r5
 8017590:	1c4b      	adds	r3, r1, #1
 8017592:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 8017596:	1c68      	adds	r0, r5, #1
 8017598:	1c51      	adds	r1, r2, #1
 801759a:	eb00 2515 	add.w	r5, r0, r5, lsr #8
 801759e:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 80175a2:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 80175a6:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 80175aa:	0952      	lsrs	r2, r2, #5
 80175ac:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80175b0:	432b      	orrs	r3, r5
 80175b2:	4313      	orrs	r3, r2
 80175b4:	9a11      	ldr	r2, [sp, #68]	; 0x44
 80175b6:	8013      	strh	r3, [r2, #0]
 80175b8:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80175ba:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 80175bc:	3302      	adds	r3, #2
 80175be:	9311      	str	r3, [sp, #68]	; 0x44
 80175c0:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 80175c2:	4413      	add	r3, r2
 80175c4:	932b      	str	r3, [sp, #172]	; 0xac
 80175c6:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 80175c8:	441c      	add	r4, r3
 80175ca:	9b14      	ldr	r3, [sp, #80]	; 0x50
 80175cc:	3b01      	subs	r3, #1
 80175ce:	9314      	str	r3, [sp, #80]	; 0x50
 80175d0:	e6ae      	b.n	8017330 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x110>
 80175d2:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 80175d4:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 80175d6:	4413      	add	r3, r2
 80175d8:	932b      	str	r3, [sp, #172]	; 0xac
 80175da:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 80175dc:	441c      	add	r4, r3
 80175de:	9b06      	ldr	r3, [sp, #24]
 80175e0:	3b01      	subs	r3, #1
 80175e2:	9306      	str	r3, [sp, #24]
 80175e4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80175e6:	3302      	adds	r3, #2
 80175e8:	930a      	str	r3, [sp, #40]	; 0x28
 80175ea:	e653      	b.n	8017294 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x74>
 80175ec:	f47f ae65 	bne.w	80172ba <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9a>
 80175f0:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 80175f2:	2b00      	cmp	r3, #0
 80175f4:	f340 81a0 	ble.w	8017938 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x718>
 80175f8:	ee3a aa2b 	vadd.f32	s20, s20, s23
 80175fc:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8017600:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 8017604:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8017606:	ee79 9a8b 	vadd.f32	s19, s19, s22
 801760a:	ee39 9a2a 	vadd.f32	s18, s18, s21
 801760e:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8017612:	eef0 6a48 	vmov.f32	s13, s16
 8017616:	ee69 7a27 	vmul.f32	s15, s18, s15
 801761a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801761e:	ee37 8a48 	vsub.f32	s16, s14, s16
 8017622:	edcd 6a2b 	vstr	s13, [sp, #172]	; 0xac
 8017626:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 801762a:	eef0 6a68 	vmov.f32	s13, s17
 801762e:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8017632:	ee18 2a10 	vmov	r2, s16
 8017636:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 801763a:	fb92 f3f3 	sdiv	r3, r2, r3
 801763e:	ee18 2a90 	vmov	r2, s17
 8017642:	932d      	str	r3, [sp, #180]	; 0xb4
 8017644:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8017646:	fb92 f3f3 	sdiv	r3, r2, r3
 801764a:	932e      	str	r3, [sp, #184]	; 0xb8
 801764c:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801764e:	9a16      	ldr	r2, [sp, #88]	; 0x58
 8017650:	3b01      	subs	r3, #1
 8017652:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8017656:	9313      	str	r3, [sp, #76]	; 0x4c
 8017658:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801765a:	bf08      	it	eq
 801765c:	4613      	moveq	r3, r2
 801765e:	ee16 4a90 	vmov	r4, s13
 8017662:	9306      	str	r3, [sp, #24]
 8017664:	eef0 8a67 	vmov.f32	s17, s15
 8017668:	eeb0 8a47 	vmov.f32	s16, s14
 801766c:	e60b      	b.n	8017286 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x66>
 801766e:	b151      	cbz	r1, 8017686 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x466>
 8017670:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8017672:	58aa      	ldr	r2, [r5, r2]
 8017674:	9208      	str	r2, [sp, #32]
 8017676:	ea4f 6a12 	mov.w	sl, r2, lsr #24
 801767a:	25ff      	movs	r5, #255	; 0xff
 801767c:	46a8      	mov	r8, r5
 801767e:	e68f      	b.n	80173a0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x180>
 8017680:	25ff      	movs	r5, #255	; 0xff
 8017682:	46aa      	mov	sl, r5
 8017684:	e68c      	b.n	80173a0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x180>
 8017686:	25ff      	movs	r5, #255	; 0xff
 8017688:	46aa      	mov	sl, r5
 801768a:	e7f7      	b.n	801767c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x45c>
 801768c:	1c56      	adds	r6, r2, #1
 801768e:	d193      	bne.n	80175b8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x398>
 8017690:	9d07      	ldr	r5, [sp, #28]
 8017692:	4295      	cmp	r5, r2
 8017694:	dd90      	ble.n	80175b8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x398>
 8017696:	1c5d      	adds	r5, r3, #1
 8017698:	db8e      	blt.n	80175b8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x398>
 801769a:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801769c:	429d      	cmp	r5, r3
 801769e:	dd8b      	ble.n	80175b8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x398>
 80176a0:	9d15      	ldr	r5, [sp, #84]	; 0x54
 80176a2:	9201      	str	r2, [sp, #4]
 80176a4:	e9cd 3002 	strd	r3, r0, [sp, #8]
 80176a8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80176aa:	9300      	str	r3, [sp, #0]
 80176ac:	e9cd 1504 	strd	r1, r5, [sp, #16]
 80176b0:	9b07      	ldr	r3, [sp, #28]
 80176b2:	9817      	ldr	r0, [sp, #92]	; 0x5c
 80176b4:	e9dd 1211 	ldrd	r1, r2, [sp, #68]	; 0x44
 80176b8:	f7ff fc4e 	bl	8016f58 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>
 80176bc:	e77c      	b.n	80175b8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x398>
 80176be:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 80176c0:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 80176c2:	9d07      	ldr	r5, [sp, #28]
 80176c4:	1412      	asrs	r2, r2, #16
 80176c6:	f3c3 3103 	ubfx	r1, r3, #12, #4
 80176ca:	1423      	asrs	r3, r4, #16
 80176cc:	fb05 2303 	mla	r3, r5, r3, r2
 80176d0:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80176d2:	eb02 0583 	add.w	r5, r2, r3, lsl #2
 80176d6:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 80176da:	f3c4 3003 	ubfx	r0, r4, #12, #4
 80176de:	0e1e      	lsrs	r6, r3, #24
 80176e0:	2900      	cmp	r1, #0
 80176e2:	f000 811a 	beq.w	801791a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6fa>
 80176e6:	686a      	ldr	r2, [r5, #4]
 80176e8:	920d      	str	r2, [sp, #52]	; 0x34
 80176ea:	ea4f 6c12 	mov.w	ip, r2, lsr #24
 80176ee:	2800      	cmp	r0, #0
 80176f0:	f000 811c 	beq.w	801792c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x70c>
 80176f4:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 80176f6:	9f0e      	ldr	r7, [sp, #56]	; 0x38
 80176f8:	18aa      	adds	r2, r5, r2
 80176fa:	59ed      	ldr	r5, [r5, r7]
 80176fc:	6852      	ldr	r2, [r2, #4]
 80176fe:	9509      	str	r5, [sp, #36]	; 0x24
 8017700:	ea4f 6815 	mov.w	r8, r5, lsr #24
 8017704:	920f      	str	r2, [sp, #60]	; 0x3c
 8017706:	0e15      	lsrs	r5, r2, #24
 8017708:	b289      	uxth	r1, r1
 801770a:	b280      	uxth	r0, r0
 801770c:	fb01 f900 	mul.w	r9, r1, r0
 8017710:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 8017714:	0109      	lsls	r1, r1, #4
 8017716:	eba1 0e09 	sub.w	lr, r1, r9
 801771a:	b280      	uxth	r0, r0
 801771c:	f5c1 7280 	rsb	r2, r1, #256	; 0x100
 8017720:	fa1f fe8e 	uxth.w	lr, lr
 8017724:	1a12      	subs	r2, r2, r0
 8017726:	b292      	uxth	r2, r2
 8017728:	fb0e f10c 	mul.w	r1, lr, ip
 801772c:	fb02 1106 	mla	r1, r2, r6, r1
 8017730:	fb00 1108 	mla	r1, r0, r8, r1
 8017734:	fb09 1105 	mla	r1, r9, r5, r1
 8017738:	f3c1 2107 	ubfx	r1, r1, #8, #8
 801773c:	2900      	cmp	r1, #0
 801773e:	f000 80e0 	beq.w	8017902 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6e2>
 8017742:	2eff      	cmp	r6, #255	; 0xff
 8017744:	d016      	beq.n	8017774 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x554>
 8017746:	f003 17ff 	and.w	r7, r3, #16711935	; 0xff00ff
 801774a:	4377      	muls	r7, r6
 801774c:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8017750:	435e      	muls	r6, r3
 8017752:	0a3b      	lsrs	r3, r7, #8
 8017754:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8017758:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801775c:	443b      	add	r3, r7
 801775e:	f506 7780 	add.w	r7, r6, #256	; 0x100
 8017762:	eb07 2716 	add.w	r7, r7, r6, lsr #8
 8017766:	0a1b      	lsrs	r3, r3, #8
 8017768:	0a3f      	lsrs	r7, r7, #8
 801776a:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801776e:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 8017772:	433b      	orrs	r3, r7
 8017774:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8017778:	d01d      	beq.n	80177b6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x596>
 801777a:	9e0d      	ldr	r6, [sp, #52]	; 0x34
 801777c:	9f0d      	ldr	r7, [sp, #52]	; 0x34
 801777e:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8017782:	fb0c f606 	mul.w	r6, ip, r6
 8017786:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 801778a:	fb0c fc07 	mul.w	ip, ip, r7
 801778e:	0a37      	lsrs	r7, r6, #8
 8017790:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8017794:	f106 1601 	add.w	r6, r6, #65537	; 0x10001
 8017798:	4437      	add	r7, r6
 801779a:	f50c 7680 	add.w	r6, ip, #256	; 0x100
 801779e:	eb06 2c1c 	add.w	ip, r6, ip, lsr #8
 80177a2:	0a3f      	lsrs	r7, r7, #8
 80177a4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80177a8:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 80177ac:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 80177b0:	ea47 060c 	orr.w	r6, r7, ip
 80177b4:	960d      	str	r6, [sp, #52]	; 0x34
 80177b6:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 80177ba:	d01d      	beq.n	80177f8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x5d8>
 80177bc:	9e09      	ldr	r6, [sp, #36]	; 0x24
 80177be:	f006 1cff 	and.w	ip, r6, #16711935	; 0xff00ff
 80177c2:	fb08 fc0c 	mul.w	ip, r8, ip
 80177c6:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 80177ca:	fb08 f806 	mul.w	r8, r8, r6
 80177ce:	ea4f 271c 	mov.w	r7, ip, lsr #8
 80177d2:	f508 7680 	add.w	r6, r8, #256	; 0x100
 80177d6:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 80177da:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 80177de:	eb06 2818 	add.w	r8, r6, r8, lsr #8
 80177e2:	4467      	add	r7, ip
 80177e4:	0a3f      	lsrs	r7, r7, #8
 80177e6:	ea4f 2818 	mov.w	r8, r8, lsr #8
 80177ea:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 80177ee:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 80177f2:	ea47 0608 	orr.w	r6, r7, r8
 80177f6:	9609      	str	r6, [sp, #36]	; 0x24
 80177f8:	2dff      	cmp	r5, #255	; 0xff
 80177fa:	d01a      	beq.n	8017832 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x612>
 80177fc:	9e0f      	ldr	r6, [sp, #60]	; 0x3c
 80177fe:	f006 1cff 	and.w	ip, r6, #16711935	; 0xff00ff
 8017802:	fb05 fc0c 	mul.w	ip, r5, ip
 8017806:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 801780a:	4375      	muls	r5, r6
 801780c:	ea4f 271c 	mov.w	r7, ip, lsr #8
 8017810:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8017814:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8017818:	f505 7680 	add.w	r6, r5, #256	; 0x100
 801781c:	4467      	add	r7, ip
 801781e:	eb06 2515 	add.w	r5, r6, r5, lsr #8
 8017822:	0a3f      	lsrs	r7, r7, #8
 8017824:	0a2d      	lsrs	r5, r5, #8
 8017826:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 801782a:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 801782e:	433d      	orrs	r5, r7
 8017830:	950f      	str	r5, [sp, #60]	; 0x3c
 8017832:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8017834:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8017838:	f003 16ff 	and.w	r6, r3, #16711935	; 0xff00ff
 801783c:	fb0e f505 	mul.w	r5, lr, r5
 8017840:	fb02 5506 	mla	r5, r2, r6, r5
 8017844:	9e09      	ldr	r6, [sp, #36]	; 0x24
 8017846:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 801784a:	fb00 5506 	mla	r5, r0, r6, r5
 801784e:	9e0f      	ldr	r6, [sp, #60]	; 0x3c
 8017850:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8017854:	fb09 5506 	mla	r5, r9, r6, r5
 8017858:	9e0d      	ldr	r6, [sp, #52]	; 0x34
 801785a:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 801785e:	fb0e fe06 	mul.w	lr, lr, r6
 8017862:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8017866:	fb02 e303 	mla	r3, r2, r3, lr
 801786a:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801786c:	f402 477f 	and.w	r7, r2, #65280	; 0xff00
 8017870:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8017872:	fb00 3307 	mla	r3, r0, r7, r3
 8017876:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 801787a:	fb09 3c0c 	mla	ip, r9, ip, r3
 801787e:	fb01 f10b 	mul.w	r1, r1, fp
 8017882:	0a2d      	lsrs	r5, r5, #8
 8017884:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8017888:	f8ba 0000 	ldrh.w	r0, [sl]
 801788c:	1c4b      	adds	r3, r1, #1
 801788e:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8017892:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8017896:	ea45 050c 	orr.w	r5, r5, ip
 801789a:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 801789e:	1202      	asrs	r2, r0, #8
 80178a0:	0c2b      	lsrs	r3, r5, #16
 80178a2:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 80178a6:	b2c9      	uxtb	r1, r1
 80178a8:	fb13 f30b 	smulbb	r3, r3, fp
 80178ac:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 80178b0:	fb02 3201 	mla	r2, r2, r1, r3
 80178b4:	f3c5 2607 	ubfx	r6, r5, #8, #8
 80178b8:	10c3      	asrs	r3, r0, #3
 80178ba:	b2ed      	uxtb	r5, r5
 80178bc:	00c0      	lsls	r0, r0, #3
 80178be:	b2c0      	uxtb	r0, r0
 80178c0:	fb15 f50b 	smulbb	r5, r5, fp
 80178c4:	fb00 5001 	mla	r0, r0, r1, r5
 80178c8:	b292      	uxth	r2, r2
 80178ca:	fb16 f60b 	smulbb	r6, r6, fp
 80178ce:	b280      	uxth	r0, r0
 80178d0:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 80178d4:	fb03 6301 	mla	r3, r3, r1, r6
 80178d8:	1c51      	adds	r1, r2, #1
 80178da:	1c46      	adds	r6, r0, #1
 80178dc:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 80178e0:	eb06 2610 	add.w	r6, r6, r0, lsr #8
 80178e4:	b29b      	uxth	r3, r3
 80178e6:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 80178ea:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 80178ee:	4332      	orrs	r2, r6
 80178f0:	1c5e      	adds	r6, r3, #1
 80178f2:	eb06 2313 	add.w	r3, r6, r3, lsr #8
 80178f6:	095b      	lsrs	r3, r3, #5
 80178f8:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80178fc:	431a      	orrs	r2, r3
 80178fe:	f8aa 2000 	strh.w	r2, [sl]
 8017902:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8017904:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 8017906:	4413      	add	r3, r2
 8017908:	932b      	str	r3, [sp, #172]	; 0xac
 801790a:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 801790c:	441c      	add	r4, r3
 801790e:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8017910:	3b01      	subs	r3, #1
 8017912:	f10a 0a02 	add.w	sl, sl, #2
 8017916:	9311      	str	r3, [sp, #68]	; 0x44
 8017918:	e4ea      	b.n	80172f0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xd0>
 801791a:	b150      	cbz	r0, 8017932 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x712>
 801791c:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801791e:	58aa      	ldr	r2, [r5, r2]
 8017920:	9209      	str	r2, [sp, #36]	; 0x24
 8017922:	ea4f 6812 	mov.w	r8, r2, lsr #24
 8017926:	25ff      	movs	r5, #255	; 0xff
 8017928:	46ac      	mov	ip, r5
 801792a:	e6ed      	b.n	8017708 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4e8>
 801792c:	25ff      	movs	r5, #255	; 0xff
 801792e:	46a8      	mov	r8, r5
 8017930:	e6ea      	b.n	8017708 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4e8>
 8017932:	25ff      	movs	r5, #255	; 0xff
 8017934:	46a8      	mov	r8, r5
 8017936:	e7f7      	b.n	8017928 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x708>
 8017938:	b019      	add	sp, #100	; 0x64
 801793a:	ecbd 8b08 	vpop	{d8-d11}
 801793e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

08017944 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>:
 8017944:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017948:	8808      	ldrh	r0, [r1, #0]
 801794a:	b085      	sub	sp, #20
 801794c:	1206      	asrs	r6, r0, #8
 801794e:	e9dd c40f 	ldrd	ip, r4, [sp, #60]	; 0x3c
 8017952:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8017956:	9600      	str	r6, [sp, #0]
 8017958:	10c6      	asrs	r6, r0, #3
 801795a:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801795e:	9601      	str	r6, [sp, #4]
 8017960:	00c0      	lsls	r0, r0, #3
 8017962:	fb04 c603 	mla	r6, r4, r3, ip
 8017966:	b2c0      	uxtb	r0, r0
 8017968:	4691      	mov	r9, r2
 801796a:	eb02 0e86 	add.w	lr, r2, r6, lsl #2
 801796e:	9a00      	ldr	r2, [sp, #0]
 8017970:	9002      	str	r0, [sp, #8]
 8017972:	f040 407f 	orr.w	r0, r0, #4278190080	; 0xff000000
 8017976:	ea40 4002 	orr.w	r0, r0, r2, lsl #16
 801797a:	9a01      	ldr	r2, [sp, #4]
 801797c:	f9bd 8038 	ldrsh.w	r8, [sp, #56]	; 0x38
 8017980:	f89d 5044 	ldrb.w	r5, [sp, #68]	; 0x44
 8017984:	f89d 7048 	ldrb.w	r7, [sp, #72]	; 0x48
 8017988:	2c00      	cmp	r4, #0
 801798a:	ea40 2002 	orr.w	r0, r0, r2, lsl #8
 801798e:	db3a      	blt.n	8017a06 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xc2>
 8017990:	45a0      	cmp	r8, r4
 8017992:	dd38      	ble.n	8017a06 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xc2>
 8017994:	f1bc 0f00 	cmp.w	ip, #0
 8017998:	db33      	blt.n	8017a02 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xbe>
 801799a:	4563      	cmp	r3, ip
 801799c:	dd31      	ble.n	8017a02 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xbe>
 801799e:	f859 2026 	ldr.w	r2, [r9, r6, lsl #2]
 80179a2:	f11c 0601 	adds.w	r6, ip, #1
 80179a6:	d431      	bmi.n	8017a0c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xc8>
 80179a8:	42b3      	cmp	r3, r6
 80179aa:	dd2f      	ble.n	8017a0c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xc8>
 80179ac:	b375      	cbz	r5, 8017a0c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xc8>
 80179ae:	f8de 6004 	ldr.w	r6, [lr, #4]
 80179b2:	3401      	adds	r4, #1
 80179b4:	d42e      	bmi.n	8017a14 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xd0>
 80179b6:	45a0      	cmp	r8, r4
 80179b8:	dd2c      	ble.n	8017a14 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xd0>
 80179ba:	b35f      	cbz	r7, 8017a14 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xd0>
 80179bc:	f1bc 0f00 	cmp.w	ip, #0
 80179c0:	db26      	blt.n	8017a10 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xcc>
 80179c2:	4563      	cmp	r3, ip
 80179c4:	dd24      	ble.n	8017a10 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xcc>
 80179c6:	f85e 4023 	ldr.w	r4, [lr, r3, lsl #2]
 80179ca:	f11c 0c01 	adds.w	ip, ip, #1
 80179ce:	d405      	bmi.n	80179dc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x98>
 80179d0:	4563      	cmp	r3, ip
 80179d2:	dd03      	ble.n	80179dc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x98>
 80179d4:	b115      	cbz	r5, 80179dc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x98>
 80179d6:	3301      	adds	r3, #1
 80179d8:	f85e 0023 	ldr.w	r0, [lr, r3, lsl #2]
 80179dc:	2d0f      	cmp	r5, #15
 80179de:	ea4f 6b12 	mov.w	fp, r2, lsr #24
 80179e2:	ea4f 6a16 	mov.w	sl, r6, lsr #24
 80179e6:	ea4f 6914 	mov.w	r9, r4, lsr #24
 80179ea:	ea4f 6810 	mov.w	r8, r0, lsr #24
 80179ee:	d801      	bhi.n	80179f4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xb0>
 80179f0:	2f0f      	cmp	r7, #15
 80179f2:	d911      	bls.n	8017a18 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xd4>
 80179f4:	4b7b      	ldr	r3, [pc, #492]	; (8017be4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x2a0>)
 80179f6:	4a7c      	ldr	r2, [pc, #496]	; (8017be8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x2a4>)
 80179f8:	487c      	ldr	r0, [pc, #496]	; (8017bec <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x2a8>)
 80179fa:	f240 210d 	movw	r1, #525	; 0x20d
 80179fe:	f001 fd05 	bl	801940c <__assert_func>
 8017a02:	4602      	mov	r2, r0
 8017a04:	e7cd      	b.n	80179a2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x5e>
 8017a06:	4606      	mov	r6, r0
 8017a08:	4602      	mov	r2, r0
 8017a0a:	e7d2      	b.n	80179b2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x6e>
 8017a0c:	4606      	mov	r6, r0
 8017a0e:	e7d0      	b.n	80179b2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x6e>
 8017a10:	4604      	mov	r4, r0
 8017a12:	e7da      	b.n	80179ca <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x86>
 8017a14:	4604      	mov	r4, r0
 8017a16:	e7e1      	b.n	80179dc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x98>
 8017a18:	b2ab      	uxth	r3, r5
 8017a1a:	b2bf      	uxth	r7, r7
 8017a1c:	fb03 fe07 	mul.w	lr, r3, r7
 8017a20:	ebce 1707 	rsb	r7, lr, r7, lsl #4
 8017a24:	011b      	lsls	r3, r3, #4
 8017a26:	eba3 0c0e 	sub.w	ip, r3, lr
 8017a2a:	b2bf      	uxth	r7, r7
 8017a2c:	f5c3 7580 	rsb	r5, r3, #256	; 0x100
 8017a30:	fa1f fc8c 	uxth.w	ip, ip
 8017a34:	1bed      	subs	r5, r5, r7
 8017a36:	b2ad      	uxth	r5, r5
 8017a38:	fb0c f30a 	mul.w	r3, ip, sl
 8017a3c:	fb05 330b 	mla	r3, r5, fp, r3
 8017a40:	fb07 3309 	mla	r3, r7, r9, r3
 8017a44:	fb0e 3308 	mla	r3, lr, r8, r3
 8017a48:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8017a4c:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 8017a50:	9303      	str	r3, [sp, #12]
 8017a52:	d018      	beq.n	8017a86 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x142>
 8017a54:	f002 13ff 	and.w	r3, r2, #16711935	; 0xff00ff
 8017a58:	fb0b f303 	mul.w	r3, fp, r3
 8017a5c:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8017a60:	fb0b fb02 	mul.w	fp, fp, r2
 8017a64:	0a1a      	lsrs	r2, r3, #8
 8017a66:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8017a6a:	f103 1301 	add.w	r3, r3, #65537	; 0x10001
 8017a6e:	441a      	add	r2, r3
 8017a70:	f50b 7380 	add.w	r3, fp, #256	; 0x100
 8017a74:	eb03 231b 	add.w	r3, r3, fp, lsr #8
 8017a78:	0a12      	lsrs	r2, r2, #8
 8017a7a:	0a1b      	lsrs	r3, r3, #8
 8017a7c:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8017a80:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8017a84:	431a      	orrs	r2, r3
 8017a86:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 8017a8a:	d019      	beq.n	8017ac0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x17c>
 8017a8c:	f006 1bff 	and.w	fp, r6, #16711935	; 0xff00ff
 8017a90:	fb0a fb0b 	mul.w	fp, sl, fp
 8017a94:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8017a98:	fb0a fa06 	mul.w	sl, sl, r6
 8017a9c:	ea4f 261b 	mov.w	r6, fp, lsr #8
 8017aa0:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8017aa4:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8017aa8:	f50a 7380 	add.w	r3, sl, #256	; 0x100
 8017aac:	445e      	add	r6, fp
 8017aae:	eb03 231a 	add.w	r3, r3, sl, lsr #8
 8017ab2:	0a36      	lsrs	r6, r6, #8
 8017ab4:	0a1b      	lsrs	r3, r3, #8
 8017ab6:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8017aba:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8017abe:	431e      	orrs	r6, r3
 8017ac0:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8017ac4:	d019      	beq.n	8017afa <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x1b6>
 8017ac6:	f004 1aff 	and.w	sl, r4, #16711935	; 0xff00ff
 8017aca:	fb09 fa0a 	mul.w	sl, r9, sl
 8017ace:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 8017ad2:	fb09 f904 	mul.w	r9, r9, r4
 8017ad6:	ea4f 241a 	mov.w	r4, sl, lsr #8
 8017ada:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8017ade:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8017ae2:	f509 7380 	add.w	r3, r9, #256	; 0x100
 8017ae6:	4454      	add	r4, sl
 8017ae8:	eb03 2319 	add.w	r3, r3, r9, lsr #8
 8017aec:	0a24      	lsrs	r4, r4, #8
 8017aee:	0a1b      	lsrs	r3, r3, #8
 8017af0:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8017af4:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8017af8:	431c      	orrs	r4, r3
 8017afa:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8017afe:	d019      	beq.n	8017b34 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x1f0>
 8017b00:	f000 19ff 	and.w	r9, r0, #16711935	; 0xff00ff
 8017b04:	fb08 f909 	mul.w	r9, r8, r9
 8017b08:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8017b0c:	fb08 f800 	mul.w	r8, r8, r0
 8017b10:	ea4f 2019 	mov.w	r0, r9, lsr #8
 8017b14:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 8017b18:	f109 1901 	add.w	r9, r9, #65537	; 0x10001
 8017b1c:	f508 7380 	add.w	r3, r8, #256	; 0x100
 8017b20:	4448      	add	r0, r9
 8017b22:	eb03 2318 	add.w	r3, r3, r8, lsr #8
 8017b26:	0a00      	lsrs	r0, r0, #8
 8017b28:	0a1b      	lsrs	r3, r3, #8
 8017b2a:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 8017b2e:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8017b32:	4318      	orrs	r0, r3
 8017b34:	f006 18ff 	and.w	r8, r6, #16711935	; 0xff00ff
 8017b38:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8017b3c:	f002 13ff 	and.w	r3, r2, #16711935	; 0xff00ff
 8017b40:	fb0c f808 	mul.w	r8, ip, r8
 8017b44:	fb0c f606 	mul.w	r6, ip, r6
 8017b48:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8017b4c:	fb05 8803 	mla	r8, r5, r3, r8
 8017b50:	fb05 6202 	mla	r2, r5, r2, r6
 8017b54:	f004 13ff 	and.w	r3, r4, #16711935	; 0xff00ff
 8017b58:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 8017b5c:	fb07 8803 	mla	r8, r7, r3, r8
 8017b60:	fb07 2704 	mla	r7, r7, r4, r2
 8017b64:	f000 13ff 	and.w	r3, r0, #16711935	; 0xff00ff
 8017b68:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8017b6c:	fb0e 8303 	mla	r3, lr, r3, r8
 8017b70:	fb0e 7e00 	mla	lr, lr, r0, r7
 8017b74:	0a1b      	lsrs	r3, r3, #8
 8017b76:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8017b7a:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8017b7e:	f40e 4e7f 	and.w	lr, lr, #65280	; 0xff00
 8017b82:	ea43 0e0e 	orr.w	lr, r3, lr
 8017b86:	9b03      	ldr	r3, [sp, #12]
 8017b88:	9800      	ldr	r0, [sp, #0]
 8017b8a:	9c01      	ldr	r4, [sp, #4]
 8017b8c:	9a02      	ldr	r2, [sp, #8]
 8017b8e:	43db      	mvns	r3, r3
 8017b90:	b2db      	uxtb	r3, r3
 8017b92:	4358      	muls	r0, r3
 8017b94:	435c      	muls	r4, r3
 8017b96:	435a      	muls	r2, r3
 8017b98:	1c43      	adds	r3, r0, #1
 8017b9a:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8017b9e:	ea4f 431e 	mov.w	r3, lr, lsr #16
 8017ba2:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8017ba6:	4b12      	ldr	r3, [pc, #72]	; (8017bf0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x2ac>)
 8017ba8:	ea03 2300 	and.w	r3, r3, r0, lsl #8
 8017bac:	1c50      	adds	r0, r2, #1
 8017bae:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 8017bb2:	fa5f f28e 	uxtb.w	r2, lr
 8017bb6:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 8017bba:	ea43 03d2 	orr.w	r3, r3, r2, lsr #3
 8017bbe:	1c62      	adds	r2, r4, #1
 8017bc0:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 8017bc4:	f3ce 2e07 	ubfx	lr, lr, #8, #8
 8017bc8:	eb0e 2e12 	add.w	lr, lr, r2, lsr #8
 8017bcc:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8017bd0:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 8017bd4:	ea43 0e0e 	orr.w	lr, r3, lr
 8017bd8:	f8a1 e000 	strh.w	lr, [r1]
 8017bdc:	b005      	add	sp, #20
 8017bde:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017be2:	bf00      	nop
 8017be4:	0801d135 	.word	0x0801d135
 8017be8:	0801d68d 	.word	0x0801d68d
 8017bec:	0801d1bd 	.word	0x0801d1bd
 8017bf0:	fffff800 	.word	0xfffff800

08017bf4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 8017bf4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017bf8:	ed2d 8b08 	vpush	{d8-d11}
 8017bfc:	b097      	sub	sp, #92	; 0x5c
 8017bfe:	eeb0 aa40 	vmov.f32	s20, s0
 8017c02:	9306      	str	r3, [sp, #24]
 8017c04:	f9bd 30c0 	ldrsh.w	r3, [sp, #192]	; 0xc0
 8017c08:	9307      	str	r3, [sp, #28]
 8017c0a:	9214      	str	r2, [sp, #80]	; 0x50
 8017c0c:	f9bd 30c4 	ldrsh.w	r3, [sp, #196]	; 0xc4
 8017c10:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 8017c12:	9112      	str	r1, [sp, #72]	; 0x48
 8017c14:	9310      	str	r3, [sp, #64]	; 0x40
 8017c16:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	; 0xb8
 8017c1a:	9015      	str	r0, [sp, #84]	; 0x54
 8017c1c:	6850      	ldr	r0, [r2, #4]
 8017c1e:	6812      	ldr	r2, [r2, #0]
 8017c20:	9d2a      	ldr	r5, [sp, #168]	; 0xa8
 8017c22:	fb00 1303 	mla	r3, r0, r3, r1
 8017c26:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8017c2a:	930a      	str	r3, [sp, #40]	; 0x28
 8017c2c:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 8017c2e:	681b      	ldr	r3, [r3, #0]
 8017c30:	9311      	str	r3, [sp, #68]	; 0x44
 8017c32:	9b07      	ldr	r3, [sp, #28]
 8017c34:	009b      	lsls	r3, r3, #2
 8017c36:	eef0 9a60 	vmov.f32	s19, s1
 8017c3a:	eeb0 9a41 	vmov.f32	s18, s2
 8017c3e:	eeb0 8a62 	vmov.f32	s16, s5
 8017c42:	eef0 8a43 	vmov.f32	s17, s6
 8017c46:	eef0 ba44 	vmov.f32	s23, s8
 8017c4a:	eeb0 ba64 	vmov.f32	s22, s9
 8017c4e:	eef0 aa45 	vmov.f32	s21, s10
 8017c52:	930e      	str	r3, [sp, #56]	; 0x38
 8017c54:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8017c56:	2b00      	cmp	r3, #0
 8017c58:	dc03      	bgt.n	8017c62 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6e>
 8017c5a:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8017c5c:	2b00      	cmp	r3, #0
 8017c5e:	f340 8361 	ble.w	8018324 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x730>
 8017c62:	9b06      	ldr	r3, [sp, #24]
 8017c64:	2b00      	cmp	r3, #0
 8017c66:	f340 819b 	ble.w	8017fa0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3ac>
 8017c6a:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8017c6c:	1412      	asrs	r2, r2, #16
 8017c6e:	ea4f 4325 	mov.w	r3, r5, asr #16
 8017c72:	d42e      	bmi.n	8017cd2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xde>
 8017c74:	9807      	ldr	r0, [sp, #28]
 8017c76:	1c51      	adds	r1, r2, #1
 8017c78:	4288      	cmp	r0, r1
 8017c7a:	dd2d      	ble.n	8017cd8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe4>
 8017c7c:	2b00      	cmp	r3, #0
 8017c7e:	db2b      	blt.n	8017cd8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe4>
 8017c80:	9810      	ldr	r0, [sp, #64]	; 0x40
 8017c82:	1c59      	adds	r1, r3, #1
 8017c84:	4288      	cmp	r0, r1
 8017c86:	dd27      	ble.n	8017cd8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe4>
 8017c88:	9b06      	ldr	r3, [sp, #24]
 8017c8a:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 8017c8c:	9929      	ldr	r1, [sp, #164]	; 0xa4
 8017c8e:	3b01      	subs	r3, #1
 8017c90:	fb02 1203 	mla	r2, r2, r3, r1
 8017c94:	1412      	asrs	r2, r2, #16
 8017c96:	d42a      	bmi.n	8017cee <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfa>
 8017c98:	9907      	ldr	r1, [sp, #28]
 8017c9a:	3201      	adds	r2, #1
 8017c9c:	4291      	cmp	r1, r2
 8017c9e:	dd26      	ble.n	8017cee <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfa>
 8017ca0:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 8017ca2:	fb02 5303 	mla	r3, r2, r3, r5
 8017ca6:	141b      	asrs	r3, r3, #16
 8017ca8:	d421      	bmi.n	8017cee <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfa>
 8017caa:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8017cac:	3301      	adds	r3, #1
 8017cae:	429a      	cmp	r2, r3
 8017cb0:	dd1d      	ble.n	8017cee <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfa>
 8017cb2:	9b06      	ldr	r3, [sp, #24]
 8017cb4:	f8dd a028 	ldr.w	sl, [sp, #40]	; 0x28
 8017cb8:	9313      	str	r3, [sp, #76]	; 0x4c
 8017cba:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8017cbc:	2b00      	cmp	r3, #0
 8017cbe:	f300 81e3 	bgt.w	8018088 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x494>
 8017cc2:	9b06      	ldr	r3, [sp, #24]
 8017cc4:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8017cc8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8017cca:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 8017cce:	930a      	str	r3, [sp, #40]	; 0x28
 8017cd0:	e168      	b.n	8017fa4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3b0>
 8017cd2:	1c51      	adds	r1, r2, #1
 8017cd4:	f040 8157 	bne.w	8017f86 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x392>
 8017cd8:	9907      	ldr	r1, [sp, #28]
 8017cda:	428a      	cmp	r2, r1
 8017cdc:	f280 8153 	bge.w	8017f86 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x392>
 8017ce0:	1c5f      	adds	r7, r3, #1
 8017ce2:	f2c0 8150 	blt.w	8017f86 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x392>
 8017ce6:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8017ce8:	4293      	cmp	r3, r2
 8017cea:	f280 814c 	bge.w	8017f86 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x392>
 8017cee:	9b06      	ldr	r3, [sp, #24]
 8017cf0:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8017cf2:	9313      	str	r3, [sp, #76]	; 0x4c
 8017cf4:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8017cf6:	2b00      	cmp	r3, #0
 8017cf8:	dde3      	ble.n	8017cc2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xce>
 8017cfa:	9929      	ldr	r1, [sp, #164]	; 0xa4
 8017cfc:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8017cfe:	1409      	asrs	r1, r1, #16
 8017d00:	ea4f 4325 	mov.w	r3, r5, asr #16
 8017d04:	f3c2 3203 	ubfx	r2, r2, #12, #4
 8017d08:	f3c5 3003 	ubfx	r0, r5, #12, #4
 8017d0c:	f100 81a3 	bmi.w	8018056 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x462>
 8017d10:	9c07      	ldr	r4, [sp, #28]
 8017d12:	1c4e      	adds	r6, r1, #1
 8017d14:	42b4      	cmp	r4, r6
 8017d16:	f340 81a0 	ble.w	801805a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x466>
 8017d1a:	2b00      	cmp	r3, #0
 8017d1c:	f2c0 819d 	blt.w	801805a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x466>
 8017d20:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8017d22:	1c5e      	adds	r6, r3, #1
 8017d24:	42b4      	cmp	r4, r6
 8017d26:	f340 8198 	ble.w	801805a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x466>
 8017d2a:	9c07      	ldr	r4, [sp, #28]
 8017d2c:	fb03 1304 	mla	r3, r3, r4, r1
 8017d30:	9911      	ldr	r1, [sp, #68]	; 0x44
 8017d32:	eb01 0683 	add.w	r6, r1, r3, lsl #2
 8017d36:	f851 3023 	ldr.w	r3, [r1, r3, lsl #2]
 8017d3a:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 8017d3e:	2a00      	cmp	r2, #0
 8017d40:	f000 816f 	beq.w	8018022 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x42e>
 8017d44:	6871      	ldr	r1, [r6, #4]
 8017d46:	910b      	str	r1, [sp, #44]	; 0x2c
 8017d48:	ea4f 6811 	mov.w	r8, r1, lsr #24
 8017d4c:	2800      	cmp	r0, #0
 8017d4e:	f000 8171 	beq.w	8018034 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x440>
 8017d52:	990e      	ldr	r1, [sp, #56]	; 0x38
 8017d54:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8017d56:	1871      	adds	r1, r6, r1
 8017d58:	5934      	ldr	r4, [r6, r4]
 8017d5a:	6849      	ldr	r1, [r1, #4]
 8017d5c:	9408      	str	r4, [sp, #32]
 8017d5e:	ea4f 6a14 	mov.w	sl, r4, lsr #24
 8017d62:	910c      	str	r1, [sp, #48]	; 0x30
 8017d64:	0e0e      	lsrs	r6, r1, #24
 8017d66:	b292      	uxth	r2, r2
 8017d68:	b280      	uxth	r0, r0
 8017d6a:	fb02 fb00 	mul.w	fp, r2, r0
 8017d6e:	ebcb 1000 	rsb	r0, fp, r0, lsl #4
 8017d72:	0112      	lsls	r2, r2, #4
 8017d74:	eba2 090b 	sub.w	r9, r2, fp
 8017d78:	b280      	uxth	r0, r0
 8017d7a:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 8017d7e:	fa1f f989 	uxth.w	r9, r9
 8017d82:	1a09      	subs	r1, r1, r0
 8017d84:	b289      	uxth	r1, r1
 8017d86:	fb09 f208 	mul.w	r2, r9, r8
 8017d8a:	fb01 220c 	mla	r2, r1, ip, r2
 8017d8e:	fb00 220a 	mla	r2, r0, sl, r2
 8017d92:	fb0b 2206 	mla	r2, fp, r6, r2
 8017d96:	f3c2 2207 	ubfx	r2, r2, #8, #8
 8017d9a:	2a00      	cmp	r2, #0
 8017d9c:	f000 80e8 	beq.w	8017f70 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x37c>
 8017da0:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8017da4:	d01b      	beq.n	8017dde <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1ea>
 8017da6:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 8017daa:	fb0c fe0e 	mul.w	lr, ip, lr
 8017dae:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8017db2:	fb0c fc03 	mul.w	ip, ip, r3
 8017db6:	ea4f 231e 	mov.w	r3, lr, lsr #8
 8017dba:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8017dbe:	f10e 1e01 	add.w	lr, lr, #65537	; 0x10001
 8017dc2:	4473      	add	r3, lr
 8017dc4:	f50c 7e80 	add.w	lr, ip, #256	; 0x100
 8017dc8:	eb0e 2e1c 	add.w	lr, lr, ip, lsr #8
 8017dcc:	0a1b      	lsrs	r3, r3, #8
 8017dce:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8017dd2:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8017dd6:	f40e 4e7f 	and.w	lr, lr, #65280	; 0xff00
 8017dda:	ea43 030e 	orr.w	r3, r3, lr
 8017dde:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8017de2:	d01e      	beq.n	8017e22 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x22e>
 8017de4:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8017de6:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8017dea:	fb08 fc0c 	mul.w	ip, r8, ip
 8017dee:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
 8017df2:	fb08 f80e 	mul.w	r8, r8, lr
 8017df6:	ea4f 2e1c 	mov.w	lr, ip, lsr #8
 8017dfa:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8017dfe:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8017e02:	44e6      	add	lr, ip
 8017e04:	f508 7c80 	add.w	ip, r8, #256	; 0x100
 8017e08:	eb0c 2818 	add.w	r8, ip, r8, lsr #8
 8017e0c:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8017e10:	ea4f 2818 	mov.w	r8, r8, lsr #8
 8017e14:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8017e18:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 8017e1c:	ea4e 0408 	orr.w	r4, lr, r8
 8017e20:	940b      	str	r4, [sp, #44]	; 0x2c
 8017e22:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 8017e26:	d01e      	beq.n	8017e66 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x272>
 8017e28:	9c08      	ldr	r4, [sp, #32]
 8017e2a:	f004 18ff 	and.w	r8, r4, #16711935	; 0xff00ff
 8017e2e:	fb0a f808 	mul.w	r8, sl, r8
 8017e32:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 8017e36:	fb0a fa0c 	mul.w	sl, sl, ip
 8017e3a:	ea4f 2e18 	mov.w	lr, r8, lsr #8
 8017e3e:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8017e42:	f108 1801 	add.w	r8, r8, #65537	; 0x10001
 8017e46:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8017e4a:	44c6      	add	lr, r8
 8017e4c:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8017e50:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8017e54:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8017e58:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8017e5c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8017e60:	ea4e 040a 	orr.w	r4, lr, sl
 8017e64:	9408      	str	r4, [sp, #32]
 8017e66:	2eff      	cmp	r6, #255	; 0xff
 8017e68:	d01d      	beq.n	8017ea6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2b2>
 8017e6a:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8017e6c:	f004 18ff 	and.w	r8, r4, #16711935	; 0xff00ff
 8017e70:	fb06 f808 	mul.w	r8, r6, r8
 8017e74:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 8017e78:	fb06 f60c 	mul.w	r6, r6, ip
 8017e7c:	ea4f 2e18 	mov.w	lr, r8, lsr #8
 8017e80:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8017e84:	f108 1801 	add.w	r8, r8, #65537	; 0x10001
 8017e88:	f506 7c80 	add.w	ip, r6, #256	; 0x100
 8017e8c:	44c6      	add	lr, r8
 8017e8e:	eb0c 2616 	add.w	r6, ip, r6, lsr #8
 8017e92:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8017e96:	0a36      	lsrs	r6, r6, #8
 8017e98:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8017e9c:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8017ea0:	ea4e 0406 	orr.w	r4, lr, r6
 8017ea4:	940c      	str	r4, [sp, #48]	; 0x30
 8017ea6:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8017ea8:	f004 16ff 	and.w	r6, r4, #16711935	; 0xff00ff
 8017eac:	9c08      	ldr	r4, [sp, #32]
 8017eae:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 8017eb2:	fb09 f606 	mul.w	r6, r9, r6
 8017eb6:	fb01 660c 	mla	r6, r1, ip, r6
 8017eba:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8017ebe:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8017ec0:	fb00 660c 	mla	r6, r0, ip, r6
 8017ec4:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8017ec8:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8017eca:	fb0b 660c 	mla	r6, fp, ip, r6
 8017ece:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 8017ed2:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8017ed6:	fb09 f90c 	mul.w	r9, r9, ip
 8017eda:	fb01 9303 	mla	r3, r1, r3, r9
 8017ede:	9908      	ldr	r1, [sp, #32]
 8017ee0:	f401 4e7f 	and.w	lr, r1, #65280	; 0xff00
 8017ee4:	990c      	ldr	r1, [sp, #48]	; 0x30
 8017ee6:	fb00 330e 	mla	r3, r0, lr, r3
 8017eea:	f401 407f 	and.w	r0, r1, #65280	; 0xff00
 8017eee:	fb0b 3b00 	mla	fp, fp, r0, r3
 8017ef2:	0a36      	lsrs	r6, r6, #8
 8017ef4:	ea4f 2b1b 	mov.w	fp, fp, lsr #8
 8017ef8:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8017efc:	f40b 4b7f 	and.w	fp, fp, #65280	; 0xff00
 8017f00:	ea46 060b 	orr.w	r6, r6, fp
 8017f04:	2aff      	cmp	r2, #255	; 0xff
 8017f06:	ea4f 2316 	mov.w	r3, r6, lsr #8
 8017f0a:	f000 8099 	beq.w	8018040 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x44c>
 8017f0e:	8839      	ldrh	r1, [r7, #0]
 8017f10:	43d2      	mvns	r2, r2
 8017f12:	ea4f 2c21 	mov.w	ip, r1, asr #8
 8017f16:	fa5f fe82 	uxtb.w	lr, r2
 8017f1a:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8017f1e:	fb0c fc0e 	mul.w	ip, ip, lr
 8017f22:	10c8      	asrs	r0, r1, #3
 8017f24:	00ca      	lsls	r2, r1, #3
 8017f26:	f10c 0101 	add.w	r1, ip, #1
 8017f2a:	eb01 211c 	add.w	r1, r1, ip, lsr #8
 8017f2e:	ea4f 4c16 	mov.w	ip, r6, lsr #16
 8017f32:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 8017f36:	b2d2      	uxtb	r2, r2
 8017f38:	4952      	ldr	r1, [pc, #328]	; (8018084 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x490>)
 8017f3a:	fb02 f20e 	mul.w	r2, r2, lr
 8017f3e:	ea01 2c0c 	and.w	ip, r1, ip, lsl #8
 8017f42:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8017f46:	1c51      	adds	r1, r2, #1
 8017f48:	fb00 f00e 	mul.w	r0, r0, lr
 8017f4c:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8017f50:	b2f6      	uxtb	r6, r6
 8017f52:	eb06 2612 	add.w	r6, r6, r2, lsr #8
 8017f56:	1c42      	adds	r2, r0, #1
 8017f58:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8017f5c:	b2db      	uxtb	r3, r3
 8017f5e:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8017f62:	00db      	lsls	r3, r3, #3
 8017f64:	ea4c 06d6 	orr.w	r6, ip, r6, lsr #3
 8017f68:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8017f6c:	431e      	orrs	r6, r3
 8017f6e:	803e      	strh	r6, [r7, #0]
 8017f70:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8017f72:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8017f74:	441a      	add	r2, r3
 8017f76:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8017f78:	9229      	str	r2, [sp, #164]	; 0xa4
 8017f7a:	441d      	add	r5, r3
 8017f7c:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8017f7e:	3b01      	subs	r3, #1
 8017f80:	3702      	adds	r7, #2
 8017f82:	9313      	str	r3, [sp, #76]	; 0x4c
 8017f84:	e6b6      	b.n	8017cf4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x100>
 8017f86:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8017f88:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8017f8a:	441a      	add	r2, r3
 8017f8c:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8017f8e:	9229      	str	r2, [sp, #164]	; 0xa4
 8017f90:	441d      	add	r5, r3
 8017f92:	9b06      	ldr	r3, [sp, #24]
 8017f94:	3b01      	subs	r3, #1
 8017f96:	9306      	str	r3, [sp, #24]
 8017f98:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8017f9a:	3302      	adds	r3, #2
 8017f9c:	930a      	str	r3, [sp, #40]	; 0x28
 8017f9e:	e660      	b.n	8017c62 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6e>
 8017fa0:	f47f ae72 	bne.w	8017c88 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x94>
 8017fa4:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8017fa6:	2b00      	cmp	r3, #0
 8017fa8:	f340 81bc 	ble.w	8018324 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x730>
 8017fac:	ee3a aa2b 	vadd.f32	s20, s20, s23
 8017fb0:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8017fb4:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 8017fb8:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8017fba:	ee79 9a8b 	vadd.f32	s19, s19, s22
 8017fbe:	ee39 9a2a 	vadd.f32	s18, s18, s21
 8017fc2:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8017fc6:	eef0 6a48 	vmov.f32	s13, s16
 8017fca:	ee69 7a27 	vmul.f32	s15, s18, s15
 8017fce:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8017fd2:	ee37 8a48 	vsub.f32	s16, s14, s16
 8017fd6:	edcd 6a29 	vstr	s13, [sp, #164]	; 0xa4
 8017fda:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8017fde:	eef0 6a68 	vmov.f32	s13, s17
 8017fe2:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8017fe6:	ee18 2a10 	vmov	r2, s16
 8017fea:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8017fee:	fb92 f3f3 	sdiv	r3, r2, r3
 8017ff2:	ee18 2a90 	vmov	r2, s17
 8017ff6:	932b      	str	r3, [sp, #172]	; 0xac
 8017ff8:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8017ffa:	fb92 f3f3 	sdiv	r3, r2, r3
 8017ffe:	932c      	str	r3, [sp, #176]	; 0xb0
 8018000:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8018002:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8018004:	3b01      	subs	r3, #1
 8018006:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801800a:	9312      	str	r3, [sp, #72]	; 0x48
 801800c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801800e:	bf08      	it	eq
 8018010:	4613      	moveq	r3, r2
 8018012:	ee16 5a90 	vmov	r5, s13
 8018016:	9306      	str	r3, [sp, #24]
 8018018:	eef0 8a67 	vmov.f32	s17, s15
 801801c:	eeb0 8a47 	vmov.f32	s16, s14
 8018020:	e618      	b.n	8017c54 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x60>
 8018022:	b150      	cbz	r0, 801803a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x446>
 8018024:	990e      	ldr	r1, [sp, #56]	; 0x38
 8018026:	5871      	ldr	r1, [r6, r1]
 8018028:	9108      	str	r1, [sp, #32]
 801802a:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 801802e:	26ff      	movs	r6, #255	; 0xff
 8018030:	46b0      	mov	r8, r6
 8018032:	e698      	b.n	8017d66 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x172>
 8018034:	26ff      	movs	r6, #255	; 0xff
 8018036:	46b2      	mov	sl, r6
 8018038:	e695      	b.n	8017d66 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x172>
 801803a:	26ff      	movs	r6, #255	; 0xff
 801803c:	46b2      	mov	sl, r6
 801803e:	e7f7      	b.n	8018030 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x43c>
 8018040:	0972      	lsrs	r2, r6, #5
 8018042:	f423 63ff 	bic.w	r3, r3, #2040	; 0x7f8
 8018046:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801804a:	f023 0307 	bic.w	r3, r3, #7
 801804e:	4313      	orrs	r3, r2
 8018050:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 8018054:	e78a      	b.n	8017f6c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x378>
 8018056:	1c4e      	adds	r6, r1, #1
 8018058:	d18a      	bne.n	8017f70 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x37c>
 801805a:	9c07      	ldr	r4, [sp, #28]
 801805c:	428c      	cmp	r4, r1
 801805e:	dd87      	ble.n	8017f70 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x37c>
 8018060:	1c5c      	adds	r4, r3, #1
 8018062:	db85      	blt.n	8017f70 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x37c>
 8018064:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8018066:	429c      	cmp	r4, r3
 8018068:	dd82      	ble.n	8017f70 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x37c>
 801806a:	e9cd 2003 	strd	r2, r0, [sp, #12]
 801806e:	e9cd 1301 	strd	r1, r3, [sp, #4]
 8018072:	9400      	str	r4, [sp, #0]
 8018074:	9b07      	ldr	r3, [sp, #28]
 8018076:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8018078:	9815      	ldr	r0, [sp, #84]	; 0x54
 801807a:	4639      	mov	r1, r7
 801807c:	f7ff fc62 	bl	8017944 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>
 8018080:	e776      	b.n	8017f70 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x37c>
 8018082:	bf00      	nop
 8018084:	fffff800 	.word	0xfffff800
 8018088:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801808a:	9929      	ldr	r1, [sp, #164]	; 0xa4
 801808c:	9c07      	ldr	r4, [sp, #28]
 801808e:	1409      	asrs	r1, r1, #16
 8018090:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8018094:	142b      	asrs	r3, r5, #16
 8018096:	fb04 1303 	mla	r3, r4, r3, r1
 801809a:	9911      	ldr	r1, [sp, #68]	; 0x44
 801809c:	eb01 0683 	add.w	r6, r1, r3, lsl #2
 80180a0:	f851 3023 	ldr.w	r3, [r1, r3, lsl #2]
 80180a4:	f3c5 3003 	ubfx	r0, r5, #12, #4
 80180a8:	0e1f      	lsrs	r7, r3, #24
 80180aa:	2a00      	cmp	r2, #0
 80180ac:	f000 811d 	beq.w	80182ea <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6f6>
 80180b0:	6871      	ldr	r1, [r6, #4]
 80180b2:	910d      	str	r1, [sp, #52]	; 0x34
 80180b4:	ea4f 6e11 	mov.w	lr, r1, lsr #24
 80180b8:	2800      	cmp	r0, #0
 80180ba:	f000 811f 	beq.w	80182fc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x708>
 80180be:	990e      	ldr	r1, [sp, #56]	; 0x38
 80180c0:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 80180c2:	1871      	adds	r1, r6, r1
 80180c4:	5934      	ldr	r4, [r6, r4]
 80180c6:	6849      	ldr	r1, [r1, #4]
 80180c8:	9409      	str	r4, [sp, #36]	; 0x24
 80180ca:	ea4f 6914 	mov.w	r9, r4, lsr #24
 80180ce:	910f      	str	r1, [sp, #60]	; 0x3c
 80180d0:	0e0e      	lsrs	r6, r1, #24
 80180d2:	b292      	uxth	r2, r2
 80180d4:	b280      	uxth	r0, r0
 80180d6:	fb02 fb00 	mul.w	fp, r2, r0
 80180da:	ebcb 1000 	rsb	r0, fp, r0, lsl #4
 80180de:	0112      	lsls	r2, r2, #4
 80180e0:	eba2 080b 	sub.w	r8, r2, fp
 80180e4:	b280      	uxth	r0, r0
 80180e6:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 80180ea:	fa1f f888 	uxth.w	r8, r8
 80180ee:	1a09      	subs	r1, r1, r0
 80180f0:	b289      	uxth	r1, r1
 80180f2:	fb08 f20e 	mul.w	r2, r8, lr
 80180f6:	fb01 2207 	mla	r2, r1, r7, r2
 80180fa:	fb00 2209 	mla	r2, r0, r9, r2
 80180fe:	fb0b 2206 	mla	r2, fp, r6, r2
 8018102:	f3c2 2207 	ubfx	r2, r2, #8, #8
 8018106:	2a00      	cmp	r2, #0
 8018108:	f000 80e3 	beq.w	80182d2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6de>
 801810c:	2fff      	cmp	r7, #255	; 0xff
 801810e:	d01a      	beq.n	8018146 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x552>
 8018110:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 8018114:	fb07 fc0c 	mul.w	ip, r7, ip
 8018118:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801811c:	435f      	muls	r7, r3
 801811e:	ea4f 231c 	mov.w	r3, ip, lsr #8
 8018122:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8018126:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801812a:	4463      	add	r3, ip
 801812c:	f507 7c80 	add.w	ip, r7, #256	; 0x100
 8018130:	eb0c 2c17 	add.w	ip, ip, r7, lsr #8
 8018134:	0a1b      	lsrs	r3, r3, #8
 8018136:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801813a:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801813e:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8018142:	ea43 030c 	orr.w	r3, r3, ip
 8018146:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 801814a:	d01e      	beq.n	801818a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x596>
 801814c:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801814e:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8018152:	fb0e f707 	mul.w	r7, lr, r7
 8018156:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 801815a:	fb0e fe0c 	mul.w	lr, lr, ip
 801815e:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8018162:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8018166:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801816a:	44bc      	add	ip, r7
 801816c:	f50e 7780 	add.w	r7, lr, #256	; 0x100
 8018170:	eb07 2e1e 	add.w	lr, r7, lr, lsr #8
 8018174:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8018178:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801817c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8018180:	f40e 4e7f 	and.w	lr, lr, #65280	; 0xff00
 8018184:	ea4c 040e 	orr.w	r4, ip, lr
 8018188:	940d      	str	r4, [sp, #52]	; 0x34
 801818a:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801818e:	d01e      	beq.n	80181ce <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x5da>
 8018190:	9c09      	ldr	r4, [sp, #36]	; 0x24
 8018192:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 8018196:	fb09 fe0e 	mul.w	lr, r9, lr
 801819a:	f404 477f 	and.w	r7, r4, #65280	; 0xff00
 801819e:	fb09 f907 	mul.w	r9, r9, r7
 80181a2:	ea4f 2c1e 	mov.w	ip, lr, lsr #8
 80181a6:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80181aa:	f10e 1e01 	add.w	lr, lr, #65537	; 0x10001
 80181ae:	f509 7780 	add.w	r7, r9, #256	; 0x100
 80181b2:	44f4      	add	ip, lr
 80181b4:	eb07 2919 	add.w	r9, r7, r9, lsr #8
 80181b8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80181bc:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80181c0:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80181c4:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 80181c8:	ea4c 0409 	orr.w	r4, ip, r9
 80181cc:	9409      	str	r4, [sp, #36]	; 0x24
 80181ce:	2eff      	cmp	r6, #255	; 0xff
 80181d0:	d01c      	beq.n	801820c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x618>
 80181d2:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 80181d4:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 80181d8:	fb06 fe0e 	mul.w	lr, r6, lr
 80181dc:	f404 477f 	and.w	r7, r4, #65280	; 0xff00
 80181e0:	437e      	muls	r6, r7
 80181e2:	ea4f 2c1e 	mov.w	ip, lr, lsr #8
 80181e6:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80181ea:	f10e 1e01 	add.w	lr, lr, #65537	; 0x10001
 80181ee:	f506 7780 	add.w	r7, r6, #256	; 0x100
 80181f2:	44f4      	add	ip, lr
 80181f4:	eb07 2616 	add.w	r6, r7, r6, lsr #8
 80181f8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80181fc:	0a36      	lsrs	r6, r6, #8
 80181fe:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8018202:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8018206:	ea4c 0406 	orr.w	r4, ip, r6
 801820a:	940f      	str	r4, [sp, #60]	; 0x3c
 801820c:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801820e:	f004 16ff 	and.w	r6, r4, #16711935	; 0xff00ff
 8018212:	9c09      	ldr	r4, [sp, #36]	; 0x24
 8018214:	f003 17ff 	and.w	r7, r3, #16711935	; 0xff00ff
 8018218:	fb08 f606 	mul.w	r6, r8, r6
 801821c:	fb01 6607 	mla	r6, r1, r7, r6
 8018220:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8018224:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8018226:	fb00 6607 	mla	r6, r0, r7, r6
 801822a:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801822e:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8018230:	fb0b 6607 	mla	r6, fp, r7, r6
 8018234:	f404 477f 	and.w	r7, r4, #65280	; 0xff00
 8018238:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801823c:	fb08 f807 	mul.w	r8, r8, r7
 8018240:	fb01 8303 	mla	r3, r1, r3, r8
 8018244:	9909      	ldr	r1, [sp, #36]	; 0x24
 8018246:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
 801824a:	990f      	ldr	r1, [sp, #60]	; 0x3c
 801824c:	fb00 330c 	mla	r3, r0, ip, r3
 8018250:	f401 4e7f 	and.w	lr, r1, #65280	; 0xff00
 8018254:	fb0b 3e0e 	mla	lr, fp, lr, r3
 8018258:	0a36      	lsrs	r6, r6, #8
 801825a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801825e:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8018262:	f40e 4e7f 	and.w	lr, lr, #65280	; 0xff00
 8018266:	ea46 060e 	orr.w	r6, r6, lr
 801826a:	2aff      	cmp	r2, #255	; 0xff
 801826c:	ea4f 2316 	mov.w	r3, r6, lsr #8
 8018270:	d04a      	beq.n	8018308 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x714>
 8018272:	f8ba 1000 	ldrh.w	r1, [sl]
 8018276:	43d2      	mvns	r2, r2
 8018278:	120f      	asrs	r7, r1, #8
 801827a:	fa5f fc82 	uxtb.w	ip, r2
 801827e:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8018282:	fb07 f70c 	mul.w	r7, r7, ip
 8018286:	10c8      	asrs	r0, r1, #3
 8018288:	00ca      	lsls	r2, r1, #3
 801828a:	1c79      	adds	r1, r7, #1
 801828c:	eb01 2117 	add.w	r1, r1, r7, lsr #8
 8018290:	0c37      	lsrs	r7, r6, #16
 8018292:	eb07 2711 	add.w	r7, r7, r1, lsr #8
 8018296:	b2d2      	uxtb	r2, r2
 8018298:	4925      	ldr	r1, [pc, #148]	; (8018330 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x73c>)
 801829a:	fb02 f20c 	mul.w	r2, r2, ip
 801829e:	ea01 2707 	and.w	r7, r1, r7, lsl #8
 80182a2:	1c51      	adds	r1, r2, #1
 80182a4:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 80182a8:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 80182ac:	b2f6      	uxtb	r6, r6
 80182ae:	fb00 f00c 	mul.w	r0, r0, ip
 80182b2:	eb06 2612 	add.w	r6, r6, r2, lsr #8
 80182b6:	ea47 07d6 	orr.w	r7, r7, r6, lsr #3
 80182ba:	1c46      	adds	r6, r0, #1
 80182bc:	eb06 2010 	add.w	r0, r6, r0, lsr #8
 80182c0:	b2de      	uxtb	r6, r3
 80182c2:	eb06 2610 	add.w	r6, r6, r0, lsr #8
 80182c6:	00f6      	lsls	r6, r6, #3
 80182c8:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 80182cc:	4337      	orrs	r7, r6
 80182ce:	f8aa 7000 	strh.w	r7, [sl]
 80182d2:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 80182d4:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 80182d6:	441a      	add	r2, r3
 80182d8:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80182da:	9229      	str	r2, [sp, #164]	; 0xa4
 80182dc:	441d      	add	r5, r3
 80182de:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 80182e0:	3b01      	subs	r3, #1
 80182e2:	f10a 0a02 	add.w	sl, sl, #2
 80182e6:	9313      	str	r3, [sp, #76]	; 0x4c
 80182e8:	e4e7      	b.n	8017cba <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xc6>
 80182ea:	b150      	cbz	r0, 8018302 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x70e>
 80182ec:	990e      	ldr	r1, [sp, #56]	; 0x38
 80182ee:	5871      	ldr	r1, [r6, r1]
 80182f0:	9109      	str	r1, [sp, #36]	; 0x24
 80182f2:	ea4f 6911 	mov.w	r9, r1, lsr #24
 80182f6:	26ff      	movs	r6, #255	; 0xff
 80182f8:	46b6      	mov	lr, r6
 80182fa:	e6ea      	b.n	80180d2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4de>
 80182fc:	26ff      	movs	r6, #255	; 0xff
 80182fe:	46b1      	mov	r9, r6
 8018300:	e6e7      	b.n	80180d2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4de>
 8018302:	26ff      	movs	r6, #255	; 0xff
 8018304:	46b1      	mov	r9, r6
 8018306:	e7f7      	b.n	80182f8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x704>
 8018308:	0972      	lsrs	r2, r6, #5
 801830a:	f423 63ff 	bic.w	r3, r3, #2040	; 0x7f8
 801830e:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8018312:	f023 0307 	bic.w	r3, r3, #7
 8018316:	4313      	orrs	r3, r2
 8018318:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 801831c:	431e      	orrs	r6, r3
 801831e:	f8aa 6000 	strh.w	r6, [sl]
 8018322:	e7d6      	b.n	80182d2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6de>
 8018324:	b017      	add	sp, #92	; 0x5c
 8018326:	ecbd 8b08 	vpop	{d8-d11}
 801832a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801832e:	bf00      	nop
 8018330:	fffff800 	.word	0xfffff800

08018334 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>:
 8018334:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8018338:	e9dd c40a 	ldrd	ip, r4, [sp, #40]	; 0x28
 801833c:	2c00      	cmp	r4, #0
 801833e:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 8018342:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 8018346:	f89d 5030 	ldrb.w	r5, [sp, #48]	; 0x30
 801834a:	f89d 7034 	ldrb.w	r7, [sp, #52]	; 0x34
 801834e:	fb04 ce03 	mla	lr, r4, r3, ip
 8018352:	db60      	blt.n	8018416 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xe2>
 8018354:	45a1      	cmp	r9, r4
 8018356:	dd5e      	ble.n	8018416 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xe2>
 8018358:	f1bc 0f00 	cmp.w	ip, #0
 801835c:	db59      	blt.n	8018412 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xde>
 801835e:	45e0      	cmp	r8, ip
 8018360:	dd57      	ble.n	8018412 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xde>
 8018362:	ea4f 005e 	mov.w	r0, lr, lsr #1
 8018366:	f01e 0f01 	tst.w	lr, #1
 801836a:	5c16      	ldrb	r6, [r2, r0]
 801836c:	bf0c      	ite	eq
 801836e:	f006 060f 	andeq.w	r6, r6, #15
 8018372:	1136      	asrne	r6, r6, #4
 8018374:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 8018378:	b2f6      	uxtb	r6, r6
 801837a:	f11c 0001 	adds.w	r0, ip, #1
 801837e:	d44d      	bmi.n	801841c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xe8>
 8018380:	4580      	cmp	r8, r0
 8018382:	dd4b      	ble.n	801841c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xe8>
 8018384:	2d00      	cmp	r5, #0
 8018386:	d04b      	beq.n	8018420 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xec>
 8018388:	f10e 0a01 	add.w	sl, lr, #1
 801838c:	ea4f 005a 	mov.w	r0, sl, lsr #1
 8018390:	f01a 0f01 	tst.w	sl, #1
 8018394:	5c10      	ldrb	r0, [r2, r0]
 8018396:	bf0c      	ite	eq
 8018398:	f000 000f 	andeq.w	r0, r0, #15
 801839c:	1100      	asrne	r0, r0, #4
 801839e:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 80183a2:	b2c0      	uxtb	r0, r0
 80183a4:	3401      	adds	r4, #1
 80183a6:	d43f      	bmi.n	8018428 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xf4>
 80183a8:	45a1      	cmp	r9, r4
 80183aa:	dd3d      	ble.n	8018428 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xf4>
 80183ac:	2f00      	cmp	r7, #0
 80183ae:	f000 809e 	beq.w	80184ee <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1ba>
 80183b2:	f1bc 0f00 	cmp.w	ip, #0
 80183b6:	db35      	blt.n	8018424 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xf0>
 80183b8:	45e0      	cmp	r8, ip
 80183ba:	dd33      	ble.n	8018424 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xf0>
 80183bc:	eb03 090e 	add.w	r9, r3, lr
 80183c0:	ea4f 0459 	mov.w	r4, r9, lsr #1
 80183c4:	f019 0f01 	tst.w	r9, #1
 80183c8:	5d14      	ldrb	r4, [r2, r4]
 80183ca:	bf0c      	ite	eq
 80183cc:	f004 040f 	andeq.w	r4, r4, #15
 80183d0:	1124      	asrne	r4, r4, #4
 80183d2:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 80183d6:	b2e4      	uxtb	r4, r4
 80183d8:	f11c 0c01 	adds.w	ip, ip, #1
 80183dc:	d427      	bmi.n	801842e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xfa>
 80183de:	45e0      	cmp	r8, ip
 80183e0:	dd25      	ble.n	801842e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xfa>
 80183e2:	b335      	cbz	r5, 8018432 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xfe>
 80183e4:	3301      	adds	r3, #1
 80183e6:	449e      	add	lr, r3
 80183e8:	ea4f 035e 	mov.w	r3, lr, lsr #1
 80183ec:	f01e 0f01 	tst.w	lr, #1
 80183f0:	5cd2      	ldrb	r2, [r2, r3]
 80183f2:	bf0c      	ite	eq
 80183f4:	f002 020f 	andeq.w	r2, r2, #15
 80183f8:	1112      	asrne	r2, r2, #4
 80183fa:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 80183fe:	b2d3      	uxtb	r3, r2
 8018400:	2d0f      	cmp	r5, #15
 8018402:	d917      	bls.n	8018434 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x100>
 8018404:	4b3c      	ldr	r3, [pc, #240]	; (80184f8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1c4>)
 8018406:	4a3d      	ldr	r2, [pc, #244]	; (80184fc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1c8>)
 8018408:	483d      	ldr	r0, [pc, #244]	; (8018500 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1cc>)
 801840a:	f240 210d 	movw	r1, #525	; 0x20d
 801840e:	f000 fffd 	bl	801940c <__assert_func>
 8018412:	2600      	movs	r6, #0
 8018414:	e7b1      	b.n	801837a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x46>
 8018416:	2000      	movs	r0, #0
 8018418:	4606      	mov	r6, r0
 801841a:	e7c3      	b.n	80183a4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x70>
 801841c:	2000      	movs	r0, #0
 801841e:	e7c1      	b.n	80183a4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x70>
 8018420:	4628      	mov	r0, r5
 8018422:	e7bf      	b.n	80183a4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x70>
 8018424:	2400      	movs	r4, #0
 8018426:	e7d7      	b.n	80183d8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xa4>
 8018428:	2300      	movs	r3, #0
 801842a:	461c      	mov	r4, r3
 801842c:	e7e8      	b.n	8018400 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xcc>
 801842e:	2300      	movs	r3, #0
 8018430:	e7e6      	b.n	8018400 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xcc>
 8018432:	462b      	mov	r3, r5
 8018434:	2f0f      	cmp	r7, #15
 8018436:	d8e5      	bhi.n	8018404 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xd0>
 8018438:	b2ad      	uxth	r5, r5
 801843a:	b2bf      	uxth	r7, r7
 801843c:	fb05 fc07 	mul.w	ip, r5, r7
 8018440:	ebcc 1707 	rsb	r7, ip, r7, lsl #4
 8018444:	012d      	lsls	r5, r5, #4
 8018446:	b2bf      	uxth	r7, r7
 8018448:	f5c5 7280 	rsb	r2, r5, #256	; 0x100
 801844c:	eba5 050c 	sub.w	r5, r5, ip
 8018450:	1bd2      	subs	r2, r2, r7
 8018452:	b2ad      	uxth	r5, r5
 8018454:	b292      	uxth	r2, r2
 8018456:	4368      	muls	r0, r5
 8018458:	fb06 0002 	mla	r0, r6, r2, r0
 801845c:	fb07 0404 	mla	r4, r7, r4, r0
 8018460:	fb0c 4303 	mla	r3, ip, r3, r4
 8018464:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8018468:	2b00      	cmp	r3, #0
 801846a:	d03e      	beq.n	80184ea <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1b6>
 801846c:	f89d 0038 	ldrb.w	r0, [sp, #56]	; 0x38
 8018470:	4a24      	ldr	r2, [pc, #144]	; (8018504 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1d0>)
 8018472:	4343      	muls	r3, r0
 8018474:	1c58      	adds	r0, r3, #1
 8018476:	6816      	ldr	r6, [r2, #0]
 8018478:	880a      	ldrh	r2, [r1, #0]
 801847a:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 801847e:	1200      	asrs	r0, r0, #8
 8018480:	b284      	uxth	r4, r0
 8018482:	1215      	asrs	r5, r2, #8
 8018484:	43c0      	mvns	r0, r0
 8018486:	b2c3      	uxtb	r3, r0
 8018488:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801848c:	0a30      	lsrs	r0, r6, #8
 801848e:	fb15 f503 	smulbb	r5, r5, r3
 8018492:	10d7      	asrs	r7, r2, #3
 8018494:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8018498:	fb00 5004 	mla	r0, r0, r4, r5
 801849c:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 80184a0:	08f5      	lsrs	r5, r6, #3
 80184a2:	00d2      	lsls	r2, r2, #3
 80184a4:	fb17 f703 	smulbb	r7, r7, r3
 80184a8:	b2d2      	uxtb	r2, r2
 80184aa:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 80184ae:	00f6      	lsls	r6, r6, #3
 80184b0:	fb05 7504 	mla	r5, r5, r4, r7
 80184b4:	fb12 f303 	smulbb	r3, r2, r3
 80184b8:	b2f6      	uxtb	r6, r6
 80184ba:	fb06 3304 	mla	r3, r6, r4, r3
 80184be:	b2ad      	uxth	r5, r5
 80184c0:	b29a      	uxth	r2, r3
 80184c2:	b280      	uxth	r0, r0
 80184c4:	1c6b      	adds	r3, r5, #1
 80184c6:	eb03 2315 	add.w	r3, r3, r5, lsr #8
 80184ca:	1c44      	adds	r4, r0, #1
 80184cc:	095b      	lsrs	r3, r3, #5
 80184ce:	eb04 2010 	add.w	r0, r4, r0, lsr #8
 80184d2:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 80184d6:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80184da:	4303      	orrs	r3, r0
 80184dc:	1c50      	adds	r0, r2, #1
 80184de:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 80184e2:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 80184e6:	4313      	orrs	r3, r2
 80184e8:	800b      	strh	r3, [r1, #0]
 80184ea:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80184ee:	2d0f      	cmp	r5, #15
 80184f0:	d888      	bhi.n	8018404 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xd0>
 80184f2:	463b      	mov	r3, r7
 80184f4:	463c      	mov	r4, r7
 80184f6:	e79f      	b.n	8018438 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x104>
 80184f8:	0801d135 	.word	0x0801d135
 80184fc:	0801d68d 	.word	0x0801d68d
 8018500:	0801d1bd 	.word	0x0801d1bd
 8018504:	20012190 	.word	0x20012190

08018508 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 8018508:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801850c:	ed2d 8b08 	vpush	{d8-d11}
 8018510:	b099      	sub	sp, #100	; 0x64
 8018512:	e9dd 462b 	ldrd	r4, r6, [sp, #172]	; 0xac
 8018516:	9309      	str	r3, [sp, #36]	; 0x24
 8018518:	f9bd 30c8 	ldrsh.w	r3, [sp, #200]	; 0xc8
 801851c:	930a      	str	r3, [sp, #40]	; 0x28
 801851e:	f9bd 30cc 	ldrsh.w	r3, [sp, #204]	; 0xcc
 8018522:	9216      	str	r2, [sp, #88]	; 0x58
 8018524:	930b      	str	r3, [sp, #44]	; 0x2c
 8018526:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 8018528:	f89d 30d4 	ldrb.w	r3, [sp, #212]	; 0xd4
 801852c:	910f      	str	r1, [sp, #60]	; 0x3c
 801852e:	9310      	str	r3, [sp, #64]	; 0x40
 8018530:	e9dd 1330 	ldrd	r1, r3, [sp, #192]	; 0xc0
 8018534:	9017      	str	r0, [sp, #92]	; 0x5c
 8018536:	6850      	ldr	r0, [r2, #4]
 8018538:	6812      	ldr	r2, [r2, #0]
 801853a:	fb00 1303 	mla	r3, r0, r3, r1
 801853e:	eb02 0a43 	add.w	sl, r2, r3, lsl #1
 8018542:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8018544:	3301      	adds	r3, #1
 8018546:	f023 0301 	bic.w	r3, r3, #1
 801854a:	930c      	str	r3, [sp, #48]	; 0x30
 801854c:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 801854e:	681f      	ldr	r7, [r3, #0]
 8018550:	eeb0 aa40 	vmov.f32	s20, s0
 8018554:	eef0 9a60 	vmov.f32	s19, s1
 8018558:	eeb0 9a41 	vmov.f32	s18, s2
 801855c:	eeb0 8a62 	vmov.f32	s16, s5
 8018560:	eef0 8a43 	vmov.f32	s17, s6
 8018564:	eef0 ba44 	vmov.f32	s23, s8
 8018568:	eeb0 ba64 	vmov.f32	s22, s9
 801856c:	eef0 aa45 	vmov.f32	s21, s10
 8018570:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8018572:	2b00      	cmp	r3, #0
 8018574:	dc03      	bgt.n	801857e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x76>
 8018576:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8018578:	2b00      	cmp	r3, #0
 801857a:	f340 8267 	ble.w	8018a4c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x544>
 801857e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8018580:	2b00      	cmp	r3, #0
 8018582:	f340 811e 	ble.w	80187c2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2ba>
 8018586:	1422      	asrs	r2, r4, #16
 8018588:	ea4f 4326 	mov.w	r3, r6, asr #16
 801858c:	d42d      	bmi.n	80185ea <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe2>
 801858e:	980a      	ldr	r0, [sp, #40]	; 0x28
 8018590:	1c51      	adds	r1, r2, #1
 8018592:	4288      	cmp	r0, r1
 8018594:	dd2c      	ble.n	80185f0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe8>
 8018596:	2b00      	cmp	r3, #0
 8018598:	db2a      	blt.n	80185f0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe8>
 801859a:	980b      	ldr	r0, [sp, #44]	; 0x2c
 801859c:	1c59      	adds	r1, r3, #1
 801859e:	4288      	cmp	r0, r1
 80185a0:	dd26      	ble.n	80185f0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe8>
 80185a2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80185a4:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 80185a6:	3b01      	subs	r3, #1
 80185a8:	fb02 4203 	mla	r2, r2, r3, r4
 80185ac:	1412      	asrs	r2, r2, #16
 80185ae:	d42a      	bmi.n	8018606 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfe>
 80185b0:	990a      	ldr	r1, [sp, #40]	; 0x28
 80185b2:	3201      	adds	r2, #1
 80185b4:	4291      	cmp	r1, r2
 80185b6:	dd26      	ble.n	8018606 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfe>
 80185b8:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
 80185ba:	fb02 6303 	mla	r3, r2, r3, r6
 80185be:	141b      	asrs	r3, r3, #16
 80185c0:	d421      	bmi.n	8018606 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfe>
 80185c2:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80185c4:	3301      	adds	r3, #1
 80185c6:	429a      	cmp	r2, r3
 80185c8:	dd1d      	ble.n	8018606 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfe>
 80185ca:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	; 0x30
 80185ce:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 80185d2:	9311      	str	r3, [sp, #68]	; 0x44
 80185d4:	46d1      	mov	r9, sl
 80185d6:	f1bb 0f00 	cmp.w	fp, #0
 80185da:	f300 8162 	bgt.w	80188a2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x39a>
 80185de:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80185e0:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 80185e4:	eb0a 0a45 	add.w	sl, sl, r5, lsl #1
 80185e8:	e0ed      	b.n	80187c6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2be>
 80185ea:	1c51      	adds	r1, r2, #1
 80185ec:	f040 80df 	bne.w	80187ae <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2a6>
 80185f0:	990a      	ldr	r1, [sp, #40]	; 0x28
 80185f2:	4291      	cmp	r1, r2
 80185f4:	f340 80db 	ble.w	80187ae <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2a6>
 80185f8:	1c5a      	adds	r2, r3, #1
 80185fa:	f2c0 80d8 	blt.w	80187ae <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2a6>
 80185fe:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8018600:	4293      	cmp	r3, r2
 8018602:	f280 80d4 	bge.w	80187ae <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2a6>
 8018606:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	; 0x30
 801860a:	f8dd 9024 	ldr.w	r9, [sp, #36]	; 0x24
 801860e:	9311      	str	r3, [sp, #68]	; 0x44
 8018610:	46d0      	mov	r8, sl
 8018612:	f1b9 0f00 	cmp.w	r9, #0
 8018616:	dde2      	ble.n	80185de <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xd6>
 8018618:	1420      	asrs	r0, r4, #16
 801861a:	ea4f 4326 	mov.w	r3, r6, asr #16
 801861e:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8018622:	f3c6 3103 	ubfx	r1, r6, #12, #4
 8018626:	f100 8121 	bmi.w	801886c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x364>
 801862a:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 801862c:	f100 0c01 	add.w	ip, r0, #1
 8018630:	4565      	cmp	r5, ip
 8018632:	f340 811d 	ble.w	8018870 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x368>
 8018636:	2b00      	cmp	r3, #0
 8018638:	f2c0 811a 	blt.w	8018870 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x368>
 801863c:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 801863e:	f103 0c01 	add.w	ip, r3, #1
 8018642:	4565      	cmp	r5, ip
 8018644:	f340 8114 	ble.w	8018870 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x368>
 8018648:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801864a:	fb03 0305 	mla	r3, r3, r5, r0
 801864e:	0858      	lsrs	r0, r3, #1
 8018650:	07dd      	lsls	r5, r3, #31
 8018652:	5c38      	ldrb	r0, [r7, r0]
 8018654:	bf54      	ite	pl
 8018656:	f000 000f 	andpl.w	r0, r0, #15
 801865a:	1100      	asrmi	r0, r0, #4
 801865c:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 8018660:	b2c0      	uxtb	r0, r0
 8018662:	2a00      	cmp	r2, #0
 8018664:	f000 80ee 	beq.w	8018844 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x33c>
 8018668:	f103 0e01 	add.w	lr, r3, #1
 801866c:	ea4f 0c5e 	mov.w	ip, lr, lsr #1
 8018670:	f01e 0f01 	tst.w	lr, #1
 8018674:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8018678:	bf0c      	ite	eq
 801867a:	f00c 0c0f 	andeq.w	ip, ip, #15
 801867e:	ea4f 1c2c 	movne.w	ip, ip, asr #4
 8018682:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8018686:	fa5f f58c 	uxtb.w	r5, ip
 801868a:	9512      	str	r5, [sp, #72]	; 0x48
 801868c:	b1f9      	cbz	r1, 80186ce <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1c6>
 801868e:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8018690:	442b      	add	r3, r5
 8018692:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 8018696:	07dd      	lsls	r5, r3, #31
 8018698:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801869c:	bf54      	ite	pl
 801869e:	f00c 0c0f 	andpl.w	ip, ip, #15
 80186a2:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 80186a6:	3301      	adds	r3, #1
 80186a8:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 80186ac:	fa5f f58c 	uxtb.w	r5, ip
 80186b0:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 80186b4:	950d      	str	r5, [sp, #52]	; 0x34
 80186b6:	f817 c00c 	ldrb.w	ip, [r7, ip]
 80186ba:	07dd      	lsls	r5, r3, #31
 80186bc:	bf54      	ite	pl
 80186be:	f00c 030f 	andpl.w	r3, ip, #15
 80186c2:	ea4f 132c 	movmi.w	r3, ip, asr #4
 80186c6:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 80186ca:	b2db      	uxtb	r3, r3
 80186cc:	9313      	str	r3, [sp, #76]	; 0x4c
 80186ce:	b292      	uxth	r2, r2
 80186d0:	b289      	uxth	r1, r1
 80186d2:	fb02 f301 	mul.w	r3, r2, r1
 80186d6:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 80186da:	0112      	lsls	r2, r2, #4
 80186dc:	b289      	uxth	r1, r1
 80186de:	f5c2 7c80 	rsb	ip, r2, #256	; 0x100
 80186e2:	9d12      	ldr	r5, [sp, #72]	; 0x48
 80186e4:	1ad2      	subs	r2, r2, r3
 80186e6:	ebac 0c01 	sub.w	ip, ip, r1
 80186ea:	b292      	uxth	r2, r2
 80186ec:	436a      	muls	r2, r5
 80186ee:	fa1f fc8c 	uxth.w	ip, ip
 80186f2:	fb00 200c 	mla	r0, r0, ip, r2
 80186f6:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 80186f8:	fb01 0102 	mla	r1, r1, r2, r0
 80186fc:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80186fe:	fb03 1302 	mla	r3, r3, r2, r1
 8018702:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8018706:	2b00      	cmp	r3, #0
 8018708:	d048      	beq.n	801879c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x294>
 801870a:	9910      	ldr	r1, [sp, #64]	; 0x40
 801870c:	4ace      	ldr	r2, [pc, #824]	; (8018a48 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x540>)
 801870e:	434b      	muls	r3, r1
 8018710:	1c59      	adds	r1, r3, #1
 8018712:	f8d2 e000 	ldr.w	lr, [r2]
 8018716:	f8b8 2000 	ldrh.w	r2, [r8]
 801871a:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 801871e:	121b      	asrs	r3, r3, #8
 8018720:	b299      	uxth	r1, r3
 8018722:	ea4f 2c22 	mov.w	ip, r2, asr #8
 8018726:	43db      	mvns	r3, r3
 8018728:	b2db      	uxtb	r3, r3
 801872a:	ea4f 201e 	mov.w	r0, lr, lsr #8
 801872e:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8018732:	fb1c fc03 	smulbb	ip, ip, r3
 8018736:	ea4f 0be2 	mov.w	fp, r2, asr #3
 801873a:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801873e:	fb00 c001 	mla	r0, r0, r1, ip
 8018742:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 8018746:	ea4f 0cde 	mov.w	ip, lr, lsr #3
 801874a:	fb1b fb03 	smulbb	fp, fp, r3
 801874e:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 8018752:	00d2      	lsls	r2, r2, #3
 8018754:	fb0c bc01 	mla	ip, ip, r1, fp
 8018758:	b2d2      	uxtb	r2, r2
 801875a:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801875e:	fb12 f303 	smulbb	r3, r2, r3
 8018762:	fa1f fc8c 	uxth.w	ip, ip
 8018766:	fa5f fe8e 	uxtb.w	lr, lr
 801876a:	b280      	uxth	r0, r0
 801876c:	fb0e 3101 	mla	r1, lr, r1, r3
 8018770:	f10c 0201 	add.w	r2, ip, #1
 8018774:	b289      	uxth	r1, r1
 8018776:	1c43      	adds	r3, r0, #1
 8018778:	eb02 221c 	add.w	r2, r2, ip, lsr #8
 801877c:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8018780:	0952      	lsrs	r2, r2, #5
 8018782:	1c4b      	adds	r3, r1, #1
 8018784:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8018788:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 801878c:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8018790:	4310      	orrs	r0, r2
 8018792:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 8018796:	4308      	orrs	r0, r1
 8018798:	f8a8 0000 	strh.w	r0, [r8]
 801879c:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 801879e:	441c      	add	r4, r3
 80187a0:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 80187a2:	f108 0802 	add.w	r8, r8, #2
 80187a6:	441e      	add	r6, r3
 80187a8:	f109 39ff 	add.w	r9, r9, #4294967295
 80187ac:	e731      	b.n	8018612 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x10a>
 80187ae:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 80187b0:	441c      	add	r4, r3
 80187b2:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 80187b4:	441e      	add	r6, r3
 80187b6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80187b8:	3b01      	subs	r3, #1
 80187ba:	9309      	str	r3, [sp, #36]	; 0x24
 80187bc:	f10a 0a02 	add.w	sl, sl, #2
 80187c0:	e6dd      	b.n	801857e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x76>
 80187c2:	f47f aeee 	bne.w	80185a2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9a>
 80187c6:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80187c8:	2b00      	cmp	r3, #0
 80187ca:	f340 813f 	ble.w	8018a4c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x544>
 80187ce:	ee3a aa2b 	vadd.f32	s20, s20, s23
 80187d2:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80187d6:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 80187da:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80187dc:	ee79 9a8b 	vadd.f32	s19, s19, s22
 80187e0:	ee39 9a2a 	vadd.f32	s18, s18, s21
 80187e4:	ee29 7aa7 	vmul.f32	s14, s19, s15
 80187e8:	eef0 6a48 	vmov.f32	s13, s16
 80187ec:	ee69 7a27 	vmul.f32	s15, s18, s15
 80187f0:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80187f4:	ee37 8a48 	vsub.f32	s16, s14, s16
 80187f8:	ee16 4a90 	vmov	r4, s13
 80187fc:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8018800:	eef0 6a68 	vmov.f32	s13, s17
 8018804:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8018808:	ee18 2a10 	vmov	r2, s16
 801880c:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8018810:	fb92 f3f3 	sdiv	r3, r2, r3
 8018814:	ee18 2a90 	vmov	r2, s17
 8018818:	932d      	str	r3, [sp, #180]	; 0xb4
 801881a:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801881c:	fb92 f3f3 	sdiv	r3, r2, r3
 8018820:	932e      	str	r3, [sp, #184]	; 0xb8
 8018822:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8018824:	9a16      	ldr	r2, [sp, #88]	; 0x58
 8018826:	3b01      	subs	r3, #1
 8018828:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801882c:	930f      	str	r3, [sp, #60]	; 0x3c
 801882e:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8018830:	bf08      	it	eq
 8018832:	4613      	moveq	r3, r2
 8018834:	ee16 6a90 	vmov	r6, s13
 8018838:	9309      	str	r3, [sp, #36]	; 0x24
 801883a:	eef0 8a67 	vmov.f32	s17, s15
 801883e:	eeb0 8a47 	vmov.f32	s16, s14
 8018842:	e695      	b.n	8018570 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x68>
 8018844:	2900      	cmp	r1, #0
 8018846:	f43f af42 	beq.w	80186ce <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1c6>
 801884a:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801884c:	442b      	add	r3, r5
 801884e:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 8018852:	07db      	lsls	r3, r3, #31
 8018854:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8018858:	bf54      	ite	pl
 801885a:	f00c 030f 	andpl.w	r3, ip, #15
 801885e:	ea4f 132c 	movmi.w	r3, ip, asr #4
 8018862:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8018866:	b2db      	uxtb	r3, r3
 8018868:	930d      	str	r3, [sp, #52]	; 0x34
 801886a:	e730      	b.n	80186ce <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1c6>
 801886c:	1c45      	adds	r5, r0, #1
 801886e:	d195      	bne.n	801879c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x294>
 8018870:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 8018872:	4285      	cmp	r5, r0
 8018874:	dd92      	ble.n	801879c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x294>
 8018876:	1c5d      	adds	r5, r3, #1
 8018878:	db90      	blt.n	801879c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x294>
 801887a:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 801887c:	429d      	cmp	r5, r3
 801887e:	dd8d      	ble.n	801879c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x294>
 8018880:	e9cd 3203 	strd	r3, r2, [sp, #12]
 8018884:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8018886:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8018888:	9301      	str	r3, [sp, #4]
 801888a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801888c:	9002      	str	r0, [sp, #8]
 801888e:	e9cd 1505 	strd	r1, r5, [sp, #20]
 8018892:	9300      	str	r3, [sp, #0]
 8018894:	463a      	mov	r2, r7
 8018896:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8018898:	9817      	ldr	r0, [sp, #92]	; 0x5c
 801889a:	4641      	mov	r1, r8
 801889c:	f7ff fd4a 	bl	8018334 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>
 80188a0:	e77c      	b.n	801879c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x294>
 80188a2:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 80188a4:	1422      	asrs	r2, r4, #16
 80188a6:	1433      	asrs	r3, r6, #16
 80188a8:	fb05 2303 	mla	r3, r5, r3, r2
 80188ac:	085a      	lsrs	r2, r3, #1
 80188ae:	07dd      	lsls	r5, r3, #31
 80188b0:	5cba      	ldrb	r2, [r7, r2]
 80188b2:	bf54      	ite	pl
 80188b4:	f002 020f 	andpl.w	r2, r2, #15
 80188b8:	1112      	asrmi	r2, r2, #4
 80188ba:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 80188be:	f3c4 3103 	ubfx	r1, r4, #12, #4
 80188c2:	f3c6 3003 	ubfx	r0, r6, #12, #4
 80188c6:	b2d2      	uxtb	r2, r2
 80188c8:	2900      	cmp	r1, #0
 80188ca:	f000 80a8 	beq.w	8018a1e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x516>
 80188ce:	f103 0e01 	add.w	lr, r3, #1
 80188d2:	ea4f 0c5e 	mov.w	ip, lr, lsr #1
 80188d6:	f01e 0f01 	tst.w	lr, #1
 80188da:	f817 c00c 	ldrb.w	ip, [r7, ip]
 80188de:	bf0c      	ite	eq
 80188e0:	f00c 0c0f 	andeq.w	ip, ip, #15
 80188e4:	ea4f 1c2c 	movne.w	ip, ip, asr #4
 80188e8:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 80188ec:	fa5f f58c 	uxtb.w	r5, ip
 80188f0:	9514      	str	r5, [sp, #80]	; 0x50
 80188f2:	b300      	cbz	r0, 8018936 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x42e>
 80188f4:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80188f6:	442b      	add	r3, r5
 80188f8:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 80188fc:	07dd      	lsls	r5, r3, #31
 80188fe:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8018902:	bf54      	ite	pl
 8018904:	f00c 0c0f 	andpl.w	ip, ip, #15
 8018908:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801890c:	3301      	adds	r3, #1
 801890e:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8018912:	fa5f f58c 	uxtb.w	r5, ip
 8018916:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 801891a:	950e      	str	r5, [sp, #56]	; 0x38
 801891c:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8018920:	07dd      	lsls	r5, r3, #31
 8018922:	bf54      	ite	pl
 8018924:	f00c 0c0f 	andpl.w	ip, ip, #15
 8018928:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801892c:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8018930:	fa5f f38c 	uxtb.w	r3, ip
 8018934:	9315      	str	r3, [sp, #84]	; 0x54
 8018936:	b289      	uxth	r1, r1
 8018938:	b280      	uxth	r0, r0
 801893a:	fb01 f300 	mul.w	r3, r1, r0
 801893e:	ebc3 1000 	rsb	r0, r3, r0, lsl #4
 8018942:	0109      	lsls	r1, r1, #4
 8018944:	b280      	uxth	r0, r0
 8018946:	f5c1 7c80 	rsb	ip, r1, #256	; 0x100
 801894a:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801894c:	1ac9      	subs	r1, r1, r3
 801894e:	ebac 0c00 	sub.w	ip, ip, r0
 8018952:	b289      	uxth	r1, r1
 8018954:	4369      	muls	r1, r5
 8018956:	fa1f fc8c 	uxth.w	ip, ip
 801895a:	fb02 120c 	mla	r2, r2, ip, r1
 801895e:	990e      	ldr	r1, [sp, #56]	; 0x38
 8018960:	fb00 2001 	mla	r0, r0, r1, r2
 8018964:	9a15      	ldr	r2, [sp, #84]	; 0x54
 8018966:	fb03 0302 	mla	r3, r3, r2, r0
 801896a:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801896e:	2b00      	cmp	r3, #0
 8018970:	d04c      	beq.n	8018a0c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x504>
 8018972:	9910      	ldr	r1, [sp, #64]	; 0x40
 8018974:	4a34      	ldr	r2, [pc, #208]	; (8018a48 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x540>)
 8018976:	434b      	muls	r3, r1
 8018978:	1c59      	adds	r1, r3, #1
 801897a:	f8d2 e000 	ldr.w	lr, [r2]
 801897e:	f8b9 2000 	ldrh.w	r2, [r9]
 8018982:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 8018986:	121b      	asrs	r3, r3, #8
 8018988:	b299      	uxth	r1, r3
 801898a:	ea4f 2c22 	mov.w	ip, r2, asr #8
 801898e:	43db      	mvns	r3, r3
 8018990:	b2db      	uxtb	r3, r3
 8018992:	ea4f 201e 	mov.w	r0, lr, lsr #8
 8018996:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801899a:	fb1c fc03 	smulbb	ip, ip, r3
 801899e:	ea4f 08e2 	mov.w	r8, r2, asr #3
 80189a2:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 80189a6:	fb00 c001 	mla	r0, r0, r1, ip
 80189aa:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 80189ae:	ea4f 0cde 	mov.w	ip, lr, lsr #3
 80189b2:	fb18 f803 	smulbb	r8, r8, r3
 80189b6:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 80189ba:	00d2      	lsls	r2, r2, #3
 80189bc:	fb0c 8c01 	mla	ip, ip, r1, r8
 80189c0:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80189c4:	b2d2      	uxtb	r2, r2
 80189c6:	fa1f fc8c 	uxth.w	ip, ip
 80189ca:	fa5f fe8e 	uxtb.w	lr, lr
 80189ce:	fb12 f203 	smulbb	r2, r2, r3
 80189d2:	b280      	uxth	r0, r0
 80189d4:	fb0e 2201 	mla	r2, lr, r1, r2
 80189d8:	f10c 0801 	add.w	r8, ip, #1
 80189dc:	b292      	uxth	r2, r2
 80189de:	eb08 2c1c 	add.w	ip, r8, ip, lsr #8
 80189e2:	f100 0801 	add.w	r8, r0, #1
 80189e6:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 80189ea:	eb08 2010 	add.w	r0, r8, r0, lsr #8
 80189ee:	1c51      	adds	r1, r2, #1
 80189f0:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 80189f4:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 80189f8:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 80189fc:	ea4c 0c00 	orr.w	ip, ip, r0
 8018a00:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8018a04:	ea4c 0c02 	orr.w	ip, ip, r2
 8018a08:	f8a9 c000 	strh.w	ip, [r9]
 8018a0c:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8018a0e:	441c      	add	r4, r3
 8018a10:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8018a12:	f109 0902 	add.w	r9, r9, #2
 8018a16:	441e      	add	r6, r3
 8018a18:	f10b 3bff 	add.w	fp, fp, #4294967295
 8018a1c:	e5db      	b.n	80185d6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xce>
 8018a1e:	2800      	cmp	r0, #0
 8018a20:	d089      	beq.n	8018936 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x42e>
 8018a22:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8018a24:	442b      	add	r3, r5
 8018a26:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 8018a2a:	07db      	lsls	r3, r3, #31
 8018a2c:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8018a30:	bf54      	ite	pl
 8018a32:	f00c 0c0f 	andpl.w	ip, ip, #15
 8018a36:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8018a3a:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8018a3e:	fa5f f38c 	uxtb.w	r3, ip
 8018a42:	930e      	str	r3, [sp, #56]	; 0x38
 8018a44:	e777      	b.n	8018936 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x42e>
 8018a46:	bf00      	nop
 8018a48:	20012190 	.word	0x20012190
 8018a4c:	b019      	add	sp, #100	; 0x64
 8018a4e:	ecbd 8b08 	vpop	{d8-d11}
 8018a52:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018a56:	bf00      	nop

08018a58 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>:
 8018a58:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8018a5c:	e9dd c40a 	ldrd	ip, r4, [sp, #40]	; 0x28
 8018a60:	2c00      	cmp	r4, #0
 8018a62:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 8018a66:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 8018a6a:	f89d 5030 	ldrb.w	r5, [sp, #48]	; 0x30
 8018a6e:	f89d 7034 	ldrb.w	r7, [sp, #52]	; 0x34
 8018a72:	fb04 ce03 	mla	lr, r4, r3, ip
 8018a76:	db60      	blt.n	8018b3a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xe2>
 8018a78:	45a1      	cmp	r9, r4
 8018a7a:	dd5e      	ble.n	8018b3a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xe2>
 8018a7c:	f1bc 0f00 	cmp.w	ip, #0
 8018a80:	db59      	blt.n	8018b36 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xde>
 8018a82:	45e0      	cmp	r8, ip
 8018a84:	dd57      	ble.n	8018b36 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xde>
 8018a86:	ea4f 005e 	mov.w	r0, lr, lsr #1
 8018a8a:	f01e 0f01 	tst.w	lr, #1
 8018a8e:	5c16      	ldrb	r6, [r2, r0]
 8018a90:	bf0c      	ite	eq
 8018a92:	f006 060f 	andeq.w	r6, r6, #15
 8018a96:	1136      	asrne	r6, r6, #4
 8018a98:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 8018a9c:	b2f6      	uxtb	r6, r6
 8018a9e:	f11c 0001 	adds.w	r0, ip, #1
 8018aa2:	d44d      	bmi.n	8018b40 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xe8>
 8018aa4:	4580      	cmp	r8, r0
 8018aa6:	dd4b      	ble.n	8018b40 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xe8>
 8018aa8:	2d00      	cmp	r5, #0
 8018aaa:	d04b      	beq.n	8018b44 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xec>
 8018aac:	f10e 0a01 	add.w	sl, lr, #1
 8018ab0:	ea4f 005a 	mov.w	r0, sl, lsr #1
 8018ab4:	f01a 0f01 	tst.w	sl, #1
 8018ab8:	5c10      	ldrb	r0, [r2, r0]
 8018aba:	bf0c      	ite	eq
 8018abc:	f000 000f 	andeq.w	r0, r0, #15
 8018ac0:	1100      	asrne	r0, r0, #4
 8018ac2:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 8018ac6:	b2c0      	uxtb	r0, r0
 8018ac8:	3401      	adds	r4, #1
 8018aca:	d43f      	bmi.n	8018b4c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xf4>
 8018acc:	45a1      	cmp	r9, r4
 8018ace:	dd3d      	ble.n	8018b4c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xf4>
 8018ad0:	2f00      	cmp	r7, #0
 8018ad2:	f000 8097 	beq.w	8018c04 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1ac>
 8018ad6:	f1bc 0f00 	cmp.w	ip, #0
 8018ada:	db35      	blt.n	8018b48 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xf0>
 8018adc:	45e0      	cmp	r8, ip
 8018ade:	dd33      	ble.n	8018b48 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xf0>
 8018ae0:	eb03 090e 	add.w	r9, r3, lr
 8018ae4:	ea4f 0459 	mov.w	r4, r9, lsr #1
 8018ae8:	f019 0f01 	tst.w	r9, #1
 8018aec:	5d14      	ldrb	r4, [r2, r4]
 8018aee:	bf0c      	ite	eq
 8018af0:	f004 040f 	andeq.w	r4, r4, #15
 8018af4:	1124      	asrne	r4, r4, #4
 8018af6:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 8018afa:	b2e4      	uxtb	r4, r4
 8018afc:	f11c 0c01 	adds.w	ip, ip, #1
 8018b00:	d427      	bmi.n	8018b52 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xfa>
 8018b02:	45e0      	cmp	r8, ip
 8018b04:	dd25      	ble.n	8018b52 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xfa>
 8018b06:	b335      	cbz	r5, 8018b56 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xfe>
 8018b08:	3301      	adds	r3, #1
 8018b0a:	449e      	add	lr, r3
 8018b0c:	ea4f 035e 	mov.w	r3, lr, lsr #1
 8018b10:	f01e 0f01 	tst.w	lr, #1
 8018b14:	5cd2      	ldrb	r2, [r2, r3]
 8018b16:	bf0c      	ite	eq
 8018b18:	f002 020f 	andeq.w	r2, r2, #15
 8018b1c:	1112      	asrne	r2, r2, #4
 8018b1e:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8018b22:	b2d3      	uxtb	r3, r2
 8018b24:	2d0f      	cmp	r5, #15
 8018b26:	d917      	bls.n	8018b58 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x100>
 8018b28:	4b39      	ldr	r3, [pc, #228]	; (8018c10 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1b8>)
 8018b2a:	4a3a      	ldr	r2, [pc, #232]	; (8018c14 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1bc>)
 8018b2c:	483a      	ldr	r0, [pc, #232]	; (8018c18 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1c0>)
 8018b2e:	f240 210d 	movw	r1, #525	; 0x20d
 8018b32:	f000 fc6b 	bl	801940c <__assert_func>
 8018b36:	2600      	movs	r6, #0
 8018b38:	e7b1      	b.n	8018a9e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x46>
 8018b3a:	2000      	movs	r0, #0
 8018b3c:	4606      	mov	r6, r0
 8018b3e:	e7c3      	b.n	8018ac8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x70>
 8018b40:	2000      	movs	r0, #0
 8018b42:	e7c1      	b.n	8018ac8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x70>
 8018b44:	4628      	mov	r0, r5
 8018b46:	e7bf      	b.n	8018ac8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x70>
 8018b48:	2400      	movs	r4, #0
 8018b4a:	e7d7      	b.n	8018afc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xa4>
 8018b4c:	2300      	movs	r3, #0
 8018b4e:	461c      	mov	r4, r3
 8018b50:	e7e8      	b.n	8018b24 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xcc>
 8018b52:	2300      	movs	r3, #0
 8018b54:	e7e6      	b.n	8018b24 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xcc>
 8018b56:	462b      	mov	r3, r5
 8018b58:	2f0f      	cmp	r7, #15
 8018b5a:	d8e5      	bhi.n	8018b28 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xd0>
 8018b5c:	b2ad      	uxth	r5, r5
 8018b5e:	b2bf      	uxth	r7, r7
 8018b60:	fb05 fc07 	mul.w	ip, r5, r7
 8018b64:	ebcc 1707 	rsb	r7, ip, r7, lsl #4
 8018b68:	012d      	lsls	r5, r5, #4
 8018b6a:	b2bf      	uxth	r7, r7
 8018b6c:	f5c5 7280 	rsb	r2, r5, #256	; 0x100
 8018b70:	eba5 050c 	sub.w	r5, r5, ip
 8018b74:	1bd2      	subs	r2, r2, r7
 8018b76:	b2ad      	uxth	r5, r5
 8018b78:	b292      	uxth	r2, r2
 8018b7a:	4368      	muls	r0, r5
 8018b7c:	fb06 0002 	mla	r0, r6, r2, r0
 8018b80:	fb07 0404 	mla	r4, r7, r4, r0
 8018b84:	fb0c 4303 	mla	r3, ip, r3, r4
 8018b88:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8018b8c:	2b00      	cmp	r3, #0
 8018b8e:	d037      	beq.n	8018c00 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a8>
 8018b90:	4a22      	ldr	r2, [pc, #136]	; (8018c1c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1c4>)
 8018b92:	6816      	ldr	r6, [r2, #0]
 8018b94:	880a      	ldrh	r2, [r1, #0]
 8018b96:	b298      	uxth	r0, r3
 8018b98:	1215      	asrs	r5, r2, #8
 8018b9a:	43db      	mvns	r3, r3
 8018b9c:	b2db      	uxtb	r3, r3
 8018b9e:	0a34      	lsrs	r4, r6, #8
 8018ba0:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8018ba4:	fb15 f503 	smulbb	r5, r5, r3
 8018ba8:	10d7      	asrs	r7, r2, #3
 8018baa:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 8018bae:	fb04 5400 	mla	r4, r4, r0, r5
 8018bb2:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8018bb6:	08f5      	lsrs	r5, r6, #3
 8018bb8:	fb17 f703 	smulbb	r7, r7, r3
 8018bbc:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8018bc0:	00d2      	lsls	r2, r2, #3
 8018bc2:	fb05 7500 	mla	r5, r5, r0, r7
 8018bc6:	b2d2      	uxtb	r2, r2
 8018bc8:	00f6      	lsls	r6, r6, #3
 8018bca:	fb12 f303 	smulbb	r3, r2, r3
 8018bce:	b2ad      	uxth	r5, r5
 8018bd0:	b2f6      	uxtb	r6, r6
 8018bd2:	b2a4      	uxth	r4, r4
 8018bd4:	fb06 3000 	mla	r0, r6, r0, r3
 8018bd8:	1c6b      	adds	r3, r5, #1
 8018bda:	b280      	uxth	r0, r0
 8018bdc:	1c62      	adds	r2, r4, #1
 8018bde:	eb03 2315 	add.w	r3, r3, r5, lsr #8
 8018be2:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 8018be6:	095b      	lsrs	r3, r3, #5
 8018be8:	1c42      	adds	r2, r0, #1
 8018bea:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8018bee:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 8018bf2:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8018bf6:	4323      	orrs	r3, r4
 8018bf8:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 8018bfc:	4303      	orrs	r3, r0
 8018bfe:	800b      	strh	r3, [r1, #0]
 8018c00:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8018c04:	2d0f      	cmp	r5, #15
 8018c06:	d88f      	bhi.n	8018b28 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xd0>
 8018c08:	463b      	mov	r3, r7
 8018c0a:	463c      	mov	r4, r7
 8018c0c:	e7a6      	b.n	8018b5c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x104>
 8018c0e:	bf00      	nop
 8018c10:	0801d135 	.word	0x0801d135
 8018c14:	0801d68d 	.word	0x0801d68d
 8018c18:	0801d1bd 	.word	0x0801d1bd
 8018c1c:	20012190 	.word	0x20012190

08018c20 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 8018c20:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018c24:	ed2d 8b08 	vpush	{d8-d11}
 8018c28:	b095      	sub	sp, #84	; 0x54
 8018c2a:	e9dd 4627 	ldrd	r4, r6, [sp, #156]	; 0x9c
 8018c2e:	9306      	str	r3, [sp, #24]
 8018c30:	f9bd 30b8 	ldrsh.w	r3, [sp, #184]	; 0xb8
 8018c34:	9307      	str	r3, [sp, #28]
 8018c36:	920d      	str	r2, [sp, #52]	; 0x34
 8018c38:	f9bd 30bc 	ldrsh.w	r3, [sp, #188]	; 0xbc
 8018c3c:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 8018c3e:	910a      	str	r1, [sp, #40]	; 0x28
 8018c40:	9308      	str	r3, [sp, #32]
 8018c42:	e9dd 132c 	ldrd	r1, r3, [sp, #176]	; 0xb0
 8018c46:	9013      	str	r0, [sp, #76]	; 0x4c
 8018c48:	6850      	ldr	r0, [r2, #4]
 8018c4a:	6812      	ldr	r2, [r2, #0]
 8018c4c:	fb00 1303 	mla	r3, r0, r3, r1
 8018c50:	eb02 0b43 	add.w	fp, r2, r3, lsl #1
 8018c54:	9b07      	ldr	r3, [sp, #28]
 8018c56:	3301      	adds	r3, #1
 8018c58:	f023 0301 	bic.w	r3, r3, #1
 8018c5c:	9309      	str	r3, [sp, #36]	; 0x24
 8018c5e:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8018c60:	681f      	ldr	r7, [r3, #0]
 8018c62:	eeb0 aa40 	vmov.f32	s20, s0
 8018c66:	eef0 9a60 	vmov.f32	s19, s1
 8018c6a:	eeb0 9a41 	vmov.f32	s18, s2
 8018c6e:	eeb0 8a62 	vmov.f32	s16, s5
 8018c72:	eef0 8a43 	vmov.f32	s17, s6
 8018c76:	eef0 ba44 	vmov.f32	s23, s8
 8018c7a:	eeb0 ba64 	vmov.f32	s22, s9
 8018c7e:	eef0 aa45 	vmov.f32	s21, s10
 8018c82:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8018c84:	2b00      	cmp	r3, #0
 8018c86:	dc03      	bgt.n	8018c90 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x70>
 8018c88:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8018c8a:	2b00      	cmp	r3, #0
 8018c8c:	f340 825c 	ble.w	8019148 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x528>
 8018c90:	9b06      	ldr	r3, [sp, #24]
 8018c92:	2b00      	cmp	r3, #0
 8018c94:	f340 8119 	ble.w	8018eca <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2aa>
 8018c98:	1422      	asrs	r2, r4, #16
 8018c9a:	ea4f 4326 	mov.w	r3, r6, asr #16
 8018c9e:	d42d      	bmi.n	8018cfc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xdc>
 8018ca0:	9807      	ldr	r0, [sp, #28]
 8018ca2:	1c51      	adds	r1, r2, #1
 8018ca4:	4288      	cmp	r0, r1
 8018ca6:	dd2c      	ble.n	8018d02 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe2>
 8018ca8:	2b00      	cmp	r3, #0
 8018caa:	db2a      	blt.n	8018d02 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe2>
 8018cac:	9808      	ldr	r0, [sp, #32]
 8018cae:	1c59      	adds	r1, r3, #1
 8018cb0:	4288      	cmp	r0, r1
 8018cb2:	dd26      	ble.n	8018d02 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe2>
 8018cb4:	9b06      	ldr	r3, [sp, #24]
 8018cb6:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8018cb8:	3b01      	subs	r3, #1
 8018cba:	fb02 4203 	mla	r2, r2, r3, r4
 8018cbe:	1412      	asrs	r2, r2, #16
 8018cc0:	d42a      	bmi.n	8018d18 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf8>
 8018cc2:	9907      	ldr	r1, [sp, #28]
 8018cc4:	3201      	adds	r2, #1
 8018cc6:	4291      	cmp	r1, r2
 8018cc8:	dd26      	ble.n	8018d18 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf8>
 8018cca:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 8018ccc:	fb02 6303 	mla	r3, r2, r3, r6
 8018cd0:	141b      	asrs	r3, r3, #16
 8018cd2:	d421      	bmi.n	8018d18 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf8>
 8018cd4:	9a08      	ldr	r2, [sp, #32]
 8018cd6:	3301      	adds	r3, #1
 8018cd8:	429a      	cmp	r2, r3
 8018cda:	dd1d      	ble.n	8018d18 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf8>
 8018cdc:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	; 0x24
 8018ce0:	f8dd a018 	ldr.w	sl, [sp, #24]
 8018ce4:	930e      	str	r3, [sp, #56]	; 0x38
 8018ce6:	46d8      	mov	r8, fp
 8018ce8:	f1ba 0f00 	cmp.w	sl, #0
 8018cec:	f300 8161 	bgt.w	8018fb2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x392>
 8018cf0:	9b06      	ldr	r3, [sp, #24]
 8018cf2:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8018cf6:	eb0b 0b45 	add.w	fp, fp, r5, lsl #1
 8018cfa:	e0e8      	b.n	8018ece <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2ae>
 8018cfc:	1c51      	adds	r1, r2, #1
 8018cfe:	f040 80da 	bne.w	8018eb6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x296>
 8018d02:	9907      	ldr	r1, [sp, #28]
 8018d04:	4291      	cmp	r1, r2
 8018d06:	f340 80d6 	ble.w	8018eb6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x296>
 8018d0a:	1c5a      	adds	r2, r3, #1
 8018d0c:	f2c0 80d3 	blt.w	8018eb6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x296>
 8018d10:	9a08      	ldr	r2, [sp, #32]
 8018d12:	4293      	cmp	r3, r2
 8018d14:	f280 80cf 	bge.w	8018eb6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x296>
 8018d18:	f8dd 9018 	ldr.w	r9, [sp, #24]
 8018d1c:	f9bd a024 	ldrsh.w	sl, [sp, #36]	; 0x24
 8018d20:	46d8      	mov	r8, fp
 8018d22:	f1b9 0f00 	cmp.w	r9, #0
 8018d26:	dde3      	ble.n	8018cf0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xd0>
 8018d28:	1420      	asrs	r0, r4, #16
 8018d2a:	ea4f 4326 	mov.w	r3, r6, asr #16
 8018d2e:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8018d32:	f3c6 3103 	ubfx	r1, r6, #12, #4
 8018d36:	f100 8124 	bmi.w	8018f82 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x362>
 8018d3a:	9d07      	ldr	r5, [sp, #28]
 8018d3c:	f100 0c01 	add.w	ip, r0, #1
 8018d40:	4565      	cmp	r5, ip
 8018d42:	f340 8120 	ble.w	8018f86 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x366>
 8018d46:	2b00      	cmp	r3, #0
 8018d48:	f2c0 811d 	blt.w	8018f86 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x366>
 8018d4c:	9d08      	ldr	r5, [sp, #32]
 8018d4e:	f103 0c01 	add.w	ip, r3, #1
 8018d52:	4565      	cmp	r5, ip
 8018d54:	f340 8117 	ble.w	8018f86 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x366>
 8018d58:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8018d5a:	fb03 0305 	mla	r3, r3, r5, r0
 8018d5e:	0858      	lsrs	r0, r3, #1
 8018d60:	07dd      	lsls	r5, r3, #31
 8018d62:	5c38      	ldrb	r0, [r7, r0]
 8018d64:	bf54      	ite	pl
 8018d66:	f000 000f 	andpl.w	r0, r0, #15
 8018d6a:	1100      	asrmi	r0, r0, #4
 8018d6c:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 8018d70:	b2c0      	uxtb	r0, r0
 8018d72:	2a00      	cmp	r2, #0
 8018d74:	f000 80ea 	beq.w	8018f4c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x32c>
 8018d78:	f103 0e01 	add.w	lr, r3, #1
 8018d7c:	ea4f 0c5e 	mov.w	ip, lr, lsr #1
 8018d80:	f01e 0f01 	tst.w	lr, #1
 8018d84:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8018d88:	bf0c      	ite	eq
 8018d8a:	f00c 0c0f 	andeq.w	ip, ip, #15
 8018d8e:	ea4f 1c2c 	movne.w	ip, ip, asr #4
 8018d92:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8018d96:	fa5f fc8c 	uxtb.w	ip, ip
 8018d9a:	f8cd c03c 	str.w	ip, [sp, #60]	; 0x3c
 8018d9e:	b1f9      	cbz	r1, 8018de0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1c0>
 8018da0:	4453      	add	r3, sl
 8018da2:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 8018da6:	07dd      	lsls	r5, r3, #31
 8018da8:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8018dac:	bf54      	ite	pl
 8018dae:	f00c 0c0f 	andpl.w	ip, ip, #15
 8018db2:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8018db6:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8018dba:	3301      	adds	r3, #1
 8018dbc:	fa5f fc8c 	uxtb.w	ip, ip
 8018dc0:	f8cd c02c 	str.w	ip, [sp, #44]	; 0x2c
 8018dc4:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 8018dc8:	07dd      	lsls	r5, r3, #31
 8018dca:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8018dce:	bf54      	ite	pl
 8018dd0:	f00c 030f 	andpl.w	r3, ip, #15
 8018dd4:	ea4f 132c 	movmi.w	r3, ip, asr #4
 8018dd8:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8018ddc:	b2db      	uxtb	r3, r3
 8018dde:	9310      	str	r3, [sp, #64]	; 0x40
 8018de0:	b292      	uxth	r2, r2
 8018de2:	b289      	uxth	r1, r1
 8018de4:	fb02 f301 	mul.w	r3, r2, r1
 8018de8:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 8018dec:	0112      	lsls	r2, r2, #4
 8018dee:	b289      	uxth	r1, r1
 8018df0:	f5c2 7c80 	rsb	ip, r2, #256	; 0x100
 8018df4:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8018df6:	1ad2      	subs	r2, r2, r3
 8018df8:	ebac 0c01 	sub.w	ip, ip, r1
 8018dfc:	b292      	uxth	r2, r2
 8018dfe:	436a      	muls	r2, r5
 8018e00:	fa1f fc8c 	uxth.w	ip, ip
 8018e04:	fb00 200c 	mla	r0, r0, ip, r2
 8018e08:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8018e0a:	fb01 0102 	mla	r1, r1, r2, r0
 8018e0e:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8018e10:	fb03 1302 	mla	r3, r3, r2, r1
 8018e14:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8018e18:	2b00      	cmp	r3, #0
 8018e1a:	d043      	beq.n	8018ea4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x284>
 8018e1c:	4ac9      	ldr	r2, [pc, #804]	; (8019144 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x524>)
 8018e1e:	6811      	ldr	r1, [r2, #0]
 8018e20:	ea4f 2e11 	mov.w	lr, r1, lsr #8
 8018e24:	08ca      	lsrs	r2, r1, #3
 8018e26:	00c9      	lsls	r1, r1, #3
 8018e28:	b2c9      	uxtb	r1, r1
 8018e2a:	2bff      	cmp	r3, #255	; 0xff
 8018e2c:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 8018e30:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8018e34:	460d      	mov	r5, r1
 8018e36:	f000 809c 	beq.w	8018f72 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x352>
 8018e3a:	f8b8 c000 	ldrh.w	ip, [r8]
 8018e3e:	b299      	uxth	r1, r3
 8018e40:	ea4f 202c 	mov.w	r0, ip, asr #8
 8018e44:	43db      	mvns	r3, r3
 8018e46:	b2db      	uxtb	r3, r3
 8018e48:	fb1e fe01 	smulbb	lr, lr, r1
 8018e4c:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8018e50:	fb00 e003 	mla	r0, r0, r3, lr
 8018e54:	ea4f 0eec 	mov.w	lr, ip, asr #3
 8018e58:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 8018e5c:	fb12 f201 	smulbb	r2, r2, r1
 8018e60:	fb0e 2203 	mla	r2, lr, r3, r2
 8018e64:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8018e68:	b292      	uxth	r2, r2
 8018e6a:	fb15 f101 	smulbb	r1, r5, r1
 8018e6e:	fa5f fc8c 	uxtb.w	ip, ip
 8018e72:	b280      	uxth	r0, r0
 8018e74:	fb0c 1303 	mla	r3, ip, r3, r1
 8018e78:	f102 0e01 	add.w	lr, r2, #1
 8018e7c:	b29b      	uxth	r3, r3
 8018e7e:	1c41      	adds	r1, r0, #1
 8018e80:	eb0e 2212 	add.w	r2, lr, r2, lsr #8
 8018e84:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 8018e88:	0952      	lsrs	r2, r2, #5
 8018e8a:	1c59      	adds	r1, r3, #1
 8018e8c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8018e90:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 8018e94:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 8018e98:	4310      	orrs	r0, r2
 8018e9a:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8018e9e:	4318      	orrs	r0, r3
 8018ea0:	f8a8 0000 	strh.w	r0, [r8]
 8018ea4:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8018ea6:	441c      	add	r4, r3
 8018ea8:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8018eaa:	f108 0802 	add.w	r8, r8, #2
 8018eae:	441e      	add	r6, r3
 8018eb0:	f109 39ff 	add.w	r9, r9, #4294967295
 8018eb4:	e735      	b.n	8018d22 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x102>
 8018eb6:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8018eb8:	441c      	add	r4, r3
 8018eba:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8018ebc:	441e      	add	r6, r3
 8018ebe:	9b06      	ldr	r3, [sp, #24]
 8018ec0:	3b01      	subs	r3, #1
 8018ec2:	9306      	str	r3, [sp, #24]
 8018ec4:	f10b 0b02 	add.w	fp, fp, #2
 8018ec8:	e6e2      	b.n	8018c90 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x70>
 8018eca:	f47f aef3 	bne.w	8018cb4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x94>
 8018ece:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8018ed0:	2b00      	cmp	r3, #0
 8018ed2:	f340 8139 	ble.w	8019148 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x528>
 8018ed6:	ee3a aa2b 	vadd.f32	s20, s20, s23
 8018eda:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8018ede:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 8018ee2:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8018ee4:	ee79 9a8b 	vadd.f32	s19, s19, s22
 8018ee8:	ee39 9a2a 	vadd.f32	s18, s18, s21
 8018eec:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8018ef0:	eef0 6a48 	vmov.f32	s13, s16
 8018ef4:	ee69 7a27 	vmul.f32	s15, s18, s15
 8018ef8:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8018efc:	ee37 8a48 	vsub.f32	s16, s14, s16
 8018f00:	ee16 4a90 	vmov	r4, s13
 8018f04:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8018f08:	eef0 6a68 	vmov.f32	s13, s17
 8018f0c:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8018f10:	ee18 2a10 	vmov	r2, s16
 8018f14:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8018f18:	fb92 f3f3 	sdiv	r3, r2, r3
 8018f1c:	ee18 2a90 	vmov	r2, s17
 8018f20:	9329      	str	r3, [sp, #164]	; 0xa4
 8018f22:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8018f24:	fb92 f3f3 	sdiv	r3, r2, r3
 8018f28:	932a      	str	r3, [sp, #168]	; 0xa8
 8018f2a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8018f2c:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8018f2e:	3b01      	subs	r3, #1
 8018f30:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8018f34:	930a      	str	r3, [sp, #40]	; 0x28
 8018f36:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8018f38:	bf08      	it	eq
 8018f3a:	4613      	moveq	r3, r2
 8018f3c:	ee16 6a90 	vmov	r6, s13
 8018f40:	9306      	str	r3, [sp, #24]
 8018f42:	eef0 8a67 	vmov.f32	s17, s15
 8018f46:	eeb0 8a47 	vmov.f32	s16, s14
 8018f4a:	e69a      	b.n	8018c82 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x62>
 8018f4c:	2900      	cmp	r1, #0
 8018f4e:	f43f af47 	beq.w	8018de0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1c0>
 8018f52:	4453      	add	r3, sl
 8018f54:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 8018f58:	07db      	lsls	r3, r3, #31
 8018f5a:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8018f5e:	bf54      	ite	pl
 8018f60:	f00c 030f 	andpl.w	r3, ip, #15
 8018f64:	ea4f 132c 	movmi.w	r3, ip, asr #4
 8018f68:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8018f6c:	b2db      	uxtb	r3, r3
 8018f6e:	930b      	str	r3, [sp, #44]	; 0x2c
 8018f70:	e736      	b.n	8018de0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1c0>
 8018f72:	00d2      	lsls	r2, r2, #3
 8018f74:	ea42 2e0e 	orr.w	lr, r2, lr, lsl #8
 8018f78:	ea4e 01d1 	orr.w	r1, lr, r1, lsr #3
 8018f7c:	f8a8 1000 	strh.w	r1, [r8]
 8018f80:	e790      	b.n	8018ea4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x284>
 8018f82:	1c45      	adds	r5, r0, #1
 8018f84:	d18e      	bne.n	8018ea4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x284>
 8018f86:	9d07      	ldr	r5, [sp, #28]
 8018f88:	4285      	cmp	r5, r0
 8018f8a:	dd8b      	ble.n	8018ea4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x284>
 8018f8c:	1c5d      	adds	r5, r3, #1
 8018f8e:	db89      	blt.n	8018ea4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x284>
 8018f90:	9d08      	ldr	r5, [sp, #32]
 8018f92:	429d      	cmp	r5, r3
 8018f94:	dd86      	ble.n	8018ea4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x284>
 8018f96:	e9cd 0302 	strd	r0, r3, [sp, #8]
 8018f9a:	9b07      	ldr	r3, [sp, #28]
 8018f9c:	9300      	str	r3, [sp, #0]
 8018f9e:	e9cd 2104 	strd	r2, r1, [sp, #16]
 8018fa2:	9501      	str	r5, [sp, #4]
 8018fa4:	4653      	mov	r3, sl
 8018fa6:	463a      	mov	r2, r7
 8018fa8:	4641      	mov	r1, r8
 8018faa:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8018fac:	f7ff fd54 	bl	8018a58 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>
 8018fb0:	e778      	b.n	8018ea4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x284>
 8018fb2:	9909      	ldr	r1, [sp, #36]	; 0x24
 8018fb4:	1422      	asrs	r2, r4, #16
 8018fb6:	1433      	asrs	r3, r6, #16
 8018fb8:	fb01 2303 	mla	r3, r1, r3, r2
 8018fbc:	085a      	lsrs	r2, r3, #1
 8018fbe:	07d9      	lsls	r1, r3, #31
 8018fc0:	5cba      	ldrb	r2, [r7, r2]
 8018fc2:	bf54      	ite	pl
 8018fc4:	f002 020f 	andpl.w	r2, r2, #15
 8018fc8:	1112      	asrmi	r2, r2, #4
 8018fca:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8018fce:	f3c4 3003 	ubfx	r0, r4, #12, #4
 8018fd2:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 8018fd6:	b2d2      	uxtb	r2, r2
 8018fd8:	2800      	cmp	r0, #0
 8018fda:	f000 8099 	beq.w	8019110 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4f0>
 8018fde:	f103 0e01 	add.w	lr, r3, #1
 8018fe2:	ea4f 015e 	mov.w	r1, lr, lsr #1
 8018fe6:	f01e 0f01 	tst.w	lr, #1
 8018fea:	5c79      	ldrb	r1, [r7, r1]
 8018fec:	bf0c      	ite	eq
 8018fee:	f001 010f 	andeq.w	r1, r1, #15
 8018ff2:	1109      	asrne	r1, r1, #4
 8018ff4:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 8018ff8:	b2c9      	uxtb	r1, r1
 8018ffa:	9111      	str	r1, [sp, #68]	; 0x44
 8018ffc:	f1bc 0f00 	cmp.w	ip, #0
 8019000:	d018      	beq.n	8019034 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x414>
 8019002:	990e      	ldr	r1, [sp, #56]	; 0x38
 8019004:	440b      	add	r3, r1
 8019006:	0859      	lsrs	r1, r3, #1
 8019008:	07dd      	lsls	r5, r3, #31
 801900a:	5c79      	ldrb	r1, [r7, r1]
 801900c:	bf54      	ite	pl
 801900e:	f001 010f 	andpl.w	r1, r1, #15
 8019012:	1109      	asrmi	r1, r1, #4
 8019014:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 8019018:	b2c9      	uxtb	r1, r1
 801901a:	3301      	adds	r3, #1
 801901c:	910c      	str	r1, [sp, #48]	; 0x30
 801901e:	0859      	lsrs	r1, r3, #1
 8019020:	07dd      	lsls	r5, r3, #31
 8019022:	5c79      	ldrb	r1, [r7, r1]
 8019024:	bf54      	ite	pl
 8019026:	f001 010f 	andpl.w	r1, r1, #15
 801902a:	1109      	asrmi	r1, r1, #4
 801902c:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 8019030:	b2c9      	uxtb	r1, r1
 8019032:	9112      	str	r1, [sp, #72]	; 0x48
 8019034:	b280      	uxth	r0, r0
 8019036:	fa1f fc8c 	uxth.w	ip, ip
 801903a:	fb00 f30c 	mul.w	r3, r0, ip
 801903e:	ebc3 1c0c 	rsb	ip, r3, ip, lsl #4
 8019042:	0100      	lsls	r0, r0, #4
 8019044:	fa1f fc8c 	uxth.w	ip, ip
 8019048:	f5c0 7180 	rsb	r1, r0, #256	; 0x100
 801904c:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801904e:	1ac0      	subs	r0, r0, r3
 8019050:	eba1 010c 	sub.w	r1, r1, ip
 8019054:	b280      	uxth	r0, r0
 8019056:	b289      	uxth	r1, r1
 8019058:	4368      	muls	r0, r5
 801905a:	fb02 0201 	mla	r2, r2, r1, r0
 801905e:	990c      	ldr	r1, [sp, #48]	; 0x30
 8019060:	fb0c 2c01 	mla	ip, ip, r1, r2
 8019064:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8019066:	fb03 c302 	mla	r3, r3, r2, ip
 801906a:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801906e:	2b00      	cmp	r3, #0
 8019070:	d045      	beq.n	80190fe <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4de>
 8019072:	4a34      	ldr	r2, [pc, #208]	; (8019144 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x524>)
 8019074:	6811      	ldr	r1, [r2, #0]
 8019076:	2bff      	cmp	r3, #255	; 0xff
 8019078:	ea4f 2e11 	mov.w	lr, r1, lsr #8
 801907c:	ea4f 02d1 	mov.w	r2, r1, lsr #3
 8019080:	ea4f 01c1 	mov.w	r1, r1, lsl #3
 8019084:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 8019088:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801908c:	b2c9      	uxtb	r1, r1
 801908e:	d050      	beq.n	8019132 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x512>
 8019090:	f8b8 c000 	ldrh.w	ip, [r8]
 8019094:	fa1f f983 	uxth.w	r9, r3
 8019098:	ea4f 202c 	mov.w	r0, ip, asr #8
 801909c:	43db      	mvns	r3, r3
 801909e:	b2db      	uxtb	r3, r3
 80190a0:	fb1e fe09 	smulbb	lr, lr, r9
 80190a4:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 80190a8:	fb00 e003 	mla	r0, r0, r3, lr
 80190ac:	ea4f 0eec 	mov.w	lr, ip, asr #3
 80190b0:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 80190b4:	fb12 f209 	smulbb	r2, r2, r9
 80190b8:	fb0e 2203 	mla	r2, lr, r3, r2
 80190bc:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 80190c0:	b292      	uxth	r2, r2
 80190c2:	fa5f fc8c 	uxtb.w	ip, ip
 80190c6:	fb11 f109 	smulbb	r1, r1, r9
 80190ca:	b280      	uxth	r0, r0
 80190cc:	fb0c 1103 	mla	r1, ip, r3, r1
 80190d0:	f102 0e01 	add.w	lr, r2, #1
 80190d4:	b289      	uxth	r1, r1
 80190d6:	eb0e 2212 	add.w	r2, lr, r2, lsr #8
 80190da:	f100 0e01 	add.w	lr, r0, #1
 80190de:	0952      	lsrs	r2, r2, #5
 80190e0:	eb0e 2010 	add.w	r0, lr, r0, lsr #8
 80190e4:	1c4b      	adds	r3, r1, #1
 80190e6:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80190ea:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 80190ee:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 80190f2:	4302      	orrs	r2, r0
 80190f4:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 80190f8:	430a      	orrs	r2, r1
 80190fa:	f8a8 2000 	strh.w	r2, [r8]
 80190fe:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8019100:	441c      	add	r4, r3
 8019102:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8019104:	f108 0802 	add.w	r8, r8, #2
 8019108:	441e      	add	r6, r3
 801910a:	f10a 3aff 	add.w	sl, sl, #4294967295
 801910e:	e5eb      	b.n	8018ce8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xc8>
 8019110:	f1bc 0f00 	cmp.w	ip, #0
 8019114:	d08e      	beq.n	8019034 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x414>
 8019116:	990e      	ldr	r1, [sp, #56]	; 0x38
 8019118:	440b      	add	r3, r1
 801911a:	0859      	lsrs	r1, r3, #1
 801911c:	07db      	lsls	r3, r3, #31
 801911e:	5c79      	ldrb	r1, [r7, r1]
 8019120:	bf54      	ite	pl
 8019122:	f001 010f 	andpl.w	r1, r1, #15
 8019126:	1109      	asrmi	r1, r1, #4
 8019128:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 801912c:	b2c9      	uxtb	r1, r1
 801912e:	910c      	str	r1, [sp, #48]	; 0x30
 8019130:	e780      	b.n	8019034 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x414>
 8019132:	00d2      	lsls	r2, r2, #3
 8019134:	ea42 2e0e 	orr.w	lr, r2, lr, lsl #8
 8019138:	ea4e 01d1 	orr.w	r1, lr, r1, lsr #3
 801913c:	f8a8 1000 	strh.w	r1, [r8]
 8019140:	e7dd      	b.n	80190fe <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4de>
 8019142:	bf00      	nop
 8019144:	20012190 	.word	0x20012190
 8019148:	b015      	add	sp, #84	; 0x54
 801914a:	ecbd 8b08 	vpop	{d8-d11}
 801914e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8019152:	bf00      	nop

08019154 <CRC_Lock>:
 8019154:	b530      	push	{r4, r5, lr}
 8019156:	4a1d      	ldr	r2, [pc, #116]	; (80191cc <CRC_Lock+0x78>)
 8019158:	6813      	ldr	r3, [r2, #0]
 801915a:	f023 0301 	bic.w	r3, r3, #1
 801915e:	6013      	str	r3, [r2, #0]
 8019160:	4b1b      	ldr	r3, [pc, #108]	; (80191d0 <CRC_Lock+0x7c>)
 8019162:	681a      	ldr	r2, [r3, #0]
 8019164:	f64f 74f0 	movw	r4, #65520	; 0xfff0
 8019168:	4022      	ands	r2, r4
 801916a:	f24c 2540 	movw	r5, #49728	; 0xc240
 801916e:	42aa      	cmp	r2, r5
 8019170:	d005      	beq.n	801917e <CRC_Lock+0x2a>
 8019172:	681b      	ldr	r3, [r3, #0]
 8019174:	f24c 2270 	movw	r2, #49776	; 0xc270
 8019178:	4023      	ands	r3, r4
 801917a:	4293      	cmp	r3, r2
 801917c:	d11d      	bne.n	80191ba <CRC_Lock+0x66>
 801917e:	4b15      	ldr	r3, [pc, #84]	; (80191d4 <CRC_Lock+0x80>)
 8019180:	681b      	ldr	r3, [r3, #0]
 8019182:	b9d3      	cbnz	r3, 80191ba <CRC_Lock+0x66>
 8019184:	4a14      	ldr	r2, [pc, #80]	; (80191d8 <CRC_Lock+0x84>)
 8019186:	6813      	ldr	r3, [r2, #0]
 8019188:	f3c3 030b 	ubfx	r3, r3, #0, #12
 801918c:	f5b3 6f8a 	cmp.w	r3, #1104	; 0x450
 8019190:	d006      	beq.n	80191a0 <CRC_Lock+0x4c>
 8019192:	6813      	ldr	r3, [r2, #0]
 8019194:	f240 4283 	movw	r2, #1155	; 0x483
 8019198:	f3c3 030b 	ubfx	r3, r3, #0, #12
 801919c:	4293      	cmp	r3, r2
 801919e:	d10c      	bne.n	80191ba <CRC_Lock+0x66>
 80191a0:	4b0e      	ldr	r3, [pc, #56]	; (80191dc <CRC_Lock+0x88>)
 80191a2:	2201      	movs	r2, #1
 80191a4:	601a      	str	r2, [r3, #0]
 80191a6:	681a      	ldr	r2, [r3, #0]
 80191a8:	2a00      	cmp	r2, #0
 80191aa:	d1fc      	bne.n	80191a6 <CRC_Lock+0x52>
 80191ac:	4b0c      	ldr	r3, [pc, #48]	; (80191e0 <CRC_Lock+0x8c>)
 80191ae:	6018      	str	r0, [r3, #0]
 80191b0:	6818      	ldr	r0, [r3, #0]
 80191b2:	1a43      	subs	r3, r0, r1
 80191b4:	4258      	negs	r0, r3
 80191b6:	4158      	adcs	r0, r3
 80191b8:	bd30      	pop	{r4, r5, pc}
 80191ba:	4b0a      	ldr	r3, [pc, #40]	; (80191e4 <CRC_Lock+0x90>)
 80191bc:	2201      	movs	r2, #1
 80191be:	601a      	str	r2, [r3, #0]
 80191c0:	681a      	ldr	r2, [r3, #0]
 80191c2:	2a00      	cmp	r2, #0
 80191c4:	d1fc      	bne.n	80191c0 <CRC_Lock+0x6c>
 80191c6:	4b08      	ldr	r3, [pc, #32]	; (80191e8 <CRC_Lock+0x94>)
 80191c8:	e7f1      	b.n	80191ae <CRC_Lock+0x5a>
 80191ca:	bf00      	nop
 80191cc:	e0002000 	.word	0xe0002000
 80191d0:	e000ed00 	.word	0xe000ed00
 80191d4:	e0042000 	.word	0xe0042000
 80191d8:	5c001000 	.word	0x5c001000
 80191dc:	58024c08 	.word	0x58024c08
 80191e0:	58024c00 	.word	0x58024c00
 80191e4:	40023008 	.word	0x40023008
 80191e8:	40023000 	.word	0x40023000

080191ec <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>:
 80191ec:	6101      	str	r1, [r0, #16]
 80191ee:	4770      	bx	lr

080191f0 <_ZN8touchgfx8Gestures4tickEv>:
 80191f0:	7b83      	ldrb	r3, [r0, #14]
 80191f2:	b14b      	cbz	r3, 8019208 <_ZN8touchgfx8Gestures4tickEv+0x18>
 80191f4:	8903      	ldrh	r3, [r0, #8]
 80191f6:	3301      	adds	r3, #1
 80191f8:	b29b      	uxth	r3, r3
 80191fa:	2b07      	cmp	r3, #7
 80191fc:	8103      	strh	r3, [r0, #8]
 80191fe:	bf81      	itttt	hi
 8019200:	2300      	movhi	r3, #0
 8019202:	8143      	strhhi	r3, [r0, #10]
 8019204:	8183      	strhhi	r3, [r0, #12]
 8019206:	7383      	strbhi	r3, [r0, #14]
 8019208:	4770      	bx	lr
	...

0801920c <_ZN8touchgfx8Gestures17registerDragEventEtttt>:
 801920c:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8019210:	4604      	mov	r4, r0
 8019212:	8880      	ldrh	r0, [r0, #4]
 8019214:	f8ad 0006 	strh.w	r0, [sp, #6]
 8019218:	4698      	mov	r8, r3
 801921a:	eba8 0000 	sub.w	r0, r8, r0
 801921e:	4b1c      	ldr	r3, [pc, #112]	; (8019290 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x84>)
 8019220:	9300      	str	r3, [sp, #0]
 8019222:	b280      	uxth	r0, r0
 8019224:	2300      	movs	r3, #0
 8019226:	f88d 3004 	strb.w	r3, [sp, #4]
 801922a:	b203      	sxth	r3, r0
 801922c:	2b00      	cmp	r3, #0
 801922e:	bfb8      	it	lt
 8019230:	4240      	neglt	r0, r0
 8019232:	4617      	mov	r7, r2
 8019234:	8aa2      	ldrh	r2, [r4, #20]
 8019236:	f8bd 5028 	ldrh.w	r5, [sp, #40]	; 0x28
 801923a:	f8ad 800a 	strh.w	r8, [sp, #10]
 801923e:	bfb8      	it	lt
 8019240:	b203      	sxthlt	r3, r0
 8019242:	460e      	mov	r6, r1
 8019244:	4293      	cmp	r3, r2
 8019246:	88e1      	ldrh	r1, [r4, #6]
 8019248:	f8ad 1008 	strh.w	r1, [sp, #8]
 801924c:	f8ad 500c 	strh.w	r5, [sp, #12]
 8019250:	dc08      	bgt.n	8019264 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x58>
 8019252:	1a69      	subs	r1, r5, r1
 8019254:	b289      	uxth	r1, r1
 8019256:	b20b      	sxth	r3, r1
 8019258:	2b00      	cmp	r3, #0
 801925a:	bfbc      	itt	lt
 801925c:	4249      	neglt	r1, r1
 801925e:	b20b      	sxthlt	r3, r1
 8019260:	429a      	cmp	r2, r3
 8019262:	da13      	bge.n	801928c <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x80>
 8019264:	6920      	ldr	r0, [r4, #16]
 8019266:	6803      	ldr	r3, [r0, #0]
 8019268:	4669      	mov	r1, sp
 801926a:	685b      	ldr	r3, [r3, #4]
 801926c:	4798      	blx	r3
 801926e:	eba8 0606 	sub.w	r6, r8, r6
 8019272:	2300      	movs	r3, #0
 8019274:	1bef      	subs	r7, r5, r7
 8019276:	2001      	movs	r0, #1
 8019278:	8123      	strh	r3, [r4, #8]
 801927a:	8166      	strh	r6, [r4, #10]
 801927c:	81a7      	strh	r7, [r4, #12]
 801927e:	f8a4 8004 	strh.w	r8, [r4, #4]
 8019282:	80e5      	strh	r5, [r4, #6]
 8019284:	73a0      	strb	r0, [r4, #14]
 8019286:	b004      	add	sp, #16
 8019288:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801928c:	2000      	movs	r0, #0
 801928e:	e7fa      	b.n	8019286 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x7a>
 8019290:	0801c644 	.word	0x0801c644

08019294 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>:
 8019294:	b5f0      	push	{r4, r5, r6, r7, lr}
 8019296:	461e      	mov	r6, r3
 8019298:	1e4b      	subs	r3, r1, #1
 801929a:	2b01      	cmp	r3, #1
 801929c:	b085      	sub	sp, #20
 801929e:	4604      	mov	r4, r0
 80192a0:	460d      	mov	r5, r1
 80192a2:	4617      	mov	r7, r2
 80192a4:	d84b      	bhi.n	801933e <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xaa>
 80192a6:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 80192aa:	1cd3      	adds	r3, r2, #3
 80192ac:	b29b      	uxth	r3, r3
 80192ae:	2b06      	cmp	r3, #6
 80192b0:	d916      	bls.n	80192e0 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x4c>
 80192b2:	f8df c0a0 	ldr.w	ip, [pc, #160]	; 8019354 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 80192b6:	f8cd c004 	str.w	ip, [sp, #4]
 80192ba:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 80192be:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 80192c2:	6900      	ldr	r0, [r0, #16]
 80192c4:	f8ad 100c 	strh.w	r1, [sp, #12]
 80192c8:	f04f 0c00 	mov.w	ip, #0
 80192cc:	f88d c008 	strb.w	ip, [sp, #8]
 80192d0:	f8ad 200a 	strh.w	r2, [sp, #10]
 80192d4:	f8ad 300e 	strh.w	r3, [sp, #14]
 80192d8:	6803      	ldr	r3, [r0, #0]
 80192da:	a901      	add	r1, sp, #4
 80192dc:	689b      	ldr	r3, [r3, #8]
 80192de:	4798      	blx	r3
 80192e0:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 80192e4:	1cd3      	adds	r3, r2, #3
 80192e6:	b29b      	uxth	r3, r3
 80192e8:	2b06      	cmp	r3, #6
 80192ea:	d916      	bls.n	801931a <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 80192ec:	f8df c064 	ldr.w	ip, [pc, #100]	; 8019354 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 80192f0:	f8cd c004 	str.w	ip, [sp, #4]
 80192f4:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 80192f8:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 80192fc:	6920      	ldr	r0, [r4, #16]
 80192fe:	f8ad 100c 	strh.w	r1, [sp, #12]
 8019302:	f04f 0c01 	mov.w	ip, #1
 8019306:	f88d c008 	strb.w	ip, [sp, #8]
 801930a:	f8ad 200a 	strh.w	r2, [sp, #10]
 801930e:	f8ad 300e 	strh.w	r3, [sp, #14]
 8019312:	6803      	ldr	r3, [r0, #0]
 8019314:	a901      	add	r1, sp, #4
 8019316:	689b      	ldr	r3, [r3, #8]
 8019318:	4798      	blx	r3
 801931a:	4b0d      	ldr	r3, [pc, #52]	; (8019350 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xbc>)
 801931c:	9301      	str	r3, [sp, #4]
 801931e:	6920      	ldr	r0, [r4, #16]
 8019320:	f88d 5008 	strb.w	r5, [sp, #8]
 8019324:	2300      	movs	r3, #0
 8019326:	f8ad 700a 	strh.w	r7, [sp, #10]
 801932a:	f8ad 600c 	strh.w	r6, [sp, #12]
 801932e:	f8ad 300e 	strh.w	r3, [sp, #14]
 8019332:	6803      	ldr	r3, [r0, #0]
 8019334:	a901      	add	r1, sp, #4
 8019336:	681b      	ldr	r3, [r3, #0]
 8019338:	4798      	blx	r3
 801933a:	b005      	add	sp, #20
 801933c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801933e:	2900      	cmp	r1, #0
 8019340:	d1eb      	bne.n	801931a <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 8019342:	80a2      	strh	r2, [r4, #4]
 8019344:	80c6      	strh	r6, [r0, #6]
 8019346:	60a1      	str	r1, [r4, #8]
 8019348:	81a1      	strh	r1, [r4, #12]
 801934a:	73a1      	strb	r1, [r4, #14]
 801934c:	e7e5      	b.n	801931a <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 801934e:	bf00      	nop
 8019350:	0801c630 	.word	0x0801c630
 8019354:	0801c658 	.word	0x0801c658

08019358 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE>:
 8019358:	b570      	push	{r4, r5, r6, lr}
 801935a:	790b      	ldrb	r3, [r1, #4]
 801935c:	f890 502c 	ldrb.w	r5, [r0, #44]	; 0x2c
 8019360:	2b00      	cmp	r3, #0
 8019362:	bf0c      	ite	eq
 8019364:	2301      	moveq	r3, #1
 8019366:	2300      	movne	r3, #0
 8019368:	4604      	mov	r4, r0
 801936a:	460e      	mov	r6, r1
 801936c:	f880 302c 	strb.w	r3, [r0, #44]	; 0x2c
 8019370:	d110      	bne.n	8019394 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
 8019372:	b185      	cbz	r5, 8019396 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3e>
 8019374:	7933      	ldrb	r3, [r6, #4]
 8019376:	2b01      	cmp	r3, #1
 8019378:	d113      	bne.n	80193a2 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x4a>
 801937a:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 801937c:	b188      	cbz	r0, 80193a2 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x4a>
 801937e:	6803      	ldr	r3, [r0, #0]
 8019380:	68db      	ldr	r3, [r3, #12]
 8019382:	4798      	blx	r3
 8019384:	b168      	cbz	r0, 80193a2 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x4a>
 8019386:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 8019388:	6803      	ldr	r3, [r0, #0]
 801938a:	4621      	mov	r1, r4
 801938c:	689b      	ldr	r3, [r3, #8]
 801938e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8019392:	4718      	bx	r3
 8019394:	b12d      	cbz	r5, 80193a2 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x4a>
 8019396:	6823      	ldr	r3, [r4, #0]
 8019398:	4620      	mov	r0, r4
 801939a:	695b      	ldr	r3, [r3, #20]
 801939c:	4798      	blx	r3
 801939e:	2d00      	cmp	r5, #0
 80193a0:	d1e8      	bne.n	8019374 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x1c>
 80193a2:	bd70      	pop	{r4, r5, r6, pc}

080193a4 <__aeabi_atexit>:
 80193a4:	460b      	mov	r3, r1
 80193a6:	4601      	mov	r1, r0
 80193a8:	4618      	mov	r0, r3
 80193aa:	f000 b853 	b.w	8019454 <__cxa_atexit>

080193ae <__cxa_pure_virtual>:
 80193ae:	b508      	push	{r3, lr}
 80193b0:	f000 f820 	bl	80193f4 <_ZSt9terminatev>

080193b4 <_ZdlPvj>:
 80193b4:	f000 b80f 	b.w	80193d6 <_ZdlPv>

080193b8 <__cxa_guard_acquire>:
 80193b8:	6803      	ldr	r3, [r0, #0]
 80193ba:	07db      	lsls	r3, r3, #31
 80193bc:	d406      	bmi.n	80193cc <__cxa_guard_acquire+0x14>
 80193be:	7843      	ldrb	r3, [r0, #1]
 80193c0:	b103      	cbz	r3, 80193c4 <__cxa_guard_acquire+0xc>
 80193c2:	deff      	udf	#255	; 0xff
 80193c4:	2301      	movs	r3, #1
 80193c6:	7043      	strb	r3, [r0, #1]
 80193c8:	4618      	mov	r0, r3
 80193ca:	4770      	bx	lr
 80193cc:	2000      	movs	r0, #0
 80193ce:	4770      	bx	lr

080193d0 <__cxa_guard_release>:
 80193d0:	2301      	movs	r3, #1
 80193d2:	6003      	str	r3, [r0, #0]
 80193d4:	4770      	bx	lr

080193d6 <_ZdlPv>:
 80193d6:	f000 b88f 	b.w	80194f8 <free>

080193da <_ZN10__cxxabiv111__terminateEPFvvE>:
 80193da:	b508      	push	{r3, lr}
 80193dc:	4780      	blx	r0
 80193de:	f000 f80e 	bl	80193fe <abort>
	...

080193e4 <_ZSt13get_terminatev>:
 80193e4:	4b02      	ldr	r3, [pc, #8]	; (80193f0 <_ZSt13get_terminatev+0xc>)
 80193e6:	6818      	ldr	r0, [r3, #0]
 80193e8:	f3bf 8f5b 	dmb	ish
 80193ec:	4770      	bx	lr
 80193ee:	bf00      	nop
 80193f0:	20000108 	.word	0x20000108

080193f4 <_ZSt9terminatev>:
 80193f4:	b508      	push	{r3, lr}
 80193f6:	f7ff fff5 	bl	80193e4 <_ZSt13get_terminatev>
 80193fa:	f7ff ffee 	bl	80193da <_ZN10__cxxabiv111__terminateEPFvvE>

080193fe <abort>:
 80193fe:	b508      	push	{r3, lr}
 8019400:	2006      	movs	r0, #6
 8019402:	f000 fc3d 	bl	8019c80 <raise>
 8019406:	2001      	movs	r0, #1
 8019408:	f7e9 fa98 	bl	800293c <_exit>

0801940c <__assert_func>:
 801940c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 801940e:	461c      	mov	r4, r3
 8019410:	4b09      	ldr	r3, [pc, #36]	; (8019438 <__assert_func+0x2c>)
 8019412:	681b      	ldr	r3, [r3, #0]
 8019414:	4605      	mov	r5, r0
 8019416:	68d8      	ldr	r0, [r3, #12]
 8019418:	b152      	cbz	r2, 8019430 <__assert_func+0x24>
 801941a:	4b08      	ldr	r3, [pc, #32]	; (801943c <__assert_func+0x30>)
 801941c:	9100      	str	r1, [sp, #0]
 801941e:	e9cd 3201 	strd	r3, r2, [sp, #4]
 8019422:	4907      	ldr	r1, [pc, #28]	; (8019440 <__assert_func+0x34>)
 8019424:	462b      	mov	r3, r5
 8019426:	4622      	mov	r2, r4
 8019428:	f000 f828 	bl	801947c <fiprintf>
 801942c:	f7ff ffe7 	bl	80193fe <abort>
 8019430:	4b04      	ldr	r3, [pc, #16]	; (8019444 <__assert_func+0x38>)
 8019432:	461a      	mov	r2, r3
 8019434:	e7f2      	b.n	801941c <__assert_func+0x10>
 8019436:	bf00      	nop
 8019438:	2000010c 	.word	0x2000010c
 801943c:	0801d8c8 	.word	0x0801d8c8
 8019440:	0801d8d5 	.word	0x0801d8d5
 8019444:	0801d903 	.word	0x0801d903

08019448 <atexit>:
 8019448:	2300      	movs	r3, #0
 801944a:	4601      	mov	r1, r0
 801944c:	461a      	mov	r2, r3
 801944e:	4618      	mov	r0, r3
 8019450:	f000 bcf2 	b.w	8019e38 <__register_exitproc>

08019454 <__cxa_atexit>:
 8019454:	b510      	push	{r4, lr}
 8019456:	4c05      	ldr	r4, [pc, #20]	; (801946c <__cxa_atexit+0x18>)
 8019458:	4613      	mov	r3, r2
 801945a:	b12c      	cbz	r4, 8019468 <__cxa_atexit+0x14>
 801945c:	460a      	mov	r2, r1
 801945e:	4601      	mov	r1, r0
 8019460:	2002      	movs	r0, #2
 8019462:	f000 fce9 	bl	8019e38 <__register_exitproc>
 8019466:	bd10      	pop	{r4, pc}
 8019468:	4620      	mov	r0, r4
 801946a:	e7fc      	b.n	8019466 <__cxa_atexit+0x12>
 801946c:	08019e39 	.word	0x08019e39

08019470 <__errno>:
 8019470:	4b01      	ldr	r3, [pc, #4]	; (8019478 <__errno+0x8>)
 8019472:	6818      	ldr	r0, [r3, #0]
 8019474:	4770      	bx	lr
 8019476:	bf00      	nop
 8019478:	2000010c 	.word	0x2000010c

0801947c <fiprintf>:
 801947c:	b40e      	push	{r1, r2, r3}
 801947e:	b503      	push	{r0, r1, lr}
 8019480:	4601      	mov	r1, r0
 8019482:	ab03      	add	r3, sp, #12
 8019484:	4805      	ldr	r0, [pc, #20]	; (801949c <fiprintf+0x20>)
 8019486:	f853 2b04 	ldr.w	r2, [r3], #4
 801948a:	6800      	ldr	r0, [r0, #0]
 801948c:	9301      	str	r3, [sp, #4]
 801948e:	f000 f921 	bl	80196d4 <_vfiprintf_r>
 8019492:	b002      	add	sp, #8
 8019494:	f85d eb04 	ldr.w	lr, [sp], #4
 8019498:	b003      	add	sp, #12
 801949a:	4770      	bx	lr
 801949c:	2000010c 	.word	0x2000010c

080194a0 <__libc_init_array>:
 80194a0:	b570      	push	{r4, r5, r6, lr}
 80194a2:	4e0d      	ldr	r6, [pc, #52]	; (80194d8 <__libc_init_array+0x38>)
 80194a4:	4c0d      	ldr	r4, [pc, #52]	; (80194dc <__libc_init_array+0x3c>)
 80194a6:	1ba4      	subs	r4, r4, r6
 80194a8:	10a4      	asrs	r4, r4, #2
 80194aa:	2500      	movs	r5, #0
 80194ac:	42a5      	cmp	r5, r4
 80194ae:	d109      	bne.n	80194c4 <__libc_init_array+0x24>
 80194b0:	4e0b      	ldr	r6, [pc, #44]	; (80194e0 <__libc_init_array+0x40>)
 80194b2:	4c0c      	ldr	r4, [pc, #48]	; (80194e4 <__libc_init_array+0x44>)
 80194b4:	f000 ffb0 	bl	801a418 <_init>
 80194b8:	1ba4      	subs	r4, r4, r6
 80194ba:	10a4      	asrs	r4, r4, #2
 80194bc:	2500      	movs	r5, #0
 80194be:	42a5      	cmp	r5, r4
 80194c0:	d105      	bne.n	80194ce <__libc_init_array+0x2e>
 80194c2:	bd70      	pop	{r4, r5, r6, pc}
 80194c4:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 80194c8:	4798      	blx	r3
 80194ca:	3501      	adds	r5, #1
 80194cc:	e7ee      	b.n	80194ac <__libc_init_array+0xc>
 80194ce:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 80194d2:	4798      	blx	r3
 80194d4:	3501      	adds	r5, #1
 80194d6:	e7f2      	b.n	80194be <__libc_init_array+0x1e>
 80194d8:	0805768c 	.word	0x0805768c
 80194dc:	0805768c 	.word	0x0805768c
 80194e0:	0805768c 	.word	0x0805768c
 80194e4:	080576a0 	.word	0x080576a0

080194e8 <malloc>:
 80194e8:	4b02      	ldr	r3, [pc, #8]	; (80194f4 <malloc+0xc>)
 80194ea:	4601      	mov	r1, r0
 80194ec:	6818      	ldr	r0, [r3, #0]
 80194ee:	f000 b86d 	b.w	80195cc <_malloc_r>
 80194f2:	bf00      	nop
 80194f4:	2000010c 	.word	0x2000010c

080194f8 <free>:
 80194f8:	4b02      	ldr	r3, [pc, #8]	; (8019504 <free+0xc>)
 80194fa:	4601      	mov	r1, r0
 80194fc:	6818      	ldr	r0, [r3, #0]
 80194fe:	f000 b817 	b.w	8019530 <_free_r>
 8019502:	bf00      	nop
 8019504:	2000010c 	.word	0x2000010c

08019508 <memcpy>:
 8019508:	b510      	push	{r4, lr}
 801950a:	1e43      	subs	r3, r0, #1
 801950c:	440a      	add	r2, r1
 801950e:	4291      	cmp	r1, r2
 8019510:	d100      	bne.n	8019514 <memcpy+0xc>
 8019512:	bd10      	pop	{r4, pc}
 8019514:	f811 4b01 	ldrb.w	r4, [r1], #1
 8019518:	f803 4f01 	strb.w	r4, [r3, #1]!
 801951c:	e7f7      	b.n	801950e <memcpy+0x6>

0801951e <memset>:
 801951e:	4402      	add	r2, r0
 8019520:	4603      	mov	r3, r0
 8019522:	4293      	cmp	r3, r2
 8019524:	d100      	bne.n	8019528 <memset+0xa>
 8019526:	4770      	bx	lr
 8019528:	f803 1b01 	strb.w	r1, [r3], #1
 801952c:	e7f9      	b.n	8019522 <memset+0x4>
	...

08019530 <_free_r>:
 8019530:	b538      	push	{r3, r4, r5, lr}
 8019532:	4605      	mov	r5, r0
 8019534:	2900      	cmp	r1, #0
 8019536:	d045      	beq.n	80195c4 <_free_r+0x94>
 8019538:	f851 3c04 	ldr.w	r3, [r1, #-4]
 801953c:	1f0c      	subs	r4, r1, #4
 801953e:	2b00      	cmp	r3, #0
 8019540:	bfb8      	it	lt
 8019542:	18e4      	addlt	r4, r4, r3
 8019544:	f000 feba 	bl	801a2bc <__malloc_lock>
 8019548:	4a1f      	ldr	r2, [pc, #124]	; (80195c8 <_free_r+0x98>)
 801954a:	6813      	ldr	r3, [r2, #0]
 801954c:	4610      	mov	r0, r2
 801954e:	b933      	cbnz	r3, 801955e <_free_r+0x2e>
 8019550:	6063      	str	r3, [r4, #4]
 8019552:	6014      	str	r4, [r2, #0]
 8019554:	4628      	mov	r0, r5
 8019556:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 801955a:	f000 beb0 	b.w	801a2be <__malloc_unlock>
 801955e:	42a3      	cmp	r3, r4
 8019560:	d90c      	bls.n	801957c <_free_r+0x4c>
 8019562:	6821      	ldr	r1, [r4, #0]
 8019564:	1862      	adds	r2, r4, r1
 8019566:	4293      	cmp	r3, r2
 8019568:	bf04      	itt	eq
 801956a:	681a      	ldreq	r2, [r3, #0]
 801956c:	685b      	ldreq	r3, [r3, #4]
 801956e:	6063      	str	r3, [r4, #4]
 8019570:	bf04      	itt	eq
 8019572:	1852      	addeq	r2, r2, r1
 8019574:	6022      	streq	r2, [r4, #0]
 8019576:	6004      	str	r4, [r0, #0]
 8019578:	e7ec      	b.n	8019554 <_free_r+0x24>
 801957a:	4613      	mov	r3, r2
 801957c:	685a      	ldr	r2, [r3, #4]
 801957e:	b10a      	cbz	r2, 8019584 <_free_r+0x54>
 8019580:	42a2      	cmp	r2, r4
 8019582:	d9fa      	bls.n	801957a <_free_r+0x4a>
 8019584:	6819      	ldr	r1, [r3, #0]
 8019586:	1858      	adds	r0, r3, r1
 8019588:	42a0      	cmp	r0, r4
 801958a:	d10b      	bne.n	80195a4 <_free_r+0x74>
 801958c:	6820      	ldr	r0, [r4, #0]
 801958e:	4401      	add	r1, r0
 8019590:	1858      	adds	r0, r3, r1
 8019592:	4282      	cmp	r2, r0
 8019594:	6019      	str	r1, [r3, #0]
 8019596:	d1dd      	bne.n	8019554 <_free_r+0x24>
 8019598:	6810      	ldr	r0, [r2, #0]
 801959a:	6852      	ldr	r2, [r2, #4]
 801959c:	605a      	str	r2, [r3, #4]
 801959e:	4401      	add	r1, r0
 80195a0:	6019      	str	r1, [r3, #0]
 80195a2:	e7d7      	b.n	8019554 <_free_r+0x24>
 80195a4:	d902      	bls.n	80195ac <_free_r+0x7c>
 80195a6:	230c      	movs	r3, #12
 80195a8:	602b      	str	r3, [r5, #0]
 80195aa:	e7d3      	b.n	8019554 <_free_r+0x24>
 80195ac:	6820      	ldr	r0, [r4, #0]
 80195ae:	1821      	adds	r1, r4, r0
 80195b0:	428a      	cmp	r2, r1
 80195b2:	bf04      	itt	eq
 80195b4:	6811      	ldreq	r1, [r2, #0]
 80195b6:	6852      	ldreq	r2, [r2, #4]
 80195b8:	6062      	str	r2, [r4, #4]
 80195ba:	bf04      	itt	eq
 80195bc:	1809      	addeq	r1, r1, r0
 80195be:	6021      	streq	r1, [r4, #0]
 80195c0:	605c      	str	r4, [r3, #4]
 80195c2:	e7c7      	b.n	8019554 <_free_r+0x24>
 80195c4:	bd38      	pop	{r3, r4, r5, pc}
 80195c6:	bf00      	nop
 80195c8:	200122a4 	.word	0x200122a4

080195cc <_malloc_r>:
 80195cc:	b570      	push	{r4, r5, r6, lr}
 80195ce:	1ccd      	adds	r5, r1, #3
 80195d0:	f025 0503 	bic.w	r5, r5, #3
 80195d4:	3508      	adds	r5, #8
 80195d6:	2d0c      	cmp	r5, #12
 80195d8:	bf38      	it	cc
 80195da:	250c      	movcc	r5, #12
 80195dc:	2d00      	cmp	r5, #0
 80195de:	4606      	mov	r6, r0
 80195e0:	db01      	blt.n	80195e6 <_malloc_r+0x1a>
 80195e2:	42a9      	cmp	r1, r5
 80195e4:	d903      	bls.n	80195ee <_malloc_r+0x22>
 80195e6:	230c      	movs	r3, #12
 80195e8:	6033      	str	r3, [r6, #0]
 80195ea:	2000      	movs	r0, #0
 80195ec:	bd70      	pop	{r4, r5, r6, pc}
 80195ee:	f000 fe65 	bl	801a2bc <__malloc_lock>
 80195f2:	4a21      	ldr	r2, [pc, #132]	; (8019678 <_malloc_r+0xac>)
 80195f4:	6814      	ldr	r4, [r2, #0]
 80195f6:	4621      	mov	r1, r4
 80195f8:	b991      	cbnz	r1, 8019620 <_malloc_r+0x54>
 80195fa:	4c20      	ldr	r4, [pc, #128]	; (801967c <_malloc_r+0xb0>)
 80195fc:	6823      	ldr	r3, [r4, #0]
 80195fe:	b91b      	cbnz	r3, 8019608 <_malloc_r+0x3c>
 8019600:	4630      	mov	r0, r6
 8019602:	f000 fb05 	bl	8019c10 <_sbrk_r>
 8019606:	6020      	str	r0, [r4, #0]
 8019608:	4629      	mov	r1, r5
 801960a:	4630      	mov	r0, r6
 801960c:	f000 fb00 	bl	8019c10 <_sbrk_r>
 8019610:	1c43      	adds	r3, r0, #1
 8019612:	d124      	bne.n	801965e <_malloc_r+0x92>
 8019614:	230c      	movs	r3, #12
 8019616:	6033      	str	r3, [r6, #0]
 8019618:	4630      	mov	r0, r6
 801961a:	f000 fe50 	bl	801a2be <__malloc_unlock>
 801961e:	e7e4      	b.n	80195ea <_malloc_r+0x1e>
 8019620:	680b      	ldr	r3, [r1, #0]
 8019622:	1b5b      	subs	r3, r3, r5
 8019624:	d418      	bmi.n	8019658 <_malloc_r+0x8c>
 8019626:	2b0b      	cmp	r3, #11
 8019628:	d90f      	bls.n	801964a <_malloc_r+0x7e>
 801962a:	600b      	str	r3, [r1, #0]
 801962c:	50cd      	str	r5, [r1, r3]
 801962e:	18cc      	adds	r4, r1, r3
 8019630:	4630      	mov	r0, r6
 8019632:	f000 fe44 	bl	801a2be <__malloc_unlock>
 8019636:	f104 000b 	add.w	r0, r4, #11
 801963a:	1d23      	adds	r3, r4, #4
 801963c:	f020 0007 	bic.w	r0, r0, #7
 8019640:	1ac3      	subs	r3, r0, r3
 8019642:	d0d3      	beq.n	80195ec <_malloc_r+0x20>
 8019644:	425a      	negs	r2, r3
 8019646:	50e2      	str	r2, [r4, r3]
 8019648:	e7d0      	b.n	80195ec <_malloc_r+0x20>
 801964a:	428c      	cmp	r4, r1
 801964c:	684b      	ldr	r3, [r1, #4]
 801964e:	bf16      	itet	ne
 8019650:	6063      	strne	r3, [r4, #4]
 8019652:	6013      	streq	r3, [r2, #0]
 8019654:	460c      	movne	r4, r1
 8019656:	e7eb      	b.n	8019630 <_malloc_r+0x64>
 8019658:	460c      	mov	r4, r1
 801965a:	6849      	ldr	r1, [r1, #4]
 801965c:	e7cc      	b.n	80195f8 <_malloc_r+0x2c>
 801965e:	1cc4      	adds	r4, r0, #3
 8019660:	f024 0403 	bic.w	r4, r4, #3
 8019664:	42a0      	cmp	r0, r4
 8019666:	d005      	beq.n	8019674 <_malloc_r+0xa8>
 8019668:	1a21      	subs	r1, r4, r0
 801966a:	4630      	mov	r0, r6
 801966c:	f000 fad0 	bl	8019c10 <_sbrk_r>
 8019670:	3001      	adds	r0, #1
 8019672:	d0cf      	beq.n	8019614 <_malloc_r+0x48>
 8019674:	6025      	str	r5, [r4, #0]
 8019676:	e7db      	b.n	8019630 <_malloc_r+0x64>
 8019678:	200122a4 	.word	0x200122a4
 801967c:	200122a8 	.word	0x200122a8

08019680 <__sfputc_r>:
 8019680:	6893      	ldr	r3, [r2, #8]
 8019682:	3b01      	subs	r3, #1
 8019684:	2b00      	cmp	r3, #0
 8019686:	b410      	push	{r4}
 8019688:	6093      	str	r3, [r2, #8]
 801968a:	da08      	bge.n	801969e <__sfputc_r+0x1e>
 801968c:	6994      	ldr	r4, [r2, #24]
 801968e:	42a3      	cmp	r3, r4
 8019690:	db01      	blt.n	8019696 <__sfputc_r+0x16>
 8019692:	290a      	cmp	r1, #10
 8019694:	d103      	bne.n	801969e <__sfputc_r+0x1e>
 8019696:	f85d 4b04 	ldr.w	r4, [sp], #4
 801969a:	f000 bb0d 	b.w	8019cb8 <__swbuf_r>
 801969e:	6813      	ldr	r3, [r2, #0]
 80196a0:	1c58      	adds	r0, r3, #1
 80196a2:	6010      	str	r0, [r2, #0]
 80196a4:	7019      	strb	r1, [r3, #0]
 80196a6:	4608      	mov	r0, r1
 80196a8:	f85d 4b04 	ldr.w	r4, [sp], #4
 80196ac:	4770      	bx	lr

080196ae <__sfputs_r>:
 80196ae:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80196b0:	4606      	mov	r6, r0
 80196b2:	460f      	mov	r7, r1
 80196b4:	4614      	mov	r4, r2
 80196b6:	18d5      	adds	r5, r2, r3
 80196b8:	42ac      	cmp	r4, r5
 80196ba:	d101      	bne.n	80196c0 <__sfputs_r+0x12>
 80196bc:	2000      	movs	r0, #0
 80196be:	e007      	b.n	80196d0 <__sfputs_r+0x22>
 80196c0:	463a      	mov	r2, r7
 80196c2:	f814 1b01 	ldrb.w	r1, [r4], #1
 80196c6:	4630      	mov	r0, r6
 80196c8:	f7ff ffda 	bl	8019680 <__sfputc_r>
 80196cc:	1c43      	adds	r3, r0, #1
 80196ce:	d1f3      	bne.n	80196b8 <__sfputs_r+0xa>
 80196d0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

080196d4 <_vfiprintf_r>:
 80196d4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80196d8:	460c      	mov	r4, r1
 80196da:	b09d      	sub	sp, #116	; 0x74
 80196dc:	4617      	mov	r7, r2
 80196de:	461d      	mov	r5, r3
 80196e0:	4606      	mov	r6, r0
 80196e2:	b118      	cbz	r0, 80196ec <_vfiprintf_r+0x18>
 80196e4:	6983      	ldr	r3, [r0, #24]
 80196e6:	b90b      	cbnz	r3, 80196ec <_vfiprintf_r+0x18>
 80196e8:	f000 fcfa 	bl	801a0e0 <__sinit>
 80196ec:	4b7c      	ldr	r3, [pc, #496]	; (80198e0 <_vfiprintf_r+0x20c>)
 80196ee:	429c      	cmp	r4, r3
 80196f0:	d158      	bne.n	80197a4 <_vfiprintf_r+0xd0>
 80196f2:	6874      	ldr	r4, [r6, #4]
 80196f4:	89a3      	ldrh	r3, [r4, #12]
 80196f6:	0718      	lsls	r0, r3, #28
 80196f8:	d55e      	bpl.n	80197b8 <_vfiprintf_r+0xe4>
 80196fa:	6923      	ldr	r3, [r4, #16]
 80196fc:	2b00      	cmp	r3, #0
 80196fe:	d05b      	beq.n	80197b8 <_vfiprintf_r+0xe4>
 8019700:	2300      	movs	r3, #0
 8019702:	9309      	str	r3, [sp, #36]	; 0x24
 8019704:	2320      	movs	r3, #32
 8019706:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 801970a:	2330      	movs	r3, #48	; 0x30
 801970c:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8019710:	9503      	str	r5, [sp, #12]
 8019712:	f04f 0b01 	mov.w	fp, #1
 8019716:	46b8      	mov	r8, r7
 8019718:	4645      	mov	r5, r8
 801971a:	f815 3b01 	ldrb.w	r3, [r5], #1
 801971e:	b10b      	cbz	r3, 8019724 <_vfiprintf_r+0x50>
 8019720:	2b25      	cmp	r3, #37	; 0x25
 8019722:	d154      	bne.n	80197ce <_vfiprintf_r+0xfa>
 8019724:	ebb8 0a07 	subs.w	sl, r8, r7
 8019728:	d00b      	beq.n	8019742 <_vfiprintf_r+0x6e>
 801972a:	4653      	mov	r3, sl
 801972c:	463a      	mov	r2, r7
 801972e:	4621      	mov	r1, r4
 8019730:	4630      	mov	r0, r6
 8019732:	f7ff ffbc 	bl	80196ae <__sfputs_r>
 8019736:	3001      	adds	r0, #1
 8019738:	f000 80c2 	beq.w	80198c0 <_vfiprintf_r+0x1ec>
 801973c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801973e:	4453      	add	r3, sl
 8019740:	9309      	str	r3, [sp, #36]	; 0x24
 8019742:	f898 3000 	ldrb.w	r3, [r8]
 8019746:	2b00      	cmp	r3, #0
 8019748:	f000 80ba 	beq.w	80198c0 <_vfiprintf_r+0x1ec>
 801974c:	2300      	movs	r3, #0
 801974e:	f04f 32ff 	mov.w	r2, #4294967295
 8019752:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8019756:	9304      	str	r3, [sp, #16]
 8019758:	9307      	str	r3, [sp, #28]
 801975a:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 801975e:	931a      	str	r3, [sp, #104]	; 0x68
 8019760:	46a8      	mov	r8, r5
 8019762:	2205      	movs	r2, #5
 8019764:	f818 1b01 	ldrb.w	r1, [r8], #1
 8019768:	485e      	ldr	r0, [pc, #376]	; (80198e4 <_vfiprintf_r+0x210>)
 801976a:	f7e6 fd41 	bl	80001f0 <memchr>
 801976e:	9b04      	ldr	r3, [sp, #16]
 8019770:	bb78      	cbnz	r0, 80197d2 <_vfiprintf_r+0xfe>
 8019772:	06d9      	lsls	r1, r3, #27
 8019774:	bf44      	itt	mi
 8019776:	2220      	movmi	r2, #32
 8019778:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
 801977c:	071a      	lsls	r2, r3, #28
 801977e:	bf44      	itt	mi
 8019780:	222b      	movmi	r2, #43	; 0x2b
 8019782:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
 8019786:	782a      	ldrb	r2, [r5, #0]
 8019788:	2a2a      	cmp	r2, #42	; 0x2a
 801978a:	d02a      	beq.n	80197e2 <_vfiprintf_r+0x10e>
 801978c:	9a07      	ldr	r2, [sp, #28]
 801978e:	46a8      	mov	r8, r5
 8019790:	2000      	movs	r0, #0
 8019792:	250a      	movs	r5, #10
 8019794:	4641      	mov	r1, r8
 8019796:	f811 3b01 	ldrb.w	r3, [r1], #1
 801979a:	3b30      	subs	r3, #48	; 0x30
 801979c:	2b09      	cmp	r3, #9
 801979e:	d969      	bls.n	8019874 <_vfiprintf_r+0x1a0>
 80197a0:	b360      	cbz	r0, 80197fc <_vfiprintf_r+0x128>
 80197a2:	e024      	b.n	80197ee <_vfiprintf_r+0x11a>
 80197a4:	4b50      	ldr	r3, [pc, #320]	; (80198e8 <_vfiprintf_r+0x214>)
 80197a6:	429c      	cmp	r4, r3
 80197a8:	d101      	bne.n	80197ae <_vfiprintf_r+0xda>
 80197aa:	68b4      	ldr	r4, [r6, #8]
 80197ac:	e7a2      	b.n	80196f4 <_vfiprintf_r+0x20>
 80197ae:	4b4f      	ldr	r3, [pc, #316]	; (80198ec <_vfiprintf_r+0x218>)
 80197b0:	429c      	cmp	r4, r3
 80197b2:	bf08      	it	eq
 80197b4:	68f4      	ldreq	r4, [r6, #12]
 80197b6:	e79d      	b.n	80196f4 <_vfiprintf_r+0x20>
 80197b8:	4621      	mov	r1, r4
 80197ba:	4630      	mov	r0, r6
 80197bc:	f000 face 	bl	8019d5c <__swsetup_r>
 80197c0:	2800      	cmp	r0, #0
 80197c2:	d09d      	beq.n	8019700 <_vfiprintf_r+0x2c>
 80197c4:	f04f 30ff 	mov.w	r0, #4294967295
 80197c8:	b01d      	add	sp, #116	; 0x74
 80197ca:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80197ce:	46a8      	mov	r8, r5
 80197d0:	e7a2      	b.n	8019718 <_vfiprintf_r+0x44>
 80197d2:	4a44      	ldr	r2, [pc, #272]	; (80198e4 <_vfiprintf_r+0x210>)
 80197d4:	1a80      	subs	r0, r0, r2
 80197d6:	fa0b f000 	lsl.w	r0, fp, r0
 80197da:	4318      	orrs	r0, r3
 80197dc:	9004      	str	r0, [sp, #16]
 80197de:	4645      	mov	r5, r8
 80197e0:	e7be      	b.n	8019760 <_vfiprintf_r+0x8c>
 80197e2:	9a03      	ldr	r2, [sp, #12]
 80197e4:	1d11      	adds	r1, r2, #4
 80197e6:	6812      	ldr	r2, [r2, #0]
 80197e8:	9103      	str	r1, [sp, #12]
 80197ea:	2a00      	cmp	r2, #0
 80197ec:	db01      	blt.n	80197f2 <_vfiprintf_r+0x11e>
 80197ee:	9207      	str	r2, [sp, #28]
 80197f0:	e004      	b.n	80197fc <_vfiprintf_r+0x128>
 80197f2:	4252      	negs	r2, r2
 80197f4:	f043 0302 	orr.w	r3, r3, #2
 80197f8:	9207      	str	r2, [sp, #28]
 80197fa:	9304      	str	r3, [sp, #16]
 80197fc:	f898 3000 	ldrb.w	r3, [r8]
 8019800:	2b2e      	cmp	r3, #46	; 0x2e
 8019802:	d10e      	bne.n	8019822 <_vfiprintf_r+0x14e>
 8019804:	f898 3001 	ldrb.w	r3, [r8, #1]
 8019808:	2b2a      	cmp	r3, #42	; 0x2a
 801980a:	d138      	bne.n	801987e <_vfiprintf_r+0x1aa>
 801980c:	9b03      	ldr	r3, [sp, #12]
 801980e:	1d1a      	adds	r2, r3, #4
 8019810:	681b      	ldr	r3, [r3, #0]
 8019812:	9203      	str	r2, [sp, #12]
 8019814:	2b00      	cmp	r3, #0
 8019816:	bfb8      	it	lt
 8019818:	f04f 33ff 	movlt.w	r3, #4294967295
 801981c:	f108 0802 	add.w	r8, r8, #2
 8019820:	9305      	str	r3, [sp, #20]
 8019822:	4d33      	ldr	r5, [pc, #204]	; (80198f0 <_vfiprintf_r+0x21c>)
 8019824:	f898 1000 	ldrb.w	r1, [r8]
 8019828:	2203      	movs	r2, #3
 801982a:	4628      	mov	r0, r5
 801982c:	f7e6 fce0 	bl	80001f0 <memchr>
 8019830:	b140      	cbz	r0, 8019844 <_vfiprintf_r+0x170>
 8019832:	2340      	movs	r3, #64	; 0x40
 8019834:	1b40      	subs	r0, r0, r5
 8019836:	fa03 f000 	lsl.w	r0, r3, r0
 801983a:	9b04      	ldr	r3, [sp, #16]
 801983c:	4303      	orrs	r3, r0
 801983e:	f108 0801 	add.w	r8, r8, #1
 8019842:	9304      	str	r3, [sp, #16]
 8019844:	f898 1000 	ldrb.w	r1, [r8]
 8019848:	482a      	ldr	r0, [pc, #168]	; (80198f4 <_vfiprintf_r+0x220>)
 801984a:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 801984e:	2206      	movs	r2, #6
 8019850:	f108 0701 	add.w	r7, r8, #1
 8019854:	f7e6 fccc 	bl	80001f0 <memchr>
 8019858:	2800      	cmp	r0, #0
 801985a:	d037      	beq.n	80198cc <_vfiprintf_r+0x1f8>
 801985c:	4b26      	ldr	r3, [pc, #152]	; (80198f8 <_vfiprintf_r+0x224>)
 801985e:	bb1b      	cbnz	r3, 80198a8 <_vfiprintf_r+0x1d4>
 8019860:	9b03      	ldr	r3, [sp, #12]
 8019862:	3307      	adds	r3, #7
 8019864:	f023 0307 	bic.w	r3, r3, #7
 8019868:	3308      	adds	r3, #8
 801986a:	9303      	str	r3, [sp, #12]
 801986c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801986e:	444b      	add	r3, r9
 8019870:	9309      	str	r3, [sp, #36]	; 0x24
 8019872:	e750      	b.n	8019716 <_vfiprintf_r+0x42>
 8019874:	fb05 3202 	mla	r2, r5, r2, r3
 8019878:	2001      	movs	r0, #1
 801987a:	4688      	mov	r8, r1
 801987c:	e78a      	b.n	8019794 <_vfiprintf_r+0xc0>
 801987e:	2300      	movs	r3, #0
 8019880:	f108 0801 	add.w	r8, r8, #1
 8019884:	9305      	str	r3, [sp, #20]
 8019886:	4619      	mov	r1, r3
 8019888:	250a      	movs	r5, #10
 801988a:	4640      	mov	r0, r8
 801988c:	f810 2b01 	ldrb.w	r2, [r0], #1
 8019890:	3a30      	subs	r2, #48	; 0x30
 8019892:	2a09      	cmp	r2, #9
 8019894:	d903      	bls.n	801989e <_vfiprintf_r+0x1ca>
 8019896:	2b00      	cmp	r3, #0
 8019898:	d0c3      	beq.n	8019822 <_vfiprintf_r+0x14e>
 801989a:	9105      	str	r1, [sp, #20]
 801989c:	e7c1      	b.n	8019822 <_vfiprintf_r+0x14e>
 801989e:	fb05 2101 	mla	r1, r5, r1, r2
 80198a2:	2301      	movs	r3, #1
 80198a4:	4680      	mov	r8, r0
 80198a6:	e7f0      	b.n	801988a <_vfiprintf_r+0x1b6>
 80198a8:	ab03      	add	r3, sp, #12
 80198aa:	9300      	str	r3, [sp, #0]
 80198ac:	4622      	mov	r2, r4
 80198ae:	4b13      	ldr	r3, [pc, #76]	; (80198fc <_vfiprintf_r+0x228>)
 80198b0:	a904      	add	r1, sp, #16
 80198b2:	4630      	mov	r0, r6
 80198b4:	f3af 8000 	nop.w
 80198b8:	f1b0 3fff 	cmp.w	r0, #4294967295
 80198bc:	4681      	mov	r9, r0
 80198be:	d1d5      	bne.n	801986c <_vfiprintf_r+0x198>
 80198c0:	89a3      	ldrh	r3, [r4, #12]
 80198c2:	065b      	lsls	r3, r3, #25
 80198c4:	f53f af7e 	bmi.w	80197c4 <_vfiprintf_r+0xf0>
 80198c8:	9809      	ldr	r0, [sp, #36]	; 0x24
 80198ca:	e77d      	b.n	80197c8 <_vfiprintf_r+0xf4>
 80198cc:	ab03      	add	r3, sp, #12
 80198ce:	9300      	str	r3, [sp, #0]
 80198d0:	4622      	mov	r2, r4
 80198d2:	4b0a      	ldr	r3, [pc, #40]	; (80198fc <_vfiprintf_r+0x228>)
 80198d4:	a904      	add	r1, sp, #16
 80198d6:	4630      	mov	r0, r6
 80198d8:	f000 f888 	bl	80199ec <_printf_i>
 80198dc:	e7ec      	b.n	80198b8 <_vfiprintf_r+0x1e4>
 80198de:	bf00      	nop
 80198e0:	0801d960 	.word	0x0801d960
 80198e4:	0801d908 	.word	0x0801d908
 80198e8:	0801d980 	.word	0x0801d980
 80198ec:	0801d940 	.word	0x0801d940
 80198f0:	0801d90e 	.word	0x0801d90e
 80198f4:	0801d912 	.word	0x0801d912
 80198f8:	00000000 	.word	0x00000000
 80198fc:	080196af 	.word	0x080196af

08019900 <_printf_common>:
 8019900:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8019904:	4691      	mov	r9, r2
 8019906:	461f      	mov	r7, r3
 8019908:	688a      	ldr	r2, [r1, #8]
 801990a:	690b      	ldr	r3, [r1, #16]
 801990c:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8019910:	4293      	cmp	r3, r2
 8019912:	bfb8      	it	lt
 8019914:	4613      	movlt	r3, r2
 8019916:	f8c9 3000 	str.w	r3, [r9]
 801991a:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 801991e:	4606      	mov	r6, r0
 8019920:	460c      	mov	r4, r1
 8019922:	b112      	cbz	r2, 801992a <_printf_common+0x2a>
 8019924:	3301      	adds	r3, #1
 8019926:	f8c9 3000 	str.w	r3, [r9]
 801992a:	6823      	ldr	r3, [r4, #0]
 801992c:	0699      	lsls	r1, r3, #26
 801992e:	bf42      	ittt	mi
 8019930:	f8d9 3000 	ldrmi.w	r3, [r9]
 8019934:	3302      	addmi	r3, #2
 8019936:	f8c9 3000 	strmi.w	r3, [r9]
 801993a:	6825      	ldr	r5, [r4, #0]
 801993c:	f015 0506 	ands.w	r5, r5, #6
 8019940:	d107      	bne.n	8019952 <_printf_common+0x52>
 8019942:	f104 0a19 	add.w	sl, r4, #25
 8019946:	68e3      	ldr	r3, [r4, #12]
 8019948:	f8d9 2000 	ldr.w	r2, [r9]
 801994c:	1a9b      	subs	r3, r3, r2
 801994e:	42ab      	cmp	r3, r5
 8019950:	dc28      	bgt.n	80199a4 <_printf_common+0xa4>
 8019952:	f894 3043 	ldrb.w	r3, [r4, #67]	; 0x43
 8019956:	6822      	ldr	r2, [r4, #0]
 8019958:	3300      	adds	r3, #0
 801995a:	bf18      	it	ne
 801995c:	2301      	movne	r3, #1
 801995e:	0692      	lsls	r2, r2, #26
 8019960:	d42d      	bmi.n	80199be <_printf_common+0xbe>
 8019962:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8019966:	4639      	mov	r1, r7
 8019968:	4630      	mov	r0, r6
 801996a:	47c0      	blx	r8
 801996c:	3001      	adds	r0, #1
 801996e:	d020      	beq.n	80199b2 <_printf_common+0xb2>
 8019970:	6823      	ldr	r3, [r4, #0]
 8019972:	68e5      	ldr	r5, [r4, #12]
 8019974:	f8d9 2000 	ldr.w	r2, [r9]
 8019978:	f003 0306 	and.w	r3, r3, #6
 801997c:	2b04      	cmp	r3, #4
 801997e:	bf08      	it	eq
 8019980:	1aad      	subeq	r5, r5, r2
 8019982:	68a3      	ldr	r3, [r4, #8]
 8019984:	6922      	ldr	r2, [r4, #16]
 8019986:	bf0c      	ite	eq
 8019988:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 801998c:	2500      	movne	r5, #0
 801998e:	4293      	cmp	r3, r2
 8019990:	bfc4      	itt	gt
 8019992:	1a9b      	subgt	r3, r3, r2
 8019994:	18ed      	addgt	r5, r5, r3
 8019996:	f04f 0900 	mov.w	r9, #0
 801999a:	341a      	adds	r4, #26
 801999c:	454d      	cmp	r5, r9
 801999e:	d11a      	bne.n	80199d6 <_printf_common+0xd6>
 80199a0:	2000      	movs	r0, #0
 80199a2:	e008      	b.n	80199b6 <_printf_common+0xb6>
 80199a4:	2301      	movs	r3, #1
 80199a6:	4652      	mov	r2, sl
 80199a8:	4639      	mov	r1, r7
 80199aa:	4630      	mov	r0, r6
 80199ac:	47c0      	blx	r8
 80199ae:	3001      	adds	r0, #1
 80199b0:	d103      	bne.n	80199ba <_printf_common+0xba>
 80199b2:	f04f 30ff 	mov.w	r0, #4294967295
 80199b6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80199ba:	3501      	adds	r5, #1
 80199bc:	e7c3      	b.n	8019946 <_printf_common+0x46>
 80199be:	18e1      	adds	r1, r4, r3
 80199c0:	1c5a      	adds	r2, r3, #1
 80199c2:	2030      	movs	r0, #48	; 0x30
 80199c4:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 80199c8:	4422      	add	r2, r4
 80199ca:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 80199ce:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 80199d2:	3302      	adds	r3, #2
 80199d4:	e7c5      	b.n	8019962 <_printf_common+0x62>
 80199d6:	2301      	movs	r3, #1
 80199d8:	4622      	mov	r2, r4
 80199da:	4639      	mov	r1, r7
 80199dc:	4630      	mov	r0, r6
 80199de:	47c0      	blx	r8
 80199e0:	3001      	adds	r0, #1
 80199e2:	d0e6      	beq.n	80199b2 <_printf_common+0xb2>
 80199e4:	f109 0901 	add.w	r9, r9, #1
 80199e8:	e7d8      	b.n	801999c <_printf_common+0x9c>
	...

080199ec <_printf_i>:
 80199ec:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80199f0:	f101 0c43 	add.w	ip, r1, #67	; 0x43
 80199f4:	460c      	mov	r4, r1
 80199f6:	7e09      	ldrb	r1, [r1, #24]
 80199f8:	b085      	sub	sp, #20
 80199fa:	296e      	cmp	r1, #110	; 0x6e
 80199fc:	4617      	mov	r7, r2
 80199fe:	4606      	mov	r6, r0
 8019a00:	4698      	mov	r8, r3
 8019a02:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8019a04:	f000 80b3 	beq.w	8019b6e <_printf_i+0x182>
 8019a08:	d822      	bhi.n	8019a50 <_printf_i+0x64>
 8019a0a:	2963      	cmp	r1, #99	; 0x63
 8019a0c:	d036      	beq.n	8019a7c <_printf_i+0x90>
 8019a0e:	d80a      	bhi.n	8019a26 <_printf_i+0x3a>
 8019a10:	2900      	cmp	r1, #0
 8019a12:	f000 80b9 	beq.w	8019b88 <_printf_i+0x19c>
 8019a16:	2958      	cmp	r1, #88	; 0x58
 8019a18:	f000 8083 	beq.w	8019b22 <_printf_i+0x136>
 8019a1c:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8019a20:	f884 1042 	strb.w	r1, [r4, #66]	; 0x42
 8019a24:	e032      	b.n	8019a8c <_printf_i+0xa0>
 8019a26:	2964      	cmp	r1, #100	; 0x64
 8019a28:	d001      	beq.n	8019a2e <_printf_i+0x42>
 8019a2a:	2969      	cmp	r1, #105	; 0x69
 8019a2c:	d1f6      	bne.n	8019a1c <_printf_i+0x30>
 8019a2e:	6820      	ldr	r0, [r4, #0]
 8019a30:	6813      	ldr	r3, [r2, #0]
 8019a32:	0605      	lsls	r5, r0, #24
 8019a34:	f103 0104 	add.w	r1, r3, #4
 8019a38:	d52a      	bpl.n	8019a90 <_printf_i+0xa4>
 8019a3a:	681b      	ldr	r3, [r3, #0]
 8019a3c:	6011      	str	r1, [r2, #0]
 8019a3e:	2b00      	cmp	r3, #0
 8019a40:	da03      	bge.n	8019a4a <_printf_i+0x5e>
 8019a42:	222d      	movs	r2, #45	; 0x2d
 8019a44:	425b      	negs	r3, r3
 8019a46:	f884 2043 	strb.w	r2, [r4, #67]	; 0x43
 8019a4a:	486f      	ldr	r0, [pc, #444]	; (8019c08 <_printf_i+0x21c>)
 8019a4c:	220a      	movs	r2, #10
 8019a4e:	e039      	b.n	8019ac4 <_printf_i+0xd8>
 8019a50:	2973      	cmp	r1, #115	; 0x73
 8019a52:	f000 809d 	beq.w	8019b90 <_printf_i+0x1a4>
 8019a56:	d808      	bhi.n	8019a6a <_printf_i+0x7e>
 8019a58:	296f      	cmp	r1, #111	; 0x6f
 8019a5a:	d020      	beq.n	8019a9e <_printf_i+0xb2>
 8019a5c:	2970      	cmp	r1, #112	; 0x70
 8019a5e:	d1dd      	bne.n	8019a1c <_printf_i+0x30>
 8019a60:	6823      	ldr	r3, [r4, #0]
 8019a62:	f043 0320 	orr.w	r3, r3, #32
 8019a66:	6023      	str	r3, [r4, #0]
 8019a68:	e003      	b.n	8019a72 <_printf_i+0x86>
 8019a6a:	2975      	cmp	r1, #117	; 0x75
 8019a6c:	d017      	beq.n	8019a9e <_printf_i+0xb2>
 8019a6e:	2978      	cmp	r1, #120	; 0x78
 8019a70:	d1d4      	bne.n	8019a1c <_printf_i+0x30>
 8019a72:	2378      	movs	r3, #120	; 0x78
 8019a74:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 8019a78:	4864      	ldr	r0, [pc, #400]	; (8019c0c <_printf_i+0x220>)
 8019a7a:	e055      	b.n	8019b28 <_printf_i+0x13c>
 8019a7c:	6813      	ldr	r3, [r2, #0]
 8019a7e:	1d19      	adds	r1, r3, #4
 8019a80:	681b      	ldr	r3, [r3, #0]
 8019a82:	6011      	str	r1, [r2, #0]
 8019a84:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8019a88:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8019a8c:	2301      	movs	r3, #1
 8019a8e:	e08c      	b.n	8019baa <_printf_i+0x1be>
 8019a90:	681b      	ldr	r3, [r3, #0]
 8019a92:	6011      	str	r1, [r2, #0]
 8019a94:	f010 0f40 	tst.w	r0, #64	; 0x40
 8019a98:	bf18      	it	ne
 8019a9a:	b21b      	sxthne	r3, r3
 8019a9c:	e7cf      	b.n	8019a3e <_printf_i+0x52>
 8019a9e:	6813      	ldr	r3, [r2, #0]
 8019aa0:	6825      	ldr	r5, [r4, #0]
 8019aa2:	1d18      	adds	r0, r3, #4
 8019aa4:	6010      	str	r0, [r2, #0]
 8019aa6:	0628      	lsls	r0, r5, #24
 8019aa8:	d501      	bpl.n	8019aae <_printf_i+0xc2>
 8019aaa:	681b      	ldr	r3, [r3, #0]
 8019aac:	e002      	b.n	8019ab4 <_printf_i+0xc8>
 8019aae:	0668      	lsls	r0, r5, #25
 8019ab0:	d5fb      	bpl.n	8019aaa <_printf_i+0xbe>
 8019ab2:	881b      	ldrh	r3, [r3, #0]
 8019ab4:	4854      	ldr	r0, [pc, #336]	; (8019c08 <_printf_i+0x21c>)
 8019ab6:	296f      	cmp	r1, #111	; 0x6f
 8019ab8:	bf14      	ite	ne
 8019aba:	220a      	movne	r2, #10
 8019abc:	2208      	moveq	r2, #8
 8019abe:	2100      	movs	r1, #0
 8019ac0:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 8019ac4:	6865      	ldr	r5, [r4, #4]
 8019ac6:	60a5      	str	r5, [r4, #8]
 8019ac8:	2d00      	cmp	r5, #0
 8019aca:	f2c0 8095 	blt.w	8019bf8 <_printf_i+0x20c>
 8019ace:	6821      	ldr	r1, [r4, #0]
 8019ad0:	f021 0104 	bic.w	r1, r1, #4
 8019ad4:	6021      	str	r1, [r4, #0]
 8019ad6:	2b00      	cmp	r3, #0
 8019ad8:	d13d      	bne.n	8019b56 <_printf_i+0x16a>
 8019ada:	2d00      	cmp	r5, #0
 8019adc:	f040 808e 	bne.w	8019bfc <_printf_i+0x210>
 8019ae0:	4665      	mov	r5, ip
 8019ae2:	2a08      	cmp	r2, #8
 8019ae4:	d10b      	bne.n	8019afe <_printf_i+0x112>
 8019ae6:	6823      	ldr	r3, [r4, #0]
 8019ae8:	07db      	lsls	r3, r3, #31
 8019aea:	d508      	bpl.n	8019afe <_printf_i+0x112>
 8019aec:	6923      	ldr	r3, [r4, #16]
 8019aee:	6862      	ldr	r2, [r4, #4]
 8019af0:	429a      	cmp	r2, r3
 8019af2:	bfde      	ittt	le
 8019af4:	2330      	movle	r3, #48	; 0x30
 8019af6:	f805 3c01 	strble.w	r3, [r5, #-1]
 8019afa:	f105 35ff 	addle.w	r5, r5, #4294967295
 8019afe:	ebac 0305 	sub.w	r3, ip, r5
 8019b02:	6123      	str	r3, [r4, #16]
 8019b04:	f8cd 8000 	str.w	r8, [sp]
 8019b08:	463b      	mov	r3, r7
 8019b0a:	aa03      	add	r2, sp, #12
 8019b0c:	4621      	mov	r1, r4
 8019b0e:	4630      	mov	r0, r6
 8019b10:	f7ff fef6 	bl	8019900 <_printf_common>
 8019b14:	3001      	adds	r0, #1
 8019b16:	d14d      	bne.n	8019bb4 <_printf_i+0x1c8>
 8019b18:	f04f 30ff 	mov.w	r0, #4294967295
 8019b1c:	b005      	add	sp, #20
 8019b1e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8019b22:	4839      	ldr	r0, [pc, #228]	; (8019c08 <_printf_i+0x21c>)
 8019b24:	f884 1045 	strb.w	r1, [r4, #69]	; 0x45
 8019b28:	6813      	ldr	r3, [r2, #0]
 8019b2a:	6821      	ldr	r1, [r4, #0]
 8019b2c:	1d1d      	adds	r5, r3, #4
 8019b2e:	681b      	ldr	r3, [r3, #0]
 8019b30:	6015      	str	r5, [r2, #0]
 8019b32:	060a      	lsls	r2, r1, #24
 8019b34:	d50b      	bpl.n	8019b4e <_printf_i+0x162>
 8019b36:	07ca      	lsls	r2, r1, #31
 8019b38:	bf44      	itt	mi
 8019b3a:	f041 0120 	orrmi.w	r1, r1, #32
 8019b3e:	6021      	strmi	r1, [r4, #0]
 8019b40:	b91b      	cbnz	r3, 8019b4a <_printf_i+0x15e>
 8019b42:	6822      	ldr	r2, [r4, #0]
 8019b44:	f022 0220 	bic.w	r2, r2, #32
 8019b48:	6022      	str	r2, [r4, #0]
 8019b4a:	2210      	movs	r2, #16
 8019b4c:	e7b7      	b.n	8019abe <_printf_i+0xd2>
 8019b4e:	064d      	lsls	r5, r1, #25
 8019b50:	bf48      	it	mi
 8019b52:	b29b      	uxthmi	r3, r3
 8019b54:	e7ef      	b.n	8019b36 <_printf_i+0x14a>
 8019b56:	4665      	mov	r5, ip
 8019b58:	fbb3 f1f2 	udiv	r1, r3, r2
 8019b5c:	fb02 3311 	mls	r3, r2, r1, r3
 8019b60:	5cc3      	ldrb	r3, [r0, r3]
 8019b62:	f805 3d01 	strb.w	r3, [r5, #-1]!
 8019b66:	460b      	mov	r3, r1
 8019b68:	2900      	cmp	r1, #0
 8019b6a:	d1f5      	bne.n	8019b58 <_printf_i+0x16c>
 8019b6c:	e7b9      	b.n	8019ae2 <_printf_i+0xf6>
 8019b6e:	6813      	ldr	r3, [r2, #0]
 8019b70:	6825      	ldr	r5, [r4, #0]
 8019b72:	6961      	ldr	r1, [r4, #20]
 8019b74:	1d18      	adds	r0, r3, #4
 8019b76:	6010      	str	r0, [r2, #0]
 8019b78:	0628      	lsls	r0, r5, #24
 8019b7a:	681b      	ldr	r3, [r3, #0]
 8019b7c:	d501      	bpl.n	8019b82 <_printf_i+0x196>
 8019b7e:	6019      	str	r1, [r3, #0]
 8019b80:	e002      	b.n	8019b88 <_printf_i+0x19c>
 8019b82:	066a      	lsls	r2, r5, #25
 8019b84:	d5fb      	bpl.n	8019b7e <_printf_i+0x192>
 8019b86:	8019      	strh	r1, [r3, #0]
 8019b88:	2300      	movs	r3, #0
 8019b8a:	6123      	str	r3, [r4, #16]
 8019b8c:	4665      	mov	r5, ip
 8019b8e:	e7b9      	b.n	8019b04 <_printf_i+0x118>
 8019b90:	6813      	ldr	r3, [r2, #0]
 8019b92:	1d19      	adds	r1, r3, #4
 8019b94:	6011      	str	r1, [r2, #0]
 8019b96:	681d      	ldr	r5, [r3, #0]
 8019b98:	6862      	ldr	r2, [r4, #4]
 8019b9a:	2100      	movs	r1, #0
 8019b9c:	4628      	mov	r0, r5
 8019b9e:	f7e6 fb27 	bl	80001f0 <memchr>
 8019ba2:	b108      	cbz	r0, 8019ba8 <_printf_i+0x1bc>
 8019ba4:	1b40      	subs	r0, r0, r5
 8019ba6:	6060      	str	r0, [r4, #4]
 8019ba8:	6863      	ldr	r3, [r4, #4]
 8019baa:	6123      	str	r3, [r4, #16]
 8019bac:	2300      	movs	r3, #0
 8019bae:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8019bb2:	e7a7      	b.n	8019b04 <_printf_i+0x118>
 8019bb4:	6923      	ldr	r3, [r4, #16]
 8019bb6:	462a      	mov	r2, r5
 8019bb8:	4639      	mov	r1, r7
 8019bba:	4630      	mov	r0, r6
 8019bbc:	47c0      	blx	r8
 8019bbe:	3001      	adds	r0, #1
 8019bc0:	d0aa      	beq.n	8019b18 <_printf_i+0x12c>
 8019bc2:	6823      	ldr	r3, [r4, #0]
 8019bc4:	079b      	lsls	r3, r3, #30
 8019bc6:	d413      	bmi.n	8019bf0 <_printf_i+0x204>
 8019bc8:	68e0      	ldr	r0, [r4, #12]
 8019bca:	9b03      	ldr	r3, [sp, #12]
 8019bcc:	4298      	cmp	r0, r3
 8019bce:	bfb8      	it	lt
 8019bd0:	4618      	movlt	r0, r3
 8019bd2:	e7a3      	b.n	8019b1c <_printf_i+0x130>
 8019bd4:	2301      	movs	r3, #1
 8019bd6:	464a      	mov	r2, r9
 8019bd8:	4639      	mov	r1, r7
 8019bda:	4630      	mov	r0, r6
 8019bdc:	47c0      	blx	r8
 8019bde:	3001      	adds	r0, #1
 8019be0:	d09a      	beq.n	8019b18 <_printf_i+0x12c>
 8019be2:	3501      	adds	r5, #1
 8019be4:	68e3      	ldr	r3, [r4, #12]
 8019be6:	9a03      	ldr	r2, [sp, #12]
 8019be8:	1a9b      	subs	r3, r3, r2
 8019bea:	42ab      	cmp	r3, r5
 8019bec:	dcf2      	bgt.n	8019bd4 <_printf_i+0x1e8>
 8019bee:	e7eb      	b.n	8019bc8 <_printf_i+0x1dc>
 8019bf0:	2500      	movs	r5, #0
 8019bf2:	f104 0919 	add.w	r9, r4, #25
 8019bf6:	e7f5      	b.n	8019be4 <_printf_i+0x1f8>
 8019bf8:	2b00      	cmp	r3, #0
 8019bfa:	d1ac      	bne.n	8019b56 <_printf_i+0x16a>
 8019bfc:	7803      	ldrb	r3, [r0, #0]
 8019bfe:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8019c02:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8019c06:	e76c      	b.n	8019ae2 <_printf_i+0xf6>
 8019c08:	0801d919 	.word	0x0801d919
 8019c0c:	0801d92a 	.word	0x0801d92a

08019c10 <_sbrk_r>:
 8019c10:	b538      	push	{r3, r4, r5, lr}
 8019c12:	4c06      	ldr	r4, [pc, #24]	; (8019c2c <_sbrk_r+0x1c>)
 8019c14:	2300      	movs	r3, #0
 8019c16:	4605      	mov	r5, r0
 8019c18:	4608      	mov	r0, r1
 8019c1a:	6023      	str	r3, [r4, #0]
 8019c1c:	f7e8 febc 	bl	8002998 <_sbrk>
 8019c20:	1c43      	adds	r3, r0, #1
 8019c22:	d102      	bne.n	8019c2a <_sbrk_r+0x1a>
 8019c24:	6823      	ldr	r3, [r4, #0]
 8019c26:	b103      	cbz	r3, 8019c2a <_sbrk_r+0x1a>
 8019c28:	602b      	str	r3, [r5, #0]
 8019c2a:	bd38      	pop	{r3, r4, r5, pc}
 8019c2c:	2001297c 	.word	0x2001297c

08019c30 <_raise_r>:
 8019c30:	291f      	cmp	r1, #31
 8019c32:	b538      	push	{r3, r4, r5, lr}
 8019c34:	4604      	mov	r4, r0
 8019c36:	460d      	mov	r5, r1
 8019c38:	d904      	bls.n	8019c44 <_raise_r+0x14>
 8019c3a:	2316      	movs	r3, #22
 8019c3c:	6003      	str	r3, [r0, #0]
 8019c3e:	f04f 30ff 	mov.w	r0, #4294967295
 8019c42:	bd38      	pop	{r3, r4, r5, pc}
 8019c44:	6c42      	ldr	r2, [r0, #68]	; 0x44
 8019c46:	b112      	cbz	r2, 8019c4e <_raise_r+0x1e>
 8019c48:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 8019c4c:	b94b      	cbnz	r3, 8019c62 <_raise_r+0x32>
 8019c4e:	4620      	mov	r0, r4
 8019c50:	f000 f830 	bl	8019cb4 <_getpid_r>
 8019c54:	462a      	mov	r2, r5
 8019c56:	4601      	mov	r1, r0
 8019c58:	4620      	mov	r0, r4
 8019c5a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8019c5e:	f000 b817 	b.w	8019c90 <_kill_r>
 8019c62:	2b01      	cmp	r3, #1
 8019c64:	d00a      	beq.n	8019c7c <_raise_r+0x4c>
 8019c66:	1c59      	adds	r1, r3, #1
 8019c68:	d103      	bne.n	8019c72 <_raise_r+0x42>
 8019c6a:	2316      	movs	r3, #22
 8019c6c:	6003      	str	r3, [r0, #0]
 8019c6e:	2001      	movs	r0, #1
 8019c70:	e7e7      	b.n	8019c42 <_raise_r+0x12>
 8019c72:	2400      	movs	r4, #0
 8019c74:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
 8019c78:	4628      	mov	r0, r5
 8019c7a:	4798      	blx	r3
 8019c7c:	2000      	movs	r0, #0
 8019c7e:	e7e0      	b.n	8019c42 <_raise_r+0x12>

08019c80 <raise>:
 8019c80:	4b02      	ldr	r3, [pc, #8]	; (8019c8c <raise+0xc>)
 8019c82:	4601      	mov	r1, r0
 8019c84:	6818      	ldr	r0, [r3, #0]
 8019c86:	f7ff bfd3 	b.w	8019c30 <_raise_r>
 8019c8a:	bf00      	nop
 8019c8c:	2000010c 	.word	0x2000010c

08019c90 <_kill_r>:
 8019c90:	b538      	push	{r3, r4, r5, lr}
 8019c92:	4c07      	ldr	r4, [pc, #28]	; (8019cb0 <_kill_r+0x20>)
 8019c94:	2300      	movs	r3, #0
 8019c96:	4605      	mov	r5, r0
 8019c98:	4608      	mov	r0, r1
 8019c9a:	4611      	mov	r1, r2
 8019c9c:	6023      	str	r3, [r4, #0]
 8019c9e:	f7e8 fe45 	bl	800292c <_kill>
 8019ca2:	1c43      	adds	r3, r0, #1
 8019ca4:	d102      	bne.n	8019cac <_kill_r+0x1c>
 8019ca6:	6823      	ldr	r3, [r4, #0]
 8019ca8:	b103      	cbz	r3, 8019cac <_kill_r+0x1c>
 8019caa:	602b      	str	r3, [r5, #0]
 8019cac:	bd38      	pop	{r3, r4, r5, pc}
 8019cae:	bf00      	nop
 8019cb0:	2001297c 	.word	0x2001297c

08019cb4 <_getpid_r>:
 8019cb4:	f7e8 be38 	b.w	8002928 <_getpid>

08019cb8 <__swbuf_r>:
 8019cb8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8019cba:	460e      	mov	r6, r1
 8019cbc:	4614      	mov	r4, r2
 8019cbe:	4605      	mov	r5, r0
 8019cc0:	b118      	cbz	r0, 8019cca <__swbuf_r+0x12>
 8019cc2:	6983      	ldr	r3, [r0, #24]
 8019cc4:	b90b      	cbnz	r3, 8019cca <__swbuf_r+0x12>
 8019cc6:	f000 fa0b 	bl	801a0e0 <__sinit>
 8019cca:	4b21      	ldr	r3, [pc, #132]	; (8019d50 <__swbuf_r+0x98>)
 8019ccc:	429c      	cmp	r4, r3
 8019cce:	d12a      	bne.n	8019d26 <__swbuf_r+0x6e>
 8019cd0:	686c      	ldr	r4, [r5, #4]
 8019cd2:	69a3      	ldr	r3, [r4, #24]
 8019cd4:	60a3      	str	r3, [r4, #8]
 8019cd6:	89a3      	ldrh	r3, [r4, #12]
 8019cd8:	071a      	lsls	r2, r3, #28
 8019cda:	d52e      	bpl.n	8019d3a <__swbuf_r+0x82>
 8019cdc:	6923      	ldr	r3, [r4, #16]
 8019cde:	b363      	cbz	r3, 8019d3a <__swbuf_r+0x82>
 8019ce0:	6923      	ldr	r3, [r4, #16]
 8019ce2:	6820      	ldr	r0, [r4, #0]
 8019ce4:	1ac0      	subs	r0, r0, r3
 8019ce6:	6963      	ldr	r3, [r4, #20]
 8019ce8:	b2f6      	uxtb	r6, r6
 8019cea:	4283      	cmp	r3, r0
 8019cec:	4637      	mov	r7, r6
 8019cee:	dc04      	bgt.n	8019cfa <__swbuf_r+0x42>
 8019cf0:	4621      	mov	r1, r4
 8019cf2:	4628      	mov	r0, r5
 8019cf4:	f000 f98a 	bl	801a00c <_fflush_r>
 8019cf8:	bb28      	cbnz	r0, 8019d46 <__swbuf_r+0x8e>
 8019cfa:	68a3      	ldr	r3, [r4, #8]
 8019cfc:	3b01      	subs	r3, #1
 8019cfe:	60a3      	str	r3, [r4, #8]
 8019d00:	6823      	ldr	r3, [r4, #0]
 8019d02:	1c5a      	adds	r2, r3, #1
 8019d04:	6022      	str	r2, [r4, #0]
 8019d06:	701e      	strb	r6, [r3, #0]
 8019d08:	6963      	ldr	r3, [r4, #20]
 8019d0a:	3001      	adds	r0, #1
 8019d0c:	4283      	cmp	r3, r0
 8019d0e:	d004      	beq.n	8019d1a <__swbuf_r+0x62>
 8019d10:	89a3      	ldrh	r3, [r4, #12]
 8019d12:	07db      	lsls	r3, r3, #31
 8019d14:	d519      	bpl.n	8019d4a <__swbuf_r+0x92>
 8019d16:	2e0a      	cmp	r6, #10
 8019d18:	d117      	bne.n	8019d4a <__swbuf_r+0x92>
 8019d1a:	4621      	mov	r1, r4
 8019d1c:	4628      	mov	r0, r5
 8019d1e:	f000 f975 	bl	801a00c <_fflush_r>
 8019d22:	b190      	cbz	r0, 8019d4a <__swbuf_r+0x92>
 8019d24:	e00f      	b.n	8019d46 <__swbuf_r+0x8e>
 8019d26:	4b0b      	ldr	r3, [pc, #44]	; (8019d54 <__swbuf_r+0x9c>)
 8019d28:	429c      	cmp	r4, r3
 8019d2a:	d101      	bne.n	8019d30 <__swbuf_r+0x78>
 8019d2c:	68ac      	ldr	r4, [r5, #8]
 8019d2e:	e7d0      	b.n	8019cd2 <__swbuf_r+0x1a>
 8019d30:	4b09      	ldr	r3, [pc, #36]	; (8019d58 <__swbuf_r+0xa0>)
 8019d32:	429c      	cmp	r4, r3
 8019d34:	bf08      	it	eq
 8019d36:	68ec      	ldreq	r4, [r5, #12]
 8019d38:	e7cb      	b.n	8019cd2 <__swbuf_r+0x1a>
 8019d3a:	4621      	mov	r1, r4
 8019d3c:	4628      	mov	r0, r5
 8019d3e:	f000 f80d 	bl	8019d5c <__swsetup_r>
 8019d42:	2800      	cmp	r0, #0
 8019d44:	d0cc      	beq.n	8019ce0 <__swbuf_r+0x28>
 8019d46:	f04f 37ff 	mov.w	r7, #4294967295
 8019d4a:	4638      	mov	r0, r7
 8019d4c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8019d4e:	bf00      	nop
 8019d50:	0801d960 	.word	0x0801d960
 8019d54:	0801d980 	.word	0x0801d980
 8019d58:	0801d940 	.word	0x0801d940

08019d5c <__swsetup_r>:
 8019d5c:	4b32      	ldr	r3, [pc, #200]	; (8019e28 <__swsetup_r+0xcc>)
 8019d5e:	b570      	push	{r4, r5, r6, lr}
 8019d60:	681d      	ldr	r5, [r3, #0]
 8019d62:	4606      	mov	r6, r0
 8019d64:	460c      	mov	r4, r1
 8019d66:	b125      	cbz	r5, 8019d72 <__swsetup_r+0x16>
 8019d68:	69ab      	ldr	r3, [r5, #24]
 8019d6a:	b913      	cbnz	r3, 8019d72 <__swsetup_r+0x16>
 8019d6c:	4628      	mov	r0, r5
 8019d6e:	f000 f9b7 	bl	801a0e0 <__sinit>
 8019d72:	4b2e      	ldr	r3, [pc, #184]	; (8019e2c <__swsetup_r+0xd0>)
 8019d74:	429c      	cmp	r4, r3
 8019d76:	d10f      	bne.n	8019d98 <__swsetup_r+0x3c>
 8019d78:	686c      	ldr	r4, [r5, #4]
 8019d7a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8019d7e:	b29a      	uxth	r2, r3
 8019d80:	0715      	lsls	r5, r2, #28
 8019d82:	d42c      	bmi.n	8019dde <__swsetup_r+0x82>
 8019d84:	06d0      	lsls	r0, r2, #27
 8019d86:	d411      	bmi.n	8019dac <__swsetup_r+0x50>
 8019d88:	2209      	movs	r2, #9
 8019d8a:	6032      	str	r2, [r6, #0]
 8019d8c:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8019d90:	81a3      	strh	r3, [r4, #12]
 8019d92:	f04f 30ff 	mov.w	r0, #4294967295
 8019d96:	e03e      	b.n	8019e16 <__swsetup_r+0xba>
 8019d98:	4b25      	ldr	r3, [pc, #148]	; (8019e30 <__swsetup_r+0xd4>)
 8019d9a:	429c      	cmp	r4, r3
 8019d9c:	d101      	bne.n	8019da2 <__swsetup_r+0x46>
 8019d9e:	68ac      	ldr	r4, [r5, #8]
 8019da0:	e7eb      	b.n	8019d7a <__swsetup_r+0x1e>
 8019da2:	4b24      	ldr	r3, [pc, #144]	; (8019e34 <__swsetup_r+0xd8>)
 8019da4:	429c      	cmp	r4, r3
 8019da6:	bf08      	it	eq
 8019da8:	68ec      	ldreq	r4, [r5, #12]
 8019daa:	e7e6      	b.n	8019d7a <__swsetup_r+0x1e>
 8019dac:	0751      	lsls	r1, r2, #29
 8019dae:	d512      	bpl.n	8019dd6 <__swsetup_r+0x7a>
 8019db0:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8019db2:	b141      	cbz	r1, 8019dc6 <__swsetup_r+0x6a>
 8019db4:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8019db8:	4299      	cmp	r1, r3
 8019dba:	d002      	beq.n	8019dc2 <__swsetup_r+0x66>
 8019dbc:	4630      	mov	r0, r6
 8019dbe:	f7ff fbb7 	bl	8019530 <_free_r>
 8019dc2:	2300      	movs	r3, #0
 8019dc4:	6363      	str	r3, [r4, #52]	; 0x34
 8019dc6:	89a3      	ldrh	r3, [r4, #12]
 8019dc8:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 8019dcc:	81a3      	strh	r3, [r4, #12]
 8019dce:	2300      	movs	r3, #0
 8019dd0:	6063      	str	r3, [r4, #4]
 8019dd2:	6923      	ldr	r3, [r4, #16]
 8019dd4:	6023      	str	r3, [r4, #0]
 8019dd6:	89a3      	ldrh	r3, [r4, #12]
 8019dd8:	f043 0308 	orr.w	r3, r3, #8
 8019ddc:	81a3      	strh	r3, [r4, #12]
 8019dde:	6923      	ldr	r3, [r4, #16]
 8019de0:	b94b      	cbnz	r3, 8019df6 <__swsetup_r+0x9a>
 8019de2:	89a3      	ldrh	r3, [r4, #12]
 8019de4:	f403 7320 	and.w	r3, r3, #640	; 0x280
 8019de8:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8019dec:	d003      	beq.n	8019df6 <__swsetup_r+0x9a>
 8019dee:	4621      	mov	r1, r4
 8019df0:	4630      	mov	r0, r6
 8019df2:	f000 fa23 	bl	801a23c <__smakebuf_r>
 8019df6:	89a2      	ldrh	r2, [r4, #12]
 8019df8:	f012 0301 	ands.w	r3, r2, #1
 8019dfc:	d00c      	beq.n	8019e18 <__swsetup_r+0xbc>
 8019dfe:	2300      	movs	r3, #0
 8019e00:	60a3      	str	r3, [r4, #8]
 8019e02:	6963      	ldr	r3, [r4, #20]
 8019e04:	425b      	negs	r3, r3
 8019e06:	61a3      	str	r3, [r4, #24]
 8019e08:	6923      	ldr	r3, [r4, #16]
 8019e0a:	b953      	cbnz	r3, 8019e22 <__swsetup_r+0xc6>
 8019e0c:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8019e10:	f013 0080 	ands.w	r0, r3, #128	; 0x80
 8019e14:	d1ba      	bne.n	8019d8c <__swsetup_r+0x30>
 8019e16:	bd70      	pop	{r4, r5, r6, pc}
 8019e18:	0792      	lsls	r2, r2, #30
 8019e1a:	bf58      	it	pl
 8019e1c:	6963      	ldrpl	r3, [r4, #20]
 8019e1e:	60a3      	str	r3, [r4, #8]
 8019e20:	e7f2      	b.n	8019e08 <__swsetup_r+0xac>
 8019e22:	2000      	movs	r0, #0
 8019e24:	e7f7      	b.n	8019e16 <__swsetup_r+0xba>
 8019e26:	bf00      	nop
 8019e28:	2000010c 	.word	0x2000010c
 8019e2c:	0801d960 	.word	0x0801d960
 8019e30:	0801d980 	.word	0x0801d980
 8019e34:	0801d940 	.word	0x0801d940

08019e38 <__register_exitproc>:
 8019e38:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8019e3c:	4d2c      	ldr	r5, [pc, #176]	; (8019ef0 <__register_exitproc+0xb8>)
 8019e3e:	682c      	ldr	r4, [r5, #0]
 8019e40:	4607      	mov	r7, r0
 8019e42:	460e      	mov	r6, r1
 8019e44:	4691      	mov	r9, r2
 8019e46:	4698      	mov	r8, r3
 8019e48:	b934      	cbnz	r4, 8019e58 <__register_exitproc+0x20>
 8019e4a:	4b2a      	ldr	r3, [pc, #168]	; (8019ef4 <__register_exitproc+0xbc>)
 8019e4c:	4c2a      	ldr	r4, [pc, #168]	; (8019ef8 <__register_exitproc+0xc0>)
 8019e4e:	602c      	str	r4, [r5, #0]
 8019e50:	b113      	cbz	r3, 8019e58 <__register_exitproc+0x20>
 8019e52:	681b      	ldr	r3, [r3, #0]
 8019e54:	f8c4 3088 	str.w	r3, [r4, #136]	; 0x88
 8019e58:	6863      	ldr	r3, [r4, #4]
 8019e5a:	2b1f      	cmp	r3, #31
 8019e5c:	dd3d      	ble.n	8019eda <__register_exitproc+0xa2>
 8019e5e:	4b27      	ldr	r3, [pc, #156]	; (8019efc <__register_exitproc+0xc4>)
 8019e60:	b91b      	cbnz	r3, 8019e6a <__register_exitproc+0x32>
 8019e62:	f04f 30ff 	mov.w	r0, #4294967295
 8019e66:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8019e6a:	208c      	movs	r0, #140	; 0x8c
 8019e6c:	f7ff fb3c 	bl	80194e8 <malloc>
 8019e70:	4604      	mov	r4, r0
 8019e72:	2800      	cmp	r0, #0
 8019e74:	d0f5      	beq.n	8019e62 <__register_exitproc+0x2a>
 8019e76:	2300      	movs	r3, #0
 8019e78:	682a      	ldr	r2, [r5, #0]
 8019e7a:	6002      	str	r2, [r0, #0]
 8019e7c:	6043      	str	r3, [r0, #4]
 8019e7e:	6028      	str	r0, [r5, #0]
 8019e80:	f8c0 3088 	str.w	r3, [r0, #136]	; 0x88
 8019e84:	b30f      	cbz	r7, 8019eca <__register_exitproc+0x92>
 8019e86:	f44f 7084 	mov.w	r0, #264	; 0x108
 8019e8a:	f7ff fb2d 	bl	80194e8 <malloc>
 8019e8e:	2800      	cmp	r0, #0
 8019e90:	d0e7      	beq.n	8019e62 <__register_exitproc+0x2a>
 8019e92:	2300      	movs	r3, #0
 8019e94:	f8c0 3100 	str.w	r3, [r0, #256]	; 0x100
 8019e98:	f8c0 3104 	str.w	r3, [r0, #260]	; 0x104
 8019e9c:	f8c4 0088 	str.w	r0, [r4, #136]	; 0x88
 8019ea0:	6862      	ldr	r2, [r4, #4]
 8019ea2:	f840 9022 	str.w	r9, [r0, r2, lsl #2]
 8019ea6:	2301      	movs	r3, #1
 8019ea8:	4093      	lsls	r3, r2
 8019eaa:	eb00 0182 	add.w	r1, r0, r2, lsl #2
 8019eae:	f8d0 2100 	ldr.w	r2, [r0, #256]	; 0x100
 8019eb2:	431a      	orrs	r2, r3
 8019eb4:	2f02      	cmp	r7, #2
 8019eb6:	f8c0 2100 	str.w	r2, [r0, #256]	; 0x100
 8019eba:	f8c1 8080 	str.w	r8, [r1, #128]	; 0x80
 8019ebe:	bf02      	ittt	eq
 8019ec0:	f8d0 2104 	ldreq.w	r2, [r0, #260]	; 0x104
 8019ec4:	4313      	orreq	r3, r2
 8019ec6:	f8c0 3104 	streq.w	r3, [r0, #260]	; 0x104
 8019eca:	6863      	ldr	r3, [r4, #4]
 8019ecc:	1c5a      	adds	r2, r3, #1
 8019ece:	3302      	adds	r3, #2
 8019ed0:	6062      	str	r2, [r4, #4]
 8019ed2:	2000      	movs	r0, #0
 8019ed4:	f844 6023 	str.w	r6, [r4, r3, lsl #2]
 8019ed8:	e7c5      	b.n	8019e66 <__register_exitproc+0x2e>
 8019eda:	2f00      	cmp	r7, #0
 8019edc:	d0f5      	beq.n	8019eca <__register_exitproc+0x92>
 8019ede:	f8d4 0088 	ldr.w	r0, [r4, #136]	; 0x88
 8019ee2:	2800      	cmp	r0, #0
 8019ee4:	d1dc      	bne.n	8019ea0 <__register_exitproc+0x68>
 8019ee6:	4b05      	ldr	r3, [pc, #20]	; (8019efc <__register_exitproc+0xc4>)
 8019ee8:	2b00      	cmp	r3, #0
 8019eea:	d0ba      	beq.n	8019e62 <__register_exitproc+0x2a>
 8019eec:	e7cb      	b.n	8019e86 <__register_exitproc+0x4e>
 8019eee:	bf00      	nop
 8019ef0:	20012440 	.word	0x20012440
 8019ef4:	0801d93c 	.word	0x0801d93c
 8019ef8:	200123b4 	.word	0x200123b4
 8019efc:	080194e9 	.word	0x080194e9

08019f00 <__sflush_r>:
 8019f00:	898a      	ldrh	r2, [r1, #12]
 8019f02:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8019f06:	4605      	mov	r5, r0
 8019f08:	0710      	lsls	r0, r2, #28
 8019f0a:	460c      	mov	r4, r1
 8019f0c:	d458      	bmi.n	8019fc0 <__sflush_r+0xc0>
 8019f0e:	684b      	ldr	r3, [r1, #4]
 8019f10:	2b00      	cmp	r3, #0
 8019f12:	dc05      	bgt.n	8019f20 <__sflush_r+0x20>
 8019f14:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 8019f16:	2b00      	cmp	r3, #0
 8019f18:	dc02      	bgt.n	8019f20 <__sflush_r+0x20>
 8019f1a:	2000      	movs	r0, #0
 8019f1c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8019f20:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8019f22:	2e00      	cmp	r6, #0
 8019f24:	d0f9      	beq.n	8019f1a <__sflush_r+0x1a>
 8019f26:	2300      	movs	r3, #0
 8019f28:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 8019f2c:	682f      	ldr	r7, [r5, #0]
 8019f2e:	6a21      	ldr	r1, [r4, #32]
 8019f30:	602b      	str	r3, [r5, #0]
 8019f32:	d032      	beq.n	8019f9a <__sflush_r+0x9a>
 8019f34:	6d60      	ldr	r0, [r4, #84]	; 0x54
 8019f36:	89a3      	ldrh	r3, [r4, #12]
 8019f38:	075a      	lsls	r2, r3, #29
 8019f3a:	d505      	bpl.n	8019f48 <__sflush_r+0x48>
 8019f3c:	6863      	ldr	r3, [r4, #4]
 8019f3e:	1ac0      	subs	r0, r0, r3
 8019f40:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8019f42:	b10b      	cbz	r3, 8019f48 <__sflush_r+0x48>
 8019f44:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8019f46:	1ac0      	subs	r0, r0, r3
 8019f48:	2300      	movs	r3, #0
 8019f4a:	4602      	mov	r2, r0
 8019f4c:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8019f4e:	6a21      	ldr	r1, [r4, #32]
 8019f50:	4628      	mov	r0, r5
 8019f52:	47b0      	blx	r6
 8019f54:	1c43      	adds	r3, r0, #1
 8019f56:	89a3      	ldrh	r3, [r4, #12]
 8019f58:	d106      	bne.n	8019f68 <__sflush_r+0x68>
 8019f5a:	6829      	ldr	r1, [r5, #0]
 8019f5c:	291d      	cmp	r1, #29
 8019f5e:	d848      	bhi.n	8019ff2 <__sflush_r+0xf2>
 8019f60:	4a29      	ldr	r2, [pc, #164]	; (801a008 <__sflush_r+0x108>)
 8019f62:	40ca      	lsrs	r2, r1
 8019f64:	07d6      	lsls	r6, r2, #31
 8019f66:	d544      	bpl.n	8019ff2 <__sflush_r+0xf2>
 8019f68:	2200      	movs	r2, #0
 8019f6a:	6062      	str	r2, [r4, #4]
 8019f6c:	04d9      	lsls	r1, r3, #19
 8019f6e:	6922      	ldr	r2, [r4, #16]
 8019f70:	6022      	str	r2, [r4, #0]
 8019f72:	d504      	bpl.n	8019f7e <__sflush_r+0x7e>
 8019f74:	1c42      	adds	r2, r0, #1
 8019f76:	d101      	bne.n	8019f7c <__sflush_r+0x7c>
 8019f78:	682b      	ldr	r3, [r5, #0]
 8019f7a:	b903      	cbnz	r3, 8019f7e <__sflush_r+0x7e>
 8019f7c:	6560      	str	r0, [r4, #84]	; 0x54
 8019f7e:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8019f80:	602f      	str	r7, [r5, #0]
 8019f82:	2900      	cmp	r1, #0
 8019f84:	d0c9      	beq.n	8019f1a <__sflush_r+0x1a>
 8019f86:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8019f8a:	4299      	cmp	r1, r3
 8019f8c:	d002      	beq.n	8019f94 <__sflush_r+0x94>
 8019f8e:	4628      	mov	r0, r5
 8019f90:	f7ff face 	bl	8019530 <_free_r>
 8019f94:	2000      	movs	r0, #0
 8019f96:	6360      	str	r0, [r4, #52]	; 0x34
 8019f98:	e7c0      	b.n	8019f1c <__sflush_r+0x1c>
 8019f9a:	2301      	movs	r3, #1
 8019f9c:	4628      	mov	r0, r5
 8019f9e:	47b0      	blx	r6
 8019fa0:	1c41      	adds	r1, r0, #1
 8019fa2:	d1c8      	bne.n	8019f36 <__sflush_r+0x36>
 8019fa4:	682b      	ldr	r3, [r5, #0]
 8019fa6:	2b00      	cmp	r3, #0
 8019fa8:	d0c5      	beq.n	8019f36 <__sflush_r+0x36>
 8019faa:	2b1d      	cmp	r3, #29
 8019fac:	d001      	beq.n	8019fb2 <__sflush_r+0xb2>
 8019fae:	2b16      	cmp	r3, #22
 8019fb0:	d101      	bne.n	8019fb6 <__sflush_r+0xb6>
 8019fb2:	602f      	str	r7, [r5, #0]
 8019fb4:	e7b1      	b.n	8019f1a <__sflush_r+0x1a>
 8019fb6:	89a3      	ldrh	r3, [r4, #12]
 8019fb8:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8019fbc:	81a3      	strh	r3, [r4, #12]
 8019fbe:	e7ad      	b.n	8019f1c <__sflush_r+0x1c>
 8019fc0:	690f      	ldr	r7, [r1, #16]
 8019fc2:	2f00      	cmp	r7, #0
 8019fc4:	d0a9      	beq.n	8019f1a <__sflush_r+0x1a>
 8019fc6:	0793      	lsls	r3, r2, #30
 8019fc8:	680e      	ldr	r6, [r1, #0]
 8019fca:	bf08      	it	eq
 8019fcc:	694b      	ldreq	r3, [r1, #20]
 8019fce:	600f      	str	r7, [r1, #0]
 8019fd0:	bf18      	it	ne
 8019fd2:	2300      	movne	r3, #0
 8019fd4:	eba6 0807 	sub.w	r8, r6, r7
 8019fd8:	608b      	str	r3, [r1, #8]
 8019fda:	f1b8 0f00 	cmp.w	r8, #0
 8019fde:	dd9c      	ble.n	8019f1a <__sflush_r+0x1a>
 8019fe0:	4643      	mov	r3, r8
 8019fe2:	463a      	mov	r2, r7
 8019fe4:	6a21      	ldr	r1, [r4, #32]
 8019fe6:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 8019fe8:	4628      	mov	r0, r5
 8019fea:	47b0      	blx	r6
 8019fec:	2800      	cmp	r0, #0
 8019fee:	dc06      	bgt.n	8019ffe <__sflush_r+0xfe>
 8019ff0:	89a3      	ldrh	r3, [r4, #12]
 8019ff2:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8019ff6:	81a3      	strh	r3, [r4, #12]
 8019ff8:	f04f 30ff 	mov.w	r0, #4294967295
 8019ffc:	e78e      	b.n	8019f1c <__sflush_r+0x1c>
 8019ffe:	4407      	add	r7, r0
 801a000:	eba8 0800 	sub.w	r8, r8, r0
 801a004:	e7e9      	b.n	8019fda <__sflush_r+0xda>
 801a006:	bf00      	nop
 801a008:	20400001 	.word	0x20400001

0801a00c <_fflush_r>:
 801a00c:	b538      	push	{r3, r4, r5, lr}
 801a00e:	690b      	ldr	r3, [r1, #16]
 801a010:	4605      	mov	r5, r0
 801a012:	460c      	mov	r4, r1
 801a014:	b1db      	cbz	r3, 801a04e <_fflush_r+0x42>
 801a016:	b118      	cbz	r0, 801a020 <_fflush_r+0x14>
 801a018:	6983      	ldr	r3, [r0, #24]
 801a01a:	b90b      	cbnz	r3, 801a020 <_fflush_r+0x14>
 801a01c:	f000 f860 	bl	801a0e0 <__sinit>
 801a020:	4b0c      	ldr	r3, [pc, #48]	; (801a054 <_fflush_r+0x48>)
 801a022:	429c      	cmp	r4, r3
 801a024:	d109      	bne.n	801a03a <_fflush_r+0x2e>
 801a026:	686c      	ldr	r4, [r5, #4]
 801a028:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 801a02c:	b17b      	cbz	r3, 801a04e <_fflush_r+0x42>
 801a02e:	4621      	mov	r1, r4
 801a030:	4628      	mov	r0, r5
 801a032:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 801a036:	f7ff bf63 	b.w	8019f00 <__sflush_r>
 801a03a:	4b07      	ldr	r3, [pc, #28]	; (801a058 <_fflush_r+0x4c>)
 801a03c:	429c      	cmp	r4, r3
 801a03e:	d101      	bne.n	801a044 <_fflush_r+0x38>
 801a040:	68ac      	ldr	r4, [r5, #8]
 801a042:	e7f1      	b.n	801a028 <_fflush_r+0x1c>
 801a044:	4b05      	ldr	r3, [pc, #20]	; (801a05c <_fflush_r+0x50>)
 801a046:	429c      	cmp	r4, r3
 801a048:	bf08      	it	eq
 801a04a:	68ec      	ldreq	r4, [r5, #12]
 801a04c:	e7ec      	b.n	801a028 <_fflush_r+0x1c>
 801a04e:	2000      	movs	r0, #0
 801a050:	bd38      	pop	{r3, r4, r5, pc}
 801a052:	bf00      	nop
 801a054:	0801d960 	.word	0x0801d960
 801a058:	0801d980 	.word	0x0801d980
 801a05c:	0801d940 	.word	0x0801d940

0801a060 <std>:
 801a060:	2300      	movs	r3, #0
 801a062:	b510      	push	{r4, lr}
 801a064:	4604      	mov	r4, r0
 801a066:	e9c0 3300 	strd	r3, r3, [r0]
 801a06a:	6083      	str	r3, [r0, #8]
 801a06c:	8181      	strh	r1, [r0, #12]
 801a06e:	6643      	str	r3, [r0, #100]	; 0x64
 801a070:	81c2      	strh	r2, [r0, #14]
 801a072:	e9c0 3304 	strd	r3, r3, [r0, #16]
 801a076:	6183      	str	r3, [r0, #24]
 801a078:	4619      	mov	r1, r3
 801a07a:	2208      	movs	r2, #8
 801a07c:	305c      	adds	r0, #92	; 0x5c
 801a07e:	f7ff fa4e 	bl	801951e <memset>
 801a082:	4b05      	ldr	r3, [pc, #20]	; (801a098 <std+0x38>)
 801a084:	6263      	str	r3, [r4, #36]	; 0x24
 801a086:	4b05      	ldr	r3, [pc, #20]	; (801a09c <std+0x3c>)
 801a088:	62a3      	str	r3, [r4, #40]	; 0x28
 801a08a:	4b05      	ldr	r3, [pc, #20]	; (801a0a0 <std+0x40>)
 801a08c:	62e3      	str	r3, [r4, #44]	; 0x2c
 801a08e:	4b05      	ldr	r3, [pc, #20]	; (801a0a4 <std+0x44>)
 801a090:	6224      	str	r4, [r4, #32]
 801a092:	6323      	str	r3, [r4, #48]	; 0x30
 801a094:	bd10      	pop	{r4, pc}
 801a096:	bf00      	nop
 801a098:	0801a2c1 	.word	0x0801a2c1
 801a09c:	0801a2e3 	.word	0x0801a2e3
 801a0a0:	0801a31b 	.word	0x0801a31b
 801a0a4:	0801a33f 	.word	0x0801a33f

0801a0a8 <_cleanup_r>:
 801a0a8:	4901      	ldr	r1, [pc, #4]	; (801a0b0 <_cleanup_r+0x8>)
 801a0aa:	f000 b885 	b.w	801a1b8 <_fwalk_reent>
 801a0ae:	bf00      	nop
 801a0b0:	0801a00d 	.word	0x0801a00d

0801a0b4 <__sfmoreglue>:
 801a0b4:	b570      	push	{r4, r5, r6, lr}
 801a0b6:	1e4a      	subs	r2, r1, #1
 801a0b8:	2568      	movs	r5, #104	; 0x68
 801a0ba:	4355      	muls	r5, r2
 801a0bc:	460e      	mov	r6, r1
 801a0be:	f105 0174 	add.w	r1, r5, #116	; 0x74
 801a0c2:	f7ff fa83 	bl	80195cc <_malloc_r>
 801a0c6:	4604      	mov	r4, r0
 801a0c8:	b140      	cbz	r0, 801a0dc <__sfmoreglue+0x28>
 801a0ca:	2100      	movs	r1, #0
 801a0cc:	e9c0 1600 	strd	r1, r6, [r0]
 801a0d0:	300c      	adds	r0, #12
 801a0d2:	60a0      	str	r0, [r4, #8]
 801a0d4:	f105 0268 	add.w	r2, r5, #104	; 0x68
 801a0d8:	f7ff fa21 	bl	801951e <memset>
 801a0dc:	4620      	mov	r0, r4
 801a0de:	bd70      	pop	{r4, r5, r6, pc}

0801a0e0 <__sinit>:
 801a0e0:	6983      	ldr	r3, [r0, #24]
 801a0e2:	b510      	push	{r4, lr}
 801a0e4:	4604      	mov	r4, r0
 801a0e6:	bb33      	cbnz	r3, 801a136 <__sinit+0x56>
 801a0e8:	e9c0 3312 	strd	r3, r3, [r0, #72]	; 0x48
 801a0ec:	6503      	str	r3, [r0, #80]	; 0x50
 801a0ee:	4b12      	ldr	r3, [pc, #72]	; (801a138 <__sinit+0x58>)
 801a0f0:	4a12      	ldr	r2, [pc, #72]	; (801a13c <__sinit+0x5c>)
 801a0f2:	681b      	ldr	r3, [r3, #0]
 801a0f4:	6282      	str	r2, [r0, #40]	; 0x28
 801a0f6:	4298      	cmp	r0, r3
 801a0f8:	bf04      	itt	eq
 801a0fa:	2301      	moveq	r3, #1
 801a0fc:	6183      	streq	r3, [r0, #24]
 801a0fe:	f000 f81f 	bl	801a140 <__sfp>
 801a102:	6060      	str	r0, [r4, #4]
 801a104:	4620      	mov	r0, r4
 801a106:	f000 f81b 	bl	801a140 <__sfp>
 801a10a:	60a0      	str	r0, [r4, #8]
 801a10c:	4620      	mov	r0, r4
 801a10e:	f000 f817 	bl	801a140 <__sfp>
 801a112:	2200      	movs	r2, #0
 801a114:	60e0      	str	r0, [r4, #12]
 801a116:	2104      	movs	r1, #4
 801a118:	6860      	ldr	r0, [r4, #4]
 801a11a:	f7ff ffa1 	bl	801a060 <std>
 801a11e:	2201      	movs	r2, #1
 801a120:	2109      	movs	r1, #9
 801a122:	68a0      	ldr	r0, [r4, #8]
 801a124:	f7ff ff9c 	bl	801a060 <std>
 801a128:	2202      	movs	r2, #2
 801a12a:	2112      	movs	r1, #18
 801a12c:	68e0      	ldr	r0, [r4, #12]
 801a12e:	f7ff ff97 	bl	801a060 <std>
 801a132:	2301      	movs	r3, #1
 801a134:	61a3      	str	r3, [r4, #24]
 801a136:	bd10      	pop	{r4, pc}
 801a138:	0801d904 	.word	0x0801d904
 801a13c:	0801a0a9 	.word	0x0801a0a9

0801a140 <__sfp>:
 801a140:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801a142:	4b1b      	ldr	r3, [pc, #108]	; (801a1b0 <__sfp+0x70>)
 801a144:	681e      	ldr	r6, [r3, #0]
 801a146:	69b3      	ldr	r3, [r6, #24]
 801a148:	4607      	mov	r7, r0
 801a14a:	b913      	cbnz	r3, 801a152 <__sfp+0x12>
 801a14c:	4630      	mov	r0, r6
 801a14e:	f7ff ffc7 	bl	801a0e0 <__sinit>
 801a152:	3648      	adds	r6, #72	; 0x48
 801a154:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 801a158:	3b01      	subs	r3, #1
 801a15a:	d503      	bpl.n	801a164 <__sfp+0x24>
 801a15c:	6833      	ldr	r3, [r6, #0]
 801a15e:	b133      	cbz	r3, 801a16e <__sfp+0x2e>
 801a160:	6836      	ldr	r6, [r6, #0]
 801a162:	e7f7      	b.n	801a154 <__sfp+0x14>
 801a164:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 801a168:	b16d      	cbz	r5, 801a186 <__sfp+0x46>
 801a16a:	3468      	adds	r4, #104	; 0x68
 801a16c:	e7f4      	b.n	801a158 <__sfp+0x18>
 801a16e:	2104      	movs	r1, #4
 801a170:	4638      	mov	r0, r7
 801a172:	f7ff ff9f 	bl	801a0b4 <__sfmoreglue>
 801a176:	6030      	str	r0, [r6, #0]
 801a178:	2800      	cmp	r0, #0
 801a17a:	d1f1      	bne.n	801a160 <__sfp+0x20>
 801a17c:	230c      	movs	r3, #12
 801a17e:	603b      	str	r3, [r7, #0]
 801a180:	4604      	mov	r4, r0
 801a182:	4620      	mov	r0, r4
 801a184:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801a186:	4b0b      	ldr	r3, [pc, #44]	; (801a1b4 <__sfp+0x74>)
 801a188:	6665      	str	r5, [r4, #100]	; 0x64
 801a18a:	e9c4 5500 	strd	r5, r5, [r4]
 801a18e:	60a5      	str	r5, [r4, #8]
 801a190:	e9c4 3503 	strd	r3, r5, [r4, #12]
 801a194:	e9c4 5505 	strd	r5, r5, [r4, #20]
 801a198:	2208      	movs	r2, #8
 801a19a:	4629      	mov	r1, r5
 801a19c:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 801a1a0:	f7ff f9bd 	bl	801951e <memset>
 801a1a4:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 801a1a8:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 801a1ac:	e7e9      	b.n	801a182 <__sfp+0x42>
 801a1ae:	bf00      	nop
 801a1b0:	0801d904 	.word	0x0801d904
 801a1b4:	ffff0001 	.word	0xffff0001

0801a1b8 <_fwalk_reent>:
 801a1b8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 801a1bc:	4680      	mov	r8, r0
 801a1be:	4689      	mov	r9, r1
 801a1c0:	f100 0448 	add.w	r4, r0, #72	; 0x48
 801a1c4:	2600      	movs	r6, #0
 801a1c6:	b914      	cbnz	r4, 801a1ce <_fwalk_reent+0x16>
 801a1c8:	4630      	mov	r0, r6
 801a1ca:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 801a1ce:	e9d4 7501 	ldrd	r7, r5, [r4, #4]
 801a1d2:	3f01      	subs	r7, #1
 801a1d4:	d501      	bpl.n	801a1da <_fwalk_reent+0x22>
 801a1d6:	6824      	ldr	r4, [r4, #0]
 801a1d8:	e7f5      	b.n	801a1c6 <_fwalk_reent+0xe>
 801a1da:	89ab      	ldrh	r3, [r5, #12]
 801a1dc:	2b01      	cmp	r3, #1
 801a1de:	d907      	bls.n	801a1f0 <_fwalk_reent+0x38>
 801a1e0:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 801a1e4:	3301      	adds	r3, #1
 801a1e6:	d003      	beq.n	801a1f0 <_fwalk_reent+0x38>
 801a1e8:	4629      	mov	r1, r5
 801a1ea:	4640      	mov	r0, r8
 801a1ec:	47c8      	blx	r9
 801a1ee:	4306      	orrs	r6, r0
 801a1f0:	3568      	adds	r5, #104	; 0x68
 801a1f2:	e7ee      	b.n	801a1d2 <_fwalk_reent+0x1a>

0801a1f4 <__swhatbuf_r>:
 801a1f4:	b570      	push	{r4, r5, r6, lr}
 801a1f6:	460e      	mov	r6, r1
 801a1f8:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 801a1fc:	2900      	cmp	r1, #0
 801a1fe:	b096      	sub	sp, #88	; 0x58
 801a200:	4614      	mov	r4, r2
 801a202:	461d      	mov	r5, r3
 801a204:	da07      	bge.n	801a216 <__swhatbuf_r+0x22>
 801a206:	2300      	movs	r3, #0
 801a208:	602b      	str	r3, [r5, #0]
 801a20a:	89b3      	ldrh	r3, [r6, #12]
 801a20c:	061a      	lsls	r2, r3, #24
 801a20e:	d410      	bmi.n	801a232 <__swhatbuf_r+0x3e>
 801a210:	f44f 6380 	mov.w	r3, #1024	; 0x400
 801a214:	e00e      	b.n	801a234 <__swhatbuf_r+0x40>
 801a216:	466a      	mov	r2, sp
 801a218:	f000 f8b8 	bl	801a38c <_fstat_r>
 801a21c:	2800      	cmp	r0, #0
 801a21e:	dbf2      	blt.n	801a206 <__swhatbuf_r+0x12>
 801a220:	9a01      	ldr	r2, [sp, #4]
 801a222:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 801a226:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 801a22a:	425a      	negs	r2, r3
 801a22c:	415a      	adcs	r2, r3
 801a22e:	602a      	str	r2, [r5, #0]
 801a230:	e7ee      	b.n	801a210 <__swhatbuf_r+0x1c>
 801a232:	2340      	movs	r3, #64	; 0x40
 801a234:	2000      	movs	r0, #0
 801a236:	6023      	str	r3, [r4, #0]
 801a238:	b016      	add	sp, #88	; 0x58
 801a23a:	bd70      	pop	{r4, r5, r6, pc}

0801a23c <__smakebuf_r>:
 801a23c:	898b      	ldrh	r3, [r1, #12]
 801a23e:	b573      	push	{r0, r1, r4, r5, r6, lr}
 801a240:	079d      	lsls	r5, r3, #30
 801a242:	4606      	mov	r6, r0
 801a244:	460c      	mov	r4, r1
 801a246:	d507      	bpl.n	801a258 <__smakebuf_r+0x1c>
 801a248:	f104 0347 	add.w	r3, r4, #71	; 0x47
 801a24c:	6023      	str	r3, [r4, #0]
 801a24e:	6123      	str	r3, [r4, #16]
 801a250:	2301      	movs	r3, #1
 801a252:	6163      	str	r3, [r4, #20]
 801a254:	b002      	add	sp, #8
 801a256:	bd70      	pop	{r4, r5, r6, pc}
 801a258:	ab01      	add	r3, sp, #4
 801a25a:	466a      	mov	r2, sp
 801a25c:	f7ff ffca 	bl	801a1f4 <__swhatbuf_r>
 801a260:	9900      	ldr	r1, [sp, #0]
 801a262:	4605      	mov	r5, r0
 801a264:	4630      	mov	r0, r6
 801a266:	f7ff f9b1 	bl	80195cc <_malloc_r>
 801a26a:	b948      	cbnz	r0, 801a280 <__smakebuf_r+0x44>
 801a26c:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 801a270:	059a      	lsls	r2, r3, #22
 801a272:	d4ef      	bmi.n	801a254 <__smakebuf_r+0x18>
 801a274:	f023 0303 	bic.w	r3, r3, #3
 801a278:	f043 0302 	orr.w	r3, r3, #2
 801a27c:	81a3      	strh	r3, [r4, #12]
 801a27e:	e7e3      	b.n	801a248 <__smakebuf_r+0xc>
 801a280:	4b0d      	ldr	r3, [pc, #52]	; (801a2b8 <__smakebuf_r+0x7c>)
 801a282:	62b3      	str	r3, [r6, #40]	; 0x28
 801a284:	89a3      	ldrh	r3, [r4, #12]
 801a286:	6020      	str	r0, [r4, #0]
 801a288:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 801a28c:	81a3      	strh	r3, [r4, #12]
 801a28e:	9b00      	ldr	r3, [sp, #0]
 801a290:	6163      	str	r3, [r4, #20]
 801a292:	9b01      	ldr	r3, [sp, #4]
 801a294:	6120      	str	r0, [r4, #16]
 801a296:	b15b      	cbz	r3, 801a2b0 <__smakebuf_r+0x74>
 801a298:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 801a29c:	4630      	mov	r0, r6
 801a29e:	f000 f887 	bl	801a3b0 <_isatty_r>
 801a2a2:	b128      	cbz	r0, 801a2b0 <__smakebuf_r+0x74>
 801a2a4:	89a3      	ldrh	r3, [r4, #12]
 801a2a6:	f023 0303 	bic.w	r3, r3, #3
 801a2aa:	f043 0301 	orr.w	r3, r3, #1
 801a2ae:	81a3      	strh	r3, [r4, #12]
 801a2b0:	89a3      	ldrh	r3, [r4, #12]
 801a2b2:	431d      	orrs	r5, r3
 801a2b4:	81a5      	strh	r5, [r4, #12]
 801a2b6:	e7cd      	b.n	801a254 <__smakebuf_r+0x18>
 801a2b8:	0801a0a9 	.word	0x0801a0a9

0801a2bc <__malloc_lock>:
 801a2bc:	4770      	bx	lr

0801a2be <__malloc_unlock>:
 801a2be:	4770      	bx	lr

0801a2c0 <__sread>:
 801a2c0:	b510      	push	{r4, lr}
 801a2c2:	460c      	mov	r4, r1
 801a2c4:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 801a2c8:	f000 f894 	bl	801a3f4 <_read_r>
 801a2cc:	2800      	cmp	r0, #0
 801a2ce:	bfab      	itete	ge
 801a2d0:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 801a2d2:	89a3      	ldrhlt	r3, [r4, #12]
 801a2d4:	181b      	addge	r3, r3, r0
 801a2d6:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 801a2da:	bfac      	ite	ge
 801a2dc:	6563      	strge	r3, [r4, #84]	; 0x54
 801a2de:	81a3      	strhlt	r3, [r4, #12]
 801a2e0:	bd10      	pop	{r4, pc}

0801a2e2 <__swrite>:
 801a2e2:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801a2e6:	461f      	mov	r7, r3
 801a2e8:	898b      	ldrh	r3, [r1, #12]
 801a2ea:	05db      	lsls	r3, r3, #23
 801a2ec:	4605      	mov	r5, r0
 801a2ee:	460c      	mov	r4, r1
 801a2f0:	4616      	mov	r6, r2
 801a2f2:	d505      	bpl.n	801a300 <__swrite+0x1e>
 801a2f4:	2302      	movs	r3, #2
 801a2f6:	2200      	movs	r2, #0
 801a2f8:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 801a2fc:	f000 f868 	bl	801a3d0 <_lseek_r>
 801a300:	89a3      	ldrh	r3, [r4, #12]
 801a302:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 801a306:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 801a30a:	81a3      	strh	r3, [r4, #12]
 801a30c:	4632      	mov	r2, r6
 801a30e:	463b      	mov	r3, r7
 801a310:	4628      	mov	r0, r5
 801a312:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 801a316:	f000 b817 	b.w	801a348 <_write_r>

0801a31a <__sseek>:
 801a31a:	b510      	push	{r4, lr}
 801a31c:	460c      	mov	r4, r1
 801a31e:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 801a322:	f000 f855 	bl	801a3d0 <_lseek_r>
 801a326:	1c43      	adds	r3, r0, #1
 801a328:	89a3      	ldrh	r3, [r4, #12]
 801a32a:	bf15      	itete	ne
 801a32c:	6560      	strne	r0, [r4, #84]	; 0x54
 801a32e:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 801a332:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 801a336:	81a3      	strheq	r3, [r4, #12]
 801a338:	bf18      	it	ne
 801a33a:	81a3      	strhne	r3, [r4, #12]
 801a33c:	bd10      	pop	{r4, pc}

0801a33e <__sclose>:
 801a33e:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 801a342:	f000 b813 	b.w	801a36c <_close_r>
	...

0801a348 <_write_r>:
 801a348:	b538      	push	{r3, r4, r5, lr}
 801a34a:	4c07      	ldr	r4, [pc, #28]	; (801a368 <_write_r+0x20>)
 801a34c:	4605      	mov	r5, r0
 801a34e:	4608      	mov	r0, r1
 801a350:	4611      	mov	r1, r2
 801a352:	2200      	movs	r2, #0
 801a354:	6022      	str	r2, [r4, #0]
 801a356:	461a      	mov	r2, r3
 801a358:	f7e8 fb04 	bl	8002964 <_write>
 801a35c:	1c43      	adds	r3, r0, #1
 801a35e:	d102      	bne.n	801a366 <_write_r+0x1e>
 801a360:	6823      	ldr	r3, [r4, #0]
 801a362:	b103      	cbz	r3, 801a366 <_write_r+0x1e>
 801a364:	602b      	str	r3, [r5, #0]
 801a366:	bd38      	pop	{r3, r4, r5, pc}
 801a368:	2001297c 	.word	0x2001297c

0801a36c <_close_r>:
 801a36c:	b538      	push	{r3, r4, r5, lr}
 801a36e:	4c06      	ldr	r4, [pc, #24]	; (801a388 <_close_r+0x1c>)
 801a370:	2300      	movs	r3, #0
 801a372:	4605      	mov	r5, r0
 801a374:	4608      	mov	r0, r1
 801a376:	6023      	str	r3, [r4, #0]
 801a378:	f7e8 fb02 	bl	8002980 <_close>
 801a37c:	1c43      	adds	r3, r0, #1
 801a37e:	d102      	bne.n	801a386 <_close_r+0x1a>
 801a380:	6823      	ldr	r3, [r4, #0]
 801a382:	b103      	cbz	r3, 801a386 <_close_r+0x1a>
 801a384:	602b      	str	r3, [r5, #0]
 801a386:	bd38      	pop	{r3, r4, r5, pc}
 801a388:	2001297c 	.word	0x2001297c

0801a38c <_fstat_r>:
 801a38c:	b538      	push	{r3, r4, r5, lr}
 801a38e:	4c07      	ldr	r4, [pc, #28]	; (801a3ac <_fstat_r+0x20>)
 801a390:	2300      	movs	r3, #0
 801a392:	4605      	mov	r5, r0
 801a394:	4608      	mov	r0, r1
 801a396:	4611      	mov	r1, r2
 801a398:	6023      	str	r3, [r4, #0]
 801a39a:	f7e8 faf4 	bl	8002986 <_fstat>
 801a39e:	1c43      	adds	r3, r0, #1
 801a3a0:	d102      	bne.n	801a3a8 <_fstat_r+0x1c>
 801a3a2:	6823      	ldr	r3, [r4, #0]
 801a3a4:	b103      	cbz	r3, 801a3a8 <_fstat_r+0x1c>
 801a3a6:	602b      	str	r3, [r5, #0]
 801a3a8:	bd38      	pop	{r3, r4, r5, pc}
 801a3aa:	bf00      	nop
 801a3ac:	2001297c 	.word	0x2001297c

0801a3b0 <_isatty_r>:
 801a3b0:	b538      	push	{r3, r4, r5, lr}
 801a3b2:	4c06      	ldr	r4, [pc, #24]	; (801a3cc <_isatty_r+0x1c>)
 801a3b4:	2300      	movs	r3, #0
 801a3b6:	4605      	mov	r5, r0
 801a3b8:	4608      	mov	r0, r1
 801a3ba:	6023      	str	r3, [r4, #0]
 801a3bc:	f7e8 fae8 	bl	8002990 <_isatty>
 801a3c0:	1c43      	adds	r3, r0, #1
 801a3c2:	d102      	bne.n	801a3ca <_isatty_r+0x1a>
 801a3c4:	6823      	ldr	r3, [r4, #0]
 801a3c6:	b103      	cbz	r3, 801a3ca <_isatty_r+0x1a>
 801a3c8:	602b      	str	r3, [r5, #0]
 801a3ca:	bd38      	pop	{r3, r4, r5, pc}
 801a3cc:	2001297c 	.word	0x2001297c

0801a3d0 <_lseek_r>:
 801a3d0:	b538      	push	{r3, r4, r5, lr}
 801a3d2:	4c07      	ldr	r4, [pc, #28]	; (801a3f0 <_lseek_r+0x20>)
 801a3d4:	4605      	mov	r5, r0
 801a3d6:	4608      	mov	r0, r1
 801a3d8:	4611      	mov	r1, r2
 801a3da:	2200      	movs	r2, #0
 801a3dc:	6022      	str	r2, [r4, #0]
 801a3de:	461a      	mov	r2, r3
 801a3e0:	f7e8 fad8 	bl	8002994 <_lseek>
 801a3e4:	1c43      	adds	r3, r0, #1
 801a3e6:	d102      	bne.n	801a3ee <_lseek_r+0x1e>
 801a3e8:	6823      	ldr	r3, [r4, #0]
 801a3ea:	b103      	cbz	r3, 801a3ee <_lseek_r+0x1e>
 801a3ec:	602b      	str	r3, [r5, #0]
 801a3ee:	bd38      	pop	{r3, r4, r5, pc}
 801a3f0:	2001297c 	.word	0x2001297c

0801a3f4 <_read_r>:
 801a3f4:	b538      	push	{r3, r4, r5, lr}
 801a3f6:	4c07      	ldr	r4, [pc, #28]	; (801a414 <_read_r+0x20>)
 801a3f8:	4605      	mov	r5, r0
 801a3fa:	4608      	mov	r0, r1
 801a3fc:	4611      	mov	r1, r2
 801a3fe:	2200      	movs	r2, #0
 801a400:	6022      	str	r2, [r4, #0]
 801a402:	461a      	mov	r2, r3
 801a404:	f7e8 faa0 	bl	8002948 <_read>
 801a408:	1c43      	adds	r3, r0, #1
 801a40a:	d102      	bne.n	801a412 <_read_r+0x1e>
 801a40c:	6823      	ldr	r3, [r4, #0]
 801a40e:	b103      	cbz	r3, 801a412 <_read_r+0x1e>
 801a410:	602b      	str	r3, [r5, #0]
 801a412:	bd38      	pop	{r3, r4, r5, pc}
 801a414:	2001297c 	.word	0x2001297c

0801a418 <_init>:
 801a418:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801a41a:	bf00      	nop
 801a41c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 801a41e:	bc08      	pop	{r3}
 801a420:	469e      	mov	lr, r3
 801a422:	4770      	bx	lr

0801a424 <_fini>:
 801a424:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801a426:	bf00      	nop
 801a428:	bcf8      	pop	{r3, r4, r5, r6, r7}
 801a42a:	bc08      	pop	{r3}
 801a42c:	469e      	mov	lr, r3
 801a42e:	4770      	bx	lr
